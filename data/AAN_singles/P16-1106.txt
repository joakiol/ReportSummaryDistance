Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, pages 1117?1126,Berlin, Germany, August 7-12, 2016.c?2016 Association for Computational LinguisticsA short proof that O2is an MCFLMark-Jan NederhofSchool of Computer ScienceUniversity of St Andrews, UKAbstractWe present a new proof that O2is a mul-tiple context-free language.
It contrastswith a recent proof by Salvati (2015) in itsavoidance of concepts that seem specificto two-dimensional geometry, such as thecomplex exponential function.
Our simpleproof creates realistic prospects of widen-ing the results to higher dimensions.
Thisfinding is of central importance to the rela-tion between extreme free word order andclasses of grammars used to describe thesyntax of natural language.1 IntroductionThe alphabet of the MIX language has three sym-bols, a, b and c. A string is in the language if andonly if the number of a?s, the number of b?s, andthe number of c?s are all the same.
A differentway of defining the MIX language is as permu-tation closure of the regular language (abc)?, asnoted by Bach (1981); see also Pullum (1983).If a, b and c represent, say, a transitive verband its subject and its object, then a string inMIX represents a sentence with any number oftriples of these constituents, in a hypothetical lan-guage with extreme free word order.
This is ad-mittedly rather unlike any actual natural language.Joshi (1985) argued that because of this, grammat-ical formalisms for describing natural languagesshould not be capable of generating MIX.
He alsoconjectured that MIX was beyond the generativecapacity of one particular formalism, namely thetree adjoining grammars.
Several decades passedbefore Kanazawa and Salvati (2012) finally provedthis conjecture.MIX has been studied in the context of severalother formalisms.
Joshi et al (1991) showed thatMIX is generated by a generalization of tree ad-joining grammars that decouples local dominationfor linear precedence.
Boullier (1999) showed thatMIX is generated by a range concatenation gram-mar.
Negative results were addressed by Sorokin(2014) for well-nested multiple context-free gram-mars, and by Capelletti and Tamburini (2009) for aclass of categorial grammars.
The MIX languageis also of interest outside of computational linguis-tics, e.g.
in computational group theory (Gilman,2005).A considerable advance in the understandingof the MIX language is due to Salvati (2015),who showed that MIX is generated by a multiplecontext-free grammar (MCFG).
The main part ofthe proof shows that the language O2is generatedby a MCFG.
This language has four symbols, a, a,b and b.
A string is in the language if and only ifthe number of a?s equals the number of a?s, and thenumber of b?s equals the number of b?s.
MIX andO2are rationally equivalent, which means that ifone is generated by a multiple context-free gram-mar, then so is the other.The proof by Salvati (2015) is remarkable, inthat it is one of the few examples of geometry be-ing used to prove a statement about formal lan-guages.
The proof has two related disadvantageshowever.
The first is that a key element of theproof, that of the complex exponential function, isnot immediately understood without backgroundin geometry.
The second is that this also seemsto restrict the proof technique to two dimensions,and there is no obvious avenue to generalize theresult to a variant of MIX with four or five sym-bols.
We hope to remedy this by an alternative,self-contained proof that avoids the complex expo-nential function.
The core idea is a straightforwardnormalization of paths in two dimensions, whichallow simple arguments to lead to a proof by con-tradiction.
We also sketch part of a possible proofin three dimensions.1117S(abababba)R(ababab, ba)R(ab, ab)R(a, a)R(b, b)R(ab, ba)R(a, a)R(b, b)(1)(4)(2) (3)(6)(9)(7)(9)Figure 1: Derivation in G. The numbers indicatethe rules that were used.2 Initial problemThe MCFG G is defined as:S(xy) ?
R(x, y) (1)R(xp, yq) ?
R(x, y) R(p, q) (2)R(xp, qy) ?
R(x, y) R(p, q) (3)R(xpy, q) ?
R(x, y) R(p, q) (4)R(p, xqy) ?
R(x, y) R(p, q) (5)R(a, a) ?
(6)R(a, a) ?
(7)R(b, b) ?
(8)R(b, b) ?
(9)R(?, ?)
?
(10)For the meaning of MCFGs in general, see Sekiet al (1991); for a closely related formalism, seeVijay-Shanker et al (1987); see Kallmeyer (2010)for an overview of mildly context-sensitive gram-mar formalisms.The reader unfamiliar with this literature is en-couraged to interpret the rules of the grammar aslogical implications, with S and R representingpredicates.
There is an implicit conjunction be-tween the two occurrences of R in the right-handside of each of the rules (2) ?
(5).
The symbolsx, y, p, q are string-valued variables, with implicituniversal quantification that has scope over bothleft-hand side and right-hand side of a rule.
Therules (6) ?
(10) act as axioms.
The symbols a, a,b, b are terminals, and ?
denotes the empty string.We can derive S(x) for certain strings x, andR(x, y) for certain strings x and y.
Figure 1presents an example of a derivation.
The languagegenerated by G is the set L of strings x such thatS(x) can be derived.By induction on the depth of derivations, onecan show that if R(x, y), for strings x and y, thenxy ?
O2.
Thereby, if S(x) then x ?
O2, whichmeans L ?
O2.
The task ahead is to prove that ifxy ?
O2, for some x and y, then R(x, y).
Fromthis, L = O2then follows.Let |x| denote the length of string x.
For aninductive proof that xy ?
O2implies R(x, y),the base cases are as follows.
If xy ?
O2and|x| ?
1 and |y| ?
1, then trivially R(x, y) byrules (6) ?
(10).Furthermore, if we can prove that xy ?
O2,x 6= ?
and y 6= ?
together imply R(x, y), for|xy| = m, for some m, then we may also provethat x?y??
O2on its own implies R(x?, y?)
for|x?y?| = m. To see this, consider m > 0 andz ?
O2with |z| = m, and write it as z = xy forsome x 6= ?
and y 6= ?.
If by assumption R(x, y),then together with R(?, ?)
and rule (4) or (5) wemay derive R(xy, ?)
or R(?, xy), respectively.
Inthe light of this, the inductive step merely needs toshow that if for some x and y:?
xy ?
O2, |x| ?
1, |y| ?
1 and |xy| > 2, and?
pq ?
O2and |pq| < |xy| imply R(p, q), forall p and q,then alsoR(x, y).
One easy case is if x ?
O2(andthereby y ?
O2) because then we can write x =x1x2for some x16= ?
and x26= ?.
The induc-tive hypothesis states that R(x1, x2) and R(?, y),which imply R(x, y) using rule (4).A second easy case is if x or y has a proper pre-fix or proper suffix that is in O2.
For example,assume there are z16= ?
and z26= ?
such thatx = z1z2and z1?
O2.
Then we can use theinductive hypothesis on R(z1, ?)
and R(z2, y), to-gether with rule (2).At this time, the reader may wish to read Fig-ure 1 from the root downward.
First, abababba isdivided into a pair of strings, namely ababab andba.
At each branching node in the derivation, apair of strings is divided into four strings, whichare grouped into two pairs of strings, using rules(2) ?
(5), read from left to right.
Rules (2) and(3) divide each left-hand side argument into twoparts.
Rule (4) divides the first left-hand side ar-gument into three parts, and rule (5) divides thesecond left-hand side argument into three parts.What remains to show is that if z1z2?
O2, z1/?O2and |z1z2| > 2, and no proper prefix or propersuffix of z1or of z2is in O2, then there is at least1118one rule that allows us to divide z1and z2into fourstrings altogether, say x, y, p, q, of which at leastthree are non-empty, such that xy ?
O2.
Thiswill then permit use of the inductive hypothesis onR(x, y) and on R(p, q).We can in fact restrict our attention to z?1z?2?O2, |z?1z?2| > 2, and no non-empty substring ofz?1or of z?2is in O2, which can be justified asfollows.
Suppose we have z1and z2as in theprevious paragraph, and suppose z?1and z?2resultfrom z1and z2by exhaustively removing all non-empty substrings that are in O2; note that still|z?1z?2| > 2.
If we can use a rule to divide z?1and z?2into x?, y?, p?, q?, of which at least three are non-empty, such that x?y??
O2, then the same rulecan be used to divide z1and z2into x, y, p, q withthe required properties, which can be found fromx?, y?, p?, q?simply by reintroducing the removedsubstrings at corresponding positions.3 Geometrical viewWe may interpret a string x geometrically in twodimensions, as a path consisting of a series of linesegments of length 1, starting in some point (i, j).Every symbol in x, from beginning to end, rep-resents the next line segment in that path; an oc-currence of a represents a line segment from theprevious point (i, j) to the next point (i + 1, j), arepresents a line segment from (i, j) to (i ?
1, j),b represents a line segment from (i, j) to (i, j+1),and b represents a line segment from (i, j) to(i, j ?
1).
If x ?
O2, then the path is closed,that is, the starting point and the ending point arethe same.
If we have two strings x and y suchthat xy ?
O2and x /?
O2, then this translates totwo paths, connecting two distinct points, whichtogether form a closed path.
This is illustrated inFigure 2.In the following, we assume a fixed choice ofsome x and y such that xy ?
O2, |xy| > 2, andno non-empty substring of x or of y is in O2.
Ifwe follow the path of x starting in P [0] = (0, 0),then the path ends in some point P [1] = (i, j) suchthat i is the number of occurrences of a minus thenumber of occurrences of a and j is the number ofoccurrences of b minus the number of occurrencesof b.
This path from P [0] to P [1] will be calledA[0].
The path of y from P [1] back to P [0] willbe called B[1].
We generalize this by defining forany integer k: P [k] is the point (k ?
i, k ?
j), A[k]is the path of x from P [k] to P [k + 1] and B[k]abababba?2 ?10 1 210?1?2?3Figure 2: Two strings x = ababab and y = ba to-gether represent a closed path, consisting of a pathfrom (0, 0) to (?1,?1) and a path from (?1,?1)to (0, 0).is the path of y from P [k] to P [k ?
1].
Where thestarting points are irrelevant and only the shapesmatter, we talk about paths A and B.Let C be a path, which can be either A[k] orB[k] for some k. We write Q ?
C to denote thatQ is a point on C. Let Q = (i, j) ?
C, notnecessarily with i and j being integers.
We de-fine the path-distance dC(Q) of Q on C to be thelength of the path along line segments of C to getfrom P [k] to Q.
In Figure 2, (0,?1) has path-distance 3 on A[0], as the path on A[0] to reach(0,?1) from P [0] = (0, 0) consists of the linesegments represented by the prefix aba of x. Sim-ilarly, dA[0]((0.5,?1)) = 2.5.Let C be a path as above and let pointsQ1, Q2?
C be such that dC(Q1) ?
dC(Q2).
Wedefine the subpath D = subC(Q1, Q2) to be suchthat Q ?
D if and only if Q ?
C and dC(Q1) ?Q ?
dC(Q2), and dD(Q) = dC(Q) ?
dC(Q1)for every Q ?
D. For two points Q1and Q2, theline segment between Q1and Q2is denoted byseg(Q1, Q2).The task formulated at the end of Section 2 isaccomplished if we can show that at least one ofthe following must hold:?
the angle in P [0] between the beginning ofA[0] and that of B[0] is 180?
(Figure 3);?
there is a point Q /?
{P [0], P [1]} such thatQ ?
A[0] and Q ?
B[1] (Figure 4);?
there is a pointQ 6= P [1] such thatQ ?
A[0],Q ?
A[1] and dA[0](Q) > dA[1](Q) (Fig-ure 5); or?
there is a pointQ 6= P [0] such thatQ ?
B[0],Q ?
B[1] and dB[1](Q) > dB[0](Q) (analo-gous to Figure 5).1119ababbaabaabP [0]P [1]P [?1]180?Figure 3: With x = a b a b b and y = a a b, thebeginning of path A[0] and the beginning of (dot-ted) path B[0] have an 180?angle in P [0], whichimplies x and y start with complementing symbols(here a and a; the other possibility is b and b).
Byapplying rule (2), two smaller closed paths result,one of which consists of these two complementingsymbols.ba a abaabbaP [0]P [1]Figure 4: The paths A[0] and B[1] of x = baaaband y = a ab ba have point (1, 1) in common.
Twosmaller closed paths result by applying rule (3).aaabba aba abaP [1]P [0] P [2]QFigure 5: With x = b b a a b a a b a and y = a a a,the pathA[0] and the (dotted) pathA[1] have pointQ in common, with dA[0](Q) = 6 > dA[1](Q) =1.
By applying rule (4), two smaller closed pathsresult, one of which is formed by prefix b of length1 and suffix ab a of length |x| ?
6 = 3 of x.We will do this through a contradiction that re-sults if we assume:(i) the angle in P [0] between the beginning ofA[0] and that of B[0] is not 180?
;(ii) A[0] ?B[1] = {P [0], P [1]};(iii) there is no Q ?
(A[0] ?
A[1]) \ {P [1]} suchthat dA[0](Q) > dA[1](Q); and(iv) there is no Q ?
(B[0] ?
B[1]) \ {P [0]} suchthat dB[1](Q) > dB[0](Q).In the below, we will refer to these assumptions asthe four constraints.4 Continuous viewWhereas paths A and B were initially formed outof line segments of length 1 between points (i, j)with integers i and j, the proof becomes consider-ably easier if we allow i and j to be real numbers.The benefit lies in being able to make changes tothe paths that preserve the four constraints, to ob-tain a convenient normal form for A and B.
If wecan prove a contradiction on the normal form, wewill have shown that no A and B can exist thatsatisfy the four constraints.We define, for each integer k, the line `[k],which is perpendicular to the line through P [k]and P [k + 1], and lies exactly half-way betweenP [k] and P [k + 1].
Much as before, we writeQ ?
`[k] to denote that Q is a point on line `[k].We will consistently draw points .
.
.
, P [?1], P [0],P [1], .
.
.
in a straight line from left to right.Let C be a path, which can be either A[k?
]or B[k?
], for some k?, and let Q ?
C. Wewrite from rightC(Q, `[k]) to mean that path Cis strictly to the right of `[k] just before reachingQ, or formally, there is some ?
> 0 such that eachQ??
C with dC(Q) ?
?
< dC(Q?)
< dC(Q)lies strictly to the right of `[k].
The predicatesfrom left , to right , to left are similarly defined.Let Q1, Q2?
C ?
`[k], for some k, such thatdC(Q1) ?
dC(Q2).
We say that C has an excur-sion from the right between Q1and Q2at `[k] iffrom rightC(Q1, `[k]) and to rightC(Q2, `[k]).This is illustrated in Figure 6: the path is strictlyto the right of `[k] just before reaching Q1.
Fromthere on it may (but need not) cross over to the leftof `[k].
Just after it reaches Q2, it must again bestrictly to the right of `[k].
The definition of excur-sion from the left is symmetric.
Note that excur-sions may be nested; in Figure 6, subC(Q1, Q2)has an excursion at `[k] from the left below Q2.In Figure 6, the pair of pointsQ1andR1will becalled a crossing of `[k] from right to left, charac-terized by Q1, R1?
`[k], from rightC(Q1, `[k]),to leftC(R1, `[k]) and subC(Q1, R1) being a linesegment.
The pair of points R2and Q2is a cross-ing of `[k] from left to right, where the length ofseg(R2, Q2) happens to be 0.
In much of the fol-lowing we will simplify the discussion by assum-ing crossings consist of single points, as in the caseofR2= Q2.
However, existence of crossings con-1120`[k ?
1] `[k] `[k + 1]Q1R1R2=Q2P [k] P [k + 1] P [k + 2]Figure 6: Excursion from the right at `[k].`[k ?
1] `[k] `[k + 1]mQ?1Q?2P [k] P [k + 1] P [k + 2]Figure 7: The excursion from Figure 6 truncatedin Q?1and Q?2on line m.sisting of line segments of non-zero length, as inthe case ofQ1andR1, would not invalidate any ofthe arguments of the proof.Excursions are the core obstacle that needs tobe overcome for our proof.
We can truncate anexcursion at `[k] by finding a suitable line m thatis parallel to `[k], some small distance away fromit, between `[k] and P [k + 1] for excursions fromthe right, and between `[k] and P [k] for excur-sions from the left.
We further need to find pointsQ?1, Q?2?
C ?m, where dC(Q?1) < dC(Q1) anddC(Q2) < dC(Q?2).
Because our coordinates nolonger need to consist of integers, it is clear thatm, Q?1and Q?2satisfying these requirements mustexist.The truncation consists in changingsubC(Q?1, Q?2) to become seg(Q?1, Q?2), as il-lustrated by Figure 7.
Note that if C is say A[k?
],for some k?, then changing the shape of C meanschanging the shape of A[k??]
for any other k?
?aswell; the difference between A[k?]
and A[k??]
isonly in the starting point P [k?]
versus P [k??
].At this time, we must allow for the possibilitythat for some excursions, no m, Q?1and Q?2canbe found with which we can implement a trun-cation, if we also need to preserve the four con-straints and preserve absence of self-intersections.There is a small number of possible causes.
First,`[k]Q1Q2R1R2(a)`[k]Q1Q2QP [k?](b)`[k]Q1Q2QQ?
(c)Figure 8: (a) Regions (shaded) of an excursion at`[k]; due to additional crossings in R1and R2,three more excursions exist, each with a smallerarea.
(b) & (c) If truncation would introduce self-intersection, then either the excursion is filled,with some point P [k?]
as in (b), or there is an ex-cursion with smaller area, illustrated by shading in(c).suppose that C = A[k?]
and B[k?+ 1] intersectswith seg(Q1, Q2).
Then B[k?+ 1] may intersectwith seg(Q?1, Q?2) for any choice of m, Q?1andQ?2, and thereby no truncation is possible with-out violating constraint (ii).
Similarly, a trunca-tion may be blocked if C = B[k?+ 1] and A[k?
]intersects with seg(Q1, Q2).
Next, it could bethat C = A[k?
], while dA[k?
](Q1) > dA[k?+1](Q)holds for some Q ?
seg(Q1, Q2) ?
A[k?+ 1], ordA[k?
?1](Q) > dA[k?
](Q2) holds for some Q ?seg(Q1, Q2)?A[k?
?1], either of which potentiallyblocks a truncation if constraint (iii) is to be pre-served.
Constraint (iv) has similar consequences.Furthermore, if we need to preserve absence ofself-intersections, a truncation may be blocked ifdC(Q) < dC(Q1) or dC(Q2) < dC(Q) for someQ ?
seg(Q1, Q2) ?
C.5 Normal formThe regions of an excursion of C between Q1and Q2at `[k] are those that are enclosed by(subpaths of) subC(Q1, Q2) and (subsegments of)seg(Q1, Q2), as illustrated by Figure 8(a).
Thearea of the excursion is the surface area of all re-gions together.
We say an excursion is filled if anyof its regions contains at least one point P [k?
], forsome integer k?, otherwise it is said to be unfilled.We sayA andB are in normal form if no excur-sion can be truncated without violating the fourconstraints or introducing a self-intersection.
Sup-1121pose A and B are in normal form, while one ormore excursions remain.
Let us first consider theunfilled excursions.
Among them choose one thathas the smallest area.
By assumption, one of thefour constraints must be violated or a new self-intersection must be introduced, if we were totruncate that excursion.
We will consider all rel-evant cases.Each case will assume an unfilled excursionfrom the right (excursions from the left are sym-metric) of a path C between Q1and Q2at `[k].We may assume that subC(Q1, Q2) ?
`[k] ={Q1, Q2}, as additional crossings of `[k] wouldmean that excursions exist with smaller areas(cf.
Figure 8(a)), contrary to the assumptions.Now assume truncation is blocked due to Q ?seg(Q1, Q2) ?
C such that dC(Q) < dC(Q1)(the case dC(Q2) < dC(Q) is symmetric), as weneed to preserve absence of self-intersection.
Sup-pose Q is the only such point, so that C crossesseg(Q1, Q2) from left to right once without evercrossing it from right to left, until Q1is reached.Then C starts in the area of the excursion, or inother words, the excursion is filled, contrary to theassumptions (cf.
Figure 8(b)).
Now suppose thereare points Q?and Q where C crosses seg(Q1, Q2)from right to left and from left to right, respec-tively and dC(Q?)
< dC(Q) < dC(Q1).
If thereare several choices, choose Q?and Q such thatsubC(Q?, Q) ?
`[k] = {Q?, Q}.
This means theexcursion between Q?and Q has an area smallerthan the one between Q1and Q2, contrary to theassumptions (cf.
Figure 8(c)).Note that excursions with zero area, that is,those that intersect with `[k] without crossing overto the other side, can always be truncated.
Wecan therefore further ignore non-crossing intersec-tions.Now suppose a truncation would violate con-straint (ii), where C = B[k?+ 1] and D = A[k?
]crosses seg(Q1, Q2).
Then much as above, wemay distinguish two cases.
In the first, D hasonly one crossing of seg(Q1, Q2) in some pointQ,which means the excursion is filled with the start-ing or ending point of D, as in Figure 9(a).
In thesecond, D has at least two consecutive crossings,say in Q and Q?, from right to left and from leftto right, respectively, which means the excursionbetween Q and Q?has smaller area than the onebetween Q1and Q2, illustrated by shading in Fig-ure 9(b).
Both cases contradict the assumptions.`[k]Q1CQ2DQP [k?](a)`[k]Q1CQ2DQQ?
(b)Figure 9: Truncating the excursion would intro-duce a violation of constraint (ii).
The assump-tions are contradicted in one of two ways.For C = A[k?]
and D = B[k?+ 1], the reasoningis symmetric.Next, suppose a truncation would violate con-straint (iii), where C = A[k?]
and A[k??
1]crosses seg(Q1, Q2) in Q, while dA[k?
?1](Q) >dA[k?](Q2).
If the crossing in Q is from right toleft, and there is an immediately next crossing inQ?from left to right, then we have the same sit-uation as in Figure 9(b), involving an excursionwith smaller area, contradicting the assumptions.If the crossing in Q is the only one, and it isfrom right to left, then we can use the fact thatsubA[k?
](Q1, Q2) ?
subA[k?
?1](Q,P [k?])
= ?, aswe assume the four constraints as yet hold.
Thismeans P [k?]
must be contained in the area of theexcursion, as illustrated in Figure 10(a), contra-dicting the assumption that the excursion is un-filled.
If the crossing in Q is the only one, andit is from left to right, then we can use the factthat subA[k?
](Q1, Q2) ?
subA[k?
?1](Q?2, Q) = ?,for the unique Q?2?
A[k??
1] ?
`[k ?
1] suchthat dA[k?
?1](Q?2) = dA[k?](Q2).
This means theexcursion contains Q?2, which implies there is an-other unfilled excursion between points R1, R2?A[k?]
?
`[k ?
1] with smaller area, as shaded inFigure 10(b), contrary to the assumptions.Suppose a truncation would violate con-straint (iii), where C = A[k?]
and A[k?+ 1]crosses seg(Q1, Q2) in Q, while dA[k?
](Q1) >dA[k?+1](Q).
The reasoning is now largely sym-metric to the above, with the direction of the cross-ing reversed, except that the case analogous to Fig-ure 10(b) is immediately excluded, as Q?2cannotbe both to the left and to the right of `[k].
Con-straint (iv) is symmetric to constraint (iii).
All pos-1122`[k]Q1A[k?]Q2A[k??
1]QP [k?](a)`[k]`[k?1]Q1A[k?]Q2A[k??
1]QQ?2R1R2(b)Figure 10: Truncating the excursion would in-troduce a violation of constraint (iii), wheredA[k?
?1](Q) > dA[k?](Q2).
The assumptions arecontradicted in one of three ways, the first as inFigure 9(b), and the second and third as in (a) and(b) above.sible cases have been shown to lead to contradic-tions, and therefore we conclude that there are nounfilled excursions if A and B are in normal form.We now show that there cannot be any filled ex-cursions either.
For this, assume that A[k?]
has afilled excursion between Q1and Q2at `[k] fromthe right.
This means A[k??
1] has an identicallyshaped, filled excursion at `[k ?
1] from the right,between corresponding points Q?1and Q?2.
Let usconsider how path A[k?]
proceeds after reachingQ2.
There are only three possibilities:?
it ends in P [k + 1], with k?= k, withoutfurther crossings of `[k] or `[k + 1];?
it next crosses `[k] leftward; or?
it next crosses `[k + 1] in some point Q3.The first of these can be excluded, in the lightof dA[k?
?1](Q) ?
dA[k?
](Q2) for each Q ?subA[k?
?1](Q?2, P [k?]).
Due to constraint (iii)therefore, this subpath of A[k??
1] cannot inter-sect with the excursion of A[k?]
to reach P [k], andtherefore A[k?]
cannot reach P [k+1].
The secondpossibility is also excluded, as this would implythe existence of an unfilled excursion.
For the re-maining possibility, Q3?
A[k?]?
`[k+1] may belower down than Q2(in the now familiar view ofthe points P [0], P [1], .
.
.
being drawn from left toright along a horizontal line), or it may be higherup than Q1.
These two cases are drawn in Fig-ures 11 and 12.
The choice of Q3also determinesa corresponding Q?3?
A[k??
1] ?
`[k].`[k?1]Q?1Q?2P [k?1]Q?3Q?4`[k]Q1Q2P [k]Q3Q4`[k+1]P [k+1]`[k+2]P [k+2]Figure 11: Continuing the (solid) path A[k?]
aftera filled excursion, restricted by the (dashed) pathA[k??
1], in the light of constraint (iii).`[k?1]Q?1Q?2P [k?1]Q?3Q?4`[k]Q1Q2P [k]Q3Q4`[k+1]P [k+1]`[k+2]P [k+2]Figure 12: As in Figure 11 but Q3is chosen to behigher up than Q1.We now consider how A[k?]
continues afterQ3in the case of Figure 11.
If it next crosses`[k + 1] leftward, this would imply the existenceof an unfilled excursion.
Further, dA[k?
?1](Q) ?dA[k?
](Q3) for each Q ?
subA[k?
?1](Q?3, P [k?
]).Due to constraint (iii) therefore, this subpath ofA[k??
1] cannot intersect with subA[k?
](Q2, Q3),above which lies P [k + 1].
Therefore, A[k?]
mustcross `[k + 2] in some Q4, which is lower downthan Q3.
This continues ad infinitum, and A[k?
]will never reach its supposed end point P [k?+ 1].The reasoning for Figure 12 is similar.Filled excursions from the left are symmetric,but instead of investigating the path after Q2, wemust investigate the path beforeQ1.
The case ofBis symmetric to that of A.
We may now concludeno filled excursions exist.6 The final contradictionWe have established that after A and B have beenbrought into normal form, there can be no remain-ing excursions.
This means that A[0] crosses `[0]exactly once, in some point RA, and B[0] crosses`[?1] exactly once, in some point LB.
Further, letLAbe the unique point whereA[?1] crosses `[?1]and RBthe unique point where B[1] crosses `[0].The region of the plane between `[?1] and `[0]1123`[?1] `[0]P [?1]P [0]P [1]A[0]B[0]B[1]A[?1]LBLARARBFigure 13: The region between `[?1] and `[0]is divided by A[0] and B[0] into a ?top?
region(lightly shaded), a ?bottom?
region (white), andareas enclosed by intersections of A[0] and B[0](darkly shaded).
Here A[?1] and B[1] are both inthe ?bottom?
region.can now be partitioned into a ?top?
region, a ?bot-tom?
region, and zero or more enclosed regions.The ?top?
region consists of those points that arereachable from any point between `[?1] and `[0]arbitrarily far above any point of A[0] and B[0],without intersecting withA[0],B[0], `[?1] or `[0].This is the lightly shaded region in Figure 13.
The?bottom?
region is similarly defined, in terms ofreachability from any point between `[?1] and `[0]arbitrarily far below any point of A[0] and B[0].The zero or more enclosed regions stem from pos-sible intersections of A[0] and B[0]; the two suchenclosed regions in Figure 13 are darkly shaded.Note that the four constraints do not preclude in-tersections of A[0] and B[0].However, constraint (ii) implies that, between`[?1] and `[0], A[0] and B[1] do not intersectother than in P [0], and similarly, A[?1] andB[0] do not intersect other than in P [0].
More-over, for any Q ?
subA[?1](LA, P [0]) and anyQ??
subA[0](P [0], RA) we have dA[?1](Q) ?dA[0](Q?).
By constraint (iii) this means A[?1]and A[0] do not intersect other than in P [0].
Sim-ilarly, B[1] and B[0] do not intersect other than inP [0].The angles in P [0] between A[0], B[0], A[?1]and B[1] are multiples of 90?.
Because ofconstraint (i), which excludes a 180?angle be-tween A[0] and B[0], it follows that eithersubA[?1](LA, P [0]) and subB[1](RB, P [0]) bothlie entirely in the ?top?
region, or both lie entirelyin the ?bottom?
region.
The latter case is illustratedin Figure 13.
In the former case, LAand RBareabove LBand RA, respectively, and in the lattercase LAand RBare below LBand RA.
This isimpossible, as LAand RAshould be at the sameheight, these being corresponding points of A[?1]and A[0], which have the same shape, and simi-larly LBand RBshould be at the same height.This contradiction now leads back to the verybeginning of our proof, and implies that the fourconstraints cannot all be true, and therefore thatat least one rule is always applicable to allow useof the inductive hypothesis, and therefore that Ggenerates O2.7 Conclusions and outlookWe have presented a new proof that O2is gen-erated by a MCFG.
It has at least superficialelements in common with the proof by Salvati(2015).
Both proofs use essentially the sameMCFG, both are geometric in nature, and both in-volve a continuous view of paths next to a discreteview.
The major difference lies in the approachto tackling the myriad ways in which the pathscan wind around each other and themselves.
Inthe case of Salvati (2015), the key concept is thatof the complex exponential function, which seemsto restrict the proof technique to two-dimensionalgeometry.
In our case, the key concepts are excur-sions and truncation thereof, and the identificationof top and bottom regions.At this time, no proof is within reach that gener-alizes the result to O3, i.e.
the language of stringsover an alphabet of six symbols, in which the num-ber of a?s equals the number of a?s, the numberof b?s equals the number of b?s, and the numberof c?s equals the number of c?s; this language isrationally equivalent to MIX-4, which is definedanalogously to MIX, but with four symbols.
Onemay expect however that a proof would use three-dimensional geometry and generalize some of thearguments from this paper.
Our aim here is tomake this plausible, while emphasizing that an ac-tual proof will require a novel framework at leastas involved as that presented in the previous sec-tions.Omitting the start rule and the axioms, anobvious candidate MCFG to generate O3wouldamong others have the three rules:R(p1q1, p2q2, q3p3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1q1, q2p2, p3q3)?
R(p1, p2, p3) R(q1, q2, q3)R(q1p1, p2q2, p3q3)?
R(p1, p2, p3) R(q1, q2, q3)as well as the six rules:1124R(p1q1p2, p3q2, q3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1q1p2, q2, p3q3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1q1, p2q2p3, q3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1q1, q2, p2q3p3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1, q1p2q2, q3p3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1, q1p2, q2p3q3)?
R(p1, p2, p3) R(q1, q2, q3)Consider three strings x, y and z such thatxyz ?
O3.
If we can use any of the above rulesto divide these into six strings out of which wecan select three, which concatenated together area non-empty string in O3shorter than xyz , thenwe can use the inductive hypothesis, much as inSection 2.
For a proof by contradiction, thereforeassume that no pair of prefixes of x and y and asuffix of z together form a non-empty string inO3shorter than xyz , etc., in the light of the first threerules above, and assume that no ?short enough?prefix of x, a prefix of y and a ?short enough?
suf-fix of x together form a non-empty string in O3,etc., in the light of the next six rules above.For a geometric interpretation, consider thepaths of x, y and z, leading from point P0=(0, 0, 0) to points Px, Pyand Pz, respectively.The concatenations of prefixes of x and y, andsimilarly those of x and z and those of y and zform three connecting surfaces, together formingone surface dividing the space around P0into an?above?
and a ?below?
; cf.
Figure 14.
Our assump-tions imply that the final parts of the paths of x, yand z from ?Px, ?Pyand ?Pz, respectively, toP0should not intersect with this surface.
In addi-tion, no pair of strings from x, y and z should endon complementing symbols, i.e.
a and a, b and b,or c and c. This means that the three paths leadingtowards P0must all end in P0strictly ?above?
orall strictly ?below?
the surface.This might lead to a contradiction, similar tothat in Section 6, but only if one can ensure thatnone of the three paths to P0?sneak around?
thesurface.
This is illustrated in Figure 15, where thepath of z is ?entangled?
with a copy of itself.
Itappears this can be achieved by adding three morerules, namely:R(p1q1p2q2, p3, q3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1, q1p2q2p3, q3)?
R(p1, p2, p3) R(q1, q2, q3)R(p1, q1, q2p2q3p3)?
R(p1, p2, p3) R(q1, q2, q3)The physical interpretation of, say, the last ruleseems to be that the path of z from ?Pzto P0canbe iteratively shifted such that points other thanits ending point coincide with P0.
At some stageP0PxPyPz?Pz?Py?PxFigure 14: By taking prefixes of two strings from{x, y, z} and concatenating them, we obtain a sur-face dividing the space around P0into ?above?
and?below?.
Here the path of z from ?Pzto P0ends?above?, if our view is from above the surface.P0PxPyPz?Pz?Py?PxFigure 15: The path of z from ?Pzto P0is ini-tially above the surface, but ?sneaks around?
thepath of z from Pyto ?Px, to end below.the shifted path must intersect with the path of zfrom Pyto ?Px, before the entanglement of thetwo paths is broken.The considerable challenges ahead involve find-ing a suitable definition of ?excursions?
in three di-mensions, and proving that these can be systemat-ically truncated without violating appropriate con-straints that preclude application of the above 12rules.AcknowledgementsThis work came out of correspondence with Gior-gio Satta.
Gratefully acknowledged are also fruit-ful discussions with Sylvain Salvati, Vinodh Ra-jan, and Markus Pfeiffer.
Much appreciated areanonymous referees and editors for their effortsand their courage to consider a theoretical paperfor publication at this venue.1125References[Bach1981] E. Bach.
1981.
Discontinuous constituentsin generalized categorial grammars.
In Proceedingsof the Eleventh Annual Meeting of the North EasternLinguistic Society, pages 1?12.
[Boullier1999] P. Boullier.
1999.
Chinese numbers,MIX, scrambling, and Range Concatenation Gram-mars.
In Ninth Conference of the European Chap-ter of the Association for Computational Linguistics,pages 53?60, Bergen, Norway, June.
[Capelletti and Tamburini2009] M. Capelletti andF.
Tamburini.
2009.
Parsing with polymorphiccategorial grammars.
Research in ComputingScience, 41(2009):87?98.
[Gilman2005] R.H. Gilman.
2005.
Formal languagesand their application to combinatorial group theory.Contemporary Mathematics, 378:1?36.
[Joshi et al1991] A.K.
Joshi, K. Vijay-Shanker, andD.
Weir.
1991.
The convergence of mildly context-sensitive grammar formalisms.
In P. Sells, S.M.Shieber, and T. Wasow, editors, Foundational Issuesin Natural Language Processing, chapter 2, pages31?81.
MIT Press.
[Joshi1985] A.K.
Joshi.
1985.
Tree adjoining gram-mars: How much context-sensitivity is required toprovide reasonable structural descriptions?
In D.R.Dowty, L. Karttunen, and A.M. Zwicky, editors,Natural language parsing: Psychological, computa-tional, and theoretical perspectives, pages 206?250.Cambridge University Press.
[Kallmeyer2010] Laura Kallmeyer.
2010.
Parsing Be-yond Context-Free Grammars.
Springer-Verlag.
[Kanazawa and Salvati2012] M. Kanazawa and S. Sal-vati.
2012.
MIX is not a tree-adjoining language.
In50th Annual Meeting of the Association for Compu-tational Linguistics, Proceedings of the Conference,pages 666?674, Jeju Island, Korea, July.
[Pullum1983] G.K. Pullum.
1983.
Context-freenessand the computer processing of human languages.In 21st Annual Meeting of the Association for Com-putational Linguistics, Proceedings of the Confer-ence, pages 1?6, Cambridge, Massachusetts, July.
[Salvati2015] S. Salvati.
2015.
MIX is a 2-MCFL andthe word problem in Z2is captured by the IO andthe OI hierarchies.
Journal of Computer and SystemSciences, 81:1252?1277.
[Seki et al1991] H. Seki, T. Matsumura, M. Fujii, andT.
Kasami.
1991.
On multiple context-free gram-mars.
Theoretical Computer Science, 88:191?229.
[Sorokin2014] A. Sorokin.
2014.
Pumping lemma andOgden lemma for displacement context-free gram-mars.
In Developments in Language Theory, 18thInternational Conference, volume 8633 of LectureNotes in Computer Science, pages 154?165, Ekater-inburg, Russia.
Springer-Verlag.
[Vijay-Shanker et al1987] K. Vijay-Shanker, D.J.
Weir,and A.K.
Joshi.
1987.
Characterizing structuraldescriptions produced by various grammatical for-malisms.
In 25th Annual Meeting of the Associa-tion for Computational Linguistics, Proceedings ofthe Conference, pages 104?111, Stanford, Califor-nia, USA, July.1126
