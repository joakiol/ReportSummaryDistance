PROCESSING DICTIONARY DEFINITIONS WITH PHRASAL PATTERNHIERARCHIESHiyan AlshawiUniversity of Cambridge Computer LaboratoryCorn Exchange Street, Cambridge CB2 3QG, England*This paper shows how dictionary word sense definitions can be analysed by applying a hierarchy ofphrasal patterns.
An experimental system embodying this mechanism has been implemented forprocessing definitions from the Longman Dictionary of Contemporary English.
A property of thisdictionary, exploited by the system, is that it uses a restricted vocabulary in its word sense definitions.The structures generated by the experimental system are intended to be used for the classification of newword senses in terms of the senses of words in the restricted vocabulary.
Examples illustrating the outputgenerated are presented, and some qualitative performance results and problems that were encounteredare discussed.
The analysis process applies successively more specific phrasal analysis rules asdetermined by a hierarchy of patterns in which less specific patterns dominate more specific ones.
Thisensures that reasonable incomplete analyses of the definitions are produced when more completeanalyses are not possible, resulting in a relatively robust analysis mechanism.
Thus the work reportedaddresses two robustness problems faced by current experimental natural language processing systems:coping with an incomplete lexicon and with incomplete knowledge of phrasal constructions.INTRODUCTIONA major factor contributing to the lack of robustness ofexperimental natural anguage understanding systems isthe small number of words in the experimental semanticdictionaries used by these systems.
For example"missing vocabulary" is cited as the most frequentcause of errors for the FRUMP system (DeJong 1979),a system designed to achieve a high degree of robust-ness.
The problem does not disappear when dealingwith limited discourse domains of the type encounteredin database query and expert system interfaces.
This isbecause of the large number of synonyms and special-ized words that can occur, and because of the difficultyof delimiting discourse domains exactly.A different problem faced by designers of naturallanguage understanding systems is how to provide forgraceful failure of sentence analysis.
There is thus theneed to produce reasonable incomplete interpretationsof sentences when complete analyses are not possible.This situation can occur because of gaps in the gram-*Author's present address: SRI International, Cambridge ComputerScience Research Centre, Millers Yard, Mill Lane, Cambridge CB2IRQ, England.matical knowledge of the system or because the systemis faced with extragrammatical input.
This paper showshow a possible solution to this partial analysis problemcan be applied to the vocabulary problem in the contextof large machine readable dictionaries.More specifically, we will see how word sense defi-nitions from the Longman Dictionary of ContemporaryEnglish (Procter, 1978 - -  henceforth LDOCE) are proc-essed by a phrasal analyser that applies successivelymore specific phrasal analysis rules.
The aim of thisanalysis is to provide sufficient semantic information toenable a system carrying out a language processingapplication to cope with occurrences of unknownwords.Both the problem of coping with new words and theproblem of robust phrasal analysis can be thought of asinstances of a more general natural anguage interpreta-tion problem.
This is the problem of coping with incom-plete knowledge of language use; lexical knowledge inthe first case and knowledge of phrasal structure in thesecond.
The unavoidable incompleteness of the knowl-edge of language use available to a language processingsystem means that trying to achieve robust naturallanguage processing involves developing effectivemechanisms for dealing with this problem.
The researchCopyright 1987 by the Association for Computational Linguistics.
Permission tocopy without fee all or part of this material isgranted providedthat the copies are not made for direct commercial dvantage and the CL reference and this copyright notice are included on the first page.
Tocopy otherwise, or to republish, requires afee and/or specific permission.0362-613X/87/030195-202503.00Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 195Hiyan AIshawiiProcessing Dictionary Definitions with Phrasal Pattern Hiei'archiesreported in this paper is intended to be a contribution tothis development effort.The next two sections will discuss the kind of outputthat may be produced from processing dictionary defi-nitions and give examples of the results of processingLDOCE definitions produced by an implemented defi-nition analyser.
Some problems that were encounteredare then discussed.
Later sections motivate and explainthe basic analysis algorithm, and then describe andillustrate details of analysis and structure building rules.Finally some remarks are made about the performanceof the current implementation a d necessary furtherresearch.DEFINITION ANALYSISThere are various possibilities for the kind of structuresuseful for language understanding that may be derivedfrom dictionary definitions.
These include meaning pos-tulates (Carnap, 1952) expressed in some logic; con-straints or 'semantic formulae' based on semantic prim-itives (Katz and Fodor, 1963, Wilks, 1975); andstructures carrying information enabling the classifica-tion of the new word sense with respect o an existingclassification of entities in a discourse domain.
Thestructures produced by the implemented efinitionanalyser belong to this last type, and examples of thesestructures are given later.The dictionary being used in this work, LDOCE, hasfeatures that make it particularly suitable for definitionanalysis.
Thus many LDOCE word sense entries con-tain additional semantic information that could be com-bined, or used in conjunction with, the structures pro-duced from processing word sense definition texts.
Thisinformation is available as 'box codes' that give selec-tional restrictions, and 'subject codes' that indicatetypical discourse domain usage of word senses (thesecodes occur in the machine-readable v rsion of thedictionary, but not in the printed form).
The suitabilityof LDOCE for work in computational linguistics hasbeen analysed in detail by Michiels (1982).
For thepurpose of the work reported here, the most importantproperty of LDOCE is the use of a restricted efinitionvocabulary of around 2000 words.
Further, an impor-tant restriction imposed on LDOCE lexicographers isthat only the 'central' senses of these words shouldoccur in definition texts.
Some ways in which thedefinitions diverge from a strict interpretation of thisrule are discussed later.
It should be remarked here thatthe LDOCE restricted efinition vocabulary has more incommon with a 'basic English' vocabulary than a set ofsemantic primitives.
(A list of the words in the restricteddefinition vocabulary is given in an appendix to thepublished version (Procter, 1978) of the dictionary.
)If the output of processing LDOCE definitions was inthe form of meaning postulates, then the logic expres-sions produced would have a new symbol for the wordsense being defined along with symbols correspondingto the senses of words in the definition vocabulary.Similarly, producing semantic primitive formulae wouldinvolve building new formulae by putting together for-mulae corresponding to the word senses of the defini-tion vocabulary.For the third possible form of output listed earlier,we need a (hand-coded) classification of the centralsenses of the definition vocabulary together with aclassification of concepts in the particular domain ofdiscourse in terms of these word senses.
The descrip-tions of implementations by Bobrow and Webber(1980), Mark (1981), and Alshawi (1987), show howsuch a classification can be organized and used duringtext processing.
The LDOCE definition for a new wordsense is processed using the mechanism described inthis paper in order to extract sufficient information forincluding the new word sense in such a classification.
Anatural anguage processing application that dependedon a classification of concepts in the discourse domainshould then be able to carry out its application taskdespite the occurrence of a new word in an inputsentence.Extracting the information ecessary for classifica-tion will of course include locating superordinates in thedefinitions (which define the so called " ISA" relation)as is done in the work reported by Amsler (1981) andCalzolari (1984).
However, this previous work suggeststhat achieving further semantic precision in a classifica-tion process requires making use of other informationpresent in the definition (such as modifiers and predica-tions).
Examples of extracting this sort of informationare presented in the next section.This way of dealing with unknown words in languageprocessing applications still requires good solutions tothe problem of choosing between alternative possibleword senses (Walker and Amsler (1986) have used theLDOCE subject codes for this purpose) and to theproblems involved in the classification process (seeSchmolze and Lipkis, 1983).
Nonetheless, providing amechanism, as described in this paper, for extractingthe information required by the classification process isa necessary first step for this approach to handlingunknown words.Dictionaries vary in the level of detail provided bytheir semantic definitions, and, in general, producing ameaning postulate for understanding a sentence, orincorporating a word sense into a discourse domainclassification, can often be done without making use ofall the detail provided by the dictionary definition.
Evenonly being able to locate the 'semantic head' (i.e.
themain superordinate t rm) of a definition can be useful toa language processing application.
This is fortunatesince providing complete analyses of arbitrary dictio-nary definitions i  beyond the current state of the art incomputational linguistics.
It is therefore reasonable toderive and make use of partial analyses of dictionarydefinitions when complete analyses are not possible.This is the approach taken in the implemented analysissystem.
(For certain text processing systems, for exam-196 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Hiyan Aishawi Processing Dictionary Definitions with Phrasal Pattern Hierarchiespie precision information retrieval systems, such anapproach may not be acceptable.
)ANALYSIS EXAMPLESI will refer to the information derived for classifyingword senses imply as 'semantic structures'; this rathervague term being chosen because these structures arenot viewed as having formal semantic status, but only asdata structures containing information relevant o theclassification process (or perhaps ome other semanticprocess).
Roughly speaking, these structures have someproperties of a linguistic analysis of definition texts andsome properties of a semantic definition of word senseconcepts; their gross syntactic form is that of nestedfeature lists.The semantic structures are derived from varioustypes of modifiers and relative clauses present in wordsense definitions as well as the semantic head of thedefinition, if this is substantive.
The syntactic ategoryunder which senses are grouped in the dictionary isimportant, in particular, for locating the semantic headof a definition and, more generally, for determiningwhich analysis rules are applicable to the definition.
Thedetails of the analysis process are explained in a latersection.
Illustrative examples of the structures pro-duced from analysing the main categories of definitionscurrently handled by the implemented system - -  noun,verb, adjective and adverb definitions - -  are now given.Oddities in the semantic structures are often due topeculiarities of the current analysis grammar and outputformat, and I would not wish to argue for their correct-ness, especially in view of the problems discussed later.The following are examples of noun sense definitionstogether with the semantic structures derived fromthem.
The words under which these examples occur inthe dictionary are shown underlined.
(The analysissystem retrieves definitions from a 'lispified' version ofthe LDOCE type-setting tape, for example items pre-ceded by an asterisk are Lisp atoms corresponding tofont control characters present on the type-setting tape(see Alshawi, Boguraev, and Briscoe, 1985).
)(launch)(a large usu.
motor-driven boat used for carryingpeople on rivers, lakes, harbours, etc.
)((CLASS BOAT) (PROPERTIES (LARGE))(PURPOSE(PREDICATION (CLASS CARRY) (OBJECTPEOPLE))))(mug)(*46 BrE infml *44 a foolish person who is easilydeceived *44 *63 see also *CA MUG'S GAME)((CLASS PERSON) (PROPERTIES (FOOLISH))(PREDICATION (OBJECT-OF ((CLASSDECEIVE)))))(hornbeam(a type of small tree with hard wood, sometimes usedin *CA HEDGE *CB *46 s)((CLASS TREE) (COLLECTIVE TYPE) (PROPER-TIES (SMALL))(HAS-PART ((CLASS WOOD) (PROPERTIES(HARD)))))The semantic heads of these definitions are boat, per-son, and tree respectively, this being different in the lastcase from the syntactic head ("type") of the definition.The other information in these structures is derivedfrom adjectives, prepositional phrases, and relativeclauses.
Not all the information present in the defini-tions is captured, for example the information conveyedby the phrase sometimes used in HEDGEs,  in whichHEDGE is capitalised because it is not part of therestricted efinition vocabulary (but is defined in termsof this vocabulary elsewhere).Verb sense definitions are, in general, infinitive verbphrases with adverbials (often prepositional phrases)and additional restrictions on the semantic class ofagents and objects.
These are some examples of deriv-ing structures from verb sense definitions.
(launch)(to send (a modern weapon or instrument) into the skyor space by means of scientific explosive apparatus)((CLASS SEND)(OBJECT((CLASS INSTRUMENT) (OTHER-CLASSES(WEAPON))(PROPERTIES (MODERN))))(ADVERBIAL ((CASE INTO) (FILLER (CLASSSKY))))(mug)(to rob with violence, as in a dark street)((CLASS ROB)(ADVERBIAL ((CASE WITH) (FILLER (CLASSVIOLENCE)))))(club)(to beat or strike with a heavy stick (*CA CLUB *CB))((CLASS STRIKE) (OTHER-CLASSES ((BEAT)))(ADVERBIAL((CASE WITH)(FILLER (CLASS STICK) (PROPERTIES(HEAVY))))))Similarly, adjective sense definitions tend to have ad-jectival or verbal predicates as their heads, and theyoften include restrictions on the class of objects towhich the property corresponding to the adjective canComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 197Hiyan Alshawi Processing Dictionary Definitions with Phrasal Pattern Hierarchiesapply.
The adverbial phrases used to define adverbs areoften prepositional phrases.
Examples of adjective andadverb definitions are the following.
(bushy)((of hair) growing thickly: *46 a bushy beard / tail)(CLASS PROPERTY)(PREDICATION (CLASS GROW) (MANNERTHICKLY))(RESTRICTED-TO ((CLASS HAIR))))(undomesticated)((of an animal) not serving man; not *CA TAME)((CLASS PROPERTY)(PREDICATION (NOT (CLASS SERVE)(OBJECT MAN)))(RESTRICTED-TO ((CLASS ANIMAL))))(overland)(across or by land and not by sea or air)((MANNER ((CASE ACROSS) (FILLER ((CLASSLAND))))))LDOCE definitions for lexicalized compound noun andphrasal verbs are handled in exactly the same way asnoun and verb definitions.
Two examples of structuresgenerated for such definitions are given below.
(roller coaster)(a kind of small railway with sharp slopes and curves,popular in amusement parks)((CLASS RAILWAY) (COLLECTIVE KIND)(PROPERTIES (SMALL)))(bring out)(*46 becoming rare *44 to introduce (usu.
a younglady) into the social life of a great city *63 see also*CA COME OUT *CB (7))((CLASS INTRODUCE)(OBJECT ((CLASS LADY) (PROPERTIES(YOUNG))))(ADVERBIAL((CASE INTO)(FILLER (CLASS LIFE) (PROPERTIES(SOCIAL))))))SOME PROBLEMSThe current implementation is able to locate the correctsemantic heads of dictionary definitions in most cases,although the examples above are untypical in theamount of additional information they recover from thedefinitions.
Some quantitative remarks about the per-formance of the system are given later.
This sectionbriefly discusses a number of problems that were en-countered while testing the implemented system.In some respects the information conveyed by theoutput structures, being too closely tied to the surfacedefinitions, only provides constraints for further seman-tic analysis.
Perhaps the most important case of this isthat the relationships implicit in compound nouns andcertain prepositional phrase adverbials cannot, in gen-eral, be made more explicit without further interpreta-tion apparatus (see e.g.
Alshawi, 1987) beyond thatavailable to the definition analyser.
The phrasal contextcan, however, sometimes allow further specification ofrelationships implicit in prepositions, for instance deri-vation of PURPOSE from for in cases exemplified bythe noun sense of launch (although, of course, errorscan result from attempting to make relationships moreexplicit in this way), The actual words appearing in thesemantic structures are, on the other hand, furtherdisambiguated than might be assumed given the highdegree of polysemy of many of the words in the re-stricted vocabulary.
This is because the analysis proc-ess identifies the syntactic ategory of these words andbecause of the LDOCE rule that only the most centralsenses of words from the restricted vocabulary shouldappear in definitions (but see the remarks below onphrasal verbs).The fact that definition texts are often not analysedcompletely means that information that is central to adefinition is sometimes not taken into account, asillustrated by the following example.
In this case theusual 'purpose' of nails is not recovered.
(nail)(a thin piece of metal with a point at one end and a fiathead at the other for hammering into a piece of wood,usu.
to fasten the wood to something else)((CLASS PIECE) (MATERIAL METAL) (PROPER-TIES (THIN))(HAS-PART ((CLASS POINT))))Although the base forms of all the words in therestricted vocabulary and simple morphological vari-ants of these are handled by the analysis process, thereare many cases of derivational morphology which arenot currently handled.
Difficulties are also caused by theliberal use in LDOCE definitions of phrasal verbs madeup from verbs and particles taken from the restrictedvocabulary.
The idiomatic nature of phrasal verbsmeans that the rule of using only the central senses ofwords in the definition vocabulary is violated in manycases in which phrasal verbs are used to  implicitlyincrease the size of the defining vocabulary.
An exam-ple is the occurrence of look after and bring up causingan error in the analysis of the following sense definitionfor foster:(foster)(to look after or bring up (a child or young animal) asone's own .
.
.
)198 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Hiyan Aishawi Processing Dictionary Definitions with Phrasal Pattern Hierarchies((CLASS LOOK)).Another problem encountered in LDOCE entries isthat word senses are sometimes defined in terms ofprevious senses of the same homograph.
For exampleimmediately after the definition of the sense of horn-beam given earlier, the following dependent word sensedefinition is present, for which the system produces astructure containing the special symbol '*previous-sense*'.
(the wood of this tree)((CLASS WOOD) (RELATED-TO*PREVIOUS-SENSE*))A problem related to the one just mentioned is that onlythe simplest forms of cross references to words notincluded in the definition vocabulary are handled atpresent.
However, given the compositional nature ofnested feature lists, and the fact that definitional crossreferences are intended to be non-circular in LDOCE, itshould be feasible to use semantic structures for thereferenced words (and previous senses as in the horn-beam example) in building other semantic structures.The use of a restricted vocabulary in LDOCE defi-nitions means that the lexicographers have alreadyengaged in a substantial mount of semantic analysis ofword senses that is potentially useful for automaticnatural anguage processing.
However, as observed byMichiels (1982), there is a tradeoff between the size ofthe definition vocabulary and the syntactic omplexityof definitions.
This implies that in order to take fulladvantage of the potential of LDOCE entries for lan-guage processing we need to pay special attention to thedesign of the definition analyser; this is the issue ad-dressed in the rest of this paper.PHRASAL ANALYSIS HIERARCHIESThe analysis mechanism has the flavour of a pattern-based phrasal analyser.
It was designed to overcomesome of the more obvious difficulties of applying asimple pattern matching approach to robust phrasalanalysis.
In particular it was required that the mecha-nism should have the means to specify which compo-nents of a phrase are more important, and to indexanalysis rules so that the mechanism would be reason-ably efficient.Pattern matching has played an important role inseveral previous parsing systems, for example those ofWilks (1975), Parkinson et al(1977), Wilensky andArens (1980), and Hayes and Mouradian (1981).
Acharacteristic of the mechanism used here is that itdepends on a hierarchy of phrasal analysis patterns inwhich more specific patterns are dominated by lessspecific ones.The basic analysis algorithm that applies the hierar-chy of patterns is as follows.
Starting at the top of thehierarchy, a pattern is matched against he input defini-tion, If the match with this pattern succeeds then amatch is attempted with each of its daughter patterns(i.e.
the more specific forms of this pattern placedimmediately below it in the hierarchy).
This procedureis repeated recursively so that we end up with the mostspecific matches against he input definition.
This pars-ing technique is different in kind from the more commonapproach to robust parsing in which exact grammarrules are tried first before being relaxed by the parser(see e.g.
Weischedel and Black, 1980, Kwasny andSondheimer, 1981, and Pulman, 1984).The hierarchy provides a natural solution to theindexing problem mentioned above since it restricts theapplication of patterns to those that are more likely tosucceed, enabling efficient phrasal analysis.
It alsoprovides a solution to the problem of specifying themore important components of phrases ince less spe-cific patterns tend to be concerned with more importantcomponents only.
This ensures that reasonable incom-plete analyses can be produced when more detailedanalyses are not possible.Each analysis rule consists of a rule identifier, aphrasal pattern, and a list of rule identifiers for daughterpatterns.
It is written in the following form:(rule identifier phrasal pattern daughter identifiers).The rule identifier also appears in a semantic struc-ture building rule.
These two types of rule are keptseparate in order to allow different kinds of outputstructures to be generated for the same analysis gram-mar.
Building semantic structures is basically a simpleprocess of fleshing out templates provided by the se-mantic structure building rules using variable bindingsgenerated by the matching algorithm.The following section gives some examples of anal-ysis and structure building rules, explaining the notationin which the phrasal patterns are written.
The notationcurrently provides a limited number of facilities, but itshould be clear that these facilities could be extended invarious ways while remaining within the the overallframework of applying a hierarchy of phrasal patternsas discussed above.ANALYSIS RULESA typical analysis rule, n-100, for noun definitions, andtwo of its descendants, n-ll0 and n-135, are shownbelow, n-ll0 is a daughter of n-100, and n-135 is adaughter of n-130 (not shown).
More mnemonic identi-fiers for these rules might be "Noun-phrase", Simple-NP", and "NP-with-relative" instead of n-100, n-ll0,and n-135 respectively.
(n-100 (n && +0det && &0adj &noun &&) n-ll0 n-120n-130 n-140)(n-110 (n +0det +0intens &0adj &noun *0pp-mod &&))(n-135 (n +0det &0adj &0noun +nounl +that-which*verb-pred &&))Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 199Hiyan Alshawi Processing Dictionary Definitions with Phrasal Pattern HierarchiesIn the phrasal pattern part of these rules, the initial"n"  restricts the pattern to matching definitions forsenses with lexical category "n" ,  i.e.
nouns.
The otherpattern elements match zero or more items in the inputdepending on the type of the element (indicated by itsfirst one or two characters) and restrictions in terms oflexical features.
Digits at the end of pattern elementssimply distinguish different occurrences of elementswith the same properties.
Examples of pattern elementsand what they can match are the following.for?
noun+Odet&noun&0adj&&*0pp-mod*verb-predthe word fo rexactly one nounzero or one determinerone or more nounszero or more adjectivesan arbitrary segment of input wordszero or one prepositional phrasemodifiera segment that matches a verbphrase patternThe last element is an example of an element withsubsidiary patterns (in this case for verb phrases) whichuse the same kinds of element as above.
There are thusassociated with this element a list of rules including'(passive-pred (be +vtrans))'.
Here 'passive-pred' isjust the name of the subsidiary pattern '(be +vtrans)'.Similarly, one subsidiary pattern of '*0pp-mod' is '(for-pp (+0used for +noun-verb)'.
The use of elements withsuch subsidiary patterns allows for recursion and amore compact set of patterns, in much the same way asfor conventional context free phrase structure gram-mars.Given this interpretation of pattern elements, itshould be clear that the phrasal patterns of rules n-110and n-135 will match subsets of the set of definitionsmatched by the phrasal pattern of rule n-100.
The nounsense definition examples given earlier for l aunch  andmug matched n-110 and n-135 respectively.
(There is aninitial morphological analysis phase which discardsitems like usu.
which it does not recognize.)
Theanalysis algorithm outlined in the previous ection en-sures that n-ll0 and n-135 are tried only if n-100succeeds.The structure building rule associated with an analy-sis rule is applied when none of the immediate descen-dants of the analysis rule succeed.
Thus the structurebuilding rule for n-100 is applied when none of n-ll0,n-120, n-130, or n-140 succeed, ensuring that a semanticstructure is built according to the analysis provided byn-100 if no more specific version of this analysis ispossible.
The structure building rules for n-100 andn-135 are given below.
(n-100 ((compound-class &noun) (properties &0adj)))(n-135 ((class +nounl) (noun-mods &0noun)(properties &0adj) (predication *verb-pred)))The semantic structure given earlier for the definition afoo l i sh  person  who is eas i ly  dece ived  .
.
.
(a BritishEnglish sense of mug)  was generated using the rule justgiven above.
Applying the rule involves replacing thevariables with bindings generated by the matching proc-ess; splicing-out substructures associated with unin-stantiated optional pattern elements; and recursivelyapplying this process to the structure building ruleassociated with the appropriate (i.e.
successfully match-ing) subsidiary pattern for the element '*verb-pred'.This last step results in building the substructure"(predication (object-of ((class deceive)))" using a ruleassociated with the subsidiary pattern 'passive-pred'that was mentioned earlier.
There is also an optionalfurther stage of the structure building process whichapplies transformations specified as attached proce-dures associated with items in the structure buildingrules, for example the item 'predication'.
This phasegives greater freedom than would be possible by the useof structure building templates alone, for example itallows moving items (such as those indicating negation)'upwards' out of substructures.The analysis algorithm follows all paths from suc-cessful matches.
This does not lead to inefficiencybecause it is rare for several deep, but disjoint, paths tobe followed successfully down the pattern hierarchy,and because the implementation maintains a well-formed substring table to avoid a certain amount ofredundant computation.
Alternative semantic struc-tures can result from processing a definition when thereis more than one most specific successful analysis rule.At present one such analysis is chosen by an oversimplistic heuristic that basically prefers analyses ac-counting for more words of the input definition.PERFORMANCE REMARKSAlthough some of the difficulties mentioned in thesection on problems are not easy to accommodate in thepresent system, most of the errors in identifying seman-tic heads of definitions were not due to these.
Insteadthese errors appear to be caused mainly by failure onthe part of the rudimentary morphological analysisperformed, and the inadequate coverage of the presentset of phrasal patterns.In order to evaluate the performance of the system, itwas tested against a sample of 500 definitions chosen atrandom using a facility for automatic random selectionof entries provided by the dictionary access system.Only a few of these definitions will have coincided withthose processed uring the development of the systemand its analysis rules.
The selection process ignoreddefinitions for idioms and those with complex crossreferences, o these are not taken into account in thefigures given below.The results of the test were as follows.
The semantic200 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Hiyan Alshawi Processing Dictionary Definitions with Phrasal Pattern Hierarchieshead was identified correctly for 387 definitions (77%).Additional information was recovered for 236 (61%) ofthese definitions, and this additional information wasjudged to be correct for 207 (88%) of these cases.Thus only identifying the head is much more typicalthan might be suggested by the examples given earlierfor illustrative purposes, and in fact the present set ofrules rarely takes into account all the words appearingin a definition.
There are altogether some 90 phrasalpatterns in the hierarchy, including subsidiary patterns.It should be emphasized that this grammar of definitionswas written as a feasibility test, and I believe it isreasonable to expect that the number of patterns in thehierarchy could be enlarged to 400, say, before theproblem of diminishing returns becomes a serious one.The current implementation f the definition analysertakes around half a second to access the dictionary andprocess a definition.
This is the elapsed time on a lightlyloaded GEC-63 (a 32 bit mini-computer); the definitionanalyser was implemented in Cambridge Lisp and lowlevel dictionary access in the language C. Finally,perhaps it is worth mentioning that the developmenteffort was only a few man months for each of theprogram and grammar, which, compared with othernatural anguage processing systems we have developedrecently at Cambridge, represents a relatively smalleffort.FURTHER RESEARCHThe work carried out so far seems to suggest thatdictionary definitions can be analysed with a reasonabledegree of success using hierarchies of phrasal patterns,but it still remains to be demonstrated that this tech-nique can enable an actual natural anguage applicationsystem to cope effectively with unknown words.Although dictionary definitions exhibit a rich varietyof forms, these are mostly variations on a manageablysmall number of basic forms, and it is this property ofdefinitions that makes phrasal pattern hierarchies par-ticularly appropriate for analysing them.
It seems likelyhowever that the analysis technique developed herewould be useful for the same reason in other languageprocessing applications, for example specialized inter-active applications.One direction in which it is hoped to extend the workreported in this paper is in enhancing the capabilities ofnatural language processing systems for coping withidioms.
Intuitively, some sort of pattern matchingseems to be appropriate for analysing idioms (see e.g.Wilensky and Arens, 1980).
In the context of a parsingsystem using an analysis hierarchy the patterns foridioms would be placed as most specialized patterns(i.e.
leaves).
LDOCE entries contain a wealth of infor-mation on idiomatic uses of words, and the meanings ofidioms are expressed using the restricted definitionvocabulary.
It is hoped to extend the definition analysissystem so that it would attempt o generate appropriatephrasal patterns when it encountered a definition for anidiomatic use of a word.
It may then be possible to usethe generated pattern and the definition of the idiom toproduce a paraphrase of an input sentence before fur-ther processing takes place.
In any case, a comprehen-sive treatment of dictionary entry analysis for languageunderstanding systems clearly needs to take account ofidiomatic word usage.ACKNOWLEDGMENTSI am very grateful to the Longman Group for makingthis work possible by granting me access to the LDOCEtape for research purposes.
I would also like to thankBran Boguraev, Ted Briscoe, and two anonymous Com-putational Linguistics referees for many helpful com-ments that improved earlier drafts of this paper.REFERENCESAlshawi, H. 1987 Memol~y and Context Mechanisms for LanguageInterpretation.
Cambridge University Press, Cambridge, England.Alshawi, H.; Boguraev, B.; and Briscoe, E. 1985 Towards a Dictio-nary Support Environment for Real Time Parsing.
In Proceedingsof the Second Conference of the European Chapter of the Asso-ciation for Computational Linguistics, Geneva: 171-178.Amsler, R. 1981 A Taxonomy for English Nouns and Verbs.
InProceedings of the 19th Annual Meeting of the Association forComputational Linguistics, Stanford, California: t33-138.Bobrow, R.J.; and Webber, B.L.
1980 Knowledge Representation forSyntactic/Semantic Processing.
In Proceedings of the First AAAIConference, Stanford, California: 316-323.Calzolari, N. 1984 Detecting Patterns in A Lexical Database.
InProceedings of the lOth International Conference on Computa-tional Linguistics, Stanford, California: 170-173.Carnap, R. 1952 Meaning Postulates.
Philosophical Studies 3: 65-73.DeJong, G. 1979 Prediction and Substantiation: A New Approach toNatural Language Processing.
Cognitive Science 3: 251-273.Hayes, P.J.
; and Mouradian, G.V.
1981 Flexible Parsing.
AmericanJournal of Computational Linguistics 7(4): 232-242.Katz, J.J.; and Fodor J.A.
1963 The Structure of a Semantic Theory.Language 39: 170-210.Kwasny, S.C.; and Sondheimer, N.K.
1981 Relaxation Techniquesfor Parsing Grammatically I l-Formed Input in Natural LanguageUnderstanding Systems.
American Journal of Computatiohal Lin-guistics 7(2): 99-108.Mark, W. 1981 Representation a d Inference in the Consul System.
InProceedings of the Seventh International Joint Conference onArtificial Intelligence, Vancouver, British Columbia: 375-381.Michiels, A.
1982 Exploiting a Large Dictionary Database.
Ph.D.thesis, Universit6 de Liege, Liege.Parkinson, R.C.
; Colby, K. M.; and Faught, W. S. 1977 Conversa-tional Language Comprehension Using Integrated Pattern-Matching and Parsing.
Artificial Intelligence 9:111-134.Procter, P., Ed., 1978 Longman Dictionary of Contemporary English.Longman Group Limited, Harlow and London.Pulman, S.G. 1984 Limited Domain Systems for Language Teaching.In Proceedings of the lOth International Conference on Compu-tational Linguistics, Stanford, California: 84-87.Schmolze, J.G.
; and Lipkis, T.A.
1983 Classification i the KL-ONEKnowledge Representation System.
In Proceedings of EighthInternational Joint Conference on Artificial Intelligence, Karls-ruhe: 330-332.Walker, D.; and Amsler, R. 1986 The Use of Machine ReadableDictionaries in Sublanguage Analysis.
In Analyzing Language inComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 201Hiyan Alshawi Processing Dictionary Definitions with Phrasal Pattern HierarchiesRestricted Domains, edited by Ralph Grishman and RichardKittredge.
Lawrence Erlbaum Associates, Hillsdale, New Jersey:69-83.Weischedel, R.M.
; and Black, J.E.
1980 Responding Intelligently toUnparsable Inputs.
American Journal of Computational Linguis-tics 6(2): 97-109.Wilensky, R.; and Arens, Y.
1980 PHRAN - -  A Phrasal NaturalLanguage Understander.
In Proceedings of the 18th Annual Meet-ing of the Association for Computational Linguistics, Philadel-phia, Pennsylvania: 117-121.Wilks, Y.
1975 An Intelligent Analyser and Understander of English.Communications ofthe ACM 18: 264-274.202 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
