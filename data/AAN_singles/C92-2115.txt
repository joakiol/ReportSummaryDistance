A Similarity-Driven Transfer SystemHideo W~t~n~})cIBM Research~ Tokyo Research Laboratory5-19 Sitnbancbo, Chiyoda-ku, Tokyo 102 Japane-math watanabe@trl.vnet.ibm.cmnAbstractThe transfer phase in machine translation (MT) sys-tems has been considered to be more complicatedtitan analysis and generation~ since it is inherently aconglomeration of individual exical rules.
Currentlysome attempts are being made to use case-based rea-soning in machine translation, that is, to make deci-sions on the basis of translation examples at appro-priate pohtts in MT.
This paper proposes a new typeof transfer system, called a Similarity-driven Trans-fer' System (SimTi'ao), for use in such case-based MT(CBMT).1 Introduct ionThe transfer process in macbine translatiou systemsis, in general, more complicated than the processes ofanalysis and generatimt.
One reasmt for this is thatit relies heavily on human heuristic knowledge or thelinguistic intuition of the rule writers.
Unfortunately,linguistic intuition tends to be unable to control theprocess properly for a wide variety of inputs, becauseof the huge amount of data and the huge number ofsituations that need to be considered.
However, rulewriters must rely on their linguistic intuition to someextent, because there is no linguistic theory on lexiealtransfer \[7\].
Another eason \[81113 \] is that tile transfertask is inherently a conglomeration f individual ex-ical rules.
Therefore, the transfer process can be saidto fall into a class of problem that cannot easily becontrolled by the linguistic intuition of rule writers.In accordance with these observations, various at-tempts have been made to overcome the problemsof transfer; they include knowledge-based MT \[12\],bilingual signs \[13\], and Tags for MT\[1\].
One suchapproacb is case-based or example-based MT \[4\] \[9\]\[10\] [11\].
The essential idea behind all case-based MT(CBMT) methods is that tile system chooses the case(or example) most similar to tile given input from thecase base, and applies the knowledge attached to thechosen case to the input.
1Supposing that there is a corpus of parsed transla-tion examples in which corresponding parts are linkedto each other~ we can regard those parsed transla-1 This approach can be regarded as an application of case-baaed tea.sorting \[3\] to ntttural language translation.tion examples as translation rules.
A promising ~rp-proach is therefore to make a transfi~r process that(1) chooses a set of translation examples, each sourcepart of which is similar to a part of the input~ attdall source parts of which overlap the whole input~and (2) constructs an output by combining the targetparts of those translation examples chosen.
However,this does \]tot mean that existing transfer knowledgeshould be abandoned.
Rather, such transfer knowl-edge should be used ms a fail-safe mechanism if thereare no appropriate examples.
In the similarity-dr~ivent,unsfer system (Simlmn) we have developed, bothtranslation examples and existing transfer knowledgeare treated uniformly as trauslation pattern% and arecalled translation rules.In Figure 1, for example, (a) is tile parsed depen-dency structure of an inpnt Japanese sentence, "karega kusuri wo numu."
Suppose that (b) is selected asthe most similar translation rule for the part "kare ga... nomu" frmn the translation rule-base, and that (c)is selected as the most similar translation rule for thepart "kusuri wo nomu~" even though there are severaltranslation candidates for the Japanese verb "nomu.
"This figure illustrates what we would like to do; thatis, to construct (d), the translated structure by com-bining the target structures of the selected translationrules.To develop this kind of system, we must consider thefollowing issues:(a) a metric for similarity,(b) a mecbanism for combining target parts of rules,and(c) correspondence b tween the source part anti thetarget part of a rule.To handle the last two issues, I developed amodel called Rules Combination Transfer (RUT) \[14\].SimTran is RCT coupled with a similarity calculationmethod.
In tbis paper, I will introduce RCT and thesimilarity calculation method used in SimTran.The next section defines the data structure for graphs,aud the format of a translation rule.
Section 3presents a method for calculating the similarity be-tween an input and the source part of a translationrule.
Section 4 describes the flow of the transfer pro-cess in RCT.
Section 5 gives examples of translationusing SimTran, and Section 6 discusses related work.Some concluding remarks bring the paper to an end.AcrEs DE COLING-92, NAN2T~, 23-28 AOI~T 1992 7 7 0 PROC.
OF COLING-92, NANTES, AUG. 23-2fl, 1992.....-"...... .... ........ .l:igure 1: Sample Japanestv4o.English tr~u,s\[ation2 Trans la t ion  Ru lesA basic type ,ff gra.ph used in this paper is a labeleddirected graph, or art Ida.
2 At, ldg G consists of a setof nodes N, and a set of arcs A.
Further, each nodeand art: has a label, ht particular, node labels areunique.
Each node consists tff features, each of whichis a pair of a feature name attd a feature v~lue.If an ldg lta.~ only one root node, then it is called ~nr ldg, and if an Ida has no cyclic pr~th, then it is calledan idag.
s Therefore~ an r idag  denotes an Ida thath~-s only one root node and no cyclic path.A translation rnle 4 r consists of the folk,wing threecorrtpo,leots:r = (G , , , ,M ,G~)where Gm is a matching r~rph, G~ is a constructiongraph, e.nd M is a set of mappings between Gm andA matching graph G',,, and a construction graph G~must be at lea.st an rldag.
5 Further, nodes in (~,,must be labeled uniqnely; that is, each node in G,,,mnst hz~ve only one unique label, and the l~bel of thenode n~ in G~ is determined to be the label of the~The term qabeled' means that nodes and arcs are labeled,and the term ~directed' means that each arc has a direction.Further, an Ida in this paper refers to a connected graph unlessotherwise specified.ZThe term dag is often used in the NLP world, and usu-ally denotes a rooted connected labeled (as functional) directedgraph.
But in this paper, dag denotes a direct,:d acycllc graphthat may have multiple toots, is not necessarily a connectedgraph, and does not necessarily itave labels.4In this paper, the term rule does not mean a procedure,but rather a pattern of translation knowledge.bSudl graphs are sufficient to express almost MI lingu~atlcstrsct ures.Figure 2: Samph.
rule for translation betweenJapanese ~tnd Englishnode nm in G,.
such that n:.
= M(nm).Mat)ping between (:.,~ and G~ designates tile cor-.respondences be,wee.
,,\[}des in G, .
and (;..  l'})rinstance, in Figure 2, tim Japanese word "nagai"("tong") should c.rrespond to both of the Englishwords "have" and ~\[(lll~111 bl!cal,se if am),her wordg.ow~rn.~ the word "nagai" then its English ,re,rela-tion should be connected to the word "h~Lve."
On theother hand, if the Japanese word "to,elan" ("very")modifies "nagai" then its English translation "very"should be connected to "long."
This shows tllat fi)rnode in ~ source languag% two kinds of connectionpoint, for translations of both governing structuresattd governed structures of the node, are needed in itstranslated structure.
This implies that there shouhtbe two kinds of correspondence b tween G',, and (7~,namely, ( I)  a mapping from a G, ,  node n, ,  to a G~node nc that is to be a node connected to translationsACq'ES DE COLING-92, NANqT!S, 23-28 AOUq" 1992 7 7 1 PP.OC.
OF COLING-92, NAtWrES, AUG. 23-28, 1992of structures governing nm, and (2) a mapping fromn, ,  to a G~ node n'~ that is to be a node connectedto translations of structures governed by n,~.
We callthe former an upward  mapp ing  and the latter adownward  mapp ing ,  and denote these twn kindsof mapping as follows:where M T is upward mapping, and M ~ is downwardmapping.Not all kinds of mapping should be permitted as M \[and M 1.
A translation rule r=(  Gm,M,Gc ) mustsatisfy the following conditions:(1)M T and M I are both injections,(2) there are no two distinct nodes x aml y in G.~such that M(x)=M(y),  e and(3) M l(root(G,,,)) .
.
.
.
t(a~).Condition (1) ensures that there is only one c()n-nection point in G~ for each translation of gow~rning structures and governed structures, coudition (2)ensures that the label of a G'~ node is determineduniquely, and condition (3) ensures that the result ofthis transfer model becomes a rooted graph (see \[15\]for details).
A rule sat.isying these conditions is saidto be sound.3 S imi la r i ty  Ca lcu la t ionThis section desribes how a similarity is calcuhm~d.3.1 Graph DistanceThe shnilarity between a Gm and an input graph Gi,,is defined as the inverse of the graph distance 7 be-tween thenL First, the simple graph distance D;  be-tween Gi,, and G~ is given ;ks follows:D',(G~, a..) = o=(n~., R.,)+ E , , ,  min(D'a(VS(Ri .
.
.
.
.
),GS(t~,, .
.
.
.
)))where R/ ,  and /~ are roots of Gi~ and Gm, respec-tlvely~ D,, is a node distance, a= is an arc in G,n suchthat its source node is R.m, and GS(n~ a) denotes asubgraph that is related to an arc a from n.Briefly, a simple distance is the sum of the node dis-tance between two roots and the sum of the minimalsimple distances between Gin subgraphs and Gm sub-graphs that, far each arc a outgoing from the GmmOtnode, are related to the all arcs a from the root nodes.~This means that either M ~(x) or M l(x) is equal to eitherM T(Y) or M .~(y)rDistltnces defined in this section are not actual distancesin the mathematical sense.However, the larger Gm is, the larger this simple dis-tance becomes.
Therefore~ when normalized by thenumber of nodes in G,,,, the graph distance Dg isgiven as follows:D;(Gin,G,,,)Dg(Gin, am) -- Nwhere N is the number of nodes in G~.3.2 Node DistanceWhen considering the distance between two words(nodes), we usually think of their semantic distancein a semantic hierarchy.
In general, no matter whatsemantic hierarchy we use, it is inevitable that therewill be some sort of distortion.
Further, ,as stated be>fi)re, a node consists of several features and may nothave a lexica\[ form that is a pointer to a semantic hi-erarchy.
Therefore, a promising approach to calculat-ing distances between odes is to use both a semantichierarchy and syntactic features~ that is, to use syn-tactic features to correct the distortion contained inthe semantic hierarchy to some extent.The node distance between a Gin node n i and a G,,,node nm is detined ms follows:Dn (hi, nm ) D /+ D, * 6,N S +a.where DI is a feature node distance, D, is a semanticno(h." distance, N I is the number of features in nm forDI, and 6, is the weight of a semantic distance.The semantic distance D, between a Gi,~ word wi,~and a G,,  word wm is given by the following equation.In SimTran, Bunrul Goi Hyou \[5\] code (or bghcode s)is used for calculating the smnantlc distance betweenJapanese words.Do(wln, wm) =0 Win ~ Wm0.5 wiT~ or wm is unknown1 win and w,,, are unknownI~?h(~')-@h(~')l+~ otherwise bghmax-F~where bgh(w) is the fraction part of the bghcode ofw, bghmax is the mammal  difference between twobghcode fraction parts, and 6b is a penalty incurredif two words are not identlcM.The feature distance l)f  between a Gi~ node hi,, anda Gm nmle nm is given ms follows:D:(n~ ........ ) = E :~.
,  d:(n.,, f)df(nin, fn  : fv) =1 fi~(fnin : fvi,,) whose fni,~ = fn, andfv  is consistent with fVln0 otherwises A bgheode is a fraction of number.
Its integer part roughlycorresponds to a syntactic ~tegory, and therefore, only its frac-tion part is used.ACRES DE COLING-92, NANTES, 23-28 AOm" 1992 7 7 2 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992.//"Each matching pivot in ~t simibtr i-cover rule set musthave M I or M 1, to ensure that tim Gcs of the icover rllle set pr(lduce a t:ounected graph a~s a result.If there atre rules in the given i-cover rule set that donot s~ttlsfy this condition, they are renloved from theset of ruh, camlidates~ and the cover search methodis executed until an i cover rule set th~.t satisfies thisconditinn is found.
Such as, i-cover rule set is calleda proper  ru le  set.Next, for each projection nf the given i-cover, we nmstmake ;t copy of its origin rule~ m" ru le  ins tance ,  be>C;-LUSe one  r ide  IEay  make  lllort ?
thgn  oue  project(tinun (~in 'Figure 3: An isomorphic overIn the ~bove equatiolb tile consistency checking depends on a feature.4 Ru les  Combinat ion  Trans l~rIn this section, I present ile tlow of the transductionprocess by using RCT formalism.4.1 Rule SelectionA transfer process rnust first find a set of rules whoseGins' matching parts (called pro jec t ions )  totallyoverlap all input structure, and which is the mostsimilar to the intmt.
We call a uuimi of projectionsa cover ,  and a cower identical to the input an iso-morph ic  cover  (or i-cover).
In or(her words, wha'~we want here is the i-cover th;~t is the most similarto the input.
Further, if a G. ,  make ~L llrojection pjon a Gi~, then tile G,a is called the or ig in graphof the pj.
A p ivot  is a node of (;~,~ that has morethan one origin graph, attd a match ing  p ivot  is theorigin node of a pivot.
For instance, in Figure 3~ Aand D are pivots.There may be some methods for tinding such an i-cover rule set.
One method is to pick up a rule whoseprojection does not have any arc ow~rlapped bycover by other selected rules until there ~tre no un-covered arc% if it is desirable that a rule set should}lave few overlaps as possible.
We h;tve Klso developedauotlmr method using dynamic programmiug: whichcan choose the most similar rule set from cttndidaterule sets.
Briefly, it stores the most similar rule setfor each combination of arcs of each node from Ice.yesup to the root~ and the most similar rule set stored inthe root node is tile one for the input structure (see\[6\] for details),4.2 Prc-LexicalizationIt may It~qqlen that ~ lexit:al-hIrm of a 6'~ in the givenrub!
iust~tnce is lint ~t \[uuldldat~!
translation word ofits correspoudiltg word in the input, because a lexica\]form in a. l,~tci,iug node it, its G,.
is not necessarilythe same as the input word.
hl this (:~e, such a nodeis lexlcMized by c~L.dida.te tr~tnslation words.4.3 Node LabelingThe label of a (d,,, node becomes tit(."
I~bel of itsmateillng nude in (;~,,.
Since (;i,, nodes are labeleduniquely, (?
, .
.odes  are idso I~}mled uniquely.
On theuther h;md, the label of a (7,: nude n~ becomes the ttt-bel of a (,',,, node (n,,~) such that ~'z~ = M T(nm) or' \ [ 'here  n lay  1 h(lWeVl~r I be twn  nodes ill (Jc ill ;?
ruleinst~ulce that  are mapped by ;t node in (;,~ with M \]~.nd M ~, respectiwdy.
In the succeeding process, (1~nodes with the same bLbel are merged into one node inorder to gener~.te an mltpul structure, lu this phase,tim transferred hdmls of these two nodes shoulcl be d i fferent~ becnuse the two (lodes should not be mergedf.r this rule.
We must therefore relabel G~nodes ofrule it|stances as follows:G~ Node Re labe l ing :  for any label l i,, G~, if l isdistrilmted t\[) twt) distinct uoch!s of (;~ by troth M \[and M ~ fronl a node (,f (;,,,, then a I~bel l iu a G~tulde, which is mallped only by M \], or is mappedby both M \[ ~tnd M .
{ ~tnd has no descendants, isCil\[tUg{!d to I ' I4.4 GluingUnificatior~ is ~t well-known c(unput~tiuual tool forc(mm.cting ra.phs, and is widely used in natural lan-guage l)rocessing.
Usually, unitlcation uses two func-AcrEs DE COLING-92.
NANTES.
23-28 Ao~'rr 1992 7 7 3 P~oc.
oF COLING-92.
NANTI~S.
AUG. 23-28.
1992y(a)(x((b) (e) Gluing of (a) and (b)Figure 4: Example of gluinglionel rldags as data and unifies them front the rootnode down to the leaves.
In RCT, however, we wantto merge those nodes of two graphs that have thesame labels, even if their root nodes are different andthey are not functiona L as shown in Figure 4.
Unifi:cation, however, cannot proceed in this manner, be-cause it unifies two nodes that occupy the same p+sition, and always starts from the root node.
Forinstance, in Figure 4, even if unification starts fromnode B then it fails, since it tries to unify node D of(a) and node C of (b) for arc y.In Graph Grammars, this method of connecting twographs is called g lu ing \[2\].
The ghfing used inGraph Grammars is not concerned with the con-tent of a node, so it must be extended in order tocheck the consistency among the nodes to be glued.in SiraTi'an, if two features conflict then the featurewhose rule is more simi\[ar to the input is taken.Briefly, gluing is performed as followsg: ICivst, nodeswith the same label are me~yed if they are consistent.I f  arty nodes fail to be merged , then the ghdn 9 alsofails.
I f  all the me~ges ucceed, all ares are reat-lached to the original nodes, which may or may notbe me~yed.
As a result, some ares with the same la-bels and attached to the same nodes may be me~ed,if they are consistent.A glued graph is not nece~arily a cmmeeted, rooted,or acyclic graph, but we usually need a connectedrldag iu natural language processing.
Several con-stralnts atisfying such requirements are described inprevious papers \[14\]\[15\].After the G~s have been labeled and relabeled, thetarget structure is built by gluing the G~s.ODetMls of tire algorithm are given iu previous papers\[141115\].4.5 Post-LexicalizationThe constructed target structure is still bnperfect;there might be a G~ node thai.
has no lexical-form, be-cause there are some rules made froul transfer knowl-edge that have no lexlcal-forms.
Therefore, as in thepre-lexicalizatiou phase, non-lexical G: nodes are lex:icalized.5 ExamplesThis sectimt gives examples of translation bySimTcan.
Figure 5 shows how the Japanese sentmme"Kauojo no me ga totemo kireina no wo sitteiru" istranslated blto the English sentence "(1) know thatshe has very beautiful eyes."
In this figure, (a) isan input sentence structure, (b),(c), and (d) are rules(precisely, rule instances), and (e) is the output struc-ture produced.
In these rules, a mapping line notmarked M ~ and M ~ has both M ~ and M ~.
Dottedlines designate matching or gluing correspondencesbetween rule nodes and input or output nodes, re-spectively.
I:'urther, numbers prefixed by '*' denotenode labels.
In this example, we assume type hierar-chies in which, for instance, 'yougen(predicate)' is asuper-category of 'keiynu(axlj)', and "kaut6o(she)" isan instance of :hnmau'.
Note that the node labels ofboth "have" in rule instance (c) and lower 'pred' inrule instance (b) are changed from that of the corre-sponding Japanese word "kirei(beautiful)" by the G?node relabeling procedure.Another example is shown in Figure 6, which showshow the Japanese sentence "US ga ... wo fusegu tameni buhit/ul  kanzei wo kakeru" is translated into theEnglish sentence "US imposes tax on parts in orderto blockade .
.
.
.  "
In this example, (a) is an inputstructure, (b), (c) and (d) are matched rules, and(e) is the output structure produced.
The Japaneseverb "kakeru" has several trauslation candidates associated with different governing words, as shown inthe following +~able:Similarity dapaues+Eng/ish5.988 (meishi) ni zeikiu wo kakeruimpose tax on (noun)3,077 (meishi) wo salban ni kakerutake (noun) to court2.717 (meishi) wo mado ni kakeruhang (noun) in window2.545 (meishi) wo sutoobu ui kakeruput (noun) on stovehaukati ui kousui wo kakeru 2.040 spray perfume on handkerchiefThis table lists the top live similar rules for the part"buhin ni kanzei wo kakeru" of the input.
As shownACTI~ DE COLING-92.
NANTES, 23-28 AOt~q" 1992 7 7 4 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992., ?+..--- --.. " r '+*3 l i t  "LI' hive ~'~I  !-\o, ,,T",.
,~/<.~ ...
>~.---7'-~xt..~?.i Z-~ "~',,.
,--L-/')-% -" ~.+-,~L<,I \,t.--?
tz-'.9" t_7.9 ",'U ,,I "i~:...>.
~" ,~r ~t '3 .
.
- ,7_L .
, .
........... ~: ...... +_"~ "~I.~\ "~I I "*~ i" ..........
('~~....:.,..~-r~, fSb,7.
.......F igure  5: Exami~le 1 of t rans la t ion  by S imTi '~n,.-"\[" 2 ~.z  ~_d '2  " ..../ / / "  \[ (b) ~',,.\.
",..,.I,} "/" "'2 / '5 ", ' l  \ "6t !
t+ 4 _MI  ~ " -" *3 / t '4 \[ / '3 / ~ 4 mort 'x ', ..~" / ~.." :/ : '~ 'e  '.. >~ .. " F ' / ",/-" .. .. ........
.-.
"~ !i / ' , / "  ",....-.
:<i ................
"., // i i \ - -~"  .,.
...... :::~':(L~ f ~  / " / / "" / "  'x" , B';'~") ~ pr }pr,~l ,!
"i '{ l ( , , t ,~L .
.
j  .............. /..d.,F..~, i ", .5"  " '~ ,'(d)(c)F igure  6: Example  2 of  transl;~tiou by Sim!l'~nA~l.
:s BE COLING-92, Nnlqi~;~;, 23-28 ^ Ot~T 1992 7 7 5 PROC.
OF COLING-92, NANTES, AUG, 23-28, 1992in this table, rule (c) is the most similar one.
Notethat this similarity calculation was done for all rules,including non-lexical translation rules.
There wereno appropriate xample rules for the part "US gakakeru," and a non-lexical rule (b) was timrefore se-lected.
Further, note that the lexical forms in *3nodes of (c) and (el are different, and that *4 nodeof (el has no lexical form other than a preposition,whereas "4 node of (el has a lexical form.
The for-met was obtained by pre-lexicalization, and the latterby post-lexicaiizatiml.6 Re la ted  WorkAlthough there were several early experimentalprojects on CBMT \[4\]\[9\]\[11\], MWF-H \[10\] is the firstworking prototype of a case-based transfer systern~and demonstrates the promise of the CBMT alr-proadL It uses Japanese-to-English translation ex-anlples as translation rules: chooses the source trees ofexamples that are most similar to the iuput tree fromthe root node down to the leaves, and assembles thosetarget rees to produce an output tree, With respectto the transducing mechanism, MBT-II is a tree-to-tree transducer adopting one--to-one correspondeuce.MT by LTAGs \[1\], although it is not an attempt ofCI3MT, proposed a similar mechanism to RCT de-scribed in this paper.
It uses paired derivation treesof English and French as translation rules.
An inputsentence is parsed by the source grammar, and atthe same time, its output tree is generated by deriva-tion pairs of trees used in the parsing.
As a traus-dueer~ this mechanism is also a tree-to-tree transduceradopting one-to-one correspondence.In contrast, the RCT employed in SimTran is a rldag-to-rldag transducer adopting upward and downwardcorrespondences.
These extended correspondencesare desirable for expressing the structural discrepan-cies that often occur in translation.
Moreover, thistransducing model is a parallel production system \[2\]that  Call produce an output structure in one execu-tion of gluing if all the G~s required to produce anoutput are supplied,7 Conc lus ionIn this paper: 1 described a cas~based transfer sys-tem, SimTran, which combines I~CT with a similaritycalculation method.
RCT has powerful correspon-dences between the source structure and the targetstructure of a translation rule, which can expressmost structural discrepancies between two languages.As a transducing mechanism, RCT is a parallel non-destructive rldag-to-rklag transducing system.
I alsopropose a similarity calculation method for graphswhose nodes consist of syntactic and semantic fea-tures, and show that a translation rule th~tt has no\[exical forms can he used ms a default rule, that is,that such rules can provide a fail-sMe mechanism ifthere are no appropriate translation examples.References\[1\] Aheilld, A., Schabes, Y., and Joshi, A. K., "Usingl,exiealized Tags f,~r Machine qYanslation," Prec.
ofColing 90, 1990.\[2\] Ehrig, 11., "Introduction to the Algebraic Theory ofGraph Grammars," Prec.
of Inle,'national Workshopon Graph Grammars, LNCS 73, 1-69, 1979.\[3\] l(olodner, J. and ILiesbeck, C., "Cmse-Bmscd Reason-ings" tutorial textbook of l l th IJCAI, 1989.\[41 Nagao, M., "A Framework of a MechanicM Transla-tion between Japanese and English by Analogy Prin-ciple," Elittmrn, A. and Banerji, R.
(eds.)
: Arlificisland Human lntelhgence, NATO 1984.\[5\] National Language ltesoarch Institute: Bunrui GotHyou (in Japanese), Syuuei Syuppan, 1964.\[6\] Marnyama, ft. and Watanabe, l-l., "Tree Cover SearchAlgorithm for Example-Based Translation," Prec.
of4th 1st.
Conf.
on Theoretical and Melhodological 1s-sues in Machine Translation, 1992.\[7\] Melhy, A. K., "l,exical Transfer: A Missing Elementin Linguistic Theories," Prec.
of Coting 86, pp.
104 -106, 1986.\[8\] Nitro, Y., "Idiosyncratic Gap: A Tough Problem toStructure-hound Machine q~'anslation," Prec.
of Col-in~ 86, pp.
107--111, 1986.\[9\] Sadler, V., "Working with Analogical Semantics,"Forts Publications, 1989.\[10\] Sate, S. and Nagao, M., "Toward Memory-basedTranslations" Cohn9 90, 1990.\[11\] Sumita, E., lida, 11., attd Kohyama, 11., "Translatingwith Examples: A New Approach to Machine 'l~'ans-lotion," l'roc, of lnfo Japan 90, 1990.\[12\] Tomita, M. and Carbonell, J .G .
,  "AnotherStride Towards Knowledge-Ba~qed Machine Transla-tion," Prec.
of Coling 86, 1986\[13\] Tsujii, J. and Fujita, K., "bexical ~lYansfer bmsed onbilingual signs: Towards interaction during transfer,"Prec.
of Seoul Int Conf.
on NLP, 1990.\[14\] Watanabe~ ll., "A Model of a Transfer t'roccss UsingCombinations of Translation Rules," Proc.
of PacificRim of Int.
Conf.
on AI '90, 1990.\[15\] Watanabe, tt., "A Formal Model of Transfer UsingRules Combination," submitted to Machine Transla-tion, 1991.AcrEs DE COLlNG-92, NANTEs, 23-28 AOt'Zr 1992 7 7 6 PROC.
OF COLlNG-92, NANTES, AUG. 23-28, 1992
