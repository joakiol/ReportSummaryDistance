A tagger / lemmat iser  for Dutch medical  languagePeter SpynsUniversity of Gent, Division of Medical InformaticsDe Pintelaan 185 (5K3), B-9000 Gent, BelgiumPeter .
Spynscrug .
ac .
beAbstractIn this paper, we want to describe a tag-ger/lemmatiser for Dutch medical voca-bulary, which consists of a full-form dic-tionary and a morphological recogniserfor unknown vocabulary coupled to anexpert system-like disambiguation mo-dule.
Attention is also paid to the maindatastructures: a lexical database andfeature bundles implemented as direc-ted acyclic graphs.
Some evaluation re-sults are presented as well.
The tag-ger/lemmatiser currently functions as alexical front-end for a syntactic parser.For pure tagging/lemmatising purposes,a reduced tagset (not suited for sentenceanalysis) can be used as well.1 IntroductionMedical patient reports consist mainly offree text, combined with results of va-rious laboratories.
While nmnerical datacan easily be stored and processed for ar-chiving and research purposes, free textis rather difficult to be processed by acomputer, although it contains the mostrelevant information.
IIowever, only afew NLP-driven systems have actuallybeen implemented (lfi'iedman and John-son, 1992).For Dutch, a prototype covering a lar-ger part of the Dutch grammar and me-dical vocabulary is under development.This paper focuses on a spin-off-- c.q.
acontextual tagger/lemmatiser (T/L) - -of the lexical component of the DutchMedical Language Processor (DMLP)(Spyns and De Moor, 1996).
A T /L  isquite valuable for several kinds of corpusstudies concerning the medical vocabu-lary (co-occurrence patterns, statisticaldata, .
.. ).
For efficient sentence analysisin particular, it is necessary to disambi-guate the results of morphological na-lysis before they can be passed oil theparser.In the following sections, we will describein detail the different knowledge bases(cf.
section 2) and the implementation ftile major data structures (cf.
section 3).Each section is illustrated by an cxaIn-ple or some implementation details.
Thesubsequent section (4) is devoted to theevaluation.
The paper ends with a dis-cussion (section 5).2 Linguistic KnowledgeIn essence, the T/L  is a generate-and-test engine.
All possible morphologi-cal analyses of a word are provided (bythe database or tile word recogniser cf.section 2.1), (generator) ,  and the con-textual disambiguator (cf.
section 2.2),(test engine), must reduce as much aspossible tile potentially valid analyses tothe one(s) effectively applicable in thecontext of the given input sentence 12.1 Lexlcal F ront -endThe dictionary is conceived as a ful lfo rm d ict ionary  in order to speed upthe tagging process.
Experiments (De-haspe, 1993b) have shown that full formretrieval is in most of the cases signifi-cantly faster than canonical form com-putation and retrieval.
(cf.
also (Ritehieet al, 1992, p.201)).
The lexical data-base for Dutch was built using severalresources: an existing electronic valencydictionary 2 and a list of words extrac-ted from a medical corpus (cardiologypatient discharge summaries).
The al-ready existing electronic dictionary and1Before the actual inguistic analysis takes place,some preprocessing (marking of sentence boundaries,etc.)
is done.2This resulted from the K.U.
Leuvcn PROTON-project (Dehaspe and Van Langendonck, 1991)1147the newly coded entries were convertedand merged into a common representa-tion in a relational database (Dehaspe,1993a).
A Relational DataBase Manage-ment System (RDBMS) can handle verylarge amounts of data while guarante-eing flexibility and speed of execution.Currently, there are some 100.000 fullforms in the lexical database (which issome 8000 non inflected forms).
For themoment, the database contains for themajor part simple wordforms.
Complexwordforms nor idiomatic expressions areyet handled in a conclusive manner.Itowevcr, since an exhaustive dictionaryis an unrealistic assumption, an intel-l igent word  recognlser  tries to copewith all the unknown word forms (Spyns,1994).
The morphological recognisertries to identify the unknown form bycomputing its potential linguistic charac-teristics (including its canonical form).For this purpose, a set of heuristics thatcombine morphological (inflection, deri-vation and compounding) as well as nonmorphological (lists of endstrings cou-pled to their syntactic category) know-ledge.
When these knowledge sourcesdo not permit to identify the unknownforms, they are marked as guesses andreceive the noun category.Actually, a difference is made betweenthe regular full form database dictionaryand a much smaller canonica l  fo rmd ic t ionary .
The latter consist of auto-matically generated entries.
Those ent-ries are asserted as temporary canoni-cal form lexicon entries and do not needto be calculated again by the recogniserpart of the T /L  when encountered a se-cond time in the submitted text.
A sub-stantial speedup can be gained that way.2.2 The  D isambiguatorThe contextual 3 disambiguator of theDMLP is implemented as an "expert-like system" (Spyns, 1995), which doesnot only take the immediate left and/orright neighbour of a word in the sentenceinto account, but also the entire left orright part of the sentence, depending onthe rule.
E.g.
if a simple form of theverb 'hebben' \[have\] appears, the auxilLary reading is kept only if a past particLple is present in the context 4aWe only consider the syntactic ontext.4Unlike in English, the past participle in Dutchdoes not need to occupy a position adjacent o theauxiliary.The ru le  base can be subdivided into 21i.ndependent rule sets.
A specific mecha-nism selects the appropriate ruleset o betriggered.
Some rulesets are internallyordered.
Iit that case, if the most speci-fic rule is fired, the triggering of the moregeneral rules is prevented.
In other cases,all the rules of a ruleset are triggered se-quentially.
Some rules are mutually ex-clusive.
The rules are implemented asProlog clauses, which guarantees a de-clarative style of the rules (at !east to alarge extent).The contro l  mechan ism works with anagenda that contains the position of thewords ill the input sentence.
The posi-tion in the sentence uniquely identifies aword (and thus its corresponding ( roupof different) morphological reading(s)).Every position in the agenda is sequenti-ally checked whether it can be disambi~guated or not.
If an ambiguous word isencountered, its position is kept on theagenda.
For every clement of the agenda,all possible binary combinations of thesyntactic ategories are tried (failure dri-ven loop).
1'o avoid infinite loops (repea-tedly firing the same rule that is not ableto alter the current set of morphologicalreadings), the same ruleset can only befired once for the word on the same posi-tion during the same pass.
As long as thedisambiguator can reducc the number ofreadings and the agenda is not empty, anew pass is performed.3 So f tware  Eng ineer ingIn order to preserve the reusability of thedictionary, an extra software layer hidesthe database.
This layer transforms theinformation from the database into a fea-ture bundle containing the applicationspecific features.
The software layer re-stricts and adapts the "view" (just likethe SQL-views) the programs have onthe information of a lexical entry .
Thismethods allows that all sorts of informa-tion can be coupled to a lexical entry inthe database while only the informationrelevant for a specific NLP-applicationpasses "the software filter".
Besides thequalitative aspect, the filter can also af-fect the quantitative aspect by collapsingor expanding certain entries (e.g.
the 1stand 2nd person singular of many verbsconstitute the same entry in the data-base but are differentiated afterwards) orexcluding specific combinations after ex-amination of the input.1148The feature  bund les  constitute themain datastructure of the T/L.Atself.They arc conceived as Directed Aey-clic Graphs, which are implemented asopen ended Prolog lists (Gazdar andMellish, 1989).
This "low level" imple-mentation is only known by the predica-tes that make up the interface.
Graph-unification provides a neat and easy wayto impose various restrictions.
A lingui-stic restriction can be exl)rcssed in termsof feature value pairs, which in turn canbe represented as a l)AG.
This DAG actsas filter towards other DAGs.
The DAGsthat are unifyable with the "filter DAG"meet the imposed restriction.
The onlything to do is to define the appropriatefilters.
The contextual rules mainly con-sist of such filter DAGs.The T/L, able to analyse words lackingfrom the dictionary, is intended to fimc-tion primarily as a lexical front-end forthe DMIA ) syntactic analyser (Spyns andAdriaens, 1992).
Itowever, as the resultof the tagging and lemmatising processconsists of feature bundh's implementedas DAGs, the output format can be ad-apted very easily if required (by definingvarious "format filters").
The outputformat can be transduced to the formatrequired by the "SAC-tools" o1' the Sy-stem Management 'lbols of the Menelas-project (Ogonowski, 1993).
Another fibter transforms the output to the formatof the Multi-TMe semantic tagger (Ceu-sters, 1994).4 Evaluat ionIn order to assess the performance of theT /L ,  several data sets were used.
Alearning set of 1314 tokens (5 reports)from the cardiology department (cardio)should eliminate as much as possibleerrors due to unknown vocabulary.
Anew large test set of 3167 tokens of 35neurosurgical reports was fed to the T /Lto see how robust it is when confrontedwith the vocabulary of a comt)letely newdomain.
The t)roblem with an applica-tion of this type is the trade-olr betweenoverkill (a good analysis is injustly dis-carded) and undershoot (an invalid ana-lysis is kept).
The extensive tagset (tag-setl) provides all the morphosyntaeticinformation as required by the DMLPparser for sentence analysis, while the re-duced tagset (tagset2) consists of 15 ('a-tegories and 25 speciliers (which gives 43meaningfifl combinations).
This simplifi-'fable 1: results of contextual tagging with an ex-tensive tagset (tagsetl) versus a reduced one (tag-set2) on the eardio and neuro setsbail21b ad21tagsetl1314102129cardio tagset2 cardio100% 1314 100%1083tagsetl neuro3167 100%3992.23 % 75 97.03 %82.42 % 1200 91.32 %446389 85.91%2332 73.63 %tagset231672762612630neuro100 %91.28 %83.04 %cation of the syntactic information grea-tly improves the results.All the results were manually examinedand synthesised (of.
table 1).
As soonas even one feature of the complete fea-ture bundle with linguistic informationis wrong, the analysis as a whole is con-sidered to be incorrect.
All the wordsthat have wrong, lacking, doubtful ormore than 2 competing analyses are con-sidered as bad.
Sometimes, two compe-ting readings could not be disambigua-ted without sernantico-pragmatic know-ledge.
In addition, we deliberately leftsome ambiguities pending for the syntac-tic parser to avoid the danger of over-kill (el.
also (Jaeobs and l:\[au, 1993,pp.166--167) on this matter).
These ea-ses of "double analysis" are grouped inthe "class 2''.
The question whetherthese cases should be considered as bador correct is left open "~The difference between the results ismainly due to the amount of unknownvocabulary (around 9 % for the cardioset  VS. a round 18% for the  neuro  setwhich results in a difference of 82.42 %vs.
73.63 % and 91.32 % vs. 83.04 %)and the nature of the tagsets (82.42 %vs.
91.32 % and 73.63 % vs. 8'.1.0/1%).5 Discuss ionAs tar as we know, only one T /L  for me-dical English exists (Paulussen and Mar-tin, 1992), which has recently been ad-apted to medical Dutch and extendedwith semantic lal)elling (Maks and Mar--tin, 1996).
Most of ttle T/Ls  6 attain a5Probably, the ~mswer will be different dependingon tile task of tile T/L: "pure" tagging or auxiliaryfunction for the parser.~Cf.
(l'aulussen, 1992) for a detailed overviewand discussion of some T/l,s - including CGC, Tag-214995% - 97% score, although for ENGCGa 99.7 % succes rate is claimed (Tapa-nainen and Jiirvinen, 1994).
All thesetaggers use a rather restricted tagset.Therefore, we consider it fair to com-pare only our results on tagset2 with thescores of the mentioned T/Ls.
It mustbe mentioned as well that word order inmedical Dutch can be rather free.
Mo-reover, medical sublanguage sometimesdeviates considerably from the standardgrammar ules.
E.g.
determiners can beeasily skipped, which enhances the ditIi-culty to distinguish a noun from certainconjugated verbal forms.
As a conclu-sion, we believe that, our T/L performsrelatively well and still has potentialitiesfor improvement.AcknowledgementsParts of this work were supported bythe MENELAS (AIM #2023) (Zweigen-baum, 1995) and DOME (MLAP #63-221) projects (S~roussi, 1995) of the E.U.We also would like to thank Luc Dehaspefor his work on the lexical database (De-haspe, 1993a).Re ferencesCeusters W., 1994, The Generation ofMULTI-lingual Specialised Lexicons byusing Augmented Lemmatizer-Taggers,Multi-TALE Delivrable #1,Dehaspe L. & Van Langendonck W.,1991, Automated Valency Dictionary ofDutch Verbs, K.U.
Leuven.Dehaspe L., 1993a, Report on the buil-ding of the MENELAS lexical database,Technical Report 93-002, Division of Me-dical Informatics, K.U.
Leuven.Dehaspe L., 1993b, Full form retrie-val versus canonical form computation ofmorphological data: a performance ana-lysis, Technical Report 93-004, Divisionof Medical Informatics, K.U.
Leuven.Friedman C. & Johnson S., 1992, Medi-cal Text Processing: Past achievements,future directions, in Ball M. & CollenM., Aspects of the Computer-based Pati-ent Record: 212 - 228, Berlin: Springer -Verlag.Gazdar G. & Mellish C., 1989, NaturalLanguage Processing in Prolog: an in-troduction to computational linguistics,Addison-Wesley.git, Parts, Claws, Dilemma, the Pare Tagger and"Brill tagger" - as well as (Voutilainen, 1995).theJacobs P. &Rau L., 1993, Innovationsin text interpretation, in Artificial Intel-ligence 63:143 - 191 .Maks I.
& Martin W., 1996, MULTI-TALE: Linking Medical Concepts bymeans of Frames, Proc.
of COLING 96,Copenhagen.Ogonowski A., 1993, SAC Manuel Uti-lisateur, GSI-ERLI, Internal Report.Paulussen H., 1992, Automatic Gram-malical Tagging: description, compa-rison and proposal for augmentation,U.I.A., Wilrijk (M.A.
thesis).Paulussen H. & Martin W., 1992,DILEMMA-2: A Lemmatizer-Tagger foMedical Abstracts, in Proc.
of ANLP92, 141 - 146, Trento.Ritchie G., R.ussell G., Black A.
& Pul-man S., 1992, Computational Morpho-logy: Practical Mechanisms for the Eng-lish Lexicon, MIT Press.Sdroussi B., & DOME Consortium,1995, Document Management in Heal-thcare: Final Report, DOME Deliverable#D.02, Paris.Spyns P. & Adriaens G., 1992, Applyingand Improving the Restriction GrammarApproach for Dutch Patient DischargeSummaries, Proc.
of COLING 92, 1254- 1268, Nantes.Spyns P., 1994, A robust category gues-ser for Dutch Medical anguage, in Proc.of ANLP 94, 150-155, Stuttgart.Spyns P., 1995, A contextual Disambi-guator for Dutch medical language, inProc.
of the 7th Benelux Workshop onLogic Programming, Gent.Spyns P. & De Moor G., 1996, A DutchMedical Language Processor, in Interna-tional Journal of Bio-Medical Enginee-ring, (in press).Tapanainen P. & Jiirvinen T., 1994,Syntactic Analysis of natural languageusing linguistic rules and corpus-basedpatterns, in Proc.
of COLING 94, 629- 634, Kyoto.Voutilainen A., 1995, A syntax-basedpart-of-speech analyser , in Proc.
ofEACL 95, Dublin.Zweigenbaum P. & MENELAS Consor-tium, 1995, Menelas: Coding and In-formation Retrieval from Natural Lan-guage Patient Discharge Summaries, inLaires M., Ladeira M. & Christensen J.,Health in the New Communications Ape,IOS Press, Amsterdam, 82 - 89 .1150
