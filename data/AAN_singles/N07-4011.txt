NAACL HLT Demonstration Program, pages 21?22,Rochester, New York, USA, April 2007. c?2007 Association for Computational LinguisticsLearning to find transliteration on the WebChien-Cheng Wu Department of Computer Science National Tsing Hua University  101 Kuang Fu Road, Hsin chu, Taiwan d9283228@cs.nthu.edu.twJason S. Chang Department of Computer Science National Tsing Hua University  101 Kuang Fu Road, Hsin chu, Taiwan jschang@cs.nthu.edu.twThis prototype demonstrate a novel method for learning to find transliterations of proper nouns on the Web based on query expansion aimed at maximizing the probability of retrieving translit-erations from existing search engines.
Since the method we used involves learning the morphologi-cal relationships between names and their translit-erations, we refer to this IR-based approach as morphological query expansion for machine trans-literation.
The morphological query expansion approach is general in scope and can be applied to translation and transliteration, but we focus on transliteration in this paper.
Many texts containing proper names (e.g., ?The cities of Mesopotamia prospered under Parthian and Sassanian rule.?)
are submitted to machine translation services on the Web every day, and there are also service on the Web specifically tar-get transliteration of proper names, including CHINET (Kwok et al 2005) ad Livetrans (Lu, Chien, and Lee 2004).
Machine translation systems on the Web such as Yahoo Translate (babelfish.yahoo.com) and Goo-gle Translate (translate.google.com/translate_t.g) typically use a bilingual dictionary that is either manually compiled or learned from a parallel cor-pus.
However, such dictionaries often have insuffi-cient coverage of proper names and technical terms, leading to poor translation due to out of vo-cabulary problem.
The OOV problems of machine translation or cross language information retrieval can be handled more effectively by learning to find transliteration on the Web.
Consider Sentence 1 containing three place names.
1.
The cities of Mesopotamia prospered under Parthian and Sassanian rule.2.
????
?parthian ????sassanian???
3.
???????????????????????
Google Translate produce Sentence 2, leaving ?Parthian?
and ?Sassanian?
not translated.
A good response might be a translation like Sentence 3 where all place names have appropriate translitera-tions (underlined).
These transliterations can be more effectively retrieved from mixed code Web pages by extend each of the place names into a query (e.g., ?Parthian NEAR ??).
Intuitively by requiring one of likely prefix transliteration mor-phemes (e.g., ???
or ???
for ?par-?
names), we can bias the search engine towards retrieving the correct transliterations (e.g., ?????
and ?????)
in snippets of many top-ranked documents.
The method involves pairing up the prefixing morphemes between name and transliteration in a set of train data, calculating the statistical associa-tion for these pair, and selecting pairs with a high degree of statistical association.
The results of this training stage are morphological relationships be-tween prefixes and postfixes of names and translit-erations.
At run time, a given name is automati-cally extended into a query with relevant prefixing morphemes, then the query is submit to some search engine.
After retrieving snippets from a search engine, the system extract transliterations from the snippets based on redundancy, proximity between name and transliteration, and cross lan-guage morphological relationships of prefix and postfix.
We present a new machine transliteration sys-tem based on information retrieval and morpho-logical query expansion.
The system automatically21learns to extend the proper names into a query ex-pected to retrieve and extract transliterations of the proper names.
Consider the case of transliteration of ?Parthian.?
The system looks at possible pre-fixes of the given name, including p-, pa-, par-, and part-, and determine determines the best n query expansions (e.g., ?Parthian ?,?
?Parthian ??).
These effective expansions automatically dur-ing training by analyzing a collection of 23,615 place names and transliterations pairs.
We evaluated the prototype system using a list of 500 proper names.
The results show that 60% of the time there are sufficient relevant data on the Web to carry out effective machine transliteration based on IR and morphological query expansion.
Of many results returned by the system, the top 1, two and three results are 0.88, 0.93, and 0.94.
By performing query expansion, the system improves the recall rate from 0.48 to 0.60.
The results indicate that most names and trans-literation counterparts can often be found on the Web and the proposed method are very effective in  retrieving and extracting transliterations based on a statistical machine transliteration model trained on a bilingual name list.
Our demonstration prototype shows alternative transliterations in use on the Web and snippets of such usage, so that the user can easily validate these transliterations.
The prototype supports: ?
Searching and extracting transliterations of a given term ?
Listing alternative transliterations on the Web ?
Listing alternative transliteration in a local dictionary  ?
Browsing of snippets containing for each al-terative transliteration ?
Saving transliterations in a local dictionary ?
Selecting and saving transliteration in snip-pets to a local dictionary The method explored here can be extended as an alterative way to support such MT subtasks as back transliteration (Knight and Graehl 1998) and noun phrase translation (Koehn and Knight 2003).
Fi-nally, for more challenging tasks, such as handling sentences, the improvement of translation qualityprobably will also be achieved by combining this IR-based approach and statistical machine transla-tion.
For example, a preprocessing unit may re-place the proper names in a sentence with translit-erations (e.g., mixed code text such as Sentence 4) on the fly or by looking up a local dictionary before sending it off to MT for finally translation.
4.
The cities of ??????
prospered under ???
and ??
rule.
Morphological query expansion represents an innovative way to capture cross-linguistic relations in name transliteration.
The method is independent of the bilingual lexicon content making it easy to adopt to other proper names such person, product, or organization names.
This approach is useful in a number of machine translation subtasks, including name transliteration, back transliteration, named entity translation, and terminology translation.
References Y. Cao and H. Li.
(2002).
Base Noun Phrase Transla-tion Using Web Data and the EM Algorithm, In Proc.
of COLING 2002, pp.127-133.
K. Knight, J. Graehl.
(1998).
Machine Transliteration.
In Journal of Computational Linguistics 24(4), pp.599-612.
P. Koehn, K. Knight.
(2003).
Feature-Rich Statistical Translation of Noun Phrases.
In Proc.
of ACL 2003, pp.311-318.
KL Kwok, P Deng, N Dinstl, HL Sun, W Xu, P Peng, CHINET: a Chinese name finder system for docu-ment triage.
Proceedings of 2005 International Con-ference on Intelligence, 2005.
T. Lin, J.C. Wu, and J. S. Chang.
(2004).
Extraction of Name and Transliteration in Monolingual and Paral-lel Corpora.
In Proc.
of AMTA 2004, pp.177-186.
WH Lu, LF Chien, HJ Lee.
Anchor text mining for translation of Web queries: A transitive translation approach.
ACM Transactions on Information Sys-tems (TOIS), 2004.
M. Nagata, T. Saito, and K. Suzuki.
(2001).
Using the Web as a bilingual dictionary.
In Proc.
of ACL 2001 DD-MT Workshop, pp.95-102.22Demonstration ScriptThe system runs under Microsoft Windows as a local application pro-gram.
It opens up a form and accepts a name for translation.
The user can choose to search on the Web or to look up in the local dictionary for re-sults previously obtained and edited.The system now ex-panded the query and sending them to a search engine to retrieve snip-pets containing translit-erations.23The system extracted transliterations from the snippets and showed the list of most likely an-swers.The user can click each answer and view a list of snippets where the trans-literation appears.24The user finds and selects ??????
in the snippets for ????
?The transliteration ??????
is added to the listThe user can do a num-ber of things with the transliteration list: 1.
View the snip-pets associated with each transliteration 2.
Delete a transliteration 3.
Save the list along with the snippet 4.
Select a string in the snippets and add it to the an-swer list by clicking the right bottom25Ngram Char Map_no Ngramno Prob alla ?
2 11 0.1818 alla ?
9 11 0.8182 anti ?
1 11 0.0909 anti ?
10 11 0.9091 bart ?
11 11 1.0000 bata ?
1 11 0.0909 bata ?
10 11 0.9091 belo ?
2 11 0.1818 belo ?
9 11 0.8182 beth ?
1 11 0.0909 beth ?
10 11 0.9091 buch ?
2 11 0.1818This slide shows the relationships between the prefixes of names and translations.Ngram Char Map_no Ngramno Prob ague ?
4 11 0.3636 ague ?
6 11 0.5455 ague ?
1 11 0.0909 alen ?
1 11 0.0909 alen ?
2 11 0.1818 alen ?
8 11 0.7273 andi ?
1 11 0.0909 andi ?
7 11 0.6364 andi ?
2 11 0.1818 andi ?
1 11 0.0909This slide shows the relationships between the postfixes of names and translations.26Cluster Morpheme Phonetic  symbol ?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
??
?
?
?
?The performance can improved by clustering transliteration user can click each answer and view a list of snippets where the transliteration appears.27
