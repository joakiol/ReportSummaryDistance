Manag ing  in format ion  at l inguist ic interfaces*Johan Bos and C.J.
RuppComputerlinguistikUniversit~it des SaarlandesD-66041 Saarbrticken{bos, cj }@toll.
uni-sb, deBianka Buschbeck-Wolf and Michael DornaInstitut ftir Maschinelle Sprachverarbeitung (LMS)Universit~it StuttgartD-70174 Stuttgart{bianka, michl}@ims, uni-sl;utl;gart, deAbstractA large spoken dialogue translation system imposesboth engineering and linguistic constraints on theway in which linguistic information is communi-cated between modules.
We describe the design anduse of interface terms, whose formal, functional andcommunicative role has been tested in a sequence ofintegrated systems and which have proven adequateto these constraints.1 IntroductionThis paper describes the development and usageof interface representations for linguistic informa-tion within the Vorbmobil project: a large dis-tributed project for speech-to-speech translation ofnegotiation dialogues, between English, Germanand Japanese.
We take as our reference point theVerbmobil Research Prototype (Bub et al, 1997),but this is only one of a sequence of fully integratedrunning systems.
The functional, formal and com-municative role of interface terms within these sys-tems, once instigated, has already been maintainedthrough changes in the overall architecture and con-stitution of the Ve rbmobil consortium.There are two aspects to our story:?
the practical and software engineering con-straints imposed by the distributed evelop-ment of a large natural anguage system.?
the linguistic requirements of the translationtask at the heart of the system.?
This work was funded by the German Federal Ministry ofEducation, Science, Research and Technology (BMBF) in theframework of the Vorbmobil project under grant 01 IV 701R4 and 01 IV 701 N3.
The responsibility for this article lieswith the authors.
Thanks to our many Vorbmobil colleagueswho helped to design and develop the results presented here,and also to the anonymous reviewers for giving useful hints toimprove this paper.The prominence of the engineering requirementsis further heightened by the fact that we are dealingwith a spoken dialogue system which must strivetowards real time interactions.We proceed by describing the requirements of theVorbmobi!
Research Prototype, the actual contentsof the Verbmobil Interface Term (henceforth VIT),the semantic formalism encoded within VITs andprocessing aspects.
We conclude that VITs fulfillthe joint goals of a functional interface term andan adequate linguistic representation within a singledata structure.1.1 ModularityWe are concerned here with the interface represen-tations exchanged between modules that make useof traditional linguistic concepts.
Figure 1 shows asimplified form of the Verbmobi!
Research Proto-type architecture I , the modules in the grey shadedarea make use of VITs as linguistic interface termsand are loosely termed the "linguistic" modules ofthe system, in contrast o the other modules shownwhich are chiefly concerned with the processing ofacoustic signals.
The linguistic design criteria forVITs derive mainly from the syntactic and seman-tic analysis module, labelled SynSem, the generationand the transfer modules.One point that should be made at the outset is thatthese linguistic modules really are modules, ratherthan, say, organisational constructs in some largerconstraints ystem.
In practice, these modules aredeveloped at different sites, may be implementedin different programming languages or use differ-ent internal inguistic formalisms, and, indeed, theremay be interchangeable modules for the same func-tion.
This level of modularity, in itself, provides uf-ficient motivation for a common interface represen-~ln that we have excluded the modules that employ alter-native techniques and express no interest in linguistic informa-tion.160I Recogr t i t ion l -~  Prosody "~; SynSem ~:  ~:z ~,!
::~ :: : ;:':~" ~: : :  Synthesis I I J.............. ~;~ .
.
.
.
.
~2~ .
.
.
.
.
.
.
.
.
.
.
............. ~ .... , .......Figure 1: A Simplified iagram of the Vorbraobil Research Prototype Architecturetation among the linguistic modules, allowing thedefinition of a module's functionality in terms ofits I/O behaviour, but also providing a theory in-dependent linguafranca for discussions which mayinvolve both linguists and computer scientists.
TheVerbraobil community is actually large enough torequire such off-line constructs, too.1.2 Encoding of Linguistic InformationA key question in the design of an interface lan-guage is what information must be carried andto what purpose.
The primary definition criterionwithin the linguistic modules has been the transla-tion task.
The actual translation operation is per-formed in the transfer module as a mapping betweensemantic representations of the source and targetlanguages, ee (Dorna and Emele, 1996).
However,the information requirements of this process areflexible, since information from various levels ofanalysis are used in disambiguation within the trans-fer module, including prosody and dialogue struc-ture.To a large extent he information requirements di-vide into two parts:?
the expressive adequacy of the semantic repre-sentation;?
representing other types of linguistic informa-tion so as to meet the disambiguation require-ments with the minimum of redundancy.The design of the semantic representations en-coded within VITs has been guided by an ongoingmovement in representational semantic formalismswhich takes as a starting point the fact that certainkey features of a purely logical semantics are notfully defined in natural language utterances and typ-ically play no part in translation operations.
Thishas been most clearly demonstrated for cases wherequantifier scope ambiguities are exactly preservedunder translation.
The response to these observa-tions is termed underspecification a d various suchunderspecified formalisms have been defined.
Inone sense underspecification is, in itself, a form ofinformation management, in that only the informa-tion that is actually present in an utterance is repre-sented, further disambiguation being derived fromthe context.
In the absence of such contextual in-formation further specificity can only be based onguesswork.While the management of information in the VITsemantics consists of leaving unsaid what cannot beadequately specified, the amount of information andalso the type of information in the other partitionsof the VIT (see Section 2.1) has been determinedby the simple principle of providing information onjustified demand.
The information provided is alsoquite varied but the unifying property is that therequirements are defined by the specific needs oftransfer, in distinguishing cases that are truly am-biguous under translation or need to be resolved.For example:(1) Geht das bei ihnen?a.
Is it possible for you?b.
Is it possible at your place?In (1), the German preposition bei displays anambiguity between the experiencer reading (1 a) andthe spatial interpretation (lb).
The resolution of thisambiguity requires in the first instance three piecesof information: the type of the verb predicate, thesort of the internal argument of bei and the sortof the subject.
This, in turn, requires the resolutionof the reference of the anaphor das, where mor-phosyntactic constraints come into play.
If the ref-erent has the sort t ime then the experiencer read-ing (la) can be selected.
This is the more usual re-sult in the Verbmobil context.
Should the referent161Slot Name DescriptionVIT IDIndexConditionsConstraintsSortsDiscourseSyntaxTense and AspectProsodycombines aunique tag for the turn segment described by the current VIT and theword lattice path used in its linguistic analysis;a triple consisting of the entry points for traversing the VIT representation;labelled conditions describing the possibly underspecified semantic ontent of anutterance;scope and grouping constraints, e.g.
used for underspecified quantifier and opera-tor scope representation;sortal specifications for instance variables introduced in labelled conditions;additional semantic and pragmatic information, e.g.
discourse roles for individualinstance;morpho-syntactic features, e.g.
number and gender of individual instances;morpho-syntactic ense combined with aspect and sentence mood information,e.g.
used for computing surface tense;prosodic information such as accenting and sentence mood.Table 1: A list of VIT slots.be sortally specified as a situation, further infor-mation will be required to determine the dialoguestage, i.e.
whether the time of appointment is beingnegotiated or its place.
Only in the latter case is thespatial reading (lb) relevant.
(2) Dann wiirde das doch gehena.
Then, it WOULD be possible, after all.b.
It would be possible, wouldn't it?Consider the discourse particle doch in (2) whichcan be disambiguated with prosodic information.When doch is stressed and the utterance has fallingintonation, it functions as a pointer to a previousdialogue stage.
Something that was impossible be-fore turned out to be feasible at the utterance time.Then, doch is translated into after all and the auxil-iary takes over the accent (2a) 2.
If (2) has a risingintonation and the particle is not stressed, it signalsthe speaker's expectation of the hearer's approvingresponse.
In English, this meaning is conveyed bya question tag (2b).
Lieske et al (1997) provide amore detailed account of the use of prosodic infor-mation in Verbmobil.In addition to the information that is explicitlyrepresented in the specified fields of a VIT, in-cluding the surface word order that can be inferredfrom the segment identification, and the resolutionof underspecified ambiguities in context, transfermight require further information, such as domain-specific world knowledge, speech act or discourse2We indicate prosodic accent with SMALL CAPITALS.stage information.
This information can be obtainedon demand from the resolution component (see Fig-ure 1).
This flexible approach to the informationrequired for transfer is termed cascaded disam-biguation (Buschbeck-Wolf, 1997) and is balancedagainst he fact that each level of escalation impliesa correspondingly greater share of the permissibleruntime.2 The Verbmobil Interface TermThe VIT encodes various pieces of information pro-duced and used in the linguistic modules.
The con-tent of a VIT corresponds to a single segment (orutterance) in a dialog turn.
This partitioning of turnsenables the linguistic components to work incre-mentally.2.1 Multiple Levels of InformationA VIT is a record-like data structure whose fieldsare filled with semantic, scopal, sortal, morpho-syntactic, prosodic, discourse and other information(see Table 1).
These slots can be seen as analysislayers collecting different ypes of linguistic infor-mation that is produced by several modules.
The in-formation within and between the layers is linkedtogether using constant symbols, called "labels","instances" and "holes".
These constants could beinterpreted as skolemized logical variables whicheach denote a node in a graph.
Besides purely lin-guistic information, a VIT contains a unique seg-ment identifier that encodes the time span of the an-alyzed speech input, the analyzed path of the orig-inal word lattice, the producer of the VIT, whichlanguage is represented, etc.
This identifier is used,162for example, to synchronize the processing of anal-yses from different parsers.
For processing aspectsof VITs see Section 3.A concrete xample of a VIT is given in Figure 2in a Prolog notation where the slots are also marked.This example is further discussed in Section 2.2.2.2 VIT SemanticsThe core semantic ontent of the VIT is containedin the two slots: Condi t ions  and Const ra in ts .The conditions represent the predicates of the se-mantic content and the constraints the semanticdependency structure over those predicates.
Thispartitioning between semantic ontent and seman-tic structure is modelled on the kind of represen-tational metalanguage employed in UDRS seman-tics (Reyle, 1993) to express underspecification.The semantic representation is, thus, a metalan-guage expression containing metavariables, termedlabels, that may be assigned to object language con-structs.
Moreover, such a metalanguage is minimallyrecursive 3, in that recursive structure is expungedfrom the surface level by the use of metavariablesover the recursive constituents of the object lan-guage.In UDRSs quantifier dependencies and otherscope information are underspecified because theconstraints provide incomplete information aboutthe assignment of object language structures to la-bels.
However, a constraint set may be monoton-ically extended to provide a complete resolution.VIT semantics follows a similar strategy but some-what extends the expressivity of the metalanguage.There are two constructs in the VIT semanticmetalanguage which provide for an extension inexpressivity relative to UDRSs.
These have bothbeen adopted from immediate precursors within theproject, such as Bos et al (1996), and further e-fined.
The first of these is the mechanism of holesand plugging which originates in the hole seman-tics of Bos (1996).
This requires a distinction be-tween two types of metavariable employed: labelsand holes.
Labels denote the instantiated structures,primarily the individual predicates.
Holes, on theother hand, mark the underspecified argument po-sitions of propositional arguments and scope do-mains.
Resolution consists of an assignment of la-3We owe the term minimal recursion to Copestakeet al (1995), but the mechanism they describe was already inuse in UDRSs.vit(X Segment IDvitID(sid(ll6.a.ge.2.181.2.ge.y.syntaxger).X WHG Strin E\[word(jedes.24.\[i5\]).word(treffen.25.\[19\]).word(mit.26.\[112\]).word(ihnen.27.\[114\]).word(hat.28.\[ll\]).,ord(ein.29.\[117\]).word(interessantes.30.\[121\]).word(thema?31.\[122\])\]).X Indexindex(12.11.i3).Conditions\[decl(12.h23).j ed (1S , i6 ,18 ,h7) ,t re f fen(19 , i6 ) ,mi t (112 , i6 , i13) ,pron(l14.i13).haben(11.i3).arg3( l l , i3 , i6 ) ,a rg2( l l , i3 , i16) ,ein(llT.il6.120.hl9).interessant(121.i16).thema(122.i16)\].Constraints\[in_g(122.120).in_g(121.120).in_g(114.18).in_g(112.18).in_g(19.18).leq(15,h23),leq(ll.h7).leq(117.h23).leq(11.h19)\].Z Sorts\ [ s_sor t ( i6 ,meet ing_s i t ) ,s_sort ( i13,human),s_sor r ( i l6 , in fo_content ) \ ] ,X Discourse\ [p rontype( i13 ,he ,s td ) ,dir(112.no)\].Syntax\[num(i6.sg).pers(i6,3),pers(il3.1).num(i13.pl).num(i16.sg).pets(J16.3)\].Tense and Aspect\[ta_mood(i3.ind).ta_tense(i3.pres).ta_perf(i3.nonperf)\].Prosody\[pros_accent(15).pros_accent(121).pros_mood(12.decl)\])Figure 2: A Verbmobil Interface Term163bels to holes, a plugging.
In general, the constraintset contains partial constraints on such a plugging,expressed by the "less than or equal" relation ( leq)but no actual equations, leq(L  ,H) should be inter-preted as a disjunction that the label is either subor-dinate to the hole or equal to it.
Alternatively, thisrelation can be seen as imposing a partial ordering.A valid plugging must observe all such constraints.The other extension in expressivity was the in-troduction of additional constraints between labels.These form another type of abstraction away fromlogical structure, in that conjunctive structure is alsorepresented by constraints.
The purpose of this fur-ther abstraction is to allow lexical predicates to belinked into additional structures, beyond that re-quired for a logical semantics.
For example, focusstructure may group predicates that belong to dif-ferent scope domains.
More immediately, prosodicinformation, expressed at the lexical level, can belinked into the VIT via lexical predicates.
The con-straints expressing conjunctive structure relate basicpredicate labels and group labels which correspondto a conjunctive structure in the object language,such as a DRS, intuitively a single box.
Groupingconstraints take the form in_g (L, G), where the "ingroup" relation (in_g) denotes that the label L is amember of the group G. The content of a group is,thus, defined by the set of such grouping constraints.ng = A li such that in_g(//, g) 6 Const ra in tsi=1These two forms of abstraction from logical struc-ture have a tendency to expand the printed form ofa VIT, relative to a recursive term structure, but inone respect his is clearly a more compact represen-tation, since lexical predicates occur only once butmay engage in various types of structure.2.3 An ExampleFigure 2 shows the VIT produced by the analysisof the German sentence: Jedes Treffen mit lhnen hatein interessantes Thema ("Every meeting with youhas an interesting topic").
The instances which cor-respond to object language variables are representedby the sequence { i l ,  i2 ,  .
.
.}
,  holes by {h i ,h2, .
.
.}
and labels, including group and predi-cate labels, by { l l ,  12 .
.
.
.
}.
The base label of apredicate appears in its first argument position.
Thepredicates haben, arg2 and arg3 share the samelabel because they form the representation f a sin-gle predication, in so-called neo-Davidsonian nota-decl(12,h23)jed(1f,i6,18,h7) ein(llT,il6,120,hl9)haben(ll,i3)arg3(ll,i3,i6)arg2(ll,i3,il6)Figure 3: A Graphical Representation f the Scop-ing Constraintstion (e.g.
(Parsons, 1991)).
The two groups 120 and18 form the restrictions of the existential quantifier,e in,  and the universal, j ed, respectively.
Two of thescoping constraints place the quantifiers' labels be-low the top hole, the argument of the mood operator(decl).
The other two link the quantifiers respec-tive scopes to the bottom label, in this case the mainverb, but no constraints are imposed on the relativescope of the quantifiers.
The whole structure is bestviewed as a (partial) subordination hierarchy, as inFigure 3.A complete resolution would result from an as-signment of the labels {11, 15, 117} to the threeholes {h23, h i9 ,  h7}.
Taking into account theimplicit constraint that any argument to a predicateis automatically subordinate to its label, there are infact only two possibilities: the pluggings p l  and p2given below,II I h231h191 h7 IIp2 117 15 11corresponding to the two relative scopings of thequantifiers:VX(TREFFEN(X)&MIT(X,Z)-+ 3y(THEMA(y)&INTERESSANT(y)&HAB EN(X,y)))and1643y(THEMA(y)&INTERES SANT(y)&Vx(TREFFEN(X)&M IT(X,Z)-+ HABEN(X,y)))A full resolution is, however, rarely necessary.Where transfer equires more specific scoping con-straints these can be provided in a pairwise fash-ion, based on default heuristics from word order orprosodic ues, or at the cost of an additional call tothe resolution component.3 VIT Processing3.1 Lists as Data StructuresAlmost all fields in a VIT record are representedas lists.
4 In general, list elements do not introduceany further ecursive mbedding, i.e.
the elementsare like fixed records with fields containing con-stants.
The non-recursive nature of these list ele-ments makes the access and manipulation of in-formation (e.g.
addition, deletion, refinement, etc.
)very convenient.
Moreover, the number of list el-ements can be kept small by distributing informa-tion over different slots according to its linguisticnature (see Section 3.2 below) or the producer ofthe specific kind of data (see Section 2.1).
The kindof structuring adopted and the relative shortness ofthe lists make for rapid access to and operations onVITs.It is significant that efficient information access isdependent ot only on an appropriate data structure,but also on the representational formalism imple-mented in the individual data items.
This propertyhas been presented as an independent motivation forminimally recursive representations from the Ma-chine Translation point of view (Copestake t al.,1995), and has been most thoroughly explored inthe context of the substitution operations requiredfor transfer.
We believe we have taken this argu-ment to its logical conclusion, in implementing anon-recursive semantic metalanguage in an appro-priate data structure.
This, in itself, provides suf-ficient motivation for opting for such representa-tions rather than, say, feature structures or the recur-sive QLFs (Alshawi et al, 1991) of CLE (Alshawi,1992).3.2 ADT PackageIn general, linguistic analysis components are verysensitive to changes in input data caused by modifi-4In typical AI languages, such as Lisp and Prolog, lists arebuilt-in, and they can be ported easily to other programminglanguages.cations of analyses or by increasing coverage.
Ob-viously, there is a need for some kind of robust-ness at the interface level, especially in large dis-tributed software projects like Verbmobil with par-allel development of different components.
There-fore, components hat communicate with each othershould abstract over data types used at their inter-faces.
This is really a further projection of standardsoftware ngineering practice into the implementa-tion of linguistic modules.In this spirit, all access to and manipulation ofthe information in a VIT is mediated by an abstractdata type (ADT) package (Doma, 1996).
The ADTpackage can be used to build a new VIT, to fill itwith information, to copy and delete informationwithin a VIT, to check the contents (see Section 3.3below), to get specific information, to print a VIT,etc.
To give an example of abstraction, there is noneed to know where specific information is storedfor later lookup.
This is done by the ADT packagethat manages the adding of a piece of informationto the appropriate slot.
This means that the externaltreatment of the VIT as an interface term is entirelyindependent ofthe internal implementation a d datastructure within any of the modules and vice versa.
53.3 Consistency CheckingAs a side effect of adopting an extensive ADT pack-age we were able to provide a variety of check-ing and quality control functions.
They are espe-cially useful at interfaces between linguistic mod-ules to check format and content errors.
At the for-mat checking level language-specific on-line dic-tionaries are used to ensure compatibility betweenthe components.
A content checker is used to testlanguage-independent structural properties, uch asmissing or wrongly bound variables, missing or in-consistent information, and cyclicity.As far as we are aware, this is the first time thatthe results of linguistic omponents dealing with se-mantics can be systematically checked at moduleinterfaces.
It has been shown that this form of test-ing is well-suited for error detection in componentswith rapidly growing linguistic overage.
It is worthnoting that the source language lexical coverage inthe Verbmobil Research Prototype is around 2500words, rising to 10K at the end of the second phase 6.Furthermore, the complex information produced by5The kind of data structure used by the communication ar-chitecture (Amtrup and Benra, 1996) is, similarly, transparentto the modules.6In the year 2000.165linguistic omponents even makes automatic outputcontrol necessary.The same checking can be used to define a qualityrating, e.g.
for correctness, interpretability, etc.
ofthe content of a VIT.
Such results are much betterand more productive in improving a system thancommon, purely quantitative, measures based onfailure or success rates.4 ConclusionWe have described the interface terms used to carrylinguistic information in the Verbmobil system.The amount and type of information that they carryare adapted to the various constraints hat arose dur-ing the distributed evelopment of such a large sys-tem over a periods of several years.
The VIT formathas been integrated into several running systems,including the most successful, the Verbmobil Re-search Prototype.
Subsequent modifications in thesecond phase of Verbmobil have been possible ina systematic and monotonic fashion.
Similarly, theadaption of several new syntactic and semantic anal-ysis modules has not presented any major or un-seen problems.
Among the tasks currently under de-velopment is the use of VIT representations i  thegeneration of dialogue protocols, in the language ofeach participant.We feel that VITs have proved themselves ad-equate to the considerable system requirementsthrough their continued, efffective use.
We also findit reassuring that, despite the priority given to theengineering requirement, we have been able to em-bed within this interface language representationsthat are, at least, equivalent to the state of the artin Computational Semantics.ReferencesHiyan Alshawi, David M. Carter, Bj6ru Gamback,and Manny Rayner.
1991.
Translation by QuasiLogical Form Transfer.
In Proceedings of the29th Annual Meeting of the Association for Com-putational Linguistics (ACL'91), pages 161-168,Berkeley, CA.Hiyan Alshawi, editor.
1992.
The Core LanguageEngine.
ACL-MIT Press Series in Natural Lan-guages Processing.
MIT Press, Cambridge, MA.Jan W. Amtrup and J6rg Benra.
1996.
Communica-tion in Large distributed AI Systems for NaturalLanguage Processing.
In Proceedings of the 16thInternational Conference on Computational Lin-guistics (Coling'96), pages 35-40, Copenhagen,Denmark.J.
Bos, B. Gamb~ick, C. Lieske, Y. Mori, M. Pinkal,and K. Worm.
1996.
Compositional Semanticsin Verbmobil.
In Proceedings of the 16th Interna-tional Conference on Computational Linguistics(Coling'96), pages 131-136, Copenhagen, Den-mark.Johan Bos.
1996.
Predicate Logic Unplugged.
InPaul Dekker and Martin Stokhof, editors, Pro-ceedings of the Tenth Amsterdam Colloquium,pages 133-143, ILLC/Department ofPhilosophy,University of Amsterdam.T.
Bub, W. Wahlster, and A. Waibel.
1997.Vorbmobil: The Combination of Deep and Shal-low Processing for Spontaneous Speech Trans-lation.
In Proceedings of the 22nd Interna-tional Conference on Acoustics, Speech, and Sig-nal Processing (ICASSP'97), Munich, Germany,April.Bianka Buschbeck-Wolf.
1997.
Resolution on De-mand.
Verbmobil Report 196, IMS, Universit~itStuttgart, Germany.A.
Copestake, D. Flickinger, R. Malouf, S. Riehe-mann, and I.
Sag.
1995.
Translation using Mini-mal Recursion Semantics.
In Proceedings of the6th International Conference on Theoretical andMethodological Issues in Machine Translation(TMI'95), Leuven, Belgium.Michael Dorna and Martin C. Emele.
1996.Semantic-based Transfer.
In Proceedings of the16th International Conference on ComputationalLinguistics (Coling'96), Copenhagen, Denmark.Michael Doma.
1996.
The ADT-Package for theVerbmobil Interface Term.
Verbmobil Report104, IMS, Universitat Stuttgart, Germany.C.
Lieske, J. Bos, B. Gamb~ick M. Emele, andC.J.
Rupp.
1997.
Giving prosody a meaning.In Proceedings of the 5th European Conferenceon Speech Communication alut Technology (Eu-roSpeech'97), Rhodes, Greece, September.T.
Parsons.
1991.
Events in the Semantics of En-glish.
MIT Press, Cambridge, Mass.Uwe Reyle.
1993.
Dealing with Ambiguitiesby Underspecification: Construction, Represen-tation and Deduction.
Journal of Semantics,10(2):123-179.166
