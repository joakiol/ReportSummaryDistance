The Use  o f  Ins t rumentat ion  in Grammar  Eng ineer ingNorbert BrSkerEschenweg 3, 69231 RauenbergAbstractThis paper explores the usefltllmss of a techniquefrom software engineering, (:ode instrumentation,tbr the developlnent of large-scale natural anguagegrammars, hltbrlnation about the usage of graln-mar rules in test and corpus sentences i  used toilnprove grammar and testsuite, as well as adaptinga grammar to a specific genre.
Results show that lessthan half of a large-coverage rmnmar for Germanis actually tested by two large testsuites, and that10 30% of testing time is redundant.
This method-ology applied can be seen as a re-use of grammarwriting knowledge for testsuite compilation.
Theconstruction of genre-specific grmmnars results inperibrmance gains of a factor of four.1 IntroductionThe field of Computational Linguistics (CL) has1ooth moved towards applications and towards largedata sets.
These developments (:all for a rigorousmethodology for creating so-called lingware: linguis-tic data such as lexica, grammars, tree-banks, aswell as software processing it.
Experience fl'om Soft;-ware Engineering has shown that the earlier deficien-cies are detected, the less costly their correction is.Rather than being a post-development effort, qualityewduation must be an integral part of developmentto make the construction of lingware more eifieient(e.g., cf.
(EAGLES, 1996) fbr a general evahmtionfl'amework and (Ciravegna et al, 1998) for the ap-plication of a particular software design nlethodol-ogy to linguistic engineering).
This paper presentsthe adaptation of a particular Software Engineering(SE) method, illstrmnentation, to Grmmnar Engi-neering (GE).
Instrumentation allows to determinewhich test item exercises a certain piece of (softwareor grammar) code.The paper first describes the use of instrumenta-tion in SE, then discusses possible realizations in uni-fication grammars, and finally presents two classesof al)l)lications.2 Software InstrumentationSystematic software testing requires a match be-tween the test subject (module or comt)lete system)and a test suite (collection of test items, i.e., sam-ple input).
This match is usually computed as thepercentage of code items exercised by the test suite.Depending oll the definition of a code item, vari-ous measures are employed, tbr example (cf.
(Itet-zel, 1988) and (EAGLES, 1996, Appendix B) ibroverviews):s ta tement  coverage percentage of single state-ments exercisedbranch  coverage  percentage of arcs exercised incontrol tlow graph; subsumes tatement cover-agepath  coverage  t)ercentage of 1)aths exercised fromstart to end in control flow graph; subsmuesbranch coverage; impractical due to large (ofteninfinite) number of pathscond i t ion  coverage percentage of (simple or ag-gregate) conditions evaluated to both true andfalse (on different est items)Testsuites are constructed to maximize the tar-geted measure.
A test run yields information aboutthe code items not exercised, allowing the improve-ment of the testsuite.The measures are autonmtically obtained by in-strumentation: The test subject is extended by codewhich records the code items exercised uring pro-cessing.
Afl;er l)rocessing the testsuite, the recordsare used to comlmte the lneasures.3 Grammar InstrumentationMeasures from SE cannot silnl)ly be transferred tounification grmmnars, because the structure of (im-perative) programs is different fl:om (declarative)grmnmars.
Nevertheless, the structure of a grmnmar(formalism) allows to define measures very similar tothose employed in SE.const ra in t  coverage  is the quotient# constraints exercisedTco n --- # constraint in gralnlnar118where a (-onsi;raint; may \])e either a 1)hrasc-structure or an equational COllSl.l'ailll;; del)('al(l-.ing o11 the formalisln.d i s junct ion  coverage  is the quotient# disjulml.ions covere(15/'(lis = # disiun('t.ions in grammarwhere a dis junction is (:onsidel:ed (:over(~(l whenall its all:ernative (li@mcl;s have been set)aral;elyexercised.
It en(;omlmSSes (:onstraint coverage.Opt ional  eonstituenl, s an(l equal;ions have to bet reated as a disjuncgion of the consgrain(, andan empty constraini; (cf.
Fig.2 for an examl)le ).in teract ion  coverage  is the quotient-j/: disjuncl; (-omt)inai;ions exercise(1)inl '  = # legal di@m('l.
(:oml)inati()nswhere a (lisjunct Colnbinal;ion is a ('omI)h'l;e sel.of choi('es in l;he (lisjun(:tfions which yiehls a well-forlned grmmnal;i('at sl;ru(;l;ure.As with path coverage, the set of legal ( l i@mctColnbination typical ly is intinite (hie to rc('ur-sion.
A solution from SE is to restri(:t 1;111!
useof recursive rules to a fixed llUllll)er ()f (;;ts(',s, forexaint)le not using t.hc rule at all, and using il;ol l ly  OllCe.The goal of insl;rllnlenl;al;ion is 1;o el) lain inf()rma-li()li a})()lll, which test cases (~xer(:ise wlfi(:lt gl';'/llll11,:|l'(-onstraint.s.
One way 1;o re(:or(1 lifts infornmlion isto exlend l,he parsing alg()rithm.
Another way is~o use 1:he gra lmnar  formalisln il.qelf Io i(lc,,l.ify lhedisjun(:l;s, l)el)elMing on the (!xl)ressivits- ()f l;he f()r-realism used, th(; following 1)ossil)ilil;ies exisl::a tomic  features  Assmning a uni(lue mmfl)eringof (tisjuncts, an annotal;ion ()f ghe formDISJUNCT-nn = + can be used for marking.
Todelx;rmine whether a (-ertain disjun(:l; was use(tin consl~ru(;til~g a sohttion, one only nee(Is tocheck whether the associate(l feal;m'e occurs (atsome level of embedding) in the solut.i(m.set -va lued  features  If set-valued f(~al;ures areavailal)le, one can  use a sel;-valued fl~a-lure DISJUNCTS to co\]le(;i; ai.onli(" sym-1)ols tel)resenting one disjunct each:DISJUNCT-nn ~ DISJUNCTS, whi('h might,ease |;he collection of exereise(l (lisjuncl, s.mult i se t  o f  symbo ls  To recover the number oft imes a dis junct is used, one needs I;o leav(; theuni i ication l)aradignl, l)ecause it is very difficult;1;o counl; wiLh unitical;iol~ grammars.
\Ve haveuse(l a special feal;ure of our gramntar  (levelol)-ment ei:vironment: Folh)wing the LI"G sl)iril; ()f(lifl'erent l)roje(:tions, it t)r()vi(les a t)r()je(:t.ioll forVP -~>VP ~-v +=1";NP?
$= (I" OBJ);PP* { ;=( t (mE) ;I $~ (T ADJUNCT); }.Figure 1: Sample RuleV{ e\]NI'(~IP1)++=I";\])ISJUNCT-001 C_ o.;+= ( t  oB J )DISJUNCT-002 { o*; }\])ISJUNCT-003 E o*;{ $= (I" OBL)DIS,\]UNCT-004 C o,;I .l.e (t ADJUNCT)DIS,JUNCT-005 c o,;} }.F igure 2: Instl'mnenl.ed rulesynfl)olic marl:s, whit:h is fornmlly equivalenl.
1oa nmll.isel, of s3"ml)ols associate(t wit.h the con>l)lel.e s()lut, ion (stru(:~,ural embedding I)\]ays norole; see (Franl?
et al, \].998) f()r al)l)lical.ions).In I.his way, we can ('ollecl; fronl l.he reel; node ofc'ach solution the set of all (tisjun(:ls exer(:ised,Ix)gel;her wil;h a usage eount..Consider the LFG granunar  rule in Fig.1.
~ Con-sl.raint (:()verage would require tesl; items such t lmtevery (:alegory in t.he VP is exer(:ised; a sequence ofV NP PP would sutli(:e for this measure, l)isjun(:lion('overage also requires 11) t.ake lh(!
(unpty (lisjun('lsinto a(:(tOUlll.
: NP ;m(l PP are Ol)l.ional , s() i;hal, fouri lems are neexh~(l 1.o achiewe full (lisjuncl.ion c()ver-age on 1.he phrase sl.ru(;lm'e imrl.
of l he rule.
1)/1o \[.
()l he ( l i@m(ti(m ill l.he PP retool al ien, 1Ave more t.esl.items are requh'e(l (;o achieve full (lisjuncl;ion cover-age on Lhe (-Oml)h!t(; rule.
Fig.2 shows lhe rule fromFig.1 with insta'ument, ation.4 Grmnmar and TestsuiteImprovementl ' ladit ional ly,  a tests,rite is used 1.o hill)rove (ormainl;ain) a gramnmr's  qual ity (in terms of (:over-age an(l overgeneral i(m).
Using insi;rumenl.al;ion,one may exten(1 this usage l)y looldng for sources of1 Although the saml)h!
rule m'e in the format of I,FG, noth-ing of the mc'th()d()logy relies (m the choice of linguistic (n"computal.ional 1)aradignL The notation: ?/*/+ represent ot)-tionality/iteration including/exchtding zero occurrences oncategories, e rel)resents the eml)ty string.
Annotations toa cat(.
'gory sl)ecify equality (=) o1" ,'~(!t membershi t) (C) of fea-ture values, or non-existel,ce of i~aturcs (~); they are terlni-nat(!d l)y a s(,micolon (;).
Disjunclions are given in I)ra(:(!s({-" "1-'' })' I" (4-) " " '  ,,.,t,~x',,,'i,,bl?.~ ,','prc.~,.,ti,,g t.l,,, f,,~,-lure st.ruclur(!
corresponding t.o the mother ((laugh/.er) of th.erule.
o, (for optimalil.y) represents the sent.ence's multi-setvalued .%,mbolic projc'ction.
Com,nents are enclosed in quo-lati(m marks ( " .
.
.
").
Cf.
(K:tplan and Bresnan, 1982) for anintro(lucti()n to 1,1,*14 notation.119overgeneration (cf.
Sec.4.3), and may also improvethe quality of the testsuite, in terms of coverage (of.See.4.1) and economy (el.
See.4.2).Complementing other work on testsuite construc-tion (cf.
Sec.4.4), I will assume that a. grammaris already available, and that a testsuite has to beconstructed or extended.
While one may argue thatgrmnmar and testsuite should be developed ill paral-lel, such that the coding of a new gralmnar disjunctis accompanied by the addition of suitable test cases,and vice versa, this is seldom the case.
Apart  fromthe existence of grmnmars which lack a testsuite,there is the more principled obstacle of the evolu-tion of the grmnmar, leading to states where previ-ously necessary rules silently loose their useflflness,because their flmction is taken over by some otherrules, structured differently.
This is detectable byinstrumentation, as discussed in See.4.1.On the other hand, once there is a testsuite, it hasto be used economically, avoiding redundant ests.Sec.4.2 shows that there are different levels of re-dundancy in a testsuite, dependent on tile specificgrammar used.
Reduction of this redundancy canspeed Ul) the test; activity, and give a clearer pictureof the grammar's  pertbrmance.4.1 Testsulte CompletenessIf the disjunction coverage of a testsuite is 1 for somegrammar,  the testsuite is complete w.r.t, this gram-mar.
Such a testsuite can l'eliably be used to mon-itor changes in the gramlnar: Any reduction ill thegrammar's  coverage will show Ul) ill the failure ofsome test case (for negative test cases, cf.
Sec.4.3).If the testsuite is not complete, instrumentationcan i(lentii\[y disjuncts which are not exercised.
Thesemight be either (i) approl)riate, but tmtested, dis-juncts calling for the addition of a test case, or (it) ill-appropriate disjuncts, for which a grammatical  testcase exercising them cannot be constructed.Checking completeness of our local testsuite of1.787 items, we found that only 1456 out of 3730grammar disjuncts in our German grammar weretested, yielding T, tis = O.39 (the TSNLP testsuitecontaining 1093 items tests only 1081 disjuncts,yielding Tdi, = 0.28).
2 Fig.3 shows an exampleof a gap in our testsuite (there are no examples ofcirculnpositions), while Fig.4 shows an inal)l)roppri-ate disjunct thus discovered (the category ADVadjhas been eliminated in the lexicon, but not in allrules).
Another error class is il lustrated by Fig.5,which shows a disiunct that  can never be used dueto an LFG coherence violation; tile grmnmar is ill-consistent here.
a2There are, of course, m~parsed but grammatical test casesin both testsuites, which have not been taken into accountin these figures.
This exl)lains the dill'ere,lee to the overallnumber of 1582 items in the German TSNLP testsuite.3Tcst cases using a free dative pronoun may be in the test-PPstd =~ P1)rae $=$;NPstd $= (I" OBJ);{ e DISJUNCT-011 C o.;I Pcireum $=?
;DISJUNCT-012 C o*"mmsed disjulmt"; }Figure 3: Appropriate untested disjunctADVP { { e DISJUNCT-021 C o*;I ADVadj $=$DISJUNCT-022 E o*"unused disjunct"; }ADVstd $=1"DISJUNCT-023 C o*"unused dis iunct"; }I .,. )
.Figure 4: hmppropriate disjunct4.2 Testsuite EconomyBesides being coml)lete , a testsuite must be econom-ical, i.e., contain as few items as 1)ossible.
Instru-nmntation can identify redundant est cases, wherere(lundaney can be defined in three ways:s imi la r i ty  There is a set of other test cases whichjointly exercise all disjunct which the test caseunder consideration exercises.equivalence There is a single test case which ex-ercises exactly the same combination(s) of dis-juncts.strict equ iva lence  There is a single test casewhich is equivalent o and, additionally, exer-cises the disjunets exactly as oft(m as, the testcase under consideration.Fig.6 shows equivalent test cases found in ourtestsuite: Example 1 illustrates the distinction be-tween equivalence and strict, equivalence; the testcases contain different numbers of attributive adjec-tives.
Example 2 shows that our grammar does notmake any distinction between adverbial usage andsecondary (subject or object) predication.The reduction we achieved in size and processingtime is shown in Table 1, which contains measure-lnents for a test run containing only tile 1)arseabletest cases, one without equivalent est cases (for ev-ery set of equivalent est cases, one was arbitrar-ily selected), and one without similar test cases.The last was constructed using a siml)le heuristic:Starting with the sentence xercising the most dis-juncts, working towards sentences relying on fewerdisjuncts, a sentence was selected only if it exerciseda disjunct wtfich no previously selected sentence x-ercised.
Assulning that a disjnnct working correctlysuite, but receive no analysis since the grmmnatical fimctionFREEDAT is not defined as such in the configuration section.120VPargs =5 , .
,I PRONstdI ... }.$= (T FI (EEDAT)($ CASE) = dat($ PI{ON-TYPE) = 1)ers~(q- ()>.J2)DISJUNCT-041 C- o*"unused disjun(;t" ;Figure 5: hlconsist,ent, disjunct1 tin guter alter Weintin guter all;er trockener \Vein'a good old (dry) wine.
'2 Er ifit das Schnitzel roh.Er iBt das Schnitzel na(;kt,Er it.It das Schnitzel s(:hnell.
'lie cats the ,~chnitzel nakcd/ra.lv/q.uictcIy.
'Figure 6: Sets of equivaleul; t,est casesonce will work corre('tly more than ()11(;(~: we di(1 nol;(:onsider st.rict, equivalence.We envisage the following use of this redundancydetec|:ion: '1'here ch~al'ly ar(; linguist;i(: r(~asolls l;o dis-t.inguish all 1;est cases ill (~xaml)le 2, s() l;hcy (:almolsimply be delel;cd from the t(~'st;suit, e.
Ilath(.
'r, t.heirequivalence indicates that.
the grammar is not 3,eliperfect.
(or never will be, it' it, remains l/urely syn-tactic).
Such equivalences couhl be int,erl)reted asa r(mfinder which linguistic distinclions need to lieincorl)orated into the grammar.
Thus, 1;his lev(q ()fr('(hm(lancy may drive your grammar d(w(~h)l)mentagenda.
The h~vcI of c(tuivalellc(~ C;/ll l)e t;/k(}li itsa l imited int(wacl;ion lesl: '\]'h('s(' lesl: ('as('s rcl)r(>scnl; one~ (-()ml)h'.lx~' s(~lecl;ion of grammar disiml(:l,s ,and (given l,hc grammar) lhere is nolhing we cangain 1)y checking a test case if an equivalenl; one wastested.
Thus, this level of redundan('y may 1)e usedfor ensuring the quality of gramlnar changes priort,o their incorporation into the t)roducl~ion version oft,he grammar.
The level of similarit.y (:onl;ains muchle.~ss l,est cases, and does not t,esl, any (systenml, ic)intera(:tion 1)et.ween disjuncts.
Thus, it may 1)1; use(1during (levch/1)ment.
as a quick ru\]e-ofthunll) 1)rote -dure detecting serious errors only.test relative runtime relativeeases size (set) nmtimeTSNLP testsuitel)arseable 1093 100% 1537 100%no equivalents 783 71% 665.3 43%no similar cases 214 19% 128.5 8%local testsnite\])arseable 1787 100% 1213 100%no equivalents 1600 89% 899.5 74%no similar cases 331 18% 175.0 ld%~1~d)le 1: Reduction of ~l~stsuitesl)er Test t'~illC leicht.\])ie schhdL, n.Man s(:htat~n.Dieser schlafen.Ich schhffen.\])er schlafen.\]crier schlafen.l)erienige schhffen..lener schlafen.Keiner schlafen.\])erselbe schlaflm.Er schlafen.Irgendjemand schlafen.Dieselbe schlat~n.Das schlafen.Eines schlafen.Jede schlafen.Dieses schlaf'en.Eine schlafen.Meins schlafen.Dasjenige s(;hlafen.Jedes schlaflm.Die.ienige schlat'en.Jenes schlafen.Keines schlafen.Dasselbe schlafen.Figure 7: S(mi;ence~s relying on SUSl)icious di@mct4.3 Sources  o f  Overgenerat ionTo cont,rol overgenel'a.tion, al)l)ropriately marked un-grammati('al sentences are iml)(n'tant in every test-suite, lnsl;rulnentation as 1)rol)osed here only looksat successful parses, but.
can sgi\]l l)e aI)l)lied in thisC()lll;(?xt: If ~/11 l l l lgfall l I l l~/l; ieal t.est.
(;ase recu ives  al lanalysis, insl;rumeld;at, ion informs us a})ouI, t,he dis-julmtS used in the incorrect, analysis.
One of these(lis.juncts must lie incorrect, or the sentence wouldnot.
have receiv(xt a solution.
We exploit, this infor-mati(m by aecumulat.ioll across the entire l;est suite~looking tot (lisjuncts t,hat al)t)ear in mmsually high1)report.ion in l)arseable mlgranmmtical test.
cases.In t:his rammer, six grammar disjuncts are singledoul.
\])y the l)arseal)h~ mlgramlnat,ical t.est cases inth(~ TSNLI ) t(,sIsuite.
The rues1 l)rominen|; di@m(:t.al)l)ears in 26 senl(~n(;(> (list.e(t in Fig.7), of whichlhe top left group is in(l(>d grmmnali('al and t h(~rest fall int.
() Fw(/ (:lasses: A partial V1 ) with objectNP, inlert)reted as an imt/(n'at,iv(~ sentence (1)el;tomleft), and a weird interaction with the tokenizcr in-correctly" handling cal)it.alization (right.
groul)).15tr fl'om being conclusive, t,hc similarity of theses(nlt.ences derived from a suspicious grammar dis-junct, and the ('lear relation of the senten(-es to onlytw(/exact.ly Sl)ceifial)le graminar errors make it 1)lau-sil)le that this approach is very i)rolnising ill detect-ing the sources of ovcrgener~tion.4.4 Other  A l ) l ) roaches to Tcs tsu i teConst ruct ionThe delicacy of testsuite construction is acknowl-edged in (EAGLES, 1996, I).37).
Although t.hereare a mnnber of eflbrts to construct reusable test-suites, none has to my knowledge xl)lored how ex-ist.ing grammars can l)e exl)loited.Starting wit.h (Flickinger el; al., 1987), |;(;si.suiteshave  l)ecl l  ( \ [ rawn 111) fix)In a linguistic viewpoint, in-for'm, cd by \[lhc I study of linguistie,s and \[reflecting\]the 9'ram'm, atical issues that linguists h, avc concernedthem,selves with, (Flickinger et al, 1987, p.4).
A1-121though the question is not explicitly addressed in(Balkan, 1994), all the testsuites reviewed there alsoseem to follow the same methodology.
The TSNLPproject (Lehmann and Oepen, 1996) and its succes-sor DiET (Netter et al, 1998), which built large nml-tilingual testsuites, likewise fall into this category.The use of corpora (with various levels of mmota-tion) has been studied, but the reconmmndations arethat much manual work is required to turn cori)usexamples into test cases (e.g., (Balkan and Fouvry,1.995)).
The reason given is that corpus sentencesneither contain linguistic 1)henomena in isolation,nor do they contain systematic variation.
Corporathus are used only as an inspiration.
(Oepen and Flicldnger, 1998) stress the inter-dependence between application and testsuite, butdon't comment on the relation between grammarand testsuite.5 Genre AdaptationA different al~t)lication of instrumentation is the tai-loring of a general grammar to specific genres.
All-purpose grammars are 1)lagued by lexical and struc-tural aml)iguity that leads to overly long mmtimes.If this ambiguity could be limited, parsing efficiencywould iml)rove.
Instrunmnting a general grammarallows to automatically derive specialized subgrmn-mars based on sample corpora.
This setup has sev-eral advantages: The larger the overlap between gel>res, the larger the portion of grammar developmentwork that can be recycled.
The all-lmrpose grammaris linguistically l t l o re  interesting, because it requiresan integrated concept, as oI)posed to several sepa-rate genre-specific grammars.i will discuss two ways of improving the efficiencyof parsing a sublanguage, given an all-purpose uni-fication gramnmr.
The first consists in deleting un-used disjuncts, while the second uses a staged pars-ing process.
The experiments are only sketched,to indicate the apl)licability of the instrumentationtechnique, and not to directly compete with otherproposals on grmnnmr specialization.
For example,the work reported in (Rwner and Smnuelsson, 1994;Samuelsson, 1994) diifers from the one presented be-low ill several aspects: They induce a grammar froma treebank, while I propose to mmotate the gram-mar based on all solutions it produces.
No criteriafor tree decomposition and category specializationare needed here, and the standard parsing algorithmcan be used.
On the other hand, the efficiency gainsare not as big as those reported by (Rayner andSalnuelsson, 1994).5.1 Rest r i c t ing  the  GrammarGiven a large sample of a genre, instrunmntation al-lows you to determine the likely constructions of thatgenre.
Elinfinating unused disjuncts allows fasterDescriptor Content CoverageHC-DEWHBNEWSNEWS-SCCopier/Printer User Manual 89%Car Maintenance Instructions 76%News (5-30 words per sentence) 42%Verb-tinal subclauses from News 75%Table 2: Corpora used for adaptationparsing due to a smaller gralmnar.
An experimentwas conducted with several corpora as detailed inTable 2.
There was some eft'oft to cover the corpusHC-DE, but no grammar development based on theother corpora.
The NEWS-SC corpus is part thecorl)uS of verb-final sentences used by (Beil et al,1999).A training set of 1000 sentences froln each cor-pus was parsed with an instrumented base gram-mar.
From the parsing results, the exercised gram-mar disjuncts were extracted and used to constructa corl)us-specific reduced grammar.
The reducedgrammars were then used to parse a test; set of an-other 1000 sentences Dora each corpus.
TaMe 3shows the lmrt'ornmnce ilnprovement on the corpora:It gives the size of the grammars in terms of thenumber of rules (with regular expression right-handsides and feature annotation), the number of arcs(corresponding to unary or binary rules with dis-junctive feature annotation), and the number of dis-juncls (unary or binary rules with tmique featureannotation).
The number of mismatches counts thesentences for which the solution(s) obtained ifferedfl'om those obtained with the base gramnmr, whilethe number of additi(ms counts the selltellces which{lid not receiw; a 1)arse with the base grannnar dueto resource limitations (runtinle or memory), but re-ceived one with the reduced granmmr.
The othercohnnns give timings to l~rocess the total corlms,and the longest and average processing time per sen-ten(e; time is in seconds.
The last cohmm gives theaverage nmnber of solutions per sentence.Due to the sampling of a genre, the grammarsobtained can only be approximate.
To deternfinethe relation of the smnple size to the quality of thegrmnmar obtained, the coverage of random fragmentgram'mars was measured in the tbllowing way: Ran-domly select a nmnber of sentences fl'om the to-tal corpus, construct (in the same way as describedaloove for the reduced grammar) a fragment grmn-mar, and deternfine its coverage on the test set fl'omthe respective corpus.
The graphs in Fig.8 showhow the coverage and runtime relate to the numberof sentences on which the fragnmnt granunars arebased.
The leftmost data point (x value 0) describesthe performance of the reduced gramlnar on thetraining set, while the rightmost data point describesits perfbrmance on the test set.
The data points in\])etween represent fl:agment grammars based on as122o~ ~Sqk- ~ ng"Y~ ~,~ .ca.. bid o?m g~abbCorl)us IIC-\])E1)ase grammar 185 3669 1.1564 n/~t l:/a \[ 7692.d >300 7.1 10.1rcducc'd graminar (938) 112 960 3739 0 1 J 2089.4 162.7 1.9 17.6195 3728 \] 1606 11/}t 1<128.!)
>300.3 1.553<1 3072 1 <144.2 11.3 0.4Corpus \VIIB1)ase grammarr (x lu ( :ed  glU/llllll}ll" (559)Tal)le 3: \]'erli)rman('e of r(.
'(hleed grallllllarslOO \[ q0060?
t~- -  ~ I IC \ [~)ENEWS-SC -WIIBk A I200 300 400 500 000 700nLm/berolsanloncesusedforgfainmarconstruction3000 -2500 -20001500 ~:1ooo501 "0HC.~EW)IB  -NEWS~SC '1 O0 200 300 400 500 600 700 800nut::be) of sentences used lot g\[arnmar constructionFigure 8: l)erf()rnmnc(~ ()f fl';tgllient; graltllnarsIlU/ll 3" ,%elll:ellces .
:is giv(}n \])y (h(} x axis vahl(!.
'.File result, s rel)orlx'(1 here r(~l)l'(LSOlll, (,he minimall )e l ' l~) l : l l la l lc( ;  g ; I i l l  duo Lo (;lit; t':t(;l; 1;tl;II, LII(, COllS(;l' l lC-l;ion of reduced ~/11(l t'lU/~lll(}ll{, ~I'}tllI I l I}U'S l i fe  lI()J,based on (.he corre('l, solul;i(ms for the (,raining ,qell-l;ellce,q, })Ill; l';tgh(~d ' 011 all solulions l)rodu(:ed 1)y (;hebase grammar.
The (:OllSt, rucl;ion of a lart~e-s(:ale(;reel)ank with manually veriiie(l solutions is un(h!rway but has nol; )'el.
1)rogjresse(l far enough (;() serveas input for this ext)erimeld;.
Even with this systenl-atic, but (:urable error, (;lie reduction reduces overallprocessing by a factor of four.
The mmd)er of solu-tions is constant becaus(~ only unused disjuncts areeliminated; this will change if the treebank solutionsare used (;o construct l;he redu( :od  gl'~lllllllat'.5.2 S taged Pars ingEven eliminat, ing only unlil:ely disjunets necessarilyredllces L\]Io coverage of the gramnmr.
A sequence ofl)arsing stages allows one to profit front a small andfast; granmmr as well as from a large and slow one.S~age(t l)arsing applies difl'erent grammars one afterthe other to the inlmt, m:(;il one yields a solution,which terminates the l)rocess.
In our case, a gram-mar of sl;age 'l~, q- 1 in(:ludes the grammar of stag0 t~,1)ttl; this nee(1 not be t:he case in gener;d."1'() r(}(lu(x' the v;u'ial)iliLy for an (}Xl)(;rimenL: I as-,SlllIIO (;}ll.
'ee s{;,:/.~(}s: Tit('.
:\[irst, ill('hld('s frequcnl;ly useddi,~jun('I;s, Idle s{)COll(i llfFt)qll(}llt di@m(:ts, alt(l l:h0thir(1 unu.~ed isjuncts.
This ensur(?,~ (;he fllll (x)vt,r-age of the base grammar, \]ml; allows lo focus on fre-(lu(m(.
con.sl:ru(q,ions in th(, first parsing stage.
Thet)rt)(:t;dure is similar as \])cfore: l"rom (.he solutiollSof a Lraining sol., ;t s taged .qIYt?Itlltitl" iS construc.lx:d.()urrel~tly, exl)erimenI;s are l)erforlned (;o dei;erminea llseflll detini(;ion of 'frequellt, ly used'.
Indel)endentfrom the ac(,ual performance gains finally obtained,the apl)lication of instrulnentation allows a system-atie exploration of the possible configurations.5.3 Other  approaches  to grammarada l ) ta t ion(I{ayner and Samuelsson, 1994; I layner and Carter,1996; Sanmelsson, 1994) present a grammar Sl)eeial-izal;ion (,eclmique for unification gran:Inars.
Fronl atl'eebanl: of the sublanguagc, they induce a special-ized gramnlar using fewer 're, ac re  ~"ltlc,s" which co lrespond to the application of several original rules.They report an average speed-ul) of 55 for only theparsing phase (taking lexical lookup into accomlt,the sl)eed-up fael;or was only 6 10).
I)ue to (:he(lerival.iOll ()f J;\]le ~rallllll~/r frOllt a corl)llS Sample,123they observed a decrease ill recall of 7.3% and anincrease of precision of 1.6%.
Tile differences to theapproach described here are clear: Starting from thegrammar, rather than from a treebank, we annotatetile rules, rather than inducing them from scratch.We do not need criteria for tree decomposition andcategory specialization, and we can use the standardparsing algorithm.
On the other hand, the efficiencygains are not as big as those reported by (Raynerand Carter, 1996) (but note that we cannot measureilarsing times alone, so we need to coral)are to theirspeed-up factor of 10).
And we did not (yet) startfrom a treebank, but froln the raw set of solutions.6 Conc lus ionI have 1)resented the adaptation of code instrmnenta-tion to Grammar Engineering, discussing measuresand iml)lementations, and sketching several applica-tions together with preliminary results.The main application is to iml)rove grammar andtestsuite by exl)loring the relation between both ofthem.
Viewed this way, testsuite writing can ben-efit from grammar developnlent because both de-scribe the syntactic onstructions of a natural lan-guage.
Testsuites ystematically list; these construc-tions, while grammars give generative proceduresto construct hem.
Since there are currently manymore grammars than testsuites, we may re-use thework that has gone into the grmnmars for the im-provement of testsuites.Other al)l)lications of instrumentation are possi-1)le; genre adal)tation was discussed in some depth.On a more general level, one may ask whether othermethods fl'om SE may fruitflflly al)ply to GE as well,1)ossibly in modified form.
For example, the staticanalysis of programs, e.g., detection of unreachablecode, could also be applied for grammar develop-ment to detect unusable rules.ReferencesL.
Balkan and F. Fouvry.
1995.
Corpus-based testsuitc generation.
TSNLP-WP 2.2, University ofEssex.L.
et al Balkan.
1994.
Test Suite Dcsign AnnotationScheme.
TSNLP-WP2.2, University of Essex.F.
Beil, G. Carroll, D. Prescher, S. Riezler, andM.
Rooth.
1999.
Inside-outside stimation of alexicalized PCFG tbr gerlnan.
In Prec.
371,h An-nual Mecting of the ACL.
Maryland.F.
Ciravegna, A. Lavelli, D. Petrelli, and F. Pianesi.1998.
Developing language reesources and al)pli-cations with GEPPETTO.
In Prec.
1st Int'l Conf.on Language Resources and Evaluation, pages619 625.
Granada/Spain, 28-30 May 1998.EAGLES.
1996.
Evaluation of Natural LanguageProcessing Systems.
Final Report EAG-EWG-PR.2.D.
Flickinger, J. Nerbonne, I.
Sag, and T. Wa-sow.
1987.
Toward Evaluation of NLP Systems.Hewlett-Packard La.boratories, Pale Alto/CA.A.
h'ank, T.H.
King, J. Kuhn, and J. Maxwell.1998.
Ol)timality theory style constraint rank-ing ill large-scale LFG grammar.
In Prec.
ofthe LFG98 Confcrcnce.
Brisbane/AUS, Aug 1998,CSLI Online Publications.W.C.
Hetzel.
1988.
The complete 9uide to s@waretesting.
QED Infommtion Sciences, Inc. Welles-ley/MA 02181.R.M.
Kaplan and J. Bresnan.
1982.
Lexical-functional grmmnar: A formal system for gram-matical rel/resentation.
In J. Bresnan and R.M.Kaplan, editors, The Mcntal Representation ofGrammatical Rclations, pages 173-281.
Cam-bridge, MA: MIT l?ress.S.
Lehmann and S. Oel)en.
1996.
Tsnl 1) - test suitesfor natural language processing.
~\[ll Prec.
16th,Int'l Co~?
on Computational Linguistics, pages711-716.
Copenhagcn/DK.K.
Netter, S. Armstrong, T. Kiss, J. Klein, andS.
Lehman.
1998.
Diet; - diagnostic and eval-uation tools for :all) applications.
In Prec.
1stInt'l Conf.
on Language I~esov, rces and Eval'ua-tion, pages 573 579.
Granada/Spain, 28-30 May1998.S.
Oct)ca and D.P.
Flickinger.
1998.
Towards sys-tematic grmnmar profiling:test suite techn.
10years afro.
Journal of Computer Speech and Lan-guage , 12:411 435.M.
Rayner and D. Carter.
1996.
Fast parsing us-ing 1)runing and grammar specialization.
In Prec.3/fth Annual Meeting of thc ACL.
Santa Cruz,USA.M.
IXayner and C. Sanmelsson.
1994.
Corpus-basedgrmmnar specia.lization for fast analysis.
In M.-S. AgnSs, H. Alshawi, I. Btrean, D. Carter, andK.
Ceder, editors, Spohen Langv, age Translator:First- Year Report, pages 41-54.
Report CRC-043,Cmnbridge/UK: SllI International.C.
Smnuelsson.
1994.
Grammar spezializationthrough entropy thresholds.
In Prec.
32rid AnnualMeetin9 of the ACL.124
