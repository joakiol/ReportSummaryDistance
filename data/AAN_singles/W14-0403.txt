Felix Bildhauer & Roland Sch?fer (eds.
), Proceedings of the 9th Web as Corpus Workshop (WaC-9) @ EACL 2014, pages 16?21,Gothenburg, Sweden, April 26 2014.c?2014 Association for Computational LinguisticsLess destructive cleaning of web documents by using standoff annotationMaik St?uhrenbergInstitut f?ur Deutsche Sprache / Mannheim, Germanymaik@xstandoff.netAbstractStandoff annotation, that is, the separa-tion of primary data and markup, canbe an interesting option to annotate webpages since it does not demand the re-moval of annotations already present inweb pages.
We will present a standoff se-rialization that allows for annotating well-formed web pages with multiple annota-tion layers in a single instance, easing pro-cessing and analyzing of the data.1 IntroductionUsing web pages as primary data for linguistic cor-pora often includes the procedure of cleaning andnormalizing the files.
Tools such as POS taggersand linguistic parsers often require the input datato be raw text, that is, without any markup at all.In addition, adding markup layers on top of an al-ready annotated file (such as an XHTML page) of-ten results in markup overlaps ?
violating XML?swellformedness constraints (Bray et al., 2008).1Since the original version of the web page isthe origin of every further processing, we save thisversion unaltered.
We call this version the ?rawdata?.
As a next step we create a primary datafile containing all textual information but no anno-tation as input for the before-mentioned linguis-tic processing tools.2Every output of a process-ing step is stored in a separate folder, making eachstep of the pipeline reproducible.
However, if wewant to compare multiple annotation layers, it ispreferable to not have to deal with a couple of filesstored in a large number of folders.
To combineboth the original HTML annotation and additional1The discussion of this issue goes back to the days ofSGML, including a large number of proposals for supportingoverlapping markup not cited here due to space restrictions.2Of course, this is only necessary, if the tool in questiondoes not support pre-annotated input files.annotation layers, standoff annotation can be aninteresting option.2 Standoff annotationStandoff annotation is the separation of primarydata and markup.
The concept as such is notnew at all, and there are several reasons to usethis approach such as read-only primary data(which is the case as well when dealing with non-textual data) or copyright restrictions.
St?uhren-berg and Jettka (2009) discuss some existing se-rialization formats, including XStandoff (XSF),which we will use in this paper to demon-strate its ability to process pre-annotated doc-uments.
An XStandoff instance roughly con-sists of the corpusData root element, under-neath zero or more primaryData elements, asegmentation, and an annotation elementcan occur, amongst others ?
see Figure 1 for agraphical overview.Figure 1: A graphical overview of XStandoff?sroot elementThe two latter elements define two base con-structs of standoff annotation formats: (1) theidentification of regions of primary data (calledsegments in XStandoff) used as anchors for oneor more annotations, and (2) the way in which an-notations are stored.162.1 SegmentationIn case of textual primary data such as web pages,segments can be identified by delimiting the char-acter stream by means of tokenization methods(for example by splitting text into a stream of char-acters).T h i s i s a w o r d00|01|02|03|04|05|06|07|08|09|10|11|12|13|14The serialization in XStandoff can be seen be-low.
In this example, we have selected the charac-ter span ranging from ?0?
to ?4?, resulting in theselection of the word ?This?.3<segment xml:id="seg_text1" primaryData="txt" type="char" start="0" end="4"/>Since web pages consists of (Unicode) charac-ters as well, it is possible to treat the markup aspart of the character stream and in fact, this wasthe only way to segment primary data in XStand-off version 1 (and its predecessor SGF).
However,this mechanism can be error-prone when usingpre-annotated primary data because of the whitespace handling in XML.
In this case, it is morepromising to use the element node tree of an ex-isting annotation as an initial traversal for the se-lection of the respective textual part.
As an exam-ple we use a (valid) XHTML file, from which thefirst div element is selected by using an XPath2.0 (Berglund et al., 2010) expression (the exam-ple can be seen in Listing 1 in Section 2.2).4<segment xml:id="seg_html1" primaryData="pd1" target="xhtml:html/xhtml:body/xhtml:div[1]"/>This approach is limited to work on XML in-stances only, that is, documents that are at leastwell-formed according to the XML specification,including XHTML files and those HTML5 pagesthat use the XHTML syntax, see Chapter 9 ofthe HTML5 spec (Berjon et al., 2014).
Since thelarger part of the World Wide Web does not ful-fill this requirement, tools such as TagSoup5orHTML Tidy6can be used to pre-process those web3The optional primaryData attribute?s value refers tothe corresponding primary data file via XML ID/IDREFidentity constraints ((in case of multiple primary data files ?in the example to the id ?txt?, not via a URI.
It does not pro-vide any hint about its MIME type, this information is storedin the respective primaryData element shown in Listing 2.4Apart from XPath, the XPointer specification defined inDeRose et al.
(2002a; 2002b) and used in XCES (see (Ide etal., 2000) and Section 5) would be another option.
However,since XPointer support is very sparse, XPath is a more naturalfit.5See http://ccil.org/?cowan/XML/XML/tagsoup/ for further details.6See http://tidy.sourceforge.net/ for fur-ther details.pages.
This cleaning process is less aggressivesince in most cases it only results in changes of thestructural markup and since we have already savedthe file in its original form, destructive changescan be detected afterwards.2.2 AnnotationsStandoff annotations may be stored in the same ora different file.
XStandoff, as an integrated seri-alization format, not only combines segmentationand all annotation layers in a single instance, butsticks as close as possible to the original inlineannotation format.
Element and attribute namesremain unchanged as well as the tree-like struc-ture of the element nodes.
Textual element contentis deleted since it can be referenced via the cor-responding segment, and additional attributes areadded.
The converted annotation layer is storedunderneath one of XStandoff?s layer elements.7The document grammar (defined by an XSD 1.1schema file) does not require the subtree under-neath the layer element to be valid (by using thevalue lax for the processContents attributeof the xs:any element wildcard), but is has tomeet the well-formedness constraints defined inthe XML specification.Using the simple XHTML page shown inListing 1 as primary data, we can select partsof the sentence with XPath 2.0 expressions ?for example, the noun phrase (and the pro-noun) ?This?
is selected by the expressionxhtml:html/xhtml:body/substring(xhtml:div[1],1,4)using the substring() function (Malhotra etal., 2010).Listing 1: Example XHTML page<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Instance</title></head><body><div>This is a word.</div></body></html>Listing 2 shows the XStandoff instance usingthis XHTML page as primary data.
As an annota-tion layer, we have added a partial POS annotation(including sentence boundary detection).Listing 2: XStandoff instance with XHTML pri-mary data and POS annotation<corpusData xml:id="c1" xmlns="http://www.xstandoff.net/2009/xstandoff/1.1"xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"><primaryData xml:id="p1"><primaryDataRef uri="instance.html" mimeType="application/xhtml+xml" encoding="utf-8"/>7XML Namespaces (Bray et al., 2009) are used to differ-entiate between XStandoff?s markup and foreign markup.17</primaryData><segmentation><segment xml:id="seg1" target="xhtml:html/xhtml:body/xhtml:div[1]"/><segment xml:id="seg2" target="xhtml:html/xhtml:body/substring(xhtml:div[1],1,4)"/><!-- [...] --></segmentation><annotation><level xml:id="pos"><layer><s xmlns="http://www.xstandoff.net/pos"xsf:segment="seg1"><np xsf:segment="seg2"><pron xsf:segment="seg2"/></np><!-- [...] --></s></layer></level></annotation></corpusData>Additional annotation levels and layers (seeWitt (2004) for a discussion about the distinctionof levels and layers) can be added any time.
SinceXStandoff supports not only multiple annotationlayers but multiple primary data files as well, thereare two alternative XSF representations possible,if we extract the written text from the XHTML fileand use it as primary data file: (1) The TXT fileis used as additional primary data file (and servesas input for other linguistic annotation tools, seeListing 3); (2) the TXT file serves as the single pri-mary data file and both the XHTML and the POSannotation are stored as annotation levels and lay-ers.
For the second option it is again necessaryto pre-process the XHTML file with the alreadymentioned tools.Listing 3: XStandoff instance with two primarydata files and POS annotation<corpusData xml:id="c1" xmlns="http://www.xstandoff.net/2009/xstandoff/1.1"xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"><primaryData xml:id="p1"><primaryDataRef uri="instance.html" mimeType="application/xhtml+xml" encoding="utf-8"/></primaryData><primaryData xml:id="txt"><primaryDataRef uri="instance.txt" mimeType="text/plain" encoding="utf-8"/></primaryData><segmentation><segment xml:id="seg1" primaryData="p1" target="xhtml:html/xhtml:body/xhtml:div[1]"/><segment xml:id="seg2" primaryData="p1" target="xhtml:html/xhtml:body/substring(xhtml:div[1],1,4)"/><!-- [...] --><segment xml:id="seg_txt1" primaryData="txt"start="0" end="4"/></segmentation><annotation><level xml:id="pos"><layer><s xmlns="http://www.xstandoff.net/pos"xsf:segment="seg1"><np xsf:segment="seg2"><pron xsf:segment="seg2 seg_txt1"/></np><!-- [...] --></s></layer></level></annotation></corpusData>Figure 2 shows the three possible representa-tions.HTML XHTMLTXTXSFXHTMLPOSXSFTXTPOSXHTMLXSFTXTPOSXHTMLXSFXHTMLXSFTXTXHTMLXSFTXTpre-process convertadd layerextract TXTconvertlayerprimary datainstanceadd layeradd layerPOS-Taggerservesas inputconvertedoutputressourceFigure 2: Possible XStandoff instances3 Creating XStandoff instancesIt it cumbersome to create XStandoff instances byhand due to its separation of primary data and an-notation.
In addition, most annotation tools createinline instances and can only use raw text as inputfiles.
Therefore, we have created a set of XSLT 2.0transformation stylesheets (the XStandoff Toolkit)that allow for the easy conversion between an in-line XML instance (containing a single annotationlayer) to a single-layered XStandoff instance, andthe merging of XStandoff instances over the verysame primary data.The XSLT stylesheet inline2xsf requiresan input XML file ideally containing elementsbound by XML namespaces since XStandoff usesXML namespaces for the layer separation (if nonamespace is present, it will be generated).
Theprocess of converting an inline annotation to XSFis divided into two steps: After segments are builton the basis of the elements and the characterstream of the underlying primary data, the anno-tation layer is produced by converting the formerinline annotation and linking its elements to theaccording segments by ID/IDREF binding.After at least two inline annotations havebeen transformed to single-layered XStandoff in-stances, it is possible to merge those into asingle file.
Due to the frequent use of the18ID/IDREF mechanism in XStandoff for estab-lishing connections between segment elementsand the corresponding annotation, manually merg-ing of XStandoff files is quite unpromising.
ThemergeXSF XSLT stylesheet converts two XSFinstances into a single one containing the annota-tion levels (or layers) from both input files and nor-malizing the corresponding segments.8The mergeprocess leads to a complete reorganization of thesegment list making it necessary to update the seg-ment references of the elements in the XStandoffannotation layers.
All that is done by applying themergeXSF script.Other stylesheets allow for the extractionand removal of single annotation layers, or aquick overview of overlapping annotations ?
seeSt?uhrenberg and Jettka (2009) for a detailed dis-cussion.
The current version of the stylesheet onlysupports the merging of two single XStandoff filesat a time, additional files have to be merged suc-cessively.
However, there is a web-based solu-tion that uses the native XML database BaseX9as backend as well as a Java GUI that eases bulktransformation, merging and analyzing XStandoffinstances.In Jettka and St?uhrenberg (2011), different vi-sualization options for concurrent markup (for ex-ample, the underlying XHTML annotation andone or more linguistic annotation layers) basedon XStandoff are discussed, including newerweb technologies such as WebGL for a three-dimensional visualization of overlapping subtrees.Although the examples given in this paper arequite short, Piez (2010; 2012) has already shownthat the underlying concept is capable of visualiz-ing larger instances (such as whole books) as well.The full version of the XStandoff Toolkit can beobtained at XStandoff?s website10, although up tonow it has not been adapted to support the addi-tional segmentation mechanism for valid XHTMLfiles described in Section 2.1.8Especially this normalization can be problematic: On theone hand, there are segments spanning over the same stringof the primary data (but with distinct IDs) that have to be re-placed by a single segment element in the output instance.On the other hand, there are two segments with the same IDspanning over different character positions that have to getnew unique IDs.9See http://basex.org for further details.10See http://xstandoff.net for further details.4 Using XStandoffThe format as such has been successfully usedin various projects for different purposes, suchas storage format for multiple annotated corporaas part of an semi-automatic anaphora resolu-tion (St?uhrenberg and Goecke, 2008), import/-export serialization of the web-based annotationtool Serengeti (Diewald et al., 2008; Poesio etal., 2011), and as annotation format for lexicalchains (Waltinger et al., 2008), amongst others.Due to the fact, that the newly introduced segmen-tation for pre-annotated and multimodal primarydata (St?uhrenberg, 2013) are still under develop-ment, XStandoff has not been used for larger webcorpora yet.Regarding the size of an XStandoff instancewith multiple annotation layers compared to anumber of inline annotation instances, it is hard tomake a general expression about the increase/de-crease in size.
On the one hand, an XStand-off instance usually does not include the primarydata (resulting in a smaller file size), on the otherhand the meta information included in an XSF in-stance such as the additional segmentation mech-anism add to the overall file size.
Single heavilyannotated XSF instances can take up to multiplemegabytes in size, however, there have not beenany problems to process these files with standardXML tools such as XSLT and XQuery.
Denselyannotated texts benefit from the fact that segmentsover a defined text span (or XHTML subtree) areonly instantiated once, resulting in a state of pro-cessing in which additional annotation layer doonly add very few if any segment elements tothe resulting XStandoff instance.
As a rule ofthumb, it is highly recommended to use nativeXML databases such as the already-mentionedBaseX or eXist11as storage backends for analyz-ing large corpora.5 XStandoff comparedSince the concept of standoff annotation as suchis not new at all, a variety of serialization for-mats already exist.
The most prominent candi-date for a standoff serialization format supportingmultiple annotations is the Graph Annotation For-mat (GrAF), the pivot format of the internationalstandard ISO 24612:2012 (Linguistic AnnotationFramework).
However, there are different versions11See http://exist-db.org for further details.19of the format: The partial document grammar inthe ISO standard differs from the one that is avail-able at its web site12while the first release of theGrAF-annotated Manually Annotated Sub-Corpus(MASC)13again uses different element and at-tribute names.Another issue is that the standard is quite indif-ferent in terms of the segmentation over the pri-mary data.
While anchors are defined via stringvalues, the standard states that, ?
[a]pplications areexpected to know how to parse the string repre-sentation of an anchor into a location in the ar-tifact being annotated?
(Table 3, in the standarddocument).
Although pre-annotated primary datais supported14, one either may include markup aspart of the character stream when referring to char-acter positions, or use a combination of an XPath2.0 expression to select the element containing thetext, and an offset to select the corresponding partof the character string (see Section 3.3.4 of thestandard) ?
XPath 2.0?s substring() functionshown in Listing 2 is not used.Concerning the annotation itself, GrAF uses afeature structure format that resembles the seri-alization standardized in ISO 24610-1 and Chap-ter 18 of the TEI P5 (Burnard and Bauman, 2014).Converting existing annotation into this formatcan be considered as a more complex task andthe resulting subtrees may become quite large (seeStegmann and Witt (2009) for a discussion of TEIfeature structures as serialization for multiple an-notated XML instances).6 Conclusion and future developmentStandoff annotation can be a valuable means in an-notating web corpora, especially when combinedwith a strict policy of storing both the raw dataand the primary data as non-altered files.
Withits segmentation mechanism supporting XPath 2.0expressions, XStandoff can use only slightly pro-cessed XHTML pages together with their respec-tive annotation layers, allowing for less destructivecleaning of web pages.Since the segmentation mechanism discussed inthis paper have been added to XStandoff only re-cently, non-textual primary data is not yet sup-ported by the current version of the XStandoff12See http://www.xces.org/ns/GrAF/1.0/ forfurther details.13See http://www.anc.org/MASC/About.htmlfor further details.14The preferred primary data format is raw text.Toolkit.
Although it is much easier to identify therespective subtrees of valid XHTML pages (forexample by using XPath visualization and/or se-lection tools such as the one included in the oXy-gen XML Editor15) compared to computing char-acter positions, an automatic instantiation of seg-ments is preferred.
We plan to include the segmen-tation over pre-annotated files in one of the nextiterations of the XStandoff Toolkit.ReferencesAnders Berglund, Scott Boag, Don Chamberlin,Mary F. Fern?andez, Michael Kay, Jonathan Robie,and J?er?ome Sim?eon.
2010.
XML Path Language(XPath).
Version 2.0 (Second Edition).
W3C Rec-ommendation, World Wide Web Consortium.Robin Berjon, Steve Faulkner, Travis Leithead, ErikaDoyle Navara, Edward O?Connor, Silvia Pfeiffer,and Ian Hickson.
2014.
Html5.
a vocabulary andassociated apis for html and xhtml.
W3C CandidateRecommendation, World Wide Web Consortium.Tim Bray, Jean Paoli, C. M. Sperberg-McQueen, EveMaler, and Franc?ois Yergeau.
2008.
ExtensibleMarkup Language (XML) 1.0 (Fifth Edition).
W3CRecommendation, World Wide Web Consortium.Tim Bray, Dave Hollander, Andrew Layman, RichardTobin, and Henry S. Thompson.
2009.
Namespacesin XML 1.0 (third edition).
W3C Recommendation,World Wide Web Consortium.Lou Burnard and Syd Bauman, editors.
2014.
TEI P5:Guidelines for Electronic Text Encoding and Inter-change.
Text Encoding Initiative Consortium, Char-lottesville, Virginia.
Version 2.6.0.
Last updated on20th January 2014, revision 12802.Steven J. DeRose, Ron Jr. Daniel, Paul Grosso, EveMaler, Jonathan Marsh, and Norman Walsh.
2002a.XML Pointer Language (XPointer).
W3C WorkingDraft, World Wide Web Consortium.Steven J. DeRose, Eve Maler, and Ron Jr. Daniel.2002b.
XPointer xpointer() Scheme.
W3C Work-ing Draft, World Wide Web Consortium.Nils Diewald, Maik St?uhrenberg, Anna Garbar, andDaniela Goecke.
2008.
Serengeti ?
webbasierteAnnotation semantischer Relationen.
Journal forLanguage Technology and Computational Linguis-tics, 23(2):74?93.Shudi (Sandy) Gao, C. M. Sperberg-McQueen, andHenry S. Thompson.
2012.
W3C XML SchemaDefinition Language (XSD) 1.1 Part 1: Structures.W3C Recommendation, World Wide Web Consor-tium.15See http://oxygenxml.com for further details20Nancy M. Ide, Patrice Bonhomme, and Laurent Ro-mary.
2000.
XCES: An XML-based Encod-ing Standard for Linguistic Corpora.
In Proceed-ings of the Second International Language Re-sources and Evaluation (LREC 2000), pages 825?830, Athens.
European Language Resources Asso-ciation (ELRA).ISO/TC 37/SC 4/WG 1.
2006.
Language ResourceManagement ?
Feature Structures ?
Part 1: Fea-ture Structure Representation.
International Stan-dard ISO 24610-1:2006, International Organizationfor Standardization, Geneva.ISO/TC 37/SC 4/WG 1.
2012.
Language ResourceManagement ?
Linguistic annotation framework(LAF).
International Standard ISO 24612:2012,International Organization for Standardization,Geneva.Daniel Jettka and Maik St?uhrenberg.
2011.
Visual-ization of concurrent markup: From trees to graphs,from 2d to 3d.
In Proceedings of Balisage: TheMarkup Conference, volume 7 of Balisage Series onMarkup Technologies, Montr?eal.Ashok Malhotra, Jim Melton, Norman Walsh, andMichael Kay.
2010.
XQuery 1.0 and XPath 2.0Functions and Operators (Second Edition).
W3CRecommendation, World Wide Web Consortium.Wendell Piez.
2010.
Towards Hermeneutic Markup:An architectural outline.
In Digital Humanities2010 Conference Abstracts, pages 202?205, Lon-don.
The Alliance of Digital Humanities Organisa-tions and The Association for Literary and Linguis-tic Computing and The Association for Computersand the Humanities and The Society for Digital Hu-manities ?
Soci?et?e pour l?
?etude des m?edias interactif.Wendell Piez.
2012.
Luminescent: parsing LMNL byXSLT upconversion.
In Proceedings of Balisage:The Markup Conference, volume 8 of Balisage Se-ries on Markup Technologies, Montr?eal.Massimo Poesio, Nils Diewald, Maik St?uhrenberg, JonChamberlain, Daniel Jettka, Daniela Goecke, andUdo Kruschwitz.
2011.
Markup Infrastructure forthe Anaphoric Bank: Supporting Web Collabora-tion.
In Alexander Mehler, Kai-Uwe K?uhnberger,Henning Lobin, Harald L?ungen, Angelika Storrer,and Andreas Witt, editors, Modeling, Learning andProcessing of Text Technological Data Structures,volume 370 of Studies in Computational Intelli-gence, pages 175?195.
Springer, Berlin and Heidel-berg.Jens Stegmann and Andreas Witt.
2009.
TEI FeatureStructures as a Representation Format for MultipleAnnotation and Generic XML Documents.
In Pro-ceedings of Balisage: The Markup Conference, vol-ume 3 of Balisage Series on Markup Technologies,Montr?eal.Maik St?uhrenberg and Daniela Goecke.
2008.
SGF ?an integrated model for multiple annotations and itsapplication in a linguistic domain.
In Proceedingsof Balisage: The Markup Conference, volume 1 ofBalisage Series on Markup Technologies, Montr?eal.Maik St?uhrenberg and Daniel Jettka.
2009.
A toolkitfor multi-dimensional markup: The development ofSGF to XStandoff.
In Proceedings of Balisage: TheMarkup Conference, volume 3 of Balisage Series onMarkup Technologies, Montr?eal.Maik St?uhrenberg.
2013.
What, when, where?
Spatialand temporal annotations with XStandoff.
In Pro-ceedings of Balisage: The Markup Conference, vol-ume 10 of Balisage Series on Markup Technologies,Montr?eal.Ulli Marc Waltinger, Alexander Mehler, and MaikSt?uhrenberg.
2008.
An integrated model of lexi-cal chaining: application, resources and its format.In Angelika Storrer, Alexander Geyken, AlexanderSiebert, and Kay-Michael W?urzner, editors, KON-VENS 2008 ?
Erg?anzungsband Textressourcen undlexikalisches Wissen, pages 59?70, Berlin.Andreas Witt.
2004.
Multiple hierarchies: New As-pects of an Old Solution.
In Proceedings of ExtremeMarkup Languages, Montr?eal.21
