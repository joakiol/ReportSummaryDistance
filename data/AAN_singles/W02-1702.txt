Cascading XSL filters for content selection in multilingualdocument generationGuillermo BARRUTIETAMondragon UnibertsitateaLoramendi, 4Arrasate, Spain, 20500gbarrutieta@eps.muni.esJoseba ABAITUAUniversidad de DeustoAvenida de las Universidades, 24Bilbao, Spain, 48007abaitua@fil.deusto.esJosuKa D?AZUniversidad de DeustoAvenida de las Universidades, 24Bilbao, Spain, 48007josuka@eside.deusto.esAbstractContent selection is a key factor of anysuccessful document generation system.This paper shows how a content selectionalgorithm has been implemented using anefficient combination of XML/XSLtechnology and the framework of RST fordiscourse modeling.
The system generatesmultilingual documents adapted to userprofiles in a learning environment for theweb.
This CourseViewGenerator appliessimplified RST schemes to the elaborationof a master document in XML from whichcontent segments are chosen to suit theuser's needs.
The personalisation of thedocument is achieved through theapplication of a sequence of filtering levelsof text selection based on the user aspectsgiven as input.
These cascading filters areimplemented in XSL.IntroductionIt is widely accepted that content selectionplays a crucial role in text generation (Reiterand Dale 2000).
This process is normally seenas a goal-directed activity in which textsegments are fit into the discourse structure ofthe text so as to convey a coherentcommunicative goal (Grosz and Sidner 1986).Content planning techniques, such as textualschemas (McKeown 1985) or plan operators(Moore and Paris 1993), have been successfullyused as models of text generation.
There arecases, though, in which these techniques mayface some limitations, for example, when thestructure of the discourse is difficult toanticipate (Mellish et al 1998).
Nevertheless,when a set of well-defined communicativegoals exists, complex goals can be broken downinto sequences of utterances and generationbecomes an efficient "top-down'' process(Marcu 1997).This paper shows a macro level contentselection algorithm that applies user profiles toconstrain and discriminate the contents of atext, whose discourse structure is representedusing a simplified version of RhetoricalStructure Theory (Mann and Thompson 1988).The algorithm has been implemented usingXML/XSL-based technology in a multilingualdocument generation system for educationalpurposes.
The main objective of thisCourseViewGenerator system (Barrutieta, 2001and Barrutieta et al, 2001) is to automaticallyproduce multilingual learning documents thatsuit the student's needs at each particular stageof the learning process.
Figure 1 shows theoverall architecture of the system.Course material(multilingualparallel corpus)User aspectsxml-dtdDocument generationDocument viewCOURSE GENERATORGeneration enginehtml-xml-dtd-xsl-javascriptSelect content and format in an?intelligent?
way.InputsW eb browserFigure 1: General scheme of the multilingualdocument generation systemWe will begin by explaining the differentparts of the system before addressing in moredetail the content selection algorithm itself.
Thesystem starts by constructing a masterdocument of the kind Hirst et al (1997)proposed.
This master document consists in afull-fledged text with references to all necessarymultimedia elements (figures, tables, pictures,links, etc.).
In our case, this master documenttakes the shape of a simple text file with allrelevant information tagged in XML.
Tagscarry information of the logical composition ofthe text as well as metadata information aboutits discourse structure.
The text is seen as rawdata, and tags encapsulate these raw data asmetadata.
The structure of the discourse isrepresented using a simplified version of RST.RST is simplified in the sense that thegranularity of discourse segments does nottranscend the boundaries of the sentence.Table 1. illustrates this gross-grainedversion of RST in which discourse relations arerepresented as XML tags.<RST><RST-S><PREPARATION><S>  What is knowledge management?
</S></PREPARATION></RST-S><RST-N><S>Knowledge, in a business context, is the organizationalmemory, which  people know collectively and individually</S><S>Management is the judicious use of means to accomplishan end</S><S>Knowledge management is the combination of thoseconcepts, KM = knowledge + management</S></RST-N></RST><RST><RST-S><PREPARATION><S>  ?Qu?
es gesti?n del conocimiento?
</S></PREPARATION></RST-S><RST-N><S>Conocimiento, en el contexto de los negocios, es la memoriade la organizaci?n, lo que la gente sabe colectivae individualmente</S><S>Gesti?n es el uso juicioso de recursos para alcanzar un fin</S><S>Gesti?n del conocimiento es la combinaci?n de esos dosconceptos, GC = gesti?n + conocimiento</S></RST-N></RST><RST><RST-S><PREPARATION><S>  Zer da ezagutzaren kudeaketa?
</S></PREPARATION></RST-S><RST-N><S>Kudeaketa, negozioetan, erakundearen memoriada, jendeak bakarka eta taldeka dakiena</S><S>Kudeaketak erabideen erabilera zuzena du helburu</S><S>Ezagutzaren kudeaketa bi kontzeptu hauen nahasketa da,EK = ezagutza + kudeaketa</S></RST-N></RST>Table 1: Gross-grained RST in XMLAs any other standard RST discourse tree,this simplified RST contains a nucleus for eachtext paragraph, and one or several satelliteslinked by a discourse relation to the nucleuswithin the same paragraph.
The nucleus is anabsolutely essential segment of the text, as itcarries the main message that the author wantsto convey.
Satellites can be replaced or erasedwithout changing the overall message and playan important supporting role for the nucleus.In our system, satellites are selected ordiscarded depending on the reader?s profile.The reader?s profile is defined through a set ofuser aspects.
These take the form of multi-value parameters that were sketched after anumber of surveys were conducted amongteachers, students and other experts from theeducational context.
As a result of these surveysa user model was proposed (Barrutieta et al2002).
Table 2 illustrates a simplified version ofthe model.Specific User Aspects Discrete valuesSubject Language processorsMoment in time Before the course / Period 1 /Period 2 / ?
/ After thecourse (review)Languages EN/ ES/ EUGeneral User Aspects Discrete valuesLevel of expertise Null / Basic / Medium / HighReason to read To get an idea / To get deepinto itBackground Not related to the subject /Related to the subjectOpinion or motivation Against / Without an opinionor motivation / In favourTime available A little bit of time / Quitesome time / Enough timeTable 2:  User modelBased on this user model, we will nowdiscuss the content selection algorithm(henceforth CSA).
The CSA determines whichsegments of the discourse are going to be usedin order to make explicit  the set of parametersthat conform with the user?s profile.
Inprinciple, nuclei will always be chosen (as theyconvey the main message of the text); satellites,however, will be selected depending on theirrelation to the nucleus and the user aspects thatare activated at the time of generation.The selection algorithm works in threeconsecutive phases: parallel selection,horizontal filtering and vertical filtering.Vertical filtering is the most important phase ofthe three as it is here that the parts of thediscourse tree are selected or discarded.1 CSA - Parallel selection - Phase 1In the phase of parallel selection two of thethree specific user aspects are taken intoaccount: subject and languages.
These aspectsidentify the relevant XML master document inthe chosen language (as illustrated in figure 2.
).There is one master document for each subjectcovered by the system, and these documentscontain parallel aligned versions of the texts ineach language (English, Spanish and Basque, inour case).Figure 2: CSA ?
Parallel selectionAs a result of this first filtering phase, theappropriate language division of the masterdocument is selected.
This text division is theinput for subsequent filtering phases in whichthe particular segments of the document will bediscriminated.2 CSA - Horizontal filtering - Phase 2The horizontal filtering phase concerns the thirdremaining user aspect that is moment in time,which is used to suit the generated text to theparticular moment of the learning plan.
Thisaspect cuts horizontally the parallel selection ofthe previous section.The master document is structured inaccordance with a set of course schedulingparameters.
Each day and learning unit withinthe day is correlated with corresponding set oflearning entities in the XML master document.In this way, the generated document can betargeted for learning unit 1 of day 1, or anyother day or unit.
The XML master file alsocontains some informative elements that thereader may need to know even before thecourse starts or after it has finished.
These willbe generated also as a result of some specificuser aspects that are activated.
Figure 3 shows agraphical representation of horizontal filtering.Figure 3:  CSA ?
Horizontal filtering3 CSA - Vertical filtering - Phase 3The final phase of vertical filtering comprisesthe five user aspects of level expertise, reasonto read, professional background, opinion ormotivation and time available.
These fiveaspects will be relevant to discriminate thoseparts of the discourse tree which have beenpreviously selected and filtered.Nuclei will be always maintained becausethey are, by definition, irreplaceable segmentsof the text and convey the main message.Satellites are segments of the text that will besubject to the algorithm's process of selection.Figure 4. shows graphically this filtering phase.Figure 4: Vertical filteringThe set of discrimination rules applied inthis first version of the content selectionalgorithm is described below.
These rules applyin subsequent checking levels of filtering, andtherefore have a cascading effect.
It is knownthat RST covers an indefinite number ofrelation-satellites (Knott, 1995) which havebeen classified by Hovy & Maier (1997), butwe will only mention the set of relation-satellites used in the master document taken asexample.3.1 Vertical filter ?
Level of expertiseIf level_expertise = ?null?
orlevel_expertise = ?basic?
Thenno relation-satellite is discarded;If level_expertise = ?medium?
orlevel_expertise = ?high?
Thendiscard example, exercise, backgroundand preparation relation-satellites;Rationale for the rule: Any user with a nullor basic level of expertise on the selectedsubject will need all the information availableto understand the text.
Alternatively, a user witha medium or high level of expertise will notrequire examples, exercises, background,preparation and similar relation-satellites.3.2 Vertical filter ?
Reason to readIf reason_to_read = ?to get an idea?
Thendiscard exercise and elaboration (all thetypes of elaboration: textual elaboration,link elaboration and image elaboration)relation-satellites;If reason_to_read = ?to get deep into it?Thenno relation-satellite is discarded;Rationale: Any user wishing to broaden hisknowledge in the selected subject will needadditional information.
Conversely, a user withthe intention of just getting an idea does notneed any exercise, elaboration, or similarrelation-satellites, which often require a moreactive role on the part of the user.3.3 Vertical filter ?
Professional backgroundIf job_studies =  ?not related subject?
Thenno relation-satellite is discarded;If job_studies = ?related subject?
Thendiscard background and preparationrelation-satellites;Rationale: Any user whose professionalbackground is not related to the subject willneed all the additional supporting text tounderstand its meaning.
Conversely, if the useris related to the selected subject, we mayassume that background, preparation andsimilar relation-satellites will be unnecessary.3.4 Vertical filter ?
Opinion or motivationIf opinion_motivation = ?against?
oropinion_motivation = ?without an opinionor motivation?
Thenno relation-satellite is discarded;If opinion_motivation = ?in favour?
Thendiscard motivate, antithesis, concessionand justify relation-satellite;Rationale: A motivated or favourable userwill not require additional motivation and,therefore, the motivate, antithesis, concession,justification, and similar relation-satellites willbe disregarded, since they play a role inchanging the opinion of the user to be in favourof the course material.3.5 Vertical filter ?
Time availableIf time_available = ?a little bit of time?
Thendiscard all the relation-satellites;If time_available = ?quite some time?
Thendiscard exercise relation-satellite;If time_available = ?enough time?
Thenno relation-satellite is discarded;Rationale: Time availability is a crucial useraspect.
If the user is in a rush or has little time,the system has to provide only the mostelementary information.
In such case onlynuclei will be generated.
If the user has a bitmore time, but not much, exercises are notoffered, since they are usually quite timeconsuming and they require an activeparticipation of the user.
Finally, if the user hasplenty of time, all the additional information isdelivered.3.6 Final comments on vertical filtersCascading filters apply to the relation-satellites that are still active after the previousphases in the generation process.
When avertical filter 3 tries to get rid of a relation-satellite already abandoned at a previous phase(2 or 1), there will be nothing to act upon, butthis circumstance will produce no consequence,since the CSA continues the filtering process onthe remaining text.
Thus, the order in which thevertical filters are applied is not relevant.After the filtering process has beensuccessfully completed, there is still a finalpresentation task.
A good presentation is, in ouropinion, one that will provide the student withan optimal version of the document to read,understand and fruitfully assimilate its content.4 ImplementationThe javascript code manages the user aspects(one of the inputs of the algorithm) and theapplication of the casdading filters (the CSA).Depending on the user aspects given by theuser, the variables sXSL1 to sXSL5 take thevalue of the filter to be applied for each useraspect (level of expertise, reason to read,background, opinion or motivation and timeavailable).The sResult variable contains the XML filewhose content will be varying after each filter isapplied.
Table 3 shows the code that executes afilter.objData.loadXML(sResult);objStyle.load(sXSL1);sResult=objData.transformNode(objStyle);Table 3:  Javascript implementationXSL filters pass on (or not) one element tothe following vertical filter depending on therules described before.
Table 4 shows how thisis done with the relation-satelliteBACKGROUND.<xsl:templatematch="BACKGROUND"><xsl:copy><xsl:apply-templates/></xsl:copy></xsl:template>Table 4:  XSL implementation5 ExperimentationThe objective of the experiment is to validatethe hypothesis expressed in the filtering rulesand the actual filtering mechanism of the CSA.Several ideas are taken into consideration inthis respect, but we are aware that users(students, professor and other scholars) are thefinal judges.
Their assessment of the systemwill depend on whether the generated documentmeet (or fail to do so) their informationrequirements, providing them with just the righttype and amount of information.ConclusionsIn the tests conducted so far, theCourseViewGenerator is functioning correctly.One of the features that is worth considering isthe scalability of the filtering mechanism.
Weanticipate two types of expansions to thesystem: (1) Increasing the size of the corpus,including more subjects and master documents,and (2) augmenting the user model by addinguser aspects or by adding more parameters tothe existing user aspects.The first type of expansion will not requireany alteration of the CSA as long as the addeddocument tokens conform to the existing DTDand our RST model.
In order to increase thesize of the corpus, it will be necessary toannotate XML discourse-tree metadatamanually.
This is a complex and time-consuming task (as has been noted by Carlsonand Marcu, 2001).
Future research activitiesshould focus on helping automate theannotation process, for example using cuephrases ?
la Knott (Knott 1995; Alonso andCastell?n, 2001).The second type of expansion requires onlythe elaboration of additional XSL filters.Adding new values to existing user aspectsrequires only the modification of thecorresponding XSL filter.
Any of these last twooperations can be incorporated easily.Therefore, adding a new user aspect or a newdiscrete value does not increase in anysubstantial way the complexity of the system.AcknowledgementsThis research was partly supported by theBasque Government (XML-Bi: multilingualdocument flow management procedures usingXML/TEI-P3,  PI1999-72 project).ReferencesAlonso, L. and Castell?n, I.
(2001) Towards adelimitation of discursive segment for NaturalLanguage Processing applications.
FirstInternational Workshop on Semantics, Pragmaticsand Rhetoric.
Donostia (Spain), pp.
45-52.Barrutieta, G. (2001)  Generador inteligente dedocumentos de formaci?n.
Virtual Educa 2001,Madrid (Spain), pp.
256-261.Barrutieta, G., Abaitua, J. and D?az, J.
(2001) Gross-grained RST through XML metadata formultilingual document generation.
MT SummitVIII.
Santiago de Compostela (Spain), pp.
39-42.Barrutieta, G., Abaitua, J. and D?az, J.
(2002) Usermodelling and content selection for multilingualdocument generation.
Unpublished but currentlybeen evaluated for publication.Carlson, L.and Marcu, D. (2001) Discourse taggingmanual.
Technical report ISI-TR-545.
ISI Marinadel Rey (USA).Grosz, B. and Sidner, C. (1986) Attention, intentionsand the structure of discourse'', ComputationalLinguistics, 12:175-204.Hirst, G., DiMarco, C., Hovy E. & Parsons K.(1997) Authoring and Generating Heath-Education Documents That Are Tailored to theNeeds of the Individual Patient.
Proceedings ofthe Sixth International Conference.
UM97.
Vienna(NY-USA), pp.
107-118.Hovy, E. & Maier, E. (1997) Parsimonious orprofligate: how many and which discoursestructure relations?<http://citeseer.nj.nec.com/hovy97parsimonious.html>Knott, A.
(1995) A Data-Driven Methodology forMotivating a Set of Coherence Relations, Ph.D.thesis, University of Edinburgh, Edinburgh (UK).Mann, W.C., and Thompson, S.A. (1988) RhetoricalStructure Theory: A theory of text organization.Tech.
Rep. RS-87-190.
Information SciencesInstitute.
Los Angeles, CA.Marcu, D. (1997) From local to global coherence: abottom-up approach to text planning, inProceedings of AAAI-97, American Associationfor Artificial Intelligence, pp.629-635.McKeown, K. (1985) Text Generation: UsingDiscourse Strategies and Focus Constraints toGenerate Natural Language Text, CambridgeUniversity Press.Mellish, C., M. O'Donnell, J. Oberlander and A.Knott (1998) An architecture for opportunistic textgeneration.
Proceedings of the Ninth InternationalWorkshop on Natural Language Generation,Niagara-on-the-Lake, Ontario, Canada, pp.
28-37.Moore, J. and Paris, C. (1993) Planning texts foradvisory dialogues: capturing intentional andrhetorical information, Computational Linguistics,19.Reiter, E. and Dale, R. (2000) Building appliednatural language generation systems.
CambridgeUniversity Press (UK).
