Multilingual Summary Generation in a Speech-To-SpeechTranslation System for Multilingual Dialogues*J an  A lexandersson ,  Peter  Po l le r ,  M ichae l  K ipp ,  Ra l f  Enge lDFK I  GmbHStuh lsatzenhausweg 366123 Saarbr f i cken{alexanders son, poller, engel, kipp}@dfki, deAbst rac tThis paper describes a novel functionality of theVERBMOBIL system, a large scale translation sys-tem designed for spontaneously spoken multilingualnegotiation dialogues.
The task is the on-demandgeneration of dialogue scripts and result summariesof dialogues.
We focus on summary generation andshow how the relevant data are selected from thedialogue memory and how they are packed intoan appropriate abstract representation.
Finally, wedemonstrate how the existing generation module ofVERBMOBIL was extended to produce multilingualand result summaries from these representations.1 I n t roduct ionIn the last couple of years different methods forsummarization have been developed.
In this pa-per we report on a new system functionality withinthe scope of VERBMOBIL (Bub et al, 1997), a fullyimplemented speech-to-speech translation system,that generates German or English dialogue scripts(Alexandersson and Poller, 1998) as well as Ger-man or English summaries of a multilingual nego-tiation dialogue held with assistance of the system.By a script we mean a document hat reflects thedomain-specific propositional contents of the indi-vidual turns of a dialogue as a whole, while a sum-mary gives a compact summarization of all negotia-tions the dialogue participants agreed on.The key idea behind our approach is to utilizeas many existing resources as possible.
Conceptu-ally we have added one module (although techni-cally realized in different already existing modulesof the overall VERBMOBIL system) - the summarygenerator.
Besides formatting, our new module gen-erates sequences of language specific (i.e., German)semantic representations for thegeneration of Sam:maries/seripts based on the content of the dialoguememory (Kipp et al, 1999).
These descriptions are?
The research within VERBMOBIL presented here is fundedby the German Ministry of Research and Technology undergrant 011V101K/1.
The authors would like to thank TilmanBecker for comments on earlier drafts on this paper, andStephan Lesch for invaluable help with programming.realized into text by the existing VERBMOBIL gen-erator (Becker et al, 1998).
To produce multilingualsummaries we utilize the transfer module of VERS-MOBIL (Dorna and Emele, 1996).The next section gives an overview of the VERB-MOBIL system focusing on the modules central forthe production of summaries/scripts.
It is followedby a section describing the extraction and mainte-nance of summary relevant data.
We then describethe functionality of the summary generator in detail.An excerpt of the sample dialogue we refer to in thepaper is given at the end of the paper.2 P rerequ is i tesVERBMOBIL is a speech-to-speech translationproject, which at present is approaching its end andin which over 100 researchers 1 at academic and in-dustrial sites are developing a translation systemfor multilingual negotiation dialogues (held face toface or via telephone) using English, German, andJapanese.
The main difference between VERBMO-BIL and, c.f., man-machine dialogue systems is thatVERBMOBIL mediates the dialogue instead of con-trolling it.
Consequently, the complete dialoguestructure as well as almost the complete macro-planning is out of the system's control.The running system of today is complex, consist-ing of more than 75 separate modules.
About onethird of them concerns linguistic processing and therest serves technical purposes.
(For more informa-tion see for instance (Bub et al, 1997)).
For the sakeof this paper we concentrate on a small part of thesystem as shown in figure 1.A user contribution is called a turn which is di -vided into segments.
A segment ideally resemblesa complete sentence as we know it from traditionalgrammars,  However; because :of -the.
spontaneity ofthe user input and because the turn is chunked bya statistical process, the input segments for the lin-guistic components are sometimes merely pieces oflinguistic material.
For the dialogue memory andone of the shallow translation components the dia-lSee http://verbmobil.dfki.de for the list of projectpartners.148Data  - ~Figure 1: Part of the VERBMOBIL systemlogue act (Alexandersson et al, 1998) plays an im-portant role.
The dialogue act represents the com-municative function of an utterance, which is an im-portant information for the translation as well as themodeling of the dialogue as a whole.
Examples of il-locutionary acts are REQUEST and GREET.
Otheracts can carry propositional content, like SUGGESTand INFORM_FEATURE.To obtain a good translation and enhance therobustness of the overall system the translation isbased on several competing translation tracks, eachbased on different paradigms.
The deep translationtrack consists of an HPSG based analysis, semantictransfer and finally a TAG-based generator (VM-GECO).
The linguistic information within this trackis encoded in a so-called VIT 2 (Bos et al, 1996;Dorna, 1996) which is a formalism following DRT.It consists of a set of semantic onditions (i.e.
predi-cates, roles, operators and quantifiers) and allows forunderspecification with respect o scope and subor-dination or inherent underspecification.
A graphicalrepresentation of the VIT for the English sentence"They will meet at the station" is shown in figure 2.Besides the deep translation track several shallowtracks have been developed.
The main source ofinput for the generation of summaries comes fromone of these shallow analysis components (describedin section 3) which produces dialogue acts, topicsuggestions and expressions in a new knowledgerepresentation language called DIREX 3.
These ex-pressions represent domain related information likesource and destination-o!ties~ dates;-important hotelrelated data, and meeting points.
This input is pro-cessed by the dialogue module which computes therelevant (accepted) objects of the negotiation (eachconsisting of dialogue act, topic, and a DIREX)Figure 3 shows the conceptual architecture, where2Verbmobil Interface TermaDomaln Represematioa EXpression.
J.d.=C,.i;,hi3, h2)B Z I  ... II, ' "Figure 2: Graphical representation f VIT for "Theywill meet at the station"the summary generation process as a whole is indi-cated with thicker lines.
It consists of the followingsteps:o Content  Select ion:  The relevant structures areselected from the dialogue memory.. ..o .Summary~ Generat ion :  These- Structures areconverted into sequences of semantic descriptions(VITs) of full sentences for German (see section 4).o Transfer :  Depending on the target language, theGerman sentence VITs are sent through the transfermodule.
* Sentence Generat ion :  The VITs are generatedby the existing VERBMOBIL generator (Becker et al,149Figure 3: Conceptual Architecture of the Summary Generation Process2000).
.
.
.
.?
Presentat ion :  The sentences are incorporatedinto the final, e.g., HTML document.Throughout he paper we will refer to a German-English dialogue (see appendix for an excerpt).The information presented there is the spoken sen-tence(s) together with the information extracted asdescribed in section 3.
To save space we only presentparts of it, namely those which give rise to the struc-tures in figure 4.3 Ext rac t ion  and  Ma intenance  o fProtocol Relevant DataThe dialogue memory gets its input from one ofthe shallow translation components, which basesits translation on the dialogue act and Dll:tEX-expression extracted from the segment.
The inputis a triple consisting of:?
D ia logue  Act  representing the intention of thesegment.?
Topic is one of the four topics scheduling, travel-ing, accommodation and entertainment.?
D i rex  representing the propositional content ofthe segment.For the extraction of propositional content and in-tention we use a combination of knowledge basedand statistical methods.
To compute the propo-sitional content finite state transducers (FSTs)(Appelt et al, 1993) with built-in functions areused (Kipp et al, 1999).
The intention (representedby a dialogue act) is computed statistically us-ing language models (Reithinger and Klesen, 1997).Both methods were chosen because of their robust-ness - since the speech recognizers have a word errorrate of about 20%, we cannot expect sound inputfor the analysis.
Also the segmentation of turns inutterances i stochastic and therefore sometimes de-livers suboptimal segments.
Consider the input tobe processed:I would  so we were  to leave Hamburg  on thef i rs twhere the speech recognizer eplaced "good so wewill" with "I would so we were to".
The result ofthe extraction module looks like:..... """ "\[ITNFORMTtravel ing, he~s_move : \ [move,has_source_ locat  ion : \ [c ity,  has_name =' hamburg  ' \] , has_depar ture_ t ime :\ [date,  t ime= \ [day : i\] \] \] \]The result consists of the dialogue act INFORM,the topic suggestion t rave l ing ,  and and a DIREX.The top object is a move with two roles: A sourcelocation (which is a city - Hanover), and a departuretime (which is a date - day 1).Dialog processingFor each utterance, and hence each DIREX the di-alogue manager (1) estimates its relevance, and (2)enriches it with context.
For summary generation,we are solely interested in the most specific, acceptedobjects.
Therefore, we also (3) compute more spe-cific~general relations between objects:Relevance detection.
Depending on the dialogue actof the current utterance different courses of actionare taken.
SUGGEST dialogue acts trigger the stor-age, completion, focusing and inter-object relation(see below) computation for the current structure.ACCEPT and REJECT acts let the system mark thefocused object accepted/rejected.Object Completion.
Suggestions in negotiation dia-logues are incomplete most of the time.
E.g., theutterance "I would prefer to leave at five" is a sug-gestion referring to the departure time for a tripfrom Munich to Hanover on the 19.
Jan. 2000 (seeturn 1005 in the appendix).
Most of the completedata has been mentioned in the preceding dialogue.Our completion algorithm uses the focused object(itself a completed suggestion) to complete the cur-rent structure.
All non-conflicting information of tilefocused object is copied onto the new object.
In ourexample the current temporal information "I wouldprefer to leave at five" would be completed with date(i.e., "19.
Jan. 2000'" ) and other travel data ( " t r ipfrom-Munich to Hanover" ) .
Afterwards, it Will beput to focus.Object Relations.
The processing results in a numberof accepted and rejected objects.
Normally, a nego-tiation produces a series of suggestions that becomemore specific over time.
For each new object we cal-culate the relation to all other suggestions it\] termsof more specific/general or equal.
A final inference150procedure then filters redundant objects and pro- representation to a semantic description (VIT) forduces a list of accepted objects with highest speci .
.
.
.
.
.
each sentence (suitable foz.further processing by theficity.
Figure 4 shows two such objects extractedfrom the sample dialogue.
Both structures have beencompleted from context data including situationaldata, i.e., current time and place of the negotiation.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Topic SCHEDULING.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.relations:( (MDRE_SPECIF IC_THAN.#~APPOINTMENT P2*>))APPOINTMENT (Ph*+0)HAS_LOCATION --> CITY (P4*)HAS_NAME="hannover"HAS_MEETING --> MEETING (P3**)HAS_NAME="ges chae ft st re f fen"HAS_DATE --> DATE (Ph*)TEMPEX= \[year : 2000,month: j an,day : 20,part :am,time: ii :0\]relations :((MOKE_SPECIFIC_THAN .
#<APPOINTMENT P26.>)(MORE_SPECIFIC_THAN .
#<APPOINTMENT P30**+0>))APPOINTMENT (P29.+0)HAS_LOCATION --> NONGEO_LOCATION (P30***)HAS_NAME="b~hnhof"HAS_DATE --> DATE (P29")TEMPEX=\[year:2000,month:jan,day:lg,time:9:30\]Figure 4: The scheduling part of the thematic struc-ture4 Generat ing  Summar iesOur system uses many of tim existing componentsof VERB~'IOBIL.
However, we had to develop a newcomponent, the summary generator, which is de-scribed below.
It solves the task of mapping theDIREX structures elected in the dialogue nmmoryinto sequences of full fledged semant.ic sentence de-scriptions (VITs), thereby performing the followingsteps:* Document  P lann ing :  Extracting, preparingand dividing the content of the dialogue memory intoa predefined format.
-This includes, c.f., time/placeof negotiation, participants, result of the negotia-tion.o Sentence  P lann ing :  Splitting the input intochunks suitable for a sentence.
This process in-voh'es choosing an appropriate verb and arrangingthe parts of the chunk as arguments and/or a(l-.iuncts.
The final step is the mapping of this internalexisting VERBMOBIL components).?
Generat ion :  Verbalizing the VITs by the exist-ing multilingual generator of VERBMOBIL.?
Presentat ion :  Formatting of the complete doc-ument content o an, e.g., HTML-page.
Finally, thedocument is displayed by an appropriate browser.Our approach as been mostly guided by robust-ness: our representation language (DIREX) was co-developed uring the course of the project.
More-over, as the extraction component increased its vo:cabulary, we wanted to be able to generate new in-formation which had not been seen before.
Hencewe needed an approach which is fault tolerant.
In-stead of failing when the representation changes ornew type of objects were introduced we degrade inprecision.
Our two step approach as proven its use-fulness for this.4.1 Document  P lann ingThe document itself contains two main parts.
Thetop of the document includes general informa-tion about the dialogue (place, date, participants,theme).
The body of the document contains thesummary part which is divided into four paragraphs,each of them verbalizing the agreements for one ne-gotiation topic: scheduling, accommodation, travel-ing and entertainment.
Therefore, our documentplanning is very straightforward.
The four elementsof the top document are processed in the followingmanner:o Place and Date: For place and date the informa-tion is simply retrieved from the dialogue memory.?
Participants: The participants information aretransformed into a VIT by the plan processor de-scribed below.
In the absence of name/title infor-mation, a character, e.g., h, B, .. ?
is used.?
Theme: By a shallow examination of the result ofthe content extraction, a semantic description corre-sponding to a noun phrase mirroring the content ofthe document as a whole is construed.
An exampleis Bus iness  tr ip  w i th  accommodat ion.?
The summary."
Finally, the summary relevant D1-REX objects are retrieved from the dialogue men>ory: First we compute the most specific suggestionsby using the most specific/general nd equal rela-tions.
The remaining suggestions are partitionedinto equivalence classes which are filtered by com-puting the degree of acceptance.
In case of conflictthe most recent one is taken.
The resulting set is par-titioned into the above mentioned topics the)' belongto.
Finally these are processed by the plan processoras described below.4.2 Sentence P lann ingWe now turn into the process of mapping the inter-esting part of the dialogue memory onto sequences151of VITs.
An example of the content of one topic -scheduling - was shown in figure 4.
O.ur two stepapproach consists of:* A p lan processor  whose task it is to split theobjects selected into chunks suitable for a sentence.Possibly it contributes to the selection of verbs.o A semant ic  onst ructor  whose task it is to con-vert the output of the plan processor into full fledgedsemantic descriptions (VITs) for the sentences of thedocument.
This second step can be viewed as a ro-bust fall-back: If the plan processor does not succeedin obtaining full Specifications of all sentence parts,this step secures a valid and complete specification.4.2.1 The  plan processorInput to the plan processor (Alexandersson and Rei-thinger, 1997) is the thematic structure partly shownin figure 4.
The plan processor interprets (currentlyabout 150) plan operators which are expanded in atop-down left to right fashion.For the overall structure of the text, the imposedtopic structure of the thematic structure is kept.Within a topic we use a set of operators which are ca-pable of realizing (parts of) the structures to NPs,PPs and possibly verb information forming a highlevel specification of a sentence.P lan  operatorsA plan operator consists of a goal which is option-ally divided into subgoal(s).
Its syntax contains thekeywords :const ra in ts  and  :ac t ions  which canbe any Lisp expression.
Variables are indicated withquestion/exclamation marks (see figures 5 and 6).The goal of the operators uses an interface basedon a triple with the following usage:o <descr ip t ion> This is the input position of theoperator.
It describes and binds the object whichwill be processed by this operator.o <context> This is the context - input/output.The context contains a stack for objects in focus,handled as described in (Grosz and Sidner, 1986).Additionally we put the generated information on ahistory list (Dale, 1995).
The context supports thegeneration of, e.g., pronouns (see below).
At presentthe context is only used local to each topic.o <output> The result of the operator.
Tile possibleoutput types are NP, PP and sentence(s).We the distinguish two types of operators; complexoperators, responsible for complex objects, whichcan contain several roles, and simple operators,which can process imple objects (carrying only onerole).
The general design of a complex operator --seefigure 5 for an operator esponsible for appointmentobjects - consists of three subgoals:o ( f ind - ro les  .
.
. )
Retrieve tile content of theobject.
"ghe operators responsible for soh'ing thef ind - ro les  goal optionally allow for an enumera-tion of the roles we want to use.e (sp l i t - ro les  .
.
. )
These  ro les (and values) willbe partit ioned,into chunks, (which we, call a split)suitable for generating one sentence.?
(generate -sp l i t s  .
.
. )
Finally the output - asentence description - will be constructed.
(defplan appointment:goal ((class (Vapp scheduling))(?in-context ?out-context)?sentence):constraints (appointment-p !app):subgoals (:sequence(find-roles ?appZrels)(split-roles ?relsappointment ?l-of-splits)(generate-splits ?l-of-splits(Via-context ?out-context)appointment ?sentence)))Figure 5: An example of an operator for a "complex"objectBehind the functionality of the sp l i t - ro les  goalwe use pairs of operators (figure 6), where the first isa fact describing the roles of the split, and the secondis a description for how to realize the sentence.
Inthis example the selection of an appropriate verb isnot performed by this operator but by the semanticconstructor.The second type of operators are simple operatorslike the one for the generation of time expressions(tempex) or cities (see figure 4).Figure 7 shows a simplified plan processor output(building block) for one sentence.4.2.2 The Semant ic  Const ructorThe task of the semantic onstructor is to map theinformation about sentences computed by the planprocessor to full semantic representations (VITs).The knowledge source for this computational stepis a declarative set of about 160 different semanti-cally oriented sentence patterns which are encodedin an easily extendable semantic/syntactic descrip-tion language.To obtain a complete semantic representation fora sentence we first select a sentence pattern.
Thispattern is then, together with tile output of the planprocessor, interpreted to produce the VIT.
The se-lection criteria for a sentence pattern are:All patterns are ordered topic-wise becausethe appropriateness of sentence patterns is topic-dependent (e.g., the insertion of topic-specific NPsor PPs into a sentence).-+ The int.entional state of the inforination tobe verbalized highly restricts the set of appropriateverbs.Depending on the propositional content de-scribed within a DIat-:x-VIT - i.e., a VIT repre-senting one sentence part in a building block of the152; ;  - Das <Treffen> finder i n  <City>;;  am <tempex> statt?
;; - The <Meeting>takes place;; in <City> on the <tempex>(deffact sentence-split:goal (sentence-split((has_meeting ?has_name)(has_location ?has_location)(has_date ?has_date))?_topic))(defplan generate-split:goal (generate-split((has_meeting ?nmme) ......... ;;:meeting(has_location ?location) ;; city(has_date ?date)) ;; tempex(?in-context ?out-context)?topic?s):subgoals(:seq ((class (?location ?scheduling pp))7topic ?loc-pp)((class (?name ?scheduling))?topic ?s-topic)(generate-full-tempex ?date ?tempex)(((generate-sentence decl)(subj ?topic has_topic)(obj ?l-pp has_location)(obj-add ?tempex has_date))?in-context ?out-context ?s)))Figure 6: Example of sentence definition and gener-ation(ACCOMMODATION(ACCEPTED(HAS_SIZE VIT: <Einzelzimmer>)(HAS_PRICE VIT: <80-Euro-pro-Nacht>)))Figure 7: Exmnple of a plan processor outputplan processor output - it has to play different se-mantic roles in the sentence (e.g., verb-argument vs.verb-complement)Additionally, the number of DtREx-VITs givenwithin a building block for a sentence, influences thedistribution of them to appropriate semantic roles.Figure 8 shows a simplified sentence pattern thatis selected for the building block in figure 7 to con-struct a VIT for, e.g., the German sentence DasEinzelzimmer kostet 80 Euro pro Nacht.
("The sin-gle room costs 80 euro per night.").
According(( : verb kosten_v)( :subj  HAS_SIZE)(: obj HAS_PRICE)( : res t  DIREX_PPS))Figure 8: Example of a sentence patternto the above mentioned selection criteria, this pat-tern is selected only for building blocks within.
...the.~ accommodation:topi.c~ that-contain, a t  least ,val-ues for the roles HAS.SIZE and HAS.PRIZE, respec-tively.
The sentence pattern contains the following"building instructions": The semantic verb predi-cate ( :verb) is kosten_v (to cost), its subject ar-gument ( :subj)  is to be filled by the DIREX-VITassociated to the DmEx-role HAS.SIZE while :objmeans a similar instruction for the direct object.The robustness fallback ( : res t  DIREX._PPS) means.that.all_other DmEx=VITs are attached to the verbas PP  complement?.
It i spah  ~/f a\]l 'Sen~df/6+ p i t -terns to ensure that even erroneous building blocksor erroneously selected sentence patterns produce asentence VIT.Finally, the VIT is constructed by interpreting thesentence pattern.
The interpreter walks through thesentence pattern and performs different actions de-pending on the keywords, e.g., :verb,  :subj andtheir values.4.2.3 Util izing ContextDuring'the course of the generation, the plan proces-sor incrementally constructs a context (Dale, 1995),which allows for the generation of, c.f., anaphora ordemonstratives for making the text fluent or con-trasting purposes.?
Anaphora  If, e.g., a meeting is split intomore than one sentence, the plan processor uses ananaphora to the meeting in the second sentence.?
D iscourse Markers  In case of multiple, e.g.,meetings we introduce the second with a discoursemarker, e.g., "also".o Demonst ra t ives  In case of multiple meetings, weuse a demonstrative to refer to the second meeting.In addition to the plan processor, the seman-tic constructor also takes care of coherence withinthe paragraphs produced for the individual topicshereby focusing on the generation of anaphora ndadverbial discourse markers.
While the local con-text of the plan processor is based on the proposi-tional content at hand, the semantic onstructor usesa postprocessing module that is based oil the output\qTs  of the plan processor (DIREx-VITs) using itsown semantically oriented local context memory.Anaphorization and insertion of discourse mark-ers within the semantic onstructor are based on acomparison of plan processor output VITs occur-ring within consecutive sentences of a paragraph.Identical verb arguments (NPs) in consecutive sen-., tences are replaced by .appropriate anaphoric pro-nouns while identical verbs themselves lead to the in-sertion of an appropriate adverbial discourse marker.5 Mu l t i l i ngua l i tyThe generation of dialogue scripts and result sum-maries is fully implemented in VERB~VIoBIL for Ger-man and English.
For the English smnmaries we153extracted, then the transfer module produces equiv-alent English VITs which are finally sent to the En-glish generation component for producing the En-glish text.Figure 9 shows the English result summary of thedialogue shown in the appendix.make use of the transfer component as follows.
All o TN A feature was not part of the dialogue, andVITs from the German-document representation are .
not included in.
the..summary.The evaluation result is shown in figure 10.
It usesthe standard precision, recall and fallout as definedin (Mani et.al., 1998).Dialogue 1 2 3 4 averTurns 33 33 31 32 32.25Corr 6 13 9 11 9.75Miss 6 3 5 4 4.5False 3 3 3 0 2.25 ITN 32 28 30 32 30.5 IRecall 0.5---0- 0.8-'--1- 0.6----4-- 0 .7 - ' - -3 - -~10 IFallout i 0.0__9 0.1___0_ 0.0____9_ _0"00Figure 10: Evaluation ResultsFigure 9: Example of an English result summary6 Eva luat ionWe have performed a small evaluation of the overallsystem as described in this paper.
Basis for the eval-uation were the transcripts of four German-Englishnegotiation dialogues.
For each dialogue the result-ing features of the negotiation (maximally 47, e.g.,location, date for a meeting, speakers name and title,book agent) were annotated by a lmman, and thencompared with the result of running the dialoguesthrough the system and generating the summaries.The features in the summary were compared usingthe following classifications:?
Cor r  The feature approximately corresponds tothe human annotation.
This means that the featureis either (1) a 100% match; (2) it was not sufficientlyspecified or (2) too specific.
An example of (2) iswhen the correct date included a time, which wasnot captured.
An example of (3) is when a datewith time was annotated but the feature containedjust a (late.o Miss A feature is not included in the summary.o False A feature was erroneously iimluded in thesumlnary, meaning that the feature was not part ofthe dialogue or it received a wrong value.Obviously, our approach tries to be on the safeside; the summary contains only those features thatthe system thinks both partners agreed on.
Themain reasons for not getting higher numbers istwofold.
The recognition of dialogue acts, and thusthe recognition of the intension behind the utter-ances reaches a 70% recall (Reithinger and Klesen,1997).
We also still make errors during the contentextraction.7 Conc lus ionWe have presented an extension to existing modulesallowing for the generation of summaries within theVERBMOBIL system.
To our knowledge our systemis the only one that uses semantic representation asbasis for summarizing.
Other approaches use, e.g.,statistical techniques or rhetorical parsing (Waibelet al, 1998; Hovy and Marcu, 1998) to obtain thesummaries.
Moreover, although our module is re-stricted to language specific processing, the use ofsemantics and the transfer module allow for the gen-eration of multilingual documents in a very straight-forward fashion.In the near future we will extend the system withrespect o:o Sentence  Spl it  At present the first found sen-tence split is chosen.
This is not necessarily the op-timal one.
We are currently in the process of devel-oping criteria for ranking competing results.o Japanese  The VERBMOBIL system currently in-cludes German, English and Japanese.
We intendto apply the same technique as for the English sum-maries to generate Japanese ones.ReferencesJ.
Alexandersson and P. Poller.
1998.
Towards multilin-~oual protocol generation for spontaneous speech dia-gues.
In Probeedings of INLG-98, Niagara-On-The-Lake.
Ontario.
Canada.154J.
Alexandersson and N. Reithinger.
1997.
Learning di-alogue structures from a corpus.
In Proceedings of?
EufoSpeech-97; pages' 2231-2235," Rhodes.Jan Alexandersson, Bianka Buschbeck-Wolf, TsutomuFujinami, Michael Kipp, 'S tephan Koch, Elisa-beth Maier, Norbert P~eithinger, Birte Schmitz,and Melanie Siegel.
1998.
Dialogue Acts inVERBMOBIL-2 - Second Edition.
Vergmobil-Report226, DFKI  Saarbrficken, Universitgt Stuttgart, Tech-nische Universit/it Berlin, Universit/it des Saarlandes.D.
Appelt, J. Hobbs, J.
Bear, and M. Tyson.
1993.
FAS-TUS: A finite-state processor for information extrac-tion from real-world text.
In IJCAL93.T.
Becker, W. Finkler, A. Kilger, and P. Poller.
1998.
Anefficient kernel for multilingual generation in speech-to--speech dialogue -translation-.- In :Proceediiigs ofCOLING/ACL-98, Montreal, Quebec, Canada.T.
Becket, A. Kilger, P. Lopez, and P. Poller.
2000.
Mul-tilingual generation for translation in speech-to-speechdialoga.les and its realization in verbmobil.
In Proceed-ings of ECAI-2000, Berlin, Germany.J.
Bos, B. Gamb/ick, C. Lieske, Y. Mori, M. Pinkal, andK.
Worm.
1996.
Compositional semantics in verbmo-bil.
In Proceedings of Coling '96, Copenhagen, Den-mark.T.
Bub, W. Wahlster, and A. Waibel.
1997.
Verbmo-bih The combination of deep and shallow processingfor spontaneous speech translation.
In Proceedings dr/ICASSP-97, pages 71-74, Munich.R.
Dale.
1995.
An introduction to natural lan-guage generation.
Technical report, MicrosoftResearch Institute (MRI), Macquarie Univer-sity.
Presented at the 1995 European SummerSchool on Logic, Language and Information, Avail-able from http://www.mri.mq.edu.au/-rdale/nlg-textbook/ESSLLI95/.M.
Dorna and M. Emele.
1996.
Efficient Implementationof a Semantic-Based Transfer Approach.
In Proceed-ings of ECAI-96, pages 567-571, Budapest, Hungary,August.M.
Dorna.
1996.
The ADT-Package for the VERBMOBILInterface Term.
Verbmobil Report 104, IMS, Univer-sit/it Stuttgart, Germany.B.
Grosz and C. Sidner.
1986.
Attention.
Intentions andthe Structure of Discourse.
Journal o~ ComputationalLinguistics, 12(3).E.
Hovy and D. Marcu.
1998.
Coling/acl-98 tu-torial on automated text summarization.
Avail-able from http://w~v.isi.edu/-marcu/coling-ac198-tutorial.html.M.
Kipp, J. Alexandersson, and N. Reithinger.
1999.Understanding Spontaneous Negotiation Dialogue.
InWorkshop Proceedings 'Knowledge And Reasoning inPractica\[Dialogue Systems' of TJCAI '99, pages 57-64.I.
Mani, D. House, G. Klein, L. Hirschman, L.Obrist, T. Firmin.
M. Chrzanowski, and B.Sundheim.
1998.
The tipster summac text sum-marization evaluation - final report.
Technicalreports The Mitre Corp.
Available from http://www-24.nist.gov/related_projects/tipster_summac/finalxpt-.html.N.
Reithinger and M. Klesen.
1997.
Dialogue Act Clas-sification Using Language Models.
In Proceedings ofEuroSpeech-97, pages 2235-2238, Rhodes.A.
Waibel, M. Bett, M. Finke, and R Stiefelhagen.
1998.Meeting Browser: Tracking and Summarizing Meet-ings.
In Proceedings of the DARPA Broadcast NewsWorkshop.AppendixExcerpt from our sample dialogue.\[...\]1002- j a  es  geht um das Geschftstreffen inHannover ~lit.
: Yes i t  is about the businessmeeting in Hanover)\[INIT,scheduling,has_appointment:\[appointment,has_meeting:\[meeting,has_name='geschaeftstreffen'\],has_location:\[city,has_name='hannover ' ,has_loc_spec=in,has_det=nnknown\]\]\]- das  i s t  j a  am zwanzigsten Januar um elfUhr vormittags\[SUGGEST,uncertain_scheduling,has_date:..\[date,tempex='.
(ge_2920_O,\[from:\[dom:20,month:jan,tod:11:0,pod:morning_ger2\]\])'\]\]1003- so we have to leave Munich at six o'clock\[SUGGEST,traveling,has_move:\[move,has_source_location:\[city,has_name='muenchen'\],has_departure_time:\[date,tempex='(en_2920_O,\[from:tod:6:0\])'\]\]\]1004- vielleicht fahren wir lieber den Tag davor(lit.
: maybe we better leave the day before)\[SUGGEST,traveling,has_move:\[move,has_departure_time:\[date,tempex ='(ge_2920_l,\[from:neg_shift(dur(l,days),ana_point)\])'\]\]\]- da gibt es einen Zug um zwei Uhr(lit.
: there is a train at two o'clock)\[SUGGEST,traveling,has_move:\[move,has-_transportation:\[rail\],has_departure_time:\[date,tempex='(ge_2920_2,\[from:tod:2:0\])'\]\]\]1005I would prefer to leave at five\[SUGGEST,traveling,has_move:\[move,has_agent:\[speaker\],has_departure_time:\[date,tempex='(en_2920_l,\[from:tod:5:0\])'\]\]\]\[...\]I011- let us meet at the station on Wednesday\[SUGGEST,scheduling,has_appointment:\[appointment,has_location:\[nongeo_location,has_name='bahnhof',has_loc_spec=at,has_det=def\],has_date:\[date,tempex ='(en_2920_2,\[from:dow:wed\])'\]\]\]1012-um halb zehn am Bahnhof(lit.
: at half past nine at the station)\[ACCEPT, uncert ain_s cheduling, has_date : \[date,tempex= ' (ge_2S20_3, \[fzom: rod : 9 : 30\] ) ' \] ,has location: \[nongeo_location,has_name =' bahnhof ' \] \]\[...\]155
