On Identifying SetsMatthew StoneDepartment of Computer Science &,Center for Cognitive ScienceRutgersUn ivers i ty110 Frelinghuysen Road, Piscataway NJ 08854-8019mdstone @cs.
rutgers, eduAbstractA range of research as explored the problem ofgenerating referring expressions that uniquely iden-tify a single entity from the shared context.
Butwhat about expressions that identify sets of enti-ties?
In this paper, I adapt recent semantic re-search on plural descriptions--using covers to ab-stract collective and distributive readings and us-ing sets of assignments o represent dependenciesamong references--to describe asearch problem forset-identifying expressions that largely mirrors thesearch problem for singular referring expressions.By structuring the search space only in terms ofthe words that can be added to the description, theproposal defuses potential combinatorial explosionsthat might otherwise arise with reference to sets.1 IntroductionNatural anguage interaction lends itself to tasks likegeneralization, abstraction, comparison, and sum-marization which call for SETS of objects to bepicked out using definite referring expressions.For example, consider the concrete function ofdescribing the elements of a figure.
In (1 b), we finda pair of elements from (1 a); imagine that some no-table relationship leads to an intention to identifyand comment on just THOSE elements.?
.
.
, .
"I(1)a .
.
.
.
.
.
.
.
.
.
.?
.
.
.The intersecting dotted segments.116As (lc) records, these are the intersecting dottedsegments of (1 a), and can be designated as such.Or again, we find distinguished in (2b) five ele-ments of (2a), which might hold some independentinterest.
So we can and should identify these ele-ments, and (2c), the squares clustered at the lowerleft, will do the trick.
(2) abc\[\] \[\]0  0 \[\] O0\ [30  \[\] 00 \ [  3\[\] \[\] \[\] \[\]\[\]\[\] \[\]\[\] \[\]The squares clustered at the lower left.Concrete problems like those of (1) and (2) castinto relief the potential difficulty of identifying sets.The world provides sets with embarrassing abun-dance, yet we are able to call attention to any of thesesets at will, and to describe it at will both by prop-erties its members .have on  their .own---,the mem-bers individually may be square or dotted--and byproperties or relationships that the set enjoys as acollection--the set as a whole may be intersecting,or clustered in a certain region?Reference to sets is more general than picturesqueexamples like (1) and (2) might suggest?
Linguisticresearch suggests that covert reference to SETS OFSALIENT ALTERNATIVES plays a pervasive and fun-damental role in mediating between the meanings ofsentences and their interpretations in context.
Con-sider (3), for'example.
(3) abCOnly \[Mary\] F passed.Well, \[I\]F passed.Another student passed.According to (Rooth, 1992), the inte!rpretation of fo-cusingadverbs such as ~anly~relates,an.
'instance ~-toa set of alternatives C: the adverb describes a prop-erty that makes ~ unique in C. Thus in (3a) Mary isunique among some set C of individuals in passing.Likewise, scalar implicature, as illustrated in (3b),depends on distinguishing one claim--my passing,say--as the strongest claim that can be supportedamong some salient set of claims C--students in theclass passing, for (3b).
Rooth formalizes the focusmarking in these xamples as contributing a presup-position that helps to identify these alternative sets.More generally, a range of lexical items, includingthe morpheme other from (3c), carry discourse pre-suppositions that relate their referent o salient al-ternatives from the context--like the students weaccommodate in understanding (3c) (Bierner andWebber, 2000).Overtly, all the examples in (3) involve singu-lar noun phrases that specify isolated individuals.Nevertheless, representing and reasoning about ref-erence to sets is required for faithful account of howsuch sentences are interpreted, and thus how suchsentences can achieve the communicative goals of asystem for natural anguage generation (NLG).So how are expressions that refer to sets to be con-structed?
In this paper, I will argue that identifyingsets of individuals is not as forbidding as it may atfirst appear.
The extensive literature in NLG on sin-gular references starting with (Dale and Haddock,1991) tells us what to do.
We must use the INTER-PRETATION o f  provisional descriptions in contextto assemble a combination of descriptive lementswhich identifies the intended target.
Take (2), wherewe used the descriptive lements quare, clusteredsomewhere, and at thel lower :left:.
Tracking the in-cremental interpretation of these descriptors shouldlead to a sequence like that in (4).\[\] \[\]O0(4) ab The squares.\[\]\[\] \[\] \[\]\[\] \[\] \[\] \[\]117Cd\[\]O0\[\]\[\] \[\] \[\]O 0 \[\]?
\[\]?
k ?The squares clustered somewhere.\[\]\[\] \[\]e \[\] \[\]f The squares clustered at the lower left.This high-level story leaves us on familiar ground.The project of this paper is to realize this high-level story in formal terms.
I begin in Section 2 byframing the problem of singular noun phrase gener-ation more precisely.
The sequel extends this frame-work with a formal account of plural interpreta-tion and generation.
Section 3 introduces the twoindependently-motivated observations from formalsemantics which form the basis of this account.The ASSIGNMENT-SET semantics for referenceto plurals provides away to evoke and describecollections with variables that range only overindividuals (van den Berg, 1993; van den Berg,1996).
By using the assignment-set semantics,we can dispense with explicit collections in for-malizing an interpretation such as that schema-tized in (4c); we represent only the individualsinvolved.The COVER semantics for predications aboutpluralities provides a simple scheme of im-plicit quantification to abstract collective anddistributive predication (Gill?n, 1987; Verkuyland van der Does, 1991; Schwarzschild, 1994;Schwarzschild;.
1996).
:T.he cover semantics of-fers an elegant, and convenient, definition ofwhat it means for the set distinguished in(4c) tobe characterized asthe squares clustered some-where.Section 4 presents the computational model of plu-ral descriptions based on these principles.
In keep-ing with (4), this model simply and naturally extends," the models used to generate-singular references.
Inparticular, as (4) suggests, this model continues tostructure the search space for generation in terms ofthe words that can be added to the description and toarrive at corresponding interpretations by constraintsatisfaction over individuals.
In so doing, the pro-posal defuses the potential combinatorial explosionsthat might otherwise arise with reference to sets.?
, .
.
:2 BackgroundAt a high level, we can characterize generation pro-cedures like that of (Dale and Haddock, 1991 ) or itssuccessors a  manipulating linguistic data structuresthat link together FORMS, MEANINGS and INTER-PRETATIONS.
(5) illustrates uch a data structure,as it might be entertained in identifying a uniquelyidentifiable element of (2a).
(5) a F: /the square in the upper left/b M: {square(x), in(x, r), upper-left(r) }g3x.
.
.
.
.
.
.
.
.
rc I:(5a) proposes the form the square in the upper left--a syntactic structure represented to some degree ofabstraction.
(5b) records the semantics for the de-scription as a set of constraints--each constraint isan atomic formula with free variables that speci-fies the requirement that some lexical meaning con-tributes to the description; the variables are place-holders for the discourse ntities that the descrip-tion identifies.
And (5c) anticipates how the hearercould process the description, by outlining the pos-sible candidate referents for it; in (5c) we find theelement of the figure which x must represent, alongwith the corresponding (vaguely delimited) region rin the upper left where x is located.Any data structure linking form, meaning andinterpretation combines two kinds of information.Form and meaning are related by_the generator'smodel of linguistic resources.
In the concrete case,this model is a grammar; LEXICAL semantics de-termines the separate constraints hat can go into adescription and COMPOSITIONAL semantics deter-mines how these constraints can share variables andso describe common objects.
Meaning and interpre-tation, meanwhile, are related by a model of the con-text in which the form is to be uttered.
In interpretingreferring expressions,we appeal "to a CONTEXT SETenumerating the salient individuals at some point inthe discourse and a COMMON GROUND listing the118instances of constraints hat can be presumed to bemutually known at that point.
To determine the in-terpretation from the meaning, we must instantiatethe free variables to individuals in the context setand match the instantiated constraints against the el-ements:~of the1 common.ground., In, practice, con-straint satisfaction heuristics (Mackworth, 1987) arerequired to accomplish the process of instantiationand matching with any hope of efficiency.With an understanding of what data structuressuch as (5) represent and how to carry out reasoningover them, solving descriptive problems becomes amatter of search.
In practice, this search is typi-cally managed quite simply: for example, (Dale andHaddock, 1991) select ransitions among states ac-cording to a greedy heuristic, while (Dale and Re-iter, 1995) select alternatives by exploring differ-ent kinds of constraints in a fixed order.
In anycase, the search starts with a structure defining anempty description, which means nothing and couldrefer to anything.
Structures are then extended andconsidered in turn until the interpretation satisfiesthe system's goals (for example because it allowsonly a specified value, the intended referent, for aparticular variable).
The process of extension sim-ply consists of deriving a more elaborate form witha richer meaning using the generator's linguisticresources--it is useful to think of obtaining this bycarrying out a step of derivation in a lexicalizedgrammar (Stone and Doran, 1997)--and then con-sulting the model of the context to obtain an updatedinterpretation.To extend these data structures to sets, we cannotintroduce set variables and maintain the alternativecandidate set values those variables might ultimatelyrefer to--for one thing, there are just too many setsto represent an interpretation this way.3 An intuit ion and some semanticsHere.
is a suggestion: REINTERPRET_data.structureslike (5) as compatible with descriptions of collec-tions as well as singletons.
This should have someintuitive appeal.
After all, we always thought hata form like (5a) abstracted out details of syntax andmorphology; there's no difficulty then in seeing itas short for a family of singular and plural expres-sions like/the square(s) in the upper left~.
Similarly,the interpretation is already defined in terms of a setofinstances that satisfy the description; why not usethis as THE set that the description refers to?The problem is the meaning.
We have to allowfor both DISTRIBUTIVE predicates, which character- team, so both the collective and distributive readingsize collections based on properties of the individuals are false.involved, and COLLECTIVE predicates, which de- We will follow Schwarzschild's proposal mostscribe collections that jointly participate in some re- closely.
Schwarzschild argues that we establish thatlation.
If we have collective predicates, how can we a linguistic predicate applies to a plural argumentget away without explicit set variables which cou ld .
,  ~ by reeoyeringa.salient~cover of:~that:~gumentf~r0m ~,-take on any set as a possible value?
the context.
A cover here means a set of plurali-Van den Berg's treatmen t of dependent plurals indynamic semantics provides the first half of the an-swer(van den Berg, 1993; van den Berg, 1996).
Vanden Berg's starting observation is that discourse canset up and maintain dependencies between the indi-viduals in one set and the individuals in another.
(6) a Every man loves a woman.b They prove this by giving them flowers.In (6) for example, the first sentence introduces a setof men and a set of women, where each man in theone set is related to a woman in the other set (bylove); the second sentence builds on that relation-ship, indicating another connection (of giving) be-tween each man and the corresponding woman.For van den Berg, data like (6) show that dis-courses describe sets of CASES generally.
Each caseinvolves a sequence of entities that stand in vari-ous relationships toone another, sometimes directlyas individuals and sometimes indirectly throughtheir membership in larger, related groups.
Somesentences in discourse aggregate cases together, toexpress relationships that hold collectively amonggroups.
Other sentences, like (6), zoom in on in-dividual cases, and describe distributive propertieswhich hold of isolated individuals.
In zooming in oncases, rather than individuals, these sentences main-tain and extend the dependencies and other relation-ships that define a case.The second half of the answer derives fromthe observation, made in (Gillon, 1987; Verkuyland van der Does, 1991; Schwarzschild, 1994;Schwarzschi ld, 1996),,-that :the collective and dis-tributive readings of plurals represent only the ex-tremes in a larger space of readings.
Take (7):(7) Rogers, Hammerstein and Hart wrotemusicals.This sentence is true, but only in virtue of the jointaction of Rogers and Hammerstein writing somemusicals and thezioint--ac~fion..of.Rogers andHart in , .writing other musicals.
As a matter of fact, the threenever wrote a musical individually or as a singleties whose union or sum is the overall plural argu-ment.
Given the cover, the overall plural predicationholds just in case the basic property denoted by thepredicate is true (collectively)of each of the sets (orCELLS) in the cover.
For example, the sets consist-ing of Rogers and Hammerstein and of Rogers andHart form the salient cover of Roger, Hammersteinand Hart in (7); the example is true because ach ofthe cells in this cover directly enjoys the property ofhaving written a musical.Schwarzschild's covering proposal and van denBerg's assignment-set proposal are perfectly com-patible.
Following van den Berg, we interpret dis-courses in terms of sets of cases, where these casesspell out dependencies among related individuals.But now, following Schwarzschild, we zoom in onthose cases flexibly, by covering them.
Sometimeswe consider all the cases together and describe rela-tionships among aggregated groups; sometimes weconsider cases separately and describe individualsdistributively; and sometimes, as in (7), we take anintermediate step and cluster the cases into somesalient subgroups.Now let us return to (4c), repeated as (8a), andconsider informally what this proposal amounts to:\[\]~ \ [ \ ]\[\]\[\] \[\] \[\](8) a \[\] \[\] \[\] \[\]b The squares clustered.somewhere.The assignment-set cover semantics fits the descrip-tion to the figure this way.
As in (5c), the figureschematizes a set of cases; here each case involvestwo entities, a square and the location of the clusterto which the square belongs.
The description appliesbecause we can look at the individual cases to seethat we have squares, and we can group the cases to-gether by.
regioninto a cover so,that ineach cell thesquares are indeed clustered at the location.At this point, some formalism is required to pro-119ceed with the development.
We'll use assignmentvariables like g to range over cases; gx is the valueof g for variable x.t Interpretations are defined interms of sets of cases, naturally; we'll use F to rangeover a set of cases and write F(x) for {gx:g E F}.Most constraints will involve several variables; wecan abstract this in terms of a sequence Of {,~iable~'x ....and the tuple of collections that those variables takeon across a set of cases, F(x).
(We can define thisexplicitly as F(x) = G where Gxi = F(xi).
)Now, consider an atomic constraint F(x).
In gen-eral, F(x) will have multiple known instances, andeach instance will relate collections of individualsto one another.
Thus the common ground will asso-ciate F(x) with a set of tuples of sets, which we writeas ~F(x)~.
An interpretation F will fit one of thoseinstances directly iff F(x) E ~F(x)~.
In this case wesay F(x) DESCRmES F.For example, consider the constraintclustered(x,r).
Let us say a set X is clusteredaround R if R is a singleton spatial ocation {r} andX is a group of sufficient cardinality and densitylocated together at r. Then we might find threetuples of \[\[clustered(x, r)\]\] in the explicit depictionof (8).
If we define Fl as in (9) then clustered(x,r)describes Fi.
(9) { (x, r) : x a square in the lower left region r}Of course, we are principally interested in theability to zoom in to particular cases, using covers.We represent a cover using a reflexive binary rela-tion that links each assignment to any assignmentin its cell.
Given such a relation C, the constraint@cP- - read  "covered by C, p"--says that p is trueon each of the cells of the cover specified by C. Wewill only consider the case where p is an atomic on-straint F(x).
(10) @cF(x )  DESCRIBES F ifffor all g E F,Then with C defined as in (12), @cclustered(x, r)describes Fi U F2 U F3.
(12) C=(F ,  xr,)u(r2xr2)u(r3xr3).Observe the close connection between this formal.jiidgment'and 'the-info,mat-disenssion' of"(8) pre-sented earlier.
We have a set of cases involving asquare and the location of the cluster to which thesquare belongs; we cover the cases together by re-gion and find that the resulting roups define a spec-ified cluster at a specified location.Schwarzschild's proposal is that the salient coverC is supplied from context.
In the case of definitereference to tuples F, we can regard the tuples in anypredicate as defining the appropriate salient coverfor plural predication; any tuples that help to iden-tify F must be prominent parts of the shared context.Meanings of referring expressions should thereforeappeal to a condition @ p which describes F iff thereis a C for which @cP describes F.Clearly, if @p describes F and @p describes F'then @p describes FU I '~.
This in turn entails thatany condition ?p describes a maximal set of casesfrom the current context; the same goes for any con-junction of conditions of this form.
We can treatthis set of cases as the interpretation f a description.In particular, consider a description L that consistsof a list of constraints @Li(x) formulated in termsof a tuple of variables x and atomic conditions onthose variables Li(x).
Assume a context set D defin-ing a domain of salient individuals, so that candidatecases to interpret L are given by I" := {a : ai E D}.The development thus far leads us to define the IN-TERPRETATION of I_,---l(L)--as:(13) I(L) := maxrcrVi :  @Li(x) describes FDrawing on our running discussion, wecan apply this definition to the descriptionF(x) describes {h E F :  C(g,h)}.Continuing from (9), define F2 and F3 in (1 ta) and(11 b) respectively.
( l l )a  {(x.r) : x a square in the center top r}b {(x,r) :x a square in the lower right r}I I adopt the notation throughout that v is a tuple and v i iscomponent i of  v, where components may be indexed equiva-.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
L .
~_ .
.
{@square(x) ,@clustered(x,r)  } and thecontext schematized by (2a).
Of course, we findI (L)  = Fi U F2 U F3.
The fully distributive covershows that the square condition is satisfied; thecover of (12) shows that the clustered conditionis satisfied.
Meanwhile, no further cases can beconsidered without adding either a circle or theunclustered square.The reader will already have recognized I(L) =lently by variables or numbers..Lower case Roman letters arefor ordinary individuals and tuples thereof; upl~er case Ronl.an FI U:F2I'3 F 3 as~the set o f  cases:that-goes'with (8a).letters are for sets of individuals and tuples thereof; upper case Thus, we have reconciled the informal picture of (4)Greek letters are for sets of tuples, with the concrete data structures of form, meaning120and interpretation that NLG demands.
For (8) wecan now read (14).
(14)a F: /the squares(s) clustered __ /b M: {(~) square(x), (~) cluster(x, r)}\] .
.
.
.
.c I:\[\]\[\] \[\]\[\] \[\]\ [ \ ]  \[\]"\[\]\[\] \[\]4 Computing referring expressionsAt this point, we have an understanding of whatkinds of representations wecan use to describe thederivation of plural referring expressions.
But westill must devise appropriate r asoning methods forthese representations.
The problem is the subject ofthis section.4.1 Collective ConstraintsThe first step is to formulate a constraint-satisfactionheuristic that accounts for cover-constraints on col-lections.
In general, constraint-satisfaction heuris-tics provide a technique for approximating the inter-pretation of a description.
The key notion is that of aCONSTRAINT NETWORK for a description L, whichdetermines a tuple C of CONSTRAINED VALUES.This tuple specifies a generous et of possible val-ues Ci for each variable xi in x; it is obtained by con-servatively eliminating values that are determined tobe inconsistent with L according to heuristic tests.For example, the usual arc-consistency heuristic fora constraint over individuals K(x) is to eliminate avalue v for variable z unless some g E ~K(x)~ hasg: -- v and gk E Ck for all k.We will adapt his to the case of cover constraintswith the following test of consistency.
An individ-ual value v for a variable xi maintains its member-ship in C i in the.presence~oLa,collective,constraint?Lj(x) whenever v belongs to a SUBSET Gi of Ciwhich participates directly in the relation denoted byLj(x) with sets of possible values for the other vari-ables.
This criterion is spelled out formally in thedefinition in (15).
(15) Value v for variable xi isCOVER-CONSISTENT (C-CONSISTENT)with constraint (~)Lj(x)~under, constrainedvalues C if there is an G E ~Lj(x)\]\] withv E Gi and Gt.
C Ck for all k.121All values of xiwith constraint QLj(x)  may be deleted from Ci,as they will not satisfy the constraint.
Doing somakes Ci ARC c-consistent with respect to (~)Lj(x),and provides the basic step in a network-based arc-.consistency .constraint-satisfier.
As with.
ordinaryconstraint satisfaction, we arrive at a final tuple ofvalues for x by starting with an initial tuple Co ofvalues---often an assignment Dx giving each vari-able D--and a queue of arcs linking each Ci with anyQLj (x)  that constrains it.
Until the queue is empty,we select an arc and enforce the arc c-consistencyby pruning Ci; if Ci changes we requeue all arcsthat might no longer be arc c-consistent after thedeletion.
I will refer to the final tuple of values asP(L; Co), for the PLURAL constraint etwork on de-scription L and domains Co.The properties of this algorithm are in line withordinary constraint satisfaction.
The output willnot provide all and only solutions to the constraintswithout further assumptions about the constraints.However, we can show, as usual, that the networkconverges on consistent values for variables in theordinary linguistic ase where the constraint graphis a tree--a semantic property, that there are no dis-joint sets of constraints that overlap on the sametwo variables, that follows under plausible assump-tions about he derivation of semantics from a tree-structured syntax.
We can show further that thesevalues, together with the tuples in \[\[Li(x)~ that coverthese values, determine precisely the collection ofassignments I(L).4.2 Search for Referring ExpressionsThe second step is to formalize the task of construct-ing a description as a state-space s arch task.
Sup-pressing details of form for exposition, each state isa tuple E as set out in (16).
(16) E---- (L,r ,R,x,P(L;R,  Dx),P(L;Dr,Dx))The state represents:(17)a a description L;b a tuple r of distinguished free variables inthe description for which we must identifyspecific intended values;c a tuple R of sets describing the value Riwhich we intend for the corresponding-var iable r i ;  .
.
.
.
.
?
-d the remaining free variables of thedescription x;in Cithat are-not c-consistent_e a constraint network P(L; R, Dx) describingthe values for all the free variables in thedescription, on the assumption that thedistinguished variables take on the values weintend; andf a constraint network p(L; Dr, Dx)describing the values for all the freevariables in the description, on theassumption that the distinguished variablesmay, like other variables, take on any valuesfrom the context set.The distinction between the variables whose in-tended reference is fixed and those for which it is de-rived as a byproduct of the search process is due toHoracek (Horacek, 1995; Horacek, 1996); the dis-tinction derives increased importance when relatingone collection to another as the choice of collectionsneed not give rise to explicit branching in search.The initial state involves an empty description andso has the form given in (18).
(18) Y~= (?,r,R, 0 ,P (Q;R) ,P (Q;Dr) )A state such as (16) represents a final state that suc-cessfully resolves the generation task when eachvariable x from r and x is associated with the sameset Cx in both P(L;R,Dx) and P(L;Dr,Dx).
Thissimply means that the hearer's interpretation of thereferring expression matches the speaker's intendedinterpretation.At any state Z, the grammar defines a set of con-straints of the form (~) L(rx; y) that could potentiallybe added to the description to obtain L~--L is somedomain relation, r and x name the old variablesfrom L while y names fresh variables.
Of course,we want to restrict our attention to constraints thatare compatible with our intended interpretation.
Toachieve this restriction, we begin by computing thenew constraint network C ~ = P(L~;R;Dxy).
Wecheck, whenever R assigns avalue to x, that Rx C C' x.If this test admits .the_new constraint, he newstateobtained from state E is computed as in (19).
(19) (L', r, R, xy, P(L'; R, Dxy), P(L'; Dr, Dxy)}4.3 An ExampleI return to (1) to provide an illustration of the finalscheme; the goal is to identify the segments in (20f),R, from among those in (20a).
I use figures and ref-erences to figures, .in .place-of=.eonstraint, networks;the description uses the variable r. The states pro-ceed, perhaps, thus:(20)abC?
?
?
?
?
?
?
(o, r,g, l), (20a), (20f))({ Qsegment(r) .
;r,R, 0, (20/1), (20ff))" ?
, .
* ~ % ' .?
?
?
?
??
?
?
?de ({Qsegment(r), Qintersecting(r)},r,R, (), (20d), (20f))?
, .
.
.?
?
?g ({Qsegment(r),Qintersecting(r),Qdotted(r) }, r, R, {), (20f), (20f) }5 Closing thoughtsDescriptions of sets obviously have much in com-mon with expressions that describe a single entityfrom the shared context?
In particular, adopting thestandard view of NLG as goal-directed activity (Ap-pelt, 1985; Dale, 1992; Moore, 1994; Moore andParis, 1993), singular and plural descriptions agreeboth in the kinds of intentions that they can achieveand the stages of generation at which they can be for-mulated.
We cannot expect asingle process to be re-sponsible for set descriptions across all intentions orstages of NLG.For example, as with a singular description, adescription of a set may appeal to properties thatplay a role in the argument the speaker is trying tomake, and may therefore address goals above andbeyond simple identification of discourse ntities.
(Se e .
(Donellan, ..!
966;: Kx~0nfeld, 1986) on the dis- .-tinction.)
(Green et al, 1998a; Green et al, 1998b)show how such descriptions may be represented andformulated in NLG at a high-level process of con-tent or rhetorical planning.
At the same time, plu-rals and singulars are alike in offering resources forreference--such aspronouns, one-anaphora or ag-gregated expressions--that bypass explicit descrip-tion altogether?
The use of these resources may be.... ~quite-closety dependent onthe  surface 'form beinggenerated and so could reflect a relatively late deci-sion in the generation process (Dale and Haddock,1221991; Reiter, 1994; Dalianis, 1996).These complexities notwithstanding, we can ex-pect many descriptions of sets, like descriptionsof individuals, to be formulated from scratch toachieve purely referential goals during the SEN-TENCE PLANNING.
plaase: of  .NLG, io:.he:tween ~gon=.tent planning and surface realization (Rainbow andKorelsky, 1992; Reiter, 1994).
I have shown thatusing covers to abstract collective and distributivereadings--and using sets of assignments o repre-sent plural references--yields a search space forthis problem which largely mirrors that for singu-lars, and which avoids computation and search oversets of collections.
Although sets proliferate xplo-sively, it is no surprise that the search space for plu-rals set up by (19) is, like that for singulars, ulti-mately defined by the sequences of elements thatmake up descriptions.
NLG involves search to usewords effectively--choices of words should be theonly decisions areferring expression generation sys-tem has to make.AcknowledgmentsThis paper benefits from the comments of anonymousreferees and from discussions with Kees van Deemter,Roger Schwarzschild, Bonnie Webber, the Edinburghgeneration group, and the participants of the GNOMEworkshop where a preliminary version was presented; itwas supported by a postdoctoral fellowship from RuCCS.ReferencesDouglas Appelt.
1985.
Planning English Sentences.Cambridge University Press, Cambridge England.Gann Bierner and Bonnie Webber.
2000.
Inferencethrough alternative-set semantics.
Journal of Lan-guage and Computation.Robert Dale and Nicholas Haddock.
1991.
Content de-termination i the generation ofreferring expressions.Computational Intelligence, 7(4): 252-265.Robert Dale and Ehud Reiter.
1995.
Computational in-terpretations of the Gricean maxims in the generationof referring expressions.
Cognitive Science, 18:233-263.Robert Dale.
1992.
Generating Referring E~pressions:Constructing Descriptions in a Domain of Objects andProcesses.
MIT Press, Cambridge MA.Hercules Dalianis.
1996.
Concise Natural LanguageGeneration .from Formal Specifications.
Ph.D. thesis,Royal Institute of Technology.
Stockholm.K.
Donellan.
1966.
Reference and definite description.Philosophical Review, 75:281-304.Brendan-Gillon.
1987.
The readings of plural nounphrases in english.
Linguistics and Philosophy,10(2): 199-299.123Nancy Green, Giuseppe Carenini, Stephan Kerpedjiev,Steven Roth, and Johanna Moore.
1998a.
A media-independent content language for integrated text andgraphics generation.
In CVIR '98- Workshop on Con-tent Visualization and lntermedia Representations.Nancy Green, Giuseppe Carenini, and Johanna Moore....... ~ v~ t998b~ k,p~ineipted~representafiort .
o  at ributive de-scriptions for generating integrated text and informa-tion graphics presentations.
In Proceedings of In-ternational Natural Language Generation Workshop,pages 18-27.Helmut Horacek.
1995.
More on generating referring ex-pressions.
In Proceedings of the Fifth European Work-shop on Natural Language Generation, pages 43-58,Leiden.Helmut Horacek.
1996.
A new algorithm for generatingreferring expressions.
In ECAI 8, pages 577-581.Amichai Kronfeld.
1986.
Donellan's distinction and acomputational model of reference.
In Proceedings ofACL, pages 186.--191.Alan Mackworth.
1987.
Constraint Satisfaction.
InS.C.
Shapiro, editor, Encyclopedia of Artificial Intel-ligence, pages 205-211.
John Wiley and Sons.Johanna D. Moore and C6cile L. Paris.
1993.
Plan-ning text for advisory dialogues: capturing intentionaland rhetorical information.
Computational Linguis-tics, 19(4):651-695.Johanna Moore.
1994.
Participating in Explanatory Di-alogues.
MIT Press, Cambridge MA.Owen Rainbow and Tanya Korelsky.
1992.
Applied textgeneration.
InANLP, pages 40-47.Ehud Reiter.
1994.
Has a consensus NL generationarchitecture appeared, and is it psycholinguisticallyplausible?
In Seventh International Workshop on Nat-ural Language Generation, pages 163-170, June.Mats Rooth.
1992.
A theory of focus interpretation.
Nat-ural Language Semantics, 1( 1 ): 75- I 16.Roger Schwarzschild.
1994.
Plurals, presuppositions,and the sources of distributivity.
Natural LanguageSemantics.
2:201-248.Roger Schwarzschild.
1996.
Pluralities.
Kluwer, Dor-drecht.Matthew Stone and Christine Doran.
1997.
Sentenceplanning as description using tree-adjoining grammar.
:: In ProceedingsofACL, pages_198-205.M.
H. van den Berg.
1993.
Full dynamic plural logic.In K. Bimb6 and A. Mfit6, editors, Proceedings of theFourth Symposium on Logic and Language, Budapest.M.
H. van den Berg.
1996.
Generalized dynamic quanti-tiers.
In J. van der Does and J. van Eijk, editors, Quan-tifiers, Logic and Language.
CSLI.Henk Verkuyl and Jaap van der Does.
1991.
The seman-tics of plural noun phrases.
Preprint, ITLI.
Amster-dam.
