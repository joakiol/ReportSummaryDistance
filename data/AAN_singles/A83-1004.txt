A Robust Portable Natura l  Language Data  Base Inter faceJerrold M. GinspargBell LaboratoriesMurray Hill, New Jersey 07974A BSTRA CTThis paper describes a NL data base interfacewhich consists oF two parts: a Natural Language Pro-cessor (NLP) and a data base application program(DBAP).
The NLP is a general pur!~se language pro-cessor which builds a formal representation of themeaning of the English utterances it is given.
TheDBAP is an algorithm with builds a query in a aug-mented relational algebra from the output of the NLP.This approach yields an interface which is bothextremely robust and portable.1.
IntroductionThis paper describes an extremely robust and portable NL database interface which consists of two parts: a Natural LanguageProcessor (NLP) and a data base application program (DBAP).The NLP is a general purpose language processor which builds aformal representation of the meaning of the English utterances itis given.
The DBAP is an algorithm with builds a query in anaugmented relational algebra from the output of the NLP.The system is portable, or data base independent, because all thatis needed to set up a new data base interface are definitions forconcepts the NLP doesn't have, plus what I will call the +database connection", i.e,, the connection between the relations in thedata base and the NLP's concepts.
Demonstrating the portabilityand the robustness gained from using a general purpose NLP arethe main subjects of this paper Discussion of the NLP will belimited to its interaction with the DBAP and the data base con-nection, which by design, is minimal.
\[Ginsparg 5\] contains adescription of the NLP parsing algorithm.2.
NLP overviewThe formal language the NLP uses to represent meaning is a vari-ant of semantic nets \[Quillian 8\].
For example, the utterances"The color of the house is green,""The house's color is green.
""Green ,~ the color that the house is.
"would all be ~ransformed to:gl Isa: "coloredTense: presentColored: g2Color: g3g2 lsa: "houseDefinite: theg3 Isa: "colorValue: greenwhere "colored", "'color" and "'house" are system primitivescalled concepts.
Each concept is an extended case frame,\[Fillmore 2\].
The meaning of each concept to the system isimplicit in its relation to the other system concepts and the waythe system manipulates it.Each concept has case preferences associated with =IS cases.
Forexample, the case preference of color is "color and the case prefer-ence of coloredis "physical-object.The case preferences induce a network among the concepts.
Forexample, "color is connected to "physical-object via the path:\['physical-object olored'colored color "color\].
In addition.
"coloris connected to "writing,implement, a refinement ot" "physical-object, by a path whose meaning is that the writing implementwrites with that color.
This network is used by the NLP to deter-mine the meaning of many modifications, For example, "red pen-cil" is either a pencil which is red or a pencil that writes red,depending on which path is chosen.
In the absence of contextualinformation, the NLP chooses the shortest path.In normal usage, case preferences are often broken.
The meaningof the broken preference involves coercing the offending conceptto another one via a path in the network.
Examples are:"Turn on the soup.
""Turn on the burner that has soup on it.
""My car will drink beer.
""The passengers in my car will drink beer"3.
The Data Base ConnectionConsider the data base given by the following scheme:SuppIiers(sno,sname,scity)Projects(jno,jname,jcity )Parts(pno,pname,color.cosl,weight)Spj( sno,pno,jno.quantity ,m, y )Suppliers and proiects have a number, )~ame and c~tV Parts ha'.,:a number, name, color, cost and weight Supplier wl(~ ,,unphe,, aquanntYof parts pno to prolect /no in month ,nor yearThe data base connection has four parts:I.
Connecting each relation to the appropriate concept:Suppliers -> "supplierPro)ects - :> "projectParts-> "partSpj-> "supply252.
Connecting each attribute to the appropriate concept:sno,pnojno -> "indexing-numbersname,pname,jname-> "namejclty,scity - > "citym-> "monthy -> "yearCOSt-> "COStweight -> "weightquantity ->  "quantity3.
Capturing the information implicit in each relation:Parts(pno,pname,color,cost,weight )"indexnumberpindexnumber -> pnonumbered-> Parts"namedname-> pnamenamed-> Parts"coloredcolor - > colorco lored-> Parts"COSTSCOSt - > costcostobj ->  Parts"weighswe ight -> weightweightobj -> PartsProjects(jno.jnamedcity)"indexnumberpindexnumber -> jnonumbered-> Projects"namedname -> jnamenamed-> Projects"locatedlocation ->  jettylocated -> ProlectsSuppliers(sno,sname,scity)"indexnumberpindexnumber - > snonumbered-> Suppliers"namedname - > snamenamed-> Suppliers"locatedlocation -> scttylocated -> Suppliers%pl O~no.pno.lno.quant Hv.m.y )"supplysupplier -> '.
;nosupplied -> pnosuppliee -> mo(cardinality-of pno) -> quantityume-> m.y"spendspender - > 1nospendfor -> pnoamount (" cost quantity)The amoum case of "spend maps to a computat ion rather than a,~mgle attr ibute It' all the attributes in the computahon are notpresent ,n the relation being defined, the query building programioms ,n the necessary extra relations.
So the definition of "spend~mrks equally well irl tile example scheme as well as in a scheme26leg., Spj(sno,pno,jno,cost,quantity)) in which the cost ol a partdepended on the supplier4.
Creating pseudo relationsPseudo Cities jcity,scityThis creates a pseudo relation, Cities(cname), so that the querybuilding algorithm can treat all attributes as if  they belong to arelation.
The query produced by the system will refer to theCities relation.
A postprocessor is used to remove references topseudo relations from the final query.
Pseudo relations areimportant because they ensure uniform handling of attributes.With the pseudo Cities relation, questions like "Who suppliesevery city?
= and "List the cities."
can be treated identically to"Who supplies every project'?"
and "List the suppliers.
"The remainder of the data base connection is a set of switcheswhich provide information on how to print out the relations.whether all proper nouns have been defined or are to be inferred.whether relations are multivalued, etc.
The switch settings andthe four components above constitute the entire data base con-nection, Nothing else iS needed.The network of concepts in the NLP should only be augmentedfor a particular data base; never changed.
Yet different data baseschemes will require different representations for the same word.For example, depending on the data base scheme, it could becorrect to represent "box" as either,gl \[sa: "partConditions: "named(gl,box)g2 Isa: "containerConditions: "named(g2.box)g3 \[sa: "boxThe solution is to define each word to map to the lowest possibleconcept.
When a concept is encountered that has a data base rela-tion associated with )t. there is no problem.
If there )s no relauonassociated with a concept, the NLp searchs For a concept that doescorrespond to a relation and is also a generalization ot" the conceptin question.
I f  one is found, it is used with an appropriate condi-lion, usually "tilled or "named.
So "box" has a definition whichmaps to "box.
In the data base connect ion given above.
"box"would be instantiated as a "=part" since " 'box"  is a ref inement of"'part" and no relation maps to "box,"4.
Using the ConnectionThe information in the data base connection ts primarily used mbuilding the query (section .~).
But It IS ~llso used Io augment theknowledge base of Ihe NLPThe data base connection is used to overwrite the NLP's ca~epreferences.
Since Iocawd-> Supphers ()r Projects.
the preferenceot" localed ts spec)fied to "suppliers or "protects.
This enables theNLP to interpret the first noun group )n "Do ,m', suppliers thatsupply widgets located nl london also supply ,~cre',vs )" as "'suppliersin London that supply widgets" rather than "supphers that ,;upphLondon wldgets" This )s in contrast to \[Gawron 31 which u'..;es ,iseparate "disambiguator" phase to ehmlnale parses that do 11()imake sense =n the conceptual scheme of the dala base.Tile additional preference informamm supplied bv the data baseconnection is used to induce coercions (section 2.)
thai would rlotbe made in the absence of the connection (~r under ,mother database scheme.
"Who supplies London" does not break any realworld preferences, but does break one of the preferences inducedby this data base scheme, namely that Suppliee is a "project.
Lon-don.
a "city, is coerced to "project via the path \[*project located*located /ocanon ?cityl and the question is understood to mean"Who supplies projects which are in London.
"As mentioned in Section 2., the NLP determines the meanin~ ofmany modifications by searching for connections in a semanticnet.
The data base connection is used to augment and highlightthe existing network of the NLP.
I f  the user says, "What colorsdo parts come in?
', the NLP can infer that the meaning of"come-in" intended by the user is "colored since the only paththrough the net between "color and "part derived from the casepreferences induced by the data base connection is\['part colored "colored color "color\]Similarly, when given the noun group "London suppliers" themeaning is determined by tracing the shortest path through thehighlighted net,\['supplier located'located Iocanon "city\]The longer path connecting "supplier and "city,\['supplier supplier "supply suppliee *project located "location loca-tion *city\]which means "the suppliers that supply to london projects" isfound when the NLP rejects the first meaning because of context,If  the user says "What are the locations of the London suppliers"the system assumes the second meaning since the first (in thedomain of this data base scheme) leads to a tautological reading.The NLP is able to infer that "The locations of the supplierslocated in London" is tautological while "The locations of the sup-pliers located in England" is not, because the data base connectionhas specified "located to be a single valued concept with its Ioca-rton case typed to "city.
I f  the system were asked for the locationsof suppliers in England, and it knew England was a country, thequestion would be interpreted as "the cities of the suppliers thatare located in cities located in England."5.
A trtee of the query building algorithm.The query budding algorithm is illustrated by tracmg its operationon the question, "Does blake supply any prolects in london'?
"The NLP's meaning representation I'or this question ts shownbelow.gO Isa: "show g5 Isa: "name g9 Isa: "namedValue: blake Tense: present Tense: presentNamed: g3 Toshow: g l gO Isa: "project Name: g5Element-of: g4gl \[sa: "set Conditions: glO glO Isa: "tocated Element: ?2- Tense: presentSubset-of': g4 g7 lsa: city Located: gbg2 Isa: "protect Conditions: gll Location: g7Conditions: g8 g8 Isa: "supply gl \[ Isa: "namedTense: Present Tense: presentg3 Isa: %upplier Suppler: g3 Named: g7Conditions: g9 Suppliee: g2 Name: g12g4 Isu: "+,elSubsets: g\] g12 Isa: *nameElement: g6 Value: londonThe NLP treats most true-l'aise questions with indefinites asrequests for the data which would make the statement true.
Thequestion's meaning is "to show the subset of london proiects thatare supplied by Blake.
"The query building algorithm builds up the query recursivelyGiven an instantiated concept with cases, =t expands the contentsof each case and links the results together with the relationcorresponding to the concept.
Given an instantiated concept withconditions, it expands each condition.
For the example, we have.1> Expand gl2> Expand g2, the Element of gl3> Expand gg, the Condition of g2.4> Expand g3, the Supplier case of gg.5 Expand g9, the Condition of g3.
From the data base con-nection, a "named whose named case is a *supplier is real-ized by the Suppliers relation using the sname attribute Sowe have,4< g9 - select tram Suppliers where sname -- blake3< From the data base connection, a "supply is realized by theSpj relation.
This results in,gga -- project\]no/i'om.joinSpj to g92< g8 -- joingga toProjectsg8 is the projects supplied by Blake.2> Expand 84, the set gl is a subset of, by expanding its ele-ment.
g63> Expand glO.
the Condition of gb4 Expand g7, the location case of glO yieldingg l l  -- select #am Cities wherecname - london3< A "located with a "project in the Iocotedcase ~s realized bythe Projects relation using the \]city attribute.
So we have.glOa -- join Projects Io gl I where\]city = cnameglOb - proiect \]no /'romglOa2< glO - \]oinglOb toProjectsg\[0 is the projects in London.l < Intersect the expansions of g2 and g4 and project the prolectnames.gl3 = pro/eel\]name lrom imersectton g 8 glOThe entire query is,g9 = select/romSuppliers where sname= blakeg8a -- /~'oiecr jno #om ioin Spj to g9g8 = loin gga to Projectsgl0 = select #am Projects where icily = londong 13 -- prelect iname lrom mter'~e('tlo~t g8 g I 0where the: extra loin resulting f'rom the pseudo (:h=e~ relation ha',been rernoved by the post processor (section 3 )Entirely as a side effe,'t of the way the query rs generated, the -,,,,,-tern can easily correct any l'alse assumptions made by the u~,,2r\[Kaplan 71.
For example, if there were no projects in London.
gil lwould be empty and system would respond, generating Irom theinstantiated concept glO li.e., the names used in query correspondto the names used in the knowledge representatmnL "There arcno suppliers located in London."
No additional "'.=oiatedpresupposition" mechanism is requ+red.27The remainder of this section discusses several aspects o?
thequery building process that the trace does not show.Negations are handled by introducing a set difference when neces-sary If the example query were "Does Blake supply any projectsthat aren't in London?
", the expansion of g7 would have been.Expand g7.
the location case of glO yieldingg i la  - select \[romCities wherecname -- londongl 1 - difference of  Cities andgl  laConjunctions are handled by introducing an an intersection orunion.
I f  the example query were "Does Blake supply any pro-jects in London or Paris'?
', the /ocanon case of g10 would have.been the conjunction 813.g13 isa "conjunctionType: orConjoins: g7 g14g14 \[sa: "cityConditions: g l5g15 lsa: "namedNamed: g15Name: g l6glb Isa: "nameValue: parisThe result of expanding gl3 would be,g l l  -- ~elect l~'omCities wherecname = londong15 = ~elect #'omCities wherecname -- parisgl3 = Umonotg l l  andg l5\[n general, "or" becomes a union and "and" becomes an intersec-tion.
However, if an "and" conjunction is in a single valued case(information obtained from the data base connection), a union isused instead.
Thus "Who supplies london and paris?"
is inter-preted as "Who supplies both London and Paris'?"
and "Who is inLondon and Pans?"
is interpreted as "Who is in London and who~s m Paris?"
)n the example data base scheme.Quantifiers are handled by a post processing phase.
"Does blakesupply every project in London?"
is handled identically to "DoesBlake supply a prolect in London'?"
except that the expansion of"projects m London" is marked so that the post processor will becalled.
The post processor adds on a set of commands whichcheck that the set difference of London projects and London pro-lects that Blake supplies is empty.
The rasulhn 8 query is.g l = ~e/ect lrom Suppliers w/weresname = blake=_2 - ~elect lmm Projects where jcity - londong3 = /otnSpl toglg4 = tomg3 to g2=_5 = protect jno from g2gO = protect ino /tom g4g7 = {hl\]~'rem'e org5 andgOg8 = empn, g7\ ]he first tour commands are the query for "Does Blake supply allrolect m London'?".
The last tour check that no project in Lon-don is not supplied by Blake.-\ minor modification is needed to cover cases in which the querybuilding algorithm is expanding an instantiated concept that refer-cnces an instuntiated concept that is being expanded in a higherrecursmve call The following examples illustrate this.
Considerthe data base scheme below, taken from \[Ullman ql.Frequents(drinker,bar)Serves(bar,beer)Likes(drinker,beer)I f  we ask.
"Who frequents a bar that serves a beer John likes?
".we get the following query.81 =" select from Likes where drinker - john82 - project beer l'rom g 1g3 - .join Serves to 8284 =" project bar I~om g385 "" join Frequents to 84I f  we ask "Who frequents a bar that serves a beer that he likes?
"the correct query, is.gl - select \[rom Likesg2 -- project beer.drinker /?om gl83 -- join Serves to 8284 == pmiect drinker.bar /?om g3g5 - -  iota Frequents to g4In the first query "beer" was the only attribute projected from g l\[n the second, the system projected both "beer" and "drinker",because in expanding "a beer he likes" it needed to expand aninstantiated concept (the one representing "who") that was alreadybeing expanded.All of these cases interact gracefully with one another.
For exam-ple.
there is no problem in handling "Who supplies every projectthat is not supplied by blake and bowles".6.
Advantages of this approachThe system can understand anything it has a concept about.regardless of  whether the concept is attached to a relation in thedata base scheme.
In the Suppliers data base from Secuon 4.,parts had costs and weights associated with them, but not sizes.
I fa user asks "How big are each of the parts?"
and the interface hasa "size primitive (which it does), the query building process wdlattempt to find the relation which "size maps to and on fading wdlreport back to the user.
"There is no information in the data baseabout the size of the parts."
This gives the user some informatmnabout the what the data base contains, An answer like "1 don'tknow what "big" means."
would leave the user wondering whethersize information was in the data base and obtainable if only the"right" word was used.The system can interpret user statements that are not queries.
I fthe user says "A big supplier is a supplier that supplies more than3 projects" the NLP can use, the definition qn answering laterqueries.
The definition is not made on a "string" basis e.g., substt-tuting the words of one side of the definition for the otherInstead.
whenever the query building algorithm encounters anmstantiated concept that is a supplier wnh the condition "size~x.big) it builds a query substnuting the condiuon from thedefinition that it can expand as a data base query Thus the .~vs-tern can handle "big london suppliers" and answer "Which sun-pliers are big" which it couldn't if ~t were doing strlct string substi-tution.This Facility can be used to bootstrap common definitions In ,~commercial flights application, with data base scheme,Flights(fl#,carrier,from.to,departure,arrival.stops.cost )the word "nonstop" is defined to the system in English as, "A non-stop flight is a night that does not make any stops " and thensaved along wuh the rest of the system's defimt~ons.28Coercions (section 2.)
can be used solve problems that mayrequire inferences in other systems.
\[Grosz 6\] discusses thequery "Is there a doctor within 200 miles of Philadelphia" in thecontext of a scheme in which doctors are on ships and ships havedistances from cities, and asserts that a system which handles thisquery must be able to inter that if a doctor is on a ship, and theship is with 200 miles of Philadelphia, then the doctor is within200 miles of Philadelphia.
Using coercions, the query would beunderstood as "is there a ship with a doctor on it that is within200 miles of Philadelphia?
', which solves the problem immedi-ately.Since the preference information is only used to choose amongcompeting interpretations, broken preferences can still be under-stood and responded to.
The preference for the supplier case isspecified to ?supplier but if the user says "How many parts doesthe sorter project supply?"
the NLP will find the only interpreta-tion and respond "projects do not supply parts, suppliers do.
"Ambiguities inherent in attribute values are handled using thesame methods which handles words with multiple definitions.
Forexample, 1980 may be an organization number, a telephoneextension, a number, or a year.The NLP has a rudimentary (so far) expert system inferencemechanism which can easily be used by the DBAP.
One of therules it uses is " I f  x is a precondition of y and z knows y is truethen z knows x was and may still be true" One of the \['acts in theNLP knowledge base is that being married is a precondition ofbeing divorced or widowed.
I f  a user asks "Did Fred Smith usedto be married?"
in a data base with the relation Employees(name,marital-status) the system can answer correctly by using its infer-ence mechanism.
The exact method is as follows.
The data baseapplication receives the true-false question:"Fred Smith was married and Fred Smith is no longer married"Since the data base includes only current marital status informa-tion.
the only way to answer the first part of the question is toinl'cr it from some other information in the data base.
The database application sends the query to the NLP inference mechanismwhich would ordinarily attempt to answer it by matching it againstits knowledge base or by finding a theorem which would gives itsomething else to match \['or When called by the data base appli-cation, the inference mechanism simply uses its rules base todecide what it should match \['or, and then returns to the data baseprogram.
In this, example, the inference mechanism receives"Fred Smith was married" and using the precondition rule men-tioned above, returns to the data base program, "Is Fred Smithdivorced" or "is Fred Smith widowed", which can be answered bythe data base.
The DBAP can call the inference mechanismrecursively if necessary.7.
Implementation Status and DetailsThe DBAP ~s fully implemented and debugged.
The NLP is~mplemented and sail growing.
Both are implemented in FranzLisp.
a dialect of LISP Language processing and query genera-i~on are performed m virtually real time (average 1-3 cpuseconds) on a Vax I 1-780The system ~s intended to be used with u Data Base Managementsystem.
The interface between the DBAP and the I-)BMS is a,,tralghtforward translator from relational algebra to the querylanguage of Ihe DflMS I have written a Ir;.mslator I'or Polaris\[Gielan 41.The system handles all the examples in this paper as well as awide range of others (Appendix A.).
Several different data basesschemes have been connected to the system for demonstrations,including one "real data base" abstracted from the on-line listingof the Bell Laboratories Company Directory.8.
ReferencesI.
Cohen, P., Perrault C, and Allen J., Beyond Quesuon-Answering, Report No.
4644, Bolt Beranek and Newman\[nc,, May 1981.2.
Fillmore C., The Case for Case, in Universals in LinguisticTheory, Eds., Bach E, and Harms, R., Holt, Rineheart andWinston, New York, 1968.3.
Gawron M. G., et.
al., Processing English with a Generali:edPhrase Structure Grammar, 20th Annual Meeting ol" theAssociation for Computational Linguistics, June 1982.4.
Gielan D., Polaris User Manual.
New York TelephoneCompany, January \[981,5.
Ginsparg,J., Natura/ Language Processing in an ~4ummam"Programming Domain, Memo 316, Stanford Artificial Intelli-gence Laboratory, Stanford University, 1978.Grosz, B., Transportable Natural-Language /mertbces: Prob-lems and Techniques, 20th Annual Meeting of the .-~ssocia-(ion for Computational Linguistics, June 1982.Kaplan, S. J., Cooperative Responses li'om a Portable NaturalLanguage Dara Base Query Systei~ Ph.D. dissertation,Department of Computer and information Sciences, Univer-sity of Pennsylvania, Phila., Pa., 1979.Quillian, M. R., Semantic Memory, in Minsky, M.. Ed..Semantic Information Processing, The M.I.T Press, 1968.UUman, J., Principles of Database Systems, Computer Sci-ence Press, Potomac, Maryland, 1980.6.7.8.9.Appendix A: Sample Questions and Answers?
does every department head in 1135 have an office in holmde\[?No.
all heads Ihat work For center number 11.\]5 are not locatedin an office in ho?
who isn'talles,h g is the head not located in an ofi~ce in ho that works forcenter number \[ 135?
who has been with us for longer than fred smith?There are no employees that have worked ('or you \['or more thanthe length or" the time fred smith has worked for ~.'~'~u?
list the employees who used to be married and are not marriednow,paul rochester, verlon biggs and willie davis are the empin~ee,~that were married and that are not married now.29?
production between february 1979 and april 198111352 - 768 - widget - march 1981l l 352  - 888 - widget - april 198111352 - 133 - screw - jan 198011354 - 133 - widget - ian 1980?
who flies between london and paristwa and pan am are the air l ines that fly from london into paris?
get me a fl ight to paris f rom london before 3pma flight before 1500 into paris from london:)1# airline departure arrival plane stops price2 pan am 1400 1800 dclO 0 180?
the latest fl ight out oJ" londonthe latest flight from london:I1# airline to departure arrival plane stops priceI twa paris 1500 1700 dclO 3 280 "?
who supplies more than two projectshowles and blake are the suppliers that supply to more than 2 pro-iccts?
who supplies more than the boss projectthe suppliers that supply to the projects besides the boss project,ire:decker, blake, howl,cs and white?
who  supplies more prolects than Deckerhowles and blake are the suppliers that supply to more  projectsthan the number of  Lhe projects that are supplied to by decker?
list the suppliers who supply projects m cities they are not inthe suppliers that supply to the proiects Iocuted in the cities inwhich they are not located in are:decker, blake, howles and while?
how manv parts does white supplyl'here are 9 parts supplied by white* how many different parts does whi le  supplyThere are 2 klnds of  parts supplied by white?
what are theyh()x ,~nd screw are file kinds (}1" parts supplied By white?
'.vh() 'iupplies the mosl kinds of  parish?~wles ~s the ,;upplier lh;.ll supplies the most kinds of pilrts?
how many does it supplyThere are 4 kinds rH' parts supplied by the suppliers that supplylhe most kinds of parts?
how much does the mixer project spend on widgets from blake440 is how much was spent by the mixer proiect on widgets sup-plied by blake to it?
how much did the mixer project spend on each partwidget - 649box - 3" print the drinkers that frequent only bars that serve some beerthat they likegeorge and john are the drinkers that frequent only bars thatserve some beers liked by them30
