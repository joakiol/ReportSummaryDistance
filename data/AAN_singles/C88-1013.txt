REPRESENTATION TREES ANDSTRING-TREE CORRESPONDENCESpresented for  COLIN6-88Budapest, 22-27 August 1988byCh.
B01TET & Y.ZAHARINGETA, BP 68Urliversit@ de Grenoble et CNRS38402 Saint-Martin-d'H@res, FRANCEPTMK, Un ivers i t i  Satns Malaysia11800 Penang, MALAYSIAAB~AC EThe corresponderlce between a s t r ing  of a language andits abstract representat ion,  usual ly  a (decorated) tree,is not Stra ight forward.
Ilowever, i t  is desirable tomaintain i t ,  for  Example to bu i ld  structured ed i tors  fortex ts wr 1 t t El/ i n nat urn 1 Ianguage.
AS suchccr'resp)ndences must be compos 1 t iona\] , we ca \] I ~hem"Structured Strmg-- l ree Correspondences" (SSTC).We ~jrgue that a SSTC is m fact composed of twomter re la ted  correspondences, one between nodes andsubstr ings, and the other between subt tees andsubstrings, the substrings being possibly discontinuousin both cases.
We then proceed to show how to def ine aSSTC witl~ a Structura!
Correspondence Stat ic  Grammar(SCSG), and ~qich constra ints  to put on the rules of theSCSG to get a "natura l"  SSTC.Kev~d'~ : l ingu is t  ic dascr lpt ors, d i s to r t  inuousconsti tuents, discont imuous phrase st ructure grammars,st rLICt ured s t r  ing- tree correspondences, s t ruc tura lcorrosp:)ndence s ta t i c  gralilnlarst~t~) ,&~D~:  DPSG, M\], N\[., SSIC, STCG.~U.
?3JLQ_NOrdered trees, annotated with simple labels or COmplex'cecora~ions" (property l i s t s ) ,  are widely used forrepresenting natural  language (NL) utterances.
ThisoErresponOs to a h ierarch ica l  view: the utterance isdecomposed into groups and subgroups.
When the depth oflmgu isc ic  analys~s is suc~ that a representat ion mterms of graphs, networks or sets of formulas would l)emore J i rec t ,  one often st i \] I prefers to use treestructures,  at the pr ice of encoding the desiredinforma::ion in the decorations (e g., by "ooindexing" twoor more nodes).
This is because trees are conceptual\]yand a \ ]gor i thmica l \ ]y  eas~er to manipu\]ate, and alsobecause a l l  usua\] in terpretat ions  based on the l ingu is t i cstructure are more or less "compositiona\]" in nature.I f  a language is described by a c lass ica l  PhraseStructure Grammar, or by a (pro ject ive)  DependencyGrammar, the tree st ructure "contains" the associateds t r ing  in some eas i ly  defined sense.
\]n par t i cu la r ,  thesurface order of tile s t r ing  is derived from some orderedtraverse1 of the tree ( le f t - - to - r ight  order of the leavesof a const i tuent tree,  or in f ix  order' foe a dependencytree).However, i f  one wants to associate "natura l"structures to s t r ings ,  fo r  examole abstract trees fo rprograms or predicate-argument structures fo r  NLutterances, th is  is no longer true.
Elements of thes t r ing  may have been erased, or dupl icated,  some"discontinuous" groups may have been put together,  andthe surface order may not be re f lec ted  in the tree (e .g .
,for' e normalized representat ion) .
Such correspondencesmust be composit ional:  the complete tree corresponds tothe complete s t r ing ,  thee subtrees correspond tosuPstrings, etc.
Hence, we ca l l  them "StructuredSt r ing - t ree  Correspondences" (SSTC).For some appl icat ions ,  l i ke  c lass ica l  (batch) MachineTranslat ion (MT), i t  is not necessary to Keep thecorrespondence exp l i c i t :  'For rev i s ing  a t rans la t ion ,  i tis enough to show the correspondence between twosentences or two paragraphs.
14owever, i f  one wants tobu i ld  structured ed i tors  fo r  texts wr i t ten  tn naturallanguage, thereby using at the same time a s t r ing  (thetext )  and a tree ( i t s  representat ion) ,  i t  seems necessaryto represent exp l i c i t l y  the associated SSTC.In the f i r s t  part ,  we br ie f ly  review the types ofs t r ing - t ree  correspondences whloh are implied by the mostusual types of tree representations of NL utterances.
Weargue that a SSTC should in fact  be composed of twoin ter re la ted  correspondences, one between nodes andsubstr ings,  and the other between subtrees andsubstr ings,  the substrings being possibly discontinous mboth cases.
This is presented in more deta i l  in thesecond part.
\]n the last part,  we show how to define aSSTC with a Structura l  Correspondence Stat ic  Grammar(SCSG), and which constra ints  to put on the rules of theSCSG to get a "natura l"  SSTC.\[.
~CRR~N~.
.E , _ j~TWEEN A S T R I N ~1.
p~F~E ~TRUCTURE TREES (C-STRUCTURESIClassical Phrase Structure trees give r i se  to a verysimple Kind of SSTC.
To each s t r ing  w = a l .
.
.an ,  let usassociate the set of interva\]s  i j ,  O~i~j~n.
w(i j}denotes the substr ing a i .
.
.a3  of w i f  i<o, 6 otherwise.The root, or equtva\]ent ly  the M\]o\]e tree, correspondsto w = w l0n) .
Each \]ear corresponds to some substringw(i j ) ,  of length 0 or 1 (we may extend th is  to anylengtm i f  terminals are allowed to be themselves S t r ingsThen, the correspondence is such that any internal  nodeof the tree, or equiva lent ly  each tree "complete" mbreadth and depth, COrrespondS tO w( i .
j ) ,  i f f  i ts  mdaughters (or' i ts  m immediate subtrees), in order',correspond to a sequence w{ iL_ j l ) , .
.
.
,w( im gm\],such that i1=i, jm=j, and jk=ik* l  for  O<k<m.This type of correspondence is "prooectwe"  It hashowever Peer\] argued that c lassical  phrase s t ructure  treesare maaequate for" charaoter is ing syntact icrepresentat ions in genera\], espec ia l ly  in the ease ofso-oat\]ed "discontinuous"constttuents.
Here are someexamples.
(1) John Z lkiL_\[k~C~, of course, ~ j ~ .
(2) He ~ the ba l l  ?/{Q.
(3) Je ~ le lui  al ~ donn@.
(I did not give i t  to him)According tO (McOawley 82), sentence (1) contains averb phrase "talked about po l i t i cs" ,  wlnich is d iv ided bythe adverbial  phrase "of course", which modif ies the#~ole sentence, end not only the verbal kernel (or theverbal phrase, in ChomsKy's terminology).
Sentence (2)contains the par t i c le  "up", whtoh ls separated from i tsverb "picKed" by "the ba l l " ,  In sentence (3), thediscontinuous negation "ne.. ,pas" overlaps with thecomposed form of the verb "a i .
.
.donn~".
Moreover, i{  asentence in act ive voice ls to be represented in astandard order (subject verb object complement), th issentence contains two displaced elements, namely theobject " le"  and the complement " lu i " .
(McCawley 82) and later (Bunt & al 87} have arguedthat "meaningful" representations of sentences (2) and(3) should be the fo l low ing  phrase s t ructure  trees, (4)and (5),  respect ively.59+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+S (4 )  S (5 )  !!
!
I I!
!
!
!
VP  !!
~ !
!
!
I I!
!
!
!
!
V I _ _  !!
NP  !
VP  ! )
NP  !
!I I ~1 I ; I I I I!
!
!
!
!
!
!
!
!
I !!
!
V ADVP PP He picked the ba l i  upl!
!
!
!
~ I!
!
!
!
!
!
!
!
!John talked of course about po l i t i cs  I. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?Figure l: Examples of discontinuous phrase st ructuretreesAlong the same l ine,  and taking into consideration thedisplaced elements, a "meaningful" representation forsentence (3) would be tree (6).+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.S (6)NP !
V Pi !
!
!
!I V NP NP!
!
!
!
!
I!
!
!
!
!!
N E G !
!
!
!!
~ !
!
!
!
!de ne le lui  ai pas donne?
.
.
.
.
.
.
.
~ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Figure 2: Example of d i scont inu i ty  and displacementhere, the correspondence is establ iehed between a node(or equ iva lent ly  the complete suDtree rooted at a node)and a sequence of intervals .
I f  a displacement ar ises,  eein (3),  the le f t - to - r ight  order of nodes in the tree maybe incompatible with the order of the correspondingsequences of in terva ls  in the s t r tng  (the consideredordering is the natural  lexioographic extension).Rather than to introduce the awkward not ion of"discontinuous" tree, as above, with intersect ingbranches, we suggest to keep the t ree  diagrams in the l rusual form and to show the s t r ing  separately.
Forsentence (3) ,  then, we get the fo l low ing  diagram.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.!
S ('/)q!
!
!
I!
NP NEG __ .VP  _!
!
!
!
!
!
I!
J e  ne  pas  V NP  NP!
: : : !
!
!
I!
.
: : : .................. ai ........ donne le lu l!
: : : : : : ',!
: : .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: :!
: : : .
.
.
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
:\] , : ' : : : :!
de ne le lu i  ai bae donn6+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Figure 3: Separation of a s t r ing  and i ts  "dlsoontlnou8"PS treeNOw, as before, the root of the tree s t i l l  correspondsto w=w(0_n\], and a leaf corresponds to an interva l  oflength O or 1 (or more, see above).
But an internal  nodewith m daughters corresponds to a sequence of in terva ls ,~hich' is the "union" of the m sequences corresponding toIts daughters.More prec ise ly ,  a "sequence" of Intervals  is a l l s t  ofthe form S = w{i l _ j l )  .
.
.
.
.
wlip_jp}, in order (Ik<Ik+1 forO<K<p) and without overlapping (jk<ik+1 for O<k<p).
Itsunion (denoted by "+") with an interval I = w(i j} is thesmallest l i s t  containing a l l  elements of S and of I. Forexample, S+I is:S i t se l f ,  i f  there is a k such that ik<t and j_<jk;S, augmented with wi i  J} inserted in the proper place,i f  j< i l  or jp<i or there is a k<p such that Jk<i andj< i  K* 1 ;60w{ l l _ j l}  .
.
.
.
.
w{tq_ jq} .w{ i_ J r}  .
.
.
.
.
w( lp_ jp} ,  i f  thereare q and r such that Jq<t~lq+l and t r~ j~ j r  (othercases are analogous),2.
DEPENDENCY TREES (F~S~RUCTUR~)In c lass ica l  dependency trees, elements of therepresented s t r ing  appear on the nodes of the tree, withno aux i l i a ry  symbols, except a "dummy node", of tenindicated by "=", which serves to separate the le f tdaughters from the r ight  daughters.There are two aspects in the correspondence.
F i rs t ,  anode corresponds to an element of the s t r ing ,  usual ly  aninterva l  of length 1.
Second, the complete subtree rootedat a node corresponds to the tnterva l  union of theinterva ls  corresponding tO the node and to I ts  subtree.These interva ls  may not overlap.The s t r ing  can be produced from the tree by an tnordert raversa l  (one s tar ts  from the root,  and, at any node,one traverses f t r s t  the trees rooted at the le f tdaughters, then the node, then the trees rooted at ther ight  daughters, reeurs ive ly ) .Sentences (1) and (2) might be represented by trees(8) and (9) below.+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?!
talked (8) picked (9) !!
!
I !!
t !
~ !
!
!
!
!
I!John ' of__  about  He = _ba l l  up !ISUBJ : ADVS I OBJ1 !
SUBJ : l OBJ1PTC!
: : !
!
!
!
: : !
!
: !
: : = course = po l i t i cs  : : the " : !
: : : : : .... : ; : DES : : t; : : : : : .
.
: .
: !
: : : : : : Hi picked the bai l  up '?
, , : , , !IJohn taiKed of course about po l l t i cs  !?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?Figure 4: Examples of c lass ica l  dependency trees\]n those trees, the d i scont inu i t ies  shov;n tn the PStrees (4) and (5) have disappeared.
We have shown on somenodes the syntact ic  funct ions  usual ly  attached to theedges.There may be some discussion on the structuresproduced.
For example, some l ingu is ts  would rather" see"po l i t i cs"  dominating "about".
This tS not our" tOpiChere, but we wt l l  use th i s  other poss ib i l i ty  in a la terdiagram.
For the moment, note that d i scont inu i ty  doesnot always disappear in dependency trees.
Here is anexample corresponding to sentence (3).+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.I aonn6 (10)I !!
!
!
!
I I !I de ne le Jut at  =ISUBJ NEG OBJ1 OBJ2 AUX :: !
!
: : :: = pa8 : : :: : NEG2.,..
: .......... : .......... : .......... :: : : : : ; :?
: , , : : .j ;  ne le 1;t at pas d&n6Figure 5: Example of a "dtsoonttnous" dependency treeLet us now take a simple example from the area ofprogramming languages, ~?nioh $he~ an abstract treeassociated to an assignment, ~here some elements of thes t r ing  are "missing" in the tree,  and where a nodeoorreeponds to a "discontinuous" substr ing (a sequence ofin terva ls ) .?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.!
i f  then_else (01+2_3+6_7) (11)!
i!
!
!
!!
ok =: (4 5) =: (8_9)!
12  _ !
if !
!
!
!!
a x " (10 11) x!
56 34  !
?_8!
a + (13_14)!
910  !!
!
!!
b 0!
12_13  1415!!
i f  ok then x := a else x := a ~ ( b + e )!
!01_23456" /_89_10  1_12_13_14_15_16?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Figure 6: Example of "abstract" tree for  a formallanguage expressionHere, we have shown the correspondence between nodesand sequences.
The parentheses are mlsstng in the tree,wtqich means that the sequence corresponding to thesubtree rooted at node "+" is more than the union of thesequences oorrespondfng to i ts  subtrees.
However, thereis no overlapping between sequences corresponding toindependent nodes or suPtrees.Anoeher remark is that the elements appearing on thenodes are not always identical  with elements of therepresented str ing.
FOr example, we have replaced ":=" by"=. "
~nd the (discontinuous) substring " i f  then else" by" i f  thE.m else",  in a usual fashion.3.
P_RED OATE-ARGUMENT TREES (P-STRUCTURES)In "predicate-argument structures" ,  i t  is usual toconstruct a unique node for  a compound predicate, in thesame ~;pir it  as the " i f_then_else" operator above, Withsentences (1) and (2), for  example, we could get trees(12) and (13) below.
Beside the logical re la t ion(argument place) or the semantic re la t ion ,  the nodes mustalso contain some other information, l ike tense, person,etc, ,  ~hich is not sho~n here.!
__~!
I I!
!
!
!
I I!
John of course po l i t i cs  He ___ba l l  I!
ARGO ESTII~ __  ARG1 ARGO !
ARe1 I!
0 1 2 4 \[ 5_6 0 1 the 3 4 I!
about 2_3 ITOPIC !!
4_5 He picked the ba l l  up I!
01 2 3 4 5  It I!
John talked of course about po l t t tcs  I!0  I 2 3  4 .
5 _ _ 6  I?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?Figure ?
; Examples of predteate-argumont reesWe now come to Situations where overlapping occurs,and ~r}re It  ts natural to consider "tnooaplete" subtree8corresl)ondtng to "dlsco~ttnous" groups.Thhl occurs f requent ly  in eases of coordination withe l i s ion ,  as tn:"John and Mary give Paul and Ann trousers andCresses.
"In order to s imp l i fy  the trees, ~ abstract th is  bythe f{)rma\] language {an v bn on t n>O}, and propose thetwo i:rees (14) and (15) below fo r  the s t r ing"a a v b b c c" (also wr i t ten a.
1 a.2 v b.
1 b.2 e. l  c.2to sl~L}w the posi t ions)  as more "natural"  representationsthan i:he syntact ic  tree derived from a context-sens i t ivegrammar in normal form for  th is  language (a l l  rules areof the form "1A r --~ 1 u r " ,  1 and r being the le f t  andr ight  ~:ontext, respect ive ly) .. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+(14) V (0_7/2_3) V (0_7/2_3) (15)I!
I !
I !
I !A (0 Z) g (3_5) C (5_7) a.1 b.1 c. 1 V (1_3.4_5?6_*/)t I !
0_13_45_6 __ !
/23)I !
!
!
!
!
P Ila.
1 A b.
1 B c.1 C (6_*/) a.2 b.2 c.2\ ]0_1 !
8_4  I 5_6  I 12456_* /a.2 b.2 e.2l_Z 4_5 6_*/a a v b b c cO__ 1 __2__ .3__4__5  L7Figure 8: Examples of p-etructures fo r  al a2 v bl b2 clc2On certa in  nodes, we have represented the sequencecorresponding to the complete 8ubtree rooted at the node,fe l  \]owed by the sequence Corresponding to the nodei t se l f .
For nodes A, B, C in tree (14), th is  " loca l "8equanoe ts empty.In both trees, tt  i8 c lear  that the sequence al V blol corresponds to an "incomplete" subtree, namelyV(A(a l ) ,B (b l ) ,C (c l ) )  In (14) and V(a l ,b l , c l )  in (15).In tree (14), the cOOrdination is shoal d i rec t ly  onthe graph, and the verb (V) is not shown as el ided.
\]t  isa matter of fur ther  analysis to accept or not thed i s t r ibut ive  Interpretat ion ( " respect ive ly"  may holdbetween the three groups, the last two ones, or nones).On the contrary, tree (15), in a sense, is a more"abstract" representation.
I t  shows d i rec t ly  theinterpretat ion as a coordination of two sentences, and"restores" the el ided V.4, MULTILEVEL TREES (M-STRUCTURES)Mul t i leve l  t ree structures,  or m-structures for  short,have been introduced by B.VAUQUOIS in 19.//4 (see (Vaupuols*/8)) fo r  the purposes of Machine Translation.
On thesame graph, three " leve ls  of in terpretat ion"  aredescribed (constituents,  syntact i c  dependencies, logicaland semantic re la t ions) .
AS seen in other examplesabove, the nodes ~?nich re fer  d i rec t ly  to the s t r ing  donot contatn elements of the st r ing,  but ratherrepresentatives of (sequences o f )  elements of the s t r ing ,cal led " lex ica l  units" (LU), l i ke  "repair"  fo r"reparat ion",  plus some information about the der ivat ionused.The graph is deduced by simple rules from a dependencytree: each tnternat node t8 "lowered" tn the " ' "  pos i t ionand i ts  syntact ic  function becomes "GOV" ( for  "governor",or head in some other terminology),  discontinuous lex ica lelements ( l i ke  "ne.. .pas" or "a l .
.
.denn~" are representedby one node, coordination ts represented by "ver t i ca ll t s ts"  as tn tree (14), lextoal  units of re fer redelement~ are put In the nodes corresponding to thepronouns, an approximation of colndexlng, etc .
.From the point of view of the associatedcorrespondence between representation trees andrepresented 8trtngs, nothing new has to be mentioned.I I .
A PROPOSAL: STRUCTURED STRING-TREE CORRESPONDENCESOur proposal Is now almost complete.I.
DEFINITIONSa) The correspOndence between a s t r ing  and i tsrepresentation tree ts made of two in ter re la tedcorrespondences:between nodes and (possibly discontinuous) 8ubstrings;between (possibly Incomplete) subtrees and (possiblydtsconttnous) substrlngs.g lb) It can be encoded on the tree by attaching to eachnode N two sequences of intervals, called SNODE(N) andSIREE(N), such that:1.
SNODE(N) ~ STREE(N), v~ich means that SNODE(N) 18"contained" tm STREE(N) with respect to tts basicelements (the w(i j} ) ,  that is, thatStREE(N) = STREE(N) g SNODE(N).
Note that equalitycan not be required, even on the leaves, becausethe string "( b )" may well have a representationtree with the unique nede b.2.
i f  N has m daughters Nt...Nm, thenSTREE(N) ~ STREE(N1)+...+STREE(Nm) + SNODE(N).
\]ncase of s t r i c t  containment, the differencecorrespond to the elements of the string which arerepresented by the subtree but which are notexp l i c i t l y  represented, l ike "(l' and ")" in"( b )".c) The sequence SSUBT(X,N) corresponding to a givenmcomplete subtree X rooted at node N of the wholetree T is defined recursively by:SSUB1(X,N) : STREE(X) i f  X : N, that is, i f  ?
iSreduced to one node, not necessarily a leaf of T;SSUBT(X,N) = SSUBT(XI)*..I+SSUBT(XD) U SNODE(N).
i f  N,the root of X, has p subtrees XI...XD in T.In other words, one takes the smallest sequencecontaming the bi9gest sequence corresponding to theleaves of x (S\]REE on the leaves) and compatible withthe monotony rules above.Here are some interesting properties of SSTCs whichmay help to c lass i fy them.A SSTC iS ~ i fSTREE(NI) and STREE(N2) have an empty intersection IfN1 and N2 are independent;SNODE(N1) and STREE(N2) have an empty intersection i fN2 is a daughter of NI.A SSTC is eB_~~eta~_t&~ ifit is non-overlapping;for any two sister nodes N1 and N2, N1 to the le f t  ofN2, STREE(N1) is completely to the lef t  of STREE(N2).This means that,i f  STREE(N1) = w( i l _ j l} , .
.w( ip_ jp )  orand STREE(N2) = w(k l _ l l} .
.
.w(kq lq}  or ~,then jp~kl.A SSTC is irg_LE~\[ i f .
for each elementary intervalw(i_i-1),  there is a node N such thatSNODE(N) = w{i i+1).A SSTC is gQEP_Lg_C~ if  each elementary interval Iscontained in SNODE(N) for  some node N.A SSTC is of the g ~  i f  SNODE(N) is emptyfor each non terminal node N.3.
~_R~PRE~SNTATIONIn the examples above, we have encoded thecorrespondence in the tree.
However, this is in practicenot always necessary, or even practical.in the case of expl ic i t  and projective SSTCs, forinstance, the string can De obtained d i rect ly  from thetree, and there is no need to show the intervals,Note that, in the process of generating a str ing froma tree, one natural ly starts from the top, not knowingthe f inal  length of the str ing, and goes downrecurs \]rely, dividing this i nt erv~a \] into smallerintervals.
Rather than to introduce variablesrepresenting the extremities of the created intervals, i tmay be more practical to start from a f ixed interval,  say0_1 or 0 lO0.
Yhen.
the Positions between the elements ofG2the str ing w i l l  be denoted by am increasing sequence ofrational numbers (0, 1/3, 1/2, 5/?
), etc.In the case of "local" non-project ivtty,  we have tr iedsome devices using two re la t ive  integers (POS,LEV)associated with each node N. POS(N) st~ws the re lat iveorder in the subtree rooted at mother(N), i f  LEV(N)=O, ormore generally at tts LEV(N?I) ancestor, i f  t.EV(N)>O.Unfortunately, a l l  these schemes seem to work only forpart icular situations.Also, i f  the SSTC is overlapping, or' not complete, 1(may be computationally cost ly fo f ind the (sma\]lest)subtree associated with a given (possib\]y discontinuous)substrtng.
But this operation would be essential in a"structural" editor of NL texts.
A poss ib i l i ty  is thento encode the correspondence both in the tree and in thestring.Finally, take the example of tree (15) above.
Supposethat the user of a NL editor wants to cllange bl (Paul, inthe corresponding NL example) in a way v~Hch maycontradict some agreement constraint between al, v, bland el.
One should be able to ftmd the smallest SSICcontaining al and other elements, that is, the subtr'eeV(a l ,b l ,c l )  and the discontinuous substring al v bl cl(the notation a .
.v .b .
.
c .
,  might be suitable, i f  onewants to avoid indices).For these reasons, it  may be werth~qile to COnSiderthe poss ib i l i ty  of representing the $gTC independently ofbeth the tree and the string.
This is actually the ldeabehind the formalism of gTCG (String-Tree CorrespondenceGrammar).The stat ic  grammars of (Vauquols & Chappuy 85) aredevices to define str ing-tree correspondences.
They havebeen formalized by the STCGs of (Zahartn 86).Here, a context-free ltke apparatus of rules (alsocalled "boards", for  "planches" in French, because theyare usually written with two~dtmenslonal tree diagrah~s)is used to construct the set of "legal" SSYCs.The axioms are al l  pairs (X,Y($F)), where X is anunbounded str ing variable, Y a start ing node (standingfor SENTENCE, or TITLE, for  example), and SF is anunbounded forest variable.The terminals are a l l  pairs (x ,x ' ) ,  where x is anelement of a strtng and x' a one-node tree vZ~ichrepresents i t .The rules chow how a SSTC t8 made up of smaller' ones.\]he generated language ts the set of a l l  var iable-free(<strlng>,<tree>) pairs derivable from an axiom by thegrammar rules.In order to avoid undue formalism, let us give anexample for the formal language (an bn cn I n>O).IRule RI: (@ b c , S(a0 b, c)) wt ==> !I (a ,a )  (b ,b )  (c ,c )  !IRule R2: (a X b Y c ~ , S. l (a,  b, c, S.2($F)) !!
~=> !!
(a ,a )  (b ,b )  (e ,c )  (X Y Z, 5 .2 ($F) )  !+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Figure 9: A slmp\]e SCSG for an bn-cnX, Y and Z are string variables, SF ~ forest variable,and the indices are Just there to distinguish elementswith the same label.Actually, the formalism is a bit  more precise andpowerful, because it  is posslb\]e to express that acorrespondence in the r.h.s.
(r ight hand side) isobtained only by certain rules, and to res t r i c t  thepossible unif ications (rather, a sparta1 Ktnd called" ident i f i ca t ions"  in (Zaharim 86}).
1'0 i l l us t ra te  th is ,we may rewr i te  the last element of the r .h .s ,  as:+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+!
(X Y Z, S.2($F)) !..i with ref  !\[ "(RI: X/a ,  Y/b, Z/e, S 2/S !!
!R2: X/aX, Y/bY, Z/cZ,' $F/ (a ,b ,c ,S .2($F)) )  !?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?Figure IO Exarllple of with r'ef cart  in a r .h .s .R2: X/aX, .
.
.
means  that the subcorrespondenoe(XYZ,S.2($F)) may be generated by rule R2, therebyident i fy ing  X in ?YZ with ax in a?bYeZ ( in  the \].
I~,s.
).In the ver'sTon of (Zaharin 86}, the correspondence isalv~,ays oF cor~st i tuent type, because time only appl teat tonsconsidered had been to m-structures used for  L4T, wherenon--terminal nodes do not d i rec t ly  correspond tosubst r ings.But t i l l s  is by no means necessary, as the next examplei l l us t ra tes ,  with the language (an v bn cn 1 n>0).+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?
!Rule RI: (a b C , V(a, b, C)) !!
==> I!
(a ,a )  (v ,V)  (b ,b )  (c ,c )  !?
i .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
j!Rule R2: (a x v b Y o Z , V .
l (a ,  b, c, V.2($F)) I!
==> !!
(e ,a )  (v ,V .1 )  (b ,b )  (c ,c )  (X v Y Z,  V .2 ($F) )  !!
with ref  !!
(RI: X/a ,  Y/b, Z/C, V.2/V, SF/(a,b,c)  !!
!RE: X/aX, Y/bY, Z/cZ, V.2/V.1, $F/ (a ,b ,c ,V .2($F)) )  !F:iguro l l :  SI'CG for  an v bn on g iv ing  tree (15)II\] i S STCG generates correspondences such as(aavbbco.
tree (15)).
But something has to be added todist  ingu ish the STREE and SNODE parts.We simply associate to each constant or" var iab leappearing in a STCG ru le  one or two expressionsrepresem ing the STREE and SNODE sequences, separated bya " / "  i f  necessary, with basic elements of the form"p_q", ~.~here p and q are constant or" var iab\]e mdtces.In any given (<str ing>,<tree>) Dair, we associate onesuch expression to each element of <string>, and two toeach node of <tree>, the f i r s t  fo r  STREE and the secondfor" SN0bE.
The second may be omitted: by defaul t ,  SNODEis taken to be empty on internal  nodes and equal to STREEon leaves.Our last example may now be rewr i t ten  as fol lows.+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+!Rule RI:V(t0_t2 + i3_ i4+i5_ i6 / i l  i2)( i )a l v i2  b o a b c tO t l  i _ i3 j415_ i6  i0_t l  t3 i4 t5_i6==>(a,a) ,  (b,b) ,  (c,o)IRule R2: b( a x v b Y c z ti0_11 i l  i2 i2_13 t4_I5 i5 i6 t7_i8 t8_19 IiV,1 ( t013+i4  I6+i7_t9/12 i3) iI i+ I t ! )
qa b c V.2 ilO_i l  i4 t5 i7 i8 (11 t3+i5 i6?i7 i9/ iE, i3) i!
iSF~:=> i(a,a) (b,b) (v,V.1) (c,c)  (x v Y Z , V.2) II iSF iwtth Per(RI: X/a, Y/b, Z/c, V.2/V, $F/ (a ,b,o)  iIR2: X/aX, Y/bY, Z/cZ, V.Z/V.
1, $F / (a ,b ,c ,V .2($F) ) )Flgure 12: Extended STOG fo r  an v bn cnWe wi l l  now give examples of STCBs which give r i se  tounnatural correspondences end t ry  to der ive someconstra ints  on the rules.
Let us f i r s t  s l ight ly  modifyour f i r s t  STCG for  an bn on.?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+IRule RI: (a b C , S(a, b, c))  !t ~=> !!
(a ,a )  (b ,b )  (c ,c )  !
!Rule R2: (a Z b Y c X , S , l (a ,  b, c .S .2 ($F) )  +!
==> !!
(a,a) (b,b) (c ,c)  (X Y Z, S.2($F)) !+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+Figure 13: Example of "unordered" STCGIn the f i r s t  element of R2, XYZ has been replaced byZYX.
The fo l low ing  representat ion tree (16) would havebeen natura l ly  associated with the s t r inga l .aZ.a3.b l .bE .b3.c l ,cE ,o3 by our f i r s t  STCG.
With th ismodtPlcation, i t  becomes associated witha1.o2.a3.b l .bE.b3.c l .a2,03,  as sho~ in the next diagram.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+s,1 (09)  (16)!!
I t !a.1 b.
1 c .
I  S.2 (1_3+4_6??
9)01  34  67  !I!
!
!
!a.2 b,2 c,2 S.3 (2~3?5_6?8_9)78  45  12  I_ __}  .
.
.
.
.a.3 b.3 c.323 5_6 8_9al ?Z a3 bl b2 b3 ol a2 c30__,__ 1 2 3 _ _ 4  __5__6__  ?
__8+9.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?Figure 14: Example of STC6 "unordered" w. r .
t ,  theetr  lngsThe problem here is that the subtree rooted at S,2,considered as e whole t ree,  should correspond to thes t r tng  a2.c3.b2.b3.c2.a3, and that i t  corresponds to02.a3.b2.ba.a2.c3 when embedded in the whole tree rootedat S,1.The STREE Correspondences are not properly def ined,because one should be able to d is t ingu ish  betweend i f fe rent  permutations of the Interva ls ,  which is c lear ly{,3impossible with our previous definit ions andrepresentations of SSTCs.This is because the order of the elements of thestrings is not compatible in the l.h.s, and in ther.h.s.
:  our f i r s t  constraint w i l l  be to forbid this inSTCG rules.Our second constraint wi l l  be to forbid the use ofauxi l iary variables which do not correspond to substrlngs(subtrees) of tme terminal (variable-free) pairs producedby the STCG.Let us i l l us t ra te  this witl~ the following STCG, whichconstructs the representation tree S(A(u),B(v)) for  eachword w on (a,b,e) of even length such that w=uv andMU=NV.+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+!Rule RI: ( x P , S(A(x),P) ) !!
==> !'
(x,x) (P,P) -- x 6 (a,b,c) !4 .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
!Rule R2: ( x X Y P, S(A(x,$L),$M,P) ) !i ==> !\] .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
4!Rule RS: ( x Y , S(A($L),B($M)) ) !i ==> !
( X Z , S(A($L),$F) ) !L ( Y Z , S(A($M),$F) ) !+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
+F~gure 15: Example of STCG with auxi l iary variablesThere is a natural SSTC between the representationtree and the string.
For example, we getS(A(a,b,c),B(b,a,c)) for  w=abcbac, But the constructionof this f inal  correspondence involves the construction ofpairs SUCh as (abcPPP,S(A(a,b,c),P,P,P)), w~ich are justused for counting.If we try  to put sequence expressions on the P nodesand string elements, we notice that it  would be necessaryto extend the intervals of w, rather than to divide them,Otherwise, we would make the f i r s t  P of aDoPPP correspondto the second b of w=abcbac, which is quite natural, butwhat would we associate to the f i r s t  P of bBcPPP ?\]f we represent exp l i c i t l y  (and separately) thestructure of a given (<string>,<tree>) element of theSSTC by its derivation tree in the STCG, the secondconstraint w i l l  allow us to instantiate al l  variables bysubstrings or subtrees of <string> and <tree>, wtthouthaving to construct other auxi l iary strings and trees.This, of course,' would permit a mope economical~mplementation, in terms of space.Finally, note that the interesting properties of SSTCsmentioned in I l l .
l  above have simple expressions asconstraints on the rules of our extended STCG formalism.CONCLUDIN6 R~MARK~Trees have been widely used for the representation ofnaturat language utterances.
However, there have beenarguments saying that they are not adequate forrepresenting the so-called 'discontinuous' structures.This has led to various solutions, relying, for instance,on encoding the desired information in the nodes (e.g.
'eoindexin9"), or on oefining trees with "discontinuous"const i tuents.We have presented here a proposal for representingdiscont inuous constituents, and, more  generally,non-projective and uncomplete SSTCs with overlapping.The proposal uses the ordinary def in i t ion of orderedtrees.
This is made possible by separating therepresentation tree from the surface utterance (which thetree is a representation of).
The correspondence betweenthe two may be represented exp l i c i t l y  by means cfsequences of intervals attached to the nodes.This opens Up a discussion on (and def init ions of)structured str ing-tree correspondences in general.
Thlsrepresentation might also be used in syntactic editorsfor programs or In syntact~co-semanttc editors for  NLtexts.64Final ly,  the formalism of the String-TreeCorrespondence 6rammar has been extended to glve themeans of representing the said structuredcorrespondences.An analogous problem is to define structuredcorrespondences between representation trees, forlnstanoe between source and target interface structuresin transfer-based MT systems.
We do not yet know of anysat isfactory proposal.A solution to this problem would give two veryInteresting results:- f i r s t ,  a way to specify structural transfers in areasoned manner, just as STCGs are used to specifystructural analysers or generators,second, a way to put a text and its translation in avery fine-grained correspondence.
This is quite easywith word-for-word approaches, of course, and also forapproaches using classical (projective) PS trees ordependency trees, but has become qutte d i f f i cu l t  withmore sophisticated approaches using p-structures orm-structures.
{Bunt & a\] 87) H.BUNT, J.THESINGH & K. VAN PER SLOOT(1987)Discontinuous ognstttuents ~n .
~  ~~a~J~_gProc.
3rd Conf.
ACL European Chapter, Copenhagen,April 1987.
{McCawley 82} J.D.
MCCAWLEY (1982)p~renthettoal and discontinuousr ~Linguistic inquiry 13 (1), 913106, 1982.constituent{Vauquois 78\] B.VAUQUOIS (1978)Description ?Le\]_~ ; ~  Jnterm6diatreCommunication pr~sent~e au colloque de Luxembourg,April 1978, BETA document, Grenoble.
(Vauquois ~ Boiler 85} 8.VAUQUOI8 & CH.BOITET (1985)~ranslat~cn6$.GETA ~ University)Computational Linguistics, 11:1, 28-36, January1985.
{Vauquois & Chappuy 85) B.VAUQUOIS & S.CHAPPUY (1985)~ crammersProc.
Conf.
on theoretical & methodological issuesin MT, Colgate Univ., Hamilton, N.Y., August 1985.
(Zahartn 86\] Y.ZAHARIN (1986)t rB_~Leg.t~ a~ ~ m t~e n \ ]~v.~j~ .
tD_~Z~!nlao.qua~ m I~Lr~ ~Ph.D.
Thesis, Untverstti  Salns Malaysia, March 1986(Research conducted under GETA-USM cooperation GETAdocument, Grenoble.
(Zahartn 87a} Y.ZAHARIN (1987)Strina-Tree Correspondence ~ 8r ~  ~ gg_ f~ tr~ corresoondence I ~of ~ and tree structures?Prec.
3rd Conf.
ACL European Chapter, Copenhagen,April 1987.
{Zaharin 8?b} Y.ZAHARIN (1987)The ~ ~ at FE..TAz = ~v_qQa~L~the journal TECHNOLOGOS (LISH-CNRS), prlntemps,1987, Paris.
(ZaJac 86\] R.ZAJAC (1986)SCSL; ~ 1 i ~  sDeclflcatton n .
~  :EO?Proc.
of COLING-88, IKS,  393-398, Bonn, AugustZ5-29, 1986.-O-O-O-O-O-O-O-O -
