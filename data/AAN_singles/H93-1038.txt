An MAT Tool and Its EffectivenessRobert Frederking, Dean Grannes, Peter Cousseau, Sergei NirenburgCarnegie Mellon UniversityCenter for Machine TranslationPittsburgh, PA 15213ABSTRACTAlthough automatic machine translation (MT) of unconstrained textis beyond the state of the art today, the need for increased translatorproductivity is urgent.
The PANI3LOSS system addresses this dilemmaby integrating MT with machine-aided translation (MAT).
The mainmeasure of progress in the development of the PANGLOSS system isa gradual increase in the level of automation.
The current PANGLOSSMT system typically generates sub-sentence-length units of the targettext.
Any remaining aps are treated by lexicon lookup.
A mixtureof these two kinds of components is presented tothe user using theCMAT (Component Machine-Aided Translation) editor, which wasdesigned to facilitate the transformation of this output into a high-quality text.
An experiment evaluating the utility of the CMAT editordemonstrated its usefulness inthis task, and provides useful guidancefor further development.1.
Introduct ionFully automated machine translation of unconstrained texts isbeyond the state of the art today.
The need for mechanizing thetranslation process is, however, very urgent.
It is desirable,therefore, to seek ways of  both speeding up the process oftranslating texts and making it less expensive.
In this paperwe describe an environment that facilitates the integrationof automatic machine translation (MT) and machine-aidedtranslation (MAT).This environment, called the Translator's Workstation(TWS)\[5\], has been developed in the framework of the PAN-GLOSS machine translation project.
1 The main goal of thisproject is to develop a system that will, from the very begin-ning, produce high-quality output.
This can only be attainedcurrently by keeping the human being in the translation loop.The main measure of progress in the development of the Pan-gloss system is the gradual increase in the level of automation.PANGLOSS MARK I translates from Spanish into English, al-though additional source languages are planned.
The analyzerused in this configuration is a version of the ULTRA Spanishanalyzer from NMSU\[2\], while generation is carried out bythe PENMAN generator from ISI\[4\].
The Translator's Work-1pANGLOSS is a joint project of the Center for Machine Translation atCarnegie Mellon University (CMU), the Computing Research Laboratoryof New Mexico State University (NMSU), and the Information SciencesInstitute of the University of Southern California (ISI).station provides the user interface and the integration plat-form.
It is similar in spirit to systems uch as the Translator'sWorkbench\[3\].The processing in PANGLOSS goes as follows:1. an input passage is broken into sentences;2. a fully-automated translation of  each full sentence is at-tempted; if it fails, then3.
a fully-automated translation of  smaller chunks of text isattempted (currently, these are noun phrases);.
the material that does not get covered by noun phrases istreated in a "word-for-word" mode, whereby translationsuggestions for each word (or phrase) are sought in thesystem's MT lexicons, an online bilingual dictionary, anda set of  user-Supplied glossaries;.
The resulting list of  translated noun phrases and trans-lation suggestions for words and phrases is displayed ina special editor window, where the human user finalizesthe translation.This entire process can be viewed as helping a human trans-lator, by doing parts of the job automatically and making therest less time-consuming.We have designed and implemented an intelligent post-editingenvironment, the CMAT (Component Machine-Aided Transla-tion) editor.2.
The User 's  V iewThe CMAT editor allows the user to move, replace or deleteoutput text elements, called components, with at most twomouse actions.
The main user interface tool is a dynamically-changing popup menu available for each component.
Theordering of alternate selections in the menus changes as thetool is used, to reflect the most recent user choices.Suppose the user selects a region of source text by highlight-ing it and submits it to be machine-translated.
The resultappears in a target window as a string of components, each196surrounded by "<<" and ">>" characters.
2 A mouse clickanywhere within a single component brings up a CMAT menufor that component.
In Figure 1, the user has clicked on theword "increase".
A CMAT menu consists of three regions,each separated by a horizontal line.
From top to bottom theseare:?
The LABEL region, which contains the word or phrase inthe source text that produced this particular component)?
The FUNCTION region, which contains the post-editingMove, Delete, Modify, and Finish functions.
When theuser selects Move, the component disappears, and themouse pointer changes hape, indicating that a Move isin progress.
The component is reinserted into the text atthe nearest word break to the point where the user clicksthe mouse again.
Delete simply deletes the component.Modify pops up a window that allows the user to typein a new alternative (see next bullet).
Finish removesthe component markers, indicating that CMAT editing forthis component is finished.
4?
The ALTERNATIVE region contains alternative transla-tions of the source word or phrase.
The source word orphrase is also present as an alternative, when available,as translators may wish to leave some source languagewords temporarily in the target ext, and return to themlater.
Selecting one of the alternatives replaces the orig-inal selection for this component with the alternative,while the latter becomes an alternative in the alternativeregion.Figure 1: A typical CMAT menuAn additional menu-base editing feature allows the user tochange the morphology of a word with a single mouse ac-tion (Figure 2).
This menu changes verb inflection or thedeterminer on a noun phrase, stripping any old morphologicalfeatures before adding the new one.Using these popup menus, the user can move, replace, modify,or delete an output component with one or two mouse actions,rapidly turning the string of translated words and phrases intoa coherent, high-quality target language text.
Note that theuser is not forced to use the CMAT editor at any particular time.Its use can be intermingled with other translation activities,according to the user's preferences.2If two components with different internal forms have the same string, itis followed by a colon and an integer.3Note that this information is not always available in noun phrasetranslation.4The user may also choose to wait and remove all the markers at once,for either a selected region or the whole buffer, using a selection in the TWS'smain menu bar or a special keystroke.Figure 2: A typical CMAT morphology menu3.
The  CMAT Ed i to rAs part of the TW$, the CMAT editor is implemented in Com-mon LISP.
It communicates through CLM (the CommonLISP-Motif interface)J1\] to use Motif widgets inside of theX11 window system.The CMAT editor views text as a list of components.
These197components are of three types:1.
M\[T-generated strings.
Phrases translated by the MTsystem are represented simply as the generated targetlanguage string, and are not further processed by CMAT.2.
Glossary entries.
Phrases not translated by the MT sys-tem, but found in the user glossaries, are each representedby a component list, a list containing the source string(source language phrase), the identifier :GLOSS, and aglossary entry list: a list of the possible target languagephrases corresponding tothe source language phrase.3.
Dictionary entries.
Words not covered by- either of theabove are represented by a component list containing thesource string, the identifier :M?
and a target languagestring list: a list of the corresponding target languagewords as found in the MT system's lexicons; and finallythe identifier :DICT and a dictionary entry list: a listof target language words found in the machine-readabledictionary.The CMAT editor uses a knowledge base and a working mem-ory.
The knowledge base stores static information for acomponent's menu, while the working memory provides amapping between the knowledge base and the componentscurrently present in the target buffer.
This separation is nec-essary because any given component generally occurs morethan once in a given text, but there is only one menu associatedwith a particular component.Knowledge base structures are indexed by their componentsource strings.
These structures contain four slots, one sloteach for :GLOSS, :NT, and :DICT lists, plus a fourth slotcontaining the candidate list.
This list is a union of the firstthree lists, with the elements' positions varying to reflect cur-rent estimates of their likelihood of being chosen by the user.Initially, the items from the target language string list appearfirst in the list and glossary entries appear second, since theseitems are more likely to be the correct ranslations of a sourcestring in our domain.When a component list is passed to the CMAT editor to bedisplayed, the latter first checks to see if a structure for thecomponent already exists in the knowledge base.
If an entrydoes not exist, one is created.
Then the first component ischosen from the candidate list and displayed with bracketsin the editor window.
In the working memory, a pointer tothe knowledge base entry is stored, indexed by the displayedcomponent.When the user clicks the mouse within a CMAT component,the system must use the actual character string as the indexinto the working memory, and from there get the index intothe knowledge base.
5 The list of alternative translations forthe component can then be obtained from the knowledge basestructure.If a component is Moved in the editor window, nothingchanges in the internal representation f the CMAT editor.When a component is Deleted, the pointer in the workingmemory is removed.
If an alternative translation is chosenfrom the candidate list, the old component is replaced with anew component in the CMAT editor.
The pointer in the work-ing memory is removed from its old location and stored underthe new component.
The new candidate is also moved to thefront of the candidate list as the most likely candidate for fu-ture use.
When a component is Modified, the new alternativeentered by the user is stored in the knowledge base, and thentreated as if it had just been chosen.When the component's markers are removed, either singly oren masse, the component's pointer in the working memoryis removed, but the entry in the knowledge base remains.These are retained in order to provide a summary of the user'spreferences, for the frequent case where future translationscontain these components.
This summary can be saved as afile, which can be loaded into the knowledge base in a laterediting session, or analyzed by system developers.4.
The Evaluation of the ToolIn order to evaluate the effectiveness of this tool, we comparedediting with the CMAT editor versus editing with just the basicEmacs-like text editor in which it is embedded.
We conductedtwo experiments comparing CMAT and non-CMAT editing effi-ciency, one using monolinguals and one using translators.4.1.
Experiment IMethod.
The monolingual task was to take the output of theMT system and, using as reference an English translation thatwas previously produced manually, produce the "same" textusing either the CMAT editor or the regular editor.
The time re-quired for each text-editing session was recorded.
Keystrokesand mouse actions were automatically counted by the inter-face.As test texts, we used two of the texts from the 1992 DARPAMT evaluation.
To shorten total experiment time and providea reasonable number of sample texts, we broke each textinto two halves of roughly equal size, at paragraph breaks,resulting in four text samples.Two subjects were presented with the samples in the sameorder.
Their use of the CMAT or the plain Emacs editor onSThis is due to details of the CLM interface, and is the reason for mark-ing identical components hat have different internal data structures with acolon and an integer: otherwise there would be no way to locate the correctassociated data structure.198different samples was arranged to provide as much variationas possible in practice effects and acclimatization, so thatthese could be cancelled out during analysis.
A few dayslater, subjects repeated the procedure, reversing the use ornon-use of the CMAT editor.
Since practice ffects hould bemore uniform in a simple editing task than in translation (thetask is much less intellectually challenging), we felt that textscould be reused if practice ffects are taken into account inanalysis.Subjects were instructed to produce a "close paraphrase" ofthe example translation, since any two translators will pro-duce slightly different correct ranslations of the same text.Subjects were also instructed not to use the CMAT Modifyfunction, since it causes the editor to learn during use, makinganalysis even harder.Analysis.
Given the above ordering of test runs, one can bal-ance practice ffects, subject differences, and text differencessimply by normalizing the total editing times for a subject oneach run through the texts.
That is, if we divide the editingtime for each text by the total time for the entire set of texts inthe given run, the variation between ormalized editing timesbetween subjects hould reflect variations in the efficiency ofediting.
For example, in Figure 3, we see that for Session 1,Subject I spent a greater fraction of time using CMAT (0.2413)than Subject 2 spent editing it in a regular editor (0.2198),while for Session 2, the fraction of total time was the samewith either editor.0.40.30.2quite helpful.
It could be the case that the CMAT makes thejob easier without making it faster, but we had the definiteimpression that it makes translating faster as well as easier.We therefore investigated further.Normalized keystroke and mouse action counts are shown inFigures 4 and 5.
Here we see that while the CMAT editingsessions had 1/2 to 1/3 the number of keystrokes, they hadbetween 2 and 9 times as many mouse operations.
This issignificant, since mouse actions are slower than keystrokes.J ?
CMAT 0.50.4 ~ ~0.30.20.10.01 2 3 4 5 6 7 8Editing sessionFigure 4: Normalized keystroke counts0.5 ?
CMAT0.40.1 0.30.01 2 3 4 5 6 7 8Editing sessionFigure 3: Normalized editing timesFrom comparing these normalized times, it appears that theCMAT actually slows subjects down.
This contradicts theuniversal subjective impression of all CMAT users that it is0.20.10.01 2 3 4 5 6 7 8Editing sessionFigure 5: Normalized mouse action counts199tional information available to translators, and that measureany trade-off between quality and speed of translation.In the second experiment, he normalized total-edit time ratiosbetween the two texts for Subject 5 were essentially identicalto the rough draft ratios, indicating that this ratio is indeed agood indicator of  the relative difficulty of the two passages.It is interesting to note that Subject 4, whose data point had tobe thrown out because his CMAT times were twice the lengthof his non-CMAT times, corresponds closely to the level offamiliarity our translators had with the CMAT editor in the firstMT evaluation in 1992.
An important part of our preparationfor the 1993 MT evaluation will be training the test subjectsin the most efficient use of our tools.5.
Conclusion and Future WorkThe CMAT editor, in conjunction with often fragmentary MTand word-for-word translation, allows the translator to pro-duce high-quality translations more quickly and easily thanthe simple combination of a text editor and an online dictio-nary.
It will remain a crucial module in PANGLOSS until theMT system reaches the point of translating full sentences ona regular basis.These experiments provide initial evidence that the CMAT ed-itor is indeed effective, and have been very useful in pointingout areas for improvement:?
The current CMAT design requires the use of the mouse.Since mouse actions are often slower than keystrokes,we will provide keybindings for all CMAT commands,including viewing and selecting alternative translations.This should not be technically difficult.?
The users need to be taught he most effective strategiesfor using the CMAT, such as only using the mouse if theyare fast with it, and generally not using the CMAT aftertheir rough draft is finished.?
Currently the CMAT menu often does not contain thecorrect answer, due to the low-quality of the online dic-tionary.
This dictionary is currently being replaced, andwe expect he coverage to be much improved for the nextMT evaluation.3.
Kugler, M., G. Heyer, R. Kese, B. yon Kleist-Retzow, G.Winkelmann, 1991.
The Translator's Workbench: An Envi-ronment for Multi-Lingual Text Processing and Translation.
InProceedings ofMT Summit III, Washington, DC.4.
Mann, W., 1983.
An Overview of the Penman Text GenerationSystem.
In Proceedings of the Third AAAI Conference (261-265).
Also available as USC/information Sciences InstituteResearch Report RR-83-114.5.
Nirenburg, S., P. Shell, A. Cohen, P. Cousseau, D. Grannes,C.
McNeilly, 1992.
Multi-purpose Development and Opera-tion Environments for Natural Language Applications, In Pro-ceedings of the 3rd Conference on Applied Natural LanguageProcessing (ANLP-92), Trento, Italy.References1.
B~icker, A., C. Beilken, T. Berlage, A. Genau, M. Spenke, 1992.CLM- A Language Binding for Common Lisp and OSF/Motif:User Guide and Reference Manual, Version 2.1, Technical re-port, German National Research Center for Computer Science.2.
Farwell, D., ?.
Wilks, 1990.
ULTRA: a Multi-lingual MachineTranslator.
Memoranda in Computing and Cognitive ScienceMCCS-90-202, Computing Research Laboratory, New MexicoState University, Las Cruces, NM, USA.201
