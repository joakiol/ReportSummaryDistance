CATEGORIAL  GRAMMAR AND DISCOURSE REPRESENTATION THEORYReinhard MuskensInstitute for Language Technology and Artificial Intelligence (ITK)PO Box 90153, 5000 LE, Tilburg, The Netherlands, R.A.Muskens@kub.nlAbstractIn this paper it is shown how simple texts that canbe parsed in a Lambek Categorial Grammar canalso automatically be provided with a semantics inthe form of a Discourse Representation Structurein the sense of Kamp \[1981\].
The assignment ofmeanings to texts uses the Curry-Howard-VanBenthem correspondence.O.
INTRODUCTIONIn Van Benthem \[1986\] it was observed that theCurry-Howard correspondence between proofsand lamtxla terms can be used to obtain a very el-egant and principled match between LambekCategorial Grammar and Montague Semantics.Each proof in the gambek calculus is matchedwith a lambda term in this approach, and VanBenthem shows how this lambda term can be in-terpreted as a recipe for obtaining the meaning ofthe expression that corresponds to the conclusionof the Lambek proof from the meanings of itsconstituent parts.Usually the semantics that is obtained in thisway is an extensional variant of the semanticsgiven in Montague \[1973\] (Hendriks \[1993\]sketches how the method can be generalized forthe full intensional fi'agment).
However, it is gen-erally acknowledged nowadays that the empiricalcoverage of classical Montague Grammar fallsshort in some important respects.
Research insemantics in the last fifteen years or so has in-creasingly been concerned with a set of puzzlesfor which Montague's original system does notseem to provide us with adequate answers.
Thepuzzles I am referring to have to do with the intri-cacies of anaphoric linking.
What is the mecha-nism behind ordinary cross-sentential naphora,as in 'Harry has a cat.
He feeds it'?
Is it essen-tially the same mechanism as the one that is atwork in the case of temporal anaphora?
I low is itpossible that in Geach's notorious 'donkey'sentences, uch as ' I f  a farmer owns a donkey, hebeats it', the noun phrase 'a farmer' is linked tothe anaphoric pronoun 'it' without its havingscope over the conditional and why is it that thenoun phrase is interpreted as a universal quanti-tier, not as an existential one?While it has turned out rather fi'uitless to stt, dythese and similar questions within classical Mon-tague Grammar (MG), they can be studied prof-itably within the framework of DiscourseRepresentation Theory (DRT, see Heim \[1982,1983\], Kamp \[1981\], Kamp & Reyle \[1993\]).This semantic theory offers interesting analysesof tile phenomena that were mentioned above andmany researchers in the field now adopt someform of DRT as the formalism underlying theirsemantical investigations.But the shift of paradigm seems to have itsdrawbacks too.
Barwise \[1987\] and Rooth\[198711, for example, observe that the new theorydoes not give us the nice unified account of normphrases as generalized quantifiers that Monta-gut 's  approach had to offer and it is also clearfrom Ka,n 1) & Reyle \[1993\] that the standardDRT treatment of coordination in arbitrary cate-gories cannot claim the elegance of theMontagovian treatment.
For the purposes of thispaper a third consequence of the paradigm shift isimportant.
The Curry-Howard-Van B enthemmethod of providing l~mlbek proofs with mean-ings requires that meanings be expressed astyped lambda terms.
Since this is not the case instandard DRT, the latter has no natural interfacewith Lambek Catego,'ial Grammar.It seems then that the niceties of MG and DRThave a complementary distribution and that con-siderablc advantages could be gained f rommerging the two, provided that the best of bothworlds can be retained in the merge.
In fact thelast eight years have witnessed a growing conver-gence between the two sem:mtic frameworks.
Thearticles by Barwise and Rooth that were men-tioned above are early examples of this trend.Other important examples are Zeew~t \[1989\] andGroenendijk & Stokhof \[1990, 1991\].None of these l)apers gives the combinationof DRT and type logic that is needed for attach-ing the first to Lambek's calculus, but inMuskens \[forthcoming\] it was shown how thenecessary fusion can be obtained.
The essentialobserwttion is that the meanings of DRT's dis-course representation structures (boxes) are firstorder definable relations.
They can thus be ex-pressed within first order logic and within thefirst order part of ordinary type logic (i.e.
thelogic that was described in Church \[1940\], Gallin\[197511 and Andrews \[1986\]).
This allows us to508CII ~- Clln l -n  s l - sLxL in I- n n, n \ s t- s 17 L\]n, (n \ s) / n, n i- s \ [ /R \ ]n, (n \ s) / n t- s / n s I " sn,(n \ s ) l  n,(sl  n) \ sk  s\[\ L\]\[ \  \]~:1(n \ s ) ln , ( s ln )  \ s V n \ sCH ~ ell s / (n \ s),(n \ s) / n,(s / n) \ s F s(s / (n \ s)) / on, or, (n \ s) / n, (s / n) \ s F sS t " S I lL\]\[I L\[IlL\](s / (n \ s)) I on, cn, (n \ s) I n, ((s I n) \ s) I cn, cn F- sfig.
1.
Proof lor 'a ma,t adores It wonlan'treat noun phrases as expressions of a siilgle type(a generalized kind of generalized quantifiers)and to have a simple rule for coordination in arbi-trary categories (see Muskens \[forthcoming\] forIt discussion of the latter).
In this paper we buildon the result and show how the system can alsobe attached to Lambek Categorial Granun,'tr.The rest of the paper consists of five main scc-tions.
The first takes us from English to l~ambekproofs and the second takes us from Lambekproofs to semantical recipes.
After the third sec-tion has described how wc can emulate boxes intype logic, the fourth will take us from semanticalrecipes to lx)xes and tile fifth from boxes to truthconditions.1.
FROM ENGLIS I I  TO LAMBEK PROOFSI shall assume familiarity with I~tmbck's calculusand rehearse only its most elementary features.Starting with it set of basic categoric.v, which fortile purposes of this paper will be {txt, s, n, cn}(for texts, sentences, names and common nouns),we define it category to be either a basic categoryor anything of one of the forms a / b or b \ a,where a and b are categories.
A sequent is an ex-pression 7" l- c, where T is a not>empty finite se-quence of categories (the antecedent) and c (thesuccedent) is a category.
A sequent is provable ifit can be proved with the help of the followingGentzen rules.~\[AX\ ]cL-cTt-I> U>a, VFcU, alb, T, Vt-cTt -b  U,a, V l -cU,T,b \a,  V t -cI /L \ ]\[\ L\]"s: bl_- a_ \[/RITl-albb,'rl- aIX *el 7"l-b \aAn example of a proof in this calculus is given infig.
1, where it is shown that (s / (n \ s)) / on, cn,(n \ s) / n, ((s / n) \s)  / cn, cn }- s is a provable se-quent.
If the categories in the antecedent of thissequent are assigned to the words 'a ' ,  'man ' ,'adores', 'It' and 'woman'  respectively, wc Callinterpret he derivability of tile given sequent ,'issaying that these words, in this order, belong tothe category s.2.
FROM LAMBEK PROOFS TOSEMANTICAL  I~I,~CI PESProof theory teaches us that there is a close co,-respondence between proofs and lanlt)da terms.The lambda term which corresponds to a givenproof can be obtained with the help of the so-called Curry-ltoward correspondence.
VanBcnthem \[1986\] observed that the lambda termthat we get in this way also gives us a COlTCSpOn-dence between L:unbek proofs on the one handand the intended meanings of the resulting ex-pressions on the other.
In the present expositionof the Curry-I loward-Van Benthem correspon-dence I sh;dl follow the set-up and also tile nota-tional conventions of I lendriks 111993\].
For moreCxl)lanation, the reader is rcferred to this work, toVan Benthenl \[1986, 1988, 1991\[ and toMoortgat \[198811.The idea behind the correspondence is that wematch each rule in the Lambek calcuhis with acorresponding senvintic rnle and that, for eachp,'oof, we build an isomorphic tree of semanticsequenls, which we define as expressions "/"F- Y,where 7" is a seqt,ence of variables and y is ahunbda term with exactly the variables in 7" free.The semantic rules that are to match the rules of5091't- P?
v1-v P1-P\[\L\]v' 1- v' v, 1"" 1- t'"(v) \[/Z,\]v,R,v' 1- R(v')(v) \[/R\]v,R F Zv'.R(v')(v) p'1- p'v,R, QFQ(3.v,.R(v,)iv)) , \ [ \L\]\[\R\]R, 0 F Zv.
O(Zv'.
R(v'Xv))Q',& Q F Q'(Zv.Q(Xv'.
R(v')(v)))p"1- p" \[/L\]\[/L\]P'1- P' D,P,R,Q 1- D(P)(Xv.Q(Xv'.
R(v')(v))) l/L\] D, P, R, D', P' 1- D(P)(Zv.
D'(l")(Zv'.
R (v')(v)))fig.
2.
Semantic tree for 'a man adores a woman'the Lambek calculus above are as follows.
(Tileterm y\[u := w(fl)\] is meant to denote the result ofsubstituting w(fl) for u in 7.
)~, \ [AX\ ]x1- x~'Ffl  v', ,~v'1-r ,....,, ~, ' L /L \ ]U,w, 7,  V '1-  f lu:= wq/)\]7f'k~ u ' , .
, v 'k  r "\L\]u', T',w, V' 1- r\[;,:= ,,,qj)\] t7",v1-a \[IRI)"1- Zv.v,T'1- a \[\R\]T'1- Zv.aNote that axioms and the rules l/L\] and \[~L\] in-troduce new free variables.
With respect o thesesome conditions hold.
The first of these is thatonly variables that do not already occur elsewherein the tree may be introduced.
To state the secondcondition, we assume that some fixed functionTYPE from categories to semantic types is given,such that TYPE(a / b) = "rYPg(b \ a) = (TYPE(b),TYPI~a)).
The condition requires that the variablcx in an axiom x 1- x must be of TYPE(c) if x 1- xcorresponds to c ~ c in the Lambek proof.
Also,the variable w that is introduced in l/L\] (\[\L\])must be of (TYPE(b), TYPE(a)), where a / b (b \ a)is the active category in the corresponding se-quent.With the help of these rules we can now builda tree of semantic sequents that is isomorphic tothe Lambek proof in fig.
I; it is shown in fig.
2.The semantic sequent at the root of this tree givesus a recipe to compute the meaning of 'a manadores a woman' once we are given the meaningsof its constituting words.
Let us suppose momen-tarily that the translation of the determiner 'a '  isgiven as the term ZI"XP3x(P'(x) ^  P(x)) of type(et)((et)t) and that the remaining words are trans-lated as the terms man, adores and woman oftypes el, e(et) and et respectively, then substitut-ing ZP'ZP3x(P'(x) ^ P(x)) for D and for D '  inthe succedent and substituting man, adores andwoman for P, R and 1" gives us a lambda termthat readily ,'educes to the sentence 3x(man(x) ^By(woman(y) ^ adores(y)(x) ) .The same recipe will assign a meaning to anysentence that consists of a determiner followed bya noun, a transitive verb, a determiner and a noun(in that order), provided that meanings for thesewords are given.
For example, if we translate theword 'no'  as ZP'XP~qx( l"(x)  ^ P(x)) and'every'  as ZPgvPVx(P'(x) ---, P(x)), substitute tilefirst term for D, the second for D ' ,  and man,adores and woman for P, R and P '  as before, weget a term that is equivalent o - -3x(man(x)  ^Vy(woman(y) --, adores(y)(x))), the translationof 'no mall adores every womiul'.3.
BOXES IN TYPE LOGICIn this section I will show that there is a naturalway to emtflate tile DRT language ill tile first-or-dcr part of type logic, provided that we adopt afew axioms.
This possibility to view DP, T as be-ing a fragnaent of ordinary type logic will enableus to define our interface between CatcgorialGrammar and DRT in the next section,We shall have four types of primitive objectsin our logic: apart from the ordinary cabbagesand kings sort of entities (type e) and the twotruth values (type t) we shall also allow for what iwoukl like to call pigeon-holes or registers (typen) and for states (type s).
Pigeon-holes, whichare the things that are denoted by discourse refer-ents, may be thought of as small chunks of spacethat can contain exactly one object (whatever itssize).
States may be thought of as a list of thecurrent inhabitants of all pigeot>holcs.
States arcvery much like the program states that theoretical510computer scientists talk about, which are lists ofthe current values of all variables in a given pro-gram at some stage of its execution.In order to be able to impose the necessarystructure on our m~xlels, we shall let V be somefixed non-logical constant of type ~(se) and de-note the inhabitant of pigeon-hole u in state i withthe type e term V(u)(0.
We define i\[u I... unl \] tobe short forVv((l i  Ir?
V A... A It n * V) ~ V(v)(i) = V('e)(\]')),a term which expresses that states i and j differ atmost in u I ..... un; i\[\]j will stand for tile formulaVv(V(v)( i )  = V(v)(\])).
We impose the followingaxioms.AX1 ViVvVx  3j(i\[v\]\] ^V(v)(\]) =x)AX2 ViVj(i\[\]\]---* i= j )AX3 It ~ It"for each two different diseonrse referents(constants of type ~) u and u'AX1 requires that for each state, each pigeon-holeand each object, there must be a second state thatis just like the first one, except that the given ob-ject is an occupant of the given pigeon-hole.
AX2says that two states cannot be different if theyagree in all pigeon-holes.
AX3 makes sure thatdifferent discourse referents refer to different pi-geon-holes, so that an update on one discoursereferent will not result in a change in some otherdiscourse referent's value.Type logic enriched with these three first-ordernon-logical axioms has the very useful propertythat it allows us to have a tk~rm of the 'unselectivebinding' that seems to be omnipresent in naturallanguage (see Lewis \[1975\]).
Since states corre-spond to lists of items, quantifying over statescorresponds to quantifying over such lists.
Thefollowing lemma gives a precise formulation ofthis phenomenon; it has an elementary proof.UNSELF, CI'IVE BINDING LEMMA.
Let Ul ..... un beconstants of type ~, let xl ..... x n be distinct vari-ables of type e, let q~ be a formula that does notcontain j and let qo'be the result of the simultane-ous substitution of V(ttl)(j ) for Xl and ... andV(un)(j) for xn in ep, then:I=Ax Vi(3j( i \[to ..... un Y AtD) ~ ~Xl...  ~Xnq~ )I=Ax Vi(Vj( i \ [u,  ..... u,,\]j-," q)) -,-," Vxl... Vx,,q))We now come to the enmlation of the DRT lan-guage in type logic.
Let us fix some type s vari-able i and define (tO t = V(u)(i) for each discoursereferent (constant of type J~) u and (/)i = t foreach type e term t, and let us agree to writel'w for X/l'(@,"rlRT 2 for  t~..i( R( 171l '~ ("f2) \]" )i~) is v 2 for )d((v/)"=(v2) ,if 1' is it term of type et, R is a term of type e(et)and the z's are either discourse referents or termsof type e. This gives us our basic conditions ofthe DRT language as terms of type st.
In order tohave complex conditions and boxes as well, weshall writenot ?
for ,a.i-,3jO(O0),?
or 'I t for M3j(O(i)( j)  v ff*(O(J)),q' ~ lit for )dVj(O(i)(\]) --+ 3k~P(j)(k)),\[ul...u,, Ib  ..... y,,,\[ forZiZj(itu, ..... u,,lj A yIQ/) A...A 'gin(J)),O ;  q,r for MZf\]k(O(i)(k)  ^ ql(k)(\])).Ilere ?
and qJ stand for any tc,'m of type s(st),which shall be the type we associate with boxes,:rod the y's stand for conditions, terms of type st.\[ttl.
"It,, \]Yl ..... Ym\] will be our linear notation forstandard DRT boxes and the last clause elnbodiesan addition to the standard DRT language: in or-der to be able to give conlpositional translationstO natural ilngu'lge expressions and texts, we bor-row the sequencing operator ' ; '  from the usualimperative programming hmguages and stipulatethat a sequence of boxes is again a box.
The fol-lowing useful lemma is easily seen to hold.MI-k~GING LEMMA.
If /~' do not occur in any of~," thenI=^x \[/i I g\[ : \ ] / r  I g ' \ ]  = I/i if' I g ?
\ ]Tim present emulation of DRT in type logicshould be compared with tile semantics for DRTgiven in Groenendijk & Stokhof \]199l\].
WhileGroenendijk & Stokhof giw; a Tarski definitionfor DRT in terms of set theory and thus interpretthe object DRT language in a metalanguage, theclauses given above are simply abbreviations onthe object level of standard type logic.
Apart fromthis difference, tile chmses given above and tileclauses given by Oroenendijk & Stokhof aretnueh the same.4.
FROM SEMANTIC RECIPES TOBOXESNow that we have the DRT language as it part oftype logic, connecting l~ambck proofs for sen-tenccs and texts with Discourse Representation511Structures is just plain sailing.
All that needs tobe done is to define a function TYPE of the kinddescribed in section 3 and to specify a lexicon forsome fragment of English.
The general mecha-nism that assigns meanings to proofs will thentake care of the rest.
The category-to-type func-tion TYPE is defined as follows.
WYPE(txt)TYPE(s) = s(s0, TYPE(n) = ~ and TYPE(cn) =z(s(st)),  while TYPE(a / b) = TYPE(b \ a) =(TYPE(b), TYPE(a)) in accordance with our previ-ous requirement, It is handy to abbreviate a typeof the form at( .
.
.
(ctn(s(st))... ) as \ [a , .
.
.
a,,\], sothat the type of a sentence now becomes \[1 (abox!
), the type of a common noun \[or\] and so on.In Table 1 the lexicon for a limited fragment ofEnglish is given.
The sentences in this fragmentare indexed as in Barwise \[1987\]: possible an-tecedents with superscripts, anaphors with sub-scripts.
The second column assigns one or twocategories to each word in the first column, thethird column lists the types that correspond tothese categories according to the function TYPEand the last column gives each word a translationof this type.
Here P is a variable of type \[or\], Pand q are variables of type \[\], and v is a variableof type ~r.Let us see how this immediately provides uswith a semantics.
We have seen before that ourLambek analysis of (1) provides us with a se-mantic recipe that is reprinted as (2) below.
If wesubstitute the translation of a 1, AP'ZP(\[u I 1\] ;P'(Ul) ; P(Ul) ) for D in the succedent of (2) andsubstitute Av\[ \[ man v\] for P, we get a lambdaterm that after a few conversions reduces to (3).This can be reduced somewhat further, for nowthe merging lemma applies, and we get (4).Proceeding further in this way, we obtain (5), thedesired translation of (1).
(I) A I man adores  a = woman(2) D,P,R,D" I" F D(l')(Av.D'(l")(Zv'.le(v3(v)))(3) ZP(\[Ul\[ \] ; \ [ Iman it1\] ;D'(P')(Zv'.R(v)(ul))(4) ZP(\[ul lman Ul\] ; D'(P')(Zv'.R(v3(u~)))(5) \[U 1 tt 2 I man u 1, woman u> u I adores u2\](6) Every  ~ man adores  a 2 woman(7) \[I \[,tl \[ ,,,a. ,1,1 \[a= I woma,, u>u\] adores u2\] \](8) D,P,R,D ;1"~- D'(l")(Xv'.D(P)(Zv.R(v')(v)))(9) \[U2 \[ woman 112, \[ttl l man 11l\] :=?
"\[ I ul adores u2\]\](10) A ~ man adores  a 2 woman.
Sh%abhors  him1(1 l) \[It I It 2 \[ mat t  It1, womal t  tt 2, It I adores u 2,u 2 abhors 111\](12) I f  a ~ man bores  a 2 woman she=ignores  h im I(13) \[I \['11 u21 ' ' 'a" ul, woma, u> u~ bores' u2\]\[ tu2 ignores ul\]\]The same semantical recipe can be used to obtaina translation fo," sentence (6).
we find it in (7).But (1) and (6) have alternative derivations in theLambek calculus too.
Some of these lead to se-mantical recipes equivalent to (2).
but others leadEXPR.
CATEGORIES TYPEa" (s / (n \ s)) / en \[\[~\]D\]\]((s / n) \ s) / cnno" (s / (n ', s)) / cn((s / n) \ s) / cnevery"  ( s / (n \s ) ) / cn((s / n) \ s) / cnMary  n S / (n \ s)(s / n) \ she  n s I (n \ s) \[\[or\]\]h im n (s / n) \ s II=\[1who (cn \ cn) / (n \s)  \[\[~r\] \[zc\]or\]man cn \[or\]s t inks  n \ s \[or\]adores  (n \ s) I n \[xx\]i f  (s / s) / s \[\[\]\[\]\]s \ (txt / s) \[\[\]\[\]ltxt \ (txt / s)and  s \ (s / s)or  s \ (s / s)TRANSI.AT1ONAP'ZI'(\[u,, \[1 ; l"(u,) ; l '(u,))\[\[or\]Eor\]\] Z/"ZI'\[ I ,,ot(\[u,, 171 ; P'(u,,) ; P(u,,))\]\[\[or\]D\]\] AP'ZI'\[I \[ (Iu,, 1\] ; l"(a,,)) -=> l'(a,,)\]\[\[or\]\] AP(\[un I u, is mary\] ; P(un))~(  l'( u,,) )Zl'( l'( u,,) )Zl")a'Xv(l'(v) ; l"(v))Zv\[ \[ ms ,  v\]/,v\[ I stinks v\])~v?~v\[ I v adores v'\]Ipq\[ lp ~ q\]tl)q(p ; q)\[\[\]\[\]\] ;wq(p ; q)\[\[\]\[\]\] ~wq\[ Ip orq\ ]Table 1.
The Lexicon512to recipes that are equivalent to (8) (for lnore ex-planation consult Hendriks \[1993\]).
If we applythis recipe to the translations of the words in (6),we obtain (9).
the interpretation of the sentence inwhich a = woman has a wide scope specificreading and is available for anaphoric referencefrom positions later in the text.I leave it to the reader to verify that the littletext in (10) translates as (11) by the same method(note that the stop separating tile first and secondsentences i lexicaliscd as an item of category s \(txt/ s)), and that (12) translates as (13).
A readerwho has worked himself through one or two ofthese examples will be happy to learn fromMoortgat \[11988\] that there are relatively fastProlog programs that automatically find all se-mantic recipes for a given sentence.5.
FROM BOXES TO TRUT l lCONDIT IONSWc now have a way to provide the expressio,ls ofour fragmcnt automatically with Discourse Re-presentation Structures which denote relationsbetween states, but of course we arc also inter-ested in the truth conditions of a given text.
Thesewe equate with the domain of the relation that isdenoted by its box translation (as is done inGroenendijk & Stokhof \[11991\]).Theoretically, if we are in the possession of a box(/), we also have its truth conditions, since theseare denoted by the first-oMer terln xiqj(q)(i)(j)).but in practice, reducing the last term to somemanageable first-order term may be a less thantrivial task.
Therefore we define an algorithmicfunction that can do the job for us.
The functiongiven will in fact be a slight extension of a sinlilarfunction defined in Kamp & Reyle \[1993\].First some technicalities.
Define adr(~),  theset of active discourse referents of a box ~1), byadr(\[ii I }'-\]) = {/i} and adr((D ; Ill) = adr(qO Uadr(~lO.
Let us define l l t /u\ ] l ,  tile substitution ofthe type e term t for the discourse referent u in theconstruct of the tx)x hmguage F,, by letting it / ttlu= t and \ [ t /u \ ]u '  = u'  if a ' ,  u; for type e terlns t'We let \ [ t /U \ ] t '= t'.
For complex constructs It/ I \[1I 'is defined as follows.I.t / u\]l 'v : Pit~ u\]v\[t I ulvlRv 2 : llt I u\]vlR\[t I u\]v 2\[t / u\](v 1 is ~c2) = \[t / Ill'IT 1 iS llt / u\]*'2\[t l u\]not @ = not \[t l u\ ]?\ [ t lu l (q,  or ~P) = \ [ t lu l?or \ [ t lu \ ]~ l /\ [ t /u l (q '~  ip) = \ [ t /u \ ]q~ \[t/u\[~l/if u C adr( qO\ [ t lu \ ] (q '~  tl 0 = lt lu\]4)=~ ll/if u G adr(@)l t /u \ ] \ [~ IY~ .
.
.
.
.
h,,\] =lift \] \[t / Ulrl ..... 14 / ulh,,l if u q~ { ~ }\ [ i t / .
\ ] \ [F t lh  ..... y,,;l = \[~lY~ ..... Y,,,\]i fuU  {ft}lit / Ul(?
; ~I*) : \[t / ,\] (I) ; \[t / u\] ~I/if u e~ adr( (b)It~ u\]((P ; ip) = 17/u\]q) ; Illif u ~ adr( q 0The next definition gives our translation function1" from boxes and coMitions to first-order formu-lae.
The wuiable x that is appearing in the sixthand eighth chmscs is supposed to be fresh in bothcases, i.e.
it is defined to be the first variable insonic fixed oMering that does not occur (at all) inq) or in tl*.
Note that the sequencing operation ; isassociative: q, ; (q/; ~) is equivalent with (q~ ; lit); E for all q), q/and ~.
This lneans that wc mayassume that all boxes are either of the form \[Ft \]\] \]  ; (P or of tim form \ [ i i \ ]  ?'\].
We shall use theform I F/: q) to cover both cases, thus allow-ing the possibility that q~ is clnply, if ~1~ is elnpty,q~ ~.. q/denotes Ill.(p4~ : p (@O:fl,h:,)~ : R(~:~ll(T2)t 1(T 1 is~2)'t = (1;1)" = ('V2)"(not q))f = -~(q))l(4) o r  l ist  q)t' v Ipl((\[.
ii \[ ~; 1 ; 40 ~ q,)rVx( lx  / ul((\[Ft \] ~; \] ; @ ~ qO) t( ( \ [ I r z  .
.
.
.
.
~,,1 ; ? )
:~  qO* =(), j  t. ^ .
.
.
^ h .
r )_ , .
( (b  ::> ~I/) t( I .
/ / I~- \ ] ;  q,)-r = 3x( lx / .
\ ] ( \ [ / / l  ~7\] ; q,))l( \ [ \ [Ys  ..... 7,,,1; q,)l = y/ l  A ... A ym r n rillBy way of examl)le, the reader may verify that thefttnction 1" sends (10) to (11).
(14) \[\[ \[ul "2 I ma.
ul, woman u2, u 1 bores "2\[\[ \]u 2 ignores ul\] \](15) Vxrr2((man(xl)  ^ woman(x2) ^bores(xl)(x2) ) ~ ignores(x2)(Xl) )It is clear that the function ~ is algoritlunic: ateach stage in tile reduction of a box or conditionit is determined what step should be taken.
Thefolk)wing tl~eorem, which has a surprisingly te~dious proof, says that the function does what it isintended to do.573TIIEOREM.
For all conditions yand boxes 05:I=A?
~m* = M3j(q~(i)(,/))I=AX/3t/i/I" .~ \]tREFERENCESAndrews, P.B.
: 1986, An Introduction toMathematical Logic and Type Theory: toTruth through Proof, Academic Press,Orlando, Florida.Barwise, J.: 1987, Noun Phrases, GeneralizedQuantifiers and Anaphora, in P.
G',irdenfors(ed.
), Generalized Quantifiers, Reidel,Dordrecht, 1-29.Van Benthem, J.F.A.K.
: 1986, Essays in LogicalSemantics, Reidel, Dordrecht.Van Benthem, J.F.A.K.
: 1988, The LambekCalculus, in: R.E.
Oehrle, E. Bach and D.Wheeler (eds.
), 1988, Categorial Grammarsand Natural Language Structures, Reidel,Dordrecht.Van Benthem, J.F.A.K.
: 1991, Language inAction, North-Holland, Amsterdam.Church, A.: 1940, A Formulation of the SimpleTheory of Types, The Journal of SymbolicLogic 5, 56-68.Gallin, D.: 1975, Intensional and Higher-OrderModal logic, North-Holland, Amsterdam.Groenendijk, J. and Stokhof, M.: 1990, DynamicMontague Grammar, in L. K,'ihmin and L.Pdlos (eds.
), Papers from the SecoJrdSymposium on Logic attd Language,Akaddmiai Kiad6, Budapest, 3-48.Groenendijk, J. and Stokhof, M.: 1991, DynamicPredicate Logic, Linguistics and t'hilosophy14,39-100.Heim, I.: 1982, The Semantics of Definite amlIndefinite Noun Phrases, Dissertation,University of Massachusetts, Amherst.Published in 1989 by Garland, New York.Heim, I.: 1983, File Change Semantics and theFamiliarity Theory of Definiteness, in R.B;duerle, Ch.
Schwarze and A. yon Stechow(eds.
), Meaning, Use attd Interpretation ofLanguage, De Gruyter, Berlin, 164-189.Hendriks, H.: 1993, Studied Flexibility, ILLCDissertation Series, ILLC, University ofAmsterdam.Janssen, T.: 1983, Foundations and Applicationsof Montague Grammar, Dissertation,University of Amsterdam.
Published in 1986by CWI, Amsterdam.Kamp, H.: 1981, A Theory of Truth and SemanticRepresentation, i  J. Groenendijk, Th.
Janssen,and M. Stokhof (eds.
), Formal Methods in theSttuly of Language, Part L MathematischCentrum, Amsterdam, 277-322.Kamp, H. and Reyle, U.: 1993, From Discourseto Logic, Kluwer, Dordrecht.Lewis, D.: 1975, Adverbs of Quantification, in E.Keenan (ed.
), Formal Semantics of NaturalLanguage, Cambridge University Press, 3-15.Montague.
R.: 1973, The Proper Treatment ofQuantification in Ordinary English, in R.Montague, Formal Philosophy, YaleUniversity Press, New Haven, 1974, 247-270.Moortgat, M.: 1988, Categorial Investigations,Foris, Dordrecht.Muskens, R.A.: forthcoming, A CompositionalDiscourse Representation Theory, to appear inthe proceedings of the Ninth AmsterdamColloquium.Rooth, M.: 1987, North Phrase Interpretation iMontague Grammar, File Change Semantics,and Situation Semantics, in P.
G~,irdenfors(ed.
), Generalized Quantifiers, Reidel,Dordrecht, 237-268.Zcevat, H.: 1989, A Compositional Approach toDiscourse Representation Theory, Linguisticsarid l'hilosophy 12, 95-131.514
