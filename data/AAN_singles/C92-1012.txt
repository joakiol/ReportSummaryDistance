Towards Developing Reusable NLP DictionariesP im van  der  E i j k  and  Laura  B loksma and Mark  van  der  KraanResearch  l l l s t i tu tc  for l ,angt, age and  SpeechFoundat ion  for I ,anguage Techno logyState  Un ivers i ty  of Ut rechtThe  Nether landsvandere i jk{~let .
ruu.n lAbst ractDevelopment of reusahle dictionaries for NI,Papplications requires a carefully designed lexi-cological framework, a lexical acquisition strat-egy, an integrated evelopment toolbox, andfacilities to generate dictionaries for client ap-plications.
This paper presents results of tileLEXlC projecO, which was set up to preparethe development of large multilingual lexieal re-sources.Kt;ywords:  lexicons, tools, large-scale re-sources, typed feature structures.1 In t roduct ion1.1 Common L inguis t ic  ResourcesA large amount of the investments in the developmentof any NLP application is spent on the construction ofwhat one might call "large databases of lexieal and gram-matical resources".
These resources could in principle heuseful for many applications although they hardly everare: due to the lack of agreement on the definition of ba-sic notions and of consensus on the analysis of linguisticphenomena they are often linked too closely to specificapplications.
Moreover, given the generally limited sizeand duration of NLP projects both quantity and qualityof such project-specific databases are disappointing.In this paper we will discuss results from the LExlcproject, a feasibility study preparing large-scale develop-1The Lexic project wan financed and supported by thethree project partners: Philips Research, developing tileRosetta machine translation system, the Foundation for Lan-guage Technology, participating in tile Eurotra project, andVan Dale, one of the lnaln dictionary publishers in theNetherlands, as well as by tile the European Commission,and the l)utch ministries of Education and l"coaomic Af-fairs.
Details of the project are discussed in \[van tier Eijk ctal., 1991).The ~tuthors want to thattk Anne van Bolhuis, Joy lIcrk-lotz, Jeroen Fokker and Tim Dumas for contribution to theactivities discussed in this paper.irleut of s. reusabh!
lexical database, started hy a consor-tium ef industrial and university partners.
The lexica\[database is designed to consist of an integrated packageof two monolingual dictionaries for I)utch and Spaaishand the bilingual dictionaries relating the~ languages.The consortium comprised a dictionary publisher as wellas NLP application developers, giving it the unique op-portunity of confronting the large body of exl)erience,infrastructure and existing data of publishers with therequirements of a new class of profe~qional users.Another interesting aspect of the projcct was thatit addressed the whole spectrum of issues in lexiealdatabase development, from lexical acquisition to serv-ing heterogeneous client applications.
In the current ab-sence of arty standard for tile (grammatical) content ofthe dictionary (e.g.
standardized sets of grammaticMfeatures) the reusability of a dictionary can only be eval-uated in terms of usability for some target applications.1.2 S t ructure  of  the paperSection 2 discusses the issue of acquisition of lexical data.Section 3 introduces the implementation formalism andtools.
The lexicon architecture is discussed in section 4.Conversion of data to client applications of the databaseis discussed in section 5.2 Acqu is i t ion2.1 St rateg iesThere are three potentially useful strategies to developlarge lexical resources, which are not ill principle mutu-ally exclusive.MRDs The extraction of data from machine-readabledictionaries has received nmch attention ill the pastdecade.
In our view tile usefulness of existing mate-rial for NLP application has been somewhat overesti-mated.
Traditional dictionaries are oriented towards amarket of hlll/lau constlu3ers~ who coustllt the dictio-nary for entirely different reasons than N LP applications.For instance, most of the information in NhP dictio.uaries is concerned with the grammatical description ofAc:rf!s DI!
COLING-92, NAh'H~S, 23-28 AOt'rr 1992 5 3 l'l~oc, o1: COLING-92, NANTI!S, AU(;.
23-28, 1992words, which in many dictionaries i only rudimentarilyavailable ~.Furthermore, given that humans can use their intel-ligence and knowledge of the language(s), much infor-mation is only present in unformalized efinitions andexamples.
As discussed in e.g.
\[MeNaught, 1988\], it isoften feasible to extract (relatively) formalized informa-tion, but the cost-effectiveness of autmnatic extractionof information from less formalized ata is highly ques-tionable.From this discussion it follows that MRDs atone can-not be the source for NLP dictionaries.
In section 2.2 wewill discuss in more detail the evaluation of the potentialsources of data for our specific purposes.Corpora  Automatic extraction of lexical features byapplying various pattern recognition techniques to largebodies of text has received some attention recently (cf.e.g.
\[Zernik and Jaeobs, 1990\]).
tlowever, the infor-mation needed for our applications cannot be extractedfrom corpora yet, although important improvements canbc expected in the following years.Lex icography  Given the present inadequacy ofMRDs and corpus-related tools, manual abour is indis-pensable for lexicon development.
The tools describedin section 3 have been developed as a 'workbench' tosupport these lexieographical ctivities.
We will showthat this tool allows for easy integration of informationextracted from MRDs with lexicographic editing.2.2 SourcesEva luat ion  Measure  It is difficult to assess the"reusability" of existing data without an evaluation mea~snre, i.e.
without knowing .for what purpose the datashonld be usable.
This is especially difficult in the caseof grammatical features.
We developed a lexicon frag-ment (implemented as TFS type hierarchy, cf.
section3) defining the classification scheme for the monolingualdictionaries.
This fragment is inspired by I fPSG andGB, and incorporates many of the (innovative) distinc-tions developed by ttm client applications Eun.OTItA andROSETTA.
It is, however, much more lezicalistthan thesesystems.Eventually, all lexical entries in the two languagesshould be described using this scheme, so that they canbe readily converted to client applications.
The datathat can be extracted from a potential source has beeninterpreted with respect o this classification scheme toassess the amount of information contained in it.Data  Ana lys i s  The machine-readable sources we con-sidcred are the existing Van Dale Dutch monolingualand bilingual Dutch-Spanish machine-readable dictio-nary and the CELEX lexical database.
From our eval-uation it followed that existing MRDs for Dutch (as foralmost all other languages) contain only a small part ofthe information eeded by NLP applications.~Well-structured dictionaries like \[Longman, 1987\] are animportant exception to this, cf.
\[Boguraev and Briscoe,t989\],Fortunately, the CELEX lexical database has enricheda selection of 30000 entries of the "Van Dale Dictionaryof Contemporary Dutch" with grammatical information,taking into account the requirements of a number of(prototype) NLP applications under development in theNetherlands.
A large amount of information eeded forour target applications can be converted automaticallyfrom this database.
The entries, stored in a relationaldatabase, can be imported into the Dutch lexicon usingthe TFS constraint solver similarly to the conversion toclient applications ( ee section 5).
The Cr.gx dictionaryhas historic links to tile Van Dale dictionaries (especiallywith respect o reading distinction), which greatly sim-plifies integration of these sources.With respect o translation information we found thatthe "raw" translational data could be extracted easilyfrom the Vail Dale bilingual dictionaries.
The originalVail Dale concept is especially interesting for multilin-gum applications, as the Dutch part is the same (at leastin principle) in all bilingual dictionaries with Dutch assource language (cf.
\[van Sterkenburg el al., 1982\]).Extraction of information about phrasal translation,such as the choice of the support verb of a noun in thetarget language, is unfortunately hidden in unrestrictedtext (example sentences etc.
), from which it is difficultto extract.
Phrasal information also snffers greatly fromincompleteness.3 The TFS Formal ismBefore discussing the proposed lexicon architecture wewill introduce the computational framework in which ithas been formalized and ilnplemented, the formalism oftyped feature structures.Currently the family of unification-based formafis:rLq isan emerging standard as the implementation formalismof natural anguage processing systems.
A variant calledtyped feature structures, discussed a.o.
in \[Carpenter,1990\], \[Emele and Zajac, 1990\] and \[Zajac, 1990\], ha.sbeen adopted in a number of European lexicon projects,including ACQUILEX, Euito'raA 7 and MULTILEX.
Inthe course of our project, a TFS  database, user interfaceand a constraint solver have been implemented.TFS  is an excellent formalism for computational lex-icons, as it enables a definition of types, or classes, oflinguistic objects, arranged in a multiple inheritance hi-erarchy, where types are associated with an appropriate-hess specification defining their features and the types ofthose features and with (possibly disjunctive and com-plex) constraints.
The object-oriented character of thesystem allows for minimization of redundancy, whereasthe type system maximizes integrity of data.Three TFS-based tools have been developed:?
a tool for interactive definition ~, entry and modifi-cation of data (cf.
section 3.1).
* a TFS database which can be accessed from the userinterface and the constraint solver.3The TFS-editor can bc used to interactively define a typehierarchy, as such a hierarchy can be viewed itself a.u a typedfeature structure, ef.
\[Fnkker, 1992\].Acra~s DE COLING-92, N^N'rI!S, 23-28 Ao'\]r 1992 5 4 Pgoc.
OF COLING-92.
NAN'fES, AUC;.
23-28, 1992?
a TFS-compiler for data manipulation, e.g.
selec-tions and conversion.The TFS-compiler is similar to the systems describedby \[Carpenter, 1990\], \[Emele and Zajac, 1990\], and\[I,'ranz, 1990\], and like these it constitutes a general-purpose constraint-based formalism which can be usedfor a wide variety of tasks, including parsing, transla-tion and generation.
Our prototype is implemented ontop of Sicstus Prolog, and is used primarily for selectionand conversion of data.
It offers a number of tracingand debugging facilities to assist in the design of type-hierarchies and during query-evaluation.These three tools can import and export data in aspecial-pnrpo~ text format, whictl is useful for inter-change and further processing.
The acquisition tools forthe Van Dale dictionaries and Celex can also generatetheir output in this format.3.1  User  In ter faceThe hierarchical definition of the grammatical types inTFS corresponds closely to a "decision tree" which thelexicographer traverses while editing a lemma.
A graph~teal user interface has been developed by the computerscience department of the State University of Utrecht(\[Fokker, 1992\]) which allows the user to narrow downthe main type of the lenrma (s)he is editing to a specificsubtype and to subsequently edit the associated featurestructure.
For example, a lemma is refined li'om ENTRYto VERB to DATIVE_VERB, then constraints for this typeare retrieved and the features and their substructurescan be edited recursively.Of course, only appropriate features are presented andcan be edited, e.g.
it is impossible to edit a feature arg3of an intransitive verb.
While editing tile value of a few-ture the editor creates a subwindow already positionedat the minimal type of this feature.
E.g.
while editinga verb, the feature semantics will already be positionedat the type EVENT, as this is the minimal type of thisfeature for verbs.The editor includes a useful help facility which can beviewed as an on-line instruction manual: a hell) functionexists for each choice point which describes a number ofcriteria and examples to help making the decision.It will now be clear how lexicographic work using thedecision tree model relates to importation of lcxical datafrom existing sources, such ms MRDs.
These can he con-verted to partially edited lexical entries, so that the lex-icographer doesn't have to start at the 'root' level (e.g.the choice point El/TRY in tile example), but at an inter-mediate level (e.g.
VERB).
Further choices lea(\[ to morerefined descriptions of the word.
Like all errors, errors iuthe source dictionary can be corrected by moving backto a higher-level choice point in the hierarct~y.Completed entries, and also arbitrary substructures,can be named and stored iu a database for future use asshared (sub)structures in other entries.
Useful applica-tions of this cross-reference mecbanism are iu morphol-ogy and for the implementation f synonymy (see 4.2).Compounds can be assigned a feature tree with featuresleft_daughter and right_daughter, whose values are point-ers in the database to their constitnting parts.Tile editor has been implemented in C using tile Mi-crosoft Windows 3.0 graphical interface.
Tile progranr isdesigned to he e~mily portable, e.g.
to X windows.
Theunderlying database can be shared via a LAN.
As theother tools, the database allows for import and exportof feature structures in tile interchange format.The editor is designed specitically for the TFS for-raalism.
However it can tie used for any specific typehierarci~y, as tile definition of the type hierarchy issimplydefined in a separate text file which is read by the pro-gram during start np.
IIence, it is potentially interestillgfor tile devch)pment of many other (NLP) dictionaries.An interesting elaboration of the editor would he toadd extra functionality for the lexicographer besidesediting attd viewing feature structures, such &~ facilitiesto consult wtrious on-line dictionaries or text corpora.4 D ic t ionary  organ izat ionllaving introduced the computational framework wc willproceed with tile diseussion of the organization of thedictionary 4.
The emph~asis has been on two types ofmodularity:I. Modularity of dictionaries and thesaurus.The general approach is to define clearly a mun-her of ahstractiou levels (cf.
section 4,1) in orderto achieve ccLsy conncctability of the monolingua\[dictionaries via bilingual dictionaries.
By geueraliz~lug bilingual translation to bilingual synonymy (orequivalence, cf.
section 4.2) wc can even separate se~mantic descriptions ("concepts") from the elementsin which they arc realized in languages.
Wc willshow how such concel)tual dictionaries can bc gen-erated from bilingual (fictionarics (4.3).2.
Modularity of grammatical description (cf.
section~).With respect o the linguistic content of tile monolingual dicLiouaries (i.e.
the grammatical descrip-tion) we will diseuss the use of typed feature struc-ture constraints expressing relations bctwcen gram?matical descriptions in various linguistic theories.This allows fi)r a very llexihle relation between varions grammatical descriptions.4.1 T im m(~nol lngual  d ic t ionaryWord forms in a language, ~Ls found in text corpora,arc associated with canonical forms according to \[exi-cological conventions.
In particular contexts they areassociated with c?act\]y one of a tixed finite number ofdesignations ~.
In \[Zgusta, 1971\], two other "componeuts" of meaning are distinguished besides designation,viz.
connotation and range of application.
Our (some-what poor) working definition of synonymy is a relationhctween readings haring designation only, both within alanguage and across languages (where it is traditionallycalled equivalence).~Thi.s is a condensed summary of \[van dcr Eijk, 1992a\].5 Note that we ad(q~t the approach of discrete readings, el.\[tca Itltckcn, 199(}\].AcrEs I)E COLING-92, NANqES, 23~28 Ao(rr 1997.
5 5 }'R~)C. OF COI.ING 92, NAN-rEs, AU(I.
23-28, 1992The relation between word forms aml canonical formsis many-to-many: ortimgrapllic variants are mappedonto a single canonical form, and a single word formcall be related to ~veral lexical entries via inflectionalrule* s. The monolingual dictionary is a net of lexicalentries, which are pairings of canonical word forms of alanguage and their designations, and in addition describetheir grarnrnatical properties.As a result, a lexical entry dmuld minimally have thetwo features canonical~form and semantics.
The formerfeature has the simple type STRIM6, the latter, the de-scription of the designation, has a complex value, po&'fi-bly including ~nrantic features, but minimally contain-ing an identifying feature v, as we want to make sure itwill always be possihle to interconnect tile monolingnaldictionaries via bilingual dictionaries.
Apart from thesetwo features, there will he other features for the d~crip-lion of the grammatical properties of the word.The combination of canonicalJ'orm and grammaticaldescription should allow for the complete and correctgeneration of all word forms and their a.,mociated featurestrnctures.
As our intended client applications have frontends for this purpose the database was not designed tobe a full form dictionary; tiffs could change, dependingon the needs of future client applications.The ~t  of designations can be viewed as a thesaurus or"knowledge base"; the lexical entries are "pointers" fromwords into this knowledge base, and can be implementedas sudl in TFS.The relation between canonical word forms and desig-nations is also many-to-many, due to synonymy (severalword forms related to the same designation) and lexi-cal ambigality (one word form related to several designa-tions).
In addition to this there will be alternations inthe description because of alternative grammatical pat-terns.
These alternations are implemented as TFS dis-junctions.4.2 The  b i l ingual  d ic t ionaryBilingual dictionaries can be viewed as a relation be-tween words in two languages.
The levels "word form","lexical entry" and "reading" correspond to various de-grees of granularity in bilingual dictionaries.
Ideally, thebilingnal dictionary relates lexical items between lan-guages at the level of readings, though in practice mostexisting dictionaries refer to canonical forms or evento word forum in the target language.
Furthermore,the source language side in bilingual dictionaries usu-ally refers to readings different from the monolinguallymotivated ones, because they are tuned to tile target lan-guage: two readings are not distinguished if they trans-late to the same word, or an additional reading is createdfor an additional translation.
An exception is the origi-nal concept of the bilingual Van Dale dictionaries, wherethe source language reading structure of the bilingual6g.g.
the Dutch word form bekcnd is associated with theadjective bekcnd (meaning well-known)and (by participle for-mation) to the verb bekennen (to conJess).r'I'he name of t, tored semantic substructures in the TI:Sdatabase serves this purpose.dictionaries i hased directly on the moaolingual readingstructure (of, \[van Sterkenhurg ef at., 1982\]).An interesting approach to the hilingual dictionarywould be to view it ~.s describing pairings of bilingualsynonyms.
Tile advantage of this would be that1.
the dictionary supl)orts preservation of meaning intranslation.2.
formal properties of equivalence r lations (e.g.
tran-sitive closure) can be exploited to automatically ex-paml the dictionary.3.
coding efforts call be reduced: tile detinition of thedesignation can be shared between monolingual ndbilingual synonyms.Tile main difference hetween traditional dictionariesand our approach is therefore that tile indirect ransla-tional description of hilmgual synonymy is replaced by adirect relation between lexical entries in the nmnolingualdictionaries to all independent "knowledge hase" of syn-onym clusters.
This approach is conamon ill e.g.
multi-lingual terminology (cf.
\[Picht and 1)raskau, 1985\]), butless common in lexicology.We will show that the two representations can betranslated into each other.
Section 4.3 describes how aknowledge base is generated from monolingual nd bilin-gual dictionaries.
A bilingual dictionary can be gener-ated automatically from a set of monolingual dictionariesand a klmwledge base by enumerating the pairs of lexicalentries in two monolingual dictionaries pointing to thesame synonym cluster.4.3 Gcnerat lng  Synonym C lustersExisting machine-readable trilingual dictionaries s can beconverted to a representation based on bilingual syn-onymy, by "extracting" the underlying concepts.
Theprocess consists of tile following steps:First, the dictionaries are parsed and transformed toa table synoaym of the relation between a reading Rz ina language LZ and a reading R2 in L=.
Two versions ofthis program have been developed and tested: one for theVan Dale Dutch-Spanish dictionary and one for bilingualentries in the EUROTRA transfer ule format.
A versionfor dictionaries in a standard interchange format wouldbe a possible future extension.Second, reflexive, symmetric, and transitive closure isapplied to the synonyM/4 relation s. For each reading thegenerated synonym cluster can be viewed.
E.g.
accord-ing to tile Van Dale Dutch-Spanish dictionary, reading0.1 of Dutch eerbetoon (English Onark of) honour) hasone synonymous reading in Dutch and three synonymsin Spanish.eerbetoon O.
1 :SActually, there is no restriction to it b=lingual dk'tionary:severe.l bi- or multilinguM dictionaries, and even monolingualdiction;tries of synonyms, can be processed similarly, result-ing in a mulldingual dictionary.
This has been checked usingseveral Eurotra transfer dictionaries.9'I'hl8 program was first hnplentented in Prolog for theNdict system (\[Bloksma et el., 1990\]) itnd modified for a Fro-tetra research group on "ll.cversibie Transfer".A(:rlis i)1~ COLINC~ 92, NAN-IES, 23-28 ^ o(rI 2992 5 6 Psoc.
O1: COLING-92, NANq'ES, AUG, 23-28, 2992$s: { ho~t.najo honoras t r ibuto  } .nl :  ( eQrbetoon_0,1  .
a rbo~i ja  0.1 },The current implementation is not yet fully satisfying.l|ecauea: there is no reading distinction on the ,ql)rmishside in the Van Dale N-S (only the Dutch words in theexample are marked with a reading nmnber, e.g.
0.1),some cltinters will get mixed up Is E.g.
Spanish frescoas adjective means fresh and a~ noun fresco, though theprogram will currently not slake this distinction.
:frssco_0.1 :os: { f rauco  limpio re f resco  }.nl: { f resco 0,1 gr in 0.1 }.The program couhl of course be modified to ~Lsethe grummatical information about the target word intbc dictionary as reading distinguisher; the noun frescowould then never be confimed with the adjective.
Thisis ullde~iral)le ill l)rincil)lc, bowcver, at; we do not WKlltsyntactic criteria to guide readiug distinction, l"or instance, many adjectives in I~x)mance languages have hemol)honous uominal counterparts, with identical mor-phology and ~manties.
We don't want to be forced a pri-ori to distinguish separate readings for the~e two cases.Furthermore, well-known examples of category shift iutranslation re.g.
adverbs translating to verbs etc.)
showit is impossible to attach a unique syntactic ategory toan equivalence class.These presentations of synonym clusters can be veryhelpful to interaetively improve transfer dictionaries: er-rors of this type can easily he detected by native speakersof the languages (who need not know the other language)and corrected by creating appropriate reading distinc-tion in Spanish.We cbecked the quality of tbe synonym clusters gener.ated from from both Van Dale and a EUItO'rRA SpanishDutch dictionary.
The Eurotra dictionary, where bothsource and target language items are referred to at thereading level, was converted to over 2187 chtsters, 315 ofwhicb contained more than one Spanish reading.
Nativespeakers agreed with more than 95% of these synonymsets gcuerated via the bilingual elomlre step.
The inter-pretation of bilingual translation as synonymy is there-fore correct in the vast majority of eases.llowever, exceptions exist, such as tbe translation ofthe Spanish reloj, which, even though a true (aud infrequest) l)utch synonym exists (viz.
uurwerk (el.
Englishlimepiece)), more commolfiy trauslate~ to one of its hy-pouyn~ besiege (Eng watch) or klok (Eng clock).An interesting e\[ahoration f our approach would beto extend the k*mwledge base by ordering the synouymclusters themselves via hypono,ny It (cf.
\[Cruse, 1986\],l?
'l'he problem of c'annecting word forms to their readingsha* lu'en called the mappin 9t~roblem.
Gf.
\[llyrd cl al., 1987\]for discussion of a method to map word forms to readings bycomparing a.o.
t~enlastic featnres like human of the sourcere~ling and potentiM target reaAings.l*'I'his idea is simil~tr o Wordnet, a collection of synonynlsets linked via a variety of Icxical relations (\[Bcckwirth et al,1989\]).
Our &pproadl extends this idea by adding a multilingtlaJ dimension.
Wordset's ylloltym t~tt~ are ~.lsO related byrelations with leas oh:as translational contu:qu(mt:cn.\[Lyous, 1977\]).
Client applications could then extractIrauslati(mal data based not only on synonymy but alsoon hyp(er)onymy.
However.
this is a dillicult area, whereno obvious solutions exist.
It is not clear at all whichtranslatiou solution automatic translators should selectin c~mes like this anyway.After thls correction process the synonyln clnsters canbe couverted to TFS format and stored in the database,The a.~sociated monolingunl dictk)nnries are then modifled automatically b  adding cross-reference informatiott(via the feature se mastics) from the lcxicnl entries to thesynonym dustcrs they use a~uociated with.4.4 Creat ing a knowledge I)ase.Synonym clusters reMly become descriptions of desig-nations once semautlc information is added to the synonym dusters, which is then, in a truly interlingual way,shared between synonyms.
Much mmlaxltic informationfroul the (~ELEX 1)utch dictionary can I>e moved to thesynonym clusters, as well as Van Dale defiuitious of con-cepts in natural anguage.
Tbc latter arc useful for semi-automntic interactive applications Is.The current approach can be said to inlpiement the apoproach of possible bilingual exlcal translalioa, Tiffs al>preach should he developed in a uumber of ways.
Apartfrom the problem of translation to non-synouyms wementioned, it is desirable to inchLde information in thedictionary to guide the choice among possible transla-tions, iu cases where there are several syuonyms in thetarget language.
Stylistic, eolloeational nd frequencyinfl)rmation can be of use for this purpose.
This infermotion is partly available from existing sources (sucb asCF, I,EX attd Van Dale), and large text corpora are alsoobviously relevant sources of this information.5 A mode l  fo r  convers ionConversion or exchange of lexical data presupposes a de-tailed comparison of the various dictiouaries, which inturn requires a careful description of the various dictio-naries.
Given the purpose of Comparison, the descrip-tions shouM be cast in a uniform, preferably high-leveldata descriptiou lauguage.
Several such languages exist,such as the Entity- Relationship model, a tool in databasedesign.
We will use the TFS formalism introduced in~ction 3 for this purpose.A lirst step in tiffs comparison is to convcrt various dic-tionaries to the uniforln TFS format.
In \[n~xqt NI,P for-malisms lexical entries are records or feature structures,so this syntactic transformation is generally unproblem-atic.
In passing, implicit semantic structure in the wtr.ious dictionaries (e.g.
feature cooeeurrence r~trictions)can be re,Meted explicit hy constructing a type hierarchyfor the~ uystcms,()n the hasis of these descril)tions, constraints on therehttion hetwc~m lexical entries in the dilt~rent dictionaries cau be detined, These constraints can be calledAlso see \[Calzolari, 1990\] for a i)roposM aimil~,r to ours tointegrate the dictionary and the thesaurus.la l"or exautple, l{o.uetta illcorl)tltate~..3.11 interactive rea(Ihtgselection \[acillty.Acrli~; l)t!
('(J ING 92.
NAN ~ ES.
2~28 ao(Tr 1!
)92 5 7 PRec.
o1: COl,IN(; 92.
NANTES.
AUG, 23 28.
1992semantic, as they relate the content of the various dic-tionaries, and neutral as they merely pinpoint correspon-dences between dictionaries; they define the way dictio-naries (which may be unrelated in other respects) aresimilar.Constraints can be viewed as implicational nd bicon-ditional constraints (as in \[van der Eijk, 1992b\]), and itis possible to implement them as a complex TFS type.This type serves both as documentation f the dictionaryand as conversion specification.A conversion specification is a TFS  type CONVERT hav-ing features for each of the dictionaries (e.g.
lezic, eu-rotra and rosetta), and establishes the basic conversionrelation between entries in the LEXIC dictionary (as de-rived from the sources and augmented by lexicographers)and entries in the EtrROTRA and ROSETTA dictionaries.This conversion type is structured hierarchically as well:the high-level type CONVERT has many subtypes pecify-ing how specific subtypes (and hence subsets of the re-spective lexicons) of the various dictionaries are related.Disjuncts in the constraints of these types enumeratecorresponding patterns described as feature structures.An advantage is that these conversion constraints canbe defined at the appropriate l vel of abstraction.
It is inprinciple possible to establish relations holding for all en-tries as well as for an individual entry.
As the conversiontypes are also ordered in an inheritance hierarchy, sub-types will inherit the constraints of their supertype(s).Note the inherent declarative character of the conver-sion constraints: there is no notion of ' input'  and 'out-put'.
One advantage of this is that a single formalismcan be nsed for importation, generation as well as in-tegration of lexicons.
A second advantage is that theconversion constraints can also be used to test whethcrtwo existing dictionaries are related as postulated in theconversion constraints.Full derivability of a particular dictionary can beviewed as a special case of the general (in principle rela-tional) scheme, where the substructure of a feature likerosetta is fully (and functionally) derivable from the sub-structure of another (lezic).
Informally, all primitive dis-tinctions in the target dictionary can be computed giventhe information in the source dictionary, i.e.
the con-straints define a homomorphism from the serving dictio-nary to the client application.It is an empirical issue whether this derivability re-lation can actually he defined between two dictionaries.For newly to be created "generic" lexicons, this deriv-ability is a design requirement.
For the client dictionar-ies we have had to look at, creation of a generic sourceappeared to be a complex, but feasible, task.Operationally, conversion proceedsas query-evaluation.
Givcn an appropriate dcfinition ofthe CONVERT type, the solutions to the following querywill find all lexieal entries whose canonical form is tiers inthe LExIc database and return all corresponding furtherinstantiations of the ROSETrA type.These instantiations correspond to the I~.OSETTA de-scriptions for this lexical entry.Ic?
'"'i ENTRY lexic : canonical_form : f ie tsrosetta : ROSETTA6 I l lus t ra t ionWe will illustrate conversion using the example in\[van der Eijk, 1992a\] relating two familiar linguistictheories, GPSG and a unification variant of Catego-ria\] Grammar, rather than the LEXIC fragment andROSETTA, which we actually implemented.The categorial lexical entries have a feature subcatwhose value is either a CATEGORY or a FUNCTION.
Thetype FUNCTION has appropriate features argument, (withtwo features direction and category), and result, wherethe result can be either a function again or a CATEGORY.Individual Icxical entries are simply instances of thishighly general recursive scheme.
E.g.
the subcat featureof a transitive verb (i.e.
(NP\S)/NP) has type FUNCTION,with an NP argument to the right and, recursively, aFUNCTION from a subject NP to an S as result.In GPSG individual lexical entries also have a featuresubcat, but its value, an intcgcr, is used to select thecorresponding context-free grammar rule for this com-plcmentation pattern.One of the disjuncts of the constrain ts for the CONVERTtype will then be the following.
Unifying specific cate-gorial entries into the cg substructure will cause the cur-responding psg feature to become instantiated.?
CONVERTcg : subcat :FUNCTION\[ dir :RIGNT \]arg : eat : NPdir : LEFTres : arg : cat : NPres : Sn:-- 1 v :+ gpsg : bar : 0subcal : 2Due to the declarative character of TFS constraintevaluation, the above constraint will yield the same re-sult whether the cg, tbe gpsg or both features are instan-tiated.Evidently, the example is very simplistic.
The pro-totype conversion module we developed in our projectto translate LEXIC feature structures to I~OSETTA fea-ture structures contained over 500 disjuncts Is, and thismodule only covered conversion of a subset of the verbs.This number is caused by the fact that conversion ruleslaThis number esults from expansion to disjunctive nor-real form.
Tile actual notation for conversion rules allows forembedded isjunctions and is, hence, much more concise.AcrEs DE COLING-92, NAr,'fES, 23-28 AOI~T 1992 5 8 Pltoc.
OF COLING-92, NANTES, AUG. 23-28, 1992tend to become very idiosyncratic once the underlyingtheories of two dictionaries diverge.7 ConclusionWe discussed how a multilingual lexical database can becoustructed using a nmnber of existing lexical resourcesand lexicography.
The TFS formalism is very appropri-ate for the design and implementation f NLP lexicons.We showed that its hierarchical structure can be n~dprofitably in a data entry tool which allows the lexi-cographer to manipulate f ature structures graphically.Lexical acquisition from existing lexical resources can becombined seamlessly with lexicographie work.The lexicon architecture we designed is an importantimprovement over earlier approaches: various abstrac-tion levels and the mappings between them are definedmore precisely, and the modularity is increased signif-icantly by the ~paration of the knowledge base fromlanguage-specific d tionaries.With respect o the issue of reusability, we outlined aframework for the specification of comparative descrip-tion of linguistic encoding schemes.
This specificationcan be used operationally as translation rules to convertlexical data.Re ferences\[Beckwirth et al, 1989\] Richard Beekwirth, ChristianeFefibaum, Derek Gross, and George Miller.
Word-net: A lexieal database organized on psycholinguisticprinciples.
Paper presented at the First Lexical Ac-quisition Workshop, IJCAI89, 1989.\[Bloksma et al, 1990\] Laura Bloksma, Aune van Bo\]ohuts, Pim van der Eijk, Pius ten Hacken, Joy tlerklots,Dirk Heylen, Hans Pijnenburg, Frank Sesiuk, Anne-Marie Teeuw, Louis des Tombe, and Ton van derWouden.
Ndict: Final report.
Technical report,Eurotra-NL, University of Utrecht, 1990.\[Boguraev and Briseoe, 1989\] Bran Boguraev and TedBriscoe, editors.
Computational Lexicography for Nat-ural Language Processing, London and New York,1989.
Longman.\[Byrd el al., 1987\] Roy Byrd, Nieoletta Calzolari, Mar-tin Chodorow, Judith Klavaals, Mary Nell', and Om-meya Rizk.
Tools and methods for computational lex-icology.
Computational Linguistics, 13(3-4), 1987.\[Calzolari, 1990\] Nieoletta Calzolari.
The dictionary andthe thesaurus can be combined.
In Relational Modelsof the Lexicon.
Martha Evens, 1990.\[Carpenter, 1990\] Bob Carpenter.
The logic of typedfeature structures.
Draft, 1990.\[Cruse, 1986\] D.A.
Cruse.
Lexical Semantics.
Cam-bridge University Press, 1986.\[Emele and Zajac, 1990\] Martin Entele and R~mi Zajac.Typed unificatiou grammars.
In Proceedings of the13th International Conference on Computational Lin-guistics (COLING), 1990.\[Fokker, 1992\] Jeroen Fokker.
Lemming user manual.Technical Report INF/DOCL92-04, Department ofComputer Science, State University of Utrecht, 1992.\[Franz, 1990\] Alex Franz.
A parser for HPSG.
Techni-cal report, Laboratory for Computational Linguistics,Carnegie Mellon University, 1990.
No.
CMU-LCL-90-3.\[Longman, 1987\] Longmau.
Longman Dictionary ofContemporary English.
Longman House, Burnt Mill,Harlow, Essex, England, 1987.
Second Edition.\[Lyons, 1977\] John Lyons.
Semantics.
Cambridge Uni-versity Press, 1977.\[McNaught, 1988\] John McNaught.
Computational lex-icography and computational linguistics.
Lericogvaph.lea, (4), 1988.\[Pieht and Draskau, 1985\] Heribert Pieht and JenniferDraskau.
Terminology: An Introduction.
Universityof Surrey, 1985.\[ten lfacken, 1990\] Plus ten tlacken.
B.eading dictinc-tiou in MT.
In Proceedings of the 13th InternationalConference on Computational Linguistics (COLING),1990.\[van der Eijk et al, 1991\] Pim van der Eijk, LauraBloksma, Anne van Bolhuis, Joy Ilerklots, Lily vanMunster, Jeroen Fokker, Mark van der Kraan, andAngelique Geilen.
Final report of the Lexic ProjectPhase 1.
Technical report, Foundation for LanguageTechnology, 1991.\[van der Eijk, 1992a\] Pim van der Eijk.
Multilinguallexicon architecture.
Working Papers in NaturalLanguage Processing, Katholieke Universiteit Leuven,Stichtiug Taaltechnologie Utrecht, 1992. forthcoming.\[van der Eijk, 1992b\] Pim van der Eijk.
Neutral dictio-naries.
\[n Cheng-Ming Guo, editor, Machine TractableDictionaries: Design and Construction, chapter 6.Ablex, 1992. forthcoraing.\[van Sterkenburg el al., 19821 Piet vanSterkenburg, Willy Martin, and Bernard AI.
A newVan Dale project: Bilingual dictionaries on one andthe same monolingua\[ basis.
In J. Goetschalckx andL.
l~olling, editors, Lexicography in the electronic age,pages 221-237.
North-tlolland, Amsterdam, 1982.\[Zajac, 1990\] R~mi Zajac.
A relational approach totranslation.
In P1vc.
3rd Int.
Con\]'.
on Theoreticaland Methodological Issues in Machine Translation ofNatural Language, 1990.\[Zernik and Jacobs, 1990\] Uri Zernik and Paul Jacohs.Tagging for learning: Collecting thematic relationsfrom corpus.
In Proceedings of the 13th InternationalConference on Computat~ional Linguistics (COLING),Helsinki, 1990.\[Zgusta, 1971\] Ladislav Zgusta.
Manual of Lexicography.Mouton, 1971.Acqa~s I)E COLING-92, NANTES.
23-28 Aoffr 1992 $ 9 PROC.
Oi; COLING-92, NANTES.
AUG. 23-28, 1992
