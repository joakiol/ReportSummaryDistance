Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 524?528,Avignon, France, April 23 - 27 2012. c?2012 Association for Computational LinguisticsLearning How to Conjugate the Romanian Verb.
Rules for Regular andPartially Irregular VerbsLiviu P. DinuFaculty of Mathematicsand Computer ScienceUniversity of Bucharestldinu@fmi.unibuc.roVlad NiculaeFaculty of Mathematicsand Computer ScienceUniversity of Bucharestvlad@vene.roOctavia-Maria S, uleaFaculty of Foreign Languagesand LiteraturesFaculty of Mathematicsand Computer ScienceUniversity of Bucharestmary.octavia@gmail.comAbstractIn this paper we extend our work describedin (Dinu et al 2011) by adding more con-jugational rules to the labelling system in-troduced there, in an attempt to capturethe entire dataset of Romanian verbs ex-tracted from (Barbu, 2007), and we em-ploy machine learning techniques to predicta verb?s correct label (which says what con-jugational pattern it follows) when only theinfinitive form is given.1 IntroductionUsing only a restricted group of verbs, in (Dinuet al 2011) we validated the hypothesis that pat-terns can be identified in the conjugation of theRomanian (partially irregular) verb and that thesepatterns can be learnt automatically so that, giventhe infinitive of a verb, its correct conjugationfor the indicative present tense can be produced.In this paper, we extend our investigation to thewhole dataset described in (Barbu, 2008) and at-tempt to capture, beside the general ending pat-terns during conjugation, as much of the phono-logical alternations occuring in the stem of verbs(apophony) from the dataset as we can.Traditionally, Romanian has received a Latin-inspired classification of verbs into 4 (or some-times 5) conjugational classes based on the endingof their infinitival form alone (Costanzo, 2011).However, this infinitive-based classification hasproved itself inadequate due to its inability to ac-count for the behavior of partially irregular verbs(whose stems have a smaller number of allo-morphs than the completely irregular) during theirconjugation.There have been, thus, numerous attemptsthroughout the history of Romanian Linguisticsto give other conjugational classifications basedon the way the verb actually conjugates.
Lom-bard (1955), looking at a corpus of 667 verbs,combined the traditional 4 classes with the way inwhich the biggest two subgroups conjugate (oneusing the suffix ?ez?, the other ?esc?)
and ar-rived at 6 classes.
Ciompec (Ciompec et.
al.,1985 in Costanzo, 2011) proposed 10 conjuga-tional classes, while Felix (1964) proposed 12,both of them looking at the inflection of the verbsand number of allomorphs of the stem.
Romalo(1968, p. 5-203) produced a list of 38 verb types,which she eventually reduced to 10.For the purpose of machine translation, Moisil(1960) proposed 5 regrouped classes of verbs,with numerous subgroups, and introduced themethod of letters with variable values, while Pa-pastergiou et al(2007) have recently developeda classification from a (second) language acquisi-tion point of view, dividing the 1st and 4th tradi-tional classes into 3 and respectively 5 subclasses,each with a different conjugational pattern, andoffering rules for alternations in the stem.Of the more extensive classifications, Barbu(2007) distinguished 41 conjugational classes forall tenses and 30 for the indicative present alone,covering a whole corpus of more that 7000 con-temporary Romanian verbs, a corpus which wasalso used in the present paper.
However, herclasses were developed on the basis of the suf-fixes each verb receives during conjugation, andthe classification system did not take into accountthe alternations occuring in the stem of irregularand partially irregular verbs.
The system of rulespresented below took into account both the end-ings pattern and the type of stem alternation foreach verb.In what follows we describe our method for la-beling the dataset and finding a model able to pre-524dict the labels.2 ApproachThe problem which we are aiming to solve is todetermine how to conjugate a verb, given its in-finitive form.
The traditional infinitive-based clas-sification taught in school does not take one all theway to solving this problem.
Many conjugationalpatterns exist within each of these four classes.2.1 Labeling the datasetFollowing our own observations, the alternationsidentified in (Papastergiou et al 2007) and theclasses of suffix patterns given in (Barbu, 2007),we developed a number of conjugational ruleswhich were narrowed down to the 30 most pro-ductive in relation to the dataset.
Each of these30 rules (or patterns) contains 6 regular expres-sions through which the rule models how a (dif-ferent) type of Romanian verb conjugates in theindicative present.
They each consist of 6 reg-ular expressions because there are three persons(first, second, and third) times two numbers (sin-gular and plural).Rule 10, for example, models, as stated inthe list that follows, how verbs of the type?a ca?nta?
(to sing) conjugate in the indicativepresent, by having the first regular expressionmodel the first person singular form ?
(eu) ca?nt?
(in regular expression format: ?
(.+)$), the sec-ond, model the second person singular form ?(tu)ca?nt?i?
(?
(.+)t?i$), the third, model the third per-son singular form ?
(ei) ca?nta??
(?
(.+)a?$), and soforth.
Thus, rule 10 catches the alternation t?t?for the 2nd person singular, while modelling aparticular type of verb class with a particular setof suffixes.
Note that the dot accepts any letterin the Romanian alphabet and that, for each ofthe six forms, the value of the capturing groups(those between brackets) remains constant, in thiscase ca?n.
These groups correspond to all parts ofthe stem that remain unchanged and ensure that,given the infinitive and the regular expressions,one can work backwards and produce the correctconjugation.For a clearer understanding of one such rule,Table 1 shows an example of how the verb ?atresa?lta?
is modeled by rule 14.Below, we list all the rules used, with the stemalternations they capture and an example of a verbPerson Regexp Example1st singular ?
(.+)a(.+)t$ tresalt2nd singular ?
(.+)a(.+)t?i$ tresalt?i3rd singular ?
(.+)a(.+)ta?$ tresalta?1st plural ?(.+)a?
(.+)ta?m$ tresa?lta?m2nd plural ?(.+)a?
(.+)tat?i$ tresa?ltat?i3rd plural ?
(.+)a(.+)ta?$ tresalta?Table 1: Rule 14 modelling ?a tresa?lta?that they model.
Note that, when we say (no) al-ternation, we mean (no) alternation in the stem.So the difference between rules 1, 20, 22, and thesort lies in the suffix that is added to the stemfor each verb form.
They may share some suf-fixes, but not all and/or not for the same personand number.1.
no alternation; ?a spera?
(to hope);2. alternation: a?
?e for the 2nd person singular;?a numa?ra?
(to count);3. no alternation; ?a intra?
(to enter), stem endsin ?tr?, ?pl?, ?bl?
or ?fl?
which determinesthe addition of ?u?
at the end of the 1st per-son singular form;4. alternation: it lacks t?t?
for the 2nd personsingular, which otherwise normally occurs;?a mis?ca?
(to move), stem ends in ?s?ca?;5.
no alternation; ?a ta?ia?
(to cut), ends in ?ia?and has a vowel before;6. no alternation; ?a speria?
(to scare), ends in?ia?
and has a consonant before;7. no alternation; ?a dansa?
(to dance), conju-gated with the suffix ?ez?;8.
no alternation; ?a copia?
(to copy), conju-gated with a modified ?ez?
due to the stemending in ?ia?;9.
altenation c?ch(e) or g?gh(e); ?a parca?
(to park), conjugated with ?ez?, ending in?ca?
or ?ga?;10.
alternation: t?t?
for the 2nd person singular;?a ca?nta?
(to sing);11. alternation: s?s?
which replaces the usualt?t?
for the 2nd person singular; ?a exista?
(to exist);52512. alternation: a?ea for the 3rd person singularand plural, t?t?
for the 2nd person singular;?a des?tepta?
(to awake/arouse);13. alternation: e?ea for the 3rd person singularand plural, t?t?
for the 2nd person singular;?a des?erta?
(to empty);14. alternation: a?
?a for all the forms except the1st and 2nd person plural; ?a tresa?lta?
(tostart, to take fright);15. alternation: a?
?a in the 3rd person singularand plural, a?
?e in the 2nd person singular;?a desfa?ta?
(to delight);16. alternation: a?
?a for all the forms except forthe 1st and 2nd person plural; ?a pa?rea?
(toseem);17. alternation: d?z for the 2nd person singu-lar due to palatalization, along with a?
?e; ?avedea?
(to see), stem ends in ?d?;18.
alternation: a?
?a for all forms except the 1stand 2nd person plural, d?z for the 2nd per-son singular due to palatalization; ?a ca?dea?
(to fall);19. no alternation; ?a veghea?
(to watch over),conjugates with another type of ?ez?
endingpattern;20. no alternations; ?a merge?
(to walk), receivesthe typical ending pattern for the third conju-gational class;21. alternation: t?t?
for the 2nd person singular;?a promite?
(to promise);22. no alternation; ?a scrie?
(to write);23. alternations: s?t?sc for the 1st person singu-lar and 3rd person plural; ?a nas?te?
(to givebirth), ends in ?s?te?;24.
alternation: ?n?
is deleted from the stem inthe 2nd person singular; ?a pune?
(to put),ends in ?ne?;25.
alternation: d?z in the 2nd person singulardue to palatalization; ?a crede?
(to believe),stem ends in ?d?;26.
no alternation; ?a sui?
(to climb), ends in?ui?, ?a?i?, or ?a?i?;27.
no alternation; ?a citi?
(to read), conjugateswith the suffix ?esc?
;28. this type preserves the ?i?
from the infinitive;?a locui?
(to reside), ends in ?a?i?, ?oi?, or ui?and conjugates with ?esc?;29.
alternation: o?oa in the 3rd person singularand plural; end in ???
?, ?a omor???
(to kill);30. no alternation; ?a hota?r???
(to decide), ends in????
and conjugates with ?a?sc?, a variant of?esc?2.2 Classifiers and featuresEach infinitive in the dataset received a label cor-responding to the first rule that correctly producesa conjugation for it.
This was implemented inorder to reduce the ambiguity of the data, whichwas due to some verbs having alternate conjuga-tion patterns.
The unlabeled verbs were thrownout, while the labeled ones were used to train andevaluate a classifier.The context sensitive nature of the alternationsleads to the idea that n-gram character windowsare useful.
In the preprocessing step, the list of in-finitives is transformed to a sparse matrix whoselines correspond to samples, and whose featuresare the occurence or the frequency of a specific n-gram.
This feature extraction step has three freeparameters: the maximum n-gram length, the op-tional binarization of the features (taking only bi-nary occurences instead of counts), and the op-tional appending of a terminator character.
Theterminator character allows the classifier to iden-tify and assign a different weight to the n-gramsthat overlap with the suffix of the string.For example, consider the English infinitive towalk.
We will assume the following illustrativevalues for the parameters: n-gram size of 3 andappending the terminator character.
Firstly, a ter-minator is appended to the end, yielding the stringwalk$.
Subsequently, the string is broken into 1, 2and 3-grams: w, a, l, k, $, wa, al, lk, k$, wal, alk,lk$.
Next, this list is turned into a vector using astandard process.
We have first built a dictionaryof all the n-grams from the whole dataset.
These,in order, encode the features.
The verb (to) walkis therefore encoded as a row vector with ones inthe columns corresponding to the features w, a,etc.
and zeros in the rest.
In this particular case,there is no difference between binary and count526rule no.
verbs1 5472 83 184 55 86 167 33308 2739 8910 411 512 413 10614 1315 5rule no.
verbs16 1317 618 419 1420 12421 2522 1523 724 4125 5126 18527 155428 48629 530 27Table 2: Number of verbs captured by each of our rulesfeatures because all of the n-grams of this shortverb occur only once.
But for a verb such as (to)tantalize, the feature corresponding to the 2-gramta would get a value of 2 in a count reprezentation,but only a value of 1 in a binary one.The system was put together using the scikit-learn machine learning library for Python (Pe-dregosa et al 2011), which provides a fast, scal-able implementation of linear support vector ma-chines based on liblinear (Fan et al 2008), alongwith n-gram extraction and grid search function-ality.3 ResultsTabel 2 shows how well the rules fitted the dataset.Out of 7,295 verbs in the dataset, 349 were uncap-tured by our rules.
As expected, the rule capturingthe most verbs (3,330) is the one modelling thosefrom the 1st conjugational class (whose infinitivesend in ?a?)
which conjugate with the ?ez?
suffixand are regular, namely rule 7, created for verbslike ?a dansa?.
The second largest class, also asexpected, is the one belonging to verbs from the4th conjugational group (whose infinitives end in?i?
), which are regular, meaning no alternation inthe stem, and conjugate with the ?esc?
suffix.
Thisclass is modeled by rule number 27.The support vector classifier was evaluatedusing a 10-fold cross-validation.
The multi-class problem is treated using the one-versus-allscheme.
The parameters chosen by grid search area maximum n-gram length of 5, with appendedterminator and with non-binarized (count) fea-tures.
The estimated correct classification rate is90.64%, with a weighted averaged precision of80.90%, recall of 90.64% andF1 score of 89.89%.Appending the artificial terminator character ?$?consistently improves accuracy by around 0.7%.Because each word was represented as a bag ofcharacter n-grams instead of a continuous string,and because, by its nature, a SVM yields sparsesolutions, combined with the evaluation usingcross-validation, we can safely say that the modeldoes not overfit and indeed learns useful decisionboundaries.4 Conclusions and Future WorksOur results show that the labelling system basedon the verb conjugation model we developed canbe learned with reasonable accuracy.
In the future,we plan to develop a multiple tiered labelling sys-tem that will allow for general alternations, suchas the ones occuring as a result of palatalization,to be defined only once for all verbs that havethem, taking cues from the idea of letters withmultiple values.
This, we feel, will highly im-prove the acuracy of the classifier.5 AcknowledgementsThe authors would like to thank the anonymousreviewers for their helpful comments.
All authorscontributed equally to this work.
The research ofLiviu P. Dinu was supported by the CNCS, IDEI- PCE project 311/2011, ?The Structure and In-terpretation of the Romanian Nominal Phrase inDiscourse Representation Theory: the Determin-ers.
?ReferencesAna-Maria Barbu.
Conjugarea verbelor roma?-nes?ti.
Dict?ionar: 7500 de verbe roma?nes?ti gru-pate pe clase de conjugare.
Bucharest: Coresi,2007.
4th edition, revised.
(In Romanian.)
(263pp.
).Ana-Maria Barbu.
Romanian lexical databases:Inflected and syllabic forms dictionaries.
InSixth International Language Resources andEvaluation (LREC?08), 2008.Angelo Roth Costanzo.
Romance ConjugationalClasses: Learning from the Peripheries.
PhDthesis, Ohio State University, 2011.527Figure 1: 10-fold cross validation scores for various combination of parameters.
Only the values correspondingto the best C regularization parameters are shown.Liviu P. Dinu, Emil Ionescu, Vlad Niculae, andOctavia-Maria S?ulea.
Can alternations belearned?
a machine learning approach to verbalternations.
In Recent Advances in NaturalLanguage Processing 2011, September 2011.Rong-En Fan, Kai-Wei Chang, Cho-Jui Hsieh,Xiang-Rui Wang, and Chih-Jen Lin.
Liblinear:A library for large linear classification.
Journalof Machine Learning Research, 9:1871?1874,June 2008.
ISSN 1532-4435.Jir?i Felix.
Classification des verbes roumains, vol-ume VII.
Philosophica Pragensia, 1964.Alf Lombard.
Le verbe roumain.
Etude mor-phologique, volume 1.
Lund, C. W. K. Gleerup,1955.Grigore C. Moisil.
Probleme puse de traduc-erea automata?.
conjugarea verbelor ?
?n limbaroma?na?.
Studii si cerceta?ri lingvistice, XI(1):7?29, 1960.I.
Papastergiou, N. Papastergiou, and L. Man-deki.
Verbul roma?nesc - reguli pentru ??nlesnirea?
?nsus?irii indicativului prezent.
In RomanianNational Symposium ?Directions in Roma-nian Philological Research?, 7th Edition, May2007.F.
Pedregosa, G. Varoquaux, A. Gramfort,V.
Michel, B. Thirion, O. Grisel, M. Blon-del, P. Prettenhofer, R. Weiss, V. Dubourg,J.
Vanderplas, A. Passos, D. Cournapeau,M.
Brucher, M. Perrot, and E. Duchesnay.Scikit-learn: Machine learning in Python.
Jour-nal of Machine Learning Research, 12:2825?2830, Oct 2011.Valeria Gut?u Romalo.
Morfologie Structurala?
alimbii roma?ne.
Editura Academiei RepubliciiSocialiste Roma?nia, 1968.528
