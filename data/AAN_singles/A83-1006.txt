TEAM: A TRANSPORTABLE NATURAL-LANGUAGE INTERFACE SYSTEMBarbara J. GroszAr t i f i c ia l  In te l l igence  CenterSRI In ternat iona lMenlo Park,  CA 94025A.
OverviewA major benef i t  of us ing  natura l  language toaccess  the in fo rmat ion  in a database  i s  that  i tshifts onto the system the burden of mediat ingbetween two views of the data :  the way in whichthe data is  s to red  ( the  "database v iew") ,  and theway in which an end-user  th inks  about  i t  ( the"user*s  v iew") .
Database in fo rmat ion  i s  recordedin terms of files, records ,  and fields, whilenatural-language expressions refer to the sameinformation in  terms of entities and relationshipsin the world.
A major problem in constructing anatural-language interface is determining how toencode and use the information needed to bridgethese two views.
Current natural-languageinterface systems require extensive efforts byspecialists in natural-language processing toprov ide  them with  the in fo rmat ion  they need to dothe br idg ing .
The systems are, in effect,handtallored to provide access to particulardatabases.This paper focuses  on the problem ofconst ruct ing  t ranspor tab le  natura l - languagein ter faces ,  i .e .
,  systems that  can be adapted toprov ide access  to databases  for  which they werenot specifically handtailored.
It describes aninitial version of a transportable system, calledTEAM (for ~ransportable E_ngllsh A_ccess Datamanager).
The hypothesis underlying the researchdescr ibed  in this paper is that the i n fo rmat ionrequired for the adaptation can be obtainedthrough an Lnteractlve dialogue with databasemanagement personnel who are not familiar withnatural-language processing techniques.B.
I s sues  of Transpor tab i l i tyThe insistence on transportabilitydistinguishes TEAM from previous systems such asLADDER \[Hendrlx ec al., \[978\] LUNAR \[Woods,Kaplan, and Webber, 1972\], PLANES \[Waltz, 1975\],REL \[Thompson, \[975\], and has affected ~he designof the natural-language processln~ system inseveral ways.
Most previously built natural-language interface systems have used techniquesthat make them inherently difficult to transfer tonew domains and databases.
The internalrepresentations \[n these systems typicallyintermix (in their data structures and procedures)information about language with information aboutthe domain and the database.
In addition, inInterpretln~ a query, the systems conflate what auser is requesting (what hls query "means") withhow Co obta in  the in fo rmat ion  requested .
Movingsuch systems to a new database  requ i res  care fu lhandcra f t ing  that  invo lves  deta i led  knowledge ofsuch th ings  ae pars ing  procedures ,  the par t i cu la rway in  which domain in fo rmat ion  i s  s to red ,  anddata -access  procedures .
To prov ide fo rt ranspor tab i l i ty ,  TEAM separates  in fo rmat ion  aboutlanguage,  about  the domain, and about  thedatabase .The dec is ion  to prov ide t ranspor tab i l i ty  toex is t ing  convent iona l  databases  (whichd i s t ingu ishes  TEAM from CHAT \[Warren, 1981\]) meansthat  the database  cannot  be res t ructured  to makethe way in  which i t  s to res  data  more compat ib lewi th  the way in  which a user  may ask about thedata .
Although many problems can be avoided i fone i s  a l lowed to des ign  the database as we l l  asthe natura l - language system, g iven  the preva lenceof  ex is t ing  convent iona l  databases ,  approacheswhich make th i s  assumpt ion  are l i ke ly  to havelimited applicability in the near-term.The TEAM system has three  major components:(1) an acquZst t ion  component, (2) the DIALOGIClanguage system \[Grosz, et al, 1982\], and (3) adata-access ccaponent.
Section C descrlbes howthe language and data-access components weredesigned to accommodate the needs oft ranspor tab i l i ty .
Sect ioo  D descr ibes  the des ignof the acquisition component to allow flexibleinteraction ~rlth a database expert and discussesacquisition problems caused by the differencesbetween the database view and user view.Section E shows how end-user queries areinterpreted after an acqu is i t ion  has beencompleted.
Section F describes the current stateof development of TEAM and lists several problemscurrently under investigation.C.
System DesignIn TEAM, the t rans la t ion  of an Eng l i sh  queryin to  a database query takes  p lace in two s teps .First, the DIALOGIC system constructs arepresentation of the literal meaning or "logicalform" of the query \[Moore, 1981\].
Second, thedata-access component translates the logical forminto a formal database query.
Each of these stepsrequires a combination of some information that isdependent on the domain or the database wlth someinformation that is not.
To provide fortransportability, the TEAM system carefullyseparates these two kinds of information.39I.
Domain- and Database-DependentInformationTo adapt TEAM to a new database threekinds of information must be acquired: informationabout words, about concepts, and about thestructure of the database.
The data structuresthat encode this information--and the languageprocessing and data-access procedures that usethem--are designed to allow for acquiring newinformation automatically.Information about  words, lexlcalinformation, includes the syntactic properties ofthe words that will be used in querying thedatabase and semantic information about the kindof concept to which a particular word refers.TEAM records the lexlcal information specific to agiven domain in a lexicon.Conceptual information includesinformation about taxonomic relationships, aboutthe  k inds  of  ob jec ts  that  can serve  as a rgumentsto  a pred icate ,  and about  the  k inds  o f  p roper t iesan ob jec t  can have.
In  TEAM, the  in terna lrepresentat ion  of  in fo rmat ion  about  the  ent i t iesin the domain of discourse and the relationshipsthat can hold among them is provided by aconceptual schema.
This schema includes a sorthierarchy encoding the taxonomic relationshipsamong objects in the domain, information aboutconstraints on arguments to predicates, andinformation about relationships among certaintypes of predicates.A database schema encodes informationabout how concepts in the conceptual schena maponto the structures of a particular database.
Inparticular, it links conceptual-schemarepresentations of entities and relationships inthe domain to their realization in a particulardatabase.
TEAM currently assumes a relationaldatabase with a number of f i l es .
(No language-processlng-related problems are entailed in movingTEAM to other database models.)
Each file isabout some kind of object (e.g., employees,students, ships, processor chips); the fields ofthe file record properties of the object (e.g.,department, age, length).2.
Domain-lndependent InformationThe language executive \[Grosz, e ta l .
,1982; Walker, 1978|, DIALOGIC, coordinatessyntactic, semantic, and basic pragmatic rules intranslating an English query into logical form.DIALOGIC's syntactic rules provide a generalgrammar of English \[Robinson, 1982\].
A semantic"translation" rule associated with each syntacticphrase rule specifies how the constituents of thephrase are to be interpreted.
Basic pragmaticfunctions take local context into account inproviding the interpretation of such things asnoun-noun combinations.
DIALOGIC also includes aquantlfler-scoping algorithm.To provide access to the informa=,on ina particular database, each of the components ofDIALOG~C must access domain-speciflc informationabout the words and concepts relevant to thatdatabase.
The information required by thesyntactic rules is found in the lexicon.Information required by the semantic and pragmaticrules is found in the lexicon or the conceptualschema.
The rules themselves however do notinclude such domain-dependent information andtherefore do not need to be changed for differentdatabases .In a similar manner, the data-accesscomponent separates general rules for translatinglogical forms into database queries frominformation about a particular database.
Therules access information in  the conceptual anddatabase schemata to interpret queries for aparticular database.D.
AcquisitionTEAM i s  des igned  to  in teract  w i th  two k indsof  users :  a database  exper t  (DBE) and an end-user .The DBE provides information about the files andfields in the database through a system-dlrectedacquisition dialogue.
As a result of thisdlaloEue, the language-processlng and data-accesscomponents are extended so that the end-user mayquery the new database in natural-language.i.
Acquisition QuestionsBecause the DBE is assumed to befamiliar with database structures, but not withlanguage-processlng techniques, the acquisitiondialogue is oriented around database structures.That is, the questions are about the kinds ofthings in the files and fields of the database,rather than about lexlcal entries, sorthierarchies, and predicates.The disparity between the database viewof the data and the end-user's view make theacquisition process nontrlvlal.
For instance,consider a database of information about studentsin a university.
From the perspective of an end-user "sophomore" refers to a subset of all of thestudents, those who are in their second year atthe university.
The fact that a particularstudent is a sophomore might be recorded in thedatabase in a number of ways, including: (l) in aseparate file containing information about thesophomore students; (2) by a special value in asymbolic field (e.g., a CLASS field \[n which thevalue SOPH indicates "sophomore"); (3) by a "true"value in a Boolean field (e.g., a * in an \[S-$O?Hfield).For natural-language querying to beuseful, the end-user must be protected from havingto know which type of representation was chosen.The questions posed to the DBE for each kind ofdatabase construct must be sufficient to allowDIALOGIC to handle approximately the same range of40linguistic express ions  (e .g .
,  fo r  re fer r ing  to"s tudents  in the sophomore c lass ' )  regard less  ofthe par t i cu la r  database  implementat ion  chosen.
Ina l l  cases ,  TEAM wi l l  c reate  a lex ica l  ent ry  fo r"sophomore" and an ent ry  in the conceptua l  schemato represent  the concept  of sophomores.
Thedatabase attachment for thls concept will dependon the par t i cu la r  database  s t ruc ture ,  as w i l l  thek inds  of  p red icates  fo r  which i t  can be anargument.In  des ign ing  TEAM we found i t  impor tantto  d i s t ingu ish  three  d i f fe ranc  k inds of  f ie lds  Nar l thmeCic ,  feature  (Boolean) ,  and symbo l l c - -onthe bas is  of the range of l i ngu is t i c  express ionsto which each gives r i se .
AriChmetic f i e ldscontain numeric values on which comparisons andcomputations llke averaging are likely to be done.
(F ie lds  conta in ing  dates  are  not  yet  handled byTEAM.)
Feature  f ie lds  conta in  t rue / fa l se  va lueswhich record  whether  or  not some at t r ibute  i s  ap roper ty  of  the ob jec t  descr ibed  by the f i l e .Symbolic f ie lds  typ ica l ly  conta in  va lues  thatcor respond to nouns or  ad jec t ives  that  denote thesubtypes  of  the domain denoted by the f ie ld .D i f fe rent  acqu is i t ion  quest ions  are  asked fo r  eachtype of f ie ld .
These are i l l us t ra ted  in  theexample in Sect ion  D.3.2.
Acqu is i t ion  S t ra tegyThe ~aJor  features  of the s t ra tegydeveloped for  acqu i r ing  in fo rmat ion  about adatabase  from a DBE inc lude:  (1)  p rov id iu  Emultiple levels of detail for each question posedto the DBE; (2) allowing a DBE to review previousanswers and change them; and (3) checking forlegal answers.At present, TEAM initially presents theDBE wlth the short-form of a quesclou.
A moredetailed version ("long-form') of the question,including examples illustratlng different kinds ofresponses, can be requested by the DBE.
Anobvious excenslon to this strategy would be topresent different Inltial levels to differentusers  (depending,  fo r  example, on the i r  p rev iousexperience wlth the system).Acqu is i t ion  Is  eas ie r  i f  each new p ieceof  in fo rmat ion  is  immediately in tegrated  in to  theunder ly ing  knowledge s t ructures  of the program.8owever, we a l so  wanted Co a l low the DSE to changeanswers to prev ious  quest ions  ( th i s  has turned outto be an essential feature of TEAM).
Somequestions (e.g., those about irregular pluralforms and synonyms) affect only a single part ofTEAM (the lexicon).
Other questions (e.g., thoseabout feature fields) affect all components of thesystem.
Because of the complex interactionbetween acquisition questions and components ofthe system to be updated, immediate integration ofnew information is not possible.
As a result,updating of the lexicon, conceptual schema, anddatabase schema Is not done until an acqulsitiondialogue is completed.3.
Example of Acquisition QueeclonsTo i l lus t ra te  the acqu is i t ion  ofin fo rmat ion ,  cons ider  a database ,  ca l led  CHIP,conta in ing  in fo rmat ion  about  processor  ch ips .
Inpar t i cu la r ,  the f ie lds  in  th i s  database  conta inthe fo l low ing  in fo rmat ion :  the ident i f i ca t ionnumber of  a ch ip  ( ID) ,  i t s  manufacturer  (MAKER)i t s  width in b i t s  (WIDTH), i ce  speed inmegahertz  (SPEED), i t s  cos t  in do l la rs  (PRICE),the kind of technology (FAMILY), and a flagi nd icat ing  wheCher or  noc there  is an expor tl i cense  fo r  the ch ip  (EXP).In  the f igures  d i scussed  below, theDBE's response  is  ind icated  in uppercase .
Formany quesClone the DBE is presented wlch a llst ofoptions from which ha can choose.
For thesequestions, the complete llst is shown and theanswer ind icated  in  bo ld face .F igure  i shows the shor t - fo rm of  thequest ions  asked about  the f i l e  i t se l f .
Inresponse  to quest ion  (1 ) ,  the DBE te l l s  TEAM whatfields are in the file.
Responses to theremain ing quesCloms allow TEAM to identify thekind of object the file contains informationabout (2), types of linguistic expressions used torefer to It \[ (6) and (7)\], how to identifyindividual objects in the database (4), and how tospec i fy  ind iv idua l  ob jec ts  to the user  (5 ) .
Theseresponses result in the words "chip" and"processor"  be ing added to the lex icon ,  a new sor tadded to the taxonomy (prov id ing  thein terpretat ion  fo r  these  words) ,  and a l ink  madein the database  schema between th i s  sor t  andrecords in  the file CHIP.Figure 2 gives the short-form of themost central questions asked about symbolicfields, using the field MAKER (chip manufacturers)as exemplar.
These questions are used todetermine the kinds of properties represented, howthese  re la te  to proper t ies  in o ther  f ie lds ,  andthe k inds of linguistic expressions the fieldvalues can give rise to.
Question (4) allows TEAMto determine that individual field values refer tomanufacturers rather than chips.
The long-form ofQuest ion  (7) i s :Will you want to ask, for example,"How many MOTOROLA processors are there?
"to get a count of the number of PROCESSORSwith CHIP-MAKER-MOTOROLA?Question (8) expands to:Will you want to ask, for example,"How many HOTOROLAS are there?
"to get a count of the number of PROCESSORSwith CHIP-MAKER-MOTOROLA?In th i s  ease ,  the answer to quest ion  (7) Is  "yes"and to quest ion  (8) "no"; the f ie ld  has va luesthat can be used as explicit, but not implicit,classifiers.
Contrast this wlth a symbolic fieldin a file about students that contains the classof a student; in this case the answer to both41auesclons would be affirmative because, forexample, the phrases "sophomore woman" and"sophomores" can be used to refer to refer toSTUDENTS with CLASS=SOPHOMORE.
In other cases,the values may serve neither as explicit nor asimplicit classifiers.
For example, one cannot say*"the shoe employees" or *"the shoes" to mean"employees in the SHOE department".For both questions (7) and (8) apos i t ive  answer i s  the default.
It i s  impor tantto allow the user to override thls default,because TEAM must be able to avoid spuriousambiguities (e.g., where two fields have identicalfield values, but where the values can beclassifiers for only one field.
).Following acquisition of this field,lexical entries are made for "maker" and anysynonyms supplied by the user.
Again a new soni s  c reated .
I t  i s  marked as hav ing va lues  thatcan be explicit, but not implicit, classifiers.Later, when the actual connection to the databasei s  made, individual field values (e.g.,"Motorola") will be made individual instances ofthis new sort.Figure (3) presents the questions askedabout arithmetic fields, using the PRICE field asexemplar.
Because dates, measures, and countquantities are all handled differently, TEAM mustfirst determine which kind of arithmetic object isin the field (2).
In this case we have a unit of"worth" (6) measured in "dollars" (4).Questions (8) and (9) supply information neededfor interpreting expressions Involvlngcomparatives (e.g., "What chips are more expensivethan the Z8080?")
and superlatives (e--~7, "What isthe cheapest chip?").
Figure 4 gives the expandedversion of these questions.As a result of thls acquisition, a newsubsort of the (measure) sort WORTH i s  added tothe taxonomy for PRICE, and is noted as measuredin dollars.
In addition, lexlcal entries arecreated for adjectives indicating positive("expensive") and negative ("cheap") degrees ofprice and are linked to a binary predicate thatrelates a chip to its price.Feature fields are the most difficultfields to handle.
They represent a single(arbitrary) property of an entity, with valuesthat indicate whether or not the entity has theproperty, and they give rise to a wide range oflinguistic expresslons--adJectlvals, nouns,phrases.
The short-form of the questions askedabout feature fields are given in Figure 5, usingthe field EXP; the value YES indicates there is anexport license for a given processor, and NOindicates there is not.
Figures 6, 7, and 8 givethe expanded form of questions (4), (6), and (B)respectively.
The expanded form illustrates thekinds of end-user queries that TEAM can handleafter the DBE has answered these questions (seealso Figure 9).
Providing thls kind ofillustration has turned out to be essential forgetting these questions answered correctly.42Each of these types of expression leadsto new lexlcal, conceptual schema, and databaseschema entries.
In  general in the conceptualschema, feature field adJectlvals and abstractnouns result in the creation of new predicates(see Section E for an example); count nounsresult in the creation of new subsorts of the filesubject sort.
The database schema containsinformatlon about which field to access and whatfield value is required.TEAM also includes a limlted capabilityfor acqulrln8 verbs.
At present, only transitiveverbs can be acquired.
One of the arguments tothe predicate cozTespondlng to a verb must be ofthe same sort as the file subject.
The otherargument must correspond to the sort of one of thefields.
For the CHIP database, the DBE couldspecify that the verb "make" (and/or"manufacture") takes a CHIP as one argument and aMAKER as the second argument.E.
Sample Quer ies  and The i r  \ [n terpretat lonsAfter the DBE has completed an acquisitionsession for a file, TEAM can interpret and respondCo end-user queries.
Figure 9 lists some sampleend-user queries for the file illustrated in theprevious section.
The role of the different kindsof informatlon acquired above can be seen byconsidering the logical forms produced for severalqueries and the database attachments for the sortsand predicates that appear in them.
The followingexamples illustrate the information acquired forthe three different fields described in thepreceding section.Given the query,What are the Motorola chips?DIALOGIC produces the following logical form:(Query (WHAT tl (THING tl)(THE p2 (AND (PROCESSOR p2)(MAKER-OF p2 MOTOROLA))(EQ p2 tl))))where WHAT and THE are quantifiers; 1 tl and p2 arevariables; AND and EQ have their usualinterpretation.
The predicates PROCESSOR andMAKER-OF and the constant MOTOROLA were created asa result of acquisition.The following information in the databaseschema:PROCESSOR: file=CHIPkeyfield=lDMAKER-OF: file-CHIPfleld(argl)=IDfield(arg2)-MAKER1 Because the current version of DIALOGIC takes noaccount of the slngular/plural distinction, theuniqueness presupposition normally associated with"the" is not enforced.i s  used,  a long with sor~ h ie rarchy  in fo rmat ion  inthe conceptua l  schema, to generate  the ac tua ldatabase  query .new acqulslClon component allows the user moref l ex ib i l i ty  i n  answering questions and provides awider range of  de fau l t  answers .S imi la r ly ,  the end-user  queryWhat are the expor tab le  ch ips?would lead to the log ica l  form:(Query (WHAT t l  (THING cl)(THE p2 (AND (PROCESSOR p2)(EXP-POS p2))(EQ p2 el))))where EXP-POS is  a predlcace created byacqu is IC lon ;  i t  is true if its argumanC isexportable.
In thls case the relevant databasescheme information Is:TEAM cur rent ly  hand les  mul t ip le  f i l es  andprov ides  t ranspor tab i l i ty  to a l im i ted  range ofdatabases.
As menCloned previously, a relationaldatabase model is assumed.
Currently, TEAM alsoassumes all files are In third normal form.
Theacqu is i t ion  of  verbs  i s  l im i ted  Co allowing theDBE Co spec i fy  t rans IC lve  verbs ,  as descr ibed  inSect ion  D.3.
We are  cur rent ly  excending TEAM to(I) Prov ide fo r  in terpretat ion  ofexpress ions  invo lv ing  such th ings  asmass terms, aggregates ,  quantifiedcoamands, and commands thac requ i re  thesystem Co perform funct ions  o ther  thanquery ing  che database .PROCESSOR: file-CHIPkeyfleld-\[DEXP-POS: file-CHIPfleld-EXPf i e ldva lue-TF ina l ly ,  co i l l us t ra te  how TEAM handlesa r i thmet ic  f ie lds ,  and In par t i cu la r  the use ofcomparat ives ,  cons ider  the query:(2)(3)Prov ide fo r  e f f i c ient  p rocess ing  of themost common forms of con junct ion .Genera l i ze  the verb acqu is i t ionprocedures  and extend TEAM to handlemore complex verbs ,  inc luding suchChings as verbs wlth mulClpledelineations, verbs chat require specialprepositions, and verbs that allowsenCenclel complements.What chip i s  cheaper  chart 5 do l la rs?The log ica l  form for  Chin query Is(4) Handle databases  encoding t ime- re la tedin fo rmat ion  and extend DIALOGIC tohandle expressions involving clme andtense.
(Query (WHAT pl (PROCESSOR pl)((MORE C~AP)  pl (DOLLAH 5)))) G. AcknowledgmentsThe conceptual schema encodes the relationshipbetween the predicates CHEAP and PRICE-OF (again,both concepts created as a result of acquisition),wlCh the following informationCHEAP: measure-predlcate-PRICE-OFscale-negativeAnd the relevant database schema Informaclon is:PROCESSOR: file-CHIPkeyfield-\[DPRICE-OF: flit-CHIPfield(argl)=\[Dfleld(arg2)-PRICEF.
Status and Future ResearchThe development of TEAM has involved theef fo r ts  of  many people.
Doug Appelc, ArmarArchbold, Bob Moore, Jerry Hobbs, Paul Marcln,Pernando Pere i ra ,  Jane Robinson, DanielSagalowicz ,  and David Warren have made ~aJorcont r ibut ions .This research was supported by the DefenseAdvanced Research Projects Agency with the NavalElectronic Systems Command under Contract N00039-80-'<:-0645.The views and conclusions contained in Chindocument are chose of the author and should not beinterpreted as representative of the officialpolicies, either expressed or implied, of theDefense Advanced Research Projects Agency or theUnited States Government.An initial version of TEAM was implemented ina combination of Incerlisp (acquisition andDIALOGIC components) and Prolog (data accesscomponent) on the DEC2060, but address spacellmicatlons made continued development difficult.Current research on TEAM is being done on theSymbolics LISP machine.
The acquisition componenthas been redesigned co cake advantage ofcapabilities provided by che blcmap display.
TheREFERENCESGrosz, B. eta l .
\[1982\] "DIALOGIC: A Core Natural-Language Processing System," Proceedln~s ofthe Ninth \[nternaClonal Conference onComputational Linguistics,Czechoslovakia (July 1982).Prague,43Moore, R. C. \[1981\] "Problems in Logical  Form," inProceedings of the 19th Annual Meecln~ of theAssociation for Computacional Lin~ulsclcs,pp.
117-L24.
The Association forComputaCional LingulsClcs, SRI International,Menlo Park, Callfornla (June 1981)..Robinson, J.
\[1982\] "DIAGRAM: A Grammar forDialogues," Communications of the ACM,Vol.
25, No.
1, pp.
27-47 (January 1982).Thompson, g.B .
and Thompson, B .H .
\[1975\]"Pracclcal Natural Lansuage Processing: TheREL System as Prototype," H. Rubinoff andM.
C. Yovlts, eds., pp.
109-168, Advances inComputers 13, Academic Press, New York, (NewYork 1975).Walker, D. E.
(ed.)
\[1978\] Understanding SpokenLanguage, Elsevier North-Hollam~, New York,New York, (1978).Waltz, D. \[1975\] "Natural Language Access to aLarge Data Base: An Engineering Approach,"Proc.
4th International Joint Conference onArtificial Intelligence, Tbillsl, USSR, pp.868-872 (September 1975).Warren, D.R.
\[1981\] "Efflclenc Processing ofInteractive Relational Database QueriesExpressed in Logic," Proc.
SeventhI n te rnat iona l  Conference on Ver~ Larze DataBases, Cannes, France,  pp.
2"'2~-2--~',(September 1981).Woods, W. A., R. M. Kaplan, and B. N-Nebber \[I972\]"The Lunar Sciences Naaural LanguageInformation System," BBN Report 2378, BoltBeranek and Newman, Cambridge, Massachusetts(1972).File name- CH~(1} Fields - (ID MAKER WIDTH SPEED PRICE FAMILY EXP)(2) Subject - PROCESSOR(31 Synonyms for PROCESSOR - CHIP(4} Primazy key - ID{5} Identifying fields - MAKER ID(8) Can one say Who are the PROCESSORS?
- YES  NO(7) Pronouns for file subject - HE  SHE IT THEY(8) Field containing the name of each file subject - IDFigure 1: Questions About FileField - PR ICE( 1 ) Type of field SYMBOLIC AR IT l tMET IC  FEATURE(2) Value type.
DATES MEASURES COUNTS\[3) Are the units implicit?
YES NO(4) Enter implicit unit - DOLLAR(5) Abbreviation for this unit.
~ -(6) Measure type of this trait - TIME WEIGHT SPEED VOLUMELINEAR AREA WORTH OTHER{7) Minimum and maximum numeric valucs- (1,100)(8} Positive adjectives - (EXPENSIVE COSTLY)(9) Negative adjective - (CHEAP)Figure 3: Questions for Arithmetic Field PR ICEField - MAKER( I ) Type of field - SYMBOLIC ARITHMETIC FEATURE(2) .Axe field values units of measure?
YES NO(3} Noun subvategory - PROPER COUNT MASS(4} Domain of field value's reference - SUBJECT FIELD(5) Can you say Who is the CHIP -MAKERt  YES  NO(6) Typical value - MORTOROLA(7) Will values of this field be used as cia~sifers.~ YES  NO{8) Will the values in this field be used alone as implicitclassifiers?
YES NOFigure 2: Questions for Symbolic Field MAKERPlease specify any adjectives that can be used in theircomparative or superlative form to indicate how much eachPROCESSOR is in a positive direction on the scale measuredby the values of CHIP-PRICE.In a file about machine-tools with a numeric field calledPRICE, one could ask:How EXPENSIVE  is each tool?to meanWhat is the price of each tool.~EXPENSIVE, COSTLY, AND (HIGH PRICED) ~re positiveadjectives designating the upper range of the PRICE scale.CHEAP and (LOW PRICED), which designate the lower rangeof the PRICE scale, are negative adjectives.Please enter any such adjectives you will want to ~ inquerying the database.Figure 4: Expanded Version of Adjective Questions(Arithmetic Field}44Field - EXP(I) Type of field - SYMBOLIC ARITHMETIC FEATURE(2) Positive value - YES(3) Negative value - NO(4) Positive adjectives - EXPORTABLE(5) Negative adjectives - UNEXPORTABLE(6) Positive abstraA't nouns - EXPORT AUTHORIZATION(7) Negative abstract no~.1 -(8) Pmitive common ouns -(9) Negative common ouns -Figure 5: Questions for Feature Field \]gXPWhat adjectivab are aasoeiated with the field valuesYES in this field?In general these are word.5 wwww such that youmight want to Mk:Which PROCESSORS are www~'to  me~Which PROCESSORS have ?
CHIP-EXP of YES!For example, in s medical file about PATIENTs with afeature field IMM having a positive field value Yand a negative filed value N,you might want to ask:Which patients are IMMUNE (or RESISTANT,PROTECTED)!Figure 6: Feature Field AdjectivalsList any abstrart nouns ~k~tociated with the positivefeature value YES.In general this is any word wwww such that youmight want to ask a question of the form:Which PROCESSORS hove wwww?tO meanWhich PROCESSORS have CHIP-EXP of YES!For example, in a medical databaae about PATIENTswith a feature field IMM having a positive fieldvalue Y and a negative field value N,you might want to a~k:~,Vhich patients have IMMUNITY?instead ofWhich patients have aa IMM of Y?Figure 7: Feature Field Abstract NounsList any count nous~ ammciated with positivefield value YES.In general, this is any word wwww such thatyou might want to uk:What PROCESSORS are wwww-s!to meanWhat PROCESSORS have a CHIP-EXP of YES?For example, in a file about EMPLOYEEs with ?feature field CITIZEN having a positivefield value Y and ne~tive field value N,you might want to aek:Which employees are citizens?instead ofWhich employees have a CITIZEN of Y?Figure 8: Feature Field Count Nouns~,Vhat 8 bit chips are cheaper than the fastestexportable chip made by ZilogtWho makes the fastest exportable NMO$ chipcosting less than 10 dollars!By whom is the most expensive chip readerWho b the cheapest exportable chip made by!Who is the most expensive chip made?What is the fastest exportable chip that Motorola makes?What 16 bit chips does Zilog make?Who makes the fastest exportable NMOS chip?Who makes the faatest exportable chip.
~Does Zilog make a chip that is faster than everychip that Intel makes?Are there any 8 bit Ziiog chipe?is some exportable chip faster than 12 mhz?Is every Ziiog chip that is f~ter than 5 mhz exportable?How faat is the faate~t exportable chip?How expensive is the f~stest ~'~MOS chiptFigure 9: Sample questions for CHIP databaae45
