?Comparing Lexicalized Treebank Grammars Extracted fromChinese, Korean, and English CorporaFei  X ia ,  Chung-hye  Han,  Mar tha  Pa lmer ,  and  Arav ind  Josh iUniversity of PennsylvaniaPhi ladelphia PA 19104, USA{fxia, chunghye, mpalmer, j oshi}@linc, cis.
upenn, eduAbst rac tIn this paper, we present a methodfor comparing Lexicalized Tree Ad-joining Grammars extracted fromannotated corpora for three lan-guages: English, Chinese and Ko-rean.
This method makes it possi-ble to do a quantitative comparisonbetween the syntactic structures ofeach language, thereby providing away of testing the Universal Gram-mar Hypothesis, the foundation ofmodern linguistic theories.1 In t roduct ionThe comparison of the grammars extractedfrom annotated corpora (i.e., Treebanks) isimportant on both theoretical and engineer-ing grounds.
Theoretically, it allows us to doa quantitative testing of the Universal Gram-mar Hypothesis.
One of the major concernsin modern linguistics is to establish an ex-planatory basis for the similarities and varia-tions among languages.
The working assump-tion is that languages of the world share a setof universal linguistic principles and the ap-parent structural differences attested amonglanguages can be explained as variation inthe way the universal principles are instan-tiated.
Comparison of the extracted syntac-tic trees allows us to quantitatively evaluatehow similar the syntactic structures of differ-ent languages are.
From an engineering per-spective the extracted grammars and the linksbetween the syntactic structures in the gram-mars are valuable resources for NLP applica-tions, such as parsing, computational lexicondevelopment, and machine translation (MT),to name a few.In this paper we first briefly discuss somelinguistic characteristics of English, Chinese,and Korean, and introduce the Treebanks forthe three languages.
We then describe atool that extracts Lexicalized Tree Adjoin-ing Grammars (LTAGs) from Treebanks andthe results of its application to these threeTreebanks.
Next, we describe our methodol-ogy for automatic comparison of the extractedTreebank grammars, This consists primar-ily of matching syntactic structures (namely,templates and sub-templates) in each pairof Treebank grammars.
The ability to per-form this type of comparison for different lan-guages has a definite positive impact on thepossibility of sorting out the universal ver-sus language-dependent features of languages.Therefore, our grammar extraction tool is notonly an engineering tool of great value in im-proving the efficiency and accuracy of gram-mar development, but it is also very useful forinvestigating theoretical linguistics.2 Three  Languages  and  Three' r reebanksIn this section, we briefly discuss some lin-guistic characteristics of English, Chinese,and Korean, and introduce the Treebanks forthese languages.2.1 Three  LanguagesThese three languages belong to different lan-guage families: English is Germanic, Chineseis Sino-Tibetan, and Korean is Altaic (Com-rie, 1987).
There are several major differencesbetween these languages.
First, both English52and Chinese have predominantly subject-verb-object (SVO) word order, whereas Ko-rean has underlying SOV order.
Second, theword order in Korean is freer than in Englishand Chinese in the sense that argument NPsare freely permutable (subject o certain dis-course constraints).
Third, Korean and Chi-nese freely allow subject and object deletion,but English does not.
Fourth, Korean hasricher inflectional morphology than English,whereas Chinese has little, if any, inflectionalmorphology.2.2 Three TreebanksThe Treebanks that we used in this paper arethe English Penn Treebank II (Marcus et al,1993), the Chinese Penn Treebank (Xia etal., 2000b), and the Korean Penn Treebank(Chung-hye Han, 2000).
The main param-eters of these Treebanks are summarized inTable 1.1 The tags in each tagset can beclassified into one of four types: (1) syntac-tic tags for phrase-level annotation, (2) Part-Of-Speech (POS) tags for head-level annota-tion, (3) function tags for grammatical func-tion annotation, and (4) empty category tagsfor dropped arguments, traces, and so on.We chose these Treebanks because they alluse phrase structure annotation and their an-notation schemata re similar, which facili-tates the comparison between the extractedTreebank grammars.
Figure 1 shows an an-notated sentence from the Penn English Tree-bank.3 LTAGs  and  Ext rac t ionA lgor i thmIn this section, we give a brief introduction tothe LTAG formalism and to a system namedLexTract, which we build to extract LTAGsfrom Treeb~.nks.1The reason why the average sentence length forKorean is much shorter than those for English andChinese is that a big portion of the corpus for Ko-rean Treebank includes dialogues that contain manyone-word replies, whereas English and Chinese cor-pora consist of newspaper articles.
((S (ppoLOC (IN at)(NP (NNP FNX))(NP-SBJ-1 (bINS underwriters))(ADVP (RB stin))(VP (VBP draft)(NP (bINS policies))(S-MNR(NP-SBJ (-NONE- *-1 ))(VP (VBG using)(NP(NP (iNN fountain) (NNS pens))(CO and)(NP (VBG blotting) (NN papers))))))))Figure 1: An example from Penn EnglishTreebank3.1 LTAG fo rmal i smLTAGs are based on the Tree AdjoiningGrammar formalism developed by Joshi,Levy, and Takahashi (Joshi et al, 1975; Joshiand Schabes, 1997).
The primitive elementsof an LTAG are elementary trees (etrees).Each etree is associated with a lexical item(called the anchor of the tree) on its fron-tier.
LTAGs possess many desirable proper-ties, such as the Extended Domain of Local-ity, which allows the encapsulation f all argu-ments of the anchor associated with an etree.There are two types of etrees: initial trees andauxiliary trees.
An auxiliary tree representsa recursive structure and has a unique leafnode, called the foot node, which has the samesyntactic category as the root node.
Leafnodes other than anchor nodes and foot nodesare substitution odes.
Etrees are combinedby two operations: substitution and adjunc-tion.
The resulting structure of the combinedetrees is called a derived tree.
The combina-tion process is expressed as a derivation tree.Figure 2 shows the etrees, the derived tree,and the derivation tree for the sentence un-derwriters still draft policies.
Foot and sub-stitution nodes are marked by ,, and $, re-spectively.
The dashed and solid lines in thederivation tree are for adjunction and substi-tution operations, respectively.3.2 The Form of  Target GrammarsWithout further constraints, the etrees inthe target grammar (i.e., the grammar to beextracted by LexTract) could be of variousshapes.
LexTract recognizes three types of53# of POS # ofsyntac-tags tic tagsLanguage corpus size(words)English 1,174KChinese 100KKorean 30Kaverage sen-tence length23.85 words| Ib"~ ' - l l~ , ) _o~3417of ftmc- # of empty cat-tion tags egory tags20 1226 717 4Table 1: Size of the Treebanks and the tagsets used in each Treebank#h ~ vP -~,~ #3: S #4:I ADVP VP" ", ~, vP / I~s I ', .
.
.
.
.
~ /NnsvBP ~/  I I ? '
v" , , .m~.
, r ia .~ ~,ill draR pc u.mm,..~(a) et re~NF VPJail~ draft NN$Iptfliei~draf t (#3)- - " - - ' "T ' - - - - " - - - -undcxwrRcrs(# 1 ) \ policies(#4)still(#2)(h) dcrivcd trc?
(c) dczivatitm trccFigure 2: Etrees, derived tree, and derivationtree for underwriters till draft policiesx TMx ~ wqy~ X~= w~ X m )?,.
cc  I X ~xo z,~ /~  x,{ xo z~ x/~'X.z ,~knti.~l itgm I(a) spinc-ctr~ (b) rm~-ctrce (c) c,,nj-etreeFigure 3: Three types of elementary trees inthe target grammarrelation (namely, predicate-argument, modi-fication, and coordination relations) betweenthe anchor of an etree and other nodes in theetree, and imposes the constraint that all theetrees to be extracted should fall into exactlyone of the three patterns in Figure 3.The spine-etrees for predicate-argumentrelations.
X ?
is the head of X m and theanchor of the etree.
The etree is formedby a spine X m ~ X m-1 ~ .. ~ X ?
andthe arguments of X ?.The mod-etrees for modification rela-tions.
The root of the etree has two chil-dren, one is a foot node with the labelWq,  and the other node X m is a modifierof the foot node.
X m is further expandedinto a spine-etree whose head X ?
is theanchor of the whole mod-etree.The conj-etrees for coordination rela-tions.
In a conj-etree, the children of theroot are two conjoined constituents anda node for a coordination conjunction.One conjoined constituent is marked asthe foot node, and the other is expandedinto a spine-etree whose head is the an-chor of the whole tree.Spine-etrees are initial trees, whereas mod-etrees and conj-etrees are auxiliary trees.3.3  Ext rac t ion  a lgor i thmThe core of LexTract is an extraction algo-rithm that takes a Treebank sentence such asthe one in Figure 1 and Treebank-specific in-formation provided by the user of LexTract,and produces a set of etrees as in Figure 4and a derivation tree.
We have describedLexTract's architecture, its extraction algo-rithm, and its applications in (Xia, 1999; Xiaet al, 2000a).
Therefore, we shall not re-peat them in this paper other than point-ing out that LexTract is completely anguage-independent.3.4  Exper imentsThe results of running LexTract on English,Chinese, and Korean Treebanks are shown inTable 2.
Templates are etrees with the lexicalitems removed.
For instance, #3, #6, and #9in Figure 4 are three distinct etrees but theyshare the same template.Figure 5 shows the log frequency of tem-plates in the English Treebank and percent-age of template tokens covered by template54mm ~i \ ] lml~ i Jtemplate etree word etree typestypes types types per word type6926 131,397 49,2061140 21,125 10,772etree typesper word tokenCFG rules(unlexicalized)2.67 34.68 15241.96 9.13 5151.45 2.76 : 177Table 2: Grammars extracted from three Treebanks#1: re2: #3: #4: #5: #6:S NP NP VP S NPPP S* NNS ADVP VP* NP| VP NNS / ~  NNP, .
.
P ,  I I R', vBf'~-.~ Il FNX enderwri,~,~ { { polid~s0ll draft at#7: #8: #9: #I0: #l l :  #12:VP NP NP NP NPVP" S NN NP" N VBG Np~ NIP" CC| NPNP VP{ ~ finmtain bltXtinge V~O NP; pen.~ Ipap~~ingFigure 4: The extracted etrees from the fullybracketed ttreetypes.
2 In both cases, template types aresorted according to their frequencies and plot-ted on the X-axis.
The figure shows thata small subset of template types, which oc-curs very frequently in the Treebank and canbe seen as the core of the Treebank gram-mar, covers the majority of template tokensin the Treebank.
For instance, the mostfrequent template type covers 9.37% of thetemplate tokens and the top 100 (500, 1000and 1500, respectively) template types cover87.1% (96.6%, 98.4% and 99.0%, respectively)of the tokens, whereas about half (3440) ofthe template types occur once, accounting foronly 0.32% of template tokens in total.4 Compar ing  Three  TreebankGrammarsIn this section, we describe our methodologyfor comparing Treebank gr3.mmars and theexperimental results.4.1 Methodo logyTo compare Treeb~nb grammars, we need toensure that the Treebank grammars are basedon the same tagset.
To achieve that, we firstcreate a new tagset that includes all the tags2If a template occurs n times in the corpus, it iscounted as one template type but n template tokens.
(a) Frequency (b) CoverageFigure 5: Etree template types and templatetokens in the Penn English Treebank(X-axes: (a) and (b) template typesY-axes: (a) log frequency of templates; (b)percentage of template token covered by tem-plate types)from the three Treebanks.
Then we mergesome tags in this new tagset into a single tag.This step is necessary because certain distinc-tions among some tags in one language do notexist in another language.
For example, theEnglish Treebank has distinct tags for verbsin past tense, past participals, gerunds, andso on; however, no such distinction is mor-phologically marked in Chinese and, there-fore, the Chinese Treebank uses the same tagfor verbs regardless of the tense and aspect.To make the conversion straightforward forverbs, we use a single tag for verbs in the newtagset.
Next, we replace the tags in the origi-nal Treebanks with the tags in the new tagset,and then re-run LexTract to build Treebankgr~mraars from those Treebanks.Now that the Treebank grammars are basedon the same tagset, we can compare them ac-cording to the templates and sub-templatesthat appear in more than one 'rreebank mthat is, given a pair of Treebank grammars,we first calculate how many templates oc-cur in both grammars; 3 Next, we decomposeSIdeally, to get more accurate comparison results,we would like to compare trees, rather than templates(which are non-lexicalized); however, comparing etreesrequires bilingual parallel corpora, which we are cur-55templates: sub-templates:~ spine: S -> VP -> VNP| ~ subca~ (:NP, V@.
NP)V@ NP!
with root S(a) spine-etree templateVP spine: PP-> PVP'~ PP ~ subeat: (P@, NP)with root PPP@ NP~ rood-pair: (VP*, PP)(b) mod-etree t mplateI .
.
.
.
.
.
.~  spine: NP->NNP* cc~ r~P ~ subeat ~@) with root NPlq@ conj-tuple: (NP*, CC, NP)(c) conj-etree t mplateFigure 6: The decompositions of etree tem-plates (In sub-templates, @ marks the anchorin subcategorization frame, * marks the mod-ifiee in a modifier-modifiee pair.
)each template into a list of sub-templates (e.g.,spines and subcategorization frames) and cal-culate how many of those sub-templates occurin both grammars.
A template is decomposedas follows: A spine-etree template is decom-posed into a spine and a subcategorizationframe; a mod-etree template is decomposedinto a spine, a subcategorization frame, and amodifier-modifiee pair; a conj-etree templateis decomposed into a spine, a subcategoriza-tion frame, and a coordination tuple.
Figure6 shows examples of this decomposition foreach type of template.4.2 Exper imentsAfter tags in original Treebn.nks being re-placed with the tags in the new tagset, thenumbers of templates in the new Treebankgra.mmars decrease by about 50%, as shownin the second colnmn of Table 3 (cf.
the sec-ond column in Table 2).
Table 3 also lists thenumbers of sub-templates, such as spines andsubcategorization frames, for each grammar.Table 4 lists the numbers of template typesshared by each pair of Treeba.nk gr3.mmarsand the percentage of the template tokensrently building.in each Treebank which are covered by thesecommon template types.
For example, thereare 237 template types that appear in bothEnglish and Chinese Treebank grammars.These 237 template types account for 80.1%of template tokens in the English Treebank,and 81.5% of template tokens in the Chi-nese Treebank.
The table shows that, al-though the number of matched templates arenot very high, they are among the most fre-quent emplates and they account for the ma-jority of template tokens in the Treebanks.For instance, in the (Eng, Ch) pair, the 237template types that appear in both gram-mars is only 77.5% of all the English templatetypes, but they cover 80.1% of template to-kens in the English Treebank.
If we define thecore grammar of a language as the set of thetemplates that occur very often in the Tree-bnnk, the data suggest hat the majority ofthe core grammars are easily inter-mappablestructures for these three languages.If we compare sub-templates, rather thantemplates, in the Treebank grammars, thepercentages of matched sub-template tokens(as in Table 5) are higher than the percent-ages of matched template tokens.
This is be-cause two distinct templates may share com-mon sub-templates.4.3 Unmatched templatesOur previous experiments ( ee Table 4) showthat the percentages of unmatched templatetokens in three Treebanks range from 16.0%to 43.8%, depending on the language pairs.Given a language pair, there are many pos-sible reasons why a template appears in oneTreebank grammar, but not in the other.
Wedivide those unmatched templates into twocategories: spuriously unmatched templatesand truly unmatched templates.Spuriously unmatched templates Spu-riously unmatched templates are templatesthat either should have found a matched tem-plate in the other gra.mmar or should not havebeen created by LexTract in the first placeif the Treebanks were complete, uniformlyannotated, and error-free.
A spuriously un-matched template xists because of one of the56templates subtemplatesspines subcat~ames mod-pairsEng 3139 500 541 332 53Ch 547 108 180 152 18Kor 271 55 58 53 6(Eng,Ch)(Eng, Kor)(Ch, Kor)conj-tuples total1426458172Table 3: Treebank grammars with the new tagsettype (#)token (%)type (#)token (%)type (:~)token (%)matched templates(237, 237)(80.1, 81.5)(83, 83)(57.7, 82.8)(59,59)(57.2, 84.0)templates withunique tags(536, 99)(2.8, 12.3)(2075, 6)(28.1, 0.1)(324,6)(29.4, 0.1)other unmatchedtemplates(2366, 211)(17.1, 6.2)(981, 182)(14.2, 17.1)(164, 206)(13.4, 16.0)Table 4: Comparisons of templatea in three Treebank grammarsfollowing reasons:(Sl)  T reebank  size: The template is lin-guistically sound in both languages, and,therefore, should belong to the grarnmarsfor these languages.
However, the tem-plate appears in only one Treebank gram-mar because the other Treebank is toosmall to include such a template.
Figure7(S1) shows a template that is valid forboth English and Chinese, but it appearsonly in the English Treebank, not in theChinese Treebank.
($2) Annotat ion  difference: Treebanksmay choose different annotations forthe same constructions; consequentially,the templates for those constructionslook different.
Figure 7($2) shows thetemplates used in English and Chinesefor a VP such as "surged 7 (dollars)".In the template for English, the QPprojects to an NP, but in the templatefor Chinese, it does not.
($3) Treeb~nk annotat ion  error:  A tem-plate in a Treebank may result from an-notation errors in that Treebank.
If nocorresponding mistakes are made in theother Treebank, the template in the firstTreebank will not match any template inthe second 'I~reebank.
For instance, in theEnglish Treebank the word about in thesentence About 5 people showed up is of-ten mis-tagged as a preposition, resultingin the template in Figure 7($3).
Not sur-prisingly, that template does not matchany template in the Chinese Treebank.Tru ly  unmatched templates  A truly un-matched template is a template that does notmatch any template in the other Treebankeven if we assume both Treebanks are per-fectly annotated.
Here, we list three reasonswhy a truly unmatched template xist.
(T1) Word order:  The word order deter-mines the positions of arguments w.r.t.their heads, and the positions of modi-fiers w.r.t, their modifiees.
If two lan-guages have different word orders, theirtemplates which include arguments of ahead or a modifier are likely to look dif-ferent.
For example, Figure 8(T1) showthe templates for transitive verbs in Chi-nese and Korean grammars.
The tem-plates do not match because of the dif-ferent positions of the object of the verb.
(T2) Unique tags: For each pair of lan-guages, some Part-of-speech tags andsyntactic tags may appear in only onelanguage.
Therefore, the templates withthose tags will not match any templatesin the other language.
For instance, inKorean the counterparts of prepositionphrases in English and Chinese are nounphrases (with postpositions attaching tothem, not preposition phrases); there-fore, the templates with PP in Chinese,57(Eng,Ch)(Eng, Kor)(Ch, Kor)Tablespines subcat frames rood-pairs conj-tuples totaltype (60,60) (92, 92) (83,83) (II,II) (246,246)token (94.7,87.2) (94.0, 86.3) (82.6, 80.0) (84.2, 99.1) (91.4, 85.2)type (39, 39) (40, 40) (46, 46) (1, 1) (126,126)token (70.3, 96.9) (62.1, 96.6) (56.8, 99.5) (9.3, 52.3) (63.4,97.3)type (28, 28) (25,25) (29,29) (I, I) (83, 83)token I (74.2, 99.2) (63.1, 98.1) (60.2, 93.4) (0.i, 0.4) (66.1, 96.9)5: Comparisons of sub-templates in three Treebank grammarsVPVP* CC!
VPV @ NIL Nl-~Englishvp yPAVP* NP " VP*I QP Qp II cD~CD~English ChineseQPP@ QP*English(S 1) Treebank size ($2) annotation difference ($3) annotation crmrFigure 7: Examples of spuriously unmatched templatessuch as the left one in Figure 8(T2), donot match any template in Korean.
(T3) Un ique  syntact ic  re lat ions:  Somesyntactic relations may be present inonly one of the pair of languages beingcompared.
For instance, the templatein Figure 8(T3) is used for the sentencesuch as "You should go," said John,where the subject of the verb said ap-pears after the verb.
No such templateexists in Chinese.So far, we have listed six possible reasonsfor unmatched templates.
Without manuallyexamining all the unmatched templates, it isdifficult to tell how many unmatched tem-plates are caused by a particular reason.
Nev-ertheless, these reasons help us to interpretthe results in Table 4.
For instance, the ta-ble shows that Korean grammars cover only57.7% of template tokens in the English Tree-bank, and 57.2% in the Chinese Treebank,whereas the coverages for other language pairsare all above 80%.
We suspect that thisdifference of coverage is mainly caused by(S1), (T1), and (T2).
That is, first, Ko-rean Treebank is much smaller than the En-glish and the Chinese Treebanks, English andChinese Treebanks may have many tree tem-plates that simply was not found in the Ko-rean Treebank; Second, English and Chineseare predominantly head-initial, whereas Ko-rean is head-final, therefore, many templatesin English and Chinese can not find matchedtemplates in Korean because of the word or-der difference; Third, Korean does not havepreposition phrases, causing all the templatesin English and Chinese with PPs become un-matched.
To measure the effect of the wordorder factor to the matching rate, we re-didthe experiment in Section 4.2, but this timewe ignored the word order - -  that is, we treattemplates as unordered trees.
The results aregiven in Table 6.
Comparing this table withTable 4, we can clearly see that, the percent-ages of matched templates increase substan-tially for (Eng, Kor) and (Ch, Kor) when theword order is ignored.
Notice that the match-ing percentage for (Eng, Ch) does not changeas much because the word orders in Englishand Chinese are much similar than the ordersin English and Korean.5 ConclusionWe have presented a method of quantitativelycomparing LTAGs extracted from Treebanks.Our experimental results show a high pro-portion of easily inter-mappable structures,giving a positive implications for UniversalGrammar hypothesis, We have also describeda number of reasons why a particular tern-58$ $AV~ NPt NPt V~Chinese Korean(TI) word ordervPAVP* NP VP*IP@ NPt N@Chinese Korean(T2) unique ragsss(" 'sNPtV~ $!
?English(T3) unique relationFigure 8: Truly unmatched templates(Eng,Ch)(Eng, Kor)(Ch, Kor)matched templatestype (334, 259)token (82.8, 82.2)type (222, 167)token (66.4, 92.4)type (126,125)token (68.3, 97.3)tag mismatchesi (536, 99)!
(2.8, 12.3)I (2075, 6)!
(28.1, 0.1)(324,6)(29.4, 0.1)other mismatches(2269, 189)(14.4, 5.5)(842, 98)(5.5, 7.5)(97, 140)(2.3, 2.6)Table 6: Comparisons of templates w/o ordersplate does not match any template in otherlanguages and tested the effect of word orderon matching percentages.There are two natural extensions of thiswork.
First, running an alignment algorithmon parallel bracketed corpora to produceword-to, word mappings.
Given such word-to-word mappings and our template matchingalgorithm, we can automatically create lexi-calized etree-to-etree mappings, which can beused for semi-automatic transfer lexicon con-struction.
Second, LexTract can build deriva-tion trees for each sentence in the corpora.
Bycomparing derivation trees for parallel sen-tences in two languages, instances of struc-tural divergences (Dorr, 1993; Dorr, 1994;Palmer et al, 1998) can be automatically de-tected.Re ferencesChung-hye Hart.
2000.
Bracketing Guide-lines for the Penn Korean Treebank (draft).www.cis.upenn.edu/xtag/korean.tag.Bernard Comrie.
1987.
The World's Major Lan-guages.
Oxford University Press, New York.B.
J. Dorr.
1993.
Machine ~D'anslation: a Viewfrom the Lexicon.
MIT Press, Boston, Mass.B.
J. Dorr.
1994.
Machine translation diver-gences: a formal description and proposed so-lution.
Computational Linguistics, 20(4):597-635.Aravind Joshi and Yves Schabes.
1997.
TreeAdjoining Grammars.
In A. Salomma andG.
Rosenberg, editors, Handbook off For-mal Languages and Automata.
Springer-Verlag,Herdelberg.Aravind K. Joshi, L. Levy, and M. Takahashi.1975.
Tree Adjunct Grammars.
Journal offComputer and System Sciences.M.
Marcus, B. Santorini, and M. A.Marcinkiewicz.
1993.
Building a LargeAnnotated Corpus of English: the PennTreebank.
Computational Lingustics.Martha Palmer, Owen Rainbow, and Alexis Nasr.1998.
Rapid Prototyping of Domain-SpecificMachine Translation System.
In Proc.
ofAMTA-1998, Langhorne, PA.Fei Xia, Martha Palmer, and Aravind Joshi.2000a.
A Uniform Method of Grammar Ex-traction and its Applications.
In Proc.
off JointSIGDAT Conference on Empirical Methods inNatural Language Processing and Very LargeCorpora (EMNLP/VLC).Fei Xia, Martha Palmer, Nianwen Xue,Mary Ellen Okurowski, John Kovarik, ShizheHuang, Tony Kroch, and Mitch Marcus.2000b.
Developing Guidelines and EnsuringConsistency for Chinese Text Annotation.In Proc.
off the 2nd International Confer-ence on Language Resources and Evaluation(LREC-2000), Athens, Greece.Fei Xia.
1999.
Extracting Tree Adjoining Gram-mars from Bracketed Corpora.
In Proc.
off 5thNatural Language Processing Pacific Rim Sym-posium (NLPRS-99), Beijing, China.59
