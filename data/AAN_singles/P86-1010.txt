PARSING A FREE-WORD ORDER LANGUAGE:WARLPIRIMichael B. KashketArtificial Intelligence LaboratoryMassachusetts Institute of Technology545 Technology Square, room 823Cambridge, MA 02139ABSTRACTFree-word order languages have long posed significantproblems for standard parsing algorithms.
This paper re-ports on an implemented parser, based on Government-Binding theory (GB) (Chomsky, 1981, 1982), for a par-ticular free-word order language, Warlpiri, an aboriginallanguage of central Australia.
The parser is explicitly de-signed to transparently mirror the principles of GB.The operation of this parsing system is quite differentin character from that of a rule-based parsing system, ~e.g.,a context-free parsing method.
In this system, phrases areconstructed via principles of selection, case-marking, case-assignment, and argument-linking, rather than by phrasalrules.The output of the parser for a sample Warlpiri sentenceof four words in length is given.
The parser was executedon each of the 23 other permutations ofthe sentence, and itoutput equivalent parses, thereby demonstrating its abilityto correctly handle the highly scrambled sentences foundin Warlpiri.INTRODUCTIONBasing a parser on Government-Binding theory has ledto a design that is quite different from traditional algo-rithms.
1 The parser presented here operates in two stages,lexical and syntactic.
Each stage is carried out by thesame parsing engine.
The lexical parser projects each con-stituent lexical item (morpheme) according to informationin its associated lexical entries.
Lexical parsing is highlydata-driven from entries in the lexicon, in keeping withGB.
Lexical parses returned by the first stage are thenhanded over to the second stage, the syntactic parser, asinput, where they are further projected and combined toform the final phrase marker.Before plunging into the parser itself, a sample Warl-piri sentence is presented.
Following this, the theory of ar-gument (i.e., NP) identification is given, in order to showhow its substantive linguistic principles may be used di-rectly in parsing.
Both the lexicon and the other basicdata structures are then discussed, followed by a descrip-tion of the central algorithm, the parsing engine.
Lexicalphrase-markers produced by the parser for the words kur-1 Johnson (1985} reports another design for analyzing discontinuousconstituents; it is not grounded on any linguistic theory, however.duku and puntarni are then given.
Finally, the syntacticphrase-marker for the sample sentence is presented.
Allthe phrase-markers shown are slightly edited outputs ofthe implemented program.A SAMPLE SENTENCEIn order to make the presentation of the parser a littleless abstract, a sample sentence of Warlpiri is shown in (1):(1) Ngajulu-rlu ka-rna-rla punta-rni kurdu-ku karli.I-ERG PRES-1-3 take-NPST child-DAT boomerang'I am taking the boomerang from the child.
'(The hyphens are introduced for the nonspeaker ofWarlpiri in order to clearly delimit the morphemes.)
Thesecond word, karnarla, is the auxiliary which must appearin the second (Wackernagel's) position.
Except for theauxiliary, the other words may be uttered in any order;there are 4!
ways of saying this sentence.The parser assumes that the input sentence can l~e bro-ken into its constituent words and morphemes.
~ Sentence(1) would be represented as in (2).
The parser can notyet handle the auxiliary, so it has been omitted from theinput.
((NGAJULU RLU) (PUNTA RNI) (KURDU KU) (KARLI))ARGUMENT IDENTIF ICAT IONBefore presenting the lexicon, GB argument identifica-tion as it is construed for the parser is presented?
Caseis used to identify syntactic arguments and to link themto their syntactic predicates {e.g., verbal, nominal and in-finitival).
There are three such cases in Warlpiri: ergative,absolutive and dative.Argument identification is effected by four subsystemsinvolving case: selection, case-marking, case-assignment,and argument-linking.
Only maximal projections (e.g., NPand VP, in English) are eligible to be arguments.
In order~Barton (1985) has written a morphological nalyzer that breaksdown Warlpiri words in their constituent morphemes.
We have con-nected both parsers o that the user is able to enter sentences in a lessstilted form.
Input (2), however, is given directly to the main parser,bypassing Barton's analyzer.ZThis analysis of Warlpiri comes from several sources, and from thehelpful assistance of Mary Laughren.
See, for example, (Laughren,1978; Nash, 1980; Hale, 1983).60Pkurdu- kuTHE LEX ICONThe actions for performing argument identification~ aswell as the data on which they operate, are stored for eachlexical item in the lexicon?
The part of the lexicon neces-sary to parse sentence (2) is given in figure 2.The lexicon is intended to be a transparent encodingFigure 1: An example of argument identification?for such a category to be identified as an argument, itmust be visible to each of the four subsystems.
That is, itmust qualify to be selected by a case-marker, marked forits case, assigned its ease, and then linked to an argumentslot demanding that case.Selection is a directed action that, for Warlpiri, maytake the category preceding it as its object.
This followsfrom the setting of the head parameter of GB: Warlpiri isa head-final language?
Selection involves a co-projectionof the selector and its object, where both categories areprojected one level?
For example, the tensed element, rni,selects verbs, and then co-projects to form the combined"inflected verb" category?
An example is presented below?The other three events occur under the undirected struc-tural relation of siblinghood.
That is, the active category(e.g., case-marker) must be a sibling of the passive cate-gory (e.g., category being marked for the case).Consider figure 1.
The dative case-marker, ku, se-lects its preceding sibling, kurdu, for dative case.
Onceco-projected, the dative case-marker may then mark itsselected sibling for dative case.
Because ku is also a case-assigner, and because kurdu has already been marked fordative case, it may also be assigned dative case.
Theprojected category may then be linked to dative case bypunta-rni which links dative arguments to the source the-matic (0) role because it has been assigned ative case.
Inthis example, the dative case-marker performed the firstthree actions of argument identification, and the verb per-formed the last.
Note that only when kurdu was selectedfor case was precedence information used; case-marking,case-assignment and argument-linking are not directional.In this way, the fixed-morpheme order and free-word orderhave been properly accounted for.
(KARLI (datum (v - ) )(datum (n +)))(KU (ac t ion  (ass ign  dat ive) )(action (mark dative))(action( se lec t  (dat ive  ((v .
-) (n .
?
)))))(datum (case dative))(datum (percolate t)))(KURDU (datum (v -))(datum (n *)))(NGAJULU (datum (v -))(datum (n +))(datum (person i))(datum (number singular)))(PUNTA (datum (v *))(datum (n-))(datum (conjugation 2))(datum(theta-roles (agent theme source))))(RLU (action (mark ergative))(action(select (ergative ((v .
-) (n .
*)))))(datum (case ergative))(datum (percolate t)))(RNI (action (assign absolutive))(action(select (+ ((v .
+) (n .
-)(conjugation .
2)))))(datum (ins +))(datum (tense nonpast)))Figure 2: A portion of the lexicon.61of the linguistic knowledge.
CONJUGATION stands for theconjugation class of the verb; in Warlpiri there are fiveconjugation classes.
SELECT takes a list of two arguments.The first is the element that will denote selection; in thecase of a grammatical case-marker, it is the grammaticalcase.
The second argument is the list of data that theprospective object must match in order to be selected.
Forexample, rlu requires that its object be a noun in order tobe selected.The representation for a lexicon is simply a list ofmorpheme-value pairs; lookup consists imply of searchingfor the morpheme in the lexicon and returning the valueassociated with it.
The associated value consists of theinformation that is stored within a category, namely, dataand actions.
Only the information that is lexically deter-mined, such as person and number for pronouns, is storedin the lexicon.There is another class of lexical information, lexicalrules, which applies across categories.
For example, allverbs in Warlpiri with an agent 0-role assign ergative case.Since this case-assignment is a feature of all verbs, it wouldnot be appropriate to store the action in each verbal entry;instead, it stated once as a rule.
These rules are repre-sented straightforwardly as a list of pattern-action pairs.After lexical look-up is performed, the list of rules is ap-plied.
If the pattern of the rule matches the category, therule fires, i.e., the information specified in the "action"part of the rule is added to the category.
For an example,see the parse of the inflected verb, puntarni, in figure 4,below.THE BAS IC  DATA STRUCTURESThe basic data structure of the parsing engine is theprojection, which is represented as a tree of categories.Both dominance and precedence information is recordedexplicitly.
It should be noted, however, that the precedencerelations are not considered in all of the processing; theyare taken into account only when they are needed, i.e.,when a category is being selected.While the phrase-marker is being constructed theremay be several independent projections that have not yetbeen connected, as, for example, when two arguments havepreceded their predicate.
For this reason, the phrase-mar-ker is represented asa forest, specifically with an array ofpointers to the roots of the independent projections.
Anarray is used in lieu of a set because the precedence infor-mation is needed sometimes, i.e., when selecting a cate-gory, as above.These two structures contain all of the necessary struc-tural relations for parsing.
However, in the interests of ex-plicit representation a d speeding up the parser somewhat,two auxiliary structures are employed.
The argument setpoints to all of the categories in the phrase-marker thatmay serve as arguments o predicates.
Only maximal pro-jections may be entered in this set, in keeping with X-theory.
Note that a maximal projection may serve as anargument of more than one predi(:ate, so that a categoryis never removed from the argument set.The second auxiliary structure is the set of unsatis-fied predicates, which points to all of the categories in thephrase-marker that have unexecuted actions.
Unlike theargument set, when the actions of a predicate are executed,the category is removed from the set.The phrase-marker contains all of the structural re-lations required by GB; however, there is much more in-formation that must be represented in the output of theparser.
This information is stored in the feature-value listsassociated with each category.
There are two kinds of fea-tures: data and actions.
There may be any number of dataand actions, as dictated by GB; that is, the representationdoes not constrain the data and actions.
The actions of acategory are found by performing a look-up in its feature-value list.
On the other hand, the data for a category arefound by collecting the data for itself and each of the sub-categories in its projection in a recursive manner.
This isdone because data are not percolated up projections.The list of actions is not completely determined.
Se-lection, case-marking, case-assignment, and argument link-ing are represented as actions (el.
the discussion of case,above).
It should be noted that these are the only actionsavailable to the lexicon writer.
Actions do not consist ofarbitrary code that may be executed, such as when an arcis traversed in an ATN system.
The supplied actions, asderived from GB, should provide a comprehensive s t oflinguistically relevant operations needed to parse any sen-tence of the target language.Although the list of data types is not yet complete,a few have already proved necessary, such as person andnumber information for nominal categories.
The list of 0-roles for which a predicate subcategorizes is also stored asdata for the category.THE PARSING ENGINEThe parsing engine is the core of both the lexical andthe syntactic parsers.
Therefore, their operations can bedescribed at the same time.
The syntactic parser is just theparsing engine that accepts entences (i.e., lists of words)as input, and returns yntactic phrase-markers a  output.The lexical parser is just the parsing engine that acceptswords (i.e., lists of morphemes) as input, and returns lex-ical phrase-markers a  output.The engine loops through each component of the input,performing two computations.
First it calls its subordinateparser (e.g., the lexical parser is the subordinate parserof the syntactic parser) to parse the component, yieldinga phrase-marker.
(The subordinate parser for the lexicalparser performs a look-up of the morpheme in the lexicon.
)In the second computation, the set of unsatisfied predicatesis traversed to see if any of the predicates' actions can52apply.
This is where selection, case-marking, projection,and so on, are performed.Note that there is no possible ambiguity during theidentification of arguments with their predicates.
Thisstems from the fact that selection may only apply to the(single) category preceding the predicate category, andthat each of the subsequent actions may only apply se-rially.
This assumes single-noun noun phrases.
In the nextversion of the parser, multiple-noun noun phrases will betackled.
However, the addition of word stress informationwill serve to disambiguate noun grouping.There may be ambiguity in the parsing of the mor-phemes.
That is, there may be more than one entry for asingle morpheme.
The details of this disambiguation arenot clear.
One possible solution is to split the parsingprocess into one process for each entry, and to let eachdaughter process continue on its own.
This solution, how-ever, is rather brute-force and does not take advantage ofthe limited ambiguity of multiple lexical entries.
For themoment, the parser will assume that only unambiguousmorphemes are given to it.After the loop is complete, the engine performs defaultactions.
One example is the selection for and marking ofabsolutive case.
In Warlpiri, the absolutive case-markeris not phonologically overt.
The absolutive case-marker isleft as a default, where, if a noun has not been marked fora case upon completion of lexical parsing, absolutive caseis marked.
This is how karli is parsed in sentence (2); seefigures 6 and 7, below.The next operation of the engine is to check the well-formedness of the parse.
For both the lexical parser andthe syntactic parser, one condition is that the phrase-mar-ker consist of a single tree, i.e., that all constituents havebeen linked into a single structure.
This condition sub-sumes the Case Filter of GB.
In order for a noun phrase tobe linked to its predicate it must have received case; anynoun phrase that has not received case will not be linkedto the projection of the predicate, and the phrase-markerwill not consist of a single tree.The last operation percolates unexecuted actions tothe root of the phrase-marker, for use at the next higherlevel of parsing.
For example, the assignment ofboth erga-tive case and absolutive case in the verb puntarni are notexecuted at the lexical level of parsing.
So, the actions arepercolated to the root of the phrase-marker for the con-jugated verb, and are available for syntactic parsing.
Inthe parse of sentence (2), they are, in fact, executed at thesyntactic level.TWO PARSED WORDSThe parse of kurduku, meaning 'child' marked for da-tive case, is presented in figure 3.
It consists of a phrase-marker with a single root, corresponding to the declinednoun.
It has two children, one of which is the noun, kurdu,and the other the case-marker, ku.O: actions: ASSIGN: DATIVEMARK: DATIVESELECT: (DATIVE ((V .
-)projection?
: NILchildren: O: data: ASSIGN: DATIVEMARK: DATIVESELECT: DATIVETIME: 1MORPHEME: KURDUN: ?V: -projection?
: TI: data: TIME: 2MORPHEME: KUPERCOLATE: TCASE: DATIVEprojection?
: T(N .
* ) ) )Figure 3: The parse of kurduku.One can see that all three actions of the case-markerhave executed.
The selection caused the noun, kurdu, andthe case-marker, ku, to co-project; furthermore, the nounwas marked as selected (SELECT: DATIVE appears in itsdata).
Marking and assignment also are evident.
Notethat all three actions percolated up the projection.
Thisis due to the PERCOLATE: T datum for ku, which forcesthe actions to percolate instead of simply being deletedupon execution.
The actions of case-markers percolate be-cause they can be used in complex noun phrase formation,marking nouns that precede them at the syntactic level.This phenomenon has not yet been fully implemented.
TheTIME datum is used simply to record the order in whichthe morphemes appeared in the input so that the prece-dence information may be retained in the parse.
One morenote: the PROJECTION?
field is true when the category'sparent is a member of its projection, and false when itisn't.
Because the top-level category in the phrase-markeris a projection of both subordinate categories, the PRO-JECTION?
entries for both of them are true.In figure 4, the parse of puntarni s shown.
There ismuch more information here than was present for each ofthe lexical entries for the verb, punta, and the tensed ele-ment, rni.
The added information comes from the appli-cation of lexical rules, mentioned above.
These rules firstassociate the 8-roles with their corresponding cases, as canbe seen in the data entry for punta.
Second," they set upthe INTERNAL and EXTERNAL actions which project oneand two levels, respectively, in syntax.
That is, the agent,which will be marked with ergative case, will fill the subjectposition; the theme and the source, which will be markedwith absolutive and dative cases, will fill the object posi-tions.63O: act ions :  ASSIGN: ABSOLUTIVEINTERNAL: SOURCEINTERNAL: THEMEEXTERNAL: AGENTASSIGN: ERGATIVEpro jec t ion?
:  NILch i ld ren :  0: data :  SELECT: +TIME: 1THEME: ABSOLUTIVESOURCE: DATIVEAGENT: ERGATIVEMORPHEME: PUNTATHETA-ROLES:(AGENT THEME SOURCE)CONJUGATION: 2N: -V: ?pro jec t ion?
:  Tl :  data :  TIME: 2MORPHEME: RNITENSE: NONPASTTNS: +pro jec t ion?
:  TFigure 4: The parse of puntarni.A PARSED SENTENCEThe phrase-marker fo sentence (2) is given in figure 5.The corresponding parse for this sentence is shown in fig-ures 6 and 7, the actual output of the parser.
In the parse,the verb has projected two levels, as per its projection ac-tions, INTERNAL and EXTERNAL.
These two actions areparticular to the syntactic parser, which is why they werenot executed at the lexical level when they were intro-duced.
INTERNAL causes the verb to project one level, andinserts the LINK action for the object cases.
EXTERNALcauses a second level of projection, and inserts the LINKaction for the subject case.
Note that the TIME informa-tion is now stored at the level of lexical projections; theseare the times when the lexical projections were presentedto the syntactic parser.To demonstrate he parser's ability to correctly parsefree word order sentences, the other 23 permutations ofsentence (2) were given to the parser.
The phrase-mar-kers constructed, omitted here for the sake of brevity, wereequivalent to the phrase-marker above.
That is, except forthe ordering of the constituents, the domination relationswere the same: the noun marked for ergative case was inall cases the subject, associated with the agent 8-role; andthe nouns marked for absolutive and dative cases were inall cases the objects, associated with the theme and source8-roles, respectively.punta- rni kurdu-karlikuCONCLUSIONWe have presented a currently implemented parser thatcan parse some free-word order sentences of Warlpiri.
Therepresentations (e.g., the lexicon and phrase-markers) andalgorithms (e.g., projection, undirected case-marking, andthe directed selection) employed are faithful to the linguis-tic theory on which they are based.
This system, whilequite unlike a rule-based parser, seems to have the po-tential to correctly analyze a substantial range of linguis-tic phenomena.
Because the parser is based on linguisticprinciples it should be more flexible and extendible thanrule-based systems.
Furthermore, such a parser may bechanged more easily when there are changes in the lin-guistic theory on which it is based.
These properties givethe class of principle-based parsers greater promise to ul-timately parse full-fledged natural anguage input.Figure 5: The phrase-marker for sentence (2).64O: projection?
: NILchildren:O: actions: MARK: ERGATIVESELECT:(ERGATIVE ( (V  .
-) (N .
+)))data: LINK: ERGATIVEASSIGN: ERGATIVETIME: 1projection?
: NILchildren:O: data: MARK: ERGATIVESELECT: ERGATIVEMORPHEME: NGAJULUNUMBER: SINGULARPERSON: 1N: +V: -projection?
: T1: data: MORPHEME: RLUPERCOLATE: TCASE: ERGATIVEprojection?
: TI: projection?
: Tchildren:O: data: TIME: 2projection?
: Tchildren:O: data: SELECT: +THEME: ABSOLUTIVESOURCE: DATIVEAGENT: ERGATIVEMORPHEME: PUNTATHETA-ROLES:(AGENT THEME SOURCE)CONJUGATION: 2N: -V: ?projection?
: Ti: data: MORPHEME: RNITENSE: NONPASTTNS: ?projection?
: TI: actions: ASSIGN: DATIVEMARK: DATIVESELECT:(DATIVE ( (V  .
-1 (N .
+111data: LINK: DATIVETIME: 3projection?
: NILchildren:O: data: ASSIGN: DATIVEMARK: DATIVESELECT: DATIVEMORPHEME: KURDUN:  +V: -p ro jec t ion?
:  T1: data :  MORPHEME: KUPERCOLATE: TCASE: DATIVEpro jec t ion?
:  T2: data: LINK: ABSOLUTIVEASSIGN: ABSOLUTIVETIME: 4MARK: ABSOLUTIVESELECT: ABSOLUTIVEMORPHEME: KARLIN: +V: -projection?
: NILFigure 7: The second hal f  of the parse of sentence (2).F igure 6: The first half of the parse of sentence (2).65ACKNOWLEDGMENTSThis report describes research done at the ArtificialIntelligence Laboratory of the Massachusetts Institute ofTechnology.
Support for the Laboratory's artificial intel-ligence research has been provided in part by the Ad-vanced Research Projects Agency of the Department ofDefense under Office of Naval Research contract N00014-80-C-0505.
I wish to thank my thesis advisor, R~bertBerwick, for his helpful advice and criticisms.
I also wishto thank Mary Laughren for her instruction on Warlpiriwithout which I would not have been able to create thisparser.REFERENCESBarton, G. Edward (1985).
"The Computational Com-plexity of Two-level Morphology," A.I.
Memo 856, Cam-bridge, MA: Massachusetts Institute of Technology.Chomsky, Noam (1981).
Lectures on Government andBinding, the Pisa Lectures, Dordrecht, Holland: ForisPublications.Chomsky, Noam (1982).
Some Concepts and Consequencesof the Theory of Government and Binding, Cambridge,MA: MIT Press.Hale, Ken (1983).
"Warlpiri and the Grammar of Non-configurational Languages," Natural Language and Lin-guistic Theory, pp.
5-47.Johnson, Mark (1985).
"Parsing with Discontinuous Con-stituents," 28rd Annual Proceedings of the Associationfor Computational Linguistics, pp.
127-32.Laughren, Mary (1978).
"Directional Terminology in Warl-piri, a Central Australian Language," Working Papersin Language and Linguistics, Volume 8, pp.
1-16.Nash, David (1980).
"Topics in Warlpiri Grammar," Ph.D.Thesis, M.I.T.
Department of Linguistics and Philoso-phy.66
