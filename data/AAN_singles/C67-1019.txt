UN Mf:TALANGAGE ,DE GRAMMAIRES TRANSFORMATIONNELLESAPPL ICAT IONSAUX PROBLEMES DE TRANSFERTS ET DE GENERATION SYNTAXIQUESG.
2300 - AJauv ie r  1967 G. VEILLONJ: VEYRUNESB.
VAUQUOISkCette publlcation pr~sente une partie des r4sultats acquis parl'4quipe de recherche sur les modules au cours de l'ann~e 1966.
Cettepartle est essentiellement consacr~e ~ la description de l'outil m~ta-llnguistique utilis~ pour les grammaires transformationnelles du 8yst~mede traduction automatique.
Ces grammalres feront l'objet de publications~par~es lorsqu'elles seront suffisamment au point.Les auteurs expriment leur gratitude ~ Monsieur le ProfesseurJ.
P. BENZECRI qui a bien voulu s'int4resser h cette ~tude et h laD.R.M.E.
dont la participation financi~re dans le cadre du contrat65-34-497 en a permis la r~alisation.PLAN- INTRODUCTION- TRANSFORMATION DE STRUCTURES ARBORESCENTES1 ?
- D~f in i t ion  des st ructures  arborescentesa) n -grapheb) St ructurec) Structure arborescente2 ?
- Representat ion  des s t ructures  arborescentes  et desarborescences  munies  d 'une re la t ion  d 'ordre res t re in te3 ?
- Chemins et re lat ions  sur une st ructure  arborescentea) Propr i~t~s poss~d~es par un sommetb) Const ruc t ion  des re lat ions  s implesc) Const ruc t ion  des re lat ions  mul t ip les4 ?
- Reconna issance  d'une f igure dans une s t ructure  arborescentea) Schema de f igureb) F igures  dans une arborescence  munie  d'une re la t iond 'ordre res t re in tec) F igures  dans une st ructure  arborescente5 ?
- T rans format ionsa) Fami l le  d~arborescencesb) D~compos i t ion  d'une arborescencec) Inser t ion  d 'a rborescenced) T rans format ions  synth~t iquese) T rans format ions6 ?
- Grammai res  t rans~ormat ionne l lesa) R~gle  de t rans format ion  Bur une s t ructure~-  part ie  gauche~ - part ie  dro i te- applic~tio~~ d'une r~gle de t rans format ion- ~cr i ture  et exemplesb) Gra~na i res  t rans format ionne l lesII - PROGRAMMATIONl ?
- Representat ion d'une structure2 ?
- Descr ip t ion  de la  reconna issancea)  Ba layage  g~n~ra lb)  Recherche  d 'une  f igure  cor respondant  ~ une per t tegauche  de r~g le  donn~e3 ?
- App l i ca t ion  des  t rans format ionsI~I - APPLICATION.AUX PROBLEMES DE TRADUCTIONAUTOMATIQUE1 ?
- Le r61e des grammaires transformatlonnel les dans lesyst~me de traduct lon.automatlque2 ?
- Appl icat ion au module M3INTRODUCTIONAu cours de ces derni~res ann~es les grammaires transformation-nelles ont occup~ une place privil~gi~e dans la litt~rature relative auxsyst~mes de structures linguistiques, auxprobl~mes de g~n~ratlon syn-taxlque et aussl, ~ventue.llement, ~ quelques probl~mes de reconnaissanceli~s ~ la traduction automatique \[IJ, \[2J, \[3\], \[4J, \[5\].
Ces grammalrestransformatlonnelles et, plus g~n~ralement, les transformations brillentpar le nombre de d~finitions dont elles ont ~t~ l'objet.
En effet, unauteur qui ~tudie un probl~me linguistlque adapte la notlon de transfor-matlon dont il a besoin au but qu'il poursuit.
Attach~e & un syst~mellnguistique cette notion fever une signification partlcularis~e par leprobl~me traitS.
La transformation indique comment, quelquefols expllquepourquoi tels ph~nom~nes se pr~serrtent.
Apropos des probl~mes que nousavons rencontres lors de la r~alisation de certalns modules du syst~mede traduction automatique nous avons ~galement ~t~ conduits & d~finlr destransformations.
~ cette multipllcit~ des d4flnitions s'oppose, en g~n~-r@1, une certaine falblesse des moyens d'expresslon et des algorlthmesd'ntillsation.
En effet, il est souvent propos~ des "r~gles de transfor-mation" mals le formallsme de leur ~crlture ou blen n'est pas rlgQureu-sement d~fini ou blen se heurte ~ des difficult4s mat~rlelles insurmon-tables si l~on veut ~tabllr routes les r~gles d'un module r~el et nond'un module r4duit.
En outre, des probl~mes li4s aux algorlthmes d'emplolde telles grammalres transformationnelles sont peut souvent abord~s.
Sanspr4tendre r~soudre tous ces probl~mes~ ~ partlr des notions de transforma-tions d~j~ rencontr~es et de celles q~e notre syst~me de traductlon auto imatique faisalt a pparaitre, nous avons essay~ de syst~matlser cettenotion.!
I!
- Les ~,od~les transfor~tionnels an traduction automatiqueRappelons la place de ces modules dans ie syst~me de traductlonautomatique du C.E.T.A.
- L'article "syntaxe et interpr~tation"\[6\]pr~cise-2-le module de reconnaissance syntaxiqu9 des phrases de la langue source(modUle M2).
Ce que l'on obtient ~ la sortie de ce module est une structurearborescente (~ventuellement plusieurs) de la phrase propos~e.
Cettestructure ~tahlit un syst~me de liaisons entre les mots qui constituentla phrase en indiquant pour chaque liaison la r~gle de grammaire qui apermls de l'obtenir ainsl que l~l~ment consid~r~ comme gouverneur.Le but poursuivi par le module suivant (M3) est de transformercette structure pour obtenir une ~valuation s~mantique des liaisons syn- ~'i-itaxiques.
On est done conduit ~ substituer ~ une ou plusieurs r~gles for- ~'melles, une'~tiquette" (telle que "agent", "objet", "consequence", etc...)qui dolt indiquer, la fonction du mot ou groupe de mots consid~r~ dans laphrase.
En outre, pour 4viter la prolif4ration des ambiguit~s de construc-tion syntaxique, le module M2 peut associer ~ une phrase une seule struc-ture qui, en fair, repr~sente une famille de structures bien d~termin4es.En consequence le modale M3 dolt ~ventuellement corriger le syst~me de llai-sons propos~ par le modale precedent pour aboutir ~ une articulati6n cor-recte des fonctions de chaque mot dans la phrase.Le probl~me de la transformation consiste done ~ remplacer unestructure arborescente par une autre en changeant les noms attribu~s auxsomets,  en supprimant ou en rajoutant certains sommets, enfin en modifiantla relation d'ordre du graphe initial.Le module suivant (M'2) fait apparaItre le m~m~ probl~me.
II s'a-'git maintenant de transformer le graphe associ~ ~ une phrase dans le moduleM3 (sorte de langage pivot) pour en d4duire une construction syntaxique desurface dans la langue cible.Ainsi, les transformations qui interviennent dans ces deux moda-les, de m~me que celles qui sont mentionn4es dans la litt~rature peuventse ramener ~ un probi~me math~matique unique.
C'est celui de l'applicationd'un ensemble de graphes dans un autre ensemble 'de graphes.
Ii semble d'a ~pros l'usage actuel que l'0n fait des transformations, que l'on puisse limi-ter le probl~me pr4c4dent ~ des graphes qui sont seulement des arboresceneessans perdre de g4n~ralit~o Encore faut-il mentionner que ces ar  escences-3-peuvent comporter des relations d'ordre lateral, c'est-~-dire ,que tous lesdescendants directs d'un sommet quelconque sont totalement ordonn~s,Dans ce qui suit nous nous proposons d'~tudier les transformationsde structures arborescentes d'un point de vue formel en soulignant quelquesprobl~mes (non r~solus) et en examlnant un type de langage outll pour ladescrlptlon de ces transformations.
Enfln, la derni~re partle montre l'ap-p l lcat londe ce m~talangage ~ l'~criture des grammaire s des mod~les 143 etM'2.-4-T R A N S F O R MA T'I 0 N S D E S T R U C T U RE  SA R.B 0 R E.S C E N T E SI ?
- Ddf lnlt londes structures arborescentesa) n-grapheUn graphe (X,p) est la donnde d'un ensemble X et d'une applica-tion multivoque P de X dans X - On peuc dire aussl que (X I ) est la donn~ed'une partle de~.Solent P l '  ~2' .... ' Pn des applications multivoques de X dans X. Nous,ppeUeron~ n-g~aphe ie <~+l) -up l~ : (X, ~ ' ~2 '  "'" ' ~ ) ~on, id~,~, ?comme le graphe union des graphes (X, ~1)lequel  tous les  arcs sont d~sign~s selon leur appartenance ~ 1 'app l i ca t iond'oO i l s  proviennentExemple Soient : X ffi Ixl, x2, x3, x4, xs~r' 1 fXl  ---# x 2, x 3: x 2 ~ x 4x 4 ---$ x 3 , x 5Ix  I ~ '  x 1, x 2, x 4, x 5 ,\[-s.2 x --+ xl, x3, x 4Le 2-graphe {X, T~I,T~2) est  reprdsentd par la f igure  1I-5-.
x 15 graphe (X, r'1)~ x 3?
x 5x3X2graphe (X, r2)r l  : ---+2-grmphe (X, 1-1' 1"2) r2 :x 5b) StructureSoit un n-graphe (X~ VI' "'" ' ~n)"  D~signbns par V un ensemblede symboles (vocabulaire ou alphabet), et soit ~ une application univoquede~Cdans-v'.Nous appellerons "structure", le (rrb3)-uple : (X, "v-, PI' "'" ' 1-n' A )On obtient ainsi la structure ~ partir du n-graphe en attribuant g chaquesormaet x. du n-graphe le symbole appartenant ~-v'au moyen de ~.1Ainsi des sommets distincts de la structure peuvent ~tre d~sign~s par lem~me symbole.Exemple Reprenons le 2-graphe ~u paragraphe precedent et soient :"V" = (a, b, c)-6-x I x 2 x 3 x 4 x 5a b c a cLa structure- (X, V, VI, ?2 'A> est indiqu~e sur la figure 2f igure 2c) Structure arborescente0n appelle "structure arborescente" une structure- le graphe ~X, T~I) est une arborescence, c'est-~-dire :I) il existe un so.met XoE3C unique tel que r I x ?
="~ x = y , y?X 2) pour tout sommet x ~ x ?
, I3) le graphe est 'connexe- L 'appl icat ion T" 1 6tant d~termin~e, l 'appllcatlon ~2 doit satisfaireaux conditions suivantes :Be graphe (X, T'2) est tel que .tout sous-ensemble r" I l - x correspond une composante connexede @,-7-r I - I x , -pour  chacun de ces sous-ensembles .
la relation d'ordreassoci~e ~ ~2 est to,ale.
Ainsi~ dans tout sous-ensembleX i = ~l-lxi , il existe un XA6 X i unique tel que ~2"ixAet  un XB(~X i unique te l  que r 2 x B = ~ "La donnde du.
'2-graphe CX, r l ,  r.2 ) const i tue  une arborescence,  munie d 'unere la t ion  d '0 rdre  res t re in te  te l le  que l 'a  d~f in ie  HOLT \[7\]On pout in terpreter  le  graphe (X, r l )  cormne une re la t ion  de.
"patern i td"  :"y est p~re de x" ~ T ~  I x = y ,De m~me, le graphe (X, r2) exprime un ordre entre les f i l s  d'un m~me p~re :~2 x = y implique que x est n~ avant yUn sommet de type x A est dit "AinU" ; un sommet de type x Best  dit"Benj amln".Exemp le Soit le 2-graphe ~X, T~I , ~2:) o~X = (A, B, C, D, E, F, H, I)A B C D E F G H I~I :A B B B A A G GA~2 :?BFC D E F G .H I -~D E ~ G ~ I (~repr~sent~ par la  figure 3, qui est une arboreScence munie d'une relationd'ordre restrelnte.-8-BA1~ 1 __.>..figure ,3 P2Si nous nous donnons en outre :"v'= (a, t~, c, d, e)et ~:A B C D E F G }{ Ia b d e e c b d eLa structure ?
-  (X, ~/, T'I, r2, A) est une structure arborescente -cf figure 4ad e e d efigure 4'+ "9 -2 ?
- Representat ion  des  s t ruc tures  a rborescentes  e t  des  arborescencesmun ies  d 'une  re la t ion  d 'o r~reres t re in te  : ~On s'attache surtout ~ larepr~sentation des arborescencesmunies d'une relationd'ordre restreinte, celle des structures arbores-centes se d~duisant facilement de la premiare.Pour des raisons algorithmlques, nous repr4senterons une tel!e arbores-cence ~ l'aide + de trois applications biunivoques, noises ~, K et W,  etd~finies de la fa~on suivante : :. "
"ly- ~ (x) = y si et seulement si PIy = x et ~2 = @ (fils ainU)- ~ (x) ffi y si et seulement sl r2 x = y (frare cadet)- ~ (x) = y sl et seulement si ~i x = yet  si ~2 x =(pare du benjamin)Reprenons l'arborescence du paragraphe precedent (figure 3).Sa repr4sentation au moyen des fonctions ~,  ~ et ~ est:alors celle de lafigure 50~ l'on a repr4sept4 aussi la structure arborescente d~j~ men-tionn~e.
!A aBb, ~-" ~ F ~~ 'c ""C d D Ee eG b.
+.
+H d ~ " ie+9 '+f__i~ur e___~5-iO-On retrouve certaines des fonctions d~crites par A. HOLT ~\] pour repre-senter les arborescences munies dGune relation d'ordre restreinte.On peut~aussl consid~rer cette structure comme la donn~e du3-graphe(X, ~,  ~ , ~ ) du vocabulaire~/ et de l~appl icat ion~ (~ : E--+'~)3 ?
- Chemlns et relations sur une structure arborescente-.
D'apr~s les d~finitlons de ~, ~ , ~ ~ partir de 71 et ~2' .p?urtout couple de sommetsdist incts (x, y), il existe au moins un chemindWoriglne x et d'extr~mit~ yet  il exlste un chemln unique sans circuit.Ces chemins Correspondent ~ des compositions des fonctlons ~ ~ ~ ~ ~.Soit f" une composition de~ ~ ; ~ et X6X un sommet - Si fx ex~ste~ c'est.un sommet y un lquede ia structure ; en.outre f-ly exlste e tes t  le seulso.~et x.Un tel chemin caract~r!seune relatlon entre deux sommets..Nous nous propos0ns de d~terminer les moyens de construire des relations'qul  poss~dent les  propr i~t~s  u ivantes  :: - des re la t lons  l -a l recor respondant  & des propr i~t~s  poss~d~espar  un sommet Consid~r~ i so l~ment .- des re la t ions  b lna l res  que nous rangeons dans l 'une  des deuxc lasses  su lvantes  :- des 'Ye la t ions  s imp les" -  Ces re la t ions  sont  te l !es  qu '~ toutx i i i  corresponde au p lus  un Yi en re la t ion  avec x i .4- des " re la t ions  mul t ip les  '' - A tout  x i i l  correspond unensemble X. CX :de son, nets y te l s  que xiRY (y~Xi) , Xi poss~dant  enlg~n~ral plus d'un ~l~ment.
9~.~.~}~.~-}~-~P.~}~P}~-~un ordre total sur les ~l~ments de X i - L'importanCe de cette propri~t~.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
iapparaItra lorsque l'on travaillera sur la structure oO'plusieurssommmetspeuvent  por ter  le .m~me nom (symbole de V) .
jTor te  re la t ion  peut 6 t re  Consid~r~e comme un pr~d icat .Si Rest  une re la t ion  1 -a i re ,  Rx es t  un pr~d icat  ~ 1 var iab le  (x poss~dela  p ropr i~t~ R).- l l -Si Rest  une relation binalre, x R. y est un pr~dicat ~ deuxvar lab lesetl'ensemble X. des so~nets y li~s ~ x.
~ar Rest  l'extension du pr~dicatI 1x.Ry.iI I ' X i " {Y  / x iRY}  q I",~a) Propri~t~sposs~ddes " par un son,set' D 'apr~sles  d~finltions de ~ , ~ , ~ certains sommets poss~dentdes .propri~t~s partlculi~res.
Ces propridt~s sont caract~rls~es par un-p r~d icat ,Exemples .- "Etre la racine de l'arborescence" d~algnd'par ~Ainsi-~x eat un pr~dicat vrai si et seulement sl x est laracine de l'arborescence :~x<-#~x= ?
^ ~x= ?
..- "Etre un fils ainU" -J~x +-~' Ix  = ?- "Etre Un benjamin" -"N'avolr pas de fils" - ~~x e -~ = ?A partir de ?es propri~t~s ~l~mentaires on.
peut construire des propri~t~splus compllqu~esPar e,,.xemp le- "Etre fils unique ''?
-/~x +-~ J~x ^ ~x ~-(On peut aussi ~cr i re~x~x ~a w x)- "Etre le point unique de l'arborescence" -"~x ~ ~.~x ^ ~x-i2-b) Construction des relations simplesLe cas ie plus simple de construction de telles relations estcelui qui provient d'une composition d~termin~e de fonctions ~ , ~ ,d~crivant un chemin sans circuit.
JExemple : Etablir la relation : "3i&me FS" o~x 3i&me FS y signifie ~ly est le troisi&me fils de x"-~i~ Alors :?
x 3i&me FS y.<---->y =~2 0L xEn nous referrant & l'arborescence de la figure 5A 3i&me FS G est vraie et G est le seul sou=net qui soitdans cette relation avec Ao.
~Un cas plus compliqu~ est celui o~ ia relation x R y est satls-faite si et seulement si, fl ' f2' "'" ' fn ~tant des compositions de~,~,~,  il existe au plus u,n j - ( l~ j~n)  tel que y = fix ; le nombre nn'~tant pas connu mais seulement major~ par le nombre d'~l~ments de X.
?On utilise alors des pr~dlcats munis de quantificateurs.Exemples : Etablir la relation : "FNE" o~x FNE,y signifle "y  est le fr&re ain~ de x"Alors :.nx FNE ye---> V Y C~.
'rr.~r = Xr=OOn volt qu'ici la relation peut ~tre r~flexive s ix  est lui-m~me un aln~.Si l'on veut ~liminer ce cas, il suffit de  d4finir FNE comme la conjonctlondu pr~dicat d~j& 4crit et du pr~_dicat y ~ x (o u bien --~ ~ (y)lEtablir la relation "PERE" o~x PERE y signifie y est le p&re de~xnx PERE y~> U y = ~ ~ rxr=OComme la relation simple x AINE y (signifiant~y est le fils ain~ de x)eat d~finie par x AINE y <---)y =~ x,on peut aussi d~finir FNE paroJ-13-- Etablir la relation "FBENJ" oO,ix FBENJ y signifie y est le plus jeune fr~re de xnx FBENJ y~--->V (y = ~rx A ~y)r=OA route relation simp.le R, on associe la fonction Rf d~finie pary = Rfx si et seulement si xRyc) Construction des relations multiplesDarts de telles relations xRy peut ~tre v~rlfi~ par un ensemblede sommets y pour un x d~termin~, etXl = {y /x  i R y~ dolt ~tre totalement'ordonn~On donne alors le moyen d'~num~rer r~cursivement les ~l~ments de X i -Dans ce but, on d~termine un premler ~l~ment Yl de la m~me mani~re qu'ona const ru l t  les re la t ions  ~Imples - Puis on donne le moyen de ca lcu le rYi+l conna lssant  y.Exemples - Etablir la relation "FRERE" ohx FRERE y signlfie que y est fr~re plus jeune de xAlors : f{y/x  FRERE y} = Yl =b'xYi+l -- ~\[ YlEtablir la relation "FILS" 05x FILS y slgnlfie query est fils de x{y/x F Ls y} -- { Yl-- xYi+l = ~ YiEtablir la relation "COFILS" oOx COFILS y est vraie si et seulement siy = x ou y est un fils du p~re de x{y/ x COFILS y} = { Yi+IYl = FNEfX=~yiL'ordre total induit est celui donn~ par ~ sur tousles fils du m~me p~re.- 14 -Enfin, ~tablissons la relation "GOUV" o~x GOUV y est vraie si et seulement siy = y-ix (x est le cadet de y)ou y se trouve dans la l i~e  des benjamine du premier y.~ ~l  xYlYi+l -- DFILSfYioO DFILS est une relation ?
simple (y est le dernler fils de x)n -x DFILS Y<- - )V  Y = ~r~xA~Yr=OAinsi une relation multiple's'exprime au moyen de deux relations slmples,c'est-~-dire au moyen de 12 fonctlons f et gI Yl = fxYi+l = gY lL'~l~ment Yr de rang r dans l'ensemble X i = {y I xRy} est alors obtenu?
par Yr -- gr'IfxSi gr'Ifx n'existe pas, c'est que X i contient moins de r ~Idments.P0ur que chaque dl~ment ne soit ~num~r~ qu'une lois, il est n~cessaire quen nA pGl  Yi+p ~ Yl i-- I-15-4 ?
- Reconnaissance d'une figure dans une structure arborescentea) Schema de figureSoient RI, R2, ... , Rn des relations binaires (simples ou mul-tiples).
Soient PI' "'" P des propri~t~s.
mOn ddfinit un schema de figure F connne une expresslon formellesur le vocabulaire terminal {RI, ... , Rn, PI' /~" ' Pro' C,)} construitede la mani~re suivante(I) Si R.I est une relation alors (Ri) est un schema de figure(2) si Pi est une propri~td, alors (Pi) est un schema de figure(3) si F est un schdma de figure et R. une relation alors (RiF) est unschema de figure i(4) Si F Ie t  F_2 sont deux schemas de figure, alors FIF 2 est un schema defigure(5) Tous les  schemas de figure sont donn~s par (I),(2),(3) et(4).dR><P>~F>En utilisant le symbolisme de d~finition d'ALGOL on a ::: = R 1 I R21 ''' \]R n:: = P1 I P21:: = (<R>)  I (<P>)  \[ (<R> <F>) I<F> <F>(1) (2) (3) (4)ExempleoO l~ ik~n pour l~k~5 et l~ j~m pour i~<2est un schema de flgure F?- 16 -En e f fe tPJl) est un sch4ma de figure par la r~gle deconstruction (2)fRi .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.p /R \[P h% ?
i q ~ .Jl ....... -' ........ (3) 5 ~, i~:~t .
.
.
.
- .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.R R P ~ R R .
";,~P~i;::'~'Consid4rons maintenant une arborescence munie d'une re l~ iond'ordre restreinte ~.Soient X l'ensemble des sommets de ~, Xo .un.
sommet quelconque (~ 'X)  etFun  sch4ma de figure.On dit que x admet le sch4ma de figure F (dans~)  si et seulement si :Ola proposit ion F (Xo) est vraie F (x )  4tant la proposit ion d4duite duOpr4dicat F (x) d~fini de la'mani~re suivante : '-17-Soient FI , F2, F 3 des schemas de figureSi F 1 est construit au moyen de la r~gle (I)F I = (Ri) alors F I (x)<-->yxRiY x, y~XSi F 1\est construit au moyen de la r~gle (2)F I = (Pj) alors F I (x)<--->Pj (x)est construit au moyen de la r~gle (3).
,,~ : ( , ,~, .
,~ ..,or.
,.~ (x,.- - .V\[x,V., , , ,  ,,.,\]x~Xx, y6XEnfln si F 3 est construit au moyen de la r~gle (4)F 3 = F I F 2 alors F 3 (x)<--->F I (X )AF  2 (x) x~XAinsi le pr~dicat associ~ au schema de figure F donn~ en exemple est :F (x vrx,,  ,,,,1 .,.XlL  1 ~2L -" ?
J x 3 .~ x 4 - -I x51-  .
~.
'.~!Of~ x, Xl, x2, x 3, x4, x 5 ~ X~) les sommets qui interviennent en rant que variables li~es dens lesquantificateurs sont tous les  $1~ments diff~rents de X.Pour formaliser cette deuxi~me condition, on remarque que chaque relationintroduit un sommet ;donc  si F comporte p relations, Xl, ... , XpStre tous diff~rents les uns des autres.Alors soit le pr~dicat D 2 (Ul,U2)<---+Ul ~ u 2Par r~currence on construit : kDk+ I (u I,Enfin on posedoivent"'" ' ~k' uldrl)~-->Dk (Ul' "'" ' Uk)AAD2 (uj'Uk+l)jllD I (u) toujours vrai.- 18-Ainsi, F dtant un schdma de figure ~ ~ relations, la proposition"Xo admet le schema de figure F (dans~)"~--->F (Xo)ADp+ I (Xo, Xl, ~ .. , Xp)L'extension de ce pr~dicat est l'ensemble des x E X qui rendent ce pr~dlcatvrai,b) Figures dans une arborescence munie d'une relation d'ordre restreinte/Ddsignons toujours par~ cette arborescence ; X est l'ensemble deses sonanets et XoeX e~ Fun  schema de figure comportant n relations:Au pr~dicat d'l variable F (X) on associe le pr~dlcat &n % I variablesF (n+l) (x, Xl, ... , x n) d~duit de F (X) en supprimant les quantifi-cateurs qui lient les variables Xl, ..., x n.On appeile ~ une figure de schema F et de pivot x dans~ tout dl~ment de0l'ensemble des (n+l)-uples (Xo, Xl, ... , Xn) o~ Xo, Xl, ... , XnGXet F (n+l) (Xo, Xl, ...', x n) est vrai.On peut alors d~finir un ordre total sur les figures de schema F et depivot x de la mani~re suivanteOSoient~ = (Xo, Xl, ... , Xn) et ~' = (Xo, X'l, ... ~ X'n) deux telles figuresSoit k le plus petit indice tel que x k ~ x' k (k ~ o puisque x ?
est pivot,et k~.n  puisque ~et  ~' sont diff~rentes)A x k et x' k est associ~ela relation Rikxj = x'j et xj Rik x ktelle que i l  exlste un J< k avecdans ~ et xj Rik x' k dans ~'.La relation Rik est dvidemment une relation multiple (sin0n x kpeut alors ~crire x k et x' k sous la forme= X 'k )  ; onXk = grf xj et x' k = gZ~f xj '7On ordonne~: t  ~' par la relation ~<~' si et seulement si r<r '-19-Montrons que cet te  re la t ion  sur les f igures  est  un ordre to ta l  :I I  es t  fac i le  de vo l r  que cet te  re la t ion  est  non r~f lex ive  ( tous les  x ksont ~gaux) et  ant isym~tr ique (e l le  est  d~duite de la re la t ion  d 'o rdresur r ) .Montrons qu 'e l le  est  t rans i t i ve  :En affet, .i l'on a ~ ~' et ~'<~", alor.soient ket  ~ les plus petlts indices tels que :x k ~ X'k et  x '~  4 x"~s l  mln (k, ~) = k, a lo rs  k est  le plus pet i t  indlce te lque  x k ~ X"k,car x '  k = X"k, et  l ' on  , ~<~" pour la m~me ra i son  que ~<~'.i .in (k, ~) = ~, alors x~ ~ x'~ ca r ~ = ~'~ et ~< ~"II est bien ~vldent que cet ordre est total, pulequ'il est d~finl pour~ut  couple de f igures .Exempledans lequelReprenons le schema de f igure  F propos~ au paragraphe 4 aRi l  es t  la re la t ion  FILSRi2 FILSRi 3 .
.
.
.
.
.
.
.
.
.
.
.
.
.
FRERER .
.
.
.
.
.
.
.
.
.
.
.
.
.
COUSINGi 4Ri5 .
.
.
.
.
.
.
.
.
.
.
.
.
.
CADETP j  es t  la propr i~t~ "n 'avo i r  pas  de f i l e "  ~ (paragraphe 3 a)1P j2est  la propr i~t~ "~tre  benjamin" ~ (paragraphe 3 a)'-20-x COUSING y ~tant vraie si et seulement s iy  est un cousingauche de x et d~finie par :-1Yl =o~ PEREf x~ Yi si ~ @ Yi+lAlors le schema de figure s'~crit :Soit l'arborescence ~ suivante :i2 > 5 >?
J / \figure 616Si l'on se donne comme pivot le sormuet 5, nous obtiendrons dans l'ordreles figures suivantes :(5, 9, 13, 14, 3, 16)(5, 9, 13, 14, 4, 16)Ii peut se faire qu'un schema de figure en contienne un autre.Soit par exemple-21-Du m~me pivot, le son.net 5, on obtient, dans l'ordre, les figures(5, 9, 13, 6, 3, 16)(5, 9, 13, 6 ,  4., 16)(5 ,  9, 13, 14, 3, 16)I5 ,  9, 13, 14, 4, '  16)?
(5, 14, 15,!
6, 3, 16)(5, 14, 15, 6, 4, 16)(5, 14, 15, 9 ,  3, 16)(5, 14, 15, 9, 4, 16)qu i  cont iennent les 2 f igures  pr~e~dentesRema.rque : Etant doun~ un sous-ensemble de n. + 1 po int  6 quelconque dttmearborescence,  (o~n~<card (X)~ ce sous-ensemble est  une .
f igure,  car -onpeut  toujours  t rouver  un schema de f igure  correspondant .c) F igures dans une.
s t ruc ture  arborescente  ....Soit  S une s t ruc ture  arborescente  ; S est  donn~e par une ar ;borescence munie d'une re la t ion  d 'o rdre  res t re in te  et  par- tm voca;bu la i re  Vet  une app l i ca t ion  Z~ de X dans V. S= (J~, V ,  ~) .
"R de-F  on assocte  un F ~tant un schema de f igure ,  ~ chaque re la t ion  iksymb01e , ikE ~r ~j {.}
:.On assoc le  ~galement un symbole ao?VU~ } ~ la p lace  du p!vot :Soit' xoE X unpi~ot,, on appelle figure de schema, F et de ?pivot x ?S, toute figure de s?li4ma F et de pivot XOk o~k~n A = ou Xl k al kdansdans J~ te l le  que-pour toutaik-22-Iafigure 7Le vocabulaire V = {a, b, c, d} et l'application ~ est repr~sent~esur la figure.Consid~rons le schema de figure F' (paragraphe 4 b) qui donnait 8 figuresde pivot x 5 dansAlors l'expresslon :* .~FILS c~FILS "(e))) (FILS d(COUSING c)) ~ADET a C~))appfiqu~e au pivot x 5 fournit dans S les deux figures(5, 9, 13, 6, 4, 16)(5, 9, 13, 14, 4, 16)5 ?
-Transformationsa) Families d'arborescencesSoit un ensemble X et.deux sous ensemble X', X" .tels queX'C X, X"CX et X'~ X" = ~ .
Soient deux arborescenees "~= (X', r'l, r'2) et ~'~ (X", ~ ,  v~)?
,23 -Nous appe\]lerons famille d'arborescences l'ensemble {~ ;~que nous.pouvons noter :  (X'OX", rl, I" 2 avec  ~l x =~\], x' s ix~X'et r I x =~l.~ x s i  xeX"b) iDgcomposit ion d 'une arborescenceSoient  une arborescence (X, ~1 '  ~2 ) et un sommet x, on seproposede  d~f in i r  les  deux app l i ca t ions  su ivantes  :Si y4  x r' 1 y = r lyy = x r,y = ?y ~ ~21 x \["2 y ='~2 :yy=x r' -2Y=?1y = x ~2y  -U2  xsly 1alors (X, F'I,Y'2) est une famille de deux arbores.cences ~', ~", tellesque X'UX" = X ; F' I e t  r' 2 rdpondent aux axiomes de d~finltion desX = ?
?
(racine) arborescences, le sommet x ~tant tel que ~ l 'X  = r'?
2Nous appellerons d~tachement de l !a rborescence  de rac ine  x(DETA(x~une te l le  operat ion .
E l le  a pour e f fe t  de d~composer une arborescenCeen deux arborescences~En utilisant les fonct ions~,~et~,DET~)peut  se d~crire ainsi :si ~(y )  ~ x , o<'(y) =~(y)si ~(y )  = x ,si ~(y) = x et sisisi ~ (y) ~ xo<'(y) = ~(x)~(x)  ~ ~ , ~'(y) = ~(x)(x) = ?
, ~'(y) ffi ?y ~ x ~'(y) =~(y)~' (y) --- (x)si y = x y (x )  -- ?= -' (x) ?
si y ~ x , vr' (y) =~ (y) ; s iy  x ," =-24-DETA (3)2 8 7~ 8c) ?InSertion d'arborescenceso .
une .~m.~e ~e ~ a~o.
.ceno~-~' .
~'~ .e .a~ne.x' et x".
On Se propose de construire une arborescence unique en ins~rant:~.
le so~et  x", racine de ~'~ co~e so~et  de  Pour cela, on d~finitl'insertion par une fonction f et un somet  z de X'.
L'arborescencer~sultante sera telle qu e ~' = f (z), et que routes les relations d'ordrepartiel assocides ~ r i e t r  2 soient conserv~es.
La fonction f doitpermettre de placer x" dans ~ i  x" ~tant tel que ~(x") =~ (x") = ,f permet de d4finir ~(x") ou w (x"), sans alt~rer ~ (x").On se resteindra donc ~ des insertions de x" comme sommet terminal de~ce  quf exclut, en particulier, la fonction PERE ; le positionnementde x'!
=PEREf  (z) implique de d~finir, en outre, la relation d'ordreentre z et les F ILS  de x".Exemple :1 / \  7 = CADET(.4) ~7,~I' ~ I' WIfigure 9~'2(z) = x"~'2(x") = ~l(Z)  s i  ~'l(z) ,~ ?~2(x" )  = ~rl(Z) s i  ~ l (Z)  = ?-25-d) Transformations synth~tlques? '
tAux transformations ~l~mentaires de ddtachement etd' insert lonsent adj~intes des transformations synth4tlques ne concernant-qu'uneseule arborescence.Les transformations syhth~tiques d~finies .actuellement'sont au nombrede deux :L'~change de deux sommets, ou de deux sous arborescences, not~x I ECH x2.
correspohd aux fonctions ~t, ~/,~' d~duites alnsl de ~,  ~ ,- S io<(x)  ~ Xl, x 2 , =<'(x) =c<(x)Si ~.
(x) : x I =<'(x) : x 2Si'.o<(x) = x 2 :<"(x) ~= x Is i  ~'(x) ~ x r x 2 ~'(x) :, ~-(x)?
~ ' (x )  = x l. ~'(x)  = x 2~(x) = x 2 .
~'(x) = x I "~si x # x I, x 2 '-~x> : - (x )~'(x) : x)si x :x  l, .r(xl) ~ ?, ~'(X2) ffi r(xl) ,~'(X2 ~) : .?
; ~(xl) : ?, "'(X2. )
: ~(xl)Si X = x 2, ~'(x 2) =~ ~.~ .~(x I )  ~= ~\[(x2), ~ ' (X l !
: ?..
; ~'(X2 ) = ?, rr '(x I )  .= r;'(x 2), - :L'~change n'est d~fini que si les sommets x Ie t  X2 ne sent pas compazablesselon ~I"E.xemples :Z) 'i2 62 ECIi 6?
/figure iOi-26-2) Dans le cas oO il existe une relation de hi~rarchie (r I de' l'arbores-eenee) entre x Iet x2, itop~rati,0nd'~change donnera un r~sultat aberrant,eomme le montre l'exemplesuivantI3 ECH 82 ~ I II29~111?
.
Ofigure IIOn voit que l'arboreseence n'est plus Connexe.
La partle correspondantau sonm~et de hi~rarchie sup~rieure est s~par~e de l'arbOrescence prln-cipale.
Ce n'est~pas une arborescence, car il p'ex~ste~-pas de racine(sommet tel que ~ fi ~ = ~).
Le r~sultat n'est done ni unearboresCenCeni une familled'arboreseenees.Remarquons n~anmoins qu'une operation de d~tachement~ur le sommet 3 aurapour ef~fet d'en faire la racine d'une arboreseence normale,DETA 3f~.ure- 123-?27-L 'aut re  transforma~ion~bso.rPt i0n ABSestune  suppreasion/desemmet sanssuppress ion~e l 'a rborescenceassec i~e,~Lesre ia t~nsd~ordresur1 .et ~2- sent pr~serv~es de Is mani~re suivante :soient  ~,~,~ et ~.,~I , :~ les retat ions"tr~nsgorm~es :ABS (x)~..'(x) = ~"(x) =="(x) = ?si  ~.
(y).= x , ~(x)-.<(x)~,(x),-4 (y )  ,~ x , ~ ' (y )Sl ~(y) = x , <(x)<(x)# ?
,,=,<'(y).
=~(x)= ?
i  ~ (x) = ?
,od(y) ,='~=o<(y)?
=-?
, ~(x) ~ ?
, ~'(y)~= ~(x)~(x)  '=?
, ~(x)  =?
, v ' (y )  = V.(x)~'.
(x)1ABS 5 :~?
f!~Ur e 13e) Transfarmat~onsNous appellerons t ransformat ion une Composition diop~rat lonsde transformat ions ~l~mentaires sur une arborescence donn~e~Ler~su l ta tde la transformatiOq sera une fami l!e d 'arborescences ,L 'a rborescence  pr lnc ipa le  sera ce l lo  qui aura pour rac ine le m~me so~etque l 'a rborescence  de d~part.?
Pour conserver la notion, d 'arborescence pr inc ipa le ,  on consld~re syst~-mat'lquement que ce l le -c l  est  munie d 'un  son,net rac lneO sur lequel  toutet ransformat ion  est  in terd i te .
Pour cola ne res t re igne  en r ien  lest ransformat ions poss ib les ,  on ne lul fa i r  jouer aucun r81e dana las t ruc tureet  on lu l  donne un f i l s  unique qui est" la rac ine v~r l tab le  de-28-l'arborescence.Les transformations d'insertion seront noises sans y adjoindre le d~ta-chement n4cessaire, impiicitement ~f in i  u On notera ehaque~transfor~ationde la m~me mani~re que des relations :Exemple : " x AINE y " signifie suppression de y' et insurer y commeAINE de x ?Par abus du langage, on notera de m~me l'~change " " xECH y "Et les transformations ne portant que sur un soul sommet : " ?
DETA y :"" ?ABS y "La composition de transformations ~l~mentairespourra se noter parune liste (programme) ~ ex~cuter.En consid~rant qu'~ une arborescence donn~e~= (X, ~ I  ,'~2 ) on Peutassoeier une famille d'arborescences (Y, ~i' ~ 2 ) en prenant l'ensembleY infini tel que XCY et que AxeY  -X,~,(x)  = ~(x) =~(x)  = ?il sera toujours possible d'adjoindre un nouveau sommet dans l'arberes-cenee principa~e par insertion~ II suffira depouvo i r  d~flnir u~ iden-tificateur pour chaque sommet (on peurra par exemple, leur assoeler unentier : si CARD (X) = n, on notera (n+l),(n+2) .... ere les sommetsde Y -X~.Exemple6??
"'4IIIiiIIde transformationECH 3 1DETA 3ABS 6SUBST 2SUBST 3SUBST IIAINE 6AINE 4not~ aussi 3 SUB ST 6substitution de z ,par 6Structure de ddpart :3 3\] .V 7 8 ,'4-  Wtl.
"12,.
137't~o fl2 / ~ 9 .
~ , io7 8 5 11 12 13 3o 412~56 ECH 30 DETA 3?
ABS 6-30 -"1" " : 1 011 12 133,/?-..., ;.O?
.
- .'
I7 8 54 SUBST2Ii SUBST 3qui conduit & :Wfigure 14 7o~__._~.._.__~-1SUBST Iiii AINE 6i!
AINE 4-31-6 ?
- Grammaires transformationnelles/a) R~gle de transformation sur une structure :Soit une structure S = (~,  V ,~) ,  une r~gle de transformationest d~finie par une partie gauche (identification) et une partie droite(transformation)~)  Partie gauche :La partie gauche a pour but de rep4rer une figure de pivotdonn~ dans S (4-C) oElle est constitute par un sch4ma de figure F muni de symboles du voca-bulaire comme il est indiqu4 en 4-c.A un pivot donn~, un sch4ma de figure peut faire correspondre plusieursfigures de la structure.
Par convention, ~ une partie gauche de r~gle onassocie la figure minimale conform~ment ~ l'ordre total d~fini en 4-boSoit (Xo, Xl, ooo , Xn) eette figure, chacun des sommets est rep4r4 parson indice i (o~i~n)  o~)  Partie droite :Elle comprend une transformation (5-e) et une app l i ca t ion~.Les op4randes des transformations 41~mentaires sont d4sign4s par desentiers j positifs ou nulsoPour tout j , o~ j  ~n,  les sommets sont ceux de la figurePour tout j>n ,  il s'agit de sommets n'appartenant pas ~ X (5-e)L 'appl icat ion ~ d4finit une nouvelle affectation des symboles du voca-bulaire sur les so~mets sp4cifi4s en partie droite.~) Appl icat ion d'une r~gle de transformation :Soient : une structure S = (4 ,  V ,~) ,  de racine W , un~r~gle de transformation et un pivot x o.Le r4sultat de l 'application de la r~gle est ainsi d4fini :i) Si S n'admet aueune figure de pivot x conforme ~ laopartie gauche, las t rueture  est inchang~e.2) Si il existe une figure , on ne consid~re que cellequi est minimale, e~ le r4sultat de l 'application de la r~gle sera une-32-structure S '  (~, V ,~ I) de racine ~ .
L'arborescence ~ est obtenuepar application de la transformation indiqu4e en partie droite.L'application/~est telle que A~ = A x si I x  n'est pas d~finie, et~x  = ~-x si ~x  est d~finie en partie droite.S) Ecriture et exemple :La partie gauche est notre selon les conventions d~finies auparagraphe 4-c.La partie dr0ite comporte la transformation et les affecta-tions de symboles, not6es par l'op4rateur := ; il est possible de reco-pier le symbole affect~ ~ un sommet sans en pr4ciser la valeur, en notantle num~ro de sommet en guise de symbole.Reprenons l'exemple donn~ en 4-cPartie gauche : i (FIL8 c(FILS -~)~)CFILS d C~USING c))<CADET a<.\[)))I" "?I Ia b I / \b d bfigure 15Patt ie  ~roiteO E CH 66 AINE 33 BENJ OABS O3 CADET 16 :=03 := d4 :=: aL 'a rborescence  4tant donn4e, la par t ie  gauche,  avec la r~g!e du minimam,nous s41ect ion~e les 6 sommets marqu4s .La t rans format ion  aura pour ef fet  de recop ier  en F ILS de 3 tous sesfr~res non rep4r@s, et ~ lui conserver  les f r~res rep4r4s.O ECH 6 : on ~change le sommet pivot et un sommet isol4 : d 'o6 deuxarborescences  .~oY- \~.
@ i,,i ~X.i / .k, (s ,:-34-6 AINE 3 : on ram~ne 3 dans l"arborescence principaleW I~.
~d@a/\,3 BENJ 0 :W Ia-35 -ABS O :wIyX ~d ' - - 'bb @"3 CADET 16:=03 := d4 :=aWIb ~ a/\ ./\o b @figure 16.-36-b) Grarmuaire transformationnelle :Nous appellerons grammaire transformationnelle une liste der~gles de transformation.Une arborescence ~tant donn~e, il peut exister plusieurs d~rivations-finies pour une grammaire donn~e, selon le choix des pivots et l'ordred'application des r~gles ; chaque d~rivation finie correspond ~ l'obten-tion d'une arborescence finale stable, (sur laquelle aucune r~gle nepeut s'appliquer).
II est cependant possible, moyennant un certainnombre de restrictions, de d~finir une d~rivation unique & partir d'une?
arborescence donn~e ; nous en verrons un exemple dans l'~tude des pro-bl~mes de mise enoeuvre.
--37-II P ROGRAMMATI  ONNeus dennerons i c i  une descr ip t ion  sommaire d'un programmepermet tant  d 'exp io i te r  une gra~na i re  t rans format ionne l le .I ?
-Repr~sentat ien  d'une structureUn sounnet es t  repr~sent~ par  un ensemble de pe in teurs  (adressescer respondar r t  aux d iverses  fonct ions .
En -prat ique ,  compte tenu  de pro -pri~t~s li~es au calculateur utl l is~ (70/+4 IBM), les fonctlons ~ etsent repr~sent~s  par un m~me pointeur ; en effet, ~ (x) ~ @--~17(x) = @,(x) ~ @--~@ (x) = ~.
Ace  peinteur est ass0ci~ un indicateur beol~enqui d~finit sa nature, correspondant en fair ~-la propri~t~ Benjamin.?
Sym~triquement ~ il a paru co - - -ededed~f in i r  un troisi~me peinteur con-tenant ~- lOu"~' l  et un indicateur caract~risant la propri~t~ Ain~Un sommet peut alors se d~finir par un Symbole S, un peinteuro~ , unindicateur  B, un  p.ointeur ( ~ ,~) ,  un ind icateur  Aet  un pe in teur  ' ,(~-!, oC l) .
:-"avec  ~ (x)--~ ~.
(x) ~ ?
, o~(x) = ?et i (x ) .
- - -~- l (x )  ~ ?
,  ~ ' l (x )  = ?La rac ine  de l 'a rborescence  (~) aura  a lo rs  les  propr f~t~sA,B, ~(x) = ?, ~'l-(-X) = ?~(x) = ?,~-l(x) = ?Neus repr~s .enterens  sch~nat iquement  un ,Semmet de la  .fa~on su ivante  :-38-La structure arborescente suivante," ~A"  "sera notre :" II I0 A I ?lliIjCette representation n'exclut pas, ~videmment, l'adJonetiond'autres informations sur un son.Jet donn~, et, en partlculier, de3  poin'teurs caract~risant son appartenance ~ une autre arborescence.2 ?
- Description de la reconnaissancea) Balayage g~n~ral :La grammaire constitue en fait un programn~e form~ par la suites~quentielle des programmes que sont les r~gles.Sch~matiquement, le programme associ~ ~ une r~gle R i recherche,pour un sommet pivot x donn~, si la r~gle Ri est applicable.-39-Si la r~gle n'est pas applicable, le m6me essai sera renouvel~avec Ri+ I jusqu'~ ~pulsement des r~gles de la grarmmaire.Si une r~gle R ies t  applicable, la transformation associ~e estr~alis~e et le processus complet est repris, pour le m6me pivot, ~ partirde la premiere r~gle.
On volt que l'ordre s~quentiel entre les r~glesd~finit un ordre de prlorit~ d'applicatlon entre celles-ci.Si aucune r~gle ne s'applique ~ un pivot donn~, ce pivot estcompl~tement analys~ et le contrSle est donn~ ~ l'algorithme de choixdes pivots, pour en d~terminer un autre.
Cet alorithme parcourt succes-sivement tousles sommets de l'arborescence dana un ordre flx~ (en g~-n~ral, l'ordre habituel de description pr~fix~e d'une arborescence).Plusleurs modifications peuvent acc~l~rer et rendre plus souplele proc~d~, enpartlculler : I) assocler ~ chaque r~gle R i le numdro dela prochaine r~gle ~ appliquer si elleest accept~e.2)'D~finlr des r~gles de changement de pivotpermettant de contrSler le balayage parla grammaire.-40-Choix des pivots Parcours de la grammairex = pivot initial 1\]?successeur(x)-- XI i-7-in?n/~ R i applicable ?~i-k:J-- - -C  " - jiL .
.
.
.
.
.
.
.
.
.
J(modification i)b) Recherche d'une figure correspondant ~ une par*tie gauchede r~gle donn~eLe sch4ma de figure est d~fini par une expression parenth~s~econtenant des noms de relations et les noms de symboles qu i leurs sontassoci~s (6-a-O().Soit l'exemple suivant :(FILS a CFRERE b) (FILS c~ (FILS d)A chaque relation correspond l'appel ~ un sous programme dont les param~-tres sont le s>~r~bole associ~ et le nombre de parentheses (n) ferm~es quis~parent Is relation de la relation pr~c~dente~-41-Ainsi, l'exemple precedent se traduira par :FILS (a,o)FRERE (b, o)F ILS (c,1)FILS (d,2)Le sous prograrmne re la t ion  a pour rSle de d~termtner le  sommet x ~ par t t rduquel on dolt appliquer la relation, et de d~terminer le premier y telque xRy et que le symbole associ~ soit ~gal au symbole demandS.En pratique, le d~roulement du programme utilise une zone de m~molre, direPi.le de contrSle, dans laquelle sont stock~es des informations relativesla r~gle en cours d'application.
A chaque son, met y s~lectionn~ par lar~gle correspond une adresse dans la pile et un groupe de trois poin-teurs : un pointeur vers le sommet x ~ Partlr duquel y a ~t~ obtenu(Antecedent), un pointeur vers l'adresse exacte de y dans la structure,et un pointeur contenant l'adresse d'appel du sous programme qui aloca-lis~ y.Si PI' P2' P3' P4 sont ces adresses dans l'exemple donn~, nous aurons :Pile de contr61e~E.
STRUCT.
APPEL0 S C sommet 0 (pivot)0PI FILS (a,o) .
~ ~ SI PI sommet IP2 F~ (b,o) $2 P2 s~et  2 (P3 FILS (c,I) $3 P3 sommet 3P4 FILS (d,2) ~ t $4 P4 sommet 4( I ?
~ 0 0 ? "
,, J00 So, S1, $2, $3, S 4 sont les  adresses des sommets dans la s t ruc ture .-42-\/La r4f4rence ANTE est mise ~ jour ~ chaque nouvelle relation en utilisantle nembre n de parentheses ferm4es.
Elle est syst4matiquement initialis4e,en admettant n = O, ~ la valeur correspondant au sommet precedent dansl'ordre s~quentiel?Ainsi, un ~ventuel somet  S 5 aurait d4j~ S 4 pour ant~c4dent s in  = O, ets in  = i?La r~f~rence APPEL est n~cessaire pour la recherche syst~matique.
Ainsi,si l'on avait obtenu S Ie t  S 2 ~ partir de So, et si l'on ne trouvait pasde sommet S3, il'faudrait reprendre la recherche ~ partir d'un autresommet S' I"De $3, ANTE permet de retrouver Sl, et de r4appliquer la relation PIau-del~ de S I.On salt que chaque relation est ddfinie par deux fonctions fe t  g.Un organigramme approximatlf serait le suivant :I SORTIE ANORMALE\]Tl ouinon,,, ~ ouinon .
\ ]~g(y) = ?
?
- - - -L_____L'entr~e 1 correspond au premier appel de la relation?
L'entr~e 2 corres-pond au cas o0 l'on revient sur la relation donn~e pour d4terminer unautre chemin.L'entr~e 2 fait suite ~ une sortie anorma\]e dane une aut~ce relation dont-43-le son,met a pour antecedent le sonnet dont on repart en 2.
Dans l'exemple,PI sera appel~e par l'entr~e I au d~part, ainsi que P2 et P3" Si P3 donneune sortie anormale, on reprendra PI Pa r lWentr~e 2, puis ~ nouveau P2et P3 par l'entr~e I.3 ?
- Application des transformationsCette partie ne pr~sente pas de difficult~s majeures.
A chaquetransformation ~l~mentaire correspond un sous programme, d~pendant de 3param~tres en g~n~=al :Le num~ro d'ordre du sommet y concern~ par la transformationLe num~ro d'ordre du sommet permettant d'affecter une posi-tion ~ y (ce num~ro est vide pour un d~tachement ou une absorption).- Le nouveau symbole S' ~ affecter ~ y.Les num~ros d'ordre sont utilis~s comme des r~f~rences danala pile utilis~e en partie gauche.
La d~finition d'un nouveau sommet sefair en lui attribuant un num~ro d'ordre sup~rieur ~ ceux pr~vus dansle schema de figure.
On obtient ainsi une r~f~rence dans la pile ~ la-quelle il ne correspond aucun sommet, ce que l'on interpr6te en adjoi-gnant un nouveau son,net ~ la structure.-44-III - A P P L I C A T I O N  AU X P R 0 B LE  ME S. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.DE TRADU C T I ON AU T OMAT I QUEB1 ?
- Le rSle des grammaires transformationnelles dans le systame de T.A.L'objectif du modale de reconnaissance syntaxique (M2), ainsique la grammaire et los algorithmes qui le r~alisent ont felt l'objetd'une publication ant~rieure \[~\] \[~\]Rappelons cependant que ~ chaque phrase du texte initial, le modale M2fourn i t  une ou plusieurs structures qui se caract4risent de la maniaresuivante : c'est une structure arborescente dans laquelle ~ chaqueoccurrence correspond un sommet ; chaque symbole du vocabulaire V com ~prend le nom d'une ragle de construction syntaxique r (telle que BC>- .A)et un ensemble d'informations caract4risant l'unit4 lexicale (variablesgrammaticale% codes de r~f4rence au lexique, etc...)Entre deux So~m~ets x et y la relation x FILS y a lieu si et seulement silos occurrences associ~es sont li~es par une.ragle syntaxique r dont xest le gouverneur.
Alors r fait pattie du symbole de y?
En outre, m~mesi l'algorithme de r~duction des eonstituants discontinus a d~ @treemploy4 dans la phase M2, l'ordre entre les fils d'un m@me pare rested~fini par l'ordre sur los occurrences.Nous traiterons complatement la phrase suivante :~TA ~0P~Y~A 05B~CH~ ~ACTOE B03H~KHOBEH~IE  ~E~TP0!~0~(~ cette formule expllque fr~quente apparition ~e\] deuterons dans\[le~ nucl~aires r~actions).-45-I {(0HB~fCHEE~HI80 V I V570 H021(44) (~0PMY~A)i '..NO61(~TA)~08HMKMOBEHHE) (KKEPHEX) (.
)NO61 NI21 M272 N062(~ACTOE) (~E~TPOMOB) (B) (PEA/{\[~\]~ \[X)figure 17En r4alit4, la structure indiqu4e repr4sente deux structurescompatibles avec la grammaire de M2 :elle-m@mecelle dans laquelle le greupe pr4posit~onnel est gouvern4 parBO3HMKHOBEH~E (apparition), qui est la structure correcte.A chaque structure ainsi d&finie on superpo?e une autre struc-ture arborescente : la structure de chafne des occurrences.II sera alors possible d'~crire des schemas de figure comportant des rela-tions sur l'une quelconque de ces deux structures ; De plus, le cheminentre deux sommets exprim4 par une relation peut ~tre une composition desfonct ions~, ~ et ~ sur des structures diff4renteso-46-Le passage ~ la construction syntaxique fran@aise se fait au moyen d'unestructure intermddiaire (dans le langage pivot) ce qui implique l'emplofde deux modules transformationnels successifs.2 ?
- A_p.plication au module M3L'objectif du module d'~tiquetage (biB) consiste ~ :- Ddterminer la Structure syntaxique correcte ~ partir de lafamille de structures implicitement proposdes au moyen de transformationssur la structure arborescente initiale.Substltuer aux noms de r~gles syntaxiques une ~tlquettecarac~risant la signification de la liaison entre deux mots de mani~re~liminer les propri~t~s formelles de la langue source.Supprlmer les-sommets (occurrences) qui sont relatives ~ desmots consid~r~s con~ae outils syntaxiques dans ia langue source (parexemple : certalnes ponctuations, pr~positions fortement r~gles, etc...)- Dupliquer certains sommets lorsque lesoccurrences associdesposs~dent plus d'une fonction syntaxique.- Crier de nouveaux sommets lorsque la langue emploie une tour-nure synthdtique.La phrase de l'exemple precedent va ~tre repr~sent~e dans M3par la structure donnde en figure./I ~"~s~ )(EXPLIQUER)AGENT I I OBJET-47-(FORMULE) (APPARAITRE) (.
)(CE)  (FREQUENT) (DEUTERON) (REACTION)f j~e  ~_~sIEPITHETE \](NUCLEAIRE)Comme chaque symbole du vocabulaire port~ par la structureinitiale comprend un nom de r~g\]e synt~axiqueet une quantit~ appreciabled'informations, il est pr4f4rable de ne consid~rer d'aberd que le nomde r~gle pour la recherche d'une figure ob~issant ~ un schema donn4.
Lesinformations composant le reste du symbole seront trait~es en tant quevaleurs de variables associ4es ~ la classe de symboles repr~sent~s parle m~me nom de r~gleo-48-Ainsi la partie gauche d'une r~gle de transformation se divise en deuxsections :- Un sch4ma de figure- Des valeurs de variables sur les sommets de la figure iden-tifi4e, et, 4ventuellemen% de nouvelles relations faisant apparaltrede nouveaux sommets.Exemple : (FILS NI21) est un sch4ma de figure sur la structurearborescente qui constitue la premiere sectiona : NON-REFLECHI~%INTRANSITIFb : REFLECHI~ INTRANSITIFc : TRANSITIF-CONSTANTd : NON,REFLECHI~TRANSITIF-VARIABLEe : REFLECHI~TRANSITIF-VARIABLEf : QUALITEg : UNITEh : ANIMEvPERSONNIFIEi : INANIME/%NON-DENOMBRABLE /qui constituent ladeuxi~me sectionSelon diff~rents assemblages de conditions sur les sommets de lafigure on peut imaginer que des transformations diff~rentes doivent ~treeffectufies.Aussi, la r~gle de transformation peut elle comporter plusieurs partiesdroites "conditionnelles".
?La continuaticn du m~me exemple fournit les parties droites suivantes-f\[o\]- (g \ [o \ ]n l  \[I\]- i(a \ [o \ ] )  (d \ [o \ ]~h \[1\] ==>1 := AGENT(b \ [o \ ] )u (e \ [o \ ] f~h \[1\] =:~1 := AGENT2 := OBJET (PRONOMINAL-REFLECHI)O AINE 2(c \[o\]) u (d \[o\] ,~i \ [ l \ ] )u (d \ [o \ ] )uCe\ [o \ ] )  ==> 1 :: OBJETi := SUBJECTi := MATIEREI := DETERMINATIF-49-Dans une telle ragle la figure comporte 2 points : le premier point not~O, le deuxi~me point not4 1 doit ~tre f~Is du point Oet  porter le num~rode r~gle NI21oOn trouve une telle figure dans l'exemple trait~ en partant du pointcorrespondant au mot BOSHMKHOBEHHELe point o est donc BO~HMKHOBEHHELe point i est alors ~E~TPOHOBOn obtient alors l'~tiquette "AGENT" pour ~E~TPOHOB qui est en offerl'agent de l'action "appara~tre".Dans lecas  05 le deuxi~me groupe de propri~t~s est r~alis~, on construitun point suppl4mentaire not~ 2 auquel on affecte l'4tiquette "OBJET(PRONOMINAL-REFLECHI) '' et on le place dans la structure en rant que"fils ain4" du point O.L'algorithme d'exploitatlon de la grammaire cherche ~ traiter los figuresissues de la racine de la structure initiale, puis progresse par "noyaux"successi fs?
Los r~gles de la grammaire sont ordonn~es.
Une d~rogationl'ordre de progression dans les noyaux successifs a lieu dans deux cas :On rencontre un mot falsant partie d'une tournure idiomatique(priorit4 absolue)- On rencontre une coordination (priorit4 relative)Lorsqu'il ne reste plus des points "~tiquet~s" l'algorithme de transfor-mation s'arr@te.-50-B IBL IOGRAPHIE.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.I\] - N. CHOMSKY2\] - Z. HARRIS -3\] - E. S. KLIMA -4\] -S .
KUNO5\] - PETRICK\[6\] - B. VAUQUOIS -G, VEiLLONJ.
VEYRUNE S- HOLT\[8\] - G. VEILLONJ.
VEYRUNESAspects of the theory of syntax (1965)The M.I.T.
PressString analysis of sentence structure (1962)MOUTON & C ?Relatedness between grammatical systemsLanguage (1964) volume 40 n ?
IA system for transformational analysis(C0ngr~s NEW-YORK - mai 1965)A recognition procedure for transformational grammarsSyntaxe et Interpretation(Congr~s NEW-YORK - mai 1965)A mathematical and applied investigation of treestructures for computer syntactic analysisTh~se Univ.
of PennsylvaniaEtude de la r~alisatlon pratique d'une grammaire"Context-Free" et de l'algorithme associ~Document G-2OOI-I -,avril 1964
