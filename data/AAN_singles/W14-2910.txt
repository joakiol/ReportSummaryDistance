Proceedings of the 2nd Workshop on EVENTS: Definition, Detection, Coreference, and Representation, pages 68?76,Baltimore, Maryland, USA, June 22-27, 2014.c?2014 Association for Computational LinguisticsEvaluation for Partial Event CoreferenceJun Araki Eduard Hovy Teruko MitamuraLanguage Technologies InstituteCarnegie Mellon UniversityPittsburgh, PA 15213, USAjunaraki@cs.cmu.edu, hovy@cmu.edu, teruko@cs.cmu.eduAbstractThis paper proposes an evaluation schemeto measure the performance of a systemthat detects hierarchical event structure forevent coreference resolution.
We showthat each system output is represented asa forest of unordered trees, and introducethe notion of conceptual event hierarchy tosimplify the evaluation process.
We enu-merate the desiderata for a similarity met-ric to measure the system performance.We examine three metrics along with thedesiderata, and show that metrics extendedfrom MUC and BLANC are more ade-quate than a metric based on Simple TreeMatching.1 IntroductionEvent coreference resolution is the task to de-termine whether two event mentions refer to thesame event.
This task is important since resolvedevent coreference is useful in various tasks such astopic detection and tracking, information extrac-tion, question answering, textual entailment, andcontradiction detection.A key challenge for event coreference resolu-tion is that one can define several relations be-tween two events, where some of them exhibitsubtle deviation from perfect event identity.
Forclarification, we refer to perfect event identityas full (event) coreference in this paper.
To ad-dress the subtlety in event identity, Hovy et al.
(2013) focused on two types of partial event iden-tity: subevent and membership.
Subevent relationsform a stereotypical sequence of events, or a script(Schank and Abelson, 1977; Chambers and Juraf-sky, 2008).
Membership relations represent in-stances of an event collection.
We refer to bothas partial (event) coreference in this paper.
Fig-ure 1 shows some examples of the subevent andmembership relations in the illustrative text be-low, taken from the Intelligence Community do-main of violent events.
Unlike full coreference,partial coreference is a directed relation, and formshierarchical event structure, as shown in Figure 1.Detecting partial coreference itself is an importanttask because the resulting event structures are ben-eficial to text comprehension.
In addition, suchstructures are also useful as background knowl-edge information to resolve event coreference.A car bomb that police said was set by Shining Pathguerrillas ripped off(E4) the front of a Lima policestation before dawn Thursday, wounding(E5) 25 peo-ple.
The attack(E6) marked the return to the spotlightof the feared Maoist group, recently overshadowed bya smaller rival band of rebels.
The pre-dawn bomb-ing(E7) destroyed(E8) part of the police station anda municipal office in Lima?s industrial suburb of Ate-Vitarte, wounding(E9) 8 police officers, one seriously,Interior Minister Cesar Saucedo told reporters.
Thebomb collapsed(E11) the roof of a neighboring hospi-tal, injuring(E12) 15, and blew out(E13) windows anddoors in a public market, wounding(E14) two guards.Figure 1: Examples of subevent and member-ship relations.
Solid and dashed arrows representsubevent and membership relations respectively,with the direction from a parent to its subeventor member.
For example, we say that E4 is asubevent of E6.
Solid lines without any arrowheads represent full coreference.In this paper, we address the problem of evalu-68ating the performance of a system that detects par-tial coreference in the context of event coreferenceresolution.
This problem is important because, aswith other tasks, a good evaluation method for par-tial coreference will facilitate future research onthe task in a consistent and comparable manner.When one introduces a certain evaluation metricto such a new complex task as partial event coref-erence, it is often unclear what metric is suitableto what evaluation scheme for the task under whatassumptions.
It is also obscure how effectively andreadily existing algorithms or tools, if any, can beused in a practical setting of the evaluation.
In or-der to resolve these sub-problems for partial coref-erence evaluation, we need to formulate an evalu-ation scheme that defines assumptions to be maderegarding the evaluation, specifies some desider-ata that an ideal metric should satisfy for the task,and examines how adequately particular metricscan satisfy them.
For this purpose, we specifi-cally investigate three existing algorithms MUC,BLANC, and Simple Tree Matching (STM).The contributions of this work are as follows:?
We introduce a conceptual tree hierarchy thatsimplifies the evaluation process for partialevent coreference.?
We present a way to extend MUC, BLANC,and STM for the case of unordered trees.Those metrics are generic and flexibleenough to be used in evaluations involvingdata structures based on unordered trees.?
Our experimental results indicate that the ex-tended MUC and BLANC are better thanSimple Tree Matching for evaluating partialcoreference.2 Related WorkRecent studies on both entity and event coref-erence resolution use several metrics to evaluatesystem performance (Bejan and Harabagiu, 2010;Lee et al., 2012; Durrett et al., 2013; Lassalle andDenis, 2013) since there is no agreement on a sin-gle metric.
Currently, five metrics are widely used:MUC (Vilain et al., 1995), B-CUBED (Bagga andBaldwin, 1998), two CEAF metrics CEAF-?3andCEAF-?4(Luo, 2005), and BLANC (Recasensand Hovy, 2011).
We can divide these metricsinto two groups: cluster-based metrics, e.g., B-CUBED and CEAF, and link-based metrics, e.g.,MUC and BLANC.
The former group is not ap-plicable to evaluate partial coreference because itis unclear how to define a cluster.
The latter isnot readily applicable to the evaluation because itis unclear how to penalize incorrect directions oflinks.
We discuss these aspects in Section 4.1 andSection 4.2.Tree Edit Distance (TED) is one of the tradi-tional algorithms for measuring tree similarity.
Ithas a long history of theoretical studies (Tai, 1979;Zhang and Shasha, 1989; Klein, 1998; Bille, 2005;Demaine et al., 2009; Pawlik and Augsten, 2011).It is also widely studied in many applications, in-cluding Natural Language Processing (NLP) tasks(Mehdad, 2009; Wang and Manning, 2010; Heil-man and Smith, 2010; Yao et al., 2013).
However,TED has a disadvantage: we need to predefine ap-propriate costs for basic tree-edit operations.
Inaddition, an implementation of TED for unorderedtrees is fairly complex.Another tree similarity metric is Simple TreeMatching (STM) (Yang, 1991).
STM measuresthe similarity of two trees by counting the max-imum match with dynamic programming.
Al-though this algorithm was also originally devel-oped for ordered trees, the underlying idea of thealgorithm is simple, making it relatively easy toextend the algorithm for unordered trees.Tree kernels have been also widely studied andapplied to NLP tasks, more specifically, to cap-ture the similarity between parse trees (Collins andDuffy, 2001; Moschitti et al., 2008) or betweendependency trees (Croce et al., 2011; Srivastavaet al., 2013).
This method is based on a super-vised learning model with training data; hence weneed a number of pairs of trees and associated nu-meric similarity values between these trees as in-put.
Thus, it is not appropriate for an evaluationsetting.3 Evaluation SchemeWhen one formulates an evaluation scheme for anew task, it is important to define assumptions forthe evaluation and desiderata that an ideal metricshould satisfy.
In this section, we first describe as-sumptions for partial coreference evaluation, andintroduce the notion of conceptual event hierarchyto address the challenge posed by one of the as-sumptions.
We then enumerate the desiderata fora metric.693.1 Assumptions on Partial CoreferenceWe make the following three assumptions to eval-uate partial coreference.Twinless mentions: Twinless mentions (Stoyanovet al., 2009) are the mentions that exist in the goldstandard but do not in a system response, or viceversa.
In reality, twinless mentions often happensince an end-to-end system might produce them inthe process of detecting mentions.
The assump-tion regarding twinless mentions has been inves-tigated in research on entity coreference resolu-tion.
Cluster-based metrics such as B-CUBED andCEAF assume that a system is given true men-tions without any twinless mentions in the goldstandard, and then resolves full coreference onthem.
Researchers have made different assump-tions about this issue.
Early work such as (Ji etal., 2005) and (Bengtson and Roth, 2008) simplyignored such mentions.
Rahman and Ng (2009)removed twinless mentions that are singletons in asystem response.
Cai and Strube (2010) proposedtwo variants of B-CUBED and CEAF that can dealwith twinless mentions in order to make the evalu-ation of end-to-end coreference resolution systemconsistent.In evaluation of partial coreference where twin-less mentions can also exist, we believe that thevalue of making evaluation consistent and compa-rable is the most important, and hypothesize thatit is possible to effectively create a metric to mea-sure the performance of partial coreference whiledealing with twinless mentions.
A potential prob-lem of making a single metric handle twinlessmentions is that the metric would not be informa-tive enough to show whether a system is good atidentifying coreference links but poor at identify-ing mentions, or vice versa (Recasens and Hovy,2011).
However, our intuition is that the prob-lem is avoidable by showing the performance ofmention identification with metrics such as pre-cision, recall, and the F-measure simultaneouslywith the performance of link identification.
In thiswork, therefore, we assume that a metric for par-tial coreference should be able to handle twinlessmentions.Intransitivity: As described earlier, partial coref-erence is a directed relation.
We assume that par-tial coreference is not transitive.
To illustrate theintransitivity, let eis??
ejdenote a subevent rela-tion that ejis a subevent of ei.
In Figure 1, wehave E7s??
E8 and E8s??
E9.
In this case,E9 is not a subevent of E7 due to the intransi-tivity of subevent relations.
One could argue thatthe event ?wounding(E9)?
is one of stereotypicalevents triggered by the event ?bombing(E7)?, andthus E7s??
E9.
However, if we allow transitiv-ity of partial coreference, then we have to measureall implicit partial coreference links (e.g., the onebetween E7 and E9) from hierarchical event struc-tures.
Consequently, this evaluation policy couldresult in an unfair scoring scheme biased towardlarge event hierarchy.Link propagation: We assume that partial coref-erence links can be propagated due to a combi-nation of full coreference links with them.
To il-lustrate the phenomenon, let ei?
ejdenote fullcoreference between eiand ej.
In Figure 1, wehave E6 ?
E7 and E7s??
E8.
In this case, E8is also a subevent of E6, i.e., E6s??
E8.
Therationale behind this assumption is that if a sys-tem identifies E6s??
E8 instead of E7s??
E8,then there is no reason to argue that the identifiedsubevent relation is incorrect given that E6?
E7and E7s??
E8.
The discussion here also appliesto membership relations.3.2 Conceptual Event HierarchyThe assumption of link propagation poses a chal-lenge in measuring the performance of partialcoreference.
We illustrate the challenge with theexample in the discussion on link propagationabove.
We focus only on subevent relations to de-scribe our idea, but one can apply the same dis-cussion to membership relations.
Suppose that asystem detects a subevent link E7s??
E8, but notE6s??
E8.
Then, is it reasonable to give thesystem a double reward for two links E7s??
E8and E6s??
E8 due to link propagation, or shouldone require a system to perform such link propa-gation and detect E7s??
E8 as well for the systemto achieve the double reward?
In the evaluationscheme based on event trees whose nodes repre-sent event mentions, we need to predefine how todeal with link propagation of full and partial coref-erence in evaluation.
In particular, we must pay at-tention to the potential risk of overcounting partialcorefrence links due to link propagation.To address the complexity of link propagation,we introduce a conceptual event tree where eachnode represents a conceptual event rather than anevent mention.
Figure 2 shows an example ofa conceptual subevent tree constructed from full70coreference and subevent relations in Figure 1.Using set notation, each node of the tree representsan abstract event.
For instance, node {E6, E7}represents an ?attacking?
event which both eventmentions E6 and E7 refer to.Figure 2: A conceptual subevent tree constructedfrom the full coreference and subevent relations inFigure 1.The notion of a conceptual event tree obviatesthe need to cope with link propagation, therebysimplifying the evaluation for partial coreference.Given a conceptual event tree, an evaluation met-ric is basically just required to measure how manylinks in the tree a system successfully detects.When comparing two conceptual event trees, alink in a tree is identical to one in the other treeif there is at least one event mention shared in par-ent nodes of those links and at least one sharedin child nodes of those links.
For example, sup-pose that system A identifies E6s??
E8, systemB E7s??
E8, system C both, and all the systemsidentify E6 ?
E7 in Figure 1.
In this case, theygain the same score since the subevent links thatthey identify correspond to one correct subeventlink {E6, E7}s??
{E8} in Figure 2.
It is pos-sible to construct the conceptual event hierarchyfor membership relations in the same way as de-scribed above.
This means that the conceptualevent hierarchy allows us to show the performanceof a system on each type of partial coreferenceseparately, which leads to more informative evalu-ation output.One additional note is that the conceptual eventtree representing partial coreference is an un-ordered tree, as illustrated in Figure 2.
Althoughwe could represent a subevent tree with an or-dered tree because of the stereotypical sequence ofsubevents given by definition, partial coreferenceis in general represented with a forest of unorderedtrees1.1For example, it is impossible to intuitively define a se-3.3 Desiderata for MetricsIn general, a system output of partial event coref-erence in a document is represented not by a sin-gle tree but by a forest, i.e., a set of disjoint treeswhose nodes are event mentions that appear in thedocument.
Let T be a tree, and let F be a forestF = {Ti}.
Let sim(Fg, Fr) ?
[0, 1] denote a sim-ilarity score between the gold standard forest Fgand a system response forest Fr.
We define thefollowing properties that an ideal evaluation met-ric for partial event coreference should satisfy.P1.
Identity: sim(F1, F1) = 1.P2.
Symmetricity: sim(F1, F2) = sim(F2, F1).P3.
Zero: sim(F1, F2) = 0 if F1and F2are to-tally different forests.P4.
Monotonicity: The metric score should in-crease from 0 to 1 monotonically as two to-tally different forests approach the identicalone.P5.
Linearity: The metric score should increaselinearly as each single individual correctpiece of information is added to a system re-sponse.The first three properties are relatively intuitive.P4 is important because otherwise a higher scoreby the metric does not necessarily mean higherquality of partial event coreference output.
In P5, acorrect piece of information is the addition of onecorrect link or the deletion of one incorrect link.This property is useful for tracking performanceprogress over a certain period of time.
If the met-ric score increases nonlinearly, then it is difficult tocompare performance progress such as a 0.1 gainlast year and a 0.1 gain this year, for example.In addition, one can think of another propertywith respect to structural consistency.
The moti-vation for the property is that one might want togive more reward to partial coreference links thatform hierarchical structures, since they implicitlyform sibling relations among child nodes.
For in-stance, suppose that system A detects two links{E6, E7}s??
{E8} and {E6, E7}s??
{E11}, andsystem B two links {E8}s??
{E9} and {E11}s??
{E12} in Figure 2.
We can think that system Aperforms better since the system successfully de-tects an implicit subevent sibling relation between{E8} and {E11} as well.
Due to space limita-tions, however, we do not explore the property inthis work, and leave it for future work.quence of child nodes in a membership event tree in Figure 1.714 Evaluation MetricsIn this section, we examine three evaluation met-rics based on MUC, BLANC, and STM respec-tively under the evaluation scheme described inSection 3.4.1 B-CUBED and CEAFB-CUBED regards a coreference chain as a set ofmentions, and examines the presence and absenceof mentions in a system response that are relativeto each of their corresponding mentions in the goldstandard (Bagga and Baldwin, 1998).
Let us callsuch set a mention cluster.
A problem in applyingB-CUBED to partial coreference is that it is diffi-cult to properly form a mention cluster for partialcoreference.
In Figure 2, for example, we couldform a gold standard cluster containing all nodesin the tree.
We could then form a system responsecluster, given a certain system output.
The prob-lem is that B-CUBED?s way of counting mentionsoverlapped in those clusters cannot capture parent-child relations between the mentions in a cluster.It is also difficult to extend the counting algorithmto incorporate such relations in an intuitive man-ner.
Therefore, we observe that B-CUBED is notappropriate for evaluating partial coreference.We see the basically same reason for the inade-quacy of CEAF.
It also regards a coreference chainas a set of mentions, and measures how many men-tions two clusters share using two similarity met-rics ?3(R,S) = |R ?
S| and ?4(R,S) =2|R?S||R|+|S|,given two clustersR and S. One can extend CEAFfor partial coreference by selecting the most ap-propriate tree similarity algorithm for ?
that workswell with the algorithm to compute maximum bi-partite matching in CEAF.
However, that is an-other line of work, and due to space limitationswe leave it for future work.4.2 Extension to MUC and BLANCMUC relies on the minimum number of linksneeded when mapping a system response to thegold standard (Vilain et al., 1995).
Given a set ofkey entitiesK and a set of response entitiesR, pre-cision of MUC is defined as the number of com-mon links between entities in K and R divided bythe number of links in R, whereas recall of MUCis defined as the number of common links betweenentities inK andR divided by the number of linksinK.
After finding a set of mention clusters by re-solving full coreference, we can compute the num-ber of correct links by counting all links spanningin those mention clusters that matched the goldstandard.
It is possible to apply the idea of MUCto the case of partial coreference simply by chang-ing the definition of a correct link.
In the partialcoreference case, we define a correct link as a linkmatched with the gold standard including its di-rection.
Let MUCpdenote such extension to MUCfor partial coreference.Similarly, it is also possible to define an ex-tension to BLANC.
Let BLANCpdenote the ex-tension.
BLANC computes precision, recall,and F1 scores for both coreference and non-coreference links, and average them for the finalscore (Recasens and Hovy, 2011).
As with MUCp,BLANCpdefines a correct link as a link matchedwith the gold standard including its direction.
An-other difference between BLANC and BLANCpisthe total number of mention pairs, denoted asL.
Inthe original BLANC, L = N(N ?
1)/2 where Nis the total number of mentions in a document.
Weuse Lp= N(N ?
1) instead for BLANCpsincewe consider two directed links in partial corefer-ence with respect to each undirected link in fullcoreference.4.3 Extension to Simple Tree MatchingThe underlying idea of STM is that if two treeshave more node-matching, then they are more sim-ilar.
The original STM uses a dynamic program-ming approach to perform recursive node-levelmatching in a top-down fashion.
In the case ofpartial coreference, we cannot readily use the ap-proach because partial coreference is representedwith unordered trees, and thus time complexity ofnode-matching is the exponential order with re-spect to the number of child nodes.
However, par-tial event coreference is normally given in a smallhierarchy with three levels or less.
Taking ad-vantage of this fact and assuming that each eventmention is uniquely identified in a tree, we ex-tend STM for the case of unordered trees by usinggreedy search.
Algorithm 1 shows an extension tothe STM algorithm for unordered trees.We can also naturally extend STM to takeforests as input.
Figure 3 shows how one can con-vert a forest into a single tree whose subtrees arethe trees in the forest by introducing an additionaldummy root node on top of those tree.
The result-ing tree is also an unordered tree, and thus we canapply Algorithm 1 to that tree to measure the sim-72Algorithm 1 Extended simple tree matching forunordered trees.Input: two unordered trees A and BOutput: score1: procedure SimpleTreeMatching(A, B)2: if the roots of A and B have different elements then3: return 04: else5: s := 1 .
The initial score for the root match.6: m := the number of first-level sub-trees of A7: n := the number of first-level sub-trees of B8: for i = 1?
m do9: for j = 1?
n do10: if Aiand Bjhave the same element then11: s = s + SimpleTreeMatching(Ai, Bj)Figure 3: Conversion from a forest to a single treewith an additional dummy root.ilarity of two forests comprising unordered trees.Let STMpdenote the extended STM.
Finally, wenormalize STMp.
Let NSTMpbe a normalizedversion of STMpas follows: NSTMp(F1, F2) =STMp(F1, F2)/max(|F1|, |F2|) where |F | de-notes the number of nodes in F .4.4 Flexibility of MetricsMaking assumptions on evaluation for a particulartask and defining desiderata for a metric determinewhat evaluation scheme we are going to formulate.However, this kind of effort tends to make result-ing evaluation metrics too restrictive to be reusablein other tasks.
Such metrics might be adequatefor that task, but we also value the flexibility ofa metric that can be directly used or be easily ex-tended to other tasks.
To investigate the flexibil-ity of MUCp, BLANCpand STMp, we will exam-ine these metrics without making the assumptionsof twinless mentions and intransitivity of partialcoreference against each metric.
We consider thatthe assumption of link propagation is more funda-mental and regard it as a basic premise, and thuswe will continue to make that assumption.MUC was originally designed to deal with re-sponse links spanning mentions that even key linksdo not reach.
Thus, it is able to handle twinlessmentions.
If we do not assume intransitivity ofpartial coreference, we do not see any difficulty inchanging the definition of correct links in MUCpand making it capture transitive relations.
There-fore, MUCpdoes not require both assumptions oftwinless mentions and intransitivity.In contrast, BLANC was originally designed tohandle true mentions in the gold standard.
SinceBLANCpdoes not make any modifications on thisaspect, it cannot deal with twinless mentions ei-ther.
As for intransitivity, it is possible to easilychange the definition of correct and incorrect linksin BLANCpto detect transitive relations.
Thus,BLANCpdoes not require intransitivity but doesrequire the assumption of no twinless mentions.Since STMpsimply matches elements in nodesas shown in Algorithm 1, it does not require the as-sumption of twinless mentions.
With respect to in-transitivity, we can extend STMpby adding extraedges from a parent to grandchild nodes or othersand applying Algorithm 1 to the modified trees.Hence, it does not require the assumption of in-transitivity.5 ExperimentsTo empirically examine the three metrics de-scribed in Section 4.2 and Section 4.3, we con-ducted an experiment using the artificial datashown in Table 1.
Since BLANCpcannot han-dle twinless mentions, we removed twinless men-tions.
We first created the gold standard shown inthe first row of the table.
It contains fifty events,twenty one singleton events, and seven event treeswith three levels or less.
We believe this distri-bution of partial coreference is representative ofthat of real data.
We then created several systemresponses that are ordered toward two extremes.One extreme is all singletons in which they do nothave correct links.
The other is a single big treethat merges all event trees including singletons inthe gold standard.Figure 4 shows how the three metrics behavein two cases: (a) we increase the number of cor-rect links from all singletons to the perfect output(equal to the gold standard), and (b) we increasethe incorrect links from the perfect output to a sin-gle tree merging all trees in the gold standard.
Inthe former case, we started with System 3 in Ta-ble 1.
Next we added one correct link 28s??
29shown in System 2.
This way, we added cor-rect links up to the perfect output one by one ina bottom-up fashion.
In the latter case, we started73ResponseOutputGold standard(1(2(6))(3(7))(4)(5)) (8(9(11)(12))(10)) (13(14)(15)(16)(17)(18)) (19(20(21))(22)) (23(24)(25))(26(27)) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45) (46)(47) (48) (49) (50)System 1(1(4)(5)(2(6))(3(7))) (8(9(11)(12))(10)) (13(18)(14)(15)(16)(17)) (19(22)(20(21))) (23(24)(25))(26(27)) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45) (46)(47) (48) (49(50))System 2(1) (2) (3) (4) (5) (6) (7) (8) (9) (10) (11) (12) (13) (14) (15) (16) (17) (18) (19) (20) (21) (22) (23) (24)(25) (26) (27) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45)(46) (47) (48) (49) (50)System 3(1) (2) (3) (4) (5) (6) (7) (8) (9) (10) (11) (12) (13) (14) (15) (16) (17) (18) (19) (20) (21) (22) (23) (24)(25) (26) (27) (28) (29) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45)(46) (47) (48) (49) (50)Table 1: Examples of a system response against a gold standard partial coreference.
Each event tree isshown in the bold font and in the Newick standard format with parentheses.with the perfect output, and then added one incor-rect link 49s??
50 shown in System 1.
In a mannersimilar to case (a), we added incorrect links up tothe merged tree one by one in a bottom-up fashion.The results indicate that MUCpand BLANCpmeet the desiderata defined in Section 3.3 moreadequately than NSTMp.
The curve of MUCpandBLANCpin Figure 4 are close to the linearity,which is practically useful as a metric.
In contrast,NSTMpfails to meet P4 and P5 in case (a), andfails to meet P5 in case (b).
This is because STMfirst checks whether root nodes of two trees havethe same element, and if the root nodes have dif-ferent elements, STM stops searching the rest ofnodes in the trees.6 DiscussionIn Section 4.4, we observed that MUCpand STMpare more flexible than BLANCpbecause they canmeasure the performance coreference in the caseof twinless mentions as well.
The experimental re-sults in Section 5 show that MUCpand BLANCpmore adequate in terms of the five properties de-fined in Section 3.3.
Putting these together, MUCpseems the best metric for partial event coreference.However, MUC has two disadvantages that (1) itprefers systems that have more mentions per en-tity (event), and (2) it ignores recall for singletons(Pradhan et al., 2011).
MUCpalso has these disad-vantages.
Thus, BLANCpmight be the best choicefor partial coreference if we could assume that asystem is given true mentions in the gold standard.Although STMpfails to satisfy P4 and P5, ithas potential power to capture structural proper-0204060801000  20  40  60  80  100ScoreRatio of correct links [%]MUCpBLANCpNSTMp(a) The number of correct links increases from singletons tothe perfect output (the gold standard) one by one.0204060801000  20  40  60  80  100ScoreRatio of incorrect links [%]MUCpBLANCpNSTMp(b) The number of incorrect links increases from the perfectoutput to a single tree merging all trees one by one.Figure 4: Score comparison among MUCp,BLANCp, and NSTMp.74ties of partial coreference described in Section 3.3.This is because STM?s recursive fashion of node-counting can be easily extend to counting the num-ber of correct sibling relations.7 ConclusionWe proposed an evaluation scheme for partialevent coreference with conceptual event hierar-chy constructed from mention-based event trees.We discussed possible assumptions that one canmake, and examined extensions to three existingmetrics.
Our experimental results indicate that theextensions to MUC and BLANC are more ade-quate than the extension to STM.
To our knowl-edge, this is the first work to argue an evaluationscheme for partial event coreference.
Neverthe-less, we believe that our scheme is generic andflexible enough to be applicable to other directedrelations of events (e.g., causality and entailment)or other related tasks to compare hierarchical databased on unordered trees (e.g., ontology compari-son).
One future work is to improve the metricsby incorporating structural consistency of eventtrees as an additional property and implementingthe metrics from the perspective of broad contextsbeyond local evaluation by link-based counting.8 AcknowledgementsThis research was supported in part by DARPAgrant FA8750-12-2-0342 funded under the DEFTprogram.
Any opinions, findings, and conclusionor recommendations expressed in this material arethose of the authors and do not necessarily reflectthe view of the DARPA or the US government.
Wewould like to thank anonymous reviewers for theirhelpful comments.ReferencesAmit Bagga and Breck Baldwin.
1998.
Algorithmsfor Scoring Coreference Chains.
In Proceedings ofLREC 1998 Workshop on Linguistics Coreference,pages 563?566.Cosmin Bejan and Sanda Harabagiu.
2010.
Unsuper-vised Event Coreference Resolution with Rich Lin-guistic Features.
In Proceedings of ACL 2010, pages1412?1422.Eric Bengtson and Dan Roth.
2008.
Understandingthe Value of Features for Coreference Resolution.
InProceedings of EMNLP 2008, pages 294?303.Philip Bille.
2005.
A Survey on Tree Edit Distance andRelated Problems.
Theoretical Computer Science,337(1-3):217?239.Jie Cai and Michael Strube.
2010.
Evaluation MetricsFor End-to-End Coreference Resolution Systems.
InProceedings of SIGDIAL 2010, pages 28?36.Nathanael Chambers and Dan Jurafsky.
2008.
Un-supervised Learning of Narrative Event Chains.
InProceedings of ACL-HLT 2008, pages 789?797.Michael Collins and Nigel Duffy.
2001.
ConvolutionKernels for Natural Language.
In Proceedings ofNIPS 2001, pages 625?632.Danilo Croce, Alessandro Moschitti, and RobertoBasili.
2011.
Structured Lexical Similarity via Con-volution Kernels on Dependency Trees.
In Proceed-ings of EMNLP 2011, pages 1034?1046.Erik D. Demaine, Shay Mozes, Benjamin Rossman,and Oren Weimann.
2009.
An Optimal Decomposi-tion Algorithm for Tree Edit Distance.
ACM Trans-actions on Algorithms (TALG), 6(1):2:1?2:19.Greg Durrett, David Hall, and Dan Klein.
2013.
De-centralized Entity-Level Modeling for CoreferenceResolution.
In Proceedings of ACL 2013, pages114?124.Michael Heilman and Noah A. Smith.
2010.
Tree EditModels for Recognizing Textual Entailments, Para-phrases, and Answers to Questions.
In Proceedingsof NAACL-HLT 2013, pages 1011?1019.Eduard Hovy, Teruko Mitamura, Felisa Verdejo, JunAraki, and Andrew Philpot.
2013.
Events are NotSimple: Identity, Non-Identity, and Quasi-Identity.In Proceedings of NAACL-HLT 2013 Workshop onEvents: Definition, Detection, Coreference, andRepresentation, pages 21?28.Heng Ji, David Westbrook, and Ralph Grishman.
2005.Using Semantic Relations to Refine CoreferenceDecisions.
In Proceedings of EMNLP/HLT 2005,pages 17?24.Philip N. Klein.
1998.
Computing the Edit-DistanceBetween Unrooted Ordered Trees.
In Proceed-ings of the 6th European Symposium on Algorithms(ESA), pages 91?102.Emmanuel Lassalle and Pascal Denis.
2013.
Im-proving pairwise coreference models through fea-ture space hierarchy learning.
In Proceedings ofACL 2013, pages 497?506.Heeyoung Lee, Marta Recasens, Angel Chang, Mi-hai Surdeanu, and Dan Jurafsky.
2012.
Joint En-tity and Event Coreference Resolution across Doc-uments.
In Proceedings of the Conference onEmpirical Methods in Natural Language Process-ing and Computational Natural Language Learning(EMNLP-CoNLL), pages 489?500.75Xiaoqiang Luo.
2005.
On Coreference Resolution Per-formance Metrics.
In Proceedings of EMNLP 2005,pages 25?32.Yashar Mehdad.
2009.
Automatic Cost Estimation forTree Edit Distance Using Particle Swarm Optimiza-tion.
In Proceedings of ACL-IJCNLP 2009, pages289?292.Alessandro Moschitti, Daniele Pighin, and RobertoBasili.
2008.
Tree Kernels for Semantic Role La-beling.
Computational Linguistics, 34(2):193?224.Mateusz Pawlik and Nikolaus Augsten.
2011.
RTED:A Robust Algorithm for the Tree Edit Distance.Proceedings of the VLDB Endowment (PVLDB),5(4):334?345.Sameer Pradhan, Lance Ramshaw, Mitchell Marcus,Martha Palmer, Ralph Weischedel, and NianwenXue.
2011.
CoNLL-2011 Shared Task: ModelingUnrestricted Coreference in OntoNotes.
In Proceed-ings of CoNLL Shared Task 2011, pages 1?27.Altaf Rahman and Vincent Ng.
2009.
SupervisedModels for Coreference Resolution.
In Proceedingsof EMNLP 2009, pages 968?977.Marta Recasens and Eduard Hovy.
2011.
BLANC:Implementing the Rand index for coreference eval-uation.
Natural Language Engineering, 17(4):485?510.Roger C. Schank and Robert P. Abelson.
1977.
Scripts,Plans, Goals, and Understanding: An Inquiry intoHuman Knowledge Structures.
Lawrence ErlbaumAssociates.Shashank Srivastava, Dirk Hovy, and Eduard Hovy.2013.
A Walk-Based Semantically Enriched TreeKernel Over Distributed Word Representations.
InProceedings of EMNLP 2013, pages 1411?1416.Veselin Stoyanov, Nathan Gilbert, Claire Cardie, andEllen Riloff.
2009.
Conundrums in Noun PhraseCoreference Resolution: Making Sense of the State-of-the-Art.
In Proceedings of ACL/IJCNLP 2009,pages 656?664.Kuo-Chung Tai.
1979.
The Tree-to-Tree CorrectionProblem.
Journal of the ACM (JACM), 26(3):422?433.Marc Vilain, John Burger, John Aberdeen, Dennis Con-nolly, and Lynette Hirschman.
1995.
A Model-Theoretic Coreference Scoring Scheme.
In Pro-ceedings of the 6th Message Understanding Confer-ence (MUC), pages 45?52.Mengqiu Wang and Christopher D. Manning.
2010.Probabilistic Tree-Edit Models with Structured La-tent Variables for Textual Entailment and QuestionAnswering.
In Proceedings of COLING 2010, pages1164?1172.Wuu Yang.
1991.
Identifying Syntactic DifferencesBetween Two Programs.
Software: Practice andExperience, 21(7):739?755.Xuchen Yao, Benjamin Van Durme, Chris Callison-burch, and Peter Clark.
2013.
Answer Extractionas Sequence Tagging with Tree Edit Distance.
InProceedings of NAACL-HLT 2013, pages 858?867.Kaizhong Zhang and Dennis Shasha.
1989.
SimpleFast Algorithms for the Editing Distance BetweenTrees and Related Problems.
SIAM J. Comput.,18(6):1245?1262.76
