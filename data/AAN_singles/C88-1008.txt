The E-Framework: A Formalism for Natural Language Processing.Annel ise BECH and Anders NYGAARD,EUROTRA-DK,Univers i ty  of Copenhagen,Nja lsgade 80,DK-2300 Kbh.
S, Denmark?Abstract.This paper presents the most importantcharacteristic of the new formalism used inEurotra, the E-Framework.
It is a formalismfor natural language processing within astratificational model.In the E-Framework, mapping between levelsof representation is performed on the basisof transitions between trees and partialdescriptions of objects, called descriptors.These descriptors are completed using thedefinition of the target level.The tree to descriptor strategy simplifiesthe expression of complex two-way relationsbetween text and abstract representationswhen major structural changes have to beperformed on the input.
This is illustratedby way of a detailed example showing theinteraction of the two formal devices of theE-Framework, the translator and thegenerator, the basic ideas of which are alsobriefly described.The E-Framework has been implemented andforms the basis of the development ofEuretra's pre-industrial prototype of atransfer-based, multi-lingual machine trans-lation system.The E-Framework was developed because ofproblems in expressing this relat ion in asimple and perspicuous way in the earl ierformal isms used in Eurotra: When gra~m~arsgrew to have substantial  l inguist iccoverage, the rules descr ib ing the mappingbetween levels became highly complex andnumerous due to interdependence between thel inguist ic phenomena tr iggering structuralchanges in a representat ional  tree.The pro l i ferat ion in the number of rules wasmain ly  due to the fact that mapping rulesident i f ied specif ic  target level rules toevaluate the new tree structures, and thecomplexity of rules was due to the tree totree transducing strategy used whichstr ict ly  required speci f icat ion of full ~f ledged target level tree structures.Therefore this k ind of mapping strategy wasabandoned, and a di f ferent one requir ingonly part ial  target level tree descript ions,has been adopted as the basic method forperforming transit ions within the E-Framework.i.
Introduction.The E-Framework is the formal ism used inEurotra for implementing a pre- industr ia lprototype of a strat i f icat ional  transfer-based, mult i - l ingual  machine translat ionsystem.The E-Framework has been developed on thebasis of experiences with earl ier Eurotraformalisms, e.g.
<C,A>,T /Arnold, et al1986/.
However, in at least two respects, itdi f fers s igni f icant ly  from its predecessorsand other formal isms which transform treestructures by mapping procedures, e.g.Rosetta (cf.
/Appelo, et al 1987/), GETA(cf.
/Vauquois, et al 1985/) or Mu (cf./Nagao, et al 1985/): In the E-Framework,there are just two formal devices, and themapping from one level to the next is notperformed by tradit ional  tree to treetransducers.
Instead, the mapping strategyis based on transit ions from trees topart ial  descript ions.2.
Background.The large number of transfer components in amult i - l ingual  t ranslat ion system obviouslymakes it desirable to keep them as small andsimple as possible.
To achieve this,language specif ic phenomena are neutral izedin Eurotra's interface representat ion of atext, and the main burden of work is shiftedto the analys is /synthesis  components.
Thismeans that every monol ingual  componentexpresses a rather complex two-way relat ionbetween abstract representat ion and actualtext.3.
Overv iew of the E-Framework.The E-Framework consists of just two formaldevices, namely a generator and atranslator.
The generator and the translatorare abstract devices which interpretgrammars and t-modules, respectively.A grammar defines a level of representation,and a t-module states the relation betweensource level trees and their correspondingpart ia l  descr ipt ions to be completed by thegenerator at the target level.F igure 1 below gives a schematic overview.3.1.
Representat ional  object and descriptor.Before we descr ibe the translator andgenerator devices in greater detail, it isuseful  to have a look at the nature of themater ia l  they produce.The generator produces representationalobjects.
A representat ional  object is a treein which the nodes are feat%ire bt~dleso Afeature bundle is a set of simple featuresof the attr ibute-value type.A representat ional  object is ful ly descr ibedby the feature bundles and the dominance andprecedence relat ions between them?
Byleaving out features and/or informationabout the relat ions between feature bundles~we obviously have only a part ial  descr ipt ionof the object.
These part ia l  descr ipt ions wecal l  descr iptors,  and they are what thetranslator feeds to the generator?563 o 2 o Th(~ N::t'ans\],al;o~ ,TIll?
tr anslatox uses a source levelrepresentat ional  object and the specif ica-t ions i:0 a t-.-module to p~:-oduce a descr ipto<for the targut \[\[.~VeloA t-module i s  dec\]arat ive; 9t:: consists of t~~.~\].e~ which descr ibe the relal:ion betweensource Level representat ional  objects andt~.rget \]eve\].
descriptors?
A t-rule consistsof a l~d!t ha~d ~id .e  which describes ~t t reeat: the source level~ and a ~'ight ha~d sJ.,d~\]which states the corresponding desc~cipto)~ atthe target \].cveloThe left hand side of a t<cule is, a treedescr ipt ion where the feature bundles to  beincluded in the target descYiptor are markedw#\[th Jd?.ntifierso 'J.
'he right hal~d side is adef in i t ion of a descr iptor  J.n ~he f!orm ofidentJ.f;k~_rs,, and domJ.nance and prucedeneerelat ions between th(~moFeature bundles represented by identi f ierson the r{_ght hand ~'~ide ar\[; by default copiesof the source \[Level feature bundles,, but t-.:!
:tt\].es may be staked to specify addition~change oc delet ion of features?A single t-rule only def ines the descr iptorfor the part of a source level tree matchingthe descr ipt ion on its left hand side.
Theset of t-.rLlles to be used in the product ionof the descr iptor for the full source leveltree, J,~ selected by the translator in atop-odown driven match of the tree againstthe \].eft hand sides?
\]~f some part of thetree doe~.
: not match the left hand side ofany t-rule in a t-qnodule, the translatorcopies the dominance and precedenceinformati.on fxom the source object?Since t i le descr iptors are only part ia ltarget object descript ions,  they must becompleted; this is done autonomously by thegenerato:,: device?
So,  compared to tree totree transducers~ the translator device ofthe E-F:,~mnework can be character ized asquite weak: The translator can only provideguidance for the construct ion of targetobjects; it cannot buJ, ld theln itself?3?3?
'l~e Generator.The generator uses the level def in i t ioncontained in a grammar and the descr iptorsprovided by the translator to createrepresentat ional  objects.The granmlar itself is declarative; itconsists of a set of g-rules, each of whichis a descr ip t ion  of  lega l  par ts  of represen-ta t iona l  ob jec ts .The generator completes a descr iptor outputfrom the translator by repeatedly applyingg-ruleso The appl icat ion of rules is non-d(~terministie; it continues unti l  no moreinformation can be added and all informationfrom the original descr iptor has beenval idated by at least one g-ruleo Thisresults Jn one or more representat ionalobjects?If some information is not validated, thegenerator cannot produce a legal represen-tational object.
Consequently, the attemptat complet ion fails?The appl icat ion of a g-rule is a customizedversion of  unif icat ion which not onlypermits addit ion of features, but also ofstructural  information and entire featurebundles.This property of g-~rule appl icat ion i s  thekey reason why a t-module need only specifyvery little; the E-Framework generatordevice has autonomous power to f inish apart ial  description, and the descr ipt ions inthe grm~lars are not only used for checkingstructures, but also for construct ing them.L .
.
.
.
.| .
.
.
.
.
.
.
.
I !
.
.
.
.
.
.
.
| .
.
.
.
.
.
.
.
.
.
.
.
>I .... \]representat ionalobj ~;(.~ ts'.
?~ans lator .................. > GeneratorI" -- I ..... | )r - \] .
.
.
.
I' .> " \ [ .
-  descr iptors____ J ___.
.
.
.
.
.
1lrepresentationalobjectsFigure Io374.
An  Example .In this section, we i l lustrate how thedevices descr ibed above interact to performmajor structural  changes with only a verysimple t-module.
For the sake of clarity,the example given is somewhat s impl i f ied andcontains no more than the essential  details.Consider the source level representat ionalobject (i), represent ing the sentence "thewoman works", and its target levelrepresentat ion (2).cat=s!J !cat=v cat=nplu=work defness=def in i teIcat=nlu=woman( i )cat=s (2)L F -- icat=rip cat=vpdefness=definitel 1i " 7cat=detp cat=n cat=vdefness=def in i te  lu=woman lu=workIcat=detdefness=def in i telu=theNote that in the source object, thedeterminer "the" is represented only as afeature of the np-node, whereas in thetarget object, it has a structural represen-tation.
Note also that the const i tuents inthe source objects appear in a canonical izedorder.
These are just some of the abstrac-tions that are made in Eurotra in order toneutral ize language specif ic behaviour, andwhich have to be undone in Synthesis.The only t-rule needed to produce thenecessary descr iptor is (3).
Feature bundlesare del imited by curly braces, squarebrackets denote immediate dominance, andangle brackets just dominance.
Outside ofparentheses, precedence is implicit  in thesequence of identif iers.
Precedence isunspeci f ied for identi f iers in parentheses.Identi f iers are wr i t ten in capital letters,attr ibute names and constant values in smallletters.
An arrow, '=>', separates the leftand right hand sides of the t-rule.B:{cat=s} \[ V:{cat=v}, SUBJ:{cat=np} \]=> S < (V, SUBJ) >3)From this ru le  and by copying informationfrom the source level object, the translatorproduces the fol lowing descriptor:{cat=s .
.
.
.  }
(4)< ( {cat=v, lu=work .
.
.
.
},{cat=np, defness=def in i te  .
.
.
.
}< {cat=n, lu--woman, ... } > ) >The g-rules descr ib ing the target level arethe following, where a '^' pref ixed to a5~feature bundle means that it is optionalsand an '!'
pref ix means that the feahurebundle should be added if not present.
Namedvar iables are wr i t ten in capitals.
{cat=s, ... }\[ {cat=np, ... },{cat=vp .
.
.
.  }
\](5){cat=vp,  .
.
.
}\[ {cat=v .
.
.
.  }
,^{cat=np .
.
.
.  }
\](6){cat=np, defness=D, ..?
}\[ !
{cat=detp, defness=D, .oo },{cat=n, ..o },~{cat=pp, ... } \](7){cat=detp, defness=D .
.
.
.
}\[ {cat=det, defness=D, ..o } \](s)Let us first concentrate on the np part ofthe descr iptor (4), and see how it iscompleted by the generator.By uni f icat ion with rule (7), we get thefol lowing structure where a node for thedeterminer phrase has been added:{cat=np, defness=definite,  ... }\[ {cat=detp, defness=definite,  o.. },{cat=n, lu=woman, ... } \]Now, rule (8) adds the determiner to theobject:{cat=np, defness=definite,  ... }\[ {cat=detp, defness=def in i te .
.
.
.
}\[ {cat=det, defness=definite,  ooo } \],{cat=n, lu=woman .
.
.
.  }
\]The inserted node for the determinercontains the information which enables thegenerator to f ind and add the feature forthe lexical unit "the".A structural  representat ion of the definite-ness feature has been created, and as theoriginal information in (4) has also beenval idated, the generator has f in ished itsconstruct ion of the np.As the dominance relat ion between the s-nodeand the v-node given by the descriptor in(4) does not necessar i ly  imply immediatedominance in the f in ished objectt thegenerator can create a vp-node by applica-t ion of rule (6).
The original descriptor iscompleted by rule (5), which also estab -~l ishes the immediate precedence relat ionbetween the np-node and the vp-nodeoThis gives us the target object depicted in(2), which has a much richer structure thanthe one provided by the descriptor.
As thestructure was autonomously created by thegenerator applying g-rules, the examplei l lustrates how the generator can add linealprecedence information and introduce newnodes to complete the dominance andprecedence relat ions given in a descriptor?5o Conclusion?The E-Framework itself does not put anyrestrictions on the number of represen-tational levels, and it does not prescribeany specific distribution of linguisticphenomena over levels0Expressing linguistic knowledge irl a simpleand modular way is obviously crucial for theperspicnity, extensibility and repairabilityof any large-scale natural languageprocessing system.The tree to descriptor strategy used in theE-Framework makes it possible to express thecomplex two-way relation between a text andits abstract representation as a set ofsimple, econ~nical and non-proceduraldescriptions?
This has been achieved bygiving the generator device the power to usethe grammar rules defining a level ofrepresentation for other than just checkingpurposes.
As a consequence, the task of thetranslator has been diminished in that fullstructural specifications need no longer bestated in the t-modules as well as in thegrammarsIn our application, the advantage of thetree to descriptor strategy is that evenwhen aiming at simple bi-lingual t-modulesin a stratifieational translation model,which tends to demand a n~aber of structuralchanges to be performed within monolingualcomponents, the description of these changesis rather simple.References~Appelo, L., Fellinger, C., Landsbergen, J?
(1987): "Subgrarmnars, Rule Classes andControl in the Rosetta Translation System",in ACL Proceedings 87r (European Chapter),University of Copenhagen, pp.
118-133oArnold, D. J., Krauwer, S., Rosner, M., desTombe, L., Varile, G. B.
(1986): "The<C,A>,T Framework in Eurotra: A Theoreti-cally Committed Notation for MT", inProceedings of Coling 86, Universit~ ofBonn, pp.
297-303.Boitet, C., Guillaume, p., Qu6zel-An~runaz,M?
(1978): "Manipulations d'arborescences etparall~lisme: le syst~me ROBRA", inProceedings of Coling 78, University ofBergen.Nagao, M., Tsujii, J., Nakamura, J?
(1985):"The Japanese Government Project for MachineTranslation", in Computational Lin~listics,vol.
ii, no.
2-3, pp.
91-110.Vauquois, B?, Boitet, C. (1985): "AutomatedTranslation at Grenoble University", inComputational Linguistics, volo ii, no.
1,pp.
28-36.For general information on the EurotraResearch and Development Project see e~goMultilingua; vol.
5, no.
3, 1985.Acknowledgements :The E-F\[amework in its present form is theresulL of the joint effort of Eurotra' sframework group, of which the authors aremembers.
I f, however, there are anymisrepresentations in this presentation,only we ~re to be blamed~We are particularly indebted to SergeiPerschke, who put forth the basic ideas ofthe E-Framework.We are g~ateful to Hanne Ruus, Uniw~rsity ofCopenhagen, for having scrutinized andcriticized the draft versions of our paper.Also, we want to thank our colleague BenteMaegaard for some useful cormments.59
