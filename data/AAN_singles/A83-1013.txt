HOW TO DRIVE A DATABASE FRONT DID USING GENERAL SEMANTIC INFORMATION~ Boguraev and K. Sparck JonesComputer Laborator~ U.iversity of  CambridKeCorn Exchange Street, Cambridge CB2 3QG, EnglandABSTRACTThis paper describes a f ront  end fo r  natura llanguage access to databases making extens ive  use o fgenera l ,  l~ .
domain- independent,  semanticinformation for question interpretation.
In theinterests of  por tab i l i ty ,  initial syntactic andsemantic processing of a question is carried outwithout  any re ference  to the database domain, anddomain-dependent operat ions  are conf ined  tosubsequent,  comparat ive ly  s t ra ight fo rward .process ing  o?
the initial i n te rpretat ion .
Thed i f fe rent  modules o f  the f ront  end are descr ibed ,  andthe system's performance i s  illustrated by examples.I I~TRODUC'TIONFollowing the developmemt 0?
various front endsfor natural language access to databases, it is nowgenerally agreed that such a front end must utillseat leas t  three  d i f fe rent  k inds  o f  knowledge toaccomplish its task: linguistic k~owledge, knowledgeo f  the domain o f  d i scourse ,  and knowledge o f  theorganlsational structure of the database.
Thusbroadly speaking, a user request to the database goesthrough three conceptually different forms: theoutput  of linguistic analysis o?
the question, itsrepresentation in terms of the domain's conceptualschema, and its interpretation in the databaseaccess language.
Ear ly  natura l  language front endsusua l ly  d id  not have a c learcut  separat ion  betweenthe different stages of the process: for exampleLUNAR (Woods 1972) merged the domain model and thedatabase model into one, and systems such as theearly incarnation of LADDER (Hendrix et al1978) andPLANES (Waltz 1978) made heavy use of semanticgrammars with their domain-dependent lexiconsccmbinin8 l ingu is t i c  kncwledge with domain knowledgeand so merging the first two stages.
None 0?
thesesystems, moreover, made any significant use of~eneral, as opposed to domain-specific, semanticinformation.In an attempt to achieve portability from onedatabase to another, mcst current systems adhere to a~eneral framework (Konolige 1979), which makes aclear distinction between the different processingphases and distinguishes the domain-dependent fromthe domaln-independent parts of the front end, andalso domain operations from database managementcperatlons.
However semantic processing is stillThis work is supported by the U.K. Science andEngineering Research Council.8tessent ia l l y  d r iven  by domain-dependent semantics.Linguistic processing is therefore primarilysyntactic parsing, and relating general linguisticto specific domain knowledge within the framework ofa modular f ront  end takes the form o f  app ly ingdomain-dependent semantic processing to the outputof  the syntactic parser.
This may be done in aslmple, minded way as in PHLIQAI (Bronnenberg et al1979) and T~ (Damerau 1980), or  by prov id ing  hooksin the syntactic representation (domain-independentcalls to semantic operators which will evaluatedifferently in  dl?ferent contexts), as in DIALOGIC(Grosz et ai 1982).
In either case the usual unhappyconsequence o?
separating syntactic and semanticprocessing, namely the hassle of manipulatingalternative syntactic trees, follows.
Furthermore,changlngdomalns implies changing the definitions ofthe semantic operators, which are procedural innature, while it may be preferable to keep thedomain-dependent par ts  o f  the f ront  end indec la ra t ive  form, as i s  indeed done in (Warren andPere i ra  1981).Thus in systems of this by now conventional type,the 'portability' achieved by confining the necessarydomain-dependent semantic processing to well-defined modules is purchased at the heavy price oflimiting the early linguistic processing to syntax,and, perhaps, some very global and undiscriminatingsemantics (see for example the sccping algorithm of(Grosz et al 1982)).II SPECIFIC APPROACHOur objective is to do better than this by makingmore use of powerful, but still non-domain-dependentsemantics in the front-end linguistic analysis.Doing th i s  should have two advantages: res t ra in ingsyntax,  and prov id ing  a good p la t fo rm for  domain-dependent semantic processing.
However, the overallarchitecture of the front end still follows theKonolige model in maintaining a clearcut separationbetween the different k inds  of knowledge to beutilised, keeping the bulk of the domain-dependentknowledge in declarative form, and attempting tominimlse the consequences of changes in the frontend environmant, whether of domain or database model,to promote s~ooth transfers cf the front end fromone back end database management system to another.We believe that there is a lot of mileage to begot from non-task-specific semantic analysis of userrequests, because their resulting rich, exp l ic i t ,  andncrmal ised meaning representat ions  are a ~ccdstarting point for subsequent task-specificoperations, and specificall~ are better than eithersyntax trees, or the actual input text of e.g.
thePLANES approach.
Furthermore, since the domain worldis (in some sense) a subset of the real world, it ispossible to interpret descriptions of it using thesame semantic apparatus  and representation languageas is used by the natural language analyser, whichshould allow easy and reliable linking of thenatural language input words, domain world objectsand re la t ionsh ips  and data language terms andexpress ions .
Since the connect ions  between these donot  appear hard -w i red  in the lex icon ,  but  areestablished on the basis of matching rich semanticpatterns, no changes at all should be required in thelexicon as the application moves from one domain ordatabase to another, only expansions to allow for thesemantic definitions of  new words relevant to thenew app l i ca t ion .The approach leads  to an overa l l  front endstructure as  follows:: English question :ANALYSISAna l~er  I '  1 -~i (uses linguistic knowledge) i: meaning representation :j Extractor 2(uses logico-linguistic knowledge) II: logic representation :TRANSLATION ,LL--~---- _ __~- -_  3: Translator(uses domain world knowledge) ,:$: query  representation :Convertor(uses database organisation~cwledge)  l$: search rePresentation :Each process in the diagram above operates cn theoutput of the previous one.
Processes I and 2constitute the analysis phase, and processes 3 and- the translation phase.
Such a system hasessentially been constructed, and is under activetest; a detailed acccunt cf its components andoperations follows.For the purposes of illustration we shall usequestions addressed to the Suppliers and Partsrelational database of (Date 1977).
This has threerelaticns with the following structure:Supplier(Snc, Shame, Status, Scity), Part(Pno, Pname,Colour, Weight, Pcity), and Shipments(Sno, Pnc,Quantity).82I I I  ANALYSISA.
The Anal)metThe natura l  language anal  l met has been descr ibedin deta i l  e lsewhere (Boguraev 1979), (Boguraev andSparck Jones 1982), and only a brief summary will bepresented here.
I t  has been designed as a genera lpurpose,  domain-  and task - independent  languageprocessor, driven by a fairly extensivellnguistlcally-motivated grammar and controlled inits operation by variegated application cf a richand powerful semantic apparatus .
Syntactically-controlled constituent identification is coupledwith the Judgemental application cf semanticspecialists: following the evaluation of thesemantic plausibility of the constituent at hand,the currently active processor either aborts theanalysis path or constructs a meaning representationfor the textual unit (noun phrase, ccmplementiSeroembedded clause, etc.)
for incorporation into anylarger semantic construct.
The philosophy behind theanal yser is that syntactlcally-drlven analysis(which is a major prerequisite for domain- and/ortask-independence) is made efficient by frequent andtimely calls to semantic specialists, which bothcontrol blind syntactic backtracking and constructmeaning representations for input text without goingthrough the potentiall y costly enumeration ofintermediate syntactic trees.
The analyser cantherefore operate smoothly in environments which aresyntactically or lexically hlghiy ambiguous.To achieve its objectives the program pursues apassive parsing strategy based on semantic patternmatching of the kind proposed by (Wilks 1975).
Thusthe semantic specialists work with a range ofpatterns referring to narrower or broader wordclasses, all defined using general semanticprimitives and ultimately depending on formulaewhich use the primitives to characterise individualword senses.
However the application of patterns inthe search for input text meaning is mcreeffectively controlled by syntax in this system thanin Wilks'.The par t i cu la r  advantages o f  the approach in thedatabase app l i ca t ion  context  are the power fu l  andf lex ib le  means o f  represent ing  l ingu is t i c  and worldknowledge prov ided by the semantic p r imi t ives ,  andthe ease wi th  which ' t raps  fo r  the unexpected'  can beprocedura l ly  encoded.
The la t te r  means that  thesystem can readily deal with the kinds cf problemsgenerated by unconstrained natural language textwhich provoke untoward 'ripple' effects when largesemantic grammars are mcdified.
The semanticprimitive foundatlcn for the analyser provides agood base fcr the whole front end, since theccmprehensive inventory cf primitives can beexp lo i ted  to character i se  both natura l  language anddata language terms and expressions, and toreconcile the user's view of the database domain withthe actual administrative organisaticn of thedatabase.For present  purposes,  the form and ccntent  c f  theoutputs  o f  the natura l  language ana lyser  are moreimpor tant  than the means by which they are der ived( fo r  these see Boguraev and Sparck Jones 1982).
Themeaning representat ions  output  by the ana lyser  aredependency structures with clusters of case- labe l ledcomponents centred around main verb or nounelements.
Apart from the structure of the dependencytree itself, and group identifying markers like 'ins'and 'modallty', the substantive information in themeaning representation is provided by the casel abe ls ,  which are  drawn from a la rge  set  of  semant icrelation primitives forming part of the overallinventory of primitives, and by the semanticcategory primitive characterisations of lexically-derived items.The formulae charaoterislng word senses may bequite rich.
The fairly straightforwardcharacter i sa t ion  o f  ' supp l ie r1 ' ,  represent ing  onesense o f  "supp l ie r "  is(Supp l ie r  .
.
.
( supp l ie r  1(~(ee~t obJe) give) (subJ CorK)) .
.
. )
,meaning approx imate ly  that  some sor t  of organ isat ton(which may reduce to an ind iv idua l )  g ives  ent i t ies .The meaning representat ion  fo r  the whole sentence"Suppliers live in cities" (with the formulae fori nd iv idua l  un i t s  abbrev ia ted ,  for  space reasons ,  tothe i r  head pr imi t ives )  i s( el ause .
.
.
.
.
.
.
.
(v( l i ve l  .
.
.
beI @@agent (n ( supp l ie r l  .
.
.
am)) )  ee~oca~ion (n (c i ty2  ... spread) ) ) ) ) ) ,where ~ and @locat ion are case labe ls .
"Theparts are co loured red" will be analysed as( e l  ause .
.
.
.
.
.
(v(be2 .
.
.
beth in  in tpar t l  .
.
.
mennK)))yl (@@number(@~state~:~ <co lour l  ... s ign)(va l  (red1 ... sense) ) ) ) ) ) ) ,and "Who supp l ies  green parts?"
w i l l  g ive  r i se  tothe structure:(clause ... (type question)(v(supplyl ... 81ve(@@agent (n (query (d~y) ) ) )~race  (clause V agent ) )(c lause(v(be2 .
.
.
be(@@@gent?n <part l  .
.
.
~ InS) ) )(@@state (st  (eo lour l  .
.
.
sign)(gr, eenl .
.
.
,tsee ~.se) ) ) ) ) ) ) ) ) ) ) ) ) .As these examples sho~ the anal yser'srepresentations combine expressive power withstructural simplicity.
Further, the power of thesemantic category primitives used to identify textmessage patterns means that it is possible toachieve far mcre semantic analysis cf a question, farearlier in the frcnt end processing, than can beachieved with frcnt ends conforming tc the Koncllgemodel.
The effectiveness cf the anal yser as a generalnatural-language prccesslng device has beendemcnstrated by its successful application to arange o f  natura l  language process ing  tasks .
There i s ,however, a p r i ce  to pay, in the database context ,  fo ri t s  genera l i ty .
Natura l  language makes ocn=acn use o fvague concepts ( "have" ,  "do" ) ,  a lmost content -emptymarkers ("be e, "o f " ) ,  and opaque const ruct ions  suchas compound nouns.
C lear l~  f ront  ends where domain-spec i f i c  in fo rmat ion  can prov ide  leverage ini n te rpret ing  these input  text  i tems have advantages.and i t  i s  not c lear  how a pr inc ip led  so lu t ion  to theproblems they present  can be achieved w i th in  theframework o f  a genera l -purpose  anal yser o f  the kinddescr ibed .
To prov ide  a domain -spec i f i cin terpretat ion  of, for example, compounds like"supp l ie r  c i ty" ,  an in ter face  would have to beprov ided oharaeter i s ing  domain k~owledge in thesemantic terms fami l ia r  to the parser ,  andguarantee ing  the prov is ion  o f  exp l i c i t  s t ruc tura lcharaoterlsations of the text constituent whichwould be ava i lab le  fo r  fu r ther  exp lo i ta t ion  by theparser.To avoid  invok ing  domain knowledge in th i s  way inana lys i s  we have been ob l iged  to accept quest icnin terpretat ions  which are incomplete in l im i tedrespects .
That is, we push the ord inary  semanticana lys i s  procedures as fa r  as they w i l l  go, accept ingthat  they  may leave 'dummy' markers in the dependencystructure and compound nominals with ambiguousmember words and no explicit extracted structure.B.
The Ext rac torn i le  the meaning representat ions  const ructed  bythe natura l  language ana lyser  are genera l  andin fo rmat ive  enough to be able to support  dlfferenttasks  in d i f fe rent  app l i ca t ions  fo r  d i f fe rentdomains, they  are not necessar i l y  the best fcrm cfrepresentat ion  for  quest ion  answering, andspec i f i ca l ly  for address ing a coded database.
Afterthe initial determination of question meaning.there fore ,  the quest ion  i s  subjected to task -o r iented ,  though not yet domain- and database-o r iented ,  process ing.
Imposing domain world anddatabase organ isat lon  res t r i c t ions  on the quest ionat  this stage would be premature, since it cculdecmplloate or even inhibit possible later inferenceoperations.
The idea cf providing a system ccmponentaddress ing a genera l  linguistic task, withcutthrowing away any detailed information not in factneeded for scme specific instance cf that task, likenatural language distinctions between quantifiersignored by the database system, is  a lso  an a t t rac t iveone.The extractor thus emphasises the fact that theinput text is a questicn, but carries the detailedsemantic information provided by the analyserforward fcr exploitation in the translation phase cfthe process ing.A gccd way to achieve a question formulationabstracted from the low-level crganisaticn cf thedatabase is to interpret the user's input as a formalquer~ However our extractor, unlike the equivalentprocessors described by (Wocds 1972).
(Warren andPereira 1981) and (Grcsz et al1982), does not makeany use cf domain-dependent in f c rmat icn ,  butconstructs a icgic expression whose variable rangesand pred icate  relaticnships are defined in terms cf83the general semantic primitives used forccnstructlng the input question meaningrepresentation.
The logic representation of thequestion which is output by the extractor highlightsthe search aspects cf the input, formalising them sothat the subsequent processes which will eventuallygenerate the search specification for the databasemanagement system can locate and focus on themeasily; at the same time, the semantic richness ofthe original meaning representation is maintained tofacilitate the later domain-crlented translationoperations.The syntax of the logic representation closelyfo l l c~ that defined by (Wocds 1978):(For <quantifier> <variable> / <range>: <restrictions on variable>- <prcpcslticn> ),where each cf the restrictions, or the proposition,can themselves be quantified expressions.
Therationale for such quantified expressions as mediafor questions addressed towards an abstract databasehas been discussed by Woods.
As we accept this, wehave developed a transformation procedure whichtakes the meaning representation of an inputquestion and ccnstructs a corresponding logicrepresentation in the form just described.
Thus forthe question "Who supplies green parts?"
analysed inSection A, we obtain(For Every SVarl / query: (For Every $Var2 / part1: ( cc lour l  $Var2 8reenl)- ( supp ly1SVar l  SVar2))(D isp lay  SVar l ) ) .where the lexically-derived items indicating theranges of the quantified variables ('query', 'part1'),the relationships between the variables ('supply1')and the predicates and predicate values ('cclcur1','green I') in fact carry along wltb them theirsemantic formulae: these are omitted here, and in therest cf  the paper, to save space.The extractor is geared to seek, in the analyser'sdependent y structures, the simple prc positicns(atomic predications) which make up the logicrepresentaticn.
Follcwing the phi lcscphy cf thesemantic thecry underlying the analyser design,these simple prcpositicns are identified wlth thebasic messages, i.e.
semantic patterns, which drivethe parser and are expressed in the meaningrepresentations it produces as verb and noun groupclusters of case-related elements.
In order to'unpack' these, the extractor iccks for the sourcescf atomic predicates as 'SVO' triples, identifiableby a verb (cr ncun) and its case rcle fillers, whichcan be extracted quite naturally in astraightforward way from the dependency structure.Depending bcth cn the semantic characterisaticncf the verb and its case arguments, and cn thesemantic context as defined by the dependency tree,the triples are categcrised as belcnging to cne cftwo types: \[$ObJ SLink $ObJ\].
or \[$Obj SPoss SPrcp\].where the $Obj, SLink.
or $Prcp items are furthercharacterised in semantic terms.
It is clear that the'basic messages' that the extractor seeks to identifyas a preliminary step tc ccnstructing the logicrepresentation define either primitiverelationships between objects, cr properties ofthose same cb jec ts .
Thus the meaning representat ionfor  "par t  supp l ie rs"  will be unpicked as a 'dummy'relationship between "suppliers" and "parts", i.e.
as\[$ObJ1(supplierl) $Link1(dummy) $Obj2(partl)\].while "green parts" will be interpreted as\ [$Ob j2(par t  1) $Poss(be2) SProp(co lour l  =green 1) \ ] .Larger constructs can be similarly deocmpcsed: thus"Where do the status 32 red parts suppliers live?
"will be broken down into the following set oftriples:\ [$Ob J l ( supp l ie r l )  SL ink l ( l i ve l )  $ObJS(query)\]& \ [$Ob j l ( supp l ie r l )  SLink2(dummy) $Ob~2(par t l ) \ ]& \ [$Ob j l ( supp l ie r l )  SPossl(be2) $Prcp l ( s ta tus=32)  \]& \ [$Ob j2(par t l )  SPcss2(be2) $Prcp2(cc lcur l=red l ) J .I t  must be empbasised that  wh i le  there are para l le l sbetween these s t ruc tures  and those of  the ent i ty -a t t r ibute  approach to data mode l l ing ,  the forms c ftriple were chosen without any reference todatabases.
As noted earlier, they naturally reflectthe form of the 'atomic propositions', i.e.
basicmessages, used as semantic patterns by the naturallanguage anal yser.For completeness, the triples underlying theearlier question "Who supplies green parts?"
are\[$Obj1(query=identity)$L lnk l ( supp ly l )  $Ob32(partl)\]& \ [$Obj2(par t  1)$Possl(be2) $Prcp l (cc lcur l=green l ) \ ]The sets cf interconnected triples are derivedfrom the meaning representations by a fairly simplerecursive prccedure.
The next stage o~ theextraction process restructures the triples treeinto a skeleton quantified structure, the icgicrepresentation, to be passed fcrward tc thetranslator generating the formal queryrepresentaticn.
Whenever mcre explicit informationregarding the interpretat ion of the input as aquestion can be extracted frcm the meaningrepresentaticn, this is inccrpcrated into the logicrepresentation.
Thus the processing includesidentification and sccping of quantifiers followingthe approach adopted by Wccds, and es tab l i sh ing  theaspect, mcdaiity and focus cf the questicn.
Likeanyone e lse,  we do not c la im tc prov ide  accmprehensive treatment cf natura l  languagequantifiers, and indeed in practice have notimplemented prccesses for all the quantifiershandled by LUNAR.The icgic representaticn defines the logicalcontent and structure cf the information the user isseeking.
It may, as ncted, be inccmplete at pcintswhere domain reference is required, e.g.
in theinterpretation cf compound ~cuns; but it carriesalong, tc the translator, the very large amcunt cfsemantic information provided by the case labels andformulae of  the meaning representation, which shouldbe adequate to pinpoint the items sought by the userand tc describe them in terms suited to the databasemanagement system, so they may be accessed andretrieved.84IV TRAMSLATIOMA.
The translatorIn the process of transforming the semanticcontent of the user's question into a low-levelsearch representation geared to the administrativestructure of the target database, it is necessary toreconcile the user's view of the world with thedomain model.
Before even attempting to construct,Say, a re la t iona l  a lgebra  express ion  to beinterpreted by the back-end database managementsystem, we must try to interpret the semantic contentof the loKlc representation with reference to these~emt cr variant of the real world modelled by thedatabase.An obvious possibility here is to proceeddirectly from the variables and predications of  theIcglc representation to their database counterparts.For example,( su~p.lyl (give)svar l / supp l ie r l  (B in)  SVar2 /par t l  ( t~t~) )can be mapped d i rec t ly  onto a re la t ion  Shipments inthe Supp l ie rs  and Parts database.
The mapping couldbe established by reference to the lexicon and to aschedule of  equivalences between logical anddatabase structures.This approach suffers, however, from severeproblems: the most important is that end users do notnecessarily constrain their natural language to ahighly limited vocabulary.
Even in the simplecontext of the ~,ppliers and Parts database, it ispossible to refer to "firms", "goods", "buyers","sellers", "provisions", "customers", etc.
In fact, itwas precisely in order  to b r ing  variants under acommon denominator that semantic grammars wereemployed.
We, in contrast, have a more powerful,because more flexible, semantic apparatus at ourd isposa l ,  capable of drawing out the similaritiesbetween "firms", "sellers", and "suppllers", asopposed to taking them as read.
Thus a generalsemantic pattern which will match the dictionarydefinitions cf all of these words is (((neat obJm)give) (~b J  |org) ).
Furthermore, if instead ofattempting to define any sort of direct mappingbetween the natural language terms and expressionsof the user and corresponding domain terms andexpressions, we concentrate on finding the commonlinks between them, we can see that even though thedomain and, in turn,  database terms and express ion=may not mean exactly the same as their naturallanguage relatives or sources, we should be able todetect overlaps in their semantic characterlsatlons.It is unlikely that the same cr similar words will beused in both natural and data languages if theirmeanings have ncth ing in ccmmcn, even i f  they are notident ica l ,  so character i s ing  each using the samerepertoire of semantic primitives shculd serve toestablish the link~ between the two.
Thus, forexample, one sense o f  the natura l  language word"iccaticn" will have the formula (this (wherespread) ) and the data language word "&c i ty"referring to the domain object &city will have theformula (((man fo lk )  wrap) (wl~re spread) ) ,  whichcan be connected by the common constituent (~respread) .85One d is t inc t ive  feature  o f  our f ront  end des ign,the use o f  genera l  semantics fo r  in i t ia l  quest ionin terpretat ion ,  iS thus  connected  w i th  ancther :  themore s t r ingent  requ i rements  imposed on natura llanKusge to data language t rans la t ion  by the in i t ia lunconst ra ined  quest ion  in terpretat ion  can be met byexp lo i t ing  the resources  fo r  language meaningrepresentat ion  in i t ia l l y  u t i l i sed  fo r  the natura llanguage quest ion  in terpretat ion .
We def ine  thedomain world model led by the database using the samesemantic apparatus  as the one used by the natura llanguage f ront  end processor ,  and invoke a f lex ib leand soph is t i ca ted  semantic pat tern  marcher tces tab l i sh  the connect ion between the semanticcontent  o f  the  user  quest ion  (which i s  car r ied  overin  the log ic  representat ion)  and re la ted  ccncepts inthe domain wor ld.
Taking the next  step from a domainwor ld  concept or re la t ionsh ip  between domain worldob Jants  to the i r  d i rec t  model in the  admin is t ra t ives t ructure  o f  the database is  then re la t ive ly  easy.Since the domain wor ld  i s  essent ia l l y  a c losedwor ld  res t r i c ted  in sets  i f  not  in the i r  members, i tis possible to describe it in terms of a limited setof concepts and relationships: we have possibleproperties of objects and potential relationshipsbetween them.
We can talk about &suppliers and &partsand the important relationship between them, namelythat &suppliers &supply &parts.
We can also specifythat &suppliers &llve in &cities, &parts can be&n,-bered, and so on.We can thus utillse, either explicitly orimplicitly, a description of the domain world whichcould be represented by dependency structures llkethose used for natura l  language.
The important  pointabout these is the way they express the semanticcontent of whole statememts about the domain, ratherthan the way they label individual domaln-referrlngterms as, e.g.
"&supplier" or "&part".
It is then easyto see how the logic representation for the question"What are the numbers of the status 30 suppliers?
",name1 y(For Every Syar l .
/ supp l le r l  : (statusl $Varl  30)- (Dlap~ay tnum~rl $Varl))),can be unpacked by semantic pattern matchingroutines to establish the ccnnecticn between"supp l ie r  1" and "&supp l ie r " ,  "number 1" and"&number", and so on.
In the same way the l cg icrepresentations for "From where does Blake operate?
"and "Where are screws found?"
can be analysed forsemantic content which will establish that "Blake"is a &supplier, "operate" in the context cf thedatabase domain means &supply, and "where" is a querymarker acting fcr &city from which the &supplierBlake &supplies (as opposed to street corner, bucketshop, or crafts market); similarly, "screW' is aninstance of &part and the cn ly  iccationalinformation associated with &parts in the databasein question is the &city where they are stored.
Allthis becomes clear simply by matching the underlyingsemantic primitive definitions of the naturallanguage and domain world words, in theirpropositional contexts.The translator is alac the module where domainreference is brought in tc complete theinterpretation cf the input question where thiscannot be fully interpreted by the analyser alcne.The semantic pattern-matchlnK potential cf thetranslation module can be exploited to determine thenature of the unresolved domain-specificpredications (both 'dummy' relationships and thoseimplicit in compound nominals), and vacuouslydefined objects ('query' variables).
Thus thefragment of logical form for "... London suppliers ofparts ..", namely(For <quant> $Varl/supplierl: (AND(For <quant> iVar2 /par t l- (dummy $Varl  $Var2))(For <quant> iYar3/London- (dummy SVarl SVar3) ) )i s  brcken down in to  the cor respond ing  domainpredications(&supply  $Var l (&supp l ie r )  $Var2(&par t ) )and(&live $Var1(&supplier) $Var3(&clty)),while translating the logic representation for theexample question "Who supplies green parts?"
givesthe query representation(For Every SVar l /&supp l le r: (For Every $Var2/&part: (&cclour iVar2Kreen)- (&supp ly  $Var l  SVar2))- (D isp lay  $Var l ) ) .Apart from the fact that semantic patternmatching seems to cope quite successfully withunexpected inputs ('unexpected' in the sense that inthe alternative approach nc mapping funct ion  wouldhave been defined for them, thus implying a failureto parse and/or  interpret the input question),having a general natural language analyser at ourdisposal offers an additional bonus: the descriptionof the domain world in terms of semantic primitivesand primitive patterns can be generated largelyautomatically, since the domain world can bedescribed in natural language (assuming, of course,an apprcpriate lexicon of domain world Words anddefinitions) and the descriptions simply analysed asutterances, producing a set of semantic structureswhich can subsequently be prccessed to cbtaln arepertoire of domain-relevant forms to be exploitedfcr the matching procedures.B.
The ConvertorHaving ident i f ied  the domain .
terms andexpress ions ,  we have a h igh- leve l  databaseequ iva lent  c f  the or ig ina l  Eng l i sh  quest ion .
Asubstantial amcunt cf processing has pinpointed thequestion focus, has eliminated potentialambiguities, has resolved domain-dependent languageccnstructicns, and has provided fillers for 'dummy'or 'query' items.
Further, the system has establishedthat "London" is a &city, for example, cr that"Clark" is a specific instance of &supplier.
Theprocessing now has to make the final transition tothe specific fcrm in which questions are addressedto the actual database management system.
Thesemantic patterns cn which the translator relies,for example defining a domain word "&supplier" as(((cent obje) give) (subJ IorK)), while adequateencugh tc deduce that Clark is a &supplier, are noti n fo rmat ive  enough to suggest how &supp l ie rs  aremodel led in the ac tua l  database.Again,  the  cbv ious  approach  to adopt  here  i s  themapping one, so that ,  fo r  i ns tance ,  we have:&supp l ie r  :=> re la t ion  Supp l ie rC la rk  ==>tup le  o f  re la t ion  Supp l ie rsuch that  Shames"Clark"But th i s  approach su f fe rs  from the same l imi ta t ionsas d i rec t  mapping from log ic  representat ion  tcsearch representat ion ;  and a mcre f lex ib le  apprcachusing the way the database mcdels the domain worldhas been adopted.In the previous section we discussed how thetranslator uses an inventory of semantic patterns toestab l i sh  the connect ion  between natura l  languageand domain wor ld words.
This  inventory  i s  not ,however, a f la t  s t ruc ture  with  no in terna lo rgan isat lon .
On the ccnt rar~ the semanticin fo rmat ion  about the domain wor ld  is  c rgan ised  insuch a way that  i t  can natura l ly  be assoc ia ted  w i ththe admin is t ra t ive  s t ruc ture  c f  the ta rget  database,For example in a re la t iona l  database,  a re la t ion  w i thtup les  over domains represents  proper t ies  o f .
c rrelationships between, the objects in the domainworld.
The objects, properties and relationships aredescribed by the semantic apparatus used for thetranslator, and as they also underlie, at not tocgreat remove, the database structure, the domainworld concepts or predications of the queryrepresentation act as pointers into the datastructures cf the database administrativecrganlsatlon.For example, given the relation supplier over thedomains S~ame, Snc.
Status and Scity.
the semanticpatterns which describe the facts that in the domainwor ld  &supp l ie rs  &have &status ,  &numbers, &names and&live in &cities are crcsslinked, in the sense thatthey have the superstructure cf the databaserelation .Supplier imposed over them.
We can thus usethem to avoid explicit mapping between query datareferences and template relaticnal structures forthe database.
From the initial meaningrepresentation for the question fragment "... Clark,who has status 30 ..." through to the queryrepresentation, the semantic pattern matching hasestablished that Clark is an instance cf &supplier,that the relationship between the generic &supplierand the specific instance of &supplier (i.e.
Clark)is that cf &name, and that the query is focussed cnhis &status (whose value is supplied explicitly).Now from the position of the query predication(&status &supplier 30) in the characterisaticn cfthe relaticn Supplier, the system will be able tcdeduce that the way the target databaseadministrative structure models the question'ssemantic ccntent is as a relation derived fromSupplier with "Clark" and "30" as values in thecolumns Shame and Status respectlvely.The convertor thus employs declarative knowledgeabout the database organisaticn and thecorrespondence between this and the domain worldstructure to derive a generalised relational algebraexpression which is an interpretation cf the formal86query in the context  o f  the re la t iona l  databasemodel o f  the domain.
We have chosen to gear theconver tor  towards a genera l l sed  re la t iona l  a lgebraexpress ion ,  because both  its simple under ly ingdefinition and the generality of its data structureswithin the relational model allow easy generat ion  offinal low-level search representations for differentspecific database access systems.To der ive  the genera l l sed  re la t iona l  a lgebra  formof the question from the query representation, theconver tor  uses i t s  k~owledge o f  the way domainobjects and predications are modelled in thedatabase to establish a primary or derivablere la t ion  for each of the'quantifled variables of thequery  representation.
These constituents of  thea lgebra  express ion  are then combined, with  anappropr ia te  sequence of re la t iona l  operators, toobta in  the  complete express ion .The basic premise of the convertor is that everyquantified variable in the formal representation canbe associated with some primary or computablerelation in the target database; restrictions on thequantified variables specify how, with that relationas a s tar t ing  point, fu r ther  re la t iona l  a lgebracomputations can be performed to mcdel therestricted variable; the process is recurslve, and asthe query representation is scanned by theconver tor ,  var iab les  and their assoc ia ted  re la t iona la lgebra  express ions  are bound by an 'environmemt-type' mechanism which provides all the necessaryi n fo rmat ion  to 'eva luate '  the propos i t ions  o f  thequer~ Thus ccnverslon is evaluating a predicateexpression in the context of its semantici n te rpretat ion  in the domain ~r ld  and theenvlronmemt of the database ?
models for itsvariables.For example, g iven the query representat ionfragment fo r  the phrase "... a l l  London supp l ie rs  whosupply  red parts .
. "
,  namely(For Every SVar l /&supp l ie r:(AND(For The $Var3/London - (& l ive  SVarl SVar3))(For Every SVar2/&part : (&cc lcur  SVar2 red)- (&supply $Var lSVar2) ) )  ....SVarl w i l l  i n i t ia l l y  be bound to the pr imaryrelation .Supplier, which will be subsequent lyres t r i c ted  to those tup les  Where Sct ty  is  equal to"London".
S lml la r l~  $Var2 w i l l  be assoc ia ted  with apartial relation derived from Part, fo r  which thevalue of Colcur is " red" .
Evaluating the prcposltion(&supply SVarl $Var2).
whose dcmain relationship Ismcdelled in the database by Shipments, will in theenvlrcnment of $Varl and SVar2 yield the relationalexpression(jcinI select .Suppller where Seity equals "London") j91n Shlpmen~s~select Part where Colcur equals "red"))).At this point, the information that the user wantshas been described in terms of the target relationaldatabase: names cf files, fields and columns.
Thesearch description has, however, still to be giventhe specific form required by the back-end databasemanagement system.
This is achieved by a fairlystraightforward app l i ca t ion  of standard ccmpllingtechniques, and does not deserve deta i led  discussicnhere.
At present we can generate searchspecifications in three different relational searchlanguages.
Thus the final form in the local searchlanguage Salt of the example question "Who suppliesgreen parts?"
islist (Part:Colour="green"?
(Supplier ?
Shipments))87V IMPLEMENTATIONAl l  o f  the modules have been implemented ( inLISP).
The conver tor  i s  at  present  res t r i c ted  tore la t iona l  databases,  and we would l i ke  to extend i tto o ther  models .
The system has so fa r  been tes ted  cnSupp l ie rs  and Par ts ,  which i s  a toy  database  from thepo int  o f  v iew o f  sca le  and complex i ty ,  but  which i srich enough to allow questions presenting challengestO the genera l  semantics approach to quest ionin terpretat ion .
To i l l us t ra te  the performance of  thef ront  end.
we show below the query  representat ionsand f ina l  search representat ions  fo r  some quest ionsaddressed to th i s  database.
Work is cur rent ly  inp rogress  to app ly  the f ront  end to a d i f fe rent( re la t iona l )  database conta in ing  p lann inginformation: this simulates IBM's TQA database(Damerau 1980).
Most of the work in this is likely tocome in writing the lexical entries needed for thenew vocabulary .
Longer term developments inc ludeva l idat ing  each step o f  the t rans la t ion  bygenerat ing  back in to  Engl ish,  and extend ing  thef ront  end, and spec i f i ca l ly  the t rans la tor ,  w i th  anin fe rence  engine.C lear ly .
in the longer  term, database f ront  endswill have to be prov ided with an in ferencecapab i l i ty .
As Konol ige po in ts  out ,  in a t tempt ing  tcinsu la te  users,  w i th  the i r  par t i cu la r  and var iedviews o f  the domain c f  d i scourse ,  from the actua ladmin is t ra t ive  organ isat lon  c f  the database,  i t  maybe necessary to do an arb i t ra ry  amcunt c finferenclng exploiting domain informaticn to connectthe user 's  quest ion  wi th  the database.
An obviousproblem ~r~th f ront  ends not c lear ly  separat ingd i f fe rent  process ing stages is  that  i t  may bed i f f i cu l t  to handle in fe rence  in a coherent  andccnt rc l led  way.
Inso far  as i n fe rence  is  p r imar i l ydomain-based, i t  seems natura l  in a modular f ront  endto prov ide  an in fe rence  capab i l i ty  as an extens ionof the translator.
This should serve bcth tc Iccaliaeinference operations and to facilitate them becausethey can work on the partially-processed inputquestion, However the inference engine requires anex pllclt and well-crganised domain model, andspecifically one which is rather more comprehensivethan current data models, or than the rather infcrmalnonce ptual schema we have used tc dr i ve thetranslator.We hope to begin work on providing an inferencecapability in the near future, but it has to bereccgnised that  even for the restricted task cfdatabase access, it may prove impossible to confineinference operations to a single mcdule: dcing sowould imply, for example, that compound nouns willgenerally only be partly interpreted in the analysisand extraction phases.
Starting with inferencelimited to the translation mcdule is thereforeprimarily a research strategy for tackling theinference prcblem.?
Green parts are supplied by which suppliers?+ query representation:(For_Every  $Var l /&supp l ie r:trot ~very SVar2/&part : (&colour SOar2 green)- (&supp ly  SOar1 SOar2))-(Display SOar1 ))?
search representation in ~uel:Range of Ol-varl is PartRange cf Ql-vsr2 is SupplierRange cf Ol-var3 is ShipmentsRetrieve i n to  Terminal (Ql -var2.Sname)where (O l -var l .Pnc  = Ql-varS.Pno)and (O l -var2 .Sn?
= Q l -var3 .Snc)and (Ql-varl.CoAcur : "green")?
F rcm where does Blake operate?+ query representation:(For The SVar2 /&c i ty: (For  The SVar l /B lake  - (& l ive  SOar1 SOar2))- (D isp lay  SOar2 ))+ search representat ion  in (~Jel:Range cf (Ql-varl) is (Supplier)Retrieve into Terminal (Ol-var1.Seity)where (Ol-varl.Sname : "Blake")?
What is the status of the Paris par t  supplierswho supply blue parts??
query representation:(For Every $Var l /&supp l ie r:(ANDFor Some SVar2/&part  - (&supply SOar1 SOar2))For The SVar3 /Par i s  - (& l ive  SOar1 SOar3))For Every SVarU/&part:(&cclour $Var~ blue)- (&supp ly  SOar1 $Varq) ) )-(Display (&atatus SOar1) ))+ search representation in Ouel:Range of Ql-varl is PartRange cf Ql-var2 is SupplierRange cf Ol-var3 is ShipmentsRetrieve into Terminal (Ql-var2.Status)where (Ol-var1.Pno = Ql-var3.Foo)and (Q l -var2 .Sno  Ql-var3.Snc)and (Ql-var2.Scity : "Paris")and (Ol-var1.Cclcur = "blue")VI CONCLUSIONThe project results so far suggest thatdeveloping a natural language front end tc databasesbased cn a general semantic anal yser whichconstructs rich and explicit meaning representationsoffers distinct advantages in at least two respects:it makes all subsequent prccessing cleaner thanwould be the case with a representation dominated byccnventicnal syntax, and enhances portability byencouraging the declarative description cf domain-specific ~ncwledge.VII REFERENCESBoguraev, EK.
"Automatic resolution of linguisticambigulties", Technical Report No.11, ComputerLaboratory, University of Cambridge, 1979.Boguraev, B.K.
and Sparck Jones, K. "A naturallanguage anal  yser fo r  database access" ,Information Technology: Research and Development,1, 23-39, 1982.Bronnenberg, W.j.H.J.
et  a l .
"The quest ion  answer ingsystem PHLIQAI", in Natura l  language quest i cnanswerln~ systems (Ed.
BOle), L~ndon: Macmillan.1979.Damerau.
F.J. "The transformational questionanswering (TQA) system: description, operatingexperience, and implications", Report RC8287, IBMThomas J. Watson Research Center, YorktownHeights, N.Y.. 1980.Date, C.J.
An introduction to database s~rstems,Reading, Mass.
: Addison-Wesley, 1977.Grcsz~ B. et al "DIALOGTC: a core natural-languageprocessing system", in  Proceedings cf the NinthInternational Conference on ComputationalLinguistics, Prague, 1982.Hendrix, D.G.
et ai.
"Developing a natural languageinterface to complex data", ACM Transactions cnDatabase Systems, 3, 105-147, 1978.Konolige \]L "A framework for a portable natural-language inter face to large data bases",Technical Note 197, Artificial IntelligenceCenter, SRI I n ternat iona l .
1979.Waltz, IX "An English language question answeringsystem for a large relational database" ,Communications cf the ACM, 21, 526-539, 1978.Warren, D.H.D.
and Pereira, F.C.N.
"An efficient easilyadaptab le  system for interpreting naturallanguage queries", Research Paper 155, Departmentcf Artificial Intelligence, University cfEdinburgh, 1981.Wilks, Y.
"An intelligent anall~ser and understandercf English", Communications cf the ACM, 18, 26~-27~, 1975.Wccds, WJ.
"The lunar  sc iences natura l  languageinformation system", Final Report, Bolt, Beranekand Newman Inc.. Cambridge, Mass., 1972.Woods, W.A.
"Semantics and quantification in naturallanguage question answering", Advances inComputers, 17, 1-87, 1978.88
