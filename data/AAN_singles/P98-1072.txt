Semantic-Head Based Resolution of Scopal Ambiguities*BjSrn Gamb/ickInformation and Computational LinguisticsLanguage Engineering University of HelsinkiSICS, Box 1263 P.O.
Box 4S-164 29 Kista, Sweden SF-00014 Helsinki, Finlandgamback@sics, seJohan BosComputational LinguisticsUniversity of the SaarlandPostfach 15 11 50D-66041 Saarbriicken, Germanybos?coli, uni- sb.
deAbst rac tWe introduce an algorithm for scope resolution inunderspecified semantic representations.
Scope pref-erences are suggested on the basis of semantic argu-ment structure.
The major novelty of this approachis that, while maintaining an (scopally) underspec-ified semantic representation, weat the same timesuggest a resolution possibility.
The algorithm hasbeen implemented and tested in a large-scale systemand fared quite well: 28% of the utterances wereambiguous, 80% of these were correctly interpreted,leaving errors in only 5.7% of the utterance set.1 In t roduct ionScopal ambiguities are problematic for languageprocessing systems; resolving them might leadto combinatorial explosion.
In applications liketransfer-based machine translation, resolutioncan be avoided if transfer takes place at a rep-resentational level encoding scopal ambiguities.The key idea is to have a common representa-tion for all the possible interpretations of an am-biguous expression, as in Alshawi et al (1991).Scopal ambiguities in the source language canthen carry over to the target language.
Recentresearch as termed this underspecification (seee.g., KSnig and Reyle (1997), Pinkal (1996)).A problem with underspecification is, how-ever, that structural restrictions are not en-coded.
Clear scope configurations (preferences)in the source language are easily lost:(1) das paflt auch nichtthat fits also not'that does not fit either'(2) ich kanni sie nicht verstehen ~iI can you not understand'I cannot understand you'* This work was funded by BMBF (German FederalMinistry of Education, Science, Research, and Technol-ogy) grant 01 IV 101 R. Thanks to Christian Lieske,Scott McGlashan, Yoshiki Mori, Manfred Pinkal, CJRupp, and Karsten Worm for many useful discussions.433In (1) the focus particle 'auch' outscopes thenegation 'nicht'.
The preferred reading in (2) isthe one where 'nicht' has scope over the modal'kann'.
In both cases, the syntactic configu-rational information for German supports thepreferred scoping: the operator with the widestscope is c-commanding the operator with nar-row scope.
Preserving the suggested scope res-olution restrictions from the source languagewould be necessary for a correct interpretation.However, the configurational restrictions do noteasily carry over to English; there is no verbmovement in the English sentence of (2), so 'not'does not c-command 'can' in this case.In this paper we focus on the underspecifi-cation of scope introduced by quantifying nounphrases, adverbs, and particles.
The representa-tions we will use resembles Underspecified Dis-course Representation Structures (Reyle, 1993)and Hole Semantics (Bos, 1996).Our Underspecified Semantic Representation,USR, is introduced in Section 2.
Section 3 showshow USRs are built up in a compositional se-mantics.
Section 4 is the main part of the paper.It introduces an algorithm in which structuralconstraints are used to resolve underspecifiedscope in USR structures.
Section 5 describes animplementation f the algorithm and evaluateshow well it fares on real dialogue examples.2 Underspec i f ied  Semant ics :  USRThe representation we will use, USR, is a ter-tiary term containing the following pieces of se-mantic information: a top label, a set of labeledconditions, and a set of constraints.
The condi-tions represent ordinary predicates, quantifiers,pronouns, operators, etc., all being uniquely la-beled, making it easier to refer to a particularcondition.
Scope (appearing in quantifiers andoperators) is represented in an underspecifiedway by variables ("holes") ranging over labels.Labels are written as ln, holes as hn, and vari-ables over individuals as in.
The labelling allowsus to state meta-level constraints on the rela-tions between conditions.
A constraint l < h isa relation between a label and a hole: 1 is eitherequal to or subordinated to h (the labeled con-dition is within the scope denoted by the hole).
(l l  ,(top){lldecl m/ / }12 : pron(il), 14 _< hi,13 : passen(i2,il), 15 _< hi,14 : auch(h2) ,  , 18 _< hl, )I~ : nicht(h3), Is _< h2,16 : group(12,13) 16 _< hs(conditions) (constraints)Figure 1: The USR for 'das patgt auch nicht'.Fig.
1 shows the USR for (1).
The top label 11introduces the entire structure and points to thedeclarative sentence mood operator, outscop-ing all other elements.
The pronoun 'das' ispron, marking unresolved anaphora.
'auch' and'nicht' are handled as operators.
The verb con-dition (passen) and its pronoun subject are inthe same scope unit, represented by a grouping.The first three constraints tate that neitherthe verb, nor the two particles outscope themood operator.
The last two put the verb in-formation in the scope of the particles.
(NB: norestrictions are placed on the particles' relativescope.)
Fig.
2 shows the subordination relations.l l :dec l (h l )14:auch(h2)~.~ <" < - " " h3)16: \[ 13:passen12:pron \]Figure 2: Scopal relations in the USR.A USR is interpreted with respect o a "plug-ging", a mapping from holes to labels (Bos,1996).
The number of readings the USR encodesequals the number of possible pluggings.
Here,two pluggings do not violate the _< constraints:/3/ }h I = 14, h2 = 15, h3 = 18 tls, h2=le, hs 14The plugging in (3) resembles the reading where'auch' outscopes 'nicht': the label for 'nicht', 15,is taken to "plug" the hole for 'auch', h2, while'auch' (14) is plugging the top hole of the sen-tence, hi.
In contrast, the plugging in (4) givesthe reading where the negation has wide scope.434With a plugging, a USR can be translatedto a Discourse Representation Structure, DRS(Kamp and Reyle, 1993): a pron condition in-troduces a discourse marker which should belinked to an antecedent, group is a merge be-tween DRSs, passen a one place predicate, etc.3 Const ruct ion  of  USRsIn addition to underspecification, we let twoother principles guide the semantic construc-tion: lexicalization (keep as much as possible ofthe semantics lexicalized) and compositionality(a phrase's interpretation is a function of its sub-phrases' interpretations).
The grammar rules al-low for addition of already manifest information(e.g., from the lexicon) and three ways of pass-ing non-manifest information (e.g., about com-plements ought): trivial composition, functor-argument and modifier-argument application.Trivial composition occurs in grammar uleswhich are semantically unary branching, i.e., thesemantics of at the most one of the daughter(right-hand side) nodes need to influence the in-terpretation of the mother (left-hand side) node.The application type rules appear on se-mantically binary branching rules: In functor-argument application the bulk of the semanticinformation is passed between the mother nodeand the functor (semantic head).
In modifier-argument application the argument is the se-mantic head, so most information is passed upfrom that.
(Most notably, the label identifyingthe entire structure will be the one of the headdaughter.
We will refer to it as the main label.
)The difference between the two applicationtypes pertains to the (semantic) subcategoriza-tion schemes: In functor-argument application(5), the functor subcategorizes for the argument,the argument may optionally subcategorize forthe functor, and the mother's ubcategorizationlist is the functor's, minus the argument:Mother(5) \[ main-label =~I.Functor (head) Argument (nonhead)main-label "main-label F \ ] ) \ ]In modifier-argument application (6), Modi-fier subcategorizes for Argument (only), whileArgument does not subcategorize for Modifier.Its subcat list is passed unchanged to Mother.Mother?
\[ subeat  ( )Modifier (nonhead) Argument (head)main- label  Label subeat (\[i\]) \] \[main-label4 A Reso lu t ion  A lgor i thmPrevious approaches to scopal resolution havemainly been treating the scopal constraints sep-arately from the rest of the semantic structureand argued that contextual information must betaken into account for correct resolution.
How-ever, the SRI Core Language Engine used astraight-forward approach (Moran and Pereira,1992).
Variables for the unresolved scoped wereasserted at the lexical level together with someconstraints on the resolution.
Constraints couldalso be added in grammar rules, albeit in asomewhat ad hoc manner.
Most of the sco-pal resolution constraints were, though, pro-vided by a separate knowledge-base pecifyingthe inter-relation of different scope-bearing op-erators.
The constraints were applied in a pro-cess subsequent to the semantic onstruction.4.1 Lexical ent r iesIn contrast, we want to be able to capturethe constraints already given by the function-argument structure of an utterance and providea possible resolution of the scopal ambiguities.This resolution should be built up during theconstruction of (the rest of) the semantic repre-sentation.
Thus we introduce a set of features(called holeinfo) on each grammatical category.On terminals, the features in this set will nor-mally have the values shown in (7), indicatingthat the category does not contain a hole (isa-hole has the value no), i.e., it is a nonscope-bearing element, sb-label, the semantic-headbased resolution label, is the label of the elementof the substructure below it having widest scope.In the lexicon, it is the entry's own main label.
(7) holeinfo isa-hole nohole noScope-bearing categories (quantifiers, parti-cles, etc.)
introduce holes and get the featuresetting of (8).
The feature hole points to thehole introduced.
(Finite verbs are also treatedthis way: they are assumed to introduce a holefor the scope of the sentence mood operator.
)435(8) holeinfo isa-hole yeshole Hole4.2 Grammar  rulesWhen the holeinfo information isbuilt up in theanalysis tree, the sb?labels are passed up as themain labels (i.e., from the semantic head daugh-ter to the mother node), unless the nonheaddaughter of a binary branching node containsa hole.
In that case, the hole is plugged withthe sb-label of the head daughter and the sb-label of the mother node is that of the nonheaddaughter.
The effect being that a scope-bearingnonhead aughter is given scope over the headdaughter.
On the top-most level of the gram-mar, the hole of the sentence mood operator isplugged with the sb-label of the full structure.Concretely, grammar rules of both applicationtypes pass holeinfo as follows.
If the nonheaddaughter does not contain a hole, holeinfo isunchanged from head daughter to mother node:Mother(9) \[ holeinfo \ [ \ ]  \] =?
"Head Nonhead\[holeinfo IS-I\] \ [ho le info \[ isa-hole no \]\]However, if the nonhead daughter does con-tain a hole, it is plugged with the sb-label of thehead daughter and the mother node gets its sb-label from the nonhead aughter.
The rest ofthe holeinfo still come from the head daughter:Motherisa-holeholeHeadsb-label H~adLabel"isa-holeholeNonheadisa-hole yeshole HoleThe hole to be plugged is here identified bythe hole feature of the nonhead daughter.
Toshow the preferred scopal resolution, a relation'Hole =sb HeadLabel', a semantic-head basedplugging, is introduced into the USR.4.3 Resolut ion ExampleWe will illustrate the rules with an example.The utterance (1) 'das pa?t auch nicht' has thesemantic argument structure shown in Fig.
3,where Node\[L, HI stands for the node Node hav-ing an sb-label L and hole feature value H.The verb passen is first applied to the subject'alas'.
The sb-label of 'passen' is its main label(the grouping label 16).
Its hole feature pointsto hi, the mood operator's scope unit.
The pro-noun contains no hole (is nonscope-bearing), sowe have the first case above, rule (9), in whichthe mother node's holeinfo is identical to thatof the head daughter, as indicated in the figure./ \ni  cht \[15,/h3\] ~S\[16 ,hi\]das\[12,no~assen\[16,hl \ ]Figure 3: Semantic argument structureNext, the modifier 'nicht' is applied to the ver-bal structure, giving the case with the nonheaddaughter containing a hole, rule (10).
For thishole we add a 'h3 =sb 16' to the USR: The la-bel plugging the hole is the sb-label of the headdaughter.
The sb-label of the resulting struc-ture is 15, the sb-label of the modifier.
The pro-cess is repeated for 'auch' so that its hole, h2, isplugged with 15, the label of its argument.
Wehave reached the end of the analysis and hi, theremaining hole of the entire structure is pluggedby the structure's sb-label, which is now 14.
Intotal, three semantic-head based plugging con-straints are added to the USR in Fig.
1:(11) hi =sb 14, h2 =sb 15, 53 "=sb 16Giving a scope preference corresponding to theplugging (3), the reading with auch outscopingnicht, resulting in the correct interpretation.4.4 Coord inat ionSentence coordinations, discourse relation ad-verbs, and the like add a special case.
Thesecategories force the scopal elements of their sen-tential complements o be resolved locally, or inother words, introduce a new hole which shouldbe above the top holes of both complements.They get the lexical setting(12) holeinfo isa-hole islandhole HoleSo, isa-hole indicates which type of hole astructure contains.
The values are no, yes,and is land,  i s land  is used to override the ar-gument structure to produce a plugging where436the top holes of the sentential complements getplugged with their own sb-labels.
This compli-cates the implementation f rules (9) and (10)a bit; they must also account for the fact that adaughter node may carry an i s land  type hole.5 Implementat ion  and  Eva luat ionThe resolution algorithm described in Section 4has been implemented in Verbmobil, a systemwhich translates poken German and Japaneseinto English (Bub et al, 1997).
The under-specified semantic representation technique wehave used in this paper reflects the core seman-tic part of the Verbmobil Interface Term, VIT(Bos et al, 1998).
The aim of VIT is to de-scribe a consistent interface structure betweenthe different language analysis modules withinVerbmobil.
Thus, in contrast o our USR, VITis a representation that encodes all the linguisticinformation of an utterance; in addition to theUSR semantic structure of Sectiom 2, the Verb-mobil Interface Term contains prosodic, syntac-tic, and discourse related information.In order to evaluate the algorithm, the resultsof the pluggings obtained for four dialogues inthe Verbmobil test set were checked (Table 1).We only consider utterances for which theVITs contain more than two holes: The num-ber of scope-bearing operators is the number ofholes minus one.
Thus, a VIT with one hole onlytrivially contains the top hole of the utterance(i.e., the hole for the sentence mood predicate;introduced by the main verb).A VIT with two holes contains the top holeand the hole for one scope-taking element.
How-ever, the mood-predicate will always have scopeover the remaining proposition, so resolution isstill trivial.Table 1: Results of evaluationDial.
# # Correct utt.
/ # holesId.
Utt.
<2 3 4 >5B1 48 34 9/11 1/2 1/1 79B2 41 26 5/8 2/3 4/4 7387 48 36 7/8 0/1 3/3 83RHQ1 91 68 10/11 5/6 4/6 83Total 228 164 31/38 8/12 12/14 80The dialogues evaluated are identified as three of the"Blaubeuren" dialogues (B1, B2, and BT) and one ofthe "Reithinger-Herweg-Quantz" dialogues (RHQ1).These four together form the standard test-set for theGerman language modules of the Verbmobil system.For VITs with three or more holes, we havetrue ambiguities.
Column 3 gives the numberof utterances with no ambiguity (< 2 holes),the columns following look at the ambiguoussentences.
Most commonly the utterances con-tained one true ambiguity (3 holes, as in Fig.
2).Utterances with more than two ambiguities (> 5holes) are rare and have been grouped together.Even though the algorithm is fairly straight-forward, resolution based on semantic argumentstructure fares quite well.
Only 64 (28%) of the228 utterances are truely ambiguous (i.e., con-tain more than two holes).
The default scopingintroduced by the algorithm is the preferred onefor 80% of the ambiguous utterances, leaving er-rors in just 13 (5.7%) of the utterances overall.Looking closer at these cases, the reasons forthe failures divide as: the relative scope of twoparticles did not conform to the c-commandstructure assigned by syntax (one case); an in-definite noun phrase should have received widescope (3), or narrow scope (1); an adverb shouldhave had wide scope (3); combination of (amodal) verb movement and negated question(1); technical construction problem in VIT (4).The resolution algorithm has been imple-mented in Verbmobil in both the German se-mantic processing (Bos et al, 1996) and the(substantially smaller) Japanese one (Gamb~icket al, 1996).
Evaluating the performance ofthe resolution algorithm on the standard testsuite for the Japanese parts of Verbmobil (the"RDSI" reference dialogue), we found that only7 of the 36 sentences in the dialogue containedmore than two holes.
All but one of the ambi-guities were correctly resolved by the algorithm.Even though the number of sentences tested cer-tainly is too small to draw any real conclusionsfrom, the correctness rate still indicates that thealgorithm is applicable also to Japanese.6 Conc lus ionsWe have presented an algorithm for scope res-olution in underspecified semantic representa-tions.
Scope preferences are suggested on thebasis of semantic argument structure, lettingthe nonhead daughter node outscope the headdaughter in case both daughter nodes are scope-bearing.
The algorithm was evaluated on four"real-life" dialogues and fared quite well: about80% of the utterances containing scopal ambi-guities were correctly interpreted by the sug-gested resolution, leaving scopal resolution er-rors in only 5.7% of the overall utterances.The algorithm is computationally cheap andquite straight-forward, yet its predictions arerelatively accurate.
Our results indicate thatfor a practical system, more sophisticated ap-proaches to scopal resolution (i.e., based onthe relations between different scope-bearing el-ements and/or contextual information) will notadd much to the overall system performance.Re ferencesAlshawi H., D.M.
Carter, B. Gamb~ick, and M.Rayner.
1991.
Translation by quasi logical formtransfer.
Proc.
29th ACL, pp.
161-168, Universityof California, Berkeley.Bos J.
1996.
Predicate logic unplugged.
Proc.
lOthAmsterdam Colloquium, pp.
133-142, Universityof Amsterdam, Holland.Bos J., B. Gamb~ick, C. Lieske, Y. Mori, M. Pinkal,and K. Worm.
1996.
Compositional semantics inVerbmobil.
Proc.
16th COLING, vol.
1, pp.
131-136, Kcbenhavn, Denmark.Bos J., B. Buschbeck-Wolf, M. Dorna, and C.J.Rupp 1998.
Managing information at linguisticinterfaces.
Proc.
17th COLING and 36th A CL,Montreal, Canada.Bub T., W. Wahlster, and A. Waibel.
1997.
Verb-mobil: The combination ofdeep and shallow pro-cessing for spontaneous speech translation.
Proc.Int.
Conf.
on Acoustics, Speech and Signal Pro-cessing, pp.
71-74, Miinchen, Germany.Gamb~ick B., C. Lieske, and Y. Mori.
1996.
Under-specified Japanese semantics in a machine trans-lation system.
Proc.
11th Pacific Asia Conf.
onLanguage, Information and Computation, pp.
53-62, Seoul, Korea.Kamp H. and U. Reyle.
1993.
~rom Discourse toLogic.
Kluwer, Dordrecht, Holland.Kbnig E. and U. Reyle.
1997.
A general reason-ing scheme for underspecified representations.
InH.
J. Ohlbach and U. Reyle, eds, Logic and itsApplications.
Festschri~ for Dov Gabbay.
Part I.Kluwer, Dordrecht, Holland.Moran D.B.
and F.C.N.
Pereira.
1992.
Quanti-fier scoping.
In Alshawi H., ed.
The Core Lan-guage Engine.
The MIT Press, Cambridge, Mas-sachusetts, pp.
149-172.Pinkal M. 1996.
Radical underspecification.
Proc.lOth Amsterdam Colloquium, pp.
587-606, Uni-versity of Amsterdam, Holland.Reyle U.
1993.
Dealing with ambiguities by under-specification: Construction, representation a ddeduction.
Journal of Semantics, 10:123-179.437
