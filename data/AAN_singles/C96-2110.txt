Ident i fy ingthe Cod ing System and Languageof  On-l ine Documents  on the InternetGen-itiro KIKUINTT In format ion  and  Communicat ion  Systems Laborator ies1-2356 Take ,  Yokosuka-sh iKanagawa 238-03, JAPANkikui~nttnly, i sl.
ntt.
j pAbstractThis paper proposes a new algorithmthat simultaneously identifies the cod-ing system and language of a code stringfetched from the Internet, especiallyWorld-Wide Web.
The algorithm usesstatistic language models to select thecorrectly decoded string as well as to de-termine the language.
The proposed al-gorithm covers 9 languages and 11 cod-ing systems used in Eastern Asia andWestern Europe.
Experimental resultsshow that the level of accuracy of our al-gorithm is over 95% for 640 on-line doc-uments.1 IntroductionRecent advances in information infrastructurehave made an enormous number of on-line docu-ments accessible.
A notable example is the explo-sive growth of World-Wide Web(WWW) involv-ing more than 10 million documents.Accessing and using such a huge number of on-line documents require intelligent document pro-cessing such ~ content-based search, categoriza-tion, information extraction, and machine trans-lation.
Most of these processes assume that ~ doc-uments are correctly decoded and the language isknown.
For documents on the WWW, however,these assumptions do not hold.
This is becauseeach language community uses its own coding sys-tem which is optimal for internal communicationbut is not appropriate for exchanging informationwith those outside at community.A fundamental solution is to develop interna-tional standards for an internationalized codingsystem and language representation.
In fact, thereis active discussion on the international codingstandards(Yergeau et al, 1995)(Nicol, 1995)(Uni-code, 1994), and the language representationthe WWW(Unicode, 1994).
However, it will re-quire several years before most of the documentsare encoded into a unique well-defined coding sys-tem.A realistic approach, which also goes togetherwith the above 'fundamental' approach, is to de-velop a more intelligent module that can estimatewhich coding system and language used for eachon-line document on the current WWW.Automatic identification of the coding system isachieved in communities where a limited numberof coding systems are used.
For example, (Lunde,1993) presents an algorithm for Selecting one ofthree coding systems for Japanese texts (UJIS,SJIS, and JIS) The algorithm, however, is notapplicable to international domain where a lot ofother coding systems are potential candidates.Automatic language identification has been dis-cussed in the field of document processing.
Sev-eral statistic models have been tried includingusing the n-g~am of characters (Cavnar, 1994),diacritics and special characters (Beesley, 1988),and using the word unigram with heuristics (lien-rich, 1989).
Among these methods, the result by(Cavnar, 1994) shows the best accuracy over 95%.
(Giguet, 1995) achieved over 99% accuracy by us-ing a rule-based (i.e., non-statistic) method.These methods, however, cannot handle East-Asian languages, because they presuppose that in-put texts are easily segmented into words, whichdoes not hold true in these languages.
Anotherproblem is that it presupposes that the input doc-ument is correctly decoded.Sibun and Penelope (Penelope and Sibun, 1994)proposed a method of determining the languageof a text image.
The problem tackled by themis similar to ours, in the sense that the input isnot a unique character string but a string that po-tentially corresponds to several different characterstrings.
Their method, however, can not directlyapplied to our problem.This paper presents an algorithm that identi-fies the coding system and the language of a giventext.
The algorithm is an application of an auto-matic language identification using statistic lan-guage models.
It covers 11 coding systems and 13languages used in East-Asian countries as well asWestern-European countries.The next section describes the problem.
Section3 introduces our algorithm.
Se,ction 4 and Section6525 describes an example and the experimental re-suits respectively.Problems in Decoding andIdentifying Languages on theWWW2.1 Brief Explanation of CharacterCoding SystelnsIn a communications etwork, characters are rep-resented as numbers, or a sequence of numbers.A character coding system specifies the mappingbetween characters and numbers.
A coding sys-tem consists of a character set and an encodingS~\]te~ne.A character set is a set of characters collected torepresent texts in a certain language community.For example, JIS-X0208-1983 (referred to ms "JIScharacter set" in this paper) is a character set forencoding texts (mainly) in Japanese.
Each char-acter in a character set has a unique identificationnumber.
\[t should noticed that the same numbermay appear in different character sets.An encoding sdtema maps each element of acharacter set into a (sequence of) number(s) thatis used in communication networks.
The simplestencoding scheme directly uses the identificationnumber of a character set for communication.Some encoding schemes are designed to encodetexts that contain characters from two or morecharacter sets.
For example,the ncoding schemefor JIS coding system (ISO-2022-jp) uses escapesequences to indicate changes of character set inthe code string in the following way:1.
"ESC $ B" shows the beginning of J\[S char-acter set.2.
"ESC ( B" shows at the beginning of ASCIIcharacter set.2.2 Ambigu i ty  in Determhl lng  CharacterCoding SystemFor historical reasons, documents on the cur-rent WWW are encoded in various coding sys-tems.
For example, servers in Western-Europenormally use \[SO-8859-1 (ISO-LATIN~ 1), whereasmost UNIX servers in Japan encode text usingJapanese EUC (Extended Unix Code).
The prob-lem is that different coding systems are applicableto the same code-string.The fundamental solution is to have everyoneuse a unique coding system that can handle all thecharacters in the world.
ISO-2022 is one such cod-ing systems.
This system assigns a unique identi-fier to every registered character set in the worldand specifies escape sequences for switching onecharacter set to another.
Although most of thelocal coding systems in the world are 'compati-ble' with ISO-2022, many of them lack escape se-quences which are not necessary for choosing thecorrect character set in the local domain but arenecessary in the international domain.Therefore, the sender should give or the receivershould infer with what coding system the receivedcoded sequence is encoded.One approach is to transfer the name of thecoding system with the upper level protocols.
Forexample, the lnternet mail protocol can transferthe coding system with which the message is en-coded.
However, on the WWW, active discussionstill continues on the WWW as to how to deliverthe coding system.Another approach is to uncover the coding sys-tem from the received byte code string.
If thepotential candidates for the code system are lim-ited, the correct coding system may be inferred byusing simple pattern matching.
For example, thebyte code contains the pattern "ESC $ B" thenit must be encoded with IS()-2022 and includeJapanese characters.
IIowever, in internationaldomain, it is difficult or impossible to specify thecoding system with simple pattern matching.
Forexample, Japanese EUC and Korean EUC cannotbe discriminated by this simple method, becausemost of their code values overlap 1.In summary, a more sophisticated method is re-quired to identify the coding system from the con-tent of the code string.2.3 Ambigu i ty  in Determin ing  LanguageMost text processing systems have language-dependent components such a.s rules or dictionar-ies.
Thus, it is crucial to know in what languagethe target document is written in order to choosethe appropriate system or language specific rulesand dictionaries.If we restrict ourselves to HTML documents,then explicit language lagging, which representsthe language of the text body, will be introducedin a future version of HTML specifications.
This,however, does not handle multiple languages inone document.
Moreover, there are a lot of non-HTML documents on the WWW.If the character set used in the text is known,it might be good clue for identifying the lan-guage because some character sets strongly sug-gest which language(s) was used.
For example,if a document consists of characters in the J IScharacter set, the document must be written inJapanese.
However, this is not always the case.One re ,on  for this is that the character set of atext is sometimes ambiguous due to the.
decodingproblem described above.
Another reason is thatsome character sets are designed to cover multiplelanguages (e.g., ISO-8859-1 for several Western-European languages).
Sometimes a character setis used in a language that is not the primary candi-date suggested by the character set.
For example,a document containing only US-ASCII characters,tin detail see (\[,uncle, 1993).653which suggests the document is in English, maybe a German document in ASCII-format (e.g., 6is written as oe ).For this reason, it is necessary to identify thelanguage from the content of the given characterstring.3 Our  A lgor i thmOur basic idea is to use statistic language modelsto select the correctly decoded string as well as todetermine the language.
The idea comes from theobservation that a human can distinguish whetheror not a text is written in the language s/he canread.
If the text is judged to be written not in thelanguage the person can read, then it is writtenin another language or decoded with an incorrectcoding system.In our algorithm, the human intuition on hisfamiliar language is realized by a statistic-basedmodule which calculates how likely a text to befrom a specific language.3.1 The  Scope of  our  A lgor i thmThe current version of our algorithm can handlethe following 11 coding systems and 9 languages.?
coding systems7bit Cod ing  ISO 646 USA (ASCII), JISCode(ISO-2022-jp), KS C 5601-1992,GB 2312-80, ISO-2022-int8bit  Cod ing  ISO-8859-1,EUC-GB(Simplified Chinese), EUC-KS,EUC-JIS(UJIS), BIG5(Traditional Chi-nese), Shift MS(MS Kanji code)Ent i ty  Reference  wi th  ASCI Ientity references(e.g., 5 is represented as"&Ouml;") for the \[SO-8859 charactersdefined in HTML (or SGML) specifica-tions.
* languagesEuropean English, French, German, Span-ish, Italian, PortugueseEast  As ian Chinese, Korean, Japanese3.2 Out l ine  o f  the A lgor i thmOur algorithm consists of the following two majorsteps.Step 1 This step divides the given code stringinto East-Asian part (i.e., sub-strings con-sisting of East-Asian characters) and the rest(i.e., European) part.Step 2 This step decodes each part and identifiesits language(s).The following two subsections describe theabove two steps in detail.procedure xtract_ca.string(code-string)~ Loop 1For each csys in ca_coding_systemsdoif (ca_string(code-string, csys)) thenpush(get_ca_string( code-string, csys),ca_string_list)endifend## Loop 2For each csys sort_byjength(ea~string_list )do(score, lang) +-identify_language( ea_string )if (score > threshold) thenreturn (lang, ea_strinq)endifendreturn nilFigure 1: Extraction of Eastern-Asian characters.3.3 Div id ing Code-St r ingIf the give code string contains escape code se-quences defined in ISO-2022 or its variants, East-Asian character strings are easily extracted be-cause East-Asian characters are explicitly markedby escape sequences in the string.If the given code string does not contain suchescape sequences, the Eastern-Asian part is iden-tified by the procedure shown in Figure 1.
Theprocedure consists of the following two loops.?
Loop 1If a coding system is determined, it is easyto extract Eastern-Asian characters.
For ev-ery coding system that can handle Eastern-Asian characters, the first loop tries to ex-tract Eastern-Asian characters by using thecoding system.The function ea_str ing takes a code-stringand (the name of) a coding system.
It ex-tracts Eastern-Asian character-strings, pre-supposing that the given code string has beenencoded with the given coding system (csys).This function can be realized by simple pat-tern matching.
For example, if we presup-pose that the given code-string is encodedwith EUC-JIS, then the adjacent wo bytesthat match \[A1H-FEH\]{2}, a two byte se-quence whose values ranges from A1 to FE(in hexadecimal representation), correspondto a Japanese (or JIS) character.Table 1 shows examples of regular expressionpatterns in our system 22More information oll Eastern-Asian code valuesare availM)le in (Lunde, 1993)654Table 1: Patterns for Extracting Eastern-AsianCharacters (sample)Char-set (Coding) PatternGB (EUC-GB) \[A1-F~;\]{2}KS (EUC-KS) \[A1-FE\]{2}JIS (EUC-J\[S) \[A1-FF\]{2},8F\[A1-FE\]{2}BIG5 (Bigh) \[g 1-FE\] \[40-7E,A 1-FI';\]If a non-empty string is returned by ea_slring,it is decoded with the presupposed codingsystem and registered in ca_string_list.?
Loop 2The second loop tries to identify the lan-guage of each East--Asian character-string inca_string_list.Each Eastern-Asian string is passed to thelanguage identification routine in the descen-dent order of its Length.
The language iden-tification routine, described in Section 3.4,takes a character string and returns the mostlikely language and the score of likelihood.If the score is larger than a predeterminedthreshold, the loop terminates and returnsthe language and the score.If the score of every Eastern-Asian string doesnot exceed the threshold, then the loop re-turns nil, which indicates that no Eastern-Asian characters are involved in the codestring.After the Eastern-Asian part is identified, theremainder is classified into the European part.3.4 Ident i fy ing  the LanguageThe language of a text is identitied by the follow-ing three steps.1.
Selecting possible languages for the givencoding systemThe coding system (or the character set(s))of a text is loosely related to the language ofthe text.
For example, a document encodedwith US-ASCII is not written in Korean.
Wemade heuristic rules to map a coding systemto possible languages.2.
Calculating the 'likelihood' of the decodedstring for each language.For each language, this step calculates howlikely the decoded string is to be from thatlanguage by comparing the string with thestatistic model of the language.3.
Selecting the language with the highest like-lihoodThis step compares likelihood scores, then re-turns the language with the highest likelihoodscore.The second step is the most important.
Oursystem uses a unigram model }'or both Western-European languages and East-Asian languages,but the models for Western-European languagesand the models for the East-Asian languages havedifferent unigram units.3.4.1 L ike l ihood Score forWestern -European languagesIn order to distinguish Western-European lan-guages, we applied a method proposed by Cavnar(Cavnar, 1994).
We assign a class name for eachword.
The class name of a word longer than ncharacters is the concatenation of "X-" and thelast n characters of the word.
If the word is notlonger than n characters, the class name is theword itself.
For example, if n = 4, then classnames of "beautiful" and "the" are X-iful and therespectively.Let TEXT be the set of words in a text, thenthe likelihood of TEXT with regard to languageI is given as tile following P(7'EXT", l)= II P(c;, 0wETEXTwhere P(Cw, l) is the unigram probability of C~in language l , and (hw is the class name of theword w.P(C~, l) is estimated from text corpora in lan-guage I.3.4.2 L ike l ihood Score for East -As ianlanguagesAs compared with Western-European lan-guages, East-Asian languages have the followingproperties:1.
A large number of charactersEast-Asian languages use over 3,000 ideo-graphic or combined characters.
A charac-ter is normally encoded with two (or more)bytes.2.
No Explicit Word Boundariesin East-Asian languages, there are no explicitword delimiters (corresponding to spaces inEnglish) in a sentence.
We cannot use word-based language models.For East-Asian languages, we use a characterunigram, instead of a word unigram, to model alanguage.
Formally,r / r  ?
r T P(.
F xz, 0 1-\[charE'I'EXTwhere P(ehar, l) is the unigram probability ofchar in language l .4 ExampleSuppose the following code sequence is given tothe algorithm.655,.J-ISFigure 2: Decoded stringsb8c0 b8ec bcbl  cacc a4ce card cbal  0a496465 6e74 6966 7969 6e67 2074 6865 204c616e 6775 6167 650aThe string is first divided int Asian and Eu-ropean parts.
Since there is no escape sequence,which begins with " lb",  the procedure in Section3.3 is applied.The division procedure first tries to extractEastern-Asian characters from the given string.The first 14 bytes, from b8 to al, match with ev-ery pattern in Table 1.
This means that all thefour coding systems are potential candidates andthat they extract the same Asian character part.This part is decoded with each coding system.Result strings are shown in Figure 2.Next, the statistic-based language identificationis applied to each decoded string,Table 2 shows the score (=probabil ity) of eachcharacter as regards to the language that pro-duced the highest likelihood (i.e., average score).For example, the second column shows the score ofeach character as regards to Chinese (zho) whenthe input code string is decoded with EUC-GB.This implies that Chinese(zho) is the most likelylanguage if we presuppose the original string isencoded with EUC-GB.Table 2: Likelihood scores of characters of Asianpartchar.
SCORES(log prob.
)\[lang\](JIS) GB\[zho\] KS\[kor\] J\[S~pn\] BIG5\[zho\]1(~) -11.05 -15.51 -7.25 -12.622(~)  -11.15 -15.51 -7.86 -10.863(~I~) -8.47 -7.69 -8.68 -12.424(ZU) -11.45 -15.51 -7.71 -15.515(?3) -15.51 -15.51 -3.40 -7.50Ave.
-11.06 -14.39 -6.9 -12.64zho=Chinese, kor=Korean, jpn=J  apaneseThe bottom row shows that the highest aver-age score is obtained when the input is decodedwith EUC-J\[S and the language is Japanese(jpn).Since this score exceeds the threshold (-10), theEastern-Asian part is confirmed to be Japanesestring encoded with EUC-JIS.The remaining part is decoded into "Identify-ing the Language" and sent to European languageidentifier.
Table3 gives scores of tokens as regardsto three languages.Table 3: Likelihood scores of characters of Euro-pean partclass oftoken ..X-ying -7.45 -10.80 -10.80 ..the -3.11 -9.40 -7.21 ..X-uage -7.20 -10.80 -10.80 ..Ave. -5.9 -10.3 -9.60 ..SCORES(log prob.
)eng deu itaeng=English, deu=German, ita=Ital ianIn this table, English(eng) is the most plausiblelanguage for European part with sufficient score.The final result is easily obtained by combiningresults of the Asian and the European parts.5 Eva luat ion  and  D iscuss ion5.1 DataFor evaluation purposes, we collected a set of doc-uments on the WWW.
Each document was man-ually assigned a correct language name.
If a docu-ment contained more than one Western-Europeanlanguages, a language that covered more than80% of the document was chosen as the correctlanguage.
Documents without the correct lan-guage (i.e., documents without the unique mainlanguage) were discarded.
The same process wasapplied to East-Asian parts of documents.The remaining documents were divided into 700training documents and 640 test documents.5.2 Identifying Western-EuropeanlanguagesTable 4 shows the confusion matrix for theWestern-European language results.
The columnscorrespond to the outputs from the system, andthe rows correspond to the correct answers.
Thevalue of n is set to 4, which gives the fewest num-ber of errors for the training set.The error rate is 4.8%.
Error occurs when thedocument is not a normal text (e.g., computerprograms, a list of proper names or network ad-dresses, etc.
).The result shows that our method achievedthe level of correctness equivalent to the previousmethods that presuppose correctly decoded char-acter strings (Cavnar, 1994).5.3 Identifying East-Aslan languagesTable 5 shows the confusion matrix for the East-Asian language results.
The matrix shows thatthe system performs fairly well also for East-Asianlanguages.The error rate is 4.6%.
Most errors occur whenthe document includes only a few East-Asian char-acters.
There are many documents which are writ-ten mostly in English but only proper names, es-656Table 4: Confusion matrix for Western-European languagesdeu eng esl fra ita por ELSEdeu 51 2eng 178 1 6esl 1 23ffa 90ita 3 1por 6ELSE 1 8 1 70deu=German, eng=English, esl=Spanish, fra=Frenchita=ltalian, por= Portuguesepecially people names and organization names, arewritten in Asian characters.Table 5:guagesConfusion matrix for East-Asian lan-jpn kor zho EI,SEjpn 123 0 0 4kor 1 7 0 0zho 2 0 47 0ELSE 1 0 2 85.4 Dividing the Western-European partand the East-Asian partAs far ~ the above experiments are concerned,there is no confusion between Western-Europeanpart and the East-Asian part.6 Conc lus ionThis paper proposed an algorithm for simultane-ously identifying the coding system and the lan-guage of a given code-string.
It handles threeEast-Asian languages as well as six Western-European languages with a high level of accuracy.The algorithm uses statistic language models toselect the correctly decoded string ms well as todetermine the language.
Since the algorithm usesstatistic language models, it is robust and easilyextendible to other languages.The algorithm is implemented in a cross-lingualsearch engine for WWW pages which has a lan-guage index (i.e., WWW pages are indexed bytheir languages).We intend to elaborate the algorithm so that itcan identify languages in multi-lingual text, be-cause many documents on the WWW are multi-lingual.AcknowledgmentThe author express his g, atitude to YoshihikoIIaya,shi and Seiji Suzaki for the comments onan early version of the paper.
The comments byanonymous reviewers of Coling 96 helped to im-prove the paper.Re ferencesBeesley, Kenneth R., "Language Identifier: aComputer Program for Automatic Natural Lan-guage Identification ofOn-line 'l~xt", Languageat Crossroads: Proceedings of the 29th AnnualConference of the American rlkanslators Asso-ciation, October 1988, pp 47-54.Cavnar, William B. and Trenkle, John M., "N-gram Bmsed Text Categorization, Proceedingsof the Third Annual Symposium on DocumentAnalysis and Information Retrieval", April1994, pp 161 -169.Giguet, Emmanuel, "Multilingual Sentence Cat-egorization according to Language", Proceed-ings of the EACL95 SIGDAT Workshop, Octo-ber 1995.Henrich, Peter, "Language Identification for theAutomatic Grapheme-to-Phoneme Conversionof Foreign Words in a German Text-to-SpeechSystem", t'roceedings of Eurospeech 1989,September 1989, pp 220-223.Lunde, Ken, "Understanding Japanese Infor-mation Processing", O'Reilly and Associates,\[nc, 1993, Japanese translation "Nihongo~Joho-Shori" , April 1995Nieol, Gavin T., "The Mutiliungual World WideWeb"httpl//fuzine.mt.cs.cmu.edu/mlm/lycos_home.htmlSibun, Penelope, and Spitz, A.Lawrence, "Lan-guage Determination: Natural Language Pro-cessing from Scanned Document Images" Pro-ceedings of ANLP 94, October 1994, pp 15-21.Unicode Inc. "The Unicode Standard"http://www.stonehand.com/unicode/standard.htmlYergeau, F., Nicol, G., Adams, G., and Duerst,M., "Internationalization f the IlypertextMarkup Language", Internet Draft, draft-ietf-htmM18n-02.txt, November, 1995,.657
