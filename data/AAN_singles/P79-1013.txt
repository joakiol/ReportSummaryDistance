The Use of Ooject-Specl flc Knowledge in  Natural Language ProcessingMark H. BurstelnDepartment of Computer Science, Yale University1.
INTRODUCTIONit is widely reco~nlzed that the process ofunderstandln~ natural language texts cannot beaccomplished without  accessin~ mundane Knowledge aboutthe world \ [2 ,  4, 6, 7\].
That is, in order to resolveambiguities, form expectations, and make causalconnections between events, we must make use of allsorts of episodic, stereotypic and factual knowledge.In  this paper,  we are concerned with the way functionalknowledge of objects, and associations between objectscan be exploited in an understandln~ system.Consider the sentence(1)  Jonn opened the Oot t le  so he could pour the wine.Anyone read in~ this sentence makes assumptions aboutwhat happened which go far beyond what is stated.
Forexample, we assume without hesitation that the winebeln~ poured came from inside the bottle.
Although thisseems quite obvious, there are many otherinterpretations wnlcn are equa l ly  va l id .
Jonn could befillin~ the bottle rather than emptyln~ the wine out ofi t .
In fac t ,  it need not be t rue  that  the wine evercontacted the bottle.
There may have been some otherreason Jonn had to open the bottle first.
Yet, in theabsence of a larger context, some causal inferencemechanism forces us (as human understanders) to find thecommon interpretation in the process of connecting thesetwo events causally.In interpreting this sentence, we also rely on anunderstanding of what it means for a bottle to be"open" .
Only by usin~ Knowledge of what is poss ib lewhen a bot t le  I s  open are able we understand why Johnhad to  open the Pot t le  to  pour the wine out  o f  I t .Stron~ associations are at work here nelpin~ us to makethese connections.
A sentence such as(2) John closed the bottle and poured the wine.appears to be self contradictory only because we assumethat the wine was in the bottle before applyln~ ourknowledge of open and closed bottles to the situation.Only then do we realize that closing the bottle makes itimpossible to pour the wine.Now cons ider  the sentence(3) John turned on the faucet and filled his glass.When reading this, we immediately assume that Johnfilled his glass with water from the faucet.
Yet, notonly is water never mentioned in the sentence, there isnothing there to explicitly relate turning on the faucetand filling the glass.
The glass could conceivably befilled with milk from a carton.
However, in the absenceof some greater context which forces a differentinterpretation on us, we immediately assume that theglass is being filled with water from the faucet.Understanding each of these sentences requires that wemake use of associations we have In memory betweenoPJects and actions commonly InvolvlnE those objects, as?
This  wore was supported in  par t  by the AdvancedResearch Pro jec ts  Agency o f  the Department o f  Defenseand moni tored by the Of f i ce  o f  Naval Research undercont ra : t  N0001~-75-C-1111.well as relations between several different objects.This paper describes a computer program, OPUS (ObjectPrimitive Understanding System) which constructs arepresentation of the meanings of sentences such asthose above, including assumptions that  a humanunders tander  would normal ly  make, by access in~ thesetypes of associative memory structures.
Thisstereotypic knowledge of physical objects Is captured inOPUS using Object Primitives \[5\].
Object Prlmitlves(or) were designed to act in conjunction with Scnank'sconceptua l  dependency representat iona l  system \ [11 \ ] .
Theprocesses developed to  perform conceptua l  ana lys i s  inOPUS invo lved  the in tegrat ion  o f  a conceptua l  ana lyzers imi la r  to RlesOec~'s ELl \ [g \ ]  w i th  demon- l i ke  proceduresfor memory interaction and the introduction ofobject-related inferences.2.
OBJECT PRIMITIVESThe primary focus In this research has been on thedevelopment of processes which utillze I n fo rmat ionprov ided  by Ob ject  P r imi t ives  to  fac i l i ta te  the"comprehens ion"  o f  natura l  language texts  by computer .That Is, we were primarily concerned with thei n t roduct ion  of s tereotyp lc  knowledge of objects intothe conceptua l  ana lys i s  o f  text.
By encodingin format ion  in OP descr ip t ions ,  we were ab le  to increasethe interpretive power of the analyzer in order tohandle sentences of the sort discussed earlier.What fo l lows  I s  a br ie f  descr ip t ion  o f  the seven ObjectP r imi t ives .
A more thorough d iscuss ion  can be found in\[5\].
For those unfamiliar with the primitive acts ofSchank's conceptual dependency theory, discussions ofwnlch can be found in \[10,11\].The Object  P r imi t ive  CONNECTOR Is  used to  ind icateclasses of actions (described in te rms o f  Sohank*sprimitives acts) which are normally enabled by theob ject  being descr ibed .
In  par t i cu la r ,  a CONNECTORenables ac t ions  between two spat ia l  reg ions .
Forexample, a window and a door  are both CONNECTORs whichenable mot ion (PTRANS) o f  ob jec ts  through them when theyare open.
In  add i t ion ,  a window Is  a CONNECTOR whichenables the action ATT?ND eyes (see) or MTRANS(acquisitlon of Information) by the instrumental actionAI"rEND eyes .
These  act ions  are  enabled regard less  ofwhether the window i s  open or  c losed .
That I s ,  one cansee through a window, and there fore  read or  observeth ings  on the o ther  s ide ,  even when the window i sc losed .
In  the examples d iscussed above, the  openbot t le  l s  g lven  a CONNECTOR descr ip t ion ,  rn i s  w i l l  bediscussed fu r ther  la ter .A SEPARATOR d isenab les  a t rans fer  between two spat ia lreg ions .
A c losed  door  and a c losed  window are  bothSEPARATORs which dlsenable the motion between thespatial regions they adjoin.
In addition, a closed dooris a SEPARATOR which dlsenables the acts MTRANS byA~END eyes (un less  the door i s  t ransparent )  o r  ears .That I s ,  one is  normal ly  prevented  from seeing orhear ing  through a c losed  door .
S imi la r ly ,  a c losedwindow i s  a SEPARATOR wh ich  d lsenab les  MTRANS wi thIns t rument  ATTENO ears ,  a l though,  as  ment ioned aoove ,one can  s t i l l  see through a c losed window to the o thers ide .
A c losed bot t le  i s  another  example o f  an ob jec twith a SEPARATOR descr ip t ion .I t  shou ld  be c lear  by now that  ob jec ts  de ,br ibed  us ingOb ject  P r imi t ives  are  not  genera l ly  descr ibed  by as ing le  pr imi t ive .
In  fac t ,  not  one out severa l  sets  o f53pr imi t ive  descr ip t ions  may be requ i red .
This Isi l l us t ra ted  above by the combinat ion o f  CONNECTOR andSEPARATOR descr ip t ions  requ i red  For a c losed window,whi le a somewhat different set Is requ i red  For an openwindow.
These sets of descriptions form a small set of"states" which the object may Oe in, each statecorresponding to a set of inferences and asSociationsapproriate to the object in that condition.A SOURCE descr ip t ion  ind icates  that  a aa jo r  funct ion  o fthe ob jec t  descr ibed i s  to prov ide the user o f  thatob jec t  w i th  some other  ob jec t .
Thus a Faucet is aSOURCE o \ [  water ,  a wtne bot t le  l s  a SOURCE of  wine,  anda lamp i s  a SOURCE of  the phenomenon ca l led  l ight .SOURCEs o f ten  requ i re  some sor t  o f  ac t ivat ion .
Faucetsmust be turned on, wine bot t les  must be opened, andlamps are e i ther  turned on or l i t  depending on whetheror not they are e l sc t r Jo .The Object Frlmltlve CONSUMER Is used to describeobjects whose pr imary  Funct ion Is  to cons, me otherobjects.
A trash can is a CONSUMER of waste paper, adra ln  i s  a CONSUMER o f  l iqu ids ,  and a mai lbox ts  aCONSUMER o f  mai l .
Some ob jec ts  a re  both SOURCEs andCONSUMERS.
A pipe is a CONSUMER of tobacco and a SOURCEof smoke.
An Ice cube t ray  Is a CONSUMER of water and aSOURCE of ice cu~es.Many ob jec ts  can be descr ibed  In par t  by re la t ionsh ipsthat they assu~e with some other ob jec ts .
Thesere la t ions  a re  descr ibed  ustn~ the Object  P r imi t iveRELATZONAL.
Containers, such as bottles, rooms, cars,etc .
,  have as par t  o f  the i r  descr ip t ions  a conta inmentre la t ion ,  which may spec i fy  de fau l t s  For the type o fob jec t  conta ined .
Objects, such as tab les  and chairs,wnloh are commonly used to support  o ther  ob jec ts  w i l l  bedescr ibed with a suppor t  re la t ion .Objects such as bu i ld ings ,  cars ,  a i rp lanes ,  s to res ,e tc .
,  are a l l  th ings  which can conta in  people.
As such,they are  o f ten  d i s t ingu ished  by the  ac t iv i t ies  whichpeople  in  those  p laces  engage in .
One impor tant  way OFencoding those  ac t iv i t ies  i s  by re fer r ing  to the  sc r ip tswhich descr ibe  them.
The Object  P r imi t ive  SETTING i sused to capture the asscclatlons between a place and anyscr ip t - l i ke  act iv i t ies  that normal ly  occur there .
Itcan also be used to ind icate  o ther ,  re la ted  SETTINGswhich the ob jec t  may be a par t  o f .
For example, ad in in~ car has a SETTING description wlth a llnK both tothe restaurant script and to the SETTING For passengert ra in .
This  in fo rmat ion  Is important  For theestab l i shment  OF re levant  contexts ,  g iv ing  access tomany domain spec l / l c  expectat ions  which w l l lsubsequent ly  be ava i lab le  to gu ide  processtn~ ~othdur ing  conceptua l  ana lys i s  of  lex ica l  input  and whenmaking InFerences at higher levels oF nognt t tveprocessing.The Final Object P r imi t ive ,  GESTALT, i s  used tocharacter i ze  ob jec ts  which have recogn izab le ,  andseparable, eubparts. "
Trains, hi-Fi systems, andKitchens,  a l l  evoke Images o f  ob jec ts  charaoter l zab le  bydescribing their subparts, and the way that thosesubparts re la te  to fOrm the whole.
The OcJect P r imi t iveGESTALT is used to capture this type of  description.Using thls set of  prlmltlves as the Foundat ion For amemory representat ion ,  we can construct a more generalh i -d i rec t iona l  assoc ia t ive  memory by in t roduc ing  someassoc ia t ive  l i nks  externa l  to ob jec t  pr imi t ivedecompos i t ions .
For example,  the conceptua l  descr ip t iono f  a wine bot t le  w i l l  Inc lude  a SOURCE descr ip t ion  For abot t le  where the SOURCE output  i s  spec i f ied  as wine.This amounts to an assoc ia t ive  l ink  From the concept OFa wine bot t le  to the concept o f  wine.
But how can weconstruct an assoolatlve llnK From wlne back to wlnebot t les?
~lne does not have an ob jec t  p r imi t ivedecomposition wnloh i nvo lves  wine bottles, so we mustresor t  to some const ruct ion  which Js externa l  to ob jec tpr imi t ive  decompOs i t ions .Four assoc ia t ive  l inks  have been proposed \ [5 \ ] ,  each o fwhich pOints  to a par t i cu la r  ob jec t  p r imi t ivedescr ip t ion .
For the  problem of  wine and wine Dot t les ,an assoc ia t ive  OUTPUTFROH l ink  i s  d i rec ted  from wlne totne SOURCE descr ip t ion  o f  a wine bot t le .
Th is  externa ll ink  prov ides  us wi th an assoc ia t ive  l ink  From wine towine bot t les .3.
I~U~ROORAMI w i l l  now descr ibe  the process ing ot two sentences verys imi la r  to those d i scussed  ear l ie r .
The computerprogram (OPUS) which performs the Fo l lowing analyses wasdeveloped usin~ a con :eptua l  ana lyzer  wr i t ten  by Lar ryEirnbaum \ [1 \ ] .
OPUS was then extended to inc lude  acapac i ty  For se t t ing  up and F i r ing  "demons" o r. t r iggers"  as they are ca l led  In K~L \ [3 \ ] .
TheFunct ion ing o f  these demons w i l l  be I l lus t ra ted  below.3.1 THE INITIAL ANALXSISIn the process ing o f  the sentence "Jo~n opened thebot t le  so he could pour the wine,"  the phrase "Johnopened the bot t le , "  i s  analyzed to produce the Fo l lowin~representat ion :SJohne : eDOeresu l tehot t lee  CONNECTORENABLES?HUMO <:> PTRANS ~- ?OBJ <--~>--?XL .
< (INSIDE SELF)(or)> ( INSIDE SELF) r -PTRANS <- ?OBJ <-~ ?HUMO <=> L -  < ??
(or)?HUMO <=> A'r'rzSD <.
?S?NS?
<--E~ ?OBJe?
(where ?OBJ Is  ins ide  SELF)Here 3ELF re fers  to the ob jec t  bein~ descr ibed ( thebot t le )  and ?
- - -  ind icates  an unf i l l ed  s lo t .
eJohnehere stands For the in terna l  memory representat ion  For aperson wlth the name John.
Memory tokens ro t  John andthe bot t le  are const ructed by a general  demon which ist r tg&ered  dur ing conceptual  ana lys i s  whenever a PP ( thein terna l  representat ion  For an ob jec t )  i s  In t roduced.OF descr ip t ions  are attached to each ob jec t  token.This dtagrem represents  the asser t ion  that  John didsometh ing which caused the bot t le  to assume a s ta tewhere its CONNECTOR description applied.
The CONNECTORdescr ip t ion  ind icates  that  something can be removed fromthe bot t le ,  put in to  the bot t le ,  o r  I t s  contents  can besmel led,  looked a t ,  or  genera l ly  examined by some sensemods l t ty .
This CONNECTOR descr ip t ion  Is  not par t  oF thede f in i t ion  o f  the word ' open ' .
I t  is spec i f i c  Knowledgethat  people  have about what i t  means to say that  a~ot t le  IS open.In s t r iv ing  at  the  ~bove representat ion ,  the programmust re t r ieve  From memory th i s  OF descr ip t ion  o f  what i tmeans For a bot t le  to be open.
This in fo rmat ion  i ss tored Peneath i t s  p rototype  For bot t les .
Presumably,there  Is  a lso  sc r ip t - l i ke  in fo rmat ion  about thed i f fe rent  methods For opening bot t les ,  the d i f fe renttypes o f  caps (corks ,  tw is t -o f f ,  .
.
. )
,  and which methodi s  appropr ia te  For which cap.
However, For the purposeo f  understanding a text  which does not re /e r  to aspec i f i c  type o f  bot t le ,  asp, o r  opentn~ procedure,  whati s  important  i s  the in fo rmat ion  aoout how the bot t le  can54then be used once i t  i s  opened.
This  i s  the kind ofknowledge that OOJect Primitives were des igned tocapture .When the analyzer builds the state description of thebot t le ,  a genera l  demon assoc ia ted  w i th  new s ta tedescr ip t ions  i s  t r iggered .
Th is  demon i s  respons ib lefo r  updat ing  memory by add ing  the  new s ta te  in fo rmat ionto  the  token  in  the  ACTOR s lo t  o f  the  s ta te  descr ip t ion .Thus the  bot t le  token  i s  updated  to  inc lude  the  gtvenCONNECTOR descr ip t ion .
For the purposes o f  thisprogram, the bot t le  i s  then considered to be an "open"bot t le .
A second funct ion  o f  th i s  demon i s  to set upexp l i c i t  expectat ions  fo r  fu ture  ac t ions  based on thenew in format ion .
In th i s  case, templates fo r  threeactions the program might expect to see described can beconstructed from the  three  par t ia l l y  specifiedconceptua l i za t ions  shown above In the CONNECTORdescr ip t ion  o f  the open bot t le .
These templates areattached to the state descrJptlon as possibleconsequences of that state, for use when attempting toinfer the causal connections between events.3.2 CONCEPT DRIVEN INFERENCESThe phrase "so ne could pour the w ine . "
Is analyzed aseJohn~ ~.> enable PTRANS <- ewinee <~_>F?X i< (INSIDE ?CONTAINER)When thls representation is built by the analyzer, we donot know that the the wine being poured came from thepreviously mentioned bottle.
This inference Js made inthe program by a slot-filling demon called theCONTAINER-FINDER, at tached to the  primitive act  PTRANS.The demon, triggered when a PTRANS from Inside anunspecified container is built, looks on the iist ofactive tokens (a part of snort term memory) for anyconta iners  that  might be expected to contain thesubstance moved, in this case wine.
This is done byapp ly ing  two tests to the objects In snort term memory.The first, the DEFAULT-CONTAINMENT test, looks fo robjects descr ibed by the RELATIONAL primitive,i nd icat ing  that  they are conta iners  ( l ink  = INSIDE) withde fau l t  ob jec t  conta ined being wine.
The second, theCOMMON-SOURCE tes t ,  looks fo r  known SOURCEs o f  wine byfollowing the assoc ia t ive  OUTPUTFROM link from wlne.
I feither of these tests succeed, then the ob ject  found isinferred to be the container poured from.At dlfferent times, e i ther  the DEFAULT-CONTAINMENT testor the COMMON-SOURCJ~ test may be necessary in order toestablish probable conta inment .
For example, i t  i sreasonable to expect a vase to contain water since theRELATIONAL descr ip t ion  of a vase has defau l t  containmentslots for water and flowers.
But we do not alwaysexpect water to come from vases since there is noOUTFUTFROM link from water to  a SOURCE description of avase .
If we heard "Water spilled when J ohn  bumped thevase , "  containment would be es tab l i shed  by theDEFAULT-CONFAINMENT test.
AssoclatJve links are notalways hi-directional (vase ---> water, but water -/->vase) and we need separate mechanisms to trace linkswith different orlentatlons.
In our  wine example, theCOMMON-SOURCE test Is responsible for establishingcontainment, since wine is known to be OUTPUTFROMbottles but bottles are not always assumed to hold wine.Another in fe rence  made during the in i t ia l  ana lys i s  f indsthe contents of  the bottle mentioned in the first clauseof the sentence.
Thls expectation was set up by a demoncalled the CONTENTS-FINDER when the description of theopen bottle, a SOURCE with unspecified output, wasbu i l t .
The demon causes  a search  o f  STM for  an ob jec twhich could De OUTPUT-FROM a bot t le ,  and the token fo rthis particular bottle is then marked as being a SOURCEof that oCject.
The description of this particularbottle as a SOURCE of wine Is equivalent, in ObjectPrimitive terms, to sayin~ that the bottle is a winebottle.3.3 CAUSAL VERIFICATIONOnce the requests t ry ing ,  to fill slots not filled duringthe initial ana lys i s  nave been cons idered ,  the processwhich attempts to f ind  causal connections betweenconceptualizations is activated, in this particularcase, the analyzer has already indicated that theappropr ia te  causal l ink  i s  enablement.
In ~enera l ,however, the lex ica l  in fo rmat ion  which caused theanalyzer to build this causal llng is only an lndJcatlonthat some enabling relation exists between the twoactions (opening the bottle and pouring the wine).
Infact, a long causal cnaJn may Oe required to connect thetwo acts, with an enaClement link being only one link inthat chain.
Furthermore, one cannot always rely on thetext to indicate where causal relationships exist.
Thesentence "John opened the bottle and poured the wine.
"must ultimately be Interpreted as virtually synonymouswith (1)  above.The causal verification process first looks for a matchbetween the conceptual representation of the enabledaction (pour ing  the wine), and one of the potentiallyenabled acts derived earlier from the OP descrJptlon ofthe opened oottle.
In this ex&mple, a match isimmediately found between the action of pourln~ from thebottle and tne expected act ion  generated from theCONNECTO~ descrJptlon of the open bottle (PTRANS FROM(INSIDE PART SEL~)).
Other Object Primitives may a lsolead to expectations for actions, as we snail see later.When a match Js found, further conceptual checks aremade on the enabled act to ensure that  the ac t iondescribed "makes sense" with the particular objectscurrently fJlllng the slots In that acts description.When the match Is based on expectations derlved from theCONNECTO~ description of a container, the check Is a"contalner/contents check," which attempts  to ensurethat  the ob jec t  found in the conta iner  may reasonably  beexpected to be found there .
The sentence "John openedthe bot t le  so ne could pu l l  out the e lephant" ,  i speculiar because we no associations exist wnlch wouldlead us to expect that elephants are ever found inbottles.
The strangeness of this sentence can only beexplained by the application of stereotypic knowledgeabout what we expect and don ' t  expect to f ind  ins ide  abottle.The contalner/contents cnecK is similar to the testdescribed above In connection with the CONTAINER-FINDERdemon.
That is, the bottle is checked by both theDEFAULT-CONTAINMENT test and the COMMON-SOURCE test forknown links relatin~ wlne and botles.
When this checksucceeds, the enable llnk has been verified by matcnlngan expected action, and by checking restrictions onre la ted  ob jec ts  appear ing  in tne  s lo ts  o f  that  ac t ion .The two CD acts that matched are then merged.The merging process accomplishes several tnJn~s.
First,it completes the linking of tne causal chain between tneevents described in the sentence.
Second, it causes thefilling of empty slots appearing in either the enabledact or In the enabling act, wherever one left a slotunspecified, and the other had that slot filled.
Thesenewly  f i l l ed  s lo ts  can  propagate  back  a long  the  causa lchaln, as we shall see in the example of the nextsection.553.~ CAUSAL CHAIN CONSTRUCTIONIn processin~ the sentence(~) John turned on the faucet so he could drinK.the causa l  cha in  cannot be bu i l t  by a d i rec t  match wi than expected  event .
Add i t iona l  inferences must he madeto complete the chain between the act ions  described inthe sentence.
The representation produced by theconceptual ana lyzer  for "John turned on the faucet," Is*John* <~> *ooe\]J~ resu l tSfaucet e ~ (SOURCE with OUTPUT ?
~water e)As with the bot t le  in the prev ious example, thedescr ip t ion  o f  the faucet  as an ac t ive  SOURCE o f  wateri s  based on in fo rmat ion  found beneath the prototype  fo rfaucet, descrlbLnE the "on" state fo r  that object.
Theprinciple e~pectatlon for SOURCE objects is that theperson ~o "turned on" the SOURCE ob ject  wants to takecont ro l  o f  (and u l t imate ly  make use o f )  whatever i t  i sthat Is output from that SOURCE.
In CD, this i sexpressed by a template for an ATRANS (abstracttransfer) of the output  object, in this case, water.
Animportant s ide  effect of the construction of thisexpectation is that a token for some water is created,which can be used by a s lo t - f i l l i ng  In ference  la ter .The representat ion  fo r  "he could dr ink"  Is  par t ia l l ydescr ibed ~y an INGEST with an unspec i f ied  liquid in theOBJECT slot.
A special request to look for the missingliquid Is set up ~y a demon on the act INGEST, similarto the one on the PTRANS in the prev ious example.
Thisrequest finds the token for water placed In the shortterm mamory ~nen the expectat ion  that someone wouldATRANS cont ro l  of some water  was generated .?
faucet*  ~ (SOURCE with OUTPUT = *watere)I I I  ,.
(possible enaOled action)HI;i,1" "E l  ?HUMO ?HUMO <=> ATRANS <- ewatere <The causal chain completion that occurs for thlssentence is somewhat more complicated than It was forthe prev ious case.
As we nave seen, the on lyexpectation set up by the SOURCE description of thefaucet was for an ATRANS of water from the faucet.However, the action that is described here is an INGESTwith Instrumental FTRANS.
When the chain connectorrails to find a match between the ATRANS and either theINGEST or its instrumental PTRANS, i n fe rence  proceduresare called to ~enerate any oOvlouS intermediate statesthat might connect these two acts.The first inference rule that is applied Is theresultatlve inference \[8\] that an ATRANS of an object TOsomeone results in a state where the object Is possessedby (POSS-BY) that person.
Once this state has been~enerated, it is matched a~alnst the INGEST in the sameway the ATRANS was.
When this match fails, no furtherforward inferences are ~enerated, since possession ofwater can lead to a wide ran~ e of new actions, no one ofwnich is strongly expected.The backward chaining Inferencer Is then called togenerate any ~nown precond i t ions  fo r  the act  INGEST.The primary precondition (causative i n fe rence)  fo rdrinking is that the person doing the drinking has thel i qu id  which ~e or  she Is  about to dr ink .
This in fe r redenaolln~ state is then found to match the state (someonepossesses water) Inferred from the expected ATRANS.
The=arch completes the causal cnaln, causing the merging ofthe matched concepts.
In this case, the mergln~ processcauses the program to infer that it was procaoly Johnwho took (AT~ANSed) the water from the faucet, inaddition to turning it on.
Had the sentence read "Johnturned on the faucet so .Mary could drlnK.
"p the programwould infer that Mary took the water from the faucet.efaucete ~ (SOURCE with OUTPUT = ewatere)i enable ?HUMO ATRANS ( -  ewater ?
TO ?HUGO result ?watere (POSS-B?
?HUHO) \match?yes...lnfer ?HUMO ?
mJonnJ- -~ewatere  q~ (POSS-B~ mJohnO)bacgwar~Jinference ,I~, enableL .
.
t John l  <.> INGEST <- ?LIQUID ~ instOJonne <=> PTRANS <- ?LIQUIDOne should note hers that  the add i t iona l  in fe rences  usedto complete the causal chain were very basic.
Theprimary connections came directly from oOJect-specificexpectatlons derived from the OOject Primitlvedescr ip t ions  o f  the ob jec ts  Invo lved .4.
C ~I t  ta important  to understand how OPUS d i f fe rs  fromprev ious in fe rence  s t ra teK ies  in natura l  languageprocess ing.
To emphasize the or ig ina l  cont r ibut ions  o fOPUS we w i l l  compare i t  to  R ie~er ' s  ear ly  work onin fe rence  and causal chain const ruct ion .
Since Rie~er*sresearch i s  c lose ly  re la ted  to OPUS, a comparison o fthis system to Rieger's pro;rum will illustrate whichaspects of OPUS are novel, and which aspects have beeninherited.There is a ~reat deal of similarity between the types ofin fe rences  used In OPUS and those used by Rte~er in h isdescr ip t ion  o f  Mt~qORX \ [8 \ ] .
The causat ive  andresu l ta t ive  in fe rences  used to complete the causal chainin  our las t  example came d i rec t ly  from that  work.
Inadd i t ion ,  the demons used by OPUS are s imi la r  in  f lavorto the forward in fe rences  and spec i f i ca t ion(s lo t - f i l l i ng)  in fe rences  descr ibed by Rieger .Expectat ions  are exp l i c i t l y  represented here as theywere there ,  a l low ing  them to be used In more then oneway, as In the case where water i s  in fe r red  to be the~/Gg~Ted l iqu id  so le ly  from i t s  presence in a prev iousexpectat ion .There are ,  however, two ways in which OPUS departs  fromthe in fe rence  s t ra teg ies  o f  Mb~OR?
In s ign i f i cant  ways.
(1)  On one the leve l  o f  computer implementat ion there i sa reorgan izat ion  o f  process cont ro l  in OPUS, and (2) ona theoret i ca l  leve l  OPUS exp lo i t s  an add i t iona lrepresentatLona l  system which al lo~m in ferencegenerat ion  to be more s t ronB ly  d i rec ted  and cont ro l led .In terms o f  implementat ion,  OPUS in tegrates  theprocesses o f  conceptual  ana lys i s  and memoryohasedin ference  prooeantnB.
By using demons, in fe rences  canbe made dur ing conceptual  ana lys i s ,  as the conceptualmemory representat ions  are ~enerated.
This  e l iminatesmuch o f  the need fo r  an in fe rence  d isc r iminat ionprocedure aot ing  on complete ly  pre -ana lyzedcomoeptua i i zat ions  produced Py a separate  programmodule.
In ,~tOR~, the processes o f  conceptual  ana lys i sand in ference  ~snerat ion  were sharp ly  modular ized fo rreasons which were more pragmatic than theoret i ca l .~ough i s  Known about the in teract ions  o f  ana lys i s  andin ference  at th i s  t ime fo r  us to approach the two as56concurrent processes which share control and contributeto each other  In a very dynamic manner, ideas from KRL\[3\] were Instrumental In desJgnJn~ an in tegrat ion  ofprev ious ly  separate processing modules.On a more theoret i ca l  leve l ,  the  In ference  processesused for causal chain completion Jn OPUS are more h igh lyconstrained than was possible in Rle~er's system.
InMEMORY, all possible inferences were made for each newconceptua l i za t ion  which  was input to  the  program.I n i t ia l l y ,  input consisted o f  concepts coming f rom theparser .
MEHORX then attempted to sake in ferences  fromthe  conceptua l i za t ions  wh ich  i t  i t se l f  had produced,repeat ing th i s  cycle unt i l  no new inferences could be~enerated.
Causal chains were connected ~nen matcheswere found between inferred concepts and conceptsalready stored In Its ~emory.
However, the Inferencemecnanlsms used were in no way dlrected speclflcally totne task of making connections between concepts found Inits Input text.
This lead to a comblnatorlal explosionin the number of inferences made from each new i nput .In OPUS, forward expectations are based on specificassoc ia t ions  from the objects mentioned, and only whenthe objects in the text are described in a manner thatindicates they are being used functionally.
Inaddition, no more than one or two levels of forward orbackward Inferences are made before the procedure Isexhausted ,  the  sys tem s tops  once  a match  I s  made or  I truns  out  o f  h igh ly  probab le  in ferences  to  make.
Thus ,there is no chance for the ~Jnds of comblnatorlalexplosion Rieger experlenced.
By strengthenln~ therepresentat ion ,  and exp lo i t ing  an in tegrated processingstrategy, the comblnatorJal exp los ion  problem can beeliminated.OPUS makes use o f  a well  s t ructured  set o f  memoryassoc ia t ions  fo r  ob jec ts ,  the Object P r imi t ives ,  toencode In format ion  which  can be used i n  a var ie ty  ofR leger 's  qenera l  in ference classes.
Because th i sInformation is directly assoclated with memoryrepresentations for the objects, rather than beingembodied Jn disconnected inference rules elsewhere,appropriate Inferences for the objects mentioned can befound directly.
By using this extended repressntatlonaisystem, we can begin to examine the kinds of associativememory required to produce what appeared from Rieger'smodel to  ~e the  " t remendous  amount  o f  'h idden'computation" necessary for the processing of any natm'all anguage text.REFERENC?S\[11 Blrnbaum, L. ,  and Se l f r ldge  M. (1978).
OnConceptual Ana lys is .
(unpubl ished) YaleUn ivers i ty ,  New Haven, CT.\[2\] Bobrow, D. G., Kaplan, R .M.
,  Kay, M., Norman,D .A .
,  Thompson, H., and Winograd, T. (1977).GUS, a frame dr iven  d ia log  system,  Art i f i c ia lIn te l l igence ,  Vol.
8, No.
1.\[31 Bobrow, D. G .
,  and Wlnograd, T. (1977).
Anoverview o f  KRL, a Knowledge representat ionlanguage.
Co=nlt ive Science 1, no.
1\[~\] Charntak, E. (1972).
Toward a model of ch i ld renss tory  comprehension.
AITR-266, Ar t i f i c ia lIn te l l igence  Laboratory, MZT, Cambridge, HA.Lehnert ,  W.G.
(1978).
Representing phys ica lob jects  in memory.
Technical  Report #111.Dept.
o f  Computer Science, Yale Un ivers i ty ,  NewHaven, CT.C6\] Minsky, M. (1975).
A framework fo r  represent ingKnowledge.
In Winston, P. H., ed.
,  The~1.~JZg~L~of C~Dutar  Vlslon, McGraw-Hill, New York, NY.C71C81C91Norman, D. A., and Rumelhart, D. ?.
,  and the LNRResearch Group (1975) ExDlorat ions lnCo=nl t ton .W.
H. Freeman and Co., San granslsco.Rleger,  C. (1975).
Conceptual memory.
ZnR.
C. Schank, ed.
,  ConcectualPrdceasinm.
North Hol land,  Amsterdam.Rlesbeok, C. and Schank, R. C. (1976).Comprehension by computer: expectat ion-baaedana lys i s  o f  sentences in context .
Technical  Report#78.
Dept.
o f  Computer SCience, Yale Un ivers i ty ,New Haven, CT.\[10\] 3ohank, R .C .
,  (1975).
Conceptual DependencyTheory.
in Schank, R. C .
(ed . )
,P rocess in l .
North Hol land,  Amsterdam.\[111 5ohank, R. C. and Abelson, R. P. (1977).
~cr io ts ,Plans, ~oals,  ~ Understandtn?.
Lawence Rrlba ,,mPress, H l l l sda le ,  NJ.57
