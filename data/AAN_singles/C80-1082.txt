USING A NATURAL-ART IF IC IAL  HYBRID LANGUAGEFOR DATABASE ACCESSTeruaki  A IZAWA and Nobuko HATADANHK Technica l  Research Laborator ies1-10-11, Kinuta, Setagaya,  Tokyo 157, JapanIn this paper we propose a natura l -ar t i f ic ia l  hybr id  language for databaseaccess.
The global  construct ion of asentence in this language is h ighlyschematic,  but a l lows express ions  in thechosen language such as Japanese orEngl ish.
Its art i f ic ia l  language part,SML, is c losely  re lated to our newlyint roduced data model,  ca l led scaledlattice.
Adopt ing  Japanese as itsnatural  language part, we implemented aJapanese-SML hybr id  language process ingsystem for our compact  database systemSCLAMS, whose  database consists  of scal-ed latt ices.
The main features of thisimplementat ion  are (i) a small  lex iconand l imited grammar, and (2) an a lmostfree form in wr i t ing  Kana Japanese.1.
In t roduct ionVar ious query languages for databaseaccess have been developed, among whichunambiguous art i f ic ia l  ones are bet teradapted to computers.
For man, on theother hand, it wou ld  be more convenientto communicate  wi th  computers  in anatural  language.
The poss ib i l i ty  ofman-mach ine  communicat ion  in a natura llanguage has been one of the mainconcerns in the f ield of art i f ic ia linte l l igence,  and cons iderab le  resultshave been obta ined spec i f ica l ly  inresearch into natura l  language access toa database.
I~5 These results,  however,seem to be too complex and inf lex ib lefor pract ica l  app l icat ion to general -purpose database systems.We wi l l  propose in this paper  a"natura l -ar t i f i c ia l  hybrid" language fordatabase access.
The global  construc-t ion of a sentence in this language ish igh ly  schemat ic  but al lows express ionsin the chosen language such as Japaneseor English.
A Japanese vers ion of thislanguage has been implemented for ourcompact  database system SCLAMS6; (SCa ledLAtt ice Man ipu lat ion  System).
The mainfeatures of this implementat ion  are:(I) Use of only a small  lexicon andl imited grammar so that they arequite easy to implement,  and(2) A l lowance of a lmost  free form inwr i t ing  Kana Japanese.Feature (i), wh ich  wil l  be achievedalso when using other  languages l ikeEngl ish,  French, and so on, is one of themost  not iceable  mer i ts  obta ined by us ingsuch a natura l -a r t i f i c ia l  hybr id  languagefor database access.We beg in  wi th  an exp lanat ion  of ourbas ic  logical  uni t  of data, ScaledLatt ice,  or S.L.
for short, s ince theproposed language is c lose ly  re lated tothis unit.2.
SML:Sca led latt ice manipu la-tion language2.1 Scaled latt ice as a data modelWhat  the normal i za t ion  theory inthe re lat ional  data model  tel ls us canbe stated very loosely as "one fact inone place" 8 The concept of ScaledLatt ice, or S.L.
for short, also goesalong this d irect ion.Roughly speaking an S.L.
is a mult i -d imens iona l  table, and is def ined as aco l lect ion of data of one species arrang-ed at mul t i -d imens iona l  latt ice pointscor respond ing  to the combinat ions  ofatt r ibute values.
Fig.
1 shows agraphica l  image of S.L.
wh ich  representspopulat ion  data by year, prefecture,  andsex.Ye.1980d1950mYiI (Sexr Population dataoo ~/ / /- - -~ '<LJ/ / //, Male popula-tion of Tokyo_--=in 1980.Female popul~tion of Tokyoin 1980.Prefecturero ~All of male populationdata are arranged onthis axis.Fig.
1 Graphical image of S.L.
data model--543--This is an example of three dimen-sional S.L's, which can be furthermoreregarded as a mapping or a funct ionwith three var iab les  in the mathemat ica lsense.
Let  SI, $2, and $3 be f initesets such asS1 = { 1950, 1951 .
.
.
.
.
1980},{ Tokyo, Osaka, Nagoya .
.
.
.
}, $2and$3 ={ male, female}.Also let A be an appropr iate  set hav ingenough e lements to represent  values ofpopulat ion.
Then the above S.L.
can benatura l ly  regarded as a mapping:F : S1 x $2 x S3 ~ A, (i)which assoc iates any tr iple (x, y, z)of at t r ibute values in S1 x $2 x $3with the cor respond ing  populat ion  valueF(x, y, z).
Thus, for example,F (1980, Tokyo, male)denotes the male popu lat ion  of Tokyo in1980.Genera l ly  an S.L.
is a mapp ing  Fof the d i rect  product  of f inite setsSI, ..., Sn into an appropr ia te  set Adenoted byF : S1 x ... x Sn~ A.
(2)These sets S1, ..., Sn and theire lements wi l l  be somet imes ca l led rootwords and leaf words respect ive ly .The fo l lowing are the advantagesof this data model:(i Data conta ined in an S.L.
can bed isp layed exact ly  in the two-d imens ional  table form, which isv isua l ly  very understandable .
(2 In order  to d isp lay  data in tableform, it is necessary  to cut outan appropr ia te  two-d imens iona lcross sect ion from the S.L., ormore prec ise ly  to se lect  twoappropr ia te  scales on which thetable is constructed,  and, at thesame time, to fix the remain ingscales at some att r ibute values.This is noth ing but  a retr ievaloperat ion.
Cutt ing out such asect ion is very easy, wh ich  meansthat certa in  retr ieval  operat ionsare also easy.
(3 Since an S.L.
is regarded as amapping, prec ise and powerfu lnotat ions concern ing "sets andmappings"  are d i rect ly  appl icablefor man ipu la t ion  of the S.L.
data.2.2 Br ief  out l ine of SCLAMSWe have implemented a compact  data-base system SCLAMS (Scaled latt iceman ipu la t ion  system), whose databaseconsists  of S.L.
's.6, 7 SCLAMS has thefo l lowing three major  modes:(i) Storage mode: Storage of data as aset of S.L.
's ed i t ing from any fi leinto the database.
(2) Retr ieval  mode: Se lect ion of oneor more sui table S.L.
'S from thedatabase.
(3) Man ipu la t ion  mode: Data extract ionfrom the above S.L.
's  and someoperat ion  on the data.Thus, a retr ieval  operat ion accord-ing to a user's query is d iv ided intotwo modes: Retr ieval  and Manipulat ion.Retr ieval  mode is s imi lar  to the docu-ment  retr ieval  system, and Man iPu la t ionmode to the database system, in a narrowsense, regard ing each S.L.
as a smallfile.
The main concern of our des ignof SCLAMS was to combine ef fect ive lythese two modes, in other  words, tointegrate the funct ion of documentretr ieval  systems and that of databasesystems.2.3 Man ipu lat ion  of scaled latt ices bySMLIn this paper we wi l l  focus ourat tent ion exc lus ive ly  on Manipu lat ionmode of SCLAMS.
The major  funct ion ofthis mode is to man ipu la te  S.L.
's  in avar iety  of ways such as ext ract ion  ofdata sat is fy ing spec i f ied condit ions,join of more than two S.L.
's  data,e lementary  ca lcu lat ions  for extracteddata, etc.
These operat ions  are donethrough a query language for end users,named as SML (Scaled latt ice Manipula-t ion Language).We now show a few examples toi l lust rate  some aspects of SML.
Let F1and F2 be two S.L.
's,  i.e.
two mappingssuch asF1 : S lx  $2 x S3~AI ,  and (3F2 : S1 x $2 ~A2,  (4where S1 = Year scale{ 1950, 1951 ..... 1980}, (5--544$2 = Prefecture  scale= { Tokyo, Osaka, Nagoya, .
. )
,  (6)$3 = Sex scale= { male, female}, (7)A1 = Set of popu lat ion  values,A2 = Set of numbers of TV sub-scr ibers.These S.L.
's may be cons idered as anoutput  of Retr ieval  mode.Each example  be low consists  of aninformal query and the cor respond ingformal one expressed by SML.
Not icethat the SML express ions  conta in themathemat ica l  notat ions  to descr ibe setsand mappings.Example i. L ist  the male popula-t ion of Tokyo in 1980.L IST A;A = FI(1980, Tokyo, male);Example 2.
L ist  names and thenumber of prefectures  in which  the malepopulat ion in 1980 is greater  than onemil l ion.L IST B, C;B = <X:FI(1980, X, male)>1,000,000>;C = COUNT (B);In this example B is def ined asthe set of prefecture X's wi th  thepopulat ion value FI(1920, X, male) >1,000,000, and C as COUNT of B, whereCOUNT is one of aggregate funct ionsprepared in SCLAMS.Example  3.
L ist  numbers of TV sub-scr ibers in 1980 of prefectures  ?nwhich the female populat ion in 1975 isless than one mil l ion.L IST NUM;NUM = F2(1980, P);P = <X:FI(1975, X, female)<i ,000,000>;In this example two S.L.
's  F1 andF2 are re lated by a common scale $2.General  format of a query or asentence by SML is shown in Fig.
2.L IST al, a2, ..., am;b l  = express ion  i;b2 = express ion  2;bn = express ion  n;Fig.
2 General  format of a query by SMLIn this format each of var iables al, .
.
.
,am is equal to one of those bl, ..., bn;and the order of bl, ..., bn is arbitrary.The types of express ions  can be c lass i -f ied into ?he fo l lowing six categor ies:i) Numeral  or l i teral  constants;  e.g.1980, Tokyo, male, etc.2) Aggregate funct ion values; e.g.COUNT (x), SUM (y), etc.3) S.L.
's  values; e.g.F(xl .
.
.
.
, xn) , etc.4) Set operat ion  formulas; e.g.x & y, xly, x-y, etc.5) Set def in i t ion  formulas; e.g.<3, 5, 7, ii>, <Tokyo, Nagoya,Osaka>,<xi:F(xl,...,xi, ...,xn)<y>, etc.6) Abbrev iate  notat ions for e lements ofa scale, i.e.
leaf words; e.g.S.l, S. I I -20, etc.?
The latter, for example,  representsfrom l lth to 20th e lements of ascale S.It wou ld  be easi ly  seen, from theabove explanat ion,  that a query by SMLis expressed bas ica l ly  as a set of "non-procedura l"  local  queries,  and thus thequery as a whole has also of non-procedura l  nature.3.
Hybr id i za t ion  of SML witha natural  language3.1 An i l lust rat ive  exampleWe have assured that  our querylanguage SML is suf f ic ient ly  f lexibleand has strong express ive power,spec i f ica l ly  for those who are fami l iar--545--with mathemat ica l  notat ions concern ingsets and mapping s .
However,  we can alsosay that SML is less conven ient  than anatural  language which seems to be bestsuited for casual  users.
We thereforetr ied to hybr id ize  SML with a naturallanguage l ike English, Japanese, etc.,be l iev ing that such a natura l -a r t i f i c ia lhybr id  language should be one of themi lestones to a rea l i zat ion of databasesystems whol ly  access ib le  via unrest r ic t -ed natural  languages.The next  example, c losely  re latedto Example 2 in the last section, wi l lshow us how to hybr id ize  SML with  anatural  language, say Engl ish.Example 4.
L ist  names and thenumber of prefectures  in which the malepopulat ion in 1980 is less than thefemale populat ion  of Tokyo in 1970.Now we consider  the fo l lowing twotypes of express ions  for this query.T_~e I (Original formal express ion bySML)LIST A, B;A = <X:FI(1980, X, male) < C >;B = COUNT (A) ;C = FI(1970, Tokyo, female);Type II (Extended new expression)LIST A, B;A = Names of prefectures  in whichthe male populat ion  in 1980 isless than C;B = Number  of e lements of A;C = Value of the female popu la t ionof Tokyo in 1970;The features of Type II express ionsare:(i) The global  const ruct ion  is quites imi lar  to that of Type I expres-sion, but it a l lows us to wr i tephrases in the chosen naturallanguage for def in i t ions  of vari -ables such as A, B, and C. (Ifnecessary,  some of the var iab lesmay retain the or ig ina l  formaldef in i t ions.
)(2) Not ice that var iable  symbols suchas A and C can be embedded inord inary  Engl ish phrases, so thatthe or ig inal  query expressed as acomplex sentence is d iv ided intosome simple queries.
This contr i -butes to readabi l i ty  of quer iesboth for man and computer.3.2 Features of a Japanese-SML vers ionWe have implemented a " Japanese-SML" hybr id  language process ing system,as an extens ion of SCLAMS.
The majordes ign goal was to be pract ica l  ratherthan just ambit ious.
The process ingsystem, which  wi l l  be cal led Translator ,is essent ia l ly  a t rans lator  of a Japanesephrase into the cor respond ing  SML expres-sion, or in the above terminology,  of aType II express ion  into its Type Iequivalent .
The main process of Trans-lator is shown in Fig.
3.Type II eipressionSyntax Analysis l<--------Conversion .... \] ~ -Type I expressionJapaneseGrammarRulesFig.
3 Process of TranslatorSome cons iderat ions  in achievingpract i cab i l i ty  of the implemented systemare :(i) In our implementat ion  a Japanesesentence or phrase can be wr i t tenas a str ing of only Kana characters ,in which case it is desirable,  forconvenience,  to guarantee f reedomfrom segmentat ion as much aspossible.
Our system indeed al lowsthe free wr i t ing  of a Kana sentence,as long as the leaf words (thee lements  of scales) cause no con-fusion wi th  the reserved words inthe lexicon.
(2) It is des i rab le  to keep the grammaras compact  as poss ib le  to savestorage space and process ing time.This was done by rest r ic t ing  formsof poss ib le  Type II express ions.4.
Trans lat ion of Japanese into SML4.1 M ic ro -grammar  for JapaneseAs ment ioned in Sect ion 2.3, theset of all Type I express ions  are546classif ied into six categories i)~6).Then the possible Type II expressions,which our Translator can accept, arerestricted to those corresponding to thecategories 2), 3), and a part of 5),i.e.
the so-called implicit set defini-tions.
It should be noticed thatexpressions belonging to the othercategories are neatly expressed ratherby Type I forms.We now show the lexicon and thegrammatical rules prescribing theseType II expressions.Lexical items and their categories.There are 12 categories of lexical items.l) Num : Numbers, e.g.12, 165.3, -0.137, etc.2) Naux: Auxil iary numbers, e.g.hyaku, byaku, pyaku, sen, man(hundred, thousand, million),etc.3) ~ : Names of aggregate functions,e.g.kosu, souwa, saidai, heikin(count, sum, maximum, average),etc.4) e~ : Equality words or copulas,e.g.no, dearu, deatte, nihitoshii,nihitoshiku (is equal to),etc.5) ~ :  Words for comparison, e.g.ijo, ika, miman, igo(more, less, later), etc.6) Comp____~2: Particle for comparison, i.e.yori, yorimo ( % than).7) adj : Adjectives, e.g.ookii, hayail shouno, daino(large, early, small, wide),e tc.8)* Root : Root words, i.e.
names ofscales, e.g.nen, ken (year, prefecture),etc.9)* Leaf : Leaf words, i.e.
elements ofscales, e.g.1980, Tokyo, otoko (male),etc.l0 * Unit: Words for data units, e.g.en, nin, km (Yen, person,kilometer), etc.ii) * SL  : Names of S.L.
's representingthe sort of the S.L.
data,usually given at Storagemode, e.g.jinko, TV keiyakusha(population, TV subscriber),etc.12)** Var: Variable names such asA, B, KEN, etc.The items in the categories markedby one asterisk are automatical ly addedto the lexicon at the beginning ofManipulation mode in order to coverthose S.L.
's which are passed fromRetrieval mode, and deleted after use.They are thus highly application oriented.The lexicon would become very largeif it included the items in Leafcategory.
We tried to exclude themfrom our lexicon by contriving a re-cognition method of them from thecontexts, so that the lexicon containsonly about 100 application independentitems plus application oriented ones.Var category marked by two asteriskswas also excluded from our lexicon,since the formation rules of thiscategory is wel l -def ined and easilyprogrammed.Grammatical rules.
It was suffici-ent to prepare merely a dozen grammaticalrules expressed as context-free-l ikeproductions with conditions of applica-tion.l) Initial productionIRI S~ DV2) Range-of-S.L.
phraseR-~- I VarMod Mod .
.
.
ModinSLCondition: n = dim(SL), where theright-hand side of the equalitydenotes the dimension of S.L.represented by SL.5473) Root modifier~ ~Mod Mod ... ModYnSLCondition: n = dim(SL)-l.4)5)6)ModifierMod ~ {(R?
?tD ga)LeafkDomain-of-S .L.
phraseD ~ I Var }(R ga cond) RootNumer ic valueeqV~ i Var 1Num (Naux) (Unit)D nita--~suru Agg7) Conditioncond~V < (c?mp i) eq }comp 2 adjAn example of parsing trees by thisgrammar is given in Fig.
4.
We assumethat 'jinko' S.L.
is of dimension three.DI E Mod ModALeaf eq Leaf eq SLI J I i teolndVar compl eq Rooti u i i1980 no otoko no jinko ga C ijo no ken(Prefectures in which the male population in1980 is greater than C.)Fig.
4 Example of a parsing tree4.2 Translation into SMLTranslation from Type II expressionsin Japanese into Type I expressions in'pure' SML is performed by using twofundamental tools: a word-for-wordconversion table and a conversionprocedure.Word-for-word conversion table.This is prepared for the following fivecategories of lexical items:Agg, compl, adj, Root*, SL*.For the asterisked categories the tableis made up whenever Manipulation mode isinvoked.
A portion of the conversiontable is shown in Table i.Table 1 Word-for-word conversiontable (a part)CategoryAggcompladjRootSLWords (Items)source targetkosu COUNTsouwa SUMsaidai MAXijo >=miman <ookii >hayai <daino >nen Slken $2jinko F1menseki F2Conversion procedure.
Since theproposed grammar is so compact, weconsidered that the conversion procedureincluding syntax analysis would be bestrealized through a general-purposeprogramming language, say PL/I, ratherthan a comprehensive grammar-writ ingsystem like ATN.
9) This will alsocontribute to a portabil ity of thesystem.The programming considerations were:(1) To insure a free writ ing of aJapanese Kana phrase, we adopted aleft-to-right parsing, predictingthe succeedilg category.
However,the lexicon does not include theleaf words, we had to impose therestriction that any leaf wordshould be enclosed by a space or anapostrophe.
(2) An SML expression is generated, byintroducing a new variable symbolin the form 'SYS**', whenever apartial result of parsing becomessufficient to do so.
(This pointcan be best i l lustrated by the" 548example given below.
)(3) Two important  steps in a pars ingf low are the decis ions:a) Which of the init ia l  product ionscan be applied; S~R,  S---~D,or S~V?b) Which~phrase  actua l ly  appears,R or R?4.3 An exampleWe now return to Example 4 inSect ion 3.1.
That  query wi l l  be wr i t tenin Type II form in Japanese as fol lows.
(We adopt  here a real notat ion  of oursystem using Kana characters.
)Example 5.
(A Japanese t rans lat ionof Example 4).L IST A, B;A = ' I980 ' I '~=" I~Y~C~/~w;B = A /  =~;C = 1970 / ~?#~ / ~YT  / ~Y=~ ;This Type II express ion  wi l l  bet rans lated into the fo l lowing Type Iequivalent .L IST A, B;SYS01 = '1980';SYS02 = '~ b = ' ;A = <X:FI(SYS01,  X, SYS02) < C > ;B = COUNT (A) ;SYS03 = '1970';SYS04 = ' b ~ ~ ~ ' ;SYS05 = ' ~ YT '  ;C = FI(SYS03, SYS04, SYS05);5.
Conc luS ionsOur compact  database system SCLAMSwi th  a t rans lator  from Japanese into SMLhas been implemented for IBM 370/138.The t rans lator  is a PL/I program con-s ist ing of about 500 statements includ-ing the lexicon and the grammat ica lrules themselves.
The overal l  per-formance of the t rans lator  seems to besuf f ic ient  for pract ica l  use.
In fact,the t rans lat ion t ime of each Type IIexpress ion  is about  1 second.We bel ieve,  from our exper iences,that a natura l -a r t i f i c ia l  hybr id  languagel ike ours wi l l  be a pract ica l  step toexplore the better  languages for data-base access, spec i f ica l ly  for casualusers.Acknowledgement .
The authors wishto exp-~s  ~?~ g-r-atitute to Y. Suzuki,the former Deputy -D i rector  of NHKTechnica l  Research Laborator ies  and M.Machida, Head of In format ion Process ingResearch Group of the Laborator ies  forencouragement  and guidance.
They arealso gratefu l  to J. Kutsuzawa, SeniorResearch Engineer  of our group for hisva luable  comments concern ing the im-p lementat ion  of the system.i.2.3.4.5.6.7.8.9 .ReferencesW.A.
Woods et al: The luner sc iencesnatura l  language in format ion system.BBN Rep. 2378, Bolt  Beranek andNewman, Cambridge,  Mass.,  1972.E.F.
Codd: Seven steps to rendezvouswi th  the casual  user.
In "Data basemanagement" ,  J.W.
K l imbie et al,eds., North-Hol land,  Amsterdam, 1974,pp.
179-200.L.R.
Harris:  User or iented data basequery wi th  the ROBOT natura l  languagequery system.
Proc.
3rd VLDB, Tokyo,Oct.
1977.G.G.
Hendr ix  et al: Deve lop ing  anatural  language interface to com-plex data.
ACM Trans.
on DatabaseSystems, Vol.
3, No.2, June 1978,pp.
105-147.M.
S ibuya et al: Noun-phrase modeland natural  query language.
IBM J.RES.
DEVELOP.,  Vol.
22, No.5, Sep.1978, pp.
533-540~T.
A izawa et al: SCLAMS - a dataprocess ing system (in Japanese).Prepr int  of WGDBMS of IPSJ, Tokyo,Ju ly 1979.T.
A izawa (ed.)
: SCLAMS - a user'smanual.
NHK Res.
Lab., Tokyo, Apr.1980.C.
J.
Date: An int roduct ion to data-base systems, 2nd ed.. Addison-Wesley,  1977.P.H.
Winston: Ar t i f i c ia l  intel l i -gence, Addison-Wesley,  1977.--549
