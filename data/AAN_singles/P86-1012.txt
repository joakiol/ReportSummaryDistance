CATEGORIAL  AND NON-CATEGORIAL  LANGUAGESJoyce FriedmanRamarathnam VenkatesanABSTRACTComputer Science DepartmentBoston University111 Cummington StreetBoston, Massachusetts 02215 USAPREL1MIN A R IESWe study the formal and linguistic proper-ties of a class of parenthesis-free categorialgrammars derived from those of Ades and Steed-man by varying the set of reduction rules.
Wecharacterize the reduction rules capable of gen-erating context-sensitive languages as those havinga partial combination rule and a combination rulein the reverse direction.
We show that anycategorial language is a permutation of somecontext-free language, thus inheriting propertiesdependent on symbol counting only.
We comparesome of their properties with other contem-porary formalisms.INTRODUCTIONCategorial grammars have recently been the topicof renewed interest, stemming in part from their use asthe underlying formalism in Montague grammar.
Whilethe original categorial grammars were early shown to beequivalent to context-free grammars, 1, 2, 3 modificationsto the formalism have led to systems both more and lesspowerful than context-free grammars.Motivated by linguistic considerations, Ades andSteedman 4 introduced categorial grammars with someadditional cancellation rules.
Full cancellation rulescorrespond to application of functions to arguments.Their partial cancellation rules correspond to functionalcomposition.
The new backward combination rule ismotivated by the need to treat preposed elements.
Theyalso modified the formalism by making category symbolsparenthesis-free, treating them in general as governedby a convention of association to the left, but violat-ing this convention in certain of the rules.This treatment of categorial grammar suggests afamily of eategorial systems, differing in the set of can-cellation rules that are allowed.
Earlier, we began astudy of the mathematical properties of that family ofsystems,  showing that some members are fullyequivalent o context-free grammars, while others yieldonly a subset of the context-free languages, or a super-set of them.In this paper we continue with these investigations.We characterize the rule systems that can obtaincontext-sensitive languages, and compare the sets ofcategorial \]ar~guages with the context-free languages.Finally, we discuss the linguistic relevance of theseresults, and compare categorial grammars with TAGsystems i ,  this regard.A categorial grammar under a set R of reductionrules is a quadruple CGR (VT ,  VA,  S,  F), whose ele-ments are defined as follows: VT is a finite set of mor-phemes.
VA is a finite set of atomic category symbols.S EVA is a distinguished element of VA. To define F ,we must first define CA, the set of category symbols.CA is given by:i) i fAEVA, thenA ECA; i i )  i fX  EUAand A EVA,  then X/A  ECA; andii i )  nothing e lse ls inCA .
F is the lexicon, a function from VT to 2 ea suchthat for every aEVT,  F(a)  is finite.
We often writeCGR to denote a categorial grammar with rule set R,when the elements of the quadruple are known.Notation: Morphemes are denoted by a, b; mor-pheme strings by u ,v ,w .
The symbols S ,A ,B ,Cdenote atomic category symbols, and U. V, X ,  Ydenote arbitrary (complex) category symbols.
Complexcategory symbols whose left-most symbol is S (symbols"headed" by S )  are denoted by Xs,  Ys.
Strings ofcategory symbols are denoted by z ,  y.The language of a categorial grammar is determinedin part by the set R of reduction rules.
This set caninclude any subset of the following five rules.
In eachstatement, A EVA,  andU/A ,A /U ,A /V ,  VIA E CA.
(1) (F Rule) The string of category symbols U/A Acan be replaced by U.
We write: U/A A---*U;(2) (FP Rule) The string U/A A /V  can bereplaced by U /V .
Wewrite: U /A A /V -*U/V ;(3) (B Rule) The string A V/A  can be replacedby U.
We write:A U/A~U;(4) (Bs Rule) Same as B rule, except that U isheaded by S.(5) (BP Rule) The string A/U V/A can bereplaced by V/U.
We write: A/U V/A- -*V /U.If XY ---,Z by the F-rule , XY is called an F-redex.Similarly, for the other four rules.
Any one of them maysimply be called a redex.The reduction relation determined by a subset ofthese rules is denoted by => and defined by: if X Y --* Zby one of the rules of R, then for any a, /~ in CA* ,aXY/3 >aZ/3.
The reflexive and transitive closure ofthe relation -> is =>* .
A morpheme stringw=wlu,~" 'w,  is accepted by CGR(VT,  VA ,S ,F )if there is a category string z = X1X2 "" ?
X,  such thatXiEF(w, )  for each i= l ,2 , ' - -n ,  and x =>*  S.  Thelanguage L(CGR) accepted by CGR(VT,  VA ,S ,F )is the set of all morpheme strings that are accepted.75I.
NON-CONTEXT-FREE CATEGORIALLANGUAGESIn this section we present a characterizationtheorem for the categorial systems that generate onlycontext-free languages.First, we introduce a lexicon FEQ that  we will showhas the property that for any choice R of metarules anystring in L(CGR)  has equal numbers of a ,b ,  and c.We define the lexicon FEQ as FEQ (a ) = {A },FEQ(b) = {BI,  F~Q(c) ={C/A /C /B ,  C /D},FEQ (d ) {D}, FEQ(e)={S/A /C /B} .We will also make use of two languages on thealphabet {a ,b ,e ,d ,  e} L l={a"db  "e  c ~ In >/1 },andLEQ = {w !
#a = #b = #c >1 1,#d =#e = 1}.A lemma shows that  with any set R of rules the lex-icon FEQ yields a subset of LEQ.Lemma 1 Let G be -any categorial grammar,CGR(VT ,VA,S ,FEQ) ,  where VT ={a,b ,c ,d ,e} ,VA = {S ,A ,B ,C ,D},  with R~{F,FP ,B ,BP} .
ThenL (C)CL~Q.Proof Let z = X IX 2...X~ = > *S. Letw = wl.. .w.
be a corresponding morpheme string.
Todifferentiate between the occurrence of a symbol as a headand otherwise, write C/A/C /B  = CA -1C-1B-1'S /A /C  /B  = SA-1C-1B -1 and C /D = CD -1.
Forany rule system R, a redex is two adjacent categories,the tail of one matching the head of the other, and isreduced to a single category after cancelling the matchingsymbols.
Since all occurrences of A must cancel to yielda reduction to S ,  #A = #A -1.
This holds for allatomic categories except S, for which #S = #S- l+ l .This lexicon has the property that  any derivablecategory symbol, either has exactly one S and is S -headed or does not have an occurrence of S .
Hence in x,#S = 1, i.e., w has exactly one e. Let the number ofoccurrences in x of C/A/C /B  and C/D be p andq respectively.
\]t follows that  #C = p +q,  #C -1 = p +1.Hence q = 1 and w ha.~ exactly one d. Each occurrenceof C/A/C /B  introduces oneA- landB-1 .
Sincew hasone e, #A-1  = #B- J  = p +1.
Hence #A = #B = p +1.Since for each A ,B and C in z there must be exactlyonea ,b  and c ,#a =#b =#c.
\[\]We show next that in the restricted ease where Rcontains only the two rules FP  and B s , the language L 1is obtained.Lemma 2 Let CG R be the categorial grammar with lexi-con FEQ and rule set R = {FP ,Bs }.
ThenL (CGR ) = L1.Proof Any x EL 1 has a unique parse of the form(Bs FP  ) n Bs Bs ~, and hence L 1CL (CG R ).
Conversely,any x having a parse must have exactly one e. Further,all b 's  and c 's  can appear only on the left and right of erespectively.
Any derivable category having an A has theform S/ (A / ) "  U where U does not have any A.  Thusall A's appear consecutively on the left of the e. For therightmost e ,F (c )  = C /D .
A d must be in between a ' sand b's.
By lemma 1, #(a)=#(b)  =# (c).
Thusx = a n db n ec" , for some n .
Hence L 1 = L (CGR).
\[\]The next lemma shows that no language intermediateto L1 and LEQ can be context-free.
It really does notinvolve eategorial grammar at all.Lemma 3 If L 1C.L C-LEQ, then L is not context-free.Proof Suppose L is context-free.
Since L containsL1, it has arbitrarily long strings of the forma '~ b db"e c" .
Let k and K be pumping lemma con-stants.
Choose n >max(K ,k ) .
This string, if pumped,yields a string not in LEQ, hence we have a contradiction.\[\]Coro l la ry  Let {FP ,Bs }~R.
Then there is a non-context-free language L ( CGR ).Proof Use the lexicon FEQ.
Then by lemma 1L(CGR)~LEQ.
But{FP ,Bs}~R,soL I~L(CGR) .
\[\]The following theorem summarizes the results bycharacterizing the rule sets that can be used to generatecontext sensitive languages.Ma in  Theorem A categorial system with rule set R cangenerate a context-sensit ive language if and only if Rcontains a partial combination rule and a combination rulein the reverse direction.Proof The "if" part follows for {FP ,Bs  }by lemmas1, 2, and 3.
It follows for {BP ,F } by symmetry.
For the"only if" part, first note that any unidirectional system(system with rules that  are all forward, or all backward)can generate only context-free languages.
5 The onlyremaining cases are {F ,B } and {FP ,BP 1.
The first gen-erates only context free languages.
5 The second generatesonly the empty language, since no atomic symbol can bederived using only these two rules.II.
CATEGORIAL LANGUAGES ARE PERMUTA-TIONS OF CONTEXT-FREE LANGUAGESLet VT = {a l, a2 " - .
,ak }.
A Parikh mapping 6 v / i sa mapping from morpheme strings to vectors such thatx~(w) = (#a l ,#a2 .
.
.
.
.
#a  k).
u is a permutation of viff ~(u)=~(v) .
Let ~P(L~={W(w) IwEL} ,  Alanguage L is a permutation of L iff ~(L  ) = xC(L).
Wedefine a rotation as follows.
In the parse tree for u E L ,  atany node corresponding to a B redex or BP- redexexchange its left and right subtrees, obtaining an F - redexor an FP-redex.
Let v the resulting terminal string.
Wesay that u has been transformed into v by rotation.We now obtain results that are helpful in showingthat  certain languages eannol be generated by.
categorialgrammars.
First we show that, every categorial languageis a permutation of a context free language.
This willenable us to show that properties of context-freelanguages that depend only on the symbol counts mustalso hold of categorial languages.Theorem Let R c: {F, FP, B, BP}.
Then there exists aLCF such that ?
(L  (CGR)) = ?
(LcF) ,  where LcF iscontext free.Proof Let x eL (CGR).
In its parse tree at eachnode corresponding to a B-redex or a BP-redex performa rotation, so that it becomes a F -redex or a FP  -redex.Since the transformed string y is obtained by rearrangingthe parse tree, xt , (x)= ~(y  ).
Also y derivable usingR I = {FP ,F } only.
Hence the set of such y obtained as apermutation of some x is the same as L (CGRt), which iscontext free, 5 i.e., L ( CGR I) = LCF .
\[\]76Coro l la ry  For any R ~ {F, FP, B, BP}, L (CGR) issemilinear , Parikh bounded and has the linear growthproperty.Semilinearity follows from Parikh's Lemma andlinear growth from the pumping lemma for context-freelanguages.
Parikh boundedness follows from the fact thatany context-free language is Parikh bounded.
6 I-1P ropos i t ion  Any one--symbol categorial grammar is reg-ular.Note that if L is a semilinear subset of nonnegativeintegers, {a n In eL } is regular.III.
NON-CATEGORIAL LANGUAGESWe now exhibit some non-categorial languages andcompare eategorial languages with others.
From the corol-lary of the previous ection we have the following results.Theorem Categorial languages are properly contained inthe context-sensitive languages.Proof The languages {a h (n) \[ n >/0 }, whereh (n )=n 2 or h (n)=2" which do not have linear growthrate, are not generated by any CGR.
These are contextsensitive.
A lso{arab" I either m>n ,g r in  is prime andn ~<m and m is prime } is not semilinear 7 andhence not categorial.It is interesting to note that lexieal functional gram-mar can generate the first two languages mentionedabove 8 and indexed languages can generate{a nbn2a ~' In>tl}.Linguistic PropertiesWe now look at some languages that exhibit cross-serial dependencies.Let G3 be the CGR with R ={FP ,Bs} ,VT = {a ,b ,c ,d }, and with the lexiconFFI~I =IS~S1}'= {S l IB/S 1,F(c)={S1}'B }.
F (a )= lS1 /a /s l ,  m},ThenL3 = L (G3) = {wcdw tw E{a,b}*}.
The reasoning issimilar to that of lemma 1.
First #c = #d = 1, from#S = 1.
Since we have Bs rule, c occurs on the left ofd and all occurrences of a and b on the left of c getassigned A and B respectively.
Similarly all a and bon the right of c, get assigned to the complex category asdefined by F .
It follows that all symbols to the right ofd get combined by FP rule and those on the left by Bsrule.
Hence a symbol occurring n symbols to the right ofd must be matched by an occurrence n symbols to theright of the left-most symbol.For any k, let G4(k) be the CGR withR = {FP ,Bs } again, VT = {al ,hi \] 1 <~ i ~k } U{ci I1 ~<i <k} O {d,e}, and the lexiconF(b,) ={s, /a i /s ,},  F(al) =\[A,},l<~ i <~k,F(e,) ={S,/S,+I},I <i < k, F(d)  ={Sk},F (e) = {S/S a}.
ThenL (G, (k) )  = l a l "~a2 "2  - - -  a~"kdeb l " ' cx  ' ek-~ bk"kJfor any k. Note that #A i = #Ai -a.
This implies#b i = #a i .
The rest of the argument parallels that forL3 above .
Thus {FP, Bs } has the power to expressunbounded cross-serial dependencies.Now we can compare with Tree Adjoining Grammars(TAG).
s A TAG without local constraints cannot generateL3.
A TAG with local constraints can generate this, but itcannot generate L6 = {am b" c m d" \] m,n  >-1}.
L4(2) canbe transformed into L6 by the homomorphism erasingca,d and e. TAG languages are closed under homomor-phisms and thus the categorial anguage L4(2) is not aTAG language.
TAG languages exhibit only limited crossserial dependencies.
Thus, though TAG Languages andCG languages hare some properties like linear growth,semilinearity, generation of all context-free languages,limited context sensitive power, and Parikh boundedness,they are different in their generative capacities.Acknowledgements  We would like to thankWeiguo Wang and Dawei Dai for helpful discussions.References1.
Yehoshua Bar-Hillel, "On syntactical categories,"Journal of Symbolic Logic, vol.
15 , pp.
1-16 , 1950.Reprinted in Bar-Hillel (1964), pp.
19-37.2.
Haim Gaifman, Information and Control, vol.
8, pp.304-337, 1965.3.
Yehoshua Bar-Hillel, Language and Information,Addison-Wesley, Reading, Mass., 1964.4.
Anthony E. Ades and Mark J. Steedman, "On theorder of words," Linguistics and Philosophy, vol.
4,pp.
517-558, 1982.5.
Joyce Friedman, Dawei Dai, and Weiguo Wang,"Weak Generative Capacity of Parenthesis-freeCategorial Grammars," Technical Report #86-1,Dept.
of Computer Science, Boston University, 1986.6.
Meera Blattner and Michel Latteux, "Parikh-Bounded Languages," in Automata, Languages andProgramming, LNCS 115, ed.
Shimon Even andOded Kariv, Springer-Verlag, 1981.7.
Harry R. Lewis and Christos H. Papadimitriou, Ele-ments of the Theory of Computation, Prentice-Hall, 1981.8.
Aravind K. Joshi, "Factoring reeursion and depen-dencies: an aspect of tree adjoining grammars and acomparison of some formal properties of TAGs,GPSGs, PLGs and LFGs," 21st Ann.
Meeting of theAssn.
for Comp.
Linguistics, 1983.77
