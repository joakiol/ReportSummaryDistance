Proceedings of the 6th Workshop on Ontologies and Lexical Resources (Ontolex 2010), pages 48?57,Beijing, August 2010Intrinsic Property-based Taxonomic Relation Extraction from CategoryStructureDongHyun Choi and Eun-Kyung Kim and Sang-Ah Shim and Key-Sun ChoiSemantic Web Research CenterKAISTcdh4696, kekeeo, sashim, kschoi@world.kaist.ac.krAbstractWe propose a novel algorithm to ex-tract taxonomic (or isa/instanceOf ) rela-tions from category structure by classi-fying each category link.
Previous algo-rithms mainly focus on lexical patterns ofcategory names to classify whether or nota given category link is an isa/instanceOf.In contrast, our algorithm extracts intrin-sic properties that represent the definitionof given category name, and uses thoseproperties to classify each category link.Experimental result shows about 5 to 18 %increase in F-Measure, compared to otherexisting systems.1 Introduction1.1 Problem DescriptionTaxonomies are a crucial component of many ap-plications, including document clustering (Hothoet al, 2003) and database search (Byron et al,1997).
Due to their importance, many studieshave examined methods of extracting taxonomicrelations automatically - either from unstructuredtext (Cimiano et al, 2005; Cimiano(2) et al,2005), or from structured data such as Wikipediacategory structures (Ponzetto and Strube, 2007;Nastase and Strube, 2008; Suchanek et al, 2007).Many researchers have attempted to obtain tax-onomic relations from unstructured text to con-stuct a taxonomy, but in most cases such a systemshows poor precision and low recall.
Approachesto extracting taxonomic relations from structureddata show relatively high performance, but to ob-tain a taxonomy these require huge amounts ofstructured data.
Recently, as large amounts ofstructured data such as the infoboxes and categorystructures of Wikipedia or DBpedia (Auer et al,2007) have become available, an obstacle to thisapproach has been removed.Although a category structure does containsome kind of hierarchical structure, in many casesit cannot be considered as an isa/instanceOf hier-archy.
For example, the article ?Pioneer 111?
onWikipedia is categorized under ?Radio frequencypropagation?, which is related to the ?Pioneer 11?but is obviously not a taxonomical parent of ?Pio-neer 11?.In this paper, we propose a method for extract-ing taxonomic relations from a given categorystructure.
More precisely, for a category link inthe given category structure, the algorithm deter-mines whether the link could be considered anisa/instanceOf relation, or if the link simply rep-resents a broader term/narrower term/related termrelation.
For a given category link <A, B>, inwhich A is the upper category name and B is thelower category/article name, we attempt to get thedefinition of B to classify the link.
More precisely,we analyze the upper categories of B from thegiven category structure, to get tokens that rep-resents the definition of B.
Once we get the to-kens, we compare the tokens with the name of A,to classify the given category link.
We call thetokens that represent the definition of B ?intrin-sic tokens?
of B; a more precise definition will bepresented in section 3.1.To show the validity of this approach, the algo-rithm is applied to Wikipedia?s category structure,1Pioneer 11 was the probe for second mission of the Pio-neer program (after its sister probe Pioneer 10) to investigateJupiter and the outer solar system.48to obtain taxonomic relations there.
Wikipedia?scategory structure consists of categories, articletitles and links between them.
A Wikipedia arti-cle represents one document, and a category is thegrouping of those articles by non-categorization-expert users.
Each category has its own name,which is assigned by these users.Although Wikipedia?s category structure isbuilt by non-experts, it can be thought of as reli-able since it is refined by many people, and it con-tains 35,904,116 category links between 764,581categories and 6,301,594 articles, making it a per-fect target for an experimental taxonomic relationextraction algorithm.After describing related works in section 2, ourdetailed algorithm is proposed in section 3, and itsexperimental results are discussed in section 4.
Insection 5, we make some conclusions and propos-als for future work.2 Related WorksMethods of taxonomic relation extraction can bedivided into two broad categories depending onthe input: unstructured or structured data.
The ex-traction of taxonomic relations from unstructuredtext is mainly carried out using lexical patterns onthe text.
The Hearst pattern (Hearst, 1992) is usedin many pattern-based approaches, such as Cimi-ano (2005).In addition, there has been research that at-tempted to use existing structured data, like theWikipedia category structure or the contents of athesaurus.
The system of Ponzetto (2007) deter-mines whether or not the given Wikipedia cate-gory link is an isa/instanceOf relation by applyinga set of rules to the category names, while Nas-tase (2008) defined lexical patterns on categorynames, in addition to Ponzetto (2007).
The YAGOsystem (Suchanek et al, 2007) attempts to classifywhether the given article-category link representsan instanceOf relation by checking the pluralityof the upper category name.The algorithm proposed in this paper focuseson the structured data, mainly the category struc-ture, to gather isa/instanceOf relations.
Thesystem gets a category structure as input, andclassifies each category link inside the categorystructure according to whether it represents anisa/instanceOf relation or not.3 Algorithm DescriptionIn section 3.1, we introduce the necessary defini-tions for isa/instanceOf relations and the requiredterms to describe the algorithm.
In section 3.2,we will discuss the hypotheses based on the defi-nitions described in section 3.1.
Next, two binaryclassification algorithms will be proposed basedon the hypotheses, which will determine whetherthe given category link is an isa/instanceOf rela-tion or not.3.1 DefinitionsTo define isa and instanceOf relations, Mi-zoguchi (2004) introduces the concept of intrin-sic property and other related concepts, which areshown in the following definitions 1, 2 and 3:Definition 1: Intrinsic property.
The intrinsicproperty of a thing is a property which is essen-tial to the thing and it loses its identity when theproperty changes.Definition 2: The ontological definition of aclass.
A thing which is a conceptualization of a setX can be a class if and only if each element x of Xbelongs to the class X if and only if the intrinsicproperty of x satisfies the intensional condition ofX.
And, then and only then, <x instanceOf X>holds.Definition 3: isa relation.
isa relation holdsonly between classes.
<class A isa class B>holds iff the instance set of A is a subset of theinstance set of B.In addition, we define the following terms foralgorithm description:Definition 4: intrinsic token.
Token 2 T is anintrinsic token of B iff T represents the intrinsicproperty of B.For example, when B is ?Pioneer 11?, the in-trinsic tokens of B are ?spacecraft?, ?escape3?,?Jupiter?, etc.2For example, token is a segmented term in categorynames of Wikipedia category structure.3Since the main purpose of Pioneer 11 is to escape fromthe solar system and fly into the deep space, we thought ?es-cape?
is the intrinsic token of ?Pioneer 11?.
In the same con-text, ?spacecraft escaping the solar system?
is a taxonomicalparent of ?Pioneer 11?.49Definition 5: category link.
<A, B> is calledcategory link iff A is a category of B, and that factis explicitly stated in the given category structure.Consider the example of Wikipedia.
If B isan article, <A, B> is called an article-categorylink, and if B is a category, <A, B> is called acategory-category link.
The article is a catego-rized terminal object.Definition 6: category structure.
Categorystructure is the collection of category links, itscomponent categories, and categorized terminalobjects.Definition 7: upper category set.
The uppercategory set of B is defined as the set of uppercategories of B up to n step in the given categorystructure, and it is expressed as U(B, n).For example, if the two category links <Jupiterspacecraft, Pioneer 11> and <Jupiter, Jupiterspacecraft> exist inside the given category struc-ture, then Jupiter spacecraft is the element ofU(Pioneer 11, 1), while Jupiter is not.Figure 1 shows the category structure ofU(Pioneer 11, 3),which we refer to throughoutthis paper to explain our algorithm.3.2 HypothesesAccording to the classical Aristotelian view, cat-egories are discrete entities characterized by a setof properties shared by their members.
Thus, wemake the following lemmas:Lemma 1: If some objects are grouped into thesame category, then they share at least more thanone property.According to definition 2, if x is an instanceOfX, then the intrinsic property of x satisfies the def-inition of X.
Since the intrinsic property is theproperty related to the definition of the object, wecan assume that in most categorization systems,the intrinsic property is the most frequently sharedproperty among those objects categorized in thesame category.Lemma 2.
Intrinsic properties are shared mostfrequently among objects in a category.Lemma 2 means that, for example, the intrin-sic token T of B will show up frequently amongthe names of upper categories of B.
But lemma2 does NOT mean that non-intrinsic tokens willnot frequently appear among the upper categorynames.
For example, the elements of U(Pioneer11, 3) from the Wikipedia category structure con-tain the token ?spacecraft?
4 times, but it alsocontain token ?technology?
3 times.
Therefore,we cannot directly use the token frequency to de-termine which one is the intrinsic token: rather,we make another assumption to get the ?intrinsicscore?
for each token.Lemma 3.
Intrinsic tokens co-occur frequentlywith other intrinsic tokens.Lemma 3 means that, if T1 is an intrinsic to-ken of B, and T2 co-occurs with T1 inside theupper category names of B, then there is a highprobability that T2 is also an intrinsic token of B.For example, for the category link<Jupiter space-craft, Pioneer 11>, if the token ?spacecraft?
is anintrinsic token of ?Pioneer 11?, we can assumethat the token ?Jupiter?
is also an intrinsic tokenof ?Pioneer 11?.
Since some intrinsic tokens thatare appropriate as modifiers are not appropriate ashead words ?
for example, if the token ?Jupiter?is used as a modifier, it will be a good intrinsictoken of ?Pioneer 11?, but if it is used as a headword, choosing it as the intrinsic token of ?Pio-neer 11?
would be bad choice ?
thus, we distin-guish between intrinsic score as head word, andintrinsic score as modifier.
If the intrinsic scoreof token T is high for article/category name B,then it means the probability is high that T is anintrinsic token of B.
We assumed that only theco-occurrences as head word and its modifier aremeaningful.
Corollary 3-1.
If a modifier co-occurs with a head word, and the head word isfrequently an intrinsic token of an object, then themodifier is an intrinsic token of the object.Corollary 3-2.
If a head word co-occurs with amodifier, and the modifier is frequently an intrin-sic token of an object, then the head word is anintrinsic token of the object.3.3 Proposed AlgorithmBased on the hypotheses proposed in section 3.2,we propose two algorithms to get the intrinsicscore of each token in the following sections.
Thefirst algorithm, a counting-based approach, usesonly lemmas 1 and 2, and it will be shown whythis algorithm will not work.
The second algo-rithm, a graph-based approach, uses all of the hy-50Figure 1: category structure of U(Pioneer 11, 3) from Wikipedia.potheses to solve the problem.For the given category link <A, B>, the intrin-sic score of each token will be calculated basedon its frequency inside U(B, n) while separatelycounting the token?s intrinsic score as modifiersand the intrinsic score as head word.
We herepropose a scoring mechanism based on the HITSpage ranking algorithm (Kleinberg, 1999): For thegiven category link <A, B>, we first construct a?modifier graph?
using U(B, n), and then calcu-late the intrinsic score for each token in U(B, n)using the HITS algorithm.
After that, the intrinsicscore of each token will be used to calculate thescore of <A, B>.
If the score is higher than somepredefined threshold, then<A, B> is classified asan isa/instanceOf link, and otherwise it is not.3.3.1 Counting-based ApproachThis method utilizes lemmas 1 and 2 to get theintrinsic score for each token, and then uses thescore to determine whether the given category linkis an isa/instanceOf link or not.To utilize this approach, we first score each to-ken from U(B, n) by counting the frequency ofeach token from the words of U(B, n).
Table 1shows the score of each token from U(Pioneer, 3)for figure 1.For the ?Pioneer 11?
article, there are sevencategory links in Wikipedia?s category struc-ture: <1973 in space exploration, Pioneer 11>,<Inactive extraterrestrial probes, Pioneer 11>,<Jupiter spacecraft, Pioneer 11>, <Pioneer pro-Token Scorespace 6exploration 5spacecraft, probe 41973, technology, year, radio, solar,system, nasa3vehicle, radio, program, 1970s,extraterrestrial, transport, Saturn,Jupiter2escape, inactive, frequency, propa-gation, pioneer, ...1Table 1: Score for each token from U(Pioneer 11,3)gram, Pioneer 11>, <Radio frequency propaga-tion, Pioneer 11>, <Saturn spacecraft, Pioneer11>, and <Spacecraft escaping the Solar System,Pioneer 11>, as shown in figure 1.
The scoresof each link using a counting-based approach areacquired by adding the scores for each token in ta-ble 1 that is matched with single term occurrencein category names.
Table 2 shows the result ofcounting-based approach.Although the link <1973 in space exploration,Pioneer 11> receives the highest score amongthose seven links, obviously the link does not rep-resent isa/instanceOf relation.
This shows thatthe counting approach does not guarantee accu-racy.
Table 1 shows that non-intrinsic tokens oc-cur frequently (such as ?technology?
in this exam-51Article-Category Links Score<1973 in space exploration,Pioneer 11>3+6+5=14<Spacecraft escaping the So-lar System, Pioneer 11>4+1+3+3=11<Inactive extraterrestrialprobes, Pioneer 11>,1+2+4=7<Saturn spacecraft, Pioneer11>2+4=6<Jupiter spacecraft, Pioneer11>2+4=6<Radio frequency propaga-tion, Pioneer 11>2+1+1=4<Pioneer program, Pioneer11>1+2=3Table 2: Scoring each category links using count-ing approachple).
We call this an ?overloaded existence?
error.To solve the problems described above, we applyLemma 3, Corollary 3-1 and 3-2 to our calcula-tion, and propose a second algorithm based on agraph-based approach, which will be explained inthe next section.3.3.2 Graph-based ApproachIn this section, we propose a graph-based ap-proach to get the intrinsic score of each token.
Todo this, we first construct a modifier graph fromthe words of U(B, n) for a given category link<A,B>, with each node representing a token from theelements of U(B, n), and each edge representingthe co-occurrence of tokens inside each elementof U(B, n).
Next, we apply a well-known graphanalysis algorithm to that graph, and get the in-trinsic scores for each node.
Finally, we use thescore of each node to get the score of the givencategory link.Constructing modifier graph Modifier graphconstructed here is defined as a directed graph,in which each node represents each token insideU(B, n), and each edge represents a co-occurrenceas modifier-head relation inside each categoryname of U(B, n).
Using the subset of U(Pioneer11, 3), we get the modifier graph of figure 2.4Figure 2: Modifier graph of the subset ofU(Pioneer 11, 3): {Spacecraft escaping the SolarSystem, Jupiter spacecraft, 1973 in space explo-ration, NASA probes, Saturn}Calculating Intrinsic score After constructingthe modifier graph, we apply the HITS algorithmto the modifier graph.
Since the HITS algorithmcannot reflect the weight of edges, a modified ver-sion of the HITS algorithm (Mihalcea and Tarau,2005) is adopted:Authority(Vi) =?Vj?In(Vi)eji ?
Hub(Vj) (1)Hub(Vi) =?Vj?Out(Vi)eij ?
Authority(Vj) (2)In(Vi) represents the set of vertices which hasthe outgoing edge to Vi, Out(Vi) represents theset of vertices which has the incoming edge fromVi, and eij represents the weight of the edge fromVi to Vj .
The algorithm for calculating the scoresis as follows:1.
Initialize the authority and hub score of eachnode to one.2.
Calculate hub score of each node using theformula 2.3.
Calculate authority score of each node usingthe formula 1.4.
Normalize authority & hub score so that thesum of authority score of every node and the sumof hub score of every node are one.4We used the full set of U(B, n) to create the modifiergraph for the full scale of experimentation in section 4.525.
Iterate from step 2 until the score of everynode converges.In the modifier graph, Authority score can bemapped to the intrinsic score of a node(token) asa head word, and Hub score can be mapped to theintrinsic score of a node(token) as a modifier.Scoring Category Link Now, we can score theinput category link.
The score of category link<A, B> is given as follows:Score(< A,B >)= Authority(h) +?a in mod(A)Hub(a) (3)Here, Score(< A,B >) represents the finalscore of category link <A, B>, h represents thehead word of A, and mod(A) represents the setof modifiers of A.
Since the score of head wordand modifiers are calculated based on the uppercategories of B, this formula can integrate bothmeaning of A and B to classify whether the link isisa/instanceOf.
Table 3 shows the scores of sevenarticle-category links from table 2, calculated us-ing the graph-based approach.Article-Category Links Score<Spacecraft escaping the SolarSystem, Pioneer 11>0.5972<1973 in space exploration, Pio-neer 11>0.4018<Jupiter spacecraft, Pioneer 11> 0.2105<Saturn spacecraft, Pioneer 11> 0.2105<Inactive extraterrestrial probes,Pioneer 11>,0.0440<Radio frequency propagation, Pi-oneer 11>0.0440<Pioneer program, Pioneer 11> 0.0132Table 3: Scoring each category links using graph-based approachThe link <Spacecraft escaping the Solar Sys-tem, Pioneer 11> gets the highest score, whilethe link <1973 in space exploration, Pioneer11>, which got the highest score using counting-based approach, gets the second place.
Thatproves the algorithm?s effectiveness for distin-guishing isa/instanceOf link from other non-isa/instanceOf links.
But there is still a problem -although the first-ranked link is a isa/instanceOflink, the second-ranked is not, while the thirdand fourth-ranked links (<Jupiter spacecraft, Pi-oneer 11>, <Saturn spacecraft, Pioneer 11> areisa/instanceOf links.
To get a better result, wepropose four additional modifications in the nextsecton.3.4 Additional Modifications to theGraph-based ApproachTo better reflect the category structure and theproperty of category names to the scoring mech-anism, the following four modifications can bemade.
Each of these modification could be ap-plied independently to the original algorithm de-scribed in section 3.3.2.Authority Impact Factor (I).
In most cases,a category name contains only one head word,while it contains 2 or more modifiers.
As Formula(3) is just the linear sum of the hub scores of eachmodifier and the authority score of the head word,the resultant score is more affected by hub score,because the number of modifiers is normally big-ger than the number of head words.
To balancethe effect of hub score and authority score, we in-troduce authority impact factor I:Score(< A,B >)= I ?
Authority(h) +?a in mod(A)Hub(a) (4)The authority impact factor is defined as the aver-age number of modifiers in the elements of U(B,n), since normally each category name containsonly one head word.Dummy Node (D).
There are some categorynames that contain only one head word and nomodifier, thus making it impossible to create themodifier graph.5 Thus, for such category nameswe introduce dummy nodes to include their infor-mation into the modifier graph.
In figure 3, youcan observe the introduction of the dummy node?dummy0?.5For example, in figure 2, we cannot find node ?Saturn?while U(Pioneer 11, 3) contains category name ?Saturn?53Figure 3: Modifier graph of the subset ofU(Pioneer 11, 3), with dummy node.Category Distance Factor (C).
We define thecategory distance between category/article A andB as the minimum number of category links re-quired to reach B from A by following the cate-gory links.
Category distance factor C of a cat-egory name A from U(B, n) is the reverse of thecategory distance between A and B.
We assumedthat, if the distance between A and B is higher,then it is less probable for A to have the intrinsicproperty of B.
Based on this assumption, categorydistance factor C of category name A is multipliedby the edge score of an edge generated by cate-gory name A.Figure 4 shows the modifier graph of figure 2that applies the category distance factor.
Sincethe category distance between ?Pioneer 11?
and?NASA probe?
is two, the score of edge (NASA,probe) is 1/2 = 0.5.Figure 4: Modifier graph of the subset ofU(Pioneer 11, 3), with category distance factor.Modifier Number Normalization Factor (W).In the algorithm of building a modifier graph, thehead word of a category name with many mod-ifiers has the advantage over the head word of acategory name with few modifiers, as if a cate-gory name contains n modifiers it will generaten edges incoming to its head word.
To overcomethis problem, we defined the modifier number nor-malization factor W for each category name: it isdefined as the reverse of the number of modifiersin the category name, and it is multiplied by theedge score of an edge, generated by the categoryname, of the modifier graph.
Figure 5 shows themodifier graph of figure 2 with the modifier num-ber normalization factor.
Since the category name?Spacecraft escaping the Solar System?
has threemodifiers, the scores of edge (escape, Pioneer 11),(solar, Pioneer 11) and (system, Pioneer 11) are1/3 = 0.33.Figure 5: Modifier graph of the subset ofU(Pioneer 11, 3), with modifier number normal-ization factor.Removing roleOf Relation (E).
To distinguishthe roleOf relation from taxonomic relation,we in-troduce a new E. This feature simply classify thelink <A, B> as non-instanceOf if category nameA has endings like -er, -ers, -or, -ors, -ian, -ians.Since only the terminal node can represent thename of person in category structure, we appliedthis feature to classify only article-category links.One of the example from Wikipedia which shouldbe judged as roleOf relation is <La Liga foot-baller, Cristiano Ronaldo>.After applying above four modifications, we getthe result in table 4.
Now, top 3 links all representinstanceOf links.54Article-Category Links Score<Spacecraft escaping the SolarSystem, Pioneer 11>2.1416<Jupiter spacecraft, Pioneer 11> 2.1286<Saturn spacecraft, Pioneer 11> 2.1286<1973 in space exploration, Pio-neer 11>0.0241<Pioneer program, Pioneer 11> 0.0062<Inactive extraterrestrial probes,Pioneer 11>,0.0026<Radio frequency propagation, Pi-oneer 11>0.0021Table 4: Scoring each category links using graph-based approach with four modifications.4 ImplementationWe implemented a combinatory system that com-bines the algorithm suggested by this paper withexisting lexical pattern-based algorithms.
Moreprecisely, we set two parameters?
and ?, in which?
has a consistently higher value than ?.
If scoreof the given category link, which is retrieved bythe proposed system, is higher than ?, it is classi-fied as isa/instanceOf.
If the score is higher than ?but lower or equal to ?, the system uses an exist-ing lexical pattern-based algorithm to classify thelink.
If the score is lower than or equal to ?, it isclassified as not isa/instanceOf.To test the system, we used Wikipedia?scategory structure, which contains 1,160,248category-category links and 15,778,801 article-category links between 505,277 categories and6,808,543 articles.
We extract category links fromthe Wikipedia category structure and annotatethem to construct the test corpus.
During the pro-cess of choosing category links, we intentionallyremoved category links with names containingany of the following words: ?stub?, ?wikiproject?,?wikipedia?, ?template?, ?article?, ?start-class?,?category?, ?redirect?, ?mediawiki?, ?user?, ?por-tal?, ?page?, and ?list?.
These words are normallyused to represent Wikipedia maintenance pages.After we remove the links described before, werandomly choose 3,951 category-category linksand 1,688 article-category links.
Two annotatorsworked separately to annotate whether or not thegiven link is an isa/instanceOf link, and in theevent of conflict they would discuss the case andmake a final decision.We carried out experiments on category-category link set and article-category link set sep-arately, since their characteristics are different.We assumed that the taxonomic relation in acategory-category link is an isa link, while the tax-onomic relation in an article-category link is an in-stanceOf link.
To acquire the upper category set,we set n=3 throughout the experiment.
For headword extraction, the method of Collins (1999) isused, and for lemmatization we used the Lingpipetoolkit (Alias-i, 2008).4.1 Experiments on category-category linkWe divided the 3,951 category-category links intotwo equally-sized sets, and used one set as a train-ing set and the other one as a test set.
The trainingset was used to identify the ?
and ?
values forisa link classification: in other words, the ?
and?
values that showed the best performance whenapplied to training set were selected as the actualparameters used by the system.
As Wikipedia?scategory structure contains a huge number of cat-egory links, precision is more important than re-call.
As recall cannot be ignored, we chose theparameters that gave the highest precision on thetraining set, while giving a recall of at least 0.7.Also, we carried out experiments on three base-line systems.The first one determined every linkas an isa link.
The second one applied the headword matching rule (M) only, which says that forcategory-category link<A, B>, if the head wordsof A and B are the same, then <A, B> shouldbe classified as an isa link.
The third one appliesthe method of Ponzetto (P) (Ponzetto and Strube,2007).
The ruleset of Ponzetto includes Headword matching rule, Modifier-head word match-ing rule(Ex.
<Crime, Crime Comics>: Headword of ?Crime?
and modifier of ?Crime Comics?matches: Not isa), and the plurality rule used byYAGO system(Explained at the next chapter)).Table 5 shows the baseline results, the resultsof existing systems, and our best results on thetest set.
Usage of authority score is representedas A, and usage of hub score is represented as H.Also,we did experiments on all possible combina-55tion of features A, H, I, D, C, W, M, P. For exam-ple, Comb(AHICDM) means that we used featureA, H, I, C, D to construct the modifier graph andscore the category link, and for those whose scoreis between ?
and ?
we used head word matchingrule to classify them.
At the table, P stands forPrecision, R stands for Recall, and F stands forF-measure.Setting P R FBaseline1 0.7277 1.0 0.8424Baseline2(M) 0.9480 0.6335 0.7595Baseline3(P) 0.9232 0.6516 0.7640Comb1(AHM) 0.9223 0.7350 0.8181Comb2(AHP) 0.8606 0.7211 0.7847Comb3(AHICM) 0.9325 0.7302 0.8190Table 5: Experimental result on test set ofcategory-category links: Baseline vs. System bestresultAs you can observe, the precision of head-wordmatching (M) is high, meaning that in many casesthe head word represents the intrinsic property.Also, its recall shows that for category-categorylinks, at least more than half of the categories arecategorized using the intrinsic property of the ob-jects grouped within them, which strongly sup-ports lemma 2 in section 3.2.
The comparison ofsetting M and AHM, P and AHP shows that theintrinsic-property based approach increases recallof the existing system about 7-10 %, at the cost ofof 2-6 % precision loss.
This shows that, ratherthan looking only at the given category link andanalyzing patterns on its name, by gathering in-formation from the upper category set, we wereable to significantly increase recall.
However, italso shows that some ?garbage?
information is in-troduced through the upper category set, resultingin a 2-6 % precision loss.
The best system showsabout a 8-10 % increase in recall, with compara-bly good precision compared to the two baselinesystems.4.2 Experiments on article-category linkIn a similar manner to the experiments oncategory-category links, we divided the 1,688article-category links into two equally-sized sets,and used one set as a training set and the other oneas a test set.
The training set is used to determinethe parameters for instanceOf link classification.The parameter setting procedure was the same asin the experiments on category-category links, ex-cept that we used the article-category links for theprocedure.
In this experiment, we also adaptedthree baseline systems.
The first system classi-fies every link as an instanceOf link, the secondsystem adapts the head word matching rule (M),and the third system applies the rule from Yago(Y) (Suchanek et al, 2007), which states that forarticle-category link <A, B>, if A is plural thenthe link could be classified as an instanceOf rela-tion.Setting P R FBaseline1 0.5261 1.0 0.6894Baseline2(M) 0.7451 0.0856 0.1535Baseline3(Y) 0.6036 0.5315 0.5653Comb1(AHY) 0.6082 0.6718 0.6381Comb2(ADWEY) 0.7581 0.7410 0.7494Table 6: Experimental result on test set of article-category links on some settingsTable 6 shows the baseline results and the bestresults of the combinatory system.
As you can ob-serve from the above table, M (head word match-ing rule) does not work well in article-categorylinks, although its precision is still high or compa-rable to that of other methods.
Since in most casesan article represents one instance, in many casesthey have their own name, making the recall ofthe head word matching rule extremely low.
Also,the combination system 1 (AHY) shows compa-rable precision with Y but 14 % higher in reall,resulting 7 % increse in F-Measure.The best sys-tem shows about 18 % increase in F-measure, es-pecially 15 % precision increase and 21 % recallincrease compared to YAGO system.5 Conclusion and Future workIn this paper, we explored a intrinsic token-basedapproach to the problem of classifying whether acategory link is a taxonomic relation or not.
Un-like previous works that classify category links,we acquired the definition of a lower category56name by extracting intrinsic tokens and usingthem to score the given category link, rather thanby applying predefined lexical rules to the cat-egory link.
Our intrinsic token-based approachleads to a significant improvement in F-measurecompared to previous state-of-the-art systems.One possible future direction for research is au-tomatic instance population, by using those ex-tracted intrinsic tokens and gathering taxonomicrelations from the category structure.AcknowledgmentsThis work was supported by the IndustrialStrategic Technology Development Program(10035348, Development of a Cognitive Planningand Learning Model for Mobile Platforms) fundedby the Ministry of Knowledge Economy(MKE,Korea).ReferencesSoumen C. Byron, Byron Dom, Rakesh Agrawal, andPrabhakar Raghavan.
1997.
Using taxonomy, dis-criminants, and signatures for navigating in textdatabases.
Proceedings of the international confer-ence on very large data bases, 446?455.Philipp Cimiano, Andreas Hotho, and Steffen Staab.2005.
Learning Concept Hierarchies from Text Cor-pora using Formal Concept Analysis.
Journal of Ar-tificial Intelligence Research, 24:305?339.Philipp Cimiano, Aleksander Pivk, Lars Schmidt-Thieme, and Steffen Staab.
2005.
Learning Tax-onomic Relations from Heterogeneous Sources ofEvidence.
Ontology Learning from Text: Methods,Evaluation and Applications, 59?73.Marti A. Hearst.
1992.
Automatic Acquisition of Hy-ponyms from Large Text Corpora.
Proceedings ofthe 14th conference on Computational linguistics,2:539?545.Andreas Hotho, Steffen Staab, and Gerd Stumme.2003.
Ontologies improve text document cluster-ing.
Proceedings of the IEEE International Confer-ence on Data Mining, 541?544.Jon M. Kleinberg.
1999.
Authoritative sources ina hyperlinked environment.
Journal of the ACM,46(5):604?632Simone P. Ponzetto, and Michael Strube.
2007.
Deriv-ing a Large Scale Taxonomy from Wikipedia.
Pro-ceedings of the AAAI07.Vivi Nastase, and Michael Strube.
2008.
DecodingWikipedia category names for knowledge acquisi-tion .
Proceedings of the AAAI08.Riichiro Mizoguchi.
2004.
Part 3: Advanced courseof ontological engineering.
New Generation Com-puting, 22(2): 193?220Rada Mihalcea, and Paul Tarau.
2005.
A Language In-dependent Algorithm for Single and Multiple Doc-ument Summarization.
Proceedings of IJCNLP2005.Ian Niles, and Adam Pease.
2003.
Linking Lexi-cons and Ontologies: Mapping WordNet to the Sug-gested Upper Merged Ontology.
Proceedings of theIEEE International Conference on Information andKnowledge Engineering.Soeren Auer, Christian Bizer, Georgi Kobilarov, JensLehmann, Richard Cyganiak, and Zachary Ives.2007.
DBpedia: A Nucleus for a Web ofOpen Data.
Lecture Notes in Computer Science,4825/2007:722?735.Fabian M. Suchanek, Gjergji Kasneci, and GerhardWeikum.
2007.
YAGO: A Core of SemanticKnowledge Unifying WordNet and Wikipedia Pro-ceedings of the 16th international conference onWorld Wide Web, 697?706.Michael Collins.
1999.
Head-driven Statistical Mod-els for Natural Language Parsing.
University ofPennsylvania PhD Thesis.Alias-i.
2008.
LingPipe 3.9.1. http://alias-i.com/lingpipe.57
