Proceedings of the First Workshop on Computational Approaches to Compound Analysis, pages 20?30,Dublin, Ireland, August 24 2014.Automatic Compound Processing: Compound Splitting and SemanticAnalysis for Afrikaans and DutchBen VerhoevenCLiPS - Computational LinguisticsUniversity of AntwerpAntwerp, Belgiumben.verhoeven@uantwerp.beWalter DaelemansCLiPS - Computational LinguisticsUniversity of AntwerpAntwerp, Belgiumwalter.daelemans@uantwerp.beMenno van ZaanenTiCC, School of HumanitiesTilburg UniversityTilburg, the Netherlandsmvzaanen@uvt.nlGerhard van HuyssteenCentre for Text Technology (CTexT)North-West UniversityPotchefstroom, South Africagerhard.vanhuyssteen@nwu.ac.zaAbstractCompounding, the process of combining several simplex words into a complex whole, is a pro-ductive process in a wide range of languages.
In particular, concatenative compounding, inwhich the components are ?glued?
together, leads to problems, for instance, in computationaltools that rely on a predefined lexicon.
Here we present the AuCoPro project, which focuseson compounding in the closely related languages Afrikaans and Dutch.
The project consists ofsubprojects focusing on compound splitting (identifying the boundaries of the components) andcompound semantics (identifying semantic relations between the components).
We describe thedeveloped datasets as well as results showing the effectiveness of the developed datasets.1 IntroductionIn many human language technology applications (e.g.
machine translators and spelling checkers), manyconcatenatively written compounds are processed incorrectly.
One of the reasons for this is that theseapplications rely on a predefined lexicon and the productive nature of the process of compound formationautomatically results in incomplete lexicons.
For example, consider the novel Afrikaans (Afr.)
compoundministerskatkis ?treasury of a minister?
that should be segmented as minister+skatkis minister+treasury.Should it be incorrectly segmented as minister s+kat+kis minister LINK+cat+coffin1(where LINKrefers to a linking morpheme), one would get the (possible but improbable) interpretation ?coffin of aminister?s cat?.
From a technological perspective, deficiencies related to automatic compound splitting(also known as compound segmentation) are particularly problematic, since many other technologies(such as morphological analyzers, or semantic parsers) might rely on highly accurate compound splitting.For more advanced natural language processing applications like information extraction, question an-swering and machine translation systems, proper semantic analysis of compounds might also be required.With semantic analysis of compounds we refer to the task of determining that the Dutch (Du.)
compoundkeuken+tafel kitchen+table construes ?table in kitchen?, while Du.
baby+tafel baby+table means ?tablefor a baby?
(and not, fatally so, *?table in a baby?).
Internationally, research on automatic compoundanalysis has focused almost exclusively on English; very little work in this regard has been done forother languages (see section 4.1).Concatenative compounding is a highly productive process in many languages of the world, such asWest-Germanic languages (Afrikaans, Dutch, Frisian, German, and to a far lesser extent English), NordicThis work is licenced under a Creative Commons Attribution 4.0 International License.
Page numbers and proceedings footerare added by the organizers.
License details: http://creativecommons.org/licenses/by/4.0/1Note that compound boundaries are marked using a ?+?
sign and the start of a linking morpheme is indicated by an ?
?sign.20languages (Danish, Icelandic, Norwegian, and Swedish) and Modern Greek; our focus in this researchis only on Afrikaans and Dutch.
Next to derivation, the process of right-headed, recursive compoundingis the most productive word-formation process in these two languages.
While almost all parts-of-speechcategories can be found as components of compounds, noun+noun compounds are by far the most fre-quent type, while noun+verb compounding is generally considered to be non-productive in Germaniclanguages (Don, 2009, p. 378).
Components of a compound sometimes need to be ?glued?
togetherusing linking morphemes.
The occurrence of linking morphemes in Afrikaans and Dutch compounds iswell-known (Neijt et al., 2010), like Afr.
besigheid s+besluit business LINK+decision ?business deci-sion?.Besides regular compounding, one also finds, amongst others, phrasal compounds (e.g.
Afr.help-my-fris-lyk-hemp help-me-strong-look-shirt ?gym vest?
), (neo)classical compounds (e.g.
Afr.neuro+wetenskap neuro+science ?neuroscience?, or Du.
bio+logie bio+logy ?biology?
), separable ver-bal compounds (e.g.
Du.
op+bellen up+call ?to phone?
), reduplicative compounds (e.g.
Afr.
speel -+speel play LINK+play ?easily?
), and compounding compounds (i.e.
where the two left constituentsare normally a phrase, but joined in a compound through the right-most constituent, e.g.
Du.
on-der+water+camera under+water+camera ?under-water camera?).
Except for the latter, none of thesemarginal types of compounds were considered as data for any of the systems developed in this researchproject.In section 2 we provide an overview of the automatic compound processing (AuCoPro) project, whichforms the background of this research.
Sections 3 and 4 provide details of each of the subprojects relatingto compound splitting and semantic analysis, with details about related research, the development ofdatasets, and our experiments.
We conclude with a discussion of results and future work in section 5.2 Overview: The AuCoPro ProjectRunning from 2012 to 2013, the AuCoPro project was funded by the Dutch Language Union and theDepartment of Arts and Culture of the South African Government in a programme to support collab-orative research in human language technology between Belgium, The Netherlands and South Africa.Additional funding was provided by the South African National Research Foundation, and the EuropeanNetwork on Word Structure (NetWordS).
The partners involved in the project were the University ofAntwerp (Belgium), Tilburg University (The Netherlands), and North-West University (South Africa).The primary aim of the project was to develop resources (including annotation protocols, and trainingand testing data) for the development of robust compound splitters (subproject 1), and first-generationcompound analyzers (subproject 2) for Afrikaans and Dutch, through a combination of cross-languagetransfer (allowing technology recycling), data pooling, and various machine learning approaches.
In asubpart of subproject 2 we also aimed to gain insight in compound semantics by unifying perspectivesfrom computational semantics (?O S?eaghdha, 2008), typological studies (Scalise and Bisetto, 2009), andconstruction-based approaches to word-formation (specifically cognitive grammar (Langacker, 2008)and construction morphology (Booij, 2010)); the results of which can be found in Van Huyssteen (2014)and Van Huyssteen and Verhoeven (2014).Deliverables included eight peer-reviewed publications, a technical report on annotation guidelinesfor compound processing, and six datasets.
All deliverables are available in the open-source domain athttps://sourceforge.net/projects/aucopro, while more information about the projectis available at http://tinyurl.com/aucopro.3 Compound SplittingThe aim of subproject 1 was to develop datasets that can be used to build robust compound splittersfor Afrikaans and Dutch, or for a cross-lingual analysis of the use of compounds in the closely relatedlanguages Afrikaans and Dutch.
Based on existing datasets containing words that are morphologicallyanalyzed, we extracted (potential) compounds, removed unwanted morphological information, and re-analysed and corrected them.21In the AuCoPro datasets, compounds are analyzed in a shallow manner: no deep hierarchical orderingof components is performed.
Compounds consisting of more than two elements are annotated by indicat-ing the location of the boundaries, so for instance, Du.
bloem+boll en+veld flower+bulb LINK+field?bulb field?
consists of four components, viz.
bloem, boll-, -en-, and veld, without any indication oftheir syntagmatic relations.
The parts bloem, boll- and veld are all simplex words, which we will callconstituents.
Constituents are the meaningful parts of a compound.
These constituents are prototyp-ically independent words, but in some cases affixoids (i.e.
forms that are somewhere between a wordand an affix in its development) can also occur in compounds (e.g.
boer in Du.
krant en+boer newspa-per LINK+farmer ?newspaper seller?
does not have the literal meaning of farmer; see Booij (2010)).In some cases a word may undergo morphophonological changes in the context of a compound.
Forinstance, in the bloembollenveld example, boll- is an allomorph (or allograph) of bol ?bulb?.As mentioned above, some compounds require linking morphemes (indicated by LINK in the exam-ples above) to ?glue?
components together.
Besides ordinary linking morphemes like -e-, -en-, and -s- (inboth languages), we also defined hyphens as linking morphemes.
In the orthographies of Afrikaans andDutch in general a hyphen is used in cases of vowel collision, i.e.
between compound constituents whenthe left-hand constituent ends on a vowel, and the right-hand constituent begins with the same vowel, forexample Afr.
see -+eend sea LINK+duck ?seaduck?.We also mentioned above that marginal compound types such as phrasal compounds, reduplicativecompounds, separable verbal compounds, etc.
were not considered as part of the datasets.
Similarly, weexcluded synthetic compounds from the datasets when the right-hand element of a synthetic compoundis a non-word (e.g.
in Du.
blauw+ogig blue+eye-ADJR2?blue-eyed?, *ogig is not a valid independentword in Dutch).
However, for this subproject we accepted and annotated compounding compounds,since they can generally be split quite easily (e.g.
Afr.
drie+vlak+regering three+level+government?three-level government?
).To demonstrate the effectiveness of the developed datasets, we started building and evaluating com-pound splitters for both Dutch and Afrikaans based on the data only.
A compound splitter takes a wordas input, and provides as output the input string divided into valid compound components.
Note thatthese results are only to illustrate that these datasets can be used successfully as training data for suchsystems.
The actual results can potentially be improved, as the systems are not optimized.3.1 Related ResearchIn general, the problem of splitting compounds is found in a wide range of languages.
Some of theselanguages show non-concatenative compound formation (i.e.
compounds are written with whitespacesbetween constituents), such as English.
Compounds in these languages fall under the umbrella termmultiword expressions (MWEs), which also includes idioms and collocations.
Ramisch et al.
(2013)show that this is a quite active research field.Focusing on concatenative compounding (i.e.
where constituents are written conjunctively so that acompound is always written as a single string without any whitespaces), previous work on Afrikaans hasbeen performed in the context of the development of spelling checkers (Van Zaanen and Van Huyssteen,2002; Van Huyssteen and Van Zaanen, 2004).
Van Huyssteen and Van Zaanen (2004) describe a com-pound splitter for Afrikaans.
To our knowledge, no stand-alone compound splitter for Dutch is available.Research done in this field is over ten years old (e.g.
Pohlmann and Kraaij (1996)), uses expensive re-sources (e.g.
Ordelman et al.
(2003)), does complete morphological analysis (e.g.
De Pauw et al.
(2004)),and/or has not been released for re-use in the open-source domain.3.2 Dataset DevelopmentThe datasets developed during this subproject are based on compounds taken from existing (morpho-logically annotated) datasets.
For Dutch, a few morphologically annotated datasets exist, although nonefocus on compounds specifically.
The development of the Dutch dataset is based on the e-Lex dataset.32Adjectiviser.3This dataset was extended with a compound dataset extracted from CELEX by Lieve Macken (LT3, UGent).22The e-Lex dataset contains words annotated with more morphological information than required forour dataset, but it also contains morphologically annotated non-compound words.
After removing non-compound words (and removing duplicates), 71,274 potential Dutch compounds remained.For Afrikaans, the situation is more difficult.
No dataset containing compound boundary and linkingmorpheme boundary information is freely available.
The Afrikaans AuCoPro dataset is based on thePUK-Protea corpus as well as the CTexT Afrikaans spelling checking lexicon (CTexT, 2005; Pilon et al.,2008).
Both corpora do not describe any morphological information.
To identify potential compounds,a longest string matching algorithm (Van Huyssteen and Van Zaanen, 2004) is applied.
This algorithmidentifies compounds by searching for known (simplex) words from the left and right ends of the potentialcompound, taking the possibility of the occurrence of linking morphemes into account.
This algorithmseems to identify most compounds as well as some non-compounds, which resulted in a list of 77,651potential Afrikaans compounds.After this automatic collection and cleanup (for Dutch) and automatic identification and annotation (forAfrikaans), annotators checked each compound for correct linking morpheme and compound boundaries.For Afrikaans, seven annotators together checked 25,266 compounds.
For Dutch, two annotators checked26,000 potential compounds.
In the end, this resulted in 18,497 and 21,997 true compounds for Afrikaansand Dutch respectively.To be able to calculate inter-annotator agreement, subsets of approximately 1,000 words were an-notated by pairs of annotators.
For Dutch in total 6,000 words were used to calculate inter-annotatoragreement and for Afrikaans 12,818 words.
This leads to an average Cohen?s Kappa of 98.6 and 97.6 forAfrikaans and Dutch respectively.The annotators had access to an annotation manual (Verhoeven et al., 2014), which was developedspecifically for this project.
The manual is based on the annotation guidelines that were developedduring the CKarma project (CTexT, 2005; Pilon et al., 2008).
These initial guidelines only apply toAfrikaans, and was hence extended to handle Dutch compounds as well as more complicated casesnot foreseen in the original CKarma guidelines.
During the annotation process, regular discussionsbetween the annotators took place, which resulted in changes in the data and (minor) modifications tothe annotation guidelines.3.3 ExperimentsOne of the reasons for creating the compound splitting datasets is to show their usefulness in the de-velopment of automatic compound splitting systems.
These systems search for compound boundaries,effectively identifying the simplex words in compounds.
This information is essential, for instance, whendeveloping spelling correction systems or machine translation systems for languages that have productivecompound formation processes.As a classifier, we used the algorithm developed by Liang (1983).
This system, which is used asthe hyphenation method in the LATEX typesetting system, identifies letter combinations that either allowor disallow boundary breaks.
Even though the task of compound boundary detection is different fromhyphenation (or syllabification), the tasks are similar enough to use the same method.
Since the systemis trainable, instead of hyphenation breaks, compound boundaries are provided.Since no separate annotated gold standard test set is available, we performed leave-one-out evaluation(using all but one instance for training and the remaining instance for testing; all instances are evaluatedonce) using the full dataset.
This approach is preferred over, for instance, 10-fold cross validation, whicheach time removes 10% of the training data for testing.
Additionally, it does not depend on a ?lucky?selection of test data from the training data, as all compounds are tested.Evaluating the datasets using this system (which does not have any additional tuning parameters)results in classification accuracies of 88.28% and 91.48% on the word level for Afrikaans and Dutchrespectively.
We assume that further improvements are possible with alternative systems and parameteroptimization.234 Compound SemanticsThe automatic processing of the semantics of compounds (or other complex nominals) is a topic incomputational linguistics that, although it has been studied regularly in the past, cannot be considereda solved problem.
Although previous research was often promising, it also had an almost exclusivefocus on English noun-noun (NN) compounds.
In recent years, more languages have been studied (e.g.German (Hinrichs et al., 2013) and Italian (Celli and Nissim, 2009)), and this project added Dutch andAfrikaans to the list.It is worth noting that a number of different operationalizations of compound interpretation have beenstudied.
The most notable are semantic classification of the constituent relation according to a limitedset of semantic categories (e.g.
?O S?eaghdha (2008)), and the generation of possible paraphrases forthe compound that express its meaning more explicitly (Hendrickx et al., 2013).
Our study adopts theclassification model, in which the set of semantic relations to be predicted (the classification scheme) iscrucial.4.1 Related ResearchSeveral attempts have been made in the past to postulate appropriate classification schemes for noun-noun compound semantics.
These schemes are mainly inventory-based in that they present a limited listof predefined possible classes of semantic relations a compound can manifest.In some cases, proposed classes are abstractly represented by a paraphrasing preposition (Lauer, 1995;Girju et al., 2005; Lapata and Keller, 2004).
For example, all compounds that can be paraphrased byputting the preposition ?of?
between the constituents belong to the class OF, e.g.
a car door is the?door of a car?.
Another possibility is using predicate-based classes where the relations between theconstituents are not merely described by a preposition, but by definitions or paraphrasing predicates foreach class.
The class AGENT would contain compounds that could be paraphrased as ?X is performedby Y?
(Kim and Baldwin, 2005), e.g.
enemy activity can be paraphrased as ?activity is performed bythe enemy?.
Different schemes vary from 9 to 43 classes with Cohen?s Kappa scores for inter-annotatoragreement ranging from 52% to 62% (Barker and Szpakowicz, 1998; Girju et al., 2005; Moldovan et al.,2004; Nakov, 2008;?O S?eaghdha, 2008).With regard to the information used by the classifier to assign the classes to the compounds (the fea-tures of a compound to be analyzed), two main approaches are available, viz.
taxonomy-based methods,or corpus-based methods.Taxonomy-based methods (also called semantic network similarity (?O S?eaghdha, 2009)) base their fea-tures on a word?s location in a taxonomy or hierarchy of terms.
Most of the taxonomy-based techniquesuse WordNet (Miller, 1995) for these purposes; especially the hyponym information in the hierarchyis used.
A bag of words is created of all hyponyms and the instance vector contains binary values foreach feature (the feature being whether the considered word from the bag of words is a hyponym of theconstituent or not).
Kim and Baldwin (2005) reached an accuracy of 53.3% using only WordNet.
Otherresearch was based on Wikipedia as a semantic network (Strube and Ponzetto, 2006).Corpus-based methods use co-occurrence information of the constituents of the selected compoundsin a corpus.
The underlying idea (the distributional hypothesis) is that the set of contexts in which aword occurs, is an implicit representation of the semantics of this word (Harris, 1968).
The lexical sim-ilarity measure assumes that compounds have a similar semantic interpretation when their respectiveconstituents are semantically similar.
Two compounds, for example flour can and corn bag will be con-sidered similar if they have similar modifying constituents (flour and corn) and similar head constituents(can and bag).
The co-occurrences of both constituents will be combined to calculate a measure of sim-ilarity for the entire compound.
This approach implicitly uses the lexical semantic knowledge also usedin taxonomy-based methods but without the need for a taxonomy.
Performances of up to 64% F-scorehave been reached (?O S?eaghdha and Copestake, 2013).Corpus-based and taxonomy-based methods have also been combined by several researchers.
Accu-racies of 58.35% (?O S?eaghdha, 2007), 73.9% (Tratz and Hovy, 2010) and even 82.47% (Nastase et al.,2006) were reported.244.2 Dataset DevelopmentFor this project, we developed datasets of semantically annotated compounds for Afrikaans and Dutch.This section describes these new resources.The annotation scheme and guidelines that we used as basis, were developed by?O S?eaghdha (2008)for semantic annotation of English NN compounds.
For purposes of our project, some adaptations werein order, while Dutch and Afrikaans examples were added (Verhoeven et al., 2014).
?O S?eaghdha (2008)describes eleven classes of compounds; six of these classes are semantically specific (see Table 1).Class Definition ExampleBEThe compound can be rewritten as ?N2 which is (like) (a) N1?
with N1and N2 being the two constituents nouns.woman doctorHAVEThe compound denotes some sort of possession.
Part-whole com-pounds, typical one-to-many possession, compounds expressing condi-tions or properties and meronymic compounds belong here.car doorIN The compound denotes a location in time or place.
garden partyACTORThe compound denotes a characteristic event or situation and one of theconstituents is a salient entity.enemy activityINSTThe compound denotes a characteristic event and there is no salient en-tity present.cheese knifeABOUT The compound describes a topical relation between its constituents.
film characterTable 1: Overview of semantically specific categories in the semantics annotation scheme.The other five categories are less specific.
The MISTAG and NONCOMPOUND categories serveto classify compounds that do not belong in the dataset.
The REL class describes compounds with aclear meaning that does not belong to any of the other classes, but of which the relation between theconstituents seems productive (e.g.
sodium chloride).
The LEX category is almost the same as REL,but the relation does not seem to be productive (e.g.
monkey business).
The UNKNOWN category is forcorrect NN compounds of which the meaning is not clear enough to annotate.As a subpart of this subproject, we also developed an annotation protocol for nominal compounds thatdo not have a noun as first constituent (XN) (Verhoeven and Van Huyssteen, 2013).
Such XN compoundshad thus far mostly been neglected, despite the fact that they are fairly productive in some Germaniclanguages (although far less frequent than NN compounds).
Our annotation guidelines followed thegeneral approach of?O S?eaghdha (2008).In the course of the project, several datasets were developed.
For both Dutch and Afrikaans there weretwo annotation rounds for NN compounds and one smaller annotation experiment for XN compounds.An overview of the semantics data can be found in Table 2, including the average Cohen?s Kappa scores.The Dutch NN compounds were taken from the same raw compound list of 71,274 compounds de-scribed in section 3.2 above.
Subsequent annotations were performed by students in linguistics at theUniversity of Antwerp, all native speakers of Dutch.
The first dataset was annotated by one student, anda subset of 500 compounds by one of the authors in order to calculate inter-annotator agreement.
Thesecond round of data was annotated by three students, with the data divided between them in such a waythat we had two annotations for each compound.
For the XN compound dataset, only 600 compoundswere annotated.The NN compounds for the Afrikaans dataset were taken from the CKarma list of split compounds(see section 3.2 above).
The complete Afrikaans dataset was annotated by three undergraduate linguisticsstudents, all native speakers of Afrikaans.
This resulted in three annotations for each compound.
Withregard to the XN compound subpart, a large dataset of 4,553 compounds was annotated.4.3 ExperimentsThe data from the first annotation rounds were used for semantic classification experiments that werebased on those conducted by?O S?eaghdha (2008).
We used the annotations made by the main annotator25language annotation type # items # annotators avg.
Kappa scoreAfrikaans NN-Round1 1,449 3 53.4Afrikaans NN-Round2 2,328 3 37.6Afrikaans XN 4,553 3 33.5Dutch NN-Round1 1,766 2 60.0Dutch NN-Round2 2,000 3 51.0Dutch XN 600 2 48.6Table 2: Overview of semantics data.for each language in order to maintain his or her consistency of annotation.
What follows is a descriptionof our own experimental setup.
In our classification experiment, classifiers trained by machine learningmethods use feature vectors arising from a combination of the distributional hypothesis (as proposedabove) with the idea of analogical reasoning.
It is assumed that the semantic category of a compoundcan be predicted by comparing compounds with similar meanings (?O S?eaghdha, 2008).4.3.1 Vector CreationFor every compound constituent, the co-occurrence context was calculated.
For this purpose, for eachinstance of the constituents in the corpus, the surrounding n words (that belong to the 10,000 mostfrequent words of the corpus) were held in memory.
The relative frequencies of these context words (thenumber of times the word appeared in the context of the constituent, divided by the frequency of theconstituent in the corpus) for each constituent were stored.For Dutch, the Twente News Corpus (Ordelman et al., 2007) was used.
This is a 340 million wordcorpus of newspaper articles.
For Afrikaans, we used the Taalkommissie corpus (Taalkommissie, 2011),a 60 million word corpus that consists of a variety of text genres.A concatenation of the constituent data was used to create the instance vector.
This is a new but verysimple technique of composition whereby each instance vector thus contains the relative frequencies forthe 1,000 most frequent words for each constituent (hence 2,000 per compound).
Compounds of whichone or both of the constituents did not appear in the corpus were excluded from the data.The classification experiment dealt with those compounds that were annotated with a semanticallyspecific category.
This means that only compounds with the category tags BE, HAVE, IN, INST, AC-TOR and ABOUT were used for the experiments.
The final vector set for Afrikaans contained 1,439compounds, while the final vector set for Dutch had 1,447 compounds.4.3.2 ResultsAs machine learning method, we used the SMO algorithm, which is WEKA?s (Witten et al., 2011)support vector machines (SVM) implementation, in a 10-fold cross-validation setup.Since this was the first research on both Dutch and Afrikaans (Verhoeven et al., 2012), we assumeda majority baseline which represents the accuracy that can be obtained by always guessing the mostfrequent class as the output class.
For Dutch, this baseline is 29.5% (428 instances of class IN on a totalof 1,447 compounds) (Verhoeven, 2012).
For Afrikaans, this baseline is 28.2% (407 instances of classABOUT on a total of 1,439 instances).The outcome of these experiments showed that the semantic relation between compound constituentsin Dutch and Afrikaans can be learned using our simple new composition method of concatenatingthe constituent vectors into a compound vector.
F-scores of 47.8 (Dutch) and 51.1 (Afrikaans) wereachieved using the counts of three context words left and right of the constituent for computing theirsemantic representation.
The approach turned out to be robust for varying sizes of context (differentnumbers of context words), as well as for the way corpus counts were done: on either lemmas or wordforms (Verhoeven, 2012; Verhoeven and Daelemans, 2013).
Our results are a good improvement of ourbaselines, and provide a baseline for future research.264.3.3 WordNet-based method for AfrikaansIn another subpart of this subproject, we experimented with an alternative approach, namely to use theAfrikaans WordNet (CTexT, 2011) to infer compound semantics of Afrikaans compounds (Botha et al.,2013).
We followed the same approach as Kim and Baldwin (2005), and achieved precision resultssimilar to the general approach described above.
i.e.
50.49% using the Afrikaans WordNet, vs. 50.80%reported by Verhoeven et al.
(2012).
However, recall was much worse: 29.27% in this approach, vs.51.60% using the other approach.
This poor recall can be attributed to the small size of the AfrikaansWordNet, which only contains 10,045 synsets, compared to 115,424 synsets in the Princeton WordNet(Miller, 1995).
We therefore conclude that a WordNet-approach holds much promise, on the premisethat the WordNet is large enough to ensure good coverage.5 DiscussionWe described machine learning approaches to the segmentation and semantic interpretation of com-pounds in Dutch and Afrikaans, two related languages where concatenative compounding is a highlyproductive morphological process.
Success of machine learning approaches to any natural language pro-cessing task is based on the presence of sufficient high quality training data and relevant informationsources allowing the classification problem to be solved.For compound splitting, high annotator agreement in the annotation of the training data and highgeneralization accuracy could be obtained for both languages using a statistical pattern induction methodworking on the orthography of the input compounds, without need for other information sources.
Furtherimprovement can be achieved here with more and richer training data.
Other methods for sequencelearning could lead to further improvements as well, although Liang?s method (1983) turns out to be astrong algorithm for this task.The task of compound interpretation is much more difficult, both for people (who reached relativelylow annotation agreement for both languages) and for machine learners, suggesting that crucial infor-mation is missing in the semantic representations we used for our compound constituents.
Nevertheless,also for this task, we were able to set a standard, well above baseline, for future work in compound in-terpretation for Dutch and Afrikaans.
Further improvement can potentially be found in many directions:more fine-grained and more learnable semantic relation types, more consistently annotated training data(and much more of it from different domains), and better semantic representations for the constituents,for example using deep learning (Mikolov et al., 2013).AcknowledgmentsThe AuCoPro project was funded through a research grant from the Nederlandse Taalunie (Dutch Lan-guage Union) and the South African Department of Arts and Culture (DAC), as well as grants from theSouth African National Research Foundation (NRF) (grant number 81794), and the European Networkon Word Structure (NetWordS) (European Science Foundation) (Grant number: 5570).
Views expressedin this publication cannot be ascribed to any of these funding organizations.We would also like to acknowledge the contributions of numerous students and colleagues, includingZandr?e Botha, Roald Eiselen, Joanie Liversage, Benito Trollip, Nanette van den Bergh (North-WestUniversity); Natasja Loyens, Maxim Baetens, Frederik Vaassen (University of Antwerp); Chris Emmery,Suzanne Aussems (Tilburg University).ReferencesKen Barker and Stan Szpakowicz.
1998.
Semi-Automatic Recognition of Non- Modifier Relationships .
Proceed-ings of the 17th International Conference on Computational Linguistics, pages 96?102.Geert Booij.
2010.
Construction Morphology.
Oxford University Press, Oxford.Zandr?e Botha, Roald Eiselen, and Gerhard van Huyssteen.
2013.
Automatic compound semantic analysis usingwordnets.
In Proceedings of the Twenty-Fourth Annual Symposium of the Pattern Recognition Association ofSouth Africa, Johannesburg, South Africa.27Fabio Celli and Malvina Nissim.
2009.
Automatic Identification of Semantic Relation in Italian complex nominals.In Proceedings of the Eighth International Conference on Computational Semantics (IWCS-8), Tilburg, TheNetherlands.CTexT.
2005.
CKarma (C5 KompositumAnaliseerder vir Robuuste Morfologiese Analise).
[C5 CompoundAnalyser for Robust Morphological Analysis].
Centre for Text Technology (CTexT), North-West University,Potchefstroom, South Africa.CTexT.
2011.
Afrikaans WordNet.
Centre for Text Technology (CTexT), North-West University, Potchefstroom,South Africa.Guy De Pauw, Tom Laureys, Walter Daelemans, and Hugo Van Hamme.
2004.
A Comparison of Two DifferentApproaches to Morphological Analysis of Dutch.
In Proceedings of the Workshop of the ACL Special InterestGroup on Computational Phonology (SIGPHON), Barcelona, Spain.Jan Don.
2009.
IE, Germanic: Dutch.
In Rochelle Lieber and Pavol?Stekauer, editors, The Oxford Handbook ofCompounding, pages 370?385.
Oxford University Press, Oxford, UK.Roxana Girju, Dan Moldovan, Marta Tatu, and Daniel Antohe.
2005.
On the semantics of noun compounds.Computer Speech and Language, 19:479?496.Zellig Harris.
1968.
Mathematical structures of language.
Interscience, New York.Iris Hendrickx, Zornitsa Kozareva, Preslav Nakov, Diarmuid?O S?eaghdha, Stan Szpakowicz, and Tony Veale.
2013.SemEval-2013 Task 4: Free Paraphrases of Noun Compounds.
In Proceedings of the Seventh InternationalWorkshop on Semantic Evaluation (SemEval 2013), pages 138?143, Atlanta, Georgia, USA.
Association forComputational Linguistics.Erhard Hinrichs, Verena Henrich, and Reinhild Barkey.
2013.
Using Part-Whole Relations for Automatic Deduc-tion of Compound-internal Relations in GermaNet.
Language Resources and Evaluation, 24(3):363?372.Su Nam Kim and Timothy Baldwin.
2005.
Automatic Interpretation of Noun Compounds Using WordNet Simi-larity.
Wall Street Journal, pages 945?956.Ronald Langacker.
2008.
Cognitive Grammar: A Basic Introduction.
Oxford University Press, New York.Mirella Lapata and Frank Keller.
2004.
The Web as a Baseline: Evaluating the Performance of UnsupervisedWeb-based Models for a Range of NLP Tasks.
In Proceedings of the Human Language Technology Conferenceof the North American Chapter of the Association for Computational Linguistics, pages 121?128.
Associationfor Computational Linguistics, Boston.Mark Lauer.
1995.
Designing Statistical Language Learners: Experiments on Noun Compounds.
Ph.D. thesis,Macquarie University.Franklin Mark Liang.
1983.
Word Hy-phen-a-tion by Com-put-er.
Ph.D. thesis, Stanford University, Stanford,USA.Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig.
2013.
Linguistic regularities in continuous space word repre-sentations.
In Proceedings of NAACL-HLT, pages 746?751.George Miller.
1995.
WordNet: a lexical database for English.
Communications of the ACM, 38(11):39?41.Dan Moldovan, A Badulescu, Marta Tatu, Daniel Antohe, and Roxana Girju.
2004.
Models for the SemanticClassification of Noun Compounds.
In Proceedings of the HLT-NAACL Workshop on Computational LexicalSemantics, pages 60?67.
MA: Association for Computational Linguistics, Boston.Preslav Nakov.
2008.
Noun Compound Interpretation Using Paraphrasing Verbs: Feasibility Study.
In Pro-ceedings of the 13th International Conference on Artificial Intelligence: Methodology, Systems, Applications(AIMSA08).Vivi Nastase, Jelber Sayyad-Shirabad, Marina Sokolova, and Stan Szpakowicz.
2006.
Learning Noun-ModifierSemantic Relations with Corpus-based and WordNet-based Features.
In Proceedings of the 21st National Con-ference on Artificial Intelligence, pages 781?787.
MA: American Association for Artificial Intelligence, Boston,aaai-06 edition.Anneke Neijt, Robert Schreuder, and Carel Jansen.
2010.
Van boekenbonnen en fe?everhale: De tussenklank e(n)in Nederlands en Afrikaanse samestellingen: vorm of betekenis?
[The interfix e(n) in Dutch and Afrikaanscompounds: form or meaning?].
Nederlandse Taalkunde, 15(2):125?147.28Diarmuid?O S?eaghdha and Ann Copestake.
2013.
Interpreting compound nouns with kernel methods.
Journal ofNatural Language Engineering, Special Issue on the Semantics of Noun Compounds, 19:331?356.Diarmuid?O S?eaghdha.
2008.
Learning compound noun semantics.
Ph.D. thesis, University of Cambridge,Cambridge, UK.Roeland Ordelman, Arjan Van Hessen, and Franciska De Jong.
2003.
Compound decomposition in Dutch largevocabulary speech recognition.
In Proceedings of Eurospeech 2003, pages 225?228, Geneva, Switzerland.Roeland Ordelman, Franciska de Jong, Arjan van Hessen, and Hendri Hondorp.
2007.
TwNC: a MultifacetedDutch News Corpus.
ELRA Newsletter 12, pages 3?4.Diarmuid?O S?eaghdha.
2007.
Annotating and Learning Compound Noun Semantics.
In Proceedings of the ACL2007 Student Research Workshop, pages 73?78.
Association for Computational Linguistics, Prague.Diarmuid?O S?eaghdha.
2009.
Semantic classification with WordNet kernels.
In Computational Linguistics,NAACL-Short ?09, pages 237?240.
Association for Computational Linguistics.Sulene Pilon, Martin Puttkammer, and Gerhard Van Huyssteen.
2008.
Die ontwikkeling van ?n woordafbreker enkompositumanaliseerder vir Afrikaans.
Literator, 29(1):21?41.Renee Pohlmann and Wesley Kraaij.
1996.
Improving the precision of a text retrieval system with compoundanalysis.
In Proceedings of the 7th Computational Linguistics in the Netherlands (CLIN 1996), pages 115?129,Eindhoven, The Netherlands.Carlos Ramisch, Aline Villavicencio, and Valia Kordoni.
2013.
Introduction to the special issue on multiwordexpressions: From theory to practice and use.
ACM Transactions on Speech and Language Processing, 10(2):1?10.Sergio Scalise and Antonietta Bisetto.
2009.
The classification of compounds.
In Rochelle Lieber and Pavol?Stekauer, editors, The Oxford Handbook of Compounding, pages 34?53.
Oxford University Press, Oxford.Michael Strube and Simone Paolo Ponzetto.
2006.
WikiRelate!
Computing semantic relatedness using Wikipedia.In Proceedings of the 21st National Conference on Artificial Intelligence (AAAI-06), Boston, MA.Taalkommissie.
2011.
Taalkommissiekorpus 1.1.
Taalkommissie van die Suid-Afrikaanse Akademie vir Weten-skap en Kuns.
Centre for Text Technology (CTexT), North-West University, Potchefstroom, South Africa.Stephen Tratz and Ed Hovy.
2010.
A Taxonomy, Dataset, and Classifier for Automatic Noun Compound Inter-pretation.
In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages678?687.
Uppsala: Association for Computational Linguistics.Gerhard Van Huyssteen and Menno Van Zaanen.
2004.
Learning Compound Boundaries for Afrikaans SpellingChecking.
In Proceedings of First Workshop on International Proofing Tools and Language Technologies, pages101?108, Patras.Gerhard Van Huyssteen and Ben Verhoeven.
2014.
A Taxonomy for Dutch and Afrikaans Compounds.
InProceedings of the First Workshop on Computational Approaches to Compound Analysis (ComAComA), Dublin,Ireland.Gerhard Van Huyssteen.
2014.
Morfologie.
In Wannie Carstens and Nerina Bosman, editors, Kontempor?ereAfrikaanse Taalkunde, pages 171?208.
Van Schaik Uitgewers, Pretoria, South Africa.Menno Van Zaanen and Gerhard Van Huyssteen.
2002.
Improving a Spelling Checker for Afrikaans.
In Compu-tational Linguistics in the Netherlands 2002-Selected Papers from the Thirteenth CLIN Meeting, page 143156,Groningen, the Netherlands.Ben Verhoeven and Walter Daelemans.
2013.
Semantic Classification of Dutch Noun-Noun Compounds: ADistributional Semantics Approach.
CLIN Journal, 3:2?18.Ben Verhoeven and Gerhard Van Huyssteen.
2013.
More Than Only Noun-Noun Compounds: Towards anAnnotation Scheme for the Semantic Modelling of Other Noun Compound Types.
In Proceedings of the 9thJoint ISO - ACL SIGSEM Workshop on Interoperable Semantic Annotation, Potsdam, Germany.Ben Verhoeven, Walter Daelemans, and Gerhard B.
Van Huyssteen.
2012.
Classification of noun-noun com-pound semantics in Dutch and Afrikaans.
In Proceedings of the Twenty-Third Annual Symposium of the PatternRecognition Association of South Africa (PRASA 2012), pages 121?125, Pretoria, South Africa.29Ben Verhoeven, Gerhard Van Huyssteen, Menno Van Zaanen, and Walter Daelemans.
2014.
Annotation guidelinesfor compound analysis.
CLiPS Technical Report Series (CTRS), 5.Ben Verhoeven.
2012.
A computational semantic analysis of noun compounds in Dutch.
Master?s thesis, Univer-sity of Antwerp, Antwerp, Belgium.Ian Witten, Eibe Frank, and Mark Hall.
2011.
Data Mining: Practical Machine Learning Tools and Techniques(Google eBook).
Elsevier.30
