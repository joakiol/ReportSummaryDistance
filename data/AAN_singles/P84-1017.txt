The Costs  o f  Inher i tance  in Semant ic  NetworksRob't F. SimmonsThe University of Texas, AustinAbst rac tQuestioning texts represented in semanticrelations I requires the recognition that synonyms,instances, and hyponyms may all satisfy a questionedterm.
A basic procedure for accomplishing such loosematching using inheritance from a taxonomicorganization of the dictionary is defined in analogy withthe unification a!gorithm used for theorem proving, andthe costs of its application are analyzed.
It is concludedtl,at inherit,~nce logic can profitably be ixiclu.
'ted in thebasic questioning procedure.AI  Handbook StudyIn studying the pro-.~ss of answering questionsfrom fifty pages of the AI tlandbook, it is striking thatsuch subsections as those describing problemrepresentations are organized so as to define conceptualdictionary entries for the terms.
First, class definitionsare offered and their terms defined; then examples aregiven and the computational terms of the definitions areinstantiated.
Finally the technique described is appliedto examples and redel'ined mathematical!y.
Organizingthese texts (by hand) into coherent hierarchic structuresof discourse results in very usable conceptual dictionarydefinitions that are related by taxonomic and partitiverelations, leaving gaps only for non-technical terms.
Forexample, in "give snapshots of the state of the problemat various stages in its solution," terms such as "state','problem', and "solution" are defined by the text.
while?
give', "snapshots', and "stages =are not.Our first studies in representing and questioningthis text have used semantic networks with a minimalnumber of case arcs to represent the sentences andSuper:~et/Instance and *Of/llas arcs to represent,respectively, taxonomic and partitive relations betweenconcepts.
Equivalence arcs are also used to representcertain relations ig~fified by uses of "is" and apposition1supported by NSF Grant/ST 8200976and *AND and *OR arcs represent conjunction.
SinceJune 1982, eight question-answering systems have been'written, some in procedural logic and some in compilableEIJSP.
Although we have so far studied questioning anddata manipulation operations on about 40 pages of thetext, the detailed study of inheritance costs discussed inthis paper was based on 170 semantic relations (SRs),represented by 733 binary relations each composed of anode-arc-node triple.
In this study the only inferencerules used were those needed to obtain transitive closurefor inheritance, but in other studies of this text a greatdeal of power is gained by using general inference rulesfor paraphrasing the question into the terms given by ananswering text.
The use of paraphrastie nference rules iscomputationally expensive and is discussed elsewhere\[Simmons 1083\].The text-knowledge base is constructed either asa set of triples using subscripted words, or by establishingnode-numbers whose values are the complete SR andindexing these by the first element of every SR. Thelatter form, shown in Figure 1, occupies only about athird of the space that the triples require and neitherform is clearly computationally better than the other.The first experiments with this text-knowledgebase showed that the cost of following inheritance ares,i.e.
obtaining taxonomic losures for concepts, was veryhigh; some questions required as much as a minute ofcentral processor time.
As a result it was necessary toanalyze the process and to develop an understanding thatwould minimize any redundant computation.
Ourcurrent system for questioning this fragment knowledgebase has reduced the computation time to the range of1/2 to less than 15 seconds per question in uncompiledELISP on a DEC 2060.I believe the approach taken in this study is ofparticular interest to researchers who plan to use thetaxonomic structure of ordinary dictionaries in support ofnatural language processing operations.
Beginning withstudies made in 1075 \[Simmons and Chester, 1077\] it wasapparent o us that question-answering could be viewedprofitably as a specialized form of theorem proving that71Example SR representation for a sentence:(C100 A STATE-SPACE REPRESENTATION OF A PROBLEM EMPLEYS TWOKINDS OF ENTITIES: STATES, WHICH ARE DATA STRUCIURES GMNG?
SNAPSHOTS" OF THE CONDITION OF THE PROBLEM AT EACH STAGE OF ITSSOLUTION, AND OPERATORS.
WHICH ARE ~Y_ANS FOR TRANSFORMING THEPROBLEM FROM ONE STATE TO ANOTHER)(N137(N138(N140(N142(N143(N144(N146(N145(N147(N141(N148(N149(Nl~(N i~(REPRESENTATION SUP N101 HAS N138 EG N139 SNT C100))(ENTITY NBR PL QTY 2.
INST N140 INST N141SNT C100))(STATE NBR PL ~ N142 SNT CI00))(STRUCTURE *OF DATA INSTR* N143 SNT C100))(GIVE TNS PRES INSTR N142AE N144 vAT N145 SNT CLOG))(SNAPSI~3T NBR PL *OF N146 SNT C100))(PROBLEM NBR SING HAS N145 SUP N79 SNT C100))(STAGE NBR PL IDENT VARI~J3 *OF N147 SNT C100))(SOLUTION NBR SING SNT C100))(OPERATOR NBR PLEQUIV* N148 SNT C100))(PROCEDURE NBR PL INSTR* N149 SNT C100))(TRANSFORM TNS PRESAE N146 *FROM N164 *TO N165 SNT C100))(STATE NBR SING IDENT ONE 5~JP N140 SNT C100))(STATE NBR SING IDENT ANOTHER SUP N140 SNT CI00))Example of SR representation of the question, =How many entitiesare used in the state-space representation of a problem?
=(REPRESENTATION *OF (STATE-SPACE *OF PROBLE24) HAS (ENTITY CITY YO)Figure 1.
Representation of Sem~t lc  RelationsQuery Triple:Match Candid.AR B+ + + + means a match by unlficatlon.++ C (CLOSABCB)+ + C (CLOSCF R C B)+ R1 + (SYNONYM R R1)B R1 A (CO~ R R1)C + ?
(CLOSAB C A)where CLOSAB stands for Abstractive Closure and is defined inprocedural logic (where the symbol < is shorthand for the reversedimplication sign <--, i.e.
P < Q S is equivalent to Q " S --> P):(CLOSAB NI N2) < (OR CINST NI N2) (SUP N1 N2))(INST N1 N2) < (OR (NI INST N2) (N1 ~ *  N2))(INST N1N2) < (INST N1X) ( INSTX N2)(SUP Ni N2) < (OR (Ni E~U?V N2)(Ni SUP N2))(SUP NI N2) < (SUP NI X ) (SUPX N2)CLOSCP stands for Complex Product Closure and is defined as(CLOSCP R N1N2) < (TRANSITIVE R)(NI R N2)=N1R N2 is the new A R B"(CLOSCP R N1N2) < (NI ~OF N2)*~(CLOSCF R N1N2) < (NI LOC N2)**(CLOSCF R NI N2) < (NI *AND N2)(CLOSCP R N1N2) < (NI *OR N2)** These two relations turn out not to be universally true complexproducts; they only give answers that are possibly true, so theyhave been dropped for most question answering applications.Figure 2.
Conditions for MatchLug Question and Candidate Triples72used taxonomic connections to recognize synonymicterms in a question and a candidate answer.
Aprocedural ogic question-answerer was later developedand specialized to understanding a story about the flightof a rocket \[Simmons 1084, Simmons and Chester, 1982,Levine 1980\].
Although it was effective in answering awide range c,f ordinary questions, we were disturbed atthe m,~gnitude of computation that was sometimesrequired.
This led us to the challenge of developing asystem that would work effectively with large bodies oftext, particularly the AI Iiandbook.
The choice of thistext proved fortunate in that it provided experience withm~my taxonomic and partitive relations that wereessential to an.~wering a test sample of questions.This hrief paper offers an initial description of abasic proccs.~ for questioning such a text and an analysisof the cost of using such a procedure.
It is clear that thetechnique and analysis apply to any use of the Englishdictionary where definitions are encoded in semanticne{ works.Relaxed Unification for Matching SemantlcRelationsIn the unification algorithm, two n-tuples, nl andn ?, unify if Arity(nl) ~ Arity(n2) and if every element innl matches an element in n2.
Two elements el and e2match if el or e2 is a variable, or if el ~-- e2, or in thecase that el and e2 are lists of the same length, each ofthe elements of el matches a corresponding element ofe2.Since semantic relations (SRs) are unordered listsof binary relations that vary in length and since aquestion representation (SRq) can be answered by asentence candidate (SRc) that includes more informationthan the question specified, the Arity constraint i~ revisedto Arity(SRq} Less/Equal Arity(SRc}.The primitive elements of SRs include words,arcnames, variables and constants.
Arcnames and wordsare organized taxonomically, and words are furtherorganized by the discourse structures in which theyoccur.
One or more element 6f taxonomic or discoursestructure may imply others.
Words in general can beviewed as restricted variables whose values can be anyother word on an acceptable inference path (usuallytaxonomic) that joins them.
The matching constraints ofunification can thus be relaxed by allowing two terms tomatch if one implies the other in a taxonomic losure.The matching procedure is further adapted toread SRs effectively as unordered lists of triples and toseek for each triple ill SRq a corresponding one in SRc.The two SRs below match because Head matches Head,Arcl  matches Arcl, Vail  matches Vall, etc.
even thoughthey are not given in the same order.SRq (Head Arcl  Vail, Arc2 Val2, ..., Arcn Vain)SRc (Head Arc2 Val2, Arcl  Vail, ..., Arch Vain)The SR may be represented (actually or virtually) as alist of triples as follows:SRq ((Head Arcl  Vail)(Head Arc2 Val2) ..., (Head Arcn Vain})Two triples match in Relaxed Unification according (atleast) to the conditions shown in Figure 2.
The querytriple, A R B may match the candidate giving + + + tosignify that all three elements unified.
If the first twoelements match, the third may be matched using theprocedures CLOSAB or CLOSCP to relate the .non-matching C with the question term B by discovering thatB is either in the abstractive closure or the complexproduct closure of C. The abstractive closure of anelement is the set of all triples that can be reached byfollowing separately the SUP and EQUIV  arcs and theINST and EQUIV* arcs.
The complex product closure isthe set of triples that can be reached by following a set ofgenerally transitive arcs (not including the abstractiveones).
The arc of the question may have a synonym or aconverse and so develop alternative questions, andadditional questions may be derived by asking such termsas C R B that include the question term A in their?
abstractive closure.
Both closure procedures hould belimited to n-step paths where n is a value between 3 and6.Computat ional  CostIn the above recursive definition the cost is notimmediately obvious.
If it is mapped onto a graph icrepresentation in semantic network form, it is possible tosee some of its implications.
Essentially the procedurefirst seeks a direct match between a question term and acandidate answer; if the match fails, the abstractiveclosure arcs, SUP, INST, EQUFv', and EQUIV* may lead.to a new candidate that does match.
If these fail, thencomplex product arcs, *OF, HAS, LOC, AND, and ORmay lead to a matching value.
The graph below outlinesthe essence of the procedure.73A---R---B---SUP---Qi - - - INST-- -{Ii ---E~UlV---Qi ---E~JIV*---QI ---*AND---eli ---*OR .
.
.
.
ClI ---L0C---QI ---*0F---QI ---HAS---QThis graph shows nine possible complex product paths tofollow in seeking a match between B and Q.
If we alloweach path to extend N steps such that each step has thesame number of possible paths, then the worst casecomputation, assuming each candidate SR has all thearcs, is of the order, 9 raised to the Nth.
If the A term ofthe question also has these possibilities, and the R termhas a synonym, then there appear to be 2*2*9**Nthpossible candidates for answers.
The first factor of 2reflects the converse by assigning the A term 9**N paths.Assuming only one synonym, each of two R terms mightlead to a B via any of 9 paths, giving the second factor of2.
If the query arc is also transitive, then the powerfactor 9 is increased by one.In fact, SRs representing ordinary text appear toh~ve less than an average of 3 possible-CP paths, sosomething like 2*3**Nth seems to be the average cost.
Soif N is limited to 3 there are about 2'81=162 candidatesto be examined for each subquestion.
These are merelyrough estimates, but if the question is composed of 5subquestions, we .might expect to examine something onthe order of a thousand candidates in a complete searchfor the answer.
Fortunately, this is accomplished in a fewseconds of comphtation time.The length of tr?nsitive path is also ofimportance for two other reasons.
First, most of the CParcs lead only to probable inference.
Even superset andinstance are really only highly probable indicators ofequivalence, while LOC, HAS, and *OF are even lesscertain.
Thus if the probability of truth of match is lessthan one for each step, the number of steps that canreasonably be taken must be sharply limited.
Second, itis the case empirically that the great majority of answersto questions are found with short paths of inference.
Inone all-answers version of the QA-system, we found apuzzling phenomem)n in that all of the answers weretypically found in tlle first fifteen seconds of computationalthough the exploratior!
continued for up to 50 seconds.Our current hypothesis is that the likelihood o fdiscovering an answer falls off  rapidly as the length ofthe inference path increases.DisusslonIt is important o note that this experiment wassolely concerned with the simple levels of inferenceconcerned in inheritance from a taxonomic structure.
Itshows that this class of inference can be embeddedprofitably in a procedure for relaxed unification.
Inaddition it allows us to state rules of inference in theform of semantic relations.For example we know that the commander oftroops is responsible for the outcome of their battles.
Soif we know that Cornwallis commanded an army and thearmy lost a battle, then we can conclude correctly thatCornwallis lost the battle.
An SR inference rule to thiseffect is shown below:Rule Axiom:((LOSE AGT X AE Y) <-  (SUP X COh/LMANDER)(SUP Y BATTLE)(COMMAND AGT X AE W)(SUP W MILITARY-GROUP)(LOSE AGT W AE Y))Text Axioms:((COMMAND AGT CORNWALLISAE (ARMY MOD BRITISH)))((LOSE AGT (AR/vfY MOD BRITISH)AE (BATTLE *OF YORKTOWN}))((CORNWALLIS SUP COMMANDER))((ARMY SUP {MILITARY-GROUP)))((YORKTOWN SUP BATTLE))Theorem:((LOSE AGT CORNWALLISAE (BATTLE *OF YORKTOWN)))The relaxed unification procedure described earlier allowsus to match the theorem with the consequent of the rulewhich is then proved if its antecedents are proved.
It canbe noticed that what is being accomplished is thedefinition of a theorem prover for the loosely orderedlogic of semantic relations.
We have used such rules foranswering questions of the AI handbook text, but havenot yet determined whether the cost of using such ruleswith relaxed unification can be justified (or whether sometheoretically less appealing compilation is needed).ReferencesLevine, Sharon, Questioning English Text withClausal Logic, Univ.
of Texas, Dept.
Comp.
Sci., Thesis,1980.Simmons, R.F., Computations from the English,Prentice-Hall, New Jersey, 198.i.Simmons, R.F.I A Text Knowledge Base for theA!
Handbook, Univ.
of Texas, Dept.
of Comp.
Sci.,Ti:-83-24, 1983.Simmons, R.F., and Chester, D.L.
Inferences inquantified semantic networks.
PROC 5TH INT.
JT.CONI~.. ART.
INTELL.
Stanford, 1977.74
