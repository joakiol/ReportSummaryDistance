Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 1764?1773,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsMining Opinion Words and Opinion Targets in a Two-Stage FrameworkLiheng Xu, Kang Liu, Siwei Lai, Yubo Chen and Jun ZhaoNational Laboratory of Pattern RecognitionInstitute of Automation, Chinese Academy of Sciences, Beijing, 100190, China{lhxu, kliu, swlai, ybchen, jzhao}@nlpr.ia.ac.cnAbstractThis paper proposes a novel two-stagemethod for mining opinion words andopinion targets.
In the first stage, wepropose a Sentiment Graph Walking algo-rithm, which naturally incorporates syn-tactic patterns in a Sentiment Graph to ex-tract opinion word/target candidates.
Thenrandom walking is employed to estimateconfidence of candidates, which improvesextraction accuracy by considering confi-dence of patterns.
In the second stage, weadopt a self-learning strategy to refine theresults from the first stage, especially forfiltering out high-frequency noise termsand capturing the long-tail terms, whichare not investigated by previous meth-ods.
The experimental results on three realworld datasets demonstrate the effective-ness of our approach compared with state-of-the-art unsupervised methods.1 IntroductionOpinion mining not only assists users to make in-formed purchase decisions, but also helps busi-ness organizations understand and act upon cus-tomer feedbacks on their products or services inreal-time.
Extracting opinion words and opiniontargets are two key tasks in opinion mining.
Opin-ion words refer to those terms indicating positiveor negative sentiment.
Opinion targets representaspects or attributes of objects toward which opin-ions are expressed.
Mining these terms from re-views of a specific domain allows a more thoroughunderstanding of customers?
opinions.Opinion words and opinion targets often co-occur in reviews and there exist modified relations(called opinion relation in this paper) betweenthem.
For example, in the sentence ?It has a clearscreen?, ?clear?
is an opinion word and ?screen?
isan opinion target, and there is an opinion relationbetween the two words.
It is natural to identifysuch opinion relations through common syntacticpatterns (also called opinion patterns in this pa-per) between opinion words and targets.
For ex-ample, we can extract ?clear?
and ?screen?
by us-ing a syntactic pattern ?Adj-{mod}-Noun?, whichcaptures the opinion relation between them.
Al-though previous works have shown the effective-ness of syntactic patterns for this task (Qiu et al,2009; Zhang et al, 2010), they still have some lim-itations as follows.False Opinion Relations: As an example, thephrase ?everyday at school?
can be matched bya pattern ?Adj-{mod}-(Prep)-{pcomp-n}-Noun?,but it doesn?t bear any sentiment orientation.
Wecall such relations that match opinion patterns butexpress no opinion false opinion relations.
Pre-vious pattern learning algorithms (Zhuang et al,2006; Kessler and Nicolov, 2009; Jijkoun et al,2010) often extract opinion patterns by frequency.However, some high-frequency syntactic patternscan have very poor precision (Kessler and Nicolov,2009).False Opinion Targets: In another case, thephrase ?wonderful time?
can be matched byan opinion pattern ?Adj-{mod}-Noun?, which iswidely used in previous works (Popescu and Et-zioni, 2005; Qiu et al, 2009).
As can be seen, thisphrase does express a positive opinion but unfortu-nately ?time?
is not a valid opinion target for mostdomains such as MP3.
Thus, false opinion targetsare extracted.
Due to the lack of ground-truthknowledge for opinion targets, non-target termsintroduced in this way can be hardly filtered out.Long-tail Opinion Targets: We further no-tice that previous works prone to extract opiniontargets with high frequency (Hu and Liu, 2004;Popescu and Etzioni, 2005; Qiu et al, 2009; Zhuet al, 2009), and they often have difficulty in iden-tifying the infrequent or long-tail opinion targets.1764To address the problems stated above, this pa-per proposes a two-stage framework for miningopinion words and opinion targets.
The under-lying motivation is analogous to the novel idea?Mine the Easy, Classify the Hard?
(Dasgupta andNg, 2009).
In our first stage, we propose a Senti-ment Graph Walking algorithm to cope with thefalse opinion relation problem, which mines easycases of opinion words/targets.
We speculate thatit may be helpful to introduce a confidence scorefor each pattern.
Concretely, we create a Sen-timent Graph to model opinion relations amongopinion word/target/pattern candidates and applyrandom walking to estimate confidence of them.Thus, confidence of pattern is considered in a uni-fied process.
Patterns that often extract false opin-ion relations will have low confidence, and termsintroduced by low-confidence patterns will alsohave low confidence accordingly.
This could po-tentially improve the extraction accuracy.In the second stage, we identify the hard cases,which aims to filter out false opinion targets andextract long-tail opinion targets.
Previous super-vised methods have been shown to achieve state-of-the-art results for this task (Wu et al, 2009; Jinand Ho, 2009; Li et al, 2010).
However, the bigchallenge for fully supervised method is the lackof annotated training data.
Therefore, we adopt aself-learning strategy.
Specifically, we employ asemi-supervised classifier to refine the target re-sults from the first stage, which uses some highlyconfident target candidates as the initial labeledexamples.
Then opinion words are also refined.Our main contributions are as follows:?
We propose a Sentiment Graph Walking al-gorithm to mine opinion words and opiniontargets from reviews, which naturally incor-porates confidence of syntactic pattern in agraph to improve extraction performance.
Toour best knowledge, the incorporation of pat-tern confidence in such a Sentiment Graphhas never been studied before for opinionwords/targets mining task (Section 3).?
We adopt a self-learning method for refiningopinion words/targets generated by SentimentGraph Walking.
Specifically, it can removehigh-frequency noise terms and capture long-tail opinion targets in corpora (Section 4).?
We perform experiments on three real worlddatasets, which demonstrate the effectivenessof our method compared with state-of-the-artunsupervised methods (Section 5).2 Related WorkIn opinion words/targets mining task, most unsu-pervised methods rely on identifying opinion rela-tions between opinion words and opinion targets.Hu and Liu (2004) proposed an association miningtechnique to extract opinion words/targets.
Thesimple heuristic rules they used may potentiallyintroduce many false opinion words/targets.
Toidentify opinion relations more precisely, subse-quent research work exploited syntax information.Popescu and Etzioni (2005) used manually com-plied syntactic patterns and Pointwise Mutual In-formation (PMI) to extract opinion words/targets.Qiu et al (2009) proposed a bootstrapping frame-work called Double Propagation which intro-duced eight heuristic syntactic rules.
While man-ually defining syntactic patterns could be time-consuming and error-prone, we learn syntacticpatterns automatically from data.There have been extensive works on miningopinion words and opinion targets by syntac-tic pattern learning.
Riloff and Wiebe (2003)performed pattern learning through bootstrappingwhile extracting subjective expressions.
Zhuanget al (2006) obtained various dependency re-lationship templates from an annotated moviecorpus and applied them to supervised opinionwords/targets extraction.
Kobayashi et al (2007)adopted a supervised learning technique to searchfor useful syntactic patterns as contextual clues.Our approach is similar to (Wiebe and Riloff,2005) and (Xu et al, 2013), all of which applysyntactic pattern learning and adopt self-learningstrategy.
However, the task of (Wiebe and Riloff,2005) was to classify sentiment orientations insentence level, while ours needs to extract moredetailed information in term level.
In addition,our method extends (Xu et al, 2013), and wegive a more complete and in-depth analysis onthe aforementioned problems in the first section.There were also many works employed graph-based method (Li et al, 2012; Zhang et al, 2010;Hassan and Radev, 2010; Liu et al, 2012), butnone of previous works considered confidence ofpatterns in the graph.In supervised approaches, various kinds ofmodels were applied, such as HMM (Jin and Ho,2009), SVM (Wu et al, 2009) and CRFs (Li et al,2010).
The downside of supervised methods wasthe difficulty of obtaining annotated training datain practical applications.
Also, classifiers trained1765on one domain often fail to give satisfactory re-sults when shifted to another domain.
Our methoddoes not rely on annotated training data.3 The First Stage: Sentiment GraphWalking AlgorithmIn the first stage, we propose a graph-based al-gorithm called Sentiment Graph Walking to mineopinion words and opinion targets from reviews.3.1 Opinion Pattern Learning for CandidatesGenerationFor a given sentence, we first obtain its depen-dency tree.
Following (Hu and Liu, 2004; Popescuand Etzioni, 2005; Qiu et al, 2009), we regard alladjectives as opinion word candidates (OC) andall nouns or noun phrases as opinion target can-didates (TC).
A statistic-based method in (Zhu etal., 2009) is used to detect noun phrases.
Thencandidates are replaced by wildcards ?<OC>?
or?<TC>?.
Figure 1 gives a dependency tree exam-ple generated by Minipar (Lin, 1998).p red s detm odgor geous<OC>is(VBE)style<TC>the(Det)of(P r ep) scr een<TC>pcom p-nthe(Det)detFigure 1: The dependency tree of the sentence?The style of the screen is gorgeous?.We extract two kinds of opinion patterns: ?OC-TC?
pattern and ?TC-TC?
pattern.
The ?OC-TC?
pattern is the shortest path between an OCwildcard and a TC wildcard in dependency tree,which captures opinion relation between an opin-ion word candidate and an opinion target can-didate.
Similarly, the ?TC-TC?
pattern cap-tures opinion relation between two opinion tar-get candidates.1 Words in opinion patterns arereplaced by their POS tags, and we constrainthat there are at most two words other thanwildcards in each pattern.
In Figure 1, thereare two opinion patterns marked out by dashlines: ?<OC>{pred}(VBE){s}<TC>?
for the?OC-TC?
type and ?<TC>{mod}(Prep){pcomp-n}<TC>?
for the ?TC-TC?
type.
After all pat-1We do not identify the opinion relation ?OC-OC?
be-cause this relation is often unreliable.terns are generated, we drop those patterns withfrequency lower than a threshold F .3.2 Sentiment Graph ConstructionTo model the opinion relations among opinionwords/targets and opinion patterns, a graph namedas Sentiment Graph is constructed, which is aweighted, directed graph G = (V,E,W ), where?
V = {Voc ?
Vtc ?
Vp} is the set of vertices inG, where Voc, Vtc and Vp represent the set ofopinion word candidates, opinion target can-didates and opinion patterns, respectively.?
E = {Epo?Ept} ?
{Vp?Voc}?
{Vp?Vtc}is the weighted, bi-directional edge set in G,where Epo and Ept are mutually exclusivesets of edges connecting opinion word/targetvertices to opinion pattern vertices.
Note thatthere are no edges between Voc and Vtc.?
W : E ?
R+ is the weight function whichassigns non-negative weight to each edge.For each (e : va ?
vb) ?
E, whereva, vb ?
V , the weight function w(va, vb) =freq(va, vb)/freq(va), where freq(?)
is thefrequency of a candidate extracted by opinionpatterns or co-occurrence frequency betweentwo candidates.Figure 2 shows an example of Sentiment Graph.n icelargescreen display<OC>{mod}<TC> <OC>{mod}<TC>{con j}<TC>10.80.70.20.30.40.20.330.330.330.60.40.2 0.2Figure 2: An example of Sentiment Graph.3.3 Confidence Estimation by RandomWalking with RestartWe believe that considering confidence of patternscan potentially improve the extraction accuracy.Our intuitive idea is: (i) If an opinion word/targetis with higher confidence, the syntactic patternscontaining this term are more likely to be used toexpress customers?
opinion.
(ii) If an opinion pat-tern has higher confidence, terms extracted by thispattern are more likely to be correct.
It?s a rein-forcement process.1766We use Random Walking with Restart (RWR)algorithm to implement our idea described above.Let Moc p denotes the transition matrix from Vocto Vp, for vo ?
Voc, vp ?
Vp, Moc p(vo, vp) =w(vo, vp).
Similarly, we have Mtc p, Mp oc,Mp tc.
Let c denotes confidence vector of candi-dates so ctoc, cttc and ctp are confidence vectors foropinion word/target/pattern candidates after walk-ing t steps.
Initially c0oc is uniformly distributedon a few domain-independent opinion word seeds,then the following formula are updated iterativelyuntil cttc and ctoc converge:ct+1p = MToc p ?
ctoc +MTtc p ?
cttc (1)ct+1oc = (1?
?
)MTp oc ?
ctp + ?c0oc (2)ct+1tc = MTp tc ?
ctp (3)where MT is the transpose of matrix M and ?
isa small probability of teleporting back to the seedvertices which prevents us from walking too faraway from the seeds.
In the experiments below, ?is set 0.1 empirically.4 The Second Stage: Refining ExtractedResults Using Self-LearningAt the end of the first stage, we obtain a rankedlist of opinion words and opinion targets, in whichhigher ranked terms are more likely to be correct.Nevertheless, there are still some issues needed tobe addressed:1) In the target candidate list, some high-frequency frivolous general nouns such as?thing?
and ?people?
are also highly ranked.This is because there exist many opinion ex-pressions containing non-target terms such as?good thing?, ?nice people?, etc.
in reviews.Due to the lack of ground-truth knowledgefor opinion targets, the false opinion targetproblem still remains unsolved.2) In another aspect, long-tail opinion targetsmay have low degree in Sentiment Graph.Hence their confidence will be low althoughthey may be extracted by some high qual-ity patterns.
Therefore, the first stage is in-capable of dealing with the long-tail opiniontarget problem.3) Furthermore, the first stage also extractssome high-frequency false opinion wordssuch as ?every?, ?many?, etc.
Many termsof this kind are introduced by high-frequencyfalse opinion targets, for there are largeamounts of phrases like ?every time?
and?many people?.
So this issue is a side effectof the false opinion target problem.To address these issues, we exploit a self-learning strategy.
For opinion targets, we use asemi-supervised binary classifier called target re-fining classifier to refine target candidates.
Foropinion words, we use the classified list of opin-ion targets to further refine the extracted opinionword candidates.4.1 Opinion Targets RefinementThere are two keys for opinion target refinement:(i) How to generate the initial labeled data for tar-get refining classifier.
(ii) How to properly repre-sent a long-tail opinion target candidate other thancomparing frequency between different targets.For the first key, it is clearly improper to selecthigh-confidence targets as positive examples andchoose low-confidence targets as negative exam-ples2, for there are noise with high confidence andlong-tail targets with low confidence.
Fortunately,a large proportion of general noun noises are themost frequent words in common texts.
Therefore,we can generate a small domain-independent gen-eral noun (GN) corpus from large web corpora tocover some most frequently used general noun ex-amples.
Then labeled examples can be drawn fromthe target candidate list and the GN corpus.For the second key, we utilize opinion wordsand opinion patterns with their confidence scoresto represent an opinion target.
By this means, along-tail opinion target can be determined by itsown contexts, whose weights are learnt from con-texts of frequent opinion targets.
Thus, if a long-tail opinion target candidate has high contextualsupport, it will have higher probability to be foundout in despite of its low frequency.Creation of General Noun Corpora.
1000most frequent nouns in Google-1-gram3 were se-lected as general noun candidates.
On the otherhand, we added all nouns in the top three levels ofhyponyms in four WordNet (Miller, 1995) synsets?object?, ?person?, ?group?
and ?measure?
intothe GN corpus.
Our idea was based on the fact thata term is more general when it sits in higher levelin the WordNet hierarchy.
Then inapplicable can-didates were discarded and a 3071-word English2Note that the ?positive?
and ?negative?
here denote opin-ion targets and non-target terms respectively and they do notindicate sentiment polarities.3http://books.google.com/ngrams.1767GN corpus was created.
Another Chinese GN cor-pus with 3493 words was generated in the similarway from HowNet (Gan and Wong, 2000).Generation of Labeled Examples.
Let T ={Y+1,Y?1} denotes the initial labeled set, whereN most highly confident target candidates but notin our GN corpora are regarded as the positive ex-ample set Y+1, other N terms from GN corporawhich are also top ranked in the target list are se-lected as the negative example set Y?1.
The re-minder unlabeled candidates are denoted by T ?.Feature Representation for Classifier.
GivenT and T ?
in the form of {(xi, yi)}.
For a targetcandidate ti, xi = (o1, .
.
.
, on, p1, .
.
.
, pm)T rep-resents its feature vector, where oj is the opinionword feature and pk is the opinion pattern feature.The value of feature is defined as follows,x(oj) = conf(oj)?
?pk freq(ti, oj , pk)freq(oj)(4)x(pk) = conf(pk)?
?oj freq(ti, oj , pk)freq(pk)(5)where conf(?)
denotes confidence score estimatedby RWR, freq(?)
has the same meaning as in Sec-tion 3.2.
Particularly, freq(ti, oj , pk) representsthe frequency of pattern pk extracting opinion tar-get ti and opinion word oj .Target Refinement Classifier: We use supportvector machine as the binary classifier.
Hence, theclassification problem can be formulated as to finda hyperplane < w, b > that separates both labeledset T and unlabeled set T ?
with maximum mar-gin.
The optimization goal is to minimize over(T ,T ?,w, b, ?1, ..., ?n, ?
?1 , ..., ?
?k):12 ||w||2 + Cn?i=0?i + C?k?j=0?
?jsubject to : ?ni=1 : yi[w ?
xi + b] ?
1?
?i?kj=1 : y?j [w ?
x?j + b] ?
1?
?
?j?ni=1 : ?i > 0?kj=1 : ?
?j > 0where yi, y?j ?
{+1,?1}, xi and x?j representfeature vectors, C and C?
are parameters set byuser.
This optimization problem can be imple-mented by a typical Transductive Support VectorMachine (TSVM) (Joachims, 1999).4.2 Opinion Words RefinementWe use the classified opinion target results to re-fine opinion words by the following equation,s(oj) =?ti?T?pks(ti)conf(pk)freq(ti, oj , pk)freq(ti)where T is the opinion target set in which each el-ement is classified as positive during opinion tar-get refinement, s(ti) denotes confidence score ex-ported by the target refining classifier.
Particularly,freq(ti) =?oj?pk freq(ti, oj , pk).
A higherscore of s(oj) means that candidate oj is morelikely to be an opinion word.5 Experiments5.1 Datasets and Evaluation MetricsDatasets: We select three real world datasets toevaluate our approach.
The first one is calledCustomer Review Dataset (CRD) (Hu and Liu,2004) which contains reviews on five differentproducts (represented by D1 to D5) in English.The second dataset is pre-annotated and publishedin COAE084, where two domains of Chinese re-views are selected.
At last, we employ a bench-mark dataset in (Wang et al, 2011) and named itas Large.
We manually annotated opinion wordsand opinion targets as the gold standard.
Threeannotators were involved.
Firstly, two annotatorswere required to annotate out opinion words andopinion targets in sentences.
When conflicts hap-pened, the third annotator would make the finaljudgment.
The average Kappa-values of the twodomains were 0.71 for opinion words and 0.66for opinion targets.
Detailed information of ourdatasets is shown in Table 1.Dataset Domain #Sentences #OW #OTLarge(English)Hotel 10,000 434 1,015MP3 10,000 559 1,158COAE08(Chinese)Camera 2,075 351 892Car 4,783 622 1,179Table 1: The detailed information of datasets.
OWstands for opinion words and OT stands for targets.Pre-processing: Firstly, HTML tags are re-moved from texts.
Then Minipar (Lin, 1998)is used to parse English corpora, and StandfordParser (Chang et al, 2009) is used for Chinese4http://ir-china.org.cn/coae2008.html1768Methods D1 D2 D3 D4 D5 Avg.P R F P R F P R F P R F P R F FHu 0.75 0.82 0.78 0.71 0.79 0.75 0.72 0.76 0.74 0.69 0.82 0.75 0.74 0.80 0.77 0.76DP 0.87 0.81 0.84 0.90 0.81 0.85 0.90 0.86 0.88 0.81 0.84 0.82 0.92 0.86 0.89 0.86Zhang 0.83 0.84 0.83 0.86 0.85 0.85 0.86 0.88 0.87 0.80 0.85 0.82 0.86 0.86 0.86 0.85Ours-Stage1 0.79 0.85 0.82 0.82 0.87 0.84 0.83 0.87 0.85 0.78 0.88 0.83 0.82 0.88 0.85 0.84Ours-Full 0.86 0.82 0.84 0.88 0.83 0.85 0.89 0.86 0.87 0.83 0.86 0.84 0.89 0.85 0.87 0.86Table 2: Results of opinion target extraction on the Customer Review Dataset.Methods D1 D2 D3 D4 D5 Avg.P R F P R F P R F P R F P R F FHu 0.57 0.75 0.65 0.51 0.76 0.61 0.57 0.73 0.64 0.54 0.62 0.58 0.62 0.67 0.64 0.62DP 0.64 0.73 0.68 0.57 0.79 0.66 0.65 0.70 0.67 0.61 0.65 0.63 0.70 0.68 0.69 0.67Ours-Stage1 0.61 0.75 0.67 0.55 0.80 0.65 0.63 0.75 0.68 0.60 0.69 0.64 0.68 0.70 0.69 0.67Ours-Full 0.64 0.74 0.69 0.59 0.79 0.68 0.66 0.71 0.68 0.65 0.67 0.66 0.72 0.67 0.69 0.68Table 3: Results of opinion word extraction on the Customer Review Dataset.corpora.
Stemming and fuzzy matching are alsoperformed following previous work (Hu and Liu,2004).Evaluation Metrics: We evaluate our methodby precision(P), recall(R) and F-measure(F).5.2 Our Method vs. the State-of-the-artThree state-of-the-art unsupervised methods areused as competitors to compare with our method.Hu extracts opinion words/targets by using ad-jacency rules (Hu and Liu, 2004).DP uses a bootstrapping algorithm named asDouble Propagation (Qiu et al, 2009).Zhang is an enhanced version of DP and em-ploys HITS algorithm (Kleinberg, 1999) to rankopinion targets (Zhang et al, 2010).Ours-Full is the full implementation of ourmethod.
We employ SVMlight (Joachims, 1999)as the target refining classifier.
Default parametersare used except the bias item is set 0.Ours-Stage1 only uses Sentiment Graph Walk-ing algorithm which does?t have opinion word andopinion target refinement.All of the above approaches use same fivecommon opinion word seeds.
The choice of opin-ion seeds seems reasonable, as most people caneasily come up with 5 opinion words such as?good?, ?bad?, etc.
The performance on five prod-ucts of CRD dataset is shown in Table 2 and Ta-ble 3.
Zhang does not extract opinion words sotheir results for opinion words are not taken intoaccount.
We can see that Ours-Stage1 achievessuperior recall but has some loss in precision com-pared with DP and Zhang.
This may be becausethe CRD dataset is too small and our statistic-based method may suffer from data sparseness.In spite of this, Ours-Full achieves comparable F-measure with DP, which is a well-designed rule-based method.The results on two larger datasets are shownin Table 4 and Table 5, from which we can havethe following observation: (i) All syntax-based-methods outperform Hu, showing the importanceof syntactic information in opinion relation identi-fication.
(ii) Ours-Full outperforms the three com-petitors on all domains provided.
(iii) Ours-Stage1outperforms Zhang, especially in terms of recall.We believe it benefits from our automatical patternlearning algorithm.
Moreover, Ours-Stage1 donot loss much in precision compared with Zhang,which indicates the applicability to estimate pat-tern confidence in Sentiment Graph.
(iv) Ours-Full achieves 4-9% improvement in precision overthe most accurate method, which shows the effec-tiveness of our second stage.5.3 Detailed DiscussionsThis section gives several variants of our methodto have a more detailed analysis.Ours-Bigraph constructs a bi-graph betweenopinion words and targets, so opinion patternsare not included in the graph.
Then RWR algo-rithm is used to only assign confidence to opinionword/target candidates.Ours-Stage2 only contains the second stage,which doesn?t apply Sentiment Graph Walking al-gorithm.
Hence the confidence score conf(?)
inEquations (4) and (5) have no values and they areset to 1.
The initial labeled examples are exactlythe same as Ours-Full.
Due to the limitation ofspace, we only give analysis on opinion target ex-traction results in Figure 3.1769Methods MP3 Hotel Camera Car Avg.P R F P R F P R F P R F FHu 0.53 0.55 0.54 0.55 0.57 0.56 0.63 0.65 0.64 0.62 0.58 0.60 0.58DP 0.66 0.57 0.61 0.66 0.60 0.63 0.71 0.70 0.70 0.72 0.65 0.68 0.66Zhang 0.65 0.62 0.63 0.64 0.66 0.65 0.71 0.78 0.74 0.69 0.68 0.68 0.68Ours-Stage1 0.62 0.68 0.65 0.63 0.71 0.67 0.69 0.80 0.74 0.66 0.71 0.68 0.69Ours-Full 0.73 0.71 0.72 0.75 0.73 0.74 0.78 0.81 0.79 0.76 0.73 0.74 0.75Table 4: Results of opinion targets extraction on Large and COAE08.Methods MP3 Hotel Camera Car Avg.P R F P R F P R F P R F FHu 0.48 0.65 0.55 0.51 0.68 0.58 0.72 0.74 0.73 0.70 0.71 0.70 0.64DP 0.58 0.62 0.60 0.60 0.66 0.63 0.80 0.73 0.76 0.79 0.71 0.75 0.68Ours-Stage1 0.59 0.69 0.64 0.61 0.71 0.66 0.79 0.78 0.78 0.77 0.77 0.77 0.71Ours-Full 0.64 0.67 0.65 0.67 0.69 0.68 0.82 0.78 0.80 0.80 0.76 0.78 0.73Table 5: Results of opinion words extraction on Large and COAE08.Figure 3: Opinion target extraction results.5.3.1 The Effect of Sentiment Graph WalkingWe can see that our graph-based methods (Ours-Bigraph and Ours-Stage1) achieve higher recallthan Zhang.
By learning patterns automatically,our method captures opinion relations more ef-ficiently.
Also, Ours-Stage1 outperforms Ours-Bigraph, especially in precision.
We believe it isbecause Ours-Stage1 estimated confidence of pat-terns so false opinion relations are reduced.
There-fore, the consideration of pattern confidence isbeneficial as expected, which alleviates the falseopinion relation problem.
On another hand, wefind that Ours-Stage2 has much worse perfor-mance than Ours-Full.
This shows the effective-ness of Sentiment Graph Walking algorithm sincethe confidence scores estimated in the first stageare indispensable and indeed key to the learningof the second stage.5.3.2 The Effect of Self-LearningFigure 4 shows the average Precision@N curve offour domains on opinion target extraction.
Ours-GN-Only is implemented by only removing 50initial negative examples found by our GN cor-pora.
We can see that the GN corpora work quitewell, which find out most top-ranked false opin-ion targets.
At the same time, Ours-Full has muchbetter performance than Ours-GN-Only which in-dicates that Ours-Full can filter out more noisesother than the initial negative examples.
There-fore, our self-learning strategy alleviates the short-coming of false opinion target problem.
More-over, Table 5 shows that the performance of opin-ion word extraction is also improved based on theclassified results of opinion targets.Figure 4: The average precision@N curve of thefour domains on opinion target extraction.1770ID Pattern Example #Ext.
Conf.
PrO PrT#1 <OC>{mod}<TC> it has a clear screen 7344 0.3938 0.59 0.66#2 <TC>{subj}<OC> the sound quality is excellent 2791 0.0689 0.62 0.70#3 <TC>{conj}<TC> the size and weight make it convenient 3620 0.0208 N/A 0.67#4 <TC>{subj}<TC> the button layout is a simplistic plus 1615 0.0096 N/A 0.67#5 <OC>{pnmod}<TC> the buttons easier to use 128 0.0014 0.61 0.34#6 <TC>{subj}(V){s}(VBE){subj}<OC> software provided is simple 189 0.0015 0.54 0.33#7 <OC>{mod}(Prep){pcomp-c}(V){obj}<TC> great for playing audible books 211 0.0013 0.43 0.48Table 6: Examples of English patterns.
#Ext.
represent number of terms extracted, Conf.
denotes confi-dence score estimated by RWR and PrO/PrT stand for precisions of extraction on opinion words/targetsof a pattern respectively.
Opinion words in examples are in bold and opinion targets are in italic.Figure 5 gives the recall of long-tail opiniontargets5 extracted, where Ours-Full is shown tohave much better performance than Ours-Stage1and the three competitors.
This observation provesthat our method can improve the limitation oflong-tail opinion target problem.Figure 5: The recall of long-tail opinion targets.5.3.3 Analysis on Opinion PatternsTable 6 shows some examples of opinion patternand their extraction accuracy on MP3 reviews inthe first stage.
Pattern #1 and #2 are the twomost high-confidence opinion patterns of ?OC-TC?
type, and Pattern #3 and #4 demonstrate twotypical ?TC-TC?
patterns.
As these patterns ex-tract too many terms, the overall precision is verylow.
We give Precision@400 of them, which ismore meaningful because only top listed termsin the extracted results are regarded as opiniontargets.
Pattern #5 and #6 have high precisionon opinion words but low precision on opiniontargets.
This observation demonstrates the falseopinion target problem.
Pattern #7 is a pattern ex-ample that extracts many false opinion relationsand it has low precision for both opinion wordsand opinion targets.
We can see that Pattern #7 has5Since there is no explicit definition for the notion ?long-tail?, we conservatively regard 60% opinion targets with thelowest frequency as the ?long-tail?
terms.a lower confidence compared with Pattern #5 and#6 although it extracts more words.
It?s becauseit has a low probability of walking from opinionseeds to this pattern.
This further proves that ourmethod can reduce the confidence of low-qualitypatterns.5.3.4 Sensitivity of ParametersFinally, we study the sensitivity of parameterswhen recall is fixed at 0.70.
Figure 6 shows theprecision curves at different N initial training ex-amples and F filtering frequency.
We can see thatthe performance saturates when N is set to 50 andit does not vary much under different F , showingthe robustness of our method.
We thus set N to50, and F to 3 for CRD, 5 for COAE08 and 10 forLarge accordingly.Figure 6: Influence of parameters.17716 Conclusion and Future WorkThis paper proposes a novel two-stage frameworkfor mining opinion words and opinion targets.
Inthe first stage, we propose a Sentiment GraphWalking algorithm, which incorporates syntacticpatterns in a Sentiment Graph to improve the ex-traction performance.
In the second stage, we pro-pose a self-learning method to refine the result offirst stage.
The experimental results show that ourmethod achieves superior performance over state-of-the-art unsupervised methods.We further notice that opinion words are notlimited to adjectives but can also be other type ofword such as verbs or nouns.
Identifying all kindsof opinion words is a more challenging task.
Weplan to study this problem in our future work.AcknowledgementThanks to Prof. Yulan He for her insightfuladvices.
This work was supported by the Na-tional Natural Science Foundation of China (No.61070106, No.
61272332 and No.
61202329),the National High Technology Development 863Program of China (No.
2012AA011102), theNational Basic Research Program of China (No.2012CB316300), Tsinghua National Laboratoryfor Information Science and Technology (TNList)Cross-discipline Foundation and the OpeningProject of Beijing Key Laboratory of Inter-net Culture and Digital Dissemination Research(ICDD201201).ReferencesPi-Chuan Chang, Huihsin Tseng, Dan Jurafsky, andChristopher D. Manning.
2009.
Discriminativereordering with chinese grammatical relations fea-tures.
In Proceedings of the Third Workshop on Syn-tax and Structure in Statistical Translation, SSST?09, pages 51?59.Sajib Dasgupta and Vincent Ng.
2009.
Mine the easy,classify the hard: a semi-supervised approach to au-tomatic sentiment classification.
In Proceedings ofthe Joint Conference of the 47th Annual Meeting ofthe ACL and the 4th International Joint Conferenceon Natural Language Processing of the AFNLP: Vol-ume 2 - Volume 2, ACL ?09, pages 701?709.Kok Wee Gan and Ping Wai Wong.
2000.
Anno-tating information structures in chinese texts usinghownet.
In Proceedings of the second workshop onChinese language processing: held in conjunctionwith the 38th Annual Meeting of the Association forComputational Linguistics - Volume 12, CLPW ?00,pages 85?92, Stroudsburg, PA, USA.
Associationfor Computational Linguistics.Ahmed Hassan and Dragomir Radev.
2010.
Identify-ing text polarity using random walks.
In Proceed-ings of the 48th Annual Meeting of the Associationfor Computational Linguistics, ACL ?10, pages 395?403, Stroudsburg, PA, USA.
Association for Com-putational Linguistics.Minqing Hu and Bing Liu.
2004.
Mining and summa-rizing customer reviews.
In Proceedings of the tenthACM SIGKDD international conference on Knowl-edge discovery and data mining, KDD ?04, pages168?177, New York, NY, USA.
ACM.Valentin Jijkoun, Maarten de Rijke, and WouterWeerkamp.
2010.
Generating focused topic-specific sentiment lexicons.
In Proceedings of the48th Annual Meeting of the Association for Com-putational Linguistics, ACL ?10, pages 585?594,Stroudsburg, PA, USA.
Association for Computa-tional Linguistics.Wei Jin and Hung Hay Ho.
2009.
A novel lexical-ized hmm-based learning framework for web opin-ion mining.
In Proceedings of the 26th Annual Inter-national Conference on Machine Learning, ICML?09, pages 465?472.Thorsten Joachims.
1999.
Transductive inference fortext classification using support vector machines.
InProceedings of the Sixteenth International Confer-ence on Machine Learning, pages 200?209.Jason Kessler and Nicolas Nicolov.
2009.
Targetingsentiment expressions through supervised rankingof linguistic configurations.
In Proceedings of theThird International AAAI Conference on Weblogsand Social Media.Jon M. Kleinberg.
1999.
Authoritative sources in ahyperlinked environment.
J. ACM, 46(5):604?632,September.Nozomi Kobayashi, Kentaro Inui, and Yuji Matsumoto.2007.
Extracting aspect-evaluation and aspect-of relations in opinion mining.
In Proceedingsof the 2007 Joint Conference on Empirical Meth-ods in Natural Language Processing and Com-putational Natural Language Learning (EMNLP-CoNLL), pages 1065?1074, June.Fangtao Li, Chao Han, Minlie Huang, Xiaoyan Zhu,Ying-Ju Xia, Shu Zhang, and Hao Yu.
2010.Structure-aware review mining and summarization.In Proceedings of the 23rd International Conferenceon Computational Linguistics, COLING ?10, pages653?661, Stroudsburg, PA, USA.
Association forComputational Linguistics.Fangtao Li, Sinno Jialin Pan, Ou Jin, Qiang Yang, andXiaoyan Zhu.
2012.
Cross-domain co-extraction ofsentiment and topic lexicons.
In Proceedings of the50th Annual Meeting of the Association for Compu-tational Linguistics (Volume 1: Long Papers), pages410?419, July.1772Dekang Lin.
1998.
Dependency-based evaluation ofminipar.
In Workshop on Evaluation of Parsing Sys-tems at ICLRE.Kang Liu, Liheng Xu, and Jun Zhao.
2012.
Opin-ion target extraction using word-based translationmodel.
In Proceedings of the 2012 Joint Confer-ence on Empirical Methods in Natural LanguageProcessing and Computational Natural LanguageLearning, EMNLP-CoNLL ?12, pages 1346?1356,Stroudsburg, PA, USA.
Association for Computa-tional Linguistics.George A. Miller.
1995.
Wordnet: a lexical databasefor english.
Commun.
ACM, 38(11):39?41.Ana-Maria Popescu and Oren Etzioni.
2005.
Extract-ing product features and opinions from reviews.
InProceedings of the conference on Human LanguageTechnology and Empirical Methods in Natural Lan-guage Processing, HLT ?05, pages 339?346.Guang Qiu, Bing Liu, Jiajun Bu, and Chun Chen.2009.
Expanding domain sentiment lexicon throughdouble propagation.
In Proceedings of the 21st in-ternational jont conference on Artifical intelligence,IJCAI?09, pages 1199?1204.Ellen Riloff and Janyce Wiebe.
2003.
Learning ex-traction patterns for subjective expressions.
In Pro-ceedings of the 2003 conference on Empirical meth-ods in natural language processing, EMNLP ?03,pages 105?112, Stroudsburg, PA, USA.
Associationfor Computational Linguistics.Hongning Wang, Yue Lu, and ChengXiang Zhai.
2011.Latent aspect rating analysis without aspect key-word supervision.
In Proceedings of the 17th ACMSIGKDD international conference on Knowledgediscovery and data mining, KDD ?11, pages 618?626, New York, NY, USA.
ACM.Janyce Wiebe and Ellen Riloff.
2005.
Creating subjec-tive and objective sentence classifiers from unanno-tated texts.
In Proceedings of the 6th internationalconference on Computational Linguistics and Intel-ligent Text Processing, CICLing?05, pages 486?497.Yuanbin Wu, Qi Zhang, Xuanjing Huang, and Lide Wu.2009.
Phrase dependency parsing for opinion min-ing.
In Proceedings of the 2009 Conference on Em-pirical Methods in Natural Language Processing:Volume 3 - Volume 3, pages 1533?1541.Liheng Xu, Kang Liu, Siwei Lai, Yubo Chen, and JunZhao.
2013.
Walk and learn: A two-stage approachfor opinion words and opinion targets co-extraction.In Proceedings of the 22nd International World WideWeb Conference, WWW ?13.Lei Zhang, Bing Liu, Suk Hwan Lim, and EamonnO?Brien-Strain.
2010.
Extracting and ranking prod-uct features in opinion documents.
In Proceedingsof the 23rd International Conference on Computa-tional Linguistics: Posters, pages 1462?1470.Jingbo Zhu, Huizhen Wang, Benjamin K. Tsou, andMuhua Zhu.
2009.
Multi-aspect opinion pollingfrom textual reviews.
In Proceedings of the 18thACM conference on Information and knowledgemanagement, CIKM ?09, pages 1799?1802.Li Zhuang, Feng Jing, and Xiao-Yan Zhu.
2006.Movie review mining and summarization.
In Pro-ceedings of the 15th ACM international conferenceon Information and knowledge management, CIKM?06, pages 43?50.1773
