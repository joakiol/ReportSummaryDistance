A Corpus Study of Negative Imperatives inNatural Language Instructions*Keith Vander Linden tInformation Technology Research InstituteUniversity of BrightonBrighton BN2 4AT, UKknvl@itri.brighton.ac.ukBarbara Di EugenioComputational LinguisticsCarnegie Mellon UniversityPittsburgh, PA, 15213 USAdieugeni@andrew.cmu.eduAbstractIn this paper, we define the notion ofa preventative expression and discuss acorpus study of such expressions in in-structional text.
We discuss our cod-ing schema, which takes into accountboth form and function features, andpresent measures of inter-coder reliabil-ity for those features.
We then discussthe correlations that exist between thefunction and the form features.1 IntroductionWhile interpreting instructions, an agent is con-tinually faced with a number of possible actionsto execute, the majority of which are not appro-priate for the situation at hand.
An instructor istherefore required not only to prescribe the ap-propriate actions to the reader, but also to pre-vent the reader from executing the inappropriateand potentially dangerous alternatives.
The firsttask, which is commonly achieved by giving simpleimperative commands and statements of purpose,has received considerable attention in both theinterpretation (e.g., (Di Eugenio, 1993)) and thegeneration communities (e.g., (Vander Linden andMartin, 1995)).
The second, achieved through theuse of preventative xpressions, has received cornsiderably less attention.
Such expressions can in-dicate actions that the agent should not perform,or manners of execution that the agent should notadopt.
An agent may be told, for example, "Donot enter" or "Take care not to push too hard".
* This work is partially supported by the Engi-neering and Physical Sciences Research Council (~n,-sac) Grant J19221 and by the Commission of the Eu-ropean Union Grant LRE-62009.t After September 1,Dr.
Vander Linden's addresswill be Dept.
of Mathematics and Computer Science,Calvin College, Grand l~apids, MI 49546, USA.Both of the examples just given involve negation("do not" and "take care not").
Although this isnot strictly necessary for preventative expressions(e.g., one might say "stay out" rather than "donot enter"), we will focus on the use of negativeforms in this paper.
We will use the followingcategorisation f explicit preventative expressions:?
negative imperatives proper (termed DONTimperatives).
These are characterised by thenegative auxiliary do not or don't.
(1) Your sheet vinyl floor may be vinyl as-bestos, which is no longer on the mar-ket.
Don' t  sand it or tear  it upbecause this will put dangerous asbestosfibers into the air.?
other preventative imperatives (termed neg-TC imperatives).
These include take careand be careful followed by a negative infiniti-val complement, as in the following examples:(2) To book the strip, fold the bottom thirdor more of the strip over the middle ofthe panel, pasted sides together, tak ingcare not to crease the  wa l lpapersharp ly  at the fold.
(3) If your plans call for replacing the woodbase molding with vinyl cove molding, becareful  not  to damage the  walls asyou remove the wood base.The question of interest for us is under whichconditions one or the other of the surface forms ischosen.
We are currently using this informationto drive the generation of warning messages in theDRAFTER system (Vander Linden and Di Eugenio,1996).
We will start, by discussing previous workon negative imperatives, and by presenting an hy-.pothesis to be exI)lored.
We will then describethe nature of our corpus and our coding schema,346detailing the results of our inter-coder reliabilitytests.
Finally, we will describe the results of ouranalysis of the correlation between function andform features.2 Re la ted  work  on  Negat iveImperat ivesWhile instructional text has sparked much inter-est in both the semantics/pragmatics communityand the computational linguistics community, lit-tle work on preventative expressions, and in par-ticular on negative imperatives, has been done.This lack of interest in the two coinmunities hasbeen in some sense complementary.In semantics and pragmatics, negation has beenextensively studied (cf.
Itorn (1989)).
hnpera-rives, on the other hand, have not (for a notahleexception, see Davies (1986)).In computational linguistics, on the other hand,positive imperatives have been extensively inves-tigated, both from the point of view of interpre-tation (Vere and Bickmore, 1990; Alterman et al,1991; Chapman, 1991; Di Eugenio, 1993) and gen-eration (Mellish and Evans, 1989; McKeown etal., 1990; Paris et al, 1995; Vander Linden andMartin, 1995).
Little work, however, has been (ti-rected at negative imt)eratives.
(for exceptions seethe work of Vere and Bickmore (1990) in interpre-tation and of Ansari (1995) in generation).3 A Pr io r i  HypothesesDi Eugenio (1993) lint forward the following hy-pothesis concerning the realization of preventativeexpressions.
In this discussion, S refers to the in-structor (speaker / writer) who is referred to withfeminine pronouns, and H to the agent (hearer /reader), referred to with masculine t)ronouns:?
DONT imperat ives .
A DONT imperativeis used when S expects H to be aware of a cer-tain choice point, but to be likely to choosethe wrong alternative among many possi-bly infinite ones,  as in:(4) Dust-mop or vacuum your parquet flooras you would carpeting.
Do not  scrubor wet -mop the parquet .Here, H is aware of the choice of various clean-ing methods, but m W choose an inappropri-ate one (i.e., scrul)bing or wet-mopping).?
Neg-TC imperat ives .
In general, neg-TCimperatives are used when S expects H tooverlook a certain choice point; such choicepoint may be identified through a possibleside effect that the wrong choice will cause.It may, for example, be used when H mightexecute an action in an undesirable way.
Con-sider:(5) To make a piercing cut, first drill a holein the waste stock on the interior of thepattern.
If you want to save the wastestock for later use, drill the hole near acorner in the pattern.
Be carefu l  notto dril l  th rough the pat tern  l ine.Here, H has some choices as regards the exactposition where to drill, so S constrains himby saying Be careful not to drill through thepattern line.So tile ilypothesis is that H's awareness of thepresence of a certain choice point in executing aset of instructions affects the choice of one preven-tative expression over another.
This hypothesis,however, was based on a small corpus and on intu-itions.
In this paper we present a more systematicanalysis.4 Corpus  and  cod ingOur interest is in finding correlations between fea-tures related to the function of a preventative ex-pression, and those related to the form of that ex-pression.
Functional features are the semantic fea-tures of the message being expressed and the prag-matic features of the context of communication.The h)rm feature is the grammatical structure ofthe expression.
In this section we will start with adiscussion of our corpus, and then detail the func-tion and form features that we have coded.
Wewill conclude with a discussion of the inter-coderreliability of our coding.4.1 CorpusThe raw instructional corpus t}'om which we takeall the examples we have coded has been collectedopportunistically off the internet and from othersources.
It is at)l)roximately 4 MB in size andis made entirely of written English instructionaltexts.
The corpus includes a collection of recipes(1.7 MB), two comt)lete do-it-yourself nmnuals(RD, 1991; McGowan and R. DuBern, 1991) (1.2MB) l , a set of comt)utcr games instructions, theSun Open-windows on-line instructions, and a col-lection of administrative application forms.
As a1These do-it-yourself manuals were scanned byJoseph ltosenzweig.347collection, these texts are the result of a variety ofauthors working in a variety of instructional con-texts.We broke the corpus texts into expressions us-ing a simple sentence breaking algorithm and thencollected the negative imperatives by probing forexpressions that contain the grammatical formswe were interested in (e.g., expressions containingphrases such as "don't" and "take care").
Thefirst row in Table 1 shows the frequency of occur-rence for each of the grammatical forms we probedfor.
These grammatical forms, 1175 occurrencesin all, constitute 2.5% of the expressions in the fullcorpus.
We then filtered the results of this probein two ways:1.
When the probe returned more than 100 ex-amples for a grammatical form, we randomlyselected around 100 of those returned.
Wetook all the examples for those forms that re-turned fewer than 100 examples.
The numberof examples that resulted is shown in row 2of Table 1 (labelled "raw sample").2.
We removed those examples that, althoughthey contained the desired lexical string, didnot constitute negative imperatives.
Thispruning was done when the example was notan imperative (e.g., "If you don't  see theMail Tool window ... ") and when the exam-ple was not negative (e.g., "Make sure to lockthe bit tightly in the collar.").
The numberof examples which resulted is shown in row3 of Table 1 (labelled "final coding").
Notethat the majority of the "make sure" exam-ples were removed here because they were en-surative.As shown in Table 1, the final corpus sample ismade up of 239 examples, all of which have beencoded for the features to be discussed in the nexttwo sections.4.2 FormBecause of its syntactic nature, the form featurecoding was very robust.
The possible feature val-ues were: DONT - -  for the do not and don'tforms discussed above; and neg-TC - -  for takecare, make sure, ensure, be careful, be sure, becertain expressions with negative arguments.4.3 Funct ion FeaturesThe design of semantic/pragmatic features usu-ally requires a series of iterations and modifica-tions.
We will discuss our schema, explaining thereasons behind our choices when necessary.
Wecoded for two function features: INTENTIONAL-ITY and AWARENESS, which we will illustrate inturn using ~ to refer to the negated action.
Theconception of these features was inspired by thehypothesis put forward in Section 3, as we willbriefly discuss below.4.3.1 Intentlonal i tyThis feature encodes whether the agent con-sciously adopts the intention of performing a.We settled on two values, CON(scious) andUNC (onscious).
As the names of these values maybe slightly misleading, we discuss them in detailhere:CON is used to code situations where S expectsH to intend to perform ~.
This often happenswhen S expects H to be aware that ~ is analternative to the ~ H should perform, and toconsider them equivalent, while S knows thatthis is not the case.
Consider Ex.
(4) above.If the negative imperative Do not scrub orwet-mop the parquet were not included, theagent might have chosen to scrub or wet-mopbecause these actions may result in deepercleaning, and because he was unaware of thebad consequences.UNC is perhaps a less felicitous name becausewe certainly don't mean that the agentmay perform actions while being unconscious!Rather, we mean that the agent doesn't re-alise that there is a choice point It is used intwo situations: when c~ is totally accidental,as in:(6) Be careful not to burn the garlic.In the domain of cooking, no agent wouldconsciously burn the garlic.
Alternatively, anexample is coded as UNC when a has to beintentionally planned for, but the agent maynot take into account a crucial feature of a,as in:(7) Don't charge - or store a tool wherethe temperature is below 40 degrees F orabove 105 degrees.While clearly the agent will have to intend toperform charging or storing a tool, he is likelyto overlook, at least in S's conception, thattemperature could have a negative impact onthe results of such actions.4.3.2 AwarenessThis binary feature captures whether the agentis AWare or UNAWare that the consequences ofare bad.
These features are detailed now:348Raw GrepRaw SampleFinal CodingDONT Neg-TCII d?n~t I d?
not II take care make sure be careful417 385 21 229 52100 99 21 104 5278 89 17 3 46167 72be sure71716Table 1: l)istribution of negative imperativesUNAW is used when H is perceived to be un-aware that a is bad.
For example, Exam-pie (7) ("Don't charge or store a toolwhere the temt)erature is below 40 degrees Foz' above 105 degrees") is coded as UNAW be-cause it is unlikely that tile reader will knowabout this restriction;AW is used when It is aware that a is bad.
Ex-ample (6) ("Be careful not to burn the gar-lic") is coded as AW t)e(:ause the reader iswell aware that burning things when cookingthem is bad.4.4 Inter -coder  rel iabi l i tyEach author independently coded each of the fea-tures for all tile examples in tile sample.
The per-centage agreement is 76.1% for intentionality and92.5% for awareness.
Until very recently, thesevalues would most; likely have been accepted asa basis for fllrther analysis.
To support a morerigorous analysis, however, wc have followed Car-letta's suggestion (1996) of using the K coettMcnt(Siegel and Castellan, 1988) as a measure of coderagreement.
This statistic not only measures agree-ment, but also factors out chance agreement, andis used for nominal (or categorical) scales.
In nom-inal scales, tiler(; is no relation between the differ-ent categories, and classification induces equiva-lence classes on the set of classified objects.
In ourcoding schema, each feature determines a nominalscale on its own.
Thus, we report the values of theK statistics for each feature we coded for.if P(A)  is the prot)ortion of times the codersagree, and P(E)  is the t)rot)ortion of times thatcoders are expected to agree by chance, K is com-puted as follows:K = P(A)  - P (E)1 - P (E )Thus, if there is total agreement among thecoders, K will be 1; if there is no agreementother than chance agreement, K will be 0.
Thereare various ways of computing P(E);  accordingto Siegel and Castellan (1988), most researchersTable 2:liabilityKappa Value Reliability Level.00 - .20.21 - .40.41 .60.61 .80.81 1.00slightfairmoderatesubstantialalmost t)erfe.ctTim Kappa Statistic and Inter-coder Re-feature KINTENTIONALITY 0.51AWARENESS 0.75Table 3: Kappa values for flmction featuresagree oil tile following formula, which we alsoadopted:: Zgj=lwhere m is the nulnber of categories, and pj is theproportiorL of t)bjccts assigned to category j.The mere fact that K may have a vahw.k greater than zero is not sufficient to drawany conclusion, though, as it inust be estab-fished whether k is significantly different fl'omzero.
While Siegel and Castellan (1988, p.289)point out that it is possible to check tile sig-nificance of K when tile ,lumber of objectsis large, Rietveh!
and van Hout (1993) suggest amuch simpler correlation between K values andinter-coder reliability, shown in Figure 2.For the form feature, the Kappa wfiue is 1.0,which is not surprising iven its syntactic nature.The flmction features, which are more subjec-tive in nature, engender more disagreenmnt ainongcoders, as shown by the K vahms in Table 3.
Ac-cording to Rietveld and van Hout, tile awarenessfeature shows "substantial" agreement and the in-tentioimlity feature shows "mo(lerate" agreement.5 AnalysisIn our analysis, we have attempted to discoverand to empirically verify correlations between tile349feature X 2 significance levelintentionality 51.4 0.001awareness 56.9 0.001Table 4: X 2 statistic and significance levelsfunction features and the form feature.
We didthis by computing X 2 statistics for the variousfunctional features as they compared with formdistinction between DONT and neg-TC impera-tives.
Given that the features were all two-valuedwe were able to use the following definition of thestatistic, taken from (Siegel and Castellan, 1988):= N( IAD - BC I  -(A + B)(C 4- D)(A 4- O)(B 4- D)Here N is the total number of examples and A-Dare the values of the elements of the 2x2 con-tingency table (see Figure 5).
The X 2 statisticis appropriate for the correlation of two indepen-dent samples of nominally coded data, and thisparticular definition of it is in line with Siegel'srecommendations for 2x2 contingency tables inwhich N > 40 (Siegel and Castellan, 1988, page123).
Concerning the assumption of indepen-dence, while it is, in fact, possible that some ofthe examples may have been written by a singleauthor, the corpus was written by a considerablenumber of authors.
Even the larger works (e.g.,the cookbooks and the do-it-yourself manuals) arecollections of the work of multiple authors.
We feltit acceptable, therefore, to view the examples asindependent and use the X 2 statistic.To compute X 2 for the coded examples in ourcorpus, we collected all the examples for whichwe agreed on both of the functional features (i.e.,intentionality and awareness).
Of the 239 totalexamples, 165 met this criteria.
Table 4 lists theX 2 statistic and its related level of significance foreach of the features.
The significance l vels for in-tentionality and awareness indicate that the fea-tures do correlate with the forms.
We will focuson these features in the remainder of this section.The 2x 2 contingency table from which the in-tentionality value was derived is shown in Ta-ble 5.
This table shows the frequencies of exam-ples marked as conscious or unconscious in rela-tion to those marked as DONT and neg-TC.
Astrong tendency is indicated to prevent actionsthe reader is likely to consciously execute usingthe DONT form.
Note that the table entry forconscious/neg-TC is 0, indicating that there wereno examples marked as both CON and neg-TC.Similarly, the neg-TC form is more likely to beConscious Unconscious TotalDONT 61 (A) 45 (B) 106neg-WC 0 (C) 59 (D) 59Total 61 104 165 (N)Table 5: Contingency Table for IntentionalityAware Unaware ~btalDONT 3 103 106neg-TC 32 27 59Total 35 130 165Table 6: Contingency Table for Awarenessused to prevent actions the reader is likely to ex-ecute unconsciously.In Section 3 we speculated that the hearer'sawareness of the choice point, or more accurately,the writer's view of the bearer's awareness, wouldaffect the appropriate form of expression of thepreventative expression.
In our coding, awarenesswas then shifted to awareness of bad consequencesrather than of choices per se.
However, the basicintuition that awareness plays a role in the choiceof surface form is supported, as the contingencytable for this feature in Table 6 shows.
It indi-cates a strong preference ibr the use of the DONTform when the reader is presumed to be unawareof the negative consequences of the action to beprevented, the reverse being true for the use of theneg-TC form.The results of this analysis, therefore, demon-strate that the intentionality and awareness fea-tures do co-vary with grammatical form, and inparticular, support a form of the hypothesis putforward in Section 3.6 ApplicationWe have successfully used the correlations dis-cussed here to support the generation of warningmessages in the DRAFTER project (Paris and Van-der Linden, 1996).
DRAFTER is a technical author=ing support tool which generates instructions forgraphical interfaces.
It allows its users to spec-ify a procedure to be expressed in instructionalform, and in particular, allows them to specify ac-tions which must be prevented at the appropriatepoints in the procedure.
At generation time, then,DRAFTER must be able to select the appropriategrammatical form for the preventative expression.We have used the correlations discussed in thispaper to build the text planning rules requiredto generate negative imperatives.
This is dis-cussed in more detail elsewhere (Vander Lindenand Di Eugenio, 1996), but in short, we input our350coded examples to Quinlan's C4.5 learning algo-rithm (Quinlan, 1993), which induces a decisiontree mapping from the functional features to theappropriate form.
Currently, these features areset mammlly I)y the user as they are too ditticultt,o derive automatically.7 Conclus ionsThis paper has detailed a corpus study of pre-ventative xpressions in instructional text.
Thestudy highlighted correlations between flmctionalfeatures and grammatical form, tim sort of corre-lations usefld in I)oth interpretation and genera-tion.
Studies such as this have been done beforein Computational Linguistics, although not, toour knowledge, on preventative expressions.
Thepoint we want to emphasise here is a methodolog-ical one.
Only recently have studies been makinguse of more rigorous tatistical measures of accu-racy and reproducibility used here.
We have foundthe Kappa statistic ritical in the definition of thefeatures we coded (see Section 4.4).We intend to augment and refine the list; of fea-tures discussed here and hope to use them in un-derstanding applical;ions as well as generation ap-plications.
We, also intend to extend the analysisto ensurative ext)ressions.ReferencesRichard Alterman, Roland Zito-Wolf, andTamitha Carpenter.
1991.
Interaction, Com-prehension, and Instruction Usage.
TechnicalReport CS-91-161, Dept.
of Computer Science,Center R)r Complex Systems, Brandeis Uniw~.r -sity.Daniel Ansari.
1995.
Deriving Procedural andWarning Instructions from Device and Envi-ronment Models.
Master's tt,esis, University ofToronto.Jean Carletta.
1996.
Assessing agreement o~, clas-sification tasks: the kappa statistic.
Computa-tional Lingustics, 22(2).David Chapman.
1991.
Vision, Instruction andAction.
Cambridge: MIT Press.Eirlys Davies.
1986.
The English Imperative.Croom Helm.Barbara Di Eugenio.
1993.
Understanding Nat-ural Language Instructions: a ComputationalApproach to Purpose Ulauses.
Ph.D. thesis,University of Pennsylvania, December.
Tech-nical Report MS-CIS-93-91 (Also Institute forResearch in Cognitive Science report IRCS-93-59,).Laurence Horn.
1989.
A Natural History of Nega-tion.
The University of Chicago Press.J.
McGowan and editors R. DuBern.
1991.
HomeRepair.
London: Dorlin Kingersley Ltd.Kathleen R. McKeown, Michael Elhadad, Yu-miko l%lkumoto, Jong Lira, Christine Lombardi,Jacques Robin, and ~'ank Smadja.
1990.
Natu-ral language generation i COMET.
In RobertDale, Chris Mellish, and Michael Zoek, editors,Current Research in Natural Language Gene~u-tion, chapter 5.
Academic Press.Chris Mellish and Roger Evans.
1989.
Naturallanguage generation from plans.
ComputationalLinguistics, 15(4):233 249, December.Cdcile Paris and Keith Vander Linden.
1996.Drafter: An interactive support ool for writ-lug multilingual instructions.
IEEE Computer.to appear.C6cile Paris, Keith Vander Linden, MarkusFischer, A~,thony Hartley, Lyn Pemberton,R.ichard Power, and Donia Scott.
1995.
Asupport tool for writing multilingual instruc-tions.
In Proceedings of the kburtcenth Inter-national Joint Conference on Artificial Intelli-gence, August 20 25, Montr6al, Canada, pages1398 1404.
Also availal)le as ITRI report \[Tt{\]-95-11.J.
Ross Quinlan.
1993.
C/t.5: Programs for Ma-chine Learning.
Morgan Kaufmann.:1991.
Reader's Digest New Comt)lete Do-It-Yourself Manual.T.
Rietveld and R. van Hout.
1993.
StatisticalTechniques for the Study of Language and Lan-guage Bchaviour.
Mouton de Gruyter.Sidney Siegel and N. John Castellan, Jr. 1988.Nonparametric statistics fl)r the behavioral sci-ences.
McGraw Hill.Keith Vander Linden and Barbara Di Eugenio.1996.
Learning micro-planning rules tbr pre-ventative xpressions.
In Proceedings of theEighth International Workshop on Natural Lan-guage Generation, Herstmonceux, England, 13--15 June 1996, June.
To appear.Keith Vander Linden and James Martin.
1995.Expressing Local Rhetorical Relations in hl-structional Text.
Computational Linguistics,21(1):29 57.Stevcn Vere and Timothy Bickmore.
1990.
A Ba-sic Agent.
Computational Intelligence, 6:41 60.351
