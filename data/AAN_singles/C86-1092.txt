Per~:  Idngw for Parsing and ~ TransferKenneth R. Beesley David HefnerA.L.P.
Systems190 West 800 NorthProvo, Utah 84604 USAAbstractPeriPhrase is a high-level computer languagedeveloped by A.L.P.
Systems to facilitate parsing andstructural transfer.
It is designed to speed thedevelopment of cc~puter-assisted translation systemsand grammar checkers.
We describe the syntax andsemantics of this tool, its integrated developmentenvironment, and some of our experience with it.I.
IntroductiGnUp to 80% of the time needed to develop a newlanguage pair for coni0uter translation is spent inwriting source-language analysis and transferprograms.
The PeriPhrase language and developmentenvironment were created to allow a computationallinguist to write such programs more quickly, usinghigh-level rules that are easily written, read, anddebugged.The syntax of PeriPhrase was heavily influencedby its predecessor "PHRASE," which in turn borrowedfrom BNF, rule-based programming languages likePROLOG, and expert systems.
There are obvioussimilarities to PARSIFAl., Marcus ' DeterministicParser, and many ot/ler projects.
It is perhaps truethat few of the individual features of the languageoriginated with us.
However, we believe the synthesisof these features together with a very powerfuldebugging environment to be unique and significant,reflecting the practical needs of coni0utationallinguists building large commercial systems.I L  P e r ~  SyntaxA PeriPhrase program consists of a declarationssection followed by one or more rule packets.
Eachpacket contains one or more rules.
All the categorynames, variable names, attribute names, and actionnames used in the program must be declared, and thepossible values for each attribute must beenumerated.
As applying rules is a time-consumingprocess, packets of rules can be activated only asthey are needed, either when a program starts orduring execution.Simple PeriPhrase rules are composed of apattern on the left side and a rewrite on the rightside, separated by a rewrite operator.pattern => rewrite.PeriPhrase tries to match the pattern on the databeing parsed.
If the pattern matches, then the datais restructured or recoded according to the rewrite.One way of looking at rules is to see the pattern asa "before" snapshot and the rewrite as an "after"snapshot.The pattern is composed of one or more patternelements, the simplest being a declared categoryname.
The following are valid patterns:E~T AD/  NV NPNP  VPThe most common operation performed by PeriPhraserules is siaple conflation, where all the data itemsmatched by the pattern are made J/mnediate sons undera new father node.
The following simple rule forms anoun phrase (NP).!
1 2 3D~T AD7 N --> NP\[I, 2, 3\].A cc~ment line, preceded by an exclamation mark, isincluded in this example to highlight the ~tchunits, which are always counted in strictleft-to-right order.
In the rewrite, the presence ofthe category name NP indicates the i~sertion of anode of that category.
~le square brackets followingthe NP indicate that it is to be a new father node.The numbers appearir~7 in the rewrite are formalpronotms referring back to the match units of thepattern.
This rewrite indicates that the first, t/lesecond and the third match units (i.e.
all the matchunits) are to be amde sons under a new NP node, illthe order indicated.
When the rule fires, a tree likethe following will be built.NPE~ AD7 NMany other m11es are constructed on the same pattern?V NP => VP\[I, 2\]?NP VP => S\[I, 2\].Because simple conflation is so conm~n, theabbreviation \[..?\], which references all the matchttnits, is provided.
The abbreviated rules below arecompletely equivalent to the rules just described.V NP => VP\[...\].NP VP => S\[...\].When explicit formal pronouns, rather than \[... \]are used, the omission of any formal pronoun causesthe corresponding match unit to be deleted.
Thepresence of a category name in the rewrite alwayscauses an J~sertion, either of a new father node or anew terminal node.Simple conflation rules are muc/% like thecontext-free phrase-structure rules familiar toformal linguists, but PeriPhrase rules can also becontext-sensitive.
Suppose that we declared acategory N V for marking noun-verb hom(m/raphs.
(Itshould be ~phasized that all category names, and thesignificance given to them, are determined by theprogranm~r. )
When a noun-verb homograph like "walk"occurs in the context "the walk," the followingPeriPhrase rule will disambiguate it.!
1 2E~T NV --> 1 2:=N.That is, if an N V is found ~ ia te ly  preceded by aE~T, that N_V (the second match unit) isrecategorized as a noun (an N).390Pattern ele~ents can be preceded by a prefix,like the Klee/le Star, indicating that zero or more ofthe indicated item~ can appear in the data.Other prefixes available are i+, which indicates thatone or more.
of the matching items ~m~st appear, and0=i, which :hndicates optionality.Similar to the sinlole pattern elements based ona category name are WIID pattern elements, which willmatch a dat~ item of any category.
The following rulematches whatever is left ~ fo~s  it into asentence.~WILD ~--> s\[..o\].it is often convenient to co~%strain categories byspecifyir~ attributes or "features" which must alsomatch or not match.D~T( r~/3~pl r~ l )  *AE~ N( r~m~Jngu lar )  =>~P\[... \] (mm~.r : - - - - s in~iar ) .Ehe pattern element N( r~ ing~lar )  will matchonly if Per/Phrase finds an iteml of category ~\[ whosentm~oer attribute is equal to 'singular.'
The patternelement ~f (~p l t~ca l )  will n~tch only if theitem is of category E~T and the n ~  attribute ofthe item is N~D equal to 'plura\]..' The := orassignment operator in t/~e rewrite indicates that anattribute is to be set to a particular value.. Therewrite ~P\[ .... \] (n~:=s Jngu lar )  indicates that anNP is to be.
built tip in the way already described,and the r ~  feature of tlle overall hrP is to ~ setto 'singular.'
Attribute restrictions can be set forany sii~o\]e pattern element in the pattern, ~ Iattribute sett~K~S call be sE~cified for any insertedor pronoun-referenced item in the rewrite.
The = and# signs can }~e iterated.D~'(nrm~--191u~l=~oth ) !
ei%1~ar 'plural' or ~both'D~T(nnmber#pl~l#both) !
nsither 'plural' nor 'both ~W~en a pattern is being matched, variables canbe "loaded" with the attribute values of items beingmatched.
For exa~iole , the following pattern wouldcause variable X to be loaded with the value of theTKmtber attribute for the N and t/~e variable Y to  beloaded with the case value.E~r *ALXr N(X:=number, Yt=case) =>~P\[.
o.
\] (nu~er:=X, oase:=y).Inside a rewrite, attributes can also be set frc~loaded variables, as in the example above, where thenumber and (~se of the head noun of a noun phrase areeffectively passed up to the noun phrase itself.PeriPhrase also provides pattern e l~ents  moreexotic than category names and WILD.
An OR patternele/~lent, enclosed in curly brac~kets, l~atches when oneof an enumerated set of possibilities is found.
Anexclusion pattern element, enclosed in anglebrackets, ~m~tches ~le/~ none of an enume~rated set ofpossibi l i t i~ is fotnld.<N & Alia>!
OR pattern element!
exclusion pattern elementAs it is sc~t J~es cenvenient to specifycommence  of patterns with/x~ patterns, PeriPhraseprovides the subpattern, whose elephants are boundedby parentheses.
The following example assuages that wehave declared a category O~MA, which would beassigned to the ptnlctuation r~k  of the s~ne name..The second pattern elea~nt will ~tch  zero or \]~:ceinstances of the s~/bpattern (A~\[ 0=IOOMMA).i.
1 2 3*(An~ 0-1COMMA) N => NP\[I, 2, 3\].Most powerful of all are the hierarchi~lpattern elements, which allow rules to match wholetrees and subtrees that have l~.n built up previouslyduring t/%e analysis.
The follow;hlg ex i le  will n~tc~han NP which consists of a E~9, ~ ADE, and an N.!
\] 2 3 4NP\[D~, AIIY~ N\]lhe transfer operations of inse~t:Lon ~x\]deletion have already \]:~aen me/%tioned.
Transfer ~ lalso involve ~order ing and rest~Ict.uring.
~llefollowing rule is a simplified example of reorderingfor transferrJn~g f~xm~ EngliE'~, ~lere adjectiw~sgenerally precede the noun tJ%ey modify, to Fre/\]cJl,where the adjectives generally follow the noun.
Normthe reordering of the third and fourth match unit~oi 1 2 3 4NP\[E~T, *ran, ~\] => l\[2, 4, 3\].~he fo\]lowi~Ig t~es  ~iow san~01e data before and aftertAis ru le  ilas fired.NP NP.
t  / I~- .
t / I "~~E~T ALIY N E~' N ADE(the) (brc~;n) (dog) (the) (dog)  (br~;n)It was recogniz~i from the beginning thatPeriPhrase itself could not do everything and that itshould not try to do everything necessary foranalysis and transfer.
To accommodate the need tointegrate lower-level c~de, PeriPhrase allows theuser to call actie~s, arbitrarily co1~iolex C prograr~,during l~eriPln.~ase processing.
Actions appearoptionally in rules, both after a pattern and after arewrite, qhe following is a ~m~ple rule containingaction calls to chec~k flag, prirrt ~ andset flag.E~ */Hg/ N; c~ak  fl~tg(X) =>NP\[... \] ; print a~=sage, set_flag(Y, Z).Actions can also be called as l~Ickets are entered a~lexited.
Constani~ and variabl~3 (X, Y and Z in theexample above) can optionally be ~Icluded in actioncalls as paramete/~.
Because pa~\[meters are passed byaddress, action routines can change the value ofvariables in the calling PeriPhrase program.391V.
Search OrderThe rules for each packet are retchedleft-to-right or right-to-left at the discretion ofthe pro~.
In addition, programmers canoptionally specify a trave/sal order for each packet,either preorder or postorder.
If a traversal order isspecified, the packet is ,,free," and PeriPhrase willsearch down inside tree structures already built upwhen trying to match rule patterns.
Otherwise, apacket is "fixed," and the pattern-matching search islimited to the topmost visible roots of the treesalready formed.v~.
~ i~ i ty  ~ ~ lex  la~lesIn most natural languages, especially writtenEnglish, there are many genuinely ambiguousconstructions where an analysis could go two or moreways.
For example, the noun phrase the small carfac~cory is ambiguous as to whether the writer means asmall factory that makes cars or a factory that makess~all cars.
The analysis chosen will make a bigdifference if the goal is translation into French ora similar language.Assuming that small is categorized as an AIIT andthat car and factory are categorized as Ns, either ofthe following trees could be built.NPL~q' NCthe  /ADJ NN N(car) (factory)NPn~T N (~) / ~N NAD~ N(s~u) (car)A PeriPhrase p r o ~  might determine that onereading is statistically more ~ n  than the otherand simply default every time to that one reading.Only one of the following two rules would appear inthe gramm3r, depending on the reading desired.AIIT N N ---> NP\[I, N\[2, N\[3, 4\]\]\].
!sm~ll (car factory)AII7 N N => NP\[I, N\[N\[2, 3\], 4\]\].!
(small car) factoryIn a similar vein, the analysis could diverge intotwo parallel paths, and each structure and eachanalysis would be given a confidence rating.
At theend, the analysis with the highest overall confidencerating would win.
Another possibility is humaninteraction.These three possibilities, statisticaldefaulting, parallel processing, and interaction, areall responses to the same kind of problem: decidinghow to make a genuine choice during analysis.
InPeriPhrase, all three possibilities are a ~ t e dby a single specialization, the compleK rule, whichis perhaps the most novel feature of the language.
Acomplex rule lists a set of possible rewrites, onefor each alternate path.
A rule to handle the smallcar factory structure is the following.392I~T ~ N N; action(X) =>clxx~se(X) { NP\[I, N\[2, N\[3, 4\]\]\] I~p\[i, N\[N\[2, 3\], 4\]\] }.The rewrite section begins with the reserved wordchoose, which takes a ,,discriminator" variable, hereX, as an argument.
Following choose(X) is an OR listof possible rewrites, enclosed in curly brackets andseparated by vertical lines.
Where n is the value ofX at the time of execution of the rewrite, the nthrewrite rule in the list is performed.Usually the variable used to choose a rewrite isset by an action routine in the same rule, but thisis not required.
Any variable can control the choice,and it could even be a reserved variable set to adesired default reading.The most straightforward way for an action toset the discr/iminator variable is to interact withthe user.
The choices would be presented in some menuform to the screen, and the user's answer woulddirectly choose the rewrite.
Actions could also bewritten to set the discriminator after performingcomplex syntactic and semantic checks.Setting the discrim/nator variable to 0 (zero)causes PeriPhrase to pursue both paths in apseudo-parallel fashion.V~.
~ neve lq~t  ~The PeriPhrase user is provided a developmentenvironment which is designed to enhance productivityand shelter the user from irrelevant system-leveldetails.
The development environment consists of aneditor, an incremental compiler, a source-leveldebugger, and a user--interface n~mUoFrom the menu, the user can edit any packet,which will be incrementally compiled when executionis restarted.
The debugger allows the user to setvirtually unlimited numbers of breakpoints onindividual rules, packets, and actions.
In additionto breakpointing, the user may examine the workingmemory (database), the production ~emory (thePeriPhrase source code), PeriPhrase variables, actionparameters, and other data relevant to the state ofthe PeriPhrase program execution.
PeriPhrase programscan be "animated."
The debugger itself isconm~qnd-driven and user-customizable, with full macrocapabilities.VIII.
CunclusionWe at A.L.P.
Systems are finding PeriPhrase tobe a valuable software tool for building practicalnatural-language systems.
An earlier version of thelanguage, called PHRASE, is already being used in ourtranslation products as part of the front-endroutines that divide a text into sentences.
AnEnglish analysis program has been started, and wealready have a German analysis program with about 600rules in 80 packets.
PeriPhrase is also being used inour Writing Aids division to build a grammar checkerfor English.
We anticipate that PeriPhrase will beused increasingly over the coming years as A.L.P.Systems develops new products and expands itstranslation line to cover more language pairs.
Wealso expect that PeriPhrase and its developmentenvironme/%t will continue to evolve within theestablished framework.
