THE G~INERATION OF TERM DEFINITIONS FROM AN ON-LINE TEP~NOLOGICAL ~SA\ [~SJohn McNaughtCentre for Computational LinguisticsbT~ISTP.O.
Box 88Manchester UKABSTRACTA new type of machine dictionary isdescribed, which uses terminological relations tobuild up a semantic network representing the termsof a particular subject field, through interactionwith the user.
These relations are then used todynamically generate outline definitions of termsin on-line query mode.
The definitions producedare precise, consistent and informative, and allowthe user to situate a query term in the localconceptual ~vironment.
The simple definitionsbased on terminological relations are supplementedby information contained in facets and modifiers,which allow the user to capture different views ofthe data.I IntroductionThis paper describes an on-golng projectbeing carried cot at U~T,  which is concernedwith the nature, constructicn and use ofspecialised machine dictionaries, concentrating onone particular type, the terminological thesanrus(Sager, 1981).
~ system described here iscapable of c~ynem~ically producing outlinedefinitions of technical terms, and it is thisfeature which distinguishes it from otherautomated dictionaries.II BackgroundA.
Published Specialised DictionariesThese traditional reference tools, whileoften containing hi~n quality terminologycollected after painstaking research, do not inthe normal case afford the user an overallconceptual view of the subject field, as theyexhibit a relative lack of structure.
Moreover,due to the limitations of the printed page, theform%t of the entries is fixed, such that 1~serswith differing information needs are obliged tosearch through to them i r re levant  data.
The onlyreal aid ~ ich  allows the user to place a termroughly in the local conceptual environment is theconve~.tional def~_nition.
However, such definitionstend to be idiosyncratic, inconsistent and non-rigorous, especially if the subject field is ofany great size.
Contexts, while of some help, are* sponsored by the Department of Educationand Science through the award of aResearch Fellowship in fx~fo1~tion Sciencenotoriously difficult to find and control, andshould only be seen as supplementary to a rigorousdefiniticn of the term which firmly places theterm in the conceptual space.
Those referencetools containing definitions which are rigorousexist mainly in the form of glossaries establishedby standards bodies.
However, standardisation ofterminologies is a slow affair, and is restrictedto certain key terms or fields, such that nooverall conceptual structure r,~y be obtained fromthese glossaries.B.
Term Banks and F~chine DictionariesTerm Banks offer many advantages overtraditional dictionaries, and are becoming moreand more common, especially among organisationswhich have urgent terminolo~ needs, such as theCo~ss icn  of the European Communities or theelectronics firm Siemens AG in W. Germar~y.National bodies likewise use term banks to controlthe creation and dissemination of new standaraisedterms, e.g.
AFNOR (France) and DIN (W. Germany).In the UK, work is going ahead, coordinated byUMIST and the British Library, to set up a BritishTerm Bank.
Other in~portant term banks exist inDenmark (DANTe)  and Sweden (TE~K) .
However,despite this growth in the number of term b~nksand other computer based dictionaries, thereremains a sad lack of overall structuring of theterminological data.
In some cases, dictionsrieshave been transferred directly onto computer, inother cases, data base management considerationshave overriden any attempt at systematicterminological representation of the data.
Someterm banks have made provision for expressing~relations between terms (AFNOR, DANT~I) but theserelations are not as yet exploited to their full.C.
Oocumentation Thesauri (DTs)Zhese tools, whether on-line or publishedfrom nr~gnetic tape, represent gross groupings ofterms (via descriptors ) for the purpose ofindexing and retrieval of documents.
Ahierarchical structure is apparent in a thesaurus,with general relationships beh~g establishedbetween descriptors, such as BT (Broad Term), NT(Narrow Term) and RT (Related Term).
Some thesaurifurther distinguish e.g.
BqG (Broad Term Generic),~TP (Narrow Term Partitive) ~nd so on.
However,by its very nature and purpose, a DT is merely atool for selecting :rod differentiating between thechosen items of the ~rtificial reference system of90an indexing language.
The existence of overlappingand even parallel indexing languages attests theinadequacy of Errs for representing generallyaccepted terminological relationships.
Otherproblems associated with DTs are highlighted whenattempts are made to merge DTs and to matchdescriptors across language boundaries.
ExistingDTs also find great difficulty in representingpolyhierarchies (Wall, 1980) hence the ambiguousnature of the RT relation.
The best known attemptat solving such difficulties is the ~ESAUROFACET(Aitchison, 1970) ?D.
Terminological Thesauri (Trs)Traditionally, the Tr (as advocated by e.g.WGster, 1971) represents relationships betweenconcepts rather than descriptors in as much detailas possible.
As such, it has mainly been thepreserve of terminologists.
The Tr has theadvantage of precisely situating a term in theconceptual environment, through msk_Ing appeal torelationships such as generic and partitive (andtheir various detailed subdivisions ), and torelations of synonymy (quasi-, full synonyms, etc)and antonyrm/.
A classic example of the Tr approachto structuring data is the Dictionary of theMachine Tool (%~dster, 1968), which has served as abasis for the present project.However, although systematic in conceptionand detailed in execution, this particular workdisplays the constraints inherent in the WGsterianapproach, which is akin to that of the DT, namelyreliance on the hierarchy as a structuring tool.For example, given the partial sub-tree in figurela.
:PRINTF/q\[...\]PAPER TRANSPORT MECHANISMFORM FEEDFF~ RATE CONTROLTAPE, CONTROLLEDTAPE CONTROLI/D PRINTERfigure la.
Problems with a hierarchywe would like to be able to relate TAPE CONTEOTI.k"DPRINTER to its true superordinate, FRINTF~, to saythat it is a type of printer.
Again, given thestructure in figure lb.
:CHARACTER\[...\]PRINTABLEPRINT CHAPACrERCOntrOL CHARACTERfigure lb.
Problems with a hierarchywe would like to be able to represent therelationship of CONTROL CHARACTFJ~ to C~ARACTERdirectly.
This is impossible in the hierarchicalapproach, where one is constrained to adopt onescheme, and to represent only one possiblerelationship, whereas a term may have multiplerelationships to multiple telm~s.
As with DTs then,conventional Trs are incapable of representingone-to-n~m%y and msny-to-one relationships.E.
Sum~There exists a need for a representationaldevice which c~n capture the necessaryrelationships between terms in a natural andinformative manner, and which is not constrainedby the limitations of the printed page, or themental capacity of the terminologist.III %he on-line Terminological ThesaurusThe present project has concentrated onfinding a device capable of responding to thedemands of different users of terminology, andwhich would allow a systematic representation ofterminological data.
We have retained the termTerminological Thesaurus, but have given it a newmeaning.
The particular device we have constructedcombines the advantages of the conventional TT(systematic structure, relationships) and of thetraditional dictionary (definitions).
This isachieved by using inter-term relationships firstto construct a highly complex network of terms,and subsequently, at the retrieval stage, togenerate natural langu~e defining sentences whichrelate the retrieved term to others in itsterminological field.
This is done by means oftemplates, such that the user is presented with anoutline definition of a term (or severaldefinitions, if a term contracts relations withmore than (me term) which w i l l  help him tocircumscribe the meaning of the term precisely.Although the particular orientation of the projectis to generate definitions, the semantic networkthat is constructed could be used for other ends,and future work will investigate thesepossibilities.
We stress here that the definitionsthat are produced are not distinct texts stored inthe machine and associated with individual terms;rather, the declared relationships between termsare used to dynamically build up a definition, andterms from the immediate conceptual environmentare slotted into natural language definingtemplates.
These definitions have the advantagesof being precise, system internal and alws~vscorrect, providing the correct relationships havebeen sqtered.
Preliminary work in this area wasfirst carried out at L%ffST in the late 70s, whenthe feasibility of using terminologicalrelationships to structure data was shown, and anexperimental syst~: was implemented, based on ahierarchical repre~entation, that output simpledefinitions (Harm, 1978).
This was found to beinadequate, for the reasons outlined above, hencethe adoption in the present project of a richerdata structure.The data base for the system is then asenantic network.
~s with most semantic networks,the most one can really say about it is that itconsists of nodes and arcs: terms form the nodes,and relations between terms the arcs.
In actualfact, the data base consists of several files,with  the character  s t r ings  o f  ter~ns be ing  ass i~edto one f i le,  such that  a l l  search  and c reat ionoperat ions  for  the network  proper  eu'e car r ied  out91using simply logical pointers to bare nodescarrying the geometrical information needed tosustain the network, thus avoiding the overhead ofstoring variable length strings often induplicate.
A virtual memory has been implementedsuch that file accesses are kept to a minimum, andall pointer chains are followed in fast core.
Thebasic data structure of the network is the ring,and the appearance of the network is that of amultiway extended tree st~cture.
Facilities existfor on-line interactive creation and search of thenetwork.
An important design principle is that thecomputer should relieve the terminologist (orindeed the naive user) of the burden of keepingtrack of the spread and growth of a conceptualstructure.
We have already seen how thehierarchical approach to terminology failed toaccount for all the facts, and forced theterminologist into misrepresenting or distortingthe conceptual framework.
With a network, ease andnaturalness of representation is achieved, but atthe cost of increased complexity for the humanmind.
Thus a human will quickly lose track of theramifications of a network, even if he couldrepresent these adequately on some two dimensionalmedium.
Entrusting the management of the networkto the computer ensures precision and consistencyin a very large data base.At the input stage, in the simple case, theterminologist need give only 3 pieces ofinformation: two terms and the relationshipbetween them.
As the system is open-ended bydesign, the terminologist can declare newrelationships to the system as he works, i.e.
itis not necessary to firstly elaborate a set ofrelationships.
Further, neither of the two inputterms need necessarily be present in the database.
If both are absent, the system will create 8closed sub-network, which will only be linked tothe .~uin network ~len other liD/as are n~e withone or both of these terms.
As input proceeds, onemay have the (perhaps non-consecutive) inputs<X rel A> <Y rel A> <Z rel A>where {X,Y,Z,A) are terms and <rel> arelationship.
The system Will link all termsrelated to <A> in a ring having <A> f\]~gged as the'head' node.
Thus the terminologist is not~equired to overtly state the relationshipsbetween {X,Y,Z}.
laaving the computer to establsihlinks among terms from an initial single inputrelationship ensures high recall.
Note that choiceof refined relationships aids hig~ precision,although too msny refinements may be detrimental~m retrieval, in which case some automaticmec~hanism for Widening the search to includeclosely associated relationships would benecessary.
However, this would imply thatinformation be conveyed to the system regardingthe associations between relationships, and wouldbe a strong argument in favour of designing a setof relationships prior to the input of tei~s.
Atpresent, we have no strong views on this subject.The syst~n is open-ended to accept newrelationships; it is up to the terminolo6ist howhe organises his work.In the complex case, where there are perhapsseveral terms having the same relationship as theinput term to a common 'head', or where the 'head'may have several sub-groups (q.v.)
associated withit, the system interacts with the user to tell himthere are several possibilites for placing a termin the network, and shows him structured groups ofbrother terms having the same relationship as theinput term to the 'head', where his input term mayfit in.
It is important to realise that the userneed have no knowledge of the organisation of thenetwork.
He is asked to make terminologicaldecisions about how an input term relates toothers in the immediate conceptual environment.The notion of ' sub-group' is the only onewhich requires explanation in terms of the theor~jbehind the orgardsation of the system.
This notionwas introduced in an attempt to represent the factthat there may be terms that are mutuallyexclusive alternatives, and which attract otherterms which can cooccur without restriction.
Asimplistic example will make this point clearer.For the sake of discussion, we assume thefollowing parts of a radio, shown in figure 2. :RADIOVALVETRANSISTORAERIALfigure 2.
Simplified parts of a radiowhat we wish to represent is the fact that if aradio has valves, it has no transistors, and viceversa, but whichever is tl~e case, there is alwaysan aerial present.
What has happened here,terminologically, is that there are two termsmissing from the concept space, referring to theconcepts ' valve radio' and ' transistor radio 'respectively.
Or it my be the case that theterminologist has not as yet entered the genericsubdivisions of radio.
Thus there are two 'holes'here, as yet unfilled by a term.
The solutionadopted, is to create dun~ nodes in the network,which act as ring 'heads' for sub-groups each ofwhich contains one of the mutually exclusivealternatives, plus any terms that are stronglybound to one or both of the alternatives, but notthemselves mutually exclusive.
The dunrnies referback directly to the true head term, and x~v beconverted at any time into full nodes if thetel~ninologist ' s answers to questions about hisinput indicates that a new term ought to occupythis position, with this particular relation tothe original head term and with this particularsub-group of terms.
Terms which are common to allsub-groups,, and which have a relationship to theoriginal head term, are merely inserted in thering dominated by the original head, and are bydefault interpreted as belonging to all sub-groups.
In our present example, this would applyto 'aerial'.
Various checks are incorporated toprevent e.g.
terms common to all sub-groups beingbound to all these groups - that is, if one bindsa term to every possible sub-group trader anoriginal head, this would inTply that it does notin f~ct have any special binding power, or' cooccuronly with terms in these sub-,groups.
The resulting92structure for this ac~ittedly simple example isshown in figure 3, where primed nodes are dunmynodes dominating a sub-group ring.
:RADIO' ~ AERIALfigure 3.
Representation of alternativesbasic data structure, with terms ontologicallyrelated to another term being logicallysubordinated to it, and with several otherrelations being established either automaticallyor semi-automatically in response to userinteractions, provides enough information for thegeneration at search time_ of outline definitionsof terms.
The main file containing the semanticnetwork proper has the record structure shown infigure 4.:Field Value Type1 RELATION C~AR2 MODIFTER CHAR3 FACET INTEGER4 FATHER/BRO~ INTEGF/~5 SON INTEG,~IR6 VARIANT INTEGER7 CONTENT INTEGER8 ALT~ATIVE  INTEGF/~9 FLAGS INTEGERfigure 4.
Network file record stn~ctureThe FLAGS field apart, all integer fields arelogical pointers to other records in the networkfile, except for CONTHNT which points into anotherfile containing records which give information onthe actual character strings of terms.
Most of thefield values are self-explanatory.
TheFATF/~/BROTHER field has a dual value (indicatedby an appropriate flag) and together with the SONfield is used to build the basic ring structure.The VARIANT field is used to form another ringwhich links nodes representing the same tenm inrelation to different 'heads', and is commonlyemployed to represent polyhierarchies, which aswill be recalled posed a problem for DTs and Trs.Here the advantage of the CONTF2~T pointer becomesapparent, as only the geometrical network-sustaining information is duplicated when a termenters into relation with more than one 'head'.Two fields remain which require more detailedexplanation, r~mely the MODIFIER field and theFACET field.
These were introduced to enhance theoutline definitions the syst~n produced, which,although precise and consistent, were found to ber~ther uninforn~ative in certain respects.
Forexample, to generate the definition 'A vernier isa type of scale' leaves something to be desired,when the definition in Wflster's dictionary refersto 'a small movable auxiliar F scale'.
One could ofcourse get round this by declaring a new type ofscale to the system, namely 'auxiliary scale' oreven 'movable auxiliary scale', if this wereterminologically acceptable.
We think though thatto append 'small' would be stretching thingsrather far.
However the introduction of a MODIFIF~field allows some measure of finer description, byallowing the user to specify an adjective oradjectival phrase, which in this case, and perhapscommonly, would be relational, i.e.
'vernier' isseen as small in relation to a larger 'scale', butmay be large with respect to e.g.
'microvernier'.The modifier is thus attached to the geometrical,relational node of the network, not to thecontent, stringbearlngnode.The FACET field takes its nsn~ from thefacets well-known in the construction of DTs.
Afacet is here used in a similar manner to a DTfacet, that is, as a classificatory tool, to givea different view of the data.
A facet represents agross grouping of terms according to some feature.Examples of facets are:BY DIRECTIONBY MATERIALBY SHAPEetc.BY r,~HOD OF PROPULSIONBY APPLICATIONBYMETHOD OF OPEPATION,In traditional DT work, though, a descriptor canappear only under one facet.
In the presentsystem, a term can appear under many facets.
Thisgives extreme flexibility and  allows theterminologist to draw fine and not-so-finedistinctions between groupings of terms.
In mostDTs, there is little attempt at structuring facets- they are used in a fairly ad-hoc manner.
In thecontext of the present project, research is beingcarried out by Catherine Yarker into the nature offacets, which will shed light on how they couldbest be employed in the system.
An interestingpoint to note is that what are normally calledterminological relationships could justifiably beviewed as a subset of facets, the difference beingthat they are more commonly used, display morestructure, and have undergone systematicinvestigation over the years.Output from the system is available in avariety of formats, depending on how much, orwhich type of, information the user desires.
~herenow follow a few examples which show the potentialof the system:Query: CARResponse: CAR is a type of VHHICLE, together withBUS, IDRRY, TRAIN and TRACTOR.Q.
: PYLONR.
: PYLON is a part of tWINI:b1ILL,V&NE and GFINERATOR.together withThese show how a simple definition of a term isgiven, by relating it to its generic or partitivesuperordinate, and listing other terms having thesame relationship to the superordinate as thequery term.93Q.
: SLUICE VALVER.
: SLUICE VALVE is a part of PUMP<more?
>YesR.
: SID-ICE VALVE is a type of GATE VALVEQ.
: GATE VALVER.
: GATE VALVE is a type of VALVE together withPISTON SL I~ VALVE, PLUG VALVE, IX~ TYPE VALVEand CHECK VALVEHere the user asks for a further definition ofSLUICE VALVE, then queries GATE VALVE.~he addition of facet information, as we havepointed out, gives rise to more informativedefinitions, in that the user can see how a termis differentiated from other terms in theimmediate environment, for example:Q. : FLANGER.
: FLANGE is a component of FLANGED FITIENG, andis related to STEF~ FIANGE by material, toDETACHABLE FLANGE by property, to CONNECTINGFLANGE by method of connection, to BOSSED FLANGEby shape and to FLAT FACED FLANGE by flange faceconfigurationQ.
: STEEL FLANGER.
: ST~L FLANGE is a type of FLANGE distinguishedby material.
Other types of FLANGE are DETACHABLEFLANGE and iCOSE FLANGE distinguished by property,CONNECTING FLANGE, SCREWHD FLANGE and WELDF/)FLANGE distinguished by method of connection,BOSSED FLANGE and OVAL FLANGE distinguished byshape and FLAT FACED FLANGE, RAISFD FAGE FLANGEand ~\[LL FACFD FLANGE distinguished by flange faceconfiguration.Experiments are still under waF to determine howbest to use facets, and how best to formulate thedefinitions.
It appears useful, in a definition,first to relate a term to another by a commonterminological relati0nsblp (part of, type of) andthen to refine the definition by bringing infacets.There is also the possibility to ask for aspecific relationship, for example, if one were toask for parts of a wheel, the display might read:MTEEL ~s composed of HUB, SPOKE, RIM,WH~L CE/~,  and TYRE.The usefulness of more refined terminologicalrelationships is shown by the following examples:KEY is a part of KEYBOARDWI~k-~.T.
is a part of CARRADIO is a part of CARF~GIN\]< is a part of CARwhere the standard 'part of' relationship provesinadequate.
Therefore, we introduce subdivisionsof the partitive relationskip, which generate thefollowing outputs:K~,\[ is an atomic part of KEYBOARD (i.e.
the latterconsists wholly of the former).One or several ~ a  are contained in CARRADIO is an optional part of CARENGI/~E is a constituent part of CAR (i.e.contains other parts, including ENGINE)CARThese few examples hopefully give some indicationof the system's potential.
With a complex networkenriched with refined terminologicalrelationships, modifiers and facets, we can lookforward to the generation of extended, informativedefinitions.
It n~ybe argued that problems couldarise in maintaining the consistency of thenetwork, however the interactive input procedureis designed to show the consequences of aparticular choice or insertion before the input isrecorded definitively in the network.Nevertheless, there comes a point when one has torely on the user himself not to make sillydecisions.
Due to the extreme flexibility of thesystem, and the use of a network as arepresentational device, the terminologist is freeto introduce whichever relationships he desires,and to link whichever terms he chooses.
Thisfreedom may he anathema to those who adhere to therigorous hierarchical approach to terminology,however, used with judicious care, the system iscapable of recording multiple relationships in away denied to the proponents of the hierarchicalapproach, which in the end provide a basis for thegeneration of information that is more fullydeveloped, and more illuminating due its richness.In the near future, an interactive editorwill be implemented to help the terminologistadjust the data base, in case of error, or tomonitor the changes brought about by thea change of relationship, facet, etc.It should be noted that the system is desi~qed tobe multilingual, and is capable of outputtingforeign language equivalents.
As we have chosen todeal with rather normalised terminology, we makeno claims as to the capability of the system tohandle more general vocabulary, where there wouldbe sometimes radical differences between theconceptual systems of different languages.
At themoment, we work purely with one-to-one mappingsacross language boundaries.
However, unlike thetraditional term bank, which merely enumeratesforeign language equivalents, this system, on theother hand, upon addressing a forei@a languageequivalent in the data base allows immediate entryto a ring of foreign language synonyms, from whichthe entire parallel conceptual network of theforeign terminolo~ may be accessed.
Thepossibility is then open for further definitionsin the foreign language to be output, if desired.IV ~L~ATIONThe system is completely written in 'C', a generalpurpose system pro~ing  language, and isimplemented on a Z-~O based S-IO0 microcomputer,with 64kbyte memory and a 33mbyte hard disk.
Whenthe system ~s eventually stable, a virtual memoryroutine written in assembly language by SandraWaites will replace the e~tisting 'C' routine, tospeed up access times.
The system runs to severalthousand lines of code, including utilities and94basic input/output functions ('C' provides none ofthe latter) and is split into several chainedprograms, for reasons of memory spacerestrictions.
Execution time is not therefore asfast as it could be, although the hard disk doesmake a substantial difference to access times.When mounted on a 16-bit microcomputer runningunder the Unix operating system, as is envisagedin the near future, and equipped with improvedindex searching routines (not a primary purpose ofthe project), there should be little delay inresponse time.For reasons of economy and experimentation, thebasic network file record is limited to 16 bytes(see figure 4 above), however, in a future versionof the system, other features may be added, forexample a ring head pointer in each record, tosave scanning all ring records to the right of theentry point to find the head.
Further, the contentfile record, which contains Information oncharacter strings, could be expanded to hold thetypes of information found in traditional termbank records, e.g.
grammatical class, context,author, date of entry, sources, etc.
This wouldthen imply that a full-blown tel~ bank could beset up, organised around a semantic network, suchthat the bank would be structured according toterminological criteria, not to data basen~ment  criteria.V ACKNOWiZIX\]FMENTSI would like to thank Sandra Waites and CatherineYarker for their valuable contribution towards therealisaticn of this system, and ~ colleagues RodJohnson and Professor Juan Sager for their adviceduring the course of the project.VI REFERENCESAitchiscn, J.
The Thesaurofacet: A Multi-PurposeRetrieval Language Tool.
J. Doc , 1970, 26, 187-203.Harm, M.L.
qhe Application of Computers to theProduction of S~stematic~ Multilinsual SpecialisedDictionaries and the Accessing of SemanticInformation S~sten~.
~.~nchester, UK : CCL/UMISTreport, 19Z~.Sager, J.C. Terminological Thesaurus.
iebendeSprachen, 1982, I, 6-7.Wall, R.A.
Intelligent indexing and retrieval: aman-machine partnership.
Inf.
Proc.
& Man., 1980,16, 73-.cD.WGster, E. The Machine Tool : an Interlin~ualDictionsz 7.
London, OK : Technical Press, 19(95.WOster, E. Begriffs- und Themaklassification.Nachrichtun 6 fGr Dokumentaticn, 1971, 22:4.95
