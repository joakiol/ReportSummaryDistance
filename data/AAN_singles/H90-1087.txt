Large Vocabulary Speech Recognition PrototypeJanet M. Baker, Ph.D.Dragon Systems, Inc.90 Bridge StreetNewton, MA 02158ObjectiveThe objective of this project is to develop a system forreal-time recognition of natural language continuousspeech.
To satisfy the objective of "natural language", thesystem must recognize the sentences actually produced byusers in a realistic application -- no artificial grammaticalrestriction will be allowed merely for the purpose of thespeech recognition.
On the other hand, the recognitionsystem may be specialized just to recognize speech in asingle well-defined application environment and thevocabulary may be restricted (the minimal objective invocabulary size is 1,000 words).
The performance objec-tive is an operational one.
The system must include aninteractive user interface which includes error correctioncapability.
The error rate must be sufficiently low and theremaining errors must be easy enough to correct hat theusers in a realistic application are more productive throughthe user of the speech recognition system.ApproachThe basic approach to speech recognition at DragonSystems is to model speech as a sequence of random vari-ables or stochastic process.
More specifically the speech ismodeled (with some variation in details) as a probabilisticfunction of a Markov process using techniques that are nowcommon among high performance speech recognition sys-tems, where this model is often called a Hidden MarkovModel (or HMM).
Rather than recide the features whichare common to most HMM systems, this summary will listsome of the features that are different from other HMMsystems.1.
The system uses a "rapid match" algorithm whichcomputes a preliminary score for each word in thevocabulary using models which are much simpler andfaster than the HMM models.2.
The acoustic-phonetic system is aimed at modelingthe full English vocabulary rather than the vocabularyof a single application task.
The acoustic-phonetictraining is semi-automatic using human suppliedexpert knowledge rather than fully automatic.3.
Phonetic duration is modeled in a computationallyefficient manner that, for pragmatic reasons, violatesthe strict heoretical framework of the Markovprocess.
Expected uration is derived partly by ruleand partly by automatic training.4.
The system uses not only phoneme moedels, but alsosub-phoneme acoustic segments as a unit whosestatistics may be shared by different word models.In general, however, the similarities between the Dragoncontinous peech system and other HMM based systemsare greater than the differences.ProgressThe basic milestone of a real-time implementation f1,000 word vocabulary continous peech recognition hasbeen achieved.
Furthermore, the goal of reducing theamount of computation tofit on a host plus 4 RISC proces-sors has been substantially surpassed.
The initialdemonstration system runs real-time on an 80386 host plusa single RISC processor, or even on an 80486 host alone.Recent Accomplishments?
Implementated basic speech pattern matching routinesin a fashion designed for ease of portability acrossalgorithms (these routines have been used in both theStack Decoder and the Time Synchronous Decodermentioned below), compilers, processors, andoperating environments.?
Implemented a Time Synchronous Decoder.
This is asystem which computes the probability distribution ofthe hidden Markov process (given the accoustics) insteps strictly increasing in time.
The probability of allactive states is computed for each time frame beforebeginning the analysis of the next time frame.
This isthe most common method of computation for HMMrecognizers.?
As an experimental alternative, implemented a StackDecoder algorithm.
The Stack Decoder canpotentially be more efficient by analyzing the mostpromising paths throught the Markov state space first,rather than synchronizing ateach time frame.Because of the greater complexity of the StackDecocer, the current real-time implementation usesthe Time Synchronous Decoder.?
Built a probabilistic language model for the dictationof radiology reports.?
Implemented a rapid match algorithm which reducesthe amount of computation for a 1,000 wordvocabulary by an order of magnitude.?
Ported both the rapid match and the full matchalgorithms to run on a high speed RISC proccessor,the AMD 29000.?
Developed a simple parallel processingimplementation allowing the recognition computationto run in parallel on the 29000 and a host processor.414?
Accelerated computation toachieve real-timerecognition on either the combination of the 29000with an 80386 host processor, or even on an 80486processor by itself.FY-91 Plans?
On-line adaptive training will be implemented.?
The signal processing will be improved bysystematically evaluating the performance ofa widevariety of signal processing algorithms.?
The robusmess will be improved by modelingaltemate word pronunciations.?
The performance on short function words will beimproved by developing techniques specificallymodeling the phenomena which occur for such words.?
The performance will be improved in general bydetailed post-analysis of specific errors.?
The overall error rate will be reduced by a factor oftwo compared to the current system.415
