IIIIIIIIIIIIIII!IIIIIIIIIIIntroducing MegaHALJ ason  L.  HutchensDept .
of E&E Engineer ingUnivers i ty  of Western Austra l iaNedlands W.A.
6907, Austra l iahut ch~ciips, ee.
uwa.
edu.
auMichae l  D .
A lderDept.
of Mathemat icsUnivers i ty  of Western Austral iaNedlands W.A.
6907, Austral iamike@maths,  uwa.
edu.
auAbst rac tConversation simulators are computer pro-grams which give the appearance of convers-ing with a user in natural language.
AlanTuring devised a simple test in order to de-cide whether such programs are intelligent.
In1991, the Cambridge Centre for BehaviouralStudies held the first formal instantiation ofthe Turing Test.
In this incarnation the testwas known as the Loebner contest, as Dr.Hugh Loebner pledged a $100,000 grand prizefor the first computer program'to pass the test.In this paper we give a brief background to thecontest, before describing in detail the work-ings of MegaHAL, the primary author's entryto the 1998 Loebner contest.1 In t roduct ionAlan Turing was a brilliant British mathematicianwho played a great role in the development of thecomputer.
The imitation game, nowadays known asthe Turing test, was devised by Turing as a methodfor deciding whether or not a computer program isintelligent.The Turing test takes place between an interroga-tor and two subjects.
The interrogator communi-cates with these subjects via a computer terminal,and must decide which is a human being and whichis a computer program.
The human being helps theinterrogator to make the correct identification, whilethe computer program attempts to trick the inter-rogator into making the wrong identification.
If thelatter case occurs, the computer program is said tobe exhibiting intelligence (Turing, 1992).One of the great advantages of the Turing test isthat it allows the interrogator to evaluate almost allof the evidence that we would assume to constitutethinking (Moor, 1976).
For instance, the interroga-tor can pose hypothetical situations in order to askthe subjects how they would react.Alan Turing died in 1954, a decade before con-versation simulators uch as ELIZA emerged.
It isindeed unfortunate that he did not live to witnesshis test being performed.
One cannot help but thinkthat he would have been disappointed.2 The  Loebner  Contes tApart from a few limited tests performed by pro-grammers of conversation simulators (Colby, 1981),the Turing test was not formally conducted until1995.
Although the inaugural Loebner contest, heldin 1991, was touted as the first formal instantiationof the Turing test, it was not until 1995 that it trulysatisfied Turing's original specifications (Hutchens,1996).The first Loebner contest was held on the 8 thof November 1991 in Boston's Computer Museum.Because this was a contest rather than an experi-ment, six computer programs were accepted as sub-jects.
Four human subjects and ten judges were se-lected from respondents to a newspaper advertise-ment; none of them had any special expertise inComputer Science (Epstein, 1992).The original Turing test involved a binary decisionbetween two subjects by a single judge.
With tensubjects and ten judges, the situation was somewhatmore complex.
After months of deliberation, ?heprize committee developed a suitable scoring mech-anism.
Each judge was required to rank the subjectsfrom least human-like to most human-like, and tomark the point at which they believed the subjectsswitched from computer programs to human beings.If the median rank of a computer program ex-ceeded the median rank of at least one of the hu-man subjects, then that computer program wouldwin the grand prize of $100,000.1 If there was nogrand prize winner, the computer program with thehighest median rank would win the contest with aprize of $2000.1Today the program must also satisfy audio-visualrequirements o win the grand prize.Hutchens and Alder 271 Introducing MegaHalJason L. Hutchens and Michael D. Alder (1998) Introducing MegaHal.
In D.M.W.
Powers (ed.)
NeMLaP3/CoNLL98 Workshopon Human Computer Conversation, ACL, pp 271-274.3 Conversat ion  S imulatorsSince its inception, the Loebner contest has primar-ily attracted hobbyist entries which simulate conver-sation using template matching; amethod employedby Joseph Weizenbaum in his ELIZA conversationsimulator, developed at MIT between 1964 and 1966.Put simply, these programs look for certain patternsof words in the user's input, and reply with a pre-determined output, which may contain blanks to befilled in with details such as the user's name.Such programs are effective because they exploitthe fact that human beings tend to read much moremeaning into what is said than is actually there;we are fooled into reading structure into chaos, andwe interpret non-sequitur as whimsical conversa-tion (Shieber, 1994).Weizenbaum was shocked at the reaction toELIZA.
He noticed three main phenomenon whichdisturbed him greatly (Weizenbaum, 1976):i.
A number of practising psychiatrists believedthat EL IZA could grow into an almost com-pletely automatic form of psychotherapy.2.
Users very quickly became emotionallyinvolved--Weizenbaum's secretary demandedto be left alone with the program, for example.3.
Some people believed that the program demon-strated a general solution to the problem ofcomputer understanding of natural language.Over three decades have passed since ELIZA wascreated.
Computers have become significantly morepowerful, while storage space and memory size haveincreased exponentially.
Yet, at least as far as theentrants of the Loebner contest go, the capabilitiesof conversation simulators have remained exactlywhere they were thirty years ago.
Indeed, judgesin the 1991 contest said that they felt let down aftertalking to the computer entrants, as they had hadtheir expectations raised when using ELIZA duringthe selection process.4 MegaHALIn 1996 the primary author entered the Loebner con-test with an ELIZA variant named HeX, which waswritten during his spare time in under a month.Apart from the lure of the prize money, a majormotivation for the entry was a desire to illustratethe shortcomings of the contest (Hutchens, 1996).A considerably more powerful program, SEPO, wasentered the following year, where it was placed sec-ond.
We believe this to be indicative of a gradualimprovement in the quality of the contestants.The program submitted to this year's contest,MegaHAL, uses a significantly different method ofsimulating conversation than either HeX or SEPO,and we dedicate the remainder of this paper to de-scribing its workings.4.1 Markov  ModellingMegaHAL is able to construct a model of languagebased on the evidence it encounters while conversingwith the user.
To begin with, the input receivedfrom the user is parsed into an alternating sequenceof words and non-words, where a word is a series ofalphanumeric characters and a non-word is a seriesof other characters.
This is done to ensure not onlythat new words are learned, but that the separatorsbetween them are learned as well.
If the user has ahabit of putting a double space after a full stop, forinstance, MegaHAL will do just the same.The resulting string of symbols 2 is used to traintwo 4th-order Markov models (Jelinek, 1986).
One ofthese models can predict which symbol will follow-ing any sequence of four symbols, while the othercan predict which symbol will precede any such se-quence.
Markov models express their predictions asa probability distribution over all known symbols,and are therefore capable of choosing likely wordsover unlikely ones.
Models of order 4 were chosento ensure that the prediction is based on two words;this has been found necessary to produce output re-sembling natural anguage (Hutchens, 1994).4.2 Generating Candidate RepliesUsing a Markov model to generate replies is easy;Shannon was doing much the same thing by flippingthrough books back in 1949 (Shannon and Weaver,1949).
However, such replies will often be nonsensi-cal, and will bear no relationship to the user's input.MegaHAL therefore attempts to generate suitablereplies by basing them on one or more keywords fromthe user's input.
This explains why two Markovmodels are necessary; the first model generates asentence from the keyword on, while the secondmodel generates the remainder of the sentence, fromthe keyword back to the beginning.Keywords are obtained from the users input.
Fre-quently occurring words, such as "the", "and" and"what", are discarded, as their presence in the in-put does not mean they need to be present in theoutput.
The remaining words are transformed ifnecessary--"my" becomes "your" and "why" be-comes "because", for example.
What remains is usedto seed the output.2A symbol refers to both words and non-words.IiIIIIIIilIIIIIIIIIIIIi lHutchens and Alder 272 Introducing MegaHal ~__//i////l///////E/I4.3 Selecting a ReplyMegaHAL is able to generate many hundreds of can-didate replies per second, each of which contain atleast one keyword.
Once a small time period haselapsed, the program must display a reply to theuser.
A method is needed for selecting a suitablereply out of the hundreds of candidates.I (wls)  = - log2 P (w ls )  (1)MegaHAL chooses the reply which assigns thekeywords the highest information.
The informationof a word is defined in Equation 1 as the surprise itcauses the Markov model.
Hence the most surpris-ing reply is selected, which helps to guarantee itsoriginality.
Note that P(w\]s) is the probability ofword w following the symbol sequence s, accordingto the Markov model.The algorithm for MegaHAL proceeds as follows:1.
Read the user's input, and segment it into analternating sequence of words and non-words.2.
From this sequence, find an array of keywordsand use it to generate many candidate replies.3.
Display the reply with the highest informationto the user.4.
Update the Markov models with the user's in-put.This sequence of steps is repeated indefinitely,which allows the program to learn new words, andsequences of words, as it converses with the user.4.4 Training MegaHALWhen MegaHAL is started it has no knowledge oflanguage, and is unable to give a reply at all--theprogram needs to be trained using a source of textto ensure that it does not reveal its identity prema-turely.
A large corpus of training data was createdfor this purpose.The training data is made up of various texts:?
Hand-crafted sentences designed in order to cre-ate a personality for MegaHAL, including sen-tences containing a false name, age and occupa-tion.Encyclopaedic information taken from the Web,on topics such as geography, music, sports,movies and history.A selection of sentences picked from transcriptsof previous Loebner contests.?
Lines of dialogue taken from scripts for moviesand television shows.?
Lists of popular quotations.?
A small amount of text in languages other thanEnglish.When MegaHAL is trained using this data, it isable to respond to questions on a variety of topics.
Itis hoped that the program will also learn new topicsfrom the judges, although this remains to be seen.4.5 Online ExperimentationMegaHAL has been available on the Web since earlyin 1997, and hundreds of users converse with it ev-ery day.
It is an interesting fact that one never tiresof reading transcripts of conversation, due to Mega-HAL's ability to respond with original replies.Many users are often offended by the things Mega-HAL says, and some believe that they have beenpersonally insulted.
A user named Forrest was quiteincensed when the program began quoting parts ofthe Forrest Gump screenplay back at him.
That acomputer program can cause such an emotional re-sponse in a human being is interesting, although itmay say more about the human being than it doesabout the program.Users are often impressed with MegaHAL's abil-ity to learn.
One user was annoyed that the pro-gram had learned more about his personal life thanhe would care it to know, while another stated thatMegaHAL would eventually grow into a person ofaverage intellect (he attributed this bold claim tothe law of averages).
A person experienced work-ing with people in psychotic rises likened talking toMegaHAL with talking to a psychotic.Users have successfully taught he program to re-spond to sentences in French, Spanish, Greek, Ger-man, Italian, Latin, Japanese and Hebrew, amongstothers.
A clergyman spent hours teaching MegaHALabout the love of Jesus, only to constantly receiveblasphemous responses.The reaction of Web user's to the program hasbeen surprising, and is pretty much what Weizen-banm experienced with ELIZA.
MegaHAL generatesgibberish mostly; but occasionally, by pure coinci-dence, it will reply appropriately, and in context.
Itis these occasions that stick in the mind, and gi~vecause for over-zealous claims of computational intel-ligence.4.6 Example InteractionAs an example of MegaHAL at its best, we repro-duce a few extracts from a conversation which tookHutchens and Alder 273 Introducing MegaItalplace over a period of three hours in mid 1997 be-tween MegaHAL and an anonymous Web user.To begin with, the user was able to successfullyteach the program some basic facts:User: Roentgen discovered the X-rays.MegaRAL: THE NOBEL PRIZE FOR PHYSICS IN1900 WAS WON BY ROENTGEN.User: Who discovered the X-rays?MeEaHAL: ROENTGEN DISCOVERED THEX-RAYS.He then discovered that the program is an expertat being nonsensical.
Even so, MegaHAL was stillable to give some appropriate responses, due to thekeyword mechanism for generating replies:MegaHAL: WHEN WE BEGIN TO RESOLVE SOMEOF MY THUMBS, SOMETHING WICKED THIS WAYCOMESUser:  what i s  the  meaning of  your lastassert ion ?MegaHAL: HAVE YOU LEARNED SINCE WE LASTSPORE?User: I've learned I'm not experiencedenough to modelize your brain systemMegaHAL: YOU'VE FINALLY CONFUSED ME.User: I 're learned nothingMegaHAL: RAVE YOU LEARNED ANYTHINGABOUT INSANITY?User: are you stupidMegaIIAL: I AM NOT STUPID!
REALLY!Finally, the user discovered that the programcould respond in other languages:User: Tu purles francais?MegaHAL: I GUESS SO.
PARLEZ-VOUSFRANCAIS?User: L'amour est une passion humaine.MegaHAL: LA LANGIDOCE EST LINE PETITEJEUNNE FILLEIn general MegaHAL's conversations are not assuccessful as this.
Most users are satisfied with typ-ing in rude words to see how the program responds.5 ConclusionMegaHAL uses a technique which differs signifi-cantly from that used by previous entrants to theLoebner contest.
It has been submitted in 1998 forthe purpose of demonstrating a different method ofsimulating conversation.
Although its replies are oc-casionally lucid, MegaHAL is most definitely not anArtificial Intelligence; we must be careful not to readtoo much into what it says.The Loebner contest does offer some bene-fits (Loebner, 1994); it provides an annual Turingtest for anyone who cares to submit an entry, it pro-motes and stimulates interest in the field of ArtificialIntelligence, it encourages competition, it could con-ceivably result in new techniques which may be ap-plicable to fields outside of Artificial Intelligence andit stimulates discussion amongst researchers.
Evenso, we believe that the contest is not advancing thefield of Artificial Intelligence because, although the$2000 is a guaranteed reward, it is not a large enoughcarrot to entice serious research groups.Perhaps the most important contribution of theLoebner contest is the insight it provides into thepsychology of communication--it makes us aware ofhow little our understanding of conversation lies inwhat is said.Re ferencesColby, Kenneth Mark.
1981.
Modeling a paranoidmind.
The Behavioral and Brain Sciences, 4:515-560.Epstein, Robert.
1992.
Can machines think?
AIMagazine, Summer:80-95.Hutchens, Jason L. 1994.
Natural language gram-matical inference.
Honour's thesis, University ofWestern Australia, December 1994.
Available at:ht~p://ciips, ee.
uwa.
edu.
au/Papers/Hutchens, Jason L. 1996.
How to pass the turingtest by cheating.
Available at:ht~p://clips, ee.
uya.
edu.
au/Papers/Jelinek, Frederick.
1986.
Markov source modelingof text generation.
Technical report, IBM T.J.Watson Research Center.Loebner, Hugh.
1994.
In response to lessonsfrom a restricted Turing test.
Available at:ht~p://acm, org/" loebner/In-response, him1Moor, James H. 1976.
An analysis of the turingtest.
Philosophical Studies, 30:249-257.Shannon, Claude E. and Warren Weaver.
1949.
TheMathematical theory of Communication.
Univer-sity of Illinois Press.Shieber, Stuart M. 1994.
Lessons from a restrictedturing test.
Available at the Computation andLanguage e-print server as cmp- lg /9404002.Turing, A.M. 1992.
Computing machinery and in-telligence.
In D.C. Ince, editor, Collected worksof A.M. Turing: Mechanical Intelligence.
ElsevierScience Publishers, chapter 5, pages 133-160.Weizenbaum, Joseph.
1976.
Computer Power andHuman Reason.
W.H.
Freeman and Company.Hutchens and Alder 274 Introducing MegaHalmIIIIIIIIIIIIIIIIIIIIIIIIII
