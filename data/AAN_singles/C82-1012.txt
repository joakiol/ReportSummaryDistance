COL1NG 82, Jr. Horeckp (ed.
)North-Holland Publishing Company?
Accdemia, 1982TREE DIRECTED GRAMMARSWerner  Di lgerUn ivers i t~t  Ka isers lauternFachbere ich  Informat ikD-6750 Ka isers lauternFR GermanyTree d i rected grammars as a special  k ind of t rans lat iongrammars are def ined.
It is shown that a loop-free treed i rected grammar can be t ransformed into an equiva lenttop-down tree transducer,  and from this fact it fol lowsthat g iven an arb i t rary  context - f ree language as input,a tree d i rected grammar produces an output  languagewhich  is at most  context -sens i t ive.INTRODUCTIONWith in  the natural  language informat ion system PLIDIS \[6\] a seman-tic processor  was implemented for the t rans lat ion of syntact ica l lyana lyzed sentences into express ions of a predicate ca lcu lus -or lentedinternal  representat ion  language.
This semantic processor  was de-s igned accord ing to a t rans lat ion grammar def ined by Wulz \[8\], whichis s imi lar  to the t ransformat ion grammar introduced by Chomsky \[3\].The operat ions  on trees which are def ined in thet rans format iongrammar, i.e.
delet ion,  insert ion, and t ranspos i t ion  of subtrees,are also avai lab le  in the Wulz grammar.
Therefore it can be assumedthat it is equ iva lent  to the t ransformat ion grammar wi th  regard tothe input /output - re lat ion.But when the Wulz grammar was rea l ized wi th in  PLiDIS for a sect ionof German, only of a few of its poss ib i l i t ies  was made use.
No realt ransformat ion was prescr ibed by the PLIDIS t rans lat ion rules, theyonly checked the parse tree and produced an output  separated fromthis tree.
Thus, what  was rea l i zed in the PLIDIS t rans lat ion rulescan be better  descr ibed by another  k ind of t rans lat ion grammar,namely the tree d i rected grammar (TDG).
When we invest igate the TDGsand their  re lat ion  to tree t ransducers  it turns out that they areless power fu l  than t ransformat ion grammars.TREE DIRECTED GRA~tMARSWe def ine trees in the manner  of \[2\] and \[7\] as mappings  from treedomains (special subsets of N*, where N is the set of natural  num-bers) into an a lphabet  Z and cal l  them therefore trees "over" Z. Weassume for the rest of the paper that Z is ranked.
Because trees aref lnlte mappings  it is convenient  to ident i fy  a tree wi th  its graph.So e.g.
the set{<() ,a>,<(O) ,b>,<(1) ,d>,<(2) ,a>,<(O,O) ,e>,<(O,1) ,c>,<(2 ,O) ,d>,<(2 ,1) ,b>,<(2 ,2) ,e>,<(O,1 ,0) ,e>,<(2 ,1 ,O) ,c>,<(2 ,1 ,1) ,d>,<(2,1 ,0 ,O) ,d>}represents  the tree of fig.
I.7778 W. D1LGERa a efigure 1If u is an e lement  of a tree domain, a 6 ~, and t(u) = a, then thepair  <u,a> is ca l led a n0dz of t.Let T be any set of trees over E. A TDG G T for T is a quadrup leG T = (~,A,n,~)where ~ is the a lphabet  of termina ls  of G m, ~ is the set of produc-t ions of G T, and u E E U 4.
It fo l lows f r6m this de f in i t ion  that thee lements  of E p lay the role of nontermina ls  in G T. When they areused for this purpose in the product ions,  they are enc losed inbrackets,  so we get f rom E the set\[~\] = {\[~\]la ~ ~}The e lements  of ~ are further used in the st ructura l  cond i t ion  partsof the product ions.
There we should be able to d i s t ingu ish  betweend i f fe rent  occur rences  of ~he same symbol in a tree.
In order  to re-present  such d is t inct ions ,  the symbols are prov ided with indices, sowe get from E the setEIN D = U {aila E E}iEINDfor some index set IND (in general  a subset of N).Now a production p E ~ is a tr ip le(\[al\],SO,~)with a q ~, e e (4 U \[EIND\])*, and sc is a s t ructura l  cond i t ionwhich  conta ins  the symbol a I .In order  to expla in  the app l i cat ion  of a product ion  we have to de-f ine the st ructura l  condit ions.
Assume, x E E and X = {Xl ,X2,.
.
.
}.Then the set of s t ruc tura l  ind iu id~als  isSI = EIN D U XTREE DIRECTED GRAMMARS 79There are four two-place predicates defined on SI, namely DOM("dominates immediately"), DOM* ("dominates"), LFT ("is immediatelyleft from"), and LFT * ("is left from").
Atomic structural conditionsare TRUE, FALSE, P(~,~)where P is one of the four predicates above and ~,~ E SI.A ~t~uct~ral  ~ondltZon is then an atomic structural condition or aBoolean expression over the set of atomic structural conditions.For example, if ~ = {a,b,c,d,e}, IND = {1,2}, then the followingexpressions are structural conditions:I. DOM(al,b I)2.
DOM(bl,X I) ^ LFT(el,x I)3.
DOM(Xl,C I) ^ LFT*(Xl,X 2) ^ DOM*(x2,e I)4.
DOM(al,b I) ^ (NDOM*(bl,e I) v LFT(bl,dl))The semantics of a structural condition is defined in the usual wayby an interpreting function from the condition into a semantic domain.Here,  the trees of T are semantic domains.
The four predicates DOM,...,LFT ?
are always interpreted in the same way, and this interpre-tation should be obvious.
The main part of the interpretation is theassignment of the structural individuals to the nodes of a tree,which is called the ,od~ ~Zgnment .
A mapping of the individuals ofa structural condition into the set of nodes of a tree is a nodeassignment, if it obeys the following restrictions: If a 6 E, thenan individual ~ (i 6 IND) should be assigned to a node with label a,whereas the individuals e~ and e. (i ~ j) should be assigned todifferent nodes with the ~ same 3 label u.
An individual x~ 6 X canbe assigned to an arbitrary node.
A tree t ~atZsfig~ a structuralcondition sc if there exists a node assignment such that sc holdsfor the assigned nodes of t under the assumed interpretation of thefour predicates and the usual interpretation of the Boolean operators.The reader is invited to check, how the tree of the example abovesatisfies the structural conditions I.
- 4.The structural conditions are similar to the local constraints ofJoshi and Levy \[5\], and it can be shown that both are equivalent withregard to their abil ity to describe relations on the set of nodes ofa tree.Assume, p = (\[ul\],sc,~) is a production of G m. Then the structuralindividual u I m~st occur in sc.
Assume further thaty = y1\[ai\]Y2where yl,y 2 E (~ u \[ZTw_\]) ~, i E IND, and there is a node assignmentwhich m~ps e~ on a nod~U<u,a> in tree t and t satisfies sc in such away that ~I ~s mapped on <u,a> as well, then p can be applied to y:YI\[ui\]Y2 ~ y1~Y2GT,tSome of the individuals of X occurring in e may be replaced by thenode assignment for sc by individuals of \[~T,,~\].
In this way deriva-tions in G T with regard %o a tree taze  de f !~d.
If a derivationstops with a word y e ~,  y can be regarded as a translation of t.80 " W. DILGERAssume e.g.
we are given the following four productions:(\[al\],DOM(a1~bl),\[bl\]\[bl \])(\[bl\],DOM(bl,X I) ^ LFT(el,xl),H\[Xl\])(\[Cl\],DOM(Xl,Cl) ^ LFT(Xl,X 2) ^ DOM*(x2,el),\[el\]E)(\[el\],TRUE,AR)By means of these productions we can perform the derivation\[al\] P--- \[bl\]\[b 1\] v-- H\[Cl\]\[bl\] P-- H\[el\]E\[bl \] P---HARE\[b 1\]~L- HAREHAREwith regard to the tree of the example above.TOP-DOWN TREE TRANSDUCERS iA top-dow~ IAZ?
t~n~da~zr  (TDTT) (cf.
\[4\]) is a transducing auto-maton which proceeds top-down from the root to the leaves in a treeand in each step yields an output.
It is defined as a quintupleM = (Q,?-,A,qo,R)where ~ and ~ are defined as before, Q is a finite set of states,q E Q is the initial state and R is a finite set of rules of thefSrmq(u(~1...Tk)) ---> ylq1(Til)Y2q2(~i2 ) -.. Ynqn(Tin)Yn+ Iwith n,k z O; I ~ i.
< k for I < j ~ n; q'q1'' ' ' 'qn E Q, ~ E T,Yl'" "-'Yn+1 E &*.
3 k is the rank of ~ and the T 4 are variablesover T. when SUCh a rule is applied to a tree ~ at a node withlabel u, the variables ~ are replaced by those subtrees of t whoseroots are immediately dof~inated by the node with label a.Assume e.g.
we are given the TDTTM = ({qo,ql }, {a,b,c,d,e}, {A,E,H,R},qo,R)withR = { qo(a(?lT2T3)) --~ Hq1(T3)qo(T1)Hq I(T3)qO(T 1),qo(b(TiT2 )) --> qo(?2),qo(C(~1)) --~ E,ql (a(?1?2T3)) ---> qI(?3 )'q1(e) --~ AR }M performs on the tree cf the example above the derivationqc (a (b (ec (e)) da (db (c (d) d) e) ) )k-- Hql (a(db(c(d)d)e))qc(b(ec(e)))Hq1(a(db(c(d)d)e))qo(biec(e)))~--- Hql (e) qo (b (ec (e)) ) Hql (a (db (c (d) d) e) ) qc (b (ec (e)) )~-- HARqo (b (ec (e)) ) Hql (a (db (c (d) d) e) ) qo (b (ec (e)) )P--- HARqo (c (e)) Hql (a \[db (c (d) d) e) ) qo (b (ec (e)) )P-- HAREHql(a(db(c(d)d)e))qo(b(ec(e))) ~--- HAREHARETREE Dn~ECTED GRAMMARS 81TDGs AND TDTTsThere are some obvious similarities between TDGs and TDTTs.
It iseasy to see that not every TDTT can be transformed into an equi-valent TDG, because the TDTTs have the states as an additional meansto direct derivations.
In some cases the derivation can be directedby appropriate structural conditions in the same way as it is doneby states, but i~ is easy to construct examples where this is impos-sible.
On the other hand, each TDG can be transformed into an equi-valent TDTT.
The main step of this transformation is to put to-gether some of the productions so that the resulting productionssatisfy the condition that all symbols of the structural conditionpart except a I are situated below the symbolu I in each tree, wherea I correspond~ to the first component of the @roduction.Take e.g.
the productions(\[al\],DOM(al,bl),\[bl\]\[bl\])(\[bl\],DOM(bl,X I) ^ LFT(el,xl),H\[Xl\])(\[Cl\],DOM(Xl,C I) a LFT(xl,x 2) ^ DOM*(x2,el),\[el\]E )The first and the second production satisfy the condition, the thirdone does not, because the nodes assigned to x I and x~ are above thatone assigned to c I in each tree which satisfies the ?tructural con-dition.
But we ca~ put together the second and the third productionand get a new one:(\[bl\],DOM(bl,C 1) ^ LFT(el,c I) ^ LFT(bl,X 2) ^ DOM*(x2,el),H\[el\]E)NOW this production is "better" than the third above, but it doesnot yet satisfy our condition.
Therefore we put it together with thefirst one and get(\[al\],DOM(al,b I) ^ DOM(bl,c I) ^ LFT(el,c I) ^ LFT(bl,X 2)^ DOM*(x2,el),H\[el\]EH\[el\]E)This production is acceptable and together with the production(\[el\],TRUE,AR)it performs the same derivation as the four productions above.
Theproductions resulting from this transformation process are all pro-ceeding downward in a tree.
Each of them can be transformed into aTDTT of its own and finally these single TDTTs are composed to oneTDTT which is equivalent to the TDG.The transformation process sketched above can be made only if theTDG is loop-free.
That means that each node of a tree is passedduring a derivation in TDG at most once.Now we can adopt the result of Baker \[I\] about top-down tree trans-ductions.
It states that the family of the images of recognizablesets of trees (e.g.
the set of derivation trees of a context-freegrammar) under a top-down transduction is properly contained in thefamily of deterministic context-sensltive languages.
In other words,the result of t~e translation of the set of derivation trees of acontext-free grammar by a TDG is at most a deterministic context-sensitive language./82 W. DILGERREFERENCES\[I\] Baker, B.S., Generalized Syntax Directed Translation, TreeTransducers, and Linear Space, SIAM J. Comput.
7 (1978)376 - 391\[2\] Bralnerd, W.S., Tree Generating Regular Systems, Inf.
andControl 14 (1969) 217 - 231\[3 \] Chomsky, N., Aspects of the Theory of Syntax, MIT Cambridge,Mass., 1965\[4\] Engelfrlet, J., Rozenberg, G., and Slutzkl, G., Tree Transducers,L Systems, and Two-Way-Machines, JCSS 20 (1980) 150 - 202\[5\] Joshi, A.K., and Levy, L.S., Constraints on structuraldescriptions: local transformations, SIAM J. Comput.
6 (1977)272 - 284\[6\] Kolvenbach, M., LStscher, A., and Lutz, H.-D., (eds.
), KUnst-lithe Intelligenz und natUrllche Sprache, Forschungsberichtedes Instituts f~r deutsche Sprache 42, Narr-Verlag, T~bingen,1979\[7\] Rosen, B.K., Tree-Manipulating Systems and Church-Rosser Theo-rems, JACM 20 (1973) 160 - 187\[8\] Wulz, H., Formalismen elner Ubersetzungsgranunatlk, Forschungs-berichte des Instituts fur deutsche Sprache 46, Narr-Verlag,T~tbingen, 1979
