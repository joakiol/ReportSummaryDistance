A PROGRESS REPORT ON THEUSE OF ENGLISH IN INFORMATION RETRIEVALJ.
A. MOYNEIBM Corporation and Harvard UniversityBoston Programming Center'IBM Corporation545 Technology SquareCambridge, Hass.
02139U.S.A.ABSTRACTProgress is reported in the further development of an alreadyworking model for communicating in English with a computerabout the contents of a library.
The revised grammar of thismodel combines the phrase structure and transformational rulesof the underlying grammar into a single efficient component.Problems of implementation and ambiguity resolution are dis-cussed.During the academic year 1966-1967 a system, Proto-RELAUES, wasdesigned and implemented at Boston Programming Center, IBM Corporation,for communication with a computer (System/360, Models 40 and 50).
Thissystem has been operational since June 1967 I.  I t  permits the user tocommunicate with the computer in English about the contents of thelibrary at the Center 2.
The underlying grammar in this system is arecognition grammar based on the generative approach in l inguistictheory.
The pioneering work for a recognizer for a generative grammarwas done by Petrick (1965).
Among the transformational grammars|.
This system was reported in Moyne (1967a) and a detailedspecification of i t  is included in Moyne (1967b).2.
One can type English sentences at a computer terminal makingqueries, giving commands and, in general, asking for the retrievalof any pertinent data about the content of the library.developed for  computer appl icat ion two stand out for  their  h is tor ica limpact on this approach: The Mitre (1964) granxnar developed by anumber of M.I.T.
scholars, and the so-called IBM Core Grammar 3.
Aluc id  and informative discussion of the implications of the use ofnatura\] languages in computers is given in Kuno (1967).The theoret ical  and h is tor ica l  signif icance of these grammarsnotwithstanding, they a l l  have serious practical disadvantages in thattney generate a l l  the possible syntactic analyses for  every ambiguoussentence but have no pract ical  way of selecting in a fast and e f f i c ientmanner the sense of the sentence e i ther  intended by the user or in-herent in the nature of the discourse.
In Proto-RELAUES, we t r ied toavoid this d i f f i cu l ty  by rest r ic t ing  the discourse to a highly-spec-ia l i zed  f ie ld  and tnus reduced most of the ambiguities to the lexic~lleve l .
In his important work on semantics for  question answering sys-tems.
Woods (1967) adopts the same approach, but ne st ipulates thatthe ult imate solution for  resolving ambiguities in a more generalsystem is in interact ion with the user.
This is ,  of course, the mostgeneral solut ion.
I f  one can generate a l l  the possible analyses of asentence and le t  the user select the analysis which ref lects his senseof  the sentence, one would delegate the choice of understanding to theuser and w i l l  sat is fy  nim as long as the user knows what he is ta lk ing3.
Rosenbaum and Lochak (1966).grammar, see Rosenbaum (1968).IFor the latest  version of thisabout.
However, this approach is also unsatisfactory for practicalreasons, even if an easy way to build such an interactive systemwere known.
Under a time-sharing environment, which is the only prac-tical environment for on-line systems of this kind, every inter-ruption and interaction will cost time, and the total effect will makethe system so slow and cumbersome to make it impractical.In tills paper, we will propose some additional devices for theautomatic resolution of ambiguities.
These devices are now beingstudied and implemented at the IBM Boston Programming Center.
Ideally,one should not have to arbitrarily restrict the types of sentencesWhich the user of the system may input to the grammar, i.e., the gram-mar should be able to parse any sentence of any length.
Implementationof this ideal goal is, however, presently untenable.
We will outlinehere our efforts to approach this goal to the extent which is possibleunder the present state of the art.The grammar of Proto-RELADES was a standard recognition grammarwith separate phrase structure and transformational components; thatis, phrase structure rules would apply to the input sentence andproduce a surfacestructure.
The latter would then be the input tothe transformational component andthe output of this component wouldbe the deep structure of the sentence.
Our new experimental grammarcombines these two components into one integrated system of rules.To understand the implication of this, we must look at the form and-3--nature of the rules in this gramnar.. Each rule in this grammar hasthe following format:(1) Li :  A'BC ~ D'E ~ F $X$ @Y@ *** IL nThis rule has a label L i and a GOTO instruct ion L n. The functionof the rule can be paraphrased as fol lows: Check to see that theelements ABC are to the le f t  of the pointer I" in the input sentenceand that the elements D and E are to the r ight  of i t  (there is no upperl im i t  to the number of the elements to the le f t  and r ight  of thepointer;  there must be at least one element to le f t  of the horizontalarrow ~ .)
I f  this is the case, then i f  condition X is satisfied,perform action Y and create a node F to dominate over the s)nubolsbetween the two dots ( ' )  on the left  of the arrow (X and Y can benull).
Next, move the pointer to the right according to the number ofthe stars (*) at the ta i l  end of the rule and go to the rule labeledL n. I f  this rule does not apply, the control wi l l  pass on to the nextrule in the sequence, i .e .
,  to Li+ I.We see at once that this rule format permits one to write contextsensitive rules constrained by some conditioning factors and also buildlocal transformations in the Y part of the rule.
The traff ic  in therule application is controlled by the GOTO label L n. Underlying thissystem of rules is the "reductions analysis" (RA) recognizer whichreads the rules and applies them to the input sentence resulting in atree structure (P-marker) representing the deep structure of the sentence.-4-The RA in our system is an extension of the model proposed by Cheatham (1968).Culicover (1969) and Lewis (1969) have written and implemented agrammar which uses these rules with exclusively local transformations.The net result of this grammar is that a canonical deep structure isproduced for the input sentence without the generation of the inter-mediate surface structure.
In terms of computer efficiency and speed,this is a significant step.
The theoretical significance of sucha recognition grammar has yet to be studied.The ambiguities can be resolved by the following interactions,al l  of which are automatic internal and, therefore, fast interactions,except the last one.
In a fully-generalized system, al l  these inter-actions must be implemented in a manner that they wil l  tradeoff againsteach other for reducing the complexity and increasing the speed.The final interaction on l i s t  (2), i .e .
,  human interaction,which is the last resort in this system can be omitted or its usegreatly restricted in many practical situations.
The interactions arewith:(2) ( i) the lexicon( i i )  the date base( i i i )  the system(iv) the human userLexical entries have a certain number of features which play arole in the structural analysis of the input sentence.
This is basedon the already well-known proposal of Chomsky (1965) for syntacticfeatures.
A simple example of a semantic feature of a sort is given-5-below:(3) John wrote the book on the shelf.I f  the word shelf in the lexicon has a feature or features denoting thati t  is a place for storing books, etc., but normally people do notwrite on i t  or reside on i t ,  then in the process of the analysis of (3)the prepositional phrase on the shelf wi l l  be recognized as modifyingthe noun boo___k_kand not the verb write or the proper noun John.
Thetrouble with this solution is obvious: there wi l l  be too many simpleand complex features for each entry in the dictionary 4, and we runinto severe problems for practical applications.
This is why we wantto reduce the reliance on the dictionary features to the minimum andtradeoff as far as possible with the other interactions listed under(2) above.Interaction with the data base wi l l  provide the discourse back-ground and may turn out to be the most significant and practical meansfor resolving ambiguities.
For our system, this category of interactionincludes looking up in micro-glossaries; that is, specialized glossariescontaining the jargon of each narrow f ield of application.
Again, ahighly simplified example of interaction with the data base is thefollowing.
Suppose that the input sentence was(4) Do you have any books on paintings by Smith?Somewhere in the process of the derivation of the underlying structure4.
For a fractional grammar of English with partial featuresspecified, see Rosenbaum (1968).-6-!
(and the interpretation) of the sentence in (4) i t  becomes necessaryto decide whether the phrase by Smith modifies books or ~aintings, thatis whether the question is about books by Smith or about paintings bySmith.
At this point, the system can look into the data base and see,for example, whether Smith occurs under the column for authors or forpainters and resolve the ambiguity accordingly.Interaction with the system is similar to the interaction withthe data base except hat here we question the capabilities of theunderlying system in order to resolve the!ambiguity.
Consider thefollowing example:(5) Do you have any documents on computers?The ambiguity in (5) is, among others, in whether we want documentswritten about computers or we are referring to piles of documents onthe top of computers.
Now the underlying system which analyzes andinterprets (5) and produces the answer to the question has certaincapabilities; for example, i t  has computer routines for searching listsof t i t les,  authors, etc., printing data, and whatever else there is.However, i f  the system does not have a faci l i ty for "looking" on thetop of the computers in search of documents, we can reject thatinterpretation and adopt one which concerns documents containinginformation about computers.The human interaction becomes necessary only when none of theabove devices resolve the ambiguity; for example, in the case of the-7-data base sample in sentence (4) above when the data base has thename Smith under both the author and painter columns.
In this case,the system should formulate some sort of simple question to ask thehuman user before the final interpretation is effected; for example:"Do you mean books by Smith or paintings by Smith or both?"
But, asI mentioned above, we have found in practice that, within a speci-fied discourse and with a properly organized lexicon and data base, theneed for taking this last resort seldom arises; and that is whysystems such as Proto-RELADES and Woods (1967) can have significantpractical claims.In summary, we visualize a restricted but completely practicalnatural language system for communication with a computer and infor-mation retrieval with a general exicon and specialized micro-glossaries.Certain restrictions in the lexicon and in the micro-glossaries wi l lprevent wild generation of all possible and obscure (or unlikely)analyses but wi l l  permit generation of all the reasonable analyses foreach input sentence.
Interactions with the lexicon, the data base( i .e .
,  the subject of the discourse) and system wil l  further eliminatethe various analyses for eacll sentence until one analysis is left .In such cases when the system is unable to reduce the query to oneanalysis, the human user is asked to help in clarifying the ambiguity.-8-I would l i ke  to close this  paper, however, with a word of caution.No l ingu is t  and no serious conq~utational l ingu is t  w i l l  claim that  heknows how to bui ld a system such as outl ined above for  a completelyunrestr icted processing of  a natural language.
The stress throughoutth is  paper has been on pract i ca l i ty .
We v isua l i ze  a res t r i c tednatural  language system of  the sort  which is fu l l y  pract ica l  and usefulfor  many appl icat ions in information sciences.-9-BibliographyCneatham, T. E., Jr. (1968) "On the Generation and Implementationof Reductions Analysis Programs for Context FreeGrammars," Computer Associates, C\[ -6902-2911, Feb. 29, 1968.Cnomsky, Noam (1965) Aspects of the Theory of Syntax, M.I.T.
Press,Cambridge, Mass.Culicover, Peter (1969) "A Discussion of the CUE Grammar" (forthcoming)Kuno, Susumu (1967) "Computer Analysis of English," MathematicalAspects of Computer Science, American MathematicalSociety, Vol.
19.Lewis, Clayton (1969) "The RA-DRYAD System for Automated RecognitionGrammars" (forthcoming)Mitre (1964) English Preprocessor Manual, The Mitre CorporationBedford, Mass.Moyne, J.
A.
(1967a) "Toward the Understanding of Natural Languages byMachines," Proceedings of the X International Congress ofLinguists, Bucharest.Moyne, J.
A.
(1967b) Proto-RELADES: A Restrictive Natural LanguageSystem, IBM Corp., BPC Technical Report No.
3, Oct. 3, \]967,Cambridge, Mass.Petrick, Stanley Roy (1965) A Recognition Procedure for TransformationalGrammars, M.I.T.
doctoral thesis, ,Cambridge, Mass.-10-Rosenbaum, P. and D. Lochak (1966) The IBM Core Grammar of En91ish,Thomas J. Watson Research Center, IBM Corporation,Yorktown Heights, New York.Rosenbaum, Peter S. (1968) Engiish Grammar I I ,  IBM Research ReportR C 2070, Yorktown Heights, New York.Woods, William A.
(1967) Semantics for a question-Answering SystemReport No.
NSF-19, The Computation Laboratory, HarvardUniversity, Cambridge, Mass.3.
?- I I -
