Using an open-source unification-based system for CL/NLP teachingAnn CopestakeComputer LaboratoryUniversity of CambridgeCambridge, UKaac@cl.cam.ac.ukJohn CarrollCognitive and Computing SciencesUniversity of SussexFalmer, Brighton, UKjohnca@cogs.susx.ac.ukDan FlickingerCSLI, Stanford University andYY SoftwareVentura Hall,Stanford, USAdanf@csli.stanford.eduRobert MaloufAlfa Informatica,University of Groningen,Postbus 716, 9700 AS Groningen,The Netherlandsmalouf@let.rug.nlStephan OepenYY Software andCSLI, Stanford University110 Pioneer WayMountain View, USAoe@yy.comAbstractWe demonstrate the open-source LKBsystem which has been used to teach thefundamentals of constraint-based gram-mar development to several groups ofstudents.1 Overview of the LKB systemThe LKB system is a grammar developmentenvironment that is distributed as part of theopen source LinGO tools (http://www-csli.stanford.edu/?aac/lkb.htmland http://lingo.stanford.edu, seealso Copestake and Flickinger, 2000).
It is anopen-source grammar development environmentimplemented in Common Lisp, distributed notonly as source but also as a standalone applicationthat can be run on Linux, Solaris and Windows(see the website for specific requirements).
Itwill also run under Macintosh Common Lisp,but for this a license is required.
The LKB in-cludes a parser, generator, support for large-scaleinheritance hierarchies (including the use ofdefaults), various tools for manipulating semanticrepresentations, a rich set of graphical toolsfor analyzing and debugging grammars, andextensive on-line documentation.
Grammars ofall sizes have been written using the LKB, forseveral languages, mostly within the linguisticframeworks of Categorial Grammar and Head-Driven Phrase Structure Grammar.
The LKBsystem was initially developed in 1991, but hasgone through multiple versions since then.
Itis in active use by a considerable number ofresearchers worldwide.
An introductory bookon implementing grammars in typed featurestructure formalisms using the LKB is nearcompletion (Copestake, in preparation).2 Demo outlineAlthough the LKB has been successfully used forlarge-scale grammar development, this demon-stration will concentrate on its use with relativelysmall scale teaching grammars, of a type whichcan be developed by students in practical exer-cises.
We will show an English grammar frag-ment which is linked to a textbook on formal syn-tax (Sag and Wasow, 1999) to illustrate how thesystem may be used in conjunction with more tra-ditional materials in a relatively linguistically ori-ented course.
We will demonstrate the tools foranalyzing parses and for debugging and also dis-cuss the way that parse selection mechanisms canbe incorporated in the system.
If time permits, wewill show how semantic analyses produced with asomewhat more complex grammar can be linkedup to a theorem prover and also exploited in se-mantic transfer for Machine Translation.
Exer-cises where the grammar is part of a larger systemare generally appropriate for advanced courses orfor NLP application courses.The screen dump in the figure is from a sessionworking with a grammar fragment for Esperanto.This shares its basic types and rules with theEnglish textbook grammar fragment mentionedabove.
The windows shown are:1.
The LKB Top interaction window: mainFigure 1: Screen dump of the LKB systemmenus plus feedback and error messages2.
Type hierarchy window (fragment): themore general types are on the left.
Nodes inthe hierarchy have menus that provide moreinformation about the types, such as their as-sociated constraints.3.
Type constraint for the type intrans-verb:again nodes are clickable for further infor-mation.4.
Parse tree for La knabo dormas (the boysleeps): a larger display for parse trees isalso available, but this scale is useful forsummary information.
Menus associatedwith trees allow for display of associated se-mantic information if any is included in thegrammar and for generation.
Here the dis-play shows inflectional rules as well as nor-mal syntactic rules: hence the VP node un-der dormas, which corresponds to the stem.5.
In the middle is an emacs window displayingthe source file for the lexicon associated withthis grammar.1 It shows the entry for the lex-1(We generally use emacs as an editor when teaching,eme dorm, which, like most lexical entries inthis grammar, just specifies a spelling and atype (here intrans-verb).6.
Part of the parse chart corresponding to thetree is shown in the bottom window: nodeswhich have knabo as a descendant are high-lighted.
Again, these nodes are active: onevery useful facility associated with them is aunification checker which allows the gram-mar writer to establish why a rule did notapply to a phrase or phrases.3 Use of the LKB in teachingTeaching uses of the LKB have included under-graduate and graduate courses on formal syntaxand on computational linguistics at several sites,grammar engineering courses at two ESSLLIsummer schools, and numerous student projectsat undergraduate, masters and doctoral levels.
Anadvantage of the LKB is that students learn to usea system which is sufficiently heavy duty for moreadvanced work, up to the scale at least of researchalthough this causes some overhead, especially for studentswho are only used to word processing programs.prototypes.
This provides them with a good plat-form on which to build for further research.
Feed-back from the courses we have taught has mostlybeen very positive, but we have found a ratio ofsix students to one instructor (or teaching assis-tant) to be the maximum that is workable.
Onemajor reason is that debugging students?
gram-mars and teaching debugging techniques is time-consuming.When teaching an introductory course with theLKB, we start the students off with a very sim-ple grammar, which they are asked to expandin specific ways.
We introduce various addi-tional techniques and formal devices (such as in-flectional and lexical rules, defaults, differencelists and gaps) gradually during a course.
Mate-rial from our ESSLLI courses, including startinggrammars, exercises and solutions is distributedvia the website.
Several other small grammarsdeveloped by students are also distributed as partof the LKB system and we would welcome fur-ther contributions.
We are hoping to facilitate thisby making it easier for people outside the LinGOgroup to add and modify grammars.Several graduate students have used versionsof the LKB system as part of their thesis work,for diverse projects including machine transla-tion and grammar learning.
It has been usedin the development of several large grammars,especially the LinGO English Resource Gram-mar (ERG), which is itself open-source.
Re-search applications for the ERG include spokenlanguage machine translation in Verbmobil, gen-eration for a speech prosthesis, and automatedemail response, under development for commer-cial use.
The LKB/ERG combination can be usedby researchers who require a grammar which pro-vides a detailed semantic analysis and reason-ably broad coverage, for instance for experimentson dialogue.
The LKB has also been used asa grammar preprocessor to facilitate experimentson efficiency using the ERG with other systems(Flickinger et al 2000).4 Comparison with other workThere is a long history of the use of fea-ture structure based systems in teaching, dat-ing back at least to PATR (Shieber, 1986:see http://www.ling.gu.se/?li/).
TheAlvey Natural Language Tools (Briscoe et al1987) have been used for teaching at several uni-versities: Briscoe and Grover developed an ex-tensive set of teaching examples and exercises,which is however unpublished.
Versions of theSRI Core Language Engine (Alshawi, 1992) andof the XTAG grammar (XTAG group, 1995) andparser have also been used for teaching.
Besidesthe LKB, typed feature structure environmentshave been used at many universities, though un-like the systems cited above, most have only beenused with small grammars and may not scaleup.
Hands on courses using various systems havebeen run at many recent summer schools includ-ing ESSLLI 99 (using the Xerox XLE, see Buttet al 1999) and ESSLLI 97 and the 1999 LSAsummer school (both using ConTroll, see Hin-richs and Meurers, 1999).
Very little seems tohave been formally published describing expe-riences in teaching with grammar developmentenvironments, though Bouma (1999) describesmaterial for teaching a computational linguisticscourse that includes exercises using the Hdrugunification-based enviroment to extend a gram-mar.Despite this rich variety of tools, we believethat the LKB system has a combination of fea-tures which make it distinctive and give it a usefulniche in teaching.
The most important points arethat its availability as open source, combined withscale and efficiency, allow advanced projects to besupported as well as introductory courses.
As faras we are aware, it is the only system freely avail-able with a broad coverage grammar that sup-ports semantic interpretation and generation.
Es-pecially for more linguistically oriented courses,the link to the Sag and Wasow textbook is alsoimportant.
Similar grammars could be developedfor other systems, but would be less directly com-parable to the textbook since this assumes a de-fault formalism which so far is only implementedin the LKB.On the other hand, the LKB is not a suitable ba-sis for a course that involves the students learningto implement a unifier, parser and so on.
The sys-tem is quite complex (about 120 files and 40,000lines of Lisp code) and though the vast majorityof this is concerned with non-core functionality,such as the graphical interfaces, it is still some-what daunting.
This seems an inevitable trade-off of having a system powerful enough for realapplications (see Bouma (1999) for related dis-cussion).
It is questionable whether the LKB isentirely satisfactory as a student?s first computa-tional grammar system, although we have used itwith students who have no prior experience of thissort: ideally we would suggest starting off withbrief exercises with a pure context-free grammarto explain the concepts of well-formedness, re-cursion and so on.
We also wouldn?t necessar-ily advocate using the LKB as a core componentof a first course on formal syntax for linguisticstudents, since the specifics of dealing with animplementation may interfere with understandingof basic concepts, though it is suitable as a sup-plement to an initial course or as the basis for aslightly more advanced course.We think there is considerable potential forbuilding materials for courses that allow studentsto work with realistic but transparent applicationsusing the LKB and a large grammar as a compo-nent.
Developing such materials is clearly nec-essary in order to give students useful practicalexperience.
It is however very time-consuming,and most probably will have to be undertaken aspart of a cooperative, open-source developmentinvolving people from several different institu-tions.AcknowledgementsThis research was partially supported by the Na-tional Science Foundation, grant number IRI-9612682.
The current versions of the Englishgrammars associated with the Sag and Wasowtextbook were largely developed by ChristopherCallison-Burch while he was an undergraduate atStanford.ReferencesAlshawi, Hiyan (ed).
[1992] The Core LanguageEngine, MIT Press, Cambridge, MA.Bouma, Gosse.
[1999] ?A modern computa-tional linguistics course using Dutch.?
In Frankvan Eynde and Ineke Schuurman, editors, CLIN1998, Papers from the Ninth CLIN Meeting, Am-sterdam.
Rodopi Press.Briscoe, Ted, Claire Grover, Bran Boguraevand John Carroll.
[1987] ?A formalism and en-vironment for the development of a large gram-mar of English?, Proceedings of the 10th Interna-tional Joint Conference on Artificial Intelligence(IJCAI-87), Milan, Italy, 703?708.Butt, Miriam, Anette Frank and Jonas Kuhn.
[1999] ?Development of large scale LFG gram-mars ?
Linguistics, Engineering and Resources?,http://www.xrce.xerox.com/people/frank/esslli99-hp/index.htmlCopestake, Ann.
[in preparation] Implementingtyped feature structure grammars, CSLI Publica-tions, Stanford.Copestake, Ann and Dan Flickinger.
[2000]?An open-source grammar development environ-ment and broad-coverage English grammar us-ing HPSG?, Second conference on Language Re-sources and Evaluation (LREC-2000), Athens,Greece.Flickinger, Daniel, Stephan Oepen, HansUszkoreit and Jun?ichi Tsujii.
[2000] Journal ofNatural Language Engineering.
Special Issue onEfficient Processing with HPSG: Methods, Sys-tems, Evaluation, 6(1).Hinrichs, Erhard and Detmar Meurers [1999]?Grammar Development in Constraint-BasedFormalisms?,http://www.ling.ohio-state.edu/?dm/lehre/lsa99/material.html,see also http://www.sfs.nphil.uni-tuebingen.de/controll/Sag, Ivan, and Tom Wasow [1999] SyntacticTheory: An Introduction, CSLI Publications.Shieber, Stuart [1986] An Introduction toUnification-based Approaches to Grammar,CSLI Publications.The XTAG Research Group [1995].
?A Lex-icalized Tree Adjoining Grammar for English?IRCS Report 95-03, University of Pennsylvania?
