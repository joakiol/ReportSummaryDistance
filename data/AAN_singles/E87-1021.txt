RUSLAN - AN NT SYSTEM BETWEEN CLOSELY RELATED LANGUAGESJan Haj i~J , , .Vyzkumny ustav matematxckych stroju, P JLoretanske nam.
3118 55 Praha 1, CzechoslovakiaABSTRACTA project of machine translation ofCzech computer manuals into Russian isdescribed, presenting first adescription of the overall systemstructure and concentrat ing then mainlyon input text preparation and a parsingalgorithm based on bottom-up parserprogrammed in Colmerauer's Q-systems.INTRODUCTIONIn mid-1985, a project of machinetranslation of Czech computer manualsinto Russian was started, thusconstitut ing a second MT project of thegroup of mathematical l inguistics atCharles University (for a fulldescription of the first project, see(Kirschner, 1982) and (Kirschner, inpress)).Our goals are both practical(translation or re-translation of new orre-edited manuals for export purposeswithin the COMECON countries, of anestimated amount of 500 to I000 pages ayear) and theoretical (we wish to verifyour approach to the analysis of Czechand to develop a theoretical backgroundfor translation between closely relatedlanguages such as Czech and Russian).The project is carried out by V~S,Prague (Research Institute for ComputingMachinery) at the Department of Softwarein cooperation with the Department ofMathematical  Linguistics, Faculty ofMathematics and Physics, CharlesUniversity, Prague.I nput  textsThe texts our system should translateare software manuals to V~MS-developedDOS-4 operating system which is anadvanced extension to the common DOS.The texts are currently maintained ontapes under the edit ing and formattingsystem PES (Programmed Edit ing System).This system allows for preparation,edit ing and binding-ready printout usingnational printer chain(s).
Texts arestored on tapes using an internal formatcontaining upper/ lowercase letters,edit ing & formatting commands, versionnumber/identif ication, info onlast-changed pages etc.
; most of thiscan be used to improve the overalltranslat ion quality.
On the other hand,part of it is somewhat confusing andmust be handled carefully.By now, we have access to 65 manualson tapes, containing about 12.000 pages(approx.
1.500.000 running words -53.000 different word fomrs).
Thecomplete documentation covers 78 manualsand is still growing.113The overall  structureRUSLAN is a unidirectional systemdealing with one pair of languages (SL -Czech, TL - Russian).
We adopt atransfer- l lke translat ion scheme (in thesense we do not use any intermediatepilot language), but with manysimplif ications due to the closerelat ionship between Czech and Russian,so that it belongs to the so-calleddirect method (in the sense of (Slocum,1985)) .The translat ion process itself is tobe carried out in batch (we have torespect the hardware available).
Thismeans that no human intervention ispossible during the process.Nevertheless, our aim is to obtainhigh-qual l ty results which would requireusual post-edit ing only.
No humanpre-edit ing is contained in the systemdesign.The translat ion unit is constitutedby a single sentence.
Thus, therecognit ion of sentence boundaries is apart of the preprocessing.For the time being, a treatment ofel l ipsis is not provided for, but amodif icat ion of the analysis is beingprepared to account for cases (not veryfrequent in the translated manuals)where information necessary for anappropriate translat ion should be lookedfor in the previous sentence(s).Translat ion stepsRUSLAN performs fol lowing steps toobtain the translat ion of a given (partof a) manual:(1) The text is "punched" from a tape,to "visualize" all embedded edit ing& formatting commands;(2) Ful ly automatic preprocessingfollows, which includes:- national & special charactersconversion & coding- sentence boundaries recognit ion(3) The Czech morphological  analysis(HA) is performed, fol lowed by(4) the syntact ico-semantic analysis(SSA) with respect to Russiansentence structure, for each inputsentence separately.
(5) The representation obtained in theprevious step is converted intoRussian surface word llst in anappropriate order s imultaneouslyperforming some TL-dependentchanges.
(6) Then, morphological  synthesis ofRussian (MSR) is performed and atthe same time synthesized words aredecoded and put out along withpreserved edit ing & formatt ingcommands, and at last(7) the output is saved onto a tapeunder the PES system again.The result ing text can be then easi lyprinted and corrected using PES edit ingfacil ities.Some gore  deta i l sSince the overall structure of RUSLANdoes not differ considerably from theexist ing MT-systems, we wil l  concentrateourselves in our paper on someinterest ing details.ad (1): Gett ing a text out of the tapeThis function is performed by meansof PES "punch" command only.
Internally114coded words and commands are convertedto card-l ike character format, so theycan be read easily by other programs.This step is processed separatellybecause we want to achieve the maximalhardware and operating syste~independence possible.ad (2): PreproceaslngTrue words and punctuation arerecognized and coded using alphanumericcharacters only.
Special characters(such as /, +, :, greek chars, etc.
)and YES-commands are coded similarly,but they are handled as word attributesrather than as separate words.The recognit ion of sentenceboundaries proved to be the hardestproblem of this stage.
We havedeveloped a special algorithm forsentence boundaries recognition, whichtakes edit ing commands and punctuationinto consideration, as well asupper/ lowercase letters in specialpositions.
This algorithm is based onframes and features.
Text is cutwhenever the "End Of Sentence" conditionis met.
Such a condition is raised whenone of the features of the next textelement is found in the frame of thecurrent text element.Features assigned to each element aree.
g. "beginning of sentence" -unconditional sentence boundary assignedto some PES commands, or "capitalized" -this one is assigned to the wordstarting with exactly one uppercaseletter.
Among other features we usethere are "common word", "uppercaseonly", "number" and some otherclassifying PES commands.Frames contain "beginning ofsentence" in most  cases; a morecomplicated situation arises whenevaluating punctuation frames.
Framesfor ".
", ";", "?"
are created usingquite complicated algorithms.
Clearly,it is not possible to obtain 100%correctness without a deeper analysis,so we prefer (isolated) missing cuts toincomplete sentences.
Tests showed onlyone missing cut every 100 pages ofcontinuous text ( introductory manuals),and every 30-50 pages in referencemanuals; no incomplete sentencesappeared anywhere in the sample.
Thislooks promising, because missing cutsresult in slowdown of analysis only.ad (S): Morphological analysisSince Czech is a highly inflectionallanguage, this part is a little morecomplicated task than a MA for English.However, in the stage of MA of Czech weobtain much more useful information forthe syntactico-semantic analysis.MA is based on pattern unification.During the MA, the main dictionary issearched through to find all possiblestems; ambiguit ies are treated inparallel during the next phase ofprocessing.ad (4): Syntact ico-semantic analysisSSA is the most important part ofRUSLAN.
Using Sgall 's FGD as thetheoretical starting point (for the mostrecent formulation, see (Sgall et al,1986)), the dependency approach anddata-driven parsing are the cornerstones and valency frames are the toolsof SSA.
To control the combinatoricexpansion, semantic features are used asadditional constraints to the syntacticones (for a more  detai led account of115SSA, see (Oliva, in prep.
)).The result of SSA is affected by theTL-syntax - so there is no true separatetransfer component in our system.
Inmost cases, the need for changes can beresolved on the basis of the Czec~sentence.
A module is being prepared"carrying out some minor restructuring(necessary e. g. for determining theword order and some instances ofnegation), which will be performedbefore the synthesis.The close relat ionship between Czechand Russian helps us to leave manyambiguities unresolved and to al low theoutput to be as ambiguous as the input.We must resolve such ambiguit ies thatwould create mult iple outputs in the TL,and select only one of them, but this isthe case of only l imited number ofsentences.ad (5 ) :  Generat ionFor the time being, no trueTL-restructur ing is being performed.During the dependency treedecomposition, morphological  informationis transferred from the governor to itsdependent modif icat ions according toagreement.
The original word order issl ightly changed when needed.
Anordered list of words with morphologicalinformation and edit ing/formatt ingattributes restored is the output ofthis phase.ad (6): Morphological  synthesisTrue words are processed by the MSRmodule to obtain their inflected forms.This module is capable of doing someword derivation (such as verbaladjectives).
It is also responsible fororthographical changes (concerningpreposit ions and some pronouns) forcedby the adjacent word(s).After MSR, each word is decoded(including its attributes) to theFEB-acceptable format and "punched" out.This is an inverse operation to step(2).ad (7): Catalogizat ionHandled by YES solely, this is aninverse operation to step (1).Implementat ionAll the test ing is performed on theEC-1027 or IBM/370 systems at V~MS(under DOS-4).
The base of the system(steps 3, 4 and 5) is capable to rununder the OS operating system as well.Steps 1 and 7 are handled by specialsoftware, which is a part of the DOS-4operating system.
Steps 2 and 8 arewritten in standard Pascal ( includingthe MSR module).
Steps 3 to 5 areprogrammed in the wel l -known Q-systems,implemented through Fortran IV (G or Hlevel).
We use the Q-language compilerwith the kind permission of its originalauthor, prof. B. Thouin; some marginalchanges were made in the Q-languageinterpreter due to the practical needsof our system.
The only noticeablechange is that complete graphs deletedformerly due to the CUL + DE + SACmechanism are passed now (unchanged) tothe next Q-system for furtherprocessing.Maximal core requirement is estimatedto 840KB (step 3 - dictionary), so it ispossible to use even real-memory basedsystems.
Secondary storage volume willbe determined mainly by the dictionary116size, since an average entry occupiesi000 bytes for the first operationalversion.
We suppose that i0.000 entrieswill be sufficient for the firstprototype.
Dictionary search isperformed using extended hashing schemeincorporated in the Q-languageinterpreter.Elapsed time needed for translationdepends on hardware and the time sharingcoefficient.
First test showed, thatthe widely-published speed of 1.5 mipwwill not be exceeded.
This converts to3 sec CPU on our fastest EC-I027computer, which will clearly suffice totranslate up to the desired 50 pages aday.Conc lus ionIn March 1987, steps I, 2, 3 and 7are fully developed and implemented,step 8 is implemented partial ly(morphological synthesis of Russian); itwill be finished in mid-87.
Steps 4 and5 are under development.
They have beenseparately tested since last summer, themanual on General Description of DOS-4being the testing material.
Translationof the first three pages is availablenow (performed by steps 3, 4 and 5).Simultaneously, dictionary entries (cca7500 for the first, 87 version) arebeing prepared by external co-workers.REFERENCESKirschner, Zden~k.
1982.
A DependencyBased Analysis of Engl ish for thePurpose of Machine Translation.Explizite Beschreibung der Spracheund automatische Textverarbeitung IX,Charles University, PragueKirschner, Zdenek.
(in press).
APAC3-2:An Engl ish-to-Czech MachineTranslation System.
Expl iz iteBeschreibung der Sprache undautomatische Textverarbeitung XIV,Charles University, Prague, 1987Oliva, Karel.
(in prep.).
Programming aParser for Czech - a HighlyInflectional Language, to bepublished in: Proceedings of theConference on the Applications of AI,Prague, 1987Sgall, Pert; et al 1986.
The Meaning ofthe Sentence in its Semantic andPragmatic Aspects, Reidel/Amsterdam-Academia /PragueSlocum, Jonathan.
1985.
A Survey ofMachine Translation: Its History,Current Status, and Future Prospects.Computational Linguistics ii: 1-17.By the end of 1987, all steps (I) to(7) should be tested continuously atV~MS.
By the end of 88, RUSLAN shouldbe able to translate existing manuals inquality worth postediting.
Whenfinished (1990), it should translate newsoftware manuals in quality notrequiring more postedit ing than humantranslations.117
