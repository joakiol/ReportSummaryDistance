Layout and Language: Integrating Spatial and LinguisticKnowledge for Layout Understanding TasksMatthew Hurs t  and Tetsuya NasukawaIBM Research,  Tokyo  Research  LaboratoryAbstractComplex documents tored in a flat or partiallymarked up file format require layout sensitive pre-processing before any natural language processingcan be carried out on their textual content.
Con-temporary technology for the discovery of basic tex-tual units is based on either spatial or other con-tent insensitive methods.
However, there are manycases where knowledge of both the language and lay-out is required in order to establish the boundariesof the basic textual blocks.
This paper describesa number of these cases and proposes the applica-tion of a general method combining knowledge aboutlanguage with knowledge about the spatial arrange-ment of text.
We claim that the comprehensive un-derstanding of layout can only be achieved throughthe exploitation of layout knowledge and languageknowledge in an inter-dependent maimer.1 IntroductionThere is currently a significant amount of work be-ing carried out on applications which aim to de-duce layout information fl'om a spatial descrit/tionof a document.
The tasks vary in detail, howeverthey generally take as input a document descriptionwhich presents areas of text (including titles, head-lags, paragraphs, lists and tables) marked implicitlyby position.
A simple example is a flat text docu-ment which uses white space to demonstrate align-meat at the edges of textual blocks and blank linesto indicate vertical spatial cohesion and separatioubetween blocks.
1Rus and Summers ((Rus and Su,nmers, 1994))state that "the non-teztual content of documents\[complement\] thetcztual content and should play artequal role".
This is clearly desirable: textual andspatial properties, as described in tiffs paper, areinter-related and it is in fact highly beneficial to ex-ploit the relationships which exist between them.
In1The term spatiM cohesion is motivated by the work onlexical cohesion by Morris and Hirst ((Morris and Hirst,1991)).
Text which is cohesive is text which has a qualityof unity (p. 21).
Objects which have spatial cohesion have aquality of unity indicated by spatial features; in the words ofMorris and Hirst: they "stick together".algorithmic terms, this implies implementing solu-tions which use both spatial and linguistic featuresto detect coherent extual objects its the raw text.Apt)roaches to tile problem are limited to those ex-ploiting spatial cohesion.
There are two techuiquesfor achieving this.
The first looks for features ofspace, identifying rivers of space which ruts aroundtext blocks in some memfingflfl maimer.
Tim secondlooks at non-linguistic qualities of the text includ-ing alignment of tokens between lines as well as cer-tain types of global interactions (e.g.
(Kieninger andDengel, 1998)).
Although this second type focuseson the characters rather than the spaces in the text,tim features that it detects are implications of tilespatial arrangement of tile text: judging two wordsto be overlapping in the horizontal axis is not a fea-ture of tile words in terms of their content~ but oftheir position.
Elements of the above basic methodsmay be combined and, as with any f'eatnre vectortype of mmlysis, machine learning algorithins maybe applied (e.g.
(Ng el; al., 1999)).2 A New MethodTile methods based on spatial cohesion outlinedabove make assumptions about the application oflayout to the textual content of the document in or-der to derive features indicating higher order struc-ture.
These assumptions rely on tile realisation oflayout as space and do not always hold (see, e.g.,Figure 4: Grid Quantization), and may result in atn-biguities.
However, there is another source of infor-mation which can be exploited to recover layout.Though layout imt)oses patial etfects, it has lit-tle or no effect on low level language phenomenawitlfin the distinct layout document objects: we donot ca'poet the layout of tea;t o render it ungr'ammat-ical?
Conversely, we do not expect grmmnaticalityto persist in an incorrect interpretation of layout.For example, applying this observation to the seg-mentation of a double colmnn of text will indicate2It is clear that layout does has very definite consequencesfor tile content of textual document elements, however thosefeatures we are concerned with here are below even this rudi-mentary level of language analysis.334the line breaks, see Figure 4: Double Cohunns.
:3TheaI)l)lication of a low level hmguage model to the in-terpretation of spatially distinct textual areas can beapplied in many cases where a tmrely spatial algo-rithm may fail.
The following is an incomplete listof possible cases of application (concrete xamplesmay be found in Figure 4):Mu l t i  Co lumn Text  When the cohmms are sepa-rated by only one space, a language model maybe aI)l)lied to determine if and where the blocksexist.
These m W be confused with False SpacePos i t ives  where, by chance, the text tbnnat-ting introduces treams of white space withincontiguous text.Apposed/Marg ina l  Mater ia l  Text which is off'-set from the main body of text, similarly tomulti column text, will contain its own linebreaks.Unmarked  Headers  Headers may be unmarkedand appear silnilm' to single line 1)aragraphs.Doub le  Spac ing  The introduction of more tlmnone line of spacing within contiguous text causesambiguities with paragraph set)aration, headersal ld so oi1.El l ipt ica l  L ists When text continues through alayout device, a language model may 1)e usedto detect it.
aShor t  Paragraphs  When a t)aragral)hs is 1)artic-ularly short, the insertion of a line break may(:ause prot)lems.Another exmnple, and a usefifl at)plication, is thatto the 1)rot)lore of table segmentation.
Once a tablehas been located using this method or other meth-ods, the cells must be located.Mu l t i -Cohunn Cells A cell sl)ans multit)lecohmms.
This may easily 1)e conflised withMu l t i -Row Cells where a cell contains morethan one line and must be groul)ed accordingto the line breaks.E l l ipt ica l  Cel l  Contents  Cells which tbrm a dis-junctiou of possible contilmations to the contentof another cell can be identified using a languagemodel.Gr id  Quant i za t ion  When a plain text table con-tains ceils which arc not wholly aligned withaIn Figure 4: Doubh,.
Cohmms, we know, throughthe al)plicatlon of a language model, that there in a linet)reak after paragraph as a paragraph of text  in more likelythan a paragraph Applying, and Applying this of textis grammatically.4'l'his bares similm'ities with a simple list, lint the language.is that of the textual lint; which uses flmctional words andlmnctuation to indicate disjmmtion.other cells in the stone grid row or column, it isdifficult to associate the cells correctly.Languages which permit vertical and horizon-tal orthography (such as Japanese) pose additionalt)roblems when extracting layout features from l)laintext data.Or ientat ion  Detect ion  With mixed orientation,a language model may be used to distinguishvertical and horizontal text blocks)We can hyl)othesise that spatially cohesive areasof the document are renderings of some underlyingtextual representation.
If, at some level, the textis set)arated from the layout (the text is linearisedby removing line breaks), then we may observe cer-tain linguistic phenomena which are characteristicof the bmguage.
Reversing this allows us to identifythe sl)atially cohesive objects in the document )ydiscovering the transfonnatioll to the text (the ap-plication of layout, i.e.
the insertion of spacing andline breaks) which preserve our observations aboutthe language.
One such observation is the orderingof words.
Consequently, we can apply a languagemodel to a line of text in a docuinent o determinewhere line breaks have been inserted into the textfor layout purt)oses by observing where the languagemodel breaks down and where our simt)le notion oflayout 1)ased on sl)atial features i)ermits text blocksegmelttation.
This is an ideal.
In fact, knowledgeof layout and lan.q'uagc is required to over'co'me th, eshort comings of each,.There are many tyt)es of language model whichmay be applied to the problem being considered,ranging from the analytical - which provide an in-dication of linguisti(" structure), to tile classi\[ying -which indicate if (and to what extent) the intmt titsthe model.
The analytical, such as a context freegrmnmar, are not appropriate for this problem asthey require a broad intmt and are not suited to thefraglnents of" int)ut envisioned for this at)t)lications.The 1)rime purpose of the language model we wishto use is to t)rovide some ranking of candidate con-timmtions of a particular set of one or more tokens.A simple examI)le is the bigrmn model.
This usesfl'equency counts of pairs of words derived froln acorlms.
Although there are advantages and disad-vantages to this model, it will serve as an exmnI)lethough other more Sol)histicated and reliable modelsinay easily be at)i)lied.5In Figure 4: Orientation Variation, the.
column of texton the left of the tattle is a vertically orientated label (%W~mnlgeTk2L) whereas the remainder of the table is horizontallyorientated.
The apparent cohnnn oll the right of the tal)le isan artifact of the spacing and has no linguistic cohesion.3353 Bas ic  Algor i thmThe problem can be generally described in the fol-lowing manner: given a set of objects distributedin a two dimensional grid, for each pair of objects,determine if they belong to tile same cohesive set.TILe objects are tokens, or words, and the measm'eof cohesion is that one word follows from the otherin accordance with the the nature of the language,the content of the document, and tlm idiom of theparticular document element within which they maybe contained and that the spatial model of the lay-out of the docmnent permits cohesion.
In summary,the cohesion is spatial and linguistic.However, such a general description is not com-putationally sensible and the search space will bereduced if we consider the cases where we expectambiguities to occur.
This can be approached byrecognising that when there is the potential for am-biguity there is often present some artifact, whichtory well help identify the domain of the ambiguity:these are generally the markers of spatial cohesion;e.g., where there arc double cohnnns, we may alsoidentify left justification.
Consequently, for a givenword in tile the double column area, tim mnbiguitymay be resolved by inspecting tile word to the right,or tile set of words which may be left justified withthe line currently under inspection on the line below.Therefore, tile application of tile language model totile disambiguation problems mentioned above takesplace between a small set of candidate continuationpositions.These continuation points are located as pre-scribed by the markers of the spatial layout of text.Consequently, any algorithm using linguistic knowl-edge must exploit layout knowledge in order to 1)otharrive at an economic sohltion, and also to be ro-bust to weaknesses in tile language model.
The gen-eral method described here relies on and determinesboth spatial and linguistic information in a tightlyintegrated manner.
Tile algorithm falls ill to thefollowing broad steps:1. detect potential for ambiguity.2.
compute the set of possible continuation pointsby using knowledge of spatial layout.3.
disambiguate using a combination of hmguagcand layout knowledge.For examtfle, the words marked with a clear boxin Figure 2, upper, are those which, according to anaive spatial algorithm, m'e possibly in close prox-imity to tile right edge of a text block.
Hav-ing detected them, tile possit)le continuation points,shaded boxes, are comlmted (here for a single wordfor illustration).
A language model may then be ap-plied to determine the most likely contimmtion.Care must be taken wlmn discovering equallylikely continuations as opt)osed to a single mostlikely (me.
Figure 2, lower, contains two examples.Tile first illustrates tile case when there is 11o con-tinuation appropriate (there are three equally likelycontinuations; as none is the most likely, no contin-nation should be proposed).
In the second example,a unique continuation is preferred.
The general al-gorithln above provides ammtation to the tokens intile document which may then be used to drive atext-block recognition algorithm.Detect ing the Potential for Ambiguity Thepotential for ambiguity occurs when a feature of thedocument is discovered which may indicate the im-mediate boundary of a text block.
As we arc dealingwith the basic element of a token (or word), the po-tential for ambiguity may occur at the end of a word,or between any two words in a sequence on tile line.However, we only need to consider those cases wherea spatial algorithnl may determine a block boundary(correctly or incorrectly).
In order to do this we needa characterisation f a spatial algorithln in terms ofthe features it uses to determine text block bound-aries.These are naturally related to space in the text,and so onr algorithm will be concerned with the fol-lowing three types of space: 1) Between words wherethere is a vertical river of white space which contin-ues above and below according to some threshold;2) Between words larger than a nfinimum amountof space; 3) At; tim right hand side of the documentwhen no more tokens are found.
These describe po-tential points for line break insertion into text andconstitute a partial fllnctionat model of layout.Computing the Set; of Continuation PointsThe set of continuation points is comtmted accord-ing to the assumptions used to deterinine if there isthe potential for ambiguity.
The continuation pointfrom a point of potential ambiguity are: 1) The nextword to tile right; 2) The first word on tile next line;3) All tile continuation points on the next line whichare to the left of the current word.
These representthe complement to the above functional model of1wout.
Thus we have a model of 1wout which isintentionally over general as it uses local featureswhich are ambiguous.D isambiguat ion  Disambiguation may be carriedout in a number of ways depending on the extent re-quired by the language model being employed.
How-ever, regardless of what range of history or looka-head is required by tile language model, the processof dismnbiguation is not a simple matter of selectingtile best possible continuation as proposed by thestatistical or other elements of the language model.The interactions between layout and language re-quire that a nmnber of constraints be considered.These constraints model tile ambiguities cruised by336the layout and the language.For any 1)otential point of anlbiguity, a single (ornull) l)oint of continuation must be found.
And forany l)oint of continuation, a single source of its his-tory is required.
If token A has potential continua-tion points X and Y, and token B has potential con-tinuation points Y and Z, mid the best; continuationas predicted by the model for A is X and that tor Bis also X, then both A mid B Call not be succeededby their respective best continuations.
The selectionof continuation points nmst 1)e l)ased on the set ofpossible continuation points for the connected graphin which a potential point of ambiguity occurs (seeFigure 3).
An additional constraint inlposed by the1wout of the text is that links representing contin-uation cmmot cross.
This constraint is a feature ofthe interaction between tile spatial layotlt all(1 thelinguistic model.3.1 Extens ionsThe above algorittnn is not callable, of capturingall types of continuation observed in the basic text;blocks of certain document elements.
Specifically,there is an imi)licit restriction on a uni(lue continua-tion of the language through certain layout features.This may be called the one to one model of the inter-action t)etween layout and language.
I\]owever, theless fre(luent~ though equally inlt)ortant (:ases of oneto many and many to one intera(:tions must also l)econsidered.
In Figure d: Many to One, exanll)les of1)oth are given.
Significantly, these cases exists atthe boundaries between t)asi(: textual COml)onents oflarge (loculnent ol).ie(:ts (here tables).
It is suggested,the, n, that the detection of equally likely contimla-tion 1)oints may be used to dete, ct boml(larie, s wherethere is little or no sl)atial separation.
(;3.2 Ex i )e r imentat ionIll order to test the lmsic ideas described in this pa-1)er, a siml)le systenl was imt)lenlented.
A (:orpltsof documents was collected from the SEC archive(www.sec.gov).
These docmnents are rich ill va.r-ious docunlent elenmnts inchlding tables, lists andheaders.
The documents are essentially flat, thoughthere is solne anlount of header information encodedin XML as well as a nfinimal anlount of nmrkul) inthe document; body.A simple 1)igram nlodel of the, language used wascreated.
This was (:onstructed 1)artly from generaltexts (a corlms of English literature.)
of which it wasassumed there was no complex content, and 1)artlyfrom tile SEC docunmnts.
7 A system was iml)le-?This begs a definition of equally likely - which would be,dependent on the language model and implementation.7An import;ant i)rocess in the creation of a language modelfor 1wout problems i the identification ofusable language inthe COl'pll8.
~\]~o these nds, the SEC (loculne.nl, s were marke(lup by hand to identiI~, i)aragrai)h text.
These, text blocksmented which marked the potential points of mnbi-gully and tile continuation points and then at)pliedthe chlster and selection algorithln to determine thepresence of spatio-linguistically cohesive text blocks(see example output ill Figure 1).As yet, no formal ewfluation of the implementa-tion is available.
It can be asserted, however, thattile results obtained fl'om this preliminary implemen-tation indicate that the general method producessignificant results, and that the basic notion of com-bining spatial and linguistic infornmtion tbr the de-ternfination of cohesive lements in a conlplex doe-unlent is a powerful one.Another experiment investigated tlle utility of themettlods described in this paper.
We wanted to de-termine how often mnbiguities occurred and how inl-1)ortant correct resolution was.
Looking at; the am-biguity in table stub (:ells - tile mnlfiguity betweenmulti-row ceils and multiple ceils below a header -resulted ill some significant results.
For a sample of28 tables (1704 ceils); ill tile 131 stub cells we found68 examl)les of multi-row cells, and 35 of headersto multiple cells (note tlmt these are not disjointsets).
Using the SEC bigram model, the cases weredisanll)iguated l)y hand, resulting in a 74 % successrate,.
This sinlple investigation demonstrates thattim disalnbiguation is required and that linguisticinforination cm~ 1)e applied successflfily.4 Conclus ionsThis l)aper has outlined a set of problents 1)articu-lar to the encoding of complex docmneng eh',mentsin tlat or partially marked up files.
The at)l)lit:a-tion of ~ siml)h', language nlodel in conjunction witllalgorithms ensitive to the layout chal'acteristics ofthe docuulent elenlents ill terms of spatial ti;aturesis in'oposed as a general solution to these problems.The, method relies on the, persistence of the languageill which the document is written in tel'ms of theulodel used to recognize it.ill the flltul'e, we intend to al)ply this approach tothe implementation f a general layout analysis pre-processor.
An interesting Dature of the interactionbetween tile language model and the 1wout of thedocument ix that the 1)erformance ofa syst, enl ix (lillysensitive to the quality of the language model at tileI)oints at wtfich it interacts with tile layout of tiledocunlent.
Consequently, a gelmral imrl)ose modelbuilt fronl a corpus of marked Ill) docmnents maybe used to deternline a subset of the cohesive text-blocks ill a document.
Those blocks may then beused to derive more language data, possil)ly specificto the documellt, and then tim process repeated untilno nlore interactions are left ambiguous.were then used for the creation of a simple bigram model.337ReferencesT.
Kieninger and Andreas Dengel.
1998.
A paper-to-html table converting system.
In Proceedings of Doc-ument Analysis Systems (DAS) 98, Nagano, Japan,November.Jane Morris and Graeme Hirst.
1991.
Lexical cohesioncomputed by thesaural relations as an indicator of thestructure of text.
Computational Li.quistics.Hwee Tou Ng, Chung Yong Lira, and Jessica Li TengKoo.
1999.
Learning to recognize tables in fi'ee text.In Proceedings of the 37th Annual Meeting oJ' the Asso-ciation for Computational Linguistics, pages 443-450,Maryland, USA, June.Daniela R~us ai~d Kristen Summers.
1994.
Using whitespace for automated document structuring.
TechnicalReport TR94-1452, Cornell University, Del)artmeilt ofComputer Science, July.338I~eh~ic~l  per  sonne IEI~l l i~ ,  zener~l  andE\]J~ Ho~th~ ended.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
h\[ELI gOL\] \[Z<L\] CdEb\[55\] \[E~ EL\] ,k~f ' igure 1: Example port ion of ()utt)ut from prototype systemFor example a paracNrapli occur.
Applying ithis7of text is gram(ng-@i-dgI 'observettion to the\]wherever the line \[br6~aks} segmetltation of a doublecollm~n of text will indicaEe., - where the \].ine b~eaks 6ccur:.
'Foriexample, a paragraph occur.
Applying thisof t'ext is \[gramrfiatical:.
hlS~-r~ft:'~26i~ to thethe line breaks seglnentation of a doublecolumn of text will indicatewhere the line breaks occur.!s0mdtime?
sentences  may consp i re  to fo rm ifais~!posit ive s of r i vers  of wh i te  spaceiwl~ic~appear  itO separate  blocks!.Somet imes .sentences  may consp i re  to forra fa l seibbs i t iV6s \ ]~ r ivers  of wh i te  space  wh icha~_~___~ to separate  b locks .b~umber ~6f Date \[Of\[13og~j \ [ - (~ j  ~ I~_~ Name ~ Addresst,'ignre 2: goc~tin4g Pote.ntial Ambiguity tlnd Comput ing Contiint~,tion PointsIf a higr~un model is use.d, the probal)ility that word ~,J is followed by word w' marybe expressed as; a probability as p(w' I w) and assigned a value between 0 and 1.
Ifthe probabilities are those shown in to the right then the continuation for A wouldbe X and the contimtation point for B would be Y.p(XlA)=0.8 p(XlB)=0.5A Bp(YIA)=0.4 p(YIB)=0.3Figure 3: Sort ing cont inuat ion dei)end,; oil the potent ia l  ayout of tile document3391p~0000!0o..noZim@or~oo~o~ ~o~.~'~Ng~g~oz"00omoooe~0o~ oo~.~ o.oL~0 'c~4~o0o?
~.~ ,~u ??
.~ .~~o.~o4~00 0~oY.~ Ho ~) ,~oo ~ .~oo ~ ~~.~0~.~ ~.0r~,.~oo o4~oN,g~ i ~ ~u ~ u ui , l0?.
)bOb.Op.#mb.o340
