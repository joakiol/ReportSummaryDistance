Proceedings of the SIGDIAL 2013 Conference, pages 160?162,Metz, France, 22-24 August 2013. c?2013 Association for Computational LinguisticsWebWOZ: A Platform for Designing and Conducting Web-based Wizardof Oz ExperimentsStephan Schlo?glInstitut Mines-Te?le?comTe?le?com ParisTech, CNRS LTCIParis, Franceschlogl@enst.frSaturnino Luz, Gavin DohertyTrinity CollegeUniversity of DublinDublin, Ireland{firstname.lastname}@scss.tcd.ieAbstractThe Wizard of Oz (WOZ) method hasbeen used for a variety of purposes inearly-stage development of dialogue sys-tems and language technology applica-tions, from data collection, to experimen-tation, prototyping and evaluation.
How-ever, software to support WOZ experimen-tation is often developed ad hoc for spe-cific application scenarios.
In this demowe present WebWOZ, a web-based WOZprototyping platform that aims at support-ing a variety of experimental settings andcombinations of different language tech-nology components.
We argue that ageneric and distributed platform such asWebWOZ can increase the usefulness ofthe WOZ method.1 IntroductionThe use of language technologies such as Auto-matic Speech Recognition (ASR), Machine Trans-lation (MT) and Text-to-Speech Synthesis (TTS)has significantly increased in recent years.
Driversof adoption have been enhanced quality and in-creasingly ubiquitous access to products and ser-vices.
However, the technology is still far fromperfect and typically substantial engineering effortis needed before prototypes can deliver a user ex-perience robust enough to allow potential applica-tions to be evaluated with real users.
For graph-ical interfaces, well-known prototyping methodslike sketching and wire-framing support the de-signer in obtaining early impressions and initialuser feedback.
These low-fidelity prototypingtechniques do, however, not map well onto sys-tems based around speech and natural language.Wizard of Oz (WOZ) tries to fill this gap by usinga human ?wizard?
to mimic some of the function-ality of a system, which allows for evaluating po-tential user experiences and interaction strategieswithout the need for building a fully functionalproduct first (Gould et al 1983).2 The WebWOZ PlatformWebWOZ is an entirely web-based, open-sourceWizard of Oz prototyping platform1.
It allows fortesting interaction scenarios that employ one ormore Language Technology Components (LTC).The integration of these LTCs is done via web ser-vices.
Currently we have integrated ASR fromGoogle using HTML-based Speech Input2, on-the-fly MT from Microsoft3 and TTS providedby the Muse Speech Technology Research Plat-form4.
In addition we support pre-recorded audioand video files that are accessible through a webserver.
Table 1 shows the different componentscurrently integrated into WebWOZ.
Depending onthe application scenario those components can beturned on and off as well as be used in combina-tion (Schlo?gl et al 2010; Schlo?gl et al 2011).2.1 Software RequirementsWebWOZ is written in Java and therefore can behosted on a typical application server (e.g.
ApacheTomcat).
In addition a relational database (e.g.MySQL) is needed.
In order to run experimentswe further recommend the use of an up-to-dateweb browser that is able to adequately interpretrecent HTML5 commands.
For the moment, theChrome browser is probably the best choice, sinceit supports speech input without the need for in-stalling an additional plug-in.
However, we areconvinced that soon most web browsers will sup-port the majority of HTML5 features required byWebWOZ.1https://github.com/stephanschloegl/WebWOZ/2http://lists.w3.org/Archives/Public/public-xg-htmlspeech/2011Feb/att-0020/api-draft.html3http://msdn.microsoft.com/en-us/library/ff512419.aspx4http://muster.ucd.ie/content/muse-speech-technology-research-platform160Table 1: WebWOZ Component ListASR HTML Speech InputMT Microsoft TranslateTTS Muse Speech TechnologyPre-recorded Audio Files2.2 Supported ScenariosOne of the main features of WebWOZ is its in-tegrated CMS-like editing functionality.
Thispermits researchers/designers to create their ownWOZ experiments without requiring from themany programming skills.
They can add, edit, anddelete utterances and organize them in differenttabs (dialogue stages) using the wizard interface(cf.
demo video5).
Corresponding client (i.e.
non-wizard) user/password combinations can be addedand distinct interaction modes for the experimentcan be set (e.g.
ASR on/off, TTS on/off, MTon/off, etc.).
The client interface itself runs ina separate browser window, which allows for aneasy integration into already existing web applica-tions.Following this architecture WebWOZ supportsthe design of a variety of experimental settings.Different scenarios from classic monolingual text-to-text to multi-lingual speech-to-speech interac-tions are possible.
From a wizard?s perspective,tasks can reach from pure dialogue managementto augmenting LTC output.
That is, in WebWOZa wizard can act as the substitute for a working di-alogue manager, linking a test persons?
input withan appropriate response by choosing from a setof pre-defined answer possibilities.
Alternatively,however, one could be focusing on enhancing thequality of a single LTC by augmenting its output.Examples might include choosing from an n-bestlist of recognition results or the post-editing ofoutput produced by an MT service.3 Why a Web-based Solution?The WOZ technique is usually used for four mainpurposes related to the design and implementationof dialogue systems: (1) it is used for dialoguedata collection, (2) for controlled experimentation(including system evaluation), (3) for explorationof design alternatives and (4) for teaching of sys-tem design.
Given this context, why should onebuild a web-based WOZ platform?
What are the5http://youtu.be/VPqHfXHq4X0benefits of such a solution?
As it turns out, one canidentify benefits to each of the above mentionedmain uses of the WOZ method.In terms of data collection, the gathering of mul-timodal dialogue corpora is often a complex andtime consuming enterprise.
It requires standard-ization and uniformity with respect to data format,timing and encoding, as well as collection settingsand procedures.
WOZ techniques have been in-creasingly used for this purpose, particularly in thegathering of data for studying multimodal infor-mation presentation and interaction e.g.
(Rieser etal., 2011).
A Web-based platform such as Web-WOZ can facilitate data collection by geographi-cally distributed groups while guaranteeing adher-ence to the requisite standards.As regards experiments, a crucial requirementfrom the perspective of scientific methodology isreproducibility.
Different research groups need tobe able to replicate experiments according to pre-cisely prescribed procedures and settings.
Wiz-ard of OZ experiments, however, are usually con-ducted using purpose built, ad hoc tools and soft-ware.
This makes replication difficult, if not im-possible.
WebWOZ provides a widely available,standardized environment in which experimentalprotocols can be precisely specified and sharedwith interested research groups, thus supportingreproducibility.
These features are similarly im-portant for extrinsic system components evalua-tion e.g.
(Schneider and Luz, 2011) where theoverall system functionality should be kept con-stant while a specific component to be tested (say,an MT module) is varied.WOZ techniques are also employed for explo-ration (through prototyping) of design ideas andalternatives, particularly at the early design stagesof interactive systems that involve diverse lan-guage technology components.
In this case, repro-ducibility and controlled conditions are less im-portant.
However, as distributed system develop-ment becomes a common practice WebWOZ canbe used in such scenarios as a shared design arti-fact to support the activities of geographically dis-tributed design teams as well as the communica-tion among them.Finally, WebWOZ can be (and has been) used insupport of teaching the development of dialoguesystems.
While students are usually introduced toWOZ (i.e.
written on a lecture slide) only a smallportion of them receives actual hands-on experi-161ence.
One reason for this lack of practical usagemight be that in order to be applicable in a teachingcontext, any approach would have to have a lowlogistical and technical overhead to enable stu-dents to quickly design and carry out evaluations.Our experience with WebWOZ has shown that theweb-based approach significantly lowers this bar-rier.
To date more than 50 students were able to de-sign experiments and hence improve their under-standing of the complexity of dialogue systems.4 Uses of WebWOZ in ResearchWebWOZ has already been employed in two dif-ferent research studies.
The first study exploredthe effects of MT when it is used in combinationwith TTS (Schneider et al 2010).
The secondstudy aimed at building and evaluating a corpus offeedback utterances sent to language learners whotry to improve their pronunciation (Cabral et al2012).The experimental set-up of these two stud-ies differed greatly, highlighting the flexibility ofWebWOZ.
The first study tested the scenario ofan intelligent computer system recommending ap-propriate Internet connection bundles to Germanspeaking customers.
To support this scenario aset of pre-defined dialogue utterances as well asthe relevant domain utterances (i.e.
examples ofInternet connection bundles) were collected, auto-matically translated and then added to WebWOZ.On-the-fly translation was not used as the experi-menters wanted to control for any possible incon-sistencies.
The TTS part of the experiment didnot utilize a synthesis directly, but rather used thepossibility of WebWOZ handling pre-synthesizedaudio files.
ASR was simulated by the wizard.Voice-over-IP was used to transmit the partici-pant?s voice to the wizard, who then selected anappropriate response.The second study was less restrictive.
Here theresearcher?s goal was to built up and evaluate acorpus of feedback utterances, for which the wiz-ard could be more open in terms of responses.Similarly to the first study a set of pre-definedresponses was added to WebWOZ.
However, incases were those utterances were not sufficient, thewizard could use a free-text field to reply.
AgainVoice-over-IP was used to transfer speech inputfrom a test user to the wizard and TTS was turnedoff, as the experiment design used textual feed-back only.5 Conclusion and Future WorkWe presented WebWOZ a Wizard of Oz proto-typing platform that is developed in our researchgroup.
WebWOZ differs from existing WOZ toolsby being entirely web-based and through its goalof supporting various types of application scenar-ios.
The different features of WebWOZ were high-lighted and it was described how two independentstudies already made use of them.
Future workaims to optimize WebWOZ, to generalise it to fur-ther experimental settings and to extend it by inte-grating additional modalities.
To do so the systemhas been installed in our partner institutions whereit has currently been adapted to support additionalsettings in at least two other research projects.
Al-though we are aware of the fact that the greatdifference between the interests of individual re-searchers pose challenges to the design of a trulygeneric WOZ tool, we believe that our platformcan be a helpful starting point for a variety of re-searchers and designers who may wish to use theWOZ method.ReferencesJ.
P. Cabral, M. Kane, Z. Ahmed, M. Abou-Zleikha,E?.
Sze?kely, A. Zahra, K. U. Ogbureke, P. Cahill,J.
Carson-Berndsen, and S. Schlo?gl.
2012.
RapidlyTesting the Interaction Model of a PronunciationTraining System via Wizard-of-Oz.
In Proceedingsof LREC.J.
D. Gould, J. Conti, and T. Hovanyecz.
1983.
Com-posing letters with a simulated listening typewriter.Communications of the ACM, 26:295?308.V.
Rieser, S. Keizer, X. Liu, and O.
Lemon.
2011.Adaptive Information Presentation for Spoken Dia-logue Systems: Evaluation with human subjects.
InProceedings of ENLG, pages 102?109.S.
Schlo?gl, G. Doherty, N. Karamanis, A. H. Schneider,and S. Luz.
2010.
Observing the wizard: In searchof a generic interface for wizard of oz studies.
InProceedings of Irish HCI, pages 43?50.S.
Schlo?gl, A. H. Schneider, S. Luz, and G. Doherty.2011.
Supporting the wizard: Interface improve-ments in wizard of oz studies.
In Proceedings ofBCS HCI.A.
H. Schneider and S. Luz.
2011.
Speaker alignmentin synthesised, machine translated communication.In Proceedings of IWSLT, pages 254?260.A.
H. Schneider, I.
Van der Sluis, and S. Luz.
2010.Comparing intrinsic and extrinsic evaluation of mtoutput in a dialogue system.
In Proceedings of theIWSLT, pages 329?336.162
