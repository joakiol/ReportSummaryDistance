An Architecture For Distributed Natural Language SummarizationDragomir  R .
RadevDepartment  of Computer  Science, Co lumbia  University1214 Amsterdam Avenue, New York, NY 10027-7003radev?cs, columbia, eduAbst ractWe present a system that incorporates agent-based technology and natural language genera-tion to address the problem of natural anguagesummarization of live sources of data.
The in-put to the system includes newswire and on-finedatabases and ontologies.
The output consistsof short summaries that convey information se-lected to fit the user's interests, the most recentnews updates, and historical information.
Thesystem is under development.1 In t roduct ionOne of the major problems with the Internet isthe abundance of information and the difficultyfor the average computer user to read every-thing existing on a specific topic.
There existnow more than 100 sources of five newswire inoperation on the Internet.
The user has to gothrough megabytes of news every clay to selectarticles of interest and read the relevant partsof them.
Hence, he needs SEARCH AND SELEC-TION services, as well as for SUMMARIZATIONfacilities.There currently exist more than 10 operati-onal SEARCH AND SELECTION services on theWeb, e.g., DEC's AltaVista \[AltaVista 1996\].However, there is little available in the area ofSUMMARIZAT ION.The best currently existing Web-basedsummarization system, Netsumm \[Preston andWilliams 1994\], uses a statistical, approach toselecting relevant sentences from an article.
Ithas an impressive user interface, anti is practi-cally domain-independent, but suffers from twomajor problems: it only summarizes a single ar-ticle at a time, and it only summarizes articlesgiven by the user, which means that the userhas to go through hundreds of articles to selectthe ones he will send to Netsumm.Other statistical systems \[Kupiec et al 1995\],\[Rau et al 1994\] have the same characteristicsas Netsumm.
Another major unsolved probleminvolves conveying rapidly changing informationto the end user in a sensible format.
This infor-45mation can come from a multitude of differentsources which use different internal representa-tions to store it.
A summarizing program needsto be able to retrieve all this information in realtime, process it and produce meaningful sum-maries in natural language.More specificMly, the innovations that wesuggest address some of these problems.Asynchronous  summar izat ion :  Syn-chronous (demand-based) summarization re-quires that the user needs to know when a newarticle relevant o his interests has appeared andfeed it to the summarizer in order to get a sum-mary back.
Such an approach doesn't lead toany economy of time for the user, since he stillhas to spend time checking whether new arti-cles have been posted and then send them tothe summarizer.It wouhl be more efficient for the user to benotified automatically when a new article hasbeen published \[Radev 1994\] or to be sent asummary of the article directly.
Such asyn-chronous ummaries can be based on the specificinterests of the user, contained in his user pro-file.
They can also be tailored to the user's priorknowledge of the subject or event.
E.g., the userwill receive an initial announcement about anevent and only updates after that point.Summar iz ing  mul t ip le  art ic les:  All exist-ing statistical summarizers provide summariesof single articles by extracting sentences fromthem.
If such systems were to summarize a se-ries of articles, they would simply process eachof them on its own and output the resultingsummaries.
Such summaries will likely containa significant amount of repeated information, asdo the source articles themselves.Our summarizer works on a set of articles.It can trace the development of an event overtime or contradictions in articles from differentsources on the same topic.Summar iz ing  mul t ip le  sources:  Whendifferent sources present exactly the same in-formation, the user clearly needs only have ac-cess to one of them.
Practically, this assump-tion doesn't hold, as different sources provideupdates from a different perspective and at dif-ferent times.
An intelligent summarizer's task,therefore, would be to attain as much informa-tion from the multiple sources as possible, com-bine it, and present it in a concise form to theuser.
For example, if two sources of informationreport a different number of casuMties in a par-ticular incident, the summarizer will report thecontradiction.Symbol i c  summar izat ion :  An inherentproblem to sentence-extraction based summa-rizers is the lack of fluency in the output.
Theextracted sentences fit together only in the casethey are adjacent in the source document: It isalso clear that these sentences weren't meant toserve as summaries.
A system that provides adeeper understanding of the message (or set ofmessages) will have all necessary information toget a fluent surface summary.In teroperab i l i ty :  Since a large-sc~lesummarization system should monitor multiplesources of news and other data, it has to usea knowledge transmission language in order tocoordinate the multiple autonomous sources.In the following section, we will describe ourearly summarization prototype, SUMMONS\[McKeown and Radev 1995\].
In the next sec-tions, we will describe our architecture for real-time summarization, as well as our approach tothe issues set forth in the current section.2 SUMMONSOur choice of domain was dictated by the ex-istence of two Message Understanding Confer-ences (MUC) organized by DARPA \[Sundheim1992\] in the domain of terrorism in Latin Amer-ica.
The participants were asked to fill tem-plates (as shown in Figure 1) with informationextracted from news articles.
We parsed thetemplates (Figure 2), adding information aboutthe primary and secondary sources of news 1.SUMMONS (SUMMarizing Online NewS ar-ticles) is based on an architecture used inPLANDoc \[McKeown et al 1994\], developedjointly by Bellcore and Columbia University.It consists of a content planner which decideswhat information is to be included in the sum-mary, and a surface generator, based on theFUF/SURGE tools developed by Michael E1-hadad \[Elhadad 1993\].
We have used SUM-MONS on templates from two MUC conferences(covering events in 1988 and 1989) and on man-ually generated templates from recent events(e.g., the 1993 World Trade Center bombing).SUMMONS (Figure 3) uses summarizationoperators to express various ways in which thetemplates that are to be generated are related1The primary source, e.g., an eyewitness, and the sec-ondary source, e.g., a news agency, are very importantfor producing accurate summariesto each other.
We have implemented operatorsfor Superset, Addition, Contradiction, Refine-ment, Change of Perspective, etc.
The follow-ing paragraph was generated by the Change ofPerspective operator on a set of two messages.The ~.fternoon of Febru~.ry 26, 1993, Reuters re-ported that a suspected bomb killed at le&st five people inthe World Trade Center.
Later the same day, Reuters an-nounced that exact ly  five people were kil led in the blast.MESSAGE:  IDINC IDENT:  DATEINC IDENT:  LOCATIONINC IDENT:  TYPEINC IDENT:  STAGE OF EXECUTIONINC IDENT:  INSTRUMENT TYPEPERP:  INC IDENT CATEGORYPERP:  INDIV IDUAL  IDPERP:  ORGANIZAT ION IDPERP:  ORG.
CONFIDENCEHUM TGT:  TYPEHUM TGT:  NUMBERHUM TGT:  EFFECT OF INC IDENTTST3-MUC4-001001 NOV 89EL SALVADORATTACKACCOMPLISHEDTERRORIST ACT"TERRORIST""THE FMLN"REPORTED:  "THE FMLN"CIVILIAN: "1 CIVILIAN"1 : "1  CIVILIAN"DEATH: "1 CIVILIAN"Figure 1: Excerpts from a MUC-4 Template.
(\[nessage(system (id "TST3-MUC4-0010") )(source (secondary "NCCOSC") )( incident (date "01 NOV 89")(location "El Salvador")( type attack)(at~ge ~ccozttplished))(perpetrator  (category terr-act)(org-id "THE FMLN")(org-conI rep-fact))(v ict im (description civil ian)(number 1) )Figure 2: Parsed MUC-4 Template...... oNTiooY,Ill .
.
.
.
.
.
.
.
.  '
I-- I Ad~, ,L**  "'::::'" I: ~:::,,::J. .
.
.
.
.
.
.
i .
.
.
.
.
.
.
.
.
.
.
: .
.
.
.c.
2 .- ....... : .
.
.
.
.
.~ ' ~  $4.~lMAiqyFigure 3: SUMMONS System Architecture.3 Summar izat ion  arch i tec tureThe interoperability problem is addressedusing a proposed standard for exchangeof information and knowledgeKQML \[Finin et al 1994\].
KQML aims at46 -the standardization of both a protocol and amessage format for communication among in-dependent processes over a wide-area network.KQML is used to create facilitators which pro-vide the interface between heterogeneous ap-plications which run on various machines andwhich are written in various programming lan-guages.
Such facilitators communicate throughKQML performatives and exchange messageswritten in some content language.
In our case,this is a simple template language, developedlocally.Our architecture draws from work on Soft-ware Agents \[Genesereth and Ketchpel 1994\].Our goal was to expand the model to incorpo-rate natural language interfaces.
We have usedagents of various types in a modular way:(country (name "El Salvador")(capital "San Salvador")(map (url"http://www.odci.gov/ci~/public~tions/95fact/es.gif"))(divisions (name "department")(list ("Ahuachapan";;13sulu t an" )))(executive (president(name "Armando CALDgRON SOL")(elected "010694" ))))Figure 4: Parsed World Book entry.the modules through the intermediary of facili-tators that convert from the template format toKQML and vice-versa.
In our system, the roleof data collectors is performed by the MUC sys-tems and the facilitators connected to the WorldBook.P lanner :  it maintains contacts with the fa-cilitators in order to keep the knowledge base ofthe summarizer up to date.
It uses KQML sub-scription messages to learn in an asynchronousway about changes in the knowledge bases ofother facilitators.The following example shows how the planneruses a KQML subscription message to subscribeto new messages related to E1 Salvador.
(subscribe:content (gq(rr|e~sage(incident(location "El Salvador")))):ontology geog-onto:l~ngu ~.ge KQML:reply- wit It "loc-salvAdor- 1":sender "planner":receiver "muc l "Whenever a new message becomes available(E.g., Figure 2), the MUC facilitator will replywith an appropriate message.Summar izer (s ) :  agents that are concernedwith summarizing the data that they have col-lected over the network from different sourcesand producing natural-language r ports for theend-user.
The summarizer is connected with theuser model and the user interface.Database  servers :  expert agents that haveaccess to knowledge bases which are updatedperiodically and which contain information thatis less likely to change over the course of asummarization session (e.g.
heads of state, ge-ographical and common-sense knowledge).
Inour case, such information comes from twosources: the CIA World Book \[CIA 1995\] andthe ontologies upplied with the MUC confer-ences.
An example from the World Book relatedto E1 Salvador is shown in Figure 4.
The WorldBook facilitator parses the entries for each coun-try into a Lisp-like format and provides accessto them to the planner.
Another instance ofa database server is the facilitator connected tothe node labeled Ontology in Figure 3.
This rep-resents the database containing the ontologies(including geographical locations, weapons, andincident types, available from the MUC confer-ence).Data  col lectors:  agents that are connectedto the real world through filters or use humanexperts who can feed real-time raw data such assports scores, news updates, changes in stockprices, etc.
They are connected to the rest of47(reply:content(message(system(id "TST3-MUC4-0010"))):ontology geog-onto:language KQML:in-reply-to "loc-salvador-l":sender "muc l ":receiver "plaltner")Other KQML performatives, uch as ask-all,ask-one, register, tell, or sorry have also beenimplemented.User  Mode l :  it keeps information about theuser's interests (e.g.
keywords, regions in theworkl), preferences (how frequently he wantsto get updates), and interaction history (whatinformation has already been shown to him).Let's consider the case in which the user hasalready been notified abo,lt a terrorist act:A bombing took place on August  23rd, 1988in the district of Ta lcahuano,  Chile.The next time the system needs to refer to thesame event, it can omit some information thatit has already shown to the user (e.g., the factthat Talcahuano is in Chile), and can insteadfocus on information that has not been includedpreviously.The Talcahuano bombing didn' t  result in anyinjuries.
However, the Chapel of the Church ofJesus was damaged.4 Current Work and Direc-t ions for Future ResearchCurrently, our system can handle simple sum-maries consisting of 1-3 sentence paragraphwhich are limited to the MUC domain and to afew additional events for which we have manu-ally created MUC-like templates.
Several com-ponents related to interoperability are also fullyimplemented (e.g., the subscription package inKQML and the query-response interface to theMUC and World Book facilitators).
We haven'tyet connected the system to a working MUCcomponent 2.
The user model hasn't been im-plemented yet.A problem that we haven't addressed is re-lated to the clustering of articles according totheir relevance to a specific event.
Another is-sue is domain-independence.Since the understanding and generation mod-ules share only language-independent tem-plates, we would try to implement a limitedform of machine translation by summarizing inone language news written in another language.5 ConclusionsWe have described an agent-based system whichallows for summarization of multiple articlesfrom multiple sources in an asynchronous fash-ion while taking into account user preferences.We have also shown how such an architecturecan be modular and extensible and how its dif-ferent components interact.Acknowledgments :I would like to thank my adviser, Prof. Kath-leen McKeown, and also James Shaw and KarenKukich for the interaction on PLANDoc, andEvelyne Tzoukermann for help with reviewinga version of this paper.Tim Finin, Rich Fritzson, Don McKay, andRobin McEntire.
KQML A Languageand Protocol for Knowledge and Informa-tion Exchange.
Technical Report CS-94-02,Computer Science Department, University ofMaryland and Valley Forge Engineering Cen-ter, Unisys Corporation, 1994.Michael Genesereth and Steven Ketchpel.
Soft-ware Agents.
Communications of the ACM,37(7):48-53, July 1994.Julian M. Kupiec, Jan Pedersen, and FrancineChen.
A Trainable Document Summarizer.In Proceedings, 18th Annual InternationalACM SIGIR Conference on Research andDevelopment in Information Retrieval, pages68-73, Seattle, Washington, July 1995.Kathleen R. McKeown and Dragomir R. Radev.Generating Summaries of Multiple News Ar-ticles.
In Proceedings, 18th Annual Interna-tional A CM SIGIR Conference on Researchand Development in Information Retrieval,pages 74-82, Seattle, Washington, July 1995.Kathleen R. McKeown, Karen Kukich, andJames Shaw.
Practical Issues in AutomaticDocumentation Generation.
In Proceedingsof the ACL Applied Natural Language Con-ference, Stuttgart, Germany, October 1994.Keith Preston and Sandra Williams.
Managingthe Information Overload.
Physics in Busi-ness, June 1994.ReferencesAltavista.
WWW site, URL: http: / /  al-tavista.digital.com, 1996.CIA.
The CIA World Factbook.
URL: http: / /www.odci.gov/cia/publications/95fact, 1995.Michael Elhadad.
Using argumentation to con-trol lexical choice: a unification-based imple-mentation.
PhD thesis, Computer ScienceDepartment, Columbia University, 1993.2We are in the process of acquiring working MUCsystems from NYU and BBN.Dragomir R. Radev.
Rendezvous: A WWWSynchronization System.
Poster Session,Second International WWW Conference,Chicago, Illinois, October 1994.L.F.
Rau, R. Brandow, and K. Mitze.
Domain-Independent Summarization of News.
InSummarizing Text for Intelligent Commu-nication, pages 71-75, Dagstuhl, Germany,1994.Beth M. Sundheim.
Overview of the fourthmessage understanding evaluation and con-ference.
In Proceedin:ts of the Fourth MessageUnderstanding Conference (MUC-4), pages3-21, McLean, Virginia, June 1992.48
