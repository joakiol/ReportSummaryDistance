DATA TYPES IN COMPUTATIONAL PHONOLOGYEwan KleinUniversity of Edinburgh, Centre for Cognitive Science2 Buccleuch Place, l~;dinl)urgh El l8 91,W, ScotlandEntail: k lo  in@od, ac .
ukABSTRACTThis paper exanfines certain aspects of phono-logical structure from the viewpoint of ahstractdata types, Our imnlediate goal is to find a for-mat for l)honological representation which willbe reasonably f,'fithful to the concerns of theoreti:cal phonology while I)eing rigorous enough to a(I-rail a computat ional  interl)retation.
The longerterm goal is to incorporate such representationsi n to  all appropriate general framework for llatn-ral language processing, i1 In t roduct ionOne of the dominant paradignls ill cnrrell| coln-putat.ional l inguistics is l)rovided by unification-based grammar formalisms.
Such formalisms (of.IShieber 1986; Kasper t~ Rounds 1986)) describehierarchic~d feature st l ' t le t l l res ,  wh ich  iH ina l lyways would appear to be an ideal sel l ing \[brformal phonological analyses.
1,'eature bundleshave long been used l)y phonologists, and morerecent work on so-called feature geonletry (e.~.
(Clements 1985; Sagey 19,~6)) has introduced hi-erarchy into such represenlations.
Nevertheless.there are reasons to step back from standardfeature-based apl~roaches, and instead to adoplthe algebraic perspective of abstracl data types(AD'P) which has been widely adopted iu com-l)uter science.
One general motivation, whichwe shall not e.xplore here.
is thai Ihe acl iv i lyof grantlnar writing, viewed as a process of pro-gramme specification, should be amenable Io sl~p-wise refinement in which the set of {sol neces-sarily isomorphic) n,odels admitted by a looseIThe work reported in this paper has \[)?
:~,1, ~;tlried ollt its part of the research i)rf)glitli/lll(!S o{ l\]l('\].
{llnl&l\[ (~oFiin/llllic&\[iOll |lesea.rch (}(:Illl'C.
sl/ppOl'led })3the OK Economic and Social Rescalch (:ouncil aml theproject Computational l)houoh)gy: .,I ('onst~aint-fh~s?dApproach, funded by the IlV.
~qcience and Engineering I(t.search Council, under grant (;R/(;-22081.
1 am glalt'fulto Steven Bird.
Kimba Newton and 'l'm/v Simou \[m di>cussions relating to this work.AcrEs DE COLING-92, NAtc~S, 23-28 Ao~rr 1992specil ication is gradually narrowed down to au,fiqtm 'algebra (cf.
(Sannella & Tarleeki 1987)for an overview, and (Newton in prep.)
for theapldication to grammar writing).
A second mo-t ivation, discussed in detail  by (Beierle & Pletat1988; Beierle K~ Pletat  1989; Beierle et al 1988),is to use equational ADTS to provide a mathemat-ical foundation for h~ature structures.
A thirdmotivation, dominant in this pal)er , is to use theAI)T appl'oach lo provide a richer array of ex-plicit data types than are readily admitted by"p'tlre' feature structure approaches.
Briefly, intheir raw form, \[eature terms (i.e., fnrnlalislns fordescribing h~alure stru(:tures) do not always pro-vide a perspicuous format for representing strllc-t II re.On the ADT approach, complex data types arebuilt up from atomic types by means of con-s t ruc tor  funct ions .
For example .
.
.
.
(wherewe use the underscore '_' to mark the positionof the fimction's arguments) creates elements oftype L i s t .
A dala type may also have se lec -tor  funct ions  for taking data elements apart.Thus, selectors for lhe type L?st are the functions f i r s t  and las t .
Standard feature-bossedencoding of lisls uses only selectors for the datatype; i.e.
the feature labels FIRST and LAST ill( 1 ) FIRST : o" 1 17 LAST : (FIRST : o" 2 17 LAST : nil)tlowever, the list constructor is left implicit, Thatis, the feature term encoding tells you how listsare pulled apart, but does not say how they arebuilt up.
When we confine our at lention just tolists, lhis is not much to worry about, ltowever,tile situation becomes less satisfactory when weatIelnpI' to encode a larger variety of data struc-tures into one and the same feature term; say,for example, standard lis(s, associatiw~ lists (i.e.strings), constituent structure hierarchy, and autosegmental ssociation.
In order to distinguishaxtequately between elements of such data types,we really need to know the logical properties oftheir respective constructors, and this is aw l1 4 9 PRec.
oF COLING-92.
NANTES.
AUG. 23-28.
1992ward when the constructors are not made ex-plicit.
For computat ional  phonoloKv, it is not anunlikely scenario to be confronted with such a va-riety of data  structures, since one may well wishto study the complex interaction between, say,non-l inear teml)oral relations and prosodic hier-archy.
As a vehicle for computat ional  implemen-tation, the uniformity of standard at t r ibute/va luenotation is extremely usefld.
As a vehicle for the-ory development, it can be extraordinari ly uu-perspicuous.The approach which we present here treats phono-logical concepts as abstract  data  types.
A par-t icularly convenient development environlnent isprovided by the language OBJ (Goguen & Win-kler 1988), which is based on order sorted equa,tionaJ logic, and all the examples given below(except where explMtly iudicated to the contrary) run in the version of OBJ3 released by sltIin 1988.
The denotal ional semantics of a.n OB.\]module is an algehra, while its operational se-mantics is based on order sorted rewritiug.
I1 1.1and 1.2 give a more detai led introduction intothe formal framework, while ?
2 and 3 i lhlstratethe approach with some phonological examples.1.1 Abst rac t  Data  TypesA data type consists of one or more domains ofdata items, of which certaiu elements are des-ignated as basic, together with a set of operatious on the domains which suffice to generate al\]data  items in the domains fl'om the I)asic items.A data type is abst rac t  if it is independenl ofany  part icular ret)resentational scheme.
A fun-damental  claim of the ADJ group (cf.
(Goguen.Thatcher ,~ Wagner 1976)) and llluch subsequentwork (cf.
(Ehrig & MMn" 1985)) is that  abstracldata types are (to be modelled as) algebras: andmoreover, that  the models of abstract  data typesare ilfitial alget)ras.
~The s ignature  ofa mauy-sorted algebra is a l)air= <S,O } consistiug of a set S of sorts and a se~O of constant and operation symbols.
A speci -f i ca t ion  is a pair ( rE> consisting of a signal aretogether with a set g of equations over termsconstructed from symbols in O and variables ofthe sorts in S. A mode l  for a speciIica.tion is~An initial algebra is characlerized uniquely up to |somorphism as the semantics of a specification: there is aunique homomorphisnl from the initial algebra inlo t'velyalgebra of the specification.an algebra over the signature which satisfies allthe equations ?.
Init ial algebras play a specialrole as the semantics of an algebra.
An initialalgebra is minimal, in the sense expressed by theprinciples "no junk'  and 'no confusion'.
'No junk'means that the algebra only contains data whichare denoted by variable-fl'ee t rms built up fromol)eration symbols in the signature.
'No confu-sion' means that two such terms t and t ~ denotethe same object in the algebra only if the equa-tion t = F is derivable from the equations of thespecification.Specifications are written in a convent|ohM for-mat consisting of a declaration of sor ts ,  opera-tion symbols (op), and equations (oq).
Precedingthe equations we list all the variables (var )  whichfigure in them.
As an i l lustration, we give belowan OBJ sl)ecification of the data type LIST1.
(2) obj LIST1 is  sor ts  El l  L is top n i l  : -> L i s t  .op .~  : E l i  L i s t  -> L i s t  .op head  : L i s t  -> E l i  .op ta i l  : L i s t  -> L i s t  .var  X : E l i  .va t  L : L i s t  .eq  (X .
n i l )  = X .eq  head(X  , L) = X .eq ta i l (X  .
L) = L .endoThe sort list betweeu the : and the ->  in anoperation declaration is called the ar i ty  of theoperation, while the sort after the -> is its va luesor t .
Together.
tiw al'ity and value sort consti-lute the rank  of an operation.
The declarationop n i l  : -> E l t  means that n i l  is aconstantof sorl Ell,The specit ication(2) fails to guarantee that thereare any objects of El/:.
While we could of courseadd soule constants of this sort, we would liketo have a more general solution.
In a part icularapplication, we might want to define phonologi-cal words as a L is t  of syllables (plus other con-straints, of course), and phonological phrases asa L i s t  of words, rl'hat is, we need to parame-te r l ze  the type LIST1 with respect to the classof elements which constitute the lists.Before turning to parameterizat ion, we will firstsee how a many-sorted specification language isgeneralized to an order sorted language by intro-ducing a subsort relation.Sul)l)ose, for exanlple, that we adopt the claimAeries DE COLING-92, NANTES, 23-28 ^ offr 1992 1 5 0 PROC.
OF COLING-92, NAN'rEs, AUo.
23-28, 1992that  all syllables have ( ' l onsets  :(.
Moreover.
wewish to divide syllables into the subclasses lmavyand l ight.
Obvimusly we wan!
heavy and lightsyllables to inherit  the l)roperties of the clas> ofall syllables, e.g., they haw' ( '1  onsets.
We useltoavy < Sy l l  to sta le that Heavy is a subsorl  oftile sort Sy l l .
We inlerl)l'et this to mean thai lheclass of heavy syllables is a subse!
of the class (ifall syl lables.
Now, let onset_  : Sy l l  ->  Noralie all operat ion which selects tlle tits!
mora ofa syllable, anti let us impose the Iollowing con-stra int  (where Cv is a sul)sor!
of Nora) :(3 )  var  S : Sy l l  .
var  CV : Cv .eq onset  S = CV ,Then tile f ramework of or(ler sorted algebra ell-sures that  onset  is also delined for obje('l > of s{)i'tHeavy .llx~turlling to lists, the speciI ication ill (,I) (sli~hll.vsimplified from that  used h> (( ;oguen ,k: Winkhq|988) )  introduces E l i  alld NeL is t  (not l  OlUl)t 3lists) as subsorts  of List .
and thereby !rein'oreson L IST I  in a number  of resi)ects, h, addit ion.tile specif ication is parameter !zea l .
Thai  is.
ilcharacter izes a list of Xs, where the para lneler  Xcan  be ins tant iated tm any  module which satisliestile condit ion TRIV; the la l ler  is what ((;oy;uell& Wink ler  1988} call a "requirenlenl theory' ,  andin lhis case simply iml)oses on any inpul moduh,that it have a sot!
which can be mal)p('(I to Ihesort Eli.
(4) obj L IST \ [X  :: TR IV \ ]  is sor ts  L i s t  NeL is t  ,subsor ts  E l t<  NeL is t  < L i s t  ,op ni l  : -> L ist  .op .
_  : L ist  L ist  -> List .op .
: NeL is t  L i s t  -> NeL is t  .op  head  : NeL is t  -> Ef t  ,op  ta i l  : NeL is t  -> L l s t  .va t  X ; E l t  .vat  L : L i s t  .eq (X , n i l )  : X .eq  head(X  .
L)  = X ,eq  ta i l (X  .
L) = L .endoNotice that  the list constr l lctor _._ llOW i)el'forlllsthe addit ional  fluter!on ol append, allowing Iwolists tm lie concatenated,  h, addit ion.
!he selectors llave beell made 'safe', ill lhe Sellse thaithey only apply  to objects (i.e.. nonemply  lisls)for  which they giwr sensible results: for whal .
illL ISTI ,  would have been the meaning of head(n i l  )?allere, the term mNSET ief(!lS to lh(' inilal mma o\[ asyllM)le in llyman's (198,t) velsion of tit(' iil(nai( th(!ol 32 Met r i ca l  T rees:\s a further i l lustrat ion, we give below a speci-lit'at ion of the data  lyp(!
BINTREE.
This modulehas two parameters ,  bolh of whose requirelnenttheories are TRIV.
4(5) ob 3 B INTREE\ [NONTERM TERM :: TR IV \ ]  issor ts  T ree  Net ree  .subsor ts  E l i .
TERM Net ree  < Tree  .op  _ \ [ _ .
_ \ ]  : E I t .NONTERM Tree  Tree  -> Net ree  .op  _\[_\]  : E I t .NONTERN E f t .TERM -> Tree  .op  labe l _  : T ree  -> EIt .
Nf lNTERM .op le f t _  : Net ree  -> Tree  ,op r ight_  : Net ree  -> Tree  .vars  El  E2 : T ree  ,vars  h :E I t .
NONTERM .eq labe l  (h \[ El , E2 \] ) = A ,eq labe l  (h \[ El \]) = A .eq le f t  (h \[ E1 , E2 \ ] )  : E1 .eq r ight  (h \[ E1 , E2 \] ) = E2 .
(~itdo\Ve can l~mx~ inslanl, iale 1he formal paranmters  ofth0 module in (5) with inpm module.s whiEh sup-ply al) ln'opriale sels of ilOlll, erlnina\] and terminalsymbols, l,el us use ui)percase quoted identif iers(eMnenls  of the OB.I inodule QID) for nontermi-nals.
and lower case for terminals.
The specitlca-lion in (5) allows us to treat  terminMs as trees,st; Ihal a binary tree.
rooted ill a node 'A, canhave lerminals as its daughters ,  ltowever, weills() allow terminals to be directly dominated bya n (m-branch ingmolher  node.
\[Ioth possibilitiesoccur in the examples below.
(6) i l lustrates theinstant iat ion of tornlal parameters  by an actualmodule,  namely QID.
using the make construct .16} make BINTREE-QID i s  B INTREE\ [QID,QID\ ]  endmThe nexl exalnph, shows Nellie reduct ions in thismodule,  obt, aiued by t reat ing the equat ions asrewrite rules apply ing fi'om left to r ight.~'l'hc n~tatir,a Elt .NONTERN.
EIt.
TEPd4 utilizes a qual-!lit:at!on M t he sort Eli by the input module's paranleterlabch this is simply to allow disamlfigulttion.ACRES DE COLING-92, NAMES, 23-28 AO~' 1992 1 5 1 Paoc.
OF COLING-92,  NANTES, AUG. 23-28, 1992(7) l e f t  ( 'h \ [ 'a , 'b \ ] )  .l e f t  ( 'A \ [ 'B \ [ 'a \ ] , 'C \ [ 'b \ ] \ ] )  .
"~ 'B \ [ 'a \ ]l e f t  ( 'A \ [ 'B \ [ 'a , 'b \ ] , ' c \ ] )  .~*  'B \ [ 'a ,  'b\]r ight ( le f t  (~A\ [ ( 'B \ [ 'a , 'b \ ] ) , ' c \ ] ) )  .l abe l  ( 'A \ [ 'a , 'b \ ] )  ..x~ JAlabe l ( r ight  ( 'A \ [ 'a , *B \ [ 'b , ' c \ ] \ ] ) )  .~4 JBSuppose we now wish to modify the definition ofb inary  trees to obtalu metr ical  trees, These areb inary trees whose branches are ortlered accord-ing to whether  they are labelled 's" (strong) or'w '  (weak).?
vIn addit ion,  all trees have a tlistinguishetl leafnode called the 'des ignated terminal  element ' (d te) ,which is connected to the roe!
of the tree I)y apath of 's '  nodes.Let us define 's '  and "w' to t>e our nonterminals:(8) obj MET i ssorts Labelops s w : -> Labe l  .endoIn order to buihl tilt, data  iype of metrical lr?,e~on top of b inary trees, we can impor t  Ill(, mod-uh, BINTREE, sui tably instant ia le l l ,  using OB.l 'sextend ingconst ruc l .
Notice thai  we use MET toin~tantiate the parameter  which fixes BINTFLEE's~et Of nontermina l  symbols.
~191 obj HETTREE is extend ingBINTREE\ [MET,Q ID\ ] * (sor t  Id  to  Lea f )op  d ie  : T ree  ->  Leaf  .va t  L : Lea f  .vats T1 T2 : Tree .
'~'\['he * construcl tells ,s thai the i)ri,cipal ~.Ol~ of OlD.llalnely Id, is mappe({ (1)), a sig,tai,.e .
;o*pl, isnl) to l llcsort Leaf in METTREE.
ceq signals the presen(c o\[a (-otl-difionaI cquation.
== is a buill-in I)olymou)hic cqualil>operation in OBJ.Acres DECOLING-92.
NAm ,'~% 23-28 Aor~r 1992vars X : Label  .eq d te(  X \[ L \] ) = L .ceq die ( X \[ T1 , T2 \]) = die T1if label  TI == s .ceq die ( X \[ T1 , T2 \]) = die T2if label  T2 == s .endoThe equat ions tate that  the dte  (designated ter-minal  element) of a tree is the dte  of its s t rongsubtree.
Another  way of stat ing this is that  theinformat ion about  d te  e lement of a subtree T isperco la ted  up to its parent  node, .just in case Tis tile "s' branch of that  node.The specif ication METTREE can be criticised ona number  of grounds,  it  has to use condit ionalequat ions in a cumbersome way to test whichdaughter  of a 1)inary tree is labelled 's', More-over.
it fails to capture  the restr ict ion that  nob inary tree can have daughters  which are bothweak.
or both strong.
That  is, it fails to capturethe essential p roper ty  of metrical  trees, namelythat  metrical  s t rength is a relational notion.What  we require is a method for encoding the foblowing information at a notle: "my left (or r ight)daughter  is s t rong".
One economicaJ method ofdoing this is to label (all and only) branchingnodes in a binary tree with one of the followingtwo lahels: 'sw'  (my left daughter  is strong),  'ws'(my right daughter  is strong).
Thus ,  we replaceMET with the following:obJ MET2 issorts Labelope sw ~s : -> Label  .endsWe can now simplify both B INTREE and ME'l'l{ l:;t'\]:obj B INTREE2\ [NONTERM TERM :: TRIV\] issorts Tree Netree ,subsorts  E I t .TERM Netree < Tree .op _ \ [ _ , j  : E I t .NONTERM Tree Tree -> Netree .op label_  : Tree -> E I t .NONTERM .op le f t  : Netree -> Tree .op r ight_ : Net ree  -> Tree .rare El E2 : T ree  .vars  A : EIt.
NONTERM .eq label (A \[ El , E2 \] ) = A .eq left (A \[ E1 , E2 \]) = El .eq r ight (A \[ El , E2 \]) = E2 .eudoobj METTREE2 is extend ingB INTREE2\ [MET2,Q ID\ ]* (sor t  Id to Leaf) .op hie_ : Tree -> Leaf .1 5 2 Pgoc.
OF COLING-92, NArCrES, AUO.
23-28, 1992var  L : Lea f  .vars  TI T2 : T ree  .eq d te  L = L .eq  d te  T = if l abe l  T == swthen  d ie ( le f t  T)e l se  d te ( r ight  T) f i  .ends3 Feature  GeometryThe p~rticul~r feature geometry  we shM1 specifyhere is based on the art icu l~tory st ructure de-fined in (Browman & Goklstein 1989)Y The fiveactive art icu lators  are grouped into a hierarchical s t ructure  involving a tongue node and an oralnode, an shown in the fol lowing d iagram.rootglot, tal relic oraltongue labialcoronal dorsalThis structul 'e is specilied via term ('onstl'UC|Ol'~(__} a , ,a  { .
.
.
.  }
wh ich  ~i .
.
.
.
.
.
s tandar<i  ),(,~iti ...... tencoding of features.
F, ach fealttre vahlc is ex-pressed as a l laturaJ ltUlnl)or \[)o|w('el l  0 and 4.represent ing the const r i c t ion  degree  of the ('orresl)onding art icu lator .
For examl)le, the tertu{4,0}  : Tongue  is an item of son Tongue consistieg of the value ,I for the Ioalure ('o)toN..\\[.and 0 for the DORSAl,; this in turu express(,> as i tuat ion  where  there  is max imal  coast i ' i c t lon  o fthe tongue tip, and minimal  constr ict ion of thetongue I)ody.
Of course, this encoding is rat hercrude, and l)ossil)ly sacrifices clari ly for cot,cision.
However, it sultices as a work iag ex;,leple.We will returi/ to constri(qioll degt'ees })el()w.The four sorts Gesture,  Root.
Ora l  and Tongueill (lO) atld the first three ol)erator~ cal)turo )h('+;For spa(:(!
reasons w( + hilVC Oltlittcd ;ItlX di~(I I~H)I)  O\[\]~rowlnan (k!
Gohistein's COllStricliolt \]o(;ttion (('\[) .in(\](:Oltslfit:tioll She+l)(!
(;S) pltl'illlittlClt,.
~*'~ (' alSO hax,.
omitted (lie supralaryllgea\] node, since its i~hono\]ogi(al lob t-somewhat dubious.desired tree s t ructure ,  using an approach  whichshould be famil iar  by uow.
For example,  thethird constructor  takes the constr ict ion degreesof G lo t ta l  and Vo l i c  gestures ,  and  combinesthem with a complex item of sort Ora l  to buildall item of sort Root.
The specifie~ttion importsthe um(hde NAT of natura l  numbers  to providevalues for constr ict ion degrees.
(10)  obj FEATS i sextend ing  NAT ,sores  Gesture  Root  Ora l  Tongue  .subsor ts  Rat  Root  Ora l  Tongue < Gesture  .op {_ ,  } : Nat  Nat ->  Tongue .op {_ , _}  : Tongue  Nat  -> Ora l  .op { .
.
.
.
.  }
: Nat  Nat  Ora l  -> Root  ,op _ !
corona l  : Tongue  --> Nat  .op  !dorsa l  : Tongue  -> Nat  .o f  !
lab ia l  : Ora l  -> Nat  .op  !
tongue  : Ora l  -> Tongue  .op _ !g lo t ta l  : Root  -> Nat  .op  !
re l i c  : Root  -> Nat  .op _ !
o ra l  : Root  -> Ora l  .va ts  C CI C2 : Nat  .va ts  0 Ora l  .va ts  T Tongue  .eq { Cl , C2 } !corona l  = CI .eq { CI , C2 } !dorsa l  = C2  ,eq { T C } !
tongue  = T .eq { T C } !
lab ia l  = C ?eq { C1 , C2  ) 0 } !g lo t ta l  = C1 .eq { C1 , C?, , O } !ve l i c  = C2 .eq { CI , C2  , 0 } !ora l  = 0 .elldoAVe adopt the uol;atiollal coilventiOll of prependint~ a '!"
to the same of seh:ctors which co lrespond directly to features.
For example,  the!corona l  seleC{or is a funct;ion defined on conl-pIox ilenls of SOl"( Tollguo which rettzrlls air item()f sort Nat, reln'eseetiug the constr ict ion degree?
ca\]u(' for ('oronality.Sonn' i l lustrative reduct ions in the FEATS moduleare given l)elow.
( I l l  {3 ,4 ,{{4 ,1} ,11}  !o ra l  .~-, {{4 ,1} ,11{3,4,{t4,1},1}} ~ora~ !to~gue ..... {4,1}{3,4,{{4,1},1}} !o ra l  !tongue !corona l  .III 1 lie ..\ I)'1 ~pplo~-lch to leal Ill'e st rtlcI tires, feel'i-leant 3 is represented by eqttating the values of~('\]('('tol'~.
I'IIIIS.
Sill)pose Ih;ll two 5egnlents S1,$2 '~hale ;t voicing sl)e(:ilication.
We can writeth\],~ >t~ f~>llows:ACN:'S DE COLING+92, NANTES, 23-28 AO~r t992 1 5 3 PRec.
of COLING?92, NAN'rEs, AUG. 2.3-28, 1992(12)S1  !g lo t ta l  = S2  !g lo t ta lThis structure sharing is consistent with one ofthe main motivat ing factors behind autosegmen-tal phonology, namely, the undesirabil ity of rulessuch as \[~ voice\] - -  \[~ nasal I.Now we can i l lustrate the flmction of selectorsin phonological rules.
Consider the case of 1';11-glish regular plural formation (-s) ,  where thevoicing of the suffix seglnent agrees with that ofthe immediately preceding segment, unless it isa coronal fricative (in which case there musl bean intervening vowel).
Suppose we introduce thevariables S1 $2 : Root, where S1 is the stem-final segment and S2 is the suffix.
The rllle nllls\[also be able to access tile coronal node of $1.Making use of the selectors, this is simply $2!o ra l  !
tongue !corona l  (a nota.tion reminis-cent of paths in feature logic.
(Kasper k l lonnds1986)).
The rule must test whether this coronalnode contains a fi'icative specification.
This ne-cessitates an extension to our specification, whichis described below.Browman & Goldstein (19S9.
234ff) define "constriction degree percolation', based on whal theycall ~tube geometry'.
The vocal trac| can b(,viewed as an interconnected set of tllbes, andthe art iculators correspond to valves which havea mmlber of settings ranging from fiflly open tofiflly closed.
As already mentioned, these ~el-t ings are called constriction degrees ( !
cds).
wherefully closed is the maximal constriction and fullyopen is the minimal constriction.The net constriction degree of the oral cavitymay be expressed as the maximum of the con-striction degrees of the lips, tongue tip and Ionguebody.
The net constriction degree of the oral andnasal cavities together is simply the minimmn ofthe two component constriction degrees.
To recast this in the present framework is straight\[or-ward.
However, we |teed lo first define the op-erations max and rain over pairs of nal t l ra \ ]  1111111-bers:(13)  obj M INMAXis p ro tect ing  NAT .ops  min  max : Nat  Nat  -> Nat  .ra re  M N : Nat .extend ing  FEATS + MINMAX .op _ !cd  : Gesture  -> Nat .ops c lo  c r i t  nar rowmid  w ide  obs open : Gesture  -> Bool  .vat  G : Gesture  .vat  N ~1 N2 : Nat  .vars  0 : Ora l  .vars  T : Tongue .eq N !cd = N ,eq {N1,N2} !cd = max(N1,N2)  .eq {T ,N} !cd = max(T  !cd,N) .eq {N1,N2,0}  !cd ~ max(N l ,min(N2,0  !cd)) .eq clo(G) = S !cd == 4 .eq crit(G) = G !cd == 3 .eq nar row(G)  = G !cd == 2 .eq mid(G)  = G !cd == I .eq w ide(G)  = G !cd == O .eq obs(G)  = G !cd > 2 .eq open(G)  = G !cd  < 3 .endoThe specification CD allows classification i to fivebasic constriction degrees (c'lo, c r i t ,  narrow,mid, and wide) by means of corresponding one-place predicates, i.e.
boolean-valued operationsover gestures.
For example, the fifth equationabove states that G has the constriction degreecto  (i.e.
elm(G) is t rue) i f  and only i f6  !cd ==4.The working of these predicates i i l lustrated be-l o w:(15) {3 ,0 ,{{4 ,1} ,1}}  !oral !
tongue !cd .~4{3 ,0 ,{{4 ,1} ,1}}  !oral !cd~4{a,o ,{14 ,~},1}}  ~cd .~3mid({3 ,0 ,{{4 ,1} ,1}}  !oral l~ ia l )  .t ruewide({3,O,{{4,1}, l}}  !oral !labial) .fa l seopen({3,0 ,{{4,1}, l}}  \]oral !labial) .t ruec l0 ({3 ,0 ,{{4 ,1} ,1}}  !oral !tongue) .t rueReferenceseq min(M,N) = i f  M <= N then M e lse  N f i  .
Beierb.
C. &: U. Pletat (1988).
Feature Graphseq max(M,N) = i f  M >= N then M e lse  N f i  .
and Abstract Data Types: A Unifying Ap-endo proach.
Proeeedin9.~ of the 12th lnterua-tional Conj,'fence on Compvtational Lin-(14) obj CD is  guistic,~, pp40 45, Budapest,  I lnngary.AcrEs DE COLING-92.
NANTEs, 23-28 ho~" 1992 1 5 4 PROC.
OF COLING-92, NAhn'ES, AUG. 23-28, 1992Beierle, C. & II.
Pletat (19881.
The Algebraof Feature GrNlh Specifications.
W?~s l ie-port 94, IBM T11-80.89-029, InM Germany,Institute for Knowledge Based Syslems.Stuttgart.Beierle, C., U. Pletat & tI.
liszkoreit (1988).
AleAlgebraic Chara.cterization f s'ruF.LILOG Report 40, IBM Germany, Stuttgart.Bird, S. (19901.
Constraint-Based Phonology.PhD Thesis.
University of I"dinburgh.Bird, S. ~z 1';.
Klein (1090).
Phonological events.Journal of Linguistics, 26, 33- 56.Browman, C. & L. Goldstein (1989).
Articula-tory gestures as llhonological units.
Phouofogy, 6, 201-251.Cardclli, L. (19881 A Semantics of MultipleInheritance.
Mformation and ('omputatiml.76, 138 164.Clements, G.N.
(19851 The Geometry of Phono-logical Features.
Phonolo:ly )?arl~'*ok. 2.225 252.D6rre, J.
& A. Eisele(1991).
A Coumrehensiw'Unification-Based Grammar Formalisln.
I)t,-liverable R3.I.B.
DYANA r, Sl'RIT Basic lie-search Action BR3175, .January 1991.Ehrig, tl.
& B. Mahr (1985) l,}mdam~utal.~ of .,l/-gebruic Spceificotiou 1: Equations aml llli-lial Semauties, llerlin: Springer Vcrlag.Goguen, J.A., & T. Winkler (19SS) "lnfrodue-ing OB,I3'.
TechnicM Report SR14',SL-SS-9.Sl/1 lntex'national, (:oinlluter Sciellre l,al)oratory, Menlo Park, ('A.Goguen, ,I.A., J.W.
'l:h~tcher and E.G.
Wag-ner (19761 'An Initial Algebra Apl)roaeh tothe Specification, Correctness and hnl)le-mentation of Abstracl l)ata Typ(,s'.
In R.Yeh led.)
(hwrent J)'ends in ProgrammingMethodology I I :  1)ata Structuring.
pp8014,1.
Englewood ('lifts.
NJ : Prenfice llall.f lyman, L. M. (198,1).
On the weightlessness ofsyllable onsets.
In Brugm~m & Macaulay(eds.)
Proceedings of the Tenth AnnualMeeting of the Berkeley Linguistics Society.University of California., Berkeley.I,\[asper, ll.
~ W. llounds (19861.
A Logical Se-mantics for Feature Structures.
Proceedingsof the 24th Anmwl Meeting of the ACL,Cohuntfia University, New York, NY, 1986,11t1257 - 265.Klein, E. (1991), Phonological Data Types.
IllKlein, E. and F. Veltlnan (eds) The Dynam-ics of lnteu,'ctatiou: Proceedings of a Sym-posium on Natural Language and Speech,BrusseLs, November 26/27, 1991.
SpringerVerlag.Newton, M. (in prel)m'~tion ).
Grammars andSpecification Languages.
PhD Thesis, ('en-tre for Cognitive Science, University of Ed-inbnrgh.Real)e, M. (1991).
Fonnda.tions of L!nification ~Based Grammar Formalism.
Deliverable\]~.%2..:k. DYANA ESPRIT Basic \]l.esearehArtion BR3175, .July 1991.Rounds, W. ,k" A, Manaster-Ramer (1987).
Al,ogica~t Version of Functional Gr~unm~r.Proce~.ding.," of 25th Ammal Meeting of the.,lssoeiatior~ for Computational Linguistics,6 9 ,hdy 1987.
Stanford University, Stan-ford, ('A, 89 96.Sagey, E. (1!1861.
'l'he RepTr, sentation of Fea-tures a~d Relations ill Non-Linear Phonol-ogy.
Phi) Thesis.
MIT, Camhridge, Mass.Salmella 1).
~: A. Tarlecki (1987) Some thoughtsm/ algebraic specilira,tion.
I,FCS Report Se-ries I",CS 1,1;'C8-,~7-21, l,aboratory for Foundations of Co\[llt)uler Science, University ofEdillburgh.Shieber, S. (1986).
A~ Introduction to Uni-fication-Based Approaches to Grammmar.CSI,I Lecture Note Series, University ofChicago Press, Chicago.Smolka, C,.
and II.
Ai't-Kaci (19891 'Inheri-tance llierarchies: Semantics and Unifiea~-lion'..Iour~lol of Symbolic ('omputation, 7,'3,t',1 370.ACRES DE COLING-92.
NANTES, 23-28 AOt~'r 1992 1 5 5 PROC.
OF COLINGO2.
NANTES, Aua.
23-28, 1992
