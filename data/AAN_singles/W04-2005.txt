EVALUATING GETARUNS PARSER WITHGREVAL TEST SUITERodolfo DelmonteCa' Garzoni-Moro, San Marco 3417Universit?
"Ca Foscari"30124 - VENEZIATel.
39-041-2349464/52/19 - Fax.
39-041-5287683E-mail: delmont@unive.it - website: project.cgm.unive.itAbstractGREVAL, the test suite of 500 English sentencestaken from SUSANNE Corpus and madeavailable by John Carroll and Ted Briscoe at theirwebsite, has been used to test the performance ofa symbolic linguistically-based parser calledGETARUNS presented in (Delmonte, 2002).GETARUNS is a symbolic linguistically-basedparser written in Prolog Horn clauses which usesa strong deterministic policy by means of alookahead mechanism and a WFST.
The grammarallows the specification of linguistic rules in ahighly declarative mode: it works topdown and bymaking a heavy use of linguistic knowledge mayachieve an almost complete deterministic policy:in this sense it is equivalent to an LR parser.
Theresults obtained fare higher that the ones reportedin (Preis, 2003) and this we argue is due basicallyto the symbolic rule-based approach: we reach96% precision (coverage) and 84% recall(accuracy).
We assume that from apsycholinguistic point of view, parsing requiressetting up a number of disambiguating strategies,to tell arguments apart from adjuncts and reducethe effects of backtracking.
To do that the systemis based on LFG theoretical framework and usesGrammatical Functions information to help theparser cope with syntactic ambiguity.
In the paperwe shall comment on some shortcomings of theGreval corpus annotation and more in general weshall criticize some aspects of the DependencyStructure representation.1.
IntroductionIn this paper we will present the parser used by thesystem GETARUN and discuss its performance withthe test suite called GREVAL set up by Carroll &Briscoe.
We will also discuss the mapping algorithmfrom LFG to Dependency Grammatical Relations(DGRs), which we have been obliged to develop inorder to be able to evaluate our parser.
Greval is abenchmark for parser evaluation based onGrammatical Relations in a Head DependencyStructure style output, i.e.
a word based Head-Dependent flat representation enriched withGrammatical Relation information, where eachrelation is represented as follows,Relation(introducer,head,dependent)Relation(introducer,head,dependent,deep-relation)where a deep relation is introduced basically forpassive constructions, dative shift, and potentiallyother structures, according to the ?Movement?approach invoked by chomskians.
The annotationadopted by the authors is a surface level GRsapproach where for instance, in cases of LocativeInversion as in sentence 284,(1) Here, in the old days - when they had cometo see the moon or displays of fireworks - satthe king and his court while priests, soldiers,and other members of the party lounged inthe smaller alcoves between.the SUBJect NP ?the king and his court?
is assignedto DOBJ and then receives an additional deep-relation label as NCSUBJ to indicate its originaldeep structure position.
However the same relation is?wrongly?
marked as NCSUBJ in a subsequent caseof Locative Inversion (the only other one, sentence445), which we report below,(2) In his stead is a milquetoast version knownas the corporation.where the inverted subject NP ?a milquetoastversion?
is annotated straightforwardly as NCSUBJ.The inconsistency denounced by this case of doubleannotation lingers on other types of ambiguous GRsthat we will comment below.In our experiment, for reasons already explained in(Crouch et al, 2002) and further commented below,we restricted our mapping algorithm to all ?pred-only?
f-structures, i.e.
only to semantic heads withprimary GRs.
This is because we assume that themost difficult task a parser is faced with whenparsing a sentence is to operate the argument-adjunctdistinction: thus the subset of GRs we will take intoaccount is the following:NCSUBJ, DOBJ, IOBJ, ARG_MOD, XCOMP,CCOMPDifficulties in building up a comparable version ofour output, include the inconsistencies present in thenon typographical text distributed for the test.
Wealso had to give up using the internally provided toolfor evaluation because our system builds multiwordexpressions which are almost totally absent in theannotated Gold version.
So even though the authorsadmit to the need of improving this aspect, its lackmakes it impossible for real systems to use automaticevaluation tools.1.1 MultiwordsMultiwords go from obvious cases such as UnitedStates, which is wrongly treated in the annotatedcorpus as two separate words ?
?state?
modified by?united?
?
to prepositional and adverbial locutionssome of which have been individuated but have beenleft with an SGML markup, as shown here,accord<blank>toin<blank>favour<blank>ofeven<blank>ifno<blank>onea<blank>fewout<blank>ofin<blank>order<blank>toat<blank>leastso<blank>thatfor<blank>examplealong<blank>within<blank>front<blank>ofbecause<blank>ofas<blank>toe.<blank>g.In addition to these 15 multiwords, we producedover 220 nouns, adverbials and adjectives whichcontributed in an important manner to disambiguateboth syntactic and semantic processing, as well as tofacilitate tagging.1.2 Mapping from LFG to DGRsHowever the most difficult part of the work was themapping itself.
The mapping from LFG to DGRsrequires the setting up of a principled distinctionbetween GRs.The main difficulties were due to the treatment ofOBLiques vs. PP adjuncts: LFG erases thepreposition of oblique arguments which is no longeravailable for comparison, on the contrary, thepreposition is preserved in case it is semanticallyneeded to identify the semantic role associated to PPadjuncts.
In DGRs instead we have two optionsreported below and taken from the online Readmedocument,ncmod(type, head, dependent) is the most commonrelation type and is used to encode PP,adjectival/adverbial modification, nominal modifiers,and so on.
ncmod is also used to indicate a particle`modifier' in a verb particle combination, e.g.
Billlooked the word up is encoded as ncmod(prt, look,up); of in consist of is treated as a particle.iobj(type, head, dependent) is the relation betweena predicate and a non-clausal complement introducedby a preposition;iobj(in, arrive, Spain) arrive in Spainiobj(into, put, box) put the tools into the boxiobj(to, give, poor) give to the poorThe definitions do not respect the actual decisionstaken in the annotation process because onlyadjective and verb predicates are assignedcomplement labels like nsubj, dobj and iobj.
Nounsare only assigned generic modifiers, apart from 9cases of ?wrongly?
labeled IOBJ complementswhich we comment in more detail below.
On thecontrary, in our representation, possessor relationsand other agent-like relations in noun modificationare computed as SUBJ.
The remaining ?of?
headedPPs are all computed as OBJ in case the noun is adeverbal predicate and is transitive; otherprepositions introduce OBLiques and ADJunctsagain according to the governing noun.As to verb and adjective predicates, in order to beable to sort out NCMODs from IOBJs, allsubcategorization relations must be suitablyencoded, be it obligatory or optional ones, as can beunderstood from the examples of IOBJs listed aboveand taken from the online accompanying document.In particular, ARRIVE would be computed as takinga Locative PP complement at the same level of PUT,whereas only the latter requires the complementobligatorily.
As to the third example, GIVE, aditransitive verb allowing Dative Shift, its indirectobject would be computed as a case of IOBJ thuscollapsing an important linguistic distinction existingbetween OBLiques and Indirect Objects.However, given the generic criteria followed by theannotators, we still wanted to verify the consistencyof annotation of IOBJs, so we checked withCOMLEX subcategorization frames whether therelation would be predicted or not.
When collectingthe IOBJs of the corpus we soon discovered that 9IOBJS constitute cases of non verbalcomplementation which we report below,(iobj to akin future) ;;; non-verbal complementation(iobj to adherence principle)(iobj to applicability people)(iobj of independent pressure)(iobj of independent volume)(iobj notorious for disregard)(iobj to atune Whig)(iobj to key acceptance)(iobj on ruin country)then, there is one dubious case of IOBJ: in sentence316 the ellipsed governing adjective predicate?atune?
is done away with and the IOBJ relation isassigned to the verb BE,(3) Indeed, the old Jeffersonians were far moreatune to the Hamilton oriented Whigs thanthey were to the Jacksonian Democrats.
(ncsubj be Jeffersonian _)(xcomp _ be atune)(iobj to atune Whig)(ncsubj be they _)**(iobj to be democrat)From the search in COMLEX of the remaining 127predicates governing IOBJ relations, we derived 20predicates missing the preposition required for thecomplement discriminative choice.
In more than onecase the choice of complement (iobj) vs. adjunct(ncmod) is highly disputable.
This situation makesthe comparison and evaluation of IOBJs veryuncertain and bound to low scoring as happened withthe parsers included in the test reported under (Preis,2003).
As an additional remark, from the definition itwould appear that OBLiques are treated as DOBJ ofa preposition particle which is in turn treated itself asncmod.
To better clarify the issue we partially reportthe annotation of example 244 from the corpus,where we italicize the relevant relations,(4) Meanwhile, the experts speak of warstriggered by false pre-emption, escalation,unauthorized behavior and other terms thatwill be discussed in this report.ncsubj(speak, expert, _)dobj(speak, war, _)ncsubj(trigger, war, obj)arg_mod(by, trigger, pre-emption, subj)arg_mod(by, trigger, escalation, subj)arg_mod(by, trigger, behaviour, subj)arg_mod(by, trigger, term, subj)ncsubj(discuss, term, obj)ncmod(prt, speak, of)So we decided that in our evaluation we treat asIOBJs both those actually produced by our parserand matched directly with the Gold corpus, as wellas those which appear in the Gold corpus as DOBJgoverned by a preposition NCMOD and also thosethat have been computed as NCMODs directly, aslong as the head and the dependent are identical.We then individuated a number of mismatches in theGold annotation which would not receive a suitablemapping in our output, which were then interpretedas mistakes by Ted Briscoe (p.c.)
in particular casesof secondary predication for the class of ECM verbs(consider, believe, term, etc) which were treated asOBJ2, as well as the relation of DOBJ associated tocomplements of verb HAVE, which we compute ascopulative verb.
(5) Sunday he had added, We can loveEisenhower the man, even if we consideredhim a mediocre president... but there isnothing left of the Republican Party withouthis leadership.ncsubj(add, he, _)ncsubj(love, we, _)dobj(love, Eisenhower, _)ncsubj(consider, we, _)dobj(consider, he, _)obj2(consider, president, _)For this reason we didn?t include data for OBJ2 inour comparison which required too many changes inour parser architecture in order to have theappropriate mapping.
As to clause level GRs, wecomputed both open and closed sentential (CCOMP)and small clause (XCOMP) complements, but wedid not compute open adjuncts ?
XMODS ?
whichagain did not seem to be easily comparable in ourmapping.
As a matter of fact, these clausalcomplements have not been separated in thepublished test and only figure as CLAUSAL.
Forcomparison reasons we had to erase all subjectrelations made available by our LFG-basedrepresentation for all open predicative complementswhich were however not represented in the Goldmanually annotated GREVAL corpus.2.
Parsing and Robust TechniquesAs far as parsing is concerned, we purport the viewthat the implementation of sound parsing algorithmmust go hand in hand with sound grammarconstruction.
Extragrammaticalities can be bettercoped with within a solid linguistic framework ratherthan without it.
Our parser is a rule-baseddeterministic parser in the sense that it uses alookahead and a Well-Formed Substring Table toreduce backtracking.
It also implements Finite StateAutomata in the task of tag disambiguation, andproduces multiwords whenever lexical informationallows it.
In our parser we use a number of parsingstrategies and graceful recovery procedures whichfollow a strictly parameterized approach to theirdefinition and implementation.
Recovery proceduresare also used to cope with elliptical structures anduncommon orthographic and punctuation patterns.
Ashallow or partial parser, in the sense of (Abney,1996) is also implemented and always activatedbefore the complete parse takes place, in order toproduce the default baseline output to be used byfurther computation in case of total failure.The grammar is equipped with a lexicon containing alist of fully specified inflected word forms whereeach entry is followed by its lemma and a list ofmorphological features, organized in the form ofattribute-value pairs.
However, morphologicalanalysis for English has also been implemented andused for OOV words.
The system uses a core fullyspecified lexicon, which contains approximately10,000 most frequent entries of English.
In additionto that, there are all lexical forms provided by a fullyrevised version of COMLEX.
In order to take intoaccount phrasal and adverbial verbal compoundforms, we also use lexical entries made available byUPenn and TAG encoding.
Their grammatical verbalsyntactic codes have then been adapted to ourformalism and is used to generate an approximatesubcategorization scheme with an approximateaspectual and semantic class associated to it.Semantic inherent features for Out of Vocabularywords , be they nouns, verbs, adjectives or adverbs,are provided by a fully revised version of WordNet ?270,000 lexical entries - in which we used 75semantic classes similar to those provided byCoreLex.All parser rules from lexicon to c-structure to f-structure amount to 7532 rules, thus subdivided:1.
Calls to lexical entries - morphology and lexicalforms: 3865 rules2.
Syntactic and semantic rules in the parser proper:2617 rulesAll syntactic/semantic rules: 6482 rules4.
Semantic Rules for F-StructureLexical Rules for Consistency and Control:- 439rulesF-structure building, F-command:- 170 rulesQuantifier Raising and Anaphoric Control:- 441rulesAll semantic f-structure building rules: 1050 rulesThe parser itself is made up of 51,000 lines of code.This does not take into account the code for thelexicon ?
with fully specified subcategorizationframes - and the dictionary for morphologicaldecomposition: 6600 entries for the lexicon and76,000 entries for the dictionary.
These are allconsulted at runtime.
Eventually the semantics fromthe WordNet and other sources derived from the webmake up three hash-tables for 5 Mb overall sitting onthe hard disk and accessed when needed.Our training corpus for the complete system is madeup 200,000 words and is organized by a number oftexts taken from different genres, portions of theUPenn WSJ corpus, test-suits for grammaticalrelations, narrative texts, and sentences taken fromCOMLEX manual.Fig.1 GETARUNS?
LFG-Based Parser2.1 Lookahead and FSAOne of the important differences we would like tohighlight is the use of topdown lookahead basedparsing strategies.
The following list of preterminal14 symbols is used:1. v=verb-auxiliary-modal-clitic-cliticized verb2.
n=noun ?
common, proper;3. c=complementizer4.
s=subordinator;5. e=conjunction6.
p=preposition-particle7.
a=adjective;8. q=participle/gerund9.
i=interjection10.
g=negation11.d=article-quantifier-number-intensifier-focalizer12.
r=pronoun13.
av=adverb14.
x=punctuationTab.
1: Preterminal symbols used for lookaheadAs has been reported in the literature (seeTapanainen and Voutilainen 1994; Brants andSamuelsson 1995), English is a language with a highlevel of homography: readings per word are around 2(i.e.
each word can be assigned in average twodifferent tags depending on the tagset).
Lookahead inour system copes with most cases of ambiguity:however, we also had to introduce a disambiguatingtool before the input string could be safely passed tothe parser.
Disambiguation is applied to thelookahead stack and is operated by means of FiniteState Automata.
The reason why we use FSA issimply due to the fact that for some importantcategories, English has unambiguous tags which canbe used as anchoring in the input string, to reduceambiguity.
I am now referring to the class ofdeterminers which is used to tell apart wordsbelonging to the ambiguity class [verb,noun], themost frequent in occurrence in English.
Besides, allFSA may be augmented by tests related to linguisticproperties needed for disambiguation; some suchtests are, check subcategorization frame for currentwordThis is used for [n,v], [a,n,v] ambiguity classesfollowed by a preposition, or followed by ?that? check for gerundive verb formThis is used to check for ?ing endings of words check for auxiliary and modalsThis is used to disambiguate [n,v], [a,n,v]ambiguity classes when preceded by an auxiliaryor a modal check for noun belonging to factive classThis is used to disambiguate ?that?
[a,c,r]ambiguity class when preceded by a governingnoun check for verbs of sayingThis is used to disambiguate verbs preceded orfollowed by punctuation marks3.
GETARUNS: a Linguistically andPsychologically Based ParserThe parser is divided up into a pipeline of sequentialbut independent modules which realize thesubdivision of a parsing scheme as proposed in LFGtheory where a c-structure is built before the f-structure can be projected by unification into a DAG.In this sense we try to apply phrase-structure rules ina given sequence as they are ordered in the grammar:whenever a syntactic constituent is successfullybuilt, it is checked for semantic consistency, bothinternally for head-spec agreement, and externally,in case of a non-substantial head like a prepositiondominates the lower NP constituent; other importantlocal semantic consistency checks are performedwith modifiers like attributive and predicativeadjuncts.
In case the governing predicate expectsobligatory arguments to be lexically realized theywill be searched and checked for uniqueness andcoherence as LFG grammaticality principles require.We assume that from a psycholinguistic point ofview, parsing requires setting up a number ofdisambiguating strategies, basically to tell argumentsapart from adjuncts and reduce the effects ofbacktracking.
The use of strategies calls forpsychologically related disambiguation processeswhich are strictly bound to linguistic parameters.
Forinstance, English is a language that freely allowscompless (complementizer-less) complement andrelative clauses.
Being the sentence the highestrecursive structural level, it is plausible that Englishspeakers will adopt some strategy in order to avoidfalling in a garden path - thus freezing the parser.Another peculiar feature of English regards theinherent ambiguity of Past Tense/Past Participle verbforms, exception made for irregular verbs whichhowever only constitute a small subset in the verblexicon of English amounting in our case to some20,000 entries.
Seen that Reduced Relative Clausesare headed by the past participle verb form, and thatParticipial Adjuncts may be attached to any NP headnouns quite consistently; and seen also that is veryhard to apply strict subcategorization tests forparticipial SUBJect - or deep OBJect in case ofpassives - with good enough confidence we assumethat such tests will only be performed in case theparser is at the complement level of the SUBJect NP.The reason for this being that we need to prevent asmuch as possible failures at the I_bar level.
For thisreason we pass grammatical function informationdown into the NP complement level in order to beused for that purpose.Whenever a given predicate has expectancies for agiven argument to be realized either optionally orobligatorily this information will be passed below tothe recursive portion of the parsing: this operationallows us to implement parsing strategies likeMinimal Attachment, Functional Preference andother ones (see Delmonte, 2000a; Delmonte, 2000b).As said above, English allows an emptyComplementizer for finite complement and relativeclauses, two structures which contribute a lot ofindeterminacy to the parsing process.
However, inour system, this can be nicely accomodated by usinglinguistic information to prevent the rule to beentered by the parser.
Syntactic and semanticinformation is accessed and used as soon as possible:in particular, both categorial and subcategorizationinformation attached to predicates in the lexicon isextracted as soon as the main predicate is processed,be it adjective, noun or verb, and is used inassociation with local lookahead to restrict thenumber of possible structures to be built.
Adjunctsare computed by semantic compatibility tests on thebasis of selectional restrictions of main predicatesand adjuncts heads.The grammar formalism implemented in our systemis not fully compliant with the one suggested by LFGtheory (Bresnan, 2001), in the sense that we do notuse a specific Feature-Based Unification algorithmbut a Prolog-based parsing scheme.
On the otherhand, Prolog language gives full control of adeclarative rule-based system, where information isclearly spelled out and passed on and out tohigher/lower levels of computation.
In addition, wefind that topdown parsing policies are better suited toimplement parsing strategies that are essential inorder to cope with attachment ambiguities (but seebelow).We will need here to make clear what we intend for"LFG-related grammar organization": as said above,we are not following LFG theory strictly in that theparser is not organized as would all constraintunification-based parsers, with a context-free orcontext-augmented grammar that producesconstituents which are then passed to a unificationmechanism to check for consistency, uniqueness andcoherence in LFG terms, or simply to check forfeature agreement and subcategorization constraintssatisfaction.
In our parser the grammar is organizedby Grammatical Functions which call syntacticconstituents.
Each Grammatical Function call passesfunctional information to the constituent level whichis paramount to the lookahead mechanism and makesavailable syntactic constraints of a higher level thanthe constituent itself.3.1 The Organization of Grammar RulesThe grammar is divided up into five main levels:- the complex utterance level, where choices aremade for subordinate/coordinate, direct/indirectdiscourse markers, or as simple assertion;- the utterance level, where choices are made fordetecting a question vs. assertion;- the simple assertion level, where we may haveassertions with a sentential subject; a verbal structureas a gerundive as subject; a fronted OBJect NP asfocalized constituent or a Locative Inversionsentence structure.In case none of the previous structures are detectedthe parser enters the CP level of canonical sentenceswhere Aux-to-Comp may take place.All sentential fronted constituents are taken at the CPlevel.
Adjuncts at this level may be of many differentkinds, some of them conflicting with the same rolethe constituent may have at a lower level.
Forinstance, a vocative NP may be present, fronted PPcomplements, as well as various types ofparenthetical structures: here again, the parser mustbe told at which level of computation it is actuallysituated in the grammar.
This is done again bypassing down the corresponding grammaticalfunction.
When the parser leaves this level ofcomputation it will enter the canonical IP levelwhere the SUBJect NP must be computed, either as alexically present nominal head or as a string passedin the Extraposition variable.
Then again a numberof ADJuncts may be present between SUBJect andverb, and they can be adverbials and parentheticals.When this level is left the parser enters the I_barlevel where it is expecting a verb in the input string.This can be a verb complex with a number ofinternal constituents, but the first item must bedefinitely a verb.
In case there is none, a number offail-soft and recovery strategies are tried to checkwhether the parser has taken a participial as ADJunctor as reduced relative clause in a previous parsewhich is passed down to perusal.
Also in case therewas no nominal element available at IP level anumber of recovery strategy are tried to checkwhether the parser has taken an Appositive or aVocative in a previous parse.
So all the previouslyparser material is either passed down or is recordedin a WFST to be used in an upper level in case offailure at a lower level.The parser is strictly top-down, depth-first, one-stageparser with backtracking: differently from mostprinciple-based parsers presented in (Berwick,Abney, and Tenny, 1991) which are two-stageparsers, our parser computes its representations inone pass.
This makes it psychologically morerealistic.
The final output of the parsing process is anf-structure which serves as input to the bindingmodule and logical form: in other words, itconstitutes the input to the semantic component tocompute logical relations.
In turn the bindingmodule may add information as to pronominalelements present in the structure by assigning acontroller/binder in case it is available, or else thepronominal expression will be available fordiscourse level anaphora resolution.What are the main advantages of performing atopdown lookahead driven parse as compared tounification procedures applied to a LR parse table ascommented in (Carroll, 2000)?
First of all, ourgrammar is not a CF grammar seen that CF rules aremultiplied by all different sentence positions atwhich they may occur: in order to do that, a NP maybe called by a SUBJect, an OBJect, aNCOMPlement, an APPosition, a VOCative etc.
sothat different properties and constraints may beassociated with each NP realization.Consider now the wellknown case ofCOMPlementizerLess complement clauses inEnglish as represented by the following example (allexamples are taken from Greval):(6) A Yale historian, writing a few years ago inThe Yale Review, said We in New Englandhave long since segregated our children.And now consider the case in which a sententialcomplement is used in subject position, as in(7) That any sort of duty was owed by his nationto other nations would have astonished anineteenth century statesman.No rule accessing sentential complement would beused to look for subject complement clauses whichare only accessed at sentence level as a special caseof sentence structure.
In order to take care ofcompless complement clauses the parser checkssubcategorization frames, then in case thecomplementizer is missing, it activates a check forthe semantic typology of verb predicates whichallow the complementizer to be omitted, whichcoincides with bridge verbs or non-factive verbs.Now consider the case in which the complementclause follows the object (direct,indirect) NP, as in(8) He told the committee the measure wouldmerely provide means of enforcing theescheat law which has been on the bookssince Texas was a republic.This strategy is organized in a similar way tochecking for the attachment of a PP complementfollowing a NP.
The complementation information isturned into a ?that?
word in case of sententialcomplement, and into the whole set of prepositionssubcategorized by the verb with PP complements.These words are used as Cues-set to prevent the NPfrom entering relative clause rules, or any PP headedwith one of the prepositions listed in the Cues-set,after the head has been taken and the parser is in thecomplement block of rules.
The Cues-set is passed asa list from the I_bar level down to the vp level andinto the object NP if any.Now consider cases in which the parser has tochoose between an OBJect NP/Sentence complementSUBJect in case the verb is compless as shown in:(9) Mitchell decried the high rate ofunemployment in the state and said theMeyner administration and the Republicancontrolled State Senate Must share the blamefor this.Or this sentence where the complement is started bya comma, and a vocative,(10) A man must be able to say, Father, Ihave sinned, or there is no hope for him.As said above, we ascertain the verb belongs to thesemantic class of non-factive verbs and then look fora finite verb ahead before allowing the Sentencecomplement rule to be fired.
Other similarly difficultcases that can be adequately treated in our parser areshown below,(11) I told him what Liston had said andhe said Liston was a double crosser and saidanything he (Liston) got was through akeyhole.where both the complement clause and the followingrelative clause are compless.
Getting the final resultsreported in Table 2. with Greval took us onemonth/man work to account for rules and lexicalentries missing in the parser.
Some such coverageproblems were caused by sentences like 12 and 13below,(12) Wagner replied, Can't you just seethe headline City Hooked for $172,000 ?
(13) Yet, I responded, could not similarthings be said about the art of the past ?Or an imperative/exhortative followed by a questionas in,(14) Take Augustine's doctrine of gracegiven and grace withheld : have youpondered the dramatic qualities in thistheology ?or a subordinate clause followed by a question as in,(15) If he attaches little importance topersonal liberty, why not make this knownto the world ?Hard sentences to parse were the following ones,(16) Battalion Chief Stanton M. Gladden,42, the central figure in a representationdispute between the fire fighters associationand the teamsters union, suffered multiplefractures of both ankles.
(17) He bent down, a black cranelikefigure, and put his mouth to the ground.where in 16 there are two long parentheticals fairlyhard to process before the main verb comes; in 17the appositive comes after the verb and not afterhead noun, the pronoun ?he?.New lexical entries had to be added to account forspecial multiwords basically in the area ofgrammatical function words.
We also added somenew lexical multiwords which caused the FSAdisambiguation problems.4.
Evaluation and DiscussionThe parser parses 89% of all text top down: then itparses 9.3% of the remaining linguistic materialbottom up and adds it up to the parsed portion of thecurrent sentence.
That may produce wrong results incase a list has been partially parsed by the top downparser.
But it produces right results whenever anyadditional complete subordinate or coordinatesentence structure has been left over ?
whichconstitutes the majority of cases.
Overall almost thewhole text ?
98.3% - is turned into semanticallyconsistent structures which have already undergonePronominal Binding at sentence level in their DAGstructural representation.We find it very important to remark the fact that theperformance of our parser is mainly to be appreciatefor the high coverage.
None of the statistically andstochastically based parser reported under (Preis,2003)  reached such a high score.ALL-RELS GOLD VENICE CORRECT %PRECISRECALL/GOLDRECALL/GUESSxcomp 361 344 274 95.29 75.90 79.65ncsubj 1038 1038 883 100.00 85.06 85.06iobj 158 126 99 79.74 62.65 78.57dobj 409 394 331 96.33 80.92 84.01argmod 38 30 26 78.94 68.42 86.66ccomp 81 80 62 98.76 76.54 77.5TOTAL 2085 2012 1675 96.49 80.33 83.25Table 2: Grammatical Relations produced by GETARUNS with Precision and RecallFor the sake of comparison we also report the maindata taken from the table presented under (Preis,2003) to allow the reader to appreciate the results ofour parser.
In particular, the number of mainGrammatical Relations treated in the previous test ishalf the number in comparison with ours.
If we lookat the easiest GR to parse, i.e.
the NCSUBJ GR, wesee that the number of cases found by the best parserin the previous test is by far lower that our result.The highest case of precision is for DOBJ in the BUparser which reaches 88.42% which is 8 points lowerthat our result.
In absolute terms, limiting thecomparison to the two most frequent GRs, the bestparser ?
BU - has found 361 DOBJs against our 394;891 NCSUBJs against our 1038.GF oecBC -PRECISBC -RECALLBU -PRECISBU -RECALLCH -PRECISCH -RECALLC1 -PRECISC1 -RECALLC2 -PRECISC2 -RECALLdobj 409 85.83 78.48 88.42 76.53 84.43 75.55 86.16 74.57 84.85 75.31iobj 158 31.93 67.09 57.75 51.9 27.53 67.09 27.09 69.62 27.01 70.25ncsubj 1038 81.99 82.47 85.83 72.93 81.8 70.13 79.19 65.99 81.29 69.46obj2 19 27.45 73.68 46.15 31.58 61.54 42.11 81.82 47.37 61.54 42.11arg_mod 41 - - 75.68 68.29 78.12 60.98 82.86 70.73 82.86 70.73clausal 403 43.27 52.61 75.79 71.46 62.19 43.67 50.57 32.75 49.11 27.30Table 3: GR Precisions and Recalls as derived from (Preis, 2003)The recall is also accordingly lower in absoluteterms: there are 277 cases of correct DOBJs in BUagainst our 331, and 702 cases of correct NCSUBJs?
in this case it is the BC parser that gets best recall ?against our 883.
And 277 and 702 are slightly betterthan chance - 67.72  and 67.63 respectively.The impression one gets from the performance ofstatistically and stochastically based parsers is thatthey are inherently unable to cope with deeplinguistic information.
They are certainly impossibleto undergo substantial improvements.
On thecontrary, rule based parsers would benefit fromadditional subcategorization frames as in our case:and for all those constructions which require settingup of new additional peripheral rules in the grammar,they would typically increase their coverage, as didour parser.As a last comment, we started evaluating subsets ofGREVAL corpus with the online version of?Connexor?
dependency parser, on the assumptionthat that version would be identical or even betterthan the one commercially available.
We did thatbecause this parser is regarded the best dependencyparser on the market.
We tried out a subset of 50sentences, and on a first perusal of the output wediscovered that only 40 sentences contained correct,and fully connected representations.
The remaining10 sentences either presented unconnected heads, ormisconnected ones due to wrong attachments.
Someremarks on the possible reasons for that: bottom up local parsing techniques are goodat coping with typically hard to parsestructures for a top down parser likecoordinate structures but they are bad atcomputing long distance dependencies; they are good at computing attachmentwhenever it is local, but they make mistakeswhen there are extraposed elements; dependency parsing does not seem to obeyto generally accepted grammaticalityprinciples like the obligatoriness of SUBJectconstituents, nor the need to provide somelanding site for extracted wh- elements inrelative and interrogative clauses; control structures like small clauses forpredicative complements and adjuncts are allattached locally, which is not always thecase.So, even though word-level parsing may be moreeffective as to the number of connections(constituents) safely produced, without leaving offany fragment or skimmed fragment, it is nonethelessfaced with the hard task of recomposing clause levelcontrol mechanisms which in a top downconstituency-based parser are given for granted.The F-measure derived from our P and R accordingto the usual formula:2rpF1(r,p) =       ---------r+pis 89.38%, which is by far higher than the 75%reported in (Crouch et al, 2002) as being the bestresult obtained by linguistic parsers today.We are currently experimenting with a ?mildly?topdown/bottomup version of the parser in whichrather than starting from Clause level we searchrecursively for Arguments and Adjuncts.
In otherwords, we look for fully semantically interpretedconstituents in which choice for argumenthood hasalready been partially performed.
In addition tocollecting Arguments/Adjuncts, the new parserscatters in the output list punctuation marks andcoordinate/subordinate words which are deemedresponsible to determine clause boundaries.
To thataim, we devised a procedure for clause creationunder the restriction that a main tensed Verbconstituent complex has been found.
This can beiterated on the input list and the procedure maydecide to fuse portion of the output list which havebeen left stranded without independent clause status,and append it to the preceding prospective clause.Interpretation procedures follows by recoveringsubcategorization frames for the main tensed verband assignment of grammatical function andsemantic roles takes place.
The Clause levelprocedure is then followed by an Utterance levelprocedure that produces simple utterance or complexones ?
coordinated or subordinated ?
according tothe Clause input list.We experimented the new version of the parser withthe Greval Corpus and discovered that in some casesit was much slower than the fully topdown version.However, we also recovered parsing time in highlyambiguous and complex sentences, where the?mildly?
bottomup parser actually followed a totallylinear behaviour: no increase in computation timeresulted and the performance is only conditioned bythe number of words/number of arguments-adjuncts/number of clauses to build.
We haven?tbeen able to compute this proportion systematicallybut will do so in the future.5.
ReferencesAbney, S. 1996.
Part-of-Speech Tagging and PartialParsing, in Ken Church, Steve Young, and GerritBloothooft, eds.
Corpus-Based Methods inLanguage and Speech, Kluwer AcademicPublishers, Dordrecht.Berwick, R.C., S. Abney, and C. Tenny.
1991.Principle-Based Parsing: Computation andPsycholinguistics.
New York: Kluwer AcademicPublishers.Brants T. & C.Samuelsson 1995.
Tagging theTeleman Corpus, in Proc.10th Nordic Conferenceof Computational Linguistics, Helsinki, 1-12.Bresnan, Joan.
2001.
Lexical-Functional Syntax.Blackwells.Carroll, John A.
2000.
Statistical Parsing, in R.Dale,H.Moisl, H.Somers 2000.
Handbook of NaturalLanguage Processing, Marcel Dekker, NewYork, Chapt.22, 525-43.Delmonte R. 2002.
GETARUN PARSER - A parserequipped with Quantifier Raising and AnaphoricBinding based on LFG, Proc.
LFG2002Conference, Athens, pp.130-153, athttp://cslipublications.stanford.edu/hand/miscpubsonline.html.Delmonte R. 2000a.
Parsing Preferences andLinguistic Strategies, in LDV-Forum - Zeitschriftfuer Computerlinguistik und Sprachtechnologie -"Communicating Agents", Band 17, 1,2, (ISSN0175-1336), pp.
56-73.Delmonte R. 2000b.
Parsing with GETARUN,Proc.TALN2000, 7?
conf?rence annuel sur leTALN,Lausanne, pp.133-146.Preis J., 2003.
Using Grammatical Relations toCompare Parsers, in Proc., EACL, Budapest,pp.291-298.Richard Crouch, Ronald M. Kaplan, Tracy H. King,Stefan Riezler 2002.
A Comparison ofEvaluation Metrics for a Broad CoverageStochastic Parser.
In Proceedings of theWorkshop on "Parseval and Beyond", LREC'02,Las Palmas, Spain, 67-74.Tapanainen P. and Voutilainen A.
1994.
Taggingaccurately - don't guess if you know, Proc.
ofANLP '94,  pp.47-52, Stuttgart, Germany.
