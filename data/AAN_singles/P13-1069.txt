Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 701?709,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsLearning to lemmatise Polish noun phrasesAdam RadziszewskiInstitute of Informatics, Wroc?aw University of TechnologyWybrzez?e Wyspian?skiego 27Wroc?aw, Polandadam.radziszewski@pwr.wroc.plAbstractWe present a novel approach to nounphrase lemmatisation where the mainphase is cast as a tagging problem.
Theidea draws on the observation that thelemmatisation of almost all Polish nounphrases may be decomposed into trans-formation of singular words (tokens) thatmake up each phrase.
We perform eval-uation, which shows results similar tothose obtained earlier by a rule-based sys-tem, while our approach allows to separatechunking from lemmatisation.1 IntroductionLemmatisation of word forms is the task of find-ing base forms (lemmas) for each token in runningtext.
Typically, it is performed along POS taggingand is considered crucial for many NLP applica-tions.
Similar task may be defined for whole nounphrases (Deg?rski, 2011).
By lemmatisation ofnoun phrases (NPs) we will understand assigningeach NP a grammatically correct NP correspond-ing to the same phrase that could stand as a dic-tionary entry.The task of NP lemmatisation is rarely con-sidered, although it carries great practical value.For instance, any keyword extraction system thatworks for a morphologically rich language mustdeal with lemmatisation of NPs.
This is becausekeywords are often longer phrases (Turney, 2000),while the user would be confused to see inflectedforms as system output.
Similar situation happenswhen attempting at terminology extraction fromdomain corpora: it is usually assumed that do-main terms are subclass of NPs (Marciniak andMykowiecka, 2013).In (1) we give an example Polish noun phrase(?the main city of the municipality?).
Through-out the paper we assume the usage of the tagsetof the National Corpus of Polish (Przepi?rkowski,2009), henceforth called NCP in short.
The or-thographic form (1a) appears in instrumental case,singular.
Phrase lemma is given as (1b).
Lem-matisation of this phrase consists in reverting casevalue of the main noun (miasto) as well as itsadjective modifier (g?
?wne) to nominative (nom).Each form in the example is in singular number(sg), miasto has neuter gender (n), gmina is fem-inine (f).
(1) a.
g??wnymmaininst:sg:nmiastemcityinst:sg:ngminymunicipalitygen:sg:fb.
g?
?wnemainnom:sg:nmiastocitynom:sg:ngminymunicipalitygen:sg:fAccording to the lemmatisation principles ac-companying the NCP tagset, adjectives are lem-matised as masculine forms (g?
?wny), hence it isnot sufficient to take word-level lemma nor the or-thographic form to obtain phrase lemmatisation.Deg?rski (2011) discuses some similar cases.
Healso notes that this is not an easy task and lemmaof a whole NP is rarely a concatenation of lem-mas of phrase components.
It is worth stressingthat even the task of word-level lemmatisation isnon-trivial for inflectional languages due to a largenumber of inflected forms and even larger num-ber of syncretisms.
According to Przepi?rkowski(2007), ?a typical Polish adjective may have 11textually different forms (.
.
. )
but as many as 70different tags (2 numbers ?
7 cases ?
5 genders)?,which indicates the scale of the problem.
What ismore, several syntactic phenomena typical for Pol-ish complicate NP lemmatisation further.
E.g., ad-jectives may both precede and follow nouns theymodify; many English prepositional phrases arerealised in Polish using oblique case without anyproposition (e.g., there is no standard Polish coun-701terpart for the preposition of as genitive case isused for this purpose).In this paper we present a novel approach tonoun phrase lemmatisation where the main phaseis cast as a tagging problem and tackled using amethod devised for such problems, namely Con-ditional Random Fields (CRF).2 Related worksNP lemmatisation received very little attention.This situation may be attributed to prevalence ofworks targeted at English, where the problem isnext to trivial due to weak inflection in the lan-guage.The only work that contains a complete de-scription and evaluation of an approach to thistask we were able to find is the work of Deg?r-ski (2011).
The approach consists in incorpor-ating phrase lemmatisation rules into a shallowgrammar developed for Polish.
This is implemen-ted by extending the Spejd shallow parsing frame-work (Buczyn?ski and Przepi?rkowski, 2009) witha rule action that is able to generate phrase lem-mas.
Deg?rski assumes that lemma of each NPmay be obtained by concatenating each token?sorthographic form, lemma or ?half-lemmatised?form (e.g.
grammatical case normalised to nom-inative, while leaving feminine gender).
The otherassumption is to neglect letter case: all phrases areconverted to lower case and this is not penalisedduring evaluation.
For development and evalu-ation, two subsets of NCP were chosen and manu-ally annotated with NP lemmas: development set(112 phrases) and evaluation set (224 phrases).Deg?rski notes that the selection was not entirelyrandom: two types of NPs were deliberately omit-ted, namely foreign names and ?a few groups forwhich the proper lemmatisation seemed very un-clear?.
The final evaluation was performed in twoways.
First, it is shown that the output of the en-tire system intersects only with 58.5% of the testset.
The high error rate is attributed to problemswith identifying NP boundaries correctly (29.5%of test set was not recognised correctly with re-spect to phrase boundaries).
The other experimentwas to limit the evaluation to those NPs whoseboundaries were recognised correctly by the gram-mar (70.5%).
This resulted in 82.9% success rate.The task of phrase lemmatisation bears a closeresemblance to a more popular task, namely lem-matisation of named entities.
Depending on thetype of named entities considered, those two maybe solved using similar or significantly differentmethodologies.
One approach, which is especiallysuitable for person names, assumes that nominat-ive forms may be found in the same source as theinflected forms.
Hence, the main challenge is todefine a similarity metric between named entities(Piskorski et al, 2009; Kocon?
and Piasecki, 2012),which can be used to match different mentions ofthe same names.
Other named entity types may berealised as arbitrary noun phrases.
This calls formore robust lemmatisation strategies.Piskorski (2005) handles the problem of lem-matisation of Polish named entities of varioustypes by combining specialised gazetteers withlemmatisation rules added to a hand-written gram-mar.
As he notes, organisation names are oftenbuilt of noun phrases, hence it is important to un-derstand their internal structure.
Another interest-ing observation is that such organisation names areoften structurally ambiguous, which is exempli-fied with the phrase (2a), being a string of itemsin genitive case (?of the main library of the HigherSchool of Economics?).
Such cases are easier tosolve when having access to a collocation diction-ary ?
it may be inferred that there are two colloc-ations here: Biblioteka G?
?wna and Wyz?sza Szko?aHandlowa.
(2) a.
Bibliotekilibrarygen:sg:fG??wnejmaingen:sg:fWyz?szejhighergen:sg:fSzko?yschoolgen:sg:fHandlowejcommercialgen:sg:fb.
Bibliotekalibrarynom:sg:fG?
?wnamainnom:sg:fWyz?szejhighergen:sg:fSzko?yschoolgen:sg:fHandlowejcommercialgen:sg:fWhile the paper reports detailed figures onnamed entity recognition performance, the qual-ity of lemmatisation is assessed only for all entitytypes collectively: ?79.6 of the detected NEs werelemmatised correctly?
(Piskorski, 2005).3 Phrase lemmatisation as a taggingproblemThe idea presented here is directly inspired by De-g?rski?s observations.
First, we will also assume702that lemma of any NP may be obtained by concat-enating simple transformations of word forms thatmake up the phrase.
As we will show in Sec.
4,this assumption is virtually always satisfied.
Wewill argue that there is a small finite set of inflec-tional transformations that are sufficient to lem-matise nearly every Polish NP.Consider example (1) again.
Correct lemmat-isation of the phrase may be obtained by apply-ing a series of simple inflectional transformationsto each of its words.
The first two words need tobe turned into nominative forms, the last one isalready lemmatised.
This is depicted in (3a).
Toshow the real setting, this time we give full NCPtags and word-level lemmas assigned as a result oftagging.
In the NCP tagset, the first part of eachtag denotes grammatical class (adj stands for ad-jective, subst for noun).
Adjectives are also spe-cified for degree (pos ?
positive degree).
(3) a.
g??wnymg??wnyadj:sg:inst:n:posmiastemmiastosubst:sg:inst:ngminygminasubst:sg:gen:fb.
g?
?wneadj:sg:nom:n:poscas=nommiastosubst:sg:nom:ncas=nomgminysubst:sg:gen:f=Example (3b) consists of three rows: the lem-matised phrase, the desired tags (tags that wouldbe attached to tokens of the lemmatised phrase)and the transformations needed to obtain lemmafrom orthographic forms.
The notation cas=nommeans that to obtain the desired form (e.g.
g?
?wne)you need to find an entry in a morphological dic-tionary that bears the same word-level lemma asthe inflected form (g?
?wny) and a tag that res-ults from taking the tag of the inflected form(adj:sg:inst:n:pos) and setting the valueof the tagset attribute cas (grammatical case) tothe value nom (nominative).
The transformationlabelled = means that the inflected form is alreadyequal to the desired part of the lemma, hence notransformation is needed.A tagset note is in order.
In the NCP tag-set each tag may be decomposed into grammat-ical class and attribute values, where the choiceof applicable attributes depends on the grammat-ical class.
For instance, nouns are specified fornumber, gender and case.
This assumption is im-portant for our approach to be able to use simpletag transformations in the form replace the valueof attribute A with the new value V (A=V).
This isnot a serious limitation, since the same assumptionholds for most tagsets developed for inflectionallanguages, e.g., the whole MULTEXT-East fam-ily (Erjavec, 2012), Czech tagset (Jakub?c?ek et al,2011).Our idea is simple: by expressing phrase lem-matisation in terms of word-level transformationswe can reduce the task to tagging problem andapply well known Machine Learning techniquesthat have been devised for solving such problems(e.g.
CRF).
An important advantage is that this al-lows to rely not only on the information containedwithin the phrase to be lemmatised, but also ontokens belonging to its local neighbourhood.Assuming that we have already trained a statist-ical model, we need to perform the following stepsto obtain lemmatisation of a new text:1.
POS tagging,2.
NP chunking,3.
tagging with transformations by applying thetrained model,4.
application of transformations to obtain NPlemmas (using a morphological dictionary togenerate forms).To train the statistical model, we need trainingdata labelled with such transformations.
Probablythe most reliable way to obtain such data wouldbe to let annotators manually encode a trainingcorpus with such transformations.
However, thetask would be extremely tedious and the annotat-ors would probably have to undergo special train-ing (to be able to think in terms of transforma-tions).
We decided for a simpler solution.
Theannotators were given a simpler task of assigningeach NP instance a lemma and a heuristic proced-ure was used to induce transformations by match-ing the manually annotated lemmas to phrases?
or-thographic forms using a morphological diction-ary.
The details of this procedure are given in thenext section.We decided to perform the experiments usingthe data from Polish Corpus of Wroc?aw Univer-703sity of Technology1 (Broda et al, 2012).
Thecorpus (abbreviated to KPWr from now on) con-tains manual shallow syntactic annotation whichincludes NP chunks and their syntactic heads.
Themain motivation to use this corpus was its verypermissive licence (Creative Commons Attribu-tion), which will not constrain any further use ofthe tools developed.
What is more, it allowed usto release the data annotated manually with phraselemmas and under the same licence2.One of the assumptions of KPWr annotation isthat actual noun phrases and prepositional phrasesare labelled collectively as NP chunks.
To ob-tain real noun phrases, phrase-initial prepositionsmust be stripped off3.
For practical reasons we de-cided to include automatic recognition of phrase-initial prepositions into our model: we introduceda special transformation for such cases (labelledp), having the interpretation that the token belongsto a phrase-initial preposition and should be dis-carded when generating phrase lemma.
Preposi-tions are usually contained in single tokens.
Thereare some cases of multi-word units which we treatas prepositions (secondary prepositions), e.g.
zewzgle?du na (with respect to).
This solution allowsto use our lemmatiser directly against chunker out-put to obtain NP lemmas from both NPs and PPs.For instance, the phrase o przenoszeniu bakteriidroga?
p?ciowa?
(about sexual transmission of bac-teria) should be lemmatised to przenoszenie bak-terii droga?
p?ciowa?
(sexual transmission of bac-teria).4 Preparation of training dataFirst, simple lemmatisation guidelines were de-veloped.
The default strategy is to normalise thecase to nominative and the number to singular.
Ifthe phrase was in fact prepositional, phrase-initialpreposition should be removed first.
If changingthe number would alter semantics of the phrase,it should be left plural (e.g., warunki ?conditions?as in terms and conditions).
Some additional ex-ceptions concern pronouns, fixed expressions and1We used version 1.1 downloaded from http://www.nlp.pwr.wroc.pl/kpwr.2The whole dataset described in this paper is avail-able at http://nlp.pwr.wroc.pl/en/static/kpwr-lemma.3Note that if we decided to use the data from NCP, wewould still have to face this issue.
Although an explicit dis-tinctions is made between NPs and PPs, NPs are not annot-ated as separate chunks when belonging to a PP chunk (anassumption which is typical for shallow parsing).proper names.
They were introduced to obtainlemmas that are practically most useful.A subset of documents from KPWr corpus wasdrawn randomly.
Each NP/PP belonging to thissubset was annotated manually.
Contrary to (De-g?rski, 2011), we made no exclusions, so the ob-tained set contains some foreign names and a num-ber of cases which were hard to lemmatise manu-ally.
Among the latter there was one group wefound particularly interesting.
It consisted of itemsfollowing the following pattern: NP in plural mod-ified by another NP or PP in plural.
For manycases it was hard to decide if both parts were tobe reverted to singular, only the main one or per-haps both of them should be left in plural.
Wepresent two such cases in (4a) and (4b).
For in-stance, (4b) could be lemmatised as opis tytu?u zWikipedii (description of a Wikipedia title), but itwas not obvious if it was better than leaving thewhole phrase as is.
(4) a. obawy ze strony autor?w?concerns on the part of the authors?b.
opisy tytu?
?w z Wikipedii?descriptions of the Wikipedia titles?Altogether, the annotated documents contain1669 phrases.
We used the same implementa-tion of the 2+1 model which was used to annotatemorphosyntax in NCP (Przepi?rkowski and Sz-a?kiewicz, 2012): two annotators performed thetask independently, after which their decisionswere compared and the discrepancies were high-lighted.
The annotators were given a chance torethink their decisions concerning the highlightedphrases.
Both annotators were only told whichphrases were lemmatised differently by the otherparty but they didn?t know the other decision.
Thepurpose of this stage was to correct obvious mis-takes.
Their output was finally compared, result-ing in 94% phrases labelled identically (90% be-fore reconsidering decisions).
The remaining dis-crepancies were decided by a superannotator.
Thewhole set was divided randomly into the develop-ment set (1105 NPs) and evaluation set (564 NPs).The development set was enhanced with word-level transformations that were induced automat-ically in the following manner.
The procedure as-sumes the usage of a morphological dictionary ex-tracted from Morfeusz SGJP analyser4 (Wolin?ski,4morfeusz-SGJP-src-20110416 package7042006).
The dictionary is stored as a set of (ortho-graphic form, word-level lemma, tag).
The pro-cedure starts with tokenisation of the manually as-signed lemma.
Next, a heuristic identification ofphrase-initial preposition is performed.
The as-sumption is that, having cut the preposition, all theremaining tokens of the original inflected phrasemust be matched 1:1 to corresponding tokens fromthe human-assigned lemma.
If any match problemdid occur, an error was reported and such a casewas examined manually.
The only problems en-countered were due to proper names unknown tothe dictionary and misspelled phrases (altogetherabout 10 cases).
Those cases were dealt withmanually.
Also, all the extracted phrase-initialprepositions were examined and no controversywas found.The input and output to the matching procedureis illustrated in Fig.
1.
The core matching hap-pens at token level.
The task is to find a suit-able transformation for the given inflected formfrom the original phrase, its tag and word-levellemma, but also given the desired form being partof human-assigned lemma.
If the inflected formis identical to the desired human-assigned lemma,the ?=?
transformation is returned without any taganalysis.
For other cases the morphological dic-tionary is required.
For instance, the inflectedform tej tagged as adj:sg:loc:f:pos shouldbe matched to the human-assigned form ta (therow label H lem).
The first subtask is to findall entries in the morphological dictionary withthe orthographic form equal to human-assignedlemma (ta), the word-level lemma equal to thelemma assigned by the tagger (ten) and having atag with the same grammatical class as the tag-ger has it (adj; we deliberately disallow trans-formations changing the grammatical class).
Theresult is a set of entries with the given lemmaand orthographic form, but with different tags at-tached.
For the example considered, two tagsmay be obtained: adj:sg:nom:f:pos andadj:sg:voc:f:pos (the former is in nomin-ative case, the latter ?
in vocative).
Each of theobtained tags is compared to the tag attached tothe inflected forms (adj:sg:loc:f:pos) andthis way candidate transformations are generated(cas=nom and cas=voc here).
The transform-ations are heuristically ranked.
Most importantly,obtained from http://sgjp.pl/morfeusz/dopobrania.html.
The package is available under2-clause BSD licence.cas=nom is always preferred, then nmb=sg (en-forcing singular number), then transforming thegender to different values, preferably to masculineinanimate (gnd=m3).
The lowest possible rankingis given to a transformation enforcing case valueother than nominative.Original: przy tej drodzeT tags: prep: adj: subst:loc sg:loc:f:pos sg:loc:fT lem: przy ten drogaH lem: ta drogaTransf.
: p cas=nom cas=nomFigure 1: Matching of an NP and its lemma.
Thefirst row shows the original inflected form.
Thenext three present tagger output: tags (split intotwo rows) and lemmas.
H lem stands for the lemmaassigned by a human.
Last row presents the trans-formations induced.We are fully aware of limitations of this ap-proach.
This ranking was inspired only by intu-ition obtained from the lemmatisation guidelinesand the transformations selected this way may bewrong in a number of cases.
While many trans-formations may lead to obtaining the same lemmafor a given form, many of them will still be ac-cidental.
Different syncretisms may apply to dif-ferent lexemes, which can negatively impact theability of the model to generalise from one phraseto other.
On the other hand, manual inspection ofsome fragments suggest that the transformationsinferred are rarely unjustified.The frequencies of all transformations inducedfrom the development set are given in Tab.
1.Note that the first five most frequent transforma-tion make up 98.7% of all cases.
These findingssupport our hypothesis that a small finite set oftransformations is sufficient to express lemmatisa-tion of nearly every Polish NP.We have also tested an alternative variant ofthe matching procedure that included additionaltransformation ?lem?
with the meaning take theword-level lemma assigned by the tagger as thecorrect lemmatisation.
This transformation couldbe induced after an unsuccessful attempt to inducethe ?=?
transformation (i.e., if the correct human-assigned lemmatisation was not identical to ortho-graphic form).
This resulted in replacing a numberof tag-level transformations (mostly cas=nom)with the simple ?lem?.
The advantage of this vari-705= 2444 72%cas=nom 434 13%p 292 9%nmb=sg 97 3%cas=nom,nmb=sg 76 2%gnd=m3 9cas=nom,gnd=m3,nmb=sg 7gnd=m3,nmb=sg 6acn,cas=nom 5acm=rec,cas=nom 3cas=gen 3cas=nom,gnd=m3 3cas=nom,gnd=m1 2gnd=f,nmb=sg 2cas=nom,gnd=f 1cas=nom,gnd=f,nmb=sg 1cas=nom,nmb=pl 1cas=nom,nmb=sg,gnd=m3 1Total 3387 100%Table 1: Frequencies of transformations.ant is that application of this transformation doesnot require resorting to the dictionary.
The disad-vantage is that it is likely to worsen the general-ising power of the model.5 CRF and featuresThe choice of CRF for sequence labelling wasmainly influenced by its successful application tochunking of Polish (Radziszewski and Pawlaczek,2012).
The work describes a feature set pro-posed for this task, which includes word forms in alocal window, values of grammatical class, gender,number and case, tests for agreement on number,gender and case, as well as simple tests for lettercase.We took this feature set as a starting point.
Thenwe performed some experiments with feature gen-eration and selection.
For this purpose the devel-opment set was split into training and testing part.The most obvious, yet most successful change wasto introduce features returning the chunk tag as-signed to a token.
As KPWr also contains inform-ation on the location of chunks?
syntactic headsand this information is also output by the chunker,we could also use this in our features.
Anotherimprovement resulted from completely removingtests for grammatical gender and limiting the em-ployed tests for number to the current token.The final feature set includes the followingitems:?
the word forms (turned lower-case) of tokensoccupying a local window (?2, .
.
.
, +2),?
word form bigrams: (?1, 0) and (0, 1),?
chunk tags (IOB2 tags concatenated withBoolean value denoting whether the syntactichead is placed at the position), for a localwindow (?1, 0, +1)?
chunk tags (IOB2 tags only) for positions ?2and +2, and two chunk tag bigrams: (?1, 0)and (0, 1),?
grammatical class of tokens in the window(?2, .
.
.
, +2),?
grammatical class for the focus token (0) con-catenated with the last character of the word-form,?
values of grammatical case for tokens(?2,?1, +1, +2),?
grammatical class of the focus token concat-enated with its gender value,?
2-letter prefix of the word form (lower-cased),?
tests for agreements and letter case as in(Radziszewski and Pawlaczek, 2012).6 EvaluationThe performed evaluation assumed training of theCRF on the whole development set annotated withthe induced transformations and then applying thetrained model to tag the evaluation part with trans-formations.
Transformations were then appliedand the obtained phrase lemmas were comparedto the reference annotation.
This procedure in-cludes the influence of deficiencies of the morpho-logical dictionary.
The version of KPWr used herewas tagged automatically using the WCRFT tag-ger (Radziszewski, 2013), hence tagging errors arealso included.Deg?rski (2011) reports separate figures for theperformance of the entire system (chunker + NPlemmatiser) on the whole test set and performanceof the entire system limiting the test set only tothose phrases that the system is able to chunk cor-rectly (i.e., to output correct phrase boundaries).Such a choice is reasonable given that his system706is based on rules that intermingle chunking withlemmatisation.
We cannot expect the system tolemmatise correctly those groups which it is un-able to capture.
Our approach assumes two-stageoperation, where the chunker stage is partially in-dependent from the lemmatisation.
This is why wedecided to report performance of the whole sys-tem on the whole test set, but also, performanceof the lemmatisation module alone on the wholetest set.
This seems more appropriate, since thechunker may be improved or completely replacedindependently, while discarding the phrases thatare too hard to parse is likely to bias the evalu-ation of the lemmatisation stage (what is hard tochunk is probably also hard to lemmatise).For the setting where chunker was used, weused the CRF-based chunker mentioned in theprevious section (Radziszewski and Pawlaczek,2012).
The chunker has been trained on the en-tire KPWr except for the documents that belong tothe evaluation set.Deg?rski (2011) uses concatenation of word-level base forms assigned by the tagger as abaseline.
Observation of the development set sug-gests that returning the original inflected NPs maybe a better baseline.
We tested both variants.
Asdetection of phrase-initial prepositions is a part ofour task formulation, we had to implement it inthe baseline algorithms as well.
Otherwise, thecomparison would be unfair.
We decided to imple-ment both baseline algorithms using the same CRFmodel but trained on fabricated data.
The trainingdata for the ?take-orthographic-form?
baseline wasobtained by leaving the ?remove-phrase-initial-preposition?
(?p?)
transformation and replacing allothers with ?=?.
Similarly, for the ?take-lemma?baseline, other transformations were substitutedwith ?lem?.The results of the full evaluation are presen-ted in Tab.
2.
The first conclusion is that thefigures are disappointingly low, but comparablewith the 58.5% success rate reported in (Deg?rski,2011).
The other observation is that the proposedsolution significantly outperforms both baseline,out of which the ?take-orthographic-form?
(orthbaseline) performs slightly better.
Also, it turnsout that the variation of the matching proced-ure using the ?lem?
transformation (row labelledCRF lem) performs slightly worse than the proced-ure without this transformation (row CRF nolem).This supports the suspicion that relying on word-level lemmas may reduce the ability to generalise.Algorithm Prec.
Recall FCRF nolem 55.1% 56.9% 56.0%CRF lem 53.7% 55.5% 54.6%orth baseline 38.6% 39.9% 39.2%lem baseline 36.2% 37.4% 36.8%Table 2: Performance of NP lemmatisation includ-ing chunking errors.Results corresponding to performance of thelemmatisation module alone are reported in Tab.
3.The test has been performed using chunk bound-aries and locations of syntactic heads taken fromthe reference corpus.
In this settings recall andprecision have the same interpretation, hence wesimply refer to the value as accuracy (percentageof chunks that were lemmatised correctly).
Thefigures are considerably higher than those repor-ted in Tab.
2, which shows the huge impact ofchunking errors.
It is worth noting that the bestaccuracy achieved is only slightly lower than thatachieved by Deg?rski (82.9%), while our task isharder.
As mentioned above, in Deg?rski?s setting,the phrases that are too hard to parse are excludedfrom the test set.
Those phrases are also likely tobe hard cases for lemmatisation.
The other import-ant difference stems from phrase definitions usedin both corpora; NPs in NCP are generally shorterthan the chunks allowed in KPWr.
Most notably,KPWr allows the inclusion of PP modifiers withinNP chunks (Broda et al, 2012).
It seems likelythat the proposed algorithm would performed bet-ter when trained on data from NCP which assumessimpler NP definition.
Note that the complex NPdefinition in KPWr also explains the huge gapbetween results of lemmatisation alone and lem-matisation including chunking errors.Algorithm Correct lemmas AccuracyCRF nolem 455 / 564 80.7%CRF lem 444 / 564 78.7%orth baseline 314 / 564 55.7%lem baseline 290 / 564 51.4%Table 3: Performance of NP lemmatisation alone.We also checked the extent to which the entriesunknown to the morphological dictionary couldlower the performance of lemmatisation.
It turnedout that only 8 words couldn?t be transformedduring evaluation due to lack of the entries that707were sought in the morphological dictionary, outof which 5 were anyway handled correctly in theend by using the simple heuristic to output the ?=?transformation when everything else fails.A rudimentary analysis of lemmatiser output in-dicates that the most common error is the assign-ment of the orthographic form as phrase lemmawhere something else was expected.
This seemsto concern mostly many NPs that are left in plural,even simple ones (e.g.
audycje telewizyjne ?TVprogrammes?
), but there are also some cases ofpersonal pronouns left in oblique case (was ?you-pl-accusative/genitive?).
It seems that a part ofthese cases come from tagging errors (even if thecorrect transformation is obtained, the results of itsapplication depend on the tag and lemma attachedto the inflected form by the tagger).
Not surpris-ingly, proper names are hard cases for the model(e.g.
Pod Napie?ciem was lemmatised to napie?cie,which would be correct weren?t it a title).7 Conclusions and further workWe presented a novel approach to lemmatisationof Polish noun phrases.
The main advantageof this solution is that it allows to separate thelemmatisation phrase from the chunking phrase.Deg?rski?s rule-based approach (Deg?rski, 2011)was also built on top of an existing parser but, as henotes, to improve the lemmatisation accuracy, thegrammar underlying the parser should actually berewritten with lemmatisation in mind.
The otheradvantage of the approach presented here is thatit is able to learn from a corpus containing manu-ally assigned phrase lemmas.
Extending existingchunk-annotated corpora with phrase lemmas cor-responds to a relatively simple annotation task.The performance figures obtained by our al-gorithm are comparable with that of Deg?rski?sgrammar, while the conditions under which oursystem was evaluated were arguably less favour-able.
To enable a better comparison it wouldbe desirable to evaluate our approach against thephrases from NCP.The main disadvantage of the approach lies inthe data preparation stage.
It requires some semi-manual work to obtain labelling with transform-ations, which is language- and tagset-dependent.A very interesting alternative has been suggestedby an anonymous reviewer: instead of consideringtag-level transformations that require an exhaust-ive morphological dictionary, it would be simplerto rely entirely on string-to-string transformationsthat map inflected forms to their expected coun-terparts.
Such transformations may be expressedin terms of simple edit scripts, which has alreadybeen successfully applied to word-level lemmat-isation of Polish and other languages (Chrupa?aet al, 2008).
This way, the training data labelledwith transformations could be obtained automatic-ally.
What is more, application of such transform-ations also does not depend on the dictionary.
It isnot obvious how this would affect the performanceof the module and, hence, needs to be evaluated.We plan this as our further work.Also, it would be worthwhile to evaluate thepresented solution for other Slavic languages.AcknowledgmentsThis work was financed by Innovative EconomyProgramme project POIG.01.01.02-14-013/09.ReferencesRobert Bembenik, ?ukasz Skonieczny, HenrykRybin?ski, Marzena Kryszkiewicz, and MarekNiezg?dka, editors.
2013.
Intelligent Tools forBuilding a Scientific Information Platform, volume467 of Studies in Computational Intelligence.Springer Berlin Heidelberg.Bartosz Broda, Micha?
Marcin?czuk, Marek Mazi-arz, Adam Radziszewski, and Adam Wardyn?ski.2012.
KPWr: Towards a free corpus of Pol-ish.
In Nicoletta Calzolari, Khalid Choukri, ThierryDeclerck, Mehmet Ug?ur Dog?an, Bente Maegaard,Joseph Mariani, Jan Odijk, and Stelios Piperidis,editors, Proceedings of LREC?12, Istanbul, Turkey.ELRA.Aleksander Buczyn?ski and Adam Przepi?rkowski.2009.
Human language technology.
challengesof the information society.
chapter Spejd: AShallow Processing and Morphological Disambigu-ation Tool, pages 131?141.
Springer-Verlag, Berlin,Heidelberg.Grzegorz Chrupa?a, Georgiana Dinu, and Josef vanGenabith.
2008.
Learning morphology with Mor-fette.
In Nicoletta Calzolari, Khalid Choukri,Bente Maegaard, Joseph Mariani, Jan Odijk, SteliosPiperidis, and Daniel Tapias, editors, Proceedingsof the Sixth International Conference on LanguageResources and Evaluation (LREC?08), Marrakech,Morocco, may.
European Language Resources As-sociation (ELRA).
?ukasz Deg?rski.
2011.
Towards the lemmatisationof Polish nominal syntactic groups using a shallow708grammar.
In Pascal Bouvry, Mieczys?aw A. K?opo-tek, Franck Leprevost, Ma?gorzata Marciniak, Ag-nieszka Mykowiecka, and Henryk Rybin?ski, editors,Security and Intelligent Information Systems: Inter-national Joint Conference, SIIS 2011, Warsaw, Po-land, June 13-14, 2011, Revised Selected Papers,volume 7053 of Lecture Notes in Computer Science,pages 370?378.
Springer-Verlag.Toma?
Erjavec.
2012.
MULTEXT-East: morphosyn-tactic resources for Central and Eastern Europeanlanguages.
Language Resources and Evaluation,46(1):131?142.Milo?
Jakub?c?ek, Vojte?ch Kov?r?, and Pavel ?merk.2011.
Czech morphological tagset revisited.
InProceedings of Recent Advances in Slavonic NaturalLanguage Processing, pages 29?42, Brno.Jan Kocon?
and Maciej Piasecki.
2012.
Heterogeneousnamed entity similarity function.
In Petr Sojka, Ale?Hor?k, Ivan Kopec?ek, and Karel Pala, editors, Text,Speech and Dialogue, volume 7499 of Lecture Notesin Computer Science, pages 223?231.
Springer Ber-lin Heidelberg.Ma?gorzata Marciniak and Agnieszka Mykowiecka.2013.
Terminology extraction from domain texts inPolish.
In Bembenik et al (Bembenik et al, 2013),pages 171?185.Jakub Piskorski, Karol Wieloch, and Marcin Sydow.2009.
On knowledge-poor methods for person namematching and lemmatization for highly inflectionallanguages.
Information Retrieval, 12(3):275?299.Jakub Piskorski.
2005.
Named-entity recognition forPolish with SProUT.
In Leonard Bolc, ZbigniewMichalewicz, and Toyoaki Nishida, editors, Intelli-gent Media Technology for Communicative Intelli-gence, volume 3490 of Lecture Notes in ComputerScience, pages 122?133.
Springer Berlin Heidel-berg.Adam Przepi?rkowski.
2007.
Slavic information ex-traction and partial parsing.
In Proceedings of theWorkshop on Balto-Slavonic Natural Language Pro-cessing, pages 1?10, Praga, Czechy, June.
Associ-ation for Computational Linguistics.Adam Przepi?rkowski.
2009.
A comparison oftwo morphosyntactic tagsets of Polish.
In ViolettaKoseska-Toszewa, Ludmila Dimitrova, and RomanRoszko, editors, Representing Semantics in DigitalLexicography: Proceedings of MONDILEX FourthOpen Workshop, pages 138?144, Warszawa.Adam Przepi?rkowski and ?ukasz Sza?kiewicz.2012.
Anotacja morfosk?adniowa.
In AdamPrzepi?rkowski, Miros?aw Ban?ko, Rafa?
L. G?rski,and Barbara Lewandowska-Tomaszczyk, editors,Narodowy Korpus Je?zyka Polskiego.
WydawnictwoNaukowe PWN, Warsaw.Adam Radziszewski and Adam Pawlaczek.
2012.Large-scale experiments with NP chunking of Pol-ish.
In Proceedings of the 15th International Con-ference on Text, Speech and Dialogue, Brno, CzechRepublic.
Springer Verlag.Adam Radziszewski.
2013.
A tiered CRF tagger forPolish.
In Bembenik et al (Bembenik et al, 2013),pages 215?230.Peter Turney.
2000.
Learning algorithms for keyphraseextraction.
Information Retrieval, 2:303?336.Marcin Wolin?ski.
2006.
Morfeusz ?
a practicaltool for the morphological analysis of Polish.
InMieczys?aw A. K?opotek, S?awomir T. Wierzchon?,and Krzysztof Trojanowski, editors, Proceedings ofIIPWM?06, pages 511?520, Ustron?, Poland, June19?22.
Springer-Verlag, Berlin.709
