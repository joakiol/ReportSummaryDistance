Interaction of Knowledge Sources in aPortable Natural Language InterfaceCarole D. HafnerComputer Science DepartmentGeneral Motors Research LaboratoriesWarren, MI 48090AbstractThis paper describes a general approach to thedesign of natural language interfaces that hasevolved during the development of DATALOG, an Eng-lish database query system based on Cascaded ATNgrammar.
By providing separate representationschemes for linguistic knowledge, general worldknowledge, and application domain knowledge,DATALOG achieves a high degree of portability andextendability.1.
IntroductionAn area of continuing interest and challenge incomputational linguistics is the development oftechniques for building portable natural language(NL) interfaces (See, for example, \[9,3,12\]).
Theinvestigation of this problem has led to severalNL systemS, including TEAM \[7\], IRUS \[i\], andINTELLECT \[10\], which separate domain-dependentinformation from other, more general capabilities,and thus have the ability to be transported fromone application to another.
However, it is impor-tant to realize that the domain-independent por-tions of such systems constrain both the form andthe content of the domain-dependent portions.Thus, in order to understand a system's capabili-ties, one must have a clear picture of the struc-ture of interaction among these modules.This paper describes a general approach to thedesign of NL interfaces, focusing on the structureof interaction among the components of a portableNL system.
The approach has evolved during thedevelopment of DATALOG (for "database dialogue")an esperimental system that accepts a wide varietyof English queries and commands and retreives theanswer from the user's database.
If no items sat-isfy the user's request, DATALOG gives an informa-tive response explaining what part of the querycould not be satisfied.
(Generation of responsesin DATALOG is described in another report \[6\].
)Although DATALOG is primarily a testbed forresearch, it has been applied to several demon-stration databases ~nd one "real" database con-taining descriptions and rental information formore than 500 computer hardware units.The portability of DATALOG is based on theindependent specification of three kinds of knowl-edge that such a system must have: a linguisticgrammar of English; a general semantic model ofdatabase objects and relationships; and a domainmodel representing the particular concepts of theapplication domain.
After giving a brief overviewof the architecture of DATALOG, the remainder ofthe paper will focus on the interactions among thecomponents of the system, first describing theinteraction between syntax and semantics, and thenthe interaction between general knowledge anddomain knowledge.2.
Overview of DATALOG ArchitectureThe architecture of DATALOG is based on Cas-caded ATN grammar, a general approach to thedesign of language processors which is an exten-sion of Augmented Transition Network grammar \[13\].The Cascaded ATN approach to NL processing wasfirst developed in the RUS parser \[2\] and was for-mally characterized by Woods \[14\].
Figure 1 showsthe architecture of a Cascaded ATN for NL process-ing: the syntactic-and semantic components areimplemented as separate processes which operate inparallel, communicating information back andforth.
This communication (represented by the"interface" portions of the diagram) allows a lin-guistic ATN grammar to interact with a semanticprocessor, creating a conceptual representation ofthe input in a step-by-step manner and rejectingsemantically incorrect analyses at an early stage.DATALOG extends the architecture shown in Fig-ure 1 in the direction of increased portability,by dividing semantics into two parts (see Figure2).
A "general" semantic processor based on therelational model of data \[5\] interprets a widevariety of information requests applied toinputATNGRAMMARinterface)combined syntactic/semantic analysisinterfaceSEMANTICSFigure i. Cascaded Architecture forNatural Language Processing57ATNinput combined syntactic/semantic analysisinterface1Figure 2.
Architecture Of DATALOGabstract database objects.
This level of knowl-edge is equivalent to what Hendrix has labelled"pragmatic grammar" \[9\].
Domain knowledge is rep-resented in a semantic network, which encodes theconceptual structure of the user's database.These two levels of knowledge representation ar~linked together, as described in Section 4 below.The output of the cascaded ATN grammar is acombined linguistic and conceptual representationof the query (see Figure 3), which includes a"SEMANTICS" component along with the usual lin-guistic constituents in the interpretation of eachphrase.3.
Interaction of Syntax and SemanticsThe DATALOG interface between syntax and seman-tics is a simplification of the RUS approach,which has been described in detail elsewhere \[ii\].The linguistic portion of the interface is imple-Pushing for Noun Phrase.ASSIGN Actions :employeeemployeeemployeeemployeePopping Noun Phrase:(NP(DET (the))mented by adding a new arc action called "ASSIGN"to the ATN model of grammar.
ASSIGN communicatespartial linguistic analyses to a semantic inter-preter, which incrementally creates a conceptualrepresentation of the input.
If an assignment isnonsensical or incompatible with previous assign-ments, the semantic interpreter can reject theassignment, causing the parser to back up and tryanother path through the grammar.In DATALOG, ASSIGN is a function of three argu-ments: the BEAD of the current clause or phrase,the CONSTITUENT which is being added to the inter-pretation of the phrase, and the SYNTACTIC SLOTwhich the constituent occupies.
As a simplifiedexample, an ATN gram, mr might process noun phrasesby "collecting" determiners, numbers, superlativesand other pre-modifiers in registers until thehead noun is found.
Then the head is assigned tothe NPHEAD slot; the pre-modifiers are assigned(in reverse order) to the NPPREMOD slot; superla-tives are assigned to the SUPER slot; and numbersare assigned to the NUMBER slot.
Finally, thedeterminers are assigned to the DETERMINER slot.If all of these assignments are acceptable to thes~m~ntic interpreter, an interpretation is con-structed for the "base noun phrase", and the par-ser can then begin to process the noun phrasepost-modifiers.
Figure 3 illustrates the inter-pretation of "the tallest female employee",according to this scheme.
A more detaileddescription of how DATALOG constructs interpreta-tions is contained in another report \[8\].During parsing, semantic information is col-lected in "semantic" registers, which are inacces-sible (by convention) to the grammar.
This con-vention ensures the generality of the grammar;although the linguistic component (through theassignment mechanism) controls the informationthat is passed to the semantic interpreter, theonly information that flows back to the grazm~ar isCONSTITUENT SYNTACTIC SLOTemployee NPHEAD(AMOD female) NPPREMOD(ADJp SUPER(ADV most)(ADJ tall))(the) DET(PREMODS ((ADJP (ADV most) (ADJ tall)) (AMOD female))(HEAD employee)(SEMANTICS(ENTITY(Q nil)(KIND employee)(RESTRICTIONS (((ATT sex) (RELOP ISA) (VALUE female))((ATT height) (RANKOP MOST) (CUTOFF i)) )))))Figure 3.
Interpretation of "the tallest female employee".58the acceptance or rejection of each assignment.When the grammar builds a constituent structurefor a phrase or clause, it includes an extra con-stituent called "SEMANTICS", which it takes from asemantic register.
However, generality of thegrammar is maintained by forbidding the gra~mmar toexamine the contents of the SEMANTICS constituent.4.
Interaction of General and ApplicationSemanticsThe semantic interpreter is divided into twolevels: a "lower-level" semantic network repre-senting the objects and relationships in theapplication domain; and a "higher-level" networkrepresenting general knowledge about databasestructures, data analysis, and informationrequests.
Each node of the domain network, inaddition to its links with other domain concepts,has a "hook" attaching it to the higher-level con-cept of which it is an instance.
Semantic proce-dures are also attached to the higher-level con-cepts; in this way, domain concepts are indirectlylinked to the semantic procedores that are used tointerpret them.Figure ?
illustrates the relationship betweenthe general concepts of DATALOG and the domainsemantic network of a personnel application.Domain concepts such as "female" and "dollar" areattached to general concepts such as /SUBCLASS/and /UNIT/.
(The higher-level concepts are delim-ited by slash "/" characters.)
When a phrase suchas "40000 dollars" is analyzed, the semanticprocedures for the general concept ,'b~::T/ areinvoked to interpret it.The general concepts also organized ~nto a net-work, which supports inheritance of s~msntic pro-cedures.
For example, two of the general conceptsin DATALOG are /ATTR/, which can represent anyattribute in the database, and /NUMATTR/, whichrepresents numeric attributes such as "salary" and"age".
Since /ATTR/ is the parent of /NUMATTR/ inthe general concept network, its semantic proce-dures are automatically invoked when required dur-ing interpretation of a phrase whose head is anumeric attribute.
This occurs whenever no/NUMATTR/ procedure exists for a given syntacticslot; thus, sub-concepts can be defined by specif-ying only those cases where their interpretationsdiffer from the parent.Figure 5 shows the same diagram as Figure 4,with concepts from the computer hardware databasesubstituted for personnel concepts.
This illus-trates how the semantic procedures that inter-preted personnel queries can be easily transportedto a different domain.5.
ConclusionsThe general approach we have taken to definingthe inter-component interactions in DATALOG hasled to a high degree of extendability.
We havebeen able to add new sub-networks to the grammarwithout making any changes in the semantic inter-preter, producing correct interpretations (andcorrect answers from the database) on the firsttry.
We have also been able to implement new gen-eral semantic processes without modifying thegrammar, taking advantage of the "conceptual fac-toring" \[14\] which is one of the benefits of theCascaded ATN approach.The use of a two-level semantic model is anexperimental approach that further adds to theportability of a Cascaded ATN grammar.
By repre-senting application concepts in an "epistemologi-cal" s~m~ntic network with a restricted set ofprimitive links (see Brao~un \[4\]), the task ofbuilding a new application of DATALOG is reducedto defining the nodes and connectivity of thisnetwork and the synonyms for the concepts repre-Which female Ph.D.s earn more than 40000 dollarsfemale ' male Ph.D. masters earni, Sex \] I-degree i I I salary iI  ploy-iFigure 4.
Interaction of Domain and General Knowledge'59sented by the nodes.
Martin et.
al.
\[12\] define atransportable NL interface as one that can acquirea new domain model by interacting with a humandatabase expert.
Although DATALOG does not yethave such a capability, the two-level semanticmodel provides a foundation for it.DATALOG is still under active development, andcurrent research activities are focused on twoproblem areas: extending the two-level semanticmodel to handle more complex databases, and inte-grating a pragmatic component for handling ana-phora and other dialogue-level phenomena into theCascaded ATN grammar.1.6.
ReferencesBates, M. and Bobrow, R. J., "InformationRetrieval Using a Transportable Natural Lan-guage Interface."
In Research and Developmentin Information Retrieval: Proc.
Sixth AnnualInternational ACM SIGIR Conf., Bathesda MD,pp.
81-86 (1983).2.
Bobrow, R. "The RUS System."
In "Research inNatural Language Understanding," BBN ReportNo.
3878.
Cambridge, MA: Bolt Beranek andNewman Inc. (1978).3.
Bobrow, R. and Webber, B. L., "Knowledge Rep-resentation for Syntactic/Semantic Process-ing."
In Proc.
of the First Annual NationalConf.
o.nn Artificial Intelligence, Palo AltoCA, pp.
316-323 (1980).4.
Brachman, R. 3., "On the Epistemological Sta-tus of Semantic Networks."
In Associative Net-works: Representation and Use of Knowledge byComputers, pp.
3-50.
Edited by N. Y. Findler,New York NY (1979).5.
Codd, E. F. "A Relational Model of Data forLarge Shared Data Banks."
Communications ofth_.~e ACM, Vol.
13, No.
6, pp.377-387 (1970).6.
Godden, K. S., "Categorizing Natural LanguageQueries for Int~lllgent Responses."
ResearchPublication 4839, General Motors Research Lab-oratories, Warren MI (1984).7.
Grosz, B. J., "TEAM: A Transportable NaturalLanguage Interface System."
In Proc.
Conf.
onApplied Natural Language Processing, SantaMonica CA, pp.
39-45 (1983).8.
Hafner, C. D. and Godden, K. S., "Design ofNatural Language Interfaces: A Case Study.
"Research Publication 4587, General MotorsResearch Laboratories, Warren MI (1984).9.
Hendrix, G. G. and Lewis, W. H., "Transporta-ble Natural Language Interfaces to Data."Proc.
19th Annual Meeting of theAssoc, fo__~rComputational Linguistics, 5tanford CA, pp.159-165 (1981).10.
INTELLECT Query System User's Guide, 2nd.
Edi-tion.
Newton Centre, MA: Artificial Intelli-gence Corp. (1980).11.
Mark, W. S. and Barton, G. E., "The RUSGRAMMARParsing System."
Research PublicationGMR-3243.
Warren, MI: General Motors ResearchLaboratories (1980).12.
Martin, P., Appelt, D., and Pereira, F.,"Transportability and Generality in a Natural-Language Interface System."
In Proc.
EightInternational Joint Conf.
on Artificial Intel-ligence, Karlsruhe, West Germany (1983).13.
Woods, W. "Transition Network Grammars forNatural Language Analysis."
Cowmunications ofthe ACM, Vol.
13, No.
10, pp.
591-606 (1970).14.
WOodS, W., "Cascaded ATN Gra/~nars."
AmericanJournal of Computational Linguistics," Vol.
6,No.
1, pp.
1-12 (1980).Which IBM terminals weigh more than 70 poundsval o val_of verb o ' unit of/Figure 5.
Figure 4 Transported to a New Domain60
