Proceedings of the 11th Meeting of the ACL-SIGMORPHON, ACL 2010, pages 9?18,Uppsala, Sweden, 15 July 2010. c?2010 Association for Computational LinguisticsVerifying Vowel Harmony TypologiesSara FinleyUniversity of RochesterRochester, NY, USAsfinley@bcs.rochester.eduAbstractThis paper applies finite state technologies toverify the typological validity of TurbidSpreading, a theory of vowel harmony in Op-timality Theory (OT) (Prince & Smolensky,1993/2004).
Previous analyses of vowel har-mony in OT have been prone to typologicalinconsistencies, predicting grammars that donot occur in natural language (Wilson, 2003).However, attempts to eliminate typologicalpathologies relying on hand-made inputs andcandidate sets have been shown to be highlyprone to error (Wilson, 2005).
Using a modi-fied version of the Contenders Algorithm(Riggle, 2004b), we verify that TurbidSpreading makes typologically valid predic-tions about the types of harmony processesthat may appear in natural language.
Thismodification of the Contenders Algorithm toinclude complex spreading interactions andintermediate representations demonstrates theutility of computational methods for verifyingthe typological predictions of complexphonological theories.1 IntroductionThe goal of Optimality Theory (OT) (Prince &Smolensky, 1993/2004) is to understand and ex-plain the mechanisms responsible for linguisticprocesses.
Because it is possible to use constraintrankings to generate a set of possible grammars,OT is fundamentally a theory of cross-linguistictypology.One of the theoretical assumptions of OT isthat it is the job of the grammar to determinewhich languages are possible and which are not.While the full typology of identifiable languagescan never be verified, it is generally agreed thatthere is a difference between unattested lan-guages that are accidental gaps and unattestedlanguages that are pathological.
While both areunattested, accidental gaps are theoretically pos-sible, and might be found given enough time.Pathological languages are languages that arelogically possible, but violate general principlesof language, and no natural language is expectedto contain such pathologies.Thus, OT assumes that a valid grammar is ty-pologically sound if it does not generate pathol-ogically unattested languages.
However, it is ex-tremely difficult to assess the typological validityof phonological analyses because the output of atypological prediction is dependent upon the setof constraints, the output candidates considered,and the underlying forms (inputs) of interest.
Thetheorist must therefore be able to consider allpossible inputs, to select an inclusive set of can-didates, and to be sure to include the relevantconstraints.
If any one of these factors is notcarefully constructed, the theorist may miss animportant typological prediction made by the OTgrammar.These challenges can be significantly dimin-ished through computational tools, such as finite-state techniques.
With such tools, it is possible tounderstand typological predictions that wouldhave likely gone unnoticed without a computa-tional model.
This paper presents the results ofcomputational models used to revise and formu-late a phonological theory.
In this paper, wemake use of finite-state methods (specificallyRiggle?s (2004b) Contenders Algorithm) to un-derstand and verify the typological predictions ofa particular theory of vowel harmony, TurbidSpreading (Finley, 2008, in press).
Without thecomputational tools presented in this paper,many unwanted predictions would have beenmade.Vowel harmony is a phonological processwhereby a particular phonological feature isshared by all vowels in a given lexical domain.For example, in Turkish vowel harmony, if thefirst vowel of the word is [+Back], all followingvowels are [+Back], creating a spreading processwhereby [+Back] is spread from the left edge ofthe word to the right.9In simple1cases of harmony, all possible vo w-els undergo spreading.
However, harmony failswhen a vowel is unable to take on the spreadingfeature (e.g., if the language does not allow[?High] vowels to be [+Back]).
In these cases thenon-participating vowel can either block har-mony and create a new spreading domain (as anopaque vowel; [+ ?
?])
or allow the spreadingdomain to skip the nonparticipating vowel (as atransparent vowel; [+ ?
+]).There are two reasons that vowel harmony inOT is an ideal candidate for the present casestudy of the use of finite-state techniques to ver-ify linguistic typologies.
First, vowel harmony iscross-linguistically widespread, with a clear ty-pology of patterns that are both frequent as wellas those that are unattested.
Further, the ways inwhich vowel harmony interacts with other proc-esses (e.g., epenthesis and deletion) are well un-derstood, such that it is possible to differentiatebetween accidental gaps and pathological unat-tested languages.
For example, direction ofspreading in vowel harmony is determined by thefeatural, morphological or (left or right) edgestatus of the potential harmony source triggervowel.
There are no languages that determine thedirection of spreading by fewest changes fromthe input to output (referred to as ?majorityrules?)
(Finley & Badecker, 2008).
However, thispattern is easy to produce using Agree con-straints which merely require adjacent vowels toagree, and do not specify direction.
It is thesekinds of unattested interactions that an idealmodel of vowel harmony in OT should avoid.This ideal model must also be able to account forthe major harmony patterns (transparency, opac-ity, etc.
).Establishing a theory of vowel harmony in OTwith both of these properties has been particu-larly problematic.
In addition to ?majority rules?patterns, interactions between non-participatingvowels and directionality of spreading haveposed a particular challenge.
For example, tradi-tional constraints used for vowel harmony (e.g.,Align and Agree) predict harmony interactionsthat do not exist, such as failure to spread toregularly undergoing vowels in the presence of anon-participating vowel, or deletion of a non-participating vowel in order to preserve agree-ment of vowel features (Wilson, 2003).
Theseharmony pathologies pose a great challenge for1Like most phonological processes, vowel harmony issubject to exceptions (Finley, 2010).
Future work will in-corporate exceptions into computational methods.vowel harmony and OT in general.
TurbidSpreading is a representational approach tovowel harmony in OT that has been designedwith this challenge in mind.The second reason that vowel harmony is anideal method for studying the interaction of theo-retical and computational methods is that vowelharmony requires rich representations.
These richrepresentations pose a unique opportunity to in-tegrate theoretical and computational method-ologies.
Specifically, we capture these rich repre-sentations through the Contenders Algorithm(Riggle, 2004b).Further, vowel harmony is an important areaof research in computational phonology (Bird &Ellison, 1994; Ellison, 1992; Goldsmith & Xan-thos, 2009) because the representation of agree-ment between vowels across consonants posesunique challenges to the learner.
This paper dif-fers from previous computational models ofvowel harmony because the present work is aninstantiation of a generative OT model.
The pre-sent work focuses on framing work done in theo-retical linguistics in a computational framework.The paper begins with a brief overview of theContenders Algorithm (Section 2).
This is fol-lowed by a description of Turbid Spreading andits formalization in finite-state representations(Section 3).
Section 4 presents the results of thetypological analysis.2 The Contenders AlgorithmRiggle?s (2004a, 2004b) algorithm uses finite-state techniques to find the set of candidates for agiven input that are possible optimal outputs un-der any possible ranking.
In order to computeconstraint violations, both GE N  and the con-straints in CON are represented in terms of a fi-nite state transducer.
The use of finite represen-tations of infinite sets of strings has importantconsequences for Optimality Theory.
As long asGEN can be represented in terms of finite-statetransducers, it is possible to represent the infinitecandidate set in terms of a single computation.When all constraints are combined and a singleinput is evaluated, there will only be a finite setof contenders2.The Contenders Algorithm creates a single fi-nite state transducer via the intersection of finite-state transducers for GEN and CON.
This com-bined transducer is an unranked grammar.
Be-2See Riggle (2004b) for proof that the list of contenderswill always be a finite set.10cause the goal of the algorithm is to produce alist of candidates that could ?win?
under someranking, the algorithm must entertain all possiblerankings.Violations of constraints are instantiatedthrough costs for specific paths in the transducer(e.g., a path that changes a [+F] vowel to a [?F]vowel may have a cost of 1, incurring a singleviolation).
The combined transducer makes itpossible to find the constraint profile for any in-put-output mappings created by GEN.
This is thecost of traversing the transducer from start tofinish for a given input-output pair.
The Con-tenders Algorithm compares violation profilesfor given constraints and candidates, making itpossible to predict which violation profiles (can-didates) are able to win under some ranking (i.e.,which candidates are contenders).The Contenders Algorithm uses Ellison?s(1994) model of finite-state transducers in OT tofind the least costly paths through the finite-stategrammar.
Because each arc of the transducer cor-responds to a segment in the string (along withthe input-output mapping for that segment), thecosts associated with that segment (i.e.
constraintviolations) are found in each arc.
These costs arestored as n-tuples that can be used to comparethe costs associated with different candidates.Riggle?s model is based on Dijktra?s (1959)shortest path algorithm.
Every time a candidateviolates a constraint, it increases the ?distance?through the transducer.
According to Dijkstra?smodel, the shortest path through a transducer isalso the shortest path through each intermediatestep (as each intermediate step serves as a subsetof the shortest path).
This means that candidatesthat incur many violations will have the mostcostly paths.
By comparing each candidate?s costfor each constraint, it is possible to find whichcandidates are harmonically bound (i.e.
cannotwin under any ranking) and which are not (thecontenders).The Contenders Algorithm selects each nodeof the intersected finite-state transducer and re-cords the cost of each arc outside that node.
Thecost of visiting that particular node is recorded ifthat cost is less than or equal to previously re-corded costs.
After all nodes have been evalu-ated, a list of the costs associated with each nodeis produced.
The Contenders Algorithm thengenerates a list of all candidates whose costs donot exceed that of the least-cost list; these are thecontenders for a given input.The output of the Contenders Algorithm for alarge set of inputs can be used to create a typo-logical analysis (Bane & Riggle, in press).
Thistypological analysis provides information aboutthe relationship between the different contendersand the rankings that produce them.
The typol-ogy is formed by inputing the list of contendersfor a range of inputs into an algorithm that com-putes Elementary Ranking Conditions (ERCs)(Prince, 2002).
ERCs produce a set of possibleranking interactions from a set of candidates andtheir violation profiles.The present paper modifies Riggle?s (2004b)model in several ways.
First, Riggle?s model isrelatively simple in terms of the types of seg-ments used.
Riggle is able to model epenthesisand deletion of segments listed as /a/ and /b/.
Inthe present model, we include binary vowel fea-tures ([?F]) that are active in vowel harmony (inaddition to consonants).
Second, the number andcomplexity of constraints are increased.
The pre-sent model allows for deletion and insertion, aswell as feature agreement and featural marked-ness.
Third, the present model adds an interme-diate level of representation between the inputand the output, thereby increasing the level ofcomplexity in both the constraints and theevaluation.
This demonstrates that Riggle?smodel is capable of handling rich representa-tions, complex phonological processes and mul-tiple assumptions about the architecture of repre-sentations in phonology.
Thus, the ContendersAlgorithm is important for a wide range ofproblems in phonological theory, and has theability to bring computational approaches toproblems that affect researchers in phonologybeyond the computational linguist.3 Turbid SpreadingTurbid Spreading is a representational approachto vowel harmony based loosely on TurbidityTheory (Goldrick, 2001), a model for opaquerepresentations in phonology.
This model useshidden representations as a method for account-ing for incremental phonological processes in aparallel fashion.
Turbid Spreading extends thisidea of hidden representations.
In TurbidSpreading, featural representations for segmentshave three levels: the underlying representation(UR), the projection level (PR), and the surfacelevel (SR).
Relations between the underlyingform and the surface form are achieved at theprojection level.
All segments have a featurevalue at the projection level.
Because we areconcerned with spreading between vowels, wefocus solely on the representations for vowels.
In11the present implementation, there is a singleharmonic feature of interest (?F) and a secondaryunary feature (B) that is penalized when a seg-ment that possess both B and +F feature values(and can therefore block harmony, such as a[+High] vowel that cannot be [+Back]).
All ?notations refer to the feature F. Thus, +B is a[+F, B] vowel and ?B is a [?F, B] vowel.All projection level representations are marked?U, ?R, ?L, and ?P.
The ?
refers to the featurevalue for F (+F/?F), and the letter (U, L, etc.
)refers to the source of the projection, describedbelow.The source of the projected feature value canbe the underlying form (a faithful representation,marked as ?U, in which +U refers to a +F vowelprojected by its underlying form, and ?U refersto a ?F vowel projected by its underlying form),a neighboring vowel (via spreading, marked as?L/?R, in which +L refers to a +F vowel pro-jected by the vowel to its left) or the phoneticrepresentation, via the surface level (marked as?P, in which  +P refers to a +F vowel projectedby its surface form).
Each vowel has one andonly one source for its projection value.In Turbid Spreading, vowel harmony isachieved when the feature value at the projectionlevel of the triggering vowel spreads to an adja-cent vowel.
In the example of spreading given inFigure 1, the pictoral representation of spreadingis given on the left, with the notational featuresgiven on the right.
The first vowel spreads [+F]to the second vowel, causing the second vowel tobe represented as +L at the projection level (be-cause it receives a [+F] feature from the vowel tothe left).
The underlying form and the surfaceform do not change as a result of spreading.
[+F]      [?F]     UR:   +F   ?F?
[+F] ?
[+F]      PR:   +U  +L[+F]     [+F]     SR:   +F  +FFigure 1: SpreadingAn important restriction on spreading is thatthe features at both sides of the ?arrows?
mustmatch (e.g., [?F] ?
[+F] is prohibited3).
In otherwords, vowels may only spread the feature valueat the projection level.
However, this does not3The present model does not account for dissimilation, butwe assume that will be accounted for by some other mecha-nism, and is subject to future work.preclude feature values from changing at differ-ent levels (e.g., from [+F] in the UR to [?F] inthe PR).
Allowing changes to feature values atdifferent levels captures both direct spreadingprocesses, as well as opaque interactions be-tween spreading and the surface form.
For exam-ple, a transparent vowel is created when [+F]spreads to a non-participating vowel (giving+L/+R at the PR) but the non-participating vowelpronounces [?F] at the SR.
In this case, the fea-ture values at the projection and pronunciationlevels will not match.
Transparent vowels there-fore satisfy spreading constraints, but violate theconstraints requiring the feature values of thesurface form and the projection level to match.For the purpose of formalizing TurbidSpreading into regular expressions for the Con-tenders Algorithm, we treat each level of repre-sentation (UR, PR and SR) as an element of atriple.
There are four feature values that appearin the UR and the SR: /+F, ?F, +B, ?B/.
Thefeature B (potential harmony blocker) is aplaceholder for a feature that may or may notspread that harmonic feature.
This allows us toplace restrictions on which vowels can undergospreading (e.g., a restriction that non-high vow-els cannot undergo back harmony).
This secon-dary feature is important for evaluating the ty-pology of interactions between participating andnon-participating vowels.The projection level  (PR) representation con-tains both featural information as well as thesource of spreading.
The feature values for F areshortened to be simply +/?.
For example, a +Fvowel projected by U is written as +U rather than+FU.
Thus, ?U implies a faithful ?F feature rep-resentation of the underlying form (e.g., ?U im-plies a faithful representation of the?F feature value in the underlying form).
?P im-plies that the phonetics has caused a change inthe representation.
?R implies leftward spreading(the vowel to right spread to the current vowel).
?L implies rightward spreading (the vowel to theleft spread to the current vowel).
The representa-tion for each string of vowels is written as [UR:PR: SR].
The pictorial representation in Figure 1is therefore [+F ?F: +U +L: +F +F].We implemented Turbid Spreading in theContenders Algorithm by using finite state im-plementations of GE N and of the constraintsknown to interact with spreading4.
Each arc ofthe transducer represents a single segment, pre-4Text versions of the FSA?s can be found at:http://www.cog.jhu.edu/grad-students/finley/fsa.pdf12sented as a tuple.
A ?.?
notation indicated that theposition in the tuple could be filled by any fea-ture value.
Non-crucial arcs were removed fromthe diagrams of finite-state transducers (but wereincluded in the formal analysis).
These includethe potential for vowel epenthesis (notated as [-])and vowel deletion (notated as an [x]).
Note thatthe symbols ?x?
and ?-?
are used solely for?bookkeeping?
purposes in the FSA?s and are notnecessarily part of the phonological representa-tion.We also removed several arcs allowing for thepresence of consonants (represented as [C]).
Be-cause projection from the surface form (+P/?P)works the same as projection from the UR (interms of vowel harmony), these are left out of thedescriptions (but were included in the formalanalysis).The transducer for Gen is given in Figure 2.This finite state transducer accepts strings ofconcatenated vowels for all potential inputs.
Thistransducer provides the basis for restrictions onthe representations for spreading.
One such re-striction is that the feature value of the projectionmust match the source feature value.
For exam-ple, a vowel with a [+U] projection must have[+F] in the UR (e.g., arc 0 to 1).
A second re-striction is a practical one; the first vowel in aword cannot be projected by the vowel to its left(because such a vowel does not exist).
The thirdrestriction is that vowels have one and only oneprojection.
Gen only produces segments thathave a single value at the projection.Figure 2: GENSpreading is initiated by a vowel whose pro-jection is its underlying form (+U/?U).
A vowelmay only be projected by +L if it follows avowel that is projected by +U (and likewise for?L).
This ensures that the only initiator forrightwards spreading is a vowel projected by itsunderlying form.In Turbid Spreading, deletion of a segmententails deletion of only the surface form; allvowels with a UR have a representation at thePR.
Epenthesis can occur at either the PR level(requiring representations at both the PR and SR)or the SR (requiring only a representation at theSR).
Epenthetic vowels at the PR level undergospreading (e.g., arc 0 to 6), whereas epentheticvowels at the SR only are transparent to spread-ing.
The difference between epenthetic and de-leted vowels is based on the fact that epentheticvowels may interact with spreading (at the pro-jection level) or be transparent (and appear onlyat the pronunciation level), but deleted vowelsmay not interact with spreading (and thereforeappear only at the pronunciation level).Rightwards spreading is instantiated in the arcsfrom state 0 to states 3, 4, 6 and 7.
Transitionsfrom 0 to 6 and 0 to 7 involve epenthetic vowels(marked with a /-/ in the UR).
Arcs from 0 to 3and 0 to 6 involve spreading -F to the left (/-R/ atthe PR).
Arcs from 0 to 7 and 0 to 4 involvespreading +F to the right (/+R/ at the PR).
In or-der for a /+R/-R/ projected vowel to reach a finalstate, the source of spreading must be +U/-U,which is reflected in the arcs from 3 to 2, and 4to 1.
Spreading from the left to right involves avowel projected by its underlying form (transi-tions 0 to 1 and 0 to 2).
From there a vowel maybe projected as +L  (state 1) or as ?L (state 2).Constraints Turbid Spreading is instantiatedthrough several constraints.
SPREAD-R andSPREAD-L initiate vowel harmony.
ID[F]-URregulates  featural identity between the underly-ing representation and the projection.
ID[F]-SRregulates featural identity between the surfacerepresentation and the projection.
Constraintsthat govern epenthesis and deletion are MAX,DEP, and *CC.
The finite state transducers ofthese constraints assign violation marks (e.g., -1)to the output whenever a violation of the con-straint is encountered.ID[F]-UR is violated once for every vowel notprojected by its underlying form.
Any vowel thathas an underlying form (i.e., not an epentheticvowel), but is not marked with ?U at the PR in-curs a violation.13Figure 3: ID[F]-UR*B is a placeholder for a featural markednessconstraint (e.g., *[+Back, ?High]).
This con-straint is violated when a vowel is marked ?B inthe input and is +F in the output (e.g., a [?High]vowel becoming [+Back]).
All other representa-tions do not receive a violation5.Figure 4: *BThe ID[F]-SR constraint is violated wheneverthe feature values at the projection and the pro-nunciation level do not match.
For example, ifthe pronunciation is [+], the projection must be+U, +L, +R or +P.Figure 5: ID[F]-SR5This constraint assumes that no vowels may lose their /B/specification from the input to the output (e.g., change from[?HIGH] to [+HIGH] in order to allow spreading of [+Back]).This process is called ?re-pairing?
(Bakovic, 2000), and issubject to future research.The ?x?
symbol is used to denote deleted vow-els, which violate MAX, which assigns a viola-tion if  ?x?
appears in the pronunciation.Figure 6: MAXDEP is the constraint violated by epenthesis,represented by the symbol ?-?
in the underlyingform.
DEP searches for any vowel with (-) in theUR and assigns a violation for each feature valuethat appears on the projection and pronunciationlevels.
Epenthesis at the pronunciation level in-curs two violations of DEP, but epenthesis at theprojection level incurs one violation.Figure 7: DEPI assume that epenthesis is driven by the mark-edness constraint *CC6.
This constraint scans thepronunciation level for two consonants in a row,and assigns a violation for every pair of conso-nants.
*CC requires two states because *CC isviolated only when there are two consecutiveconsonants, making one state for the first conso-nant (no violations), and a second state for anadjacent consonant (a violation).6In addition to *CC, other constraints such as *#C or *C#may trigger epenthesis.
For simplicity, these additional con-straints are not included in the present analysis.14Figure 8: *CCViolations for both spreading constraints areassigned directionally such that a violation on thefirst vowel is more severe than violations later inthe word (Eisner, 2000), formalized in a simpli-fied version where violations at different parts ofthe word are greater than other parts of the word.In order to prevent ?gang?
effects, violations areassigned exponentially such that for a three-vowel input, violation on the second vowel in-curs 100 violations, while a violation on the thirdvowel incurs only 10 violations.
This simplifiedversion of directional evaluation only allows fora finite number of vowels in the input.
However,because the theory is tested with inputs of 3 and4 vowels in length, these simplified transducerscapture the data analyzed here.
Future work willanalyze directional spreading for an unlimitednumber of vowels in the input.SPREAD-R is satisfied if a vowel projects an L(+/?L only occurs if a vowel spreads rightwards).Spreading is represented in terms of the target ofspreading (e.g., a [+L] vowel is the target ofspreading).
Because initial vowels cannot be atarget of rightward spreading (as there is novowel to the left), the initial vowel automaticallysatisfies SPREAD-R.Figure 9: SPREAD-RFrom state 1, vowels that project an L satisfySPREAD and move to state 5.
All other vowelsmove to state 2 and incur 100 violations.
Fromstates 2 and 5, if the third vowel satisfiesSPREAD, it moves to state 6.
If the final vowelsatisfies SPREAD, it moves to state 7.
If the thirdvowel fails to satisfy SPREAD, it moves to state 3(from state 5 or 2) and incurs 10 violations.
If thefourth vowel fails to satisfy SPREAD, it moves tostate 4 (from states 6 or 3) and incurs 1 violation.One might assume that SPREAD-L simply is areversed version of SPREAD-R.
However, thissimple reversal is not possible because the oppo-site vowels trigger spreading for each constraint.In SPREAD-R, the initial vowel is the optimaltrigger for harmony, but for SPREAD-L the finalvowel is the optimal trigger for harmony.The final vowel always satisfies SPREAD-L be-cause final vowels cannot be targets for leftwardspreading.
Thus, the final vowel (state 7) neverincurs a violation.
If the first vowel is projectedby +R or -R, then it satisfies SPREAD-L (state 3),otherwise it violates the constraint, and incurs 1violation (state 4).
If the second non-final vowelviolates SPREAD-L, it moves to state 2 and incurs10 violations.
If the third non-final vowel vio-lates SPREAD-L, it moves to state 3 and incurs100 violations.Violations of harmony from epenthetic vowelsare assigned based on the position of the word.
Ifan epenthetic vowel does not get its projectedfeature from the right, it will incur a violation ofSPREAD-L. Epenthesis before the initial vowelincurs 1 violation, epenthesis after the initialvowel incurs 10 violations, etc.Figure 9: SPREAD-L4 ResultsThe finite state transducers implementing GENand the constraints were fed into the ContendersAlgorithm.
This was a modified version of Rig-gle?s java script program7.
This program co m-putes the contenders for a single input over thegrammar.
While the finite-state transducers rep-resent an infinite candidate set, it would be im-possible to compute contenders for every possi-ble input.
We limited the input to 4 vowels be-7Thanks to Colin Wilson for these modifications.15cause all previously reported pathologies did notchange for words longer than four vowels (3 withepenthesis)8.
We used Microsoft Excel to co m-pute all possible feature combinations for up tofour vowels (+F, ?F, +B, ?B) without epenthesis.There were 256 combinations with 4 vowels inthe input, 64 combinations with 3 vowels, 16combinations with 2 vowels, and 4 with 1 vowelin the input.
The input list with epenthesis usedthe vowel combinations for up to 3 vowels, andCC clusters were inserted at the left edge, rightedge, and medially (when applicable).The results of the Contenders Algorithm werefed into the Erculator program for computingtypologies using Elementary Ranking Conditions(ERCs) (Riggle, 2007).
Without epenthesis, therewas a typology containing 16 languages: 6spread right, 6 spread left and 4 with no spread-ing.
For the no spread cases, there was one lan-guage that allowed the marked segment ([+B]),and three that did not.
In the three that did notallow [+B] in the output, underlyingly /+B/ seg-ments were treated differently.
In one language,underlyingly /+B/ segments got their [?F] featurefrom the vowel to its left, in another language,underlyingly /+B/ segments got their [?F] featurefrom the vowel to its right, and in the third lan-guage, underlyingly /+B/ segments got their [?F]feature from the pronunciation level.The six spread-right and spread-left languageswere identical except for direction of spreading.In one language all vowels participated in har-mony.
The second language was a case of ?allo-phonic harmony?.
In this case, a [+B] vowel onlyappears as a result of harmony.
That is, harmonycreates allophones of a phoneme that would oth-erwise not appear on the surface.
Non-participating vowels were transparent in the thirdand fourth cases.
In the third case, an underly-ingly +B vowel was changed via spreading; inthe fourth case, an underlyingly +B vowel waschanged at the pronunciation level.
In the fifthand sixths cases, non-participating vowels wereopaque, blocking harmony and starting a newharmonic domain.
In the fifth case, underlyingly/+B/ segments changed to [?F] via projectionfrom the surface.
In the sixth language, underly-ingly /+B/ segments could undergo spreading of[?F] from either the left or the right, if possible.With epenthesis, the predicted typology con-tained 68 languages.
There were 16 languageswith no epenthesis, 16 languages with epenthesisalways on the projection level and 16 languages8Pilot tests with longer inputs did not change the results.with epenthesis at the pronunciation level (giving48 languages).
Each of these sets of 16 languagescorresponded to the 16 languages with no epen-thesis above.
The final 20 languages were fromcases in which epenthesis occurred at the projec-tion level only if spreading were possible fromthe vowel to the left (10 languages) or the vowelto the right (10 languages).
These 20 languagesdiffered depending on how non-derived vowelsbehaved.
There were two sets of 4 no-spreadlanguages, 6 spread-right languages, and 6spread-left, described above.Pattern Examples1.
All vowelsparticipateKalenjin (Local & Lodge,1996)Degema (Elugbe, 1984)2.
TransparentVowelsHungarian (Goldsmith, 1985)Finnish (Goldsmith, 1985)3.
OpaqueVowelsMongolian (Goldsmith, 1985)Turkish (Underhill, 1976)4.
Bi-DirectionalHarmonyLango (Woock & Nooonan,1979)Kalenjin (Local & Lodge,1996)Turkana (Dimmendaal, 1983)5.
AllophonicHarmonyPasiego (Penny, 1969)Akan (Clements, 1981)Kinande (Archangeli & Pulley-blank, 2002)Nawuri (Casali, 2003)Epenthetic Vowels6.
Transparent Karchevan (Vaux, 1995)Agulus (Vaux, 1998)7.
UndergoHarmonyTurkish (Clements & Sezer,1982; Underhill, 1976)Yawelmani (Archangeli, 1988)Yoruba (Archangeli & Pulley-blank, 1989)8.
DirectionalHarmonyLevantine Arabic (Kenstowicz,1981)Mohawk (Postal, 1968),Sesotho (Rose & Demuth,2006)9.
EpentheticVowels OnlyPonapean (Kitto & DeLacy,1999)Barra Gaelic (Sagey, 1987)Marash (Vaux, 1998)Table 1.
Patterns of harmony languagesImportantly, all 68 of these languages representpossible or known languages; none of these lan-gauges share the properties of pathological ty-pological predictions described by Wilson16(2003).
An important result of these computa-tions is that epenthesis is never blocked by afailure to participate in harmony, a predictionthat previous analyses of vowel harmony incor-rectly predicted to be possible (Wilson, 2003).Because the resulting languages varied system-atically, we were able to divide the 68 languagesinto nine different patterns.
Examples from reallanguages are presented in Table 1.
The firstpattern is that all vowels participate in harmony;there are no non-participating vowels.
The sec-ond and third patterns are vowel harmony lan-guages with nonparticipating vowels, eithertransparent to harmony (case 2) or opaque toharmony (case 3).
Case 4 occurs when spreadingapplies both from right-to-left as well as left-to-right.
Case 5 involves allophonic harmony, dis-cussed above.
Cases 6-9 apply to epentheticvowels.
In case 6, harmony skips epentheticvowels.
In case 7, harmony applies to epentheticvowels as if they were an underlying vowel.
Incase 8, harmony applies to epenthetic vowels,but directionally (e.g., the epenthetic vowel getsits features from the right or left, or defaults ifthere is no vowel to spread to the epentheticvowel).
Case 9 occurs when harmony does notapply to underlying vowels in the language, andonly epenthetic vowels undergo harmony.The important result found in these 9 case pat-terns is that all the major harmony phenomenaare predicted (directionality, epenthesis, trans-parency and opacity), without predicting typo-logically implausible languages.
This is an im-portant result because many previous theories ofvowel harmony in OT made pathological predic-tions when harmony interacted with non-participating vowels, deletion and epenthesis.For example, alignment constraints predict fail-ure to epenthesize a vowel in the presence of anon-participating vowel (Wilson, 2003).
Suchpathologies are not found in Turbid Spreading.While there other instances of vowel harmonythat are not covered in the present analysis, thepresent approach provides a mechanism for un-derstanding the typology of vowel harmonyprocesses and the mechanisms that produce theattested and the unattested patterns.It is important to note that while the present re-sults are successful, the model is a result of revi-sions based on previous iterations of the Con-tenders Algorithm.
Many of the unwanted pre-dictions in previous models could not have beenfound without the use of the computational toolsused in this paper.5 ConclusionComputations over finite-state transducersmade it possible to compute a complete typologyof vowel harmony interactions, including inter-actions of vowel harmony and epenthesis.
Thecomputational model verified that TurbidSpreading only predicts languages known to beattested in natural language, but does predict thecommon pathologies known to be problematicfor previous vowel harmony analyses in OT.Because we used all possible vowel combina-tions for up to four vowels, we can be fairly cer-tain that all relevant inputs were considered.
Be-cause the Contenders Algorithm models the infi-nite candidate set in GEN, we can be certain thatthe relevant candidates were considered.
Thispaper demonstrates the power of computationaltools for measuring and evaluating theories ofphonological phenomena.AcknowledgmentsI am indebted to Colin Wilson, who providedcrucial guidance and encouragement.
I am alsograteful to Jason Riggle, who laid the ground-work for this project.
In addition, I am extremelygrateful to Paul Smolensky for his help imple-menting the inputs using Excel, and his guidancein forming Turbid Spreading.
I am also thankfulto Matt Goldrick, Joan Chen-Main, Gaja Jarosz-Snover, Rebecca Morley, and Neil Bardhan fortheir helpful comments.
Funding was providedby: NSF IGERT and NIH Grant DC00167.
Allerrors are my own.ReferencesArchangeli, D. (1988).
Underspecification in Yawel-mani Phonology and Morphology.
New York &London: Garland Publishing, Inc.Archangeli, D., & Pulleyblank, D. (1989).
Yorubavowel harmony.
LI, 20, 173-217.Archangeli, D., & Pulleyblank, D. (2002).
Kinandevowel harmony: domains, grounded conditions andone-sided alignment.
Phonology, 19, 139-188.Bakovic, E. (2000).
Harmony, dominance and con-trol.
Unpublished doctoral dissertation, RutgersUniversity.Bane, M., & Riggle, J.
(in press).
The typologicalconsequences of weighted constraints.
Proceedingsof the 45th Annual Meeting of the Chicago Linguis-tics Society.Bird, S., & Ellison, T. M. (1994).
One-level phonol-ogy: Autosegmental representations and rules as fi-nite automata.
Computational Linguistics, 20(1),55-90.17Casali, R. F. (2003).
[ATR] value asymmetries andunderlying vowel inventory structure in Niger-Congo and Nilo-Sahaan.
Linguistic Typology, 7,307-382.Clements, G. N. (1981).
Akan vowel harmony: Anon-linear analysis.
Harvard Studies in Phonology,2, 108-177.Clements, G. N., & Sezer, E. (1982).
Vowel and con-sonant disharmony in Turkish.
In v. d. H. a.
Smith(Ed.
), The structure of Phonological Representa-tions (Vol.
II, pp.
213-255).
Dordrecht: Foris.Dijkstra, E. (1959).
A note on two problems in con-nexion with graphs.
Numerische Mathematik, 1,269-271.Dimmendaal, G. J.
(1983).
The Turkana language.Dordecht: Foris.Eisner, J.
(2000).
Directional constraint evaluation inOptimality Theory.
Proceedings of the 18th Inter-national Conference on Computational Linguistics(COLING), 257-263.Ellison, M. T. (1992).
Learning vowel harmony.
Pa-per presented at the SHOE Workshop, ITK, Til-burg, Netherlands.Ellison, M. T. (1994).
Phonological derivation in Op-timality Theory.
Proceedings of the 15th Interna-tional Conference on Computational Linguistics,1007-1013.Elugbe, B. O.
(1984).
Morphology of the gerund inDegema and its reconstruction in proto-Edoid.Studies in African Linguistics, 15(1), 77-89.Finley, S. (2008).
Formal and cognitive restrictionson vowel harmony.
Unpublished doctoral disserta-tion, Johns Hopkins University.Finley, S. (2010).
Exceptions in vowel harmony arelocal.
Lingua, 120, 1549-1566.Finley, S. (in press).
The interaction of epenthesis andvowel harmony.
Proceedings of the 44th AnnualMeeting of the Chicago Linguistics Society.Finley, S., & Badecker, W. (2008).
Analytic biasesfor vowel harmony languages.
WCCFL, 27, 168-176.Goldrick, M. (2001).
Turbid output representationsand the unity of opacity.
NELS, 30, 231-245.Goldsmith, J.
(1985).
Vowel harmony in KhalkaMongolian, Yaka, Finnish and Hungarian.
Phonol-ogy Yearbook, 2, 253-275.Goldsmith, J., & Xanthos, A.
(2009).
Learningphonological categories.
Language, 85(1), 4-38.Kenstowicz, M. (1981).
Vowel harmony in Palesitin-ian Arabic: A suprasegmental analysis.
Linguistics,19, 449-465.Kitto, C., & DeLacy, P. (1999).
Correspondence andepenthetic quality.
In C. Kitto & C.
Smallwood(Eds.
), Proceedings of AFLA VI.
Holland: Aca-demic Graphics.Local, J., & Lodge, K. (1996).
Another travesty ofrespresentation: Phonological representation andphonetic interpretation of ATR harmony in Kalen-jin.
York Papers in Linguistics, 17, 77-117.Penny, R. J.
(1969).
Vowel harmony in the speech ofMontanes de Pas.
ORBIS- Bulletin International deDocumentation Linguistique, 148-166.Postal, P. M. (1968).
Mohawk vowel doubling.
Inter-national Journal of American Linguistics, 35, 291-298.Prince, A.
(2002).
Arguing optimality.
In A. Coetzee,A.
Carpenter & P. De Lacy (Eds.
), Papers in Opti-mality Theory II.
Amherst, MA: GLSA.Prince, A., & Smolensky, P. (1993/2004).
Optimalitytheory: Constraint interaction in generative gram-mar.
Cambridge: Blackwell.Riggle, J.
(2004a).
Contenders and learning.
In B.Schmieser, A. K. Chand & A. Rodriquez (Eds.
),WCCFL (Vol.
23, pp.
101-114).
Somerville, MA:Cascadilla Press.Riggle, J.
(2004b).
Generation, recognition andlearning in finite-state Optimality Theory.
Unpub-lished doctoral dissertation, UCLA.Riggle, J.
(2007).
Erculator:http://clml.uchicago.edu/?page_id=11.Rose, Y., & Demuth, K. (2006).
Vowel epenthesis inloanword adaptation: Representational and phoneticconsiderations.
Lingua, 116, 1112-1139.Sagey, E. (1987).
Non-constituent spreading in BarraGaelic.Unpublished manuscript, UC Irvine.Underhill, R. (1976).
Turkish grammar.
Cambridge:MIT Press.Vaux, B.
(1995).
Vowel harmony in the Armeniandialect of Karchevan.
NSL, 9(1-9).Vaux, B.
(1998).
The phonology of Armenian.
Ox-ford: Clovendon Press.Wilson, C. (2003).
Analyzing unbounded spreadingwith constraints: marks, targets, and deriva-tions.Unpublished manuscript, UCLA.Wilson, C. (2005).
Localizing constraint violation:Theoretical consequences of myopic spread-ing.Unpublished manuscript, Paper presented atHOWL3, Johns Hopkins.Woock, E. B., & Nooonan, M. (1979).
Vowel har-mony in Lango.
CLS, 15, 20-29.18
