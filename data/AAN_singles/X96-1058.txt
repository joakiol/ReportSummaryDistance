MET Name Recognition with Japanese FASTUS*Megumi KameyamaArtificial Intell igence CenterSRI Internat ional333 Ravenswood Ave., Menlo Park,  CA 94025, U.S.A.megumi?ai.sr i .com1 IntroductionSRI's Japanese FASTUS used in the MultilingualEntity Task (MET) evaluation is the initial Japanesesystem based on the FastSpec pattern specifica-tion language.
We describe its system architecture,strengths, weaknesses, and its contribution to theprospects of a full information extraction system.2 Japanese FASTUS: HistoryThe first Japanese FASTUS was the MUC-5 JointVenture system developed in 1993.
Both the En-glish and Japanese MUC-5 FASTUS systems used agraphical user interface called Grasper for rule def-inition, and recognized tie-up relationships amongcompany organizations \[1\].
The performance of theJapanese FASTUS, together with other Japanesesystems, demonstrated that the basic informationextraction (IE) technology was portable to a lan-guage very different from English.
The MUC-5Japanese FASTUS gave us experience with 2-bytecharacter input and JUMAN, a morphological na-lyzer developed at Kyoto University.The second Japanese FASTUS, called MIMI(for "ears" in Japanese), summarized spontaneoushuman-human dialogues, and was developed uring1993-1995.
MIMI was also Grasper-based, but itsinput was ASCII character "romaji" with spaces be-tween words, and it had a 3,000-word ictionary inthe domain of conference room scheduling \[4, 5, 6\].During 1994-1995, the English FASTUS infras-tructure underwent a number of changes, the mostsignificant of which was the transition from Grasperto a declarative pattern specification language calledFastSpec.
FastSpec enables a fast cycle of rule spec-ification, compilation, and testing during develop-ment \[21 .
*MET FASTUS was developed under  SRI IR&D support .3 MET Japanese FASTUSThe first implementation of the FastSpec-basedJapanese FASTUS is the MET system .
It was de-veloped from scratch in a 4-staff-month effort oninternal IR&D funding.
In addition to the MUC-6FASTUS infrastructure, past MUC-5 and MIMI ex-periences in general rule organization provided lever-age.
The MUC-5 experience in the use of JUMANwas also helpful.New FASTUS developments in the MET systeminclude new Japanese grammars in FastSpec, newJUMAN (version 2), customized JUMAN dictionary,2-byte adaptation of FastSpec-based FASTUS in-frastructure, and an SGML-handler phase specifiedin FastSpec.
13.1 System Overv iewFASTUS's basic architecture, shown in Figure 1, isunchanged \[3\].
The SGML-tagged input documentis first tokenized.
ASCII characters are sent to theASCII Tokenizer, and 2-byte characters are sent toJUMAN.
The ASCII Tokenizer is identical to theEnglish FASTUS Tokenizer, which recognizes alpha-betic, alphanumeric, numeric, and separator tokensas well as SGML tag tokens.
JUMAN analyzes theinput Japanese string into a single best sequence ofmorphemes with morphological attributes.
TheseJUMAN morphemes are turned into FASTUS Lexi-cal Item objects with slots for literal string, normal-ized string, lexical category, inflection type, and soforth.
,The mixed sequence of ASCII and JUMAN to-kens is then input into the SGML Handler, whichrecognizes the document structure based on SGMLtags, and outputs a FASTUS Document object withslots for the headline, text, and other SGML fields.The headline slot has a sequence of sentences.
The1The last two were in col laboration with Mabry  Tyson.471inp~ stringI Tok~zer I1-byte!
| S-byte~ .
tokens  .\[ SGML Handler IHL >" SENTENCEsTemplate ObjectsFigure 1: System Overviewtext slot has a sequence of paragraphs, each ofwhich contains a sequence of sentences.
The SGMLHandler is written in FastSpec, so it can be easilyadapted to text tagging formats other than SGML,as well as to more complex text structures contain-ing sections, subsections, and tables.The Document object is input into the SentenceLoop consisting of a sequence of finite-state trans-ducers, namely the Preprocessor, Name Recognizer,Parser, and Combiner.
(The MET system did nothave the last Domain Event phase that recognizessentence patterns.)
These linguistic phases recog-nize increasingly complex expressions in the sen-tence, recording syntactic and semantic attributesand producing template objects.
At the end of eachsentence loop, the Merger merges the new and exist-ing template objects produced from the document sofar.
Document processing outputs a set of templateobjects that represent extracted information.To recognize name strings for Organizations,Persons, Locations, Dates, Times, Money, and Per-cents, the MET Japanese FASTUS produces a tem-plate entity for each.
The name slot of a templateentity has a name string value with its start andend positions in the document.
Name tagging inthe output uses these text position values.
Most ofthe names are recognized in the Name Recognizerphase based on internal patterns.
After the NameRecognizer phase, the Alias Recognition routine rec-ognizes ome of the unknown words as aliases of theorganization ames recognized earlier in the samedocument.
The Parser and Combiner phases recog-nize a name's urrounding linguistic ontexts, some-times converting a phrase of one type into a phraseof another type.3.2 S t rengths  and  WeaknessesThe system's trengths derive from the FastSpec-based FASTUS infrastructure, and the weaknessesare problems in Japanese name recognition that anysystem must cope with.3.2.1 StrengthsThe following are the main strengths of the system:FastSpec enables transparent rule definition ofa complex finite-state transducer.
The optimizingcompiler constructs an efficient finite-state machine,allowing a rapid specify-compile-test cycle.Name recognition is completely integrated intemplate ntity extraction, so the system is readyfor further incremental ugmentation toward a full-scale IE system.Named entities can be recognized based on lin-guistic contexts in complex phrase patterns.
For ex-ample, in "zidousya seizou gaisya no papiyon" (Pa-pillon, an automaker), the word "papiyon" (Papil-lon) may be unknown, but the immediate linguisticcontext makes it a company name.472zaisei i --in --tyouf'mancial committe,  mvmber chiefORGNOUN hou-~i o.o o., i_.o, .
, i t sOsaka city inner---limits LOCLOC NOUN NOUNFigure 2: Name-Noun Overlap ExamplesA.
~ekonomisuto ~syusekiekonomisutolM~econonfist ~ Moosa \[chief economist0RG PERS positJ,.on posJ.tJ.on\[ -(you ~ siren -tyou B. oosokd $\]\[enI Osaka branch-office \[ chief \] Kul~ J branch-office hiofORG PERS pos i t ion  position\]3.2.2 WeaknessesFigure 3: Ambiguous Context ExamplesIE -Customizat ion  of  Dict ionary.
FASTUSuses dictionary entries as the smallest linguistic unitsthat are combined to create more complex patterns.There were numerous cases in MET, however, wheredictionary entries cut across name boundaries.
Ex-amples are shown in Figure 2.These common nouns are complex morphemes,parts of which can simultaneously belong to organi-zation or location names.
These examples indicatethe fact that IE requires ubstantial sublexical anal-ysis in Japanese.
There are essentially two meth-ods for coping with this.
One method, taken bythe NTT DATA system in MET, 2 is to first tok-enize with normal dictionary entries, and then laterto extract sublexical parts during IE.
This approachenables a single dictionary to be used for IE andnon-IE purposes.
The other method, taken by theSRI system in MET, is to remove these complex mor-phemes from the dictionary, and combine sublexicalitems with rules.
This approach makes IE dictionar-ies diverge from the off-the-shelf ones.Ru le -D ic t ionary  Trade-of fs .
Organization,Person, and Location names comprise a majority ofthe names to be recognized, and a special difficultyarises when they occur in similar linguistic ontexts.A prime example of such overlapping contexts is thepositions held by persons within organizations, asshown in Figure 3.In Example A, the same "economist" positiontype acts as the context for Organization or Per-son names.
In Example B, the same "branch-officechief" position phrase provides part of an organiza-tion name in one example, while it acts as a contextfor a person name in the other.The difficulty is that even known organization,person, and location names are often ambiguous.For instance, "murayama" (Murayama) can be aperson's last name or a city name, and "foodo"2Yoshio Eriguchi and Tsuyoshi Kitanl, personalcommunication(Ford) can be a person's last name or companyname.
Disambiguation relies on the linguistic con-text.
Moreover, most organization, person, and loca-tion names are unknown to the system.
Their recog-nition relies on both internal name patterns and lin-guistic contexts.
The system must hit the right bal-ance between the size of the dictionary of knownnames and the complexity of the name-context pat-terns.
When the list is too large, disambiguation re-quires almost as much effort as if there were no list;but certain names elude predictable internal namepatterns, so need to be known a priori.
This rule-dictionary trade-off must be fully explored to in-crease name recognition accuracy.4 FutureThe MET Japanese FASTUS is ready for further de-velopment and augmentation toward a full informa-tion extraction system.
We plan to fully customizethe dictionary for IE purposes, and augment the sys-tem with coreference resolution and compile-timetransformation capabilities demonstrated in the En-glish MUC-6 FASTUS \[2\].We also plan to make this Japanese IE system ac-cessible to English-speaking analysts.
This will bepossible by combining the IE technology with suit-ably constrained applications of machine translationtechnology.References\[1\] Appelt, Douglas, Jerry Hobbs, John Bear, David Is-rael, Megumi Karneyama, nd Mabry Tyson.
SRI: De-scription of the JV-FASTUS System Used for MUC-5.In Sundheim, Beth, ed., the Proc.
of the 5th MessageUnderstanding Conference, ARPA, 1993b.\[2\] Appelt, Douglas, Jerry Hobbs, John Bear, David Is-rael, Megumi Kameyama, Andy Kehler, David Mar-tin, Karen Myers, and Mabry Tyson.
1995.
SRI Inter-473national FASTUS System MUC-6 Test Results andAnalysis.
In the Proc.
of the 6th Message Understand-ing Conference, ARPA:[3] Hobbs, Jerry, Douglas Appelt, John Bear, David Is-rael, Megnmi Kameyama, Mark Stickel, and MabryTyson, 1996.
FASTUS: A Cascaded Finite-StateTransducer for Extracting Information from Natural-Language Text.
In E. Roche and Y. Schabes, eds.,Finite State Devices ]for Natural Language Processing,MIT Press, Cambridge, Massachusetts.
[4] Kameyama, Megumi and Isao Arima, 1993.
A Min-imalist Approach to Information Extraction fromSpoken Dialogues.
In Proc.
International Symposiumon Spoken Dialogue (ISSD-93}, Waseda University,Tokyo, Japan, 137-140.
[5] Kameyama, Megumi and Isao Arima, 1994.
Copingwith Aboutness Complexity in Information Extractionfrom Spoken Dialogues.
In Proc.
International Con-]ference on Spoken Language Processing (1CSLP-94),Yokohama, Japan, 87-90.
[6] Kameyama, Megumi, in preparation.
InformationExtraction from Spontaneous Spoken Dialogues.Manuscript.
SRI International Artificial InteUigenceCenter.474
