THE FORMAL CONSEQUENCES OF USING VARIABLESIN CCG CATEGORIESBery l  Hof fman *Dept .
o f  Computer  and In fo rmat ion  Sc iencesUn ivers i ty  o f  Pennsy lvan iaPh i ladelphia ,  PA 19104(ho f fman @ l inc.c is .upenn.edu)Abst rac tCombinatory Categorial Grammars, CCGs, (Steedman1985) have been shown by Weir and loshi (1988) togenerate the same class of languages as Tree-AdjoiningGrammars (TAG), Head Grammars (HG), and LinearIndexed Grammars (LIG).
In this paper, I will discussthe effect of using variables in lexical category assign-ments in CCGs.
It will be shown that using variablesin lexical categories can increase the weak generativecapacity of CCGs beyond the class of grammars listedabove.A Formal Definition for CCGsIn categorial grammars, grammatical entities are oftwo types: basic categories and functions.
A basiccategory such as NP serves as a shorthand for a set ofsyntactic and semantic features.
A category such asS\NP  is a function representing an intransitive verb;the function looks for an argument of type NP onits left and results in the category S. A small set ofcombinatory rules serve to combine these categorieswhile preserving a transparent relation between syntaxand semantics.
Application rules allow functions tocombine with their arguments, while composition rulesallow two functions to combine together.Based on the formal definition of CCGs in(Weir-Joshi 1988), a CCG, G, is denoted by(VT , VN , S, f, R), where?
lit is a finite set of terminals,?
VN is a finite set of nonterminals,?
S is a distinguished member of VN,?
f is a function that maps elements of VT U {e} tofinite subsets of C(VN), the set of categories, where,- VN C C(VN) and- if el and c2 ?
C(VN), then (el\c2) and (cl/c2) ?
*I would like to thank Mark Steedman, Libby Levison,Owen Rambow, and the anonymous referees for their valu-able advice.
This work was partially supported by DARPAN00014-90-J- 1863, ARO DAAL03-89-C-0031, NSF IR190-16592, Ben Franklin 91S.3078C-1.?
R is a finite set of combinatory rules whereX, Y, Z1, ?
?., Zn are variables over the set of cat-egories C(VN), and the slash variable \]i can bindto \ o r / .
Certain restrictions may be placed on thepossible instantiations of the variables in the rules.- Forward Appl icat ion (>):x /y  r ---, x- Backward Appl icat ion (<):Y X \Y  --~ X- General ized Forward Composi t ion(>B(n) or >Bx(n)): For some n > 1,X/Y  Y l lZ l l z .
.
.
I .Z .
--, X l lZ~12.
.
.
I ,Z ,- General ized Backward Composit ion(<B(n) or <Bx(n)): For some n _> 1,Yl Ztl2...l z  XKY --, xllz \[2...
I z,.The derives relation in a CCG is defined as act  =~cecl c2fl if R contains the rule Cl c2 ---+ c. The languagegenerated by this grammar is defined asL(G) = {a l , .
.
.
,  an \[ S :~ c , , .
.
.
, cn ,ei ?
f (a l ) ,a i  ?
lit U {e}, 1 < i > n}Under these assumptions, Weir and Joshi (1988) provethat CCGs are weakly equivalent to TAGs, HGs, andLIGs.
Their conversion of a CCG to a LIG l relieson the fact that the combinatory rules in the CCG arelinear.
To preserve linearity in CCGs, only the categoryX in the combinatory rules can be unbounded in size;the variables Y and Z must be bounded in their possibleinstantiations.
In other words, only a finite number ofcategories can fill the secondary constituent of eachcombinatory rule.
The secondary constituent is thesecond of the pair of categories being combined in theforward rules and the first of the pair in the backwardrules (e.g.
Y\]Z1...IZn).Weir and Joshi do not restrict he size of the sec-ondary constituents in the formal definition of the CCGrules, but they prove that the following lemma holds ofthe grammar.ILinear Indexed Grammars are a restricted version ofIndexed Grammars in which no rule can copy a stack ofunbounded size to more than one daughter (Gazdar 1985).298Lemma: There is a bound (determined by the gram-mar G) on the number of useful categories that canmatch the secondary constituent of a rule.There are an infinite number of derivable cate-gories in CCGs, however Weir and Joshi show thatthe number of components that derivable categorieshave is bounded.
The components of a categoryc = (col,cll2...I, c,d are its immediate componentsco, ..., c,~ and the components ofthese immediate com-ponents.
A finite set Dc(G)  can be defined that con-tains all derivable components ofevery useful categorywhere a category c is useful if c ~ w for some w inVT*:c 6 De(G)  i fc is a component o fdwhere c' 6 f(a) for some a 6 VT U {E}.Given that every useful category matching the sec-ondary constituents Y and Y IZ1...IZ,~ in the combi-natory rules has components which are in Dc(G), thelemma given above holds.However, this lemma does not hold if there arevariables in the lexical categories in VT. Variables canbind a category of any size, and thus useful categoriescontaining variables do not necessarily have all of theirderivable components in the finite set Dc (G).The Use of VariablesLinguistic UseIn CCGs, a type-raising rule can be used in the lexiconto convert basic elements into functions; for exam-ple, an NP category can be type-raised to the categoryS/ (S \NP)  representing a function looking for an in-transitive verb on its right.
Steedman uses type-raisingof NPs to capture syntactic oordination and extractionfacts.
In Steedman's Dutch grammar (1985), variablesare used in the lexical category for type-raised NPs,i.e.
the variable v in the category v / (v \NP)  general-izes across all possible verbal categories.
The use ofvariables allows the type-raised NPs in the followingcoordinated sentence to easily combine together, us-ing the forward composition rule, even though they arearguments of different verbs.
(1) ...dat \[Jan Piet\] en \[Cecilia Henk\] zag zwemmen....that \[Jan Pietl and \[Cecilia Henkl saw swim....that Jan saw Piet and Cecilia saw Henk swim.Jan Pietv/( , \NP) ?
/ (?
\NP)>B (v' = (v \NP) )v / (v \NP \NP)Formal PowerI will show that the use of variables in assigned lexicalcategories increases the weak generative capacity ofCCGs.
VAR-CCGs, CCGs using variables, can gener-ate languages that are known not to be Tree-AdjoiningLanguages; therefore VAR-CCGs are more powerfulthan the weakly equivalent TAG and CCG formalisms.The following language is known not to be a TAL:L = {a'%'%nd'~e'~ln > O}The following VAR-CCG, G', generates a language L'which is very similar to L:f(c) = s,f(a) = A,f(b) = v \A / (v \B) ,f(c) = vV3/ (v \c ) ,f(d) = v \C / (v \D) ,f(e) = S \D/S .The rules allowed in this grammar are forward andbackward application and forward crossing composi-tion with n < 2.
The variable v can bind an arbitrarilylarge category in the infinite set of categories C(Vjv)defined for the grammar.In the language generated by this grammar, twocharacters of the same type can combine together usingthe forward crossing composition rule >Bx(2).
Thecomposition of the types for the character e is shownbelow.
A string of e's can be constructed by allowingthe result of this composition to combine with anothere category.e eS\D/S  S \D/S->Bx(2)S\D\D/SThe types for the characters b, c, and d can combineusing the same composition rule; these types containvariables (e.g.
v and v' below) which can bind to acategory of unbounded size.b bv \A / (v \B)  v ' \A / (v ' \B )>Sx(2) (v' = (v\B))v \A \A / (v \B \B)By applying the forward crossing composition rule toa string of nb 's ,  we can form the complex categoryv\A,  .
.
.
d,~/(v\Bl  .
.
.
Bn) representing this string.Thus, during the derivation of anbnc'~d'~e n forn > O, the following complex categories are created:v\A,  .. .A t / (v \B1 .
.B,).
.
.
B /(vkC,...Cj/(vkD  .
.
.D j )skDl .
.
.
DiOnce the complex categories for a string of b's,a string of c's, a string of d's, and a string of e'sare constructed, we can link one string of a particu-lar character to another using the forward applicationrule.
This rule can only apply to these categories ifi = j, j = k, k = l, and l = m where m is the num-ber of A's generated and i, j, k, l are as in the complexcategories listed above.
For example,8\D1.
.
.D i> (j = i)299With each succesful forward application, we ensurethat there are equal numbers of two characters: the E'sare linked to the D's, the D's are linked to the C's,etc., so that we have the exact same number of all fivecharacters.
In fact, the grammar can be easily extended, ,n  .. ~ 0} to generate a language such as {a 1 a 2 .
at: In _>for any k.The language L' generated by G / intersected withthe regular language a*b*c*d*e* gives the language Labove.
If  we assume that L' is a Tree-Adjoining Lan-guage (TAL), then L would be a TAL as well sinceTALs are closed under intersection with Regular lan-guages.
However, since we know that L is not a TAL,L' cannot be a TAL either.
Thus, G' generates a lan-guage that TAGs and CCGs cannot.Conc lus ionsWe have seen that using variables in the lexical cat-egories of a CCG can increase its weak generativecapacity.
However, there is some linguistic motivationfor looking at the more powerful formalism of VAR-CCGs.
As argued by Gazdar (1985), this extra powermay be necessary in order to capture coordination innatural anguages.
We have seen that type-raised cat-egories with variables in CCGs can be used to capturesyntactic oordination and extraction facts in Dutch(Steedman 1985).
Further esearch is needed to decidewhether this linguistic motivation warrants the moveto a more powerful formalism.Although VAR-CCGs have a greater weak gen-erative capacity than the class including TAGs, HGs,CCGs, and LIGs, we conjecture that it is still a mildlycontext-sensitive grammar as defined by Joshi (1985).The language discussed above is a mildly context-sensitive language since it observes the constant growthand semilinearity properties.
It is an open questionwhether VAR-CCGs can generate languages which arebeyond mildly context-sensitive.
Note that MC-TAGs,which are a more powerful extension of TAGs, can alsogenerate languages like L, and they are known to bemildly context-sensitive formalisms (Weir 1988).
Infuture research, we will investigate xactly what theresulting enerative capacity of VAR-CCGs is.Future  Research  on  Word  OrderMy current research also involves extending the CCGformalism to handle free word order languages.
Byrepresenting NPs as type-raised categories, we can de-rive a scrambled sentence in which the NPs do notoccur in the order that the verb specifies:v/(v\NP2) v/(v\NP,) S\NPx\NP2.>BS\  N P2>SIn many free word order languages, an NP can bescrambled an unbounded istance away from its verb,i.e.
long distance scrambling.
If we allow unrestrictedcomposition rules for any n arguments as well as theuse of variables in type-raised categories in a CCG, astring of any number of scrambled NPs followed by astring of verbs can be derived.
We first combine anynumber of verbs together, using backward composi-tion, to get a complex verb category looking for all ofthe NPs; next, we combine each NPs with this com-plex verb category.
Any type-raised Npi can combinewith the complex verb regardless of the order specifiedby the complex verb.
The variable in the type-raisedcategory can bind a verbal category of unbounded size,e.g.
(v = S\Up,\...\Upi_l).v/(v\Npi) S\Np, \Np2...\Npi...\Npn>Bx(n)S\Npl \...\Npi-~\Npi+l...\Np,~Although we can capture scrambling by using variablesin type-raised categories, this analysis is not consistentwith incremental processing and cannot account for co-ordination in scrambled sentences; for instance, in thefirst example given above, NP2 and NP1 cannot com-binetogether before combining with the verb.
In futureresearch, I will investigate whether VAR-CCGs is anadequate linguistic formalism in capturing all aspectsof free word order languages or whether a formalismsuch as {}-CCGs (Hoffman 1992), which allows setsof arguments in function categories, is better suited.References\[1\] Gazdar, G. 1985.
Applicability of Indexed Gram-mars to Natural Languages.
Technical ReportCSLI-85-34, Center for Study of Language and In-formation.\[2\] Hoffman, Beryl.
1992.
A CCG Approach to FreeWord Order Languages.
Proceedings of the 30thAnnual Meeting of ACL, Student Session.\[3\] Joshi, A.K., 1985.
How much context-sensitivityis required to provide reasonable structural descrip-tions: Tree adjoining grammars, in D. Dowty andL.
Karttunen and A. Zwicky, editors, Natural Lan-guage Parsing: Psycholinguistic, Computationaland Theoretical Perspectives, Cambridge Univer-sity Press.\[4\] Steedman, Mark.
1985.
Dependency and Coordi-nation in the Grammar of Dutch and English.
Lan-guage, 6l, 523-568.\[5\] Weir, David.
1988.
Characterising Mildly Context-sensitive Grammar Formalisms.
Ph.D dissertation.University of Pennsylvania.\[6\] Weir, David and Aravind Joshi.
1988.
Combina-tory Categorial Grammars: Generative Power andRelationship to Linear Context-Free Rewriting Sys-tems.
Proceedings of the 26th Annual Meeting ofACL.300
