Automating NL Appointment Scheduling with COSMA*Stephan BusemannDFKI GmbHStuhlsatzenhausweg 3, 66123 Saarbr/icken, Germanybusemann@dfki, uni-sb, deAbstractAppointment scheduling is a problem faceddaily by many individuals and organiza-tions.
Cooperating agent systems havebeen developed to partially automate thistask.
In order to extend the circle of par-ticipants as far as possible we advocate theuse of natural language transmitted by e-mail.
We demonstrate COSMA, a fully im-plemented German language server for ex-isting appointment scheduling agent sys-tems.
COSMA can cope with multiple di-alogues in parallel, and accounts for differ-ences in dialogue behaviour between humanand machine agents.1 Motivat ionAppointment scheduling is a problem faced dailyby many individuals and organizations, and typi-cally solved using communication i  natural lan-guage (NL) by phone, fax or by mail.
In general,cooperative interaction between several participantsis required.Systems available on the market alow for calendarand contact management.
However, as (Busemannand Merget, 1995) point out in a market survey, allplanning and scheduling activity remains with theuser.
Cooperative agent systems developed in thefield of Distributed AI are designed to account forthe scheduling tasks.
Using distributed rather thancentralized calendar systems, they not only guaran-tee a maximum privacy of calendar information butalso offer their services to members or employees inexternal organizations.
Although agent systems al-low users to automate their scheduling tasks to a con-This work has been supported by a grant from theGerman Federal Ministry of Education, Science, Re-search and Technology (FKZ ITW-9402).siderable degree, the circle of participants remainsrestricted to users with compatible systems.To overcome this drawback we have designed andimplemented COSMA, a novel kind of NL dialoguesystem that serves as a German language front-endto scheduling agents.
Human language makes agentservices available to a much broader public.
COSMAallows human and machine agents to participate inappointment scheduling dialogues via e-mail.
We areconcerned with meetings all participants hould at-tend and the date of which is negotiable.2 The  SystemsCOSMA is organized as a client/server architecture.The server offers NL dialogue service to multipleclient agent systems.
The scheduling agent systemsact for their respective users.
The agents systemsuse a calendar management system for displaying totheir owners the results of the appointment negoti-ations.
The users can enter their appointment con-straints via a graphical user interface and receive theresults either by e-mail or via their electronic alen-dar.
Agent systems are thus hooked up to e-mail, toa calendar manager and to the dialogue server.The server interface is command-driven.
A clientmay connect to the server and open up a dialogue(see Figure 1 in (Busemann et al, 1997)).
Dur-ing the dialogue, the client may request texts to beanalyzed or semantic descriptions to be verbalized.When given a text, the server returns the semanticrepresentation, and vice versa.
The client ensuresthat the server has available to it linguistically rel-evant information about the interlocutors, such asnames, sexes etc.The user agents may access the dialogue servervia Internet.
They use the server as their NL frontend to human participants.
Machine agents inter-act with each other in their own formal language.This interaction remains unnoticed by the dialogueserver.
As a consequence, the dialogues modeledwithin the server epresent only part of the completemulti-participant egotiation.
More precisely, onlyutterances between a human and a machine agentare modeled.The agent system used is a further development ofthe PASHA system (Schmeier and Schupeta, 1996).NL analysis in the server is based on a shallowparsing strategy implemented in the SMES system(Neumann et al, 1997).
The use of SMES inCOSMA, semantic analysis and inference, the dia-logue model mapping between human and machinedialogue structures, utterance generation, the archi-tectural framework of the server, and the PASHAagent system are described in (Busemann et al,1997).
Both papers can be found in the ANLP '97conference proceedings.We demonstrate extended versions of the systemsdescribed in (Busemann et al, 1997).
In particular,the systems to be demonstrated can process counter-proposals, which form an important part of efficientand cooperative scheduling dialogues.3 The Demonstrat ion  ScenarioThe demonstration scenario includes three partici-pants.
Two are using autonomous agent systemsthat partially automate the negotiation of appoint-ment scheduling and manage their users' private lec-tronic calendars.
The third person plans his appoint-ments himself and interacts with other participantsthrough NL e-mail messages.
His calendar is man-aged outside the scope of the systems.Dialogues can be initiated by the human partici-pant or by one of the agent systems.
In the formercase, the users of the agent systems usually are notinvolved in the negotiation.
They see the result :~henit is entered into their electronic alendars.
In thelatter case, the user starts his agent by entering viaa graphical interface the appointment constraints obe used in the negotiation.
The basic constraints in-clude the time interval within which the appointmentmust be fixed, the duration of the meeting, and theparticipants.For demonstration purposes, e-mail is exchangedbetween different accounts on a local host, whichthe server is running on as well.
In principle, eachparticipant and the server could reside on a differentsite in the Internet.The NL server is implemented in Common Lispand C with a graphical surface written in Tcl/Tk.The PASHA agent system is implemented in DFKI-Oz (Smolka, 1995).
The systems are demonstratedon a Sun workstation under Unix.AcknowledgmentsThe following persons have contributed significantlyto the development and the implementation f the NLserver system and its components: Thierry Declerck,Abdel Kader Diagne, Luca Dini, Judith Klein, andG/inter Neumann.
The PASHA agent system hasbeen developed and extended by Sven Schmeier.ReferencesStephan Busemann and Iris Merget.
1995.
EineUntersuchung kommerzieller Terminverwaltungs-Software im Hinblick auf die Kopplung mitnatiirlichsprachlichen Systemen.
Technical Doc-ument D-95-11, DFKI, Saarbr/icken, September.Stephan Busemann, Thierry Declerck, Abdel KaderDiagne, Luca Dini, Judith Klein, and SvenSchmeier.
1997.
Natural language dialogue ser-vice for appointment scheduling agents.
In Proc.5th Conference on Applied Natural Language Pro-cessing, Washington, DC.G/inter Neumann, Rolf Backofen, Judith Baur,Markus Becker, and Christian Braun.
1997.
Aninformation extraction core system for real worldgerman text processing.
In Proc.
5th Conferenceon Applied Natural Language Processing, Wash-ington, DC.Sven Schmeier and Achim Schupeta.
1996.
PASHAII - a personal assistant for scheduling appoint-ments.
In Proc.
Ist Conference on Practical Ap-plication of Multi Agent Systems, London, April.Gert Smotka.
1995.
The Oz Programming Model.Research Report RR-95-10, DFKI, Saarbr/icken,Germany.
