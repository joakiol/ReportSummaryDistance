Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 158?166,MIT, Massachusetts, USA, 9-11 October 2010. c?2010 Association for Computational Linguistics?Poetic?
Statistical Machine Translation: Rhyme and MeterDmitriy Genzel Jakob Uszkoreit Franz OchGoogle, Inc.1600 Amphitheatre PkwyMountain View, CA 94043, USA{dmitriy,uszkoreit,och}@google.comAbstractAs a prerequisite to translation of poetry, weimplement the ability to produce translationswith meter and rhyme for phrase-based MT,examine whether the hypothesis space of sucha system is flexible enough to accomodatesuch constraints, and investigate the impact ofsuch constraints on translation quality.1 IntroductionMachine translation of poetry is probably one of thehardest possible tasks that can be considered in com-putational linguistics, MT, or even AI in general.
Itis a task that most humans are not truly capable of.Robert Frost is reported to have said that poetry isthat which gets lost in translation.
Not surprisingly,given the task?s difficulty, we are not aware of anywork in the field that attempts to solve this problem,or even discuss it, except to mention its difficulty,and professional translators like to cite it as an exam-ple of an area where MT will never replace a humantranslator.
This may well be true in the near or evenlong term.
However, there are aspects of the prob-lem that we can already tackle, namely the problemof the poetic form.Vladimir Nabokov, in his famous translation ofEugene Onegin (Nabokov, 1965), a poem with avery strict meter and rhyming scheme, heavily dis-parages those translators that attempt to preserve theform, claiming that since it is impossible to perfectlypreserve both the form and the meaning, the formmust be entirely sacrificed.
On the other hand, Dou-glas Hofstadter, who spends 600 pages describinghow to translate a 60 word poem in 80 different waysin Le Ton beau de Marot (1998), makes a strong casethat a poem?s form must be preserved in translation,if at all possible.
Leaving the controversy to the pro-fessional translators, we investigate whether or notit is possible to produce translations that conform tocertain metrical constraints common in poetry.Statistical machine translation techniques, unliketheir traditional rule-based counterparts, are in factwell-suited to the task.
Because the number of po-tential translation hypotheses is very large, it is notunreasonable to expect that some of them shouldconform to an externally imposed standard.
Thegoal of this paper is to investigate how these hy-potheses can be efficiently identified, how often theyare present, and what the quality penalty for impos-ing them is.2 Related WorkThere has been very little work related to the transla-tion of poetry.
There has been some work where MTtechniques were used to produce poetry (Jiang andZhou, 2008).
In other computational poetry work,Ramakrishnan et al(2009) generate song lyrics frommelody and various algorithms for poetry gener-ation (Manurung et al, 2000; D?
?az-Agudo et al,2002).
There are books (Hartman, 1996) and arti-cles (Bootz, 1996) on the subject of computer poetryfrom a literary point of view.
Finally, we must men-tion Donald Knuth?s seminal work on complexity ofsongs (Knuth, 1984).1583 Statistical MT and PoetryWe can treat any poetic form as a constraint on thepotential outputs.
A naive approach to ensure that anoutput of the MT system is, say, a haiku, is to createa haiku detector and to examine a (very large) n-bestlist of translations.
This approach would not suc-ceed very often, since the haikus that may be amongthe possible translations are a very small fraction ofall translations, and the MT decoder is not activelylooking for them, since it is not part of the cost itattempts to minimize.
Instead, we would want to re-cast ?Haikuness?
as a feature function, such that areal haiku has 0 cost, and those outputs that are not,have large cost.
This feature function must be local,rather than global, so as to guide the decoder search.The concept of feature functions as used in sta-tistical MT is described by Och and Ney (Och andNey, 2002).
For a phrase based system, a featurefunction is a function whose inputs are a partial hy-pothesis state sin, and a phrase pair p, and whoseoutputs are the hypothesis state after p is appendedto the hypothesis: sout, and the cost incurred, c. Forhierarchical, tree-to-string and some other types ofMT systems which combine two partial hypothesesand are not generating translations left-to-right, oneinstead has two partial hypotheses states sleft andsright as inputs, and the outputs are the same.
Ourfirst goal is to describe how these functions can beefficiently implemented.The feature function costs are multiplied by fixedweights and added together to obtain the total hy-pothesis cost.
Normally feature functions includethe logarithm of probability of target phrase givensource, source given target and other phrase-localfeatures which require no state to be kept, as wellas features like language model, which require non-trivial state.
The weights are usually learned auto-matically, however we will set them manually forour feature functions to be effectively infinite, sincewe want them to override all other sources of infor-mation.We will now examine some different kinds of po-etry and consider the properties of such feature func-tions, especially with regard to keeping necessarystate.
We are concerned with minimizing the amountof information to be kept, both due to memory re-quirements, and especially to ensure that compati-ble hypotheses can be efficiently recombined by thedecoder.3.1 Line-length constrained poetrySome poetic genres, like the above-mentionedhaiku, require that a poem contain a certain num-ber of lines (3 for haiku), each containing a certainnumber of syllables (5,7,5 for haiku).
These gen-res include lanternes, fibs, tankas, and many others.These genres impose two constraints.
The first con-straint is on total length.
This requires that each hy-pothesis state contain the current translation length(in syllables).
In addition, whenever a hypothesis isexpanded, we must keep track of whether or not itwould be possible to achieve the desired final lengthwith such an expansion.
For example, if in the ini-tial state, we have a choice between two phrases, andpicking the longer of the two would make it impos-sible to have a 17-syllable translation later on, wemust impose a high cost on it, so as to avoid goingdown a garden path.The second constraint is on placing line breaks:they must come at word boundaries.
Therefore the5th and 12th (and obviously 17th) syllable must endwords.
This also requires knowing the current hy-pothesis?
syllable length, but unlike the first con-straint, it can be scored entirely locally, without con-sidering possible future expansions.
For either con-straint, however, the sentence has to be assembledstrictly left-to-right, which makes it impossible tobuild partial hypotheses that do not start the sen-tence, which hierarchical and tree-to-string decodersrequire.3.2 Rhythmic poetrySome famous Western poetry, notably Shakespeare,is written in rhythmic poetry, also known as blankverse.
This poetry imposes a constraint on the pat-tern of stressed and unstressed syllables.
For exam-ple, if we use 0 to indicate no stress, and 1 to indicatestress, blank verse with iambic foot obeys the regu-lar expression (01)?, while one with a dactylic footlooks like (100)?.
This genre is the easiest to han-dle, because it does not require current position, butonly its value modulo foot length (e.g.
for an iamb,whether the offset is even or odd).
It is even possi-ble, as described in Section 4, to track this form in adecoder that is not left-to-right.1593.3 Rhythmic and rhyming poetryThe majority of English poetry that was written un-til recently has both rhythm and rhyme.
Generallyspeaking, a poetic genre of this form can be de-scribed by two properties.
The first is a rhymingscheme.
A rhyming scheme is a string of letters,each corresponding to a line of a poem, such thatthe same letter is used for the lines that rhyme.E.g.
aa is a scheme for a couplet, a 2-line poemwhose lines rhyme.
A sonnet might have a com-plicated scheme like abbaabbacdecde.
The secondproperty concerns meter.
Usually lines that rhymehave the same meter (i.e.
the exact sequence ofstressed and unstressed syllables).
For example, aniambic pentameter is an iamb repeated 5 times, i.e.0101010101.
We can describe a genre completelyby its rhyming scheme and a meter for each letterused in the rhyming scheme.
We will refer to this ob-ject as genre description.
E.g.
{abab, a : 010101, b :10101010} is a quatrain with trimeter iambic andtetrameter trochaic lines.
Note that the other twokinds of poetry can also be fit by this structure, ifone permits another symbol (we use *) to stand forthe syllables whose stress is not important, e.g.
ahaiku: {abc, a : ????
?, b : ??????
?, c : ?????
}.For this type of genre, we need to obey the same twoconstraints as in the line-based poetry, but also to en-sure that rhyming constraints hold.
This requires usto include in a state, for any outstanding rhyme let-ter, the word that occurred at the end of that line.
Itis not sufficient to include just the syllable that mustrhyme, because we wish to avoid self-rhymes (wordrhyming with an identical word).4 Stress pattern feature functionWe will first discuss an easier special case, namelya feature function for blank verse, which we will re-fer to as stress pattern feature function.
This featurefunction can be used for both phrase-based and hier-archical systems.In addition to a statistical MT system (Och andNey, 2004; Koehn et al, 2007), it is necessary tohave the means to count the syllables in a word andto find out which ones are stressed.
This can be donewith a pronunciation module of a text-to-speechsystem, or a freely available pronunciation dictio-nary, such as CMUDict (Rudnicky, 2010).
Out-of-vocabulary words can be treated as always imposinga high cost.4.1 Stress pattern for a phrase-based systemIn a phrase based system, the feature function stateconsists of the current hypothesis length modulofoot length.
For a 2-syllable foot, it is either 0 or1, for a 3-syllable foot, 0, 1, or 2.
The proposedtarget phrase is converted into a stress pattern usingthe pronunciation module, and the desired stress pat-tern is left shifted by the current offset.
The cost isthe number of mismatches of the target phrase vs.the pattern.
For example, if the desired pattern is010, current offset is 1, and the proposed new phrasehas pattern 10011, we shift the desired pattern by 1,obtaining 100 and extend it to length 5, obtaining10010, matching it against the proposal.
There isone mismatch, at the fifth position, and we report acost of 1.
The new state is simply the old state plusphrase length, modulo foot length, 0 in this example.4.2 Stress pattern for a hierarchical systemIn a hierarchical system, we in general do not knowhow a partial hypothesis might be combined on theleft.
A hypothesis that is a perfect fit for pattern 010would be horrible if it is placed at an offset that isnot divisible by 3, and vice versa, an apparently badhypothesis might be perfectly good if placed at suchan offset.
To solve this problem, we create statesthat track how well a partial hypothesis fits not onlythe desired pattern, but all patterns obtained by plac-ing this pattern at any offset, and also the hypothesislength (modulo foot length, as usual).
For instance,if we observe a pattern 10101, we record the fol-lowing state: {length: 1, 01 cost: 5, 10 cost: 0}.If we now combine this state with another, such as{length: 0, 01 cost: 1, 10 cost: 0}, we simply addthe lengths, and combine the costs either of the samekind (if left state?s length is even), or the opposite (ifit is odd).
In this instance we get {length: 1, 01cost: 5, 10 cost: 1}.
If both costs are greater than 0,we can subtract the minimum cost and immediatelyoutput it as cost: this is the unavoidable cost of thiscombination.
For this example we get cost of 1, anda new state: {length: 1, 01 cost: 4, 10 cost: 0}.
Forthe final state, we output the remaining cost for thepattern we desire.
The approach is very similar forfeet of length 3.1604.3 Stress pattern: Whatever fitsWith a trivial modification we can output transla-tions that can fit any one of the patterns, as longas we do not care which.
The approach is identicalfor both hierarchical and phrase-based systems.
Wesimply track all foot patterns (length 2 and length3 are the only ones used in poetry) as in the abovealgorithm, taking care to combine the right patternscores based on length offset.
The length offset nowhas to be tracked modulo 2*3.This feature function can now be used to trans-late arbitrary text into blank verse, picking whatevermeter fits best.
If no meters can fit completely, itwill produce translations with the fewest violations(assuming the weight for this feature function is sethigh).5 General poetic form feature functionIn this section we discuss a framework for track-ing any poetic genre, specified as a genre descrip-tion object (Section 3.3 above).
As in the case ofthe stress pattern function, we use a statistical MTsystem, which is now required to be phrase-basedonly.
We also use a pronunciation dictionary, butin addition to tracking the number and stress of syl-lables, we must now be able to provide a functionthat classifies a pair of words as rhyming or non-rhyming.
This is in itself a non-trivial task (Byrdand Chodorow, 1985), due to lack of a clear defini-tion of what constitutes a rhyme.
In fact rhyming isa continuum, from very strong rhymes to weak ones.We use a very weak definition which is limited to asingle syllable: if the final syllables of both wordshave the same nucleus and coda1, we say that thewords rhyme.
We accept this weak definition be-cause we prefer to err on the side of over-generationand accept even really bad poetry.5.1 Tracking the target lengthThe hardest constraint to track efficiently is therange of lengths of the resulting sentence.
Phrase-based decoders use a limited-width beam as theybuild up possible translations.
Once a hypothesisdrops out of the beam, it cannot be recovered, sinceno backtracking is done.
Therefore we cannot afford1In phonology, nucleus and coda together are in fact calledrhyme or rimeto explore a part of the hypothesis space which hasno possible solutions for our constraints, we must beable to prune a hypothesis as soon as it leads us tosuch a subspace, otherwise we will end up on an un-recoverable garden path.
To avoid this problem, weneed to have a set of possible sentence lengths avail-able at any point in the search, and to impose a highcost if the desired length is not in that set.Computing this set exactly involves a standard dy-namic programming sweep over the phrase lattice,including only uncovered source spans.
If the maxi-mum source phrase size is k, source sentence lengthis n and maximum target/source length ratio for aphrase is l (and therefore target sentence is limitedto at most ln words), this sweep requires going overO(n2) source ranges, each of which can be producedin k ways, and tracking ln potential lengths in each,resulting in O(n3kl) algorithm.
This is unaccept-ably slow to be done for each hypothesis (even not-ing that hypotheses with the same set of already cov-ered source position can share this computation).We will therefore solve this task approximately.First, we can note that in most cases the set of possi-ble target lengths is a range.
This is due to phraseextraction constraints, which normally ensure thatthe lengths of target phrases form a complete range.This means that it is sufficient to track only a mini-mum and maximum value for each range, reducingtime to O(n2k).
Second, we can note that whenevera source range is interrupted by a covered phrase andsplit into two ranges, the minimal and maximal sen-tence length is simply the sum of the correspond-ing lengths over the two uncovered subranges, plusthe current hypothesis length.
Therefore, if we pre-compute the minimum and maximum lengths overall ranges, using the same dynamic programming al-gorithm in advance, it is only necessary to iterateover the uncovered ranges (at most O(n), and O(1)in practice, due to reordering constraints) at runtimeand sum their minimum and maximum values.
As aresult, we only need to do O(n2k) work upfront, andon average O(1) extra work for each hypothesis.5.2 State spaceA state for the feature function must contain the fol-lowing elements:?
Current sentence length (in syllables)161?
Set of uncovered ranges (as needed for thecomputation above)?
Zero or more letters from the rhyming schemewith the associated word that has an outstand-ing rhyme5.3 The combination algorithmTo combine the hypothesis state sin with a phrasepair p, do the following1.
Initialize cost as 0, sout as sin2.
Update sout: increment sentence length by tar-get phrase length (in syllables), update cover-age range3.
Compute minimum and maximum achievablesentence length; if desired length not in range,increment cost by a penalty4.
For each word in the target phrase(a) If the word?s syllable pattern does notmatch against desired pattern, add numberof mismatches to cost(b) If at the end of a line:i.
If the line would end mid-word, incre-ment cost by a penaltyii.
Let x be this line?s rhyme scheme let-teriii.
If x is present in the state sout, checkif the word associated with x rhymeswith the current word, if not, incre-ment cost by a penaltyiv.
Remove x with associated word fromthe state soutv.
If letter x occurs further in therhyming scheme, add x with the cur-rent word to the state sout5.4 Tracking multiple patternsThe above algorithm will allow to efficiently searchthe hypothesis space for a single genre descriptionobject.
In practice, however, there may be severaldesirable patterns, any one of which would be ac-ceptable.
A naive approach, to use multiple fea-ture functions, one with each pattern, does not work,since the decoder is using a (log-)linear model, inwhich costs are additive.
As a result, a pattern thatmatches one pattern, but not another, will still havehigh cost, perhaps as high as a pattern that partiallymatches both.
We need to combine feature functionsnot linearly, but with a min operator.
This is easilyachieved by creating a combined state that encodesthe union of each individual function?s states (whichcan share most of the information), and in additioneach feature function?s current total cost.
As longas at least one function has zero cost (i.e.
can po-tentially match), no cost is reported to the decoder.As soon as all costs become positive, the minimumover all costs is reported to the decoder as unavoid-able cost, and should be subtracted from each fea-ture function cost, bringing the minimum stored inthe output state back to 0.It is also possible to prune the set of functions thatare still viable, based on their cost, to avoid keepingtrack of patterns that cannot possibly match.
Usingthis approach we can translate arbitrary text, providea large number of poetic patterns and expect to getsome sort of poem at the end.
Given a wide varietyof poetic genres, it is not unreasonable to expect thatfor most inputs, some pattern will apply.
Of course,for translating actual poetry, we would likely have aspecific form in mind, and a positive outcome wouldbe less likely.6 ResultsWe train a baseline phrase-based French-Englishsystem using WMT-09 corpora (Callison-Burch etal., 2009) for training and evaluation.
We use a pro-prietary pronunciation module to provide phoneticrepresentation of English words.6.1 Stress Pattern Feature FunctionWe have no objective means of ?poetic?
quality eval-uation.
We are instead interested in two metrics:percentage of sentences that can be translated whileobeying a stress pattern constraint, and the impactof this constraint on BLEU score (Papineni et al,2002).
Obviously, WMT test set is not itself in anyway poetic, so we use it merely to see if arbitrarytext can be forced into this constraint.The BLEU score impact on WMT has been fairlyconsistent during our experimentation: the BLEUscore is roughly halved.
In particular, for theabove system the baseline score is 35.33, and stress162Table 1: Stress pattern distributionName Pattern % of matchesIamb 01 9.6%Trochee 10 7.2%Anapest 001 27.1%Amphibrach 010 32.1%Dactyl 100 23.8%pattern-constrained system only obtains 18.93.The proportion of sentences successfully matchedis 85%, and if we permit a single stress error, it is93%, which suggests that the constraint can be sat-isfied in the great majority of cases.
The distributionof stress patterns among the perfect matches is givenin Table 1.Some of the more interesting example translationswith stress pattern enforcement enabled are given intable 2.6.2 Poetic Form Feature FunctionFor poetic form feature function, we perform thesame evaluation as above, to estimate the impact offorcing prose into an arbitrary poetic form, but to getmore relevant results we also translate a poetic workwith a specific genre requirement.Our poetic form feature function is given a listof some 210 genre descriptions which vary fromHaikus to Shakespearean sonnets.
Matching any oneof them satisfies the constraint.
We translate WMTblind set and obtain a BLEU score of 17.28 with thebaseline of 35.33 as above.
The proportion of sen-tences that satisfied one of the poetic constraints is87%.
The distribution of matched genres is givenin Table 3.
Some of the more interesting exampletranslations are given in table 2.For a proper poetic evaluation, we use a Frenchtranslation of Oscar Wilde?s Ballad of Reading Gaolby Jean Guiloineau as input, and the original Wilde?stext as reference.
The poem consists of 109 stanzasof 6 lines each, with a genre description of {abcbdb,a/c/d: 01010101, b: 010101}.
The French versionobeys the same constraint.
We treat each stanza as asentence to be translated.
The baseline BLEU scoreis 10.27.
This baseline score is quite low, as canbe expected for matching a literal MT translationagainst a professional poetical translation.
We eval-uate our system with a poetic constraint given above.Table 3: Genre distribution for WMT corpus.
(Descriptions of these genres can be found in Wikipedia,http://en.wikipedia.org)Genre Number PercentageNo poem 809 13.1%Blank verse 5107 82.7%Couplet 81 1.3%Haiku 42 0.7%Cinquain 33 0.5%Dodoitsu 24 0.4%Quinzaine 23 0.4%Choka 18 0.3%Fib 15 0.2%Tanka 14 0.2%Lanterne 4 0.1%Triplet 1 0.02%Quatrain 1 0.02%Total 6172 100%The resulting score is 7.28.
Out of 109 stanzas, wefound 12 translations that satisfy the genre constraint(If we allow any poetic form, 108 out of 109 stanzasmatch some form).
Two sample stanzas that satisfiedthe constraints are given in Table 4.7 Discussion and Future WorkIn this work we demonstrate how modern-day sta-tistical MT system can be constrained to search fortranslations obeying particular length, meter, andrhyming constraints, whether a single constraint, orany one of a set.
We further demonstrate that the hy-pothesis space is often rich enough that these con-straints can be satisfied.
The impact on translationquality, however, is quite profound, as is to be ex-pected.
It seems that at the present state of machinetranslation, one does indeed have to choose betweengetting either the form or the meaning right.
In thepresent form, however, we can already find goodtranslations, as a sort of found poetry (Drury, 2006),by translating a large quantity of text, whether poeticor not.This is the first attempt to deal with poetry trans-lation, and the great majority of work to achieve rea-sonable quality in form and meaning still remains tobe done.
One major problem with the current fea-ture function is that while it can avoid the areas ofthe search space where length constraints cannot be163Table 2: Example translations.
Stressed syllables are italicizedReference A police spokesman said three people had been arrested and thematerial was being examined.Baseline A policeman said that three people were arrested and that the ma-terial is currently being analyzed.Stress Pattern (001) A police said that three were arrested and that the equipment iscurrently being examined.Poetic: Couplet in amphi-brachic tetrameterAn of ficer stated that three were arrestedand that the equipment is currently tested.Reference A trio of retired generals launched a mutiny in the Lords, protest-ing against cuts in military spending: being armed-forces ministeris, they claimed, a part-time job.Baseline A trio of retired generals have launched a revolt among the Lords,protesting against cuts in military spending: they have proclaimedonly Minister of Defence is for them, a part-time employment.Stress Pattern (010) A trio of general retirement launched a rebellion among Lords,protesting the spending cuts troops: they claimed Minister onlydefense is for them, a part-time job.Poetic: Blank Verse in amphi-brachic trimeterA trio of generals retiredhave launched an uprising among Lords,protesting the spending cuts members:they minister only proclaimed thedefense is for them, a part-time job.Reference We must continue to condemn human rights abuses in Burma.Baseline We must continue to denounce the violations of human rightsabuses in Burma.Stress Pattern (100) We must continue to speak out against rights abuses committed inBurma.Poetic: Haiku: 5-7-5 syllables We must continuedenounce violations ofhuman rights Burma.164Table 4: Sample translations from Oscar Wilde?s Ballad of Reading Gaol.Wilde?s original Our translationHe did not wring his hands, as do Without hands twisted like these men,Those witless men who dare Poor men without hope, dareTo try to rear the changeling Hope To nourish hope in our vaultIn the cave of black Despair: Of desperation thereHe only looked upon the sun, And looked toward the sun, drink coolAnd drank the morning air.
Until the evening air.With slouch and swing around the ring We are in our circle weWe trod the Fool?s Parade!
Dragged like the Fools?
Parade!We did not care: we knew we were It mattered little, since we wereThe Devil?s Own Brigade: The Devil?s sad Brigade:And shaven head and feet of lead A shaved head and the feet of leadMake a merry masquerade.
Regardless gay charade!satisfied, it cannot avoid the areas where rhymingconstraints are impossible to satisfy.
As a result, weneed to allow a very wide hypothesis beam (5000 pereach source phrase coverage), to ensure that enoughhypotheses are considered, so that there are somethat lead to correct solutions later.
We do not cur-rently have a way to ensure that this happens, al-though we can attempt to constrain the words thatend lines to have possible rhymes, or employ otherheuristics.
A more radical solution is to create anentirely different decoding algorithm which placeswords not left-to-right, or in a hierarchical fashion,but first placing words that must rhyme, and build-ing hypotheses around them, like human translatorsof poetry do.As a result, the system at present is too slow, andwe cannot make it available online as a demo, al-though we may be able to do so in the future.The current approach relies on having enough lex-ical variety in the phrase table to satisfy constraints.Since our goal is not to be literal, but to obtain asatisfactory compromise between form and mean-ing, it would clearly be beneficial to augment targetphrases with synonyms and paraphrases, or to allowfor words to be dropped or added.8 AcknowledgementsWe would like to thank all the members of the MTteam at Google, especially Richard Zens and MosheDubiner, for their help.
We are thankful to theanonymous reviewers for their comments, especiallyto the one that to our amazement did the entire re-view in verse2.ReferencesP.
Bootz.
1996.
Poetic machinations.
Visible Language,30(2):118?37.Roy J. Byrd and Martin S. Chodorow.
1985.
Using anon-line dictionary to find rhyming words and pronun-ciations for unknown words.
In Proceedings of the23rd Annual Meeting of the Association for Compu-tational Linguistics, pages 277?283, Chicago, Illinois,USA, July.
Association for Computational Linguistics.Chris Callison-Burch, Philipp Koehn, Christof Monz,and Josh Schroeder.
2009.
Findings of the 2009Workshop on Statistical Machine Translation.
InProceedings of the Fourth Workshop on StatisticalMachine Translation, pages 1?28, Athens, Greece,March.
Association for Computational Linguistics.B.
D?
?az-Agudo, P. Gerva?s, and P. Gonza?lez-Calero.2002.
Poetry generation in colibriza.
In Advances inCase-Based Reasoning, pages 157?159.
Springer.John Drury.
2006.
The poetry dictionary.
Writer?s Di-gest Books.C.O.
Hartman.
1996.
Virtual muse: experiments in com-puter poetry.
Wesleyan University Press.Douglas R. Hofstadter.
1998.
Le Ton Beau De Marot:In Praise of the Music of Language.
Perseus BooksGroup.2With the reviewer?s permission, we feel that the ex-tra work done by the reviewer deserves to be seen bymore than a few people, and make it available for you toview at: http://research.google.com/archive/papers/review_in_verse.html165Long Jiang and Ming Zhou.
2008.
Generating Chi-nese couplets using a statistical MT approach.
InProceedings of the 22nd International Conference onComputational Linguistics (Coling 2008), pages 377?384, Manchester, UK, August.
Coling 2008 Organiz-ing Committee.D.E.
Knuth.
1984.
The complexity of songs.
Communi-cations of the ACM, 27(4):344?346.Philipp Koehn, Hieu Hoang, Alexandra Birch, ChrisCallison-Burch, Marcello Federico, Nicola Bertoldi,Brooke Cowan, Wade Shen, Christine Moran, RichardZens, Chris Dyer, Ondrej Bojar, Alexandra Con-stantin, and Evan Herbst.
2007.
Moses: Open sourcetoolkit for statistical machine translation.
In Proceed-ings of the 45th Annual Meeting of the Association forComputational Linguistics Companion Volume Pro-ceedings of the Demo and Poster Sessions, pages 177?180, Prague, Czech Republic, June.
Association forComputational Linguistics.H.M.
Manurung, G. Ritchie, and H. Thompson.
2000.Towards a computational model of poetry generation.In Proceedings of AISB Symposium on Creative andCultural Aspects and Applications of AI and CognitiveScience, pages 79?86.
Citeseer.Vladimir Nabokov.
1965.
Eugene Onegin: A Novel inVerse by Alexandr Pushkin, Translated from the Rus-sian.
Bollingen Foundation.Franz Josef Och and Hermann Ney.
2002.
Discrimi-native training and maximum entropy models for sta-tistical machine translation.
In Proceedings of 40thAnnual Meeting of the Association for ComputationalLinguistics, pages 295?302, Philadelphia, Pennsylva-nia, USA, July.
Association for Computational Lin-guistics.Franz Josef Och and Hermann Ney.
2004.
The align-ment template approach to statistical machine transla-tion.
Computational Linguistics, 30(4):417?449.Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu.
2002.
Bleu: a method for automatic eval-uation of machine translation.
In Proceedings of 40thAnnual Meeting of the Association for ComputationalLinguistics, pages 311?318, Philadelphia, Pennsylva-nia, USA, July.
Association for Computational Lin-guistics.Ananth Ramakrishnan A., Sankar Kuppan, and SobhaLalitha Devi.
2009.
Automatic generation of Tamillyrics for melodies.
In Proceedings of the Workshopon Computational Approaches to Linguistic Creativity,pages 40?46, Boulder, Colorado, June.
Association forComputational Linguistics.Alex Rudnicky.
2010.
The Carnegie Mellon pronounc-ing dictionary, version 0.7a.
Online.166
