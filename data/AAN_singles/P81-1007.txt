J. Norwood CroutArtificial Intelligence CorporationThe INTELLECT natura l  language database  query  sys tem,  aproduct of Artificial Intelligence Corporation, is theonly commercially available system with true Englishquery capability.
Based on experience with INTELLECT inthe areas of quality assurance and customer support, anumber of issues in evaluating a natural language data-base query system, particularly the INTELLECT system,will be discussed.A, I.
Corporation offers licenses for customers to  usethe INTELLECT software on their computers, to accesstheir databases.
We now have a number of customer instal-lations, plus reports from companies that are marketingINTELLECT under agreements with us, so that we can beginto discuss user reactions as possible criteria for eval-uating our system.INTELLECT's basic function is to translate typed Englishqueries into retrieval commands for a database manage-ment system, then present the retrieved data, or answersbased on it, to the terminal user.
It is a generalsoftware tool, which can be easily applied to a wide va-riety of databases and user environments.
For eachdatabase, a Lexicon, or dictionary, must be prepared.The Lexicon describes the words and phrases relevant tothe data and how they relate to the data items.
Thesystem maintains a log of all queries, for analysis ofits performance.Artificial Intelligence Corporation was founded aboutfive years ago, for the specific purpose of developingand marketing an English language database query pro-duct.
INTELLECT was the creation of Dr. Larry Harris,who presently supervises its ou-golng development.
Thecompany has been successful in developing a marketableproduct and now looks forward to sisnlficant expansionof both its customer base and its product line.
Ver-sions of the product presently exist for interfacingwith ADABAS, VSAM, Multics Relational Data Store, andA.
I.
Corporation's own Derived File Access Method.Additional interfaces, including one to Cullinane'sIntegrated Database Management System, are nearing com-pletion.A.
I.
Corporation's quality assurance program tests theability of the system to perform all of its intended re-trieval, processing, and data presentation functions.We also test its fluency: its ability to understand, re-trieve, and process requests that  are expressed in awide variety of English phrasings.
Part of this fluencytesting consists of free-wheellng queries, but a majorcomponent of it is conducted in a formalized way: a num-ber of phrases (between 20 and 50) are chosen, each ofwhich represents either selection of records, specifica-tion of the data items or expressions to be retrieved,or the formatting and processing to be performed.
Aquery generator program then selects different combina-tions of these phrases and, for each set of phrases,generates queries by arranging the phrases in differentpermutations, with and without connecting prepositions,conjunctions, and aruicles.
The file of queries is thenprocessed by the INTELLECT system in a batch mode, andthe resulting transcript of queries and responses isscanned to look for instances of improper interpreta-tion.
Such a file of queries will contain, in additionto reasonable English sentences, both sentence fragmentsand unnatural phrasings.
This kind of test is desir-able, since users who are familiar with the system willfrequently enter only those words and phrases chat arenecessary to express their needs, with little regard forEnglish syntax, in order to minimize the number of key-strokes.
The system in fact performs quite well withsuch terse queries, and users appreciate this capabili-ty.
Query statistics from this kind of testing are notmeaningful as a measure of system fluency since many ofthe queries were deliberately phrased in an un-Englishway.In addition to our testing program, information onINTELLECT's performance comes from the experiences ofour customers.
Customer evaluations of its fluency areuniformly good; there is a lot of enthusiasm for thistechnical achievement and its usefulness.
Statistics on?
several hundred queries from two customer sites are pre-sented.
They show a high rate of successful processingof queries.
The main conclusion to be drawn from thisis chat the users are able to communicate effectivelywith INTELLECT in their environment.INTELLECT's basic capability is data retrieval.
Withinthe language domain defined by the retrieval semanticsof the particular DBMS and the vocabulary of the parti-cular database, INTELLECT's understanding is fluent.INTELLECT's capabilities go beyond simple retrieval,however.
It can refer back to previous queries, doarithmetic calculations with numeric fields, calculatebasic functions such as maximum and total, sort andbreak down records in categories, and vary its outputformat.
Through this ausmentatlon of its retrieval ca-pability, INTELLECT has become more useful in a businessenvironment, but the expanded language domain is not soeasily charaeterlzed, or described, to naive users.A b ig  advantage of English language query systems is theabsence of training as a requirement for its use; thispermits people to access data who are unwilling or un-able to learn how to use a structured query system.
Allthat is required is that a person know enough about thedata to be able to pose a meaningful question and beable to type on a terminal keyboard.
INTELLECT is avery attractive system for such casual or technicallyunsophisticated users.
Such people, however, often donot have a clear concept of the data model being usedand cannot distinguish between the data retrieval, sum-marization, or categorization of retrieved data whichINTELLECT can do, and more complex processing.
They mayask for thlngs that are outside the system's functionalcapabilities and, hence, its domain of language compre-hension.In st-,~-ry, we feel that INTELLECT has effectively solvedthe man-machine communication problem for database re-trieval, within its realm of applicability.
We are nowaddressing the question of what business environmentsare best served by Engllsh-languaEe database retrievalwhile at the same time continuing our development bys i~if icant ly expanding INTELLECT's semantic, and henceits lin~uistlc, domain.31
