EXPERIMENTS WITH AN MT-DIRECTEDLEXICAL KNOWLEDGE BANKB.C.
PapegaaijV.
SadlerA.P.M.
WitkamBSO/ResearchBureau voor SysteemontwikkelingP.O.
Box 83483503 RH UtrechtThe NetherlandsAbstractA crucial test for any MT system is its power tosolve lexical ambiluities.
The size of the lexicon,its structural principles and the availability ofextra-lin_~istic knowled~q are the most importantaspects in this respect.
This paper outlines theexperimental development of the SWESIL system: astructured lexicon-based word expert system designedto play a pivotal role in the process of Distributed~an_~ay ~ Translation (DLT) which is being developedin the Netherlands.
It presents SWESIL's organizingprinciples, gives a short description of the presentexperimental set-up and shows how SWESIL is beingtested at this moment.IntroductionThe DLT project \[WITKAM 1983\] utilizes anIntermediate Lan?ua_~ (IL), in which form thetranslated text will be transported to the variousreceivers, where it will be translated into any ofthe avaiIable target-languages.
DLT, therefore, isessentially a double translation - first into, thenout of - the IL.As a consequence of this strategy, one of DLT'scentral features is the pivotal role played by itsLexical Knowledge Bank.
This knowledge bank, acentral part of SWESIL (Semantic Word-Expert Systemfor the InterLingua), has been designed to containthe lexical knowledge the DLT system needs: theentire vocabulary, contextual dependencies and a\]lthe system's semantic knowledf~: the informationnecessary to distinguish between word meanings,knowledge about the way those meanings mutuallyinfluence each other, and the procedural knowledgethat enables the system to calculate the probabilityof each possible interpretation of a given sentence(or fragment) and carry out the intricate process ofle___xxical disambiguation and a~digmat ic  selection.As both sides of the tranlation process greatlyrely on the kind of knowledge SWESIL embodies, andsince they both use the IL as medium fordisambiguation, it appeared advantageous from thestart to store SWESIL's knowledge entirely in ILformat.
This choice is supported by a number ofproperties of the IL such as its lack of homonyms,freedom from syntactic ambiguities, power ofexpression, and easy inspectability \[see fordetails: WITKAM 1983\].The structure of the knowledge bankThe SWESIL knowledge bank is a multi-dimensionaltaxonomy, incorporating ~ ,  9ntological, andcontextual dependency information.
Its basic unit isthe dictiqnary entrl (Table i).
The starting pointfor each entry is an IL lexeme: a single IL word inits undeclined form.
To discriminate between variousintended usages of the one lexeme, and to link thelexeme into the taxonomic tree structure, it isgiven one k e ~  for every meaning to be defined.This keyterm is a more abstract term \[or the conceptthe lexeme itself denotes, and relates to the lexemethrough a kind of ISA link.Note the general structure: lexemo <keyterm> <<supeF keyterlq>> followedthe depoucy pairs .
\[)el,elldel~ey pairs wiLh more that% one wc)rd on e i \ [her  side o{the re la tor  must be read as abb\[eviated forms for  a l l  the combinations ol  the~ a n d  r ight -hand words.konduk'i <tra'ir'ig'i> <<tra'mov'i~'ig'i>>(to conduct) (cause to go through) {cause to be moved through)FIRST ARGUMENT RELATOR SECOND ARGUMENTkonduk'i <tra'ir'ig'i> io-n kurent'o,likv'a\]'o,gas'o{inanimaCe ?ATIENT\] (current,liquid,gass}konduk'i <tra'ir'ig'i> per drat'o,kanal'o,tub'o~il'o{with INSTRUMENT1 Iwi~o,channel,tuhe,instrumant}konduk'i <tra'ir'ig'i> ien-al,de lok'~,dom,o,ma~in,o,ejro(to/from PLACE} \[position,house,i~achine,placelkonduk'i <tra'ir'ig'i> por proviz'i,for'ig~i,el'ig'i{to PURPOSE) {supply,remove,cause output{konduk'i <tra'ir'ig'i> ie-en, tra kabl'o,siste~'o,kloak'o(within,trough} {cable,system,sewer}in~enier'o,instal~ist'o as konduk'i <tra'ir'igri>(engineer,installator\] {AGENT off)rekt'a e konduk'i <tra'ir~ig'i>(straight,dlrectiy} {MANNER\]konduk'i <tra'ir'ig'i> ie-en mar'o,lag'o,lok'o,eJ'o(intol (sea,lake,position~place)for'ig'i,el'ig'i io-n likv'a~'o~gas'oproviz' i io-n lok' o, dora' o ,ma~in' o ,ej ' oTo ensure that the word ls properly linked intothe tree (and to reduce the number of possiblesearch paths when disambiguatin?)
the keyterm itselfis labeled with a super-keyterm, related to thekeyterm through the same ISA link that relates thekeyterm to the lexeme.
This information (the lexemeswith their keyterms and super-keyterms) creates ata_~led hierarch t structure, with the more specificlexemes towards the bottom of the taxonomy and themore 'primitive' ones at the top, with an uniqueupward path defined for each meaning.
To provideinferential power, the IL iatra-word g<ammar isused, by means of which SWESIL can decompose complexkeyterms into their logical constituents and reasonabout them.Each lexeme is described in detail in its entr\[:used both to differentiate the concept being definedfrom its "genus" (C f .
\[CALZOLARI 1984, AMSLER1980\]), and to describe the coatextua l~ectat ionsof the lexeme in question.
A definition is built upfrom ~ a i r s :  each pair consisting of twolexemes tied to each other with a relator.
A relatoris an IL word (usually a function morpheme orpreposition) which denotes the roles the two lexemesplay in relation to each other (see table i).
Mostof the relators are used to represent the contextual432expectation, pattern of the lexeme: they specify therelations with the context typically expected forthis entry, and the kind of lexemes most likely topartake in them.
The complete information eventuallyto be contained in a definition can be said torepresent what Mel'~uk calls the "Lexical Universe"of the entry \[MEL'~UK 1984\].The Disambiguation CycleThe DLT syntactic parser generates dependency.trees: structural descriptions of the syntacticallypossible representations of a given sentence\[SCHUBERT 1986\], from which a special diathesismodule extracts relevant semantic information whichit passes on to the SWESIL system in the form ofdependency pairs similar to those found in theSWESIL entries.
For each source language lexicalunit, the diathesis module will search the SL to ILlexicon and will generate as many dependency pairsas necessary to capture all possible interpretationsof a given \])art of the source string, using theprocess of paradigmatic extension (i.e.
filling in,for each lexeme, all possible word senses found inthe dictionary).SWESIL receives those paradigms of dependencypairs (ca|led IS|' pairs) and ca\]culates whichinterpretation best fits its expectations bycomparing them with the information in its know|edgebank (the SOLL pairs).The actual process of selecting the best fitfrom a set of possible ones is one of rankin&: theconflicting pairs will be ordered according to theheight of their match score.
Those pairs that bestfit the knowledge bank information come out highest,those that fit less come out lower.It is important to note here that the DLT systemis designed to become an integral part of moderntext-processing apparatus, and will parse texts'on-line', starting the generation of 'parse trails'as soon as the first word arrives.
The re\].ativeJ.yslow speed of the typed input gives SWESIL theopportunity to 'interleave' wJ.th the parser and do alarge amount of step by step pre.-orderinK, #@dueingthe time needed for the final ordering (w~en allsyntactical\]y impossible interpretations have beenweeded out) to a minimum.The criterium for choosing one interpretationamongst various others is always relative: only whenone interpretation scores substantially higher thanany of the others can it be said to be preferredover those others and accepted as the one to bepassed on to the final representation.
Unless adefinitive choice can be made, the conflicting pairshave to be handed on to the disambiguation dialo ugh,by means of which the.human user of the system canassist in making the correct choice.
Since SWESILhas already calculated the relative probabilities ofthe pairs, the dialogue module can use this to makethe dialogue more intelligent and user-friendly, bypresenting only the highest-scoring pair(s) to theuser, not showing the full range of possibilitiesunless the proposed solution is rejected.The Matching ProcedureTo calculate the extent to which an IST pairconforms to the SOLL pair information in theknowledge bank, SWESIL uses a match score module.This match score module accepts as input onedependency \])air, and returns a score which reflectshow well that dependency pair fits the expectat:ionsfound in the knowledge bank.
What the match scoremodule basically does is to take the input IST pair,locate the entries of both its constituent \]exemes,and then search both entries for the occurrence ofSOLL pairs that are similar (the notion 'similar'being defined by a number of matching rules) to theIST pair and calculate their measure of similarity.When both entries have been completely searched andcertain boundary conditions have not been met (seebelow), both lexemes are replaced by their keyterms,and the resulting 'super' IST pair becomes the inputto the same matching procedure (Fig.
i).
Because ofthe way each lexeme can be recursively replaced withits own keyterm, the match score module in effect:searches through the relevant part of the lexioa\]taxonomy and records the match scores for thevarious levels of abstraction it reaches.A number of boundary conditions prevent thesystem from falling into endless loops.
The mostimportant of these conditions is determined by themain purpose of SWESIL: to find among competing ISTpairs the one best fitting the information Jn theknowledge bank.
Because of this, SWESIL carries outthe matching procedures for the IST paJ rs inparallel, and monitors the accumulated scores ofeach pair, testing oa each level of matching to seewhether one of the competing pairs has managed toscore significantly higher than the rest.
If this isso, SWESIL can 'freeze' the matching of the lowerpairs and take the high-scorii~g pair as a 'workinghypothesis', only 'unfreezing' the others if andwhen later evidence (after other sentence elementshave been parsed) seems to invalidate the currentone.F ig .
l; By tem~rs ive Iy  \[\]lOVJl~ lll~ \[l~e , tepund\[mcy h ie la rc iw ,  wo,d~ c,mlie ma\[ched zl{ ~\]t~ \[l~crea~{i~lg ~evel  o f  genera l tza \ [Lm~.Wt?l,~r con/ux \ [  match ing  can a \ ]sa  ( reeH:{Lve ly )  be apg l  h 'd  h>s t lenRthen  the  f i r s t  ardor  matche~{.Another importatt boundary condition is inherentin the taxonomic structure of the knowledge bank.The recursive replacement of lexemes with theirkeyterms (which themselves consist of ordJ narylexemes defined Jn the dictionary) inevitably movest:he search-path ~ward  through the hierarchy,leading to more and more 'primitive' lexemes.
Atsome point the keyterms that replace the lexemes ofthe IST pair will themselves have no keyterms,simply because they are the most 'primitive' ilexemesin the dictionary.
In our IL dictionary, thoseprimitive lexemes (the set of which we call theCORE) do not form a fixed set, but will undergoconstant adjustment as the dictionary is developed.433In practice, CORE lexemes are those lexemes thathave a markedly higher frequency of occurrence inkeyterms or super-keyterms than other lexemes.
Thisis in keeping with Wilks' observation about afrequency count of the Webster dictionary that the"fifty most frequent words show a remarkable overlapwith the fifty-three defining elements \[of his CSDsystem\]" \[WILKS 1972, p. 181\], an observation whichhas been repeated by lexicographers like \[AMSLER1980\] and \[CALZOLARI 1984\].
When the (substituted)IST pair lexemes can no longer be replaced bykeyterms, the process must stop, since the matchscore table now holds all information available inthis part of the taxonomy.A third boundary condition, which has animportant function in preventing endless loops, isthe attenuation factor.
This is a factor by whichthe score for a certain level gets reduced for eachstep this level is away from the 'entry level' atwhich the original IST pair entered the matchingcycle.
The further removed from the entry level(level 0), the lower the maximum possible score willbe; and at some point the maximally obtainable scorewill fall below a certain threshold level, at whichpoint SWESIL stops matching.
In this way, theattenuation factor ensures that the system willeventually always escape endless loops, and it takesinto account the distance between the literal ISTpair as it entered the match score module and thelevel at which a certain match score was found (Fig.i).The Semantic Work BenchThe SWESIL system has now been under developmentfor slightly less than a year, and it is still verymuch an experimental system.
A large part of theeffort is concentrated round the creation of thelexical knowledge bank.
The present lexicon consistsof ca.
1800 IL definitions based on 800 SL (English)words, which amounts to ca.
44.000 dependency pairs,and ca.
i0.000 TL (French) equivalents.
The numberof English entries will grow to ca.
5000 within thenext two years.An experimental environment, the Semantic WorkBench (implemented in Quintus Prolog) is underdevelopment, in which the knowledge bank and thevarious decision mechanisms SWESIL uses can both betested and developed further.
In particular the SWBenables us to study:a) the effect of different thresholds, match scorecalculations, order of searching etc., i.e.
:given the information in the lexicon, how do thevarious matching parameters influence theprocess of disambiguationb) the accuracy and power of dicrimination 8WESILcan achievec) the adequacy of the dictionary entries and theirusefulness in the process of lexicaldisambiguation, i.e.
: can the SWESIL systemreally capture the knowledge and expertise ofthe lexicographerAt the time of writing, the first test runs havebeen completed, each involving the disambiguation ofa single SL pair, extended to a number ofalternative IL pairs (table 2).A typical example of suc~ a test run shows asinput an English dependency pair taken from one ofthe test sentences.
First, this dependency pair willbe represented by several IL pairs to account forthe different meanings of the SL  pair, then SWESILstarts the matching procedure.
The full output (notshown here) shows: the IST pair that is beingmatched, the lexeme (with keyterm) that is taken asstarting point, the SOLL pairs that were found tomatch, together with their match scores and thehierarchic level at which they were found.At the time these experiments were run, SWESILhad no other information to work with than thesingle SL dependency pair.
Because of the lack ofwider context, it was not always possible to find adecisive difference between competing pairs.
Thismerely means that SWESIL rates such pairs withoutcontext as being equally possible.
Only at a laterstage, when wider context is taken into account,will SWESIL be able to make a more confident choicebetween such conflicting pairs,Later this year, the first of a number of testsset up in cooperation with Alan K. Melby (USA) willbe carried out.
In these tests, SWESIL's translationof English text fragments will be compared with HighQuality HUman Translation, with the emphasis on theprecision of lexical transfer.Table 2: From English sentence fragments, IST pairs are generated whichreflect their possible interpretations.
The system then calculates theappropriateness of each pair, which is reflected in the score table.(N.B.
: These examples are excerpts from longer and more detailed listswhich wi l l  become avallable later this ye2\[:)I.
"development of the capital"I,I kapltal~o is evolu'i\[financial captital has evolved) - scored 1.7501.2 kapital'o is kresk'i{financial captial has grown} - scored 1.4071.3 majuskl'o is evolu'i{capital letter has evolved} ~ scored 0.0001.4 maJuskl'o is kresk'i(cApital letter has grow,l} ~ scored 0.160. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.2.
"economic expansion'*2.1 ekonomi'o as kreskqi\[the economy is growing} - scored 1.9052.2 ekonomik'o as kresk'ileconomics is growing I - scored O.1602.3 dllat'i -n ekonomi'oIphysically expand tile economyl - scored 0.1052.4 dilatti -n ekonomlk~o{physically e?pand economicsl - scored 0.084REFERENCESAmsler,R.A.
(1980):The Structure of The Merriam-Web-ster Pocket Dictionarl, Austin; University ofTexasCalzolari,N.
(1984):Detecting Patterns in a LexicalDatabase, In: ProceedinRs of ColinR '84,California; Stanford University, Association forComputational LinguisticsMel'Euk,l.A.
/ A.K.
Zolkovskij \[Zholkovsky\] (1984):T@.ikovo-K0mbinatornyj Slgvar' Sovremennogo ' Russ-kogo Jazyka, Wiener Slawistischer Almanach~Sonderband 14Schubert,K.
(1986):Syntactic Tree Structures in DLTUtrecht, The Netherlands; BSO/Re'searchWilks,Y.A.
(1972):Grammar, Heaning and the MachineAnalysis of Languag!, London; Routledge & KeganPaulWitkam,A.P.M.<1983):Distributed LanguaRe TranslationFegsibil ity.Study of a l,lultiiingual Facility fo_irvideote?t information networks , Utrecht,The Netherlands; BSO434
