Proceedings of the 4th International Workshop on Computational Terminology, pages 52?63,Dublin, Ireland, August 23 2014.The ACL RD-TEC: A Dataset for Benchmarking Terminology Extractionand Classification in Computational LinguisticsBehrang Q. Zadeh?and Siegfried Handschuh??
?Insight Centre of Data AnalyticsNational University of Ireland, Galway?Department of Computer Science and MathematicsUniversity of Passau, Germany{behrang.qasemizadeh, siegfried.handschuh}@insight-centre.orgAbstractThis paper introduces ACL RD-TEC: a dataset for evaluating the extraction and classificationof terms from literature in the domain of computational linguistics.
The dataset is derived fromthe Association for Computational Linguistics anthology reference corpus (ACL ARC).
In itsfirst release, the ACL RD-TEC consists of automatically segmented, part-of-speech-tagged ACLARC documents, three lists of candidate terms, and more than 82,000 manually annotated terms.The annotated terms are marked as either valid or invalid, and valid terms are further classifiedas technology and non-technology terms.
Technology terms signify methods, algorithms, andsolutions in computational linguistics.
The paper describes the dataset and reports the relevantstatistics.
We hope the step described in this paper encourages a collaborative effort towardsbuilding a full-fledged annotated corpus from the computational linguistics literature.1 IntroductionComputational terminology (CT) embraces a set of algorithms that extract terms from domain-specificcorpora and arrange them in domain-specific knowledge structures such as a vocabulary, thesaurus orontology.
Modern methods in CT often take a corpus-based, distributional approach to fulfil their tasks.These methods exploit data-centric, data-sensitive techniques for mining and organizing terms.
Evalu-ation of these methods?as described in Vivaldi and Rodr?
?guez (2007) and Nazarenko and Zargayouna(2009)?is inherently a difficult task.
Regardless of the employed metric and method for the perfor-mance comparison of CT algorithms, however, choosing a shared dataset consisting of a fixed set ofdocuments?which can be accessed freely and easily?is a major step towards alleviating a number ofobstacles in the evaluation process.
From a mathematical perspective, changes in the document set willalter the underlying distribution of words and terms in the benchmark dataset.
Consequently, this canvary the performance of methods.
From perspectives that involve meaning interpretation, as describedin L?Homme (2014), terms are defined against a context.
This context is the representative of a special-ized subject field and reflects the requirements of the intended application for the extracted terms.
In anevaluation dataset, the specialized subject field is largely defined by the set of documents in this dataset.Therefore, variation in the set of documents can result in variant set of terms.Creating datasets for benchmarking CT techniques have been addressed in several research efforts.The GENIA corpus is a well-known example of such reference datasets in bio-text mining: a corpusof 2000 abstracts from scientific publications in biological literature that is accompanied by the anno-tations of 100,000 terms organized in a well-defined ontology (Kim et al., 2003).
The Colorado RichlyAnnotated Full Text Corpus (CRAFT) is another example of a bio-text mining dataset, which consistsof 97 articles from the PubMed Central Open Access subset annotated with biomedical concepts such as?mouse genes?
(Bada et al., 2012).
In a more recent effort, Bernier-Colborne and Drouin (2014) reporton creating a corpus for the evaluation of term extraction in the domain of automotive engineering.This work is licensed under a Creative Commons Attribution 4.0 International Licence.
Page numbers and proceedings footerare added by the organizers.
Licence details: http://creativecommons.org/licenses/by/4.0/52The use of these datasets for CT research and terminology extraction has one obstacle: the minimalprerequisite knowledge that is required to understand these specialized discourse and literature.
This un-derstanding of text is, perhaps, essential to enable a CT researcher to first comprehend and then describea linguistic phenomenon.
Hence, conducting research in these specialized fields requires a training forterminologists.
For example, research in bio-text mining is often conducted by a team that includes ex-perts in biology, bioinformaticians and computational linguists who have specialized training in this field.Conducting CT research in these specialized domains, therefore, may not be the first choice for compu-tational linguists who have a keen interest and specialized knowledge in the computational analysis oflanguages?or want to train themselves to gain this knowledge.1In this paper, we introduce the ACL RD-TEC: a Reference Dataset for Terminology Extraction andClassification in the domain of computational linguistics.
The ACL RD-TEC is drawn from the ACLARC (Bird et al., 2008).
The ACL ARC is a fixed set of scholarly publications in the domain of compu-tational linguistics.
It has been developed with an aim to provide a platform for benchmarking methodsof scholarly document processing.2We report further processes and annotations that have been carriedout on the ACL ARC in order to move a step closer to a reference dataset of familiar materials for theCT research community.Before describing the dataset, Section 2 delineates the terms that are used in this paper and gives a briefsummary of computational terminology.
In Section 3, we explain the automatic and manual processesperformed to create the ACL RD-TEC and summarize the statistics of the current release.
Finally, weconclude and describe our goals for the immediate future in Section 4.2 Computational TerminologyComputational terminology inherits its complexity from the difficulties in the interpretation of meaningin language.
In terminology, these complications are often summarized by the question ?what counts asa term??
The Oxford Dictionary defines a term as?a word or phrase used to describe a thing or to express a concept, specially in a particular kindof language or branch of study?.According to the International Organization for Standardization (ISO), a term is?a verbal designation of a general concept in a specific subject field (ISO 1087-1(2000))?.As stated by Cabr?e (2010), linguistically, terms are lexical units and carry a special meaning in particularcontexts.
A lexical unit is often considered as a lexical form?a single token, part of a word, a word ora combination of these?that is paired with a single meaning and serves as the basic element of a lan-guage?s vocabulary.
As stated by L?Homme (2014), terms are the denomination of items of knowledge,i.e.
concepts.According to their lexical forms, terms are usually classified as simple or complex.
Simple termsconsist of one token; complex terms are composed of more than one token or word.
For instance,?lexicography?
and ?multilingual terminology management?
are, respectively, examples of a simple anda complex term in the domain of computational linguistics.
The extracted lexical units constitute aterminological resource, also known as terminology: a specialized vocabulary of knowledge in a domain.Terms and their use are studied in a relatively young discipline, which is also called terminology (Cabr?e,2003; Kageura, 1999):?the field of activity concerned with the collection, description, processing and presentation ofterms (Sager, 1990)?.While terminology can be approached from several perspectives, e.g.
as a branch of philosophy, soci-ology, or cognitive science, terminology is dominantly considered as a linguistic and cognitive activity.1Considering that knowledge and vocabulary are highly correlated, and vocabulary can be gained by exposure to literature.2With an intuition similar to ?eating your own dog food?, as proposed in Harrison (2006).53ConceptTermdenotation(a) General Theory of TerminologyConceptTermwriterTextreadersignify(b) Terms as Linguistic UnitsFigure 1: Association of meaning in the GTT compared to recent theories of terminology: in the GTT,terms are linguistic labels and denote concepts that exist a priori.
In recent theories of terminology, e.g.CTT, however, terms are treated like other linguistic units.
They signify concepts in a communicativecontext.
In the figures above, the dashed lines indicate the direction in which the meaning of a termis elaborated according to these theories.
The indicated communicative context (the dotted triangle inFigure b) can be extended in a number of ways, e.g.
by considering the application of terms.ConceptTermConceptTerm?
?
?
(a) One-to-One RelationConceptTerm Term?
?
?
(b) Synonymous RelationTermConcept Concept ?
?
?
(c) Polysemous RelationFigure 2: Relationships between terms and the concepts they signify: Figure 2a illustrates a mono-referential, unambiguous relationship between terms and concepts.
Figure 2b shows an ambiguity thatmay arise when several terms denote the same concept in a synonymous relation.
Figure 2c illustrates anambiguous term-concept relation, a polysemous relationship where a term may denote several concepts.Modern terminology is therefore pursued within a linguistic framework and as the study of specializedlanguages (Faber, 2012).The meanings of terms and the process of concept denomination are studied within the framework ofa ?theory of terminology?.
As stated in Cabr?e (2003), a theory of terminology elaborates the fundamentalproblem of interpretation of meaning into a set of questions in which the definition of a terminologicalunit?and its characteristics?is the nucleus.
The general theory of terminology (GTT) by W?uster (1974,as cited in Campo (2013, chap.
2)) is recognized as the first theory of terminology.
The GTT, whichis also known as traditional terminology, puts concepts first; terms are unambiguous linguistic labelsthat are defined independently of the context in which they are used (L?Homme, 2014) (Figure 1a).As implied by the given definition in ISO 1087-1(2000), the GTT is the most widely adopted theoryamongst terminologists.3Consequently, the GTT regards terms and concepts as having mono-referentialrelationships (Figure 2a).
The objective behind GTT, understandably, is to eliminate ambiguity in naturallanguage to improve clarity in technical communication.In an authoritative institutional organization that promotes or enforces standards, terms can be madeand shared in a top-down manner; hence, the meaning of terms can be interpreted by the mechanismdescribed in the GTT.4However, in practice and in many organizations, new terms are introduced in abottom-up synthesis process.
A lexical form (which may or may not be newly invented) in contexts thatbear a concept (which may or may not be newly invented) is used frequently inasmuch as it becomesa term5in the organization.
In practice, therefore, terms can be ambiguous: a term can refer to severalconcepts?similar to polysemy?homonymy in lexical semantics (Figure 2c); or, contrariwise, a particularconcept can be denoted by several terms (Figure 2b).
Heid and Gojun (2012) suggest that the rapidevolution of organizations as well as multi-players that are involved in an uncoordinated way, specificallyin multidisciplinary domains, reinforces this situation and thus term ambiguity.3Accordingly, Felber (1982) defines terminology as ?the combined action of groups of subject specialists (terminologycommissions) of specialised organisations?.4it is, perhaps, best demonstrated in the applications of controlled natural languages.5That is, a norm.54TaskContextSizeAutomaticTermRecognitionDomain-SpecificCorpusAutomaticKeyphraseExtractionSingleDocumentNamedEntityRecognitionTextSnippets...
...Figure 3: Lexical unit extraction tasks and the scope of the meaning: the diagram can be extended byadding new dimensions that take into the consideration characteristics of the communicative contextother than the text size.In contrast to the GTT, recent theories of terminology, e.g.
the communicative theory of terminology(CTT) by Cabr?e (see 1999, chap.
3), acknowledges the situation stated above and takes a bottom-updistributional approach to terminology in the sense that the meanings of terms, thus the elements ofdomain knowledge, are not preconceived.
Terms are linguistic units that are understood differentlywith regards to the communicative context, e.g.
by the text surrounding them, the application they areused and so on.
Terms signify concepts by syntagmatic and paradigmatic relations that they hold in aspecialized communicative discourse (Figure 1b).6Methods that modern CT embraces, therefore, canbe distinguished and classified by the communicative context in which they are employed.In CT, the task of automatic term recognition (ATR) is at the centre of attention.
The input of ATR is alarge collection of documents, i.e.
a domain-specific corpus, and the output is a terminological resource.In ATR, the meaning of the generated terms is interpreted in a wide spectrum of concepts in the domainthat is being investigated and represented by the input corpus.
ATR facilitates the automatic constructionof terminological resources; hence, it is a significant processing resource in knowledge engineering tasksand applications such as information retrieval and machine translation.As articulated by Kageura and Umino (1996), ATR deals with the computation of measures known asunithood and termhood.
It is believed that the majority of terms in a domain are complex terms.
Unithoodindicates the degree to which a sequence of tokens can be combined to form a complex term.
It is, thus,a measure of the syntagmatic relation between the constituents of complex terms: a lexical associationmeasure to identify collocations.
In the absence of explicit linguistic criteria for distinguishing complexterms from other natural language text phrases, a unithood measure construes the problem of complexterm identification as the identification of stable lexical units (Sager, 1990).7Termhood, on the other hand, ?is the degree to which a stable lexical unit is related to some domain-specific concepts?
(Kageura and Umino, 1996).
It characterizes a paradigmatic relation between lex-ical units?either simple or complex terms?and the communicative context that verbalizes domain-concepts.
Termhood, thus, envisages the measurement of meaning.
In the absence of a formal answerto the question ?what domain-specific concepts are?
?, devising a termhood measure for distinguishingterms and non-terms is a difficult and often conflictual task?hence, the evaluation of CT.In ATR, the communicative context is a domain-specific corpus.
ATR, therefore, should not be con-fused with other tasks in CT?such as keyword extraction, entity recognition, etc.
?that bear a closeresemblance to it.
These tasks are similar to ATR in the sense that they extract stable lexical units fromnatural language text.
However, they are different from ATR, because the meaning of the extractedlexical units, thus the termhood measure, is interpreted in a context other than a domain-specific cor-pus (Figure 3).
For example, an automatic keyphrase extraction algorithm extracts lexical units froma single document that best describe the content of this document.
Both unithood and termhood mustbe also measured in automatic keyphrase extraction.
However, the criterion for their definition and theinformation available for their computation are different than ATR.6As can be understood, the main difference between the GTT and the CTT is the interpretation of the process of pairingconcepts and lexical forms that is mentioned in the definition of lexical units.7See Evert (2004) on the application of lexical association measures for the identification of stable lexical units.55Text Term Extraction Term Classification?
?
?Terminological ResourceTerm MappingFigure 4: Significant processes in computational terminology and the direction in which they attach termsand natural language text.Text Candidate Term ExtractionScoring and RankingTermhoodUnithoodTerm ListFigure 5: Prevalent architecture of the terminology extraction methods.We can further distinguish CT methods based on the direction in which terms and text are related.Recent developments of ontological resources have stimulated a research strand that targets the reversetask of intermediary applications.
The goal of these applications is to fill the gap between an availableontology, i.e.
a knowledge base, and natural language text.
In these tasks, given a particular conceptin a knowledge base (e.g.
a class and its instances in an ontology), a method?which we call termmapping following Krauthammer and Nenadic (2004)?decides if this concept or its instances has beenmentioned in a given text snippet.
Entity linking, which has been promoted through the series of TextAnalysis Conferences,8is another term that characterizes these research efforts (see also Rao et al.,2013).
The familiar task of named entity recognition (NER), as introduced at the Message UnderstandingConference (Grishman and Sundheim, 1996), can also be placed in this category.
In NER, the types oftarget terms are known prior to the extraction task, e.g.
city, location and so on.In contrast to term mapping techniques, there are methods that organize constituent terms of a termino-logical resource into a variety of classes.
In these methods, the usage of terms in a given domain-specificcorpus is assessed to decide about their membership in concept classes.
If the classes are known prior tothe assignment task, then the task is known as term classification; otherwise, if the classes are not known,the task is called term clustering.
As suggested by Krauthammer and Nenadic (2004), these three tasks?i.e.
term recognition, term classification and term mapping?are essential for automatic construction andmaintenance of terminological resources and to form a closed loop between terminology and naturallanguage text (Figure 4).A more elaborate taxonomy of CT techniques can be obtained by distinguishing additional elementsand characteristics of the communicative context, e.g.
the way in which an end user benefits from theextracted terms, the role of background knowledge, linguistic characteristics of the extracted terms andso on.
We leave this study for another occasion.2.1 Prevalent Mechanism in Term Extraction TasksAs suggested in Nakagawa (2001), the algorithms for term recognition are usually in the form of a two-step procedure: candidate term extraction followed by term scoring and ranking (Figure 5).Candidate term extraction deals with the term formation and the extraction of candidate terms.
In afew applications, candidate term extraction can assess the morphosyntactic structure of terms, e.g.
assuggested in Ananiadou (1994) and Zweigenbaum and Grabar (1999), to identify candidate terms.
Inthese methods, existing terminologies are often available before to the extraction task and employed toidentify new candidate terms.
Besides this, one can identify four major methods for the extraction ofcandidate terms: linguistic filtering based on part of speech (PoS) tag sequences, n-gram technique,linguistic filtering based on syntactic relations and techniques that rely on the presence of particularmarkers in text.
Methods for the extraction of candidate terms are not limited to these categories.
Forinstance, contrastive approaches exploit a reference corpus of general language to identify simple can-didate terms (Drouin, 2004, 2003); for complex terms, the comparison between corpora is followed byone of the techniques listed above.
A combination of these methods can also be employed to improve8http://www.nist.gov/tac/about/56the results (e.g.
see Aubin and Hamon, 2006).Linguistic filters in the form of PoS tag sequence patterns are the most widely adopted techniquefor the extraction of candidate terms.
In this method, any sequence of tokens with certain PoS tags areassumed as candidate terms (Justeson and Katz, 1995; Daille, 1995).
Likewise, the knowledge about PoSpatterns that cannot form candidate terms may be used to restrict the presence of token sequences in alist of candidate terms (Bourigault, 1992).
In the n-gram technique, however, any sequences of tokens oflength n, often 1 ?
n ?
6, that appear in the input text are considered as candidate terms.
This methodgenerates a large set of candidate terms.
The number of candidate terms, therefore, is often reduced byfiltering n-grams that contain tokens from a stop-word list.
When linguistic processing tools are lacking,such as the case of under-resourced languages (see e.g.
Pinnis et al., 2012), or the computational cost oraccuracy hinders their usage, the n-gram technique is favourable.Linguistic filters that employ syntactic relations have also been used for the extraction of candidateterms.
The first sub-category of these methods use shallow parsing to identify noun phrases as candidateterms (Nakagawa, 2001).
The second sub-category of these methods generate candidate terms fromavailable terminological resources to identify term variations (Jacquemin and Tzoukermann, 1999).
Thethird subcategory, which is often employed for multilingual term extraction, exploits the head-modifierprinciple to identify candidate terms (Hippisley et al., 2005).
Finally, a category of candidate termextraction methods takes advantage of the presence of specific markers in input text that can be used todetermine boundaries of terms, e.g.
the presence of mark-up metadata in Hartmann et al.
(2012).Subsequent to candidate term extraction, a scoring procedure?which can be seen as a semanticweighting mechanism?is employed to indicate how likely it is that a candidate term is a term we wouldlike to extract.
As Figure 5 suggests, the scoring procedure usually combines termhood and unithoodscores.
Although several categorizations of the scoring and ranking methods can be given from a method-ological point of view (e.g.
statistics-based, machine learning-based, rule-based, etc.)
or by the kind ofinformation that is exploited for weighting (e.g.
linguistic-based, statistical-based, hybrid) as stated ear-lier, all these techniques rely on the text and take a corpus-based distributional approach to score andrank terms.
The usage of candidate terms in a communicative context (e.g.
domain-corpus) is formulatedin a machine-tractable format, e.g.
in the form of a contingency table or a vector space model.
It isthen assessed using statistical measures, similarity metrics, language models or a set of rules, dependingon the method employed and the objective of the task in hand, which defines the type of paradigmaticrelation that the termhood measure characterizes.The c-value algorithm, for instance, is an statistical method of assigning scores to candidate terms inan ATR task.
It is used as a baseline in a number of ATR evaluation tasks.
For each candidate term t, thec-value score of t is calculated using four criteria (Frantzi et al., 1998): the frequency of t in the corpus;the frequency of t when it appears nested in other terms longer than t; the number of those longer termsshown by Tt; and the number of the constituent words of t shown by |t|.
The c-value score is given byc-value(t) ={log2|t|f (t) if t /?
nestedlog2|t| (f (t)?1|Tt|?b?Ttf (b)) otherwise, (1)where Ttdenotes the set of all the terms that contain t and are longer than t, and f(s) denotes thefrequency of an arbitary term s in the corpus.
Other widely applied statistical measures for termhoodassements in ATR include term frequency?inverse document frequency (tf -idf ), term frequency (tf ),and inverse document frequency (idf ).
We leave the study of scoring mechanisms for another occasion.3 The ACL RD-TEC: Further Annotation Layers for ACL ARCWe introduce the ACL RD-TEC, a spin-off of the ACL ARC.
In its first release, the ACL RD-TECconsists of manual annotations that can be used for the evaluation of ATR and term classification tasksthat are explained in the previous section.
The current release of the ACL ARC consists of 10,922 articlesthat were published between 1965 to 2006.
The provided resources in the ACL ARC consist of threelayers: (a) source publications in portable document format (PDF), (b) automatically extracted text from57Type Token Sentence Paragraph Section Publication704,085 36,729,513 1,564,430 510,366 92,935 10,922Table 1: Summary statistics of the dataset derived from automatic processing of the ACL ARC.PoS Tag JJ NN NNP VBG FW (Total)Frequency 150 17,120 4,520 1255 2 (23,047)Table 2: Summary statistics of the assigned PoS tags to the simple term ?parsing?.
The PoS tags are fromthe Penn Treebank PoS tagset.the articles and (c) bibliographic metadata and citation network.
Each of the articles in the collectionare assigned to a unique identifier that indicates the source (e.g.
journal or conference) and the date (e.g.1999, 2006, etc.)
of publication.In the preparation of ACL RD-TEC, we further employed the SectLabel module of Luong et al.
?s(2010) ParsCit tool9for the automatic identification of logical text sections in ACL ARC?s raw textfiles.
Using a set of heuristics, sections such as ?bibliography?
and ?acknowledgements?
are removedfrom the corpus and are organized in separate files.
In addition, text cleaning is performed, e.g.
brokenwords and text segments are joined, footnotes and captions are removed and sections are organised intoparagraphs.
The sectioning process is followed by the text segmentation process using the OpenNLPsentence splitter10and the Stanford tokenizer.
The text is then annotated by the Stanford PoS tagger.11The process is finalized by making an inverted index of the cleansed full-text documents and assigningunique identifiers to each one of the extracted linguistic units: types (i.e.
PoS-tagged and lemmatizedwords), sentences, paragraphs and (sub)sections.
All of these units are stored in separate flat tables, inwhich all units, except types, are presented as tuples, consisting of pairs of unique identifiers and theirrelative locations in the text units they constitute.
Therefore, text units can be easily traced back to thepublications that they appeared in.
The statistics of the resulting data are given in Table 1.Afterwards, candidate terms are extracted from the processed corpus using three methods: PoS-basedfiltering, n-gram-based technique and noun phrase (NP) chunking.
In order to devise PoS sequencepatterns and maximum length of candidate terms, we started with an observation of sample valid terms,their PoS sequences patterns and length in the corpus.
We extracted 3301 sentences that contained thelemma ?technology?.
We then identified 476 valid terms in these sentences, 65% of which had lengthsof 2 and 3 tokens; only 5% were longer than 5 tokens.12Similar to the method proposed by Ittoo et al.
(2010), to alleviate the problem of erroneous PoS tagging, we formulated the PoS patterns for candidateterm extraction based on the actual output of the employed PoS tagger.
All the occurrences of theidentified terms were searched for in the corpus and all the PoS tag sequences assigned to them wereextracted.
Amongst the 100 extracted patterns, to keep a balance between correct and incorrect patternsresulted from erroneous PoS tagging, we chose 31 patterns Pilof maximum length 5 that satisfy theequationf(Pil)?j:length(Pj)=lf(Pj)>110l, (2)where f denotes the frequency of a PoS pattern and l is its length.For example, the term ?parsing?
is extracted as a valid term in this procedure.
This simple term isencountered 23,047 times in the corpus.
As shown in Table 2, the employed PoS tagger assigned severaldifferent PoS tags to this term.
Assuming that these PoS tags are the only patterns of length 1, onlyNN and NNP satisfy the given formula in Equation 2 above and are added to the inventory of valid PoSpatterns for terms of length l = 1.
The rest of PoS patterns?VBG, JJ and FW?are discarded.
As it canbe understood from the right hand side of the equation, when the length of PoS patterns increases, thestated criteria for their selection process becomes easier (e.g.
0.01 for terms of length l = 2 instead of9Release version 110505 (http://aye.comp.nus.edu.sg/parsCit/).10Release version 1.5.2 (http://opennlp.apache.org/).11Release date 9 July 2012; see Toutanova et al.
(2003) for a description of the PoS tagger tagset.12We eliminate definite and indefinite determiners from the terms.58Method Total# Length = 1 Length = 2 Length = 3 Length = 4 Length = 5PoS-based 1, 322, 445 271, 064 741, 448 284, 725 23, 384 1, 824n-gram 9, 339, 303 236, 053 1, 054, 792 2, 187, 041 2, 880, 665 2, 980, 752NP Chunk 1, 813, 222 142, 636 706, 051 623, 633 248, 505 92, 397Table 3: Summary statistics of the extracted candidate terms.0.1 for terms of length l = 1).
The list of devised PoS patterns is included in the distributed package.We repeated the procedure described above by extracting sentences that contain lemmas other than?technology?, e.g.
?algorithm?, ?method?, ?framework?and ?theory?.
There is no evidence to support thatthe extracted patterns are specific to a category of terms (e.g.
technology terms).
These patterns seemto be generic enough to extract terms of any category.
We support this claim based on the conductedmanual verification of the extracted candidate terms.
In these extracted sentences, the only terms that arelonger than 5 tokens are various transliteration of the term ?very-large-vocabulary speaker-independentcontinuous speech recognition?.
Based on these observations and the previous studies reported on thelength of terms (e.g.
see Maynard, 2000; Bonin et al., 2010), we believe the maximum length of 5 tokensis a fair trade-off between accuracy and recall in the process of candidate term extraction.The sentences in the corpus are scanned for occurrences of the devised PoS patterns.
Any sequencesof tokens that conform to any of these patterns is considered as a candidate term.
The extracted tokensequences construct the list of PoS-based candidate terms.
Based on the above observation, in the n-gram-based extraction of candidate terms, n is set to 1 ?
n ?
5 tokens.
In addition, n-grams thatbegin with a token from a stop-word list13are discarded.
The remaining n-grams form the second listof candidate terms.
The extracted sentences from the corpus are also chunked by the OpenNLP chunker.NP chunks that are not longer than 5 tokens constitute the third list of candidate terms.
As other lists ofcandidate terms, determiners are removed from the NP chunks.
From all the above lists, we eliminatecandidates that are shorter than 3 characters.
Candidate terms are further augmented by their frequency inthe corpus, distinct documents, sections, and paragraphs and stored separately.
Table 3 shows a summarystatistics of the extracted candidate terms.In an ideal scenario, each occurrence of a candidate term in each sentence could have been annotatedto identify the particular concept?class that the term signals in that context.
Such annotations couldhave been used in all the tasks described in the previous section.
In the absence of an agreed taxonomyof concepts and classes for computational linguistics and?more importantly?the required resources tocarry out this complex manual annotation task, achieving the ideal goal at once and in a single step seemsinfeasible.
In order to keep it manageable, we begin the manual annotation task by the verification of thecandidate terms in vocabulary lists as is suggested in the previous evaluations of ATR algorithms.To proceed with the annotation task, the extracted candidate terms are sorted using scores that areobtained from several ATR algorithms, e.g.
the c-value score (Equation 1).
The annotators are providedwith an annotation guideline, consisting of basic definitions (such as the given description in the earliersections), rules (e.g.
how to deal with term variation, misspelled terms and so on) and examples.14Duringthis process, the annotators are provided with a tool to access concordance view of candidate terms inthe ACL ARC corpus.15The annotators are asked to envisage a mind map of computational linguisticstopics and perceive the candidate terms in this map.
For a given lexical form t in the list of candidateterms, if t refers to a significant concept in the computational linguistics domain,16the annotators are askto mark t as valid.
However, this does not guarantee that all the occurrences of t in the corpus are validterms.
For instance, ?natural language?
is a lexical form that appears in the corpus as a term on severaloccasions, e.g.
in??
?
?
a natural language is a scheme of communication?
?
?
?.13The SMART stop-word list built by Chris Buckley and Gerard Salton, which can be obtained from goo.gl/rBQNbO.14The annotator guideline can be accessed in the distributed package.15We used the preloaded version of the ACL ARC in the Sketch Engine Corpus Query System available at https://the.sketchengine.co.uk/bonito/run.cgi/first_form?corpname=preloaded/aclarc_116That is, if they can situate the term in their envisaged mind map.59Total# Length = 1 Length = 2 Length = 3 Length = 4 Length = 5Technology Terms 13,832 757 8,674 3,822 538 41Invalid Terms 61,818 15,908 33,502 11,027 1,211 170Valid Terms 22,027 1,495 14,146 5,677 657 52Total Annotated 83,845 17,403 47,648 16,704 1,868 222Table 4: Summary statistics of the annotated candidate terms.Valid TermsTechnology TermsAnnotated TermsCandidate TermsAll Possible TermsFigure 6: Relationships between candidate terms, valid terms, technology terms and annotated terms.Candidate term extraction extracts a subset of all possible terms.
ATR targets the identification of validterms amongst candidate terms.
Technology terms are a subset of valid terms.
The dashed area showsthe set of annotated terms.However, there are a number of occurrences of ?natural language?
that cannot be considered as term, e.g.??
?
?
the speech and natural language groups at SRI reported results ?
?
?
?.On the other hand, if t is annotated as invalid, then there must be no occurrence of t in the corpus thatcan be counted as a term.
In the current version, 83,845 terms are annotated as either valid or invalid.Furthermore, valid terms in the annotated list of terms are classified as those that can signal a technol-ogy concept.
If ?genes?
are an essential category of concepts in an ontology that characterizes biologicaldiscipline, we speculate that the presence of technology as a category of concepts is essential in anyontology or terminological resource that describes an applied discipline like computational linguistics.As to our definition, technology terms indicate concepts such as methods, algorithms and processes thatare designed, developed and employed to accomplish a certain task in order to fulfil a practical purpose,i.e.
to address a research problem (see also the task in Kovaevi et al., 2012).
In computational linguistics,examples of these terms are ?parsing?, ?information retrieval?, and more delicate terms such as ?linearinterpolation?.In order to distinguish technology terms amongst other categories of terms, annotators are providedwith several definitions of technology and its known examples in computational linguistics.17In addi-tion, the annotators are exposed to materials on philosophy of technology, e.g.
Franssen et al.
(2013),and introduced to the task of ?tech mining?
in Porter and Cunningham (2005).
Despite all these efforts,because establishing a precise definition of technology is infeasible, classification of valid terms to tech-nology and non-technology terms, to a great extent, relies on the intuition of experts who participated inthe annotation task.
The annotators are allowed to use other sources of information than the ACL ARC,e.g.
web search, in order to decide about the technology class membership of valid terms.
The process ofannotating technology terms in the lists of extracted candidate terms is facilitated by supervised machinelearning-based methods of term weighting, e.g.
as reported in Zadeh and Handschuh (2014a,b).
Table 4shows the current statistics of the annotated terms.
Figure 6 illustrates relationships between candidateterms, valid terms and technology terms.Similar to the valid terms, terms that are annotated as technology terms do not exclusively belong tothis class.
For example, ?computational linguistics?
is a lexical form that can be classified as a technologyterm, e.g., in??
?
?
promising area of application of computational linguistics techniques?
?
?
?.However, it can also signal other concepts such as a scientific discipline, e.g.
in??
?
?
theoretical work in computational linguistics?
?
?
?17Those terms that are explicitly named as technology in literature are taken as the examples of technology terms.
To makea list of examples, we identified these terms using simple patterns such as ??
?
?
X is a technology?
?
?
?.600 500 1,000 1,500 2,0000.20.40.60.81TopnVerified TermsProportionofPostiveExamplestonTerms0 500 1,000 1,500 2,00000.10.20.3TopnVerified TermsTechnology Terms Onlyc-value (PoS-based)c-value (n-gram)c-value (NP chunk)tf-idf (PoS-based)tf-idf (n-gram)tf-idf (NP chunk)Figure 7: Comparison between c-value and tf -idf ., as well as a community, e.g.
in??
?
?
pursued by the computational linguistics community ?
?
?
?.The data, perhaps, speaks better for itself.
Thus, we invite the interested reader to explore the annotatedset of terms in order to gain more insight into the performed annotation task.
The dataset can be obtainedfreely from the European Language Resources Association, catalogue reference ELRA-T0375.18While we hope more researchers become involved in the annotation task, in the current release, allthe annotations are made by one person.
In order to assess the quality and reliability of the annotations,we carried out two preliminary experiments.
In the first experiment, a list of terms consisting of 250terms that have been particularly difficult to annotate are annotated by a researcher who is familiar withterminology.
For example, we particularly found it hard and conflicting to annotate terms that start withwords such as ?automatic, automated, stat-of-the-art, scalable, rapid, full, fast?
and so on, e.g.
in termssuch as ?fast clustering, ?fast classification, and ?fast prototyping.
In addition, deciding on the inclusionof certain categories of terms is difficult.
For example, one may consider ?people?
and ?organizations?
asvalid domain terms, while another person?with her own specific interest and expertise?may considerthese as invalid terms.
This problem is more subtle about categories such as ?languages?
and ?linguisticunits?.
For instance, one may consider ?English?
and ?French?
as well as ?clitic?
and ?suffix?
as terms;however, another person may not consider them as valid terms in the domain of computational linguistics(e.g.
one may found them too generic to be considered as valid terms).
As to our experience, the morespecific we are about the concept categories, the easier it is to annotate the terms.
We made sure sampleof these terms are included in the assessment of the annotations.
We report an observed agreement Aoof 0.758 and Cohen?kappa coefficient ?
of 0.517 for this set of terms (see Artstein and Poesio, 2008, fordefinition of Aoand ?
).In the second experiment, two postgrad students in the area of natural language processing were given alist of 389 terms and asked to identify technology terms.
The list of annotated terms were then comparedwith the annotations in the dataset.
The results are Ao= 0.840 and ?
= 0.655 for the first comparisonand Ao= 0.775 and ?
= 0.533 for the second comparison.
These measures over the annotationsgenerated by the participants in the evaluation task are Ao= 0.828 and ?
= 0.627.As a usage example of the constructed dataset, we use the annotations for the comparison of the topn terms in the list of candidate terms that are weighted and sorted using Frantzi et al.
?s (1998) c-valueand term frequency?inverse document frequency (tf -idf ).
We hope other researchers in the domain areintrigued by the numbers reported in Figure 7 and report the performance of other algorithms.4 Conclusion and Future WorkThe saying ?the shoemaker?s son goes barefoot?
is perhaps true when it comes to the state of termino-logical resources that characterize computational linguistics domain.
We report a small action towards18http://catalog.elra.info/index.php; the annotated terms are also available from https://github.com/languagerecipes/the-acl-rd-tec.61building a terminological resource from the ACL ARC, which can be used for the evaluation of compu-tational terminology methods.
There are currently three sets of candidate terms, which are augmented bytheir frequency in various logical text segments in the corpus and are presented in tabulated inverse indexfiles.
More than 82,000 of these terms are annotated manually as valid and invalid, in which valid termsare further classified as technology and non-technology terms.
The built resource can facilitate the eval-uation of a number of methods in computational terminology.
We invite other researchers to embellishthe dataset by adding their own lists of candidate terms and manual annotations.During the annotation process we have identified several frequent concepts other than technology andmethods in the computational linguistics domain, e.g.
grammar formalism, theories, measures, languageresources, tasks and applications.
We hope to continue our effort by adding annotations for at least oneof these concepts.
Adding a new concept class will allow us to evaluate term disambiguation methods.The application of clustering techniques for identification of term variations amongst the annotated termsand their manual annotation is another goal that can be achieved in the near future.
These small steps,collectively, can provide the shoemaker?s son with a fine pair of leather boots.AcknowledgementsWe thank the anonymous reviewers for their constructive comments, which helped us to improve thepaper.
In addition, we thank Professor Marie-Claude L?Homme for her helpful advice.
We also thankKartik Asooja, Georgeta Bordea, Sapna Negi and Bianca Pereira who participated in the inter-annotatoragreement experiment.
This publication has emanated from research supported in part by a researchgrant from Science Foundation Ireland (SFI) under Grant Number SFI/12/RC/2289.References2000.
ISO 1087-1:2000 terminology ?
vocabulary ?
part 1: Theory and application.Sophia Ananiadou.
1994.
A methodology for automatic term recognition.
In Proceedings of the 15th conference on Computa-tional linguistics - Volume 2, COLING ?94, pages 1034?1038.Ron Artstein and Massimo Poesio.
2008.
Inter-coder agreement for computational linguistics.
Comput.
Linguist., 34(4).Sophie Aubin and Thierry Hamon.
2006.
Improving term extraction with terminological resources.
In Advances in NaturalLanguage Processing, LNCS 4139, pages 380?387.Michael Bada, Miriam Eckert, Donald Evans, Kristin Garcia, Krista Shipley, Dmitry Sitnikov, William Baumgartner, K Cohen,Karin Verspoor, Judith Blake, and Lawrence Hunter.
2012.
Concept annotation in the craft corpus.
BMC Bioinformatics,13(1):161.Gabriel Bernier-Colborne and Patrick Drouin.
2014.
Creating a test corpus for term extractors through term annotation.
Termi-nology, 20:1:5073.Steven Bird, Robert Dale, Bonnie Dorr, Bryan Gibson, Mark Joseph, Min-Yen Kan, Dongwon Lee, Brett Powley, DragomirRadev, and Yee Fan Tan.
2008.
The ACL anthology reference corpus: A reference dataset for bibliographic research incomputational linguistics.
In LREC?08.
Marrakech, Morocco.Francesca Bonin, Felice Dell?Orletta, Simonetta Montemagni, and Giulia Venturi.
2010.
A contrastive approach to multi-wordextraction from domain-specific corpora.
In LREC?10.
ELRA, Valletta, Malta.Didier Bourigault.
1992.
LEXTER: a natural language tool for terminology extraction.
In COLING ?92.
pages 977?981.M.
Teresa Cabr?e.
1999.
TERMINOLOGY: THEORY, METHODS AND APPLICATIONS.
John Benjamins.M.
Teresa Cabr?e.
2003.
Theories of terminology their description, prescription and explanation.
Terminology, 9:2:163?199.M.
Teresa Cabr?e.
2010.
Handbook of translation studies, volume 1, chapter Terminology and translation, pages 356?365.M.
Teresa Cabr?e, Anne Condamines, and Fidelia Ibekwe-SanJuan.
2005.
Introduction: Application-driven terminology engi-neering.
Terminology, 11:1?19(18).
?Angela Campo.
2013.
The reception of Eugen Wsters work and the development of terminology.
Ph.D. thesis, Universit?e deMontr?eal.Beatrice Daille.
1995.
Combined approach for terminology extraction: lexical statistics and linguistic filtering.
Technicalreport, UCREL, Lancaster University.Patrick Drouin.
2003.
Term extraction using non-technical corpora as a point of leverage.
Terminology, 9(1):99?115.Patrick Drouin.
2004.
Detection of domain specific terminology using corpora comparison.
In LREC?04.Stefan Evert.
2004.
The Statistics of Word Cooccurrences Word Pairs and Collocations.
Ph.D. thesis, Institut f?ur maschinelleSprachverarbeitung, Universit?at Stuttgart.62Pamela Faber.
2012.
A cognitive linguistics view of terminology and specialized language, volume 20, chapter Terminologyand Specialized Language, pages 13?33.
Walter de Gruyter.Helmut Felber.
1982.
Computerized terminology in termnet: The role of terminological data banks.
Term banks for tomorrowsworld: Translating and the Computer, 4:8?20.Maarten Franssen, Gert-Jan Lokhorst, and Ibo van de Poel.
2013.
Philosophy of technology.
In The Stanford Encyclopedia ofPhilosophy.
Winter 2013 edition.KaterinaT.
Frantzi, Sophia Ananiadou, and Junichi Tsujii.
1998.
The c-value/nc-value method of automatic recognition formulti-word terms.
In Research and Advanced Technology for Digital Libraries, LNCS 1513, pages 585?604.Ralph Grishman and Beth Sundheim.
1996.
Message understanding conference-6: A brief history.
In Proceedings of COLING(Vol.
96)., pages 466?471.Warren Harrison.
2006.
Eating your own dog food.
IEEE Software, 23(3):5?7.Silvana Hartmann, Gy?orgy Szarvas, and Iryna Gurevych.
2012.
Mining multiword terms from wikipedia.
In Semi-AutomaticOntology Development: Processes and Resources, pages 226?258.
IGI Global, Hershey, PA, USA.Ulrich Heid and Anita Gojun.
2012.
Term candidate extraction for terminography and cat: and overview of ttc.
In Proceedingsof the 15th Euralex International Congress.
Oslo, Norway.Andrew Hippisley, David Cheng, and Khurshid Ahmad.
2005.
The head-modifier principle and multilingual term extraction.Nat.
Lang.
Eng., 11(2):129?157.Ashwin Ittoo, Laura Maruster, Hans Wortmann, and Gosse Bouma.
2010.
Textractor: A framework for extracting relevantdomain concepts from irregular corporate textual datasets.
In BIS, LNBIP 47, pages 71?82.
Springer.Christian Jacquemin and Evelyne Tzoukermann.
1999.
NLP for term variant extraction: synergy between morphology, lexiconand syntax.
Natural language information retrieval, 7:25?74.John S. Justeson and Slava M. Katz.
1995.
Technical terminology: some linguistic properties and an algorithm for identificationin text.
Nat.
Lang.
Eng., 1.1:9?27.Kyo Kageura.
1999.
On the study of dynamics of terminology: A proposal of a theoretical framework.
Research Bulletin of theNACSIS, 11:1?10.Kyo Kageura and Bin Umino.
1996.
Methods of automatic term recognition: A review.
Terminology, 3.2 (1996):259?289.J.
.
D. Kim, T. Ohta, Y. Tateisi, and J. Tsujii.
2003.
Genia corpus?a semantically annotated corpus for bio-textmining.Bioinformatics, 19(suppl 1):i180?i182.Aleksandar Kovaevi, Zora Konjovi, Branko Milosavljevi, and Goran Nenadic.
2012.
Mining methodologies from nlp publica-tions: A case study in automatic terminology recognition.
Computer Speech & Language, 26(2):105 ?
126.Michael Krauthammer and Goran Nenadic.
2004.
Term identification in the biomedical literature.
J. of Biomedical Informatics,37(6):512?526.Marie-Claude L?Homme.
2014.
Terminologies and taxonomies.
Oxford Handbooks Online.Minh-Thang Luong, Thuy Dung Nguyen, and Min-Yen Kan. 2010.
Logical structure recovery in scholarly articles with richdocument features.
IJDLS, 1(4):1?23.Diana Maynard.
2000.
Term recognition using combined knowledge sources.
Ph.D. thesis, Manchester Metropolitan University.Hiroshi Nakagawa.
2001.
Automatic term recognition based on statistics of compound nouns.
Terminology, 6.2:195?210.Adeline Nazarenko and Ha?
?fa Zargayouna.
2009.
Evaluating term extraction.
In Proceedings of the International ConferenceRANLP-2009, pages 299?304.
Association for Computational Linguistics, Borovets, Bulgaria.M?arcis Pinnis, Nikola Ljube?si?c, Dan S?tef?anescu, Inguna Skadin?a, Marko Tadi?c, and Tatiana Gornostay.
2012.
Term extraction,tagging, and mapping tools for under-resourced languages.
In TKE 2012.Alan L Porter and Scott W Cunningham.
2005.
Tech mining.
Competitive Intelligence Magazine, 8(1):30?36.Delip Rao, Paul McNamee, and Mark Dredze.
2013.
Entity linking: Finding extracted entities in a knowledge base.
In Multi-source, Multilingual Information Extraction and Summarization, Theory and Applications of Natural Language Processing.Juan C. Sager.
1990.
Practical Course in Terminology Processing, chapter Term Formation: theory and practice, pages 61?87.John Benjamins Publishing Company.Kristina Toutanova, Dan Klein, Christopher D. Manning, and Yoram Singer.
2003.
Feature-rich part-of-speech tagging with acyclic dependency network.
In NAACL ?03.
pages 173?180.Jorge Vivaldi and Horacio Rodr??guez.
2007.
Evaluation of terms and term extraction systems: A practical approach.
Terminol-ogy.
13:225?248.Eugen W?uster.
1974.
Die allgemeine terminologielehre?ein grenzgebiet zwischen sprachwissenschaft, logik, ontologie, infor-matik und den sachwissenschaften.
Linguistics, 12(119):61?106.Behrang Q. Zadeh and Siegfried Handschuh.
2014a.
Evaluation of technology term recognition with random indexing.LREC?14.
ELRA, Reykjavik, Iceland.Behrang Q. Zadeh and Siegfried Handschuh.
2014b.
Investigating context parameters in technology term recognition.
COLINGWorkshop on Synchronic and Diachronic Approaches to Analyzing Technical Language (SADAATL).Pierre Zweigenbaum and Natalia Grabar.
1999.
Automatic acquisition of morphological knowledge for medical languageprocessing.
In Artificial Intelligence in Medicine, LNCS 1620, pages 416?420.63
