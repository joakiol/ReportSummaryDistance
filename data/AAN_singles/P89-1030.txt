DISCOURSE ENTITIES IN JANUSDamaris M. AyusoBBN Systems and Technologies Corporation10 Moulton StreetCambridge, Massachusetts 02138dayuso@bbn.comAbstractThis paper addresses issues that arose in apply-ing the model for discourse entity (DE) generation inB.
Webber's work (1978, 1983) to an interactive multi-modal interface.
Her treatment was extended in 4areas: (1)the notion of context dependence of DEswas formalized in an intensional logic, (2)the treat-ment of DEs for indefinite NPs was modified to useskolem functions, (3)the treatment of dependentquantifiers was generalized, and (4) DEs originatingfrom non-linguistic sources, such as pointing actions,were taken into account.
The discourse entities areused in intra- and extra-sentential pronoun resolutionin BBN Janus.1 In t roduct ionDiscourse entities (DEs) are descriptions of ob-jects, groups of objects, events, etc.
from the realworld or from hypothesized or possible worlds that areevoked in a discourse.
Any communicative act, be itspoken, written, gestured, or system-initiated, cangive rise to DEs.
As a discourse progresses, an ade-quate discourse model must represent the relevantentities, and the relationships between them (Groszand Sidner, 1986), A speaker may then felicitouslyrefer anaphorically to an object (subject to focusing orcentering constraints (Grosz et al, 1983, Sidner 1981,1983, Brennan et al 1987) ) if there is an existing DErepresenting it, or if a corresponding DE may bedirectly inferred from an existing DE.
For example,the utterance "Every senior in Milford High School hasa car" gives rise to at least 3 entities, describable inEnglish as "the seniors in Milford High School","Milford High School", and "the set of cars each ofwhich is owned by some senior in Milford HighSchool".
These entities may then be accessed by thefollowing next utterances, respectively:"They graduate in June.
""It's a good school.
""They completely fill the parking lot.
"Webber (1978, 1983) addressed the question ofdetermining what discourse entities are introduced bya text.
She defined rules which produce "initialdescriptions" (IDs) of new entities stemming fromnoun phrases, given a meaning representation of atext.
An ID is a logical expression that denotes thecorresponding object and uses only information fromthe text's meaning representation.
The declarativenature of Webber's rules and the fact that they reliedsolely on the structure of the meaning representation,made her approach well suited for implementation.The present work recasts her rules in Janus's in-tensional logic framework (described in section 2).Two goals guided our approach: (1)that our DErepresentations be semantically clear and correct ac-cording to the formal definitions of our language, and(2) that these representations be amenable to theprocessing required in an interactive environmentsuch as ours, where each reference needs to be fullyresolved against the current context.In the following sections, we first present therepresentational requirements for this approach, andintroduce our logical language (section 2).Then we discuss issues that arose in trying toformalize the logical representation of DEs withrespect to (1) the context dependence of their denota-tions, and (2) the indeterminacy of denotation thatarises with indefinite NPs.
For context dependence,we use an intensional logic expression indexed bytime and world indices (discussed in section 3).
Thisrequired us to extend Webber's rules to detect modaland other index-binding contexts.
In representingDEs for indefinites (appearing as existential formulaein our meaning representation), we replacedWebber's EVOKE predicate with skolem constants forthe independent case, where it does not contain avariable bound by a higher FORALL quantifier(section 4), and do not use EVOKE at all in the de-pendent case.In section 5 we introduce a generalized version ofthe rules for generating DEs for dependent quantifiersstemming from indefinite and definite NPs which over-comes some difficulties in capturing dependencies be-tween discourse entities.In our multi-modal interface environment, it is im-portant to represent the information on the computerscreen as part of the discourse context, and allowreferences to screen entities that are not explicitly in-troduced via the text input.
Section 6 briefly dis-cusses some of these issues and shows how pointingactions are handled in Janus by generating ap-propriate discourse entities that are then used likeother DEs.Finally, section 7 concludes and presents plansfor future work.This is, to our knowledge, the first implementationof Webber's DE generation ideas.
We designed the243algorithms and structures necessary to generate dis-course entities from our logical representation of themeaning of utterances, and from pointing gestures,and currently use them in Janus's (Weischedel et al,1987, BSN, 1988) pronoun resolution component,which applies centering techniques (Grosz et al,1983, Sidner 1981, 1983, Brennan et al 1987) totrack and constrain references.
Janus has beendemonstrated in the Navy domain for DARPA's FleetCommand Center Battle Management Program(FCCBMP), and in the Army domain for the Air LandBattle Management Program (ALBM).2 Meaninq Representation for DEGenerationWebber found that appropriate discourse entitiescould be generated from the meaning representationof a sentence by applying rules to the representationthat are strictly structural in nature, as long as therepresentation reflects certain crucial aspects of thesentence.
This has the attractive feature that anysyntactic formalism may be used if an appropriatesemantic representation is produced.
Some of therequirements (described in (Webber 1978, 1983)) onthe representation are: (1) it must distinguish be-tween definite and indefinite NPs and between sin-gular and plural NPs, (2)it must specify quantifierscope, (3) it must distinguish between distributive andcollective readings, (4)it must have resolved elidedverb phrases, and (5) it must reflect the modifier struc-ture of the NPs (e.g., via restricted quantification).
Animportant implied constraint is that the representationmust show one recognizable construct (a quantifier,for example) per DE-invoking noun phrase.
Theseconstructs are what trigger the DE generation rules.Insofar as a semantic representation reflects all ofthe above in its structure, structural rules will sufficefor generating appropriate DEs, but otherwise infor-mation from syntax or other sources may be neces-sary.
There is a trade-off between using a level ofrepresentation that shows the required distinctions,and the need to stay relatively close to the Englishstructure in order to only generate DEs that are jus-tiffed by the text.
For example, in Janus, in addition toquantiflers from NPs, the semantic representation hasquantiflers for verbs (events), and possibly extraquantifiers introduced in representing deeper meaningor by the collective/distributive processing.
Therefore,we check the syntactic source of the quantifiers toensure that we only generate entities for quantifiersthat arose from NPs (using the bound variable as anindex into the parse tree).Other than the caveat just discussed, the Janusmeaning representation language WML (for WorldModel Language) (Hinrichs et al, 1987) meets all theother constraints for DE generation.
WML is a higher-order intensional language that is based on a syn-thesis between the kind of language used in PHLIQA(Scha, 1976) and Montague's Intensional Logic244(Montague, 1973).
A newer version of WML (Stallard,1988) is used in the 8BN Spoken Language System(Boisen et al, 1989).
The intensionality of WMLmakes it more powerful than the sample languageWebber used in developing her structural rules.The scoping expressions in WML have a sort field(which restricts the range of the variable) and havethe form:(1= x s (P x ) )where B is a quantifier such as FORALL or EXISTS, aterm-forming operator like IOTA or SET, or thelambda abstraction operator LAMBDA.
S is the sort,a set-denoting expression of arbitrary complexityspecifying the range of x, and (P x) is a predication interms of x.
The formal semantics of WML assigns atype to each well-formed expression which is a func-tion of the types of its parts.
If expression E has typeT, the denotation of E, given a model M and a time tand world w, is a member of the set which is T'sdomain.
One use of types in our system is for enforc-ing selectional restrictions.
The formation rules ofWML, its type system, and its recursive denotationdefinition provide a formal syntax and semantics forWML.3 Context Dependence of DiscourseEntitiesA formal semantics was assumed though notgiven for the sample logical language used by Web-bar.
The initial descriptions (IDs) of DEs produced byher rules were stated in this language too, and thusare meant to denote the object the DE represents.For example, the rule which applies to the represen-tation for independent definite NPs assigns to theresulting DE an ID which is the representation itself:(t x S (P x ) )  => ID: (t x S (P x ) )where t is Russell's iota operator.
Thus, the ID for"the cat" in "1 saw the cat" is (t x cats T).
(Since thebody of the t in this example has no additionalpredication on x, it is merely T, for TRUE.)
However,because IDs are solely drawn from the meaningrepresentation of the isolated text, they may not suf-fice to denote a unique object.
Connection to priordiscourse knowledge or information from further dis-course may be necessary to establish a uniquereferent, or determining the referent may not even benecessary.
For example, the ID for "the cat" wouldneed to be evaluated in a context where there is onlyone salient cat in orddr to obtain a denotation.Our system's representation of a DE is a structurecontaining several fields.
The "logical-form" field con-tains a WML expression which denotes the object theDE'describes (this corresponds roughly to Webber'sID).
Given that WML is intensional, we are able toexplicitly represent context dependence by having thelogical form include an intensional core, plus tense,time, and world information (which includes discoursecontext) that grounds the intension so that it may beevaluated.
For example, the logical form for the DEcorresponding to "the cat" in our system is( (Z~'~'ZNSION (IOTA x eat -  T) )time world)where time, if unfilled, defaults to the present, andworld defaults to the real world and current discoursestate.
The semantics of our IOTA operator makes itdenotationless if there is not exactly one salient objectthat fits the description in the context, else its denota-tion is that unique object.
In our interactive systemeach reference needs to be fully resolved to be usedsuccessfully.
If unknown information is necessary toobtain a unique denotation for a IOTA term, a simpleclarification dialogue should ensue.
(Clarification isnot implemented yet, currently the set of all valuesfitting the IOTA is used.
)An example using the time index is the nounphrase "the ships that were combat ready on12/1/88", which would generate a DE with logicalform:( ( INTENS ION(PAST ( INTENSION(IOTA x (SETS ,,hips)(COMBAT-READY x) ) ) ) )12/1/88 world)Representing this time index in the logical form is cru-cial, since a later reference to it, made in a differenttime context must still denote the original object.
Forexample, "Are they deployed?"
must have "they"refer to the ships that were combat ready on 12/1/88,not at the time of the latter utterance.In order to derive the proper time and world con-text for the discourse entities, we added structuralrules that recognize intensional and index-bindinglogical contexts.
Our DE generation algorithm usesthese rules to gather the necessary information as itrecurses into the logical representation (applying rulesas it goes) so that when a regular rule fires on alanguage construct, the appropriate outer-scopingtime/world bindings will get used for the generatedDEs.It should be noted that, as the discussion abovesuggests, a definite NP always gives rise to a newdiscourse entity in our system.
If it is determined tobe anaphoric, then a pointer to the DE it co-refers with(when found) will be added to its "refers-to" field, in-dicating they both denote the same object.4 DEs for Independent Indefinite NPsIn Webber's work, the initial description (ID) for aDE stemming from an independent existential (i.e.,with no dependencies on an outer FORALLquantifier), contained an EVOKE predicate.
"1 saw acat":(EXISTS x cat8 (maw I x))would generate a DE with ID:(t x Gat8(& ( saw I x )  (EVOI~ Sent  x ) ) )"The cat I saw that was evoked by sentence Sent",where Sent is the parsed clause for '1 saw a cat".The purpose of EVOKE was to make clear that al-though more than one cat may have been seen, the"a" picks out one in particular (which one we do notknow except that it is the one mentioned in theutterance), and this is the cat which makes theEVOKE true.
Any subsequent reference then picksout the same cat because it will access this DE.
Thesemantics of the EVOKE predicate and the type of theS argument (which is syntactic in nature) were un-clear, so we looked for a different formulation withbetter understood semantics.Predicate logic already provides us with amechanism for selecting arbitrary individuals from thedomain via skolem functions (used as a mechanismfor removing existentials from a formula while preserv-ing satisfiability).
Skolem functions have been used incomputational inguistics to indicate quantifier scope,for example (VanLehn, 1978).
Following a suggestionby R. Scha, we use skolem functions in the logicalform of the DE for the "indefinite individuals" intro-duced by independent existentials (Scha et al, 1987).For clarity and consistency with the rest of the lan-guage, we use a sortedskolem form, where the rangeof the function is specified.
Since we use this forrepresenting existentials that are independent, thefunction has no arguments and is thus equivalent o asorted constant whose denotation is undeterminedwhen introduced.
(In this sense it is consistent withKarttunen's (1976) and Kamp's (1984) view of theindefinite's role as a referential constant, but unlikeKamp, here the sentence's meaning representation isseparate from the representation of the evokedentity.
)Thus we introduced a new operator to WMLnamed SKOLEM, for expressions of the form(SKOLEM n <sort>), where n is an integer that getsincremented for each new skolem created, as a wayof naming the skolem function.
For the exampleabove, the core logical form (stripping the outer inten-sion and indices) for the DE of "a cat" would be:(SKOL~M I (SET x oats  ( saw I x ) ) )denoting a particular cat from the set of aJl the cats Isaw.
The type of a SKOLEM expression is well-defined and is given by the following type rule:TYPEO?
(SKOZJCN Ib"~G~S (SETS a))= awhere INTEGERS is the type for integers, and (SETSa) is the type of sets whose members have type a.This type rule says that when the first argument ofSKOLEM is of type INTEGER, and the second is a setwith elements of type a, then the type of the SKOLEMexpression is a.
Therefore, the type of the aboveexample is cats.
The explicit connection to theoriginating sentence which the EVOKE predicateprovided is found in our scheme outside of the logical245representation by having a pointer in the DE's struc-ture to the parse tree NP constituent, and to the struc-ture representing the communicative act performed bythe utterance (in the fields "corresponding-constituent"and "originating-communicative-act", respectively).These connections are used by the pronoun resolu-t/on algorithms which make use of syntactic infor-mation.Does the denotation of a skolem constant ever getdetermined?
In narrative, and even in conversation,identifying the individual referred to by the indefiniteNP frequently doesn't occur.
However, in our inter-active system, each reference must be fully resolved.When the evaluation component of Janus determinesa successful value to use for the existential in thetext's logical form, the appropriate function denotationfor SKOLEM n gets defined, and the "extension" fieldis set for the discourse entity.Note that many interesting issues come up in thetreatment of reference to these indefinite entities in areal system.
For example, cooperative responses bythe system introduce new entities that must be takeninto account.
If the user asks "Is there a carrier within50 miles of Hawaii?
", a cooperative "There are two:Constellation and Kennedy" (as opposed to just"Yes") must add those two carriers as entities, whichnow overshadow the singular skolem entity for "a car-der within 50 miles of Hawaii".
On the other hand, a"No" answer should block any further reference to thecarrier skolem, since its denotation is null, while stillallowing a reference to a class entity derived from it,as in "Is there one near San Diego?"
where one refersto the class carriers.The treatment presented works for straightforwardcases of independent indefinites.
Trickier cases likedonkey sentences (Kamp, 1984, Webber, 1981) andinteractions with negation have not yet been ad-dressed.5 Dependent NPs5.1 Dependent Indef in i te NPsOur work uncovered a need for modifications inWebber's structural rules for quantifiers from indefiniteand definite NPs which have dependencies on vari-ables bound directly or indirectly by an outer FORALLquantifier.
In this section we address the case ofdependent existentials arising from indefinite NPs.We first argue that the predicate EVOKE is notneeded in this context.
Then we point out the needfor generalizing the rule to take into account not justFORALL, but all scoping operators that intervene be-tween the outer FORALL and the inner EXISTS.Finally, we show that the dependencies between dis-course entities must be explicitly maintained in thelogical forms of newly created DEs that depend onthem.Webber's rules are designed to apply from theoutermost quantifier in; each time a rule is applied theremaining logical form is modified to be in terms of thejust created DE.
For example, "Every boy saw a girlhe knows" has logical form (for the bound pronounreading):(FOR~LL x boys(EXISTS y (SET y' g i r ls(knows x y'  ) )(SaW x y) ) )The first step is to apply the rule for an independentuniversal quantifier:R0: (FORALL x S (P x)) => de: SThis application yields the entity for "the set of allboys"DE I : boysand we rewrite the logical form to be:(FORALL x DE 1(EXISTS y (SET y' g i r ls(knows x y ' ) )( saw x y)  ) )The steps shown so far are consistent with bothWebber's and our approach.
Now we want to applythe general rule for existentials within the body of adistributive, in order to generate an entity for therelevant set of girls.
Webber uses Rule 3 in (Webber,1983) (here corrected to position the existential's ortS inside the scope of the outer quantifiers in thegenerated DE):R3: (?O~,~.lr.,L YI"' 'Yk(EXISTS x s (P x))) =>de: (SET x th ings(EXISTS YI" ?
"Yk(a (msmbQr x S) (P x)(EVOKE Ssnt x) ) ) )where FORALL Yl""Yk is shorthand for FORALL Ylde 1 (...(FORALL Yk dek, analogously for EXISTS, andS or P depends directly or indirectly on Yl ""Yk'Now the first DE we want to generate with this ruleis for "the set of girls, each of which is known by someboy in DE 1, and was seen by him".
Does each girl inthe set alo have to satisfy an EVOKE predicate?
Itseems that any future reference back to the setformed by the existential seeks to obtain a/I itemsfitting the description, not some subset constrained byEVOKE.
For example, if the example above is fol-lowed by "the girls tried to hide", taking "the girls"anaphorically, one wants a/I the girls seen by someboy in DE 1 that knows them, no less.
Our core logicalrepresentation for the set of girls is thus:DEE: (SET y g i r ls(EXISTS x DE I(a (knows x y)  (saw x y ) ) ) )So the modified rule used in producing DE 2 is:246R3': (?ORALL y~...yk(EXISTS x S (P x))) =>de: (SET x S t(EXISTS YI"" "Yk(a ( .
- -~ .
r  x s)  (\]~ x ) ) ) )where EVOKE has been removed, and the DE's sortfield is S t for the "root type" of S, which is the type ofthe members of S, in order to appropriately constrainthe DE's sort (instead of leaving it as the uncon-strained "things").A second change that needs to be made is togeneralize the left hand side of the rule so that thescoping expressions outscoping the inner EXISTS inthe pattern also be allowed to include other scopingoperators, such as EXISTS and IOTA.
As long as theoutermost quantifier is a FORALL, any other depend-ent scoping expression within it will generate a set-denoting DE and will behave as a distributive nviron-ment as far as any more deeply embedded expres-sions are concerned.
In other words, the distribu-tiveness chains along the dependent quantifiers.
Tosee this, consider the more embedded example"Every boy gave a girl he knew a peach she wanted",where there is an intervening existential between theouter FORALL and innermost EXISTS.
The core logi-cal form for this sentence is:(FORALL x boye(EXISTS y (SET y' girls(knowe x ?'
) )(EXISTS z (SET z' ~aohea(wan*:a y z '  ) )(gave z y z ) ) ) )DE 1 would be as above.
Using rule R3' DF_.
2 be-comes:DE 2 :(SET y girle(EXISTS x DE I(a (knowe x y)(EXISTS z (SET z' peaches(wants Y =')  )(gave x y =) ) ) ) )"The set of girls, each of which is known by some boyin DE 1, and got a peach she wanted from that boy.
"Now the peach quantifier should generate a set DE interms of DE 1 and DE 2.
Applying R3' gives us:DE3: (SET z peachee(EXISTS x DE I(EXISTS y DE 2(a (wanta y z)(gave  x y z ) ) ) ) )"The set of peaches z such that there is a girl in DE 2(who is known by some boy in DE I, and who gotsome peach she wan.tpd from the boy), who wants z,and who got it from some boy in DE 1''.Now a third and final problem becomes apparent:for the general case of arbitrary embedding of de-pendent quantifiers we generate a DE (e.g., DF_,3) de-pendent on other DEs from the outer quantifiers, butthe dependencies between those DEs (e.g., DE 1 andDE2) are not maintained.
This is counter-intuitive, andalso leads to an under-specified set DE.
In thepeaches example above, envision the situation wherea boy b I gave out two peaches Pl and P2 : one to agirl gl he knew, and one to a girl g2 he didn't know,who also got a peach P3 from another boy b 2 who didknow her.
These are the facts of interest in thisscenario:I.
(& (gava b I gl p1) (know b I gl)(want= gl P l ) )2.
(& (gave blg2P2)(NOT (know bl gE) )(wanta  gEPE) )3.
(& (gave bEgEp 3) (know bEgE)(wants  g2 P3 ) )Since b 1 and b 2 are in DE 1 (due to facts 1 and 3), andg2 is in DE 2 (due to fact 3), then P2 is in DE 3 (due tofact 2 and according to the DF_.
3 logical form above).But P2 should notbe in DE 3, since P2 was NOT givento a girl by a boy she knew.
The set of peachesobtained for DE 3 is too large.
The problem would notarise if in the DE 3 logical form, the variables rangingover DF-- 2 were appropriately connected to DE 1 usingthe dependent restriction present in the original for-mula (knows xy).
A correct DE 3 is:DE 3 :(SET z ~:Hmache,=(EXISTS x DE z(EXISTS y (SET y' DE 2(knows x y' ) )(& (want= y =)(gave  x y z ) ) ) ) )To be able to do this, the rule-application algorithmmust be modified to include the restriction information(for dependent restrictions) when the formula getsrewritten in terms of a newly created DE.
Thereforethe final generalized rule, which includes other scop-ing operators and works on properly connected DEs isas follows:R3'' : (?ORALL v I S I(Q2 v2 S2 " ' "  Q. v S=(EXISTS x S (P x)))) =>de: (SET x S t(EXISTS v I S I ...v= S(~ (mem~r x S) (~ x ) ) ) )where S or P depend directly or indirectly on v 1...v n,Qi may be FORALL, EXISTS, or IOTA, and the scop-ing operators outside the inner EXISTS have alreadybeen processed by any appropriate rules that havereplaced their original sorts by the Sis, which are interms of generated DEs and explicitly show any DEdependencies.
The right hand side is as before, withexistentials picking out elements from each outerquantifier.247act.
Since "them" and *it" have different number re-quirements, there is no ambiguity and the anaphorresolution module resolves "them" to the DE cor-responding to "the C1 carriers in the Indian Ocean"and "it" to the DE for Kennedy.
We are currentlyworking on having system-initiated actions alsogenerate entities.7 Conclusions and Further WorkWebber's general approach to discourse entitygeneration from a logical representation proved veryuseful in our efforts.
We were able to recast her basicideas in our logical framework, and currently use thegenerated DEs extensively.The fact that the generation of DEs is done viastructural rules operating on a semantic represen-tation provided a degree of modularity that allowedour pronoun resolution component to workautomatically when we combined a new syntacticcomponent with our semantic and discourse com-ponent (replacing an ATN by a unification grammar, inan independently motivated experiment).
We are cur-rently starting to port the DE generation component othe BBN Spoken Language System (Boisen et al,1989), and plan to integrate it with the intra-sententialmechanisms in (Ingria and Stallard, 1989).
The factthat entity representations are mostly semantic in na-ture, not syntactic, also facilitated the addition and useof non-linguistic entities in a uniform way.There are several areas that we would like tostudy to extend our current treatment.
We want toaddress the interactions between centeringphenomena and non-linguistic events that affect dis-course focus, such as changing contexts via a menuselection in an expert system.Our paraphrasing component (Meteer andShaked, 1988) already uses the discourse entities toa limited extent.
One area of future work is to havethe language generator make more extensive use ofthem, so it can smoothly refer to focused objects.Finally, although quantified expressions are al-ready generated in Janus for events implicit in manyverbs, they are not being used for DEs.
We wouldlike to address the problem of event reference and itsinteraction with temporal information, using ideassuch as those in (Webber, 1988) and in the specialissue of ComputationaJ Linguistics on tense andaspect (Vol.
14, Number 2 June 1988).8 AcknowledgmentsThe work presented here was supported underDARPA contract #N00014-85-C-0016.
The views andconclusions contained in this document are those ofthe author and should not be interpreted as neces-sarily representing the official policies, either ex-pressed or implied, of the Defense AdvancedResearch Projects Agency or of the United StatesGovernment.
The author would like to thank DaveStallard for invaluable discussions during the writingof this paper.
Thanks also to Remko Scha, LanceRamshaw, Ralph Weischedel, and Candy Sidner.ReferencesBBN Systems and Technologies Corp. (1988).
AGuide to IRUS-II Application Development inthe FCCBMP (BBN Report 6859).
Cambridge,MA: Bolt Beranek and Newman Inc.Boisen, S., Chow Y., Haas, A, Ingria, R., Roucos, S.,Scha, R., Stallard, D., and Vilain, M. (1989).Integration of Speech and Natural Language:Final Report (BBN Report 6991 ).
BBN Systemsand Technologies Corp.Brennan, Susan E., Friedman, Marilyn W., and Pol-lard, Carl J.
(1987).
A Centering Approach toPronouns.
Proceedings of the 25th AnnualMeeting of the ACL.
ACL.Grosz, Barbara J., and Sidner, Candace L. (1986).Attention, Intentions, and the Structure of Dis-course.
Computational Linguistics, 12(3),175-204.Grosz, Barbara J., Joshi, Aravind K., Weinstein, Scott.(1983).
Providing a Unified Account of DefiniteNoun Phrases in Discourse, Proceedings ofthe 21st Annual Meeting of the ACL.Cambridge, MA: ACL.Hinrichs, E.W., Ayuso, D.M., and Scha, R. (1987).The Syntax and Semantics of the JANUSSemantic Interpretation Language.
InResearch and Development in Natural Lan-guage Understanding as Part of the StrategicComputing Program, Annual Technical ReportDecember 1985 .
December 1986.
BBNLaboratories, Report No.
6522.Ingria, Robert J.P., and Stallard, David.
(1989).
AComputational Mechanism for Pronominal Ref-erence.
Proceedings of the 27th Annual Meet-ing of the ACL.
ACL.Kamp, Hans.
(1984).
A Theory of Truth and Seman-tic Representation.
In J. Groenendijk.
T.M.V.Janssen, and M. Stokhof (Eds.
), Truth, Inter-pretation and Information, Selected Papersfrom the Third Amsterdam Colloquium.Dordrecht: Foris Publications.Karttunen, Laud.
(1976).
Discourse Referents.
InJ.
D. McCawley (Ed.
), Syntax and Semantics,Volume 7.
New York: Academic Press.Meteer, Marie and Shaked.
Varda.
(1988).
Strategiesfor Effective Paraphrasing.
Proceedings ofCOLING-88, Budapest, Hungary, August 22-27.COLING.2485.2 Dependent Definite NPsSome of the problems described in the previoussection also arise for the rule to handle dependentdefinite NPs.
Definite NPs are treated as IOTA termsin WML.
(Webber's logical language in (Webber,1978) used a similar t. The treatment was laterchanged (Webber, 1983) to use the definite existentialquantifier "Existsl', but this difference is not relevantfor the following.)
Replacing IOTA for t in Webber's(1978) rule 5:R5:  (FOt~,,L Y~.'
' 'Yk(P (IOTA x S (~ x ) ) ) )  =>de:  (SET z th ings(EXISTS YI"" "Yk(m z (IOTA x S (R =)))))where Yl'"Yk are universal quantifiers over DEs as inR3 above, and S or R depend directly or indirectly onYl"'Yk"The second and third extensions discussed in theprevious section are needed here too: generalizingthe quantifiers that outscope the inner existential, andkeeping the dependencies among the DEs explicit oavoid under-specified sets.
An example of an under-specified set arises when the dependent IOTAdepends jointly on more than one outer variable; forexample, in "Every boy gave a girl he knew the peachthey selected", each peach depends on the selectionby a boy and a girl together.
Take a scenarioanalogous to that in the previous section, with thefacts now as follows (replacing "selected" for "wants*):1.
(& (gave by gl P~) (know b r gl)(8ele,=ted (SETOF bl gl) pr ) )2.
(& (gave b t g2P2)(NOT (know b I g2) )(=e lected (SETO?
b 1 g2) P2) ) "3.
(& (gave b292P3) (know b292)(=ele?ted (SETOF b292) P3))By an analogous argument as before, using R5, theset of peaches will incorrectly contain P2' given by aboy to a girl who selected it with him, but whom he didnot know.
The modified rule is analogous to R3" inthe previous section:RS' : (FORALL v I S I(Q= v z s= .
.
.
O~ v= s=(p (IOTA x s (R x) ) ) ) )  =>de:  (SET z S t(EXISTS v I S I .
.
.
v  S(= z (IOTA x S (R x)})))Note that this problem of under-specified setsdoes not arise when the dependency inside the IOTAis on one variable, because the definite "the" forces aone-to-one mapping from the possible assignments ofthe single outer variable represented in the IOTA tothe IOTA denotations.
If we use the example, "Everyboy gave a girl he knew the peach she wanted", withlogical form:(FORALL x boys(EXISTS y (SET y' gi=is(know= x y '  ) )(gave x y (IOTA z pea=hem(want,, y =) ) ) ) )there is such a mapping between the set of girls in theappropriate DE 2 (those who got the peach theywanted from a boy they knew) and the peaches inDE 3 obtained via R5' (the peaches that some girl inDE 2 wanted).
Each gid wants exactly one peach, sofacts 2 and 3, where the same girl receives two dif-ferent peaches, cannot occur.
So the definite ensuresthat no scenario can be constructed containing extraitems, as long as there is only one outer variable inthe inner iota.
However in the joint dependency ex-ample above using "selected", the one-to-one map-ping is between boy-girl pairs and peaches, so therelationship between the boys and the girls becomesan integral part of determining the correct DE 3.6 Non-L ingu is t ic  D iscourse Entit iesIn a dialogue between persons, references can bemade not only to linguistically-introduced objects, butalso to objects (or events, etc.)
that become salient inthe environment hrough some non-linguistic means.For example, a loud noise may prompt a question"What was that ?
", or one may look at or point to anobject and refer to it, "What's wrong with it ?".
Itseems an attention-drawing event normally precedessuch a reference.In the Janus human-computer environment, non-linguistic attention-drawing mechanisms that we haveidentified so far include pointing actions by the user,and highlighting (by the system) of changes on thescreen as a response to a request (or for otherreasons).
The appearance of answers to questionsalso draws the user's attention.
We incorporatedthese into generalized notion of a "communicativeact" which may be linguistic in nature (English input orgenerated English output), a pointing gesture by theuser, or some other system-initiated action.
Any com-municative act may give rise to DEs and affect thefocused entities in the discourse.We have implemented procedures to handlepointing actions by generating discourse entitieswhich are then used in the pronoun resolution com-ponent uniformly with the others.
For example, afterthe request *Show me the C1 carriers in the IndianOcean" the system will display icons on the colormonitor representing the carriers.
The user can thensay "Which of them are within 200 miles of it?
<pointwith mouse to Kennedy>*.
Before the sentence getsprocessed, a discourse entity with the logical form(IOTA x carriers (nameof x "Kennedy")) ?
will becreated and added to the list of entities currently infocus (the "forward looking centers* of the last linguis-tic act); the DE's "originating-communicative-act" fieldwill point to a newly created "pointing" communicative249Montague, Richard.
(1973).
The Proper Treatment ofQuantification in Ordinary English.
InJ.
Hintikka, J. Moravcsik and P. Suppes (Eds.
),Approaches to Natural Language.
Dordrecht:Reidel.Scha, Remko J.H.
(1976).
Semantic Types inPHLIQAI.
Coling 76 Preprints.
Ottawa,Canada.Scha, Remko J.H., Bruce, Bertram C., and Polanyi,Livia.
(1987).
Discourse Understanding.
InEncyclopedia of Artificial Intelligence.
JohnWiley & Sons, Inc.Sidner, Candace L. (1981).
Focusing for the Inter-pretation of Pronouns.
American Journal ofComputational Linguistics, 7(4), 217-231.Sidner, Candace L. (1983).
Focusing in the Com-prehension of Definite Anaphora.
In M. Bradyand R. C. Berwick (Eds.
), ComputationalModels of Discourse.
Cambridge, MA: MITPress.Stallard, David G. (1988).
A Manual for the LogicalLanguage of the BBN Spoken Language Sys-tem.
Unpublished.Kurt VanLehn.
(1978).
Determining the Scope ofEnglish Quantifiers (Tech.
Rep. 483).
MIT Ar-tificial Intelligence Laboratory.Webber, Bonnie L. (1978).
A Formal Approach toDiscourse Anaphora (BBN Report 3761).Cambridge, MA: Bolt Beranek and Newman.Webber, Bonnie L. (1981).
Discourse Model Syn-thesis: Preliminaries to Reference.
In Joshi,Webber, and Sag (Eds.
), Elements of Dis.course Understanding.
Cambridge UniversityPress.Webber, Bonnie L. (1983).
So What Can We TalkAbout Now?
In Brady and Berwick (Eds.
),Computational Models of Discourse.
MITPress.Webber, Bonnie L. (1988).
Discourse Deixis: Refer-ence to Discourse Segments.
Proceedings ofthe 26th Annual Meeting of the ACL.
ACL.Weischedel, R., Ayuso, D., Haas, A., Hinrichs, E.,Scha, R., Shaked, V., and Stallard, D. (1987).Research and Development in Natural Lan-guage Understanding as Part of the StrategicComputing Program, Annual Technical ReportDecember 1985- December 1986 (BBN Report6522).
Cambridge, MA: Bolt Beranek andNewman.250
