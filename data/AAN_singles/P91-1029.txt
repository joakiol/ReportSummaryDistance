METAPHORIC GENERALIZATION THROUGHSORT COERCIONEllen Hays10 Pine AvenueArl ington, MA 02174hays@linc.cis.upenn.eduSamuel BayerThe MITRE Corporat ion,  A040Burl ington Rd.Bedford, MA 01730sam@mitre.orgAbstractThis paper presents a method for interpret-ing metaphoric language in the context of aportable natural language interface.
The methodlicenses metaphoric uses via coercions betweenincompatible ontological sorts.
The machineryallows both previously-known and unexpectedmetaphoric uses to be correctly interpreted andevaluated with respect o the backend expert sys-tem.1 Introduct ionOne of the central issues in AI systems has beenhow to model the domain: what are the primitivesof the ontological language, how are the ontolog-ical sorts organized, and so on.
AI researchershave explored a wide range of object-centeredand relation-centered representations (for exam-ple, Brachman and Schmolze (1985) and Minsky(1975)).
When setting up the domain model fora natural anguage interface, though, one mustalso keep the lexicon in mind, so that words canbe defined and processed efficiently; if possible,the hierarchical organization ofthe domain modelshould minimize sense ambiguity, by allowing lex-ical items to point to classes that dominate theobjects that reflect each item's range of meanings.However, a growing body of literature arguesthat the generalizations about the world im-plied by the lexicon do not correspond exactlyto standard computational notions of fine-grainedontological structure.
Rather, the mapping ismediated by pervasive low-level metaphoric andmetonymic processes (as pointed out by Lakoff(1987) and others) that make for a mismatch be-tween the desired world model and the lexicon.At the MITRE Corporation, we are developingan interface architecture to support King Kong,our portable natural language interface for ex-pert systems, and AIMI, our multimedia nterfacefor the same class of systems) Portable inter-faces provide an additional set of problems be-yond simple domain modeling.
In particular, inour case, the structure the knowledge represen-tation imposes on the backend omain model ishierarchical nd relation-based, and its form mustbe consistent across system ports; thus the knowl-edge representation may structure domain-specificinformation i a way that is fundamentally differ-ent from the way it is organized in the backend.
Inthis context, one needs to develop acomputationalaccount of the low-level metaphor that creates themismatch between the domain model and the lex-icon.
In this paper, we will discuss a mechanismimplemented in King Kong that we call "sort co-ercion" that is intended to address that mismatch.2 Ref inement in the KingKong domain modelIn the King Kong knowledge representation, bothconcepts and relations are organized hierarchi-cally.
King Kong exploits this hierarchy in a num-ber of ways, of which the most relevant o thisdiscussion occurs in the process of refinement.When King Kong interprets a sentence, it buildsan interpretation corresponding to the input.
In-terpretations represent a point in the semantic1 The AIMI system is, in fact, one of the domains to whichKing Kong has been ported.
The current implementationof King Kong has also been ported to two mission planningsystems and one transportation planning system.
The co-ercion mechanism described here currently supports exam-ples in the mission planning and interface domains.222analysis that is subsequent to some lexical disam-biguation but prior to the determination of scoperelationships and reference resolution.
They arebuilt in large part out of knowledge representa-tion objects.
They have heads, for instance, whichare typically filled by relations from the domainmodel, and argument lists, which are usually map-pings from the arguments of the relation in thehead to other interpretations.The heads of these interpretations can be verygeneral relations, and King Kong uses refinementto find relations in the hierarchy that are dom-inated by the head indicated by the input andthat are specific enough to be evaluated.
Oncereferents have been resolved, refinement choosesappropriate leaf relations by recursively checkingthe children of each relation in the subgraph acces-sible from the input relation and eliminating anychildren whose argument restrictions are disjointfrom the sorts of the arguments.
Each leaf relationhas backend access code stored on it that allowsKing Kong to communicate with the backend ex-pert system.
The code stored on the leaf relationsfound by this procedure supports the evaluationof the logical expressions generated from the in-put interpretations.3 Mot ivat ions  for sort  coer-c ionThe obvious problem for a system using a hier-archy of the kind just described is that in mostcases there is no direct, one-to-one mapping be-tween words and concepts.
Most lexical items havea number of different meanings, and within thosemeanings there are often different senses, as wellas various selectional restrictions and preferences,whether igidly defined or merely stylistic.One case in point is the locative prepositions,which have been studied in great detail by anumber of linguists, including Herskovits (1986),whose analysis of static locative prepositions suchas in, on, and at defines a program of sorts for in-terpreting each, in the presence of particular argu-ments.
The scheme consists of an ideal meaning (avery abstract definition) and a number of use types(more concrete senses).
The relations o defined,however, require that the system have recourse toa number of "functions" that, in some sense, "co-erce" the objects arguments to the relations fromone ontological sort to another.Herskovits calls these geometric descriptionfunctions; they capture anumber of different kindsof conceptualization (or recasting) of objects.
Forexample, for the purposes of the abstract rela-tion a t (x ,y )  ("X \[is\] at y,,),2 both x and y aretaken to be points.
3 Then in the actual instance ofthe relation at  ( j  olin, a i rpor t ) ,  according to thismodel, we have conceptualized both of the (three-dimensional) objects in the relation as points in or-der to express that particular locative relation be-tween them.
In the same way, when we use at witha temporal argument ("a meeting at 5 o'clock"),we are in some sense "viewing" a time point as aspatial object, namely a geometric point.
4Since a geometric description function can ap-ply to any argument of the appropriate ontolog-ical sort (i.e., within the range of the function),regardless of the relation it figures in, what thisscheme captures is a generalization about concep-tual "transfer of reference', as Herskovits has morerecently called it (Herskovits, 1989).The coercion mechanism described in this pa-per was inspired partly by Herskovits' work andpartly by the system's existing domain model.
Itis a response to the need for a one-to-many map-ping from lexical items to ontological items (in thiscase locative and event relations), and is an at-tempt to capture explicitly some of the ways inwhich changing the way an object is viewed allowscertain metaphoric and metonymic uses.4 The  coerc ion  mechan ismThe central information source in our account ofmetaphor and metonymy is a set of coercion rules.Coercion rules declare different ways of viewingparticular classes of objects.
So if we wish to viewtemporal intervals as one-dimensional spatial ob-jects (lines), we would declare:(I) (defCoerce temporal-interval line)These coercion rules can be chained; if we wishto view events as temporal intervals (that is, theintervals over which they occur), we could ulti-mately view them as lines as well simply by addinganother declaration:2Herskovlts follows Talmy (1983) and others in seeinglocative prepositions as defining a figure/ground relation-ship between a located object and a reference object.3The ideal meaning of at is for two points to coincide(1986, p.128).4 Jackendoffproposes a similar esponse to the problem,with respect o temporal use of spatial expressions.
See(Jackendoff, 1983, ch.10).223(2) (defCoercedurative- eventt emporal-int erval)King Kong uses these coercion rules in two re-lated ways.
The first is to license what we callshadow relations.
These are relations that haveno parent but are connected to the domain modelby means of a shadow link.
This link requiresthat the value restrictions on the arguments of theshadowing relation be connected to the value re-strictions on the shadowed relation by a chain ofcoercion rules.
These shadow links are requiredbecause the normal subsumption relationship doesnot permit the shadowed relations to be connectedto their shadows; the endpoints of coercion linkswill typically be disjoint.
Intuitively, these shadowrelations represent the metaphoric uses that Lakoffcalled attention to.
When King Kong encountersa relation pointed to by the input that has shad-ows associated with it, it exploits an expandedversion of the refinement mechanism described inSection 2 to search through not only children butalso shadows for acceptable l af relations.Let us take a brief example.
Imagine that wewish to capture the low-level metaphor in a sen-tence like "The length of the meeting is 5 hours.
"The ideal meaning of the length -o f  relation in-volves a line and a one-dimensional (spatial) mea-sure, which are the value restrictions on the twoarguments (indicated here as vr):(3) (defRelation length-of(arg object (vr l ine))(arg measure (vr ld-measure))(super measure-of) )The coercions described in (1) and (2), togetherwith a view of quantities of time as spatial mea-sures (shown in (4)), suffice to license the shadowembodying the temporal metaphoric use of thelength-of relation in (3):(4) (defCoercequant i ty -o f - t i Jne  ld-measure)(5) (de fRe la t ion  length -o f -event(axg event(vr durat ive -event )  )(arg measure(vr  quant i ty -o f - t ime)  )(shadows length-of))But the mechanisms introduced so far do notaddress a particular equirement of the King Kongmetaphor mechanism that might not be imposedon other such mechanisms: the resulting logicalexpressions must be evaluable.
Since King Kong isan interface, its domain model captures the shapeof the data, but it does not itself store any facts;it must consult an external (i.e., the backend sys-tem's) database to reply to any queries.
So whenit recognizes a metaphoric use, it must providethe proper backend argument fillers to the back-end database in order to evaluate the query.
Butif the metaphoric use of the relation correspond-ing to the input has an argument correspondingto event and the ideal meaning requires an argu-ment corresponding to l ine ,  as in the length -o frelation given above, how can King Kong providethe proper backend individuals?The answer lies in the way coercion rules inter-act with the domain model.
When they licensea shadow relation, they instantiate a point in thespace of possible coercions, and to this shadow re-lation we can attach backend access code that ex-pects objects corresponding to the classes in thevalue restrictions of the current (shadowing) rela-tions.
In other words, in the example given above,although conceptually we are viewing an instanceof event as an instance of l ine ,  we need not referto the ideal class at all in processing; the shadowrelation permits us to treat these instances as or-dinary members of the event class.
The existenceof this shadow implies that there is a conceptualmismatch between the way the backend systemrecords this information and the way language x-presses it; the backend system considers the in-put classes directly, while the ontology and lexiconview these classes as coercions from other classes.
5But what if the backend system requires thatthe input classes be coerced, just as the domainmodel and lexicon do?
This is the second way inwhich the coercion rules can support metaphoriclanguage.
Coercion rules can have fragments oflogical expressions attached to them that describehow to convert items of one class to items of an-other.
We can use these augmented coercion rulesto process novel uses of relations.
If a path of co-ercions can be followed dynamically (rather thanbuilt at load time, as when shadows are licensed),the novel use can be evaluated, as long as the log-5This shadow, along with many others, could be auto-matically generated from our set of coercion rules, but sincethe backend access code that shadows are "repositories" forcannot be automatically generated as well, that would notbe productive.
Furthermore, we acknowledge the possi-bility that the unconstrained application of these coercionrules would generate shadow relations with no linguisticvalidity.224ical expressions attached to the coercion rules canthemselves be evaluated.
In that case, the proce-dure that builds logical expressions will fold thelogical expressions associated with the coercionrules into the overall logical expression, in orderto create an evaluable xpression, eFor example, consider a backend system thatknows about meetings and their start and endtimes, but doesn't store their duration.
Further-more, it knows how to manipulate intervals oftime.
We might amend the coercion rule in (2)above in the following way, and replace the shadowshown in (5):(e) (defCoercedurat ive -event  empora l - in terva l( lambda x(durat ive -event -has - in terva ldurat ive -event  x ) ) )(7) (de fge la t iondurat ive -event -has - iu terva l(arg  event(vr  durat ive -event ) )(arg in terva l(v r  tempora l - in terva l ) )(super event -has -proper ty ) )(s) (defRe la$ ion  length -o f - in terva l(arg  in terva l(v r  tempora l - in terva l ) )(arg measure(vr  quant i ty -o f - t ime) )(shadows length-of))In this situation, the length -o f - in terva l  re-lation instantiates a point in the space of possiblecoercions that represents the system's ability tocompare a temporal interval with a time measure-ment.
It represents the direct understanding ofsomething like "The length of the coffee break was10 minutes," where we assume that a coffee breakis a kind of temporal interval.
Ignoring tense, thelogical expression corresponding to this exampleis: 7(9) ( length -o f  co f fee -break1  lO-minutes)The generalized refinement process will locatethe shadow length -o f - in terva l  and use the6If the coercion rules are not all evaluable, we can buildan interpretation for the input, but we cannot evaluate it.?
King Kong actually represents measurements as undif-ferentiated pools of individuals, much as it represents "10planes", for instance.
We may ignore that detail here.code associated with it to communicate with thebackend system.
We can do more, however.
Giventhe existence of the augmented coercion rule, wecan understand sentences like our first example"The length of the meeting is 5 hours" by build-ing a chain of coercions that consists of a singlelink, from events to temporal intervals.
In thiscase, our logical expression will be:(10) (exists y(lambda x(durat  i ve -event -has - in t  e rva lcoffee-break1 x) )(length-of y lO-minutes) )As long as there is backend access code asso-ciated with the durat ive -event -has - in terva lrelation, we can process this use of thelength-of relation without the shadow in (5)( length -o f -event )  present.
In fact, we can pro-cess any metaphoric reference to an event thatappears in an argument position whose filler is re-stricted to intervals of time.
Consider the over laprelation, whose ideal meaning is a relation betweentwo planes or two lines.
The coercion rules alreadygiven will license a shadow that relates two inter-vals:(xx) (defRelat ion overlap(arg obj 1 (vr line))(arg  obj2 (vr l ine))(super s ta t i c - locat ive)  )(12) (defRelation temporal-overlap(arg objl(vr temporal-interval))(arg obj2(vr temporal-interval))(shadows overlap) )The shadow in (12) corresponds to an examplelike "The current calendar year overlaps with thenext fiscal year."
But given the augmented coer-cion rule, we can understand sentences like "Thefirst meeting overlaps with the second meeting"just as easily:(13) (exists y(lambda x(durat ive-event-has- intervalmeeting1 x) )(exists z(lambda x(durat ive-event-has-int ervalmeeting2 x))(overlap y z)))225This method of supporting metaphorical ex-tension by explicitly defining the space of pos-sible ways of conceptualizing an object allowsus considerable flexibility in understanding ovelmetaphoric use.
sThe same augmented coercion rules can be usedif we wish to license a shadow relation that hasno backend access code associated with it.
Wemight want to use that strategy in the situationwhere the metaphoric use can be anticipated butthe access code associated with the shadow wouldhave to perform exactly the same computation asthe coercion code.5 Compar i son  w i th  other  ac-countsAs in DeJong and Waltz's work (1983), the KingKong coercion mechanism is triggered by viola-tions of sort restrictions on arguments.
We donot, however, agree with DeJong and Waltz'scontention that "Nouns are far less likely to bemetaphorical than verbs."
The symbiosis be-tween shadows and coercion rules implies that themetaphor lies not in the functor or its arguments,but rather in the association between them.
Fur-thermore, our mechanism also structures the pathbetween metaphoric use and ideal meaning, andprovides computational support for argument co-ercion.
The mechanism has the same advantageover the work of Jacobs and Martin.5.1 Jacobs  and  Mar t inIn a series of papers (Besemer and Jacobs, 1987;Jacobs, 1986; Jacobs, 1987), Paul Jacobs has de-veloped a relationship he calls a view.
Viewsexpress a relationship between event types thatimplements metaphoric extension.
For example,in order to handle examples like "The commandtakes three arguments ~, he defines the followingview:(VIEW execute-operationcausal-doubl e-trans~ er(ROLE-PIAY input object-l)(ROLE-PLAY output object-2)(ROLE-PlAY user source- l )(ROLE-PlAY operation source-2))SNote that shadows always embody dlsjointness betweenat least one of their arguments and those in the ideal mean-ing.
Thus, no input relation can be simultaneously inter-preted both as a subsumed relation and as a shadow.In Jacobs' system, this view would incorporatethe metaphorical mappings from the full range ofexpressions referring to exchange operations suchas giving, buying, and selling.
As a result, themappings in this view may be used to understandexpressions such as "This command gives you thefile names", and so on.Like the work of Martin (see below), Jacobs'approach as the potential for grouping familiesof relationships into situations, a capability KingKong does not yet have.
Jacobs' views correspondroughly to our shadow relations.However, the view mechanism provides no lim-itations on the correspondences between the ob-jects in the ROLE-PLAY declarations, nor does thereseem to be any capability for computing one argu-ment class from another.
As a result, it is difficultto see how Jacobs' account would intelligently re-strict the range of novel language use the systemwill handle, or how it might be used to providecomputational support for sort coercion in an in-terface.Martin (1987a, 1987b), working with the samemechanism, takes steps toward addressing thefirst concern.
His work involves learning newmetaphoric uses in light of already recognizedmetaphors.
So Martin's heuristics allow the sys-tem to learn what "getting out of Lisp" means ifit knows what "getting into Lisp" means.
His sys-tem knows about entering and exiting, enablingand disabling Lisp processes, and that there isa map between entering and enabling Lisp.
Be-cause entering and exiting are closely connected(they are related by the frame semantic relationreversible-state-change),  Martin's system canbuild the metaphoric link from exiting to disablingLisp.
Techniques such as this one constrain the in-terpretation of novel language use, since the sys-tem can only generalize from the existing library ofmetaphoric uses.
However, they provide no com-putational support for evaluating novel uses.5.2 Gentner  e t  al.Gentner's structure-mapping techniques (Gen-tner, 1983; Gentner et al 1987) are applicablemostly to explicit analogies uch as "An electricbattery is like a reservoir."
Her approach, imple-mented by Falkenhainer and Forbus (1986), mapsthe structure of the source of the metaphor to thestructure of the target by creating match hypothe-ses between relational representations of the baseand target using a set of match construction rules.But the central example of a match construction226rule seems to require that the names of the predi-cates in the facts being matched be identical.
Un-der this sort of construction rule, it is possible toderive a metaphoric mapping only if the namesof the predicates have been set up to encode themetaphor ahead of time.
Under this system, it isnot possible to deduce new metaphors; in fact, onecan only recognize them if the metaphoric link hasbeen made but not recorded.5 .3  Boguraev  and  Puste jovskyBoguraev and Pustejovsky (1990) argue that thenormal conceptions of the structure of the lexiconare impoverished for two major reasons.
First, agreat number of distinctions beyond those usuallymade are necessary to capture the essential as-pects of lexical semantics.
Second, the commontechnique for representing ambiguity in the lexi-con (enumeration) falls short because numerationof word senses neither organizes the senses intelli-gently nor provides for creative use of words.For instance, under the enumeration method,the following uses of "fast" require that at leastthese three senses he listed in the lexicon:: fas t ( l ) :  able to move quickly (a fastcar)fas t (2 ) :  able to perform some actquickly (a fast typist)faat (3 ) :  taking little time (a fast oilchange)However, these three senses are not enough to ac-count for the creative use of "fast" in a phrase suchas "a fast highway".Pustejovsky's solution to this problem (outlinedalso in (Pustejovsky, 1990)) is a "generative l x-icon", which organizes lexical items with respectto one or more of: (1) argument structure, (2)event structure, (3) qualia structure, and (4) lexi-cal inheritance structure.
These lexical structuresare intended to address the different ways in whichwords are understood; the differing interpretationsof "fast" shown above are taken to be a function ofthe differing qualia structures of "car", "typist","oil change", and "highway".While Pustejovsky's proposal for a variety oflexical structures is far richer than anything cur-rently implemented in King Kong, one problemwith his account is that the links are links be-tween lexical items and not between objects in adomain model.
Simple cases of anaphoric refer-ence demonstrate hat in many cases the coercionsthat he conceives of are properties not of lexicalitems but rather of the objects referred to:John bought a Porsche, and it's fast.John hired a typist, and he's fast.I drove down 1-90 yesterday, and it'sfast.John bought a new car, but Bill's isfaster.John hired a good typist, but Bill's isfaster.America is supposed to have good high-ways, but Italy's are faster.The lexical items whose qualia structures are in-tended to account for the different interpretationsof "fast" are not present in the second clause ofeach of the preceding examples, but the correct in-terpretations are still available.
This implies thatit is the language user's conception of the objectin question (that is, the user's world model) thatdetermines the precise sense of "fast".In our account, in contrast, the links that sup-port the range of metaphoric extensions Puste-jovsky deals with reside in the domain model.
Thisaccount also supports generalization of these ex-tensions to hierarchies of semantic lasses:John bought a new car, and it's fast.John bought a new vehicle, and it's fast.and preserves these extensions under synonymy:John bought a new car, and it's fast.John bought a new automobile, and it'sfast.6 ConclusionOne insight missed in most relation-based ac-counts of metaphor 9 is the wide space of possibil-ities for conceptualizing the argument types: howthese possibilities are constrained, how the trans-formations can be computed.
The coercion mecha-nism in King Kong supports metaphoric processesboth statically and dynamically, by defining howmetaphoric links between relations are establishedand supporting computational tools for compre-hending and processing novel metaphoric uses.AcknowledgmentsThis research was supported by the MITRE Cor-poration under MSR project 91340.9 With the exception ofBoguraev and Pustejovsky's, ofCOUlee .227References\[Besemer and Jacobs 1987\]David J. Besemer and Paul S. Jacobs.FLUSH: A flexible lexicon design.
In Proceed-ings of the 25th Annual Meeting of the Asso-ciation for Computational Linguistics, pages186-192.\[Boguraev and Pustejovsky 1990\]Branimir Boguraev and James Pustejovsky.Lexical ambiguity and the role of knowl-edge representation i  lexicon design.
InCOLING-gO: Proceedings of the 13th Inter-national Conference on Computational Lin-guistics, volume 2, pages 36-41.\[Brachman d Schmolze 1985\]R.J. Braehman and J.G.
Schmolze.
Anoverview of the KL-ONE knowledge represen-tation system.
Cognitive Science, 9(2):171-216.\[DeJong and Waltz 1983\]Gerald F. DeJong and David L. Waltz.
Un-derstanding novel language.
Computers andMathematics with Applications, 9(1):131-147.\[Falkenhainer et at.
1986\]B. Falkenhainer, K.D.
Forbus, and D. Gen-tner.
The structure-mapping engine.
InAAAI-86: Proceedings of the Fifth NationalConference on Artificial Intelligence, pages272-277.\[Gentner 1983\]Dedre Gentner.
Structure-mapping: A theo-retical framework for analogy.
Cognitive Sci-ence, 7:155-170.\[Gentner t al.
1987\]Dedre Gentner, Brian Falkenhainer, and Jan-ice Skorstad.
Metaphor: the good, thebad and the ugly.
In Yorick Wilks, edi-tor, TINLAP-3: Theoretical lssues in NaturalLanguage Processing-$, pages 155-159, NewMexico State University, Las Cruces.\[Herskovits 1986\]Annette Herskovits.
Language and spatialcognition: an interdisciplinary study of theprepositions in English.
Cambridge Univer-sity Press, New York.\[Herskovits 1989\]Annette Herskovits.
The linguistic expressionof spatial knowledge.
L.A.U.D.
Paper A 248,Linguistic Agency University of Duisburg.\[Jackendoff 1983\]Ray Jackendoff.
Semantics and Cognition.MIT Press, Cambridge, MA.\[Jacobs 1986\]Paul S. Jacobs.
Language analysis in not-so-limited domains.
In Proceedings of the IEEEFall Joint Computer Conference.\[Jacobs 1987\]Paul S. Jacobs.
A knowledge framework fornatural language analysis.
In IJCAI-87: Pro-ceedings of the lOth International Joint Con-ference on Artificial Intelligence, pages 675-678.\[Lakoff 1987\]George Lakoff.
Women, Fire, and DangerousThings.
University of Chicago Press, Chicago.\[Martin 1987a\]James H. Martin.
The acquisition of poly-semy.
In Proceedings of the Fourth Interna-tional Workshop on Machine Learning, pages198-204.\[Martin 1987b\]James H. Martin.
Understanding newmetaphors.
In IJCAI-87: Proceedings of thelOth International Conference on ArtificialIntelligence, pages 137-139.\[Minsky 1975\]Marvin Minsky.
A framework for represent-ing knowledge.
In Patrick Henry Winston,editor, The Psychology of Computer Vision,chapter 6, pages 211-277.
McGraw-Hill, NewYork.\[Pustejovsky 1990\]James Pustejovsky.
Lexical ambiguity andthe role of inheritance.
Talk given at BBN,Cambridge, MA, 6 November 1990.\[Talmy 1983\]Leonard Talmy.
How language structuresspace.
In Herbert Pick and Linda Acredolo,editors, Spatial Orientation: Theory, Re-search, and Application.
Plenum Press, NewYork.228
