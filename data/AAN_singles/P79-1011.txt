ON THE AUTOMATIC TRANSFORMATIONOF CLASS MEMBERSHIP CRITERIABarbara C. SangsterRutgers UniversityThis paper addresses a problem that may arise inc\]assificatzon tasks: the design of procedures formatching an instance with a set ~f criteria for classmembership in such a way as to permit the intelligenthandling ~f inexact, as well as exact matches.
Aninexact match is a comparlson between an instance and aset of criteria (or a second instance) which has theresult that some, but not all, of the criteria described(or exemplified) in the second are found to be satisfiedin the first.
An exact match is such a comparison forwhich all of the criteria of the second are found to besatisfied in the first.
The approach presented in thispaper is t~ transform the set of criteria for classmembership into an exemplary instance of a member of theclass, which exhibits a set ~f characteristics whosepresence is necessary and sufficient for membership inthat class.
Use of this exemplary instance during thematching process appears to permit important functionsassociated with inexact matching to be easi\]y performed,and also to have a beneficial effect on the overaJ\]efficiency of the matching process.1.
INTRODUCTIONAn important common element ~f many projects inArtificial Intelligence is the determination of whethera particular instance satisfies the criteria formembership in a particular class.
Frequently, this taskis a component of a larger one involving a set ofinstances, or a set of classes, or both.
Thisdetermination need not necessarily call for an exactmatch between an instance and a set of criteria, butonly for the "best ," or "closest ," match, by somedefinition of goodness or closeness.
One importantspecification for such tasks is the capability forefficient matching procedures; another is the abilityto perform inexact, as we\]\] as exact matches.One step towards achieving efficient matching proceduresis 50 represent criteria for class membership in thesame way as descriptions ~f instances.
This may be doneby transforming the set of criteria, through a processof symbolic instantiation, into a kind of prototypicalinstance, or exemplary member of the class.
Thispermits the use of a simple matching algorithm, such asone that merely checks whether required components ofthe definition of the class are also present in thedescription of the instance.
This also permits easyrepresentation of modifications to the definition,whenever the capability of inexact matching is desired.Other ways of representing definitions of ciasses mightbe needed for other purposes, however.
For example, theknowledge-representation language AIMDS would normallybe expected to represent definitions in a more complexmanner, involving the use of pattern-directed inferencerules.
These rules may be used, e.g., to identifyinconsistencies and fill in unknown values.
Arepresentation of a definition derived through symbolicinstantiation does not have this wide a range ofcapabilitles, but it does appear to offer advantagesover the other representation for efficient matching andfor easy handling of inexact matches.
We might,The research reported in this paper was partiallysupported by the National Science Foundation under Grant#S0C-7811q08 and by the Research Foundation of the StateUniversity of New York under Grant #150-2197-A.therefore, like to be able to translate back and forthbetween the two forms of representation as our needsrequire.An algorithm has been devised for automaticallytrans\]ating a definition in one of the two directions --from the form using the pattern-directed inference rulesintn a simpler, symboJical\]y instantiated form \[11\].This algorithm has been shown to work correctly for anywell-formed definition in a clearly-defined syntacticclass \[10\].
The use of the symbolically instantiatedform for b~th exact and inexact matches is outlinedhere; using a hand-created symbolic instantiation, arun demonstrating an exact match is presented.
Thepaper conc\]udes with a discussion ~f some implicationsof this apprnach.2.
INRXAC T MATCHINGThe research project presented in this paper wasmotivated by the need for determining automaticallywhether a set of facts comprising the description of alegal case satisfies the conditions expressed in a legs/definition, and, if not, in what respects it fails tosatisfy those conditions \[8\], \[9\], \[I0\], \[11\], \[13\].The need to perform this task is central to a largerproject whose purpose is the representation of thedefinitions of certain legal concepts, and of decisionsbased on those concepts.inexact matching arises in the legal/judlclal domainwhen a legal class must be assigned to the facts of thecase at hand, but when an exact match cannot be rolandbetween those facts and any of the definitions ofpossible legal classes.
In that situation, a reasonablefirst-order approximation to the way real decisions aremade may be to say that the class whose definitionoffers the "best" or " closest" match to the facts ofthe case at hand is the class that should be assigned tothe facts in question.
That is the approach taken inthe current project.In addition to the application discussed here (theassignment of an instance of a knowledge structure toone of a set of classes), inexact matching and closerelatives thereof are also found in several otherdomains within computational linguistics.
Inexactmatching to a knowledge structure may also come intoplay in updating a knowledge base, or in responding toqueries over a knowledge base \[5\], \[6\].
In the domainof syntax, an inexact matching capability makes possiblethe correct interpretation of utterances that are notfully grammatical with respect to the grammar being used\[7\].
In the domains of speech understanding andcharacter recognition, the ability to perform inexactmatching makes it possible to disregard errors caused bysuch factors as noise or carelessness of the speaker orwriter.When an inexact match of an instance has beenidentified, the first step is to attempt to deal withany criteria ~nich were not found to be satisfied in theinstance, but were not found not to be satisfied either-- i.e., the unknowns.
At that point, if an exact matchstill has not been achieved, two modes of action arepossible: the modification of the instance whosecharacterization is being sought, or the modification ofthe criteria by means of which a characterization isfound.
The choice between these two responses (or ofthe way in which they are combined) appears to be afunction of the domain and sometimes also of theparticular item in question.
In general, in the45lesallJudlcial domain, the facts of the case, oncedetermined, are fixed (~nless new evidence isintroduced), hut the criteria For assigning a legalcharacterization to those facts may be modified.3.
I ~ Z ~ ~ E  t ~  ~ A p.mh+mtM~myBecause of.
the importance of  inexact ~atchlnE in thelegal/judlclal domain, it is desirable to utilize amatehir~ procedure that permits useful functions relatedto inexant matching to be performed conveniently.
Suchfunctions include a way of.
easily determining all therespects in which attempted exact matches to aparticular definition might fail , a wey of.
easilydeterminln~ what chlln~es to a definition would besuf.f.icient For an exact match with a particular case tobe permitted, and a wey of ensuring that a contemplatedmodif.lcation to a def.inition will not introduceinconsistencies.Two f.eatures of.
a representational scheme that wouldappear to help in performin~ these functionsconveniently areSPEC1) that  the scheme permit  a d i s t inc t ion  tobe made between those propos i t ions  that  must bet~ be true of.
any instance satlsfylng thedef.lnltion and any other  propositions that mightalso be true of.
the instance, andSPEC2) that  the scheme permit  the former set of.propos i t ions  to be expressed in a s imple ,ulilf.led wey, so as to  redune or  even e l iminatethe need for  inf .erencing and o ther  processingactivities when the ~nt lons  outlined above areperformed.By sat lsfy i~ SPECl, we permit the propositions whichare central to the matohiDg process to he distir~ulshedfrom any others ;  by sat i s fy ing  SPEC2, we permit  thosepropos i t ions  to be accessed and manipulated (e ,go ,  forthe inexact  matching Funct ions l i s ted  above) in ane f f i c ient  and s t ra ight fo rward  manner.
Thus, theFulfillment of  3PECI and SPEC2 slgniflcantly strengthensour ability to perform Functions central to the inexactmatching process.A representational scheme that meets thesespecifications has been designed, and an experimentalimplementation performed.
The approach used is toprecede the matching activity proper with a one-tlmepreprocessing phase, duping Milch the definition isautomatically transformed from the form in which it isoriginally expressed into a representational schemewhich appears to be more suitable to the matching taskat hand.
The transformation algorithm makes use of adistlnntion between those components of the definitionwl~ich must be Found to be true and those whose trutheither may be inferred or else is irrelevant to thematching process.
The transformation is performed bymeans of a process of ~ inmtRntlat~nn OF thedeflnition -- the translation of the de/initlon f~'om aset of criteria for satisfying the definition into anexemplary instance of the concept itself.
Thetransformed definition resulting f ro  m this processappears to meet the speclf.ications given above.The input to the transformation process is a definitionexpressed in two parts:CCHPONENTI) a set of propositions eonslsting ofrelations between typed variables organized inframe form, andCCI4POMENT2) a set of' pattern-directed inferencerules expressing constraints on how thepropositions in CCHPONEMTI .my be Instantlated.
'rite propositions in COHPONENTI include propositions thatmust be found to be true of.
any instance satisfying the+,,,,,=-,nor ~ o , ~ "  .
.
.
.//7 "?
"~Yf~NO ;~ p~ec.l\]I ?
, .
, ,o~+~"r}.i~ ';'+'+.''''+'.
,: CONPONENT1 fo r  a s tap len.46definition, as well as other pr~positions that do nothave this quality.The output from the trans{ormation process that is usedfor matching with an instance is a symbolicallyinstantiated form of the definition called the KERNELfo~ the definition.
It consists solely of aset of propositions expressing relations betweeninstances.
These are precisely those propositions whosetruth must be observed in any instance satisfying thedefinition.
Constraints on instantiation (COMPONENT2above) are reflected in the choice of values for theinstances in these propositions.
Thus the KERNELstructure has the properties set forth in SPECI andSPEC2 above, and its use during the matching process mayconsequently be expected to help in w~rking with inexactmatches.
For similar reasons, use of the KERNELstructure appears also to permit a significantimprovement in efficiency of the overall matchingprocess  \[I0\], \[11\].The propositions input to the transformation process(i.e., COMPONENTI) are illustrated, for the definitionof a kind of corporate reorganization called aBREORGANIZATION, in Figure I; the arcs representrelations, and the nodes represent the types of theinstances between which the relations may ho\]d. Severalof the pattern-directed inference rules input to thetransformation process (COMPONENT2) for part of the samedefinition are illustrated in Figure 2.
The KERNELstructure for that definition output by thetransformation process is illustrated in Figure 3.
Thepropositions shown there are the ones whose truth isnecessary and sufficient for the definition to havebeen met.
Bindings constraints between nodes arereflected in the labels of the nodes; the nodes inFigure 3 represent instances.
Thus, the two componentsrepresented in Figures I and 2 are transformed, for thepurposes of matching, into the structure represented inFigure 3,The transformation process is described in more detailin \[I0\] and \[11\]; \[10\] also contains an informal proofthat the transformation algorithm will work correctlyfor all definitions in a well-defined syntactic class.~.
~X~CUTIONOFTHEMATCHINOPR~CESSOnce the transformation of a definition has beenperformed, it need never again be repeated (unless thedefinition itself should change), and the compiledKERNEL structure may be used directly whenever a set of((EXCHANOE X)| FF((EXCHANOE X)I FFC(EXCHANOE X)ZFF((EXCHANOE X){FFTRANSI (TRAI4S T | )(X (TRANSFEROR1ACENTOF)  T1)(X (TRANSPROP20BJECTQF)  T1)(X (TRANSFEROR10LDO~NEROF)  T | )(X (TRANSFEROR2 NEWOWNEROF) T I ) \ ]TRANS2 (TRN~S 1"2)(X (TRANSFEROR2 AOENTOF) T2)(X (TRANSPRQP~ OBJECTOF) T2)(X (TRANSFEROR2 OLDONt4ERQF) T2)(X (TRANSFERORt NEWOWNEROF) ~)3TRANSFEROR!
(ACTOR A)(X (TRANSI  AOENT) A)(X (TRANSI OLDOWNER)  A)(X (TRANS2 NENOWNER) A) \ ]TRANSFEROR= (ACTOR A)(X (TRANS2 AOENr) A)(X (TRAN~2 OLDO~,qER) A)(X (THANS| NEiJO~NER) A) \ ]F f i _ u_ re  ~: A portion of COMPONENT2 or a sample definit ion.facts comprising a description of a legal c;Jse L~presented-for comparison with the def (n i t~n.In order to control possib\]e combinat~ric diffLcu\]+\[es,the KERNEL structure is decomposed tnt~ a se t ~r smallnetworks, against each of which a\]\] substructures ~f thesame type in the case description are tes+ed f~r astructural match (STAGEI).
DMATCH \[15\], a functL~nwr i t ten  by D. Touretzky, performed structural ma+chLngin the experimental implementation.
The hope LS the +"small networks" can be selected from the KERNEL in sucha way that matching to any single small n~twork wi|\]involve a minimal degree of combinator\[c compiexEty.For an exact match, the substructures that surviveSTAGEI (and no others) are then combined in all p~ssibievalid ways into larger networks ~f s~me degree ~fincrease in complexity.
A structural match ~f each ~fthese structures with the corresponding substructure ~fthe KERNEL is then attempted, and bindings c~nstraintsbetween formerly separate components of the new networkare thereby tested.
This process is repeated wLthsurviving substructures until the structural match isconducted against the KERNEL structure itself.
When +hecriterion for matching at each stage Ls an exact match,as described above, the survivors of the final s~age ~fstructural matching represent all and ~n\]y the subcasesin the case description that meet the c~ndi+i~nsexpressed in the definition.The execution of the marcher in the manner describedabove is illustrated in Figure 4.
For this example,five instances of the type TRANS (TI, T2, T3, T4, TL),two instances of the type CONTROL (CI, C2), and ~woinstances of PROPERTY (06, 09) were used.
The value ofMAKEFULLLIST shows the survivors of STAGEI.
The valueof BGO shows the single valid instance of aBREORGANIZATION that can be created fr-m thesecomponents.An inexact matching capability, not currentlyimplemented, would determine, when at any stage a matchfailed,I) why it had failed, and2) how close it ned come to being an exact ms+oh.At the next stage, a combination of substructures wouldbe submitted for consideration by the marcher only Lf ithad met some criterion of proximity t~ an exact match --either on an absolute scale, or relative to the ~thercandidates for matching.
When the final stage ~f thematching process had been completed, that candidate (orthose candidates) that permitted the most nearly exactmatch could then be Selected.In order to perform the inexact matching functionoutlined in the preceding paragraph, an a\]g-rithm forcomputing distance from a exact match must beformulated.
For the reasons given above, we anticipatethatI) the transformation of definitions into thecorresponding KERNEL structures will make thattask easier, and that2) once a distance a lgor i t~ has beenformulated, the use of the KERNEL structLLPe willcontribute to performing the inexact matchingf~/nction wlth efficiency and conceptual clarity.5.
CONCLUSIONSThe capability for the intelligent handling of inexactmatches ham been shown to be an important requirementfor the representation of certain classification +.asks.A procedure has been outlined ~nereby a set of criteriafor membership in a particular class may be transformedinto an exemplary instance of a member of that class.47/ y~ ~ ~  ~o~KeGKC.TK AS'~K CoR ffLK'r,!K~-3"~m Ko~: The KERNEL s t ruc ture  fo r  af tn t t Jon .As we have seen ,  use  o f  that  exemplary  ins tance  dur ing  \[3\]  Hayes-Roth ,  F. 1978.
"The Role o f  Par t ia l  and Bestthe matchinK process appears to permit important Y4atches in Knowledge Systems", - ~functions associated with inexact matchlnK to be easily ~ ~ ,  ed.
by D. Waterma~ and F.performed, and also to have a bene/icial affect on the Hayes-Roth.
Academlc Press.overall effiolency 0~' the matahinK process.\[4\] Hayes-Roth, F. and D. J. Hostow.
1975.
"AnACKHQWL~DCEMENT$ Automat ica l l y  Compi lable Eecosn l t lon  Network fo rS t ruc tured  Pat te rns" .
~ ~ IJCAI-?%, vo l .
1,The author is  gratet%ll to the fo l low in8  fo r  cos-Mints and pp.
2~6-251.suKgestions on the work reported on in this paper: S.Amarel, V. Cissielski, L. T. MoCarty, T. Mitchell, C5\] Joshi, A. K. 1978a.
"Some Extensions of a SystemN.
S. Sridha~an, and D. Touretzky.
for Inference on Partial I41foMlationn.
P~ttePn.Dir,~ted~ ,  ed.
by D. Waterman and F.R~RLTC~;RAPH?
Hayes-Noth.
Aoad clio PFess.\[I\] Freuder, ?.
C. 1978.
"Syntheslzln~ Constraint \[6\] Joshi, A. K. 1978b.
"A Nots on Partial Match ofExpressions".
CACM, vol.
21, pp.
958-966.
Desorlptlcns: Can One Simultaneously Question(Retr ieve)  and Inform (Update) ?"
.
?TRLA P-2 :\[2\] Hara l i ck ,  R. M. and L. G. ShapirO.
1979.
"The ~ ~ 1;1 ~ ~ ~,nsnxL~=?.Consistent LabelllnK Problem: Part I".
TRRR~ a ,  PINI0 re1.
I, pp.
173-18~.
\[7\] Kwasny, S. and N. K. Sondhelmsr, 1979.?
U~ra Jaat ioa l l ty  and Ext ra -Gr - , - , - t l ca l i ty  in  ~atu~a lLanguage U~derstandlnK Systems".
This volume.SECOND-CON tEXT ) )  (BQO)Enter  HAKEFtS ~l  Z81":!
PROTS ,, (PROTOTRANS$ PRQTOTRAN~ PROTOCONI"ROLI PROTO09 PROTO06)HAKEFULLLXST ~ ( (0~)  (Oh 09)  (C I  (:;2) (T'J T4 TS) (T2  T4 TS) )( (T ' J  T~ C2 09 06)  N i l .
)~ : Sample execution of  the process.48\[8\] McCarty, L. T. 1977.
"Reflections on TAXMAN: AnExperiment in Artificial Intelligence and LegalReasoning".
HarvmrdL~w Review, vo1.
90, pp.
837-893.\[9\] McCarty, b. T., N. 3.
Sridharan, and B. C.Sangster.
1979.
"The Implementation of TAXMAN II: AnExperiment in Artificial Intelligence and LegalReasoning".
Rutgers University Report #LCSR-TR-3.\[10\] Sangster, B. C. 1979a.
"An AutomaticallyCempilable Hierarchical Definition Marcher".
RutgersUniversity Report #LRP-TR-3.\[11\] Sangster, B. C. 1979b.
"An Overview of anAutomatically Compilab\]e Hierarchical DefinitionHatcher".
Promeed ln~f the  TJCAI-7q.\[12\] Sridharan, N. S. 1978a.
(Ed.)
"AIMDS UserManual, Version 2."
Rutgers University Report#CBM-TR-89.\[13\] Sridharan, N. S. 1978b.
"Some Relationshipsbetween BELIEVER and TAXMAN".
Rutgers University Report#LCSR-TR-2.\[14\] Srinivasan, C. V. 1976.
"The Architecture ofCoherent Information System: A General Problem 3olvingSystem".
T~E Trana~t ion~on~,  VOl.
25, pp.390-402.\[15\] Touretzky, D. 1978.
"Learning from Examples in aFrame-Based System".
Rutgers University Report#CBM-TR-87.\[16\] Woods, W. A.
1975.
"What 's  in  a L ink:Fot~ldat ions for  Sema/ltio Networks".
In Renresentat ionUnder~tAndinl ,  ed.
by D. G. Bobrow and A.Co l l ins .
Academic Press .49
