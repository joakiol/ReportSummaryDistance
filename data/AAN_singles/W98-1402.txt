.
:2 .
?
.COMMUNICAT IVE  GOAL-DRIVEN NL GENERATION AND DATA-DRIVENGRAPHICS GENERATION:  AN ARCHITECTURAL SYNTHESIS FOR MULT IMEDIAPAGE GENERATIONJ ohn  BatemanCentre for Communicationand Language ResearchSchool of English StudiesUniversity of StiflingSCOTLAND, U.K.j.
a. bateman@s tir : ac.
ukThomas Kamps JSrg Kleinz Klaus ReichenbergerIndustrial Process and Integrated Publication and InformationSystem Communications Systems InstituteDept.
of Electrical Engineering German Center for Information TechnologyDarmstadt University of TechnologyDARMSTADT, GERMANY{kamps, kleinz, re ichen}@darmstadt .gmd.
deAbstract ?In this paper we presen t a system for automatically producing multimedia pages of informationthat draws both from results in data-driven aggregation i  information visualization and from results incommunicative-goal oriented natural language generation.
Our system constitutes an architectural syn-thesis of these two directions, allowing a beneficial cross-fertilization f research methods.
We suggestthat data-driven visualization provides ageneral approach to aggregation in NLG, and that ext planningallows higher user-responsiveness in visualization via automatic diagram design.?
1 I n t roduct ionIn this paper we present one of the most significant system-architectural ?results relevant for NLG achievedwithin the KOMET-PAVE multimedia page generation experiment (GMD-IPSI: 1994-1996).
l Based onprevious, separate xperiences in natural anguage generation (see: Teich & Bateman 1994, Bateman &Teich 1995) and in automatic diagram design and visualization (see: Htiser, Reichenberger, Rostek &Streitz 1995), the KOMET-PAVE experiment sought o combine NLG and visualization into a single in-tegrated information presentation system capable ?
of producing effectively designed pages of informationanalogous to 'overviews' found in print-based publications such as encyclopediae or magazines.
During thiswork, it became vident hat there were significant overlaps both in the processes and organizations ofdatamost supportive of information presentation.
Moreover, the individual approaches offered complementarysolutions for presentation subproblems that proved independent of the particular presentation modalities forwhich they were originally developed.
A thorough architectural synthesis was therefore strongly indicated.The particular complementarity that provides the focus of the present paper is the following.
First, it iswidely accepted in both NLG and graphic design that the design decisions adopted must be sensitive notonly to communicative purposes and the "user' but also to contingent and emergent organizational propertiesof the data.
However, the effectiveness of the solutions proposed for these is in complementary distributionacross the two modalities.
Approaches to respecting communicative purpose are underdeveloped in graphicdesign, while NLG has powerful techniques for imposing adherence tocommunicative purpose (e.g., goal-driven text planning); and, similarly, approaches todata-driven organization (i.e., 'aggregation') are compar-atively weak in NLG, while automatic visualization ow has a range of powerful techniques for identifyingemergent organizational properties of large datasets.
The architecture constructed in KOMET-PAVE buildson a combination of these individually developed techniques, resulting in a significant 'cross-fertilization'of approaches.?
I KOMET ('Knowledge-oriented production of multimodal documents') and PAVE ('Publication and advanced visualizationenvironments') were two departments of the German National Research Center for Information Technology's (GMD) institute forIntegrated Publication and Information Systems (IPSI) in Darmstadt that cooperated closely for the work described in this paper.The authors would therefore like to thank all the members of those departments who contributed, and particularly Lothar Rostek,Melina Alexa, Elke Teich, Wiebke M6hr and Klaas Jan Rondhuis.1I.1We organize the discussion as follows.
We first introduce the visualization and automatic diagram designmethods developed within the PAVE component of our system, drawing explicit attention to the similar-ities between the decisions made during diagram generation and those necessary during NL generation(Section 2).
ThisProvides necessary background to our claim that the methods and algorithms developedfor visualization can also serve as a general solution to the problem of aggregation i tactical generation(Section 3).
We then briefly show the same algorithms at work at the level of text organization, helpingto motivate informational structures necessary for constraining page layout and for allocating presentationmodalities in the complete page generation scenario (Section 4), We conclude the paper by summarizingthemain points of architectural synthesis that we have pursued and outlining some prominent lines of ongoingwork and future development.2 Automatic Diagram Generation using Dependency LatticesThe approach to diagram generation adopted within the KOMET-PAVE experiment has been developed boththeoretically and practically.
The practical side was originally built as part of an 'Editor's Workbench"aimed at facilitating the work of an editor preparing large-scale publications such as encyclopediae (Rostek,Mthr  & Fischer 1994).
A range Of flexible automatic visualisation tools (cf.
Reichenberger, Kamps &Golovchinsky 1995, Htiser et al 1995) were developed in this context.
To illustrate our discussions below,we will adopt one trial application domain in which the Editor's Workbench as been used and for which asignificant knowledge base has been constructedwthat is, the art and art history domain already used as abasis for NLG in Teich & Bateman (1994) and Bateman & Teich (1995).
Typical information maintainedby this knowledge base involves information about artists (particularly biographical information such asbirthdates, dates of working in particular institutions, date s of movements, works of art created, etc.
), detailsof works of art and art movements, as well as pictures and full text representations of several thousandbiographies.Visualization in the context of the Editor's Workbench focused on providing ahigh degree of control over allthe visual aspects of its presentations: including layout of information and diagram design.
The particularaim of visualization was to be able to present overviews of datasets rather than elaborating on specifics, and.this required methods for discovering regularities in the data thatcould then be used to motivate particularpresentation strategies.
The theoretical basis for the methods developed is given in detail in Kamps (1997)and rests on a new application of Formal Concept Analysis (FCA: Wille 1982).
We now show briefly howFCA allows theconstruction of dependency lattices that support flexible diagram design.
We adopt as asimple example the set of 'facts' displayed in the following table.
These facts ?
together show the subjectareas, institutions, and time periods in which the shown ?
artists were active.
2Persongl Gropiusg2 Breuerg3 A. Albersg4 J. Albersg5 Moholy-Nagyg6 HilberseimerProfessionArchitectArchitectDesignerUrban PlannerUrban PlannerArchitectSchoolHarvardHarvardBlack Mountain CollegeBlack Mountain CollegeNew BauhausIllinois Institute of TechnologyWorkperiod1937-19511937-19461933-19491933-19491937-19381938-19672.1 Algorithm for the construction of the concept latticeDependency lattices represent effectively the functional and set-valued functional dependencies that areestablished among the domains of a data relation.
They can be computed from plain relation tables such as2The names, institutions, periods, etc.
used in this paper are selected primarily for illustrative purposes and should not be takenas reliable statements of art history!9Architect Designer Urban!
!IXBreuer XA.
AlbersJ.
AlbersHilberseimerxPlannerXxXFigure 1: Example for a one-valued context and corresponding latticethe one shown above, where the columns represent the domain sets on which the relation is defined and therows represent the relation tuples.
Dependency lattices are a particular kind of concept?lattice asdefined inFormal Concept Analysis.
FCA starts from the notion of a formal context (G, M, 1) representing the datain which G is a set of objects, M is a set of attributes and I establishes a binary relation between the twosets.
I(g, m) is read "object g has property m" i f  g E (7 and mE M~ Such a context is called a one-valuedcontext.
The onevalued context corresponding to the Profession-attribute of our example dataset is shownin the table to the left of Figure 1.The formal Concepts of concern in FCA are defined as consisting of an extension and an intension, where theextension is a subset A of the set of objects G and the intension is a subset B of the set of attributes .M.
Wecall the pair (A, 13) a formal concept if each element of the extension may be assigned each attribute Of theintension.
Thus, the pairs ({Gropius, Breuer}; ?
{Urban Planner, Architect}) and ({A.Albers}, {Designer})represent concepts with respect tO the example one-valued context of Figure 1.
More intuitively, in a formalcontext concepts represent rectangles of maximum size, completely filled with x's after permutation of rowsand columns.
The Set of all concepts may be computed effectively using the algorithm "Next Closure"developed by Ganter & Wille (1996).
The hierarchy relation "subconcept", established between the set ofconcepts, is based on inclusions of the respective extensions and intensions of the concepts.
Concretely, aconcept (A, 13)isa subconcept of (A*, 13") if and only ifA C_A* ?~ 13" C 13.
The main theorem of conceptanalysis hows thatthis ,subconcept" relationship represents a complete lattice structure (see Wille 1982).Given all concepts, we may construct the Concept lattice starting from the top concept (th e one that has nosuperconceptS) ~ and proceed top'down recursively.
In each step we must compute the set of direct subcon-cepts and link them tothe respective superconcept until we reach the greatest lower bound of the lattice itself(the existence of the bounds is always guaranteed if we consider finite input data structures).
One efficientimplementation f this algorithm is explained in greater detail in Kamps (1997).
The corresponding latticefor the one-valued context shown in Figure 1 is shown to the right of the figure.
The labelling of the nodesof the lattice makes full use of the dependencies and redundancies that the lattice captures.
Elements of theextensions ~e shown moving up the lattice, the extension label for each node consists of just those elementswhich are added at each node, while the members of the intensions are shown moving down the lattice,again adding just those elements that are new for each node.
Thus, for example, the node Simply labelledGropius, Breuer corresponds to the full formal concept ({Gropius, Breuer}, {Architect, Urban Planner})since both Gropius and Breuer are added new to the extension at that node, while no new elements are addedto the intension ('Architect" and "Urban Planner' are both inherited from the two nodes above in the lattice,where they are already present).10Person Profession School Workpefiodglg2 X Xglg6 Xg2g6 Xg3g4 X Xg4g5 X~ ' ~  ProfessionSchool J ~ m(gl)=m(g6)"~ m(g4)=m(gS)I ~  m(g2,:m(g6), .
, .?
J. i m(g3l--mlg4) ~ \[ i .PersonFigure 2: Example dependency ontext and corresponding lattice2.2 Howto find functional dependencies in the dataThe original table of facts with Which we started above is not a one-valued context: it is a muhivaluedcontext.
A multivalued context is a generalisation fa one-valued context hat may formally be representedas a quadruple (G, M, W, I) where G, M and I are as before.
Here, however, the set of values W of theattributes i not trivial: to identify the value w E W of attribute m C M for an object 9 E G we adopt henotation m(9 ) = w and read this as "attribute m of object g has value w".
Thus relation tables in general,such as the original table above, may all be considered as multivalued contexts.Given an n-ary relation, functional relationships may generally be established between subsets of then domains.
However, we adopt the following particular construction of the dependency context: forthe set of objects choose the set Of subsets of two elements of the given multi-valued context P2(G),for the set of attributes choose the set of domains M, and for the connectifig incidence relation chooseIN({9, h}, m) :?
?, re(g) = m(h), so that the resulting dependency context is represented by the triple(P2(G), M, IN).
Although this only considers pairwise mappings--that is such functional relationships thathold between two single domains--it simplifies the problem drastically and is a sensible approach for tworeasons:- first, the isolated functional relationships may, as we will see, be arranged in the form of a depen-dency lattice that allows a wholistic view on the dependency structure, and second, it is computatioriallysimple to achieve.The underlying principle is then straightforward: compute a (one-valued) dependency Context from the?
given n-ary relation table and apply the techniques described above for the construction O f the correspondingdependency lattice.
This is illustrated in the table to the left of Figure 2, which shows the dependency ontextcorresponding to our original full table of facts above.
An entry in this table indicates that the identifiedattribute has the same value for both the facts identified in the ?object labels of the leftmost column:forexample, "gl' and 'g2' share the values of their Professions and Schools attributes.
The correspondingdependency lattice, built in the same manner asshown for one-valued contexts, is shown in the lattice onthe right of the figure.The arcs in this lattice represent the functional dependencies between the involved domains whereas theequalities (e.g., m(gl )=re(g2)) represent the redundancies that may be observed in the ?
table: for example,the lower left node labelled Period indicates not only that the third and fourth row entries under Period (g3and g4) are identical but also, following the upward arc that these entries are equal with respect to School;similarly, following the upward arcs (which is possible because functional dependencies are transitive), ~emiddle node (m(gl)=m(g2)) indicates that the first and second row table entries are shared with respect toboth School and Profession.
The lattice as a whole indicates that there are functional relationships fromthe set of persons into the set of professions, the set of periods, and the set of schools.
A further functionalrelationship exists from the set of periods into the set of schools.
-1l~gnerl e I i ~  m.~urban planners.J.Albers, \ [ \ ]  Moholy-NagyNr," B~ku~HarrantDJ~Cl lrrarchitects,, l ;.i.i/~-:::::i~,:..-:;:~,.
:~J Grop ius, l Hilberseimer1930 1940 1950 1960 " 1970(a)BMC| - -  " I, ~ J .Albers | ?t .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
- - JNewBauhaus \ [ \ ]  Moh?Iy 'Nagy Harvard!| \[ J Breuer | !
'._k ',1930 1940 1950 1960\ [ \ ]  architect\ [ \ ]  urbanplanner.I HUberseimer1970(b)?
Figure 3: Example generated diagrams for the example data2.3 How dependency lattices are used for visual|sat|onA dependency lattice, in which the edges represent functions between the domains and the non-existingedges represent set-valuedmappings, may be interpreted as a set of classifications ofthe relational input.
Forgraphics generation it is imPortant that all domains of the relation become graphically encoded.
This meansthe encoding is complete.
To this purpose, Kamps (1997) proposes a graphical encoding algorithm thatstarts encoding the bottom domain and walks up the ?lattice in a bottom-up / left-to-right approach encodingthe upper domains.
The idea of this model, much abbreviated, is that he cardinality of the bottom domainis the largest, whereas th e domains further up in the lattice contain less and less elements.
Thus, the bottomdomain is graphically encoded using so:called graphical elements (rectangle, circle, line, etc.
), whereasthe upper domains are encoded using their graphical attributes (colour, width, radius) as well as set-valuedattributes (attachments ofgraphical elements) to keep graphical complexity moderate.
Since function~ andset-valued functions are binary relations, the encoding of a structured n-tuple i s composed of a set of binaryencodings.
In the algorithm proposed by Kamps (1997), each domain is visited and encoded once which?
implies one .walk through the lattice representing exactly one classification and one visual|sat|on fthe data.Many alternative diagrams may thus be generated for such a data set and the visualization algorithm containsextensive perceptual heuristics for evaluating among these.Figure 3 shows two example diagrams that are produced from the dataset of our example table via thedependency lattice shown to the right of Figure 2.
Informally, from the lattice we can see directly that artists('Person'.)
can be classified on one hand according to work period and, on the other hand, jointly according to?
school and profession.
The 'attribute' person, indicated in the lowest node of the lattice, is first allocated tothe basic graphical element 'rectangle'; the individual identities of the set members are given by a graphicalattachment: a string giving the art|st'shame.
The functional relationship between the set of persons andthe set of time period sis then represented by the further graphical attribute of the length of the rectangle.This is motivated by the equivalence of the properties of temporal intervals in the data and the propertiesof the graphical relationship of spatial 'intervals' on the page.
Two paths are then open: first following thefunctional relatioriship to a set of Schools or to a set of professions.
Diagram (a) in Figure 3 adopts thefirst path and encodes the school relationship by means of the further graphical attribute of the color of therectangle, followed by a nesting rectangle for the relationship to professions; diagram (b) illustrates thesecond path, in which the selection of graphical encodings i reversed.
Both the selection of color and ofnesting rectangles are again motivated by the correspondence between the formal properties of the graphicalrelations and those of the dependencies observed in the data.12IIII2.4 The partial equivalence of diagram design and text designOur brief description of the process of producing alternative diagrams can now be considered from the per-spective of producing alternative t xts.
The selection of particular graphical elements, and the commitmentsthat follow for expressing particular functional dependencies, are closely analogous to decisions that needto be made when generating a text from the given dataset.
Indeed, textual representations of the example di-agrams may be motivated from the dependency lattice structure by proceeding over all functional groupingsand taking into account the position of the equalities in the lattice justas in the diagram generation.For instance, starting from equality rn(gl) = rn(g2) in the lattice, it is sensible to relate the fact that thisdependency holds both for the schools and for the professions so that we may connect hem in a singlesentence: i.e~, 'g l '  (concerning Gropius) and 'g2' (concerning Breuer) can be compactly expressed bycollapsing their (identical) school and profession attributes.
A similar phenomenon holds for groupingre(g3) = re(g4), which is shared by the periods and the schools: here, 'g3' (concerning A. Albers) and 'g4'(concerning J. Albers) may be succinctly expressed by collapsing their identical period and Sch0ol attributes.This would motivate the following approximate xtual re-rendering ofdiagram (b):Anni Albers (who was a designer) and J. Albers (who was an urban planner) both taught at the BMCfrom !933 until 1949.
Moholy-Nagy (who was also an urban planner) taught from 1937 until 1938 atthe New Bauhaus.
Gropius and Breuer (both architects) were, at partially overlapping times (1937-1951and 1937-1946 respectively), at Harvard.
Hilberseimer (who was an architect too) taught at the !IT from1938 until 1967.In contrast, he other three groupings (indicated by the equalities on the profession node in the lattice) are"simple"--i.e., not shared by more than one domain--s0 that selecting these does not result in a furthercompaction of a text being possible.3 Towards a general t reatment  of aggregat ion for NLGThe extraction of partial commonalities held constant over subsets of the data to be presented--be theyexpressed via an allocation of common graphical elements Or by textual groupings--is naturally similar toone aspect of the problem of aggregation in NLG.
In fact, the functional redundancies that are capturedby the lattice 'construction technique are also precisely those redundances that indicate opportunities forstructurally-induced aggregation: Selecting aparticular graphical element or attribute to realize some aspectof  the data is an aggregation step.
In this section, we show this in terms more familiar to NLG by brieflysketching how the approach andles one example ?
of aggregation discussed in the literature: the productionof concise telephone network planning reports illustrated by McKeown, Robin & Kukich (1995).One example from McKeown et al (1995) concerns the data shown in Figure ?
4, again re-represented intabular form.
The attributes taken here are the semantic roles that might be used to provide input concerning3 individual 'facts' (gl, g2, g3) to a tactical generation component.
We consider the problem of providingpossible 'aggregations' of these facts?
in order to improve the resulting sentences that would be generated.This is managed by means of the corresponding dependency lattice, which we also show in Figure 4, abbre-viated and annotated somewhat here for ease of discussion.
Analogously to the case for diagram generation.where several diagrams may be generated from a single lattice, a dependency lattice represents not a par-ticular aggregation, but rather all possible aggregations in a single compact form.
Input expressions fortactical generation can be constructed by working upwards fr0rn the bottom of  the lattice.
Each node withassociated functional dependencies represents a point of possible aggregation.In the diagram, therefore, the lowest nodes in the lattice represent three starting points; from left tO right: (i)aggregations of type, source and destination with respect to the major dimensions of actor, process, etc.,and (ii) and (iii) source an.d destination with respect to a type.
The righthand Type node then represents13Ii1 Actor Process Actee Type Object Source Destination Period Yeargl it requested placement 48 fiber cable CO 1103 Q2 1995g2 it requested placement 24 fiber Cable 1201 1301 Q2 1995g3 it requested placement 24 fiber cable 1401 " 1501 Q2 .1995 ' \.
.
.
.
McKeown et al (1995, p718; ex.4)Actor.
Process, Actee, Object, Period, Yearm(..ql) =re(g2) =re(g3)?
o Type?
~ ~ ~ O m(g2)=m(g3)Type, Source, DesSnation / "(gl: 48 fiber, CO, 1103)Source, Destination Source, Destination.
(g2) (g3)Figure 4i Example data and corresponding(annotated) d pendency latticeaggregation withrespect to the major dimensions analogously to the ?left hand node.
Respecting-thesedependencies results in the following maximally compact rendering of this information:It requested placement in the second quarter of 1995 of a 48-fiber cable from CO to 1103 and 24-fiberfrom 1201 to 1301 and from 1401 to 1501.?
Thus, the dependency lattice directly determines the logical dependency structure of the clause (cf.
Halliday1994).?
As McKeown et al (1995) note, however, it is Sometimes ill-advised to carry out amaximal aggregation.We can also model this restraint using the dependency lattice by bringing more generic (higher) nodes downand 'distributing' them over lower lattice nodes.
The motivation for such lowering is typically to be found inregisterial constraints and the method of textual development being used in the text at hand.
If the 'objects'o f  the domain (e.g., in this Case, the cable) are to remain salient, then these can be re-distributed from theuppermost n0d~ to enforce redundant expression; for example:It requested placement .
.
.of  a 48-fiber cable from CO to 1103 and 24-fiber cables from 1201 to 1301and from 1401 to 1501The other examples presented by McKeown et al (1995), as Well as ?other examples of similar phenomenapresented in the literature (e.g, Dalianis & Hovy 1996) are handled similarly.
?Since the dependency lattice does not itself determine which of the possible aggregations i  taken up, butsimply represents what is possible, this approach turns aggregation i to a process of communicative choicealong exactly the same lines as all other choices in the grammar, semantics, text organization, etc.
One of themajor benefits of the dependencY ?
lattice is then to represent this space of possibilities compactly, allowinga more systematic ,weighing of alternatives.
The possibilities for aggregation captured by a dependency?
lattice then largely remove the need for ad hoc specific rules of grouping.
Nevertheless, the extraction ofthose ?dimensions of organization or aggregation that are particularly relevant for a specific text or diagramcan only-be determined from the communicative purpose of the text or diagram that is being constructed:i.e., which "question' is the text/diagram answering.
Therefore, the kinds of grouping and organization thatwe have illustrated in the paper so far cannot replace communicative-goal driven NLG; they need rather tobe properly integrated in a goal-driven architecture.
This we illustrate in the section following.14L._illill!
|4 Page generationWithin the KOMET-PAVE page generation experiment, we attempted tomake use of the close analogies wehave illustrated above between data-driven aggregation for diagram design and for text production.
More-over, the existence o f  a general aggregation tool allows us to consider aggregation as a general propertyof all levels of linguistic representation constructed during the generation process.
The lattice constructionalgorithm is robust and fast and we are now ?aiming to construct a dependency lattice after the production ofeach level of structure during generation.
This should apply to grammar and rhetorical structure as well as?
to the more semantic or domain oriented aggregations discussed above.
In our final example in this paper,therefore, we briefly sketch the utility of performing data-driven aggregation on the results of a text planningprocess aimed at producing rhetorically motivated page specifications.The purpose of the KOMET-PAVE experiment was to provide a system where the response of the systemto a user's request for information is a single 'page' of information combining enerated text, generated?
graphics, and retrieved visual information (pictures, etc.)
within a communicative-functionally motivated?
layout.
The multimedia page is therefore seen as the basic unit of information presentation, while theseunits are themselves seen as moves in a multimodal dialogue (cf.
Stein & Thiel 1993); the analogy to (andextension of) web-based information services hould be obvious~ Given our use of the art and art historydomain, the particular goal of the pages generated by the system was to present useful 'starting-off points',or overviews, of the information maintained in the knowledge base.
Our example in this section concernspossible answers of the system to a question concerning the spread of the Bauhaus movement.
The input tothe page synthesis process was taken as a set of artists selected uring the previous 'conversational move'and some generic features determined for such pages)When planning the information to be expressed by a page as a whole, it is possible to construct an RST-likestructure as is familiar from NLG for individual texts (e.g., Hovy, Lavid, Maier, Mittal & Paris 1992; Moore& Paris 1993)--indeed, prior to further information chunking, the structure could well be a single text.
Anexample of such a structure is shown on the left of Figure 54 We assume that generic onstraints on thistype of text predispose the planning system to pursue presentations of evidence for assertions made and, atalmost any excuse, short biographies of any artists mentioned as additional background.The information present in this RST-structure can be made amenable to formal concept analysis in a numberof ways; it is simply necessary to make available the relations and their arguments so that the data is struc-tured as in our example s above.
Then, constructing a dependency lattice on the basis of this informationyields a number of possible aggregations: most useful here are two sets of functional dependencies, onegrouping the acts of teaching ?
around the predicate of teaching and one grouping the biographies.
Thesepoints of aggregation i effect 're-structure' the corresponding RST, as shown to the right of Figure 5.
Thisrestructuring factors out commonalities sothat information from lower leaves of the tree has been placed athigher branches.
This results in an altemative, more richly structured presentation plan, the leaves of whichare then analyzed in order to estimate how appropriate particular realizations and media-allocations wouldbe.
"We have already ?seen some results of attempting further ealization of the set of teaching facts since ouroriginal starting table in Section 2 was just such a set.
Diagrams uch as those in ~Eigure 3 can readily beproduced, whereas the corresponding texts (see above) are not particularly smooth.
We account for thisby considering many co-varying dimensions of functional dependencies,, as in the combined nucleus of3The Bauhaus exanaple is taken from Kamps, H~ser, Mrhr & Schmidt's (1996) discussion of interface design and the kinds ofinteraction that a multimodal information system should support.
Several examples of pages actually generated by the system areavailable on the web at URE: ' h t tp  : / /www.
darmstadt  .gmd.
de /pub l  ish/komet/kometpave-pics- 96. html'.The presentation environment is implemented in Smalltalk, the visualization and layout engines in C; the text generation componentin Common Lisp; page generation is in real-time.4Note that currently we do not generate the initial nucleus, the overview para~aph.15~ o r a t i o n :  e.g.
"One means bywhich  theBauhaus spreadwas  byBauhaus membersmigrat ing  to the USand teach ingBauhaus methods.
"v idence' x_ k ""Pec de ~ \who / / \\[77~u2.h.
t ;2-"  b !?
(X) / /?
'~"Y taught at _ bio~Y)f rom ...to..."i Bauhaus~ orat ion :e -g .
"One means bywhich theBauhaus backgroundspread  was  byBauhausmigrat ing  to n tthe US andteach ing  ?
.
- : ?
, b io  bto blomethods.'"
g"'People "'X "Y Iwho taught taughtd id  this at at !i nc lude  .
.
.
f rom .
.
f rom IX,  Y ,  ...'" ... to..." ... to..." I.Figure 5: RST-like structuring Of the Contents of a potential page: before and after aggregation ?the first embedded elaboration, to more strongly motivate a diagram.
5 This then serves as the input forthe visualization process described above resulting in, for example, a timeline diagram.
In contrast, thedependency lattices constructed for the individual biographies exhibit far fewer dimensions of reoccuringcommonalities (e.g., simple progression i  time with accompanying changes in location or state revolvingaround a single individual) and so are considered good candidates for textual expression.
And, indeed, textsappropriate for these chunks of information are in fact precisely the simple biographies produced by thegenre-driven text generation component described previously in Bateman & Teich (1995).Finally, passing the revised RST-structure on to layout planning (cf.
Reichenberger, Rondhuis, Kleinz &Bateman 1996), complete with its leaves filled in with text-and iagrams as motivated here, results in asynthesized multimedia page with communicatively appropriate layout as required.5 Conclusion:  direct ions and future work  :In this paper, we have very briefly presented an extended architecture for generation that attempts to combinegeneric methods for data-driven organization with top-down organizing principles.
There are several furtherlines of development that are now required to establish the full utility of the architecture.
At present, we havenot evaluated the kinds of variation that occur when aggregation is sought at all levels of representation as wepropose: in particular, generic text stages and grammatical structures have not been included.
In addition,the relationship between the top-down communicative goals and the particular selections of organizingdimensions to be exploited during aggregation eeds further work.
Nevertheless, it seems clear that, inits combination of modes and techniques of processing from the NL-generation and visualisation traditions,an improved level of overall functionality has been achieved.SThis is, of course, only a heuristic at this time and could easily require alteration--for example, with different communicativepurposes or different output modalities (e.g., spoken language).16Work in progress or preparation is now providing more efficient and robust implementations of the generaldependency analyses and their encoding in graphical form, furthering the relationship between rhetoricalstructure and motivated layout, and seeking more empirically based statements of generic document layout,visualization and text type constraints that can provide more detailed constraints for the page generationprocess.ReferencesBateman, J.
A.
& Teich, E. (1995), 'Selective information presentation i an integrated publication system: an ap-plication of genre-driven text generation', Information Processing and Management: an international journal31(5), 753-768.Dalianis, H. & Hovy, E. (1996), Aggregation i natural anguage generation, in G. Adorni & M. Zock, eds, 'Trends innatural language generation: an artificial intelligence perspective', Springer-Verlag, pp.
88-105.Ganter, B.
& Wille, R. (1996), Formale Begriffsanalyse,-Mathematische Grundlagen, Springer-Verlag.Halliday, M. A. K. (1994), An Introduction to Functional Grammar, Edward Arnold, London.
2nd.
edition.Hovy, E. H., Lavid, J.,Maier, E., Mittal, V. &Paris, C. (1992), Employing knowledge resources :in a new text plannerarchitecture, inR.
Dale, E. Hovy, D. Rrsner & O.
Stock, eds, 'Aspects of automated natural language generation',Springer-Verlag, pp.
57 - 72.H~iser, C., Reichenberger, K. Rostek, L. & Streitz, N. (1995), 'Knowledge-based editing and visualization for hyper-media encyclopedias', Communications of the ACM 38(4), 49-51.Kamps, T. (1997), A constructive theory for diagram design and its algorithmic implementation, PhD thesis, DarmstadtUniversity of Technology, Darmstadt, Germany.Kamps, T., HiJser, C., Mrhr, W. & Schmidt, I.
(1996), Knowledge-based information access for hypermedia referenceworks: exploring the spread of the Bauhaus movement, in M. Agosti & A. E Smeaton, eds, 'Information retrievaland hypertext', Kluwer Academic Publishers, Boston/London/Dordrecht, pp.
225-255.McKeown, K., Robin, J.
& Kukich, K. (1995), 'Generating concise natural anguage summaries', Infolwzation Pro-cessing and Management 3!
(5), 703-733.Moore, J. D. & Paris, C. L. (1993), 'Planning texts for advisory dialogs: capturing intentional and rhetorical informa-tion', Computatio.nal Linguistics 19(4), 651 - 694.Reichenberger, .K., Kamps, T. & Golovchinsky, G. (1995), Towards a generative theory of diagram design, in 'Pro-ceedings o~' 1995 IEEE Symposium on Information Visualization', IEEE Computer Society Press, Los Alamitos,USA, pp.
217-223.Reichenberger, K., Rondhuis, K., Kleinz, J.
& Bateman, J.
A.
(1996), 'Effective presentation f information throughpage layout: a linguistically-based approach'.
In: 'Effective Abstractions inMultimedia, Layout and Interaction',workshop held in conjunction with ACM Multimedia '95, November 1995, San Francisco, California.Rostek, L., Mrhr, W. & Fischer, D. H. (1994), Weaving a web: The structure and creation of an object network- representing an electronic reference network, in C. HiJser and W. M6hr and V. Quint, ~.,  'Proceedings ofElectronic Publishing (EP) '94', Wiley, Chichester, pp.
495 - 506.?
Stein, A.
& Thiel, U.
(1993), A conversational model of multimodal interaction in information systems, in 'Proceed=ings of the 11 th National Conference on Artificial Intelligence (AAAI '93), Washington DC, USA', AAA.I Press/MIT Press, pp.
283-288.Teich, E. & Bateman, J.
A.
(1994), Towards an application of text generation i  an integrated publication system, in'Proceedings of the Seventh International Workshop on Natural Language Generation, Kennebunkport, ?Maine,USA, June 21-24, 1994', pp.
153-162.Wille, R. (1982), Restructuring lattice theory: an approach based on hierarchies of concept, in I.
Rival, ed., 'OrderedSets', Reidel, Dordecht/Boston, pp.
445-470.17
