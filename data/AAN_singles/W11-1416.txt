Proceedings of the Sixth Workshop on Innovative Use of NLP for Building Educational Applications, pages 130?135,Portland, Oregon, 24 June 2011. c?2011 Association for Computational LinguisticsStory Assembly in the R2aft Dyslexia Fluency TutorArthur WardDepartment of BiomedicalInformaticsUniversity of PittsburghPittsburgh, Pa., 15232akw13@pitt.eduRebecca CrowleyDepartment of BiomedicalInformaticsUniversity of PittsburghPittsburgh, Pa., 15232CrowleyRS@upmc.eduAbstractTo overcome their substantial barriers to flu-ent reading, students with dyslexia need to beenticed to read more, and to read texts withcarefully controlled lexical content.
We de-scribe and show examples from a prototype ofthe new R2aft story assembly engine, whichgenerates an interactive text that has A) vari-able plot and B) lexical content which is indi-vidualized by decoding pattern.1 IntroductionDyslexia is a specific disability which prevents stu-dents from reading at a level commensurate withtheir general intelligence.
It is also the most com-mon learning disability, affecting as many as 15(NICHD, 2011) or 20% of the population (Shaywitz,2003).We have recently started a new Intelligent Tutor-ing System project to address dyslexia.
The R2afttutor (Repeated Reading Adaptive Fluency Tutor) isintended to improve reading fluency among studentswith dyslexia.
An important part of the R2aft tutorwill be its story assembly engine TASA (Text AndStory Assembler), which will generate the text to beread.
In this paper, we will discuss how the specialcharacteristics of dyslexia influenced the design ofTASA, and describe the prototype system.Research has shown that phonological processingis the core deficit in dyslexia, but one which can beaddressed by intensive training in phonemic aware-ness and phonics (e.g.
(Torgesen et al, 2001)).
Be-cause dyslexic readers have difficulty distinguish-ing individual phonemes within a word, they alsohave great difficulty learning the relationships be-tween written letter patterns and the sounds theymake.
These decoding patterns, which are often ab-sorbed intuitively by normal readers, must be ex-plicitly taught to dyslexic readers.
For example, thewords ?tramped?
and ?padded?
both end in ?ed,?but are pronounced differently.
In ?tramped?
?ed?makes a ?t?
sound (the ?ed t?
pattern), while in?padded?
it makes an ?ed?
sound (the ?ed ed?
pat-tern).
1 A dyslexic reader must receive explicittraining on hundreds of decoding patterns such asthese.
In addition, to improve fluency a dyslexicreader must practice these patterns extensively, inlarge amounts of connected text.Unfortunately, this practice is difficult to obtain.
?Decodable texts?
which use a constrained vocab-ulary are available (e.g.
(Bloomfield et al, 1998)),however, professional dyslexia tutors report thatthese booklets often do not meet the individual vo-cabulary needs of their students.
In addition, stu-dents with dyslexia typically hate to read (Shaywitz,2003), and do little to acquire the necessary practicein connected text.This analysis suggests that a successful fluencytutor should address two sets of issues.
It shouldaddress vocabulary issues to ensure that the studentgets practice on appropriate decoding patterns.
Italso should address motivational issues, to enticestudents to read more text.
As described below,TASA addresses the vocabulary issue by using tem-plates whose slots allow for lexical individualiza-tion.
It aims to improve motivation by generatinga variable plot line, and allowing students to make1These examples are taken from (Bloomfield et al, 1998).130plot choices that affect the unfolding story.
Thereare several reasons to expect that allowing dyslexicstudents to interactively shape plot events will im-prove their motivation.
For example the popular?Choose Your Own Adventure?
books (e.g.
(Mont-gomery, 1982)), allow their readers to choose pathsin a branching narrative.
Also, ?Interactive Fic-tion?
type text adventures (Montfort, 2003) whichallow the reader to control the protagonist, enjoycontinuing popularity.2 Furthermore, a study withthe REAP ESL vocabulary tutor suggests that pre-senting more interesting stories can improve learn-ing (Heilman et al, 2010).Authoring a branching narrative entirely by hand,however, is an unattractive option.
Even a smallstory could require authoring hundreds of plotbranches.
Reducing this burden would allow author-ing the large volume of text needed by our readers.The dyslexia tutoring domain therefore suggeststhree design goals for our story generation engine.1.
Lexical Individualization: It should allow us tofine tune lexical content to feature the decoding pat-terns required by each student.2.
Interactivity: It should allow student plot choicesto influence the story being read.3.
Tractable Authoring: It should help reduce theburden of authoring multiple story branches.2 Story RepresentationAs described above, the dyslexia domain requiresdetailed control over lexical content in our reading,and our approach to motivational issues involves in-teractive text.
Both of these considerations argueagainst the use of pre-existing texts as are used, forexample, in the Listen (Mostow, 2011) or REAP(Brown and Eskenazi, 2004) systems.
Instead, weinvestigate generating our own stories.The literature on story analysis and generation canbe usefully divided into approaches which modelthe structure of the story itself, versus approacheswhich model some of the processes involved in storycreation.
The latter often simulate the author (e.g.
(Dehn, 1981), the reader (Bailey, 1999), or the storyworld (Meehan, 1976).
They also typically requirelarge amounts of real-world knowledge to generate2However, see (Glassner, 2004, pg 239) for a discussion ofthe difficulties of branching narrative.even simple stories.
Given our need to produce alarge amount of practice text, this approach seemsuntenable.Instead, we take the first mentioned approach ofmodeling story structure.
To do this, we will re-quire a formalism which will allow us to repre-sent, manipulate and re-combine pre-written stories.Early work in story grammars used elegant hierar-chical tree structures to analyze plot structure.
(see(Graesser et al, 1991) for an overview of this work).In general, these structures seem underspecified forgenerating stories.We turn instead to the causal network theory ofTrabasso and van den Broek (1985).
This formal-ism does not enforce strict hierarchies, but repre-sents text as a sequence of nodes.
The nodes rep-resent categories such as ?Setting,?
?Goal,?
?Event,??Reaction?
or ?Outcome,?
and are connected in se-quence by temporal and causal links.This formalism provides guidelines about legalnode sequences.
It also enforces several constraintson the type of text we can represent.
For example,the text base must be generated in strict temporal andcausal order, we cannot represent flashbacks or othertypes of transformed narrative.
Also, each node gen-erates text, we cannot represent events which do notappear in the textbase.3 The StoryOur prototype story is a rehash of several standardthemes common in young reader fiction.
A youngprotagonist moves to a new house with a parent (thegenre seems to require that one parent be missing).This protagonist is shown to be weak and fearfulin various ways.
The protagonist discovers somesource of inspiration which leads him/her to attemptsome endeavor.
After many setbacks the protago-nist becomes accomplished at this endeavor, then atthe climax uses his/her new strength/skill to save theparent from certain doom.Our prototype story was developed to instantiatethese themes each in several ways.
For example, theinitial source of inspiration comes in two options.The first source will be found in a springhouse at therear of the protagonist?s new home.
The alternatesource is found in a locked room of the main house.There are also several options for the resulting en-131deavor and several options for the final climax.
Pur-suant to our goal of presenting an interactive text,most of these plot variations will be determined atruntime by reader choice.For example, toward the beginning of the story,the protagonist is found in his/her new bedroom,with a goal to explore the unfamiliar house.
Herethe reader chooses what to investigate, with the nextplot fork being determined by whether the ?spring-house?
or the ?locked door?
is chosen.This story is written in text form, then decon-structed into a causal network in the following way.An analyst examines the initial story text, and di-vides it into chunks.
Following the Trabasso frame-work described in Section 2, each chunk is requiredto be temporally and causally subsequent to the pre-vious chunk, and to depict elements such as a ?set-ting,?
?event,?
?goal,?
?attempt?
?reaction?
or ?out-come.?
The story chunk described above, for ex-ample, is labeled as a goal node.
The subsequentchunk in which the protagonist begins to explore, islabeled as an ?attempt.?
After this analysis, the re-sulting chunks are instantiated as production systemrules, as described below.4 The TASA PrototypeOur prototype TASA system is instantiated as a set offacts and rules in the Clips expert system shell (Gi-arratano and Riley, 1994).
Expert systems typicallyconsist of a set of if-then rules, plus a set of facts as-serted in memory.
Rules whose if portions are satis-fied by facts are activated and placed on an agenda.A rule on the agenda is then selected and fired, ac-cording to some salience scheme.
Rules typicallyassert new, or modify old facts in memory.
Thesefacts then cause more rules to activate and fire, andthe cycle continues until the agenda is empty.
In oursystem, we write rules which append text to the ac-cumulating story when the story world is in a partic-ular state.The TASA system includes three types of facts:user-model, story-world, and lexicon facts.User-model facts include details about the stu-dent?s age and gender, as well as about targeted de-coding patterns for that individual student.Figure 1 shows an abbreviation of a student fact.This fact records information about the current stu-(student(decodePat ed t)(age 9)(gender m))Figure 1: Abbreviated student fact, requesting ?ed t?
pat-terndent user such as age and gender.
It also records theset of decoding patterns that should be selected inthe text.
The ?ed t?
pattern is shown.Story-world facts include the text so far, as wellas the relevant story state.
The story state is muchless detailed than is required for the story gener-ation systems described in Section 2, and simplyincludes information about the location, goals andmood of characters, and the locations and statusof certain objects, as seems necessary to preventrules from appending text in inappropriate places.
Itprevents, for example, text about unlocking a doorfrom being appended when the door is open.
Factsbelonging to the same world state are co-indexed(with the ?worldHist?
variable shown in Figure 1),so that when a rule modifies the world state, the en-tire set of world facts can be re-asserted into memorywith an updated index.
This allows several differentplot branches to be developed in memory simulta-neously, without context-breaching intrusions fromeach other.
(character(charID clif 1)(worldHist 0)(role protag)(firstName Clif)(gender m)(goal explore springHouse)(location bedroom)(subjPronoun he)(objPronoun him)(posPronoun his)(age 9))Figure 2: Abbreviated story-world fact for protagonistFigure 2 abbreviates a ?protagonist?
story-worldfact.
Among other things, this fact contains the pro-tagonist?s current location and goal, as well as ap-propriate forms for pronominal reference.
Note alsothat the protagonist?s age and gender have been setto match those of the current student user.The Lexicon facts are a large set of words known132to the system.
Each word is associated with both asynonym and a decoding pattern.
This allows thesystem to locate all appropriate substitutions for atarget word which also exhibit a targeted decodingpattern.
(decodeSet(decodePat ed ed)(word padded)(syn walked))(decodeSet(decodePat ed t)(word tramped)(syn walked))Figure 3: Example Lexicon FactsFigure 3 shows several example lexicon facts.They allow the system, for example, to locate wordswhich can substitute for ?walked?
and which dis-play the ?ed ed?
decoding pattern.
Note that or-ganizing our lexicon by substitutable synonyms al-lows the prototype to dispense with representingthings like tense and number.
Other senses of?walked,?
if needed, would be listed with an index,ie.
?walked 2.?In the final system, we expect to implement the70 to 80 decoding patterns commonly featured inOrton-Gillingham (Orton-Gillingham, 2011) basedinstructional materials.
Based on discussions withprofessional dyslexia tutors, we hope to provide atleast five examples of each pattern, requiring a lex-icon of above 400 words.
In addition, we hope toshow each example word in several sentence con-texts, which brings the number of expected sentencetemplates well into the thousands.As mentioned above, each node from the storyanalysis is instantiated as one or more rules in thisexpert system.
If a rule matches a story-world stateand fires, it appends text to the story so far.
Each rulealso changes the story-world in some feature whichis modelled by the system and matched in the rule?sif part.
For example a rule should leave the protago-nist in a different place or in a different mood than inthe previous chunk.
This is a practical requirementto prevent the same rule from repeatedly firing whenthe story-world facts are re-asserted.The then portions of these rules contain templateswhich are used to generate text.
Each template in-cludes slots which are to be filled by appropriatewords from the lexicon.
Because one template typ-ically does not exhaust all the ways to express therule?s intended message, the analyst typically writesseveral forms of the rule, which increases the rangeof potential word use.Given this structure of rules and facts, the produc-tion rule paradigm is appealing for its ability to meetall three of our design goals: plot variety, lexical in-dividualization, and tractable authoring.
By mod-ularizing chunks of text and associating them withappropriate story-world conditions (in their if parts),we can make a system able to generate plot forks bymatching two potential child nodes to the previousstory node.
We can achieve lexical individualizationby writing rules which match not only story worldfacts, but also student model facts about targeted de-coding patterns.
Authoring burden is reduced by theability of existing rules to add text in new situations.We give examples of each of these features below.As an example of how this works in our prototypesystem, consider the plot node described above.
Theprotagonist is in the bedroom.
If the reader choosesto investigate the springhouse, a rule like the follow-ing is activated.
3(defrule walkAcrossYard 1(Code which binds state variables omit-ted here)?prot?
(character (charID ?proID)(worldHist ?rh)(location ?proLoc&bedroom)(goal explore springHouse)(firstName ?proFn))(student (decodePat ?dp))(decodeSet (decodePat ?dp)(synwalked)(word ?wlkd))?
(Code which duplicates state variables omittedhere)(text (str-cat ?txt ?proFn ?
?
?wlkd ?across the back yard to the springhouse.
?
)))Figure 4: Rule describing walk to springhouseFigure 4 abbreviates a rule which fires if A) theprotagonist is in the bedroom with goal to explorethe springhouse, and B) the current student needsa decoding pattern ?dp which is available in a syn-onym of ?walked.?
If these conditions are met, then3For clarity, example rules are extensively pruned from theClips rule syntax.133(below the?)
the rule fills a sentence template withthe name of the protagonist and the appropriate syn-onym of walked.For example, if the protagonist?s name is set to?Clif,?
(as in Figure 2) and the decoding rule ?ed t?is targeted (as in Figure 1), this rule will produce asentence for each matching synonym of ?walked,?
(one of which is shown in Figure 3) including:Clif tramped across the back yard to thespringhouse.If the targeted pattern had instead been ?ed ed,?this rule would produce sentences like ?Clif paddedacross the back yard to the springhouse.
?When the rule fires, the story world is changedto place Clif at the springhouse door, which causesadditional rules to be activated.
Still assuming the?ed ed?
decoding rule is active, one subsequent ruleappends a sentence as follows:Clif hunted across the back yard to thespringhouse.
He pounded on the door, and lis-tened for an answer.Alternatively, if the source of inspiration in thestory is set to be in the locked room, TASA producesa different variety of sentences including:Clif padded across the room toward thelocked door.
He pounded on the door, and lis-tened for an answer.Note from Figure 3 that ?padded?
is in the lexi-con as another synonym for ?walked?
that followsthe ?ed ed?
decoding pattern.
Also note that in thisexample the second sentence was produced by thesame rule that provided the second sentence in theprevious example, which had been written for a dif-ferent branch of the plot.
Together, these examplesshow how TASA can provide both plot variation andlexical individualization.
They also demonstrate thefeature of text reuse, which we expect will becomemore prevalent as the rule base grows larger.5 Future WorkIn our ongoing work we are re-implementing theprototype system in the Drools expert system shell(Bali, 2009).
Drools provides for the inclusion ofJava code in instantiated story-world facts, whichwill allow us to offload the substantial portion of ourprototype rules devoted to updating and maintain-ing the story state.
In addition we are greatly ex-panding our rule-base as we instantiate more of theprototype story.
In the course of this work we willalso evaluate moving to a more expressive story for-malism, such as Graesser?s Conceptual Graph Struc-tures (Graesser et al, 1991) which can represent ad-ditional relationships between nodes.In addition, we will evaluate improved ways to se-lect the best text from the many options output by thesystem.
Rather than simply comparing the numberof targeted decoding patterns (as we do now) we willexperiment with other evaluation metrics such as co-hesion (Graesser et al, 2004), or methods whichhave been useful in essay evaluation (e.g.
: (Higginset al, 2004)).After sufficient story development, we intend toevaluate the effect of interactive text on students?motivation to read.
This evaluation will collectmotivational survey results and ?voluntary?
readingtimes, and compare them between students using in-teractive and non-interactive versions of the system.AcknowledgmentsThis work was supported by the National Library ofMedicine Training Grant 5 T15 LM007059.
We alsothank Carol Utay for several productive conversa-tions about dyslexia tutoring.ReferencesPaul Bailey.
1999.
Searching for Storiness: Story-Generation from a Reader?s Perspective.
Proceedingsof the AAAI Fall 99 Symposium on Narrative Intelli-gence.Michal Bali.
2009.
Drools JBoss Rules 5.0 Developer?sGuide.
Packt Publishing Ltd., Birmingham, B27 6PA,UK.Leonard Bloomfield, Clarence Barnhart, Robert Barn-hart, and Cynthia Barnhart.
1998.
Let?s Read 7Revised Edition.
Educators Publishing Service, Inc.,Cambridge, MA, USA.Jonathan Brown and Maxine Eskenazi.
2004.
Re-trieval of authentic documents for reader-specific lexi-cal practice.
In In Proceedings of InSTIL/ICALL Sym-posium.Natalie Dehn.
1981.
Story generation after tale-spin.
InIn IJCAI-81, pages 16?18.134Joseph Giarratano and Gary Riley.
1994.
Expert Sys-tems: Principles and Programming.
PWS PublishingCo., Boston, MA, USA.Andrew Glassner.
2004.
Interactive Storytelling: Tech-niques for 21st Century Fiction.
A.K.
Peters, Nantick,MA.Arthur Graesser, Jonathan Golding, and Debra Long.1991.
Narrative representation and comprehension.
InRebecca Barr, Michael Kamil, Peter Mosenthal, andP.
David Pearson, editors, Handbook of Reading Re-search, vol.
2, pages 171 ?205.
Longman PublishingGroup, White Plains, NY.Arthur Graesser, Danielle McNamara, Max Louwerse,and Zhiqiang Cai.
2004.
Coh-metrix: Analysis of texton cohesion and language.
Behavior Research Meth-ods, Instruments, and Computers, 36:193?202.Michael Heilman, Kevyn Collins-Thompson, JamieCallan, Maxine Eskenazi, Alan Juffs, and Lois Wil-son.
2010.
Personalization of reading passages im-proves vocabulary acquisition.
International Journalof Artificial Intelligence in Education, 20:73?98, Jan-uary.D.
Higgins, J. Burstein, D. Marcu, and C. Gentile.2004.
Evaluating multiple aspects of coherence in stu-dent essays.
Proceedings of the Annual Meeting ofHLT/NAACL, pages 185 ?
192.James Meehan.
1976.
The Metanovel: Writing Storiesby Computer.
Doctor of philosophy, Yale University,New Haven, Conn.Nick Montfort.
2003.
Twisty Little Passages: an ap-proach to interactive fiction.
MIT Press, Cambridge,Massachusetts.R.
A. Montgomery.
1982.
The Abominable Snowman.Chooseco, LLC., Waitsfield, Vermont.Jack Mostow.
2011.
Project listen: A reading tutor thatlistens.
http://www.cs.cmu.edu/ listen/.NICHD.
2011.
What are learning disabilities?http://www.nichd.nih.gov/health/topics/learning disabilities.cfm.Orton-Gillingham.
2011.
Institute for multi-sensory ed-ucation.
http://www.orton-gillingham.com/.Sally E. Shaywitz.
2003.
Overcoming Dyslexia: anew and complete science-based program for readingproblems at any level.
Vintage Books, New York.Joseph Torgesen, Ann Alexander, Richard Wagner, CarolRashotte, Kytja Voeller, and Tim Conway.
2001.
In-tensive remedial instruction for children with severereading disabilities: immediate and long-term out-comes from two instructional approaches.
Journal ofLearning Disabilities, 34:33?58,78.Tom Trabasso and Paul van den Broek.
1985.
Causalthinking and the representation of narrative events.Journal of Memory and Language, 24:612 ?
630.135
