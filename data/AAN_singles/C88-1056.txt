ILK',AI',LY ~V~NS\ ]  <{%{i~kq AND DEPENDENC~I PIHRSINGJ~ppinen, }hrri, Imssila~ \]~ro~ mld Lehtola,Aarr~KI~Z,IKONE-projectSITRA Foundation.P.Oo Plox 329~ 00121 Helsinki~ VINIAND'BJ-::~ paper desc\[J.~s the notion of \]pcall.y gove~:nedt~:ees as a n<x\]el of sttuCtu17ally \[estrfcted dependencyst~:uctures of sentenc.eSo 2~n abstract umchine and itssupporting softwa~:e to*.
the building of local lygoqerned t~:ees is intr_(~iuced.
The rest of  the paperdis~:usse,q \[.ew uuaM\]iguous~ ~<-'\].\]-for,~d local\]y governedi:~:ees can be parsed i l l  l.i\[~ea~: tia~ ~{~en cxertain~'tructural ~x~nstr~int's a~e in fuzce o'i~le phrase st~.ucture 1.ttle is a widely used primitivem)tation in literature when synt~Ictic structures of~euteuces d~?e discussed in a rJ.gorous ~f~nner o An~ajority o;5 syntactic ~;:~rsJ.ng pr~jratt~ also utilizephrase st~.0cture rules in one vary or  another?Phrase: structure rules reflect the i~Kl-diate{79nstihuent analysis of sentences?
Fach :1lle names a~x)nstituent 6rod its specified ordered e\].~-\[~nts on thelower levc\].o ~ts primitive ,~\]ations are {~erefo~'epart.~of-a--.~ho\]e and ooncatenationo In parsing, phrasestructure rules arc used to s~u.
'ch a hierarchicalc~nstituen~ orgsnizatiop of the word string of asentence o Phrase structure ~\ ]es  discover thehierarchicsl organization of a sentence~ but they donot tell.
whdch words are the heads of the phrases (savef i le  X-trot theory /Jackendoff 1977/) nor de theyfurther: sf?e<cify %~le ty\[x~s of the structural relations?Dependlency grau~-/rs ?
in cxontrast ~ indicate thebi1~ary re).atious that hold between the words insentences /~{@ys \].964 ~ ?-/aifamn \] 965, Robinson 1970,2~0m\]erson 1971~ Hellwig 1986, St~trostm 1986/.
Neithernon.
4~=~rmim!l sy~i~ol.s nor phrase struct\[~e rules haveany ;cole to play because constituents are not lookedfor,, A p~ser  which ~0ploys dependency rules (ratherthan pbras,; structure rules) nmkes the beads and the\[types of binding celations explicit, but does notindicate the hierarchical constituent tx\]nfigurations of~sentences explicitly?
We argue that dependency gra,~narssuit ~yet|-er than phrase structure rnles tonon-oonfigt~ational~ free-word~rder languages~\]\[nsofi~r as defxmdency r'elations are local (thatis~ they hold bet~.en adjacent words or trees) and@~trttctive (that .i.s~ a recxx\]nized dependant is rex~ovedp~o~,~)'tly from processing) deten~inistic parsing in'line.ar ti~,e often results?
Fig= la illustrates thispoint for a si~zple intransitive-verb Finnish sentence~q, ienen ~-~jan "~iti t~uroi" (A/the ~s l l  boy's ~K)ther/Adj~ttv C~tt?
Subject~=uuvui /G~i- .Subjcd.
/~aje(~ G~s=~hth f J5P i~n poJwh glti l~ulol hw~kam laulu..~J~ttr Go~tlr Subject t~J~t\]r '~-Obj~tl,mul~,iSubject , / "~ Object~lV~tt r ..~tl laulu=*~ojall .
/hd jAt t  rMJ~ttr/ ~uskanple~ub) A r~)n-nK)notonous dependency treeFig?
I. Parsing dependency treesLinear time is preserved in parsing also in manytypical Finnish non-monotonous dependency trees if t ~sa default control ruler a word attenK0ts first to governits left neigh|~ro ~ is  strategy is natural for Finnishas most i?odifieL's are of prepositional type?
This rulewas already ini01J.cit Jn Fig?
la.
(There are of cx)urseexceptions which must overrule this default strategy.For exan~gle, prepositions have their dependants, nottheir regents~ on their right side.
)Finnish sentences have typically SVO structure.Fig~ ib shows the l~rsing of an ordinary transitive-verb sentence "Pienen pojan ~\[iti lauloi hauskan laulu~l"(A/the small boy's r~ather sang a merry song).
Parsingsteps are indicated by the numbers between the words.This |roper elaborates the locality principle inde~endency parsing.
First, we specify the ideas oflocal goverm~ent and locally governed trees?
Then wedescribe a ~msic machine and its supporting software asan i~Kolementation of the locality principle for\]~rsing arbitrary locally governed trees.
~\]e parsingsyste~l has been itKole/~ented for Finnish.
Occasio~llyour  parser invokes expensive search because noprerequisites restrict trees ( save locality ).
Wediscuss how parsing can be speeded up into linear timeif certain rmtural structural constraints are in force.LOCAL CaOVF/RNMENT r LOCALLY GOVERNFa3 'IR~ES, ANDDE~PENDENCY PARSINGThe ideological mlderpinning of local dependencyparsing is to focus on adjacent word pairs and see if abinary dependency relation holds between them.
Thewords of a sentence l~ve various attributes in ourparser?
Some of the attributes have been extracted by aIro~l~bological preprocessor /J~ippinen and Ylilammi1986/~ while others are tagged during the parsingprocess oLocal C~)ver m~ntLet <w I w2.. own> be an ordercml list of words?
We saythat a ~K)rd wj locally governs another word wj if| j =i-1 or i+l anti w i R wa where R is a binary dependencyrelatlon such that w i is the governor (or the regent)of the pair and .wj is the de~dant?
In other words, aword locally governs another one if they are adjacent(at the ~mt  of the testing) and a dependencyrelation holds between them.275The governor alone represents its government: oncea local government has been established between twoadjacent words the dependant is linked with thegovernor and disappears thereafter from sight.
Anelementary destructive processing step takes place,reducing the number of visible werds by one (shown byarrows in Fig.
i).Government is transitive.
If w i locally governswj, and wj locally governs Wk, then w i governs w k.G6vernment-is also antisy~retric and irreflexive.Locally Governed TreesDue to the destructive processing step explained above,a governor gets a new neighbor immediately after alocal government has been built.
This new nelghborqualifies for a local government as well.
A single wordmay therefore locally govern a number of other words,and two initially distant words may later on establisha local government between themselves.
If a word is thegovernor of several words simultaneously, we say thatit governs a locally governed tree of depth one(LGT-I).
In fact, we can view a (binary) localgovernment as a LGT-I having just a single branch.LGT-I ' s are elementary trees.
Relational treeswhich preserve the locality principle and can reacharbitrary depth are called locally governed trees(LGT).
LGT's are defined recursively as follows:i.
Any LGT-I is a LGT.ii.
A tree formed by a word which locally governsLGT's is itself a LGT.\[~t <w I w 2 ... Wn> be a sequence of words.
Ifthere exists a LGT which governs all the words, the LGTis a parse tree of the words.
Figure 1 portrays twoparse trees.Parsing StrategyIn the implemented parser the parsing strategy is basedon the following two control principles: (i) parsingfocuses first on the leftmost word (the initial wordprinciple); (2) the parser always tries first toestablish a focused word as a governor to its leftneighbor and then shifts focus to the right neighbor(preferred direction principle).The resulting parsing strategy is a left-corner-upstrategy.
The strategy is tuned to efficiently bindprepositional attributes as dependants.TI~E MACHINEWe have designed and implemented a parsing system forLGT's.
The underlying abstract machine has one focusregister and two stacks which bold the left and theright contexts of the focused word, respectively/Nelimarkka et al 1985/.
Locality is enforced bypermitting a focused word to bind dependants only fromtop of either stack - the left stack being preferred.The machine has also instructions for contextualtesting.
These tests may penetrate the stacks.THE SOFTWAREA high-level language FUNDPL (Functional DependencyParsing Language) was designed for parsing locallygoverned trees /J~ppinen et al 1986b/.
A precursor w~sa more procedural language DPL /Nelimarkka et al1985/.
The system includes a con~piler and supportingprogranming environment for the developmental work/Lehtola et al 1985/.A grammar description has three parts in FUhDPL.The initial part declares data types.
The second partdescribes valid binary dependency relations.
For eachnamed binary relation the user specifies valid wordpairs using morphological and/or lexical attributevalues.
The notation permits concise use of booleanoperations on attributes.276The third part of a grammar description defines aset of functional schemata.
Functional schemata havebeth declarative and procedural readings.
From thedeclarative point of view, functional schemata define aset of valid LGT-I's.
Each schema describes a regentand its possible local governments?A local government is either mandatory oroptional, and an optional one may recl~ By default thesurface ordering of local gover~nents is free.Sometimes stringent ordering constraints exist l~t~eenlocal governments; sometimes it is advantageous t~ giveprobabilistic information about the ordering ofpositionally free governments.
Such structuralinformation may be written in a schema.Schemata have also procedural reading which is yetanother distinguishing feature from phrase structurerules.
A schema actively controls the build-~up ofthe LGT-I it represents.
From the preoeduralviewpoint a schema monitors function calls of localgovernments using blackboard control regime /Valkonenet al 1987/.THE SEARCH PROBLEM OF PARSING ARBITRARY LGTgSTo discover a parse tree for an arbitrary If&T is acomplicated search process even in a bettom-upstrategy (in top-down problems would be worse)?
Thebasic problem is this: how does an algorit~n know onwhich level in the hierarchy a given word belongs to?That is, when parsing proceeds from left to right andan attempt is made to establish the right neighbor of agovernor as a dependant, the link is possible only ifthat word is not a governor of a yet incomplete T~ToOur left-corner-up strategy occasionally has to invokecoraplex search for this reason.If a language constrains the structures of itspossible LGT's, LGT's become computationally much moreeconomical devices.
The problem discussed above doesnot arise with constituent grammars and phrasestructure rules because these rules indicate hierarchyimplicitly through the naming of the constituents.CONSTRAINED LGT ' SFinnish is a highly inflectional, agglutinatinglanguage.
Both verbs and nominals have numerousdistinct surface forms which distinguish betweendifferent syntactic functions the words can have insentences.
Word forms carry, among other things, suchsyntactic information which in configurationallanguages is indicated by the precedence relation.
Wordorder in Finnish is relatively free.The basic Finnish sentence configuration is SVO.
asubject LGT is followed by a verb, an object LGT, andpossible adverbial LGT's.
Topicalization, wh-movement,and other movements create variations to this basicconfiguration.The shape of nominal LGT~s is markedly distorted.They have almost all modifiers on their left hand sideforcing them to lean to the right.
The most importantmodifiers are adjectival and genitive?
Adjectivalattributes modify the head noun iterativelyf as in thephrase (i).
(i) Nuori pitk~ vieh~tt~v~ tytt6Young tall charming girlGenitive attributes, themselves nominals~ im~difyhead nominals recursively, as in the phrase (2).
(2) X~tSn is~n tySnantajan autoGirl (gen) father (gen) employex (gem) car(A/the girl's father's esloloyer'S car)Other prepositional modifiers for nouns arequantifiers and demonstrative pronouns.
Prepositionalmodifier types can be mixed (under certainrestrictions) as in the phrase ( 3).
(3) T~m~n nuoren vieh~tt~v~n tytb'n vanha kiero is~This young charming girl (gen) old crooked father(This young charming girl's old crooked father)Prepesitionality of Finnish is also demonstratedby the fact that postpositions are common butpreposition.3 rare.
Nouns have also occasionalpostpositio,~ll nondnal modifiers, but these modifierscan be governed only by the maximal nominal heads of aLGT (the governors which fill the valencies of verbs)or by anolJler postpositionally modifying r~T.
Forexample, the nominal phrase (4)(4) suuren ~niehen pieni auto talon takanabig man (gen) small car (nora) house (gen) behind(a/the big man's small car behind the house)has the I~.I',.
~ shown in Fig.
2.
The postpositionallyn~xlifying adverbial LGT "talon takana" (behind thehouse) cannot modify the genitive attribute: *suurenmiehen talon takana pieni auto.GonAttr auto  AdvAt tr?
.~-~-~ im~ehen ~Ad Attr"tr'-'~II~ akanaAdjA~ra?"
IJie~i " ta lo l~ObjoctSIIIII'611Fig.
2?
Postpositional modifier.AN EFFICIENT PARSING ALGORITHM FOR LGT'SThe basic left-corner-up algorithm can be modified sothat it hierarchically first builds nominal LGT' swithout post0ositional modifiers, then LGT's governedby prepositions and postpesitions, then mgminal IGT'swith postpositional modifying nominal LGT's, andfinally the LGT governed by the finite verb.
Thestructural constraints of LGT's prune search, and itcan be p~oved that the algorithm 1~en parsesunambiguous sentences in linear time.
The followingrestrictions are assumed:i o Adjectives, quantifiers, and adverbs have nnlyprepositional modifiers.ii.
Nouns have postpositional modifiers only on themaximal level.
On lower levels they have onlyprepositional modifiers.AMBIGUITY A~) WELL-FORM~DNESSThe modified algorithm presumes that LGT' s areunambiguous.
None of the bound dependants should notqualify as a dependant to any other governor than theone chosen.
Because the algorithm removes dependantsafter binding, it cannot cope with alternativerelations.Albeit r ich morphology greatly helps to makeunique distinctions between different binary relationsin Finnish, it leaves some residual ambiguity.
The mostprominent example is caused by the genitive surfacecase.
That ~mse signals either accusative case, theobject of a ~,~entence, or possession.
The governor of anadverbial n~i~ also be ambiguous.
The basic algorithmsolves ambi9%~ity by backtracking.In their "pure, form beth algorithms parse onlywell-formed \]~T's.
'Ilhere are, however, soa~.~ well knownsyntactic phenomena which cannot be represented byiGT's.
TG-theory postulates oertain transformationswhich result in long-distance dependencies.
In modernGB-theory tl~se displacement operations 9~) under thegeneral rubric "move-alpha".For exanple, certain fronting n~vements(wh-movement and topicalization) remove an element andmay transport it across clause boundaries onto alanding site in the beginning of the main sentence.
AI~T which originally was governed locally becomesdistant to its governor and is no more within itsreach.The algorithm can be augmented to handlelong-distance fronting movements.
At one point thealgorithm has built nominal and adverbial LGT's.
Thevalencies for a verb are filled first locally and, if afiller cannot be found, a search is made from thefronted LGT's.
The resulting LGT is not well-formed.OONCLUSIONWe have introduced the notions of local government andlocally governed trees to express restricted dependencystructures.
Their ecmputational counterparts are binarydependency relations ( for local government ) andfunctional schemata (for locally governed trees ofdepth one).
We then briefly mentioned a parsing systemwhich we have implemented for parsing dependencystructures of Finnish sentences.
We then discussed howthe algorithm can be augmented into a multilevel modelwhich takes into account varying structural c~nstraintsin different levels of sentence hierarchies.
Linearparsing time ensues for unambiguous well-formed locallygoverned trees.REFERENC~Anderson, J.M., Dependency and grammatical functions.Foundations of Language 7, 1971, 30-37.Gaifman, H., Dependency systems and phrase-structuresystems.
I Information and control 8, 1965,304-337.Hays, D., Dependency theory: a formalism and someobservations.
Language 40, 1964, 511-525.Hellwig, P., Dependency unification grammar?
COLING'86,Bonn 1986.Hudson, R., Arguments for a Non-transforn~tionalGrammar.
The University of Chicago Press, \]976.Jackendoff, R., X-bar Syntax: A study of PhraseStructure.
Linguistic Inquiry, Monograph SeriesTwo, The FLIT Press, 1977.Jgppinen, H. and Ylilammi, M., Associative model ofmorphological analysis: an empirical inquiry.Computational Linguistics, Vol.
12, No.
4, 1986a.J~ippinen, H., Lehtola, A., and Valkonen, K., ~%mctionalstructures for parsing dependency constraints.Proc.
COLING86, Bonn, 1986b.Lehtola, A., J~ppinen, H., and Nelimarkka, E.,Language-based environment for natural languageparsing.
Proc.
2nd EUROACL, Geneve, 1985.Nelimarkka, E., J~ippinen, H., and Lehtola, A., Parsingan inflectional free word order language withtwo-way finite automata.
In O'Shea, T.
(Ed.
),Advances in Artificial Intelligence.North-Holland, 1985.Robinson, J., Dependency structure and transformationalrules.
Language, Vol.
46, No.
2, 1970.Starosta, S. and Nomura, H., Lexicase parsing: alexicon-driven approach to syntactic analysis.OOLING'86, Bonn, 1986.Va\]\]~onen, K., J~ippinen, H., and Lehtola, A.,Blackboard-based dependency parsing.
IJCAI87,Milan, 1987.277
