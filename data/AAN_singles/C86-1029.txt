SOLUTIONS FOR PROBLEMS OF MT PARSERMETHODS USED IN MU-MACHINE TRANSLAT ION PROJECT -Jun-ichi NAKAMURA, Jun-ichi TSUJII and Makoto NAGAODepartment of Electrical EngineeringKyoto UniversitySakyo, Kyoto 606, JAPANI.
IntroductionA parser is a key component of a machine translation(MT) system.
If it fai ls in pars ing an input sen-tence, the b~ system cannot output a complete trans-lation.
A parser of a practical MT system must solvemany problems caused by the varieties of characteris-tics of natural languages.
Some problems are causedby the incompleteness of grammatical rules and dic-t ionary in format ion,  and some by the ambigu i ty  ofnatural  languages.
Others are caused by var ioustypes of sentence constructions, such as itemization,insert ion by parentheses  and other typographica lconvent ions  that cannot  be natura l ly  captured byordinary linguistic rules.The authors  of this paper \[lave been deve lop ing MTsystems between Japanese and English (in both direc-tions) under the Mu-mach ine  t rans lat ion  project\[NAGAO 85\].
In the system's development ,  severalmethods have been implemented with grammar writinglanguage GRADE \[NAKAMURA 84\] to solve the problems ofthe MT parser .
In this paper, first the characteri-st ics of GRADE and the Mu-MT parser  are br ief lydescribed.
Then, methods  to solve the MT pars ingproblems that are caused by the varieties of sentenceconst ruct ions  and the ambigu i t ies  of natural  lan-guages are discussed from the viewpoint of efficiencyand maintainability.2.
Characteristics of  GRADE and Mu-MT parserMu-pro jec t  has been developing two MT systems basedon the t ransfer  approach: Japanese- to -Eng l i sh  MTsystem \[TSUJI I  84\] \ [NAGAO 84, 85, 86\], and Eng l i sh-to-Japanese MT system \[TSUJII 85\].
All grammars inthe project, including the Japanese and English anal-ysis grammars are written in the same grammar writ inglanguage, GRADE \[NAKAMURA 84\], which has the follow-ing features:I) Each grammatical rule is expressed by a Tree-to-Tree t rans format ion  rewr i t ing  rule based on aflexible pattern matching algorithm.2) A 'subgrammar' method allows for the division ofthe whole grammar into several parts, and forthe detailed control of the translation process.A subgrammar is a set of rewriting rules and thewhole grammar is expressed as a network of suchsubgrammars (subgrammar-netw ork).3) The para l le l  execut ion  of a subgrammar 's  re-writ ing rules makes it possible to collect allpossible interpretations of a specified part ofan input sentence, and to compare them in orderto select the one most feasible.Mak ing use of these features,  the Engl ish  analys isg rammar  of Mu-Pro jec t  is roughly div ided into thefollowing three subgrammars (SG) \[TSUJII 85\]:i) pre-ana lys is  S G, wh ich  analyzes const ruct ionssuch as itemized forms and insertion by paren-theses which cannot be treated by ordinary gram-mat ica l  rules, and div ides the input sentenceinto several fragments.2) main-analysis SG, which performs syntactic andsemantic analysis in the usual sense.3) post-analysis SG, which combines the fragmentsof sentences divided by the pre-analysis SG.Solutions to the efficiency and maintainability prob-lems of an MT parser are descr ibed in the fo l lowingsections with examples f rom the Engl ish analys isgrammar.3.
Problems caused by_ Constructions of SentencesConstructions of sentences, such as, itemized formscause serious problem of!
MT parsers.
There are manysuch except ional  const ruct ions  in wr i t ten  texts,especially in the abstracts of scientific and techno-logical papers which the Mu-pro jec t  a ims  to trans-late.
(The current corpus of the project consists ofthe abstracts  extracted from the INSPEC databasewithout any pre-editiug.)
The following is a typicalexample :Four major factors affect the cost of ownership:I) purchase price, 2) investment tax credits, 3)cost  of ma intenance  and repa i rs  and 4)efficiency costs.
--- (i)This type of construction can be handled by the rulesof the context free grammar (CFG) shown in figure i.S -" S' ':' IF ' ' IF -" IFL 'and' IFEIFL -~ IFE IFL ~ IFE ',' IFLIFE ~ IN NP IN -~ NUMBER ')'NP -~ DET N :rules for itemized formsS -~ S' ' ' : rules forS' -- NP VP structural analysisS: Sentence, IF: Itemized Form, IFL: List of ItemizedElement, IFE: Element of Itemized Form, IN: ItemNumber, NP: Noun PhraseFigure 1 Context Free Rulesfor processing Itemized FormsHowever, if rewriting rules to handle such sentenceconstructions are added to the analysis grammar, thefollowing problems would arise:a) Deterioration of analysis efficiency: Rewritingrules which need not be referred to in a struc-tural analysis will increase.
Since CFG parserscannot distinguish the rewriting rules for thestructural analysis from the rewriting rules forthe typographica l  sentence construction analy-sis, the increase in the total number of rulesreduces the efficiency of the analysis.b) The loss of useful heuristics for correct analy-sis: For example, that each item in an itemizedform can be analyzed independent ly  is the heu-r ist ics  useful for the analysis grammar.
Tout i l ize such heur ist ics ,  the recogn i t ion  ofglobal sentence s t ructures  shou ld  precede thedetai led s t ructura l  analysis.
It, however,cannot be ut i l ized ef fect ive ly  in an analys isbased on CFG.c) Deter io ra t ion  of the mainta inab i l i ty  of theanalysis grammar: It becomes difficult to dis-133t inguish rules concerned with part icu lar  texttypes (i.e., abstracts  of sc ient i f i c  papers,art ic les of newspapers,  etc.)
f rom rules con-cerned with more general linguistic phenomena.In constrast  to such an approach, Tree-to-Tree-typerewr i t ing  rules and using subgrammar-networks  tocontrol  the parsing, which are features of GRADE,allow the MT parser to analyze such sentential formswithout the deterioration of efficiency and maintain-ability.
The analysis procedure of an itemized form,for example, is the following:i) First, the f ragments  of an input sentence areseparated f rom each other by a tree st ructurepattern such as that shown in figure 2.
In thisexample,  one f ragment  is the core part of thesentence and the others are itemized parts.2) Each fragment is analyzed independently by themain-analysis subgrammar.3) Finally, fragmental results are integrated intothe whole analysis result by the post-analysissubgrammar.--- ':' { HUM ')' --- ','}+ --- 'and' HUM ')' --- ' '#0 IFLI IFE2 IFE3(a) Pattern to extract fragments from a sentence%( #0 COLON IFLI IFE2 AND IFE3 PERIOD);IFLI: LENGTH(I,IO,%(NUMI RIGHT PARENI #i COMMA));I FE2 :%(HUM2 RIGHT PAREN2 #2);IFE3:%(HUM3 RIGHT--PAREN3 #3);(b~ GRADE patternvar Assigned Word Sequence#0 : Four Major Factors affect the cost ofownership:IFLI : i) purchase price, 2) investment taxcredits,IFE2 : 3) cost of maintenance and repairs andIFE3 : 4) efficiency costs.
(c) Correspondences between the GRADE patternand fragments of the sample sentence (i)Figure 2 An example of the patternto extract adequate fragments from the itemized formIn this way, the grammat ica l  rules for analys ingsentence constructions are placed in the pre-analysissubgrammar and are separated from the main-analysissubgrammar where the syntactic and semantic analysisof the input sentences is performed.
This separationavoids the degradat ion  of both analys is  e f f i c iencyand the grammar 's  mainta inab i l i ty  - both seriousproblems in parsers based on CFG.4.
Ambiguity ProblemsThe ambigu i ty  of natural  language is one of thebiggest prob lems in an MT parser.
The MT parseroften outputs a wrong analysis result, or exhaustscomputer time and memory, due to ambiguity.
Proba-bly, knowledge-bases combined with context analysisand an inference mechanism might enable disambigua-tion in the pars ing of natural  language.
Neverthe-less, the current knowledge eng ineer ing  technologyhas not yet developed large scale and high qual i tyknowledge-bases  usable by a pract ical  MT parser.Furthermore, disambiguation based on such knowledgebases is itself still a research problem for which wehave not yet had any concrete solutions.
Since theMT parser  has to analyze fa i r ly  long sentences con-taining various sorts of constructions, such as longconjuncted phrases, apposit ions,  e l l ipses,  etc., it184has to use heuristic methods for the disambiguationto determine the priorities of the possible syntacticand semant ic  in terpretat ions  produced for an inputsentence.Since the analysis methods based on CFG usually han-dle each interpretation independently, the followingtwo methods are typically useful for determining thepriorities of such interpretations:a) First, obtaining all possible interprations fromthe input sentence and then compar ing  them.Note that such rules have to compare  d i f ferentinterpretations (tree structures) and cannot beCFG rules.b) Heuristically adjusting the order of applicationof CFG rewr i t ing  rules, for example,  to obta injnst one interpretation from the input sentenceand to ignore others \[NAGAO 82\].Unfortunately, the first method lowers parsing effi-ciency because of the inherent 'combinatorial explo-sion'.
It often exhausts  the l imi ted computer  t imeand memory  and sti l l  gives no interpreta ion.
Thesecond method has d i f f icu l t ies  in ma inta in ing  thepr ior i ty order ing of rewr i t ing  rules adequately.This difficulty increases with any increase of rulesin the grammar whole.However,  many kinds of ambigu i ty  can be solved byadopt ing the contro l l ing  mechan ism prov ided byGRADE's subgrammar  and the 'procedural analysis'method \[TSUJI I  84\].
In this section, we wi l l  focuson how to d i sambiguate  the in terpretat ion  of func-tional words  l ike 'after', 'as', and 'for' wh ich  canbe used both as preposi t ions and as (sentential)conjunctions.
These functional words bring about thetwo problems as follows:i) Processing efficiency; there are certain kinds ofambiguities which may be solved automatically, whenwe use a CFG based parser augmented by simple seman-tic checking.
For example,  'as' and 'after' in thefollowing sentences are used as prepositions and arenot used as conjunctions:Remarkably, the printed board can be executed asa one-sided or a double-sided unit.
---(2)The solderbility of reflowed tin and 40 percentload coated copper has been examined afterthermal  aging des igned to inc lude extens ivecopper-tin intermetallic compound growth.
---(3)However, a lot of computer time and memory are neces-sary, because the number of possible partial inter-pretat ions increases combinatorially.
For the cor-rect in terpretat ion  of (3), we need such a semant icconstraint  as the agent of 'to design' should be ahuman.
However, such a semantic constraint is morepreference than a real constraint.2) Ambiguous  interpretat ion;  for the correct  d is -ambiguation, a complete semantic and contextual anal-ysis is necessary.
The word 'for' in the fo l lowingsentence is ambiguous.Many opportun i t ies  occur for contractors  toobtain electrical maintenance work in factories.---(4)This sentence has two possible syntactic structuresas follows:Many opportunities occur \[S for contractors \[to obta in  \[NP electr ical  ma~tenance  work  ~Pfactories, l\] \] .... (4.1)Many opportunities occur for \[% \[NP contractorsto obtain electrical maintemfilcd'f \[VP work  infactories.\] \] ---(4.2)The dominani: reading is (4.1), but we cannot reject(4.2).Both these prob lems must be solved by an MT parser.The efficiency problem can be solved by adopting the'3 stage procedural  analysis' as fo l lows \ [YAMAMOTO86\]:Step \].
Disambiguation by simple but reliable cues.Rules for di:~ambiguating parts-of-speech are applied.For example,  it is tentat ive ly  determined  that 'as'in (2) is a prepos:ition by simple but rather reliableclles such as;"If there are no verbs after the ambiguous func-tion word, its part-of-speech is a preposition.
"Such a rule :is easily expressed by using the flexiblepattern matching functions of GRAI)E.Step 2.
Disambiguation based on intermediate analy-sis resulL.
'After' in (3) cannot be d isambiguated  in step i.The ambiguity is solved in this step by the followingrule:"If the word sequence after the ambiguous func-tion word is to be analyzed as a sentence, tileword is a conjunction, if the phrase is a noun-phrase, then tile word is a prepesJtion.
"For (3), f i rst ,  the word sequence  ' thermal  ...growth' after 'after' is extracted and analysed com-pletely.
The grammar for complete analysis, writtenas a subgrammar  network,  is cal led from this rule.For this senLence, the word 'after' is determined asa preposit ion,  because the word sequence fo l lowing'after' is analyzed as a noun-phrase (Figure 3).... examined after thermal ... growth.CONJ or PREP |complete~analysis... examined after \[NP thermal ... growth\]PREP ~ comple \[e ana lys i sFigure 3.
An example of d isambiguat ionby par t ia l  ana lys i sThis kind of top-down processing is easily realizedby the pattern matching functions and the invocationof subgramm ar-netw orks.Step 3.
Complete Analysis.After step 2, each word (or phrase) is no longer(syntactically) ambiguous.
The complete analysis ofthe sentence therefore hecomes straightforward.
How-ever, the determinations of parts-of-speech in step 1and step 2 are tentative, and it somet imes  happensthat complete  analyses cannot: be obtained becuasewrong decisions have been made.
In such cases, thesetentative decisions may be changed by step 3.During step I and step 2's construction of tentativeinLerpretatious, various sorts of heuristic rules areapplied; these are ordered according to their rela-tive 'strengths'.
The part-of -speech in terpretat ionof 'for' in (4), for example,  shows that a heur ist icrule based on surface syntactic cues such as"If there is a word sequence '... for NP co verb...', the 'for' is a prepos i t ion wh ich  marks  thesubject of the infinitive clause.
"is useful.
This kind of heur ist ic  rules is usefulfor choosing the most feasible interpretations, evenif there are several syntactically and semanticallypossible interpretations.The '3 stage procedual analysis', in which bottom-upprocesses (step l) and top-down processes (step 2)are carefully combined, can be implemented straight-forwardly by uLilizing the rich control schemes pro-vided in GRADE.5.
ConclusionMethods for solving the efficiency and maintainabil i-ty problems of tile MT parser  have been discussed.Tile MT parser of the Mu-project is designed to so\]vethe problems by utilLz:lng the several features ofGRADE.
Those methods are based on the fo l lowingideas:I) The separat ion of the sentence const ruct ionana\]ysis from the structural analysis.2) Independent processing by dividing the sentenceinto several  f ragments  by means of heur ist icrules.3) The carful combination of bottom-up and top-downprocessing.There are other problems in the MT parsing, forexample, problems of contextual analyses, which re-main to be attacked.
The work of improv ing tilegrammars and the software system must be continued inthe future.AcknowledgementThis study is a part of!
"Research on the mach inetranslat ion system ( Japanese-Engl ish and Engl ish-Japanese) of scientific and technological documents"and is being performed through Special CoordinationFunds for Promoting Science & Technology of the Sci-ence and Techno logy  Agency of tile Japanese Govern-me n t .Finaly, we would l ike to thank the members  of Mu-project for their useful comments.REFERENCES\[NAGAO 82\] Nagao, M., Nakamura,  J., A Parser  WhichLearns the Appl icat ion Order of Rewr i t ing  Rules,Proc.
of COLING82.\[NAGAO 84\] Nagao, M., Nishida, T., Tsuji i ,  J., Deal-ing with Incompleteness of Linguistic Knowledege onLanguage Translation, Proc.
of COLING84 (1984).\[NAGAO 85\] Nagao, M., Tsujii, J., Nakamura,  J., TheJapanese Government Project for Machine Translation,Computational Linguistics, Vol.
Ii, No.
2-3 (1985).\[NAGAO 86\] Nagao, M., Tsuj i i ,  J., The Transfer  Phaseof the Mu Machine Trans lat ion  System, Proc.
ofCOLt NG 86 (1986).\ [NAKAMURA 84\] Nakamura~ J., Tsuj i i ,  J., Nagao, M.,Grammar Writing System (GRADE) of Mu-Machine Transla-tion Project and its Characteri stics, Proc.
ofCOLING84 (1984).\[TSUJII 84\] Tsuj i i ,  J.~ Nakamura,  J., Nagao, M.,Analysis Grammar of Japanese in Mu-project, Proc.
ofCOLI NG 84 (1984).\[TSUJII 85\] Tsuj i i ,  J., et el, Conf igurat ion  ofEnglish-to-Japanese Translation System in Mu-project,WGNLSO-3, IPSJ (1985) (Jn Japanese).\ [YAMAMOTO 86\] Yamamoto,  T., Tsuji i ,  J., Nagao, M.,Disambiguation Method for Part-of-Speech of English-to-Japanese Translation System in Mu-Project, WGNL53-7, IPSJ  (1 986) (in Japanese).135
