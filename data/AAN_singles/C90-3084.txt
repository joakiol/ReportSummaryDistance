A PARLOG Implementation of Government-Binding TheoryRobert J. Kuhns205 Walnut StreetBrookline, MA 02146USAABSTRACTTile purpose of this paper is to report on research on a parallelparser based on the principles and constraints of Government-Binding Theory.
The parser outputs a set of licensing relations,notably thematic or 0-role assignments and antecedent/anaphorand other binding relationships, The primary goal of the systemix as a liaguistics tool for exploring concurrency and autonomyamong ir~odules of tile theory.BACKGROUNDParse,'s based oil Government-Binding (GB) Theory have beentile subject of a nunlber of research progranlmes.
~ While they allshare a colllnlon linguistic framework, the design goals andunderlying parsing strategies are varied.
Some are tools forewduating competence and/or performance models of languageand others remain neutral with respect to psychological reality.The parsing engines range from bottom-u p to top-dow nto in ix -nlode methods and fronl backtracking to deterministic algo-rithms.
Howe\er, they all approach parsing as a sequentialprocess, and allhough there have been a number o\[' efforts oilparallel parsing (of.
/I.\[uang and Guthrie 1986/, /Matsmnoto1986/, and/Waltz and Pollack 1985/), few are linguistically-oriented and none arc GB-based.
Since GB is a highly modularsystem of components, development of parallel parsers incorpo-rating the theory allows for a t'cmnal examination i to the com-putational aspects of GB-modules and their interfaces.SCOPE AND OBJECTIVESIn oMer to explore ttle relationsllips between GB-subsystemsand their realization in a parallel parser, a development goal isone of modularity ill that each GB.-module should be transpar-ently encoded.
2 This perlnits investigation of processes withinand across GI:~ components o be made explicit,Since the focus of tile parscr is on GB principles and since GBitself is a theory of core gralnmar, file coverage of the parser isrestricted to a subset of English that reflects yntactic processesexplained by the theory.While it may be premature to speak of psychologically-realparallel parsers, many of the cognitive presuppositions that arethe basis of the work of/Berwick and Weinberg 1984/./Marcus1980/, and/Milne 1983/have been the motivation for several ofthe design decisions that have been incorporated in the system.More specifically, the parser is deterministic and has the capa-bility of delaying certain actions, e.g., projection of nodes andresolution of lexical ambiguity, until more information is avail-able, rather than computing competing parses or backtrackinguncontrollably.
These features together with the goal of trans-parent representation f GB principles hould provide a founda-tion for future research into tile cognitive plausibility of parallelparsers.AN IMPLEMENTATION NOTEThe parser is being developed in PC-PARLOG: requiring anIBM PC, XT, AT or compatible machine with tit least 512Kb ofmemory and two floppy disk drivcs or a hard disk.Although tile inlplenlentation sinmlates para!lelism by atin~eshar-ing scheduler, tile parser un~ on a single processor nlachinc and,therefore, lacks true parallelism, ttowever, insofar as the pur-pose of the parser is to specify concurrency of G13-subsystemsat a high level of abstraction, tile analyses are in ternls ofcompulalional processes rather than processors.
As parallelhaMware becomes tnore readily available, avaluable By-prod-uct of this research is that tile system coukl be ported to parallellogic machines with little or no additional elTort.PARLO(iPARLOG t'q~arallel Logic '+) is a parallel declarative program-mmg language based on logic (/Con lon 1989/, /Gregory 1987/,and/Shapiro 1988/).
"File basic fornl of a clause is(I) head <-- guard: bodywhere tile head is a goal r(tl ..... tn) and both guard (optiomfl)and hod)(obligatory) are conjunctions of goals.
Each procedurenlust be preceded by a mode declaration specifying input ('?)
andoutput (A) arguments.
Sequential  xl para lel co lit lctio a (AND)and sequential nd parallel disjunction (OR) are represented by"'&", ",", "';", "'.
", respectively.THE PARSERThe parser combines top-dov, n and bottom-up strategies andrecovers aset of licensing relations directly; phrase structure isconsidered erivative and is not cornputed.+ The basic opera-tions rely on the current governing category as the left boundedcontext and are deterministic n the sense that once a node istyped or licensed it cannot be altered.
The output of the parser isa constructed list of structures(2) CP = lcp(C(mlplementizer),ext arg(Subject),infl(lnfl elenlent),predicate(Verb),int arg 1 (Object 1 ),int arg 2(Object 2) ,indirecL.arg(PP) l,where cp represents he complementizer phrase, Ihe head of theCP or S-bar, inll denotes the inflectional elemenl, tile head of S,and predicate is tile verb.
Tile struclures ext_arg, int_arg_l,and int__arg 2 are tile arguments of the verb, the lirst being theexternal argument (subject) and the last two being tile (direct)internal arguments (objects).
The indireet_arg is a preposi-tional phrase (PP) that a verb may license and there may beseveral of these structures depending on the lexical specifica-tions of the verb.
While the cp, ext_arg, infl, and predicate areobligatory, the internal and indirect arguments Irre contingentupon the 0-grid of the verb and, therefore, are optional.The basic objects of the system are nodes where a node is astructure of the form xp(Word,x_bar(Features),lndex).
Wordis a lexical item, an empty category PRO, trace, or variable, oran empty complementizer or inflectional element, and Featm'esrepresents he type of the node in terms of x-bar features_+N,_+V.Every node receives a unique index unless it is bound (co-indexed) to another via Binding or Control Theory.
Each of theterms of (2) are nodes except for the arguments which are a listof nodes that represent the specifier, head, and complementstructures.
Specifiers may be determiner or adjectival phrases,and complemeuts may be PPs or, in the case of retative clauses,a CP, which would be reflected in another list whose structure isanalagous to (2).THE LEXICONIn accordance with GB Theory, the lexicon plays :t cent,'al role.Each lexical item contains the idiosyncratic features of thelexeme and they direct many actions of the parser.
The lexiconis a database of PARLOG assertions which may be searched inparallel.
A small subset of the lexicon is(3) mode lexeme(item?,x_bar ^, feature^).a.
lexeme(man, \[x_bar(nl,vo) l,\[pl(men)\]).b.
lexeme(put, \[x_bar(no,v l)\],\[...,s(puts),ing(putting), 0-grid(int_arg_ 1,locative_PP),, i.\] ).c.
lexeme(plan, \[x._bar(no,v l),x bar(n l,vo)\],\[ .... 0-grid (proposition),tenseless,subject control,... \]).The first te,'m of each lexeme is the lexical entry and the secondterm is a list of structures of the form x bar(F I ,F2), where F 1 andF2 are x-bar primitives, _+N, +_V, with " l "  and "0" denoting "+"and "-", respectively.
Lexically ambiguous items, e.g., (3)c.,have more tlmn one x-bar structure.
The third term is a list ofsymbols and structures that depend on the lexical item and itstype, i.e., x-bar features.
For instance, as (3)a. illustrates, nouns(x_bar(nl,vo)) have a plural form as It member in their list offeatures while verbs (x bar(no,vl )) have morphological deriva-tives, e.g., participial forms or ing, in their features list as (3)b.shows.
Verbs also have 0-grids which characterize argumentstructures and other features indicating specifics of complementstructure such as tenseless (infinitival) subcatcgorizations orcontrol criteria, e.g., subject_control ((3)c.).
"In the currant version of the parser, derivational morphology isminimal.THE PARSING ENGINEThe basic actions of tile parser lrre to identify gaps, to constructmaximal projections, and to license these projections, and theseare encoded by tile respective procedures, detect gap, project,and license.
The parsing loop is called recursively until tilesentemial input, a list, is exhausted.
During a parse, governingcategories are produced and used as left-bounded context for"certain procedures before being shunted to the list that willultimately represent the output.GB MODULESThe GB-modules of Trace, Binding, Control, and BoundingTheories are incorporated in the parser, especially in goalsdetect_gap and license.
Detect_gap identifies the presence, ifany, of an implicit elemeut.
This may be an argument, viz., trace,PRO, or variable, or a non-lexical item, viz., an empty comple-mentizer or inflectional element.
A fi'agment ~' of the PARLOGcode for detect_gap is(4) mode detect gap(sentence?,gov__cat^,empty_cat^).a.
detect_gap(\[WordlWords\],Gov cat,Empty cat)<--passive_morphology(Word,Gov cat):Empty_cat = trltce.b.
detectgap(\[ WordlWords\],Gov_cat,Empty cat )<---Word = to,subjectless inf comp(Gov cat):Empty_cat = pro.Tile first relation has a guard to determine if the current word haspassive morphology.
Informally, the guard passivemorphologychecks the inflectional element of the CtuTent governing cate-gory fro" a form of BE and, in parallel, determines if the currentword is a verb ot'the passive form.
If the guard succeeds, then theoutput substitution is complete with Empty_eat being unifiedwith trace.
In (4)b., the guards provide checks with the currenttoken (Word) and governing category for the features of theverb and possible presence of an overt subjec~ in order thatdetect gap may detect aPRO.
The rest of the specifications fordetect gap have similar strategies for finding variables andempty inflections and complementizers.
Each of these clausesare computed in parallel together with one that determines anabsence of an empty category in tile current position of thesentence.The next goal in parse is project, which constructs a maximalprojection, xp(ltem, Type).
In the case that Item is lexicaltyambiguous, project has calls to lexical disambiguation routineswhich are invoked in parallel to attempt a resolution.The goal license indexes and assigns 0-roles to arguments ofpredicates.
Binding Theory (/Cllomsky 1981/) has three prin-ciples, frequently labeled A, B, and C m the GB literature, thatspecify- co-indexation procedures for irnaphm's, pronominals.and referential (R-) expressions, respectively.
Since the prin-ciples are independent, they are canclidates for parallel execu-tion.
Thus, Binding is specified in the system as(5)mode binding(proj?,gov_cat?,indexed_proj^).binding (Proi,Gov cat,lndexed_proj) +-i s anaphor( Proj ):principle a(Proj,Gov cat, Indexed_proj).binding(Proj,Gov cat, Indexed proj) +--i s pronom in a l ( Proj ):principle_b(Proj,Gov cat, ludexed_pmj).bi nding(Proj,Gov_cat,lnde xed_pmj) +--is r_cxp(Proj):principle c(Proj,Gov_caI, Indexed proj).The purpose of the guards is to determine tile argument type ofa particular argument (Proj) which then invokes a call tn aspecific method of indexing in accordance with Binding Theory.
(There is a numerical indexing scheme that is embedded ineachprinciple.)
The result of binding is a node, Indexed_proj, thathas an index associated with it.The other major part of license is the assigmnem of 0-roles.
Theparser assigns 0-roles to the respective arguments of the predi-cates based on their 0-grids.
Tile binding and ()-assignmentprocedures together comprise the licensing procedure.
Theircommunication channels are being explored and stream ANDparallelism appears promising.395AN EXAMPLEFor the sentence(6) John was persuaded to leave.the parser produces(7) \[cp(emp,cp, 1 ),ext_arg(john,x_bar(n l,vo),2),infl(was,infl,3),predicate(persuaded,x_bar(no,v t),4)int arg_ 1 (trace,x bar(n I ,vo),2),int_arg 2(cp l,cp,5),\[cp_l (emp,cp,5),ext arg(pro,x bar(n I ,vo),2),in fl(to,infl,6),predicate(leave,x bar(no,v 1),7)\]1,which illustrates PP, O and trace detection and binding.FUTURE DIRECTIONSThe primary focus of the experimental parser will be to includewider coverage within st GB-framework, including adjuncts,and to examine psychological spects of concurrent languageprocessing.CONCLUSIONThe investigation i to the concurrent aspects of GB Theory isstill in the embryonic stages.
Nevertheless, early results eem toindicate that such research may yield significant insights intoparallel parsing and human sentence processing.NOTES~Cf.
/Abney 1986/, /Berwick 1987/, /Correa 1987/, /Kashket1987/,/Kuhns 1986/,/Sharp.1985/,/Stabler 1987/,/Thiersch1988/, and/%'ehrli I984/.-'/Berwick and Weinberg 1981/and/Wehrli 1988/have xcel-lent discussions ofthe notion of transparency or direct encodingof GB-modules.~PC-PARLOG is conmaercially available from Parallel LogicProgramming Limited (Twickenham, Enghmd).a/Betwick 1987/presents various ot, tput options with respect toGB-based parsers./Abney 1986/also has a novel approach toparsing.50-roles are denoted by the neutral labels ext arg, int arg_ 1, andint arg__2 rather than by the terms of agent, tbeme, recipient, etc./Zubizaretta 1987/, for example, argues for this type of represen-tation.~'For the sake of expository simplicity and for lack of space, low-level implementation details, e.g., certain initialization andstack manipulation procedures, arc suppressed in the discussion.REFERENCESAbney, S., (1986) "Licensing and Parsing," (personalcommunication).Berwick, R.C., (1987), Principle-Based Parsing, TechnicalReport 972, MIT Artificial Intelligence Laboratory,Cambridge, MA.Berwick, R.C., and A.S. Weinberg, (1984), The GrammaticalBasis of Linguistic Performance, The MIT Press, Cambridge,MA.Chomsky, N., (1981), Lectures on Government and Binding,Foris Publications, Dordrecht, Holland.Conlon, T., (1989), ~ l  igjM'ARLOG, Addison-Wesley,Reading, MA.Correa, N., (1987), "An Attribute-Grammar Implementation fGovernment-Binding Theory," Proceedings of 25th AnnualMeeting of the ACL, Stanford, CA.Gregory, S., (1987), Parallel Lo~Pr~nm~ in PARLOG,Addison-Wesley, Reading, MA.Huang, X., and L. Guthrie, (1986), "Parsing in Parallel,"Proceeding~of COLING '86, Bonn, West Germany.Kashket, M.B.I (1987), A Government-Binding Based Parserfor War l~,  Technical Report 993, MIT ArtificialIntelligence Laboratory, Cambridge, MA.Kuhns, R.J., (1986), "A PROLOG Implementation fGovernment-Binding Theory," proceedings ofCOLING '86.Bonn, West Germany.Marcus, M.P., (1980), ~yntact i c  Recognition forNatural Langua_ge, The MIT Press, Cambridge, MA.Matsumoto, Y., (1986), "A Parallel Parsing System forNatural Language Analysis," Nw~er  Lecture Notes inComputer Science, no.
225.Milne, R., (1983), Resolving Lexical Ambi~in  aDetemfinistic Parser D. Phil Dissertation, University ofEdinburgh.Reyle, U., and C. Rohrer, (eds.
), (1988), Natural Lat~tgg_Parsingand Linguistic Theories, D. Reidel Publishing Co..Boston, MA.Shapiro, E., (ed.
), (1988), Concurrem Prol o~.
Collected ~ ,The MIT Press, Cambridge, MA.Sharp, R., (1985), A.
Model of Grammar Based on Principl_~of Government and Binding, M.S.
Thesis, The University ofBritish ColumbialStabler.
E.P., (1987), "Restricting Logic Grammars withGovernment-Binding Theory," C~nAmtational L in~,vol.
13, no.
1-2.Thiersch, C., and H.P.
Kolb, (1987), "Parsing with Principlesand Parameters: Prolegomena toa Universal Parser,"(personal conmmnication).Waltz, D,L., and J.B. Jordan, (1985), "Massively ParallelParsing: A Strongly Interactive Model of Natural LanguageInterpretation," ~n i t ive  Science vol.
4, no.
1.Wehrli, E., (1984), "A Government-Binding Parser for French,"Working Paper No.
48, Institut pour les Etudes Semantiqueset Cognitives, Universite de Geneve.Wehrli, E., (1988), "Parsing with a GB-Grammar," inReyle andRobrer (eds.
).Zubizaretta, M,L., (1987), Levels of Representation in theLexicon and in the Syntax, Foris Publications,Dordrecht, Holland.3;9  ,i
