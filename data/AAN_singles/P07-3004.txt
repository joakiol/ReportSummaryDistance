Proceedings of the ACL 2007 Student Research Workshop, pages 19?24,Prague, June 2007. c?2007 Association for Computational LinguisticsA Practical Classification of Multiword ExpressionsRados?aw Moszczy?skiInstitute of Computer SciencePolish Academy of SciencesOrdona 21, 01-237 Warszawa, Polandrm@ipipan.waw.plAbstractThe paper proposes a methodology for deal-ing with multiword expressions in natu-ral language processing applications.
Itprovides a practically justified taxonomyof such units, and suggests the ways inwhich the individual classes can be pro-cessed computationally.
While the study iscurrently limited to Polish and English, webelieve our findings can be successfully em-ployed in the processing of other languages,with emphasis on inflectional ones.1 Introductionrados?aw moszczy?skiIt is generally acknowledgedthat multiword expressions constitute a serious diffi-culty in all kinds of natural language processing ap-plications (Sag et al, 2002).
It has also been shownthat proper handling of such expressions can resultin significantly better results in parsing (Zhang etal., 2006).The difficulties in processing multiword expres-sions result from their lexical variability, and thefact that many of them can undergo syntactic trans-formations.
Another problem is that the label ?mul-tiword expressions?
covers many linguistic unitsthat often have little in common.
We believe thatthe past approaches to formalize the phenomenon,such as IDAREX (Segond and Breidt, 1995) andPhrase Manager (Pedrazzini, 1994), suffered fromtrying to cover all multiword expressions as awhole.
Such an approach, as is shown below, can-not efficiently cover all the phenomena related tomultiword expressions.Therefore, in the present paper we formulate aproposal of a taxonomy for multiword expressions,useful for the purposes of natural language process-ing.
The taxonomy is based on the stages in theNLP workflow in which the individual classes ofunits can be processed successfully.
We also sug-gest the tools that can be used for processing theunits in each of the classes.2 An NLP Taxonomy of MultiwordExpressionsAt this stage of work, our taxonomy is composedof two groups of multiword expressions.
The firstone consists of units that should be processed be-fore syntactic analysis, and the other one includesexpressions whose recognition should be combinedwith the syntactic analysis process.
The next sec-tions describe both groups in more detail.2.1 Morphosyntactically IdiosyncraticExpressionsThe first group consists of morphosyntactically id-iosyncratic units.
They follow unusual morpholog-ical and syntactic patterns, which causes difficultiesfor automatic analyzers.By morphological idiosyncrasies we mean twotypes of units.
First of all, there are bound wordsthat do not inflect and cannot be used independentlyoutside of the given multiword expression.
In Pol-ish, there are many such units, which are typicallyprepositional phrases functioning as complex adver-bials, e.g.
:11The asterisk in this and the following examples indicatesan untranslatable bound word.19(1) naonwskro?
*?thoroughly?Secondly, there are unusual forms of otherwiseordinary words that only appear in strictly definedmultiword expressions.
An example is the follow-ing unit, in which the genitive form of the noun?daddy?
is different than the one used outside thisparticular construction:(2) nieNegr?bdo-Imperativezoftata*daddy-Genwariatafool?stop making a fool of me?Morphological idiosyncrasies can be referred toas ?objective?
in the sense that it can be proved bydoing corpus research that particular words only ap-pear in a strictly limited set of constructions.
Sinceoutside such constructions the words do not haveany meaning of their own, it is pointless to put themin the lexicon of a morphological analyzer.
Fromthe processing point of view, they are parts of com-plex multiword lexemes which should be consideredas indivisible wholes.Syntactically idiosyncratic phrases are thosewhose structure or behavior is incorrect from thepoint of view of a given grammar.
In this sense,they are ?subjective?, because they depend on therules underlying a particular parser.A typical parser of Polish is expected to acceptfull sentences, i.e.
phrases that contain a finite verbphrase, but possibly not many phraseologisms thatare extremely common in texts and speech, and donot constitute proper sentences from the point ofview of the grammar.
This qualifies such phrasesto be included and formalized among the first groupwe have distinguished.
In Polish, such phrases in-clude, e.g.
:(3) Preczoffzwith?apami!hands-Inst?Get your hands off!
?Another group of multiword expressions thatshould be processed before parsing consists of com-plex adverbials that do not include any boundwords, but that could be interpreted wrongly by thesyntactic analyzer.
Consider the following multi-word expression:(4) naonkolanachknees-Loc?on one?s knees?
(?groveling?
)This expression can be used in constructions of thefollowing type:(5) Naonkolanachknees-LocKowalskiegoKowalski-Genb?d?be-Future;Pl;3rdb?aga?.beg-Infinitive?They will beg Kowalski on their knees.
?In the above example na kolanach is an adjunctthat is not subcategorized for by any of the remain-ing constituents.
However, since Kowalskiego isgenitive, the parser would be fooled to believe thatone of the possible interpretations is ?They will begon Kowalski?s knees?, which is not correct and se-mantically odd.
Such complex adverbials are verycommon in Polish, which is why we believe that for-malizing them as wholes would allow us to achievebetter parsing results.The last type of units that it is necessary to for-malize for syntactic analysis are multiword text co-hesion devices and interjections, whose syntacticstructure is hard to establish, as their constituentsbelong to weakly defined classes.
They can alsodirectly violate the grammar rules, as the coordina-tion in the English example does:(6) b?d?be-Imperative;Sgcowhatb?d?be-Imperative;Sg?after all?
(7) by and largeSince the recognition and tagging of all the aboveunits will be performed before syntactic analysis, itseems natural to combine this process with a gener-alized mechanism of named entity recognition.
Weintend to build a preprocessor for syntactic analy-sis, along the lines of the ideas presented by Sagotand Boullier (2005).
However, in addition to theset of named entities presented by the authors, wealso intend to formalize multiword expressions of20the types presented above, possibly with the use oflxtransduce.2 This will allow us to prepare theinput to the parser in such a way as to eliminate allthe unparsable elements.
This in turn should resultin significantly better parsing coverage.2.2 Semantically Idiosyncratic ExpressionsThe other group in our classification consists ofmultiword expressions that are idiosyncratic fromthe point of view of semantics.
It includes suchunits as:(8) NP-NomNP-Nomwzi?
?to takenogilegs-Acczaunderpasbelt-Acc?to run away?From the syntactic analysis point of view, suchunits are not problematic, as they follow regu-lar grammatical patterns.
They create difficultiesin other types of NLP-based applications, as theirmeaning is not compositional, and cannot be pre-dicted from the meaning of their constituents.
Ex-amples of such applications include electronic dic-tionaries, which should be able to recognize idiomsand provide an appropriate, non-literal translation(Pr?sze?ky and Fo?ldes, 2005).Such expressions can be extremely complex dueto the lexical and word order variations they canundergo, which is especially the case in such lan-guages as Polish.
The set of syntactic variationsthat are possible in unit (8) is very large.
First ofall, there is the subject (NP-Nom).
English multi-word expressions are usually encoded disregardingthe subject, as it can never break the continuity ofthe other constituents.
In Polish it is different ?the subject can be absent altogether, it can appearat the very beginning of the multiword expressionwithout breaking its continuity, but it can also ap-pear after the verb, between the core constituents.The subject can be of arbitrary length and needs toagree in morphosyntactic features (number, gender,and person) with the verb.The verb can be modified with adverbial phrases,both on the left hand side and the right hand side.2http://www.cogsci.ed.ac.uk/~richard/ltxml2/lxtransduce.htmlHowever, if the subject is postponed to a positionafter the verb, all the potential right hand side ad-verbials need to be attached after the subject, andnot directly after the verb.
Thus, taking all the vari-ation possibilities into account, it is not unlikely toencounter such phrases in Polish:(9) Wzi?
?take-1sg;Masc;Pastpanyou-1sg;Masc;Nomprzedbeforewszystkimieveryonenogilegs-Acczaunderpas!belt-Acc?You ran away before everyone else!
?Some of the English multiword expressions alsodisplay properties that make them difficult to pro-cess automatically.
Although the word order ismore rigid, it is still necessary to handle, e.g., pas-sivization and nominalization.
This concerns thecanonical example of spill the beans, and many oth-ers.It follows that the units in the second groupshould not, and probably cannot, be reliably en-coded with the same means as the simpler unitsfrom Section 2.1, which can be accounted for prop-erly with simple methods based on regular gram-mars and surface processing.One possible solution is to encode the complexunits with the rules of a formal grammar of thegiven language.
Another solution could be con-structing an appropriate valence dictionary for verbsin such expressions.
Both possibilities imply thatthe recognition process should be performed simul-taneously with syntactic analysis.3 RationaleThe above classification was formulated during anexamination of the available formalisms for encod-ing multiword expressions, which was a part of thepresent work.The attempts to formalize multiword expressionsfor natural language processing can be roughly di-vided into two groups.
There are approaches thataim at encoding such units with the rules of anexisting formal grammar, such as the approach de-scribed by Debusmann (2004).
On the other hand,specialized, limited formalisms have been created,21whose purpose is to encode only multiword expres-sions.
Such formalisms include the already men-tioned IDAREX (Segond and Breidt, 1995) andPhrase Manager (Pedrazzini, 1994).The first approach has two drawbacks.
One ofthem is that using the rules of a given grammar toencode multiword expressions seems to have senseonly if the rest of the language is formalized in thesame way.
Thus, such an approach makes the lexi-con of multiword expressions heavily dependant ona particular grammar, which might make its reusedifficult or impossible.The other disadvantage concerns complexity.While full-blown grammars do have the means tohandle the most complex multiword expressionsand their transformational potential, they create toomuch overhead in the case of simple units, suchas idiomatic prepositional phrases that function asadverbials, which have been presented above.Thus, we decided to encode Polish multiword ex-pressions with an existing, specialized formalism.However, after an evaluation of such formalismsnone of the ones we were able to find proved tobe adequate for Polish.
This is mostly due to theproperties of the language ?
Polish is highly in-flectional and has a relatively free word order.
Bothof these properties also apply to multiword expres-sions, which implies that in order to capture all theirpossible variations in Polish, it is necessary to usea powerful formalism (cf.
the example in (9)).Our analysis revealed that IDAREX, which is asimple formalism based on regular grammars, isnot appropriate for handling expressions that have avery variable word order and allow many modifica-tions.
In IDAREX, each multiword unit is encodedwith a regular expression, whose symbols are wordsor POS-markers.
The words are described in termsof two-level morphology, and can appear either onthe lexical level (which permits inflection) or thesurface level (which restricts the word to the formpresent in the regular expression).
An example isprovided below:(10) kick: :the :bucket;Encoding the multiword expression in (8) withIDAREX in such a way as to include all the pos-sible variations leads to a description that suffersfrom overgeneration.
Also, IDAREX does not in-clude any unification mechanisms.
This makes itunsuitable for any generation purposes (and reli-able recognition purposes, too), as Polish requiresa means to enforce agreement between constituents.Phrase Manager makes encoding multiword ex-pressions difficult for other reasons.
The method-ology employed in the formalism requires each ex-pression to be assigned to a predefined syntacticclass which determines the unit?s constituents, aswell as the modifications and transformations thatit can undergo:3(11) SYNTAX-TREE(VP V (NP Art Adj N AdvP))MODIFICATIONSV >TRANSFORMATIONSPassive, N-Adj-inversionSince it is sometimes the case that multiwordexpressions belonging to the same class differ inrespect of the syntactic operations they can undergo,the classes are arranged into a tree-like structure inwhich a class might be subdivided further on into asubclass that allows passivization, another one thatallows nominalization and subject-verb inversion,etc.The problem with this approach is that it leadsto a proliferation of classes.
At least in Polish,multiword expressions that follow the same generalsyntactic pattern often differ in the transformationsthey allow.
Besides, the formalism creates too muchoverhead in the case of simple multiword expres-sions.
Consider the following example in Polish:(12) Noohnie!no?Oh, come on!
?In Phrase Manager it would be necessary to definea syntactic class for this unit, which seems to beboth superfluous and problematic, as it is hard toestablish what parts of speech are the constituentswithout taking purely arbitrary decisions.To complicate matters further, the expression inthe example has a variant in which both constituents3The transformations need to be defined with separate ruleselsewhere.
The whole description is abbreviated.22switch their positions (with the meaning preserved).In the case of such a simple expression, it is impos-sible to ?name?
this transformation and assign anysyntactic or semantic prominence to it ?
it cansafely be treated as a simple permutation.
How-ever, Phrase Manager requires each operation tobe named and precisely defined in syntactic terms,which in this case is more than it is worth.In our opinion both those formalisms are in-adequate for encoding all the phenomena labeledas ?multiword expressions?, especially in inflec-tional languages.
Such approaches might be suc-cessful to a large extent in the case of fixed orderlanguages, such as English ?
both IDAREX andPhrase Manager are reported to have been success-fully employed for such purposes (Breidt and Feld-weg, 1997; Tschichold, 2000).
However, they failwith languages that have richer inflection and per-mit more word order variations.
When used forPolish, the surface processing oriented IDAREXreaches the limits of its expressiveness; PhraseManager is inadequate for different reasons ?
theassumptions it is based on would require somethingnot far from writing a complete grammar of Polish,a task to which it is not suitable due to its limita-tions.
And on the other hand, it is much too com-plicated for simple multiword expressions, such as(12).4 Previous ClassificationsThere are numerous classifications available in lin-guistic literature, and we considered three of themin turn.
From the practical point of view, none ofthem proved to be adequate for our needs.
Moreprecisely, none of them partitioned the field ofmultiword expressions into manageable classes thatcould be handled individually by uniform mecha-nisms.The classification presented by Brundage et al(1992) approaches the whole problem from an an-gle similar to what is required in Phrase Manager.It is based on a study of ca.
300 English and Ger-man multiword expressions, which were dividedinto classes based on their syntactic constituencyand the transformations they are able to undergo.Such an approach seems to be a dead end forexactly the same reasons that Phrase Manager hasbeen criticized above.
The study was limited to 300units, which made the whole undertaking manage-able.
We believe that a really extensive study wouldlead to an unpredictable proliferation of very similarclasses, which would make the whole classificationtoo fine-grained and unpractical for any processingpurposes.The categorization that has been examined nextis the one presented by Sag et al (2002).
It con-sists of three categories: fixed expressions (abso-lutely immutable), semi-fixed expressions (strictlyfixed word order, but some lexical variation is al-lowed), syntactically-flexible expressions (mainlydecomposable idioms ?
cf.
(8)), and institution-alized phrases (statistical idiosyncrasies).
Unfortu-nately, such a categorization is hard to use in thecase of some Polish multiword expressions.
Con-sider this example:(13) Niechlettoit-Accszlag*trafi!hit-Future?Damn it!
?It is hard to establish which of the above categoriesdoes it belong to.
The only lexically variable el-ement is it, which can be substituted with anothernoun.
This would qualify the expression to be in-cluded in the second category.
However, it has avery free word order (Niech to trafi szlag!, Szlagniech to trafi!, and Niech trafi to szlag!
are allacceptable).
This in turn qualifies it to the thirdcategory, but it is not a decomposable idiom, andthe word order variations are not semantically jus-tified transformations, but rather permutations, asin (12).
To make matters worse, the main element?
szlag ?
is a word with a very limited distribu-tion.
This intuitively makes the unit fit more intothe first category of unproductive expressions.
Thisis even more obvious considering the fact that theword order variations do not change the meaning.Another classification was presented by Guenth-ner and Blanco (2004).
Their categories are verynumerous, and the whole undertaking suffers fromthe fact that they are not formally defined.
It alsolacks a coherent purpose ?
it is neither a linguistic,nor a natural language processing classification, asit tries to put very different phenomena into onebag.23The categories are sometimes more lexicograph-ically, and sometimes more syntactically oriented.For example, on the one hand the authors distin-guish compound expressions (nouns, adverbs, etc.
),and on the other hand collocations.
In our opinionthe categories should not be considered as parts ofthe same classification, as members of the formercategory belong to the lexicon, and the latter area purely distributional phenomenon.
Therefore, inthe present form, the classification has no practicaluse.5 Conclusions and Further WorkWe have shown that trying to provide a formal de-scription of all phenomena labeled as multiword ex-pressions as a whole is not possible, which becomesobvious if one goes beyond English and tries to de-scribe multiword expressions in heavily inflectionaland relatively free word order languages, such asPolish.
We have also shown the inadequacy of theavailable classifications of multiword expressionsfor computational processing of such languages.In our opinion, a successful computational de-scription of multiword expressions requires distin-guishing two groups of units: idiosyncratic fromthe point of view of morphosyntax and idiosyn-cratic from the point of view of semantics.
Sucha division allows for efficient use of existing toolswithout the need of creating a cumbersome formal-ism.We believe that the practically oriented classifi-cation presented above will allow us to build robusttools for handling both types of multiword expres-sions, which is the aim of our further research.
Theimmediate task is to build the syntactic preproces-sor.
We also plan to extend the classification tomake it slightly more fine-grained, which hopefullywill make even more efficient processing possible.ReferencesElisabeth Breidt and Helmut Feldweg.
1997.
Accessingforeign languages with COMPASS.
Machine Trans-lation, 12(1/2):153?174.Jennifer Brundage, Maren Kresse, Ulrike Schwall, andAngelika Storrer.
1992.
Multiword lexemes: Amonolingual and contrastive typology for NLP andMT.
Technical Report IWBS 232, IBM DeutschlandGmbH, Institut fu?r Wissenbasierte Systeme, Heidel-berg.Ralph Debusmann.
2004.
Multiword expressions asdependency subgraphs.
In Proceedings of the ACL2004 Workshop on Multiword Expressions: Integrat-ing Processing, Barcelona, Spain.Frantz Guenthner and Xavier Blanco.
2004.
Multi-lexemic expressions: an overview.
In ChristianLe`clere; E?ric Laporte; Mireille Piot; Max Silberztein,editor, Syntax, Lexis, and Lexicon-Grammar, vol-ume 24 of Linguistic?
Investigationes Supplementa,pages 239?252.
John Benjamins.Sandro Pedrazzini.
1994.
Phrase Manager: A Systemfor Phrasal and Idiomatic Dictionaries.
Georg OlmsVerlag, Hildeseim, Zu?rich, New York.Ga?bor Pr?sze?ky and Andra?s Fo?ldes.
2005.
An intel-ligent context-sensitive dictionary: A Polish-Englishcomprehension tool.
In Human Language Tech-nologies as a Challenge for Computer Science andLinguistics.
2nd Language & Technology ConferenceApril 21?23, 2005,, pages 386?389, Pozna?, Poland.Ivan Sag, Timothy Baldwin, Francis Bond, Ann Copes-take, and Dan Flickinger.
2002.
Multiword expres-sions: A pain in the neck for NLP.
In Proc.
of the 3rdInternational Conference on Intelligent Text Process-ing and Computational Linguistics (CICLing-2002),pages 1?15, Mexico City, Mexico.Beno?
?t Sagot and Pierre Boullier.
2005.
From raw cor-pus to word lattices: robust pre-parsing processing.Archives of Control Sciences, special issue of selectedpapers from LTC?05, 15(4):653?662.Fre?de?rique Segond and Elisabeth Breidt.
1995.IDAREX: Formal description of German and Frenchmulti-word expressions with finite state technology.Technical Report MLTT-022, Rank Xerox ResearchCentre, Grenoble.Cornelia Tschichold.
2000.
Multi-word units in naturallanguage processing.
Georg Olms Verlag, Hildeseim,Zu?rich, New York.Yi Zhang, Valia Kordoni, Aline Villavicencio, andMarco Idiart.
2006.
Automated multiword expressionprediction for grammar engineering.
In Proceedingsof the Workshop on Multiword Expressions: Identify-ing and Exploiting Underlying Properties, pages 36?44, Sydney, Australia.
Association for ComputationalLinguistics.24
