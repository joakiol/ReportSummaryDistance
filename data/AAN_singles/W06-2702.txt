Annotation and Disambiguation of Semantic Types in BiomedicalText: a Cascaded Approach to Named Entity RecognitionDietrich Rebholz-Schuhmann, Harald Kirsch,Sylvain Gaudan, Miguel ArreguiEuropean Bioinformatics Institute (EBI),Wellcome Trust Genome Campus, Hinxton, Cambridge, UK{rebholz,kirsch,gaudan,arregui}@ebi.ac.ukGoran NenadicSchool of InformaticsUniversity of ManchesterManchester, UKg.nenadic@manchester.ac.ukAbstractPublishers  of  biomedical  journals  in-creasingly  use  XML  as  the  underlyingdocument format.
We present a modulartext-processing pipeline that inserts XMLmarkup  into  such  documents  in  everyprocessing step, leading to multi-dimen-sional markup.
The markup introducedis  used  to  identify  and  disambiguatenamed entities of several semantic types(protein/gene,  Gene  Ontology  terms,drugs  and species)  and to  communicatedata from one module to the next.
Eachmodule  independently  adds,  changes  orremoves markup, which allows for mod-ularization  and  a  flexible  setup  of  theprocessing  pipeline.
We  also  describehow the cascaded approach is embeddedin  a  large-scale  XML-based  application(EBIMed) used for on-line access to bio-medical  literature.
We discuss  the  les-sons  learnt  so  far,  as  well  as  the  openproblems  that  need  to  be  resolved.
Inparticular,  we  argue  that  the  pragmaticand tailored solutions allow for reductionin  the need for overlapping annotations?
although not completely without cost.1 IntroductionPublishers  of  biomedical  journals  have  widelyadopted  XML  as  the  underlying  format  fromwhich other formats,  such as PDF and HTML,are generated.
For example, documents in XMLformat are available from the National Library ofMedicine1 (Medline abstracts and Pubmed2 Cent-ral documents), and from BioMed Central3 (fulltext journal articles).
Other publishers are head-ing  into  the  same  direction.
Such  documentscontain logical markup to organize meta-inform-1 National Library of Medicine, http://www.nlm.nih.gov/2 PubMed, http://www.pubmed.org3 BioMed Central Ltd, http://www.biomedcentral.com/ation such as title, author(s), sections, headings,citations,  references,  etc.
Inside  the  text  of  adocument,  XML is  used  for  physical  markup,e.g.
text in italic or boldface, subscript and super-script  insertions,  etc.
Manually  generated  se-mantic markup is available only on the documentlevel (e.g.
MeSH terms).One of the most distinguished feature of sci-entific biomedical literature is that it contains alarge amount of terms and entities, the majorityof  which are explained in public electronic data-bases.
Terms (such as names of genes, proteins,gene products, organisms, drugs, chemical com-pounds, etc.)
are a key factor for accessing andintegrating  the  information  stored  in  literature(Krauthammer  and  Nenadic,  2004).
Identifica-tion  and  markup  of  names  and  terms  in  textserves several purposes:(1) The users profit from highlighted semantictypes, e.g.
protein/gene, drug, species, and fromlinks to the defining database for immediate ac-cess and exploration.
(2) Identified terms facilitate and improve stat-istical and NLP based text analysis (Hirschmanet al, 2005; Kirsch et al, 2005).In this paper we describe a cascaded approachto named-entity recognition (NER) and markupin biomedicine that is embedded into EBIMed4,an on-line service to access the literature (Reb-holz-Schuhmann  et  al.,  forthcoming).
EBIMedfacilitates  both  purposes  mentioned  above.
Itkeeps the annotations provided by publishers andinserts  XML  annotations  while  processing  thetext.
Named entities from different resources areidentified  in  the  text.
The  individual  modulesprovide annotation of protein names with uniqueidentifiers, disambiguation of protein names thatare  ambiguous  acronyms,  annotation  of  drugs,Gene Ontology5 terms and species.
The identi-fication of protein named entities can be furtherused in an alternative pipeline to identify events4 EBIMed, www.ebi.ac.uk/Rebholz-srv/ebimed5 GO, Gene Ontology, http://geneontology.org, (GO con-sortium, 2005).11such as  protein-protein interactions  and associ-ations between terms and mutations (Blaschke etal., 1999; Rzhetsky et al, 2004; Rebholz-Schuh-mann  et  al.,  2004;  Nenadic  and  Ananiadou,2006).The rest of the paper is organised as follows.In  Section  2  we  briefly  discuss  problems withbiomedical NER.
The cascaded approach and anonline text mining system are described in sec-tions 3 and 4 respectively.
We discuss the les-sons learnt from the on-line application and re-mainig open problems in Section 5, while con-clusions are presented in Section 6.2 Biomedical Named Entity RecognitionTerms and named-entities (NEs) are the meansof scientific communication as they are used toidentify  the  main  concepts  in  a  domain.
Theidentification  of  terminology in  the  biomedicalliterature is one of the most challenging researchtopics  both  in  the  NLP  and  biomedical  com-munities (Hirschman et al,  2005; Kirsch et al,2005).Identification  of  named  entities  (NEs)  in  adocument can be viewed as a three-step proced-ure (Krauthammer and Nenadic, 2004).
In thefirst step, single or multiple adjacent words thatindicate the presence of domain concepts are re-cognised (term recognition).
In the second step,called  term categorisation, the recognised termsare classified into broader domain classes (e.g.
asgenes, proteins, species).
The final step is  map-ping of terms into referential databases.
The firsttwo steps are commonly referred to as named en-tity recognition (NER).One of the main challenges in NER is a hugenumber of new terms and entities that appear inthe  biomedical  domain.
Further,  terminologicalvariation, recognition of boundaries of multiwordterms, identification of nested terms and ambigu-ity of terms are the difficult issues when mappingterms from the literature to biomedical databaseentries  (Hirschman  et  al.,  2005;  Krauthammerand Nenadic, 2004).On one hand, NER in the biomedical domain(in particular  the recognition part)  profits  fromlarge,  freely available terminological  resources,which  are  either  provided  as  ontologies  (e.g.Gene Ontology, ChEBI6, UMLS7) or result frombiomedical  databases containing named entities(e.g.
UniProt/Swiss-Prot8).
On  the  other  hand,combining sets of terms from different termino-6 ChEBI, Chemical Entities of Biological Interest,http://www.ebi.ac.uk/chebi/m7  UMLS, Unified Medical Language Systemhttp://www.nlm.nih.gov/research/umls/, (Browne et al,2003).logical resources leads to naming conflicts suchas homonymous use of names and terminologicalambiguities.
The most obvious problem is whenthe same span of text is assigned to different se-mantic types (e.g.
?rat?
denotes a species and aprotein).
In this case, there are three types of am-biguities:(Amb1) A name is used for different entries inthe  same database,  e.g.
the  same protein nameserves  for  a  given  protein  in  different  species(Chen et al, 2005).
(Amb2) A name is used for entries in multipledatabases and thus represents different types, e.g.?rat?
is a protein and a species.
(Amb3) A name is not only used as a biomed-ical term but also as part of common English (incontrast  to  the  biomedical  terminology),  e.g.?who?
and  ?how?,  which  are  used  as  proteinnames.In some cases (i.e.
Amb2), broader classifica-tion can help to disambiguate between differententries  (e.g.
differentiate  between  ?CAT?
as  aprotein, animal or medical device).
However, itis ineffective in situations where names can bemapped to several different entries in the samedata  source.
In  such  situations,  disambiguationon the resource level is needed (see, for example,(Liu et al, 2002) for disambiguation of terms as-sociated with several entries in the UMLS Meta-thesaurus).In many solutions, the three steps in biomedic-al NER (namely, recognition, categorisation andmapping  to  databases)  are  merged  within  onemodule.
For example, using an existing termino-logical database for recognition of NEs, effect-ively  leads  to  complete  term  identification  (incases where there are no ambiguities).
Some re-searchers, however, have stressed the advantagesof tackling each step as a separate task, pointingat different sources and methods needed to ac-complish each of the subtasks (Torii et al, 2003;Lee et al, 2003).
Also, in the case of modularisa-tion,  it  is  easier  to  integrate  different  solutionsfor each specific problem.
However, it has beensuggested  that  whether  a  clear  separation  intosingle steps would improve term identification isan  open  issue  (Krauthammer  and  Nenadic,2004).
In this paper we discuss a cascaded, mod-ular approach to biomedical NER.3 Biomedical  NER based on XML an-notation:  Modules in a pipelineIn this Section we present a modular approach toidentification, disambiguation and annotation of8 UniProt, http://www.ebi.uniprot.org/, (Bairoch et al,2005); Swiss-Prot, http://ca.expasy.org/sprot/12several  biomedical  semantic  types  in  the  text.Full identification of NEs and resolving ambigu-ities in particular, may require a full parse tree ofa  sentence  in  addition  to  the  analysis  of  localcontext  information.
On  the  other  hand,  fullparse trees may be only derivable after NEs areresolved.
Methods to efficiently overcome theseproblems are not yet available today and in orderto come up with an applicable solution,  it  wasnecessary to choose a more pragmatic approach.We  first  discuss  the  basic  principles  anddesign of the processing pipeline, which is basedon  a  pragmatic  cascade  of  modules,  and  thenpresent each of the modules separately.3.1 Modular  design  of  a  text  processingpipelineOur methodology is based on the idea of separat-ing the process into clearly defined functions ap-plied one after  another  to  text,  in  a processingpipeline characterized  by  the  following  state-ments:(P1)  The complete  text  processing task con-sists of separate and independent modules.
(P2)  The  task  is  performed  by  running  allmodules exactly once in a fixed sequence.
(P3) Each module operates continuously on aninput  stream and  performs  its  function  onstretches or  ?windows?
of text  that  are usuallymuch smaller than the whole input.
As soon as awindow is  processed,  the module  produces  theresulting output.
(P4) After the startup phase, all modules runin parallel.
Incoming requests for annotation areaccepted by a master process that ensures that allrequired modules are approached in the right or-der.
(P5) Communication of information betweenthe modules is strictly downstream and all meta-information is contained in the data stream itselfin the form of XML markup.An instance of a processing pipeline (which isactually  embedded in  EBIMed)  is  presented inFigure 1.
The modules M-1 to M-8 are run in thisorder,  and  no  communication  between them isneeded apart  from streaming the  text  from theoutput  of  one  module  to  the  input  of  another.The text contains the meta-data as XML markup.The modules are described below.Figure 1.
A processing pipeline embedded inEBIMedAlthough  this  is  the  standard  pipeline  forEBIMed, it is possible to re-arrange the modulesto  favour  identification  of  specific  semantictypes.
More precisely, in our modular approach,after identification of a term in the text, disam-biguation only decides whether the term is of thattype or not.
If it is not, the specific annotation isremoved and left to the downstream modules totag the term differently.
While this  requires  nidentification steps, adding identification of newtypes is independent of modules already present.However, the prioritization of semantic types isenforced  by  the  order  of  the  associated  termidentification modules.3.2 Input documents and pre-processingInput  documents  are  XML-formatted  Medlineabstracts as provided from the National Libraryof  Medicine  (NLM).
The  XML  structure  ofMedline abstracts includes meta information at-tached  to  the  original  document,  such  as  thejournal, author list, affiliations, publication datesas well as annotations inserted by the NLM suchas  creation  date  of  the  Medline  entry,  list  ofchemicals associated with the document, as wellas related MeSH headings.The  text  processing  modules  are  only  con-cerned with the document  parts  that  consist  ofnatural  language  text.
In  Medline  abstracts,these stretches of text are marked up as  Article-Title and AbstractText.
Inside these elements weadd  another  XML element,  called  text,  to  flagnatural language text independent of the originalinput  document format  (module  M-1 in  Figure1).
Thereby the subsequent text processing mod-ules become independent of the document struc-ture: other document types, e.g.
BioMed Central13full  text  papers,  can  easily  be  fed  into  thepipeline providing a simple adaptation of the in-put pre-processor.As  a  final  pre-processing  step  (M-2),  sen-tences  are  identified  and  marked  using  the<SENT> tag.3.3 Finding protein names in textFor identification of protein names (M-3 in Fig-ure  1),  we  use  an  existing  protein  repository.UniProt/Swiss-Prot  contains  roughly  190,000protein/gene  names  (PGNs)  in  database  entriesthat also annotate proteins with protein function,species  and  tissue  type.
PGNs  fromUniProt/Swiss-Prot are matched with regular ex-pressions which account for morphological vari-ability.
These terms are tagged using the <z:uni-prot> tag (see Figure 2).
The list  of  identifiers(ids attribute) contains the accession numbers ofthe mentioned protein in the UniProt/Swiss-Protdatabase.
All  synonyms  from a  database  entryare kept,  and in the case of homonymy, whereone name refers to several  database entries,  allaccession numbers are stored.
The pair consist-ing of the database name and the accession num-ber(s) forms a unique identifier (UID) that rep-resents  the  semantics  of  the  term  and  can  betrivially  rewritten  into  a  URL  pointing  to  thedatabase entry.
Each entity also contains the at-tribute  fb which  provides  the  frequency of  theterm in the British National Corpus (BNC).3.4 Resolving (some) protein name ambigu-itiesThe approach to finding names that we presentedcan create three types of ambiguities mentionedabove in Section 2.In the current implementation,  Amb1 (ambi-guity  within a  given resource)  is  not  resolved.Rather, the links to  all entries in the same data-base are maintained.
Amb2 and Amb3 are par-tially  resolved  for  protein/gene  names  as  ex-plained below (steps M-4 and M-5).
Note thatAmb2 is  resolved  on  ?first-come  first-serve?basis, meaning that an annotation introduced byone module is not overwritten by a subsequentmodule.Many protein names are indeed or at least looklike abbreviations.
It has been proved that ambi-guities of abbreviations and acronyms found inMedline abstracts can be automatically resolvedwith high accuracy  (Yu et  al.,  2002;  Schwartzand Hearst, 2003; Gaudan et al, 2005).<SENT sid=?2?
pm=?.
?> AberrantWnt signaling, which results frommutations of either <z:uniprot fb=?0?
ids=?P26233,P35222,P35223,P35224,Q02248, Q9WU82?>beta-catenin</z:uniprot> or adenomat-ous polyposis coli (<z:uniprot fb=?28?
ids=?P25054?>APC </z:uni-prot>), renders <z:uniprot fb=?0?
ids= ?P26233,P35222, P35223,P35224,Q02248, Q9WU82?> beta-catenin</z:uniprot> resistant todegradation, and has been associ-ated with multiple types of humancancers</SENT>Figure 2.
XML annotation of UniProt/Swiss-Protproteins  .In our approach (Gaudan et al, 2005) all ac-ronyms from Medline have been gathered togeth-erwith their expanded forms, called senses.
In ad-dition all morphological and syntactical variantsof a known expanded form have been extractedfrom Medline.
Expanded forms were  categor-ised  into  classes  of  semantically  equivalentforms.
Feature  representations  of  Medline  ab-stracts containing the acronym and the expandedform were used to train support vector machines(SVMs).
Disambiguation of acronyms to theirsenses in Medline abstracts based on the SVMswas achieved at an accuracy of above 98%.
Thiswas independent from the presence of the expan-ded form in the Medline abstract.
This disam-biguation solution lead to the solution integratedinto the processing pipeline.A potential protein has to be evaluated againstthree possible outcomes: either a name is an ac-ronym and can be resolved as (a) a protein or (b)not a protein, or (c) a name cannot be resolved.To  distinguish  cases  (a)  and  (b)  the  documentcontent  is  processed  to  identify  the  expandedform of the acronym and to check whether theexpanded form refers to a protein name.
In caseof (c), the frequency of the name in the  BritishNational  Corpus  (BNC)  is  compared  with  athreshold.
If  the  frequency is  higher  than  thethreshold, the name is assumed not to be a pro-tein name.
The threshold was chosen not to ex-clude important protein names that have alreadyentered common English (such as insulin).The disambiguation module (M-4) runs on theresults of the previous module that performs pro-tein-name  matching  and  indiscriminately  as-sumes each match to  be  a  protein name.
The14module  M-4 marks  up all  known acronym ex-pansions in the text and combines the two piecesof  information:  a  marked  up  protein  name  islooked up in the list of abbreviations.
If the ab-breviation has an expansion that is marked up inthe vicinity and denotes a protein name, the ab-breviation is verified as a protein name (case (a)above)  by  adding  an  attribute  with  a  suitablevalue to the protein tag.
The annotation also in-cludes  the  normalised  form  of  the  acronym,which serves as an identifier for further databaselookups.
Similarly, if the expansion is clearly nota protein name, the same attribute is used withthe according value.Finally, the module M-5 removes the proteinname markup if the name is either (b) clearly nota  protein,  or  in case (c)  has a BNC frequencybeyond the threshold.3.5 Finding other names in textFurther modules (M-6, M-7 and M-8 in Fig.
1)perform  matching  and  markup  for  drugs  fromMedlinePlus9,  species  from Entrez  Taxonomy10and terms from the Gene Ontology (GO).
As forproteins,  the  semantic  type  is  signified  by  theelement name and a unique ID referencing thesource database is added as an attribute.
Disam-biguation for these names and terms is, however,not yet available.Finding GO ontology terms in text can be dif-ficult, as these names are typically ?descriptions?rather than real terms (e.g.
GO:0016886,  ligaseactivity,  forming  phosporic  ester  bonds),  andtherefore  are  not  likely  to  appear  in  text  fre-quently  (McCray  et  al.,  2002;  Verspoor  et  al.,2003; Nenadic et al, 2004).Figure 3 shows an example of a sentence an-notated for semantic types and POS informationusing the pipeline from the Figure 1.
Note thatPOS tags are inside the type tags although typeannotation has been performed prior to the POStagging.3.6 Other modules in the pipelineThe modular text processing pipeline of EBIMedis currently being extended to include other mod-ules.
The part-of-speech tagger (POS-tagger) is aseparate module and combines tokenization andPOS annotation.
It leaves previously annotatedentities  as  single  tokens,  even  for  multi-wordterms,  and  assigns  a  noun  POS  tag  to  everynamed entity.9 MedlinePlus, National Library of Medicine, http://www.n-lm.nih.gov/medlineplus/10 Entrez Taxonomy, National Center for Biotechnology In-formation, http://www.ncbi.nlm.nih.gov/entrez/Shallow parsing is introduced as another layerin the multidimensional annotation of biomedicaldocuments.
After the NER modules, the shallowparsing modules extract events of protein-proteininteractions.
Shallow parsing basically annotatesnoun  phrases  (NP)  and  verb  groups.
Nounphrases  that  contain  a  protein  name  receive  amodified NP tag (Protein-NP) to simplify findingof  protein-protein interaction phrases.
Patternsof Protein-NPs in conjunction with selected verbgroups are annotated as final result.<abs id='1' db='unknown'><text><SENT sid="0" pm=".
"><tagged><tok><sur> </sur><lem cat="bos"mor=""></lem></tok><z:uniprot fb="0" ids="P50144,P50145"><tok><sur>Cholecystokinin</sur><lemcat="n" mor=":e">cholecystokinin</lem></tok> </z:uniprot><tok><sur>and</sur><lem cat="cnj"mor=":K">and</lem></tok><z:uniprot fb="4" ids="O02686,P01350"><tok><sur>gastrin</sur><lem cat="n"mor=":e">gastrin</lem></tok></z:uniprot><tok><sur>differed</sur><lem cat="v"mor=":V:P">differ</lem></tok><tok><sur>in</sur><lem cat="prep"mor="">in</lem></tok><tok><sur>stimulatin</sur><lem cat="n"mor=":e:m">stimulatin</lem></tok><z:uniprot fb="4" ids="O02686,P01350"><tok><sur>gastrin</sur><lem cat="n"mor=":e">gastrin</lem></tok></z:uniprot><z:go ids="GO:0046903"onto="biological_process"><tok><sur>secretion</sur><lem cat="n"mor=":e">secretion</lem></tok></z:go><tok><sur>in</sur><lem cat="prep"mor="">in</lem></tok><z:species ids="9986"><tok><sur>rabbit</sur><lem cat="n"mor=":e">rabbit</lem></tok></z:species><tok><sur>gastric</sur><lem cat="adj"mor=":b">gastric</lem></tok><tok><sur>glands</sur><lem cat="n"mor=":m">gland</lem></tok><tok><sur>.</sur><lem cat="eos"mor=""></lem></tok></tagged></SENT></text></abs>Figure 3.
XML annotation of a sentence con-taining different semantic types and POS tags.154 EBIMedThis cascaded approach to NER has been incor-porated into EBIMed, a system for mining bio-medical literature.EBIMed is a service that combines documentretrieval  with  co-occurrence-based  summariza-tion  of  Medline  abstracts.
Upon  a  keywordquery, EBIMed retrieves abstracts from EMBL-EBI?s installation of Medline and filters for bio-medical terminology.
The final result is organ-ised in a view displaying pairs of concepts.
Eachpair co-occurs in at least one sentence in the re-trieved  abstracts.
The  findings  (e.g.UniProt/Swiss-Prot  proteins,  GO  annotations,drugs and species) are listed in conjunction withthe  UniProt/Swiss-Prot  protein  that  appears  inthe same biological context.
All terms, retrievedabstracts and extracted sentences are automatic-ally linked to contextual information, e.g.
entriesin biomedical databases.The annotation modules are also available viaHTTP  request  that  allows  for  specification  ofwhich modules to run (cf.
Whatizit11).
Note thatwith  suitable  pre-processing  to  insert  the<text> tags, even well formed HTML can beprocessed.5 Lessons Learnt so farOur  text  mining  solution  EBIMed successfullyapplies multi-dimensional markup in a pipelineof text processing modules to facilitate online re-trieval  and mining of  the  biomedical  literature.The final goal is semantic annotation of biomed-ical  terms  with  UID,  and  ?
in  the  next  step  ?shallow parsing based text  processing for  rela-tionship  identification.
The  following  lessonshave been learnt during design, implementationand use of our system.The end-users expect to see the original docu-ment at all times and therefore we have to rely onproper  formatting  of  the  original  and  the  pro-cessed text.
Consequently, when adding semant-ic information, all  other meta-information mustbe  preserved  to  allow  for  proper  rendering  assimilar  as  possible  to  the  original  document.Therefore,  our  approach  does  not  remove  anypre-existing annotations supplied by the publish-er, i.e.
the original document could be recoveredby removing all introduced markup.All modules only process sections of the docu-ment containing the natural language text, whichimproves modularisation.
The document struc-ture is irrelevant to single modules and facilitatesreading  and  writing  to  the  input  and  output11 http://www.ebi.ac.uk/Rebholz-srv/whatizit/pipestream, respectively, without taking notice of thebeginning and/or the end of a single document.All  information exchanged between modules iscontained in the data stream.
This facilitates run-ning all the modules in a given pipeline in paral-lel, after an initial start-up.
Even more, the mod-ules can be distributed on separate machines withno implementation overheads for the communic-ation over the network.
Adding more moduleswith their own processors does not significantlyimpair overall runtime behaviour for large data-sets and leads to fast text processing throughputcombined with a reasonable ?
albeit not yet per-fect ?
quality, which allows for new and prac-tically  useful  text  mining  solutions  such  asEBIMed.Modularisation  of  the  text  processing  tasksleads to improved scalability and maintainabilityinherent to all modular software solutions.
In thecase of the presented solution, the modular ap-proach allows for a selection of the setup and or-dering of the modules, leading to a flexible soft-ware design, which can be adapted to differenttypes of documents and which allows for an (in-cremental)  replacement  of  methods  to  improvethe quality of the output.
This can also facilitateimproved  interoperability  of  XML-based  NLPtools.Semantic  annotation  of  named  entities  andterms  blends  effectively  with  logical  markup,simply because there is no overlap between doc-ument  structure  and  named  entities  and  terms.On the other hand, some physical markup (suchas <i> in the BMC corpus) is in some documentsused to highlight names or terms of a semantictype, e.g.
gene names.
With consistent semanticmarkup, this kind of physical tags could be aban-doned to be replaced by external style informa-tion.
However, some semantic annotations stillmust be combined with physical markup as in theterm B-sup that initially was annotated by a pub-lisher  as  <b>B</b>-sup and  that  now  (afterNER)  would  be  marked  as<z:uniprot><b>B</b>-sup</z:uniprot>.Matching  of  names  of  a  semantic  type,  e.g.protein/gene,  is  done on a ?longest  of  the left-most?
basis and prioritization of semantic typesis enforced by the order of the term identificationmodules.
Both  choices  lead  to  the  result  thatoverlapping annotations are preempted and thatannotations  automatically  endorse  a  link  to  aunique identifier, unless there are ambiguity onthe  level  of  biomedical  resource..
This  type ofambiguity is not resolved in our text processingsolution.
Instead, for a given biomedical term,links to all  entries referring to this  term in thesame database are kept.16One approach to the disambiguation of Amb2(multiple resources)  and  Amb3 (common Eng-lish words) ambiguities would be to integrate allterms into  one massive dictionary,  identify  thestrings in the text and then disambiguate betweenn semantic types.
This would require the disam-biguation module be trained to distinguish all se-mantic types.
If a new type is added, the disam-biguation  module  would  need  to  be  retrained,which limits the possibilities for expansion andtailoring of text mining solutions.Open Problems: We consider two categories ofopen  problems:  NLP-based  and  XML-basedproblems.Bio  NLP-based  problems include  challengesin recognition and disambiguation of biomedicalnames in text.
One of the main issues in our ap-proach  is  annotation  of  compound  and  nestedterms.
The  presented  methodology can  lead  tothe following annotations:1. the head noun belongs to the same semantictype, but is not part of the protein name (asrepresented in the terminological resource):<z:uniprot>Wnt-2</z:uniprot> protein2.
the head noun belongs to a different semantictype not covered by any of the available ter-minological resources:<z:uniprot>WNT8B</z:uniprot> mRNA3.
a compound term consists of terms from dif-ferent semantic types, but its semantic type isnot known:<z:uniprot  fb=?0?
ids=??
?>beta-catenin</z:uniprot>  <z:go  ids=??
?onto= ??
?>binding </z:go> domainTherefore,  an important  open problem is theannotation of nested terms where an entity nameis part of a larger term that may or may not be inone of the  dictionaries.
Once the  inner term ismarked up with inline annotation, simple stringpattern matching (utilised in our approach) can-not be used easily to find the outer, because theXML structure is in the way.
A more effectivesolution could be  a combination of inline  withstand-off annotation.Further, in a more complex case such as inhtr-wnt-<uniprot>A protein</uniprot>neither wnt nor htr refer to a single protein butto a protein family, and whereas A protein isa known protein, this is not the case for wnt-A.The most obvious annotation <uniprot>htr-wnt-A protein</uniprot> cannot be re-solved  by  the  terminology  from  theUniProt/Swiss-Prot  database,  as  it  simply  doesnot exist in the database.More work is also needed on disambiguationof  terms  that  correspond  to  common  Englishwords.Annotation (i.e.
XML)-based problems mainlyrelate to an open question whether different tagnames should be used for various semantic types,or semantic types should be represented via at-tributes  of  a  generalised  named entity  or  termtag.
In EBIMed, specific tags are used to denotespecific semantic types.
A similar challenge ishow to treat and make use of entities such as in-line references, citations and formulas (typicallyannotated in journals), which are commonly ig-nored by NLP modules.The most important issue, however, is how torepresent still unresolved ambiguities, so that an-notations might be modified at a later stage, e.g.when POS information or even the full parse treeis available.
This also includes the issues on kindof information that should be made available forlater  processing.
For  example,  as  (compound)term identification is done before POS tagging,an  open  question  is  whether  POS  informationshould be assigned to individual components of acompound term (in addition to the term itself),since this information could be used to completeNER or adjust the results in a later stage.6 ConclusionsIn  this  paper,  we  have described  a  pipeline  ofXML-based modules for  identification and dis-ambiguation  of  several  semantic  types  of  bio-medical  named entities.
The pipeline  processesand semantically enriches documents by adding,changing  or  removing  annotations.
More  pre-cisely, the documents are augmented with UIDsreferring to referential databases.
In the courseof the processing, the number of annotated NEsincreases and the quality of  the annotation im-proves.
Thus, one of the main issues is to repres-ent still  unresolved ambiguities consistently, sothat  the  following  modules  can  perform  bothidentification  and  disambiguation  of  new  se-mantic types.
As subsequent modules try to addnew  semantic  annotations,  prioritization  of  se-mantic types is enforced by the order of the termidentification modules.We have shown that such approach can be em-ployed in a real-world, online information min-ing  system EBIMed.
The  end-users  expect  toview the original layout of the documents at alltimes, and thus the solution needs to provide anefficient multidimensional markup that preservesand combines existing markup (from publishers)with semantic NLP-derived tags.
Since, in thebiomedical  domain,  it  is  essential  to  provide17links from term and named-entity occurrences toreferential databases, EBIMed provides identific-ation and disambiguation of such entities and in-tegrates text with other knowledge sources.The existing solution to annotate only longestnon-overlapped entities is useful for real worlduse scenarios, but we also need ways to improveannotations  by  representing  nested  and  over-lapped terms.AcknowledgementsThe development of EBIMed is supported by theNetwork of Excellence ?Semantic Interoperabil-ity  and  Data  Mining  in  Biomedicine?
(NoE507505).
Medline  abstracts  are provided fromthe National  Library of Medicine (NLM, Beth-esda,  MD,  USA)  and  PubMed  is  the  premierWeb portal to access the data.Sylvain Gaudan is supported by an ?E-STAR?fellowship funded by the EC?s FP6 Marie CurieHost fellowship for Early Stage Research Train-ing  under  contract  number  MESTCT-  2004-504640.
Goran Nenadic acknowledges supportedfrom the UK BBSRC grant ?Mining Term Asso-ciations  from Literature  to  Support  KnowledgeDiscovery in Biology?
(BB/C007360/1).EBI thanks IBM for the grant of an IBM eS-erver BladeCenter for use in its research work.ReferencesA.
Bairoch, R. Apweiler, C.H.
Wu, W.C. Barker, B.Boeckmann, S. Ferro, E. Gasteiger, H. Huang, R.Lopez, M. Magrane, M.J. Martin, D.A.
Natale, C.O?Donovan, N. Redaschi and L.S.
Yeh.
2005.
TheUniversal  Protein  Resource  (UniProt).
NucleicAcids Research, 33(Database issue):D154-9.C.
Blaschke,  M.A.
Andrade,  C.  Ouzounis  and  A.Valencia.
1999.
Automatic extraction of biologicalinformation from scientific text: Protein-protein in-teractions.
Proc.
ISMB, 7:60?7.A.C.
Browne, G. Divita, A.R Aronson and A.T. Mc-Cray.
2003.
UMLS language and vocabulary tools.AMIA Annual Symposium Proc., p. 798.L.
Chen, H. Liu and C. Friedman.
2005.
Gene nameambiguity of eukaryotic nomenclature.
Bioinform-atics, 21(2):248-56S.
Gaudan,  H.  Kirsch  and  D.  Rebholz-Schuhmann.2005.
Resolving abbreviations to their  senses inMedline.
Bioinformatics, 21(18):3658-64GO Consortium.
2006.
The Gene Ontology (GO)project  in  2006.
Nucleic  Acids  Research,34(suppl_1):D322-D326.L.
Hirschman, A. Yeh, C. Blaschke and A. Valencia.2005.
Overview  of  BioCreAtIvE:  critical  assess-ment of information extraction for biology.
BMCBioinformatics, 6 Suppl 1:S1.H.
Kirsch,  S.  Gaudan  and  D.  Rebholz-Schuhmann.2005.
Distributed modules for text annotation andIE applied to the biomedical domain.
Internation-al  Journal  Medical  Informatics.
(doi:10.1016/j.ijmedinf.2005.06.011)M. Krauthammer and G. Nenadic.
2004.
Term identi-fication in the biomedical literature.
Journal Bio-medical Informatics, 37(6):512-26.K.
Lee,  Y.  Hwang,  and  H.  Rim.
2003.
Two-PhaseBiomedical  NE  Recognition  based  on  SVMs.Proc.
of NLP in Biomedicine, ACL 2003. p. 33-40.H.
Liu, S.B.
Johnson, and C. Friedman, 2002.
Auto-matic resolution of ambiguous terms based on ma-chine  learning  and  conceptual  relations  in  theUMLS.
J  Am Med  Inform Assoc,  2002.
9(6):  p.621-36.A.
McCray, A. Browne and O. Bodenreider O.
2002.The  lexical  properties  of  Gene  ontology  (GO).Proceedings of AMIA 2002.
2002:504-8.G.
Nenadic, I. Spasic, and S. Ananiadou.
2005.
Min-ing  Biomedical  Abstracts:  What?s  in  a  Term?,LNAI Vol.
3248, pp.
797-806, Springer-VerlagG.
Nenadic  and  S.  Ananiadou.
2006.
Mining  Se-mantically Related Terms from Biomedical Literat-ure.
ACM Transactions on ALIP, 01/2006 (SpecialIssue Text Mining and Management in  Biomedi-cine)xD.
Rebholz-Schuhmann, H. Kirsch, M. Arregui,  S.Gaudan, M. Rynbeek and P. Stoehr.
(forthcoming)Identification of proteins and their biological con-text  from  Medline:   EBI?s  text  mining  serviceEBIMed.D.
Rebholz-Schuhmann,  S.  Marcel,  S.  Albert,  R.Tolle, G. Casari and H. Kirsch.
2004.
Automaticextraction of  mutations  from Medline and cross-validation with OMIM.
Nucleid Acids Research,32(1):135?142.A.
Rzhetsky, I. Iossifov, T. Koike, M. Krauthammer,P.
Kra, et al  2004.
GeneWays: A system for ex-tracting,  analyzing,  visualizing,  and  integratingmolecular  pathway  data.
Journal  Biomedical  In-formatics, 37:43?53.A.S.
Schwartz and M.A.
Hearst.
2003.
A simple al-gorithm for identifying abbreviation definitions inbiomedical text.
Proceedings of Pac Symp Biocom-put.
2003. p. 451-62.M.
Torii, S. Kamboj and K. Vijay-Shanker.
2003.
AnInvestigation  of  Various  Information  Sources  forClassifying  Biological  Names.
Proceedings  ofNLP in Biomedicine, ACL 2003. p. 113-120CM Verspoor, C. Joslyn and G. Papcun.
2003.
TheGene  ontology  as  a  source  of  lexical  semanticknowledge for  a  biological  natural  language pro-cessing  application.
Proc.
of  Workshop  on  TextAnalysis and Search for Bioinformatics, SIGIR 03H.
Yu, G. Hripcsak and C. Friedman.
2002.
Mappingabbreviations to full forms in biomedical articles.
JAm Med Inform Assoc, 2002.
9(3): p. 262-72.18
