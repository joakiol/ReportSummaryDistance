Optimality Theory and the GenerativeComplexity of Constraint ViolabilityRober t  Frank"Johns Hopkins UniversityG iorg io  Satta tUniversit~i di PadovaIt has been argued that rule-based phonological descriptions can uniformly be expressed as map-pings carried out by finite-state transducers, and therefore fall within the class of rational relations.If this property of generative capacity is an empirically correct characterization ofphonologicalmappings, it should hold of any sufficiently restrictive theory of phonology, whether itutilizes con-straints or rewrite rules.
In this paper, we investigate he conditions under which the phonologicaldescriptions that are possible within the view of constraint interaction embodied in OptimalityTheory (Prince and Smolensky 1993) remain within the class of rational relations.
We show thatthis is true when GEN is itself a rational relation, and each of the constraints distinguishes amongfinitely many regular sets of candidates.1.
IntroductionAnalyses within generative phonology have traditionally been stated in terms of sys-tems of rewrite rules, which, when applied in the appropriate sequence, produce asurface form from an underlying representation.
As first pointed out by Johnson(1972), the effects of phonological rewrite rules can be simulated using only finite-state machinery, with iterative application accomplished by sending the output fromone transducer to the input of the next, a process that can be compiled out into a singletransducer (Kaplan and Kay 1994).
1Using this insight, a vast majority of computa-tional implementations of phonological rule systems have been done using finite-statetransducers or extensions thereof (Sproat 1992).Recently, there has been a shift in much of the work on phonological theory, fromsystems of rules to sets of well-formedness constraints (Paradis 1988, Scobbie 1991,Prince and Smolensky 1993, Burzio 1994).
This shift has, however, had relatively littleimpact upon computational work (but see Bird and Ellison 1994).
In this paper, webegin an examination of the effects of the move from rule-based to constraint-basedtheories upon the generative properties of phonological theories.
Specifically, we willfocus our efforts on the issue of whether the widely adopted constraint-based viewknown as Optimality Theory (OT) may be instantiated in a finite-state transducer.
2 OT* Department of Cognitive Science, 3400 N. Charles Street, Baltimore, MD 21218.
E-mail:rfrank@cogsci.jhu.edu.
This author is also affiliated with the Center for Language and SpeechProcessing, Johns Hopkins University.f Dipartimento di Elettronica ed Informatica, Via Gradenigo 6/a, 1-35131 Padova, Italy.
E-mail:satta@dei.unipd.it.
Part of the present research was done while this author was visiting the Center forLanguage and Speech Processing, Johns Hopkins University.1 An alternative to composition of  transducers involves running multiple rule transducers in parallel,producing so-called two-level phonological systems (Koskenniemi 1984).
See Barton, Berwick, andRistad (1987) for discussion of space and time complexity issues.2 We are aware of two papers that study related matters.
Ellison (1994) addresses the question ofQ 1998 Association for Computational LinguisticsComputational Linguistics Volume 24, Number 2raises a particularly interesting theoretical question in this context: it allows the speci-fication of a ranking among the constraints and allows lower-ranked constraints to beviolated in order for higher-ranked constraints to be satisfied.
This violability propertymeans that certain well-known computational techniques for imposing constraints arenot directly applicable.
Our study can be seen, therefore, as the beginnings of an in-vestigation of the generative complexity of constraint ranking and violability.
In thispaper, we present a general formalization of OT that directly embodies that theory'snotion of constraint violability.
We then study the formal properties of one particularcase of this general formalization i  which the mapping from input to possible outputforms, GEN, is representable as a finite-state transducer, and where each constraint isrepresented by means of some total function from strings to non-negative integers,with the requirement that the inverse image of every integer be a regular set.
Thesetwo formal assumptions are sufficiently generous to allow us to capture most of thecurrent phonological analyses within the OT framework that have been presented inthe literature.
We prove that the generative capacity of the resulting system does notexceed that of the class of finite-state transducers precisely when each constraint hasa finite codomain, i.e., constraints may distinguish among only a finite set of equiv-alence classes of candidates.
As will be discussed in Section 6, this result is optimalwith respect o the finite codomain assumption, in the sense that dropping this as-sumption allows the representation f relations that cannot be implemented by meansof a finite-state transducer (the latter fact has been shown to us by Markus Hiller, andwill be discussed here).
Before proceeding with the discussion of our result, however,we describe the rudiments of OT and introduce some technical notions.2.
Basics of OTAs in derivational systems, the general form of phonological computation in OT pro-ceeds from an underlying representation (UR).
3 Such a UR is fed as input to the func-tion OEN, which produces as output the set of all possible surface realizations (SRs)for this UR, called the candidate set.
The notion of a possible SR, as realized in Princeand Smolensky (1993), is governed by the containment condition, requiring any SRoutput by GEN to include a representation f the UR as a (not necessarily contiguous)subpart.
Thus, an SR must at a minimum include all of the structure that is specifiedin the UR, but may also include extra structure absent from the UR, called epentheticstructure.
This is not to say that all parts of the input are necessarily pronounced atthe surface.
Rather, the analogue of "deletion" may occur by marking that part of theSR corresponding to the deleted material as unparsed, meaning that it is not visibleto the phonetic interface.The candidate set produced by GEN for any UR will in general be infinite, as thereis no bound on the amount of epenthetic material that may be added to the UR to pro-whether the constraint satisfaction problem for a specific input form can be compiled into a finite-stateautomaton.
He provides an algorithm to produce anondeterministic finite-state automaton thatrepresents the set of winning candidates for any particular underlying form given finite-staterepresentations f the input and the constraints.
We are, however, interested in the more generalquestion of whether the input-output mapping specified by OT for the class of inputs as a whole canbe simulated with finite-state machinery.
Another elated study is that of Tesar (1995), who shows howthe set of optimal output forms can be efficiently computed using a dynamic programming technique.Tesar does not, however, address the question of the generative complexity of the mappings hisalgorithm computes.3 Length constraints prevent us from presenting a more comprehensive ntroduction to OT.
For furtherdiscussion of the formal structure of the model and its empirical consequences, see Prince andSmolensky (1993) and references cited therein.308Frank and Satta Constraint Violabilityduce the SR.
The core of the OT machinery is devoted to choosing among the membersof this candidate set to determine which is the actual SR. To do this, OT imposes a set ofwell-formedness constraints on the elements of the candidate set.
Note, however, thatthese constraints are not imposed conjunctively, meaning that the "winning" SR neednot, and most often will not, satisfy them all.
Instead, OT allows for the specificationof a language-particular ranking among the constraints, reflecting their relative im-portance.
The candidate SRs are evaluated with respect o the constraints in a numberof stages.
At each stage, the entire candidate set is subjected to one of the constraints,the stage at which a constraint is applied being determined by the specified constraintranking.
4There are two possible outcomes of such an evaluation.
The first arises whensome members of the candidate set violate the constraint, but others do not.
In thiscase, the constraint permits us to distinguish among the members of the candidateset: those that do not satisfy the constraint are eliminated from the candidate set andare not considered in subsequent constraint evaluation.
(Alternatively, if a constraintcan be violated multiple times by a single SR, the relevant evaluation compares thenumber of violations incurred by each of the SRs in the candidate set.
Candidates withthe fewest violations are preferred and those with more violations are eliminated.)
Thesecond possible outcome from a constraint evaluation ensues when all of the membersof the candidate set violate the constraint o the same degree, perhaps massively orperhaps not at all.
When this happens, the constraint does not help us in narrowingdown the candidate set.
Hence, no candidates are eliminated from the candidate setand violations of the constraint do not block any of them from being considered fur-ther to be the actual SR. At the end of the last stage, i.e., when all constraints havebeen applied, what remains is precisely the subset of the candidate set that are theoptimal satisfiers of the constraints under their ranking.
This set of candidates, whichwill often contain only a single member under the system of constraints suggested byPrince and Smolensky (1993), is taken as the set of actual SRs for the original UR.OT makes the strong assumption that the constraints used to evaluate the mem-bers of the candidate set are universal, and are therefore active in the phonology ofevery language.
What varies from one language to another is the relative ranking ofconstraints.
Thus, as soon as a commitment is made concerning the set of constraints,there is a concomitant commitment concerning the range of possible typological varia-tion: every ordering of the constraints corresponds to a possible phonological system.3.
Formal PreliminariesBefore proceeding with our formalization of OT, it will be useful to review someformal notation.
Given a finite alphabet ~ we denote by ~ the set of all strings overG, including the empty string ~, and we denote by 2 E the power set of ~*.We assume that the reader is familiar with the notions of finite-state automaton,regular language, finite-state transducer, and rational relation; definitions and basicproperties can be found in Gurari (1989).
To recap briefly, a finite-state transduceris a finite-state automaton whose transitions are defined over the cross-product set(~ U {~}) x (& U {~}), with ~ and & two (finite) alphabets.
If we interpret ~ as thealphabet of input to the machine and & as the alphabet of output, each accepting4 We note that there is nothing about he OT system that requires that candidates be evaluated in thisserial manner.
Instead, all of the coostraints could be seen as being imposed in parallel, with therelative importance among violations being determined after the evaluation.
From the perspective ofspecifying the abstract omputation that is determined by the OT model, nothing hinges on this serialversus parallel distinction, so far as we can see.309Computational Linguistics Volume 24, Number 2computation of the transducer can be viewed as defining a mapping between a stringin E* and a string in A*.
Of course, the finite-state transducer may be nondeterministic,in which case a single input string may give rise to multiple outputs.
Thus, every finite-state transducer can be associated with what is called a rational relation, a relationover E* x A* containing all possible input-output pairs.
A rational relation R can alsobe regarded as a function \[R\] from E* to 2 a*, by taking \[R\](u) = {v \] (u,v) E R} foreach u E E*.
We will use this latter representation f rational relations throughout oursubsequent discussion.4.
A Model of OTWe are now in a position to present our formal model of the OT system.
Let us denoteas N the set of nonnegative integers.DefinitionAn optimality system (OS) is a triple G = (E, tEN, C), where E is a finite alphabet,GEN is a relation over E* x E" and C = (cl .
.
.
.
.
Cp), p > 1, is an ordered sequenceof total functions from E* to N.The basic idea underlying this definition is as follows: If w is a well-formed UR,\[GEN\](W) is the nonempty set of all associated SR, otherwise \[?nN\](W) = 0.
Each func-tion c in C represents ome constraint of the grammar.
For a given SR w, the non-negative integer c(w) is the "degree of violation" that w incurs with respect o therepresented constraint.
Given a set of candidates S, we are interested in the subset ofS that violates c to the least degree, i.e., whose value under the function c is lowest.To facilitate reference to this subset, we defineargminc{S } = {w\] w E S, c(w) = min{c(w') \] w' E S}}.We can now define the map an OS induces.
We do this in stages, each one representingthe evaluation of the candidates according to one of the constraints.
For each w E E*and for 0 < i < p we define a function from E* to 2~*:OT~(w) = OT~-I (w)argminc, {OT~-l(w) }if i = 0;if i>  1 and argminci{OT~-l(w)} = OT~-l(w);if i > 1 and argminc,{OT~-l(w)} # OT~-l(w).Function OTPc is called the optimality function associated with G, and is simply de-noted as OTc.
We drop the subscript when there is no ambiguity.The question of the expressive power of OT can now be stated precisely: what is thegenerative capacity of the class of optimality functions?
The answer to this questiondepends, of course, upon the character of the functions that serve as GRN and theconstraints.
Though we will not make any substantive mpirical claims about thesefunctions, we will make a number of specific assumptions concerning their formalnature.
Regarding GEN, we assume that the mapping from the UR to the candidate setis specifiable in terms of a finite-state transducer, that is to say, we will consider onlyOSs for which GEN is a rational relation (viewing rational relations as functions, asspecified in the previous ection).
Since the question that we focus on in this researchis that of determining whether the class of mappings pecifiable in OT is beyond theformal power of finite-state transducers, allowing ann to be beyond the power of a310Frank and Satta Constraint Violabilityfinite-state transducer would decide the question byfiat, s In addition, we assume thateach constraint c in C is regular in that it satisfies the following requirement: For eachk E N, the set {w I w E ~*, c(w) = k} (i.e., the inverse image of k under c) is a regularlanguage.
In other words, this requires that the set of candidates that violate a givenconstraint to any particular level must be regular.
The choice of regular constraints ifor reasons essentially identical to those that motivated the use of rational relationsfor GEN.It turns out that nearly all of the constraints that have been proposed in the OTphonological literature are regular in this sense.
The reason for this is that OT con-straints have tended to take the form of local conditions on the well-formedness ofphonological representations, where local means bounded in size.
Because of this re-striction, we can characterize all possible violations of a given constraint c through afinite set of configurations Vc.
More precisely, a phonological representations w attestsas many violations of c as the number of occurrences of strings in Vc appearing as sub-strings of w. Since Vc is finite, it can be represented through some regular expression.Under the standard assumption that phonological representations are not structurallyrecursive, but rather are combined using essentially iterated concatenation, we canuse well-known algebraic properties of regular languages (see for instance Kaplanand Kay 1994) to show that c is regular.
(See Tesar 1995 for further discussion of arelated notion of locality in constraints.)5.
OT as a Rational RelationThis section presents the main result of this paper.
We show that OSs of the sortoutlined in the last section can be implemented through finite-state transducers so longas each constraint of the system satisfies one additional restriction: that it have a finitecodomain, meaning that it distinguishes among only a finite set of equivalence classesof candidates.
We start with some properties of the class of rational relations that willbe needed later (proofs of these properties can be found for instance in Gurari 1989).
LetR be a rational relation.
The left projection of R is the language Left(R) = {u I (u, v) ER}.
Symmetrically, the fight projection is the language Right(R) = {v I (u, v) E R}.
Itis well known that Left(R) and Right(R) are both regular languages.
If R' is a rationalrelation, the composition of R and R', defined as R o R' = {(u,v) I (u,w) E R, (w,v) ER', for some w}, is still a rational relation.Let L be a regular language.
We define the left restriction of R to L as the relationLrst(R,L) = {(u,v) I (u,v) E R, u E L}.
Symmetrically, Rrst(R,L) = {(u,v) \] (u,v) ER, v E L} is the fight restriction of R to L. Both Lrst(R, L) and Rrst(R, L) are rationalrelations.
The idea underlying a proof of this fact is to compose R (to the left or to theright) with the identity relation {(w, w) I w E L}, which is rational.Let G = (G, GEN, C) be an OS.
We start the presentation of our result by restrictingour attention to constraints having codomain of size two, that is, each ci in C is a totalfunction from ~* to {0,1} such that both the set L(ci) -- {w I w E ~*, Ci(W) -~ 0} and itscomplement are regular.
Recall that L(ci) denotes the language of all strings in G* thatsatisfy the constraint of the grammar epresented by ci, and its complement, the strings5 We recognize that this assumption, while plausible for phonological representations, is perhaps less sofor syntactic representations.
Further, as a reviewer points out, recent developments of OT in thedomain of reduplication phenomena (McCarthy and Prince 1995), which assume that GEN produces acorrespondence relation between the UR and SR, might constitute a phonological case in which tEN isnot a rational relation.
If well-formedness conditions on this correspondence relation are guaranteedonly by the constraints, however, GEN could remain rational, though the constraints would no doubtcease to be expressible asregular languages.311Computational Linguistics Volume 24, Number 2mapped to I by ci, includes all strings that violate it.
Thus, such cis correspond to con-straints that can distinguish only between complete satisfaction and violation.
Usingthe above restriction, we can reformulate the definition of OT i reported in Section 4:\[GEN\](W) if i=  0;OTi(w) = OTi-I(w) if i > 1 and OTi-l(w) f3 L(ci) = O; (1)OT i-l(w) N L(ci) if i > 1 and OT i-1 (w) N L(ci) # 0.Note that the case where all candidates in OT i-1 (w) satisfy constraint ci falls underthe second clause of the definition in Section 4, but under the third clause of (1).However, this case is treated in the same way in both definitions, since OTi-l(w) =OT i-l(w) f3 L(ci) if OT i-1 (w) C L(ci).
We are now ready to prove a technical lemma.Lemma 1Let G = (G, GEN, C) be an OS such that GEN is a rational relation and each constraintin C is regular and has co-domain of size two.
Then OTc is a rational relation.Let us start with the basic idea underlying the proof of this lemma.
Assume that fori _> 1 we have already been able to represent OT i-1 by means of a rational relation R.Consider some UR w and the set of associated candidate SRs that are optimal withrespect o OT i-1, that is, the set OTi-l(w) = \[R\](w).
To compute the strings in this setthat are optimal with respect o ci, we must perform what amounts to a "conditionalintersection" with the regular language L(ci), as determined by (1).
That is, we checkif there are candidates from \[R\] (w) that are also compatible with ci, i.e., that are mem-bers of L(ci).
If there are some some, we eliminate any nonsatisfying candidates byintersecting \[R\](w) with L(ci) (third condition in \[1\]).
However, if no such candidatesremain, we do nothing to the set of candidates from OT i-1 (second condition in \[1\]).As shown in the proof below, it turns out that this can be done by partitioning the leftprojection of relation R into two regular languages.
This results in the "splitting" of Rinto two relations, one of which must be "refined" by taking its right restriction to lan-guage L(ci).
The union of the two resulting relations is then the desired representationof OT i.
Putting these ideas together, we are now ready to present a formal proof.ProofWe show that OT i is a rational relation for 0 < i < p. We proceed by induction on i.For i = 0, the claim directly follows from our assumptions about OEN.
Let 1 < i < p.From the inductive hypothesis, there exists a rational relation R such that \[R\] = OT i-1.Since L(ci) is a regular language, from an already mentioned property it follows that:R1 = Rrst(R,L(ci))is a rational relation as well.
Function \[al\] associates a UR to the set of SRs that areoptimal up to constraint ci-1 and that also satisfy ci, the latter being the effect of theright restriction operator.
Since R1 is rational, we have that L1 = Left(R1), the set ofURs for which function JR1\] results in some non-empty set, is a regular langua__ ge.
By awell-known closure property of regular languages, the com_plement of L1, L1 = G* - L1,is a regular language as well.
Note that, for each UR in L1, no associated SR is bothoptimal up to constraint ci-1 and satisfies ci.
It then follows, by an already mentionedproperty, that:R2 = Lrst(R, L1)312Frank and Satta Constraint Violabilityis a rational relation.
Note that function \[R2\] computes optimality up to constraint ci-1,but only over those URs whose optimal satisfiers do not satisfy ci.
It is not difficult tosee from an inspection of (1) that OT i = \[R1 U a2\].
Then the statement of the lemmafollows from the fact that the class of rational relations is closed under finite union(see for instance Gurari 1989).
\[\]The result in the above lemma can be extended to regular constraints havingarbitrarily large finite codomain, corresponding to constraints that rank candidatesalong some finite-valued scale.
This is done using a construction, first suggested inEllison (1994), which, expressed intuitively, replaces any such constraint function bya finite number of constraint functions having codomain of size two.
More formally,assume constraint c has codomain {0,1, .
.
.
,k},  k > 1.
We introduce new constraints(c,i), 1 < i < k, defined as follows: For each 1 < i < k and w C G*, we let (c,i)(w) = 0if c(w) < i, (c, i)(w) -- 1 if c(w) >_ i.
Each (c, i) has codomain of size two.
Since theclass of regular languages is closed under finite union, if c is regular then each (c, i) isregular.We can finally state our main result, which directly follows from the above dis-cussion and from Lemma 1.Theorem 1Let G = (G, GEN, C) be an OS such that ORN is a rational relation and each constraintin C is regular and has a finite codomain.
Then OTG is a rational relation.6.
DiscussionWe have shown that when GUN is a rational relation and the constraints have a fi-nite codomain, constraint ranking as defined by OT yields a system whose generativecapacity does not exceed that of rational relations.
Because of the nature of the con-struction in the proof of Lemma 1 (specifically the union of the relations R1 and R2at each stage in the iteration), the finite-state transducer that is built crucially exploitstransition ondeterminism.
We note, however, that any finite-state transducer used toimplement an OS will in any case need to be nondeterministic, since in general OTcan pair more than one SR with a given UR.
6As we have mentioned above, our result tolerates only so-called binary and multi-valued constraints, constraints that rank the candidates along some finite-valued scale.A linguistic example of such a multivalued constraint is Prince and Smolensky's HNUC,which rates the goodness of a'segment serving as a syllabic nucleus, the rating beingdetermined by the position of the segment along the finitely partitioned sonority hi-erarchy.
Yet, this formal power is not sufficient o express the greater proportion ofphonological analyses that have been given in the OT framework.
In particular, it isusually assumed that constraints can be violated an arbitrary number of times by asingle form, and that differences at any level of violation are grammatically signifi-cant.
For example, even in the simple system of syllable structure constraints discussedin Prince and Smolensky (1993, Section 6), the computation of optimality for certain6 It is interesting tonote that this potential for nondeterminism is not exploited under many of thesystems of constraints hat have actually been proposed by OT practitioners.
For example, the existenceof families of constraints requiring the alignment of particular morphemes with a certain boundaries inan SR, members of the family of so-called generalized alignment constraints (McCarthy and Prince1993), will often have the effect of linearly ordering all SRs according to their optimality, therebyyielding a single SR for each UR.313Computational Linguistics Volume 24, Number 2very long forms might require us to distinguish between 300 and 301 violations of thePARSE constraint.
Consequently, it is a question of significant interest whether our re-sult extends to the case of such gradient constraints, or in more formal terms, whetherOTc remains a rational relation when the (regular) constraints of the system can havean unbounded codomain.It turns out that this is not true in the general case.
The following example (due toP.
Smolensky, after an idea of M. Hiller who first proved this separation result) showsthis fact using only a single constraint:G = {a,b},GEN = {(anbm, anbm) l n,m E N}U{(a'bm,b'a m) l n,m E N},c(w) = #a(W),where #a(w) denotes the number of occurrences of a within w. (Constraint c can beseen as a prohibition against he occurrence of the letter a in an SR.) Clearly GEN isa rational relation and c satisfies our previous assumptions.
It is not difficult to seethat this system is associated with a function OTc such that a string of the form a'b mis mapped to the singleton {anb m} if n < m, to the singleton {b'a m} if m < n, and tothe set {anb m, b'a m} when n = m. The relation R that realizes uch a function is notrational, since its right restriction to the regular language {a'b m I n, m E N} does nothave a regular left projection, namely {anb m I n < m}.
This fact shows that the resultin Theorem 1 is optimal with respect o the finite codomain hypothesis, that is to say,no weaker assumption concerning the nature of the constraints will suffice to keep thegenerative capacity of mappings defined by OSs within that of rational relations.
Itremains an open problem to characterize precisely the generative capacity of systemswith gradient constraints, as well as that of OSs with other assumptions about theformal power of GEN and the constraints.Finally, it is useful to recall the empirical argument given in Karttunen (1993) thatattested phonological processes mediating between UR and SR can be modeled by afinite-state transducer.
Though this argument was given in the context of a differentconception of phonological derivation, the conclusion, if correct, is general.
That is,whether the relation between UR and SR is best characterized in terms of rewritingsequences or OT optimizations, Karttunen's argument suggests that the generativecomplexity of the resulting mapping need be no greater than that of rational transla-tions.
If this empirical argument is on the right track, our results diagnose a formaldeficiency with the OT formal system, namely that it is too rich in generative capacity.Our results also suggest a cure, however: constraints should be limited in the numberof distinctions they can make in levels of violation.
We suspect hat following thisregimen will necessitate a shift in the type of optimization carried out in OT, fromglobal optimization over arbitrarily large representations to local optimization overstructural domains of bounded complexity (where only a bounded number of vio-lations can possible occur).
Following the empirical and formal implications of thismove would go well beyond the scope of the present work, so we leave this for thefuture.AcknowledgmentsWe wish to thank Markus Hiller, MartinKay, Mehryar Mohri, and Paul Smolenskyfor helpful discussions related to this work.We are also indebted to three anonymousreferees for comments hat have helped tosignificantly improve our presentation.ReferencesBarton, G. Edward, Robert C. Berwick, and314Frank and Satta Constraint ViolabilityEric Sven Ristad.
1987.
ComputationalComplexity and Natural Language.
MITPress, Cambridge, MA.Bird, Steven and T. Mark Ellison.
1994.One-level phonology: Autosegmentalrepresentations and rules as finiteautomata.
Computational Linguistics,20(1):55---90.Burzio, Luigi.
1994.
Principles of EnglishStress.
Cambridge University Press,Cambridge.Ellison, T. Mark.
1994.
Phonologicalderivation in optimality theory.
InProceedings ofthe 15th InternationalConference on Computational Linguistics,pages 1007-1013.Gurari, Eitan.
1989.
An Introduction to theTheory of Computation.
Computer SciencePress, New York, NY.Johnson, C. Douglas.
1972.
Formal Aspects ofPhonological Description.
Mouton, TheHague.Kaplan, Ronald M. and Martin Kay.
1994.Regular models of phonological rulesystems.
Computational Linguistics,20(3):331-378.
Written in 1980.Karttunen, Lauri.
1993.
Finite-stateconstraints.
In John Goldsmith, editor, TheLast Phonological Rule.
University ofChicago Press, Chicago, pages 173-194.Koskenniemi, Kimmo.
1984.
A generalcomputational model for word-formrecognition and production.
In Proceedingsof the l Oth International Conference onComputational Linguistics, pages 178-181.McCarthy, John and Alan Prince.
1993.Generalized alignment.
In Geert Booij andJaap van Marle, editors, Yearbook ofMorphology 1993.
Kluwer, Dordrecht,pages 79-153.McCarthy, John and Alan Prince.
1995.Faithfulness and reduplicative identity.
InUMOP 18: Papers in Optimality Theory.Graduate Linguistics StudentsAssociation, University of Massachusetts,Amherst, pages 249-384.Paradis, Carole.
1988.
On constraints andrepair strategies.
The Linguistic Review,6(1):71-97.Prince, Alan and Paul Smolensky.
1993.Optimality theory: Constraint interactionin generative grammar.
Manuscript,Rutgers University and University ofColorado, Boulder.Scobbie, James.
1991.
Attribute ValuePhonology.
Ph.D. thesis, University ofEdinburgh.Sproat, Richard.
1992.
Morphology andComputation.
MIT Press, Cambridge, MA.Tesar, Bruce.
1995.
Computational OptimalityTheory.
Ph.D. thesis, University ofColorado, Boulder.315
