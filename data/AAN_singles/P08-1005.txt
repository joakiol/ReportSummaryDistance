Proceedings of ACL-08: HLT, pages 37?45,Columbus, Ohio, USA, June 2008. c?2008 Association for Computational LinguisticsPDT 2.0 Requirements on a Query LanguageJi??
M?rovsk?Institute of Formal and Applied LinguisticsCharles University in PragueMalostransk?
n?m.
25, 118 00 Prague 1, Czech Republicmirovsky@ufal.mff.cuni.czAbstractLinguistically  annotated treebanks play anessential part in the modern computationallinguistics.
The  more  complex  the  tree-banks become, the more sophisticated toolsare  required  for  using  them,  namely  forsearching in the data.
We study linguisticphenomena annotated in the Prague Depen-dency Treebank 2.0 and create a list of re-quirements  these  phenomena  set  on  asearch  tool,  especially  on  its  query  lan-guage.1 IntroductionSearching in a linguistically annotated treebank isa principal task in the modern computational lin-guistics.
A search tool helps extract useful infor-mation from the treebank, in order to study the lan-guage, the annotation system or even to search forerrors in the annotation.The more complex the treebank is, the more so-phisticated the search tool and its query languageneeds to be.
The Prague Dependency Treebank 2.0(Haji?
et  al.
2006)  is  one  of  the  most  advancedmanually  annotated  treebanks.
We  study  mainlythe  tectogrammatical  layer  of  the  Prague Depen-dency Treebank 2.0 (PDT 2.0), which is by far themost advanced and complex layer in the treebank,and show what requirements on a query languagethe annotated linguistic phenomena bring.
We alsoadd requirements set by lower layers of annotation.In section 1 (after this introduction) we mentionrelated  works  on  search  languages  for  varioustypes of corpora.
Afterwards, we very shortly in-troduce PDT 2.0, just to give a general picture ofthe  principles  and  complexion  of  the  annotationscheme.In section 2 we study the annotation manual forthe tectogrammatical layer of PDT 2.0 (t-manual,Mikulov?
et  al.
2006)  and collect  linguistic  phe-nomena  that  bring  special  requirements  on  thequery language.
We also study lower layers of an-notation and add their requirements.In  section 3 we summarize the requirements inan extensive list of features required from a searchlanguage.We conclude in  section 4.1.1 Related WorkIn Lai, Bird 2004, the authors name seven linguis-tic queries they consider important representativesfor  checking  a  sufficiency  of  a  query  languagepower.
They  study  several  query  tools  and  theirquery languages and compare them on the basis oftheir  abilities  to  express  these  seven  queries.
InBird et al  2005,  the authors use a revised set ofseven key linguistic queries as a basis for forminga list of three expressive features important for lin-guistic queries.
The features are: immediate prece-dence, subtree scoping and edge alignment.
In Birdet al 2006, another set of seven linguistic queriesis used to show a necessity to enhance XPath (astandard query language for XML, Clark, DeRose1999) to support linguistic queries.Cassidy  2002  studies  adequacy  of  XQuery  (asearch language based on XPath, Boag et al 1999)for searching in hierarchically annotated data.
Re-37quirements  on  a  query  language  for  annotationgraphs used in speech recognition is also presentedin Bird et al 2000.
A description of linguistic phe-nomena  annotated  in  the  Tiger  Treebank,  alongwith an introduction to a search tool TigerSearch,developed especially for this treebank, is given inBrants et al 2002, nevertheless without a systemat-ic study of the required features.Laura  Kallmeyer  (Kallmeyer  2000)  studies  re-quirements on a query language based on two ex-amples  of  complex  linguistic  phenomena  takenfrom the NEGRA corpus and the Penn Treebank,respectively.To  handle  alignment  information,  Merz  andVolk 2005 study requirements on a search tool forparallel treebanks.All the work mentioned above can be used as anample  source  of  inspiration,  though it  cannot  beapplied directly to PDT 2.0.
A thorough study ofthe PDT 2.0 annotation is needed to form conclu-sions about requirements on a search tool for thisdependency tree-based corpus, consisting of sever-al  layers  of  annotation  and  having  an  extremelycomplex annotation scheme, which we shortly de-scribe in the next subsection.1.2 The Prague Dependency Treebank 2.0The Prague Dependency Treebank 2.0 is a manual-ly annotated corpus of Czech.
The texts are anno-tated  on  three  layers  ?
morphological,  analyticaland tectogrammatical.On the morphological layer, each token of everysentence  is  annotated  with  a  lemma  (attributem/lemma), keeping the base form of the token, anda tag (attribute  m/tag),  which keeps its morpho-logical information.The analytical layer roughly corresponds to thesurface syntax of the sentence; the annotation is asingle-rooted dependency tree with labeled nodes.Attribute a/afun describes the type of dependen-cy between a dependent node and its governor.
Theorder of the nodes from left  to right correspondsexactly to the surface order of tokens in the sen-tence (attribute a/ord).The tectogrammatical layer captures the linguis-tic meaning of the sentence in its context.
Again,the  annotation is  a  dependency tree  with labelednodes (Haji?ov?
1998).
The correspondence of thenodes  to  the  lower  layers  is  often  not  1:1(M?rovsk?
2006).Attribute  functor describes  the  dependencybetween a dependent node and its governor.
A tec-togrammatical  lemma (attribute  t_lemma)  is  as-signed to every node.
16 grammatemes (prefixedgram)  keep  additional  annotation  (e.g.gram/verbmod for verbal modality).Topic  and  focus  (Haji?ov?
et  al.
1998)  aremarked  (attribute  tfa),  together  with  so-calleddeep word order reflected by the order of nodes inthe annotation (attribute deepord).Coreference relations between nodes of certaincategory  types  are  captured.
Each  node  has  aunique  identifier  (attribute  id).
Attributescoref_text.rf and  coref_gram.rf containids of coreferential nodes of the respective types.2 Phenomena and RequirementsWe make a list  of  linguistic phenomena that  areannotated in PDT 2.0 and that determine the neces-sary features of a query language.Our work is focused on two structured layers ofPDT 2.0 ?
the analytical layer and the tectogram-matical  layer.
For  using  the  morphological  layerexclusively  and directly,  a  very good search toolManatee/Bonito  (Rychl?
2000)  can be  used.
Weintend  to  access  the  morphological  informationonly  from  the  higher  layers,  not  directly.
Sincethere is relation 1:1 among nodes on the analyticallayer (but for the technical root) and tokens on themorphological  layer,  the  morphological  informa-tion can be easily merged into the analytical layer?
the nodes only get additional attributes.The tectogrammatical  layer is  by  far  the  mostcomplex layer in PDT 2.0, therefore we start  ouranalysis with a study of the annotation manual forthe tectogrammatical layer (t-manual, Mikulov?
etal.
2006) and focus also on the requirements on ac-cessing lower layers with non-1:1 relation.
After-wards, we add some requirements on a query lan-guage set by the annotation of the lower layers ?the analytical layer and the morphological layer.During the studies, we have to keep in mind thatwe do not only want to search for a phenomenon,but  also need  to  study it,  which can be  a  muchmore complex task.
Therefore, it is not sufficiente.g.
to find a predicative complement, which is atrivial task, since attribute  functor of the com-plement  is  set  to  value  COMPL.
In this  particularexample, we also need to be able to specify in the38query properties of the node the second dependen-cy of the complement goes to, e.g.
that it is an Ac-tor.A summary of the required features on a querylanguage is given in the subsequent section.2.1 The Tectogrammatical LayerFirst, we focus on linguistic phenomena annotatedon the tectogrammatical layer.
T-manual has morethan one thousand pages.
Most of the manual de-scribes  the  annotation  of  simple  phenomena  thatonly require a single-node query or a very simplestructured query.
We mostly focus on those phe-nomena  that  bring  a  special  requirement  on  thequery language.2.1.1 Basic PrinciplesThe basic unit of annotation on the tectogrammati-cal layer of PDT 2.0 is a sentence.The representation of the tectogrammatical an-notation of a sentence is a rooted dependency tree.It consists of a set of  nodes and a set of edges.
Oneof the nodes is marked as a root.
Each node is acomplex unit consisting of a set of pairs attribute-value (t-manual, page 1).
The edges express depen-dency relations between nodes.
The edges do nothave their own attributes; attributes that logicallybelong to edges (e.g.
type of dependency) are rep-resented as node-attributes (t-manual, page 2).It implies the first  and most basic requirementon the query language:  one result of the search isone sentence along with the tree belonging to it.Also, the query language should be able to expressnode evaluation and tree dependency among nodesin the most direct way.2.1.2 ValencyValency  of  semantic  verbs,  valency  of  semanticverbal nouns, valency of semantic nouns that rep-resent the nominal part of a complex predicate andvalency  of  some semantic  adverbs  are  annotatedfully in the trees (t-manual, pages 162-3).
Since thevalency of verbs is the most complete in the anno-tation and since the requirements on searching forvalency frames of nouns are the same as of verbs,we will (for the sake of simplicity in expressions)focus on the verbs only.
Every verb meaning is as-signed a valency frame.
Verbs usually have morethan one meaning; each is assigned a separate va-lency  frame.
Every  verb  has  as  many  valencyframes as it has meanings (t-manual, page 105).Therefore, the query language has to be able todistinguish valency frames and search for each oneof them, at least as long as the valency frames dif-fer in their members and not only in their index.
(Two or more identical valency frames may repre-sent different verb meanings (t-manual, page 105).
)The required features include a presence of a son,its non-presence, as well as controlling number ofsons of a node.2.1.3 Coordination and AppositionTree  dependency  is  not  always linguistic  depen-dency (t-manual, page 9).
Coordination and appo-sition are examples of such a phenomenon (t-man-ual, page 282).
If a Predicate governs two coordi-nated Actors, these Actors technically depend on acoordinating node and this coordinating node de-pends on the Predicate.
the query language shouldbe able to skip such a coordinating node.
In gener-al, there should be a possibility to skip any type ofnode.Skipping a given type of node helps but is notsufficient.
The coordinated structure can be morecomplex,  for  example the  Predicate  itself  can becoordinated too.
Then, the Actors do not even be-long to the subtree of any of the Predicates.
In thefollowing example, the two Predicates (PRED) arecoordinated with conjunction (CONJ),  as well  asthe two Actors (ACT).
The linguistic dependenciesgo from each of the Actors to each of the Predi-cates but the tree dependencies are quite different:In Czech: S ?
?m mohou vlastn?ci i n?jemci po?
?tat,na co by se m?li p?ipravit?In English: What can owners and tenants expect,what they should get ready for?39The query language should therefore be able to ex-press the linguistic dependency directly.
The infor-mation about the linguistic dependency is annotat-ed in the treebank by the means of references, aswell as many other phenomena (see below).2.1.4 Idioms (Phrasemes) etc.Idioms/phrasemes  (idiomatic/phraseologic  con-structions) are combinations of two or more wordswith a fixed lexical content, which together consti-tute one lexical unit with a metaphorical meaning(which cannot be decomposed into meanings of itsparts)  (t-manual,  page  308).
Only  expressionswhich are represented by at least two auto-seman-tic nodes in the tectogrammatical tree are capturedas idioms (functor DPHR).
One-node (one-auto-se-mantic-word) idioms are not represented as idiomsin  the  tree.
For  example,  in  the  combination?chlapec k pohled?n??
(?a boy to  look for?
),  theprepositional phrase gets functor RSTR, and it isnot indicated that it is an idiom.Secondary prepositions are another example of alinguistic  phenomenon  that  can  be  easily  recog-nized in the surface form of the sentence but is dif-ficult to find in the tectogrammatical tree.Therefore, the query language should offer a ba-sic searching in the linear form of the sentence, toallow searching for any idiom or phraseme, regard-less of the way it is or is not captured in the tec-togrammatical tree.
It can even help in a situationwhen the user does not know how a certain linguis-tic phenomenon is annotated on the tectogrammati-cal layer.2.1.5 Complex PredicatesA  complex  predicate  is  a  multi-word  predicateconsisting of a semantically empty verb which ex-presses  the  grammatical  meanings  in  a  sentence,and a noun (frequently denoting an event or a stateof affairs) which carries the main lexical meaningof the entire phrase (t-manual, page 345).
Search-ing for a complex predicate is a simple task anddoes not bring new requirements on the query lan-guage.
It is valency of complex predicates that re-quires our attention, especially dual function of avalency  modification.
The  nominal  and  verbalcomponents of the complex predicate are assignedthe  appropriate  valency  frame  from  the  valencylexicon.
By means of newly established nodes witht_lemma substitutes,  those  valency  modificationpositions  not  present  at  surface  layer  are  filled.There are problematic cases where the expressedvalency modification occurs in the same form inthe valency frames of both components of the com-plex predicate (t-manual, page 362).To  study  these  special  cases  of  valency,  thequery language has to offer a possibility to definethat a valency member of the verbal part of a com-plex predicate is at the same time a valency mem-ber of the nominal part of the complex predicate,possibly with a different function.
The identity ofvalency members is annotated again by the meansof references, which is explained later.2.1.6 Predicative  Complement  (Dual  Depen-dency)On the  tectogrammatical  layer,  also  cases  of  theso-called predicative complement are represented.The  predicative  complement  is  a  non-obligatoryfree  modification (adjunct)  which  has  a  dual  se-mantic  dependency  relation.
It  simultaneouslymodifies a noun and a verb (which can be nominal-ized).These two dependency relations are representedby different means (t-manual, page 376):?
the dependency on a verb is represented bymeans of an edge (which means it is repre-sented in the same way like other modifi-cations),?
the  dependency  on  a  (semantic)  noun  isrepresented  by  means  of  attribute  com-pl.rf, the value of which is the identifierof the modified noun.In the following example, the predicative comple-ment  (COMPL)  has  one  dependency  on  a  verb(PRED) and another (dual) dependency on a noun(ACT):40In  Czech:  Ze  sv?tov?
recese vy?ly jako  jedni?kaSpojen?
st?ty.In  English:  The  United States  emerged from theworld recession as number one.The  second  form  of  dependency,  representedonce again with references (still see below), has tobe expressible in the query language.2.1.7 CoreferencesTwo types  of  coreferences  are  annotated  on  thetectogrammatical layer:?
grammatical coreference?
textual coreferenceThe current way of representing coreference usesreferences (t-manual, page 996).Let us finally explain what references are.
Ref-erences make use of the fact that every node of ev-ery tree has an identifier (the value of attribute id),which  is  unique  within  PDT 2.0.
If  coreference,dual dependency, or valency member identity is alink between two nodes (one node referring to an-other), it is enough to specify the identifier of thereferred node in the appropriate attribute of the re-ferring node.
Reference types are distinguished bydifferent  referring  attributes.
Individual  referencesubtypes can be further distinguished by the valueof another attribute.The essential point in references (for the querylanguage) is that at the time of forming a query, thevalue of the reference is unknown.
For example, inthe case of dual dependency of predicative comple-ment,  we know that  the  value  of  attribute  com-pl.rf of the complement must be the same as thevalue of attribute id of the governing noun, but thevalue itself differs tree from tree and therefore isunknown at  the  time  of  creating  the  query.
Thequery  language has to  offer  a possibility  to  bindthese unknown values.2.1.8 Topic-Focus ArticulationOn the tectogrammatical layer, also the topic-focusarticulation  (TFA)  is  annotated.
TFA  annotationcomprises two phenomena:?
contextual boundness, which is represent-ed  by  values  of  attribute  tfa for  eachnode of the tectogrammatical tree.?
communicative dynamism, which is repre-sented by the underlying order of nodes.Annotated trees therefore contain two types of in-formation - on the one hand the value of contextualboundness of a node and its relative ordering withrespect  to  its  brother  nodes  reflects  its  functionwithin the topic-focus articulation of the sentence,on the other hand the set of all the TFA values inthe tree and the relative ordering of subtrees reflectthe overall functional perspective of the sentence,and thus enable to distinguish in the sentence thecomplex  categories  of  topic  and focus  (however,these are not annotated explicitly) (t-manual, page1118).While contextual boundness does not bring anynew requirement on the query language, commu-nicative dynamism requires that the relative orderof nodes in the tree from left  to right can be ex-pressed.
The  order  of  nodes  is  controlled  by  at-tribute  deepord,  which  contains  a  non-negativereal (usually natural) number that sets the order ofthe  nodes  from  left  to  right.
Therefore,  we  willagain need to refer to a value of an attribute of an-other node but  this  time with relation other  than?equal to?.2.1.8.1 Focus ProperFocus proper is the most dynamic and communica-tively  significant  contextually  non-bound  part  ofthe sentence.
Focus proper is placed on the right-most  path  leading  from the  effective  root  of  thetectogrammatical tree, even though it is at a differ-ent position in the surface structure.
The node rep-resenting this expression will be placed rightmostin the tectogrammatical tree.
If the focus proper isconstituted by an expression represented as the ef-fective root of the tectogrammatical tree (i.e.
thegoverning predicate is the focus proper),  there isno  right  path  leading  from the  effective  root  (t-manual, page 1129).2.1.8.2 Quasi-FocusQuasi-focus is constituted by (both contrastive andnon-contrastive)  contextually  bound  expressions,on which the focus proper is dependent.
The focusproper can immediately depend on the quasi-focus,or it can be a more deeply embedded expression.In the underlying word order, nodes representingthe  quasi-focus,  although  they  are  contextuallybound, are placed to the right from their governingnode.
Nodes representing the quasi-focus are there-fore  contextually  bound  nodes  on  the  rightmost41path in the tectogrammatical tree (t-manual, page1130).The ability of the query language to distinguishthe  rightmost  node in  the  tree  and the  rightmostpath leading from a node is therefore necessary.2.1.8.3 RhematizersRhematizers are expressions whose function is tosignal the topic-focus articulation categories in thesentence,  namely  the  communicatively  most  im-portant categories - the focus and contrastive topic.The position of rhematizers in the surface wordorder is quite loose, however they almost alwaysstand right before the expressions they rhematize,i.e.
the  expressions  whose being  in  the  focus  orcontrastive  topic  they  signal  (t-manual,  pages1165-6).The  guidelines  for  positioning  rhematizers  intectogrammatical trees are simple (t-manual, page1171):?
a rhematizer (i.e.
the node representing therhematizer)  is  placed  as  the  closest  leftbrother (in the underlying word order) ofthe first node of the expression that is in itsscope.?
if  the scope of  a rhematizer  includes  thegoverning  predicate,  the  rhematizer  isplaced as the closest left  son of the noderepresenting the governing predicate.?
if a rhematizer constitutes the focus prop-er, it is placed according to the guidelinesfor the position of the focus proper - i.e.
onthe rightmost path leading from the effec-tive root of the tectogrammatical tree.Rhematizers therefore bring a further requirementon the query language ?
an ability to control thedistance between nodes (in the terms of deep wordorder); at the very least, the query language has todistinguish an immediate brother and relative hori-zontal position of nodes.2.1.8.4 (Non-)ProjectivityProjectivity of a tree is defined as follows: if twonodes B and C are connected by an edge and C isto the left from B, then all nodes to the right fromB and to  the left  from C are connected with theroot via a path that passes through at least one ofthe nodes B or C. In short: between a father and itsson there can only be direct or indirect sons of thefather (t-manual, page 1135).The relative position of a node (node A) and anedge (nodes B, C) that together cause a non-projec-tivity forms four different configurations: (?B is onthe left from C?
or ?B is on the right from C?)
x(?A is  on the  path from B to the  root?
or  ?it  isnot?).
Each of the configurations can be searchedfor using properties of the language that have beenrequired so far by other linguistic phenomena.
Fourdifferent queries search for four different configu-rations.To be able to search for all configurations in onequery, the query language should be able to com-bine several queries into one multi-query.
We donot require that a general logical expression can beset  above  the  single  queries.
We  only  require  ageneral OR combination of the single queries.2.1.9 Accessing Lower LayersStudies  of  many  linguistic  phenomena  require  amultilayer access.In Czech: Byl by ?el do lesa.In English (lit.
): He would have gone to the forest.42For example, the query ?find an example of Patientthat is more dynamic than its governing Predicate(with greater deepord) but on the surface layer ison the left side from the Predicate?
requires infor-mation both from the tectogrammatical layer andthe analytical layer.The picture above is taken from PDT 2.0 guideand shows the typical relation among layers of an-notation for the sentence (the lowest w-layer is atechnical layer containing only the tokenized origi-nal data).The information from the lower  layers  can beeasily  compressed  into the analytical layer,  sincethere is relation 1:1 among the layers (with somerare exceptions like misprints in the w-layer).
Thesituation between the tectogrammatical layer andthe analytical layer is much more complex.
Severalnodes from the analytical layer may be (and oftenare) represented by one node on the tectogrammat-ical  layer  and  new  nodes  without  an  analyticalcounterpart  may  appear  on  the  tectogrammaticallayer.
It is necessary that the query language ad-dresses this issue and allows access to the informa-tion from the lower layers.2.2 The Analytical and Morphological LayerThe analytical layer is much less complex than thetectogrammatical  layer.
The  basic  principles  arethe same ?
the representation of the structure of asentence is rendered in the form of a tree ?
a con-nected  acyclic  directed  graph  in  which  no  morethan one edge leads into a node, and whose nodesare  labeled  with  complex  symbols  (sets  of  at-tributes).
The edges are not labeled (in the techni-cal sense).
The information logically belonging toan edge is represented in attributes of the depend-ing node.
One node is marked as a root.Here,  we focus on linguistic phenomena anno-tated on the analytical and morphological layer thatbring  a  new  requirement  on  the  query  language(that  has  not  been  set  in  the  studies  of  the  tec-togrammatical layer).2.2.1 Morphological TagsIn  PDT 2.0,  morphological  tags  are  positional.They consist of 15 characters, each representing acertain morphological category, e.g.
the first posi-tion  represents  part  of  speech,  the  third  positionrepresents  gender,  the  fourth  position  representsnumber, the fifth position represents case.The query language has to offer a possibility tospecify a part of the tag and leave the rest unspeci-fied.
It has to be able to set such conditions on thetag  like  ?this  is  a  noun?,  or  ?this  is  a  plural  infourth case?.
Some conditions might include nega-tion or enumeration, like ?this is an adjective thatis not in fourth case?, or ?this is a noun either inthird or fourth case?.
This is best done with somesort of wild cards.
The latter two examples suggestthat such a strong tool like regular expressions maybe needed.2.2.2 AgreementThere are several cases of agreement in Czech lan-guage, like agreement in case, number and genderin attributive adjective phrase, agreement in genderand number between predicate and subject (thoughit may be complex), or agreement in case in appo-sition.To study agreement, the query language has toallow to make a reference to only a part of value ofattribute of another node, e.g.
to the fifth positionof the morphological tag for case.2.2.3 Word OrderWord  order  is  a  linguistic  phenomenon  widelystudied on the analytical layer, because it offers aperfect combination of a word order (the same likein the sentence) and syntactic relations between thewords.
The  same  technique  like  with  the  deepword order on the tectogrammatical layer can beused here.
The order of words (tokens) ~ nodes inthe  analytical tree  is  controlled by attribute  ord.Non-projective constructions are much more oftenand interesting here than on the tectogrammaticallayer.
Nevertheless,  they  appear  also on  the  tec-togrammatical layer and their  contribution  to  therequirements  on  the  query  language  has  alreadybeen mentioned.The  only  new  requirement  on  the  query  lan-guage is an ability to measure the horizontal dis-tance between words, to satisfy linguistic querieslike ?find trees where a preposition and the head ofthe noun phrase are at least five words apart?.3 Summary of the FeaturesHere we summarize what features  the query lan-guage has to have to suit PDT 2.0.
We list the fea-tures from the previous section and also add some43obvious  requirements  that  have  not  been  men-tioned so far but are very useful generally, regard-less of a corpus.3.1 Complex Evaluation of a Node?
multiple attributes evaluation (an ability toset values of several attributes at one node)?
alternative  values  (e.g.
to  define  thatfunctor of a node is either a disjunctionor a conjunction)?
alternative nodes (alternative evaluation ofthe whole set of attributes of a node)?
wild cards (regular expressions) in valuesof attributes (e.g.
m/tag=?N...4.*?
de-fines that the morphological tag of a nodeis a noun in accusative, regardless of othermorphological categories)?
negation (e.g.
to express ?this node is notActor?)?
relations less than (<=) , greater than (>=)(for numerical attributes)3.2 Dependencies  Between  Nodes  (VerticalRelations)?
immediate,  transitive  dependency  (exis-tence,  non-existence)?
vertical distance (from root, from one an-other)?
number of sons (zero for lists)3.3 Horizontal Relations?
precedence,  immediate  precedence,  hori-zontal distance (all both positive, negative)?
secondary edges, secondary dependencies,coreferences, long-range relations3.4 Other Features?
multiple-tree queries (combined with gen-eral OR relation)?
skipping a node of a given type (for skip-ping simple types of coordination, apposi-tion etc.)?
skipping  multiple  nodes  of  a  given  type(e.g.
for recognizing the rightmost path)?
references  (for  matching  values  of  at-tributes  unknown at  the  time  of  creatingthe query)?
accessing  several  layers  of  annotation  atthe  same time with  non-1:1  relation  (forstudying relation between layers)?
searching in the surface form of the sen-tence4 ConclusionWe have studied the Prague Dependency Treebank2.0 tectogrammatical annotation manual and listedlinguistic phenomena that require a special featurefrom any query tool for this corpus.
We have alsoadded several  other  requirements  from the lowerlayers  of  annotation.
We have summarized  thesefeatures,  along  with  general  corpus-independentfeatures, in a concise list.AcknowledgmentThis research was supported by the Grant Agencyof the Academy of Sciences of the Czech Repub-lic, project IS-REST (No.
1ET101120413).ReferencesBird et al 2000.
Towards A Query Language for Anno-tation Graphs.
In: Proceedings of the Second Interna-tional  Language and Evaluation  Conference,  Paris,ELRA, 2000.Bird et al 2005.
Extending Xpath to Support LinguistcQueries.
In:  Proceedings  of  the  Workshop on  Pro-gramming Language Technologies for XML, Califor-nia, USA, 2005.
.Bird et al 2006.
Designing and Evaluating an XPath Di-alect  for  Linguistic  Queries.
In: Proceedings of the22nd International Conference on Data Engineering(ICDE), pp 52-61, Atlanta, USA, 2006.Boag  et  al.
1999.
XQuery  1.0:  An XML Query  Lan-guage.
IW3C  Working  Draft,http://www.w3.org/TR/xpath, 1999.Brants  S.  et  al.
2002.
The TIGER Treebank.
In: Pro-ceedings of TLT 2002, Sozopol, Bulgaria, 2002.Cassidy S. 2002.
XQuery as an Annotation Query Lan-guage: a Use Case Analysis.
In: Proceedings of theThird  International  Conference  on  Language  Re-sources and Evaluation, Canary Islands, Spain, 2002Clark  J.,  DeRose  S.  1999.
XML  Path  Language(XPath).
http://www.w3.org/TR/xpath, 1999.Haji?
J. et al 2006.
Prague Dependency Treebank 2.0.CD-ROM LDC2006T01, LDC, Philadelphia, 2006.44Haji?ov?
E. 1998.
Prague Dependency Treebank: Fromanalytic  to  tectogrammatical  annotations.
In:  Pro-ceedings  of  2nd TST,  Brno,  Springer-Verlag  BerlinHeidelberg New York, 1998, pp.
45-50.Haji?ov?
E., Partee B., Sgall P. 1998.
Topic-Focus Ar-ticulation,  Tripartite  Structures  and  Semantic  Con-tent.
Dordrecht,  Amsterdam, Kluwer Academic Pub-lishers, 1998.Havelka  J.
2007.
Beyond  Projectivity:  MultilingualEvaluation of Constraints and Measures on Non-Pro-jective  Structures.
In  Proceedings  of  ACL  2007,Prague, pp.
608-615.Kallmeyer L. 2000: On the Complexity of Queries forStructurally  Annotated Linguistic  Data.
In Proceed-ings  of  ACIDCA'2000,  Corpora  and  Natural  Lan-guage Processing, Tunisia, 2000, pp.
105-110.Lai C., Bird S. 2004.
Querying and updating treebanks:A critical survey and requirements analysis.
In: Pro-ceedings  of  the  Australasian  Language  TechnologyWorkshop, Sydney, Australia, 2004Merz Ch.,  Volk M. 2005.
Requirements  for a ParallelTreebank  Search  Tool.
In:  Proceedings  of  GLDV-Conference, Bonn, Germany, 2005.Mikulov?
et al 2006.
Annotation on the Tectogrammat-ical Level in the Prague Dependency Treebank (Ref-erence  Book).
?FAL/CKL  Technical  ReportTR-2006-32, Charles University in Prague, 2006.M?rovsk?
J.
2006.
Netgraph:  a  Tool  for  Searching  inPrague Dependency Treebank 2.0.
In Proceedings ofTLT 2006, Prague, pp.
211-222.Rychl?
P. 2000.
Korpusov?
mana?ery a jejich efektivn?implementace.
PhD.
Thesis, Brno, 2000.45
