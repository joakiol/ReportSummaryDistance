Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 13?24,Baltimore, Maryland, USA, June 23-25 2014.c?2014 Association for Computational LinguisticsRepresentation Learning for Text-level Discourse ParsingYangfeng JiSchool of Interactive ComputingGeorgia Institute of Technologyjiyfeng@gatech.eduJacob EisensteinSchool of Interactive ComputingGeorgia Institute of Technologyjacobe@gatech.eduAbstractText-level discourse parsing is notoriouslydifficult, as distinctions between discourserelations require subtle semantic judg-ments that are not easily captured usingstandard features.
In this paper, we presenta representation learning approach, inwhich we transform surface features intoa latent space that facilitates RST dis-course parsing.
By combining the machin-ery of large-margin transition-based struc-tured prediction with representation learn-ing, our method jointly learns to parse dis-course while at the same time learning adiscourse-driven projection of surface fea-tures.
The resulting shift-reduce discourseparser obtains substantial improvementsover the previous state-of-the-art in pre-dicting relations and nuclearity on the RSTTreebank.1 IntroductionDiscourse structure describes the high-level or-ganization of text or speech.
It is central toa number of high-impact applications, such astext summarization (Louis et al, 2010), senti-ment analysis (Voll and Taboada, 2007; Somasun-daran et al, 2009), question answering (Ferrucciet al, 2010), and automatic evaluation of studentwriting (Miltsakaki and Kukich, 2004; Bursteinet al, 2013).
Hierarchical discourse representa-tions such as Rhetorical Structure Theory (RST)are particularly useful because of the computa-tional applicability of tree-shaped discourse struc-tures (Taboada and Mann, 2006), as shown in Fig-ure 1.Unfortunately, the performance of discourseparsing is still relatively weak: the state-of-the-artF-measure for text-level relation detection in theRST Treebank is only slightly above 55% (Jotywhen profit was $107.8 million on sales of $435.5 million.The projections are in the neighborhood of 50 cents a share to 75 cents, compared with a restated $1.65 a share a year earlier,CIRCUMSTANCECOMPARISONFigure 1: An example of RST discourse structure.et al, 2013).
While recent work has introducedincreasingly powerful features (Feng and Hirst,2012) and inference techniques (Joty et al, 2013),discourse relations remain hard to detect, due inpart to a long tail of ?alternative lexicalizations?that can be used to realize each relation (Prasad etal., 2010).
Surface and syntactic features are notcapable of capturing what are fundamentally se-mantic distinctions, particularly in the face of rel-atively small annotated training sets.In this paper, we present a representation learn-ing approach to discourse parsing.
The core ideaof our work is to learn a transformation from abag-of-words surface representation into a latentspace in which discourse relations are easily iden-tifiable.
The latent representation for each dis-course unit can be viewed as a discriminatively-trained vector-space representation of its meaning.Alternatively, our approach can be seen as a non-linear learning algorithm for incremental struc-ture prediction, which overcomes feature sparsitythrough effective parameter tying.
We considerseveral alternative methods for transforming theoriginal features, corresponding to different ideasof the meaning and role of the latent representa-tion.Our method is implemented as a shift-reducediscourse parser (Marcu, 1999; Sagae, 2009).Learning is performed as large-margin transition-based structure prediction (Taskar et al, 2003),while at the same time jointly learning to projectthe surface representation into latent space.
The13resulting system strongly outperforms the priorstate-of-the-art at labeled F-measure, obtainingraw improvements of roughly 6% on relation la-bels and 2.5% on nuclearity.
In addition, we showthat the latent representation coheres well with thecharacterization of discourse connectives in thePenn Discourse Treebank (Prasad et al, 2008).2 ModelThe core idea of this paper is to project lexical fea-tures into a latent space that facilitates discourseparsing.
In this way, we can capture the meaningof each discourse unit, without suffering from thevery high dimensionality of a lexical representa-tion.
While such feature learning approaches haveproven to increase robustness for parsing, POStagging, and NER (Miller et al, 2004; Koo et al,2008; Turian et al, 2010), they would seem tohave an especially promising role for discourse,where training data is relatively sparse and ambi-guity is considerable.
Prasad et al (2010) showthat there is a long tail of alternative lexicalizationsfor discourse relations in the Penn Discourse Tree-bank, posing obvious challenges for approachesbased on directly matching lexical features ob-served in the training data.Based on this observation, our goal is to learna function that transforms lexical features intoa much lower-dimensional latent representation,while simultaneously learning to predict discoursestructure based on this latent representation.
Inthis paper, we consider a simple transformationfunction, linear projection.
Thus, we name the ap-proach DPLP: Discourse Parsing from Linear Pro-jection.
We apply transition-based (incremental)structured prediction to obtain a discourse parse,training a predictor to make the correct incremen-tal moves to match the annotations of training datain the RST Treebank.
This supervision signal isthen used to learn both the weights and the projec-tion matrix in a large-margin framework.2.1 Shift-reduce discourse parsingWe construct RST Trees using shift-reduce pars-ing, as first proposed by Marcu (1999).
At eachpoint in the parsing process, we maintain a stackand a queue; initially the stack is empty and thefirst elementary discourse unit (EDU) in the docu-ment is at the front of the queue.1The parser can1We do not address segmentation of text into elemen-tary discourse units in this paper.
Standard classification-Notation ExplanationV Vocabulary for surface featuresV Size of VK Dimension of latent spacewmClassification weights for class mC Total number of classes, which correspond topossible shift-reduce operationsA Parameter of the representation function (alsothe projection matrix in the linear representa-tion function)viWord count vector of discourse unit iv Vertical concatenation of word count vectorsfor the three discourse units currently beingconsidered by the parser?
Regularization for classification weights?
Regularization for projection matrix?iSlack variable for sample i?i,mDual variable for sample i and class m?tLearning rate at iteration tTable 1: Summary of mathematical notationthen choose either to shift the front of the queueonto the top of the stack, or to reduce the top twoelements on the stack in a discourse relation.
Thereduction operation must choose both the type ofrelation and which element will be the nucleus.So, overall there are multiple reduce operationswith specific relation types and nucleus positions.Shift-reduce parsing can be learned as a classifi-cation task, where the classifier uses features ofthe elements in the stack and queue to decide whatmove to take.
Previous work has employed deci-sion trees (Marcu, 1999) and the averaged percep-tron (Collins and Roark, 2004; Sagae, 2009) forthis purpose.
Instead, we employ a large-marginclassifier, because we can compute derivatives ofthe margin-based objective function with respectto both the classifier weights as well as the projec-tion matrix.2.2 Discourse parsing with projected featuresMore formally, we denote the surface feature vo-cabulary V , and represent each EDU as the nu-meric vector v ?
NV, where V = #|V| and the n-th element of v is the count of the n-th surface fea-ture in this EDU (see Table 1 for a summary of no-tation).
During shift-reduce parsing, we considerfeatures of three EDUs:2the top two elements onbased approaches can achieve a segmentation F-measureof 94% (Hernault et al, 2010); a more complex rerank-ing model does slightly better, at 95% F-Measure withautomatically-generated parse trees, and 96.6% with gold an-notated trees (Xuan Bach et al, 2012).
Human agreementreaches 98% F-Measure.2After applying a reduce operation, the stack will includea span that contains multiple EDUs.
We follow the strong14the stack (v1and v2), and the front of the queue(v3).
The vertical concatenation of these vectorsis denoted v = [v1;v2;v3].
In general, we canformulate the decision function for the multi-classshift-reduce classifier asm?
= argmaxm?
{1,...,C}w>mf(v;A) (1)where wmis the weight for the m-th classand f(v;A) is the representation functionparametrized by A.
The score for class m (inour case, the value of taking the m-th shift-reduce operation) is computed by the inner prod-uct w>mf(v;A).
The specific shift-reduce opera-tion is chosen by maximizing the decision value inEquation 1.The representation function f(v;A) can be de-fined in any form; for example, it could be a non-linear function defined by a neural network modelparametrized by A.
We focus on the linear projec-tion,f(v;A) = Av, (2)where A ?
RK?3Vis projects the surface repre-sentation v of three EDUs into a latent space ofsize K  V .Note that by setting?w>m= w>mA, the decisionscoring function can be rewritten as?w>mv, whichis linear in the original surface features.
Therefore,the expressiveness of DPLP is identical to a linearseparator in the original feature space.
However,the learning problem is considerably different.
Ifthere are C total classes (possible shift-reduce op-erations), then a linear classifier must learn 3V Cparameters, while DPLP must learn (3V + C)Kparameters, which will be smaller under the as-sumption that K < C  V .
This can be seenas a form of parameter tying on the linear weights?wm, which allows statistical strength to be sharedacross training instances.
We will consider specialcases of A that reduce the parameter space stillfurther.2.3 Special forms of the projection matrixWe consider three different constructions for theprojection matrix A.?
General form: In the general case, we placecompositionality criterion of Marcu (1996) and consider onlythe nuclear EDU of the span.
Later work may explore thecomposition of features between the nucleus and satellite.no special constraint on the form of A.f(v;A) = A??v1v2v3??
(3)This form is shown in Figure 2(a).?
Concatenation form: In the concatenationform, we choose a block structure for A, inwhich a single projection matrix B is appliedto each EDU:f(v;A) =[B 0 00 B 00 0 B][v1v2v3](4)In this form, we transform the representa-tion of each EDU separately, but do not at-tempt to represent interrelationships betweenthe EDUs in the latent space.
The numberof parameters in A is13KV .
Then, the totalnumber of parameters, including the decisionweights {wm}, in this form is (V3+ C)K.?
Difference form.
In the difference form, weexplicitly represent the differences betweenadjacent EDUs, by constructing A as a blockdifference matrix,f(v;A) =[C ?C 0C 0 ?C0 0 0][v1v2v3], (5)The result of this projection is that the la-tent representation has the form [C(v1?v2);C(v1?v3)], representing the differencebetween the top two EDUs on the stack, andbetween the top EDU on the stack and thefirst EDU in the queue.
This is intendedto capture semantic similarity, so that reduc-tions between related EDUs will be preferred.Similarly, the total number of parameters toestimate in this form is (V + 2C)K3.3 Large-Margin Learning FrameworkWe apply a large margin structure prediction ap-proach to train the model.
There are two pa-rameters that need to be learned: the classifica-tion weights {wm}, and the projection matrix A.As we will see, it is possible to learn {wm} us-ing standard support vector machine (SVM) train-ing (holding A fixed), and then make a simplegradient-based update to A (holding {wm} fixed).By interleaving these two operations, we arrive ata saddle point of the objective function.15A Wyv1 from stack v 2 from stack v 3 from queue(a) General formA Wyv1 from stack v 2 from stack v 3 from queue(b) Concatenation formA Wyv1 from stack v 2 from stack v 3 from queue(c) Difference formFigure 2: Decision problem with different representation functionsSpecifically, we formulate the following con-strained optimization problem,min{w1:C,?1:l,A}?2C?m=1?wm?22+l?i=1?i+?2?A?2Fs.t.
(wyi?wm)>f(vi;A) ?
1?
?yi=m?
?i,?
i,m(6)where m ?
{1, .
.
.
, C} is the index of theshift-reduce decision taken by the classifier (e.g.,SHIFT, REDUCE-CONTRAST-RIGHT, etc), i ?
{1, ?
?
?
, l} is the index of the training sample, andwmis the vector of classification weights for classm.
The slack variables ?ipermit the margin con-straint to be violated in exchange for a penalty, andthe delta function ?yi=mis unity if yi= m, andzero otherwise.As is standard in the multi-class linearSVM (Crammer and Singer, 2001), we can solvethe problem defined in Equation 6 via Lagrangianoptimization:L({w1:C, ?1:l,A, ?1:l,1:C}) =?2C?m=1?wm?22+l?i=1?i+?2?A?2F+?i,m?i,m{(w>m?w>yi)f(vi;A) + 1?
?yi=m?
?i}s.t.
?i,m?
0 ?i,m(7)Then, to optimize L, we need to find a saddlepoint, which would be the minimum for the vari-ables {w1:C, ?1:l} and the projection matrix A,and the maximum for the dual variables {?1:l,1:C}.If A is fixed, then the optimization problem isequivalent to a standard multi-class SVM, in thetransformed feature space f(vi;A).
We can obtainthe weights {w1:C} and dual variables {?1:l,1:C}from a standard dual-form SVM solver.
We thenupdate A, recompute {w1:C} and {?1:l,1:C}, anditerate until convergence.
This iterative procedureis similar to the latent variable structural SVM (Yuand Joachims, 2009), although the specific detailsof our learning algorithm are different.3.1 Learning Projection Matrix AWe update A while holding fixed the weights anddual variables.
The derivative of L with respect toA is?L?A= ?A+?i,m?i,m(w>m?w>yi)?f(vi;A)?A= ?A+?i,m?i,m(wm?wyi)vi>(8)Setting?L?A= 0, we have the closed-form solution,A =1??i,m?i,m(wm?wyi)vi>=1??i,j(wyi?
?m?i,mwm)vi>,(9)because the dual variables for each instance mustsum to one,?m?i,m= 1.Note that for a given i, the matrix (wyi?
?m?i,mwm)vi>is of (at most) rank-1.
There-fore, the solution of A can be viewed as the lin-ear combination of a sequence of rank-1 matrices,where each rank-1 matrix is defined by distribu-tional representation viand the weight differencebetween the weight of true label wyiand the ?ex-pected?
weight?m?i,mwm.One property of the dual variables is thatf(vi;A) is a support vector only if the dual vari-able ?i,yi< 1.
Since the dual variables for eachinstance are guaranteed to sum to one, we havewyi?
?m?i,mwm= 0 if ?i,yi= 1.
In otherwords, the contribution from non support vectorsto the projection matrix A is 0.
Then, we can fur-ther simplify the updating equation asA =1??vi?SV(wyi?
?m?i,mwm)vi>(10)This is computationally advantageous since manyinstances are not support vectors, and it shows thatthe discriminatively-trained projection matrix onlyincorporates information from each instance to theextent that the correct classification receives lowconfidence.16Algorithm 1 Mini-batch learning algorithmInput: Training set D, Regularization parame-ters ?
and ?
, Number of iteration T , Initializa-tion matrix A0, and Threshold ?while t = 1, .
.
.
, T doRandomly choose a subset of training sam-ples Dtfrom DTrain SVM with At?1to obtain {w(t)m} and{?
(t)i,m}Update Atusing Equation 11 with ?t=1tif?At?At?1?F?A2?A1?F< ?
thenReturnend ifend whileRe-train SVM with D and the final AOutput: Projection matrix A, SVM classifierwith weights w3.2 Gradient-based Learning for ASolving the quadratic programming defined by thedual form of the SVM is time-consuming, espe-cially on a large-scale dataset.
But if we focus onlearning the projection matrix A, we can speed uplearning by sampling only a small proportion ofthe training data to compute an approximate op-timum for {w1:C, ?1:l,1:C}, before each update ofA.
This idea is similar to the mini-batch learning,which has been used in large-scale SVM problem(Nelakanti et al, 2013) and deep learning models(Le et al, 2011).Specifically, in iteration t, the algorithm ran-domly chooses a subset of training samples Dttotrain the model.
We cannot make a closed-formupdate to A based on this small sample, but wecan take an approximate gradient step,At= (1?
?t?)At?1+?t{?vi?SV(Dt)(w(t)yi??m?
(t)i,mw(t)m)vi>},(11)where ?tis a learning rate.
In iteration t, wechoose ?t=1t.
After convergence, we obtain theweights w by applying the SVM over the entiredataset, using the final A.
The algorithm is sum-marized in Algorithm 1 and more details about im-plementation will be clarified in Section 4.
Whileminibatch learning requires more iterations, theSVM training is much faster in each batch, and theoverall algorithm is several times faster than usingthe entire training set for each update.4 ImplementationThe learning algorithm is applied in a shift-reduceparser, where the training data consists of the(unique) list of shift and reduce operations re-quired to produce the gold RST parses.
On testdata, we choose parsing operations in an onlinefashion ?
at each step, the parsing algorithmchanges the status of the stack and the queue ac-cording the selected transition, then creates thenext sample with the updated status.4.1 Parameters and InitializationThere are three free parameters in our approach:the latent dimension K, and regularization pa-rameters ?
and ?
.
We consider the values K ?
{30, 60, 90, 150}, ?
?
{1, 10, 50, 100} and ?
?
{1.0, 0.1, 0.01, 0.001}, and search over this spaceusing a development set of thirty document ran-domly selected from within the RST Treebanktraining data.
We initialize each element of A0to a uniform random value in the range [0, 1].
Formini-batch learning, we fixed the batch size to be500 training samples (shift-reduce operations) ineach iteration.4.2 Additional featuresAs described thus far, our model considers onlythe projected representation of each EDU in itsparsing decisions.
But prior work has shown thatother, structural features can provide useful in-formation (Joty et al, 2013).
We therefore aug-ment our classifier with a set of simple featuretemplates.
These templates are applied to individ-ual EDUs, as well as pairs of EDUs: (1) the twoEDUs on top of the stack, and (2) the EDU on topof the stack and the EDU in front of the queue.The features are shown in Table 2.
In computingthese features, all tokens are downcased, and nu-merical features are not binned.
The dependencystructure and POS tags are obtained from MALT-Parser (Nivre et al, 2007).5 ExperimentsWe evaluate DPLP on the RST Discourse Tree-bank (Carlson et al, 2001), comparing againststate-of-the-art results.
We also investigate the in-formation encoded by the projection matrix.5.1 Experimental SetupDataset The RST Discourse Treebank (RST-DT) consists of 385 documents, with 347 for train-17Feature ExamplesWords at beginning and end of the EDU?BEGIN-WORD-STACK1 = but?
?BEGIN-WORD-STACK1-QUEUE1 = but, the?POS tag at beginning and end of the EDU?BEGIN-TAG-STACK1 = CC?
?BEGIN-TAG-STACK1-QUEUE1 = CC, DT?Head word set from each EDU.
The set includes wordswhose parent in the depenency graph is ROOT or is notwithin the EDU (Sagae, 2009).
?HEAD-WORDS-STACK2 = working?Length of EDU in tokens ?LEN-STACK1-STACK2 = ?7, 8?
?Distance between EDUs ?DIST-STACK1-QUEUE1 = 2?Distance from the EDU to the beginning of the document ?DIST-FROM-START-QUEUE1 = 3?Distance from the EDU to the end of the document ?DIST-FROM-END-STACK1 = 1?Whether two EDUs are in the same sentence ?SAME-SENT-STACK1-QUEUE1 = True?Table 2: Additional features for RST parsinging and 38 for testing in the standard split.
Aswe focus on relational discourse parsing, we fol-low prior work (Feng and Hirst, 2012; Joty et al,2013), and use gold EDU segmentations.
Thestrongest automated RST segmentation methodscurrently attain 95% accuracy (Xuan Bach et al,2012).Preprocessing In the RST-DT, most nodes haveexactly two children, one nucleus and one satellite.For non-binary relations, we use right-branchingto binarize the tree structure.
For multi-nuclearrelations, we choose the left EDU as ?head?EDU.
The vocabulary V includes all unigrams af-ter down-casing.
No other preprocessing is per-formed.
In total, there are 16250 unique unigramsin V .Fixed projection matrix baselines Instead oflearning from data, a simple way to obtain a pro-jection matrix is to use matrix factorization.
Re-cent work has demonstrated the effectiveness ofnon-negative matrix factorization (NMF) for mea-suring distributional similarity (Dinu and Lapata,2010; Van de Cruys and Apidianaki, 2011).
Wecan construct Bnmfin the concatenation formof the projection matrix by applying NMF to theEDU-feature matrix, M ?WH.
As a result, Wdescribes each EDU with aK-dimensional vector,and H describes each word with a K-dimensionalvector.
We can then construct Bnmfby takingthe pseudo-inverse of H, which then projects fromword-count vectors into the latent space.Another way to construct B is to use neuralword embeddings (Collobert and Weston, 2008).In this case, we can view the product Bv as a com-position of the word embeddings, using the simpleadditive composition model proposed by Mitchelland Lapata (2010).
We used the word embeddingsfrom Collobert and Weston (2008) with dimension{25, 50, 100}.
Grid search over heldout trainingdata was used to select the optimum latent dimen-sion for both the NMF and word embedding base-lines.
Note that the size K of the resulting projec-tion matrix is three times the size of the embed-ding (or NMF representation) due to the concate-nate construction.We also consider the special case where A = I.Competitive systems We compare our approachwith HILDA (Hernault et al, 2010) and TSP (Jotyet al, 2013).
Joty et al (2013) proposed two dif-ferent approaches to combine sentence-level pars-ing models: sliding windows (TSP SW) and 1sentence-1 subtree (TSP 1-1).
In the comparison,we report the results of both approaches.
All re-sults are based on the same gold standard EDUsegmentation.
We cannot compare with the re-sults of Feng and Hirst (2012), because they donot evaluate on the overall discourse structure, butrather treat each relation as an individual classifi-cation problem.Metrics To evaluate the parsing performance,we use the three standard ways to measure the per-formance: unlabeled (i.e., hierarchical spans) andlabeled (i.e., nuclearity and relation) F-score, asdefined by Black et al (1991).
The applicationof this approach to RST parsing is described byMarcu (2000b).3To compare with previous workson RST-DT, we use the 18 coarse-grained relationsdefined in (Carlson et al, 2001).3We implemented the evaluation metrics by ourselves.Together with the DPLP system, all codes are published onhttps://github.com/jiyfeng/DPLP18Method Matrix Form +Features K Span Nuclearity RelationPrior work1.
HILDA (Hernault et al, 2010) 83.0 68.4 54.82.
TSP 1-1 (Joty et al, 2013) 82.47 68.43 55.733.
TSP SW (Joty et al, 2013) 82.74 68.40 55.71Our work4.
Basic features A = 0 Yes 79.43 67.98 52.965.
Word embeddings Concatenation No 75 75.28 67.14 53.796.
NMF Concatenation No 150 78.57 67.66 54.807.
Bag-of-words A = I Yes 79.85 69.01 60.218.
DPLP Concatenation No 60 80.91 69.39 58.969.
DPLP Difference No 60 80.47 68.61 58.2710.
DPLP Concatenation Yes 60 82.08 71.13 61.6311.
DPLP General Yes 30 81.60 70.95 61.75Human annotation 88.70 77.72 65.75Table 3: Parsing results of different models on the RST-DT test set.
The results of TSP and HILDA arereprinted from prior work (Joty et al, 2013; Hernault et al, 2010).5.2 Experimental ResultsTable 3 presents RST parsing results for DPLP andsome alternative systems.
All versionsof DPLP outperform the prior state-of-the-arton nuclearity and relation detection.
This includesrelatively simple systems whose features aresimply a projection of the word count vectorsfor each EDU (lines 7 and 8).
The addition ofthe features from Table 2 improves performancefurther, leading to absolute F-score improvementof around 2.5% in nuclearity and 6% in relationprediction (lines 9 and 10).On span detection, DPLP performs slightlyworse than the prior state-of-the-art.
These sys-tems employ richer syntactic and contextual fea-tures, which might be especially helpful for spanidentification.
As shown by line 4 of the re-sults table, the basic features from Table 2 pro-vide most of the predictive power for spans; how-ever, these features are inadequate at the moresemantically-oriented tasks of nuclearity and re-lation prediction, which benefit substantially fromthe projected features.
Since correctly identifyingspans is a precondition for nuclearity and relationprediction, we might obtain still better results bycombining features from HILDA and TSP with therepresentation learning approach described here.Lines 5 and 6 show that discriminative learningof the projection matrix is crucial, as fixed projec-tions obtained from NMF or neural word embed-dings perform substantially worse.
Line 7 showsthat the original bag-of-words representation to-gether with basic features could give us some ben-efit on discourse parsing, but still not as good asresults from DPLP.
From lines 8 and 9, we seethat the concatenation construction is superior tothe difference construction, but the comparisonbetween lines 10 and 11 is inconclusive on themerits of the general form of A.
This suggeststhat using the projection matrix to model interre-lationships between EDUs does not substantiallyimprove performance, and the simpler concatena-tion construction may be preferred.Figure 3 shows how performance changes fordifferent latent dimensions K. At each value ofK, we employ grid search over a development setto identify the optimal regularizers ?
and ?
.
Forthe concatenation construction, performance is notoverly sensitive to K. For the general form of A,performance decreases with large K. Recall fromSection 2.3 that this construction has nine times asmany parameters as the concatenation form; withlarge values of K, it is likely to overfit.5.3 Analysis of Projection MatrixWhy does projection of the surface features im-prove discourse parsing?
To answer this question,we examine what information the projection ma-trix is learning to encoded.
We take the projec-tion matrix from the concatenation constructionand K = 60 as an example for case study.
Re-calling the definition in equation 4, the projectionmatrix A will be composed of three identical sub-matrices B ?
R20?V.
The columns of the B ma-trix can be viewed as 20-dimensional descriptorsof the words in the vocabulary.For the purpose of visualization, we further re-duce the dimension of latent representation fromK = 20 to 2 dimensions using t-SNE (van derMaaten and Hinton, 2008).
One further simpli-1930 60 90 150K767778798081828384F-scoreConcatenation DPLPGeneral DPLPTSP 1-1 (Joty, et al, 2013)HILDA (Hernault, et al, 2010)(a) Span30 60 90 150K6566676869707172F-scoreConcatenation DPLPGeneral DPLPTSP 1-1 (Joty, et al, 2013)HILDA (Hernault, et al, 2010)(b) Nuclearity30 60 90 150K50525456586062F-scoreConcatenation DPLPGeneral DPLPTSP 1-1 (Joty, et al, 2013)HILDA (Hernault, et al, 2010)(c) RelationFigure 3: The performance of our parser over different latent dimension K. Results for DPLP includethe additional features from Table 3fication for visualization is we consider only thetop 1000 frequent unigrams in the RST-DT train-ing set.
For comparison, we also apply t-SNE tothe projection matrix Bnmfrecovered from non-negative matrix factorization.Figure 4 highlights words that are related to dis-course analysis.
Among the top 1000 words, wehighlight the words from 5 major discourse con-nective categories provided in Appendix B of thePDTB annotation manual (Prasad et al, 2008):CONJUNCTION, CONTRAST, PRECEDENCE, RE-SULT, and SUCCESSION.
In addition, we alsohighlighted two verb categories from the top 1000words: modal verbs and reporting verbs, with theirinflections (Krestel et al, 2008).From the figure, it is clear DPLP has learned aprojection matrix that successfully groups severalmajor discourse-related word classes: particularlymodal and reporting verbs; it has also groupedsuccession and precedence connectives with somesuccess.
In contrast, while NMF does obtain com-pact clusters of words, these clusters appear to becompletely unrelated to discourse function of thewords that they include.
This demonstrates thevalue of using discriminative training to obtain thetransformed representation of the discourse units.6 Related WorkEarly work on document-level discourse parsingapplied hand-crafted rules and heuristics to buildtrees in the framework of Rhetorical StructureTheory (Sumita et al, 1992; Corston-Oliver, 1998;Marcu, 2000a).
An early data-driven approachwas offered by Schilder (2002), who used distribu-tional techniques to rate the topicality of each dis-course unit, and then chose among underspecifieddiscourse structures by placing more topical sen-tences near the root.
Learning-based approacheswere first applied to identify within-sentence dis-course relations (Soricut and Marcu, 2003), andonly later to cross-sentence relations at the docu-ment level (Baldridge and Lascarides, 2005).
Ofparticular relevance to our inference technique areincremental discourse parsing approaches, suchas shift-reduce (Sagae, 2009) and A* (Muller etal., 2012).
Prior learning-based work has largelyfocused on lexical, syntactic, and structural fea-tures, but the close relationship between discoursestructure and semantics (Forbes-Riley et al, 2006)suggests that shallow feature sets may struggleto capture the long tail of alternative lexicaliza-tions that can be used to realize discourse rela-tions (Prasad et al, 2010; Marcu and Echihabi,2002).
Only Subba and Di Eugenio (2009) incor-porate rich compositional semantics into discourseparsing, but due to the ambiguity of their seman-tic parser, they must manually select the correctsemantic parse from a forest of possiblities.Recent work has succeeded in pushing the state-of-the-art in RST parsing by innovating on sev-eral fronts.
Feng and Hirst (2012) explore richlinguistic linguistic features, including lexical se-mantics and discourse production rules suggestedby Lin et al (2009) in the context of the Penn Dis-course Treebank (Prasad et al, 2008).
Muller etal.
(2012) show that A* decoding can outperformboth greedy and graph-based decoding algorithms.Joty et al (2013) achieve the best prior resultson RST relation detection by (i) jointly perform-ing relation detection and classification, (ii) per-forming bottom-up rather than greedy decoding,and (iii) distinguishing between intra-sentence andinter-sentence relations.
Our approach is largelyorthogonal to this prior work: we focus on trans-20although until howeveralsothoughbutthuslatercancouldwouldshouldandwhenafter soonce willmight maybeforethensayssay reportedsaid sayingbelievethinkmustaskedreport(a) Latent representation of words from projection learningwith K = 20.butwould whenalso maycan then mustmightoncehoweversothoughthusalthoughshouldlateruntilwillbefore aftercouldandsayssaid sayasked saying thinkbelievereportConjunctionContrastPrecedenceResultSuccessionModal verbReporting verb(b) Latent representation of words from non-negative matrixfactorization with K = 20.Figure 4: t-SNE Visualization on latent representations of words.forming the lexical representation of discourseunits into a latent space to facilitate learning.
Asshown in Figure 4(a), this projection succeedsat grouping words with similar discourse func-tions.
We might expect to obtain further improve-ments by augmenting this representation learningapproach with rich syntactic features (particularlyfor span identification), more accurate decoding,and special treatment of intra-sentence relations;this is a direction for future research.Discriminative learning of latent features fordiscourse processing can be viewed as a formof representation learning (Bengio et al, 2013).Also called Deep Learning, such approacheshave recently been applied in a number of NLPtasks (Collobert et al, 2011; Socher et al, 2012).Of particular relevance are applications to the de-tection of semantic or discourse relations, suchas paraphrase, by comparing sentences in an in-duced latent space (Socher et al, 2011; Guo andDiab, 2012; Ji and Eisenstein, 2013).
In this work,we show how discourse structure annotations canfunction as a supervision signal to discriminativelylearn a transformation from lexical features to a la-tent space that is well-suited for discourse parsing.Unlike much of the prior work on representationlearning, we induce a simple linear transforma-tion.
Extension of our approach by incorporatinga non-linear activation function is a natural topicfor future research.7 ConclusionWe have presented a framework to perform dis-course parsing while jointly learning to project toa low-dimensional representation of the discourseunits.
Using the vector-space representation ofEDUs, our shift-reduce parsing system substan-tially outperforms existing systems on nuclearitydetection and discourse relation identification.
Byadding some additional surface features, we ob-tain further improvements.
The low dimensionalrepresentation also captures basic intuitions aboutdiscourse connectives and verbs, as shown in Fig-ure 4(a).Deep learning approaches typically apply anon-linear transformation such as the sigmoidfunction (Bengio et al, 2013).
We have con-ducted a few unsuccessful experiments with the?hard tanh?
function proposed by Collobert andWeston (2008), but a more complete explorationof non-linear transformations must wait for futurework.
Another direction would be more sophis-ticated composition of the surface features withineach elementary discourse unit, such as the hierar-chical convolutional neural network (Kalchbren-ner and Blunsom, 2013) or the recursive tensornetwork (Socher et al, 2013).
It seems likely thata better accounting for syntax could improve thelatent representations that our method induces.AcknowledgmentsWe thank the reviewers for their helpful feedback,particularly for the connection to multitask learn-ing.
We also want to thank Kenji Sagae andVanessa Wei Feng for the helpful discussion viaemail communication.
This research was sup-ported by Google Faculty Research Awards to thesecond author.21ReferencesJason Baldridge and Alex Lascarides.
2005.
Proba-bilistic head-driven parsing for discourse structure.In Proceedings of the Ninth Conference on Compu-tational Natural Language Learning, pages 96?103.Yoshua Bengio, Aaron Courville, and Pascal Vincent.2013.
Representation Learning: A Review and NewPerspectives.
IEEE Transactions on Pattern Analy-sis and Machine Intelligence, 35(8):1798?1828.Ezra Black, Steve Abney, Dan Flickinger, ClaudiaGdaniec, Ralph Grishman, Phil Harrison, Don Hin-dle, Robert Ingria, Fred Jelinek, Judith Klavans,Mark Liberman, Mitchell Marcus, Salim Roukos,Beatrice Santorini, and Tomek Strzalkowski.
1991.A Procedure for Quantitatively Comparing the Syn-tactic Coverage of English Grammars.
In Speechand Natural Language: Proceedings of a WorkshopHeld at Pacific Grove, California, February 19-22,1991, pages 306?311.Jill Burstein, Joel Tetreault, and Martin Chodorow.2013.
Holistic discourse coherence annotationfor noisy essay writing.
Dialogue & Discourse,4(2):34?52.Lynn Carlson, Daniel Marcu, and Mary EllenOkurowski.
2001.
Building a Discourse-taggedCorpus in the Framework of Rhetorical StructureTheory.
In Proceedings of Second SIGdial Work-shop on Discourse and Dialogue.Michael Collins and Brian Roark.
2004.
Incrementalparsing with the perceptron algorithm.
In Proceed-ings of ACL, page 111.
Association for Computa-tional Linguistics.R.
Collobert and J. Weston.
2008.
A Unified Architec-ture for Natural Language Processing: Deep NeuralNetworks with Multitask Learning.
In ICML.R.
Collobert, J. Weston, L. Bottou, M. Karlen,K.
Kavukcuoglu, and P. Kuksa.
2011.
Natural Lan-guage Processing (Almost) from Scratch.
Journal ofMachine Learning Research, 12:2493?2537.Simon Corston-Oliver.
1998.
Beyond string matchingand cue phrases: Improving efficiency and coveragein discourse analysis.
In The AAAI Spring Sympo-sium on Intelligent Text Summarization, pages 9?15.Koby Crammer and Yoram Singer.
2001.
On the Algo-rithmic Implementation of Multiclass Kernel-basedVector Machines.
Journal of Machine Learning Re-search, 2:265?292.Georgiana Dinu and Mirella Lapata.
2010.
Measur-ing Distributional Similarity in Context.
In EMNLP,pages 1162?1172.Vanessa Wei Feng and Graeme Hirst.
2012.
Text-levelDiscourse Parsing with Rich Linguistic Features.
InProceedings of ACL.David Ferrucci, Eric Brown, Jennifer Chu-Carroll,James Fan, David Gondek, Aditya A Kalyanpur,Adam Lally, J William Murdock, Eric Nyberg, JohnPrager, et al 2010.
Building Watson: An overviewof the DeepQA project.
AI magazine, 31(3):59?79.Katherine Forbes-Riley, Bonnie Webber, and AravindJoshi.
2006.
Computing discourse semantics: Thepredicate-argument semantics of discourse connec-tives in D-LTAG.
Journal of Semantics, 23(1):55?106.Weiwei Guo and Mona Diab.
2012.
Modeling Sen-tences in the Latent Space.
In Proceedings of ACL,pages 864?872, Jeju Island, Korea, July.
Associationfor Computational Linguistics.Hugo Hernault, Helmut Prendinger, David A. duVerle,and Mitsuru Ishizuka.
2010.
HILDA: A DiscourseParser Using Support Vector Machine Classification.Dialogue and Discourse, 1(3):1?33.Yangfeng Ji and Jacob Eisenstein.
2013.
Discrimina-tive Improvements to Distributional Sentence Simi-larity.
In EMNLP, pages 891?896, Seattle, Washing-ton, USA, October.
Association for ComputationalLinguistics.Shafiq Joty, Giuseppe Carenini, Raymond Ng, andYashar Mehdad.
2013.
Combining Intra- andMulti-sentential Rhetorical Parsing for Document-level Discourse Analysis.
In Proceedings of ACL.Nal Kalchbrenner and Phil Blunsom.
2013.
Recurrentconvolutional neural networks for discourse compo-sitionality.
In Proceedings of the Workshop on Con-tinuous Vector Space Models and their Composition-ality, pages 119?126, Sofia, Bulgaria, August.
Asso-ciation for Computational Linguistics.Terry Koo, Xavier Carreras, and Michael Collins.2008.
Simple Semi-supervised Dependency Pars-ing.
In Proceedings of ACL-HLT, pages 595?603,Columbus, Ohio, June.
Association for Computa-tional Linguistics.Ralf Krestel, Sabine Bergler, and Ren?e Witte.
2008.Minding the Source: Automatic Tagging of Re-ported Speech in Newspaper Articles.
In LREC,Marrakech, Morocco, May.
European Language Re-sources Association (ELRA).Quoc V. Le, Jiquan Ngiam, Adam Coates, AbhikLahiri, Bobby Prochnow, and Andrew Y. Ng.
2011.On Optimization Methods for Deep Learning.
InICML.Ziheng Lin, Min-Yen Kan, and Hwee Tou Ng.
2009.Recognizing Implicit Discourse Relations in thePenn Discourse Treebank.
In EMNLP.Annie Louis, Aravind Joshi, and Ani Nenkova.
2010.Discourse indicators for content selection in summa-rization.
In Proceedings of the 11th Annual Meetingof the Special Interest Group on Discourse and Di-alogue, pages 147?156.
Association for Computa-tional Linguistics.22Daniel Marcu and Abdessamad Echihabi.
2002.
AnUnsupervised Approach to Recognizing DiscourseRelations.
In Proceedings of ACL, pages 368?375,Philadelphia, Pennsylvania, USA, July.
Associationfor Computational Linguistics.Daniel Marcu.
1996.
Building Up Rhetorical StructureTrees.
In Proceedings of AAAI.Daniel Marcu.
1999.
A Decision-Based Approach toRhetorical Parsing.
In Proceedings of ACL, pages365?372, College Park, Maryland, USA, June.
As-sociation for Computational Linguistics.Daniel Marcu.
2000a.
The Rhetorical Parsing of Un-restricted Texts: A Surface-based Approach.
Com-putational Linguistics, 26:395?448.Daniel Marcu.
2000b.
The Theory and Practice of Dis-course Parsing and Summarization.
MIT Press.Scott Miller, Jethran Guinness, and Alex Zamanian.2004.
Name Tagging with Word Clusters and Dis-criminative Training.
In Daniel Marcu Susan Du-mais and Salim Roukos, editors, HLT-NAACL, pages337?342, Boston, Massachusetts, USA, May 2 -May 7.
Association for Computational Linguistics.Eleni Miltsakaki and Karen Kukich.
2004.
Evaluationof text coherence for electronic essay scoring sys-tems.
Natural Language Engineering, 10(1):25?55.Jeff Mitchell and Mirella Lapata.
2010.
Compositionin distributional models of semantics.
Cognitive Sci-ence, 34(8):1388?1429.Philippe Muller, Stergos Afantenos, Pascal Denis, andNicholas Asher.
2012.
Constrained Decoding forText-Level Discourse Parsing.
In Coling, pages1883?1900, Mumbai, India, December.
The COL-ING 2012 Organizing Committee.Anil Kumar Nelakanti, Cedric Archambeau, JulienMairal, Francis Bach, and Guillaume Bouchard.2013.
Structured Penalties for Log-Linear Lan-guage Models.
In EMNLP, pages 233?243, Seattle,Washington, USA, October.
Association for Com-putational Linguistics.Joakim Nivre, Johan Hall, Jens Nilsson, AtanasChanev, G?ulsen Eryigit, Sandra K?ubler, SvetoslavMarinov, and Erwin Marsi.
2007.
MaltParser:A language-independent system for data-driven de-pendency parsing.
Natural Language Engineering,13(2):95?135.Rashmi Prasad, Nikhil Dinesh, Alan Lee, Eleni Milt-sakaki, Livio Robaldo, Aravind Joshi, and BonnieWebber.
2008.
The penn discourse treebank 2.0.
InLREC.Rashmi Prasad, Aravind Joshi, and Bonnie Webber.2010.
Realization of discourse relations by othermeans: alternative lexicalizations.
In Proceedingsof the 23rd International Conference on Computa-tional Linguistics: Posters, pages 1023?1031.
Asso-ciation for Computational Linguistics.Kenji Sagae.
2009.
Analysis of Discourse Structurewith Syntactic Dependencies and Data-Driven Shift-Reduce Parsing.
In Proceedings of the 11th Interna-tional Conference on Parsing Technologies (IWPT),pages 81?84, Paris, France, October.
Association forComputational Linguistics.Frank Schilder.
2002.
Robust discourse parsing viadiscourse markers, topicality and position.
NaturalLanguage Engineering, 8(3):235?255.Richard Socher, Eric H. Huang, Jeffrey Pennington,Andrew Y. Ng, and Christopher D. Manning.
2011.Dynamic Pooling and Unfolding Recursive Autoen-coders for Paraphrase Detection.
In NIPS.Richard Socher, Brody Huval, Christopher D. Man-ning, and Andrew Y. Ng.
2012.
Semantic Composi-tionality Through Recursive Matrix-Vector Spaces.In EMNLP.Richard Socher, Alex Perelygin, Jean Y Wu, JasonChuang, Christopher D Manning, Andrew Y Ng,and Christopher Potts.
2013.
Recursive deep mod-els for semantic compositionality over a sentimenttreebank.
In Proceedings of the Conference on Em-pirical Methods in Natural Language Processing(EMNLP).Swapna Somasundaran, Galileo Namata, JanyceWiebe, and Lise Getoor.
2009.
Supervised andunsupervised methods in employing discourse rela-tions for improving opinion polarity classification.In Proceedings of EMNLP.Radu Soricut and Daniel Marcu.
2003.
Sentence LevelDiscourse Parsing using Syntactic and Lexical Infor-mation.
In NAACL.Rajen Subba and Barbara Di Eugenio.
2009.
An effec-tive Discourse Parser that uses Rich Linguistic In-formation.
In NAACL-HLT, pages 566?574, Boul-der, Colorado, June.
Association for ComputationalLinguistics.K.
Sumita, K. Ono, T. Chino, T. Ukita, and S. Amano.1992.
A discourse structure analyzer for Japanesetext.
In Proceedings International Conference onFifth Generation Computer Systems, pages 1133?1140.Maite Taboada and William C Mann.
2006.
Applica-tions of rhetorical structure theory.
Discourse stud-ies, 8(4):567?588.Benjamin Taskar, Carlos Guestrin, and Daphne Koller.2003.
Max-margin markov networks.
In NIPS.Joseph Turian, Lev Ratinov, and Yoshua Bengio.2010.
Word Representation: A Simple and GeneralMethod for Semi-Supervised Learning.
In Proceed-ings of ACL, pages 384?394.Tim Van de Cruys and Marianna Apidianaki.
2011.Latent Semantic Word Sense Induction and Disam-biguation.
In Proceedings of ACL, pages 1476?1485, Portland, Oregon, USA, June.
Association forComputational Linguistics.23Laurens van der Maaten and Geoffrey Hinton.
2008.Visualizing Data using t-SNE.
Journal of MachineLearning Research, 9:2759?2605, November.Kimberly Voll and Maite Taboada.
2007.
Not allwords are created equal: Extracting semantic orien-tation as a function of adjective relevance.
In Pro-ceedings of Australian Conference on Artificial In-telligence.Ngo Xuan Bach, Nguyen Le Minh, and Akira Shimazu.2012.
A Reranking Model for Discourse Segmenta-tion using Subtree Features.
In Proceedings of the13th Annual Meeting of the Special Interest Groupon Discourse and Dialogue, pages 160?168.Chun-Nam John Yu and Thorsten Joachims.
2009.Learning structural SVMs with latent variables.
InProceedings of the 26th Annual International Con-ference on Machine Learning, pages 1169?1176.ACM.24
