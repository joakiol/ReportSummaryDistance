hesaurus-based Efficient Example Retrievalby Generating Retrieval Queries from Similarities*Takehito Utsuro t Kiyotaka Uchimoto* Mitsutaka Matsumoto* Makoto Nagao*~ tGraduate School of Information Science lDept, of I',lectrlcal EngineeringNara Institute of Science and Technology Kyoto UniversityAbst rac tIn example-based NLP, the problem of eoml)utationalcost of example retrieval is severe, since the retrievaltime increases in proportion to the number of examplesin the database.
This paper proposes a novel exampleretrieval method for avoiding ftfll retrieval of examples.The proposed method has the following three features,1) it generates retrieval queries from similarities, 2) ef-ficient example retrieval through the tree structure of athesaurus, 3) binary search along subsumption orderingof retrieval queries.
Example retrieval time drasticallydecreases with the method.1 I n t roduct ionSince a nmdel of machine translation (MT) calledTranslation by Analogy was first proposed in Nagao(1984), nmch work has been undertaken in example-ba~sed NLP (e.g.
Sato and Nagao (1990) and Kuro-hashi and Nagao (1993)).
The basic idea of example-based approach to NLP is to accomplish some task inNLP by imitating a similar previous example, insteadof using rules written by human writers.
Major pro-cessing steps of example-based approach are: 1) collectexamples and the results of performing the task in adatabase, 2) given an input, retrieve similar examplesfrom the database, 3) adapt the results of tile similarexamples to the current input and obtain the output.Compared with the traditional rule-based approach,example-based approach has advantages like: 1) it iseasier to maintain the implemented system, since oncethe system is constructed, the performance can be im-proved just by adding new examples, 2) finer-grainedsyntactic and semantic discrimination can be expectedjust by adopting finer-grained similarity measure be-tween the input and the example.ht almost all the previous fl'ameworks of example-based NLP, it is necessary to calculate similarity valuesfor all the examples in the database in order to find themost similar one, and this is called full retrieval.
Usu-ally, the computational cost of example retrieval causesa severe problem, because the retrieval time increases inproportion to the number of examples in the database.This paper proposes a novel method for avoiding flfllretrieval.
The proposed method, which we call querygeneration retrieval, has the following three features,*The authors would like to thank Prof. Y. Matsumoto fNara Institute of Science and Technology, Dr. Y. Den and Dr.E.
Sumita of ATR, and Mr. M. Shimbo of Kyoto University, forvaluable comments on the draft of the paper.1) it generates retrieval queries from similarities, 2) ef-ficient example retrieval through the tree structure ofa thesaurus, 3) binary search along subsumption or-dering of retrieval, queries.
In this paper, we focus onretrieval of example surface case structures of Japanesesentences.
The similarity vatne between the input andthe example is calculated using existing hand-compiledthesaurus.
In the following sections, the similarity mea-sure of surface case structures is defined in section 2,then the framework of query generation retrieval is de-scribed in section 3.2 S imi la r i ty  o f  Sur face  CaseSt ructuresAs a similarity measure  of sur face  case structm'es~ webasically use the similarity measure in Kurohashi andNagao (1.993).
Since the attthors' similarity measureis intended for calculating similarity between tile inputsurface case structure and a case fl'ame with exalnplenora, s, we adjust it to the similarity betweei, two sur-face case structures.
Tile following describes the datastructure of surface case structures and the thesaurus,and gives the definition of the similarity measure.2.1 Data Structure2.1.1 Sur face Case St ructureIn general, surface case structure of a Japanese sentencecan be represented in feature-structure-like notation asbelow:\[ pred:V, pl \[pred:Nl , .,p,~: : .sern:Seml \] "" \[pred:NnIn this notation, V is the verb, P l , .
.
.
, P~ are theJapanese surface ease markers, N1, .
.
.
,  N,~ are ease ebement norms, and Semi,.
.
.
,Sem,~ are the semanticcategories of each case element in a thesaurus.In our task of retrieval of example surface case struc-tures, the input and the examples to be retrieved haveto have the same verb.
Besides, the similarity valuebetween the input and the example is dependent onlyon each semantic ategory.
Thus, in this paper, we de-fine the smJaee case structure of a sentence a.q the setof pairs {p, Sere) where p is a surface case marker andSere is the leaf semantic ategory of the case elementnoun: 1e : { (pl, Seg~gl) .
.
.
.
.
(pn, Se~Ttn> }1In the remainder of this paper, for brevity's ake, we regardlloans as analllbigllOllS I~tlld assume that a noun has only oneleaf semantic ategory in the thesaurus, although noan8 (:an beambiguous and have more than one semantic ategory in thecurrent implementation.10442.1.2 ThesaurusA thesaurus of nouns is regarded us a tree in whicheach node represents a semantic ategory.
We define athesaurus of nouns as a rooted directed tree (SC, El)where SC is the set of semantic categories and Et C=SC x SC is the set of directed edges:l'Jt =: { (5'eml,5'emj) l S'emi,.S'em j ~ .qU }A noun has on{!
(or possibly more) leaf semantic ute-gory in the thesaurus.
At present we use an on-line the-saurus called Bunrui Goi Ilyou (BGH) (NLR1, 1964).BGII  has a six-layered M)straetion hierarchy and morethan 60,000 Japanese words are assigned to the leaves.2.2 S imi la r i ty  Measure2.2.1 S imi la r i ty  o f  Se |nant ic  Categor iesBefore we define the similarity of surfaee case struc-tures, first we deline the similarity of semantic cat-egories in the thesaurus.
We detine the similaritysim.~(,b'eml , Sere2) of two semantic eatego'ries ~5'e11~1and Sere2 as ~L monotonieal ly increasing function ofthe most specific eonllilOll layer mscl(Seml, ,5'ern2) ofSenh and ,S'e~*, 2 aS below:mad / 1 2 3 4 5 6 exact match1 ,S/ms undef 5 7 8 9 18 112.2.2 S imi la r i ty  o f  Sur face  Case  St ructuresFirst,  we assume, that  the similarity measure of surfacec~Lse sl;ructnres have to satisfy the following require-meats.
The s imibmty should become greater if 1) thenumber of the eol'respoiMing cases becomes greater, o,'2) the corresponding ease element nouns become moresimilar, or 3) the ratio of the number of the correspond-ing cases to the l,nnlbcr of the cases in each surface casestructure becomes greater.When cMculating the simihLrity of two surface casestructures el and e2, flrsl; e~ and e2 are matche(l andthe set of pairs of the corresponding eases, M(ea,e2),is construcl;ed.
A ease (pli, Sernli) of el corr(>sponds to ~ c~se (p2j,Sern2j} of e2 only when thesurface case markers Pil and P2j are tim same andsim~(Sern,i, Sem2j) is (lefine(l. 2 bet s imp.
, (m)be  thesimilarity of a pair m of corresponding cases, then thesimilarity sims(el,e2) of the two aurfae.e case struc-tures el and (!2 is delined as below:.
im,,.
( r. )v/\[MI x :"~<-r~- .
.
.
.
.
.
.
.
IMI x ~IFMI( x VIe=/'/\[~where IMI is the number of the corresponding causes,and I,~,l and I~=i a,'e the number of case,~ in e, ~md e2respectively.
The first factor satisfies requirement 1),2In Japanese, there exist several topic-marking post-positional particles uch as "tl (wa)" and "g (too)", and easesmarked by those topic-marking post-positional particles couldcorrespond to cases marked by caue-marking post-lmsitional par-tides such a.s "/)?
(ga-NOM)" and "~: (wo-ACC)'.
Although thispaper considers ease-marking post-positional particles only, theimplemented system can appropriately cMeulate the similarityof surface ase structtnes in which topic-marking po.st-positionMparticles apl)e~mand tile second sat is fes 2).
'.File third and the fourthsatisfy 3) .For example, the similarity of the surface case struc-tures el and e2 of Example 1 and 2 is calculated asfolh)ws.Example  1kare- ga hon - wo  kauhe - NOM book- ACC buy(fie buys a book.)Example.
2kare- ga musuko-, ni nooto-, wo kauhe - NOM son- DAT notebook- ACC buy(lie buys his son a notehook.
)First, the set of pairs of the COl'rest)onding cases,M(c l ,  e~), is constructed (nb=notcbook).- { (( ~ (,,,{0, se,,~,~), ( ~ (u~), Semao)), M( )~: (wo), Sem~oo~), ( ~ (wo), se~.~,~,,)) } ((In the ease of semantic ategories in BGIt, the resultsof the similarity calculation are sim..(Se~nh~, Semhe)= 11 and simo(Se.~boo~, Se.~)  = 9.
S ince  IMI ,  levi ,and levi are 2, ~, a.d 3 respectively, s ims(e l ,e2) i scMculated as follows:11+9(22  ~ ~i.~,.
(e,,e~) = ?
'~x-  2 x x = u.ss3 Query  Generat ion  Ret r ieva lQuery generation retrieval has the following three t~a-tares, 1) it generates retrievM queries from similarities,2) eflleient example retrievM through the tree struc-ture of a thesaurus, 3) binary search along subsump-lion ordering of retrieval queries.
F ig .
1 describes theframework of query generation retrievM.In query generation retrieval, first, given an inlmtsurface case structure, t retrieval query is generatedfor a certmn similarity and then example surface casestructures which satisfy the similarity are retrievedfrom the example database.
In order to generate a re-trieval query which satisfy the given similarity require-meat,  it is necessary to enumerate all the l)ossible pat-terns of surf~tce case structures which satisfy the givensimilarity reqtdrement.
We define similarity templatewhich enumerates all the possible patterns of (:alculat-lug similarity between two surface case structures andcollect them in a similarity table.
The similarity tableis referred to whm, gener~tting retrievM queries from theinl)ut surface case structure and a certmn similarity.A retriewd query consists of the number of cases ofthe e?ample to be retrieved, cases which the exampleto be retrieved should have, and semantic restrictionsof ease element nouns.
\[n order to quickly retrieve ex-amples which satisfy a retrievM query, for each surfacecase marker we build a sub-structure of the whole the-sara'us of l|OUiis, which we call sub-thesaurus.
Exampleswhich satisfy the requirements in a retrieval query arequickly retrieved through the tree structure of thosesub-thesauri.1045Input Surface Case Structure?Similarity Table(Similarity Template)?Retrieval Query?
1, r\ /Fig.
1: The Framework of Query Generation RetrievalIn our query generation retrieval, it is necessary tocontrol the retrieval process effectively by providingsimilarities in a certain order and to retrieve the mostsimilar examples as fast as possible.
In this paper, weuse binary search along subsumption ordering of re-trieval queries.
It is possible to define a subsmnptionrelation between two retrieval queries.
Such subsump-tion relation of retrieval queries results in the subsump-tion relation of the sets of retrieved examples.
Thismeans that a set of retrieved examples ubsumes an-other set if the retrieval query of the former set sub-sumes, or in other words, is more general than thatof the latter set.
With those subsumption relations ofretrieval queries and the sets of retrieved examples, itbecomes possible to efficiently binary-search t e set ofexamples to be retrieved by the most specific retrievalquery.Sections from 3.1 to 3.3 describe those three featuresand section 3.4 evaluates the framework.3 .1  Ret r ieva l  Query  Generat ion  f romS imi la r i t ies3.1.1 Retrieval QueryA retrieval query q is defined as a pair (ldb, csp), whereldb is the number of cases of the example to be re-trieved, and csp is the requirement on cases and se-mantic restriction of case element nouns, which we calla case structure pattern.
A case structure pattern isrepresented as a set of pairs (p, Sere) of a surface casemarker p and a semantic category Sere, where Sereis not necessarily a leaf semantic ategory.
It requiresthat for each element (p, Sem} in csp, the example tobe retrieved has to have a case marked by p and thecase element noun has to satisfy the semantic restric-tion of the semantic ategory Sere.For example, for the verb "~ ~) (buy)", the followingql requires that  the example to be retrieved should havethree cases, the case element noun of "~ (ga-NOM)"should be "~/(he)" ,  and that of the "~ (wo-ACC)"case should belong to the semantic ategory of "st"(="stationery").
ql retrieves examples like "~/, ~,  ,~, f', ~:-,/ " -  b, ~, ~'~ 5"(He buys his son a notebook.)
and "~,~, ~,  V-, ,~~?, ~ , ~'~ ")"(He buys his daughter pencils.
).ql = (3, { (;4 ~(ga),Semhe),(~ wo),Semst) } )3.1.2 Similar ity TemplateWe introduce the notion of similarity template in orderto enumerate all the possible patterns of calculating thesimilarity between two surface ease structures.
In thecase of the similarity measure defined in section 2.2.2,a similarity template is represented as a 3-tupple:where lin and lab correspond to the number of casesof the input and of the example respectively, and theyare supposed to be less than or equal to the prede-termined maximum number l,~a~.
CS is the multisetof the similarities between corresponding ease elementnouns.
For example, in the case of Example 1 and 2 insection 2.2.2, the result of similarity calculation is rep-resented as a similarity template (2, 3, {11, 9}} (supposethat the former example is the input and the latter isfrom the example database).All the possible combinations of li,, ldb, and CS canbe enumerated beforehand without any inputs and ex-amples if only the maximum case number lm~ is given.Suppose that lm~, is 3, the number of possible combi-nations of lin, ldb, and CS is 203.3.1.3 Retrieval Query GenerationSimilarity templates are collected in the similarity tableand referred to when generating rctrievM queries fromthe input and a certain similarity.
The following showshow to generate a retrieval query frmn an input ei,~ anda similarity template t = (\]ei,d, ldb , CS).The retrieval query to be generated is denoted asq = (Idb,CSp), where ldb corresponds to the munber ofcases in tile example to be retrieved and is the sameas Idb.
in t. CS in t is the multiset of the similaritiesbetween corresponding case element nouns.
When con-structing the case structure pattern csp fl'om ein andCS, we use an injection to map each similarity sire incs  to  a ease (p, Se.~)  in ~ .
~or each (p, Se~,~)to which a similarity sire is mapped, a case (p, Sere)is collected into csp, where the semantic ategory Seresatisfies im~( Semin, Sere) = sire.For example, let the input ei,~ be the surface casestructure of Example 1 and the similarity template tbe (2,3, {11,9}), then there exist two possible injec-tions frmn CS into ein and two retrieval queries aregenerated as below (s im,(SemN, SemN,,,) = x):o.
= { (~'(~a),S~..~o,,(~(.~o),S.m~oo~) }ql = (3,{( ~)"(ga),Semhe,ll),( e wo),Sembook,9)}>10463.2 Efficient Example Retrieval withSub-ThesaurusEach element (p, Sern} in a case structure pattern csprequires that  the example surface case structure has tohave a case marked by p and the case element nounhas to satisfy the semantic restriction of the seman-tic category Sere.
Given the example databa.se, it ispossible to collect examples which satisfy the requirement {p, Sere} beforehand.
For each case marker p,we collect all those sets of examples.
Since all tile se-mantic categories forms the whole thesaurus of nouns,non-empty sets of those collected examples also form asub-structure of the whole thesaurus of nmms.
We callit a sub-thesaurus for the case marker p.Fig.
2 shows an example of the sub-thesaurus for "(wo-A CC)" cause, supposing that the example databasecontains Example 1 and 2 in section 2.2.2.
The mostspecific common layer of Sembook and Semnb is thelayer 5, and the example set is {Egl} or {Eg2} at layer6 and 7(leaf), and {Egl,Eg2} above layer 6.Given a requirement (p, Sere) and a sub-thesaurusfor p, examples which satisfy the requirement arequickly retrieved through the tree structure of the sub-thesaurus in constant ime.
Examples wtfich satisfy allthe requirements in csp are obtained as the intersectionof all those sets of retrieved examples.The Size of A Sub-ThesaurusWe estimate the size of all the sub-thesauri by the totalnumber of elements in the nodes of those sub-thesauri.Let N be the total number of examples in the exampledatabase, d be the depth of the whole thesaurus ofnouns, and lrna~ be tile maximum case number.
A caseelement noun in an e?ample appears it, a leaf node andall of the parent nodes of the leaf in a sub-thesaurus,thus appears d times.
Since the number of case elementnouns in an example is at most lmaa~, the number ofe~se element liouns ill the examph', database is at mostN x lm=~ and the order of the size of all the sutl-thesauriis at most Nxl  .
.
.
.
xd, i.e., O(N) ( l ..... xd is constant).a .a  B inary  Search  a long  Subsmnpt ionOrder ing  o f  Ret r ieva l  Quer ies3.3.1 Subsumpt ion  Re la t ionA subsumption relation can he defined between two re-trievM queries, and results ill tim subsmnption relationof the sets of retrieved examples.
For cxmnple, in thecase of the following two retricval queries ql and q2, q2has a requirement on the "~: (ni-DAT)" case while qldoes not, and the requirement on tile "\]fi (.qa-NOMO"case is more specific in q2 than in ql.
Thus, q2 is morespecific than ql, or in other words, ql subsumes qa.q, = (3, { {-~(.qa),Se,;~th ....... ),( '2 (wo),Se.mtt) } )q~ : (a, { (~s(,~),s..,,,~),( ~.
(,,,o),s~..,),.
.
.
.
.
.
.
,})Furthermore, ql and q2 are generated from the similar--ity tenlplates t , -  <2, 3, {5,9}} a.nd t2 : <2, 3, {11, 9, 5})gg2//.
'/" //'/ /,/" , .
* /,' v" 4 ", ,, "'.,,/ / .," a ~ { Egl, Eg2 } ",,/' / /" 6/ /  .
/" / '  { Egl Eg7 (Leaf)./ 'S e nl (g,.book) S c in ( / -  \]',.notebook)Sub-Thesaurus for ~ (wo-ACC) Case~/~:~"~ -) Rool ,~:{ Egl, Eg2 }(llc buys a Ix~0k,) //\[ ",,,~,I,l~ {'l: Layei' 1 ~ ",,/-- I, ~'fi: 5 (noun) / "..(lie buys his son / :  ,~  ",a notebook,) // "r"', ""..... ? "
...,..~ / " ~ ( Egl, Eg2} ""..iF ig.
2: An Example of Sub-Thesaurusrespectively, and a subsmnption relation of similaritytemplates holds between tl and t2 as well.3.3.2 S imi la r i ty  Tab leWith the subsun,ption relations of retrieval queries andthe sets of retrieved examples, it is possible to eificientlybinary-search the set of examples to be retrieved bythe most specific retrieval query.
In the following, wedescribe how to organize the set of all the similaritytemplates as a similarity table and to realize the processof binary search of the most similar examples.First, the set of all the similarity templates is dividedinto a sequence T I , .
.
.
, 2'n which is totally ordered bythe following subsumptiou relation.
Let ein be the in-put and Ti,Tj(i < j) be the sets of similarity templatesill the sequence T1,.
.
.
,:/'~,, and EGi, EGj be the setsof examples retrieved by all the similarity templates in7~ and \[D respectively.
Then, ~/~ subsumes 7) if andonly if, t) EGi subsmnes EGj, and 2) the sets of re-trieved examples are totally ordered by similarity, i.e.,Ve.i (~ EGI Vcj E E(;j, sim~ (ein, ei) < sim~ (ei,,, e i).In the case of the similarity measure defined in sec-tion 2.2.2, suppose that lm~ is 3, tile length of thesequence 7'1,... ,7~ in the similarity table is 7 whenli~, is l, 9 when li,~ is 2, and 11 when li~ is 3.With this subsmnl)tion ordering, the most similarexamples are obtained by finding the most specific Tiwith non-empty EGi and then finding the most similarexaruples in EGI.
Since EGi = ?
means EGj = ?
forany j > i, this search process can be efficiently real-ized by binary-searching the sequence T l , .
.
.
,  T,.
Thissequence T l , .
.
.
,  Tn can be regarded as a table of sim-ilarity templates and is called similarity table.Fig.
3 shows the binary search of the similarity ta-hle.
Example space is partit ioned by the snbsumptionrelation.
The most similar examples are fmmd in theinnermost nm>mnpty set.
This binary search methodmakes efficient retrieval possible whether the example1047Example Spacex Subsumpt lon  Relat ionx .. ..................... ,o. .
.
.
, .
.
,% ,,., ......
?:.::::....
....... .The InputThe  Most  S imi lar  Example" : ExampleFig.
3: Binary Search with Subsumption Relationdatabase contains imilar examples or not.3.4 EvaluationThe framework of query generation retrieval consists ofthree major components, i.e., the example database, thesimilarity table, and the set of sub-thesauri.
Let N bethe size of the example database, the order of the sizeof the similarity table is independent of N and that ofthe set of sub-thesauri is O(N).
Thus, tile total orderof the size of the system is O(N).In order to evaluate the computational cost, we plotthe computation time (in CPU time), increasing thenunlber of examples N, and compare the result witha full retrieval program.
The example database con-tains example surface case structures of the Japaneseverb "F~ +) (buy)" and both programs retrieve the mostsimilar examples from the example database, given aninput surface case structure of the same verb "~;~ )(buy)".
For the query generation retrieval program,the maximum number l. .
.
.
of cases was 3.
The fullretrieval program calculates the similarity between theinput and the example for all the examples in the ex-ample database, and retrieves the examples with thegreatest similarity.
Both programs are implemented inSICStus Prolog 2.1 on a SPARC station-10.
Fig.
4 il-lustrates the results.
The computation time of the fullretrieval program is proportional to N, while that  ofthe query generation retrieval program is nearly con-stant.
Thus, our query generation retrieval programachieved drastic improvement in decreasing computa-tional cost compared with the full retrieval program.4 Conc lud ing  RemarksThis paper proposed a novel example retrieval methodin example-based NLP, bascd-on generating retrievalqueries fl'om similarities.
The proposed method isapplicable to any other definitions of similarities inexample-based NLP, if the following three requirementsare satisfied, 1) the similarity is calculated based-onword sense similarities in a thesaurus, 2) the similaritycan be defined as a fnnetion of a small number of fac-tors, 3) each factor varies over not too many numberof discrete values, or otherwise, continuous values canbe transformed into not too many discrete values.300 .
.
.
.
T .
.
.
.
~ -~- -  ~ - - , - - -Full Retrieval *-  , , ~Query Generation Retrieval , / 25O2OOE 150F-IO05O0 - ~ - -0 20 40 60 80 100 120 140Number  of ExamplesFig.
4: Time per Number of ExamplesIn this paper, we restrict ourselves to the eases whereexamples have the same verb as input.
However, sim-ilarities of verbs have to be considered and the exam-ple database has to contain examples of many verbs.Constructing sub-thesauri aright be a problem in thoseeases, and the solution nfight be that all the examplesare distributed into several sets of sub-thesauri.In applications like case-based reasoning (CBR) andinformation retrieval (IR), good examples do not nec-essarily have the greatest similarity and thus content-based indexing methods are more effective.
On theother hand, in example-based NLP, usually similaritymeasure is strictly defined and only the most similarexamples are retrieved.
The proposed query genera-tion retrieval fits this feature of example-based NLP.The idea of generating retrieval queries from simi-larities is employed also in several other related fieldssuch as translation aid system (Snmita and Tsutsumi,1988) and CBR (Shimazu, Kitano and Shibata, 1993).Since the tasks of those works are different front ours,their formalizatimm are different from ours.ReferencesKurohashi, S. and Nagao, M. (1993).
Structural disam-biguation in Japanese by evaluating case structuresbased on examples in case frame dictionary, Proceed-ings of the 3rd IWPT, pp.
111-122.Nagao, M. (1984).
A frmnework of a mechanical translationbetween Japanese and English by analogy principle, inA.
Elithorn and R. Banerji (eds), Artificial and HumauIntdligence, Elsevier Science Publishers, B.V.NLRI (National I,anguage Research Institute).
(1964).Word List by Semantic Principlea, Syuel Syuppan.
(inJapanese).Sato, S. and Nagao, M. (1990).
Toward memory-basedtranslation, Proceedings of the 13th COLING, Vol.
3,pp.
247-252.Shlmazu, H., Kitano, H. and Shibata, A.
(1993).
Retriev-ing eases from relational data-bases: Another stridetowards corporate-wide case-base systems, Proceedingsof the 13th \[.\]CA\[, pp.
909 914.Sumita, E. and Wsutsumi, Y.
(1988).
A translation aidsystem using flexible text retrieval based-on syntax-inatching, Proceedings ofthe 2nd TML1048
