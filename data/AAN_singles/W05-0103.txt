Proceedings of the Second ACL Workshop on Effective Tools and Methodologies for Teaching NLP and CL, pages 15?22,Ann Arbor, June 2005. c?2005 Association for Computational Linguistics?Language and Computers?Creating an Introduction for a General Undergraduate AudienceChris BrewDepartment of LinguisticsThe Ohio State Universitycbrew@ling.osu.eduMarkus DickinsonDepartment of LinguisticsThe Ohio State Universitydickinso@ling.osu.eduW.
Detmar MeurersDepartment of LinguisticsThe Ohio State Universitydm@ling.osu.eduAbstractThis paper describes the creationof Language and Computers, a newcourse at the Ohio State University de-signed to be a broad overview of topicsin computational linguistics, focusingon applications which have the mostimmediate relevance to students.
Thiscourse satisfies the mathematical andlogical analysis requirement at OhioState by using natural language sys-tems to motivate students to exerciseand develop a range of basic skills informal and computational analysis.
Inthis paper we discuss the design of thecourse, focusing on the success we havehad in offering it, as well as some of thedifficulties we have faced.1 IntroductionIn the autumn of 2003, we created Languageand Computers (Linguistics 384), a new courseat the Ohio State University that is designed tobe a broad overview of topics in computationallinguistics, focusing on applications which havethe most immediate relevance to students.
Lan-guage and Computers is a general enrollmentcourse designed to meet the Mathematical andLogical Analysis requirement that is mandatedfor all undergraduates at the Ohio State Uni-versity (OSU), one of the largest universities inthe US.
We are committed to serving the av-erage undergraduate student at OSU, includingthose for whom this is the first and last Lin-guistics course.
Some of the students take thecourse because it is an alternative to calculus,others because of curiosity about the subjectmatter.
The course was first taught in Win-ter 2004, drawing a wide range of majors, andhas since expanded to three sections of up to 35students each.
In this paper we will discuss thedesign of the course, focusing on the success wehave had in offering it, as well as some of thedifficulties we have faced.2 General ContextThe Linguistics Department at OSU is the homeof a leading graduate program in which 17 grad-uate students are currently specializing in com-putational linguistics.
From the perspective ofthe graduate program, the goal of the new coursedevelopment was to create more appropriateteaching opportunities for the graduate studentsspecializing in computational linguistics.
Muchof the undergraduate teaching load in Linguis-tics at OSU is borne by graduate teaching assis-tants (GTAs) who receive stipends directly fromthe department.
After a training course in thefirst year, most such GTAs act as instructors onthe Department?s ?Introduction to Language,?which is taught in multiple small sections.
In-structors are given considerable responsibilityfor all aspects of course design, preparation, de-livery, and grading.
This works very well andproduces many superb instructors, but by 2003it was apparent that increasing competition wasreducing the pool of undergraduates who wantto take this general overview course.The Ohio State University has a distributionrequirement, the General Education Curricu-15lum (GEC), that is designed to ensure adequatebreadth in undergraduate education.
The twindemands of the student?s major and the distri-bution requirement are sufficient to take up thevast majority of the credit hours required forgraduation.
In practice this means that studentstend to make course selections motivated pri-marily by the goal of completing the necessaryrequirements as quickly and efficiently as theycan, possibly at the expense of curiosity-drivenexploration.
Linguistics, as an interdisciplnarysubject, can create courses that satisfy both cu-riosity and GEC requirements.To fill this interdisciplinary niche, the OSUDepartment of Linguistics has created a rangeof new courses such as Language and Gender,Language and the Mind, Language and the Law,and the Language and Computers course dis-cussed in this paper.
In addition to filling a dis-tribution requirement niche for undergraduates,the courses also allow the linguistics GTAs toteach courses on topics that are related to theirarea of specialization, which can be beneficialboth to the instructors and to those instructed.Prior to creation of the new Language and Com-puters course, there were virtually no opportu-nities for student members of the computationallinguistics group to teach material close to theirfocus.3 Course overviewThe mission statement for our course reads:In the past decade, the widening useof computers has had a profound influ-ence on the way ordinary people com-municate, search and store informa-tion.
For the overwhelming majorityof people and situations, the naturalvehicle for such information is natu-ral language.
Text and to a lesser ex-tent speech are crucial encoding for-mats for the information revolution.This course will give students insightinto the fundamentals of how comput-ers are used to represent, process andorganize textual and spoken informa-tion, as well as providing tips on howto effectively integrate this knowledgeinto their working practice.
The coursewill cover the theory and practice ofhuman language technology.The course was designed to meet the Math-ematical and Logical Analysis (MLA) require-ment for students at the Ohio State University,which is characterized in the following way:A student in a B.A.
program must takeone course that focuses on argument ina context that emphasizes natural lan-guage, mathematics, computer scienceor quantitative applications not pri-marily involving data.
Courses whichemphasize the nature of correct argu-mentation either in natural languagesor in symbolic form would satisfy thisrequirement, as would many mathe-matics or computer science courses.. .
.
The courses themselves should em-phasize the logical processes involvedin mathematics, inductive or deductivereasoning, or computing and the the-ory of algorithms.Linguistics 384 responds to this specificationby using natural language systems to motivatestudents to exercise and develop a range of ba-sic skills in formal and computational analysis.The course combines lectures with group workand in-class discussions, resulting in a seminar-like environment.
We enrol no more than 35students per section, often significantly fewer atunpopular times of day.The course philosophy is to ground abstractconcepts in real world examples.
We intro-duce strings, regular expressions, finite-stateand context-free grammars, as well as algo-rithms defined over these structures and tech-niques for probing and evaluating systems thatrely on these algorithms.
This meets the MLAobjective to emphasize the nature of correct ar-gumentation in symbolic form as well as the logi-cal processes involved in computing and the the-ory of algorithms.
These abstract ideas are em-bedded in practical applications: web searching,16spelling correction, machine translation and di-alogue systems.
By covering the technologiesbehind these applications, the course addressesthe requirement to sharpen a student?s abilityto reason critically, construct valid arguments,think creatively, analyze objectively, assess ev-idence, perceive tacit assumptions, and weighevidence.Students have impressions about the qualityof such systems, but the course goes beyondmerely subjective evaluation of systems and em-phasizes the use of formal reasoning to draw andargue for valid conclusions about the design, ca-pabilities and behavior of natural language sys-tems.In ten weeks, we cover eight topics, using adata projector in class, with copies of the slidesbeing handed out to the student before eachclass.
There is no textbook, and there are rel-atively few assigned readings, as we have beenunable to locate materials appropriate for an av-erage student without required background whomay never take another (computational) linguis-tics class.
The topics covered are the following,in this order:?
Text and speech encoding?
(Web-)Searching?
Spam filtering (and other classificationtasks, such as language identification)?
Writers?
aids (Spelling and grammar correc-tion)?
Machine translation (2 weeks)?
Dialogue systems (2 weeks)?
Computer-aided language learning?
Social context of language technology useIn contrast to the courses of which we areaware that offer computational linguistics to un-dergraduates, our Language and Computers issupposed to be accessible without prerequisitesto students from every major (a requirement forGEC courses).
For example, we cannot assumeany linguistic background or language aware-ness.
Like Lillian Lee?s Cornell course (Lee,2002), the course cannot presume programmingability.
But the GEC regulations additionallyprohibit us from requiring anything beyond highschool level abilities in algebraic manipulation.We initially hoped that this meant that wewould be able to rely on the kind of math knowl-edge that we ourselves acquired in secondaryschool, but soon found that this was not real-istic.
The sample questions from Lee?s courseseem to us to be designed for students who ac-tively enjoy math.
Our goal is different: wewant to exercise and extend the math skills ofthe general student population, ensuring thatthe course is as accessible to the well-motivateddance major as it is to the geekier people withwhom we are somewhat more familiar.
This ishard, but worthwhile.The primary emphasis is on discrete math-ematics, especially with regard to strings andgrammars.
In addition, the text classificationand spam-filtering component exercise the abil-ity to reason clearly using probabilities.
All ofthis can be achieved for students with no colle-giate background in mathematics.Specifically, Linguistics 384 uses non-trivialmathematics at a level at or just beyond algebra1 in the following contexts:?
Reasoning about finite-state automata andregular expressions (in the contexts of websearching and of information management).Students reason about relationships be-tween specific and general search terms.?
Reasoning about more elaborate syntacticrepresentations (such as context-free gram-mars) and semantic representations (suchas predicate calculus), in order to betterunderstand grammar checking and machinetranslation errors.?
Reasoning about the interaction betweencomponents of natural language systems (inthe contexts of machine translation and ofdialog systems).?
Understanding the basics of dynamic pro-gramming via spelling correction (edit dis-tance) and applying algebraic thinking toalgorithm design.17?
Simple probabilistic reasoning (in the con-text of text classification).There is also an Honors version of the course,which is draws on a somewhat different poolof students.
In 2004 the participants in Hon-ors 384 were equally split between Linguisticsmajors looking for a challenging course, peoplewith a computer background and some interestin language and people for whom the course wasa good way of meeting the math requirement atHonors level.
Most were seniors, so there was lit-tle feed-through to further Linguistics courses.The Honors course, which used to becalled Language Processing Technology, pre-dates Language and Computers, and includesmore hands-on material.
Originally the first halfof this course was an introduction to phoneticsand speech acoustics through Praat, while thesecond was a Prolog-based introduction to sym-bolic NLP.
We took the opportunity to redesignthis course when we created the non-honors ver-sion.
In the current regime, the hands-on aspectis less important than the opportunities offeredby the extra motivation and ability of these stu-dents.
Two reading assignments in the honorsversion were Malcolm Gladwell?s book review onthe Social Life of Paper (Gladwell, 2001) andTuring?s famous paper on the Imitation Game(Turing, 1950).
We wondered whether the ec-centricity and dated language of the latter wouldbe a problem, but it was not.Practical assignments in the laboratory arepossible in the honors course, because the classsize can be limited.
One such assignment wasa straightforward run-through of the clock tu-torial from the Festival speech synthesis systemand another a little machine translation systembetween digits and number expressions.
Havingestablished that they can make a system thatturns 24 into ?twenty four?, and so on, the stu-dents are challenged to adapt it to speak ?FairyTale English?
: that is, to make it translate 24into ?four and twenty?, and vice-versa.11For a complete overview of the course materials,there are several course webpages to check out.
The web-page for the first section of the course (Winter 2004)4 General themes of the courseAcross the eight different topics that are taught,we try to maintain a cohesive feel by emphasiz-ing and repeating different themes in computa-tional linguistics.
Each theme allows the stu-dents to see that certain abstract ideas are quitepowerful and can inform different concrete tasks.The themes which have been emphasized to thispoint are as follows:?
There are both statistical and rule-basedmethods for approaching a problem in nat-ural language processing.
We show thismost clearly in the spam filtering unit andthe machine translation unit with differenttypes of systems.?
There is a tension between developing tech-nology in linguistically-informed ways anddeveloping technology so that a product iseffective.
In the context of dialogue sys-tems, for example, the lack of any linguisticknowledge in ELIZA makes it fail quickly,but an ELIZA with a larger database andstill no true linguistic knowledge could havemore success.?
Certain general techniques, such as n-gramanalysis, can be applied to different compu-tational linguistic applications.?
Effective technology does not have to solveevery problem; focusing on a limited do-main is typically more practical for the ap-plications we look at.
In machine transla-tion, this means that a machine translationsystem translating the weather (e.g., theMETEO system) will perform better thana general-purpose system.?
Intelligent things are being done to improvenatural language technology, but the task isa very difficult one, due to the complexitiesof language.
Part of each unit is devoted tois at http://ling.osu.edu/~dickinso/384/wi04/.
Amore recent section (Winter 2005) can be found at http://ling.osu.edu/~dm/05/winter/384/.
For the honorscourse, the most recent version is located at http://ling.osu.edu/~cbrew/2005/spring/H384/.
A list ofweblinks to demos, software, and on-line tutorials cur-rently used in connection with the course can be foundat http://ling.osu.edu/~xflu/384/384links.html18showing that the problem the technology isaddressing is a complex one.5 Aspects of the course that workThe course has been a positive experience, andstudents overall seemed pleased with it.
Thisis based on the official student evaluation ofinstruction, anonymous, class specific question-naires we handed out at the end of the class,personal feedback, and new students enrollingbased on recommendations from students whotook the course.
We attribute the positive re-sponse to several different aspects of the course.5.1 Topics they could relate toStudents seem to most enjoy those topics whichwere most relevant to their everyday life.
On thetechnological end, this means that the units onspam filtering, web searching, and spell check-ing are generally the most well-received.
Themore practical the focus, the more they seemto appreciate it; for web searching, for instance,they tend to express interest in becoming betterusers of the web.
On the linguistic end, discus-sions of how dialogue works and how languagelearning takes place, as part of the units on di-alogue systems and CALL, respectively, tend toresonate with many students.
These topics areonly sketched out insofar as they were relevantto the NLP technology in question, but this hasthe advantage of not being too repetitive for thefew students who have had an introductory lin-guistics class before.5.2 Math they can understandStudents also seem to take pride in being ableto solve what originally appear to be difficultmathematical concepts.
To many, the conceptand look of a binary number is alien, but theyconsistently find this to be fairly simple.
Thebasics of finite-state automata and boolean ex-pressions (even quite complicated expressions)provide opportunities for students to understandthat they are capable of learning concepts of log-ical thinking.
Students with more interest andmore of an enjoyment for math are encouragedto go beyond the material and, e.g., figure outthe nature of more complicated finite-state au-tomata.
In this way, more advanced students areable to stay interested without losing the otherstudents.More difficult topics, such as calculating theminimum edit distance between a word and itsmisspelling via dynamic programming, can befrustrating, but they just as often are a sourceof a greater feeling of success for students.
Aftersome in-class exercises, when it becomes appar-ent that the material is learnable and that thereis a clear, well-motivated point to it, studentsgenerally seem pleased in conquering somewhatmore difficult mathematical concepts.5.3 Interactive demosIn-class demos of particular software are alsousually well-received, in particular when theypresent applications that students themselvescan use.
These demos often focus on the endresult of a product, such as simply listening tothe output of several text-to-speech synthesiz-ers, but they can also be used for understandinghow the applications works.
For example, somesections attempt to figure out as a class wherea spelling checker fails and why.
Likewise, anin-class discussion with ELIZA has been fairlypopular, and students are able to deduce manyof the internal properties of ELIZA.5.4 Fun materialsIn many ways, we have tried to keep the toneof the course fairly light.
Even though weare teaching mathematical and logical concepts,these concepts are still connected to the realworld, and as such, there is much opportunityto present the material in a fun and engagingmanner.Group work One such way to make the learn-ing process more enjoyable was to use groupwork.
In the past few quarters, we have beenrefining these exercises.
Because of the natureof the topics, some topics are easier to derivegroup exercises for than others.
The more math-ematical topics, such as regular expressions, suitthemselves well for straightforward group workon problem sets in class; others can be more19creative.
The group exercises usually serve as away for students to think about issues they al-ready know something about, often as a way tointroduce the topic.For example, on the first day, they are givena sheet and asked to evaluate sets of opposingclaims, giving arguments for both sides, such asthe following:1.
A person will have better-quality papers ifthey use a spell checker.A person will have worse-quality papers ifthey use a spell checker.2.
An English-German dictionary is the maincomponent needed to automatically trans-late from English to German.An English-German dictionary is not themain component needed to automaticallytranslate from English to German.3.
Computers can make you sound like a na-tive speaker of another language.Computers cannot make you sound like anative speaker of another language.To take another example, to get studentsthinking about the social aspects of the use oflanguage technology, they are asked in groups toconsider some of the implications of a particu-lar technology.
The following is an excerpt fromone such handout.You work for a large software companyand are in charge of a team of com-putational linguists.
One day, you aretold: ?We?d like you and your team todevelop a spell checker for us.
Do youhave any questions??
What questionsdo you have for your boss?...Somehow or another, the details ofyour spell checker have been leaked tothe public.
This wouldn?t be too bad,except that it?s really ticked some lin-guists off.
?It?s just a big dictionary!
?they yell.
?It?s like you didn?t knowanything about morphology or syntaxor any of that good stuff.?
There?sa rumor that they might sue you fordefamation of linguistics.
What do youdo?Although the premise is somewhat ridiculous,with such group work, students are able to con-sider important topics in a relaxed setting.
Inthis case, they have to first consider the speci-fications needed for a technology to work (whowill be using it, what the expectations are, etc.
)and, secondly, what the relationship is betweenthe study of language and designing a productwhich is functional.Fun homework questions In the home-works, students are often instructed to use atechnology on the internet, or in some way totake the material presented in class a step far-ther.
Additionally, most homework assignmentshad at least one lighter question which allowedstudents to be more creative in their responseswhile at the same time reinforcing the material.For example, instructors have asked studentsto send them spam, and the most spam-worthymessage won a prize.
Other homework ques-tions have included sketching out what it wouldtake to convert an ELIZA system into a hostagenegotiator?and what the potential dangers arein such a use.
Although some students put downminimal answers, many students offer pages ofdetailed suggestions to answer such a question.This gives students a taste of the creativity in-volved in designing new technology without hav-ing to deal with the technicalities.6 Challenges for the courseDespite the positive response, there are severalaspects to the course which have needed im-provement and continue to do so.
Teachingto a diverse audience of interests and capabili-ties presents obstacles which are not easily over-come.
To that end, here we will review aspectsof the course which students did not generallyenjoy and which we are in the process of adapt-ing to better suit our purposes and our students?needs.206.1 Topics they do not relate toFor such a range of students, there is the diffi-culty of presenting abstract concepts.
Althoughwe try to relate everything to something whichstudents actually use or could readily use, wesometimes include topics from computationallinguistics that make one better able to thinklogically in general and which we feel will beof future use for our students.
One such topicis that of regular expressions, in the context ofsearching for text in a document or corpus.
Asmost students only experience searching as partof what they do on the web, and no web searchengine (to the best of our knowledge) currentlysupports regular expression searching, studentsoften wonder what the point of the topic is.
Inmaking most topics applicable to everyday life,we had raised expect.
In this particular case,students seemed to accept regular expressionsmore once it they saw that Microsoft Word hassomething roughly analogous.Another difficulty that presented itself for asubset of the students was that of using for-eign language text to assist in teaching ma-chine translation and computer-aided languagelearning.
Every example was provided with anEnglish word-by-word gloss, as well as a para-phrase, yet the examples can still be difficult tounderstand without a basic appreciation for therelevant languages.
If the students know Span-ish, the example is in Spanish and the instruc-tor has a decent Spanish accent, things can gowell.
But students tend to blame difficulties inthe machine translation homework on not know-ing the languages used in the examples.
Under-standing the distinction between different kindsof machine translation systems requires someability to grasp how languages can differ, so wecertainly must (unless we use proxies like fairy-tale English) present some foreign material, butwe are in dire need of means to do this as gentlyas possible6.2 Math they do not understandWhile some of the more difficult mathemati-cal concepts were eventually understood, oth-ers continued to frustrate students.
The al-ready mentioned regular expressions, for exam-ple, caused trouble.
Firstly, even if you dounderstand them, they are not necessarily life-enhancing, unless you are geeky enough to writeyour papers in a text editor that properly sup-ports them.
Secondly, and more importantly,many students saw them as unnecessarily ab-stract and complex.
For instance, some stu-dents were simply unable to understand the no-tion that the Kleene star is to be interpreted asan operator rather than as a special characteroccurring in place of any string.Even though we thought we had calibratedour expectations to respect the fact that ourstudents knew no math beyond high school, theamount that they had retained from high schoolwas often less than we expected.
For exam-ple, many students behaved exactly as if theyhad never seen Venn diagrams before, so timehad to be taken away from the main materialin order to explain them.
Likewise, figuringout how to calculate probabilities for a bag ofwords model of statistical machine translationrequired a step-by-step explanation of whereeach number comes from.
A midterm ques-tion on Bayesian spam filtering needed the sametreatment, revealing that even good studentsmay have significant difficulties in deploying thehigh school math knowledge they almost cer-tainly possess.6.3 Technology which did not workMost assignments required students to use theinternet or the phone in some capacity, usu-ally to try out a demo.
With such tasks, thereis always the danger that the technology willnot work.
For example, during the first quar-ter the course was taught, students were askedto call the CMU Communicator system and in-teract with it, to get a feel for what it is liketo interact with a computer.
As it turns out,halfway through the week the assignment wasdue, the system was down, and thus some stu-dents could not finish the exercise.
Follow-ing this episode, homework questions now comewith alternate questions.
In this case, if the sys-tem is down, the first alternate is to listen to apre-recorded conversation to see how the Com-21municator works.
Since some students are un-able to listen to sounds in the campus computerlabs, the second alternate is to read a transcript.Likewise, students were instructed to view thepage source code for ELIZA.
However, somecampus computer labs at OSU do not allow stu-dents to view the source of a webpage.
In re-sponse to this, current versions of the assign-ment have a separate webpage with the sourcecode written out as plain text, so all studentscan view it.One final note is that students have often com-plained of weblinks failing to work, but this ?fail-ure?
is most often due to students mistypingthe link provided in the homework.
Providinglinks directly on the course webpage or includingthem in the web- or pdf-versions of the home-work sheets is the simplest solution for this prob-lem.7 Summary and OutlookWe have described the course Language andComputers (Linguistics 384), a general introduc-tion to computational linguistics currently beingtaught at OSU.
While there are clear lessonsto be learned for developing similar courses atother universities, there are also more generalpoints to be made.
In courses which assumesome CS background, for instance, it is stilllikely the case that students will want to seesome practical use of what they are doing andlearning.There are several ways in which this coursecan continue to be improved.
The most pressingpriority is to develop a course packet and pos-sibly a textbook.
Right now, students rely onlyon the instructor?s handouts, and we would liketo provide a more in-depth and cohesive sourceof material.
Along with this, we want to de-velop a wider range of readings for students (e.g.Dickinson, to appear) to provide students witha wider variety of perspectives and explanationsfor difficult concepts.To address the wide range of interests and ca-pabilities of the students taking this course as ageneral education requirement, it would be goodto tailor some of the sections to audiences withspecific backgrounds?but given the lack of adedicated free time slot for all students of a par-ticular major, etc., it is unclear whether this isfeasible in practice.We are doing reasonably well in integratingmathematical thinking into the course, but wewould like to give students more experience ofthinking about algorithms.
Introducing a ba-sic form of pseudocode might go some way to-wards achieving this, provided we can find a mo-tivating linguistic example that is both simpleenough to grasp and complex enough to justifythe overhead of introducing a new topic.
Fur-ther developments might assist us in developinga course between Linguistics 384 and Linguistics684, our graduate-level computational linguis-tics course, as we currently have few options foradvanced undergraduates.Acknowledgements We would like to thankthe instructors of Language and Computers fortheir discussions and insights into making it abetter course: Stacey Bailey, Anna Feldman, Xi-aofei Lu, Crystal Nakatsu, and Jihyun Park.
Weare also grateful to the two ACL-TNLP review-ers for their detailed and helpful comments.ReferencesMarkus Dickinson, to appear.
Writers?
Aids.
InKeith Brown (ed.
), Encyclopedia of Languageand Linguistics.
Second Edition, Elsevier, Ox-ford.Malcolm Gladwell, 2001.
The Social Lifeof Paper.
New Yorker .
available fromhttp://www.gladwell.com/archive.html.Lillian Lee, 2002.
A non-programming introduc-tion to computer science via NLP, IR, andAI.
In ACL Workshop on Effective Toolsand Methodologies for Teaching Natural Lan-guage Processing and Computational Linguis-tics.
pp.
32?37.A.M.
Turing, 1950.
Computing Machinery andIntelligence.
Mind , 59(236):433?460.22
