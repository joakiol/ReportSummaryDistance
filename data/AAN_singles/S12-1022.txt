First Joint Conference on Lexical and Computational Semantics (*SEM), pages 142?150,Montre?al, Canada, June 7-8, 2012. c?2012 Association for Computational LinguisticsExpanding the Range of Tractable Scope-Underspecified SemanticRepresentationsMehdi Manshadi and James AllenDepartment of Computer ScienceUniversity of RochesterRochester, NY 14627{mehdih,james}@cs.rochester.eduAbstractOver the past decade, several underspec-ification frameworks have been proposedthat efficiently solve a big subset of scope-underspecified semantic representationswithin the realm of the most popularconstraint-based formalisms.
However, thereexists a family of coherent natural languagesentences whose underspecified representa-tion does not belong to this subset.
It hasremained an open question whether there ex-ists a tractable superset of these frameworks,covering this family.
In this paper, we showthat the answer to this question is yes.
Wedefine a superset of the previous frameworks,which is solvable by similar algorithms withthe same time and space complexity.1 IntroductionScope ambiguity is a major source of ambiguity insemantic representation.
For example, the sentence1.
Every politician has a website.has at least two possible interpretations, one inwhich each politician may have a different website(i.e., Every has wide scope) and one in which thereis a unique website for all the politicians (i.e., Everyhas narrow scope).
Since finding the most preferredreading automatically is very hard, the most widelyadopted solution is to use an Underspecified Rep-resentation (UR), that is to encode the ambiguity inthe semantic representation and leave scoping un-derspecified.In an early effort, Woods (1986) developed an un-scoped logical form where the above sentence is rep-resented (roughly) as the formula:2.
Has(?Every x Politician?, ?A y Website?
)To obtain a fully scoped formula, the quantifiersare pulled out one by one and wrapped around theformula.
If we pull out Every first, we produce thefully-scoped formula:3.
A(y,Website(y),Every(x, Politician(x), Has(x, y))If we had pulled out A first, we would have hadthe other reading, with Every having wide scope.Hobbs and Shieber (1987) extend this formalismto support operators (such as not) and present anenumeration algorithm that is more efficient than thenaive wrapping approach.Since the introduction of Quasi Logical Form (Al-shawi and Crouch, 1992), there has been a lot ofwork on designing constraint-based underspecifica-tion formalisms where the readings of a UR are notdefined in a constructive fashion as shown above, butrather by a set of constraints.
A fully-scoped struc-ture is a reading iff it satisfies all the constraints.
Theadvantage of these frameworks is that as the pro-cessing goes deeper, new (say pragmatically-driven)constraints can be added to the representation in or-der to filter out unwanted readings.
Hole Seman-tics (Bos, 1996; Bos, 2002), Constraint Languagefor Lambda Structures (CLLS) (Egg et al, 2001),and Minimal Recursion Semantics (MRS) (Copes-take et al, 2001) are among these frameworks.In an effort to bridge the gap between the aboveformalisms, a graph theoretic model of scope under-specification was defined by Bodirsky et al (2004),called Weakly Normal Dominance Graphs.
This142Figure 1: UG for Every child of a politician runs.framework and its ancestor, Dominance Con-straints (Althaus et al, 2003), are broad frameworksfor solving constrained tree structures in general.When it comes to scope underspecification, some ofthe terminology becomes counter-intuitive.
There-fore, here we first define (scope) Underspecifica-tion Graphs (UG), a notational variant of weaklynormal dominance graphs, solely defined to modelscope underspecification.1 Figure 1 shows a UG forthe following sentence.4.
Every child of a politician runs.The big circles and the dot nodes are usually re-ferred to as the hole nodes (or simply holes) and thelabel nodes (or simply labels) respectively.
The leftand the right holes of each quantifier are placehold-ers for the restriction and the body of the quanti-fier.
A fully scoped structure is built by plugginglabels into holes, as shown in Figure 2(a).
The dot-ted edges represent the constraints.
For example,the constraint from the restriction hole of Every(x)to the node Politician(x) states that this label nodemust be within the scope of the restriction of Ev-ery(x) in every reading of the sentence.
The con-straint edge from Every(x) to Run(x) forces the bind-ing constraint for variable x; that is variable x inRun(x) must be within the scope of its quantifier.Figure 2(b) represents the other possible reading ofthe sentence.
Now consider the sentence:5.
Every politician, whom I know a child of, prob-ably runs.with its UG shown in Figure 3.
This sentence con-tains a scopal adverbial (a.k.a.
fixed-scopal; cf.Copestake et al (2005)), the word Probably.
Sincein general, quantifiers can move inside or outside a1The main difference is in the concept of solution in the twoframeworks.
See Section 4.3 for details.Figure 2: Solutions of the UG in Figure 1.scopal operator, the scope of Probably is left under-specified, and hence represented by a hole.
It is easyto verify that the corresponding UG has five possiblereadings, two of which are shown in Figure 4.There are at least two major algorithmic problemsthat need to be solved for any given UG U : the sat-isfiability problem; that is whether there exists anyreading satisfying all the constraints in U , and theenumeration problem; that is enumerating all thepossible readings of a satisfiable U .
Unfortunately,both problems are NP-complete for UG in its gen-eral form (Althaus et al, 2003).
This proves thatHole Semantics and Minimal Recursion Semanticsare also intractable in their general form (Thater,2007).
In the last decade, there has been a se-ries of interesting work on finding a tractable subsetof those frameworks, broad enough to cover moststructures occurring in practice.
Those efforts re-sulted in two closely related tractable frameworks:(dominance) net and weak (dominance) net.
Intu-itively, the net condition requires the following prop-erty.
Given a UG U , for every label node in U withn holes, if the node together with all its holes is re-moved from U , the remaining part is composed of atmost n (weakly) connected components.
A differ-ence between net and weak net is that in nets, label-Figure 3: UG for the sentence in (5).143Figure 4: Two of the solutions to the UG in Figure 3.to-label constraints (e.g.
the constraint between Ev-ery(x) and Run(x) in Figure 1) are not allowed.Using a sample grammar for CLLS, Koller et al(2003) conjecture that the syntax/semantics inter-face of CLLS only generates underspecified repre-sentations that follow the definition of net and hencecan be solved in polynomial time.
They also provethat the same efficient algorithms can be used tosolve the underspecification structures of Hole Se-mantics which satisfy the net condition.Unlike Hole Semantics and CLLS, MRS implic-itly carries label-to-label constraints; hence the con-cept of net could not be applied to MRS.
In orderto address this, Niehren and Thater (2003) definethe notion of weak net and conjecture that it cov-ers all semantically complete MRS structures occur-ring in practice.
Fuchss et al (2004) supported theclaim by investigating MRS structures in the Red-woods corpus (Oepen et al, 2002).
Later coherentsentences were found in other corpora or suggestedby other researchers (see Section 6.2.2 in Thater(2007)), whose UR violates the net condition, inval-idating the conjecture.
However, violating the netcondition occurs in a similar way in those examples,suggesting a family of non-net structures, character-ized in Section 4.2.
Since then, it has been an openquestion whether there exists a tractable superset ofweak nets, covering this family of non-net UGs.In the rest of this paper, we answer this ques-tion.
We modify the definition of weak net to de-fine a superset of it, which we call super net.
Supernet covers the above mentioned family of non-netstructures, yet is solvable by (almost) the same al-gorithms as those solving weak nets with the sametime and space complexity.The structure of the paper is as follows.
We de-fine our framework in Section 2 and present thepolynomial-time algorithms for its satisfiability andenumeration problems in Section 3.
In Section 4,we compare our framework with nets and weak nets.Section 5 discusses the related work, and Section 6summarizes this work and discusses future work.2 Super netWe first give a formal definition of underspecifica-tion graph (UG).
We then define super net as a sub-set of UG.
In the following definitions, we openlyborrow the terminology from Hole Semantics, Dom-inance Constraints, and MRS, in order to avoid in-venting new terms to name old concepts.Definition 1 (Fragments).
Consider L a set of la-bels, H a set of holes, and S a set of directed solidedges from labels to holes, such thatF = (LunionmultiH,S)is a forest of ordered trees of depth at most 1, whoseroot and only the root is a label node.
Each of thesetrees is called a fragment.Following this definition, the number of trees inF (including single-node trees) equals the numberof labels.
For example, if we remove all the dottededges in Figure 1, we obtain a forest of 5 fragments.Definition 2 (Underspecification Graph).
Let F =(L unionmulti H,S) be a forest of fragments and C be a setof directed dotted edges from LunionmultiH to L, called theset of constraints.2 U = (L unionmulti H,S unionmulti C) is calledan underspecification graph or UG.Figures 1 and 3 each represent a UG.Definition 3 (Plugging).
(Bos, 1996)Given a UG U = (L unionmultiH,S unionmulti C), a plugging P isa total one-to-one function from H to L.In Figure 1, if lA, lE , lP , lC , and lR representthe nodes labeled by A(y), Every(x), Politician(y),Child(x,y), and Run(x) respectively and hrA (hbA) andhrE (hbE) represent the restriction (body) hole of Aand Every respectively, then P in (6) is a plugging.6.
P = {(hrA, lP ), (hbA, lC), (hrE , lA), (hbE , lR)}We use TU,P to refer to the graph, formed from Uby removing all the constraints and plugging P (h)into h for every hole h. For example if U is the UGin Figure 1 and P is the plugging in (6), then TU,Pis the graph shown in Figure 2(a).2We assume that there is no constraint edge between twonodes of the same fragment.144Definition 4 (Permissibility/Solution).
TU,P satis-fies the constraint (u,v) in U , iff u dominates3 v inTU,P .4 A plugging P is permissible, iff TU,P is a for-est satisfying all the constraints in U .
TU,P is calleda solution of U iff P is a permissible plugging.
Ininformal contexts, solutions are sometimes referredto as readings.It is easy to see that the plugging in (6) is a per-missible plugging for the UG in Figure 1, and henceFigure 2(a) is a solution of this UG.
Similarly, Fig-ures 4(a,b) represent two solutions of the UG in Fig-ure 3.
The solutions in Figures 2 and 4 are all treestructures.
This is because UGs in Figures 1 and 3are weakly connected.5 Lemma 2 proves that thisholds in general, that is:Proposition 1.
Every solution of a weakly con-nected UG is a tree.Throughout the rest of this paper, unless other-wise specified, UGs are assumed to be weakly con-nected, hence solutions are tree structures.6Lemma 2.
(Bodirsky et al, 2004)Given a UG U and a solution T of U , if the nodes uand v in U are connected using an undirected pathp, there exists a node w on p such that w dominatesboth u and v in T.This Lemma is proved using induction on thelength of p. As mentioned before, satisfiability andenumeration are two fundamental problems to besolved for a UG.
A straightforward approach is de-picted in Figure 5.
We pick a label l; remove it fromU ; recursively solve each of the resulting weaklyconnected components (WCCs; cf.
footnote 2) and3u dominates v in the directed graph G, iff u reaches v in Gby a directed path.4Here, we are referring to the nodes in TU,P by calling thenodes u and v in U .
This is a sound strategy, as every node inU is mapped into a unique node in TU,P .
The inverse is not truethough, as every node (except the root) in TU,P corresponds toone hole and one label in U .
Addressing TU,P ?s nodes in thisway is convenient, so we practice that throughout the paper.5Given a directed graph G and the nodes u and v in G, u issaid to be weakly connected to v (and vice versa), iff u and v areconnected in the underlying undirected graph of G. A weaklyconnected graph is a graph in which every two nodes are weaklyconnected.
Since weak connectedness is an equivalence rela-tion, it partitions a directed graph into equivalent classes eachof which is called a weakly connected component or WCC.6Since fragments are ordered trees, solutions are orderedtrees as well.Figure 5: Recursively solving UGs.plug the root of the returned trees into the corre-sponding holes of l. A problem to be addressedthough is whether there exists any solution rootedat l. This leads us to the following definition.Definition 5 (Freeness).
(Bodirsky et al, 2004)A label l in U is called a free node, iff there existssome solution of U rooted at l. The fragment rootedat l is called a free fragment.The following proposition states the necessaryconditions for a label (or fragment) to be free.7Proposition 3.
Let l in U be the root of a fragmentF with m holes.
l is a free node of U , only ifP3a.
l has no incoming (constraint) edge;P3b.
Every distinct hole of F lies in a distinct WCCin U?l;P3c.
U?F consists of at least m WCCs.Proof.
The first condition is trivial.
To see whythe second condition must hold, let T be a solutionrooted at l, and assume to the contrary that h1 andh2 lie in the same WCC in U?
l. From Lemma 2,all the nodes in this WCC must be in the scope ofboth h1 and h2.
But this is not possible, because Tis a tree.
The third condition is proved similarly.
As-sume to the contrary that U?F has m ?
1 WCCs.From Lemma 2, all the nodes in a WCC must be inthe scope of a single hole of F .
But there are mholes and only m ?
1 WCCs.
It means that one ofthe holes in T is left unplugged.
Contradiction!The motivation behind defining super nets is tofind a subset of UG for which these conditions arealso sufficient.
The following concept from Althauset al (2003) plays an important role.7Necessary conditions of freeness in a UG are not exactlythe same as the ones in a weakly normal dominance graph, asdepicted in Bodirsky et al (2004), because the definition of so-lution is different for the two frameworks (c.f.
Section 4.3).145Figure 6: UG for Illustration of hypernormal path.Definition 6 (Hypernormal Connectedness).
Givena UG U , a hypernormal path is an undirected path8with no two consecutive constraint edges emanatingfrom the same node.
Node u is hypernormally con-nected to node v iff there is at least one hypernormalpath between the two.
U is called hypernormallyconnected iff every pair of nodes in U are hypernor-mally connected.For example, in Figure 2, p2 is a hypernormalpath, but p1 is not.
In spite of that, the whole graphis hypernormally connected.9 The following simplenotion will also come handy.Definition 7 (Openness).
(Thater, 2007)A node u of a fragment F is called an open node iffit has no outgoing constraint edge.For example, l in Figure 5(a) is an open labelnode.
In Figure 2(b), h2 is an open hole.
We arefinally ready to define super net.Definition 8 (Super net).
A UG U is called a supernet if for every fragment F rooted at l:D8a.
F has at most one open node.D8b.
If l1 and l2 are two dominance children of ahole h of F, then l1 and l2 are hypernormallyconnected in U?h.D8c.
?
Case 1: F has no open hole.Every dominance child10 of l is hypernor-mally connected to some hole of F in U?l.?
Case 2: F has an open hole.All dominance children of l, not hypernor-mally connected to a hole of F in U?l, arehypernormally connected together.8Throughout this paper, by path we always mean a simplepath, that is no node may be visited more than once on a path.9Note that even though p1 is not a hypernormal path, thereis another hypernormal path connecting the same two nodes10v is a dominance child of u in a UG U , if (u, v) is a con-straint edge in U .Figure 7: Illustration of super net conditions.Definition 9 (Types of fragment).
Following Defini-tion 8, super net alows for three possible types offragment:D9a.
Open-root: Only the root is open (Figure 5a)D9b.
Open-hole: Only a hole is open (Figure 2b)D9c.
Closed: F There is no open node.
(Figure 2a)Definition 8 guarantees the following property.Lemma 4.
For a super net U and a fragment F ofU with m holes, which satisfies the conditions inProposition 3, U?F consists of exactly m WCCs,each of which is a super net.Proof sketch.
The detailed proof of this Lemma islong.
Therefore, we sketch the proof here and leavethe details for a longer paper.
First, we show thatU?F consists of exactly m WCCs.
Following con-ditions (D8b) and (D8c), no matter what structure Fhas, U?F consists of at most m WCCs.
On the otherhand, based on condition (P3c), U?F has at least mWCCs.
Therefore, U?F has exactly m WCCs.
Toprove that each WCC in U?F is a super net, all weneed to prove is that if two nodes u and v, which donot belong to F , are hypernormally connected in U ,they are also hypernormally connected in U?F .
Thisis proved by showing that there is no hypernormalpath between u and v in U that visits some node ofF .
Suppose that F is an open-hole fragment rootedat l, as in Figure 2(b) (the two other cases are provedsimilarly) and assume to the contrary that there is ahypernormal path p between u and v that visits somenode of F .
One of the following three cases holds.i.
p visits exactly one node of F .ii.
p visits (at least) two holes of F .iii.
p visits l and exactly one hole of F .All the three cases results in a contradiction: (i)proves that p is not hypernormal; (ii) proves that F146Figure 8: Proof of Proposition 5is not a free fragment because it violates condition(P3b); and (iii) proves that U is not a super net be-cause F violates condition (D8c).Proposition 5.
If U is a satisfiable super net, thenecessary freeness conditions in Proposition 3 arealso sufficient.Proof sketch.
Let F rooted at l be a fragment satis-fying the three conditions in Proposition 3.
Amongall the solutions of U , we pick a solution T in whichthe depth d of l is minimal.
Using proof by con-tradiction, we show that d = 0, which proves l isthe root of T .
If d > 0, there is some node u thatoutscopes l (Figure 8(a)).
Lemma 2 and 4 guaranteethat at least one of the trees in Figures 8(b,c) is a so-lution of U .
So U has a solution in which, the depthof l is smaller than d. Contradiction!3 SAT and ENUM algorithmsFollowing Lemma 4 and Proposition 5, Table 1 givesthe algorithms for the satisfiability (SAT), and theenumeration (ENUM) of super nets.Theorem 6.
ENUM and SAT are correct.Proof sketch.
Using Lemma 4 and induction on thedepth of the recursion, it is easy to see that if ENUMor SAT returns a tree T , T is a solution of U .
Thisproves that ENUM and SAT are sound.
An induc-tive proof is used to prove the completeness as well.Consider a solution T of depth n of U (Figure 5).
Itcan be shown that T1 and T2 must be the solutionsto U1 and U2.
Therefore based on the induction as-sumption they are generated by Solve(G), hence Tis also generated by Solve(G).Let U = (L unionmulti H,S unionmulti C).
The running time ofthe algorithms depends on the depth of the recursionwhich is equal to the number of fragments/labels,|L|.
At each depth it takes O(|U |) to find theset of free fragments (Bodirsky et al, 2004) andalso to compute U ?F for some free fragment F .Solve(U)1.
If U contains a single (label) node, return U .2.
Pick a free fragment F with m holesrooted at l, otherwise fail.// For SAT: pick arbitrarily.// For ENUM: pick non-deterministically.3.
Let U1, U2, ?
?
?
, Um be WCCs of U?F .4.
Let Ti = Solve(Ui) for i = 1 ?
?
?m.5.
Let hi be the hole of F connected toUi in U?l, for i = 1 ?
?
?m.
(If for some k, Uk is not connected to any holeof F in U?l, let hk be the open hole of F .)6.
Build T by plugging the root of Ti into hi,for i = 1 ?
?
?m.7.
Return T .Table 1: ENUM and SAT algorithms(|U | =def |V | + |E|, where |V | =def |L| + |H|,and |E| =def |S| + |C|).
Therefore SAT (and eachbranch of ENUM) run(s) in O(|L|.|U |) step.
There-fore the worst-case time complexity of SAT and eachbranch of ENUM is quadratic in the size of U .4 Super net versus weak netAlthough net is a subset of weak net, to better un-derstand the three frameworks, we first define net.4.1 NetNet was first defined by Koller et al (2003), in or-der to find a subset of Hole Semantics that can besolved in polynomial-time.
Nets do not contain anylabel-to-label constraints.
In fact, out of the threepossible structures that super net alows for a frag-ment F (Definition 9), net only allows for the firstone, that is open-root.Definition 10 (Net).
(Thater, 2007)Let U be a UG with no label-to-label constraints.
Uis called a net iff for every fragment F :D10a.
F has no open hole.D10b.
If l1, l2 are two dominance children of a holeh of F , then l1 and l2 are hypernormallyconnected in U?h.The root of F is open, therefore (D8a) subsumes(D10a).
Condition (D10b) is exactly the same as(D8b).
Therefore, super net is a superset of net.Strictness of the superset relationship is trivial.1474.2 Weak netWeak net was first introduced by Niehren and Thater(2003), in order to find a tractable subset of MRS. Inorder to model MRS, weak net alows for label-to-label constraints, but to stay a tractable framework itforces the following restrictions.Definition 11 (Weak net).
(Thater, 2007)A UG U is a weak net iff for every fragment F :D11a.
F has exactly one open node.D11b.
If l1, l2 are two dominance children of anode u of F , then l1 and l2 are hypernor-mally connected in U?u.Weak nets suffer from two limitations with re-spect to super nets.First, out of the three possible types of frag-ment allowed by super net (Definition 9), weak netonly allows for the first two; open-root and open-hole.
In practice this becomes an issue only ifnew constraints are to be added to a UG after syn-tax/semantic interface.
Since weak net requires onenode of every fragment to be open, a constraint can-not be added if it violates this condition.11Second, open-hole fragments in weak nets aremore restricted than open-hole fragments in supernets.
This is the Achilles?
heel of weak nets (D11b).To see why, consider the UG in Figure 3 for the sen-tence Every politician, whom I know a child of, runswhich we presented in Section 1.
If F is the frag-ment for the quantifier Every and l is the root of F ,the two dominance children of l are not (hypernor-mally) connected in U ?
l. Therefore, U is not aweak net.
All the non-net examples we have foundso far behave similarly.
That is, there is a quanti-fier with more than one outgoing dominance edge.Once you remove the quantifier node, the dominancechildren are no longer weakly (and hence hypernor-mally) connected, violating condition (D11b).
Insuper net, however, we define case 2 of condition(D8c) such that it does not force dominance chil-dren of l to be (hypernormally) connected, allowingfor non-net structures such as the one in Figure 3.1211As discussed in Section 5, by defining the notion of down-ward connectedness, Koller and Thater (2007) address this issueof weak nets, at the expense of cubic time complexity.12For simplicity, throughout this paper we have used the termnon-net to refer to non-(weak net) UGs.Proposition 7.
Weak net is a strict subset of supernet.Proof.
Consider an arbitrary weak net U , and let Fbe an arbitrary fragment of U rooted at l.(i).
F has exactly one open node, so it satisfies con-dition (D8a).(ii).
For every two holes of F , condition (D11b)guarantees that condition (D8b) holds.(iii).
?
Case 1) F has no open hole:Based on condition (D11a) the root of F isopen, hence it has no dominance children.
(D8c) trivially holds in this case.?
Case 2) F has an open hole:Based on condition (D11b) every two dom-inance children of l are hypernormally con-nected, so (D8c) holds in this case too.Therefore, every fragment F satisfies all the con-ditions in Definition 8, hence U is a super net.
Thisand the fact that Figure 3 is a super net but not aweak net complete the proof.4.3 Underspecification graph vs. weaklynormal dominance graphDominance graphs and their ancestor, dominanceconstraints, are designed for solving constrained treestructures in general.
Therefore, some of the ter-minology of dominance graph may seem counter-intuitive when dealing with scope underspecifica-tion.
For example the notion of solution in that for-malism is broader than what is known as solutionin scope underspecification formalisms.
As definedthere (but translated into our terminology), a solu-tion may contain unplugged holes, or holes pluggedwith more than one label.
This broad notion of so-lution is computationally less expensive such that analgorithm very similar to the one in Table 1 can beused to solve every weakly normal dominance graph(Bodirsky et al, 2004).
Solution, as defined in thispaper (Definition 4), corresponds to the notion ofsimple leaf-labeled solved forms (a.k.a.
configu-ration) in dominance graphs.
Although solutionsof a weakly normal dominance graph can be foundin polynomial time, finding configurations is NP-complete.
Solvability of underspecification graphsis equivalent to configurability of weakly normaldominance graphs, and hence NP-complete.1485 Related workWe already compared our model with nets and weaknets.
Koller and Thater (2007) present another ex-tension of weak nets, downward connected nets.They show that if a dominance graph has a subgraphwhich is a weak net, it can be solved in polynomialtime.
This addresses the first limitation of weak nets,discussed in Section 4.2, but it does not solve thesecond one, because the graph in Figure 3 neither isa weak net, nor has a weak-net subgraph.Downward connected dominance graph, in itsgeneral form, goes beyond weakly normal domi-nance graph (and hence UG), incorporating label-to-hole constraints.
It remains for future work to inves-tigate whether allowing for label-to-hole constraintsadds any value to the framework within the contextof scope underspecified semantics, or whether it ispossible to model the same effect using hole-to-labeland label-to-label constraints.
In any case, the sameextension can be applied to super nets as well, defin-ing downward connected super nets, a strict superset of downward connected nets, solvable using sim-ilar algorithms with the same time/space complexity.Another tractable framework presented in the pastis our own framework, Canonical Form Under-specified Representation (CF-UR) (Manshadi et al,2009), motivated by Minimal Recursion Semantics.CF-UR is defined to characterize the set of all MRSstructures generated by the MRS semantic composi-tion process (Manshadi et al, 2008).
CF-UR in itsgeneral form is not tractable.
Therefore, we definea notion of coherence called heart-connectednessand show that all heart-connected CF-UR struc-tures can be solved efficiently.
We also show thatheart-connected CF-UR covers the family of non-netstructures, so CF-UR is in fact the first framework toaddress the non-net structures.
In spite of that, CF-UR is quite restricted and does not allow for addingnew constraints after semantic composition.In recent work, Koller et al (2008) suggest us-ing Regular Tree Grammars for scope underspeci-fication, a probabilistic version of which could beused to find the best reading.
The framework goesbeyond the formalisms discussed in this paper andis expressively complete in Ebert (2005)?s sense ofcompleteness, i.e.
it is able to describe any subsetof the readings of a UR.
However, this power comesat the cost of exponential complexity.
In practice,RTG is built on top of weak nets, benefiting from thecompactness of this framework to remain tractable.Being a super set of weak net, super net provides amore powerful core for RTG.Koller and Thater (2010) address the problem offinding the weakest readings of a UR, which arethose entailed by some reading(s), but not entailingany other reading of the UR.
By only consideringthe weakest readings, the space of solutions will bedramatically reduced.
Note that entailment using theweakest readings is sound but not complete.6 Summary and Future workWeakly normal dominance graph brings many cur-rent constraint-based formalisms under a uniformframework, but its configurability is intractable in itsgeneral form.
In this paper, we present a tractablesubset of this framework.
We prove that this sub-set, called super net, is a strict superset of weak net,a previously known tractable subset of the frame-work, and that it covers a family of coherent naturallanguage sentences whose underspecified represen-tation are known not to belong to weak nets.As mentioned in Section 5, another extension ofweak nets, downward connected nets, has been pro-posed by Koller and Thater (2007), which addressessome of the limitations of weak nets, yet is unableto solve the known family of non-net structures.
Athorough comparison between super nets and down-ward connected nets remains for future work.Another interesting property of super nets to beexplored is how they compare to heart-connectedgraphs.
Heart-connectedness has been introducedas a mathematical criterion for verifying the coher-ence of an underspecified representation within theframework of underspecification graph (Manshadi etal., 2009).
Our early investigation shows that supernets may contain all heart-connected UGs.
If thisconjecture is true, super net would be broad enoughto cover every coherent natural language sentence(under this notion of coherence).
We leave a detailedinvestigation of this conjecture for the future.AcknowledgmentsThis work was support in part by NSF grant1012205, and ONR grant N000141110417.149ReferencesHiyan Alshawi and Richard Crouch.
1992.
Monotonicsemantic interpretation.
In Proceedings of ACL ?92,pages 32?39.Ernst Althaus, Denys Duchier, Alexander Koller, KurtMehlhorn, Joachim Niehren, and Sven Thiel.
2003.An efficient graph algorithm for dominance con-straints.
J. Algorithms, 48(1):194?219, August.Manuel Bodirsky, Denys Duchier, Joachim Niehren, andSebastian Miele.
2004.
An efficient algorithm forweakly normal dominance constraints.
In In ACM-SIAM Symposium on Discrete Algorithms.
The ACMPress.J.
Bos.
1996.
Predicate logic unplugged.
In In Proceed-ings of the 10th Amsterdam Colloquium, pages 133?143.J.
Bos.
2002.
Underspecification and Resolution in Dis-course Semantics.
Saarbru?cken dissertations in com-putational linguistics and language technology.
DFKI.Ann Copestake, Alex Lascarides, and Dan Flickinger.2001.
An algebra for semantic construction inconstraint-based grammars.
In Proceedings of ACL?01, pages 140?147.Christian Ebert.
2005.
Formal investigations of un-derspecified representations.
Technical report, King?sCollege, London, UK.M.
Egg, A. Koller, and J. Niehren.
2001.
The constraintlanguage for lambda structures.
J. of Logic, Lang.
andInf., 10(4):457?485, September.Ruth Fuchss, Alexander Koller, Joachim Niehren, andStefan Thater.
2004.
Minimal recursion semanticsas dominance constraints: Translation, evaluation, andanalysis.
In Proceedings of the 42nd Meeting of theAssociation for Computational Linguistics (ACL?04),Main Volume, pages 247?254, Barcelona, Spain, July.Jerry R. Hobbs and Stuart M. Shieber.
1987.
An al-gorithm for generating quantifier scopings.
Comput.Linguist., 13(1-2):47?63, January.Alexander Koller and Stefan Thater.
2007.
Solving unre-stricted dominance graphs.
In Proceedings of the 12thConference on Formal Grammar, Dublin.Alexander Koller and Stefan Thater.
2010.
Computingweakest readings.
In Proceedings of the 48th ACL,Uppsala.Alexander Koller, Joachim Niehren, and Stefan Thater.2003.
Bridging the gap between underspecificationformalisms: Hole semantics as dominance constraints.In Proceedings of the 11th EACL, Budapest.Alexander Koller, Michaela Regneri, and Stefan Thater.2008.
Regular tree grammars as a formalism for scopeunderspecification.
In Proceedings of ACL-08: HLT,Columbus, Ohio.Mehdi H. Manshadi, James F. Allen, and Mary Swift.2008.
Toward a universal underspecified semantic rep-resentation.
In Proceedings of the 13th Conference onFormal Grammar, Hamburg, Germany, August.Mehdi H. Manshadi, James F. Allen, and Mary Swift.2009.
An efficient enumeration algorithm for canon-ical form underspecified semantic representations.
InProceedings of the 14th Conference on Formal Gram-mar, Bordeaux, France, July.Joachim Niehren and Stefan Thater.
2003.
Bridging thegap between underspecification formalisms: minimalrecursion semantics as dominance constraints.
In Pro-ceedings of the 41st Annual Meeting on Associationfor Computational Linguistics - Volume 1, ACL ?03,pages 367?374, Stroudsburg, PA, USA.
Associationfor Computational Linguistics.S.
Oepen, K. Toutanova, S. Shieber, C. Manning,D.
Flickinger, and T. Brants.
2002.
The lingo red-woods treebank motivation and preliminary applica-tions.
In Proceedings of COLING ?02, pages 1?5.S.
Thater.
2007.
Minimal Recursion Semantics as Dom-inance Constraints: Graph-theoretic Foundation andApplication to Grammar Engineering.
Saarbru?ckendissertations in computational linguistics and languagetechnology.
Universita?t des Saarlandes.W A Woods.
1986.
Semantics and quantification innatural language question answering.
In Barbara J.Grosz, Karen Sparck-Jones, and Bonnie Lynn Web-ber, editors, Readings in natural language processing,pages 205?248.
Morgan Kaufmann Publishers Inc.,San Francisco, CA, USA.150
