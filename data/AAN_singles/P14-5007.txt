Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations, pages 37?42,Baltimore, Maryland USA, June 23-24, 2014.c?2014 Association for Computational LinguisticsReal-Time Detection, Tracking, and Monitoring of AutomaticallyDiscovered Events in Social MediaMiles Osborne?EdinburghSean MoranEdinburghRichard McCreadieGlasgowAlexander Von LunenLoughboroughMartin SykoraLoughboroughElizabeth CanoAstonNeil IresonSheffieldCraig MacdonaldGlasgowIadh OunisGlasgowYulan HeAstonTom JacksonLoughboroughFabio CiravegnaSheffieldAnn O?BrienLoughboroughAbstractWe introduce ReDites, a system for real-time event detection, tracking, monitoringand visualisation.
It is designed to as-sist Information Analysts in understand-ing and exploring complex events as theyunfold in the world.
Events are automat-ically detected from the Twitter stream.Then those that are categorised as be-ing security-relevant are tracked, geolo-cated, summarised and visualised for theend-user.
Furthermore, the system trackschanges in emotions over events, sig-nalling possible flashpoints or abatement.We demonstrate the capabilities of ReD-ites using an extended use case from theSeptember 2013 Westgate shooting inci-dent.
Through an evaluation of system la-tencies, we also show that enriched eventsare made available for users to explorewithin seconds of that event occurring.1 Introduction and ChallengesSocial Media (and especially Twitter) has becomean extremely important source of real-time infor-mation about a massive number of topics, rangingfrom the mundane (what I had for breakfast) to theprofound (the assassination of Osama Bin Laden).
?Corresponding author: miles@inf.ed.ac.ukDetecting events of interest, interpreting and mon-itoring them has clear economic, security and hu-manitarian importance.The use of social media message streams forevent detection poses a number of opportunitiesand challenges as these streams are: very high involume, often contain duplicated, incomplete, im-precise and incorrect information, are written ininformal style (i.e.
short, unedited and conver-sational), generally concern the short-term zeit-geist; and finally relate to unbounded domains.These characteristics mean that while massive andtimely information sources are available, domain-relevant information may be mentioned very infre-quently.
The scientific challenge is therefore thedetection of the signal within that noise.
This chal-lenge is exacerbated by the typical requirementthat documents must be processed in (near) real-time, such that events can be promptly acted upon.The ReDites system meets these requirementsand performs event detection, tracking, summari-sation, categorisation and visualisation.
To thebest of our understanding, it is the first published,large-scale, (near) real-time Topic Detection andTracking system that is tailored to the needs of in-formation analysts in the security sector.
Novel as-pects of ReDites include the first large-scale treat-ment of spuriously discovered events and tailoringthe event stream to the security domain.37Figure 1: System Diagram2 Related WorkA variety of event exploration systems have previ-ously been proposed within the literature.
For in-stance, Trend Miner1enables the plotting of termtimes series, drawn from Social Media (Preot?iuc-Pietro and Cohn, 2013).
It has a summarisationcomponent and is also multilingual.
In contrast,our system is focussed instead upon documents(Tweets) and is more strongly driven by real-time considerations.
The Social Sensor (Aiello etal., 2013) system facilitates the tracking of pre-defined events using social streams.In contrast, we track all automatically discov-ered events we find in the stream.
The Twitci-dent (Abel et al., 2012) project deals with user-driven searching through Social Media with re-spect to crisis management.
However, unlikeReDites, these crises are not automatically dis-covered.
The LRA Crisis Tracker2has a similarpurpose as ReDites.
However, while LRA usescrowdsourcing, our ReDites system is fully auto-matic.3 System Overview and ArchitectureFigure 1 gives a high-level system description.The system itself is loosely coupled, with ser-vices from different development teams coordi-nating via a Thrift interface.
An important as-pect of this decoupled design is that it enables ge-ographically dispersed teams to coordinate witheach other.
Event processing is comprised of thefollowing main 4 steps:1) New events are detected.
An event is describedby the first Tweet that we find discussing it andis defined as something that is captured within asingle Tweet (Petrovic et al., 2010).1http://www.trendminer-project.eu/2http://www.lracrisistracker.com/2) When an event is first discovered it may initiallyhave little information associated with it.
Further-more, events evolve over time.
Hence, the sec-ond step involves tracking the event ?
finding newposts relating to it as they appear and maintaininga concise updated summary of them.3) Not all events are of interest to our intendedaudience, so we organise them.
In particular, wedetermine whether an event is security-related (orotherwise), geolocate it, and detect how prominentemotions relating to that event evolve.4) Finally, we visualise the produced stream ofsummarised, categorised and geolocated eventsfor the analyst(s), enabling them to better makesense of the mass of raw information presentwithin the original Twitter stream.Section 6 further describes these four steps.4 Data and StatisticsFor the deployment of ReDites, we use the Twit-ter 1% streaming sample.
This provides approx-imately four million Tweets per day, at a rate ofabout 50 Tweets a second.
Table 1 gives someillustrative statistics on a sample of data fromSeptember 2013 to give a feel for the rate of dataand generated events we produce.
Table 2 givestiming information, corresponding with the majorcomponents of our system: time to process andtime to transfer to the next component, which isusually a service on another machine on the in-ternet.
The latency of each step is measured inseconds over a 1000 event sample.
?Transfer?
la-tencies is the time between one step completingand the output arriving at the next step to be pro-cessed (Thrift transfer time).
Variance is the aver-age deviation from the mean latency over the eventsample.When processing the live stream, we ingest dataat an average rate of 50 Tweets per second and de-tect an event (having geolocated and filtered outnon-English or spam Tweets) with a per-Tweet la-tency of 0.6?0.55 seconds.
Figure 2 gives laten-cies for the various major components of the sys-tem.
All processing uses commodity machines.5 The Westgate Shopping Mall AttackAs an illustrative example of a complex recentevent, we considered a terrorist attack on the 21stof September, 2013.3This event is used to demon-strate how our system can be used to understand it.3https://en.wikipedia.org/wiki/Westgate shopping mall shooting38Measure Event Detection Tracking and Summ Emotion Ident Security ClassDetection Transfer Ranking Summ Transfer Ident Transfer ClassLatency (sec.)
0.6226 0.7929 2.2892 0.0409 0.0519 0.2881 0.1032 0.1765Variance (sec.)
0.5518 0.2987 1.3079 0.0114 0.0264 0.1593 0.0195 0.0610Table 2: Event exploration timing and timing variance (seconds)Data RateTweets 35 MillionDetected events 533kCategorised (security-related) events 5795Table 1: Data statistics, 1st September - 30thSeptember 2013In summary, a shopping Mall in Kenya was at-tacked from the 21st of September until the 24thof September.
This event was covered by tradi-tional newswire, by victims caught up in it as wellas by terrorist sympathisers, often in real-time.As we later show, even though we only operateover 1% of the Twitter Stream, we are still able tofind many (sub) events connected with this attack.There were 6657 mentions of Westgate in Septem-ber 2013 in our 1% of sample Tweets.6 Major Components6.1 Event DetectionBuilding upon an established Topic Detection andTracking (TDT) methodology, which assumes thateach new event corresponds with seeing somenovel document.
the event detection componentuses a hashing approach that finds novel events4in constant time (Petrovic et al., 2010).
To makeit scale and process thousands of documents eachsecond, it can optionally be distributed over a clus-ter of machines (via Storm5) (McCreadie et al.,2013).
The system favours recall over precisionand has been shown to have high recall, but a lowprecision (Petrovic et al., 2013).
Given that we arepresenting discovered events to a user and we donot want to overload them with false positives, weneed to take steps to increase precision (ie presentfewer false positives).We use a content categoriser to determinewhether a discovered event is worth reporting.Using more than 100k automatically discoveredevents from the Summer of 2011, we created atraining set and manually labelled each Tweet:4An event is defined as something happening at a giventime and place.
Operationally, this means something that canbe described within a Tweet.5http://storm.incubator.apache.org/was it content bearing (what you might want toread about in traditional newswire) or irrelevant/ not useful.
With this labelled data, we useda Passive-Aggressive algorithm to build a con-tent classifier.
Features were simply unigrams inTweets.
This dramatically improves precision, to70%, with a drop in recall to 25% (when testedon 73k unseen events, manually labelled by twoannotators).
We can change the precision-recallboundary as needed by adjusting the associateddecision boundary.
We do not consider non-English language Tweets in this work and they arefiltered out (Lui and Baldwin, 2012).Geolocation is important, as we are particu-larly interested in events that occur at a spe-cific location.
We therefore additionally geolo-cate any Tweets that were not originally ge-olocated.
To geotag those Tweets that do nothave any geo-location information we use theTweet text and additional Tweet metadata (lan-guage, city/state/country name, user descriptionetc), to learn a L1penalised least squares regres-sor (LASSO) to predict the latitude and longitude.The model is learnt on nearly 20 million geo-located Tweets collected from 2010-2014.
Exper-iments on a held-out test dataset show we can lo-calise Tweets to within a mean distance of 433 kmof their true location.
This performance is basedon the prediction of individual tweet location andnot, as in most previous work, on the location of auser who is represented by a set of tweets.
Further-more we are not restricted to a single, well-definedarea (such as London) and we also evaluate over avery large set of unfiltered tweets.Turning to the Westgate example, the first men-tion of it in our data was at 10:02 UTC.
There were57 mentions of Westgate in discovered events,of which 42 mentioned Kenya and 44 mentionedNairobi.
The first mention itself in Twitter was at09:38 UTC.
We declared it an event (having seenenough evidence and post-processing it) less thanone second later:Westgate under siege.
Armed thugs.
Gun-shots reported.
Called the managers, phones areoff/busy.
Are cops on the way?We also captured numerous informative sub-39events covering different aspects and sides of thecentral Westgate siege event, four of these are il-lustrated below:Post Time Tweet10:05am RT @ItsMainaKageni: My friend Ruhila Adatiapassed away together with her unborn child.
Pleasekeep her family and new husband in your thou10:13am RT howden africa: Kenya police firing tear gas andwarning shots at Kenyan onlookers.
Crowd gettingangry #westgate10:10am RT @BreakingNews: Live video: Local news cov-erage of explosions, gunfire as smoke billows fromNairobi, Kenya, mall - @KTNKenya10:10am ?Purportedly official Twitter account for al-ShabaabTweeting on the Kenyan massacre HSM Press(http://t.co/XnCz9BulGj)6.2 Tracking and SummarisationThe second component of the event explorationsystem is Tracking and Summarisation (TaS).
Theaim of this component is to use the underlyingTweet stream to produce an overview for eachevent produced by the event detection stage, up-dating this overview as the event evolves.
Track-ing events is important when dealing with live, on-going disasters, since new information can rapidlyemerge over time.TaS takes as input a Tweet representing an eventand emits a list of Tweets summarising that eventin more detail.
TaS is comprised of two dis-tinct sub-components, namely: real-time tracking;and event summarisation.
The real-time track-ing component maintains a sliding window ofTweets from the underlying Tweet stream.
Asan event arrives, the most informative terms con-tained6form a search query that is used to retrievenew Tweets about the event.
For example, tak-ing the Tweet about the Westgate terrorist attackused in the previous section as input on September21st 2013 at 10:15am, the real-time tracking sub-component retrieved the following related Tweetsfrom the Twitter Spritzer (1%) steam7(only 5/100are shown):ID Post Time Tweet Score1 10:05am Westgate under siege.
Armed thugs.
Gun-shots reported.
Called the managers, phones areoff/busy.
Are cops on the way?123.72 10:13am DO NOT go to Westgate Mall.
Gunshots andmayhem, keep away until further notice.22.93 10:13am RT DO NOT go to Westgate Mall.
Gunshotsand mayhem, keep away until further notice.22.94 10:10am Good people please avoid Westgate Mall.
@Po-liceKE @IGkimaiyo please act ASAP, reportsof armed attack at #WestgateMall22.25 10:07am RT @steve enzo: @kirimiachieng these thugswon?t let us be11.56Nouns, adjectives, verbs and cardinal numbers7https://dev.twitter.com/docs/streaming-apis/streams/publicThe second TaS sub-component is event sum-marisation.
This sub-component takes as input theTweet ranking produced above and performs ex-tractive summarisation (Nenkova and McKeown,2012) upon it, i.e.
it selects a subset of the rankedTweets to form a summary of the event.
The goalsof event summarisation are two-fold.
First, to re-move any Tweets from the above ranking that arenot relevant to the event (e.g.
Tweet 5 in the exam-ple above).
Indeed when an event is first detected,there may be few relevant Tweets yet posted.
Thesecond goal is to remove redundancy from withinthe selected Tweets, such as Tweets 2 and 3 in theabove example, thereby focussing the producedsummary on novelty.
To tackle the first of thesegoals, we leverage the score distribution of Tweetswithin the ranking to identify those Tweets that arelikely background noise.
When an event is firstdetected, few relevant Tweets will be retrieved,hence the mean score over the Tweets is indicativeof non-relevant Tweets.
Tweets within the rank-ing whose scores diverge from the mean score inthe positive direction are likely to be on-topic.
Wetherefore, make an include/exclude decision foreach Tweet t in the ranking R:include(t, R) =??????????
?1 if score(t)?
SD(R) > 0and |SD(R)?
score(t)| >?
?1|R|?t??R|SD(R)?
score(t?
)|0 otherwise(1)where SD(R) is the standard deviation of scoresinR, score(t) is the retrieval score for Tweet t and?
is a threshold parameter that describes the mag-nitude of the divergence from the mean score thata Tweet must have before it is included within thesummary.
Then, to tackle the issue of redundancy,we select Tweets in a greedy time-ordered man-ner (earliest first).
A similarity (cosine) thresholdbetween the current Tweet and each Tweet previ-ously selected is used to remove those that are tex-tually similar, resulting in the following extractivesummary:ID Post Time Tweet Score1 10:05am Westgate under siege.
Armed thugs.Gunshots reported.
Called the man-agers, phones are off/busy.
Are copson the way?123.72 10:13am DO NOT go to Westgate Mall.
Gun-shots and mayhem, keep away untilfurther notice.22.94 10:10am Good people please avoid WestgateMall.
@PoliceKE @IGkimaiyo pleaseact ASAP, reports of armed attack at#WestgateMall22.2Finally, the TaS component can be used to track40events over time.
In this case, instead of tak-ing a new event as input from the event detec-tion component, a previously summarised eventcan be used as a surrogate.
For instance, a usermight identify an event that they want to track.The real-time search sub-component retrieves newTweets about the event posted since that event waslast summarised.
The event summarisation sub-component then removes non-relevant and redun-dant Tweets with respect to those contained withinthe previous summary, producing a new updatedsummary.6.3 Organising Discovered EventsThe events we discover are not targeted at infor-mation analysts.
For example, they contain sportsupdates, business acquisitions as well as those thatare genuinely relevant and can bear various opin-ions and degrees of emotional expression.
Wetherefore take steps to filter and organise them forour intended audience: we predict whether theyhave a specific security-focus and finally predictan emotional label for events (which can be usefulwhen judging changing viewpoints on events andhighlighting extreme emotions that could possiblymotivate further incidents).6.3.1 Security-Related Event DetectionWe are particularly interested in security-relatedevents such as violent events, natural disasters, oremergency situations.
Given a lack of in-domainlabelled data, we resort to a weakly supervisedBayesian modelling approach based on the previ-ously proposed Violence Detection Model (VDM)(Cano et al., 2013) for identifying security events.In order to differentiate between security andnon-security related events, we extract words re-lating to security events from existing knowledgesources such as DBpedia and incorporate them aspriors into the VDM model learning.
It should benoted that such a word lexicon only provides ini-tial prior knowledge into the model.
The modelwill automatically discover new words describingsecurity-related events.We trained the VDM model on a randomlysampled 10,581 Tweets from the TREC Mi-croblog 2011 corpus (McCreadie et al., 2012)and tested the model on 1,759 manually labelledTweets which consist of roughly the same num-ber of security-related and non-security relatedTweets.
Our results show that the VDM modelachieved 85.8% in F-measure for the identificationof security-related Tweets, which is not far fromthe F-measure of 90% obtained using the super-vised Naive Bayes classifier despite using no la-belled data in the model.Here, we derived word priors from a totalof 32,174 documents from DBpedia and ex-tracted 1,612 security-related words and 1,345non-security-related words based on the measure-ment of relative word entropy.
We then trainedthe VDM model by setting the topic number to50 and using 7,613 event Tweets extracted fromthe Tweets collected during July-August 2011 andSeptember 2013 in addition to 10,581 Tweets fromthe TREC Microblog 2011 corpus.
In the afore-mentioned Westgate example, we classify 24% ofTweets as security-related out of a total of 7,772summary Tweets extracted by the TaS component.Some of the security-related Tweets are listed be-low8:ID Post Time Tweet1 9:46am Like Bin Laden kind of explosion??
@The realBIGmeat:There is an explosion at westgate!
?2 10:08am RT @SmritiVidyarthi: DO NOT go to WestgateMall.
Gunshots and mayhem, keep away till further no-tice.3 10:10am RT @juliegichuru: Good people please avoidWestgate.
@PoliceKE @IGkimaiyo please actASAP, reports of armed attack at #WestgateMall.4 10:13am there has bn shooting @ Westgate which is suspectedto b of gangs.......there is tension rt nw....6.3.2 EmotionSecurity-related events can be fraught, with emo-tionally charged posts possibly evolving over time,reflecting ongoing changes in underlying events.Eight basic emotions, as identified in the psychol-ogy literature (see (Sykora et al., 2013a) for a de-tailed review of this literature) are covered, specif-ically; anger, confusion, disgust, fear, happiness,sadness, shame and surprise.
Extreme values ?aswell as their evolution?
can be useful to an ana-lyst (Sykora et al., 2013b).
We detect enotions inTweets and support faceted browing.
The emotioncomponent assigns labels to Tweets representingthese emotions.
It is based upon a manually con-structed ontology, which captures the relationshipsbetween these emotions and terms (Sykora et al.,2013a).We sampled the summarised Tweets of theWestgate attack, starting from the event detectionand following the messages over a course of sevendays.
In the relevant Tweets, we detected that8Note some Tweets happen on following days.418.6% had emotive terms in them, which is in linewith the aforementioned literature.
Some exampleexpressions of emotion include:Time Tweet Emotions03:34 -) Ya so were those gunshots outside Fearof gables?!
I?m terrified ?06:27 -) I?m so impressed @ d way.
Kenyans r handling d siege.
Surprise14:32 -) All you xenophobic idiots spewing anti-Muslim Fearbullshit need to -get in one of these donation lines Disgustand see how wrong you ?For Westgate, the emotions of sadness, fear andsurprise dominated.
Very early on the emotions offear and sadness were expressed, as Twitter userswere terrified by the event and saddened by theloss of lives.
Sadness and fear were ?
over time ?the emotions that were stated most frequently andconstantly, with expressions of surprise, as userswere shocked about what was going on, and somehappiness relating to when people managed toescape or were rescued from the mall.
Generallyspeaking, factual statements in the Tweets weremore prominent than emotive ones.
This coincideswith the emotive Tweets that represented fear andsurprise in the beginning, as it was not clear whathad happened and Twitter users were upset andtried to get factual information about the event.6.4 Visual AnalyticsThe visualisation component is designed to facili-tate the understanding and exploration of detectedevents.
It offers faceted browsing and multiple vi-sualisation tools to allow an information analystto gain a rapid understanding of ongoing events.An analyst can constrain the detected events us-ing information both from the original Tweets (e.g.hashtags, locations, user details) and from the up-dated summaries derived by ReDites.
The ana-lyst can also view events using facet values, loca-tions/keywords in topic maps and time/keywordsin multiple timelines.
By combining informa-tion dimensions, the analyst can determine pat-terns across dimensions to determine if an eventshould be acted upon ?
e.g the analyst can chooseto view Tweets, which summarise highly emotiveevents, concerning middle eastern countries.7 DiscussionWe have presented ReDites, the first publishedsystem that carries out large-scale event detection,tracking summarisation and visualisation for thesecurity sector.
Events are automatically identifiedand those that are relevant to information analystsare quickly made available for ongoing monitor-ing.
We showed how the system could be usedto help understand a complex, large-scale securityevent.
Although our system is initially specialisedto the security sector, it is easy to repurpose it toother domains, such as natural disasters or smartcities.
Key aspects of our approach include scala-bility and a rapid response to incoming data.AcknowledgementsThis work was funded by EPSRC grantEP/L010690/1.
MO also acknowledges sup-port from grant ERC Advanced Fellowship249520 GRAMPLUS.ReferencesF.
Abel, C. Hauff, G.-J.
Houben, R. Stronkman, and K. T.Semantics + filtering + search = twitcident.
exploring in-formation in social web streams.
In Proc.
of HT, 2012.L.
M. Aiello et al.
L. Aiello, G. Petkos, C. Martin, D. Corney,S.
Papadopoulos, R. Skraba, A. Goker, Y. Kompatsiaris,A.
Jaimes Sensing trending topics in Twitter.
Transac-tions on Multimedia Journal, 2012.A.E.
Cano, Y.
He, K. Liu, and J. Zhao.
A weakly supervisedbayesian model for violence detection in social media.
InProc.
of IJCNLP, 2013.M.
Lui and T. Baldwin.
Langid.py: An off-the-shelf lan-guage identification tool.
In Proc.
of ACL, 2012.R.
McCreadie, C. Macdonald, I. Ounis, M. Osborne, and S.Petrovic.
Scalable distributed event detection for twitter.In Proc.
of Big Data, 2013.R.
McCreadie, I. Soboroff, J. Lin, C. Macdonald, I. Ounis andD.
McCullough.
On building a reusable Twitter corpus.
InProc.
of SIGIR, 2012.A.
Nenkova and K. McKeown.
A survey of text summariza-tion techniques.
In Mining Text Data Journal, 2012.S.
Petrovic, M. Osborne, and V. Lavrenko.
Streaming firststory detection with application to Twitter.
In Proc.
ofNAACL, 2010.S.
Petrovic, M. Osborne, R. McCreadie, C. Macdonald, I.Ounis, and L. Shrimpton.
Can Twitter replace newswirefor breaking news?
In Proc.
of WSM, 2012.D.
Preot?iuc-Pietro and T. Cohn.
A temporal model of text pe-riodicities using gaussian processes.
In Proc.
of EMNLP,2012.M.
D. Sykora, T. W. Jackson, A. O?Brien, and S. Elayan.Emotive ontology: Extracting fine-grained emotions fromterse, informal messages.
Computer Science and Informa-tion Systems Journal, 2013.M.
D. Sykora, T. W. Jackson, A. O?Brien, and S. Elayan.National security and social media monitoring.
In Proc.of EISIC, 2013.42
