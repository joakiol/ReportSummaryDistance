Disambiguation of Finite-State TransducersN.
Smaili and P. Cardinal and G. Boulianne and P. DumouchelCentre de Recherche Informatique de Montre?al.
{nsmaili, pcardinal, gboulian, Pierre.Dumouchel}@crim.caAbstractThe objective of this work is todisambiguate transducers which havethe following form: T = R ?D and tobe able to apply the determinizationalgorithm described in (Mohri, 1997).Our approach to disambiguatingT = R ?D consists first of computingthe composition T and thereafter todisambiguate the transducer T .
Wewill give an important consequence ofthis result that allows us to composeany number of transducers R withthe transducer D, in contrast to theprevious approach which consisted infirst disambiguating transducers Dand R to produce respectively D?
andR?
, then computing T ?
= R?
?D?
whereT ?
is unambiguous.
We will presentresults in the case of a transducerD representing a dictionary and Rrepresenting phonological rules.Keywords: ambiguity, determinis-tic, dictionary, transducer.1 IntroductionThe task of speech recognition can bedecomposed into several steps, whereeach step is represented by a finite-state transducer (Mohri et al, 1998).The search space of the recognizer isdefined by the composition of trans-ducers T = A ?
C ?R ?D ?M .
Trans-ducer A converts a sequence of obser-vations O to a sequence of context-dependent phones.Transducer C converts a sequenceof context-dependent phones to asequence of context-independentphones.
Transducer R is a mappingfrom phones to phones which imple-ments phonological rules.
TransducerD is the pronunciations dictionary.It converts a sequence of context-independent phones to a sequence ofwords.
Transducer M represents alanguage model: it converts sequencesof words into sequences of words, whilerestricting the possible sequences orassigning a score to the sequences.The speech recognition problem con-sists of finding the path of least costin transducer O ?
T , where O is asequence of acoustic observations.The pronunciations dictionary rep-resenting the mapping from pronun-ciations to words can show an inher-ent ambiguity: a sequence of phonescan correspond to more than one word,so we cannot apply the transducer de-terminization algorithm (an operationwhich reduces the redundancy, searchtime and possibly space).
This prob-lem is usually handled by adding spe-cial symbols to the dictionary to re-move the ambiguity in order to beable to apply the determinization al-gorithm (Koskenniemi, 1990).
Never-theless, when we compose the dictio-nary with the phonological rules, wemust take into account special sym-bols.
This complicates the construc-tion of transducers representing theserules and leads to size explosion.
Itwould be simpler to compose the ruleswith the dictionary, then remove theambiguity in the result and then applythe determinization algorithm.2 Notations anddefinitionsFormally, a weighted transducer over asemiring K = (K,?,?, 0?, 1?)
is definedas a 6-tuple T = (Q, I,?1,?2, E, F )where Q is a finite set of states, I ?Q is a finite set of initial states, ?1 isthe input alphabet, ?2 is the outputalphabet, E is a finite set of transitionsand F ?
Q is a finite set of final states.A transition is an element of Q??1?
?2 ?Q?K.Transitions are of the formt = (p(t), i(t), o(t), n(t), w(t)), t ?
Ewhere p(t) denotes the transition?sorigin state, i(t) its input label, o(t)its output label, n(t) the transition?sdestination state and w(t) ?
K is theweight of t. The tropical semiringdefined as (R+ ?
?, min,+,?, 0) iscommonly used in speech recogni-tion, but our results are applicableto the case of general semirings as well.A path pi = t1 ?
?
?
tn of T is an ele-ment of E?
verifyingn(ti?1) = p(ti) for 2 ?
i ?
n.We can easily extend the functions pand n to those paths:p(pi) = p(t1), (1)n(pi) = n(tn).
(2)We denote by P (r, s) the set of pathswhose origin is state r and whose des-tination is state s. We can also extendthe function P to the sets R ?
Q andS ?
Q:P (R, S) =?r?R, s?SP (r, s)We can extend the functions i and o tothe paths by taking the concatenationsof the input and output symbols:i(pi) = i(t1) ?
?
?
i(tn), (3)o(pi) = o(t1) ?
?
?o(tn).
(4)Definition 1 (unambiguous trans-ducer, (Berstel, 1979))A transducer T is said to be unam-biguous if for each w ?
?
?1, thereexists at most one path pi in T suchthat i(pi) = w.Definition 2 (ambiguous paths)Two paths pi and ?
are ambiguous ifpi 6= ?
and i(pi) = i(?
).Remark 1 : To remove the ambiguitybetween two paths pi and ?, it sufficesto modify i(pi) by changing the first in-put label of the path pi.
This is doneby introducing an auxiliary symbol suchthat: i(pi) 6= i(?
).Figure 1a shows an ambiguoustransducer.
It is ambiguous sincefor the input string ?s e [z]?, thereare two paths representing the out-put strings {ces, ses}.
In this figure,?eps?
stands for epsilon or null symbol.To disambiguate a transducer, wefirst group the ambiguous paths; wethen remove the ambiguity in eachgroup by adding auxiliary labels asshown in Figure 1b.
Unfortunately, itis infeasible to enumerate all the pathsin a cyclic transducer.
However, in(Smaili, 2001) it is shown that cyclictransducers of the type studied in thiswork can be disambiguated by trans-forming to a corresponding acyclic sub-transducer such that T ?
?
T .
This(a)01s:ses3s:ces5a:amis7k:cadeau2E:eps4E:eps6m:eps8a:eps10[z]:eps#:#[z]:epsi:eps9d:epso:eps(b)01s:ses3s-2:ces5a:amis7k:cadeau2E:eps4E:eps6m:eps8a:eps10[z]:eps#:#[z]:epsi:eps9d:epso:epsFigure 1: (a) Ambiguous transducer(b) Disambiguated transducerfundamental property is described indetail in section 2.1.
Accordingly, weapply the appropriate transformationto the input transducer.2.1 Fundamental PropertyWe are interested in the transducerT = (Q, I, ?, ?, E, F ) with ?
=?0 ] ?1 verifying the following prop-erty:Any cycle in T contains at least atransition t such that i(t) ?
?1.We denote by E0 and E1 the follow-ing sets: E0 = {t ?
E : i(t) ?
?0}and E1 = {t ?
E : i(t) ?
?1}.
Noticethat E = E0 ] E1.We can give a characterization of theambiguous paths verifying the funda-mental property.
Before, let?s make thefollowing remark:Remark 2 Any path pi in T has thefollowing form:pi = f0 pi0 f1 pi1 ?
?
?pin?1 fn pinwith pii ?
E+0 , fi ?
E+1 for 1 ?
i ?n, f0 ?
E?1 and pi0 ?
E?0 if n ?
1.If n = 0 then pi = f0 pi0.Proposition 1 (characterization ofambiguous paths)Let pi and ?
be two paths such that:pi = f0 pi0 f1 pi1 ?
?
?pin?1 fn pin and?
= g0 ?0 g1 ?1 ?
?
?
?k?1 gk ?k.pi and ?
are ambiguous if and only if??
?k = n?i and pii are ambiguous (0 ?
i ?
n).fi and gi are ambiguous (0 ?
i ?
n).We will assume that the first transi-tion?s path belongs to E0, i.e.
f0 = .Recall that if we want to avoid cy-cles, we just have to remove from Tall transitions t ?
E1.
According toProposition 1, ambiguity needs to beremoved only in paths that use tran-sitions t ?
E0, namely the path piithat performs the decomposition givenin Remark 2.
Disambiguation consistsonly of introducing auxiliary labels inthe ambiguous paths.
We denote byAsrc the set of origin states of transi-tions belonging to E1 and by Adst theset of destination states of transitionsbelonging to E2.Asrc = {p(t) : t ?
E1}Adst = {n(t) : t ?
E1}According to Proposition 1 and whatprecedes, it would be equivalent andsimpler to disambiguate an acyclictransducer obtained from T in whichwe have removed all E1 transitions.Therefore, we introduce the operator?
: {Tin} ??
{Tout} which accom-plishes this construction.Let T = (Q, I,?1,?2, E, F ).
Then?
(T ) = (Q, I1,?1,?2, ET , F1) where:1.
I1 = I ?
Adst ?
{i}, with i 6?
Q.2.
F1 = F ?
Asrc ?
{f}, with f 6?
Q.3.
ET = E \E1?
{(i, q, , , 0), q ?I1} ?
{(q, f, , , 0), q ?
F1}.The third condition insures the connec-tivity of ?
(T ) if T is itself connected.It suffices to disambiguate the acyclictransducer ?
(T ), then reinsert thetransitions of E1 in ?
(T ).
The set ofpaths in ?
(T ) is then P(I1, F1).2.2 AlgorithmInput:T = (Q, i, X, Y, E, F ) is anambiguous transducer verifying thefundamental property.Output:T1 = (Q, i, X ?X1, Y, ET , F ) is anunambiguous transducer, X1 is the setof auxiliary symbols.1.
Tacyclic ?
?
(T ).2.
Path ?
set of paths of Tacyclic.3.
Disambiguate the set Path (creat-ing the set X1).4.
T0 ?
build the unambiguoustransducer which has unambigu-ous paths.5.
T1 ?
?
?1(T0) (consists of rein-serting in T0 the transitions of Twhich where removed).6. return T1Now, we will study an importantclass of transducers verifying the fun-damental property.
This class is ob-tained by doing the composition of atransducer D verifying the fundamen-tal property with a transducer R. Thecomposition of two transducers is anefficient algebraic operation for build-ing more complex transducers.
Wegive a brief definition of compositionand the fundamental theorem that in-sures the invariance of the fundamentalproperty by composition.3 CompositionThe transducer T created by the com-position of two transducers R and D,denoted T = R?D, performs the map-ping of word x to word z if and onlyif R maps x to y and D maps y to z.The weight of the resulting word is the?-product of the weights of y and z(Pereira and Riley, 1997).Definition 3 (Transitions) Let t =(q, a, b, q1, w1) and e = (r, b, c, r1,w2) be two transitions.
We define thecomposition t with e by:t ?
e = ((q, r), a, c, (q1, r1), w1 ?
w2).Note that, in order to make the com-position possible, we must have o(t) =i(e).Definition 4 (Composition)Let R = (QR, IR, X, Y, ER, FR)and S = (QS, IS, Y, Z, ES, FS) betwo transducers.
The composi-tion of R with S is a transducerR ?
S = (Q,Q,X, Z,E, F ) defined by:1. i = (iR, iS),2.
Q = QR ?QS,3.
F = FR ?
FS,4.
E = {eR?eS : eR ?
ER, eS ?
ES}.Let D = (QD, ID, Y, Z, ED, FD) be atransducer verifying the fundamentalproperty.
We can write Y = Y0 ] Y1where Y0 = {i(t) : t ?
E0} andY1 = {i(t) : t ?
E1}.Theorem 1 (Fundamental) LetR = (QR, IR, X, Y, ER, FR) verifyingthe following condition:(C) ?t ?
ER, o(t) ?
Y1 ?
i(t) ?
Y1.Then the transducer T = R?D verifiesthe fundamental property.Proof :Let X1 = {i(t) : t ?
ER and o(t) ?Y1} ?
Y1 and X0 = X \ X1.
We willprove that any path in T contains atleast a transition t such that i(t) ?
X1.Let pi be a cycle in T .
Then, thereexists two cycles piR and piD in R andin D respectively such that pi = piR ?piD.
The paths piR and piD have thefollowing form:piD = g1 ?
?
?
gn,with gi ?
ED for 1 ?
i ?
n;piR = f1 ?
?
?
fn,with fi ?
ER for 1 ?
i ?
n;pi = piR ?
piD = (f1 ?
g1) ?
?
?
(fn ?
gn).There is an index k such that i(gk) ?Y1 since D verifies the fundamentalproperty.
We also necessarily havei(gk) = o(fk) .
According to condi-tion (C) of Theorem 1, we deduce thati(fk) ?
Y1.
Knowing that fk ?
ER, wededuce that i(fk) ?
X1, which impliesi(fk ?
gk) = i(fk) ?
X1.3.1 ConsequenceThe restriction to the case X = Yallows us to build a large class oftransducers verifying the fundamentalproperty.
In fact, if two transducersR = (QR, IR, Y, Y, ER, FR) and S =(QS, IS, Y, Y, ES, FS) verify the condi-tion (C) of Theorem 1, then S ?R ver-ifies the condition (C), associativity of?
implies:S ?
(R ?D) = (S ?R) ?D.Suppose that we have m transducersRi ( 1 ?
i ?
m ) verifying the con-dition (C) of Theorem 1 and that wewant to reduce the size of the trans-ducer:Tm = Rm ?Rm?1 ?
?
?R1 ?D.To this end, we proceed as follows: weadd the auxiliary symbols to disam-biguate the transducer; then we applydeterminization and finally we removethe auxiliary labels.
These three oper-ations are denoted by ?.Ti ={?
(D) if i = 0.?
(Ri ?
?
(Ti?1)) if i ?
1.The size of transducer Tm can alsobe reduced by computing:Tm = ?
(Rm ?Rm?1 ?
?
?R1 ?D).The old approach:T ?m = R?m ?R?m?1 ?
?
?R?1 ?D?.has several disadvantages.
The size ofR?i for 1 ?
i ?
m increases consid-erably since the auxiliary labels intro-duced in each transducer have to betaken into account in all others.
Thisfact limits the number of transducersthat can be composed with D.4 Application and ResultsWe will now apply our algorithm totransducers involved in speech recog-nition.
Transducer D represents thepronunciation dictionary and possessesthe fundamental property.
The set oftransitions of D is defined asE = E0 ] {(f,#, x, 0, w)}where f is the unique final state ofD, 0is the unique initial state of D, x is anysymbol and # is a symbol represent-ing the end of a word.
All transitionst ?
E0 are such that i(t) 6= #.
Anypath pi in E?0 is acyclic.
The transducerR representing a phonological rule isconstructed to fulfill condition (C) ofthe fundamental theorem.
The trans-ducer D represents a French dictionarywith 20000 words and their pronuncia-tions.
The transducer R represents thephonological rule that handles liaisonin the French language.
This liaison,which is represented by a phoneme ap-pearing at the end of some words, mustbe removed when the next word be-gins with a consonant since the liaisonphoneme is never pronounced in thatcase.
However, if the next word beginswith a vowel, the liaison phoneme mayor may not be pronounced and thus be-comes optional.0p:p#:#1eps:[x]2[x]:[x]p:p#:#v:v#:#Figure 2: Transducer used to handlethe optional liaison rule.Figure 2 shows the transducer thathandles this rule.
In the figure, pdenotes all phonemes, v the vowelsand [x] the liaison phonemes.Table 1 shows the results of our al-gorithm using the dictionary and thephonological rule previously described.Transducer States TransitionsD 115941 136001?
(D) 17607 42140R ?D 115943 151434?
(R ?D) 17955 50769R ?
?
(D) 17611 53209?
(R ?
?
(D)) 17587 49620Table 1: Size reduction on a FrenchdictionaryAs we can see in Table 1, the opera-tor ?
produces a smaller transducer inall the cases considered here.5 Conclusion and futureworkWe have been able to disambiguatean important class of cyclic and am-biguous transducers, which allows usto apply the determinization algorithm(Mohri, 1997); and then to reduce thesize of those transducers.
With ournew approach, we do not have to takeinto account the number of transduc-ers Ri and their auxiliary labels as wasthe case with the approach used be-fore.
Thus, new transducers Ri suchas phonological rules can be easily in-serted in the chain.The major disadvantage of our ap-proach is that disambiguating a trans-ducer increases its size systematically.Our future work will consist of develop-ing a more effective algorithm for dis-ambiguating an acyclic transducer.ReferencesJ.
Berstel.
1979.
Transductions andContext-Free Languages.
TeubnerStudienbucher, Stuttgart, Germany.G.
Boulianne, J. Brousseau, P. Ouel-let, and P. Dumouchel.
2000.
Frenchlarge vocabulary recognition withcross-word phonology transducers.In Proceedings ICASSP 2000, June.Istanbul, Turkey.S.
Eilenberg.
1974-1976.
Automata,Language and Machines, volume A-B.
Academic Press, New York.R.
Kaplan and M. Kay.
1994.
Reg-ular models of phonological rulesystems.
Computational linguistics,20(3):331?378.K.
Koskenniemi.
1990.
Finite stateparsing and disambiguation.
In Pro-ceedings of the 13th InternationalConference on Computational Lin-guistics (COLING?90), volume 2.Helsinki, Finland.M.
Mohri, M. Riley, D. Hindle,A.
Ljolje, and F. Pereira.
1998.Full expansion of context-dependentnetworks in large vocabularyspeech recognition.
In Proceedingsof the International Conferenceon Acoustics, Speech, and SignalProceesing(ICASSP?
98).
Seattle,Washington.M.
Mohri.
1997.
Finite-state trans-ducers in language and speech pro-cessing.
Computational linguistics,23(2).F.
Pereira and M. Riley, 1997.Speech recognition by compositionof weighted finite automata.
Em-manuel Roche and Yves Schabes,Cambridge, Massachusetts, a brad-ford book, the mit press edition.Nasser Smaili.
2001.De?sambigu?
?sation de transduc-teurs en reconnaissance de la parole.Universite?
du Que?bec a` Montre?al.
