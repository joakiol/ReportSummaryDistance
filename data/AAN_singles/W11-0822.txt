Proceedings of the Workshop on Multiword Expressions: from Parsing and Generation to the Real World (MWE 2011), pages 134?136,Portland, Oregon, USA, 23 June 2011. c?2011 Association for Computational LinguisticsFast and Flexible MWE Candidate Generationwith the mwetoolkitVitor De Araujo?
Carlos Ramisch?
?
Aline Villavicencio??
Institute of Informatics, Federal University of Rio Grande do Sul, Brazil?
GETALP ?
LIG, University of Grenoble, France{vbuaraujo,ceramisch,avillavicencio}@inf.ufrgs.brAbstractWe present an experimental environment forcomputer-assisted extraction of MultiwordExpressions (MWEs) from corpora.
Candi-date extraction works in two steps: generationand filtering.
We focus on recent improve-ments in the former, for which we increasedspeed and flexibility.
We present examplesthat show the potential gains for users and ap-plications.1 Project DescriptionThe mwetoolkit was presented and demonstratedin Ramisch et al (2010b) and in Ramisch et al(2010a), and applied to several languages (Linardakiet al, 2010) and domains (Ramisch et al, 2010c).It is a downloadable open-source1 set of command-line tools mostly written in Python.
Our target usersare researchers with a background in computationallinguistics.
The system performs language- andtype-independent candidate extraction in two steps2:1.
Candidate generation?
Pattern matching3?
n-gram counting2.
Candidate filtering?
Thresholds, stopwords and patterns?
Association measures, classifiers1sf.net/projects/mwetoolkit2For details, see previous papers and documentation3The following attributes, if present, are supported for pat-terns: surface form, lemma, POS, syntactic annotation.The main contribution of our tool, rather than anovel approach to MWE extraction, is an environ-ment that systematically integrates the functionali-ties found in other tools, that is, sophisticated cor-pus queries like in CQP (Christ, 1994) and Manatee(Rychly?
and Smrz, 2004), candidate generation likein Text::NSP (Banerjee and Pedersen, 2003), and fil-tering like in UCS (Evert, 2004).
The pattern match-ing and n-gram counting steps are the focus of theimprovements described in this paper.2 An ExampleOur toy corpus, consisting of the first 20K sentencesof English Europarl v34, was POS-tagged and lem-matized using the TreeTagger5 and converted intoXML.
6 As MWEs encompass several phenomena(Sag et al, 2002), we define our target word se-quences through the patterns shown in figure 1.
Thefirst represents sequences with an optional (?)
deter-miner DET, any number (*) of adjectives A and oneor more (+) nouns N. This shallow pattern roughlycorresponds to noun phrases in English.
The sec-ond defines expressions in which a repeated noun islinked by a preposition PRP.
The backw elementmatches a previous word, in this example the samelemma as the noun identified as noun1.After corpus indexing and n-gram pattern match-ing, the resulting unique candidates are returned.Examples of candidates captured by the first pattern4statmt.org/europarl5http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger6For large corpora, XML imposes considerable overhead.As corpora do not require the full flexibility of XML, we arecurrently experimenting with plain-text, which is already in usewith the new C indexing routines.134<pat id="1"><pat repeat="?
"><w pos="DET"/></pat><pat repeat="*"><w pos="A"/></pat><pat repeat="+"><w pos="N"/></pat></pat><pat id="2"><w pos="N" id="noun1"/><w pos="PRP"/><backw lemma="noun1" pos="noun1"/></pat>Figure 1: Pattern 1 matches NPs, pattern 2 matches se-quences N1 PRP N1.are complicated administrative process, the clock,the War Crimes Tribunal.
The second pattern cap-tures hand in hand, eye to eye, word for word.
73 New FeaturesFriendlier User Interface In the previous ver-sion, one needed to manually invoke the Pythonscripts passing the correct options.
The current ver-sion provides an interactive command-based inter-face which allows simple commands to be run ondata files, while keeping the generation of interme-diary files and the pipelining between the differentphases of MWE extraction implicit.
At the end, auser may want to save the session and restart thework later.8Regular Expression Support While in the previ-ous version only wildcard words were possible, nowwe support all the operators shown in figure 1 plusrepetition interval (2,3), multiple choice (either)and in-word wildcards like writ* matching written,writing, etc.
All these extensions allow for muchmore powerful candidate patterns to be expressed.This means that one can also use syntax annotation ifthe text is parsed: if two words separated by n wordsshare a syntactic head, they are extracted.
Multi-attribute patterns are correctly handled during pat-tern matching, in spite of individual per-attribute in-dices.
Some scripts may fuse the individual indiceson the fly, producing a combined index (e.g.
n-gramcounting).7Currently only contiguous n-grams can be captured; non-contiguous extraction (e.g., verb-noun pairs, with interveningmaterial, not part of the expression) is planned.8Although it is not a graphical interface some users request,it is far easier to use than the previous version.Faster processing Candidate generation was notable to deal with large corpora such as Europarland the BNC.
The first optimization concerns pat-tern matching: instead of using the XML corpus andexternal matching procedures, now we match candi-dates using Python?s builtin regular expressions di-rectly on the corpus index.
On a small corpus thecurrent implementation takes about 72% the origi-nal time to perform pattern-based generation.
On theBNC, extraction of the two example patterns shownbefore took about 4.5 hours and 1 hour, respectively.The second optimization concerns the creation ofthe index.
The previous script allowed a static in-dex to be created from the XML corpus, but it wasnot scalable.
Thus, we have rewritten index routinesin C. We still assume that the index must fit in mainmemory, but the new routines provide faster index-ing with reasonable memory consumption, propor-tional to the corpus size.
These scripts are still ex-perimental and need extensive testing.
With the Cindex routines, indexing the BNC corpus took about5 minutes per attribute on a 3GB RAM computer.4 Future ImprovementsAdditionally to evaluation on several tasks and lan-guages, we intend to develop several improvementsto the tool.
First, we would like to rewrite the patternmatching routines in C to speed the process up andreduce memory consumption.
Second, we wouldlike to test several heuristics to handle nested candi-dates (current strategy returns all possible matches).Third, we would like to perform more tests on us-ing regular expressions to extract candidates basedon their syntax annotation.
Fourth, we would liketo improve candidate filtering (not emphasized inthis paper) by testing new association measures, fil-ters, context-based measures, etc.
Last but most im-portant, we are planning a new release version andtherefore we need extensive testing and documenta-tion.ReferencesSatanjeev Banerjee and Ted Pedersen.
2003.
The de-sign, implementation, and use of the Ngram StatisticPackage.
In Proceedings of the Fourth InternationalConference on Intelligent Text Processing and Com-135putational Linguistics, pages 370?381, Mexico City,Mexico, Feb.Oli Christ.
1994.
A modular and flexible architecturefor an integrated corpus query system.
In COMPLEX1994, Budapest, Hungary.Stefan Evert.
2004.
The Statistics of Word Cooccur-rences: Word Pairs and Collocations.
Ph.D. thesis, In-stitut fu?r maschinelle Sprachverarbeitung, Universityof Stuttgart, Stuttgart, Germany.Evita Linardaki, Carlos Ramisch, Aline Villavicencio,and Aggeliki Fotopoulou.
2010.
Towards the con-struction of language resources for greek multiwordexpressions: Extraction and evaluation.
In SteliosPiperidis, Milena Slavcheva, and Cristina Vertan, ed-itors, Proc.
of the LREC Workshop on Exploitationof multilingual resources and tools for Central and(South) Eastern European Languages, pages 31?40,Valetta, Malta.
May.Carlos Ramisch, Aline Villavicencio, and ChristianBoitet.
2010a.
Multiword expressions in the wild?the mwetoolkit comes in handy.
In Proc.
of the 23rdCOLING (COLING 2010) ?
Demonstrations, pages57?60, Beijing, China, Aug.
The Coling 2010 Orga-nizing Committee.Carlos Ramisch, Aline Villavicencio, and ChristianBoitet.
2010b.
mwetoolkit: a framework for multi-word expression identification.
In Proc.
of the SeventhLREC (LREC 2010), Malta, May.
ELRA.Carlos Ramisch, Aline Villavicencio, and ChristianBoitet.
2010c.
Web-based and combined languagemodels: a case study on noun compound identification.In Proc.
of the 23rd COLING (COLING 2010), pages1041?1049, Beijing, China, Aug.
The Coling 2010 Or-ganizing Committee.Pavel Rychly?
and Pavel Smrz.
2004.
Manatee, bonitoand word sketches for czech.
In Proceedings ofthe Second International Conference on Corpus Lin-guisitcs, pages 124?131, Saint-Petersburg, Russia.Ivan Sag, Timothy Baldwin, Francis Bond, Ann Copes-take, and Dan Flickinger.
2002.
Multiword expres-sions: A pain in the neck for NLP.
In Proc.
ofthe 3rd CICLing (CICLing-2002), volume 2276/2010of LNCS, pages 1?15, Mexico City, Mexico, Feb.Springer.136
