COORDINAT ION IN UNIF ICAT ION-BASED GRAMMARSRichard  P. CooperDepar tment  of Psycho logyUnivers i ty College LondonLondon WC1E 6BT,  U.K.JANET: ucjtrrc@ucl.ac.ukABSTRACTWithin unification-based grammar formalisms,providing a treatment of cross-categorial coor-dination is problematic, and most current solu-tions either over-generate or under-generate.
Inthis paper we consider an approach to coordi-nation involving "composite" feature structures,which describe coordinate phrases, and presentthe augmentation to the logic of feature struc-tures required to admit such feature structures.This augmentation i volves the addition of twoconnectives, composite conjunction and compos-ite disjunction, which interact to allow cross-categorial coordination data to be captured ex-actly.
The connectives are initially considered tofunction only in the domain of atomic values, be-fore their domain of application is extended tocover complex feature structures.
Satisfiabilityconditions for the connectives in terms of deter-ministic finite state automata re given, both forthe atomic case and for the more complex case.Finally, the Prolog implementation f the connec-tives is discussed, and it is illustrated how, in theatomic case, and with the use of the f reeze /2predicate of second generation Prologs, the con-nectives may be implemented.The Prob lemGiven a modern unification-based grammar,such as HPSG, or PATR/FUG-styIe grammars,where feature structure descriptions are associ-ated with the constituents of the grammar, andunification is used to build the descriptions ofconstituents from those of their subconstituents,providing a treatment of coordination, especiallycross-categorial coordination, is problematic.
Itis well known that coordination is not restrictedto like categories (see (1)), so it is too restric-tive to require that the syntactic category of acoordinate phrase be just the unification of thesyntactic ategories of the conjuncts.
Indeed, thedata suggest hat the syntactic ategories of theconjuncts need not unify.
(1) a. Tigger became famous and a com-plete snob.b.
Tigger is a large bouncy kitten andproud of it.Furthermore, it is only possible to coordinatecertain phrases within certain syntactic ontexts.Whilst the examples in (1) are grammatical, thosein (2) are not, although the same constituents arecoordinated in each case.
(2) a.
*Famous and a complete snob chasedFido.b.
*A large bouncy kitten and proud ofit likes Tom.The difference between the examples in (1) and(2) is the syntactic ontext in which the coordi-nated phrase appears.
The relevant generalisa-tion, made by Sag et al (1985) with respect oGPSG, is that constituents may coordinate if andonly if the description of each constituent unifieswith the relevant description in the grammar ulewhich licenses the phrase containing the coordi-nate structure.
Example (la) is grammatical be-cause the phrase structure rule which licenses theconstituent became famous and a complete snobrequires that famous and a complete snob unifywith the partial description of the object sub-categorised for by became, and the descriptionsof each of the conjuncts, famous and a completesnob, actually do unify with that partial descrip-tion: became requires that its object be "either anNP or an AP", and each of famous and a com-plete snob is "either an NP or an AP".
(lb) isgrammatical for analogous reasons, though is isless fussy about its object, also allowing PPs andpredicative VPs to fill the position.
(2a) is un-grammatical as chased requires that its subjectbe a noun phrase.
Whilst this is true of a com.167 -plete snob, it is not true of famous, so the descrip-tion of famous does not unify with the descrip-tion which chase requires of its subject.
(2b) isungrammatical for similar reasons.Two Approaches  to a Solut ionTwo approaches to this problem are immediate.Firstly, we may try to capture the intuition thateach conjunct must unify with the requirementsof the appropriate grammar ule by generalisingall grammar rules to allow for coordinated phrasesin all positions.
This general approach followsthat of Shieber (1989), and involves the use ofsemi-unification.
Note that this does not involvea grammar ule licensing coordinate constituentssuch as a and fl: following this approach c~ and/~ can never be a constituent in its own right.An alternate approach is to preserve the orig-inal grammar ules, but generalise the notion ofsyntactic ategory to license composite categories- -  categories built from other categories - -  andintroduce a rule licensing coordinate structureswhich have such composite syntactic ategories.That is, we introduce a grammar ule such thatif a and ~ are constituents, then a and ~ is alsoa constituent, and the syntactic ategory of thisconstituent is a composite of the syntactic ate-gories of a and ft.Within a unification-based approach, this gen-eralisation of syntactic ategory requires a gener-alisation of the logic of feature structures, withan associated generalisation of unification.
Thisis the approach which we adopt in this paper.One of the consequences of this approadl is thatfor (almost) any constituents a and fl, the gram-mar should also license the string a and fl asa constituent, irrespective of whether there axeany contexts in which this constituent may occur.Thus our grammar might admit in the garden andchases Fido as a constituent, hough there maybe no contexts which license such a constituent.Our approach differs from other approachesto cross-categorial coordination (such as thoseemploying generalisation, or that of Proudiau& Goddeau (1987)) which have been suggestedin the unification grammar literature in thatit involves a real augmentation of the logic offeature structures.
Other approaches which donot involve this augmentation tend to ovel-generate (the approaches employing general.isation) or under-generate (the approach ofProudian & Goddeau).Generalisation over-generates because in gen-eralisation conflicting values are ignored.
In theease of became, assuming that we analyse becameas requiring an object whose description unifieswith \[CATEGORy NP V AP\], generaiisation wouldlicense (la), as well as both of the examples in (3).
(3) a.
*Tigger became famous and in thegarden.b.
*Tigger became a complete snob andin the garden.This is because the generalisation of the de-scriptions of the two conjuncts (\[CATEGORY AP\]and \[CATEGORY PP\] in the case of (3a) and \[CAT-gooltv NP\] and \[CATEGORY PP\] in the case of(3b)) is in each case \[CATEGORY _l_\], which uni-fies with the \[CATEGORY NP V AP\] requirementof became.It is not clear how the approach of Proudian &Goddeau could be applied to the became xample:the disjunctive :subcategorisation requirements ofbecame cannotbe treated within their approach.For further details see Cooper (1990).Compos i te  Atomic  ValuesFollowing Kasper & Rounds (1990), and ear-lier work by the same authors (Rounds & Kasper(1986) and Kasper & Rounds (1986)), we adopta logical approach to feature structures via anequational logic.
The domain of well-formed for-mulae is defined inductively in terms of a set A ofatomic values and a set L of labels or attributes.These formulae are interpreted as descriptions ofdeterministic finite state automata.In the formulation of Kasper & Rounds, theseautomata have atomic values assigned to (someof) their terminal states.
A simplifed reading ofthe coordination data suggests that these valuesneed not be atomic, and that there is structureon this domain of "atomic" values.
To model thisstructure we introduce an operator "~" ,  whichwe term composite conjunction, such that if a and\]~ are atomic values, then a ,~/~ is also an atomicValue.
Informally, if a large bouncy kitten is de-scribed by the pair \[CATEGORY NP\] and proud ofit is described by the pair \[CATEGORY AP\], thenany coordination of those constituents, uch asneither a large bouncy kitten nor proud of it willbe described by the pair \[CATEGORY NP ~ AP\].Before discussing satisfiability, we considersome of the properties of ~ :- 168  -?
^ is symmetric: a noun phrase coordinatedwith an adjectival phrase is of the same cate-gory as an adjectival phrase coordinated witha noun phrase.
Thus for all atomic values aand/~, we require?
^ is associative: in constructions involv-ing more than two conjuncts the category ofthe coordinate phrase is independent of thebracketing.
Hence for all atomic values a,/~and % we require^t =?
^ is idempotent: the conjunction of two (ormore) constituents of category x is still ofcategory x: Hence for all atomic values a,we requireThese properties exactly correspond to the prop-erties required of an operator on finite sets.
Forfull generality we thus take ^  to be an operatoron finite subsets of atomic values rather than abinary operator satisfying the above conditions,but for simplicity use the usual infix notation forthe binary case.Given one further requirement, hat for any a(and hence that a^a = ^ {a}) the use of an op-erator on sets directly reflects all of the aboveproperties:= =-^-= ^{.
}Given this structure on the domain of atomicvalues, we restate the satisfiability require-ments.
We deal in terms of deterministic finitestate automata (DFSAS) specified as six-tuples,(Q, q0, L, 5, A, lr), where?
Q is a set of atoms known as states,:?
q0 is a particular element of Q known as thestart state,?
L is a set of atoms known as labels,?
6 is a partial function from \[Q x L\] to Qknown as the transition function,?
A is a set of atoms, and?
~r is a function from final states (those statesfrom which according to/f there are no tran-sitions) to A.To incorporate conjunctive composite valueswe introduce structure on A, requiring that forall finite subsets X of A, ^ X is in A. Satisfiabil-ity of formulae involving composite conjunctionis defined as follows:?
-4~ ~{ax, .
.
.
.
a,~}iff .4=(Q,qo, L 6,A, tr)~ where 6(q0,/) is undefined for each I in L anda'(qo) -" ^ {al,..., a,~}.
1This is really just the same clause as for all atomicvalues:?
.4 ~ aiff .A = (Q, qo,L,6,A,~r) where ~(q0,1)is undefined for each 1 in L and ~r(q0) - a.As such nothing has really changed yet, thoughnote that by an "atomic value" now we mean anelement of the domain A.
The structure whichwe have introduced on A means that strictlyspeaking these values are not atomic.
They are,however, "atomic" in the feature structure sense:they have no attributes.The real trick in handling composite conjunc-tive formulae correctly, however, comes in thetreatment of disjunction.
We introduce to thesyntax a further connective ~,  composite dis-junction.
As the name suggests, this is the ana.logue of disjunction in the domain of compositevalues.
Like standard disjunction v exists onlyin the syntax, and not in the semantics.
For sat-isfiability we have:?
.4 ~ (aV3)  where a , /~EA i f fA~a or:More generally:?
.4 ~ ~& where ~CA and 4~ is finite iff.4 ~ ~ ~' for some subset (I)' of 4).With this connective, disjunctive subcategori-sation requirements may be replaced with com-posite disjunctive requirements.
The intuition be-hind this modifcation stems from the fact thatif a constituent has a disjunctive subcategorisa-ti0n requirement, hen that requirement can bemet by any of the disjuncts, or the compositeof  those disjuncts.
To illustrate this reconsider1For aimplidty we ignore connectivity ofD~Xs.
If con-nectivity is to be  included in the definitions, then in thiscase Q must  he  the s ing leton {qo}.- 169  -the example in (la).
Originally the subcategori-sation requirements of became might have beenstated with the disjunctive specification \[CAT~.-GORY NP V AP\].
This could be satisfied by eitheran NP or an AP, but not by a conjunctive com-posite composed of an NP and an AP, i.e., not bythe result of conjoining an NP and an AP.
To al-low this we respecify the requirements on the sub-categorised for object as \[CATEGORY NP~tAP\].This requirement may be legitimately met by ei-ther an NP or an AP or a conjunctive compositeNP~AP.Compos i te  FeatureS t ructuresThis use of an algebra of atomic values allowscomposites only to be formed at the atomic level.That  is, whilst we may form a ,'~/3 for a, f~ atomic,we may not form a ~/3 where a,/3 are non-atomicfeature structures.
However, such composites doappear to be useful, if not necessary.
In par-ticular, in an HesG-like theory, the appropriatething to do in the case of coordinate structuresseems to be to form the composite of the HEADfeatures of all conjuncts.
The above approachto composite atoms does not immediately gen-eralise to allow composite feature structures.
Inparticular, whilst the intuitive behaviour of theconnectives should remain as above, the seman-tic domain must be revised to allow a satisfactoryrendering of satisfiability.With regard to syntax we revert back to anunstructured omain A of atoms but augmentthe system of Kasper & Rounds (1990) with twoclauses licensing composite formulae:?
A & is a valid formula if q) is a finite set, eachelement of which is a valid formula;e ~ (I) is a valid formula if (I) is a finite set, eachelement of which is a valid formula.The generalisation of satisfiability holds forcomposite disjunction:?
.A ~ ~4 & iff .A ~ ,'~ 4 '  for some subset (I)' of(I'.We must alter the semantic domain, the domainof deterministic finite state automata, however,to allow a sensible rendering of satisfaction ofcomposite conjunctive formulae - -  we need some-thing like composite states to replace the compos-ite atomic values of the preceding section.In giving a semantics for ~ we take advantageof the equivalence of ,'~ {a} and a.
We begin bygeneralising the notion of a deterministic finitestate automaton such that the transition functionmaps states to sets of states:A generalised eterministic finite state automa-ton (GDFSA) is a tuple (Q, qo, L, 6,A, 7r), where?
Q is a set of atoms known as states,?
qoEPow(Q) is a distinguished set of statesknown as the start state set,?
L is a set of atoms known as labels,?
6 is a partial function from \[Q x L\] toPow(Q),?
A is a set of atoms, and?
~ is a partial assignment of atoms to finalstates.Any DFSA ,A "-- (Q, qo,L,~f,A,~) has a corre-sponding ?DFSA .A' given by (Q, {q0}, L, 6', A, It)where 6'(q, I) ----{6(q, l)}.Given a GDFSA .4 we define satisfiability ofconjunctive, disjunctive and atomic formulae asusual.
There is a slight differences in satisfiabil-ity of path equations:?
.A ~ l : ~b: iff .Aft is defined and .A/!
~ ~,where if ~4: = (Q, {q}, L, 6, A, ~), then .Aft =(Q, 6(q, 0, L, 6, A,This clause has been altered to enforce the re-quirement that  q0 be a singleton, and that 6 mapsthis single element o a set.
2The extensions for V and ~ are:?
.A ~ V ?
iff .A ~ ,~ (I) I for some subset (I)~ of4~ (as above).?
.A ~ ~ iff for each ~b E 4~, there exists aq' E q0 such that (Q,{q'},L,6,A,7 0 ~ ~.Note that in the case of ?
a singleton, this lastclause reduces to .A ~ ,'~ {~} iff ?4 ~ d.The reason why the satisfiability clauses forthese connectives are so simple resides principallyin the equivalence of ,~ {a} and a.
We cannot fol-low this approach in giving a semantics for stan-dard set valued attributes because in the case ofsets we want {~} and ~ to be distinct.2Again we are ignoring connectivity.- \ ]70  -Properties of CompositesThe properties of composite feature structuresand the interaction of ~ and ~ may be brieflysummarised as follows:?
Disjunctive composite feature structures area syntactic onstruction.
Like disjunctivefeature structures they exist in the languagebut have no direct correlation with objectsin the world being modelled.
* Conjunctive composite feature structures de-scribe composite objects which do exist inthe world being modelled.
* A disjunctive composite feature structure de-scribes an object just in ease one of the dis-juncts describes the object, or it describes acomposite object.?
A disjunctive composite f ature structure de-scribes a composite object just in case eachobject in the composite is described by oneof the disjuncts.?
A conjunctive composite feature structuredescribes an object just in case that objectis a composite object consisting of objectswhich are described by each of the descrip-tions making up the conjunctive compositefeature structure.The crucial point here is that conjunctivecomposite objects exist in the described worldwhereas disjunctive composite objects do not.An ExampleTo illustrate in detail the operation of compositeswe return to the example of (la).
In an nPSG-likeformalism (see Pollard & Sag (1987)) employingcomposites, the object subcategorised for by be-came would be required to satisfy:I SYNILO C I HEAD L SUBCATAccording to our satisfiability clauses above,this may be satisfied by:?
an AP such as famous, having descriptionPHONSYN\[LOC HEADIMAJSUBCAT?
an NP such as a complete snob, having de-scriptionPHOt~ a complete snob \]s .
.cA ,  <)jj?
or ~a AP  ~ NP  such as famous and a com-plete snob, having description ssPHON famous and a complete snob "The subcategorlsation requirements may not,however, by satisfied by, for example, aPP, or anyconjunctive composite containing a PP.
Hence theexamples in (3) are not Mmitted.Implementation IssuesThe problems of implementing a system involv-ing composites really stem fromtheir equirementfor a proper implementation f disjunction.
Im-plementation may be approached by adopting astrict division between the objects of the languageand the objects of the described world.
Accord-ing to this approach, and in Prolog, Prolog terms~re taken to correspond to the objects in the se-mantic domain, with Prolog clauses being inter-preted much as in the syntax of an equationallogic, as constraints on those terms.
Conjunctiveconstraints correspond to unification.
The for-mation of conjunctive composites i also no prob-lem: such objects exist in the semantic domain, sostructured terms may be constructed whose sub-terms are the elements of the composite.
Thusif we implement the composite connectives as bi-nary operators, * for ~ and + for ~, we mayform Prolog terms (A * B) corresponding tocon-junctive composites.
Disjunction, and the use ofdisjunctive composites, cannot, however, be im-plemented in the same way.
The problem withdisjunction is that we cannot normally be surewhich disjunct is appropriate, and a term of theform (A + B) will not unify with the term A, asis required by either form of disjunction.
Thefreeze/2 predicate of many second generationPrologs provides ome help here.
For standardaWe assume that the rule licensing coordinate struc-tures unifies all corresponding values (such as the vahiesfor each SUBCAT attribute) except for the values of theHEAD attributes.
The value of the HEAD attribute of thecoordinate structure is the composite of the values of theHEAD attribute of each conjunct.171 -disjunction, we might augment feature structureunification clauses (using <=> to represent theunification operator and \ / to  represent s andarddisjunction) with special clauses uch as:A <=> CA1 \1  A2) :-freeze(A, ((A <=> hl) ; .
(A <=> A2) ) )Similarly for composite disjunction, we mightaugment the unification clauses with:A <=> (AI + A2) :-freeze(A, ((A <--> A1);(A <=> A2);CA <=) (A1 * A2) ) ) )The idea is that the ~reeze/2 predicate de-lays the evaluation of disjunctive constraints un-til the relevant structure is sufficiently instanti-ated.
Unfortunately, "sufficiently instantiated"here means that it is nonvar.
Only in the caseof atoms is this normally sufficient.
Thus theabove approach is suitable for the implementa-tion of composites at the level of atoms, but notsuitable in the wider domain of composite featurestructures.Conc lud ing  RemarksIn giving a treatment of coordination, and inparticular cross-categorial coordination, within aunification-based grammar formalism we have in-troduced composite feature structures which de-scribe composite objects.
A sharp distinction isdrawn between syntax and semantics: in the se-mantic domain there is only one variety of com-posite object, but in the syntactic domain thereare two forms of composite description, a con-junctive composite description and a disjunctivecomposite description.
Satisfiability conditionsare given for the connectives in terms of a gener-alised notion of deterministic finite state automa-ton.
Some issues which arise in the Prolog imple-mentation of the connectives are also discussed.REFERENCESCooper, Richard.
Classification-Based PhraseStructure Grammar: an Extended RevisedVersion of :HPSG.
Ph.D. Thesis, Universityof Edinburgh.
1990.Kasper, Robert & William Rounds.
A LogicalSemantics for Feature Structures.
In Pro-ceedings of the ~4 th ACL, 1986, 257-265.Kasper, Robert & William Rounds.
The Logicof Unification in Grammar.
Linguistics andPhilosophy, 13, 1990, 35-58.Pollard, Carl & Ivan Sag.
Information-BasedSyntax and Semantics, Volume 1: Funda-mentals.
1987, CSLI, Stanford.Proudian, Derek & David Goddeau.
Constitu-ent Coordination in HPSG.
CSLI Report#CSLI-87-97, 1987.Rounds, William & Robert Kasper.
A CompleteLogical Calculus for Record Structures Rep-resenting Linguistic Information.
In Proceed-ings of the 1 ?t IEEE Symposium on Logic inComputer Science, 1986, 38-43.Sag, Ivan, Gerald Gazdar, Thomas Wasow andSteven Weisler.
Coordination and How toDistinguish Categories.
Natural Languageand Linguistic Theory, 3, 1985, 117-171.Shieber, Stuart.
Parsing and Type Inference forNatural and Computer Languages.
Ph.D.Thesis, Stanford University, 1989.ACKNOWLEDGEMENTSThis research was carried out at the Cen-tre for Cognitive Science, Edinburgh, underCommonwealth Scholarship and Fellowship PlanAU0027.
I am grateful to Robin Cooper, WilliamRounds and Jerry Seligman for discussions con-cerning this work, as well as to two :anonymousreferees for their comments on an earlier versionof this paper.
All errors remain, of course, myown.- 172 -
