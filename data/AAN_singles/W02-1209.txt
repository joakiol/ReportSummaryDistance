Decomposition for ISO/IEC 10646 Ideographic CharactersLU Qin, CHAN Shiu Tong, LI Yin, LI Ngai LingDepartment of Computing, The Hong Kong Polytechnic University, Hung Hom, Hong Kong{csluqin, cstchan, csyinli, csnlli}@comp.polyu.edu.hkAbstractIdeograph characters are often formed by somesmaller functional units, which we call charactercomponents.
These character components can beideograph radicals, ideographs proper, or somepure components which must be used withothers to form characters.
Decomposition ofideographs can be used in many applications.
Itis particularly important in the study of Chinesecharacter formation, phonetics and semantics.However, the way a character is decomposeddepends on the definition of components as wellas the decomposition rules.
The 12 IdeographicDescription Characters (IDCs) introduced in ISO10646 are designed to describe characters usingcomponents.
The Hong Kong SAR Governmentrecently published two sets of glyph standardsfor ISO10646 characters.
The standards, beingthe first of its kind, make use of characterdecomposition to specify a character glyph usingits components.
In this paper, we will firstintroduce the IDCs and how they can be usedwith components to describe two dimensionalideograph characters in a linear fashion.
Next wewill briefly discuss the basic references andcharacter decomposition rules.
We will thendescribe the data structure and algorithms todecompose Chinese characters into componentsand, vice versa.
We have also implemented ourdatabase and algorithms as an internetapplication, called  the Chinese CharacterSearch System, available at websitehttp://www.iso10646hk.net/.
With this tool,people can easily search characters andcomponents in ISO 10646.IntroductionISO/IEC 10646 (ISO 10646) in its currentversion, contains more than 27,000 Hancharacters, or ideograph characters as it is called,in its basic multilingual plane and another40,000 in the second plane[1-2].
The completeset of ideograph repertoire includes Hancharacters in all national/regional standards aswell as all characters from the Kang XiDictionary( ) and other majorreferences.
In almost all the current encodingsystems including ISO 10646 and Unicode, eachHan character is treated as a separate uniquesymbol and given a separate code point.
Thissingle character encoding method has someserious drawbacks.
Consider most of thealphabet-based languages, such as English, eventhough new words are created quite frequently,the alphabet itself is quite stable.
Thus the newlyadopted words do not have any impact oncoding standards.
When new Han characters arecreated, they must be assigned a new code point,thus all codesets supporting Han characters mustleave space for extension.
As there is no formalrule to limit the formation of new Han characters,the standardization process for code pointassignment can be potentially endless.
On theother hand, new Han characters are almostalways be created using some existing charactercomponents which can be existing radicals,characters proper, or pure components which arenot used alone as characters.
If we can use codedcomponents to describe a new character, we canpotentially eliminate the standardization process.Han characters can be considered as a twodimensional encoding of components.
The sameset of components when used in differentrelative positions can form different characters.For example the two components  andcan form two different characters:depending on the relative positions of the twocomponents.
However, the current internal codepoint assignments in no way can reveal therelationship of the these characters with respectto their component characters.
Because of thelimitation of the encoding system, people haveto put a lot of efforts to develop different inputmethods.
Searching for characters with similarshapes are also quite difficult.
The 12Ideographic Description Characters (IDCs) wereintroduced in ISO 10646 in the code range of2FF0 - 2FFB to describe the relative positions ofcomponents as shown in Table 1.
Each IDCsymbol shows a typical ideograph charactercomposition structure.
For example,(U+2FF0) indicates that a character is formed bytwo components, one on the left-hand side andone on the right-hand side.
All IDCs exceptU+2FF2 and U+2FF3 have cardinality of twobecause the decomposition requires twocomponents only.
Details of these symbols canbe found in Annex F of ISO 10646 2nd Edition[1] and in John Jenkens' report [3].SmblCodepointName in ISO 10646Cardi-nalityLabel2FF0 IDC LEFT TO RIGHT IDC2 A2FF1 IDC ABOVE TO BELOWIDC2 B2FF2 IDC LEFT TO MIDDLE AND RIGHTIDC3 K2FF3 IDC ABOVE TO MIDDLE ANDBELOWIDC3 L2FF4 IDC FULL SURROUNDIDC2 I2FF5 IDC SURROUND FROM ABOVEIDC2 F2FF6 IDC SURROUND FROM BELOWIDC2 G2FF7 IDC SURROUND FROM LEFTIDC2 H2FF8 IDC SURROUND FROM UPPER LEFTIDC2 D2FF9 IDC SURROUND FROM UPPER RIGHTIDC2 C2FFA IDC SURROUND FROM LOWER LEFTIDC2 E2FFB IDC OVERLAID IDC2 JTable 1.
The 12 Ideograph DescriptionCharactersThe IDCs can be used to describe not onlyunencoded characters, but also coded charactersto reveal their internal structures andrelationships among components.
Thusapplications for using these structural symbolscan be quite useful.
In fact the most commonapplications are in electronic dictionaries andon-line education [4].In this paper, however, we introduce a newapplication where the IDCs and components areused in the standardization of Han characterglyphs.
As we all know that ISO 10646 is acharacter standard, which allows different glyphstyles for the same character and differentregions can develop different glyph styles to suittheir own needs.
The ideographic repertoire inISO 10646 has a so called Horizontal Extension,where each coded ideograph character is listedunder the respective CJKV columns.
The glyphof each character can be different under differentcolumns because ISO 10646 is a characterstandard, not a glyph standard.
We normally callthese different glyphs as variants.
For example,the character bone   can take three differentforms(variants):HK Mainland TaiwanEven with the ISO 10646 horizontal extensions,people in Hong Kong still get confused as towhich styles to use, as only some characters inthe Hong Kong style deviate from both Gcolumn(mainland China) and T column(Taiwan).Consequently, the Hong Kong SAR Governmenthas decided to  develop the Hong Kong glyphstandards for ISO 10646 which can serve as areference guide for font vendors whendeveloping products for Hong Kong.
Thestandards, being the first of its kind, makes usesof character decomposition to specify acharacter glyph using its components.The rest of the paper is organized as follows.Section 1 gives the rationale for the use ofcharacter components, the references anddecomposition rules.
Section 2 describes thedata structure and algorithms to decomposeChinese characters into components and, viceversa.
Section 3 discusses performanceconsiderations and Section 4 is the conclusion.1.
Character Decomposition RulesAt the beginning of the glyph standardization,one important requirement was agreed by theworking group, namely, extensibility.
That is, thespecifications should be easily extended byadding more characters into later versions of theISO/IEC 10646, which we refer to as the newcharacters.
The specifications should also notcontain any internal inconsistency, orinconsistency in relation to the ISO/IEC 10646?ssource standards.
In order to satisfy bothconsistency requirements, we have concludedthat listing every character in ISO/IEC 10646 isnot desirable.
Instead, we decided to produce thespecifications by giving the correct glyphs ofcharacter components based on a commonassumption that if a component or a character iswritten in a certain way, all other charactersusing it as a component should also write it inthe same way.
For example if the character?bone?
(U+9AA8) is written in a certainway, all characters using ?bone?
as a component,such as ?
?
(U+6ED1) and ?
?
(U+9ABC),should have the bone ?
?
component followthe same style.
In this way, the specification canbe extended very easily for all new charactersusing bone ?
?
as a component.
In other words,we can assume that component glyphs arestandardized for general usage.
By usingcomponents to describe a character, we can alsoavoid inconsistency.
That is, by avoid listing allcharacters with bone, ?
?
as a component, wedo not need to be concerned about producinginconsistent glyphs in the specifications.
This isimportant because the working group does nothave any font vendor as a member, because ofan implicit rule that was specified by theGovernment of the HKSAR to avoid anypotential conflict of interest.
The glyph style ismostly based on the book published by the HongKong Institute of Education in 2000[5]In principle, for producing glyph specifications,we have to produce a concrete, minimal, andunique list of basic components.
In order toachieve this, we need to have a set of rules todecompose the characters systematically.
In ourwork, we have used the GF 3001-1997 [6] as ourmajor component reference.
The following is abrief description of the rules.
(For a detaileddescription, please refer to the paper ?The HongKong Glyph Specifications for ISO 10646'sIdeographic Characters?[7].)?
Use GF 3001-1997 specifications as thebasis to construct a set of primarycomponents.
Components for simplifiedChinese are removed.
The shapes aremodified to match the glyph style forHong Kong.?
Characters are decomposed intocomponents according to their structureand etymological origin.?
In some cases, an ?ad-hoc?decomposition occurs if theetymological origin and its glyph shapeare not consistent, or the etymologicalorigin is not clear, or to avoid definingadditional components.?
Characters are not decomposed if itappears in GF 3001-1997 as acomponent.?
Detached parts can be furtherdecomposed.?
Merely touched parts that do not haveoverlapping or crossing can bedecomposed.?
In some cases, we do not decomposesome components to prevent thecomponents from getting too small.?
In some cases, a single component willbe distinguished as two differentcomponents.
This is the concept ofvariant or related component.This set of rules, together with 644 basiccomponents and the set of intermediatecomponents defined, enables us to decomposeChinese characters that appear in the firstversion ISO 10646 with 20,902 characters, Ext.A in the second version of ISO 10646[1] andHong Kong Suplementary Character Set [8-9].The 644 basic components play a very importantrole because they form all the Chinese charactersin our scope.In order to describe the position relationshipamongst components in a character, we haveused the 12 Ideographic Description Characters(IDC) in ISO/IEC 10646 Part1:2000 in the rangefrom 2FF0 to 2FFB, and defined an extra IDC?M?
(which indicates that a particularcomponent is a basic component and will not befurther decomposed), as shown in Table 1.
Everycharacter can be decomposed into up to threecomponents depending on the cardinality of theIDC used.Each Character is decomposed according to thefollowing definition:Character = IDC2 CC(1)  CC(2)| IDC3 CC(1) CC(2) CC(3)| MwhereIDC2 ?
(2FF0 ?
2FFB)CC(i)  is a set of character componentsand i indicates its position in thesequenceM is a special symbol indicatingCharacter will not be furtherdecomposedBy our definition, a CC can be formed by threesubsets: (1) coded radicals, (2) codedcomponents and ideographs proper, and (3)intermediate components that are not coded inISO 10646.
The intermediate components aremaintained by our system only.
Thedecomposition result is stored in the database.Conceptually, every entry in the database can betreated as a Chinese component, having a datastructure described above.2.
Decomposition/Formation AlgorithmsAs mentioned above, the decompositiondatabase only gives information on how acharacter is decomposed in a minimal way.However, some characters have nestedcomponents.
For instance, the character ??
?can be decomposed into two components: ??
?and ??
?, but ???
being a character can befurther decomposed into two components.
Inorder to handle nesting and finding componentsto the most elementary form(no furtherdecomposition), we have defined thedecomposition and formation algorithms.There are mainly two algorithms, one for thedecomposition of a character into a set ofcomponents(the algorithm is calledChar-to-Compnt) , another one for the formationof a set of characters from a component ( thealgorithm is called Compn-to-Charr).Let x be the seed (x = starting character forsearch);Stop = falseWHILE NOT  stop DOIF Struct_Symbol(CD[x]) = ?M?Stop = TrueELSELCmp ={ cc[x] ?
CC }ENDWHILEFigure 1.
Pseudo-code of ?Char-to-Compnt?Both algorithms are very similar.
Theyrecursively retrieve all characters/componentsappearing in the decomposition database byusing the characters/components themselves as aseed, but their directions of retrieval are oppositeto each other.
In the ?Char-to-Compnt?, thedecomposition goes from its current level down,one level at a time, until no more decompositioncan be done.
Figure 1 the pseudo code of thealgorithm for one level only and they can bedone recursively to find all components of acharacter.
Table 2 shows the entries related tothe character ???.
Notice that the number ofcomponents for ???
is not two, but 4 becauseone of the components ???
can be furtherdecomposed into two more components.Character IDC Comp1 Comp2 Comp3?
B ?
??
A ?
??
M?
M?
MTable 2.
Component Entries of character??
?On the other hand, the ?Compnt-to-Char?algorithm searches from its current level up untilno more character can be found using the currentcomponent.
Figure 2 shows the pseudo code ofthe upward search algorithm where x isconsidered the seed to start the search and thevariable contains all characters formed using thecurrent component x.Let x be the seed (x = starting component forsearch);Stop = falseChar_List ={ x}WHILE NOT  stop DOIF No Change to Char_ListStop = TrueELSEFOR each x in Char_ListChar_List = Char_List ?
{ Char[x]}ENDFORENDWHILEFigure 2.
Pseudo-code of ?Compnt-to-Char?Character IDC Comp1 Comp2 Comp3?
M?
B ?
??
A ?
??
A ?
??
A ?
?
?Table 3.
Example character entries ofcomponent ??
?Table 3 shows some of the search resultsinvolving the component  ???.
Note that theresult not only find the character ??
?, but alsothe characters using ???
as components as well.Further more, due to the fact that there are twoIDCs with cardinality of three, thedecomposition is not unique.
Based Hancharacters formation rules, some charactersshould be decomposed into two components firstbefore considering further decomposition.
Forinstance, ???
should be decomposed into ??
?and ???
whereas ???
should be decomposedinto ???
and ???.
However, for upwardsearch we certainly want the character ???
tobe found if the search component is ??
?.Therefore, in addition to using the most reasondecomposition at the first level, we alsomaintain different decompositions forapplications where character formation rule areless important.
In other words, we also providedcomposition and decompositions independent ofcertain particular character formal rules.
Againtaking the character ???
as an examples, itscomponents should not only be ???
and ??
?,but also  ??
?, ??
?, ???
as well as ???
and?
?.
In fact, in our system,  ??
?
isdecomposed into ??
?, ???
and ?
?
as shownin Table 4.
The ?Char-to-Compnt?
algorithmwill take the relative positions of thecomponents into consideration based on the IDCdefined in each entry to find other three possiblecomponents  ??
?, ???
and ???.
This canbe done because the combination of ???
and???
will form ???
; similarly ???
and ?
?will form ???
;, and ???
and ?
?will form???.
Note that in the first two cases of the ORclause, ???
and ???
will be identified.
In thethird case of the OR  clause, the character???
will be identified.
You may argue thevalidity of the third case of the OR clause, butfor the character ???
?, finding the component???
would be very important.Character IDC Comp1 Comp2 Comp3?
K ?
??
A ?
??
A ??
A ?Table 4 An example of handling a characterwith three componentsThe  basic principle of the algorithm, as shownin Figure 3,  is that if we see a character withan IDC {K} or {L}, or an IDC of a characterthat can be transformed to IDC {K} or {L}, wewill try to use its components to form characters.Let x be a Chinese component (x = cc);Let LCsub be the list of sub-components c;IF x[structure] = IDC{K} THENLCsub = c : c[structure] = IDC{A}ANDc[component(1)] = x[component(1)] ANDc[component(2)] = x[component(2)] orc[component(2)] = x[component(2)] ANDc[component(3)] = x[component(3)] orc[component(1)] = x[component(1)] ANDc[component(3)] = x[component(3)]END**the same algorithm works when x[structure] =IDC{L}, then the result c[structure] will becomeIDC{B}Figure 4 Pseudo-code for handling acharacter with three componentsLet s be the seed (s = cc);Let r be the result component;if s[structure] = IDC{A}if s[component(1)][ structure] = IDC{A} thenr = IDC{K} +s[component(1)][component(1)] +s[component(1)][component(2)] +s[component(2)]else if s[component(2)][ structure] = IDC{A}thenr = IDC{K} + s[component(1)] +s[component(2)][component(1)] +s[component(2)][component(2)]endend**this algorithm also works when s[structure] =IDC{B}, then the result structure will becomeIDC{L}Figure 4 Pseudo-code of For the Split StepIn many cases, we still want to maintain thecharacters in the right decomposition, e.g, todecompose them into two components first andthen further decompose if needed.
Take anothercharacter ???
as an example.
Suppose it is onlydecomposed into two components (???
and???).
This makes the search more complex.
Inorder to simplify the search, we need to gothrough an internal step which we call the SplitStep to decompose the character into threecomponents before we allow for component tocharacter search.
The pseudo code for the SplitStep is shown in Figure 4.
The generated resultis shown in Table 5.Character IDC Comp1 Comp2 Comp3?
A ?
??
A ?
??
K ?
?
?Table 5.
An example Output of the Split StepFor some characters like ??
?, the Split Stepmust consider the component  ??
?
in themiddle as an insertion into the character ??
?.We use similar handling to decompose  ??
?into  ??
?, ???
and ??
?, with an IDC {K}.
Inorder to find a character with the component???
such as ???
, we need additional algorithmto locate components that are potentially beingsplit to the two sides with an inserted component.We try to decompose a component into twosub-components if their IDC is ?A?
or ?B?.Once we get the two sub-components, we try tomake different combinations to see if there areany characters with an IDC {K} or {L} thatcontain the two sub-components as shown inFigure 5.Let x be a Chinese character (x = cc);Let Clst be the list of results c;if x[structure] = IDC{A} thenClst = c : c[structure] = IDC{K} and((c[component(1)] = x[component(1)] andc[component(2)] = x[component(2)] ) or(c[component(2)] = x[component(1)] andc[component(3)] = x[component(2)]) or(c[component(1)] = x[component(1)] andc[component(3)] = x[component(2)]))end**this algorithm also works when x[structure] =IDC{B}, then the result structure will becomeIDC{L}Figure 5.
Pseudo-code of finding insertedcomponent3.
Performance EvaluationSince the algorithms have to do excessive searchfor many combinations in many levelsrecursively, performance becomes a veryimportant issue especially if we want to makethis for public access through the internet.However, since the decomposition is static, itdoes not need to be done in real time.
as thesearch doesn?t need to be done online, In otherwords, searching of the same data will alwaysgive the same result unless the decompositionrules or algorithms are changed.
Consequently,we built two pre-searched tables to store theresults of both ?Compnt-to-Char?
algorithm andthe ?Char-to-Compnt?algorithm.
Once we havethe pre-searched tables, we can totally avoid therecursive search.
Instead, the search result canbe directly retrieved in a single tuple.
Thisresults in much better performance both in termsof usage of CPU time and I/O usage.Character Pre-searched result?
?
?
?
?
?
??
?
?
?
?
??
?Table 6.
Examples of pre-searched results of?Cha-to-Compnt?AlgorithmCharacter Pre-searched result?
?
?
?
?
?
?
?
?
(total5481 characters)?
?
?
?
?
?
?
?
(total 44characters)?
?Table 7.
Examples of pre-searched results of?Component to Character?Table 6 and table 7 shows some samples of thepre-searched tables for the downward search andthe upward search, respectively.Although the advanced control algorithms canretrieve most Chinese characters correctly, theyalso return some components that do not makemuch sense.
For example, the character ???
hasa structure of IDC{B}, and components ??
?and ??
?.
However, when it is eventuallydecomposed into  ??
?, ???
and ???.
Usingthe algorithm ?Char-to-Compnt?, the component???
will also be returned, even though ???
hasno cognate relationship with the character ??
?.We can take into consideration of only a subsetof characters that can be split in characterformation, such as ???
and ???.
This way, theinsertion components will only be considered forthese characters.4.
ConclusionIn this paper, we focus on the algorithms ofcharacter decomposition and formation.
Theresults can be used for the standardization ofcomputer fonts, glyphs, or relevant languageresources.
We have implemented a ChineseCharacter Search System based on the result ofthis standardization work.
We can use this searchsystem to look for character decomposition orformation results.
The system comes with manyhandy and useful features.
It provides a lot ofuseful information on Chinese characters, suchas the code for various encodings, andpronunciations.
A stand-alone version is alsobuilt.
The actual implementation of thesealgorithms and of the database helps people toget information about Chinese characters veryquickly.
It further facilitates researchers?
work inrelated areas.
For more information on thesystem, please visit the websitehttp://www.iso10646hk.net.AcknowledgementThe project is partially supported by the HongKong SAR Government(Project code: ITFAF/212/99) and  the Hong Kong PolytechnicUniversity(Project Code: Z044).References[1] ISO/IEC, ?ISO/IEC 10646-1 InformationTechnology-Universal Multiple-OctetCoded Character Set - Part 1?, ISO/IEC,2000[2] ISO/IEC, ?ISO/IEC 10646-2 InformationTechnology-Universal Multiple-OctetCoded Character Set - Part 1?, ISO/IEC,2001[3] John Jenkins, "New Ideographs in Unicode3.0 and Beyond", Proceedings of the 15thInternational Unicode Conference C15,San Jose, California, Sept. 1-2, 1999[4] Dept.
of Education(Taiwan), ?Dictionaryof Chinese Character Variants Version 2?,Dept.
of Education, Taiwan, 2000[5] ??????
?, ???????
?, (????????
), ????????
, ?????
( LEE Hok-ming asChief Editor, Common CharacterGlyph Table 2nd Edition, Hong KongInstitute of Education, 2000)[6] GF3001-1997??????????????????
?????GB13000.1?????????
?, ??????????
?, 1997?
12?.
[7] Lu Qin, The Hong Kong GlyphSpecifications for ISO 10646?s IdeographicCharacters.
21st International UnicodeConference, Dublin, Ireland, May 2002[8] Hong Kong Special Administrative RegionGovernment, ?Hong Kong SupplementaryCharacter Set?, HKSARG, September 28,1999[9] Hong Kong Special Administrative RegionGovernment, ?Hong Kong SupplementaryCharacter Set ?
2001 ?
, HKSARG,December 31, 2001
