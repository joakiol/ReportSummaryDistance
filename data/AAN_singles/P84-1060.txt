LINGUISTICALLY MOTIVATED DESCRIPTIVE TERM SELECTIONK.
Sparck Jones and J.I.
Tait*Computer Laboratory, University of CambridgeCorn Exchange Street, Cambridge CB2 3QG, U.K.ABSTRACTA linguistically motivated approach to indexing,that is the provision of descriptive terms for textsof any kind, is presented and illustrated.
Theapproach is designed to achieve good, i.e.
accurateand flexible, indexing by identifying index termsources in the meaning representations built by apowerful general purpose analyser, and providing arange of text expressions constituting semantic andsyntactic variants for each term concept.
Indexing isseen as a legitimate form of shallow text processing,but one requiring serious semantically based languageprocessing, particularly to obtain well-foundedcomplex terms, which is the main objective of theproject described.
The type of indexing strategydescribed is further seen as having utility in arange of applications environments.I INDEXING NEEDSIndexing terms are required for a variety ofpurposes, in a variety of contexts.
Much effort hasgone into indexing, and more especially automaticindexing, for conventional document retrieval; but theextension of automation, e.g.
in the area of officesystems, implies a wider need for effective indexing,and preferably for effective automatic indexing.Providing index descriptions for access to documentsis not necessarily, moreover, a poor substitute forfully understanding documents and incorporating theircontents into knowledge bases.
Indexing has its ownproper function and hence utility, and can besuccessfully done without deep understanding of thetexts being processed.
Insofar as access to documentsis by way of an explicit textual representation of auser's information need, i.e.
a request, this has alsoto be indexed, and the retrieval problem is selectingrelevant documents when matching request and documentterm descriptions.Though retrieval experiments hitherto have shownthat better indexing (on some criterion ofdescriptive quality) does not lead to really largeimprovements in average retrieval performance,careful and sophisticated indexing, especially of thesearch request, does promote effective retrieval.Sophisticated indexing here means conceptuallydiscriminating, linguistically motivated indexing,i.e.
indexing in which terms are linguistically wellmotivated because they are accurate indicators ofcomplex concepts.
Though indexing concepts may in,Current address: Acorn Computers Ltd, Fulbourn Road,Cherry Hinton, Cambridge CBI 4JN, U.K. _This work was supported by the ~ritish LibraryResearch and Development Department.some cases be adequately expressed in single words,the concepts being indexed frequently have aninternal structure requiring expression as a so-called 'precoordinate' term, i.e.
a linguisticallywell-deflned multi-word unit.Earlier attempts to obtain such precoordinateterms automatically were not particularly successful,mainly because the text analysis procedures used wereprimarily syntactic, and even shallowly and crudelysyntactic.
Further, adopting source text units asterms, when they are only mininmally characterised,limits indexing to one particular expression of theunderlying concept, and does not allow foralternatives: requests and documents may thereforenot match.
(Stemming helps somewhat but, for example,does not change word order.
)The research reported below was thus designed totest a more radical approach to indexing, using an AI-type language analyser exploiting a powerfulsyntactico-semantic apparatus to analyse texts, andspecifically request texts; a term extractor toidentify indexing concepts in the resulting textmeaning representation and construct their semanticvariants; and a language generator to produce a rangeof alternative syntactic expressions for all theforms of each concept, constituting the terms variantsets for searching the document file.
The majoroperation is the identification of indexing concepts,or term sources, in text meaning representations.
Ifboth user requests and stored documents could beprocessed, there would be no need for lexicalexpressions of these concepts, since matching wouldbe conducted at the representational level (cf Hobbset al1982 or, earlier, Syntol (Bely et al1970)).However there are many reasons, stemming both from thecurrent state of automatic natural languageprocessing and from naked economics, why fulldocument processing is not feasible, though requestprocessing should be.
The generation of alternativetext expressions of concepts, for use in searchingstored texts, is therefore necessary.
We indeedbelieve that text searching is an important facilityfor many practical purposes.
The provision ofindexing descriptions is thus a direct operation onlyon requests, but the provision of alternative well-founded expressions of request concepts constitutesan indirect indexing of documents aimed at improvingrequest document matching.There would nevertheless appear to be a majorproblem with this type of application of AI language287analysers.
In general, successful 'deep' languageanalysis programs have been those working within verylimited domains; and the world of ordinary documentcollections, for example those consisting of tens orhundreds of thousands of scientific papers, is not solimited.
Programs like FRUMP (DeJong 1979), on theother hand, though less domain specialised, achieveonly partial text analysis.
They in any case, like'deep' analysers, imply an effort in providing ananalysis system which can hardly be envisaged forlanguage processing related to large bodies ofheterogenous text.The challenge for the project was thereforewhether sophisticated language analysis techniquescould be applied in a sufficiently discriminatingway, without backup from a large non-llnguisticknowledge base, given that only a partialinterpretation of texts is required.
The partialinterpretation must nevertheless be sufficient togenerate good, i.e.
accurate and significant, indexterms; and the important point is therefore that thepartial interpretation process has to be a flexibleone, driven bottom up from the given text rather thantop down by scripts or frames.
Thus the crucial issuewas whether the desired result could be obtainedthrough a powerful and rich enough general, i.e.
nondomain-specific, semantics.II REQUEST ANALYSISTo test the proposition that the desired resultcould be obtained, we exploited Boguraev's analyser(Boguraev and Sparck Jones, in press), which appliesprimitive-based semantic pattern matching inconjunction with conventional syntactic analysis, toobtain 8 request meaning representation in the formof a case labelled dependency tree relating wordsenses characterised by primitive formulae.
Thus aprimary objective was to see whether the type of wordand message meaning characterisatlon allowed by thegeneral semantic primitives used by the analysercould suffice for the interpretation of technicaltext for the purpose in hand.
There is an early limitto the refinement of lexical characterisation whichcan be achieved with about 1OO general-purposeprimitives like THING and WHERE for a vocabularycontaining words like "transistor", "oscillator" and"circuit"; and with semantic lexical entries forindividual word senses at the level of 'oscillator:THING', structural disambiguation of the sentence as awhole may be difficult to attain.
In this situation,the analyser is unlikely to be able to achievecomprehensive ambiguity resolution; but the projectbelief was that lower-level sentence components couldbe fairly unequivocally identified, which may beadequate for indexing, since it is not clear how farcomprehensive higher-level structural links should bereflected in terms.
A modest level of lexicalresolution may also be sufficient as long as sometrace of the input word is preserved to use for outputvariant generation (which may of course includesynonym generation).The fact that the semantic apparatus supportingBoguraev's analyser is rich and robust enough totolerate some 'degradation' or 'relaxation' was onereason for using this analyser.
The second was thenature of the meaning representations it delivers.The output case-labelled dependency tree provides aclear, semantically characterised representation ofthe essential propositional structure of the inputtext.
This should in principle facilitate theidentification of tree components as term sources,according to more or less comprehensive scopecriteria, as suggested by the needs of request-document matching.The third reason for adopting Boguraev's analyserwas the fact that it has been used for a concurrentproject on a query interpretation front end foraccessing formatted databases, and hence was viewedas an analyser capable of supporting an integratedinformation inquiry system.
The principle underlyingthe projects taken together was that it should berecognised that information systems consist of arange of different types of information source, whichit should be possible to reach from a single inputuser question.
That is, the user should be able toexpress an information need, and the system should beable to couch this in the different forms appropriateto seeking response items of different sorts from therange of available information source types.
Thus aquestion could be treated both as a query addressedto a formatted database, and as a request addressed toa document collection, without presuppositions as towhat type of information should be sought, in order tomaximise the chances of finding something germane.
Inother projects, e.g.
LUNAR (Woods et al1972), treatingquestions as document requests was either triggeredby specific words like "papers", or by a failure toprocess the question as a database query.
We regardthe treatment of the user's question in various stylesat once as a normal requirement of a true integratedinformation system.In the event, Boguraev's anal yser had to beextended significantly for the document retrievalproject, primarily to handle compound nouns.
These area very common feature of technical prose, so somemeans of processing them during analysis, and some wayof representing them in the analyser's output, isrequired, even if they cannot be fully interpretedwithout, for example, inference calling on pragmatic(domain) knowledge.
The necessarily somewhat minimalprocedure adopted was to represent compounds as astring of modifiers plus head noun without requiringan explicit bracketing or reconstruction of implicitsemantic relations.
(Sense selection on modifiersthus cannot in general be expected.)
In general, sucha strategy implies that little term variation can beachieved; however, as detailed belo~ some followsfrom limited semantic inference.The type of meaning representation provided by theanalyser for a typical request is illustrated (in asimplified form) in Figure la.III TERM EXTRACTIONFrom the indexing point of view, the most importantoperation is the selection of elements of theanalyser's output meaning representation(s) as termsources.
Subject to the way the representationdefines well-formed units, the criteria for termsource selection must stem ultimately from theempirical requirements mainly of request-documentmatching, but also, since index descriptions can haveother functions than pure matching, from therequirements for descriptions which are, for example,comprehensible and indicative to the quickly scanninghuman reader.
The particular requirements to be met288Request:GIVE HE INFORMATION ABOUT THE PRACTICAL CIRCUITDETAILS OF HIGH FREQUENCY OSCILLATORS USINGTRANSISTORSa) 18 analyses including (simplifled illustration):(clause...(V.o.I @@sKent...)(@@reclpient...) @@oSject...(@@mental object ...<n(detaill szgn(@@atttribu~e (trace (clause v agent)(clause(v (use1 use(@@agent (n (osclllatorl thing(##nmod (trace (clause v agent)(clause(v (be2 bel@@ag ent (n (frequencyl sign))) state ...high3kind~)) ~ ) )) )(@@object (n (transistorl thing)) ) )) )) )(##r~nod (trace (clause v agent)(clause(v (be2 be (@@agent (n (circuitl thing)))(@@state ...practical2 kind) )) )) ) ) > )))b) 10 term sources of scale 2 for this analysisincluding:(n (detaill sign(##nmod (((n (circuitl thing)))) )))((trace (clause v agent))(clause tel) ?
(type(v (usel use(@@agent (n (oscillator1 thing)))) )))((trace (clause v object))(clause (type rel)(v (use1 use(@@object (n ( t rans i s to r1  th ing) ) ) )  ) ) )c) semantic variants using inference for compoundnouns, selecting prepositional cases from17 possible:for 'circuit detail' in this analysis3 new variants:(n (detaill sign(@@abstract location (n (circuitl thing)))) )(n(detaill sign(@@mental oSJect (n (circuitl thing)))) )(n(detaill sign(@@attribute (n (circuitl thing)))) )d) 15 term search specification for the requestusing terms of scale 2, with compound nouninference: -variant set of 5 for 'frequency oscillator'including:"a frequency oscillator""frequency oscillators"variant set of 25 for 'circuit detail' interpretedas 'detail about circuit' including:"the details about the circuits""detail about circuits""details about a circuit"Figure 1.
Example request processingcan only be determined by extensive and onerousexperiment.
However some of the possibilities opencan be indicated here, since specific decisions had tobe made for the first, very small scale, tests we havealready conducted.Roughly speaking, the definition of term sourcesis a matter of scale, i.e.
of the larger or smallerscope of dependency tree connections.
At the surfacetext level this is reflected in (on average) largeror smaller word strings, corresponding to more or lesselaborately modified concepts, or more or lessextensively linked concepts.
Given the type ofpropositional structure defined by the analyser'sdependency trees, it was natural to define termsources by a scale count exploiting caseconstructions.
In the simplest case the scale count iseffectively applied to a verb and its case rolefiller nouns.
Thus a count of 3 takes a verb and anypair of its role-filling nouns, a count of 2 takes theverb and any one of its nouns, while a count of Itakes just verb or noun.
A structure with a verb andthree noun case fillers will therefore produce threescale 3 terms, three scale 2, and 4 scale I sources.Figure Ib shows sources of scale 2 extracted from thedependency structure representing the concept'oscillator use transistor' for the example request.It should be emphasised that some types oflinguistic construction, e.g.
states, are representedin a verb-based way, and that other dependency treestructures are handled in an analogous manner.Equally, the definition of scale count is in fact morecomplicated, to take account of modifiers on nounslike quantifiers.
Moreover an important part of theterm source selection process is the elimination of'unhelpful' parts of the sentence representation, forexample those derived from the input text string"Give me papers on".
This elimination is achieved by'stop structures' tied to individual word senses, andcan be quite discriminating, e.g.
distinguishingsignificant from non-significant uses of "paper".Term sources are then derived from the resulting'partial' sentence structures.
(In Figure la this isthe structure bounded by < >.
)Overall, the effect of the term source derivationprocedure is a list of source structures,representing propositions or subpropositions, whichoverlap through the presence of common individualconceptual elements, namely word senses.
It is indeedimportant that the indexing of a text is 'redundant'in this way.If this conceptual indexing were to be carried outon both requests and stored documents, such listswould be the base for searching and matching.
Thefragmentation characteristic of indexing suggeststhat considerable mileage could be got simply fromthe lists of extracted term sources, withoutextensive 'inferential' processing either to generateadditional sources or to support complex matching inthe style advocated by Hobbs et al However theobjectives of indexing are unlikely to be achieved byrestricting indexing concepts to the precise detailedforms they have in the analyaer's meaningrepresentation.
In general one is interested in theessential concept, rather than in its fine detail: forinstance, in most cases it is immaterial whethersingular or plural, definite or indefinite, apply tonominals.
Indexing only at the conceptual level wouldsimply throw such information away, to emerge with a'reduced' or 'normalised' version of the concept,though one which conveys more specific structuralinformation than the 'association' or 'coordination'ordinarily used in indexing.
However if searching isto be at the text level, proper bases for the textexpressions involved must be retained.
Moreover'paring down' representations may lead to the lack ofprecision in term characterisation which it is theaim of the whole enterprise to avoid, so analternative strategy, allowing for more control, isrequired.
The one we adopted was to define a set ofpermitted semantic variations, for example derivingplural and/or indefinite nominals from a given singledefinite construction.289Such semantic variants are easily obtained.Compound nouns present more interesting problems, andwe have adopted a semantic variant strategy for thesewhich may be described as embodying a very crude formof linguistic inference.
Variants on given compoundsare created by applying, in reverse, the semanticpatterns designed to interpret and attachprepositional p~rases in text input.
That is, if thesemantic formulae for a pair of nouns in a compoundsatisfy the requirements for linking these with some(sense of a) preposition, the preposition sense, whichembodies a case relationship, is supplied explicitly.Figure Ic shows some inferred variants for theexample request.
Clearly this technique (to bedescribed in detail in the full paper) could beextended to the linking of nouns in a compound byverbs.But further, indexing strategies involve more thanchoices of term source and semantic variant types.Indexing implies coverage of text content, and it mayin practice be the case that text content is not fullycovered if indexing is confined to terms of a certaintype, and specifically those of a more exigent, higherscale.
Thus an exclusive indexing strategy may berestricted in coverage, where a relaxed one acceptsterms of lower scale if ones of the preferred higherscale are not available, and so increases coverage.Moreover it may be desirable, to increase matchingchances, to index with an inclusive strategy, withsubcomponent terms of lower scale as well as theirparents of higher scale, treating subcomponents asvariants.
The relative merits of these alternativescan only be established by experiment.IV VARIANT EXPRESSIONMore importantly, indexing cannot in practice stopat the level of term sources and their semanticvariants, i.e.
operate with the components of textmeaning representations.
The volumes of material tobe scanned imply searching for request-documentmatches at the textual rather than the underlyingconceptual level.
This is not only a matter of thelimited capacity for full text (or even abstract)processing of current language processing systems.
Itcan be argued that text level scanning without propermeaning interpretation is a valid activity in its ownright, for example as a precursor to deeperprocessing.The final stage of request processing is thereforethe generation of text equivalents for the given termsources (i.e.
for all the variants of each source).This includes the generation of syntactic variants,exploiting further the power given by explicitdescriptions of linguistic constructs: thoughrelations between words are implicit in word stringspulled out of texts, they cannot be accessed toproduce alternative forms.
What constitutes asyntactic as opposed to a semantic variant isultimately arbitrary; in the implemented generator itincludes, for example, variations on aspect.
Thisgenerator, a replacement of Boguraev's original,builds a surface syntactic tree from a meaningrepresentation fragment, from which the output wordstring is derived.
The process includes the listing(if these are available) of lexical variants, i.e.words which are sense synonymous with the input ones.The final step in the production of the searchformulation for the input request is the packaging ofthe sets of variants derived from the request'sconstituent concepts into a Boolean expression, withthe variants in the set for each source linked by 'or'and the sets, representing terms, linked by 'and'.
Thisstage includes merging the results of alternativeanalyses of the input request.
Figure Id illustratessome of the text expressions of semantic andsyntactic variants for the example request.From the retrieval point of view, our tests havebeen very limited.
As noted, text searching isextremely costly, and requires a highly optimisedprogram.
Our initial experiment was therefore in thenature of a feasibility study, aimed at showing thatreal requests could be processed, and the output queryspecifications searched against real abstract texts.We matched 10 requests against 11429 abstracts, in thearea of electronics, using terms of scales 3, 2, and I,and also 2 with compound noun inference, and theexclusive strategy.
The strategies performedidentically, but it has to be said that otherwise theresults, especially for the higher scales, were notimpressive.
However, as retrieval testing over thepast twenty years has demonstrated, the requestsample is too small to support any valid performanceconclusions about the merits of the indexing methodsstudied: a much larger sample is needed.
Moreover muchmore work is needed on the best ways of forming searchspecifications from the mass of term materialavailable: this is currently fairly ad hoe.V CONCLUSIONThe work described represents a first study of thesystematic use of a powerful language processing toolfor indexing purposes.
It could in principle be usedto manipulate terms at the meaning representationlevel, which would have the advantage of permittingmore flexible matches between requests and documentsdiffering at the detailed text level (e.g.
"retrievalof information" and "retrieval of relevantinformation").
More practically, the indexing isextended to provide alternative text expressions ofindexing concepts, for text matching.
The claim forthe approach is that useful indexing can be achievedby general semantic rather than domain-specificknowledge, though much more testing, includng testswith different indexing applications, is needed.VI ACKNOWLEDGEMENTWe are grateful to Dr. B. K. Boguraev for his adviceand assistance throughout the project.VII REFERENCESBely, N. et al Procedures d'Analyse SemantiquesAppliquees a la Documentation Scientifique, Paris:Gauthier-Villars, 1970.Boguraev, B. and Sparck Jones, K. 'A natural languagefront end to databases with evaluative feedback' inNew Applications of Databases (ed Gardarin andGelenbe), London: Academic Press (in press).DeJong, G. Skimming Stories in Real Time, Report 158,Department of Computer Science, Yale University, 1979.Hobbs, J.R. et al 'Natural language access tostructured texts' in COLING 82 (ed Horecky),Amsterdam: North-Holland, 1982.Woods, W.A.
et al The LUNAR Sciences Natural LanguageInformation System, Report 2378, Bolt Beranek andNewman Inc., Cambridge MA, 1972.290
