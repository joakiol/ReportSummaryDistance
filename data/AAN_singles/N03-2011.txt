Rhetorical Parsing with Underspecification and ForestsThomas HanneforthDept.
of LinguisticsUniversity of PotsdamP.O.
Box 60155314415 Potsdam, Germanytom@ling.uni-potsdam.deSilvan HeintzeDept.
of LinguisticsUniversity of PotsdamP.O.
Box 60155314415 Potsdam, Germanyheintze@ling.uni-potsdam.deManfred StedeDept.
of LinguisticsUniversity of PotsdamP.O.
Box 60155314415 Potsdam, Germanystede@ling.uni-potsdam.deAbstractWe combine a surface based approach to dis-course parsing with an explicit rhetoricalgrammar in order to efficiently construct anunderspecified representation of possible dis-course structures.1 IntroductionThe task of rhetorical parsing, i.e., automatically de-termining discourse structure, has been shown to berelevant, inter alia, for automatic summarization (e.g.,Marcu, 2000).
Not surprisingly, though, the task is verydifficult.
Previous approaches have thus emphasized theneed for heuristic or probabilistic information in theprocess of finding the best or most likely rhetorical tree.As an alternative, we explore the idea of strictlyseparating ?high-confidence?
information from hypo-thetical reasoning and of working with underspecifiedtrees as much as possible.
We create a parse forest onthe basis of surface cues found in the text.
This forestcan then be subject to further processing.
Depending onthe application, such further steps can either calculatethe ?best?
tree out of the forest or continue workingwith a set of structured hypotheses.Section 2 briefly summarizes our proposal on under-specified rhetorical trees; section 3 introduces ourgrammar approach to text structure; section 4 comparesthis strategy to earlier work.2 Parse forests and underspecificationWe will illustrate the underspecification of ambiguitieswith the following example:?
(1) Yesterday the delegates elected their new rep-resentative by a narrow margin.
Even though (2) Smithgot only 234 votes, (3) he accepted the position.
But (4)his predecessor was rather irritated by the results.
?We take it that even though unambiguously marks aCONCESSION between the embedded clause (2, satellite)and the matrix clause (3, nucleus).
For the purpose ofillustration, we also assume that ?but?
can only signal abi-nuclear CONTRAST relation with the second nucleus(4); the span of the first nucleus is in this case ambigu-ous (1-3 or 2-3).
For linking (1) to the remaining mate-rial, we suppose that either ELABORATION (with nucleus(1)) or SEQUENCE holds.
Further relations are possible,which will add to the possibilities, but our points can bemade with the situation as just described.Instead of enumerating all possible rhetorical treesfor our example text, we use a parse forest representa-tion which compactly encodes the different analysises.A parse forest is basically an attributed And-Or-graphwith the properties of subtree sharing and containmentof ambiguities.
The first property means that a subtree,which plays different roles in some bigger structure, isrepresented only once.
The second property ensures thattwo subtrees which have in common the same categoryand the same terminal yield, but which differ in the firststep of a leftmost derivation are unified together.Fig.
1 shows a simplified parse forest for the exam-ple text.Fig.1: Parse forest for the input textSubtree sharing is indicated by nodes (e.g.
?1?
)which have several incoming edges.
Containment ofambiguities is exemplified in fig.
1 by the upper leftcontrast node which represents a disjunctive hypothesisconcerning the span of the relation.Reitter and Stede (to appear) developed an XML-DTD scheme to represent such parse forests in XMLnotation.3 Discourse structure parsingIn our approach, we combine a standard chunk parserwhich identifies the relevant units for discourse process-ing with a feature-based grammar which builds largerrhetorical trees out of these chunks.
The categories andfeatures we use are summarized in table 1.Cat.
Feat.Values CommentRST-treecat macro_seg,s, ip, pp, ?The category of theRST-tree: macrosegments, phrasessentences etc.type ns,nn,termType of RST-tree:nuc-sat, multi-nuclear or terminalrole nuc, sat Nucleus or satelliterelation elaboration,contrast,cause, ?The relation whichcombines thedaughters of theRST-tree.rstdp no_dp,but, al-though,?The discourse par-ticle triggering therelation, or no_dp,if absent.dp SeeaboveDiscourse particlechunk   Phrase or sentencepunct   PunctuationTable 1: Grammar categories and featuresThere are three groups of grammar rules:1.
Rules combining chunks to terminal RST-trees2.
Rules combining discourse particles and sentencefragments to non-primitives RST-trees3.
Rules combining sentences or groups of sentences(so called macro segments) to non-primitive RST-trees.An example for a rule in group 1 is the one whichbuilds a terminal RST-tree of category mc (main clause)out of a discourse particle, and sentence fragment and afull stop (all examples are given in Prolog-style nota-tion, with curly brackets indicating feature structures):(1)rst({cat:mc, dp:DP,  type:term}) --->dp({cat:pav, dp:DP}),chunk({cat:ip}),punct({cat:fullstop}).Rules like this one are used to build terminal RST-trees for sentences like (4) in our example text.The second group of rules is exemplified by a rulewhich combines two terminal RST-trees - a subordinateclause containing a conjunction like even though andanother clause - to a hypotactic RST-tree:(2)rst({cat:mc, rel:concession, dp:no_dp, type:ns}) --->rst({cat:sc, dp:even_though, role:sat}),rst({cat:mc, dp:no_dp, role:nuc}).The macro segment building rules of the third groupcan be divided into two subclasses.
The first class isconstituted by rules which construct RST-trees on thebasis of a relation that is triggered by a discourse parti-cle.
An example of this type is the possible contrast-relation between segments 4 and 2-3 in (1), which istriggered by the discourse particle but.
(3)rst({cat:macro_seg, rel:contrast,dp:no_dp, type:ns}) --->rst({cat:macro_seg, role:sat}),rst({cat:macro_seg, role:nuc, dp:but}).The other subclass contains rules which freely con-struct branching RST-trees without the overt evidenceof discourse particles.
The relations which are typicallyinvolved here are SEQUENCE and ELABORATION.
Rela-tions which have in common the same type of nucleus-satellite-configuration are unified into a single rule us-ing the list-valued form of the relation-feature:(4)rst({cat:macro_seg, rel:[sequence,elaboration],dp:no_dp, type:nn}) --->rst({cat:macro_seg, role:nuc, dp:no_dp}),rst({cat:macro_seg, role:nuc, dp:no_dp}).Fig.
2 shows a parse tree which reflects one analysisof our example text.
Note that the segments into whichthe input is broken usually smaller than sentences.Yesterdaythedelegateselectedtheirnewrepresentativeby anarrowmarginchunk [cat:s].punctrst [cat:mc]Eventhoughdp [cat:kous]Smithgot only234voteschunk [cat:ip],punctrst [cat:sc]heacceptedthepositionchunk [cat:ip].punctrst [cat:mc]2-7concession0-7sequenceButdp [cat:pav]hispredecessorwasratherirritatedby theresultschunk [cat:ip].punctrst [cat:mc]0-10contrastFig.2: Sample parse tree for the input textRules like (4) ensure the robustness of the grammaras they can be used to combine partial structures with-out any structure triggering discourse particles.Furthermore, rules of the kind shown in (4) are onthe one hand necessary to produce all possible branch-ing structure over a given sequence of terminal ele-ments.
On the other hand they introduce massiveambiguities into the grammar which causes the numberof analyses to grow according to the Catalan numbers(cf.
Aho and Ullman, 1972, p. 165).It is therefore crucial that during parsing the con-struction of parse trees is strictly avoided because thatwould turn an otherwise polynomial parsing algorithmlike chart parsing into an exponential one.
Instead weincrementally build the parse forest mentioned in sec-tion 2.
This is done by assigning a unique id to eachedge introduced into the chart and by storing the ids ofthe immediate daughters within the edge.
After parsingthe parse forest is constructed by partitioning the set ofedges into equivalence classes.
Two chart edges E1 andE2 are in the same equivalence class if they a) haveidentical start and end positions and b) the categories ofE1 and E2 subsume each other.
For the subsumption testit is necessary to ignore the role-feature, because thisfeature is an attribute of the parse forest edges and notof the parse forest nodes.Besides keeping the parsing algorithm polynomial itis of equal importance to keep the grammar constantlow.
For example, rule (4) which establishes aSEQUENCE/ELABORATION relation between two macrosegments also connects two simple clauses (of categorymc), a macro segment and a simple clause, or a simpleclause and a macro segment.
The standard move toavoid this kind of rule multiplication is to introduce anunary chain rule of the formrst({cat:macro_seg}) ---> rst({cat:mc})which ensures the desired level shifting.Because of the inherent relational nature of RST treesthis solution is blocked.
Instead we use an inheritancehierarchy like that in fig.
3 and replace rule (4) with thefollowing one, which is underspecified w.r.t to the cate-gory feature.
(5)rst({cat:macro_seg, rel:[sequence,elaboration],dp:no_dp, type:nn}) --->rst({cat:rst_tree, role:nuc, dp:no_dp}),rst({cat:rst_tree, role:nuc, dp:no_dp}).segmentrst_treemc macro_segnon_rst_treepp scFig 3: Simplified inheritance hierarchy for cat4 Related workSimilar to Marcu (2000) we assume discourse markersas indicators for rhetorical relations.But contrary to Marcu (1999) and also to Schilder(2002) we use a full-fledged discourse grammar and astandard parsing algorithm, which makes it, in our opin-ion, unnecessary to propose special rhetorical tree build-ing operations, as suggested e.g.
by Marcu (1999).By using the chart parsing algorithm combined withthe construction of an underspecified parse forest, it caneasily be shown that our method is of cubic complexity.This is a crucial property, because it is commonly as-sumed that the number of distinct structures that can beconstructed over a sequence of n discourse units is ex-ponential in n, (as it is for example implicit in the DCGbased algorithm proposed by Schilder, 2002).Our system is robust in the same way as the one inSchilder (2002) because the grammar admits under-specified rhetorical trees in the absence of overt dis-course markers.5 ConclusionWe have shown that a grammar based approach to rhe-torical parsing is suitable for efficient and robust con-struction of underspecified rhetorical structures.ReferencesAlfred V. Aho and Jeffrey D. Ullman.
1972.
The Theoryof Parsing, Translating and Compiling.
Volume 1.Prentice-Hall, Englewood Cliffs, NJ.Daniel Marcu.
1999.
A decision-based approach to rhe-torical parsing.
The 37th Annual Meeting of the Asso-ciation for Computational Linguistics (ACL'99),pages 365-372, Maryland, June 1999.Daniel Marcu.
2000.
The Rhetorical Parsing of Unre-stricted Texts: A Surface-Based Approach.
Computa-tional Linguistics, 26 (3), pages 395-448.David Reitter and Manfred Stede.
to appear.
Step byStep: Underspecified Markup in Incremental Rhe-torical Analysis.
To appear in: Proc.
Of the 4th Inter-national Workshop on Linguistically InterpretedCorpora (LINC-03).
Budapest.Frank Schilder.
2002.
Robust Discourse Parsing viaDiscourse Markers, Topicality and Position.
NaturalLanguage Engineering 8 (2/3).
