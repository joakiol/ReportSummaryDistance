Layout & Language: Preliminary experiments in assigning logicalstructure to table cellsMatthew Hurs t  and  Shona Doug lasLanguage Techno logy  Group,  Human Communicat ion  Research  Cent re ,Un ivers i ty  of  Ed inburgh ,  Ed inburgh  EH8 9LW UK{Mat thew.
Hurs t ,  S. Doug las}~ed inburgh .
ac .
ukAbstractWe describe a prototype system for as-signing table cells to their proper placein the table's logical (relational) structure,based on a simple model of table struc-ture combined with a number of measuresof cohesion between cell contents.
Pre-liminary results suggest hat very simplestring-based cohesion measures are not suf-ficient for the extraction of relational in-formation, and that future work shouldpursue the aim of more knowledge/data-intensive approximations to a notional sub-type/supertype definition of the relation-ships between value and label cells.1 In t roduct ionReal technical documents are full of text in tabu-lar and other complex layout formats.
Most repre-sentations of tabular data are layout or geometry-based: in SGML, in particular, Marcy Thompsonnotes "table markup contains a great deal of infor-mation about what a table looks like.., but very lit-tle about how the table relates the entries .
.
.
.
\[This\]prevents me from doing automated context-baseddata retrieval or extraction."
11.1 V iews of  tablesIn (Douglas, Hurst, and Quinn, 1995) an analysisof table layout and linguistic characteristics was of-fered which emphasised the potential importance oflinguistic information about the contents of cells tothe task of assigning a layout-oriented table repre-sentation to the logical relational structure it em-bodies.
Two views of tables were distinguished: adenotat iona l  and a funct iona l  view.a(Thompson, 1996), p151.The denotation is the table viewed as a set of n-tuples,  forming a re lat ion  between values drawnfrom n value-sets or domains.
Domains typicallyconsist of a set of values with a common supertype insome actual or notional Knowledge Representationscheme.
The actual table may also include labelcells which typically can be interpreted as a lexical-isation of the common supertype.
We hypothesizethat the contents of value cells and correspondinglabel cells for a given domain are significantly re-lated in respect of some measures of cohes ion thatwe can identify.The funct ional  view is a description of how theinformation presentation aspects of tables embody adecision s t ructure  (Wright, 1982) or reading path,which determines the order in which domains areaccessed in building or looking up a tuple.To express a given table denotation according toa given functional view, there is a repertoire of lay-out  pat terns  that express how domains can begrouped and ordered for reading in two dimensions.These layout patterns constitute a syntax of tablestructure, defining the basic geometric onfigura-tions that domain values and labels can appear in.1.2 An  in format ion extract ion taskOur application task is shallow information extrac-tion in construction industry specification docu-ments, containing many tables, which come to usvia the miracles of OCR as formatted ASCII, e.g., inFigure 1.The predominant argument ype of this genre ofspecification documents can be thought of as a formof 'assignment', similar to that in programming lan-guages.
Our aim is to fit each assignment into af rame that contains various elements representedin terms of the sublanguage world model, a simplepart-of/type-of knowledge representation.The elements we are looking for are ent it ies,  at-t r ibutes  which the KR accepts as appropriate for217I Maximuz to ta lMix I ch lo r ide  ion contentI (I\[ by he ight  of  cae~nt,J inc lud in~ GGBS)I. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Prestre$1led concrete O.
1Concrlte made v i th  su lphateres le t ing  Port land cement 0.2or supersulphated centConcrete aada v i th  port land cement,Port land b las t fu rnaca  cessna orcoabinat ion$ o f  GGB$ or PFA v i th  0.4ord inary  Por t land  cement andcont&Ini~ elbodded metalFigure 1: Example from the application domaint).
w and d are either integers or the wild card ?,and specify respectively the x-extent and y-extentof an area of cells that can match the template; thewild card matches any width, or depth, as appropri-ate.
t specifies whether the (sub)template is to becounted as a value (tv) or a label area ( t l ) .A selection from a set of four possible restr ic-t ions on a template can be defined:RESTRICTION- top- le f t+r ight+bottomAREA MUSTnot contain top rownot contain leftmost columncontain rightmost columncontain bottom rowThe following templates are used currently:those entities, a un i t  or type for each attribute, avalue which the assignment gives to each attribute,and a re la t ionsh ip  expressing the semantic ontentof the assignment.
To extract hese components, wewould like to have a basic representation f the tuplestructure of the table, plus information about any la-bels and how they relate to the values, in order tospecify fully the relationship and its arguments.1.3 A ims  of  the  cur rent  workWithout some way of identifying domains we cannotextract he table relation we require.
Our aim is toinvestigate the usefulness of a range of cohesion mea-sures, from knowledge-independent to knowledge-intensive, in allowing us to select, from among thoseareas of table cells which are syntactically capable ofbeing domains, those which in fact form the domainsof the table.
This paper reports the very beginningof the process.2 The  cur rent  p ro totype  sys temThe system operates in two phases.
In the first, a setof areas that might constitute domains is identified,using the constraints of table structure (geometricconfiguration) and cell cohesion.
In the second, thiscandidate set is filtered to produce a consistent tilingover the table.2.1 A s impl i f ied tab le  s t ructure  mode lThe potential geometric configurations that we allowfor a set of domain values (plus optional abel) arecalled templates .
A notation for specifying simpledomain templates is defined as follows.A template is delimited by a pair of brackets\[ .
.
.
\].
Within the brackets is a list of sub-templates,currently recursive only to depth 1 and taken to bestacked vertically in the physical table.
If a templatehas no sub-templates, it consists of a triple (ww, dd,lc: \[\[wl dl  t l \ ]  \[wl d?
tv \ ] \ ]  A label above a sin-gle column of values, of any height.lr: \[ \[wl dl  t l \ ]  \[w?
dl tv\]  \] A label above a singlerow of values, of any width.v: \[w?
d?
tv\]{-top -left +right +bottom} Arectangular area consisting of only values, re-stricted to domains at the bottom right margin,typically accessed using both x and y keys.c: \[wl d?
tv\ ]  A single column of values.2.2 A simpli f ied cohes ion mode lThe 'goodness' of a rectangular area of the table,viewed as a possible instantiation of a given tem-plate, is given by its score on the various cohesionattributes.
Values assigned for each of the chosen at-tributes are combined in a weighted sum to yield twooverall cohesion scores for each MatchedArea, thevalue-value cohes ion (v-v) and the label -va luecohes ion (l-v) as follows.We have a set of n v-v  cohesion functions{f~r-v, fv -v .
.
,  fv-v} which each take two cells andreturn a value between 0 and 1 which reflects howsimilar the two cells are on that function, and aset of n weights #~ v-v o v-v w v-v} which deter- lwO , Wl ?
.
.mine the relative importance of each function's re-sult.
Then for any area A composed of a set of cellswe can calculate a measure of the area's cohesion asa set of domain values:VS= ~ v-vScore(ci,cj)(ci,ci)EA(where (c~, cj) is an ordered pair of cells)n nv-vScore = / 2.-,X--"  ,v-vi=0  i=0218We have a set of m 1-v cohesion functions{flo-V, fl-v...fl'v } which each take two cells andreturn a value between 0 and 1 which reflects howlikely one of the cells is to be a label for the other,- 1-v 1-v ..w~V} which and aset  o fm weights ,tWo ,w 1 .determine the relative importance of each function'sresult.
Then for an area A composed of a set ofcells and a label cell ct we calculate a measure of thearea's cohesion as a label plus set of domain values:LS = ~ 1-vScore(c~,cv):cvEAm m1-vScore = ~_wil-vA-v,li /Z..w x ' "  l-vi----0 i=0A final score for the area is calculated as follows,depending on the type of template:If the area's template contains values and a label:finalScore = Wv-vVS + Wl_vLSWv-v + Wl_ vwhere Wv-v and Wl_ v are weights reflecting the rela-tive importance given to the VS and LS respectively.If the area's template contains only values:finalScore = VS3 Exper imentsTo test our system, we created a corpus of tablesmarked up in SGML with basic cell boundaries, al-lowing the template mechanism to determine the xand y position of cells.
This representation is similarin relevant information content o many SGML tableDTDS, and is also a plausible output from completelydomain-independent techniques for table recognitionin ASCII text or images, e.g., (Green and Krish-namoorthy, 1995).
To this basic representation weadded human-judgment information about the do-mains in each table (using an interface written inXEmacs lisp), specifying cell areas of values and la-bels for each domain.The tables were taken from a corpus of format-ted ASCII documents in the domain of constructionindustry specifications.
29 tables consisting of 91domains were open to examination during the ex-perimental development; 4 tables consisting of 13domains were held back as a test set.The tests we ran had different combinations of thecohesion measures a lphanum and s t r ing - lengthwith a factor ignorelabel ,  which corresponds to re-ducing the weighting wl - .
for the goodness of thelabel match to 0.
The unseen condition is the last(best-performing) combination, run on the held backdata.The cohesion attributes reported here have valuesbetween 0 and 1, where 0 corresponds to high and 1to low similiarity:ALPHA-NUMERIC RATIO: Given by((laol- Ig~l labl - ~lgblI'~,,1 + INa\[ \[Orb\[ + IlVbl )/L)"~+ O.5where laal is the number of alphabetic haracters instring a and INal is the number of numeric haractersin string a.STRING LENGTH RATIO: A nondirectional com-parison of string length.2.3 Select ing a set of  MatchedAreasGiven a set of templates, we find a set of MatchedAr-eas, rectangular areas of cells which satisfy a tem-plate definition and which reach a given cohesionthreshold.
The set of MatchedAreas contains no ar-eas that are wholly contained in other matched areasfor the same template.From the set of MatchedAreas we select the ar-eas we believe to be the domains of the table usinga greedy algorithm which selects a set of cells thatform a complete, non-overlapping tiling over the ta-ble.4 Resu l ts  and  fu ture  workThe recall results are given in Table 1.
The experi-ment column specifies the trial in terms of the fac-tors defined above.
The templates columns specifywhich templates are included in the trial.
The re-call score for each trial is the number of matchedareas that perfectly agree with the boundary andtype of a domain as marked by the human judge,as a percentage of the number of domains identifiedby the human judge.
(Since the selection algorithmproduces only a single tiling for each table, precisionwas not explicitly measured.
)4.1 Effect of templatesIncreasing the number of templates available at onetime reduces the recall performance because of con-fusion during the selection process; if we used onlythe lc template, for instance, we would get betterperformance overall per domain (in this applicationarea).
The true performance of the system has to bejudged with respect o the complete set (the right-most column in the results table), however, since allthese templates are needed to match even quite sim-ple tables.219ExperimentTemplates available(lc~ (lr} iv} (c} (lc, (lc, (lc, (lr, ~lr,lr} ,} ~} v} c}alphanum 84 3 3 3 82 32 60 5 2stringlength 41 1 0 0 42 30 35 1 1alphanum,ignorelabel 84 3 3 3 84 34 84 5 2stringlength,ignorelabel 41 1 0 0 42 34 41 1 1alphanum,stringlength 75 2 3 3 75 45 68 4 1alphaaum,stringlength,ignorelabel 75 2 3 3 76 47 75 5 2unseen 77 8 0 0 77 62 62 8 8{v, (lc, (lc, (lc, (It, (lc,e} lr, lr, v, v, lr,c} c} c}c}7 33 59 24 9 260 31 36 26 1 277 36 84 34 9 360 35 42 34 1 357 45 67 42 8 427 480 6276 47 8 4862 54 0 54Table 1: Recall results for all experimental conditions: % of actual domains correctly identifiedThe simple templates used here are also not ade-quate for more complex tables with patterns of reca-pitulation and multiply layered spanning labels.
Weintend to take a more sophisticated view of possi-ble geometric configurations, perhaps imilar to thetreatment in (Wang, 1996), and use the idea of read-ing paths to extract he tuples by relating the ap-propriate values from different domains.4.2 Effect of cohesion measuresThe alphanum and stringlength measures in combi-nation do perform rather better than alone.
How-ever, ignoring l-v cohesion always improves recall;these cohesion measures do not help in distinguish-ing between labels and values, or in linking labelswith value-sets.This will be more of a problem when we dealwith more complex tables with complex multi-celllabels.
In future, we intend to investigate the ef-fect of more sophisticated cohesion measures, includ-ing the use of thesaural information from domain-independent sources and corpus-based Knowlege Ac-quisition, e.g., (Mikheev and Finch, 1995), whichshould form better approximations to the super-type/subtype distinction.Combining a number of measures, in the kindof framework we have presented here, should allowgraceful performance over a wide range of domainsusing as much information as is available, from what-ever source, as well as convenient evaluation of therelative contribution of different sources.AcknowledgementsWe acknowledge the support of BICC plc who sup-plied data and funded the first author during most220of this work, and of the Engineering and Phys-ical Sciences Research Council of the UK, whofunded the second author under the CISA U project(IED4/1/5SlS).ReferencesDouglas, Shona, Matthew Hurst, and David Quinn.1995.
Using natural language processing for iden-tifying and interpreting tables in plain text.
InFourth Annual Symposium on Document Analy-sis and Information Retrieval, pages 535-545.Green, E. and M. Krishnamoorthy.
1995.
Recogni-tion of tables using tables grammars.
In Proceed-ings of the Fourth Annual Symposium on Docu-ment Analysis and Information Retrieval, pages261-278, University of Nevada, Las Vegas, April.Mikheev, A. and S. Finch.
1995.
A workbench foracquisition of ontological knowledge from naturaltext.
In Proceedings of the 7th conference of theEuropean Chapter for Computational Linguistics,pages 194-201, Dublin, Ireland.Thompson, Marcy.
1996.
A tables manifesto.
InProceedings of SGML Europe, pages 151 - 153,Munich, Germany.Wang, Xinxin.
1996.
Tabular Abstraction, Editing,and Formatting.
Phd, University of Waterloo, On-tario, Canada.Wright, Patricia.
1982.
A user-oriented approach tothe design of tables and flowcharts.
In David H.Jonassen, editor, The Technology of Text.
Educa-tional Technology Publications, pages 317-340.
