NL Understanding with a Grammar of ConstructionsWlodek Zadrozny and Martin Szummer and Stanislaw Jareckiand David E. Johnson and Leora Morgcnstern *IBM Research l)ivisionT.J .Watson Researc, h LabYorktown Heights, NY 10598 USAAbst rac tWe present an approach to natural anguage under-standing based on a computable grammar of con-st~ctions.
A construetionconsists of a set of featuresof form and a description of meaning in a context.
Agrammar is a set of constructions.
This kind of gram-mar is the key element of MINCAL, an implementednatural anguage speech-enabled interface to an on-line calendar system.
Tile architecture has twokey aspects: (a) the use of constructions, integratingdescriptions of form, meaning an(t context into onewhole; and (b) the separation of domain knowledge(about calendars) from application kno'wledgt; (aboutthe particular on-line calendar).1 In t roduct ion :  an  overv iewof  the  sys temWe present an approach to natural language under-standing based on a computablc gTummar of con-structions.
A construction consists of a set of featuresof form and a description of meaning in a context.A grammar is a set of constructions.
This kind ofgrammar is the key clement of MINCAI,, an imt)le-mented natural anguage speech-enabled interface t()an on-line calendar system.The system consists of a NL grammar, a parser,an on-line calendar, a domain knowledge base (aboutdates, times and meetings), an application knowl-edge base (about the calendar), a speech recognizer,a speech generator.In this paper we describe two key aspects of thesystem architecture: (a) the use of constructions,where instead of separating NL processing into thephases of syntax, semantics and pragmatics, we inte-grate descriptions of form, meaning and context intoone whole, and use a parser that take, s into accountall this information (see \[10\] fin' details); (b) the sep-aration of the domain knowledge (about calendars)and the application knowledge (about tile particularon-line calendar).*M.
Szummer and S. Jarecki ~re also from MYF.The dialogsThe system allows users to engage in dialogs like:Schedule a meeting with Bob/At what time and date?On August 30th.At what time.
?At8.Mm~ing or afte~won?In the evening.TILe parser ecognizes Schedule ameeting with Bobas an instance of sent(imp), the imperative construc-tion consisting of a verb and an NP, here up(event).TILe context is used to prevent another reading inwhich with Bob modifies schedule, as in l)ance atango with Bob/.
That  is, a contextual rule is usedwhich says that  for calen(lar applications, peotlle donot modify actions or places.
Context also plays animportant role in understanding answers, e.g.
At 8.This is understood as a time expression (and nott)lace or rate or something else) only because of theeontcxt.The tlarameters of a meeting can be given in manyways, e.g.
synonyms or differe, nt constructions can beused, users Call in(hide as many parameters in a sen-ten(:e as they wish, and the parameters can be givenin any order.
As a result there are about 10,000 waysof scheduling meetings (with a given set of parame-ters).How are the dialogs understoodWith respect to parsing, grammars of constructionscan be parsed like "standard" grammars, except hattile set of features is richer.
Civen a string (represent-ing a sentence, a fragment of a discourse or a para-graph), the parser assigns it a construction.
Fromthis viewpoint, the situation is similar to "regular"parsing, and the t)ossible algorithms arc, similar.
Wehave implementect a prototype chart parser for con-struction grammars, disensse, d fllrther in Section 3.But, c, learly, having understood tile sentence as alinguistic entity in isolation is not the ult imate goal.Here the message of all utterance mils( be understoodin tile context of an intended action.
This is clone intwo steps.
First, the system determines the intended1289action and its parameters, using domain knowledge(meetings+time+places).
Second, once all the pa-rameters have been extracted from tile dialog, thesystem executes the action.
To do this, the programuses application-specific knowledge to translate theaction and its parameters lute a form that can beexecuted by the application (Xdiary).2 Const ruct ions  as data  s t ruc-tu resA construction is given by the matrix:N : name_of_constructionC : context \]V : structureM : ntessageThe vehicle V consists of formulas describingpresence (or perhaps absence) of certain taxemes, orfeatures of form, within the structure of the ('onstruc-tion.
Such a structure is given by a list of subcon-structions and the way they have been put together(in all our examples this is concatenation, but thereare other possibilities, e.g.
wrapping).
The context,C , consists of a set of semantic and pragmatic on-straints limiting the application of the construction.It can be viewed as a set of preconditions that mustbe satisfied in order for a construction to be used inparsing.
The message, M , describes the meaning ofthe construction, via a set of syntactic, semantic andpragmatic onstraints.To make this concrete, let us consider a few ex-amples.
We begin with a simple "command con-struction" consisting of an action verb followed byits argument.N : senti cmnd, v.np)C : < hr attends >= sr\] \]strue = (V.NP) !< V cons n >= verbV < V M v_type >= action_verb< NP  eons_n >= np8ern_eat ~ cogg~gaandM a_type-< V M sex_type >a_obj =< NP M sex_type >agent = hrThe context of the construction describes all situa-tions in which the the hearer hr (hmnan or machine)is paying attention to the speaker sr (a "ready"state).
The feature struc is a list of variables and/orwords/tokens; it is used to describe the structure of aconstruction, and its role is similar to a rule in a gen-erative grammar.
(We will write names of variablesin capital letters, e.g.
NP,  inside matrices of con-structions).
The attr ibute cons_n gives the name ofa construction that  could be assigned to a string.
Weuse it here to say that  the form of the constructioncan be described as a concatenation of two strings,of which one is a verb ((;onstruction) and the otheran nt) (construction).
l,hlrthermore, the verb type< V M vAype > is "action_verb".
(The expression< V M v_type > should be read "tile v_.type of themessage of V").The message M describes the meaning of tile con-struction as that of a command in which tile typeof action is described by tile nmaning of the verb,and the object of the action is given by the mean-ing of the noun phrase.
The attr ibute sex_typestands for the "semantic type" and we identify itcurrently with tile word sense.
Thus "erase the file"is understood as a command to delete the file, if< erase M sex_type >= delete, but "erase thepicture" might refer to the type of action associatedwith rub_out.
In both cases the hearer hr is supposedto be tile agent of the action.Const ruct ions :  f rom words  to d i scourseWords~ phrases, and fragments of discourse can beanalyzed as constructions.
We view languages as col-lections of constructions which range fi'om words todiscourse.
We claim that the same representationscheme can be used for all constructions.The examples we are going to present; have beendeveloped with a specific purpose in mind, namelyfor scheduling calendar events.
In other papers (\[10\]and \[6\]), we have presented examples howing thatwe (:an give a good descriptions of non-standard con-structions.
However, in either case descriptions ofmeanings and contexts are general, and hence appli-cable to other tasks.We uow turn our attention to words.
Tile verb"cancel" can be represented as follows:N :verb(cancel)\[lane_code = engl ish\]C : lan.q_ehannel = textV : s t ruc -  (cancel)M : 8era_type = deletev_type -- action_verbNotice that even simple words(prop'orly) interpreted.
In Crequire context to bewe say that Englishtext is expected (but in other cases it could also bel,?ench text, or 1,?ench speech, etc.).
Some aspectsof context do not have to be explicitly specified andcart be replaced by defaults.Although the vehicle and the message are bothvery simple in this example, the simplicity of tilemessage is a result of deliberate simplification.
Wehave restricted it to the specification of the screamtie type, identified with one sense of tile word, andto describing the xmrb type of "cancel" as a verb ofaction.
Notice that the other sense of" cancel" -"off -set, balance out" wouht appear ill another entry.Of course, in reality, tile lexical meaning of anyword is a much more complicated matter \[1\].
Forinstance, in our lexicon tile messages of words maycontain many of the attri lmtes that appear in the1290explanatory combinatorial dictionary of Meleuk \[7\].Discourse constructions: qb illustrate discourseconstructions, we consider the folh)wing dialog:Have you arranged the worn yet?No, but I'll do it right away.We view the pattern of the answer no.but.,5' as a dis-course construction.
It can represented by the fol-lowing array of features:N : sent(assrt, no.bnt.S)C \[< p_utter eons.n > scnt(qu('..~,*)\]f struc - (no.but.S)V < S cons_n >-- scnt(a,s~rt,*)< p_sent truth_'value > 0 \]M <SM >4At we can sue, the construction applies only in thecontext of a previously asked question, and its mes-sage says that the answer to the question is negative,after which it elaborates tile answer with a sentenceS.3 System ArchitectureThe par tsMINCAL consists of a NI, grarmnal', a t)arser, a tit)-main knowledge base (about dates, times and meet-ings), an on:line calendar (Xdiary), an applicationknowledge base (about Xdiary), a continuous peechrecognizer (IBM, ICSS), a speech generator (Sl)eechPlus, Text to Speech Converter), and the interfat:es.At present, the grammar consists of a few hun-(\[red lexi('al constructions, and about 120 "produc-tions", i.e.
constructions describing combinations ofether constructions.
~ it (:overs tim basic fornmof assertive sentences, but it emphasizes (}ontntan(ts .Thus a comman(t can, for exanq)h:, be given eitherby v.np (also with "please", or "kindly"), or' by art as-sertive sentence re('ognized as art indirect si)ee(:h act("I'd like to ...", "Leora wants you to ...", etc.).
Thenext large group of constructions (:overs PPs, withparticular emphasis (m time and places.
Finally, itcovers a few discourse construetions, in('c it is im-portant to deal with sentence hagnmnts in dialogs,e.g.
understanding "evening" as "in the e, vening",when it is art answer to the question "when?
".The in teract ion  o f  the  modu les"\]Phe ca lendar  and  the  app l i ca t ion  knowledgebase: Xdiary is an on-line calendar for which wehave not written a complete interface, lint have fo-cused on the three most iml)ortant funct;ions: ap-pointment, moving, and canceling appointments.Other functions, su('h as "to dC' lists, window man-a.gement, listing somebody's aptn)intments, etc., (',art1These are.
construct ions we used irt MINCAI.. Ill addit ionin var ious exper iments  we }law*.
ilsed a few dozen other (2011-sLructions, e.g.
those covering "open idioms" (see Section 4).1re dealt with in a similar fashion, and we i)lan to ex-tend the interface to deal with them.
At this pointtile apl)lieation knowledge t)ase in very simple.
\]tconsists of rules that say how to interpret he datagiven by the semantic interpreter, for instance therules for tormatting paranmters and re, naming slots(e.g.
event_duration - ~ duration).
Such rnles arene(:essary, if the distinction between at)plication att(tdomain knowledge ix to be, maintained.The  ( tomain  knowledge base:  This has two kindsof facts: (I) background ontology, i.e., is, basle factsabout time and places, and (2) linguistic knowledgeassociated with tim domain.
The former includess l teh obv ious  fac ts  as  the  number  of clays ill a inonth ,which month folh)ws the ottmr, that oitlcos are placesetc.
The latter includes tiu'ts about how tile languageis use(l, l,br examt)le , the filters saying that places donot modify people, so that I want to meet my man-ager in th.c cafeteria can be, unambiguously parsed,with "cafeteria" 1)eing a meeting place, and not anattr ibute of the nlanager.The  organ izat ion  of knowledge: The issue ofthe organization of knowledge has been discussedat h:ngth in \[8\] and \[9\] and the formal model tle-veh)pe, d tiler(: ix applicabh; in the present context.At this t)oint, however, this tbrmal model has onlybeen implenmntcd very crudely.
Still till; model isworth briefly discussing, because the concet)tual ( is.~tinetions made guide our work and have importantt)rat'tiea\] eonsequene, es.
The most important hingabout it is that we discard the model of t)aekgroundknowledge as a logical theory, and replace it by amodel consisting of collection of theories and nmeh-anisms for putting thenl together depending on eir-eantst.:~nces.
T\]UlS, the )lSllal, two-1)art h)gical struc-tures, consisting of a metalevel and art object level ,are augmented by a third level a referential level.The referential level is a t)artially ordered collectionof theories; it encodes background knowledge in away resembling a dictionary t)r art encyelopedia.
~Parser, construct ion grammar and linguisticknowledgeParser :  The parser does not produce (syntactic)struetural descriptions of sente, nces.
Instead, it com-putes meaning representations.
For example, it con-verts adjuncts directly into attr ibutes of place, time,t)articipant etc., once they can be computed, andthus tit(; message of the sentonee does not containany infornmtion about how these attr ibutes whereexpressed or about tim attachnmnt of P l 's  that  ap-pear in it.
1,'or example, the sentence I want you toarrange a conference in my office at 5 is analyzed as.sent(a,ssert, svoe), an assertive sentence consistingof a su\[)jeet, a vert), an object and a eomplement.
:?As llStl~tl, cllrr(!llt s i tuat ions are descr ibed on the objectlevel, and the metalevel  is a t)lace for rules that  can elilniil~itesome of t;he models permi t ted  by the (~bjet:t level and theretkwential level.1291The latter and the message of the imperative thatis passed to sent(assert, svoc) does not contain anystructural information about the attachment of thePPs.
This message is combined with the messages ofthe verb and the noun, yielding\[\[\[den want (other_agent) \]agent hearer\]mental_agent\[ \[ type person\]\[ den speaker\]\[ action\[ \[ den arrange\]\[ action_object\[ type event\]\[ den conference\]\[ number I\]\[ mods\[ \[ det a\]\[ pp_msg\[ \[\[\[\[ \[\[\[\[prep at\]type time(hour)\]den\[ \[ hour\[ 5 am_or_pm\]\[ minute O\]prep in\]type place \]den office\]mods\[ \[ det my\]This result of parsing is then interpreted by thedomain interpreter to produce:***S lots :\[ \[ action_name schedule\]\[ event  name\[ a conference\]\[ event time\[ \[ minute O\]\[ hour\[ 5 am_or_pm\]\[ event_place\[ my office\]Application-specific defaults then produce yet an-other interpretation where, in addition to filling theslots of Xdiary, \[ hour \[ 5 am or_pro\] \] is interpretedas \[ hour \[ 17l \] .The parser is a chart parser, working left to right,with no lookahead.
The grammar is L-attributed,i.e., has has both synthesized and inherited at-tributes, but each inherited attribute depends onlyon inherited attributes of the parent or attributes ofthe sisters to the left.
Hence, although the parserdoes not have a lookahead step at present,, such astep can be added following \[2\].4 Comparisons with re la tedworkLinguistic arguments for constructions-based gram-mars has been worked out chiefly by Ch.
Fillmoreand his colleagues (ef.
\[31).
Their motivation for ad-vocating such an approach comes from the fact thattypical generative theories of grammar cannot dealtu:operly with open idioms illustrated by construc-tions such as:The morc carefully you work, the easier it willget.Why not fix it yourself?Much as I like fgonnie, I don't approve of any-thing he does.It's time you brushal your teeth.Him be.
a doctor?The same is true about even so-called robust parsersof English.
The reason for this failure can be at-tributed to the fact that expressions like these "ex-hibit properties that are not fully predictable fromindependently known properties of its lexical make-up and its grammatical structure" \[3\], p.511.
How-ever we do not need a list; of "strange" construc-tions m conclude that ~horoughly integrating syn-tax with semantics and pragmatics could provideus with a better handle on natnral language under-standing.
On a closer examination "normal" con-struetions exhibit enough complexity to warrant thenew approach (see \[10\] for details).Jurafsky \[4\] has independently come up with a pro-posal for a computable grammar of constructions.We compare our work with his in \[10\].
Here, welimit ourselves to a few remarks.
What is commonin both approaches is the centrality of the conceptof grammatical construction as a data structure thatrepresents lexical, semantic and syntactic knowledge.However, there are important differences between thetwo formalisms.
First, the actual data structuresused to represent constructions are different.
Themost important differenee has to do with the pres-ence of the context field in our version of the con-struction grammar.
This allows us to account forthe importance of pragmatics in representing manyconstructions, and to deal with discourse construe-tions.Secondly, while Jnrafsky acknowledges the needfor abstract constructions (pp.43-51), his abstractconstructions (weak constructions) are not first classcitizens they are defined only extensionally, byspecifying the set of constructions they abstract over,and their abstract meaning (e.g.
ent i ty  for NOUN).They are used to simplify descriptions of constituentsof other constructions.
However, because they do nothave a separate vehicle part, they cannot be used toassign default meanings.
For instance, since verb isdefined as a collection of all verbs is + read + can-cel 4- know + look-up + ..., it cannot be assigneda feature action_verb without introducing a contra-/292.diction its semantics is therefore given as RELA-TION/I'I~OCESS.
For us the important feature of "ab-stract" constructions i not that they simplify (te-scriptions of other constructions, trot that  they havedefault meanings.
(A similar critique of \[5\] can befound in \[10\]).5 Summary  of  resul tsOur at)preach to NI,U is based both on linguisticarguments and on our dissatisfaction with the stateof the art.
State of the art systclns typically aretoo "syntax-driven", failing to take context into ac-count in determining the intended meaning of sen-tences.
A related further weakness is that such sys-reins are typically "sentcnce oriented", rather than"conversation/diseourse ori nted", lit our view, thisnmkes even the most robust systems "britt le" andultimately impractical.To test whether a construction-based approachis feasible built a "complete" working system thatwould include a representation for constructions.
Todo this, we focused on the "calendar domain", a do-main with limited comi)lexity and simt)le but not nn-interesting semantics.
We have chosen to deal withsimple actions, and not e.g.
with question answering,where dee, per understanding would be necessary.
3Our  cont r ibut ions :1.
We.
have t)roposed a new kind of grammar com-putable construction grammars, which are neither se-mantic, nor syntactic.
Instead, their "productions"combine lexieal, syntacti(', semantic and pragmaticinformation.
42.
We have described data structures for construc-tions, and have shown that they can be effectivelyused by the parser.
Note that the same data struc-ture is used to encode tile lexicon anti the "syntactic"forms.3.
We have shown how to parse with~ constr~lctions.We have implemented a simple chart parsing algo-rithm, which carl be easily extended to an Eearly-like parser, as h)ng as tire construction granmlar e-mains L-attributed.
We have found that even a sim-ple parser of construction ear be quite ef\[icient.
Thisis partly due to the fact that it does not require copy-ing of all syntactic and semantic information fromdaughters to mothers; the goal of parsing consistsin producing an interpretation, and strnetural infor-mation can be discarded once an intertn.etation ofa phrase is produced.
\]t is also worth e.mt)hasizingaWe have also thought about anoLher possibility, that is,enhancing an IR system, e..g. with the understanding of dateexpressions.4In what sense are they "computable"?
Althmtgh this ad-jective might sugge.st a formal model with computational com-plexity results, etc., what we have in mind ix pretty trivial:(1) the systcm actually computes the messages ofgrammati-cal construction; (2) the grammars and constructions are welldefined ata structures, and l)arsing (combining all associatedconstructions in all possible ways) is decidable.that invoking domain semantics drastically reducesthe number of parses constructed.4.
We have proposed a modular architecture for NLinterfaces based on the division between linguisticknowledge, domain knowledge base, and applicationknowledge base.
Based on our experience, we be-lieve that this architecture should work in generalfor speech-enabled interfaces for restricted omains.References\[1\] Computational Linguistics.
Special Issue on theLexicon, 1987.
13: 3-4.\[2\] Nelson Correa.
An extension of earley's algo-r ithm for s- and l- attr ibuted grammars, in Prec.Intl.
Conf On Current Issues in ComputationalLinguistics, pages 248--26\].
Penang, Malaysia,1991.\[3\] Charles J. Fillmore, PaulKay, and Mary Catherine O'Connor.
Regularityand idiomatieity in grammatical constructions.Language, 64(3):501 538, 1988.\[4\] It.
Jurafsky.
An On-line Computational Modelof Sentence lnte~7~re.tation.
Phl)  thesis, Univer-sity of California, Berkeley, 1992.
Report No.UCB/CSD 92/676.\[5\] Paul Kay.
Even.
Linguistics and Philosophy,13(1):59 111, 1990.\[6\] M. MeCord, Arendse Bernth, Shalom l~appin,and Wlodek Zadrozny.
Natural language pro-cessing technology based on slot grammar.
In-ternational Journal orb Artificial Intelligence7bols, 1(2):229 297, 1992.\[7\] I. Melcuk.
Dependency Syntax: Theory andP~uctice.
State University of New York Press,Albany, NY, 1988.\[8\] Wlodek Zadrozny.
Reasoning with backgroundknowledge a three-level theory.
ComputationalIntelligence, 10(2), 1994.
To appear.\[91 Wlodek Zadrozny and Karen Jensen.
Seman--tics of paragraphs.
Computational Linguistics,17(2):171 210, 1991.\[10) Wlodek Zadrozny and Alexis Manaster-Ranler.The significance of constructions.
Submitted toComputational Linguistics, 1994.1293
