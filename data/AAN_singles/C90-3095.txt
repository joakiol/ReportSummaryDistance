' "  e ' "  " ' ' " 1) I '1  ' ' , I h. I cxl, pla, nnmg (,ott~pot~<.nl of  l,ho.
I.,IIX)(I Sysl;?.tnJ.
Kreyf l  nnd H.- J .
NovakIBM Deutschla,nd (;mt)ll, Wissc.scha, fl liches Zenl, rullllast, lent fiir Wissenslm..~derl.e Sysl,(,mePostfa.c\]l 80 08 80, 7000 St.uttga.rt.
80, Wesl.-(:lerma.nyPhone: (-t-49) 711-6695-447/540, e-mail: N()VAK a.t.
I)S0blI, OCI.I31'I?NETAbst ractIn thi+ lmper we detcrlhe the conRtruction and impl,-me~vration of PIT (Pre,enting Information by "l'extplamfing), tt~ubsy,tem of the LILOO.
textunder.tandlng Jy~tem.
Pl'F i~uted for plmming rtnswertt of pnretgraph \]eltgth to qne~tlo,A ofthe kind What do lieu kttolJ~ about X q.
We concent ra ted  m~ t~*imple.
envy to implement mechanltm thtd can be further ex-tended.
Experiencet with thit planning cottll~Onent , e~pecirtllyconcerning the integrntion of new plrmt anti further exiellslonNare dilcllAle<l I1.
In t roduct ionAs P IT  is wholly integrated into the IAI,OG sys-tem, first some general remarks about LI I ,OG.In the LILOG project (Linguist ic and logic meth-ods for the automat ic  understanding of German) weaim pr imar i ly  at construct ing a text understandingsystem.
F'or the analysis part  we use an l lPSG- lmsed(Pollard and Sag 5'7) syntax and semantics that isfurther developed for German.
For the representa-tion of world knowledge and the knowledge xtractedfrom the texts we have devised the representa.tioulanguage Lt, rt, oa ( Plelat and yon.
Luck 8g).
Lr, tt, oais an order sorted first-order predicate logic t.hat al-lows to define and farther describe sorts by using aKI , -ONE like sort descript.ion langnage, i.e.
sorts canbe described hy supersort and subsort relation~ aswell as by roles (relations) and featnres (f,,,,ctions).The sorts themselves can be either primit ive (at,m~s)or complex e.g.
defined as mi les,  intersection, c,rcomplement of other sorts with constraints on role:iand features.
The sorts form the conceptual entitiesof the system (they build au ontology) mid they areorganized as a lattice.
The sentantics of a word inthe lexicon is given by a pointer into th in sort ln~.tice.In order to find out what the text -mlders taud i ,gsystem has really understood we can ask questionsabout the texts.
In the first prot<)type (llollingerel al.
89) we could only ask.
yes/no and constituentquestions.
In the present scenario the system in tounderstand and combine the information of severallyIoth author~ are indebted to F;,duard tlovy who devltedthe planning ten,portent while ~taying a. a guest ~<:ienti~t inthe I , ILOG project.
The refinements, th~ i,.plementrttiotl,  nn<lthe experlencet reported here have been mri<le I+y the txtithorLThe vlewI expret~e?l in thi~ paper are our ~ole re.q.mtihillt.v.paragraph length texts about places of interest ill thecity of l) i isseldorf and we also want to be able to askquest io,s  of the kind What do ~ou know about theL,tmbrrtus cathedral?
Questions of this type neces-sitate a. textplanniug component hat decides first,which entities and second, in which order they shouldbe verbalized such I.\]mtl a colwrellt descriptive para-graph is generated.There have heen several approaches to the gener-ation of  co\]~ereut texts  t .hat can  be coarsely dividedinto two kinds: the schema based approach and theplan based approach.The first in desc,'ibed in detai l  in McKron, n 85.Schemata are representat ional  structures for stereo-typical paragraphs that describe objects.
A variantof this approach, somewhere between the schema andthe plan based approach is described in Novak 86and Novak 87.
}fete the structure of the whole text isl>a~ed on a schema whereas the sit, ale paragraphs arec,,~strueuted using domain restr ict ions and a tech-nique called ant ic ipated visua.li~,ation.
The aim i~ todescribe the movement of an object such that thehearer can visualiT, e it aM H. has been seen by thesystem.The plan based approach has been put forth,mnoug others, by Merha.n 76, ~ohen 7,q, Avpclt 8,5,and \[f,,vTI 85.
Mann.
and 'l'h,,tTp.~on.
88 propose a,;et of al~ont 20 relations sufl~cient o represent herelntim~s that hohl within t,.
?ts oceurr i ,g  in F,n-glish.
These relations, called R.ST (Rhetorical  Struc-ture Theory),  have been operat.ionali~ed and used anplans ( lh , ,v  5'8) in a top-down hierarchical expan-sion planner.
The planner takes n.s input one or moreCOmlnllnicative goals along with a sel.
of clause-.si~edinput;s to be generated as 1111 Pmglish pa:ragraph.
Itnssemldes the input entities into a t;ree that embodiesthe paragraph structure.
Nonterminal nodes in thetree are RS'I!
relations and terminal elements containthe iapnts,In our approach the same kiud of planner as de-scribed in llov~ 5'5' is used to find the entities in theknowledge hase that should be generated.In the following we first describe the overall a.rcbi-lecture oF the planner a.nd then its implementat ion.I 4312.
ArchitectureOur textplanner basically decides what  to sayand gives as output a linear list of the conceptualentities that should be verbalized as answer to gen-eral questions of the kind What do you know aboutX?
or What can you tell me about X?The planner takes as input a conummicative goal,e.g.
describe(~), and needs access to all knowledgesources of the system, namely to the user model,the ontology, the background knowledge and the tex-tknowledge.
As the knowledge of the system is rep-resented in LLILOG we use the inference engine forlookup and inferences.
The user model currentlyonly contains the facts that are already known to thehearer.
The ontology is given by the sort hierarchyof the system, the background kmowledge containsworld knowledge in the form of facts and inferencerules and finally the textknowledge r sults from theanalysis of seven short paragraphs describing placesof interest in the city of Dfisseldorf.The output is a list of the entities and their at-tributes that should to be verbalized in.
this order.This list is passed on to the generator that deter-urines sentence boundaries and decides on the syn-tactic realization of the entities.
The result of thegenerator is a formal description of the output sen-tence.
This description is then takeu by the formu-lator that constructs a correctly inflected Germtu~sentence.
The formulator is.
a system similar to SU-TRA (Busemann 88) or MUMBLE-86 (McDonaldand Mercer 88).2.1 ImplementationIn general, our implementation of the phmner isalong the same lines a.s described in Hovy 88 exceptthat we incorporate not only RST relations but alsodomaJnspecifie r lations like ACCESS (how does oneget to an object) and OPEN (when are the openinghours of an object).
Moore and Swartout 89 andMoore and Paris 89 use the snme planning algorithmaud they have added plans like e.g.
PERSUADE tothe RST plans.
This enables them to answer follow-up questions in advisory dialogues or in the explana-tion facility of an expert system.
Most of the ques-tions they cml answer are Why questions except twoWhat questions: What is a concept?
and What is thedifference between two concepts?
The general ideaof their approach too is to gather the informationthat should be communicated but using their plaitswe could not answer the kind of general question wehave in mind.Like RST  plans our plans consist of a nucleusand a satellite each associated with requirements andgrowth points.
The nuclei contain the informationthat has to be verbalized obligatorily which is eitherdone by recursively invoking other subplans or by anexplicit verbalization cmmnand say(aQ.
All plans arerecursively expanded until they lead to a verbaliza-tion command.
In contrast to nuclei sateBites, usingthe same notation, contain the same kind ofinfornm-tion that can be optionally verbalized.
The growthpoints allow for the inclusion of further infornmtioninto the list of entities that is finally passed on tothe generator.
They again contain plans.
Finally,the requirements for nucleus and satellite contain in-quiries to the inference ngine about e.g.
the validityof certain subsort relations and about beliefs of thehearer.
An exmnple of a plau, inleresting_~eature ,is given below (the planner is implemented in PRO-LOG so the atoms with capital etters are variables):plan(intoxosting.featuxe(0bject),nucleus: \ [say(0bjeot) \ ] ,satellite: \[say(Featuxo)\],nuoleuszequizement:axtd(\[subsozt(Objoct,object)\]),satell itezequizement: \[\],nucleus and..satelliterequirement:and( \[attxibute(0bjeet, zemarkability:not(bel(heazer, attribute(Object,remarkability: Feature)))\]),nucleus gzowthpoirtt:\[interesting.
feature(Feature)i,satellite.growth_point: \[\])Fontal:e),Among the 12 plans used by P IT  are domain de-pendent ones as.
well as domain independent ones.The latter are formalizations of RST relations thatlead to small text structures.
The domain depen-dent Plans lead to larger structures, e.g.
whole para-graphs.
Each plan, even if it can be seen as domainindependent, contains a domain specific part, namelythe requirements for nucleus and satellite which areinquiries to the inference ngine that have to heed thenames of entities, roles, and features of the knowl-edge representation.The planning algorithm uses four data structures:the plans, a tree, a stack, and a usedllst.
The textstructure tree is binary.
The root contains the com-muuicative goal that initiates the phmning process.The nodes represent the executed plaits.
Each nodehas successive nucleus and satellite edges.whose cor-responding nodes may be either empty or contain anexplicit verbalization command or further plans.The stack is used as an agenda.
Its elements aretuples consisting of the plan to be executed next anda pointer to that leaf of the tree where the subtreestemming from the execution of the plan should beadded.The used hst is a bookkeeping device representingwhich plan has been'used for which entity.The plmming algorithm consists of three phases:first, the text structure tree is built by a top-down hi-erarchical plmmer (Sacerdoti 75) using reeursive de-scent.
Second, the verbalization eonunmlds are col-lected by traversing the tree depth-first, left-to-right.Third, the entities to be verbalized are expanded bytheir attributes contained in the knowledge base and432 2~re passed on to the generator in a suit, able form.At the ;~tart of the planning process, i.e.
when'~he communicative goal comes in, the tree, the stack,~nd the used-list are empty.
If the plan library offersa:n appropriate plan to achieve the goal it is testedwhether this phm has already been executed for theentity in question.
If so, the execution is aborted,otherwise the plan is put on the used list.Next the requirements of the plan are checked,first, the ones common to both nucleus and satelliteand then the nucleus requirements.
If they cannotbe met, execution of the plan aborted, otherwise therequirements of the satellite are checked.
If they can-rot be met the corresponding plans of the satelliteand the satelfite growth points are skipped.
Are allrequirements met, the new plans together with theirpointers to that leaf of the tree where the subtrees~;hould be added are pushed onto the stack in the fol-lowing order: satellite growth points, nucleus growthpoints, satellite and nucleus.The second plan that is to be executed is poppedfcom the stack and dealt with as described abovewith the addition that the agenda has to be updatedwhen the tree has been expanded.
The pointers ofall plans to that leaf of the tree where a subtree hasbeen added have to be changed in order to point tothe nucleus of the new subtree.Planning stops when the agenda is empty.3.
Shortcomings and possible exten-:,;ionsThe origlnal plans like the one shown above arebased oil an extensive analysis of seven paragraphsdescribing places of interest in Diisseldorf.
tlenee,they capture the typical structure of such descrip-tions and act as more flexible schemas that can beadapted to a user's needs by incorporating more com-municative goals.
Nevertheless, problems arise whennew plans are added or when old ones are changed.\]It proved to be difficult to say in advance which textstructure will be the outconle of the planl~ing pro-tess.
Through the top-down expansion of the text~tructure tree new plans may be inserted into the treet'A places w\]lere they do not have the desired effect ?,1the text structure.
E.g.
the plan \]cat,ires(X) may bethe nucleus of the initiating plan deseriplion(X) and~dso satellite of a more fine grained plan.
As thoseplans that have been pushed last onto the stack areexecuted first and no plan is executed twice the fea-tures may be verbalized at the wrong place in thetext.Generally speaking, these problems point to theneed to strictly separate the planning of the proposl-tlonal and the rhetorical.
Although our hierarchicalplanner can be used successfully to plan the con-tent of the descriptive paragraphs we feel that a non-linear planning algorithm 1night be better snited forthe planning of the propositional content followedby a hierarchical planner for the rhetorical struc-ture.
Another problem is the domain dependenceof the propositional planner which always snacksin through the requirements placed on nncleus andsatellite.
The :requirements are stated in terms of theknowledge representation langamge.
The only partialsolution to this problem is to use general terms inthe planner and a separate mapping of these generalterms onto the knowledge representation language.Our further research is directed in this direction.ReferencesAppe l t  85 Appelt, D.E.
: Planning English Sentences.Cambridge University Press, 1985.Bol l inger et al 80 Bollinger, T., Hedtstfick, U., Rollinger,C.-R.: Reasoning \]or Test Understanding - Kno~vledgeProcessing in the 1 '~ LILOG-Prototype.
In: Met~ing,D.
(Ed.
): GWAI-89, 13 .1' German Workshop on Artifi-cial Intelligence.
Sprhlger, 1989, 203-212.I ' l l lsemann 88 Busemann t S.: Satrface Trantt\]ovmationsduring the Generation o/ Written German Sentences.In: Bole, L.
(tit.
), Natural Language Generation Sys-tems.
Springer, Berlin, 1988, 98-165.Cohen 78 Cohen, P.: On Knowing What to Say: Plan-ning Speech Acts.
Techn.
Report No.
118, Universityof Toronto, 1978.l tovy ~q~ tIovy, E.H.: \[ntegratinq Tenet Planning and Pro-daction in Generation.
IJCAI-85, 8't8-851.l Iovy 88 Hovy, ~.It.
: Planning Coherent MultisententialTe:et.
Proc.
of the 26 ~h Annual Meeting of the AC.L,1988, 163-169.Mann and Thompson 88 Mann, W.C.,Thompson, S.A.:l~hetorical Structure Theory: Toward a ~mctional the-ory o\] te~t organization.
In: Text 8 (3)~ 1988, 2'13-281.McDona ld  and Meteer  88 McDotaald, D.D., Mercer,M.W.
: ~rom Water to Wine: Generating naturalLanguage Test front Today'* Application Programs.Proc.
of the 2 ''4 ACL Conference on Applied NaturalLanguage Proce~shag, 1988, 41-48.MeKeown 85 McKeown, K.R.
: Te~t Generation: UsingDiscoatrs Stralegle~ and Focu~ (7on~traints o GenerateNatu~'al Langua9e Tezt.
Cambridge, Cambridge Uni-versity Press, 1985.Moehan 70 Meehan, F.: The Metanovel: Writing Sio-,'ies Ay Camp,def.
Ph.D. dissertation, Yale University,1976.Moore and Paris 80 Moore, J.D., Paris, C.L.
: Planning7'e,'rt Jar Advisory Diologue~.
ACL-89, 203-211.Moore and Swartout  80 Moors, J.D., Swartout, W.R.:A Reactive Approach to E:rplanation.
IJCAI-89, De-trolt.Novak 8(t Novak~ It.-J.
: G'enerating a Coherent Tecet 1)e-Fcribing a Traffic Sceite.
COLING-86, 570-575.Novak 87 Novak, It.-J.
: Teztgenerierung ausvisuellen Daten: Beschreibungen van Strassenszenen.Berlin/Heidelberg/New York, Springer, 1987.P letat  and van Luck 80 Pletat, U., van Luck, K.:Knowledge Representation i  LfLOG.
In: Blash,s, K.-H., Hedt~tlick, U., Rolllngei, C.-R.
(ed*.
): Sorts andTypes in Artificial Intelligence.
Springer, 1989, (to ap-pear).Pol lard and Sag 87Pollard, C., Sag, I.A.
: An In/ormatlon-lJased Synta~and Semantics.
VoL I, Fundamentals.
CSLI LectureNora's 13, Stanford, 1987.Saeerdot l  75 Sacerdoti, E.D.
: A structure \]or plans andbehaviour.
North-Holland Publishing Company, Ams-t erdam, 1975.3 433
