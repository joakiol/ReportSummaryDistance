Proceedings of the Third ACL Workshop on Innovative Use of NLP for Building Educational Applications, pages 1?9,Columbus, Ohio, USA, June 2008. c?2008 Association for Computational LinguisticsDeveloping Online ICALL Exercises for RussianMarkus DickinsonDepartment of LinguisticsIndiana Universitymd7@indiana.eduJoshua HerringDepartment of LinguisticsIndiana Universityjwherrin@indiana.eduAbstractWe outline a new ICALL system for learnersof Russian, focusing on the processing neededfor basic morphological errors.
By setting outan appropriate design for a lexicon and distin-guishing the types of morphological errors tobe detected, we establish a foundation for er-ror detection across exercises.1 Introduction and MotivationIntelligent computer-aided language learning(ICALL) systems are ideal for language pedagogy,aiding learners in the development of awareness oflanguage forms and rules (see, e.g., Amaral andMeurers, 2006, and references therein) by providingadditional practice outside the classroom to enablefocus on grammatical form.
But such utility comesat a price, and the development of an ICALL systemtakes a great deal of effort.
For this reason, thereare only a few ICALL systems in existence today,focusing on a limited range of languages.In fact, current systems in use have specificallybeen designed for three languages: German (Heiftand Nicholson, 2001), Portuguese (Amaral andMeurers, 2006, 2007), and Japanese (Nagata, 1995).Although techniques for processing ill-formed inputhave been developed for particular languages (seeVandeventer Faltin, 2003, ch.
2), many of themare not currently in use or have not been integratedinto real systems.
Given the vast array of languageswhich are taught to adult learners, there is a greatneed to develop systems for new languages and fornew types of languages.There is also a need for re-usability.
While therewill always be a significant amount of overhead indeveloping an ICALL system, the effort involved inproducing such a system can be reduced by reusingsystem architecture and by adapting existing naturallanguage processing (NLP) tools.
ICALL systemsto date have been developed largely independentlyof each other (though, see Felshin, 1995), employ-ing system architectures and hand-crafted NLP toolsspecific to the languages they target.
Given the dif-ficulty involved in producing systems this way foreven a single language, multilingual systems remaina distant dream.
Rather than inefficiently ?reinvent-ing the wheel?
each time we develop a new sys-tem, however, a sensible strategy is to adapt exist-ing systems for use with other languages, evaluatingand optimizing the architecture as needed, and open-ing the door to eventual shared-component, multi-lingual systems.
Furthermore, rather than hand-crafting NLP tools specific to the target languageof individual systems, it makes sense to explore thepossibility of adapting existing tools to the targetlanguage of the system under construction, devel-oping resource-light technology that can greatly re-duce the effort needed to build new ICALL systems.In this light, it is important to determine where andhow reuse of technology is appropriate.In this spirit, we are developing an ICALL sys-tem for beginning learners of Russian based on theTAGARELA system for Portuguese, reusing manysignificant components.
The first priority is to deter-mine how well and how much of the technology inTAGARELA can be adapted for efficient and accu-rate use with Russian, which we outline in section 2.1Focusing on Russian requires the developmentof techniques to parse ill-formed input for amorphologically-rich language.
Compared withother languages, a greater bulk of the work in pro-cessing Russian is in the morphological analysis.
Asthere are relatively few natural language process-ing tools freely available for Russian (though, seeSharoff et al, 2008), we are somewhat limited in ourselection of components.In terms of shaping an underlying NLP system,though, the first question to ask for processinglearner input is, what types of constructions needto be accounted for?
This can be answered byconsidering the particular context of the activities.We therefore also need to outline the types of ex-ercises used in our system, as done in section 3,since constraining the exercises appropriately (i.e.,in pedagogically and computationally sound ways)can guide processing.
Based on this design, wecan outline the types of errors we expect to findfor morphologically-rich languages, as done in sec-tion 4.
Once these pieces are in place, we can detailthe type of processing system(s) that we need anddetermine whether and how existing resources canbe reused, as discussed in section 5.2 System architectureOur system is based on the TAGARELA system forlearners of Portuguese (Amaral and Meurers, 2006,2007), predominantly in its overall system architec-ture.
As a starting point, we retain its modularity, inparticular the separation of activities from analysis.Each type of activity has its own directory, whichreflects the fact that each type of activity loads dif-ferent kinds of external files (e.g., sound files for lis-tening activities), and that each type of activity couldrequire different processing (Amaral, 2007).In addition to the modular design, we also retainmuch of the web processing code - including theprogramming code for handling things like user lo-gins, and the design of user databases, for keepingtrack of learner information.
In this way, we min-imize the amount of online overhead in our systemand are able to focus almost immediately on the lin-guistic processing.In addition to these more ?superficial?
aspects ofTAGARELA, we also carry over the idea of usingannotation-based processing (cf.
Amaral and Meur-ers, 2007).
Before any error detection or diagnosisis performed, the first step is to annotate the learnerinput with the linguistic properties which can be au-tomatically determined.
From this annotation andfrom information about, e.g., the activity, a sepa-rate error diagnosis module can determine the mostlikely error.Unfortunately, the ?annotator?
(or the analysismodel) cannot be carried over, as it is designedspecifically for Portuguese, which differs greatlyfrom Russian in terms of how it encodes relevantsyntactic and morphological information.
With anannotation-based framework, the focus for process-ing Russian is to determine which information canprovide the linguistic properties relevant to detectingand diagnosing ill-formed input and thus which NLPtools will provide analyses (full or partial) whichhave a bearing on detecting the errors of interest.3 Exercise designA perennial question for ICALL systems in generalis what types of errors are learners allowed to make?This is crucially dependent upon the design of theactivities.
We want the processing of our systemto be general, but we also take as a priority mak-ing the system usable, and so any analysis done inan annotation-based framework must be relevant forwhat learners are asked to do.The goal of our system is to cover a range of ex-ercises for students enrolled in an eight-week ?sur-vival?
Russian course.
These students start thecourse knowing nothing about Russian and finish itcomfortable enough to travel to Russia.
The exer-cises must therefore support the basics of grammar,but also be contextualized with situations that a stu-dent might encounter.
To aid in contextualization,we plan to incorporate both audio and video, in or-der to provide additional ?real-life?
listening (andobserving) practice outside of the classroom.The exercises we plan to design include: listen-ing exercises, video-based narrative exercises, read-ing practice, exercises centered around maps and lo-cations, as well as more standard fill-in-the-blank(FIB) exercises.
These exercises allow for variabil-ity in difficulty and in learner input.From the processing point of view, each will have2its own hurdles, but all require some morphosyntac-tic analysis of Russian.
To constrain the input fordevelopment and testing purposes, we are startingwith an FIB exercise covering verbal morphology.Although this is not the ideal type of exercise for dis-playing the full range of ICALL benefits and capa-bilities, it is indispensible from a pedagogical pointof view (given the high importance of rapid recog-nition of verbal forms in a morphologically rich lan-guage like Russian) and allows for rapid develop-ment, testing, and perfection of the crucial morpho-logical analysis component, as it deals with compli-cated morphological processing in a suitably con-strained environment.
The successes and pitfalls ofthis implementation are unlikely to differ radicallyfor morphological processing in other types of ex-ercises; the techniques developed for this exercisethus form the basis of a reusable framework for theproject as a whole.A simple example of a Russian verbal exercise isin (1), where the verb needs to be past tense andagree with third person singular masculine noun.
(1) ?????Yesterday??he____(??????
)(to see)????
?.a film4 Taxonomy for morphological errorsWhen considering the integration of NLP tools formorphological error detection, we need to considerthe nature of learner language.
In this context, ananalyzer cannot simply reject unrecognized or un-grammatical strings, as does a typical spell-checker,for example, but must additionally recognize whatwas intended and provide meaningful feedback onthat basis.
Formulating an error taxonomy delin-eates what information from learner input must bepresent in the linguistic analysis.Our taxonomy is given in figure 1.
As can be seenat a glance, the errors become more complex andrequire more information about the complete syntaxas we progress in the taxonomy.To begin with, we have inappropriate verb stems.For closed-form exercises, the only way that aproperly-spelled verb stem can be deemed appropri-ate or inappropriate is by comparing it to the verbthat the student was asked to use.
Thus, errors oftype #1b are straightforward to detect and to pro-vide feedback on; all that needs to be consulted is1.
Inappropriate verb stem(a) Always inappropriate(b) Inappropriate for this context2.
Inappropriate verb affix(a) Always inappropriate(b) Always inappropriate for verbs(c) Inappropriate for this verb3.
Inappropriate combination of stem and affix4.
Well-formed word in inappropriate context(a) Inappropriate agreement features(b) Inappropriate verb form (tense, perfec-tive/imperfective, etc.
)Figure 1: Error taxonomy for Russian verbal morphologythe activity model.1 Errors of type #1a (and #2a) areessentially misspellings and will thus require spell-checking technology, which we do not focus on inthis paper, although we discuss it briefly in sec-tion 5.3.Secondly, there are inappropriate verb affixes,which are largely suffixes in Russian.
Other thanmisspellings (#2a), there are two ways that affixescan be incorrect, as shown in example (2).
In exam-ple (2a), we have the root for ?begin?
(pronouncednachina) followed by an ending (ev) which is neveran appropriate ending for any Russian verb, al-though it is a legitimate nominal suffix (#2b).
Theother subtype of error (#2c) involves affixes whichare appropriate for different stems within the samePOS category.
In example (2b), a third person sin-gular verb ending was used (it), but it is appropriatefor a different conjugation class.
The appropriateform for ?he/she/it begins?
is ????????.
(2) a.
*??????-??begin-??b.
*??????-?
?begin-3sThe third type of error is where the stem and affix1Note that if one were allowing free input, this error typecould be the most difficult, in that the semantics of the sentencewould have to be known to determine if a verb was appropriate.3may both be correct, but they were put together in-appropriately.
In a sense, these are a specific typeof misspelling.
For example, the infinitive ????
(moch, ?to be able to?)
can be realized with differentstems, depending upon the ending, i.e., ???-?
(mogu?I can?)
???-??
(mozhem ?we can?).
Thus, wemight expect to see errors such as *???-?
(mozhu),where both the stem and the affix are appropriate?and appropriate for this verb?but are not combinedin a legitimate fashion.
The technology needed todetect these types of errors is no more than what isneeded for error type #2, as we discuss in section 5.The final type of error is the one which requiresthe most attention in terms of NLP processing.
Thisis the situation when we have a well-formed wordappearing in an inappropriate context.
In otherwords, there is a mismatch between the morpho-logical properties of the verb and the morphologicalproperties dictated by the context for that verb.There are of course different ways in which a verbmight display incorrect morphological features.
Inthe first case (#4a), there are inappropriate agree-ment features.
Verbs in Russian agree with the prop-erties of their subject, as shown in example (3).Thus, as before, we need to know the morphologi-cal properties of the verb, but now we need not justthe possible analyses, but the best analysis in thiscontext.
Furthermore, we need to know what themorphological properties of the subject noun are, tobe able to check whether they agree.
Access to thesubject is something which can generally be deter-mined by short context, especially in relatively shortsentences.
(3) a.
?I?????think-1sgb.
??He??????think-3sgc.
*?I?????
?think-3sgIn the second case (#4b), the verb could be in aninappropriate form: the tense could be inappropri-ate; the verbal form (gerund, infinitive, etc.)
couldbe inappropriate; the distinction between perfectiveand imperfective verbs could be mistakenly realized;and so forth.
Generally speaking, this kind of con-textual information comes from two sources: 1) Theactivity model can tell us, for example, whether aperfective (generally, a completed action) or an im-perfective verb is required.
2) The surrounding sen-tence context can tell us, for example, whether aninfinitive verb is governed by a verb selecting for aninfinitive.
Thus, we need the same tools that we needfor agreement error detection.By breaking it down into this taxonomy, we canmore clearly delineate when we need external tech-nology in dealing with morphological variation.
Forerror types #1 through #3, we make no use of contextand only need information from an activity modeland a lexicon to tell us whether the word is valid.For these error types, the processing can proceed in arelatively straightforward fashion, provided that wehave a lexicon, as outlined in section 5.
Note alsothat our error taxonomy is meant to range over thespace of logically possible error types for learnersfrom any language background of any language?smorphological system.
In this way, it differs fromthe more heuristic approaches of earlier systemssuch as Athena (Murray, 1995), which used tax-onomies tailored to the native languages of the sys-tem?s users.That leaves category #4.
These errors are mor-phological in nature, but the words are well-formed,and the errors have to do with properties conditionedby the surrounding context.
These are the kind forwhich we need external technology, and we sketch aproposed method of analysis in section 5.4.Finally, we might have considered adding a fifthtype of error, as in the following:5.
Well-formed word appropriate to the sentence,used inappropriately(a) Inappropriate position(b) Inappropriate argument structureHowever, these issues of argument structure andof pragmatically-conditioned word order variationdo not result in morphological errors of the verb,but rather clearly syntactic errors.
We are currentlyonly interested in morphological errors, given thatin certain exercises, as in the present cases, syntac-tic errors are not even possible.
With an FIB de-sign, even though we might still generate a completeanalysis of the sentence, we know which word has4the potential for error.
Even though we are not cur-rently concerned with these types of errors, we cannote that argument structure errors can likely be han-dled through the activity model and through a simi-lar analysis to what described is in section 5.4 sinceboth context-dependent morphological errors (e.g.,agreement errors) and argument structure errors relyon relations between the verb and its arguments.5 Linguistic analysisGiven the discussion of the previous section, we arenow in a position to discuss how to perform mor-phological analysis in a way which supports errordiagnosis.5.1 The nature of the lexiconIn much syntactic theory, sentences are built fromfeature-rich lexical items, and grammatical sen-tences are those in which the features of com-ponent items agree in well-defined ways.
Inmorphologically-rich languages like Russian, theheavy lifting of feature expression is done by overtmarking of words in the form of affixes (mainly pre-fixes and suffixes in the case of Russian).
To be ableto analyze words with morphological errors, then,we need at least partially successful morphologicalanalysis of the word under analysis (as well as thewords in the context).The representation of words, therefore, must besuch that we can readily obtain accurate partial in-formation from both well-formed and ill-formed in-put.
A relatively straightforward approach for anal-ysis is to structure a lexicon such that we can buildup partial (and competing) analyses of a word as theword is processed.
As more of the word is (incre-mentally) processed, these analyses can be updated.But how is this to be done exactly?In our system, we plan to meet these criteria byusing a fully-specified lexicon, implemented as a Fi-nite State Automaton (FSA) and indexed by bothword edges.
Russian morphological information isalmost exclusively at word edges?i.e., is encodedin the prefixes and suffixes?and thus an analysiscan proceed by working inwards, one character ata time, beginning at each end of an input item.22See Roark and Sproat (2007) for a general overviewof implementational strategies for finite-state morphologicalBy fully-specified, we mean that each possibleform of a word is stored as a separate entity (path).This is not as wasteful of memory as it may sound.Since the lexicon is an FSA, sections shared acrossforms need be stored only once with diversion rep-resented by different paths from the point where theshared segment ends.
In fact, representing the lex-icon as an FSA ensures that this process efficientlyencodes the word possibilities.
Using an FSA overall stored items, regular affixes need to be storedonly once, and stems which require such affixes sim-ply point to them (Clemenceau, 1997).
This givesthe analyzer the added advantage that it retains ex-plicit knowledge of state, making it easy to simul-taneously entertain competing analyses of a giveninput string (C?avar, 2008), as well as to return toprevious points in an analysis to resolve ambiguities(cf., e.g., Beesley and Karttunen, 2003).We also need to represent hypothesized mor-pheme boundaries within a word, allowing us to seg-ment the word into its likely component parts andto analyze each part independently of the others.Such segmentation is crucial for obtaining accurateinformation from each morpheme, i.e., being ableto ignore an erroneous morpheme while identifyingan adjoining correct morpheme.
Note also that be-cause an FSA encodes competing hypotheses, mul-tiple segmentations can be easily maintained.Consider example (4), for instance, for which thecorrect analysis is the first person singular form ofthe verb think.
This only becomes clear at the pointwhere segmentation has been marked.
Up to thatpoint, the word is identical to some form of ??-??
(duma), ?parliament?
(alternatively, ?thought?
).Once the system has seen ???
?, it automatically en-tertains the competing hypotheses that the learner in-tends ?parliament,?
or any one of many forms of ?tothink,?
as these are all legal continuations of whatit has seen so far.
Any transition to ?
after ???
?carries with it the analysis that there is a morphemeboundary here.
(4) ???
?|?think-1sgObviously this bears non-trivial resemblance tospell-checking technology.
The crucial differenceanalysis.5comes in the fact that an ICALL morphological an-alyzer must be prepared to do more than simply re-ject strings not found in the lexicon and thus mustbe augmented with additional, morphological infor-mation.
Transitions in the lexicon FSA will need toencode more information than just the next charac-ter in the input; they also need to be marked withpossible morphological analyses at points where itis possible that a morpheme boundary begins.Maintaining hypothesized paths through a lexiconbased on erroneous input must obviously be con-strained in some way (to prevent all possible pathsfrom being simultaneously entertained), and thus wefirst developed the error taxonomy above.
Knowingwhat kinds of errors are possible is crucial to keep-ing the whole process workable.5.2 FSAs for error detectionBut why not use an off-the-shelf morphological an-alyzer which returns all possible analyses, or a moretraditional paradigm-based lexicon?
There are anumber of reasons we prefer exploring an FSA im-plementation to many other approaches to lexicalstorage for the task of supporting error detection anddiagnosis.First, traditional mophological analyzers gener-ally assume well-formed input.
And, unless theysegment a word, they do not seem to be well-suited to providing information relevant to context-independent errors.Secondly, we need to readily have access to al-ternative analyses, even for a legitimate word.
Withphonetically similar forms used as different affixes,learners can accidentally produce correct forms, andthus multiple analyses are crucial.
For example, -?can be either a first person singular marker for cer-tain verb classes or an accusative marker for certainnoun classes.
Suppose a learner attempts to make averb out of the noun ???
(dush), meaning ?shower?and thus forms the word ????.
It so happens thatthis incorrect form is identical to an actual Russianword: the accusative form of the noun ?soul.?
Amore traditional morphological analysis will likelyonly find the attested form.
Keeping track of thehistory from left-to-right records that the ?shower?reading is possible; keeping track of the history fromright-to-left records that a verbal ending is possible.Compactly representing such ambiguity?especiallywhen the ambiguity is not in the language itselfbut in the learner?s impression of how the languageworks?is thus key to identifying errors.Finally, and perhaps most importantly, morpho-logical analysis over a FSA lexicon allows for easyimplementation of activity-specific heuristics.
In thecurrent example, for instance, an activity might pri-oritize a ?shower?
reading over a ?soul?
one.
Sinceentertained hypotheses are all those which representlegal continuations (or slight alterations of legal con-tinuations) through the lexicon from a given state inthe FSA, it is easy to bias the analyzer to return cer-tain analyses through the use of weighted paths.
Al-ternatively, paths that we have strong reason to be-lieve will not be needed can be ?disconnected.?
Inthe verbal morphology exercise, for example, suffixpaths for non-verbs can safely be ignored.The crucial point about error detection in ICALLmorphological analysis is that the system must beable to speculate, in some broadly-defined sense, onwhat learners might have meant by their input, ratherthan simply evaluating the input as correct or incor-rect based on its (non)occurrence in a lexicon.
Forthis reason, we prefer to have a system where at leastone component of the analyzer has 100% recall, i.e.,returns a set of all plausible analyses, one of whichcan reasonbly be expected to be correct.
Since an an-alyzer based on an FSA lexicon has full access to thelexicon at all stages of analysis, it efficiently meetsthis requirement, and it does this without anticipat-ing specific errors or being tailored to a specific typeof learner (cf., e.g., Felshin, 1995).5.3 Error detectionHaving established that an FSA lexicon supports er-ror detection, let us outline how it will work.
Anal-ysis is a process of attempting to form independentpaths through the lexicon - one operating ?forward?and the other operating ?backward.?
For grammati-cal input, there is generally one unique path throughthe lexicon that joins both ends of the word.
Mor-phological analysis is found by reading informationfrom the transitions along the chain (cf.
Beesley andKarttunen, 2003).
For ungrammatical input, the an-alyzer works by trying to build a connecting pathbased on the information it has.Consider the case of the two ungrammatical verbsin (5).6(5) a.
*??????-??begin-??b.
*??????-?
?begin-3sIn (5a) (error type #2b) the analysis proceedingfrom the end of the word would fail to detect thatthe word is intended to be a verb.
But it would, atthe point of reaching the ?
in ?
?, recognize that ithad found a legitimate nominal suffix.
The process-ing from the beginning of the word, however, wouldrecognize that it has seen some form of begin.
Wethus have enough information to know what the ver-bal stem is and that there is probably a morphemeboundary after ??????-.
These two hypotheses donot match up to form a legitimate word (thereby de-tecting an error), but they provide crucial partial in-formation to tell us how the word was misformed.Detecting the error in (5b) (type #2c) works sim-ilarly, and the diagnosis will be even easier.
Again,analyses proceeding from each end of the word willagree on the location of the morpheme boundary andthat the type of suffix used (third person singular) isa type appropriate to verbs, just not for this conjuga-tion class.
Having a higher-level rule recognize thatall features match, merely the form is wrong, is eas-ily achieved in a system with an explicit taxonomyof expected error types coded in.Errors of type #3 are handled in exactly the samefashion: information about which stem or which af-fix is used is readily available, even if there is nocomplete path to form a whole word.Spelling errors within a stem or an affix (errortypes #1a and #2a) require additional technology inorder to find the intended analysis?which we onlysketch here?but it is clear that such spell-checkingshould be done separately on each morpheme.3 Inthe above examples, if the stem had been misspelled,that should not change the analysis of the suffix.Integrating spell-checking by calculating edit dis-tances between a realized string and a morpheme inthe lexicon should be relatively straightforward, asthat technology is well-understood (see, e.g., Mit-ton, 1996) and since we are already analyzing sub-parts of words.3Clearly, we will be able to determine whether a word iscorrectly spelled or not; the additional technology is needed todetermine the candidate corrections.Obviously, in many cases there will be lingeringambiguity, either because there are multiple gram-matical analyses in the lexicon for a given inputform, or because the learner has entered an ungram-matical form, the intention behind which cannot en-tirely be determined from the input string alone.
Itis for such cases that the morphological analyzerwe propose is most useful.
Instead of returningthe most likely path through the analyzer (e.g., theGPARS system of Loritz, 1992), our system pro-poses to follow all plausible paths through the lexi-con simultaneously?including those that are the re-sult of string edit ?repair?
operations.4 In short, weintend a system that entertains competing hypothe-ses ?online?
as it processes input words.5This results in a set of analyses, providingsentence-level syntactic and semantic analysis mod-ules quick access to competing hypotheses, fromwhich the the analysis most suitable to the contextcan be chosen, including those which are misspelled.The importance of this kind of functionality is espe-cially well demonstrated in Pijls et al (1987), whichpoints out that in some languages?Dutch, in thiscase?minor, phonologically vacuous spelling dif-ferences are syntactically conditioned, making spellchecking and syntactic analysis mutually dependent.Such cases are rarer in Russian, but the functionalityremains useful due to the considerable interdepen-dence of morphological and syntactic analysis.5.4 Morphological analysis in contextFor the purposes of the FIB exercise currently un-der development, the finite-state morphological ana-lyzer we are building will of course be sufficient, butas exercises grow in complexity, it will be necessaryto use it in conjunction with other tools.
It is worthbriefly sketching how the components of this inte-grated system will work together to provide usefulerror feedback to our learners.If the learner has formed a legitimate word, thetask becomes one of determining whether or not it4These include transitions to states on no input symbol (IN-SERTION), transitions to states on a different symbol from thenext input symbol (SUBSTITUTION), and consumption of an in-put symbol without transition to a new state (DELETION).5It is worth noting here that GPARS was actually a sentence-level system; it is for the word-level morphological analysis dis-cussed here that we expect the most gain from our approach.7is appropriate to the context.
The FSA analyzerwill provide a list of possible analyses (i.e., aug-mented POS tags) for each input item (ranked, ifneed be).
We can explore using a third-party tag-ger to narrow down this output list to analyses thatmake sense in context.
We are considering both theHidden Markov Model tagger TnT (Brants, 2000)and the Decision Tree Tagger (Schmid, 1997), withparameter files from Sharoff et al (2008).
Both ofthese taggers use local context, but, as they providepotentially different types of information, the finalsystem may use both in parallel, weighing the out-put of each to the degree which each proves usefulin trial runs to make its decision.Since POS tagging does not capture every syntac-tic property that we might need access to, we are notsure how accurate error detection can be.
Thus, tosupplement its contextual information, we intend touse shallow syntactic processing methods, perhapsbased on a small set of constraint grammar rules(cf, e.g., Bick, 2004).
This shallow syntactic recog-nizer can operate over the string of now-annotatedtags to resolve any remaining ambiguities and pointout any mismatches between the items (for exam-ple, a noun-adjective pair where the gender does notmatch), thereby more accurately determining the re-lations between words.6 Summary and OutlookWe have outlined a system for Russian ICALL ex-ercises, the first of its kind for a Slavic language,and we have specifically delineated the types oferrors to which need to be analyzed for such amorphologically-rich language.
In that process, wehave proposed a method for analyzing the morphol-ogy of learner language and noted where externalNLP tools will be useful, making it clear how allthese tools can be optimized for learning environ-ments where the priority is to obtain a correct anal-ysis, over obtaining any analysis.The initial challenge is in creating the FSA lex-icon, given that no such resource exists.
However,unsupervised approaches to calculating the mor-phology of a language exist, and these can be di-rectly connected to FSAs (Goldsmith and Hu, 2004).Thus, by using a tool such as Linguistica6 on a cor-6http://linguistica.uchicago.edu/pus such as the freely available subset of the RussianInternet Corpus (Sharoff et al, 2008),7 we can semi-automatically construct an FSA lexicon, pruning itby hand.Once the lexicon is constructed?for even a smallsubset of the language covering a few exercises?thecrucial steps will be in performing error detectionand error diagnosis on top of the linguistic analysis.In our case, linguistic analysis is provided by sep-arate (levels of) modules operating in parallel, anderror detection is largely a function of either notic-ing where these modules disagree, or in recognizingcases where ambiguity remains after one has beenused to constrain the output of the other.We have also tried to advance the case that thisand future ICALL systems do better to build on ex-isting technologies, rather than building from thebottom up for each new language.
We hope that theapproach we are taking to morphological analysiswill prove to be just such a general, scalable system,one applicable?with some tweaking and to variouslevels?to morphologically-rich languages and iso-lating languages alike.Acknowledgments We would like to thank Det-mar Meurers and Luiz Amaral for providing us withthe TAGARELA sourcecode, as well as for valuableinsights into the workings of ICALL systems; and tothank Anna Feldman and Jirka Hana for advice onRussian resources.
We also thank two anonymousreviewers for insightful comments that have influ-enced the final version of this paper.
This researchwas supported by grant P116S070001 through theU.S.
Department of Education?s Fund for the Im-provement of Postsecondary Education.ReferencesAmaral, Luiz (2007).
Designing Intelligent Lan-guage Tutoring Systems: integrating Natural Lan-guage Processing technology into foreign lan-guage teaching.
Ph.D. thesis, The Ohio State Uni-versity.Amaral, Luiz and Detmar Meurers (2006).Where does ICALL Fit into Foreign Lan-guage Teaching?
Talk given at CALICOConference.
University of Hawaii, http:7http://corpus.leeds.ac.uk/mocky/8//purl.org/net/icall/handouts/calico06-amaral-meurers.pdf.Amaral, Luiz and Detmar Meurers (2007).Putting activity models in the driver?s seat:Towards a demand-driven NLP architecturefor ICALL.
Talk given at EUROCALL.
Uni-versity of Ulster, Coleraine Campus, http://purl.org/net/icall/handouts/eurocall07-amaral-meurers.pdf.Beesley, Kenneth R. and Lauri Karttunen (2003).
Fi-nite State Morphology.
CSLI Publications.Bick, Eckhard (2004).
PaNoLa: Integrating Con-straint Grammar and CALL.
In Henrik Holm-boe (ed.
), Nordic Language Technology, Copen-haguen: Museum Tusculanum, pp.
183?190.Brants, Thorsten (2000).
TnT ?
A Statistical Part-of-Speech Tagger.
In Proceedings of the Sixth Ap-plied Natural Language Processing Conference(ANLP 2000).
Seattle, WA, pp.
224?231.C?avar, Damir (2008).
The Croatian LanguageRepository: Quantitative and Qualitative Re-sources for Linguistic Research and LanguageTechnologies.
Invited talk, Indiana UniversityDepartment of Lingistics, January 2008.Clemenceau, David (1997).
Finite-State Morphol-ogy: Inflections and Derivations in a Singl eFramework Using Dictionaries and Rules.
In Em-manuel Roche and Yves Schabes (eds.
), FiniteState Language Processing, The MIT Press.Felshin, Sue (1995).
The Athena Language Learn-ing Project NLP System: A Multilingual Sys-tem for Conversation-Based Language Learning.In Intelligent Language Tutors: Theory Shap-ing Technology, Lawrence Erlbaum Associates,chap.
14, pp.
257?272.Goldsmith, John and Yu Hu (2004).
From Sig-natures to Finite State Automata.
In MidwestComputational Linguistics Colloquium (MCLC-04).
Bloomington, IN.Heift, Trude and Devlan Nicholson (2001).
Webdelivery of adaptive and interactive language tu-toring.
International Journal of Artificial Intelli-gence in Education 12(4), 310?325.Loritz, D. (1992).
Generalized Transition NetworkParsing for Language Study: the GPARS systemfor English, Russian, Japanese and Chinese.
CAL-ICO Journal 10(1).Mitton, Roger (1996).
English Spelling and theComputer.
Longman.Murray, Janet H. (1995).
Lessons Learned fromthe Athena Language Learning Project: Us-ing Natural Language Processing, Graphics,Speech Processing, and Interactive Video forCommunication-Based Language Learning.
InV.
Melissa Holland, Michelle R. Sams andJonathan D. Kaplan (eds.
), Intelligent LanguageTutors: Theory Shaping Technology, LawrenceErlbaum Associates, chap.
13, pp.
243?256.Nagata, Noriko (1995).
An Effective Applicationof Natural Language Processing in Second Lan-guage Instruction.
CALICO Journal 13(1), 47?67.Pijls, Fieny, Walter Daelemans and Gerard Kempen(1987).
Artificial intelligence tools for grammarand spelling instruction.
Instructional Science 16,319?336.Roark, Brian and Richard Sproat (2007).
Compu-tational Approaches to Morphology and Syntax.Oxford University Press.Schmid, Helmut (1997).
Probabilistic part-of-speech tagging using decision trees.
In D.H. Jonesand H.L.
Somers (eds.
), New Methods in Lan-guage Processing, London: UCL Press, pp.
154?164.Sharoff, Serge, Mikhail Kopotev, Tomaz?
Erjavec,Anna Feldman and Dagmar Divjak (2008).
De-signing and evaluating Russian tagsets.
In Pro-ceedings of LREC 2008.
Marrakech.Vandeventer Faltin, Anne (2003).
Syntactic error di-agnosis in the context of computer assisted lan-guage learning.
The`se de doctorat, Universite?
deGene`ve, Gene`ve.9
