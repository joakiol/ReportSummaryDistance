GENERATION FROM UNDER-  ANDOVERSPECIF IED STRUCTURES*DIETER KOHLUniversitlit StuttgartInstitut fiir ma.~chiltelle Sl)rachverarbeitungComputerl inguistikAzenbcrgstrmge 12D-7000 Stuttgart  1GermanyEMAIL: dieter t~adler.i)hilosol)hie.uni-st ut tgar t.d(,Abst rac tThis paper describes informally an algorithm for the gen-eration frolll un(|er- all(| overspceified feature structures.The generator require~ a grammar, :t goal category m~et afeature structure mq input, and derives all strings whosecorl'eSl)ondillg feature strlltCtllre is llot ill Colltrlu|iction tothe input structure.1 I n t roduct ionIn this paper I will present all algorithut for genera-tion fronl under- alld overspccitied feattlrc struetltresin the Lr'(; fi'amework 1.
Tile algorithm makes use ofthe concept of generation as slructuT~-driven deriva-tzon as it is described ill 114, 15, 16\].
Most of tile timethe algorithm works top-down breadth-first, similarto the gcncrator described ill \[7\] and \[61.
Only for thccreation of the final structure tile algorithm worksbottonl-Ill),2 Mot ivat ionThe algorithm given ill \[14\] allows to generate fi'om afltlly specified feature structure, e.g.
tile input struc-ture is equal to a structure that  would be derivedduring parsing.
For ai)plications otlter than testing agranl lnar for overgeneration the equality-condition istoo restrictive.The algorithm given in \[15\] and \[16\] then Mlows togenerate frolu all uuderspceified structure, if thereis a fully specified (semantic) predicatc-argontent-structure which is nnt ~dlowed to be extended dur-ing generation, e.g.
tile l)redicate-argunlent structuremust be conqllete and coherent with respect to thetarget grammar ,  One of the disadvantages of this al-gorithm is, that it must be marked for tile genera-tor, which substructure is not allowed to be changedduring generation.
Further, in certain applications,the condition that there is a partiM feature structurewhich is complete and coherent with respect to thetarget g rammar  might be ,also too restrictive.The generator described in this paper had been de-ycleped for projects whielt are involved in machinetranslation.
While one of the projects makes use onlyof syntactic information encoded in a feature struc-ture the other in'eject uses semantic information ~swell.
In I)oth cases the inI)ut feature structure for tilegenerator is at least undersl)eeified with respect to*The work reported here is part of the Sonder-forschungsbereich 340 Sp~chtheo,'etische G~ltndlagen der('omputerlingu?~tikl For details of the LFe, formalism see (1 bthe target grammar ,  not only for al;omic attr ibutevalue pail's but also fro' complex pairs.
This meanstile gencrator has to introduce information into thegiven feature structure to get a structure which isvalid with l-espect o tile target grtunmm~r.In both projects a similar architecture is used: 21. parse a sentellCe and return the feature structureFp2.
extrat:t ile inforlnation for the translation fromFp and build F,j3.
generate fronl F 9 a sentenceIn such an architecture the creation of Fg is usuallyindependent of the target grammar ,  in the sense thatthe creation is not automatical ly coutroUed by tiletarget gralnular.In machiuc traaslation the grammars  used for parsingand for generation are basically spccilic for tile twosingle languages one wants to translate between.
It isusually desirable to sl)eeify F~ only in ,~s rudimentaryand ms general lnauller ;L~; possible.
This lueans tile de-tails of how to generate a wdid surface string of timtarget language are only known in the target gram-mar,  rather than spelled out ill th" translation rela-tion.
Ill other words, a single grammar  G describesonly the relation of a surface string of a language Land a feature structure valid for tile g rammar  G of L.~trther ,  a valid feature structure for G will representonly information ecessary for L, but not neeessarilyinformation necessary for the lauguage to translateinto.
For example, a gramlaar  fro' German will de-scribe a fl~atttre structure which h,'us information forthe tenses past, present, and future, but no informa-tion about progressive ms it is required for English.Therefore, ill tile translation German to English thegenerator has to generate froln a feature structurewhich might be underspecified with respect to tenseinformation, while ill the translation Englislt to Ger-man the generator has to generate from a featurestructure which might be overspecified with respectto tense information.ht general, in describing the translation relation be-tween two languages one lta.s to face tile probleuts ofinterfaces:?
Infornmtion is missing and must be derived frointim target gralnmar,  e.g.
tile input structure isuuder,~pecified.2For the re~ons of this architecture see for example \[4\].There are also other MT projects like GRADE (see \[9\], \[10\]and \[8\]) which nl~tke use of a similar architecture.ACRES DE COLING-92.
NANTES.
23-28 AOt3T 1992 6 8 6 Prec.
oF COLING-92.
NANTES, AUG. 23-28, 1992?
There is more information than defined by tiletarget g rammar ,  e.g.
there is no string of the tar-get language for which the grammar  describesa feature structure which contains all attr ibute-vahle pairs given ill the iuput structure FS 9.
Theinput structure is overspccifled and the overspce-if)cation could be ignored duriug geueration.?
There is informatiou which is incousisteut withthe target g rammar ,  e.g.
the input structure isillforrned with respect to the target gramnlar.This requires ome error t reatment.All algorithm for generation then h~s to provideuwchanisms which allow geueration from underspeci-fled structures as well as from overspecilicd ones.
Thiswill allow to deal with certain types of trauslationmismatches as they are described for example in \[2\].Further, the t reatmcut  of fllformed structures houhlbe such.
that the invldid elements of the input struc-ture could he made visible for debugging purposes, ill-stead of just failing to generate anything.
As it turnedont ,  even for u led iuu l  s ized gra l l l l nars  i t  Call becon lequite dill)cult for a linguist to debug the grammarif there is only a debugger available which had beendevelolled for the generM l)urpnse programming lan-guage the system is inq)lemented ill, e.g.
prolog.3 Termino logyThe alger)tirol has been devehlped for grammarswritten in the Ll.'c;-formalism.
This uleal!s, it workson a eoutext-frec grammar  G with annotated fcatm'edescriptions.
Given a feature structure FSi,  as in-put the algorithm has to generate all those surfacestrings, for which G ;Lssociates a feature structureFS,j, with FSI~ coutpatihle to FS,~.V~rhat co're, pal)hie means depends on tile kind of ap-plication the generator is used iu:?
If the application is to test a grammar  for over-geu(,ration, FSin lnust lie equal to FSu, e.g.
lieiuformation is introduced into or deleted fromFSi,, during geueration, and \]i~Si,, unifies illterms of feature unification with FS,j.?
If the alll)licatiou is to test whether a structure ofa certain attr ibute might be sufficient for genera-lieu, i.e.
whether the senlautic structure does notm'ergenerate, FSI,~ must I)e subsumed by FS,~,e.g.
all information of FSI,, nlust be required forgeneration, and it is only allowed to introduceiMonnation lute FSin.?
If the application is machiue trauslation, FSi,,and FSI~ must unify, e.g.
FSI,, might containnlore inlorulation and ,also less iuforluatiou th~t.uFS u .Del)endiug on tile al)l)licati(m the algorithm isi)arametrized as to whether it allows the introduc-tion of information into FSi,  and whether it allowsFSI, to be overspecified.For those not familiar with LFG I will give a shortoverview of tile elements of the feature descriptiousas I will use them afterwards.
In general a featuredeseril)tiou consists of a coujuuction of equations ora disjunction of feature descriptions.
In this paper Iwill only cousider feature descriptions without dis-junctious.
The equations are distinguished into?
defining equations indicated by tile operator =?
inequatimts indicated by the operator #?
constraining equations indicated by the operator=eAll equation consists of a reference to a structure, tileel)era)or , and ,'L,~ second argulueut of the operatiououe of?
all atomic v~due like raas?
a semantic form, indicated by double quotes,with an atou) ic  uau le  aud  al l  opt iona l  a rguu leutlist,, i.e.
"man" ,  "give (SuuJ,ot~J}"?
a refere l lee to a s t ruc tureA reference to a structure is either a mete-variableor a path applied to a mete-variable.
Examl)les are?
the meta-wtriable 1, which stands for the struc-ture assnciated with tile nlother l lode,  e.g.
thecategory given on tile left hand side of a rule.?
ttw meta-variMilc 1, which stands fur tile struc-ture a.ssociate(1 with a (laughter uode of a rule,e.g.
the nolle on the right hand side of a rulewhere tile feature description is an annotat ionof.?
(~ GENI)ER), which refers to a structure underthe attri l lute (;\[.
;NDI.~R ill tile feature structureassociated with tile mother  node.Equations, which have references on both sides of aequatiou arc called ree~ttr(trtey quations.Semantic forms describe unique vMues, e.g.
while twoatoufic values unify if they are described by the samefern), two semantic forms will not.
The arguments ofa semantic form of at) attr ibute A are paths whichare members of the governable f~mctions of A. Thisset will be named as gf  (A).
%) alh)w semantic forms)~s possil)le values tilt ally attr ibute is a generaliza-tion of the  Ilse of s l tn lant ic  forll lS a,s they  are  g ivenin \[1\] where semantic forms are only values of the at-tr ihute PRED.
Semantic forms contain all informationueeessary to test the conditiolm of COml)leteness andcoherence.3.1 Coherence and CompletenessUsing the generalization tile conditious of complete-ness and coherence ms given in \[3, pp.
211/212\] arereformulated ~s?
A feature structure 5' is locMly complete iff foreach attr ibute A in S where g f (A)  is non-emptytile governable functions defined by tile vMue ofA exist ill S with a value for the attr ibute A, andif all values required are defined.
A structure isconq)lcte if all of its substructures are locallycomplete.?
A feature structure S is loeMly coherent, iff foreach attr ibute G of S which is member  of g f  (A)G is governed by the value of A, e.g.
the argu-lueut list of the vMue of A contains G, and if,all attr ibutes of S are given by tile g rammar .
Astructure is coherent if ,all of its substructuresare locally coherent.Ac~rEs DE COLING-92.
NnivrI,kS.
23-28 ^ olyr 1992 6 8 7 PRec.
OF COLING-92.
NANTES.
AUG. 23-28.
1992The struettn'e FS derived in the generation processmust at least fttllfiqll these contlitions of completenessand coherence, e.g.
ally violation of one of these con-ditions is treated as an error.
Since the input struc-ture FSi,, should be part  of the derived structure,the condit ions for attr ibate-valae pairs of the inputstructure are modif ied to be able to use the inputstructure to control the generat ion process and to bcable to allow overspecification, a?
If  an att r ibute A of FSi, is licensed by a defin-ing equation or inequation in the rules of tileg rammar  which are not explicitly excluded byFSi,, it shouhl be checked that A is actually con-stnned dar ing generation.
Th is  condition extendsthe condition of coml)leteness.?
If an att r ibute A of FSi, does not occur in anyequation of the graulmar,  tim input structureis ovcrspecified.
It depends on the application,whether this type of overspeeification is allowed,e.g.
whethcr it should be considercd a.s a vio-lation of the coherence condition or shoultl beignored.?
If  an att r ibute A of FSi, is not lieeased by adefining eqnation or an inequation in the rulesof the granunar  which are not explicitly excludedby FSi, the input structurc is overspecified.
Itdepcnds on tbc allplication whether this type ofoverspecifieatiml is allowed.
In ease overspecifi-cation is allowed, A and its value are ignored,otherwise it is treated ,as a violation of the co-herence condition.As indicated by tile last extension to the coherenceand completeness conditions, it depends on the ap-plication what  kind of input structure is consideredto be a valid one for the target  gralonlar.
Ill case agrammar  should he tested for overgeneration a validinput structure is not allowed to be extended tlnriuggeneration and is not anowed to be ow~rspecifictl.In the case of machine translat ion the input structurecan be considered as a valid one, even it is underspec-ified.
Del)ending on the language pair it might be alsoapl)ropriate to consider an overspeeified input struc-ture ms valid.4 The  A lgor i thmThe algor i thm works on a granmmr tlescription andan input feature structure.
The grammar  descriptioncuasists of context free rules with annotated featuredescriptions.For siml)licity it is assumed that the annotated fea-ture descriptions do not contain disjunctions.
A dis-junction in a feature description can always be trans-formed into a disjunction of nodes on the c-structurelevel.
Furthernmre,  a siugle ode is a concatenation ofterminal and uon-termiual nodes, and for each cate-gory C of a g rammar  the rules for C are treated asone disjunction.aThis mealm, it is not sufficient to require, that the inptltstructure has to Ilnify with a structure derived from the gram-mar to get a generatim~, since this would allow to producesentences which do not contain all of the semantics given inthe inptll structure as well ms to produce sentences with anykind of possible modifiers the grammar could derive, that isinfinile many.T im algorithm starts  witb a current category C~, ini-tialized with the gual category, and a current fea-ture structure FS~, initialized with the input featurestructure FSin.The algorithm proceeds as follows:?
Match the current feature strncture FS~ withthe current category C~ by matehiug FS~ withthe feature descriptions FDi of the nodes N i  onthe right hand side of tile rule for Cc, where FScis bound to the mata  variable T which deaotatesthe structure associated with the nlother nodeC,, on the left hand side.
The matching workstop-down I)readth-first.
Dur ing tile match FS~will lint be nmdified.?
Eztend FS,.
by the application of a feature de-scription FD.4.1 MatchingThe matching of the current feature structure FSewith the current category C~ will always te,'minate.During the matching a structure which is used as achart and an agenda is built which keeps track of?
which structures are already matched with whichcategories.?
whether there occurs a trivial recursion, e.g.given a structure and a category there is a re-cursion on tile c-structure level which uses thesalne structure.?
tim use of whicb nodes can be constrained bytim input strncture,  and what  is tile result, e.g.is the usage of the node excluded or licened bytile input structure.?
which nodes are lmrely eontroUed on tilee-structure level, e.g.
there it~ no equation fora node which dcnotates the structure of themother  node.
Such nodes bare to produce onlyfinite many snhstr ings.For each category C ~fll its rules arc considered inparallel, which avoids ally dependency a lmut  the or-dering of the single rules for C.For each node N on the right hand side of C~ theinput feature structure is matched with its featuredescription FD.
This match results ill at least one ofthe following descriptions:Exclus ion:  FSc is not coml)atil)le with FD.
There-fore the node N will be excluded.
Other  resultsof the matching are of no relevance.
The exclu-sion of N excludes those nodes which are part  ofthe same rule as N.Act ivat ion:  FD defines a path-value-pair  which isalready part of FS~, or FD defines a reentrencywhich already exists ill FSc.Examinat ion :  In FD occurs a reentranee quationwhere only one of the paths exists ill FS~.
Theresult ezamination contains the category CNnamed by the node N and tile associated sub-structure FS..Tile folh)wing cases are dist inguished:Amw~s DE COL1NG-92.
NANTES, 23-28 AOt~q" 1992 6 8 8 PROC.
Or COLING-92, NANTES, AUO.
23-28, 1992tr iv ia l  equation: N is a non-terminal node.The catgories C,: and CN are associatedwith tile same (sub)structure.
Beside 1" - .\[equations uf the form (1 X) = (1 X) arealso considered ,as triviM equations.
(1 X) = l: N is a non-terminal node.
The cate-gory CA" will be matched with the structuredenotated by (~ X).
(~ X) - (~ Y): N is a iron-terminal (lode.
Tilecategory CN will be matched for (.\[ Y)with the structure denotated by (1 X).
Thisease covers the treatment ofmultiple ro~)tedstructnres a-s they nlight occur in gralnnlarswritten in all IIPSt; style 4.
(T X) = (1 V): C'~ will be mat,:hed for (1 Y)with tile structure denotated by (1 X).Uncontro l led:  FD does not contain any equationwhich can be applied oil FSc.
In this case FS~does not eontroll the oceurcnce of tile substringassociated with the node N, and it depends ontile partial c-structure alone given I W the cat-egory C~, whether there are tinite ninny sub-strings described.Suspension: FD contains equations which allowcontroll of generation by FS,., but FS,, doesnot contain enough information to make a (teci-sion al)out exc\[usiolL activation or exatninatiolt.Therefore, the matching of N with FS~ has tohe decided later.
In case the application forbidsintroduction of infornmtion into FS~.
during gemeration the conditions of suspension will lead toimmediate xclusion.Only tile results activation and examination mayoccure in parallel The result examination causes afurther exanfination of the category CN with tileselected (sub)-structure, if they have (lot Mready()(!eli eXalllined and are not already under exaluilla-lion.
Thus tho matching of a category with a (sub)-structure is performed only once during the matchingof the input feature structure with the goal category.This guarantuecs the termination of the matchingand is efficient.Since the matching works top-down breadth-first it isllOSSible to detect inconsistencies between the iuptttfeature structure and parts of the rules fairly early.From the complete match it is possible to deter:mine the set of these attribute=value pairs, whichare part of tile original input structure and whichcould I)e used either by a defining equation or allincquation.
These attribute-value pairs are markedthat they have to be used which is an equivalentof adding temporarely constraining equations to thegrammar, which guarantee that a maxinmm of ill-formation from the input structure is used for gen-eration.
It should be noted, that this step is onlynecessary, if overspecification f the input structureis allowed.
Otherwise all attribute value pairs of theinput structure could be marked at star(up that theyhave to be used during generation.The matching produces a set of IIossible solutions.This makes it possible to distinguish a failure causedby an illegal input structure from the generate-and-test Iiehaviour of the backtracking *nechanism.
Since4 For a description ofItes(\] se~ 11 l\].there is enough illfornlation of the current goal in tilegeneration process, it is possil)le to produce an errormessage which descril)es* the  c-structure build so far* the node and its ammtated feature descriptionwhich is inconsistent with the input structure* the part of tile input structure which caused thefailure~l(ch all error luessage v?onld lie in tern(s of the gram-mar rather than in terms of the iinplenlention lan=guage of the algorithm.
An error message ouhl beI couldn't yenemtc aTt NP for the structure \[ PRH) (ua((\] spt:c idef J because SPEC' : idef is ille.rlalfor the grammar.Since it is distinguishc<I which parts of the struc-ture are intruduccd uring generation it is possibleto show tufty those faihu'es which are caused by theoriginal input structtu'e.
This would also allow one toignore illegal parts of the inliut structure mnpletelyalld t\[) ev~211 ~Cllcl';ttc fr()lll illformcd structures.
Incon(flint to the cmue of overspccification this wouldrequire repairing either tile input structure or extend-ing tile target gr~.
(nlllar.4.2 ExtensionTile extension of FS~ by a feature description FDmeans, that all information fi'om FD is incorporatedinto FS,,.
Since only non-disjuuctiw~, feature descrip-tions are cmtsideretl it is not necessary to describetile treatment of disjunctive information.
The onlysource of alternatives are the rules.
These alterna-tives are treated by backtracking.
The selection ofalternatives starts with those disjuncts, which do notlead to reeursion.
This guarantees that recurs(on isapplied oaiy in those ca.ses, where it could be part oftile c-structure to generate.The extension h~t~ several aspects.
First, it is madeexplicit in tile feature structure which attrilmte-valuepairs are defined by the grammar, and how often adefinition h~u oceured uring tile generation.
The lat-ter information is used to stop the generation from in-finite loolis I)y giving a maximum amonnt of repeateddefinitions of the same l)ieee of information.
Reason-able limits are values between 10 and 20.
It shouldbe noted that the semantic foT~ns of LFG reduce thislinfit to 1 for attributes which take a semantic for(((as value 5.Second, a partial representation f the e-strnctureis built in parallel to the feature structure, whichallows at the end of the generation process to ex-tract the surface string by a traversal of the completec-structure.Third, it can be deternfined which attribute-valuepairs have been introduced into the original struc-ture.
Only these attrilmte-value pairs are relevant toreexamine suspended nodes.SFor LFG grammars this aspect of semantic forms is themain reason that tile generation will terminate without hesuperficial limltati!m of repeated definitions.ACRES DE COLING-92, NANTES.
23-28 AOI3T 1992 6 8 9 PROC.
oF COLING-92, NANTEs, Auo.
23-28, 19924.3 The  main  loop1.
For each node Nj of the right hand side of therule of the current category Cc match tlle anno-tated feature description FDj with the currentfeature structure FS~.
The matching ternfiuatesalways, and during the matching no new infor-mation is introduced into FSc.
The match deter-miues, whether the node Nj might be excluded,activated, suspeuded, and whether the categoryN should be examined for some part of FSc.2.
If there are uo nodes left which can be activated,nodes which are still suspended axe excluded attdtile filial coherence and completeness tests areperformed on the input structure FSI,.
In caseof success the surface string can be extractedfrom the c-structure which is built in parallelto the derivation of the input feature structure.Ill case of failure, other solutions are tried bybacktracking.3.
Select only these nodes which can be activatedwhich will not lead to a recursion.
Extend thepartial feature structures associated with thesenodes by applying the annotated feature descrip-tions.4.
Compaxe those nodes again which have been sus-pended ms in step 1.5.
Repeat the steps 3 aud 4 until there are no nodesleft which can be activated aud which do not leadto it recursion.6.
Nodes which could be activated but lead to re-cursiou axe activated only in case there is ltO in-dication that the recursion conld be applied in-finite many t imes .7.
Contimte with step 2.5 ExampleIn order to i l lustrate how tbe algorithm works, I willoaly give a very simple and somewhat superficial ex-ample.
For more detailed examples especially on thetreatment of recursion see \[5\].
7The exantple makes nse of the grammax in figure 1 togenerate a German sentence with a simple NP and allintransitive verb.
The grammar  is written ill a usualLFG notation.
The input feature structure for genera-tiun is given in figure 2.
For the example it is assumedthat the feature stucture contains the semantic rep-resentation of the analysis of the Englisb sentencethe man is running which should be translated intoGerman, The goal category for generation is S.The generation starts with the matching of S withFSo.
The NP  node of the right haud side of the Srule is suspended, since there is no attr ibute SUBJin the input structure.
The trivial equation of theV1 a node immediately leads to the matching of FSowith the category VP .
The trivial equation on the Vnode leads in turn to the matching of the category Vwith FSo.
The existence of (SEM REL) = r~n in FSo6In this paper infinite loops are only assumed in case thelimit of repeated efinitions is reached.
A more detailed treat-ment of the detection of iaflnite loops is given in \[51~There would be not etlollgh space to show a more compli-cated example in this paper.lUalUUder:rennt:rannte:S ~ NP VP(T SUBJ )  = I T = lNP ~ D NT=lT=lNP ~ NT=IVP ~ Vl= lN, (T PRED) = "mmm"(1 NUM) = sg(T GENDER) = mas(T CASE) # gen(\]" SEM REL) = "man"(T SEM NUM) = sgD, (T SPEC) = def(j" GENDER)  = mas(1 CASE) = nom(T NUM) = sg(T SEM SPEC) =defV, (T PRED) : "rennen (SUBJ)"(1" TENSE) = present(T SUBJ CASE) :- nora(I SUBJ NUM) : sg(T SEM REL) = "run"(\]" SEM TIME START) = now(1" SEM ARG1) = (T SUBJ SEM)V, (T PRED) = "rennen (SUBJ)"(T TENSE) = past(\]" SUBJ CASE) = nora(T SUBJ NUM) = sg(\[ SEM REL) -- "run"(T SEM TIME START) = \])ast(I SEM TIME END) = past(T SEM ARG1) = (1" SUBJ SEM)Figure 1: Example grammarwould allow to activate botb verbs of the example lex-icon, but the equation (T SEM T IME END) = pastexcludes the eutry for rannte.The resulting partial c-structure of the match isS - -NP  .
.
.
suspended .
.
.VP - -V - - " rennt"Tile following attr ibute value l)alrs of FSo must beused during generation:(SF, M REL)(SEM ARG1)(SE1vl TIME START)Since tile solution set of the match does not require touse (SEM TIME END) tiffs information can be ignoredfor the further generation, although it had been usedto exclude an entry.
This shows a case of overspeci-fieatiou, where an attr ibute is in the set of possibleattr ibutes of a gramntax but is not always determinedby the grammax.The extension of FSo then leads to the structurein figure 3.
It should be noted that  the algorithmautontatically selected the semantic head, althoughACTES DE COLING-92.
NANTES, 23-28 AOt~q" 1992 6 9 0 PROC.
OF COLING-92, NAh'TES, AUG. 23-28, 1992feature structure c-strnctnre \] " rau"  I +L +,,LaltG1 53/S,','?
clef / / / \[\] s,+,\[\] sg ' / /Figure 2: Inl)ut structure for geucrationthe bead is eml)edded in at substructure.
Tiffs meansthe algorithnl is implicit head-driven without any as-sunq)tions which part of an inj)ut structure the headshould be.
As it is shown ill \[5\], this allows to gen-erate in cases of head-switching, where syntactic att(lsemantic head differ.\ [ \ ]5EMPRED'\['ENSI'~\[ REL "ruu'l \]A,tGl \ [ \ ]  \['s~::,~c '?
;n}an"lLl'I M F \ [~ \[E'~ADtT }::'t;: r e\] J"renneu (SUBI)"l)resents+ ?\[++:+'+l;llll_ t smM \ [ \ ]  JFigure 3: First extension of the input structureTit(" introduction of SUBJ leads to tim matching ofthe suspended NP  imde with FSo.
The equation(T SUB J) = J. leads to the nmtchiug of the categoryNP  with FS4.For the NP  rule there are three nodes to bematched with FS4.
Siucc on all three nodes a triv-ial equation is atmotated, the categories D andN have to be matched with FS4.
The equations(l SEM REL) = man and (T SEM NUM) = sg acti-vates tile noun curry, and requires that (SEM ltEL)and (SEM NUM) of FS4 nlust be nsed for geueratiou.The equation (1" SEM SPEC) = dcf activates the de-terminer entry and requires to use (SEM SPEC) ofFS 4 .The two alternatives of the NP  rule "allow to considertwo lmssible extension shown in table 1.Since (SEM SPEC) of FS4 must be used, the second al-ternative will be rejected by tile final constraint test.Therefore, the only solution is tile first alternative.This results in tile e-structnrcS--NP- -D- -"der"N IllnanllllVP- -V - - " rennt"from which the string der mann rennt is generated.I.2.
:?n t/SEM \ [ \ ]  / ~IP~.
",nauu" //GENDEIt in;~s |Lsvl.
:c def J\ [ \ ]  I m'+M X\] I PRE1) "tltanu n\[G I~\]NDI~R Illas \]NP- -D  -"der"N---"nlalul"NP--N )'nlann"Table 1: Possible exteusious of the NP  rule6 Compar ison  w i th  Sh iebers  approachThe semantic-head driven ,algorithm giveu in \[13\]also starts with a tol)-down initalizatiou with aI)ottom-u l) generation.
In Shieber ct al the nodeswhicll eoutam the semantic head arc determined dur-ing tile couq)ilation of the grammar.
This seems tobe a bit problenmtic fur gramluars which describehead-switching t)henomcnons, ~ in 100 l~tres of wine,where a possibh~ ananlysis is that 100 litres syntacti-cally governs ultn.e, but semantically is a moditicr ofwine.
The algorithm llreseuted here does not requireto llrecomlmte tile nodes which contain tile semantichead, but finds the head relewmt for the giveu inputstructure automatically.Tile problem with free variables for the coherenceconstraint given in Slficbcr ct al does not occur forthe alguritbm l/reseuted in this paper, since it "alwaysdistinguishes between the struetnre and the descril)-tiun of the structurc, and keeps track of which partsof the structure are already derived during genera-tiun.
Since the a\[gorithln I)resented here always hmqinfurmatiml at)out wlfi(:h parts are from the originalinput structure and which ones have been added, itis possible to check the coherence couditiuu at anystep of the generation process.
In addition, the solution in Slfieber et alwith binding variables eemssomewhat llroblematic, since it requires to know forsure, that the variable part of the semantics houhtuot lie exteuded.The augmentation of the generator described illShiet)er et alwith a chart to avoid rccomputationatt(l elinfinate redtmdaucies is an integral part of thealgorithut presented here.7 SummaryIll tiffs l)aper an algoritlun had t)een described whichcan be used to generate from filly specified featurestructures a.s well as front variants of under- or over-specified feature structures in the LFG framework.The algorithm covers the cases given it, 114\] and \[151&s a subset.
The treatment of recursion allows evenfor infinite many possible generations that  the soht-tions can I)e presented one by one, e.g.
the generatorwill not go into an infinite loop between two solutions.The generator is implicit head-driven, e.g.
it selectsthe head automatically for a given input structurewith respect o the target grammar.
As it is shown inACTES DE COLING-92, NAMES, 23-28 ^ O~rt ' 1992 6 9 1 PROC.
OF COLING-92.
N^N'rEs, AUG. 23-28.
1992\[5\] this behaviour of the algorithm allows the efficienttrcatment of head-switching phenomenons.It has been shown, that the algorithm provides infor-mation which allows in ease of failure to produce de-bugging information in terms of the target grammar,rather than in terms of the programming languagethe algorithm is iml)lemented in.The algorithm is implemented in PROLOG in the ed-inburgh syntax.
Currently the implemention of thedelmgging meehmfisms is incomplete.Although it is not shown in tiffs paper, the techniqueused for the generator could be easily adopted forparsing, where the input string takes tile part of theiuput feature structure.
Ill this sense tile c-structureis only considered as an auxiliary structure where thegramntar describes basically a relation between asur-face string and a feature structure.
To adopt ile tech-nique for parsing would have the advantages?
to use basically the same maclfinery for parsingand generation where the nmehinery isoptimizedfor each task,?
to have the same improved possibilities for de-bugging, ande to allow to start the parsing of striugs while theyare typed in, and not only after the completestring to be parsed is known.One of the major goals for the fi~ture development ofthe algorithm is to reduce the use of backtracking ,asmuch as possible by using disjunctions as part of thefeature strncture.The algorithm should be also applicable to othergrammar formalisms like PATR-II (see \[12\]) whichmake use of a context-fl'ee backbone and anotateddescriptions.
It is also intended to nse tlte algoritlnnfor formalisms like ItPSC.References\[11 Joan Bresnan, editor.
The Mental Represen-tation of Grammatical Relations.
MIT Press,Cambridge, Massachusetts, first edition, 1982.\[2\] Megumi Kameyama, Ryo Ochitani, and StanleyPeters.
Resolving translation mismatches withinformation flow.
Iu Proceedings of the 29th An-nual Meeting of the Association for Computa.tional Linguistics, pages 193 200, Berkley, Cali-fornia, USA, 18 21 June 1989.
University of Cal-ifornia, Association for Computational Linguis-tics.\[3\] Ronakl M. Kaplan and Joan Bresuan.
Lexical-flmctional grammar: a formal system for gram-matical representation.
I  Joan Bresnan, editor,The Mental Representation f Grammatical Re-lation.s, chapter 4, pages 173 281.
MIT Press,Cambridge, Massachusetts, 1982.\[4\] Ronald M. Kaplan, Klaus Netter, JiirgenWedekiud, and Annie Zaenen.
Translation bystructural correspondences.
In Proceedings ofthe 4th Conference of the European Chapter ofthe Association for Computational Linguistics,Manchester, 1989.\[5\] Dieter Kohl.
Generierung aus unter- undiiberspezifizierten Merkmalsstrukturen in LPG.Arbeitspapiere ties SFB 340 SprachtheoretischeGrundlagen flit die Computerlinguistik BeriehtNr.9, Institut fiir nlaschinelle Sprachverar-beitung, Universit?t Stuttgart, July 1991.\[6\] Dieter Kohl and Stefan Momma.
LFG basedgeneration in ACORD.
In Gabriel Bes, edi-tor, The Construction of a Natural Languageand Graphic Interface Results and perspectivesfrom the ACORD project.
Part Generation illACORD, Chapter 5.
Springer, (to appear) 1992.\[7\] Stefan Momma and Jochen DiJrre.
Genera-lion from f-structures.
In Ewan Klein and Jo-hun van Benthem, editors, Categories, Polymor.phism and Unification.
Cognitive Scieuee Cen-tre, University of Edinburgh and Institute forLanguage, Logic and Information, University ofAmsterdam, Edinburgh and Amsterdam, 1987.\[8\] Makoto Nagao.
The transfer l)hase of tim nmmachine translation system.
In Proceedings ofthe 11th International Conference on Computa-tional Linguistics, pages 97-103, 1986.\[9\] Makoto Nagao, Toyoaki Nishida, and Jun-ichiTsujii.
Dealing with incompleteness of linguis-tic knowledge in language translation.
In Pro-ceedings of the lOlh International Conference onComputational Linguistics, pages 420 427, 1984.\[10\] Jun-ichi Nakamura, JmMehi Tsujii, and MakotoNagao.
Grannnar writing system GRADE ofrnn-maehine translation project and its elmrae-teristics.
In Proceedings of the lOth InternationalConference on Computational Linguistics, pages338 343, 1984.Ill\] Carl J. Pollard and Ivan A.
Sag.
Information-Based Syntax and Semantics.
Vol.
1 Fundamen-tals, volume 13 of CSLI Lecture Notes.
Univ.Press, Chicago, 1987.\[12\] Stuart M. Shieber, Hans Uszkoreit, Fer-nando C.N.
Pereira, J. Robinson, and M. Tyson.The formalism and implementation of PATR-Ii.
In B. J. Grosz and M. E. Stiekel, editors,Research on Interactive Acquisition and Use ofKnowledge.
SRI report, 1983.
PATR refereuee.\[13\] Stuart M. Shieber, Gertjan van Noord, RobertC.
Moore, and Fernando C.N.
Pereira.
Semantic-head-driven generation.
Computational Linguis-tics, 16(1):30 42, March 1990.
Refs for bottom-Ul) geueration problems.\[14\] Jiirgen Wedekind.
A concept of derivationfor LFG.
In Proceedings of the 11th Inter-national Conference on Computational Linguis-tics, pages 486-489, Bonn, West Germany, 25-26 August 1986.
Institut fiir Kommunikations-forsclmng und Pbonetik, University of Bonn.\[15\] Jiirgen Wedekind.
Generation as structuredriven derivation.
In Proceedings of the 12th In.ternational Cortference on Computational Lin-guistics, pages 732-737, Budapest, Hungary, Au-gust I988.\[16\] Jiirgen Wedekind.
Uniflkationsgrammatikenund ihre Logik.
Dissertatiou, Universit/i.tStuttgart, Stuttgart, 1990.ACRES DE COLING-92, NANTES, 23-28 AOtTr 1992 6 9 2 PROC.
OF COLING-92.
NANTES, AUG. 23-28, 1992
