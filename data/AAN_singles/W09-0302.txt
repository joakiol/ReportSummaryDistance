Proceedings of the EACL 2009 Workshop on Language Technology and Resources for Cultural Heritage,Social Sciences, Humanities, and Education ?LaTeCH ?
SHELT&R 2009, pages 10?17,Athens, Greece, 30 March 2009. c?2009 Association for Computational LinguisticsAn intelligent authoring environment for abstract semanticrepresentations of cultural object descriptionsStasinos Konstantopoulos and Vangelis Karkaletsis and Dimitris BilidasInstitute of Informatics & TelecommunicationsNCSR ?Demokritos?, Greece{konstant,vangelis,dbilid}@iit.demokritos.grAbstractIn this paper we describe an authoringenvironment for the creation of cultural-domain ontologies and the associated lin-guistic and profile annotations, for dy-namically generating adaptable natural-language descriptions of the cultural ob-jects in the ontology.
Adaptation isachieved at the expense of considerableauthoring effort, since it relies on pro-viding numerical parameters for each on-tological entity.
To assist the authoringprocess, we provide an intelligent author-ing back-end that completes manually au-thored models by inferring missing values.This intelligent authoring support facility,combined with immediate previews, canconsiderably reduce the effort required tocreate a fully functional model as the au-thor can iterate through cycles of provid-ing information, previewing the generatedtext, and only elaborating the model wherethe text is unsatisfactory.1 IntroductionCultural heritage organizations create and main-tain repositories of (digital representations of) arti-facts, including extensive semantic knowledge andmeta-data about the cultural objects in the collec-tion.
Such semantic repositories are typically seenas an opportunity to catalogue, index, and classifythe cultural content, for the purpose of providingsemantic searching and browsing facilities to pro-fessional users as well as to the general public.In this article we discuss another unique op-portunity that cultural heritage repositories offer:the opportunity to automatically generate adapt-able and customizable textual descriptions of thecultural objects for a variety of audiences and pur-poses.More specifically, we present ELEON, an au-thoring environment for creating abstract concep-tual representations of cultural heritage object de-scriptions, as well as the linguistic and profil-ing models necessary to realize those into con-crete natural-language descriptions exploiting nat-ural language generation technology.
The advan-tages of this approach, as opposed to directly au-thoring natural language descriptions, are mani-fold:?
Abstract descriptions constitute machine-readable and reusable models of the culturalheritage collection.
Besides deriving naturallanguage descriptions, such models can beused for the semantic indexing and search-ing of the collection.
This can also be seenfrom the reverse perspective: the natural lan-guage descriptions can be derived from ex-isting conceptual models created for the pur-pose of semantic indexing and searching.?
The conceptual descriptions are realized us-ing domain-independent, reusable linguisticmodels.
By clearly separating the conceptualand linguistic models, the same conceptualdescriptions can be realized in different lan-guages and the same linguistic models can beused to realize descriptions of different col-lections.?
The dynamic generation of the descriptionis driven by profiles that personalize the de-scriptions for different audiences, but alsoadapt them to different contexts and situa-tions.ELEON provides great flexibility in finelyparametrizing how the generated descriptions areadapted to different audiences and situations.
Fur-thermore, the authoring environment is backed byArtificial Intelligence tools that assist the author10by automatically inferring missing profile param-eters, alleviating the burden of explicitly providingall necessary details for large numbers of objects.Although the system can be used in a variety ofdomains and Human-Computer interaction appli-cations, it is particularly pertinent to cultural her-itage content, which is interesting for wide rangesof age groups, levels of expertise, cultural and edu-cational backgrounds, situations and contexts, em-phasising the need for personalized and custom-tailored text.In the rest of this article we first set the back-ground by describing the authoring environmentand particularly the way in which it can be used tocreate the conceptual model of the collection andpopulate it with data (Section 2) and then proceedto to describe how adaptation parameters are rep-resented and used by human-computer interactionsystems (Section 3).
We then focus on the maincontribution of this paper by describing the intel-ligence mechanism behind the environment (Sec-tion 4), discuss related work (Section 5), and con-clude (Section 6).2 Authoring Domain OntologiesELEON enables its authors?i.e., persons that havedomain expertise but no technological expertise?to create a new application domain, defining theontology of the new domain, as well as the cor-responding language resources and the profilingmodels.
All these elements are used by a natu-ral language generation (NLG) engine in order toderive natural language descriptions from the con-ceptual representations in the ontology.
The envi-ronment also enables authors to generate text pre-views using the NLG engine in order to examinethe effect of their updates to the domain ontology,the language resources and the profiling parame-ters.Concerning the language resources, these affectthe content and the surface form of the derivedtexts, leading to more varied texts and contain en-tries for nouns and verbs for each supported lan-guage.
With regard to the profiling parameters,these are used by ELEON to adapt the generateddescriptions to the users?
preferences and knowl-edge.ELEON ontologies encode domain knowledge inthe form of concepts, instances of concepts, (en-tity types and entities respectively in ELEON ter-minology), and relations between concepts and in-stances.Figure 1 illustrates part of such an ontologythat encodes knowledge about the ancient Agoraof Athens.
This ontology is used in the INDIGOproject,1 implementing a use case where the sys-tem guides visitors through an exhibition on theancient Agora of Athens, introducing the build-ings to them before they attend a virtual 3D tourof the Agora hosted at the Foundation of the Hel-lenic World.
The examples used in this paper aredrawn from this domain.In the example of Figure 1, ?stoa-of-attalus?,is an instance of the entity type Stoa, a sub-type of Building which is a sub-type of Archi-tecturalConstruction, a sub-type of PhysicalOb-ject.
Properties and relationships are expressedusing fields.
For any entity type, it is possibleto introduce new fields which then become avail-able to all the entities that belong to that type andits subtypes.
In Figure 1, the field locatedIn isintroduced at the ArchitecturalConstruction en-tity type and is defined as a relationship betweenArchitecturalConstruction and Place, while theusing-period field defines a property of the Phys-icalObject entity type.
Consequently, all enti-ties of type PhysicalObject and its subtypes, i.e.ArchitecturalConstruction and ArtObject inheritthese fields.
Furthermore, all the instances of theseentity types and their subtypes also inherit thesefields.The proposed system expresses such ontologi-cal conceptual models in OWL [11], an ontologyrepresentation language that is one of the core se-mantic web technologies.
OWL models can becreated from scratch in the authoring tool or im-ported, facilitating the use of well-established con-ceptual models in the cultural heritage domain, asalmost all can be (or already are) expressed as on-tologies.
The CIDOC conceptual reference model,for example, also provides an official OWL ver-sion.2 Most other cultural heritage vocabularies,thesauri, and classification schemes using XMLor relational database data models are consistentwith the Simple Knowledge Organization System(SKOS) and can be automatically converted to on-tologies.31See http://www.ics.forth.gr/indigo/ andAcknowledgements section.2http://cidoc.ics.forth.gr/official_release_cidoc.html3See http://www.w3.org/2004/02/skos/about SKOS.
A variety of tools exist for con-verting SKOS data models to, or aligning with,11Figure 1: ELEON screen, showing the class hi-erarchy and the individuals of each class (left),the properties of the currently selected individual(right top), and a preview of the description of theindividual (right bottom).
The preview languageand profile can be seen on (and selected from) thebar at the bottom of the screen.3 Description AdaptationBesides modelling the cultural heritage domainitself, ELEON supports annotating the objects,classes, and properties of the domain with adapta-tion and linguistic information.
Such informationis used by NLG engines to (a) plan the descrip-tion that will be generated, adapting it to the cur-rent audience and circumstance, and (b) realize theplanned description in a particular language.Realization is based on clause plans (micro-plans) that specify how an ontological propertycan be expressed in each supported natural lan-guage.
The author specifies the clause to be gen-erated in abstract terms, by specifying, for ex-ample, the verb to be used, the voice and tenseof the resulting clause, etc.
Similar annota-tions for instances and classes specify how theyshould be realized as noun phrases that fill slotsin the property-generated clauses.
Micro-plan an-notations also comprise several other language-specific parameters, such as whether the resultingclause can be aggregated into a longer sentence ornot, its voice and tense, and so on, as described inmore detail by Androutsopoulos et al [1], Sect.
3.Adaptive planning, on the other hand, operatesat the abstract level and does not involve specificsof the target language.
It is rather aimed at re-ontological models.
See, for example, http://www.heppnetz.de/projects/skos2gentax/and http://annocultor.sourceforge.net/flecting a synthetic personality in the description,as well as personalizing it for a particular audi-ence.
Adaptation parameters are provided in theform of profile attributes that control aspects of thetext plan such as how many and which of the factsknown about an object should be used to describeit, as discussed in more detail below.3.1 Personalization and personalityThe system supports authoring the adaptation pro-files that control the dynamic adaptation of thegenerated descriptions.
Profiles permit the au-thor to specify, for example, that technical vocab-ulary be used when generating for experts, or thatshorter and simpler sentences are generated forchildren.
This is achieved by providing a varietyof generation parameters though user profiles, in-cluding a numerical interest attribute of the prop-erties of the ontology.Isard et al [7] describe how interest is used toimpose a preference ordering of the properties ofontological entities, controlling which facts will beused when describing each entity.
In the work de-scribed here, we have extended profiles in two re-spects:?
by generalizing interest into arbitrary, author-defined profile attributes; and?
by permitting profile attributes to apply notonly to ontological properties, but also to in-dividuals and classes.Using these extensions, authors can define person-ality profiles for generating text, managing dia-logue, and simulating emotional variation in a waythat reflects a certain personality on behalf of thesystem.In the INDIGO project we use these profilesin a human-robot interaction application, wherea robotic tour guide that gives the impression ofempathizing with the visitor is perceived as morenatural and user-friendly.
But the methodologyis generally interesting in any context of generat-ing descriptions of cultural heritage content, es-pecially if the individual descriptions are aggre-gated in a tour of the collection.
In such contexts,dialogue-management adaptivity can vary the ex-hibits included in personalized tours and emo-tional state variation can match the described con-tent and make the tour more engaging and lively.The way in which personality profiles are usedto parametrize dialogue management and simu-12lated emotions are discussed in more detail else-where [9], so we shall only briefly outline ithere.
Emotional variation is achieved by using thepersonality profile to estimate the emotional ap-praisal of dialogue acts and update the mood andemotional state of artificial agents.
Dialogue man-agement is affected both directly, by taking exhibitpreference into account when deliberating over di-alogue acts, and indirectly, by being influenced bythe artificial agent?s current mood; and, as alreadymentioned above, NLG is adapted by using prop-erty preference to plan a descriptionIn the Konstantopoulos et al [9] model, prefer-ence is calculated based on a logic model of therobot?s personality traits and also on ground factsregarding objective attributes of the content?suchas the importance of an exhibit?but also subjec-tive attributes that reflect the robot?s perception ofthe content?such as how interesting an exhibit is.With the work described here, we alleviate the bur-den of manually providing all the ground param-eters, exploiting the fact that these parameters arestrongly inter-related and can, to a large extend, beautomatically inferred.
More specifically, ELEONbacks the profile authoring process by reasoningover manually provided exhibit attributes in orderto infer what the values of the missing attributesshould be.
The author can inspect the explicitlyprovided as well as the automatically inferred val-ues and make corrections where necessary (Fig-ure 2).
Manual corrections trigger a re-estimationof the missing values, so that after each round ofcorrections the overall model is a closer approxi-mation of the author?s intention.3.2 Representation and interoperabilityLinguistic and profile annotations are representedin RDF, the Resource Description Framework(RDF) [5].
RDF is a knowledge representa-tion technology built around the concept of us-ing subject-predicate-object triples to describe ab-stract entities, resources.
RDF triples assign totheir subject resource the property of being relatedto the object through the predicate resource.
Pred-icates can be data properties, in which case theirobjects are concrete values (numbers, strings, timeperiods, and so on), or object properties, in whichcase their objects are abstract resources.Although OWL is not formally defined in RDF,it is defined in such a way that it can be repre-sented within RDF.
In fact, the OWL specificationFigure 2: Screen fragment, showing the pop-upwindow for providing profile attribute values foran exhibit.
Automatically inferred attribute valuesare displayed in red, to stand out from explicitlyprovided ones which are displayed in black.itself provides a serialization of OWL ontologiesas RDF for transport and data interchange pur-poses.
Since ELEON uses this OWL/RDF repre-sentation for the domain ontology, linguistic andprofile annotations can be directly represented asRDF triples of extra-ontological properties of theontological instances.The RDF vocabulary used defines a prop-erty that relates ontological entities (individuals,classes, and properties) with profile attribute nodesthat involve:?
the profile to which they are pertinent, e.g.,?expert?;?
the attribute, e.g., ?interest?
or ?importance?;and?
the numerical value of the attribute for thisentity in this profile.When applied to ontology properties, profile at-tribute nodes can be further elaborated to applyonly to properties of instances of a particular class.For example, one can express that users find itmore interesting to know the architectural stylewhen discussing temples than when discussingstoas.Using RDF is motivated by the usage of OWLto represent the domain ontology as well as theavailability of natural language generation (NLG)engines that support it.
More specifically, as al-ready discussed, OWL ontologies and RDF anno-13tations can be easily merged in a combined modelsince OWL ontologies can be expressed in RDF.An alternative approach would have been to in-corporate profile attributes in the OWL ontology.Since profile attributes refer to classes and proper-ties as well as individuals, profile attributes would,then, have to be interpreted as second-order on-tological properties.
Although second-order con-structs can be represented in OWL-Full (the mostexpressive ?dialect?
of OWL), logical inferenceover OWL-Full ontologies is a challenging andcomputationally inefficient task.
In fact, second-order inference is only supported by research pro-totypes and only for restricted fragments, oftenexcluding binary second-order predicates (second-order properties).By contrast, the chosen approach restrictsthe ontology within the computationally efficientOWL-DL dialect, for which multiple stable andhighly optimized inference engines have been de-veloped.
Profile attributes are provided as extra-ontological properties, without tying them to aparticular logical interpretation.
We shall revisitthis point in the following section.The second motivating factor behind RDF pro-file attributes is interoperability with NLG en-gines.
The RDF vocabulary used to assign linguis-tic and profile attributes is understood by the NAT-URALOWL [6] and METHODIUS [10] generationengines (Figure 3).4 Intelligent Authoring SupportWe have previously discussed how profile at-tributes were not directly incorporated in the do-main ontology as second-order statements, but arerather represented as extra-logical RDF annota-tions.
While avoiding forcing a second-order in-terpretation of profile attributes is a definite ad-vantage from a computational-complexity point ofview, this choice leaves profile attributes outsidethe scope of OWL reasoning tools.In order to be able to efficiently reason over anddraw inferences about profile attributes, we havechosen to interpret profile attributes within many-valued description logics.
Using description log-ics has the advantage of direct access to the do-main ontology; using many-valued valuations hasthe advantage of providing a means to representand reason over numerical values.This section describes this interpretation andhow it is used, after first introducing descriptionFigure 3: System architecture showing the inter-facing with NLG and Inference engineslogics and many-valued valuations.4.1 Integrating reasoning in ELEONELEON specifies a Java interface through whichinference results can be requested and retrieved:OWL domain models and RDF profile annotationsare passed to an inference engine, which respondswith the numerical values of profile attributes forall ontological entities in the domain (individuals,classes, and properties).ELEON also extends and uses the TransOnto se-mantic knowledge migration system4 to performall the necessary transformations for using many-valued DL reasoners, i.e., transforming the OWLand RDF models into many-valued DL assertions,as well as transforming logical query answers intothe numerical profile-attribute values.Furthermore, as depicted in Figure 3, the im-plementation includes the necessary API calls forusing either of two many-valued DL reasoners,YADLR [8] or FUZZYDL [4].
Support for alter-native many-valued DL reasoners can be easilyadded, by using such reasoners to implement thereasoning API expected by the authoring system.4.2 Many-valued DL ReasoningDescription Logics (DL) [2] are a family of first-order logics; their main characteristic is decidabil-ity, attained by being restricted to concepts (unarypredicates, sets of individuals) and relations (bi-nary predicates, sets of pairs of individuals).
Ofparticular importance is the DL called SHOIN ,which covers OWL-DL.4See http://transonto.sourceforge.net/14DL statements, concept descriptions, use logi-cal connectives to define concepts by combining(a) other concepts, and (b) relation constructs thatdescribe the set of individuals that have a certainrelation with a certain set of fillers (relation ob-jects).
Relation descriptions are not supported,and membership in a relation can only be ex-plicitly asserted, except for a limited set of rela-tion axioms such as inversion, subordination, andtransitivity.
Most DL reasoners also provide lim-ited support for reasoning over concrete domains(numbers, strings, etc.)
through data propertiesthat relate abstract individual subjects with con-crete value objects.Many-valued logics in general, and conse-quently many-valued DLs, extend the binary true-false valuations of logical formulae into many-valued numerical valuations, denoting the degreeto which formulae hold.
Such many-valued mod-els receive their semantics not from set theory, asis the case with binary valuations, but from al-gebraic norms that assign semantics to the logi-cal connectives.
These norms are used to calcu-late the degree at which complex logical proposi-tions hold, given the degrees of their constituentelementary propositions.In the work described here we use?ukasziewicz-Tarski algebra to provide many-valued semantics [9, Sect.
3].
Although there isnothing in ELEON itself that forces this choice,?ukasiewicz-Tarski algebra is well-suited toinferring profile attribute values, as it is foundedon neither probability nor uncertainty, whichwould be inappropriate in our case, but on thenotion of relevance.4.3 Inferring missing attribute valuesProfile attributes of individuals are captured bynormalizing in the [0, 1] range and then using thenormalized value as a class membership degree.So, for example, if interesting is such an at-tribute of individual exhibits, then an exhibit witha (normalized) interest level of 0.7 is an instanceof the Interesting class at a degree of 0.7.Attributes of classes are reduced to attributes ofthe members of the class, expressed by a class sub-sumption assertion at the degree of the attribute.So, if the class of stoas is interesting at a degreeof 0.6, this is expressed by asserting that being amember of Stoa implies being a member of Inter-esting.
The implication is asserted at a degree ofOntology InterestingInstance membershipDoric style 0.8Ionic style 0.7Pergamene style 0.3Attalus 0.9Table 1: Profile fragment.Resource Property ValueStoa of Attalus style DoricStoa of Attalus style IonicStoa of Attalus style PergameneStoa of Attalus orderedBy AttalusTable 2: Ontology fragment, showing the proper-ties of the ?Stoa of Attalus?
instance.0.6, which, under ?ukasiewicz-Tarski semantics,means that being a stoa implies being interestingat a loss of 0.4 of a degree.
Thus individuals thatare members of the Stoa class at a degree of 1.0,are implicitly interesting at a degree of 0.6.
Al-though this is not identical to saying that the classitself is interesting, it clearly captures the intentionbehind the original RDF annotation.Profile attributes can also characterize proper-ties, like orderedBy, creationEra or style, en-coding the information that it might, for example,be more interesting to describe the artistic style ofan exhibit rather than provide historical data aboutit.
This is interpreted as the strength of the con-nection between how interesting an exhibit is, andhow interesting its properties are.
In other words,if having an interesting filler for style also makesthe exhibit interesting, this is taken as an indica-tion that the style relation itself is an interestingone.
Formulated in logical terms, having interest-ing relation fillers implies being interesting, andthe implication holds at a degree provided by theinterest level of the relation itself.For example, consider the assertion at 0.8 thatthe class of things that are related to at leastone Interesting instance with the style property,are themselves Interesting and the assertion at0.4 that the class of things that are related to atleast one Interesting instance with the orderedByproperty, are themselves Interesting.Given a profile fragment like the one in Table 1and a domain ontology including the factual infor-mation in Table 2, ?Stoa of Attalus?
has an interest-15ing style at a degree of 0.8, which is the maximumamong the three architectural styles found in thestoa (Doric, Ionic, and Pergamene).
Since stylefillers transfer interest at a loss of 0.2, style con-tributes 0.6 to the stoa?s Interesting-ness.
By con-trast, the filler of orderedBy (which is more inter-esting in this profile than any of the architecturalstyles) only contributes 0.3 of a degree, becauseorderedBy is annotated as uninteresting and in-terest transfers across it at a heavy loss.We have so far discussed how to infer profileattribute values for the individuals of the domain.Classes and relations receive the value of the min-imal instance of the class (relation).
That is to say,the individual (pair of individuals) for which noth-ing else is known, except that it is a member of theclass (relation).As an example, consider a DoricBuilding classwhich is a subclass of Building that only admitsinstances that have a style relation with ?Doric?.The minimal instance of this class is a member ofInteresting through having an interesting propertyas discussed above, even though nothing else isknown about it.
This membership degree in Inter-esting is taken to be an attribute of the class itselfrather than any one of its members, and is used asthe attribute value for the class itself.For relations, two minimal instances of the rela-tion?s domain and range are created.
The attributevalue for the property is the degree of the impli-cation that having this property makes the domainindividual have the attribute.
For example, in orderto infer how interesting the property devotedTo is,we first observe that it relates Temple instanceswith MythicalPerson instances, and create bareinstances of these two classes.
The implicationthat having a devotedTo relation to an Interest-ing individual leads to being member of Interest-ing holds to a degree that can be calculated, giventhe Interesting degrees of the Temple and Mythi-calPerson instances involved in the relation.
Thedegree of the implication is then used as the valueof the interesting attribute.5 Related WorkELEON is based on the authoring tool describedby Androutsopoulos et al [1], which was also tar-geted at creating ontologies for generating person-alized descriptions of the individuals in the ontol-ogy.
ELEON inherits from that tool the idea ofseparating the abstract ontological relations fromthe concrete linguistic information, facilitating theeasy reuse of the ontological information to gener-ate descriptions in multiple languages, as well asusing an external NLG engine to provide previewsof the descriptions from within the authoring envi-ronment.The system presented here extends a previousversion of ELEON [3], which supports using anexternal DL reasoner to catch logical errors bychecking the consistency of the authored ontology.In the work described here, the intelligence behindthe tool is substantially extended by using logicalinference to predict values that have not been ex-plicitly entered by the user, alleviating the need tomanually provide large volumes of numerical data.A parallel line of development of the origi-nal Androutsopoulos et al tool is based on theProte?ge?
ontology authoring and management en-vironment.5 Galanis and Androutsopoulos [6] de-veloped a Prote?ge?
plug-in that builds upon the ex-tensive ontology authoring features of Prote?ge?
toprovide an environment for creating cultural her-itage ontologies and the associated linguistic andprofiling annotations.
It does not, however, of-fer the flexibility to define new profile attributesas ELEON does, and is restricted to specifying thelevel of interest of the various ontological entities.Furthermore, it only uses logic inference to catchontological inconsistencies in a manner similar tothat described by Bilidas et al [3] without any pre-diction facilities.6 ConclusionIn this article we have presented an authoring envi-ronment for the creation of domain ontologies andthe associated linguistic and profile annotations.Annotated ontologies can be used to automaticallygenerate natural-language descriptions of the enti-ties of the ontology, dynamically adapting the gen-eration engine to the audience and context of thedescription.The advantages of using ELEON instead ofgeneric knowledge tools, such as Prote?ge?, stemfrom the ability to couple ELEON with external en-gines that provide important conveniences to theauthor.
More specifically, ELEON can invoke a nat-ural language generation engine in order to displaypreviews of the description based on the informa-tion currently provided about an object.
Further-more, logical inference is used to provide an intel-5See http://protege.stanford.edu/16ligent authoring back-end that completes the cur-rent model by inferring missing values based onwhat has already been provided.This intelligent authoring support facility, com-bined with the immediate previews, can consid-erably reduce the effort required to create a fullyfunctional model as the author can iterate throughcycles of providing information, previewing thegenerated text, and only elaborating the modelwhere the text is unsatisfactory.
This iterative pro-cess converges to satisfactory descriptions muchfaster than having to manually enter all adaptationparameters, especially for large and complex do-mains.In the context of the XENIOS project,6 the pre-vious version of ELEON has been evaluated by cu-rators of the Foundation of the Hellenic World,who used it to create an ontology of the buildings,rooms, and exhibitions of the Foundation.
In thecontext of creating the Agora of Athens ontologyand annotations for INDIGO, we are planning toextend this evaluation to include the new intelli-gent authoring features.AcknowledgementsThe work described here is supported by the FP6-IST project INDIGO7 which aims to advancehuman-robot interaction methodology and tech-nology, enabling robots to perceive natural humanbehaviour, as well as making them act in ways thatare more familiar to humans.
The authors alsowish to acknowledge the help of the colleaguesfrom the Foundation of the Hellenic World whoused ELEON to create the initial version of the on-tology for the ancient Agora of Athens.References[1] Ion Androutsopoulos, Jon Oberlander, andVangelis Karkaletsis.
2007.
Source authoringfor multilingual generation of personalisedobject descriptions.
Journal of Natural Lan-guage Engineering, 13(3):191?233.
[2] Franz Baader, Ian Horrocks, and Ulrike Sat-tler.
2003.
Description logics as ontologylanguages for the semantic web.
In SteffenStaab and Rudi Studer, editors, Lecture Notesin Artificial Intelligence.
Springer Verlag.6See http://www.ics.forth.gr/xenios/ (inGreek)7See http://www.ics.forth.gr/indigo/[3] Dimitris Bilidas, Maria Theologou, and Van-gelis Karkaletsis.
2007.
Enriching OWL on-tologies with linguistic and user-related an-notations: the ELEON system.
In Proc.19th IEEE Intl.
Conf.
on Tools with ArtificialIntelligence (ICTAI-2007), Patras, Greece,Oct.
2007.
IEEE Computer Society.
[4] Fernando Bobillo and Umberto Straccia.2008.
fuzzyDL: an expressive fuzzy Descrip-tion Logic reasoner.
In Proceedings of the2008 International Conference on Fuzzy Sys-tems (FUZZ-08).
[5] Dan Brickley and R. V. Guha.
2004.
RDFPrimer.
W3C Recommendation.
[6] Dimitris Galanis and Ion Androutsopoulos.2007.
Generating multilingual descriptionsfrom linguistically annotated OWL ontolo-gies: the NaturalOWL system.
In Pro-ceedings of the 11th European Workshop onNatural Language Generation (ENLG 2007),Schloss Dagstuhl, Germany, pages 143?146.
[7] Amy Isard, Jon Oberlander, Ion Androut-sopoulos, and Colin Matheson.
2003.
Speak-ing the users?
languages.
IEEE IntelligentSystems, 18(1):40?45.
[8] Stasinos Konstantopoulos and GeorgiosApostolikas.
2007.
Fuzzy-DL reasoningover unknown fuzzy degrees.
In Proc.
Intl.IFIP Workshop of Semantic Web and WebSemantics (IFIP-SWWS 07), Nov. 2007,Vilamoura, Portugal.
LNCS 4806, Springer,Berlin/Heidelberg.
[9] Stasinos Konstantopoulos, VangelisKarkaletsis, and Colin Matheson.
2008.Robot personality: Representation and exter-nalization.
In Proceedings of Intl.
Workshopon Computational Aspects of Affective andEmotional Interaction (CAFFEi 08), Patras,Greece, July 2008.
[10] Matthew Marge, Amy Isard, and JohannaMoore.
2008.
Creation of a new do-main and evaluation of comparison gener-ation in a natural language generation sys-tem.
In Proceedings of the Fifth Inter-national Language Generation Conference(INLG08), June 2008, Salt Fork, Ohio, USA.
[11] Michael K. Smith, Chris Welty, and Debo-rah L. McGuinness.
2004.
OWL web ontol-ogy language.
W3C Recommendation.17
