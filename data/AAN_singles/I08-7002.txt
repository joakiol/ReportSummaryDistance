Gazetteer Preparation for Named Entity Recognition in Indian LanguagesSujan Kumar SahaIndian Institute of TechnologyKharagpur, West BengalIndia - 721302sujan.kr.saha@gmail.comSudeshna SarkarIndian Institute of TechnologyKharagpur, West BengalIndia - 721302shudeshna@gmail.comPabitra MitraIndian Institute of TechnologyKharagpur, West BengalIndia - 721302pabitra@gmail.comAbstractThis paper describes our approaches for thepreparation of gazetteers for named entityrecognition (NER) in Indian languages.
Wehave described two methodologies for thepreparation of gazetteers1.
Since the rel-evant gazetteer lists are more easily avail-able in English we have used a translitera-tion based approach to convert available En-glish name lists to Indian languages.
Thesecond approach is a context pattern induc-tion based domain specific gazetteer prepa-ration.
This approach uses a domain specificraw corpus and a few seed entities to learncontext patterns and then the correspondingname lists are generated by using bootstrap-ping.1 IntroductionNamed entity recognition involves locating and clas-sifying the names in text.
NER is an important task,having applications in information extraction (IE),question answering (QA), machine translation andin most other NLP applications.NER systems have been developed for resource-rich languages like English with very high accura-cies.
But constructing an NER for a resource-poorlanguage is very challenging due to unavailability ofproper resources.
Name-dictionaries or gazetteersare very helpful NER resources and in most Indian1Specialized list of names for a particular class of NamedEntity (NE).
For Example, India is in the location gazetteer,Sachin is in the person first name gazetteer.languages there is no reasonable size publicly avail-able list.
The web contains lots of such resources,which can be used for Indian language NER devel-opment.
But most of the web resources are in En-glish.
Our approach is to transliterate the relevantEnglish resources and name dictionaries into Indianlanguages to make them useful for Indian languageNER task.
But direct transliteration from English toan Indian languages is not easy.
Few attempts aretaken to build English to Indian language transliter-ation systems but the word agreement ratio (WAR)reached is upto 69.3% (Ekbal et al, 2006).We have attempted to build a transliteration sys-tem which uses an intermediate alphabet.
Boththe English and the Indian language strings aretransliterated to the intermediate alphabet and for aEnglish-Indian language pair, if the transliterated in-termediate alphabet strings are same then we haveconcluded that the strings are the transliteration ofone another.
We have transliterated the available En-glish name lists into the intermediate alphabet andthese might be used as gazetteers.
The Indian lan-guage words need to be transliterated to the inter-mediate format to check whether the word is in agazetteer or not.
This system does not transliter-ate the English name lists into Indian languages butmakes them useful in Indian languages NER task.Transliteration based approaches are useful whenthere is availability of English name lists.
But whenrelevant English name lists are not available thenalso we can prepare gazetteers from raw corpus.We have defined a semi-automatic context pattern(CP) extraction based gazetteer preparation frame-work.
This framework uses bootstrapping to prepareThe 6th Workshop on Asian Languae Resources, 20089the gazetteers from a large raw corpus starting fromfew seed entities.
Firstly fixed length patterns areformed using the surrounding words of the seeds.Depending on the pattern precision, the patterns arediscarded or generalized by dropping tokens fromthe patterns.
This set of high precision patterns ex-tracts other named entities (NEs) which are added tothe seed list for the next iteration of the process.
Fi-nally we are able to prepare the required gazetteers.To prove the effectiveness of the gazetteer prepa-ration approach, we have prepared some gazetteerslike names of cricketers, names of tennis players etc.from a raw Hindi sports domain corpus.
The de-tails of the approaches are given in the followingsections.The paper is organized as follows.
Usefulnessof gazetteers in NER, transliteration approaches ingeneral and specific for Indian languages and gen-eral pattern extraction methodologies are discussedin section 2.
Section 3 presents the architecture ofthe 2-phase transliteration system and preparation ofgazetteers using that.
In section 4 context patternextraction based gazetteer preparation is discussed.Finally section 5 concludes the paper.2 Previous WorkThe main approaches to NER are Linguistic ap-proaches and Machine Learning (ML) based ap-proaches.
The linguistic approach typically usesrule-based models manually written by linguists.ML based techniques make use of a large amountof annotated training data to acquire high-level lan-guage knowledge.
Several ML techniques like Hid-den Markov Model (HMM)(Bikel et al, 1997),Maximum Entropy Model(MaxEnt) (Borthwick,1999), Conditional Random Field(CRF) (Li andMcCallum, 2004) etc.
have been successfully usedfor the NER task.
Both the approaches may makeuse of gazetteer information to build systems.
Thereare many systems which use gazetteers to improvethe accuracy.Ralph Grishman has developed a rule-based NERsystem which uses some specialized name dictionar-ies including names of all countries, names of majorcities, names of companies, common first names etc(Grishman, 1995).
Another rule based NER systemis developed by Wakao et al (1996) which has usedseveral gazetteers like organization names, locationnames, person names, human titles etc.We will now mention some ML based sys-tems.
MENE is a MaxEnt based system de-veloped by Borthwick.
This system has used 8dictionaries (Borthwick, 1999), which are: Firstnames (1,245), Corporate names (10,300), Corpo-rate names without suffix (10,300), Colleges andUniversities (1,225), Corporate suffixes (244), Dateand Time (51) etc.
The italics numbers in bracketindicates the size of the dictionaries.
The hy-brid system developed by Srihari et al(2000) com-bines several modules built by using MaxEnt, HMMand handcrafted rules.
This system uses the fol-lowing gazetteers: First name (8,000), Familyname (14,000) and a big gazetteer of Locations(250,000).
There are many other systems whichhave used name dictionaries to improve the accu-racy.
Kozareva (2006) described a methodologyto generate gazetteer lists automatically for Spanishand to build NER system with labeled and unlabeleddata.
The location gazetteer is built by finding loca-tion patterns which looks for specific prepositions.And the person gazetteer is constructed with graphexploration algorithm.Transliteration is also a very important topicand lots of transliteration systems for different lan-guages have been developed using different ap-proaches.
The basic approaches for transliterationare phoneme based or spelling-based.
A phoneme-based statistical transliteration system from Ara-bic to English was developed by Knight andGraehl(1998).
This system uses a finite statetransducer that implements transformation rules todo back-transliteration.
A spelling-based modelthat directly maps English letter sequences intoArabic letters was developed by Al-Onaizan andKnight(2002).
Several transliteration systems ex-ist for English-Japanese, English-Chinese, English-Spanish and many other languages to English.
Butvery few attempts have been reported on the de-velopment of transliteration systems between Indianlanguages and English.
We can mention a transliter-ation system for Bengali-English transliteration de-veloped by Ekbal et al(2006).
They have proposeddifferent models modifying the joint source chan-nel model.
In that system a Bengali string is di-vided into transliteration units containing a vowelThe 6th Workshop on Asian Languae Resources, 200810modifier or matra at the end of each unit.
Sim-ilarly the English string is also divided into units.Then they defined various unigram, bigram or tri-gram models depending on the consideration of thecontexts of the units.
They have also considered lin-guistic knowledge in the form of possible conjunctsand diphthongs in Bengali and their representationsin English.
This system is capable of transliterat-ing mainly person names.
The highest transliterationaccuracy achieved by them is 69.3% Word Agree-ment Ratio (WAR) for Bengali to English and 67.9%WAR for English to Bengali transliteration.In the field of IE, patterns play a key role inidentifying relevant pieces of information.
Soder-land et al(1995), Rillof and Jones(1999), Lin etal.
(2003), Downey et al(2004), Etzioni et al(2005)described different approaches to context pattern in-duction.
Talukder et al(2006) combined grammati-cal and statistical techniques to create high precisionpatterns specific for NE extraction.
An approach tolexical pattern learning for Indian languages is de-scribed by Ekbal and Bandopadhyay (2007).
Theyused seed data and annotated corpus to find the pat-terns for NER.3 Transliteration based GazetteerPreparationGazetteers or name dictionaries are helpful in NER.We have already discussed about some English NERsystems where the usefulness of the gazetteers havebeen established.
However while developing NERsystems in Indian languages, we tried to find relevantgazetteers.
But we could not obtain openly availablegazetteer lists for these languages.
But we foundthat there are a lot of resources of names of Indianpersons, Indian places, organizations etc.
in Englishavailable in the web.
In Table 1 we have mentionedsome of the sources which contains relevant namelists.But it is not possible to use the available namelists directly in the Indian language NER task asthese are in English.
We have decided to translit-erate the English lists into Indian languages to makethem useful in the Indian language NER task.List Web Sourceshttp://www.bsnl.co.in/ onlinedi-rectory.htmFirstNamehttp://web1.mtnl.net.in/ direc-tory/http://www.eci.gov.in/http://hiren.info/indian-baby-names/http://www.indiaexpress.com/specials/babynames/http://surnamedirectory.com/surname-index.htmlSurname http://web1.mtnl.net.in/ direc-tory/http://en.wikipedia.orgIndia Lo-cationhttp://indiavilas.com/ indi-ainfo/pincodes.asphttp://www.indiapost.gov.inhttp://www.eci.gov.in/WorldLocationhttp://www.maxmind.com/app/worldcitieshttp://en.wikipedia.org/wikiTable 1: Web sources for some relevant name lists3.1 TransliterationThe transliteration from English to Hindi is quitedifficult.
English alphabet contains 26 characterswhereas the Hindi alphabet contains 52 characters.So the mapping is not trivial.
We have already men-tioned that for Bengali a transliteration system wasdeveloped by Ekbal et al Similar approach can beused to develop transliteration systems for other In-dian languages.
But this approach uses a bilingualtransliteration corpus, which requires much effortsto built, is unavailable in proper size in all Indianlanguages.
Also using this approach the word agree-ment ratio obtained is below 70%.To make the transliteration process easier andmore accurate, we have decided to build a 2-phasetransliteration module.
Our goal is to make deci-sion that a particular Indian language string is in anEnglish gazetteer or not.
We need not transliteratedirectly from Indian language strings to English orEnglish name lists into Indian languages.
Our idea isto define an intermediate alphabet and both Englishand Indian language strings will be transliterated toThe 6th Workshop on Asian Languae Resources, 200811the intermediate alphabet.
For two English-Hindistring pair, if the intermediate alphabet is same thenwe can conclude that one string is the transliterationof the other.First of all we need to decide the size of the inter-mediate alphabet.
Preserving the phonetic proper-ties we have defined our intermediate alphabet con-sisting of 34 characters.
To indicate these 34 charac-ters, we have given unique character-id to each char-acter.3.2 English to Intermediate AlphabetTransliterationFor transliterating English strings into the interme-diate state, we have built a phonetic map table.
Thisphonetic map table maps an English n-gram into anintermediate character.
A part of the map table isgiven in Table 2.
In the map table, the mapping isfrom strings of varying length in the English to onecharacter in the intermediate alphabet.
In our tablethe length of the left hand side varies from 1 to 3.English IntermediateA a?EE, I, II ?
?OO, U u?B, W ?bBH, V v?CH c?R, RH r?SH, S s?Table 2: A part of the map tableIn the following we have described the procedureof transliteration.Procedure 1: TransliterationSource string - English, Output string - Intermediate.1.
Scan the source string (S) from left to right.2.
Extract the first n-gram (G) from the string.
(n = 3)3.
Find if it is in the map-table.4.
If yes, insert its corresponding intermediatestate entity into target string T.Remove the n-gram from S.S = S ?
G.Go to step 2.5.
Else set n = n?
1.Go to step 3.Here we can take an Indian language name,?surabhi?, as example to explain the procedure indetails.
When the name is written in English, itmay be written in several ways like ?suravi, ?shu-ravi?, ?surabhee?, ?shurabhi?
etc.
The English string?surabhi?
is transliterated to ?s?u?r?a?v????
by the translit-erator.
Again if we see the transliteration for ?shu-ravi?, then also the intermediate transliterated stringis same as the previous one.3.3 Indian Language to Intermediate AlphabetTransliterationThis is a 2-phase process.
The first phase transliter-ates the Indian language string into itrans.
Itrans isrepresentation of Indian language alphabets in termsof ASCII.
Since Indian text is composed of syllabicunits rather than individual alphabetic letters, itransuses combinations of two or more letters of En-glish alphabet to represent an Indian language syl-lable.
However, there being multiple sounds in In-dian languages corresponding to the same Englishletter, not all Indian syllables can be represented bylogical combinations of English alphabet.
Hence,itrans uses some non-alphabetic special charactersalso in some of the syllables.
A map table2, withsome heuristic knowledge, is used for the translit-eration.
For example, the Hindi word ?surabhi?
isconverted ?sUrabhI?
in itrans.In the second phase the itrans string is translit-erated into the intermediate state using the similarprocedure described section 3.2.
Here also we usea map-table containing the mappings from itrans tointermediate alphabet.
This procedure transliteratesthe example itrans word ?sUrabhI?
to ?s?u?r?a?v???
?.3.4 EvaluationIn section 3.2 and 3.3 we have described two phasetransliteration with an example word.
We haveshown that our transliteration system transliteratesthe Indian language name ?surabhi?
and the corre-sponding English strings into the same intermediate2The map table is available at www.aczoom.com/itrans.The 6th Workshop on Asian Languae Resources, 200812string.
The system has limitations like sometimestwo different strings can be mapped into a same in-termediate alphabet string.For the evaluation of the system we have appliedthe transliteration system for two languages - Hindiand Bengali.
For evaluating the system for Hindiwe have created a bi-lingual corpus containing 1070English-Hindi word pair most of which are names.980 of them are transliterated correctly by the sys-tem.
The system accuracy is 980 ?
100/1070 =91.59%.
For evaluating the system for Bengali, wehave used a similar bi-lingual corpus and the systemtransliterates with 89.3% accuracy.3.5 Prepared Gazetteer ListsPreviously we have mentioned the web sourceswhere some name lists are available.
Names ofa particular category are collected from differentsources and merged to build a English name list ofthat category.
Then we have applied our transliter-ation procedure on the list and transliterated the listinto the intermediate alphabet.
This intermediate al-phabet list acts as a gazetteer in NER task in Indianlanguages.
When an Indian language NER systemneeds to access the gazetteer lists, it transliterates theIndian language strings into the intermediate alpha-bet, and searches into the list.
In the following wehave described the prepared gazetteer lists which areuseful for a general domain Indian language NERsystem.First Name List: This list contains 10,200 firstnames collected from the web.
Most of the collectedfirst names are of Indian origin.
Apart from the In-dian names, we have also collected some non-Indiannames.
These non-Indian names are generally thenames of some famous persons, like sports stars,film stars, scientists, politicians, who are likely tocome in Indian language texts.
In our first name list1500 such names are included.Surname List: This is a very important list whichcontains common surnames.
We have prepared thesurname list from different sources containing about1500 Indian surnames and 400 other surnames.Indian Locations: This list contains about14,000 entities.
The names of states, cities andtowns, districts, important places in different citiesand even lots of village names are collected in thelist.
The list needs to be processed into a list of un-igrams (e.g., kolakAtA3 (Kolkata), bihAra (Bihar)),bigrams (e.g., nayI dillI (New Delhi), pashchimabA.nglA (West Bengal)) and trigrams (e.g.
uttaarachabisha paraganA (North 24 Pargana)).
The wordsare matched with unigrams, sequences of two con-secutive words are matched against bigrams andsequences of three consecutive words are matchedagainst trigrams.World Location: The list contains the names ofthe countries, different state and city names in worldand also the names of important rivers, mountainsetc.
The list contains about 4,000 location names.Similar to the Indian location list, this list also needsto be processed as unigram, bigrams and trigrams.4 Context Pattern Extraction basedGazetteer PreparationGazetteers can also be prepared by extracting con-text patterns.
Transliteration based gazetteer prepa-ration is applicable while there is availability of En-glish or parallel language name list.
But if suchrelevant name lists are not available, but a largeraw corpus is available, then we can use the con-text pattern extraction based methodology to preparethe gazetteers.
This method seeks some high pre-cision context patterns by using some seed entitiesand hits the patterns to the raw corpus to prepare thegazetteers.The overall methodology of extracting contextpatterns from a raw corpus is summarized as fol-lows:1.
Find a large raw corpus and some seed entities(E) for each class of NEs.2.
For each seed entity e in E, from the corpusfind context string(C) comprised of n tokensbefore e, a placeholder for the class instanceand n tokens after e. [We have used n = 3]This set of words form initial pattern.3.
Search the pattern to the corpus and find thecoverage and precision.4.
Discard the patterns having low precision.5.
Generalize the patterns by dropping one ormore tokens to increase coverage.3The Indian languages strings are written in italics font andusing itrans transliteration.The 6th Workshop on Asian Languae Resources, 2008136.
Find best patterns having good precision andcoverage.The details of the context pattern extractionbased gazetteer preparation methodology is de-scribed in the following subsections.
We have takena Hindi sports domain raw corpus and preparedsome gazetteers like names of cricketers, names oftennis players to prove the effectiveness of the pro-posed methodology.4.1 Selection of Seed EntityContext pattern extraction based gazetteer prepa-ration methodology is applied to a sports domaincorpus which contains about 20 lakhs words col-lected from the popular Hindi newspaper ?DainikJagaran?.
We have worked on preparing the listsof cricket players, list of tennis players.
We havecollected the most frequent names to build the seedlist.
For preparing the list of tennis players, wehave taken 5 names as seed entities : Andre Agassi,Steffi Graf, Serena Williams, Roger Federer and Jus-tine Henin.
Similarly the seed list of cricket playersname list contains only 3 names: Sachin Tendulkar,Brian Lara and Glenn McGrath.4.2 Context ExtractionTo extract the patterns for a particular category, weselect a part of the corpus where the target seeds willbe available with high frequency.
For example toget the patterns for the names of the cricketers, weselect a part of the corpus where most of the sen-tences are cricket related.
To select the cricket re-lated sentences, we prepared a list containing themost frequent words related to cricket like, rAna(run), ballebAja (batsman), gedabAja (bowler) etc.Depending upon the presence of such words we haveselected the ?part?.
In our development the cricket?part?
contains 120K words.
Similar ?part?
is devel-oped for other gazetteers.
For a particular seed, wefind the occurrences of the seed entity in the corre-sponding raw ?part?
corpus.
Then we extracted threetokens immediately preceding the seed and three to-kens immediately following the seed.
A placeholder(CRIC for cricketers, TENS for tennis players)replaces the seed.
The placeholder and the surround-ing tokens t?3 t?2 t?1 placeholder t+1 t+2 t+3)form the initial set of patterns.For the seed sachina tedulkara (Sachin Ten-dulkar) we extract 92 initial patterns.
Some of whichare:?
ki mAsTara blAsTara CRIC ko Tima ke?
dravi.Da aura CRIC 241 nAbAda ke?
bhAratiya ballebAja CRIC ne 100 rana?
mere vichAra se CRIC ko Takkara dene4.3 Pattern Quality MeasureWe measured the quality of a pattern depending onits precision and coverage.
Precision is the ratio ofcorrect identification and the total identification.
Ifthe precision is high then also we have assumed thatthe pattern is a good pattern.
In our developmentwe have marked a pattern as good if the precision is100%.We search the initial patterns in the correspond-ing ?part?
corpus to measure the precision and cov-erage.
If the precision is less than 100% for a pat-tern then we have rejected the pattern.
Otherwise wehave tried to make it more generalized to increasethe coverage.
To make the generalization we havedropped the left most and right most tokens one byone and checked the pattern quality.
If for a initialpattern, several patterns presents with 100% preci-sion then we have selected those patterns for whichno subset of those is a good pattern.
By this way wehave prepared a list of good patterns for a particulargazetteer type.In time of ?good?
pattern selection we have madesome interesting observations.?
There are some patterns which satisfy the 100%precision criteria but the coverage is very poorin terms of new entity extraction.
For exam-ple, ?mAsTara blAsTara CRIC ko?
is a patternwith 100% precision.
The pattern has 24 in-stances in the ?part?
corpus, but all the extractedentities are ?sachina tedulkara?.
We have alsoexamined the pattern in the total raw corpus.It is capable of extracting ?sachina tedulkara?only.
So in spite of fulfilling all the criteria thepattern is not a ?good?
pattern.?
Another interesting observation is, that thereare some patterns which are ?good?
patterns inThe 6th Workshop on Asian Languae Resources, 200814the context of the ?part?
corpus, but when usedin the total raw corpus, it extracts non-relevantentities.
For example ?mere vichAra se CRICko Takkara?
is a ?good?
pattern so it should ex-tract the names of the cricketers.
But whenthis is used in the total raw corpus it extractsnon-cricketer entities (e.g.
tennis players, chessplayers) also.
To make such patterns useful wehave extracted all the cricket related sentencesin the similar way which was used for selectingthe ?part?
corpus and then the patterns are usedto extract entities from these sentences.?
There present are patterns with very high cover-age but precision is just below 100%.
We haveanalyzed these patterns and manually identifiedthe wrongly extracted entities.
If the wrong en-tities can be grouped together and are havingsome specific properties then we have addedthese entities in a ?pattern exception list?.
Thenthe pattern is used as a ?good?
pattern and theexception list is used to detect the wrong iden-tifications.In the following we have given some example of?good?
patterns which are useful in identification ofthe names of the cricket players.?
ballebAja CRIC ko Tima ke?
ballebAja CRIC ne?
CRIC kA arddhashataka4.4 Gazetteer PreparationThe extracted ?good?
patterns are capable of iden-tifying NEs from a raw corpus.
These patterns arethen used to prepare the gazetteers.
The seeds formthe initial gazetteer list for a particular gazetteertype.
The ?good?
patterns are used to extract entitiesfrom the total raw corpus.
The entities identified bythe patterns are added to the corresponding gazetteerlist.
In that way we can add more entities in our firstphase gazetteer list.
These new entities are taken asseeds for the next phase.
Then the same procedureis followed repeatedly to develop a large gazetteer.We have already mentioned that we have workedwith a sports domain corpus and prepared somegazetteers.
This gazetteers are prepared just to provethe efficiency of our approach.
By using only 3 seedentities we become able to prepare a gazetteer whichcontains 412 names of the cricketers.
Even usingthis approach only one seed ?Sachin Tendualkar?
ex-tracts 297 names after the second iteration.
Similarlywe have collected 245 names of tennis players from5 seed entities.5 ConclusionIn this paper we have described our approaches forthe preparation of gazetteers.
We have also preparedsome gazetteers using both the approaches to showtheir effectiveness.
These approaches are very use-ful for the NER task in resource-poor languages andalso in domain specific NER task.ReferencesAl-Onaizan Y. and Knight K. 2002.
Machine Translit-eration of Names in Arabic Text.
Proceedings ofthe ACL Workshop on Computational Approaches toSemitic Languages.Bikel Daniel M., Miller Scott, Schwartz Richard andWeischedel Ralph.
1997.
Nymble: A high perfor-mance learning name-finder.
In Proceedings of theFifth Conference on Applied Natural Language Pro-cessing, peges 194?201.Borthwick Andrew.
1999.
A Maximum Entropy Ap-proach to Named Entity Recognition.
Ph.D. thesis,Computer Science Department, New York University.Downey D., Etzioni O., Soderland S., Weld D.S.
2004.Learning text patterns for Web information extractionand assessment.
In AAAI-04 Workshop on AdaptiveText Extraction and Mining, pages 50?55.Ekbal A. and Bandyopadhyay S. 2007.
Lexical PatternLearning from Corpus Data for Named Entity Recog-nition.
In Proceedings of International Conference onNatural Language Processing (ICON), 2007.Ekbal A., Naskar S. and Bandyopadhyay S. 2006.
AModified Joint Source Channel Model for Translitera-tion.
In Proceedings of the COLING/ACL 2006, Aus-tralia, pages 191?198.Etzioni Oren, Cafarella Michael, Downey Doug, PopescuAna-Maria, Shaked Tal, Soderland Stephen, WeldDaniel S. and Yates Alexander.
2005.
Unsupervisednamed-entity extraction from the Web: An experimen-tal study.
In Artificial Intelligence, 165(1): 91-134.Grishman Ralph.
1995.
The New York University Sys-tem MUC-6 or Where?s the syntax?
In Proceedings ofthe Sixth Message Understanding Conference.The 6th Workshop on Asian Languae Resources, 200815Knight K. and Graehl J.
1998.
Machine Transliteration.Computational Linguistics, 24(4): 599?612.Kozareva Zornitsa.
2006.
Bootstrapping Named EntityRecognition with Automatically Generated GazetteerLists.
In Proceedings of EACL student session (EACL2006).Li Wei and McCallum Andrew.
2004.
Rapid Develop-ment of Hindi Named Entity Recognition using Condi-tional Random Fields and Feature Induction (Short Pa-per).
In ACM Transactions on Computational Logic.Lin Winston, Yangarber Roman and Grishman Ralph.2003.
Bootstrapped learning of semantic classes frompositive and negative examples.
In Proceedings ofICML-2003 Workshop on The Continuum from La-beled to Unlabeled Data.Riloff E. 1996.
Automatically Generating ExtractionPatterns from Untagged Text.
In Proceedings of theThirteenth National Conference on Articial Intelli-gence, pages 1044?1049.Srihari R., Niu C. and Li W. 2000.
A Hybrid Approachfor Named Entity and Sub-Type Tagging.
In Proceed-ings of the sixth conference on Applied natural lan-guage processing.Soderland Stephen, Fisher David, Aseltine Jonathan,Lehnert Wendy.
1995.
CRYSTAL: Inducing a Con-ceptual Dictionary.
In Proceedings of the FourteenthInternational Joint Conference on Artificial Intelli-gence.Talukdar P. Pratim, T. Brants, M. Liberman and F.Pereira.
2006.
A context pattern induction methodfor named entity extraction.
In Proceedings of theTenth Conference on Computational Natural Lan-guage Learning (CoNLL-X).Wakao T., Gaizauskas R. and Wilks Y.
1996.
Evaluationof an algorithm for the recognition and classificationof proper names.
In Proceedings of COLING-96.The 6th Workshop on Asian Languae Resources, 200816
