Representing and Accessing Multilevel Linguistic Annotation usingthe MEANING FormatEmanuele PiantaITC-irst38050, PovoTrento, Italypianta@itc.itLuisa BentivogliITC-irst38050, PovoTrento, Italybentivo@itc.itChristian GirardiITC-irst38050, PovoTrento, Italycgirardi@itc.itBernardo MagniniITC-irst38050, PovoTrento, Italymagnini@itc.itAbstractWe present an XML annotation format(MEANING Annotation Format, MAF)specifically designed to represent and in-tegrate different levels of linguistic anno-tations and a tool that provides flexibleaccess to them (MEANING Browser).We describe our experience in integratinglinguistic annotations coming from dif-ferent sources, and the solutions weadopted to implement efficient access tocorpora annotated with the MeaningFormat.1 IntroductionIt is well known that when using XML-basedannotation schemes to represent multi layer an-notations, it can be difficult to handle partiallyoverlapping annotations.
Annotating discontinu-ous elements may be considered as a variant ofthe same problem (Pianta and Bentivogli, 2004).Other difficulties can arise from the necessity ofintegrating manual and automatic annotations, aswe will show in this paper.One of the most effective solutions to theabove mentioned problems is the so called stand-off annotation, based on the separation betweentextual data and annotations, and between vari-ous types of annotation, possibly pointing tosame text.
This approach has been systematicallyadopted in the design of MAF, a multilayer XMLformat developed for the EU-funded MEANINGproject, in the context of the creation of the Ital-ian MEANING Corpus (Bentivogli et al, 2003).In this paper we will describe our experiencein the use of MAF, with special emphasis on howwe solved issues related to representing annota-tion levels which come from different sources,and can possibly overlap.
We will also give de-tails about the solutions we adopted to allow forefficient access and human browsing of MAFstandoff annotations.The rest of the paper is organized as follows.Section 2 describes MAF and the types of anno-tations which have been represented with it.
Sec-tion 3 reports on the integration into MAF of lin-guistic annotations coming from differentsources.
Section 4 illustrates the strategiesadopted to make the information encoded inMAF quickly accessible.
Finally, Section 5 pre-sents the MEANING Browser, a tool for access-ing and navigating corpora linguistically anno-tated with MAF.2 The MEANING FormatFollowing the proposals for the ISO/TC 37/SC 4standard for linguistic resources (Ide andRomary, 2002), the MAF scheme is based onannotation structures and data categories.
Eachtype of annotation structure (nestable <struct>elements) corresponds to a specific kind of lin-guistic object (e.g.
tokens, lexical units, multi-words), and each instance of a linguistic object isidentified by a unique identifier.
Data categories(<feat> tags) represent attributes of the linguisticobjects.
Different representation levels are con-tained in separate documents, or document sec-tions.
The XLink and XPointer syntax is used torepresent relations between elements in differentXML documents, and IDREFs attributes for rela-tions within the same document.2.1 First  versionThe first version of the MEANING Format hasbeen used to represent seven kinds of informa-tion: orthographic features, the structure of the77text, morphosyntactic information, multiwords,syntactic information, named entities, and wordsenses.Annotation levels are related to each other fol-lowing a hierarchy of annotation levels, whichreflects a theoretically grounded hierarchy oflinguistic objects.
The basic (orthographic) anno-tation level, representing tokens, is implementedwith pointers to the character positions in the hubcorpus.
Then the morphosyntactic level, repre-senting word-related morphological information,contains pointers to the tokens, whereas the mul-tiword level points to the words described atmorphosyntactic level.The following example shows how the mor-phosyntactic features of the Italian word ?an-dare?
(to go) are represented.<struc   type="w-level" id="w_12"xlink:href="#xpointer(id('t_10'))"><feat type="lemma">andare</feat><feat type="stem">and</feat><feat type="pos">v</feat><feat type="elra-tag">VF</feat><feat type="mood">inf</feat><feat type="tense">pres</feat></struc>MAF also specifically addresses the problemof discontinuous units, such as for instance non-contiguous multiwords; see ?andarci veramentepiano?
(take it really easy).
A detailed study ofhow standoff annotation allows for an eleganttreatment of this phenomenon can be found in(Pianta and Bentivogli 2004).2.2 Second versionThe first version of the MEANING Format hasrecently been extended within the FU-PAT ON-TOTEXT project (Magnini et al 2005).Within this project, we are creating the ItalianContent Annotation Bank (I-CAB), a corpus ofItalian news stories annotated with differentkinds of semantic information.
Annotation is be-ing carried out manually, as we intend I-CAB tobecome a benchmark for automatic InformationExtraction and Ontology Population tasks, in-cluding recognition and normalization of varioustypes of entities, temporal expressions, relationsbetween entities, and relations between entitiesand temporal expressions (e.g.
the relation date-of-birth connecting a person to a date).To fulfill I-CAB annotation needs, we ex-tended MAF, by adding a number of new lin-guistic annotation levels, i.e.:?
temporal expressions?
entities of type person and organization?
mentions (i.e.
the textual expressions re-ferring to the entities)According to the hierarchical approach to rep-resenting relations between annotation levels inthe first version of the MEANING Format, tem-poral expressions and entity mentions are repre-sented with pointers to morphosyntactic levelentities.
Entities, instead, are represented withpointers to entity mentions.To manually annotate temporal expressionswe followed the TIMEX2 markup standard,while to mark entities and mentions we relied onthe ACE entity detection task guidelines.
To per-form the annotation task we used Callisto(http://callisto.mitre.org).3 Converting linguistic annotations intoMAFThe manual annotations produced through Cal-listo, which is related to novel annotation levelssuch  as temporal expressions and entity men-tions, had to be integrated with more traditionalannotations which are performed automaticallywith the TextPro tool, an automatic linguisticanalysis Tool Suite developed at ITC-irst.NewsMEANINGAnnotationFormatCallistoLuceneAIF formatManualannotationAutomaticannotationTextProTextPro formatIndexingData BaseConversionMEANINGBrowserI-CABCorpusAs one can see in the above figure, two differentannotation processes (automatic and manual)produce two different formats which must beconverted and integrated into MAF in order to beaccessed by the MEANING Browser (or anyother NLP tool).3.1 From TextPro format to MEANINGFormatTextPro takes a raw text as input and carries outbasic processing tasks such as tokenization, mor-78phological analysis, PoS tagging, lemmatization,and multiword recognition.
The results ofTextPro analyses are represented in a table,where each token is on a row, and columns con-tain multiple annotation levels.
Converting fromthe TextPro to the MEANING Format requiresretrieving the character positions of tokens in thehub corpus, which are not directly available inthe TextPro output.3.2 From AIF format to MEANING formatThe Callisto manual annotation tool produces acoding format called AIF (Atlas Interchange For-mat), which implements a stand-off XML anno-tation scheme.When using the Callisto graphical interface,all annotations of temporal expressions and en-tity mentions are carried out by selecting a se-quence of contiguous characters.
As a conse-quence, all AIF annotations make reference tocharacter positions.However, from Section 2.2 we know that inMAF temporal expressions and entity mentionsmake reference to morphosyntactic linguisticobjects, not characters.
This implies that, to gofrom AIF to the MEANING Format, we need totranslate annotations making reference to the po-sition of characters into annotations that point tomorphological entities.
More precisely, we needto substitute pointers to character positions withpointers to morphosyntactic objects which havebeen marked automatically by TextPro.
Carryingout this step will also achieve the integration ofmanual and automatic annotations.The integration step is possible because theMAF hierarchy of annotation levels points, at thelowest level, to character positions.
By followingthe hierarchy of links relating the various annota-tion levels it is always possible to trace back alinguistic object to some sequence of charactersin the raw text, and in the opposite direction,given a string, we know what linguistic objectscorrespond to it.
Summing up, the integration ofAIF annotations into MAF requires that, giventhe character positions contained in the AIF an-notation of some string, we substitute the point-ers to characters with the pointers to the linguis-tic objects that cover the same string.4 Data AccessMAF turned out to be a flexible and expressivemeans to represent and integrate multiple levelsof linguistic annotation.
This was achievedmainly thanks to the adoption of the standoffannotation approach.
However accessing andretrieving information spread in possibly verylarge repositories (hundreds of thousands) ofXML files may be a challenging task even forDatabase Management Systems specifically de-signed to handle XML.
To solve this problem wefirst analyzed existing native XML databasessuch as eXist, and Apache Xindice, but foundthat what was available at the time did not suitedour needs.
For this reason we approached theaccess problem through a two-fold strategy:?
converting  XML data into a relationaldatabase?
indexing XML data and accessing themthrough a  search engine (LUCENE)The conversion of MAF data into a relationaldatabase is based on the following strategy.
Eachannotation level is mapped into a table, whererows represent instances of the relevant linguisticobject (e.g.
words), and columns represent itsattributes (e.g.
lemma, PoS, etc).
Specific col-umns contain the object identifiers and the point-ers to objects of other types/tables.Once MAF data are stored in a relational data-base, they can be accessed quite efficiently.However, when the access to data requires joinsof many tables, access times become incompati-ble with various kinds of applications, such ason-line corpus browsing.
For this reason we triedto complement the use of a relational databasewith the exploitation of the indexing capabilityof the LUCENE search engine(http://lucene.apache.org/).
To this extent wemodified the LUCENE analyzer so as to be ableto parse XML structures.
In this way LUCENEcan be configured in order to index any XMLstructure.The fast access capabilities of a relational da-tabase combined with the extended indexing ca-pabilities of LUCENE enabled us to implement abrowser of MAF annotated corpora.5 The MEANING BrowserThe MEANING Browser can be used by humansto navigate any corpus encoded with MAF.
Thebrowser is built upon an API which can be usedby any automatic system.In the following, we are going to demonstratehow I-CAB texts and their annotations can beaccessed through the MEANING Browser.The first kind of access to the corpus is word-oriented, and amounts to a concordancer, i.e.
a79tool able to provide all the occurrences of a cer-tain word in the corpus.
The user can alterna-tively search for all occurrences of a word form,or a lemma, possibly constraining the search to acertain PoS.
Free combinations between theseconstraints are allowed.
The system will return aKWIC-like concordance of all the tokens in thecorpus that match the request, within a chosenword window.
By clicking on the magnifyingglass, one can see the sentence in which thesearched word occurs (see Appendix 1).By clicking on a specific icon a new windowis opened where the whole text is displayed andits linguistic annotations are made accessible.
Anumber of graphical widgets allow the user tohighlight the desired annotations: e.g.
nouns,verbs, multiwords, temporal expressions, men-tions of a specific entity.In Appendix 2 the browser is used to showboth nouns (automatically annotated) and entitymentions (from manual annotation).
Appendix 3shows time expressions and discontinuous mul-tiwords; see how the multiword ?ha rassegnato?
le dimissioni?
(he resigned) is made discon-tinuous by the occurrence of a time expressionieri (yesterday).
The browser will also give mor-phosyntactic information about single wordscomposing multiwords (governo, government).From the same window one can access the XMLfiles encoding multiple annotation levels for thesame document.ReferencesBentivogli, L., Girardi, C., Pianta, E. 2003.
The ME-ANING Italian Corpus.
In Proceedings of the Cor-pus Linguistics 2003 conference, Lancaster, UK.Ide, N. & Romary, L. 2002.
Standards for LanguageResources.
In Proceedings of LREC 2002, LasPalmas, Canary Islands, Spain.Magnini, B., Negri, M., Pianta, E., Romano, L., Sper-anza, M., Serafini, L., Girardi, C., Bartalesi, V.,Sprugnoli, R. 2005.
From Text to Knowledge forthe Semantic Web: the ONTOTEXT Project.
InProceedings of  SWAP 2005 Workshop, Trento, I-taly.Pianta, E. and Bentivogli, L. 2004.
Annotating Dis-continuous Structures in XML: the MultiwordCase.
In Proceedings of the LREC 2004 SatelliteWorkshop on "XML-based richly annotated cor-pora", Lisbon, Portugal.Appendix 1Kwic ConcordancerAppendix 2Browsing nouns (in grey, automatic annotation)  andentity mentions (Tony Blair, manual annotation)Appendix 3Browsing discontinuous multiwords (ha rassegnato ?le dimissioni, he resigned), time expressions (ieri,yesterday) and word information (governo)80
