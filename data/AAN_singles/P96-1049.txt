On Reversing the Generation Process in Optimality TheoryJ.
Eric FoslerU.C.
Berkeley and International Computer Science Institute1947 Center Street, Suite 600, Berkeley, CA 94704fosler~icsi.berkeley.eduAbstractOptimality Theory, a constraint-based phonol-ogy and morphology paradigm, has allowedlinguists to make elegant analyses of manyphenomena, including infixation and redupli-cation.
In this work-in-progress, we build onthe work of Ellison (1994) to investigate thepossibility of using OT  as a parsing tool thatderives underlying forms from surface forms.a.
Derivational Phonology b. Optimality TheoryFigure I: Search Spaces Within Different Paradigms1 IntroductionOptimality Theory (Prince and Smolensky, 1993) is aconstraint-based phonological nd morphological systemthat allows violable constraints in deriving output sur-face forms from underlying forms.
In OT a system ofconstraints selects an "optimal" surface output from aset of candidates.
The methodology allows succinct anal-yses of phenomena such as infixation and reduplicationthat were difficult to describe under sets of transforma-tional rules.Several computational methods for OT have been pro-duced within the short amount of time since Prince andSmolensky's paper (Ellison, 1994; Tesar, 1995; Ham-mond, 1995).
These systems were designed as genera-tion systems, deriving surface forms from an underlyinglexicon.
There have, however, been no computationalmodels of OT parsers that derive underlying forms fromthe surface form.
z In this work, we lay the theoreticalgroundwork for using OT as a parsing tool.2 Comparing Derivational Methodsto Optimality TheoryIn traditional computational phonology/morphologysystems such as two-level phonology (Koskenniemi,1983), grammars that generate surface forms axe invert-ible, allowing parsing back into underlying forms.
In aderivational framework, the grammar converts underly-ing forms to surface outputs via transformations; the in-put and output share the same space (Figure la).
In theone-level version of OT that most computational meth-ods use, the space is populated with candidate outputsI Some of the computational work in OT confusinglyuses the term "parsing" to refer to generation.created by a generator function GZN operating on in-put strings.
The search narrows in on an optimal out-put (Figure lb) using evaluation constraints in a processcalled EVAL; successively smaller boundaries are cut outby the constraints until only one candidate remains.
Itis easy to see why the derivational method can be runbackward: it just retraces derivational links in the graph.It is not obvious, though, how the input can be foundfrom the search space in OT.3 Tagalog InfixationInfixation has traditionally been a difficult problemfor computational models that use two-level phonology(Sproat, 1992).
Infixation in Tagalog, however, has beenmodeled using OT  (McCarthy and Prince, 1995).
InTagalog, the urn affix can appear as a prefix, or "move"slightly into the word to which it is attaching (French,1988).Root with um Glossalis um-alis "leave"sulat s-um-ulat "write"gradwet gr-um-adwet "graduate"McCarthy and Prince analyze um as a prefix, whichmoves into a word to reduce the number of coda con-sonants.
They postulate two competing constraints,ALIGN-PREFIX and the higher-ranked NOCODA.
ALIGN-PREFIX states that the prefix should remain as close tothe front of the word as possible.
NOCODA penalizessyllables with coda consonants.In the OT  derivation of grumsdwet from um+gradwet(Figure 2), the winning candidate violates NOCODAtwice, while the first two candidates violate it threetimes.
The final candidate is pruned since it violatesthe ALIGN constraint more times than the winner.354Candidates NoCodaum.grad.wet ?
* .
!gum.rad.wet ?
?
.
!V / gru.mad.wet **gra.dum.wet **Align, , I I I~, , , , , L ; ; ; ; ; ; ;i , \ [ : l l* * *!
*Figure 2: OT Evaluation for Tagalog Infixation(Morphenm Structure) ( PPWWWWWWW~ I / WPPWWWW~ {WWPP~(Syllable Structure) { NC00NCONC/ \ [  | 0NCONCONC~ ~ 00NONCONC}(Phoneme Strtlcturc) x umgradwet  I \[ ~ gumradwet l  ?
g rumadwet  /Candl Cand2 Cand3Figure 3: Candidate outputs for um+gradwet in anFST4 Ellison's Conversion MethodEllison (1994) provides a paradigm for converting Opti-mality Theory constraints into Finite State Transducers.He requires that EVAL constraints output binary markswhen ranking candidates and be describable as a regularlanguage; the output of GEN must also be describableby a regular language.
As Ellison points out, most con-straints can be reformulated to be binary.
He is ableto build FST representations forthe constraints that heconsiders, showing them to be regular.For the Tagalog example, GEN will output the regu-lar language shown in Figure 3 for the first three candi-dates (umgradwet, gumradwet, and grumadwet).
2 Eachcandidate consists of segments associated with a syllablestructure position and a morpheme structure marker.
3We now consider the ALIGN-PREFIX constraint, re-stricting the prefix to occur as early in the word as pos-sible.
This is encoded as an FST that writes marks onan output "Harmony Marks" tape.
A 'T' is writtenfor any word (W) morphological material that precedesprefix (P) material, and a "0" is written for any othersegment.
(Molpheme St~ctm'e) 0 (Syllable Structure) ?
(Phoneme Structure) ?Figure 4: ALIGN-PREFIX FST Regular LanguageThe regular language generated by this FST (Figure 4)has a very simple structure.
Any Ws before Ps on theMorpheme Structure tape get a harmony violation mark.Taking the product of this language with the optimalcandidate scores the candidate (Figure 5).
The harmonymarks include two non-harmonicmarks (i.e.
"l"s); intheOT tableau in Figure 2, we see that ALIGN also gives twomarks to the optimal candidate.We can encode a similar FST for NOCODA.
This FSTexamines the syllable structure tape to give harmonymarks (Figure 6)-- codas (Cs) get a harmony violationmark, onsets (O) and nuclei (N) are unmarked.
As in theOT tableau, the winning candidate (Figure 7) violatesNOCODA twice.2For brevity, we are not considering other candidates.aWe have extended Ellison's work by adding a thirdtape that marks segments as belonging to the prefix orto the word.
(Harm?nyMarks) (1 1 0 0 0 0 0 0 i ) w  (Morpheme Structure) W P P W W W W (Syllable S~cture) 0 0 N 0 N C 0 N(Phoneme Structure) g r u m a d w eFigure 5: Scoring of gruma~lwet by ALIGN-PREFIX -ony-,(ll ?1o )(Morpheme Structure) ?
?
(Syllable S~ucmm) o N C(Phoneme Structure) ?
?
?Figure 6: Regular Language generated by NOCODAOnce the OT constraints are represented as FSTs,combining all of the EVAL constraints into one trans-ducer is a straightforward product.
Ellison augmentsthe product procedure so that harmony marks are con-catenated by the resulting transducer.We have used two different types of harmony marksin the ALIGN-PREFIX and NOCODA FSTs, representingthe ranking of the two rules as suggested by McCarthyand Prince.
The higher-ranked NOCODA constraint out-puts "2" marks while ALIGN-PREFIX outputs 'T' marks.
4Harmonic omparisons between the candidates will con-sider the candidates with the smallest number of "2"marks first, followed by the smallest number of "1"marks.
Marks are not added together, ather, the countof each type of mark is the deciding factor in evaluation, sThe output of GEN and the constraints of EVAL arecombined into a single transducer by taking the productof all of the FSTs.
For the Tagalog example, the outputrankings for the candidates are shown in Figure 8.
Usingthe harmonic marks to prune the resulting transducerreveals the optimal candidate (Figure 9).5 Extensions to ParsingEllison's approach gives us an elegant method of per-forming OT generation using finite state automata.
Nev-ertheless, the system cannot parse the output stringback into underlying surface forms.
In a derivationalparadigm (Figure la) , the input and output forms areenclosed in the same space.
The derivational grammaris a transform that one can invert using FSTs, searchingfor the input using the output.Ellison's FSTs transform output candidates to har-mony marks; even so, the inversion of these FSTs areuseless.
The crucial point is that GEN hides the surface-form-to-candidate mapping; in Ellison's ystem the EVALportion of the system only combines with the output ofGEN, so the mapping is lost.
For invertability it is crit-ical that the FST have access to both input and outputforms.In the version of 0T  (one-level OT) Ellison incorpo-rated into his system, outputs of GEN are constrained4Ellison uses only one type of mark and determinesrank ordering from the relative positions of marks foreach output segment.
These two methods are equivalent.S0ne "2" is worse than two 'q"s.- .-iooooo o )(Morpheme Sa'uc~r?)
W W P P W W W W(Syllable StmcnLm) 0 0 N 0 N C 0 N(Phoneme Slructul~) g r u m a d w ?
tFigure 7: Scoring of grumadwet by NOCODA355~ s ~ )  \[ P pwwwwwww III wPewwwwww |j wwPPwwwww(Syllab~ Stnmt~e) INCOONCONC II ~ONCONCONC ~l OONONCONC~S~gctw~)~umgradwet l J%gumradwet l l  grumadwetFigure 8: Output of OT-FST Systema~ooy~k,)  \[ zozoooooooo2ooooo2\(Moqmen~S~ucut~) I ww P Pwwwww l(Syllable Stmctu~) %00NONCONC/(Phonen= Struclm~) \ g r u m a d w e c /Figure 9: Pruned Output of OT-FST Systemto be similar to the input.
McCarthy & Prince (1994)abandon this constraint principle, and use faithfulnessconstraints in EVAL to achieve the same effect within"modern" two-level OT.
This will be a critical move forthe OT-FST paradigm.In two-level OT, G~.N generates all strings; faith-fulness constraints in EVAL minimize the inserted anddeleted material between underlying and candidate sur-face forms.
By specifically modeling the faithfulness con-straints, we now allow the FST to have access to theinput-output correspondences crucial for searching forunderlying forms.
The remaining question, however, iswhether faithfulness constraints can be modeled by reg-ular grammars.
Several formulations of two-level OTfaithfulness constraints are discussed by McCarthy andPrince (1994) and Orgun (1994).
To illustrate the fla-vor of these constraints and how they might be regular-izable, we consider two constraints, CORR and MATCH(named for their similarity to Orgun's constraints).
Forour Tagalog example, we add two tapes for the under-lying word and prefix forms (Figure 10).
The CORRconstraint requires that for every element in the surfacephoneme string there is a segment in the underlying wordor prefix, and vice versa.
MATCH constrains the surfacestring phoneme to match 6 those in the word and prefix,and vice versa (Figure 11).
Using these constraints, theOT-FSTs should be able to generate and parse in theTagalog example.
(Morpheme Structure)(WWP I, WWWWtc  ~(Syllable S~rucRn~) 0 0 N 0 N C 0 N(Surface Phoneme SU'nctu~) g r u m a d w e(Word Phoneme@ (gradwe t)(Pzef=Phoneme,) (u m)Figure 10: Adding Word  and Prefix TapesThe additional computational complexity for imple-menting this type of system may be quite large; thesearch space for determining unknown strings at parsetime will make for a slow implementation u less suit-able heuristics are found for searching over each type ofstring.
Systems of this type are likely to become venmore complex as more information such as moraic struc-ture is added.
We envision that these heuristics will bebased on the harmony mark scoring of the FST, but theexact nature of this is left to future work.6 Conclusions & Future WorkCurrent Computational Optimality Theory systems pro-vide solutions for OT generation, but deriving underly-ing forms from surface forms is not possible within these6Here we mean be identical to; this definition can beextended with features and underspecified lements.
( 1o111111 ) Smear) ?
?
(1%?~ Pmmm~) ?
?Co~ Co-~a~iat'?l ll!b!l I:ll) (Moq~.~ Structure) \[ w (Fno.~.z Sm,cah-~) \[ a(W=dmmmm) ~ a .
.
.
.
.
.
?Mazh ConstmimFigure lh  Faithfulness Constraintssystems.
In order to extend any generation system to anOT parsing system, two-level Optimality Theory shouldbe a critical component, since it moves the hidden rela-tionship between input and output out of GEN and intoEVAL.
With two-level OT, the mapping from input tooutput can be directly operated upon by computationaltheories.We have proposed using two-level OT to extend E1-lison's technique for representing constraints as finitestate transducers.
By explicitly representing the input-to-output mapping using two-level OT, we have laid thetheoretical groundwork for recovering underlying formsfrom surface forms.In future work, we will implement the extensions toEllison's algorithm allowing us to morphologically ana-lyze cases like the Tagalog example.
Search complexitywill, however, be an issue in the implementation f thesystem; after an initial brute-force implementation, workmust be focused on determining how the harmony markscan be used to heuristically guide the parser search.AcknowledgmentsWe would like to thank Dan Jurafsky, Orhan Orgun,Sharon Inkelas, Nelson Morgan, Su-Lin Wu, and threeanonymous ACL reviewers for comments, suggestions,and support.ReferencesT.M.
Ellison.
Phonological derivation in optimality theory.
InCOLING-9$, 1994.K.
French.
Insights into Tagalog: Reduplication, lnftxation, andStress from Nonlinear Phonology.
M.A.
Thesis, Summer In-stitute of Linguistics and University of Texas, Arlington, 1988.M.
Hammond.
Syllable parsing in English and French.
RutgersOptimality Archive, 1995.L.
Karttunen.
Kimmo: A general morphological processor.
InTexas Linguistics Forum P$, 1983.K.
Koskenniemi.
Two-Level Morphology: A General Compu-tational Model \]or Word.Forra Recognition and Production.Ph.D.
thesis, University of Helsinki, 1983.J.
McCarthy and A.
Prince.
Prosodic morphology, parts 1 and 2.Prosodic Morphology Workshop, OTS, Utrecht, 1994.J.
McCarthy and A.
Prince.
Prosodic morphology.
In J. Gold-smith, editor, Handbook of Phonological Theory, pages 318-366.
Basil Blackwell Ltd., 1995.O.
Orgun, Containment: Why and why not.
Unpublished ms., U.of California-Berkeley, Department of Linguistics, July 1994.A.
Prince and P. Smolensky.
Optimality theory.
Unpublishedms., Rutgers University, 1993.R.
Sproat.
Morphology and Computation.
MIT Press, Cam-bridge, MA, 1992.B.
Tesar.
Computational Optimality Theory.
Ph.D. Thesis, U.of Colorado-Boulder, Department of Computer Science, 1995.356
