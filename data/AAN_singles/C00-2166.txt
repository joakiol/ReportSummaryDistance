Robust  Semant ic  Const ruct ionMichae l  Sch ieh len*Inst i tute tbr Comlmtat iona l  Linguistics, University of Stuttgart ,Azenbergstr.
12, 70174 Stut tgar tmike@adler, ims.
uni-stuttgart, de1 IntroductionRecent years have seen a surge ill interest f~rrobust fiat analysis, i.e.
NLP systems with fairlylimited supl)ly of linguistic knowledge but withvast coverage.
The paper describes a modulethat serves as a back-end to such fiat analysismethods and transforms their output into fullsemantic representations a  constructed by deepanalysis methods.
In particular, the module hasbeen designed so as to process input fl'om?
tree banks?
a statistic context-free parser trained onthese tree banks?
a finite-state parser?
a traditional feature-structure parserThe semantic representations which the mod-ule constructs m'e so-called Verbmobil Inter-~&ce \[\[~Ol'lllS (\\[Irl~s) (BOS et al, 1998), (l)uildingon Reyle's Underspecified Discourse R,epresen-tation Structures (1993), see an example, in Fig-ure 1).
Although in principle othe, r representa-tions could be constructed as well, VITs seemto be a particularly good choice: They Call 1oeimplemented as sets of coustraints o that se-mantic construction (SC) reduces to collectingthe constraints and unifying some variables inthese constraints.
Furthermore VITs are sup-ported by ml abstract data type (Dorlla, 2000).Several daunting prol)lems had to be t'aced intile design of the module.
* This work was fimded by the German Federal Min-istry of Education, Science, Research and Technology(BMBF) in the ti'amework of the Verbmobil Project un-der Grant 01 IV 1(}1 U.
Many thanks are duc to M. Emeleand the colleagues in Verbmobil.week( y )next( y )decl(~7\] )\~ 1  ~ maybe(\[~ ) // /  should(el ,~\])  1into( e ,  y )move(e, x ) pron(x)Figure 1: VIT for So maybe, u~'e should move,into idle next u,e, ek.Context -F ree  Input .
The tree banks provid-ing tile input structures (which have been builtin the Verbmobil project) only encode context-free trees to facilitate the training of a statisti-cal parser.
This means that non-local depen-dencies are either left out (e.g.
topicalizationin English) or treated by flattening out sub-trees into rules (e.g.
head-movenmnt ill Ger-man).
The latter strategy can create a vastamount of rules: Sin(:e Gelunan head-nmvementconnects a clause-initial and a clause-final posi-tion, every clause frame gives rise to a new rule.To thee this challenge some adjustments had tobe made:(1) Predicate-argument structure is indispens-able for SC but presupposes reconstruction oflong distance dependencies ("movement").
Ifsyntax cmmot supl)ly it, SC has to retrieve it;on its own (see Section 5.2).
(2) The sheer bulk of rules prohibits manual tag:ging of syntactic rules with semantic rules.
In-1101stead, syntax has to provide pertinent informa-tion in its rules so that SC can determiim thesemantic operations required.Robustness .
Since the tree banks have beenconstructed by hand, errors are prone to cropUl).
Likewise, flat analysis methods cannot beexpected to deliver input of the same qualityas deep traditional parsers.
Finally, grammarsand semantic formalism will often difl'er in theirsubcategorization assmnptions: The verb movee.g.
subcategorizes for hito in the tree bank (seeFigure 2) but not in tile VIT tbnnalism (see Fig-ure 3).To handle this problem, the syntax-semantics-interface should be dismantled as far as possible:Only the most indispensable information shouldbe taken over fl'om syntax.
By neglecting all tilerest the system stands a good chance of skippingsyntax errors.
Furthermore in many cases deci-sions made ill syntax need to be overturned insemantics (e.g.
the complement/adjunct specifi-cations), hnportant semantic information is of-ten deterlnined only in SC or in subsequent dis-ambiguation lnodules that have access to largerstores of context.
This approach eases the bur-den on syntactic analysis and potentially ieldsmore reliable results.D iverse Input .
A SC module should be ableto handle input from a variety of grammars andconvert it into an independellt tbrmat of seman-tic representation.
Thus, a common syntax-semantics-interface (or inore precisely an inter-face between syntax and SC) must be definedonto which every type of' input is mapped.2 Design PrinciplesTo cope with tile problems mentioned, tradi-tional SC techniques (Montague, 1973) (Pereiraand Shieber, 1987) (Bos el; al., 1996) cannotbe used.
Instead, the fbllowing ideas were ex-ploited.Modularity and Underspeeification.
Amajor problem in SC is the treatment of mn-biguity.
Often the local rule context available inSC does not give enough ilffonnation to resolvesuch ambiguities.
In these cases, underspecifi-cation should be used to defer the resolution ofchoices.
Thus, the described module builds alexically and scopally underspecified represen-tation.
Subsequently the lexical ambiguities areresolved by disambiguation modules.COMIZ_ .
.
.
.
~ I tDAIkJ/~D-/ADJ/~"J tD/ ---~ ~Bj/ ~HD ~./ / ~7 ?D2""C~ OMP/ / / '7  Ime'---<OMP \/ / / / -7 m)~C-OMI_'__\SPI,,/~ DRB RB PP MD VB IN DT JJ NNSo maybe we should move into the next weekFigure 2: Example for an application tree.Modularity and Syntax-Semantics-Interface.
To facilitate modularity a syntax-semantics-interface is explicitly defined.
Theinput of every parser is mapped onto aninterface structure called application twe, seeFigure 2.
In this way input Dora various sourcescan be processed with a minimum of effort.Semantic Database.
Great emphasis is laidon an external database of semantic predicates(Heinecke and Worm, 1996).
This database as-sociates lemmas with predicate nmnes, seman-tic classes and subcategorization frames (see theentry in Figure 3).3 System Overv iewThe process of SC can be split into two phases(see Figure 4).
In the first, phase an applicationI;ree is traversed and simultaneously an under-specified semantic representt~tion is lmilt (com-positional semantic onstruction, see section 5).In the second phase the semantic representationis partially (lisambiguated (see section 6).
Thetwo phases are preceded by a step which me.-diates between the actual output of the syntaxand the syntax-semantics-interface.4 Syntax-Semantics- InterfaceTraditionally, the content of the syntax-semantics-interface is somewhat contentious.While syntax-oriented approaches try to inte-grate a good part of SC already into the pars-ing process (cf.
the construction of f-structurein LFG), other al)proaches put tile main focuson semantics (e.g.
Montague Grammar).
Toachieve a high degree of flexibility, a modularSC system has to settle for the lowest, commondenonfinator of all input sources.
The follow-ing information seems to be minimally requiredfrom the syntax.1102Lemma PredNamemove moveSemClass SyntFrame Sortvi3 argl:subj,arg3:obj move sitFigure 3: Ent ry in the  semantic database.ArgSortsagentive,entitycontezt-frec trec;\[ preprocessing step \];application tree4compositional \]semantic construction <- semant ic  lex iconsemantic represcv, tation;noncolnpositional \]semantic COllstruction <-- i d iom lex icon4sc',nantic re.l)r(',~em, tationFigure 4: System overview.
(l) The parser should d(~livcr a tree tbr theparsed string whi(:h the SC system then ('an con-vert into a hierarchical stmmian'e of senmnti(: o\])-(;rations (an applicatiml, tree).
(2) Every word in the input string should 1)esyntactically classified, i.e.
assigned a .~!lntac-tic cateflo'r!/ or \])art of Sl)(;e.(:h tag.
\?e will as-Sllllle that the parser  assigns every word exactlyone category.
(Lexical underslmcification couldconceivatfy b(; used to deal with multiple cate-gories.)
Then morphological analysis (either insynt;ax or SC) maps l;he word cate~rory pair to amorphological lemma and a set of morphologi-e::fl features.
SC records the feal;llres in the VITwhile it uses l;he lemma as a key to the seman-tic lexicon.
In (:ase the lemma is unknown inthe semantic lexicon, the, syst, eln uses the syn~tacti(: category to automati(:ally asso(:iate ~ new1)redicate and semantic (:lass with the lemma.
(3) Every rule used in the tree shouhl speci~y foreach of the categories on its right-hand side ex-actly one grammatical role (GR).
It7 the grmmnardoes not do this, ORs must be deternfined in theprel)roeessing step (e.g.
determiners in NPs arespecifiers).
Gll.s are llsed to COlttro\].
the choice ofs,.
;nmntic el)orations.
The set of CHs emlfloyedis; inspired by HPSG (Pollard and Sag, 1994:):Head, Complement, Adjunct, Om~:j'anct, Spcci-- Z - - _Z  Z -_Z  Z - - _Z  S - -Z  - - _7_Z  - - - - _Z  - - - - _ -  -Y _ _ _ / f f ' -\[ houk,(o, ) 7 "i !Figure 5: ()peration of a(1.immtion.tier, Part of a Multi-Word Lezcme.
The corm-spending semm~tic operations are Complemcn-ration, Adjunction, Coordination, Spec~i/ication,and Predicate Form, ation.
Except for Coordina-tion and Predicate Formation all operations arel)ilmry.
A nile without a head is considered el-lil)ti('al and an abstract 1)redicate for the missinghead is inserted in semantics.5 Compos i t iona l  Semant icConst ruct ion  ProcessConll)ositional SC follows the at)plieation tree(the context-free backbone) and detc,:nfincs thein'edicate-argunmnt structure (th(', subcatego-rization paths).5.1 Senmnt ic  Const ruct ion  on theConsGtuent  St ructureFigure 5 shows two adjun(:tion operations: Inthe firs/: one, the inl:erseetive a(kiunct into thenext week is adjoined to move.
In the secondone, maybe is adjoined to the clause.
The pic-ture makes clem' what the data structure fora partial result should look like: a set of con-straints and some pointers to variables in theseconstraints (e.g.
the partial result for maybewould be { maybe(l~,lq),12 < hl, l l  C- la }~and (12, la)).
Since only finitely many pointersJ l n  a VIT, every predicate is referenced over a baselabel (e.g.
lj for maybe).
The constraint 12 < ha saysthat; the box 12 is subordinated to box lq, while l: C lasl;a|;es t, hat; predicate l: is in box la.1103are involved, they can be collected in a record.All partial results are classified into six seman-tic types according to the pointers they allowfor: nhead (nominal head, ibr nouns), vhead(verbal head, for verbs), adj (adjuncts ~, for ad-verbs, adjectives, subclanses, PPs, also preposi-tions and subordinating co~\junctions), ncomp(nonfinal complements, for pronouns, NPs, alsodeterminers), vcomp (verbal complements, forsentences and complement clauses, also sentencemoods and complementizers), cnj (tbr coordi-nating conjunctions).Semantic operations expect arguments of spe-cific semantic types: Complementation com-bines heads with complements, Adjunction com-bines heads with adjuncts.
Specification con-verts an incoml)lete ncomp (i.e.
a deternfiner)and a nhead into a complete ncomp.
Coordi-nation combines a cnj with a series of partialresults of equal type.If a type clash occurs, a "type raising" opera-tion is invoked.
Such operations usually insertspecific abstract predicates that represent pho-netically empty words or elided materiM still tobe retrieved by ellipsis resolution in a later step.Figure 6 gives a concise description of these op-erations a.
Consider some type-raising exmnples:(1) I will be here Monday.udefunspcc rood(nhead -+ ncomp)(ncomp -~ adj)(2) I will come if necessary.star (adj --+ vhead)(3) Afternoon might work or early morniT~,g.abstr_ tel (ncomp -+ vhead)5.2 Semantic Construct ion on thePredicate-Argument StructureWhile the application tree (Figure 2) states thatthe pronoun we is the subject of should, in the2VITs provide a lexical underspecification class forintersective ( .g.
into the vext week and scopal adjuncts(e.g.
maybe).
Thus, SC has to handle intersecLive andseopal adjunction i  parallel.3In Figure 6 the following names are used for newlyinserted predicates: udef (mill determiner), unspcc_ rood(mill preposition), stat (auxiliary verb be), abstr_nom(nominal ellipsis), abstr_ tel (verbal ellipsis), dccl (declar-ative sentence mood), poss (relation expressed by ge.ni-tive), de.f (definite quantifier).comp(abstrrcl,) a,..-?
@I1~\\% -.
oo %.~'% ,,; _ / / ,o .
,  ,~ .
.
_Figure 6: Type-raising operations.semantic representation (Figure 1) we is the sub-ject of move.
So in this case head and seman-tic subject m:e not in the same local rule.
Toretrace such non-local dependencies, a slash de-vice is used to store the pertinent information(the argument variable and the box label of thehead) and propagate it through the applicationtree in search for a licenser.
If a subcategorizedelement occurs without a subcategorizing head(as occurs often in fl'agmentary input), an ellip-tical element is assumed:(4) I mean if you --~ absh'_ 'tel with subject you6 Noncompos i t iona l  Semant icConst ruct ionIn noncompositional SC idioms are recognizedm~d a higher level of abstraction is achieved.Technically, noncompositional SC is abouttransforming VITs.
Thus, for implementationthe VIT transfer package of Dorna and Emele((1996)) is used.
Linguistically, the componentperforms the following tasks:?
recognition of multi-word lexemes thatarc not designated as such by syntax(e.g.
greeting expressions good night, com-paratives more comfortable)?
recognition and comput~tion of clock times(e.g.
a qm~rter to ten) and (late expressions?
recognition of titles (e.g.
Frau Miiller)?
partial dismnbiguation of sentence mood(e.g.
who did it; is recognized as a question)?
distribution of conjoined material, if re-quired by the level of abstraction aimed for1104(e.g.
clock tilnes between a. quarter to andhalf l)aSt to, n, (late expressions Monday thethird and tenth)?
eoml)ositional morphology for German(e.g.
Sl;it'tmuseum -: museum with theualne Stilt)7 SummaryThe paper has presented a module d capableo:\[' tlandling inlmt from tlat, analysis lnetho(lsand transforming them into full-fledged seman-tic representations.
The module works rolmstlyand currently has a throughput of about 98%on Verbmobil tree bank input (i.e.
it gener-al:es 21,222 English and 26,789 German VITx.
)The remaining 2% are due to errors in the SCmodule, errors in the tree bank, or coordination1)tel)ictus 1)etween SC and tree 1)ank.Evaluation of the module is COnll)lieated 1) 3, theeffort involved in mmmally constructing a siz-able set of input structures and correspondillgsemantic rel)resentations, l?urthermore, t;t1(: VITformalism has been in constant flux over thelast; years with the correct outlmt representa-tions changing almost monthly.
It is, however,envisaged to perform an evaluation on('e dusthas settled.The approach described adds in two respects tothe rot)ustnexs of the overall system.
First, l;heflat analysis lmrxerx used are very rolmst as con-terns low-level inconsistencies such as agreementfailures or missing function words (prepositions,determiners, COmlflementizers, etc.).
Second,the data analysed in the Verbmobil tree banksm:e exclusively xpoken language.
Hence, the treebanks encode analyxes tbr phenomena such asfl'agmentary inlmt , truncated or elliptical sell-tencex, etc.
The described module, gives seman-tic analyses for all of these constructions.
(Usu-ally an abstract predicate is incorl)orated whichgiven a hint to subsequent modules that aim topiece together partial utterances.
)Another perspective of this work is that it pro-vides a first step towards a real corlms seman-tics by converting large sets of data into seman-tic representations.
Due to the abstraction theyembody, semantic representations are a valuabletoo\] for content queries to the.
processed corpora.More immediately, the semmltic representations4More inibrmation can be found in Schiehlen (1999).generated by the described module have beenused as text and training data tbr applicationsrequiring abstract input, such as transfer in ma-chine translation and generation.References3ohan Bos, Bjgrn Gambit(k, Cln'istiml Lieske,Yoshiki Mori, Manii'ed Pinkal, and Km'sten L.Worm.
1996.
Coml)ositional Semantics in Verb-mobil.
In Proceedings of the 16th, Interna-tional Cm~:ferencc.
on ComFutational Linguistics(COLING '96'), Copenhagen, l)emnark.Johan Box, Bianka Buschbeck-Wolf, MichaelDorna, and C.3.
I{upp.
1998.
Managing intbr-ination at linguistic interfaces.
In Proceedingsof th, e IT(h, Intcrnatio'nal CoT~ference on Com,-p'u, tational Linguistics (COLING '98), Montreal,Ca.lmda.Michael l)orna and Martin C. Einele.
1996.Senmntic-Based Transfer.
In Proceedings ofthe.
16th, I'lder'nationaI Co'n:fi'.rence on Computa-tional Linguistic,~ (COLING '96), Cot)enhagen ,Denmark.Michael Dorna.
2000.
A Library Package forthe Verbmobil Interface Term.
Verbmobil E,e-port 238, Institut fiir maschinelle Sprachverar-l)eitm~g..\]ohannes Heinecke and Karsten Worm.
1996.A Lexical Semantic Database for Verbmol)il.
\[51Proceedings d the/tth, internatio'na, l Cov:fere',,ceon Comp'u, tational Linguistics (COMPLEX '96),Bud~l)est , I{ungary.Eichard Montague.
1973.
The, Proper Treat-ment; of Quantification.
In Jaako Hintikka,Julius Moravcsik, and Patrick Suppes, editors,Approaches to Natural Lang,uage , pages 221242.
Reidel, l)ordreeht.Ferlmndo C.N.
Pereira and Stuart M. Shieber.1987.
Prolog and Natural-Language Analysis.CSLI Lecture Notes.
Center for the Study ofLanguage and hfformation, Stanford, Calitbr-nia.Carl Pollard and Ivan Sag.
1994.
Itead-Driven Phrase Structure Grammar.
Universityof Chicago Press, Chicago.Uwe Reyle.
1993.
Dealing with Ambiguitiesby Underspeeification: Construction, I{epresen-tation and Deduction.
Journal of Semantics,10(2):123-179.Michael Sdfiehlen.
1999.
Semantikkonstruktion.Ph.D.
thesis, Universitgt Stuttgart.1105
