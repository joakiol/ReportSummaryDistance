Parsing Ambiguous Structures using Controlled Disjunctionsand Unary Quasi-TreesPhilippe BlacheLPL - CNRS29 Avenue Robert SchumanF-13621 Aix-en-Provencepb~ipl, univ-aix, frAbst ractThe problem of parsing ambiguous tructuresconcerns (i) their representation and (ii) the spec-ification of mechanisms allowing to delay andcontrol their evaluation.
We first propose to usea particular kind of disjunctions called controlleddisjunctions: these formulae allows the represen-tation and the implementation f specific con-stralnts that can occur between ambiguous val-ues.
But an efficient control of ambiguous struc-tures also has to take into account lexical as wellas syntactic information concerning this object.We then propose the use of unary quasi-treesspecifying constraints at these different levels.The two devices allow an efficient implementa-tion of the control of the ambiguity.
Moreover,they are independent from a particular formalismand can be used whatever the linguistic theory.1 In t roduct ionMost of the approaches dealing with ambi-guity are disambiguating techniques.
Thispreliminary constatation seems trivial andrelies on a simple presuposition: the am-biguous tructures need to be disambiguated.However, this is not true from several re-spects.
Machine translation is a good ex-ample: the ambiguity of a sentence in thesource language needs very often to be pre-served and translated into the target one (cf.
(Wedekind97)).Another remark, in the same perspective:most of the disambiguating techniques relyon a single linguistic level.
In other words,they generally make use of lexical or syn-tactic or semantic information, exclusively.But a natural processing of natural languageshould not work in this way.
All the linguis-tic levels of NLP (i.e.
phonetic, phonologic,lexical, syntactic, semantic and pragmatic)have to be taken into account at the sametime.
In other words, processing ambigu-ity would have to be parallel, not sequen-tial.
The problem is then to use ambiguousstructures during the parse without blockingthe analysis.
In a first approximation, such aproblem comes to parse using underspecifiedstructures.
We will see that this constitutesa part of the solution.The third and last preliminary remark fo-cuses on the control strategies for the evalu-ation of ambiguous structures.
These strate-gies can rely on the formal properties of theambiguous tructure (for example the sim-plification of a disjunctive formula), on thecontextual relations, etc.
But the ambiguousobjects can themselves bear important infor-mation specifying some restrictions.
We willdevelop in this paper several examples illus-trating this point.
The approach describedhere make an intensive use of this kind ofconstraints, also called control relations.We present in this paper a technique calledcontrolled disjunctions allowing to representand implement an efficient control of am-biguous tructures at the lexical and phrase-structure level.
We illustrate this techniqueusing the HPSG framework, but it could beused in all kind of feature-based representa-tions.
This approach relies (i) on the rep-resentation of constraints relations betweenthe feature values and (ii) on the propaga-tion of such relations.
We insist on the factthat this is not a disambiguating technique,but a control of the evaluation of ambigu-ous structures.
In order to increase the num-ber of constraints controlling an ambiguousstructure, we generalize the use of control re-124mobi le  =- r~,.., A<lsl I~A., ~o .
.
l l.. / /CAT ad j  ~" -ho~ L .
l |L,,,,,.,<,<o,< is,,,<Figure 1: Control relatio~-'within a lexical entrylations at the phrase-structure level.
We pro-pose for that a particular epresentation fhierarchical relations for ambiguous objectscalled unary quasi-trees.This paper is threefold.
In a first section,we present he limits of the classical repre-sentation of ambiguity and in particular thetechnique of named disjunctions.
The secondsection describes the controlled disjunctionmethod applied to the lexical level.
We de-scribe in the third section the generalizationof this technique to the phrase-structure levelusing unary quasi-trees and we show how thisapproach is useful for an online control of theambiguity during the parse.2 Ambigu i ty  and  D is junct ionsSeveral techniques have been proposed forthe interpretation and the control of dis-junctive structures.
For example, delay-ing the evaluation of the disjunctive for-mulae until obtaining enough informationallows partial disambiguation (cf.
(Kart-tunen84)).
Another solution consists in con-verting the disjunctive formulae into a con-junctive form (using negation) as proposedby (Nakazawa88) or (Maxwell91).
We canalso make use of the properties of the for-mula in order to eliminate inconsistencies.This approach, described in (Maxwell91), re-lies on the conversion of the original disjunc-tive formulae into a set of contexted con-straints which allows, by the introduction ofpropositional variables (i) to convert he for-mulae into a conjunctive form, and (ii) toisolate a subset of formulae, the disjunctiveresidue (the negation of the unsatisfiable con-straints).
The problem of the satisfiability ofthe initial formula is then reduced to that ofthe disjunctive residue.This approach is fruitful and several meth-ods rely on this idea to refer formulae withan index (a propositional variable, an integer,etc.).
It is the case in particular with nameddisjunctions (see (DSrre90), (Krieger93) or(Gerdemann95)) which propose a compactrepresentation f control phenomena and co-variancy.A named disjunction (noted hereafter ND)binds several disjunctive formulae with an in-dex (the name of the disjunction).
These for-mulae have the same arity and their disjunctsare ordered.
They are linked by a covariancyrelation: when one disjunct in a ND is se-lected (i.e.
interpreted to true), then all thedisjuncts occurring at the same position intothe other formulae of the ND also have tobe true.
The example (1) presents the lexi-cal entry of the german determiner den.
Thecovariation is indicated by three disjunctiveformulae composing the named disjunctionindexed by 1.
( i )den :P= f i l lL"O'x v, , ,< j jBut the named disjunction technique alsohas some limits.
In particular, NDs have torepresent all the relations between formulaein a covariant way.
This leads to a lot ofredundancy and a loss of the compactnessin the sense that the disjuncts don't containanymore the possible values but all the pos-sible variancies according to the other formu-lae.125Some techniques has been proposed in or-der to eliminate this drawback and in par-ticular: the dependency group representa-tion (see (Griffith96)) and the controlled dis-junctions (see (Blache97)).
The former re-lies on an enrichment of the Maxwell andKaplan's contexted constraints.
In this ap-proach, constraints are composed of the con-junction of base constraints (correspondingto the initial disjunctive form) plus a controlformula representing the way in which valuesare choosen.
The second approach, describedin the next section, consists in a specific rep-resentation of control relations relying on aclear distinction between (i) the possible val-ues (the disjuncts) and (ii) the relations be-tween these ambiguous values and other ele-ments of the structure.
This approach allowsa direct implementation of the implicationrelations (i.e.
the oriented controls) insteadof simple covariancies.3 Controlled DisjunctionsThe controlled isjunctions (noted hereafterCD) implement he relations existing be-tween ambiguous feature values.
The exam-ple of the figure (1) describes a non covariantrelation between GENDER and HEAD features.More precisely, this relation is oriented: if theobject is a noun, then the gender is mascu-line and if the object is feminine, then it isan adjective.The relation between these values can berepresented as implications: noun => mascand fem :=~ adj.
The main interest of CDsis the representation f the variancy betweenthe possible values and the control of thisvariancy by complex formulae.Controlled disjunctions reference the for-mulae with names and all the formula areordered.
So, we can refer directly to one ofthe disjuncts (or to a set of linked disjuncts)with the name of the disjunction and its rank.For clarity, we represent, as in the figure(2), the consequent of the implication witha pair indexing the antecedent.
This pairindicates the name of the disjunction andthe rank of the disjunct.
In this example,noun(2,1) implements noun => masc: thepair (2, 1> references the element of the dis-junction number 2 at the i st position.
(2)mobile =\[ o,,} 1As shown in this example, CDs can repre-sent covariant disjunction (e.g.
the disjunc-tion number 1) or simple disjunctions (dis-junction number 2).L w = {z v, v, f v, z v,The example (3) 1 present, s the case of anambiguity that cannot be totally controlledby a ND.
Tlfis structure indicates a set ofvariancies.
But the ccvariancy representa-tion only implements a part of the relations.In fact, several "complex" implications (i.e.with a conjunction as antecedent) controlthese formulae a~s follows :{aAc=> f,  bAd:-~ e, cAe  :=> b, dA f :::> a}These implications (the "controlling for-mulae") are constraints on the positions ofthe disjuncts in the CD.
The formula in theexample (4) presents a solution using CDsand totally implementing all the relations.
Inthis representation, (i = 1) n (j = 1) ~ (k = 2)implements the implication a n c ~ \].
Theset of constraints is indicated into brackets.The feature structure, constrained by thisset, simply contains the elementary varia-tions.l (i = l) A (j = l) =t" (k = 2) !
r{a Vi bl}\](4) (i=2) A( j=2)~(k l) -,1{ cvjd}( j= l )^(k=l )~( i  2)( j=2)ACk=2)~( i  1)J L{evkfFrom an implementation point of view, thecontrolled isjunctions can easily be imple-mented with languages using delaying de-vices.
An implementation using functions inLife has been described in (Blache97).1This problem was given by John Griffith.126mobile = \[\]"PHON O~s,,,SEM i ... i HEAO {,O,,,, V, ~}I|S NSEM I ...
I HEAO  {odjV, , OUn)/ / /DT~ ~.AD.~TR I~/- - - L  \ [s~s~M ... H~ADFigure 2: UQT in a HPSG formfe nTt e --~"PHON CXs?~sE~ I...
I HEAD { .ou .
Vl ?
v, ~erb}DTRS Vl I,,/s'"SE"' I ' ' "EA?
V' V' "e"b}/  ~ COMP..DTR V2~SUBJ.DTR VI j \ [  \[PHON feryneHEAD_DTR DTRS HEAD_DTR SYNSEM 0... \] HEADFigure 3: UQT of the lexical entry ,ferme4 Genera l i za t ion  to  thePhrase-St ructure  Leve l4.1 Unary Quasi-Trees(Vijay-Shauker92) proposes the use of treesdescription called quasi-trees whithin theframework of TAG.
Such structures rely onthe generalization of hierarchical relationsbetween constituents.
These trees bear someparticular nodes, called quasi-nodes, whichare constituted by a pair of categories of thesame type.
These categories can refer or notto the same objet.
If not, a subtree will beinserted between them in the final structure.Such an approach is particularly interest-ing for the description of generalizations.The basic principle in TAG consists inpreparing subtrees which are part of the finalsyntactic structure.
These subtrees can be ofa level greater than one: in this case, the treepredicts the hierarchical relations between acategory and its ancestors.
Quasi-trees gen-eralize this approach using a meta-level rep-resentation allowing the description of thegeneral shape of the final syntactic tree.The idea of the unary quasi-trees relies ba-sically on the same generalization and wepropose to indicate at the lexical level somegeneralities about the syntactic relations.
Atthe difference with the quasi-trees, the onlykind of information represented here con-cerns hierarchy.
No other information likesubcategorization is present here.
This ex-plain the fact that we use unary trees.Several properties characterizes unaryquasi-trees (noted hereafter UQTs):?
An UQT is interpreted from the leaf (thelexical level) to the root (the proposi-tional one).?
A relation between two nodes ~ and/~(a dominating j3) indicates, in a simplePSG representation, that there exists aderivation of the form a 3"  B such that~eB.?
Each node has only one daughter.?
An unary quasi-tree is a description oftree and each node can be substitutedby a subtree 2.2But at the difference with the quasi-trees, a nodeis not represented by a pair and no distinction isdone between quasi-root and quasi-foot (see (Vijay-Shanker92)).127"PHON OtSYNSEMDTRS? ""
I HEAD BOBBv, 1,S,'HSE  I ...
I HEAD  odj V,,l sUEJ-DTR I \] IDTRS ~EAD_DTR I- - L  LS,,..~s~ ... HEAO'\[ooMP_o,~ IIS,,NS~,I...I.~AOC~,~O,,,-,V,,~dj}t~?~-?T~ V'}v '  l /  \[ I',HOH I,~'".,~ADJ_DTR \ ] /DTRS /HEAD.
.DTR / L L Ls'~'s"M I "'" I "~A'~Figure 4: UQT with an embedded ambiguity?
The nodes can be constituted by a set ofobjects 3.
If more than one object com-pose a node, this set in interpreted as adisjunction.
Such nodes are called am-biguous nodes.
A categorial ambiguityis then represented by an unary quasi-tree in which each node is a set of ob-jects.?
Each node is a disjunctive formula be-longing to a covariant disjunction.?
An UQT is limited to three levels: lexi-cal, phrase-structure and propositional.
(5)The example (5) shows the UQT corre-sponding to the word mobile with an ambi-guity adjective/noun.
For clarity's sake, thetree is presented upside-down, with the leafat the top and the root at the bottom.
Thisexample indicates that:?
an adjective is a daughter of an APwhich is to its turn a daughter of a NP,?
a noun is a daughter of a NP which isto its turn a daughter of an unspecifiedphrase XP.3These objects, as for the quasi-trees, can be con-stituted by atomic symbols or feature structures, ac-cording to the linguistic formalism.As indicated before, each node representsa disjunctive formula and the set of nodesconstitutes a covariant disjunction.
This in-formation being systematic, it becomes im-plicit in the representation f the UQTs (i.e.no names are indicated).
So, the position ofa value into a node is relevant and indicatesthe related values into the tree.This kind of representation can be system-atized to the major categories and we Canpropose a set of elementary hierarchies, asshown in the figure (6) used to construct heUQTs.
(6)It is interesting to note that the notion ofUQT can have a representation into differentformalisms, even not based on a tree repre-sentation.
The figure (2) shows for examplean HPSG implementation of the UQT de-scribed in the figure (1).In this example, we can see that the ambi-guity is not systematically propagated to allthe levels: at the second level (sub'structure~\]),  both values belong to a same feature(HEAD-DAUGHTER).
The covariation hereconcerns different features at different levels.There is for example a covariation betweenthe HEAD features of the second level and the128type of the daughter at the third level.
More-over, we can see that the noun can be pro-jected into a NP, but this NP can be either acomplement or a subject daughter.
This am-biguity is represented by an embedded vari-ation (in this case a simple disjunction).The example described in the figure (3)shows a french lexical item that can be cat-egorized as an adjective, a noun or a verb(resp.
translated as ferm, farm or to close).In comparison with the previous example,adding the verb subcase simply consists inadding the corresponding basic tree to thestructure.
In this case, the covariant part ofthe structure has three subcases.This kind of representation can be con-sidered as a description in the sense that itworks as a constraint on the correspondingsyntactic structure.4.2 Us ing  UQTsThe UQTs represent the ambiguities at thephrase-structure level.
Such a representationhas several interests.
We focus in this sectionmore particularly on the factorization andthe representation of different kind of con-straints in order to control the parsing pro-cess.The example of the figure (4) presents anambiguity which "disappears" at the thirdlevel of the UQT.
This (uncomplete) NP con-"tains two elements with a classical ambigu-ity adj/noun.
In this case, both combinationsare possible, but the root type is always nom-inal.
This is an example of ambiguous struc-ture that doesn't need to be disambiguated(at least at the syntactic level): the parsercan use directly this structure 4.As seen before, the controlled isjunctionscan represent very precisely different kind ofrelations within a structure.
Applying thistechnique to the UQTs allows the represen-tation of dynamic relations relying on thecontext.
Such constraints use the selectionrelations existing between two categories.
Incase of ambiguity, they can be applied to an4We can also notice that covariation implementsthe relation between the categories in order to inhibitthe noun~noun or adj/adj possibilities (cf.
the CDnumber 1).ambiguous group in order to eliminate incon-sistencies and control the parsing process.
Inthis case, the goal is not to disambiguate hestructure, but (i) to delay the evaluation andmaintain the ambiguity and (ii) in order toreduce the set of solutions.
The figure (5)shows an example of the application of thistechnique.The  selection constraints are applied be-tween some values of the UQTs.
These re-lations are r@presented by arcs between thenodes at the lexical level.
They indicate thepossibility of cooccurrence of two juxtaposedcategories.
The constraints represented byarrows indicate subcategorization.
If suchconstraint is applied to an ambiguous area,then it can be propagated using the selec-tion constraints whithin this area.
In thisexample, there is a selection relation betweenthe root S of the UQT describing "poss~de"and the node value NP at the second levelof the UQT describing "ferme".
This in-formation is propagated to the rest of theUQT and then to the previous element us-ing the relation existing between the valuesN of "ferme" and Adj of "belle".
All theseconstraints are represented using controlleddisjunctions: each controller value bears thereferences of the controlled one as describedin the section (3).The interest of this kind of constraints isthat they constitute a local network whichdefines in some way a controlled ambiguousarea.
The parsing process itself can generatenew selection constraints to be applied to anentire area (for example the selection of a NPby a verb).
In this case, this constraint canbe propagated through the network and elim-inate inconsistent solutions (and eventuallytotally disambiguate the structure).
Thispre-parsing strategy relies on a kind of head-corner method.
But the main goal here, asfor the lexical level, is to provide constraintscontrolling the disambiguation of the struc-tures, not a complete parsing strategy.5 Conc lus ionControlled Disjunctions allow a precise rep-resentation of the relations occuring betweenfeature values.
Such relations can be defined129La $crram de la porte qu?The lock of the door thaiIXP XPla b?11?
ferr~ p{~sexie f~-m?
realthe beautiful farm possesses closes badlyI I I I I IPro Aclj,~lAd j V Aa i A~Det- -  N~'~N NI~v  ' VFigure 5: Constraint networks on ambiguous areasstatically, in the lexicon.
They can also be in-troduced ynamically during the parse usingthe Unary Quasi-Tree representation whichallows the description of relations betweencategories together with their propagation.These relations can be seen as constraintsused to control the parsing process in caseof ambiguity.An efficient reatment of the ambiguity re-lies on the possibility of delaying the eval-uation of ambiguous tructures (i.e.
delay-ing the expansion into a disjunctive normalform).
But such a treatment is efficient if wecan (1) extract as much information as pos-sible from the context and (2) continue theparse using ambigous tructures.
The use ofCDs and UQTs constitutes an efficient solu-tion to this problem.ReferencesPhilippe Blache.
1997.
"Disambiguatingwith Controlled Disjunctions."
In Pro-ceedings of the International Workshop onParsing Technologies.Jochen DSrre & Andreas Eisele.
1990.
"Fea-ture Logic with Disjunctive Unification"in proceedings of COLING'90.Dale Gerdemann.
1995.
"Term Encoding ofTyped Feature Structures."
In Proceedingsof the Fourth International Workshop onParsing Technologies, pp.
89-98.John Griffith.
1996.
"Modularizing Con-texted Constraints."
In Proceedings ofCOLING '96.Lauri Karttunen.
1984.
"Features and Val-ues" in proceedings of COLING'8~.Robert Kasper & William Rounds 1990.
"The Logic of Unification in Grammar" inLinguistics and Philosophy, 13:1.Hans-Ulrich Krieger & John Nerbon_ne.1993.
"Feature-Based Inheritance Net-works for Computational Lexicons."
In T.Briscoe, V. de Paiva and A. Copestake, ed-itors, Inheritance, Defaults and the Lex-icon.
Cambridge University Press, Cam-bridge, USA.John T. Maxwell I I I&  Ronald M. Kaplan.1991.
"A Method for Disjunctive Con-straints Satisfaction."
In M. Tomita, ed-itor, Current Issues in Parsing Technol-ogy.
Kluwer Academic Publishers, Norwell,USA.Tsuneko Nakazawa, Laura Neher & ErhardHinrichs.
1988.
"Unification with Disjunc-tive and Negative Values for GPSG Gram-mars" in proceedings of ECAI'88.Gertjan van Noord & Gosse Bouma.
1994"Adjuncts and the Processing of LexicalRules" in proceedings of COLING'9$.K.
Vijay-Shanker.
1992 "Using Descriptionsof Trees in a Tree Adjoining Grammar" inComputational Linguistics, 18:4.Jiirgen Wedekind & Ronald Kaplan.
1997"Ambiguity-Preserving Generation withLFG-and PATR-style Grammars" inComputational Linguistics, 22:4.130
