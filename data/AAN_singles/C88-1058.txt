COORDINAT ION IN RECONNAISSANCE-ATTACK PARSING*Michael B. KACDepartment of LinguisticsUniversity of MinnesotaMinneapolis, MN 55455, USAThomas C. RINDI~LESCHDepartment ofLinguistics andAcademic Computing Services and SystemsUniversity of MinnesotaMinneapolis, MN 55455, USAAbstractA proposal for recognizing coordinate structures using the 're-connaissance-attack' model is presented.
The approach concen-trates on di;tinguishhlg predicate coordination from other typesof coordination and suggests that low-level stmctnral cues (suchas the number of predicates, coordinators, and subordinatorsoccurring in the input string) can be exploited at little cost duringthe early phase of the parse, with dramatic results.
The methodis tested on a text of 16,000 words.0.
Introducl ionCoordinate structures are difficult to parse in part because of theproblem ol determining, in a given case, what kinds of con-stituents are being coordinated.
The examples in (1) will illus-trate:(1) a. John hits Fred and the other guys.b.
John hits Fred and the other guys attack him.c.
When John hits Fred and the other guys attackhim.Many variations on this theme are possible, to the point whereserious doubts are raised regarding the efficacy in this domain ofconvention;tl parsers of either the top-down or bottom-up variety.In such parsers, it is necessary either to invoke backtracking toundo the effects of incorrect hypotheses or to store large numbersof alternatives until local indetermlnacies are resolved.
In thispaper, we will suggest an alternative approach based on the'Recotmaissance-Attack' model described in Kac et al 1986 (andmore fully :in Rindflesch forthcoming), designed to skirt many ofthe problems associated with more traditional designs.
*The work presented here was supported under Control Data CorporationGrant #86M102 to the University of Minnesota (Jeanette Gundel, LarryHutchinson and Michael Kac, Principal Investigators).
Special thanks aredue to Nancy Hedberg and Karl Swingle for their xssistance on the project,and to Walling Cyre, technical liaison with CDC.
The authors are listed inalphabetical older.Our proposal is theoretical in two senses.
On the onehand, it does not present a detailed picture of an actual parsingalgorithm, being intended rather to show that a significant bodyof linguistic data supports the contention that rapid, earlyresolution of local structural indeterminacies of the kind exem-plified in (1) is feasible in the vast majority of cases.
On theother hand, it is also based on a significant idealization, namelythat each word belongs to only one syntactic ategory.
Our in-tent is, in part, to show the applicability to a difficult parsingproblem of a technique which can be found in other AI domains(Kowalski !
979) but which seems to have been little exploited inwork on natural language processing 1.1.
Theoret ical  BackgroundIn a Reconnaissance-Attack parser, no structure-building is at-tempted until after an initial 'overflight' of the entire sentence hasbeen made, directed at obtaining information, provided by low-level structural cues, which can then be exploited in narrowingthe range of available options at a later point.
(We assume herethat the cues used are present in a minimally analyzed string, bywhich we mean one about which the only sU'uctural informationavailable concerns the relative order and category membership ofthe individual words.)
It is of the utmost importance to bear inmind that in this approach, ira given case cannot be resolved at agiven point in tire parse, there is no guessing as to which type ofcoordination might obtain and hence no need to backlrack for thepurpose of undoing the effects of erroneous hypotheses; rather,the parser simply defers the decision to a later phase at whichmore structural information is available.
Note as well that this isnot 'bottom-up' parsing in the usual sense either, since wheremore than one possibility is logically available, the parser makesno attempt to represent them all and cull out tlte false positiveslater on; there is a strict principle of 'altruism avoidance' (that is,never undertaking computational effort without a guaranteedpayoff) which compels the parser to give no answer at all duringlThe approach described inSampson 1986, while quite different in its actualcharacter, is nonetheless similar in spirit o what we are proposing.285a particular phase if more than one answer is possible in principlegiven the information available to that point.
(If, at the end ofthe process, unresolved indeterminacies remain, ambiguity ispredicted.
)Intuitively, the difference between Reconnaissance andAttack is that Reconnaissance onstitutes the gathering of infor-mation while Attack constitutes anything which involves deci-sion-making.
More formally, Reconnaissance can be viewed asa series of parameter-setting operations each of which is doneindependently of any of the others while Attack requires i-multaneous access to all parameters.It is worth noting that there does not appear to be anyreason to exclude in principle the possibility of hybrid models inwhich principles of the sort we shall develop below are invokedprior to the application of a parser along the lines of those de-scribed in e.g.
Dahl and McCord 1983 or Fong and Berwick1985.
Our principal contention is that whatever choices are madeabout how to go about 'parsing proper' (that is, actually buildinga syntactic representation for an input sentence), there is an ad-vantage to having certain global structural information alreadyavailable rather than starting 'blind'.Following Kac 1978 and 1985, we subsume under a sin-gle rubric of 'predicate coordination' the coordination of verbs,VP's, and S's on the rationale that common to all three types isthat they have the effect of rendering predicates 'equiordinate'(that is, so related that neither is sub- or superordinate o theother).
In e.g.
(2) I believe that John likes Mary and Han'y admiresSue.the verbs likes and admires are both subordinate o believe butneither is subordinate o the other.
Similarly, in a sentence like(ib) above, hits and attacks are both 'topmost' in the ordinationscheme.
(For a more detailed evelopment of the theory of ordi-nation relations, see Rindflesch forthcoming.)
In this approach adistinction is made between STRICT and LOOSE coordination (twocoordinate xpressions are strictly so if separated by at most aconjunction, loosely coordinate otherwise, as in e.g.
John andMary.
ran vs. John ran, and Mary (too)) and also betweenPRIMARY and SECONDARY coordination.
The primary coordinatesin a coordinate structure are the largest coordinate xpressions(e.g.
the S's in sentential coordination), while the secondarycoordinates are smaller expressions contained in the primary onestaken (by the theory) to be coordinate by virtue of thecoordination of the containing expressions; for example, thepredicates of coordinate sentences (both VP's and V's) are sec-ondary coordinates in a sentential coordination.For purposes of parsing, we assume that the first task isto coordinate WORDS rather than the larger expressions containingthem; that is, secondary coordinates are sought first, and theprimary coordinates in which they appear are identified later.This is consistent with the overall theoretical pproach, describedin more detail in Rindflesch op.
cit., which is much more akin todependency syntax than to phrase structure analysis.
(See alsoKac and Manaster-Ramer 1986.)2.
A Sketch of the Parsing StrategyIn this paper, our focus will be on determining, from a minimallyanalyzed string, whether or not a given instance of and or or en-ters into a predicate coordination as defined above.
(A longerpaper giving full details of the approach is in preparation.
)In the earliest stages of parsing a given sentence contain-ing a coordinating conjunction, each conjunction is identified aseither (a) definitely involved in a predicate coordination, (b) asdefinitely not involved in such a coordination, by virtue of fallingcertain ecessary conditions for being so involved, or (c) as ofindeterminate status which must be resolved (if possible) in alater phase of the parse.
The following principles are invoked forthis purpose:Applied early in Attack:(3) LIMITS CONSTRAINT (Rindflesch forthcoming)The number of predicate-coordinating conjunctionsin a sentence must be smaller than the number ofverbs.
(4) POSITION CONSTRAINT (Kac 1978, 1985)If a coordinating conjunction conjoins expressionsX and Y, it lies somewhere between X and Y.Applied late in Attack:(5) MAIN PREDICATE CONSTRAINTThere is at least one predicate in every sentencewhich is not subordinate oany other predicate inthat sentence.
(6) EQUIORDINATION CONSTRAINTIf two predicates are coordinate then they are alsoequiordinate.28gThe principles (3-6) are all rather straightforward, evencommon-~sensical; it is nonetheless not entirely uninteresting tolearn that they Ibrm the basis for an extremely effective parsingstrategy.Reconnaissance involves a single pass through the cur-rant string, the first steps being lexical lookup and counting andindexing all categories.
The information gained from thiscounting a0d indexing is then used to eliminate impossible struc-tures, via a check for compatibility with the principles (3-6)above.In order to deal with coordination two ancillary lists,called POTlr.NTIAL COORDINATION LISTS, are associated uringReconnaissance with each conjunction which occurs in the inputsiring.
One of these, PCL-L, contains words which occur to theleft of the ronjunction with which the list is associated; each ofthese word.~ could thus potentially serve as the left-hand memberof a coordination effected by that conjunction.
The other list,PCL-R, se,:ves a similar %nction for words which occur to theright of the conjunction.
Two elements can be coordinated onlyif one occurs in PCL-I, for a given conjunction and the other oc-curs in PCL-I~ for that conjunctionTtw constraints which apply early in Attack presupposeno information beyond what is gathered uring Reconnaissanceand are used to eliminate words in the input string as candidatesfor inclusion in these lists (on the assumption that it is best toelinfinate as much as possible as early as possible on the basis ofthe least possible amount of information and thus enhance theefficiency of the parser).
The remaining constraints removewords from the lists.
In the early stages of the parse, each ofthese lists may be quite long, but as the pm'se proceeds, elementsare deleted by the invocation of the Attack principles, until, forwell formed input strings, each list contains only elementswhich, on some adnfissible reading of the input, can enter into acoordination effected by the associated conjunction.
(In am-biguous cases such as John believes the boys and the girls be-lieve Fred, each list would have more than one member.)
Inunambiguous cases, it can be determined that a conjunction isdefinitely involved in predicate coordination if both its PCL-Land its PCL-R contain exactly one predicate and no other word,and a conjunction is definitely not involved in predicate coordi-nation if either of its PCL's does not contain any verb at all.
Thecoordination status of a conjunction is indeterminate with regardto predicate coordination when, although both PCL's contain averb, one (or both) of them contains at least one additional word.A natural question to ask at this point is whether thestrategy just described is not just bottom-up arsing of the fa-miliar sort.
The answer is no, for at least two reasons.
First, thePCL's do not hold fully specified analyses of substrings of theinput; they contain only words which, on the basis of ilfforma-tion so far available, cannot be excluded from consideration aspotential coordinates of the conjunction associated with a givenpair of lists.
Nor do the lists hold potential conjunct pairs.
(Suppose, for example, that PCL.-L and PCL-R respectively holdwords A, B and C and X and Y.
There is an obvious differencebetween the two lists and the six conjunct pairs derivable fromthem, that is, <A, X>, <A, Y>, <B, X> ... )Reconnaissance onsists of a single pass throvgh the in-pitt string, during which, after lexical lookup, each word is in-dexed, a count is kept of the number of tokens of each categorywhich occurs in the input string, and the PCL's are crcated foreach conjunction.
After Reconnaissance, if there are any con-junctions, the PCL's are filled subject o the Limits Constraintand the Position Constraint.
The IAmits Constraint is appliedonly when PCL-L is filled, and the Position Constraint is appliedonly when PCL-R is filled.
PCL-L is filled first.
A word is putinto PCL-L if and only if its index is less than the index of theconjunction with which the PCL-L is associated and the numberoffwords of this category in the string is greater titan one (whenthis second condition is met the Limits Constraint is satisfied).Thus when hits is encountered while the parser is attempting tofill PCL-L for the conjunction in (la), hits is not put into PCL-Lsince there is only one verb in the string.
It can accordingly bedetermined that the conjunction is not coordinating predicates in(1 a), since there will be no verb ill either of the PCL's.In order to satisfy the position constraint when PCL-R isfilled, a word is put into PCL-R if and only if its index is greaterthan the index of the current conjunction and there is already aword in the PCL-L for the current conjunction which has thesame category as the word being considered for inclusion in thePCL-R for this conjunction.
For example, in processing(7) John and Martha know Fred likes DoraThe parser does not put either know or likes into PCL-R becausethere are no verbs in PCL-L.As will be discussed below, in the vast majority of casesin at least one domain the type of coordination occurring in asentence cart be determined solely on the basis of these straighbforward principles.
In these eases, the structure ncountered issimilar to that seen in (1 a).
In order to determine whether pred-icates are being coordinated in structures like those seen in (lb)2B7and (lc) it is necessary to have somewhat more informationabout he input string.The additional information required to deal with stringssuch as (lb) and (lc), only one of which involves predicate co-ordination despite the fact that he two are nearly identical, con-cerns the relationships which obtain between predicates in acomplex sentence.
These relationships are enforced by con-straints (5-6) above, in conjunction with(8) MULTIPREDICATE CONSTRAINTEvery predicate ina multipredicate s ntence mustbe in an ordination relationship with anotherpredicate in the same sentence.The task of the parser confronted with polypredicational exam-ples of the type in which we are interested is to distinguish coor-dination of predicates, as in (lb), from sub-/superordination, asin (lc).
During the Attack phase of the parse, we capitalize onthe fact that it is possible to resolve certain indeterminacies aboutthe structure of a sentence on the basis of only incompleteinformation about the ordination relations which obtain in.thesentence.
This depends on the fact that ordination relations canexist only in the presence of ORDINATION RELATION SIGNALS(ORS's).
While space does not permit a complete discussion ofORS's here, some examples are subordinators (e.g.
comple-mentizers and subordinating conjunctions) and the marking ofverbs like know and believe as allowing predicational objects.Here we will concentrate onsubordinators.
Each subordinator ina sentence r0ust be associated with a verb in that sentence, andthis association causes that verb to be necessarily subordinate osome other predicate.
The fact which is of value in parsingcoordinate structures i that this can be known even before thesuperordinate partner of the subordinate predicate has been iden-tified.
For example in (lc) even before anything else is knownabout he structure of the sentence, it can be determined that thesubordinator when is associated with hits and that therefore hitswill have to be subordinate osome other predicate in that sen-tence.As noted above, the parsing principles applied duringAttack remove words from the PCL's.
In the parse of (lb),while there are nouns and verbs in both PCL's at the beginningof Attack, all the nouns are removed, as Attack proceeds, fromboth PCL's, leaving only the verbs to be coordinated.
The wayin which Attack accomplishes this is as follows.There is more than one predicate in (lb) and thus thepredicates have to be in an ordination relation in order to satisfythe Multipredicate Constraint.
This relation cannot be subor-dination, since no subordinating ORS is present; assuming co-ordination to be the only other possibility, and given that there isa coordinating conjunction between the two predicates, we con-clude that the predicates are in fact coordinate.
In order to satisfyall of the constraints Attack must herefore r move John and Fredfrom PCL-L leaving hits as the sole member of that list.
It mustalso remove guys and him from PCL-R leaving attack as theonly word in that list.
The configuration of these lists thusindicates that the only possible coordinates in (lb) are hits andattack.These same principles determine that predicate coordina-tion cannot obtain in (lc).
As Attack begins, PCL-L for theconjunction i  this string contains John, hits', and Fred.
PCL-Rcontains guys, attack, and him.
Since there is more than onepredicate in this string, the predicates will have to be in an ordi-nation relationship, but it will have to be a relationship ofsubor-dination rather than coordination.
Hits will have to be subordi-nate to some predicate in this sentence by vil'tue of the fact that itis associated with the subordinator when.
(We do not state themeans by which this is established here; see Rindflesch op.
cit.for details.)
Since hits is necessarily non-main, any predicate co-ordinated with it would also have to be non-main, by the Equior-dination Constraint.
Therefore it is not possible to coordinate at-tack with hits in (lc) since such a construal would cause theMain Predicate Constraint to be violated.
The only possible or-dination relationship which can obtain between the predicates in(1 c) is one in which hits is subordinate oattack.
Therefore, hitsmust be removed from the PCL-L and attack must be removedfrom the PCL-R. From this it can at least be determined that (lc)does not involve predicate coordination.3.
Empirical Support for the ApproachTo test the effectiveness of the strategy described above, wesubjected to analysis acorpus of nearly 16,000 words (15,985 tobe exact).
The texts used were specifications and design re-quirements (5 in all) applying to hardware manufactured byControl Data Corporation, supplied to us in machine-readableform.
Each text was run through aconcordance program whichidentified all tokens of and and or; and for each token of eachconjunction, tile containing sentence was then analyzed (byhand).
A total of 431 tokens of the two conjunctions occurred inthe corpus, 362 of them in complete sentences (as opposed tosection heads or fragments, which were ignored).
As notedearlier, we did not, in undertaking the analysis, take into accountthe fact that here is widespread category-label ambiguity ('CLA')288in English; this represents a significant idealization of the data,but it is nol a cheat.
The problem with regard to coordinationwith which we m'e concerned is that even in cases where no CLAoccurs, problems of the sort exemplified by (1) arise.
That theoverall problem is even worse than we make it out to be does notinvalidate our claims, though it meaus -- and we are fully awareof this -- th,~t tile account is incomplete.Of the conjunctions occurring in complete sentences, thetype of coo,-dination i which each was involved was correctlyascertainable via application of the five constraints in 91% of thetotal number of cases, given only tile information made availableby Reconnaissance plus the ORS-verb associations made early inAttack.
82 % of the total nmnbcr of cases were correctlyidentified solely on thc basis of the Limits Constraint and thePosition Constraint.
Of the remaining cases, at least 51%snbmit o re.solution during tile Attack phase on the basis of thecomparativ,',ly low-level structural information concerning ordi-nation relations (Main Predicate, Equiordination, and Multi-predicate C,mstraints).
(This figure is conservative in that furtherprinciples may be identified in the future which would improveperformance.)4.
ExamplesWe conclude with an analysis of some sentences from tile cor-pus, to illustrate the approach in more detail.
The discussion hereconcentrates on our stated goal of determining for any con-junction what kinds of expressions are being coordinated.
Alarge number of the sentences in the corpus, with respect to co-ordination, have a structure resembling(9) A single sector single port buffer will provide speedmatching between the host interface and the con-troller.In this sentence, there is only one predicate (will provide) andfi~rthermore there is no predicate to the right of the conjunction.Either the Limits Constraint or the Position Constraint can there-fore determine solely on the basis of information determinedduring Reconnaissance that there is no predicate coordination i(9).The somewhat more complex structure of (10) can alsobe handled without difficulty.Although there are two predicates in (10) (are and to support),The Position Constraint correctly predicts that they cannot becoordinate since they are not separated by the conjunction i  thissentence.Sentences containing more than one conjunction submitto the principles we propose in this paper, as illustrated by(11) The primary slructures and relationships of thesememory blocks are illustrated in Figure 11 and aredefined more precisely in later sections.The first conjunction in (11) does not effect predicate coordina-tion, while the second oes.
'file Position Constraint assures thecorrect analysis for the first conjunction: PCL-L for the firstconjunction will not contain a verb since there are no verbs to theleft of this conjunction; consequently, no verb will be put in thecon'esponding PCL-R, thus precluding predicate coordination forthe first conjunction in (1 I).
When the PCL's are filled for thesecond conjunction in (11), they will both contain nouns as wellas predicates; hence either could potentially be coordinated.However, since there are two predicates in (11) (are illustratedand are defined) and since there are no subordinating ORS's inthe sentence, the predicates in fact must be coordinate in order tosatisfy tile Multipredicatc Constraint.Although the PCL's for the conjunction or in (I2) willinitially contain both nouns and verbs, the conect analysis of thissentence does not involve predicate coordination.
(12) When switch position 1 is set to the "off '  position,a 2 byte or a 16 bit word will be available on thedata bus bits 0-F.The analysis of (12) is similar to the analysis of (lc).
There arctwo predicates in the string (is set and will be available), one ofwhich (is set) is necessarily non-main due to its association withthe subordinating conjunction when.
Were these predicates to becoordinated they would both be non-main by the EquiordinationConstraint.
Therefore, the only way the MultipredicateConstraint and the Main Predicate Constraint can be satisfied is toconsider there to be no predicate coordination i this sentence.
(I0) The pfimary purposes of the special functions arc tt~support diagnostic analysis, data recovery, anddownload capabilities.289ReferencesDahl, V. and M.C.
McCord.
1983.
Treating coordination ilogic grammars.
Am.
J. Comp.
Ling.
9.69-81.Fong, S. and R.C.
Berwick.
1985.
New approaches to parsingconjunctions using Prolog.
Proceedings of the Twenty-Third Annual Meeting of the Association for Computa-tional Linguistics.
118-126.Kac, M.B.
1978.
Corepresentation of Grammatical Structure.Minneapolis and London University of Minnesota Pressand Croom Helm.......... 1985.
Constraints on predicate coordination.
IndianaUniversity Linguistics Club.......... 1986.
Parsing without (much) constituent s ructure.Proceedings of the Eleventh International Conference onComputational Linguistics.
156-158.......... , T.C.
Rindflesch and K.L.
Ryan.
1986.
Reconnais-sance-attack parsing.proceedings of the Eleventh Inter-national Conference on Computational Linguistics.
159-160Kowalski, R. 1979.
Algorithm = logic + control.
Communi-cations of the ACM.
22.424-436.Rindflesch, T.C.
Forthcoming.
University of Minnesota Dis-sertation.Sampson, G. 1986.
A stochastic approach to parsing.
Proceed-ings of the Eleventh International Conference on Com-putational Linguistics.
151-155.290
