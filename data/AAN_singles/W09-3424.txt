Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 165?170,Suntec, Singapore, 6-7 August 2009. c?2009 ACL and AFNLPTowards Building Advanced Natural Language Applications - AnOverview of the Existing Primary Resources and Applications in NepaliBal Krishna BalMadan Puraskar PustakalayaLalitpur,Patan Dhoka,Nepalbal@mpp.org.npAbstractThe paper gives an overview of some ofthe major primary resources and appli-cations developed in the field of NaturalLanguage Processing(NLP) for the Nepalilanguage and their prospective for build-ing advanced NLP applications.
The pa-per also sheds light on the approaches fol-lowed by the current applications and theircoverage as well as limitations.1 IntroductionNLP is a relatively new area of involvement inthe context of Nepal.The first ever NLP worksin Nepal include the Nepali Spell Checker andThesaurus that got released in the year 2005.The years after that saw an increasing amountof Research and Development of NLP resourcesand applications under different programs.This in-cluded Dobhase1, an English to Nepali MachineTranslation System, Stemmer and MorphologicalAnalyzer, Parts-of-Speech(POS) Tagger, Chunker,Parser, a corpus-based on-line Nepali monolin-gual dictionary, Text-To-Speech etc.
On the re-sources front, by 2008, we have had developed aLexicon, Nepali Written Corpus,Parallel Corpus,POS Tagset,Speech Recordings etc.
In the sec-tions that follow, we will be discussing over thecurrent achievements and the possible advancedapplications that can be developed on the basis ofthe existing resources and applications.2 Resources2.1 Nepali LexiconThe process of the development of the NepaliLexicon(Bista et al,2004-2007;2004-2007a) un-derwent several changes as the purpose of the lex-icon was not very clear in the beginning.No doubt,1http://nlp.ku.edu.np/cgi-bin/dobhasewe were aware that the usage of a lexicon wouldbe basically a multi-purpose one, fitting to one ormore NLP applications but we were a bit unsureabout the actual format of the lexicon.As a result,the entries of the lexicon were maintained in dif-ferent file formats ranging from plain spreadsheetsto XML formatted data files.
In the beginning, theattributes of the lexicon were decided to be as:?
Rootword?
Headword?
Pronunciation?
Syllablebreak?
Meaning?
PartsofSpeech?
Synonym?
IdiomBut later on, owing to time constraints and alsotaking into consideration the applicability of thelexicon to some of the immediate NLP applica-tions being developed like the Spell Checker andthe Stemmer/Morphological Analyzer, the entrieswere just made for the attributes - Rootword andPartsofSpeech.
The file format was also fixed forthe plain spreadsheet one, keeping into considera-tion the discomfort faced by the linguists and dataentry persons with the XML data format.The lat-est size of the lexicon is 37,000 root words withtheir parts of speech category specified.
Wherevermore than one category is possible, multiple cat-egories have been entered with the comma as theseparator.2.2 Nepali POS TagsetThe Nepali POS Tagset designed in the begin-ning consisted of 112 tags2.
These tags were2http://www.bhashasanchar.org/pdfs/nelralec-wp-tagset.pdf165used to manually and semi-automatically anno-tate the written corpus as well.
Experiences, how-ever, showed that error rates of annotation couldbe much higher when the size of the tagset was abig one, the reason primarily being the chances ofassigning incorrect tags to the words out of con-fusion while manually annotating the the train-ing data itself.
It was with such motivations thata smaller sized POS Tagset3 was later on devel-oped that consists of just 43 tags.
While develop-ing the tagset, maximum care has been taken toensure that this minimalist approach does not un-necessarily eliminate the unavoidable lexical cate-gories of the language.
The design of this NepaliPOS Tagset was inspired by the PENN TreebankPOS Tagset.Hence, whenever possible, the samenaming convention has been used as in the case ofthe PENN Treebank Tagset.
In Table 1, we pro-vide the summary of the small sized POS Tagset.Owing to space constraints, we have just providedlimited examples for each of the POS category.2.3 Nepali Written CorpusDifferent efforts have been put into developing theNepali Written Corpus.
We try to provide a briefoverview on each of them below.With an aim to facilitate linguistic and computa-tional/corpus linguistic researches of the Nepalilanguage,the compilation of different text cor-pora got initiated under the activity, Nepali Na-tional Corpus4.
The Nepali National Corpus ba-sically consists of three different types of corpora,namely, the Written Corpus(monolingual and par-allel), the Spoken Corpus and the Speech Corpus.The monolingual Nepali Written Corpus was fur-ther sub-divided into two types - the Core Cor-pus and the General Corpus.
The Core Corpusconsists of 398 texts from about 15 different gen-res and amounting to 1 million words, has beencollected from different books,journals,magazinesand newspapers.
The texts belong to the time pe-riod between 1990 and 1992.
The Core Corpushas been converted into XML file format.
In ad-dition, the text has been annotated using the 112Tagset.
The General Corpus,on the other hand, isa collection of the written texts basically from the3http://nepalinux.org/downloads/nlp/nepali postagset.pdf4The Nepali National Corpus was developed under theNepali Language Resources and Localization for Educationand Communication(NeLRaLEC)Project.For details, pleasevisit http://bhashasanchar.orgTable 1: Summary of the Nepali POS TagsetTag Description ExampleNN Common Noun GharNNP Proper Noun RamPP Personal Pronoun MaPP$ Possessive Pronoun MeroPPR Reflexive Pronoun AfuDM Marked Demonstrative ArkoDUM Unmarked Demonstra-tiveTyoVBF Finite Verb KhayoVBX Auxiliary Verb ThiyoVBI Verb Infinitive KhanaVBNE Prospective Participle hidne manchheVBKO Aspectual Participle ThiyoVBO Other Participle Verb DiyekoJJ Normal Unmarked Ad-jectiveAsalJJM Marked Adjective RamroJJD Degree Adjective AdhiktarRBM Manner Adverb dhilo hidchhaRBO Other Adverb yaha basaINTF Intensifier dherai chalaakhPLE Le-Postposition HarilePLAI Lai-Postposition BhailaiKO KO-Postposition RamkoPOP Other PostPositions tabulmathiCC Co-ordinating Con-junctionraCS Subordinating Con-junctionKinabhaneUH Interjection OhoCD Cardinal Number EkOD Ordinal Number PahiloHRU Plural Marker HaruQW Question Word KoCL Classifier DasjanaRP Particle KhaiDT Determiner Tyo ketoUNW Unknown Word NekomprenasFW Foreign Word goodYF Sentence Final ?
!
etc.YM Sentence Medieval , ; : etc.YQ Quotation ??
""YB Brackets () {} []FB Abbreviation Ma.Pu.PuALPH Header List Ka.SYM Symbol %NULL <NULL>166internet.
The collected texts amount to a size of 14million words.
Both the Core Corpus and the Gen-eral Corpus above have been developed followingthe internationally accepted FLOB and FROWNframework for collecting text corpus.Another set of collection under the Written Corpusis the Parallel Corpus.
The Parallel Corpus con-sists of collections from two genres - computingand national development.
The one on comput-ing sizes to be 3 million words of English-Nepaliparallel texts whereas the other one on national de-velopment amounts to about 966,203 words.In another bid, a Nepali Corpora parallel to100,000 words of common English source fromPENN Treebank corpus, available through theLinguistic Data Consortium(LDC)has been devel-oped5.This Parallel Corpus has been also POSTagged with the 43 POS Tagset as presented in Ta-ble 1.2.4 Nepali Spoken CorpusThe Spoken Corpora has been designed on thebasis of the Goteborg Spoken Language Cor-pus(GSLC).
The Corpora have been collectedfrom 17 social activities and contain about2,60,000 words.
These texts are audio-videorecordings of the activities with their correspond-ing transcriptions and annotations about the par-ticipant?s information.
Each activity is stored inthree separate files (.mpeg, .txt and .doc) respec-tively for recording,transcription and recording in-formation.2.5 Nepali Speech CorpusThe Speech Corpus is a specialized recordingsof speech developed for the Nepali Text-To-Speech(TTS) application for enabling the softwareto speak Nepali from written texts.It consists of1,880 sentences and 6053 words, extracted fromthe Core Corpus and later recorded in male andfemale voices.
The recordings are approximatelyof 3-4 hours.3 Applications3.1 Nepali ThesaurusFor developing the Nepali Thesaurus, we haveused the MyThes framework6 developed by Kevin5This work has been developed with the support from theLanguage Resource Association (GSK) of Japan and Inter-national Development Research Center (IDRC) of Canada,through the PAN Localization Project(www.PANL10n.net)6http://lingucomponent.openoffice.org/MyThes-1.zipHendricks.
MyThes is incorporated with theOpenOffice.org suite.Originally, it did not sup-port UTF-8 encoding but the support has beenenabled after OpenOffice.org 2.0.2 onwards.TheNepali Thesaurus currently contains 5,500 entrieswith the attributes - POS Tag, Meaning and Syn-onym.
This application has been released as aninbuilt package with OpenOffice.org Writer local-ized into Nepali for public usage since 2005.3.2 Nepali Spell CheckerThe Nepali Spell Checker follows the Hunspellframework7.
In essence, Hunspell is a spellchecker and morphological library.It is includedin OpenOffice.org suite 2.0 onwards by default.Recently,it has also been adopted by the GoogleSearch Engine as it?s default Spell Checker.
De-pending upon the language specific terriotory,HunSpell may be customized by using the con-cerned locale file.
HunSpell requires two files8,respectively the dictionary file that contains thewords for the language and the affix file thathas rules associated to the words in the dictio-nary by using flags serving as pointers.
Thetwo files should be located in the folder openof-ficefolder/share/dic/ooo/.
Spell checking is doneusing the affix file, locale and the dictionaryfile.While the affix file consists of affix rules, thedictionary file consists of root words.
At themoment,the size of the dictionary file is about37,000 entries whereas we have about 1,800 af-fix rules in the affix file.
The word coveragein terms of spell checking is 6.2 million Nepaliwords.
Random tests of the spell checker yieldedaccuracies of 90%(43 words unhandled out of450 words),94%(25 words unhandled out of 400words),89% accuracy(100 words unhandled out of923 words) etc.
By saying unhandled, we refer tothe situation whereby the incorrect words are notprovided appropriate suggestions.3.3 Dobhase - English to Nepali MachineTranslation SystemWith a view to aid to the majority of English un-proficient Nepalis to some extent, this applicationwas developed under a joint collaboration betweenKathmandu University and Madan Puraskar Pus-takalaya.The software currently is able to providegist translations to simple declarative sentences.It7http://hunspell.sourceforge.net8The two files for Nepali is available athttp://nepalinux.org/downloads/ne NP dict.zip167is a rule and transfer-based Machine TranslationSystem.
More information on the software isavailable at http://nlp.ku.edu.np/3.4 The Online Nepali DictionaryA Corpus based Online Nepali Dictionary hasbeen developed for Nepali and is available in thefollowing link http://nepalisabdakos.comThis dictionary differs from the existing ones(bothhard and soft copy versions) in that this dictionarycontains examples and meanings from the corpusitself.
The XIARA software has been used to lookfor wordlists and concordances in due course ofcompiling the dictionary.
The dictionary currentlycontains about 8,000 entries .3.5 The Nepali Text-To-SpeechThe Nepali Text-To-Speech Application has beendeveloped following the Festival Speech Synthe-sis System.Currently, the Nepali Text-To-Speechworks just in the Linux environment and has thebasic capabilities of reading text from files.Onemay opt to hear the texts either from a maleor a female voice.The application has beendeemed useful not only to visually impairedbut also to illiterates.Lately, there has been agrowing demand of the application for extend-ing it to a screen reader and making it work incross-platforms.For more information, please visithttp://bhashasanchar.org/textspeech intro.php3.6 Conversion ToolsKeeping into consideration that a lot of textsboth in the government and the general pub-lic are still encoded in ASCII-based Nepali non-unicode fonts,we have developed the Conver-sion Tools both for converting non-unicode textsto unicode and vice versa.For details,please visithttp://madanpuraskar.org/ Our efforts in the devel-opment of the tool have been supplemented bythe Open Source Community as well.The latestinformation on the extended work is available athttp://code.google.com/p/nepaliconverter/3.7 The Nepali Stemmer and theMorphological AnalyzerThe Nepali Stemmer and the Morphological Ana-lyzer combines the results of the Stemmer and theMorphological Analyzer in the sense that besidesproducing the stem or root of any word, the as-sociated bound morphemes and their grammaticalcategory are also kept track of.
The Nepali Stem-mer and Morphological Analyzer is a rule-basedone and makes use of the following resources:?
Free morpheme based lexicon?
Affix file or bound morpheme list?
Database of word breaking rulesThe free morpheme based lexicon consistsof free or unbound morphemes of the Nepalilanguage together with their respective parts-of-speech information.
Similarly, the affix fileor bound morpheme list contains the prefixand the suffixes in Nepali.These affixes arefurther associated with numbers which point tothe corresponding word breaking rules.Finally,the word breaking rules database basicallyrepresent the insertion and deletion rules appli-cable once a word breaks down into the rootand the respective affixes.
The application,which is still at a prototypical stage, is available athttp://nepalinux.org/downloads/nlp/stemmer ma.zip3.8 The Nepali Computational GrammarAnalyzerThe Nepali Computational Grammar Analyzeris an attempt to develop a basic computationalframework for analyzing the correctness of agiven input sentence in the Nepali language.While the primary objective remains in buildingsuch a framework, the secondary objective lies indeveloping intermediate standalone NLP moduleslike the POS Tagger,chunker and the parser.InFigure 1, we present the system architecture ofthe Nepali Computational Grammar Analyzer.Talking about the individual modules,for the POSTagger,we have used TNT9,a very efficient andstate-of-the-art statistical POS tagger and trainedit with around 82000 Nepali words.Currentlythe accuracy of the trained TnT POS Tagger forNepali is 56% for unknown words and 97% forknown words.Similarly,for the chunker module, we have devel-oped a hand-crafted linguistic chunk rules and asimple algorithm to process these rules.Currently,we have around 30 chunk rules, which haveto be further optimized for better coverage andoutput.The chunkset consists of 11 chunk tags atthe moment.For the parser module, we have implemented9http://coli.uni-saarland.de/ thorsten/tnt/168a constraint-based parser following the depen-dency grammar formalism10 and in particularthe Paninian Grammar framework(Bharati etal.,1993,1995;Pederson et al,2004).A depen-dency parser gives us a framework to identifythe relations between the verb(s) and the otherconstituents in a sentence.
Such relations, whichbasically occur between verb(s) and nominalconstituents are called Karaka relations.ForNepali, we have identified altogether six differentKaraka relations, namely,Karta - K1, Karma -K2, Karan-K3, Sampradan - K4, Apadaan-K5,Others-KX.The assumption is that if we can establish validKaraka relations between the chunks of the sen-tence and the verb, then the given input sentenceis valid.For example, in the Nepali sentenceRam le bhaat khaayo (meaning Ram ate rice),there is a K1 relation between the verb khaayoand the noun chunk Ram le, and similarly K2relation between the verb khaayo and the nounchunk bhaat.
Next, the Karaka frame specifieswhat karakas are mandatory or optional for theverb and what vibhaktis(postpositions) they takerespectively.
Each verb belongs to a specific verbclass (in our case, whether the verb is transitiveor intransitive)and each class has a basic karakaframe.
Each Tense,Aspect and Modality - TAMof a verb specifies a transformation rule.
Based10http://w3.msi.vxu.se/nivre/papers/05133.pdfFigure 1: System Architecture of the Nepali Com-putational Grammar Analyzeron the TAM of a verb, a transformation is madeon the verb frame taking reference of the TAMframe.
A detailed description of the NepaliComputation Grammar Analyzer is available athttp://nepalinux.org/downloads/nlp/report onnepali computational grammar.pdfThe Grammar Analyzer for Nepali currentlyparses and analyzes simple declarative sentenceswith just one verb candidate.We have developedthe karaka frame for around 700 Nepali verbs.Anagreement module if added to the analyzer couldfurther filter the parses returned by the parsermodule, this time taking the feature agreementslike gender, number, person, tense, aspect andmodality.
Hence,with the possible addition of theagreement module, the robustness of the GrammarAnalyzer is believed to significantly increase.4 ConclusionIn this paper, we discussed on the different effortsput towards developing the basic NLP resourcesand applications.We also talked about the ap-proaches followed by the applications and shedlight on their current coverage and limitations.From the discussions above, it is quite clearthat much work has been done in developinga basic NLP foundation for Nepali both fromresource buiding and applications developmentperspectives.
The way ahead is undoubtedly inrefining the current achievements and building ad-vanced NLP applications like Statistical MachineTranslation System, Name Entity RecognitionSystem, Question Answering System,InformationRetrieval System, Information Extraction Systemetc.
Another possibility is applying the expertiseand experiences gathered while working forNepali to other non-Nepali languages.AcknowledgementsThe works described in the paper have beenpartly supported by the International Develop-ment Research Center(IDRC), Canada throughthe PAN Localization Project(http://panl10n.net)and Asia IT & C Programme of the Euro-pean Commission under the Bhasha SancharProject(http://bhashasanchar.org).169ReferencesA.Bharati, V. Chaitanya, and R. Sangal, Nat-ural Language Processing - A Paninian Per-spective.
New Delhi: Easter Economy Editioned.Kantipur:Prentice Hall, 1995.A.Bharati and R. Sangal, ?Parsing free word order lan-guages in the Paninian framework.,?
in Proceedingsof the 31?st Annual Meeting on Association ForComputational Linguistics (Columbus, Ohio, June22, 1993).Annual Meeting of the ACL., Morristown,NJ, 1993, pp.
105-111.A.Bharati, R. Sangal, and T. Reddy, ?A ConstraintBased Parser Using Integer Programming,?
in Pro-ceedings of the ICON-2002, Mumbai, 2002, pp.121-127.B.
K. Bal, B. Karki, and L. Khatiwada, ?NepaliSpellchecker 1.1 and the Thesaurus, Research andDevelopment,?
PAN Localization Working Papers2004-2007.B.
K. Bal and P. Shrestha, ?Nepali Spellchecker,?
PANLocalization Working Papers 2004-2007.S.
Bista, L. Kathiwada, and B. Keshari, ?Nepali Lex-icon,?
PAN Localization, Working Papers 2004-2007, pp.307-10.S.
Bista, L. Khatiwada, and B. Keshari, ?Nepali Lexi-con Development.,?
PAN Localization, Working Pa-pers 2004-2007, pp.311-15.M.Pederson, D. Eades, S. Amin, and L. Prakash, ?Rel-ative clauses in Hindi and Arabic:A paninian de-pendency grammar analysis.
,?
in Proceedings ofthe Twentiet International Conference on Computa-tional Linguistics., Geneva, 2004, pp.
17-24.170
