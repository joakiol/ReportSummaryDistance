SENSITIVE PARSING: ERROR ANALYSIS AND EXPLANATION INAN INTELLIGENT LANGUAGE TUTORING SYSTEMCamilla SchwindC.N.R.S.
/ G.R.T.C.31, chemin Joseph Aiguier13402 MARSEILLE CEDEX 9 - FranceABSTRACTWe present a uniform framework for dealing with errors innatural language sentences within the context of:automated second language teaching.
The idea is to usea feature grammar and to analyse errors as beingsentences where features have other values than thosethey should have.
By using a feature grammar it ispossible to describe various types of errors (agreement,syntactic and semantic errors) in a uniform framework, todefine in a clear and transparent way what an error is and- this is very important for our application - to analyseerrors as arising form a misunderstanding or ignorance ofgrammatical rules on the part of students.1.
INTRODUCTIONerrors, but the err0r~ and the reasons for them have to beunderstood.
To formulate this concisely, we could say : weare attempting to perform sensitive parsing rather thanrobust parsing.This means that we aim to achieve alsystem which is very sensitive to all possible kinds oferrors and which moreover tries to find the "why" and the"how" of errors.Related research has been carried out by \[MENZEL 1986;PULMAN 1984; WEISCHEDEL et al 1978\].
Menzel'ssystem is much more limited than ours, because hehandles only fragmentory utterances whereas we try toanalyse the correctness of complete sentences freelyformed by students.
Weischedel's treatment of syntacticand.agreement errors is very similar to ours but lessgeneral and less thorough (they only recognize an errorwithout explaning the reasons for it!.In this paper, we present a uniform framework for dealingwith errors in natural language sentences within thecontext of automated second language teaching.
The ideais to use a feature grammar and to analyse errors as beingsentences where features have other values than thosethey should have.
By using a feature grammar it ispossible to describe various types of errors (agreement,syntactic and semantic errors) in a uniform framework, to'.define in a clear and transparent way what an error is and-this is very important for our application- to analyse errorsas arising from a misunderstanding or ignorance ofgrammatical rules on the part of the students.The treatment and even the definition of errors within alanguage tutoring context is very different from the contextof other applications of natural language understanding (c.f.
approaches as described in \[WEISCHEDEL 1983\]),;because the goal is different.
In most applications, the',goal is to understand a sentence despite any errors, i. e. tosomehow analyse the sentence.
In a language tutoring Isystem, the goal is to understand what the Student wantedto do, where he went wrong and what grammar rules hemisunderstood or was unaware of.
In this respect, error;treatment is more difficult in the context of languagetutoring than in other contexts, because errors do not needlto be just ignored or sentences to be parsed despite any~Here it is proposed to describe how we deal withagreement, syntactic and semantic errors within a Germanlanguage tutoring system \[SCHWlND 1986\].1.
Agreement errorsIn German, articles, adjectives and nouns within a noungroup have to agree in gender, number and case, andverbs have to agree in person and number with thesubject noun phrase of the sentence.
The objectcomplements of verbs take certain cases and so doprepositions.
Agreement errors are errors on the syntacticlevel, but they do not concern the order of the words in asentence, hence they can be corrected by changing thecase, the number, the person or the gender of the nounphrases or parts of them.2.
Syntactic errorsWe consider two types of syntactic errors, the first involvingwords which have been omitted or added, e.g.
when anarticle or a preposition is missing or superfluous, and the.second involving the permutation of words or syntacticgroups.
The latter error is very frequent in Germanbecause here the possible places of verbs in a sentencecan differ from many other languages : for example, theverb can go to the very end of a sentence or to the verybeginning.
Some syntactic errors have to be partly608analysed at the morphological level because they involveboth word construction and word order : for an example,in German there are verbs which have a prefix which incertain cases has to be detached and placed at the veryend of the sentence.
(1) Er kommt zurl3ck (He comes back).This is the correct formulation of the sentence.
Students ofGerman tend typically not to detach the prefix zur(Jck andconstruct he ill-formed sentence(2) * E=" zurOckkommt (He backcomes).The word zurEickkommt does not exist in German(although the infinitive is zurEIckkommen) and this errorhas to be recognized at the word level, becausezurgckkommt is an ill-formed word, although theunderlying error is a syntactic error.3.
Semantic ErrorsWe have actually been working on one type of semanticerrors, namely errors in the semantic verb cases whicharise from a misunderstanding of the meaning of verbsand noun~; and their semantic relationships, thus posinglexical problems.
For example, when a student forms thesentence(3) *Das Heft arbeitet (The notebook works).he has not understood-thatarbeiten requires an animatesubject and that Heft is not animate, i.e.
he has a lexicalproblem.In what follows, we will first introduce, in a informal way,the theoretical background for error definition and thendiscuss the treatment of syntactic and semantic errorswithin the language teaching system.Our system is implemented in PROLOG II and has beentested with various dictionaries and by different users(adult language students, pupils).2.
THEORETICAL BACKGROUNDJn this chapter, the concepts of feature grammar andunification are introduced informally.
We provide a slightlymodified definition of unification where the result of theunification is the unified elements and the set of the pairsof elements for which the unification did not work out.
Thi~set is necessary for interpreting and explaning errors.Complex features have been used by most schools ollinguistics \[KAPLAN R.M., BRESNAN J.
1983; KARTUNEN1984\].
The whole process of syntactic analysis isgoverned by features and their values.
Not only the lexicalelements are classified by features but also the syntacticcategories.
For example, the category sentence issubclassified by the features satzstellung, whose values.indicate whether the sentence has a normal word order orhas the verb at the very end or at the beginning, (thiscorresponds in German to different types of embeddedphrases), and by the feature embedded with values + andu indicating whether a sentence or a noun phrase contains?
embedded phrases.
We have constructed a grammarusing 25 syntactic and 40 semantic features.
To ourknowledge, until now feature grammars have never beenapplied to the pr0biem of analysing illformed sentences,nor within the context of language teaching.A feature grammar is an extension of a CHOMSKY-grammar.
The alphabet consists of structured symbolswhich are sets of pairs (feature,value).
In the rest of thispaper, a structured symbol a will be written as a tuplea=\[fl(Vl),...fn(vn)\] where the fi denote feature names andthe v i their values.
No feature can occur twice within astructured symbol.
The set of features occurring in a,{fl .... fn} is called the domain of a, and is written d(a).
Thevalue of f~ d(a) in a is denoted by a(f).
Hence a(f) = v iff f(v)a.
In many cases it is useful to introduce a more concisenotation for sets of structured symbols.
We need to denotesuch sets, because many words are ambigous and haveto be described by a set of structured symbols rather thanby a single one.
Most current theories also allow featuresthat have complex values.
By using disjunction andnegation of values many structured symbols can be writtenmuch more economically.
For example, the German nounKind can have three cases (nominative, dative andaccusative), but in this formalism it is denoted by just onesymbol\[gender(neutr),case(neg(genitive)),number(singular)\].
Letus call sets of structured symbols complex symbols.Structured symbols are used in a formal grammar fornatural language sentences in the following way: there isone feature, cat (category), that plays a special part andwhose values are the categories usually needed in anatural language grammar: sent (sentence)i np (nounphrase), vp (verb phrase), etc.
Further featurescharacterize properties according to which categories aresubclassified; e.g.
vcat (verb category) is a feature whosevalues are intrans (intransitive) and trans (transitive) andprep (prepositional complement); the feature placesubclassifies verbs and its possible values are thenumbers 1, 2, 3, standing for the number of complementsof a verb.
tense is a feature with the properties pluperfect,imperfect, perf, pros, fut specifying the time of a verb.These three features all subclassify verbs.
Other moreifrequently cited features are case, number, gender whichcharacterize articles, nouns, adjectives, but also noun:phrases and noun groups.
Semantic properties ofcategories are equally characterized by features and:formally these "semantic" features are not distinguishedfrom "syntactic" features; e.g.
animate is a semanticfeature whose values are + and and which belongs to:nouns, durative and static and action are features whichclassify verbs.6O94All possible types of errors have been defined by means offeatures.
- .The definition of unification is slightly different from theusual definition (see \[KARTUNEN 1984\]), because in ourapplication we need not only to find whether two symbolscan be unified but also for what reasons they mightpossibly not be unified.
Hence we need to have all thepairs of elements which cannot be unified.Let a= If1 (Vl),...fn(vn)\] and b= \[gl(Wl ),...gm(wm)\], where v iand wj are sets of values.
Then we define a predicateunify(a,b,r,e)where r is the result of the unification and e is the setconsisting of all the pairs of value sets for which a and b!could not be unified, together with all the symbols!contained in the symmetrical difference between a and b.r ={f(v) : f(v)~ a ?
b or (fE d(a) c~ d(b) and v=a(f) c~ b(f)whenever a(f) n b(f) ~ }( - denotes the symmetrial difference between sets)e={f(v) : f(v)~ a ?
b or (fEd(a) c~ d(b) and a(f) n b(f)=zand v=<a(f),b(f)>)}The unification is defined on sets of complex symbols.
Letbe a={al, a2,...an} and b={bl, b2,...bm} where all a i and bjare of the form \[fl(Vl),..fn(Vn)\].
Then the predicateunification of a and b (with the results r and e) Is definedas the union set of all elements which unify(ai,bj,r,e)unification(a,b,r,e)r= u{r :un i fy (  ai,bj,r,e ) and a I ~ aand bjE b}e= u(e :un i fy (  ai,bj,r,e )and a( E aand bj~ b}The unification is obviously successful when r~.Example 1 :The definite article der is described by the complex symbolc= {\[Art-cat(def), Gender,case(genitive), number(plural)\],\[Art-cat(clef), Gender(fern),case(or(genitive,dative)), number(singular) \],\[Art-cat(deS, Gender(masc),case(nominative),number(singular)\]}.The noun Lehrer (teacher) has the representationnl= {\[Gender(masc), case(neg( genitive}},number(singular)\],\[Gender(masc), case(neg(dative)),number(plural)\] }unification(c,nf,r,e) evaluates tOr = {\[Art-cat(def), Gender(masc),case(genitive), number(Plural)\] '\[Art-cat(clef}, Gender(masc},case(nominative), number(singular)I}e = {\[Art-cat(def), Gender(masc),case(< genitive,neg( genitive}},number(<plu ml,sing ular>)\],\[Art-cat(def), Gender(<fem,masc>),case( genitive}, number(<slngular,plural>)\],\[Art-cat(def), Gender(<fem,masc>),case(dative), number(singular)\],\[Art-cat(def), Gender(masc),case(nominative),number(<singular,plural>)\]}Example 2 :The noun Kind (child) ilas ihe representationn2 ={Gender(neutr), case(neg(genitive)),number(singular)}u nification(c,n2,r,e) givesr =1~e = {\[Art-cat(def), Gender(neutr),case(< genitive,neg( genitive)>),number(<plural,singular>)\],\[Art-cat(clef), Gender(<fem,neutr>),case(dative), number(singular) \],\[Art-cat(def), Gender(<masc,neutr>)icase(nominative), number(singular)\]},Feature grammars are defined as formal grammarsmanipulating strings of complex symbols and thederivability concept is modified according to the structuresof the complex symbols.
To each production rule belongsan operation on the feature sets of the symbolsinvolved.3.
THE TREATMENT OF ERRORSThe whole syntactic analysis is usit~g the metamorphosisgrammar formalism \[COLMERAURER 1978\], enriched withunification predicates for syntactic and semanticagreement.3.1.
Agreement errors.The analysis of agreement errors in German is complexbecause morphologically, the words are highly ambigous.There are 24 different definite articles (4 cases, 3 gendersand 2 numbers} but there are only 6 different words forthem all, each of which can have between 2 and 8interpretations (or meanings).
In the same way, everynoun has at most four different forms which can have 8different morphosyntactic meanings.
Adjectives are evenmore ambigous, because there are (at least} 4 differentdeclinations according to their context within a sentence :preceded by a definite or an indefinite article, by no articleor by a negation.
Our grammar contains these fourdeclinations, i.e.
4*3*2*4 adjective meanings and only 5forms for them (ending by "e", "en", "e'm", "er", "es").
Butthe case and number of a noun phrase within a sentencedepend on the verb, since a verb takes a certain case anddetermines the number.
Hence an error in the number of a610noun phrase could also be an error in the number of the'verb.
Moreover, when two elements of a phrase do not.agt:ee, there are frequently several possible ways ofanalysing and explaining the disagreement.
For thisreason, the definition of unification has been slightlymodified so as to produce all the pairs of features whichbdo not agree as to their values.
Consider example 2.
Thenoun phrase der Kind cannot be unified and we want toexplain to a student why.
In the above example, threedifferent analyses have been found.
It depends on thecontext within a sentence which explanation is the rightone.
We have found that case filtering gives plausibleexplanations.
In German, verb complements have cases.Hence, for any noun phrase in a sentence, there is anexpectation as to the case.
Consider the followingsentences :(4) *Der Kind spielt (The child plays).
(5) *Er {\]ibt der Kind Milch (He gives milk to the child\].
(6) *Sie kennt der Kind (She knows the child).In (4), Der Kind is the subject of the sentence and theexpected case is the nominative.
Case filtering gives thethird error analysis : disagreement in the gender, sinceder is masculine whereas Kind is neuter.
In (5), der Kindisthe indirect object of the sentence and the expected caseis the dative.
Case filtering gives us the second erroranalysis: disagreement in the gender, since der isfeminine whereas Kind is neuter.
In (6), der Kind is the:direct object of the sentence and the expected case is theacCUsative.
By case fiitedng, we f ind that tier:cannot beaccusative.The most likely strategy for analysing of agreement errorsconsists of placing an error as high as possible within asyntax tree.
But this procedure can be eliminated in the'following situation.
Take the sentence :(7) * Der G6tter zf3rnen (The gods are angry).the "easiest" case.
Poeole make errors in order to maketheir lives easierl Hence, the strategy of analysing errorsas high as possible is not applicable when a subject nounphrase, which should be in the nominative case, could beanalysed as having another case whereas parts of it are inthe nominative.
Now, we have seen, that in the definitionof unification even when the unification is successful, theset of nonunifiable elements is produced.
Besidescomputational issues, because the algorithm runs onlyonce through the lists, this set is very useful when a nounphrase already analysed, such as the one in our example,:}ia.S to be re~vieWed'in"order to find a possibleidisagreement between its parts.
Case filtering of thejdisagreeing interpretations gives us the correct erroranalysis: disagreement in the number, since der issingular and GStter is plural.During our numerous essays of the system, theseexplanations of agreement errors have always turned outto be plausible.13.2.
Syntactic Errors.We distinguish between low level and high level syntacticierrors.
Low level syntactic errors involve the omission or'addition of functional words such as articles orprepositions, and the permutation of words on the lexicallevel.
High level syntactic errors involve the permutation ofgroups of words.
High level errors are mostly due to nonapplication of obligatory transformational rules or toapplication of the wrong rules, usually derived from thenative language of the student .In \[SCHUSTER 1986\] thisrelationship between errors made by second languageistudents and the grammar of their first language issystematically used for error handling.
We will show bygiving two examples how such types of errors can beclearly represented in PROLOG.
All types of syntactic~errors are treated by error rules.GOtter has the representationn = {\[Gender(masc), case(nag(dative)),number(plural)\]}.unification(a,n,r,e) givesr : {\[Art-cat(def), Gender(masc),case(genitive), number(plural)\]} ande = {\[Art-cat(def), Gender(<fem,masc>),case(genitive), number(<slngular,plural>)\],\[Art-cat(def), Gender(masc),case(nominative),number(<singular, plural>)\]}Der GtJtter is the subject of the sentence and the expectedcase is the nominative, tier GtJtter is genitive plural andthis is the error signalled (disagreement on the case).
Butthis analysis is not at all plausible.
It is very unlikely that astudent should try to construct a genitive plural, which is a"difficult" case, when the nominative is required., which isI.
In German, adjectives precede the noun group, whereasin French , they frequently follow it.
This is described bythe following rules (formulated as PROLOG clauses):np(X,X0) :- art(X,Xl), ng(Xl,XO,F),F.ng(X,X0,correct) :-ag(X,Xl), noun(X1 ,X0);noun(X,X0).ng(X,X0,errer(noun,ag)) :-noun(X,Xl), ag(Xl ,X0).ag(X,X0) :- adj(X,X0);adj(X,Xl ), ag(X1 ,X0).art("das".Y,Y).noun("Auto".
?,Y).adj("blaue".Y,Y).correct.error(noun,ag) :- error-message.611For the sake of clarity, we have simplified these rules bysuppressing all terms relating to the morphological andsemantic analysis and properties of the categories.
Thenoun phrase das blaue Auto would be analysed correctlyas np("das"."blaue".
"Auto".nil,nil,correct) whereas theincorrect noun phrase das Auto blaue is analysed asnp("das"."Auto"."blaue".nil,nil,error(noun,ag)).
The np-ruietreats the error predicate F, which is a PROLOG term, bycalling it.II.
In German, verb groups in the perfect tense arefrequently split up.
The auxiliary takes the place of theverb, and the participle goes to the end of the sentence,as, for example in :(8) Ich habe dem Baby Milch gegeben (I have to thebaby milk given).French (and equally English) students of German mightsay(9) *lch habe gegeben dem Baby Milch.This transformation rule, as well as its erroneous omission,is represented in PROLOG as follows:vp(X,XE,correct) :-verb(X,Xl,t,XH), compls(X1,X0),eq(X0,XH.XE).vp(X,X0,error(verb,part-perf)):-verb(X,X1 ,perf,XH),freeze(X2,compls(X2,X0)),eq(X1 ,XH.X2).ve rb("f&h rt".Y,Y,pres,0).ve rb("ist".Y,Y,perf,"gefah ren").Again, this description has been simplified in order tomake clear how these transformation rules function inPROLOG.
freeze is a predefined predicate of PROLOG I I\[ProloglA\].
freeze(X,P) delays the evaluation of P until X:takes a value, compls analyses the verb complements ofthe sentence.The order of the sentence parts is producedby the equations between them (predicate eq).3.31Semantic errors.The only type of semantic errors on which we have beenworking so far concerns the violation of semanticrestrictions on verbs and their complements.
Consider the.sample sentence (3) in chapter 1.
The semanticrelationships between verbs and their complements aswell as their semantic features are all described bySemantic predicates.subj-sem(arbeiten (work), human).subj-sem(v,n) :- sup(n',n), subj-sem(v,n').obj-sem(schreiben (write), text).sup(human ,individual).sup(human ,group).sup(human ,humanized).sup(text,Heft (notebook)).612In the grammar rules, the semantic predicates are calledas follows :sg(...<v,n>...) :-np(,.n...), vp(...v...),default(subjsem(v,n),sem-error(v,n)).This is a rule analysing a sentence (sg).
"default(p,q)" is apredefined predicate of PROLOG II first evaluating allpossibilities for p, and only when none of these succeedsis q evaluated, sem-err produces an explanation of thetype : arbeiten requires a human subject, Heft is nothuman but an written object.;4.
'CONCLUSIONThe results of our experiments can be summarized asfollows :1.
Agreement errors can perfectly well be handled in avery general way.2.
High and low level synactic errors as well as lexical(semantic) errors can be satisfactorily dealt with but highlevel syntactic errors have to be anticipated, so that theirtreatment is not very general.
Consequently, totallydisordered sentences cannot be analysed (but shouldthey be?).3.
Ambiguously interacting errors present a seriousproblem.
Consider the following example.
(10) *Er schreibt dem Heft (He writes to thenotebook);The error could be analysed as a semantic error(schreiben requires a human dative object) or as a lowleVel syntactic error (schreiben requires the prepositionan).
Obviously, there is no means of deciding which errorthe student has committed if there is no contextualinformation, which is generally the case in a languageteaching environment.REFERENCESCOLMERAURER A. : Metamorphosis Grammar.
In :Natural Language Communication with Computers (L.Bolc ed.
), Lecture Notes in Computer Science 63,Springer Verlang, 1978.KAPLAN Ronald M. and BRESNAN Joan: LexicalFunctional Grammar: A Formal System for GrammaticalRepresentation.
Ch.4 in : The Mental Representation ofGrammatical Relations.
J.Bresnan, (ed.
), The MIT Press,Cambridge, Massachusetts, 1982.KARTUNEN Lauri : Features and values.
In : Proceedingsof the International Conference on ComputationalLinguistics 1984, Stanford, CA, pp.
28-33.MENZEL Wolfgang : Automated Reasoning about NaturalLanguage Correctness.
In : Proceedings of the secondConference of the european chapter of the ACL,,Kopenhangen, 1986.ProloglA : PROLOG II, Manuel de r6f6rence, Marseille.PULMAN S.G.  : Limited Domain System for LanguageTeaching.
In:  Proceedings of the InternationalConference on Computational Linguistics 1984, Stanford,CA.SCHWIND Camilla B. : A Formalism for the description ofQuestion Answering Systems.
In: Natural LanguageCommunication with Computers (L. Bolc ed.
), LectureNotes in Computer Science 63, Spdnger Verlang, 1978.SCHWIND Camilla B. : Overview of an intelligentlanguage tutoring system.
- Colloque Internationald'intelligence artificlelle de Marseille, CIIAM, Marseille,1986, ed.
Hermes, Paris.SCHUSTER Ethel: The role of native grammars incorrecting errors in second language learning.
In :Computational Intelligence, Vol.2, No.
2, 1986.WEISCHEDEL R.M.
and SONDHEIMER N.K.
: Meta-rulesas a Basis for Processing Ill-formed Input.
AmericanJournal of Computational Linguiistics.
Vol.
9, No.
3-4,1983.WEISCHEDEL R.M., VOGE W.M.
and JAMES M. : AnArtificial Intelligence Approach to Language Teaching.Artificial Intelligence 10, 1978.~13
