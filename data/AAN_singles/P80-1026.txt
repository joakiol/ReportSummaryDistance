Flexible ParsingPhil Hayes and George MouradianComputer Science Department, Carnegie-Mellon UniversityPittsburgh.
P A 15213, USAAbstract 'When people use natural language in natural settings, they oftenuse it ungrammatically, rnisSing out or repeating words,breaking-oil and restarting, speaking in Iragments, etc.. Theirhuman listeners are usually able to cope with these deviations withlittle difficulty.
If a computer system wislles tc accept naturallanguage input from its users on a routine basis, it must display asimilar indifference.
In this paper, we outline a set of parsingflexibiiilies that :',uch a system should provide.
We go, on todescribe FlexP.
a bottom-up pattern-matching parser that we havedesigned and implemented to provide these flexibilities forrestricted natural lanai.age input to a limited-domain computersystem.1.
The Importance of Flexible ParsingWhen people use natural language in natural conversation, they oftendo not respect grammatical niceties.
Instead of speaking sequences ofgrammatically well-formed and complete sentences, people Often miss outor repeal words or phrases, break off what they are saying and rephraseor replace it, speak in fragmentS, or use otherwise incorrect grammar.The Iollowing example colwersation involves a number of thesegrammatical deviations:A: I wmlt.
,  can you send a memo a message to to SmithEl: Is Ihal John or John Smith or Jim SmithA: JimInstead of being unable or refusing to parse such ungrammaticality,human listeners are generally unperturbed by it.
Neither participant in theabove example, for instance, would have any di|ficulty in Iollowing theconversation.If computers are ever to converse naturally with humans, they must beal)l~, to l)nr.~t~ th~4ir inl)Id :.is ilexii~iy and rni)Izslly ;m htlnmns do.
Whileconsiderable advances have been made in recent years in applied naturallanguage processing, few el the systems thai have bean constructed havepaKI 5uificien, uttenlion In Iho kinrIs el devialio=l that will inevitably occur=u~ their ulq)ul if (f)ey are tlsed In ,'~ natural environment.
In many cases, ifthe user's tat)tit (ions sol COlllefnl to tile sysh.~m's grammar, an in(iicationof incomprnllermanl) followed by a rerluest to rephrase may be Ihe best he(:a=~ P~xt~?~(:l W(; ht~.liP.vt.
?
Ihat .~uch ,fllexibili!y i .
parsing severely limits Ihepracticality O| natLiral anguage contpuler hderl:~rces, an(| is a major roasellwhy nalar~d language tlaa yet to find wide acceptance in sucl~ ;tpplicationsas database retrieval Or interactive carom{rod langut,.ges.In this paper, we report on a flexible parser, called FlexP, suitable foruse with a restricted natural language interlace to a limited-domaincounputer system.
W~.
describe first the kinds of grammatical deviationswe are trying Io deal with, then the basic design decisions for FlexP withjuslificalion for them based on the kinds of problem to be solved, andfinally more details of our parsing system with worked examples of itsoperation.
These examples,and most of the others in tl~e paper, representnatural language input to an electronic mail system that we and others \[1 Iare constructing as part of our research on user interfaces.
This systememploys FlexP to purse ils input.2.
Types of Grammatical DeviationThere are a number of distinct types of grammatical deviation and not;ill lypt~; |r~ tl)tOll~l it1 ;Ill Iypes of COlnlnunicatJon siltiation.
In tllin so;cites.we first define the restricted type el communication situation that we willbe concerned will1, thai of a limile~-I-domain computer system and its usercommunicating via a keyboard and (hsplay screen.
We then present ataxonomy of grammatical deviations common in this context, and byimplication a set el parsing flexibilities needed to dealwith them.2.1.
Communicalio0t w i thaL imi ted-DomainSystemIn the remainder of this paper, we will focus out a restricted type ofcanto)unitarian situation, that between a limited-domain system and itsuser, and on the p:trsing flexibilities neede(f by suuh a system Le ColJe withthe user's inevitable grammatical deviations.
Examples of the type ofsystem we have in mind are data-b;~e retr0eval systems, electroa)ic mailsystems, medical diaunosis systems, or any systems operating in a domainso rE'stricted thai they can COmpkHely understand ;311y relevant input auser might provide, In short, exactly the kind O!
system that is normallyused for work in applied natural Imtguage processing.
There are severalpoints to be made.First.
although ,~uch systems can be expected to parse and understandanythi,lg relevant la their domain, their users cannot be expected toconfine tllemselves to relevant input.
As Bohrow el, al.
121 .ale.
usersoflcn explain Iltl~ir underlying motivations or olhorwzse jt=nlify theirl(~(Itli'.%l,'~ ill l(~llnB ~Itlih~ ilr(!l~v;ilil Ill lh(!'
(i()lnain ()fth(: ~yst~in.
\]'hit ro,~tlJ|is lhal slJch systems cannot expecl Io parse ;.dl llx~il inlnH .,:vun wdh lheuse of flexible parsirx.j lechniqq..Secondly.
a flexible parser is just purl of the conversational comporientof such ;,I system, ai'id cannot solve all parsi,g problems by itself, Forexample, il a parser can extract two coherent fragments train an otherwiseincomprellensible input, the decisions about what Ihe system shouldnext must be made by another component of the system.
A decision onwllether to jump to a conclusion about wllat the user intended, to presenthim with a set of alternative interpretations, or to profess total confusion,can only be made with information about the Itistory of the conversation,beliefs about the user's goals, and measures of plausibility for any givenaction by the user.
See \[7~ for more discusSion o| Ihis broader view ofgraceful interaction in man-machine communication.
Suffice it to say thatwe assume a flexible parser is iust one component of a larger system, andIhal any incomprehensions or ambiguities that it finds are passed on toanother component of the system with access to higtler-level information,putting it in a better Position to decide what to do next.Finally, we assume that, as usual for such systems, input is typed,rather than spoken as is normal in human conversations.
This simplifieslow.level processing tremendously because key-strokes unlike speechwave-farms are unambiguous.
On the other hand, problems likemisSpelling arise, and a flexible parser cannot assume thut segmentationinto words by spaces :Slid carriage returns will always be corr~:t.However, such input is stilt one side of a conversation, rather than apolished text in the manner of most written material.
As such, it is likely tocontain many of the same type of errors normally found in spokenconversations.2.2.
MisspellingMisspelling is perhaps the most common form of grammatical deviationin written language.
Accordingly.
it is the form of ungrammaticality thathas been dealt wdh the most by language processing systems.
PARRYJ t I J. I.II'E\[1 Jl~ I. ;taxi tlumernus olher systems have tried te correct misspelli.p0Jt from their users.llhis n(,:'?a,mch w;l~ Sll~ll~.i~tl by IIH~.
A. ll,ce OliVe uI SCI~IlliIic nl!s('lllc:h till(Jilt"97An ability to correct spelling implies the existence of a dictionary ofcorrectly spelled words An input word =tot fot.
ld m the dictionary isassumed to be misspell and is compared against each of the dictionarywords.
If a dichonary word comes close enough to the input wordaccording to some criteria of lexical matching, it is used in place of theinput word.Spelhng correction nloy be attempted in or out ol COntext.
For instance.there is only one regson~.lble correction for "relavegt" or Ior "seperate".l)td Ior all mlitlI like *'till" SOltle k.'~d at conlext is typlc;.dly ilecossory as m'TII see yet= tm April" or "he w;.tS shot will} ltle stolen till."
In ellect,c(}lltexl c;in Lx.. t !.lse(I to rc(ttlCO tile size Oi Ihe diClll)ltaly tO i}e searched forcorrect words.
)'his lJt}lh n}akl,=s Ihe seuich inure t:|ficlent al}d red}ices tilepossibilily el nlullll)le Ill.:ll(.
;hus OI Ihe input ;.tgalllSt life LliCtiOI}afy.
TheLIFEF1 {UI sysletn uses tile strong cun:;tralnIs typically l l rovlde~ by itsSCII};.n}IIC gl;nnlnal if} IhlS way to r(.
'~Iuc(3 tile range el possibilities Iorspelling correction.A particukvly troublesome kind of spelling error results in a valid worddifferent from the one intended, as in "show me on of the messages".C|Parly.
~lich on error colt only t~e corre(;It~l Ihrotlgh cI)nlp;Irison against-'.
contextually determined vocabulary.2.3.
Novel WordsEven accomplished users Of a language will sometimes encounterwords they do not know.
Suci} situations are a test of their languagelearning skills.
If one (lidn'l know tile word "fawn".
one could nt leastdecide it was a cotour from "a fawn COlOUred sweater".
If one just knewIh~ wur(J il~ lulOf Ilia lu ~.t young (.IL~I.
one nllgh\[ CgllcJud(J thai II was L~ll~lgused to mean tile colour of a young deer.
in general, beyond makingdirect inferences t}bout the role ol unknown words from their immediatecontext, vocabulary learning c:~l require arbitrary amounts of real*worldknowledge and .derence.
and this is certainly beyond the capabilities Ofpresent day altificial intelligence techniques (though see Carbonell \[4} forwork in this direction).There is.
however, a very common special subclass of novel words thatis well within the capabilities of present day systems: unknown propernames.
Given an appropriate context, either sentential or discourse, it isrelatively straightforward to parse unknown words into tile names ofpeople, places, etc.
Thus in "send copies to Moledes.ki Chiselov" it isreasonable to conclude Iron} the local context that "Moledeski" is a firstname.
"Chiselov" =s a suman~e, and together they identily a person (theintended roe:pit'.hi of the copm~5).
Strnt~gles like this were used in thePOLITICS \[St. FRUMP 16J.
and PARRY 11 I I systems.Since novel words are by definition not in the known voc=bulary, howcan a parsing system distiogt,sh them from misspellings?
In most cases.the novel words will not be close enough lo known words to allowSUCCeSSful correction, aS in the above oxamole, bul this is not illways true;an unknown first name of "AI" COUld easily be corrected to "all".Conversely, it is not s~te to assume that unkl}own words ill contexts whichallow proper names are re;.
}lly proper names as in: "send copies to almanagers".
In this example.
"or" probably should be corrected to "all".In order to resolve such cas~.
it may be necessary to clleck ;}gainst a listof referents lor proper nameR, if this is known, or otherwis(~ to considersuch factors aR whelher tile inlli;ll letters of Iho words are capilalized.AS lar as we know.
no systems yet constr,ctc<t have int~jroted theirhandling of mi.~spclt wortl.q iln(t unknown, proper nanl~"s Io Ihe degreeoullined ;.Ifl?)v~.,.
However, It}t~ COOP 19l .~,y,,it{~ln allows sysllHllnlic accessIn a dat;.i llaSt.
?
(:Ulllailllll~j |)lOller ii;nnes wllhotll Ihe ni'~L~t Ii)l ilICitlSlOll ofIhe words ,1 Ihe system's i lnrsing vocabulary.2.4.
Erroneous segment ing  markersWntten text is segmented into words by spaces and new lines, and intohigher level units by commas, periods and olher punctuation marks.
Bothclasses, especially the second, may be omitted or inserted speciously.Spoken laf~gtJago s a so segmented, but by the Clt,te different markers ofstress, interaction and noise words and phrases: we will not cons=derthose further here.IncorreCt segmentation ;ll the lexical level results in two or more wordsbeing run togetl)er, as in "runtogether".
or a single word being split upinto two or more segments, ns in "tog ether" or (inconveniently) "to gether".
or combinations of these effects as in "runlo geth el".
In all cases, itseems natural to deal with such errors by extending the spellingcorrection mechanism to be able to recognize target words as initialse(jments of unknown words, and vice-versa.
AS far as we know.
nocurrent systems deal with incorrect segmentation into words.The other type of segmenting error, incorrect punctuation, has a muchbroader impact on parsing methodology.
Current parsers typ;catty workone sentence at a time.
and assume that each sentence is terminated byan explicit end of sentence marker.
A flexible parser must be able to dealwith Ihe potenliai absence of such a marker, and recognize the sentenceboundary regardless.
It sllould also be able to make use of suchpunctuation if il is used correctly, and to ignore it if it is used incorrectly.Instead of punCtuation, many interactive systems use carriage-return toil~'Jicale sentence termination.
Missing sentence terminators in this casecorrespond to two sentences on one line.
or to the typing of a sentencewithout the terminating return, while specious terminators correspond tOtyping a sentence on more than one line.2.5.
B tokon-Of landRestaHodUt fera l l casIn spoken language, it is very common to break off and restart all or partof an utterance:I want to - -  Could you lell me the name?Was tile man --er-- tile ofliciol here yesterday?Usually.
such restarts are sKjnall~l in some way.
by "urn" or "er".
or moreexplicitly by " lers  back tip" or some si , , Ior  phrase.In written language, such restarts do not normnlly occur because theyare erase(l by lhe writer bolore the reatler sees Ihenl.
interactiveCOmputer sysle--n~ typically prpvide facilitios for Iheir users tO delete thelast cllorocler, word.
or ctlrletlI hno as Ihotlgh ii had never been typed, forthe very purpose of allowing such restalts.
Given these signals, tl~elustarIs aru ~Jasy Io (letecl anti inlerpr(;I.
However.
sonle|inlL'bs tIS(~rs I:lll tomake use ol Ihese s=gnals.
Sometimes.
for instance, i~lptlt not containinga carriage-return can be spread over several lines by intermixing of inputand output.
A flexible parser should be able to make sense out.
of"obvious" restarts that are not signalled, as in:delete the show me aU the messages from Smith2.6.
Fragmentary  and Otherwise  E l l ipt ica l  InputNaturally occurmg language often involves utterances that are notcomplete sentences.
Often the appropriateness of such fragmentaryutterances depends oil conversational or physical context as in:A: Do you mean Jim Smith or Fred Smith?B: JimA: Send a message to SmithB: OKA: with copies to JonesA flexible parser must be able to parse such fragments given theappropriate context.There is a question here of what such fragments should be parsed into.Parsing systems which have dealt with the problem have typicallyassumed tl it such inputs are ellipses of complete sentences, and thattheir parsing involves finding that complete sentence, and pursing it.
Thusthe sentence corresponding to "J im" in the example above would be "Imoon Jim".
Essenhally this view has been taken by the LIFER \[81 andGUS \[2l systems.
An alternative view =s that such fragments are notellipses of more complete sentences, but are themselves complete98utterances given tile context in which they occur, and sholdd be parsc<l assuch.
We have taken this view in our approach to flexihto parsing, as wewill explain more fully below.
Carbonoll (personal communication)suggests a third view appropriale for some fragments: that of an extendedcase frame, hi tile second examt.lle above, for instance.
A's 'with copiesfo Jones" forms a natural pint ul the c=ts~.'
Irame est~.lblish~t fly "Self(| amessage to .~;mith" Yet :molh~.,r approach to Ir~lgmnnt l)ar:;iflq is taken inthe PLANES system ~ 12\[ which always parses in terms el major fragmentsrather than Complete utterances.
This technique relies on there I~ingonly one way to combine Ihe fragments thus obtained, whicll may he areasonable aSs|lnlptJon tar ill;.iny limited clara;rot systenls.Ellipses call ulna occur without regard Io context.
A type Ihalinleract=ve .
';yshtms are paHK:uhtrly likely 1o I:.lce is cryl)licness in which;irhcles :tnd fdh(~r nOll-e~.~.%enlJ;iJ words are entitled ;is ill ":;how nleSS;.IgOSalter June 17" inste.
;p.I ol the m?lre complete ".,;how me all mesnacles dat(.~lafter June 17" Again, tiler(: is a question of whether to consider Ihecryptic tnl)LII cunlpluh~, which would me~fn inodJlying file system'surzmmmr, or whether to consider il ellil}tical, and cnmplele it by usingIlexlble techniques te parse if against the comply.re versioll as it exisls inIhe standard gr;Inlnlar.Other cam;non forms of ellipses are associated with conjunction as in:John got up and \[John\] brushed his teeth.Mary saw Bill and BIll {sawl Mary.Fred recognized \[Ihe buildingl and \[Fred\[ walked towards the building.Since conjunctions can support such a wide range of ellipsis, it isgenerally impractical to recognize such utterances by appropriategrammar exlensions.
Efforts to deal with conhlnctJon have Ihereforedepended on general mecllanisms which supplement the basic parsingstrategy, as in fhe LUNAR system \[fSl, or wilich modify the grammartemporarily, as ill the work el Kwasny and Sondheimer I IOI.
We have notattempted 1o deal wilh tills type of ellipsis in our parsing system, and willnot discuss further the type at flexibility it requires.2.7.
In ie r jec tedPhrases ,  Omission,  and Subst i tu t ionSometimes people inlorject noise or other qualifying phrases into whatis otherwise a normal grmnmatical flow as in:I want the message dated I think June 17Such interjections can be inserted at ahnost any point in an utterance, andso must be dealt with as they arise by flexible techniques.It is retahvely straightforward for a system of limited comprehension toscreen out and igfloro standard noise phrases such as "1 think" or "as laras I can tell".
More troublesome are interjections that cannel berecogni,~ed by the system, as might for instance be the case inDisplay \[ju.
'~I to relre:;h my memory I the message dated June 17.I want to see tile message {as I forgot what it saidJ dated June 17.where the unrecognized intefiections are bracketed.
A flexible parsershould be able to ignore such interjections.
There is always tile chancethat the unrecognizc~t part was an important part of what tile user wasIryillg In say, bl.fl clearly, the problems that arise from tills c;.tnllot behandlml by a parser.Omissions of words (or phrases) from the input are closely related tocryptic input aS discussed above, and one way of dealing with crypticIflpLll in to treat il as a set of omi.~,~ions.
However, Jn Cryptic input onlyiness~.
*fdi~d ifdormaliOll is missed oul.
while it is cooceivable thai one couldalso onlit essential ifllormation as ill:Display Ihe men,age June t 7Herr~ it is unclear whether tile Si)e\[lker illeans a ines.,Ja(le dated ell ,hlne t for b*:lore Juno 17 or ;liter June 17 (we assume that the system addfessc~tCalf di.~;t)lay lhilt~ts illlfn(.~lJately, or i1ol at all).
If aft onlission can b~i1;llrowl~(I (l()Wll ill IhJs w;ly, tile I);fr.
?,l?r nllnldd he.
?
;it)k. TM tO gE,itf'!r;llP :ill tilealfern~diven l iar c?lnh~xtual resohllinfl nf the ambiHllily or for the basis of a(lllesti(lll Io tile us?.~r).
If tile omis.
'~inn can be narrowed down to one;llh.~rn;llive fhell tile illl)tlt was flleloly CI yl)tic.Besides omitting words and phrases, people sometimes substituteincorrect or unintended ones.
Often such substitutions are spelling errorsand should be caught by Ihe spelling correction mechanism, butsometinles they are inadvertent substitutions or uses of equivalentvocabulary not known tO the system.
This type of substitution is just likean omission except that there is an unrecognized word or phrase in theplace where tile omitted input should have been.
For instance, in "themessage over June 17", "over" takes the place of "dated" or "sent after"or whatever elst: is appropriate at that point.
If the substifution is ofvocabulary which is appropriate but unknown to the syslem, parsing o|substihlted words can provide tl~e basis of vocabulary extension.2.8.
Agreement FailureIt is not uncommon for people to fail to make the appropriate agreementbetween the various parts of a noun or verb phrase as in :I wants to send a messages to Jim Smith.\]'he appropriate action is to ignore the lack of agreement, and Weischedeland Black \[13J describe a melhod for relaxing the predicates in an ATNwhich typically check for soch agreements.
However, it is generally notpossible to conclude locally which value of the marker (number or person)for whicll the clash occurs is actually intended.
We considered examplesin which the disagreement involves more than inflections (as in "ti lemessage over Jr,he 17") in the section on substitutions.2.9.
Id iomsIdioms are phrases whose interpretation is not what would be obtainedby parsing and interpreting them constructively in the normal way, Theymay also not adllere to the standard syntactic rules.
Idioms must thus beparsed as a whole in a pattern matching kind of mode.
Parsers basedpurely oil patlern matching, like thai el PARRY I I t J, titus are able to parseidioms naturally, while others must eifher add a preprocessing phrase ofpattern matchimj as in tile LUNAR system \[15~.
or mix specific patterns inwill1 more general rules, as in Ihe work of Kwnsny and Sondheimer \[10\].Semantic grammars \[3, 81 provide a relatively natural way of mixingidiomatic and more general patterns.2.10.
User Suppl ied ChangesIn normal hunlall conversalif}fl, once SOme;Ihing is said, it is suid andc;.tllnOt be ch,lnul.~t, excl;pt indirectly by more words wlfich refer Uack totile original ones.
In inleractively typf.~l lie)at, there is alwayS thepossit)ilily thai a user nlay notice ;.in error he has made ;.ind go back an(Icorrecl it hmf.~(:ll, wilhoul wading for the :wstem to ptlrslle =Is own,possibly slow and inef\[e(:tive, motile(Is el correction.
Wilh appropriateediting lacilities, Ihe user may do this wilhoul erasing inlervening words,alld, if |he system is processing his input oil  a word by word basis, may3.
An Approach to Flexible ParsingMost current parsing systems are unable to code with most of the kindsof grammatical deviation outlined above.
This is because typical parsingsystems attempt to apply their grammar to Illeir input in a rigid way, andsince deviant input, by defimtion, does not conform to the grammar, theyare unable to produce any kind of parse for it at all.
Attempts to parsemore flexibly have typically involved parsing strategies to be used after atog-down parse using an ATN It4J or similar tran~lion net has failed.Such efforts include the ellipsis and garapllrase mechanisms of LIFER \[81,tile predicate relaxation techniques of Weischedel and Black \[13J, andseveral of the devices for extending ATN's proposed by Kwasny andSondheimer \[ 101.thus alter a word that the system has already processed.
A flexible parsermust be able to take advantage of such user provided corrections tounknown words, and to prefer them over its own corrections.
It must alsobe DreDared to change its parse if the user changes a valid word toanother different but equally valid word.99We have constructed a parser, FlexP.
which can apply its grammar tOits input flexibly, and thus deal wdh the grammatical deviations discussedin the previotls sechon We shotdd empllas~;~e, however, that FlexP isdesigned to be used in thu lltturluce to a restncted-domain system AGsuch.
it is intended to work Irom a domuilt-sDecific semantic grammar.rather titan one st.tuble Ior broader classes of input.
FlexP thus does notembody a solutloll for Ilexible parsing of natural language in general.
Indescribing FlexP.
we will note those of its techoiques that seem unlikely toscale up to use with more complex grammars with wider coverage.We have adopted in FlexP an approach to flexible parsing based not onATN's.
but closer to the pattern-matching purser OI tile PARRY system\[11J.
possibly tim most robust parser yet constructed.
Our approacl~ isbased on several design decisions:?
bottom up rather than top-down por~ing: This aids io the?
Parsing el fragmentary utterances, un(I in the r~rx l l .
l i?
, l  nfinterjechonR alld restarts.?
pattern matching: 1 Ilis is essential Inr idioms, and also aidsin tile ilelection n!
omissions and sobsMutions innon-i(limontic phrases.?
parse suspension and conl i , luo i ion:  Thu ;tt)ilily toF.uspelld it I);Irse and letter re.~Lin|e il.
'; I)rocnRsilU,| i~ illtllortantfor intorlections, restarts, and non-explicit erntinolions.In the remain(ler of this section we examine and juslify these designdecisions in more detail.3.1.
Bottom-Up ParsingOur choice of a bottom-up strategy is based o ,  our need to rocu~jnizeisolated sentence Iragments.
If an utterance which would normally beconsidered only a fragment of a complete sentence is to be recognizedtop-down, there are lwo approaches to take.
First.
the grammar can bealtered so that Ihe fragment is recognized as a complete ulteraoce in itsown right.
This is undesirable bee;ruse it can cause enormous exp;msionof the grmnmar, and because it becomes difficult to decide whether sfragmeot appears in i so la l i~ or as port OIa larger utterance, especiully ifthe possibility of missing end of sentence markers also exists.
The secondoption is for the purser to infer from the convers;ttidnal context whatgrammatical sub-category (or sequence of sub-cate(jories) the fragmentmight fit Dnto.
and thee to do a top-down parse tram that sub-category.This essentially is tile tzlctic used in the GUS \[21 and LIFER lot systems.This strutegy =s clearly better than the first one.
but has two Problems; firstof predicting all no.ss~ble sub-categories which might come next.
andsecondly, of inefficiency if a large number are predicted.
Kwosr.y andSondheimer I10\] use :.
combination of the two strategies by temporarilymodifying an ATN grammar to accept fragment categories as completeulterances at the braes they are contextually predicted.Pattern-uP Doming avoids the problem of predicting whatsub-categories may occur.
If a fragment filling a given sub-category doesoccur, it is ~3rsed as such whatever the context.
However.
if n given inputcan be p.'~rsed as more thon one sub-category, the bottom-up approachwould llave to produce them all.
even if only one would be predictedtop-down.
In a syslem of limited comprehension, fragmentary recognitionis sometunes necessary because not all of an input con be recognized,rather tilan because el intentional ellipsis.
Here.
it is probably in)possibleto make pte(tictloos altCI bottom-up pursing is tile ()lily toothed that is likelyto work.
As described below, boltom-up stnltegms, coupled withsuspended purses, are also helphrl in recognizing mteqections andrestarts.3.2.
Pat ternM~tch ingWe have chosen to use a granlnlar of linear I);lltorns rntller thao aITuiiSlllOn network boc;.ttl..;e palterll-nl{llChlllg ineshus well wllll I)olJoln.uppurSlllg, bec;.itise it f;.1ciIitutes reco~l|lllOiI (11 UIIuI;uIcuS wilh nllli.%sioIl.~;|llt| SUbStitutiOnS.
;|ll(i \[~3cause it is I~eces.~.ury ;.lllyw;ly l~Jr tile lecogndionoi i(tidm;itiC phrases.TIIu (.
}r31lllil;.t; oJ the parser is ;.= SOt of rewrde or I)roduCtlOIt rlllt~$ whosetell h;.u)(I :role is ;.t til)(.l\[il II;.l|tL=fn Of COil:;llttlHIttS (ll;XlL;;.ll ()1 hl(Ih(}l k:vel) ;tltllwllose right hand side derides a result constWJi}ot.
Elenleots el thepattern may be labelled opholsal or allow for repeated matches, We makethe assumption, certainly true Ior the grammar we are presently workingwith.
that the grammar will be semantic rather than synt{tctic, with patternscorresponding tO idiemntic phrases or to object and event descriph~,lsmeonulgful it) some hmitod domain, rather than to general syntacticstructures.Linear patterns fit well with bottom-up parsing because they can Deindexed by any of their components, and because, once indexed, it isstraiglltforward to confirm wl)ether a pattern matches input alreadyprocessed in a way consistent with the way II~e pattern was indexed.Patterns help with rite detection of omissions and substitutions becausein either case the relevant pattern can still be indexed by the remainingelements that appear correctly in the input, and thus the pattern as awhole can be recognized even if some of its elements are missing orincorrect.
In the case of substitutions, such o technique cnn actually helplocus the st~011ing correction, proper name reco(jnition, or vocabularylearning techniques, whichever is appropriate, by tsolahng the substitutedinput and the pattern constituent which it should have matched.
In effect.this allows the normally bottom-up parsing strategy to go top-down toresolve such substitutions.In normal left to right processing, it is not necessary to activate all thepatterns io(lexed by every new word as it is COnSidered.
If a new word isaccounted lot by a pattern that has already been partKflly matclled byprevious input, it is likely that no other patterns need to be indexed andmulched Io~" thai input, ll)ts heuristic Plows FlexP's pursing algorithm tolimit the number of patterns it toes to ntatch.
We should emphasize.however, that it is a I'.ettr|stic.
and while it has caused us no trouble withthe limited*domino grammar we have been using, it is unclear how well itwould transfer to a more complex grmnmar.
FlexP's algorithm does.however, carry along ntultii)le partial par.."~es in other alliblguOUS cases.removing tile need for any backtracking.3.;3.
Parse Suspension and Cont inuat ionFlexP employs the technique of suspending a Parse with the possibilityel later cominualion to help with the recognition of inlerlecliofls, restartS.and implK, il termlnatio,s.
Tile I}arsmg algurittun works tell to right in at}re:tdlh-lir.qt retainer.
It ntainlui=is a set of p;Irtiu!
parses, each el which~tccotlnts for Ihe input ulre~lty proces.=~..(t but riot yet accot.
l lod lot by .
'1COmpleted pari.;e.
The purser attempts to incorporate o~tch new input intoeach of Ihu P;trtial p~.~rsOs.
I{ Ihis is successful, the t)artiul parses areexleni led al~l lil:ly irlcreos~ or decrease ill ittinlber.
If no partial purse canbe extendo~t, the entire set is ~.lVed as a SUspended parse,There are several possible explanations for input mismatch.
Le.
thefailure o!
tile nex!
input tO extend a parse.?
The input could be an implicit terminal=on, i.e.
the start of anew top-level utterance, and the previous utterance should beassumed complete.?
t he: Inp?ll ?util~.i b~J a reslart, m whlcll case li.e active Parseshould be abandoned and a new parse starte(I Item that point.?
The input could be the start of an interjection, io which caselhe actwe parse should be temporarily suspended, and a newmtrse started for the intorlection.It is not possible, in general, tO dL~tmguish between these cases at thetime tim mismatch occurs.
II the active parse is not at a possibletermination Point.
then input mismatch cannot indicate implicit100termioation, but may indicate either restart or interjection.
It is necessaryto suspend the active parse and wuit to see if it is continued at the nextinput mismotclt.
On the other hand.
if the active parse is at a possibletermination point, input mismutch does not rule out interjection or evenrestart.
In this situation, our algorithm tentatively ussumes that there hasbeen an implicit termination, but suspends the active parse anyway forsubsequent potential continuation.Note also that tl~e possibility el implicit termination provides justificationfor the strategy of interpreting each input immediately it is received.
If theinput signals an implicit termination, then the user =nay well expect thesystem to respond immediately to the input thus terminated.4.
Detai ls of FlexPThis section describes how FlexP achieves the Sex=bit=ties discussedearlier, The implementation described is being used as the parser for anintelli(jent interface Io ;i multi-mediu message system \[ 1 \], The intelligencein this interface is cnncentrated in u tl.ser A(lent whictl =ned=sites betweenthe user and the underlying tool System.
The Agent ensures that theinteraction goes smootlfly by, amoog other things, checking Ihat tile userspecifies the operations he wants performed and their parameterscorrectly and uuumbiguously, conducting a dialogue wilh the user ifprohlems arise.
Th(: role el FlexP" us tile Agent's parser is to transform theuser's input into the internal ropresenlutions employed by tile Agent.Us.idly this inl)ut is a re(Itlest for aclio, hy the to(ll or a description ofobiects known to the tool.
Our exzmq=les are drawn from that context.4.1.
P ro l imi .a ryExampleSuppose tile user typesdisplay new messagesInterpretation begins as soon as any input is available, The first word isused us an index into the store of rewrite rides.
Each rule gives a patternand u structure to be pr=xlu(:od when lira pattern is matcherf.
Thecomponents el the structure ure built from the structures or words whichmatch the elements of the pattern.
The word "display" indexes the rule:(pat.=.or.
: ( I ) i sp lay  Message Descript.
i.on)resu l t , :  J SL rucLure iype:  OperaL ionReques ILOperaLion:  D isp layMessage: (F i t  l e t  Messagel)escr ' ipL ion) \ ]Using this rule Ihe parser constructs the partial parse tree(D isp lay  MessageOescr ip t  io .
)IId isp layWe call the partially-instantiated pattern which labels the zipper node ahWJothesis.
It represents a possible interpretation lot a segment of input.The next word "new" does not directly match the hypothesis, but since"new" is a MsgAdj (an adjective which can modify a description of amessage), il indexes the rule:(paLLm'n: (?
l \ ]et  *MsgAdj Msgllead *MsgCase)resu lL :  J St.ruc L .
ro  I yl)e: MessageDescripL ionCnllq)O,e, LS : .
.
.
.
.
.
.
.
.
.
.
.
\] )Here.
"?"
means optional, and ..... means repeatable.
For the sake Ofclarity, we have omitted other prefixes which distinguish between terminaland non-terminul pattern elements.
Tile result of this rule fits the currenthypothesis, so extends the purse as follows:(t) i s l i Iny  Messagel\]escr ip L ion)I II IJ (?DeL *MsgAdj Msgllead ?MsgCase)I 1i Ii t=splay new1 he hypolhesis is not yol hdly conlirm(.,d evq.,n Ihuugh all tht; elements oreI t |arched.
It.~ !
;l~(:i)ll?l t~lt~ltll~lll n=all.~he.
"~ ;tlnlthq~r h~w~r I,~vt~l hypothesiswhich is ooly iucompletoly matclled.
Thi.s lower putluH= I)ut:ulnus Limeclirr(,rlt hw~=lHIt!
:;t:; b~c;.lus~; il pledicts whal should COllie iit.~x\[ ill the illputstream.The third input m;.dcho.,; Ihe C;.It(~tlory M:;gl-lead (head noun el amet.sage (lest:Silltion) and so lits tile current hypothesis, This match lillsthe lust non-oplional slot in Ihut pattern.
By doing so it makes tile currenthypothesis and its parent pattern potemia/ly complete.
When the parserfinds a potentially complete phrase whose result is of interest to the Agent(and the parent phrase in this example is in that category), the result isconstructed and sent.
However.
since the p;irs~,r has not seen alomlination signal, this purse is kepl u(.,hvu.
Ihu iiq)ut 5,;us su lur may beonly a prefix Ior some longer utterance such as "display new messagesabout ADA".
In this case "ubout ADA'" would be recognized as a matchfor MsgCase (a prepositional phrase that can be part of a messagedescription), the purse would be extended, and a revision of the previousslructul'e sent to the Agent.4.2.
Unrecognized WordsWhen an input word cannot be found in the dictionary, spellingcorrection is attempted in a background process which runs at lowerpriority than the parser, 1"he input word and a list at possibilities derivedfront the current hypothesis are passed as arguments.
For example:display the new messaegsproduces lhe partial parse(D isp lay  MessageOescrip =.ton)I II II ( ?Pet "MsgAdj Msgtlead ?MsgC use )I I II t Id isp lay  Lhe newThe lower pattern is the current hypothesis and has two elements eligibleto match the next input.
Another Ms(JAdi could be matched.
A matcll forMsgHeud would also lit.
Both elements have associated lists of keywordsknown to occur in phrases wl~ich match them.
The one for MsgHeadinclu(les tl~e word "nt~.~os,ages ''.
and the spelling correcter passes thisback to the purser as the most likely interpretation.In some cases the spelling correcter produces several likelyalternatives.
The parser handles such alnhiguous words using the samemecllanisms which ucconlmotlate phrases with ambiguous interpretations\]'hut is.
ulternative interpretations are curried altJng until Ihere is enoughinput to discriminate those which are pla.sible from those which are not.| lie d~.,tails ira: given in the n~:xt section.The user inuy also corrl:ct Ihe input taxi himself, These changes arehundle~l in ilnlch the S;llno way as those proposed by Ihe spellillgcorrecter.
Of course, thes~ u'.~.r-suppliot ch;ingos ure given priority, andIlilrs=..'s built u~.allg Ihe formal ver'.
;iun musI lxJ mlv.lili.~l or discarded.Spellimj correction is run as a separate, lower priority process becauseit reusonublo parse may be produced even without a proper interpretationfor the unknown word.
Since spelling correction can involve rathertime-consuming searches, this work is best done when the parser has.nobetter alternatives to explore.4.3.
Ambiguous InputIn the first example there was only one I~ypothesis about the structureOf the input.
More generally, there may be several hypotheses whichI)rovide competing interprelutions uboul what has already been seen andwhal will appear =text.
Until these p~lrtial parses are Iound to beinconsistent with the actual input, they are carried along as part of the~zctive purse.
Therefore the active parse is a set at partial purse trees each101efficiency required for real-time response, but could conceivably fail tofind appropriate parses.
We have not encountered such circumstanceswilh tile s=nall domain-specitic semantic grammar we have been using.4.4.
Flexible Matchingrl+e oaly Ilexibiltty described so lar *s that allowed by the optionalelements el patterns, II om~ssions can be anttcipLIte(I, allowances trlay bebuilt Ilil(= the grammar.
In Ihi$ sechon we show how other OlnissiOI1S mayh~ lUllittl(;~t ;tnlt Olhee Ilexitiililles achit=ved by ~j|low,ncj ;t(J('liliontil freHtlomin the wtw an item is allowed tO matcI1 a pattern.
Ihere are two ways inwith a top-level Ilypothesis about the overall structure at the input so faranti a curr~nt hyl)othesis concerning the next input.
The actualmlplementation allows sharln(j of COnln)OII structure a lnOl lg  competinghypotheses and so =S more ollic=ent han this descnption suggests.The inputwere there any messages on .......could be completed by giving a date ("+..on Tuesday") or a topic ("..+onADA").
Consequently, the sub-phrase "any messages on" results in twopartial parses:( ?De L "MsgAdj Msgllead ?MsgCase )I I \]I I Iany messages (On DaLe)IIona.d(?De(.
"NsgAd.j Hs,jllead *NsgCase)I I II I Ia.y messages (O.
TOpiC)IIonII 1110 next inptll were "Tttesday" it wold(| be consislenl will1 Ihe tirst parse,I)lll nnf the necond.
Shice one ol the \[tJlOrn;itlVeS (|DOS ~lccount tar thelilt)el.
Ihoso thai do IIOi may I)~J (tisc;tr(Ic'(I.
On IhP.
oilier liimd, it :Ill tilei):.lrti~.lt |):.|ISI!
',.~ tilll tO Ilt;.lt(:h lilt.
= in|lilt.
Oll'~t.~l ;tctiol~ iS t;,tkoll.
We consi(tor511Ch L~IIU;Iil(+IIS ill the S(.~llOl) UII suspol+th.~,l fx lrses.AS ~ tjeltur\[tl str:.ltegy, we carry seVel :.11 linssitile inlerl)retallOltS only askintj ;I.~ thert!
is 11o clear lit;st ;.lllernalive.
II1 l):.lrlictllar '~o fh~xible parsing|t*.,chniqueS are us~t to suttl)ort parses Ior which th,.=re are pl-'tuszblo;alternatives tmt|or normal imrsing.
This heuristic helps achieve 11)0wlllch the malching crilerla may be relaxed, namely?
relax consistency constraints, e.g.
number agreement?
allow out Of order matchesConsff;lency constraints are predicates which are attached to rules.They assert relationships which must hold among the items which till thepattern Fhese constraints allow contexl-sensilive constructions in thegramnmr.
Such predicates are commonly used for simdar purposes byATN parsers 1!41 and the flexibility achieved by relaxmg these constraintshas been explored belore 113J.
The tochmque fits smoothly into FlexP buthas no1 ;icttJally been needed or used in our current application.On tDe other hand.
nut of order matching is essential for the 13arser'saPliroach Io errors Of OlniSSlOn.
transposition, anti substitution.
Evenwilel~ strictly Iltl(.=liir~l~(J. several eielnents el ~ t);JllC'rll may tie elk llbie tomatch lhe next input item.
For example.
=n the pattern for aMessageOescription(?DeL "MsoAd j Msgllead "MsgCase)each at the lirst thre~, etemetlts is indi;dly eligible but the lasl is not.
On theotilt.~r h;ind+ uncu Msullead it;is I~.
'cn mLttclie(I Dilly tile last elenlelll iSeligible trader tile strict interpretation ot the pattern.Consider the inputdlSpl~ty new ;|i~1.11 A\[')ATile I.~;t Iwo words p;.~rse normally to produce(D isp lay  MessageDescr ipt .
i on)I II II ( ?Pet "NsgAdj NsgHead "MsgCase )I II Id isp lay  newThe next word (foes not fit that hypothesis.
The two eligible elementspredict either another message adjective or a MsgHead.
The word"about" does not match edher ot these, nor can the parser construct anypath to them using intermediate hypotheses.
Since there are no otherpartial parses available to account for this input, and since normalmatching tails, flexible matching is tried.First.
previously skioPed elements are compared to the input.
In thisexample, the element ?Pet is considered but does not match.
Next,elements to the right of the eligible elements are considered.
ThusMsgCase is considered even though the non-optional element MsgHeadhas not been matched.
This succeeds and allows the partial parse to beextended to(Display MessageDescript~on)I II II (?gel ?Msg^dj Msgtlead "MsgCase)I I II J (AbouL Lop ic )I I Id isp lay  new aboutwhich correctly predicts the final input item.Unreeocjnizable substitutions are also handled by this mechanism.
Inthe pll ra.sedisplay the new stuff aboul ADAthe word "stuff" iS not found in the dictionary so spelling correction istned but does not produce any plausible alternatives.
While spellingcorrection =s underway, the remaining spurs can be parsed by siml~yomlthng "stuff" and using the flexible matching proce<hJre.Tr;.lnspo31llOlIS :.ire handlEKI Ihrough one applic-'~llofl el Ilexible matching ifIho elemenl of the IransposL'<l pair is option~d, two applic;.tlions if not.4.5+ Suspe-dodParsesh'lteri~.~:;tions are inore colnll~on in spoken than in wl ;ell language butdo at:cur if= lyp(~t input sglnOltlnes.
To deal wdh such ,1put, out designallows lot blocked patios tO be suspended rtllher than merely discarded.Users.
especially novices.
=nay embellish their inpul will1 words andphrases that do r',~t provide essential information and cannot bespecifically anl,clpalet+ Consider t.vo examines:display please massages dated June 17disl~ay Ior me messages dated June 17In the first case.
the ml~.rjected word "please" could be recognized as ar:.mnmon noise phrase wI.ch means nothing to the Agent except possiblyto suggust that the user is a nowce.
The second example is more difficult.Both words of the interjected phrase can appear in a num0er of legitimateand me~lnu'lghJI constru+;h(.a.
'~: they cannot be ignored so easily.102For the latter example, parse suspension works us follows.
After thefirst word, the active parse contains a single partial parse:(D isp lay  HossageDesc r't pt.
ion)IId isp layThe next word does not fit this hypothesis, so it is suspended.
In its place,a new active parse is constructed.
It contains several partial parsesincluding(For Person) and (For Thne\[nLerva\ ] )I It Ifo r  ro tThe next word confirms the first of these, hut the fourth word"messages" does not.
When the Darser finds that it cannot extend theactive parse, it considers the suspended parse.
Since "messages" fits,the active and suspended parses are exchanged anti the remainder of theinput processed normally, so that the parser recognizes "displaymessages dated June 17" as if it had never contained "for me".5.
ConclusionWhen peDDle use language naturally, they make mistakes and employeconomies of expression that.
allen result in language which isungrammalical by strict standards.
In particular, such grammaticaldeviations will inp.vilabty occur in the inpul of a computer syslem whichallows its user Io elnploy nalural langua?.le.
Such a computer system must,Ihert~.ior?
:, I}o p,t~l);Lrt~H to I)arsH its input nexibly, if il is avoid Irt=slration forits user.ht this paper, we have attemple'(J Io outline the main kinds of flexibility anc'ttural I;.tnguage parsur intended for ~att=ral use sltouk| provide.
We alsodescribod a bottom-up pattern-matching parser, FloxP, which exhibitsthese Iloxibilities, and wllicl~ is suitable for restricted natural languageinput to a limited-domain system.References1.
Ball, J. E. and Hayes, P. J.
Representation of Task-IndependentKnowledge in a Gracefully Interacting User Interface.
Tecll.
Rept.,Carnegie-Mellon University Computer Science Department, 1980.2.
Bobrow, 0.
G., Kaglan, R. M., Kay.
M.. Norman 0.
A., Thompson, H.,and Wintxjrad, T. "GUS: a Frame-Driven Dialogue System."
ArtificialIntelligence 8 (1977), 155-173.3.
Burton.
R. R. Semantic Grammar: An Engineering Technique forConstructing Natural Language Understanding Systems.
BBN Report3453, Bolt, Beranek.
and Newman, Inc., December, 1976.4.
Carbonell, J. G. Towards a Self-Extending Parser.
Proc.
of 17thAnnual Meeting of the Assoc.
for Comput.
Ling., La Jolla, Ca.,August, 1979, pp.
3-7.5.
Carbonell, J. G. Subjective Understanding: Com~uter Models olBe/ielSystems.
Ph.D. Th.. Yale University, 1979.6.
DeJong, G. Skimming Storiesin Real-Time.
Ph.D.
Th., ComputerScience Dept., Yale University, 1979.7.
Hayes, P. J.. and Reddy, R. Graceful Interaction in Man-MachineCommunication.
ProD.
Sixth Int.
Jr. Conf.
on Artificial Intelligence.
Tokyo,1979, pp.
372-374.8.
Hendrix, G. G. Human Engineering for Applied Natural LanguageProcessing.
Pro(.
Fifth Int.
Jr. Conf.
on Artificial Intelligence, MIT, 1977,pp.
183-191. ,g. Kaplan, S. J.
Cool)nrative \[~espunses tram a Portable Naturall.lllU!l~!
;(: Data B~l:;~ QL,~tV Sy.~t(~m.
Ph.D. Th.. Dept.
of Computer andIntormalion Science, University of Pennsylv~ulia, Philadelphia.
1079.10.
Kwasny, S. C. and Sondheimer, N. K. Ungrammaticality andExtraoGrammaticality in Natural Language Understanding Systems.
Pro(.of 17Ul Annual Meeting of the Assoc.
for Comput.
Ling., La Jolla, Ca.,August.
1979, pp.
10-23.11.
Parkison.
R. C., Colby, K. M.. and Faught.
W. S.  "ConversationalLangua(.io Comprehension Using Inlegraled PzHtern-Matching andParsing."
..lttthci~d hlt~lliget~c~ .)
(1077).
I 11-134.1 2.
Waltz.
D. L. "An English Language Que.~lion Answering System fora Large Relational gala Base."
Comm.
ACM 2 1.7 (1978).
526-539.13.
Weischedel.
R. M. and Black.
J. Res~)onding to PolentiallyUnparseable Senlences.
Tecta.
Rept.
79/3.
Depl.
ol Computer andtniormalion Sciences, tJniversity ol Delaware, 1070.14.
Woods, W. A.
"Transition Network Grammars for Natural LanguageAnalysis."
Comm.
ACM 13, 10 (October 1970), 591-606.15.
Woods, W. A.. Kaglan, R. M., and Nash-Webber, B.
The Lunar,?~:ienc,~; t altLiH~,l~t '.
';y',~teln: Final Report.
Tech.
Rept.
2378, Bolt,Beranek, and Newman, Inc., 1972.103
