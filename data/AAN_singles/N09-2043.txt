Proceedings of NAACL HLT 2009: Short Papers, pages 169?172,Boulder, Colorado, June 2009. c?2009 Association for Computational LinguisticsA Local Tree Alignment-based Soft Pattern Matching Approach forInformation ExtractionSeokhwan Kim, Minwoo Jeong, and Gary Geunbae LeeDepartment of Computer Science and EngineeringPohang University of Science and TechnologySan 31, Hyoja-dong, Nam-gu, Pohang, 790-784, Korea{megaup, stardust, gblee}@postech.ac.krAbstractThis paper presents a new soft pattern match-ing method which aims to improve the recallwith minimized precision loss in informationextraction tasks.
Our approach is based on alocal tree alignment algorithm, and an effec-tive strategy for controlling flexibility of thepattern matching will be presented.
The ex-perimental results show that the method cansignificantly improve the information extrac-tion performance.1 IntroductionThe goal of information extraction (IE) is to ex-tract structured information from unstructured natu-ral language documents.
Pattern induction to gener-ate extraction patterns from a number of training in-stances is one of the most widely applied approachesfor IE.A number of pattern induction approaches haverecently been researched based on the dependencyanalysis (Yangarber, 2003) (Sudo et al, 2001)(Greenwood and Stevenson, 2006) (Sudo et al,2003).
The natural language texts in training in-stances are parsed by dependency analyzer and con-verted into dependency trees.
Each subtree of a de-pendency tree is considered as a candidate of ex-traction patterns.
An extraction pattern is gener-ated by selecting the subtree which indicates the de-pendency relationships of each labeled slot valuein the training instance and agrees on the selec-tion criteria defined by each pattern representationmodel.
A number of dependency tree-based pat-tern representation models have been proposed.
Thepredicate-argument (SVO) model allows subtreescontaining only a verb and its direct subject andobject as extraction pattern candidates (Yangarber,2003).
The chain model represents extraction pat-terns as a chain-shaped path from each target slotvalue to the root node of the dependency tree (Sudoet al, 2001).
A couple of chain model patterns shar-ing the same verb are linked to each other and con-struct a linked-chain model pattern (Greenwood andStevenson, 2006).
The subtree model considers allsubtrees as pattern candidates (Sudo et al, 2003).Regardless of the applied pattern representationmodel, the methods have concentrated on extractingonly exactly equivalent subtrees of test instances tothe extraction patterns, which we call hard patternmatching.
While the hard pattern matching policyis helpful to improve the precision of the extractedresults, it can cause the low recall problem.
In or-der to tackle this problem, a number of soft patternmatching approaches which aim to improve recallwith minimized precision loss have been applied tothe linear vector pattern models by introducing aprobabilistic model (Xiao et al, 2004) or a sequencealignment algorithm (Kim et al, 2008).In this paper, we propose an alternative softpattern matching method for IE based on a localtree alignment algorithm.
While other soft patternmatching approaches have been able to handle thematching among linear vector instances with fea-tures from tree structures only, our method aims todirectly solve the low recall problem of tree-to-treepattern matching by introducing the local tree align-ment algorithm which is widely used in bioinformat-ics to analyze RNA secondary structures.
Moreover,169(a) Example pattern(b) Dependency Tree of the example sentence(c) Local alignment-based tree pattern matchingFigure 1: An example of local alignment-based tree pat-tern matchingwe present an effective policy for controlling degreeof flexibility in the pattern matching by setting theoptimal threshold values for each extracted pattern.2 MethodsThe low recall problem of information extractionbased on hard pattern matching is caused by lackof flexibility in pattern matching.
For example, thetree pattern in Figure 1(a) cannot be matched withthe tree in Figure 1(b) by considering only exactlyequivalent subtrees, because the first tree has an ad-ditional root node ?said?
which is not in the secondone.
However, the matching between two trees canbe performed by omitting just a node as shown inFigure 1(c).In order to improve and control the degree of flex-ibility in tree pattern matching, we have adopted alocal tree alignment approach as the pattern match-ing method instead of hard pattern matching strat-egy.
The local tree alignment problem is to find themost similar subtree between two trees.We have adopted the Hochsmann algorithm(Hochsmann et al, 2003) which is a local tree align-ment algorithm used in bioinformatics to analyzeRNA secondary structures.
The goal of the Hochs-mann algorithm is to find the local closed forestalignment which maximizes the similarity score forordered trees.
The algorithm can be implementedby a dynamic programming approach which solves aproblem based on the previous results of its subprob-lems.
The main problem of Hochsmann algorithmis to compute the similarity score between two sub-forests according to the defined order from the sin-gle node level to the entire tree level.
The similarityscore is defined based on three tree edit operationswhich are insertion, deletion, and replacement (Tai,1979).
For each pair of subforests, the maximumsimilarity score among three edit operations is com-puted, and the kind and the position of performededit operations are recorded.The adaptation of Hochsmann algorithm to the IEproblem is performed by redefining the ?-function,the similarity score function between two nodes, asfollows:?
(v,w) =??????????
?1 if lnk(v)=lnk(w),and lbl(v)=lbl(w),?
(p(w), p(v)) if lbl(v)=<SLOT>,0 otherwise.where v and w are nodes to be compared, lnk(v) isthe link label of v, lbl(v) is the node label of v, andp(v) denotes a parent node of v. While general localtree alignment problems consider only node labelsto compute the node-level similarities, our methodconsiders not only node labels, but also link labels tothe head node, because the class of link to the headnode is important as the node label itself for depen-dency trees.
Moreover, the method should considerthe alignment of slot value nodes in the tree patternsfor adopting information extraction tasks.
If the pat-tern node v is a kind of slot value nodes, the similar-ity score between v and w is inherited from parentsof both nodes.After computing for all pairs of subforests, theoptimal alignment is obtained by trace-back basedon the recorded information of edit operation whichmaximizes the similarity score for each subforestpair.
On the optimal alignment, the target nodealigned to a slot value node on the pattern is regardedas an argument candidate of the extraction.
Each ex-170traction candidate has its confidence score which iscomputed from the alignment score, defined as:score(TPTN, TTGT) = S(TPTN, TTGT)|TPTN|where |T | denotes the total number of nodes in treeT and S(T1, T2) is the similarity score of both treescomputed by Hochsmann algorithm.Only the extraction candidates with alignmentscore larger than the given threshold value, ?, areaccepted and regarded as extraction results.
For thesimplest approach, the same threshold value, ?, canbe applied to all the patterns.
However, we assumedthat each pattern has its own optimal threshold valueas its own confidence score, which is different fromother patterns?
threshold values.
The optimal thresh-old value ?i and the confidence score confi for thepattern Pi are defined as:?i = argmax0.5<?
?1.0{evalfscore (Dtrain, Pi, ?
)}confi = max0.5<?
?1.0 {evalfscore (Dtrain, Pi, ?
)}where evalfscore(D,P, ?)
is the evaluation result inF-score of the extraction for the data set D using thepattern P with the threshold value ?.
For each pat-tern, the threshold value which maximizes the eval-uation result in F-score for the training data set andthe maximum evaluation result in F-score are as-signed as the optimal threshold value and the con-fidence score for the pattern respectively.3 ExperimentIn order to evaluate the effectiveness of our method,we performed an experiment for the scenario tem-plate extraction task on the management successiondomain in MUC-6.
The task aims to extract sce-nario template instances which consist of person-in,person-out, position, organization slot values fromnews articles about management succession events.We used a modified version of the MUC-6 corpusincluding 599 training documents and 100 test doc-uments described by Soderland (1999).
While thescenario templates on the original MUC-6 corpusare labeled on each document, this version has sce-nario templates for each sentence.All the sentences in both training and testdocuments were converted into dependency trees00.050.10.150.20.250.30.350.40.450.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0F-scoreProportion of Patterns UsedSOFT(SUBTREE)SOFT(LINKED)SOFT(CHAIN)HARD(LINKED)HARD(CHAIN)HARD(SUBTREE)SOFT/HARD(SVO)Figure 2: Comparison of soft pattern matching strategywith the hard pattern matchingby Berkeley Parser1 and LTH Constituent-to-Dependency Conversion Tool2.
From the depen-dency trees and scenario templates on the trainingdata, we constructed pattern candidate sets for fourtypes of pattern representation models which areSVO, chain, linked-chain, and subtree models.
Foreach pattern candidate, corresponding confidencescore and optimal threshold value were computed.The pattern candidates for each pattern represen-tation model were arranged in descending order ofconfidence score.
According to the arranged order,each pattern was matched with test documents andthe extracted results were accumulated.
Extractedtemplates for test documents are evaluated by com-paring with the answer templates on the test corpus.The curves in Figure 2 show the relative perfor-mance of the pattern matching strategies for eachpattern representation model.
The results suggestthat soft pattern matching strategy with optimalthreshold values requires less number of patternsfor the performance saturation than the hard pat-tern matching strategy for all pattern models exceptthe SVO model.
For the SVO model, the result ofsoft pattern matching strategy is equivalent to thatof hard pattern matching strategy.
It is because mostof patterns represented in SVO model are relativelyshorter than those represented in other models.In order to evaluate the flexibility controllingstrategy, we compared the result of optimally de-termined threshold values with the cases of using1http://nlp.cs.berkeley.edu/pages/Parsing.html2http://nlp.cs.lth.se/pennconverter/171?
SVO Chain Linked-Chain SubtreeP R F P R F P R F P R F0.7 32.1 18.0 23.1 27.6 55.0 36.8 26.8 57.0 36.4 26.6 58.0 36.50.8 32.1 18.0 23.1 43.8 35.0 38.8 43.4 36.0 39.3 44.7 34.0 38.60.9 32.1 18.0 23.1 45.2 33.0 38.1 43.8 35.0 38.9 45.2 33.0 38.21.0 (hard) 32.1 18.0 23.1 45.2 33.0 38.1 43.8 35.0 38.9 45.2 33.0 38.2optimal 32.1 18.0 23.1 36.0 49.0 41.5 40.7 48.0 44.0 43.0 46.0 44.4Table 1: Experimental Resultsvarious fixed threshold values.
Table 1 representsthe final results for all pattern representation mod-els and threshold values.
For the SVO model, allthe results are equivalent regardless of the thresh-old strategy because of extremely short length of thepatterns.
For the other pattern models, precisions areincreased and recalls are decreased by increasing thethreshold.
The maximum performances in F-scoreare achieved by our optimal threshold determiningstrategy for all pattern representation models.
Theexperimental results of our method show the betterrecall than the cases of hard pattern matching andcontrolled precision than the cases of extremely softpattern matching.4 ConclusionWe presented a local tree alignment based soft pat-tern matching approach for information extraction.The softness of the pattern matching method is con-trolled by the threshold value of the alignment score.The optimal threshold values are determined by self-evaluation on the training data.
Experimental resultsindicate that our soft pattern matching approach ishelpful to improve the pattern coverage and ourthreshold learning strategy is effective to reduce theprecision loss followed by the soft pattern matchingmethod.The goal of local tree alignment algorithm is tomeasure the structural similarity between two trees.It is similar to the kernel functions in the tree kernelmethod which is another widely applied approach tosolve the IE problems.
In the future, we plan to in-corporate our alignment-based soft pattern matchingmethod into the tree kernel method for IE.AcknowledgmentsThis work was supported by the Korea Science andEngineering Foundation(KOSEF) grant funded bythe Korea government(MEST) (No.
R01-2008-000-20651-0)ReferencesMark A. Greenwood and Mark Stevenson.
2006.
Im-proving semi-supervised acquisition of relation extrac-tion patterns.
In Proceedings of Workshop on Informa-tion Extraction Beyond The Document, pp.
29?35.Matthias Hochsmann, Thomas Toller, Robert Giegerich,and Stefan Kurtz.
2003.
Local similarity in rna sec-ondary structures.
In Proceedings of the IEEE Com-puter Society Bioinformatics Conference , pp.
159?68.Seokhwan Kim, Minwoo Jeong, and Gary GeunbaeLee.
2008.
An alignment-based pattern representa-tion model for information extraction.
In Proceedingsof the ACM SIGIR ?08, pp.
875?876.Stephen Soderland.
1999.
Learning information extrac-tion rules for semi-structured and free text.
MachineLearning, 34(1):233?272.Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman.2001.
Automatic pattern acquisition for japanese in-formation extraction.
In Proceedings of the first inter-national conference on Human language technologyresearch, pp.
1?7.Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman.2003.
An improved extraction pattern representationmodel for automatic ie pattern acquisition.
In Pro-ceedings of the ACL ?03, pp.
224?231.Kuo-Chung Tai.
1979.
The tree-to-tree correction prob-lem.
Journal of the ACM (JACM), 26(3):422?433.Jing Xiao, Tat-Seng Chua, and Hang Cui.
2004.
Cas-cading use of soft and hard matching pattern rulesfor weakly supervised information extraction.
In Pro-ceedings of COLING ?04, pp.
542?548.Roman Yangarber.
2003.
Counter-training in discoveryof semantic patterns.
In Proceedings of the ACL ?03,pp.
343?350.172
