Proceedings of BioNLP Shared Task 2011 Workshop, pages 143?146,Portland, Oregon, USA, 24 June, 2011. c?2011 Association for Computational LinguisticsExtracting Biological Events from Text Using Simple Syntactic PatternsQuoc-Chinh Bui, Peter M.A.
SlootComputational Science, Informatics InstituteUniversity of AmsterdamScience Park 904, Amsterdam, The Netherlands{c.buiquoc,p.m.a.sloot}@uva.nlAbstractThis paper describes a novel approach pre-sented to the BioNLP?11 Shared Task onGENIA event extraction.
The approach con-sists of three steps.
First, a dictionary is auto-matically constructed based on trainingdatasets which is then used to detect candidatetriggers and determine their event types.
Sec-ond, we apply a set of heuristic algorithmswhich use syntactic patterns and candidatetriggers detected in the first step to extractbiological events.
Finally, a post-processing isused to resolve regulatory events.
Weachieved an F-score of 43.94% using theonline evaluation system.1 IntroductionThe explosive growth of biomedical scientificliterature has attracted a significant interest on de-veloping methods to automatically extract biologi-cal relations in texts.
Until recently, most researchwas focused on extracting binary relations such asprotein-protein interactions (PPIs), gene-disease,and drug-mutation relations.
However, the ex-tracted binary relations cannot fully represent theoriginal biomedical data.
Therefore, there is anincreasing need to extract fine-grained and com-plex relations such as biological events (Miwa etal., 2010).
The BioNLP?09 Shared Task (Kim etal., 2009) was the first shared task that provided aconsistent data set and evaluation tools for extrac-tion of such biological relations.Several approaches to extract biological eventshave been proposed for this shared task.
Based ontheir characteristics, these approaches can be di-vided into 3 groups.
The first group uses a rule-based approach which implements a set of manu-ally defined rules developed by experts or auto-matically learned from training data.
These rulesare then applied on dependency parse trees to ex-tract biological events (Kaljurand et al, 2009; Kil-icoglu and Bergler, 2009).
The second group uses amachine learning (ML)-based approach which ex-ploits various specific features and learning algo-rithms to extract events (Bj?rne at al., 2009; Miwaet al, 2010).
The third group uses hybrid methodsthat combine both rule- and ML-based approachesto solve the problem (Ahmed et al, 2009; M?ra etal., 2009).
Among these proposed approaches, theML achieved the best results, however, it is non-trivial to apply.In this paper, we propose a rule-based approachwhich uses two syntactic patterns derived from aparse tree.
The proposed approach consists of thefollowing components: a dictionary to detect trig-gers, text pre-processing, and event extraction.2 System and method2.1 Dictionary for event trigger detectionThe construction of the dictionary consists of thefollowing steps: grouping annotated triggers, filter-ing out irrelevant triggers, and calculating suppor-tive scores.
First, we collect all annotated triggersin the training and development datasets, convertthem to lowercase format and group them based ontheir texture values and event types.
For each trig-ger in a group, we count its frequency being anno-tated as trigger and its frequency being found inthe training datasets to compute a confident score.Next, we create a list of non-trigger words fromthe training dataset which consists of a list of prep-ositions (e.g.
to, by), and a list of adjectives (e.g.high, low).
We then filter out triggers that belongto the non-trigger list as well as triggers that con-sist of more than two words as suggested in theprevious studies (Kilicoglu and Bergler, 2009).
Wefurther filter out more triggers by setting a fre-quency threshold for each event type.
Triggers that143have a frequency lower than a given threshold(which is empirically determined for each eventtype) are excluded.In addition, for each binding trigger (i.e.
triggerof binding event) we compute a t2score which isthe ratio of having a second argument.
For eachregulatory trigger we compute an escore which isthe ratio of having an event as the first argument(theme) and a cscore is the ratio of having a secondargument (cause).2.2 Text preprocessingText preprocessing includes splitting sentences,replacing protein names with place-holders, andparsing sentences using the Stanford Lexical Par-ser1.
First, we split the input text (e.g.
title, ab-stract, paragraph) into single sentences usingLingPipe sentence splitter2.
Sentences that do notcontain protein names are dropped.
Second, wereplace protein names with their given annotatedIDs in order to prevent the parser from segmentingmultiple word protein names.
Finally, the sen-tences are parsed with the Stanford parser to pro-duce syntactic parse trees.
All parse trees arestored in a local database for later use.Detection of event trigger and event type: Foreach input sentence, we split the sentence into to-kens and use the dictionary to detect a candidatetrigger and determine its event type (hereafter wereferred to as ?trigger?
type).
After this step, weobtain a list of candidate triggers and their relatedscores for each event type.2.3 Event extractionTo extract the biological events from a parsetree after obtaining a list of candidate triggers, weadapt two syntactic patterns based on our previouswork on extracting PPIs (Bui et al, 2011).
Thesepatterns are applied for triggers in noun, verb, andadjective form.
In the following sections we de-scribe the rules to extract events in more detail.Rule 1: Extracting events from a noun phrase (NP)If the candidate trigger is a noun, we find a NPwhich is a joined node of this trigger and at leastone protein from the parse tree.
There are two NPpatterns that can satisfy the given condition whichare shown in Figure 1.
In the first case (form1), NP1 http://nlp.stanford.edu/software/lex-parser.shtml2 http://alias-i.com/lingpipe/does not contain a PP tag, and in the second case(form2), the trigger is the head of this NP.
Depend-ing on the trigger type (simple, binding or regula-tory event), candidate events are extracted by thefollowing rules as shown in Table 1.EventtypeConditions and ActionsSimpleorRegula-toryNP in form1: extract all proteins on theleft of the trigger from NP.
Form eventpairs <trigger, protein>.NP in form2: extract all proteins on theright of the trigger from NP.
Form eventpairs <trigger, protein>.BindingNP in form1: If proteins are in compoundform i.e.
PRO1/PRO2, PRO1-PRO2 thenform an event triple <trigger, protein1,protein2>.
Otherwise, form events pairs<trigger, protein>.NP in form2: If NP contains one of thefollowing preposition pairs: between/and,of/with, of/to, and the trigger?
t2score >0.2then split the proteins from NP into twolists: list1 and list2 based on the secondPP (preposition phrase) or CC (conjunc-tion).
Form triples <trigger, protein1, pro-tein2>, in which protein1 from list1 andprotein2 from list2.
Otherwise, formevents the same way as simple event case.Table 1: Conditions and actions to extract events from aNP.
Simple and regulatory events use the same rules.Rule 2: Extracting events from a verb phrase (VP)If the candidate trigger is a verb, we find a VPwhich is a direct parent of this trigger from theparse tree and find a sister NP immediately preced-ing this VP.
Next, candidate events are extractedby the following rules as shown in Table 2.NPPRO1NN NNexpressionNNNPIN NPPPNPPRO0 PRO1 andNN CCDT NNinteraction the betweenForm 2Form 1Figure 1: NP patterns containing trigger144The event trigger is an adjective: For a candidatetrigger which is an adjective, if the trigger is in acompound form (e.g.
PRO1-mediated), we applyrule1 to extract events.
In this case, the compoundprotein (e.g.
PRO1) is used as cause argument.Otherwise, we apply rule 2 to extract.2.4 Post-processingPost-processing includes determination of anevent type for a shared trigger and checking cross-references of regulatory events.
For each extractedevent which has a shared trigger3, this event is ver-ified using a list of modified words (e.g.
gene,mRNA) to determine final event type.
For regula-tory events, the post-processing is used to findcross reference events.
The post-processing isshown in Algorithm 1.Table 2: Conditions and actions to extract events from aVP2.5 Algorithm to extract eventsThe whole process of extracting biological event isshown in Algorithm 13 A shared trigger is a trigger that appears in more than onegroup, see section 2.1.Algorithm 1.
// Algorithm to extract biological eventsfrom sentence.Input: pre-processing sentence, parse tree, and listsof candidate triggers for each event typeOutput: lists of candidate events of correspondingevent typeInit: found_list = null // store extracted events forreference laterStep 1: Extracting eventsFor each event typeFor each trigger of the current event typeExtract candidate events using extraction rulesIf candidate event foundStore this event to the found_listEnd ifEnd forEnd forStep 2: Post-preprocessingFor each extracted event from found_listIf event has a shared triggerVerify this event with the modified wordsIf not satisfyRemove this event from found_listEnd ifEnd ifIf event is a regulatory event and escore>0.3Check its argument (protein) for cross-referenceIf foundReplace current protein with found eventEnd ifEnd ifEnd for3 Results and discussionTable 3 shows the latest results of our systemobtained from the online evaluation system (theofficial evaluation results are 38.19%).
The resultsshow that our method performs well on simple andbinding events with an F-score of 63.03%.
It out-performs previously proposed rule-based systemson these event types despite the fact that part of thetest set consists of full text sentences.
In addition,our system adapts two syntactic patterns whichwere previously developed for PPIs extraction.This means that the application of syntactic infor-mation is still relevant to extract biological events.In other words, there are some properties these ex-traction tasks share.
However, the performanceEvent type Conditions and ActionsSimple If VP contains at least one protein thenextract all proteins which have a posi-tion on the right of the trigger from theVP to create a protein list.
Otherwise,extract all proteins that belong to theNP.
Form event pairs <trigger, protein>with the obtained protein list.Binding If VP contains at least one protein thenextract all proteins which have a posi-tion on the right of the trigger from VPto create a protein list1.
Extracting allproteins that belong to the NP to createprotein list2.
If both list1 and list2 arenot empty then form triples <trigger,protein1, protein2>, in which protein1from list1 and protein2 from list2.
Oth-erwise, form event pairs <trigger, pro-tein> from the non-empty protein list.Regulatory If trigger?
cscore>0.3 then extract thesame way as for the binding event, inwhich protein from list1 is used forcause argument.
Otherwise follows therule of the simple event.145significantly decreases on regulatory events withan F-score of 26.61%.Analyzing the performance of our system onregulatory events reveals that in most of false posi-tive cases, the errors are caused by not resolvingreference events properly.
These errors can be re-duced if we have a better implementation of thepost-processing phase.
Another source of errors isthat the proposed method did not take into accountthe dependency among events.
For example, mosttranscription events occurred when the regulatoryevents occurred (more than 50% cases).
If associa-tion rules are applied here then the precision ofboth event types will increase.To improve the overall performance of the sys-tem, there are many issues one should take intoaccount.
The first issue is related to the distance orthe path length from the joined node between anevent trigger and its arguments.
By setting athreshold for the distance for each event type weincrease the precision of the system.
The secondissue is related to setting thresholds for the extrac-tion rules (e.g.
t2score, cscore) which is done byusing empirical data.
Many interesting challengesremain to be solved, among which are the co-reference, anaphora resolution, and cross sentenceevents.
Furthermore, the trade-off between recalland precision needs to be taken into account, set-ting high thresholds for a dictionary might increasethe precision, but could however drop the recallsignificantly.4 ConclusionIn this paper we have proposed a novel systemwhich uses syntactic patterns to extract biologicalevents from a text.
Our method achieves promisingresults on simple and binding events.
The resultsalso indicate that syntactic patterns for extractingPPIs and biological events share some commonproperties.
Therefore systems developed for ex-tracting PPIs can potentially be used to extract bio-logical events.AcknowledgementsThe authors sincerely thank Dr. Sophia Katrenkoand Rick Quax for their useful comments.
Thiswork was supported by the European Unionthrough the DynaNets project, EU grant agreementno: 233847, and the Vietnamese Oversea TrainingProgram.ReferencesS.
Ahmed et al 2009.
BioEve: Bio-Molecular EventExtraction from Text Using Semantic Classificationand Dependency Parsing.
In Proceedings of theWorkshop on BioNLP?09  Shared Task, pp.
99-102.G.
M?ra et al 2009.
Exploring ways beyond the simplesupervised learning approach for biological event ex-traction.
In Proceedings of the Workshop on Bi-oNLP?09  Shared Task, pp.137-140.J.
Kim et al 2009.
Overview of BioNLP?09 shared taskon event extraction.
Proceedings of the Workshop onBioNLP?09 Shared Task, pp.
1-9.K.
Kaljurand et al 2009.
UZurich in the BioNLP 2009shared task.
In Proceedings of the Workshop on Bi-oNLP?09 Shared Task, pp.
28-36.H.
Kilicoglu and S. Bergler.
2009.
Syntactic depend-ency based heuristics for biological event extraction.2009.
In Proceedings of the Workshop on BioNLP?09Shared Task, pp.
119-127.Q.C.
Bui, S. Katrenko, and P.M.A.
Sloot.
2011.
A hy-brid approach to extract protein-protein interactions.Bioinformatics.
27(2), pp.
259-265.M.
Miwa, R. S?tre, J.-D. Kim, and J. Tsujii.
2010.Event Extraction with Complex Event ClassificationUsing Rich Features.
Journal of Bioinformatics andComputational Biology, 8, pp.
131-146.J.
Bj?rne, F. Ginter, S. Pyysalo, J. Tsujii, T. Salakoski.2010.
Complex event extraction at PubMed scale.Bioinformatics, 26, pp.
i382-390.Event Class Recall Precision FscoreGene_expression 67.27 75.82 71.29Transcription 46.55 79.41 58.70Protein_catabolism 40.00 85.71 54.55Phosphorylation 74.05 80.59 77.18Localization 44.50 81.73 57.63Binding 35.23 51.18 41.74EVT-TOTAL 56.17 71.80 63.03Regulation 19.22 27.11 22.49Positive_regulation 22.52 33.89 27.06Negative_regulation 24.34 33.74 28.28REG-TOTAL 22.43 32.73 26.61ALL-TOTAL 38.01 52.06 43.94Table 3: Evaluation results on test set146
