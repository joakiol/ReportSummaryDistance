Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the ACL, pages 528?536,Los Angeles, California, June 2010. c?2010 Association for Computational LinguisticsUrdu Word SegmentationNadir Durrani Sarmad HussainInstitute for NLP Center for Research in Urdu Language ProcessingUniversit?t Stuttgart National University of Computer and Emerging Sciencesdurrani@ims.uni-stuttgart.de sarmad.hussain@nu.edu.pkAbstractWord Segmentation is the foremost obligatory task inalmost all the NLP applications where the initial phaserequires tokenization of input into words.
Urdu isamongst the Asian languages that face word segmenta-tion challenge.
However, unlike other Asian languages,word segmentation in Urdu not only has space omissionerrors but also space insertion errors.
This paper dis-cusses how orthographic and linguistic features in Urdutrigger these two problems.
It also discusses the workthat has been done to tokenize input text.
We employ ahybrid solution that performs an n-gram ranking on topof rule based maximum matching heuristic.
Our besttechnique gives an error detection of 85.8% and over-all accuracy of 95.8%.
Further issues and possible fu-ture directions are also discussed.1 IntroductionAll language processing applications require inputtext to be tokenized into words for furtherprocessing.
Languages like English normally usewhite spaces or punctuation marks to identify wordboundaries, though with some complications, e.g.the word ?e.g.?
uses a period in between and thusthe period does not indicate a word boundary.However, many Asian languages like Thai, Khmer,Lao and Dzongkha do not have word boundariesand thus do not use white space to consistentlymark word endings.
This makes the process oftokenization of input into words for such languagesvery challenging.Urdu is spoken by more than 100 million people,mostly in Pakistan and India1.
It is an Indo-Aryanlanguage, written using Arabic script from right toleft, and Nastalique writing style (Hussain, 2003).1Ethnologue.comhttp://www.ethnologue.com/14/show_language.asp?code=URDNastalique is a cursive writing system, which alsodoes not have a concept of space.
Thus, thoughspace is used in typing the language, it serves otherpurposes, as discussed later in this paper.
This en-tails that space cannot be used as a reliable delimi-ter for words.
Therefore, Urdu shares the wordsegmentation challenge for language processing,like other Asian languages.This paper explains the problem of word segmen-tation in Urdu.
It gives details of work done toinvestigate linguistic typology of words and moti-vation of using space in Urdu.
The paper thenpresents an algorithm developed to automaticallyprocess the input to produce consistent word seg-mentation, and finally discusses the results andfuture directions.2 Urdu Writing SystemUrdu is written in cursive Arabic script.
Charactersin general join with the neighbors within a wordand in doing so acquire different shapes.
Logically,a character can acquire up to four shapes, i.e.
ini-tial, medial, final position in a connected sequenceor an isolated form.
The characters having thisfour-way shaping are known as joiners.
However,another set of characters only join with charactersbefore them but do not join with character afterthem, and are termed as non-joiners.
The non-joiners only have final and isolated forms.
Forexample Arabic Letter Farsi Yeh ?
is a joiner andhas four shapes ?
,?
,?
and ?
respectively andArabic letter Dal ?
is a non-joiner and has twoforms ?
and ?
only.
The shape that these charactersacquire depends upon the context.Table 1 lists the orthographic rules that Urdu cha-racters follow.
For example, the table shows that inthe middle of a word, if the character is a non-joiner, it acquires final shape when following a528joiner and isolated shape when following a non-joiner.
This joining behavior results in formationof multiple connected portions within a word, eachcalled a ligature.Table 1: Orthographic Rules for UrduThe concept of space as a word boundary marker isnot present in Urdu writing.
As an Urdu learner, aperson is not taught to leave a space betweenwords, but only to generate correct shaping whilewriting.
Thus, the concept of space is only learntlater on when the person learns how to use a com-puter.
However, space is introduced as a tool tocontrol the correct letter shaping and not to consis-tently separate words.
For example, the nativespeaker learns to insert a space within the word?????
???
(?needy?)
to generate the correct shapeof ?.
Without space it appears as ????????
whichis visually incorrect.
On contrary, the user finds itunnecessary to insert a space between the twowords ????????
(?Urdu Center?
), because the cor-rect shaping is produced automatically as the firstword ends with a non-joiner.
Therefore ???????
?and ????
????
look identical.Though space character is not present in Urdu,with increasing usage of computer it is now beingused, both to generate correct shaping (as dis-cussed above) and also to separate words (a habitbeing carried over to Urdu from English literatecomputer users).
This makes space an unreliablecue for word boundary.
The problem is further ob-fuscated by the lack of a clear definition of a workin Urdu in some contexts.
The next section dis-cusses these issues.3 Segmentation Issues in Urdu TextThe segmentation challenges can be divided intotwo categories, challenges caused due to joiner andnon-joiner characters.3.1 Space OmissionAs discussed, for words ending with non-joinerscorrect shaping is generated even when space isnot typed and thus, many times a user omits thespace.
Though there is no visible implication,from the perspective of computational processingnot typing a space merges current word with thenext word.
Figure 1 below illustrates an example,where the phrase has eight words (or tokens) eachending with a non-joiner and thus the wholephrase can be written without a space and is stillvisibly same and equally readable.?????
??
???
????
???
????
??
???(a)??????????????????????????
(b)Figure 1: All Words Ending with Non-Joiners (a)with Spaces, (b) without Spaces between Words(?Troop Leader Ahmed Sher Dogar Said?
)Another frequent set of space omissions are causeddue to variation in the definition of a word in Urdu.There are certain function words in Urdu whichmay be combined with other function words andcontent words by some writers but may be writtenseparately by others.
Shape variation may alsooccur in some of these cases, but is overlooked bythe writers.
Table 2 gives some examples of suchcases.
Though the merged form is not consideredcorrect diction, it is still frequently used and thushas to be handled.
It is not considered spellingerror but a writing variation.POS Combined Separated TranslationPn+CM ??
??
????
YoursD+ NN ??
???
?????
at that timeCM+ NN ??
???
?????
TowardsV+TA ???
??
?????
will doCM + P ??
???
?????
ForPn  = Pronoun, D = Demonstrative, NN = Noun, CM= Case Marker, V=Verb, P = ParticleTable 2: Multiple Words Written in ConnectedForm Causing Shaping ChangesDue to reasonable frequency of such cases, thesemay be considered as acceptable alternatives, andthus Urdu word segmentation system would needto deal with both forms and consider them equiva-lent.
This process is productively applicable andWord J-Shape Example NJ-Shape ExampleStart I ????
Is ???
?MiddleM after J ????
F after J ???
?I after NJ ????
Is after J ???
?EndF after J ???
F after J ??
?Is after NJ ???
Is after NJ ?
?J = Joiners, NJ = Non-JoinersI = Initial, Is = Isolated, M = Medial, F = FinalUnderlined = Shape in Consideration529not limited to a few pre-determined cases.
Addi-tional complication in the process arises from thefact that in some cases (last two cases in Table 2)the spellings also change when two words are writ-ten in combined form, due to the way these charac-ters are encoded.
Urdu considers ?
and ?
bothlogically same characters at a certain level, thoughwith different shapes to indicated different vowels(Hussain, 2004).
In combined form they render thesame shape.
However, Unicode terms ?
as a non-joiner with no medial shape.
Thus, the Urdu writ-ers use ?
to generate the medial position of ?
incombined form.3.2 Space InsertionWhen multiple morphemes are juxtaposed within aword, many of them tend to retain their shaping asseparate ligatures.
If ending characters are joiners,space is usually inserted by writers to prevent themfrom joining and thus to retain the separate ligatureidentity.
This causes an extra space within a word.Though this creates the visually acceptable form, itcreates two tokens from a single word in the con-text of its processing.
If the writers do not type aspace between these two morphemes within a wordthey would join and create a visually incorrectshape.
Such examples are common in Urdu2.
Fewof these cases are given in Table 3.Class A B Translationi ???????
????
???
Marriedii ??????
???
???
Candleiii ?????????
????
?????
Unnecessarilyiv ???????
????
???
Telephonev ???????
??
???
??
PhDi= Affixation, ii = Compounding ,iii = Reduplication, iv = Foreign Word,v = AbbreviationsTable 3: (A) Separated Form (Correct Shaping, butTwo Tokens), (B) Combined Form (ErroneousShaping, with one Token)As categorized in Table 3, the space insertionproblem is caused due to multiple reasons.
Dataanalyzed shows that space is inserted (i) to keepaffixes separate from the stem, (ii) in some cases,2Though Unicode recommends using Zero Width Non-Joinercharacter in these context, this is not generally known by Urdutypists and thus not practiced; Further, this character is notavailable on most Urdu keyboards.to keep two words compounded together from vi-sually merging, (iii) to keep reduplicated wordsfrom combining, (iv) to enhance readability ofsome foreign words written in Urdu, and (v) tokeep English letters separate and readable whenEnglish abbreviations are transliterated.3.3 Extent of Segmentation Issues in UrduIn an earlier work on Urdu spell checking (Naseemand Hussain, 2007) report that a significant numberof spelling errors3 are due to irregular use of space,as discussed above.
The study does a spellingcheck of an Urdu corpus.
The errors reported bythe spelling checker are manually analyzed.
A to-tal of 975 errors are found and of which 736 errorswere due to irregular use of space (75.5%) and 239errors are non-space-related errors (24.5%).
Of thespace related errors, majority of errors (672 or 70%of total errors) are due to space omission and 53errors (5%) were due to space insertion.
Thus irre-gular use of space causes an extremely high per-centage of all errors and has to be addressed for alllanguage processing applications for Urdu.A study of Urdu words was also conducted as partof the current work.
Text was used from popularUrdu online news sites (www.bbc.co.uk/urdu andhttp://search.jang.com.pk/).
A data of 5,000 wordsfrom both corpora was observed and space inser-tion and omission cases were counted.
Thesecounts are given in Table 4.
Counts for Space In-sertion are sub-divided into the four categoriesidentified earlier.Problem BBC Jang TotalSpace Omission 373 563 936Space InsertionAffixation 298 467 765Reduplication 52 76 128Compounding 133 218 351Abbreviation 263 199 462Total 1119 1523 2642Table 4: Space Omission and Insertion Countsfrom Online BBC and Jang Urdu News WebsitesThe data shows that a significantly high percentageof errors related to space, with significant errors3Errors based on tokenization on space and punctuation mark-ers530related to both omission and insertion.
Within in-sertion errors, affixation, compounding and ab-breviation related errors are more significant(because reduplication is a less frequent phenome-non).In summary, the space related errors are significantand must be addressed as a precursor to any signif-icant language and speech processing of the lan-guage3.4 Ambiguity in Defining Urdu WordAnother confounding factor in this context it thatthere is no clear agreement on word boundaries ofUrdu in some cases.Compound words are hard to categorize as singleor multiple words.
Urdu forms compounds inthree ways: (i) by placing two words together, e.g.???
???
(?parents?, literally ?father mother?
), (ii)by putting a combining mark between them4, e.g.????
????
(?prime minister?
), and (iii) by puttingthe conjunction ?
between two words, e.g.
???
????
(?Discipline?
).Similarly certain cases of reduplication are alsoconsidered a single word by a native speaker, e.g.????
(?fluently?)
and ?????
(?equal?
), while othersare not, e.g.
?????
?????
(?slowly?).
There are alsocases which are ambiguous, as there is no agree-ment even within native speakers.Moreover, certain function words, normally casemarkers, postpositions and auxiliaries, may bewritten joined with other words in context or sepa-rately.
The words like ???
??
may also be writtenin joined form ????
?, and the different forms maybe perceived as multiple or single words respec-tively.This is demonstrated by the results of a study donewith 30 native speakers of Urdu (including univer-sity students, language researchers and languageteachers).
The subjects were asked to mark wheth-er they considered some text a single word or asequence of two words.
Some relevant results aregiven in Table 5.
The table indicates that for thetypes of phenomena in Table 4, the native speakers4The diacritics (called zer-e-izafat or hamza-e-izafat) are op-tional, and are not written in the example given.do not always agree on the word boundary, thatcertain cases are very ambiguous, and that writingwith or without space also changes the perceptionof where the word boundary should lie.Word(s) # of Words Category1 26 24 ?????????
Compounding withconjunctive diacritic13 17 ??????
???????
-do-2 28 ?????
???
-do-2 28 ???????
-do-5 25 ???
?????
Compounding withconjunctive character ?1 29 ???
????
-do-0 30 ?????
????
Suffixation8 22 ?????
????
-do-27 3 ???
???
Reduplication27 3 ????
????
-do-15 15 ????
Space omission betweentwo auxiliaries12 18 ??????
Space omission betweenverb and auxiliary25 5 ????
??
Same as above butwithout space omissionTable 5: Survey on Word DefinitionAs the word boundary is ambiguously perceived, itis not always clear when to mark it.
To develop amore consistent solution, the current work tags thedifferent levels of boundaries, and it is left up tothe application provider using the output to decidewhich tags to translate to word level boundaries.Free morphemes are placed and identified at firstlevel.
At second level we identify strings that areclearly lexicalized as a single word.
Compounds,reduplication and abbreviations are dealt at thirdlevel.4 Summary of Existing TechniquesRule based techniques have been extensively usedfor word segmentation.
Techniques includinglongest matching (Poowarawan, 1986; Rarunrom,1991) try to match longest possible dictionarylook-up.
If a match is found at nth letter next look-up is performed starting from n+1 index.
Longestmatching with word binding force is used for Chi-nese word segmentation (Wong and Chang, 1997).However, the problem with this technique is that itconsistently segments a letter sequence the sameway, and does not take the context into account.531Thus, shorter word sequences are never generated,even where they are intended.Maximum matching is another rule based tech-nique that was proposed to solve the shortcomingsof longest matching.
It generates all possible seg-mentations out of a given sequence of charactersusing dynamic programming.
It then selects thebest segmentation based on some heuristics.
Mostpopularly used heuristic selects the segmentationwith minimum number of words.
This heuristicfails when alternatives have same number ofwords.
Some additional heuristics are then oftenapplied, including longest match (Sornlertlamva-nich, 1995).
Many variants of maximum matchinghave been applied (Liang, 1986; Li et al, 1991; Guand Mao, 1994; Nie et al, 1994).There is a third category of rule based techniques,which also use additional linguistic information forgenerating intermediate solutions which are theneventually mapped onto words.
For example, rulebased techniques have also been applied to lan-guages like Thai and Lao to determine syllables,before syllables are eventually mapped onto words,e.g.
see (Phissamy et al, 2007).There has been an increasing application of statis-tical methods, including n-grams, to solve wordsegmentation.
These techniques are based at let-ters, syllables and words, and use contextual in-formation to resolve segmentation ambiguities, e.g.
(Aroonmanakul, 2002; Krawtrakul et al, 1997).The limitation of statistical methods is that theyonly use immediate context and long distance de-pendencies cannot be directly handled.
Also theperformance is based on training corpus.
Neverthe-less, statistical methods are considered to be veryeffective to solve segmentation ambiguities.Finally, another class of segmentation techniquesapplies several types of features, e.g.
Winnow andRIPPER algorithms (Meknavin et al, 1997; Blum1997).
The idea is to learn several sources of fea-tures that characterize the context in which eachword tends to occur.
Then these features are com-bined to remove the segmentation ambiguities(Charoenpornsawat and Kijsirikul 1998).5 Segmentation Model for UrduAlthough many other languages share the sameproblem of word boundary identification for lan-guage processing, Urdu problem is unique due toits cursive script and its irregular use of space tocreate proper shaping.
Though other languagesonly have space omission challenge, Urdu has bothomission and insertion problems further confound-ing the issue.We employ a combination of techniques to inves-tigate an effective algorithm to achieve Urdu seg-mentation.
These techniques are incorporatedbased on knowledge of Urdu linguistic and writingsystem specific information for effective segmen-tation.
For space omission problem a rule basedmaximum matching technique is used to generateall the possible segmentations.
The resulting possi-bilities are ranked using three different heuristics,namely min-word, unigram and bigram techniques.For space insertion, we first sub-classify the prob-lem based on linguistic information, and then usedifferent techniques for the different cases.
Spaceinsertion between affixes is done by extracting allpossible affixes from Urdu corpus.
Some affixes inUrdu are also free morphemes so it is important toidentify in segmentation process whether or notthey are part of preceding or following word.
Forexample ???
is also a free morpheme (?nose?)
anda suffix that makes adjective from noun, e.g.
inword ???
???
(?dangerous?).
This is done basedon the part of speech information of the words inthe context.Reduplication is handled using edit distance algo-rithm.
In Urdu the reduplicated morpheme is eitherthe same or a single edit-distance from the basemorpheme, e.g.
????
has same string repeated, ????
?has one insertion, and ????
????
has one substitu-tion.
Thus, if a string is less than two edits from itsneighbor it is an instance of reduplication5.
As theexamples suggest, the reduplication may not onlybe limited to word initial position and may alsooccur word medially.
However, if the length ofbase word is less than four, it is further to avoidfunction words (case markers, postpositions, aux-5Insertion, deletion and substitution are all considered contri-buting a single edit distance here.532iliaries, etc.)
from being mistakenly identified as acase of reduplication, e.g.
???
???
(?was done?)
hastwo words with a single edit distance but is not areduplicated sequence.Urdu does not abbreviate strings, but abbreviationsfrom English are frequently transliterated into Ur-du.
This sequence can be effectively recognized bydeveloping a simple finite automaton.
The automa-ton treats marks all such co-occurring morphemesbecause they are likely to be an English abbrevia-tion transliterated into Urdu, e.g.
??
???
??(?PhD?).
If such morphemes are preceding propernames then these are not combined as they aremore likely to be the initials of an abbreviatedname, e.g.
??
????
???
(?N.
D.
Shakir?).
This ap-proach confuses the morpheme ??
(genitive casemarker) of Urdu with the transliteration of Englishletter ?k?.
If we write ??
??
???
??
???
(?afterPhD?
), it is interpreted as ?P H D K after?.
Thishas to be explicitly handled.As classification of compounds into one or twoword sequences is unclear, unambiguous cases areexplicitly handled via lexical look-up.
An initiallexicon of 1850 compound words has been devel-oped for the system based on a corpus of Urdu.Common foreign words are also included in thislist.5.1 AlgorithmThe segmentation process starts with pre-processing, which involves removing diacritics (asthey are optionally used in Urdu and not consi-dered in the current algorithm because they arefrequently incorrectly marked by users6) and nor-malizing the input text to remove encoding ambi-guities7.
Input is then tokenized based on spaceand punctuation characters in the input stream.
Ashas been discussed, space does not necessarily in-dicate word boundary.
However presence of spacedoes imply word or morpheme boundary in many6The word  ?????
is written with the super-script Alef placedon Lam and Yay characters.
The latter variation is correct butthe former incorrect variation is also common in the corpus.7Unicode provides multiple codes for a few letters, and bothcomposed and decomposed forms for others.
These have to bemapped onto same underlying encoding sequence for furtherprocessing.
Seehttp://www.crulp.org/software/langproc/urdunormalization.htm for details.cases, which can still be useful.
The tokenizationprocess gives what we call an Orthographic Word(OW).
OW is used instead of ?word?
because oneOW may eventually give multiple words and mul-tiple OWs may combine to give a single word.Keeping space related information also keeps theextent of problem to be solved within a reasonablecomputational complexity.
For example inputstring ????
???
?????
(the name of the first author)with spaces giving three OWs, creates 2 x 1 x 7 =14 possible segmentations when sent separately tothe maximum matching module (space omissionerror removal - see Figure 2).
However, if we re-move the spaces from the input and send input as asingle OW ????????????
to maximum matchingprocess, we get 77 possible segmentations.
Thisnumber grows exponentially with the length ofinput sentence.
Throwing away space charactermeans we are losing important information so wekeep that intact to our use.After pre-processing a series of modules furtherprocess the input string and convert the OWs into asequence of words.
This is summarized in Figure2 and explained below.Each OW is sent to a module which deals withspace omission errors.
This module extracts allpossible morpheme segmentations out of an OW.Ten best segmentations of these are selected basedon minimum-word heuristic.
This heuristic preferssegmentations with minimum number of mor-phemes.
Such a heuristic is important to preventthe search space to explode.
We observed that us-ing 10-best segmentations proved to be sufficientin most cases as OW normally encapsulates two orthree Urdu words but as a heuristic we also added afeature which increases this number of 10-bestsegmentations to 15, 20, 25-best and so on depend-ing upon number of characters in an OW.
Ten bestsegmentations for each OW are merged with theextracted segmentations of other OWs.
Up till herewe have successfully resolved all space omissionerrors and the input sentence has been segmentedinto morphemes.
The 10n (where ?n?
is No.
ofOWs) segmentations are then passed on to spaceinsertion error removal module.
This module hasseveral sub-modules that handle different linguisticphenomena like reduplication, affixation, abbrevia-tions and compounding.533The reduplication identification module employssingle edit distance algorithm to see if adjacentmorphemes are at single edit-distance of each oth-er.
If the edit distance is less than two, then thereduplication is identified and marked.Diacritic Removal / TokenizationSpace Omission Error RemovalCheck for Reduplication within an OWLexical Look-ups for Spelling VariationsMaximum Matching ModuleRanking-based on Min-Word HeuristicSpace Insertion Error RemovalReduplication HandlingEnglish Abbreviation HandlingAffixation HandlingCompound Word TaggingN-Gram Based RankingFigure 2: Urdu Word Segmentation ProcessFor example the module will correctly recognizeconsecutively occurring OWs ?????
and ?????
as acase of reduplication.
Reduplication is also ap-plied earlier in space omission error module asthere may also be a case of reduplication within asingle OW.
This module handles such cases, bydividing words in halves and identifying possiblereduplications.
Thus, if the words are writtenwithout space, e.g.
??????????
(innocent) they arestill identified and tagged as reduplicated words?????
and ????
?.This list of words is then fed into an automatonwhich recognizes the sequence of abbreviationsgenerated by transliterating English letters.A complete affix list is compiled, and in the nextstage the short listed word sequences are processedthrough a process which looks through this list todetermine if any of the OWs may be combined.Part of speech information of stem is also used toconfirm if OWs can be merged.Urdu compounds are finally identified.
This isdone by using a compound list generated throughthe corpus.
As compounding is arbitrary, wherespeakers are not certain in many cases that a se-quence of morphemes form a single compound ornot, the segmentation process leaves this level tothe discretion of the user.
Whichever compoundsare listed in a compound lexicon are treated as asingle compound word.
Those not listed are nottagged as compounds.
User may enhance this listarbitrarily.
The lexicon is initialized with a list ofnon-controversial compound, as verified from pub-lished dictionaries.Eventually, all the segmentations are re-ranked.We used three different re-ranking methods name-ly minimum-word heuristic, unigram and bi-grambased sequence probabilities, comparative analysis.Based on the segmentation process, the output se-quence contains the following tagging.
As dis-cussed earlier, the word segmentation may bedefined based on this tagging by the individualapplication using this process.Phenomenon Tags ExamplesWord <W></W> <W>????
?</W>Root <R></R> <W><R>?????</R><S>??
?</S></W>Suffix <S></S> <W><R>????</R><S>????
?</S></W>Prefix <P></P> <W><P>??</P><R>?????
?</R></W>XY Com-pounds<C1></C1> <C1><W>?????</W><W>???
?</W></C1>X-e-Y Com-pounds<C2></C2> <C2><W>???
?</W><W> ????
</W></C2>X-o-Y Com-pounds<C3></C3> <C3><W>???</W><W>?</W><W>???
?</W></C3>Reduplication <Rd></Rd> <Rd><W>????</W><W>???
?</W></Rd>Abbreviations <A></A> <A><W>??</W><W>?
?</W> </A>Figure 3: Urdu Word Segmentation Tag SetA regular word is tagged using <w> ?</w> pair.Roots, suffixes and prefixes are also tagged withina word.
Reduplication, compounding and abbrevia-tions are all considered to be multi-word tags andrelevant words are grouped within these tags.Three different kind of compounding is separatelytagged.5346 ResultsThe algorithm was tested on a very small, manual-ly segmented corpus of 2367 words.
The corpuswe selected contained 404 segmentation errorswith 221 cases of space omissions and 183 cases ofspace insertions.
In space insertion category therewere 66 cases of affixation, 63 cases of compound-ing, 32 cases of reduplication and 22 cases of ab-breviations.
The results for all three techniques areshown below:Categories Errors %agesAffixation 59/66 89.39Reduplication 27/32 84.37Abbreviations 19/22 86.36Compounds 28/63 44.44Total 133/183 72.67Table 6: Percentages of Number of Errors Detectedin Different Categories of Space Insertion ErrorThere were 221 cases of space omission errorswhere multiple words were written in a continuum.Given below is a table that shows how many ofthese were correctly identified by each of the usedtechniques.
Clearly, statistical techniques outper-form a simple minimum number of words heuris-tic.
Bigrams are likely to produce better results ifthe training corpus is improved.
Our training cor-pus contained manually segmented 70K words.The bigram probabilities are obtained usingSRILM-Toolkit (Stolcke, 2002).Categories Errors %agesMaximum Matching 186/221 84.16Unigram 214/221 96.83Bigram 209/221 94.5Table 7: %age of No.
of Errors Detected in SpaceOmission with Different Ranking TechniquesFollowing table gives cumulative results for cor-rectly identified space omission and insertion er-rors.Categories Errors %agesMaximum Matching 323/404 79.95Unigram 347/404 85.8Bigram 339/404 83.9Table 8: %age of No.
of Errors Detected Cumula-tivelyFinal table counts total number of words (redupli-cation, compounds and abbreviations cases are in-clusive) in test corpus and total number ofcorrectly identified words after running the entiresegmentation process.Categories Detected %agesMaximum Matching 2209/2367 93.3Unigram 2269/2367 95.8Bigram 2266/2367 95.7Table 9: Percentage of Correctly Detected Words7 Future WorkThis work presents a preliminary effort on wordsegmentation problem in Urdu.
It is a multi-dimensional problem.
Each dimension requires adeeper study and analysis.
Each sub-problem hasbeen touched in this work and a basic solution forall has been devised.
However to improve on re-sults each of these modules require a separateanalysis and study.
Statistics is only used in rank-ing of segmentations.
In future work bi-gram sta-tistics can be used to merge morphemes.
More datacan be tagged to find out joining probabilities forthe affixes that occur as free morpheme.
Suchanalysis will reveal whether an affix is more in-clined towards joining or occurs freely more fre-quently.
Similarly a corpus can be tagged oncompounds.
For each morpheme its probability tooccur in compound can be calculated.
If two ormore morphemes with higher compounding proba-bilities co-occur they can be joined together.
Simi-larly corpus can be tagged for abbreviations.Ranking of segmentations and affix merging canbe improved if POS tags are also involved withbigram probabilities.
Use of POS tags with n-gramtechnique is proven to be very helpful in solvingunknown word problems.
Our model does not ex-plicitly handle unknown words.
Currently the max-imum matching module splits an unknown OWinto smaller Urdu morphemes.
For example??????????
(Kolesnikov) is erroneously split into?????????????.
More serious problems occur incases when OW is a mixture of known and un-known words.
For example in case ?????????????
(?Fraser must go?).
All these are to be addressed infuture work.535ReferencesAndreas, S. 2002.
SRILM - an extensible languagemodeling toolkit.
In Intl.
Conf.
Spoken LanguageProcessing, Denver, Colorado.Aroonmanakul, W. 2002.
Collocation and ThaiWord Segmentation.
In proceeding of SNLPOrien-tal COCOSDA.Blum, A.
1997.
Empirical Support for Winnow andWeighted-Majority Algorithm: Results on a Ca-lendar Scheduling Domain, Machine Learning,26:5-23.Charoenpornsawat, P., Kijsirikul, B.
1998.
Fea-ture-Based Thai Unknown Word Boundary Identi-fication Using Winnow.
In Proceedings of the1998 IEEE Asia-Pacific Conference on Circuitsand Systems (APCCAS?98).Gu, P. and Mao, Y.
1994.
The adjacent matchingalgorithm of Chinese automatic word segmentationand its implementation in the QHFY Chinese-English system.
In International Conference onChinese Computing, Singapore.Hussain, S. 2003. www.
LICT4D .
asia / Fonts /Nafees_Nastalique.
In the Proceedings of 12thAMIC Annual Conference on E-Worlds: Govern-ments, Business and Civil Society, Asian MediaInformation Center, Singapore.
Also available athttp://www.crulp.org/Publication/papers/2003/www.LICT4D.asia.pdf.Hussain, S. 2004.
Letter to Sound Rules for UrduText to Speech System.
In the Proceedings ofWorkshop on Computational Approaches to ArabicScript-based Languages, COLING 2004, Geneva,Switzerland, 2004.Krawtrakul, A., Thumkanon.
C., Poovorawan.
Y.and Suktarachan.
M. 1997.
Automatic Thai Un-known Word Recognition.
In Proceedings of thenatural language Processing Pacific Rim Sympo-sium.Li, B.Y., S. Lin, C.F.
Sun, and M.S.
Sun.
1991.
Amaximum-matching word segmentation algorithmusing corpus tags for disambiguation.
InROCLING IV, pages: 135-146, Taipei.
ROCLINGLiang, N. 1986.
A written Chinese automatic seg-mentation system-CDWS.
In Journal of ChineseInformation Processing, 1(1):44-52.Meknavin.
S., Charenpornsawat.
P. and Kijsirikul.B.
1997.
Feature-based Thai Words Segmentation.NLPRS, Incorporating SNLP.Naseem, T., Hussain, S. 2007.
Spelling ErrorTrends in Urdu.
In the Proceedings of Conferenceon Language Technology (CLT07), University ofPeshawar, Pakistan.Nie, J., Jin W., and Hannan, M. 1994.
A hybridapproach to unknown word detection and segmen-tation of Chinese.
In International Conference onChinese Computing, Singapore.Phissamay, P., Dalolay,V., Chanhsililath, C., Sili-masak, O. Hussain, S., and Durrani, N.  2007.
Syl-labification of Lao Script for Line Breaking.
InPAN Localization Working Papers 2004-2007.
.Poowarawan, Y., 1986.
Dictionary-based Thai Syl-lable Separation.
In Proceedings of the Ninth Elec-tronics Engineering ConferenceRarunrom, S., 1991.
Dictionary-based Thai WordSeparation.
Senior Project Report.Sornlertlamvanich, V. 1995.
Word Segmentationfor Thai in a Machine Translation System (inThai), Papers on Natural Language Processing,NECTEC, ThailandWong, P., Chan, C. 1996.
Chinese Word Segmen-tation based on Maximum Matching and WordBinding Force.
In Proceedings of COLING 96, pp.200-203.536
