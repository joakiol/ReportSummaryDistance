Optimising text quality in generation from relational databasesMichael  O 'Donne l l t  (micko@dai .ed .ac .uk) ,A l i s ta i r  Knott:~ (a l i k@hermes .o tago .ac .nz ) ,Jon  Ober lander ,  ( jon@cogsc i .ed .ac .uk) ,Chr i s  Me l l i sh t (chr i sm@dai .ed .ac .uk), D iv is ion  of  In fo rmat ics ,  Un ivers i ty  of  Ed inburgh .. .
.
.
.
~.
:D.eparl~me~t.nf: Compulzer?c ience~ ~Otago Univers ity:Abst rac tThis paper outlines a text generation system suitedto a large class of information sources, relationaldatabases.
We focus on one aspect of the problem:the additional information which needs to be spe-cified to produce reasonable text quality when gen-erating from relational databases.
We outline howdatabases need to be prepared, and then describevarious types of domain semantics which can be usedto improve text qualify.1 In t roduct ionAs the problems of how we generate text are gradu-ally solved, a new problem is gaining prominence- where do we obtain the information which feedsthe generation.
Many domain models for existinggeneration systems are hand-crafted for the specificsystem.
Other systems take advantage of existinginformation sources.A good information source for text generationresides in the vast number of relational databaseswhich are in use around tile world.
These resourceshave usually been provided for some reason otherthan text generation, such as inventory manage-ment, accounting, etc.
However, given that the in-formation is on hand, it can be of value to conuectthese databases to text generation facilities.The benefits include natural anguage access to in-formation which is usually accessed in tabular form,which can be difficult to interpret.
Natural Lan-guage descriptions are easier to read, can be tailoredto user types, and can be expressed in different lan-guages if properly represented.This paper outlines the domain specification lan-guage for the ILEX text g~neration system, (forIntelligent Labelling Explorer).
1ILEX is a tool for ?dynamic browsing of database-defined information: it allows a user to browsethrough the information in a database using hyper-1Earlier ILEX papers have been based on Ilex 2.0, whichwas relatively domain-dependent.
This  paper is based aroundversion 3.0 of ILEX, a re-draft to make the system domain-independent, and domain acquisition far easier.
The ILEXproject was supported by EPSRC grant GR/K53321.text.
ILEX generates descriptions of database ob-jects on the fly, taking into account he user's con-text of browsing.
Figure 1 shows the ILEX web in-terface, as applied to a museum domain, in this casethe Twentieth Century Jewellery exhibition at thethe National Museum of Scotland.
2 The links torelated database objects are also automatically gen-erated.
ILEX has been applied to other domains, in-cluding personnel (Nowson, 1999), and a sales cata-logue for computer systems and peripherals (Ander-son and Bradshaw, 1998).One of the advantages of using NLG for databasebrowsing is that the system can keep track of whathas already been said about objects, and not repeatthat information on later pages.
Appropriate refer-ring expressions can also be selected on the basisof the discourse history.
The object descriptions canbe tailored to the informational interests of the user.See Knott et al (1997) and Mellish et al (1998) formore information on these aspects of ILEX.In section 2, we consider some systems related tothe ILEX system.
Section 3 describes the form ofrelational database that ILEX accepts as input.
Sec-tion 4 outlines what additional information - domainsemantics - needs to be provided for coherent extproduction from the database, while section 5 de-scribes additional information which can be providedto improve the quality of the text produced.2 Re la ted  WorkIt should be clear that the task we are discussing isvery distinct from the task of response generation ina natural language interface to a database (e.g., seeAndroutsopoulos et al (1995)). '
In such systtems,the role of text planning is quite simple or absent,usually dealing with single sentences, or in the most?
?
complex systems;~ a:single:sentence ,answer ~with anadditional clause or two of supporting information.ILEX is not a query response generation system,it is an object description system.
It composes a fulltext, at whatever size, with the goal of making thattext a coherent discourse.2The authors thank the museum for making their databaseavailable:133Sflver.A~nd Ename .
:!- S.~.v~ t !~s ,  w i~ blu~-~e~.~i/e.1 .
!'
) .
:~v{ .
,EX :~- - : :  .
.
.
.
.
.
.
.
.
.
.
.
.
.  )'
.
.
.
.
.
.
.  "
t ' ': i:: ' :  :!:i?
lessie-I~-X~g.,l~.
Place of,.
;?
This Jewel !s apel'l.d~mat-neckla~ ililitwaS .
.I madebZ,aSa~h de:a,S~caUed-Jesae M ,l<: gin,g:ilt~bnedlhe f~mrRemStn:tht~:case.,::_: , ':: ?
/ lowers reseri~A a~ai~t  i t - I t  is tn ~e Arts :~ud,.
Crafts:style and was made t1~ :lgfl~ It has an .
.
.
.elaborate aesign; specifically It h~ floral mows.
: :;::anlllustrat~too, In fact., shg did qttite, a' l~ of,-: :" differei~tl~rpes of creative Wark;/cwdleiTls ?
: i:.:.
; :  :i'; ~:t~n Arts.
amt Craft#Style .
),.::.:):i:.
: 2,} :,i.: 'i:' :":'::' ; :-'?
;~.~,~t,~I,t~,,/~l.a~.~_~': ~" ; : "  : : ; " : " ,  -'; 7.; ...:.."  ' .
:,L'~n Ai'ts aiid Crafts:s~lgne~iil~e -: :.::'..
': " iJ.
; ... (; .Figure 1: Browsing Object DescriptionsIn this regard, ILEX should be more fruit-fully compared with text generation systems suchas GOSSIP (Carcagno and Iordanskaja, 1993),PEBA (Milosavljevie, 1997; Milosavljevic, 1999), orPOWER (Dale et al, 1998), systems which build anextended text fl'om an underlying database.ILEX 3.0 has been developed to be domain in-dependent, to handle relational databases from anydomain, as long as the information is provided in therequired format.
The first two of the systems aboveare single domain systems.
T:he third, POWER,  isan extension of PEBA to handle a new domain.
Itis not clear however whether the resulting system is.. itself domain-dependent or not.This last system is perhaps the best comparisonfor the ILEX system, since it also generates de-scriptions of museum objects from an underlyingdatabase.
In that paper, the main focus is on theproblem of extracting out usable information frombadly structured databases (as often provided bymuseulns), and on generating texts using only onlythis information (plus some linguistic knowledge).The present paper differs from this approach by as-suming that information is already available in a nor-malised relational database.
We observe, as do Daleet al (1998), that texts generated from this inform-ation alone are quite poor in quality.
We go onestep further by examining what additional informa-tion can be provided to improve the quality of thetext to a reasonable l vel.The ILEX system has been implemented to beflexible in regards to the available domain inform-ation.
With a bare minimum, the system providespoor quality texts, but as the domain developer ex-.tends-the domain semantics, the quahty of.texts im-proves, up to a point where users sometimes nfistakeILEX-generated texts for human-authored texts.3 The Structure of a RelationalDatabaseDatabases vary widely in form, so we have assumeda fairly" standard relational database format.1343.1 Entity Files:.The database consists of .a number:.
:of ~ntity files,each file providing the records for a different entitytype.
Each record (row) in the entity file defines aunique entity.
The columns define attributes of theentities.
In a museum domain, we might have anentity file for museum artifacts, another for peopleinvolved with the artifacts (designers, owners, etc.
),another for locations, etc.
See figure 2 for a sampleentity file for the Jewellery domain.
Given the wide.range of database formats..a~vailable, !LEX ~sumesa tab-delimited format for database files.ILEX imposes two requirements on the entity filesit uses:1.
Single field key: while relational databases of-ten use multiple attributes to form a unique key(e.g., name and birthdate), ILEX requires thateach entity have a unique identifier in a singleattribute.
This identifier must be under a fieldlabelled ID.2.
Typing of entities: ILEX depends trongly on atype system.
We require that each entity recordprovides a type for the entity in a field labelledClass.Some other attribute labels are reserved by thesystem, allowing ILEX to deal intelligently withthem, including Name, Short-Name and Gender.3.2 L ink Fi lesIn some cases, an entity will have multiple fillers ofan attribute, for instance, a jewellery piece may bemade of any number of materials.
Entity files, withfixed record structure, cannot handle such eases.The standard approach in relational databases i toprovide a link file for each case where multiple fillersare possible.
A link file consists of two columns only,one identifying the entity, the other identifying thefiller (the name of the attribute is provided in thefirst line of the file, see figure 3).We are aware that the above specification repres-ents an impoverished view of relational databases.Many relational databases provide far more thansimple entity and link files.
However, by no meansall relational databases provide more than this, sowe have adopted the lowest common denominator.Most relational databases can be exported in a formwhich meets our requirements.3.3 TerminologyIn the following discussion, we will use the followingterminology:* Predicate: each column of an entity file definesa predicate.
Class, Designer and Date are thuspredicates introduced in figure 2.
Each link filealso defines a predicate.?
Record: each row of an entity table provides theattributes o f  a: single.,entity.
: The row is termeda record in database terminology.?
Fact: each entry in a record defines what wecall a fact about that entity, a A fact consists o fthree parts: its predicate name, and two argu-ments, being the entity of the record, and thefiller of the slot.?
ARC1: the first argument of a fact, the entitythe  fact is about.. ARC2: the second argument of a fact, the fillerof the attribute for the entity.4 Spec i fy ing  the  Semant ics  o f  theDatabaseA database itself says nothing about the nature ofthe contents of each field in the database.
It mightbe a name, a date, a price, etc.
Similarly for thefield label: the field label names a relation betweenthe entity represented by the record and the entityrepresented by the filler.
However, without furtherspecification, we do not know what this relationshipentails, apart from the label itself, e.g., 'Designer'.Before we can begin to process a database intelli-gently, we need to define the 'semantics' of the data-base.
This section will outline how this is done in theILEX case.
There has been some work on automaticacquisition of database semantics, uch as in the con-struction of taxonomies of domain entity types (seeDale et al (1998) for instance).
However, it is diffi-cult to perform this process reliably and in a domain-independent manner, so we have not attempted toin this case.
The specification of domain semanticsis still a manual process which has to be undertakento link a database to the text generator.To use a database for generation, additional in-formation of several kinds needs to be provided:1.
Taxonomic organisation: supplying of types foreach database ntity, and organisation of thesetypes into taxonomies;2.
Taxonomic lexification: specif~'ing how each do-main type is lexified;3.
Data type off attribute fillers: telling the systemto expect the filler of a record slot to be anentity-id, a string, a date, etc.4.
Domain type specification:specifying What do-main type the slot filler can be assumed to be.Each of these aspects of domain specification willbe briefly described below.3Excepting the first column, which provides the entity-idfor tile record.135 Class brooch -necklace necklace Designer KingO1 "KingO1 ChanelO1 Style J___190~ A-rt-Deco : ~_~_~ Art-Noveux London ParisL_SponsorLiberty01Figure 2: A Sample from an Entity file\ [ ~ .
MaterialFigure 3: A Sample from a Link file(def-basic-type:domain jewellery-domain:head jewellery:mn-link 3D-PHYS-0BJECT)(def-taxonomy:type jewellery:subtypes (neck-jewellery wrist-jewellerypin-jewellery pendant buckleearring earring-pair finger-ringringset watch button dress-cliphat-pin))Figure 4: Defining Taxonomic Knowledge4.1 Taxonomic  Organ isat ionILEX requires that the entities of the domain are or-ganised under a domain taxonomy.
The user definesa basic type (e.g., jewellery), and then defines thesub-types of the basic-type, and perhaps further sub-classification.
Figure 4 shows the lisp forms defininga basic type in the jewellery domain, and the sub-classification of this type.
The basic type is alsomapped onto a type (or set of types) in the conceptontology used for sentence generation, a version ofPenman's Upper Model (Bateman, 1990).
This al-lows the sentence generator to reason about the ob-jects it expresses.Taxonomic organisation is important for severalreasons, including among others:1.
Expressing Entities: each type can be related tolexical i tems'to use,to-express that  type (e.g.,linking the type brooch to a the lexical item for"brooch".
If no lexical item is defined for a type,a lexical item associated with some super-typecan be used instead.
Other aspects of the ex-pression of entities may depend on the concep-tual type, for instance pronominalisation, deixis(e.g., mass or count entities), etc.2.
Supporting Inferences and Generalisations:ILEX allows the user to assert generalisationsabout types, e.g., that Arts and Crafts jewellerytends to be made using enamel (see section 5.4).The type hierarchy is used to check whether aparticular generalisation is appropriate for anygiven instance.The earlier version of ILEX, Ilex2.0, allowed thefull representational power of the Systemic formal-ism for representing domain taxonomies, includingcross-classification, and multiple inheritance (bothdisjunctive and conjunctive).
However, our exper-iences with non-linguists trying to define domainmodels showed us that the more scope for expres-sion, the more direction was needed.
We thus sim-plified the formalism, by requiring taxonomies to besimple, with no cross-classification r multiple inher-itance.
We felt that the minor loss of expressivitywas well balanced by the gain in simplicity for do-main developers.4.2 Type Lexi f icat ionTo express each database ntity, it is essential to beable to map from its defined type, to a noun to usein a referring expression, e.g., this brooch.Ilex comes with a basic lexicon already provided.covering the commonly occurring words.
Each entrydefines the svntactic and morphological informationrequired for sentence generation.
For these items,the domain developer needs to provide a simpl e map-ping from domain type to lexical item, for instance,the following lisp form specifies that the domain typelocation should be lexified by the lexical item whoseid is location=noun:(lexify location location-noun)For those lexical items not already defined, the do-main developer needs to provide in addition lexicalitem definitions for the nouns expressing the typesin their domain.
A typical entry has the form shownin figure 5.136(def-lexical-item:name professor-noun:spelling "professor":grammatical-features (common-noun count-noun))Figure 5: A Sample Lexical item Specification.
.
.
.
(defobject-structurejewellery- " .....:class :generic-type:subclass :generic-type:designer :entity-id:style :entity-id:material :generic-type:date :date:place :string:dimension :dimension)Figure 6: Specifying Field Semantics(def-predicateClass:expression (:verb be-verb))Figure 8: Simple Fact Expression4.3 Data Type of Slot FillersEach field in a database record contains a string ofcharacters.
It is not clear whether this string is anidentifier for another domain entity, a string (e.g.,someone's urname), a date, a number, a type inthe type hierarchy, etc.ILEX requires, for each entity file, a statement asto how the field fillers should be interpreted.
Seefigure 6 for an example.Some special filler types have been provided tofacilitate the import of structured ata types.
Thisincludes both :date and :dimension in the currentexample.
Special code has been written to convertthe fillers of these slots into ILEX objects.
Otherspecial filler types are being added as needed.4.4 Domain  Type  o f  Slot Fi l lersThe def-predicate form allows the domain developerto state what type the fillers of a particular fieldshould be.
This not only allows for type checking,but also allows the type of an entity to be inferredif not otherwise provided.
For instance, by assert-ing that fillers of the Place field should of type city,the system can infer that "London" is a city even ifLondon itself has no database record.
See figure 7.
(def-predicate Place:argl jewellery:arg2 city)Figure 7: Speci~'ing Predicate Fillers4.5 Summary.....
'.
:~With:just chisvmuch-semantics~specified,.
ILEX e-angenerate very poor texts, but texts which conveythe content of the database records.
In the nextsection, we will outline the extensions to the domainsemantics which are needed to improve the qualityof the text produced by ILEX.5 Extending Domain Semantics forImproved Text QualitySo far we have discussed only the simplest level ofdomain semantics, which allows a fairly direct ex-pression of domain information.
ILEX allows thedomain developer to provide additional domain se-mantics to improve the quality of the text.5.1 Expression of FactsUnless told otherwise, ILEX will express each fact ina simple regular form, such as The designer of thisbrooch is Jessie M. King, using a template form4:The <predicate> of <entity-expression>is <filler-expression>.However, a text consisting solely of clauses of thisform is unnatural, and depends on the predicate la-bel being appropriate to the task (labels like given-bywill produce nonsense sentences).To produce better text, ILEX can be told howto express facts.
The domain developer can providean optional slot to the &f-predicate form as shownin figure 8.
The expression specification first of alldefines which verb to use in the expression.
By de-fault, the ARG1 element is mapped onto the Sub-ject, and the ARG2 onto the Object.
Default val-ues are assumed for tense, modality, polarity, voice.finiteness, quantification, etc., unless otherwise spe-cified.
So, using the above expression specification,the Class fact of a jewel would be expressed by aclause like: This item is a brooch.To .produce less .standard expressions, we need tomodify some of the defaults.
A more complex ex-pression specification is shown in figure 9, whichwould result in the expression such as: For furtherinformation, see Liberty Style Guide No.
326:4ILEX3.0  borrowed this use of a default  express ion tem-p late  from the POWER system (Dale et al, 1998).
In previ-ous vers ions of ILEX,  all facts were expressed by full NLG asexp la ined below.137(def-predicate Bib-Note:argl jewellery:expression (:adjunctl "for further information":mood imperative:verb see-verb:voice active)Figure 9: More Complex Fact ExpressionThe expression form is used to construct a par-tial syntactic specification, which is then completedusing the sentence generation module of the WAGsentence generator (O'Donnell, 1996).With the level of domain semantics pecified sofar, ILEX is able to produce texts such as the two be-low, which provides an initial page describing data-base entity BUNDY01, and then a subsequent pagewhen more information was requested (this from thePersonnel domain (Nowson, 1999)):o Page  1: Alan Bundy is located in room F1,which is in South Bridge.
He lectures a coursecalled Advanced Automated Reasoning and is inthe Institute for Representation and Reasoning.He is the Head of Division and is a professor.
* Page  2: As already mentioned, Alan Bundy lec-tures Advanced Automated Reasoning.
AAR islectured to MSc and AI4.This expression specification form has been de-signed to limit the linguistic skills needed for domaindevelopers working with the system.
Given that thedomain developers may be museum staff, not com-putational linguists, this is necessary.
The notationhowever allows for a wide range of linguistic expres-sions if the full range of parameters are used.5.2 User  Adapt ionTo enable the system to adapt its content to thetype of user, the domain developers can associateinformation with each predicate indicating the sys-tem's view of the predicate's interest, importance,etc., to the user.
This information is added to thed@predicate form, as shown in figure 10.The user annotations allowed by ILEX include:1.
Interest: how interesting does the system judgethe information to be to the user;2.
Importance: how important is it to the systemthat the user reads the information;3.
Assimilation: to what degree does the systemjudge the user to already know the infornlation:.<def~predicate Designer.
o .
:importance ((expert lO)(default 6)(child 5)):interest ((expert lO)(default 6)(child 4)):assimilation ((expert O)(default O)(child 0)):assim-rate ((expert l)(default l)(child 0.5)))Figure 10: Specifying User Parameters4.
Assimilation Rate: How quickly does the sys-tem believe the user will absorb the informationwhen presented (is one presentation enough?
).This information influences what content will beexpressed to a particular user, and in what or-der (more relevant on earlier pages).
Informationalready assimilated will not be delivered, exceptwhen relevant for other purposes (e.g., when refer-ring to the entity).
If no annotations are provided,no user customisation will occur.The values in ILEX's user models have been setintuitively by the implementers.
While ideally thesevalues would be derived through user studies, ourpurpose was purely to test the adaptive mechanism,and demonstrate that it works.
We .leave the devel-opment of real user models for later work.ILEX has opted out of using adaptive user model-ling, whereby the user model attributes are adaptedas a result of observed user choices in the web inter-face.
We leave this for future research.5.3 Compar i sonsWhen describing an object, it seems sometimes use-ful to compare it to similar articles already seen.With small addition to the domain specification,ILEX can compare items (an extension by Maria Mi-losavljevic), as demonstrated in the following text:This item is also a brooch.
Like the previ-ous item, it was designed by King.
How-ever, it differs from the previous item inthat it is made of gold and enamel, whilethe previous brooch was made of silver andenamel.For ILEX to properly compare two entities, itneeds to Mmw how the various.attributes of the en-tity can be compared (nominal, ordinal, scalar, etc.
).Again, information can be added to the d@predicatefor each predicate to define its scale of comparabil-ity.
See Milosavljevic (1997) and (1999) for more de-tail.
Figure 11 shows the additions for the Designerpredicate.
Comparisons introduce several RST re-lations to the text structure, including rst-contrast,rst-similarity and rst-whereas.138(def-predicate Designer:variation (string i):scale nominal)Figure lh Specifying Predicate Comparability(def-defeasible-rule?
:qv ($jewel jewellery) .......:lhs (some ($X (style $jewel $X))(arts-and-crafts SX))):rhs (some ($X (made-of Sjewel SX))(enamel SX)))Figure 12: Specifying Generalisations5 .
4  G e n e r a l i s a t i o n sWe found it useful to allow facts about general typesof entities to be asserted, for instance, that Arts andCrafts jewellery tend to be made of enamel.
Thesegeneralisations can then be used to improve the qual-ity of text, producing object descriptions as in thefollowing:This brooch is in the Arts and Crafts style.Arts and Crafts jewels tend to be made ofenamel.
However, this one is not.These generalisations are defined using defeasibleimplication - similar to the usual implication, butworking in terms of few, many, or most rather thanall or none.
They are entered in a form derivedfrom first order predicate calculus, for instance, seefigure 12 which specifies that most Arts and Craftsjewellery uses enamel.ILEX find each instance which matches the gen-eral type (in this case, instances of type jewellerywhich have Arts and Crafts in the Style role).
Ifthe fact about the generic object has a correspond-ing fact on the instantial object, an exemplificationrelation is asserted between the facts.
Otherwise,a ?concession relation is asserted.
See Knott et al(1997) for more details on this procedure.6 SummaryWhile observing people trying to convert an earlierILEX system to a new domain, we noted the diffi-culty they had.
To avoid these problems, we under-took to re-implement the domain specification as-pects of ILEX to simplify the task.Towards this end, we have followed a number ofsteps.
Firstly, we reconstructed ILEX to be domain- Taxonomies- Lexification of Types- Filler Domain Type Information- Filler Data Type InformationOBLIGATORY- Predicate Expression- Comparison Information- Generalisations- User AnnotationsOPTIONALFigure 13: Obligatory and Optional Steps in DomainSpecificationindependent, with all domain information defined indeclarative resource files.
This means that domaindevelopers do not have to deal with code.Secondly, we built into ILEX the ability to importentity definitions directly from a relational database(although with some restrictions as to its form).A database by itself does not provide enough in-formation to produce text.
Domain semantics is re-quired.
We have provided a system of incrementalspecification of this semantics which allows a domaindeveloper to hook up adynamic hypertext interfaceto a relational database quickly, although producingpoor quality text.
Minimally, the system requiresa domain taxonomy, information on lexification oftypes, and specification of the data type of each re-cord field.Additional effort can then improve the quality oftext up to a quite reasonable l vel.
The additionalinformation can include: specification of predicateexpression, and specifications supporting comparis-ons, user adaption, and generalisations.Figure 13 summarises the obligatory and optionalsteps in domain specification in ILEX.Simplifying the domain specification task is a ne-cessity as text generation systems move outside ofresearch labs and into the real world, where thedomain developer may not be a computational lin-guist, but a museum curator, personnel officer orwine salesman.
~ have tried to take a step towardsmaking their task easier.Re ferencesGail Anderson and Tim Bradshaw.
1998.
ILEX:The intelligent labelling explorer: Experience ofBuilding a Demonstrator for the Workstation Do-main.
Internal Report, Artificial Intelligence Ap-plications tnstitute,University of Edinburgh.I.
Androutsopoulos, G.D. Ritchie, and P. Thanisch.1995.
Natural language interfaces to databases -an introduction.
Natural Language Engineering, 1(1):29-81.John Bateman.
1990.
Upper modeling: organiz-ing knowledge for natural language processing.In Proceedings of the Fifth International Work-139shop on Natural Language Generation, Pitts-burgh, June.Denis Carcagno and Lidija Iordanskaja.
1993.
Con-tent determination a d text structuring: two in-terrelated processes.
In Helmut Horocek and Mi-chael Zock, editors, New Concepts in Natural Lan-guage Generation, Communication i ArtificialIntelligence Series, pages 10 - 26.
Pinter: London.Robert Dale, Stephen J Green, Maria Milosavljevic,CEcile Paris, Cornelia Verspoor, and Sandra Wil-liams.
1998.
The realities of generating naturallanguage from databases.
In "Proceedings of the11th Australian Joint Conference on Artificial In-telligence, Brisbane, Australia, 13-17 July.Alistair Knott, Michael O'Donnell, Jon Oberlander,and Chris Mellish.
1997.
Defeasible rules in con-tent selection and text structuring.
In Proceedingsof the 6th European Workshop on Natural Lan-guage Generation, Gerhard-Mercator University,Duisburg, Germany, March 24 - 26.Chris Mellish, Mick O'Donnell, Jon Oberlander, andAlistair Knott.
1998.
An architecture for oppor-tunistic text generation.
In Proceedings of theNinth International Workshop on Natural Lan-guage Generation, Niagara-on-the-Lake, Ontario,Canada.Maria Milosavljevic.
1997.
Augmenting the user'sknowledge via comparison.
In Proceedings of the6th International Conference on User Modelling,pages 119-130, Sardinia, 2-5 June.Maria Milosavljevic.
1999.
Maximising the Co-herence of Descriptions via Comparison.
Ph.D.thesis, Macquarie University, Sydney, Australia.Scott Nowson.
1999.
Acquiring ILEX for a Per-sonnel Domain.
Honours Thesis, Artificial Intel-ligence, University of Edinburgh.Michael O'Donnell.
1996.
Input specification i thewag sentence generation system.
In Proceedings ofthe 8th International Workshop on Natural Lan-guage Generation, Herstmonceux Castle, UK, 13-15 June.140 - '
