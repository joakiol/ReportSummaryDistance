Proceedings of the 8th International Conference on Computational Semantics, pages 195?209,Tilburg, January 2009. c?2009 International Conference on Computational SemanticsDisambiguating quantifier scope in DTSLivio Robaldo & Jurij Di CarloDipartimento di Informatica, Universita?
di Torinorobaldo@di.unito.it, dicarlo.jurij@educ.di.unito.itAbstractThis paper proposes an extension of Dependency Tree Semantics (DTS),an underspecified logic originally proposed in [20], that uniformily im-plements constraints on Nested Quantification, Island Constraints andlogical Redundancy.
Unfortunately, this extension makes the complex-ity exponential in the number of NPs, in the worst cases.
Nevertheless,we conducted an experiment on the Turin University Treebank [6], aTreebank of italian sentences annotated in a syntactic dependency for-mat, whose results seem to indicate that these cases are very rare inreal sentences.1 IntroductionQuantifier scope ambiguities may engender several interpretations of an NLsentence.
For instance, (1.a) has two readings that, in standard GeneralizedQuantifier (GQ) approach, can be represented as in (1.b-c).
(1.b) iff aparticular sound was heard by every man., while (1.c) is true iff each manhas heard a (potentially different) sound.
(1) a.
Every man heard a mysterious sound.b.
?y(mystSound?
(y), ?x(man?
(x), heard?
(x, y)))c.
?x(man?(x),?y(mystSound?
(y), heard?
(x, y)))In order to deal with quantifier scope ambiguities, two main problems haveto be taken into account.
First, the number of available readings tends todegenerate into a combinatorial explosion when the number of quantifiersincreases.
Second, in many real cases the knowledge needed to disambiguateis not fully available during the processing of the sentence.
In such cases,all readings must be somehow stored, and, afterwards, when new worldknowledge becomes available, sequentially checked in order to remove theinconsistent ones.195In order to provide a flexible solution to semantic ambiguities, Under-specified formalisms have been recently proposed.
In underspecified seman-tics, semantic ambiguities are seen as instances of unspecified meaning thatcan adopt a more restricted sense depending on the preferences groundedin the syntactic structure, world-knowledge, topic/focus distinctions and soforth.
underspecified logics allow to encapsulate scope ambiguities in a sin-gle structure.
Surveys in underspecified semantics may be found in [8] and[11].The first underspecified logic that has been proposed is perhaps the algo-rithm of Hobbs and Shieber [13], which has subsequently evolved into QuasiLogical Form [1].
In this proposal, the underspecified representation is a par-tial formula ?
that may contain underspecified terms, called complex terms,in the form <q, v, r> where q is a GQ, v an individual variable and r, the re-striction of q, another partial formula.
In order to obtain the disambiguatedformulae, complex terms must be solved.
This is done by ?pulling out?
and?unstoring?
the complex terms one by one.
Depending on the order in whichthey are solved, different readings are obtained.
For instance, the underspec-ified representation of (1.a) is shown in (2.a).
By solving the complex term<?, x, man?
(x)>, we get the partially solved formula in (2.b), from which,by solving the other complex term <?, y, mystSound?
(x)>, we get reading(1.a).
Conversely, by solving the two complex terms in the opposite order,we get (1.c).
(2) a.
heard?
(< ?, x, man?
(x) >, < ?, y, mystSound?
(x) >)b.
?x(man?
(x), heard?
(x, < ?, y, mystSound?
(x) >))A more recent approach to underspecified semantics is grounded in dom-inance constraints between some kind of scope-bearers and some kind ofscope-arguments.
Underspecified Discourse Representation Theory [19], HoleSemantics [5], the approach of [25], Constraint Language for Lambda Struc-tures (CLLS) [12], and Minimal Recursion Semantics (MRS) [10], belong tothis approach.
In MRS, the underspecified formula of (1) is(3) ?h0, {h1: ?x(h11, h12), h2: ?y(h21, h22), h3: man?
(x), h4: mystSound?
(y),h5: heard?
(x, y)}, {h0=qh5, h11=qh3, h21=qh4}?This representation is a triple whose second element is a flat set of labelledsubformulae called EPs.
Each label (h1, h2, etc.)
is called an ?handle?.
TheEP associated with a quantifier contains a handle for its restriction and onefor its body.
The third element of the triple is a set of constraints in the196form hx=qhy, specifying that the EP handled by hymust occur in the scopeof hx.
Two disambiguations are then possible in (3): {h0= h1, h12= h2,h22= h5}, which leads to (1.b), and {h0= h2, h22= h1, h12= h5}, whichleads to (1.c).A new approach to underspecification of quantifier scope ambiguities hasbeen recently proposed in [20], and implemented into a new formalism calledDependency Tree Semantics (DTS).
In DTS, disambiguation is performedby explicitly showing the dependencies between involved sets, i.e.
by achiev-ing a sort of underspecified ?Skolemization?.
DTS is presented in detail insection 3.Before presenting DTS, however, we will discuss in section 2 three mainlinguistic phenomena that reduce the level of ambiguity of NL sentences,namely Nested Quantification, Island Constraints and logical Redundancy.Those constraints have to be somehow carried out in an underspecified logic,in order to avoid readings not available in NL.
We will briefly discuss thealternatives proposed in the aforementioned formalisms and in DTS.Section 4 contains the core of the research presented here.
It proposesto add in DTS two new constructs that implement the three mentionedconstraints in terms of allowed/disallowed dependencies, in a uniform andmodular way.
These constructs, called positive/negative arcs, make DTS ex-pressively complete, i.e.
able to underspecify any possible subset of availablereadings.
As argued by [11], although expressive completeness is a desider-able property for underspecified logics, unfortunately it is in trade-off withspatial/temporal complexity, which, in DTS, turns out to be exponentialin the number d of NPs.
The last section, however, presents a small ex-periment on the Turin University Treebank (TUT) [6], whose results seemto indicate that, in real cases, the three examined constraints strongly con-tribute to keep d, and hence the overall computational time, low.
We willthen conclude by claiming that the exponential asymptotic behaviour of thecomplexity function is a price worth paying for devising a disambiguationprocess based on allowed/disallowed dependencies.2 Constraints on underspecified formulaeAs pointed out in the introduction, not all possible scopings correspond toa possible reading in NL.
In this section, we investigate the three main lin-guistic phenomena involved in the unavailability of certain scope patterns,namely Nested Quantification, Island Constraints, and logical Redundancy.Nested Quantification: Several unreasonable readings arise from a con-197trast between semantic/syntactic nesting of quantifiers.
For instance, it isawkward to take the sentence in (4.a), where the NP a company occurs inthe syntactic restriction of the quantifier every, as describing the situationcorresponding to the scoping ?most?, in which each representative saw a po-tentially different set of most samples, and he belongs to a different companyfor each sample he saw.
(4) a.
[Everyxrepresentative of [aycompany]] saw [mostzsamples] [13].b.
see?
(<?, x, rep?of?
(x,<?, y, comp?
(y)>)>, <Most, z, sample?(z)>)c.
?h0, {h1: ?x(h11, h12), h2: ?y(h21, h22), h3: Mostz(h31, h32),h4:rep?of?
(x, y), h5: comp?
(y), h6: sample?
(z), h7: saw(x, z)},{h0=qh7, h11=qh4, h21=qh5, h31=qh6}?d.
?y(comp?(y),Mostz(samp?(z),?x(rep?(x)?of?
(x, y), see?
(x, z)))e.
?x(?y(comp?
(y), rep?(x)?of?
(x, y)),Mostz(samp?
(z), see?
(x, z)))f.
Mostz(samp?(z),?x(?y(comp?
(y), rep?(x)?of?
(x, y)), see?
(x, z)))g.
?y(comp?
(y), ?x(rep?(x)?of?
(x, y),Mostz(samp?
(z), see?
(x, z))))h.
Mostz(samp?
(z), ?y(comp?
(y), ?x(rep?(x)?of?
(x, y), see?
(x, z)))In the Hobbs and Shieber algorithm, these readings are forbidden by se-lecting, at each step, a complex term not included in the restriction of anyother complex term.
With this meta-rule, the algorithm, starting from theunderspecified formula in (4.b), computes the five readings in (4.d-h).
Thesame readings are triggered by the dominance constraints in the MRS rep-resentation (4.c).Several authors, e.g.
[18], claim that also (4.d) has to be forbidden, in thatif q1occurs in the restriction of q2, no other quantifier can ?intercalate?
be-tween them in the scope order.
In underspecified semantic, this view wasaccepted by [25] and [15] among others.
The former develops a logical the-ory that identifies intercalating readings by deriving inconsistencies.
Thelatter extends [14], which proposes a syntax-semantics interface from LTAGto MRS-like formulae, with a construct based on quantifier sets that pre-vents intercalating readings.Island Constraints: certain syntactic structures are scope-?islands?, i.e.the scope-bearers occurring therein cannot outscope elements outside theisland.
Island constraints have been introduced by [21].
There are basically198two kinds of islands: finite clauses and coordinated structures.
An exampleof the former is shown in (5.a), where ?xcannot outscope ?yin that a stu-dent is outside the finite clause where every occurs.
In contrast, the scope ofNPs can freely rise over non-finite clauses, as shown in (5.b), where ?x?yisavailable.
An example of coordinated structures acting as islands is shownin (5.c).
(5.c) yields two scopings only, ?x?y?zand ?y?z?x, corresponding,respectively, to a reading where every student reads a own book and a ownpaper, and a reading where there is a single a book and a single paper thathave been read by every student.
(5) a. Aystudent said you met everyxprofessor.
[16]b. Aystudent wants you to meet everyxprofessor.
[16]c. Everyxstudent reads aybook and azpaper.
[26]In underspecified semantic, a standard way to deal with Island constraints ofthe first kind introduces special ?blocking?
place holders, one for each tensedclause.
The scope of the quantifiers in the clause is required to be alwaysincluded in the scope of the place holder.
In MRS, the place holder may be ahandle referring to the ?top?
of the clause.
[14] implements Island constraintsin an MRS-like framework.
Similar alternatives have been proposed in [12]and [16].
The former implements a mechanism very close to [14], while thelatter devises a feature-based framework where a feature MAXS blocks thescope of the quantifiers occurring in finite clauses1.Island constraints carried by coordinate structures have received less atten-tion in Underspecification, the most recent exception being perhaps [26].
In[26], Hole Semantics is extended to properly handle the meaning of sentencesas (5.c).Logical Redundancy: redundancy may arise when existential and uni-versal quantifiers occur in the sentence.
Existential quantifiers range over asingleton of individuals, and so they cannot induce variation of their narrow-scope sets.
Analogously, universal quantifiers range over a whole domainof individuals, which do not vary on the entities in their wide-scope sets.Therefore, in (6.a-b) the scopings ?x?yand ?x?yare respectively equivalentto ?y?xand ?y?x.
Therefore, the latter may be taken as redundant.
Nev-ertheless, there is an exception to the rule about universals.
It concerns a1In [16], also prepositions as of in (4) are associated with a feature MAXS.
This allows todeal with islands and nested quantifiers in terms of the same construct.
Redundancy andCoordination are not considered, but the extension of the logic in that direction seemsobvious.199universal having a modifier (which includes another quantifier) in its restric-tion.
For example, in the case of (6.c), there are two possibilities, accordingto the intention of referring to ?all friends of all participants?
(?x?y) or to?all friends of any participant?
(?y?x).
(6) a. Axboy read aybook.b.
Everyxman read everyxbook.c.
[Everyxfriend of [everyyparticipant]] arrived.According to [4], analogous considerations hold for any NP that denotes aprincipal filter (see [2]): proper names, definites, but also some bare indefi-nites.
We agree with [4]; proper names, as well as singular definites, clearlydenote constant sets2, while definites seem to behave exactly like universals.For example, it is easy to see that (7.b-c) yield the same scopings of (6.b-c)(7) a. Thexmen read everyybook.b.
[Thexfriends of [everyyparticipant]] arrived.In underspecified semantics, logical redundancy has recently been investi-gated by [9] and [17].
The former devises an algorithm that allows to preventthe generation of redundant readings, while the method presented in the lat-ter generates all readings, but allows to group them into equivalence classes.3 Dependency Tree SemanticsIn [20], a new underspecified semantic formalism called Dependency TreeSemantics (DTS) has been proposed.
Well-formed structures in DTS arebased on a graph G that represents the predicate-argument relations.
Thenodes of G are either predicates or individual variables called discourse ref-erents.
Predicates connect discourse referents via arcs labelled with theargument-position.
Each discourse referent is also associated, via a functionquant, with a GQ, and with a restriction, via a function restr from discoursereferents to subgraphs of G.In order to make the dependencies among sets of entities explicit, anotherkind of arcs is introduced, termed SemDep arcs, and resemble Skolem de-pendencies.
A discourse referent is taken to depend on all discourse referentsit is connected to via a SemDep arc.
Moreover, G includes a special element2Note that this seems to be true also for personal pronoun (you, she, etc.
), singulardemonstratives (this, that, etc.
), and singular possessives (his, her, etc.
).200called Ctx.
Ctx refers to the context, i.e.
the domain wrt which the finalstructure will be evaluated.
All discourse referents are linked to Ctx via aSemDep arc; however, the ones linked to Ctx only are assumed to denotefixed sets of entities, i.e.
to correspond to Skolem constants.
The severalreadings of a sentence differ in the SemDep arcs only.
For instance, bothreadings of (1.a) share the structures shown in fig.1.a3, but they have twodifferent sets of SemDep arcs: (1.b) is conveyed by those in fig.1.b; (1.c) bythose in fig.1.c.hear'man'x ymSound'121restr(x) restr(y)quant(x)= 8quant(y)= 91x1ymSound'1man'b)SemDepx yCtxa))SemDepx yCtxFigure 1: (a) SDG for sentence (1.a).
(b-c) The two disambiguations (1.a)In order to achieve underspecified semantics, SemDep arcs have to be some-how added incrementally.
In [20], this is done by defining another kind ofarcs, termed SkDep arcs.
This paper makes use of other two kinds of arc,termed positive and negative arcs, and propose them as an alternative ofSkDep arcs.Before proceeding, it is worth stressing the main linguistic advantage ofDTS, although this article is not devoted to it.
DTS licenses particularreadings where two or more sets of entities are introduced at the same levelof scope.
I refer to such interpretations with the term ?Independent Set?
(IS) readings.
Three basic kinds of IS readings need to be distinguished:distributive, collective and cumulative IS readings (cf.
[22]), respectivelyshown in (8.a-c)(8) a.
Two examiners marked six scripts.b.
Three boys lift a piano.3DTS structures are usually displayed in a graphical notation where the subgraphscorresponding to restr?s values are graphically shown separately.
SemDep arcs are shownas dotted arcs; in order to increase readability, transitive SemDep arcs are omitted.
Nev-ertheless, the reader must always keep in mind that they do occur, i.e.
that SemDepdescribes a transitive relation.
Therefore, in fig.1.b, there is an arc y-->Ctx, even if it isnot shown.201c.
Three monkeys ate all our bananas.If we allow both NPs in (8.a) to receive wide scope and we interpret themain verb distributively, we get a reading where there is a set of two exam-iners and a set of six scripts and each of the two examiners marked eachof the six scripts.
(8.b) is an archetypal example of the so-called collectivereadings.
The sentence may receive an interpretation where the three boyslift a single piano with a joint effort.
Finally, (8.c) has a cumulative in-terpretation.
The sentence says that the union/cumulation of the bananassingularly eaten by each of the three monkeys includes the set of all ourbananas.
Currently, DTS deals with distributive IS readings only, despitetheir controversial existence in NL (see [23]), in that they require less formaleffort.
The extension of DTS coverage to collective/cumulative IS readings,which is taken as the object of future work, would require the introductionof more complex devices (see [3]).Since DTS?s coverage includes IS readings, the logic accepts more readingsthan other standard approaches to NL semantics.
Every partial order be-tween quantifier corresponds to an available reading.
Examples are shownbelow in fig.2.4 Positive and negative arcs[20] defines some constraints to prevent undesiderable readings arising fromNested Quantification and logical Redundancy (in contrast, Island Con-straints are not considered).
These constraints are defined in terms of ?meta-rules?, like in Hobbs and Shieber?s algorithm:(9) a.
If either d1or d2(transitively) occurs in the restriction of a dis-course referent d, and the other one does not, then the arc d1-->d2can be inserted only if the graph contains an arc d-->d2.b.
If quant(d1)=?
or quant(d2)=?, the arc d1-->d2cannot be in-serted.
The only exception is when quant(d1)=?
and d2(transi-tively) occur in the restriction of d1.By applying (9) to the initial DTS representation of (4.a), we get the fivereadings in fig.2, corresponding to (4.d-h).This section illustrates an alternative way of managing incremental inser-tion of semantic dependencies, where allowed/disallowed dependencies areexplicitly specified in the representation.
This is done by inserting additional202xyCtxzCtxa))b) d) e)xyzCtxxyzCtxxyzxyCtxzFigure 2: SemDep configurations corresponding to (4.d-h).arcs termed positive/negative arcs.
With these constructs, we can easily pre-vent redundant readings by adding a negative arc d1-->d2for each pair ofdiscourse referents (d1, d2) such that quant(d1)=?
or quant(d2)=?
and theexception mentioned in (9.b) does not apply; all other arcs are added aspositive arcs.Nevertheless, how do we achieve (9.a)?
Such constraints disallow a set Nof dependencies unless the representation includes a set E of other depen-dencies.
In order to mirror these concepts, we refine the framework in twoways:(10) a.
We group positive/negative arcs into (positive/negative) sets, andwe impose that all arcs in a set have to be allowed/disallowedtogether.b.
We allow each negative set N to be associated with a further setof arcs E. Those are the arcs that constitute the exception to thedisallowed dependency.
In these cases, we will write {N |E}.In terms of positive and negative sets, the new DTS representation of (4.a)turns out to be the one in fig.3.
Positive and negative sets are separatelyshown as members of two families P and N in order to avoid verbosegraphical representations.
The positive set {A-->Ctx} compactly refers to{x-->Ctx, y-->Ctx, z-->Ctx}.
Inserting it amounts to connecting all dis-course referent to Ctx4.
{y-->x} and {z-->x} are allowed and so asserted in P .
N contains fournegative sets.
{x-->y} and {z-->y} have been disallowed because no arc canenter an existential quantifier, and {x-->z} because no universal quantifiercan lead to a discourse referent outside its restriction.
{y-->z} is disallowedunless the structure contains a link from x to z.
This is handled by addingthe negative set with exception {y-->z|x-->z} in N5.
The reader can verify4We remind that only graphs where all discourse referents are linked to Ctx can bemodel-theoretically interpreted.5Negative sets cannot be included in other negative sets, e.g.
we cannot add{z-->y|x-->y} in N : {z-->y} already occurs therein.
However, negative sets can be203that all possible combinations of the allowed arcs lead to the five readingsin fig.2.1rep-of'2y xrestr(x) restr(z)quant(z)=Mostquant(y)=911omp'zrestr(y)x1xquant(x)=81 21sample'zsaw'2y1P = f,gCtxAf f,gxyf gxzgN = f f gzxy zomp' rep-of'sample'gf,gyxf,gyzf,gzxFigure 3: SemDep configurations corresponding to (4.d-h).In terms of positive/negative arcs, it is rather easy to extend the coverageof DTS to Island constraints.
No discourse referent outside the island maydepend on a discourse referent inside it.
A discourse referent inside theisland is, instead, free to depend on any other discourse referent.
Hence, ifd1occurs in an island and d2does not, we assert {d1-->d2} as positive setand {d2-->d1} as negative set.
Coordinate NPs are further constrained; ifD ?
{d11, .
.
.
d1n} is the set of discourse referents in a coordination, andd1?D depends on a d2/?D, so must any other d?D.
This is handled byinserting a single positive set {d11-->d2, .
.
., d1n-->d2}.
In example (5.c),then, P would be P ={{y-->x, z-->x}, {A-->Ctx}}.
It is easy to see that Pgenerates the two desired readings only.5 Expressivity, complexity, and real casesIt is not really necessary to add every positive/negative set, i.e.
to specifyevery possible pattern of allowed/disallowed dependencies in the represen-tation.
For instance, disallowing a dependency is clearly equivalent to notallowing it.
In fig.3, it is easy to see that the negative sets {x-->y}, {z-->y},and {x-->z} are actually useless because those arcs cannot be generated bythe sets in P .
Therefore, they can be removed from N .
Although we definedalgorithms implementing such heuristics, lack of space forbids us to providefurther details.exceptions of other negative sets: the occurrence of {x-->z} in N does not prevent theinsertion of {y-->z|x-->z}.204From the point of view of expressivity, positive/negative arcs make DTSexpressively complete, i.e.
able to underspecify any subset of dependencies.This should be a property of every underspecified logic, as argued by [11],but, unfortunately, it turns out to be in trade-off with computational com-plexity.
In DTS, in order to represent a subset of readings that have nothingin common, the only solution is listing6all corresponding positive sets.
Forinstance, the readings of (5.c) have been ?listed?
in P ={{y-->x, z-->x},{A-->Ctx}}.
Since the number of partial orders is exponential in the numberof discourse referents (cf.
[7]), in the worst cases P has exponential cardi-nality.However, we believe that such cases are rare in reality.
To provide evi-dence for this claim, we analyzed the data in TUT.
For each sentence weestimated the number of positive/negative arcs needed to underspecify itsreadings.
(11) is one of the more complex sentences we found in TUT.
(11) Laxsocieta?
opera in numerosiyaltri settori commerciali e indus-triali, annoverando tra lezsue proprieta?
unakcatena di 20wsu-permercati, (alcuniv) centri turistici e unapminiera.
(ALB-247)Thexsociety operates in severalyother commercial and industrialsectors, including among itszproperties akchain of 20wsupermar-kets, (somev) tourism centers and apmine.
(11) contains seven discourse referents (x, y, z, k, w, v, p), so it initiallyyields 7*6=42 non-cycling positive arcs, and more than 6 billion partialorders between discourse referents.
However:- x is a singular definite with no restriction and z a plural possessive:both of them must enter Ctx only, and no discourse referent can dependon x.- k, v, p are existential quantifiers in a coordination: no discourse ref-erent can depend on them, and any triple of positive sets {k-->d},{v-->d}, and {p-->d} is replaced by a the positive set {k-->d, v-->d,p-->d}7.- w belongs to the restriction of k: whenever w depends on a discoursereferent d6=k (or viceversa) so must k.By applying these constraints, we obtain the following sets:6Actually, we must also forbid those positive sets to combine with each other.
Thismay be simply achieved by marking in some way every positive set we do not want tocombine.7Note that v is hidden, since tourism centers is a bare plural.205P = f,gCtxAfN = f y wf,wk g,wv wp,k g,f,w,wv wpw yk g,f,y,yv ypw zk gf,z,zv zpgf,yk g,yv yp,f gzy,f,zk g,zv zpgThe only acceptable reading is the one having all discourse referents linkedto Ctx only.
However, in order to identify it, we would need a semanticknowledge base from which we can infer, for example, that several sectorscannot depend on his properties, and so the arc y-->z has to be removedfrom P .1715 sentences included in TUT have been analyzed as example (11)8.
Theresults are shown in Table 1.
Sentences have been divided into four classes,depending on the number D of discourse referents they contain.
For eachclass, the table shows the average of the number of positive/negative arcsgenerated by applying the three constraints discussed above.|D| 0 < |D| ?
2 2 < |D| ?
5 5 < |D| ?
10 10 < |D| ?
20|Sentences| 462 643 516 94|Arcs| 1.10 1.85 5.16 12.91Table 1: TUT - Number of positive/negative arcs per discourse referentsThe number of arcs indicated in Table 1 are very low.
The reason for thisis the frequent occurrence in the sentences of proper names and definiteswith no restriction.
According to the discussion above, such NPs must belinked to Ctx only, but this is already handled by the positive arc A-->Ctx.In other words, proper names and definites with no restriction introducenew discourse referents but do not introduce new arcs, thus decreasing theaverage values.More reliable results are reported in Table 2.
The table shows the numberof arcs per discourse referents without considering such NPs.
The readermay see that in the worst cases the number of arcs can be still consideredlow.8We excluded sentences including verbal ellipsis in that, according to [12], they canengender complex quantifier-scope ambiguities not currently handled in DTS.
Anaphorahave been ignored, in that those requiring a referent resolution enter Ctx only, while donkeysentences, as shown by [24], simply require copies of the referent, with equal dependencies.206|D| 0 < |D| ?
2 2 < |D| ?
5 5 < |D| ?
10 10 < |D| ?
20|Sentences| 985 574 153 3|Arcs| 1.38 3.39 10.62 36Table 2: TUT - Number of positive/negative arcs per discourse referents,without considering proper names and definitives with no restriction.6 ConclusionsIn this paper, we presented an extension of DTS where allowed/disalloweddependencies are explicitly specified by inserting new arcs called positive/negativearcs.
We believe that positive/negative arcs provide a scalable and modu-lar solution for the management of constraints coming from heterogeneoussources.
For instance, we showed that positive/negative arcs needed to man-age Nested Quantification, Island Constraints, and logical Redundancy maybe independently defined.
Unfortunately, positive/negative arcs lead to acomputational complexity which is exponential in the worst cases.
Never-theless, we performed a rough experiment on the Turin University Treebank,whose results indicate that those worst cases are very rare in real sentences.It seems then that the computational complexity is not really a problem.
Ina real system, in case the number of possible readings is too high, the sys-tem may decide to inspect the context in order to detect allowed/disalloweddependencies to be removed or added in the representation, thus reducingthe number of readings.References[1] Alshawi, H. The Core Language Engine.
Mit Press, Cambridge, UK,1992.
[2] Barwise, J.
& Cooper, R. Generalized Quantifiers and Natural Language.Linguistics and Philosophy, 4(2), 159?219, 1981.
[3] Beck, S. & Sauerland, U. Cumulation is Needed: A Reply to Winter(2000).
Natural Language Semantics, 8(4), 349?371, 2000.
[4] Beghelli F., Ben-Shalom D., Szabolski, A.
Variation, Distributivity, andthe Illusion of Branching In A. Szabolcsi (Eds), Ways of Scope Taking,Kluwer:Dordrecht, 29-69, 2001.207[5] Bos, J. Predicate Logic Unplugged.
Proceedings of the 10th AmsterdamColloquium.
Amsterdam, The Netherlands, 133?142, 1996.
[6] Bosco, C. A grammatical relation system for treebank annotation.
Ph.D.thesis, Department of Computer Science, University of Turin, 2004.
[7] Brinkmann, G. and McKay, B.D.
Posets on up to 16 Points.
Order,19(2), 147?179, 2002.
[8] Bunt, H. Semantic Underspecification: Which Technique For What Pur-pose?
.
In R. Musken and H. Bunt (Eds.
), Computing Meaning.
Kluwer,vol.
3, 2003.
[9] Chaves, R.P.
Non-Redundant Scope Disambiguation in UnderspecifiedSemantics.
Proc.
of the 8th ESSLLI Student Session, 47-58, Vienna,2003.
[10] Copestake, A, Flickinger, D. and Sag, I.A.
Minimal Recursion Seman-tics.
An introduction.
Research on Language and Computation, 3(2),2005.
[11] Ebert, C. Formal Investigations of Underspecified Representations.Ph.D thesis, Department of Computer Science, King?s College London,2005.
[12] Egg, M. and Koller, A. and Niehren, J.
The Constraint Language forLambda Structures.
Journal of Logic, Language and Information, 10(4),2001.
[13] Hobbs, J. R. and Shieber, S. An Algorithm for Generating QuantifierScoping.
Computational Linguistics: 13:47?63, 1987.
[14] Joshi, A. K. and Kallmeyer, L. Factoring Predicate Argument and ScopeSemantics: Underspecified Semantics with LTAG.
Research on Languageand Computation, 1:3?58, 2003.
[15] Joshi, A. K. and Kallmeyer, L. and Romero, M. Flexible Compositionin LTAG: Quantifier Scope and Inverse Linking.
In R. Musken and H.Bunt (Eds.
), Computing Meaning.
Kluwer, vol.
3, 2003.
[16] Kallmeyer, L. & Romero, M. Scope and Situation Binding in LTAGusing Semantic Unification.
Research on Language and Computation,6(1), 2008.208[17] Koller A., Thater S. Towards a redundancy elimination algorithm forunderspecified descriptions.
Proc.
of the 5th Int.
Workshop on Inferencein Computational Semantics (ICoS-5) Buxton, England, 2006.
[18] Park, J. Quantifier Scope and Constituency.
Proceedings of the 33rdAnnual Meeting of the ACL.
pp.205-212, 1995.
[19] Reyle, U.
Dealing with ambiguities by Underspecification: Construction,Representation and Deduction.
Journal of Semantics, 13, 123?179, 1993.
[20] Robaldo, L. Dependency Tree Semantics.
Ph.D thesis, Department ofComputer Science, Turin University, Italy, 2007.
[21] Ross, J. R. Constraints on Variables in Syntax.
Ph.D thesis, Mas-sachusetts Institute of Technology, 1967.
[22] Scha, R. Distributive, Collective and Cumulative Quantification.
In J.Groenendijk, M. Stokhof (Eds.
), Formal Methods in the Study of Lan-guage, Part 2, pages 483?512.
Mathematisch Centrum, Amsterdam, 1981.
[23] Schein, B. Plurals and Events.
MIT Press, Cambridge, MA, USA, 1993.
[24] Steedman, M. The Grammar of Scope, forthcom-ing.
See Surface-Compositional Scope-Alternation With-out Existential Quantifiers.
Draft 5.2, Sept 2007.ftp://ftp.cogsci.ed.ac.uk/pub/steedman/quantifiers/journal6.pdf.
[25] Willis, A.
An Efficient Treatment of Quantification in UnderspecifiedSemantic Representations.
Ph.D thesis, University of York, 2000.
[26] Willis, A. NP Coordination in Underspecified Scope Representations.Proc.
of the 7th Workshop on Computational Semantics, Tilburg, 2007.209
