INLG 2012 Proceedings of the 7th International Natural Language Generation Conference, pages 105?109,Utica, May 2012. c?2012 Association for Computational LinguisticsSign Language Generation with Expert Systems and CCGAlessandro MazzeiDipartimento di InformaticaUniversita` degli Studi di TorinoCorso Svizzera 185, 10185 Torino Italymazzei@di.unito.itAbstractThis paper concerns the architecture of a gen-erator for Italian Sign Language.
In particu-lar we describe a microplanner based on anexpert-system and a combinatory categorialgrammar used in realization.1 IntroductionIn this paper we present the main features of thegenerator used into a translation architecture fromItalian to Italian Sign Language (Lingua Italianadei Segni, henceforth LIS), that is the sign lan-guage used by the Italian deaf (signing) community(Volterra, 2004).
Our generator consists of two mod-ules: (i) SentenceDesigner, that is a rule-based mi-croplanner; (ii) OpenCCG, that is a chart realizer(White, 2006).
There are two main issues in thiswork.
The first issue concerns the use of an expertsystem for microplanning.
Most of our knowledgeabout LIS linguistics derives from discussions withlinguists: expert systems allow for sharp modular-ization of this human knowledge.
Moreover, expert-system allow us for easily updateable knowledge or-ganization in cases of conflict or contradiction.
Thesecond issue in our work concerns the design ofa combinatory categorial grammar (CCG) used bythe realizer.
This CCG accounts for a number ofspecific LIS phenomena as spatial verb-argumentsagreement and NP coordination.11In this paper we present a grammatical account for spatialverb-arguments agreement.
A different approach, that we areexploring too, is to consider space allocation as separate processthat takes as input the syntactic structure, similar to prosody invocal languages.!
!!""#$%&'#()$"#)*+)$,-&$(-.-$,#$"#%"+)/$0)+$12&)*#$,#$'-(3-*2'%*2$.%3-*#)*#$2&&2$(-,#2!
""# %&'#() "#)*+) ,-& (-.- ,# "#%"+) / 0)+ 12&)*# ,#(-,#22&&2.%3-*#)*#'-(3-*2'%*242&)*# ,# (-,#22&&2.%3-*#)*#'-(3-*2'%*2!
"#$ %!&!
"#$%!& %!&Figure 1: The (simplified) syntactic structure of the sen-tence ?Valori di temperatura superiori alla media?
(Tem-perature values exceed the average) produced by the TUPparser.In order to reduce the difficulties of our project weconcentrated on a specific application domain, i.e.weather forecasts: a group of linguists produced asmall parallel corpus (300 sentences) of Italian-LISsentences extracted from TV news and concerningweather forecasts.
Building vocal-SL parallel cor-pora is a hard task: there are theoretical difficultiesconcerning the extra-video annotation.
In particu-lar, while there are standards for the representationof the phonological information of the signs, thereare no standard ways to represent their morpho-syntactic inflections.
The corpus has been used pri-marily to produce an electronic dictionary for thevirtual interpreter consisting of about 1500 signs,that provides a lexicon for the realizer too.
In con-trast, most of the knowledge about LIS syntax comesfrom discussions with some linguists.2 Parsing and InterpretationOur interlingua translation system is a chain com-posed of four distinct modules, that are: (1) a de-pendency parser for Italian; (2) an ontology basedsemantic interpreter; (3) a generator; (4) a virtualactor that performs the synthesis of the final LIS sen-tence.
In this Section we give some details about the105parser and the semantic interpreter, in Sections 3 and4 we describe the generator.In the first step, the syntactic structure of thesource language is produced by the TUP, a rule-based parser (Lesmo, 2007).
The TUP is based ona morphological dictionary of Italian (about 25, 000lemmata) and a rule-based grammar, and it producesa dependency tree, that makes clear the structuralsyntactic relationships occurring between the wordsof the sentence.
Each word in the source sentence isassociated with a node of the tree, and the nodes arelinked via labeled arcs that specify the syntactic roleof the dependents with respect to their head (the par-ent node).
In Figure 1 we show the syntactic analy-sis for the sentence ?Valori di temperatura superiorialla media?
(rough translation: Temperature valuesexceed the average).
The edge label ?ARG?
indi-cates an ARGument relation, i.e.
an obligatory rela-tion between the head and its argument.
The edgelabel ?RMOD?
indicates a Restricting MODifier re-lation, i.e.
a non obligatory relation from the headand its dependent (Bosco and Lombardo, 2004).!
!!!"##$%&'()*+,-%.+/!"#!!,.0#"1%2.+(1&$"-%.+/!"$!"3&1"4&/%"#!!0"-5(3"$*&/!"&!41&"-&1(-5"+/%"$!!0&"2*1&'(3"$*&/!
"'()*+,-./,0 ()*+,-./,"()*+,*1 (-11,234,5-6 (234)7*.Figure 2: The fragment of the semantic network resultingfrom the interpretation of the sentence ?Valori di temper-atura superiori alla media?.The second step of the translation is the seman-tic interpretation: the syntax-semantics interface isbased on ontologies (Lesmo et al, 2011).
Theknowledge in the ontology, which has been designedfor this specific application, concerns the applicationdomain, i.e.
weather forecasts, as well as more gen-eral common knowledge about the world.
Note thatthe ontology used by the semantic interpreter is notthe same ontology used by the generator (microplan-ner and realizer): indeed, whilst the semantic inter-preter ontology describes the linguistic knowledgeof the Italian language, the generator describes thelinguistic knowledge of the LIS.
Starting from thelexical semantics of the words and on the basis of thedependency structure, a recursive function searchesin the ontology providing a number of ?connectionpaths?
that represent the meaning.
In fact, the finalsentence meaning consists of a complex fragment ofthe ontology, i.e.
a single connected semantic net-work (Lesmo et al, 2011).
In Figure 2 we show afragment of the semantic network resulting from theinterpretation of the sentence ?Valori di temperaturasuperiori alla media?.
The nodes of the network con-tain instances (prefix name ?
), concepts (prefix name??)
relations (prefix name &) from the ontology.
InFigure 2 the nodes AVERAGE, GRATER-THAN are in-stances, the other nodes are concepts.
Informallyspeaking, we can say that the semantic interpreterorganizes the information of the semantic networkas a number of ?information chunks?
that are weaklyconnected to the other parts of the network.
In thenetwork of Figure 2 we can distinguish two chunks.The paraphrase of these chuncks meanings is: thereis a (temperature) value involved in a comparison(chunk 1) with a mathematical value that is the aver-age (chunk 2).
In the next section we describe howthe microplanner manages this organization of theinformation.3 The SentenceDesigner microplannerIn a previous version of our system we assumedthat the semantic network encoded a single chunk ofmeaning expressing the semantics of the event onlyin terms of predicate-arguments.
The working hy-pothesis was to assume a one-to-one sentence align-ment between source and target sentences.
This sim-plification assumption allowed for a trivial genera-tion architecture that did not have a microplanningphase at all, and just delegated a simple form of lex-icalization to the realizer.
However, newer versionof the semantic interpreter produced more complexsemantic networks.
Therefore, in our project we re-move the previous assumption and in this Section wedescribe SentenceDesigner, a rule-based microplan-ner.
SentenceDesigner basically performs the fol-lowing three-steps algorithm:1.
Segmentationa.
Split the semantic networkinto atomic messages2.
LexicalizationFor each message:a.
Introduce prelexical nodesb.
Introduce syntactic relationsbetween prelexical nodes3.
Simplification106For each message:a.
Extend syntactic relationsamong messagesb.
Remove non-necessaryprelexical nodesc.
Remove repetitionsamong messagesd.
Remove semantic relationsand reorder messagesIn the first step SentenceDesigner split the seman-tic networks into a number of subgraphs: the ideais to recognize which parts of the network con-tain an atomic message, i.e.
a complete informationchunk, that can potentially be generated as a sin-gular sentence.
SentenceDesigner uses a very sim-ple heuristic for this step: a message is a subtreeof the network, i.e.
a root-node together with all ofits descendants in the network.
We call root-node anode that does not have any parent: in Figure 2 thenodes COMPARISON-RELATION, APPLIED-FUNCTIONare root-nodes.
Note that some nodes belong to sev-eral distinct messages: for example the MATH-VALUEbelongs to the messages rooted by COMPARISON-RELATION and APPLIED-FUNCTION respectively.!
!!"#$%&'#(%&'#)*+,-./01+2)/34.50+2(!6((!7#89:;<=)7;9;#(((((!:98#(>>*+,-./01+2)/34.50+26(!9%?)@(AB@66((!7#89:;<=)%#'9;<C:(!:98#(D*+,-./)./E@6(!9%?)@(AB@6(!9%?)F(ABF66((!7#89:;<=)%#'9;<C:(!:98#(D*+,-./)./EF6(!9%?)@(AB@6(!9%?)F(ABG66((!7#89:;<=)%#'9;<C:(!:98#(D*+,-./)+-6((((((!9%?)@(AB@6(!9%?)F(ABH66(((((IJ((!977#%;(!7K:;9=;<=)%#'9;<C:(!:98#(1L2)1MNO6(!9%?)@(ABH6(!9%?)F(ABF666((((!977#%;(!7K:;9=;<=)%#'9;<C:(!:98#(1L2)+NO6(((!9%?)@(ABH6(!9%?)F(ABG6666!"#$%&'#(%&'#).--403P)QM2*50+2(!6((!7#89:;<=)7;9;#(((((!:98#(>>.--403P)QM2*50+26(!9%?)@(AB@66((!7#89:;<=)%#'9;<C:(!:98#(DQM2*5+/6(!9%?)@(AB@6(!9%?)F(ABF66((!7#89:;<=)%#'9;<C:(!:98#(D.--403P)QM2*50+2)R.4M36(!9%?)@(AB@6(((!9%?)F(ABG66((((((IJ((!977#%;(!7K:;9=;<=)%#'9;<C:(!:98#(1L2)/,+P6((!9%?)@(ABG6(!9%?
)F(ABF6666Figure 3: Two rules of the knowledge-base used by theexpert system for lexicalization.In the second step, that corresponds to ?lexical-ization?
(Reiter and Dale, 2000), SentenceDesignerperforms two distinct procedures for each message.The procedure 2-a.
introduces new prelexical nodesin the message that will be treated as lexical itemsin the realization phase.
Also in this case we havea very simple heuristic that associates one-to-oneprelexical nodes to concepts and instances.
Theprelexical nodes are organized into a lexical ontol-ogy that is shared with the realizer: in this waythe microplanner informs the realizer of the selec-tional restrictions that the semantics imposes on thesyntactic behaviour of lexical nodes (e.g.
colloca-tions).
For example, the prelexical node value be-longing to the class evaluable-entity is in-troduced in place to the concept MATH-VALUE.
Notethat currently we are not yet able to deal with re-ferring expressions generation for instances, i.e.
weuniformly treat concepts and instances: in future weplan to integrate into the system a specific modulefor this task.
The procedure 2-b.
concerns the in-troduction of syntactic relations between prelexicalnodes.
This is a very complex and critical task: onthe one hand we need to encode the linguistic knowl-edge produced by the corpus analysis (see below)and by many discussions with linguists; on the otherhand we need to account for the behaviour of theserelations in the CCG used by the realizer.
In orderto manage this complexity we decided to use an ex-pert system (Stefik et al, 1982).2 Indeed, expert sys-tems allow for a sharp modularization of the knowl-edge and allow for a clear resolution of conflicts:we needed several revisions of our formalization andexpert systems speed-up this process.
In Figure 3 weshow two rules that are ?fired?
by SentenceDesignerduring the microplanning of the semantic network inFigure 2: the first rule encodes the comparison se-mantic relation into one subject (SYN-SUBJ) and oneobject (SYN-OBJ) syntactic relations; the second ruleencodes the semantic relation concerning a math-ematical value as a modifier (SYN-RMOD) relation.The actual implementation of the system consists ofabout 50 rules and very complex rules are necessaryfor particular syntactic constructions as coordinationor subordinate clauses, i.e.
to manage aggregation.The third step of the algorithm concerns the sim-plification of the messages built in the previous step.In 3-a.
we ?propagate?
the syntactic relations amongthe various messages: if a prelexical node belongsto various messages, then all the syntactic relationsstarting from that node will be replicated in all themessages.
For example, the prelexical node aver-age is replicated in the message rooted by the nodeCOMPARISON-RELATION, since value is connectedto the prelexical node average by the syntactic re-2In particular, since SentenceDesigner is written in lisp, weused the LISA expert system.
This is an implementation of theRETE algorithm compliant with Common lisp Specifications(Young, 2007).107lation modifier in the message rooted by the nodeAPPLIED-FUNCTION.
In 3-b., we remove non neces-sary prelexical nodes: corpus analysis showed thatLIS often is ?lexically simpler?
with respect to thecorresponding Italian sentence, and in order to pro-duce fluent LIS sentences we need to remove someprelexical nodes.
For example, the Italian phrase?valori di temperatura?
(values of temperature) istranslated by omitting the sign for ?valore?.
In 3-c.,we remove messages that are properly included inother messages: this can happen as a consequenceof the procedure 3-a.
For example, at this stagethe syntactic information of the message rooted bythe node APPLIED-FUNCTION is properly containedin the message rooted by the node COMPARISON-RELATION.
In 3-d., we remove the semantic relationsand reorder the remaining messages on the basis ofa simple heuristics: for example, temporal informa-tion will be passed first to the realizer.
The final!
!!"#$%&'&()*'+',*!"#$%"#&""'-".$&/+0,+10&)&2'3'4!
"#$%(")*"+,(-+" -"5$&/+0,+10&)&2'3'4!"#$%.,!-"!"6$&/+0,+10&)&2'3'4!"#$,.
"+,/"01230-45 01236450123+)6'Figure 4: A fragment of the output of SentenceDesigneron the by the semantic network of Figure 2.result of SentenceDesigner consists of a number ofsyntactic messages, i.e.
a number of abstract syntaxtrees: each tree will be realized as single sentence(Reiter and Dale, 2000).
In Figure 4 there are theabstract syntax tree produced by SentenceDesigneron the input given by the semantic network of Fig-ure 2.4 A CCG for LISIn our architecture we use the OpenCCG realizer(White, 2006), an open source tool that is basedon categorial grammars (CCG) (Steedman, 2000).Some previous works on translation to SL accountedfor typical syntactic phenomena by using lexical-ized grammars and feature unification too (Vealeand Conway, 1994; Zhao et al, 2000; Huener-fauth, 2006).
However we use the OpenCCG sinceit allows us to encode the LIS inflectional systemby using features in the syntactic categories.
The!
!!"!
"#$% #$%$!"!"&$%!%$!"!
"#$% !#$%$!"!"&$%$#!"$"#$%!#$'()*+&,-&+'&$.+/,0'#$1+.
*+&01)&0'&$ 20#-&+'#$!"!"#$%!"!"#$%!%$!"!
"#$% "#!!
"$"&$%Figure 5: The realization of the LIS sentence?TEMPERATURA R2 VALORE L2 MEDIA L2L2 SUPERIORE R2?.integration in one single elementary structure ofmorphology-syntax-semantics is appealing for SLs,where the absence of function words increases theimportance of morpho-syntactic features to expressthe correct meaning of the sentence.A challenging requirement of our project is thatthe SLs do not have a natural written form.
Asa consequence we developed an artificial writtenform for LIS.
Our electronic lexicon is stored intoa database, such that an entry consists of a uniquealphanumeric ID.
However, for the sake of clarityhere we write a LIS sentence just as a sequence ofglosses.
We use names (in uppercase) for the glossesthat are related to their rough translation into Ital-ian.
The only feature that we explicitly represent inglosses is the spatial position of the sign (cf.
(Zhaoet al, 2000)).
We assume a discrete horizontal di-mension consisting of seven positions L1 (the left-most position), L2, L3, N (the neutral position), R3,R2, R1 (the rightmost position).Similarly to American SL, in LIS we can tell anumber of verb classes on the basis of spatial ac-cord (Volterra, 2004; Wright, 2008; Brentani, 2010).For instance the verb Li SUPERIORE Rj (exceed)belongs to the class II-A, i.e.
it is a transitive verbsuch that the starting position of the sign (Li) co-incides with the position of the subject, as well asthe ending position of the sign (Rj) coincides withthe position of the object (Volterra, 2004).
Sim-ilarly to (Wright, 2008), we model LIS linguisticphenomenon in CCG by using a morphological fea-ture.
This feature encodes the position of the noun inthe atomic category NP , as well as the starting andending position of a verb in the complex categoryS\NP\NP (in accord with (Geraci, 2004) and incontrast to (Volterra, 2004) we assume that LIS re-spects the SOV order).
In Fig.
5 we show the re-108alization of the LIS sentence ?TEMPERATURA R2VALORE L2 MEDIA L2 L2 SUPERIORE R2?
byusing the abstract syntactic tree in Figure 4.
Thefeature unification mechanism constraints the NP ar-guments to agree with the starting and ending po-sition of the verb: the subject TEMPERATURA issigned in the position R2, i.e.
the starting positionof the verb SUPERIORE, while the object MEDIAis signed in the position L2, i.e.
the ending positionof the verb.
More details about our formalization ofverb-arguments and NP-coordination in LIS can befound in (Mazzei, 2011).5 ConclusionsIn this paper we have presented a generator forLIS adopted into a symbolic translation architecture.The generator is composed by a expert-system basedmicroplanner and a CCG based realizer.
The expert-system allows us to manage and update the knowl-edge provided by linguists and derived from corpusanalysis.
CCG allowed for a clear formalization ofLIS syntax.While the design of a quantitative evaluation ofthe system is still in progress, a preliminary quali-tative evaluation provided us some information.
Inparticular, two native LIS signers give a positiveevaluation about the space allocation of the signs butgive a negative feedback on modifiers word order.AcknowledgmentsThis work has been partially supported by the AT-LAS project, that is co-funded by Regione Piemontewithin the ?Converging Technologies - CIPE 2007?framework (Research Sector: Cognitive Science andICT).ReferencesCristina Bosco and Vincenzo Lombardo.
2004.
De-pendency and relational structure in treebank annota-tion.
In Proc.
of the COLING?04 workshop on RecentAdvances in Dependency Grammar, Geneve, Switzer-land.Dana Brentani, editor.
2010.
Sign Languages.
Cam-bridge University Press.Carlo Geraci.
2004.
L?ordine delle parole nella LIS (lin-gua dei segni italiana).
In Convegno nazionale dellaSocieta` di Linguistica Italiana.Matt Huenerfauth.
2006.
Generating American SignLanguage classifier predicates for english-to-asl ma-chine translation.
Ph.D. thesis, University of Pennsyl-vania.Leonardo Lesmo, Alessandro Mazzei, and Daniele P.Radicioni.
2011.
An ontology based architecturefor translation.
In Proceedings of the Ninth Interna-tional Conference on Computational Semantics (IWCS2011), The University of Oxford.Leonardo Lesmo.
2007.
The Rule-Based Parser of theNLP Group of the University of Torino.
IntelligenzaArtificiale, 2(4):46?47, June.Alessandro Mazzei.
2011.
Building a generator for ital-ian sign language.
In Proceedings of the 13th Eu-ropean Workshop on Natural Language Generation,pages 170?175, Nancy, France, September.
Associa-tion for Computational Linguistics.Ehud Reiter and Robert Dale.
2000.
Building naturallanguage generation systems.
Cambridge UniversityPress, New York, NY, USA.Mark Steedman.
2000.
The syntactic process.
MITPress, Cambridge, MA, USA.Mark Stefik, Jan Aikins, Robert Balzer, John Benoit,Lawrence Birnbaum, Frederick Hayes-Roth, andEarl D. Sacerdoti.
1982.
The organization of expertsystems, a tutorial.
Artif.
Intell., 18(2):135?173.Tony Veale and Alan Conway.
1994.
Cross modal com-prehension in zardoz an english to sign-language trans-lation system.
In Proceedings of the Seventh Inter-national Workshop on Natural Language Generation,INLG ?94, pages 249?252, Stroudsburg, PA, USA.
As-sociation for Computational Linguistics.Virginia Volterra, editor.
2004.
La lingua dei segni ital-iana.
Il Mulino.Michael White.
2006.
Efficient realization of co-ordinate structures in combinatory categorial gram-mar.
Research on Language and Computation,2006(4(1)):39?75.Tony Wright.
2008.
A combinatory categorial grammarof a fragment of american sign language.
In Proc.
ofthe Texas Linguistics Society X Conference.
CSLI Pub-lications.David E. Young.
2007.
The Lisa Project.http://lisa.sourceforge.net/.Liwei Zhao, Karin Kipper, William Schuler, ChristianVogler, Norman I. Badler, and Martha Palmer.
2000.A machine translation system from english to ameri-can sign language.
In Proceedings of the 4th Confer-ence of the Association for Machine Translation in theAmericas on Envisioning Machine Translation in theInformation Future, AMTA ?00, pages 54?67, Lon-don, UK, UK.
Springer-Verlag.109
