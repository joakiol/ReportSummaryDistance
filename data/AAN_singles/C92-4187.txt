First Results  of a French LinguisticDeve lopment  EnvironmentL.
Bouchard (GIREIL) L. Emirkanian (cIREIL) D. Estival 0ssco)C. Fay-Varnier (CRIN) C. Fouquer6 (LIBN) (\].
Prigent (CNFT-L.~aon)P. Zweigenbaum (INSERM-U104)1 In t roduct ion :  EGLThe EGL (Enviro imement de Gdnie Linguis-tique) project started in 1989, wi th the proposalto create a l inguistic software development envi-ronment containing a computat iona l  t reatmentof 1;'leach grmmltar J  I ts three main objectiveswere to al low research groups working in NLP:m to develop and test both general l'Yencbgraamtmrs and specific l inguist ic anMysesfor that  bmguage,?
to test new parsers mtd to compare severalparsers in a uniform sett ing, and* to have at their  disposal an ~ma-lyzer /generator  for French, easy to ma imrain and to port to other domains.tThe EGL project involves 6 different partners:* GIREIL: Universit6 dn Qu6bee h.
Montr?
!al,D6partement Math-Into, Montr6al Qu6bec,Case Postale 8888 - Succursale A - H3C3P8,CANADA.
<lhb@mips 1.info.uqam.ca>,<le@mipsl.uqam.ca:>?
ISSCO: Universit6 de Gen~ve, 54 rte des Aca-cias, CI\[-1227 Gen~ve.< estival@divsuu.unige.ch >e CRIN: Campus Scientifique, BP 239, P-54506Vandoeuvre-l&s-Nuncy Cedex.< Christine.
Fay@loria.fr >?
LIPN: Universit6 Paris-Nord, F-93430 Villeta-neuse.
<ef@lipn.univ-parisl 3.fr>?
CNET-Lunnion: Route de Tr6gastel, BP 40,P-22301 Lannion Cedex.<prigentg@lannion .cnet.fr 2>?
INSERM-U194:91 Bd de l'ttSpital, P-75634Paris Cedex 13.
<zweig@frsim51.bitnet>It was supported by the Association pour laCoopdration Culturelle et Technique and by theFrench Programme PRC Communication Homme-Machine.
Development of the GPSG grammar ofbYeneh was also supported by grants from the SSRCof Canada (grant #410-89-1469) and the FCAR ofQuebec (grants #89-EQ-4213 and #92-ER-1198).Independently of a part icular  appl ication, theenvirolmmnt must be usable both as a compo-nent in a system making use of an exist ing syn-tactic database, aald as a development environ-ment for new syntact ic t reatments of the lan-guage.
The first phase of the EGL project waspart ly  based oil a crit ical evaluation of exist ingwork (in part icular GDE \[1\]), eatd defined a gen-eral architecture with the following modules:* parser,?
basic gramnmr,* test-suite database,o lexicon,?
develolmmnt m,'mageluent tools,* graphie'al uti l it ies.The init ial  grmmitat ical  formalism chosen wasthat  of unif ication-based gralmnar and threemain l inguistic frameworks are taken into ac-comlt in F~G~: GPSG \[11\], Lt"G \[16\] and FUG\[17\]).
The parser is based on tile general princi-ple of a chart; different attalyzers for the tliffereutforxmdisms can be integrated into the system bymaking retereuce to that  model and by includingspecitie nlethods for the types of objects theytmmipulate.
Tile basic anMyzer is a revised ver-sion of the GDF parser \[8\]; two LFG parsers arebeing iutegrated, and a FUG parser is planned.The French test-suite and the grarmnax areboth already fairly well developed.
The basicgramumr provided with the envirormaent is thekeystone of the whole system.
It allows using theenvironment directly ~md without further work,sam also serves as a testbench for the computa-t ional solutions to liugtfistic problelrLs.
'\]?he test-suite serves as a guideline for tilecoverage of (system-provided or user-defined)grarmnars, to test whether they accept an in-dependently establ ished corpus of wr i t ten sen-tences which exemplify the nmiu l inguistic prob-lems anti phenonmna of the language.ACRES DE CO1JNG-92, NANqE.S.
23-28 not'yr 1992 1 I 7 7 l'aoc, ov COLING-92.
NANTES, AUG. 23-28.
1992Wtfile defining a French lexicon was not oneof the main objectives of the project, having alexicon is an mmvoidable requirement for test-ing grammars and analyzers and the treatmentof lexical information became an important coin-ponent of the work.
The need to access a singlelexicon required a study of the normalization oflexical information which led to interesting ques-tions about the reusability of syntactic features.Detining development management oolsturned out to pose challenging theoretical prob-lems.
The History component keeps track ofgrammar development and modification, andis complementary to the Coherence componentwhich validates a state of the grasmttar.
TheGeneration component allows the linguist o testlimit cases in the grammar, both from tile pointof view of analysis complexity and in order tocheck overgeneration.We start our description with the modulemaking the system usable as a development toolfor linguistic software, i.e.
the set of graptficalutilities for the visual representation f tile gram-mar, the analysis process and the results.2 User  env i ronmentEGL lets the user parazneterize execution andcontrol commands, explore their results, amt vi-sualize and edit lexicai and syntactic knowledge.In contrast with earlier approadles uch as \[4\],we tlfink that user interface standards are nowsufficiently ilmture to allow reasonably portablesoftware to be developed, and most of these frmc-tions are part of a graphical user interface run-ning under X-window Motif.
The EGL graphicaluser interface is best illustrated with the parsingtools, wtfich are directed towards both the grean-mar developer and the parser developer.
Theuser can select a sentence, control parser exe-cution, mtd explore the results.
During parsing,the user can display the chart and watch it evolvedynanfically.
The agenda of awaiting chart taskscan also be displayed and manipulated.
Tiffs al-lows the parser developer to e~cperiment mann-ally with chart parsing strategies before integrat-ing them into the parser.After parsing~ the grammar developer candisplay the relevant structures (derivation trees,feature structures, rules used, etc.)
and navi-gate through them.
The whole user interface be-haves as a structure inspector, or hypertext-stylebrowser, with displays and limks tailored to thelinguistic needs and habits of ti~e user.3 Development Management  ToolsBesides the test suite elaborated for theproject, three validation tools contribute togrammar development: he tIistury, Coitereneeand Generation components.
As the test suiteand the ftistory components are described in de-tail elsewhere \[5\], we will spend more time on theCoherence and Generation components.
Theyare both based upon a formalism which is com-mon to GPSG, LFG and FUG, and thus ableto include all tile data and constraints of thosethree frameworks.
In this way, EGL goes beyondprevious projects such as \[8, 7\] and provides acommon tool for various frameworks.A gT~mmar consists of four sets (category,(ID-)rule, LP-rule and metarule).
2 Each set in-cludes both data and principles.
A principleis a constraint that must apply everywhere midwhich defines the admissible data.A category (I, F, A) is represented as: 3e A categorial identifier I, which is a symbolidentifying the category.A formula/~', which defines constraints ap-plicable to the category.
These are de-duced from the rule that generated thecategory, or from principles.
The allowedpredicates are: standard D, constrainedD~, default 3d deduction; standard --, con-strained =%, default -a  ttnification; nega-tion -,, ration /', and disjtmction Y.?
An attribute-wdue structure A.
A valuemay be atomic or complex (itself anattribute-value structure).
It can be de-dared explicitly (with constants) or im-plicitly (referring to another value in thestructure, thus allowing data sharing).Local trees stem fronl rewrite rules, 4 con-strained by LP-rules and principles,  The prece-dence constraints can be mentioned in the right-hand side of a rule inside the rule as well as aprinciple via precedence rules.
This expressivepower ('allowing "formalism mixing") facilitates2An (ID-)rule is a regular expression constructedfrom an Immediate I)ominanee rule with LinearPrecedence constraints.aEach element of a structure or a category can beomitted; in that case, it is considered a variable.4These are themselves defined with metarules.5This is the way to express the Foot Feature Prin-ciple, Head Feature Convention, etc.
of GPSG.AcrEs DE COL1NG-92, NA/VI~..S. 23-28 AOt~l 1992 1 1 7 8 PRoC.
ov COLING-92.
NAN'rJ~s.
AUG. 23-28, 1992grannnax development.
Two exaauples:LFG (rewrite rule):(P,,) * {I,(NP,$0.SUJ :: $1,)}A {2,(VP,$0 : $2, \[TRANS-\])}GPSG (default constraint):(,,\[V +, N 1) -)a (,,\[VFORM V, PASS--\])The m,'dn protdem in the Coherence coinpo-nent is that of salisfiabilit~, ls there any validparse with the user's graznmar?
Besides satisfi-ability, some questions are of great interest froma linguistic point of view, e.g.
sufficiency andnecessity of all the data.
A grammar must bestructurally coherent, and we say that a grarn-mar is coherent iff it satisfies:o non-cyclicity: there is no cyclic point., non-redtmdancy: A is redmidant w.r.t.
Bin a grammar S iff S-A has the stonestrong generative capacity as S-B .non-superffifity: A is superfluous in S iff Saml S-A have the same strong generativecapacity.accessibilJty-coaccessibility: data is acces-sible (resp.
coarcessible) iff used at leastonce in generation (resp.
a parse).We have shown 12\] that cyclicity, redundancy,'rod superfluity are subproblems of accessibility:an accessibility algorittun can be used as a nec-essary condition for the three other problems, lita context-free granmlar, linguistic coherence canbe tested locally.
Therefore, a first pass appliesto a context-free paxt of the grarunmr (withoutdata shaxing nor nonmonotonic atonfic formu-las).
A second, global, pass uses label propaga-tion, where labels are defined by constraints.
Weare also investigating a clique method to treataccessibility in a trartahle way \[9, 2\].The inputs to the Generation component arethe following constraints:s on the graummr: specification of obliga-tory, forbidden or cooccurrent rules,?
on ternfinal nodes: specification of com-plex structures that deternfine terminalnodes types,?
on iuitial structures: specification of in-complete parse trees.These parameterizations were easily includedinto tlm formalisnt, but problems occur with tirealgorithm itself, which chart Mgoritlmls are in-sufficient to deal with.
Three agendas take careof post-modification f nodes in incomplete trees,thus extending Slffeber's algorithm \[21, 18\].4 Linguistic Descr ipt ions4.1  Gralntnar"\];he development of tim GPSG granunax for1,~rench cau be traced through three steps.First, we implemented a demonstration groammar \[12\], patterned alter tile English granunardescribed in the GDF, User ManuM \[8\].
In termsof coverage, tiffs French grammar cau handlesome simple questions, wtfich required the def-inition of two additional nmtarules, ht terms ofgralmnar-writing style, following a suggestion of\[22, pp.
115-t19\], we detine the person featurein temps of two tffnary featm'es, EGO said PTC(participant).
Finally, agreement is a nmch morepervasive phenontenon in French than in English,and ntaaly more eases nmst be taken into ar-comit: adjective/noun, determiner/noun, adjec-tival predicate, arid the past participle.As a second step, we developed a GPSG-based I,'rend~ grauunax ".along the lines of the \]:~iI-glish gratnnmr described in \[15\].
Although thelinguistic coverage is sinfflax in both of them,the l'arench graumlaX is only loosely patternedafter the Enghsh one.. Its development was bro-ken into subtasks according to the types of con-stituents encountered (AI', NP, VP ...) as wellas to the types of specific linguistic problems tobe accounted fl~r (e.g.
agreement, comparativesand coordination), lu generM, the rides in ourgraxmuax axe driven by lexicM infornmtion: wettms model our computational grammax on timresults of current linguistic theory.Our treatment of agreement is fairly complete\[13\].
For example, we can handle complex coloradjectives (des robes vert bouteille, "bottle-greendresses"), predicate APs (los robes sont reties,"the dresses are green"), mid past participles (lesdtudiantes que les policiers out matraqu~es, "thestudents that the police beat up").Tim treatment of VPs is extensive \[14\] attdincludes the positioning of clitics \[3\] and of nega-tion.
l,exical VI iteius are used to handle com-plex tenses ,~Ld the positioning of negation midcertain adverbs.
We strived to ndnhiffze thenuntber of lexical II)-rules and tackle tim prob-lem of "categoriM distortion" \[20\] (in particular,the granunar ca:u account or complement sub-categorization alternations in a systematic way).The treatment of 1qPs was found to causeAt:IEs DE COLING-92, NAtCI'ES.
23-28 AOt~l 1992 1 1 7 9 PROC.
oF COLING-92.
NANIT.S.
Auo.
23-28.
1992more serious problems.
Although we were ableto pattern our treatment of modifiers after \[15\],that of specifiers is more problematic \[19\].
It hasrapidly become clear that semantic informationis necessary for a satisfactory solution.
Thus,the third step is to enrich our morpho-syntacticgrammar with a semantic omponent \[6\].4.2 LexiconA lexical database is obviously necessary toperform any test on gramm_,3rs and parsers.Defining a French lexicon within the GPSG for-realism was not one of our goals but, in parallelto the syntactic database, we had to construct alexicon couched in a formalism compatible withdifferent grammars and with enough coverage tobe useful.
Like the grammar provided with theenvironment s this lexicon can be taken as is, orbe replaced by the users.
We eventually settledon (automatically) transforming the informationpresent in an already existing dictionary (theCNET lexicon) to serve as the lexical database.
64.3 Normal iz ing Lexical In fo rmat ionIn building a linguistic environment which isboth French specific and usable by separate userswith independently built systems, we knew thatthese would require lexical information to be pre-sented in different ways.
However, with the as-sumption that all of the lexical information ec-essary for the various syntactic analyses is actu-ally present in the lexicon provided with EGL,we make the hypothesis that the content of thisinformation is common to the various systems.Since an increasing number of grammaticalformalisms put a large part of the linguistic de-scription in the lexicon, we are interested in thenature and complexity of lexical entries, in thedivision of information between grammar andlexicon, in the representation f the syntactic in-formation in the lexicon, as well as in the use oftexical information i  the grammar.
Normalizingthis information thus became an important partof the linguistic aspect of the project: the fea-tures in the pre-existing lexicon had to be trans-formed to serve as the basis for a "neutral" lexi-con, Which must be usable by grammars not writ-ten in the same framework as that of the CNET.eThc CNET lexicon has more than 55000 entriesdefined with 200 keywords.
The lexicon is trans-formed into minimal automata with quasi-linear timecomplexity for access.
The compactness of the au-tomata llows them to be resident in core memory.First, a correspondence was established be-tween the syntactic and morpho-syntactic fea-tures of the CNET lexicon and the featuresrequired in systems created by members ofthe project: the GIREIL grammar; the LN-2-3 granlmar (INSI~.~RM); the ELU grammar(ISSCO).
From the list of features used by eachof them, we extracted those that pertain to thelexicon.
We only considered attributes requiredby the grammars at the lexical level, thus dis-carding the features which represent informationthat cml only be evaluated uring processing, i.e.which cannot be present in a lexical entry (e.g.VEUT-AUX-COMPOSE on a complex verbalform for LN-2-3, or REL on a nominal form inELU).
Since all three systems adopt to some ex-tent a lexicallst approach mid include a largeamount of syntactic information in the lexicon,this division required a detailed interpretation ftheir internal workings.Conversely, although morphological nalysisis most often performed in a separate component(i.e.
inflected forms do not constitute separatelexical entries), morphological information is in-cluded in our normalization, because that infor-marion must be present on the lexemes ervingas starting points for the syntactic analysis.We then put in correspondence the lexical fea-tures of the various systems; here again, it wasnecessary to interpret he way they are actuallyused (e.g.
in the representation f reflexive con-structions).
The normalization of the morpho-syntactic features required in these three gram-mars can now be extended to other grammaticalanalyses through the more general list of featuresestablished for the mapping which allows eachsystem to recover in the lexicon the informationit needs to perform an analysis.5 ConclusionWhile French has been the object of relativelyextensive research in computational linguistics,no extensive formal description of that languagehas been integrated in a linguistically motivateddevelopment environment.
The EGL project ispart of a growing trend towards a wider linguisticcoverage coupled with greater flexibility.Designing a linguistic development environ-ment requires making sonic fundamental choicesabout the grartmlatical forlnalism, and the eval-uation of competing formalisms depends on as-sumptions inlposed by the task at hand (corn-ACTE~ DE COLING-92.
NANT~, 23-28 ^O~' 1992 1 1 8 0 PROC.
OV COLING-92, NANTES, AUO.
23-28, 1992plexity, deternfiulsm, performance degradat ionin case of unforeseen input,  use and integra-tion of semantic information).
The use of NLas a medimn for communicat ion between loanand nmchine renders desirable the adaptabi l i ty  ofan NLP system to various l inguist ic forlnalisms.However, if automat ic  information processingprojects now more often include an NL compo-nent, that  component is general ly "closed" a~tdunmodif iable: few systems are designed to pro-vide the syntact ic  analysis of natura l  languagetexts or to be usable in various contexts.
7 InEGL, several of the modules nmy be reused out-side of the grammat ica l  formafisln chosen for ourown l inguist ic description.
This basic reqrfire-ment of system design can have important  con-sequences when we want to tai lor the system toappl icat ions where the l inguist ic domain is lim-ited, which is the case in most natura l  laalguageinterface appl icat ions.
As a design tool, EGLmakes it possible to see s imultaneously arul tomanipu late  asi ly each of its components.Re ferences  \[14\]\[1\] Baldy, B. and A. de Sousa (1989) ALVEY : uned~ude informatique pour la comprdhension des \[15\]mdcanismes de l'aualyse syntazique azds sur lathdorie des Grammaires Syntagmatiques Gdndralisdes.Rapport de Recherche, LIPN.
{2\] Belabbas, A.
(1991) Cohdrence des grammaires \[16\]ddcrivant le Langage Natural.
Rapport de DEA,LIPN.\[3\] B~s, G. (1988) "Clitiques et constructions topi-calls&as dans une grammalre GPSG du franqais".In G. B~s & C. b~tchs eds.
Lezique e~ paraphrase \[17\]pp.
55-81.
Lille: Presses universitaires de Lille.\[4\] Boguraev, B. J. Carroll, T. Briscoe and C. Grover(1988) "Software Support for Practical Gram-mar Development."
Proceedings of the 12th In- \[18\]te~aiional Conference on Computational Lin-guistics (COLING), Budapest, pp.
54-57.
\[19\]\[5\] Bouchard, L.
It., L. Emirkanian, D. Estival, C.Fay-Varrder, C. Fouquet~, G. Prigent and P. Zweigen-baum (1992) "EGL: a l~ench Linguistic Devel- \[20\]opment Environment".
Natural Language Pro-cessing and its Applications, Avignon 92.
\[21\]\[6\] Bouchard, L. H. and L. Emirkanian (1991) Se-mantic Interpretation in the Grammar Devel-opment Environmenl.
Working Paper, GIREIL,UQAM.7The systems developed in France which have beenstudied in \[10\] are all concerned with more than thesyntactic treatment of the language.\[7\] Carpenter, tL and C. Pollard (1991) "Inclusion,Disjointness and Choice: The Logic of Linguis-tic Classification."
Proceedings of the 29th An-nual Meeting of the Association for Computa-tronal Linguistics, Berkeley.\[8\] Carroll, J, B. Boguraev, C. Grover and T. Briscoe(1988) A Development Environment for LargeNatural Language Grammars.
Tceh.
Report 127,Computer Laboratory, University of Cambridge.\[9\] Dechter, R. and J. Pearl (1989) "Tree Clusteringfor Constraint Networks."
Artificial Intelligence,38 (3), pp.
353-366.\[10\] Fay-Varuier, C., C. Fouquer6, G. Prigent et P.Zweigenbaum (1991) Comparaison de syst~ruesd'analyse syntazique du fran~ais : Donndes etCommeniaires.
Journ~es Nationales du PRC-CHM,Toulouse.\[11\] Gazdar, G., E. Klein, G. Pullum and I.
Sag(1985) Generalized Phrase Structure Grammar.Cambridge: Harvard University Press.\[12\] GIREIL (1990a) "nr~ve description de la gram-matte "pocimir" du fran~ais'.
Rapport de re-cherche.
UQAM.\[13\] GIRE1L (1990b) "Grammaire minimale de l'ac-cord".
Rapport de recherche.
UQAM.GIREIL (1991) "La structure du syntagme ver-bal ea fran?ais".
Rapport de recherche.
UQAM.Grover, C., T. Briscoe, J. Carroll and B. Bogu-racy (1989) 2'he Alvey Natural Language ToolsGrammar (Second Release).
Tech.
Report 162.Computer Laboratory, University of Cambridge.Kaplan, It.
and J. Bresnan (1982) "Lexical-fuuc-tional grammar: A formal system for grammat-ical representation".
In The Mental Representa-tion of Graramatical Relations.
J. Bresnan, ed.Cambridge: MIT Press.Kay, M. (1982).
"Parsing in Functional Unifica-tion Grammar".
In Natural Language Parsing,D.
Dowty, L. Karttunen and A. Zwicky, ads.Cambridge: Cambridge University Press.Le Barzic, J.P. (1991) Gdndration paramdtrdemulti-formahsme.
Rapport de DEA, LIPN.Milner, J.-C. (1978) De la syntaze d l'interprdta-tion : Quantitds, insultes, ezclamations.
Paris:Editions du Scull.Mitner, J.-C. (1989) Introduction h use sciencedu langage.
Paris: Editions du Seuil.Shiel)er, S., G. van Noord, R.C.
Moore, andF.C.N.
Pereira (1989).
"A Semantic-Head-DrivenGeneration Algorithm for Unification-Based For-malisms'.
Proceedings of the 27th Annual Meet-ing of the Association for Compula?mnal Lin-guistics, Vancouver, pp.
7 17.\[22\] Tesni&re, L. (1988) Eldments de syntaze strue-tnrale.
(DeuxJ~me ~!dition revue et corrigde.
Cin-quinine impression).
Paris: Klincksieck.ACTES DE COLING-92, NANq\]iS.
23-28 Ao(rr 1992 1 1 8 1 l)uo~:.
OF COLING-92, N^l'crEs, AUG. 23-28.
1992
