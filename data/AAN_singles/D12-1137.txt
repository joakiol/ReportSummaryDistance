Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational NaturalLanguage Learning, pages 1500?1510, Jeju Island, Korea, 12?14 July 2012. c?2012 Association for Computational LinguisticsSupervised Text-based GeolocationUsing Language Models on an Adaptive GridStephen Roller?
Michael Speriosu ?
Sarat Rallapalli ?Benjamin Wing ?
Jason Baldridge ?
?Department of Computer Science, University of Texas at Austin?Department of Linguistics, University of Texas at Austin{roller, sarat}@cs.utexas.edu, {speriosu, jbaldrid}@utexas.edu, ben@benwing.comAbstractThe geographical properties of words have re-cently begun to be exploited for geolocatingdocuments based solely on their text, often inthe context of social media and online content.One common approach for geolocating texts isrooted in information retrieval.
Given trainingdocuments labeled with latitude/longitude co-ordinates, a grid is overlaid on the Earth andpseudo-documents constructed by concatenat-ing the documents within a given grid cell;then a location for a test document is chosenbased on the most similar pseudo-document.Uniform grids are normally used, but they aresensitive to the dispersion of documents overthe earth.
We define an alternative grid con-struction using k-d trees that more robustlyadapts to data, especially with larger trainingsets.
We also provide a better way of choosingthe locations for pseudo-documents.
We eval-uate these strategies on existing Wikipedia andTwitter corpora, as well as a new, larger Twit-ter corpus.
The adaptive grid achieves com-petitive results with a uniform grid on smalltraining sets and outperforms it on the largeTwitter corpus.
The two grid constructionscan also be combined to produce consistentlystrong results across all training sets.1 IntroductionThe growth of the Internet in recent years hasprovided unparalleled access to informational re-sources.
It is often desirable to extract summarymetadata from such resources, such as the date ofwriting or the location of the author ?
yet only asmall portion of available documents are explicitlyannotated in this fashion.
With sufficient trainingdata, however, it is often possible to infer this infor-mation directly from a document?s text.
For exam-ple, clues to the geographic location of a documentmay come from a variety of word features, e.g.
to-ponyms (Toronto), geographic features (mountain),culturally local features (hockey), and stylistic or di-alectical differences (cool vs. kewl vs. kool).This article focuses on text-based document ge-olocation, the prediction of the latitude and lon-gitude of a document.
Among the uses for thisare region-based search engines; tracing the sourcesof historical documents; location attribution whilesummarizing large documents; tailoring of ads whilebrowsing; phishing detection when a user account isaccessed from an unexpected location; and ?activistmapping?
(Cobarrubias, 2009), as in the Ushahidiproject.1 Geolocation has also been used as a fea-ture in automatic news story identification systems(Sankaranarayanan et al 2009).One of the first works on document geolocation isDing et al(2000), who attempt to automatically de-termine the geographic scope of web pages.
Theyfocus on named locations, e.g.
cities and states,found in gazetteers.
Locations are predicted basedon toponym detection and heuristic resolution al-gorithms.
A related, recent effort is Cheng et al(2010), who geolocate Twitter users by resolvingtheir profile locations against a gazetteer of U.S.cities and training a classifier to identify geographi-cally local words.An alternative to using a discrete set of locationsfrom a gazetteer is to use information retrieval (IR)techniques on a set of geolocated training docu-ments.
A new test document is compared with each1http://ushahidi.com/1500training document and a location chosen based onthe location(s) of the most similar training docu-ment(s).
For image geolocation, Chen and Grauman(2011) perform mean-shift clustering over trainingimages to discretize locations, then estimate a testimage?s location with weighted voting from the kmost similar documents.
For text, both Serdyukovet al(2009) and Wing and Baldridge (2011) use asimilar approach, but compute document similaritybased on language models rather than image fea-tures.
Additionally, they group documents via a uni-form geodesic grid rather than a clustered set of lo-cations.
This reduces the number of similarity com-putations and removes the need to perform locationclustering altogether, but introduces a new param-eter controlling the granularity of the grid.
Kinsellaet al(2011) predict the locations of tweets and usersby comparing text in tweets to language models as-sociated with zip codes and broader geopolitical en-closures.
Sadilek et al(2012) discretize by simplyclustering data points within a small distance thresh-old, but only perform geolocation within fixed citylimits.While the above approaches discretize the contin-uous surface of the earth, Eisenstein et al(2010)predict locations based on Gaussian distributionsover the earth?s surface as part of a hierarchicalBayesian model.
This model has many advantages(e.g.
the ability to compute a complete probabilitydistribution over locations), but we suspect it will bedifficult to scale up to the large document collectionsneeded for high accuracy.We build on the IR approach with grids while ad-dressing some of the shortcomings of a uniform grid.Uniform grids are problematic in that they ignore thegeographic dispersion of documents and forgo thepossibility of greater-granularity geographic resolu-tion in document-rich areas.
Instead, we constructa grid using a k-d tree, which adapts to the size ofthe training set and the geographic dispersion of thedocuments it contains.
This can better benefit frommore data, since it enables the training set to supportmore pseudo-documents when there is sufficient ev-idence to do so, while still ensuring that all pseudo-documents contain comparable amounts of data.
Italso has the desirable property of generally requiringfewer active cells than a uniform grid, drastically re-ducing the computation time required to label a testdocument.We show that consistently strong results, robustacross both Wikipedia and Twitter datasets, are ob-tained from the union of the pseudo-documents froma uniform and adaptive grid.
In addition, a sim-ple difference in the choice of location for a givengrid cell ?
the centroid of the training documentsin the cell, rather than the cell midpoint ?
resultsin across-the-board improvements.
We also con-struct and evaluate on a much larger dataset of ge-olocated tweets than has been used in previous pa-pers, demonstrating the scalability and robustness ofour methods and confirming the ability of the adap-tive grid to more effectively use larger datasets.2 DataWe work with three datasets: a corpus of geotaggedWikipedia articles and two corpora of geotaggedtweets.GEOWIKI is a collection of 1,019,490 geotaggedEnglish articles from Wikipedia.
The dump fromWikimedia requires significant processing to obtainarticle text and location, so we rely on the prepro-cessed data used by Wing and Baldridge (2011).GEOTEXT is a small dataset consisting of377,616 messages from 9,475 users tweeting across48 American states, compiled by Eisenstein et al(2010).
A document in this dataset is the concate-nation of all tweets by a single user, with a locationderived from the earliest tweet with specific, GPS-assigned latitude/longitude coordinates.UTGEO2011 is a new dataset designed to ad-dress the sparsity problems resulting from the sizeof the previous dataset.
It is based on 390 mil-lion tweets collected across the entire globe be-tween September 4th and November 29th, 2011, us-ing the publicly available Twitter Spritzer feed andglobal search API.
Not all collected tweets weregeotagged.
To be comparable to GEOTEXT, wediscarded tweets outside of North America (out-side of the bounding box with latitude/longitudecorners at (25,?126) and (49,?60)).
FollowingEisenstein et al(2010), we consider all tweetsof a user concatenated as a single document, anduse the earliest collected GPS-assigned location asthe gold location.
Users without a gold locationwere discarded.
To remove many spammers and1501robots, we only kept users following 5 to 1000people, followed by at least 5 users, and author-ing no more than 1000 tweets in the three monthperiod.
The resulting dataset contains 38 milliontweets from 449,694 users, or roughly 85 tweetsper user on average.
We randomly selected 10,000users each for development and held-out test eval-uation.
The remaining 429,694 users serve as atraining set termed UTGEO2011-LARGE.
We alsorandomly selected a 10,000 user training subset(UTGEO2011-SMALL) to facilitate comparisonswith GEOTEXT and allow us to investigate the rel-ative improvements for different models with moretraining data.Our code and the UTGEO2011 data set are bothavailable for download.23 ModelAssume we have a collection d of documents andtheir associated location labels l. These docu-ments may be actual texts, or they can be pseudo-documents comprised of a number of texts groupedvia some algorithm (such as the grids discussed inthe next section).For a test document di, its similarity to each la-beled document is computed, and the location of themost similar document assigned to di.
Given an ab-stract function sim that can be instantiated with anappropriate similarity function (e.g.
cosine distanceor Kullback-Leibler divergence),loc(di) = loc(argmaxdj?dsim(di, dj)).This is a winner-takes-all strategy, which we followin this paper.
In related work on image geoloca-tion, Hays and Efros (2008) use the same generalframework, but compute the location based on thek-nearest neighbors (kNN) rather than the top one.They compute a distribution from the 120 nearestneighbors using mean shift clustering (Comaniciuand Meer, 2002) and choose the cluster with themost members.
This produced slightly better re-sults than choosing only the closest image.
In futurework, we will explore the kNN approach to see if itis more effective for text geolocation.2https://github.com/utcompling/textgrounder/wiki/RollerEtAl_EMNLP2012Following previous work in document geoloca-tion, particularly Serdyukov et al(2009) (hence-forth SMvZ) and Wing and Baldridge (2011)(henceforth W&B), we geolocate texts using a lan-guage modeling approach to information retrieval(Ponte and Croft, 1998; Zhai and Lafferty, 2001).For each document di, we construct a unigram prob-ability distribution ?di over the vocabulary.We smooth documents using the pseudo-Good-Turing method of W&B, a nonparametric discount-ing model that backs off from the unsmoothed distri-bution ?
?di of the document to the unsmoothed distri-bution ?
?D of all documents.
A general discountingmodel is as follows:P (w|?di) ={(1?
?di)P (w|?
?di), if P (w|?
?di) > 0?diP (w|?
?D)Udi, otherwise,where Udi = 1 ?
?w?diP (w|?
?D) is a normaliza-tion factor that is precomputed when the distributionfor di is constructed.
The discount factor ?di indi-cates how much probability mass to reserve for un-seen words.
For pseudo-Good-Turing, it is?di =|w ?
di s.t.
count(w ?
di) = 1||w ?
di|,i.e.
the fraction of words seen once in di.We experimented with other smoothing methods,including Jelinek-Mercer and Dirichlet smoothing.A disadvantage of these latter two methods is thatthey have an additional tuning parameter to whichtheir performance is highly sensitive, and even withoptimal parameter settings neither consistently out-performed pseudo-Good-Turing.
We also found noconsistent improvement from using interpolation inplace of backoff.We also follow W&B in using Kullback-Leibler(KL) divergence as the similarity metric, since it out-performed both naive Bayes classification probabil-ity and cosine similarity:KL(?di ||?dj ) =?k?di(k) log?di(k)?dj (k).The motivation for computing similarity with KL isthat it is a measure of how well each document inthe labeled set explains the word distribution foundin the test document.15024 Collapsing Documents with an AdaptiveGridIn the previous section, we used the term ?docu-ment?
loosely when speaking of training documents.A simplistic approach might indeed involve com-paring a test document to each training document.However, in the winner-takes-all model describedabove, we can rely only on the result of comparingwith the single best training document, which maynot contain enough information to make a good pre-diction.A standard strategy to deal with this problem isto collapse groups of geographically nearby docu-ments into larger pseudo-documents.
This also hasthe advantage of reducing the computation time,as fewer training documents need to be comparedagainst.
Formally, this involves partitioning thetraining documents into a set of sets of documentsG = {g1 .
.
.
gn}.
A collection d?
of pseudo-documents is formed from this set, such that thepseudo-document for a particular group gi is simplythe concatenation of the documents in the group:d?gi =?dj?gidj .A location must be associated with each pseudo-document.
This can be chosen based on the parti-tioning function itself or the locations of the docu-ments in each group.Both W&B and SMvZ use uniform grids consist-ing of cells of equal degree size to partition doc-uments.
We explore an alternative that uses k-d(k-dimensional) trees to construct a non-uniformgrid that adapts to training sets of different sizesmore gracefully.
It ensures a roughly equal num-ber of documents in each cell, which means that allpseudo-documents compete on similar footing withrespect to the amount of training data.W&B define the location for a cell to be its ge-ographic center, while SMvZ only perform erroranalysis in terms of choosing the correct cell.
Weobtain consistently improved results using the cen-troid of the cell?s documents, which takes into ac-count where the documents are concentrated.4.1 k-d TreesA k-d tree is a space-partitioning data structure forstoring points in k-dimensional space, which groupsnearby points into buckets.
As one moves down thetree, the space is split into smaller regions alongchosen dimensions.
In this way, it is a generaliza-tion of a binary search tree to multiple dimensions.The k-d tree was first introduced by Bentley (1975)and has since been applied to numerous problems,e.g.
Barnes-Hut simulation (Anderson, 1999) andnearest-neighbors search (Friedman et al 1977).Partitioning geolocated documents using a k-dtree provides finer granularity in dense regions andcoarser granularity elsewhere.
For example, doc-uments from Queens and Brooklyn may show sig-nificant cultural distinctions, while documents sepa-rated by the same distance in rural Montana may ap-pear culturally identical.
A uniform grid with largecells will mash Queens and Brooklyn together, whilesmall cells will create unnecessarily sparse regionsin Montana.An important parameter for a k-d tree is its bucketsize, which determines the maximum number ofpoints (documents in our case) that a cell may con-tain.
By varying the bucket size, the cells can bemade fine- or coarse-grained.4.2 Partitioning with a k-d TreeFor geolocation, we consider the surface of earth tobe a 2-dimensional space (k=2) over latitude, longi-tude pairs.
We form a k-d tree by a recursive proce-dure over the training data.
Initially, all documentsare placed in the root node of the tree.
If the numberof documents in the node exceeds the bucket size,the node is split into two nodes along a chosen splitdimension and point.
This procedure is recursivelycalled on each of the new child nodes, and repeatsuntil no node is overflowing.
The resulting leaves ofthe k-d tree form a patchwork of rectangles whichcover the entire earth.3When splitting an overflowing node, the choice ofsplitting dimension and point can greatly impact thestructure of the resulting k-d tree.
Following Fried-man et al(1977), we choose to always split a node3We note that the grid ?rectangles?
are actually trapezoidsdue to the nature of the latitude/longitude coordinate system.We assume the effect of this is negligible, since most documentsare away from the poles, where distortion is the most extreme.1503Figure 1: View of North America showing k-d leaves cre-ated from GEOWIKI with a bucket size of 600 and theMIDPOINT method, as visualized in Google Earth.Figure 2: k-d leaves over the New York City and nearbyareas from the same dataset and parameter settings as inFigure 1.along the dimension exhibiting the greatest range ofvalues.
However, there still exist multiple methodsfor determining the split point, i.e.
the point separat-ing documents into ?left?
and ?right?
nodes.
In thispaper, we consider two possibilities for selecting thispoint: the MIDPOINT method, and the FRIEDMANmethod.
The latter splits at the median of all thepoints, resulting in an equal number of points in boththe left and right nodes and a perfectly balanced k-dtree.
The former splits at the midpoint between thetwo furthest points, allowing for a greater differencein the number of points in each bin.
For geolocation,the FRIEDMAN splitting method will likely lead toless sparsity, and therefore more accurate cell selec-tion.
On the other hand, the MIDPOINT method islikely to draw more geographically desirable bound-aries.Figure 1 shows the leaves of the k-d tree formedover North America using the GEOWIKI dataset,the MIDPOINT node division method, and a bucketsize of 600.
Figure 2 shows the leaves over NewYork City and its surrounding area for the samedataset and settings.
More densely populated ar-eas of the earth (which in turn tend to have moreWikipedia documents associated with them) containsmaller and more numerous leaf cells.
The cellsover Manhattan are significantly smaller than thoseof Queens, the Bronx, and East Jersey, even at sucha coarse bucket size.
Though the leaves of the k-dtree implicitly cover the entire surface of the earth,our illustrations limit the size of each box by its data,leaving gaps where no training documents exist.4.3 Selecting a Representative LocationW&B use the geographic center of a cell as thegeolocation for the pseudo-document it represents.However, this ignores the fact that many cells willhave imbalances in the dispersion of the documentsthey contain ?
typically, they will be clumpy, withdocuments clustering around areas of high popula-tion or activity.
An alternative is to select the cen-troid of the locations of all the documents containedwithin a cell.
Uniform grids with small cells arenot especially sensitive to this choice since the abso-lute distance between a center or centroid predictionwill not be great, and empty cells are simply dis-carded.
Nonetheless, using the centroid has the ben-efit of making a uniform grid less sensitive to cellsize, such that larger cells can be used more reliably?
especially important when there are few trainingdocuments.In contrast, when choosing representative loca-tions for the leaves of a k-d tree, it is quite importantto use the centroid because the leaves necessarilyspan the entire earth and none are discarded (sinceall have a roughly similar number of documents inthem).
Some areas with low document density arethus assigned very large cells, such as those overthe oceans, as seen in Figures 1 and 2.
Using thecentroid allows these large leaves to be in the mix,while still predicting the locations in them that havethe greatest document density.5 Experimental SetupConfigurations.
We experiment with several con-figurations of grids and representative locations.15040 200 400 600 800200250300350Bucket SizeMeanError (km)oooo oo oo oo oxxxxx xx x x xxox MidpointFriedman200 400 600 800 1000 12008509009501000Bucket SizeMeanError (km)MidpointFriedman200 400 600 800 1000 120011001120114011601180Bucket SizeMeanError (km)MidpointFriedman(a) (b) (c)Figure 3: Development set comparisons for (a) GEOWIKI, (b) GEOTEXT, and (c) UTGEO2011-SMALL.W&B refers to a uniform grid and geographic-center location selection, UNIFCENTROID to auniform grid with centroid location selection,KDCENTROID to a k-d tree grid with centroidlocation selection, and UNIFKDCENTROID tothe union of pseudo-documents constructed byUNIFCENTROID and KDCENTROID.We also provide two baselines, both of which arebased on a uniform grid with centroid location selec-tion.
RANDOM predicts a grid cell chosen at randomuniformly; MOSTCOMMONCELL always predictsthe grid cell containing the most training documents.Note that a most-common k-d leaf baseline does notmake sense, as all k-d leaves contain approximatelythe same number of documents.Evaluation.
We use three metrics to measure ge-olocation performance.
The output of each exper-iment is a predicted coordinate for each test docu-ment.
For each prediction, we compute the error dis-tance along the surface of the earth to the gold coor-dinate.
We report the mean and median of all suchdistances as in W&B and Eisenstein et al(2011).We also report the fraction of error distances lessthan 161 km, corresponding to Cheng et al(2010)?smeasure of predictions within 100 miles of the truelocation.
This third measure can reveal differencesbetween models not obvious from just mean and me-dian.6 ResultsThis section provides results for the datasetsdescribed previously: GEOWIKI, GEOTEXT,UTGEO2011-LARGE and UTGEO2011-SMALL.We first give details for how we tuned parametersand algorithmic choices using the development sets,and then provide performance on the test sets basedon these determinations.6.1 TuningThe specific parameters are (1) the partition locationmethod; (2) the bucket size for k-d partitioning; (3)the node division method for k-d partitioning; (4) thedegree size for uniform grid partitioning.
We tunewith respect to mean error, like W&B.Partition Location Method.
Development setresults show that the centroid always performs bet-ter than the center for all datasets, typically by awide margin (especially for large partition sizes).
Tosave space, we do not provide details, but point thereader to the differences in test set results betweenW&B and UNIFCENTROID (which are identical ex-cept that the former uses the center and the latteruses the centroid) in Tables 1 and 2.
All further pa-rameter tuning is done using the centroid method.k-d Tree Bucket Size.
Bucket size should not betoo large as a proportion of the total number of train-ing documents.
Larger bucket sizes tend to producelarger leaves, so documents in a partition will havea higher average distance to the center or centroidpoint.
This will result in predictions being made attoo coarse a granularity, greatly limiting obtainableprecision even when the correct leaf is chosen.Conversely, small bucket sizes lead to fewer train-ing documents per partition.
A bucket size of onereduces to the situation where no pseudo-documentsare used.
While this might work well if location pre-diction is done using the kNNs for a test document, it1505Test dataset GEOWIKI GEOTEXTMethod Parameters Mean Med.
Acc.
Parameters Mean Med.
Acc.RANDOM 0.1?
7056 7145 0.3 5?
2008 1866 1.6MOSTCOMMONCELL 0.1?
4265 2193 5.0 5?
1158 757 31.3Eisenstein et al- - - - - 845 501 -Wing & Baldridge 0.1?
221 11.8 - 5?
967 479 -UNIFCENTROID 0.1?
181 11.0 90.3 5?
897 432 35.9KDCENTROID B100, MIDPT.
192 22.5 87.9 B530, FRIED.
958 549 35.3UNIFKDCENTROID 0.1?, B100, MIDPT.
176 13.4 90.3 5?, B530, FRIED.
890 473 34.1Table 1: Performance on the held-out test sets of GEOWIKI and GEOTEXT, comparing to the results of Wing andBaldridge (2011) and Eisenstein et al(2011).is likely to perform very poorly for the 1NN rule weadopt.
It would also require efficient similarity com-parisons, using techniques such as locality-sensitivehashing (Kulis and Grauman, 2009).The graphs in Figure 3 show development set per-formance when varying bucket size.
For GEOWIKIand UTGEO2011-LARGE (not shown), incrementsof 100 were used, but for the smaller GEOTEXTand UTGEO2011-SMALL, more fine-grained incre-ments of 10 were used.
In the case of plateaus, aswas common with the FRIEDMAN method, we chosethe middle of the plateau as the bucket size.
Overall,we found optimal bucket sizes of 100 for GEOWIKI,530 for GEOTEXT, 460 for UTGEO2011-SMALL,and 1050 for UTGEO2011-LARGE.
That theWikipedia data requires a smaller bucket size is un-surprising: the documents themselves are generallylonger and there are many more of them, so a smallbucket size provides good coverage and granularitywithout sacrificing the ability to estimate good lan-guage models for each partition.Node Division Method.
The graphs in Fig-ure 3 also display the difference between thetwo splitting methods.
MIDPOINT is clearly bet-ter for GEOWIKI, while FRIEDMAN is better forGEOTEXT in the range of bucket sizes produc-ing the best results.
FRIEDMAN is best forUTGEO2011-LARGE (not shown), but MIDPOINTis best for UTGEO2011-SMALL.These results only partly confirm our expecta-tions.
We expected FRIEDMAN to perform bet-ter on smaller datasets, as it distributes the doc-uments evenly and avoids many sparsity issues.We expected MIDPOINT to win on larger datasets,where all nodes receive plentiful data and the k-dtree would choose more representative geographicalboundaries.Cell Size.
Following W&B, we choose acell degree size of 0.1?
for GEOWIKI, and acell degree size of 5.0?
for GEOTEXT.
ForUTGEO2011-LARGE and UTGEO2011-SMALL,we follow the procedure of W&B, trying sizes0.1?, 0.5?, 1.0?, 5.0?, and 10.0?, selecting the onewhich performed best on the development set.
ForUTGEO2011-SMALL, this resulted in coarse cellsof 10.0?, while for UTGEO2011-LARGE, cell sizesof 0.1?
were best.With these tuned parameters, the average num-ber of training tokens per k-d leaf was approx-imately 26k for GEOWIKI, 197k for GEOTEXT,250k for UTGEO2011-SMALL, and 954k forUTGEO2011-LARGE.6.2 Held-out Test SetsTable 1 shows the performance on the test sets ofGEOWIKI and GEOTEXT of the different configu-rations, along with that of W&B and Eisenstein etal.
(2011) where possible.
The results obtained byW&B on GEOWIKI are already very strong, but wedo see a clear improvement by changing from thecenter-based locations for pseudo-documents theyused to the centroid-based locations we employ:mean error drops from 221 km to 181 km, and me-dian error from 11.8 km to 11.0 km.
Also, we reducethe mean error further to 176 km for the configu-ration that combines the uniform grid and the k-dpartitions, though at the cost of increasing medianerror somewhat.
The 161 km accuracy is around90% for all configurations, indicating that the gen-eral language modeling approach we employ is very1506Test dataset UTGEO2011Training dataset UTGEO2011-SMALL UTGEO2011-LARGEMethod Parameters Mean Med.
Acc.
Parameters Mean Med.
Acc.RANDOM 10?
1975 1833 2.3 0.1?
1627 1381 2.0MOSTCOMMONCELL 10?
1522 1186 9.3 0.1?
1525 1185 11.8Wing & Baldridge 10?
1223 825 3.4 0.1?
956 570 30.9UNIFCENTROID 10?
1147 782 12.3 0.1?
956 570 30.9KDCENTROID B460, MIDPT.
1098 733 18.1 B1050, FRIED.
860 463 34.6UNIFKDCENTROID 10?, B460, MIDPT.
1080 723 18.1 0.1?, B1050, FRIED.
913 532 33.0Table 2: Performance on the held-out test set of UTGEO2011 for different configurations trained onUTGEO2011-SMALL (comparable in size to GEOTEXT) and UTGEO2011-LARGE.
The numbers given for W&Bwere produced from their implementation, and correspond to uniform grid partitioning with locations from centersrather than centroids.robust for fact-oriented texts that are rich in explicittoponyms and geographically relevant named enti-ties.For GEOTEXT, the results show that the uniformgrid with centroid locations is the most effective ofour configurations.
It improves on Eisenstein et al(2011) by 69 km with respect to median error, buthas 52 km worse performance than their model withrespect to mean error.
This indicates that our modelis generally more accurate, but that it is compara-tively more wildly off on some documents.
Theirmodel is a sophisticated one that attempts to builddetailed models of the geographic linguistic varia-tion found in the dataset.
Dialectal cues are actuallythe most powerful ones in the GEOTEXT dataset,and it seems our general approach of winner-takes-all (1NN) hurts performance in this respect, espe-cially with a very small training set.Table 2 shows the performance on the test set ofUTGEO2011 with the UTGEO2011-SMALL andUTGEO2011-LARGE training sets.
(Performancefor W&B is obtained from their code.4) Withthe small training set, error is worse than withGEOTEXT, reflecting the wider geographic scope ofUTGEO2011.
KDCENTROID is much more effec-tive than the uniform grids, but combining it with theuniform grid in UNIFKDCENTROID edges it out bya small amount.
More interestingly, KDCENTROIDis the strongest on all measures when using the largetraining set, beating UNIFCENTROID by an evenlarger margin for mean and median error than with4https://bitbucket.org/utcompling/textgrounder/wiki/WingBaldridge2011the small training set.
The bucket size used with thelarge training set is double that for the small one,but there are many more leaves created since thereare 42 times more training documents.
With the ex-tra data, the model is able to adapt better to the dis-persion of documents and still have strong languagemodels for each leaf that work well even with ourgreedy winner-takes-all decision method.Note that the accuracy measurements for allUTGEO2011 experiments are substantially lowerthan those reported by Cheng et al(2010), whoreport a best accuracy within 100 miles of 51%.While UTGEO2011-LARGE contains a substan-tially larger number of tweets, Cheng et al(2010)limit themselves to users with at least 1,000tweets, while we have an average of 85 tweetsper user.
Their reported mean error distance of862 km (versus our best mean of 860 km onUTGEO2011-LARGE) indicates that their perfor-mance is hurt by a relatively small number of ex-tremely incorrect guesses, as ours appears to be.Figure 4 provides a learning curve onUTGEO2011?s development set for KDCENTROID.Performance improves greatly with more data,indicating that GEOTEXT performance would alsoimprove with more training data.
Parameters, espe-cially bucket size, need retuning as data increases,which we hope to estimate automatically in futureworkFinally, we note that the KDCENTROIDmethod was faster than other methods.
WhileUNIFCENTROID took nearly 19 hours to com-plete the test run on GEOWIKI (approximately15070e+00 1e+05 2e+05 3e+05 4e+059009501050Training Set Size (# users)Mean Error(km)lllllllFigure 4: Learning curve of KDCENTROID on theUTGEO2011 development set.1.38 seconds per test document), KDCENTROIDtook only 80 minutes (.078 s/doc).
Similarly,UNIFCENTROID took about 67 minutes torun on UTGEO2011-LARGE (0.34 s/doc), butKDCENTROID took only 27 minutes (0.014 s/doc).Generally, the KDCENTROID partitioning resultsin fewer cells, and therefore fewer KL-divergencecomparisons.
As expected, the UNIFKDCENTROIDmodel needs as much time as the two together,taking roughly 21 hours for GEOWIKI (1.52 s/doc)and 85 minutes for UTGEO2011-LARGE (0.36s/doc).7 Discussion7.1 Error AnalysisWe examine some of the greatest error distancesto better understand and improve our models.
Inmany cases, landmarks in Australia or New Zealandare predicted in European locations with similarly-named landmarks, or vice versa ?
e.g.
the TheatreRoyal, Hobart in Australia is predicted to be in Lon-don?s theater district, and the Embassy of Australia,Paris is predicted to be in the capital city of Aus-tralia.
Thus, our model may be inadvertently cap-turing what Clements et al(2010) call wormholes,places that are related but not necessarily adjacent.Some of the other large errors stem from incorrectgold labels, in particular due to sign errors in latitudeor longitude, which can place documents 10,000 ormore km from their correct locations.Word Error Word Errorparamus 78 6100 130ludlow 79 figueroa 133355 99 dundas 138ctfuuu 101 120th 13974th 105 mississauga 1405701 105 pulaski 144bloomingdale 122 cucina 146covina 133 56th 153lawrenceville 122 403 157ctfuuuu 124 428 161Table 3: The 20 words with least average error(km) in the UTGEO2011 development set, trainedon the UTGEO2011-SMALL training set, using theKDCENTROID approach with our best parameters.
Onlywords that occur in at least 10 documents are shown.Word Error Word Errorseniorpastor 1.1 KS01 2.4prebendary 1.6 Keio 2.5Wornham 1.7 Vrah 2.5Owings 1.9 overspill 2.5Londoners 2.0 Oriel 2.5Sandringham 2.1 Holywell 2.6Sheffield?s 2.2 \?vr&h 2.6Oxford?s 2.2 operetta 2.6Belair 2.3 Supertram 2.6Beckton 2.4 Chanel 2.7Table 4: Top 20 words with the least average er-ror (km) in the GEOWIKI development set, using theUNIFKDCENTROID approach with our best parameters.Only words occurring in at least 10 documents are shown.7.2 Most Predictive WordsOur approach relies on the idea that the use of certainwords correlates with a Twitter user or Wikipediaarticle?s location.
To investigate which words tendto be good indicators of location, we computed, foreach word in a development set, the average errordistance of documents containing that word.
Table 3gives the 20 words with the least error, amongthose that occur in at least 10 documents (users),for the UTGEO2011 development set, trained onUTGEO2011-SMALL.Many of the best words are town names (paramus,ludlow, bloomingdale), street names (74th, figueroa,1508120th), area codes (403), and street numbers (5701,6100).
All are highly locatable terms, as we wouldexpect.
Many of the street addresses are due tocheck-ins with the location-based social networkingservice Foursquare (e.g.
the tweet I?m at Starbucks(7301 164th Ave NE, Redmond Town Center, Red-mond)), where the user is literally broadcasting hisor her location.
The token ctfuuu(u)?an elongationof the internet abbreviation ctfu, or cracking the fuckup?is a dialectal or stylistic feature highly indica-tive of the Washington, D.C. area.Similarly, several place names (Wornham, Belair,Holywell) appear in GEOWIKI.
Operettas are a cul-tural phenomenon largely associated with France,Germany, and England and particularly with specifictheaters in these countries.
However, other highlyspecific tokens such as KS01 have a very low aver-age error because they occur in few documents andare thus highly unambiguous indicators of location.Other terms, like seniorpastor and \?vr&h, are dueto extraction errors in the dataset created by W&B,and are carried along because of a high correlationwith specific documents.8 ConclusionWe have shown how to construct an adaptive gridwith k-d trees that enables robust text geolocationand scales well to large training sets.
It will be inter-esting to consider how it interacts with other strate-gies for improving the IR-based approach.
For ex-ample, the pseudo-document word distributions canbe smoothed based on nearby documents or on thestructure of the k-d tree itself.
Integrating our systemwith topic models or Bayesian methods would likelyprovide more insight with regard to the most dis-criminative and geolocatable words.
We also expectpredicting locations based on multiple most similardocuments (kNN) to be more effective in predict-ing document location, as the second and third mostsimilar training documents together may sometimesbe a better estimation of its distribution than just thefirst alone.
Employing k Nearest Neighbors also al-lows for more sophisticated methods of location es-timation than a single leaf?s centroid.
Other possi-bilities include constructing multiple k-d trees usingrandom subsets of the training data to reduce sensi-tivity to the bucket size.In this article, we have considered each user inisolation.
However, Liben-Nowell et al(2005) showthat roughly 70% of social network links can be de-scribed using geographic information and that theprobability of a social link is inversely proportionalto geographic distance.
Backstrom et al(2010) ver-ify these results on a much larger scale using ge-olocated Facebook profiles: their algorithm geolo-cates users with only the social graph and signif-icantly outperforms IP-based geolocation systems.Given that both Twitter and Wikipedia have rich,linked document/user graphs, a natural extension toour work here will be to combine text and networkprediction for geolocation.
Sadilek et al(2012)also show that a combination of textual and so-cial data can accurately geolocate individual tweetswhen scope is limited to a single city.Tweets are temporally ordered and the geographicdistance between consecutive tweeting events isconstrained by the author?s movement.
For tweet-level geolocation, it will be useful to build on workin geolocation that considers the temporal dimen-sion (Chen and Grauman, 2011; Kalogerakis et al2009; Sadilek et al 2012) to make better predictionsfor documents/images that are surrounded by otherswith excellent cues, but which are hard to resolvethemselves.9 AcknowledgmentsWe would like to thank Matt Lease and the threeanonymous reviewers for their feedback.
This re-search was supported by a grant from the MorrisMemorial Trust Fund of the New York CommunityTrust.ReferencesRichard J. Anderson.
1999.
Tree data structures forn-body simulation.
SIAM Journal on Computing,28(6):1923?1940.Lars Backstrom, Eric Sun, and Cameron Marlow.
2010.Find me if you can: improving geographical predictionwith social and spatial proximity.
In Proceedings ofthe 19th International Conference on World Wide Web,pages 61?70.Jon Louis Bentley.
1975.
Multidimensional binarysearch trees used for associative searching.
Commu-nications of the ACM, 18(9):509?517.1509Chao-Yeh Chen and Kristen Grauman.
2011.
Clues fromthe beaten path: Location estimation with bursty se-quences of tourist photos.
In Proceedings of the IEEEConference on Computer Vision and Pattern Recogni-tion, pages 1569?1576.Zhiyuan Cheng, James Caverlee, and Kyumin Lee.
2010.You are where you tweet: A content-based approachto geo-locating twitter users.
In Proceedings of the19th ACM International Conference on Informationand Knowledge Management, pages 759?768.Martin Clements, Pavel Serdyukov, Arjen P. de Vries, andMarcel J.T.
Reinders.
2010.
Finding wormholes withflickr geotags.
In Proceedings of the 32nd EuropeanConference on Information Retrieval, pages 658?661.Sebastian Cobarrubias.
2009.
Mapping machines: ac-tivist cartographies of the border and labor lands ofEurope.
Ph.D. thesis, University of North Carolina atChapel Hill.Dorin Comaniciu and Peter Meer.
2002.
Mean shift: arobust approach toward feature space analysis.
IEEETransactions on Pattern Analysis and Machine Intelli-gence, 24(5):603?619.Junyan Ding, Luis Gravano, and Narayanan Shivaku-mar.
2000.
Computing geographical scopes of webresources.
In Proceedings of the 26th InternationalConference on Very Large Data Bases, pages 545?556.Jacob Eisenstein, Brendan O?Connor, Noah A. Smith,and Eric P. Xing.
2010.
A latent variable modelfor geographic lexical variation.
In Proceedings ofthe 2010 Conference on Empirical Methods in Natu-ral Language Processing, pages 1277?1287.Jacon Eisenstein, Ahmed Ahmed, and Eric P. Xing.2011.
Sparse additive generative models of text.
InProceedings of the 28th International Conference onMachine Learning, pages 1041?1048.Jerome H. Friedman, Jon Louis Bentley, and Raphael AriFinkel.
1977.
An algorithm for finding best matchesin logarithmic expected time.
ACM Transactions onMathematical Software, 3:209?226.James Hays and Alexei A. Efros.
2008. im2gps: esti-mating geographic information from a single image.In Proceedings of the IEEE Conference on ComputerVision and Pattern Recognition, pages 1?8.Evangelos Kalogerakis, Olga Vesselova, James Hays,Alexei Efros, and Aaron Hertzmann.
2009.
Image se-quence geolocation with human travel priors.
In Pro-ceedings of the IEEE 12th International Conference onComputer Vision, pages 253?260.Sheila Kinsella, Vanessa Murdock, and Neil O?Hare.2011.
?I?m eating a sandwich in Glasgow?
: Model-ing locations with tweets.
In Proceedings of the 3rdInternational Workshop on Search and Mining User-generated Contents, pages 61?68.Brian Kulis and Kristen Grauman.
2009.
Kernelizedlocality-sensitive hashing for scalable image search.In Proceedings of the 12th International Conferenceon Computer Vision, pages 2130?2137.David Liben-Nowell, Jasmine Novak, Ravi Kumar, Prab-hakar Raghavan, and Andrew Tomkins.
2005.
Geo-graphic routing in social networks.
Proceedings of theNational Academy of Sciences of the United States ofAmerica, 102(33):11623?11628.Jay M. Ponte and W. Bruce Croft.
1998.
A languagemodeling approach to information retrieval.
In Pro-ceedings of the 21st Annual International ACM SIGIRConference on Research and Development in Informa-tion Retrieval, pages 275?281.Adam Sadilek, Henry Kautz, and Jeffrey P. Bigham.2012.
Finding your friends and following them towhere you are.
In Proceedings of the 5th ACM Inter-national Conference on Web Search and Data Mining,pages 723?732.Jagan Sankaranarayanan, Hanan Samet, Benjamin E.Teitler, Michael D. Lieberman, and Jon Sperling.2009.
Twitterstand: news in tweets.
In Proceedingsof the 17th ACM SIGSPATIAL International Confer-ence on Advances in Geographic Information Systems,pages 42?51.Pavel Serdyukov, Vanessa Murdock, and Roelof vanZwol.
2009.
Placing flickr photos on a map.
In Pro-ceedings of the 32nd International ACM SIGIR Con-ference on Research and Development in InformationRetrieval, pages 484?491.Benjamin Wing and Jason Baldridge.
2011.
Simple su-pervised document geolocation with geodesic grids.In Proceedings of the 49th Annual Meeting of the As-sociation for Computational Linguistics: Human Lan-guage Technologies, pages 955?964.Chengxiang Zhai and John Lafferty.
2001.
A study ofsmoothing methods for language models applied toad hoc information retrieval.
In Proceedings of the24th Annual International ACM SIGIR Conference onResearch and Development in Information Retrieval,pages 334?342.1510
