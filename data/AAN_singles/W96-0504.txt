DRAFTERCrcile Pads" and Keith Vander Linden tInformation Technology Research InstituteUniversity of BrightonBrighton BN2 4AT, UKemail."
{ clp,knvl} @itri.bfighton.ac.ukWeb Page: hap://www.itri.bfighton.ac.uk/projects/drafterDRAFTER is an interactive tool designed to as-sist technical authors in the production of Englishand French end-user manuals for software sys-tems.
Unlike current generation systems, whichaim at the automated production of instructionsand thus keep the authors out of the loop, Drafteris a support ool intended to be integrated in thetechnical author's working environment, hope-dally automating some of the more tedious aspectsof the authors' tasks.As with any generation system, Drafter equiresa semantic knowledge base from which text canbe generated.
While Drafter obtains as much asit can of this knowledge base automatically fromexternal sources, italso allows the authors to spec-ify the portions that cannot be acquired automat-ically, and provides for a parallel development ofknowledge base and natural language text.The Drafter architecture is based on a user re-quirements analysis (Power et al, 1994).
Asshown in Figure 1, the system contains two mainmodules:?
A developer's tool: This allows tech-nical authors to specify formally theprocedures necessary for the user toachieve their goals, thus supportinguser-oriented instructions.
It also al-lows them to control the drafting pro-cess.
* Starting this Fall, Dr. Paris' address will be CSIRO,Division of Information Technology, Sydney Laboratory,Building E6B, Macquarie University Campus, North Ryde,Sydney, NSW 2113, Australia.tArter September 1, Dr. Vander Linden's addresswill be Department of Mathematics and Computer Sci-ence, Calvin College, Grand Rapids, MI 49546, USA,kvlinden@calvin.edu.?
The automated rafter: This com-prises two major components: the textplanner (or strategic planner) and thetactical generator.
The text planner de-termines the content and structure of thetext, and the tactical generator performsthe realization of the sentences.
The re-sult is English and French drafts of theinstructions for the procedures definedso far by the author using the devel-oper's tool.Underlying the processing components is a Do-main knowledge base, which is the main repos-itory of information about the domain.
Thisknowledge base is implemented in Loom (Mac-Gregor, 1988).Walkthrough of the SystemIn this demo, we illustrate how a technical au-thor would work with DRAFTER.
Our exampleinvolves defining the procedure for saving a newfile in a Microsoft Word-like text editor, and thento generate text for that procedure.
It is easi-est for the technical writer if the process startsby defining the interface to be documented withsome interface building tool.
To show the feasi-bility of this approach, we implemented parts ofthe text editor's functions in VisualWorks (Visual-Works, 1994), a widely available interface designenvironment.Drafter then has facilities for reading the in-terface definition produced by VisualWorks inSmalltalk, and finding all the objects relevant forthe generation of the instructions.
It can also in-fer some of the actions involved in using these13Author  ?Developer'sToolKnowledge 1EditorKnowledge 1VisualiserDraft Text 1ViewerIInterfaceDesignSpecificationDomain Knowledge BaseT-box (terminology) - /  ~_It .
.
.
.
I .
.
.
.
.
i .
.
.
.
.
.
.
.
t .
.
.
.
.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
i i A-box (assertions) I ~:~ ,0 oAutomated DrafterText Planner~ - ~  Planning Engine \]Tactical GeneratorSentence PlannerSurface RealisationFigure 1" Block Diagram of the Architectureobjects.
It uses this information to define a setof object and action entities in the Drafter knowl-edge base for use in text generation.
These actionsand objects can then be used by the technical au-thor as building blocks to specify tasks (Paris andVander Linden, 1996a).
Clearly, however, theentities acquired automatically are not all that isneeded to document the interface properly.
Be-cause of this (and because of the potential for theuser to be without a supported interface designtool like VisualWorks), Drafter provides a man-ual definition facility.
This facility is based on anEnglish pseudo-text grammar (Paris and VanderLinden, 1996b), which allows the author to use arelative simple pseudo-text to specify a complexconfiguration of action and object entities and therelations between them.Once the action nodes of the graph have beencreated, or perhaps while they are being cre-ated, the author has the ability to link them to-gether using a set of predefined procedural rela-tions: goal, precondition, sub-action, side-effect,warning, and cancellation.
This is done in theworkspace, with a graphical outlining mechanism.This mechanism allows authors to drag actionsfrom the ACTIONS pane and drop them on the var-ious procedural relation slots in the workspacepane, or, alternatively, tocreate new actions to fillthe slots.
The result is a procedural hierarchy suchas the one shown in outline form in Figure 2.In this screen, the WORKSPACE pane containsthe procedure being documented in an outline for-mat.
The outer box represents he main user goalof saving a document, a goal which is achievedby executing all the actions inside the box.
It con-tains a single method specifying a cancellation14INTERFACE WORKSPACEs~r~e nrt~Cr~, aane.n~entSaw Changes WindowCancel Button ~ , ' 1  .... ..... ~,, .
Cmce~a~ lou#s~e~ ~ 1Save As File Window ilDlre?toryflsUng Scrolling LSave ButtonCancel ButtonMicrosoft Word WindowSave File ButtonrdACTIONSs~,~ arn/tran, oo~ment ~tQu# Save A,~ File WindowClick On Cancet Button )~l~J ..... (Choo,,~SaveOpticnFro, CancellaUon MethodClick On Save File ButtsType Name Of Arbitrary D~ Open Save As Method 1Click On Save Button Open Save As Method 2Click On No Sutton Save Document MethodClick On Yes ButtonC/ase Micro~tt Word WlndotCIC~ Save As File Windo~CIC~ Save Changes WindowOpen Microsoft Word Windo~ ~Open Save Changes WindowChoose Exit Option From File "~Start Te~ Wold ProgramOuff Test Word Program ;~ |t~ta ~ ccuak a\[7!FOCUSo~,~F~.~.,.
I~ ?
:~1 own .~,e ~ y~.tt~ I !~.
opensaveAsAcetnoaelg\]Figure 2: Procedural hierarchy for Saving a fileaction (i.e., that the Save-As File window may beclosed by performing a particular method), anda set of sub-steps (i.e., opening the Save-As Filewindow, typing the name of the file and clickingthe save button).Once a procedure is defined, the AutomatedDrafter takes the procedure specified with the De-veloper's Tool and produces text expressing thatprocedure.
The text generation i Drafter is sup-ported by the reuse (and extension) of three pre-existing tools:?
The Moore and Paris Text Planner(Moore and Paris, 1993);?
The IMAGENE Sentence Planner (VanderLinden and Martin, 1995);?
The  KPML tactical generator (Bateman,1996).The first two tools operate in sequence, plan-ning, respectively, the high-level rhetorical struc-ture of the text and the low-level grammaticaldetails of the sentences.
When this is finished, theKgML generator is called, once for each sentence,to produce the actual text.
The text is produced inEnglish and in French.
We are largely using theNigel grammar for English (Mann, 1985), but aredeveloping within the KPML enviroment a gram-mar for French.
One of the texts produced for theSave a File procedure is shown in Figure 3.AcknowledgementsDRAFTER also involves two industrial partners:Integral Solutions Limited (ISL), a sofrware com-pany specialising in artificial intelligence prod-ucts, and Praetofius Ltd., a leading translationand technical writing consultancy specialising insoftware documentation.
Other members of theproject include Anthony Hartley, Markus Fischer,Lyn Pemberton, Richard Power and Donia Scott.15English:To Save a Document1.
Open the Save As File window, bychoosing the Save option on the file menuor by clicking on the Save File button.2.
Type a name in the Filenamestring field.3.
Click on the Save button.You can quit the Save As dialog box byclicking on the Cancel button.French:Enregistrement d'un document1.
Ouvrir la fen&re Save As File, en choisissantl'option Save sur le menu File ou en cliquaat surle bouton Save File.2.
Introduire un titre dans la zone de texte File-narnestring.3.
Cliquer sur le bouton Save.Vous pouvez quitter la fen&re Save As File encliquant sur le bouton Cancel.Figure 3: Generated English and French DraftsWe are also grateful to Jon Barber who assisted inthe implementation f this system.This work is partially supported by the Engi-neering and Physical Sciences Research Coun-cil (EPSRC) Grant J19221, by BC/DAAD ARCProject 293, by the Commission of the EuropeanUnion Grant LRE-62009, and by the ONR grantN00014-96-1-0465.ReferencesBateman, J.
A.
(1996).
KPML DevelopmentEnv i ronment-  multilingual inguistic re-sources development and sentence genera-tion.
Technical report, Institut far Integri-erte Publikations- und Informationssysteme(IPSI), GMD, Darmstadt.
Release 0.9.MacGregor, R. (1988).
A Deductive PatternMarcher.
In Proceedings of the 1988 Confer-ence on Artificial Intelligence, St Paul, MN.American Association of Artificial Intelli-gence.Mann, W. C. (1985).
An introduction to theNigel text generation grammar.
In Benson,J.
D., Freedle, R. O., and Greaves, W. S.,editors, Systemic Perspectives on Discourse,volume 1, pages 84-95.
Ablex.Moore, J. D. and Paris, C. L. (1993).
Planningtext for advisory dialogues: Capturing in-tentional and rhetorical information.
Com-putational Linguistics, 19(4):651---694.Paris, C. and Vander Linden, K. (1996a).
BuildingKnowledge Bases for the Generation of Soft-ware Documentation.
In Proceedings of the16th International Conference on Compu-tational Linguistics (COLING-96), Copen-hagen, Denmark.Paris, C. and Vander Linden, K. (1996b).
Drafter:An interactive support ool for writing mul-tilingual instructions.
IEEE Computer.
toappear.Power, R., Pemberton, L., Hartley, A., and Gor-man, L. (1994).
User requirements analysis.Technical report, ITRI.
WP2 Deliverable,Drafter Project IED4/1/5827, financed by theEngineering and Physical Sciences ResearchCouncil (EPSRC) Grant J 19221.Vander Linden, K. and Martin, J. H. (1995).
Ex-pressing local rhetorical relations in instruc-tional text: A case-study of the purpose rela-tion.
Computational Linguistics, 21(1):29-57.VisualWorks (1994).
The VisualWorks Documen-tation.
ParcPlace Systems, Inc., 999 E. Ar-ques Avenue, Sunnyvale, CA 94086-4593.16
