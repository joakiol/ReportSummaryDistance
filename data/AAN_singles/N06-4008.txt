Proceedings of the Human Language Technology Conference of the NAACL, Companion Volume, pages 280?283,New York City, June 2006. c?2006 Association for Computational LinguisticsAutomating the Creation of Interactive Glyph-supplemented Scatterplots forVisualizing Algorithm ResultsDinoj SurendranDepartment of Computer ScienceUniversity of Chicagodinoj@cs.uchicago.eduAbstractNdaona is a Matlab toolkit to create in-teractive three-dimensional models of dataoften found in NLP research, such as ex-ploring the results of classification and di-mensionality reduction algorithms.
Suchmodels are useful for teaching, presen-tations and exploratory research (such asshowing where a classification algorithmmakes mistakes).Ndaona includes embedding and graph-ics parameter estimation algorithms, andgenerates files in the format of Partiview(Levy, 2001), an existing free open-sourcefast multidimensional data displayer thathas traditionally been used in the plane-tarium community.
Partiview1 supports anumber of enhancements to regular scat-terplots that allow it to display more thanthree dimensions?
worth of information.1 Supplemented ScatterplotsScatterplots are not the most efficient way of repre-senting information (Grinstein et al, 2001).
How-ever, they are intuitive and stable (Wong and Berg-eron, 1997), and can be supplemented in severalways.
We describe some of these augmentations inSection 1, basic Ndaona usage in Section 2, and fi-nally a couple of some embedding methods in Sec-tion 3.1http://niri.ncsa.uiuc.edu/partiviewFigure 1: Regular and glyph-supplemented scat-terplots showing how a linear kernel can separatehappy and sad faces from the Frey Face dataset.1.1 GlyphsGlyphs are icons that provide a visual representa-tion of a datum.
A simple example of a glyph isa filled-in circle whose color and size convey twoadditional dimensions of information.
More com-plex examples have been designed to present moreinformation (Tukey and Tukey, 1981) (Ward, 2002).Partiview can use any image as a glyph, as long asall images used can fit in graphics memory.For example, Figure 1 shows faces from the FreyFace Dataset2 in linear kernel space; two faces areclose together then the vectors u and v representinghave a high value of uT v. In this case, each point hasa natural visual representation ?
the face itself.
Andwe therefore use the faces as lossless glyphs, witheach glyph representing a 560-dimensional vector(20 x 28 pixel image).A second example is in Figure 2.
It shows Man-darin syllables in a tone recognition experiment(Surendran et al, 2005), with two syllables close2Thanks to Sam Roweis for placing this data on his site.280Figure 2: A close-up screenshot of a 3D glyph-supplemented scatterplot showing the performanceof a linear Support Vector Machine (SVM) on a4-way Mandarin syllable tone classification task.Ndaona embedded syllables so that those classifiedsimilarly by the SVM are close together.
The glyphfor each syllable represents the 20-dimensional vec-tor input to the SVM.
Syllables with the same toneare represented by glyphs of the same color; thewhite syllables in the foreground have falling tone.together if the classification algorithm made simi-lar predictions of their tone.
The algorithm receivedfor each syllable a 20-dimensional vector that de-scribed its normalized pitch contour of the syllable.In this case, a histogram of the pitch contour, withthe area between the pitch contour and the horizon-tal axis shaded for enhanced visibility, results in ahighly informative glyph.A close-up look at the low tone syllables revealsthat the algorithm ?thinks?
that any syllable whosepitch contour decreases towards the end has a fallingtone which is what linguists expect.
We can alsotell that many of the mistakes made by the algorithmare due to the features and not the algorithm itself.For instance, the several high tone syllables that areclose to the cluster of low-tone-syllables (and wouldthus be classified as having low tone by the algo-rithm) do in fact have a falling pitch contour.1.2 Three DimensionsPartiview users can smoothly spin, zoom, and movethe 3d scatterplot model even when it contains hun-dreds of thousands of points.
Interaction and motiondeal with difficulties (described in the informationvisualization and statistical graphics literature) of vi-sually estimating distances when a third dimensionis used (Jacoby, 1998).1.3 GraphsWhile Partiview is not the best software for display-ing graphs, it can display lines of varying width andcolor.
This permits two bits of information to be dis-played about binary relations between points.1.4 Information about pointsWhile text labels can be placed at points, this oftenresults in visual clutter.
It is better to give the userthe option of only having labels displayed when ac-tively requested.
This option is called ?linking?.Partiview has some linking capability.
When auser clicks on a point (and presses ?p?
), the com-mand window displays information about it, suchas its position, several features, and any ?comment?provided by the user.
For example, Figures 3 and4 show the results of a 13-class dialog act classifica-tion task ?
the user supplied as comments the wordssaid during each dialog act.
Some of these can beseen in the command window of each screenshot.1.5 BrushingBrushing is the ability for users to select subsetsof data points and apply certain operations to them,such as toggling their visibility (masking), changingtheir color or size (Becker and Cleveland, 1987).Partiview supports this very well, and it is possi-bly the most important feature available for data ex-ploration.
For example, we can change the colors ofpoints to be that of any attribute of the data, includ-ing its original features.
This helps investigate whatoriginal features the algorithm is actually using.For example, in Figure 3 color represents class,while in Figure 4 color represents duration.
Thecolor could just as easily be changed to repre-sent other attributes of the data; Ndaona estimatesPartiview parameters required for consistent behav-ior across attributes by normalizing the color mapfor each attribute.1.6 AnimationPartiview supports animated data.
Ndaona has beenwritten so that one can deal with various combina-281tions of static and dynamic (time-varying) graphicalelements, such as fixed points and varying edges, ordynamic points and fixed edges (i.e.
the edges al-ways join the same points), or both dynamic pointsand edges, fixed points and dynamic attributes, andso on.
The only difference to the user is that s/heprovides a cell array (list) of matrices for the dy-namic element instead of a single matrix.Figure 3: Partiview screenshot of a Ndaona-mademodel showing the result of a dialog act classifica-tion algorithm.
Each point represents a dialog act,and all acts of the same type are colored identically.2 UsageFor flexibility of input, arguments to Ndaona aresupplied in parameter-value pairs.
For example, sayP is a N ?
3 matrix representing the 3D coordinatesof N points and Q is a list of N images representingthe glyphs of each point.
Ndaona includes tools tocreate such images, or the user can provide theirown JPEGs.
Either of the equivalent commandsndaona(?POSITIONS?,P,?PICTURES?,Q)ndaona(?POS?,P, ?PICS?,Q)creates a 3D model with the pictures in Q repre-sented at the positions for each point, such as thatin Figures 1 and 3.
Graphics parameters controllingpicture sizes are automatically estimated by Ndaona.Now suppose that the N points have time-varyingpositions.
Making P a list of N ?
3 matrices andFigure 4: As for Figure 3 but now color representsduration.
Shorter acts (top left) are green.using the same command as above creates a time-varying scatterplot with the images moving about.If this was classification and the true class of eachpoint is stored in a N -dimensional vector L, thenndaona(?POS?,P,?PICS?,Q,?CLASS?,L)creates the 3D model with the pictures coloredby class, with the same color for points of the sameclass, such as that in Figure 2.
Also, Partiviewprovides a button for each class that toggles thevisibility of data points in that class.
If each pointhas A attributes stored in a N ?A matrix F, thenndaona(?POS?,P,...,?ATTRIBUTES?,F)creates a model as before, but with brushing avail-able.
The colors of each point can be changed ac-cording to the r-th attribute by typing ?color ar?,where ar is the automatically assigned name for ther-th attribute.
(Users can provide attribute nameswith another parameter-value pair.
)If the N points also form the nodes of a (con-nected or not) graph with Ne edges, then if theedges are represented by a Ne?3 matrix or a sparseNe ?Ne matrix G, the commandndaona(?POS?,P,...,?EDGES?,G)282creates the same scatterplot, overlaid with edges.Additional parameter-value pairs in Ndaona canbe used to fine-tune graphics parameters, create filesin directory structures that are easy to compress anddistribute, change background color, etc.3 Embedding into Three DimensionsWhen visualizing the results of algorithms, usersmay not have a three-dimensional embedding al-ready available.
However, algorithms have been pro-posed to produce such embeddings, and we now de-scribe some of those available in Ndaona.
Ndaonaalso implements basic dimensionality reduction al-gorithms such as Principal Components Analysis,Laplacian Eigenmaps, and Isomap.3.1 Classification ProbabilitiesIf users have a N ?K matrix S of prediction proba-bilities from a K-class classification algorithm, withS(n, k) having the probability (estimated by the al-gorithm) that the n-th point is in class k, then thiscan be supplied instead.Ndaona uses the Parametric Embedding algo-rithm (Iwata et al, 2004) to find a low-dimensionalembedding of the N points so that pairs of pointsthat were given similar predictions by the classifica-tion algorithm (i.e.
have low Kullback-Leibler dis-tance between their prediction probability distribu-tions) are closer together.3.2 Kernel MatricesSupport vector machines (SVMs) and related meth-ods depend on pairwise similarities of points, in theform of a kernel matrix whos (i, j)-th entry rep-resents the similarity of the i-th and j-th points.Shawe-Taylor and Christianini (2004) suggest usingthe eigenvectors corresponding to the three smallestpositive eigenvalues of the Laplacian of the N ?Nkernel matrix to define a N ?
3 positions matrix.Ndaona implements an alternative that, in our expe-rience, works better ?
using the normalized Lapla-cian of the kernel matrix (with negative entries re-placed by zero).4 ConclusionNdaona is an interface package that helps reearchersproduce compelling visual representations of theirdata.
Its output is a (time-varying) 3d model thatcan be displayed by Partiview, an external dataviewer.
Future plans include adding more scal-able embedding algorithms, and allowing other out-put formats.
Ndaona, documentation, and exam-ples of models created with it, can be found athttp://people.cs.uchicago.edu/?dinoj/ndaonaReferencesR A Becker and W S Cleveland.
1987.
Brushing scatter-plots.
Technometrics, 29(2):127?142.G Grinstein, M Trutschl, and U Cvek.
2001.
High-dimensional visualizations.
In Proceedings of the 7thData Mining Conference-KDD.T Iwata, K Saito, N Ueda, S Stromsten, T L Griffiths,and Joshua B Tenenbaum.
2004.
Parametric embed-ding for class visualization.
In Advances in NeuralInformation Processing Systems 17.William G. Jacoby.
1998.
Statistical Graphics for Vi-sualizing Multivariate Data.
Sage University PapersSeries on Quantitative Applications in the Social Sci-ences 07-120, Thousand Oaks, CA.Stuart Levy.
2001.
Interactive 3-d visualization of par-ticle systems with partiview.
In Astrophysical Su-percomputing Using Particles (I.A.U.
Symposium Pro-ceedings), volume 208, pages 85?91.
International As-tronomical Union.John Shawe-Taylor and Nello Cristianini.
2004.
KernelMethods for Pattern Analysis.
Cambridge UniversityPress.Dinoj Surendran, Gina-Anne Levow, and Yi Xu.
2005.Tone recognition in mandarin using focus.
In Proceed-ings of the 9th European Conference of Speech Com-munication and Technology.P A Tukey and J W Tukey.
1981.
Summarization;smoothing; supplementing views.
In Vic Barnett, ed-itor, Interpreting Multivariate Data, pages 245?275.John Wiley and Sons.Matthew O.
Ward.
2002.
A taxonomy of glyph place-ment strategies for multidimensional data visualiza-tion.
Information Visualization, 1(3/4):194?210.Pak Chung Wong and R Daniel Bergeron.
1997.Thirty years of multidimensional multivariate visual-ization.
In Gregory M Nielson, Hans Hagan, andHeinrich Muller, editors, Scientific Visualization -Overviews, Methodologies and Techniques, pages 3?33, Los Alamitos, CA.
IEEE Computer Society Press.283
