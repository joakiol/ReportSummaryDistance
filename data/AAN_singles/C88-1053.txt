CI%X T~'EI~ : a t rans la t ion :  sys t~ fo~'agr i cu l tu ra l  market  ~epo~:'t sP ie r re  \]~ sabe l leMarc l)ymetmanE l l i o t t  Mack lov i t  chCent re  Canad ien  de Recherches  sur\] ~ In format i sa t ion  du Trava i l157.5 Boul?
ChomedeyLava l  ~ QuebecCANADA }YTV 2X2ABS'I I~CTThe CRFlq'I~R system is being developed to translate agriculturalmarket reports between English and French.
It is based on atransfer mc~lel, and designed to be reversible.
The source andtarget language texts are described by means of: a) a surfacesyntactic representation consisting of a tree annotated with featurestructures, built by an extraposition grammar; and b) a semmtticrepresentation exhibiting predicate argument structures andconstrained by type checking, built in parallel with the syntacticstn~cttn'e in compositional fashion.
CRrVIqERS's implementationis still incomplete, but results obtainext so far are promising.
"IOPIC AREAS: Machine translation, Logic Cn'ammars.1.
Our al)pro~tch tothe translation problemWe are currently developing a translation system with twomain objectives in mind: (a) to effectively translate from English toFrench (and conversely) a real life corpus of texts in a restrictedsublanguage <Kittredge & Lehrberger, 1982>; and (b) to provide atestbed for a theoreticaUy motivated translation model: insofar aspossible, design choices should integrate recent advances inlinguistic and semantic theory.The corpus that we are using for our currentexperimentation is comprised of weekly reports produced by theCanadian Delmrtment ofAgriculture, describing the situation of thelivestock and meat rade market in the different Canadian provinces.The following excerpts provide a short sample of the language ofthese reports:Imports of slaughter cattle from the United States lm't weekdropped 62% compared to tire previous week, totalling 334 steersand 50 heifer,<lit semaine dernidre, les importations de bovins d'atmttageout chutg de 62% en regard de la semaine pr~c~dente, otalisant 334bouvillom et 50 taures.In te~ ms of its general structure, our translation model maybe viewed as being composed of three abstract relations:(i) the source analysis/synthesis relation:anasynt s (TS ,  SurfSyn S, Sent S)which defines a set of welloformed triples, where T. S is a scarcelanguage text, SnffSy~t.S and and Sem_S are mspcclivcly asurfacesyntactic strnctaru and a semantic structure for this text, both beingsource language dependent;(ii) the target analysis\]synthesis relation:attasyntt(T_T, SurfSyn_T, Sem T)which is the attalogue of anasynt_ s tbr the target hmgtmge; and(iii) the tnmsfe, r relation:tr(Sent.S, Sere_T)which defines a set of couples, whore Seres  and ScmT arcrespectively source and target senmntic structures that areconsidered to be translationally equivalent.The anasynt_s and anasynt t relations arc formally andcomputatioually described using the-framework of extrapositiongrammars <Pereim 1981>, while the ~'r elation is defined through aset of definite clauses.
An important featm'c of our approach is thateach of these anasynt relations is in fact reversible (cf thereversibility condition of <Landsbergen 1987>).
Practicallyspeaking, this means that a single system is usable for both Englishto French and French to English translation.
From a theoreticalviewpoint, reversibility is a strong criterion of linguistic adequacyfor a grammar.
Typical existing parsers are based on granmmrs that(sometimes grossly) overgenerate: the grammar writer assumcs ahigh degree of well-tonnedness in the input text.
Conversely,typical existing generators tend to undergenerate: the grammarwriter makes arbritrary choices in the parapt!rasc system of thelanguage.
A reversible grammar is of necessity closer toobservational adequacy.2.
RepresentationsThe CRITTER system assigns each textual unit arepresentation that describes both its form (graphological,morphological, syntactic) and its semantic content.2.1 Syntactic RepresentationsThe syntactic representation associated with a textual objectis a fairly standard surface structnre tree which may include tracesin places where a (long-distance) dependency holds between somedisplaced phrase and a gap.
Since we adopt a monostratal view ofsyntax, no other level of syntactic representation is tn'ovided for.The representation scheme is based on a variant of the featurestructure approach (Sag & al., 1986).
Each node of the sm fi~ce treeis represented asa feature structure which includes, among others,cat ~md aughters attributes.Using familiar tree notation, our current grammars wouldassign sentence (2.a) the representation (2b):(2.a) Last week, hog prices in Saskatchewan i creased 5% at$69.00.2gl(2.b)odv_padplast tueek'$np <NI3R: plur,...:> upPhogi<NI31R: plur,TENSE: pasl, 8UI\]CKf: .. >~.
'~,_.,:NBR: plur,TE N.qE: pasl, SO.AT..,> ,~  ~"~-~'~"-b.illeas_p" 1 nP <NBR: plur, <TYPE: proNr..:> TENSE: past, $UBCAT: ..:> nI IYPE: proNr,...> peicenlprices in Saskatchewan increased 5%PPp me~s_ppriceThis structure is more or less in line with current syntactic theories.Note that it reflects a three-level X-bar convention.
Occasionally,idiosyncratic features are adopted so as to account for thepeculiarities of the sublanguage we are dealing with.
This is thecase for the complements measw and pp under v', which do notcorrespond to the usual subcategorization pattern for the verb'increase'.2.2 Semantic representationsFormally, our semantic representations are trees -- or moreexactly, directed acyclic graphs, for structure-sharing is allowed incases of coreference -- in which nodes are labelled with semanticunits that often, but need not, correspond to the lexemes of thelanguage represented.
We introduce abstract semantic units toaccount for some lexical gaps, morphologically marked semanticnotions, etc.
The arcs are labelled either by argument numbers (1),(2), (3) ..... or by "inverse" argument numbers (inv-1), (inv-2) ....The interpretation of this notation is made easier if oneconsiders as an example the semantic structure in Figure (a), whichis associated with sentence (2.a): "Last week, hog prices inSaskatchewan i creased 5% at $69":i nc rease(inv-l) 13)11) 695l as tweek  ~ 5%price.
{i) (inv-l)hog AtI(2)saskatchewanFigure (a)262In this structure:- 'At', '5%', '695' are abstract semantic units;- 'lastweek' is treated as a single unit, which is justified by thefact that it plays the role of a frozen indexical in our sublanguage(as 'yesterday' does in the standard language);- the (1), (2), (3) labels correspond to argument positions, eitherof predicates (like 'increase', treated as; a 3-place predicate) or offunctions (such as 'price', which takes a commodity as firstargumen0;the (inv- 1) labels correspond to "inverted" argument relations,which implies that 'increase' is in first argument position relative to'lastweek', and that 'price' is in first argument position relative to'At', ('Saskatchewan' being the second argument of 'At').Labels of the "inv" kind are a notational device whichmakes it possible to simultaneously read two representational levelsoff a single semantic structure: a first level which expressespredicate-argument relations; and a second level which isreminiscent of the subordination of syntactic groups.
Thus' lastweek' is a syntactic dependent of ' increased', and 'inSaskatchewan' is a syntactic dependent of 'prices'.
There are tworeasons for choosing to reflect subordination in the semanticstructure: first, we want to maintain a treelike character for thesemantic structure (unique root, no cycles).
This is technicallyrelated to the fact that transfer o'ucially depends on a root-to-leavesrecursive traversal of semantic structures.
Second and much moreimportant is the fact that subordination does have semanticalimport, although in a way which is not eun'ently very wellunderstood.Semantic structures have to obey a well-formednesscriterion, which consists of the checking of semantic typeagreement between a predicate (or functional) node in the stractnr(~and its argument nodes.
Defining semantic well-formednessinvolves a semantic lexicon, a semantic type subsumptionhierarchy, and semantic well-Jbrmedness rules.
These ax~ brieflydescribed in sections 3.3 and 4.3 below.3.
~Ilae lexiconCRITI 'ER's lexical component is made up of a basicdictionary of morpho-syntactie l xieal units; a rule componentwhich extends the morpho-syntactic dietionmy; and a dictionea'y ofsemantic-level units.3,1 The morgho-syntacfic d etionm-yThis dictionary lists lexical items in citation form andassigns them morphological nd syntactic properties.
It is alsoresptmsible for effecthlg the trmpping of these lexical milts onto thesemanfiedevel units, whose properties are described iu a sepm~atedictionary.
Moq,hological p;operties include an inflectional classand an indication of any morpho-.synctactic idiosyncrasies.Syntactic W~Perties ~tft~ etnN~rised ofa subcategorizationfra~tw mida collection of syntactic feattu'es.
The subcategorization frame of alexical head describes the number and syntactic type of the phrasesgoverned by that head?
These fiames refer directly to positions inserrate s~ructm'e~ sim;c this is the only level of syntacticrepresentation admitted in our systenL Vcrbs, for example, can henlarked fbr a maximum of three positions: a subject and up to twoeo/nplemeilt:;.The mapping onto sematltic units is effected by associatingeach lexi(:a) ~mtry wilh a semantic schema.
This schema is made up~J a semantic refit (represented asa \[imcto:\[' with a fixed arity), anda~ i~Micatio~ of the ~elatiom;hip of the arguments to lhe lexica\]unit's syntae,i(: dependents.hi each lcxical cnhy, this complex of morphological,syatactie md setnantie :infi)rmation is specified as a featuresttuettue.
'it'~fis feature st~uetmg is cucoded as a Prolog term thatwc deserxbe indirectly, by means of predicates which access therelevam athibute values.
For example, the syntactic and semanticproperties el the verb 'promise' coukt be represented asa term T,described as \[bllows:(3.a)eitat,on .tbnn(T, promise),subcat(T, \[NPI, NP2, VCOMP\]),cat(NPl, up),sere form(NPl, A),cat(N P.2, up),sere fonn(NP2, B)~cat(VCOMP, vp)0vfo~:J n(VCOMP, infinitive),sere .folm(VCOMP, C),con|yol(VCOMP, NPI)~sere..term(T, promise'(A~ B, C))The predicates citadon form, ca6subcat and sem formsimply acce:;:; the value of an attribute of the same name in the termT.
The subc:q attribute h~Ls a value of the list type, as i~, <Poll,'u'd &Sag (1988):~ Syntactic ~ules will unify the elements of this listwith the complements of the lexical head, thereby entbrcing theappropriate ~uhcategorization restrictions (e.g.
the "cat" of thesceond complement of 'promise' is vp).
'\['ak~ n together the subcat and sen(form attributes accountfi)r an essential part of the syntax/semantics mapping.
According tothe description given for 'pronrise', the semantic objects associatedwith the sut~iect, he object and the infinitival complement arerespectively mapped onto the first, second and third argument ofthe semantic predicate promise'.All Ihe resources of clausal ogic can be invoked to enforcecomplex relationships between sevenfl feature structures.
Forexample, the predicate conCrol used in (3.a) above is defined insuch a way a'.
; to ensur~ that the sere.
jbrm and agree values of thecontroller mttch those of the subject slot in the subcat of thecommlled w:~ b phrase:(3.b)com?~fi(CONTROLI.EE, CONTROL\[,ER) :-:~ubcat(CONTROIA,EE, \]IS UJ, X, Y\]),:~em ..~brol(SUJ~ SF),:~em form(CONTROLLER, SF),agree(SUJ, AG),agrce(CONTI~_OLLER, AG).The ?
'ont~ol statement of (3.a) will thereby ensure that the.~mbject of 'p~omise' and the understood subject of its infinitivaleomt)lemcnt me the same ~ntity.3.2 Morphological nd lexical rolesThe rnorpho-syntactie dictionary is extended by three setsof rules that handle inflection, derivation and lexicaltransformations.
Our description of French inflection is based onthe work of Bourheau & Pinard (1986), which provides anexhaustive speeifieation f the inflectional properties of more than50,000 French lexieal items.
We have also developed a paralleldescription for English inflection.We currently employ a rule-based treatment of derivafionalmorphology only for the most productive classes, such ascomparative and superlative adjectives, '-ly' adverbs, etc.
On theother hand, we make extensive use of lexieal transformations tohandle phenomena such as passivization, subject-to-subject andsubject-to~object raising, intransitivation, dative-shift, etc.
Giventhe scheme described above for lexical subcategorization, mostlexical transformations can be seen as simply altering thesubcategorization pattern of the lexical entry.For example, given the lexical specification (3.c) for theobject-raising verb 'believe', ride (3.d) has the effect of generatingthe two "virtual" dictionm3r entries (3.e) and (3.0.
(3.c)diet(T) :-citation form(T, believe),suj to obj_raising_verb(T,A,B),sere folm(T, believe(A,B)).
(3.d)subj to_obj raising yerb(T,A,B) :-% standard t0rmsubcat(T, \[NP, S, \[ \]\]),cat(NP, np),sem_forIn(NP, A),cat(S, sbar),complementizer(S, that),sem form(S, B).subj._to obj raising_.verb(T,A,B) :~% raising formsubeat(T, \[NP1, NP2, VCOMP\]),cat(NP1, up),sere form(NP1, A),cat(NP2, np),sere form(VCOMP, B),cat(VCOMP, vp),form(VCOMP, infinitive),control(VCOMP, NP2).
(3.e)(3.13citation_form(T, believe),subeat(T, \[NP, S, \[ \]\]),cat(NP, np),sere form(NP, A),eat(S, sbar),complementizer(S, that),sere form(S, B),sern .form(T, believe(A,B)).
"Tom believes that Bill is dishonest.
"citation_form(T, believe),subcat(T, \[NP1, NP2, VCOMP\]),eat(NPl, up),sere fonn(NP 1, A),cat(NP2, up),sem_form(VCOMP, B),eat(VCOMP, vp),form(VCOMP, infinitive),eoutrol(VCOMP, NP2),sere form(T, believe(A,B)).
"Tom believes Bill to be dishonest.
"2653.3 The semantic lexiconThe semantic lexicon defines a set of semantic units foreach language (whether directly realized by a lexeme or moreabstract); describes asubsumption hierarchy of semantic types ( apartial order of types <Sowa, 1983>); and associates with eachsemantic unit SU an initial semantic type, this having theconsequence that SU belongs implicitly to all higher types in thehierarchy.
The semantic lexicon also defines a set of validatingpredicate-argument schemas, of which valid predicate-argumentstructures have to be instances.
An example of such a schema is:MOVEMENT( MEASURE-FUNCTION, INCREMENT, MEASURE)where MOVEMENT, MEASURE-FUNCTION, INCREMENT andMEASURE are semantic types.The use of the semantic lexicon to test semantic structurewell-formedness i  briefly explained in section 4.3.4.
The Grammars4.1 Syntactic RulesCRITTER's grammars assign textual units a featurestructure describing both their syntactic form and semantic ontent.As an example, consider rule (4.a):(4.a)vbar(VBAR) -->vb(VB),complement(CO 1),complement(CO2),{ cat(VBAR, vbar),subcat(VB, \[SUJ, CO1, CO2\]),head of(VBAR, VB)}..The constituent vbar is expanded as a verb and twopossible complements.Generally speaking, a complement can be any of a widerange of phrases:(4.b)complement(\[\]) -> \[\].complement(NP) ->np(NP).complement(PP) ->pp(PP).complement(VCOMP) ->vp(VCOMP).Most of the syntactic rules that we use are, like (4.a),based on the simple context-free skeleton of definite clausegrammars, with the same augmentation mechanisms: non-terminalshave arguments and additional PROLOG goals (enclosed in braces)can be stated.
The non-terminals in our rules are uniformlyassigned a single argument, whose content is a feature structure,and the PROLOG goals are used to state mutual constraintsbetween these feature structures.In example (4.a), the two complements of the verb areunified with the second and third elements of the subcat list of theverb, thereby enforcing its lexical subcategorization requirements.The head_of predicate is defined so as to unify the head features of'the lexical head with those of the larger verb phrase.
Sincesem_form is a head feature, the lexical value of sem_form for theverb will be assigned to the verb phrase.
In the process, argumentsof the semantic predicate associated with the verb will becomeinstantiated to the semantic objects associated with the complementsof the verb.In older to deal with certain more complex syntacticphenomena, such as unbounded ependencies, we take advantageof the special facilities built into the extraposition grammarformalism.4.2 Syntactic processingAlthough the format of our grammatical rules closelyresembles the format of definite clause grammars (DCGs) andextraposition grammars (XGs), there are some importantdifferences.Because of their direct relationship with clausal logic,DCGs and XGs have two distinct interpretations: on the one hand,a declarative interpretation in which they can be viewed as defininga relation between strings and structural descriptions; and on theother hand, a procedural interpretation i which they may beviewed indifferently as parsers or synthesizers.However, given the standard compilers for theseformalisms, the procedural interpretation f any given set of rulescan rarely be used for both analysis and synthesis tasks.
Forexample, any DCG contaiuing:left-recursive rul s will produceinfinite loops when applied to analysis tasks, although the samegrammar may well be suitable for synthesis tasks.
Moreover, inorder to obtain reasonably efficient parsers and synthesizers, it isnecessary to control the order in which goals are called in eachmode.Our solution to these problems i  to retain the use of DCG-like rules which have a well-defined declarative semantics;however, we enrich these rules with control annotations which,while not affecting their semantics, provide a rule compiler with theinformation eeded to produce both an analysis-oriented and asynthesis-oriented v rsion of the rule.
Left-recursion is elinfinatedin the analysis version, and both versions typically display adifferent ordering of the goals.
The result is that we can actuallyderive fairly efficient parsers and synthesizers from one and thesame grammar.For furtber details on this double-compilation approach,see Dymetman & Isabelle (1988).~.3 Checking of semantic well-formednessIn order for a semantic structure built by thiscompositional process to be accepted as valid, it must pass asemantic well-formedness check, which involves semanticconstraints and the type subsumption hierarchy.This check can be briefly described as follows: for eachpredicative (or functional) node pn in the semantie structure, havingan1, an2.., as argument nodes, one tries to find a validating schema(see ?3.3) PT(AT1,AT2,....) such that PT is a type subsuming pn,AT1 a type subsuming anl, AT2 a type subsuming an2 ....For instance, given the semantic slracttne of section 2.2~partially annotating it with the types of each node yields (4.c).264(4.c)increase {MOVEMENT,EVENT}(inv-l) (31(i) ~ " ~ ' " ~  9 * (PRICE-MEASURE, MEASURE )lastweek ~ 5%{PERCENTAGE, INCREMENT) { WEEK, TIME-POINT) p~'ice/ ~{PRICE, MEASURE-FUNCTION}(i) (inv-l)hog At { LOCATIVE ,  STATE )(COMMODITY} I(2)saska~tcheLvan(MARKET, LOCATION}The checking of this structure then involves looking for:- a validating schema for 'lastweek', in this case the schemaTIME-POINT(EVENT)- a validating schema for 'increase', in this case the schemaMOVEMENT(MEASURE-FUNCTION,INCREMENT,MEASURE)- a validating schema for 'At', in this case the schemaAT(PRICE,MARKET)5.
TransferAs we have seen, the transfer component implements arelation between two language-dependent s mantic structures.
Thedecision to restrict he input and output of transfer to such semanticstructures is motivated by a number of considerations.
Pre-theoretically, the very notion of translation implies a linguisticreformulati(m which preserves essential meaning.
Such abstractintermediate structures also have the practical advantage ofsimplifying the transfer component.
That is to say, we assume thatthe analysis component is powerful enough to neutralize certainsource language transformations and that a full-fledged synthesiscomponent can take care of such details of target languagerealization ~ governed prepositions.The transfer component itself is essentially exieal, with allrelevant knowledge xpressed in a transfer lexicon, a sample ofwhich appears in (5.a) :(5.a)(i) eat <-> manger.
(ii) miss( 1: X, 2: Y ) <-> manque*'( 1: Y', 2: X' ).
(iii) walk( inv-l: acress( 2: X ) )<-> traverser( 2: X', inv-l: $manner (2: apied) ).entry (i) is straightforward;entry 0i) expresses an "argument conversion" : john misses mary <=>mary manque d john;entry (iai) expresse  amore complex corresl~ondanee: johnwalks acrossthe str, n:t <=> john traverse larue d piedThis lexicon is compiled into a set of Prolog clauses.
Thetransfer algorithm then performs a simultaneous reeursive root-to-leaves travta'sal of source and target semantic structures, makinguse of these clauses to maintain translational equivalence of thesource and target structures.
Practically speaking, the result is thatwhen translating from English to French, for example, as thetransfer algorithm traverses the English semantie structure, theFreneh semantic structure isconstructed inparallel, by progressiveinstontiations.In this way, the transfer process may effect certainrestructurings, but these are lexically triggered: we do not foreseethe need for an independent s ructural transfer component, as inARIANE-78 for example <c.f.
Boitet & Nedobejkine, 1981>.6.
ConclusionCRITrER is currently being implemented in QUINTUSProlog on SUN-3 workstations.
At the time of writing, the statusoftbe prototype is as follows:- morphological descriptions for both English and Frenchare running, including exhaustive descriptions of the inflectionalsysU,'ms; the dictionaries include approximately 500 lexemes in eachlanguage, and are expected to go beyond the 1000 mark;- syntactic descriptions already cover a significant part ofthe constructions found in the sublanguage, although much workremains to be done to deal adequately with ellipsis, complexcoordination, etc.
; furthennore, the grammars of English andFrench are actually used in a reversible manner, although at the timeof writing, they tend to overgenerate in the synthesis mode;- a simple version of type-checking has been implemented,but work remains to be done on defining an adequate hierarchy ofscmantie types;- an initial implementation f the transfer component(dictionary and programs) is under way and the first translationsshould be produced within a few weeks.7.
AcknowledgmentsThe authors wish to thank Lucie Cusson, Bruno Godbout,Francois Perreault and Michel Simard, who have made importantcontributions tothe work reported here.265REFERENCESBoitet, C. & Nedobejkine, N: (1981) "Recent developments inRussian-French machine translation at Grenoble".
In:19, 199-271;Bourbeau, L. & Pinard, F. (1986).
Dictionnaire Micro-informafis~ du francai~.
Montreal, Canada.Dymetman, M. & Isabelle, P. (1988).
"Reversible LogicGrammars for Machine translation".
InInternati0ns1 Conference on Thgor~tical 8ndMethodological Issues in Machine Translation of No~tralLan.L.~Eg!l.0~, Carnegie-Mellon U iversity.Gazdar, G., Klein, E., Pullum, G., Sag I.
(1985) GeneralizedPhrase Structure G..rammar.
Oxford: Blackwell.Isabelle, P. & Mackloviteh, E. (1986) "Transfer and MTModularity".
In Proceedings ofColing 86, Bonn, FRG.Kittredge, R. & Lehrberger, J.
(1982) eds.
: Sublanguage:studies, of language in restricted semantic do-mains.Berlin: de Gruyter.Landsbergen, J.
(1987) Montague Grammar and MachineTranslation.
Philips Research M.S.
14.026, Eindhoven,The Netherlands.Pereira, F. (1981) "Extraposition Grammars".
In:Computational Linguistics 7.4, 243-256.Pollard, C., Sag, I.
(1988) Information-Based Syntax andSemantics, vol, 1: Fundamentals, CSLI lecture Notes no13, CSLI, Stanford University.Sag I., Kaplan R., Karttunen L., Kay M., Pollard C., ShieberS., Zaenen A.
(1986) "Unification and GrammaticalTheory", Proceedings of the West Coast Conference onFormal Linguistics, Stanford Linguistics Association,Stanford Un{versity.Sowa, J.
(1983) Coneeotual Structures: Information Processingin Mind ond M~chine, Reading, Mass: Addison-Wesley.266
