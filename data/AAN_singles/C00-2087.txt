I n te ract ion  GrammarsGuy PerrierLORIA, Universitd Nancy2BP 23954506 Vandceuvre-lhs-Nancy Cedex Francee-marl: perrier@loria.fl'AbstractInteraction Grammars (IG) are a new linguistic for-malism which is based on descriptions of under~specified trees in the fl'amework of intuitionistic lin-ear logic (ILL).
Syntactic omposition, which is ex-pressed by deduction in linear logic, is controlled bya system of polarized features.
In this way, parsingamounts to generating models of tree descriptionsand it is implemented as a constraint satisfactionproblem.Introduct ionIG can be presented as an attempt o bring togetherflmdalnental ideas, some coming froln Tree Adjoin-ing Grammars (TAG) and others from CategorialGraInmars (CG), in order to overcome the specificlimitations of each of these formalisms.
The compu-tational and linguistic relevance of TAG lies in itsadjunction operation (Joshi et al, 1975; Kroch andJoshi, 1985) but the simplicity of its mechanism hasa counterpart in the inflation of the lexicons that arcrequired for expressing all grammatical phenomenaof a language.
Every time that a word is used in anew syntactic ontext, wlfieh can differ only by wordorder for example, a new elementary tree, which en-codes this context, must be added to the lexicon ina direct manner or by means of a lexical rule.
In thisway, lexicons quickly become colossal, very awkwardto use and very hard to maintain.Recent works aim to solve tiffs problem by factoriz-ing linguistic information with the notions of nnder-specified trees and tree descriptions.
These notionswere introduced for TAG by Vijay-Shanker with themotivation of making adjunetion monotone (Vijay-Shanker, 1992).
Now, they are exploited fruitfullyin various directions: for structuring TAG lexiconsin hierarchical systems of modules (Candito, 1999)or for expressing semantic ambiguity (Muskens andKrahmer, 1998; Egg et al, 1998) for instance.
At thesame time, these notions are a way of relaxing theprimitive adjunetion operation in order to capturelinguistic phenomena: such a possibility is exploitedby (Rambow et 31., 1995) within D-Tree Grammarsand by (Kalhneyer, 1999) within Tree Description~l'alnlilars.Unfortunately, tim counterpart of a more flexibleframework is often over-generation a d a loss of com-putational efficiency in the absence of principles forcontrolling syntactic composition.
By looking atCG, we can find some answers to this preoccupa-tion: a fundamental idea of CG is that grammati-cal constituents are viewed as consumable resources(Retord, 2000); these resources are divided into pos-itive and negative resources which are complemen-tary and search to neutralize themselves mutually.The core of CG is the Lambek Calculus (Lmnbek,1958): by combining resource sensitivity and ordersensitivity, this logic is a good candidate for repre-senting the syntax of natural languages but at thesame time, this combination entails a rigidity whichlimits its expressive power greatly.
An appropriateway of relaxing this rigidity constitutes an impor-tant research area in CG (Moortgart, 1996).The principle of IG is to combine the powerflfl notionof under-specified tree description linked to the TAGptfilosophy with control of syntactic omposition bya system of polarities in accordance with the CGphilosot)hy.
More precisely, the basic objects of IGare syntactic dcscriptions which express dependen-cies between syntactic onstituents in the shape ofunder-specified trees.
Word order is referred to thesame level as morphological information, which isrepresented by a system of features which are linkedto the nodes of syntactic descriptions.
Whereas afeature is usually a pair (attribute, value), an IGfeature is a triplet (attribute, polarity, value) wherepolarity can take one of the three values -1, 0 or-t-1 and behaves like an electrostatic charge: for in-stance, a noun phrase which is waiting to receivea syntactic function in a sentence, carries a nega-tive feature of type fltnct while a finite verb whichis searching for its subject, carries a positive t'ea-ture funct with value s@j.
Attraction between thesedual features will make possible the fact that theverb finds its subject and, simultaneously, the nounphrase finds its flmction in the sentence.
(Muskensand Krahmer, 1998) also recognized the necessity ofintroducing the notion of polarity in tree descrip-600tions as a mechanism for controlling syntactic om-position; the difference with respect to IG lies inthe granularity of the polarization wlfich is finer inli(l: in their proposal, the polarized objects are con-stituents, that is description odes, whereas in IGone constituent can include several features with op-posite polarities.Tile frmnework which is chosen tbr tel)resenting syn-tactic descriptions in this patmr is that of linear logic(Girard, 1987), more precisely a fragment of ILL(Lincoln, 1992).
The resource sensitivity of linearlogic allows one to express the fact that 1)olarizedfeatures behave as consumable resources in \[G: apositive feature has to find its dual fea.ture once andonly once.
If we try to use classical or intuitionisticlogic for modelling IG, the contraction and weaken-ing rules, which are inherent in these logics, entaila loss of resource-sensitivity: tbr instance, a verbcould take two subjects by appealing to the con-traction rule and some noun phrases wouhl not needto find their syntactic role in a sentence by appeal-ing to the weakening rule.
By discarding these tworules, linear logic provides a Kamework that exactlycorresponds to the "electrostati(-" laws that control1)olarized features.In this framework, i)arsing takes the shatm of log-ical deduction of closed syntactic dcscriptions fromairy syntactic descriptions: a description is said tobe.
closed when it represents a completely specifiedsyntactic tree where all features are neutralized.If linear logic provides an elegant Yamework tbr rep-resenting IG, it gives no method for parsing effi-ciently and avoiding the coufl)inatory explosion thatmay follow from the flexibility of the fi)rmalism.
Anai~swer to this problem is given by the paradigm ofconstraint solving.
Parsing a phrase can be regardedas generating models of the partial descrit)tion whichis provided by a l('xicon for the words of this phrase.The process is monotone and can be expressed asa constraint satisfactio'n problem.
This constraint-based approach was inspired by the work of (l)uchierand C., 1999; l)uchier and Thater, 1999) on domi-nance constraints.
(Blache, 1999) shows the advan-tages of such an apI/roaeh t)oth from a linguistic andemnputational viewpoint with the formalism that lieprol)oses mid lie calls Property Grammars.1 Syntact i c  descr ip t ions  as l inearlog ic  fo rmulasIG arc formally defined as an ILL theory.
Basicobjects are syntactic dcscriptions which arc repre-sented by linear logic formulas in the following form:Descr ::= Domin \] Feat \] Descr ?
Descr \]Descr & DescrIf a syntactic descrit)tion concerns the dominancerelation between syntactic constituents, it has thetype Domin; if it concerlm the features which areused for characterizing syntactic or semantic prol)-crties of constituents, it has the |yt)e Feat.
Finally,a description call I)e built recursively fl'om two de-scriptions in two ways, which a.re expressed by tiletwo linear logic conjunctions: the multiplicative ten-sor (?)
and the additive with (&).1.1 Multipl ieative and additive conjunctionof resources in descriptionsA description D1 ?
D2 requires all resources of bothdescriptions D1 and D2 while a description DI&D2requires either the resources of DI or the resourcesof D., lint not 1)oth.
This use of the two linear logicconjunctions is consistent with their left introduc-tion rules in the linear sequent calculus:F1,F%FPG FI,F t -a  ~ F2 , r t -a  &L2F1?lS,Ft -G ?L Flg:F2,Fk'G &el FI~F.2, F\[-GIn this way, it; is possible to describe all syntacticconfigurations of a word with a single lexical entryraider the form of a syntactic description: conunonparts of these COtl\[iglll'al;iolls are factorized whereasSlmcilic parts are distributed into alternations linkedtogether with the comlective with.
For instance, apossible lexical entry for the tinite verb volt in Frenchhas the shal)e Dvoit = D1 ?
(D2&D3) ?
(D4&;DS):Dj contains information related to the subject whichis coiilnloll to all uses of the verb volt; D2 expressesthe canonical order subject-verb in the sentence thatis headed by the vert) voit whereas Da expresses thereverse order for which the subject must be realizedunder some conditions, such as in the phrase Marieque volt ,lean; D4 exl)resses that the verb has anexl)licit object whereas D,5 corresl)on(ts to circum-stances where this object is not present, such as illthe sentence ,Ican volt.1.2 Under-specif ication of dominancebetween const ituentsA description of type Domin has the fl)llowing form:Domin ::= Node > \[LNode.sl \[ Node > Node INode >* NodeLNodes ::= e I Node LNodesA predicate N > \[N1, .
.
.
,Np\]  states that theconstituent N is decoml)osed into the sub-constituents N1 , .
.
.
,N  v. The order between thesesub-constituents i  only used tbr identifying eachone without any linguistic lneaning; word orderis dealt with at the same level as morphologicalinformation by means of features.A predicate N1 > N2 expresses that N2 is allimmediate sub-constituent of N1.
Such a predicateis used when only partial information on tilesub-constituents of a phrase is available.A predicate N1 >* N2 expresses that N2 is embed-ded in N1 at an undetermined del)th.
For instance,if we continue with description D1 related to theverb volt, we can assume that it contains the formula601(Na > \[N4, N~\]) ?
(N4 >* No) which is interpretedas follows: the verb phrase Na is constituted oftile verb N4 and its object N~; Na represents thebare verb whereas N4 represents the verb whichhas been possibly modified by a clitic, a negationor an adverb.
Under-specification f the dominancerelation N4 >* No leaves all these modificationsopen.
Under-specification of dominmme betweenconstituents goes beyond TAG adjunction in thatthe nodes which are in a dominance relation do notnecessarily have the same grmnmatical categoryand thus linguistic phenomena like wh-extractioncan be expressed easily in this way.1.3 Polarized and under-specified featuresDeserit)tions of tyI)e Fcat, related to features, havethe following fol'm:Feat ::= Node : Attr Pol Val \[Var C Dora \[ Vat  ?
Doragol : := <- I  = I +Val ::= Coast I VatA feature Node : Attr  Pol Val is a triplet composedof an attribute Attr, a polarity Pol and a value Valassociated with a syntactic node Nodc.
Usually, athature is defined as a pair (attribute, vahle).
IllIG, we add a polarity to this pair so that featuresbehave like electrostatic charges: a positive featureAttr ~ Val seeks a negative featm'e Attr +-- Val toneutralize it and conversely while a neutral featureAttr = Val only acts as a filter through constraintson its value Val when it; meets another feature oftype Attr at; the sanle node.Ill all cases, Val is either a constant which is selectedfrom an infiifite countable set Coast of feature val-ues or a variable which is selected fl'oln an infinitecountable set Vat of feature variables; then, its definition domain Call be constrained by two lduds ofpredicates: Val E Dora and Val 9( Dora; Dora is afinite set of elements taken froln Co7~8t.Let us illustrate this presentation with a possiblelexieal entry for the i)roi)er noun Jean:Dj  ..... = (N > \[\])?
(g :  ~,,,t = ,@ ?
(N :  f~ .~t  ~ Vl)(N:  ord --+ 1) ?
(N:  phon =' Jean')?
(N : Ocn = m) ?
(N : hum = .sg)?
(N :pets = 3)Some features are neutral by nature like agreementfeatures: gen=m (gender=male), num=sg (num-ber=singular), pets=3 (person=3).
Others are po-larized by nature too: for instmlce, features of typef lmct which express syntactic functions.
In the ex-ample above, the feature of type funct is negativebecause the noun phrase represented by N is waitingto receive a syntactic fllnction (subject, object..
.
);this flmction is not determined yet and thus it isrepresented by a variable lq.The phonological form of a constituent is determilmdby a system of two features: phon which gives tileeffective phonological form of the constituent andord which gives the order in which its immediatesub-constituents must be concatened to build thisphonological form.
For instance, we find the tbrnnlla(N1 : ord -+ I/2) ?
(172 C {12, 21}) in the descriptionDvoit to express that the clause which has the verbvolt as its head and is represented by node N1 isa concatenation subject-verb phrase (14 = 12) orverb phrase-subject (172 = 21).
When a node has nochildren, two cases occur: the node has an emptyphonological form and the vahle of the feature ord is0 or the node is a lexical anchor and the value of thefeature ord is 1.
In this case, the feature phon is usedtbr retrieving the effective phonological form, whichcan be verified in the (lescription D.l~an.
Polariza-tion of phonological tbrms expresses that some con-stituents are capable of giving a phonological tbrmwhile others are waiting tbl" one.
As the previousexalnples hows, this pohu'ity is not carried by thetbatul'e phon but by the feature ord.
The interestof giving privilege to the tbat, ure ord with respectto the feature ph, on, is twofold: we can deternlineits value for a given node without being aware, ofthe phonological form of the children, the effectivepholmlogical form will be rebuilt step by step fromthe leaves to the root of the final syntactic tree assoon as possible; another interest is that features oftype ord can be dealt with like all other features; inparticular, we can al)ply to theln the salne type ofconstraints.Finally, it is interesting to inention that value shar-ing by different features is represented in an easyway by using a unique variable for tile vahles of theconcerned features.2 Syntact i c  compos i t ion  asdeduct ion  in a l inear theoryBy choosing a logical framework tbr a fornml def-inition of IG, we find a natural way of expressingsyntactic eompositiou by means of deduction in lin-ear logic according to the 1)aradigm "parsing as de-duction" of CG (for a broad survey of CG see (Re-tord, 2000)).
All interaction granunar is lexiealizedill the sense that all linguistic resources are storedin a lexicon and these resources will be coinbined 173'using inference rules of the ILL deductive system forbuilding the acceptable sentences of the correspond-ing language.
Since syntactic descriptions use onlya fragment of this logic and if we choose the frame-work of the sequent calculus, only seven ILL rulesare useflll:F1, .
.
.
,Fn I- F I?.
.
.
?Fn idP ~- G FI, F2, P I- G1, P 1- G 1L Ft @F'2, P l- G @LF1, P N G J~'2, P k GG&L2FI&F2, P G &L1 /~'I&F2, r I-F\[t/X\], P t- G Pl 1- 17 F, I~2 l-- G V1~ cutV X ~; P F- Pl, P2 t- G602With respect o tile usual presentation of the ILLsequent cahmlus (Lincolu, 1992), a?iom id is defineda bit differently but this definition is equivalent othe original one tbr tile logical fragment used by IG.Rule gr.
is a tirst order rule which is used here forinstantiating a node variable with a concrete nodeor a feature variable with a concrete feature value.Beside these general rules, we need proper axiomsto express properties related to dominance relations,feature polarities, feature values and phonologicalforms.
Concerning dominance relal, ions, we havethe following proper axiom schemes:N: > N2,(NI > \[1,,N2,L'\]) }- (N1 > \[L,~2~LI\]y dlN >* N F 1 d2N1 >* Na, (NI > \[L, N2,1/\]) V N2 >* N3 Q (N1 > \[L, N2,L'\]) d3Axiom scheme dl expresses that immediate dom-iuallCe is realized t)y a parent-children relationwhereas axiom schemes d2 and d3 express thatdominance is realized l)y finite sequences of l:arent-children relatkms (L an(1 L '  represent sequences ofnode variables).The behaviour of polarities is represented by thefollowing proper axiom schemes:(N :A I '  V), (N :A=V)  P (N : ,41 '  V) I'1(N :A<-V) , (N :A -~V)  ,- (N :A=V)  v~Proi)erties related to feature doinaius and vahlesrare expressed by tile following axioln schenles:< {e} u D"  c '<'hi l)oth axiom schelnes, D rel)resellts a couel'el;efiltite set of feature values taken from Con.W, and Uand \ rel)t'esent the usual operations of union aimdifference of sets.Finally, three axiom schemes are used for deducingtile effective phouological form of a col:stil;uent fromthe order of the phonological forms of its children:N > \[\], (N :  o,'d = 0) ~ N > \[\] V (N :  Vho,, = ,,)Vh.1> \[ \], (N :  o,.,~ = 1) F N > \[~ph._,,) ph3 (~r > \[N 1 .
.
.
.
.
NI,\]) , O, ~'1 I- (N > \ [NI , .
.
.
,  Np\]) 05) 1 2Schemes ph~ and ph2 respectively correspond toempty categories and lexical anchors.In scheme pha, 0 is an abbreviation for(N :o rd  = e(c,)); a is a perlnutation on \[\[1,p~which expresses an order ibr concatenating thephonological tbrms v l , .
.
.
,  vp of the children nodesN\ ] , .
.
.
,  N v of N and c(o-) is a bijective encoding ofthis permutation with an integer.
/71 is an abbre-viatioll for (NI : phoTt = V l ) , .
.
.
, (j~Tp : phon = %)and P~ an abbreviation for the product(N : phon = vo.
(1) .
.
.
.
.
v,,(l,)) ?
(N1 : piton =Vl) ?''"
?
(Np : ph, o?L = vI, ).A particular interaction grmnmar G is defined byits vocalmlary \]?occ.
and by a lexicon gexc,; the vo-cabulary Poco inchldes the words used for tmildingthe hmguage /--:a generated by this grammar andthe lexic(m ?c:,:c; associates a syntactic descriptionto each word of Foca.
Now, we have to (:ombinethe resources provkled by go:re- by means of theinference rules and proper axioms of the lineartheory T which has .just; been defined to composewell-formed and complete syntactic structures of Gunder the shaI)e of closed syntactic descriptions.
Asa preliminary, we have to give a precise definition ofa closed syntactic description:A closed syntactic description is a partic'a-lar syntactic description in the shape S ?
Fwh.cre S and F, respectively, represent hestructural and feature parts of the dcserip-tion with the following conditions:1.
S is a product of predicates in the form(,,.
>  ,,here ,,., ,,.,, .
.
.
,n v represent eoncrcte syntactic nodes,and the structure defined by all theseparent-children relations is a tree;2.
F is a product of predicates in the form(n :a t t r  = v), where n, attr and vrepresent concrete atoms, and for eachpair (u, attr) pre.scnt in F, there is cx-actly one feature (n : attr  = v) in F.3.
For every syntactic node 7t in S, thereis a feature (n : phon.
= v) in F.Condition 1 guarantees that a closed syntacticdescription rel)resents a COml)letely specitied tree.Condition 2 gua.rantees ('oherence and neutrality ofthe feature system which is attached at each syntac-tic node.
Condition 3 guarani;cos the phonoh)gicalwell-fornmdness of the whole syntactic sl.l'it(:t;::t'e.Now, let; us explain how G generates closed syntac-tic descriptions from n lexieal entries D , , , , .
.
.
,  D,~,,correspouding to n words Wl , .
.
.
,  w,, taken fi'omVote;.
For this, we need an additional descriptionD,.om to represent he root of the final syntactictree which has tile fbrm:(No >* N:) ?.
.
.
?
(N0 >*A:,) ?
(No : ord ?- V0).
Node No represents the rootof the syntactic tree and N1, .
.
.
,  N v are the nodespresent in descriptions Dwl , .
.
.
,  D,o,,.
Then:A closed syntactic dcscr@tion D is said tobe generated from the words w1, .
.
.
, w,  bygrammar G if the sequent V N V V (D,.oot?Dw: ? ""
?
Dw,) F D is provable in thetheory 7- (N and {J represent all node vari-ables and fi'aturc variables that arc fl'cc inDrool, Dw: , .
.
.
,  Dw.
).D describes a tree which represents the syntax of aphrase given by the feature phon of its root.
If weadd the predicate (No : piton = wl .
.
.
w, )  to D,.oot,we transform the generation of closed syntact;ic de-scriptions into parsing of the phrase wl ?.
?
w,,603By continuing with the verb volt, let us give a verysimple illustration of this mechanism.
We assumethat a lexicon provides us with three descriI)tionsDvoit, Dil and D.lcan which respectively eorresi)ondto the finite verb volt, tile personal pronoun il andtile proper noun Jean.
As it was described in sub-section 1.1, Dvoit has the shape D1 ?
(D2&D3) ?
(D4&Da and it is schematized by the following di-agram:i I)1 i .
- cal=s (" - - ") ord -> 12121, 7 : :7  .
i _  , c~t=~p I' : -  - - " ord = 1 112/lunct = subj ; ~\[ i4 ) cat = v? ""
ord <-cat=v 6 } ....)hen = 'voif " o d -> 1!
( &) !
:  ;,, :, ",/ ",: (~)  (3), \ ]  o rd :12  \] ?rd=~'1 " " - "( 4 ) i1 ,unct bj .
.
.
.
l i ' J ', !
3 )i ord = 12( 4 ) (.
s )cat =np / i ierd <- ILtunct -> obj!To remain readable, the diagram includes only themost significant features of every node.
The nota-tion ord -~ 12121 is all abbreviation for ord --+ Vwith 17 G {12, 21} and ord +-- means that the valueof Lhe feature ord is undetermined.Description Dil has a structure that is similar toDvoit :11~ord = 12cat = nDfunct = subj7I9f ?
( lo )cat  = s\funct  <- subj ii .
> , er =21 1I !
I~:!  '
-cat = vpcat = vcat =v ( I1 )ord-> 12121 "" \] -"cat=ct i t  - .
.
".. "" - -  ~ /?
.
( 12 ) ~ a+ r cat=vpnon = ' .
'~  .
.
.
.
- -< Iord=l  ~t  K J _ \ord<- /\] 1 .
.
.
.
.
.
.
.
.
.
.. j -  ,,,\]+typ = decl( 11 ')x"ord = 12.-( )typ = "!
?r .
.
.
.
.\[ ( u ' i&21Tile first additive component of description Dil,Dr&D8 represents a choice between tile absence ofall explicit subject ill the sentence beside tile per-sonal pronoun il such as in tile sentence il volt Jeanand the presence of this subject such as in tile sen-tence Jean voit-il ?.
The second alternative ntailsthat the sentence is interrogative if we ignore topi-calization, which explains description Ds.The second additive component of description Dil,Dg&Dlo, represents a choice between tile declarativetype and tile interrogative type of the sentence whichdepends on the relative order between tile verb andtile clitic.Descrit)tion D Jean is reduced to the following singlenode:cat = l lpo rd -> 1funct <-phon = ' Jean'From tile description V N V 1~ (D,.oot ~ D,,oit ?Da~.,, ?
Dil), it is possible to deduce three closedsyntactic descriptions D.,  Db and D~, which respec-tively represent the syntax of the grammatical sen-tences :il voit ,lean, voit-il Jean ?
and Jean voit-il .~.Ill concrete terms, the deduction process that leadsto these three solutions consists ill plugging nodesof the initial descriptions with tile aim of neutraliz-ing all polarized features while respecting dominanceand featm'e constrains.
Let us detail the resultingdescription DD by means of the syntactic tree it spec-ifies:cat = Styp  = dec l  II - I -7 ) phon = 'voit il Jean'cat  = npphon = ' ' 2-8funct = subj Icat=vphon = 'voit il'iI( 3-9 )cat = vpphon = 'veil il Jean 'JI \[ I cat = np(4-I0-1i) (5-14) phon = ' Jean 'I \[ i J funct = obj' I \ [ 'cat=e l i !
( 12 ) ( 6.13 ) cat=vphon =' i r  \] J phon ='vo i t 'Tile closed syntactic description that specifies tltetree above represents the syntactic structure of thesentence voit-il Jean ?.
The numbers that label itsnodes are the traces of the nodes of the descriptionsthat have been plugged in the parsing process.3 A constraint-basedimplementationFrom tile viewpoint of a computer scientist, a lin-guistic model has to show not only expressive powerbut also computational tractability.
In the previoussection, we have shown that IG computations re-duce to ILL proofs.
For tile logical fragment that weconsider here, three logical rules are a source of non-604determinism in proofsearcll: &L1, &L') and VL.
Thistakes the shape of three kinds of choice points in tilet)arsing process: selecting the pertinent branch forevery additive conjunction, identit~ying some nodevariables and instantiating t~ature variables in anal)t)ropriate maimer.
The NP-conq)letenest of theimplicative fragment of ILL (Kanovich, 1992) showsthat it is hopeless to find a general parsing algo-r ithm for IG that works in polynomial time in theworst cases.
Experience has shown that, fortunately,these worst cases rarely occur in parsing natural an-guages.
Nevertheless, the flexibility of IO entails acombinatory explosion of the parsing process if weuse a "generate and test" method and leads us tochoose a more approt)riate method.
The specifica-tion of our problem prompts us in a natura l  way toa constraint-based al)l)roach as it was suggested byst)me proposals for similar prol)h;ms (Duchier andC., 1999; Duehier and Thater, 1999).The t)rol)lem can be tbrmulated as follows:Given a s?jntactic description Do, find allclosed syntactic descriptions D such thatVN VV Do t- D is provable in the theory 7-(N and l} respectively repro.sent he nodevariables N, , .
.
.
,  N~ and the.
fcaturcs vari-ables I~,..., 147~ of Do).A flmdame.ntal t)rot)erty of the (teduction processthat lea(It to a solution is monotonicity to that thet)roblem can t)e expressed as a constraint satisfac-tion problem (CSP).
A CSP is specitied fl:om a setof variables to which constraints are apl)lied.
Here,we consider three sets of variable, s which corretl)on(tto tim three kin(Is of choi(:e 1)oints in the parsing pro-COTS;1. the set {N1, .
.
.
,N, ,}  of syntacti(" 1,o(le vari-a/)les;2. the set { l~, .
.
.
,  I4,, } of t'eature variables;3. the set {St , .
.
.
,Sv}  of sdection variables; ev-ery selection variable Si is an integer variablewhich is associated with a connective & of D0and which is used for indicating the rank of thecomponent of the correspondent additive con-junction that is selected in the deduction.Selection and feature variables are considered as fi-nite domain variables, which imply that all featurevahms are encoded as integers (one exeel)tion is thatfeatures of type phon remain strings).Node variables arc' enco(ted indirectly via finiteset variables by using the metho(t t)roposed in(Duchier and C., 1999).
Every node variableNi is associated with five finite set w~.riablescq(i), up(i), down(i), side(i) and all(i) which areused for locating the node i with respect o the oth-ers in the sys|;em of dominance relations.
Becauseof the presence of additive cm\\]unctions, a node iwhich is present in tile description Do nmy be absentfrom a solution.
In this case, eq(i) = {i}, alt(i) =~l,n~\{i}, up(i) = down(i) = side(i) = 0; in thecase that i is present in a solution, alt(i) repre-tents the nodes that are not selected in the solutionwhereas tile selected nodes are distributed into thefour sets cq(i), 'up(i), down(i) and .side(i) accordingto their relative position with respect o i.Constraints on the variat)les of the probhnn are di-vided into two parts:?
general constraints guarantee that the solutionsD are effective closed syntactic descriptions;?
specific constraints guarantee that the solutionsD are models of the initial description Do.3.1  Genera l  const ra in tsTreeness  const ra in ts  For every node i, the parti-tion of \[1, n~ between eq(i), up(i), down(i), .side(i)and all(i) guarantees that the solution is a directedacyclic graph (DAG).For expressing that all dominmme relations whichstructure a solution must only be realized by parent-ehihtren relations, we must introduce constraints illwhich variables of type.
cq(i) and selection variablesappear for expressing that every selected node vari-able must be identified with a node variable whichis the parent in a selected parent-children relation.In order to express that a solution is more than aDAG, that is a tree, we must add the following con-straint: for every selected parent-children relation,the sets down(j) for the children j present in thisrelation must be disjoint.
Such a condition can bedrol)ped if we want to extend the fbrmalism to takeinto ac(:ount resource thm:ing like coordination totinstance; in this ease, syntactic structures are nolonger trees trot DAGs.Neut ra l i ty  const ra in ts  Feature neutrality of asolution is guaranteed by constraints which also ap-peal to variables of type cq(i) and selectkm vari-ables: for each attribute Attr, we consider two setsof sets in tile shape cq(i): the first corresponds toall selected predicates in the form (Ni : Attr +-- V)and the second to all selected predicates in the form(Ni : Attr + V).
The elements of each of thesesets must be disjoint sets and every element of the.first set; must be identified with one element of thesecond and conversely.Other general constraints related to features andphonological forms are trivial.3.2  Specif ic const ra in tsSuch constraints are determined by Do.
Doini-nance constraints are easily iml)lelnented by com-b in ing  selection variables and variables of typecq(i), 'up(i), down(i), side(i)(Duchier and Thater,1999).605FEaturE constraints concern both feature variablesand selection variables which are all finite domainvariables to that their implen:entation appeals toclassical tools in the domain of constraint program-ining.3.3 A prototype parser for Ih'enchWe have implemented a prototype parser for IS"ench.It it written in the language Oz (Smolka, 1995)which combines various aspects and modules, in-cluding constraint prograInming.
Though the lin-guistic COvErage of tile lexicon is still linfited, wehave learnt lessons from the first experiments: inparticular, neutrality constraints play a central rolefor restricting the search space, which confirms theinlportancc of polarities for the computationa.1 Gtrl-ciency.Conc lus ionStarting from TAG and CO, we have presented alinguistic tbrmalism which aims at better cal)turingthe flexibility of natural language by using two no-tions as its basis: underspccifieation and polarities.In some SENSE, they correspond to two importantproperties of natural language: ambiguity and re-source sensitivity.To regard parsing as a constraint satisfaction prob-lem fits in with the flexibility of the formalism interms of comi)utational efficiency but, at tile sametime, it allows to go towards robustness beyond atraditional view of parsing in which only grammati-cal and completely specified structures are taken intoa(;count.The success of IG does not ette.ntially depend onthe fbrmal propErtiEs that are usually Exhibited forgrammatical formalisms: the characterization f tileclass of languages that are generated by thesE gram-mars or the complexity of general parsing algo-rithms.
Forlnal properties matter but with respectto an ESSEntial goal: to Extend the linguistic coverageof IG from toy lexicons to massive lexical databases.For this, IG have some advantages by making it eas-ily to factorize and modularize information: suchpropErtiEs are decisive when one wants to extractinformation from a lexical database fficiently or toupdate data while maintaining the coherence of thewhole base.The success of IG will also depend on their capacityto integrate other linguistic lEvEls than the syntacticlevel, the semantic level especially.ReferencesP.
Blache.
1999.
"Contraintcs ct thdories linguis-tiques : des Grammaircs d'Unification aux Gram-maires de Propridtds".
ThSse d'Habilitation, Uni-versit5 Paris 7.M.-It Candito.
1999.
Oryanisation modulairc ctparamdtrablc dc grammaircs dlcctrvniqucs lcxi-calisdcs.
Application a'a fl'anf.ais et ?~ l'italien,.ThSse de Doctorat, Universitd Paris 7.D.
Duchier and Gardent C. \]999.
A constraint-based treatment of descriptions.
In IWCS-3, Jan99, TillbuTy, The Netherlands.D.
Duchier and S. Thater.
1999.
Parsing with treedescriptions: a constraint based al)proaeh.
InNLULP'99,Dcc 99, Las Cruccs, New Mcxico.M.
Egg, J. Niehren, P. Ruhrberg, and F. Xu.
1998.Constraints over lambda structures in semanticunderspecification.
I  COLING/A CL'98, Aug 98,Montreal, QuEbec, Canada.J.-Y.
Girard.
1987.
LinEar logic.
Th, eorctical Com-puter Science, 50(1):1-102.A.
K. Joshi, L. S. Levy, and M. Takahashi.
1975.Tree adjunct grammars.
Journal o/Computer andSystem Sciences, 10(1):136-163.L.
Kalhneyer.
1999.
Tree Description Grammarsand Undcrspccificd Rcprcsentations.
Ph.D. thesis,UniversitSt Tiibingen.M.
Kanovich.
1992.
Horn programming in linearlogic is NP-comt/lete.
In LICS'92, .\]~tTt 92~ SantaCruz, California, pages 200-210.A.
Kroch and A. Joshi.
1985.
Linguistic relevance oftree adjoining grammars.
Technical Rel)ort MS-CI-85-18, Department of Computer and Informa-tion Science, Uifiversity of Pemlsylvania.J.
Lambek.
1958.
The mathematics of sentencestructure.
Amcr.
Math.
Monthly, 65:154-169.P.
Lincoln.
1992.
Computational aspccts of linearlogic.
Ph.D. thesis, Stanford Uifiversity.),4.
Moortgart.
1996.
Categorial Type Logics.
InJ.
van Benthein and A. ter Meulen, editors, Hand-book of Logic and Language, chal/ter 2.
Elsevier.R.
Muskens mid E. Krahmer.
1998.
Talking abouttrees and truth-conditions.
Ill LACL'98.
Dec 98,Grenoble, France.O.
Rainbow, K. Vijay-Shanker, and D. Weir.
1995.D-tree grammars.
In ACL'95, paget 151 ~158.C.
RetorS.
2000.
Systbmes ddductifs et traite-Inent des langues:un panorama (let grmnmairEscatdgorielles.
Research Report RR-3917, INRIA.To appear in Technique t Science Iifformatiques.Gert Smolka.
1995.
The Oz programming model.In Jan van Leeuwen, editor, Computer ScienceToday, LEctUrE Notes in ComputEr SciencE, vol.1000, pages 324 343.
Springer-Verlag, BErlin.K.
Vijay-Shanker.
1992.
Using description of treesin a tree adjoining grmnmar.
Computational Lin-guistics, 18(4):481-517.606
