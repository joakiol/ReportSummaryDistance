TREE UNIFICATION GRAMMARFrdd PopowichSchool of Computing ScienceSimon Fraser UniversityBumaby, B.C.CANADA V5A 186ABSTRACTTree Unification Grammar is a declarative unification-bas~:llinguistic framework.
The basic grammar stmaures of thisframework are partial descriptions of trees, and the frameworkrequires only a single grammar ule to combine these partialdescriptions.
Using this framework, constraints associated withvarious linguistic phenomena (reflexivisation in particular) ~ bestated succinctly in the lexicon.INTRODUCTIONThere is a mind in uni~ca~on-based grammar formalismstowards using a single grammar stmctme to contain thephonological, syntactic and semantic information associated witha linguistic expression.
Adopting'the terminology used by Pollardand Sag (1987), this grammar structure is called a sign.
Grammarrules, guided by the syntactic information contained in signs, areused to derive signs associated with complex expressions fromthose of their constituent expressions.
The relationship betweenthe signs and the complex signs derived from grammar uleapplication can be expressed in derivationai structures.
Thesestructures both explicitly illustrate relations that are implicit in thesyntax of the signs and express relations that are present in thegrammar roles.Tree unification grammar (TUG) is a formalism which usesfunction-argument (FA) specif~ationa as its primary grammarstructures.
These specifications resemble partially specifiedderivational stmcmn~ of sign-based formalisms like head-drivenphrase structure grammar (HPSG) (Pollard and Sag, 1987) andunification categorial grammar (UCG) (7_,eevat, Klein and Calder,1987).
TUG uses FA specifications as lexical entries andpossesses a single grammar rule which combines thesespecifications toobtain a specification for the complex expressionbeing analysed.
The use of FA  specifications allowsgenerafisations that are often captured in grammar ules to becaptured in the lexicon.MOTIVATIONThe development of TUG was a consequence of investigatingextensions to the UCG framework.
As described by Zeevat,Kh~,, .
-d Calder (1987), UCG is a grammar formalism whichcombines SOme of the notiow~s of categorial grammar with those ofunification-based formalisms like HPSG and PATR-II (Shicberel.at., 1983).The nsse.t~h .~tM~,,~d in this lmq~r wu ~ o~ at the Univmlity of EdlnbeJqthunder the rapport of ?
BrifiJh C,~-,'~weallh Scholmhlp and at 51hUm FmJ~Uui~ky  unde* ms Advmu~ Synmll Imti~e ~ Fellov~hip.
Special thar, Jo tothe Omm: f~ Systmm Scknm md zhe L*bm.atm.y for ~ r  mdRnem~ at Simon Fruer Unlve~izy fro.
additkmal ml~pe~ I would I.'%-..
to t/rank Dm~P~ md Om ACL  mv i~a for thmt ?,omm~B ,~4 m I l ~Like HPSG, the fundamental construction used in UCG is thesign.
A UCG sign has auributes for phonology, category,semantics and order.
Consider the sign for the expression Marywalks hown in (I).
(I) Mary-walkssmt\[f'm\]\[eli \[\[fllmary(fl), \[el\]walk(el,fl)\]The phonology attribute of this sign (ie.
Mary-walks) represents aphonological specification of the linguistic expression associatedwith the sign.
For our needs we will use a simple sequence ofwords separated by hyphens.
The category structure of a sign isvery similar to that used by categorial grammar.
There are threeprimitive categories, namely sent, np, and noun.
Complexcategories are of the form A / B, where B is a sign and A is acategory (either primitive or complex).
The semanticrepresentation uses a language called InL (Zcevat, Klein andCalder 1987) which incorporates many of the features ofdiscourse ~p, csentation theory (Kamp 1981).
An InL formula isof the form \[a\]Condition where Condition consists of a predicatename followed by its argument list.
Each element of theargument list is either a variable (ie.
discourse marker) or an InLformula.
The variable a preceding Condition is the index of thefonnnla.
The order attribute of a sign contains information whichis used to determine the ordering of the phonology of componentsduring rule application.
If an argument possesses pre as its order,then the phonology of the functor precedes that of the argument inthat of the msuh.
The value post describes the opposite situation.There is no restriction on the order of (1) as indicated by theappearance of the 'don't care' variable '_'  in the order attribute.InL variables are assigned sorts.
A sort can be thought of as acollection of features based on factors like gender and number.Unification of variables of incompatible sons will fail, thusproviding a mechanism by which semantic information canrestrict possible derivations.
There are different sons for events,states and objects.
Variables of the object sorx may be furtherspecified with respect to gender (masculine, feminine, or neuter),and number.
Unsorted variables will be denoted by the leuer a,events by e, states by s, and gendedess objects by x, y, and z. Theletter m will be used to represent variables corresponding to amasculine object, f for feminine, and n for neuter.
Uniqueidentifiers which will be used to distinguish variables will appearas numbers following the variable names (ie.
nl, ml, s2).Signs may be underspecified and through the application of thegrammar ules they may become increasingly specified by themerging of information.
Only two grammar rules are proposed in('Zeevat, Klein and Calder, 1987):(2) Wt-W2: C: S: - ~ Wt: C4(W2:C2:S2:pre): S: _,W2.
'C2"S 2:pre(3) W2-WI :  C i  S :  - -d, W2:C2:S2:post  ,Wt: C/(W2:C2:S2:post): S: _228They cort~pond to forward (2) end backward O) functionalapplication, the two roles in basic categorlal grammar.
Capitalletters am used to denote variables that are associated withunspecified values which will be instantiated during a derivation.Colons are used to separate the different attributes of the signwhen the sign is displayed in a horizontal rather than verticalmanner.
Consider the result of applying rule O) to the two signsassociated with Mary and walks which are shown below.
(4) Mary: np: mary(fl): _(5) walkssent\[fin\] / (..:np\[nom\]:\[x\]S:post)\[el\] \[\[x\]S, walk(el,x)\]The result of rule application is the sign that was introduced in(1).
Rule application builds up the semantics of an expression byinstantiating unspecified components, like S in the lexical entryfor wa/ks (5), that have been placed into the s~rnantic stmc:ure.Associated with every linguistic expression is a derivation treewhich describes how the sign corresponding to the completeexpression is derived from grammar rules operating over signsassociated with lexical entries.
The leaves of this binary tree arelabelled with signs for individual words, the root is labelled by thesign for the complete xpression, while the other nonterminalnodes are associated with intermediate xpressions.
Eachnonterminal node is labelled with the result obtained by applyinga grammar ule to the signs which are referred to by its twodaughter nodes.
The edges to the daughters of a nonterminalnode are designated functor and argument depending on the rolethat the sign at the daughter node plays during grammar uleapplication.As an example, the derivation tree provided in Figure 1illustrates how backward functional application (BFA) (3) relatesthe signs for Mary (4) and wa/ks (5) to the sign associated withMary-walks (I).
The functor edge of a nontenninal node isrepresented by a line darker than that of the argument edge.
Ruleapplication combines signs and builds derivation trees as a sideeffect.
A more generel form of this operation would be tocombine trees to yield Uees directly.
Partial descriptions of acomplete derivation tree could be combined to yield anincreasingly further specified derivation tree.The principle advantage of combining partial descriptions liesin the ease with which certain dependencieJ between differentconstituents can be described.
Consider the general case in UCGwhere a functor is applied to an argument to produce a result~Each of these three constituents possesses its own set of featureswhich describes the phonological, syntactic and semanticinformation associated with it (Bouma, Kcenig and Uszkoreit,1988).
The relationship between these constituents is outlined inFigure 2.
The information F associated with the funaor can bedependent on the information G associated with the argument; hedependency relation is shown by the are labelled 0 in.
Figure 2.Such a dependency c4m be captured in the lexicel entry for thefunctor since the ftmctor contains the information associated withthe argument in its own category name (as highlighted in bold inFigure 2).
We have already seen an example of such adependency in Figure I - the senumtic information of the funetoris dependent on that of the argumenL While the dependencymarked by ~ can be captured in the lexicon in UCG, thedependency marked by p must be captured by the grammar rule;the grammar rule must state how the information F' associatedwith the result is obtained from that of the functor and that of theargument.
If we adopt he premise that F=F, than p becomes anidentity relation and there is no need for introducing additionalgrammar rules to capture a more complicated relation p.Unfortunately, there are cases where the condition F=F" does notapply.
For instance, Bomna (1988) argues for the need of a lexfeature which would distinguish lexical elements from phrases; alexical funotor and its result would have different values for thisfeature (+iex and -lex respectively).
Similarly, ff one wanted toencode bar level information (Jackendoff, 1977) into the differentconstituents hen there would be numerous cases where the barlevel of a functor and that of its argument would not be the same.Most importantly though, we can provide a straightforwardm~ount of reflexivisation if we are not subject o the requirementthat F--F' as we shall see shortly.BFA Mary-walkssent{~\]\[el\] [\[fl\]m~y(fl)0 \[el\]walk(el&l)\]Mary walksnp\[nom\] sent\[fin\] / (Mary: np\[nom\]: [fl\]mary(fl): post)\[fl\]mmy(fl) \[el\] \[\[fl\]mary(fl), \[el\]walk(el.f l)\]postFigure 1: Derivation TreeresuhFigure 2: Dependencies Between ConstituentsBy using a partial description of a derivation tree as a lcxicalantry, dependencies corresponding to O in Figure 2 are captured inthe lexicon instead of in the grammar rules.
For instance, theBFA grammar role states that the phonology of the resultingcoostitmmt consists of the phonology of the argument followed bythat of the functor.
The lexicel entry for walks (5) implicitlydescribes uch a relationship through the presence of the postfeature.
This fcamre is interpreted by the grammar role, with therelation being explicitly represented in the result.
If a partialdescription like the one introduced for wa/ks in Figure 3 is used asa lexical entry, this reladon is explicitly represented and thepresence of a post fcstum is actually not necessary.
Furthermore,local relationships other than those corresponding to?~ and p canbe captured explicidy in the lexical entry.
For instance, thefeatures associated with an argmnent can be dependent on thoseof its functor and information associated with the result can bedirectly related to that of the argument.
One could even have amore long distance dependency, say between an argument and asubconstitoent of its funetor, stated dimctiy in the lexical entry.Most importantly, the use of FA specifications similar to thoseintroduced in Figure 3 allows us to capture the restrictionsassociated with reflexivisation i  the lexicon, without requiringthe introduction of additional grammar rules or principles.FUNCTION ARGUMENT SPECIFICATIONSAlthough the grammar rules operate over trees in TUG, signsstill have a role to play in the organisation of information.
Thesigns of TUG differ from those of UCG in several respects.
First,229order information is not an explicit part of the TUG sign.
Thesubcategorisation information that is contained in the UCG sign isnot present in the TUG sign; it is represented in the tree structuresof the framework instead.
On a point of terminology, the secondattribute of the TUG sign is referred to as the syntax instead of thecategory, since it contains more than just categorial information.Finally.
the TUG sign will also contain an attribute for bindinginformation.
For now, however, we will restrict our discussion toonly the fh'st hree attributes of a TUG sign.<a>\ [ s l \ ]  _every-W\[np,C\]\[sl\] impl(\[x\]S) - -every o.: W\[det\] \[noun,C\]\[sl\] impi \[x\]S?
> man\ [noun,_\]man(ml)<~> p: W-walks\[u~*,f in)LJ P(\[x\]S) (walk(el,x))W walks\[np,nom\] {v,fin\]{_\] P(\[xIS) walk(el,x)wa/k~Figure 3: Lexical EntriesIn TUG, a binary tree called an FA specification is associatedwith every linguistic expression.
These specifications resembleparl~l descriptions of derivation trees.
Each node of this binarytree is labelled with a sign.
The root node possesses a signcorresponding to the complete xpression, while the leaves arelabelled with signs for the component words or morphemes.
Eachnonterm/nal node dominates a functos node aud an argumentnode.
The terms functor-sign and argument-sign will be used torefer to the signs associated with the functor and argument nodesrespectively.
The left-to-right ordering of functor and argumentedges is not relevantl To refer to the sign of the root node of stree, the term root.sign will be used.
The tees rooted atnonterminal nodes of an FA specification will be called subtrees.An FA specification contains an auxiliary list which specifiessubtmes of the FA spe~:ification with which other FAspecifications must be unified.
It is represented asa list of labelscontained in angle brackets appearing to the left of the FAspecification as illustrated in the lexical entries introduced inFigure 3.
Observe that there are two edges leading from thefunctor-sign of the FA specification for every which do not lead toany nodes.
These hang/rig edges are associated with nodes whoseterminal or nonterminal status has not yet been established.
So anFA specification may either state that a constituent has nosubconstiments (terminal node sign), it may state that it hassubconstiments (nonterminal node sign), or it may say nothingabout whether or not a constituent possesses ubconstiments(node with hanging edges).The single grammar rule of TUG is introduced in (6), where H adenotes an FA specification with auxiliary list rrIt describes how the FA specification for a complex linguisticexpression is obtained from unification of the FA specificationsassociated with component expressions.
This rule states that anFA specification C (which will be called the auxiliary tree)possessing an empty auxiliary Hst \[ \] is unified with the subtree ofH described by the first element of the auxiliary list of H. \[C/a\]denotes the list formed by adding C to the front of the list ~ Theresult of this rule is a more fully i~tanfiated version of theprimary tree, H. The resnlt's auxiliary list will consist of all butthe lust element of the auxiliary list of the primary tree.
Viewedprocedurally, this rule states how to construct a new FAspecification from two pre-existing FA specifications.Deelaratively, the rule merely states a relationship between FAspecifications.
To illustrate how FA specifications aremanipulated by this singJe grammar ule we will trace theooustmction of the FA specification associated with the sentenceEvery man wa/ks, using the lexical entries introduced in Figure 3.The lexical entry for every requires an auxiliary tree to beunified at the location marked by a.
For the moment, let usexamine the sut tee  associated with the argument of the lexicalentry.
This subtree describes a functor-argument relation betweentwo linguistic expressions.
One is a functor noun of unspecifiedcase C possessing an index compatible with the 'entity' son, asdesignated by the presence of x, while the other is an argumentdeterminer with phonology every.
Alternatively, one could viewthe determiner as a ftmctor over the noun as suggested in(popowich, 1988).
However, treating the noon as the fonctorallows a uniform treatment of nouns with possessive determinersand those with 'regular' determiners.
This is the same treatmentthat has been adopted in HPSG (Pollard and Sag, 1987).
We willpropose that for any subtree the functor-sign and the root-signwill generally possess the same syntactic category information,except for bar.
levi information (Popowich, 1988), in a mannert~miniseent of the head fe , '~e  convention of GPSG (Gazdaret.aL, 1985).
Observe that the phonology of the root-sign of thissubtree is that of the argument-sign followed by that of thefunctor-sign.
The argument-sign introduces a semantic index ofthe 'state' sort which will also be the index of the InL formula ofany constituent which possesses a universally quantified nounphrase as its argument.
This means that sentences like Every manwalks will describe a state, even though the word walks describesan event.
This argument-sign also introduces the semanticconnective/rap/which is associated with the universal quantifier.<>\[sH _every-man\[np,C\]\[sl\] impl(man(ml)) - -every man\[de~l \ [~ ,C l\[sl\] impl man(m 1)Figure 4: Intermediate FA SpecificationWhen the FA specification for man is treated as a (depth zero)auxiliary tree which is unified with a from the lexical entry forevery, we get a more instantiated FA specification which isassoc~ted with every man.
This specification, which isintroduced in Figure 4 is similar to the lexical entry for everyexcept hat x has been i~stantiated to nti , S to man(m\]), and W to230man.
It also differs from the lexical entry for every in that it doesnot possess any iabelled subtrees with which an auxiliary treecould be unified.
As an abbreviatory convention, the indexpreceding a predicate which contains the index as its firstargument will be omitted.
So man(ml) is actually an abbreviationfor \[ml\]man(ml) and walk(el,x) is an abbreviation for\[el walk(el,x).The FA specification for every man can act as an auxiliary treeto be unified with \[3 from the lexical entry for w~/~ shown inFigure 3.
Any potential auxiliary tree must have an argument-sign whose syntax is compatible with the 'nominative nounphrase' specification.
No restrictions are placed on the indices ofthe root and argument signs; these indices will be specified by theauxiliary tree.
The lexical entry for wal~ states how thesemantics of the n~ot-sign is formed from that of its functor andargument signs.
When the FA specification for every man iscombined with this primary tree, P of the primary tree is unifiedwith b~ol of the auxiliary tree, x is instantiated to ml, and S isunified with man(ml).
C of the auxiliary tree is instantiated mnora.
The resulting FA specification is shown in Figure 5.< > every-man-walks\[san~fml\[sl\] impl (man(m 1)) (walk(e l,m 1 ))every-man walks\[npo~om\] \[v,fin\]\[sl\] impl(man(m 1)) walk(el,m 1)every man(d~l (neun,neml\[sl\] impl man(m 1)Figure $: Final FA SpecificadonThe FA specification for the complete sentence describesexactly one FA structure.
While FA specifications may containvariables and partially instantiated attributes, FA structures donot.
The lexical retries of TUG can be viewed as contributingconstraints o the FA structure that is associated with a complexlinguistic expression with the single grammar rule being used tocombine these constraints.
During the analysis of an expression,constraints are continually proposed and never rescinded.Eventually, these constraints will describe the final FAstructure(s).
Thus we distinguish between information structuresand the descriptiona of those structures in a manner similar to theapproach proposed by Kaplan end Bresnan (1982) and discussedin detail by Johnson (1987).
An FA specification can beinterpreted as describing a set of FA straetums.
Gnmrmar uleapplication thin corresponds to the intersection of the setsassociated with the component FA specifications.
The resultingset is associated with a new FA specification.
If the resulting setcontains no FA stmcuues, then there is no FA specificationassociated with the resulting set - grammar rule application fatlslAn ungrammatical sentence (ie.
one without an FA structure) willnot be assigned an FA specification.
The result of the8rammatical nalysis of a sentence is the set of FA structuresdescribed by the final FA specification.
Grammatical sentencescan have one or more FA specifications, each of which willdescribe at least one FA structure.We are requiring a wellformed FA specification to describe atleast one FA structure.
In this respect, FA specifications differfrom the description languages introduced in (Kaspar and Rounds,1986) and in (Johnson, 1987).
These languages allowdescriptions for which there may not be associated structures.
FAspecifications are actually higher order descriptions which may bedefined in terms of these description languages.
They areintended to (transparently) describe structures associated withlinguistic expressions; they arc not intended to be a powerfullanguage for describing fexmre structures in general.
Instead ofusing FA specifications to describe FA structures, we could useone of these lower level description languages in conjunction witha restriction requiring awellformed escription to describe at leastone sl.nlcture.In TUG, many local dependencies between grammaticalconstituents and some other bounded relationships can bestipulated explicitly in lexical entries.
This is because FAspecifications for one lexical entry can directly access informationcontained in the sign associated with a different linguisticexpression.
For instance, we have already seen how the lexicalent~ for a quantifier can directly specify semantic information(the index) for a sentence in which it is contained.
It is possible toincorporate the constraints on reflexivisation perspicuously in thelexicon without causing unnecessarily complicated lexical entriesand without requiring the introduction of additional principles orgrammar rules.REFLEXIVE ANTECEDENT INFORMATIONThe TUG treatment of reflexives will be based on the conceptof reflexive antecedent information, henceforth R-ardecederainformation.
R-antecedent information, which will be distinctfrom the semantic information contained in a sign.
will beresponsible for determining the antecedents of reflexive pronouns.The constraints on reflexivisation will determine how the R-ante_-'eden__ t information of one sign is related to the informationcontained in other signs of an FA structure.Since the signs corresponding to the reflexive and itsantecedent eed not both be present in the FA specification for averb (as illustrated in sentences like John wrote a book about apicture of himself), we will introduce a reflexive attribute into theTUG sign.
This 'binding' attribute will contain the R-antecedentinformation ee_tied for establishing an anaphnric relationshipbetween the reflexive and its antecedent.
Since we have alreadyseen the type of information contained in the first three attributesof the sign, let us consider the information contained in the fourthattribute.The antecedent information is responsible for determining thediscourse marker that can be the antecedent of the pronoun.Based on a proposal for the treatment of personal pronounsdescribed in (Johnson and Klein, 1986) we will propose that theR-antecedent information explicitly describes the set of potentialdiscourse markers available as antecedents for reflexives.
This isthe information that will be contained in the reflexive attribute ofa sign.
The lexical retry for the reflexive will only need to statethat its antec~ient marker is an element from this store.
Unlikethe Cooper storage mechanism described in (Cooper,1983) which has been adopted in various proposals for anaphnra(Bach and Panee, 1980, Gazdar et.al., 1985), our reflexiveattribute contains a set of antecedents, not a set of anaphors.The R-antecedent i formation will be represented asan orderedlist of discourse markers (sorted variables) corresponding topotential antecedents.
Lists will be displayed in square bracketswith the different elements eparated by commas.
The notation\ [ .
.
J / J  will be used to designate x as an arbitrary element from afist with \[x/A\] denoting the list resulting from the addition of andement x to a llst A.
The sign associated with a reflexive231pronoun will resemble the one shown in (7).
(7) himself\[ np, obj \]true(m)\ [ .
.
.m l_ \ ]The discourse marker appearing in the semantic formulaassociated with the reflexive pronoun is an arbitrary element (ofthe masculine sort) of the reflexive attribute of the pronoun.
Thecondition true introduced in the semantic attribute is alwayssatisfiable for any discourse marker.
We will discuss thesemantics of the reflexive pronoun in more detail shoaly.The operation of selecting an arbitrary element from a list ofarbitrary length is a fairly powerful operation.
Nevertheless, itseems to be a sufficiently primitive operation to be included in aframework.
It carmot be expressed in the PATR-rl framework(Shieber et.al., 1983) which is often used to implement grammars.If functional uncertainty (Kaplan, Maxwell and Zaenm,1987) were included as a primitive in PATR-n, then this arbitraryelement selection operation could be implemented.The constraints on reflexivisation, which affect the distributionof R-antecedent information and its interaction with other formsof information, are incoq~orated directly into the TUG lexicalentries.
One constraint is derived from Keenan's (1974) proposalwhereby the antecedent for a pronoun is an argument of thefunctor containing the pronoun.
This can be incorporated intoTUG by having the R-antecedent information of a functor consistof the R-antecedent information of its parent sign augmented withthe semantic index I of its argument.
To illustrate this 'flow' ofR-antecedent information, consider an analysis of the simplesentence Mary loves herself.A series of FA specifications corresponding to different stagesof an analysis for this sentence are shown in Figure 6.
Tohighlight the relevant information, much of the informationcontained in the signs of ti~se FA specifications has nut beend/splayed.
The first FA specification corresponds to the lexicalentry for loves.
Observe that the R-antecedent information of thefunctor-sign consists of the semantic index of the argument sign;the reflexive attribute of the sign associated with the object noun ?phrase is the same as that of the constituent which contains itAlso note that the InL formula from the sign associated with theverb refc~nces the semantic indices of the signs for the two nounphases.
The second FA specification from Figure 6 illustrates theeffect of unifying a sign (actually a depth zero tree) correspondingto the noun phrase Mary with the argument-sign of the initial FAspecification.
Note that the semantic index, f / ,  of Mary isintroduced into the reflexive attribute of the functor over Mary.
Italso appears as the second argument of the semantic predicatelove (underlined in the FA specification).
Since the lexical entryfor the verb also embodies the relation requiring the reflexiveattribute of an argument-sign to contain the same information asits parent sign, f l  is also introduced into the sign associated withthe objea noun phrase.
This 'flow' of R-antecedent informationis highlighted by the dark arrows in Figure 6.
In the final FAspecification from this figure, a sign corresponding to thereflexive pronoun is unified with the sign of the object nounphrase in the FA specification.
The reflexive pronoun obtains itssemantic index from the information contained in its reflexiveattribute as highlighted by the small arrow.
This semantic indexis used as the final argument in the InL formula associated withthe verb (which is underlined in the FA specification).By incorporating Keenan's (1974) proposed ependency intoFA specifications in this manner, we obtain a relationship muchlike predication.command (Hellan, 1988) and F.command(Chierchia, 1988).
Although these 'command' restrictions onreflexivisation can account for much of the data concerning thedistribution of reflexive pronouns, additional restrictions arenecessary (Popowich, 1988).
Just as the syntactic c-commandrelation needs to be used in conjunction with a locality restriction(eg.
the syntactic 'clause-mate' restriction), the distribution ofR-antecedent is restric:ed by a semantic locality restriction.
Sucha restriction, which is proposed in Pollard and Sag (1983),essentially states that reflexive 'information' cannot pass throughcategories of a generalised prediccuive type.
A generalisedpredicative takes an NP denotation as its argument, and returnseither an NP denotation or a 'proposition.'
Adopting the notationused in (Dowry, Wall and Peters, 1981), the semantic type of afunctor that takes expressions of semantic type c~ as arguments oproduce resulting expressions of type ~ is <a,\[3>.
This means thatthe semantic type of a generalised predicative is either<NP' ~ > or <NP' ,S" >, where NP" and S' are the semantictypes associated with noun phrases and sentences respectively.Conventional categories that are associated with generalised"l'~ ~.. .4 ~ or r=~i,,iss~im a,~ri~ in (Popo,~i~ t~ u~s the predicatives include possessed nominals (like picture of himself ina~o,,'c i~u ~ ot ~ R,~mt/c/,,acz of ~ ,~rsw,=L Sm~ ~ two iaak~ the phrase John's picture of himsel\]) and verb phases.L'~ kl~tirad inra~t c~um, v~ wiU sk~llty o~ dlscu~ion b,/usins tho s~sa~ .
(i) W-Ioves-W' (//) Mary-ioves-W' (iii) Mary-loves-herself.
.
.ii" i i  ii"W Ioves-W' Mary lovea-W ?
Mary  loves-herself\[np, nora\] ... \[ap, noml ... \[rip, nom\] ...\[i' .
.
.
.
.
.
tm.
.
.- -  / \  ?W' loves / W "/ ~' loves h~rself loves\[np,obj\] ... ~ \[np,obj\] ... \[np,obj\]\[y\]... Iove(sl,x,y) \[y\]... love(sl.fl,y) J i l l .
.
.
iove(sl,fl,?D ... " ' "  ... < ...Figure 6: Distribution of R-Antecedmt Information232The presence of ?
general~ed predicative resulu in theblocking of R-antecedent information.
Consider a subtree of anFA specification (like a in Figure 7) where the functor-sign is anZ F.,~d~\[xl \[YlNFigure 7: Predicate-Command and Locality Restrictionsgenerafisod predicative.
The R-antecedent information of thegeneralised predinative is ?
list consisting of only the semanticindex of the argument-sign.
Tbe R-antecedent informatinn of theroot-sign does not contribute to that of the functor sign.
The signsof an FA specification conesponding to genendised predicativefunctors will be marked with ?
syntactic feature to distinguishthem from non-goneralised predicatives.
Functor-signs will bemarked with the feature gprd ff they are generalised predicative?.Non-generalised predicative functors which take noun phases asarguments will be m?rked as ?prd, and other functors willpossess the fearer?
-prd.
Arguments will not be marked with any'predicate' features.
These fcamres are not actually necess?ry forour account of the dism'butiun of reflexive pronouns; ourrestrictions on reflexivisation can be defined in terms of otherbasic features.
The use of these features will allow the behsvionrof R-antecedent information to be observed more easily, asillustrated in Figure 7.
2 Foe predicative functors, the R-antecedent information of the funotor-sign is composed of thesemantic index of the argument-sign and the R-antecedentinformation from the root-sign.
Note that the R-antecedentinformation of the sign labelled a is not included in that of thegeneraliscd predicative, but the semantic index of the argument-sign of a is included in that of the functor.
For nun-predicativefunctors, the R-ante?~lent information of the root-sign will be thesame as that of the functor-sign.AN EXAMPLENow that we have seen bow R-antecedent information can beincorporated into FA specifications, we can exmnine how thisinfonnatiun i teracu with other forms of infonnatiun during theanalysis of a more complex sentence.
We shall consider theanalysis of the smtence Mary Iove~ a picture of herself.
Afterintroducing various lexical entries, we shall see how they arccombined with lexical entries introduced earlier in this paper toform more complex FA specifications.shmcsd ot u .
.~p~ them thee di~m~t ~ dlmcdy iutl~ vmlmmI~iod ran'ms, tl~y c~m bo mn~d~l inL.-;~t o~c.,~ whlch cm tm us0d in lask:e/ca~ (Sbmbmoud~ 19~.Popowlch, 19~), All otthotazi~/mm~ ~dBmd m~ i~l~ cm I~ s~plifizd tlm~lh tl~ m of Imld~.In the lexical enu 7 for herself in Figure 8, it is the argument-sign that is assoc~ted with the linguistic expression herself.
Thissign contains ?
restriction \ [ .
.
.
f / _ \ ]  which specifies that thesemantic index f associated with herself is ?
member of thereflexive attribute of the sign.
This arbitrary element of thereflexive store is required to be ?
variable of the feminine sort.The s~tex of this sign states that herself can act only as a nounphrase of the objective case.
Thus it cannot appear in anypositions in an FA specification which require the noun phrase topossess ome other case.
like no ,~ ive .
~e  other nounphrases, the argument-sign contains the semantic onnective andwhich will be used in determining the semantics of the font-sign.Unlike lexical entries for proper names and quantified nounphrases, the semantics of the argument-sign does not associatemy restrictive condition on the index it introduces; the conditiontruc is always rafsfiable for any discourse marker.
This ties inwith the view of pronotms being semantically underspecifiedlinguistic items.
Viewed in terms of DRT (Kamp, 1981), thefonnule tru~(.O (which is an abbreviation for \[f\]true(/~) merelyintroduces a discourse marker into the universe but does notintroduce any condition on that marker.
Since the syntax of our~ant ic  notation requires a formula to consist of an index-condition pair, we need to introduce a condition like true alongwith the discourse marker.<>\[a\] - -herself\[np,obj\]\[t\] and(u~e~O) ~ __\[.
.
.
ft_\]Figure 8: Lexical Entry for herselfThe Icxical entry for the 'depicfive' preposition of.
which isused in picmre-nonn constructions, i  introduced in Figure 9.
Oftakes an object noun phrase argument to form a constituent whichmodifies a common noun.
Additional restrictions would berequired to ensure that it modifies only depictive nouns likepicture and portrait.
Tim lexical entry requires an auxiliary treecorresponding to an object noun phrase to be unified with 0t andone for a noun to be unified with \[~.
It also introduces a semanticformula of(x,y) which requires the entity denoted by x to be of theentity denoted by y. Semantic formulae of the form \[aI\[A,B\] aresbbreviatiuns for formulae of the form \[a\]and(A)(B).
Thefunctor-sign of a has been specified as ?
generalised predicative -it takes ?
noun phrase as an argmnent and results in another nounphrase.
According to our restrictions on R-antecedentinformation, the R-antecedem information A of the root-sign of ais not included in that of the generalised predicative but it isincluded in that of the argument-sign.
In this way, the sameR-antecedent information that is associated with the root-sign of0t is also available to the embedded noun phrase (ie.
the argumentof ot) as highlighted in bold in Figure 9.
The functor-sign of thelexical entry for of possesses the feature +prd since it takes anoun phrase as its argument to produce a noun.
Since anargument sign always inherils its R-antecedent information fromthe root-sign, the same R-antecedent infomaation is associatedwith both the root-sign of the lexical entry and the embeddedphrase.In order to obtain the FA specification for picture of herselfshown in Fignrc I0, the lexical enU 7 for herself acts as the233<~> W-of-W'\[hoLm\]\[x\]\[\[x\]S, \[alP(\[y\]S')(of(x,y))\]A~: w\[noun,+prd\]\[xlS\[xlA\]c~ of-W"{np,of\]\[a\] P(\[y\]S')(of(x,y))AW' of\[np,obj\] \[np,of, gprd\](_\]P(\[y\]$') of(x,y)A \[y\]Figure 9: Lexical Entry for ofauxiliary tree which is unified with cz of the lexical enu 7 for of,and the lexical entry for picture is unified with \[3.
Since\[f\]and(tru~O~ ) is an abbreviation for \[j~and(\[f\]tru~O~ ) in Figure 8,the unification of this formula with \[_\]P(\[y\]S') from the primarytree will result in P becoming instantiated to and, y to~ and 5" totrue(/).
Note that in this example, P is a variable over our (finite)set of semantic onnectives.
The FA specification for herselfintroduces a restriction on the reflexive auribote of the signassociated with herself This restriction requiresfto be a memberof the list A which is still uninstantiated.
To represent that therestriction \[ .
.
.
f /_ \ ]  was unified with A, we will introduce A as asubscrila on this restriction in the FA specifications that we arediscussing.
This will make it easier to examine the behaviour ofR-antecedent information.
The lexical entry for the noun pictureintroduces a marker of the neuter sort, n/, and includes acondition which requires this marker to be a picture pie(M).When this lexical entry is combined with the FA specification forof herself, x from the primary tree gets instantiated to the variableassociated with the picture nl.
Note that\[nl\]and(true(jO)(of(nld~) is equivalent to \[ni\]of(nldO.< ?
picture-of-herself\[noun\]\[nl\]\[pic(nl), of(nl,f)\]Aof-herself picture\[np,of\] \[noun,+prd\]\[nl| and(true( f))(o f(n I ,f)) pic(nl)A \[nl I A\]herself of\[np,obj\] \[~,of, gprd\]\[t'\]end(true(O) of(nl.O\[...fw_\] A \[tlFigure I0: FA Specification for a picture-nounThe FA specification for the determiner a is very similar to theone for the universal quantifier introduced in Figure 3.
We willnot discuss it in detail here.
Instead we will just note that it isconstructed so that the reflexive attribute of the mot-sign of theFA specification for the phrase a picture of herself will be thesame as that of the sign associated with the complex noun pictureof herself.
Since the reflexive attribute of the sign associated withthis complex noun is the same as that of the embedded reflexivenoun phrase (see Figure I0), this means that the R-antecedentinformation, A, of the complex noun phrase a picture of herself isthe same as that of the embedded noun phrase associated with thereflexive pronoun.
So, any antecedents available to the complexnoun phrase will also be available to the embedded reflexive.This will result in the appropriate distribution of R-antecedentwhen the FA specification associated with a picture of herself actsas an auxiliary tree to be combined with the primary treecorresponding to the lexical entry for love~.The lexical entry for the transitive verb loves (Figure 11)requires two auxiliary trees corresponding to its ohjea and subjectnoon phrases to be unified with suhtrees a and \[3 respectively.
Itis structured in much the same way as the lexical entry for walksdiscussed earlier.
Note that for a, the functor-sign is not ageneralised predicative and so the R-antecedent information ofthe functor sign is made up of the semantic index y of theargument-sign a d the R-antecedent information \[x\] of the root-sign.
\[3 does have a generalised predicative functor-sign, so theR-antecedent information A' of the root sign is not included inthat of the generalised predicative, \[x\].< o., ~?
\[3: W-Ioves-W'\[sengfin\]\[_\] P( \[x\]S)(\[a'\]P'(\[y\]S')(Iove~ s 1,x,y)))A"W a: loves-W'\[rip, nom\] \[v,fin, gprd\]\[_\]P(\[xlS) \[a'\]P'(\[ylS ")(love( s l,x,y))A' \[x\]W' loves\[np,obj\] \[v,fin,+prd\]\[1P'(\[y}S') Iove(s l,x,y)\[x\] \[y,x}/ \Figure II: Lexical Entry forlovesWhen the lexical entry for loves takes the FA specification fora picture of herself as an auxiliary tree to be unified with a, thereflexive attribute A from the auxiliary tree becomes instantiatedto \[x\].
But recall that there is still an additional restriction placedon the A which requires f to be an arbitrary member of A. Thismeans that f must be unified with x; the subject of the verb isstipulated to be an entity possessing a marker of the feminine sortas illustrated in Figure 12.
Unification of the auxiliary tree with aalso results in y being instantiated to the variable associated withthe picture hi.
The semantic formula PIC(nld~ in Figure 12 is anabbreviation for the somewhat lengthy formulatrill \[pie(M), oj~nl J)\].When the FA specification from Figure 12 is combined withthe auxiliary tree corresponding to the lexical entry for Mary, thevariable f from the primary tree becomes insmntiated to thediscourse marker associated with Mary.
An attempt o unify anFA specification for a 'masculine' noun phrase with \[3 of theprimary tree would fail since the nominative noun phrase isrequired to possess a semantic index of the feminine son (asshown in bold).
Thus, for a sentence like John loves a picture ofherself there would be no FA spedfication and consequently noFA structure (unless there were some female ntity named John).COMPARISONThe name "Tree Unification Grammar" suggests that TUGmight be related to other unification-based frameworks as well asto other tree-based frameworks.
We shall briefly compare TUGwith some of the beuer known of these related frameworks.
A234< 13 > ~: W-loves-a-picture-of-her s lf\[sent, fin\]f l  P(\[x\]SX\[sl ]\[PIC(nl,0~ove(sl,fja 1)\])AW loves-a-picture-of-herself\[np, nora\] \[v,fm,gprd\]\[_\]P(\[f\]S) \[s 1 \] \[PIC(nl j),love(s l,f,nl )\]A If\]a-picture-of-herself loves\[np,obj\] \[v,fin,+prd\]\[n l\]and(PlC(n l,f)) love(s l,f, nl)if\] {nl,t'\] o..t" '-.o.......:" hcrsclf ""-.." \[np,obj\] "'........ \[t\]and(~c~6)""\[flFigure 12: FA  Specification for a verb phrasemore detailed discussion can be found in (Popowich, 1988).Uszkoreit (1986) introduces Categorial Unification Grammar(CUG) as a class of grammars which combine the features ofcategorial granunars with those of unification granmlars.
InCUG,  directed acyclic graphs (DAGs) are used as the basicgranunar structures.
Granunatical c~t~stituents possess attributesfor phonology, syntax, and semantics.
These constituents areessentially the signs of CUG.
Two grammar rides, for forwardand backward funct/onal application, are used to form newconstituents.
CUG is sin~lar to PATR-r\[ in that it could serve asa language into which TUGs could be translated.
A potentialdisadvantage of CUG is that it might be too unrestricted in thetype of operations that it allows (van Benthem, 1987).
Inaddition, the type of structures allowed in TUG is very restricted(binary trees containing only a fixed number of attributes) whilethose allowed in CUG are much less resuicted.
The structuresused by TUG, UCG and other formalisms can be translated into alow-level format consisting of CUG DAGs.
A major short-coming of using CUG or PATR-I/as a linguistic formalism is thatthe dependencies that am necessary for determining anaphoricrelationships are 'hidden' in the DAG describing the linguisticexpression; information is distributed in a fiat graph structure withno higher order grouping expressed.
Although this may bebeneficial with respect to implementing grammars, it can make itdifficult to work with the structures.
The advantage of the FAstructure is that it is an explicitly hierarchical ~6v, r.sentationstructure - a tree with structured .nodes - instead of a graph ofsimple nodes.
This hierarchical structure allows many linguisticgeneralisations, particularly those associated with reflexivisation,to be stated easily and transparently.Tree adjoining rammars (TAGs) (Joshi, Levy and Takahashi,1975, Vijay-Shanker and Joshi, 1988) possess trees as basicgrammar structures, and grammar ules are used to alter thestructure of these trees.
The relationship between TUG and TAGis very superficial as will be illustrated after a short description ofthe framework.
A TAG contains/n/t/a/trees and auxiliary trees.Initial trees are defined as n-ary trees possessing only terminalsymbols as leaves.
The leaves of an auxiliary tree are all terminalsymbols except for a single nontenninal, the fooL which is of thesame category as the root of the tree.
These two types of treescomprise the class of elementary trees.
There is a trec adjoiningoperation which is used to form derived trees.
AppLication of thisrule results in the insertion of auxiliary trees into the middle of~nitlal trees or other derived trees, subject o speci~c restrictions.TAGs are fundamentally different from TUGs since the adjoiningoperation alters the structure of the ume instead of merely furtherinstentiating it.
Adjoining involves the insertion of trees atinternal nodes while the TUG operation can be viewed as theoverlaying of trees to form larger structures.
The TAGframework has fully specified trees that are modified by otherfully specified trees in order to obtain more complex fullyspecified trees.
In TUG, partially specified trees are combined(not modified) in order to ohtain a more fully specified complextree.
Feature structure based TAGs (FlAGs) (Vijay-Shanker andJoshi, 1988) are more closely related to TUG than traditionalTAGs.
The adjoining operation of FTAG amounts to combininga description of the auxiliary tree with that of the tree into whichit is adjoined.
In this way, a more complete description of thefinal tree is gradually constructed.
However, in FTAG treedescriptions the internal tree structure is not fixed.
Thedescriptions are organised so that additional trees may be adjoinedat specific locations.
After all the required adjoining operationshave been performed, these gaps in the tree structure are closedvia unification.
In TUG tree descriptions (FA specifications) theinternal tree structure is fixed; the fringe nodes of the FAspecification are the only ones for which tree structureinformation may not be specified (as designated by the hangingedges described exriler).The most closely related grammar formalism to TUG is HPSGas described in (Pollard and Sag, 1987).
The phrasal signs ofHPSG are almost notational variants of the FA specifications ofTUG; phrasal signs were not present in the early forms of HPSG(Pollard, 1985) from which UCG and TUG evolved.
Aside fromthe dighfly different appearance of these different structures, FAspecifications are slightly more restrictive in that a node may onlyhave two descendents instead of the unlimited number allowed inHPSG.
TUG also differs from HPSG in that it requires only one(instead of two) grammar rules.
This is a consequence of TUGhaving essentially phrasal-signs a lexical entries.
In this way, alexical entry can directly access information other than thatassociated with its sister signs in a derivation tree (or phrasalsign).
This allows interesting proposals for the treatment ofreflexives in controlled complements and unbounded dependencyconstructions which am discussed in dc~aJ.l in (Popowich, 1988).SUMMARYIn TUG,  the phonological, syntactic, semantic and antecedentinformation describing linguistic expressions is contained in signswhich are organised into FA structures.
These FA structures arebinary ores which encode the functor-argurnent dependenciesbetween the signs corresponding to components of a complexexpression.
Partial specifications of FA structures are associatedwith individual exical entries and these FA specifications arecombined by a single grammar ole.
Dependencies betweeninformation associated with different linguistic constituents hat.are traditionally captured by grammar roles are captured explicitlyin the TUG lexical entries.
TUG can in some sense be viewed asa 'lexicalised' UCG, where 'lexicelised' is.used in the sensediscussed in (Schabes, Abeille and Joshi, 1988).However, the FA structures described by a TUG analysis of asentence are difficult to obtain as derivation trees in UCG.
Asdiscussed earlier, the UCG grammar roles require the semanticattributes of the root-sign and fonctor-sign of any subtree to be thesame.
Additional grammar ules would be needed by UCG toallow the diffenmt relationShil~S between semantic infonmation235and to allow the three different relations between the R-antecedent information of a root-sign and functor-sign.
TheR-antecedent i formation of a functor-sign can either be the sameas that of the mot-sign (non-predicative functors), or it can consistof the semantic index of its argument in addition to the R-antecedent information of the mot-sign (po-.dicative functors), orit can contain only the sanantic index of its argument(generalised predicative functors).The R-antecedent information contained in FA specifications itreated on a level equal to the other forms of information; there isno need to invoke special mechanisms for passing thisinformation.
Its distribution is governed by the predicationcommand and generalised predicative constraints.
The reflexiveattribute of the sign contains information that m/ght be needed bya reflexive pronoun.
So if a sign for a reflexive pronoun appearsin an FA specification, the possible anteee_aen_ ts for the reflexiveare easily accessible.
During ~ unification, if the signassociated with a reflexive pronoun contains no variables of theappropriate son in its reflexive store, then the use of the pronounis ungrammatical md tree unification fails.
Since an FAspecification is associated with each potential antecedent of areflexive proneen, failure of anaphora resolution can constrainpossible analyses; if there is no possible antecedent for areflexive, there will not be an FA specification.REFERENCESBach, Emmon, and Barbara Panee.
(1980).
Anaphora andSemantic Structure.
In C. Masek, P. Hendrick and M.
Miller(Eds.
), Papers from the Paragession on Language and Behaviorat the 17th Regional Meeting of the Chicago Lingaistica Society.Chicago, ILBoama, Gosse.
(1988).
Modifiers and Specifiers in CategurialUnification Grammar.
Liagaistica, 26(1), 21-46.Bouma, Gosse, Ester Koanig, and Hans Uszkoreit.
(1988).
AFlexible Graph-Unification Formalism and its Application toNatural Language Processing.
In IBM Jownat of Research andDevelopmenl.
Special Issge on Computational Linguistics.C'hierchis, Germaro.
(1988).
Aspects of a Categorial Theory ofBinding.
In R. Oehde, IL Bach, and D. Wheeler (Eds.
),Calegorial Grammars and Natural Language Structures.
D.Reidal, Dordrecht, Holland.Cooper, Robin.
0983).
Quantification and Syntactic Theory.D.
Reidel, Dordrecht, Holland.Dowry, David, Robert Wall, and Stanley Peters.
0981).lmroduction to Momague Semantics.
D. Reidel, DordrechLHolland.Gazdar, Gerald, Ewan Klein, Geoffrey Pullum, and Ivan Sag.(1985).
Generalized Phrase Structure Grammar.
BasilBlackweil, London.Hellan, I.,an.
(1988).
Anaphora in Norwegian and the TheorynfGrammar.
Foils Publications, Dordrecht, Holland.Jackendoff, Ray.
(1977).
X.bar Syntax: A Study of PhraseStructure.
MIT Press, Cambridge, MA.Johnson, Mark.
(1987).
Attribsae-Value Logic and the Theoryof Grammar.
Doctond dissertadun, Department of Linguistics,Stanford University, CA.Johnson, Mark, and Ewan Klein.
(1986).
Discourse, Anaphoraand Parsing.
In: llth International Conference on CompalationalLinguistics.
Bonn University, West Germany.Joshi, Aravind, Leon Levy, and M. Takahashi.
(1975).
TreeAdjunct Grmnmm.
Y. Camp,,'.
Syst.
Sci., VoL 10(I).Kamp, Hans.
(1981).
A Theory of Truth and SemanticRetatsentation.
In J. Groenendijk, T. lanssen, and M.
Stokhof(F.da.
), Formal Method~ in the Study of Langaage.
MathematicalCemm Tracts, Amsterdam.Kaplan, Ron, and Joan Bresnan.
(1982).
Lexical-FunctionalGrammar.
A Formal System for Grammatical Representation.
InI.
Bresnan (EcL), The Mental Ret~resen~ation of GrammaticalRelation& MIT Press, Cambridge, MA.Kaplan, Run, lohn Maxwell, and Annie Zaenen.
(ffanuary1987).
Functional Uncertainty.
In: The CSLI Monthly, Centre forthe Study of Language and Information, Stanford University, CA.Kasper, RobeR, and William Rounds.
(1986).
A LogicalSemantics for Featm?
Structures.
In: 24th meeting Assoc.Comput.
Ling.
Columbia University, New York, N.Y.Keunan, Edward.
(1974).
The Functional Principle:Ge~er~llzlng the Nodon of 'Subject of'.
In M. La Galy, R. Fox,and A. Bruck (Ecls.
), Papers from the lOth Regional Meeting ofthe Chicago Linguistics Society.
Chicago, \[L.Pollard, Cad.
(1985).
Lectures on I-IPSG.
Unpublished lecturenotes, CSLL Stanford University, CA.Pollard, Cad, and Ivan Sag.
(1983).
Reflexives andReciprocals in English: An Alternative to the Binding Theory.
InM.
Badow, D. Flickinger, and M. Westcoat (Eds.
), Proceedingsof the 2nd West Coast Conference on Formal Linguistics.Stanford Linguistics Association, Stanford, CA.Pollard, Carl, and Ivan Sag.
(1987).
lnformmion.Based Syntaxand Semantics, Report 1: Fumtamentals.
Centre for the Study ofLanguage and Information, Stanford University, CA.Popowich, Fred.
(1988).
Reflexives and Tree UnificationGrammar.
Doctoral dissertation, Centre for Cognitive Science,University of Edinburgh, Edinburgh, Scotland.Schabes, Yves, Anne Abeilie, and Aravind loshi.
(1988).Parsing Strategies with "Loxicalized' Grammars: Application toTree Adjoining Grammars.
In: 12th International Conference onComputational Lingt~atic~.
Budapest, Hungary.Shieber, Stuart, Hans Uszkoreit, Femando Pereira, JaneRobinson, and M, Tyson.
(1983).
The Formalism andImplementation f PATR-H.
In B. Grosz and M. Stickel (Eds.
),Reaearch on Interactive Acquisition and Use of Knowledge.
SRIInternational, Menlo Park, CA.Uszkoreit, Hans.
(1986), Categorial Unification Grammars.In: llth International Conference on Computational Linguistics.Bonn University, West Germany.van Benthem, Johan.
(1987).
Categorial Equations.
InE.
Klein and J. van Benthem (Eds.
), Categories, Polymorphlsmand Unification.
Centre for Cognitive Science, University ofEdinburgh, and Institute for Language, Logic and Information,University of Amsterdam.Vijay-Shanker, K., and Aravind Joshi.
.
(1988).
FuamreStructures Based Tree Adjoining Grammars.
In: 12thInternational Conference on Computational Linguistics.Budapest, Hungary.Zeevat, Henk, Ewan Klein, and Jo Calder.
(1987).
AnInmxluction to Unification Categorial Grammar.
In N. Haddock,E.
Klein, and G. Morrill (Eds.
), Edinburgh Working Papers inCognitive Science, VoI.I: Categorial Grammar, UnificationGrammar, and Parsing.
Cemre for Cognitive Science, Univ.
ofEdinburgh, Scodand.236
