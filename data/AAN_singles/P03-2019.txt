Integrating Information Extraction and Automatic HyperlinkingStephan Busemann, Witold'UR G \ VNL Hans-Ulrich Krieger,Jakub Piskorski, Ulrich Sch?fer, Hans Uszkoreit, Feiyu XuGerman Research Center for Artificial Intelligence (DFKI GmbH)Stuhlsatzenhausweg 3, D-66123 Saarbr?cken, Germanysprout@dfki.deAbstractThis paper presents a novel information sys-tem integrating advanced information extrac-tion technology and automatic hyper-linking.Extracted entities are mapped into a domainontology that relates concepts to a selection ofhyperlinks.
For information extraction, we useSProUT, a generic platform for the develop-ment and use of multilingual text processingcomponents.
By combining finite-state andunification-based formalisms, the grammarformalism used in SProUT offers both pro-cessing efficiency and a high degree of decal-rativeness.
The ExtraLink demo system show-cases the extraction of relevant concepts fromGerman texts in the tourism domain, offeringthe direct connection to associated web docu-ments on demand.1 IntroductionThe utilization of language technology for thecreation of hyperlinks has a long history (e.g.,Allen et al, 1993).
Information extraction (IE) is atechnology that can be applied to identifying bothsources and targets of new hyperlinks.
IE systemsare becoming commercially viable in supportingdiverse information discovery and managementtasks.
Similarly, automatic hyperlinking is a matu-ring technology designed to interrelate pieces ofinformation, using ontologies to define the rela-tionships.
With ExtraLink, we present a novelinformation system that integrates both technolo-gies in order to reach at an improved level ofinformativeness and comfort.
Extraction and linkgeneration occur completely in the background.Entities identified by the IE system are mappedinto a domain ontology that relates concepts to astructured selection of predefined hyperlinks,which can be directly visualized on demand usinga standard web browser.
This way, the user can,while reading a text, immediately link up textualinformation to the Internet or to any other docu-ment base without accessing a search engine.The quality of the link targets is much higherthan with standard search engines since, first of all,only domain-specific interpretations are sought,and second, the ontology provides additionalstructure, including related information.ExtraLink uses as its IE system SProUT, a gene-ric multilingual shallow analysis platform, whichcurrently provides linguistic processing resourcesfor English, German, Italian, French, Spanish,Czech, Polish, Japanese, and Chinese (Becker etal., 2002).
SProUT is used for tokenization, mor-phological analysis, and named entity recognitionin free texts.
In Section 2 to 4, we describe innova-tive features of SProUT.
Section 5 gives detailsabout the ExtraLink demonstrator.2 Integrating Typed Feature Structuresand Finite State MachinesThe main motivation for developing SProUTcomes from the need to have a system that (i)allows a flexible integration of different processingmodules and (ii) to find a good trade-off betweenprocessing efficiency and linguistic expressive-ness.
On the one hand, very efficient finite statedevices have been successfully applied to real-world applications.
On the other hand, unification-based grammars (UBGs) are designed to capturefine-grained syntactic and semantic constraints,resulting in better descriptions of natural languagephenomena.
In contrast to finite state devices,unification-based grammars are also assumed to bemore transparent and more easily modifiable.SProUT?s mission is to take the best from thesetwo worlds, having a finite state machine thatoperates on typed feature structures (TFSs).
I.e.,transduction rules in SProUT do not rely on simpleatomic symbols, but instead on TFSs, where theleft-hand side of a rule is a regular expression overTFSs, representing the recognition pattern, and theright-hand side is a sequence of TFSs, specifyingthe output structure.
Consequently, equality ofatomic symbols is replaced by unifiability of TFSsand the output is constructed using TFS unificationw.r.t.
a type hierarchy.
Such rules not only recog-nize and classify patterns, but also extract frag-ments embedded in the patterns and fill outputtemplates with them.Standard finite state techniques such as minimi-zation and determinization are no longer applicablehere, due to the fact that edges in our automata areannotated by TFSs, instead of atomic symbols.However, not every outgoing edge in such anautomaton must be analyzed, since TFS annota-tions can be arranged under subsumption, and thefailure of a general edge automatically causes thefailure of several, more specialized edges, withoutapplying the unifiability test.
Such information canin fact be precompiled.
This and other optimizationtechniques are described in (Krieger and Piskorski,2003).When compared to symbol-based finite stateapproaches, our method leads to smaller grammarsand automata, which usually better approximate agiven language.3 XTDL ?
The Formalism in SProUTXTDL combines two well-known frameworks,viz., typed feature structures and regular ex-pressions.
XTDL is defined on top of TDL, a defi-nition language for TFSs (Krieger and Sch?fer,1994) that is used as a descriptive device in severalgrammar systems (LKB, PAGE, PET).Apart from the integration into the ruledefinitions, we also employ TDL in SProUT forthe establishment of a type hierarchy of linguisticentities.
In the example definition below, themorph type inherits from sign and introduces threemore morphologically motivated attributes withthe corresponding typed values:morph := sign & [ POS  atom, STEM atom, INFL infl ].A rule in XTDL is straightforwardly defined asa recognition pattern on the left-hand side, writtenas a regular expression, and an output descriptionon the right-hand side.
A named label serves as ahandle to the rule.
Regular expressions over TFSsdescribe sequential successions of linguistic signs.We provide a couple of standard operators.
Con-catenation is expressed by consecutive items.
Dis-junction, Kleene star, Kleene plus, and optionalityare represented by the operators |, *, +, and ?, resp.
{n} after an expression denotes an n-fold repetition.
{m,n} repeats at least m times and at most n times.The XTDL grammar rule below may illustratethe syntax.
It describes a sequence of morphologi-cally analyzed tokens (of type morph).
The firstTFS matches one or zero items (?)
with part-of-speech Determiner.
Then, zero or more Adjectiveitems are matched (*).
Finally, one or two Nounitems ({1,2}) are consumed.
The use of a variable(e.g., #1) in different places establishes acoreference between features.
This example enfor-ces agreement in case, number, and gender for thematched items.
Eventually, the description on theRHS creates a feature structure of type phrase,where the category is coreferent with the categoryNoun of the right-most token(s), and the agreementfeatures corefer to features of the morph tokens.np :>(morph & [ POS  Determiner,INFL  [CASE #1, NUM #2, GEN #3 ]] )?
(morph & [ POS  Adjective,INFL  [CASE #1, NUM #2, GEN #3 ]] )*(morph & [ POS  Noun & #4,INFL  [CASE #1, NUM #2, GEN #3 ]] ){1,2}-> phrase & [CAT #4,AGR agr & [CASE #1, NUM #2, GEN #3 ]].The choice of TDL has a couple of advantages.TFSs as such provide a rich descriptive languageover linguistic structures and allow for a fine-grained inspection of input items.
They represent ageneralization over pure atomic symbols.
Unifia-bility as a test criterion in a transition is a generali-zation over symbol equality.
Coreferences infeature structures express structural identity.
Theirproperties are exploited in two ways.
They providea stronger expressiveness, since they createdynamic value assignments on the automatontransitions and thus exceed the strict locality ofconstraints in an atomic symbol approach.
Further-more, coreferences serve as a means of informationtransport into the output description on the RHS ofthe rule.
Finally, the choice of feature structures asprimary citizens of the information domain makescomposition of modules very simple, since inputand output are all of the same abstract data type.Functional (in contrast to regular) operators area door to the outside world of SProUT.
Theyeither serve as predicates, helping to locatecomplex tests that might cancel a rule application,or they construct new material, involving pieces ofinformation from the LHS of a rule.
The sketch ofa rule below transfers numerals into theircorresponding digits using the functional operatornormalize() that is defined externally.
For instance,"one" is mapped onto "1", "two" onto "2", etc.?
numeral & [ SURFACE #surf, ... ] .?
->digit & [ ID #id, ... ],  where #id = normalize(#surf).4 The SProUT SystemThe core of SProUT comprises of the followingcomponents: (i) a finite-state machine toolkit forbuilding, combining, and optimizing finite-statedevices; (ii) a flexible XML-based regular com-piler for converting regular patterns into their cor-responding compressed finite-state representation(Piskorski et al, 2002); (iii) a JTFS package whichprovides standard operations for constructing andmanipulating TFSs; and (iv) an XTDL grammarinterpreter.Currently, SProUT offers three online compo-nents: a tokenizer, a gazetteer, and a morphologicalanalyzer.
The tokenizer maps character sequencesto tokens and performs fine-grained token classifi-cation.
The gazetteer recognizes named entitiesbased on static named entity lexica.The morphology unit provides lexical resourcesfor English, German (equipped with online shallowcompound recognition), French, Italian, andSpanish, which were compiled from the full formlexica of MMorph (Petitpierre and Russell, 1995).Considering Slavic languages, a component forCzech presented in (Haji?, 2001), and Morfeusz(Przepi?rkowski and Wolinski, 2003) for Polish.For Asian languages, we integrated Chasen(Asahara and Matsumoto, 2000) for Japanese andShanxi (Liu, 2000) for Chinese.The XTDL-based grammar engineering plat-form has been used to define grammars forEnglish, German, French, Spanish, Chinese andJapanese allowing for named entity recognitionand extraction.
To guarantee a comparablecoverage, and to ease evaluation, an extension ofthe MUC-7 standard for entities has been adopted.ne-person := enamex & [ TITLE list-of-strings,GIVEN_NAME list-of-strings,SURNAME list-of-strings,P-POSITION list-of-strings,NAME-SUFFIX string,DESCRIPTOR string ].Given the expressiveness of XTDL expressions,MUC-7/MET-2 named entity types can beenhanced with more complex internal structures.For instance, a person name ne-person is definedas a subtype of enamex with the above structure.The named entity grammars can handle typessuch as person, location, organization, time point,time span (instead of date and time defined byMUC), percentage, and currency.The core system together with the grammarsforms a basis for developing applications.
SProUTis being used by several sites in both research andindustrial contexts.A component for resolving coreferent namedentities disambiguates and classifies incompletenamed entities via dynamic lexicon search, e.g.,Microsoft is coreferent with Microsoft corporationand is thus correctly classified as an organization.5 ExtraLink: Integrating InformationExtraction and Automatic HyperlinkingA methodology for automatically enriching webdocuments with typed hyperlinks has been develo-ped and applied to several domains, among themthe domain of tourism information.
A core compo-nent is a domain ontology describing tourist sitesin terms of sights, accommodations, restaurants,cultural events, etc.
The ontology was specializedfor major European tourism sites and regions (seeFigure 1).
It is associated with a large selection ofFigure 1: Link Target Page (excerpt).
The instance theweb document is associated to (Isle of Capri) is shownon the left, together with neighboring concepts in theontology, which the user can navigate through.link targets gathered, intellectually selected andcontinuously verified.
Although language techno-logy could also be employed to prime targetselection, for most applications quality require-ments demand the expertise of a domain specialist.In the case of the tourism domain, the selectionwas performed by a travel business professional.The system is equipped with an XML interface andaccessible as a server.The ExtraLink GUI marks the relevant entities(usually locations) identified by SProUT (seesecond window on the left in Figure 2).
Clickingon a marked expression causes a query related tothe entity being shipped to the server.
Coreferentconcepts are handled as expanded queries.
Theserver returns a set of links structured according tothe ontology, which is presented in the ExtraLinkGUI (Figure 2).
The user can choose to visualizeany link target in a new browser window that alsoshows the respective subsection of the ontology inan indented tree notation (see Figure 1).Figure 2: ExtraLink GUI.
The links in the right-handwindow are generated after clicking on the markednamed entity for Lisbon (marked in dark).
The bottomleft window shows the SProUT result for ?Lissabon?.The ExtraLink demonstrator has been imple-mented in Java and C++, and runs under both MSWindows and Linux.
It is operational for German,but it can easily be extended to other languagescovered by SProUT.
This involves the adaptationof the mapping into the ontology and a multi-lingual presentation of the ontology in the linktarget page.AcknowledgementsWork on ExtraLink has been partially fundedthrough grants by the German Ministry forEducation, Science, Research and Technology(BMBF) to the project Whiteboard (contract 01 IW002), by the EC to the project Airforce (contractIST-12179), and by the state of the Saarland to theproject SATOURN.
We are indebted to Tim vorder Br?ck, Thierry Declerck, Adrian Raschip, andChristian Woldsen for their contributions todeveloping ExtraLink.ReferencesJ.
Allen, J. Davis, D. Krafft, D. Rus, and D. Subrama-nian.
Information agents for building hyperlinks.
J.Mayfield and C. Nicholas: Proceedings of the Work-shop on Intelligent Hypertext, 1993.M.
Asahara and Y. Matsumoto.
Extended models andtools for high-performance part-of-speech tagger.Proceedings of  COLING, 21-27, 2000.0 %HFNHU : 'UR G \ VNL +-U.
Krieger, J.Piskorski, U. Sch?fer, F. Xu.
SProUT?Shallow Pro-cessing with Typed Feature Structures and Unifica-tion.
In Proceedings of  ICON, 2002.J. +DML? Disambiguation of rich inflection?compu-tational morphology of Czech.
Prague Karolinum,Charles University Press, 2001.H.-U.
Krieger and U. Sch?fer.
TDL?A Type DescriptionLanguage for Constraint-Based Grammars.
Procee-dings of COLING, 893-899, 1994.H.-U.
Krieger and J. Piskorski.
Speed-up methods forcomplex annotated finite state grammars.
DFKIReport, 2003.K.
Liu.
Research of automatic Chinese word segmen-tation.
Proceedings of ILT&CIP, 2001.D.
Petitpierre and G. Russell.
MMORPH?the Multextmorphology program.
Multext deliverable report2.3.1.
ISSCO, University of Geneva, 1995.J.
PiskRUVNL:'UR G \ VNL );X DQG2 6FKHUIAflexible XML-based regular compiler for creationand converting linguistic resources.
Proceedings ofLREC 2002, Las Palmas, Spain, 2002.A.
Przepi?rkowski and M. Wolinski.
The UnbearableLightness of Tagging: A Case Study in Morphosyn-tactic Tagging of Polish.
Proceedings of the Work-shop on Linguistically Interpreted Corpora, 2003.
