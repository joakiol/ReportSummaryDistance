FUNCTIONAL UNIFICATION GRAMMAR:A FORMALISM FOR MACHINE TRANSLATIONMartin KayXerox Palo Alto Research Center3333 Coyote Hill RoadPalo AltoCalifornia 94304andCSLI, StanfordAbst rac tFunctional Unification Grammar  provides an opportunityto encompass within one formalism and computational systemthe parts of machine translation systems that have usual ly beentreated separately, natably analysis, transfer, and synthesis.Many of the advantages of this formalism come from the factthat it is monotonic allowing data structures to grow differentlyas different nondeterministic alternatives in a computation arepursued, but never to be modified in any way.
A str iking featureof this system is that it is fundamental  reversible, allowing a totranslate as b only if b could translate as a.I Overv iewA.
Mach ine  Trans la t ionA classical translat ing machine stands with one foot on theinput text and one on the output.
The input text is analyzed bythe components ofthe machine that  make up the left leg, each onefeeding information into the one above it.
Information is passedfrom component to component down the right leg to constructthe output text.
The components of each leg correspond to thechapters of an introductory textbook on l inguistics with phonologyor graphology at the bottom, then syntax, semantics, and so on.The legs join where langnages are no longer differentiated andlinguistics hades off into psychology and philosophy.
The higberlevels are also the ones whose theoretical underpinnings are lesswell known and system designers therefore often tie the legstogether somewhere lower down, constructing a more or less adhoe bridge, pivot, or transfer component.We connot be sure that the classical design is the r ightdesign, or the best design, for a translat ing machine.
But it doeshave several strong points.
Since the structure of the componentsis grounded in l inguistic theory, it is possible to divide each ofthese components into two parts: a formal description of therelevant facts about the language, and an interpreter of theformalism.
The formal description is data whereas the interpreteris program.
The formal description should" ideally serve the needsof synthesis and analysis indifferently.
On the other hand wewould expect different interpreters to be required in the two legsof the machine?
We expect o be able to use identical interpretersin corresponding places in all machines of similar design becausethe information they embody comes from general l ingusitic theoryand not from particular languages.
The scheme therefore hasthe advantage of modularity.
The linguistic descriptions areindependent of the leg of the machine they are used in and theprograms are independent of the languages to which they areapplied.For all the advantgages of the classical design, it is nothard to imagine improvements.
In the best all possible worlds,there would only be one formalism in which all the facts about alanguage--morphological,  syntactic, semantic, or whatever--couldbe stated.
A formalism powerful enough to accommodate thevarious different kinds of l inguistic phenomena with equal facilitymight be unappeal ing to theoretical l inguists because powerfulformal systems do not make powerful claims.
But the engineeringadvantages are clear to see.
A single formalism would straightfor-wardly reduce the number of interpreters to two, one for analysisand one for synthesis.
Furthermore, the explanatory value of atheory clearly rests on a great deal more than the restriciveness ofits formal base.
In particular, the possiblity of encompassing whathad hitherto been thought o require altogether different kinds oft reatment within a single framework could be theoretically inter-esting.Another clear improvement on the classical design would"result from merging 'the two interpreters associated with a for-malism.
The most obvious advantage to be hoped for withthis move would be that the overall structure of the translat ingmachine would be greatly simplified, though this would not neces-sarily happen.
It is also reasonable to hope that  the machine wouldbe more robust, easier to modify and maintain,  and altogethermore perspicuous.
This is because a device to which analysis andsynthesis look essentially the same is one that is fundamental lyless time dependent, with fewer internal variables and states; itis  apt to work by monitoring constraints laid down in the formaldescription and ensur ing that they are maintained, rather thancarrying out long and complex sequences of steps in a carefullyprescribed order.?
These advantages are available in large measure througha class of formal devices that are slowly gaining acceptance inl inguistics and which are based on the relations contracted byformal objects rather than by transformations of one formal objectinto another.
These systems are all procedurally monotonic in thesense that, while new information may be added to existing datastructures, possibly different information on different branches ofa nondeterministic process, nothing is ever deleted or changed.As a result, the particular order in which elementary events takeplace is of little importance.
Lexical Functional Grammar  andGeneralized Phrase-Structure grammar  share these relational andmonotonic properties.
They are also characteristics of FunctionalUnificational Grammar  (FUG) which I believe also has additionalproperties that suit it particularly well to the needs of experimen-tal machine-translation systems.The term experimental must be taken quite seriously herethough, if my view of machine translation were more generallyheld, it would be redundant.
I believe that all machine translationof natural languages is experimental and that he who claimsotherwise does his more serious colleagues a serious disservice.
Ishould not wish any thing that I say in this paper as a claim tohave solved any of the miriad problems that stand between us andworking machine translation systems worthy of the name.
Thecontribution that FUG might make is, I believe, a great deal more75modest, namely to reformalize more simply and perspicuouslywhat has been done before and which has come to be regarded, as1 said at the outset %lassical'.B.
Funct ional  Unif ication GrammarFUG traffics in descriptions and there is essentially only onekind of description, whether for lexical items, phrases, sentences,or entire languages.
Descriptions do not distinguish among levelsin the linguistic hierarchy.
This is not to say that the distinctionsamong the levels are unreal or that a linguist working withthe formalism whould not respect hem.
It means only that thenotation and its interpretation are always uniform?
Either a pairof descriptions i incompatible or they are combinable into a singledescription.Within FUG, every object has infinitely many descriptions,though a given grammar partitions the descriptions of the wordsand phrases in its language into a finite number of equivalenceclasses, one for each interpretation that the grammar assigns to it.The members of an equivalence class differ along dimensions thatare grammatically irrelevant--when they were uttered, whetherthey ammused Queen Victoria, or whether they contain a primenumber of words.
Each equivalence class constitutes a latticewith just one member that contains none of these grammaticallyirrelevant properties, and this canonical member is the only onea linguist would normally concern himself with.
However, agrammatical irrelevancy that acquires relevance in the presentcontext is the description of possible translations of a word orphrase, or of one of its interpretations, in one or more otherlanguages.A description is an expression over an essentially arbitrarybasic vocabulary.
The relations among sets of descriptions there-fore remain unchanged under one-for-one mappings of their basicvocabularies.
It is therefore possible to arrange that differentgrammars share no terms except for possible quotations fromthe languages described.
Canonical descriptions of a pair ofsentences in different languages according to grammars thatshared no terms could always be unified into a single descrip-tion which would, of course, not be canonical.
Since all pairsare unifiable, the relation that they establish between sentencesis entriely arbitrary.
However, a third grammar can be writtenthat unifies with these combined descriptions only if the sentencesthey describe in the two langaunges stand in a certain relationto one another.
The relation we are interested in is, of course,the translation relation which, for the purposes of the kind'ofexpcrimantal system I have in mind I take to be definable o':enfor isolated sentences.
Such a transfer grammar can readily cap-ture all the components of the translation relation that have infact been built into translation systems: correspondences betweenwords and continuous or discontinuous phrases, use of selectionalfeatures or local contexts, case frames, reordering rules, lexicalfunctions, compositional semantics, and so on.I I  The Formal i smA.
Funct iona l  Descr ip t ionsIn 'FUG,  linguistic objects are represented by functionaldescriptions (FDs).
The basic constituent of a functional descrip-tion is a feature consisting of an attribute and an associated value.We write features in the form a ~ v, where a is the attribute andv, the value.
Attributes are arbitrary words with no significantinternal structure.
Values can be of various types, the simplest ofwhich is an atomic value, also an arbitrary word.
So Cat ~- S isa feature of the most elementary type.
It appears in the descrip-tions of sentences, and which declares that their Category is S.The only kinds of non-atomic values that will concern us here areconstituent sets, patterns and FDs themselves.A FD is a Boolean expression over features.
We distinguishconjuncts from disjuncts by the kinds of brackets used to enclosetheir members; the conjuncts and disjuncts of a ---- p, b ~-~ q, andc --~ r are writtenb -~ q and b ~--- qc~q c~rrespectively.
The vertical arrangement of these expressions hasproved convenient zind it is of minor importance in that bracesof the ordinary variety are used for a different purpose in FUG,namely to enclose the \]nembers of consituent sets.
The followingFD describes all sentences whose subject is a singular noun phrasein the nominative or accusative cases\[Cat = S 1/ \[Cat = NP 1/(1) I .
.
.
/l',lum = Sing / /pu?'
= l\[case--  om .l IL LLCase =Acc  J J JIt is a crucial property of FDs that no attribute should figuremore than once in any conjunct, though a given attribute mayappear in feature lists that are themselves the values of differentattributes.
This being the case, it is ahvays possible to identifya given conjunct or disjunct in a FD by giving a sequence ofattributes (al .
.
.ak).
a I is a attribvte in the FD whose value,el, is another FD.
The attribute a2 is an attribute in Vl whosevalue if an FD, and so on.
Sequences of attributes of this kind arereferred to as paths.
If the FD contains disjuncts, then the valueidentified by the path will naturally also be a disjunct.We sometimes write a path as the value of an attribute toindicate that that value of that attribute is not only eaqual tothe value identified by the path but that these values are oneand the same, inshort, that they are unified in a sense soon tobe explained.
Roughly, if more information were acquired aboutone of the values so that more features were added to it, the sameadditions would be reflected in the other value.
This would notautomatically happen because a pair of values happened to be the?
same.
So, for example, if the topic of the sentence were also itsobject, we might writeObject -~ v 1Topic = (Object)Jwhere v is some FD.Constituent sets are sets of paths identifying within a givenFD the descriptions of its constituents in the sense of phrase-structure grammar.
No constituent set is specified in example (l)above and the question of whether the subject is a constituent istherefore left open..Example (2), though still artificially simple, is more realis-tic.
It is a syntactic description of the sentence John knows Mary.Perhaps the most striking property of this description is thatdescriptions ofconstituents are embedded one inside another, eventhough the constituents themselves are not so embedded.
Thevalue of the Head attribute describes a constituent ofthe sentence,a fact which is declared in the value of the CSet attribute.
We alsosee that the sentence has a second attribute whose decription isto be found as the value of the Subject of the Head of the Head ofthe sentence.
The reason for this arrangement will become clearshortly.In example (2), every conjunct in which the CSet attributehas a value other than NONE also has a substantive value for theattribute Pat.
The value of this attribute is a regular expressionover paths which restricts the order in which the constituents mustappear.
By convention, if no pattern is given for a descriptionwhich nevertheless does have constituents, they may occur in anyorder.
We shall have more to say about patterns in due course.76B.
Uni f icat ionEssential ly the only operation used in processing FUG is thatof Unification, the paradigm example of a monotonic operation.Given a pair of descriptions, the unification process first deter-mines whether they are compatible in the sense of allowing thepossibility of there being some object that is in the extension ofboth of them.
This possibility would bc excluded if there were apath in one of the two descriptions that lead to an atomic valuewhile the same path in the other one lead to some other value.This would occur if, for example, one described a sentence with asingular subject and the other a sentence with a plural subject, orif one described a sentence and the other a noun phrase.
There canalso be incompatibilities in respect of other kinds of value.
Thus,if one has a pattern requiring the subject o precede the main verbwhereas the other specifies the other order, the two descriptionswill be incompatible.
Constituent sets are incompatible if theyare not the same.We have briefly considered how three different ypes of descrip-tion behave under unification.
Implicit in what we have said isthat descriptions of different ypes do not unify with one another.Grammars,  which are the descriptions of the infinite sets of sen-tences that make up a language constitute a type of descriptionthat is structural ly identical an ordinary FD but is dist inguishedon the grounds that it behaves lightly differently under unifica-tion.
In particular, it is possible to unify a grammar  with anothergrammar to produce a new grammar,  but it is also possible tounify a grammar with a FD, in which case the result is a newFD.
The rules for unifying grammars  with grammars are thesame as those for unifying FDs with FDs.
The rules for unify-ing grammars with FDs, however, are slightly different and inthe difference lies the ability of FUG to describe structures recur-sively and hence to provide for sentences of unbounded size.
Therule for unifying grammars with FDs requires the grammars  tobe unif ied~following the rules for FD uni f icat ion~with each in-dividual constituent of the FD.
(s)Head ~-~ \[tIead = \[Cat ~--- V\]\]CSet = {(Head Head Subj)(Head)} I Pat = ((Itead Head Subj}(Heed))I / IObj = NONE Head = |\[Obj = \[Cat = NP\] LCSet = NONE\[Head = \[Cat = N IIL LCSet = NONEJJBy way of il lustration, consider the grammar in (3).
Likemost grammars,  it is a disjunction of clauses, one for each (non-terminal) category or constituent ype in the language.
Thefirst of the three clauses in the principle dir.junction describessentences as having a head whose head is of category V. Thischaracterization is in line with so called X-theory, according towhich a sentenceI belongs to the category ~.
In general, a phraseof category X ,  for whatever X ,  has a head constituent of categoryX ,  that is, a category with the same name but one less bar.
Xis built into the very fabric of the version of FUG il lutrated herewhere, for example, a setence is by definition a phrase whosebead's head is a verb.
The head of a sentence is a V, that is,a phrase whose head is of category V and which has no headof its own.
A phrase with this description cannot unify withthe first clause in the grammar because its head has the feature\[Head = NONE\].Of sentences, the grammar says that they have two con-stituents.
It is no surprise that the second of these is its head.The first would usual ly be called its subject but is here charac-terized as the subject of its verb.
This does not implythat theremust be lexical entries not only for all the verbs in the languagebut that there must be such an entry for each of the subjects thatthe verb might have.
What  it does mean is that the subject mustbe unifiable with any description the verb gives of its subject andthus provides automatically both for any selectional restrictionsthat a verb might place on its subject but also for agreement inperson and number between subject and verb.
Objects are handledin an analogous manner.
Thus, the lexical entries for the Frenchverb forms cm, nait and salt might  be as follows:Cat = V \]Lex --~ connaitre /Tense = Pres I\[ Pers = 3 \]/Subj = |Num = Sing|/LAnim = + J\[Obj = \[Cat = NP\] JCat ~ V 1Lex : savoir ITense = Pres I\[Pers = 3 I ISubj = INure = Sing|I\ [Anim ~ + J/Obj ~i~ \[Cat ~--- S\] JEach requires its subject to be third person, singular and animate.Taking a rather simplistic view of the difference between theseverbs for the sake of the example, this lexicon states that connatttakes noun phrases as objects, whereas salt takes sentences.III Translat ionA.
SyntaxConsider now the French sentence Jean connaft Marie whichis presumably a reasonable rendering of the Engl ish sentenceJohn knows Mary, a possible fumctional description of whichwe was given in (2).
I take it that  the French sentence hasan essential ly isomorphic structure.
In fact, following the planlaid out at the beginning of the paper, let us assume that  thefunctional description of the French sentence is that given in (2)with obvious replacements for the values of the Lex attr ibute andwith attr ibute names z~ in the Engl ish grammar  systematical lyreplaced by F-zi  in the French.
Thus we have F-Cat, F-Head, etc.Suppose now, that, using the Engl ish grammar and a suitableparsing algorithm, the structure given in (2) is derived from theEngl ish sentence, and that this description is then unified withthe following transfer grammar:tt = (F-Cat} \]Lex ~---John \] )I:F-Lex ~--- JeanJ | \[Lex = Mary \] / /.F-~x = mrieJ ~/"~ = know l I /= conna'tre1111LF-Lex -= savoir J J ) JThe first clause of the principal conjunct states a very strongrequirement, namely that the description of a phrase in one ofthe two languages should be a description of a phrase of thesame category in the other language.
The disjunct that followsis essentially a bilingual lexicon that requires the description ofa lexical item in one language to be a description of that word'scounterpart in the other language.
It allows the English verbknow to be set in correspondence with either connattre or savoirand gives no means by which to dist inguish them.
In the simpleexample we are developing, the choice will be determined on thebasis of criteria expressed only in the French grammar,  namelywhether the object is a noun phrase or a sentence.This is about as trivial a transfer grammar  as one couldreadily imagine writing.
It profits to the minimal possible extentfrom the power of FUG.
Nevertheless, it should already do betterthan word-for-word translat ion because the transfer grammar saysnothing at all about the order of the words or phrases.
If the77English grammar states that pronominal objects follow the verband the French one says that they precede, the same transfergrammar, though still without any explicit mention of order,will cause the appropriate "reordering" to take place.
Similarly,nothing more would be required in the transfer grammar in orderto place adjectives properly with respect to the nouns they modify,and so forth.B.
Semant icsIt may  be objected to the line of argument  hat I have beenpersuing that it requires the legs of the translat ing machine to betied together at too lower a level, essential ly at the level of syntax.To be sure, it allows more elaborate transfer g rammars  than  theone just  i l lustrated so that  the translat ion of a sentence wouldnot have to be structural ly isomorphic with its source, moduloordering.
But the device is essential ly syntactic.
However, therelations that  can be characterized by FUG and similar monotonicdevices are in fact a great deal more diverse than this suggests.
Inparticular, much of what falls under the umbrel la of semantics inmodern l inguistics also fits conveniently within this framework.Something of the flavor of this can be captured from the followingexample.
Suppose that  the lexieal entries for the words all anddogs are as follows:"Cat ---~ DetLex ~ allNum ~ PlurDef ~ +\[Type = all Ill | \[Type - -  ImpliesSense = \[P op = \[P1 = \[Arg = (Sense Varl\]L LP2 = \[Arg --~ (Sense Var)JJJCat = N \]Lex = dog |_ .
\ [Num= Plur \] IArc - - - -  Lse~e = {Sense}J |- -  __ __ Type ~ PredWhen the first of these is unified with the value of the Artattr ibute in the second as required by the grammar,  the result  isas follows:"Cat ---~ NLex .clogCat --~ DetLex = AllArt Def ~ +Num ~ Plur~ense = (Sense'\[Type = All \]l/ \[Type ----- Implies I l l/ / \[Type = 1//I Se~ |Prop = lP1 = |Pred = dog / / / I/ / LArg = (Sense Var)J//I\[ LP2 -- \[Arg --~ (Sense Var)\] JJJThis, in turn, is readily interpretable as a description of the logicalexpressionVq.dogCq)AP(q)It remains to provide verbs with a sense that  provides a suitablevalue for P ,  that is, for (Sense Prop P2 Pred).
An example wouldbe the following:"Cat ~ VLex ~ barksTense ~ Presr Pers = 3 1Subj - -  |Num ~ S ing|LAnim ~ + JObj : NONESense = \[Prop ='- \[P2 = \[Pred = bark\]\]\]IV  Conc lus ionIt has not been possible in this paper to give more than  animpression of how an experimental  machine translat ion systemmight  be constructed based on FUG.
I hope, however, that ithas  been possible to convey something of the value of monotonicsystems for this purpose.
Implement ing FUG in an efficient wayrequires kill and a variety of little known techniques.
However,the programs, though subtle, are not large and, once written,they provide the grammar ian  and lexicographer with an emmensewealth of expressive devices.
Any system implemented strictlywithin this framework will be reversible in the sense that, if itt ranslates from language A to language B the, to the same extent,it t ranslates from B to A.
If the set S is among the translat ionsit delivers for a, then a will be among the translat ions of eachmember  of S. I know of no system that  comes close to providingthese advantages and I know of no facility provided for in anysystem proposed hitherto that it not subsumable under FUG78
