iI 7L,m1965 International Conference on Computational LinguisticsA SYSTEM FOR TRANSFOP~ATIONAL ANALYSISSusumu KunoThe Computation LaboratoryHarvard UniversityCambridge,~assachusetts 02138' r., r r/,,~~ ~"~,  ~.\\ ~,~,.
~;~ ,,~: _~ .IKuno-iABSTRACTA system is proposed here for assigning a derived P-marker to agiven transformed sentence and obtaining the corresponding base P-markerat the same time.
Rules of analytical phrase-structure grammar for such asystem have associated with them i~formation pertaining to the transfor-mational histories of their own derivation.
When a phrase-structureanalysis of the sentence is obtained, the set of grammar rules used forthe analysis contains all the information necessary for the direct mappingof the derived P-marker into the corresponding P-marker.
The system canalso be used for decomposing a given complex sentence into "kernel"sentences for the purpose of structure matching between a query sentenceand stored document sentences in information retrieval.
An experimentalprogram for the proposed system has been written and is currently testedwith a small sample grammar.
Study is underway to see if there is anymechanical procedure for obtaining an smalytical phrase structure grammarof the proposed type for a given transformational grammar.Kuno-1A SYSTEM FOR TRANSFORMATIONAL ANALYSISSusumu Kunoi.
IntroductionNumerous systems for the automatic recognition procedures ofcontext-free languages have been proposed: 1 among them, two systems arein operation with comparatively large English grammars.
One isJ.
Robinson's English parser 2 based on J. Cocke's algorithm, 3 and theother is the Kuno-Oettinger predictive analyzer of English.
4'5,6The proponents of neither of the two systems have been satisfiedwith simply assigning phrase-structure descriptions to each given sentence.A paraphrasing routine has bec~ ~i(~d to Robinson's English parser 7 so thata set of kernel sentences can be obtained in addition to the phrase-structure description of the sentence.
For example, the analysis outputsof "X commands the third fleet."
"The third fleet is commanded by X.
"and"X is commander of the third fleet."
would all contain the informationthat the kernel is "S -- X, V -- cQmmands, 0 -- third fleet".
In connectionwith the Kuno-Oettinger predictive analyzer, three kernelizing routineshave been proposed by J. Olney, 8 B. Carmody and P. Jones, 9 and D. Foster, lOwhich accept as input the output of the predictive analyzer and produceeither kernel sentences or pairs of words which are in certain definedsyntactic relationships.
The SMART information retrieval system, ll,12,13,14,1~Salton's Magic Automatic Retriever of ~exts, has a routine which comparesthe structure diagram (part of the analysis output of the predictive~his  ~ork has been supported in ~srt by the N~tional Science Founds tionunder Gr~nt GN-329.Kuno-2analyzer) of a request sentence with the structure diagrams of sentences tobe retrieved, so that paraphrases of the same kernel sentence can beidentified.The aim of the present paper is to investigate the role of thepredictive analyzer in a transformational grammar recognition system, andto propose a system for analysis of a language of a given transformationalgrammar.
Before going into details of the proposed system, it is worthwhileto discuss briefly two other systems so far proposed as transformationalgrammar recognizers.2.
General Solution to Recognition Problems of Transformational Languages(i) Analysis by SynthesisD.
E. Walker and J. M. Bartlett 16 have proposed a system whichparses the language of a given transformational grammar.
Their system isessentially based on ~atthews' proposal 17 for analysis by synthesis.Analysis of a sentence is performed by generation of all possible stringsfrom the initial symbol "Sentence" by means of a phrase-structure component,a transformational component, and a phonological component.
Each of theterminal strings thus generated is matched against the input sentence.When a match is found, the path which has led to the matched terminalstring represents an analysis of the input sentence.
Certain heuristicsare used to distinguish transformations which could have been applied togenerate the sentence under analysis from those which could not have.
Forexample, if a sentence ends in a question mark, then it is certain that atsome point the question transformation was used.Kuno-2The Walker-Bartlett ?system, although drastically improved inefficiency compared to the proto-type proposed by Matthews, seems to bestill far from being practicable because of an astronomical number ofsentences that will have to be generated before the match is found.
(ii) From Derived P-markers to Base P-markersTwo similar parsing methods have been independently proposed byS.
Petrick 18 and the MITRE Language Processing Techniques Subdepartment(Zwick, A. M., Hall, B. C., Fraser, J.
B., Geis, M. L., Isard, S.,Mintz, J., and Peters, P. S.) directed by Walker 19 as a general solutionfor the recognition problem of the language generated by a given transfor-mational grammar.
A transformational generative grammar G T has threecomponents: the phrase-structure component , the transformational component,and the phonological component (see Diagram 1).
The output of the phrase-structure compo~ent are generalized P-markers which have grammatical and.lexical forms emanating from the lowest nodes in the trees.
The functionof the transformational rules is to map generalized ?~ ~kers into derivedP-markers.
If the transformational rules map the generalized P-marker M Ginto the final derived P-marker ~ of the sentence X, then M G is the deepstructure (base P-marker) of X and M D is its surface structure.
The M D isthen transferred to the phonological component, whose output is the plainterminal string X.
20A slightly outdated model of a transformational grammar is presented herefor the purpose of avoiding delicate arguments not directly connected withthe aim of the present paper.Kuno-3Generation Phase ofTransformational Grammar.
G TPreparation Phase ofL(GT) Recognizer~p hr ase-structure~ ?
Component , ~~- ..... ~ .... ~ ~ /Form a ~ iContext-free !i Generalized 1 ~ ~/  Context-free ~---~# Grammar G~ such i~ar_  ~er I 4 ~ Grammar ?
J that c~L(G )'fT rans format io~ ~/Write Invel-se ~ .iInverse Transfor- IComponent " " "~ Transformations ~--~, mational Component If Derived P-marker Whose ~.
'~ ~ Terminal String ~ ~ i ii~honological ~ .
.
.
.
.  '
~/Form a~ Component __/ ..... :=:: : ": ..... "~DictionaryI iSentence ~ L(G T) iC, tDictionary ?Transformational Language Recognizer (I)Diagram IKuno-4Consider the (probably infinite) set of derived P-markers obtainablefrom a given transformational grammar GT.
Each P-marker has at the bottoma string of symbols from which no branch emanates.
Regard the set of allsuch strings corresponding to all derived P-markers as constituting languageL D. It has been shown by Hall that, given the original transformationalgrammar GT, one can automatically construct a context-free grammar G Swhich accepts all the strings in ~ and assigns the corresponding derivedP-markers to them.
It is generally the case, however, that G S acceptsnonsentences in ~ as well as sentences in ~,  and also assigns someincorrect P-markers, as well as the correct one(s), to sentences in ~.
**The analysis procedure works as follows (see Diagram 2) .~Givena sentence in L(GT) , the dictionary lookup program, whichessentially playsthe role of the inverse of a phonologicalcomponent, converts the sentenceinto a string in ~.
A context-free analyzer with grammar G S assigns one(or more if the string is ambiguous in G S) derived P-marker(s) to thestring.
Then, each such P-marker is transferredto the inverse transfor-mational component of G T. A test is made to see which of the transformationalrules could have been applied to map some previous P-marker into the current@Private communication.
The author is greatly indebted to Barbara C. Hall,who read a preliminary draft of this paper and gave him numerous valuablesuggestions.
** Actually, the context-free grammars for derived P-markers in bothPetrick's and the MITRE group's systems have been manually compiled.Hall's automatic procedure does not guarantee an optimal context-freegrammar for derived P-markers of a given transformational grammar.
***The analysis procedure described here is that of the MITRE group, withsome simplifications for the sake of clarity of explanation.
Petrick'sprocedure is conceptually similar to, but actually deviates significantlyfrom, the model described here.Kuno-5Analysis Phase of L(G T) RecognizerI Input Sentenceiictionary Lookup ~h(Inverse of Phono- 1L!
String in ~ i!/rcontext:freeAnalysis with GS/tDerivedP-marker ';flnverse Transfor-~ mat ional  Component /i~ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
TFinalP-marker iiVit dertvable .... " ,  / from the Phrase-i structure Component/"~k,~, of GT?.
.
.
.
.
.
.
.
.#yesII Base P-marker inoDerived P-markerproduced by G2not produced By G T ?Transformational Language Recognizer (2)Diagram 2Kuno-6P-marker in the course of generation of the given sentence.
If a rule is.found whose derived constituent structure index matches the P-marker, theinverse of the structural change specified by the rule is applied to theP-marker, and a new P-marker is obtained which matches the originalstructural index* of the rule.
If no moretransformaticnal rules can beapplied inversely to the current P-marker, either the P-marker is a baseP-marker, or the P-marker assigned by G S was not a final derived P-markerassigned to any sentence by G T. The latter case is due to the conditionthat G S accepts nonsentences as well as sentences in ~ and can giveincorrect P-markers to sentences that are in ~.
In order to identifywhether the P-marker under consideration is a real base P-marker or not, atest has to be made to see if the P-marker is obtainable by the phrase-structure component of G T. If not, the original derived P-marker, whichinitiated the inverse transformational analysis path, is abandoned.
If itis obtainable, the forward application of the transformational rules whichwere inversely applied confirms that it is in fact the base P-marker ofthe sentence under analysis.
The base P-marker, the set of inverselyapplied transformational rules, and phonological rules contained in thedictionary entries constitute the analysis of the input sentence.Each transformational rule contains a structural index and a derivedconstituent structure index.
The former specifies the condition that aP-marker has to fulfill in order for the rule to be applied to it.
Thelatter specifies the structure of the P-marker into which the original?
F-marker is to be mapped by the transformation.~no-73.
A Predictive Analyzer and Transformational AnalysisThe system of transformational analysis which is proposed belowaims at obtaining a set of base P-markers almost simultaneously as a setof surface P-markers is obtained.
Rules of the analytical context-freegrammar for the system have associated with them information pertaining tothe transformational histories of their own derivation.
For example,assume that the base P-marker of "I met a young prince" in a giventransformational grammar is the one shown in Fig.
l, and that the transfor-mational component of the grammar maps this base P-marker into the derived?
P-marker by a sequence of four transformations:Base P-marker: '~I met a J~the prince was young#pr lnce#-Intermediate P-marker:Intermediate P-marker:Intermediate P-marker:Derived P-marker:~I  met a pr ince#the'pr lnce was young~##?I met a prince who was young #~I met a prince young#~I met a young pr ince~Then, the analytical context-free grammar for derived P-markers will havea rule which identifies a noun phrase consisting of an article (art), anadjective (adJ), and a noun.
To this rule, we can assign the informationthat the base P-marker image of this noun phrase is the subtree correspondingto "art @ the noun be adj # noun" of Fig.
1.
We can say that each such rulein the analytical context-free grammar draws a subtree of some base P-marker'When a derived P-marker of a sentence is obtained, the set of phrase-structure rules used for the analysis draws a set of subtrees which, whencombined together, constitute the base P-marker corresponding to the derivedP-marker.Kuno-8NPJprn(z)(met): k 2 -,...VT/"  " .... " ... NPi .
/DETNP VPi F // /N1noun(p~ince)l /DETr;1thecop P~O~i Ai : ibe Adj(young)2iInoun(prince)Base P-marker for "I met a young prince.
"Figure 1K~ no-9The system is designed with the predictive analyzer A'5 as its core.The predictive analyzer uses a predictive grammar G' whose rules (called"predictive rules") are of the following form:<Z, c >~Z, c ~"'Y Yl" m' m> 1.kwhere Z, Yi are intermediate symbols (i.e., syntactic structures, alsocalled predictions), c is a terminal symbol (i.e., syntactic word class)and ~ denotes the absence of any symbol, d Z, c,~ is called an argument pair.riSE, prn> I VP PD, for example, indicates that a sentence (SE) can beinitiated by a prn (personal p~anoun in the nominative case) if the prn isfollowed by a predicate (VP) and a period (PD).
A fragment of our currentEnglish grammar is shown in Kuno and Oettinger.
4'5 It is proved by Greibac hthat G' is an exact inverse of a standard-form grammar G whose rules are ofthe form:Z -~>cY l...Ym where<Z, c> I Y I "  "Ym is a rule in G', orZ ~ c  where(Z, c~l ~ is a rule in G'.Since Greibach has proved that every context-free language can be generatedby a standard-form grammar, the predictive analyzer could accept any.context.free language given a suitabl e predictive grammar.Given a context-free grammar G" ,  we can automatically construct astandard-form grammar G which generates the same language as G"  does.However, it is to be noted that the structural descriptions assigned to agiven sentence by G are not the same as those assigned to the samesentence by G" .
In such a case, we say that G and G"  are weaklyequivalent with respect to the structural description.Kuno-lOConsider a predictive grammar which does not contain more than onerule with the same argument pair, and an input string of words each ofwhich is associated with a unique terminal symbol.
The analysis of thesequence of terminal symbols Cl.-.c n is initiated with a pushdown store(PDS) containing some designated initial symbol ("SE" in the case of anatural language.
See Fig.
2 for an example).
At word k in the course ofthe analysis of the string, an argument pair CZk, Ck> is formed from theintermediate symbol Z k topmost in the PDS and the current terminal symbo lc k. If a rule with this argument pair is not found in the grammar, theinput string is ill-formed (ungrammatical).
If it is found, we say thatthe prediction Z k is fulfilled by the rule <Zk, c~> I Y . '
"Y~ I m(or ink, Ck$ I 4), or simply that Z k is fulfilled by c k. A sequence ofnew intermediate symbols Y1 "''Ym (or ~) then replaces the topmost inter-mediate symbol Z k of the PDS and the analysis moves to word k+ 1.
Theinput string is well-formed if the last terminal symbol c n is processedyielding an empty PDS.
A set of standard-form rules corresponding to thepredictive rules used for the analysis of the string gives the derivationalhistory of the string in the original standard-form grammar.Actually, a grammar may have more than one rule with the same argu-ment pair.
Also, a word in an input string may be associated with more thanone terminal symbol.
Therefore, a mechanism for cycling through allpossible combinations of these rules and terminal symbols must be superimposedon the simple pushdown store machine described ~n the previous paragraph.We are not concerned here, however, about how such a mechanism is designedin the current predictive analyzer (see Sec.
1 of Kuno 6 for the analysisKuno-llalgorit~hm).
In the following discussions, only those analysis paths whichlead to the end of the sentence are considered, and all abortive paths willbe ignored in order to avoid unnecessary complications of the importantquestion under discussion.Assume that the input sentence "A young prince met a beautifulgirl."
is to be analyzed.
Also assume that Rules i - 6 (see Fig.
2) havebeen used for the predictive analysis of the sentence.
The configurationof the PDS prior to and immediately after the application of the rule at agiven word position is shown in the preceding and succeeding lines of thecolumn "PDS Configuration" of Fig.
2.
The structural description (P-marker)assigned to this sentence by the set of standard-fo~i~l rules correspondingto the utilized predictive rules is shown in Fig.
3.Let us assume that the base P-marker that we want to have assignedto this sentence is not the one shown in Fig.
3, but the one in Fig.
4.Since a mapping of one P-marker into another P-marker involves shifting,removing, and adding of nodes in P-markers, it is important to have a deviceavailable to refer to any position in a P-marker.
Names of branches in aP-marker are defined in the following way.
If there are m branches emanatingfrom a given node in a P-marker, the leftmost branch is named i, the secondleftmost branch 2, and so forth.
The rightmost branch is named m (seeFig.
4).
Given a node y in a P-marker, the branch number of y is obtainedby the concatenation to the right of each successive number assigned toeach successive branch which leads from the topmost node to node y. Forexample, the branch number of adj for "young" in Fig.
4 is 1211, the branchnumber of noun for "girl" is 22221, and so on.
Similarly, if we are givenKuno-12English Rule : Argument New Predictions PDS ConfigurationWord Used  ' Pa i r  top  ~2- bot tom, !
; SEA Rule i <SE, art> i NP' VP PD .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.................................... NP' ~ VP ~Dyoung Rule 2prince Rule 3 < N, noun >.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: .
.
.
.
t .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.i met  Ru le  Z, z.VP, v t l '~zi ~ NP' adj > Ni: , N 'VP1?
NP , .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.......................................................................................................................... "i NP  PD:Ru le  5 <~.
NP, art> NP' a................... i NP ' PDbeautiful Rule 2 I <NP' adj > N i!
!
.
.
.
.
.
.
.
.
.
.
.
.
?girl Rule 3 "N, noun)~Rule 6 -~PD, prd> ,~PDPredictive Analysis of a Sample SentenceFigure 2Kuno-13SEart NP VP ~.
.
.adj N vtl NP ......... PD?
/\ (young) .
: I (met) i II inoun ~t  NP' prd(prince) (a) / k  (')/ \adJ N(veautiful) !noun(girZ)Structural Description Assigned bythe Predictive AnalyzerFigure 3Kuno-l~T1art (a)..JNp .
?NP'/ 1 2/ ?A Nadj noun(young) (prince)2~ ~_~/ /// /  1VT,1vtl(met)~ 2  ~lNP prdT NP'a~t A N(a) 'i 1 1adJ noun(beautiful) (girl)Desired Base P-markerFigure 41D?/EB C, !F G HOrdered Pairs and a P-markerFigure 5Kuno-15a set of ordered pairs of (branch number, node) such as (1, A), (2, B),(3, C), (ll, D), (12, E), (31, F), (32, G), (33, H), the P-marker shown inFig.
5 can be automatically constructed given the initial symbol S.To each prediction in each rule of the predictive grammar is assigneda set of ordered pairs (x, y) where y indicates the name of a node and xthe branch number of y in a P-marker.
For example, Rule 1 will have the@following sets of ordered pairs assigned to its predictions:Rule l- qSE,  artk i N P' VP(12, NP,) i (2, vP)(ll, T) ,(lll, art) 'PD(3, PD)The set of ordered pairs assigned to the prediction of the argument pairin Rule 1 represents the names of nodes and branch numbers leading fromthe prediction of the argument pair to the final node "art".
The set ofordered pairs associated with each new prediction shows the relationshipof new predictions with the word class "art" of the argument pair (seeFig.
6).
If in an ordered pair (x, y) associated with a prediction in arule, y is not equal to the prediction itself (or to the word class of theargument pair in case the prediction is also in the argument pair), thenthe ordered pair plays the role of adding a new node y in a P-marker.In the course of predictive analysis of a sentence, the set ofordered pairs associated with the argument oair's prediction is stored inIn Rule l~ each of the new predictions NP', VP, and PD has a one-memberset of ordered pairs, Examples of sets of more than one ordered pair, ?
% .
will follow (e.g., Rule 3a),Kuno-16/i/T,//" / N~'1 I i ki \\ art(a)........... vP \\?tnew predictions ./yPartial P-markerFigure 6the output work area.
The set of ordered pairs associated with each new.prediction is stored in the PDS together with the prediction.The branch number of an ordered pair in a rule does not have to bea constant as is the case with all the ordered pairs of Rule 1.
Forexample, see Rule 2.The expression "argument pair's prediction" is used as distinct from theexpression "fulfilled prediction 'r.
The former is prediction Z of<Z, ck,while the latter refers to the prediction which is topmost in the PDS andfulfilled by the rule "Z, cP I Y I ' "Ym (or J A ).
The fulfilled predictionwas a new prediction of a rule which was used at some preceding wordposition, and has associated with it in the PDS a set of ordered pairs.Although the fulfilled prediction itself at a given word position is alwaysthe same as the argument pair's prediction of the rule used at the sameword position, it is convenient to distinguish the two for our subsequentdiscussions because the set of ordered pairs associated with the fulfilledprediction in the PDS is different from the set of ordered pairs associatedwith the argument pair's prediction in the rule (see explanation of Rule 2).Xuno-17Rule 2: <NP'~ adj> \[ Ni(xll,  dJ) ,This rule is used for the processing of "young" and "beautiful" of theexample "A young prince met a beautiful girl."
(see Fig.
2).
The branchnumber that the node NP' which dominates "young" is to receive is different~T from the branch number that the node ~P' which dominates "beautiful" is toreceive in the base P-marker.
Since NP' can be a recursive symbol, thereis no way of assigning all the possible branch numbers that NP' can beassociated with in any finite number of rules.
Instead, we use a variablex whose value is determined by the branch number of the immediatelydominating node in a P-marker.
The notation {(x, y)~ is used to indicatethat the prediction appearing above the notation is to Be assigned the sameset of ordered pairs as the fulfilled prediction used to have in the PDS.In our example, the first NP' ("young") has f(12, NP') I due to Rule 1 whenit becomes topmost in the PDS.
In the case of the second NP' ("beautiful"),)t-oit will be shown later that it has i(222, NP'Similarly, the branch number that the node ad~ for "young" is toreceive in a base P-marker is different from the branch number that the node_ad_i for "beautiful" is to receive.
In fact, each of the two branch numbersdepends upon the branch number which its respective immediately dominatingnode NP' is associated with (see Fig.
4).
Yet, if NP' is to be regarded asthe initial node, the branch numbers to be associated with A and adj for"young" and N and noun for "prince" are exactly the same as those to beK uno- 1;?
;associated with A at,d adj For "beautiful" and N and noun for "\[~ir\]",respectively.
Therefore, in ftule 2, the branch numbers domit~ated by N?
'are given as constants, and branch numbers emanating from the initialsymbol and leading to NP' fire ~iven as variables.
The notation (xl~ A),for example, indicates that whatever the branch number \['rom the initialnode t,o NP' might be, A is to receive i as the rightmost di~it For f, be~ntire branch number from the initLal node to A.
It is to ~ noted thatordered r~airs with variables a~pear only in rules in the grammar whoseargument pairs do not contain the initial prediction SE.
Once a rule isused for the analysis of a sentence, all the variables for branch numbersin the set of ordered r~airs associated with this rule will I~ changed intosome numerical branch numbers.In general, (~m, Z) (m >_ i) not in a !~air of braces indicatesthe follo~ing:Take  the max imum va lue*  of b ranch  numbers  (max x) in  .!
( ~ ~ .
X~ j j ;of the fulfilled prediction.
(i{emember tha~ the branchnumbers of ordered pairs associaL~ed ~ith the fuli'i\].ledprediction are all numerical, and do not corttain anyvariables.
~egard numeric branch rmmbers as integers toobtain the "maximum value".
)Concatenate m to the ri\[~ht of max x.Form an ordered oair ~ith Z.The concatenation mark is suppressed where no confusion can result.
. '
,hen(C-m, Z)a pe rs p ir   races, the x Y)!i orthe .\['uifill.ed ored:i_ction, not the maximum w~lue, are used t,o :form a set ofnew ordered pairs with m concatenated to the right oi' each w~luo of x (seekule 5a for example) ~Why max x is used among values oF x in )'(?, y~'i will be explained in Sec.
5.Ordered pairs with variables (x, y), (x'~m, y) can be regarded as anotation for some function whose value depends upon the previously obtainedvalue of the same function.
It is this recursive nature of ordered pairsin the grammar that allows the proposed system to work for an infinitenumber of sentences in the language.In the case under discussion, the fulfilled prediction NP' corre-Osponding to "young" has ~12, NP')~ associated with it in the PDS.Therefore, max x = 12.
So, (xl, A) and (xll, adj) are changed into (12~, A)and (12 ii, adj), respectively, and the latter two are stored in the outputwork area.
As explained in the previous paragraph, ~x, y)~ associated withthe argument pair's prediction is replaced by (12, NP')~ which also isstored in the output work area.
The new prediction N of Rule 2 is assignedthe ordered pair (12~2, N).
N, (122, N) replaces the fulfilled predictionNP' and its ordered pair (12, NP') in the PDS.
Now the output work areacontains (i, NP), (ii, T), (IIi, art) due to Rule 1 and (12, NP'), (121, A),(1211, adj) due to i<ule 2.
This set of ordered pairs corresponds to apartial P-marker shown in Fig.
7.Rule 3 is shown below with ordered pairs:Rule 3 : <N~ noun "~.
(xl, noun)When ~{ule 3 is used for the processing of the third word "prince" of theexample, the fulfilled prediction has associated with it the ordered pair(122, N).
Therefore, (122, N) and (122~i, noun) are stored in the outputX ur:o- 23St / i "J~,,w ' /NPi / /  "-..2NP'' 1a#t1aajPartial P-mrwker ConstructedFigure 7work area.
Rules 4 -6  are shown below in the new form; Fig.
8 shows theanalysis of the same sentence using the new rules.Rule 4: <_V.P, vt !P  Hp .
.
.
.
.
.
.
.i(x, (x2,(xl, vT)/ .
.7  7 ~-'~\ ~ ~t j.~.
~ Vu.L)Rule 5: <NP, art) ,,EP'(~z, T)(xil, ~'D)Rule 6: -"PD~ prd > .
k< y)}(xi, prd)(x2, ~P')it is to be noted that the set of ordered pairs in the output work area inFig.
8 is isomorphic ~o ~'~ne P-marker shown in ~mg. '
" 4.Le~ us go back to the traasformational grammar previously mentionedwn~c~, assigns the base P-marker of Fig.
!
to "I met a young prince "Kuao-21AEnglishWordayoungprincedSE,i NP' ,<N,ArgumentPairContribution to PDS ConfigurationOutput Work Area  : top ~- bottom~ i t .
~,iar t ' )  (1 ,NP) , ( l l , T ) , ( l l l , a r t )  i .....................................................................:NP' i VP PD(12,:~P')~ (2,W) (3,PD)adj> (12,NP'),(121, A),(!2il,adj)N i VP PD(122,N) (2,VP) (3,7J)i .
.
i  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.mnoun> i( 122,N), ( 1221, noun) i.
.................................................................... \[VP PD '(g,vP) (3,PD):met <VP, vtl> I(2,VP),(21,VT),(211,vtl).............................................................. ~i~ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
NP(22,Np) ' PD(3,PD),Z. NP, art > {{(22,NP),(221,T),(2211,art): NP' PD :!
, (222,NP')I (3,PD) ,i: -~-  ibeautiful diNP', adj)!
(222;NP'),(2221;A),(22211,adj)(2222,N),(22221,noun)(3,PD), (31,prd)girliJ!
?~\]N, noun 7,~~PD, prd~>N ,.
PD(2222,N1 : (3,PD)iJ.
.
.
.
.
.
.
.
.
.
.
.
.
.
JPDi (3,PD)- -  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.. .
.
.
.
.
J .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Analysis of the Sample SentenceFigure 8"Y~, - -  ," - ") 0~.~ ZoA*owlng set of rules, in the fraze~ora of the same mechanismas ~as introduced above, can give the desired base P-marker.Rule " ~ ~ PD ~a: ?SE, prn> i ,.
(ii, pra) !Rule 2a:p{(~, y)\](ya, ~) \[(~, N?
)Rule 3~: <~V?, art> A N\[(x, y)}(x!i, ~t) (~ #)(x~3, s)(~-na, #)(x!3!ll, the)(x!321, COP)(x1321i, be)(x1322, P l~)(x13221, A) ' (x2, ~)(xl312, ~)Rule la: CA, adj>\[(~, y)\](xl, adj)/< associated with a prediction in a rule performs the function ofeliminating the node for the prediction from a P-marker.i&ule 5a: <:,;~ noun>.~x, y)j7A/< iThe argument pair's pred~c~o.. , ' ,  ' .
.
.
.
.
.  "
' ~ ' ~ ' ~with it a set of ordered pairs xl, noun ?
~ ~s to be notedthat .
.
.
.
.  '
- ~ .
.
.
.
.
.
.
.
.
"~ " '  " " the fulfilled of P.ule z/.
~:'nen 2~ule 5a ~.s used to process '~prince,prediction N has associated with it ordered pairs (222, N) and(221312, N).
Therefore, ~(xl, noun)} is changed into noun)and (2213121, noutu).In comparing Rule 3a, for example, with Fig.
l, one may wonderwhy (x2, N) and (xl312, N) are associated with the new prediction N,and not with the argument pair's prediction NP.
If the latteralternative were chosen, N would have no ordered pairs in Rule 3a.Then, when Rule 5a is used for the processing of "prince," there wouldbe no way of obtaining desired branch numbers for the noun in \[(xl, noun)~.The concatenation operation x~m introduced in the previousparagraphs is not enough to deal with coordinate structures.
Assumethat the base P-marker of Fig.
9 is to be assigned to "She is young andbeautiful .
".7 Rule $a: ~PD, prd> ', /(Kuno- 24#s#1prn(sh,)1COPle 1(is), /(yoking)2\" ~RED(and) (beautiful)Base P-marker for "She is young and beautiful.
"Figure 9Rule 7: <PRED, adJ>(xl,(xl19 adJ )AND A?
?
, , ,(:2, A~) (x3, A)Rule 8: <AND, and>(x, y)~Rule 9: CA, adJ>(xl, adj)Rule 7 is capable of assigning numbers I, 2, and 3 %0 the three branchesemanating from PRED and leading %0 A, AND, and A, respec%ively.Xm'xo-25However, if the predicate has three adjectivez :*young and beautifuland intelligent," the inadequacy of a con~e~#o-free gra~u~-r manifestsitself.
The P-marker that we want to obtain is not that of Fig.
10(a),but of Fig.
10(b).
Yet, we car~uot include in the predictive grammar arule such as~PRED, adj>(xll, adj )AND A AND Abecause we will face the same problem for coordinate predicates withmore than three coordinated members, and because we carmot have aninfinite n~mber of rules pertair~ing to i-member coordinate structureswhere i = 2,3,.. .
,~.In order to obtain P-markers of the type shown in Fig.
10(b)with a fir~Ite set of rules, a new operation "?"
is introduced.
If aprediction in a rule has (x+m, u), max x is chosen among the values ofx of ~(x, Y)3 associated with the fulfilled prediction: m is numer'ocallyActu~lly, the difficulty under discussion is not only of a context-freeanalyzer, but also of the phrase-structure component of a transforma-tio~=aL grammar.
A base P-marker of the type shown in Fig.
10(b) c~otbe obtained by any phrase-structure grammar if an infinite number ofcoordinated members is to  be accounted for.
One solution for atransformational ~enerative grammar is to have in its phrase-structurecomponent a re~vriting schema such as PRED- ->A (AND A)*, where(AND A)* can be repeated any number of times (including zero).
T~hisis done in the :J~ITP~ procedure in both the generative phrase structurecomponent of GT and the context-free analysis component G S. In thegenerative component, the only starred rule is S'----~S (AND S)*; inthe recognition component, all compoundable intermediate symbols haverules of this type.Ku.uo= 26PRED ~ PROD1 ,.""
2 .... - .3AND A AND A ? "
AND ~ A\,3 \ , ,(a) (b)Base P-markers for Coordinate StructuresFigure i0added to the rightmost position of max x.
(If more than nineconstituents are to be accepted in a construct, it is necessary touse more than one digit for the name of each branch, but this does notcause any additional complexities.)
For example, when the secondadjective "beautiful" of the example "She is young and beautiful andintelligent."
fulfills the prediction A, Rule i0 is usedtRule i0- <A~ ad~ I AND Ai m , ,(x?l, AND) (~2, A)"{(x, y)} for the fulfilled prediction is (223, A); therefore, (x+l~ AND)and (x+2, A) are changed into (224, AND) and (225, A), respectively(224 = 223 + i, 225 = 223 + 2), and are stored in the PDS with thecorresponding predictions AND and A.
If the predicate has fouradjectives as in "young and beautiful and intelligent and bright,"Rule i0 will be used again for the processing of "intelligent."
ThisKuno-27time, max x = 225.
Therefore, new predictions AND and A will be storedin the PDS with the new ordered pairs (226, AND) and (227, A),respectively.It should now be noted that the concatenation operation x~mplays the role of generating a subtree whose initial node has the branchnumber max x, while x+ m plays the role of adding a branch to the rightof a branch whose branch number is x, and whose immediately dominatingnode also dominates the added branch.4.
Salient Features of the Proposed System for Transformational AnalysisWhat are the salient differences between the transformationalanalysis system (see Sec.
2(ii) of this paper) proposed by the MITREgroup and Petrick (to be referred to as M-P system) and the one proposedin the present paper (to be referred to as K-system)?
The M-P systemis based on the condition that a transformational grammar is given.
Acontext-free analysis component is automatically constructed on thebasis of the transformational grammar; the context-free analysiscomponent assigns one or more derived P-markers to a sentence to beanalyzed; transformational rules are applied inversely to each P-markerstep by step until the base P-markers of the sentence are obtained.For example, after a derived P-marker is assigned to "He met a beautifulgirl.
", the M-P system will compare the P-marker with the derivedSee the second footnote on page 4-Kuno~-28constituent structure indices of transformational rules, and find thatthis derived P-marker is the result of the transformational rule whichplaces an adjective in front of a noun.
Therefore, by applying thisrule inversely, an intermediate P-marker corresponding to "#He met agirl beautiful#" is obtained.
Next, this new P-marker is compared withderived constituent structure of transformational rules, and it isfound that this is the result of the transformational rule which deletesa relative pronoun and a copula.
Therefore, by applying this ruleinversely, an intermediate P-marker corresponding to "#He met a girlwho was beautiful#" is obtained.
Next, this intermediate P-marker iscompared with the derived constituent structure indices of transforma-tional rules again and is identified as being the result of arelativization rule.
Therefore, the rule is applied inversely, and anew P-marker corresponding to "#He met a girl # the girl was beautiful#" is obtained,which in turn is identified as originating from a rule which places anembedded #S# dominated by DET after the noun.
A new P-marker corre-sponding to "#He met a # the girl was beautiful #girl#" is thusobtained.
AZ'ter comparing this P-marker again with rules in thetransformational component, it is found that there is no rule whosederived constituent structure index matches the P-marker.
It is alsofound that the P-marker is derivable from the phrase-structurecomponent of the transformational grammar.
Thus, the P-marker isidentified as being a base P-marker, and forward application of thetransformations which were inversely applied confirms that it is infact the base P-marker of the sentence under analysis.Kuno-29With regard to the K system, on the other hand, a predictivegrammar which accepts all the sentences of a given transformationalgrammar G T (and probably nonsentences in addition) is manuallycompiled.
A derived P-marker assigned to a given sentence by thepredictive grammar is usually not equal to the derived P-marker whichis assigned to the same sentence by 9"  The mapping of such adistorted P-marker into the base P-marker is not performed step bystep through intermediate P-markers as is the case with the M-Psystem.
Instead, it is performed in one step by means of orderedpairs.
For example, the fact that the predictive rule<lq?, art~!
A Nhas been used for assigning a distorted P-marker to the sentence"He met a beautiful girl."
indicates immediately that an embeddedsentence which constitutes a relative clause is involved here, thatthe subject of the embedded sentence is the same as a noun ("girl"in our example) which fulfills N of the predictive rule, and thatthe adjective ("beautiful u) which fulfills A is the predicateadjective of the embedded sentence.
The predictive rule hasassociated with it a set of ordered pairs which draws a subtleof the base P-marker image of this NP.
The summation of suchsubtrees drawn by all the rules used for obtaining the distortedP-maker yields the base P-maker of the sentence.The K system does not achieve this one-step mapping withoutcost.
The sacrifice is paid in the simplicity of the context-freeKuno- 30analysis component.
For example, in order to obtain desired baseP-markers for(i)(ii)(iii)Look at the girl who is dancing the mazurka.This is the girl whom everyone likes.This is the glrl by whom he was ruined.the predictive grammar must have three different rules pertainingto a noun phrase initiated by the definite article "the."
Eachrule specifies a different position, in the embedded sentence, ofthe predicted N (see circled N's in Fig.
ll).Rule (i): <NP, the>(xll, the)(x.U, ~)(x~3, s)(x.U~, #)(xl31, m~)(xl3111, the)N(x2, N)(x1312, N)KELsb j(x13, R)Rule (i-a)Rule (ii)<RELsb.I , who> 1AVP(x2, v?
)<NP, the> i N(xl,(xll, the)(x~, ~)(xl3, S)(xl~, ~)(x1322, NP)(x13221, mET)(x132211, the)(x2, N)(x13222, N)RELob j(x13, R)Kuno- 31NPl / /  // /DI~Tz"  , \ \the #' S #i / "  2/ ,/liP gP1 ",2DETfor sentence (i)2NNP'" ' 2j ",k, \DET Nthe # s #NP VP,/'~" \ 2 i ,\~,\\VT NP1 ///" 2/for sentence (ii)/ " \ \  2 \t/he # S #~ / ' \ .
2.'
\NP gPV aG~rBT NPby DETfor sentence (iii)Position of Predicted N in Self-embedded SentenceFigure llRule (ii-a) <REL,., whom'> oDJARule (il-b) ~VP', vtl>fix, xl, ~I(xll, vtl)NP VP'(xl, NP) !i\(x2, V?
)Kuno-32Rule (iii) ~NP, the>~(x, ~)xl,(xll~ the)(x~, #)(xl3, s) (xl~, #)(x2~, ~P)(x2221, D~)(x22211, the)N KEL_ pass(x2, N) !
(xl3, R)(x2222, N) iRule (lii-a) <~TpasW by>(x22, AGNT)(x221, BY)(x221\], by)WHOM NP VPi 5 (~l, N~) !
(x2, vP), (~1 v)Moreover, in order to deal with sentences such as(iv) Look at the ~irl dancing the mazurka.
(v) Look at the dancinK_g_irl.
(vi) This is the girl liked by ever ~X_ ~.additional rules have to be recognized which have the same argumentpair <NP, the> but which have different sequences of new predictionsand the different sets of ordered pairs from those in Rules (i),(ii) and (iii).
Depending upon the nature of the original trans-formational grammar GT, the number of such rules with the sameargument pair can become very large.
However, when a given sentencewith a noun phrase is analyzed, only one of these rules will lead tothe end of the sentence (unless the sentence is ambiguous withrespect to the noun phrase), and all the other rules of <NP, the>Kuno-33will come to an impasse before the end of the noun phrase is reached.Moreover, once an analysis of the sentence is obtained, the derivedP-marker can be unambiguously mapped into the corresponding base P-marker.5- Practical ApplicationsThe mechanism introduced in Sec.
3 for transformational analysisis quite effective for obtaining pairs (or triples, etc.)
of words whichare in certain syntactic relationships in a sentence.
Assume that "Theyoung prince made the beautiful girl his wife."
is to be analyzed andthat we are interested in obtaining word-triples "prince - made - girl,""prince - (be) - young," "girl - (be) - wife," and "girl - (be) - beautiful.
"We can achieve this aim by the following set of rules:Rule I': ~SE, the~/4NP' V?
PD(1, z) i (2, z) '.
/<Rule 2': a__dl >(x3, z)(x2, be)N1,Rule 3': ~N, noun> IRule 4 ' :  <VP, vt3> .
!\[(x,((x+l)2, be) iNP NP(x*l, z)((x?l)l, z)((x+l)3, z)Kuno-34Rule 5': <NP, the>ANP '{(x, y)\]Rule 5'a: <NP A the>AN\[(x, y)}Rule 6': <PD, prd>"z" as the second coordinate of an ordered pair means that whenthe ordered pair is stored in the work area (not in the PDS), z shouldbe changed into whatever word form has fulfilled the prediction.
Forexample, the second word "young" of the sentence is processed withRule 2', which has two ordered pairs (x2, be) and (x3, z) associatedwith the argument pair's prediction NP'.
NP' in the PDS has (i, z) dueto Rule i.
Therefore, max x = i, and z = young.
So, (12, be) and(13, young) are stored in the output work area.When the fourth word "made" is processed with Rule 4', thefulfi\]led prediction VP has (2, z) associated with it in the PDS.Therefore, max x = 2.
Ordered pair ((x+l)2, be) indicates that i is tobe numerically added to max x, and 2 is to be concatenated to the rightof the sum.
Therefore, ((x+l)~2, be) = ((2+i)~2, be) = (32, be) isobtained, which is stored in the output word area as well as (2, made)obtained from (2, z).
In the same way, the two sets of ordered pairsfor the two new predictions of Rule 4' will be changed into:NP N(3, z)(31, z)(33, z)Kuno' 35When Rule 5' is used for the processing of the fifth word"the," the fulfilled prediction NP has associated with it two orderedpairs (3, z) and (31, z).
The argument pair's prediction has noordered pairs; the new prediction NP' is assigned the same set ofordered pairs as was assigned to the fulfilled prediction NP.
There-fore, when Rule 2' is used for the processing of the sixth word"beautiful, N the fulfilled prediction has ordered pairs (3, z) and(31, z).
Max x is equal to 31.
Therefore, (x2, be) and (x3, z) arechanged to (312, be) and (313, beautiful), respectively, which are thenstored in the output work area.
The new prediction N is assigned(3, z), (31, z), and (311, z) due to the set of ordered pairs ~(x, y)\]and (xl, z) of the prediction.
The reason that max x is to be usedamong all the values of x in \[(x, y)\] is that, whatever the branchnumber of the noun ("girl") which fulfills N may be, we want to havethe word triple corresponding to N ("girl") - be - adj ("beautiful")emanate as the lowest-order subtree dependent upon the lowest-orderoccurrence of N ("glrl").
Otherwise, the branch numbers of N("girl"), be, adj ("beautiful") would be confused with branch numbersof N ("girl"), be, N ("wife") (see Fig.
12).When the analysis of the sentence is obtained, the orderedpairs (with no variable component in the branch number) in the outputwork area are sorted with the right-adjusted branch numbers as thesorting key.
The result of the sorting is:Kuno~6( i, prince)( 2, made)( 3, girl)( ii, prince)( 12, be)( 13, young)( 31, girl)( 32, be)( 33, wife)(311, glrl)(312, be)(313, beautiful)Each set of ordered pairs whose branch numbers differ from each otheronly at the rightmost position forms a word pair (or triple, etc.
).The set of all the ordered pairs can also be regarded as constitutinga tree of the structured information shown in Fig.
12.i f  2 / .prlnce beI'"/I~ \~"  ?i xj" 12  3~rince made girlyo g glrl be wifegirl b~ beautifulKernel Sentences for the Sample SentenceFigure 12Zuno-37Observe that the addition operation of "x+m," which was intro-duced originally to deal with coordinated structures (see Sec.
3), hasbeen used for a different purpose in Rule &'.
The first of the two newNP predictions in Rule &' has associated with it the ordered pair(x+l, z).
This places the NP (which is eventually fulfilled by "girl")on the same level in a tree as the prediction VP which has been fulfilledby "made.
"When P-markers of the type shown in Fig.
12 are desired, neitherthe addition operation nor the concatenation operation is satisfactoryin dealing with sentences with coordinate structures, for which a newdevice has to be introduced.
Assume that the sentence to be analyzed is"He met Mary and Jane and Karen.
", and that three word-tripleshe - met -he  - met -he - met -are to be identified in the sentence.MaryJaneKarenIn order to accomplish thisobject, the notion of a decimal point is used.
The notation x.m in anordered pair indicates that m should be concatenated to the right of xas the rightmost fraction digit.
For example, if x = 32.3 and m = ipx.m = 32.3~i = 32.31.
If x = 3, and m = i, x.m = 3.1.
The concatenationand addition operations described in Sec.
3 are performed on the unitsdigit of a given branch number.
For example, if x = 32.3 and m = i,Kuno-38x~'m = (3241).3 = 321.3; and x+m = (32+1).3 = 33.3.
As is the casewith x~m and x+m, x usually indicates the maximum value of x in theset of ordered pairs of the fulfilled prediction.
However, \[(x.m, y)\]indicates that all the ordered pairs associated with the fulfilledprediction should be assigned to the corresponding prediction with afraction digit m concatenated to the right of each branch number (seeRule 13 for an example).Rule ii: VP PDRule 12:Rule 13:Rule 14:<aE, .prn>(1, z)<VP, vtl><NPj noun>~NP, noun>f(x, y>\](2, z)(x+l, z)AND NP%/kThe fraction digit to be concatenated can be a variable itself.The variable "k" in (x.k, y) stands for the units digit of max x. Forex~ple,if x = 13 , then k = 3 and x.k = 13.~3 = 13.3if x = 13.21, then k = 3 and x.k = 13.21~3.
= 13.213Similarly, \[(x.k, y)\] in Rule 13 indicates the same operation should beperformed for each x of the set of ordered pairs \[(x, y)\] ?
Whenever thefraction variable k appears in a rule utilized at a given word position,Kuno- 39the following modification of the contents of the output work area andthe PDS is performed: for each (x.k, y), look for ordered pairs (inthe output work area or PDS) whose branch number is different from(x, y) only with regard to the units digit.
For each such pair in theoutput work area or PDS, form a new ordered pair by concatenating thevalue of k as a fraction digit to the right of its branch number.
Storethe new ordered pair in the work area or PDS, respectively.For example, when "Mary" of "He met Mary and Jane and Karen.
"is processed with Rule 13, the fulfilled prediction NP has associatedwith it the ordered pair (3, z).
Therefore, k is set to 3, and ~(x.k, y)~for the new prediction NP is changed to (3.3, z).
At this point, thesearch is made in the output work area and the PDS (see Fig.
13) forordered pairs whose branch number is different from "3" only with regardto the units digit.
Ordered pairs (i, he) and (2, met) in the outputwork area satisfies the stated condition.
Therefore, new ordered pairs(l.k, he) = (1.3, he) and (2.k, met) = (2.3, met) are formed, and arestored in the output work area.When the second noun "Jane" is fulfilled, again with Rule 13pthe fulfilled prediction NP has associated with it the ordered pair(3.3, z).
Therefore, k is set to 3, and ~(x.k, y)~ for the new predictionNP is changed to (3.3k, Jane) = (3.33, Jane), which is stored in the PDSwith NP.
The search is made for ordered pairs whose branch number isdifferent from 3.3 only with regard to the units digit.
This time, theKuno-40Output Work Area PDS Configuration(i, he) PD(2, met) ._~\'Contents of Output Work Area and the PDS at "Mary"Figure 13output work area and the PDS contain the ordered pairs shown inFig.
14.
Ordered pairs (1.3, he) and (2.3, met) satisfies thestated condition; therefore, new ordered pairs (1.33, he) and(2.33, met) are formed and stored in the output work area.
Thethird noun "Karen" is processed with Rule 14.
Since Rule 14 doesnot contain any ordered pairs whose branch number is of the form x.k,C .
.
.
.
.
.
.Output Work Area(i, he)(2, met)(3, M ry)(1.3, he)(2.3, met)PDS ConfigurationPDA.JContents of Output Work Area and the PDS at "Jane"Figure 14no modification of the contents of the output work area or PDS isperformed.
After the processing of the period, the output work areacontains the following set of ordered pairs:Kuno-41(i, he)(2, met)(3, Mary)(1.3, he)(2.3, met)(3.3, Jane)(1.33, he)(2.33, met)(3.33, Karen)The ordered pairs are sorted first on left-adjusted decimal part,and then on right-adjusted integral part of the branch numbers.
Aset of ordered pairs whose branch numbers are different among them-selves only with regard to the units digits forms a word-pair (ortriple, etc.).
Two or more word-pairs (or word-triples, etc.)
whosebranch numbers are different from each other only with regard tofraction digits are in the relationship of coordination.
In theexample above, "he - met - Mary," "he - met - Jane," and"he - met - Karen" satisfy the latter condition.
Therefore, theseword-triples are in coordination.
The set of ordered pairs shownabove can be represented in a tree diagram of Fig.
15.
It should benoted that tree diagrams of this form are isomorphic %o sets ofordered pairs in the following way.
The number for a single-linebranch should be interpreted in the same way as before (see Fig.
12,for example).
The number for a double-line branch is a fractiondigit.
In a path leading from the starting point (a circle in Fig.
15)to a given node in the tree, the number for a double-line branch isconcatenated to the right of fraction digits, while the number for aKuno-single branch is concatenated to the right of nonfraction digits.Therefore, "he" of "he met Jane" in Fig.
15 has the branch number1.3, "Jane" 3.3, and "met" of "he met Karen" 2.33, and so on.3 3i'~ 2 3 "'-, l j  2 3 \ .
2~e / "% met Mary t he met EatenTree Representation of Coordinated Word TriplesFigure 15Figure 16 shows the word-triples identified in the sentence"Tom and Jim and Bill met Mary and Jane and Karen and liked Mary andKaren and disliked Jane.".
Two new rules are needed for the processingof the sentence.Rule 15: CSE, noun>... AND NP ...... VP... .
PD(i, z) ,,< I (1.1, ~) ' (2 ,) ' ' @ ,~(2.1, Z) iRule 16: ~vP vtl> NP AND VP{(x, y)\] A I {Ix.k, y)}Figure 17 shows the word-triples identified in the sentence "Ayoung and handsome prince met a beautiful and attractive girl and madethe girl his wife."
Three new rules are needed for the processing ofthis sentence ?Kuno-43(i, Tom)(2, met)(3, Mary)(1.1123, Bill)(2.1123, liked)(3.1123, Karen)(1.123, Jim)(2.123, liked)(3.123, Karen)(1.23, Tom)(2.23, liked)(3.23, Karen)(i.I, Jim)(2.1, met)(3.1, gary)(1.113, Bill)(2.113, met)(3.113, Jane)(1.13, Jim)(2.13, met)(3.13, Jane)(1.3, Tom)(2.3, met)(3.3, Jane)(i.ii, Bill)(2.11, met)(3.11, Mary)(1.1133, Bill)(2.1133, met)(3.1133, Karen)(1.133, Jim)(2.133, met)(3.133, Karen)(1.33, Tom)(2.33, met)(3.33, Karen)(1.112, Bill)(2.112, liked)(3.112, M~ry)(1.12, Jim)(2.12, liked)(3.12, Mary)(1.2, Tom)(2.2, liked)(3.2, Mary)Identified Word-triples (i)Figure 16(i.i122, Bill)(2.1122, disliked)(3.1122, Jane)(1.122, Jim)(2./22, disliked)(3.122, Jane)(1.22, Tom)(2.22, disliked)(3.22, Jane)(i, prince)(2, met)(3, girl)(ii, prince)(12, be)(13, young)(31, girl)(32, be)(33, beautiful)(iii, prince)(i12, be)(113, handsome)(311, girl)(312, be)(313, attractive)(1.2, prince)(2.2, made)(3.2, girl)(31.2, girl)(32.2, be)(33.2, wife)Identified Word-triples (2)Figure 17Rulel7: <~I, adJ> l(X2, be) I(x3, z)AND NP'(xl,Kuno-44Rule 18: ~NP', adj> N(x3, z) (xl, z)Rule 19: (NP, art) N6.
ConclusionAn experimental program has been written in SNCBOL II121 for.the system of transformational analysis described above.
It is stillarbitraryto be seen whether the proposed system can be used for an atransforma-tional grammar.
A study is now being made to see if, given a trans-formational grammar, there is any mechanical procedure for obtaining apredictive ~rammar with associated ordered pairs which will assign thesame base P-markers to a given sentence as would the original trans-formational grammar.For the purl~se of structure matching in information retrievalsystems and of a crude semantic compatibility test between subject andcomplement, subject and verb, etc., the type of output described inSec.
5 seems to be most practically manageable.
Applications of theproposed system in these two fields are now being studied.
*The author is greatly indebted to Karen Brassil who has programmedfor the proposed system and also compiled a small sample grammarof English for testing the system.Kuno-45REFERENCESI.
Bobrow, D. G., "Syntactic Analysis of English by Computer - ASurvey," AFIPS Conference Proceedings, Vol.
24, Spartan,Baltimore (1963) ?2.
Robinson, J., Preliminary Codes ?nd Rules for the AutomaticParsing of Eng_lish, Memo RM-3339-PR, The RAND Corporation, SantaMonica, California (December 1962).3.
Described in Hays, D., "Automatic Language-Data Processing," inBorko, H.
(ed.
), Computer Applications in the Behavioral Sciences,Prentice-Hall, Englewood Cliffs, N. J.
(1962).4.
Kuno, S. and 0ettinger, A. G., "Multiple-path Syntactic Analyzer,"Information Processing-62, North-Holland, Amsterdam (1963).5.
Kuno, S. and 0ettinger, A. G., "Syntactic Structure and Ambiguityof English," AFIPS Conference Proceedings, Vol.
24, Spartan,Baltimore (1963).6.
Kuno, S., "The Predictive Analyzer and a Path Elimination Technique,"to appear in The Communication of the ACM.7.
Robinson, J., Automatic Parsing and Fact Retrieval: A Comment onGrammar, Paraphrase , and Meaning, Memo RM-4005-PR, The RANDCorporation, Santa Monica, California (February 1964).8.
Olney, J., "An Experiment in the Use of Discourse AnalysisProcedures for R~ducing Syntactic and Semantic Ambiguity,"reported at the 1964 Annual Meeting of the Association for MachineTranslation and Computational Linguistics, Indiana University,Bloomington (July 29-30, 1964), paper in preparation.9.
Carmody, B. T. and Jones, P. E., Jr., "Automatic Derivation ofConstituent Sentences," ibid.
