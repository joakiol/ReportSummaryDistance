Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers,pages 667?676, Dublin, Ireland, August 23-29 2014.Review Topic Discovery with Phrases using the P?lya Urn ModelGeli FeiDepartment of ComputerScience, University of Illi-nois at Chicago, Chicago,USAgfei2@uic.eduZhiyuan ChenDepartment of ComputerScience, University of Illi-nois at Chicago, Chicago,USAczyuanacm@gmail.comBing LiuDepartment of ComputerScience, University of Illi-nois at Chicago, Chicago,USAliub@cs.uic.eduAbstractTopic modelling has been popularly used to discover latent topics from text documents.
Most existingmodels work on individual words.
That is, they treat each topic as a distribution over words.
However,using only individual words has several shortcomings.
First, it increases the co-occurrences of wordswhich may be incorrect because a phrase with two words is not equivalent to two separate words.
Theseextra and often incorrect co-occurrences result in poorer output topics.
A multi-word phrase should betreated as one term by itself.
Second, individual words are often difficult to use in practice because themeaning of a word in a phrase and the meaning of a word in isolation can be quite different.
Third,topics as a list of individual words are also difficult to understand by users who are not domain expertsand do not have any knowledge of topic models.
In this paper, we aim to solve these problems byconsidering phrases in their natural form.
One simple way to include phrases in topic modelling is totreat each phrase as a single term.
However, this method is not ideal because the meaning of a phrase isoften related to its composite words.
That information is lost.
This paper proposes to use the generalizedP?lya Urn (GPU) model to solve the problem, which gives superior results.
GPU enables the connectionof a phrase with its content words naturally.
Our experimental results using 32 review datasets showthat the proposed approach is highly effective.1 IntroductionTopic models such as LDA (Blei et al., 2003) and pSLA (Hofmann 1999) and their extensions havebeen popularly used to find topics in text documents.
These models are mostly governed by the phe-nomenon called ?higher-order co-occurrence?
(Heinrich 2009), i.e., how often terms co-occur in differ-ent contexts.
Word w1 co-occurring with word w2 which in turn co-occurs with word w3 denotes a sec-ond-order co-occurrence between w1 and w3.
Almost all these models regard each topic as a distributionover words.
The words under each topic are often sorted according to their associated probabilities.Those top ranked words are used to represent the topic.
However, this representation of topics as a listof individual words has some 1major shortcomings:?
Topics are often difficult to understand or interpret by users unless they are domain experts and alsoknowledgeable about topic models.
In most real-life situations, these are not the case.
In some of ourapplications, we show users several good topics, but they have no idea what they are because manydomain phrases cannot be split to individual words.
For example, ?battery?
and ?life?
are put underthe same topic, which is not bad.
But the users wondered why ?battery?
and ?life?
are the samebecause they thought words under a topic should somehow have similar meanings.
We had to explainthat it is due to ?battery life.?
As another example, sentences such as ?This hotel has a very nicesandy beach?
may cause a topic model to put ?hotel?
and ?sandy?
in a topic, which is not wrong butagain it is hard to understand by a user who may not be able to connect the two words.
Thus in orderto interpret topics well, the user must know the phrases (they are split into individual words) that mayThis work is licensed under a Creative Commons Attribution 4.0 International Licence.
Page numbers and proceedings footerare added by the organisers.
Licence details: http://creativecommons.org/licenses/by/4.0/667be used in a domain and how words may be associated with each other.
To make the matters worse,in most cases, the topics generated from a topic model are not perfect.
There are some wrong wordsunder a topic, which make the interpretation even harder.?
Individual words are difficult to use in practice because in some cases a word under a topic may nothave its intended meaning for the topic in a particular sentence context.
This can cause many mis-takes.
For example, in sentiment analysis of product reviews, a topic is often regarded as a set ofwords indicating a product feature or attribute.
This is not true in many cases.
For example, if ?bat-tery?
and ?life?
are put in one topic, when the system sees ?life,?
it assumes it is related to ?battery.
?But in the sentence ?The life expectancy of the machine is about 2 years,?
this ?life?
has nothing todo with battery or battery life.
This causes an error.
If the system can directly use phrases, ?batterylife?
and ?life expectancy,?
the error will not occur.?
Splitting phrases into multiple individual words causes extra co-occurrences that may result in pooror wrong topics involving other words.
For example, due to sentences like ?Beach staffs are rude?and ?The hotel has a nice sandy beach,?
a topic model may put ?staff?
and ?sandy?
under a topic forstaff and/or put ?beach?
and ?rude?
together under the topic of beach views.Based on our experiences in opinion mining and social media mining, these are major issues withtopic models.
We believe that they must be dealt with before wide spread adaptation of topic models inreal-life applications.
In this paper, we make an attempt to solve this problem.
We will use term torepresent both word and phrase, and use word or phrase when we want to distinguish them.One obvious way to consider phrases is to use a natural language parser to find all phrases and thentreat each phrase as one term, e.g., ?battery life,?
?sandy beach?
and ?beach staff.?
However, the prob-lem with this approach is that it may lose the connection of many related words or phrases in a topic.For example, under the topic for beach, we may not find ?sandy beach?
because there is no co-occur-rence of ?sandy beach?
and ?beach?
if we treat ?sandy beach?
as a single term.
This is clearly not a goodsolution as it may miss a lot of topical terms (words or phrases) for a topic.
It can also result in poortopics due to the loss of co-occurrences.Another obvious solution is to use individual words as they are, but add an extra term representingthe phrase.
For example, we can turn the sentence ?This hotel has a nice sandy beach?
to ?This hotelhas a nice sandy beach <sandy beach>.?
This solution helps deal with the problem of losing co-occur-rences to some extent, but because the words are still treated individually, the three problems discussedabove still exist, although the phrase ?sandy beach?
now can show up in some topics.
However, due tothe fact that phrases are obviously less frequent than individual words, they may be ranked very low,which make little difference to solving the three problems.In this paper, we propose a novel approach to solve the problem, which is based on the generalizedP?lya urn (GPU) model (Mahmoud 2008).
GPU was first introduced into LDA in (Mimno et al., 2011)to concentrate words with high co-document frequency.
However, Mimno et al.
(2011) and other re-searchers Chen et al., (2013) still use them in the framework of individual words.
In the GPU model, wecan deal with the problems above by treating phrases as individual terms and allowing their componentwords to have some connections or co-occurrences with them.
Furthermore, we can push phrases up ina topic as phrases are important for understanding but are usually less frequent than individual wordsand ranked low in a topic.
The intuition here is that when we see a phrase, we also see a small fractionof their component words; and when we see each individual word, we also see a small fraction of itsrelated phrases.
Further, in a phrase not all words are equally important.
For example, in ?hotel staff?,?staff?
is more important as it is the head noun, which represents the semantic category of the phrase.Our experiments are conducted using online review collections from 32 domains.
We will see thatthe proposed method produces significantly better results both quantitatively based on the statisticalmeasure of topic coherence and qualitatively based on human labeling of topics and topical terms.In summary, this paper makes the following contributions:1.
It proposes to consider phrases in topic models, which as we have explained above, is importantfor accurate topic generation, the use of the resulting topics and human interpretation.
As we willsee in Section 2, although some prior works exist, they are based on n-grams (Mukherjee and Liu,2013).
They are different from our approach.
N-grams can generate many non-understandablephrases.
Furthermore, due to infrequency of n-grams (much less frequent than individual words),668typically a huge amount of data is needed in order to produce reasonable topics, which many ap-plications simply do not have.2.
It proposes to use the generalized P?lya Urn (GPU) model to deal with the problems arising inconsidering phrases.
To the best of our knowledge, the GPU model has not been used in the contextof phrases.
This model not only generates better topics, but also rank phrases relatively high intheir topics, which greatly helps understanding of the generated topics.3.
Comprehensive experiments conducted using product and service review collections from 32 do-mains demonstrate the effectiveness of the proposed model.2 Related WorkGPU was first introduced to topic modelling in (Mimno et al., 2011), in which GPU is used to concen-trate words with high co-document frequency based on corpus-specific co-occurrence statistics.
Chen etal.
(2013) applied GPU to deal with the adverse effect of using prior domain knowledge in topicmodeling by increasing the counts of rare words in the knowledge sets.
However, these works still useonly individual words.Topics in most topic models like LDA are unigram distributions over words and assume words to beexchangeable at the word level.
However, there exists some work that tries to take word order intoconsideration by including n-gram language models.
Wallach (2006) proposed the Bigram Topic Model(BTM) which integrates bigram statistics with topic-based approaches to document modeling.
Wang etal.
(2007) proposed the Topical N-gram Model (TNG), which is a generalization of the BTM.
Itgenerates words in their textual order by first sampling a topic, then sampling its status as a unigram orbigram, and then sampling the word from a topic-specific unigram or bigram distribution.
Although the?bag-of-words?
assumption does not always hold in real-life applications, it offers a great computationaladvantage over more complex models taking word order into account for discovering significant n-grams.
Our approach is different from these works in two ways.
First, we still follow the ?bag-of-words?or rather ?bag-of-terms?
assumption.
Second, we find actual phrases rather than just n-grams.
Most n-grams are still hard to understand because they are not natural phrases.Blei and Lafferty (2009), Liu et al.
(2010) and Zhao et al.
(2011) also try to extract keyphrases fromtexts.
Their methods, however, are very different because they identify multi-word phrases usingrelevance and likelihood scores in the post-processing step based on the discovered topical unigrams.Mukherjee and Liu (2013) and Mukherjee et al.
(2013) all try to include n-grams to enhance theexpressiveness of their models while preserving the advantages of ?bag-of-words?
assumption, whichhas a similar idea as our paper.
However, as we point out in the introduction, this way of includingphrases/n-grams suffers from several shortcomings.
Solving these problems is the goal of our paper.Finally, since we use product reviews as our datasets, our work is also related to opinion mining usingtopic models, e.g.
(Mei et al., 2007; Lu and Zhai, 2008; Titov and McDonald, 2008; Zhao et al., 2010;Li et al., 2010; Sauper and Barzilay, 2013; Lin and He, 2009; Jo and Oh, 2011).
However, none of thesemodels uses phrases.3 Proposed ModelWe start by briefly reviewing the Latent Dirichlet Allocation (LDA) model (Blei et al., 2003).
Then wedescribe the simple P?lya urn (SPU) model, which is embedded in LDA.
After that, we present thegeneralized P?lya urn (GPU) model and discuss how it can be applied to our context.
The proposedmodel uses GPU for its inference.
It shares the same graphical model as LDA.
However, the GPU in-ference mechanism is very different from that of LDA, which cannot be reflected in the graphical modelor the generative process as it only helps to infer more desirable posterior distributions of topic models.3.1 Latent Dirichlet AllocationLDA is a generative probabilistic model for a document collection.
It assumes that documents are rep-resented as a mixture of latent topics, and each latent topic is characterized by a distribution over terms.In order to generate a term ??(?
)in document ?, where ?
is its position, we first draw a discrete topicassignment ??(?
)from a document-specific distribution over ?
topics ?
?, which is drawn from a priorDirichlet distribution with hyperparameter ?.
Then we draw a term from the topic-specific distribution669over the vocabulary ???(?
), which is drawn from a prior Dirichlet distribution with hyperparameter ?.For inference, instead of directly estimating ?
and ?, Gibbs sampling is used to approximate thembased on the posterior estimates of latent topic assignment ?.
The Gibbs sampling procedure considerseach term in the documents in turn, and estimates the probability of assigning the current term to eachtopic, conditioned on the topic assignments to all other terms.
Griffiths and Steyvers (2004) showed thiscould be calculated by:?
(??(?
)= ?|??
?,?,?, ?, ?)
???|?
+ ???
+ ??????(?
)|?+ ???
+ ??
(1)where  ??(?
)= ?
represents the topic assignment of term ??(?
)to topic ?, and  ???,?
refers to the topicassignments of all other terms.
?
denotes all terms in the document collection, ?
denotes the size ofvocabulary of the collection, ?
is the number of topics in the corpus, ??|?
is the count of term ?
undertopic ?, ??
= ?
???|???
, and ??|?
refers the count of topic ?
being assigned to some terms in document?, ??
= ?
???|???
.
All these counts exclude the current term.3.2 Simple P?lya Urn ModelTraditionally, the P?lya urn model is designed in the context of colored balls and urns.
In the context oftopic models, a term can be seen as a ball of a certain color and the urn contains a mixture of balls withvarious colors.
The classic topic-word (or topic-term) distribution can be reflected by the color propor-tion of balls in the urn.
LDA follows the simple P?lya urn (SPU) model, which works as follows: whena ball of a particular color is drawn from an urn, that ball is put back to the urn along with another ballof the same color.
This process corresponds to assigning a topic to a term in the Gibbs sampler of LDA.Based on the topic-specific ?collapsed?
probability of a term ?
given topic ?,??|?+???+?
?, which is essen-tially the second ratio in (1), drawing a term ?
will only increase the probability of seeing ?
in thefuture sampling process.
This self-reinforcing property is known as ?the rich get richer?.
In the nextsubsection, we will introduce the generalized P?lya urn (GPU) model, which increases the probabilityof seeing certain other terms when we sample a term.3.3 Generalized P?lya Urn ModelThe generalized P?lya urn (GPU) model differs from SPU in that, when a ball of a certain color isdrawn, two balls of that color is put back along with a certain number of balls of some other colors.Unlike SPU, GPU sampling not only allows us to see a ball of the same color again with higher proba-bility, but also increases the probability of seeing balls with certain other colors.
These additional ballsof certain other colors added to the urn increase their proportions in the urn.
We call this the promotionof these colored balls.
Applying the idea, there are two directions of promotion in our application (Notethat in each sentence, we need to identify each phrase, but do not need to add any extra information):1.
Word to phrase: When an individual word is assigned to a topic (analogous to drawing a ball ofa certain color), each phrase containing the word will be promoted, meaning that the phrase willbe added to the same topic with a small count.
That is, a fraction of the phrase will be assigned tothe topic.
This is justified because it is reasonable to assume that the phrase is related to the wordto some extent in meaning.2.
Phrase to word: When a phrase is assigned to a topic, each component word in it is also promotedwith a certain small count.
That is, each word is also assigned the topic by a certain amount.
Inmost cases, the head nouns are more important.
Thus, we promote the head nouns more.
Forexample, in ?hotel staff?, ?staff?
is the head noun that determines the category of the noun phrase.The rationale of this promotion is similar to that above.Let ??(?
)be a word and ?_?
be the word itself or a phrase containing the word ??(?).
?
represents aterm, and ?_?
indicates all the related terms of ?.
The new GPU sampling is as follows:?
(??(?
)= ?|??
?,?,?, ?, ?, ?)
???|?
+ ???
+ ????
??_?|???_?,??(?)
+ ??_??
?
??_?|???_?,??_??
+ ??
(2)670where ?
is a ?
?
?
real-value matrix, each cell of which contains a real value virtualcount, indicatingthe amount of promotion of a term under a topic when assigning this topic to another term.
?
is size ofall terms.
The new model retains the document-topic component of standard LDA, which is the firstratio in (1), but replaces the usual P?lya urn topic-word (topic-term) component, the second ratio in (1),with a generalized P?lya urn framework (Mahmoud 2008; Mimno et al., 2011).
The simple P?lya urnmodel is a simplified version of GPU in which matrix ?
is an identity matrix.
In this paper, ?
is anasymmetric matrix because the main goal of using GPU is to promote the less frequent phrases in thedocuments.4 EXPERIMENTSIn this section, we evaluate the proposed method of considering phrases in topic discovery, and compareit with three baselines.
The first baseline discovers topics using LDA in a traditional way without con-sidering phrases, i.e., using only individual words.
We refer to this baseline as LDA(w).
The secondbaseline considers phrases by treating each whole phrase as a separate term in the corpus.
We refer tothis baseline as LDA(p).
The third baseline considers phrases by keeping individual component wordsin the phrases as they are, but also adding phrases as extra terms.
We refer to this baseline as LDA(w_p).We refer to our proposed method as LDA(p_GPU).
Note that for those words that are not in any phrases,they are treated as individual words (or unigrams).Data Set: We use product reviews from 30 sub-categories (types of product) in the electronics domainfrom Amazon.com.
The sub-categories are ?Camera?, ?Mouse?, ?Cellphone,?
etc (see the whole listbelow Figure 1).
Each domain contains 1,000 reviews.
Besides, we also use a collection of hotel reviewsand a collection of restaurant reviews from TripAdvisor.com and Yelp.com.
The hotel review data con-tains 101,234 reviews, and the restaurant review data contains 25,459 reviews.
We thus have a total of32 domains.
We ran the Stanford Parser to perform sentence detection, lemmatization and POS tagging.Punctuations, stopwords, numbers and words appearing less than 5 times in each dataset are removed.Domain names are also removed, e.g., word ?camera?
for the domain Camera, since it co-occurs withmost words in the dataset, leading to high similarity among topics/aspects.Sentences as Documents: As noted in (Titov and McDonald, 2008), when standard topic models areapplied to reviews as documents, they tend to produce topics that correspond to global properties ofproducts (e.g., product brand name), but cannot separate different product aspects or features well.
Thereason is that all reviews of the same product type basically evaluate the same aspects of the producttype.
Only the brand names and product names are different.
Thus, using individual reviews for model-ling is ineffective for finding product aspects or features, which are our topics.
Although there are ap-proaches which model sentences (Jo and Oh, 2011; Zhao et al., 2010; Titov and McDonald, 2008), wetake the approach in (Brody and Elhadad, 2010; Chen et al., 2013), dividing each review into sentencesand treating each sentence as an independent document.Noun Phrase Detection: Although there are different types of phrases, in this first work we focusonly on noun phrases as they are more representative of topics in online reviews.
We will deal with othertypes of phrases in the future.
Our first step is thus to obtain all noun phrases from each domain.
Due tothe efficiency issue of full natural language parser with a huge number of reviews, instead of applyingthe Stanford Parser to recognize noun phrases, we design a rule-based approach to recognize nounphrases as consecutive nouns based on POS tags of sentences.
Although the Stanford Parser may giveus better noun phrases, our simple method serves the purpose and gives us very good results.
In fact,based on our initial experiments, the Stanford Parser also gives many wrong phrases.Parameter Settings: In all our experiments, the posterior inference was drawn after 2000 Gibbssampling iterations with a burn-in of 400 iterations.
Following (Griffiths and Steyvers, 2004), we fix theDirichlet priors as follows: for all document-topic distributions, we set ?=50/?, where ?
is the numberof topics.
And for all topic-term distributions, we set ?=0.1.
We also experimented with other settingsof these priors and did not notice much difference.Setting the number of topics/aspects in topic models is often tricky as it is difficult to know the exactnumber of topics that a corpus has.
While non-parametric Bayesian approaches (Teh et al., 2005) doexist for estimating the number of topics, it?s not the focus of this paper.
We empirically set the numberof topics to 15.
Although 15 may not be optimum, since all models use the same number, there is nobias against any model.671In Section 3.3, we introduced the promotion concept for the GPU model.
When we sample a topic fora word, we add virtualcount of topic assignment to all its related phrases.
However, not all words in aphrase are equally important.
For example, in phrase ?hotel staff?, ?staff?
is more important, and we callsuch words the head nouns.
In this work, we apply a simple method used in (Wang et al., 2007), whichis to always assume that the last word in a noun phrase is the head noun.
Although we are aware of thepotential harm to our model when we promote a wrong word, we will leave it as our future work.
Again,because we want to connect phrases with their component words and promote the rank of phrases intheir topics, we add less virtual counts to individual words.
Thus, we add 0.5 * virtualcount to the lastword in a phrase and add 0.25 * virtualcount to all other words.
We set virtualcount = 0.1 in our exper-iments empirically.Based on the discovered topics, we conduct statistical evaluation using topic coherence, human eval-uation and also a case study to quantitatively and qualitatively show the superiority of the proposedmethod in terms of both interpretability and topic wellness.4.1 Statistical EvaluationPerplexity and KL-divergence are often used to evaluate topic models statistically.
However, researchershave found that perplexity on held-out documents is not always a good predictor of human judgmentsof topics (Chang et al., 2009).
In our application, we are not concerned with the test on future data usingthe hold-out set.
KL-divergence measures the difference of distributions, and thus can be used to meas-ure the distinctiveness of topics.
However, distinctiveness of topics does not necessarily mean humanagreeable topics.
Recently, Mimno et al.
(2011) proposed a new measure called topic coherence, whichhas been shown to correlate with human judgments of topic quality quite well.
Higher topic coherencescore indicates higher quality of topics, i.e., better topic coherence.
Topic coherence is computed asbelow.??(?
; ?(?))
= ?
?
????
(??(?
), ??(?))
+ 1?
(??(?))??1?=1?
?=2(3)in which ?(?)
is the document frequency of term ?
(i.e., the number of documents with at least oneterm ?)
and ?
(?, ??)
is the co-document frequency of term ?
and term ??
(i.e., the number of documentscontaining both term ?
and term ??).
Also, ?(?)
= (?1(?
), ?
, ??(?))
is the list of ?
most probable termsin topic ?.
1 is added as a smoothing count to avoid taking the logarithm of zero.We thus use this measure to score all four experiments.
Figure 1 and Figure 2 show the topic coher-ence using top 15 terms and top 30 terms respectively on the 32 different domains.
Notice the topiccoherence is a negative value, and a smaller absolute value is better than a larger one.
Firstly, we cansee from both charts that our proposed model LDA(p_GPU) is better than all other three baselines by alarge margin.
Secondly, the performance of the other three baselines are quite similar.
In general,LDA(p) is slightly worse than the other two baselines.
It is because replacing many words with phrasesdecreases the number of co-occurrences in the corpus.
In contrast, LDA(w_p) is slightly better than theother two baselines on most domains because some frequent phrases add more reliable co-occurrencesin the corpus.
However, as we point out in the introduction, some problems still exist.
Firstly, it doesnot solve the problem of phrases and their component words having different meanings, and thus artifi-cially creating such wrong co-occurrences may damage the overall performance.
Secondly, even if thenumber of co-occurrences increases, most of the phrases are still too infrequent to be ranked high intheir associated topics to be useful in helping users understand the topic.In order to test the significance of the improvement, we conduct paired t-tests on the topic coherenceresults.
Using both 15 top terms and 30 top terms, statistical tests show that our proposed method,LDA(p_GPU), outperforms all three baselines significantly (p < 0.01).
However, there?s no significantimprovement between any pair of the three baselines.4.2 Manual EvaluationAlthough several statistical measures, such as perplexity, KL-divergence and topic coherence, have beenused to statistically evaluate topic models, since topic models are mostly (including ours) unsupervised,672statistical measures may not always correlate with human interpretations or judgments.
Thus, in thissub-section, we perform a manual evaluation through manual labeling of topics and topical terms.Manual labeling was done by two annotators, who are familiar with reviews and topic models.
Thelabeling was carried out in two stages sequentially: (1) labeling of topics and (2) labeling of topicalterms in each topic.
After the first stage, an annotator agreement is computed and then the two annotatorsdiscuss about the disagreed topics to reach a consensus.
Then, they move on to the next stage to labelthe top ranked topical terms in each topic (based on their probabilities in the topic).
For the annotatorFigure 1: Topic coherence of the top 15 terms of each model on each of the 32 datasets.
Notice that since topic coherenceis a negative value, a smaller absolute value is better than a larger one.Domain/dataset names are listed as follows (1:Amplifier; 2:BluRayPlayer; 3:Camera; 4:CellPhone; 5:Computer;6:DVDPlayer; 7:GPS; 8:HardDrive; 9:Headphone; 10:Keyboard; 11:Kindle; 12:MediaPlayer; 13:Microphone; 14:Monitor;15:Mouse; 16:MP3Player; 17:NetworkAdapter; 18:Printer; 19:Projector; 20:RadarDetector; 21:RemoteControl; 22:Scan-ner; 23:Speaker; 24:Subwoofer; 25:Tablet; 26:TV; 27:VideoPlayer; 28:VideoRecorder; 29:Watch; 30:WirelessRouter;31:Hotel; 32:Restaurant).Figure 2: Topic coherence of the top 30 terms of each model on each dataset.
Notice again that since topic coherence is anegative value, a smaller absolute value is better than a larger one.
X-axis indicates the domain id numbers, whose namesare listed below Figure 1.Figure 3: Human evaluation on five domains using top 15 and top 30 terms.
X-axis indicates the domain id numbers, whosecorresponding domain names are listed below Figure 1.
Y-axis indicates the ratio of correct topic terms.-440-390-340-2901 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32TopicCoherenceTop 15 Terms Topic CoherenceLDA(w) LDA(p) LDA(w_p) LDA(p_GPU)-1750-1550-13501 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32TopicCoherenceTop 30 Terms Topic CoherenceLDA(w) LDA(p) LDA(w_p) LDA(p_GPU)0.40.60.8131 32 29 25 16Top 15 TermsLDA(w) LDA(p)LDA(w_p) LDA(p_GPU)0.30.50.70.931 32 29 25 16Top 30 TermsLDA(w) LDA(p)LDA(w_p) LDA(p_GPU)673agreement, we compute Kappa scores.
The Kappa score for topic labeling is 0.838, and the Kappa scorefor topical terms labeling is 0.846.
Both scores indicate strong agreement in the labeling.Evaluation measure.
A commonly used evaluation measure in human evaluation is precision@n (orP@n for short), which is the precision at a particular rank position n in a topic.
For example, Preci-sion@5 means the precision of the top ranked 5 terms for a topic.
To be consistent with the automaticevaluation, we use Precision@15 and 30.
Top 15 terms is usually sufficient to represent the topic.
How-ever, since we include phrases in our experiments which may lead to some other terms ranked lowerthan using only words, we labeled up to top 30 terms.
The Precision@n measure is also used in (Zhaoet al., 2010) and some others, e.g., (Chen et al., 2013).In our experiments, we labeled four results for each domain, i.e., those of LDA(w), LDA(p), LDA(w_p)and LDA(p_GPU).
Due to the large amount of human labeling effort, we only labeled 5 domains.
Wefind that it is sometimes hard to figure out what some of the topics are about and whether some termsare related to a topic or not, so we give the results to our human evaluators together with the phrases ineach domain extracted by our rules in order to let them be familiar with the domain vocabulary.
Thehuman evaluation results are shown in Figure 3.Results and Discussions.
Again, we conduct paired t-tests on the human evaluation results of top 15and 30 terms.
Statistical tests show that our proposed method, LDA(p_GPU), outperforms all other threemethods significantly (p < 0.05) using both top 15 and top 30 terms.
However, there?s no significantimprovement between any pair of the three baselines.4.3 Case StudyIn order to illustrate the importance of phrases in enhancing human readability, we conduct case studyusing one topic from each of the five manually labeled domains.
Due to space limitations, we onlycompare the results of our model LDA(p_GPU) with LDA(w).Table 1: Example topics discovered by LDA(w) and LDA(p_GPU)Hotel Restaurant WatchLDA(w) LDA(p_GPU) LDA(w) LDA(p_GPU) LDA(w) LDA(p_GPU)bed clean service service hand bigcomfortable comfortable star friendly minute handsmall quiet staff server hour minutesleep sleep atmosphere staff beautiful cheapsize large friendly atmosphere casual hourlarge spacious server waiter christmas automatictv size waiter attentive setting secondspillow king size bed attentive star condition lineking pillow reason service staff worth hour handchair queen size bed decor star service weight durabletable bed size quick customer service red analog handmattress bed nd pillow customer table service press hand moveclean bed sheet waitress delivery service gift hand linedouble bed linen tip rush hour service run seconds handbig sofa bed pleasant service attitude functionality hand sweepTablet MP3PlayerLDA(w) LDA(p_GPU) LDA(w) LDA(p_GPU)screen screen battery batterytouch size headphone hoursoftware easier life battery lifehard pro media pricepad touch screen car worthoption bigger windows chargeversion area hour replacementwebsite inch decent freeangle screen protector reason marketcar screen size xp aaa batterycharger inch screen program aa batteryipod draw aaa purchaseworth home screen window hour batterygb screen look set aaadrive line pair life674In the above table, we notice that with phrases, the topics are much more interpretable than onlyreading individual words given by LDA(w).
For example, ?hand?
in ?Watch?
domain given by LDA(w)is quite confusing at first, but in LDA(p_GPU), ?hour hand?
makes it more understandable.
Anotherexample is ?aaa?
in ?MP3Player?
domain.
It is quite confusing at first, but ?aaa battery?
should make itmore interpretable by an application user who is not familiar with topic models or does not have exten-sive domain knowledge.
Also, due to wrong co-occurrences created by individual words in a phrase, theLDA(w) results contain much more noise than those of LDA(p_GPU).5 CONCLUSIONThis paper proposed a new method to consider phrases in discovering topics using topic models.
Themethod is based on the generalized P?lya urn (GPU) model, which allows us to connect phrases withtheir component words during the inference and rank phrases higher in their related topics.
Our methodpreserves the advantages of ?bag-of-words?
assumption while preventing the side effects that traditionalmethods have when considering phrases.
We tested our method against three baselines across 32 differ-ent domains, and demonstrated the superiority of our method in improving the topic quality and humaninterpretability both quantitatively and qualitatively.ReferencesDavid M. Blei and John D. Lafferty.
2009.
?Visualizing Topics with Multi-Word Expressions.?
Tech.
Report.
(arXiv:0907.1013).David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003.
?Latent Dirichlet Allocation.?
Journal of MachineLearning Research 993-1022.Samuel Brody and Noemie Elhadad.
2010.
?An Unsupervised Aspect-Sentiment Model for Online Reviews.?NAACL.
Los Angeles, California: ACL.Jonathan Chang, Jordan Boyd-Graber, Sean Gerrish, Chong Wang, and David M. Blei.
2009.
?Reading TeaLeaves: How Humans Interpret Topic Models.?
Neural Information Processing Systems.Zhiyuan Chen, Arjun Mukherjee, Bing Liu, Meichun Hsu, Malu Castellanos, and Riddhiman Ghosh.
2013.
?Ex-ploiting Domain Knowledge in Aspect Extraction.?
EMNLP.Thomas L. Griffiths, and Mark Steyvers.
2004.
?Finding scientific topics.?
Proceedings of National Academy ofSciences.Gregor Heinrich.
2009.
?A Generic Approach to Topic Models.?
ECML PKDD.
ACM.
Pages 517 - 532.Thomas Hofmann.
1999.
?Probabilistic latent semantic analysis.?
UAI.Yohan Jo and Alice Oh.
2011.
?Aspect and Sentiment Unification Model for Online Review Analysis.?
WSDM.Hong Kong, China: ACM.Chenghua Lin and Yulan He.
2009.
?Joint Sentiment/Topic Model for Sentiment Analysis?.
CIKM.
Hong Kong,China.Fangtao Li, Minlie Huang, Xiaoyan Zhu.
2010.
?Sentiment Analysis with Global Topics and Local Dependency?.AAAIYue Lu and Chengxiang Zhai.
2008.
?Opinion Integration Through Semi-supervised Topic Modeling.?
WWW.2008, Beijing, China: ACM.Zhiyuan Liu, Wenyi Huang, Yabin Zheng, and Maosong Sun.
2010.
?Automatic Keyphrase Extraction via TopicDecomposition.?
EMNLP.Arjun Mukherjee and Bing Liu.
2013.
?Discovering User Interactions in Ideological Discussions.?
ACL.Arjun Mukherjee, Vivek Venkataraman, Bing Liu, and Sharon Meraz.
2013.
?Public Dialogue: Analysis of Tol-erance in Online Discussions.?
ACL.David Mimno, Hanna M. Wallach, Edmund Talley, Miriam Leenders, and Andrew McCallum.
2011.
?OptimizingSemantic Coherence in Topic Models.?
EMNLP.
Edinburgh, Scotland, UK: ACL.675Hosan Mahmoud.
2008.
Polya Urn Models.
Chapman & Hall/CRC Texts in Statistical Science.Qiaozhu Mei, Xu Ling, Matthew Wondra, Hang Su, and ChengXiang Zhai.
2007.
?Topic Sentiment Mixture:Modeling Facets and Opinions in Weblogs.?
WWW.
Banff, Alberta, Canada: ACM.Christina Sauper and Regina Barzilay.
2013.
?Automatic Aggregation by Joint Modeling of Aspects and Values?.Journal of Artificial Intelligence Research 46 (2013) 89-127Ivan Titov and Ryan McDonald.
2008.
?Modeling Online Reviews with Multi-grain Topic Models.?
WWW.
2008,Beijing, China: ACM.Yee Whye Teh, Michael I. Jordan, Matthew J. Beal, and David M. Blei.
2005.
?Hierarchical Dirichlet Processes.
?Journal of the American Statistical Association.Hanna M. Wallach.
2006.
?Topic Modeling: Beyond Bag-of-Words.?
ICML.
Pittsburgh, PA: ACM.Xuerui Wang, Andrew McCallum, and Xing Wei.
2007.
?Topical N-grams: Phrase and Topic Discovery, with anApplication to Information Retrieval.?
ICDM.Wayne Xin Zhao, Jing Jiang, Hongfei Yan, and Xiaoming Li.
2010.
?Jointly Modeling Aspects and Opinions witha MaxEnt-LDA Hybrid.?
EMNLP.
Massachusetts, USA: ACL.Wayne Xin Zhao, Jing Jiang, Jing He, Yang Song, Palakorn Achananuparp, Ee-Peng Lim, and Xiaoming Li.
2011.?Topical Keyphrase Extraction from Twitter.?
ACL.676
