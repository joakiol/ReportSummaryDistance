SRI's Tipster II ProjectJerry R. Hobbs, Douglas Appelt ,  John Bear, David Israel,Megumi Kameyama,  Andrew Kehler, Mark Stickel, and Mabry TysonArtif icial Intell igence CenterSRI Internat ionalMenlo Park,  CA 940251 In t roduct ionThe principal barrier to the widespread use of in-formation extraction technology is the difficulty indefining the patterns that represent one's informa-tion requirements.
Much of the work that has beendone on SRI's Tipster II project has been directedat overconaing this barrier.
In this paper, aftersome background on the basic structure of the FAS-TUS system, we present some of these developments.Specifically, we discuss the declarative pattern spec-ification language FastSpec, compile-time transfor-mations, and adapting rules from examples.
Inaddition, we have developed the basic capabilitiesof FASTUS.
We describe our efforts in one area--coreference resolution.
We are now experimentingwith the use of FASTUS in improving document re-trieval and this is also described.2 The  St ructure  o f  FASTUSFASTUS is a cascade of finite-state transducers.One can think of it as having five phases, each build-ing up larger structures from the input.
Each phasetakes as its input the output objects produced bythe previous phase.1.
Name Recognition2.
Basic Phrase Recognition3.
Complex Phrase Recognition4.
Clause-Level Event Recognition5.
Event MergingIn describing the system, we will say what itdoes, given as input the following paragraph fromthe management succession domain of MUC-6:A. C. Nielsen Co. said George Gar-rick, 40 years old, president of Informa-tion Resources Inc.'s London-based Eu-ropean Information Services operation,will become president and chief operat-ing officer of Nielsen Marketing ResearchUSA, a unit of Dun & Bradstreet Corp.He succeeds John It.
Costello, who re-signed in March.1.
The Name Recognizer ecognizes the namesof persons, organizations, and locations, as well assuch special constructions a  dates and amounts ofmoney.
There are three primary methods for this.We have patterns for recognizing the internal struc-ture of names, as in "A.C. Nielsen Co." We havea list of common ames, many of which could nototherwise be recognized, such as "IBM" and "Toys'R' Us".
Finally, we recognize or reclassify names onthe basis of their immediate context.
For example,if we see "XYZ's sales" or "the CEO of XYZ", thenwe know XYZ is a company.In our sample text, this phase results in the fol-lowing labelling:A. C. Nielsen Co.co said GeorgeGarrickper, 40 years old, president ofInformation Resources Inc.co'SLondonT,oc-based European InformationServicesco peration, will becomepresident and chief operating officer ofNielsen Marketing Research USAco, aunit of Dun & Bradstreet Corp.co.He succeeds John H. Costelloeer, whoresigned in MarchD~t~.2.
The Basic Phrase Recognizer recognizes basicnoun groups, that is, noun phrases up through thehead noun.
It also recognizes verb groups, or verbstogether with their auxilliaries and embedded ad-verbs; certain predicate complement constructionsare also analyzed as verb groups.
It also labelsprepositions and other particles, such as the pos-sessive marker, relative pronouns, and conjunctions.The core grammar for this phase is domain-independent.
But there are some domain-dependent201specializations of the rules, where special semanticsapplies.
For example, there is a general rule allow-ing a noun-hyphen-past participle sequence in theadjective position of noun groups, and there is aspecialized version of this for a location followed by"-based", as in "London-based".In the sample text, this phase results in the fol-lowing labelling:\[A. C. Nielsen CO.\]NG \[said\]vG \[GeorgeGarrick\]NG, \[40 years old\]vG,\[president\]NG \[of\]p \[InformationResources InC.\]NG\['S\]poss \[London-basedEuropean Information Servicesoperation\]NG, \[will become\]vG\[president\]NG \[and\]conj \[chief operatingofficeriNG \[of\]p \[Nielsen MarketingResearch USA\]NG, \[a unit\]NG \[of\]p\[Dun & Bradstreet Corp.\]NG\[He\]NG \[SUCCeedS\]NG \[John n.Costello\]NG, \[who\]rtelpro \[resigned\]NG\[in\]p \[March\]NG.3.
The Complex Phrase Recognizer ecognizescomplex noun groups and verb groups.
For complexnoun groups it attaches possessives, "of" phrases,controlled prepositional phrases, and age and otherappositives to head nouns, and it recognizes omecases of noun group conjunction.
For verb groups,it attaches upport verbs to their content verb ornominalization complements.
Some of these rulesare domain-independent, but for any given do-main we typically implement a number of high-priority, domain-dependent specializations of thegeneral rules.
For example, for management succes-sion, we have complex noun groups for companies,persons, and positions.
A company can have an-other company as a possessive, as in "InformationResources Inc.'s London-based European Informa-tion Services operation".
A relational company termsuch as "unit" can have another company as a com-plement.
Companies can take a company appositive.Position titles can be conjoined, and a position ti-tle can have an "of" phrase specifying the company.Persons can have position appositives.In the sample text, this phase results in the fol-lowing labelling:\[A. C. Nielsen Co.\]co \[said\]vG\[George Garrick, 40 years old,\[president of\[\[Information Resources Inc.\]co'SLondon-based EuropeanInformation Servicesoperation\]co\]Pos\]eer,\[will become\]vc\[president and chief operating officer of\[Nielsen Marketing Research USA,a unit of \[Dun & BradstreetCorp.\]co\]co\]Pos\[He\]per \[succeeds\]vG\[John H. Costello\]eer,\[who\]Relpro \[resigned\]vG\[in\]p \[March\]Date.4.
The Clause-Level Event Recognizer recognizesevents in the domain of interest.
This is done bymatching the output of the Complex Phrase Recog-nizer with a set of patterns pecifying the subject,verb, object, and prepositional phrases in which theevents are typically expressed.
In addition, locative,temporal, and epistemic adjuncts are recognized atthis stage.
Examples of patterns for the manage-ment succession domain are as follows:Person, PositionPerson becomes PositionPerson succeeds Person (as Position)Person resigns (from Position)As the patterns are recognized, event structuresare built up, indicating what type of event occurredand who and what the participants are.
For themanagement succession domain, there is an eventstructure for a state, specifying that a person is ina position at an organization, and a structure fortransitions between two states.For the sample text, the following four eventstructures are constructed, corresponding to the fourpatterns above:Person: GarrickPosition: presidentOrg: EISPerson: Garrick Person:Position: - -  ~ Position:Org: - -  Org:GarrickpresidentNMRPerson: Costello Person: hePosition: - -  ~ Position: - -Org: - -  Org: - -Person: Costello Person: - -Position: - -  ~ Position: - -Org: - -  Org: - -5.
Once individual clause-level patterns havebeen recognized, the event structures that are builtup are merged with other event structures from the202same and previous entences.
There are various con-straints of consistency, compatibility, and distancethat govern whether or not the two merge.For the sample text, merging the four eventsfound by the Clause-Level Event Recognizer resultsin the two following transitions, both with the sameend state, the first person-centered and the secondp0sition-centered:Person: Garrick Person: GarrickPosition: president ~ Position: presidentOrg: EIS Org: NMRPerson: Costello Person: GarrickPosition: president ::?.
Position: presidentOrg: NMR Org: NMRThis result is then mapped into the desired tem-plate, which may be different since in general itsstructure will be determined by retrieval require-ments rather than how the information is typicallyexpressed in texts.3 FastSpec: A DeclarativeSpecification LanguageIn the first version of FASTUS (Hobbs et al, 1992),the finite-state transducers were represented in a ta-ble of state changes with blocks of code associatedwith the final states.
Only the developers were ableto define patterns in this system.
The next ver-sion, used in MUC-5 (Appelt et al, 1993), had agraphical interface for defining state changes and al-lowed blocks of code to be associated with transi-tions.
Only a small group of cognoscenti were ableto use this system.One of the first accomplishments of the currentproject was the definition and development of adeclarative specification language called FastSpec.It enabled the easy definition of patterns and theirassociated semantics, and made it possible for alarger set of users to define the patterns.FastSpec allows the definition of multiple gram-mars, one for each phase.
The terminal symbols inthe grammar for a phase correspond to the objectsproduced by the previous phase, and their attributescan be accessed and checked.
The rules have a syn-tactic part, expressing the pattern in the form ofa regular expression, with attribute and other con-straints permitted on the terminal symbols.
Theyalso have a semantic part, which specifies how at-tributes are to be set in the output objects of thephase.The following is a fragment of a grammar for verbgroups in the Basic Phrase Recognizer:VG --> VG2 Adv* V-en:l;head = (obj I);active = T;aspect = perf;;VG2 --> VGI ''have'';;VG2 --> V\[have\]:l (Not);tense = (tense 1);;VGI --> Modal:l (Not) Adv*;tense : (tense I);;Not --> ''not'';negative = T;;This covers a phrase like "could not really have left".V-en and Adv refer to words that are past partici-ples and adverbs, respectively.
V\[have\] indicatessome form of the verb "have".
The use of indiceslike ":1" allows us to access the attributes of termi-nal symbols.
The semantics in these rules sets thefeatures of ac t ive ,  aspect ,  tense,  and negat iveappropriately, and sets head to point to the inputobject providing the past participle.The following is one rule in a grammar for theClause-Level Event Recognizer for the labor negoti-ations domain used in the dry run of MUC-6 in April1995.Event - ->Event-Adj* NG\[org\] : l  (Compl)VG\[active,resume-word\]:2 NG\[talk-word\]{''with'' NG\[org\]:3 I Event-Adj}*;type = Talk;parties = (List (obj I) (obj 3));talk-status = Bargaining;;This says that when an organization resumes talkswith an organization, it is a significant event.Event-Adj is matched by temporal, locative, epis-temic and other adverbial adjuncts.
Compl ismatched by various possible noun complements.This rule creates an event structure in which theevent type is Talk, the parties are the subject andthe object of "with" matched by the patterns, andthe talk status is Bargaining.FastSpec has made it immensely easier for usto specify grammars, and recently it has become203one of the principal influences on the Tipster ef-fort to develop a community-wide Common Pattern-Specification Language.4 Compile-Time Transforma-tionsFor an application in which we had to recognize theproducts made by companies, we would want a pat-tern that would recognizeGM manufactures cars.But in addition to writing a rule for this pattern,we would have to write rules for all the syntacticvariations of the simple active clause, to recognizeCars are manufactured by GM.. .
.
GM, which manufactures cars.. .
.
cars, which are manufactured by GM.. .
.
cars manufactured by GM.GM is to manufacture cars.Cars are to be manufactured by GM.GM is a car manufacturer?Moreover, in each of these patterns we would needto allow the occurrence of temporal, locative, andother adverbials.
Yet al of these variations are pre-dictable, and every time we want the first patternwe want the others as well.This consideration led us to implement what canbe called "compile-time transformations".
Expen-sive operations of transformation are not done whilethe text is being processed.
Instead, the transformedpatterns are generated when the grammar is com-piled.
We have implemented a number of parame-terized metarules that specify the possible linguisticvariations of the simple active clause, expressed interms of the subject, verb, and object of the ac-tive clause, and having the same semantics.
Thendomain-specific patterns are defined that provideparticular instantiations of the metarules.The metarule for the basic active clause, as in"The company resumed talks", isinto this rule and a new specific rule is gener-ated.
Each of these variables is a (list of) lexi-cal or other attributes, and when they are pluggedinto the metarule, they define a pattern that is con-strained to those attributes.
Adverbials are recog-nized by matching a sequence of input objects withEvent-Adj.
Indices are associated with each of thearguments of the head's predication, and these canbe used in the semantics pecified for particular pat-tern.The metarule for passives, as in "Talks were re-sumed", isEvent -->NG\[?
?obj\] :3 VG\[passive,?
?head\] :2{P \[?
?prep\] NG\[?
?pobj\] :4 \] Event-Adj}*;?
?semantics;;The object still has the index 3, so that the samesemantics can be used for the passive as for the ac-tive.The metarule for relative clauses with a gappedsubject, as in "the company, which resumed talks?..
", isEvent -->NG \[?
?subj\] : 1 P \[relpro\]VG\[active,?
?head\] :2 NS\[?
?obj\] :3{P\[?
?prep\] NG\[?
?pobj\]:4 \[ Event-Adj}*;?
?semantics ; ;The metarule for nominalizations, as in "thecompany's resumption of talks", must appear in theComplex Phrase Recognizer and has the formComplexNG -->(NG\[?
?subj\]:l P\[gen\]) NG\[?
?head\]:2(''of'' NG\[??obj\]:3){P\[?
?prep\] NG\[?
?pobj\]:4 \[ Event-Adj}*;7?semantics ; ;Event -->Event-Adj* NG\[??snbj\]:lVG\[active,?
?head\]:2 NG\[??obj\]:3{P\[?
?prep\] NG\[?
?pobj\]:4 \[ Event-Adj}*;?
?semantics;;Once the variables ?
?subj,  ?
?head, ?
?obj,  ?
?prep,and ?
?pobj are defined by the user, they are pluggedHere all the arguments are optional.
We could sim-ply have the bare nominal.In addition to the basic patterns, middle verbsand symmetric verbs are handled.
Middle verbs areverbs whose object can appear in the subject posi-tion and still have an active verb.They resumed the talks.The talks resumed?204The metarule that implements the middle"transformation" is as follows:Event -->NG\[?
?obj\] :3 VG\[active,?
?head\] :2~P\[?
?prep\] NG\[?
?pobj\] :4 \[ Event-Adj}*;?
?semantics;;Symmetric verbs are verbs where an argument linkedto the head with the preposition "with" can bemoved into a subject position, conjoined with thesubject.
For example ,The union met with the company.The union and the company met.The meeting between the union and thecompany.To handle this there are patterns in the ComplexPhrase Recognizer that recognize a conjunction ofthe subject and the prepositional argument, whenthe verb is designated symmetrical:NG\[?
?subj\] ' ' and ' '  NG\[?
?pobj\]This is then given a special attribute symconj, andin the Clause-Level Event Recognition phase, com-plex noun groups with this property are sought assubjects for symmetric verbs.Event -->Event-Adj* NG\[symconj\]VG\[active,?
?head\]:2 NG\[??obj\]:3Event-Adj*;?
?semantics;;With this set of metarules, defining the necessarypatterns becomes very easy.
One need only specifythe subject, verb, object, preposition, and preposi-tional object, and the classes of metarules that needto be instantiated, and the specific rules are auto-matically generated.
For example, the specificationfor "resume" would beTransformations: Middle, Basic:I: Subj = org;2: Head = resume-word;3: Obj = talk-word;Prep = ''with'';4: PObj = org;Semant ics  =<type = Talk;parties = (list (obj I) (obj 4));talk-status = Bargaining;;>;In the semantics, we set the type of event to be Talkand the talk status to be Bargaining.
The par-ties are those referred to by the subject (1) and theprepositional object (4).Our experience with this aspect of the FAS-TUS system has been very encouraging.
During thepreparation for MUC-6, it took us only about oneday to implement the necessary clause-level domainpatterns, because of the compile-time transforma-tions.5 Atomic  versus Molecu larApproachesThere are two approaches that have emerged in ourexperience with FASTUS.
They might be called the"atomic" approach and the "molecular" approach.Both approaches are made easier by FastSpec andthe compile-time transformations.In the atomic approach, the system recognizesentities of a certain highly restricted type and as-sumes that they play a particular ole in a particularevent, based on that type; then after event mergingit is determined whether enough information as beenaccumulated for this to he an event of interest.
Thisapproach is more noun-driven, and its patterns aremuch looser.
It is most appropriate when the en-tity type is highly predictive of its role in the event.The microelectronics domain of MUC-5 and the la-bor negotiations were of this character.
When onesees a union, it can only go into the union slot of anegotiation event.In the molecular approach, the system must rec-ognize a description of the entire event, not just theparticipants in the event.
This approach is moreverb-driven, and the patterns tend to be tighter.
Itis most appropriate when the syntactic role of an NPis the primary determinate of the entity's role in theevent.
The terrorist domain of MUC-3 and MUC-4,the joint venture domain of MUC-5 and the man-agement succession domain of MUC-6 were of thischaracter.
You can't tell from the fact that an en-tity is a person whether he is going into or out ofa position at an organization.
You have to see howthat person relates to which verb.The distinction between these two approachescan be used as a conceptual tool for analyzing new205domains.6 Adapt ing Rules from Exam-plesThe FastSpec language and the compile-time trans-formations make it easier for linguists and computerscientists to define patterns.
But they do not en-able ordinary users to specify their own patterns.One way to achieve this would be to have automaticlearning of patterns from examples provided by theuser.
We have begun in a small way to implementsuch an approach.We need a way for the user to supply a mappingfrom strings in the text to entries in the template.This can be accomplished by having a two-windoweditor; the text being annotated or analyzed is inone window, the template in the other.
The usermarks a string in the text, and then either copies thestring to a template ntry or enters the set fill that istriggered by the string.
Such a system is first of all aconvenient text editor for filling data bases from textby hand.
But if the system is trying to deduce theimplicit rules the user is responding to to make thefills, then the system is automatically constructingan information extraction system as well.We have implemented a preliminary experimen-tal version of such a system, and are currently de-veloping a more advanced one.
We assume that theuser somehow provides a mapping from text stringsto template ntries and that the semantics of the ruleis completely specified by such a mapping.
More-over, we are only handling the case where the newrule to be induced is a specialization of an alreadyexisting rule, in the sense that<Locat ion> "- .... based"is a specialization of<Noun> "-"  <Past-Participle>In general, the problem of rule induction is veryhard.
What we are doing is a tractable and usefulspecial case.The first problem is to identify the phase in whichthe new rule should be defined.
To do this, we iden-tify the highest-level phase (call it Phase n) in whichthe constituent boundaries produced by the phasecorrespond to the way the user has broken up thetext.
A new rule is then hypothesized in Phase n?l .For example, if the user has marked the string "theunion resumed talks with the company" and placed"the union" in one slot and "the company" in an-other, then Phase n is the Complex Phrase Recog-nizer, since it provides those noun groups as inde-pendent objects.
On the other hand, if the string is"the union's resumption of talks with the company",then the Complex Phrase Recognizer will not do,since it combines at least "the union" and possibly"the company" into the same complex noun group as"resumption".
We have to back up one more phase,to the Basic Phrase Recognizer, to get these noungroups as independent elements.In the current version, we determine what Phasen + 1 rule matches the entire string and then con-struct as general as possible a specialization of thatrule.
For the semantics of the specialized rule, weencode the mapping the user has constructed.Determining the correct level of generalization ofthe hypothesized rule is a difficult problem.
Thereare some obvious heuristics that we have imple-mented, such as generalizing "38" to Number and"Garrick" to Person.
But should we generalize"United Steel Workers" to Union or to Organiza-tion?
Our current approach is to be conservativeand to experiment with various options.Once the rule is hypothesized it will be presentedto the user in some form for feedback and validation.How best to implement this is still a research issue.This work represents a productive synergy be-tween the Tipster project and another FASTUS-based project at SRI, the Message Handler, forprocessing a large number of types of militarymessages.
1 The basic ideas were worked out in con-nection with our Tipster II project.
We will be devel-oping a sophisticated, general version of the systemas part of our Tipster I I I  research.
In the mean-time, we are using the theory that we have workedout to develop a restricted learning component forthe Message Handler.
This effort of applying the-ory to a very complex real-world task can give usinsights into the various problems that arise.7 Coreference Resolut ionThere are three places in FASTUS processing thatcoreference resolution gets done.
Early in the pro-cessing, in Name Recognition, entities that are re-ferred to by the same name, or by a name and aplausible acronym or alias, are marked as corefer-ential.
Late in the processing, in Event Merging,1This project is being carried out in collaboration with FE-Systems, Greenville, and is funded by the Defense AdvancedResearch Project Agency through the US Army TopographicEngineering Center under contract no.
DACA76-93-L-0019.206some coreference resolution happens as a side-effectof merging event strutures.
In the example of Sec-tion 2, we learn from Clause--Level Event Recogni-tion that Garrick will become president and CO0,and we learn that "he" will succeed Costello.
Theseare two consistent management succession event de-scriptions, so they are merged, and in the course ofdoing so, we resolve "he" to Garrick.The third type of coreference resolution occursafter complex noun groups are recognized.
Thismodule was implemented early in 1995 in order toparticipate in the Coreference valuation in MUC-6, but it was done in a way that was completelyin accord with normal FASTUS processing, and theresults of coreference resolution are used by subse-quent phases.Coreference resolution is done only for definitenoun groups and pronouns.
We experimented withan algorithm for bare noun groups, but it hurt pre-cision more than it helped recall.Two principal techniques are used to resolve def-inite noun groups.
First we look for a previous noungroup with the same head noun.
thus, "the agree-ment" will resolve with "an agreement".
In addition,we look for a previous object of the right domain-specific type.
Thus, "the Detroit automaker" willresolve to "General Motors" or to "a company",since "automaker" is of type COMPANY and Gen-eral Motors is a company.
No use is made of syn-onymy or of a sort hierarchy otherwise.
Thus, "theagreement" will not resolve back to "a contract".This is obviously a place where the algorithm canbe improved.
Rather arbitrarily, we have set thesearch window to ten sentences; this is a parameterthan can be experimented with.For third person pronouns we use an approx-imation of the algorithms of Hobbs (1978) andKameyama (1986).
We search for noun groups ofthe right number and gender, first from left to rightin the current sentence, then from left to right inthe previous sentence, and then from right to leftin two more sentences.
The pronoun "they" can beidentified with either a plural noun group or an or-ganization.For singular first person pronouns, 'T' and "me",we resolve to the nearest person.
For plural firstperson pronouns, "we" and "us", we resolve to thenearest organization or set of persons.
We allow allof the current sentence, including material to theright of the pronoun, since quotes frequently precedethe designation of the speaker, as in"I was robbed," said John.An obvious improvement would be to determinewhether the person occurs as the subject of a verb ofspeaking, but an informM examination of the datasuggested this would not result in a significant im-provement.The heuristics we use for coreference resolutionare very simple and easily implemented in a FAS-TUS framework.
Numerous improvements readilysuggest hemselves.
But we have been surprised howstrong a performance can be achieved just with thesesimple heuristics.
Our performance on the MUC-6Coreference task was a recall of 59% and a precisionof 72%.
These scores placed SRI among the leaders.8 Information Extract ion andDocument  RetrievalAs part of Tipster II.V, we are engaged in a jointeffort with the University of Massachusetts o deter-mine ways in which information extraction technol-ogy can improve the performance of document re-trieval systems, such as the INQUERY system.
Ini-tially, we are pursuing three investigations.1.
The first is simply to examine a large num-ber of highly ranked false positives for a number ofqueries, and to determine whether information ex-traction techniques can help.
We have done this ona small scale, five texts for one TREC topic.
Thetopic was actual retaliation against terrorists.
Thefalse positives all talked about retaliation againstterrorists, but it was embedded in negative or modalcontexts, such as the following:.
.
.
will not retaliate against he terroristattack .. .. .
.
discussed the possibility of retaliat-ing.. .
.
if we retaliate against errorists .
.
.These are the kinds of features that Basic and Com-plex Phrase Recognition in FASTUS can spot, andthe texts could thereby be rejected.2.
We have already developed an information ex-traction system for the management succession do-main, and that corresponds to one of the TREC top-ics.
We will run INQUERY on that topic and thenrun the MUC-6 FASTUS system on the 100 textsthat INQUERY ranks most highly.
We can thendetermine whether there is any criterion definablein terms of the events extracted that can improveon INQUERY's ranking.
This will lead to the ques-tion of how much information extraction domain de-velopment is necessary for how much correspondingdocument retrieval improvement.2073.
We have a moderately well developed mod-ule for coreference resolution.
Can this be used toimprove INQUERY's performance?
The idea is toapply FASTUS processing, up through coreferenceresolution, to all the documents in the corpus.
Wewould then use the resulting coreference chains toincrease the richness of concepts in the text.
Forexample, consider two documents that each men-tion IBM once.
The first is about IBM and containsnumerous ubsequent references to "the computercompany" and "they".
The second mentions IBMonly in the context of IBM-compatible peripheralsand is concerned with something else entirely.
Hav-ing every reference to IBM count as a mention ofIBM will result in the first document having a muchhigher score than the second.
This method couldhelp in both directions.
If the topic concerns IBM,references to the computer company will increase thescore.
If the topic concerns computer companies, ref-erences to IBM will increase the score.9 ConclusionUnder the auspices of the Tipster II program, wehave developed in FASTUS a mature, effective, ef-ficient, robust information extraction system.
Wehave made it substantially easier to use in newdomains by implementing the FastSpec declarativespecification language and the compile-time trans-formations, and we believe our work on adaptingrules from examples will make the system yet easierto use in new domains.We have integrated the system into the develop-ing uniform, modular Tipster architecture.In our view the principal current problems arethe need to handle broader domains and applica-tions, the need to continue to make new domainseasier to implement, and the need to use the tech-nology in a wide variety of new applications.Tyson, 1993.
"The SRI MUC-5 JV-FASTUS In-formation Extraction System", Proceedings, FifthMessage Understanding Conference (MUC-5),Baltimore, Maryland, August 1993.\[2\] Hobbs, Jerry R., 1978, "Resolving PronounReferences", Lingua, Vol.
44, pp.
311-338.
Alsoin Readings in Natural Language Processing, B.Grosz, K. Sparck-Jones, and B. Webber, editors,pp.
339-352, Morgan Kaufmann Publishers, LosAltos, California.\[3\] Hobbs, Jerry R., Douglas E. Appelt, John Bear,David Israel, and Mabry Tyson, 1992.
"FAS-TUS: A System for Extracting Information fromNatural-Language Text", SKI Technical Note519, SRI International, Menlo Park, California,November 1992.\[4\] Kameyama, Megumi, 1986.
"A Property-sharingConstraint in Centering", in Proceedings, 24thAnnual Meeting of the Association for Compu-tationM Linguistics, New York, NY, pp.
200-206.AcknowledgmentsThe research described here was funded by the De-fense Advanced Research Projects Agency underOffice of Research and Development contract 94-F157700-000.References\[1\] Appelt, Douglas E., Jerry R. Hobbs, John Bear,David Israel, Megumi Kameyama, and Mabry208
