Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 41?44,Sydney, July 2006. c?2006 Association for Computational LinguisticsComputational Analysis of Move Structures in Academic AbstractsJien-Chen Wu1   Yu-Chia Chang1   Hsien-Chin Liou2   Jason S. Chang1CS1 and FLL2, National Tsing Hua Univ.
{d928322,d948353}@oz.nthu.edu.tw, hcliu@mx.nthu.edu.tw,jason.jschang@gmail.comAbstractThis paper introduces a method forcomputational analysis of movestructures in abstracts of research articles.In our approach, sentences in a givenabstract are analyzed and labeled with aspecific move in light of variousrhetorical functions.
The method involvesautomatically gathering a large numberof abstracts from the Web and building alanguage model of abstract moves.
Wealso present a prototype concordancer,CARE, which exploits the move-taggedabstracts for digital learning.
This systemprovides a promising approach to Web-based computer-assisted academicwriting.1 IntroductionIn recent years, with the rapid development ofglobalization, English for Academic Purposeshas drawn researchers' attention and become themainstream of English for Specific Purposes,particularly in the field of English of AcademicWriting (EAW).
EAW deals mainly with genres,including research articles (RAs), reviews,experimental reports, and other types ofacademic writing.
RAs play the most importantrole of offering researchers the access to activelyparticipating in the academic and discoursecommunity and sharing academic researchinformation with one another.Abstracts are constantly regarded as the firstpart of RAs and few scholarly RAs go without anabstract.
?A well-prepared abstract enablesreaders to identify the basic content of adocument quickly and accurately.?
(AmericanNational Standards Institute, 1979) Therefore,RAs' abstracts are equally important to writersand readers.Recent research on abstract requires manuallyanalysis, which is time-consuming and labor-intensive.
Moreover, with the rapid developmentof science and technology, learners areincreasingly engaged in self-paced learning in adigital environment.
Our study, therefore,attempts to investigate ways of automaticallyanalyzing the move structure of English RAs?abstracts and develops an online learning system,CARE (Concordancer for Academic wRiting inEnglish).
It is expected that the automaticanalytical tool for move structures will facilitatenon-native speakers (NNS) or novice writers tobe aware of appropriate move structures andinternalize relevant knowledge to improve theirwriting.2 Macrostructure of Information inRAsSwales (1990) presented a simple and succinctpicture of the organizational pattern for a RA?the IMRD structure (Introduction, Methods,Results, and Discussion).
Additionally Swales(1981, 1990) introduced the theory of genreanalysis of a RA and a four-move scheme, whichwas later refined as the "Create a ResearchSpace" (CARS) model for analyzing a RA?sintroduction section.Even though Swales seemed to haveoverlooked the abstract section, in which he didnot propose any move analysis, he himselfplainly realized ?abstracts continue to remain aneglected field among discourse analysts?
(Swales, 1990, p. 181).
Salager-Meyer (1992)also stated, ?Abstracts play such a pivotal role inany professional reading?
(p. 94).
Seeminglyresearchers have perceived this view, so researchhas been expanded to concentrate on the abstractin recent years.Anthony (2003) further pointed out, ?researchhas shown that the study of rhetoricalorganization or structure of texts is particularlyuseful in the technical reading and writingclassroom?
(p. 185).
Therefore, he utilizedcomputational means to create a system, Mover,which could offer move analysis to assistabstract writing and reading.3 CAREOur system focuses on automaticallycomputational analysis of move structures (i.e.41Background, Purpose, Method, Result, andConclusion) in RA abstracts.
In particular, weinvestigate the feasibility of using a fewmanually labeled data as seeds to train a Markovmodel and to automatically acquire move-collocation relationships based on a large numberof unlabeled data.
These relationships are thenused to analyze the rhetorical structure ofabstracts.
It is important that only a smallnumber of manually labeled data are requiredwhile much of move tagging knowledge islearned from unlabeled data.
We attempt toidentify which rhetorical move is correspondentto a sentence in a given abstract by using features(e.g.
collocations in the sentence).
Our learningprocess is shown as follows:(1)Automatically collect abstracts from the Web fortraining(2)Manually label each sentence in a small set of givenabstracts(3)Automatically extract collocations from all abstracts(4)Manually label one move for each distinct collocation(5)Automatically expand collocations indicative of eachmove(6)Develop a hidden Markov model for move taggingFigure 1: Processes used to learn collocationclassifiers3.1 Collecting Training DataIn the first four processes, we collected datathrough a search engine to build the abstractcorpus A.
Three specialists in computer sciencetagged a small set of the qualified abstracts basedon our coding scheme of moves.
Meanwhile, weextracted the collocations (Jian et al, 2004) fromthe abstract corpus, and labeled these extractedcollocations with the same coding scheme.3.2 Automatically Expanding Collocationsfor MovesTo balance the distribution in the move-taggedcollocation (MTC), we expand the collocation forcertain moves in this stage.
We use the one-move-per-collocation constraint to bootstrap,which mainly hinges on the feature redundancyof the given data, a situation where there is oftenevidence to indicate that a given should beannotated with a certain move.
That is, given onecollocation ci is tagged with move mi, allsentences S containing collocation ci will betagged with mi as well; meanwhile, the othercollocations in S are thus all tagged with mi.
Forexample:Step 1.
The collocation ?paper address?extracted from corpus A is labeled with the ?P?move.
Then we use it to label other untaggedsentences US (e.g.
Examples (1) through (2))containing ?paper address?
as ?P?
in A.
As aresult, these US become tagged sentences TSwith ?P?
move.
(1)This paper addresses the state explosion problem inautomata based ltl model checking.
//P//(2)This paper addresses the problem of fitting mixturedensities to multivariate binned and truncated data.
//P//Step 2.
We then look for other features (e.g.
thecollocation, ?address problem?)
that occur in TSof A to discover new evidences of a ?P?
move(e.g.
Examples (3) through (4)).
(3)This paper addresses the state explosion problem inautomata based ltl model checking.
(4)This paper addresses the problem of fitting mixturedensities to multivariate binned and truncated data.Step 3.
Subsequently, the feature ?addressproblem?
can be further exploited to tagsentences which realize the ?P?
move but do notcontain the collocation ?paper address?, thusgradually expanding the scope of the annotationsto A.
For example, in the second iteration,Example (5) and (6) can be automatically taggedas indicating the ?P?
move.
(5)In this paper we address the problem of queryanswering using views for non-recursive data logqueries embedded in a Description Logicsknowledge base.
//P//(6)We address the problem of learning robustplans for robot navigation by observingparticular robot behaviors.
//P//From these examples ((5) and (6)), we canextend to another feature ?we address?, whichcan be tagged as ?P?
move as well.
Thebootstrapping processes can be repeated until nonew feature with high enough frequency is found(a sample of collocation expanded list is shownin Table1).Type Collocation Move Count ofCollocationwith mjTotal ofCollocationOccurrencesNV we present P 3,441 3,668NV we show R 1,985 2,069NV we propose P 1,722 1,787NV we describe P 1,505 1,583?
?
?
?
?Table 1: The sample of the expanded collocationlist423.3 Building a HMM for Move TaggingThe move sequence probability P(ti+1?
ti) isgiven as the following description:We are given a corpus of unlabeled abstracts A= {A1,?, AN}.
We are also given a small labeledsubset S = {L1,?, Lk} of A, where each abstractLi consists of a sequence of sentence and move{t1, t2,?, tk}.
The moves ti take out of a valuefrom a set of possible move M = {m1,m2,?,mn}.Then 11( | )( | )( )i ii iiN t tP t tN t++?
?= ?
??
?According to the bi-gram move sequencescore (shown in Table 2), we can see movesequences follow a certain schematic pattern.
Forinstance, the ?B?
move is usually directlyfollowed by the ?P?
move or ?B?
move, but notby the ?M?
move.
Also rarely will a ?P?
moveoccur before a ?B?
move.
Furthermore, anabstract seldom have a move sequence wherein?P?
move directly followed by the ?R?
move,which tends to be a bad move structure.
In sum,the move progression generally follows thesequence of "B-P-M-R-C".Table 2: The score of bi-gram move sequence(Note that ?$?
denotes the beginning or theending of a given abstract.
)Finally, we synchronize move sequence andone-move-per-collocation probabilities to train alanguage model to automatically learn therelationship between those extracted linguisticfeatures based on a large number of unlabeleddata.
Meanwhile, we set some parameters of theproposed model, such as, the threshold of thenumber of collocation occurring in a givenabstract, the weight of move sequence andcollocation and smoothing.
Based on theseparameters, we implement the Hidden MarkovModel (HMM).
The algorithm is described as thefollowing:1 1 1 1 1( ,...., ) ( ) ( | ) ( | ) ( | )n i i i ip s s p t p s t p t t p s t?= ?The moves ti take out of a value from a set ofpossible moves M={m1, m2, ?., mk} (Thefollowing parameters ?1 and ?2 will bedetermined based on some heuristics).
( | )i i ip S t m== ?1 if Si contains a collocation in MTCji j== ?2 if Si contains a collocation in MTCjbut i j?=1kif Si does not contain a collocation MTCjThe optimal move sequence t* is1 21 2 1, ,...,( *, *,..., *) ( ,..., | ,..., )arg maxnn n i nt t tt t t p s s t t=In summary, at the beginning of training time,we use a few human move-tagged sentences asseed data.
Then, collocation-to-move and move-to-move probabilities are employed to build theHMM.
This probabilistic model derived at thetraining stage will be applied at run time.4 EvaluationIn terms of the training data, we retrievedabstracts from the search engine, Citeseer; acorpus of 20,306 abstracts (95,960 sentences)was generated.
Also 106 abstracts composed of709 sentences were manually move-tagged byfour informants.
Meanwhile, we extracted 72,708collocation types and manually tagged 317collocations with moves.At run time, 115 abstracts containing 684sentences were prepared to be the training data.We then used our proposed HMM to performsome experimentation with the different valuesof parameters: the frequency of collocation types,the number of sentences with collocation in eachabstract, move sequence score and collocationscore.4.1 Performance of CAREWe investigated how well the HMM modelperformed the task of automatic move taggingunder different values of parameters.
Theparameters involved included the weight oftransitional probability function, the number ofsentences in an abstract, the minimal number ofinstance for the applicable collocations.
Figure 2indicates the best precision of 80.54% when 627sentences were qualified with the set of variousMove ti Move ti+1 - log P (ti+1|ti)$ B 0.7802$ P 0.6131B B 0.9029B M 3.6109B P 0.5664C $ 0.0000M $ 4.4998M C 1.9349M M 0.7386M R 1.0033P M 0.4055P P 1.1431P R 4.2341R $ 0.9410R C 0.8232R R 1.767743parameters, including 0.7 as the weight oftransitional probability function and a frequencythreshold of 18 for a collocation to be applicable,and the minimally two sentences containing anapplicable collocation.
Although it is importantto have many collocations, it is crucial that weset an appropriate frequency threshold ofcollocation so as not to include unreliablecollocation and lower the precision rate.Figure2: The results of tagging performance withdifferent setting of weight and threshold forapplicable collocations (Note that C_T denotesthe frequency threshold of collocation)5 System InterfaceThe goal of the CARE System is to allow alearner to look for instances of sentences labeledwith moves.
For this purpose, the system isdeveloped with three text boxes for learners toenter queries in English (as shown in Figure3.):?
Single word query (i.e.
directly input oneword to query)?
Multi-word query (i.e.
enter the resultshow to find citations that contain thethree words, ?the?, ?paper?
and ?show?and all the derivatives)?
Corpus selection (i.e.
learners can focus ona corpus in a specific domain)Once a query is submitted, CARE displays theresults in returned Web pages.
Each resultconsists of a sentence with its move annotation.The words matching the query are highlighted.Figure 3: The sample of searching result with thephrase ?the result show?6 ConclusionIn this paper, we have presented a method forcomputational analysis of move structures inRAs' abstracts and addressed its pedagogicalapplications.
The method involves learning theinter-move relationships, and some labeling ruleswe proposed.
We used a large number ofabstracts automatically acquired from the Webfor training, and exploited the HMM to tagsentences with the move of a given abstract.Evaluation shows that the proposed methodoutperforms previous work with higher precision.Using the processed result, we built a prototypeconcordance, CARE, enriched with words,phrases and moves.
It is expected that NNS canbenefit from such a system in learning how towrite an abstract for a research article.ReferencesAnthony, L. and Lashkia, G. V. 2003.
Mover: Amachine learning tool to assist in the reading andwriting of technical papers.
IEEE Trans.
Prof.Communication, 46:185-193.American National Standards Institute.
1979.American national standard for writing abstracts.ANSI Z39, 14-1979.
New York: Author.Jian, J. Y., Chang, Y. C., and Chang, J. S. 2004.TANGO: Bilingual Collocational Concordancer,Post & demo in ACL 2004, Barcelona.Salager-Meyer, F. S. 1992.
A text-type and moveanalysis study of verb tense and modalitydistribution in medical English abstracts.
Englishfor Specific Purposes, 11:93-113.Swales, J.M.
1981.
Aspects of article introductions.Birmingham, UK: The University of Aston,Language Studies Unit.Swales, J.M.
1990.
Genre analysis: English inAcademic and Research Settings.
CambridgeUniversity Press.44
