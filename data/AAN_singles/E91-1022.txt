Generating Sentences from Different PerspectivesLee Fedder,The Computer  Laboratory,University of Cambridge,Pembroke Street,Cambr idge CB2 3QG, England.If@uk.ac.cam.clKeywords : Generat ion,  Natural  Language interfaces.AbstractCertain pairs or groups of sentences appear tobe semantically distinct, yet specify the sameunderlying state of affairs, from different per-spectives.
This leads to questions about whatthat underlying state of affairs might be, and,for generation, how and why the alternative x-pressions might be produced.
This paper looksat how such sentences may be generated in aNatural Language interface to a database sys-tem.I n t roduct ionThe following sentences would have a differentsemantics if parsed, yet they seem to specify thesame state of affairs at some level of represen-tation.la.
I can stay until 5.lb.
I must leave by 5.For generation, we ought to be able to pro-duce either.
McDonald comments on these sen-tences :-"What mutually known cognitive structuredo we recognise from them that would showthem to be two sides of the same coin?
"(McDonald 1988)This paper describes a language generationsystem which is designed as the output com-ponent of a database interface, and is capa-ble of producing similar synonymous sentences.The architecture relies on a two level semanticrepresentation: one describes data in the sys-tem's application database, and plays the role ofMcDonald's "mutually known cognitive struc-ture"; the other describes the semantics of sen-tences of Natural Language, and the primitivescorrespond to specific entries in the lexicon.
In-formation to be communicated is initially ex-pressed in the application level semantics, andis be mapped to the language level semanticsas part of the generation process.
Alternativessimilar to la and lb arise during this mapping,and represent a complexity inherent in languagewhich did not exist in the original data:- theyare a property of the description.Application level information is describedby linking it with an event or state (from nowon the term "event" will cover both these), forwhich it provides some parameter.
Thus, theorigin of a flight could be described by sayingthat the plane "flies from" the origin.
The map-ping process exploits a "domain model" whichhas two parts.
The first lays out how non-temporal information is related to domain events.The second describes the temporal character-istics these events using an ontology which isrich enough to capture the temporal semanticsof English expressions.
Temporal information- 125  -from the application is described by first ex-pressing it in a way that relates it to times inthe model, and by then attempting to add it tothe description of the event which is currentlyactive.
The alternatives arise when more thanone event can be used.The temporal ontology is based on a re-cent theory of temporal semantics developedby Moens and Steedman (1988).
This allowsa modular representation f the semantics oftemporal adverbials like "until" and "by", andalso aids in the generation of tense and aspect.This system looks at the mechanics of howthe alternatives can be generated from the ini-tial data, but we will have less to say aboutchoosing between them.
Some simple choice cri-teria are presented, although these do not prop-erly address the issue of what perspective is andhow it can be quantified and used.
We point toproposals from McDonald (1991) which seemmore promising on this front.In more general terms, this work addressesjust one of the many issues involved in map-ping between Natural Language descriptions ofdata and the more restricted representation aapplication database affords.Overv iewThe generation system has been designed as theoutput stage of an airline information system.The application database holds timetabling datasuch as plane origins and destinations, depar-ture and arrival times and so on.
Input tothe generator is a semantic form compiled fromdatabase relations.
For example :-DEST(BA123,ROME)AARR-TIME(BA i23,2PM)This is an expression of the application levelsemantics, and states that the destination offlight BA123 is Rome, and that the arrival timeis 2 p.m. One of the possible surface level se-mantic descriptions of this would be is :-arrive(BA 123,E)Ain(E,ROME)Aat(E,2PM)Once the information is in this form, it canbe handed to a grammatical encoder for pro-duction of the surface form.
The final sentencefor this example would be :-BA123 arrived in Rome at 2 p.m.In this example, the input data has beendescribed as a point event occurring at a giventime.
As we will see, other descriptions couldview it in other ways, such as a state ending atthat time, or as a state beginning at that time.The Domain ModelSo, database relations may be described by find-ing events in a model of the domain to whichthey correspond.
This assumes, of course, thatthe hearer has a similar model of the domain.Figure 1 (overleaf) shows the model for an air-plane flight, giving the various events and states.It shows an agent, A, flying from an origin O, toa destination at D. The state which can be de-scribed as "A be at 0" or "A not leave O" leadson to an event of "A leave 0" which initiatesa state described as "A not arrive at D", andso on.
The causal relations between the eventsare included in the model, and used in the gen-eration of tense and aspect, but their use is notdescribed in this paper.The model is represented declaratively in aProlog style database.
For each event here aretwo sorts of entry.
The first sort record hownon-temporal input-data can be translated toevent based logical forms.
These entries link upthe data parameters with the case roles of theevent.
For example :-trans(@E,@Input-sem,@Ling-sem)The "@" is used here to denote a variable.The first argument is the event index, the sec-ond is the semantic form of the input data, andthe third is the language level semantics de-scribing the event.
An example is :-trans(e5,DEST(@A,@D),arrive(e5,@A)Aat (e5,@O))- 126  -Figure I - Domain Model for a FlightX leave AlXbe aZ A IX not leave AX fly from A zoBX not arrive as BX arrive at BX be at BTTMRThe language level event here is that of "ar-riving", and is recorded using a Davidsonia.nstyle semantics (Davidson 1967).The second sort of entry records the tempo-ral characteristics of the event, using a temporMcalculus developed by Moens (1987), and basedon Kowalski's event logic (1986).
Each eventis classified according to its temporal charac-teristics, and entries in the calculus are madeaccordingly.
The "arrive" event is classified asa culminat ion type of event, for which, the en-try is :-occur(cul(e5),T6)This characterises the event e5 as a punctualevent represented by the single marker "cul(e5)"which occurs at the time T6.
The model is aprototypical one for the events of the domain,and actual times are unknown.
Instead, tetnpo-ral information is recorded using temporal in-dices, of which "T6" is an example.
A processsuch as "fly" is represented by two entries, onefor the start point, and one for the end.The model includes a record of the relativetimes of the indices, and actual times may beincluded if they become known.
The model alsoincludes causal relations between events, whichcan be used in the generation of tense and as-pect.
This model has been identified by Moensas capable of capturing the semantics of Englishtemporal expressions more fully thau other for-malisms, such McCarthy and Hayes (1969), orAllen (1984).Semantics of Temporal Adver-bialsWith this sort of model, the semantics of adver-bials may be defined in modular fashion.
For in-stance, "until" is defined as describing the timeat the end of a process type of event.
So, if aprocess uch as "Jim ran" ends at the time "2p.m.
", this would be described as "Jim ran until2 p.m.".
Similar interpretations may be definedfor "for", "in", "since", "by", "later" and so on.An ExampleAn example will show how several different de-scriptions of the same initial data may be pro-- 127  -duced using this machinery.
Beginning with theinput data structure shown previously in theoverview, the first step is to split it into tempo-ral and non-temporal data, which is done witha simple set of rewriting rules :-Temp Data-  ARR-TIME(BA123,2PM)Other Data-  DEST(BA123,ROME)This is mapped onto the model by attachingthe temporal data to one (or more if necessary)of the temporal indices, and by inserting thenon-temporal data into a "trans" predicate :-Temp Data-  =(T6,2PM)Other Data - trans(~E,DEST(BA123,ROME),~Ling-sem)A duration, such as the flight time could beattached to two indices using "span(T5,T6,Flight-time)".Instantiating the "trans" predicate in themodel picks out an event that describes thedata.
Backtracking allows all possibilities to beproduced.
In the current model, this picks outfour events, giving the linguistic semantics :-fly(e3,BA123) A to(e3,ROME)not(arrive(e4,BA123) ^ at(e4,ROME))arrive(e5,BA123) ^ at(e5,ROME)be(e6,BA123) ^ at(e6,ROME)Of these, e3 is characterised as a culminat-ing process (like a process, but with a definiteend point) ending at T6, e4 is a state ending atT6, e5 is a culmination occurring at T6, and e6is a state beginning at T6.Next, we must describe the temporal data"=(T6,2PM)' .
A set of rules looks at the eventcharacteristics, and the data to be expressed,to see which adverb is appropriate.
For e4, the"until" adverb is chosen, and added to the se-mantic form to give :-not(arrive(e4,BA123) A at(e4,ROME))A until(e4,2PM)Similarly, for e5, the adverbs "at" or "by"can be used, and for e6 "by" or "since".
That"since" is only used if conditions for the perfectalso hold.
Insufficient space prevents discussionof the details here.
No adverb is available todescribe the end time of a culminating process,and so no phrase can be built using e3.The successful cases could eventually be re-alised as :-2a.
BA123 didn't arrive at Rome until 2 p.m.2b.
BA123 arrived at Rome at 2 p.m.2c.
BA123 arrived at Rome by 2 p.m.2d.
BA123 was at Rome by 2 p.m.If conditions for using the perfect held, thelast of these could be replaced by :-2e.
BA123 has been at Rome since 2 p.m.Choosing Between The Alter-nativesFor the question answering system, several cri-teria are being investigated for choosing betweenthe alternatives.
The first is a simple mirroringof the phrasing of the question, the syntacticand semantic analysis of the question being re-tained in the discourse model.
For example :-3a.
User: When will BA123 be at Rome?3b.
System: It will be at Rome by 2 p.m.The main verb of the question is "be" witha subject of "BA123".
One of the possible de-scriptions uses the same verb and subject (al-beit pronominalised), and would be the chosenalternative.
This criteria is used when the gen-erated sentence is simply supplying new infor-mation which the user has requested.A second criteria seems to be useful whenthe answer violates a presupposition detectedin the query.
For example, take the question :-- 128  -4a.
User: Will BA123 be at Rome by noon?This includes the presupposition that BA123arrives at noon.
If it doesn't, the best formfor the answer seems to depend on the actualtime of arrival.4b.
System: No, it doesn't arrive here until2 p.m.4c.
System: No, it will be here by 11 a.m.Construction 4b would be chosen if the pre-supposed time lay before the arrival time, andthus within the timespan covered by the state"not arrive".
On the other hand, construction4c would be chosen if the pre-supposed timelay after the actual time, placing it within thetimespan covered by the state "be at Rome".Finally, the alternatives could be useful topromote cohesion in multi sentence explanationsof the following sort :-5a.
BA123 won't be here until noon.
It wasdelayed at Paris.5b.
BA123 arrives at noon.
It will taxi to Ter-minal 3.The second sentence is an explanation orelaboration of the first.
In the first example,the explanation refers to an event located inthe time period before the arrival, and in thesecond, it is more closely associated with thearrival time.
The description of the arrival timeis chosen to reflect this.Related work and DiscussionIn a description of the process of language givenby Levelt (1989), a module called "micro-planning"is included.
This module comes after the con-tent of the output has been decided on, andbefore grammatical encoding.
Micro-planningconsists of choosing the language related seman-tic primitives used for describing a data struc-ture which is not linguistically based.
Leveltnotes that, because of the nature of language,this process will be forced to make choices ofperspective.
Much work on generation has as-sumed that the input semantic form is alreadyin some sort of "languagese" (see, for exampleMcDonald 1983, McKeown 1985), but the pro-cessing described in this paper would be part ofthe micro-planner.There are several precedents for the use oftwo level semantic descriptions for generation.The first, perhaps, was HAM-ANS (Wahlster1983),in which the generator translated fromthe language DEEP to the language SURF.
Morerecently there has been the TENDUM system(Bunt 1987), using the model theoretic logicallanguages EL/F and EL/R, and others (Kern-pen 1987, De Roeck 1986).
These systems trans-lated between the levels, but did not address theissues of alternative mappings.However, this question has been investigatedby McDonald (1991).
He has proposed a solu-tion in which the data structures of the appli-cation program (a diary manager) are based onprimitives such as "transition-at-4PM".
Theseprimitives are then linked to sets of lexemessuch as \[stay, until\] and \[leave,at\].
One of thesesets is selected and included in evolving textstructure.
This doesn't seem to take accountof the nature of the the events described by"leave" and "stay", or the temporal semanticsinvolved in using adverbials like "at" and "un-til".McDonald does, however, address the im-portant issue of the criteria for choosing be-tween alternatives.
The choice of perspective isintimately bound up with the reasoning of themanager, which can use knowledge about inten-tions and surrounding events to decide whichversion of the description is the most appropri-ate.
This sort of approach seems to be neces-sary for the development ofmore comprehensivechoice criteria.ConclusionThis paper describes a generation system whichis capable of generating A range of Natural Lan-guage descriptions of the output of a databaseenquiry program.
The system uses a two levelmodel of semantics.
The possibility of alterna-tive descriptions arises from the mapping be-?
.
129tween the two levels.
Some simple criteria areused to choose the alternative which fits bestinto the dialogue context.AcknowledgementsThe author is supported by the Science and En-gineering Research Council, and by Logica UK.I would like to thanks the many colleagues whohave provided support and encouragement, es-pecially Steve Pulman, Julia Galliers, RichardCrouch, Ann Copestake, Nick Youd, Victor Poz-nanski, Arnold Smith and Derek Bridge.References\[1\] Allen, J.
1984.
Towards a general theory ofaction and time.
Artificial Intelligence , 23,123-154.\[2\] Bunt, H. 1987.
Utterance generation fromsemantic representations augmented withpragmatic information.
In Natural LanguageGeneration, by G. Kempen (Ed.
), MartinusNijhoff.\[3\] Davidson, D. 1967.
The logical form of ac-tion sentences.
In Rescher, N.
(ed.).
The logicof Decision and Action.
University of Pitts-burgh press.\[4\] De Roeck, A., and B. Lowden.
1986.
Gen-erating English paraphrases from formal re-lational calculus expressions.
Coling proceed-ings.\[5\] Levelt, W. 1989.
Speaking.
MIT press.\[6\] McCarthy, J. and Hayes, P. J.
1969.
Somephilosophical problems from the standpointof artificial intelligence.
In Meltzer, B. andMichie, D.
(eds.)
Machine Intelligence, Vol-ume 4, pp463-502.
Edinburgh UniversityPress.\[7\] McDonald, David D. 1983.
Natural Lan-guage Generation as a Computational Prob-lem: an Introduction.
In ComputationalModels of Discourse.
Brady and Berwick(Ed).\[8\] McDonald, D. 1988.
On the place of wordsin the generation process.
Abstract presentedto the Catalina workshop on generation.\[9\] McDonald, D. 1991.
On the place of wordsin the generation process.
In Natural Lan-guage Generation in Artificial Intelligenceand Computational Linguistics, by C. Paris,W.
Swartout, and W. Mann (Eds.)
Kluwer,Dordrecht.\[10\] McKeown, K. 1985.
Text generation.
Cam-bridge University Press.\[11\] Moens, M. Tense, Aspect and TemporalReference.
PhD thesis, Centre for CognitiveScience, Edinburgh University.\[12\] Moens, M. and Steedman M. 1988.
Tem-poral ontology and temporal reference.
Com-putational Linguistics, Vol.
14 No.
2.\[13\] Wahlster, Jameson, Beseman and Mar-burger.
1983.
Over-Answering yes-no ques-tions.
IJCAI, Karlsruhe.- 130  -
