Error-tolerant Tree MatchingKemal  Of lazerDepar tment  of Computer  Eng ineer ing  and  In fo rmat ion  Sc ience,B i lkent  Un ivers i ty ,  Ankara ,  TR-06533,  ~1 urkeyko@cs, b ilkent, edu.
t rAbst ractThis paper presents an efficient algo-r ithm for retrieving from a database oftrees, all trees that match a given querytree appro,imately, that is, within a cer-tain error tolerance.
It has natural lan-guage processing applications in search-ing for matches in example-based trans-lation systems, and retrieval from lexi-cal databases containing entries of com-plex feature structures.
The algorithmhas been implemented on SparcStations,and for large randomly generated syn-thetic tree databases (some having tensof thousands of trees) it can associativelysearch \[or trees with a small error, in amatter of tenths of a second to few sec-onds.1 I n t roduct ionRecent approaches in machine translation knownas example-based translation rely on searching adatabase of previous translations of sentences orfragments of sentences, and composing a trans-lation from the translations of any matching ex-amples (Sato and Nagao, 1!
)90; Nirenburg, Bealeand l)omasnhev, 1994).
The example databasemay consist, of paired text fragments, or trees asin Sat() and Nagao (1990).
Most often, exactmatches for new sentences or fragments will notbe in the database, and one has to consider exam-pies that are "similar" to the sentence or fragmentin question.
This involves associatively searchingthrough the database, tbr trees that are "close" tothe query tree.
This paper addresses the compu-tational problem o\[ retrieving trees that are closeto a given query tree in terms of a certain distancemetric.The paper first presents the approximate treematching problem in an abstract setting andpresents an algorithm for approximate associativetree matching.
The Mgorithm relies on lineariz-ing the trees and then representing the completedatabase of trees as a t r ie  structure which canbe efficiently searched.
The problem then reducesto sequence correction problem akin to standardspelling correction problem.
The trie is then usedwith an approximate finite state recognition al-gorithm close to a query tree.
Following some ex-perimental results from a number of synthetic treedatabases, the paper ends with conclusions.2 Approx imate  Tree  Match ingIn this paper we consider the problem of searchingin a database of trees, all trees that are "close"to a given query tree, where closeness is definedin terms of an error metric.
The trees that weconsider have labeled terminal and non-terminalnodes.
We assume that all immediate children ofa given node have unique labels, and that a totalordering on these labels is defined.
We considertwo trees close if we can?
add/delete a small number of leaves to/ fromone of the trees, and/or?
change the label of a small number of leavesin one of the treesto get the second tree.
A pair of such "close" treesis depicted in Fignre 1.2.1 Linearization of treesBefore proceeding any fllrther we would like todefine the terminology we will be using in the foblowing sections: We identify each leaf node in atree with an ordered vertex list (re, vl, v2, .
.
.
,  vd)where each vi is the label of a vertex from the rootv0 to the leaf Vd at depth d, and :{'or i > 0, vi is theparent of vi+ L. A tree with n leaves is representedby a vertex list sequence.
VLS  =.V i ,V 'e , .
.
.
,?,where each V~.
= v3o, v{, v~, v~, .
?., va,;, correspondsto a vertex list for a leaf at level dj.
This se-quence is constructed by taking into account thetotal order on the labels at every level, that is,17i is lexico.qraphically less than Vi+l, based on thetotal ordering of the vertex labels.
For instance,the first tree in Fignre 1 would be represented bythe vertex list sequence:860SNPI)ct N P VI ~ IA A(I.j N chasedI Iblack catVPNPDet N Pthe A<I.j NI Ilittle mousej ~ - .
.N \]) V P\])ct NI )I \] V NPA IN I J ~l ;,t;<: / l)ct N Pcat I / /~-the Adj -NI Ibrown \]IIO/ISCI,'igure 1: Trees tha.t ;I.Fe cl >S<; to eac.h other.
((S,NP,Det,a),(S,NP,NP,Adj,black),(S,NP,NP,N,cat),(S,VP,NP,Det,the),(S,VP,NP,NP,Adj,little),(S,VP,NP,NP,N, mouse),(S,VP,V,chased)assuming the normal lexicogra.phie ordering oni,o(lc na~lles.2.2 Dis tance  between two t reesWe deline the distan<'e 1)etween two trees aeeor(1-ing to the struchrral diJl~,,,'cnces or differences inleaf labels.
We consider an extra or a missing leafa.s a structural  change.
If, however, both treesItave a leaw~s whose vertex lists match in all butthe last (leaf vertex) lat>e\], we.
<:onsi<ler this as adil\[erence in leaf lal>cls.
For instance, in I,'igm'e 2,(ihere is extra, leaf in tree (I)) in <,Oml)a.rison to thetree in (a), while tree (c) has a leaf label diffc,,-ence.
We a.sso<:iate the f'ollowing costs associatedwith these <lifl'erences:?
If I>oth trees have a. lea\[' whose verl;ex listmatches in all but the last (leaf w.'l:tex) ta--bel, we assign a label <lill~rence rror of C.?
\[\[' a certa,in leaf is missing in one of" the treesbut exists in the other one, then we assign a<:ost S for this a structural dilI'erence.We <'urrently treat all structural or leaf label <\]if:-fere,<:es as incurring a. cost that is indel>endent ofthe tree level at whi<'h \];he difference takes i)lacc.
;tb e;-~ c kIXO0h (1 e?
~ C kIX(h)&\]) Cjq--....a f kIX0)Figure 2: Structural and lea\[ label <lifl'erences he=tween t rees .If, however, ditl~rences that ar0.
closer to the rootof the tree are considered to b(' more serious thandifferences further away \[\]:on~ the root, it is \]>os--sible to mo<lify the formulation to take this into~tCCOtl nt .2,3 Conw'x t ing  a set o f  t rees  in to  a the.A h'ee database l)  <:onsists of a set o\[' trees'/~, "1~, ?
.
.
,  5/~., ea.ch "1) being a vertex list sequ<mcefor a tree.
Once we convert all the trees to a linearform, we haw: a set; o\[" vertex list sequences.
Wecan convert his set into a trie data structure.
Thistrie will compress ;-'~l\]y l>ossible redundancies in theprefixes of the vertex list; sequences to achieve a.certain ('ompa<'tion which hell>s during searching.
\]For insta.nce, the three trees in F\[gttre 2 canI>e re4>resente<l as a trie as shown in Figm'e, 3.The edge labels along the t>ath to a h'af whenconcat<'.nate<l in order gives the vertex list se-quence for a tree, e.g., ( (a ,b ,a ,x ) ,  (a ,b ,c ) ,(a ,b ,k ) ,  (a ,e ) )  repr<;sents he tree (a) il) Fig-ure ~.t Note that i~ is possible to obtain more spa<:c re-duction by aJso sharing any common postflxes of Lhevertex labe\] sequences using a directed acy<:lic graphrepresentation a d not a. trie, but this does not ira-prow:' the execution time.861l a, I ) ,& ,x )b 2 4.b,'1'1 eea  I T ree  cI' l ' ree  bFigure 3: 'l 'rie representat ion  o f  the  3 trees in Fig-ure.
22.4  Er ror - to le rant ,  match ing  in the  t r ieOur concern in this work is not the exact matchof trees but rather approximate match.
Given thevertex list sequence for a query tree, exact matchover the trie can be performed using the stan-dard t;ech niques by fbllowing the edge labeled withnext vertex list until a loft in the trie is reached,~-md the query vertex label sequence is exhausted.For approximate tree matching, we use the error-tolerant approximate tinite-state recognition al-gor ithm (Oflazer, 1996), which tinds all stringswithin a giwm error threshold of some string inthe regular set accepted by the underlying finite-state acceptor.
An adaptat ion of this algorithmwill be briefly summarized here.hh:ror-tolerant matching of vertex list sequencesrequires an errol: inetric for measuring how rnuchtwo such sequences deviate from each other.
Thedistance between two sequences measures the min-imum number of insertions, deletions and leaf la-bel changes that are necessary to convert one treeinto another.
It should be noted that this is dif-ferent fl:om the error metric defined by (Wang elM., 1994).Let Z = Z1, Z.~,..., Zp, denote a generic vertexlist sequence of p vertex lists.
Z\[j\] denotes the ini-tim subsequence of Z up to and including the ju~leaf label.
We will use X (of length rn) to denotethe query vertex list sequence, and Y (of length n)to denote the sequence that is a (possibly pattie.I)candidate vertex list sequence (from (;he databaseof trees).Given two vertex list sequences X and Y,the distance, disffX\[m\], Y\[n\]), computed accord-ing to the recurrence below, gives the minimumnumber of leaf insertions, deletions or lea\[' label(:hai~ges necessary to change one tree to the other.dist(X\[m\], Y\[n\]) = dist (X\ [m-  1\], Y \ [n -  1\])if x,~, = y,,.
( last ver tex  l ists a.re sa.me): ,ti.<x\[.~ - l\], z\[,~ - , \ ] )  + c'if x., a, nd y,~differ only ~tt thelea.f l~tbel= dist(X\[rn - 11, Y\[n\]) + ,'-,'if y,, < x,,(lexicographica.lly)X is missing leaf #,,.= ,ti,~t(X\[,,4, Zb - I\]) +,S'if xm < y~(lexicogra.phica.lly)X has ~n extra lc~ff a: ....Boundary Conditionsdist(X\[O\],Z\[n\]) = ,~.
Sdist(X\[m\],Y\[O\]) : m.,5'For a tree database D and at distance thresholdt > O, we consider a query tree represented by awertex list sequence X\[m\] (not in the database) tomatch the database with an error of t, if the setC : {r \ [ " , \ ] l  Y\[",\] < 10 and distX\[,,~\], Yb\ ] )  -< t}is not empty.2.5 An  a lgor i thm for  approx imate  t reemat  eh ingStandard searching with a trie corresponds totraversing a path starting t}om the start node (o\['the trie), to one of tlle lea\[' nodes (of the trie), sothat the concatenation of the labels on the arcsalong this path matches the input vertex list se-quence.
For error-tolerant matching, one needs tolind all paths from the start node lo one of thefinal nodes, so lhat wh.en lhe labels on the edgesalong a path are concatenated, lhc resulting "verlea;list sequence is within a given dislance lh, rcsholdt, of the query vertex list sequence.This search has to be very fast if apl)roximatematching is to be of any practical use.
This meansthat paths in the trie that can lead to no solutionshave to be pruned so that the search can be lim-ited to a very small percentage of the search space.We need to make sure that any candidate (1)re-fix) vertex list sequence that is generated as thesearch is being p'erfbrmed, does not deviate fromcertain initial subsequences of" the query sequenceby more than the allowed threshold.
To detectsuch cases, we use the notion ol 'a cnl-off distance.The cut-off distance measures the min imum dis-lance between an initial subsequence of the query862sequence sequel:it(% a.nd the (possibly partial) can-(lidate soqtlOll(-(L I,et Y he ;~ l)a.rtial candi(lato se-<,llleric(~ whose lmagth is n, and le, t X be tl/c querysoqll('\[lC(~ O\[ hmgth m.. I,c't l=  ln in ( l ,n , -  LZ/M\])a,,(i ,, = ,~,~?
(,,,, ,+ + \[Z/ iV/ i)  wl, e,:o a4 is ti,(, ((,soof ittsol:tions nnd deloi;ions.
'l'h(~ cut+ol+f distancec,,:d/.s+t(X\[r,,\], +7\[,,\]) is defino(l a.s. .
:d / .~(X \ [ , , .
\ ] ,  r \ [ , , \ ] )  : mh,  d.i.v,(x \[:\], <\[,,\])./<i<.uNote l;hat; ex('ept; at the boulldarios, the iuitialsubscquonces of the query soquence X considorexl,,.,; or , ( ; , ,g t , ,  EWe41 i,o ,o .gt ,  ,, + \[:/A4\].
A,,yinitial sul)scquonce of X shortor tha.tl I ,loods .
,oroIJmn LI/M\] l,~af nodo i(isertions, ;rod nny itiitialstll)string of X loilger tha.n "u ro(ltfires nlore t\[ta.nI-\[I/M\] h',a.f no(h: (\[cletions, to a.t bast  equal Y inIougth, violating the dist;mee constrMnt.Givcu a. vcrl.ex list se, qlw, n(:o X (correspondingto a, ( tuery  l;reo), a lm.rtial ca.ndidate seqllenco Yis geuorat(xl I)y su(:c(~ssively (:ollcaten;~ting labelsa.loug tire ~u'cs as tt:+msitions a, ro tn~t(le, sta.rtingwith l;ho start state.
Wltolmvor wo extcn(t Y go-ing a, long the trio, we chock if the cut-off distmwoof X and the i~artial Y is wi th in  the botu,I  slu'c-ifiod by the threshold /.
If the c , t -o l f  distnllcogoes l)oyoud I, ho throshol(l, the lasl; edgo is Imcl(o<loff' to tim source nodo (in p+u'a,lM with the short-(',hint 0\[' Y)  ~,i(l some other o(Ige is t;ried, l\]a.cl?-tr:-tcMng is t:e(:ursively apl)lie(l when tit('\] semr(:h can.c.1; l)e contimled from tlmt nodo.
If, during tho('c.l)~sl, ruetion of Y, a, tormin;q node (which ma.yor llmy .o t  l)o a, leaf of the trie) is reached with-out viola.tittg l, hc (:utoff (listan(:e co.stmail,t, a,n(Id',:.~t(X\[,,4, Y \ [ , \ ] )  < t at t,i~t poll,,, tti,;,i V is ++tr(+c in t.h(" (l+~ta.l>asc t.hat tt,aJ.chos th(' iNl)Ut (It,oryS(XlUOnCC.
2I)(!noLhig tile nodes of the trio }>y subs('rilfl;e(l (l'S(qo being the inil;ial uode (e.g., top node in Figure3))  a,n(| the  la.bols of tl:lo edges  l)y V, a, nd  denotingby 8(qi, 17) the taodo in IJto t, rie that oiie Ca, ll reach\[\[rOlll l o(l(' qi with edgo la, bol V ((|elloti l lg :,t vortexlist,), wo l)rcsettt, in I,'igurc /I, the a, lgorithut \[Lrgonera, thlg a.ll Y's by a (slightly tnodifiod) dopllh-first probing or l, he trio.
'\['he cru(:ia.\] point ill l;hisa, lgoril, hln is tha, t tile cut-el i  (listauco conil)ut;t,l;ionc;i,o be per\['ortncd very ofticiontly by ui~tintainhig;1 ilia, t r ix  II whhth  is ;i, al i l l ,  \])y It illa.i, r ix  w i th  el-, .
, , , o , , t / / ( i , j )  = d/,~:.
(x\[,:\], Y\[./\]) ( ,) ,t  +.t<i (:i,at.g,1992).
We (:~ttt -tote that the (',OlUt)Ul;~tion or l, heolettic;nt II (i + 1, j q- 1 ) recursJvely de.ponds on only//( i ,  j),  II (i, .7-i-i), 11 ( i+ 1, j)  f,.o,u the earlier do fin i t iou of tlic edit disl,anco (see l,'iguro 5.)
\ ] )ur ingthe dopl, h first, so~u'c,}i ()t' the t('i% ont;rios in cohnnn'n, o1' the lna, tr ix 11 \]ia,vo I;o I)o (ro)contl:)ut;ed , ottiywhen the ('an(li(hd;e sl;rilig is o\[ Ioligth n. \ ] )urh lgImx'kt, rax:king, I, ho entries for the last coititlill are2Nol, e tl,;Lt wc ha, vc to do this chock since we maycoinc to other irreleva.nt, tcrminat nodes during I.he,q(}aYch./ *push  empty cand idate ,  and s tar tnode to  s tar t  search  * /P,t.~h.
(( ' , q0 ))while s tack  not empgybeginl ,op((Y' ,qi))  /*  pop par t ia l  sequence Y'and the  node */fo r  a l l  qj and V such that  6(qi, 'l/) : qabeg in  /*  extend the cand idate  sequence */Y = conc:~tt(Y', V)/ *  u i s  the  cur rent  length  o:17 Y * //* check if g has dev ia ted  too much,i f  not push */i *  .
',a.,Zi.~l(X\['.,.\], Yb\ ] )  -< t then p',t.~h((< q,))/* also see if we are at a filial state */i* ,Z/s~.
(X\[,,,,\], Y\[,,.\]) < : andq,i i s  a te rmina l  node then output  VendendFigure 4: Algoridmi for error-tolerant recognitiono\[' ver tex  lis~ sequences:ii " i},: i)  ,( ' / , .
i  + l).. .
( /+ J , j )  , : ( /+~, /+: l )Figure 5: (k)uqmt;M;iou of the elo.nionts of t,ho IImaJ, rix.disca.rdod, but the entries in prior c ohumls m:o stillvalid.
Thus all enl;ries required by It (i + 1, ,7" -I- 1),except I\[(i, j + \]), axe nlre~dy awLihtble in the ma-trix in cohlmns i - \] a.nd i.
The conaputation ofc'uldisl,(X\[,t,\], Y\[n\] ) invo|vcs ~ loop in whioh theminhntun is colul)uted.
'l'his loop (hldexing alongcoh,m,, .7' + 1) co,np,,tos l l ( i , j  + 1) bcfo,'e it isneeded for the computaiAon ol7 l l ( i  + l , j  + 1).3 Exper in ienta l  Resu l tsW(; hamo cxperinl(;nLed with 3 synthcticly gonera.tod sots of trees with the propeJ'tios given in 'l'+>I)lc 1. lit this l;Mqe, {.tie third cohllilll (label ALl ' )gives the ~tvera.gc rat, to of the vertices at each levelwhich a.ro ra.ndomly soie(;ted as lea\[ vortices in ;ttree.
'\['hc' \['ourth column gives the trl~xinmirl nltni-bet of children that a uon-lea?
node lna.y h~tvo.Tile \[a.st column gives the maxinnnn depth of thetrees in rite, t, d~ttal)~LSO.From I, heso synthetic ,.I,nb'-dm, ses, we ra.ndo\]nlyoxtra.ctod 100 trees arid the,  perturbed thcnlwith ramlom leaf deletions, insertions and la.bolchanges o that l;\]ioy were o\[' some (listmlce l'ron~ ~t863DatabaseNumber |ALP  Max I Maxof ~ Children DepthTreesl,ooo !
1/3 8 I 510,000 \[ 1/2 16 I 5a0,000/1/2 s__L__ATable l: Properties of the synthetic databases ofreestree in the originaJ tree.
We used thresholds t = 2and t = 4, allowing an error of C = 1 for each le~fflabel change and an error of S = 2 for each inser-tion or deletion (see Section 2.2).
We then ran ore'algoridnn on these data sets and obtained perfofmance information.
All runs were performed on aSun SpareStation 20/61 with 128M real memory.The results are presented in '\].
'able 2.
It can beData- \ ]  Thres-base hold1 242 243 24Avg.
\[ Avg.
Avg.I,eaves/ \]Search 'I~'eesQuery Time Found/'\['ree (Msec) Query12.00 65 1.9612.42 81 16.6524.65 990 3.3225.62 1,659 31.5910.45 2,550 13.6310/15 3,492 68.62'Fable 2: Performance results for the approximatetree matching algorithm.seen that the approximate s arch algorithm is veryfast for the set; of synthetic tree d;~tabases that wehave experimented with.
It certainly is also possi-ble that additional space savings can be achievedif directed acyclic graphs can be used to representthe tree database taking into account both com-lnon prefixes and common suffixes of vertex list;sequences.5 AcknowledgmentsThis research was in part funded by a NATO Sci-ence for Stability Phase III Project Grant - TU-LANGUAGE.ReferencesM .W.
Du and S. C. Chang.
\]992.
A model anda fast Mgorithm for multiple errors spelling cor-rection.
Acta lnformatica, 29:281- 302.Sergei Nirenbm:g, Stephen Beale, and ConstantineDomashnev.
1994.
A Full-text l,\]xperiment inExample-based 'l}anslation.
In Proceedings oflhe International Conference on New Methodsin Language Processing, Manchester, UK, Pages78 87.Kemal Oflazer.
1996.
Error-tolerant Finite-stateRecognition with Applications to Morphologi-cal Analysis and Spelling Correction, Compu-tational Linguistics, Vo1:22, No:l.Satoshi Sat() and Makoto Nagao.
1990. rIbwardsMemory-based Translation.
In Proceedings ofCOLING'90 Vol.3, Pages 247 252.Jason Tsong4,i Wang, Kaizhong Zhang, KarpjooJeong, and Dennis Shasha.
1994.
A System \['orApproximate 'Dee Matching.
In IEEI'; 7}'ansac-tions of Knowledge and Data Engineering Vol.6, No.
4, August, Pages 559 570.4 Conc lus ions'l'his paper has presented an algorithm ibr ap-proximate associative tree matching that can beused in example-based machine translation appli-cations.
The algorithm et\[iciently searches in adatabase of trees, all trees that are "(:lose" to agiven query tree.
The algorithm has been ilnple-mented on Sun Sparcstations, and experiments onrather large synthetic tree database indicate thati t ('an perform N)proximate nmt ehes within tenthsof a second to few seconds depending on the sizeot' the.
database and the error that the search isallowed to consider.864
