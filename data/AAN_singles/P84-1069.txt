Grammar Writ ing System (GRADE) of Mu-Machtne Trans lat ion Pro jectand i t s  Character is t icsJun-tcht NAKAMURA.
Jun-tcht TSUJII.
Makoto NAGAODepartment of E lec t r i ca l  EngineeringKyoto Un ivers i tySakyo.
Kyoto.
JapanABSTRACTA powerful grammar wr i t ing  system has beendeveloped.
Thts grammar wrt t tng  system ts ca l ledGRADE (GRAmmar DEscriber).
GRADE allows a grammarwr i te r  to  wr i te  grammars Including analysts,t ransfer ,  and generation using the  same expression.GRADE has powerful grammar wr i t ing  fac i l i ty .
GRADEallows a grammar wr i te r  to control  the process of amachine t rans la t ion .
GRADE also has a funct ion touse grammatical rules wr i t ten  tn a word d ic t ionary .GRADE has been used for  more than a year as thesoftware of the machine t rans la t ion  pro jec t  fromJapanese Into Engltsh.
which ts supported by theJapanese Government and ca l led Nu-proJect.1.
Object ivesVhen we develop a machine t rans la t ionsystem, the intent ion of a grammar wr i te r  should beaccurately stated tn the form of grammatical ru les.Otherwise, a good grammar system cannot beachieved.
A programming language to wr i te  agrammar, which ts composed of a grammar wr i t inglanguage, and a software system to execute t t .
tsnecessary for  the development of a machinet rans la t ion  system (Bottet  82).I f  a grammar wr i t ing  language for a machinet rans la t ion  system is to have a powerful wr i t ingfac i l i ty ,  t t  must fu l f i l l  the fo l lowing needs.A grammar wr t t lng  language must be able tomanipulate l ingu is t i c  character i s t i cs  tn Japaneseand other languages.
The 11ngulst lc structure ofJcpanese tS la rge ly  d i f fe rent  from that  of Engltsh,for  instance.
Japanese does not res t r i c t  the wordorder s t rongly ,  and allows the omission of somesyntact ic  components.
Vhen a machine t rans la t ionsystem trans lates  sentences between Japanese andEnglish, a grammar wr i te r  must be able to expresssuch character i s t i cs .A grammar wr i t ing  language should have aframework to wr i te  grammars tn analys is ,  t ransfer ,and generation phase using the same expression.
I tIs undeslrable for  the grammar wr i te r  to learnseveral d i f fe rent  expressions for  d i f fe rent  stagesof a machine t rans la t ion .There are many word spec i f i c  l i ngu is t i cphenomena tn a natural  language.
A grammar wr i te rmust be able to add word spec i f i c  rules to amachine t rans la t ion  system one a f te r  another todeal wtth word spec i f i c  l i ngu is t i c  phenomena, andimprove hts machine t rans la t ion  system over a longper iod.
Therefore.
a grammar wr i t ing  language mustbe able to handle grammatical rules wr i t ten  tn wordd ic t ionar ies .There ts a natural  sequence tn at rans la t ion  process.
For example, a parstng ofnoun phrases which do not contain sententta l  formsis executed before a parsing of more complex nounphrases.
An approximate parsing of compoundsentences is executed before a parsing of complexsentences.
Also.
when an app l i ca t ion  sequence ofgrammatical rules are wr i t ten  exp l i c i t l y ,  a grammarwr i t ing  system can execute the rules e f f i c ient ly .because the system Just needs to tes t  theapp l i cab i l i ty  of a res t r i c ted  number of grammaticalru les.
So.
a grammar wr i t ing  language must be ableto express several phases of a t rans la t ion  processin the expression exp l i c i t l y .A grammar wr i t ing  language must be able tot reat  the syntact ic  and semantic ambiguit ies tnnatural languages.
But t t  must have somemechanisms to avoid a combinator ial  explos ion.Keeping these points in mind, we developeda new programming system, which ts composed of thegrammar wr i t ing  language and i t s  executing system.Ve wt l l  ca l l  i t  GRADE (Grammar Descr iber) .2.
Expression of the data for  a processingThe form of data to express the structureof a sentence during an analys is ,  a t rans fer ,  and ageneration process has a strong e f fec t  on theframework of a grammar wrt t tng language.
GRADEuses an annotated tree structure for  expressing asentence.
Grammatical rules tn GRADE are describedtn the form of t ree - to - t ree  transformation wtthannotation to each node.338The annotated t ree  tn GRADE ts a t rees t ruc ture  whose nodes have l t s ts  of  p roper ty  namesand the i r  va lues.
F igure 1 shows an example of  theannotated t ree .~ -CAT - S~-NUMBER - SINGULAI LE-NUMBER --SEM = HUMANE-CAT : Engl lsh Category SymbolE-NUMBER: Engl ish Number (SINGULAR or PLURAL)E-SEM :Eng l tsh  Semantic MarkerFtgure 1 An example of  the annotated t ree tn GRADEThe annotated t ree  can express a lo t  ofIn format ion  such as syntact i c  category ,  number.semantic marker, and other  th tngs .
The annotatedt ree  can a lso express a f lag  tn t t s  node.
whlch tss tmt la r  to a f lag  tn a convent iona l  programminglanguage, to cont ro l  the process of  a t rans la t ion .For example, in a grammar of a generat ion ,  agrammatical ru le  ts app l led  to  a l l  nodes tn theannotated t ree ,  whose processtngs are not f in i shed .In such a case, a grammatical ru le  checks the DONEf lag  whether t t t s  processed or not .
end sets T tothe newly processed ones.3.
Rewriting Rule tn GRADEThe bastc component of  a grammar wr t t tnglanguage is a rewr i t ing  ru le .
The rewr i t ing  ru leIn GRADE transforms one annotated t ree tnto  anoti~erannotated t ree .
The rewr i t ing  ru le  can be used Inthe grammars of ana lys ts ,  t rans fer  and generat ionphase in a machtne t rans la t ion  system, because thet ree - to - t ree  t rans format ion  by th ts  rewr i t ing  ru lets very power fu l .A rewr i t ing  ru le  tn GRADE conststs  of adec la ra t ion  par t  and amatn  par t .
The dec la ra t ionpar t  has the fo l low ing  four  components.
(1)D i rec tory  Entry par t ,  whtch conta ins  a grammarwr i te r ' s  name, a verston number of the rewr t t in  9ru le ,  and the las t  date of  the rev is ion .
Thts par tts not used at  the execut ion  ttme of  the rewr i t ingru le .
A grammar wr t te r  ts able to  see thein fo rmat ion  by ustng the help fac t l t ty  of  the GRADEsystem.
(2)  P roper ty  Def in i t ion  par t ,  where agrammar wr i te r  dec lares  the proper ty  names andthet r  va lues.
(3)  Var tab le  In t t .
par t ,  where agrammar wr t te r  dec lares  the names of  var iab les .
(4) Matchtng Ins t ruc t ion  par t ,  where a grammarwr t te r  spec i f ies  the mode to apply the rewr i t ingru le  to  an annotated t ree .The matn pant spec i f ies  the t rans format iontn the rewr i t ing  ru le .
and has the fo l low ing  threepar ts .
(1) Matchtng Cond i t ion  par t .
where thecond i t ion  of  a s t ruc ture  and the proper ty  values ofan annotated t ree  ts descr ibed .
(2) Subst ructureOperat ion par t ,  whtch spec i f ies  operat ions  fo r  theannotated t ree  that  has matched wtth the cond i t ionwr t t ten  tn the matching cond i t ion  pant.
(3)Creatton par t ,  whtch spec | f tes  the s t ruc ture  andthe proper ty  values of  the transformed annotatedt ree .3.1.
Matching Cond i t ion  par tThe matchtng cond i t ion  par t  spec i f ies  thecond i t ion  of the s t ruc ture  and the proper ty  valuesof the annotated t ree .
The matchtng cond i t ion  par ta l lows a grammar wr i te r  to spect fy  not on ly  a r tg tds t ruc ture  of  the annotated t ree ,  but a lsos t ruc tures  whtch may repeat  several  ttmes,s t ruc tures  which may be omtt ted ,  and s t ruc tures  tnwhich the order  of  thetn sub-s t ruc tures  ts notres t r i c ted .For example, the s t ruc ture  tn whtchad jec t ives  (ADJ) repeat  a rb i t ra ry  ttmes and a noun(N) fo l lows  them tn Engl lsh ts expressed asfo l lows .ADJ .
.
.
ADJ N- - ->match ing_cond i t ion :?
(ADJS N):AOJS: anyC~(ADJ)):The s t ruc ture  11ke a combinat ion of  a verb (V) andan adverb ia l  par t tc le  (ADVPART) tn th ts  sequencewtth or w i thout  a pronoun (PRON) tn between tnEngltsh t swr t t ten  as fo l lows .V (PRON) ADVPART- - ->match ing_cond i t ion :?
(V PRON ADVPART):PRON: opt iona l :A typtca l  Japanese sentent ta l  s t ruc ture  tn whtchthree adverb ia l  phrases (ADVP).
each composed of  anoun phrase (NP) and a case par t i c le  (GA, WO.
orNI)  proceed an verb (V) tn no par t i cu la r  order  tsexpressed as fo l lows .match ing_cond i t ion ;~(A1 A2 A3 Y);A1.
A3: d i sorder ;ADVP1 ADVP2 ADVP3 V - - ->  A l :  ~((ADVP1NP1GA)) :A A A A2:zCCADVP2 NP2 WO)):NPl GA NP2 we NPa NZ A3: zCCAOVPa Ne3 .X ) ) :The matchtng cond i t ion  par t  a l lows agrammar wr t te r  to spect fy  cond i t ions  about p roper tynames and proper ty  values fo r  the nodes of  theannotated t ree .
A grammar wr t te r  can compare noton ly  a p roper ty  value of  a node wt tha  constantva lue,  but a lso values between two nodes tn a t ree .339For example, the number agreement between a sub jec tnoun and a verb Is wr i t ten  as fo l lows .match ing_cond i t ion :~(NP UP):NP.NUNBER " VP.NUNBE~;3.2.
Subst ructure  Operat ion  par tThe subst ructure  operat ion  par t  spec ' t f tesoperat ions  fo r  the annotated  t ree  which has matchedwtth the matchtng cond i t ion  par t .
The subst ructureoperat ion  par t  a l lows  a grammar wr i te r  to  set  aproper ty  va lue  to  a node.
and to  ass ign a t ree  or  aproper ty  va lue  to  a var iab le ,  whtch is  dec la red  tnthe var iab le  tn t t .
par t .
I t  a l so  a l lows  htm toca l l  a subgnammar, a subgnammar network ,  ad ic t lonary  ru le .
a bu l l t - ln  funct lon ,  and a LISPfunct ion .
The subgrammar, the subgramman network .the d ic t tonany  ru le ,  and the but l t - tn  funct ion  w111be d iscussed tn sect ton  4 .
.
5 .
,  and 6.
Inadd i t ion ,  a grammar wnt ter  can wr i te  a cond i t iona loperat ion  by us ing the IF-THEN-ELSE form.
AnoperaL ion  to  set  'A '  to  the lex tca l  unt t  o f  thedeterminer  node (DET.LEX).
t f  the number o f  the NPnode |S SINGULAR.
Is wr t t ten  as fo l lows .substnuctune_operat ton :t f  NP.NUMBER - 'SINGULAR':then DET.LEX <- "A ' :e l se  DET.LEX <- "N IL ' ;end_t f :T rans format ion  o f  matn par t  tn a newntt tng  ru le :A A/b , ,  IB C O - - ->  E/t, , ,B C DTrans format ion  o f  a whole annotated  t ree :A AA B C D  - - ->  A E/ t , ,  I /b , ,BCD E BCD/t,,,BCDF igure  2 An example o f  an app l i ca t ion  o f  the mainpar tThe matching tns tnuct ton  pant spec i f ies  thet ravense  path o f  the annotated  t ree .
There arefour  types o f  the t raverse  pathes ,  whtch are thecombinat ions  o f  < le f t - to - r ight  or  n ight - to - le f t>and <bot tom-to - top  on top- to -bot tom>.
When agrammar wr i te r  spec i f ies  le f t - to - r ight  andbot tom-to - top  mode, the annotated  t ree  w111 bet raversed  as fo l lows .53 /3.3 .
Creat ion  par tThe s t ruc ture  and the proper ty  va lues  o fthe t rans formed annotated  t ree  ts wr i t ten  tn thec reat ion  par t .
The t rans formed t ree  ts descr ibedby node names such as NP and VP, whtch are used inthe matchtng cond i t ion  par t  on the subst ructureoperat ion  par t .
A cneat ton  par t  to  c reate  the t reewhose top node ts S and whtch has a NP sub- t ree  anda VP sub- t ree  ts wnt t ten  as fo l lows .c reat ion :Z((S NP VP) ) :3.4 .
Matching Ins t ruct ion  par tThe maln part of a rewrltlng rule In GRADE(the matching condition part, the substructureoperation part.
and the creatlon part) can beapplied not only to a whole tree, but also tosub-trees.
Figure 2 shows an example of theapp l i ca t ion  o f  a maln par t .4.
Cont ro l  o f  the grammatical  ru le  app l i ca t ionsA grammar wr i t ing  language must be ab le  toexpress  deta i led  phases o f  a t rans la t ion  process  tnthe express ion  exp l tc t t \ ]y .
GRADE a l lows  a grammarwr i te r  to  d iv ide  a whole grammar i n to  severa lpar ts .
Each par t  o f  the grammar ts ca l led  asubgnammar.
A subgrammar may cor respond to  agrammatical  un i t  such as the pars tng  o f  a stmplenoun phrase and the par tng  o f  a compound sentence.A whole grammar ts then descr ibed  by a network o fsubgrammars.
Thts network ts ca l led  a subgnammarnetwork .
A subgrammar network a l lows  a grammarwr i te r  to  cont ro l  the process o f  a t rans la t ion  tndetat l .
When ?
subgrammar network tn the ana lys tsphase cons is ts  o f  a subgrammar fo r  a noun-phrase(SG1) and a subgrammar for a verb -phrase  (SG2) tnth i s  sequence, the executor  o f  GRADE f i r s t  app l tesSG1 to an input  sentence,  then app l tes  SG2 to  theresu l t  o f  an app l i ca t ion  o f  SG1.4 .1 .
SubgrammarA subgrammar consts ts  o f  a set  o f  rewr i t ingru les .
Rewr i t ing  ru les  tn a subgrammar have apr tont ty  onder tng tn the i r  app l i ca t ion .
The n - th340rewr i t ing  rule tn a subgrammar ts t r ted  before the(n+l ) - th  ru le .A grammar wr t te r  can spectfy four types ofapp l i ca t ion  sequence of rewr i t ing  rules tn asubgrammar.
Let us assume the s i tuat ion  that a setor rewr i t ing  rules tn the subgrammar ts composed ofRR1.
RR2 .
.
.
.
.
and RRn.
that  RR1 .
.
.
.
.
and RR|-Icannot be appl ied to an tnput t ree.
and that RRtcan be applted to t t .
When a grammar wr t terspec i f ies  the f t r s t  type.
whtch ts ca l led  ORDER(I).the e f fec t  of the subgrammar execution ts theapp l i cat ion  of RRt to the tnput tree.
When agrammar wr t te r  spec i f ies  the second type.
which |sca l led ORDER(2).
the executor of GRADE t r tes  toapply RRt+I .
.
.
.
.
RRn to the resu l t  of theapp l i cat ion  of RRt.
So.
ORDER(2) means thatrewr i t ing  rui~s tn the subgrammsr are sequent ia l lyapplted to an tnput t ree.The th t rd  and fourth type.
whtch are ca l ledORDER(3) and ORDER(4).
are the I te ra t ion  type ofORDER(l) end ORDER(2) respect ive ly .
So, theexecutor of GRADE t r tes  to apply rewr i t ing  rulesuntt1 no rewr i t ing  rule Is appl icab le  to theannotated tree.SEARCH-CANDIDATE-OF-HOUNS.sg:sg_mode: order(Z) :rr_tn_sg:CANDIDATE-OF-NOUNS-t:UP-NP-TO-PNP:CANDIDATE-OF-NOUNS-Z;end_sg.SEARCH-CANDIDATE-OF-NOUNS:Ftgure 3 An example of a subgrammarFtgure 3 shows an example of a subgrammsr.When thts  subgrammar is applted to an annotatedtree.
the executor of GRADE f t r s t  t r tes  to applythe rewr i t ing  rule CANDIDATE-OF-NOUNS-1 to thetnput t ree.
I f  the app l |cat ton  of thts  rulesucceeds, the tnput tree ts transformed to theresu l t  of the app l i ca t ion  of the rewr i t ing  ruleCANDIDATE-OF-NOUNS-1.
Otherwise.
the tnput tree tsnot modif ied.
In et ther  case.
the executor ofGRADE next t r |es  to apply the rewrt t |ng  ruleUP-NP-TO-PNP to the tnput t ree.
The executorcontinues such a process untt1 the app l i ca t ion  ofthe las t  rewr i t ing  rule CANDIDATE-OF-NOUNS-2 tsf in ished.4.2.
Subgramar NetworkA subgrammar network descr|bes theapp l i cat ion  sequence of subgrauars .
Thespec i f i ca t ion  of a subgrammar network conststs ofthe fo l lowing  f tve  parts .
(1) D i rectory  Entrypart .
whtch ts as the same as the one tn arewr i t ing  ru le .
(2) Property Def in i t ion  part .whtch Is the same as the one tn a rewr i t ing  ru le .This part  ts used as the defau l t  dec larat ion  tnrewr i t ing  ru les .
(3) Vsrtable \ ]n t t .
par t .
which tsthe same as the one tn a rewr i t ing  ru le .
Thevar iab les  are used to contro l  the t rans i t ion  of thesubgrammar network.
The var iab les  are referred toand asstgned tn the substructure operat ion part  ofthe rewr i t ing  ru le .
The var iab les  are alsoreferred tne  11nk spec i f i ca t ion  part .
whtch wt l lbe described la ter .
(4) Entry part .
whtchspec i f ies  a s ta r t  node of the network.
(5) Networkpart .
whtch spec i f ies  a network of subgrammars,The network part  spec| f \ ]es  the networkstructure of subgrammars, and conststs of nodespec i f i ca t ions  and 11nk spect f tca t |ons .
The nodespec i f i ca t ion  has a label  and a subgrammer or ssubgnammar network name.
whlch ts ca l led  when thenode gets the control  of the processing.
The 11nkspec i f i ca t ion  spec i f ies  the t rans i t |on  among nodestn a subgramman network.
The 11nk spec i f i ca t ionchecks the value of a ver teb le  whtch |s set tn ?rewr i t ing  ru le .
and dectdes the label  of a nodewhtch wt l l  be processed next.PRE.sgn;d i rec tory_ent ry :owner(J.NAKAHURA): verston(VO2L05):last_update(83/12/25):var_ tn t t ;OPRE-FLAG tn t t (T ) :entry :START:network:START: PRE-STEP-|osg;LOOP : PRE-STEP-2.sg;A: PRE-STEP-3.sg:B: PRE-END-CHECK.sg:| f  OPRE-FLAG: then goto LOOP:else goto LAST:LAST: PRE-STEP-4.s9:ex t t :end_sgn.PRE;Ftgure 4 An example of a subgrammar network.Ftgure 4 shows an example of a subgrammarnetwork.
When the executor of GRADE appltes thtssubgranunar network to an tnput t ree.
the executorchecks the var - tn t t  par t .
then puts a new var tab leOPRE-FLAG on a stack, and sets T to OPRE-FLAG as antn t t ta l  value.
A f ter  that .
the executor checks theentry part  and f ind  the label  of the s ta r t  nodeSTART tn the network.
Then the executor searchesthe node START and appl les the subgrammarPRE-STEP-1 to the tnput t ree.
A f ter  theapp l i ca t ion ,  the executor appltes the subgrammerPRE-STEP-2 (node name: LOOP) and PRE-STEP-3 (nodename: A) to the annotated tree tn thts  sequence.Next.
the executor appl les the subgrammarPRE-END-CHECK (node name: B) to the t ree.341Rewr i t ing  ru les  in PRE-END-CHECK examine the t reeand set T or NIL to the var iab le  ePRE-FLAG.
Theexecutor  checks the l ink  spect f | ca t Jon  par t ,  whichis s ta r ted  by IF.
and examines the value of thevar iab le  @PRE-FLAG.
The node in the network whichw i l l  be ac t ivated  next  is the node LOOP i f@PRE-FLAG is not NZL, o therwlse ,  the node LAST.Thus, wh i le  @FRE-FLAG ts not NIL, the executorrepeats the app l i ca t ions  of  three subgrammars,PRE-STEP-2.
PRE-STEP-3.
and PRE-END-CHECK.
to theannotated t ree .
When @PRE-FLAG becomes NIL.
thesubgrammar PRE-STEP-4 tn the node LAST ts app l tedto the t ree .
and the app l i ca t ion  of  th l s  subgrammarnetwork PRE Is terminated.5.
Handl ing the grannaatlcal ru le  tn the wordd ic t ionar iesGRADE a l lows a grammar wr t te r  to wr i te  wordspec i f i c  grammatical ru les  as a subgramman In anent ry  of word d ic t ionar ies  of a machine t rans la t ionsystem.
A subgramman wr i t ten  in a d ic t ionary  ent ryis ca l led  a d ic t ionary  ru le .
The d ic t ionary  ru leis spec i f i c  to a par t i cu la r  word In the d ic t ionary .The d ic t ionary  ru le  is re t r ieved  wt thaent ry  word and a ru le  ident i f ie r  as the key.
and isapp l ied  to the annotated t ree  which is spec i f ied  bya grammar wr i te r ,  when CALL-DIC operat ion  In thesubst ruc ture  operat ion  par t  Is executed.
F igure 5shows an example of  a rewr i t ing  ru le  which ca l l s  ad ic t ionary  ru le .
In th ts  case.
a d ic t ionary  ru lewhich ts wr i t ten  in an ent ry  of  a word as ind icatedby V.LEX ( the va lue of  the lex tca l  unt t  of  verb) .and whose name ts ANALYSIS.
ts epp l ted  to thesequence of  NP1.
V. NP2.
and PP (noun phrase 1.verb phrase, noun phrase 2. and prepos i t iona lphrase) .
Then the resu l t  of the app l i ca t ion  of  thed ic t ionary  rule Is assigned to the var tab le  aS.CASE-FRANE.rr:var_ tn t t :  aS;match ing_cond i t ion :Z(NPZ v Me2 PP):subst ruc ture_operat ion :@S <- ca11-dtc(V.LEXANALYSIS Z(NP1V NP2 PP)):creat ion :~(es):end_Pr.CASE-FRAME:Ftgure S An example of a rewr i t ing  ru le  which ca l l sa d ic t ionary  ru le6.
Treatment of Ambigu i t iesA grammar wr t t tng  language must be able tot reat  the syntact i c  end semantic ambigu i t ies  innatura l  languages.
GRADE a l lows a grammar wr i te rto co l lec t  a l l  the resu l t  of  poss ib le  t ree - to - t reet rans format ions  by a subgrammar.
However, It mustavoid a combinator ia l  exp los ion ,  when t t  encountersthe ambigu i t ies .For instance,  le t  us assume that  a grammarwr i te r  wr i tes  a subgramman which conta ins  tworewr i t ing  ru les  to analyze the case frame of  ?verb,  that  a rewr i t ing  ru les  ts the ru le  toconst ruc t  VP (verb phrase) from V and UP (a verband a noun phrase) ,  and that  the other  ts the ru leto const ruc t  VP (verb phrase) from V. NP and PP (averb.
a noun phrase, and a prepos i t iona l  phrase) .When he spec i f ies  NONDETERMINISTIC_PARALLELED modeto the subgremmar, the executor  of  GRADE 8pp l tesboth rewr i t ing  ru les  to an Input  t ree ,  const ruc tstwo transformed t rees ,  and merges them tnto  8 newt ree  whose top node has 8 specta l  p roper ty  PARA.The top node of  th i s  s t ruc ture  is  ca l led  a parespec ia l  node.
whose sub- t rees  are the transformedtrees by the rewr i t ing  ru les .
F igure 6 shows anexample of  th ts  mode and apara  node.- - '7V NP PP SGPARAVP PP VPA A",,V NP V NP PPFigure 6 An example of  a pars spec la l  nodeA grammar wr i te r  can se lec t  the mostappropr ia te  one from the sub- t rees  under a parespec ia l  node.
A grammar wr i te r  ts able to usebu i l t - in  funct lons .
MAP-SG.
MAP-SGN.
SORT.
CUT.
andINJECTION in the subst ruc ture  operat ion  par t  tochoose the most appnopr la te  one.
F igure 7 shows anexample to use these bu l l t - Jn  funct ions .subst ruc ture_operat ion :eX <= ca11-dtc(V.LEX CASE-FRAME Z(N NP PP)):eX <- ca11-but l t (map-sg  ~(gX) t reeEVALUATE-CASE-FRAME):@X <- ca l l -bu i l t ( sor t  Z(@X) t ree  SCORE):@X <- ce l l -bu i l t ( cut  \ [ (eX)  t ree  1):9X <- ca l l -bu i l t ( In jec t ion  ~(eX) t ree  1):F igure 7 An example of  bu l l t - ln  funct ionsIn th i s  subst ruc ture  operat ion  par t .
theexecutor  of GRADE appl tes  the d ic t ionary  ru lewr t t ten  tn a word which ts the value of  V.LEX( lex lca l  unt t  of  verb)  to the t ree .
and sets theresu l t  to the var tab le  eX.
When thenondetermtn is t tc -para l le led  mode ts used tn thed ic t ionary  ru le .
the value of eX ts the t ree  whoseroot  node tsa  pare specte l  node.
A f te r  that ,  theexecutor  ca l l s  but l t - tn  funct ton  MAP-SG to apply342the subgrammar EVALUATE-CASE-FRAME to each sub-t reeof the value of OK. and sets the resu l t  to eXagain.
The subgrammar EVALUATE-CASE-FRAME computesthe eva luat ion  score end sets the score to thevalue of the proper ty  SCORE tn the root  node of thesub-trees.
Next, the executor  ca l l s  but l t - tnfunct ton SORT.
CUT.
and INJECTION to get thesub-tree whose score Is the h ighest  one among thesub-trees under the pare spectal  node.
This t reets then set to 9X as the most appropr ia te  resu l t  ofthe d ic t ionary  ru \ ]e .The para spectal  node ts t reated  as thesame as the other  nodes tn the cur rentImplementation of GRADE.
A grammar wr t te r  can usethe para node as he want, and can se lec t  a sub-treeunder a pare node at the la ter  grammatical ru leapp l i ca t ion .7.
System conf igurat ion  end the environmentThe system conf igurat ion  of GRADE ts Showntn Figure 8.
Grammatical ru les  wr i t ten  tn GRADEare f i r s t  t rans la ted  tnto  tn terna l  forms, which areexpressed by s-expressions tn LISP.
Thist rans la t ion  ts performed by GRADE t rans la tor .
TheIn terna l  forms of grammatical ru les are applted toan tnput t ree .
which ts an output  of themorphological  analysts  program.
Thts ru leapp l i ca t ion  Is performed by GRADE executor .
Theresu l t  of  ru le  app l i ca t ions  |s sent to themorphological  generat4on program.D ic t ionary  GrammarfJ GRADEt rans la tor1/  \Dic t ionary  Grammar( In terna l  form) ru le  ~ ~ r~tnput_~ GRADE ~outputsentent ta l  t ree |executor  J sentent ta l  t reeFtgure 8 The system conf igurat ion  of  GRADEGRADE system ts mrt t ten  tn UTILISP(Un ivers i ty  of  Tokyo In teract ive  LISP) andImplemented on FACON M382 wtth the add i t iona lfunct ton of handl lng Chatnese characters .
Thesystem ts a lso usable on Ltsp Machtne Symbollcs3600.
The program stze of GRADE system ts about10.000 l tnes .the form of t ree - to - t ree  t rans format ion  r t thannotat ion  to each node.
(2) Rewr i t ing  ru le  has ?powerful wr t t tng  fac i l i ty .
(3) Grammar can bed iv ided Into  several  parts  and can be 11nkedtogether  as a subgrammar network.
(4) Subgrammarcan be wr i t ten  tn the d ic t ionary  ent r tes  to expressword spect f tc  l ingu iS t iC  phenomena.
(5) Spectelnode ts provtded tn a t ree  fo r  embeddingambigu i t ies .GRADE has been used fo r  more than a year asthe software of the nat tona l  machtne t rans la t ionpro jec t  from Japanese Into  Engl ish.
Thee f fec t iveness  of GRADE has been demonstrated tnthts  p ro jec t .
The l ingu is t i c  parts  of the pro jec tsuch as the morphological  ana lys ts /generat ionprograms, the grammars fo r  the analysts  ofJapanese.
the t rans fer  from Japanese Into  Engltshand the generat ion of Engl lsh.
are discussed tnother  papers (Sakamoto 84) (TsuJt1 84) (Raged 84).Thts study:  "Research on the machtnet rans la t ion  system ( Japanese-Engl ish)  of sc ient i f i cand techno log ica l  documents" Is betng performedthrough Spectal Coord inat ion  Funds for  PromotingScience & Technology of the Science and TechnologyAgency of the Japanese Government.ACKNOWLEDGEMENTSVe would 11ke to acknowlege thecont r ibut ion  of N. Kogt.
F. Ntshtno.
Y. Sakane.
M.Kobayasht.
S. Sate.
and Y. Senda.
who programmedmuch of the system.
We mould a lso 11ke to thankthe other  member of  Me-pro ject  fo r  the i r  usefulcomments.REFERENCESBot te t .
Ch., e t  e l .
Implementat ion andConversat ional  Environment of ARIANE 78.4.
Proc.COLING82.
1982.RageD, M., et  e l ,  Dealtng wtth Incompleteness ofL ingu is t i c  Kno~ledego on Language Trans la t ion .Proc.
COLING84o ;964.Sakamoto, Y. .
et  a l ,  Lextcon Features fo r  JapaneseSyntact i c  Analysts In Mu-ProJect-JE, Proc.COLING84, 1984.TsuJt t ,  J .
,  e t  e l ,  Analysts  Grammar or Japanese tnHu-ProJect,  Proc.
COLING84, ;984.8.
ConclusionThe grammar wr t t tng  system GRADE tsdiscussed 4n thts  paper.
GRADE has the fo l low4ngfeatureS.
( I )  Rewr i t ing ru le  ts an expression tn343
