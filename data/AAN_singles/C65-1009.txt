9"1965 International Conference onComputational Linguistic s"SOME COMMENTS ON ALGORITHMAND GRAMMAR IN  THE AUTOMATIC  PARSINGOF  NATURAL LANGUAGESPaul L. GarvinThe Bunker -Ramo Corporation8433 Fallbrook AvenueCanoga Park, California 91304\ ~ ~"~?~7~?~" ~Ga rv in -  1ABSTRACTThe purpose of this paper is to examine the oft-repeatedassertion regarding the efficiency of a "simple parsing algorithm"combinable with a variety of different g rammars  written in thefo rm of appropriate tables of rules.
The paper raises the questionof the increasing complexity of the tables when more  than the mostelementary natural-language conditions are included, as well asthe question of the ordering of the rules within such nonelementarytables.
Some concrete examples f rom the field of machinetranslation will be given in the final version of the paper.
Someconclusions are presented.Ga rvin- 2I.
The purpose of this paper is to examine the validityof the frequently repeated contention that the separation ofalgorithm and grammar  is particularly desirable in automaticparsing programs.
This examination will be restricted to thearea of automatic parsing of natural languages with particularattention to the parsing prob lems encountered in machinetranslation.It must  be noted at the outset that in this authorls opinionthe a im of the automatic parsing component of a machine translationprogram is the adequate recognition of the boundaries and functionsof syntactic units.
On  the basis of this recognition, automatictranslation on a sentency-by-sentence rather than word-by-wordbasis can be effected.2.
The argument in favor of the separation of algorithmand grammar  is roughly the following: many  proponents of formalg rammar  claim that it is possible to construct a single simpleparsing algorithm to be used with any of several g rammars  of acertain type.
The type of g rammar  has to be specified veryprecisely by means  of a g rammar  rule format.
These grammarscan be written in the form of tables of rules, and the samealgorithm can be used alternatively with several of these grammartables, provided the rule format is adhered to.
The advantageof this approach is supposed to be greater simplicity and easiercheckout and updating of the grammar .
This is because thealgorithm need not be changed every time a correction is madein the grammar :  p resumably  any such correction will be a simplerevision of the grammar  table.Ga rvin - 33.
In assessing the usefulness of the separation of g rammarand algorithm, it is important to keep in mind  the we l l -knowndistinction between context-free and context-sensitive grammars .In this authorSs f rame of reference, this distinction can beformulated very s imply as follows: a context-free grammar  isone in which only the internal structure of a given construction istaken into account; a context-sensitive is one in which both theinternal structure and the external functioning are taken intoaccount.
This view follows f rom the conception that internalstructure and external functioning are two separate related butnot identical functional characteristics of the units of languagesuch as syntactic units.There  are two important considerations which follow f romthis.
One  is that very often the internal structure of constructionis not adequate to determine its external functioning.
The  well-known fact must  be taken into account that sequences with identicalinternal structure may have vastly different modes  of externalfunctioning and conversely.
Examples  of this are very commonin English, and include many of the frequently cited instances ofnesting.
The  second consideration is that the determination ofexternal functioning by context searching is not a simple one-shotoperation.
It is not always possible to formulate a particularsingle context for a particular sequence that is to be examined.Rather, the variety of contextual conditions which may apply to aparticular construction may differ f rom sentence to sentence andthe particular conditions that apply can only be determined by agraduated search of a potentially ever extending range of contexts.This means  that one can not s imply talk of context-sensitivity in aGarvin-4grammar  but one has to talk of degrees of context-sensitivity.In order therefore to parse natural language data adequately,the parsing system has to have, not mere ly  some fixed capabilityof being sensitive to a certain range of contexts, but it must  becapable of modification in terms of increase in context-sensitivity.The above means  that the most  significant alterations ingrammar  rules f rom the standpoint of natural-language parsingwill not be those that affect the formation of particular rules withinthe same format.
Rather those alternatives which will really makea difference in the adequacy of the parsings of natural languagesentences will be alteration of the format itself in terms ofincreasing the degree of context-sensitivity.
This is effect meansthat the simplicity claimed for a separate table of rules with aconstant algorithm turns out to be illusory, since the proponentsof this concept of simplicity admits that it applies only when therules are held to the same format.4.
Another point raised in connection with the separationof g rammar  and algorithm is that the grammar  table constitutesa set of input data to the particular algorithm, in a similar wayin which the sentences to be parsed constitute input data.In this authorts opinion, this is again an oversimplification.First of all, it is to be noted that in the view of manyprogrammers ,  only those data are considered input that aredesigned to be actually processed.
Since the grammar  rulesare not intended to be subject to processing, but rather toconstitute the parameters  for processing, theyare not inputsdata in any way  comparable  to the sentences that are to be parsed.Ga rvin - 5If, on the other hand, the question of processing is to beignored in deciding what is to be v iewed as input data, thenanother consideration must  be taken into account.
It is the following:the question as to what constitutes input can not be answeredin the absolute, but only relatively.
That is, the question is nots imply  "is it input," but "what is it input to".
This means  thatthe answer  depends, at least in part, on what portions of theprogram are previously present in the work  space, and whatadditional portions are inputted subsequently.
In a program inwh ich  the grammar  is written into the algorithm, such as is thecase in the approach which this author has taken, the question ofwhether  the grammar  constitutes input data can then be v iewedas follows: while the grammar  does not constitute a separate setof input data, it will nevertheless use separate sets of g rammat ica linput data in the fo rm of a grammar-coded dictionary that is fedinto the program f rom a separate source.
Likewise, it is possibleto view the executive routine of the algorithm which contains thegrammar  as the actual parsing algorithm, and to view the remainingportions as forms of input data.5.
Leaving aside the matters of rule format and input data,two further questions can be raised concerning the simplicity thatis c la imed to result f rom the separation of g rammar  and algorithm.These questions are pertinent in the case of a grammar  havingsufficient context-sensitivity to serve the needs of syntactic recognitionadequate for the mach ine  translation of natural languages.a.
Since the table will tend to be increasingly complexbecause of the requirement of high context-sensitivity, a dictionary-type binary lookup may no longer be sufficient.
Rather, it mayGa rvin- 6become necessary  to devise an algorithm for searching the tablein such a way  that the graduation of contextual conditions isproper ly taken into account.b.
Revisions of the rules in such a complex  table willnot be as simple a matter  as it seems,  because it will no longerbe obvious which of the rules is to be modif ied in a given case,nor will it be obvious where  in the table this rule can be found.Likewise, it will not be obvious what contextual conditions willhave to be taken into account in order to bring about the desiredmodification.6.
As  can be seen, the argument  in favor of the separationof g rammar  and algorithm is considered far f rom convincing.It does, however ,  raise a related question: if the major  separationis not to be that between grammar  and algorithm, what then arethe major  components  of a parsing program?The  answer  which this author has found satisfactory is thewe l l -known one of structuring the parsing program as an executivemain  routine with appropriate subroutines.
This raises the furtherquestion of the functions and design of the executive routine andsubroutine s.In a parsing program,  the function of the executive routinewill be to determine what units to look for and where  to look forthem.
The  a im of the subroutines will be to provide the meansfor carrying out the necessary  searches.The  design principle for this type of parsing program willbe the we l l -known one of modularization: the subroutines of theprogram will consist of self-contained and interchangeable modules.Ga rvin- 7The modules  will be of two kinds: analytic modules, thepurpose of which will be to per fo rm tasks of linguistic analysissuch as the determination of the internal structure and externalfunctioning of the different constructions that are to be recognized;housekeeping modules  which are to insure that the program is atall times aware  of where  it stands.
The latter means  the following:the program has to know what word  it is dealing with, the programhas to know at each step how far a given search is allowed to goand what points it is not allowed to go beyond, the program has tobe informed at all times of the necessary location information suchas sentence boundaries, word  positions in the sentence, searchdistances, etc.ACKNOWLEDGEMENTWork on this paper was done under the sponsorship of the InformationProcessing Laboratory of the Rome Air Development Center of the U. S. AirForce, under Contract AF 30(602)-3506.
