I f  The Parser Fails"Ralph M. WeischedelUniversity of DelawareandJohn E. Black"W. L. Gore & Associates, Inc.The unforgiving nature of natural language componentswhen someone uses an unexpected input has recently beena concern of several projects.
For instance, Carbonell(1979) discusses inferring the meaning of new words.Hendrix, et .a l .
(1978) describe a system that provides ameans for naive users to define personalized paraphrasesand that l ists the items expected next at a point wherethe parser blocks.
Weischedel, et.al .
(1978) show howto relax both syntactic and semantic onstraints suchthat some classes of ungrammatical or semanticallyinappropriate input are understood.
Kwasny aodSondheimer (1979) present techniques for understandingseveral classes of syntactically ill-formed input.
Codd,et.al .
(1978) and Lebowitz (1979) present alternativesto top-down, le f t - to-r ight  parsers as a means of dealingwith some of these problems.This paper presents heuristics for responding to inputsthat cannot be parsed even using the techniquesreferenced in the last paragraph for relaxing syntacticand semantic constraints.
The paper concentrates onthe results of an experiment esting our heuristics.We assume only that the parser is written in the ATNformalism.
In this method, the parser writer mustassign a sequence of condition-action pairs for eachstate of the ATN.
I f  no parse can be found, thecondition-action pairs of the last state of the path thatprogressed furthest through the input string are used togenerate a message about the nature of the problem, theinterpretation being followed, and what was expectednext.
The conditions may refer to any ATN register, theinput string, or any computation upon them (evensemantic ones).
The actions can include any computation(even restarting the parse after altering the unparsedportion) and can generate any responses to the user.These heuristics were tested on a grammar which usesonly syntactic information.
We constructed test datasuch that one sentence would block at each of the 39states of the ATN where blockage could occur.
In only3 of the 39 cases did the parser continue beyond thepoint that was the true source of the parse fai l ing.From the tests, i t  was clear that the heuristicsfrequently pinpointed the exact cause of the block.However, the response did not always convey thatprecision to the user due to the technical nature of thegrammatical cause of the blockage.
Even though theheuristics correctly selected one state in the over-whelming majority of cases, frequently there wereseveral possible causes for blocking at a given state.Another aspect of our analysis was the computational anddevelopmental costs for adding these heuristics to aparser.
Clearly, only a small fraction of the parsingtime and memory usage is needed to record the longestpartial parse and generate messages for the last stateon i t .
Significant effort is required of the grammarwriter to devise the condition-action pairs.
However,such analysis of the grammar certainly adds to theprogrammer's understanding of the grammar, and thecondition-action pairs provide significant documentation"This work was supported by the University of DelawareResearch Foundation, Inc.?
"This work was performed while John Black was with theDept.
of Computer & Infor~nation Sciences, University ofDelaware.of the grammar.
Only one page of program code and ninepages of constant character strings for use in messageswere added.From the experiment we conclude the following:I.
The heuristics are powerful for small naturallanguage front ends to an application domain.2.
The heuristics should also be quite effective in acompiler, where parsing is far more deterministic.3.
The heuristics w i l l  be more effective in a semanticgrammar or in a parser which frequently interacts witha semantic omponent to guide i t .We wi l l  be adding condition-action pairs to the statesof the RUS parser (Bobrow, 1978) and wil l  add relaxationtechniques for both syntactic and semantic constraintsas described in Weischedel, et .a l .
(1978) and Kwasnyand Sondheimer (1979).
The purpose is to test theeffectiveness of paraphrasing partial semantic inter-pretations as a means of explaining the interpretationbeing followed.
Furthermore, Bobrow (1978) indicatesthat semantic guidance makes the RUS parser significantlymore deterministic; we wish to test the effect of thison the ab i l i ty  of our heuristics to pinpoint the natureof a block.ReferencesBobrow, Robert S., "The RUS System," in Research inNatural Language Understanding, B. L. Webber andR.
Bobrow (eds.
), BB~I Report No.
3878, Bolt Beranek andNewman, Inc., Cambridge, MA, 1978.Carbonell, Jaime G., "Toward a Self-Extending Parser," inProceedings of the l l th  Annual Meeting of the Associationfor Computational Linguistics, San Diego, August, 1979,3-7.Codd, E. F., R. S. Arnold, J-M. Cadiou, C. L. Chang andN.
Roussopoulis, "RENDEZVOUS Version l :  An Experimental-Language Query Formulation System for Casual Users ofRelational Data Bases," IBM Research Report RJ 2144, SanJose, CA, January, 1978.Hendrix, Gary G., Earl D. Sacerdoti, Daniel Sagalowicz,and Jonathan Slocum, "Developing a Natural LanguageInterface to Complex Data," ACM Transactions on DatabaseSystems, 3, 2, (1978), I05-147.Kwasny, Stan C. and Norman K. Sondheimer, "Ungrammatica-l i ty  and Extragrammaticality in Natural LanguageUnderstanding Systems," in Proceedings of the 17th AnnualMeeting of the Association for Computational Linguistics,San Diego, August, 1979, 19-23.Lebowitz, Michael, "Reading with a Purpose," inProceedings of the 17th Annual Meeting of the Associationfor Computational Linguistics, San Diego, August, 1979,59-63.Weischedel, Ralph M., Wilfried M. Voge, and Mark James,"An Art i f ic ia l  Intelligence Approach to LanguageInstruction," Ar t i f i c ia l  Intelligence, lO, (1978),225-240.95
