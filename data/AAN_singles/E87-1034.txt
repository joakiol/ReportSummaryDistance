DISCONTINUOUS CONSTITUENTS IN TREES, RULES, AND PARSINGHarry Bunt, Jan Thesingh and Ko van der SlootComputational Linguistics UnitTilburg University, SLEPostbus 901535000 LE TILBURG, The NetherlandsABSTRACTThis paper discusses the consequencesof allowing discontinuous constituents insyntact i c  represent ions  andphrase-structure rules, and the resultingcomplications for a standard parser ofphrase-structure grammar.It is argued, first, that discontinuousconst i tuents  seem inevitable in aphrase-s t ruc ture  grammar  wh ich  isacceptable from a semantic point of view.It is shown that tree-like constituentstructures with discontinuit ies can begiven a precise definition which makesthem just as acceptable for syntacticrepresentation as ordinary trees.
However,the formulation of phrase-structure rulesthat generate such structures entailsquite intricate problems.
The notions .ofl i near  precedence and adjacency arereexamined, and the concept of "n-placead jacency  sequence"  is introduced.F ina l ly  , the resu l t ing  fo rm ofphrase-s t ruc ture  grammar ,  ca l led"Discontinuous Phrase-Structure Grammar"is shown to be parsable by an algorithmfor context-free parsing with relativelyminor adaptations.
The paper describes theadaptations in the chart parser which wasimplemented as part of the TENDUM dialoguesystem.I.
Phrase -s t ruc turediscontinuitygrammar  andContext-free phrase-structure grammars(PSGs) have always been popular incomputational l inguistics and in thetheory of programming languages because oftheir technical and conceptual simplicityand the i r  wel l -establ ished efficientparsabil ity (Shell, 1976; Tomita, 1985).In theoret i ca l  linguistics, i t  wasgenerally believed until recently thatnatural language competence cannot becharacterized adequately by a context-freegrammar, especially in view of agreementphenomena and discontinuit ies (see e.g.Postal, 1964).
However, in the earlyeighties Gazdar and others revived anidea,  due to Harman (1963) ,  offormulating phrase-structure rules not interms of monadic category symbols, but interms of feature bundles.
With thisricher conception of PSG it is not at allobvious whether natural languages can bedescribed by context-free grammars (seee .g .
Pu l lum,  1984) .
Genera l i zedPhrase-Structure Grammar (GPSG; Gazdar etal., 1985), represents a recent attemptto provide a theoretical ly acceptableaccount of natural- language syntax in theform of a phrase-structure grammar.Apart from being important in its ownr ight,  phrase-structure grammar alsoplays an important part in more complexgrammar  fo rmal i sms  that have beendeveloped in linguistics; in classicalTransformational-Generative Grammar thebase component was assumed to be a PSG;in Lexical-Functional Grammar a PSG issupposed to generate c-structures, and inFunct iona l  Un i  f i ca t ion  Grammarcontext-free rules generate the inputstructures for the unif ication operation(Kay, 1979).Phrase-structure grammar has one morea t t rac t ive  s ide ,  apar t  f rom itstechnical/conceptual simplicity and itscomputational efficiency, namely that itseems to fit the semantic requirement ofcompos i t iona l i ty  very  we l l .
Thecomposit ional ity principle is the thesisthat the meaning of a natural- languageexpress ion  is determined  by thecombination of (a) the meanings of itsparts; (b) its syntactic structure.
Thisentails, for a grammar which associatesmeanings with the expressions of thelanguage,  the requirement that thesyntactic rules should characterize theinternal structure of every expression ina "meaningful" way, which allows thecomputation of its meaning.
In this way,semantic considerations can be used toprefer one syntactic analysis to another.PSGs area useful tool for the formulationof syntactic rules that meet thisrequirement, as phrase-structure rules bytheir very nature provide a recursivedescription of the constituent structure203(I(2(3(4(5(6 Leo is harder gegaan dan ooit tevoren(= Leo has been going faster thanever before)(7) Ik hob een auto gekocht  met 5 deuren(= I have bought a car with 5 doors)(8) Ik hoot dat Jan Marie de k inderen dehond heeft helpen leren u i t laten(= I hear that John has helped Maryto teach the kids to walk the dog)John  ta lked ,  of  course, aboutpol i t icsWhich chi ldren did Anne expect to geta present from?This was a better movie than IexpectedWake me up at seven thirty~i-il one of your cousins come whomoved to Denmark?These examples do not represent  a s ingleclass of l inguist ic  phenomena, and it isdoubtful  whether they should all behandled by means of the same techniques.
(1o)Sentence (I), which has been d iscussedextens ive ly  in the l i terature,  presents aproblem for any analys is  in terms ofad jacent  const i tuents ,  s ince  theparenthet ica l  "of course" div ides the verbphrase  "talked about pol i t ics"  intonon-ad jacent  parts.
This means that we arefo rc  e d to  e i the  r cons ider  theparenthet ica l  as part of the VP, as Ross(1973) has suggested, or as a const i tuentat sentence level, as has been suggestedby Emonds (1976; 1979).
In the lattercase ,  the sentence is analysed ascons ist ing of the embedded sentence "Johntalked", with "of course" and "aboutpol i t ics"  as speci f iers  at sentence level.McCawley  (1982)  prov ides  deta i ledarguments showing that both suggest ionsare inadequate (which seems intu i t ive lyobvious, from a semant ic  point of view),and suggests, instead, the syntact icrepresentat ion (9).
(9)John talkedThis is of course no longer anordinary tree structure,  but should thatbe a reason to reject it?
McCawley takesthe view that we should s imply not beafraid of const i tuent  st ructures like(9).
We wil l  return to this suggest ionbelow.Example (2) represents a d i f ferentc l a s s o f phenomena,  wh ich  areconvenient ly  thought of in terms ofmovements of parts of phrases.
In thisexample, the NP "which chi ldren" can bethought of as having moved out of the PP"from which chi ldren",  of which only theprepos i t ion  has been left behind.
Inorder to deal with such cases, in GPSG aspecial  type of syntact ic  categor ies havebe  e n i n t rod  uced ,  ca l led  "s lashcategor ies"  For instance, the categoryPP/NP is ass igned to a prepos i t iona lphrase which "misses" an NP.
In thepresent example, this category would beass igned to "from".
The assumpt ion thatan NP is miss ing propagates to highernodes in the syntact ic  tree which thephrase-s t ructure  rules construct  for thesentence, unti l  it is acknowledged at thetop level.
Diagram (10) i l lustrates this.Sof complex express ions down to theirsmal lest meaningful  parts.
However, PSGhas  one  proper ty  that l imits itsappl icabi l i ty  in descr ib ing const i tuentstructure in natural  language, namely thatphrase-s t ructure  ru les  assume theconst i tuents  of an express ion  tocorrespond to adjacent substr ings.
Innatural  language it happens quite often,however, that the const i tuents  of anexpress ion are not adjacent.
The Engl ishand  Dutch  example sentences ( I )-(8)i l l us t ra te  this.
In (2)-(7) we seeexamples of major phrases, made up ofparts that are not adjacent; so-cal ledd i scont inuous  const i tuents .
We haved iscont inuous noun phrases in (5) and (7),a d iscont inuous ad ject ive phrase in (3),d iscont inuous verb phrases in (1) and (4),and a d iscont inuous adverb phrase in (6).NP\[+WH\] AUX NP V NP PREP NP/NPwhich chi ldren did Ann et ifts from 0If we want to do just ice to theintu i t ion that the sentence at surfacelevel contains a const i tuent  made up by"which chi ldren" and "from", we wouldhave to draw a const i tuent  d iagram like(11), which, l ike (9), is no longer anord inary tree structure.204(11) Swhich chi ldren did nn get ifts fr mThe technique of using phrases thatmiss some const i tuent  cannot be used forat least some of the examples (3)-(8),such as (5) and (7).
In both thesesentences the d iscont inuous NP contains afu l l - f ledged NP, which cannot sens ib ly  besaid to "miss" the re lat ive clause orpreposi t ional  phrase that occurs later inthe sentence.Whatever techniques may be invented todeal with such cases, it seems obviousthat a grammar which recognizes anddescr ibes  d iscont inu i t ies  in naturallanguage sentences is a more sui tablebasis for semant ic  in terpretat ion  than onethat squeezes const i tuent  structures in aform in which they cannot be represented.It therefore seems worth invest igat ingthe v iab i l i ty  of t ree- l ike structures withd iscont inui t ies ,  l ike (9) and (11).2.
Trees with d i scont inu i t iesIf we want to represent  the s i tuat ionthat a phrase P has const i tuents  A and C,whi le there is an intervening phrase B, wemust al low the node corresponding to P todominate the A and C nodes withoutdominat ing the B, even though this node islocated between the A and C nodes:(12) PA B COne consequence  of a l lowing suchd iscont inu i t ies  is that our st ructures getcross ing branches, if we sti l l  want allnodes to be connected to the top node;(10) and (11) i l lustrate this.
In whatrespects exact ly  do these structuresdif fer from ord inary trees?
McCawley(1982) has tried to answer this question,suggest ing a formal def in i t ion  for treeswith d iscont inu i t ies  by amending thedef in i t ion of a tree.A tree is often def ined as a set ofelements, cal led "nodes", on which tworelat ions are defined, immediate  dominance(D) and l inear precedence (<), which arerequired to have certa in propert ies tothe effect that a tree has exact ly oneroot node, which dominates every othernode ( immediate ly  or indirect ly);  thatevery node in a tree has exact ly  one"mother" node, etc.
(see e.g.
Wall,1972).Given the re lat ions of immediatedominance  and  l inear  p recedence ,dominance is def ined as the ref lex ive andt rans i t ive c losure D' of D, and ad jacencyas l inear precedence without interveningnodes.A node in a tree is cal led terminal  ifit does not dominate any other node; theterminal nodes in a tree are total lyo rdered  by the  < re la t ion .
Fornonterminal  nodes the precedence re lat ionsat is f ies  the requi rement  that x < y ifand only if every node dominated by xprecedes every node dominated by y.Formally:(13) for any two nodes x and y in thenode set of a tree, x < y if andonly if for all nodes u and v, if xdominates u and y dominates v, thenu < v.Part of the def in i t ion  of a tree isalso the s t ipu lat ion  that any two nodeseither dominate or precede one another:(14) for any two nodes x and y in thenode set of a tree, either x D' y,or y D' x, or x < y, or y < x.This s t ipu lat ion  has the effect  ofexc luding d iscont inu i t ies  in a tree, forsuppose a node x would dominate nodes yand z without  having a dominance re lat ionwith node w, where y < w < z.
By (14),either x < w or w < x.
But x dominates anode to the r ight of w, so by (13) x doesnot precede w; and w is to the r ight of anode dominated by x, so w does notprecede x either.McCawley's  def in i t ion  of trees withd iscont inu i t ies  comes down to droppingthe condi t ion that any two nodes shouldeither dominate one another or have ale f t - r ight  relat ion.
Instead, he proposesthe weaker condi t ion that a node has noprecedence re lat ion to any node that itdominates:(15) for any two nodes x and y in thenode set of a tree, if x D' y thenneither  x < y nor y < x.We shall  call a node u, s i tuatedbetween daughters  of a node x withoutbeing dominated by x, internal  context  ofX.205McCawley's  def in i t ion of trees withd iscont inu i t ies  is inaccurate  in severalrespects; however, his general  idea iscer ta in ly  cor rec t  : t rees  w i thd iscont inu i t ies  can be def ined essent ia l lyby re lax ing  condi t ion (14) in thedef in i t ion of trees.However, this is only the beginning ofwhat needs to be done.
The next quest ionis how d iscont inuous  trees can be producedby phrase-s t ructure  rules.
This question,which is not addressed by McCawley, is farfrom tr iv ial  and turns out to haveinterest ing consequences for the not ion ofad jacency in d iscont inuous  trees.3.
Ad jacency in phrase-s t ruc ture  rules ford iscont inuous  const i tuentsA phrase-s t ructure  rule rewri tes aconst i tuent  into a sequence of pa i rwiseadjacent  const i tuents .
This means that weneed a not ion  of  adjacency ind iscont inuous  trees, for which the obviousdef in i t ion,  g iven the < relat ion, wouldseem to be:(16) two nodes x and y in the node set ofa tree are ad jacent  if and only if x< y and there is no z such that x <z < y.We shall  wr i te "x + y" to indicate thatx and y are ad jacent  (or "neighbours") .
Amoment 's  re f lect ion  shows that this not ionof ad jacency unfor tunate ly  does not helpus in formulat ing rules that could doa n y th i  n g w i t h in  t e rna l  contextconst i tuents .
The  fo l lowing examplei l lustrates this.
Suppose we want togenerate  the d iscont inuous  tree structure:(17) VP /kWake your fr iend upTo generate the top node, we need arule combin ing the V and the NP, like:(18) VP --> V + NPSince the V dominates nodes at e i therside of the NP, however, there is nolef t - r ight  order between the NP and Vnodes, leave alone a ne ighbour  relat ion.For the same reason there would be nole f t - r ight  re lat ion between over lapp ingd iscont inuous const i tuents,  as in (19).These def ic ienc ies  can be remedied byrep lac ing clause (14) in the def in i t ion  ofa tree by the more general  c lause (20).
(19) VPg NPWake the man up who l ives next door.
(20) A nontermina l  node x in a tree isto the left of a node y in the treei f  and only if x's le f tmostdaughter  is left of y's le f tmostdaughter.
(We refra in here from a formaldef in i t ion  of " lef tmost  daughter"  node,which is in tu i t ive ly  obvious.
)Note  that  (20)  is indeed agenera l i za t ion  of the usual not ion ofprecedence in trees, which could also bedef ined by (20).
The recurs ion in (20)comes to an end since the terminal  nodesare required to be tota l ly  ordered.It should also be noted that (20) isnot cons is tent  with c lause (14): by (2@),we do get a precedence re lat ion between anode and its daughter  nodes (except theleftmost  one) and internal  context  nodes.This is not quite unreasonable .
In (21),for example, we do want that X < Y, and(21) XA B Y Cs ince Y < C, that X < C, but not that X <B.
We therefore adapt c lause (14) to theef fect  that a mother  node only precedesinternal  context  nodes and daughter  nodeswhich have internal  context  nodes totheir  left.
Formally:(22) For any nodes x and z in the nodeset N of a tree, if x D z and thereare no nodes u,v in N such that x Du, not x D v, and u < v < z, thennei ther  x < z nor z < x.With the mod i f i ca t ions  (16) and (22),we have a cons is tent  de f in i t ion  of"d iscont inuous  trees" which al lows us towr i te phrase-s t ruc ture  rules conta in ingd iscont inuous  const i tuents  as fol lows:(23) X --> A + B + \[Y\] + Cwhere the square brackets  ind icate thatthe NP is not dominated by the X node,but is only internal  context.
The "+"symbo l  represents  the  not ion  ofadjacency,  def ined as before but now onthe basis of te revised precedencere lat ion "<":206(24) Two nodes x and y in a tree areadjacent if and only if x < y andthere is no node z in the tree suchthat x < z < y.Upon closer inspection, the neighbourre la t ion  de f ined  in th i s  way isunsat isfactory,  however, as the fo l lowingexample i l lustrates.Suppose  we want to generate thefo l lowing (part of a) tree structure:(25) SA B C D ETo generate the S node, we would l iketo write a phrase-s t ructure  rule thatrewrites S into its const i tuents,  l ike(26):(26) S --> P + Q + EHowever, this rule would be of no helphere, since P, Q and E do not form asequence of adjacency pairs, as Q and Eare  not  ad jacent  according to ourdef init ion.
Rather, the correct rule forgenerat ing (25) would be (27):(27) S --> P + Q + \[C\] + \[D\] + EThis is ugly, and even ugl ier rules arerequired in more complex trees withd i scont inu i t ies  at d i f ferent  levels.Moreover, there seems to be somethingfundamenta l ly  wrong, since the C and Dnodes are on the one hand internal  contextfor the S node, according to rule (27),while on the other hand they are alsodominated by S. That is, these nodes areboth "real" const i tuents  of S and internalcontext of S.To remedy this, we introduce a newconcept of ad jacency sequence, whichgeneral izes the t radi t ional  not ion of asequence  of  ad jacency  pa i rs .
Thedef in i t ion goes as fol lows:(28) A sequence (a, b, ..., n) is an(n-place) adjacency sequence if andonly if:(i) every  pa i r  ( i , j )  in thesequence is either an adjacencypair or is connected by asequence of adjacency pairs ofwh ich  a l l  members  are aconst i tuent  of some element inthe subsequence (a, b,..., i);(ii) the elements in the sequenc~ donot share any const i tuents.
.
)For example, in the structure (25) thetriple (P, Q, E) is an adjacency sequencesince (P, Q) is an adjacency pair and Qand E are connected by the sequence ofadjacency pairs Q-C-D-E, with C and Dconst i tuents  of P and Q, respect ively.Another example of an adjacency sequencein (25) is the tr iple (P, B, D).
Thetr iple (P, B, C), on the other hand, isnot an adjacency sequence, since P and Cshare the const i tuent  C.The use of this not ion of adjacencysequence is now that the sequence ofconst i tuents,  into which a nonterminal  isrewr i t ten by a phrase-s t ructure  rule,forms an ad jacency sequence in thissense .
The phrase-s t ructure  grammarcons ist ing of rules of this kind we callDiscont inuous Phrase-St ructure  Grammar orDPSG.
~jIt may be worth emphas iz ing that thisnot ion of phrase-s t ructure  rule is agenera l i zat ion  of the usual notion, sincean adjacency sequence as def ined by (28)subsumes the usual not ion of sequence ofad jacency pairs.
We have also seen thatt rees  w i th  d i scont inu i t ies  are agenera l i zat ion  of the tradit ional  treeconcept .
There fore ,  phrase-s t ructurerules of the famil iar  sort coincide withDPSG ru les  w i thout  d i scont inuousconst i tuents ,  and they produce thefami l ia r  sor t  of  t rees  w i thoutd i scont inu i t ies  .
In o ther  words ,DPSG-rules can simply be added to ac lass ical  PSG ( including GPSG ,-~'--~ith theresult  that the grammar generates treeswith d iscont inu i t ies  for sentences withd iscont inuous const i tuents,  whi le doingeveryth ing else as before.4.
DPSG and pars ingFrom a parser 's  point of view, adef in i t ion of ad jacency as given in (24)is not suff ic ient,  s ince it only appl iesto nodes within the context of a tree.
Aparser has the job of const ruct ing  such aset from a co l lect ion of substructuresthat may or may not fit together to formone or more trees for the entiresentence.
Whether a number of subtreesfit together is not so easy if the endproduct  may be a t ree  w i thd i scont inu i t ies ,  since the adjacencyrelat ion def ined by (20) and (24) al lowsne ighbour ing  nodes to have commondaughters.
This is c lear ly undesirable.We therefore modify the def in i t ion (20)of adjacency by adding the requirementthat two substructures  (or their topnodes)  can only have a precedencerelat ion if they do not share anyconst i tuents:207(29) A node x in a co l lect ion ofsubstructures for a potent ia l  tree(possibly with d iscont inu i t ies)  isto the left of a node y in the sameqol lect ion if and only if x'sleftmost daughter  is left of y'slef tmost  daughter,  and there is nonode z which is shared by x and y.If the nodes x and y in this def in i t ionbelong to the same tree, the addi t iona lrequirement that x and y do not share anyconst i tuent  is automat ica l ly  sat isf ied,due to the "single mother"  condit ion.A parser  for DPSG meets certa incompl icat ions  which do not ar ise incontext - f ree  parsing.
To see thesecompl icat ions,  we cons ider  what wouldhappen when a char t  parser  fo rcontext - f ree  pars ing (see Winograd, 1983)is appl ied to DPSG.Context - f ree chart pars ing is a matterof f i t t ing ad jo in ing  pieces together  in achart.
For example, cons ider  the grammar:(30) S --> VP NPNP --> DET NVP --> VFor the input "V DET N", a chart  parserbegins by in i t ia l i z ing  the chart asfol lows:(31)1 2 3 4Given the arc V(1,2) in the chart, we lookup all those rules which have a "free" Vas the f irst  const i tuent .
These rules areplaced in a separate list, the "act ive-rule l ist".
We "bind" the V's in theserules to the V(1,2) arc, i.e.
we estab l ishl inks between them.
When all const i tuentsin a rule are bound, the rule is appl ied.In this case, the VP(I ,2) wi l l  be built.This procedure is repeated for the new VPnode.
When noth ing more can be done, wemove on in the chart.
The final result  inthis example is the chart (32).
(32)VP NPI 2 3 4When we use DPSG rules and fo l low the sameprocedure, we run into d i f f icu l t ies .Consider the example grammar (33).
(33) S --> VP + NPNP --> DET + NVP --> V + \[NP\] + PARTFor the input "V DET N PART" the f irstconst i tuent  that can be built  is NP(2,4);the second is VP(I ,5).
The VP wil lact ivate the S rule, but this rule wil lnot be appl ied since the NP does not havea binding.
And even if it did, the rulewould not be app l icab le  as the VP(I ,5)and the NP(2,4) are not ad jo in ing  in thet rad i t iona l  sense.In the next sect ion we descr ibe  theprovis ions,  added to a standard chartparser in order to deal with thesed i f f icu l t ies .5.
A modi f ied  chart  parser  for DPSG5.1 F inding all app l i cab le  rulesTo make sure that the parser f inds allapp l icab le  rules of a DPSG, the fo l lowingadd i t ion  was made to the pars inga lgor i thm.If a rule with internal  context  isappl ied, we f irst  fo l low the standardprocedure;  subsequent ly  we go through allthose rules that appear on the act ive-rule l ist as the result  of app ly ing  thes tandard procedure,  g iv ing  b indings tothose free const i tuents  that correspondin category  to the context -e lement (s )  inthe rule that was appl ied.In the case of (33), this means thatjust before app l i cat ion  of the VP rule(after the PART has been bound), we havethe act ive- ru le  l ist (34).
(Under l in ingindicates that a const i tuent  is bound).
(34) VP --> V ?
\[NP\] + PARTVP --> \[ + \[NP\] + PARTVP --> ~+ \[NT\] + PARTwWe now apply the rule bu i ld ing  the VP.The standard procedure wil l  add one ruleto this list, namely S --> VP + NP.
TheVP is g iven a binding, so we obta in thefo l lowing act ive - ru le  list:(35) S --> VP + NPVP --> 9--+ \[NP\] + PARTVP --> \[ ?
\[NP\] + PARTVP --> ~ + \[N~\] + PARTSince the VP-bu i ld ing  rule conta inedan in terna l  context  e lement,  theaddi t iona l  procedure ment ioned above isnow appl ied; a b inding is g iven to the NPin (a copy of) the S rule.
The S arc isnow bui lt  in the chart, which does notcause any new rules to be added to theact ive - ru le  list.
There are no free S's208in the old act ive rule list either, whichshould be given a binding.
So, we can lookfor other rules conta in ing a free NP.There is one such rule, the second in(35), but this one will be neglectedbecause it was already present in the rulelist before; see (34).
Note that it isessential  that this rule is neglected, asthere is already a version of the VP-ruleon the act ive-ru le  l ist contain ing an NPw i th  the  s a me b ind ing  as thecontext-e lement.It may also be noted that we havecombined const i tuents  in this example thatare not adjo in ing in the tradit ional  sense(i.e., in the sense of success ive vertexnumbers).
In part icular,  we have appl iedthe rule S --> VP(I,5) + NP(2,4).
In acase like this, where the vertex numbersindicate that the const i tuents  in a ruleare overlapping, we must test whetherthese const i tuents  form an adjacencysequence.
This test is descr ibed below.5.2 The adjacency sequence testIn order to make sure that onlyconsi tuents are combined that form anadjacency sequence, the parser keeps trackof daughter nodes and internal context ina so-cal led "construct ion list", which isadded to each arc in the chart; internalcontext nodes are marked as such in theselists.
Whether two (or more) nodes share aconstituent,  in the sense of commondomination, is easi ly detected with thehelp of these lists.By organ iz ing  these l ists in apart icular  way, moreover,  they can also beused to determine whether a sequence ofconst i tuents  is an adjacency sequence inthe sense of def in i t ion (28).
This isachieved by order ing the elements inconstruct ion l ists in such a way that anelement is always either dominated by itspredecessor  in the list, or is internalcontext of it, or is a r ight neighbour  ofit.
For instance, in the above example(25), P and Q have the construct ion lists(36):(36) P:(A, \[B\], C)Q:(B, \[C\], D).The rule S --> P + Q + E is nowappl icable, since the construct ion listfor S would be the result of merging P'sand Q's l ists with that of E, which issimply E:(), with the result  S:(A, B, C,D, E).
From this list, it can be concludedthat the tr iple (P, Q, E) is an adjacencysequence, since (P, Q) is an adjacencypair (since P's leftmost daughter, i.e.
A,is adjacent to Q's leftmost daughter, i.e.B, as can be seen also in the construct ionlists), and Q and E are separated in S'sconstruct ion list by the adjacency pair(C, D), whose elemehts are both daughtersof P.An example  where  the adjacencysequence test would give a negat iveresult, is where the rule Y --> X + B + Eis considered for a const i tuent  X withconstruct ion list X:(A, \[B\], \[C\], D).
Therule is not appl icable,  since the tr iple(X, B, E) would not form an adjacencysequence according to the construct ionlist that the node Y would get, namely:(37) Y:(A, B, \[C\], D, E).The const i tuents  B and E are separatedin (37) by the sequence (\[C\], D), where Cis marked as internal  context; therefore,C is not dominated by either X or B, andhence the test correct ly  fails.The current ly  implemented vers ion ofthe DPSG parser is in fact based on amore restr icted not ion of ad jacencysequence, where two const i tuents  areviewed as shar ing a const i tuent  z notonly if they both dominate z, but also ifone of them dominates z and the other hasan internal  context node that dominates z(see note I).
This means that structureslike (38) are not generated, since P andT would share node B, and T and R wouldshare node C.(38) TA B C D ENote that a st ructure like (38) wouldbe an i l l - formed tree, since the nodes Band  C v io la te  the s ing le -mothercondit ion, and the nodes Q and R,moreover,  are not connected to the rootnode.To deal with this more restr ictednot ion  of ad jacency  sequence, theadmin is t rat ion  in the construct ion l istsis actual ly  s l ight ly  more compl icatedthan descr ibed above.6.
Conclus ionsOur f indings concern ing the use ofd iscont inuous const i tuents  in syntact icrepresentat ions,  phrase-s t ructure  rule,and parsers may be summarized as fol lows.I.
T r  e e -  1 i ke  s t r uc tures  w i thd iscont inu i t ies  can be given a precisedef in i t ion,  which makes them formal lyas acceptable  for use in syntact ic209representation as the familiar o rd~tree structures.2.
D iscont inuous  constituents can bea l lowed in phrase-structure rulesgenerating trees with discontinuities,p rov ided  we g ive  a su i tab legenera l i za t ion  to the notion ofadjacency.3.
T rees  w i th  d i scont inu i t ies  aregenera l i za t ions  of ordinary treestructures, and phrase-structure ruleswith discontinuous constituents aregenera l i za t ions  o f  o rd inaryphrase-structure rules.
Both conceptscan  be  added to  o rd inaryphrase-structure grammars, includingGPSG, with the effect that suchgrammars  generate  t rees  w i thd iscont inui t ies  for sentences withd i scont inuous  const i tuents ,  whileeverything else remains the same.4.
Phrase -s t ruc ture  ru les  w i thdiscontinuit ies can be handled by achart parser for context-free grammarby mak ing  two additions in theadministration; one in the active-rulel i s t  fo r  ru les  conta in ing  adiscontinuous element to make sure thatno parse is overlooked, and one in thearcs in the chart to check thegeneral ized adjacency relation.NOTESI) In this paper, sharing a constituenthas been taken simply as common dominationof that constituent.
An interesting issueis whether we should take sharing aconstituent to include the followings i tuat ion .
A node  x dominates  aconstituent z, while another node y isrelated to z in such a way that z isdominated by a node w which is internalcontext for y.
(And still more complexdefinit ions of constituent sharing areconceivable within the framework of DPSG.
)Decisions on this point turn out to havefa r - reach ing  consequences  for  thegenerative capacity of DPSG.
With thesimple notion of sharing used in thispaper, it is easily proved that DPSG ismore powerful than context-free PSG, whilefurther restrictions on the precedencerelation in terms of constituent sharingmay have the effect of making DPSG weaklyequivalent to context-free grammar.2) For applications of DPSG and apredecessor, which was called "augmentedphrase-const ruc t ion  grammar"  insyntactic/semantic analysis and automaticgeneration of sentences, the reader isreferred to Bunt (1985; 1987).ACKNOWLEDGEMENTSI would like to thank Masaru Tomitafor st imulating discussions about phrase-structure grammar and parsing in general,and DPSG in particular.REFERENCESBunt, H.C. (1985) Mass terms andmode l - theoret i c  semantics.
CambridgeUniversity Press, Cambridge, England.Bunt, H.C. (1987) Utterance generationfrom semantic representation augmentedwith pragmatic information.
In G.
Kempen(ed.)
Natura l  language generation.Kluwer/Nijhoff, The Hague.Bunt, H.C., Beun, R.J., Dols, F.J.H.,Linden, J.A.
van der, & Schwartzenberg,G.O.
thoe (1985) The TENDUM dialoguesystem and its theoretical basis.
IPOAnnual Progress Report 19, 105-113.Emonds, J.E.
(1976) A transformationalapproach to English syntax.
AcademicPress, New York.Emonds ,  J .E .
(1979)  Appos i t i verelatives have no properties.
LinguisticsInquiry 10, 211-243.Gazdar, G., Klein.
E., Pullum, G.K. &Sag ,  I .A .
(1985)  Genera l i zedPhrase-St ruc ture  Grammar .
HarvardUniversity Press, Cambridge, MA.Harman, G. (1963) Generative grammarswithout transformaton rules: a defense ofphrase structure.
Language 39, 597-626.Kay, M. (1979) Functional grammar.
InProc.
-Fifth An~ual '  ~eeting of theBerkeley Linguistics Society.
Berke ley ,CA, 142-158.
'McCag l~-  J.D.
(1982) Parentheticalsand Discontinuous Constituent Structure.Linguistic Inquiry 13 (I), 91-106Posta l ,  P .M (1964)  Const i tuentstructure.
Supplement to InternationalJournal of American Linguistics 30.Pullum, G.K. (1984) On two recentattempts to show that English is not aCFL.
Computational Linguistics 10 (3/4),182-187.Ross, J.R. (1973) Slifting.
In M.Gross, M. Halle & M.P.
Sch~tzenberger(eds.)
The formal analysis of naturallanguage.
Mouton, The Hague.Sheil, B.
(1976) Observations oncontext-free parsing.
Statist ical Methodsin Linguistics, 71-109.Tomita, M. (1986) Efficient parsingfor natural language.
Kluwer AcademicPublishers, Boston/Dordrecht.Wall, R.E.
(1972) Introduction toMathemat ica l  L ingu is t i cs .Prentice-Hall, Englewood Cliffs.Winograd, T. (1983) Language as acogn i t ive  process .
Add ison-Wes ley ,Reading, MA.210
