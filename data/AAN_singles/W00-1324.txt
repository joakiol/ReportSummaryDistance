A query tool for syntactically annotated corpora*Laura  Ka l lmeyerUFRL,  Universit4 Paris 72, place Jussieu75251 Paris cedex 05lmara ,  kallmeyer@linguist, jussieu, f rAbst rac t ;This paper presents a query tool for syntacti-caUy ~.nnotated corpora.
The query tool is de-veloped to search the Verbmobil treebanks an-notated at the University of Tfibingen.
How-ever, in principle it also can be adapted toother corpora such as the Negra Corpus, thePenn Treebank or the French treebank devel-oped in Paris.
The tool uses a query languagethat allows to search for tokens, syntactic at-egories, grammatical functions and binary re-lations of (immediate) dominance and linearprecedence between odes.
The overall ideais to extract in an initializing phase the rele-vant information from the corpus and store itin a relational database.
An incoming queryis then translated into a corresponding SQLquery that is evaluated on the database.1 In t roduct ion1.1 Syntact ic  annotat ion  andl inguist ic researchWith the increasing availability of largeamounts of electronic texts, linguists have ac-cess to more and more material for empiri-cally based linguistic research.
Furthermore,electronic orpora are more and more richlyannotated and thereby more and more de-tailed and structured information containedin the corpora becomes accessable.
Currentlymany corpora are tagged with morphosyntac-tic categories (part-of-speech) and there arealready several syntactically annotated cor-pora.
Examples are the Penn Treebank (Mar-cus et al, 1994; Bies et al, 1995) annotatedat the University of Pennsylvania, the Ne-gra corpus (Brauts et al, 1999) developed inSaarbriicken, the Verbmobil treebank~ (Hin-richs et al, 2000) annotated in Tiibingen*The work presented here was done as part of aproject in SFB 441 "Linguistic Data Structures" atthe University of Tiibingen.and the French treebank annotated in Paris(Abeill4 and C14ment, 1999).However, in order to have access to theserich linguistic annotations, adequate querytools are needed.In the following, an example of a linguisti-cally relevant construction is considered thatillustrates how useful access to structural in-formation in a corpus might be.fiber Chomsky habe ich ein Buchabout Chomsky have I a book(1) gelesenread'I have read a book about Chomsky'Linguists are often concerned with con-structions that seem not very natural andwhere intuitions about grammaticality fail.An example is (1) where we have an accusativeobject (ein Buch) which is positioned betweenthe two verbal elements and whose modifier(the prepositional phrase iiber Chomsky) istopicailzed.Some people claim (1) to be ungrammaticalwhereas other people are inclined to accept it.In these cases it is very useful to search in anadequate corpus for more natural data show-ing the same construction (see also (Meurers,1999) for other ex~.mples of the use of corporafor linguistic research).In order to find structures like (1) in a Ger-man corpus, one needs to search for(a) a prepositional phrase modifying the ac-cusative object and preceding the finiteverb (i.e.
in the so-called vorfeld), and(b) an accusative object between finite verband infinite verb forms (i.e.
in the so-called rnittelfeld)Obviously, two things need to be availablein order to enable such a search.
On the onehand, one needs a corpus with an annotationthat is rich enough to encode the properties190(a) and (b).
On the other hand, one needs aquery tool with a query language that allowsto express the properties (a) and (b).Corpora encoding features uch as (a) and(b) are for example the Verbmobil treebanks.1.2 Cur rent  query  toolsQuery tools such as xkwic (Christ, 1994) thatallow to search on the tokens and their part-of-speech categories using regular expressionsdo not allow a direct search on the syntac-tic annotation structures of the corpus, i.e.
asearch for specific relations between odes inthe annotation such as dominance or linearprecedence.
Therefore many queries a linguistwould like to ask using a syntactically anno-tated corpus either cannnot be expressed in aregular expression based language or at leastcannot be expressed in an intuitive way.Even more recent query languages asSgmlQL (Le Maitre et al, 1998) and XML-QL(Deutsch et al, 1999) that refer to the SGMLor XML annotation of a corpus are in gen-eral not adequate for syntactically annotatedcorpora: if the annotations are trees andthe nesting of SGML/XML elements encodesthe tree structure, such query languages worknicely.
With regular path expressions as sup-ported by XML-QL, it is possible to searchnot only for parent but also for dominancerelations.
However, in order to deal withdiscontinuous constituents, most syntacticallyannotated corpora do not contain trees butslightly different data structures.
The PennTreebank for example consists of trees withan additional coindexation relation, Negra al-lows crossing branches and in Verbmobil, anelement (a tree-like structure) in the corpusmight contain completely disconnected nodes.In order to express these annotations in XML,one has to encode for example ach node andeach edge as a single element as in (Mengeland Lezius, 2000).
But then a query for adominance relation can no longer be formu-lated with a regular path expression.In this paper, I propose a query tool thatallows to search for parent, dominance andlinear precedence r lations even in corpora n-notated with structures slightly different fromtrees.2 The  Verbmobi l  t reebanksThe German Verbmobil corpus (Stegmann etal., 1998; Hinrichs et al, 2000) is a tree-bank annotated at the University of TiibingenSIMPXIVF!IPX- - IINXIDI IAPPR NEfiber C.II ILK VCI I IVXFIN NX VXINFI I II I \[VAFIN PPER VVPPhabe ich gel~en?IMFIINXI II IART NNein BuchFigure 1: Annotation of (1) in Verbmobil for-matthat contains approx.
38.000 trees (or rathertree-like annotation structures ince, as al-ready mentioned, the structures are not al-ways trees).
The corpus consists of spokentexts restricted to the domain of arrangementof business appointments.The Verbmobil corpus is part-of-speechtagged using the Stuttgart Tiibingen tagset(STTS) described in (Schiller et al, 1995).One of the design decisions in Verbmobilwas that for the purpose of reusability of thetreebank, the annotation scheme should notreflect a commitment to a particular syntac-tic theory.
Therefore a surface-oriented amnotation scheme was adopted that is inspiredby the notion of topological fields in the senseof (HShle, 1985).
The discontinuous position-ing of the verbal elements in verb-first andverb-second sentences (as in (1) for example)is the traditional reason to structure the Ger-man sentence by means of topological fields:The verbal elements have the categories LK( linke Klammer) and VC (verbal complex), androughly everything preceding the LK forms the'voffeld' VF, everything between LK and vcforms the 'mittelfeld' MF and the 'nachfeld' NFfollows the verbal complex.The Verbmobil corpus is annotated withsyntactic ategories as node labels, grammat-ical functions as edge labels and dependencyrelations.
The syntactic ategories are basedon traditional phrase structure and on the the-ory of topological fields.
In contrast o Negraor Penn Treebank, there are neither crossingbranches nor empty categories.
Instead, de-191pendency relations are expressed within the?
grammatical functions (e.g.
OA-MOD for a con-stituent modifying the accusative object).A sample annotation conformant o theVerbmobil annotation scheme is the annota-tion of (1) shown in Fig.
1.
(The elements setin boxes are edge labels.
)In order to search for structures as in Fig.
1,one needs to search for trees containing a nodenl with label PX and grammatical function0A-MOD, a node n2 with label VF that domi-nates nl, a node n3 with label MF and a noden4 with label NX and gra.mmatical function 0Athat is immediately dominated by n3.Evaluating a query for structures as inFig.
1 on the Verbmobil corpus gives resultssuch as (2) that sound much more naturalthan the constructed example (1).?
t ja ,  fiber Flugverbindungen habe ichabout flight connections have I(2) leider keine Information.unfortunately no information'unfortunately I have no informationabout flight connections.
'This example illustrates the usefulness ofsyntactic annotations for linguistic research?
and it shows the need of query languages andquery tools that allow access to these annota-tions.3 The  query  language3.1 SyntaxAs query language for the German Verbmo-bil corpus, a first order logic without quan-tification is chosen where variables are inter-preted as existentially quantified.
Negationis only allowed for atomic formula.
It seemsthat even this very simple logic already givesa high degree of expressive power with respectto the queries linguists are interested in (seefor example (Kallmeyer, 2000) for theoreticalinvestigations of query languages).
However,it might be that at a later stage the querylanguage will be extended.Let C (the node labels, i.e.
syntactic ate-gories and part-of-speech categories), E (theedge labels, i.e.
grammatical functions) and T(the terminals, i.e.
tokens) be pairwise disjointfinite sets.
>, >>, .
.
are constants for thebinary relations immediate dominance (par-ent relation), dominance (reflexive transitiveclosure of immediate dominance) and linearprecedence.
The set 1N of natural numbers isused as variables.
Further, ~, I , !
are logi-cal connectives (conjunction, disjunction, andnegation).Def in i t ion 1 ((C, E, T) -quer ies)( C, E, T)-queries are inductively defined:(a) for all iE  IN, tE  T:token( i )=t  and token( i )  !=t arequeries,(b) for all iE  IN, cE C:cat ( i )=c and cat  ( i )  !=c are queries,(c) for all iE  IN, eE E:f c t ( i )=e  and f c t ( i ) !=e  are queries,(d) for all i ,  j E IN:i > j and i  !> j are queries,i >> j and i  !>> j are queries,i .
.
j and i  !
.
.
j are queries,(e) for all queries ql, q2:ql ~ q2 and (ql I q2) are queries.Of course, when adapting this language toanother corpus, depending on the specific an-notation scheme, other unary or binary pred-icates might be added to the query language.This does not change the complexity of thequery language in general.However, it is also possible that at a laterpoint negation eeds to be allowed in a generalway or that quantification needs to be addedto the query language for linguistic reasons.Such modifications would affect the complex-ity of the language and the performance ofthe tool.
Therefore the decision was taken tokeep the language as simple as possible in thebeginning.3.2 In tended mode lsIn the case of the German Verbmobil corpus,the data structures are not trees, since struc-tures as in Fig.
2, which shows the annotationof the long-distance wh-movement in (3), canoccur.
The  structure in Fig.
2 does not havea unique root node, and the two nodes withlabel SINPX have neither a dominance nor alinear precedence r lation.
(3) wen glaubst du liebt Mariawhom believe you loves Maria'whom do you believe Maria loves'Therefore, the models of our queries are de-fined as more general structures than finitetrees.A model is a tuple (/g, T ~, T), ?, p, ~/, a)where/g is the set of nodes, 7 ~, T~ and ?
are the192SIMPXI ID DVF MFI I1 INX NXI II IPWS NEwen MariaIE3SIMPX \]I ID \[3I ILK MF LKI I II I IVXFIN NX VXFINI I II I IWFIN PPER VVFINglaubst du liebtFigure 2: Annotation of (3) in Verbmobil for-matbinary relations immediate dominance (par-ent), dominance and linear precedence, # isa function assigning syntactic categories orpart-of-speech tags to nodes, r/ is a functionmapping edges to grammatical functions, anda assigns tokens to the leaves (i.e.
the nodesthat do not dominate any other node)., .
?
,Def in i t ion 2 (Query  model )Let C, E and T be disjoint alphabets.
(ILl, 79, 73, ?, #, rl, a) is a query model with cat-egories C, edge labels E and terminals T i f f1.
l~ is a finite set with Lt n (C U E U T) = O,the set of nodes.2.
P, ?, 73 ?
ILl ?
U, such that:(a) 79 is irreflexive, and for all x ?
ILlthere is at most one v ?
ILl with(v, x) ?
79.
(b) 73 is the reflexive transitive closure of79, and 73 is antisymmetric.
(c) ?
is transitive.
(d) .for all x, y ?
lg: if  (x, y) ?
?, then<~, y) ?
73 and (u, x) ?
73.
(e) for all z,y ?
U: (x,y) ?
?
i# forall z, w ?
ld with (x, z), (y, w) ?
73,(z, w) ?
?
holds.
(f) for all x, y, z ?
L(: i f  (x, y), (x, z) ?
73,then either (x, z) ?
73 or (z, x) ?
73 or(x, z) ?
?
or (z, x) ?
?.3.
# : Lt ~ C is a total .function.4.
rl : 7 ~ ~ E is a total .function.5.
a : {u ?
Ltl there is no u' with (u,u') ?79} ~ T is a total .function.With (b), (c) and (d), ?
is also irreflexiveand antisymmetric.In contrast o finite trees, our query mod-els do not necessarily have a unique rootnode, i.e.
a node that dominates all othernodes.
Consequently, the so-called exhaus-tiveness property does not hold since twonodes in a query model might be completelydisconnected.
In other words, it does not holdin general that (x,y) ?
73 or (y,x) ?
73 or(x, y) ?
?
or (y, x) ?
?
for all x, y ?
/4 .
Thisholds only for nodes x, y ?
/4  where a node zexists that dominates x and y.3.3 Semant icsSatisfiability of a query q by a query modelM is defined in the classical model-theoreticway with respect o an injective assignment gmapping node variables to nodes in the querymodel.Def in i t ion 3 (Satisf iabi l i ty)Let M = (Lt, P, 73, ?, #, rl, a) be a query modeland let g : iN ~ Lt be an injective .function.For all i6  iN, t6  T, c6 C, e6 E:?
M ~g token( i )=t i f fa(g( i ) )  =t.?
M ~g token( i ) !=t  i f fa(g( i ) )  #t.?
M ~g cat ( i )=c  iff#(g(i)) =c.?
M ~g cat ( i )  !=c iff ~(g(i)) ~c.?
M ~g fc t ( i )=e  iff there is a u 6 lg with(u,g(i)) 6 P and r/((u,g(i))) =e.?
M ~9 fc t (?)
!=e iffthere is no u 6 Lt with(~,g(i)) e p and ~((~,g(i)>) =eFor all i ,  j 6 iN:?
i ~g i > j iff (g(i),g(j)) 6 7 9 (i.e.
g(i)immediately dominates g(j))?
M ~9 i !> j iff (g(i),g(j)) ~ 79?
i ~g i >> j i f f (g( i ) ,g( j ) )  6 73 (i.e.
g(i)dominates g(j))?
MEg i !>> j i f f (g( i ) ,g( j ) )  ~73?
i ~g i .
.
j iff (g(i) ,g(j))  6 ?(i.e.
gCi) is le# oSg(j))?
M~g i !..
j i f f (g( i ) ,g( j ) )  ~?For all queries ql, q2:?
M~gqx a q2 i f fM~gql  andM~gq2?
M ~a (q l  I q2) i f fM  ~a ql o rM ~g q2.Note that the condition that g needs tobe injective means that different variables areconsidered to refer to different-nodes.
In thisrespect, Def.
3 differs from traditional model-theoretic semantics.193node_pair_i\[tree_id\[no.dellnode2 \[fi._id \[pair_class\[ clad \[ n._idl \ [ ~ ~  pl\[ p21 dl I d21 11\[12 Iode_c\]ass \[ n-id \] cat I fct Itokens../\[ tree_id \[ n_A,d_.~ I word JFigure 3: The relational database schemaAs an example, consider the query for struc-tures as in (1) that is shown in (4).
The struc-ture in Fig.
1 is a query model satisfying (4).
(4) cat(1)=PX & fct(1)=0A-MOD-g~ cat(2)=VF ~ 2>>1cat (3)=?IF ~ cat (4) =NX& fct(4)=0A ~ 3>>44 Stor ing  the  corpus  in a databaseAs already mentioned, the general idea of thequery tool is to store the information onewants to search for in a relational databaseand then to translate an expression in thequery language presented in the previous ec-tion into an SQL expression that is evaluatedon the database.
The first part is performedby an initializing component and needs to bedone only once per corpus, usually by the cor-pus administrator.
The second part, i.e.
thequerying of the corpus, is performed by aquery component.The tool is implemented in Java with JavaDatabase Connectivity (JDBC) as interfaceand mysql as database management system.4.1 The  relat ional  database  schemaThe German Verbmobil corpus consist of sev-eral subcorpora.
In the relational databasethere are two global tables, node_class andpair_class.
Besides these, for each of the sub-corpora identified by i there are tables to-kens_/ and node_pair_/.
The database schemais shown in Fig.
3.
The arrows representforeign keys.
The colnmn cl_id in the ta-ble node_pair_/, for example, is a foreign keyreferring to the colnmn clad in the tablepair_class.
This means that each entry forclad in node_pair_/uniquely refers to One en-try for clad in pair_class.The content of the tables is as follows:?
node_class contains node classes charac-terized by category (node label) and gram-matical function (edge label between thenode and its mother).
Each node classhas a unique identifier, namely the columnn_id.?
pair_class contains classes of node pairscharacterized by the two node classes andthe parent, dominance and linear prece-dence relation between the two nodes.
Thecolumns pl, p2, dl, d2, 11 and 12 stand forbinary relations and have values 1 or 0 de-pending on whether the relation holds ornot.
pl signifies immediate dominance ofthe first node over the second, p2 immedi-ate dominance of the second over the first,d l  dominance of the first over the second,etc.
Each node pair class has a unique iden-tifier, namely its clad.?
tokens_/ contains all leaves from subcor-pus i with their tokens (word).?
node_pair_/contains all node pairs fromsubcorpus i with their pair class.
Ofcourse, only pairs of nodes belonging to onesingle annotation structure are stored.4.2 Init ia l iz ing the  databaseThe storage of the corpus in the database isdone by an initializing component.
This com-ponent extracts information from the struc-tures in export format (the format used for theGerman Verbmobil corpus) and stores themin the database.
The export format explicitlyencodes tokens, categories and edge labels,linear precedence between leaves and the par-ent (immediate dominance) relation.
Domi-nance and linear precedence in general how-ever need to be precompiled.First the dominance relation is computedsimply as reflexive transitive closure of theparent relation.Linear precedence on the leaves can be im-mediately extracted from the export format.When computing linear precedence for inter-nal nodes, the specific properties of the datastructures in Verbmobil (see Section 3) mustbe taken into account.
Unlike in finite trees,for two nodes Ul,U2, the fact that ul domi-nates some x and u2 dominates some y and xis left of y is not s,fl~cient to decide that Ulis left of u2.
Instead (see axiom (e) in Def.
2)the following holds for two nodes ul, u2: ul isleft of u2 iff for all x ,y  dominated by ul ,u2respectively: x is left of y.In general, the database schema itself does194sche inbar  ADV - -  HD 500n icht  PTKNEG - -  HD 501be ides  P IS  - -  HD 502zusammen ADV - -  HI) 503$.
- -  - -  0#500 ADVX - -  - 505#501 ADVX - -  - 505#502 NX - -  HD 504#503 ADVX - -  - 504#504 NX - -  HI) 505#505 NX .
.
.
.
0#E0S 24Corresponding structure:NXIINXI.B B @I \] I IADVX ADVX NX ADVXI l I II I I \]ADV PTKNEG PIS ADVschembar nicht beides zus.195Figure 4: Export format of sentence 24 in cd20and corresponding structurenot reflect he concrete properties of the querymodel, in particular the properties of the bi-nary relations are not part of the databaseschema, e.g.
considering only the database,the dominance and linear precedence r lationsare not necessarily trA.n~itive.
Therefore, thequery tool can be easily adapted to other datastructures, for example to feature structureswith reentrancy as annotations.
In this case,a modification of the part of the initializingcomponent that computes the binary relationswould be sufficient.As an example, consider how sentence 24in the subcorpus cd20 (identifier 20) is storedin the database.
This sentence was chosenfor the simple reason that it is not too longbut contains enough nodes to provide a usefulexample.
Besides this, its construction and itstokens are not of any interest here.Fig.
4 shows the sentence in its export for-mat, i.e.
the way it originally occurs in thecorpus, together with a picture of the corre-sponding structure.
Parts of the tables in thetokens_20tree_id2424242424node word0 scheinbar1 nicht2 beides3 zusammen4node_pair.20treedd nodel24 I 0 24 024 0. ,24 I 9pair_classnode2 clad1 14592 26083 12010 11327did I nJdl nJd2 I pl I P21 dl I d21 11112120 I 13 13 " l 'o lo lo lo l l l o13271 24 25 I '01110111010?
.
.node_classn_id cat fct.
.
.13 ADV HD?
?
.24 NX HD25 NX -Figure 5: Sentence 24 in the databasedatabase concerning sentence 24 are shown inFig.
5.
Each line in the export format cor-responds to one node.
The nodes are as-signed numbers 0, 1, .
.
.
in the order of thelines in the export format.
The nodes withtokens (i.e.
that are leaves) are inserted intothe table tokens_20.
Furthermore, each pairof nodes occurring in sentence 24 is insertedinto the table node_pair_20 together with itspair class.
Both orders of a pair are stored.
1The pair classes and node classes belonging toa pair can be found in the two global tables.Consider for example the nodes 9 and 10 insentence 24 (the node labelled NX that domi-nates beides zusammen and the topmost nodewith label NX).
The c lad of this pair is 1327.
*In a previous version just one order was storedbut it turned out that for some queries this causes anexponential time complexity depending on the numberof variables occurring in the query.
This problem isavoided storing both orders of a node pair.#BOS 24 25 898511955 1The corresponding entry in pair_class tells usthat the second node is the :mother of the first,that the second dominates the first, and thatthere is no linear precedence r lation betweenthe two nodes.
Furthermore, the node classesidentified by n_idl and had2 are such that thefirst node has label NX and grammatical func-tion HD whereas the second\[ has label NX andno grammatical function.4.3 The size of  the  databaseSo far, in order to test the tool, approximatelyone quarter of the German Verbmobil corpusis stored in the database, namely the followingsubcorpora:id sub- trees tokens pairscorpus15 cdl5 1567 15474 132641620 cd20 2151 21069 194105621 cd21 2416 22360 176108222 cd22 1723 16587 122932424 cd24 2255 22763 2129548The table pa~_class has 23024 entries andnode_class has 213 entries.
The following ta-ble shows the current size of the files:Table data file index file(KS) (KB)node_classpair_classtokens_15tokens_20tokens_21tokens_22tokens_24node_pair_15node_pair_20node_pair_21node_pair_22node_pair_241 10585 1500303 293413 403439 423325 311446 4309067 7255613269 10637712039 963838404 6715314557 1166945 Search ing  the  corpusIn order to search the corpus, one needs ofcourse to know the specific properties of theannotation scheme.
These are described in theSTTS guidelines (Schiller et al, 1995) and theVerbmobil stylebook (Stegmann et al, 1998)that must be both available to any user of thequery tool.Currently, the query component does notyet process all possible expressions in thequery language.
In particular, it does notallow disjunctions and it does not allow toquery for tokens.
Other atomic queries com-bined with with negations and conjunctionsare possible.
In particular, complex syntac-tic structures involving category and edge la-bels and binary relations can be searched.
Thequery component will be completed very soonto process all queries defined in Section 3.The query component takes an expressionin the query language as input and trans-lates this into a corresponding SQL expres-sion, which is then passed to the database.As an example, consider again the query (4)repeated here as (5):(5) cat(1)=PX & fct(1)=0A-MOD 8~cat(2)=VF & 2>>1 & cat(3)=MF &cat(4)=NX ~ fct(4)=0A & 3>>4For query (5) as input performed on thesubcorpus cd20, the query component pro-duces the following SQL query:SELECT DISTINCT npl.tree_idFROMnode_class AS ncl, node_class AS nc2,node_class AS nc3, node_class AS nc4,node_pair_20 AS npl, pair_class AS pc1,node_pair_20 AS np2, pair_class AS pc2WHEREncl.cat='PX' AND ncl.fct='0A-MOD'AND nc2.cat='VF ' AND nc3.cat='MF'AND nc4.cat='NX'  AND nc4 .
fc t= '0A 'AND pc1 .n_ id l=nc2 .n_ idAND pcl.n_id2=ncl.n_id AND pcl.dl=lAND pc2 .n_id1=nc3.n_idAND pc2.n_id2=nc4.n_id AND pc2.dl=lAND npl.
cl_id=pcl, c1_idAND npl.tree_id=np2, tree_idAND np2.
cl_id=pc2, cl_id;As a second example consider the search forlong distance wh-movements a in (3).
Theannotation of (3) using the Verbmobil annota-tion scheme was shown in Fig.
2.
Such struc-tures might be characterized by the followingproperties: there is an interrogative pronoun(part-of-speech tag PWS for substituting inter-rogative pronoun) that is part of a simplexclause and there is another simplex clause con-tainlng a finite verb such that the two sim-plex clauses are not connected and the pro-noun precedes the finite verb.
This leads tothe query (6):(6) cat(1)=PWS & cat(2)=SIMPX & 2>>1& cat(3)=SIMPX & cat(4)=VVFIN& 2!>>3 & 3!>>2 & 2!
.
.3  ~ 3!
.
.28~ 1 .
.4  ~ 3>>4196Performed on cd20, (6) as input leads to thefollowing SQL query:SELECT DISTINCT npl.tree_idFROMnode_class AS ncl, node_class AS nc2,node_class AS nc3, node_class AS nc4,node_pair_20 AS npl,pair_class AS pcl,node_pair_20 AS np2,pair_class AS pc2,node_pair_20 AS np3,pair_class AS pc3,node_pair_20 AS np4,pair_class AS pc4WHEREncl.cat='PWS' AND nc2.cat='SIMPX'AND nc3.cat='SIMPX'ANDANDANDANDANDANDANDANDAND.,ANDANDANDANDANDANDANDANDANDANDANDANDANDnc4.
cat='WFIN'pc I. n_idl=nc2, n_idpcl.n_id2=ncl.n_id AND pcl.dl=lpc2.n_idl=nc2 .n_idpc2.
n_id2=nc3, n_idpc2.dl=O AND pc2.d2=Opc2.11=0 AND pc2.12=0pc3.
n_idl=nc 1.n_idpc3.n_id2=nc4.n_id AND pc3.11=1pc4.
n_idl=nc3.n_idpc4.n_id2=nc4.n_id AND pc4.
d1=1npl.
cl_id=pc 1. cl_idnpl.
nodel=np2, node 1np 1. node2=np3, node 1npl.
tree_id=np2, tree_idnp2.
cl_id=pc2, cl_idnp2.
node2=np4, node 1np2.
tree_id=np3, tree_idnp3.
cl_id=pc3, cl_idnp3.
node 2=np4.
node 2np3.
tree_id=np4, tree_idnp4.
cl_id=pc4, cl_id;Currently the database and the tool arerunning on a Pentium II PC 400MHz 128MBunder Linux.
On this machine, example (5)takes 1.46 sec to be answered by mysql, andexample (6) takes 6.43 sec to be answered.This shows that although the queries, in par-ticular the last one, are quite complex and in-volve many intermediate r sults, the perfor-mauce of the system is quite efficient.The performance of course depends cru-cially on the size of intermediate results.In cases where more than one node pair issearched for (as in the two examples above)the order of the pairs is important since theresult set of the first pair restricts the secondpair.
In (5) for example, first a node pair witha PX with function OA-MOD dominated by a VFis searched for.
Afterwards, the search for theNX with function 0A in the lffF is restricted tothose trees that were found when searchingfor the first pair.
Obviously, the first pair ismuch more restrictive than the second.
If theorder is reversed, the query takes much moretime to process.
Currently the ordering of thepairs needs to be done by the user, i.e.
dependson the incoming query.
However, we plan toimplement at least partly an ordering of thebinary conjuncts in the query depending onthe frequency of the syntactic ategories andgrammatical functions involved in the pairs.The obvious advantage ofusing a relationaldatabase to store the corpus is that some partsof the work are taken over by the databasemanagement system such as the search of thecorpus.
Furthermore, and this is crucial, theindexing functionalities of the database man-agement system can be used to increase theperformance of the tool, e.g.
indexes are puton clad in node_pair_/and on nAdl and had2in pair_class.6 Conc lus ion  and  fu ture  workIn this paper, I have presented a query tool forsyntactically annotated corpora that is devel-oped for the German Verbmobil treebank an-notated at the University of Tiibingen.
Thekey idea is to extract in an initializing phasethe information one wants to search for fromthe corpus and to store it in a relationaldatabase.
The search itself is done by trans-lating an input query that is an expression ia simple quantifier f ee first order logic into anSQL query that is then passed to the databasesystem.An obvious advantage ofthis architecture isthat a considerable amount of work is takenover by the database management system andtherefore needs not to be implemented.
Fur-thermore, the mysql indexing functionalitiescan be used to directly affect he performanceof the search.The query tool is work in progress, and Ibriefly want to point out some of the thingsthat still need to be done.
First, the set ofqueries the tool can process needs to be ex-tended to all queries allowed in the query lan-guage.
This will be done very soon.
An-other task for the near future is, as men-tioned in the previous ection, to add an or-197dering mechanism on binary conjuncts in or-der to ensure that the more restrictive nodepairs are searched for first.
Further, the de-sign of a graphical user-interface to enter thequeries is planned, allowing to specify queriesby drawing partial trees instead of typing inthe expressions in the query language.
Finally,we also want to implement a web-based user-interface for the query tool.Besides these tasks that all concern the cur-rent query tool for the German Verbmobil cor-pus, a more general issue to persue in the fu-ture is to adapt the tool to other corpora.
Insome cases, this implies a modification of theway binary relations are precompiled, and insome other cases this would even lead to amodification of the query language and thedatabase schema, namely in those cases whereother binary relations are needed, e.g.
thecoindexation relation in the case of the PennTreebank.AcknowledgmentsFor fruitful discussions I would like to thankOliver Plaehn and Ilona Steiner.
Further-more, I am grateful to three anonymous re-viewers for their valuable comments.Re ferencesAnne Abeill~ and Lionel ClEment.
1999.
A taggedreference Corpus for French.
In Proceedings offEA CL-LINC, Bergen.Ann Bies, Mark Ferguson, Karen Katz, andRobert MacIntyre.
1995.
Bracketing Guidelinesfor Treebank II Style Penn Treebank Project.University of Pennsylvania.Thorsten Brants, Wojciech Skut, and Hans Uszko-reit.
1999.
Syntactic Annotation of a GermanNewspaper Corpus.
In Journdes ATALA, 18-19 juin 1999, Corpus annotds pour la syntaxe,pages 69-76, Paris.Oliver Christ.
1994.
A modular and flexible archi-tecture for an integrated corpus query system.In Proceedings o\[ COMPLEX'9~.Alin Deutsch, Mary Fernandez, Daniela Florescu,Alon Levy, and Dan Suciu.
1999.
A Query Lan-guage for XML.
In Proceedings of the Interna-tional World Wide Web Conference (WWW),volume 31, pages 1155-1169.Erhard W. Hinrichs, Julia Bartels, YasuhiroKawata, Valia Kordoni, and Heike Telljohann.2000.
The VERBMOBIL Treebanks.
In Pro-ceedings of KONVENS 2000, October.
To ap-pear.Tilman HShie.
1985.
Der Begriff 'Mittelfeld'.
An-merkungen fiber die Theorie der topologischenFelder.
In A. SchSne, editor, Kontroversen alteund neue.
Akten des 7.
Internationalen Ger-manistenkongresses G6ttingen, pages 329--340.Laura Kallmeyer.
2000.
On the Complexity ofQueries for Structurally Annotated LinguisticData.
In Proceedings of ACIDCA'2000, pages105-110, March.Jacques Le Maitre, Elisabeth Murisasco, andMonique Rolbert.
1998.
From Annotated Cor-pora to Databases: the SgmlQL Language.
InJohn Nerbonne, editor, Linguistic databases.CSLI.Mitchell Marcus, Grace Kim, Mary ArmMarcinkiewicz, Robert MacIntyre, Ann Bies,Mark Ferguson, Karen Katz, and Britta Schas-berger.
1994.
The Penn Treebank: AnnotatingPredicate Argument Structure.
In ARPA '94.Andreas Mengel and Wolfgang Lezius.
2000.
AnXML-based encoding format for syntacticallyannotated corpora.
In Proceedings of LREC2000.Detmar Meurers.
1999.
Von pa~ie\]len Kon-stituenten, erstaunlichen Passiven und ver-wirrten Franken.
zur Verwendung yon Korporafiir die theoretische Linguistik.
Handout at theDGfS Jahrestagung, February.A.
Schiller, S. Teufel, and C. Thielen.
1995.Guidelines fiir das Tagging deutscher Textcor-pora mit STTS.
Manuskript Universit~tStuttgart und Universit~t Tfibingen.Rosemary Stegrnann, Heike Schulz, and Er-hard W. Hinrichs.
1998.
Stylebook for theGerman Treebank in VERBMOBIL.
Eberhard-Karls Universit~it Tiibingen.198
