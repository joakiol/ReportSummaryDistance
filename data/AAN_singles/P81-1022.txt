PARSINGRalph GrishmanDept.
of Computer ScienceNew York UniversityNew York, N. Y.One reason for the wide variety of views on many subjectsin computational linguistics (such as parsing) is thediversity of objectives which lead people to do researchin this area.
Some researchers are motivated primarilyby potential applications - the development of naturallanguage interfaces for computer systems.
Others areprimarily concerned with the psychological processeswhich underlie human language, and view the computer asa tool for modeling and thus improving our understandingof these processes.
Since, as is often observed, man isour best example of a natural language processor, thesetwo groups do have a strong commonality of researchinterest.
Nonetheless, their divergence of objectivemust lead to differences in the way they regard thecomponent processes of natural language understanding.
(If - when human processing is better understood - it isrecognized that the simulation of human processes is notthe most effective way of constructing a natural languageinterface, there may even be a deliberate divergence inthe processes themselves.)
My work, and this positionpaper, reflect an applications orientation; those withdifferent research objectives will come to quitedifferent conclusions.WHY PARSE?One of the tasks of computer science in general, and ofartificial intelligence in particular, is that of copingin a systematic fashion with systems of high complexity.Natural language interfaces certainly fit thatcharacterization.constituent structure, we can substantially simplify thespecification of the subsequent stages of analysis.SPECIFICATION VS. PROCEDUREThe arguments just given for parse trees (and otherintermediate structures) are arguments for how best tospecify the transformations which a natural languageinput must undergo.
They are no___~targuments for aparticular language analysis procedure.
A direct imple-mentation of the simplest specifications does notnecessarily yield the most efficient procedure; as oursystems become more sophisticated, the distance fromspecification to implementation structure may increase.We should therefore favor formalisms which (because oftheir simple structure) can be automatically adapted toa variety of procedures.
Among these variations are:PARALLEL PROCESSING.
Phrase structure grammars andaugmented phrase structure granm~rs lend themselvesnaturally to parallel parsing procedures - either top-down (following alternative expansions in parallel),bottom-up (trying alternative reductions in parallel),or a combination of the two.
In particular, some of theparsing algorithms developed as part of the speechrecognition research of the past decade are readilyadaptable to parallel processing.
To minimize parallel-ism, however, the grammatical constraints must beorganized to minimize or at least postpone the inter-actions among the analyses of the various parts of asentence.A natural language interface must analyze input sequence&communicate with some underlying system (data base, robo~etc.
), and generate responses.
In the transition fromthe natural language input to the language of the under-lying system there is in principle no need to makeexplicit reference to any intermediate structures; wecould write our interface as a (huge) set of rules whichmap directly from input sequences into our targetlanguage.
We know full well, however, that such a systemwould be nearly impossible to write, and certainlyimpossible to understand or modify.
By introducingintermediate structures, we are able to divide the taskinto more manageable components.ANALYSIS AND GENERATION.
In the same way that sentenceanalysis involves a translation to a "deep structure,"an increasing number of systems now include a generationcomponent to translate from deep structure to sentences.If the mapping from sentence to deep structure is direct(without reference to a parse tree), the generationcomponent may require a separate design effort.
On theother hand, if the mapping is specified in terms ofincremental transformations of the constituent structure,producing an inverse mapping may be relatively straight-forward (and the greater the non-procedural content ofthe transformations, the easier it should be to reversethem).Specific intermediate structures are of value insofar asthey facilitate the expression of relationships whichmust be captured in the system - relationships whichwould be mere cumbersome to express using other repre-sentations.
For example, the representations at thelevel of logical form (such as predicate calculus) arechosen to facilitate the computation of logical inference~In the same way, a representation of constituentstructure (a parse tree), if properly chosen, willfacilitate the statement of many linguistic constraintsand relationships.
Grammatical constraints will enablethe system to identify the pertinent syntactic categoryfor many multiply classified words.
Some constraintson anaphora (such as the notion of command) and onquantifier structure are also best stated in terms ofsurface structure.Equally important, many sentence relationships whichmust be captured at some point in the analysis (such asthe relation between active and passive sentences orbetween reduced and expanded conjoinings) are most easilystated as transformations between constituent structures.By using syntactic transformations to regularize theAVOIDING THE PARSE TREE.
To emphasize the distinctionbetween specification and procedure, let me mention apossibility for an "optimizing" analyser of the future:one whose specifications are given in terms of trans-formations of the constituent structure followed byinterpretation of the regularized ("deep") structure,but whose implementation avoids actually constructinga parse tree.
Instead, the transformations would beapplied to the deep structure interpretation rules,producing a (much larger) set of rules for interpretingthe input sequences directly.
Some small experimentshave been done in this direction (K. Konolige, "CapturingLinguistic Generalizations with Grammar Metarules,"Pro___cc.18th Ann'l Meetin~ ACL, 1979 ).
By avoiding explicitconstruction of a parse tree, we could accelerate theanalysis procedure while retaining the descriptiveadvantages of independent, incremental transformations ofconstituent structure.
While development of any suchautomatic grawmar restructuring procedure would certainlybe a difficult task, it does indicate the possibilitieswhich open up when specification and implementation areseparated.I01
