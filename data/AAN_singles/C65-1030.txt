301965 Internat ional  Conference on Computat ional  L inguist icsSYNTAXE ET INTERPRETATIONB.
Vauquois,  G. Vei l lon, J. VeyrunesC.
E. T .A .
B.P.
8 St Mart in d'H~res - Is~re -/s-"f~'!~J .
Veyrmles - II N T R 0 D U C T I O N. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Dans un syst&me de traduction automatique fond4 sur une succes-sion de mod~les(o~ chacun d'eux repr~sente un niveau de la langue sourceou de la langue cible) il faut ~tablir leur enchainement.
Dans la phased'analyse (relative ~ la langue source) les liaisons d'enchainement sontdites "dirig6es de bas en haut" car les modules successifs correspondentdes niveaux de hi4rarchie de plus en plus 61ev~s dans la langue ; aucontraire, dans la phase de synth~se (relative ~ la langue cible) les liai-sons sont dirig4es de haut en bas.L'analyse d'un texte de la langue source L consiste ~ trouverdans le module de niveau le plus 61ev~, appel6 mod@le M3, une formule ouune suite de formules dont la representation dans Lest  le texte donn~.
Siroute formule de M 3 a pour representation dans L au moins uoe phrasede Lon dira que l'analyse se fait phrase ~ phrase.
Toutes les phrases de L quisont les diverses repr6sentations d'une m~me formule de M 3 sont dites"~quivalentes" par rapport au module.
Toute phrase de L qui est une repre-sentation commune ~ deux formules ou plus de M 3 est dite "ambigUe" dans lemodgle.
On admettra que le mod61e M 3 possgde aussi une repr4sentation dansla langue cible choisie L', sans se soucier de savoir si M 3 poss&de encored'autres representations dans des langues L", L"', etc... Dans ces condi-tions, ~ toute phrase non ambigUe de L on peut faire correspondre unephrase de L'.
Appelons degr6 d'ambiguit~ d'une phrase de L par rapport auJ.
Veyru\[~es 2 -mod&le, le nombre de formules distinctes qui ont cette phrase pour repr~-sent~ation dans L. A route phrase de degr~ d'ambiguit~ n dans L correspondalors au plus n phrases dans L'.
La traduction ne pourra comporter qu'uneseule phrase dans L' si les representations des n formules de M 3 darts L'ont une intersection non vide.Le schema du syst~me de traduction automatique envisag~ est alors lesuivant :1:3.,'D004- rDt::JI-I- ro ~0 0 rtfo ~n 0rt 1~0 ~ H.;:Y r-'r0 c~00"0?o3C~~ o ~~- i-tr't 0.~nr~oo0I-I-0~Nf~0~o ~-~i ~ .mr-t0rjl"0f~</b-a~ "4r't0ct~.
',C\]0I,OC~0(nVr-tq~~oo~o~(D(~C~r-t<(hcnO~(D(o\(D,//J0 Veyrunes 4 -Ainsi les modules M 1 et M 2 contiennent deux parties :a) La pattie formelle qui r~soud le probl~me de d~cision :"la chaTne propos~e ~ l'entr~e appartient elle au langa-ge artiFiciel de ce module ?
Dans l'afFirmative il s'a-git de trouver toutes les structures associ~es ~ la chai-he.b) L' interpr~tation quJ doit assurer la liaison avec lesmodules de niveau sup~rieur.Dans sa partie "synth~se", ce schema correspond ~ quelques va-rJantes pris au module d'automate linguistique propos~ par S. LAMB.L'exemple le plus simple est celui du module morphologique M I :le probl~me de d~cision attachd ~ la partie ~ormelle est l'acception ou lerefus d'une chalne de morphemes comme ~orme d'un mot de la langue.
L'in-terpr~tation syntaxique d'une chaine accept~e consiste ~ la transformer endl~ments du vocabulaire terminal du module syntaxique #catdgorie syntaxi-que, valeurs de variables grammaticales, r~gles interdites)0 L'interpr~-ration s~m~mique de cette m~me chalne consiste ~ donner sa significationsoit sous forme d'~quivalents dans la langue cible soit sous forme d'uni-t~s s~mantiques dans un langage pivot.L'~tude du module syntaxique M 2 est beaucoup plus compliqu~e.La partie formelle de ce module consiste ~galement ~ r~soudre un probl~mede d~cision.
Etant donn~e une chalne de syntagmes ~l~mentaires fournis parl' interpr~tation du module morphologique, il s'agit d'accepter ou de,I.
Veyrunes - 5 -refuser cette chaine en tant que phrase syntaxiquement correcte dans lalangue source.
En r~alit~, A une chaSne de mots unique dans la languesource l' interpr~tation morphologique fait correspondre en g~n6ral unefamille de chaines de syntagmes ~l~mentaires ~ cause des homographiessyntaxiques.
Ainsi, ~ moins d'explorer successivement toutes les chalnesde la famille, la r~solution pratique dolt les prendre en charge simul-tan~ment.En outre, ~tant donn6 que m~me une phrase constitute de mots nonsyntaxiquement ambigus peut admettre dans la langue naturelle plusieursconstructions syntaxiques, le mod@le doit rendre compte de cette multi-plicit~ de structures, lorsqu'elle existe, sur chaque chaine de syntagmescorrespondant ~ cette phrase.Ainsi, la partie formelle du module syntaxique consiste ~ refu-ser les chaSnes de syntagmes qui ne correspondent A aucune phrase et A~ournir pour les chalnes accept~es toutes les structures admissibles.Le choix du type logique de mod61e, le formalisme d'6criturede la grammaire ainsi que l'algorithme d'exploitation de cette grammairefont l'objet de la premiere partie de cette communication.La deuxi~me partie s'attache ~ montrer la transformation qu'ilfaut faire subir aux structures fournies par la partie formelle du module,pour qu'elles soient acceptables en tant qu' "entr~es" du mod&le M 3.
Pourjustifier le bien-fond~ de ces contraintes, on indiquera enfin quelques~l~ments de M 3 en troisi~me partie.J.
Veyrunes - 7L'adaptation d'un tel formalisme g l'analyse syntaxique d'unelangue naturelle conduit ~ un tr~s grand nombre d'~l~ments terminaux etnon terminaux.
On a donc ~t~ amen~ g utiliser un formalisme ~quivalentconduisant ~ une grammaire de dimension acceptable \[i~?~On ~crit :(5) N ?
R~gle - a HVVa ~-~-  A ffVVA - SAT(6) N ?
R~gle B //VVB i C ~ VVC VIVLE VOCABULAIRE TERMINAL du modgle syntaxique est constitud par 3sortes d'~l~ments :I - Des categories syntaxiques not~es a, b, c, ... dans les r~gles detype (5).Exemples : Substantif communAdjectif qualificatifConjonction de coordination.2 - Des valeurs de variables grammaticales not~es VVa, VVb, ... dansles r~gles de type (6).On associe en effet ~ chaque cat~gorie syntaxique Kp variables grammaticales VKi I ~ i~ p, chaque variable ~Kipouvant prendre n .-(VKi ) valeurs - onutilise le produit devaleurs de variables grammaticales, chacune appartenant g unevariable diff~renteJ.
Veyrunes - 8 -Exemples : "Nominatif  singulier inanim~" ; " Indicati f  presentpremiere personne" etc...3 - Des num~ros de rggles interdites: Les r~gles de type (5) et(6) sont rep~r~es par un numdro de r~gles : N ?
rggle :On d~sire interdire au r~sultat de l 'appl icat ion d'uner~gle de grammaire de figurer dans une ou plusieurs autres r~gles.On dit que ces r~gles sont satur~es.
Cette liste de rggles, ~ven-tuel lement vide figure dans les r~gles de type (5) et (6) sousla rubrique SAT.II LE VOCABULAIRE NON-TERMINAL est ~galement constitu~ par 3 ~l~ments :I - Des categories non-terminales not~es A, B, C ...L'une d'entre elles est dist inguee des autres et carac-t~rise l 'obtent ion d'une structure de phrase.Exemple : Groupe nominal g~n~ral,  verbe g~n~ral, ...2 - Des variables grammaticales associ~es, cette fois, aux categoriesnon-terminales.J.
Veyrunes - 93 - Des num~ros de r~$1es interdites, comme pr~c~demment.Les r~gles de construction peuvent, en effet, aussi bienque les r~gles lexicales, saturer des listes de r~gles.Les principaux ~l~ments constitutifs des r~gles de ty-pe (5) et (6) ont ~t~ d~finis comme constituants du vocabulaireterminal et du vocabulaire non terminal.VIV signifie Valeurs Identiques de Variables.
C'est unecondition permettant de valider une r~gle de type (6) seulementsi Bet  C ont en commun certaines valeurs d'une ou plusieurs va-riables donn~es.Exemple : 12 - B H I C //- CAS ~- - -La r~gle 12 ne s'applique que si B et C ont en commundes valeurs de la variable CAS."
f I >-- -  sont des s~parateurs.l'ensemble des ~l~ments pr~c~dant >- s'appelle la partie gauche de la r~glel'ensemble des ~l~ments suivantDans la partie gauche,l'ensemble des ~l~ments pr~c~dantl'ensemble des ~l~ments suivant>- s'appelle la partie droite de la r&~eI s'appelle le ler constituantI s'appelle le 2~me constituantlls sont notes Ie t  2 si n~cessaire.Exemple : La r~gle pr~c~dente compl~te :12 - B // I C // - CAS ~--- A // CAS (1.2) -J. Veyrunes - I0 -Le point symbolisant l'intersection, les valeurs du casA seront celles qui constituent l' intersection de l'ensemble desvaleurs du cas du ler constituant de partie gauche avec l'une desvaleurs du cas du 2~me.III VARIABLES GRAMMATICALES ~ ~Leur int~r~t consiste g r~aliser des partitions en classesd'~quivalence sur le vocabulaire terminal V T associ~ aux r~gles (2).Les ensembles quotients sont les categories syntaxiques en nombrerestreint.Les conditions d'applications, restituant l' informationn~glig~e lors des diff~rentes partitions, sont de 2 types :I) Valeurs des variables impos~es (VVA, VVB).2) Intersections de valeurs non vides sur des variables communes (VIV).D\] D\]D~finition :La r~gle num~rot~e I sature ~ gauche (respectivement ~ droite),la rggle num~rot~e J relativement ~ la cat~gorie non terminale A, siA ~tant obtenue par l'application de I, on interdit ~ A d'gtre le lerconstituant (respectivement le 2~me) de la partie gauche de la r~gle J.Les ~l~ments de SAT sont : J ' Jd selon qu'il s'agit de sa- gturation gauche ou droite.
On note J s'il n'y a pas d'ambiguit~.J.
Veyrunes - II -Transmission de saturations :Dans le cas de r~gles r4cursives on peut d4cider de la trans-mission des saturations de la partie gauche vers la partie droite.Exemple : I - B // i A // - )---- A //2 -  A // I C / / -  >--- B / / -3 a // )---- A4 et // >--- C5 ~ // >--- cL'uti l isation des saturations pr~sente 2 int~r~ts :I) Regrouper dans la m~me cat~gorie non terminale des cat4goriessyntaxiques diff~rentes : les saturations port~es par les 2 r~gleslexicales correspondantes diff~rencient leur comportement syntaxiquefutur.2) Diminuer le nombre de structures jug~es ~quivalents obtenus dansl'application de la grammaire.Ainsi l'exemple pr4c4dent permet d'obtenir une seulestructure dans l'analyse des 4num4rations de typea, a, .... , a et aEXTENSIONS DU FORMALISME PROPOSE :Le formalisme ci-dessus reste context - f ree~.
On peutsonger ~ l'~tendre pour traiter les probl~mes de constituants dis-continus qui n'appartiennent pas aux modules "context-free"J. Veyrunes - I2 -I - Variables v~hiculaires ~G \]Ii s'agit d'une g~n~ralisation de la notion de variablesgrammaticales permettant de r~aliser des accords g distance entre2 occurrences (par ex : accord du pronom relatif avec son ante-cedent) et donc de traiter d'une mani~re g~n~rale le probl~me desconstituant s dis continus E~,  ~ ?Les variables v~hiculaires cr~es lors de l'applicationd'une r~gle, se transmettent vers l'~l~ment de partie droitejusqu'~ ce qu'une r~gle y fasse appel.2 - Empilement de variables v~hiculaires - traitement de structurescontext-sensitive.L'uti l isation des variables v~hiculaires en nombrelimit~ permet de traiter des structures Context-Free ainsi quedes structures de constituants discontinus qui se ram~nent ais~-ment g des structures Context-Free.L'uti l isation d'un empilement de variables v~hiculaires -comme dans un automate g pile ordinaire - permet le traitementde structures essentiellement context-sensitive.
C'est le caspar exemple des structures utilisant le mot "respectivement".J.
Veyrunes 13 -Exemple : La chaine A B C R A'B'C' implique les livraisonsentre A et A'Bet  B'C et C'On ~crira RA ' > - - - R / )V ARB' y---  R/ )V BRC' >--- R/ ~V CCR >--- R/ ~VcBE )---- R/ )0 BAR >--- R/ PVA)V A indique l'empilement de la variable v~hiculaire associd aucouple A,A')V A indique la suppression dans la pile de la variable v~hiculaireassoci~ au couple A,A'On peut imaginer en outre plusieurs sortes de variablesv~hiculaires, pouvant constituer plusieurs piles distinctes.Les langages ainsi reconnus sont inclus dans les langagescontext-sensitive.
Ii reste ~ prouver, ~ventuellement, qu'ils seconfondent avec eux.J.
Veyrunes 14 -B - ALGORITHME D'EXPLOITATION DE LA GRAMMAIRE.BALAYAGE.L'analyse d'une phrase selon la grammaire de type Context-Freenormale doit fournir une ou plusieurs structures arborescent~binairesOn peut concevoir une recherche syst~matique de ces structure ~en consid~rant tout d'abord la construction des n groupements de ni-veau I (c'est-&-dire l'application des rggles du lexique), puis lesgroupements de niveau 2, c'est-&-dire correspondant & la combinaison de2 syntagmes de niveau I.
Plus g~n~ralement, on cherchera les syntagmesde niveau pen  formant pour chacun d'entre eux les (p-l) possibilit~s :(I, (P-l), (2, p-2), ~,  p-i) ... (p-l, I).Cet alorithme dQ & COKE, supposeconnue la longueur n de laphrase.
En utilisant un tel proc~d~, on voit que l'on construitsimultan~ment tous les  syntagmes de m~me niveau et couvrant les m~mesterminaux.
Nous appellerons niveau p d'un syntagme le nombre de ter-minaux qu'il regroupe et q le rang du premier de ceux-ci dans lachaine ; si l'on note~ un sommet d'une structure arborescentebinaire ayant le niveau pet  couvrant les sommets terminauxq,='q + I ... ~q  + p - I, on peut associer & toute structure couvrantn terminaux (2n - I) sommets (en comptant les terminaux).o-I6Exemple :J. Veyrunes - 15 -2o ~ I Fig.
2D'autre part, il est clair qu'il n'y a au total que n (n + I)2 sommetso ~q dist incts : n de niveau I, (n - I) de niveau 2 ... et unPseul de niveau n.L 'a lgor i thme consiste ~ examiner tous les  sommetso ~qPLUKASIEWICZ a montrg que l'on peut associer I2p - Istructures dif f~rentes gun  sommet de niveau p.possibles.2p-ICpA un sommet donn~est attach~e la l iste des syntagmes ho-mographes.
Au niveau I, cette liste fournit les diverses homographiescorrespondant ~ une forme.J.
Veyrunes 16 -Le diagramme suivant permet de representer les sommets d'unephrase de p mots.
Les niveaux sont port,s en ordonn~e, et les num~rosd'ordre en abscisse.niveauxFig.
3i+  k_ X o_ j+ kN ?
J'ordreAux syntagmes S~correspondant au sommet o"~, on peut associerj + i + I pour former les combinaisons les syntagmes S ju du sommet o~ kS~ associ~es au sommet o -j i+kJ.
Veyr~ines - 17 -Le programme utilise un tel cadre, chaque sommet o- ~tantune adresse de liste de syntagmes.
Comme la longueur de la phrasen'est pas connue, les sommets sont parcourus par diagonales successives.Si l'on suppose construits tous les  syntagmes associ~s aux j (j + I)2 sommets correspondant auxj premiers terminaux, le (j + i) i~me terminalpermet de construire les syntagmes correspondants aux j + I sommetssur la diagonale.
On commencera par examiner tous les  o ~ de laJj + I ji~me diagonale avec o ~I(construction de syntagmes asso-ci~s aux O-de la j + Iigmediagonale).
Puis les o~de la(j I l)i~me diagonale aveco ~j ... etc...2~,j + II > Fig.
4j+~L'int~r~t de ce proc~d~ est de supprimer la contrainte sur lalongueur de la phrase.
L'analyse progresse mot par mot et s'arr~te aumot ps i  il existe un syntagme de phrase associ~ au sommet o -I.PD'autre part, il est facile d'~viter un grand hombre debalayages lorsque l'on peut savoir que tous les  syntagmes associ~sun sommet donn~ ne sont ~l~ments de gauche d'aucune r~gle.La figure mat~rialise cettefamille de points.Fig.
5k-I kIINous avons ainsi le schema suivant :REPRESENTATION DES STRUCTURES SYNTAXIQUES :A chaque sommetO "q est associ~e une liste d~syntagmes  corres-Ppondan~.
Ces syntagmes comprennent, outre les informations syntaxiques,(c'est-g-dire la cat~gorie, les saturations et les variables grammati-cales), le num~ro de la r~gle qui a servi ~ les construire, et lesadresses des deux syntagmes, droite et gauche, qui forment la partiegauche de cette rggle.I~J'lRil, IJ.
Veyrunes - I8 -\] ~ig.
6~~Is I ~ -11i~ /III REDUCTION DU NOMBRE D'HOMOGRAPHIES :La liste des syntagmes homographes associ~e ~ un sommet donn~peut ~tre consid~rablement r~duite en ne conservant que les syntagmesayant des valeurs syntaxiques diff~rentes.
Les syntagmes associ~sun sommet ~ ,q sont alors d~crits comme une liste de syntagmes auxquelsPJ.
Veyrunes 19est associde une liste de r~gles:qo'pFig.
7IiJ ~; iCeci ~vite la proliferation des structures homographes ;dans la chaine :La directrice de soci~t~ enrhum~e?~ S 27Fig.
8Les syntagmes S Ie t  S 2 ayantm~me valeur syntaxique serontgroup,s.Cette homographie ne produira pas de multiplicit~ de struc-tures au niveau sup~rieur.J.
Veyrunes 20IV EXPLOITATION DE LA GRAMMAIRE PROPREMENT DITE.L'exploitation de la grammaire est li~e ~ l'algorithme debalayage.
Pour un nouveau syntagme donn~, on recherche tout d'abordl'existence de ce syntagme comme composant de droite d'une r~gle.Ceci utilise ~ la fois la cat~gorie et les saturations port~es par lesyntagme.Lorsque de telles liaisons sont permises, on applique lesr~gles de grammairesaux divers couples :D~termination de la r~gle, satisfaction des variables gram-maticales et des saturations, calcul du syntagme r~sultant.
La codi~-cation interne de la grammaire est r~alis~e par un compilateur, quiprend en charge les r~gles donn~es selon le formalisme d~critci-dessus (I, A).V FORME DU RESULTAT :I Lorsqu'un syntagme de type S j correspond ~ une phrase,l'analyse de la chaine est arrgt~e.
Le r~sultat correspond ~ la familledes structures associ~es au syntagme de phrase trouv~.Elle se pr~sente comme une structure de demi treillis repr~-sentant l'ensemble des arborescentes binaires, contenant en un seulgraphe connexe toutes les sous-structures communes ou homographes.J.
Veyrunes - 21 -DE UXI  EME PART I  EINTERPRETATION DU MODELE SYNTAXIQUEA - FORME DES STRUCTURES A INTERPRETER :1 2 3 4 5 6 7 8 9 IO IiLE PHENOMENE AUQUEL NOUS DECIDONS DE CONSACRER CE CHAPITRE EST NOUVEAU12I I J IT(t I) N(n I) N(prl) N(pr2)J J l J J>(vl) P (~ (il),~/A(a~ (n l>~ (n2) V (v2>~~ ,A(a2>// E(fl>(i2)\[(~3)(vS)(rl)N(n3V(v4)Fig.
9 ~H (v7)J. Veyrunes - 22 -Dans un but de simplification, et pour s~parer la partieth~orique de la mise en oeuvre pratique, nous ne consid4rons ici quele cas d'une structure simple sans homographes.II s'agit donc d'une structure arborescente binaire danslaquelle chaque sommet non terminal est un 414ment du vocabulaire nonterminal de la grammaire (Syntagme).
Les 41~ments terminaux de lastructure appartiennent au vocabulaire terminal et sont reli~s ~ des414ments non terminaux (r~gles lexicales) dont ils sont les seulsdescendants.En outre, en chaque sommet non terminal, s'ajoute au nomde ce sommet, le nom de la r~gle de grammaire (rj) qui a permis dele construire.B - FORMES DE L'ENTREE DU MODELE M3.
(RESULTAT DE L'INTERPRETATION):Alors que nous avions une structure sur des syntagmes, nousne nous interessons plus maintenant qu'~ des fonctions, correspon-dant ~ une interpr4tation des r~gles de la grammaire.
Les syntagmesont permis de d~terminer la coherence de la phrase et d'en d~duireune structure.
L' interpr~tation doit fournir une nouvelle structu-re sur des r~gles.
En particulier, la fonction d'ordre associ~e auxterminaux (ordre s~quentel des mots dans le texte d'entr4e) peut~tre modifi~e.La structure obtenue est limit4e ~ une arborescence.
Lesterminaux de cette nouvelle arborescence expriment dans le module M 2les fonctions syntaxiques li~es aux unit~s lexicales.P~> O4?
,-=4 J. Veyrunes 23-> =>~ ?q ,-~0?q04~44-J?qIC ~-4 I~40'-~ I ~ P~ U?00.r4J.
Veyrunes - 24 -Un noeud de la structure interpr~t~e est une Fonction syn-taxique pour son antecedent.
Ii est muni lui m~me d'un certain nombrede fonctions qui le caract~risent.
La structure est telle que toutesles inPormations n~cessaires & caract~riser un noeud sont donn~es auxnoeuds du niveau suivant.En g~n~ral, il existe un ~l~ment distingu~ qui caract~risele noeud precedent.
Cet ~l~ment (ou cette r&gle) pourrait d~finir legouverneur dans un graphe de d~pendance.
C'est le cas par exemple dev'2 (EST) par rapport & @ ou de v'4 (PHENOMENE) par rapport & v'4.Cependant il existe des cas :a) o~ l'on rencontre plusieurs r&gles distingu~es :Exemple : l'~num~ration ci-dessous dans laquelle n' apparaitItrois Fois.Bne t c_II wA !n !
g211\J.
Veyrunes - 25 -b) o3 la r~gle distinguee ne conduit directement ~ aucun ~l~ment ter-minal.Exemp le :PIERRE ET PAUL VONT ET VIENNENTn'l ~F2 n'l v '----~ ~2 v ' l?Fig.
12Tel est le cas pour le noeud ~ o~ v'2, r~gle distinguee ne conduit pasdirectement ~ VONT ~u VIENNENT) et exige l'interm~diaire v'i"J. Veyrunes - 26 -C - PROCEDE DE CONSTRUCTION DE LA STRUCTURE INTERPRETEE :L'exemple qui a servi d'i l lustration en CA) et en (B), cor-respondant aux figures 9 et I0, montre respectivement la structureformelle et la structure interpr~t~e.
Pour effectuer la transformationdans laquelle :a) les noms de syntagme disparaissentb) les r~gles rj deviennent r'jc) l'ordre des syntagmes ~l~mentaires (terminaux) est ~ventuellementmodifi~d) l'arborescence ne poss&de plus une structure binaire, on fait appeld'une part ~ des donn~es d'interpr~tation sur les r~gles rj, d'autrepart ~ des algorithmes d'exploitation de ces donn~es.I - DONNEES D'INTERPRETATION.Les donn~es d'interpr~tation sont les suivantes :- Toute r&gle de construction binaire rj de la forme AB~----C indiquepar le symbole "g" ou "d" que le constituant distingu~ est celui degauche A ou celui de droit B.- Toute rggle contenant des variables v~hiculaires VHL indique par sonpropre Formalisme d'~criture s'il s'agit d'introduction, de transfertou de destruction pour chacune de ces variables v~hiculaires.II - ALGORITHMES D'EXPLOITATION.i) Algorithme de transformation :II s'agit de r~aliser un certain nombre de changements dehi~rarchie dans la structure pr~sent~e ~ la figure 9 afin de r~tablirles liaisons correctes dans le cas des gouvernements discontinus.
Ond~finit la creation d'une variable v~hiculaire par le symbole I asso-~7J.
Veyrunes - 27ci~ ~ la r~gle de creation.la transmission par le symbole ?
associ~ ~ la r~gle de trans-mission.la suppression par le symbole ~ associ~ ~ la r~gle de suppres-sion.Ces symboles sont notes ainsi que "g" ou "d" dans la phase de recon-naissance formelle.On appelle chemin ~toil~ un chemin du graphe tel que lenoeud initial contienne le symbole ~ et les noeuds interm~diairescontiennent le symbole ~.Le noeud final est celui qui suit le noeud contenant lesymbole $et  que l'on atteint ~ partir de ce dernier en suivant l'in-formation g (respectivement 3).n,\]_Soit C .
un chemin ~toil~ de longueur p commencant au noeud nlC ~ = ni (Ni' Ni+l' ''" ' Ni+ P+I )A chaque noeud Ni+ j de C ~ ou associe le sous-graphe Ti+ jnisommet Ni+ je t  ne contenant ni Ni+j+ 1 ni ses descendants.deL'algorithme consiste ~ traiter successivement tous les  C ~.
du nlgraphe ,  ~ par t i r  de la  ra~ine  de la  s t ruc ture .Pour chacun d'eux, pris dans cet ordre le traitement consistea) transformer C~ni = (Ni, Ni+l, ... , Ni+p, Ni+p+ I) en le chemin (nonJ.
Veyrunes - 28~toil~) de longueur p : Cni+p = (Ni+l ' "'" ' Ni+p' Ni' Ni+p+l)restant attaches aux noeuds Ni+ j auxquels ils ~taient primitivementassoci~s.b) on note sur N. autant de ?
diff~rents que l'on a interrompu deichemins ~toil~s entre Ni+ p et Ni+p+ 1.J.
Veyrunes - 29 -2) Algorithme de construction des noyaux.Sur le plan th~orique cet alorithme se divise en deux pha-ses.
En premier lieu on e~fectue la s4quence d'op~rations qui suit.On proc~de, niveau par niveau, en commengant par le niveauterminal, ~ l'a~fectation pour chaque noeud d'un symbole not6, soitr'j d4duit du nom de r~gle rj port4 par le noeud imm4diatement ant4-rieur, soit .A.
La r~gle d'affectation est donn~e dans touslescas possibles par les graphes suivants :r. (d)1r.
Cg) /% bExemple :I ri I r I ir I .1CE CHAPITRE EST NOUVEAUa In 2~ i g .
14'J4 (d)(chapitre) (est) (nou~m) (ce)I i v 1 1 a'2n' 2 Ji ~-fig.
15J.
Veyrunes - 30 -En outre, dans certains cas, nous aurons des r~gles du typer.
(d g) la r~gle d'application est la suivante :r .
(d, g)1il n'y a pas de r'La figure I~ montre le r~sultat de l'application de l'algo-rithme (i) et de cette phase de l'algorithme (2) sur la structure for-melle de la figure 9.J.
VeyriLnes -31-J.
Veyrunes - 32 -Ensuite, on transforme l'arborescence binaire pour constituerles noyaux de la phrase.
Pour cela on consid~re dans le graphe obtenutous les  chemins du type :(R'i, A , ... A ) notes ~'i associ6s ~ chaque R'iOn d~finit alors le graphe (~'i'r (R ' . )
U V(A)  .
.
.
1G), avec G(R' i ,A .
.
.
,A )En pratique, on r~alise ce graphe en supprimant les noeudset en r~tablissant les liaisons de A ~ ses successeurs sur le R'..iAinsi, les noeuds R' sont conserves.
iDans le cas o~ il y a deux ~sous  un R'i, pour d6finir legraphe transform4, il y a lieu de d~finir ~' par l'union des chemins P 'g  _ iet .
Ce cas se rencontrera en particulier, pour la coordina- i ition :n,l A Bn, 1 'g'l,// AA n'l ' g'l /oB n'lJ.
Veyrunes -33 -TROI  S I EME PART I  ELE MODELE M3.C'est un langage artificiel dans lequel chaque formule a pourrepresentation une famille de phrases significatives ~quivalentes dansla langue source L (et aussi dans la langue cible pour que la traduc-tion soit possible).Le "degr~ de signification" que l'on peut atteindre dans Ld~pend ~videmment du module.
On se borne ici ~ mettre en ~vidence lasignification syntaxique.A partir de la structure fournie par l' interpr~tation syn-taxique (figure I0) ~ propos de l'exemple choisi, la formule d~-duite dans M3 est celle donn~e par le graphe de la figureLe module M3 accepte une structure interpr~t~e de M2 si lesr~gles de sa grammaire faisant intervenir g la fois les ~l~ments r'jet les codes s~m~niques associ~s aux unit~s lexicales permettent d'at-tacher aux noeuds des ~l~ments du vocabulaire de M3 (par exemple :SUJET, ACTION, ATTRIBUTION, etc ...).z ooz~= .k"~ .z~ NjvJ, Veyrunes/ /~H Z ~ m~ H g~ Z?
o ~1w u "~-.-- 0O0.,.4q-0- 34J.
Veyrunes 35 -- B I  BL I  O G R A P H I E -(t)(2)(3)(4)(5)(6)(7)C. BERGEJ.
COLOMBAUDG.
H. MATTHEWSG.
H. MATTHEWSN.
NEDOBEJKINEL.
TORREB.
VAUQUOISG.
VEILLONJ.
VEYRUNESG.
VEILLONJ.
VEYRUNESTh~orie des Graphes et ses appl icat ionsDUNOD - Paris.Langages art i f ic ie ls  en analyse syntaxique -Th&se de 3&me cycle - Univers i t~ de Grenoble(1964).D iscont inu i ty  and Asymmetry in PhraseStructure Grammars - Inf.
and Contr.
6 - 137 -146 (1963).A Note on Asymmetry in Phrase StructureGrammars - Inf.
and Contr.
7 - 360 - 365 (1964)Mod&le de la syntaxe russe - I. Structuresabstraites dans une grammaire 'context-free'Document C.E.T.A.
G - 201-I (1964).Appl icat ion des grammaires formelles auxmod&les l inguist iques en traduct ion automatique.Communicat ion au Congr~s de Prague (Sept. 1964).Etude de la r~al isat ion prat ique d'unegrammaire 'context-free' et de l 'a lgorithmeassoci~.
Document C.E.T.A.
G - 2OO1- i.
(1964).
