Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1741?1752,Seattle, Washington, USA, 18-21 October 2013. c?2013 Association for Computational LinguisticsAutomated Essay Scoring by Maximizing Human-machine AgreementHongbo Chen and Ben HeSchool of Computer and Control EngineeringUniversity of Chinese Academy of Sciences100190 Beijing, Chinachenhongbo11@mails.ucas.ac.cn, benhe@ucas.ac.cnAbstractPrevious approaches for automated essayscoring (AES) learn a rating model by min-imizing either the classification, regression,or pairwise classification loss, depending onthe learning algorithm used.
In this paper,we argue that the current AES systems canbe further improved by taking into accountthe agreement between human and machineraters.
To this end, we propose a rank-based approach that utilizes listwise learn-ing to rank algorithms for learning a ratingmodel, where the agreement between the hu-man and machine raters is directly incorpo-rated into the loss function.
Various linguisticand statistical features are utilized to facilitatethe learning algorithms.
Experiments on thepublicly available English essay dataset, Au-tomated Student Assessment Prize (ASAP),show that our proposed approach outperformsthe state-of-the-art algorithms, and achievesperformance comparable to professional hu-man raters, which suggests the effectivenessof our proposed method for automated essayscoring.1 IntroductionAutomated essay scoring utilizes the NLP tech-niques to automatically rate essays written for givenprompts, namely, essay topics, in an educational set-ting (Dikli, 2006).
Nowadays, AES systems havebeen put into practical use in large-scale Englishtests and play the role of one human rater.
For ex-ample, before AES systems enter the picture, essaysin the writing assessment of Graduate Record Ex-amination (GRE) are rated by two human raters.
Athird human rater is needed when the difference ofthe scores given by the two human raters is largerthan one in the 6-point scale.
Currently, GRE essaysare rated by one human rater and one AES system.
Asecond human rater is required only when there ex-ists a non-negligible disagreement between the firsthuman rater and the machine rater.
With the help ofan AES system that highly agrees with human raters,the human workload can be reduced by half at most.Therefore, the agreement between the AES systemand the human rater is an important indicator of anAES system?s effectiveness.There have been efforts in developing AES meth-ods since the 1960s.
Various kinds of algorithmsand models based on NLP and machine learningtechniques have been proposed to implement AESsystems.
Existing approaches consider essay ratingas a classification (Larkey, 1998), regression (Attaliand Burstein, 2006) or preference ranking problem(Yannakoudakis et al 2011), where the loss func-tion is the regression loss, classification loss andpairwise classification loss, respectively.
In this pa-per, we argue that the purpose of AES is to predictthe essay?s rating that human raters would give.
Ifan AES system frequently disagrees with the firsthuman rater, a second human rater will be needed inmost cases.
Thus, the introduction of the AES sys-tem does not bring much benefit in reducing the hu-man workload.
It is therefore desirable to minimizethe disagreement between the machine and humanraters.
However, this disagreement is not explicitly,if any, addressed in the current AES methods.To this end, we propose a rank-based approachin this paper that utilizes a listwise learning to rank1741algorithm to address automated essay scoring inthe view of directly optimizing the agreement be-tween human raters and the AES system.
Differentfrom the preference ranking-based approach (Yan-nakoudakis et al 2011) that maximizes the pairwiseclassification precision (Liu, 2009), our rank-basedapproach follows the listwise learning paradigm andthe agreement between the machine and humanraters is directly integrated into the loss function thatis optimized by gradient boost regression trees.To the best of our knowledge, this work is the firstto apply listwise learning to rank approach for AES,which aims at the optimization of the agreement be-tween the human and machine raters.
Experimentalresults on the publicly available dataset ASAP indi-cate that our proposed method achieves high agree-ment with human raters, that is about 0.80, mea-sured by quadratic weighted Kappa (Brenner andKliebsch, 1996).
Our proposed method also out-performs the previous classification, regression andpreference ranking based approaches.
As it is widelyaccepted that the agreement between human raters,measured by either quadratic weighted Kappa orPearson?s correlation coefficient, ranges from 0.70to 0.80 (Powers et al 2000) (Williamson, 2009), ourproposed approach therefore performs as well as hu-man raters.The rest of this paper is organized as follows.In section 2, we introduce the research backgroundof automated essay scoring and give a brief intro-duction to learning to rank.
In section 3, a de-tailed description of our listwise learning to rankapproach for automated essay scoring is presented.Section 4 explains the experimental setup and sec-tion 5 presents the experimental results.
Finally, insection 6 we conclude this research.2 Related Work and BackgroundFirstly, we give a brief description of existing ap-proaches for AES in section 2.1.
Then, an introduc-tion to learning to rank is presented in section 2.2.2.1 Existing AES MethodsIn general, existing solutions consider AES as alearning problem.
Based on a large number ofpredefined objectively measurable features, variouslearning techniques, including classification, regres-sion and preference ranking, are applied (Larkey,1998) (Yannakoudakis et al 2011).Regression-based approach treats feature valuesand essay score as independent variables and de-pendent variable, respectively, and then learns a re-gression equation by classical regression algorithms,such as support vector regression (Vapnik et al1996).
In 1966, the first AES system, Project EssayGrader, was developed by Ellis Page upon the re-quest of the American College Board.
The PEG sys-tem defines a large set of surface text features fromessays, e.g.
fourth root of essay length, and usesregression-based approach to predict the score thathuman raters will give.
E-rater, developed by Edu-cational Testing Services (ETS) in America, in late1990s, is a commercial AES system which has beenput into practical use in the Graduate Record Exam-ination (GRE) and the Test of English as a ForeignLanguage (TOEFL).
The E-rater system uses natu-ral language processing techniques to extract variouskinds of linguistic features of essays, such as lexical,syntactic, grammar, etc.. Then it predicts the finalscore by the stepwise regression method (Attali andBurstein, 2006).The classification-based approach sees essayscores as in-discriminative class labels and uses clas-sical classification algorithms, e.g.
the K-nearestneighbor (KNN) and the naive Bayesian model, topredict to which class an essay belongs, where aclass is associated to a numeric rating.
IntelligentEssay Assessor (IEA) (Foltz et al 1999), developedalso in late 1990s, evaluates essay by measuring se-mantic features.
Each ungraded essay, representedby a semantic vector generated by Latent Seman-tic Analysis (LSA) (Dumais, 2005), is rated accord-ing to the similarity degree with semantic vectors ofgraded essays.
Bayesian Essay Test Scoring sYs-tem, developed by Larkey in 2003, is based on naiveBayesian model.
It is the only open-source AES sys-tem, but has not been put into practical use yet.Besides classification and regression-based ap-proaches, (Yannakoudakis et al 2011) proposed apreference ranking based approach for learning arating model, where a ranking function or modelis learned to construct a global ordering of essaysbased on writing quality.
It is also the first studyof rank-based approach in automated essay scor-ing.
Although ?learning to rank?
is not mentioned in1742their paper, the algorithm they used, Ranking SVM(svm-light package with ?-z p?
option), is actually apairwise approach.
We will give a brief introductionto learning to rank in section 2.2.The AES systems can be deployed in two differ-ent manners, namely prompt-specific and generic.
Aprompt-specific rating model is built for a specificprompt and designed to be the best rating modelfor the particular prompt (Williamson, 2009).
Fordifferent prompts, the features used, their weights,and scoring criteria, may be different.
It usually re-quires several hundreds of graded essays for train-ing, which is time-consuming and usually imprac-tical in a classroom environment.
Generic ratingmodel is trained from essays across a group ofprompts and designed to be the best fit for pre-dicting human scores for all prompts.
It usuallydoes not consider prompt-specific features and justtakes writing quality into account.
Generic ratingmodel evaluates essays across all prompts with thesame scoring criteria, which is more consistent withthe human rubric that is usually the same for allprompts, and therefore has validity-related advan-tages (Attali et al 2010).2.2 Learning to RankLearning to rank, also called machine-learned rank-ing, was originally proposed to settle the rankingproblem in information retrieval (IR) (Liu, 2009).
Itis a type of supervised or semi-supervised machinelearning algorithm that automatically construct aranking model or function from training data.Current learning to rank algorithms fall into threecategories, that is, the pointwise, pairwise, listwiseapproaches.
Pointwise approach takes individualdocuments as training examples for learning a scor-ing function.
In fact, both multiple linear regres-sion and support vector regression (Vapnik et al1996), which have been widely used in automatedessay scoring (Shermis and Burstein, 2002), can beseen as pointwise approaches.
Pairwise approachesprocess a pair of documents each time and usu-ally model ranking as a pairwise classification prob-lem.
Thus, the loss function is always a classifi-cation loss.
Representative algorithms are rankingSVM (Joachims, 2006), RankNet (Li et al 2007),etc.. (Yannakoudakis et al 2011) apply pairwiseapproach, ranking SVM, to automated essay scoringand achieve better performance than support vec-tor regression.
In listwise approaches, ranking al-gorithms process a list of documents each time andthe loss function aims at measuring the accordancebetween predicted ranking list and the ground truthlabel.
Representative algorithms are LambdaMart(Wu et al 2008), RankCosine (Qin et al 2008),etc.. Listwise approach has not yet been used in au-tomated essay scoring.3 Automated Essay Scoring byMaximizing Human-machine AgreementThe main work-flow of our proposed approach isas follows.
Firstly, a set of essays rated by profes-sional human raters are gathered for the training.
Alistwise learning to rank algorithm learns a rankingmodel or function using this set of human rated es-says represented by vectors of the pre-defined fea-tures.
Then the learned ranking model or functionoutputs a model score for each essay, including bothrated and unrated essays, from which a global order-ing of essays is constructed.
Finally, the model scoreis mapped to a predefined scale of valid ratings, suchas an integer from 1 to 6 in a 6-point scaleIn this section, we give a detailed description ofour listwise learning to rank approach for AES insection 3.1.
And features used in our approach arepresented in section 3.2.3.1 Listwise Learning to Rank for AESOur choice of the listwise learning to rank algorithmis due to the fact that it takes the entire set of la-beled essays associated to a given prompt, insteadof the individual essays or essay pairs as in (Yan-nakoudakis et al 2011), as training examples.
Thisbrings us the convenience of easily embedding theinter-rater agreement into the loss function for thelearning.In this paper, we deploy LambdaMART (Wu etal., 2008), a listwise learning to rank algorithm andthen use Random Forests (RF) (Breiman, 2001) forthe bagging of LambdaMART learners.
Havingbeen widely used in information retrieval applica-tions, LambdaMART is one of the most effectivelearning to rank algorithms.
For instance, it achievesthe top results in the 2010 Yahoo!
Learning to Rankchallenge (Burges, 2010).
Random Forests is an1743ensemble learning method for classification and re-gression.Previously, the loss function of LambdaMART isdefined as the gradient loss of the retrieval effec-tiveness, measured by IR evaluation criteria such asNormalized Discounted Cumulative Gain (nDCG)(Wu et al 2008).
More specifically, it is a heuristicmethod that directly defines ?, the gradient of nDCGwith respect to the model score of each document,and has been shown to work empirically for partic-ular loss functions NDCG (Yue and Burges, 2007).Then, Multiple Additive Regression Trees (MART)(Friedman, 2000), also called Gradient Boosting De-cision Tree (GBDT)1, are used to ?learn?
these gra-dients iteratively.
MART is a class of boosting al-gorithms that performs gradient descent in functionspace, using regression trees.
Its output F (x) can bewritten as F (x) =?i ?ifi(x), i = 1, 2, ....N .
Eachfi(x) is a function modeled by a single regressiontree and the ?i is the corresponding weight.
Giventhat n trees have been trained, the (n+1)th regressiontree, fi+1(x), models the derivative of the cost withrespect to the current model score at each trainingpoint.
Thus, what remains is to compute the deriva-tive.As for the automated essay scoring, Lamb-daMART is not readily available since its loss func-tion is defined as a function of the gradient of IRevaluation measures.
While such measures focus onthe top-ranked documents that are of great impor-tance to the IR applications, they are not suitable toour study.
This is because for AES, the rating pre-diction of all essays equally matters, no matter whatratings they receive.It is therefore necessary to re-define the ?.
Specif-ically, we need to define the gradient of the evalua-tion criteria in AES, e.g.
quadratic weighted Kappa(Brenner and Kliebsch, 1996) and Pearson?s corre-lation coefficient, with respect to the model score ofeach essay.
In this paper, we use quadratic weightedKappa as the evaluation metric.
Kappa (Cohenand others, 1960) is a statistical metric which isused to measure inter-rater agreement.
Quadraticweighted Kappa takes the degree of disagreementbetween raters into account.
This measuring method1For space reason, we refer the readers to (Friedman, 2000),(Breiman, 2001) for details of MART, GBDT and RandomForests.is widely accepted as a primary evaluation metric forthe AES tasks.
For instance, it is the official evalu-ation metric in the Automated Student AssessmentPrize sponsored by Hewlett Foundation2.
We denoteour modified LambdaMART as K-LambdaMART inwhich K stands for the Kappa-based gradient func-tion.
Specific steps include the following:To begin with, we re-define the ?i,j for each pairof essays.
For a pair of essays, essay i and essayj, ?i,j is defined as the derivative of RankNet (Li etal., 2007) loss function multiplied by the Quadraticweighted Kappa gain after exchanging the two es-says?
ratings.
?i,j =?
?1 + e?
(si?sj)|?Kappa| (1)si and sj are the model scores for essay i and es-say j, respectively.
?
is a parameter which deter-mines the shape of the sigmoid.
Quadratic weightedKappa are calculated as follows:?
= 1?
?i,j ?i,jOi,j?i,j ?i,jEi,j(2)In matrix O, Oi,j corresponds to the number ofessays that received a score i by human rater and ascore j by the AES system.
In matrix ?, ?i,j is thedifference between raters scores (i?j)2(N?1)2 , where N isthe number of possible ratings.
Matrix E is calcu-lated as the outer product between the two raters vec-tors of scores, normalized such that E and O havethe same sum.It is necessary to define the quadratic weightedKappa gain, namely ?Kappa, in an explicit manner.In each iteration, every essay is ranked by its modelscore and then rated according to its ranking posi-tion.
For example, for five essays e1, e2, e3, e4, e5with actual ratings 5, 4, 3, 2, 1, if the ranking (bymodel score) is e3, e4, e1, e5, e2, we assume thate3, e4, e1, e5, e2 will get ratings of 5, 4, 3, 2, 1, overwhich quadratic weighted kappa gain can be calcu-lated.After the definition of ?i,j for each pair of essays,it is time to re-define the ?, the gradient for eachessay.
Let I denote the set of pairs of indices ?i, j?,in which essay i receive a higher rating than essay j.2http://www.kaggle.com/c/asap-sas1744Set I must include each pair just once.
Then, the ?gradient for each essay, e.g.
essay i, is defined as,?i =?j:?i,j?
?I?i,j ??j:?j,i?
?I?i,j ; (3)The rational behind the above formulae is as fol-lows.
For each of the essays in the whole essay col-lection associated with the same prompt, e.g.
essayi, the gradient ?i is incremented by a positive value?i,j when coming across another essay j that has alower rating.
The value of ?i,j is weighted by thequadratic weighted Kappa gain after exchanging thetwo essays?
ratings.
On the contrary, the gradient ?iwill be incremented by a negative value ?
?i,j whenthe another essay has a higher rating.
As a result, af-ter each iteration of MART, essays with higher rat-ing tend to receive a higher model score while essayswith lower rating tend to get a lower model score.After the training process, the ranking model out-puts an unscaled model score for each ungraded es-say.
To determine the final rating of each given un-rated essay, we have to map this unscaled modelscore to the predefined scale, such as an integer from1 to 6 in a 6 point scale.
The mapping processis as follows.
To begin with, the learned rankingmodel also computes an unscaled model score foreach essay in the training set.
As the model is trainedby learning to rank algorithms, essays with highermodel scores tend to get higher actual ratings.
Inother words, essays with close model scores tend toget the same rating.
Therefore, we select the k es-says whose model scores are closest to the given es-say.
We then remove the essays with the very high-est and lowest model scores within the k. The finalrating is the mean of the remaining k ?
2 essays?ratings.
In this paper, k is empirically set to 5, ob-tained in our preliminary experiments on the ASAPvalidation set.Finally, the Random Forests algorithm is used tobag K-LambdaMART learners.
During the trainingprocess, both features and samples are randomly se-lected for each K-LambdaMART learner.
In the test-ing phase, it outputs a score for each testing sam-ple that is the mode of the scores output by each K-LambdaMART learner.3.2 Pre-defined FeaturesWe pre-define four types of features that indicate theessay quality, including lexical, syntactical, gram-mar and fluency, content and prompt-specific fea-tures.
A brief description of these four classes offeatures is given below.Lexical features: We define 4 subsets of lexical fea-tures.
Each subset of features consists of one or sev-eral sub features.?
Statistics of word length: The number of wordswith length in characters larger than 4, 6, 8, 10, 12,respectively.
The mean and variance of word lengthin characters.?
word level: All words in Webster dictionary 3are divided into 8 levels according to the CollegeBoard Vocabulary Study (Breland et al 1994).
Thehigher level a word belongs to, the more sophisti-cated vocabulary usage it indicates.
For example,words like thoroughfare, percolate are in level 8,while words with the same meanings, street, filter,belong to level 1.
We count the number of words thatbelong to each level and calculate the mean wordlevel of a given essay.?
Unique words: The number of unique words ap-peared in each essay, normalized by the essay lengthin words.?
Spelling errors: The number of spelling er-rors detected by the spelling check API provided byGoogle 4.Syntactical features: There are 4 subsets of syntac-tical features.?
Statistics of sentence length: The number ofsentences with length in words larger than 10, 18,25, respectively.
The mean and variance of sentencelength in words.?
Subclauses: The mean number of subclausesin each sentence, normalized by sentence length inwords.
The mean subclause length in words.
Sub-clauses are labeled as ?SBAR?
in the parser tree gen-erated by a commonly used NLP tool, Stanford CoreNLP (Klein and Manning, 2003), which is an inte-grated suite of natural language processing tools forEnglish in Java5, including part-of-speech tagging,parsing, co-reference, etc..?
Sentence level: The sum of the depth of allnodes in a parser tree generated by Stanford CoreNLP.
The height of the parser tree is also incorpo-1745rated into the feature set.?
Mode, preposition, comma: The number ofmodes, prepositions and commas in each sen-tence respectively, normalized by sentence length inwords.
Part of speech (POS) is detected by StanfordCore NLP (Toutanova et al 2003).
The POS tagsof modal verb and preposition are ?MD?
and ?IN?,respectively.Grammar and fluency features: There are twosubsets of grammar and fluency features.?
Word bigram and trigram: We evaluate thegrammar and fluency of an essay by calculatingmean tf/TF of word bigrams and trigrams (Briscoe etal., 2010) (tf is the term frequency in a single essayand TF is the term frequency in the whole essay col-lection).
We assume a bigram or trigram with hightf/TF as a grammar error because high tf/TF meansthat this kind of bigram or trigram is not commonlyused in the whole essay collection but appears in thespecific essay.?
POS bigram and trigram: Mean tf/TF of POSbigrams and trigrams.
The reason is the same withword bigrams and trigrams.Content and prompt-specific features: We definefour subsets of content and prompt-specific features.?
Essay length: Essay length in characters andwords, respectively.
The fourth root of essay lengthin words is proved to be highly correlated with theessay score (Shermis and Burstein, 2002).?
Word vector similarity: Mean cosine similarityof word vectors, in which the element is the term fre-quency multiplied by inverse document frequency(tf-idf) (Salton, 1971) of each word.
It is calculatedas the weighted mean of all cosine similarities andthe weight is set as the corresponding essay score.?
Semantic vector similarity: Semantic vectorsare generated by Latent Semantic Analysis (Dumais,2005).
The calculation of mean cosine similarity ofsemantic vectors is the same with word vector simi-larity.?
Text coherence: Coherence in writing meansthat all the ideas in a paragraph flow smoothly fromone sentence to the next.
We only consider nounsand pronouns in each sentence as they convey moreinformation.
The relevance degree between one sen-tence and its next in the same paragraph is calcu-lated as the sum of the similarity degrees betweennouns and pronouns appeared in the two sentences,normalized by the sum of the two sentences?
lengthin words.
The similarity degree between words isset to 1 if coreference exists, indicated by StanfordCore NLP (Lee et al 2013).
Otherwise, it is mea-sured by WordNet similarity package (Pedersen etal., 2004).
Finally, text coherence is computed as theaverage relevance degree of all pairs of neighboredsentences.The rating model is learned off-line using a set oftraining essays.
For a given target essay, it is thefeature extraction that mainly accounts for the over-head.
In our experiments, it usually costs in averageno more than 10 seconds on a desktop PC with an In-tel i5-2410M CPU running at 2.3GHZ to extract thepre-defined features and predict a rating for a givenessay, which is affordable, compared to the cost of ahuman rater.4 Experimental SetupThis section presents our the experimental design,including the test dataset used, configuration of test-ing algorithms, feature selection and the evaluationmethodology.4.1 Test DatasetThe dataset used in our experiments comes fromthe Automated Student Assessment Prize (ASAP)1,which is sponsored by the William and FloraHewlett Foundation.
Dataset in this competition6consists of eight essay sets.
Each essay set was gen-erated from a single prompt.
The number of es-says associated with each prompt ranges from 900to 1800 and the average length of essays in wordin each essay set ranges from 150 to 650.
All es-says were written by students in different grades andreceived a resolved score, namely the actual rating,from professional human raters.
Moreover, ASAPcomes with a validation set that can be used for pa-rameter training.
There is no overlap between thisvalidation set and the test set used in our evaluation.In AES, the agreement between human-machinerater is the most important measurement of success.We use quadratic weighted Kappa to evaluate theagreement between the ratings given by the AES al-gorithm and the actual ratings.
It is widely accepted3http://www.merriam-webster.com/4http://code.google.com/p/google-api-spelling-java/5http://nlp.stanford.edu/software/corenlp.shtml1746as a reasonable evaluation measure for AES systems(Williamson, 2009), and is also the official evalu-ation measure in the ASAP AES competition.
It iscalculated on all essay topics.
If there are essays thatcome from n essay topics, we calculate the agree-ment degree on each essay topic first and then com-pute the overall agreement degree in the z-space.
Inaddition, analysis of variance (ANOVA) (Scheffe,1999) is conducted to test whether significant differ-ence exists between the two groups of scores givenby human and machine raters.4.2 Configuration of Testing AlgorithmsRandom Forests bagging K-LambdaMart We denoteour proposed method K-LambdaMART where Kstands for the Kappa-based gradient.
Our implemen-tation of RF bagging K-LambdaMART is based onthe open-source RankLib toolkit7, a library of learn-ing to rank algorithms, in which many popular learn-ing to rank algorithms have been implemented, e.g.LambdaMART and RankNet (Li et al 2007).
Em-pirical settings of parameters obtained by prelimi-nary experiments on the ASAP validation set are asfollows.
For bagging: the number of bags is set to300, subsampling rate is 0.80 and feature samplingrate is 0.50.
For LambdaMART in each bag: thenumber of trees is set to 1, the number of tree leavesis 100 and other parameters are set to default.Baseline algorithms We use classical machinelearning algorithms, support vector machine (SVM)for classification, regression (Vapnik et al 1996)and preference ranking (Joachims, 2006), respec-tively, as the baselines.
These three algorithms havebeen used for AES in the literature (Briscoe et al2010) (Yannakoudakis et al 2011).
Especially, thestate-of-the-art AES approach proposed by (Yan-nakoudakis et al 2011) utilizes the SVM for prefer-ence ranking, a pairwise learning to rank algorithm,for training a rating model.
The linear kernel is usedin the experiments.
The parameter C, which controlsthe trade-off between empirical loss and regularizer,is set by grid search on the ASAP validation set.The original LambdaMART is not included in thebaseline algorithms as it has been shown that theperformance of LambdaMART is inferior to ranking6http://www.kaggle.com/c/asap-sas/dataSVM on the same dataset (Chen et al 2012).4.3 Feature SelectionAlthough machine learning approaches usually usethe all features available for training, we try to obtainan carefully selected feature set that can withstandthe scrutiny of construct validity in assessment de-velopment (Chen and Zechner, 2011).
Specific stepsof feature selection conducted on individual featuresare as follows:To begin with, the importance of the features isdetermined by computing each features Pearson cor-relation coefficient with human raters scores basedon the training set (Chen and Zechner, 2011).
Fea-tures whose absolute Pearson correlation coefficientwith human scores are lower than 0.20 are removedfrom the feature set.Next, we calculate the inter-correlation degreesbetween these features.
For each pair of featureswhose Pearson correlation coefficient larger than0.90, one of them should be removed.
The criteriafor feature removing is as follows.
Firstly, at leastone feature in each subset of features should be re-mained.
Satisfying the first prerequisite condition,the removed one should be linguistically less mean-ingful than the remaining one.For prompt-specific rating model, feature selec-tion is conducted on the essays associated with thesame prompt.
For generic rating model, the finalfeature set used for training is the intersection of the8 feature sets for prompt-specific rating model.For space reason, here we briefly summarize thefeature selection results.
Among the lexical features,word length in characters larger than 8 and 10, num-ber of words in each of the levels from 3 to 6, num-ber of unique words, and number of spelling errorsare mostly selected.
As for the syntactical features,sentence length in words larger than 18 and 25, num-ber of commas, mean clause length and the meandepth of parser tree are usually selected.
Amongthe grammar and fluency features, mean tf/TF ofword bigrams and mean tf/TF of POS trigrams arealways selected.
For content and prompt-specificfeatures, essay length in words, word vector and se-mantic vector similarity with high rated essays, textcoherence are usually selected for training a prompt-7http://people.cs.umass.edu/ vdang/ranklib.html1747Table 1: Cross-validation on ASAP dataset measured by quadratic weighted Kappa.Algorithm Prompt-specific ANOVA Generic ANOVASVMc (baseline) 0.7302(9.75%) Significant 0.6319(23.93%) SignificantSVMr (baseline) 0.7861(1.95%) Significant 0.7022(11.52%) SignificantSVMp (baseline) 0.7876(1.75%) Significant 0.7669(2.11%) Not significantRF bagging K-LambdaMART 0.8014 Not significant 0.7831 Not significantspecific rating model.
When it comes to the genericrating model, the prompt-specific features like wordvector similarity and semantic vector similarity, areremoved.4.4 Evaluation MethodologyWe conduct three sets of experiments to evaluatethe effectiveness of our listwise learning to rank ap-proach for automated essay scoring.The first set of experiments evaluates our pro-posed approach under a prompt-specific setting.
Weconduct 5-fold cross-validation, where the essays ofeach prompt are randomly partitioned into 5 sub-sets.
In each fold, 4 subsets are used for training,and one is used for testing.
To avoid bias introducedby the random partition, we repeat the 5-fold cross-validation for 5 times on 5 different random parti-tions.
The overall quadratic weighted Kappa is av-eraged on all 25 test subsets.It should be noticed that in random partition of thewhole dataset, the overlap between any two parti-tions should be kept below 1.5?1/(#folds)?100%.For example, in five-fold cross validation, the over-lap should be kept below 30%.
This is because: ac-cording to the Dirichlet principle (Courant, 2005),each subset in one partition overlaps more than 20%with at least one subset in another partition in five-fold cross-validation.
The tolerance boundary pa-rameter is then set to 1.5.The objective of the second set of experiments isto test the performance of our listwise learning torank approach for generic rating models.
We alsoconduct 5 times 5-fold cross-validation like the firstexperiment.
In 5-fold cross-validation, essays as-sociated with the same prompt are randomly parti-tioned into 5 subsets.
In this way, each fold con-sists of essays across all prompts.
The overall per-formance is averaged on all 25 test subsets.In the third set of experiments, we evaluate thequality of the features used in our rating model byfeature ablation test and feature unique test.
In abla-tion test, we evaluate our essay rating model?s per-formance before and after the removal of a subsetof features from the whole feature set.
The per-formance difference indicates the removed features?contribution to the rating model?s overall perfor-mance.
In unique test, only a subset of features areused in the rating model construction and all otherfeatures are removed.
The learned rating model?sperformance indicates to which extent the featuresare correlated with the actual essay ratings.5 Experimental Results5.1 Evaluation ResultsTable 1 presents the first set of experimental re-sults obtained on the ASAP dataset, measured byquadratic weighted Kappa.
In Table 1, RF standsfor random forests.
SVMc, SVMr, SVMp are SVMfor classification, regression and preference ranking,respectively.
ANOVA stands for variance analysis,which aims to test whether significant difference ex-ists between the scores given by human and ma-chine raters.
The improvement of our RF baggingK-LambdaMART over each baseline in percentageis also given.For prompt-specific rating model, all of these al-gorithms achieve good performance comparable tohuman raters as literatures have revealed that theagreement between two professional human raters(measured by statistics for correlation analysis, e.g.quadratic weighted Kappa) is around 0.70 to 0.80(Williamson, 2009) (Williamson, 2009).
It is clearthat our listwise learning to rank approach, RandomForests bagging K-LambdaMART, gives the bestperformance on the ASAP dataset.
The varianceanalysis result on the six groups of scores (scoresgiven by five times of five-fold cross-validation andthe scores provided by human rater), no signifi-cant difference, suggests the robustness of our pro-posed approach.
On the contrary, although pref-1748erence ranking based approach, SVM for ranking,and regression based approach, SVM for regression,give very good result in human-machine agreement,their variance analysis results indicate that there ex-ists significant difference between the scores givenby human and machine raters.
The result of the firstset of experiments suggests the effectiveness and ro-bustness of our listwise learning to rank approach inthe building of prompt-specific rating model.For generic rating model, one can conclude fromTable 1 that RF bagging LambdaMART performsbetter than SVM for classification, regression andpreference ranking on the ASAP dataset.
Thedataset used in our experiment consists of essaysgenerated by 8 prompts and each prompt has its ownfeatures.
With such a training set, both classifica-tion and regression based approaches produce notgood results, as it is commonly accepted that rat-ing model whose performance measured by inter-rater agreement lower than 0.70 is not applicable(Williamson, 2009).
And the variance analysis re-sults also reveal that there exists statistically sig-nificant difference between the scores given by hu-man and machine raters, indicating a low robustnessof these two baselines.
The performance compar-ison of the generic rating models suggest that therank based approaches, SVMp and RF bagging K-LambdaMART, are more effective than the classifi-cation based SVMc and the regression based SVMr,while our proposed RF bagging K-LambdaMARToutperforms the state-of-the-art SVMp.
Moreover,we find that there is no obvious performance dif-ference when our proposed method is applied toprompt-specific and generic rating models.
Consid-ering the advantages generic rating models have, theresult of the second set of experiments suggests thefeasibility of building a rating model which is gen-eralizable across different prompts while performsslightly inferior to the prompt-specific rating model.5.2 Feature AnalysisTable 2 gives the results of feature ablation andunique test.
In the table, ?All features?
stands forthe use of all the features available, apart from theprompt-specific features that are not applicable tolearning a generic model.
In other rows, the featuresubset name stands for the feature subset to be ab-lated in ablation test and the feature subset to be usedin unique test.
Note that we ablate (as in the ablationtest) or use (as in the unique test) a subset of featuressuch as the different statistics of word length as awhole since features belonging to the same subsetare usually highly correlated.Among the lexical features, the two feature sub-sets, word level and statistics of word length, arehighly correlated with essay score in both prompt-specific and generic rating models.
This observationwas expected since word usage is an important no-tion of writing quality, regardless of essay topics.In the syntactical features, the feature subset, sen-tence level, measured by the height and depth ofthe parser tree, correlates the most with essay score.One can infer that long sentences with nested sub-clauses tend to improve the final ratings.All grammar and fluency features achieve perfor-mance around 0.60 in feature unique test for prompt-specific rating model.
What is more, during fea-ture selection, we find that the Pearson?s correlationcoefficient between the feature values and the finalratings in each essay prompt ranges from -0.20 to -0.60, which suggests that our method to estimate thenumber of grammar errors is applicable because itis widely accepted that in the evaluation of studentessays, essays with more grammar errors tend to re-ceive lower ratings.Among the content and prompt-specific features,essay length and word vector similarity features givegood results in feature unique test.
The fourth root ofessay length in words has been proved to be a highlycorrelated feature by many works on AES (Shermisand Burstein, 2002).
Word vector similarity featuremeasures prompt-specific vocabulary usage, whichis also important to essay evaluation.In ablation test, there is no significant perfor-mance decrease no matter what feature subset is re-moved.
It seems that each feature subset contributeslittle to the overall performance and therefore can beremoved.
However, the result of feature unique testsuggests that most features used in our rating modelare in fact highly correlated with the writing quality.6 Conclusions and Future WorkWe have proposed a listwise learning to rank ap-proach to automated essay scoring (AES) by di-rectly incorporating the human-machine agreement1749Table 2: Results of feature ablation and unique testFeature subset Prompt-specific GenericAll Features 0.8014 0.7831Ablation Unique Ablation UniqueLexical featuresStatistics of word length 0.7763 0.7512 0.7801 0.7350Word level 0.7834 0.7582 0.7779 0.7306Unique words 0.7766 0.6737 0.7692 0.6786Spelling errors 0.7724 0.6863 0.7730 0.6742Syntactical featuresStatistics of sentence length 0.7856 0.6410 0.7684 0.7025Subclauses 0.7862 0.5473 0.7813 0.5050Sentence level 0.7749 0.7046 0.7796 0.6955Mode, preposition, comma 0.7847 0.5860 0.7807 0.5606Grammar and fluency featuresWord bigrams and trigrams 0.7813 0.6017 0.7824 0.4395POS bigrams and trigrams 0.7844 0.6410 0.7786 0.6022Content and prompt-specific featuresEssay length 0.7930 0.7502 0.7736 0.7390Word vector similarity 0.7658 0.7001 ?
?Semantic vector similarity 0.7924 0.5683 ?
?Text coherence 0.7863 0.6947 0.7798 0.6367into the loss function.
Experiments on the public En-glish dataset ASAP show that our approach outper-forms the state-of-the-art algorithms in both prompt-specific and generic rating settings.
Moreover, it iswidely accepted that the agreement between profes-sional human raters ranges from 0.70 to 0.80, mea-sured by quadratic weighted Kappa or Pearson?s cor-relation (Powers et al 2000) (Williamson, 2009).
Inthe experiments, our approach achieves a quadraticweighted Kappa around 0.80 for prompt-specific rat-ing and around 0.78 for generic rating, suggesting itspotential in automated essay scoring.Most existing research on AES focus on train-ing a prompt-specific rating model.
While such ap-proaches have the advantage of providing a satisfac-tory rating accuracy for essays written for a specifictopic, they also suffer from validity and feasibilityproblem as a significant amount of training data,namely essays with human ratings, are required forevery given essay topic (Attali et al 2010).
Itis therefore appealing to develop an approach thatlearns a generic model with acceptable rating accu-racy, since it has both validity-related and logisticaladvantages.
In our future work, we plan to continuethe research on generic rating model.
Because ofthe diversification of writing features of essays asso-ciated with different prompts, a viable approach is toexplore more generic writing features that can wellreflect the writing quality.AcknowledgementsThis work is supported in part by the Na-tional Natural Science Foundation of China(61103131/F020511), the President Fund ofUCAS (Y15101FY00/Y25102HN00), and theNational Key Technology R&D Program of China(2012BAH23B03).ReferencesY.
Attali and J. Burstein.
2006.
Automated essay scoringwith e-rater R?
v. 2.
The Journal of Technology, Learn-ing and Assessment, 4(3).Yigal Attali, Brent Bridgeman, and Catherine Trapani.2010.
Performance of a generic approach in auto-mated essay scoring.
The Journal of Technology,Learning and Assessment, 10(3).1750L.
Breiman.
2001.
Random forests.
Machine learning,45(1):5?32.H.M.
Breland, R.J. Jones, and L. Jenkins.
1994.
Thecollege board vocabulary study.
College Entrance Ex-amination Board.Hermann Brenner and Ulrike Kliebsch.
1996.
Depen-dence of weighted kappa coefficients on the numberof categories.
Epidemiology, pages 199?202.T.
Briscoe, B. Medlock, and ?.
Andersen.
2010.
Au-tomated assessment of esol free text examinations.Technical report, University of Cambridge ComputerLaboratory Technical Reports, UCAM-CL-TR-790.C.
Burges.
2010.
From ranknet to lambdarank to lamb-damart: An overview.
Learning, 11:23?581.Miao Chen and Klaus Zechner.
2011.
Computing andevaluating syntactic complexity features for automatedscoring of spontaneous non-native speech.
In Pro-ceedings of the 49th Annual Meeting of the Associationfor Computational Linguistics, pages 722?731.Hongbo Chen, Ben He, Tiejian Luo, and Baobin Li.2012.
A ranked-based learning approach to automatedessay scoring.
In Cloud and Green Computing (CGC),2012 Second International Conference on, pages 448?455.
IEEE.Jacob Cohen et al1960.
A coefficient of agreement fornominal scales.
Educational and psychological mea-surement, 20(1):37?46.Richard Courant.
2005.
Dirichlet?s principle, conformalmapping, and minimal surfaces.
Courier Dover Publi-cations.S.
Dikli.
2006.
An overview of automated scoring ofessays.
The Journal of Technology, Learning and As-sessment, 5(1).S.T.
Dumais.
2005.
Latent semantic analysis.
An-nual Review of Information Science and Technology,38(1):188?230.Peter W Foltz, Darrell Laham, and Thomas K Landauer.1999.
Automated essay scoring: Applications to edu-cational technology.
In World Conference on Educa-tional Multimedia, Hypermedia and Telecommunica-tions, volume 1999, pages 939?944.Jerome H. Friedman.
2000.
Greedy function approxima-tion: A gradient boosting machine.
Annals of Statis-tics, 29:1189?1232.T.
Joachims.
2006.
Training linear svms in linear time.In Proceedings of the 12th ACM SIGKDD interna-tional conference on Knowledge discovery and datamining, pages 217?226.
ACM.Dan Klein and Christopher D Manning.
2003.
Ac-curate unlexicalized parsing.
In Proceedings of the41st Annual Meeting on Association for Computa-tional Linguistics-Volume 1, pages 423?430.
Associ-ation for Computational Linguistics.L.S.
Larkey.
1998.
Automatic essay grading usingtext categorization techniques.
In Proceedings of the21st annual international ACM SIGIR conference onResearch and development in information retrieval,pages 90?95.
ACM.Heeyoung Lee, Angel Chang, Yves Peirsman, NathanaelChambers, Mihai Surdeanu, and Dan Jurafsky.
2013.Deterministic coreference resolution based on entity-centric, precision-ranked rules.
Computational Lin-guistics, 39(4).P.
Li, C. Burges, and Q. Wu.
2007.
Learning to rank us-ing classification and gradient boosting.
In Proceed-ings of the International Conference on Advances inNeural Information Processing Systems (NIPS).T.Y.
Liu.
2009.
Learning to rank for information re-trieval.
Foundations and Trends in Information Re-trieval, 3(3):225?331.Ted Pedersen, Siddharth Patwardhan, and Jason Miche-lizzi.
2004.
Wordnet::similarity: measuring the relat-edness of concepts.
In Demonstration Papers at HLT-NAACL 2004, pages 38?41, Boston, Massachusetts,2-7 May.
Association for Computational Linguistics,Stroudsburg, PA, USA.Donald E Powers, Jill C Burstein, Martin Chodorow,Mary E Fowles, Karen Kukich, and GraduateRecord Examinations Board.
2000.
Comparing thevalidity of automated and human essay scoring.
RE-SEARCH REPORT-EDUCATIONAL TESTING SER-VICE PRINCETON RR, (10).Tao Qin, Xu-Dong Zhang, Ming-Feng Tsai, De-ShengWang, Tie-Yan Liu, and Hang Li.
2008.
Query-levelloss functions for information retrieval.
Inf.
Process.Manage., 44(2):838?855, mar.G.
Salton.
1971.
The SMART Retrieval System-Experiments in Automatic Document Processing.Prentice-Hall, Inc., Upper Saddle River, NJ, USA.Henry Scheffe.
1999.
The analysis of variance, vol-ume 72.
Wiley.
com.M.D.
Shermis and J.C. Burstein.
2002.
Automated essayscoring: A cross-disciplinary perspective.
LawrenceErlbaum.Kristina Toutanova, Dan Klein, Christopher D Manning,and Yoram Singer.
2003.
Feature-rich part-of-speechtagging with a cyclic dependency network.
In Pro-ceedings of the 2003 Conference of the North Ameri-can Chapter of the Association for Computational Lin-guistics on Human Language Technology-Volume 1,pages 173?180.
Association for Computational Lin-guistics.Vladimir Vapnik, Steven E. Golowich, and Alex Smola.1996.
Support vector method for function approxima-tion, regression estimation, and signal processing.
InAdvances in Neural Information Processing Systems 9,pages 281?287.
MIT Press.1751D.M.
Williamson.
2009.
A framework for implement-ing automated scoring.
In Annual Meeting of theAmerican Educational Research Association and theNational Council on Measurement in Education, SanDiego, CA.Q.
Wu, C.J.C.
Burges, K.M.
Svore, and J. Gao.
2008.Ranking, boosting, and model adaptation.
Technicalreport.H.
Yannakoudakis, T. Briscoe, and B. Medlock.
2011.A new dataset and method for automatically gradingesol texts.
In Proceedings of the 49th Annual Meet-ing of the Association for Computational Linguistics:Human Language Technologies, volume 1, pages 180?189.Yisong Yue and C Burges.
2007.
On using simultane-ous perturbation stochastic approximation for learn-ing to rank, and the empirical optimality of lamb-darank.
Technical report, Technical Report MSR-TR-2007-115, Microsoft Research.1752
