SomeTechnology Transfer:Observations from the TIPSTER Text ProgramDr.
Sarah M. TaylorOffice of Research and DevelopmentWashington, DC 20505E-mail: sarah@ucia.govTelephone: 703-351-25651.
Introduct ionTechnology Transfer has been an important part ofthe TIPSTER Text Program from the beginning.Research alone was insufficient as a motivation for theprogram.
What was discovered in the laboratory hadalso to be transferred as quickly as possible into theworkplace.
The central role of technology transfer inthe initial formation of TIPSTER had several causes.Government sponsors and initiators of the program, in1990, could see clearly the inadequacies of the toolsthat analysts were working with, at the time, and couldalso see that the overload of text which analysts dealtwith was only going to get worse, given theproliferation of information sources and the increasingpush in the Intelligence Community to tap thosesources.
Knowing the normally long time it takesresearch advances to make their way into standardtechnology, the founders of the program rightlybelieved aconcerted effort to place good technology inthe hands of users would be necessary to insure thatthey received the benefits of the program as soon aspossible.
There were other pressures: continuingreductions in the numbers of analysts available to doanalysis, reductions in budgets, and constant pressuresto justify Government sponsored research in terms ofdemonstrable and practical benefits to the Government.The research fields sponsored by TIPSTER areapplication oriented in any case.
Both DocumentDetection and Information Extraction imply aneventual user - someone who needs documents orsomeone who needs particular information aboutparticular kinds of entities or events.
Successfulresearch does thus have direct implications foroperational applications.
But more broadly,applications can be important to much research thatdeals with human language.
Language xists for thecommunication of meaning.
Any automatedprocessing of language cannot be really evaluatedoutside the context of the actions of expressing andunderstanding, both actions which are highly situation,or task, dependent.
In addition, language is a humanconstruct and, whatever its imperfections, a person isI This material has been reviewed by the CIA.
That review neither \[constitutes CIA authentication of information nor implies CIA I\[ endorsement of the author's views.
Ithe only real authority we have on language, the onlymeasure of whether or not meaning has been conveyed.The application of automated language processing toconcrete human tasks is itself an important researchmethod in this field.
Although the goal ofstrengthening the science through the application ofthe technology was not explicitly stated as a reason forthe emphasis on technology transfer in the TIPSTERProgram, nonetheless I think the emphasis on tasksand on the usefulness of the technology is benefitingthe underlying science of computational linguistics.Central to the initial TIPSTER planning, then,was the goal of technology transfer.
The magnitude ofthe difficulty of achieving that goal was perhaps notwell understood in the early days of the program; butsince then, we have all learned that this transfer doesnot happen automatically, but requires even moreeffort, planning, and creativity than the research.
Thegoal of technology transfer is subscribed to by bothGovernment and contractor participants.
There areconsiderable potential rewards which serve asimportant motivations to people involved in theprocess - material incentives, but also the satisfactionof building something that works and does useful tasksfor people who need it.
These rewards are important,because the process of technology transfer is difficultand messy.
It requires the persistence and flexibility totackle many obstacles.
It is as much a matter ofbusiness and psychology, as it is of technology andengineering.TIPSTER Phase II has made a number of stridesforward in transferring the research advances of Phase Iinto operational use.
Collectively the participants inthe program have learned agreat deal about what worksand does not work in transferring technology.
Theprogram remains committed to continuing anaggressive technology transfer effort.
This papersummarizes what I have learned from the Phase IIeffort.
It can perhaps erve as a basis for others toreflect on the same issues.
A record of what waslearned in Phase II efforts will be valuable forcontinued tech transfer in the future.232.
What is meant by TechnologyTransfer?In the TIPSTER Program the phrase "technologytransfer" means taking algorithms or methods whichhave been developed in a laboratory setting and proventhemselves potentially valuable, through theevaluation process, and making these algorithmsavailable for use by analysts in their own workingenvironment to do their job, on a daily basis.
Thisimplies not only technology which can work fastenough, without breaking, to meet operational needs,but also technology which in most cases is reasonablywell integrated into the analyst's existing workenvironment, which has a decent human interface,which provides value added to the analyst, and whichcan be operated and maintained by the user'sorganization.There are other possible meanings for this phrase.It is used, in some contexts, to refer to the process oftransferring the responsibility for development of atechnology from one group of people to another,particularly as the development changes tages; forexample, the transfer of technology developed underGovernment sponsorship, in a research lab, to privatesector sponsorship, for commercialization.
The phraseis used in other contexts to mean the transfer of thetechnology and its mode of use from one set of usersto another; for example, the sale of advanced weaponssystems from the United States, or any other possessorof such systems, to a country which does not yet usesuch weaponry, is a technology transfer operation.The use of the phrase in the TIPSTER Program,but not unique to it, broadens and combines these twomeanings.
In TIPSTER, the goal has been not onlyto get the newer technology into the hands of specificusers who need it, but also to make the technologywidely available within Government.
Thetechnologies researched in TIPSTER have applicationto text handling tasks throughout the Government andapplying it successfully in one or two well definedplaces would not be sufficient o meet he needs whichthe program set out to address.
Immediate transfer tousers, with an articulated mode of use, addresses someof these needs.
However, it is also necessary toinclude transfer of the production of the applications ofthe technology to a sufficiently broad spectrum ofvendors o that the technology can be made availableto many Government customers.
In the TIPSTERcase, technology transfer has meant thecommercialization r productization of at least some ofthe research advances, and the spread of a reasonablenumber of the better ideas from the Governmentsponsored research into a broad range of products, aswell as back into new research projects.A close look at the various uses of the phrase"technology transfer" makes clear that the transferprocess is not one of simply handing a thing from onegroup of people to another.
Things are indeedtransferred, but knowledge must go with the thing.This transfer of knowledge is one of the majorchallenges in the process - knowledge of howsomething works, of how to build it, integrate it,maintain it, improve it and most of all, how to use it.The knowledge of how something works and how tobuild it is presumably a natural by-product ofdeveloping a technology in the first place.
Theknowledge of how to integrate, maintain and improveit, is more difficult to come by, but is still within thestandard omain of applications developers.
However,knowledge of how to use these technologies i muchmore difficult to develop and is one of the majorstumbling blocks to transferring the technology tomore general use.3.
Some obstacles to easy transfer ofTIPSTER technologiesMany of us were probably taught he adage, at ourmother's knee, "build a better mousetrap and the worldwill beat a pathway to your door."
Implication: anentrepreneur need only get a good idea, for somethingthat people need, and build it well.
The rest will takecare of itself.
Excellence will be recognized andrewarded by the forces of the market place.
Turns out"it ain't necessarily so," depending, perhaps, on howone defines "better mousetrap."
This section describessome of the problems that we have encountered intransferring technology into useful applications.Some of the solutions we have employed to thesedifficulties are described later in the paper.Getting technology to specific usersFinding people to try out a technology can besurprisingly difficult.
A number of pressures can deterpotential users from trying a new technology.Helping with a development and learning a new set ofprocedures takes time and energy.
In the highlystressed environment of many Government users, whoare overworked, working in barely comfortableenvironments, and may be using a plethora of badlyintegrated or unintegrated computer systems, this addeddemand may seem impossible to meet.
It is verydifficult for users to judge ahead of time whether andhow much the technology will actually benefit hem.Most do not understand how the technology works;they must take it essentially on faith that thetechnology will do what it is supposed to do, and thatwhat it is supposed to do will actually help them.This is p~ticularly true for the TIPSTER technologiesof Document Detection and Information Extraction, in24which processing is almost entirely hidden from theuser.
These two capabilities often sit inside othermore visible processes, o it is not always clear to theuser what added benefit hey bring.Understanding the user's tasks and developing agood technology match for them is the first necessityfor an application.
More than superficialunderstanding of the user's job is required, even tosimply explore the possibility of an application.
Thedeveloper should understand the "guzintas" and the"guzoutas" in some reasonable detail, even to make aproposal to a user as to how the technology might beapplied.
But how is the developer to get thatknowledge?
The user has no time to discuss hisproblems in detail with anyone.
The user may not beable to describe his work flow with sufficientabstraction and accuracy so that a developer will beable to understand what is required.
Developer and usercome from two different worlds; in most cases, usevocabulary that is misunderstood by each other;approach technology differently; and, approachanalytical tasks differently.
Communication betweenthem can be poor and extrapolation by the developer tofill in what is not told can be inaccurate.
In addition,there may be security restrictions which furthercomplicate the process of understanding the user's dataand tasks.TIPSTER technologies, by their very nature, willbe integrated into a larger system.
Much of thissystem consists of further hardware and software,sometimes highly outdated.
But the system alwaysincludes the user and the user's work flow.
Part ofunderstanding the user's task is understanding ot justthe specific Detection or Extraction events that mayhave to take place, but understanding how these fitinto the entire process the user goes through to get hisjob done.
Information about the components withwhich the TIPSTER technology must interact can bedifficult to obtain.
The technical solutions to theintegration into legacy systems may be awkward, atbest.
Existing systems can be poorly documented andconsist entirely of proprietary code.
They may be oldenough that modularity and open architecture were notcommon practices when they were developed.
Therecan be security restrictions on information about howthey work.
The environment i self can be changing,with constant upgrades to operating systems and basicwork packages; if the hardware/software environmentis not being well managed, integrating into it can be anightmare.Besides the end user - that is the user that willprocess text information with the application - thereare others who use an application and who must beaccommodated in the development of an application:the people who will support and maintain the system.These include system administrators and systemmaintainers.
While these people are closer to thedevelopers in their experience of technology and thusmay communicate r asonably easily with developers,they may still resist the trial of new technology forother reasons.
The new technology, unless asupported COTS product, may seem too risky in termsof both integration and maintenance.
It may requirehardware and software packages with which the supportpersonnel are not familiar and for which the largerorganization does not provide support.
They may beafraid that the new system might completely overloadexisting network or indexing capacity, which problemcould not be solved without affecting many more workgroups and applications than the targeted group.
Thesupport staffs themselves may not have the dollars orpersonnel hours to provide for any systems other thanthe ones they already maintain.
It is difficult toproject he costs of maintenance of a yet unbuilt anduntested system, and support staffs are justified inremembering their worst experiences.
They rightly donot want to get involved in costly maintenancecontracts and can be wary of anything which smacks ofa proprietary system, requiring maintenanceagreements with a single vendor for years to come.Additionally, the support staff may be largely seeingthe cost side of the new technology, without receivingmuch from the benefit side of the greater functionality.Of course, there are also the issues none of us liketo talk about publicly, like bureaucratic politics andturf battles.
New technology can pose a challenge toexisting equities.
Users may not want to share withothers the problems with their current work methods,as these might suggest here are inadequacies in theirproduct.
Some users may be afraid that the newtechnology will put them out of work.
Some may beafraid that the technology will only bring them morework.
One set of users, offered new Detectiontechnology, with the promise that it would providethem with more relevant documents, topped listeningat that point and announced they did not want to getmore documents; they already had as much as theycould read.
End of discussion.
There was no chance toexplain that the technology could help them get to thebest documents more quickly and thus, in the end, savethem effort and allow them to do better 'work.Existing technology may be defended by managerswho made the decision to buy and use it; it may bedefended by the contractors who installed and maintainit.
New technology, provided by non-users, can beseen as a threat o the user's autonomy and authorityover his task: "no-one can tell me, or even help me, domy job, except maybe someone who has done, underthe same stresses as myself, the same kind of job.
"It can be difficult for the person responsible fortransferring technology to come to agreement with the25user group on the appropriate scope and goals for aproject.
Users who are eager to try new technologymay be unsympathetic with some of the baby stepsnecessary to make technology insertion go smoothly.Many of us are familiar with the user who sees aprototype, likes it, insists on keeping it, and then isdisillusioned when the software proves not to berobust or the throughput is insufficient.
Most projectsseek to make an improvement to an existing process,but that can be difficult to determine since old methodsof doing the work have not been baselined.
Whileprocessing speeds and throughput of establishedsystems are known, quality of output, accuracy of theautomated processing steps in terms of Recall, andsome measure of the ease of use of established systemsare not.
Generally, the collective will to baseline thequality of older processes does not seem to exist.Perhaps people feel that the systems must be upgradedin any case to newer hardware and software suites -they will do the best they can to get the best newsystem and not worry too much about how good orpoor the old system was.
This means that anyimprovements enabled by the new technology cannotbe established objectively.
Improvement will beentirely in the perception of the various users of asystem and anyone who uses the results of their work.A new system could provide many benefits, but if forsome reason the user does not like it, the benefits maynot be perceived or may not be sufficient o outweighthe negative aspects of the new system.
This puts aheavy burden on the purveyor of new technology, tomanage its insertion in such a way that it both pleasesthe users and does them good, not ill.Making technology broadly availableMeeting the second part of the TIPSTERtechnology transfer goal, that is making thetechnology widely available, at least to theGovernment, at reasonable costs, poses furtherproblems.
Commercialization f TIPSTER researchmay provide some answers.
However, the technologycan be costly, even if commercialized, in terms oflicenses, integration costs, and maintenance costs.Whether the applications are handled by a commercialfirm or not, the market for advanced technology in thisarea may simply not be large enough to support lowercosts.The goal of broad availability of the technology atreasonable cost provides one potential area of conflictbetween the Government sponsors of the program anddevelopers who work with us.
Some developers maybe interested in commercializing products and othersmay be interested in building custom applications forspecific customers.
Both groups can have an interestin keeping their technology advances secret in order toimprove their competitive position, thus taking astance in conflict with the Government's push to makeadvances widely available at a reasonable cost.
In fact,it is highly probable that some competent researchersand developers have not participated in the TIPSTERProgram because of a wish to retain complete controlover their research advances.Some solutionsMany of these problems are not unique toTIPSTER and potential solutions to these problemscan come from a wide variety of sources.
TIPSTERapplications can by no means claim a perfect record inmeeting all of these issues and resolving them.However, in the Program and elsewhere we have madea lot of progress in learning how to deal with them.Many of these problems tem from the fact thatTIPSTER is working in a relatively new technologyarea.
Automated information systems are, in thehistory of technology applications, a comparativelynew phenomenon.
Many of the issues that are unclearor rapidly changing - such as the way in which thetechnology will be used, or the hardware/softwareenvironment - are so simply for this reason.
Suchproblems cannot be made to disappear; they must be,instead, accepted and dealt with as best as possible.Other issues - such as the stressed work environmentof our users - also are not under our control.
However,there are steps we can take to ameliorate the effects ofthese issues.
And there are some problems for whichwe can offer more complete solutions, because they aremore completely within the purview of the TIPSTERapplications.4.
Understanding the steps intechnology transferWe know by now that taking technology from thelaboratory and getting it to the point where people areusing it regularly is not simple.
It can help tounderstand the process to look at it as a series ofsmaller steps.
No one of these steps can be skipped orignored, although some can be compressed and theentire process can be speeded by the application ofmore effort at various points and by careful planning.The process begins with the research advance andthe idea that this particular advance could be helpful tosolving a particular user problem.
In the case ofTIPSTER technologies, of course, the earliestrealization of the utility of Document Detection andInformation Extraction to the Intelligence analystobviously predates the program.
The importantcontribution of the TIPSTER Program was therealization, in 1990, that the two technologies requiredsubstantial improvement to be of better use to the26analyst, and instituting a method for effecting thatimprovement.
MUC \[1\] and TREC \[2\], the evaluationconferences for the two technologies, becameimportant in helping to determine whether advanceswere sufficient o take the next steps toward movingthe technology into the work place.
Given the natureof these evaluations we have not had absolutemeasurements of the degree of improvement of theTIPSTER technical solutions over the technicalsolutions that exist in the workplace, but we can showwith certainty that individual systems are improvingrapidly, and we have strong evidence that they offerbetter accuracy than most in-place systems.Another aspect of the early stage of the transferprocess, for TIPSTER, was determination of a fairlybroad set of new functions on which to work.
Wecame to recognize, as we discussed user needs, that"one size does not fit all" and that part of the problemof existing text handling systems was inflexibility andsingle focus.
Therefore, a program - which had thepotential to become a competitive search for singlebest solutions in both Document Detection andInformation Extraction - became instead asearch for avariety of solutions, none of which is perfect, but allof which have different useful features to offer.
TheTIPSTER Architecture was developed partly to giveuser organizations as much flexibility as possible inimplementing solutions.
Providing for this flexibilityat the early stages of a technology improvementprogram is necessary, since user requirements cannotand should not be determined in detail at the earlystages.
A research effort aimed at a very specific set ofuser requirements would have failed, because therequirements would have changed by the time theresearch was ready for transfer.
In addition, it wouldhave produced solutions which were as single threadedas existing ones.
Better technology is itself going tochange requirements and should be developed from thebeginning with as broad a base of functionality aspossible, in order to meet the new requirements hat itwill generate.During the second step in the technology transferprocess the technology is made integratable.
Whennew functionality has been proven to work againsteither actual analyst data or something extremely closeto it and judged to work sufficiently well that it isprobably worth the pain and cost of integration, then itis time to begin moving the technology closer to theuser's environment.
In the TIPSTER Program, thisoccurred with the inauguration of Phase II.
In ourcase, one important step was to make the technologycompatible with a number of possible targetsoftware/hardware environments.
The greater thenumber of end environments that can be accommodatedthe more likely that the technology can be integratedquickly, when a final determination is made to deployit.
Other aspects of the technology were alsoaddressed, such as the speed of various processes,memory and storage requirements, modularity,interfaces to some standard COTS products, and soforth.
For TIPSTER, a major component of thesecond step was the development of the softwarearchitecture, that is the development of accepteddefinitions for major components, and some modulesand interfaces.
Independently the demonstrationprojects also addressed other integration issues, such asthe porting of modules from LISP to C and C++, thespeeding up of indexing processes, and the integrationwith standard data base products.
In the case ofTIPSTER, many of these improvements were paid forby the Government components who needed them.Some were initiated and supported by the individualvendors who saw it to their advantage to provide amore easily integratable product.
Outside of thedevelopment of the Architecture, only a small amountof integration work was supported irectly by theTIPSTER Program Executive Committee.The third step is to integrate into an experimentalenvironment so that complete system flows can bedemonstrated and important processing threads can becarried out from start to finish.
This step tests theeffectiveness of step two and prepares the way for stepfour.
For TIPSTER, demonstration projects undertookthis step individually in Phase II.
For Phase III, theArchitecture and Capabilities Platform will provide anenvironment to work on these issues.
The Free TextManagement (FTM) Project \[3\], for the National DrugIntelligence Center (NDIC), at the Federal IntelligentDocument Understanding Laboratory (FIDUL) is anexample of a Phase II project devoted entirely to theexperimental integration of TIPSTER technologiesinto a near user environment, for the purpose ofengineering and trade-off studies.
TIPSTER pilots,such as CANIS \[4\], to some extent perform the samepurpose, although a less broad range of issues can beexperimented with under CANIS than in FTM.In step four, the deployment in the experimentalenvironment is used to develop a plausible concept ofoperations in terms of work flow; a plausible userinterface is developed to go with it.
CANIS and FTMare both examples of this step.
They employ earlystage user interfaces for the purpose of investigatingthe way users would actually like to use thetechnology.
Information from the test and use of theseinterfaces will be fed into specific requirements forfurther interface and work flow development if eithersystem is actually going to be moved into full-timeoperational use.
For this reason, at this stage, theinterface should be easy to develop, easy to change,and familiar in some aspects to what users knowalready.
A number of demonstration projects use Webbrowsers for this purpose.
In step four, potential users27of the technology are exposed to some of its possibleuses, as much as possible seeing their own data flowthrough the system.
Their reactions and suggestionsare collected as important sources of ideas about howto actually configure the technology against heir task.At this point, it is particularly important for adeveloper or someone who communicates well withdevelopers to become intimately familiar with thetasks of a number of potential user groups.
Thisperson can then experiment in the use of thetechnology to do these tasks.
It is important to haveinput from users, who may also experiment with theuse of the technology if they are inclined to, but it isalso vitally important to have someone, familiar withthe technology and its potential, ook at new ways oftackling the user's issues.Step five is to respond to a real applicationopportunity.
If the preliminary work has been welldone (i.e., steps 1-4) the development of an actualapplication should be relatively rapid, given areasonably stable environment to integrate into.Rapidity of insertion of the technology at this point isan important objective.
Fundamentally, this isbecause the more quickly a project can successfully beput into place, once users have signed onto it, themore likely it is that the project can avoid a number ofserious pitfalls: changed target environment, changeduser task, user reorganization, changed user prioritiesor goals, radical improvements in the base technologywhich have not been integrated into the design, andperception by the user of excessive amounts of timebeing required for the project.
However, it cannot bestated strongly enough that appropriate preparation (viasteps 1-4) must have occurred in order for rapidinsertion to take place.
Attempts at rapid insertionwithout the needed preparation leads to manyproblems, such as applications that are not robust,poorly planned user work flows, poor estimates ofintegration times, and badly prioritized or developedrequirements.
These in turn can lead to systems thatare not used, to dissatisfied customers, and to heavyreworkings of the system under the guise of O&M(operations and maintenance).In step five, the use of a standard form of projectmanagement cycle becomes appropriate.
Requirementsfor the particular application must be understood,defined, and baselined, accounting for: the user'scurrent work flow and possible changes to it; the targetsoftware/hardware environment; the data input, output,and storage formats; maintenance and support;documentation and training; testing and evaluationplans.
Rapid prototyping of interfaces, including theGUI, has been successfully used, in ADEPT \[5\] forexample, to help define the requirements and to flushout technical problems.
Prior to installation and use,testing and evaluation in an exact replica of the user'senvironment is usually necessary.
Training for end-users, managers, and support personnel shouldaccompany installation.
Further evaluation afterinstallation can determine whether the system has infact produced the expected improvements.Step six is to provide initial system support, rapidresponses to problem reports, and as much hands-onuser support as possible.
No TIPSTER system withwhich I am familiar has actually reached this stage asof the writing of this article.
However, some generalcomments are possible from my observations of othersystems developments.
Customer service, as manycommercial organizations are aware, makes thedifference between success and failure in manyinstances.
The way in which a system is presentedduring training and supported will make a bigdifference in how well it is liked.
At the same time,to avoid runaway cost inflation on a project, theremust be clear delineation between fixes and changes atthis stage.
Despite all the careful testing, it isinevitable that there will be some bugs in the softwareand these must be fixed immediately.
However, userscan take this stage as an opportunity to change theactual functionality of the software, in effect o changethe requirements.
While perhaps some of thesechanges can be responded to, if the budget alows, theyare best tracked separately from fixes to the software.A clear understanding between the developer and theuser organization concerning how much effort is beingput into fixes and how much into actual modificationsto respond to a change in the requirements i  veryhelpful.
Or there can be an agreed upon period inwhich changes are made up to a certain level of effortor cost.
Finally, within six months to a year from theintegration of the technology, the maintenance andsupport of the system should be transitioned to theuser's organization.5.
COTS, GOTS and the alternativeOne of the issues the TIPSTER Program has hadto struggle with is the form in which its technologycan best be provided to the Government user.
There isconsiderable hope among some in Government thatmany text handling needs can be met with commercialproducts.
It is hoped in this manner to control thecost of using these technologies.
If this is to be thecase, then TIPSTER technologies would have tobecome part of standard commercial offerings.
TheTIPSTER Program has made a number of differentefforts aimed at facilitating the use of its advances bycommercial entities.
All TIPSTER materials,including research papers, are published and researchersare encouraged to present heir results at other openforums.
Some commercial participants have foundtheir way to MUC and TREC, where their research can28be benchmarked and shared with others.
TIPSTERparticipants have been encouraged to commercializetheir ideas, when feasible.
A number of commercialspin-offs of TIPSTER technology are happening.
TheTIPSTER Program is keeping abreast of developmentsin standards such as Z39.50 and the DocumentManagement Alliance.However, these efforts alone will not result in therapid development of inexpensive, robust, and well-supported commercial products which also meet theGovernment analyst's requirements for informationhandling of text.
Developing aproduct for commercialmarket itself takes time, so that advances promoted byTIPSTER, left to their own, might take longer thanwe wish to reach the commercial market.
Commercialuses of the technology will not necessarily include allthe functionality that Government analysts require.
Inorder to get those more advanced versions of thetechnology for its use, the Government has to helppush the final steps of technology transfer of thoseadvanced features.
This push can be accomplishedduring the development of a specific application, butthese intermediate steps (generally steps 2-4) must beincorporated into the planning and budgeting for suchan application.The bottom line is that Government analysts,particularly Intelligence analysts, have text handlingand information handling needs that are more difficultto satisfy than those of the general software buyingand using commercial world.
While the advancedsoftware features they need may eventually becomecommonplace in commercial software, this is likely totake a long time to happen, since the general demandfor such features appears to be moderate, at best.
Thisis easy enough to understand if one stops to thinkabout the kinds of applications that most potentialusers, of Detection for example, have.
The generaluser - students, small businesses, people at home -certainly have very little interest in Recall and even inPrecision.
Their most pressing concern will be speedand getting one or two good answers to their questionsin the top of their return document list.
Generalbusiness users, doing market research perhaps, ortracking competitors' activities, would likely be mostinterested in Precision in the top of their returndocument list; they are not tracking events at a levelthat requires a total and detailed picture of everythingthat has been said related to a particular topic over along period of time.
Additionally, the cost of missingsomething is measured in dollars, not the loss of lifeor the security of the country as it may be for anIntelligence Analyst.
Even the applications, uch asInsurance and Law, which have many similarities tothe Intelligence application, rarely have the same far-reaching cost associated with failure as the Intelligenceapplication.
In addition, while these two applicationsrequire better Recall than other commercial ones, theydo not probably place the same stresses on a Detectiontool because the user is searching in the context of anarrower range of document types and a narrower rangeof types of questions which they need to answer.The need for Information Extraction technologyappears even less pressing outside the Government.Besides the potential this technology may have toimprove Detection capabilities, its major applicationto date is the filling of data bases from unformattedtext to support further analytical tasks.
While somenon-Government applications, such as thedevelopment of formatted patient records fromunformatted physician reports, have been investigated,there appears to be relatively low demand for this typeof technology in the commercial world at this time.Given this state of affairs, COTS products do notseem even yet to be an assured answer to the need for awell-supported suite of tools employing TIPSTERtechnology.
Government off-the-shelf software,GOTS, may perhaps provide a better answer.Government owned software covers a broad spectrumof readiness and robustness.
It offers no easy solution,because to provide software in a truly off-the-shelfcondition to Government users, would in fact meansetting up a small business-like unit to do softwaretesting and upgrades, promotion of products,distribution, integration support, and maintenance, allof which cost money over and above the initialinvestment in the software development.
Thus, eventhough the Government owned software can be sharedreasonably freely among agencies, costs related to thedistribution would need to be born by someone,presumably the agency requinng the software.
So thedistribution of TIPSTER GOTS would require theestablishment of a small business center to test andmaintain the software.
Before such a business couldbe established, a market survey would be required todetermine if such a center would pay for itself, inaddition to providing, at a comparable or lower price,better service than the already existing less formallyorganized system of distribution.The system of distribution that exists now forTIPSTER GOTS is informal and low cost.
We have aclearinghouse for information, in the form of theT IPSTER Executive Committee and otherGovernment participants.
The TIPSTER programfreely advertises its involvement in DocumentDetection and Information Extraction through manyinformal contacts and a number of formal reviews andpublications.
Those desiring information about thistype of software contact the committee or otherparticipants and can be directed to contractors who havethe kinds of software which is required.
A SystemsEngineering contractor also keeps on file records of the29design of all TIPSTER systems o that Governmentusers can get detailed information about theconfiguration of any of the software which they maybe interested in procuring.
The cost for integrating,modifying, and maintaining the software is born bythe using organization in fees to the vendor.
So,TIPSTER GOTS is not free, but cheaper thandeveloping the capability repeatedly in differentlocations.The T IPSTER software Architecture wasdeveloped to permit such sharing of software developedat different agencies.
However, it also is beingpromoted to meet a number of other problemsassociated with the delivery of software to the end user.The existence of an established set of interfaces for thisgroup of technologies allows applications to bedesigned more quickly and with some accumulation ofknowledge, across vendors, of the best ways to usethem.
It will allow the Government user to upgradeapplications by the insertion of key new capabilities -for example, the replacement of one entity taggingmodule with a new one - without a complete change ofapplication and without necessarily having to staywith the same vendor.
The divorcing of theTIPSTER technologies from the human interface willmake it easier to insert them seamlessly into a varietyof user desktop environments.
While all theseimprovements in the way the software is delivered andmaintained will probably result in some cost savings,they should also make it easier and less disruptive forthe user to upgrade systems, which is just asimportant.The TIPSTER community began the developmentof the Architecture because of the need to accelerate hedeployment of the technology it had developed.
Aswith the technology itself, there did not appear to besufficient interest in the commercial world to produce aset of agreed upon standards for integrating DocumentDetection and Information Extraction as quickly as theTIPSTER Program needed them.
The Program,therefore, had to initiate this development itself.
TheArchitecture has been developed to be as useful aspossible to a variety of systems, since the TIPSTERcommunity incorporates a widening sphere of vendorsand researchers and requires asoftware Architecture atits core which allows all of them to work togetherwithout too great a cost in adaptation of individualsystems.6.
UsersThe development of new technology to support auser task must be a collaborative process.
It is theuser who knows what task has to be accomplished, butit is the technologist who understands what thetechnology can do and how it can be configured topotentially help.
The contributions of both groups arenecessary.
In the case of the TIPSTER Program mostof the leadership has been taken by the technologists,albeit technologists with considerable xperience inanalytical tasks and knowledge of present and futureuser requirements.
When the technologist is leading,an important part of any technology transfer project,we have found, is the establishment and maintenanceof trust between the technologist and the user.There are many facets to building and maintainingthis trust.
It requires understanding the user's style -what do they require from someone in order to trustthem?
Style will vary widely among different userorganizations, from those who feel most comfortablewith detailed project plans and schedule charts, to thosewho hate view graphs and only trust round tablediscussions with an occasional hand drawn diagram onthe back of a sheet of paper.
Some feel best withdevelopers itting in their midst, some like theirdevelopers working in hi-tech labs at the developersspaces.
Some like formal reviews, others like peopleto stop by and chat, and so forth.It is important for the technologist tocommunicate hat he/she is promoting the user's ends,not the technologist's ends.
The technology is beingbrought o serve the user's task and not solely to bringcredit to the technology's developer.
The technologistmust understand the user's job well enough to explainclearly how the technology could possibly help.Demonstrations with the user's data, mocked up userinterfaces, examples of similar projects, anddescriptions of the results of testing the technologyagainst asks similar to the user's, can all be used tosupport he contention that the technology could bemade helpful to the user.
At the same time, thetechnologist, being an outsider, cannot prescribe howthe task should be done with the new technology.
It isthe user's purview to control his/her own work style,after all.
At the same time, if the technologist simplylets the user dictate how the job should be done, asoften as not the user will make inappropriate use ofthe technology, either expecting too little or too muchof its capabilities.
The best solution seems to be forthe technologist to offer as many reasonable choices aspossible, for the application of the technology,allowing the user to choose or fine tune the actualwork flow.It is important also to educate the user about thetechnology.
Better informed users will make betterdecisions about what technology to purchase and howto use it, so that the educational aspects of any workwith the user will pay dividends far beyond the successor failure of any particular project.
In the case ofTIPSTER, the existence of an established and well30recognized program has been helpful in gaining usertrust, but also the program workshops and evaluationconferences, as well as the proceedings coming out ofthem, have been useful in helping to explain to userswhat the technology does and how it works.
Thedemonstration projects themselves were conceived ofas partly having an educational mission; nothingwould be so effective in persuading people that thetechnology "was for real," that it had something tooffer them, and a bit about how it worked, than seeingit and trying it in an operational mode.
If only one ortwo of these projects can succeed in making a large,positive contribution to a user's task, the returnsshould be substantial in making it clear to people thatthe technology is ready to be deployed and for whatkinds of tasks.The mission of educating the user about thetechnology means being as honest as possible aboutwhat it can and cannot do, explaining clearly how thetechnology will fit into the user's environment,discussing requirements on their time for development,evaluation, and training, and making good faithestimates of maintenance fforts, should a systembecome operational.
In any project involving the jointinvestment of resources, a clear agreement worked outahead of time concerning the obligations and resourcescoming from each party is important.
Resources inthis case means not only funding, but also thepersonnel time necessary to do things such as managethe project, develop requirements, review interfacedesigns and so on.
Generally, we have found thatunless users are sufficiently concerned about theimprovements in their task to invest time in learningabout and supporting the application development,they are a "high risk" user, that is, one who is likelyto back out before a project is completed or who willnot use and support he software once it is completed.We have found that written agreements betweentechnologists and customers, igned at an appropriatemanagement level, even when operating within thesame agency, covering expectations of funding andpersonnel resources as well as the criteria for successof a project, are extremely helpful in preventingdisagreements and disappointments over the course ofan applications development.As with any job, the task of bringing anapplication to the operational environment will morelikely be successful if the people who are involvedwork as a unified team.
On the part of the projectleader, frequently the TIPSTER representative, thisrequires including in the process from the beginningall those people who will be affected by theapplication.
It means having representatives from theuser group, from a couple levels of their management,from the developers and their management, from theIS (Information Services) staff or the equivalent,cognizant of each other, of the goals and progress ofthe project, and aware of their respective roles andobligations.
At the same time, the project leader mustbe aware that most of these people have other jobs todo and their time should be asked for only whennecessary.
This translates into carefully plannedcommunication of information to those who need it,when they need it, well focused meetings, and thepresentation tothe user only of quality products (eveninterim products like prototype GUIs) which have beenthoroughly reviewed and are free of obvious mistakes.To the extent that the project leader can alsocommunicate the excitement of developing a newcapability and create a team which enjoys workingtogether, these factors will cause people to put forththeir best effort to make the project successful.7.
Risks and EvaluationsIn the end, however, it is well to remember thatevery project o transfer a new technology to the workplace is a risk.
While a great deal can and should bedone to reduce the risk, there is never any guaranteethat such a project will succeed in all or even most ofits goals.
As with any other endeavor, no failuresmeans both that nothing will be learned and thatnothing very difficult has been tried.
So, somesetbacks, at least, in transferring this technology to theuser are necessary.
It was problems, some of them notsolved the first time, which taught us what I haverecorded in this short discussion.
At the same time,even an apparently failed project can have good results,if the causes of the failure are understood and theknowledge incorporated into later planning.
For thisreason, testing and evaluation of not only the research,but also applications i crucial.Evaluation incorporates all aspects of thetechnology transfer project: (1) management, (2)relations with the user and IS staff, (3) developmentcosts and schedule, (4) user interface, (5) work flow,(6) robustness of the software, (7) throughput, (8)accuracy, (9) ease of integration, (10) ease ofmaintenance, (11) use of the architecture.
Evaluationmethods differ for each.
For project managementissues (1,2,3), appropriate oversight by themanagement of the project leader is required; selfevaluation at the end of the project, by both the projectleader and the developer can be helpful.
For usabilityissues (4,5) we have less experience.
However, acurrent TIPSTER project is using a combination ofinterviews with user/testers after their sessions withthe prototype and observations of the user/testersessions to try to determine how easy to use theapplication is.
Performance issues (6,7,8) can beevaluated by observation of the system for failures, forthe speed of various tasks, and by comparison of31human generated output with machine output.Software design issues (9,10,11) are currently beingevaluated through examination of the design in theTIPSTER Engineering Review Board, as well as bymonitoring of the integration and maintenance phasesby the project leader.Much of the risk of a technology insertion projectcan be mitigated by two strategies - paying carefulattention to the user issues addressed above and payingcareful attention to the steps of technology transferdetailed above.
Understanding how far along one'stechnology is on the path toward deployment andcarefully evaluating the technology at each stage in itsprogress can prevent many mistakes.
A number ofdifficulties I have observed in technology transferprojects have occurred because integration has occurredbefore component functions were sufficiently wellresearched and understood.
Another common difficultyis failure to work out the best uses of the technologybefore an application is chosen and a user organizationsigned up.
Both of these failings occur because neededsteps in the progression of technology from research tothe user environment have been short-changed.A third strategy can also reduce the risk oftechnology transfer projects, which can be described as"start small and out of the way."
This strategy doesnot reduce the chances of failure, but reduces the riskthat failure will be disastrous.
It has been importantfor TIPSTER to have demonstration projects whichshowed that TIPSTER technologies could dosomething useful and important.
However, there aremany important tasks that are at the same time"small," that is, well defined, and "out of the way,"that is, limited in the number of users they affect.These have proven excellent opportunities todemonstrate he new technology without aking on allthe additional problems of a very large and complicateddevelopment.
These small-scale and limitedapplications have also simplified dealings with theuser, since there were fewer of them immediatelyinvolved.8.
Conc lus ionI have outlined in this paper much of what I havelearned, from working in the TIPSTER Program,about transferring technology from the research stageto daily use in an operational environment.
Inworking jointly on this endeavor we have all learnedthese things and many of the ideas recorded here havebeen or are being incorporated into the Program tohelp guide future technology transfer.
It is in thenature of a lessons learned, to support hese futureefforts, that I have recorded here, at the close of PhaseII, so many of the difficulties that we have encounteredand in many cases also overcome.I have included in this paper many suggestions fordealing with the problems that arise in technologytransfer.
Technology transfer is a complex process andthe number of issues that must be addressed is large.Thus, I hesitate to say that one set of issues is moreimportant than any other.
However, two of the issuesI have discussed are of paramount importance.
Thefirst is making sure that the technology is ready totransfer - does it offer significant new capability and isit sufficiently well understood so that it can be maderobust, fast, and be integrated with other necessarycapabilities.
The second is collaboration with theuser.
The technologist is neither a servant nor asavior, that is, neither the user nor the technologisthas all the answers.
What we have to do to transfertechnology successfully, and what we have done in theTIPSTER Program, is make a place where the two canmeet, user and technologist, o work collaboratively ina joint effort to tame the "text monster" and improvethe way textual information is handled in ouroperational environment.9.
References\[1\] Sundheim, Beth; "The MessageUnderstanding Conferences;" in this volume.\[2\] Harman, Donna K.; "TREC ExecutiveSummary;" in this volume.\[3\] Pruett, Nancy J. and Tom Kinsella;"Management of Free Text for NDIC: AnOverview of the FTM Project;" in this volume.\[4\] Sider, Ira; Jeffrey Baker, Deborah Brady,Lynne Higbie, and Tom Howard; "CableAbstracting and Indexing System (CANIS);" inthis volume.\[5\] Kielty, John and Ira Sider; "Advanced DataExtraction and Preparation Via TIPSTER(ADEPT);" in this volume.32
