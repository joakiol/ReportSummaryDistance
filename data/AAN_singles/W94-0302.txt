DPOCL: A Principled Approach to Discourse PlanningR.
M ichae l  Young?
Intelligent Systems ProgramUniversity of PittsburghPittsburgh, PA, 15260myoung+epJ.tt, edu, \ ]ohanna D.  MooreDepartment of Computer Science andLearning Research and Development CenterUniversity of PittsburghPittsburgh, PA 15260jmoore@cs, p i t~.
eduAbst ractResearch in discourse processing has ident~ed two rep-resentational requirements for discourse planning sys-tems.
First, discourse plans must adequately representthe intentional structure of the utterances they producein order to enable a computations.\] discourse agent torespond effectively to communicative failures \[15\].
Sec-ond, discourse plans must represent the information~structure of utterances.
In addition to these represen-tational requirements, we argue that discourse plannersahonid be formally characterizab\]e in terms of soundnessand completeness.1 In t roduct ionResearch in discourse processing has identified two repre-sentational requirements for discourse planning systems.First, discourse plans must adequately represent the inotentionai structure of the utterances they produce inorder to enable a computational discourse agent to re-spond effectively to communicative failures \[15\].
Second,discourse plans must represent the informational struc-ture of utterances.
Discourse interpretation requires thatan agent be able to recognize the relationships betweenthe information conveyed in consecutive elements of dis-course (e.g., \[7, 16\]).
Choosing syntactic structures andconnective markers that convey these relationships re-quires that a discourse generator represent informational\[19, 21, 22\] as well as intentional \[4\] structure.
Becausethere is not a fixed, one-to-one mapping between inten-tional and informational structures, discourse plans mustinclude an explicit representation f both types of struc-ture \[15, 16\].In addition to these representational requirements, weargue that discourse planners hould meet certain com-putational requirements.
Most current discourse plan-ners are based on the original NOAH \[20\] model of hi-erarchical planning \[1, 2, 9, 13, 15\].
These systems relyon customized planning algorithms with procedural se-mantics for the purposes of solving specific text-planningproblems.
The informal construction of these systemsand their application to particular problems have re-suited in successful text generation for specific domainsand text types.
However, careful analysis of these pro-grams shows that there is nothing in their semantics toprevent hem from generating incorrect plans, generat-ing plans with redundant steps, or failing to find plansin situations where they exist.
To the extent that theseplanners have been able to avoid these problems, theyhave done so by severely limiting the expressive powerof action descriptions and/or requiring the designer tohandcraft each action description to fit correctly intothe ~d hoe semantics of the specific plan for which theaction is intended.
As the number of operators for suchsystems increases it becomes impractical for their design-ers to maintain their consistency.To overcome these limitations, we argue that a dis-course planning algorithm should be formally sound andcomplete (or at least be formally characterizable in termsof these properties).
While these formal characteristicsmay need to be relaxed in order to construct a plannerfor any given application, it is important o determineexactly bow a planning algorithm fails to meet these re-quirements.
Without such a characterization e cannotspecify what class of plans, and thus what class of dis-courses, are generated by a discourse planning system.In this paper we provide a general characterizationof previous discourse planning systems in terms of theseproperties.
We then describe a new discourse planningalgorithm that extends recent work on partial-order,causal link (POCL) planning systems to represent hi-erarchical discourse plans.
We show how this algorithm,called DPOCL (Decompositional POCL), provides a for-mal and explicit model of intentional and informationalstructure in its plans.
In addition, we discuss DPOCL'sformal properties.2 Representat ion  in D iscourse  P lansPrevious approaches have viewed the discourse planneras a means to producing a specification of a discoursethat can be given to a text realization system in orderto produce a series of sentences in a natural language.Recent work has shown that plans play a much largerrole in agent interaction \[16\].
In particular, the structureof discourse plans plays a role in the comprehension ofthe discourse \[6, 11, 16\] and contributes to the nature ofsubsequent communication \[15, 24\].2.1 Represent ing  In tent iona l  S t ructureAs has been noted \[15, 16, 24\], a precise definition ofintention in discourse plans is crucial for enabling sys-tems to respond appropiiately to failures of their com-municative actions.
When a hearer reveals that an in-137th International Generation Workshop * Kennebunkport, Maine * June 21-24, 1994tended effect of a previous discourse did not succeed,the speaker should re-try to achieve that effect.
If, how-ever, the effect that failed was not an intended effect,the speaker need not generate an alternative responseto achieve it.
Alternatively, if the effect that failed wasintended, but served only as a precondition of an actionwhose intended effects ucceeded despite the failure, thenagain the speaker may chose not to respond.
Clearly, dif-ferentiating between intended and unintended effects ofdiscourse actions is critical for generating appropriateresponses.As Maybury has pointed out \[13\], a realistic descrip-tion of communicative action requires a representationthat allows individual actions to have more than one ef-fect on the mental state of the hearer.
In particular,abstract communicative actions need to be described ina way that represents at least some of the effects of thesteps in their subplans.
Allowing action descriptions thathave multiple ffects complicates the definition of inten-tional structure.
The reason for inserting a step in aplan is to establish some intended condition(s).
How-ever, when steps have multiple effects, it may be thecase that only some of these effects are used to establishintended conditions in any given context.
Any effectsof a step that do not play a role in establishing suchconditions in a given plan are considered side effects.In Section 6.1, we formally define intention in theDPOCL framework, and show how intended effects aredistinguished from side effects when action descriptionsmay have multiple ffects.2.2 Represent ing  In fo rmat iona l  S t ruc tureJust as the structure of a discourse reflects the intentionsof the speaker, that structure also reflects the way inwhich domain content is used to achieve intended effects.This informational structure captures relationships thathold between objects in the domain of discourse.
In anexplanation, for example, one utterance may describe anevent hat can be presumed to be the cause of anotherevent described in the subsequent utterance.Clearly intention and information are closely related.An important component of an agent's linguistic aps-bility is the knowledge of what types of information canbe used to achieve communicative intentions.
Hearersmay be able to determine what the speaker is trying todo because of what the hearer knows about the world orwhat she knows about what the speaker believes aboutthe world.
Alternatively, the hearer may be able to fig-ure out what the speaker believes about the world byrecognizing what the speaker is trying to do in the dis-course \[16\].
In Section 6.1, we describe how decom-position operators in DPOCL capture the relationshipbetween intentional nd informational structure.3 Des iderata  fo r  P lann ing  A lgor i thmsA formal characterization f the capabilities of discourseplanning algorithms i essential to understanding their\]imitations and is necessary before one can make claimsabout the kinds of discourse plans those planners canproduce.3.1 CompletenessThe planning process of a generative planner is typicallyviewed as s search through the space of possible plansto locate a solution for a given planning problem.
Forsome planning problems, no solutions exist.
For others,many solutions can be constructed.
A general-purposediscourse planner cannot anticipate the structure of thesolutions to every problem.
In order for these planners tobe useful, they must be able to construct all solutions.Planners that are guaranteed to find all solutions to splanning problem are complete.Suppose there is a class of solutions to a planningproblem that a discourse planning algorithm cannot find.It may be the case that the most appropriate solutionsto the problem fall entirely into this class.
If this hap-pens, the planner will only be able to construct the less-desirable plans.
It may also be the case that the oni~ so-lutions to a planning problem fall into this class.
If thishappens, the planner will unnecessarily report failure.Consider those discourses in which individual utterancesplay several roles.
Maier \[12\] describes the need for asystem to generate this type of discourse and Hobbs \[7\]provides an example of one such discourse.
We provideanother example here:Lucentio has asked for Bianca's hand.
He alwaysconsidered her Senior Baptista's fairest daughter.That is also why Lucentio always chose her to modelfor his paintings.Here the second sentence provides support for thehearer's acceptance ofboth surrounding sentences.In a discourse planning model, these multi-role utter-ances correspond to actions that axe part of subplansfor two different parent actions.
That is, the plans thatrepresent these actions are structured as directed acyclicgraphs (DAGS) rather than trees.
Planning algorithmsthat are incomplete because they can only produce tree-structured plans are not able to generate plans for thisclass of discourse.
For the example above, these typesof planners would produce less appropriate plans wherethe second sentence appeared twice as support in twodistinct subtrees.3.2 SoundnessAny system that plans before it acts assumes that itsmodel of action is a useful one.
Given that a system isusing such a model, the plans that it produces houldat least be internally consistent.
That is, these plansshould not have steps that interfere with one another.Furthermore, the planner should continue to add stepsto a plan until the model indicates that all the plan'sgoals have been accounted for.
Planning algorithms thathave these properties are called 8outed.Given a model of planning where actions are relatedboth causally and decompositionally, a sound planningalgorithm must consider two factors when constructing147th International Generation Workshop * Kennebunkport, Maine * June 21-24, 1994plans.
First, for every step in a plan, the planner mustensure that each precondition of that step will be truejust prior to its execution \[3\].
Second, the planner mustconsider the manner in which the steps of a subplanachieve the goals of the parent \[23, 25\].
While a par-ent step specifies the effects it has on the mental state ofthe hearer, it is the responsibility ofthe executable stepsat the leaves of the subplan rooted at the parent step toensure that those conditions are indeed established.Note that the soundness of a planning algorithm doesnot guarantee the success of the plans it produces.
How-ever, the information about causal and decompositionalrelationships recorded in sound plans is crucial for de-termining where the planning model is in error and howto replan when an execution failure occurs.4 P rev ious  D iscourse  P lann ing  SystemsMost current discourse planners (e.g., \[1, 2, 9, 13, 15\]) arebased on the original NOAH model of hierarchical plan-ning.
They rely on customized planning algorithms withpr0cedurai semantics for the purposes of solving specifictext-planning problems, and thus their representationsand algorithms uffer from being unprincipled and dif-ficult to analyze.
Although these systems have resultedin successful text generation for specific domains andtext types, careful analysis of these programs shows thatthere is nothing in their semantics to prevent hem fromgenerating incorrect plans, generating plans with redun-dant steps, or failing to find plans in situations wherethey exist.As Hovy et ai.
\[8\] point out, these problems stem froman approach to discourse planning that does not clearlydistinguish between the representation f communicativeaction and the design of a planning algorithm that ma-nipulates that representation.
In most previous work,there has been no clear separation between the knowl-edge about the preconditions and effects of communica-tive acts and the knowledge about planning used to con-struct discourse plans.
To the extent hat these plannershave been able to avoid generating incorrect or redun-dant plans, they have done so by severely limiting theexpressive power of action descriptions and/or requir-ing the designer of action descriptions to handcraft eachdescription to fit correctly into the ad/~oc semantics ofthe specific plan for which the action is intended.
AsHovy et al describe, when the number of operators forsuch systems increases, it becomes impractical for theirdesigners to maintain their consistency.4.1 Representat ion of Discourse PlansPlans produced by most previous discourse plannershave not adequately represented both the causal and de-compositional relations between actions in a discourseplan.
As a result, their plans do not represent the man-ner in which preconditions are established, and, in caseswhere they represent action decomposition, the plans donot capture the relationship between the effects of ac-tions in a subplan and the effects of their parent action.Furthermore, they do not represent intentional and in-cl c4?2 PAR~NT-~CnONc3 ~ c5r "  '1 iACTION1 ACTION2 ACTION3c7 c9el0ellFigure I: Schematic Discourse Plan Illustrating Par-ent/Subplan Effectsformational structure in a way that clearly distinguishesthe two.
As a result, the intentional and informationalstructures in their plans are di~cult to analyze.
Fur-thermore, the discourse operators for these systems lackthe generality that would come from separating the twostructures.Intent ion To illustrate these problems, consider thediscourse plan shown schematicaily n Figure 1.
1 Thisplan has a structure that is typical of those producedby most previous discourse planning systems \[2, 9, 13,15\].
In this plan there is no explicit connection betweenthe effects established by the parent action (c4 and c5)and those established by its subplan (c6, c7, c9, el0,el2 and c13).
Previous approaches only represent therelationship between actioas at different levels; they failto capture the relationship between the effects of thoseactions.
In Figure 1, the top-level goal is cdAc5.
Supposethat c6 unifies with c4, and that c9, el0, and c12 togetherhave a consequence that unifies with c5.
In this case, c7and c13 are side effects of choosing the decomposition fthe PARENT-ACTION into ACTION1, ACTION2 andACTION3.
This fact, however, is not captured in thediscourse plan of Figure 1.
A system relying on this plancould not distinguish intended effects from side effects,and so would be unable to determine that a differentresponse is warranted when c6 fails than when c7 falls.In addition, there is no explicit representation f therelationship between two steps when one establishes aprecondition for another.
In Figure 1, ACTION3 hasel l  as a precondition.
Suppose that both el0 and c7unify with el l .
If el0 falls it is possible that c7 willserve to establish the condition eeded by ell.
With-out a representation f the causal roles that these effectsplay, a system cannot determine whether an additionalresponse is required.Informat|onal  Structure in Prev|ous SystemsMost previous planning systems do not provide an ex-plicit representation for either intentional or informa-tional structure.
As noted in Hovy, et al\[8\], to the extentthat informational constraints were represented, each setof constraints was duplicated for many similar discoursetin this plan, the dashed arcs indicate the decompositionof PARENT-ACTION into the actions in its subplan.
Theci's represent conditions in the world - those to the left of anaction are the action's preconditions and those to the rightof an action are its effects.157th International Generation Workshop * Kennebunkport, Maine ?
June 21-24, 1994operators.
Many of these operators differed only in theirintentional structure.
As described in \[16\], combiningin-tentional and informational representations i  this waycan result in a proliferation of operators.
Every inten-tional structure must be paired with every informationalone, possibly requiring as many as n ?
m operators fordomains with n intentional and m informational struc-tures.4.2 Computational PropertiesWhile previous discourse planners have been successfulat generating appropriately structured plans for specificdomains, these systems have ignored the analysis of theformal properties of the planning algorithms that pro-duce them.
As has been noted in \[20, 3\], NOAH, andconsequently those discourse planners based on it, usead hoc procedures for the construction ofplans.
As a re-sult, the formal properties of these planning algorithmsare difficult to characterize.
While a complete analy-sis of the planning algorithms used by previous ystems\[2, 9, 13, 15\] is beyond the scope of this paper, severalproperties of these algorithms are straightforward to de-scribe.First, these planners do not guarantee that a step'spreconditions hold prior to the step's execution and thusthey are not sound.
Furthermore, there is no relation-ship in any oftbese planners between the effects of parentactions and their subplans - planning to achieve an ef-fect at one level of abstraction does not guarantee thatthe effect is realized by any combination of executableactions.Second, these planners are not complete.
While theremay be many classes of plans that these systems cannotgenerate, their incompleteness can easily be seen whenconsidering two factors.
First, all of these systems usetree-structured plan representations.
As a result, theycannot produce discourse plans where individual com-ponents play a role in more than one subplan.
Second,most current discourse planning systems restrict steps insubplans to be totally ordered with respect o one an-other.
For total-order planners to be complete they mustbe able to construct every possible step ordering.While the sacrifice of formal properties may be nec-essary for constructing an efficient implementation, it isimportant to characterize the conditions under which aplanning system falls short of soundness or completeness.By characterizing the soundness of a planner two thingsbecome apparent.
First, the conditions under which aplanner will introduce flaws into a plan are completelycharacterized.
Second, the nature of the flaws that mightbe introduced under those conditions are specified.
Sim-ilarly, characterizing the completeness of a planner spec-ifies the classes of plans that can and cannot be pro-duced by a planner.
Without an understanding of theseproperties for a given algorithm, it is impossible fully toevaluate its usefulness for a particular application.5 The DPOCL Discourse PlannerThe DPOCL discourse planner is an extension to recentpartial-order causal link planners \[14, 17\].
In POCLplanners, a plan is represented as a set of partially-ordered steps connected by causal inks.
Two steps ina plan are connected by a causal ink when the effect ofthe first step is used to establish the precondition of thesecond step.
Steps and corresponding links are addedto the plan to establish unsatisfied preconditions, andadditional constraints are placed on the plan only whenneeded to maintain consistency.
Previous POCL plan-ners have been non-hierarchical; DPOCL provides an ex-tension that introduces action decomposition i to thePOCL framework.
For a complete definition of DPOCLsee \[25\].In the following discussion we will refer to the samplediscourse from Section 3.1.
Figure 2 shows an exampleof a DPOCL plan structure for this discourse.
Consider?
the subplan for Support~modeled(L,B)), rooted at thestep marked as step ~1.
~ A decomposition li k (shownusing dashed arcs) connects Support(modeled(L,B)) tothe begin and end-subplan steps bounding its subplan.
3This subplan is made up of the two Cause-to-Believesteps and the Combine-Belief step shown in between thebegin-subplan and end-subplan.
A causal ink (shownusing a solid arc and labeled with the effect that it con-tributes) connects Cause-to-Believe(falrest(L,B)) to theEnd-Subplan step.The manner in which a hearer combines the informa-tion in an utterance with his prior beliefs is critical tothe generation ofthe utterance.
Most previous work hasmade use of highly simple models of this process: forinstance, it has assumed that the effect of asserting aproposition p is that the hearer believes p. In fact, aspeaker may go to great lengths to convince the hearerof the truth of a proposition.
She may first assert it, thensupport it, and then provide support for the intermedi-ate statement.
In such a case, the speaker presumablybelieves that the combination ofutterances i  what leadsthe hearer to accept he main proposition.This phenomenon is represented by the Combine-Belief(z'~ action, where ~ is a vector of relevant beliefs.This Combine-Belief action provides an abstract modelfor an action taken by the hearer rather than by thespeaker.
A complete model of the manner in which auser combines belief from several utterances i beyondthe scope of this paper.
Further formal work in this area,such as that in \[I0\] is essential for accurately represent-ing the structure of discourse plans.
DPOCL provides a2 Subplans in this figure are g~ouped inside rounded boxesfor ease of reference.3DPOCL uses the standard POCL technique of encodingthe initial conditions and the goals of a planning problemas the effects of a null initial action and the preconditionsof a null final action, respectively.
Simi|arly, every subplanis bounded by a null stsxt-subplan and a null end-subplan.Each staxt-subplan has as its dfects the preconditions of itsparent action, and each end-subplan has as its preconditionsthe dfects of its parent action.167th International Generation Workshop ?
Kennebunkport, Maine * June 2124, 1994ileilin-Pianr;~ei~-Subpl~mLcause-lo-i~li~ve C~01xr~dO.ji))) - -L=.i~f~m(pmlx~d(LJl)))LucentIo has asked for ~.Bel(propolled(Lji)))Bianca's hand in marriage.
Combine-Be.lid(x)S~plxxi(p~Ji)))r .
.
.
.
?II?i~gin-Subpl~tilei(pmpc~d(L,B)))EndoHanC~io-Belive(~xlel~0.,jl))),t:~ Emd~Sei(ir0po~i(L,S))) Ifr .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
-----=,,,.
_-- '\], i ~ That is why he always asked ~, vher to model for his liInt#~ll ~ ~#Bellin-Sabplan Combine-Belief(x) ~ End-SubpllmBel(model~l(L,B))/ Bel(modeled(L,S)))i i ~um(firesi(l.Jl), pmferred(L, ll))illei(pmix~diL, S))) ~d-Subp~n / r - ' "  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.Combine-Belief(x) ~ , / I i II / I I caus~s(faizest(L,B),model~l(L,B)) I Ik / / i  ' ' i- / v  v\ ~ _  ~ Combine-Belief(x) .
.
.
.
.
.
.
.
.\ B~in-Subplan ~ ~ 'r"m"'~""Jl"~x I Bei(~xld~tZ.,B))) nc ".Z->" J~ -  CJnse-to-Believe(fairesi(L,B)))If l i r tilegin-Subplan ief0rm(fairesi(LJi))) ~ ~i-Subpl~mHe considers her the fairest Jof Signior Baptism's daughten~Figure 2: A Complete Discourse Planframework for incorporating these approaches.5.1 Representation i DPOCLThe representation f each action in DPOCL is separatedinto two parts corresponding to the causal and decompo-sitional roles the action plays: the action operator, anda set of decomposition operators.
The action operatorcaptures the action's preconditions and effects, sets offirst-order unquantified sentences imilar to the typicalprecondition and addldelete lists of STRIPS \[5\].
Eachdecomposition operator epresents a slngle-layer expan-sion of a composite step, essentially providing a partialspecification for the subplan that achieves the parentstep's effects given its preconditions.
In addition to spec-ifying the steps in the subplan, the decomposition opera-tor specifies any variable binding and temporal orderingconstraints between the steps, and the causal links be-tween steps of the subplan that enable them to establishthe parent step's effects.Figure 3 shows the action operator and one decom-position operator for the Support act.
4 As we see inthe action operator in this figure, Support(?prop) hasthe effect of increasing the belief in proposition ?propfor the hearer.
The decomposition operator in Figure 3was responsible for expanding the Support labeled #I  in'The operators in this t~gure are shown wlth some detailomitted for clarity.177th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994ActionHeader:Precondi t ions:Effects:B ind inss :Deco~po#itio~Header:Const ra ints :Steps:Links:B ind inss :Order ings:Support(?prop)not(Believe(?prop))Bel(?prnp)~O~eSupport(?propl)canses(?prop2, ?prop1)Start, Cause-to-Believe- 1(?prop2 )Canse-to-Believe-2(csuses(?prnp2,?prnpl))Comblne-Belief, Final<Combine-BelieS ?prop, ?prop, Final>Figure 3: Support Action and Decomposition OperatorsFigure 2.
The subplan specified by this decompositionhas three steps in its body: two Cause-to-Believe actionsand a combination of belief by the hearer to strengthenher belief in ?prop.
The constraints placed on this de-composition restrict he propositions used in the Cause-to-Believe steps to be ones that cause the propositionbeing supported.
Dec0mpositional constraints are dis-cussed further in Section 6.1This decomposition perator is only a partial specifi-cation of the subplan for the Support step.
In DPOCL,when a subplan is only partially specified, the planneris free to complete the subplan by using steps alreadyappearing in the plan.
In this way, DPOCL can avoidgenerating plans with redundant communicative actions.5.2 Overv iew o f  the  DPOCL A lgor i thmIn DPOCL, the process of cresting a completed planinvolves iterating through a loop that chooses betweenrefining the current plan decompositionaUy or refiningthe plan cansaily and then modifying the plan to ensurethat the refinement has not introduced any errors.
Fig-ure 4 summarizes the DPOCL planning algorithm.
Fora complete definition, see \[25\].Causal refinement in DPOCL is essentially identicalto causal refinement in previous POCL planners.
Anunsatisfied precondition of some step in the plan is se-lected and a causal ink is added to establish the neededcondition.
Decompositional refinement essentially cre-ates a subplan for some composite action and adds thesubplan to the plan.
First, a decomposition perator forthe chosen step is selected and the steps indicated in theoperator are added to the plan.
These steps are createdin one of two ways.
In the first case, a step is created byselecting an action operator of the correct ~ction typeand instantiating s new step just as is done when a newstep is added during causal refinement.
In the secondcase, a step is added to the subplan by finding a step ofthe correct action type that already exists in the planand using that step in the appropriate place in the newsubplan.The DPOCL algorithm ensures that a subplan's ac-tions establish the effects of the parent action in astraightforward manner.
The preconditions of a sub-Terminat ion :  If the plan is inconsistent, then backtrack.
Otherwise,remove unused step and return the plan.P lan Ref inement;  Non-detenninlstlcally do one of the following:I. Causal  P lanning:(a) Goal  Selection: Nondeterminlstlcally select a goal.
(b) Operator  Selection: Add a step to the plan that adds an effectthat can be unified with the goal (either by instantiating thestep from the operator library or by finding a step already inthe plan).
H no such step exists, bac.ktrack.
Otherwise, addthe binding constraints required for the conditions to unify, anordering constraint that orders the new step before the goal stepand add the causal lnk between the two.2.
Decompos i t iona l  P anning:(a) Act ion  Selection: Nondeterministlcally select some unex-punded composite step in the plan.
(b) Decompos i t ion  Selection: Nondetermlnlstic2dly chose an ap-propriate decomposition schema for this action whose constraintsaxe satisfied.
Add the steps and subplaa components of the de-composition schema to the plan and update the llst of decompo-sition links to indicate the new subplan.Threat  Resolut ion:  Find any step that might threaten to undo anycausal ink.
For every such step, nondetermlaisticai\]y do one of thefollowing: .s P romot ion :  If possible, move the threatened steps to occur beforethe threat in the plan.s Demot ion :  If possible, move the threatened steps to occur ufterthe threat in the plan.s Separat ion:  If possible, add binding constraints on the steps in-volved so that no conflict can srlse.Recurs ive Invocat ion:  Call the planner recursively with the newplan structure.Figure 4: DPOCL Planning Algorithmplan's final step are an copy of the effects of the sub-plan's parent step.
The DPOCL planner will attemptto achieve them through causal refinement just as itachieves all other unsatisfied preconditions.
In this waywe guarantee that the effects of every composite actionare achieved by the steps in its subplan.
Furthermore,the exact relationship between the actions in a subplanand the establishment of those effects is made explicitin the causal inks establishing those conditions in thesubplan.As a result of adding steps to a plan, newly createdsteps may introduce threats to existing causal inks.
Astep, $6, threatens a causal link between two steps Sb andSc when 56 might occur between Sb and Sc and one ofS~'s effects might undo the condition established in thecausal ink.
To ensure that no causal inks are undoneby plan refinement, each threat in s plan is eliminatedbefore planning proceeds.
This is done either by order-ing the steps so that the threatening step cannot occurbetween the two causally-linked steps or by restrictingthe variable bindings of the steps to eliminate harmfulinteractions.6 DPOCL 's  P roper t iesPlan structures in DPOCL represent three critical com-ponents.
First, every causal connection between some187th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994Definition 1 (Intended Effect) Let s be some step in aplan and e, be an effect of s. Effect e, is intended precisely~uhen at least one of the follozuing conditions holds:?
There is some causal link from ?
to the final step of theplan such that e, establishes one of the goals of the plan.?
There is some causal ink from s to some step s!
where s!is the final step of a subplan for a parent action sp suchthat- e, establishes one of the goals of the subplan (that is, aprecondition of s ! )
and- the corresponding effect e,~ of sp is intended.?
There is some causal link from s to another step s' suchthat- e, establishes one of the preconditiorts of s' and- some effect e,, of s' is intended.Figure 5: Intention in DPOCLstep's effect and another step's precondition that reliesupon it is marked by a causal ink.
Second, the connec-tion between the effects of every abstract action and thesubsteps that achieve those effects are marked by a com-bination of causal and decompositional links.
Finally,the constraints restricting the applicability of decompo-sition operators are noted for every abstract step expan-sion.
By providing an explicit representation for eachof these components an adequate characterization f theintentional nd informational structure of the discoursecan be made.6.1 DPOCL 's  Representat iona l  P roper t iesA Pr incipled Representat ion of Intent ion Theforrnalrepresentation of causal and decompositional con-nections between steps in the DPOCL plan makes thedefinition of intention in terms of these concepts straight-forward.
Informally, an effect is intended if it plays acausal role in the plan.
That is, if it is used in a causallink and the step that asserts that effect is connected bythat causal ink through subsequent causal and decom-positional links ultimately to the final step of the plan.The formal definition of an intended effect is shown inFigure 5.Although the plan shown in Figure 2 does not ex-plicitly illustrate how our representation addresses caseswhere action descriptions have multiple effects and sodistinguishes between intended and side-effects in thesame action, our model handles these cases appropri-ately.
Our solution rests on the fact that our modelmakes a clear distinction between effects of discourse ac-tions that play a role in achieving the top-level goals ofthe discourse plan and effects that are not causally linkedin a way that contributes to the agent's ultimate goals.An Explicit Representat ion of Informat ionalStructure Decomposition operators in DPOCL en-able us to represent the knowledge speakers have abouthow to use domain information to achieve communica-tive intentions.
For example, one way for a speaker toincrease a bearer's belief in a proposition (i.e., to sup-port a proposition) is to describe a plausible cause ofthat proposition.
In DPOCL, we represent this "ruleof language" using a decomposition operator as illus-trated by the decomposition perator in Figure 3.
Thisoperator says that one way to support a proposition?prop1 is to find another proposition, ?peop2, such thatcauses(?prop2, ?propl) is true in the domain.
If sucha ?prop2 can be found, then the speaker can support?propl by making the hearer believe ?prop2 and the re-lation causes(?prop2, ?prop1) In this way, informationin the domain acts to constrain what language rules areappropriate and, given any particular rule, what objectscan be referred to when it is used.The representation f the informational structure ina DPOCL plan is straightforward.
Each decomposi-tion operator in DPOCL lists the informational con-straints that must hold in order for an abstract actionto be achieved by the subplan dsfined in that opera-tor.
During plan generation, informational constraintsare checked for consistency whenever a modification ismade to the plan and backtracking occurs when a con-straint is violated.
In addition, these constraints areexplicitly recorded in the plan data structure.
The in-formational structure ismade available to the realizationcomponent that is responsible for transforming the dis-course plan into a series of natural language utterances.6.2 DPOCL 's  Computat iona l  P roper t iesBecause DPOCL is built upon well-understood POCLplanning algorithms, DPOCL inherits many of thesealgorithms' formal properties.
Specifically, DPOCL isboth sound and, for certain classes of plans, complete.Proofs of soundness and completeness can be foundin \[25\].
With respect o the class of plans that DPOCLcan generate, DPOCL is primit ive complete.
That is,it can generate sl1 possible sequences of executable ac-tions, but not necessarily all hierarchical structures thatcould account for those executable actions.
In par-ticular, DPOCL cannot generate plans where two ab-stract steps are ordered one before the other in order toavoid a harmful interaction but some interleaving ofthesteps in their subplans exists that avoids this interac-tion.
For a more complete description of this restrictionon DPOCL's completeness, ee \[25\].7' Discuss ionAs others have pointed out, the precise representationof intentional and informational structure is critical tothe effective use of discourse plans.
In addition, we haveargued that a formal characterization f the plannersthat produce those plans is essential to evaluating theirusefulness for any given: domain.
As we discussed inSection 4, while previous work addressed some of these197th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994issues, their approaches did not resolve the problems wehave identified.In contrast, the DPOCL planner provides an explicitand formal representation of the intentional and infor-mational structures in its discourse plans.
This modelclearly differentiates between intended and unintendedeffects, allowing appropriate responses to discourse fail-ure.
In addition, the information constraining each de-composition is formally represented as constraints on theapplicability of the decomposition operator.
The repre-sentation of these constraints is independent from anyparticular intentional structure formed by the subplanthey constrain.Furthermore, the DPOCL planner builds upon a clearand precise formalism that allows the algorithm to becompletely characterized.
Specifically, DPOCL is soundand, for some class of plans, complete.
It is precisely thisformal analysis that allows us to specify exactly whatclass of plans DPOCL cannot generate.
This analysis hasnot been performed for previous discourse systems andso they cannot similarly characterize their algorithms.8 AcknowledgementsThe authors would like to thank the anonymous reviewers fortheir helpful comments.
The research described in this pa-per was supported by the Office of Naval Research Cognitivemad Neural Sciences Division (Graazt Number: N00014-91-J-1694).
Young is supported by a grant from ON11 under theFY93 Augmentation of Awards for Science and EngineeringResearch Tr~in;~g (ASSERT) Program.References\[I\] Douglas E. Appelt.
Planning English Sentences.
Cam-bridge University Press, Cambridge, England, 1985.\[2\] Alison Cawsey.
Explanation and Interaction: The Com-puter Generation of Explanatorg Dialogues.
MIT Press,Cambridge, Massachusetts, 1993.\[3\] David Chapman.
Planning for conjunctive goals.
Arti.ficial Intelligence, 32, 1987.\[4\] Michael Elhadad and Kathleen McKeown.
Generatingconnectives.
In Proceedings of the Thirteenth Interna-tional Conference on Computational Linguistics, pages97-101, Hf,l~i~lrl, 1990.\[5\] Richard Fikes and Ntis Nilsson.
STRIPS: A new ap-proach to the application of theorem proving to prob-lem solving.
In James Allen, James Hendler, and AustinTare, editors, Readings in Planning.
Morgan Kauf.mmxn,1990.\[8\] Barbara J. Grosz and Candsee L. Sidner.
Attention,intention, and the structure of discourse.
ComputationalLinguistics, 12(3):175-204, 1986.\[7\] Jerry Hobbs.
On the coherence and structure of dis-course.
Technical Report CSLI-85-37, Center for theStudy of Language and Information, 1985.\[8\] Eduaxd Hovy, Julia Lavid, Elisabeth Maier, Vibhu Mit-tal, and Cecile Paris.
Employing knowledge resoursesin a new text planner axchitecture.
In Aspects of Au-tomated Natural Language Generation, Proceedings ofthe Sizth International Workshop on Natural anguageGeneration, Trento, Italy, 1992.\[9\] Eduard H. Hovy.
Approaches to the planning of coher-ent text.
In C~cile L. Paris, William R. Swaxtout, andWilliam C. Mann, editors, Natural Language Genera.~on in Artificial Intelligence and Computational Lin-guistics, pages 83-102.
Kluwer Academic Publishers,Boston, 1991.\[I0\] Lynn Lambert.
Recognizing Complez Discourse Acts: ATr/partite Plan-Based Model of Dialogue.
PhD thesis,University of Delaware, 1993.\[11\] Lynn Lambert and Sandra Carberry.
A tripartite plan-based model of dialog.
In Proceedings, Association forComputational Linguistics, 1991.\[12\] Elisabeth Mnier.
The extension of a text planner forthe treatment of multiple links between text units.
InProceedings of the .~th European Workshop on NaturalLanguage Generation, April 1993.\[13\] Mark T. Maybury.
Commmaicative acts for explana-tion generation.
International Journal of Man-MachineStudies, 37(2):135-172, 1992.\[14\] David MeAllister and David Rosenblit.
Systematic non-linear planning.
In Proceedings ofAAAI, 1991.\[15\] Johanna D. Moore and CEcile L. Paris.
Planning text foradvisory dialogues: Capturing intentional and rhetoricalinformation.
Computational Linguistics, 19(4):651-695,1993.\[18\] Johanna D. Moore and Martha E. Pollack.
A prob-lem for RST: The need for multi-level discourse analysis.Computational Linguistics, 18(4):537-544, 1992.\[17\] Scott Peazbezthy and Daniel Weld.
UCPOP: A sound,complete partial order plmzner for ndi.
In Proceedings ofthe Knowledge Representation Conference, 1991.\[18\] Maztha E. Pollack.
The uses of plans.
Artificial Intelli-gence, 57:43-68, 1992.\[19\] Dietmar 11osner and Manfred Stede.
Customizing RSTfor the automatic production of technical manuals.
InR.
Dale, E. Hovy, D. Rosner, and O.
Stock, editors, Pro-ceedings of the Sizth International Workshop on Natu-ral Language Generation, pages 199-215, Berlin, 1992.Springer-Vezlag.\[20\] Earl Sacerdoti.
A Structure for Plans and Behavior.PhD thesis, Stanford University Department of Com-puter Science, 1975.\[21\] Donia Scott and Clarisse Sieckenins de Souza.
Gettingthe message across in 11ST-based text generation.
In1t.
Dale, C. Mellish, and M. Zock, editors, Current Re-search in Natural Language Generation, pages 47-73.Academic Press, New York, 1990.\[22\] Kelth Vander Linden, Susanna Cumm;-g, and 2amesMartin.
Expressing local rhetorical relations in instruc-tional text.
Technical Report 92-43, U. of Colorado,1992.\[23\] Q. Yang.
Formalizing plmaning knowledge for a hierar-chical planner.
Computational Intelligence, 6 1990.\[24\] 11.
Michael Young, 2ohanna D. Moore, and Marths E.Pollack.
Towards a principled representation for dis-course plans.
In Proceedings of the Sizteenth AnnualConference of the Cognitive Science Society, 1994.\[25\] 11.
Michael Young, Martha E. Pollack, and 3ohanna D.Moore.
Decomposition and causality in partial orderplanning.
In Proceedings of the Second InternationalConference on AI and Planning Systems, 1994.20
