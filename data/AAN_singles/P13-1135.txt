Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 1374?1383,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsDirt Cheap Web-Scale Parallel Text from the Common CrawlJason R. Smith1,2jsmith@cs.jhu.eduPhilipp Koehn3pkoehn@inf.ed.ac.ukHerve Saint-Amand3herve@saintamh.orgChris Callison-Burch1,2,5ccb@cs.jhu.edu ?Magdalena Plamada4plamada@cl.uzh.chAdam Lopez1,2alopez@cs.jhu.edu1Department of Computer Science, Johns Hopkins University2Human Language Technology Center of Excellence, Johns Hopkins University3School of Informatics, University of Edinburgh4Institute of Computational Linguistics, University of Zurich5Computer and Information Science Department, University of PennsylvaniaAbstractParallel text is the fuel that drives modernmachine translation systems.
The Web is acomprehensive source of preexisting par-allel text, but crawling the entire web isimpossible for all but the largest compa-nies.
We bring web-scale parallel text tothe masses by mining the Common Crawl,a public Web crawl hosted on Amazon?sElastic Cloud.
Starting from nothing morethan a set of common two-letter languagecodes, our open-source extension of theSTRAND algorithm mined 32 terabytes ofthe crawl in just under a day, at a cost ofabout $500.
Our large-scale experimentuncovers large amounts of parallel text indozens of language pairs across a varietyof domains and genres, some previouslyunavailable in curated datasets.
Even withminimal cleaning and filtering, the result-ing data boosts translation performanceacross the board for five different languagepairs in the news domain, and on open do-main test sets we see improvements of upto 5 BLEU.
We make our code and dataavailable for other researchers seeking tomine this rich new data resource.11 IntroductionA key bottleneck in porting statistical machinetranslation (SMT) technology to new languagesand domains is the lack of readily available paral-lel corpora beyond curated datasets.
For a handfulof language pairs, large amounts of parallel data?This research was conducted while Chris Callison-Burch was at Johns Hopkins University.1github.com/jrs026/CommonCrawlMinerare readily available, ordering in the hundreds ofmillions of words for Chinese-English and Arabic-English, and in tens of millions of words for manyEuropean languages (Koehn, 2005).
In each case,much of this data consists of government and newstext.
However, for most language pairs and do-mains there is little to no curated parallel dataavailable.
Hence discovery of parallel data is animportant first step for translation between mostof the world?s languages.The Web is an important source of paralleltext.
Many websites are available in multiplelanguages, and unlike other potential sources?such as multilingual news feeds (Munteanu andMarcu, 2005) or Wikipedia (Smith et al, 2010)?it is common to find document pairs that are di-rect translations of one another.
This natural par-allelism simplifies the mining task, since few re-sources or existing corpora are needed at the outsetto bootstrap the extraction process.Parallel text mining from the Web was origi-nally explored by individuals or small groups ofacademic researchers using search engines (Nieet al, 1999; Chen and Nie, 2000; Resnik, 1999;Resnik and Smith, 2003).
However, anythingmore sophisticated generally requires direct accessto web-crawled documents themselves along withthe computing power to process them.
For mostresearchers, this is prohibitively expensive.
As aconsequence, web-mined parallel text has becomethe exclusive purview of large companies with thecomputational resources to crawl, store, and pro-cess the entire Web.To put web-mined parallel text back in thehands of individual researchers, we mine paralleltext from the Common Crawl, a regularly updated81-terabyte snapshot of the public internet hosted1374on Amazon?s Elastic Cloud (EC2) service.2 Us-ing the Common Crawl completely removes thebottleneck of web crawling, and makes it possi-ble to run algorithms on a substantial portion ofthe web at very low cost.
Starting from nothingother than a set of language codes, our extensionof the STRAND algorithm (Resnik and Smith,2003) identifies potentially parallel documents us-ing cues from URLs and document content (?2).We conduct an extensive empirical exploration ofthe web-mined data, demonstrating coverage ina wide variety of languages and domains (?3).Even without extensive pre-processing, the dataimproves translation performance on strong base-line news translation systems in five different lan-guage pairs (?4).
On general domain and speechtranslation tasks where test conditions substan-tially differ from standard government and newstraining text, web-mined training data improvesperformance substantially, resulting in improve-ments of up to 1.5 BLEU on standard test sets, and5 BLEU on test sets outside of the news domain.2 Mining the Common CrawlThe Common Crawl corpus is hosted on Ama-zon?s Simple Storage Service (S3).
It can bedownloaded to a local cluster, but the transfer costis prohibitive at roughly 10 cents per gigabyte,making the total over $8000 for the full dataset.3However, it is unnecessary to obtain a copy of thedata since it can be accessed freely from Amazon?sElastic Compute Cloud (EC2) or Elastic MapRe-duce (EMR) services.
In our pipeline, we per-form the first step of identifying candidate docu-ment pairs using Amazon EMR, download the re-sulting document pairs, and perform the remain-ing steps on our local cluster.
We chose EMR be-cause our candidate matching strategy fit naturallyinto the Map-Reduce framework (Dean and Ghe-mawat, 2004).Our system is based on the STRAND algorithm(Resnik and Smith, 2003):1.
Candidate pair selection: Retrieve candidatedocument pairs from the CommonCrawl cor-pus.2.
Structural Filtering:(a) Convert the HTML of each document2commoncrawl.org3http://aws.amazon.com/s3/pricing/into a sequence of start tags, end tags,and text chunks.
(b) Align the linearized HTML of candidatedocument pairs.
(c) Decide whether to accept or reject eachpair based on features of the alignment.3.
Segmentation: For each text chunk, performsentence and word segmentation.4.
Sentence Alignment: For each aligned pair oftext chunks, perform the sentence alignmentmethod of Gale and Church (1993).5.
Sentence Filtering: Remove sentences thatappear to be boilerplate.Candidate Pair Selection We adopt a strategysimilar to that of Resnik and Smith (2003) for find-ing candidate parallel documents, adapted to theparallel architecture of Map-Reduce.The mapper operates on each website entry inthe CommonCrawl data.
It scans the URL stringfor some indicator of its language.
Specifically,we check for:1.
Two/three letter language codes (ISO-639).2.
Language names in English and in the lan-guage of origin.If either is present in a URL and surrounded bynon-alphanumeric characters, the URL is identi-fied as a potential match and the mapper outputsa key value pair in which the key is the originalURL with the matching string replaced by *, andthe value is the original URL, language name, andfull HTML of the page.
For example, if we en-counter the URL www.website.com/fr/, weoutput the following.?
Key: www.website.com/*/?
Value: www.website.com/fr/, French,(full website entry)The reducer then receives all websites mappedto the same ?language independent?
URL.
If twoor more websites are associated with the same key,the reducer will output all associated values, aslong as they are not in the same language, as de-termined by the language identifier in the URL.This URL-based matching is a simple and in-expensive solution to the problem of finding can-didate document pairs.
The mapper will discard1375most, and neither the mapper nor the reducer doanything with the HTML of the documents asidefrom reading and writing them.
This approach isvery simple and likely misses many good potentialcandidates, but has the advantage that it requiresno information other than a set of language codes,and runs in time roughly linear in the size of thedataset.Structural Filtering A major component of theSTRAND system is the alignment of HTML docu-ments.
This alignment is used to determine whichdocument pairs are actually parallel, and if theyare, to align pairs of text blocks within the docu-ments.The first step of structural filtering is to lin-earize the HTML.
This means converting its DOMtree into a sequence of start tags, end tags, andchunks of text.
Some tags (those usually foundwithin text, such as ?font?
and ?a?)
are ignoredduring this step.
Next, the tag/chunk sequencesare aligned using dynamic programming.
The ob-jective of the alignment is to maximize the numberof matching items.Given this alignment, Resnik and Smith (2003)define a small set of features which indicate thealignment quality.
They annotated a set of docu-ment pairs as parallel or non-parallel, and traineda classifier on this data.
We also annotated 101Spanish-English document pairs in this way andtrained a maximum entropy classifier.
However,even when using the best performing subset of fea-tures, the classifier only performed as well as anaive classifier which labeled every document pairas parallel, in both accuracy and F1.
For this rea-son, we excluded the classifier from our pipeline.The strong performance of the naive baseline waslikely due to the unbalanced nature of the anno-tated data?
80% of the document pairs that weannotated were parallel.Segmentation The text chunks from the previ-ous step may contain several sentences, so beforethe sentence alignment step we must perform sen-tence segmentation.
We use the Punkt sentencesplitter from NLTK (Loper and Bird, 2002) toperform both sentence and word segmentation oneach text chunk.Sentence Alignment For each aligned textchunk pair, we perform sentence alignment usingthe algorithm of Gale and Church (1993).Sentence Filtering Since we do not perform anyboilerplate removal in earlier steps, there are manysentence pairs produced by the pipeline whichcontain menu items or other bits of text which arenot useful to an SMT system.
We avoid perform-ing any complex boilerplate removal and only re-move segment pairs where either the source andtarget text are identical, or where the source ortarget segments appear more than once in the ex-tracted corpus.3 Analysis of the Common Crawl DataWe ran our algorithm on the 2009-2010 versionof the crawl, consisting of 32.3 terabytes of data.Since the full dataset is hosted on EC2, the onlycost to us is CPU time charged by Amazon, whichcame to a total of about $400, and data stor-age/transfer costs for our output, which came toroughly $100.
For practical reasons we split therun into seven subsets, on which the full algo-rithm was run independently.
This is differentfrom running a single Map-Reduce job over theentire dataset, since websites in different subsetsof the data cannot be matched.
However, sincethe data is stored as it is crawled, it is likely thatmatching websites will be found in the same splitof the data.
Table 1 shows the amount of raw par-allel data obtained for a large selection of languagepairs.As far as we know, ours is the first system builtto mine parallel text from the Common Crawl.Since the resource is new, we wanted to under-stand the quantity, quality, and type of data thatwe are likely to obtain from it.
To this end, weconducted a number of experiments to measurethese features.
Since our mining heuristics arevery simple, these results can be construed as alower bound on what is actually possible.3.1 Recall EstimatesOur first question is about recall: of all the pos-sible parallel text that is actually available on theWeb, how much does our algorithm actually findin the Common Crawl?
Although this questionis difficult to answer precisely, we can estimatean answer by comparing our mined URLs againsta large collection of previously mined URLs thatwere found using targeted techniques: those in theFrench-English Gigaword corpus (Callison-Burchet al, 2011).We found that 45% of the URL pairs would1376French German Spanish Russian Japanese ChineseSegments 10.2M 7.50M 5.67M 3.58M 1.70M 1.42MSource Tokens 128M 79.9M 71.5M 34.7M 9.91M 8.14MTarget Tokens 118M 87.5M 67.6M 36.7M 19.1M 14.8MArabic Bulgarian Czech Korean Tamil UrduSegments 1.21M 909K 848K 756K 116K 52.1KSource Tokens 13.1M 8.48M 7.42M 6.56M 1.01M 734KTarget Tokens 13.5M 8.61M 8.20M 7.58M 996K 685KBengali Farsi Telugu Somali Kannada PashtoSegments 59.9K 44.2K 50.6K 52.6K 34.5K 28.0KSource Tokens 573K 477K 336K 318K 305K 208KTarget Tokens 537K 459K 358K 325K 297K 218KTable 1: The amount of parallel data mined from CommonCrawl for each language paired with English.Source tokens are counts of the foreign language tokens, and target tokens are counts of the Englishlanguage tokens.have been discovered by our heuristics, though weactually only find 3.6% of these URLs in our out-put.4 If we had included ?f?
and ?e?
as identi-fiers for French and English respectively, coverageof the URL pairs would increase to 74%.
How-ever, we chose not to include single letter identi-fiers in our experiments due to the high number offalse positives they generated in preliminary ex-periments.3.2 Precision EstimatesSince our algorithms rely on cues that are mostlyexternal to the contents of the extracted dataand have no knowledge of actual languages, wewanted to evaluate the precision of our algorithm:how much of the mined data actually consists ofparallel sentences?To measure this, we conducted a manual anal-ysis of 200 randomly selected sentence pairs foreach of three language pairs.
The texts are het-erogeneous, covering several topical domains liketourism, advertising, technical specifications, fi-nances, e-commerce and medicine.
For German-English, 78% of the extracted data represent per-fect translations, 4% are paraphrases of each other(convey a similar meaning, but cannot be usedfor SMT training) and 18% represent misalign-ments.
Furthermore, 22% of the true positivesare potentially machine translations (judging bythe quality), whereas in 13% of the cases one ofthe sentences contains additional content not ex-4The difference is likely due to the coverage of the Com-monCrawl corpus.pressed in the other.
As for the false positives,13.5% of them have either the source or targetsentence in the wrong language, and the remain-ing ones representing failures in the alignmentprocess.
Across three languages, our inspectionrevealed that around 80% of randomly sampleddata appeared to contain good translations (Table2).
Although this analysis suggests that languageidentification and SMT output detection (Venu-gopal et al, 2011) may be useful additions to thepipeline, we regard this as reasonably high preci-sion for our simple algorithm.Language PrecisionSpanish 82%French 81%German 78%Table 2: Manual evaluation of precision (by sen-tence pair) on the extracted parallel data for Span-ish, French, and German (paired with English).In addition to the manual evaluation of preci-sion, we applied language identification to ourextracted parallel data for several additional lan-guages.
We used the ?langid.py?
tool (Lui andBaldwin, 2012) at the segment level, and report thepercentage of sentence pairs where both sentenceswere recognized as the correct language.
Table 3shows our results.
Comparing against our man-ual evaluation from Table 2, it appears that manysentence pairs are being incorrectly judged as non-parallel.
This is likely because language identifi-cation tends to perform poorly on short segments.1377French German Spanish Arabic63% 61% 58% 51%Chinese Japanese Korean Czech50% 48% 48% 47%Russian Urdu Bengali Tamil44% 31% 14% 12%Kannada Telugu Kurdish12% 6.3% 2.9%Table 3: Automatic evaluation of precisionthrough language identification for several lan-guages paired with English.3.3 Domain Name and Topic AnalysisAlthough the above measures tell us somethingabout how well our algorithms perform in aggre-gate for specific language pairs, we also wonderedabout the actual contents of the data.
A majordifficulty in applying SMT even on languages forwhich we have significant quantities of paralleltext is that most of that parallel text is in the newsand government domains.
When applied to othergenres, such systems are notoriously brittle.
Whatkind of genres are represented in the CommonCrawl data?We first looked at the domain names which con-tributed the most data.
Table 4 gives the top fivedomains by the number of tokens.
The top two do-main names are related to travel, and they accountfor about 10% of the total data.We also applied Latent Dirichlet Allocation(LDA; Blei et al, 2003) to learn a distribution overlatent topics in the extracted data, as this is a pop-ular exploratory data analysis method.
In LDAa topic is a unigram distribution over words, andeach document is modeled as a distribution overtopics.
To create a set of documents from the ex-tracted CommonCrawl data, we took the Englishside of the extracted parallel segments for eachURL in the Spanish-English portion of the data.This gave us a total of 444, 022 documents.
Inour first experiment, we used the MALLET toolkit(McCallum, 2002) to generate 20 topics, whichare shown in Table 5.Some of the topics that LDA finds cor-respond closely with specific domains,such as topics 1 (blingee.com) and 2(opensubtitles.org).
Several of the topicscorrespond to the travel domain.
Foreign stopwords appear in a few of the topics.
Since our sys-tem does not include any language identification,this is not surprising.5 However it does suggest anavenue for possible improvement.In our second LDA experiment, we comparedour extracted CommonCrawl data with Europarl.We created a set of documents from both Com-monCrawl and Europarl, and again used MAL-LET to generate 100 topics for this data.6 We thenlabeled each document by its most likely topic (asdetermined by that topic?s mixture weights), andcounted the number of documents from Europarland CommonCrawl for which each topic was mostprominent.
While this is very rough, it gives someidea of where each topic is coming from.
Table 6shows a sample of these topics.In addition to exploring topics in the datasets,we also performed additional intrinsic evaluationat the domain level, choosing top domains forthree language pairs.
We specifically classifiedsentence pairs as useful or boilerplate (Table 7).Among our observations, we find that commer-cial websites tend to contain less boilerplate ma-terial than encyclopedic websites, and that the ra-tios tend to be similar across languages in the samedomain.FR ES DEwww.booking.com 52% 71% 52%www.hotel.info 34% 44% -memory-alpha.org 34% 25% 55%Table 7: Percentage of useful (non-boilerplate)sentences found by domain and language pair.hotel.info was not found in our German-English data.4 Machine Translation ExperimentsFor our SMT experiments, we use the Mosestoolkit (Koehn et al, 2007).
In these experiments,a baseline system is trained on an existing parallelcorpus, and the experimental system is trained onthe baseline corpus plus the mined parallel data.In all experiments we include the target side of themined parallel data in the language model, in orderto distinguish whether results are due to influencesfrom parallel or monolingual data.5We used MALLET?s stop word removal, but that is onlyfor English.6Documents were created from Europarl by taking?SPEAKER?
tags as document boundaries, giving us208,431 documents total.1378Genre Domain Pages Segments Source Tokens Target TokensTotal 444K 5.67M 71.5M 67.5Mtravel www.booking.com 13.4K 424K 5.23M 5.14Mtravel www.hotel.info 9.05K 156K 1.93M 2.13Mgovernment www.fao.org 2.47K 60.4K 1.07M 896Kreligious scriptures.lds.org 7.04K 47.2K 889K 960Kpolitical www.amnesty.org 4.83K 38.1K 641K 548KTable 4: The top five domains from the Spanish-English portion of the data.
The domains are ranked bythe combined number of source and target tokens.Index Most Likely Tokens1 glitter graphics profile comments share love size girl friends happy blingee cute anime twilight sexy emo2 subtitles online web users files rar movies prg akas dwls xvid dvdrip avi results download eng cd movie3 miles hotels city search hotel home page list overview select tokyo discount destinations china japan4 english language students details skype american university school languages words england british college5 translation japanese english chinese dictionary french german spanish korean russian italian dutch6 products services ni system power high software design technology control national applications industry7 en de el instructions amd hyper riv saab kfreebsd poland user fr pln org wikimedia pl commons fran norway8 information service travel services contact number time account card site credit company business terms9 people time life day good years work make god give lot long world book today great year end things10 show km map hotels de hotel beach spain san italy resort del mexico rome portugal home santa berlin la11 rotary international world club korea foundation district business year global hong kong president ri12 hotel reviews stay guest rooms service facilities room smoking submitted customers desk score united hour13 free site blog views video download page google web nero internet http search news links category tv14 casino game games play domaine ago days music online poker free video film sports golf live world tags bet15 water food attribution health mango japan massage medical body baby natural yen commons traditional16 file system windows server linux installation user files set debian version support program install type17 united kingdom states america house london street park road city inn paris york st france home canada18 km show map hotels hotel featured search station museum amsterdam airport centre home city rue germany19 hotel room location staff good breakfast rooms friendly nice clean great excellent comfortable helpful20 de la en le el hotel es het del und die il est der les des das du paraTable 5: A list of 20 topics generated using the MALLET toolkit (McCallum, 2002) and their most likelytokens.4.1 News Domain TranslationOur first set of experiments are based on systemsbuilt for the 2012 Workshop on Statistical Ma-chine Translation (WMT) (Callison-Burch et al,2012) using all available parallel and monolingualdata for that task, aside from the French-EnglishGigaword.
In these experiments, we use 5-gramlanguage models when the target language is En-glish or German, and 4-gram language models forFrench and Spanish.
We tune model weights usingminimum error rate training (MERT; Och, 2003)on the WMT 2008 test data.
The results are givenin Table 8.
For all language pairs and both testsets (WMT 2011 and WMT 2012), we show animprovement of around 0.5 BLEU.We also included the French-English Gigawordin separate experiments given in Table 9, and Table10 compares the sizes of the datasets used.
Theseresults show that even on top of a different, largerparallel corpus mined from the web, adding Com-monCrawl data still yields an improvement.4.2 Open Domain TranslationA substantial appeal of web-mined parallel datais that it might be suitable to translation of do-mains other than news, and our topic modelinganalysis (?3.3) suggested that this might indeed bethe case.
We therefore performed an additionalset of experiments for Spanish-English, but weinclude test sets from outside the news domain.1379Europarl CommonCrawl Most Likely Tokens9 2975 hair body skin products water massage treatment natural oil weight acid plant2 4383 river mountain tour park tours de day chile valley ski argentina national peru la8 10377 ford mercury dealer lincoln amsterdam site call responsible affiliates displayed7048 675 market services european competition small public companies sector internal9159 1359 time president people fact make case problem clear good put made years situation13053 849 commission council european parliament member president states mr agreement1660 5611 international rights human amnesty government death police court number torture1617 4577 education training people cultural school students culture young informationTable 6: A sample of topics along with the number of Europarl and CommonCrawl documents wherethey are the most likely topic in the mixture.
We include topics that are mostly found in Europarl orCommonCrawl, and some that are somewhat prominent in both.WMT 11 FR-EN EN-FR ES-EN EN-ES EN-DEBaseline 30.46 29.96 30.79 32.41 16.12+Web Data 30.92 30.51 31.05 32.89 16.74WMT 12 FR-EN EN-FR ES-EN EN-ES EN-DEBaseline 29.25 27.92 32.80 32.83 16.61+Web Data 29.82 28.22 33.39 33.41 17.30Table 8: BLEU scores for several language pairs before and after adding the mined parallel data tosystems trained on data from WMT data.WMT 11 FR-EN EN-FRBaseline 30.96 30.69+Web Data 31.24 31.17WMT 12 FR-EN EN-FRBaseline 29.88 28.50+Web Data 30.08 28.76Table 9: BLEU scores for French-English andEnglish-French before and after adding the minedparallel data to systems trained on data fromWMT data including the French-English Giga-word (Callison-Burch et al, 2011).For these experiments, we also include trainingdata mined from Wikipedia using a simplified ver-sion of the sentence aligner described by Smithet al (2010), in order to determine how the ef-fect of such data compares with the effect of web-mined data.
The baseline system was trained usingonly the Europarl corpus (Koehn, 2005) as par-allel data, and all experiments use the same lan-guage model trained on the target sides of Eu-roparl, the English side of all linked Spanish-English Wikipedia articles, and the English sideof the mined CommonCrawl data.
We use a 5-gram language model and tune using MERT (Och,Corpus EN-FR EN-ES EN-DENews Commentary 2.99M 3.43M 3.39MEuroparl 50.3M 49.2M 47.9MUnited Nations 316M 281M -FR-EN Gigaword 668M - -CommonCrawl 121M 68.8M 88.4MTable 10: The size (in English tokens) of the train-ing corpora used in the SMT experiments from Ta-bles 8 and 9 for each language pair.2003) on the WMT 2009 test set.Unfortunately, it is difficult to obtain meaning-ful results on some open domain test sets such asthe Wikipedia dataset used by Smith et al (2010).Wikipedia copied across the public internet, andwe did not have a simple way to filter such datafrom our mined datasets.We therefore considered two tests that wereless likely to be problematic.
The Tatoeba cor-pus (Tiedemann, 2009) is a collection of examplesentences translated into many languages by vol-unteers.
The front page of tatoeba.org wasdiscovered by our URL matching heuristics, butwe excluded any sentence pairs that were found inthe CommonCrawl data from this test set.1380The second dataset is a set of crowdsourcedtranslation of Spanish speech transcriptions fromthe Spanish Fisher corpus.7 As part of a re-search effort on cross-lingual speech applications,we obtained English translations of the data usingAmazon Mechanical Turk, following a protocolsimilar to one described by Zaidan and Callison-Burch (2011): we provided clear instructions,employed several quality control measures, andobtained redundant translations of the completedataset (Lopez et al, 2013).
The advantage ofthis data for our open domain translation test istwofold.
First, the Fisher dataset consists of con-versations in various Spanish dialects on a widevariety of prompted topics.
Second, because weobtained the translations ourselves, we could beabsolutely assured that they did not appear in someform anywhere on the Web, making it an idealblind test.WMT10 Tatoeba FisherEuroparl 89/72/46/20 94/75/45/18 87/69/39/13+Wiki 92/78/52/24 96/80/50/21 91/75/44/15+Web 96/82/56/27 99/88/58/26 96/83/51/19+Both 96/84/58/29 99/89/60/27 96/83/52/20Table 11: n-gram coverage percentages (up to 4-grams) of the source side of our test sets given ourdifferent parallel training corpora computed at thetype level.WMT10 Tatoeba FisherEuroparl 27.21 36.13 46.32+Wiki 28.03 37.82 49.34+Web 28.50 41.07 51.13+Both 28.74 41.12 52.23Table 12: BLEU scores for Spanish-English be-fore and after adding the mined parallel data to abaseline Europarl system.We used 1000 sentences from each of theTatoeba and Fisher datasets as test.
For com-parison, we also test on the WMT 2010 testset (Callison-Burch et al, 2010).
FollowingMunteanu and Marcu (2005), we show the n-gramcoverage of each corpus (percentage of n-gramsfrom the test corpus which are also found in thetraining corpora) in Table 11.
Table 12 givesend-to-end results, which show a strong improve-ment on the WMT test set (1.5 BLEU), and larger7Linguistic Data Consortium LDC2010T04.improvements on Tatoeba and Fisher (almost 5BLEU).5 DiscussionWeb-mined parallel texts have been an exclusiveresource of large companies for several years.However, when web-mined parallel text is avail-able to everyone at little or no cost, there willbe much greater potential for groundbreaking re-search to come from all corners.
With the adventof public services such as Amazon Web Servicesand the Common Crawl, this may soon be a re-ality.
As we have shown, it is possible to obtainparallel text for many language pairs in a varietyof domains very cheaply and quickly, and in suf-ficient quantity and quality to improve statisticalmachine translation systems.
However, our efforthas merely scratched the surface of what is pos-sible with this resource.
We will make our codeand data available so that others can build on theseresults.Because our system is so simple, we believe thatour results represent lower bounds on the gainsthat should be expected in performance of systemspreviously trained only on curated datasets.
Thereare many possible means through which the sys-tem could be improved, including more sophisti-cated techniques for identifying matching URLs,better alignment, better language identification,better filtering of data, and better exploitation ofresulting cross-domain datasets.
Many of the com-ponents of our pipeline were basic, leaving consid-erable room for improvement.
For example, theURL matching strategy could easily be improvedfor a given language pair by spending a little timecrafting regular expressions tailored to some ma-jor websites.
Callison-Burch et al (2011) gatheredalmost 1 trillion tokens of French-English paralleldata this way.
Another strategy for mining parallelwebpage pairs is to scan the HTML for links to thesame page in another language (Nie et al, 1999).Other, more sophisticated techniques may alsobe possible.
Uszkoreit et al (2010), for ex-ample, translated all non-English webpages intoEnglish using an existing translation system andused near-duplicate detection methods to find can-didate parallel document pairs.
Ture and Lin(2012) had a similar approach for finding paral-lel Wikipedia documents by using near-duplicatedetection, though they did not need to apply a fulltranslation system to all non-English documents.1381Instead, they represented documents in bag-of-words vector space, and projected non-Englishdocument vectors into the English vector space us-ing the translation probabilities of a word align-ment model.
By comparison, one appeal of oursimple approach is that it requires only a tableof language codes.
However, with this systemin place, we could obtain enough parallel data tobootstrap these more sophisticated approaches.It is also compelling to consider ways in whichweb-mined data obtained from scratch could beused to bootstrap other mining approaches.
Forexample, Smith et al (2010) mine parallel sen-tences from comparable documents in Wikipedia,demonstrating substantial gains on open domaintranslation.
However, their approach required seedparallel data to learn models used in a classifier.We imagine a two-step process, first obtaining par-allel data from the web, followed by comparabledata from sources such as Wikipedia using mod-els bootstrapped from the web-mined data.
Such aprocess could be used to build translation systemsfor new language pairs in a very short period oftime, hence fulfilling one of the original promisesof SMT.AcknowledgementsThanks to Ann Irvine, Jonathan Weese, and ouranonymous reviewers from NAACL and ACL forcomments on previous drafts.
The research lead-ing to these results has received funding from theEuropean Union Seventh Framework Programme(FP7/2007-2013) under grant agreement 288487(MosesCore).
This research was partially fundedby the Johns Hopkins University Human Lan-guage Technology Center of Excellence, and bygifts from Google and Microsoft.ReferencesDavid M. Blei, Andrew Y. Ng, and Michael I. Jordan.2003.
Latent dirichlet alocation.
J. Mach.
Learn.Res., 3:993?1022, March.Chris Callison-Burch, Philipp Koehn, Christof Monz,Kay Peterson, Mark Przybocki, and Omar F. Zaidan.2010.
Findings of the 2010 joint workshop on sta-tistical machine translation and metrics for machinetranslation.
In Proceedings of the Joint Fifth Work-shop on Statistical Machine Translation and Met-ricsMATR, WMT ?10, pages 17?53.
Association forComputational Linguistics.Chris Callison-Burch, Philipp Koehn, Christof Monz,and Omar F. Zaidan.
2011.
Findings of the 2011workshop on statistical machine translation.
In Pro-ceedings of the Sixth Workshop on Statistical Ma-chine Translation, WMT ?11, pages 22?64.
Associ-ation for Computational Linguistics.Chris Callison-Burch, Philipp Koehn, Christof Monz,Matt Post, Radu Soricut, and Lucia Specia.
2012.Findings of the 2012 workshop on statistical ma-chine translation.
In Proceedings of the SeventhWorkshop on Statistical Machine Translation, pages10?51, Montre?al, Canada, June.
Association forComputational Linguistics.Jiang Chen and Jian-Yun Nie.
2000.
Parallel web textmining for cross-language ir.
In IN IN PROC.
OFRIAO, pages 62?77.J.
Dean and S. Ghemawat.
2004.
Mapreduce: simpli-fied data processing on large clusters.
In Proceed-ings of the 6th conference on Symposium on Opeart-ing Systems Design & Implementation-Volume 6,pages 10?10.
USENIX Association.William A. Gale and Kenneth W. Church.
1993.
Aprogram for aligning sentences in bilingual corpora.Comput.
Linguist., 19:75?102, March.Philipp Koehn, Hieu Hoang, Alexandra Birch, ChrisCallison-Burch, Marcello Federico, Nicola Bertoldi,Brooke Cowan, Wade Shen, Christine Moran,Richard Zens, Chris Dyer, Ondr?ej Bojar, AlexandraConstantin, and Evan Herbst.
2007.
Moses: opensource toolkit for statistical machine translation.
InProceedings of the 45th Annual Meeting of the ACLon Interactive Poster and Demonstration Sessions,ACL ?07, pages 177?180.
Association for Computa-tional Linguistics.P.
Koehn.
2005.
Europarl: A parallel corpus for statis-tical machine translation.
In MT summit, volume 5.Edward Loper and Steven Bird.
2002.
Nltk: the natu-ral language toolkit.
In Proceedings of the ACL-02Workshop on Effective tools and methodologies forteaching natural language processing and computa-tional linguistics - Volume 1, ETMTNLP ?02, pages63?70.
Association for Computational Linguistics.Adam Lopez, Matt Post, and Chris Callison-Burch.2013.
Parallel speech, transcription, and translation:The Fisher and Callhome Spanish-English speechtranslation corpora.
Technical Report 11, JohnsHopkins University Human Language TechnologyCenter of Excellence.Marco Lui and Timothy Baldwin.
2012. langid.py:an off-the-shelf language identification tool.
In Pro-ceedings of the ACL 2012 System Demonstrations,ACL ?12, pages 25?30.
Association for Computa-tional Linguistics.Andrew Kachites McCallum.
2002.
Mal-let: A machine learning for language toolkit.http://mallet.cs.umass.edu.1382Dragos Stefan Munteanu and Daniel Marcu.
2005.
Im-proving Machine Translation Performance by Ex-ploiting Non-Parallel Corpora.
Comput.
Linguist.,31:477?504, December.Jian-Yun Nie, Michel Simard, Pierre Isabelle, andRichard Durand.
1999.
Cross-language informationretrieval based on parallel texts and automatic min-ing of parallel texts from the web.
In Proceedings ofthe 22nd annual international ACM SIGIR confer-ence on Research and development in informationretrieval, SIGIR ?99, pages 74?81, New York, NY,USA.
ACM.Franz Josef Och.
2003.
Minimum error rate trainingin statistical machine translation.
In acl, pages 160?167, Sapporo, Japan.P.
Resnik and N. A Smith.
2003.
The web as a parallelcorpus.
Computational Linguistics, 29(3):349?380.Philip Resnik.
1999.
Mining the web for bilingual text.In Proceedings of the 37th annual meeting of the As-sociation for Computational Linguistics on Compu-tational Linguistics, ACL ?99, pages 527?534.
As-sociation for Computational Linguistics.Jason R. Smith, Chris Quirk, and Kristina Toutanova.2010.
Extracting Parallel Sentences from Compara-ble Corpora using Document Level Alignment.
InNAACL 2010.Jo?rg Tiedemann.
2009.
News from OPUS - A col-lection of multilingual parallel corpora with toolsand interfaces.
In N. Nicolov, K. Bontcheva,G.
Angelova, and R. Mitkov, editors, RecentAdvances in Natural Language Processing, vol-ume V, pages 237?248.
John Benjamins, Amster-dam/Philadelphia, Borovets, Bulgaria.Ferhan Ture and Jimmy Lin.
2012.
Why not grab afree lunch?
mining large corpora for parallel sen-tences to improve translation modeling.
In Proceed-ings of the 2012 Conference of the North Ameri-can Chapter of the Association for ComputationalLinguistics: Human Language Technologies, pages626?630, Montre?al, Canada, June.
Association forComputational Linguistics.Jakob Uszkoreit, Jay M. Ponte, Ashok C. Popat, andMoshe Dubiner.
2010.
Large scale parallel docu-ment mining for machine translation.
In Proceed-ings of the 23rd International Conference on Com-putational Linguistics, COLING ?10, pages 1101?1109.
Association for Computational Linguistics.Ashish Venugopal, Jakob Uszkoreit, David Talbot,Franz J. Och, and Juri Ganitkevitch.
2011.
Water-marking the outputs of structured prediction with anapplication in statistical machine translation.
In Pro-ceedings of the Conference on Empirical Methods inNatural Language Processing, EMNLP ?11, pages1363?1372.
Association for Computational Linguis-tics.Omar F. Zaidan and Chris Callison-Burch.
2011.Crowdsourcing translation: Professional qualityfrom non-professionals.
In Proc.
of ACL.1383
