Mixing Modes of Linguistic Descript ionin Categorial GrammarMark HeppleDepartment of Computer Science, University of Sheffield,Regents Court, Portobello Street, Sheffield S1 4DP, UKEmai l :  hepple@dcs, sheffield, ac.
ukAbstractRecent work within the field of CategorialGrammar  has seen the development of ap-proaches that allow different modes of lo-gical behaviour to be displayed within asingle system, something corresponding tomaking available differing modes of lin-guistic description.
Earlier attempts toachieve this goal have employed modal op-erators called structural modalities, whoseuse presents a number of problems.
I pro-.pose an alternative approach, involving co-existence and interrelation of different sub-logics, that eliminates the need for struc-tural modalities, whilst maintaining the de-scriptive power they provide.1 IntroductionCategorial Grammar  formalisms consist of logics.Syntactic information (e.g.
subcategorisation,word order) is encoded in complex formulas ortypes assigned to lexical items.
Syntactic deriv-ation is via deduction over lexical formulas.
Al-ternative systems differ in the logics they use, xwhich may he classified by their limitations onthe use of 'resources' (i.e.
assumptions) in deduc-tion, and their consequent sensitivity to the spe-cific structuring of those resources (a comparisonwhich gives rise to the 'substructural hierarchy'of logics).
In linguistic terms, such logics can beseen to implement different possible views of thenature of linguistic structure.In the past few years, categorial systems havebeen developed that allow access to the resourcebehaviour of more than one level of the substruc-tural hierarchy.
This amounts to a recognition?The author also at Department of Psychology,Sheffield University.
The research reported here wasdone largely during a year at IRCS, UPenn, with thesupport of an IRCS Postdoctoral Fellowship award.
Iwould like to thank Ruth Kempson, Natasha Kurton-ins, Michael Moortgat, Glyn Morrill and Yde Venemafor valuable discussions of the ideas in this paper.1 For example, associative Lambek calculus (Lam-bek 1958), non-associative Lambek calculus (Lam-bek 1961), a permutative variant of associative Lam-bek calculus known as LP (van Benthem 1983), the'headed' systems of Moortgat & Morrill (1991).that a full account of phenomena within a lan-guage may require use of more than one notionof linguistic structure, so that e.g.
rigid tree-like structures may be appropriate for one classof phenomena (binding, perhaps), whereas moreflexible structures may be appropriate for another(coordination, perhaps).
Consideration of cross-linguistic variation strengthens the case for allow-ing multiple notions of structure.One approach to creating systems with mixedresource behaviour employs operators calledstructural modalities.
In such work, a specific re-source logic is selected as 'basic' for stating thegrammar, thereby setting the default characterist-ics of resource sensitivity.
Then, structural mod-alities are used to allow controlled access to theresource behaviour of other substructural levels.Various problems - -  theoretical, computationaland practical - -  arise for the use of such oper-ators.
For example, where they are used extens-ively, unduly complicated accounts tend to result.Also, the need to have a single 'base logic' presentsproblems for the development of a truly generalcross-linguistic framework.More recent work has seen the developmentof approaches that have coexistence of differentsublogics within a single mixed or multimodalsystem.
2 Moortgat & Oehrle (1993;1994) andHepple (1993) propose general approaches forcombining substructural logics into multimodalsystems, where 'movement between levels' (en-abled by structural modalities in the earlier work)is freely allowed, provided it accords with what areseen to be 'natural relations' between the levels interms of the relative informativeness of their de-scriptions.
Although developed separately, thesetwo sources propose formal systems that are inmany ways similar, but, interestingly, take pre-cisely opposing views as to what are the 'naturalrelations' between levels.
This difference of opin-ion has consequences for how the systems may beused as linguistic formalisms (requiring, for ex-2Some early examples of muitimodal systems arelogics that have coexistence, but without interlink-age, of associative and non-associative Lambek calcu-lus (Oehrle & Zhang 1989; Morrill 1990).
Further ex-amples include systems that combine associative Lam-bek calculus with special connectives for discontinuity(e.g.
Morrill & Solias 1993; Hepple 1994).127ample, 'additional apparatus' for handling wordorder in the second approach), and more cruciallyfor the kind of linguistic accounts they allow to beformulated.In this paper, I will describe the approach takenin Hepple (1993) - -  what I call the 'hybrid' ap-proach, discuss the general inguistic model thatit tends to foster and provide some linguistic illus-tration, and discuss possibilities for parsing hybridsystems.
I will begin with discussion of substruc-tural hierarchy and structural modalities, as it isthe behaviour of systems with structural modalit-ies that inspires the hybrid view of how differentlevels should be related.2 The  subst ructura l  h ie rarchyI will address only logics (or levels) having threeconnectives: a 'product' connective (a form of con-junction, corresponding to 'matter-like addition'of substructures), plus two implicational connect-ives (the left and right 'residuals' of the product),notated as ?-L, and o for a product o.The minimal set of sequent rules for any groupo 0 of connectives {o,~,.---} is as in .
(1,2): 3(1) A:v =~ A:v (id)?
::~ B:b riB:v\] =~ A:a\[cut\]r\[?\] ~ A: ~\[b/v\](2) (B:v, F) ?
=*.
A:a\[-."
R\] o F :=~ B--*A : \[o\]v.a?
~ C:c r\[B:v\] =~ A:a\[--%L\]F\[((I), C~S:w)  ?1 =v A:a\[(cVw)/v\](F, B : v) ?
=~ A : a \[~R\]o F =~ A~B : \[o\]v.a?
=~ C:c F\[B:v\] =~ A:a\[~?L\]r\[(B&C: w, ?
)0\] ~ A: a\[(w'~ c)lv\]F=~ A:a (I) =~ B:b(F, ~)* =~ AoB: (a, b) ?
\[oR\]r\[(B:v, c :w)  01 =~ A:a\[oL\]r\[BoC :x\] ~ A: \[./vow\].aThe Identity (id) and Cut rules express the re-flexivity and transitivity of the derivability rela-tion.
Each connective has a Right \[R\] and Left \[L\]rule, showing, respectively, how to prove and howto use a type containing that connective.
Notethat this formulation includes a system of term3A sequent F ::~ A indicates that the succedent for-mula A can be derived from the structured configur-ation of antecedent formulas F. F\[(I )1\] represents rep-resents the result of replacing (I) with ~l in F\[(I)\].labelling, whereby each type is associated with alambda term (giving objects TYPE:term) in ac-cordance with the well known Curry-Howard in-terpretation of proofs, with the consequence thatcomplete proofs return a term that records theproof's functional or natural deduction structure.Such terms play an important role in the approachto be developed.
The system of term labelling hasthe following features.
All antecedent formulas areassociated with variables.
Cut inferences are in-terpreted via substitution (with a\[b/v\] represent-ing the substitution of b for v in a).
For implic-ational connectives, Left and Right inferences areinterpreted via functional application and abstrac-tion, respectively.
A different abstraction and ap-plication operator is used for each implicationalconnective, so that terms fully record the proofstructure.
The implication o (resp.
o_%) has ap-plication operator ~ (resp.
~ ), giving aT  b (resp.b-~ a) for 'a applied to b', and abstraction oper-ator \[g-\] (resp.
\[-~\]), e.g.
\[~\]v.a (resp.
\[-~\]v.a) forabstraction over v in a.
Product Right inferencesare interpreted via system specific pairing.
Forproduct Left inferences, a term such as \[z/vow\].arepresents the substitution of z for v+w in a.
4We must next consider the issue of resourcestructure and its consequences for linguistic deriv-ation.
If we assume for the above sequent systemthat antecedents are (non-empty) binarily brack-etted sequences of types then we have a version ofthe non-associative Lambek calculus (NL: Lam-bek 1961), where deduction is sensitive to the or-der and bracketting of assumptions, each of whichmust be used precisely once in a deduction.
NL  isa system whose implicit notion of linguistic struc-ture is binary branching tree-like objects, and thisrigidity of structure is reflected in the type com-binations that the system allows.
5 However, it ispossible to undermine sensitivity to aspects of re-source structure by inclusion of structural rules,which act to modify the structure of the ante-cedent configuration.
For example, the follow-ing rules of Permutation (\[P\]) and Association(\[A\]) undermine sensitivity to the linear order andbracketting of assumptions, respectively:r\[(S:b, C:c)*\] ~ A:a\[P\]r\[(c:c. B:b)*\] ~ A:aF\[(B:b, (C:c, D:d)?)
?\] =,, A:a\[A\]F\[((B:b,C:c) ?, D:d) ?\] =~ A:aAdding \[P\] to NL  gives NLP ,  a system whoseimplicit notion of linguistic structure is binary4This operator is a compact notation for one usedwith linear logic by Benton et hi.
(1992).5Such characteristics of structure are reflected inthe systems of algebraic semantics that are providedfor such logics.
Discussion of such issues, however, isbeyond the scope of the present paper.128branching mobiles (since order is undermined onlywithin the confines of the given bracketting).Adding \[A\] to NL  gives a version of associativeLambek calculus (L: Lambek 1961), which viewslanguage purely in terms of strings of tokens.
Ifboth \[A\] and \[P\] are added, we have the system LP(van Benthem 1983), corresponding to a fragmentof linear logic (Girard 1987), which views lan-guage in terms of unordered multisets of tokens.I will adopt special notations for the operatorsof these systems: NL:{?,~,~}, NLP:{O,O--,--~},L:{*,\,/}, LP:{?,-o,o--}.The proof below illustrates this formulation,showing the composition of two implicationals (acombination which requires associativity).
If wesimplify the resulting proof term, using \[~'\] for Aand left-right juxtaposition for application, we getthe familiar composition term Az.x(yz).X:v=vX:v  Y:w=v Y:wi\[ ~L\] (X--Y:z, Y:w)* ~ X : (~.w Z:z =~ Z:z\[:L\](X--Y:z, (Y--Z:y, Z:z)*)* ~ X: (x .
(yTz ) )~ .
.-:-:7:--7-, : - - -W,  .
.
.
.
.
\[A\]((X~-Y:, ,Y--Z:y) ,Z:z)  =~ X:(xT(y*~z))_~ _- - ~ .
V - - -  .
.
-ZT .~- -Z  - .
-~o  - - -T -g .
-  .
.
.
.
.
.
.
\[ R\] (X Y:x, (Y~Z:y) ~ X*--Z:\[7\]z.
(x;(y;z))3 St ructura l  moda l i t iesStructural modalities are unary operators thatallow controlled involvement of structural ruleswhich are otherwise unavailable in a system, 6e.g.
a modified structural rule might be includedthat may only apply where one of the types af-fected by its use are marked with a given modal-ity.
For example, a unary operator /k, allowingcontrolled permutation, might have the followingrules (where/kF indicates a configuration i whichall types are of the form/kX):AF =~ A:a F\[B: b\] =~ A:a\[~R\] \[ALlZ~F =~ Z~A:a F\[Z~B :b\] =?.
A:aF\[(ZXB :b, C:c) ?\] =~ A:a\[Z~P\]r\[(c:c, ZXB:b)*\] ~ A:aThe Left and Right rules are as for necessity in$4.
The restricted permutation rule \[/kP\] allowsany formula of the form AX to permute freely, i.e.undermining linear order for just this assumption.The left rule \[/kL\] allows a/k-marking to be freelydiscarded.
Such a modality has been used in treat-ments of extraction.
The calculus L 'respects' lin-ear order, so that s/up or np\s corresponds to asentence missing a NP at its right or left peri-phery.
However, a type s/(/knp) corresponds toa sentence missing NP at some position, and so6The original structural modalities are linear lo-gic's 'exponentials'.
See Barry et at.
(1991) for somestructural modalities having suggested linguistic uses.is suitable for use in the general case of extrac-tion, where a NP extraction site may occur nonperipherally within a clause.
Proof A in Figure 1illustrates (proof terms are omitted to simplify).Structural modalities allow that stronger logicsmay be embedded within weaker ones, via embed-ding translations, i.e.
so that a sequent is deriv-able in the stronger logic iff its translation intothe weaker logic plus relevant modalities is alsoderivable.
For example, using /k, a fragment ofLP  may be embedded within L.4 Re la t ing  subst ructura l  leve lshnagine how an LP  formula X?Y might be'translated' into the system 'L plus /~' ( 'LA').This formula shows the interderivability X?Y ?~YQX.
A corresponding 'reordering' interderivah-ility would be allowed if X?Y translated to anyof (/kX).
(/XY) or X.
(AY) or (AX).Y, i.e.
witheither or both of the product subcomponents mod-alised, (indicating that subcomponents X and Ymay legitimately appear in either order).
Such/ks may be 'dropped', e.g.
(/kX)o(/kY) =?, XoY,a step corresponding to selection of one of the per-mitted orders.
This latter transformation suggestsX?Y ~ X*Y as a theorem of a mixed logic, re-vealing a natural relation between XQY and X.Y,as if the former were in some sense 'implicitlymodalised' relative to the latter.Consider next the implicational Xo-Y, whichexhibits the interderivability Xo--Y ?
:~ Y--oX.This suggests the translation X/(AY), for whichwe observe X/(/kY) ?
::, (/kY)\X.
L/k allowsX/Y :?.
X/(AY), suggesting X/Y ~ Xo-Y as a'linking' theorem of a mixed logic revealing thenatural relation between Xo--Y and X/Y.The above discussion suggests how the systemsL and LP  might be interrelated in a logic wherethey coexist.
Such relation might be justifiedin terms of allowing transitions involving forget-ting of information, i.e.
X?Y indicates that bothorders are possible for its subeomponents, andthe move to XeY (or YoX) involves forgettingone of these possibilities.
Generalising from thisease, we expect that for any two sublogics in amixed system, with products oi and oj, wherethe former is the stronger logic (including morestructural rules), we will observe transformations:oi XoiY ::?, XoiY and X?~(Y :=~ X*--Y.5 A hybr id  sys temConsider how we might formulate a mixed logicof the kind just suggested, what I term a hybridsystem - -  one which includes the logics that ariseby choices from just \[A\] and \[P\].
The sequent rulesshown in (2) may still be used for each of the levels(with o serving as a placeholder for the variousproduct operators), as may the axiom and Cutrule in (1).
In addition, we require the following129(A) np::# np s :~ s (B)\[\L\](rip, rip\s)* =~ s PP ::~ PP \[\]L\](np, ((np\s)/pp, pp)?)?
=~ s np ::~ nPr/Llt/J(np, ((((np\s)/pp)/np, np)', pp)?)?
::# s \[ZXL\](np, ((((np\s)/pp)/np, Z~np) ?, pp)')?
:ez s\[A\](np, (((np\s)/pp)/np, (Anp, pp)?)?)?
::~ s \[/xp\](np, (((np\s)/pp)/np, (pp, Anp)')')" ::~ s\[A\](np, ((((np\s)/pp)/np, pp)?, ~np)?)
* ::~ s \[A\]((np, (((np\s)/pp)/np, pp)?
)?, Anp) ?
::~ s(rel/(s/Z~np), (np, (((np\s)/pp)/np, pp)*)?)?
::~who Kim sentstructural rules, whose side conditions (shown tothe right) restrict heir involvement to the relevantsubsystems.np =~ np s :~s.... \[\L\](np, np\s)* ~, s pp ::~ pp\[\]L\](np, ((np\s)/pp, pp)')" ~ s np .
nP"VvJ(np, ((((np\s)/pp)/np, np) ?, pp)*)" :ez s \[<\](np, ((((np\s)/pp)/np, np) ?, pp)?)?
=~ s - \[<\](np, ((((np\s)/pp)/np, rip) ?, pp)?)"
~ s \[<\](rip, ((((np\s)/pp)/np, .p) ?, pp)?)?
~ s(rip, (((np\s)/pp)/np, (rip, pp)?)?)?
~ s\[P\](np, (((np\s)/pp)/np, (pp, np)?)?)
?
~ s\[A\](np, ((((np\s)/pp)/.p, pp)?, np)?)
?
~ s\[A\]((np, (((np\s)/pp)/np, pp)?
)?, np)?
=> s \[o-R\]away rel =~ rel (np, (((np\s)/pp)/np, pp)?)?
::~ so--np(rel/(so-np), (np, (((np\s)/pp)/np, p)?)?)?
:ez rel t/L\]who Kim sent awayFigure 1: Two derivations of who Kim serif away6 Word  order  and  NL  semant ics(3) r\[(B:b, C:c) ?\] .
A:a fr\[(C:c, B:b) ?\] ::> A:a\[pjl t 0 E {e,?
}r\[(B:b, (c:c, D:d)?)
?\] =v A:a\[A\] L?
E {*,?
}F\[((B: b, C:c) ?, D:d) 0\] => A:aWith only the rules (1,2,3), we would have a sys-tem where different substructural levels coexist,but without interrelation.
Such interrelation iseffected by the rule (4), which allows a bracketpair of one system (oj) to be replaced by that ofanother system (oi), just in case the latter's sys-tem exhibits greater freedom of resource usage (asindicated by the relation <, which orders the sub-systems thus: ?
< {O, e} < ?).
(4) r\[(B: b, C: c) ?i\] =~ A:a \[<\]F\[(B:b, C:c) ?,\] ~ A : .The following proofs are for the two transforma-tions discussed in the previous ection, illustrating'natural relations' between levels.B=>B A=>A A=>A B=>B\[.R\] i/L\](A, B)" :~ A.B (A/B, B)" ::~ A(A, B) ?
:0 A*B \[<\] (A/B, B) ?
:0 A \[<\]\[?L\] \[o-R\]A?B => A*B A/B => Ao-BThe converse transitions are not derivable, sincethe converse substitution of brackets under \[<\] isnot allowed.
Corresponding transformations maybe derived for the connectives of any two appro-priately related subsystems, e.g.
A?B => AOB,A~B ~ A/B.Proof terms have been used in categorial workfor handling the natural language semantic on-sequences of type combinations.
The above terms,however, encode distinctions unwanted for thispurpose, but can easily be simplified to terms us-ing only a single abstractor (A) and with applica-tion notated by left-right juxtaposition, e.g.
:\ [~\]z .x i (z- ;  v) ~ Az.x(vz)A standard method for handling the word orderconsequences of categorial proofs uses the linearorder of formulas in the proven sequent in the ob-vious way.
This method cannot be used for thehybrid approach, because for any theorem, thereexist other theorems for combining the same ante-cedent ypes under any possible ordering thereof.
7The word order consequences of proofs are in-stead determined from the normal forms of proofsterms, s which encode all the relevant informationfrom the proof, and in particular, the directional,etc, information encoded by the connectives of thetypes combined.
Consider the labelled theorem:(A/B: x, C~B: y)e =~ Ao-C:  \[~\]z.x;  (z~ y)rAny proof of r :0 A may be extended by multiple\[<\] inferences to give a proof of F' =v A, where F' isjust like F except all bracket pairs are 0 ?.
Extendingthis proof with repeated uses of \[P\] and \[A\], we canattain any desired reordering of the component types.SNormalisation of proof terms is defined by the fol-lowing conversion rules:(\['~\]v.a)"; b ~ ,\[b/,'\]b~ (\[~\]v.a) ~ a\[b/v\]\[(b, d?/,,o,,,\].a ...'~ a\[bl,,, ~lw\]?
(\[b/,,o'wl.a)'z~ .-* \[b/vo'w\].
(a':c)e-;(\[blvo',,,\].a) ~ \[b/,,o'wl.C~-Za)130For the result label's subterm x~(z~y) ,  the dir-ectionality of applications uggests the orderingx -< z -< y. Abstraction discounts z as an 'or-derable element', leaving just x -4 y, i.e.
withA/B preceding C~B, as we would expect.
For aterm x~y,  the permutativity of ?
suggests thatboth orderings of x and y are possible.
Notehowever that word order determination must besensitive to the specific modes of structuring andtheir properties, e.g.
the non-associativity of ?implies an 'integrity' for y, z in x~ (y~ z) exclud-ing y -< x -< z as a possible order, despite thepermutativity of ?.
To determine word order, anormalised proof term is first transformed to givea yield term, in which its orderable lements arestructured in accordance with their original man-ner of combination, e.g.xZ(z - ;y )  ~ x.
(zOy)\[(v'~ w)/x.v\].
(=, v)?
~ (v?w)Yield terms may be restructured in ways appro-priate to the different operators (e.g.
subtermsp?q may be rewritten to q?p, etc.).
Possible lin-ear orders can simply be 'read off' the variantsa yield term under restructuring, e.g.
x'~(y~z)gives orders xyz and yzx, since its yield term isx?
(y?z), whose only variant is (y?z)?x7 The linguistic modelI noted earlier that extensive use of structuralmodalities tends to result in very complex ana-lyses.
This fact tends to favour the selection ofstronger systems for the base level logic, a movewhich is associated with loss of possibly useful re-source sensitivity.
This problem does not arise forthe hybrid approach, which freely allows us to useweaker logics for constructing lexical types thatrichly encode linguistic information.Consider firstly a hybrid system that includesonly the two levels L and LP ,  of which clearly Lwill in general be more appropriate for linguisticdescription.
Under the view of how levels are re-lated that I have argued for, the linkage betweenthese two levels is such that X?Y ::~ XeY is atheorem, alongside which we will find also (e.g.
)X/Y ::~ Xo-Y.
Note that it is the latter theorem,and its variants, that most crucially bear uponwhat is gained by the move to a mixed system,given that the lexical encoding of linguistic in-formation predominantly involves the assignmentof functional types.
Hence, a lexical functor con-structed with L connectives may be transformedto one involving LP  connectives, allowing us toexploit the structural freedom of that level.
9 For9Note that with the converse direction of linkage,as advanced by Moortgat & Oehrle (1993), but withlexical functors till constructed using L connectives,no practical use could be made of the permutative LPlevel in this minimal mixed system.example, in handling extraction, a 'sentence miss-ing NP somewhere' may be derived as so-np, asin proof B of Figure 1.Consider next a system that includes also thenon-associative l vel NL.
This additional levelmight be adopted as the principal one for lex-ieal specification, giving various advantages forlinguistic analysis.
For example, by having a lex-ieal element subcategorise for a complement thatis some 'non-associative functor' (i.e.
of the formAt~B or B~A), we could be sure that the com-plement aken was a 'natural projection' of somelexical head, and not one built by composition(or other associativity based combination).
Onthe other hand, where the freedom of associativecombination is required, it is still available, giventhat we have (e.g.)
XtgY ==v X/Y.
Some categorialtreatments of non-constituent coordination havedepended crucially (either implicitly or explicitly)on associativity allowing, for example, subject andverb to be combined without other verb comple-ments, making possible a 'like-with-like' coordina-tion treatment of non-constituent coordination asin e.g.
(i) Mary spoke and Susan whispered, to Bill(where the conjuncts are each analysed as s/pp).In a purely non-associative system, such as NL,such an analysis is excluded.
In the hybrid ap-proach, however, this treatment is still possibleeven with non-associative l xical types, providedcoordination is done at the associative level, e.g.the conjuncts of (i) can be derived and coordin-ated as s/np since: np, (np~s)t~pp =~ s/pp is atheorem as in (5).
Furthermore, since we havealso Xt~Y =~ Xo--Y, such non-associative l xicalspecification is still compatible with the treatmentof extraction described above.
(5 )  np  ~ np  s =~ s\[~L\](up, np~s) q) ::~ s pp :=~ pp(np, ((np~s)~pp, p)O)o =~ s \[<\](np, ((np~s)~pp, p)*)e =~ s.\[<1 (np, ((np~s)~pp, p)')" =l~ s\[A\]((np, (np~s)~pp)*, pp)* =~ s \[/a\](np, (np~s)~pp)' =~ s/ppIt is hoped that the above simple examplesof linguistic uses will serve to give a feeling forthe general character of the linguistic model thatthe hybrid approach would favour, i.e.
one withvery rich lexical encoding of syntactic informa-tion, achieved using predominantly the implica-tional connectives of the weakest available logic,with the stronger logics of the mixed system al-lowing less informative (but hence also more 'flex-ible') descriptions of (functional) linguistic ob-jects.
The above example systems clearly do notexhaust he possibilities for 'rich lexical encoding'.For example, it seems likely that lexical assign-131ments should specify headedness or dependencyinformation, as in the calculi of Moortgat & Mor-rill (1991).8 Parsing with hybrid grammarsIt is well known that parsing (theorem proving)with sequent formalisms uffers efficiency prob-lems as a consequence of derivational equivalence(or 'spurious ambiguity'), i.e.
from the existenceof multiple proofs that assign the same meaningfor a given type combination.
Alternative butequivalent formalisations of the above system arepossible.
Hepple (1993), for example, provides anatural deduction formalisation.
Such a formal-isation should readily provide the basis for a chartbased approach to parsing hybrid logic grammars,after the manner of existing chart methods for usewith L (KSnig 1990; Hepple 1992).
A furtherpromising possibility for efficient parsing of hy-brid system grammars involves proof net reformu-lation, following a general scheme for such refor-mulation described in Moortgat (1992).
However,the precise character of either chart or proof netbased methods for parsing hybrid system gram-mars is a topic requiring further research.9 Concluding RemarksAs noted earlier, the approach described herehas strong similarities to one developed independ-ently by Moortgat & Oehrle (1993), although theytake a precisely opposing view as to what consti-tute the appropriate directions of linkage betweenlevels.
One consequence of this difference is toallow them a more standard treatment of wordorder (not requiring an enriched term labelling al-gebra).
The most important 'practical' differenceis that the differing directions of 'natural move-ment' will tend to foster very different linguisticaccounts.
We may ask which of these two contra-dicting views of linkage is correct.
Hepple (TO AP-PEAR.)
suggests that both views are possible, andmay even be compatible for realisation within asingle system, further extending the possibilitiesfor the multimodal systems that can be construc-ted and for their potential utility.In conclusion, I have described an approach inwhich different sublogics coexist and are interre-lated within a single categorial system.
This givesan approach which allows access to a range of dif-ferent modes of characterising linguistic structure,where the specific mode of description that is usedin any case can be chosen as that which is appro-priate for the aspect of linguistic phenomena thatis under consideration.ReferencesBarry, G., Hepple, M., Leslie, N. & Morrill, G.1991.
'Proof figures and structural operators forcategorial grammar'.
Proc.
of EA CL-5, Berlin.van Benthem, J.
1983.
'The semantics of varietyin Categorial Grammar.'
Report 83-29, Dept.of Mathematics, Simon Fraser University.
Alsoin W. Buszkowski el al (Eds), Calegorial Gram-mar, John Benjamins.
1988.Benton, N., Bierman, G., de Paiva, V. & Hyland,M.
1992.
'Term assignment for intuitionisticlinear logic.'
Technical Report, Cambridge Uni-versity Computer Laboratory.Girard, J-Y.
1987.
'Linear Logic'.
TheoreticalComputer Science 59, ppl-102.Hepple, M. 1992.
'Chart Parsing Lambek Gram-mars: Modal Extensions and Incrementality.'Proc.
of COLING-9~.Hepple, M. 1993.
'A general framework for hy-brid substructural categorial logics.'
Ms, IRCS,UPenn.
Available as IRCS Report 94-14.Hepple, M. 1994.
'Discontinuity and the LambekCalculus'.
Proc.
of COLING-94.Hepple, M. TO APPEAR.
Hybrid Categorial Lo-gics.
Proceedings of Deduction and LanguageWorkshop.
Special edition of the Bulletin ofthe Interest Group in Pure and Applied Logics.KSnig, E. 1990.
'The complexity of parsingwith extended categorial grammars', Proc.
ofCOLING-90.Lambek, J.
1958.
The mathematics of sentencestructure.
American Mathematical Monthly 65.Lambek, J.
1961.
'On the calculus of syntactictypes.'
R. Jakobson (Ed), Structure of Lan-guage and its Mathematical Aspects, Proceed-ings of the Symposia in Applied MathematicsXII, American Mathematical Society.Moortgat, M. 1992.
'Labelled Deductive Systemsfor categorial theorem proving.'
In: P. Dekker& M. Stokhof (Eds), Proceedings of Eighth Am-sterdam Colloquium, University of Amsterdam.Moortgat, M. & Morrill, G. 1991.
'Heads andPhrases: Type Calculus for Dependency andConstituency.'
To appear: Journal of Lan-guage, Logic and Information.Moortgat, M. & Oehrle, R. 1993.
Logical para-meters and linguistic variation.
Lecture noteson categorial grammar.
Fifth European Sum-mer School in Logic, Language and Information,Lisbon.Moortgat, M. & Oehrle, R. 1994.
'Adjacency, de-pendency and order'.
Proceedings of Ninth Am-sterdam Colloquium.Morrill, G. 1990.
'Rules and Derivations: Bind-ing Phenomena nd Coordination in CategorialLogic.'
DYANA Deliverable R1.2.D, ESPRITBasic Research Action BR3175.Morrill, G. & Solias, M.T.
1993.
'Tuples, Discon-tinuity, and Gapping in Categorial Grammar.'Proc.
of EACL-6, Utrecht.Oehrle, R. & Zhang, S. 1989.
'Lambek calculusand Preposing of Embedded Subjects.'
ChicagoLinguistic Society 25.132
