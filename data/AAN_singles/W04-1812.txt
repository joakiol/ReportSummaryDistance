Design and Implementation of a Terminology-basedLiterature Mining and Knowledge Structuring SystemHideki MimaSchool of EngineeringUniversity of TokyoHongo 7-3-1, Bunkyo-ku, Tokyo113-0033, Japanmima@biz-model.t.u-tokyo.ac.jpSophia AnaniadouSchool of Computing, Science andEngineering, University of Salford,Salford M5 4WT, UKNational Centre for Text MiningS.Ananiadou@salford.ac.ukKatsumori MatsushimaSchool of EngineeringUniversity of TokyoHongo 7-3-1, Bunkyo-ku,Tokyo 113-0033, Japanmatsushima@naoe.t.u-tokyo.ac.jpAbstractThe purpose of the study is to develop anintegrated knowledge management system for thedomains of genome and nano-technology, inwhich terminology-based literature mining,knowledge acquisition, knowledge structuring,and knowledge retrieval are combined.
The systemsupports integrating different databases (papersand patents, technologies and innovations) andretrieving different types of knowledgesimultaneously.
The main objective of the systemis to facilitate knowledge acquisition fromdocuments and new knowledge discovery througha terminology-based similarity calculation and avisualization of automatically structuredknowledge.
Implementation issues of the systemare also mentioned.Key Words: Structuring knowledge, knowledgeacquisition, information extraction, naturallanguage processing, automatic term recognition,terminology1.
IntroductionThe growing number of electronicallyavailable knowledge sources (KSs)emphasizes the importance of developingflexible and efficient tools for automaticknowledge acquisition and structuring interms of knowledge integration.
Differenttext and literature mining techniques havebeen developed recently in order to facilitateefficient discovery of knowledge containedin large textual collections.
The main goal ofliterature mining is to retrieve knowledgethat is ?buried?
in a text and to present thedistilled knowledge to users in a conciseform.
Its advantage, compared to ?manual?knowledge discovery, is based on theassumption that automatic methods areable to process an enormous amount oftexts.
It is doubtful that any researchercould process such huge amount ofinformation, especially if the knowledgespans across domains.
For these reasons,literature mining aims at helping scientistsin collecting, maintaining, interpreting andcurating information.In this paper, we introduce a knowledgeintegration and structuring system (KISS)we designed, in which terminology-drivenknowledge acquisition (KA), knowledgeretrieval (KR) and knowledge visualization(KV) are combined using automatic termrecognition, automatic term clustering andterminology-based similarity calculation isexplained.
The system incorporates ourproposed automatic term recognition /clustering and a visualization of retrievedknowledge based on the terminology, whichallow users to access KSs visually thoughsophisticated GUIs.2.
Overview of the systemThe main purpose of the knowledgestructuring system is 1) accumulatingknowledge in order to develop hugeknowledge bases, 2) exploiting theaccumulated knowledge efficiently.
Ourapproach to structuring knowledge is basedon:z automatic term recognition (ATR)z automatic term clustering (ATC) as anontology1 developmentz ontology-based similarity calculationz visualization of relationships amongdocuments (KSs)One of our definitions to structuringknowledge is discovery of relevance betweendocuments (KSs) and its visualization.
Inorder to achieve real time processing forstructuring knowledge, we adoptterminology / ontology-based similaritycalculation, because knowledge  can also berepresented as textual documents orpassages (e.g.
sentences, subsections) whichare efficiently characterized by sets ofspecialized (technical) terms.
Further detailsof our visualization scheme will bementioned in Section 4.1  Although, definition of ontology is domain-specific, our definition of ontology is thecollection and classification of (technical) termsto recognize their semantic relevance.CompuTerm 2004 Poster Session  -  3rd International Workshop on Computational Terminology 83The system architecture is modular, andit integrates the following components(Figure 1):- Ontology Development Engine(s) (ODE) ?components that carry out the automaticontology development which includesrecognition and structuring of domainterminology;- Knowledge Data Manager (KDM) ?
storesindex of KSs and ontology in a ontologyinformation database (OID) and providesthe corresponding interface;- Knowledge Retriever (KR) ?
retrieves KSsfrom TID and calculates similaritiesbetween keywords and KSs.
Currently, weadopt tf*idf based similarity calculation;- Similarity Calculation Engine(s) (SCE) ?calculate similarities between KSsprovided from KR component usingontology developed by ODE in order toshow semantic similarities between eachKSs.
Semantic clusters of KSs are alsoprovided.- Graph Visualizer ?
visualizes knowledgestructures based on graph expression inwhich relevance links between providedkeywords and KSs, and relevance linksbetween the KSs themselves can beshown.Linguistic pre-processing within thesystem is performed in two steps.
In thefirst step, POS tagging2, i.e.
the assignmentof basic parts of speech (e.g.
noun, verb,etc.)
to words, is performed.
In the secondstep, an ontology development engine isused to perform ATR and ATC.
We alsoused feature structure-based parsing forEnglish and Japanese for linguistic filter ofthe ATR.2 We use EngCG tagger[4] in English andJUMAN / Chasen morphological analyzers inJapanese.3.
Terminological processingas an ontology developmentThe lack of clear namingstandards in a domain (e.g.biomedicine) makes ATR a non-trivial problem [1].
Also, it typicallygives rise to many-to-manyrelationships between terms andconcepts.
In practice, two problemsstem from this fact: 1) there areterms that have multiple meanings(term ambiguity), and, conversely, 2)there are terms that refer to thesame concept (term variation).
Generally,term ambiguity has negative effects on IEprecision, while term variation decreases IErecall.
These problems point out theimpropriety of using simple keyword-basedIE techniques.
Obviously, moresophisticated techniques, identifying groupsof different terms referring to the same (orsimilar) concept(s), and, therefore, couldbenefit from relying on efficient andconsistent ATR/ATC and term variationmanagement methods are required.
Thesemethods are also important for organisingdomain specific knowledge, as terms shouldnot be treated isolated from other terms.They should rather be related to one anotherso that the relations existing between thecorresponding concepts are at least partlyreflected in a terminology.Terminological processing in our systemis carried out based on C / NC-value method[2,3] for ATR, and average mutualinformation based ATC (Figure 2).3.1.
Term recognitionThe ATR method used in the system isbased on the C / NC-value methods [2,3].The C-value method recognizes terms bycombining linguistic knowledge andstatistical analysis.
The method extractsmulti-word terms3 and is not limited to aspecific class of concepts.
It is implementedas a two-step procedure.
In the first step,term candidates are extracted by using a setof linguistic filters, implemented using aLFG-based GLR parser, which describegeneral term formation patterns.
In thesecond step, the term candidates areassigned termhoods (referred to as C-values)according to a statistical measure.
Themeasure amalgamates four numericalcorpus-based characteristics of a candidate3 More than 85% of domain-specific terms aremulti-word terms [3].Figure 1: The system architectureBrowserGUIKSsPDF, Word, HTML,XML, CSVData ReaderDocumentViewerOntology DataManagerKnowledgeRetrieverSimilarityManager????
?SimilarityCalculationEngineSimilarityGraphVisualizerOntologyDevelopmentEngineSummarizerBrowserInterfaceKnowledge DataManagerOntology InformationDatabase DatabaseSimilarity Processing Ontology DevelopmentCompuTerm 2004 Poster Session  -  3rd International Workshop on Computational Terminology84term, namely the frequency of occurrence,the frequency of occurrence as a substringof other candidate terms, the number ofcandidate terms containing the givencandidate term as a substring, and thenumber of words contained in thecandidate term.The NC-value method further improvesthe C-value results by taking into accountthe context of candidate terms.
The relevantcontext words are extracted and assignedweights based on how frequently theyappear with top-ranked term candidatesextracted by the C-value method.Subsequently, context factors are assignedto candidate terms according to their co-occurrence with top-ranked context words.Finally, new termhood estimations, referredto as NC-values, are calculated as a linearcombination of the C-values and contextfactors for the respective terms.
Evaluationof the C/NC-methods [3] has shown thatcontextual information improves termdistribution in the extracted list by placingreal terms closer to the top of the list.3.2.
Term variation managementTerm variation and ambiguity arecausing problems not only for ATR but forhuman experts as well.
Several methods forterm variation management have beendeveloped.
For example, the BLAST system[5] used approximate text string matchingtechniques and dictionaries to recognizespelling variations in gene and proteinnames.
FASTR [6] handles morphologicaland syntactic variations by means of meta-rules used to describe term normalization,while semantic variants are handled viaWordNet.The basic C-value method has beenenhanced by term variation management[2].
We consider a variety of sources fromwhich term variation problems originate.
Inparticular, we deal with orthographical,morphological, syntactic, lexico-semanticand pragmatic phenomena.
Our approachto term variation management is based onterm normalization as an integral part ofthe ATR process.
Term variants  (i.e.synonymous terms) are dealt with in theinitial phase of ATR when term candidatesare singled out, as opposed to otherapproaches (e.g.
FASTR handles variantssubsequently by applying transformationrules to extracted terms).
Each term variantis normalized (see table 1 as an example)and term variants having the samenormalized form are then grouped intoclasses in order to link each term candidateto all of its variants.
This way, a list ofnormalized term candidate classes, ratherthan a list of single terms is statisticallyprocessed.
The termhood is then calculatedfor a whole class of term variants, not foreach term variant separately.Table 1: Automatic term normalizationTerm variants  Normalised termhuman cancerscancer in humanshuman?s cancerhuman carcinoma} ?
human cancer3.3.
Term clusteringBeside term recognition, term clusteringis an indispensable component of theliterature mining process.
Sinceterminological opacity and polysemy arevery common in molecular biology andbiomedicine, term clustering is essential forthe semantic integration of terms, theconstruction of domain ontologies andsemantic tagging.ATC in our system is performed using ahierarchical clustering method in whichclusters are merged based on averagemutual information measuring how stronglyterms are related to one another [7].
Termsautomatically recognized by the NC-valuemethod and their co-occurrences are usedas input, and a dendrogram of terms isproduced as output.
Parallel symmetricprocessing is used for high-speed clustering.The calculated term cluster information isencoded and used for calculating semanticsimilarities in SCE component.
Moreprecisely, the similarity between twoindividual terms is determined according totheir position in a dendrogram.
Also acommonality measure is defined as thenumber of shared ancestors between twoterms in the dendrogram, and a positionalP O S  ta g g e rA c r o n y m  r e c o g n i t io nC - v a lu e  A T RO r th o g r a p h ic  v a r i a n t sM o r p h o lo g ic a l  v a r i a n t sS y n ta c t i c  v a r i a n t sN C - v a lu e  A T RT e r m  c lu s te r in gX M L  d o c u m e n ts  i n c lu d in gt e r m  ta g s  a n d  t e r mv a r i a t io n /c l a s s  in f o r m a t io nI n p u t  d o c u m e n tsR e c o g n i t i o no f  t e r m sS t r u c t u r in go f  t e r m sFigure 2: Ontology developmentCompuTerm 2004 Poster Session  -  3rd International Workshop on Computational Terminology 85measure as a sum of their distances fromthe root.
Similarity between two termscorresponds to a ratio betweencommonality and positional measure.Further details of the methods and theirevaluations can be referred in [2,3].4.
Structuring knowledgeLiterature mining can be regarded as abroader approach to IE/KA.
IE and KA inour system are implemented through theintegration of ATR, ATC, and ontology-based semantic similarity calculation.Graph-based visualization for globallystructuring knowledge is also provided tofacilitate KR and KA from documents.Additionally, the system supportscombining different databases (papers andpatents, technologies and innovations) andretrieves different types of knowledgesimultaneously and crossly.
This featurecan accelerate knowledge discovery bycombining existing knowledge.
For example,discovering new knowledge on industrialinnovation by structuring knowledge oftrendy scientific paper database and pastindustrial innovation report database canbe expected.
Figure 3 shows an example ofvisualization of knowledge structures in thedomain of innovation and engineering.
Inorder to structure knowledge, the systemdraws a graph in which nodes indicaterelevant KSs to keywords given and eachlinks between KSs indicates semanticsimilarities dynamically calculated usingontology information developed by our ATR/ ATC components.
Since characterizationfor KSs using terminology is thought to bethe most efficient and ultimatesummarization to KSs, achieving a fast andjust-in-time processing for structuringknowledge can be expected.5.
ConclusionIn this paper, we presented a system forliterature mining and knowledgestructuring over large KSs.
The system is aterminology-based integrated KA system, inwhich we have integrated ATR, ATC, IR,similarity calculation, and visualization forstructuring knowledge.
It allows users tosearch and combine information fromvarious sources.
KA within the system isterminology-driven, with terminologyinformation provided automatically.Similarity based knowledge retrieval isimplemented through various semanticsimilarity calculations, which, incombination with hierarchical, ontology-Figure 3: Visualizationbased matching, offers powerful means forKA through visualization-based literaturemining.Preliminary experiments we conductedshow that the system?s knowledgemanagement scheme is an efficientmethodology to facilitate KA and newknowledge discovery in the field of genomeand nano-technology[2].Important areas of future research willinvolve integration of a manually curatedontology with the results of automaticallyperformed term clustering.
Further, we willinvestigate the possibility of using a termclassification system as an alternativestructuring model for knowledge deductionand inference (instead of an ontology).References[1] K. Fukuda, T. Tsunoda, A. Tamura, T. Takagi,Toward information extraction: identifyingprotein names from biological papers, Proc.of PSB-98, Hawaii, 1998, pp.
3:705-716.
[2] H. Mima, S. Ananiadou, G. Nenadic, ATRACTworkbench: an automatic term recognitionand clustering of terms, in: V. Matou?ek, P.Mautner, R. Mou?ek, K. Tau?er (Eds.)
Text,Speech and Dialogue, LNAI 2166, SpringerVerlag, 2001, pp.
126-133.
[3] H. Mima, S. Ananiadou, An application andevaluation of the C/NC-value approach forthe automatic term recognition of multi-wordunits in Japanese, Int.
J. on Terminology 6/2(2001), pp.
175-194.
[4] A. Voutilainen, J. Heikkila, An EnglishConstraint Grammar (ENGCG) a surface-syntactic parser of English, in: U. Fries et al(Eds.)
Creating and Using English languagecorpora, Rodopi, Amsterdam, Atlanta, 1993,pp.
189-199.
[5] M. Krauthammer, A. Rzhetsky, P. Morozov,C.
Friedman, Using BLAST for identifyinggene and protein names in journal articles,in: Gene 259 (2000), pp.
245-252.
[6] C. Jacquemin, Spotting and discoveringterms through NLP, MIT Press, CambridgeMA, 2001, p.
378.
[7] A. Ushioda, Hierarchical clustering of words,Proc.
of COLING ?96, Copenhagen, Denmark,1996, pp.
1159-1162.CompuTerm 2004 Poster Session  -  3rd International Workshop on Computational Terminology86
