TAGARAB: A Fast, Accurate Arabic Name RecognizerUsing High-Precision Morphological AnalysisJ ohn  Ma loney  and  Michae l  N ivSRA International Corp.4300 Fair Lakes CourtFairfax, VA 22033{j ohnuna loney ,  michae l_n iv}@sra ,  comAbstractWe describe a fast, high-performance name rec-ognizer for Arabic texts.
It combines a pattern-matching engine and supporting data with a mor-phological analysis component.
The role of the mor-phological analysis in accurate name recognition isdiscussed.
VCe also provide evaluations of both mor-phological analysis and name recognition.1 Introduction1,1 RoadmapArabic named entity recognition in texts in Arabicscript is, to our knowledge, a little researched topic.
IIn this paper we describe a system, TAGARAB,that uses a generic pattern-matching engine, SRA'sNetOwl TurboTag TM, combined with an integratedmorphological analysis process, which recognizesnames at a high level of accuracy.
2 We first discussthe factors involved in recognizing names in Arabic.We then present a system description, focussing onthe morphological analysis and the name recogni-tion components.
We also report the results of ourevaluations of each component's performance.Finally, we discuss the contribution of the mor-phological analysis to the name recognition.1.2 Background to Arabic NameRecogn i t ionName recognition has emerged as an NLP technol-ogy that  is effective and can provide high value toseveral different kinds of appl ications, such as clus-tering and summarizat ion (Aone and Maloney, 1997;Aone et al, 1997).
Development of such a capabi l i tyfor Arabic involved meeting some new challenges.Like other Semitic writ ing systems, Arabic doesnot exhibit  differences in orthographic ase.
Un-1 "Named entity recognition" ismeant in the sense familiarfrom the Message Understanding Conferences (MUC) and theMuhilingual Entity Task (MET).
It refers to the identificationand categorizing by type in unformatted text of names ofpersons, entities, and locations, as well as of numerics such aspercentages and times/dates.
In the following, we use "name"loosely in the same sense.2 This work has been funded by the Department ofDefense,Contract No.
MDA904-97-C-3065.like in English-language mixed-case t xts, therefore,there is no obvious clue such as initial capitalized let-ters to indicate the presence of a name constituent.In our experience with Thai  and other non-casewrit ing systems, this seems to effectively impose arequirement hat  there be some understanding ofthe morphological  nature of each token - -  espe-cially part-of-speech information.
Having some mor-phological information allows one to make distinc-tions between likely and unlikely name constituents,which is part icular ly  important  when deciding wherea name ends and the non-name context begins.We part ia l ly  mot ivate this for Arabic as follows: 3?
Closed-class items are rarely, if ever, part  of anArabic proper name: \[Hasan f% with a preposi-tion in second posit ion, seems an unlikely Ara-bic name.
4?
Inflected forms of verbs are rarely part of propernames: \[yata9allamu\], "he learns," is not a per-missible name constituent.
5?
Many lexical items, of course, are not used, orhighly unlikely to be used, in proper names:verbs of speaking or cognition, for example, donot appear to occur in names and they do notfrequently overlap in appearance with propername constituents: \ [muHammad qultu\] is anunlikely name.?
I tems with subject or object suffixes are rarely,if ever, part  of names: \[yukaatibuhu\], "He willcorrespond with him.
''6SThe Arabic source used in this work was the newspaperAI-Hayat4 We will usually vocalize Arabic for the sake of ease of com-prehension (marked with square brackets), but will present iin consonantal transliteration when appropriate (marked withitalics).
Unobvious ymbols: t = tha,  H = voiceless pharyn-gem fricative; 9= voiced pharyngeal fricative; $= alif withouth~rt'tza.SThere are some ism names that contain, at least histor-ically, imperfect verb forms, such as \[yaz~d\], "he increases."cf.
Schimmel 1988,  (p. 1).6Other Semitic naming traditions, e.g.
Akkadian, Amor-ire, Hebrew, do permit "sentence names" containing a finiteverb or a predication.
(cf.
Schimmel 1988, p. 1).8In addition, there are many positive cues, such astitles, frequent given names, and so forth, that allowa system to identify names, but some morphologicalcharacterization f non-name portions is of criticalimportance.
We will discuss this in more detail be-low in Section 4.2 Sys tem Descr ip t ionFigure 1 contains the architecture ofTAGARAB.Our system has two major modules: a Morpho-logical Tokenizer and a Name Finder.
The Mor-phological Tokenizer has the ability, in addition toperforming lexical scanning that establishes word-level units, to add morphological features to tokens.Text encoded in ISO-8859-6 is first passed throughthis tokenizer and then the tokenized stream is pro-cessed by the Name Finder module which identifiesnames and other extraction targets and annotatesthe text with appropriate SGML tags for each ex-tracted item.2.1 Morphological Tokenlzer2.1.1 DescriptionThe Morphological Tokenizer's basic task is to iden-tify the sequences of words, punctuation symbols,numbers, existing SGML tags, etc., that comprisethe input text.
For each such "token," a descrip-tion of what it has found is returned as a vectorof up to 32 application-definable its (e.g., PUNC-TUATION, WORD, NUMBER).
The Tokenizer is avery fast program, generated using the Flex scanner-generator f om a tokenizer specification.We decided to augment the tokenizer's usual role.While it still finds numbers and punctuation tokens,it treats an Arabic word (a contiguous sequence ofArabic letters) as a collection of one or more mor-pheme tokens, each with its own bit-vector of prop-erties.
The properties include those listed above, aswell as morphology-specific properties whose natureand linguistic motivation isdiscussed in the next sec-tion.Making the morphological nalysis part of tok-enization has the advantage ofmaintaining the highspeed of SRA's TurboTag.
An external morphol-ogy module - -  with a high computation overhead- -  would degrade performance.Table 1 contains the features identified by the to-kenizer.Each token in the text receives ome subset ofthe lexical types in Table 1.
For example, a stringsuch as $rbh, phonetically \[~aribahu\], "he drank it,"receives the tokenizer types ARABIC, PERFECT,and SUFFIX.
The first type means that the tokencomprises Arabic letters, the second that it is a Per-fect verb form, and the third that there is a suffixattached.
Note that in this case, the string is notbroken up into pieces, such as stem and suffix.
It re-Bas ic  Feature  \[ SpecificationToken type (unique)ARABICUPPERLOWERCAPMIXEDPUNCINTREALWRITTENUNKNOWNWhite space infoNOWSNLDSPACETABBLSPACEArabic character stringUpper-case EnglishLower-case EnglishInitial-cap EnglishMixed-case EnglishPunctuation marksArabic integerArabic number with decimal pt.Arabic number with commasUnknown token(optional)No white space before tokenNew line char before tokenDouble space before tokenTab before tokenBlank line before tokenSpace before tokenMorphological FeaturePart of Speech (if P.O.S -- ARABIC, unique)CLOSEDCONJPREPNOUNIMPERFECTADJADVPERFECTPARTClosed-class items; not prep.wa- and faPrepositionsNouns, including Verbal NounsImperfects, including all moodsAdjectivesAdverbsPerfectsParticiples (not used asnoun or adjective)Feature (optional)DEF_ART Definite ArticleSUFF Verbal and Nominal SuffixesTable 1: Tokenizer Features for Arabicmains a single token with information being addedas to what the component pieces are.
The only caseswhere the tokenizer splits off pieces of a string arewhere there is an attached conjunction (wa or fa)or an attached preposition (la, ba, ka), or both.
Inthese cases, in place of an original string such asorthographic wq$1, phonetic \[waq?1a\], "and he said,"there will he two separate tokens: \[wa\] with the typeinformation ARABIC and CONJ, and \[q~la\] withthe type information ARABIC and PERFECT.Some of these tokenizer types are exclusive, suchas PERFECT and IMPERFECT.
A token cannotbe both simultaneously.
Others, however, such asNOUN and DEF_ART, can both be applied to atoken.2.1.2 ImplementationWe initially developed the morphological analysismodule as a sequence of 31 patterns in Perl's regularexpression language.
This allowed us to efficiently9I ISO 8859-6 Text I "~.
.fI Tokens with features \]I SGML-annotated textStem UstsMorphological Tokenizer~ Feature-extractionRulesWord UstsName Finder~rNetOwl _ J Pattern-ActionTurboTagTM ~.t  I Rules( Pattem Engine JFigure 1: TAGARAB Architecturedevelop and refine the patterns needed to recognizethe various morphological word-shapes.
When weplugged this version of the morphological nalyzerinto the original tokenizer, however, processing wasquite slow due to the sequential nature of our mor-phological patterns and the backtracking nature ofPerl's regular expression matcher.
To compensate,we incorporated the morphological functionality di-rectly into the Flex specification of the tokenizer.Whenever the Flex-generated scanner identifies anArabic word, it dispatches the appropriate regular-expression to extract he separate morphemes fromthat word - -  a task that is beyond the capability ofFlex.The result is the fastest Arabic morphological n-alyzer we are aware of: The overall processing ratefor TAGARAB is approximately 46 megabytes/houron a Sun Ultra 1.
Morphological processing by itselfruns at about 190 megabytes/hour.2.1.3 Linguist ic DesignWe had originally planned to develop a morpholog-ical capability that would be helpful in improvingname recognition, as discussed in Section 1.2.
Inthe following, we discuss the linguistic design of themorphological nalysis.Arabic is a highly inflected language.
We be-lieved that there are frequently enough surface cuesin the shape of an Arabic word ~ to allow the as-signment of the kind of morphological informationdescribed in Section 2.1.1.
For example, inflectedforms of derived verb stems such as \[yaftatiHu\], "heinaugurates," would seem to have an orthographic"shape" that is fairly unique in an Arabic text.
Wefelt that this information could be exploited to sue-cessfully identify tokens as nouns, verbs (perfects orimperfects), etc., to a sufficiently reliable xtent hatthe later name-recognition patterns could effectivelymake use of it.The morphological nalysis process consists of aseries of regular expressions partially supported bylists of noun, verb, and adjective stems, as well asclosed-class items.
The regular expressions cover allallowable prefixes and suffixes for each stem type.Infixation phenomena, however, such as the infixedof the Eighth Verbal Form, s are handled as variantforms in the verb stem list e.g., 'gtbr, "he consid-ered" and 9br, "he crossed."
No attempt is madeto handle co-occurrence constraints among prefixesand suffixes, nor to assign voice.
Likewise, no at-tempt is made to include contextual information, asis done with standard part-of-speech taggers.
Thereis no attempt o handle ambiguity: The regular ex-pression patterns are ordered, and the search for ananalysis of a word stops at the first match.
Thetoken types are then assigned, and the form is notsubmitted to any other regular expressions.Not all Arabic tokens are hit by one of theseregular-expression patterns that provide morpholog-ical features.
Although there is a mix of patternssupported by lexical information and patterns thatoperate ntirely by rule (no supporting lexical data),the vast majority of matches appear to occur withthe former set of patterns.
In other words, the cover-age of the morphological nalysis is crucially depen-dent on the lexical data.
There are 1051 noun forms,813 verb forms, and 241 adjective forms.
Thereis also a comprehensive list of closed-class items.The notion of "lexical item" in TAGARAB's listsis somewhat similar to the listing principle foundin Landau : broken plural forms for nouns and ad-rTAGAFtAB deals exclusively with the written forth, i.e.,without indication of short vowels.SWe use the usual terms for these forms found in Westerngrammars.10jectives receive an independent entry, much like dif-ferent stems of verbs as mentioned previously.
Wemake no effort to distinguish I and II forms of verbs,as these are not usually distinguished orthographi-cally in AI-Hayat.
In general, if there is no visibleorthographic distinction in normal Arabic prose, wedo not make a distinction in the lexical data.We also entered forms both with and withouthamza, as in AbHayat any form that may receivea hamza may also appear without it (even in thesame text!
).Another important feature is that we entered onlywhat seemed to us to be frequent lexical items in thelexical ists, and tried to do it in such a manner thatwhat seemed intuitively the most likely reading of aform would be the one selected.
This makes ense inthe case of such a highly deterministic morphologyand also given our time and resource constraints.We wanted to ensure that we got the right readingsfor a large number of highly frequent items, as thiswould be the most useful way to constrain the name-recognition patterns.
Many high-frequency ommonnouns, verbs, adjectives, and other parts of speechin Arabic do not usually form part of names.
Asit turned out (See Section 4 below), this strategyworked quite well with person names but was lesssignificant for organization ames.We also decided not to enter items that are useddirectly by the later name-recognition patterns, suchas locations and given names, as these are accessedby the patterns through that module's own wordlists and therefore having a morphological readingfor them is not important (see Section 2.2).In addition to the supporting lexical data, the or-dering of the regular expressions also aided in de-termining the analysis selected.
The regular ex-pressions are grouped functionally, and in generalthe ones pertaining to closed class items apply first,then nouns, adjectives, perfects, and imperfects inthat order.
This had the effect that items which arehighly "marked" as belonging to one category (e.g.,verbs with a double pronominal object) would becaptured appropriately by a verb-recognizing regu-lar expression that looks for such suffixes, but thatitems that are not so highly marked (e.g., a simplethird-person masculine perfect form) would be bi-ased towards a reading according to the order of theregular expressions.We were pleasantly surprised to learn that thiskind of approach - -  although obviously simplistic insome ways - -  produces a very high level of precisionin analysis (i.e., the parts of speech assigned tendstrongly to be correct) and surprisingly good recall(i.e., there is good coverage of the corpus).
We dis-cuss our empirical results in Section 3.In addition, the morphological information thusproduced contributed substantially to the effective-ness of the name-recognition patterns.
We discussthis in Section 4.2.2 Name F inderThe Name Finder module of TAGARAB (see Fig-ure 1) uses as input the tokens found by the Mor-phological Tokenizer with the basic and morpholog-ical features attached.
The pattern-matching engineis SRA's NetOwl TurboTag TM.
It uses data con-sisting of a set of Pattern-Action rules supportedby Word Lists.
The latter consists of items suchas personal titles that are used by the patterns torecognize names.
The Pattern-Action rules use con-textual and structural information about names torecognize them dynamically.
They also make exten-sive use of the feature information coming from theMorphological Tokenizer.
There is minimal perma-nent storage of names.The Pattern-Action rules are written in a conve-nient specification language.
They are not compiled,but are read at run time as part of engine initializa-tion.3 Eva luat ion3.1 Morpho logy3.1.1 P reparat ionTo evaluate the quality of the morphological nal-ysis, we used SRA's tagging tool, TagTool TM, tomanually tag a set of documents for morphologicalanalysis and part of speech.
9For this test document set, we randomly selectedfourteen texts from the AI-Hayat CD-ROM not be-longing to the name recognition training or testingsets.
In addition to manually tagging them, we alsoran TAGARAB over these fourteen texts and useda standard MUC-style scoring program to comparethe morphological output of TAGARAB with the"answers" in the hand-tagged version.3.1.2 Tagging RulesWe hand-tagged every token in the text, except for:s Punctuation, Digitss Tokens within person names?
Person titles* Locations?
Location adjectives (e.g., \[kuwayd\], ~ubn~n;\])?
Adverbs or accusative forms of nouns or adjec-tives marked by fatHafayn.
?Because of staiTmg constraints and need for knowledgeof Arabic, the same person worked on both the developmentof the morphology component, the name patterns, and alsohand-tagged the test set.
To remove as far as possible anytaint, we did not change the system or any supporting dataonce the manual tagging began.11These exceptions exist because the morphologycomponent did not attach features to these itemsfor the reasons given in Section 2.1.3.
As a result ofnot hand-tagging them, the scoring program judgedas spurious any morphological features found by thesystem for such items.We tagged the test set contextually, again in ac-cordance with the design of the morphological com-ponent.
The most important effect was on the fea-ture PART.
We found participles which act usu-ally as a noun, (e.g., \[al-ma~rfig\], "the plan", \[al-muwaz.z.af\], "the employee"), usually as an adjective(e.g., \[al-bayt al-majhfil\], "the unknown house") orseem to be freely used in either reading (e.g., \[mus-lim\], "Muslim,").
We tagged these participles con-textually as nouns or adjectives.
One effect of thiswas that the number of items tagged as participleswas quite low (in effect, only when they are usedpredicatively).In all, the evaluation corpus contains 3214 tokens,of which 2324 are Arabic words.
1879 of the latterreceived morphological features when hand-tagged.3.1.3 Morpho logy  Eva luat ionThe scores for the morphology component are givenin Table 2. l?Since we did not have access to a morphologi-cal analyzer that produces all possible readings forforms based on a large lexicon, we do not have a pic-ture of the total morpho-lexical mbiguities in ourevaluation texts.
However, despite the small lexiconwe manually built, the overall recall is reasonable(73.0%), and it also holds up well for most of themajor open class items: perfects (72.7%), imperfects(60.2%), and nouns (66.8%).
The low recall in ad-jectives (28.8%) is due to the fact that we did notmake many lexical entries for adjectives.
Since ad-jectives do not come first in the Arabic noun phrase,and since we use the morphological information toconstrain the name patterns, tagging the head nounin a noun phrase is what is generally necessary, nottagging the adjective.What is striking in the above table is the high pre-cision across all the categories, with the exceptionof adjectives and participles, the latter a very smallset for the reasons et out in Section 3.1.2.
Preci-sion is consistently above 90%.
We interpret his tomean that a manually built system with a moderatelexicon, having the capacity to only select one read-ing for a given form and not paying any attentionl?The colunm headings are the standard ones from MUC:POS: possible number of points (one point for identifying aconstituent boundary, another for identifying its category),ACT: actual responses given, COP,: correct answers, PAR:boundary errors, INC: category labelling errors, SPU: re-sponses given that are not in answer key, MIS: items in keymissing from response, REC: recall (COR/POS), PRE: preci-sion (COR/ACT), F-M: f-measure ((2.
PRE.
REC)/(PRE +REC)).to a word's context, is capable of a very significantamount of morphological disambiguation i Arabic.Our results are also consistent with the resultsof Levinger et al for the structually similar He-brew.
Levinger et ai.
discovered that non-context-based morphological analysis preferring the mostlikely morpho-lexical nalysis (generated using a sta-tistical algorithm) gives extremely good results.Table 3 shows the collisions among the tags.The most common confusions were between per-fects and nouns in both directions.
The systemtagged the following tokens as nouns where thehuman tagged them as perfects: n~r (2x), "he/itpublished," bgJ, "he/it sent," Hd_t, "it happened,"w.sflhm, "we described them," 11 .sdrt, "was issued,appeared," wSs.l, "he/it continued.
"*2Conversely, there were 16 cases where TAGARABconsidered a token as a perfect, and the humantagged it as a noun.
As with the previous case, thegreat majority were confusions of the perfect witha derivationally related noun or verbal noun (e.g.,qtl, "he killed" or "killing.")
Despite the small num-bers of such collisions in the sample, it seems to usthat this is the most difficult disambiguation task, atleast at the part of speech level, since verbal nounsplus the semantic subject or object in an i.d~fa con-struction can look much like a finite verb plus sub-ject or object.
Clearly, context or a higher level ofsyntactic/semantic understanding is required to dif-ferentiate the two readings.On the other hand, the other major confusionrevealed by this table, Noun/Adjective and Adjec-tive/Noun, is one that seems easily remedied bybuilding in some knowledge of short context intothe morphology component.
For example, the fol-lowing three examples (and the rest resemble these)are cases where the system selects a noun readingfor the adjective within the scope of a noun phrase:\[lgji'fina muslimfin\], "Muslim refugees," \[bi.sfiratinxa~a\], "in a special form," \[mu'tamaruhu al-s.iHgfi\],"his news conference."
In these cases, the adjectivesalso have noun readings, but the local context showsclearly which reading is correct.These results identify specific areas of morpho-lexical ambiguity bringing into focus where addi-tional contextual cues are needed for better ambi-guity resolution.3.2  Eva luat ion  o f  Name Pat ternsThe scores for the name recognition in TAGARABover the training set of texts are given in Table 4.The blind scores are given in Table 5.nIn this case, TAGARAB had identified the initial w asthe conjtmtion wa and the rest of the string as a noun, #flhm,"their property.
"nSimilar to w.sflhm.
TAGARAB took the inital w as theconjunction and took the rest of the string as a noun.12VTypeZLOSEDPERFECT~ONJPREPADJPARTICIPLE\[MPERFECADVNOUNFOTALPOS ACT336 326300 240286 306772 696320 13612 8186 12432 281514 10723758 2936COR PAR INC322 0 4218 0 18284 0 0674 0 2292 0 406 0 2112 0 1026 0 21011 1 502745 1 148SPU MIS0 104 6422 20 764 1880 42 640 410 45242 864REC PRE F-M95.8 98.8 97.372.7 90.8 80.799.3 92.8 95.987.3 96.8 91.828.8 67.6 40.450.0 75.0 60.060.2 90.3 72.381.2 92.9 86.766.8 94.3 78.273.0 93 .5  82.0Table 2: Final Scores for Morphological Tokenizer (see footnote 10)Resp\KeysNOUNPREPPERFECTCLOSEDCONJADVPARTIMPERFEC~I~DJNOUN PREP2166PERFECT CLOSED73~OTAL 25 11 9ADV PART IMPERFECT1 1 412 1 1ADJ175 20TOTAL3202807121374Table 3: Morphological Tag Collisions (Rows=System Responses; Columns=Keys)Pattern performance followed our experience withother languages, except for the recognition of timeexpressions.
Usually, these scores run in the mid-to high-nineties on a test corpus, but the rich vari-ety of time and date formulas hindered scoring veryhigh here.
The scores for Arabic are consistent withscores for other languages (Thai, Chinese, Japanese)where there is no orthographic case information.4 Contribution of Morphology toName RecognitionAs described in Section 2.2, name recognition isper-formed by a set of Pattern-Action rules ("patterns")supported by data in the form of word lists, and inthe case of TAGARAB, reliance on morphologicalinformation.To investigate the role of the latter in support-' ing name recognition, we performed an experimentwhere we turned off the morphological nalyzer por-tion of the tokenizer to see what the impact on thepatterns would be.
"Turning off" the morphologysimply means that we substituted a tokenizer thatdoes not cleave off clitics, and only generates the to-ken types under Basic Feature in Table 1 and noneof those under Morphological Feature.
This had theeffect that name-finding patterns which had previ-ously accessed the morphological features providedby the tokenizer could no longer do so.
The pat-terns themselves were not changed in any way.
Theresults are contained in Table 6.
It should be com-pared with Table 5.NUMBER and TIME do not show much changewith morphological token information removed.This is not surprising, since the patterns identifyingthese elements rely on word lists of month names,written-out numerals, etc.
We handled the differentinflected forms of such items as words for time units(\[9~m\], "year," etc.)
by simply listing all possibilites(singular, dual, plural, masculine, feminine) as sepa-rate entries.
This is a reasonable strategy given therelatively small number of inflected forms for theseitems.
In addition, relying on "static" word listsrather than "dynamically" generated morphologicalinformation coming from the tokenizer educes therisk of error.PERSON names are affected the most by nothaving the morphological features available: Recalldrops 12.2 points and Precision 24.1.
By contrast,ENTITY names are less affected: Recall loses 7.4,and Precision 7.2.
This large difference in the drop inPrecision (24.1 points for Person vs. 7.2 for Entity)is due to the difference in pattern-writing "styles" forthe two name types.
For PERSON names in Arabic,there are few structural or contextual c ues: we had13typeNUMBERENTITYrIMELOCATIOI~PERSONPOS ACT314 3142144 20701612 15742640 26801926 1946COR PAR INC307 5 01740 58 441467 41 22534 30 I01778 36 4SPU MIS2 2228 30264 102106 66128 108REC PRE F-M97.8 97.8 97.881.2 84.1 82.691.0 93.2 92.196.0 94.6 95.392.3 91.4 91.8TOTAL 8636 8584 7826 170 60 528 580 90.6 91.2 90.9typeNUMBERENTITYTIMELOCATIOtqPERSONTOTALTable 4: Name RecognitionPOS26420241596346824669818ACT COR PAR262 256 41880 1557 771416 1288 603128 2957 612180 1879 1578866 7937 359Scores for Arabic: Training SetINC08442016124SPU21626490128446MIS REC PRE4 97.0 97.7306 76.9 82.8244 80.7 91.0430 85.3 94.5414 76.2 86.21398 80.8 89.5F-M97.3 ....79.885.589.780.985.0Table 5: Name Recognitionavailable a list of titles and given names which servedas the major indicators of the presence of a personalname.
For the remainder of the name, consisting ofan uncertain umber of tokens extending out beyondthe given name, there was not much to distinguishwhere the name ended and the non-name context be-gan, except he morphological information providedby the tokenizer.Islamic names involving elements uch as \[ibn\],\[bin\], \[abu\], etc., were exploited as much as possi-ble, but names with these elements were surprisinglyrare in the AI-Hayat articles.
13In effect, the patterns recognizing person namesrelied heavily on the presence of any morphologicalfeature to rule out a given token as being part of thepersonal name.
Without this information, there was,for example, a huge increase in the number of spu-rious names (names tagged by TAGARAB but withno equivalent in the human-tagged keys; under theSPU column in the score reports): One typical ex-ample is the vocalized string \[mudir al-9amaliygt al-siy~s~ya\], "Director of Political Operations," whichthe system took as a name, but which is actually anappositive to a preceding actual person name.
Theword \[mud~r\] is on the title list signalling the onsetof a name and there is nothing to constrain the nexttwo tokens from being consumed.
If morphologicaltype information were available signalling that \[al-9amaliy~t\] is not a likely name constituent, hen thepattern would not have succeeded.There was also increase in boundary errors (un-lZWe do not have direct statistics on different name typesin the source (e.g., Islamic, Russian).
However, we do havestatistics on the relative yields of the patterns, which are or-ganized themselves in terms of name types.Scores for Arabic: Blind Setder the PAR column in the score reports).
Thesewere those cases where the name pattern "didn'tknow where to stop," as in \[al-sayyid muHammad al-baGd~d~ ka'annahu\], where the last element wouldhave received the feature CLOSED from the Mor-phological Tokenizer since it is a subordinating con-junction with a person suffix.
A further side-effectof such a boundary error, as well as the spuriousnames, is that an element such as \[ka'annahu\], onceit is considered part of a name by the system, will beused to recognize variant short forms of that name.This has the result that any \[ka'annahu\] in the arti-cle is subject to being classified as a person name.By contrast with person names, the patterns gen-erating entity names were less affected by the lackof morphological information since they were able toexploit more specific name structure.
For example,a pattern for a specific class of entity names mightinclude both the initial word \[majlis\], "council," andhave as final boundary marker an element such as alocation adjective.
The latter is a separate word listindependent of the morphological component of thesystem.
In effect, there are more specific structuralindicators of entity names than there are of personnames, so the patterns are written differently, withless reliance on morphological information.The final category of names, LOCATION, showsa large increase in missing names (under the columnMIS in the score reports).
The reason for this mightnot be obvious, since location names do not receiveany morphological features (see 2.1.3).
However, themorphological capability within TAGARAB identi-fies clitic items such as the conjunctions \[wa\] and\[fa\], as well as the prepositions \[ba\], \[la\], and \[ka\], asdescribed above in Section 2.1.1.
If there is no mot-14TypeNUMBERENTITYTIMELOCATIONPERSONtOTALPOS ACT264 2622024 18621596 13923468 28022466 25429818 8860COR PAR INC255 5 01407 105 1481255 67 62536 82 361579 289 87032 548 198SPU MIS2 4202 36464 268148 814666 5901082 2040REC PRE F-M96.6 97.3 97.069.5 75.6 72.478.6 90.2 84.073.1 90.5 80.964.0 62.1 63.171.6 79.4 75.3Table 6: Name Recognition Scores for Arabic Without Morphological Features: Blind Setphological capability, then these clitics are not rec-ognized anywhere.
This has the effect that locationnames with a clitic attached will not be recognized,since the system no longer tokenizes the location asa separate item.Annemarie Schimmel, Islamic Names.
EdinburghUniversity Press.
Edinburgh, 1989.5 SummaryWe have described a system for recognizing names,dates, times, and numerics in Arabic-language t xtthrough a combination ofhigh-precision morpholog-ical analysis and a subsequent component that iec-ognizes the named entities.
Although highly deter-ministic and not taking account of context, the mor-phological analysis component removes a great dealof morpho-lexical mbiguity and has the side-effectof demonstrating that the true difficulties in Arabicmorphological mbiguity might be limited to specificcontexts.In addition, we have shown that named entityrecognition i Arabic can be performed at levels con-sistent with other non-case languages despite greatdifferences in structure between them.
Finally, wehave shown that morphological information is cru-cially important to effective Arabic name recogni-tion.Re ferencesChinatsu Aone and John Maloney: "Reuse of aProper Noun Recognition System in Commercialand Operational NLP Applications," in Proceed-ings of ACL'97 Workshop on From Research toCommercial Applications: Making NLP Technol-ogy Work in Practice, Madrid, Spain, 1997.Chinatsu Aone, Mary Ellen Okurowski, James Gor-linsky, and Bjornar Larsen: "A Scalable Summa-rization System Using Robust NLP," in Proceed-ings of ACL'97 Workshop on Intelligent ScalableText Summarization, Madrid, Spain, 1997.Jacob Landau.
A Word Count of Modern ArabicProse.
American Council of Learned Societies,New York, 1959.Moshe Levinger et al "Learning Morpho-LexiealProbabilities from an Untagged Corpus with anApplication to Hebrew."
Computational Linguis-tics, Vol.
2113, 1995.15
