Automatic Augmentation of Translation Dictionary withDatabase Terminologies in Multilingual Query InterpretationHodong Lee and Jong C. ParkComputer Science Division and AITrcKorea Advanced Institute of Science and Technology373-1 Gusung-dong, Yusong-gu, Daejon 305-701, South KOREAfhdlee,parkg@nlp.kaist.ac.krAbstractIn interpreting multilingual queriesto databases whose domain informa-tion is described in a particular lan-guage, we must address the problemof word sense disambiguation.
Sincefull-fledged semantic classification in-formation is difficult to construct ei-ther automatically or manually for thispurpose, we propose to disambiguatethe senses of the source lexical itemsby automatically augmenting a simpletranslation dictionary with databaseterminologies and describe an imple-mented multilingual query interpreta-tion system in a combinatory catego-rial grammar framework.11 IntroductionIn interpreting multilingual queries to databaseswith domain information such as objects, tablenames, and attribute names that are described ina particular language, we must address the prob-lem of word sense disambiguation.
For exam-ple, if we wish to interpret a query in Englishto a database with domain information describedin Korean, lexical items in English must be dis-ambiguated to the matching senses in Korean.This problem is similar to that of lexical selec-tion in machine translation domain (Lee et al,1This work was supported by the Korea Science and En-gineering Foundation (KOSEF) through AITrc.ip-ta person body color ...Mary oy-twu kal-sayk ...... ... ... ...sin-ta person foot status ...John sin-bal nalk-ta ...... ... ... ...sa-ta person object status ...John ca-tong-cha nalk-ta ...Mary sin-bal nalk-ta ...Manny ko-yang-i nulk-ta ...... ... ... ...Table 1: Sample Database1999; Palmer et al, 1999), except that the targetis different in the sense that one is a formal querylanguage and the other is another natural lan-guage.
This difference prompts us to make use ofdatabase information, such as domain databaseobjects, table names, and attribute names, insteadof the general semantic classifications (Palmer etal., 1999) for disambiguating the senses of lex-ical items in the query.
Example queries areshown below:(1) (a) Which shoes does Mary buy?
(b) Who wears a brown coat?
(c) Who wears old shoes and buys an old car?Query 1a shows a query made up of unambigu-ous words having a unique target interpretation.But in 1b, wears may have several interpretationsin Korean such as ?ip-ta?, ?ssu-ta?, ?sin-ta?, and?tti-ta?
(cf.
Table 3).
And old in query 1c alsocontains several senses2.
If we assume a simpledatabase made up of tables such as ?ip-ta?
(to puton the body), ?sin-ta?
(to put on the foot), and2We notate Korean alphabets in Yale form.?sa-ta?
(buy) in Table 1, wears in 1b can be dis-ambiguated by a lexical item ?coat?
and its tar-get ?oy-twu?, since ?oy-twu?
only appears in thetable as related to ?ip-ta?.
And wears in 1c isalso restricted by ?shoes?, but ?shoes?
appears inthe table as related to ?sin-ta?
and ?sa-ta?.
Asshown, these senses can be disambiguated withthe translation dictionary.
Since ?sa-ta?, or ?buy?,is not registered in the translation dictionary, itis simply discarded.
old in a query 1c can beinterpreted into ?nalk-ta?
(not new) and ?nulk-ta?
(not young) because it appears in the same tableentries for ?sa-ta?.
Since it is difficult to disam-biguate the senses only with database informa-tion, we may utilize co-occurrence informationbetween the collocated words such as (old,shoes)and (old,car) (Park and Cho, 2000; Lee et al,1999).In this paper, we propose a disambiguationmethod with the database information and co-occurrence information (Park and Cho, 2000;Palmer et al, 1999) for the interpretation of nat-ural language queries (Lee and Park, 2001) inmultilingual query interpretation.
Although wepropose to construct the system without an inter-mediate representation language, we show thatour Combinatory Categorial Grammar (CCG)framework is compatible with the approacheswith an intermediate representation (Nelken andFrancez, 2000; Androutsopoulos et al, 1998;Klein et al, 1998).
We also discuss the advan-tages and disadvantages of these two approaches.The rest of the paper is organized as fol-lows.
A brief introduction to CCGs and natu-ral language database interfaces (NLDBs) willbe shown in Section 2.
We show the translationprocess with and without an intermediate repre-sentation using CCG in Section 3.
The proposedsystem with multilingual translation is describedin Sections 4 and 5.2 Related WorkIn this paper, we propose to interpret natural lan-guage queries in English and Korean with CCGsand argue that word selection problem must beresolved for multilingual query interpretation.Rule Rule Name (Symbol)X=Y Y !
X F/W Application (>)Y XnY !
X B/W Application (<)X conj X !
X Coordination (< n >)X=Y Y=Z !
X=Z F/W Composition (> B)Y nZ XnY !
XnZ B/W Composition (< B)X=Y Y nZ !
XnZ F/W Crossed Comp.
(> Bx)X !
T=(TnX) F/W Type Raising (> T )X !
Tn(T=X) B/W Type Raising (< T )Table 2: CCG Rules for Korean2.1 Combinatory Categorial GrammarCombinatory Categorial Grammars (CCGs) arecombinatory extensions to the categorial gram-mars (Steedman, 2000).
CCGs are among thelexicalized grammars, such as linear indexedgrammars and tree adjoining grammars, and aregenerally known to provide a wide linguisticcoverage and a way of processing sentences in-crementally.Table 2 shows the CCG reduction rules pro-posed for Korean (Park and Cho, 2000).
(Steed-man, 2000) suggested the reduction rules for En-glish which include backward crossed composi-tion and backward substitution.
We adopt thisrule set for the processing of the queries in En-glish.
(2) Who wears old shoes?np (snnp)=np np=np np>np>snnp<sExample 2 shows a syntactic derivation for anexample query using CCG.
Transitive verbs like?wears?
are assigned the category (snnp)/np,which receives a phrase of category np on itsright (the second np and the directionality is indi-cated by the slash /, that is, to the right) and thenreceives another np on its left (the first np andthe directionality is indicated by the backslash n,that is, to the left), to give rise to the phrase ofcategory s. Such a computation is done by sim-ple function application.
Example 3 shows theCCG derivation for a query with coordination.
(3) Who wears old shoes and a brown coat?np (snnp)=np np conj np<n>np>snnp<sIn addition to function application utilized in ex-amples 2 and 3, CCGs use rules for a limitedset of combinators such as B (function compo-sition), T (type raising), and S (function substi-tution) to model natural language.
The reader isreferred to (Steedman, 2000) for further details.2.2 Multilingual Database InterfacesThere have been many proposals for NLDBssince the 1960?s3.
In this section, we reviewsome of the more recent ones.
(Androutsopou-los et al, 1998; Nelken and Francez, 2000) focuson queries in English with temporal expressions,with a specialized semantic representation lan-guage that can handle temporality.
Examples areshown below.
(4) (a) Did any flight circle while runway 2 was open?
(b) Which companies serviced BA737 in 1990?
(c) During which years did Mary work in marketing?The system in (Klein et al, 1998) interprets nounphrase queries such as 5 in German:(5) Ersatzzeiten wegen Kindererziehung(Exemption times because of child raising)While the system can analyze noun phrases withvarious adverbial phrases, it is not reported tohandle more complex noun phrase queries suchas those with subordinate or coordinate construc-tions.None of these work deals with multilingualissues.
Nor is there much related work in thefield of NLDBs.
(Thompson and Mooney, 1999)presents a system that automatically constructsthe lexicon for NLDBs, in various languagessuch as English, Spanish, Japanese, and Turkish,which represents the lexical entries with a pair ofthe phrases and the corresponding semantic rep-resentation in first-order logic.
Since the seman-tic representation for lexical items is determinedusing the frequency of the general terms of thesemantic representation in the corpus made upof the query sentences annotated by their logicalrepresentation, the system makes it difficult toincorporate various linguistic considerations onnatural language.3The reader is referred to (Androutsopoulos et al, 1995)for a survey.3 Translation with CCGIn this section, we discuss the translation withand without an intermediate language.
Thetranslation based on CCG can derive the tar-get database language expressions/queries suchas SQL, TSQL, and QUBE, as well as expres-sions in intermediate representation languages.We show the translation into both languages withexamples (Nelken and Francez, 2000).3.1 Indirect vs.
Direct TranslationMost NLDBs use an intermediate representa-tion which does not make use of expressionsthat correspond directly to real database objects.The intermediate representations are usually no-tated as logic expressions such as a quasi-logicalform (Klein et al, 1998) and a customized lan-guage (Androutsopoulos et al, 1998; Nelken andFrancez, 2000).
These representations provide away to translate indirectly to the target databaselanguages.For example, query 6a is translated into6b with the intermediate representation LAllen(Nelken and Francez, 1999; Toman, 1996),and into 6c with the SQL/Temporal expressions(Nelken and Francez, 2000).
(6) (a) During which years did Mary work in marketing?
(b) year(I) ^ 9J(work(mary;marketing; J) ^ J past ^ J  I(c) NONSEQUENCED VALIDTIMESELECT DISTINCT a0.c1 AS c1FROM work?
AS a1,year?
AS a0WHERE VALIDTIME(a0) contains VALIDTIME(a1)AND a1.c1 = ?mary?
AND a1.c2 = ?marketing?AND PERIOD(TIMESTAMP ?beginning?, TIMESTAMP?now?)
contains VALIDTIME(a1)The translation using an intermediate represen-tation has several advantages, including (a) theavailability of an independent linguistic front-end, (b) the separation of domain dependentknowledge from the system engine, and (c)the relative easiness of augmenting the sys-tem with an extra inference module for disam-biguation (cf.
Androutsopoulos et al, 1995).The points (a) and (b) indicate the separationof domain-dependent resources such as lexicon,database mapping information, and other knowl-edge bases.
(c) arises from the modularity of thetranslation process.During which year; did mary work in marketing?
(s=s)=np : np : year(I) s=s : np : mary0snnp : (snnp)n(snnp) :(x; I)(y; J):x ^ y ^ J  I (x; J):x ^ J  past xy:9Jwork(x;y; J) marketing0> <s=s : (y; J):year(I) ^ y ^ J  I snnp : y:9Jwork(y;marketing0; J)<s : 9Jwork(mary0; marketing0; J)>s : 9Jwork(mary0; marketing; J) ^ J  past>s : year(I) ^ 9Jwork(mary0; marketing; J) ^ J  past ^ J  IFigure 1: A Derivation of Example 6a to an Intermediate RepresentationWhen we use an intermediate language, we donot need to concern ourselves with the syntac-tic details of the target query language during themapping process, so that we can pay more at-tention to the differences in syntax between thetwo source languages (i.e.
English and Korean),making the resulting interpretation more reliable.In addition, the use of an intermediate languagegives rise to a more flexible query interpretationsystem as the queries can be translated into mul-tiple target query languages without further pro-cessing at the stage of the source query interpre-tation.
However, the use of the same intermedi-ate language for source query languages such asEnglish and Korean that are known to have verydifferent linguistic characteristics makes it dif-ficult to capture subtle differences between thequeries of the different source languages unlessthe intermediate language is quite expressive.And much of the expressiveness of the interme-diate language for the translation of the queriesin one language may not be what is needed in thetranslation of the queries in the other.The translation without an intermediate repre-sentation has a simpler and more straightforwardprocess.
And there is no extra effort on devel-opment of a formal intermediate representationwhich is difficult to ensure the full coverage onlinguistic expressiveness and the soundness ofthe proposed formalism.
Nevertheless, the threepoints mentioned above are thought to be dif-ficult to overcome in this approach.
However,the points (a) and (b) can be equally achieved byseparating domain-dependent elements from thequery processing module using lexicalized gram-mars such as CCG.
In this case, the constructionof a domain-dependent lexicon can be a prob-lem, but it can be resolved to some extent withan automatic construction method.
The point(c) is difficult to address, since the translationwithout an intermediate representation usually isdone in a single module.
The inference mod-ule, however, can be complemented by disam-biguation using co-occurrence information (Parkand Cho, 2000) and disambiguation of domain-dependent word senses with consideration for thecontext-dependent information such as informa-tion structure (Steedman, 2000).
(Nelken andFrancez, 2000) use an intermediate representa-tion because the compositional construction offormulae during parsing becomes easier.
How-ever, we show that database queries can be in-terpreted compositionally during parsing withoutsuch an intermediate representation through di-rect translation.3.2 Translation to an IntermediateRepresentationWhile our approach does not make use of an in-termediate representation, the CCG frameworkitself allows queries to be interpreted into an in-termediate representation.
Figure 1 shows thetranslation process from the query 6a to the form6b which is in LAllen.
Since we are only showingthe possibility of translation, we use an exam-ple from (Nelken and Francez, 2000).
In Figure1, we slightly modified the semantics in (Nelkenand Francez, 2000; Nelken and Francez, 1999)for the convenience of translation.
And for thesame reason, we devised the operator (x; I)where x is an argument and I represents a timeinterval variable.3.3 Translation to a Target LanguageFigure 2 shows the translation process from thequery 6a to SQL/Temporal expression 6c, alsoindicating the need for post-processing.
For in-Word Relation Collocation Word sense Target wordswear object coat,glasses put on $?
"(ip-ta), bh"(ssu-ta), '?
"(sin-ta), ""(cha-ta)expression express $"(tti-ta), '?"(cis-ta)old modifiee man,book not young ??
?"(nulk-ta), Zf)-??
(nonyen-uy)shoe,car not new "?"(nalk-ta), !5?"(hel-ta)Table 3: Part of Word Disambiguation Knowledge for ?wear?
and ?old?During             which year                                           did          mary                                work in marketing ?
$s:[A&B,C&D,E&F&VALIDTIME(C) contains VALIDTIME(D)]/s:[B,D,F]/np:[A,C,E]np:[year?.c1, year?,_]s:[A,B,C&PERIOD(TIMESTAMP ?beginning?, TIMESTAMP ?now?)
contains VALIDTIME(B)]/s:[A,B,C]np:[_,_,?mary?]s:[A,work?,work?.c2=?marketing?&work?.c1=C]\np:[A,B,C]s:[year?.c1&B,year?&D,_&F&VALIDTIME(year?
)contains VALIDTIME(D)]/s:[B,D,F]s:[_,work?,work?.c2=?marketing?&work?.c1=?mary?
]s:[_,work?,work?.c2=?marketing?&work?.c1=?mary?&PERIOD(TIMESTAMP ?beginning?, TIMESTAMP ?now?)
contains VALIDTIME(work?
)]s:[year?.c1&_,year?&work?,_&work?.c2=?marketing?&work?.c1=?mary?&PERIOD(TIMESTAMP ?beginning?,TIMESTAMP ?now?)
contains VALIDTIME(work?)&VALIDTIME(year?)
contains VALIDTIME(work?)]sql_temporal:[[SELECT,A],[FROM,B],[WHERE,C]]\s:[A,B,C]sql_temporal:[[SELECT,year?.c1&_],[FROM,year?&work?
],[WHERE,_&work?.c2=?marketing?&work?.c1=?mary?&PERIOD(TIMESTAMP ?beginning?,TIMESTAMP ?now?
)contains VALIDTIME(work?)&VALIDTIME(year?)
contains VALIDTIME(work?
)]]>> <<>Figure 2: A Derivation of Example 6a to a TargetLanguagestance, in Figure 2, multiply occurring constantsand the uninstantiated variable ?
?
must be dis-carded.
Additionally, ?&?
in the result of Figure2 must be mapped to ?AND?
and additional in-formation such as ?NONSEQUENCED VALID-TIME?
and ?DISTINCT?
must be added for thegeneration of complete target results as in 6c.4 Multilingual TranslationSource word disambiguation is an importantproblem in both of the approaches mentionedin the previous section because the problem oflexical selection arises equally.
We propose amethod to translate and disambiguate the sourcequeries to the appropriate target database infor-mation in a direct translation approach.4.1 Word Sense Disambiguation and TargetMappingOur method to disambiguate the source queriesis based on the semantic features of the lexi-cal items.
In lexical selection methods usingthe semantic features and their syntactic rela-tions (Palmer et al, 1999; Copestake and Sanfil-ippo, 1993), the lexicon is designed with seman-tic type-features constructed from the semanticclassifications of a language for the collocatedverb-object and modifier-modifiee relations.
Wealso consider these two syntactic relations, butwe do not adopt the general semantic classifi-cations that are hard to construct automatically.For this, we would need the additional mappinginformation to the domain databases.
So we de-signed a method with the database informationwhich can play the role of semantic classifica-tions in the restricted database domain.In query 1b, the meaning of ?wears?
is ?to puton the body?, but in 1c, its meaning is ?to puton the foot?.
The meaning of ?old?
in 1c is ?notnew?, but that in the phrase ?the oldest man?
is?not young?.
Table 3 shows word senses and theircandidate target words of ?wears?
and ?old?
(Leeet al, 1999).
We can disambiguate the sensesof ?wears?
with information in the database, likethe sample database shown in Table 1, annotatedin the lexical entries.
But ?old?
in 1c cannotbe disambiguated with the database informationalone because the values of the ?old?
can occurin the same table attributes as shown in the sam-ple database (Table 1).
For this problem, we canthink of two disambiguation methods. Use of additional semantic type-featuresbased on the semantic classifications Use of co-occurrence information betweenthe collocated wordsIn the first method, the source queries are disam-biguated during parsing, but this method requiresthe semantic classification information.
And thesemantic features from the classifications gener-ate many lexical entries, since all the senses fora given lexical item have to be accounted for.
Asa result, we can expect that the increase in thenumber of lexical entries may also cause the in-crease in the loss of both the space and process-ing time of the system.The second method needs co-occurrence in-formation, but no additional lexical entries.
Andthis method also requires an additional disam-biguation process after the parsing to extractinformation on the collocated words.
How-ever, since co-occurrence information betweenthe words can be automatically extracted from ageneral-purpose corpus, the construction of thisinformation is thought to be relatively straight-forward, compared to the construction of the se-mantic classifications.
(Park and Cho, 2000; Leeet al, 1999) proposed to use the co-occurrenceinformation during parsing and lexical selection.For example, in 1c, ?wears?
is disambiguatedinto ?sin-ta?
for the semantics of ?shoes?
andthe collocated words ?old?
and ?shoes?
is ex-tracted during the parsing.
Then the disambigua-tion module selects the preferred sense of ?old?through the computation of the similarity for theco-occurrence information.
As a result, ?old?
iscorrectly disambiguated into the target ?nalk-ta?.4.2 Representation of Lexical EntryIn a CCG framework, all the levels of informa-tion, such as syntax, semantics, and discourse,are integrated into the categorial lexicon as lexi-cal entries.
The following shows example lexicalentries of a CCG for English.
(7) (a) lex(coat,np:[ ,?$?
"?,body=?
?$???
]; ).
(b) lex(coat,np:[ ,?""?,clothes=??$???
]; ).
(c) lex(wears,(s:[A,B,C];wear@B;D;Ennp:[A, , ];D)/np:[ ,B,C];E).
(d) lex(old,np:[A,sin-ta,status=?"?"?&C];old~C;E/np:[A,B,C];E).The lexical entry consists of a lexical item andits CCG category.
The CCG category is a pairof the syntactic and semantic information thatare interwoven in the following way.
ElementaryCCG (syntactic) categories include np and s, andCCG categories are recursively defined as eitherX=Y or XnY , where X and Y are also CCG cat-egories, including elementary categories.
Eachelementary CCG (syntactic) category X is aug-mented with an appropriate semantic informa-tion Y and word disambiguation information Zso that the resulting form X : Y ;Z is a CCGcategory (Steedman, 1996).
In our proposal, thesemantic information is replaced with a suitablefragment of SQL, with slots corresponding toWho                           wears                          a   brown   coat ?np:[person,_,_];_ (s:[A,B,C];wear@B;AE;BE\np:[A,_,_];AE)/np:[_,B,C];BEnp:[_,ip-ta,color=kal-sayk&body=oy-twu];_s:[A,ip-ta,color=kal-sayk&body=oy-twu];wear@ip-ta;AE;_\np:[A,_,_];AEs:[person,ip-ta,color=kal-sayk&body=oy-twu];wear@ip-ta;_..wear:sin-tawear:ssu-tawear:ip-tawear:cha-tawear:tti-tawear:cis-ta..<>Figure 3: A Derivation of the Query 1c and aPortion of the Translation DictionarySELECT, FROM, and WHERE clauses in SQL,bracketed by ?[?
and ?]?.
For example, in en-try 7a, ?coat?
is assigned the syntactic category?np?
and the semantic information which encodesthe fact that the database attribute ?body?
has thevalue ??$???
(oy-twu, meaning ?coat?)
in the ta-ble for ?$?
"?
(ip-ta, meaning ?to put on body?).?$?"?
is described in FROM clause of SQL and?body= ?$???
in WHERE clause.
In entry 7b, itshows other ?coat?
instances in the database ta-ble ?""?
(sa-ta, meaning ?buy?).
In entries 7cand 7d, the verb ?wears?
and the adjective ?old?are taken to add information in form of X@Yand X~Y for the disambiguation of their senses.X~Y provides a template for co-occurrence in-formation.4.3 Translation ProcessFigure 3 shows a derivation of the query 1c anda relevant portion of the translation dictionary.This derivation does not show the binding withSQL syntax.
In the final step of the derivation,the syntactic information is combined by a back-ward application with the category sql:[SELECTA,FROM B,WHERE C]ns:[A,B,C]; .
And theexhibited portion of the translation dictionaryshows the list of pairs of a word and its targetword.
Using this information, after the deriva-tion in Figure 3, semantic checking is performedwith the tagged information, that is, ?wear@ip-ta?.
This tagging is compared with the transla-tion dictionary for the correct sense disambigua-tion.
Through this process, the results that havea matching pair in the translation dictionary areconfirmed as the desired result, and the others arediscarded.
Because the result in Figure 3 has theEnglish Lexiconwith POS Information Korean LexiconEnglish-KoreanTranslation DictionaryGeneral-PurposePOS Tagged CorpusDatabaseInformationEnglish LexiconWord disambiguationinformationDatabase mappinginformationSyntactic informationSyntactic information Database mappinginformationFigure 4: Resources for the Lexiconcorrect pair in Table 3, it is selected as the rightresult.
The resulting SQL statement is shown be-low:(8) SELECT personFROM ip-taWHERE color=kal-saik and body=oy-twuIn response to the SQL statement 8, the answer?Mary?
is produced from Table 1.4.4 Construction of the Lexicon fromAvailable ResourcesWe construct an English lexicon for the multi-lingual query from several linguistic resourcessuch as an English lexicon with only POS infor-mation, a Korean lexicon for the mapping infor-mation and an English-Korean translation dictio-nary.
In our system, the English-Korean transla-tion dictionary is needed in two processes.
Thefirst is the process of adding word sense infor-mation to the lexical items in English and thesecond is the process of checking for the sensesof the given source word.
The Korean lexiconis used for the mapping into the database andthe English lexicon with POS tag is used for ex-tracting syntactic categories and syntactic rela-tions between the words.
Figure 4 shows theneeded information resources for the English andKorean lexicons.
The Korean lexicon is con-structed by a tool in a semi-automatic manner(Lee and Park, 2001).
The lexicon constructiontool constructs the Korean lexicon using infor-mation from a general-purpose corpus and do-main specific database information.CCG ParserResultsGenerationQuery ResultsQuery Sentence(English/Korean)Database QueryResultsEngine-DBInteractionModuleWord TranslationChecking Co-occurrence InformationEnglish-Korean Dic.LexiconFigure 5: The Structure of the Query ProcessingEngine5 ImplementationFigure 5 shows the structure of the engine thatprocesses multilingual queries.
The database ison the home appliance domain in e-commerce.
Itcontains objects for appliance information suchas category, name, maker, price, size, otherfeatures and so forth.
We have populated thedatabase with information from Korean shoppingmall websites.
Two queries are shown below:(9) (a) Who makes a flat-screen TV set?
(b) SELECT maker FROM productWHERE name=?
+-?/?
"?"??
and category=?TV?
(10) (a) :L$?
"????
???#??
>K?"?
UW???
"UW $???
?HL, ?"?-?
???
,?
"'??
"cg?I want to buy a refrigerator of the smallest capacity, but whatis its price?
(b) SELECT price FROM product WHERE size IN(SELECT min(size) FROM product WHERE category=?>K?"?UW?
)The query processing engine is implementedon the UNIX using SICStus Prolog.
The wordtranslation checking module performs disam-biguation using the English-Korean dictionary(cf.
Figure 3) and co-occurrence information.The Korean lexicon contains about a millionnumber of lexical entries, but the English lexi-con is comparatively much smaller, and still un-der construction.The system can process diverse linguistic ex-pressions in English such as coordination, un-bounded dependencies, and gapping etc.
Thesystem can also process diverse expressions inKorean including subject ellipsis, noun phrases,numerical expressions, coordination, and subor-dination where the performance of the systemfor the queries in Korean is reported in (Lee andPark, 2001).6 ConclusionIn the paper, we proposed a method to disam-biguate the source lexical items of queries withdatabase information such as the objects, tablenames and attribute names.
Since informationabout the interpreted candidates and the collo-cated words is extracted during parsing, the im-plemented query interpretation system can ex-tract the results in a straightforward manner.Since full-fledged semantic classification in-formation is difficult to construct either automat-ically or manually in a reliable manner, we pro-posed to dispense with it and instead to utilizeinformation that can be extracted automaticallyfrom the available resources such as the databaseinformation, a simple translation dictionary andother linguistic resources.ReferencesI.
Androutsopoulos, G. D. Ritchie, and P. Thanisch.1995.
Natural Language Interfaces to Databases -An Introduction.
Natural Language Engineering,1(1):29?81.I.
Androutsopoulos, G. D. Ritchie, and P. Thanisch.1998.
Time, Tense and Aspect in Natural Lan-guage Database Interfaces.
Natural Language En-gineering, 4(3):229?276.A.
Copestake and A. Sanfilippo.
1993.
Multilin-gual lexical representation.
In Proceedings of theAAAI Spring Symposium: Building Lexicons forMachine Translation.A.
Klein, J. Matiasek, and H. Trost.
1998.
Thetreatment of noun phrase queries in a naturallanguage database access system.
In COLING-ACL?98 workshop on the computational treatmentof nominals, pages 39?45.H.
Lee and J. C. Park.
2001.
Translating NaturalLanguage Queries into Formal Language Querieswith Combinatory Categorial Grammar.
In Inter-national Conference on Computer Processing ofOriental Languages.
(to appear).H.
A. Lee, J. C. Park, and G. C. Kim.
1999.
Lexi-cal Selection with a Target Language MonolingualCorpus and an MRD.
In Proceedings of Interna-tional Conference on Theoretical and Methodolog-ical Issues in Machine Translation, pages 150?160.R.
Nelken and N. Francez.
1999.
A semanticsfor temporal questions.
In Proceedings of FormalGrammar, pages 131?142.R.
Nelken and N. Francez.
2000.
Querying TemporalDatabases Using Controlled Natural Language.
InCOLING, pages 1076?1080.M.
Palmer, D. Egedi, C. Han, F. Xia, and J. Rosen-zweig.
1999.
Constraining Lexical SelectionAcross Languages Using Tree Adjoining Gram-mars.
In TAG+3 Workshop Proceedings, CSLIvolume.J.
C. Park and H. J. Cho.
2000.
Informed Parsing forCoordination with Combinatory Categorial Gram-mar.
In COLING, pages 593?599.M.
Steedman.
1996.
Surface Structure and Inter-pretation.
Number 30 in Linguistic Inquiry Mono-graphs.
MIT Press.M.
Steedman.
2000.
The Syntactic Process.
MITPress.C.
A. Thompson and R. J. Mooney.
1999.
AutomaticConstruction of Semantic Lexicons for LearningNatural Language Interfaces.
In AAAI/IAAI, pages487?493.D.
Toman.
1996.
Point vs. Interval-based Query Lan-guages for Temporal Databases.
In Proceedingsof the ACM SIGACT-SIGMOD-SIGART PODS,pages 58?67.
