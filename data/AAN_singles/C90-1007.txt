THALES: a Software Package for Plane Geometry Constructions with aNatural Language InterfaceK.
FABRICZJATE UniversitySzeged, Egyetem u.
2., Hungary, H-6722/ /Z.
ALEXIN, T. GYIMOTHY, T. HORVATHResearch Group on the Theory of Automata t theHungarian Academy of Sciences,Szeged, Somogyi u.
7., Hungary, H-6720e-mail: sztaki!ella!h42gyiAbstractTHALES is a software package for planegeometry constructions, supplied with a naturallanguage interlace.
Using THALES requires noknowledge of a programming language.
Theinterface is capable of processing practically allkinds of instructions within the subset of planegeometry English.
The "static semantic" modulehas been generated on the basis of a high-levelattribute specification.
Transportability, modifia-bility and generality -- the key issues of naturallanguage interface design -- are investigated in theproject note.
The notion of specifiability is intro-duced to replace the three features mentionedabove.1.
Introduction*Natural language interfaces represent one ofthe most common applications of natural anguageprocessing.
In the eighties, not only a considerableincrease in natural language interface refinementhas been achieved, but also methods for design andevaluation have been worked out \[Mart 83, Schr881.
One might think that a natural language inter-face of the nineties would be properly described interms ol throe parameters, viz.,(i) transportability(ii) modifiability by the userOff) generalityOur experience with THALES shows that none ofthese features is attainable in the near future.Rather, natural anguage interfaces based on well-defined subsets of languages and supplementedwith possibly lull semantics appear to be real can-didates for applications in the following years.
Re-quirements for transportability and generality runcounter to the need to supply the interface with asfull semantics as possible.
Modifiability by theuser can be maintained at a price that is hardlyworth paying.If one lets the user tailor the interface to his/herneeds, that natural anguage interlace should pro-vide this possibility by relaxing syntax or seman-tics.
We do not consider this a real ahernative.Neither does modifiability in the form of substitu-tion of one expression by another on the basis oftheir semantic identity seem to be a realization ofwhat the term "modifiability by the user" suggests(Cf.
\[JAKE 88\]).However, there appear to be different parts ofnatural language interlace design that may bereused in other applications.
We shrill refer to thispossibility by the term "specifiability" -- a featurethat merits thorough consideration.2.
An Overv iew of THALESTHALES is a program package fbr plane ge-ometry constructions.
The constructions are carriedout as series of instructions lormulated in English.Through a menu system, it is possible to save con-structions and parts of constructions lot some laterapplication, the constructions may be inserted intoother applications.
The instructions can be storedand edited as normal ASCII files.
A number ofexamples covering the majority of tasks related toplane geometry are supplied to help the teacher orstudent in teaching or learning plane geometry.Manipulating objects during constructions i alsosupported without he risk of running into ambigu-ities in the course of reference resolution.3.
The natural language interface ofTHALESThe natural anguage interface of THALES isbriefly characterized asfollows.Linguistic processing is based on an attributegrammar description.
From this specification, thePROF-LP language processor \[Gyim 88\] generatesthe parser and the evaluator.
The lexicon consistsof a fixed number of items covering the sublan-guage of plane geometry.
The parser contains a44 llexical and a syntactic analyzer.
The former doesmorphological analysis as well in order to keep thesize of the vocabulary at a minimum.
The syntacticmodule represents a top-down, basically LL(1) al-gorithm augmented by attributes for initiating se-mantic processing.
Semantic interpretation is basedon a recta-level object description that provides aclue to the implementation of relations in the lormof different steps in producing geometricalconstructions \[Ale 89\].Intersentential reference is resolved by build-ing a symbol table.
The range of syntactic and se-mantic coverage can be illustrated by the examplesbelow.Pick  a point .Label  the po in t  by  ~A.Draw a c i rc le  a round po int  -A.P ick  a po in t  ~B on the circle.Draw rad ius  ~A-B.P ick  a po in t  -C outs ide  the circle.Const ruc t  t r iang le  ~A~B~C.Inscr ibe  a c i rc le  ~q in the tr iangle.F ind  a po in t  ~P that is ins ide  thet r iang le  and outs ide  c i rc le  -q.F rom po in t  ~P, d raw a c i rc le  withrad ius  ~A~B.Label  the in tersect ions  of thec i rc les  by  ~D and -E.Connect  the po in ts  of in tersect ion .Create  the hexagon -A -B-C-P -D~E.4.
Generat ing  natura l  language interfacesThe experience gained from designing andimplementing THALES has led to the followingconclusions.4.
I.
Evaluation of natural language interfacesA natural language interface cstablishes con-nection between the user and some other languageor set of user-defined procedures.
In constructing anatural language interface, the primary aim is toprovide a means for the translation of natural lan-guage sentences into sentences of that other lan-guage or into procedure calls.
The latter define thesemantics of execution lor the input sentence(s).When the value of a natural language inter-face is being assessed, transportability, modifiabil-ity and generality seem to be false starting points.These features would make a natural anguage in-terface truly valuable, were it not tot the fact thatthey cannot be taken prima facie.
A transportablenatural language interface means some kind ofover-generalization.
For a natural languageinterface to be transportable, it is necessary that wehave a sublanguage with too wide a coverage tocarry specific infmrnation encoded in its seman-tics.
That is why transportability is achieved onlyin highly identical domains (characteristically, in-terfaces to databases).
A natural anguage interfacecan bc modified by the user according to his/herspecific purposes exceptionally in the lexicon.Hence, the semantics is prewired, the syntax isfixed, and what you gain is hardly more than arephtcement of one or two mnemonics with someother character strings that you might prefer.
Thenotion of generality of a natural anguage interfaceis too vague to deserve special attention.
It mightrefer to syntactic and/or semantic coverage, itmight imply the existence of a fairly large wordstock, but, we should think, it would hardly ever betakcn to mean "general" in the sense that it couldbe applied in different domains.4.2.
Specifiability of natural language interfacearchitectureA basic question in designing natural lan-guage interfaces of the THALES type is that ofassessing which parts can and which cannot begenerated.
An answer to this question would throwlight on the problem of transportability, modifia-bility and generality.
We argue that those parts of anatural anguage interlace which can be generatedfrom some high level specification appeal" toclosely satisfy the demand lor transportability,modifiability and generality.
It seems to be thecase that the lexical, syntactic and static semanticanalyzers are suitable for generation on the basis ofan attribute grammar description.It should be noted that the lexical analyzeralso contains the morphological module.
The syn-tactic parser processes a CF grammar.
Dynamicsemantics is also suitable lot analysis by anattribute grammar description, but there are toomany application-specific elements whose genera-tion does not seem to be a realistic goal for thetime being.Of crucial importance is the notion of static(compile time) semantics in the case of naturallanguage interfaces like TIJALES.
In a conven-tional programming language, we define its staticsemantics as the set of context-sensitive propertiesthat can bc evaluated, checked or calculated uringcompile time.
The most important properties el'this kind area) the dil\]erentiation between defining and appliedoccm'rences of variablesb) the assessment of the scope of definingoccur rencesc) the problem of identification: finding thedefining occurrences that match theapplied occurrences2 45d) the question of type compatibilityConventional compilers contain a symboltable that will serve as a basis for the investigationof the questions raised above.
Elements of thesymbol table are built from objects of the typesrecognized by the language, supplemented withauxiliary information.
During compilation thesymbol table undergoes continuous modification,problems related to static semantics are solved onthe basis of the actual state of the symbol table.If one compares tatic semantic analysis in thecase ot' natural anguage interfaces like THALES,it appears that basic types correspond to objectswith a hierarchic structure.
E.g.
a triangle is repre-sented as having vertices, bisectors, altitudes etc.Again, e.g.
altitudes have endpoints, a midpoint,length etc.
Endpoints, in turn, have coordinatesexpressed as numbers.
Such hierarchic structurecan be ascribed to other natural language interfacesas well.
A specification language \[Ale 8911 is usedfor type definition.
In the course of specification,other data can also be incorporated (adjectival,prepositional co-occurrence restrictions etc).
Onthe basis of this specification it is possible to gen-erate procedures for symbol table manipulation.The symbol table can then serve as a tool for de-ciding type compatibility.
For example, one can re-fcr to the midpoint of an altitude due to the factthat an altitude is of segment type, and segmentsdo have a midpoint.In the differentiation of defining and appliedoccurrences, determiners play a crucial role.
Whilein conventional programming languages identifi-cation is resolved by a relatively simple algorithm,this problem in THALES-like natural anguage in-terfaces is much more complicated.
Below we givea sample of the identification methodology used inTHALES.
This methodology can be extended onthe specificational level or, vice versa, the applica-tion of some of the methods can be prohibited.
Theabbreviations ID, OBJ, and ADJ stand lot identi-tier (a unique name of an object, denoted by '-' inTHALES ), object (the name of an object, possiblya part of another object), and adjective, resp.OBJ 1D - an object with a unique name to be lbundunambiguously, cf.Draw the radius of circle ~C.OBJ - search for the first occurrence of the objectwith the given type by tracking the symbol tablebackward, cf.Pick a point in the circle.ADJ OBJ - a search for the first occurrence of thattype of object specified by the adjective, cf.Draw a circle inside the acute triangle.4.3.
ConclusionsFrom the experience with THALES we canconclude that the notion of static semantics can besuccessfully applied to the group of natural an-guage interfaces represented by THALES.
Thestatic analyzer in THALES appears to satisfy therequirement for transportability, modifiability andgenerality, although in a modified and more realis-tic sense.
That is, we do not think that there is aone-to-one correspondence between a generatedstatic analyzer and the requirements.
Rather, thestatic analyzer can be specified in a high-level lan-guage, and that specification can meet the trans-portability, modifiability and generality require-ments.The authors gratefully acknowledge thefinancial support of Cogito Ltd., Philadelphia.References\[Ale 891\] Alcxin, Z., Ffibricz, K., Gyim6thy, T.,Horv~ith, T. CONSTRUCTOR: A Natural Lan-guage Interface Based on Attribute Grammar.In: T. Gyim6thy (ed.)
Proceedings of the FirstFinnish-Hungarian Workshop on ProgrammingLanguages and Software Tools, Szeged, 1989,pp.
135-145.\[Cliff 88\] Clifford, J.
Natural Language Queryingof Historical Databases.
Computational Lin-guistics 14 (4), 10-34.\[Gyim 88\] Gyim6thy, T., Horvfith, T., Kocsis, F.,Toczki, J.
Incremental Algorithms in PROF-LP.Lecture Notes in Computer Science, 371. pp.93-103.\[JAKE 8811 JAKE.
The Application-IndependentNatural Language User Interface.
EnglishKnowledge Systems, Inc., Scotts Valley, Cali-lomia, 1988.\[Mart 83\] Martin, P., Appelt, P., Pereira, F. Trans-portability and Generality in a Natural Lan-guage Interface System.
Proceedings of HCAI-83, 1, pp.
573-581.\[Schr 88\] M. Schrtider.
Evaluating User Utterancesin Natural Language Interfaces to Databases.Computers and Artificial Intelligence, 7 (4), pp.317-337.46 3
