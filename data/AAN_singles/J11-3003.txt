A Strategy for Information Presentationin Spoken Dialog SystemsVera Demberg?Saarland UniversityAndi Winterboer?
?University of AmsterdamJohanna D. Moore?University of EdinburghIn spoken dialog systems, information must be presented sequentially, making it difficult toquickly browse through a large number of options.
Recent studies have shown that user satisfac-tion is negatively correlated with dialog duration, suggesting that systems should be designedto maximize the efficiency of the interactions.
Analysis of the logs of 2,000 dialogs betweenusers and nine different dialog systems reveals that a large percentage of the time is spent onthe information presentation phase, thus there is potentially a large pay-off to be gained fromoptimizing information presentation in spoken dialog systems.This article proposes a method that improves the efficiency of coping with large numbersof diverse options by selecting options and then structuring them based on a model of theuser?s preferences.
This enables the dialog system to automatically determine trade-offs betweenalternative options that are relevant to the user and present these trade-offs explicitly.
Multipleattractive options are thereby structured such that the user can gradually refine her request tofind the optimal trade-off.To evaluate and challenge our approach, we conducted a series of experiments that testthe effectiveness of the proposed strategy.
Experimental results show that basing the contentstructuring and content selection process on a user model increases the efficiency and effective-ness of the user?s interaction.
Users complete their tasks more successfully and more quickly.Furthermore, user surveys revealed that participants found that the user-model based systempresents complex trade-offs understandably and increases overall user satisfaction.
The experi-ments also indicate that presenting users with a brief overview of options that do not fit theirrequirements significantly improves the user?s overview of available options, also making themfeel more confident in having been presented with all relevant options.?
Cluster of Excellence, Saarland University, Campus C7 4, 66041 Saarbru?cken, Germany.E-mail: vera@coli.uni-saarland.de.??
Intelligent Systems Lab Amsterdam, University of Amsterdam, Science Park 904, 1098 XH Amsterdam,The Netherlands.
E-mail: A.Winterboer@uva.nl.?
School of Informatics, University of Edinburgh, 10 Crichton Street, Edinburgh EH8 9AB, UK.E-mail: j.moore@ed.ac.uk.Submission received: 18 June 2009; revised submission received: 4 October 2010; accepted forpublication: 1 December 2010.?
2011 Association for Computational LinguisticsComputational Linguistics Volume 37, Number 31.
IntroductionA common goal of many spoken dialog systems (SDSs) is to offer efficient and naturalaccess to applications and services, such as e-mail, calendars, travel booking, navigationsystems, and product recommendation, in situations where the user?s hands and/oreyes are busy with another task, for example driving a car (Pon-Barry, Weng, and Varges2006) or operating equipment (Hieronymus and Dowding 2007).
The naturalness andusability of a spoken dialog interface depends not only on its ability to recognize andinterpret user utterances correctly, but also on its ability to present information in waysthat users can understand and that help them to achieve their goals.One class of SDSs that has received considerable attention from both academicresearch and industry are information-seeking SDSs, which are designed to enable usersto browse the space of available options (e.g., flights, hotels, movies) and choose a suit-able option from a potentially large set of choices.
Dialogs with such systems typicallyconsist of two main types of activity: information gathering, in which the system triesto establish users?
constraints and preferences, and information presentation, in whichthe system typically enumerates the set of options that match the user?s constraints.An example is given in Figure 1.
In some systems, these activities take place in strictlysequential phases: All of the information necessary to form a database query is gathered,and then the returned options are presented, one at a time or in small groups.
In othersystems, the activities are interleaved, with users refining their constraints after beingpresented with some options, or a summary of the option space.
In either case, whenthe number of options to be presented is large, this process can be laborious, leadingto reduced user satisfaction.
Moreover, as Walker et al (2004) observe, having to accessthe set of available options sequentially makes it difficult for the user to remember thevarious aspects of multiple options and to compare them mentally.Although much research has been conducted on the information gathering phaseof spoken dialog systems, relatively little attention has been devoted to informationpresentation.
An analysis of the Communicator corpus consisting of approximately2,000 dialogs with nine different spoken dialog systems found that information presen-tation is the main contributor to dialog duration1 (Moore 2006); see Table 1.
Moreover,the DARPA Communicator evaluation showed that task duration is negatively corre-lated with user satisfaction (r = ?0.31, p < 0.001, see Walker, Passonneau, and Boland[2001]).
Thus, there is reason to believe that improvements in information presentationwill lead to improvements in spoken dialog systems.Recently, two approaches to information presentation that present an alternativeto sequential information presentation have been proposed.
In the user-model (UM)based approach, the system identifies a small number of options that best match theuser?s preferences (Moore et al 2004; Walker et al 2004).
In the summarize and refine(SR) approach, the system structures the large number of options into a small numberof clusters that share attributes.
The system then summarizes the clusters based on theirattributes, thus prompting the user to provide additional constraints (Polifroni, Chung,and Seneff 2003; Chung 2004).In this article, we propose an approach to information presentation which short-ens dialog duration by combining the benefits of these two approaches (UMSR).
Our1 This analysis was performed on the Communicator corpus which has been annotated extensively,including annotations for speech act types and timing information (Walker and Passonneau 2001;Georgila et al 2009).490Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 1Typical information presentation phase of a communicator dialog.Table 1System contributions: Requesting and presenting information in Communicator systems.System Requesting info Presenting info OtherUtterances 43% 25% 32%Time 31% 54% 15%Words 28% 50% 22%approach integrates user modeling with automated clustering such that information isstructured in a way that enables users to more effectively and efficiently browse theoption space.
The system provides detail only about those options that are relevant tothe user, where relevance is determined by the user model.
If there are multiple relevantoptions, a cluster-based tree structure orders these options to allow for stepwise refine-ment.
The effectiveness of the tree structure, which directs the dialog flow, is optimizedby taking the user?s preferences into account.
In order to give the user a good overviewof the option space, trade-offs between alternative options are presented explicitly.
Inaddition, despite selecting only the relevant options, the algorithm also briefly accountsfor the remaining (irrelevant) options.
We hypothesize that this approach will enableusers to make more informed choices.
Our approach to the problem has been imple-mented within FLIGHTS, a spoken dialog system for flight booking (Moore et al 2004;White, Clark, and Moore 2010).
Our results show that in addition to improving dialogefficiency (in terms of number of dialog turns) and effectiveness (in terms of successfultask completion), our approach increases user satisfaction.We hypothesize that user modeling in combination with content selection and struc-turing as implemented in our UMSR strategy can improve the information presentationphase of spoken dialog systems in the following ways:1.
UMSR leads to increased efficiency of information presentation.2.
UMSR makes information presentation more effective.3.
UMSR enables the system to provide users with a better overview of theoption space and leads to higher confidence in having heard about allrelevant options.491Computational Linguistics Volume 37, Number 34.
Tailoring sentence realization to the user?s preferences, through the useof discourse cues and comparisons (e.g., ?the cheapest?
), improvesunderstandability.5.
UMSR ultimately leads to greater user satisfaction.In the remainder of this article, we first describe prior approaches to the problemof information presentation in spoken dialog systems and discuss their advantages andlimitations in more detail (Section 2).
In Section 3, we describe our approach and its im-plementation within a spoken dialog system for flight information.
Sections 4 through 7present the user studies we have run to evaluate our approach.
In Section 4, we describetwo initial studies in which participants rated dialogs they read or overheard.
Section 5describes a modification to the UMSR system to control the length of system-generateddialog turns.
Section 6 reports on an experiment in which participants interacted withthe revised system.
Results of all experiments are discussed in Section 7.
Finally, wecomment on the relation of this system to other systems from the literature in section 8,and discuss implications of our findings and future directions in Section 9.2.
Background on User Modeling and Content Structuring forInformation Presentation2.1 Tailoring to a User Model (UM)Previous work in natural language generation showed how a multi-attribute decision-theoretic model of user preferences can be used in a recommender system to determinewhich options to mention to a particular user, as well as the attributes that the userwill find most relevant for choosing among the available options (Carenini and Moore2001).
In the MATCH system, Walker et al (2004) applied this approach to informationpresentation in SDSs, and extended it to generate summaries and comparisons amongoptions.
Evaluation of the MATCH system showed that tailoring recommendations andcomparisons to the user increases argument effectiveness and improves user satisfaction(Walker et al 2004).MATCH included content planning algorithms to determine what options andattributes to mention, but used a simple template-based approach to realization.
Forthe design of the FLIGHTS2 system, Moore et al (2004) focused on organizing andexpressing the descriptions of the selected options and attributes in ways that wereintended to make the descriptions both easy to understand and memorable.
In addition,to increase coherence and naturalness of the descriptions, the system reasons aboutinformation structure (Steedman 2000) to control intonation, uses referring expressionsthat highlight attributes relevant to the user (e.g., a direct flight for a user who wantsto minimize connections, vs. the cheapest flight for a user concerned about price), andsignals discourse relations (e.g., contrast) with appropriate intonational and discoursecues.
For example, Figure 2 shows a description of options tailored to a user who prefersflying business class, on direct flights, and on KLM, in that order.The FLIGHTS system presents a small number of options that best match the user?sconstraints, and points out ways in which those options satisfy user preferences.
Select-ing a small number of options and presenting only these is an appropriate strategy foran SDS when the number of options to be presented is small, either because the number2 FLIGHTS expands as Fancy Linguistically Informed Generation of Highly Tailored Speech.492Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 2Tailored description by FLIGHTS.of options is limited or because users can supply sufficient constraints to winnow downa large set before querying the database of options.However, there are several limitations of this UM-based approach.
First, selectinga small number of options from those that best match the user model does not scaleup to situations where the number of relevant options is large.
When there are hun-dreds of options to consider (e.g., when choosing among consumer products, hotels, orrestaurants) there may be many options that fit the user?s specification and interest.In addition, the user model may not contain enough information for new users, orusers may not be able to provide constraints until they hear more information aboutthe available options.
This brings up a second problem with the UM-based approach,namely, that it does not provide the user with an overview of the option space, becauseoptions scoring below a specified threshold or below a certain rank are not mentioned.This is related to the third problem, which is the actual or perceived risk that users mightmiss out on options they would have chosen if they had heard about them.
The last twoproblems may reduce user confidence in the system, if users have the perception thatthe system is not telling them about all of the available options, and a lack of confidencemay ultimately lead to a decrease in user satisfaction.Finally, the evaluation of the FLIGHTS system focused on the effectiveness of usinginformation structure to generate more natural sounding utterances by controlling in-tonation, but did not include an explicit comparison to other information presentationstrategies.
The work presented here extends the FLIGHTS approach to overcome theweaknesses pointed out herein, and presents a series of experiments comparing thisapproach to an approach that does not employ user modeling techniques.2.2 Stepwise Refinement through Clustering and Summarization (SR)Polifroni, Chung, and Seneff (2003) developed an approach to information presentationthat structures large data sets for SR.
It supports the user in narrowing in on a suitableoption by grouping the options that match the user?s constraints into clusters of optionswith similar features.
The system then summarizes the clusters based on the attributevalues they share, thus suggesting further refinement constraints to the user (Figure 3).This content structuring approach presents users with summaries at run time basedon an algorithm that computes the most useful set of attributes, as dictated by theset of options that satisfy the current user query.
For large data sets, attributes thatpartition the data into the minimal number of clusters should be chosen, so that aconcise summary can be presented to the user to refine.33 In the original implementation as reported in Polifroni, Chung, and Seneff (2003), however, the clusterattributes were specified in advance based on domain knowledge, not determined at run time basedsolely on the set of options returned.
Our discussion and evaluation of the SR approach is therefore basedon the ?refined?
refiner strategy from Polifroni and Walker (2008), where options are clustered based onattributes determined at run time.493Computational Linguistics Volume 37, Number 3Figure 3Dialog between simulator (M) and the Polifroni et al (2003) system (S).Although the SR approach provides a solution to the problem of presenting infor-mation when there are large numbers of options in a way that is suitable for an SDS, ithas several limitations.
First, there may be long refinement paths in the dialog structure,that is, many dialog turns may be necessary to narrow in on a suitably small set ofoptions.
Because the system does not know about the user?s preferences, the optionclusters may contain irrelevant information which must be filtered out successivelywith each refinement step.
In addition, the difficulty of summarizing options typicallyincreases with their number and diversity, to the point where the summary becomesuninformative (e.g., I found flights on 9 airlines.
).Second, exploration of trade-offs is difficult with the SR approach in situationswhere there is no optimal option.
If at least one option satisfies all of the user?s require-ments, this option can be found efficiently with the SR strategy.
However, the systemdoes not point out trade-offs among alternatives in cases where no optimal option exists.For example, in the flight booking domain, suppose the user wants a flight that is cheapand direct, but all the flights are either expensive and direct or cheap and indirect.
Inthe SR approach, the user will have to ask for cheap flights and direct flights separatelybecause one of these constraints must be relaxed in each case, and thus the user has toexplore these refinement paths separately.A third drawback of the SR approach is that the attribute(s) chosen for summa-rization may not be relevant to the user.
The procedure for choosing the attributes forclustering the options is designed to select attributes that generalize well over the data(i.e., produce large clusters of options), and thus lead to efficient summarization.
Henceattributes that partition the data set into a small number of clusters are preferred.
Ifthe attribute that is best for summarization is not of interest to a particular user, dialogduration is increased unnecessarily.
This in turn may lead to reduced user satisfaction,as the results of our evaluation suggest (see Section 4.1.3).3.
Our Approach: User Model Based Summarize and Refine (UMSR)Our approach, the UMSR approach first described in Demberg and Moore (2006), isintended to capture the complementary strengths of the two previous approaches.
Itexploits information from a user model to reduce dialog duration by selecting onlyoptions that are relevant to the user.
In addition, we introduce a content structuringalgorithm that supports stepwise refinement, as in Polifroni, Chung, and Seneff (2003),494Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsbut in which the structuring reflects the user?s preferences.
Thus our approach main-tains the benefits of user tailoring, while also being capable of dealing with a largenumber of options.We hypothesize that our approach will increase efficiency and effectiveness of thedialog and improve understandability for the user, as well as provide a better overviewof the option space, ultimately leading to improved user satisfaction.
We discuss thesegoals in more detail in the following paragraphs.Increasing Efficiency.
The integration of a user model with clustering and structuringalleviates the three problems we identified for the SR approach.
When a user modelis available, it enables the system to determine which options and corresponding at-tributes are likely to be of interest to the user.
The system can then select compellingoptions, and decide not to mention options which are likely to be irrelevant to the user,leading to shorter refinement paths, more relevant summaries, and increased efficiency.Increasing Effectiveness.
The user model also allows the system to determine trade-offsamong options.
For example, suppose the user wishes to book a flight, and the usermodel indicates that this user prefers to fly on KLM.
If the database does not containany KLM flights that also match the user?s other preferences (such as preferring directflights to connecting ones), the system can recognize this conflict and present an explicittrade-off, as in I found a KLM flight but it requires a connection in Amsterdam.
However, thereis a direct flight on BMI.
The user model also allows the identification of the attribute thatis most relevant at each stage in the refinement process, which is used to decide whetherto present information about arrival time or price, for example.Our hypothesis is that the explicit presentation of trade-offs enables the user tomake a more informed choice and decreases the risk of the user missing out on relevantoptions.
It thus improves the effectiveness of the spoken dialog system by helping usersto select the most suitable option.Improving Understandability.
Our system strives to improve understandability of thepresentation by tailoring the presentation to the user?s interests.
In the flight bookingdomain, this corresponds to clustering the available flights into ones on airlines that theuser prefers versus flights on airlines that the user disprefers, or to talking about flightsthat arrive by the requested time as opposed to ones that arrive later than specified by theuser.Creating Confidence and Providing an Overview of the Available Options.
In order to make theuser feel more confident in the dialog system?s option selection process, we also brieflysummarize options that the user model determines to be irrelevant (see Section 3.5).By providing users with an overview of the whole option space, we reduce the risk ofleaving out options the user may wish to choose in a specific situation (thus overridingher standard user model).
The level of detail that the system chooses to present optionswhich are likely to be irrelevant to the user is a trade-off between efficiency and qualityof overview.
If a situational user model with information about the degree of urgencyis available, such overview summaries could be left out when the user is in a hurry(Komatani et al 2003).Increasing User Satisfaction.
We hypothesize that a system that implements the featuresdiscussed here will lead to greater overall user satisfaction.495Computational Linguistics Volume 37, Number 33.1 ImplementationOur approach to information presentation was implemented within FLIGHTS, a spokendialog system for flight booking (Moore et al 2004).
The options in the flight book-ing domain are flight connections with the attributes arrival-time, departure-time,number-of-legs, travel-time, price, airline, fare-class, and layover-airport.
Auser model contains a partial ordering of these attributes corresponding to the user?sranking, as shown in Table 2.
Furthermore, the user model stores preferences (e.g., fora certain airline or flying business class).
In a real-world scenario, the user model canbe acquired by requiring the user to register with the system at first use (Moore et al2004), by building up a user model over time (Thompson, Goeker, and Langley 2004), orby classifying users into preference groups based on other information available aboutthem, and using the group model (Rich 1979), as is frequently done in collaborativefiltering.
Once a user model exists, the user only needs to specify the current situationalinformation, such as the destination, desired arrival time, and date of travel.3.2 System ArchitectureA sketch of our system?s pipeline architecture focusing on the information presentationphase is given in Figure 4.
In the version of our system that was used in evaluation,speech recognition and natural language understanding were performed by a wizard(see Section 6.1) who also chose from a set of canned queries during the initial infor-mation gathering phase.
The first step in natural language generation (NLG) is contentselection and structuring.
The NLG subsystem takes as input an abstract communicativegoal from the dialog manager.
In the information presentation phase of the dialog, thisgoal is to describe the available flights that best match the user?s constraints and prefer-ences.
This step is responsible for deciding what information should be communicatedin the system?s response, and structuring this information based on the user?s query, theuser model, and the set of options returned from the database.
The core of this step isthe algorithm for constructing and pruning the option tree, which structures all of theoptions that satisfy the user?s query into the tree and selects the entities that should bementioned.The text planning step takes the pruned option tree as an input and transformsit into natural language.
First, it determines how much information can be presentedin one dialog turn, and how to structure the information in that turn.
For example, insystems that aim to influence the user?s choice, such as product recommendation sys-tems, the ordering can be arranged to increase the effectiveness of the recommendation(Carenini and Moore 2001).
There exists a full generation pipeline for this system, asdescribed in Moore et al (2004).
However, for the experiments reported here, templateswere used instead of the full generation pipeline, for reasons of robustness.Table 2Attribute ranking for business user.Rank Attributes1 fare class (preferred value: business)2 arrival time, # of legs, departure time, travel time6 airline (preferred value: KLM)7 price, layover airport496Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 4System architecture with emphasis on information presentation phase.The system uses the Open Agent Architecture (OAA) framework (Martin, Cheyer,and Moran 1999) as a communication hub.
All modules are implemented as agents,whose communication is managed by the DIPPER dialog manager agent (Bos et al2003), which invokes the different agents and stores the intermediate results from eachcomponent.The approach proposed in this article concerns the content structuring and selectionstep of the system, and is a new design.
It consists of three major steps: clustering,building the option tree, and pruning.
The first step in our content structuring algorithmis to cluster the values of each attribute in order to group them such that labels likecheap, moderate, and expensive can be assigned to values of continuous categoriessuch as price.
This clustering means that options can also be summarized more easilylater.
Next, the system constructs the option tree.
Each branch of the tree describesa possible refinement path and will thus direct the dialog flow.
The construction ofthe option tree is driven by three factors: the user model, the options returned fromthe database, and the attribute?value clustering.
The resulting option tree determineshow different options relate to one another, and which ones are most attractive forthe user.
After the option tree structure has been built up, it is pruned based on theinformation from the user model, which enables the system to distinguish betweenoptions that are likely to be compelling to the user and those that are not.
At this point,the content selection and structuring process is complete, and the option presentationphase follows, which consists of determining turn length and deciding on realizationsfor the information that is to be conveyed.3.3 ClusteringWe used agglomerative group-average clustering to automatically group values foreach attribute; a similar clustering algorithm was used in Polifroni, Chung, and Seneff(2003).
The algorithm begins by assigning each unique attribute value to its own cluster,and successively merging those clusters whose means are most similar.
For example,Figure 5 shows the prices from six flights marked as dots on the price axis.
In the firststep, each flight is assigned to its own cluster (represented as a circle around the dots).497Computational Linguistics Volume 37, Number 3Figure 5Agglomerative group-average clustering and labeling of options.In the second step, the clusters of the two flights with the most similar prices (the onesclose to ?250, in our example) are merged.
This procedure continues until a stoppingcriterion is met.
In our implementation, we stop when we have reduced the numberof clusters to three.4 These clusters are then assigned predefined labels, for example,cheap, average-price, expensive for the price attribute.
This clustering is used togroup similar attribute values together and is only done once for each request (in the airtravel domain, a request corresponds to one origin?destination pair on a specific date)on the basis of all database entries that satisfy the hard criteria.
For further discussion ofissues relating to this procedure, see Section 9.
Categorical values are clustered using theuser?s valuation: For example, airlines are clustered into a group of preferred airlines,dispreferred airlines, and airlines the user does not-care about.Clustering allows the algorithm to assess the similarity of options, namely, insteadof talking about the ?51 flight and the ?48 flight, the system would refer to the cheapflights.
This leads to more efficient summaries and enables the system to avoid pre-senting large numbers of options that are very similar in all respects.
Furthermore, theclustering process enables the system to assign labels that are sensitive to the otheroptions in the database.
For example, a ?300 flight is assigned the label cheap if it isa flight from Edinburgh to Los Angeles (because most other flights in the database aremore costly) but expensive if it is from Edinburgh to Amsterdam (for which there aremany cheaper flights in the database).3.4 Building the Option TreeThe tree building algorithm arranges the available options into a tree structure (Fig-ure 6).
Every branching point in the tree corresponds to a choice?for example, betweeneconomy versus business class flights.
The nodes of the option tree correspond to setsof options that share a set of attribute values.
The arcs going out from a node are labeledwith the different attribute values.
For example, in Figure 6, the root of the tree containsall options, and its left child contains all flights offering economy class tickets.
The4 The choice of a maximum of three clusters as a stopping criterion is somewhat arbitrary.
A clusteringalgorithm that automatically chooses a ?natural?
number of clusters given the data distribution could beused.
Alternatively, domain knowledge could be employed to decide on an appropriate number of targetclusters (and this number could of course be different for each attribute).
However, choosing a largernumber of clusters leads to bigger option trees, and thus there is a trade-off between the number ofclusters and the complexity and verbosity of the summaries produced.498Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 6Option tree for business user.children of this node contain complementary subsets of these options (i.e., all directeconomy class flights vs. all indirect economy class flights).
Leaf-nodes correspondeither to a single flight or to a set of flights, where for each attribute of an option thevalues are either the same or fall within the same cluster (prices of all these flights aremoderate, they all require one connection, they are all economy class, etc.).
Each nodecan maximally have three children in our implementation, because the algorithm workson the clusters instead of the original values (e.g., it does not distinguish between similarprices, such as ?48 and ?52, if the clustering algorithm labeled both of them as cheap).To maximize the efficiency and effectiveness of the dialog, the dialog structure istailored to the user based on the user model.
Table 2 shows the valuations of ourprototypical ?business user.?
Fare class is most important to this user, so it is rankedhighest.
Arrival time, number of legs, departure time, and travel time are considerednext most important, and are therefore all assigned rank 2 (i.e., our algorithm does notrequire a total ordering of the user?s preferences).
The airline is next most important,and finally, price and layover airport are least important.The user?s ranking of attribute importance is crucial for dialog efficiency.
If anirrelevant criterion is used as the branching criterion high up in the tree, interestingtrade-offs risk being scattered across the different branches of the tree.
For example,it would be suboptimal to ask a business user to make a choice about cheap versusexpensive flights first, if she does not care about this aspect, as she would then have totry to identify interesting flights among both the cheap and the expensive flights.
Ouralgorithm chooses the attribute that has the highest weight according to the user modelas the branching criterion for the first level of the tree.
For the business user, this wouldbe fare class.
The next decision is about the attributes that are second most important,such as the number of legs required (refer to Table 2 and Figure 6), and so on.
The systemtherefore constructs the tree such that it presents the criteria which are most relevant forthe specific user first, and leaves less relevant criteria for later in the dialog (i.e., furtherdown in the tree).
The advantage of this ordering is that it minimizes the probabilitythat the user needs to backtrack.499Computational Linguistics Volume 37, Number 3A special case occurs when an attribute is homogeneous for all options in anoption set (for instance if none or all of the business class flights happen to be on theuser?s preferred airline).
In that case, a unary node is inserted regardless of the rankof its attribute (see, for example, the right subtree with the attribute airline, which isinserted far up in the tree despite its low rank, in Figure 6).
This special case allows formore efficient summarization, for example None of the business class flights are on KLM,instead of having to say this in subsequent dialog turns for each of the business classflights that the user explores.In cases where several attributes have the same rank in the user model, we followthe approach taken in Polifroni, Chung, and Seneff (2003).
The algorithm selects theattribute that partitions the data into the smallest number of sub-clusters.
Consideragain the tree in Figure 6: number-of-legs creates only two sub-clusters for the dataset (direct and indirect) and is therefore further up in the tree than arrival-time,which splits the set of economy class flights into three subsets (before 3 pm, 3 pm to5 pm, after 5 pm for a user whose preferred arrival time is by 5 pm).The tree-building algorithm constitutes one of the main differences between ourstructuring algorithm and Polifroni et al?s (2003) refinement process.
The SR systemchooses the attribute that partitions the data into the smallest set of unique groups forsummarization, whereas our UMSR algorithm takes the ranking of attributes in the usermodel into account.
In the extreme case of a user who does not care about anything (theuser model does not specify any valuations of any attributes over others, and indicatesthat the user does not care about price, whether it is a direct flight, etc.
), our algorithmwould end up only using the information theoretic criteria, just like the SR system.3.5 Pruning the Tree StructureAfter the tree-building step, the tree contains all the options in the database that satisfythe user?s query.
This tree can potentially be quite large and navigating through it wouldbe very laborious for the user.
At this point, the user model comes into play again:Because the system already knows which options are relevant to the user (and whichones are not), it can prune the option tree to retain only options that it classifies as beingrelevant to the user.To determine the relevance of options, we define the notion of dominance.
Domi-nant options are those for which there is no other option in the data set that is better onall attributes.
A dominated option is worse on at least one attribute and equal or worsein all other respects than some other option in the relevant partition of the database;it should therefore not be of interest to any rational user.
When two options are equalin all respects and dominate other options, both are kept in the option tree.
A similarnotion of dominance was employed by Linden, Hanks, and Lesh (1997).5 The notion ofdominance is also related to the decision-theoretic concept of Pareto optimality.Pruning dominated options is crucial to our structuring process.
The algorithm usesinformation from the user model to prune all dominated options.
Paths from the rootto a given option are thereby shortened considerably and thus dialogs with our system5 In their work, dominance is used to avoid presenting options that are dominated by an option that hasalready been mentioned in the interaction with the user.
During the user?system interaction sequences,a user makes a request and the system then presents an option.
If the user then specifies or modifieshis request, the system presents more options given the new specifications, but never ones that aredominated by a previously mentioned option (i.e., worse or equivalent in all respects).500Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSscan be expected to be on average shorter than dialogs with a system employing theSR strategy, which does not exploit information from a user model.The pruning algorithm operates directly on the option tree, and exploits the treestructure in order to efficiently determine dominance relations.
We first briefly outlinethe algorithm, before describing each step in detail.
The first step of the algorithm is toorder the tree such that the best options are leftmost.6 The algorithm then traverses thetree in depth-first order and generates constraints during this process.
These constraintsencode the properties that options to the right of the current position in the tree wouldneed to satisfy in order not to be classified as being dominated by any of the optionsconsidered so far.
A branch must fulfill the constraints that apply to it, otherwise it ispruned.
If an option (or a cluster of options) satisfies a constraint, the property thatsatisfied the constraint is marked as the options?
justification.
If some, but not all, of theconstraints can be satisfied by an option, the constraints are propagated to the optionsthat are further to the right in the ordered option tree.
Once all the dominated optionshave been pruned from the option tree, there is a homogeneity check to ensure thatattributes which have the same value among a set of options are annotated at a nodethat is a common ancestor of all of these options.Tree Ordering.
The first step of the pruning algorithm is to order the tree.
This step is veryimportant, because it imposes a total ordering on the available options and arrangesthem such that the best option of every node becomes that node?s leftmost child.
Forexample, the tree in Figure 6 is not ordered because the business user prefers businessflights to economy flights, and thus the two subtrees under the root node must beexchanged (see Figure 7).
The total ordering is enforced firstly by placing the attributesthat are most relevant to the user at the top of the tree during tree construction, andsecondly, by sorting the attribute values from best to worst within each node.Constraint Generation.
After ordering the tree, the globally best option is described bythe leftmost branch in the option tree.
In our example in Figure 7, this is flight LH1554,in node 7.
If the globally best option in node 7 was perfect (i.e., if it was exactly whatthe user was looking for), the option in node 7 would dominate all other options, andthe rest of the tree would be pruned.
However, if there is an aspect of the globallybest option which does not match the user?s ideal, the user will have to make somekind of trade-off.
This is what happens in our example, because the arrival time ofthe flight in node 7 was only classified as fair, not as good, whereas there exist someconnections with arrival times that were classified as good.
A flight with a good arrivaltime constitutes a possibly interesting alternative.
In order to find such an option andfilter out the others, the constraint arrival-time:good is generated.Pruning Options from the Tree.
When node 8 is reached by the depth-first traversingalgorithm, a constraint (arrival-time:good) has been generated by node 7.
Node 8does not satisfy this constraint; this means that it is dominated by node 7 and thereforeis pruned from the option tree (as indicated by shading in Figure 7).Constraint Propagation.
Once the status of a node?s children has been determined, anyunsatisfied constraints that were generated by the child nodes are propagated to the6 Alternatively, the tree construction algorithm could be designed to insert all options such that theresulting tree is already ordered.501Computational Linguistics Volume 37, Number 3Figure 7This figure shows the ordered version of the option tree from Figure 6.
The shaded subtrees aredominated because they do not fulfill constraints generated by nodes to the left in the tree, andare therefore pruned.parent.
In our example, the constraint generated by node 7 is propagated up to parentnode 6.
Because node 6 has no siblings, the constraint is again propagated up to itsparent, node 5.
The sibling of node 5, node 9, is then tested against the constraintarrival-time:good.
Because there is no information about arrival time available atnode 9, the constraint is passed down to its leftmost child (node 10).
If that child nodedoes not have information about arrival time, the constraint is passed down again.
Inour example, the constraint is passed down to node 11, and we find that this flightsatisfies the constraint.
We next repeat the constraint generation step.
Flight BA9898generates the constraint price:good because its own price is only classified as fair.At nodes 12 and 13, both constraints arrival-time:good and price:good have to besatisfied.
However, they are not satisfied and therefore these two nodes are pruned.The depth-first traversal continues through the tree trying to find options that satisfythe constraints.
When node 2 is traversed on the way up in the tree, it generates theconstraint airline:KLM.
This constraint, as well as any constraints that were generatedby the subtree below it and have not yet been satisfied (in our example, the complex502Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsconstraint price:good AND arrival-time:good) are propagated to the right branch ofthe tree, at node 3.Note that the constraints allow for efficient pruning: It is not necessary to look atthe exact instances or properties of nodes 12 and 13 or their children.
One only has toconsider the properties which are relevant to the constraints because the tree is ordered.This allows us to conclude that all options in a specific subtree are dominated by theoptions in branches to the right of that subtree.Justifications.
An important by-product of the pruning algorithm is the identification ofattributes that make an option cluster compelling with respect to alternative clusters.For example, the flights in node 11 were considered compelling because they had abetter arrival time than the flight in node 7.
We call such an attribute the justificationfor a cluster, as it justifies its existence?that is, it is the reason it is not pruned fromthe tree.
Node 5 in turn is kept in the tree because it is the leftmost child, whichmeans that its attribute values best match the user?s preferences.
When compared tothe flights in node 9, its compelling property is that it is direct (i.e., number-of-legs=1).The default justification for a node is the attribute value on which the branch is based(e.g., fare-class for node 2 in Figure 7).
This justification is used for nodes on theleftmost branch.
Justifications are used by the generation algorithm to present trade-offs between alternative options explicitly (see Section 3.6.2).The reasons why options have been pruned from the tree are also registered.
Thesereasons contain information about which constraints the options failed to satisfy; in ourexample, the flight in node 8 is deleted because of its bad arrival time.
These pruningreasons are later used to provide information for the summarization of poor options inorder to give the user a better overview of the option space (e.g., All other flights arrivetoo late or are more expensive).
To keep summaries about irrelevant options short, we backoff to a default statement or are undesirable in some other way if these options are veryheterogeneous.Homogeneity Check.
After deleting branches from the option tree, it may be the case thatseveral options have the same attribute value, but are located in different branches inthe tree.
For example, imagine there are three economy class flights, two direct ones(1 leg), and one which requires a connection (2 legs).
Among the two direct ones, onehas a good price, and the other one is more expensive.
The 2-leg flight also has a goodprice.
If the more expensive direct flight is pruned, both of the remaining options have agood price, and thus this property should be above the number-of-legs branching levelin the tree.
This is important for efficient information presentation and summarizationof options.3.6 Option PresentationThe user model also comes into play when determining the wording of the optionpresentation.
Because the system has a model of the user?s preferences, it can effectivelycompare and contrast alternatives by highlighting compelling aspects of an option(e.g., a direct flight, the KLM flight), by using intonation and comparatives (e.g., thecheapest flight, the only KLM flight) and by acknowledging drawbacks through the use ofdiscourse markers (e.g., but, however, although) when generating descriptions of options.For the options that were considered unattractive for the particular user, the system canprovide an overview to cover the option space (e.g., All other flights arrive later than 3 pm).503Computational Linguistics Volume 37, Number 3Figure 8Diagram showing how the pruned option tree is mapped onto language.
The tree on the righthand side corresponds to the example trees in Figures 6 and 7.
The complete system utterance isshown in Figure 10.Figure 8 shows how the nodes in the pruned option tree translate to the system?sutterances.
The different design decisions underlying sentence planning and realizationwill be explained in the following sections.3.6.1 Turn Length.
In any spoken dialog system, it is important not to present too muchinformation in a single turn in order to keep the memory load on the user manageable(Seneff 2002).
Thus, our system aims at presenting no more than two or maximally threeoptions at once.
However, the pruned option tree sometimes contains more than thiscritical number of options, and therefore needs to be broken down into smaller chunks.We thus divide the pruned option tree into several smaller dialog-turn-sized subtrees.Typically not all of these subtrees will be presented, but only the ones between the rootof the tree and the chosen subset of flights that the user wishes to hear more about.In addition to determining the number of options to present in a single turn, thesystem must decide how many and which of their attributes to mention.
Arguably,mentioning too many attributes of options will also lead to memory overload, whichmay ultimately reduce user satisfaction.
However, the system must provide enoughinformation to fully account for what constitutes the trade-off, that is, it must give thereasons why an option is potentially relevant.For instance, in our example, the system mentions that the direct business classflight arrives later than requested and contrasts this against another business class flightthat arrives earlier but requires a connection.
The pruning process provided the systemwith information about the relevant differences between alternative options (arrival-time and number-of-legs).504Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 9The option tree is cut into subtrees which determine turn length.Figure 10Example dialog with our WoZ System based on the tree shown in Figure 7 and mapping tonatural language sentences as shown in Figure 8.In order to segment the pruned tree into turn-sized subtrees, we chose a verysimple heuristic segmentation algorithm.
Dialogs generated with this heuristic wereevaluated in our early experiments,7 which we report in Sections 4.1 and 4.2.
Theheuristic cutoff point is visualized in Figure 9, and defined as being no deeper thantwo branching nodes8 and their children.This heuristic produces a limited set of options to be presented in a single turn.The target size is two to three options.
This strategy yields a maximum of nine options(three options per branching level to the power of two branching levels).
However, inpractice there are typically three or fewer options in any two branching levels left afterpruning.
We chose to include two layers in order to allow for informative trade-offs: Ifinformation from only one layer were available at a time, it would not be possible tocontrast the most relevant advantages and disadvantages of alternative options, whichis needed to make the trade-off(s) explicit.
For example, if only the first level of Figure 9were to be presented, the system could only talk about fare classes, and would not beable to point out that there is a disadvantage with the business class flights, which theeconomy class flights do not have.At the end of the turn, the user is expected to make a choice indicating which of theoptions she would like to hear more about (for illustration see Figure 10).7 Later experiments used a more sophisticated way of determining turn length, which we describe inSection 5.8 Branching nodes as opposed to unary nodes.
For example, in Figure 6, the unary node in the rightsubtree would not count as a separate level.505Computational Linguistics Volume 37, Number 3This definition of turn length was employed in the reading and overhearer ex-periments (see Sections 4.1 and 4.2).
However, it became clear in related experiments(Winterboer et al 2007) that this method of deciding on dialog turn length sometimesled to very long system turns, which were then difficult for the user to remember.
Wethus modified the algorithm in order to ease comprehension.
We will return to this pointlater, in Section 5.3.6.2 Referring to Sets of Options.
Each branch in the pruned tree corresponds to a set ofoptions.
These options should be referred to in an effective way.
We do this by takinginto account both the dialog structure (i.e., structure of the argumentation) and theuser?s interest: The description of a set of options is based on their justification.
Forexample, the justification of the flights in the left branch of the tree in Figure 8 is theirfare class.
Therefore, they are described as flights with availability in business class.
Onthe other hand, the justification for the indirect business class flights is that they havean arrival time that matches the user query better.
They are thus referred to by theirjustification to arrive earlier.If a node is justified by several attributes, only one of them is selected for reference.If one of these multiple justifications is a contextually salient attribute, this one ispreferred over the justifications that are not salient.
For example, if a node is justifiedboth by its arrival time and its price, it would be referred to by the price attribute in acontext that just mentioned the price of another flight as being expensive:[.
.
.
but it costs 1000 pounds.
]context A [cheaper]salient flight.
.
.If none of the attributes are particularly salient, the options in the cluster arereferred to by the highest ranked attribute, that is, arrival time in the example fromFigure 8.
In cases where all options in a set only share a common negative attribute, weacknowledge this situation using a concessive formulation: for example, If you?re willingto travel economy.
.
.
; see the last sentence in Figure 8.3.6.3 Presenting Additional Attributes to Explain Trade-Offs.
In order to present trade-offsbetween options, it is necessary to provide information about the properties of optionsthat constitute the trade-off(s).
Any of these additional properties that are not alreadymentioned as part of the referring expression are ordered to optimize coherence.
First,all positive attributes are enumerated and contrasted against all average or negativeattributes.
These negative attributes, which are presented last, are then salient and willbe used in the description of an alternative option.3.6.4 Summarizing Properties of Options.
When describing a set of flights that are in thesame cluster (e.g., because they have good arrival times), the specific attribute values ofthe options in this cluster may vary (e.g., one flight might arrive at 3 pm and the otherat 3:30 pm).
In that case, it is necessary to generate a summarizing expression for theseattribute values.There are three main cases to be distinguished:1.
The continuous values for attributes such as price and arrival-timemust be summarized, as they may differ in their values even if they are inthe same cluster.
One way to summarize them is to use an expression thatreflects their value range (e.g., between x and y) or that contrasts them withsome previously mentioned value (e.g., earlier or the cheapest flights).506Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSs2.
For discrete-valued attributes with a small number of possible values (e.g.,number-of-legs and fare-class), summarization is not an issue, becausewhen homogeneous for a cluster the attribute values of the options areidentical.3.
The third group are attributes with categorical values (e.g., airline).If there are no more than three different values, we summarize usingquantifications such as none/all/both of them, as done in Polifroni, Chung,and Seneff (2003).
If the values are more diverse, the user model comesback into play to produce a tailored summary based on user preferences.For a user who prefers to fly on KLM and a cluster which contains no KLMflights, as in Figure 8, we generate None are on KLM, which takes intoaccount the user?s preference for KLM and is more concise thanmentioning all airline names.A sample dialog highlighting these realizations is shown in Figure 10.
The turns marked?S?
in this dialog were generated by our system, employing the business user model(see Figure 2).
Note, however, that interpreting the user?s request (i.e., speech recogni-tion and natural language interpretation) was done by a wizard in our experiments.3.7 Adaptability to Other DomainsTo adapt our system to assist users finding options in another domain (e.g., restaurants,digital cameras), the following steps would have to be taken:1.
Creation of a domain model: Identify entity attributes and the valuesthey can take.2.
Adaptation of the generation pipeline: Although sentence structuresfor presenting trade-offs between options would remain very similar,a domain-specific vocabulary would have to be created.3.
Acquisition of user models: Accomplished by explicit questioning of usersor automatic inference as in, for example, Linden, Hanks, and Lesh (1997).To apply the clustering algorithm in another domain, it is necessary to define a functionthat maps attribute values onto numeric values.
This can be done by either acquiringthe user?s preferences, or by choosing a distance function that describes the relationbetween values of an attribute.For the air travel domain, we used three non-relaxable constraints (i.e., constraintsfor which we do not use a distance function but only accept options that fully matchthese requirements): departure airport, arrival airport, and travel date.
If our databasehad contained distances between airports, our system would have been able to suggestflights that start from or arrive at a nearby airport (e.g., departing from Glasgow insteadof Edinburgh).
Similarly, in a restaurant recommendation system with informationabout streets, an external resource could be used to determine which streets are in thesame neighborhood, in order to cluster them according to distance or the time it takesto travel to them using a specific means of transport.To effectively summarize categorical data, it is often necessary to use an ontology,or some kind of ordering that is meaningful for the user.
Consider for example ourclustering of airlines: There is no information in our database that would make a KLMflight more similar to a Lufthansa flight than to a RyanAir flight based on the airline.507Computational Linguistics Volume 37, Number 3Therefore, we use information from the user model to arrange options into clusters thatare meaningful to the user by grouping together airlines that the user prefers to use,and those airlines that the user prefers not to use.
Finally, when clusters have beengenerated, a set of labels must be defined for the resulting clusters.4.
Evaluation I ?
Two Pilot ExperimentsWe conducted three experiments that compared our approach to information presen-tation, employing content structuring and a user model (UMSR), to a system that usesonly content structuring (SR).
The experiments were designed to test our hypothesesthat the UMSR approach increases user satisfaction, as well as dialog efficiency andeffectiveness when compared to the SR approach.
In this section, we discuss the first twoexperiments, during which our participants read or overheard dialogs, as opposed toour second evaluation phase during which they interacted with the system in a Wizard-of-Oz set-up.
Although the user?s turns were scripted, the SR and UMSR system turnswere generated by implemented information presentation components in these twoexperiments.4.1 Reading Task ExperimentIn the first experiment, participants were asked to read a number of dialogs, some ofwhich were designed according to the description of the SR algorithm and some ofwhich were generated using our UMSR algorithm.
Participants were thus in the positionof external observers, and could not interact with the system.4.1.1 Experimental Design.
The experiment was performed with 38 participants, mostlystudents of the University of Edinburgh, who were either native speakers of English orhad a near-native proficiency level in English.
They were naive with respect to dialogsystems and the purpose of the experiment.
The experiment was conducted in the labunder controlled conditions.
Each subject was presented with six dialog pairs.
The firstdialog pair was used for training, and was thus not included in the analysis.
Each dialogpair consisted of one dialog with the UMSR system and one dialog designed followingthe SR approach (see Section 2.2).
The order of the dialogs in a pair was randomized toprevent the risk of favoring a system due to a constant ordering (in particular, becausethe content of the database is already known when reading the second dialog, thisdialog would be easier to understand).The user models (a student, a frequent flyer, and a business traveler) were designedto be highly prototypical (see Figure 11) to make it easier for the participants to memo-rize the characteristics of the users.Before each dialog, the hypothetical users who appeared in the dialogs were de-scribed briefly in order to communicate their preferences to the participants and putthem in a position to assess whether the hypothetical users were able to find the flightthat was optimal with respect to their specifications and preferences.The dialogs with the SR system were designed manually based on the descriptionin Polifroni, Chung, and Seneff (2003).
All dialogs were provided as transcripts.4.1.2 Evaluation Criteria.
The order of the dialogs in a pair was randomized.
After read-ing each dialog transcript, participants were asked to provide feedback about systemresponses on four Likert-type scales (see Figure 12).
After reading each pair of dialogs,the participants were also asked the forced choice question: ?Which of the two systemswould you recommend to a friend??
to assess user satisfaction.508Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 11Descriptive versions of example user models used in our experiments.Figure 12The set of questions that users were asked after each dialog in order to evaluate the system.Participants provided their answers using Likert-type scales.
X was instantiated by the name ofour hypothetical example users.4.1.3 Results.
User Satisfaction.
A significant preference for the UMSR system was ob-served.
From a total of 190 forced choices in the experiment (38 participants ?
5 dialogpairs), UMSR was preferred 120 times (?
63%), whereas SR was preferred only 70times (?
37%).
This difference is highly significant (p < 0.001) according to a two-tailedbinomial test.
Thus, the null-hypothesis that the systems are preferred equally often canbe rejected with high confidence.Overall preference for a system is likely to be the product of many different factors.The defining differences between the two systems are tailoring to the user first bypresenting only options that are of some relevance to the user, second by explicitlycomparing options to one another by pointing out trade-offs, and third by brieflysummarizing the full option space.
The goal of the experiment is to elicit the individualcontribution of these factors to user satisfaction by asking the questions in Figure 12.Figure 13 shows the average Likert scores for the UMSR and SR systems provided bythe users, and will be discussed in the following paragraphs.Understandability.
The UMSR and SR dialogs received almost identical scores for un-derstandability (Question 1 in Figure 12).
There is no statistically significant differencebetween the scores of the two systems (t(189) = ?0.049, p = 0.97, using a two-tailed509Computational Linguistics Volume 37, Number 3Figure 13Results for Likert-type scale questions (see Figure 12) from the reading experiment.paired t-test).
On the one hand, understandability is likely to be enhanced by UMSRbecause it provides explicit trade-offs, but on the other hand UMSR produces longerand more complex dialog turns which may hinder understandability.
We thereforecontrol for dialog turn length between the two conditions in our later experiments; seeSection 5.Overview.
The evaluation confirmed our hypothesis that the UMSR system provides abetter overview of the option space than the SR system.
The difference in ratings, morethan one Likert scale point, was statistically highly significant (t(189) = 7.47, p < 0.0001,using a paired t-test); see Figure 13.
The better overview achieved by the UMSR systemis attributable to the explicit trade-offs, comparative qualifications of options (e.g., thecheapest flight), and summaries about dominated options (e.g., all other flights arrive laterthan you specified).Relevance.
The third question assessed the participant?s confidence that all relevantoptions were mentioned by the system.
The UMSR system was again rated significantlyhigher on this question in comparison to the SR system (t(189) = 2.88, p < 0.01), accord-ing to a two-tailed paired t-test.
Presenting only options that are deemed to be relevantby the system as well as providing summaries about the whole option space are likelyto have led to the observed higher confidence ratings.Efficiency.
Question 4 assessed the efficiency with which the hypothetical user was ableto access the flight that best matched her interests.
Again, the UMSR system was ratedsignificantly higher (t(189) = 3.77, p < 0.001 in two-tailed paired t-test) than the SRsystem.
Surprisingly, subjects reported that they felt they could access options morequickly with a system employing the UMSR strategy even though the dialog turns werelonger on average.4.2 Overhearer ExperimentA potential criticism of the reading experiment is that reading dialogs is an artificiallysimplified task because participants can read at their own pace and go back in the text to510Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 14Results for Likert-type scale questions, overhearer experiment.read difficult parts again.
Furthermore, there is no extra difficulty caused by imperfectspeech synthesis.
The goal of this second experiment was therefore to quantify anyfacilitating effect introduced through the reading modality, and to compare and validateresults.4.2.1 Experimental Design.
For our second lab experiment, we recruited 40 participants,who were mainly Edinburgh university students, native or near-native speakers ofEnglish, and were studying for a range of different degrees.
They had not taken part inthe previous experiment and were naive with respect to the task.
The participants werepresented with exactly the same dialog pairs as in the first experiment, and were askedthe identical set of questions (see Section 4.1.2).
The only difference was that this time,participants overheard the dialogs instead of reading them: We used speech recordingsfrom three different speakers to impersonate our three users?the student, the frequentflyer, and the business traveler.
System turns were produced by a text-to-speech systemprovided by CereProc Ltd.,9 using a voice with a Scottish accent (?Heather?
).4.2.2 Results.
User Satisfaction.
Results for overall user satisfaction were consistent withthe results from the reading experiment: Participants chose the UMSR system moreoften than the SR system when asked which system they would recommend to a friend.However, the difference did not reach significance level in the overhearer condition(UMSR was preferred 109 times out of 200 times).
The more detailed analysis based onthe Likert-type scale questions (Figure 14) shows that while ratings tended to be higherin general, the UMSR system benefited less from the oral presentation mode than theSR system.Understandability.
We specifically asked participants not to assess the systems on thespeech synthesis quality but rather on the structure and content of the presented mate-rial.
The SR system was rated slightly higher on the understandability of the dialogs incomparison with UMSR.
The observed slight preference for the SR system did not reachsignificance level (t(199) = ?1.17, p ?
0.24 in a two-tailed paired t-test), however.9 http://www.cereproc.com/.511Computational Linguistics Volume 37, Number 3Overview and Relevance.
The second experiment confirmed the findings from the readingtask experiment: Users thought that the UMSR system gave them a better overview ofthe option space (Question 2).
In addition, they felt more confident that they had notmissed out on any relevant options (Question 3).
The differences in ratings were againhighly statistically significant in both cases (t(199) = 2.61, p < 0.01; t(199) = 3.11, p <0.01), just as in the reading experiment.Efficiency.
The UMSR system was rated better than the SR system in terms of howquickly the hypothetical user was able to access the optimal flight (Question 4).
How-ever, this difference was smaller in the overhearer experiment, and did not reach signif-icance level (t(199) = 1.65, p ?
0.1).4.2.3 Discussion.
All the tendencies in ratings for experiments 1 and 2 were the same, theonly differences being that effect sizes were slightly smaller in the overhearer condition(see Figure 14) and that participants rated the systems consistently higher in the over-hearer experiment.
We hypothesize that these higher scores across the board must bedue to the presentation mode, that is, participants were possibly more impressed withthe systems when they overheard the interaction as opposed to reading it, because itwas closer to experiencing a working system.Although these two experiments provide valuable support for our hypotheses con-cerning overview and relevance, and indicate better perceived efficiency of the system,we are ultimately interested in how people cope when interacting with the differenttypes of dialog systems, and how user modeling affects task efficiency and effectiveness.We therefore designed a third experiment, in which participants were assigned flightbooking tasks and directly interacted with the dialog system (see Section 6).Because UMSR employs information from a user model and content structuringto present only those options that are likely to be relevant to the user, and explicitlypoints out trade-offs among options, we hypothesized that it would also consume lesscognitive resources, that is, presentations based on UMSR would impose less cognitiveload than those based on SR.
Therefore, in parallel to our work on the interactiontask experiment, a companion project conducted experiments using a dual-task setting(driving a simulated car while using the dialog system to book flights) to investigatethe effects of the two strategies to information presentation (UMSR vs. SR) on cognitiveload (Hu et al 2007).
Results indicated that, contrary to expectations, the cognitive loadplaced on users by the UMSR system was in some cases higher than the cognitiveload placed on users in the SR condition, and that this affected performance on theprimary task (driving).
By examining logs of the conversations, we found that theUMSR approach sometimes generated turns that were considerably longer than turnsproduced by the SR approach.
Because we are primarily interested in whether thecontent selection and structuring aspects of UMSR led to its benefits, we removedthe confounding factor of turn length by controlling for turn length across the twoconditions in our third experiment.5.
Controlling Dialog Turn LengthDetermining how much information to include in a dialog turn is an important factorin designing information presentation strategies.
The results from Hu et al (2007) sug-gested that our initial UMSR algorithm for determining how much information to in-clude in a turn needed improvement.
In addition, controlling for dialog turn length and512Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsthe number of information units conveyed in each dialog turn is important for makinga fair comparison between the aspects of information presentation we are interested in,that is, content selection (which attributes are included in a summary) and structuring.Presenting much complex information in a single turn can cause a significant memoryburden on the user, and thus disturb the variables we want to measure.
Furthermore,we hypothesize that a large memory burden will not only overwhelm the user, and thusaffect user satisfaction, but can also cause a degradation in efficiency (because users mayhave to ask for repetition or clarification of information) and/or effectiveness (becauseusers may forget pieces of information that are critical for making the best choice).Dialog turn length in our system is defined by the algorithm that divides the treeinto separate chunks, as explained in Section 3.6.1.
The original naive heuristic cansometimes cause long system turns if the branching factor of an option tree is largeeven after the pruning step.
In order to balance message length between the two condi-tions, we modified the content selection method to control the amount of informationpresented in each turn, as follows: The strategy for determining turn length (see Section 3.6.1) was revisedso that the initial option tree is divided into smaller chunks.
Recall thatthe tree was cut after a maximum of two branching nodes and theircorresponding children in the original implementation.
In the newimplementation, the tree is now split into smaller trees if a thresholdnumber of attribute values conveyed is exceeded. Fewer attributes are mentioned per presentation (for instance, by using avery general formulation that will get you there on time instead of that arrivesbetween 3 pm and 6 pm once the user had specified a specific time shewished to arrive, because this mentions a smaller number of facts). The generation component was modified so that a maximum of foursentences were presented per turn. Information that can be inferred from other pieces of information that havealready been presented (e.g., travel time, once departure and arrival timeare known) was left out to minimize the number of pieces of informationthat have to be remembered. Presenting the details of more than two flights in one system turn wasgenerally considered not manageable for a user, because each flightpresentation must contain at least the airline name, the arrival time, thetravel time, and the number of legs.
If there are more than two flights ina cluster, we only present attributes that distinguish the flights (e.g., Thethree direct flights are on Continental, Lufthansa, and Delta.
They arrive at9:55 am, 10:15 am, and 11:15 am).Finally, we compared the dialogs for the SR and UMSR approaches to make surethat at each step, the turn length and information density would be roughly the samefor both conditions.6.
Evaluation II ?
User Interaction StudyDue to the complexity of building a working end-to-end SDS, our previous experi-ments employed an ?overhearer?
evaluation methodology, in which participants read513Computational Linguistics Volume 37, Number 3or listened to pre-recorded dialogs with a scripted user.
This limits the evaluationcriteria that can be applied to users?
perceptions (e.g., understandability, goodness ofoverview of options, and so on).
Our third experiment, a short summary of whichwas first reported in Winterboer and Moore (2007), compares the two systems in amore interesting setting, in which users actively interact with the dialog systems.
Thissetting allows us to measure the systems?
impact on effectiveness of the interaction (asmeasured by task success) and efficiency (as measured by dialog duration), in additionto user satisfaction.
In this experiment, we compare the revised UMSR approach, whichcontrols the amount of information presented in each turn, to the SR approach asdescribed previously.6.1 The Wizard-of-Oz Paradigm and Experimental EnvironmentThe interaction task experiment presented here followed the Wizard-of-Oz (WoZ) par-adigm (Dahlba?ck, Jo?nsson, and Ahrenberg 1993) which enables us to test hypothesesabout not yet implemented or not sufficiently robust systems by simulating them.The systems used in this experiment have fully implemented information presentationcomponents, including content selection and structuring, text planning, and template-based realization.
The wizard?s role was limited to language understanding, makingsure all obligatory slots (e.g., departure airport, destination airport, travel dates) werefilled, and keeping the dialog going if the user was silent.We used a database-driven Web interface which generated system responses on-the-fly based on either the SR or the UMSR strategy to presenting information.
Thewizard sat on the opposite side of the room, hidden behind a partition that preventedparticipants from seeing or hearing the wizard during the experiment.
The integratedSQL-based database system contained actual flight information as provided by airlines.The wizard used drop-down menus to perform stepwise queries according to a partic-ipant?s requests until a satisfying flight was found and booked.
The generated textualinformation provided by the Web interface was copied-and-pasted to Speechify, a text-to-speech (TTS) application provided by Nuance Communications, Inc. All participantsheard a synthetic voice of their own gender speaking British English.
This choice wasmotivated by the work of Nass and Brave (2005), which shows that the gender of thevoice used for TTS plays a significant role in terms of user preferences and trust in theinformation provided (users prefer a voice that matches their gender).
Participants wereencouraged to speak naturally rather than merely to respond to system prompts.
Thewizard used very few questions as prompts (e.g., What would you like me to book for you?
)and would only add additional questions (e.g., Do you have a preferred arrival time?)
ifthe participant remained silent for more than five seconds after a round of informationpresentation by the system.6.2 Experimental DesignA total of 34 participants were paid to participate in the experiment.
About half ofparticipants were students of the University of Edinburgh (but not with a computerscience background), the other half were recruited via a Web site for one-off jobs.
Theaverage age of the 17 female and 17 male participants was 24 years.
All participantswere naive to the purpose of the experiment and native English speakers.Each participant was asked to book four flights.
In order to enable reliable andrigorous comparisons, all participants were briefed to act as a business traveler for theflight booking task.
As described in Section 4.1.1, the business traveler, in descending514Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsorder of importance, (1) prefers flying business class, (2) is concerned about arrivaltime, travel time, and number of legs, and (3) wants to fly on KLM if possible.After being briefed about the role they were to play, participants were assigned thetask of booking flights and received detailed instructions concerning the two flights tobe booked in the first part of the experiment.
To make the booking process more realistic,the four routes (i.e., pairs of cities) were carefully chosen in order to guarantee that eachparticipant experienced four different scenarios:1. no KLM flight was available2.
one KLM flight matched all the criteria3.
one KLM flight in business class was available but required a connection4.
one KLM flight was found but it was in economy classBoth the order in which the four flights were booked and the order of the informationpresentation strategies (UMSR and SR) were randomized to counter-balance possibleorder effects.
For the first two dialogs, half of the participants obtained flight informa-tion presented from the system adopting the SR approach; the other half received searchresults as determined by the UMSR approach.
In the second part of the experiment,participants who received flight information with SR in the first half of the experimentwere provided with information based on UMSR and vice versa.
After completing thedialogs with a specific system (i.e., after the second and fourth dialog), participantswere asked to fill in a questionnaire to provide judgments on the four user satisfactionquestions (see Figure 12).6.3 ResultsDialog recordings and questionnaire answers were analyzed.
For the questionnairedata, we used seven-point Likert-type scales.Efficiency.
There was a highly significant difference in the average number of turnsparticipants required for booking a flight when the system adopted the SR approach ascompared to the system adopting the UMSR approach.
Using a two-tailed paired t-testwe found that participants interacting with the UMSR-based system took significantlyfewer turns than when using the SR-based system (t(31) = ?5.57; p < 0.0001; indicatedwith ** in Table 3).Moreover, a two-tailed paired t-test revealed that dialog duration was significantlyshorter for bookings made with presentations based on UMSR as opposed to SR (t(29) =?6.39; p < 0.0001; Table 3).Table 3Number of turns per booking and average dialog duration for two bookings (in seconds) for SRand UMSR.SR UMSRTurns 14.53** 10.53**Duration (sec) 391.65** 252.55**515Computational Linguistics Volume 37, Number 3Effectiveness.
We hypothesized that UMSR, which explicitly points out trade-offsamong options, would lead to improved task success.
To this end, we extractedinformation about flights (e.g., flight times, airlines, number of layovers) fromhttp://www.expedia.co.uk and chose our scenarios carefully to ensure that there wasone flight that best matched the requirements we presented to participants.
We thencounted how often the flight best matching the business traveler?s profile was chosen ineach condition.
Using the UMSR-based system, participants succeeded in booking thebest-matching flight significantly more often.
They booked the optimal flight 62 timesout of 68 (91.18% success rate) with the UMSR system, but they only succeeded in doingso 50 out of 68 times (73.53% success rate) when interacting with the SR system.User Satisfaction Ratings.
No statistically significant differences in terms of system pref-erence were found between genders.
In the questionnaire data (see Figure 15) we founda general preference for UMSR-based recommendations on all four evaluation criteria.However, only differences between answers to Questions 1 and 4 (?Did the system givethe information in a way that was easy to understand?
?, t(33) = ?2.85; p < 0.05; ?Howquickly did the system allow the user to find the optimal flight?
?, t(33) = ?2.98; p <0.005) were statistically significant.
We believe that the lack of a significant differencebetween systems on Questions 2 (overview) and 3 (relevance) is related to the fact thatthe new version of UMSR controlled for turn length.
In the revised version, informationabout alternative or competing options was only included if the turn length allowed forit.
Thus, there is trade-off between understandability and presenting information thatis intended to improve the user?s overview of the option space.
Further investigation ofthis trade-off should be carried out as part of future research.6.4 Limitations on EvaluationAlthough the WoZ method allows us to evaluate our information presentation strategyin the context of an actual interaction, there are still a number of shortcomings.
Anideal user evaluation would use actual automatic speech recognition and languageFigure 15Results for all questions, interaction experiment.516Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsunderstanding instead of the wizard performing these actions.
In addition, it woulduse the actual model of each user rather than ask them to role-play.Although role-playing is an often used methodology in SDS evaluations (Polifroniand Walker 2008) and corpus collection (Carletta 2007), we recognize that there areconcerns with respect to assigning subjects a user model as opposed to using theparticipants?
own models.
Possible problems with role-playing include the fact thatparticipants may have incorrect expectations about the needs and preferences of therole they are supposed to play, and that they might not adopt the role sufficiently.Furthermore, a scenario where participants are role-playing cannot test how good theuser model is, or how robust a user-adaptation system is.We chose role-playing as a method despite these concerns because it allows us tomore closely control conditions and guarantee that every participant will be exposed tothe same number and constellation of trade-offs (see Section 6.2).In future work, we wish to perform an evaluation where the user?s own model isused.7.
DiscussionWe ran over 100 participants in three experiments and obtained very stable results infavor of the UMSR approach to information presentation.
In this section, we summarizeour findings from the three experiments with respect to our initially stated hypotheses.Did the UMSR Approach Increase the Efficiency of Information Presentation?
Overall, both interms of the subjectively perceived efficiency, and in terms of the objectively measurableefficiency, the UMSR system significantly outperformed the SR system.
Task durationwas significantly lower in the UMSR condition than in the SR condition in the interac-tion experiment, with the UMSR system also requiring fewer dialog turns.
Furthermore,participants reported that they felt the optimal option was accessed more quickly in theUMSR condition than in the SR condition in all three experiments.Did the UMSR Approach Make Information Presentation More Effective?
This hypothesiswas tested in the interaction task experiment by measuring task success.
We found thatusers chose the option that was best for the role they were playing more often in theinteraction experiment.
These findings also agree with results obtained in other work,using a dual-task method (Hu et al 2007; Winterboer et al 2007).
Thus, we concludethat information access with the UMSR approach is more effective than with the SRapproach.Did UMSR Provide a Better Overview of the Option Space and Was Higher ConfidenceAchieved with UMSR?
Questions 2 (?Did the system give X a good overview of theavailable options??)
and 3 (?Do you think there may be flights that are better optionsfor X that the system did not tell X about??)
of the questionnaire were designed toassess this aspect.
The first two experiments showed a clear preference for the UMSRsystem in comparison with the SR system.
Participants in the interaction experimentalso exhibited a preference for the UMSR system, but the difference in ratings did notreach significance level.
The smaller effect size in the third experiment is likely due tocontrolling dialog length: The overview of options deemed uninteresting to the userwas sometimes omitted to reduce turn length.
This omission seems to negatively affectthe user?s overview of the option space and their confidence in having heard about allrelevant options.517Computational Linguistics Volume 37, Number 3Was the Understandability of the System Improved?
Understandability was the single aspectin which the SR system was not outperformed by the UMSR system for the first twoexperiments (differences in ratings were marginal).
Our hypothesis had been that theuser model improves understandability by tailoring the presentation of the options tothe user.
This seemed to be outweighed by the larger amount of information presentedin the original implementation of UMSR, however.
In the interaction task experiment, inwhich dialog turn length was kept constant across the SR and UMSR conditions, turnsin the two conditions contained a similar number of information units.
In this case, theUMSR system achieved better understandability than the SR system.Finally, Did We Achieve Higher User Satisfaction?
For all conditions, users preferred theUMSR strategy over the SR strategy, and on no aspect was the SR system found to besignificantly better than the UMSR system in our experiments.We conclude that our hypotheses were largely confirmed, and that a challenge for futurework lies in the development of methods that allow the system to predict and controlfor the cognitive load induced by system utterances.
We believe that this is particularlyimportant because dialog systems are frequently used in situations in which the user?shands and eyes are busy.
For example, NASA is interested in spoken dialog technologyfor use in spacecraft (Rayner et al 2003), and automobile manufacturers are integratingan ever-increasing number of voice services into their products.In subsequent work, an end-to-end dialog system following the UMSR strategy wasimplemented in the context of the TownInfo system (Paksima, Georgila, and Moore2009), which allows users to search for restaurants in the city of Edinburgh.
The systemwas evaluated with participants interacting directly with the system (as opposed to aWOZ setting), and was compared to a system that implemented the typical sequentialenumeration approach to information presentation.
In the UMSR condition, both per-ceived task completion (90.7% vs. 85.2%) and actual task completion (74.1% vs. 62.9%)were higher than in the traditional sequential enumeration condition.
Furthermore,dialogs with the UMSR system required significantly fewer turns to complete the task(9.24 for UMSR and 17.78 for the sequential system), and conciseness, accessibility,and efficiency were all rated more highly in the UMSR condition than the sequentialenumeration condition.
In addition, overall user satisfaction was significantly higherfor the UMSR system.
Finally, the UMSR system outperformed the sequential systemparticularly clearly in cases where a trade-off among options existed.8.
Related WorkOur experiments evaluate the UMSR model against the SR model described in Polifroni,Chung, and Seneff (2003).
Recently, Polifroni and Walker (2008) developed severalvariants of the SR approach that differ in how they choose and structure attributes in thesummaries presented to the user.
That is, they differ in the way they rank attributes forpresentation and the method used for clustering.
There are two approaches to ranking,one based on the original refiner approach (which chooses to cluster on attributes forwhich a small number of clusters account for most of the options) and the other based ona user model (which chooses attributes for clustering based on the ranking in the usermodel).
For clustering, they added an ?associative mode?
in which association rulesamong attributes are automatically determined and the summary statements produceddescribe the associations.
Imagine that all options in a cluster with property X also518Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsFigure 16Example summaries based on association rule clustering, without and with user-model basedranking, from Polifroni and Walker (2008).happen to have property Y.
Association then means that both properties X and Y arementioned for the cluster (see Figure 16).Polifroni and Walker (2008) evaluated the different versions of the refiner strategyapproach in a reading experiment, similar to our first experiment.
However, they eval-uated only the first system turn in the dialog for the different conditions presented.
Theexperimental conditions contrasted structuring with versus without a user model, andwith versus without associative clustering.
They found that users preferred the systemutterances that were generated based on a user model when there were a large numberof options available, and that the associative mode was beneficial when tailoring thesummaries to the user.
Their results hence support our approach: The version of thesystem that included user modeling and associative clustering led to dialogs that arethe most similar to those of our UMSR approach.There remain, however, a number of differences between their refined refiner withuser modeling and associative clustering and our UMSR model.
First, in UMSR theuser model is not only used to structure, but also to select options (via pruning of theoption tree).
Second, Polifroni and Walker?s (2008) approach contains two clusteringsteps: one for clustering attribute values, which is the same as in our UMSR approach,and a second one for clustering options following each query.
This second clusteringstep corresponds to our tree structuring step.
Whereas Polifroni and Walker re-clusterat every system turn, we only build up the option tree once (unless the user changestheir query, e.g., by wanting to fly on another day, or asking to fly on another airline).Finally, their notion of associative clustering (i.e., grouping together attributeswhose values are connected, such as short flight duration and direct flights) is realizedin our system as well, but in a less explicit way: In the tree structuring phase, attributesthat have identical values for a set of options (this would for example apply if all flightswith short travel time turned out to have only one leg) are moved up in the tree even ifthe attribute has a low rank (see Section 3.4).
A difference is that our UMSR model treatsthe user?s valuation as a more important feature for dialog structuring than associations.Coping with Under- and Over-constrained User Queries.
One frequent problem in spokendialogs is caused by under- and over-constrained queries.
In under-constrained queries,the database returns too many results to be presented at once, and the system mustsupport users in further refining their query.
In an over-constrained query, there are no519Computational Linguistics Volume 37, Number 3entries in the database that match the query exactly, and the system thus has to get theuser to relax a constraint, or itself choose a constraint to relax.Our UMSR system differentiates between cases that concern missing informationabout obligatory slots (e.g., origin, destination, and date) and underspecified prefer-ences (concerning preferred airlines, etc.).
To fill the obligatory slots, simple slot-fillingquestions such as When do you want to leave?
are asked.
For all other cases of over-or under-constrained queries, constraint relaxation and specification is inherent in theUMSR structuring approach.
For underspecified preferences, the user model providesdefault specifications.
In the case of over-constrained queries, we can think of constraintrelaxation in terms of the tree structure: Constraints that are less important to the user(e.g., price for our example business user) are automatically relaxed simply because theyare located further down in the option tree.
Constraint values, namely, good arrival timebeing changed to fair, are automatically relaxed due to the ordering of the brancheswithin the option tree.Various strategies for coping with over- and under-constrained queries have beendeveloped in the literature.
Systems proactively suggest additional refinements forunderconstrained queries, as in You could try to look for cuisine type?
(Pon-Barry, Weng,and Varges 2006; Varges, Weng, and Pon-Barry 2006), or relaxations for over-constrainedqueries, as in Would a slightly more expensive flight work for you?
(Qu and Beale 1999; Pon-Barry, Weng, and Varges 2006).
Additionally, constraints can be relaxed automaticallybased an ontology (Varges, Weng, and Pon-Barry 2006) or by predefining relaxation sets(e.g., from a specific street for a restaurant to the broader neighborhood) or categoricalones (e.g., relaxing Chinese to Asian) (Chung 2004).9.
Conclusions and Future WorkThe research presented in this article addresses the issue of how to scale informationpresentation strategies for spoken dialog systems to situations where many diverseoptions are available.We developed an approach that combines content selection with content structur-ing, and showed how a user model can inform both of these steps to optimize efficiencyand effectiveness of the information presentation phase in spoken dialog systems.
Theknowledge derived from the user model can be used to enable a dialog system to auto-matically present trade-offs between the relevant entities explicitly, thus improving theuser?s overview of the option space, and contrast options using linguistic and discoursecues.
In our experiments, we found that the user model?directed approach led to shorterdialogs and that it improved task success: Users found the optimal option more oftenand were more satisfied with their experience.
We tested this with three studies, areading experiment, an overhearer experiment, and a Wizard-of-Oz experiment, thusproviding what we believe is the first large-scale evaluation of alternative informationpresentation strategies that actually investigates how users interact with the dialogsystem to perform a task.One significant contribution of the UMSR approach for intelligent informationpresentation is that it guides users through the dialog by presenting only options thatare likely to be of high relevance to them, thus reducing the reliance on user speech.UMSR exploits information from the user model to provide users with the opportunityto select between the most suitable options available.
It computes the trade-offs betweenoptions to most effectively narrow down the number of options.
This way, considerablyfewer turns are required per dialog in comparison with the SR approach, the averagedialog duration is shorter, and the optimal option (i.e., flight) is booked more often.520Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsWe conclude that combining a summarize and refine approach with user modelingis a very promising approach to improving the user experience in terms of achievinghigher task success and increasing efficiency.
However, there are also other parts ofthe presentation that could be tailored to the user (e.g., in adaptive option clustering).Although we used heuristics for how to exploit the information from the user modelfor content structuring, a very important next step would be to analyze the relationshipbetween the user?s valuations and how they explore the option space.
It is conceivablethat other ways of organizing the options could lead to even shorter refinement pathsand quicker interactions.
Concerning dialog turn length and complexity, we believethat better formal methods are needed in order to automatically estimate the cognitiveburden placed on a user during the dialog interaction.
We now briefly address theseissues.Tailored Clustering.
The user model can also be used for further tailoring the systemresponses to the user by taking into account the user?s valuations during the clusteringstep.
Instead of using a fixed number of target clusters, it would be better to use a flexiblenumber of natural clusters that the data fall into.
This would make the labeling moredifficult, but would make clusters (and therefore descriptions of option properties) moremeaningful.
Furthermore, the distance function used for clustering could be sensitiveto the user model.
For instance, the price axis used during clustering for a student whocares very much about price could be more fine-grained in the most relevant low pricerange.An Adaptive User Model for Turn Length.
We learned from our experiments and relatedwork that turn length is important to control.
Although we found that our systemtended to produce turns that were often rather complex, in a study about choosing theoptimal amount of information to convey to users, Whittaker, Walker, and Maloor (2003)found that subjects are biased towards more information.
This means that providingan insufficient amount of information is perceived as worse than presenting too manydetails.
Whittaker, Walker, and Maloor?s results also indicated that conciseness shouldbe tailored to users, because some users appreciate conciseness more than others.
Oursystem does not currently tailor turn length to specific users, because our user modeldoes not contain information about a user?s conciseness preferences, or situational data,such as whether they are in a hurry, or can only devote a limited amount of attentionon the task.
Furthermore, Polifroni and Walker (2008) found in their user study thatpeople who are not very familiar with the available options (e.g., tourists in a foreigncity searching the restaurant domain) appreciate potentially longer, tailored summariesmore than users who are very familiar with the data and know more precisely whatthey are looking for?such users preferred a simple refinement strategy or refinementwith association over a user model?based recommendation.Exploring the Relationship between the User Model and Optimal Dialog Structure (MinimizeExploration Need).
We have shown that presenting users first with those options that aremost relevant according to their user model improved efficiency over using an orderwhich minimizes entropy but does not take into account the user model.
However, wehave not shown that this is necessarily the best possible order.
Therefore, it would beinteresting to run a more large-scale user experiment in which users use the system in aneven more natural setting for booking flights that match their own interests, analyzinghow often users explore more than one branch in the tree as a function of the treestructure.
Having to investigate different branches of the tree is an indicator that the521Computational Linguistics Volume 37, Number 3tree structure is not optimal.
This information could then be used to improve on thecontent structuring algorithm and learn more about the relationship between the usermodel and users?
exploration strategies and interests when performing the task.Measures of Cognitive Load.
An interesting aspect in information presentation is also howmuch cognitive load the system-generated utterances place on the user.
In this work,we try to manage cognitive load by controlling how many pieces of information areconveyed in one system turn.
This is, however, a very coarse measure, as differentlinguistic factors have also been shown to affect cognitive load on users.
For example,surprising or incoherent information structure has been observed to be more difficult toprocess (Vauras, Hyo?na?, and Niemi 1992; Van Gompel, Liversedge, and Pearson 2004),and complex syntactic structures (e.g., long-distance dependencies) have been shownto impose difficulty (Gibson 1998).
Language processing difficulty is also affected byfrequency: Less frequent structures and words are more difficult to process than morefrequent ones (Ehrlich and Rayner 1981; Rayner 1998; Rayner et al 1998).
Furthermore,lexical access (Pollatsek and Rayner 1990) and word predictability (Rayner et al 2001)have also been shown to play a role.
Finally, deciding what is an information unit andestimating how difficult they are to remember (and recall) for a particular user is nota trivial task, and is highly dependent on individual differences in affect, aptitude,intelligence, episodic memory, and so on.Therefore, a more fine-grained estimation of the cognitive load imposed on a userbased on the number of information units to remember, the syntactic structure of thegenerated sentences, and their semantic coherence would allow the system to adapt tosituational constraints (e.g., generate less complex but potentially less efficient interac-tions if the user is performing another task simultaneously), or to a specific user in orderto account for age or disabilities.In order to begin addressing some of these issues, and to gain further insight intowhat makes presentations based on the UMSR approach so successful, we have recentlyperformed experiments investigating the role of linguistic devices to explicitly point outtrade-offs among options (e.g., but, also, just, only), which are used in UMSR presenta-tions to highlight relations among and trade-offs between options.
We found that inboth written and spoken presentations of options, those that include these linguisticdevices facilitate recall for comparisons among options, when compared to a conditionin which presentations do not include such linguistic cues (Winterboer 2009; Winterboeret al 2011).
In future work, we plan to consider how the syntactic complexity of thesentences in a presentation affects cognitive load, and how this interacts with both thenumber of options and attributes presented, and the use of linguistic devices to pointout trade-offs.AcknowledgmentsWe would like to thank the anonymousreviewers for their helpful comments.
VeraDemberg was supported by EvangelischesStudienwerk e.V.
Villigst.
Andi Winterboerwas funded by the Edinburgh-Stanford Link.ReferencesBos, Johan, Ewan Klein, Oliver Lemon, andTetsushi Oka.
2003.
Dipper: Descriptionand formalisation of an information-stateupdate dialogue system architecture.In 4th SIGdial Workshop on Discourse andDialogue, pages 115?124, Sapporo.Carenini, Giuseppe and Johanna D. Moore.2001.
An empirical study of the influenceof user tailoring on evaluative argumenteffectiveness.
In Proceedings of the 17thInternational Joint Conference on ArtificialIntelligence, pages 1307?1314, Seattle, WA.Carletta, Jean.
2007.
Unleashing the killercorpus: Experiences in creating themulti-everything ami meeting corpus.522Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsLanguage Resources and Evaluation,41(2):181?190.Chung, Grace.
2004.
Developing a flexiblespoken dialog system using simulation.In Proceedings of the 42nd Meeting of theAssociation for Computational Linguistics(ACL?04), Main Volume, pages 63?70,Barcelona.Dahlba?ck, N., A. Jo?nsson, and L. Ahrenberg.1993.
Wizard of Oz studies?why and how.Knowledge-Based Systems, 6(4):258?266.Demberg, V. and Johanna D. Moore.
2006.Information presentation in spokendialogue systems.
In Proceedings of the 11thConference of the European Chapter of theAssociation for Computational Linguistics(EACL), pages 65?72, Trento.Ehrlich, S. F. and K. Rayner.
1981.
Contextualeffects on word recognition and eyemovements during reading.
Journal ofVerbal Learning and Verbal Behaviour,20:641?655.Georgila, Kallirroi, Oliver Lemon, JamesHenderson, and Johanna D. Moore.
2009.Automatic annotation of context andspeech acts for dialogue corpora.
NaturalLanguage Engineering, 15(3):315?353.Gibson, Edward.
1998.
Linguisticcomplexity?locality of syntacticdependencies.
Cognition, 68:1?76.Hieronymus, James L. and John Dowding.2007.
Clarissa spoken dialogue systemfor procedure reading and navigation.Technical Report IAC-04-T.3.07, NASAAmes Research Center, MountainView, CA.Hu, J., A. Winterboer, C. I. Nass, J. D. Moore,and R. Illowsky.
2007.
Context andusability testing: User-modeledinformation presentation in easy anddifficult driving conditions.
In Proceedingsof the SIGCHI Conference on Human Factorsin Computing Systems, pages 1343?1346,San Jose, CA.Komatani, Kazunori, Shinichi Ueno, TatsuyaKawahara, and Hiroshi G. Okuno.
2003.Flexible guidance generation using usermodel in spoken dialogue systems.
InProceedings of the 41st Annual Meeting of theAssociation for Computational Linguistics(ACL-2003), pages 256?263, Sapporo.Linden, G., S. Hanks, and N. Lesh.
1997.Interactive assessment of user preferencemodels: The automated travel assistant.Courses and Lectures-International Centre forMechanical Sciences, pages 67?78.Martin, David L., Adam J. Cheyer, andDouglas B. Moran.
1999.
The open agentarchitecture: A framework for buildingdistributed software systems.
AppliedArtificial Intelligence, 91?128.Moore, Johanna D. 2006.
Natural languagegeneration for information presentation.Paper presented at the Spoken LanguageTechnology Workshop SLT ?06, December,Aruba.Moore, Johanna D., Mary Ellen Foster,Oliver Lemon, and Michael White.
2004.Generating tailored, comparativedescriptions in spoken dialogue.
InProceedings of the Seventeenth InternationalFlorida Artificial Intelligence Research SocieyConference, AAAI Press, pages 917?922,Miami Beach, FL.Nass, C. and S. Brave.
2005.
Wired for Speech:How Voice Activates and Advances theHuman?Computer Relationship.
The MITPress, Cambridge, MA.Paksima, T., K. Georgila, and J. D. Moore.2009.
Evaluating the effectiveness ofinformation presentation in a fullend-to-end dialogue system.
In Proceedingsof the SIGDIAL 2009 Conference, pages 1?10,London.Polifroni, Joseph, Grace Chung, andStephanie Seneff.
2003.
Towards automaticgeneration of mixed-initiative dialoguesystems from web content.
In Proceedingsof Eurospeech ?03, pages 193?196, Geneva.Polifroni, Joseph and Marilyn Walker.
2008.Intensional summaries as cooperativeresponses in dialogue: Automation andevaluation.
In Proceedings of ACL-08: HLT,pages 479?487, Columbus, OH.Pollatsek, A. and K. Rayner.
1990.
Eyemovements and lexical access in reading.In D. A. Balota, G. B. Flores d?Arcais, andK.
Rayner, editors, Comprehension Processesin Reading.
Erlbaum, Hillsdale, NJ,pages 143?163.Pon-Barry, Heather, Fuliang Weng, andSebastian Varges.
2006.
Evaluation ofcontent presentation strategies for anin-car spoken dialogue system.
InInterspeech 2006 ?
ICSLP, pages 1930?1933,Pittsburgh, PA.Qu, Y. and S. Beale.
1999.
A constraint-basedmodel for cooperative response generationin information dialogues.
In AAAI/IAAI1999, pages 148?155, Orlando, FL.Rayner, K. 1998.
Eye movements in readingand information processing.
PsychologicalBulletin, 124:327?422.Rayner, K., K. S. Binder, J. Ashby, andA.
Pollatsek.
2001.
Eye movement controlin reading: Word predictability has littleinfluence on initial landing positions inwords.
Vision Research, 41:943?954.523Computational Linguistics Volume 37, Number 3Rayner, K., S. C. Sereno, R. K. Morris,A.
R. Schmauder, and C. Clifton.1998.
Eye movements and on-linelanguage comprehension processes.Language and Comprehension Processes,4:21?49.Rayner, Manny, Beth Ann Hockey, JimHieronymus, John Dowding, Greg Aist,and Susana Early.
2003.
An intelligentprocedure assistant built using regulus2 and alterf.
In Proceedings of the41st Annual Meeting on Associationfor Computational Linguistics,pages 193?196, Sapporo.Rich, Elaine.
1979.
User modeling viastereotypes.
Cognitive Science, 3(4):329?354.Seneff, Stephanie.
2002.
Response planningand generation in the mercury flightreservation system.
Computer Speech &Language, 16(3?4):283?312.Steedman, M. 2000.
Information structureand the syntax?phonology interface.Linguistic Inquiry, 31(4):649?689.Thompson, C., M. Goeker, and P. Langley.2004.
A personalized system forconversational recommendations.
Journalof Artificial Intelligence Research (JAIR),21:393?428.Van Gompel, R. P. G., S. P. Liversedge, andJ.
Pearson.
2004.
Antecedent typicalityeffects in the processing of nounphrase anaphors.
In M. Carreiras andC.
E. Clifton, editors, The On-line Study ofSentence Comprehension: Eyetracking, ERPand Beyond.
Psychology Press, New York,pages 119?137.Varges, Sebastian, Fuliang Weng, andHeather Pon-Barry.
2006.
Interactivequestion answering and constraintrelaxation in spoken dialogue systems.
InProceedings of the 7th SIGdial Workshop onDiscourse and Dialogue, pages 28?35,Sydney.Vauras, M., J.
Hyo?na?, and P. Niemi.
1992.Comprehending coherent and incoherenttexts: Evidence from eye movementpatterns and recall performance.
Journal ofResearch in Reading, 15(1):39?54.Walker, M. A., S. J. Whittaker, A. Stent,P.
Maloor, J. Moore, M. Johnston, andG.
Vasireddy.
2004.
Generation andevaluation of user tailored responses inmultimodal dialogue.
Cognitive Science,28(5):811?840.Walker, Marilyn and Rebecca Passonneau.2001.
Date: A dialogue act tagging schemefor evaluation of spoken dialogue systems.In HLT ?01: Proceedings of the FirstInternational Conference on Human LanguageTechnology Research, pages 1?8,Morristown, NJ.Walker, Marilyn A., Rebecca Passonneau,and Julie E. Boland.
2001.
Quantitativeand qualitative evaluation of darpacommunicator spoken dialogue systems.In Proceedings of 39th Annual Meeting of theAssociation for Computational Linguistics,pages 515?522, Toulouse.White, Michael, Robert A. J. Clark, andJohanna D. Moore.
2010.
Generatingtailored, comparative descriptions withcontextually appropriate intonation.Computational Linguistics, 36(2):159?201.Whittaker, Stephen, Marilyn Walker, andPreetam Maloor.
2003.
Should I tell all?
:An experiment on conciseness in spokendialogue.
In EUROSPEECH: EuropeanConference on Speech Processing,pages 1685?1689, Geneva.Winterboer, A., J. Hu, Johanna D. Moore,and Clifford I. Nass.
2007.
The influence ofuser tailoring and cognitive load on userperformance in spoken dialogue systems.In Proceedings of the Interspeech 2007Conference, pages 2717?2720, Antwerp.Winterboer, Andi.
2009.
EvaluatingInformation Presentation Strategies forSpoken Dialogue Systems.
Ph.D. thesis,School of Informatics, University ofEdinburgh.Winterboer, Andi and Johanna D. Moore.2007.
Evaluating information presentationstrategies for spoken recommendations.In Proceedings of the 2007 ACM Conferenceon Recommender Systems, pages 157?160,Minneapolis, MN.Winterboer, Andi, Martin I. Tietze, MariaWolters, and Johanna D. Moore.
2011.The user model-based summarize andrefine approach improves informationpresentation in spoken dialog systems.Computer Speech and Language, 25:175?191.524Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsAppendix 1: Dialogue Scripts for Experiments 1 and 2Training Scenario (Steve)Steve?s user profile:You?re going to read the transcripts of dialogues between a customer, Steve, and two dif-ferent automated travel agents.
When asked to fill out a form indicating his preferencesfor air travel, here?s what Steve said:?I?m a student, so the most important thing to me is to get a cheap flight.
OtherwiseI?m pretty flexible.
I have no preferred airline and I don?t care about particular layoverairports.
?A: Dialogue between Steve and UMSR system:Steve: Hello.
I need a cheap flight from Edinburgh to San Francisco on Thursday,22nd September.
I?d like to arrive by 6 pm.System: I found three flights.
They all have a short travel time but require a connection.The cheapest flight is on Air France.
It arrives at 3:45 pm and costs just304 pounds.If you prefer to arrive closer to 6 pm, there are two British Airways Flightsto choose from, but they both cost 586 pounds.
All other flights are moreexpensive or arrive too late.Steve: Tell me more about the cheap flight, please.System: The Air France flight leaves Edinburgh at 9:05 am and requires a connectionin Paris.
The total travel-time is 14 hours and 40 minutes.B: Dialogue between Steve and SR system:Steve: Hello.
I need a cheap flight from Edinburgh to San Francisco on Thursday,22nd September.
I?d like to arrive by 6 pm.System: There are three cheap flights from Edinburgh to San Francisco that arrivebetween 3 and 6 pm.
One of them is on Air France and costs 304 pounds.
Itarrives at 3:45 pm.
The second one is a KLM flight that arrives at 4:20 and costs349 pounds.
The third flight is on Continental Airlines.
It arrives at 4:35 pmand costs 389 pounds.Steve: Can you give me more detailed information about the flight for 304 pounds,please?System: It leaves Edinburgh at 9:05 am and requires a connection in Paris.
The totaltravel time is 14 hours 40 minutes.Scenario 1 (Carol)Carol?s user profile:You?re going to read the transcripts of dialogues between a customer, Carol, andtwo different automated travel agents.
When asked to fill out a form indicating herpreferences for air travel, here?s what Carol said: ?I?m a frequent flier and collectfrequent flier points with KLM, so the most important thing when booking a flight isthe airline.
Second most important are the arrival time and the number of legs.
Thirdmost important is the travel time.
I?m not too concerned about the price or the layoverairport, although I prefer not to connect in London Heathrow.
?525Computational Linguistics Volume 37, Number 3A: Dialogue between Carol and UMSR system:Carol: Hello.
I would like to book a flight from Edinburgh to San Francisco forThursday, 27th July, preferably leaving Edinburgh after 11 am.
If at all pos-sible, I?d like to fly on KLM.System: Do you have any preferences for airports?Carol: I?d rather not connect in London Heathrow.System: I found two flights that both require a connection.
There?
s a KLM flight foronly 348 pounds with a connection in Amsterdam, but it takes 18 hours and20 minutes and leaves at 7:30 am.To leave later and travel faster, you can take the Flybe flight that leaves onlyat 11:45 am and has a total travel time of only 15 hours 40 minutes.
But you?dneed to connect in London and the price is 580 pounds.B: Dialogue between Carol and SR system:Carol: Hello.
I would like to book a flight from Edinburgh to San Francisco forThursday, 27th July, preferably leaving Edinburgh after 11 am.
If at all pos-sible, I?d like to fly on KLM.System: There are no flights that leave Edinburgh after 11 am and that are on KLM.However, there is a KLM flight leaving at 7:30 am.Carol: Are there any flights on other airlines that leave Edinburgh after 11 am?System: There are 7 flights that leave Edinburgh after 11 am.
All of them have avail-ability in business class.Carol: Do you have information about the travel time of these flights?System: Most of the flights take between 18 hours and 20 hours, one has a travel timeof less than 16 hours.Carol: Please tell me about that flight with under 16 hours travel time.System: The Flybe flight leaves Edinburgh at 11:45 am and arrives San Francisco at11 pm.
It has a total of 15 hours 40 minutes and costs 580 pounds.
You?d needto connect in London Heathrow.Scenario 2 (Walter)Walter?s user profile:You?re going to read the transcripts of dialogues between a customer, Walter, andtwo different automated travel agents.
When asked to fill out a form indicating hispreferences for air travel, here?s what Walter said: ?I?m a business traveller, so the mostimportant thing for me is to fly business class.
I need to get to my meetings in time anddon?t want to spend too much time in airports, so second most important to me arearrival time, travel time, and number of legs.
Third most important is to fly on KLM,because I collect bonus miles.
I?m not concerned about travelling cheaply.
?A: Dialogue between Walter and UMSR system:Walter: Hello.
I?d like to book a flight from Edinburgh to Brussels for tomorrow.
I needto get there at around 3 pm and I?d prefer to fly business class.System: Do you have any airline preferences?Walter: Yes, KLM.
And I?d rather not connect in London, if at all possible.526Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsSystem: There are four flights with availability in business class.
None are on KLM.The only direct flight arrives at 5:30 pm, which is later than you requested.
Toarrive earlier, you?ll have to make a connection.If you?re willing to travel economy, there is a direct flight on BMI, arrivingat 1:10 pm.
There?s also a KLM flight arriving at 1:50 pm, but it requires aconnection in Amsterdam.All other economy flights take longer or arrive later than 4 pm.Walter: Can you tell me more about the business class flights that arrive earlier?System: The two flights with shortest travel time are both on British Airways and cost308 pounds.
The first takes 4 hours and 20 minutes and arrives at 1:20 pm.
Theother takes 4 hours and 30 minutes and arrives at 3:30 pm.
There?s a cheaperflight on Lufthansa.
It arrives at 3:10 pm and costs just 270 pounds, but it takes5 hours and 35 minutes.
All other business class flights arrive much too earlyor very late.B: Dialogue between Walter and SR System:Walter: I?d like to book a flight from Edinburgh to Brussels for tomorrow.System: There are 28 flights from Edinburgh to Brussels.
Most of them require aconnection and cost between 100 and 230 pounds.Walter: Are there any direct flights with availability in business class that arrivearound 3 pm?System: There are no direct business class flights that arrive around 3 pm.
However,there is one direct business class flight that arrives at 5:30.
It costs 111 pounds.Walter: No, that?s too late .
.
.
what about connecting business class flights that arrivearound 3 pm?System: There are three business class flights that require a connection and arrivearound 3 pm.
Two of them are on British Airways and arrive at 1:20 and 3:30.The third is on Lufthansa and arrives at 3:10.Walter: How long do these flights take?System: The British Airways flights take 3 hours and 20 minutes and the Lufthansaflight takes 4 hours and 35 minutes.Walter: Are there any direct economy flights?System: Yes, there?s a direct flight on BMI.
It arrives at 1:10 pm and has a travel time of1 hour 35 minutes.Scenario 3 (Carol)Carol?s user profile:It?s Carol again.
This time she wants information about flights to Brussels.
Rememberwhat she said in her user profile: ?I?m a frequent flier, so the first most important thingfor me is the airline, because I collect frequent flier points with KLM.
Second mostimportant to me is arrival time and number of legs.
Third most important is travel time.I?m not too concerned about the price or the layover airport, although I prefer not toconnect in London Heathrow.
?A: Dialogue between Carol and UMSR system:Carol: Hello.
I would like to book a flight from Edinburgh to Brussels for Thursday,27th July, arriving at about noon.
I prefer KLM flights.527Computational Linguistics Volume 37, Number 3System: I found three flights with a good price.
Two of them are on KLM.
They bothcost 111 pounds, but require a connection in Amsterdam.
If you want to flydirect, there?s a BMI flight arriving Brussels at 9:40 am that costs 107 pounds.All other flights arrive after noon.Carol: Please tell me more about the KLM flights.System: One of them arrives at 11:20 am but has a travel time of 4 hours 15 minutes.The other takes just 3 hours 10 minutes but arrives only at 4:40 pm.B: Dialogue between Carol and SR system:Carol: Hello.
I would like to book a flight from Edinburgh to Brussels for Thursday,27th July, arriving at about noon.
I prefer KLM flights.System: I found one KLM flight that arrives Brussels at 11:20 am.
It takes 4 hours15 minutes.Carol: Please tell me more about that flight.System: It leaves Edinburgh at 6:05 am and costs 111 pounds.
You need to make aconnection in Amsterdam.Scenario 4 (Steve)Steve?s user profile:It?s Steve again.
This time he wants to go to San Francisco.
Remember Steve?s userprofile: ?I?m a student, so the most important thing to me is to get a cheap flight.Otherwise I?m pretty flexible.
I have no preferred airline and I don?t care aboutparticular layover airports.
?A: Dialogue between Steve and UMSR system:Steve: Hello.
I would like to book a flight from Edinburgh to Brussels for Thursday,27th July.
Please find me a cheap flight.System: What is your desired arrival time?Steve: Ahm .
.
.
in the early afternoon.System: Ryan Air offers the cheapest flights to Brussels.
They cost just 49 pounds, butyou would have to connect in Dublin.
There are two flights to choose from.There?s an early flight, leaving Edinburgh at 8:05 am and arriving at 12:45 pm,with a travel time of only 3 hours 30 minutes.
If you prefer to arrive at 5:30 pm,your total travel time would be 5 hours 30 minutes, leaving Edinburgh at1 pm.
If you want to fly direct, there?s a flight on BMI that takes just 1 hourand 35 minutes.
It arrives at 1:35 pm and costs 112 pounds.
All other directflights are more expensive.B: Dialogue between Steve and SR System:Steve: Hello.
I would like to book a flight from Edinburgh to Brussels for Thursday,27th July.
Please find me a cheap flight.System: There are three flights for only 49 pounds on Ryan Air.
They all require aconnection in Dublin.Steve: Is there also a cheap *direct* flight?528Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsSystem: The cheapest direct flight is on BMI and costs 112 pounds.Steve: Okay .
.
.
what are the departure and arrival times of the three RyanAir flights?System: The first Ryan Air leaves Edinburgh at 8:05 am and arrives at 12:45 pm.
Thenext one leaves at 1 pm and arrives at 5:30 pm.
The last one leaves Edinburghat 4:25 pm and arrives at 9:25 pm.Scenario 5 (Walter)Walter?s User ProfileIt?s Walter again.
This time he has another request.
Remember his preferences: ?I?m abusiness traveller, so the most important thing for me is to fly business class.
I needto get to my meetings in time and don?t want to spend too much time in airports, sosecond most important to me are arrival time, travel time, and number of legs.
Thirdmost important is to fly on KLM, because I collect bonus miles.
I?m not concerned abouttravelling cheaply.
?A: Dialogue between Walter and UMSR system:Walter: Hello.
I would like to book a flight from Edinburgh to San Francisco fortomorrow, arriving around 4 pm.
It?s important for me to fly on business class.A KLM flight would be nice.System: There are two flights that arrive in San Francisco at 3:45 and 4:35 but neitherof them is direct.
They both have availability in business class and take under15 hours.
One of them is on Continental Airlines and the other is on AirFrance.
There?s also a KLM flight, but its travel time is 18 hours 20 minutes.All other flights arrive later than you requested.Walter: Please tell me more about the Air France flight.System: The Air France flight leaves Edinburgh at 9:05 am and arrives San Franciscoat 3:45 pm.
You need to connect in Paris.
The flight costs 1,611 pounds onbusiness class.B: Dialogue between Walter and SR system:Walter: I?d like to book a flight from Edinburgh to San Francisco for tomorrow, arriv-ing around 4 pm.
It?s important for me to fly on business class.
A KLM flightwould be nice.System: I found one KLM flight with availability in business class.
It arrives at 3:45.You?d need to connect in Amsterdam.Walter: Are there any direct flights that arrive around 4 pm?System: There are no direct flights from Edinburgh to San Francisco.
However, thereare 7 flights that arrive San Francisco between 3 and 5 pm.
They all haveavailability in business class.Walter: How long does the KLM flight take?System: The KLM flight has a travel time of 18 hours 20.Walter: 18 h is very long.
Are any of those other 7 flights faster?System: There are three flights that take under 15 hours.
The British Airways flightarrives at 4:10 pm, the Continental Airways flight arrives at 4:35 pm and theAir France flight arrives at 3:45 pm.529Computational Linguistics Volume 37, Number 3Walter: Please tell me more about the Air France Flight.System: The Air France flight leaves Edinburgh at 9:05 am and arrives San Franciscoat 3:45 pm.
You need to connect in Paris.
The flight costs 1,611 pounds onbusiness class.Appendix 2: Dialogue Samples for Experiment 3Task descriptions for participants:Task A: You need to book a flight from Edinburgh to San Francisco departing onMay 12th.
You?d like to fly business class and arrive in San Francisco around4 pm, so that you have time to check into your hotel and shower before your7 o?clock dinner meeting.Task B: You need to book a flight from Edinburgh to Brussels departing on May 20th.You?d like to arrive by 6 pm so that you can make it to dinner with yourpossible new employer.Task C: You?re going from New York to Frankfurt departing on June 1st.
You?d like toarrive in the late morning so that you can make it to a meeting that begins at2 pm.Task D: You need to book a flight from San Francisco to Prague departing onJune 14th.
You have to attend a meeting in the late afternoon, so you needto arrive before 3 pm.Flight booking with SR system?Edinburgh to San FranciscoSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: I?d like to book a flight from Edinburgh to San Francisco.System: Please, tell me the date on which you want to travel.User: January 3rd.System: I found 20 flights from Edinburgh to San Francisco.
All these flights requireconnection.
There are flights available in economy, business, and first class.I also have information about arrival times.User: I?d like to fly business class.System: I found 5 business class flights from Edinburgh to San Francisco.
All theseflights require a connection.
There are flights on American Airlines, Lufthansa,and United Airlines.
I also have information about arrival times.User: What is their arrival times?System: Tell me your preferred arrival time?User: 4:00 pm.System: There are two business class flights from Edinburgh to San Francisco arrivingbetween 2:00 and 4:30 pm.
The first flight departs Edinburgh on Lufthansaat 5:40 am and arrives in San Francisco at 3:38 pm and requires a connectionin Frankfurt.
It costs 2,708 pounds.
The second flight departs Edinburgh onUnited Airlines at 8:30 am and arrives in San Francisco at 3:18 pm and requiresa connection at London Heathrow.
It costs 4,452 pounds.
Would you like tobook one of these flights?User: Yes.System: Which one do you want me to book for you?User: The first one.530Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsSystem: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with SR system?Edinburgh to San FranciscoSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yeah, I?d like to book another flight on January 3rd from Edinburgh toSan Francisco.System: I found 20 flights from Edinburgh to San Francisco.
All these flights require aconnection.
There are flights available in economy, business, and first class.
Ialso have information about arrival times.User: I?d like to fly business class and, uh, I?d like to arrive around 4:00 pm.System: There are two business class flights from Edinburgh to San Francisco arrivingbetween 2:00 and 4:30 pm.
The first flight departs Edinburgh on Lufthansaat 5:40 am and arrives in San Francisco at 3:38 pm and requires a connectionat Frankfurt.
It costs 2,708 pounds.
The second flight departs Edinburgh onUnited at 8:30 am and arrives in San Francisco at 3:18 pm and requires aconnection in London.
It costs 4,452 pounds.
Would you like to book one ofthese flights?User: Do you have any flights on KLM that get in around 4:00 pm that are alsobusiness?System: I found no business class flights from Edinburgh to San Francisco flying onKLM arriving between 2:00 and 4:30 pm.User: Ok, can you repeat the options for business class flights that arrive around4:00 pm?System: There are 2 business class flights from Edinburgh to San Francisco arrivingbetween 2:00 and 4:30 pm.
The first flight departs Edinburgh on Lufthansaat 5:40 am and arrives in San Francisco at 3:38 pm and requires a connectionin Frankfurt.
It costs 2,708 pounds.
The second flight departs Edinburgh onUnited at 8:30 am and arrives in San Francisco at 3:18 pm and requires aconnection at London.
It costs 4,452 pounds.
Would you like to book one ofthese flights?User: 4:00 pm.System: There are two business class flights from Edinburgh to San Francisco arrivingbetween 2:00 and 4:30 pm.
The first flight departs Edinburgh on Lufthansaat 5:40 am and arrives in San Francisco at 3:38 pm and requires a connectionin Frankfurt.
It costs 2,708 pounds.
The second flight departs Edinburgh onUnited Airlines at 8:30 am and arrives in San Francisco at 3:18 pm and requiresa connection at London Heathrow.
It costs 4,452 pounds.
Would you like tobook one of these flights?User: Yeah, I would like to book the first one on Lufthansa.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.
That?s it.
Thank you.System: OK, goodbye.531Computational Linguistics Volume 37, Number 3Flight booking with UMSR system?Edinburgh to San FranciscoSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Could I please go from Edinburgh to San Francisco on May 12th in businessclass?System: I found three flights from Edinburgh to San Francisco with availability inbusiness class.
They are on Lufthansa and United.User: Excellent, I would like to arrive in San Francisco at 3 or 4 pm, is there anythinglike that?System: There are two flights with availability in business class.
One is on United andarrives at 3:18 pm with a total travel time of only 14 hours and 48 minutes.The other flight is on Lufthansa and arrives at 3:45 pm, but it has a longertotal travel time of 17 hours and 58 minutes.
Would you like to book one ofthese flights?User: Yes, I?d like the one with the shorter travel time, please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No, thanks.System: OK, goodbye.Flight booking with UMSR system?Edinburgh to San FranciscoSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: I would like to book a flight from Edinburgh to San Francisco.System: Please, tell me the date on which you want to travel.User: January 3rd.System: There are no direct flights from Edinburgh to San Francisco but I found3 flights with availability in business class.
However, none of these 3 is onKLM.
To travel on KLM you?ll have to fly economy.User: Um, ok, I?ll fly business class with another airline.System: Please wait while I look up the database .
.
.
.
I found 3 flights from Edinburghto San Francisco with availability in business class.
They are on Lufthansa andUnited.
Do you have preferred departure or arrival time?User: I?d like to arrive around 4:00 pm.System: There are 2 flights with availability in business class.
One is on United andarrives at 3:18 pm with a total travel time of only 14 hours and 48 minutes.
Itcosts 4,452 pounds.
The other flight is on Lufthansa and arrives at 3:38 pmbut it has a longer total travel time of 17 hours and 58 minutes.
It costs2,708 pounds.
Would you like to book one of these flights?User: 4:00 pm.System: There are two business class flights from Edinburgh to San Francisco arrivingbetween 2:00 and 4:30 pm.
The first flight departs Edinburgh on Lufthansaat 5:40 am and arrives in San Francisco at 3:38 pm and requires a connectionin Frankfurt.
It costs 2,708 pounds.
The second flight departs Edinburgh onUnited Airlines at 8:30 am and arrives in San Francisco at 3:18 pm and requiresa connection at London Heathrow.
It costs 4,452 pounds.
Would you like tobook one of these flights?532Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsUser: I?ll book the United flight.
Get nice food.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.
Thanks.System: OK, goodbye.Flight booking with SR system?Edinburgh to BrusselsSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes, please.System: What would you like to book?User: I would like to book a flight from Edinburg to Brussels.System: Please, tell me the date on which you want to travel.User: On December 18th.System: I found 21 flights from Edinburgh to Brussels.
There are flights available ineconomy and business class.
There are direct flights as well as flights thatrequire a connection.User: I?d like a direct flight in business class.System: There are two direct business class flights from Edinburgh to Brussels.
Thefirst flight departs Edinburgh on BMI at 12 pm and arrives in Brussels at2:40 pm.
It costs 452 pounds.
The second flight departs Edinburgh at 3:55 pmand arrives in Brussels at 6:15 pm.
It costs 446 pounds.
Would you like to bookone of these flights?User: Yes.System: Which one do you want me to book for you?User: The first one.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with SR system?Edinburgh to BrusselsSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes, from Edinburgh to Brussels on December 18th.System: I found 21 flights from Edinburgh to Brussels.
There are flights available ineconomy and business class.
There are direct flights as well as flights thatrequire connection.User: I would like to fly business class on KLM.System: There is one business class flight from Edinburgh to Brussels flying on KLM.The flight departs Edinburgh on KLM at 12:40 pm and arrives in Brussels at4:50 pm and requires a connection at Amsterdam.
It costs 187 pounds.
Wouldyou like to book this flight?User: Yes, please.533Computational Linguistics Volume 37, Number 3System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with UMSR system?Edinburgh to BrusselsSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes.System: Tell me what do you want to book?User: I would like to go from Edinburgh to Brussels.System: Please, tell me the date on which you want to travel?User: December 18th.System: There are two direct flights from Edinburgh to Brussels with availability inbusiness class.
All other direct flights only offer availability in economy class.If you are willing to make a connection there is a KLM flight with businessclass availability arriving at 4:50 pm.User: Yes, I would like that KLM flight.System: Wait .
.
.
I found one flight from Edinburgh to Brussels with availability inbusiness class on KLM and it requires a connection in Amsterdam.
It arrivesat 4:50 pm with a total travel time of 3 hours and 10 minutes and costs187 pounds.
Would you like to book the KLM flight?User: Yes .
.
.
yes.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with UMSR system?Edinburgh to BrusselsSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes.System: Tell me what do you want to book?User: I would like to book a flight on KLM.System: From where to where?User: From Edinburgh to Brussels.System: Please, tell me the date on which you want to travel.User: December 18th.System: There are two direct flights from Edinburgh to Brussels with availability inbusiness class.
All other direct flights only offer availability in economy class.If you are willing to make a connection, there is a KLM flight with businessclass availability arriving at 4:50 pm.User: What time do the direct business flights arrive?534Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsSystem: Please wait while I look up the database.
I found two direct flights fromEdinburgh to Brussels with availability in business class.
Both flights are onBMI.
The first flight arrives at 6:30 pm with a total travel time of 1 hour and35 minutes.
The second flight arrives at 2:40 pm with a total travel time of1 hour and 40 minutes.
Would you like to book one of the BMI flights?User: No, neither of those flights will do, I need to fly on KLM.
What flights do youhave on KLM?System: I found one flight from Edinburgh to Brussels with availability in businessclass on KLM and it requires a connection at Amsterdam.
It arrives at 4:50 pmwith a total travel time of 3 hours and 10 minutes.
Would you like to book theKLM flight?User: I?d like to book the flight.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with SR system?San Francisco to PragueSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes.System: Tell me what do you want to book?User: Uhh, I want a flight from San Francisco to Prague.System: Please, tell me the date on which you want to travel.User: On January 30th.System: I found 21 flights from San Francisco to Prague.
All these flights require aconnection.
There are flights available in economy, business, and first class.
Ialso have information about price range.User: I?d like business class.System: I found 11 business class flights from San Francisco to Prague.
All these flightsrequire connection.
There are flights in the expensive and moderate pricerange.
I also have information about arrival times.User: Arrival around 3:00 pm.System: I found six business class flights from San Francisco to Prague, all arrivingbetween 1:00 and 3:30 pm.
All these flights require a connection.
I have infor-mation about departure times.
I also have information about price ranges.User: A flight on KLM?System: There is one business class flight from San Francisco to Prague flying on KLM,arriving between 1:00 and 2:30 pm.
The flight departs San Francisco on KLMat 3:20 pm and arrives in Prague at 2:20 pm and requires a connection inAmsterdam.
It costs 4,574 pounds.
Would you like to book this flight?User: Yes.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.535Computational Linguistics Volume 37, Number 3Flight booking with SR system?San Francisco to PragueSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes, from San Francisco to Prague on January 30th.System: I found 21 flights from San Francisco to Prague.
All these flights requireconnection.
There are flights available in economy, business, and first class.I also have information about price range.User: I would like to fly business class on KLM.System: There are two business class flights from San Francisco to Prague flying onKLM.
The first flight departs San Francisco on KLM at 3:20 pm and ar-rives in Prague at 2:20 pm and requires a connection at Amsterdam.
It costs4,574 pounds.
The second flight departs San Francisco on KLM at 11:20 amand arrives in Prague at 2:45 pm and requires a connection at Amsterdam.
Itcosts 4,574 pounds.
Would you like to book one of these flights?User: What time does the first flight arrive in Prague again?System: The first flight departs San Francisco on KLM at 3:20 pm and arrives in Pragueat 2:20 pm and requires a connection at Amsterdam.User: I?d like to book that flight.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with UMSR system?San Francisco to PragueSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: I do.
I need to go from San Francisco to Prague on June 14th.System: There are no direct flights from Edinburgh to Prague, but I found 14 flightswith availability in business class.
Two of these are on KLM.User: OK, I would like to go there on KLM and I have a meeting there at 4 pm.
Doyou have something coming in at around noon, or 1 pm?System: I found only one KLM flight with availability in business class that will getyou there on time.
It arrives at 2:20 pm with a total travel time of just 14 hoursbut it requires a connection in Amsterdam and costs 4,574 pounds.
All otherflights take longer.
Would you like to book the KLM flight?User: Yes, please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.
I don?t.System: OK, goodbye.Flight booking with UMSR system?San Francisco to PragueSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes, I would.536Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsSystem: Tell me what do you want to book?User: I?d like to book a flight from San Francisco to Prague.System: Tell me the date on which you want to travel, please.User: January 30th.System: There are no direct flights from San Francisco to Prague but I found 11 flightswith availability in business class.
Two of these are on KLM.User: I would like a business class flight on KLM, do you have anything arrivingbefore 3:00 pm?System: There are two business class flights from San Francisco to Prague on KLM thatwill get you there on time.
The first flight arrives at 2:45 pm with a total traveltime of 18 hours and 25 minutes.
The second flight arrives at 2:20 pm with atotal travel time of only 14 hours.User: I would like the second flight please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with SR system?New York to FrankfurtSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: I?d like to depart New York on June 1st and go to Frankfurt, please.System: I found 23 flights from New York to Frankfurt.
There are direct flights as wellas flights that require a connection.
I also have information about fare classes.User: I?d like a business class flight arriving before 2 pm, sorry, arriving before noon.System: I found 13 business class flights from New York to Frankfurt arriving between9 and 11:30 am.
There are direct flights as well as flights that require a connec-tion.
I also have information about departure times.User: I?d like a direct flight and if there is anything on KLM?System: I found no direct business class flights from New York to Frankfurt flying onKLM arriving between 9:30 am and 12:30 pm.User: I?ll just take a direct flight then between 9:30 and 12:30 pm, please.System: I found four direct business class flights from New York to Frankfurt.
All theseflights are in the moderate price range.
All these flights depart between 6 and9 pm.
The flights are on Continental, Delta, and Lufthansa.User: [Hesitation] Lufthansa, please.System: There is one direct business class flight from New York to Frankfurt flyingon Lufthansa arriving between 9:30 and 12:30 pm.
The flight departs NewYork on Lufthansa at 7:05 pm and arrives in Frankfurt at 9:55 am.
It costs2,190 pounds.
Would you like to book this flight?User: Sure, please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.537Computational Linguistics Volume 37, Number 3Flight booking with UMSR system?New York to FrankfurtSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes.System: Tell me what do you want to book?User: I would like to book a business class flight from New York to Frankfurt onKLM.System: Tell me the date on which you want to travel?User: January 15th.System: There are six direct flights from New York to Frankfurt with availability inbusiness class.
The only KLM flight with availability in business class arrivesat 1:35 pm and requires a connection.User: Tell me about the KLM flight.System: I found one flight with availability on business class from New York toFrankfurt on KLM.
It arrives at 1:35 pm with a total travel time of 12 hoursand 35 minutes and costs 1,260 pounds.
Would you like to book the KLMflight?User: Yes, please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with SR system?New York to FrankfurtSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yes, I would like to book a flight from New York to Frankfurt on January 15th.System: I found 23 flights from New York to Frankfurt.
There are direct flights as wellas flights that require connection.
I also have information about fare classes.User: I need a business class flight.System: I found 17 business class flights from New York to Frankfurt.
I have informa-tion about arrival times.
There are direct flights as well as flights that requireconnection.User: It should arrive in the late morning, around 11:00.System: I found 13 business class flights from New York to Frankfurt arriving between9:00 and 11:30 am.
There are direct flights as well as flights that requireconnection.
I also have information about departure times.User: How many of those flights are direct?System: I found 4 direct business class flights from New York to Frankfurt arrivingbetween 9:00 and 11:30 am.
All these flights are in the moderate price range.All these flights depart between 6:00 and 9:00 pm.
The flights are on United,Continental, and Delta.User: Are any on KLM?System: I found no direct business class flight from New York to Frankfurt flying onKLM arriving between 9:00 and 11:30 am.538Demberg, Winterboer, and Moore A Strategy for Information Presentation in SDSsUser: Ok, I?ll book one of the United flights.System: There is one direct business class from New York to Frankfurt flying on Unitedarriving between 9:00 and 11:30 am.
The flight departs New York on United at7:00 pm and arrives in Frankfurt at 9:10 am.
It costs 3,990 pounds.
Would youlike to book this flight?User: I?ll book the flight.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.Flight booking with UMSR system?New York to FrankfurtSystem: This is the FLIGHTS information system.
I am now connected to the network.Would you like to book a flight?User: Yeah, I would like to book a flight.System: Tell me what do you want to book?User: Well, I want to book a flight on January 15th, uh, and that?s going to be fromNew York to Frankfurt.System: There are six direct flights from New York to Frankfurt with availability inbusiness class.
The only KLM flight with availability in business class arrivesat 1:35 pm and requires a connection.User: Uh, well, I don?t think that?s going to be possible.
I do prefer to fly businessclass, though.
What are the other business options that will get me there in thelate morning?System: I found three direct flights from New York to Frankfurt with availability inbusiness class that will get you there on time.
But none are on KLM.
If youdon?t mind arriving earlier there is a shorter direct flight on United.User: When is that going to be?System: I found one direct United flight that departs at 7:00 pm and arrives at 9:10 am.It has the shortest total travel time of only 8 hours and 10 minutes and costs3,990 pounds.
Would you like to book the flight?User: Yes, I would like to book that one, please.System: Sounds good, let me book this flight for you.
This will take a moment.
Thankyou for waiting; the electronic ticket and itinerary have been emailed to you.Would you like to book another flight?User: No.System: OK, goodbye.539
