Pars ing  Id ioms in Lex ica l i zed  TAGs  *Anne Abeill~ and Yves SchabesLaboratoire Automatique Documentaire et LinguistiqueUniversity Paris 7, 2 place Jussieu, 75005 Paris Franceand Department of Computer and Information ScienceUniversity of Pennsylvania, Philadelphia PA 19104-6389 USAabeille/schabes~linc.cis.upenn.eduABSTRACTWe show how idioms can be parsed in lexieal-ized TAGs.
We rely on extensive studies of frozenphrases pursued at L.A.D.L) that show that id-ioms are pervasive in natural language and obey,generally speaking, the same morphological andsyntactical patterns as 'free' structures.
By id-iom we mean a structure in which some items arelexically frozen and have a semantics that is notcompositional.
We thus consider idioms of differ-ent syntactic ategories : NP, S, adverbials, com-pound prepositions.., in both English and French.In lexicalized TAGs, the same grammar is usedfor idioms as for 'free' sentences.
We assignthem regular syntactic structures while represent-ing them semantically as one non-compositionalentry.
Syntactic transformations and insertion ofmodifiers may thus apply to them as to any 'free'structures.
Unlike previous approaches, their vari-ability becomes the general case and their beingtotally frozen the exception.
Idioms are gener-ally represented by extended elementary trees with'heads' made out of several items (that need notbe contiguous) with one of the items serving as anindex.
When an idiomatic tree is selected by thisindex, lexical items are attached to some nodes inthe tree.
Idiomatic trees are selected by a singlehead node however the head value imposes lexicalvalues on other nodes in the tree.
This operationof attaching the head item of an idiom and itslexical parts is called lex ica l  a t tachment .
The?
resulting tree has the lexical items correspondingto the pieces of the idiom already attached to it.
*This work is partiMly supported (for the second au-thor) by ARO grant DAA29-84-9-007, DARPA grantN0014-85-K0018, NSF grants MCS-82-191169 and DCR-84-10413.
We have benefitted immensely from our discus-sions with Aravind Joshi, Maurice Gross and Mitch Mar-cus.
We want also to thank Kathleen Bishop, and SharonCote.1Laboratoire d'Automatique Documentaire et Linguis-tique, University of Paris 7.We generalize the parsing strategy defined forlexicalized TAG to the case of 'heads' made outof several items.
We propose to parse idioms intwo steps which are merged in the two steps pars-ing strategy that is defined for 'free' sentences.The first step performed uring the lexical passselects trees corresponding to the literal and id-iomatic interpretation.
However it is not alwaysthe case that the idiomatic trees are selected aspossible candidates.
We require that all basicpieces building the minimal idiomatic expressionmust be present in the input string (with possiblysome order constraints).
This condition is a nec-essary condition for the idiomatic reading but ofcourse it is not sufficient.
The second step per-forms the syntax analysis as in the usual case.During the second step, idiomatic reading mightbe rejected.
Idioms are thus parsed as any 'free'sentences.
Except during the selection process,idioms do not require any special parsing mech-anism.
We are also able to account for cases ofambiguity between idiomatic and literal interpre-tations.Factoring recursion from dependencies in TAGsallows discontinuous constituents to be parsed inan elegant way.
We also show how regular 'trans-formations' are taken into account by the parser.Topics: Pars ing,  Id ioms.1 In t roduct ion  to  Tree  Ad-jo in ing  GrammarsTree Adjoining Grammars (TAGs) were intro-duced by Joshi et al 1975 and Joshi 1985 asa formalism for linguistic description.
Their lin-guistic relevance was shown by Kroch and Joshi1985 and Abeill@ 1988.
A lexicalized version of theformalism was presented in Schabes, Abeill~ andJoshi 1988 that makes them attractive for writingcomputational grammars.
They were proved to be-1 -parsable in polynomial time (worst case) by VijayShanker and Joshi 1985 and an Earley-type parserwas presented by Schabes and Joshi 1988.The basic component of a TAG is a finite setof elementary trees that have two types: initialtrees or auxiliary trees (See Figure 1).
Both areminimal (but complete) linguistic structures andhave at least one terminal at their frontier (that istheir 'head').
Auxiliary trees are also constrainedto have exactly one leaf node labeled with a non-terminal of the same category as their root node.l n l t i * lxt.substitution nodes?
/ x \/ 3Figure 1: Schematic initial and auxiliary treesSentences of the language of a TAG are derivedfrom the composition of an S-rooted initial treewith elementary trees by two operations: substi-tution or adjunction.Substitution i serts an initial tree (or a tree de-rived from an initial tree) at a leaf node bearingthe same label in an elementary tree (See Fig-ure 2).
2 It is the operation used by CFGs.a._v/ \Figure 2: Mechanism of substitutionAdjunction is a more powerful operation: it in-serts an auxiliary tree at one of the correspondingnode of an elementary tree (See Figure 3).3TAGs are more powerful than CFGs but onlymildly so (Joshi 1983).
Most of the linguistic ad-vantages of the formalism come from the fact thatit factors recursion from dependencies.
Kroch andJoshi 1985 show how unbounded dependencies canbe 'localized' by having filler and gap as part of21 is the mark for substitution.SAt each node of an elementary tree, there is a featurestructure associated with it (Vijayshanker and Joshi, 1988).Adjunction constraints can be defined in terms of featurestructures and the success or failure of unification.
(?~) (8)Figure 3: Adjoiningthe same elementary tree and having insertion ofmatrix clauses provided by recursive adjunctions.Another interesting property of the formalism isits extended omain of locality, as compared tothat of usual phrase structure rules in CFG.
Thiswas used by Abeill~ 1988 to account for the prop-erties of 'light' verb (often called 'support' verb forRomance languages) constructions with only onebasic structure (instead of the double analysis orreanalysis usually proposed).We now define by an example the notion ofderivation in a TAG.Take for example the derived tree in Figure 4.SAd Syesterday NP VPA AD N V NPl i  I Ia MaN saw NIFigure 4: Derived tree for: yesterday a man sawMaryIt has been built with the elementary trees inFigure 5.sAS NP NPo$ VPA A AAd S D D,\[, N V NP~,I,i I I Iyesterday a man saw~adS\[yesterday\] c,D\[a\] ~NPdn\[man\]  c~tnl\[saw\]NPINIMaryaNPn\[Mary\]Figure 5: Some elementary treesUnlike CFGs, from the tree obtained by deriva--2 -tion (called the derived tree) it is not always pos-sible to know how it was constructed.
The deriva-tion tree is an object that specifies uniquely howa derived tree was constructed.The root of the derivation tree is labeled by anS-type initial tree.
All other nodes in the deriva-tion tree are labeled by auxiliary trees in the caseof adjunction or initial trees in the case of sub-stitution.
A tree address is associated with eachnode (except he root node) in the derivation tree.This tree address is the address of the node in theparent tree to which the adjunction or substitu-tion has been performed.
We use the followingconvention: trees that are adjoined to their par-ent tree are linked by an unbroken line to theirparent, and trees that are substituted are linkedby dashed lines.The derivation tree in Figure 6 specifies how thederived tree was obtained:atnlIsaw\]~Pdn\ [m~l  (1) ~II~\[M~'yl (2.2) I~adS\[yesterday\] (0),,!aD\[al (11Figure 6: Derivation tree for Yesterday a man sawMaryaD\[a\] is substituted in the tree aNPdn\[man\] atnode of address 1, aNPdn\[man\] is substituted inthe tree atnl\[saw\] at address 1, aNPn\[Mary\] issubstituted in the tree atnl\[saw\] at node 2.2 andthe tree \[3adS\[yesterday\] is adjoined in the treeatnl\[saw\] at node 0.In a 'lexicalized' TAG, the 'category' of eachword in the lexicon is in fact the tree structure(s)it selects.
4 Elementary trees that can be linked bya syntactic or a lexical rule are gathered in a TreeFamily, that is selected as a whole by the headof the structure.
A novel parsing strategy follows(Schabes, Abeill~, :loshi 1988).
In a first step, theparser scans the input string and selects the dif-ferent tree structures associated with the lexicalitems of the string by looking up the lexicon.
Ina second step, these structures are combined to-gether to produce a sentence.
Thus the parser usesonly a subset of the entire (lexicalized) grammar.4The nodes of the tree structures have feature structuresassociated with them, see footnote 3.2 Linguistic Propert ies of Id-iomsIdioms have been at stake in many linguistic dis-cussions since the early transformational gram-mars, but no exhaustive work based on exten-sive listings of idioms have been pursued beforeGross 1982.
We rely on L.A.D.L.
's work for Frenchthat studied 8000 frozen sentences, 20, 000 frozennouns and 6000 frozen adverbs.
For English, wemade use of Freckelton's thesis (1984) that listedmore than 3000 sentential idioms.
They showthat, for a given structure, idiomatic phrases areusually more numerous in the language than 'free'ones.
As is well known, idioms are made of thesame lexicon and consist of the same sequences ofcategories as 'free' structures.
An interesting ex-ception is the case of 'words' existing only as partof an idiomatic phrase, such as escampette in pren-dre la poudre d'escampette (to leave furtively) orumbrage in to take umbrage at NP.The specificity of idioms is their semant ic  non-compos i t iona l i ty .
The meaning of casser sa pipe(to die), cannot be derived from that of casser (tobreak) and that of pipe (pipe).
They behave se-mantically as one predicate, and for example thewhole VP casser sa pipe selects the subject of thesentence and all possible modifiers.
We thereforeconsider an idiom as one ent i ty  in the  lexicon.It would not make sense to have its parts listed inthe lexicon as regular categories and to have spe-cial rules to limit their distribution to this uniquecontext.
If they are already listed in the lexi-con, these existing entries are considered as merehomonyms.
Furthermore, usually idioms are am-b iguous between l i teral  and  id iomat ic  read-ings.Id ioms do not  appear  necessar i ly  as con-t lnuous  str ings in texts .
As shown by M. Grossfor French and P. Freckelton for English, morethan 15% of sentential idioms are made up of un-bounded arguments ,  (e.g.
NPo prendre NP1 encompte, NPo take NP1 into account, Butter wouldnot melt in NP's mouth).
Discontinuities can alsocome from the regu lar  app l i cat ion  o f  syntacticrules.
For example, interposition of adverbs be-tween verb and object in compound V-NP phrases,and interposition of modals or auxiliaries betweensubject and verb in compound NP-V phrases arevery general (Laporte 1988).As shown by Gazdar et al 1985 for English,and Gross 1982 for French, most sentential id-ioms are not  complete ly  f rozen and ' t ransfor -mat ions '  apply to them much more regularly-3-than is usually thought.
Freckelton 1984's list-ings of idiomatic sentences exhibit passivizationfor about 50% of the idioms comprised of a verb(different from be and have) and a frozen directargument.
Looking at a representative sample of2000 idiomatic sentences with frozen objects (fromGross's listings at LADL) yields similar results forpassivization and relativization of the frozen argu-ment for French.
This is usually considered a prob-lem for parsing, since the order in which the frozenelements of an idiom appear might thus vary.Recognizing idioms is thus dependent on thewhole syntactic analysis and it is not realistic toreanalyze them as simple categories in a prepro-cessing step.3 Representing Idioms inLexicalized TAGsWe represent idioms with the same elementarytrees as 'free' structures.
The values of the argu-ments of trees that correspond to a literal expres-sion are introduced via syntactic categories andsemantic features.
However, the values of argu-ments of trees that correspond to an idiomaticexpression are not only introduced via syntacticcategories and semantic features but also directlyspecified.3 .1  Extended E lementary  TreesSome idioms select he same elementary tree struc-tures as 'free' sentences.
For example, a sententialidiom with a frozen subject il/aut S1 selects thesame tree family as any verb taking a sententialcomplement (ex: NP0 dit $1), except that ii isdirectly attached in subject position, whereas a'free' NP is inserted in NPo in the case of 'dit'(See Figure 7).S SNP0 VP NP0$ VPIA  Ail V Sl V $1I Ifaut ditFigure 7: trees for il faut and ditUsually idioms require elementary trees that aremore expanded.
Take now as another examplethe sentential idiom N Po kicked the bucket.
Thecorresponding tree must be expanded up to theD1 and N1 level, the (resp.
bucket) is directlyattached to the D1 (resp.
N1) node (See Figure 8).S/NNPo~ VPv Ni lkicked D1 NII Ithe bucketFigure 8: Tree for N Po kicked the bucket3.2  Mu l t i component  HeadsIn the lexicon, idiomatic trees are represented byspecifying the elements of the idiom.
An idiomas NPo kicked the bucket is indexed by a 'head'(kicked) which specifies the other pieces of the id-iom.
Although the idiom is indexed by one item,the pieces are considered as its multicomponentheads.5We have, among others, the following entries inthe lexicon: 6kicked , V : Tnl (transitive verb) (a)kicked , V : Tdnl\[D1 = the, N1 = bucket\] (idiom) (b)the , D : aD (e)bucket , N : aNPdn (d)John , N : aNP (e)The trees aNPdn and aNPn are: 7NP NPI (aNPn) A (aNPdn)NO D$ NOAmong other trees, the tree a tn l  is in the familyTnl and the tree a tdn l  is in the family Tdnl :SS NPo$ VPA ANP0J, VP (c~tnl) V0 NPIV0 NPIJ, DiS N15(atdnl)5The choice of the item under which the idiom is indexedis most of the time arbitrary.eThe lexical entries are simplified to just illustrate howidiom are handled.ro marks the node under which the head is attached.-4-NP NPI I IJohn the bucket(aNPn\[John\]) (aD\[the\]) (aNPdn\[bucket\])SAA NPo$ VPNPo$ VP A V NP1V NPI$ kicked DI N1I I Ik icked  the bucket(atnl \[kicked\])(atdnl \[kicked-the-bucket\])Figure 9: Trees selected for the inputJohn kicked the bucketSuppose that the input sentence is John kickedthe bucket.
The first entry for kicked (a) speci-fies that kicked can be attached under the V nodein the tree atdnl (See the tree c~tnl\[kicked\] inFigure 9).
However the second entry for kicked(b) specifies that kicked can be attached underthe V node and that the must be attached un-der the node labeled by D1 and that bucket mustbe attached under the node labeled N1 in thetree atnl  (See the tree atdnl\[kicked-the-bucket\]in Figure 9).In the first pass, the trees in Figure 9 are beselected (among others).Some idioms allow some lexical variation, usu-ally between a more familiar and a regular use ofthe same idiom, for example in French NPo per.dre la t~te and NPo perdre ia boule (to get mad).This is represented by allowing disjunction on thestring that gets directly attached at a certain posi-tion in the idiomatic tree.
NPo perdre ia t~te/boulewill thus be one entry in the lexicon, and we donot have to specify that t~te and boule are synony-mous (and restrict his synonymy to hold only forthis context).3.3 Selection of Idiomatic TreesWe now explain how the first pass of the parseris modified to select he appropriate possible can-didates for idiomatic readings.
Take the previ-ous example, John kicked the bucket.
The verbkicked will select he tree atdnl  \[kicked-the-bucket\]for an idiomatic reading.
However, the values ofthe determiner and the noun of the object nounphrase are imposed to be respectively the andbucket.
The determiner and the noun are at-tached to the tree atdnl\[kicked-the-bucket\], how-ever the tree atdnl\[kicked-the-bucket\] is selectedif the words kicked, the and bucket appear in theinput string at position compatible with the treeatrial\[kicked-the-bucket\].
Therefore they must re-spectively appear in the input string at some po-sition i, j and k such that i < j < k. If it is notthe case, the tree atdnl\[kicked-the-bucket\] is notselected.
This process is called lexical attach-ment.For example the word kicked in the fol-lowing sentences will select the idiomatic treeatdn 1 \[kicked-the-bucket\]:John kicked the bucket (sl)John kicked the proverbial bucket (sP)John kicked the man who wascarrying the bucket (s3)The parser will accept sentences sl and sP as id-iomatic reading but not the sentence s3 since thetree atdnl\[kicked-the-bucket\] will fail in the parse.In the following sentence the word kicked will notselect he idiomatic tree atdnl\[kicked-the-bucket\]:John kicked Mark (s4)John kicked a bucket (sS)John who was carrying a bucketkicked the child (s6)What did John kick?
(sT)This test cuts down the number of idiomatictrees that are given to the parser as possible can-didates.
Thus a lot of idioms are ruled out beforestarting the syntactic analysis because we knowall the lexical items at the end of the first pass.This is important because a given item (e.g.
averb) can be the head of a large number of idioms(Gross 82 has listed more than 50 of them for theverb manger, and prendre or avoir yield thousandsof them).
However, as sentence s3 illustrates, thetest is not sufficient.What TAGs allow us to do is to define mul-ticomponent heads for idiomatic structures with-out requiring their being contiguous in the inputstring.
The formalism also allows us to accessdirectly the different elements of the compoundwithout flattening the structure.
As opposed toCFGs, for example, direct dependencies can beexpressed between arguments that are at differ-ent levels of depth in the tree without having topass features across local domains.
For example,in NPo rider DET sac (to express all of one's se--5 -,~" 2 'cret thoughts), the determiner of the object sachas to be a possessive and agree in person withthe subject : je vide mon sac, tu rides ton sac...In NPo dire DET quatre veritds a NP2 (to tellsomeone what he really is), the determiner of theobject veritds has to be a possessive and agree inperson with the second object NP2 : je te dis tesquatre veritds, je lui dis ses quatre verit~s.4 Literal and IdiomaticReadingsOur representation expresses correctly that id-ioms are semantically non-compositional.
Treesobtained by lexical attachment of several exicalitems act as one syntactic unit and also one se-mantic unit.For example, the sentence John kicked thebucket can be parsed in two different ways.
Onederivation is built with the trees: atnl\[kicked\](transitive verb), aNPn\[John\], aD\[the\] andaNPn\[bucket\] .
It corresponds to the literal in-terpretation; the other derivation is built with thetrees: atdnl\[kicked-the-bucket\] (idiomatic tree)and aNPn\[John\] (John):c~tnl\[ kicked\]oNPn\[Johnl (1) oaNPdn\[bucketl (2.2)ctD\[ the\] (1)literal derivationHowever, both derivations have the same de-rived tree:sgatdnl\[kicket- he- bucket\]!I!~NI~\[ John\] (1)idiomatic derivationNP VPN V NPJohn kicked D NI Ithe bucketThe meaning of kicked the bucket in its idiomaticreading cannot be derived from that of kicked andthe bucket.
However, by allowing arguments to beinserted by substitution or adjunction (in for ex-ample atdn l  \[kicked-the-bucket\]), we represent thefact that NPo kicked the bucket acts as a syntacticand semantic unit expecting one argument NPo.Similarly, NPo kicked NP1 in atnl\[kicked\] acts asa syntactic and semantic unit expecting two argu-ments NPo and NP1.
This fact is reflected in thetwo derivation trees of John kicked the bucket.However, the sentential idiom 'il fant $1', is notparsed as ambiguous, since faut has only one en-try (that is idiomatic) in the lexicon.
When acertain item does not exist except in a specificidiom, for example umbrage in English, the cor-responding idiom to take umbrage of NP will notbe parsed as ambiguous.
The same holds whena item selects a construction only in an idiomaticexpression.
Aller, for example, takes an obligatoryPP  (or adverbial) argument in its non-idiomaticsense.
Thus the idiom:aller son train (to follow one's way)is not parsed as ambiguous ince there is no freeNPo aller NP1 structure in the lexicon.We also have ambiguities for compound nom-inals such as carte bleue, meaning either creditcard (idiomatic) or blue card (literal), and for com-pound adverbials like on a dime: John stopped ona dime will mean either that he stopped in a con-trolled way or on a 10 cent coin.Structures for literal and idiomatic readings areboth selected by the parser in the first step.
Sincesyntax and semantics are processed at the sametime, the sentence is analyzed as ambiguous be-tween literal and idiomatic interpretations.
Thederived trees are the same but the derivation treesare different.
For example, the adjective bleue se-lects an auxiliary tree that is adjoined to carte inthe literal derivation tree, whereas it is directlyattached in a complex initial tree in the case ofidiomatic interpretation.All frozen elements of the idiom are directlyattached in the corresponding elementary trees,and do not have to exist in the lexicon.
Theyare thus distinguished from 'free' arguments thatselect their own trees (and their own semantics)to be substituted in a standard sentential tree.Therefore we distinguish two kinds of semantic op-erations: substitution (or adjunction) correspondsto a compositional semantics; direct attachment,on the other hand, makes different items behaveas one semantic unit.One should notice that non-idiomatic readingsare not necessarily literal readings.
Since featurestructures are used for selectional restrictions ofarguments, metaphoric readings can be taken intoaccount (Bishop, Cote and Abeill~ 1989).We are able to handle different kinds of seman-tic non-compositionality, and we do not treat asidiomatic all cases of non-literal readings.-6 -sANP0$ VPV NPI~, PP2/VAI Atakes P2 NP2NAI Iinto N2/VAIaccountFigure 10: Tree for NPo takes NP1 into accountNPo VPNo V NPII A AJean Aux V Dt N1I I I Ia casse sa pipeliteralSNP o VPNo V NPINAI A AJean Aux V D t NINAI I I 1a casse sa pipeidiomFigure 11: Jean a cassg sa pipe5 RecognizingDiscontinuous IdiomsParsing flexible idioms has received only partialsolutions o far (Stock 1987, Laporte 1988).
SinceTAGs factor recursion from dependencies, discon-tinuities are captured straightforwardly withoutspecial devices (as opposed to Johnson 1985 orBunt et al 1987).
We distinguish two kinds of dis-continuities: discontinuities that come from inter-nal structures and discontinuities that come fromthe insertion of modifiers.5.1 In terna l  D iscont inu i t iesSome idioms are internally discontinuous.
Take forexample the idioms NPo prendre NP1 en compteand NPo takes NP1 into account (see Figure 10).
sThe discontinuity is handled simply by argu-ments (here NPo and NP1) to be substituted(or adjoined in some cases) as any free sentences.The internal structures of arguments can be un-bounded.5.2 Recurs ive  Inser t ions  o f  Mod i -f iersSome adjunctions of modifiers may be ruled outin idioms or some new ones may be valid onlyin idioms.
If the sentence is possibly ambiguousbetween idiomatic and literal reading, the adjunc-tion of such modifiers force the literal interpre-tation.
For example, in NPo casser sa pipe (todie) , the NP1 node in the idiomatic tree bears anull adjunction constraint (NA).
The sentence H acassd sa pipe en bois (he broke his wooden pipe) isSNA expresses the fact that the node has null adjunctionconstraintthen parsed as non-idiomatic.
This NA constraintwill be the only difference between the two derivedtrees (See Figure 11): Jean a cass~ sa pipe (literal)and Jean a cassg sa pipe (idiomatic).But most idioms allow modifiers to be insertedin them.
Each modifier can be unbounded (e.g.with embedded adjunct clauses) and their inser-tion is recursive.
We treat these insertion by ad-junction of modifiers in the idiomatic tree.
How-ever constraint of adjunction and feature structureconstraints filter out partially or totally the inser-tion of modifiers at each node of an idiomatic tree.In a TAG, the internal structure of idioms is spec-ified in terms of a tree, and we can get a unifiedrepresentation forsuch compound adverbials asla limite and ~ l' extreme limite (if there is no otherway) or such complex determiners as a bunch of(or ia majoritd de NP ) and a whole bunch of NP(resp.
la grande majoritd de NP) that will not haveto be listed as separate ntries in the lexicon.
Theadjective whole (resp.
grande) adjoins to the nounbunch (resp.
majoritd ), as to any noun.
Take abunch of NP .
The adjective whole adjoins to thenoun bunch as to any noun (See Figure 12) andbuilds a whole bunch of.In order to have a modifier with the right fea-tures adjoining at a certain node in the idiom, weassociate some features with the head of the id-iom (as for heads of 'free' structures) but also withelements of the idiom that are directly attached.Unification equations, uch as those constrainingagreement, are the same for trees selected by id-ioms and trees selected by 'free' structures.
Thusonly grande that is feminine singular, and notgrand for example, can adjoin to majorit~ thatis feminine singular.
In il falloir NP, the frozensubject il is marked 3rd person singular, and onlyan auxiliary like va (that is 3rd person singular)and not vont (3rd person plural) will be allowedCP---C -7 -\NPD N PP\[ I Aa bunch P NPIofNAAN\[wholeNPD N PPby adjunction: \] ~ Aa A N PNPI I Iwhole  bunch ofFigure 12: Trees for a whole bunch ofto adjoin to the VP: il va falloir $1 and not il vontfalloir $1.As another example, an idiom such as lamoutarde monte au nez de NP (NP looses his tem-per) can be represented as contiguous in the ele-mentary tree.
Adjunction takes place at any inter-nal node without breaking the semantic unity ofthe idiom.
For example, an adjunct clause headedby anssit6t can adjoin between the frozen subjectand the rest of the the idiom in la moutarde mon-ter au nez de NP2 : la montarde, aussitSt queMarie enlra, monta an nez de Max (Max, as soonas Marie got in, lost his temper).
Similarly, aux-iliaries adjoin between frozen subjects and verbsas they do to 'free' VPs: There might have beena boz on the table is parsed as being derived fromthe idiom : there be NP1 P NP2.It should be noted that when a modifier adjoinsto an interior node of an idiom, there is a semanticcomposition between the semantics of the modi-fier and that of the idiom as a whole, no matterat which interior node the adjunction takes place.For example, in John kicked the proverbial bucketsemantic composition happens between the 3 unitsJohn, kick-the-bucket, and proverbial.
9 Semanticcomposition will be done the same way if an ad-junct clause were adjoined into the VP.
In Johnkicked the bucket, as the proverb says, composi-tion will happen between John, kick-the.bucket,and the adjunct clause considered as one predi-cate as-proverb-say:9This is the case of a modifier where adjoining isvalidonly for the idiom.Therefore parsing flexible idioms is reduced tothe general parsing of TAGs (Schabes and Joshi1988).6 Tree Famil ies and Appl i -cat ion of  'Transformat ions'to Id iomsAs in the case of predicates in lexicalized TAGs,sentential idioms are represented asselecting asetof elementary trees and not only one tree.
Thesetree families gather all elementary trees that arepossible syntactic realizations of a given argumentstructure.
The family for transitive verbs, for ex-ample, is comprised of trees for wh-question on thesubject, wh-question on the object, relativizationon the subject, relativization on the object, and soon.
In the first pass, the parser loads all the treesin the tree family corresponding to an item in theinput string (unless certain trees in that family donot match with the feature of the head in the inputstring).The same tree families are used with idioms.However some trees in a family might be ruledout by an idiom if it does not satisfy one of thethree following requirements.First, the tree must have slots in which thepieces of the idiom can be attached.
I?
If onedistinguishes syntactic rules that keep the lexicalvalue of an argument in a sentence (e.g.
topical-ization, cleft extraction, relativization...), and syn-tactic rules that do not (deleting the node for thatargument, or replacing it by a pronoun or a wh-element; e.g.
: wh-question, pronominalization), itcan be shown that usually only the former appliesto frozen elements of an idiom.
If you take the id-iom bruler nn fen (to run a (red) light), relativiza-tion and cleft extraction, but not wh-question, arepossible on the noun fen, with the idiomatic read-ing:Le fen que Jean a brulg.C'est nn fen que Jean a brulg.?
Que brule Jean ?Second, if all the pieces of an idiom can be at-tached in a tree, the order imposed by the treemust match with the order in which the pieces ap-pear in the input string.
Thus, if enfant appearsbefore attendre in the input string, the hypothe-sis for an idiomatic reading will be made but onlythe trees corresponding to relativization, cleft ex-lOTllis requirement is independent of he input string.-8 -traction, topicalization i which enfant is requiredto appear before attendre will be selected.
But ifthe string enfant is not present at all ih the inputstring, the idiomatic reading will not be hypoth-esized, and trees corresponding to qui attend-ellewill never be selected as part of the family of theidiom attendre nn enfant.Third, the features of the heads of an idiommust unify with those imposed on the tree (asfor 'free' sentences).
For example, it has to bespecified that bncket in to kick the bucket does notundergo relativization or passivization, whereastabs in to keep tabs on NP does.
It is well knownthat even for 'free' sentences application of thepassive, for example, has somehow to be speci-fied for each transitive verbs since there are lexicalidiosyncrasies, aa The semantics of the passive tabswere kept on NP by NP is exactly the same as thatof the active NP keep tabs on NP, since differenttrees in the same tree families are considered as(semantically) synonymous.7 Conclus ionWe have shown how idioms can be processed inlexicalized TAGs.
We can access simultaneouslyfrozen elements at different levels of depths whereCFGs would either have to flatten the idiomaticstructure (and lose the possibility of regular in-sertion of modifiers) or to use specific devices tocheck the presence of an idiom.
We can also putsentential idioms in the same grammar as freesentences.
The two pass parsing strategy we usecombining with an operation of direct attachmentof lexical items in idiomatic trees, enables us tocut down the number of idiomatic trees that theparser takes as possible candidates.
We easily getpossibly idiomatic and literal reading for a givensentence.
The only distinctive property of idiomsis the non-compositional semantics of their frozenconstituents.
The extended omain of locality ofTAGs allows the two problems of internal discon-tinuity and of unbounded interpositions tobe han-dled in a nice way.ReferencesAbeill6, Anne, 1988.
Parsing French with Tree AdjoiningGrammar: some Linguistic Accounts.
In Proceedings of the12 th International Conference on Computational Linguis-tics (Coling'88).
Budapest.alUnless one thinks that some regularity might show upif one distinguishes different kinds of direct complementswith thematic roles.Bishop, Kathleen M.; Cote, Sharon; and Abeill6, Anne,1989.
A Lezicalized Tree Adjoining Grammar for English.Technical Report, Department of Computer and Informa-tion Science, University of Pennsylvania.Bunt, et al, 1987.
Discontinuous Constituents in Trees,Rules and Parsing.
In Proceedings of European Chapter ofthe A CL '87.
Copenhagen.Freckelton, P., 1984.
Une Etude Comparative des E~:pres-sions Idiomatiques de I'Anglais et du Franfais.
PhD thesis,Th~se de troisi~me cycle, University Paris 7.Gazdar, G.; Klein, E.; Pullum, G. K.; and Sag, I. A.,1985.
Generalized Phrase Structure Grammars.
BlackwellPublishing, Oxford.
Also published by Harvard UniversityPress, Cambridge, MA.Gross, Maurice, 1982.
Classification des phrases fig~es enF~ran~ais.
Revue Qu~b~coise de Linguistique 11(2).Johnson, M., 1985.
Parsing with discontinuous elements.In Proceedings of the ~3rd A CL meeting.
Chicago.Joshi, Aravind K., 1985.
How Much Context-Sensitivityis Necessary for Characterizing Structural Descriptions--Tree Adjoining Grammars.
In Dowty, D.; Karttunen, L.;and Zwicky, A.
(editors), Natural Language Processing--Theoretical, Computational and Psychological Perspec-tives.
Cambridge University Press, New York.
Originallypresented in a Workshop on Natural Language Parsing atOhio State University, Columbus, Ohio, May 1983.Joshi, A. K.; Levy, L. S.; and Takahashi, M., 1975.
TreeAdjunct Grammars.
J Comput.
S~./st.
Sci.
1O(1).Kroch, A. and Joshi, A. K., 1985.
Linguistic Relevanceof Tree Adjoining Grammars.
Technical Report MS-CIS-85-18, Department of Computer and Information Science,University of Pennsylvania.Laporte, E., 1988.
Reconnaissance d s expressions fig~eslors de l'analyse automatique.
Langages.
Larousse, Paris.Sehabes, Yves and Joshi, Aravind K., 1988.
An Earley-Type Parsing Algorithm for Tree Adjoining Grammars.
In26 th Meeting of the Association for Computational Lin-guistics.
Buffalo.Schabes, Yves; Abeill6, Anne; and Joshi, Aravind K., 1988.Parsing Strategies with 'Lexicalized' Grammars: Applica-tion to Tree Adjoining Grammars.
In Proceedings of the12 th International Conference on Computational Linguis?tics.Stock, O., 1987.
Getting Idioms in a Lexicon BasedParser's Head.
In Proceedings of A CL'87.
Stanford.Vijay-Shanker, K. and Joshi, A. K., 1985.
Some Compu-tational Properties of Tree Adjoining Grammars.
In 23 rdMeeting of the Association for Computational Linguistics,pages 82-93.Vijay-Shanker, K. and Joshl, A.K., 1988.
Feature Struc-ture Based Tree Adjoining Grammars.
In Proceedings ofthe 12 th International Conference on Computational Lin-guistics (Coling'88).
Budapest.-9 -
