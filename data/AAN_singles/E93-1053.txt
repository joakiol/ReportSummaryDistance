Loca l i s ing  Bar r ie rs  TheoryMichael Schiehlen*Institute for Computational Linguistics, University of Stuttgart,Azenbergstr.
12, W-7000 Stuttgart 1E-mail: mike@adler.ims.uni-stuttgart.de1 Introduct ionGovernment-Binding Parsing has become attractivein the last few years.
A variety of systems have beendesigned in view of a correspondence as direct as pos-sible with linguistic theory (\[Johnson, 1989\], \[Pollardand Sag, 1991\], \[Kroch, 1989\]).
These approachescan be classified by their method of handling globalconstraints.
Global constraints are syntactic in na-ture: They cover more than one projection.
In con-trast, local constraints can be checked inside a pro-jection and, thus, lend themselves to a treatment inthe lexicon.
Conditions on features have been thesubject of intensive study and viable logics havebeen proposed for them (see e.g.
the CUF formalism\[Dhrre and Eisele, 1991\], \[Dorna, 1992\]).
In this pa-per, we assume such a unification-based mechanismto take care of local conditions and focus on globalconstraints.
One class of approaches to principle-based parsing (see \[Pollard and Sag, 1991\] for HPSG,\[Kroch, 1989\] for TAG) attempts to reduce globalconditions to local constraints and thus to makethem accessible to treatment in a feature framework.This strategy has been pursued only at the expenseof sacrificing the precise formulation of the theoryand the definitory power stemming from it.
The re-sult has been a shift from the structural perspec-tive assumed by GB theory to the object-orientedview taken by unification formalisms.
The other classof approaches (\[Johnson, 1989\]) has allowed the fullrange of possible restrictions on trees and has in-curred potential undecidability for its parsers.
Wetake up a middle stance on the matter in that wepropose a separate logic for global constraints andposit that global constraints only work on ancestorlines (see 7).We assume "movement" o be encoded by the kind ofgap-threading technique familiar from HPSG, LFG.In order to integrate global constraints a "state" (in-formation that serves to express barrier configura-tions in the part of the tree which has already beenbuilt up) is associated with each "chain" (informa-tion about a moved element).
Following H PSG, LFG,we have in mind a rule-based parser.
Thus, states aremanipulated when rules are chained.
We need a cal-culus that is able to derive global constraints workingon a local basis.
We begin by developing this calculushand in hand with an analysis of Chomsky's frame-*I wish to thank Robin Cooper, Mark Johnson andEsther KSnig-Baumer for comments on earlier versionsof this paper.work.
We then go on to show that many approachesto barriers theory and a variety of diverse phenom-ena can be moulded into our format and concludewith an indication of ways to use the system on-lineduring parsing.2 Dependenc ies  Between NodesWe take a tree T to be a structure (N,>), whereN is a set of nodes and > stands for dominance, abinary relation on N. We say that nodes a and bare connected iff a > b V b > a V a = b.
We definethe relation of immediate dominance ~- between twonodes a and b as a > b A ~3c : a > c A c > b. Dominanceis an irreflexive partial order relation satisfying theaxioms (1--3).
Ancestors of a node are connected (1),there exists a (single) root (2), dominance reduces toimmediate dominance (3).
Variables are universallyquantified unless specified otherwise.
(1) z>z  A y>z --* x connected with y(2) ~xVy : x > y(3) x>z  ~ 3y : x~y A y>zChomsky \[1986, 9,30\] discusses everal definitions forconstraints on unbounded ependencies.
(13) a c-commands/~ iff a does not domi-nate/~ \[and/~ does not dominate or equal a\]and every 7 that dominates a dominates/~.Where 7 is restricted to maximal projec-tions we will say that a m-commands/?.
(18) a governs/~ iff a m-commands/~ andthere is no 7, 7 a harrier for/~/, such that 7excludes a.
(59)/~ is n-subjacent to a iff there are fewerthan n+l  barriers for/~ that exclude a.All of these can be moulded into the general formatintroduced in (4): Two nodes can only stand in a re-lation R if they are unconnected and, furthermore, atmost n barriers for the second node do not dominatethe first one.
The notion of a barrier B remains tobe specified.
For now, we only demand that barrier-hood entail dominance.
We call relations that satisfyaxiom (4) definable with barrier concepts, for shortBC-definable.443(4) aRb ~-* a, b unconnected ^I{c I B(c,b) ^  -,e>a}l < nBalanced relations like government require a defini-tion in terms of two BC-definable relations: Rl(a, b)and R2(b, a).
(5) B(c,b) ~c>bWe can show several properties of BC-definable re-lations.
The nodes are unconnected.
(6) aRb ---* a, b unconnectedIn order to investigate BC-definable relations it suf-fices to investigate the ancestor lines of their secondargument b (that is {y J y >_ b}).
(7) x~-y A z>a l  A ",y>__al A x>a2 A -w>_a~A y>b --* (alRb ~ a2Rb)(7) gives rise to equivalence classes for the first argu-ment of R. For a particular pair (a,b) we can alwaysfind a y as defined in (8).
(s) a ?
^ x>a ^  y>a ^  y>bDefinable relations are never empty.
Barriers are pre-served in the upward direction of the ancestor line:(9) \[y\]Ry(10) x>y ^  \[xlP(10) is less innocent han it looks.
I give a revealingbinding example from Kamp and Reyle \[1993\].If \[cP=~ \[cP=y hei sees Mary \] and shesmiles\] John/ is happy.
*\[cP=~ \[vP=~ Hei sees Mary \] and John/ishappy\].3 Bar r ie r  Def in i t ions3.1 AdjunctionAdjunction rules raise a problem for algebraic in-vestigations of barriers theory (e.g.
\[Kracht, 1992\]):They insert material into a tree but do not cre-ate new projections.
Thus, adjunction rules implya distinction between projections and segment nodesthat correspond to graph-theoretical nodes.
We shalluse Greek letters to refer to projection nodes andLatin letters for segment nodes.
The only way tocreate projections covering more than one segmentis through adjunction.
Since adjunction rules haveequivalent mother and daughter nodes, projectionsare coherent in the sense that:Va ~ fl Vbi, b2 ?
f~ : a > bi --* a > b2Chomsky \[1986\] defines projection dominance so thatdominates ~ only if every segment of a domi-nates (every segment of) f/.
In case this definitionis not empty, (1) guarantees a unique minimal seg-ment a,~in of a.
Thus, we can rephrase Chomsky'sdefinition in terms of segment nodes and get that adominates fl just in case the minimal segment of adominates some segment of 3.
(11) dominate(a,/3) *-+ a e a A b ?
/3  Aminimal segment(a) A a > bLikewise, Chomsky's definition of exclusion, viz thata excludes j3 if no segment of a dominates (any seg-ment of) /3, can be transformed to the equivalentcondition that a excludes/3 if the maximal segmentof a does not dominate a segment of 3.
(12) exclude(aft)  ~ a E a A b e fl Amaximal segment(a) A --a > bThis way, we reduce projection dominance to seg-ment dominance.
In (13--15), conditions of segmentminimality or maximality are included where theyare appropriate by (11) and (12).3.2 Chomsky 's  TheoryChomsky \[1986, 14\] gives the following two core def-initions for barriers.
We are not concerned about theexact formulation of L-marking (for a definition see\[Chomsky, 1986, 24\]).
(25) 7 is a blocking category for fl iff7 is not L-marked and 7 dominates/3.
(26) 7 is a barrier for ~ iff (a) or (b):a.
7 immediately dominates 6,a blocking category for 3;b.
7 is a blocking category for 3, 7 ~ IP.We understand 7 in (25) and (26) to bea maximal projection, and we understand"immediately dominate" in (26a) to be arelation between maximal projections (sothat 7 immediately dominates 5 in thissense even if a nonmaximal projection in-tervenes).Formulation of these definitions in first order logicyields (13--15).
In order to obtain an open-endeddefinition scheme the equivalence of the above defi-nitions is held implicit: Barrier concepts are true iffthey comply with a manifest definition (see also 22and 23).
(13) blocking category(c,b) ?
::maximal projection(c) A444-, L-marked(c) Aminimal segment(c) Ac>b.
(14) barrier(c,b)maximal projection(c) Aminimal segment(c) A3d : blocking category(d,b) Ac>dAVe:c>e>d- -+-, ( maximal projection(e) Aminimal segment(e) ).
(15) barrier(c,b) ?=blocking category(c,b) A-,IP(c).We regard unary predicates as local conditions (L)and binary predicates as global concepts (B for "bar-rier concept").
Abstracting over the particular predi-cates involved we end up with the following definitionschemes (16 for 13 and 15, 17 for 14).
(16) B(c, b) ?=L(e) Ac>b.
(17) S(e, b)L(e) A3d : B(d, b) Ae>dAVe : e>e >d ~ ",L(e).We call the existential subformula of (17) an inher-itance clause I.
The only global conditions in oursystem are inheritance clauses and c> b, a conditionthat always holds for barrier concepts (see 5).
We willdiscuss in detail a way to derive inheritance clauseson a rule to rule basis.
For the sake of concisenesswe adopt the following abbreviation for inheritanceclauses.35 : B(d, b) A e > d A Ve : c > e > d --* -,L(e),: yI(c,b,B,L)3.3 Negat ive Inher i tance ClausesIt has interesting repercussions to incorporate ascheme with a negated inheritance clause, viz.
(18).
(18) B(e, b)L(c) Ac>bA-,3d : B(d, b) Ac>dAVe : c>e>d-*  -,L(e).For illustration we discuss several applications fornegative inheritance clauses.Chomsky \[1986, 37\] talks about IPs as inherent bar-riers, this effect being restricted to the most deeplyembedded tensed IP.
To capture this concept we onceagain need a negative inheritance clause: An IP ismost deeply embedded if it does not dominate anyother IP.
(20) barrier(Tfl) ?=tensed IP(7) A7>8A--,36 : IP(6,8) A7>6.IP(7,3) ~ IP(7) A 7>8.A feature of negative inheritance clauses that is de-sirable in many cases is that they allow to cancelbarriers higher up in the tree.
They can be used tocircumvent (24).
Classical GB theory has had to re-sort to a variety of tricks to account for discontinuousdomains.
A case in point is the coherent infinitiveconstruction found in German and Dutch ~.
A stan-dard account is to reanalyse 0-structure into anotherstructure that lacks the annoying barrier-generatingnodes.
Different submodules of the theory will workon different structures.
Consider the following exam-ple.dab \[cP \[tP PRO \[vp \[NP der Wagen\] zureparieren\]\]\] [v versucht\] wurdeIn this example V governs NP but not "PRO" eventhough "PRO" intervenes between V and NP.
CPmight be called a phantom barrier.
Generally, a phan-tom (like CP, IP above) is a barrier just in case itdoes not dominate a non-phantom (VP above).
ThusCP shields "PRO" but remains open for governmentof NP.
This state of affairs can be caught in thepresent framework by a negative inheritance clause.
(21) barrier(7,#) ?=phantom(7) A7>#A"~q# : nonphantom(~,3) A7>8.nonphantom(7,8 ) ?= nonphantom(7) A 7 > 8.Similar cases arise with negation.
Again, the litera-ture adopts different lines of argument to account forthe phenomenon.
Kamp and Reyle \[1993\] handle thebinding case below with a rule of double negationelimination, an operation that deletes tructure.
*Either he~ owns a Porsche or John/ hidesit.Either he/does not own a Porsche or John/hides it.1Mfiller and Sternefeld \[1991\] propose to treat thisconstruction within the framework of barrier theory.445The examples below are drawn from Cinque \[1990,83\].
He uses a superscription convention to annotatethe scope of the negation and assumes an LF amalga-mation process triggered by coindexing of this sort.CP is no barrier anymore for LF-amalgamated el-ements since they become wh-movable.
We mightmodel amalgamation with the "nonphantom" clauseof (21).
Then, this clause would have to hold true forinherently wh-movable lements (bare quantifiers inCinque's analysis) as well.
*Molti amici, \[cP ha invitato t, che io sap-pin.Molti amici, \[cP \[NegP non ha invitato t,che io sappia.3.4 P roper t ies  o f  the  Def in i t ion  SchemesIn this paragraph we further investigate propertiesof the three definition schemes we are dealing with.We summarize scheme (16) in (22).
def is a variableranging over the given definitions.
(22) B(c,b) ~ Bdef: Ldef(c ) A c>bWe can collapse all definitions de/into a single defi-nition with local condition K(c) ~ Vd4Ld4(c).
Inorder to summarize the schemes (16--17) we intro-duce vectors of definitions def" of length n and corre-sponding sequences of nodes Z of length n + 1. xl isfixed to c and Xn+l to b.
(23) B(c,b) *-* B def, Z:Vi  ?
{1 , .
.
.
,n} :Ldef(i)(xi) A xi > xi+l.For definitions conforming to type (16--17) we canshow the following property: If we have found a sony violating the relation R all descendants b of thefather x will be inaccessible to R.(24) x ~- y A aRx A ~aRy A x > b --* --,aRbIn a full-fledged definition scheme where (16--18)are available (24) ceases to hold.
In the example dis-cussed above a does not govern y but does govern b.a \[cP=, \[vP=y bIn pre-Barriers GB theory and most current com-putational approaches only inherent barriers are al-lowed (scheme 16) and the violating number of barri-ers in axiom (4) is set to null.
Note that under theseprovisos, barriers theory shrinks to command theory:(4') aRb ~ a, b unconnected AVc :K(c) A c>b---*c>aThe following constraint holds in this configuration:A barrier as in (24) is not affected by the triggeringfirst argument.
(25) x ~-y A Ba : \[aRx A --,aRy\] A bRx ---.
--,bRyChomsky \[1986, 11\] discusses (25) at some length.
Inhis example (see below) "decide" =a does not govern"PRO", but "e" =b would.
He shows that if either ofthe mentioned requirements (n=O and intrinsic bar-riers) is not met the theorem is refuted.
(21) John decided \[cP e \[xP PRO to \ [ resee the movie \]\]\]If (16--18) are given then we can show the followingtheorem: Brothers are equivalent when occurring asa second argument of a BC-definable relation.
(26) a, bl unconnected A a, b2 unconnected Aby N- bl A by N- b2 ~ (aP0bl ~ aRb2)4 Localising the Global ConstraintsThe next step is to localise the definitions (16--18).
For ease of reference we repeat the definitionschemes.
(27) B(c,b) ~ 3def: \[Ll(C) A c>b\] VILl(c) A I(c,b,B, L2)\] V\[Ll(c) A c>b A -,I(c,b,B, L2)\]We only take into account nodes c that separate afrom b in the sense that they sit on the ancestor lineof b but not on that of a (see also the restrictionsof 4 and 5).
Theorem (28) specifies a connection be-tween the inheritance clauses valid on a father node zand those valid on the son y.
Recall that inheritanceclauses are the only global conditions we consider.
(28) xNy A y>_b A "-,y>_a ---*(B(y, b) V (I(y, b, B, L) A -~L(y))*-* I(x, b, B, L))In parsing, an unbounded ependency (formally, arelation R) is triggered by a node nl (e.g.
because itlacks a 0-role or cannot take up a 0-role assigned toit) and successfully terminates when a correspond-ing node n2 is found (that can supply the missing0-role or absorb a superfluous 0-role).
When search-ing, ancestor lines are either ascended or descended.Accordingly we have to make a distinction betweenthe upward and downward state of dependency in-formation.4464.1 Upward  StatesUpward states supply information about barriernodes encountered on the ancestor line below.
Theyare constructed when the second argument b of arelation R has been found and the tree is beingsearched for the first argument a.
Formally, upwardstates are sets (standing for conjunctions) associ-ated with some node c and some dependency comingfrom b.
{B,L) e UState(c,b) ~ I(c,b,B,L)Any inheritance clause that can be derived at c onthe basis of the lower upward state and the ruleschemes (27--28) is included in c's upward state.
Ifa clause is not in the state, it cannot be inferred by(16--18).
Consequently, the negation of a missingclause must hold.
We assume a counter for c and bto be increased and checked as defined by the theory(computing the number n of passed barriers, see 4).IncreaseCounter(c,b) ~ B(c,b)We use the upward state to break off search as soonas we can infer from the theory that an elementa cannot possibly be found in the rest of the tree.Theorem (29) stands to express that as soon as wehave found a node y violating the definitions upwardsearch becomes obsolete.
(29)4.2 Downward StatesDownward states encode information about barriernodes encountered on the ancestor line above.
Theyare computed when the second argument b of a re-lation tt is being expected because a first argumenta has been discovered.
Formally, downward statesare first order formulae associated with some nodec, some ancestor node ct of c, and some dependencyleading to b.
Atomic formulae of DState(c,cl,b) areinheritance clauses I with respect o c and b.formula E DState(c,ct,b)formula(c,b) ~ IncreaseCounter(cl ,b)The rule schemes (27--28) supply all sufficientand necessary conditions for transfer of inheritanceclauses between nodes.
Accordingly an atomic for-mula in the upper downward state can be trans-formed into a formula holding for the lower node c.False formulae are discarded, while true formulae in-crease the counter.We use downward states to restrict he search space.By (24) we can sometimes infer that search intoa subtree will be pointless.
Negative inheritanceclauses, however, can only be checked when a can-didate for b has been encountered.
When the parserdescends paths while searching, it always assumesthat the current path will dominate b.
For upwardstates, in contrast, the ancestor line of b is fixed.Only downward states scan trees.
(26) shows that astate will not change for brother nodes.
So we onlyhave to store one downward state per rule (e.g.
underits mother node).4.3 ExampleConsider the chain of "how" in the following examplehow do \[zp.
you \[vP, t \[vP remember\[cp t/*why lip Bill t behaved t \]\]\]\]\]In a left-to-right top-down parse, the first barrier tobe encountered would be IP* if it dominated eithera blocking category (BC) or no other tensed IP.
VP*is no BC or barrier since it does not dominate theintermediate race (it is not the minimal segment ofthe VP node).
CP is L-marked and hence a barrieronly if it dominates a BC.
If "why" excludes a tracein SpecCP, the BC IP occurs between CP and thenext trace.
Due to the d-role of "how", government isviolated leading to an ungrammatical sentence.
If anintermediate trace is allowed, a new chain is startedand no BC occurs.
IP refutes the hypothesis that IP*is the deepest embedded tensed IP, and it turns outto be this IP as soon as the variable is found.
Soonly one subjacency barrier occurs: The sentence isgrammatical.5 Conc lus ionWe have described a mechanism that handles globalconstraints on long movement from a local basis.
Thedevice has been derived from a logical formulation ofChomsky's \[1986\] theory so that equivalence to thistheory is easily proved.
We have sketched methods touse the logic for early determination of ungrammat-ical readings in a parser.
In my thesis (\[Schiehlen,1992\]) the technique has been implemented in anEarley parser that generates all readings in paral-lel.
In this system local conditions are couched intofeature terms.
Feature clashes lead to creation andabolition of dependencies modelling the GB notionof failed feature assignment and last resource.
Thebarriers logic restricts rule choice for the predictor(descending ancestor lines) and discards analyses inthe completer (ascending ancestor lines).
Ongoingwork is centred around an application of the bar-riers framework to the generation of semantic struc-ture (Discourse Representation Structure).
Kraeht's\[1992\] approach to analysing barriers theory is re-lated to the one presented here.
However, Kracht'semphasis is not so much on parsing.447A ProofsProof of (6) is trivial.The theorem (7) is symmetric for al and a2.
SupposealRb A "~a2Rb.
a2 and b are unconnected.
So thereexist kl barriers not dominating al (kl < n) and k2barriers not dominating a2 (k2 > n).
Suppose c is abarrier not dominating a2 but dominating al (thereare at least k2-k l  > 1 such barriers), c>b and y>b,hence c and y are connected.
But y>_c entails y>al .I f c>y  then either x>c>y or c>x.
But c>ximplies c > a2.To prove (9) note that all barriers for y dominate yby (5).
Hence they also dominate a e \[y\].We now turn to (10).
Take al E \[x\] and a2 E \[y\].a2 and y are not connected.
We show that if --c > a2and c > b then -~c > al.
Assume c > b and c > ax.Then x and c are connected both dominating b. Weknow that -~x _> c > ax.
Hence c > x > y. Supposey!
is y's father.
Then c > x >_ y!
~.- y and equallyc> x > y!
~- a2.
We obtain that {c I B(c,b) A -~c>el} D {c I B(c,b) ^  -~c>a2}.
Hence -~\[x\]Rb.We prove (24).
Suppose c is a barrier for x. Thenby (23) there is a sequence of nodes xl = c andxn > xn+l = x.
But xn > x > b, so c is a barrier for b aswell.
a and y are unconnected.
Suppose c is a barrierfor y but not x.
Then xl = c and xn>x~+l = y. xnand x are connected both dominating y.
We knowthat -~x > xn > y and ~xn > x else c would be abarrier for x.
Hence Xn = x and we get x,  = x > b.There are at least as many barriers for b as there arefor y, so -~aRb.To prove (25) we adopt the argumentation of theforegoing proof and infer that x is a barrier for y.bILz shows that b, x are unconnected, hence -~x > band -~bRy.
(26) follows if we prove B(c, bl) ~ B(c, b2) by in-duction.
The theorem is symmetric.
Assume a csuch that B(c, bl).
Then either scheme (16) holds:L(c) A c>bx hence c>b2.
Or (17) and L(c) A 3d :B(d, bl) A c> d A Ve : c> e > d ---* ~L(e).
Byinduction B(d, b2) as well.
For the negative scheme(18) we use symmetry to extend the implicationI(c, bx, B, L) ---, I(c, b2, B, L) to an equivalence.For (28) we give a proof by cases.
Either B(y, b) --.I(z, b, B, L).
y is the barrier node d referred to in theconsequent.
Or I(y, b, B, L) A -~L(y) --* I(x, b, B, L).We set the barrier node d of the first inheritanceclause equal to the one of the second.
Does a nodee between x and d satisfy L?
y does not, nor dothe nodes between y and  d, and there is no nodebetween x and y.
But y and e must be connected,both dominating d. We show I(x, b, B, L) --* B(y, b) VI(y, b, B, L).
The barrier node d of the antecedentclause and y are connected, both dominating b (see5).
d cannot sit between x and y.
If d - y the firstdisjunct holds.
If y > d we set d equal to the barriernode of the second disjunct.
No e between y and dsatisfies L.We reduce (29) to (10).
If a > y > b we make use of (6).Otherwise let x!
be the smallest node that dominatesboth y and a and let x be such that x!
~- x >__ y. Thenby (10) "~\[x\] Rb, meaning --~aRb (see 8).References\[Chomsky, 1986\] Noam Chomsky.
Barriers.
Linguis-tic Inquiry Monograph 13, MIT Press, Cambridge,Massachusetts, 1986.\[Cinque, 1990\] Guglielmo Cinque.
Types of -A-Dependencies.
Linguistic Inquiry Monograph 17,MIT Press, Cambridge, Massachusetts, 1990.\[DSrre and Eisele, 1991\] Jochen DSrre and AndreasEisele.
A Comprehensive Unification-Based Gram-mar Formulism.
Deliverable R3.1.B, DYANA - -ESPRIT Basic Research Action BR3175, 1991.\[Dorna, 1992\] Michael Dorna.
Erweiterung derConstraint-Logiksprache CUF um ein Typsystem.Diplomarbeit Nr.
896, Institut fiir Informatik,Universit~t Stuttgart, 1992.\[Johnson, 1989\] Mark Johnson.
The Use of Knowl-edge of Language.
In Journal of PsycholinguisticResearch, 18(1), 1989.\[Kamp and Reyle, 1993\]Hans Kamp and Uwe Reyle.
From Discourse toLogic, Vol I. to appear: Kluwer, Dordrecht, 1993.\[Kracht, 1992\] Marcus Kracht.
The Theory of Syn-tactic Domains.
Logic Group Preprint SeriesNo.
75, Department of Philosophy, University ofUtrecht, February 1992.\[Kroch, 1989\] Anthony S. Kroch.
Asymmetriesin Long-Distance Extraction in a Tree-AdjoiningGrammar.
In Mark Baltin and Anthony Kroch,eds.
Alternative Conceptions of Phrase Structure.University of Chicago Press, Chicago, 1989.\[Miiller and Sternefeld, 1991\] Gereon Miiller andWolfgang Sternefeld.
Extraction, Lexical Varia-tion, and the Theory of Barriers.
Universit~it Kon-stanz, September 1991.\[Pollard and Sag, 1991\] Carl Pollard and Ivan A.Sag.
Agreement, Binding and Control.
draft, June1991.\[Rizzi, 1990\] Luigi Rizzi.
Relativized Minimality.Linguistic Inquiry Monograph 16, MIT Press,Cambridge, Massachusetts, 1990.\[Schiehlen, 1992\] Michael Schiehlen.
GB-Parsingam Beispiel der Barrierentheorie StudienarbeitNr-1168, Institut fiir Informatik, Universit~itStuttgart, 1992.448
