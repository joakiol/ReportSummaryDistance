A Type-theoretical Analysis of Complex Verb GenerationSatoshi TojoMitsubishi Research Institute, Inc.2-22 Harumi 3, Chuo-kuTokyo 104, Japane-mail: tojo@mrisun.mri.co.jp, m-tojo@icot.jpAbstractTense and aspect, together with mood and modality,usually form the entangled structure of a complex verb.They are often hard to translate by machines, becauseof both syntactic and semantic differences between lan-guages.
This problem seriously affects upon the gen-eration process because those verb components in in-terlingua re hardly rearranged correctly in the targetlanguage.
We propose here a method in which eachverb element is defined as a mathematical function ac-cording to its type of type theory.
This formalism giveseach element its legal position in the complex verb inthe target language and certifies o-called partial trans-lation.
In addition, the generation algorithm is totallyfree from the stepwise calculation, and is available onparallel architecture.1 The problem of complexverb translation1.1 The difference between languagesIn this section, we will briefly mention the difficultiesof complex verb translation.
The term complex verbrefers to those verb structures that are formed withmodal 'verbs and other auxiliary verbs in order to ex-press rnodMity or aspects, and which are attached tothe original base verb.For example, in a complex verb:seems to have been swimming (1)'swim' is in both the progressive aspect and the pasttense, upon which 'seem' is attached with the inflec-tion of agreement for the third person singular.
Such astructure is so often hard to translate to other lan-guages both because surface structures become dif-ferent between languages, and because some aspec-tual/modal concepts cannot be found in the target lan-guage in the generation process.
1We admit that the most recalcitrant problem in verbphrase translation is that the differences of tense, as-pect, mood, and modality systems.
Hence, we canXThe systems of tense, aspect, and modality are differentfrom language to language, and their typology ha.s been dis-cussed in linguistics \[1\], \[21, \[9\].hardly find a verb element in the target language,which corresponds with the original word exactly inmeaning.
However we also need to admit that theproblem of knowledge representation f tense and as-pect (namely time), or that of mood and modality isnot only the problem of verb translation, but that ofthe whole natural anguage understanding.
In this pa-per, in order to realize a type calculus in syntax, wedepart from a rather mundane subset of tense, aspects,and modMities, which will be argued in section 2.1 .2 The  d i f fe rence  in  the  s t ructureIn the Japanese translation of (1):oyoi-de-i-ta-rashiithe syntactic main verb does not change from oyoi-(swim), which is the original meaning carrier; and thepast tense is replaced by -ta- which is indistinguishablebetween past and perfect in Japanese.
The feature ofEnglish verb complex derivation is the alternation ofthe syntactic main verb, described in fig.
1.
On the( ~  (b~ (swim))) +-- 'seem'past progressive(seem (to ~ ( ~  (swim))))past progrcssiveFigure 1: new verb arrival in Englishcontrary in Japanese, new verb elements are aggluti-nated at the tail of verbs, as is shown in fig.
2.
( ~  ( ~-dei- ( ,~U,)))  ~-- 'rashii(seem)'swim progressive pastswim pro9 resslve pastFigure 2: new verb arrival in Japanese1.3 The existence of external  modal-itiesIn the history of machine translation, the analysis of acomplex verb structure seems to have been rather ne-glected.
Even in an advanced machine translation sys-1353tem of CMU-CMT \[8\], a verb complex is representedconventionally ike:(vp ( root  .
.
.
)(negation +/-)(modality .... )(tense .
.
.
.
)(aspect .
.
. )
)However this flat description fails in the followingcases.First, certain modalities can have their own nega-tion.
The sentenceYou must play.
( \[:l\[you play\])can be negated in two ways:You must not play.
(\[:3--\[you play\] = \[:3\[you don't play\])You don't have to play.
(-~D\[you play SThe former is the negation of 'must' while the latteris the negation of the sentence, where in parenthesesabove \[\] is necessity and -~ is negation operator.A similar thing can be said for tense.
A certain kindof complex verbs such as 'seem to be' can have twopositions to be tensed as below:seemed to have beenIt has been discussed that there are so called ex-ternal modal expressions, that are embedded from theoutside of the sentence (\[3\], \[4\], \[10\], \[11\], and \[14\]).The key issue is that those external ones concern onlythe speaker's attitude of the sentences in illocutionarysituations in order to express deonticity, uncertainty,and so on, and are indifferent o the sentence subjects.Although there should be a controversial discussion asto whether a certain modal verb is connected to speak-ers or not 2, we will engage this matter in the followingformalization of complex verb translation.2 Formalizat ion of complexverb translat ionWe will give a formal definition of modality as a func-tion here, and discuss the strategy of verb complexgeneration in which each modal element is used as afunction itself.
In this section we use the term 'modalfunctions' both for modal operators and aspectuM op-erators as long as there is no confusion.2Although the concept of modality is based on the deonticdistinction/epistemic between possibility and necessity such as'can', 'may', 'must', tbe term is sometimes used in a broadersense inclusively 'will'(volitive) or 'can'(ability).
We distin-guished the externality by its independent tense and polar-ity (positive/negative), so that broad-sense modal verbs suchas volitive and ability are regarded as actually internal whilenarrow-sense ones are often external.354Externa l i ty  To clarify the externality of modalfunctions mentioned in the previous section, we putthe following definition:Def in i t ion of  externa l i ty :  We call thosemodal functions which can have their owntense and negation external; otherwise we callthem internal.I n te r l ingua  Here we propose the simplified sets ofmodalities, aspects, and tenses, which are recognizableboth in English and in Japanese, mostly based uponthe work of \[7\].tense = {past, present, future}aspect = {progressive, perfect, iterative, in-choative, terminative}external modality= {possible, necessaw}?
{epistemic, deontic}or {hearsay, seem}internal modality = {able}The two dimensional analysis of eplstemic and deonticis considered, reflecting the duality in meaning of 'may'and 'must'.Verb e lements  as funct ion  We assume that thecrude result of a parsing process for a complex verb isthe list of verb elements uch as:past1, seem, past2,progressive, swim,... (2)Our objective is:* to construct he interlingua expression from theseverb elements uch as:(q-ed(seem)) ((-t-ed(progres s ive))  (swim))?
and to derive a surface structure of the target lan-guage from the interlingua expression.In order to do this, we will regard each verb elementas a function.
The main concern here is the domain ofeach function.
For example, an external "past" oper-ator +ed should operate upon external verbs, not in-cluding internal verbs.
We will realize this idea, beingindependent of each intra-grammar in complex verbsof various languages, in the following section.We express a verb complex as a composition of aroot-word, tense,  negat ion,  and verb-complement,in which root  and verb-form are included; veompmay be included recursively.Fig.
3 is an example of a ,k-function of tt perfect:`kxVe~b-,t~c~u~e.perfeet(x)which takes a verb structure as a parameter, and pro-duce a more complicated structure.
(vp (roet; be)( tense negat ion)(vcomp (root  swim)(vform ing) ))(~p O'oot h~ve)( tense negat ion)(vcomp ( root  be)(vrorm pp)(vcemp (root swim)(vform ing))))Figm'e 3: perfect- izat ion in English3 Type  in fe rence  for complexverb  compos i t ionWe will make use of polymorphic type theory \[6\] in thefnrther formalization.
The reason we adopt the typeformalism is to realize "the internality of concatenationrules"; namely each verb element shonld know whichelements to operate upon, instead of being given a setof grammar on concatenation.
Behind this purpose lietile following two issues:?
paral lel  computat ion :  to realize a fas~ parallelcomputation on coming parallel architecture, par t ia l  t rans la t ion :  for machine translation tobe robu:-'t for ill-founded information in the lexicon3 .1  ~pes  fo r  verb  phraseFirst we will set up several mnemonic types.
They arenot terminal symbols of type calculus, but mnemonicidentifiers of certain types.A set of mnemonic types:{root, int, ext, teasel, negi, tense~, ne9~}For example, we can assume the following r' as a resultof our parser.F = {seem : ext,+ed : tensei, swim : root,progressive : int}where a : a means that a is of type a.
(In that parser,each syntactic ategory in the source language was re-placed by a mnemonic type that is actually regarded asa category of the interlingua.)
We use cp as a type vari-able denoting 'verb phrase , .
Because we can regard anyverb element as a modifier from a verb phrase to an-other phrase, those mnemonic types are always unifiedwith a type '~ -~ qo', except 'root' of type ~.
The type<emposition is the process that specifies the internalvariables o f~ gradually.
We introduce here the notionof 'most general unifier (mgu)' by Milner \[6\], whichcombines two type expressions and the result becomesa set of variable instantiations which were contained indmse type expressions.3 .2  A s imp le  exampleLet us consider an example of concatenating seem with+ed(swim).
First, assume that we can infer the type of+ed(swim) to be ~1 from F by a variable instantiation0, as is shown below in (3):r0 ~ +ed(s~im): V'~ (3)As for seem : ext, because 'ext' was a mnemonic fora certain modifier of a verb phrase, we can put ext =(~1 -~ 5~).
Hence, for a new type variable 9a2, set r/1as (4):~q, = mgu(extO, W -4 p~) (4)Note that we have not specified the contents of 7 hyet; we will give them later.
We can now infer thetype of combined verb phrase with (4), as is shown infig.
4 where we can use a canonical expression (see \[5\])Ax.seem(x) instead of seem.\]-"/1 ~ seem: extT}l r0/\]l \[- +ed(swim): qCl~h (_+ E)F'igure 4: inference of seem(+ed(swim))\Ve use '~ '  to denote that the type of the left-handside is more instantiated than that of the right-handside, so that:3 .3  Fu l l - f l edged verb  typeIn order to analyze the contents of 0 in (3) in detail,we need to clarify what tensel actually does.
We willargue what each mnemonic means in this subsection.Concretely saying, we will specify what kind of internalvariables can occur in various verb types.Our presupposition is that a 'full-fledged' complexverb contains 'external part' as well as 'internal part'.So that a verb type ~, is assumed to have two internaltype variables ~oi,,t and ~oCxt.
Each of them has a 'head 'verb which incurs tense or negation if exists.
We call acompound of tense and negation 'cap' .
As for a cap,we assume a construction of:negation(tense(X)) aAs a result, our full-fledged verb type becomes as fig.
5.aThis formalization is actually after the consideration of thefollowing generation process.
When we construct a past andnegation of 'walk':walk ~ walked -, didn't walkis less natural thanwalk ~ don't walk -,  didn't walkbecanse it is 'don't' which incurs the operation of past.
Theexactly sinfilar thing happens also in Japanese.3 355neg --~ tense neg --~ tensecape eapi/ /0 - - ,0- ,  O Ohead~ headl rootexternal internalFigure 5: complex verb structureLet us get back to the type inference of +ed(swim)here, to see the basis of our formalism of type unifica-tion.
+ed is of type tensei, and swim is of type rootthat was a mnemonic for simple T. 0 in (3) becomesas follows:0 = mgu(tensei,root ~ ~a)Because tensei itself is not a function, it must be qual-ified as of type capl to act as a function by itself.
Wecall this qualification 'p romot ion ' ,  to mean that thecomponent raises its type to connect with others.
Thesimilar thing can be said for root, which must be pro-moted to ~nt SO as to be in the domain of cap~.
Fig.
6depicts the type promotion.tense; rootJ.
J. promotecapi\[?/negl\] p,~,\[,'oot/head,\]% /capdPint).~ promoteI 4,q~,,\[root\[?
/neg, 1/tense\]/ head,\]promote~\[?/c2~xt, root\[C/ne9, 1/ tense\]/ headi\]Figure 6: type promotionA unifier, or what we have called a set of instanti-ation so far, like 0 or '7 is exactly a set of promotionswhere some missing verb elements (compared with full-fledged type) are ignored or replaced by other elements.For example, the contents of 0 becomes as follows:0 = \[?/negl, tensei/capl,root/headi,he d,l  ,int,3.4  Component  embedd ingIn the type inference of fig.
4, we happened to choosetwo items of seer.
and +ed(suim).
Actually, we cancombine any two items picked up from F. In thissubsection we will show an example, in which wetry to concatenate the consequence of fig.
4 withprogressive : int.
In the conventional generation, aninternal verb element such as 'progressive' must be con-catenated to the structure, prior to an external elementsuch as 'seem'.
However, in our type expression, 'be+ing' can join tim 'seem(+ed(swim))'  structure, andalso correctly choose the target element 'swim' fromthe structure, instead of 'seem' which exists most ex-teriorly.If there is such a set of instantiation 772 that:712 = mgu(intOth, ~Th ~ ~3) (5)then we can validate the inference in fig.
7.
However,because the domain of int must be 'cap'-less ~i,t, wecannot legalize the type inference of fig.
7 immediately.What we are required to do now is a type 'demo-t ion' ,  as opposed to the promotion.
Roughly saying,a verb type of seem(+ed(swim)) is regarded as below:(6)though each of the right hand side of (6) is promotedto some qualified type.
This means that the history ofpromotion must be included in the unifier 0.
Hence,we can scrutinize the contents of 0 so that we may findwhere int can be embeddable.
In this case,{ r oot / headi, headl/ ~p i~t }in 0 (viz.
~i~t ~ int) should be demoted, and we canredefine a verb type of (6) as:ten e,(root) ) --, tens ,(.d"'(root) ) )Suppose that r/a replaces the history of promotionsand demotions as below:(F U {~9:i,lt})0~71r/3 F seem(+ed(swim)): ~4then we can make the inference in fig.
8.
In this case,{ r U q~ : in t  }O,h tl3 f- seem(+ed(swim)) : ~4 ,.
.
.
.
.
.
.
.
.
.
.
.
~-~ I)\['0rl,rl3 I- ~.seem(+ed(~o(swim)) ) :  int , \ ]3 -~  ~4Figure 8: inference of A-abstractionthere is only a place for int to be embedded in between+ed and swim, and int operates upon a root.This time, we can make an inference from abstractedverb structure, as is shown in fig.
9.3 .5  Head sh i f t ingWe mentioned that another superiority of type formal-ism is its partiality.
Actually we can compose a verbstru'cture from any part of given interlingua set, andthis feature is realized dynamically.
The computationof verb complex generation may be stopped any timeby ill-foundedness ofmachine translation system.
Evenin such a case, our formalism can offer a part of sur-face structure which had been partially completed sofar.
The type definition above gives us an importantclue to how to compose verb elements.
The algorithmnecessarily becomes as follows:1.
Pick up an original meaning base.4356FOr/, 1- seem(+ed(sw?m)) : ~2r/, I" I- progressive:int(__+ E)V@lr/2 b progressive( seem( +ed( swim) ) : ~o3r12Figure 7: ill-founded type inferenceF b +ed : tensei F b swim : rootF0 b +ed(swim) : ~1FF  seem:extF I- A<p.seem((p) : ?Pl -9  ~2F0r\]I l- seem(+ed(swim)): ~2r/1F0rhr/s ?
A~,int.seem(+ed(~(swim))): intu3 --, ~4 F K prog : intF0r/lr/3 1- seem(+ed.
(prog(swim))): ~4Figure 9: inference with A-calculus2.
Apply internal modal functions, while ..3.
Shift the internal tense and negation to a newlyapplied modal function.4.
Apply external modal functions, while ..5.
Shift the external tense and negation to a newlyapplied modal flmction.The position shift of tense, caused by the arrival ofa new internal verb, is diagramed in fig.
10.
Fig.
11English(Vp  new-root .
.
(tense).. (vcomp .. e..  )k______jJRpanese(vp ..(w:omp ..e..(new-vcomp ..(tense)..)))q___  __9Figure 10: verb position shiftshows that every step in the derivation process canoffer the partial syntactic tree.4 DiscussionWe have shown a model of complex verb translationbased upon type theory, in which verb elements in theinterlingua re regarded as generation functions whosedomain and range are elucidated so that each verb el-ement is certified to acquire a correct position in thetarget structure.
Furthermore, the flexibility of typecalculus was shown on the following two points.1.
We don't need to specify all the type variablesevery time, so that all the information a type ownscan always be regarded as partial.
This meansthat we can translate partially what can be done.2.
Because the order of calculation is not specifiedin the type expression, the verb structure can becomposed in a way of self-organization, in tilemeaning that tile structure is able to be decom-posed and to be reorganized in the process.In the case of complex verb translation, rephrasing toanother part of speech is rather easier; we only needto 'kick out' the functional expression from the verbstructure to point to another lexical item.
Some ex-ternal expressions must be translated into a complexsentence as the feature of externality, as we have dis-cussed in section 1.3.
We give here a definition of theidentity in meaning between an external verb and itscorresponding complex sentence in the type-theoreticMview as (7):<agent,qa(v) >: (7)..~ <af fent ,  "u> , ~>" : O'compwhere we denote a sentence by <agent, action(state)>informally, and cr is a type of sentence and cr~o~ v is atype of complex sentence.
We can adopt (7) as thedefinition of an external verb; namely, we call sucha verb ~ external when, for ~, there is another verbexpression ~ which enables the type inference (7).Tile recent study of categorial grammar such as \[13\],as well as the historical feat of Montague semantics,claims the efficacy of type expression.
The type calcu-lus is not specific to the complex verb nor the genera-tion in machine translation, so that i t  is applicable toany generation process of natural languages.
Our nextgoal in due course is to apply this generation mecha-nism to the whole categorial grammar.5 AcknowledgementThe work was originally done as a part of machinetranslation system in Center for Machine Transla-tion of Carnegie-Mellon University; an experimenta-tion system was developed on IBM-RT with Common-Lisp \[12\], based upon the interlingua mentioned in sec-tion 2.
The author would like to thank the members5357of CMU-CMT and Institute for New Generation Com-puter Technology (ICOT) for many significant com-ments.root vform vcompswim past+progressivevproot vform vcompI Ibe p ~root vform vcompI I swim -ingtype demotion for an ext verbroot vform vcompI have t o ~root vform vcompI lberoot vform vcompI Iswim -?ng+seem vproot vform vcompIseemroot vform vcompI Ihave t o ~root vform veompf Iberoot vform vcomp I Iswim -ingFigure lh trees in derivationReferences\[1\] B. Comrie.
Aspect.
Cambridge University Press,1976.\[2\] B. Corm'ie.
Tense.
Cambridge University Press,1985.\[al\[4\]\[5\]\[61\[7\]\[8\]\[9\]\[10\]\[11\]\[12\]\[lalO.
Jesperson.
The Philosophy of Grammar.
Allenand Unwin, London, 1924.J.
Lyons.
Semantics vol.1,2.
Cambridge Univer-sity Press, 1977.P.
Martin-Loef.
Intuitionistic Type Theory.
Bib-liopolis, 1984.R.
Milner.
A theory of type polymorphism in pro-graImning.
JCSS, 17(3), 1978.S.
Naito, A. Shimazu, and H. Nomura.
Classifi-cation of modality function and its application tojapanese language analysis.
A CL Annual Confer-ence Proceedings, 1985.S.
Nirenburg, editor.
Machine Translation, chap-ter Knowledge-based machine translation, theCMU approach, pages 68-89.
Cambridge Univer-sity Press, 1987.F.
R. Palmerl Mood and Modality.
CambridgeUniversity Press, 1986.N.
Rescher.
Topics in Philosophical Logic.
Dor-drecht: Reidel, 1968.J.R.
Searle.
Expression and Meaning: studies inthe theory of speech acts.
Cambridge UniversityPress, 1979.S.
Tojo.
A computational model of verb complextranslation.
Technical Report CMU-CMT-88-110,Center for Machine Translation, Carnegie-MellonUniversity, August 1988.J.
van Bentham.
Categorial grammar and typetheory.
Journal of Philosophical Logic, to appear,1989.\[14\] E.H. von Wright.
An Essay in Modal Logic.
NorthHolland, Amsterdam, 1951.6358
