A Uniform Approach to Underspecification and ParallelismJ oach im N iehrenProgramming Systems LabUnivers i tgt  des Saar landesSaarbrf icken,  Germanyniehren?ps, uni- sb.
deManf red  P inka lDepar tment  ofComputat iona l  L inguist icsUniversitS~t des Saar landesSaarbrf icken,  Germanypinkal@coli, uni- sb.
dePeter  RuhrbergDepar tment  ofComputat iona l  L inguist icsUnivers i t / i t  des Saar landesSaarbrf icken,  Germanyperu@coli, uni-sb, deAbst ractWe propose a unified framework in whichto treat semantic underspecification andparallelism phenomena in discourse.
Theframework employs a constraint languagethat can express equality and subtree rela-tions between finite trees.
In addition, ourconstraint language can express the equal-ity up-to relation over trees which cap-tures parallelism between them.
The con-straints are solved by context unification.We demonstrate he use of our frameworkat the examples of quantifier scope, ellipsis,and their interaction.
11 In t roduct ionTraditional model-theoretic semantics of naturallanguages (Montague, 1974) has assumed that se-mantic information, processed by composition andreasoning processes, is available in a completelyspecified form.
During the last few years, the phe-nomenon of semantic underspecification, i.e.
theincomplete availability of semantic information inprocessing, has received increasing attention.
Sev-eral aspects of underspecification have been fo-cussed upon, motivated mainly by computationalconsiderations: the ambiguity and openness of lex-ical meaning (Pustejovsky, 1995; Copestake andBriscoe, 1995), referential underspecification (Asher,1993), structural semantic underspecification causedby syntactic ambiguities (Egg and Lebeth, 1995),and by the underdetermination f scope relations(Alshawi and Crouch, 1992; Reyte, 1993).
In ad-dition, external factors such as insufficient coverage1The research reported in this paper has been sup-ported by the SFB 378 at the UniversitS.t des Saarlandesand the Esprit Working Group CCL II (EP 22457).of the grammar, time-constraints for parsing, andmost importantly the kind of incompleteness, uncer-tainty, and inconsistency, coming with spoken inputare coming more into the focus of semantic process-ing (Bos et al, 1996; Pinkal, 1995).The aim of semantic underspecification is to pro-duce compact representations of the set of possiblereadings of a discourse.
While the readings of a dis-course may be only partially known, the interpre-tations of its components are often strongly corre-lated.
In this paper, we are concerned with a uni-form treatment of underspecification a d of phenom-ena of discourse-semantic parallelism.
Some typicalparallelism phenomena are ellipsis, corrections, andvariations.
We illustrate them here by some exam-ples (focus-bearing phrases are underlined):(1) John speaks Chinese.
Bill too.
(2) John speaks Japanese.
- No, he speaksChinese.
(3) ???
- Bill speaks Chinese, too.Parallelism guides the interpretation process for theabove discourses.
This is most obvious in the case ofellipsis interpretation (1), but is also evident for theresolution of the anaphor in the correction in (2),and in the variation case (3) where the context isunknown and has to be inferred.The challenge is to integrate a treatment of paral-lelism with underspecification, such as in cases ofthe interaction of scope and ellipsis.
Problematicexamples like (4) have been brought o attention by(Hirschbuehler, 1982).
The example demonstratedthat earlier treatments of ellipsis based on copyingof the content of constituents are insufficient for suchkinds of parallelism.
(4) Two European languages are spoken by manylinguists, and two Asian ones (are spoken bymany linguists), too.410The first clause of (4) is scope-ambiguous betweentwo readings.
The second, elliptic one, is too.
Itsinterpretation is indicated by the part in parenthe-ses.
The parallelism imposed by ellipsis requires thescope of the quantifiers in the elliptical clause tobe analogous to the scope of the quantifiers in theantecedent clause.
Thus, the conjunction of bothclauses has only two readings: Either the interpre-tation is the wide scope existential one in both cases(two specific European languages as well as two spe-cific Asian languages are widely known among lin-guists), or it is the narrow scope existential one(many linguists speak two European languages, andmany linguists speak two Asian languages).A natural approach for describing underspecified se-mantic information is to use an appropriate con-straint language.
We use constraints interpretedover finite trees.
A tree itself represents a formulaof some semantic representation language.
This ap-proach is very flexible in allowing various choicesfor the particular semantic representation language,such as first-order logic, intensional logic (Dowty,Wall, and Peters, 1981), or Discourse Representa-tion Theory, DRT, (Kamp and Reyle, 1993).
Theconstraint approach contrasts with theories uch asReyles UDRT (1993) which stresses the integrationof the levels of semantic representation language andunderspecified descriptions.For a description language we propose the use of con-text constraints over finite trees which have been in-vestigated in (Niehren, Pinkal, and Ruhrberg, 1997).This constraint language can express equality andsubtree relations between finite trees.
More gen-erally it can express the "equality up-to" relationover trees, which captures (non-local) parallelism be-tween trees.
The general case of equality up-to con-straints cannot be handled by a system using subtreeplus equality constraints only.
The problem of solv-ing context constraints is known as context unifica-tion, which is a subcase of linear second-order unifi-cation (L~vy, 1996; Pinkal, 1995).
There is a com-plete and correct semi-decision procedure for solvingcontext constraints.Context unification allows to treat the interactionof scope and ellipsis.
Note that in example (4) thetrees representing the semantics of the source andtarget clause must be equal up to the positions cor-responding to the contrasting elements (two Euro-pean languages / two Asian languages).
Thus, thisis a case where the additional expressive power ofcontext constraints i crucial.
In this paper, we elab-orate on the example of scope and ellipsis interac-tion.
The framework appears to extend, however, toall kinds of cases where structural underspecificationand discourse-semantic parallelism interact.In Section 2, we will describe context unification,and present some results about its formal proper-ties and its relation to other formalisms.
Section 3demonstrates the application to scope underspeci-fication, to ellipsis, and to the combined cases.
InSection 4, the proposed treatment is compared to re-lated approaches in computational semantics.
Sec-tion 5 gives an outlook on future work.2 Context  Un i f i ca t ionContext unification is the problem of solving con-text constraints over finite trees.
The notion of con-text unification stems from (L6vy, 1996) whereasthe problem originates from (Comon, 1992) and(Schmidt-Schaul3, 1994).
Context unification hasbeen formally defined and investigated by the au-thors in (Niehren, Pinkal, and Ruhrberg, 1997).Here, we select and summarize relevant results oncontext unification from the latter.Context unification subsumes tring unification (see(Baader and Siekmann, 1993) for an overview) andis subsumed by linear second-order unification whichhas been independently proposed by (L@vy, 1996)and (Pinkal, 1995).
The decidability of context uni-fication is an open problem.
String unification hasbeen proved decidable by (Makanin, 1977).
Thedecidability of linear second-order unification is anopen problem too whereas second-order unificationis known to be undecidable (Goldfarb, 1981).The syntax and semantics of context constraints aredefined as follows.
We assume an infinite set of first-order variables ranged over by X, Y, Z, an infinite setof second-order variables ranged over by C, and aset of function symbols ranged over by f ,  that areequipped with an arity n > 0.
Nullary functionsymbols are called constants.
Context constraints~o are defined by the following abstract syntax:t ::= x I f ( t l , .
.
.
, t , )  \[ C(t)~P : : :  t : t l  I ~A~ IA (second-order) term t is either a first-order vari-able X, a construction f ( t l , .
.
.
,  tn) where the arityo f f  is n, or an application C(t).
A context constraintis a conjunction of equations between second-orderterms.Semantically, we interpret first-order variables X asfinite constructor trees, which are first-order termswithout variables, and second-order variables C ascontext functions that we define next.
A context with411andFigure 1: The equality up-to relationhole X is a term t that does not contain any othervariable than X and has exactly one occurrence ofX.
A conlezt function 7 is a function from treesto trees such that there exists a variable X and acontext t with hole X satisfying the equation:7(~r) = t\[~r/X\] for all trees or.Note that context functions can be described by lin-ear second-order lambda terms of the form AX.twhere X occurs exactly once in the second-orderterm t. Let a be a variable assignment that mapsfirst-order variables to finite trees and second-ordervariables to context functions.
The interpretation(~(t) of a term t under a is the finite tree defined asfollows:(~(a(tl,...,tn)) = a(c~(tl) , .
.
.
,  ~(tn))=A solution of a context constraint ~ is a variable as-signment a such that a(t) = a(t ' )  for all equationst = t' in 9.
A context constraint is called satisfi-able if it has a solution.
Context unification is thesatisfiability problem of context constraints.Context constraints (plus existential quantification)can express subtree constraints over finite trees.
Asubtree constraint has the form X<<X' and is inter-preted with respect to the subtree relation on finitetrees.
A subtree relation ?r<<a ~ holds if cr is a subtreeof cr I, i.e.
if there exists a context function 7 suchthat a'  = 7(a).
Thus, the following equivalence isvalid over finite trees:X<<X' ~ ~C(X' = C(X))Context constraints are also more general thanequality up-to constraints over finite trees, which al-low to describe parallel tree structures.
An equalityup-to constraint has the form X1/X~=Y1/Y~ and isinterpreted with respect to the equality up-to rela-tion on finite trees.
Given finite trees al,cr~, cr2,a~,the equality up-to relation ai/a~=a2/a~ holds if ~r~is equal to ~2 up-to one position p where al has thesubtree a~ and ~2 the subtree a S. This is depicted inFigure 1.
In this case, there exists a context function7 such that al = 7(a l )  and a2 = 7(a~).
In otherwords, the following equivalence holds:X/X '=Y/Y '  +-+ 3C(X=C(X' )  AY=C(Y ' ) )Indeed, the satisfiability problems of context con-straints and equality up-to constraints over finitetrees are equivalent.
In other words, context uni-fication can be considered as the problem of solvingequality up-to constraints over finite trees.2.1 So lv ing  Context  Const ra in tsThere exists a correct and complete semi-decisionprocedure for context unification.
This algorithmcomputes a representation of all solutions of a con-text constraint, in case there are any.
We illustratethe algorithm in figure 2.
There, we consider theconstraintX,=@(Q(s,  c), j) A X,  =C(Xcs)  A Xc,=jwhich is also discussed in example (11)(i) as part ofan elliptical construction.Our algorithm proceeds on pairs consisting of a con-straint and a set of variable bindings.
At the begin-ning the set of variable bindings is empty.
In caseof termination with an empty constraint, the set ofvariable bindings describes a set of solutions of theinitial constraint.Consider the run of our algorithm in figure 2.
In thefirst step, Xs =@(@(s, c), j) is removed from the con-straint and the variable binding X8 ~-* @(@(s, c), j )is added.
This variable binding is applied to theremaining constraint where X8 is substituted by@(@(s, c), j).
The second computation step is simi-lar.
It replace the to constraint Xcs=j by a variablebinding Xcs ~-~ j and eliminates Xc8 in the remain-ing constraint.The resulting constraint @(@(s,c),j) = C(j)presents an equation between a term with a con-stant @ as its ("rigid") head symbol and a term witha context variable C as its ("flexible") head sym-bol.
In such a case one can either apply a projectionrule that binds C to the identity context AY.Y or an412falseXs=@(@(s,c),j) A Xs=C(Xc,) A Xc,=jl x, @(@(=, c), J)@(@(s,c),j)=C(X~) A Xc==j~ Xc, ~ j@(@(s, c), j)=C(j)c c),@(s, c)=C'(j) j=C'(j)1false j=j1trueFigure 2: Solving the context constraints of example (l l)( i)imitation rule.
Projection produces a clash of tworigid head symbols @ and j. Imitation presents twopossibilities for locating the argument j of the con-text variable C as a subtree of the two argumentsof the rigid head symbol @.
Both alternatives leadto new rigid-flexible situations.
The first alternativeleads to failure (via further projection or imitation)as @(s, c) does not contain j as a subtree.
The sec-ond leads to success by another projection step.The unique solution of the constraint in figure 2 canbe described as follows:Xs ~-* @(@(8, c), j),Xc= ~ j,c AY.
@(@(=, c), Y)The full version of (Niehren, Pinkal, and Ruhrberg,1997) contains discussions of two algorithms for con-text unification.
For a discussion on decidable frag-ments of context constraints, we also refer to thispaper.3 Underspec i f i ca t ion  and  Para l le l i smIn this section, we discuss the use of context unifica-tion for treating underspecification a d parallelismby some concrete xamples.
The set of solutions ofa context constraint represents the set of possiblereadings of a given discourse.
The trees assigned bythe solutions represent expressions of some seman-tic representation language.
Here, we choose (ex-tensional) typed higher-order logic, HOL, (Dowty,Wall, and Peters, 1981).
However, any other logicallanguage can be used in principle, so long as we canrepresent i s syntax in terms of finite trees.It is important o keep our semantic representationlanguage (HOL) clearly separate from our descrip-tion language (context constraints over finite trees).We assume an infinite set of HOL-variables rangedover by x and y.
The signature of context constraintscontains a unary function symbol lamx and a con-stant var.
per HOL-variable x. Futhermore, we as-sume a binary function symbol @ that we write inleft associative infix notation and constants like john,language, etc.
For example the tree(many@language)@(lamx((spoken_by@john)@varx))represents the HOL formula(=poke by(jNote that the function symbol @ represents the ap-plication in HOL and the function symbols lamx theabstraction over x in HOL.4133.1 ScopeScope underspecification for a sentence like (5) isexpressed by the equations in (6):(5)(6)Two languages are spoken by many linguists.Xs = Cl((two@language)@lamx(C3(X~s))) AXs  = C2((many@linguist)@lamy(C4(X~s))) AX~ = spoken_by@vary@var~The algorithm for context unification leads to a dis-junction of two solved constraints given in (7) (i)and (ii).
(7) (i) Xs =O1 ((twoQlanguage)@la mx (Cs((many@linguist)@lamy(C4(spoke._by@var,@var )))))(ii) Xs =C2 ((many@linguist)@lam,(C6 ((two@language)@lam~(C3 (spoken_by@var,@varx)))))The algorithm does in fact compute a third kind ofsolved constraint for (6), where none of the quan-tifiers two@language and many@linguist are requiredto be within the scope of each other.
This possibilitycan be excluded within the given framework by us-ing a stronger set of equations between second-orderterms as in (6').
Such equations can be reduced tocontext constraints via Skolemisation.
(6') Cs = )~X.Cl(two@language@lamx(C3(X))) ACs = AX.Cz(many@linguist@lamy(C4(X))) AXs  = Cs(spoken_by@vary@varx)Both solved constraints in (7) describe infinite sets ofsolutions which arise from freely instantiating the re-maining context variables by arbitrary contexts.
Weneed to apply a closure operation consisting in pro-jecting the remaining free context variables to theindentity context AX.X.
This gives us in some sensethe minimal solutions to the original constraint.
Itis clear that performing the closure operation mustbe based on the information that the semantic ma-terial assembled so far is complete.
Phenomena ofincomplete input, or coercion, require a withholding,or at least a delaying of the closure operation.
Theclosure operation on (7) (i) and (ii)leads to the twopossible scope readings of (5) given in (8) (i) and(ii) respectively.
(8) (i) Xs(two@language)@lamx((many@linguist)@lamy(spoken_by@vary@vary))(ii) Xs(many@linguist)@lamy((two@language)@lamx(spoken_by@vary@varx))A constraint set specifying the scope-neutral mean-ing information as in (6') can be obtained in a rathersimple compositional fashion.
Let each node P inthe syntactic structure be associated with three se-mantic meta-variables Xp,  X~p, and Cp, and letI (P)  be the scope boundary for each node P .
Rulesfor obtaining semantic onstraints from binary syn-tax trees are:(9) (i) For every S-node P add Xp = Cp(X~p),for any other node add Xp = X~p.
(ii) I f \ [p  V R\], Q and Rare  not NP nodes,add X~ = XQ@Xn or X~p = XI~@XQ,according to HOL type.
(iii) If \[p Q R\] or \[p R Q\], and R is anNP node, then add X~o = XQ@varx andc,(p) = :,X.Co(X,@lam.
(Cl(X))).For example, the first two constraints in example (6')result from applying rule (iii), where the values forthe quantifiers two@language and many@linguist arealready substituted in for the variables XR in bothcases.
The quantifiers themselves are put togetherby rule (ii).
The third constraint results from rule(i) when the semantics of X~ is filled in.
The latteris a byproduct of the applications of rule (iii) to thetwo NPs.3.2 Ell ipsisWe now look into the interpretation of examples (1)to (4), which exhibit forms of parallelism.
Let ustake Xs and Xt to represent he semantics of thesource and the target clause (i.e., the first and thesecond clause of a parallel construction; the termi-nology is taken over from the ellipsis literature), andXcs and Xct to refer to the semantic values of thecontrast pair.
The constraint set of the whole con-struction is the union of the constraint sets obtainedby interpreting source and target clause independentof each other plus the pair of constraints given in(10).
(lo) x ,  = c(xo=) ^ x ,  = c (xc , )414The equations in (10) determine that the semanticsof the source clause and the semantics of the tar-get clause are obtained by embedding the represen-tations of the respective contrasting elements intothe same context.
In other words: Source semanticsand target semantics must be identical up to thepositions of the contrasting elements.As an example, consider the ellipsis construction ofSentence (1), where for simplicity we assume thatproper names are interpreted by constants and notas quantifiers.
It makes no difference for our treat-ment of parallelism.
(11) (i) X~ = speak@chinese@john AXc, = john A Xs = C(Xcs)(ii) Xa  = bill A Xt = C(Xot)By applying the algorithm for context unification tothis constraint, in particular to part (i) as demon-strated in figure 2, we can compute the context Cto be AY.(speak@chinese@Y).
This yields the inter-pretation of the elliptical clause, which is given byXt ~ speak@chinese@bill.Note that the treatment of parallelism refers to con-trasted and non-contrasted portions of the clausepairs rather than to overt and phonetically unreal-ized elements.
Thus it is not specifc for the treat-ment of ellipsis, but can be applied to other kindsof parallel constructions, as well.
In the correctionpair of Sentence (2), it provides a certain unam-biguous reading for the pronoun, in (3), it givesX8 = speak@chinese@X~ as a partial descriptionof the (overheard or unuttered) source clause.3.3 Scope and Ell ipsisFinally, let us look at the problem case of par-allelism constraints for structurally underspecifiedclause pairs.
We get a combination of constraints fora scope underspecified source clause (12) and paral-lelism constraints between source and target (13).
(12) Cs = AX.Ol((two@e_language)@lam,(C3(X)))AC~ = AX.C2( ( rnany@linguist )@lamy( C4( X ) ) )AXs = Cs(spoken_by@vary@varx)(13) X, = C(two@e_language) AXt -- C(two@a_language)The conjunction of the constraints in (12) and (13)correctly allows for the two solutions (14) and (15),with corresponding scopings in Xs and Xt afterclosure.
2(14) X~(two@e_language)@lamx ((ma ny@linguist)Qla rny (spoken_by@vary@varx)) AX t(two@a_la nguage)@la m~((ma ny@linguist)@lamy (spoken_by@vary@varx)) AAY.
Y @lamx((many@linguist)Qlamy(spoken_by@vary@varx))(15) Xs ~-*(many@linguist)@lamy((two@e_language)Qlarnx(spoken_by@vary@vary)) Ai t(many@linguist)@lamy((two@a_language)@la rnx(spoken_by@varyQvarx)) Ae l - -+AY.
(manyQlinguist)Qlamy(Y @lamx(spoken_by@vary@varx))Mixed solutions, where the two quantifiers take dif-ferent relative scope in the source and target clauseare not permitted by our constraints.
For example,(16) provides no solution to the above constraints.
(16) X 3(twoQe_language)@lam~ ((many@linguist)Qlamy(spoken_by@vary@varx))Xt  t--4.
(rna ny@linguist)@la my ((two@a_language)@lamx(spoken_by@varyQvarx))2Notice that closure is applied to the solved form ofthe combined constraints (i.e.
(14) and (15) respectively)of the two sentences here, rather than to solved forms of(12) and (13) separately.
This reflects the dependencyof the interpretation of the second sentence on materialin the first one.415From the trees in (16) one cannot construct a con-text function to be assigned to C which solves theparallelism constraints in (13).4 Comparison to other TheoriesStandard theories for scope underspecification makeuse of subtree relations and equality relations only.Such relationships may be expressed on a level of aseparate constraint language, as in our case, or be in-corporated into the semantic formalism itself, as it isdone for DRT by the system of UDRT (Reyle, 1993).In UDRT one introduces "labels" that behave verymuch like variables for DRSes.
These labels figurein equations as well as subordination constraints toexpress scope relations between quantifiers.
Equa-tions and subordination constraints alone do notprovide us with a treatment of parallelism.
An ideathat seems to come close to our notion of equal-ity up-to constraints is the co-indexing technique in(Reyle, 1995), where non-local forms of parallelismare treated by dependency marking on labels.
Webelieve that our use of a separate constraint languageis more transparent.A treatment for ellipsis interpretation which uses aform of higher-order unification has been proposedin (Dalrymple, Shieber, and Pereira, 1991) and ex-tended to other kinds of parallel constructions by(Gardent, Kohlhase, and van Leusen, 1996; Gardentand Kohlhase, 1996).
Though related in some re-spects, there are formal differences and differences incoverage between this approach and the one we pro-pose.
They use an algorithm for higher-order match-ing rather than context unification and they do notdistinguish an object and meta language level.
Asa consequence they need to resort to additional ma-chinery for the treatment of scope relations, suchas Pereira's coping calculus, described in (Shieber,Pereira, and Dalrymple, 1996).On the other hand, their approach treats a largenumber of problems of the interaction of anaphoraand ellipsis, especially strict/sloppy ambiguities.Our use of context unification does not allow us toadopt their strategy of capturing such ambiguitiesby admitting non-linear solutions to parallelism con-straints.5 OutlookExtensions of context unification may be useful forour applications.
For gapping constructions, con-texts with multiple holes need to be considered.
Thealgorithm for context unification described in thecomplete version of (Niehren, Pinkal, and Ruhrberg,1997) makes use of contexts with multiple holes inany case.So far our treatment of ellipsis does not capturestrict-sloppy ambiguities if that ambiguity is notpostulated for the source clause of the ellipsis con-struction.
We believe that the ambiguity can beintegrated into the framework of context unifica-tion without making such a problematic assump-tion.
This requires modifying the parallelism re-quirements in an appropriate way.
We hope thatwhile sticking to linear solutions only, one may beable to introduce such ambiguities in a very con-trolled way, thus avoiding the overgeneration prob-lems that come from freely abstracting multiple vari-able occurrences.
This work is currently in progress,and a deeper comparison between the approacheshas yet to be carried out.An implementation f a semi-decision procedure forcontext unification has been carried out by JordiL6vy, and we applied it successfully to some sim-ple ellipsis examples.
Further experimentation isneeded.
Hopefully there are decidable fragments ofthe context unification problem that are empiricallyadequate for the phenomena we wish to model.Re ferencesAlshawi, H. and D. Crouch.
1992.
Monotonic se-mantic interpretation.
In 30th Annual Meeting ofthe Association of Computational Linguistics, pages32-38.Asher, Nick.
1993.
Reference to abstract objects indiscourse.
Kluwer, Dordrecht.Bander, F. and J. Siekmann.
1993.
Unification the-ory.
In D. Gabbay, C.J.
Hogger, and J.A.
Robinson,editors, Handbook of Logic in Artificial Intelligenceand Logic Programming.
Oxford University Press.Bos, Johan, Bj6rn Gambi~ck, Christian Lieske,Yoshiki Mori, Manfred Pinkal, and Karsten Worm.1996.
Compositional semantics in Verbmobil.
InProceedings of the 16th International Conference onComputational Linguistics, volume 1, pages 131-136, Ktbenhavn, Denmark, August.
ACL.Comon, ttubert.
1992.
Completion of rewrite sys-tems with membership constraints.
In W. Kuich, ed-itor, Proc.
19th Int.
Coll.
on Automata, Languagesand Programming, LNCS 623, Vienna.
Springer-Verlag.Copestake, A. and E. J. Briscoe.
1995.
Semi pro-ductive polysemy and sense extension.
Journal ofSemantics, 12:15-67.416Dalrymple, Maryl Stuart Shieber, and FernandoPereira.
1991.
Ellipsis and higher order unification.Linguistics and Philosophy, 14:399-452.Dowty, D., R. Wall, and S. Peters.
1981.
Introduc-tion to Montague semantics.
Reidel, Dordrecht.Egg, M. and K. Lebeth.
1995.
Semantic un-derspecification and modifier attachment ambigui-ties.
In J. Kilbury and R. Wiese, editors, Inte-grative Ansaetze in der Computerlinguistik.
Duessel-doff, pages 19-24.Gardent, Cl~.ire and Michael Kohlhase.
1996.
Fo-cus and higher-order unification.
In Proceedings ofCOLING-96, Copenhagen.Gardent, Claire, Michael Kohlhase, and Noor vanLeusen.
1996. Corrections and Higher-OrderUnification.
In Proceedings of KONVENS-96.
DeGruyter, Bielefeld, Germany, pages 268-279.Goldfarb, W. D. 1981.
The undecidability of thesecond-order unification problem.
Theoretical Com-puter Science, 13:225-230.Hirschbuehler, Paul.
1982.
Vp deletion and acrossthe board quantifier scope.
In J. Pustejovsky andP.
Sells, editors, NELS 12, University of Massachus-setts, Amherst.Kamp, H. and U. Reyle.
1993.
From Discourse toLogic.
Kluwer, Dordrecht.L~vy, Jordi.
1996.
Linear second order unification.In Proceedings of the Conference on Rewriting Tech-niques and Applications.
Springer-Verlag.Makanin, G.S.
1977.
The problem of solvability ofequations in a free semigroup.
Soviet Akad.
NaukSSSR, 223(2).Montague, R. 1974.
The proper treatment ofquan-tification in ordinary english.
In R. Thomason, ed-itor, Formal Philosophy.
Selected Papers of RichardMontague.
Yale University Press, New Haven andLondon, pages 247-271.Niehren, Joachim, Manfred Pinkal, and PeterRuhrberg.
1997.
On equality up-to constraints overfinite trees, context unification and one-step rewrit-ing.
In Proceedings of the l~th International Confer-ence on Automated Deduction.
A complete verison isavailable from http://www.ps.uni-sb.de/~uiehren.In Press.Pinkal, Manfred.
1995.
Radical underspecification.In Paul Dekker and Martin Stokhof, editors, Pro-ceedings of the lOth Amsterdam Colloquium, Uni-versity of Amsterdam.Pustejovsky, J.
1995.
The Generative Lexicon.
MITpress, Mambridge MA.Reyle, Uwe.
1993.
Dealing with ambiguities by un-derspecification: construction, representation, anddeduction.
Journal of Semantics, 10:123-179.Reyle, Uwe.
1995.
Co-indexing labelled DRSs torepresent and reason with ambiguities.
In S. Pe-ters and K. van Deemter, editors, Semantic Am-biguity and Underspecification.
CSLI Publications,Stanford.Schmidt-SchaufS, Manfred.
1994.
Unification ofstratified second-order terms.
Technical Reportinternal report 12/94, J. W. Goethe Universit~it,Frankfurt, Germany.Shieber, Stuart, Fernando Pereira, and Mary Dal-rymple.
1996.
Interactions of scope and ellipsis.Linguistics and Philosophy, 19:527-552.41 7
