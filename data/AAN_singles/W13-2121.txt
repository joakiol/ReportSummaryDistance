Proceedings of the 14th European Workshop on Natural Language Generation, pages 162?166,Sofia, Bulgaria, August 8-9 2013. c?2013 Association for Computational LinguisticsPOS-tag based poetry generation with WordNetManex Agirrezabal, Bertol Arrieta, Aitzol AstigarragaUniversity of the Basque Country (UPV/EHU)IXA NLP GroupDept.
of Computer Science20018 Donostiasgpagzam@ehu.esbertol@ehu.esaitzol.astigarraga@ehu.esMans HuldenUniversity of HelsinkiDepartment of Modern LanguagesHelsinki, Finlandmhulden@email.arizona.eduAbstractIn this paper we present the preliminary work ofa Basque poetry generation system.
Basically,we have extracted the POS-tag sequences fromsome verse corpora and calculated the probabil-ity of each sequence.
For the generation processwe have defined 3 different experiments: Basedon a strophe from the corpora, we (a) replaceeach word with other according to its POS-tagand suffixes, (b) replace each noun and adjectivewith another equally inflected word and (c) re-place only nouns with semantically related ones(inflected).
Finally we evaluate those strategiesusing a Turing Test-like evaluation.1 IntroductionPoetry generation is one of the dream tasks of NaturalLanguage Processing (NLP).
In this text we point outan approach to generate Basque strophes automaticallyusing some corpora, morphological information anda lexical database.
The presented method is not tiedto a specific language, but it is especially suitable forinflected languages, as the POS information used insome tasks with success in non inflected languages isnot enough for inflected ones.
We have used the POS-tags with their inflectional information to learn usualstructures in Basque poetry.This work is part of a more general and completeproject, called BertsoBOT (Astigarraga et al 2013).BertsoBOT is a robot capable of creating and singingBasque verses automatically.
The robot joins togetherin a single system techniques from robotics, NLP andspeech synthesis and recognition.
The work presentedin this paper comes to improve the generation moduleof the mentioned system.Although our intention is to create whole verses, inthis paper we present the first steps towards it: the cre-ation of strophes.
Additionally, Basque verses haveto rhyme, but in these first experiments we have notconsidered it.Basque languageBasque language is spoken along the Basque Country1by approximately 700.000 people.
Although there is astandardized form of the language, it is common the useof non-standard dialects in certain regions, mainly inspoken language.Basque is a morphologically rich language, which isan obvious feature if we analyze the multiple declensioncases2 that can be usedwith only oneword.
For example,the phrase ?with the friends?
can be expressed with onlyone word, ?lagunekin?.lagunekin = lagun (friend) + ak (plural determiner) +kin (with)Art of bertsolaritzaThe art of impromptu verse-making, bertsolaritza, isvery ingrained in the BasqueCountry.
The performancesof verse-makers are quite usual and a big championshipis held every four years which congregates 15.000 peo-ple, approximately.
One tipical work to do for the verse-makers is to sing verses extempore, given a topic.
Theparticularity of these verses is that they have to followstrict constraints of meter and rhyme.
In the case ofa metric structure of verses known as ?zortziko txikia?1http://en.wikipedia.org/wiki/Basque Country (greater region)2en.wikipedia.org/wiki/Basque grammar#Declension162(small of eight), the poem must have eight lines.
Theunion of each odd line with the next even line, form astrophe.
Each strophe, has a small structure3 and mustrhyme with the others.
Below, you can see an exampleof a verse, with lauko txikia4 stanza:Neurriz eta errimaz With meter and rhymekantatzea hitza, to sing the wordhorra hor ze kirol mota bertsolaritza isden bertsolaritza.
that kind of sport2 State of the artA good review of computer guided poetry can be foundin (Gerva?s, 2010).
Most relevant ones include:WASPThe WASP system (Gerva?s, 2000) can be consideredone of first serious attempts to build an automatic poetrygenerator system.
It is based on the generate-and-testparadigm of problem solving.
Simple solutions aregenerated and then coupled with an evaluation functionfor metric constraints, producing acceptable results.ASPERAASPERA (Gerva?s, 2001) is a case-based reasoning(CBR) system for poetry generation.
It generates poetrybased on the information provided by the user: a prosedescription of the intended message, a specific stanzafor the final poem, a set of verse examples on that stanza,and a group of words that the final poem must contain.The system was implemented using CLIPS rule-based system, and follows the four typical CBR steps:Retrieval, Reuse, Revise and Retain.POEVOLVELevy (Levy, 2001) went on to develop an evolution-ary model of poetry generation.
POEVOLVE createslimericks taking as a reference the human way of poetrywriting.
The POEVOLVE system works as follows:an initial population is created from a group of wordsthat include phonetic and stress information.
Rhymesthat meet the requirements are selected and then morewords are selected to fill the rest of the verse-linebased on their stress information.
A genetic algorithmis employed to modify the words that compose the313 syllables with a caesura after the 7th syllable4Lauko txikia: The same as zortziko txikia but with four lines,instead of eight.limerick.
Evaluation is performed by a neural networktrained on human judgements.
It must be said that thissystem does not take syntax and semantics into account.McGonnagallManurung presented also an evolutionary approachto generate poetry (Manurung, 2003).
The poem gen-eration process is formulated as a state space searchproblem using stochastic hill-climbing.
The overall pro-cess is divided in two steps: evaluation and evolution.During the evaluation phase, a group of individuals isformed based on initial information, target semanticsand target phonetics.
This group of initial individualsis then evaluated taking into account different aspectssuch as phonetics, semantics and surface form.
Eachindividual receives a score, and in the evolution step, thesubset with higher scores is selected for reproduction.The resulting mutated individuals derive, hopefully, inbetter versions of the poem.3 Creating strophesOur goal is to create Basque strophes automatically.
Butstrophes written by combining words randomly usuallydo not have any sense.
For words have any meaningwhen combined together, they must be organized fol-lowing particular patterns.
Towards this end we haveapplied and tested different methodologies.
We use amorphological analyzer to extract POS and inflectionpatterns in strophes, and to create new ones followingthose schemes.
The idea is to find the most commonlyused patterns so that we can use them in new strophes.We also improve the results taking semantics into ac-count.
In the next lines we are going to describe someresources we have used.3.1 CorporaFor the learning process of the usual POS-tag patternswe have employed some Basque verse corpora yieldedby theAssociation of the Friends of Bertsolaritza5 (AFB).Those are impromptu verses sung by Basque verse-makers and the transcriptions of this collection havebeen done by members of the information center6 of theAFB.For this work, we are going to exploit three corpora,5http://www.bertsozale.com/en6http://bdb.bertsozale.com/en/orriak/get/7-xenpelar-dokumentazio-zentroa163each one following a classic stanza in Basque verses: (a)small stanza, (b) big stanza and (c) habanera.a) Small stanzaThis corpus has approximately 10.000 lines.
Eachline of this corpus is composed by a strophe containing13 syllables with a caesura between the 7th and the 8thsyllable.
This stanza is used to sing sprightly versescomposed by compact ideas.b) Big stanzaIn this case, this corpus has about 8.000 lines andeach line has 18 syllables with a caesura after the 10thsyllable.
Depending on the chosen melody, this stanzacan also have a complementary pause in the 5th syllable.The topics of this type of verses tend to be more epic ordramatic.c) HabaneraThis corpus has just about 1000 lines and they arecomposed by 16-syllable lines with a caesura after the8th syllable.
It is commonly used when the verse-makerhas to compose a verse alone about a topic.3.2 POS sequence extractionTo extract the POS-tags, we use a Basque analyzer de-veloped by members of IXA NLP group (Aduriz et al2004), which involve phrasal morphologic analysis anddisambiguation, among other matters.Once calculated the POS-tags, we estimated the mostprobable POS sequences using POS-tag ngrams.
We didthis in order to know which POS-tag sequence wouldbetter fit for each stanza.
For example, an acceptablePOS-tag sequence in the small stanza corpus would be?NN-NN-JJ-VB?.
This pattern could be extracted fromthis strophe, which is correct.Mirenekin+NN zakurra+NN zoriontsua+JJ da+VB.
(With Miren)+NN (the dog)+NN is+VB happy+JJ.But to have the POS-tag pattern is not enough for agood generation.Special issues in the categorization of words inBasqueThe gist is that Basque is an agglutinative language,so there is plenty information included in the suffixesof the words.
Because of that, if we don?t retain anyinformation about suffixes, we would lose some impor-tant data.
In Basque, we can apply declension to nouns,pronouns, adjectives and determiners.
Therefore, weneed to save the declension case information to do acorrect generation.
When a set of words compound anoun phrase, only one of the words will be inflected.Some verbs, when they are part of a subourdinateclause, can also be inflected.
In these cases, we have toextract the suffixes of the verb of that clause, because itexpresses the type of clause.All this information is essential if we do not want tolose the meaning of the clause.
Below, you can see anexample of generation of strophes in Basque using onlyPOS-tags:Mirenekin+NN lagunekin+NN zoriontsua+JJ da+VB.
(With Miren)+NN (with the friends)+NN is+VB happy+JJ.As you can see, the phrase ?with Miren with thefriends is happy?
is not grammatically correct.
Storingthe declension information, that creation would not beallowed and one of the clauses created by the systemcould be:Mirenekin+NN COM mahaia+NN ABS zoriontsua+JJ ABS da+VB.
(With Miren)+NN COM (the desk)+NN ABS is+VB happy+JJ ABS.The addition of the declension information will avoidsome grammatical errors in the generation process.
Butwhen the changed element is a verb, the system caninsert one that does not follow the same subcategoriza-tion7, which will lead us to a grammatical error too.So, changing the verb without more information can beuncertain.3.3 Semantic informationOn the other hand, if we take a look at the last example,it is not correct to say that the desk is happy.
To avoidthese cases, we posed the use of the Basque WordNet(Fellbaum, 2010) (Pociello et al 2011).
We used it tochange words with related ones.3.4 Morphological generationFinally, it is important the fact that Basque is an inflectedlanguage.
So, we need to have a morphological gener-ator (Alegria et al 2010) to create the correspondinginflected forms of the words.
This generator is basedon the Basque morphology description (Alegria et al1996).4 ExperimentsIn this work, we have performed a set of experimentsto analyze different strategies for the generation of stro-7The subcategorization indicates the syntactic arguments re-quired or allowed in some lexical items (usually verbs).164phes in Basque.
In the following lines, we explain theameliorations we get in each experiment.The first experiment creates strophes by insertingwords that are consistent with each POS-tag and itsinflection information.
We first get some of the mostcommon POS-tag sequences and for each POS-tag se-quence the application returns two strophes.
The firststrophe uses words from the same verse corpus to makesubstitutions.
The second one uses words from theEPEC corpus (Aduriz et al 2006).The second experiment creates clauses, but chang-ing only the nouns and adjectives from original strophesfrom the corpus.
We mantain the inflection information.In this experiment we also get two strophes for each pat-tern sequence, as in the previous attempt (verse corpusand EPEC corpus).
With this constraint we avoid thecreation of incorrect strophes because of the problem ofsubcategorization (explained in section 3.2).The third experiment makes small changes in theoriginal strophes (from the corpus), as it only replaceseach noun for a semantically related noun.
The relatednoun can be: (a) Antonym of the original word or (b)hyponym of the hypernyms of the original word.
Inorder of preference, first we try to change each namewith one of its antonyms.
If there is no antonym, thenwe try to get the hypernyms of the word to return theirhyponims.
Once the new word has been found, weadd the needed suffixes (the same ones that had thewords from the corpus) in order to fit correctly in thestrophe, using the morphological generator.
The changeof words with related ones gives us the chance to expresssemantically similar sentences using different words.5 EvaluationOnce the experiments were finished, we made an evalu-ation in order to analyze the quality of the automaticallygenerated strophes.
The evaluation of computer gener-ated poetry is nowadays fuzzy, so we defined a TuringTest-like evaluation.
We contacted two linguists that hadnot done any work on this project, so that the evaluationbe as objective as possible.
We prepared 135 strophesinterleaving some created by the machine with othersfrom the corpus.
We asked the evaluators to guess if thestrophe was done by the machine or by a human.
Weonly draw conclusions using machine-generated stro-phes, as we want to know how many of them percolateas human-generated ones.
In the next table you cansee the rate of sentences created by the machine andsuposed to be done by humans:EXPERIMENTEvaluator 1 1 2 3Percolated as human 0.033 0.259 0.75Evaluator 2Percolated as human 0.333 0.481 0.75As you can see, according to Evaluator 1, the firstexperiment was not very worthy, as the only 3.3% ofthe machine generated strophes percolated as humangenerated ones.
The second experiment got better re-sults, and the 26% of the strophes were thought to behuman generated ones.
As expected, the strophes ofthe third experiment are the most trustworthy ones.
Theresults given by the second evaluator are higher, but theimportant fact is the increase of the progression over theexperiments.6 Discussion & Future WorkIn this paper we have presented a set of experimentsfor the automatic generation of poetry using POS andinflectional tag patterns and some semantics.
In thelast section we show the Turing Test-like evaluation tomeasure the reliability of each experiment.
This will bepart of a whole poetry analysis and generation system.In the future, we intend to change verbs from stro-phes controlling the subcategorization of them in orderto enable the creation of well-formed strophes about aconstrained topic.
Also, we plan to use a frame seman-tics resource, such as FrameNet, and after creating astrophe, make some modifications to get an acceptablesemantic meaning.165ReferencesAduriz, I., Aranzabe, M., Arriola, J., de Ilarraza, A.,Gojenola, K., Oronoz, M., and Uria, L. (2004).
A cas-caded syntactic analyser for Basque.
ComputationalLinguistics and Intelligent Text Processing, pages 124?134.Aduriz, I., Aranzabe, M. J., Arriola, J. M., Atutxa, A.,de Ilarraza, D. A., Ezeiza, N., Gojenola, K., Oronoz,M., Soroa, A., and Urizar, R. (2006).
Methodologyand steps towards the construction of EPEC, a corpusof written Basque tagged at morphological and syn-tactic levels for automatic processing.
Language andComputers, 56(1):1?15.Alegria, I., Artola, X., Sarasola, K., and Urkia, M.(1996).
Automatic morphological analysis of Basque.Literary and Linguistic Computing, 11(4):193?203.Alegria, I., Etxeberria, I., Hulden, M., and Maritxalar,M.
(2010).
Porting Basque morphological grammarsto foma, an open-source tool.
Finite-State Methodsand Natural Language Processing, pages 105?113.Astigarraga, A., Agirrezabal, M., Lazkano, E., Jauregi,E., and Sierra, B.
(2013).
Bertsobot: the first min-strel robot.
6th International Conference on HumanSystem Interaction, Gdansk.Fellbaum, C. (2010).
WordNet.
Springer.Gerva?s, P. (2000).
Wasp: Evaluation of different strate-gies for the automatic generation of Spanish verse.
InProceedings of the AISB-00 Symposium on Creative& Cultural Aspects of AI, pages 93?100.Gerva?s, P. (2001).
An expert system for the compositionof formal spanish poetry.
Knowledge-Based Systems,14(3):181?188.Gerva?s, P. (2010).
Engineering linguistic creativity: Birdflight and jet planes.
In Proceedings of the NAACLHLT 2010 Second Workshop on Computational Ap-proaches to Linguistic Creativity, pages 23?30.
Asso-ciation for Computational Linguistics.Levy, R. P. (2001).
A computational model of poeticcreativity with neural network as measure of adaptivefitness.
In Proccedings of the ICCBR-01 Workshopon Creative Systems.
Citeseer.Manurung, R. (2003).
An evolutionary algorithm ap-proach to poetry generation.
PhD thesis, School ofinformatics, University of Edinburgh.Pociello, E., Agirre, E., and Aldezabal, I.
(2011).Methodology and construction of the Basque Word-net.
Language resources and evaluation, 45(2):121?142.166
