COMPUTING F IRST  AND FOLLOW FUNCTIONS FOR,FEA'rURE-THEoRE'rR?
GRAMMARSArturo TrujilloComputer Labora,toryUniversity of CambridgeCambridge CB2 3QG, gnghmdiat@cl.cam.ac.ukABSTRA(3T 1.1 F IRST ANI) FOLLOWThis paper  des(:ribes an algor i thm ff)r (;he com-lmtat ion of F I I{ST and F() I~LOW sets for usewith f(;atur(!-thcor('~(;ic grammars ,  in which thevalue of the sets t:onsist;s of pairs of feature-l;heorctic cat;o, gorit;s. The Mgori(;hm tn'(;sezve, sas mu(:h informed;ion from th(; gratnnmrs a,s1)ossibh',, using negative restriction to (h;fin(~(',quivah;nc(,, classes.
Addit ion of a s imple (Ia(;aS(;I;IIt:tIII'e leads to ;m order of ilta, glli|;lld(,; iln-\[)rov('Jll(;ii(; ilt exet:tl(;ion l;ilne ov(~r a naivo, iHl-ph;mo, ntation.1 INTRODUCTIONThe, need for (;flicien(; parsing is a (:onsta,n(; onein Natura l  Langmtge, Pro('cssing.
With the ad-vo, n|; ()f fea(;ur(>l;he, ore(;i(: gratmn;ti's, In;my of(;he opt imizat ion te(:hniqu(',s that w(;re a, pi)li(:a-bh; to Context  Free (CI") grammnrs  have r(;-(tuircd mo(titi(:ation.
For insl;an(:(~, ~ mlml)(~rof a lgor i thms used (;o ex(;ra,(:L p;~rsing l;a~bl(~,qfl'om CF grammars  have involved (list:at(linginform~t(;ion which ol;h(',rwisc, would have con-strain('d tim parsing pro('ess, (Brisco(; and Car-roll, 19!)3).
This t)ap(',r des(:rib(~s an extensionto an a lgor i thm that  ()pe, r~L(;('~s over CF gram-nmr to make, it at)pli(:M)h; to f(',atur(',-th(;oretic()lieS.
One advantage of th('~ (;x(;en(h~d Mgo-r i thm is (;ha?
it, i)r(;serves ~ts much of l;hc in-fOrlnalAon in (;h(!
graininar as I)ossibh;.\[n order to make more t,,\[\[icient parsers, it; isSOln(;gimt',s necessary (;o pr(;process ((:Olnl)ih;) agra, illlBa,r 1;o ext;ra,c(; \]'rom it; (;o\[)-down inforlrm-~ion (;o guide (;h(; s(;mr:h during analysi.q.
Tim\[irs(; sl;(;p in I;ho, prel)ro(:essing stage of sev-eral (;omi/ilal;ion algor i thms requires (;h(; sohl-tion of (;wo \['un(',tions normal ly  (:al\]e(l FII{,STand F()\]AA)W. Intui(;iv(~ly, lrIILS'T(X) givesus (;h(; (;(',rmina, l symbols (;ha(; may app(;nr inhfil,ial posi(;iou in substr ings de, riv(;(I froiD, c;L|;(~-gory X.
FOLLOW(X) gives us (;Ira (;c'rminalswhi(:h may imm(;dia,t(;ly follow a su|)string o1'(:~(;e, gory X.
For (,~xami)lc , in l;h(; gra,mmar S> NI' VP; NP - > (lel; II(tltlI; VP --} vtra NP,wc go(;:l~'H~sr(s')- v ' l i es ' - r (N / , ) - :  (J,c~,},v~llc, s '~r(y l , )  - {,,,~,,,..,},FOI.I.0W(A~,') : {,,~,,.,, ,},ml,mw(s ' )  - t,~01~l~(~p~,,(V~,).
( ,}  ($marks trod of input,)Th(;so, (;wo runc(;bmLs a,t:(~ hnpc, rtan|; in a \]a, rgo,l'il, II~( ~.
()f a lgor i thms used for construct ing el'-licit;n(; l)arsexs.
For ex;mq)le th(; l,I{-tmrse, rconst, rll(stion a lgor i thm given in (Aho c't al.,1986):232 uses F IRST  to ('omt)ute item do-SllI'( ~, va, hles.
AIm(;h(~r examph; is (;h{'~ t:ompu-(;ation of the /*  rela, tion whit:h is used in timc(mstru('(;ion of go, nt;ralize,(1 left-(:orn(~r parsers,(N(;dcrhof, \] !
)9:}); (;his relation is etl'ct:tivcly ~mex(;ensi(m of t;h(; funt:(;ion F IRST.8752 COMPUTING F IRST  ANDFOLLOWWe propose an algorithm :\[or the computa-tion of F IRST values which handles feature-theoretic grammars without having to extracta CF backbone from theln; the approach is eas-ily adapted to compute F()LLOW values too.An improvement to the algorithln in presentedtowards the end of' the pat)er.
Betbre describ-ing the algorithm, we give a well known proce-dure for coinputing F IRST for CF grammars(taken from (Aho et al, 1986):1189, where e isthe empty string):"rio conlpute FIRST(X) for all grammar sym-bols X, apply the following rules until no moreterminals or e can be added to ally FIRST set:.1.
If X is terufinal, then FIRST(X) is X.2.
If X -+ e is a production, then add e tom~ST(X).3.
If X is nonterminal and X --~ Y1Y,2...Y~ isa.
production, then place a in FI.I?,ST(X) if\['or some i, a is in FIR, ST(Yi), and e is inall of F1RST(YI) ... FIRST(Yi_:I); that is,Yt...Y/ I ~ e. If e is in F\[12,ST(Yj) for allj = 1, 2,..., k, then add e to FIRST(X).Now, we can compui;e FIRST t:br any string XIX.e...Xu as tbllows.
Add to FIRST(XIX2...X~z)all of the non-e symbols of I,'II?.ST(X,).
Alsoadd the non-e symbols of 1,'I.BST'(X,2) i re is in.FI.RST(Xt), the non-e symbols of P'll{ST(Xa) ife is in both t,'IH.ST(X,) and F1RSfl'(X2), and soon.
Finally, add ~ to FIH.ST(XIX.e...X,~) if, tbrall i, FIH, ST(Xi) contains e."This algorithln will fbrm the basis of our pro-posal.3 COMPIL ING FEATURE-THEORETIC  C~RAMMARS3.1 EQUIVAI,ENCE CLASSESThe inain reason why the al)ove algorithm can-uol: be used with li~al, ure-theoi'etic grammars isthat in general the number of possibh; nonter-minals allowed by the gralnmar is intinit~e.
Oneof the simplest ways of showing this is wherea grammar accumulates the orthographic rep-resentation of its terminals as one of its fea-ture values, it is not difficult to see how onecan have an infinite mmlber of NPs in such agran l Inar :NP\[orth: the (log 1NP\[orth: the fat clog\]NP\[orth: the big Nt dog\], etc.This means that l~'Ii~ST(NP\[orth: the (tog\])would have a different value to FllLgT(NP\[orth: the fat dog\]) even though they sharethe same left;most erminal.
That  is, |:tie ilia -ture structure for the substring "det adj noun"will be different to that for "det noun" ewmthough they have tile same starting symbol.This point is important since similar situationsarise with the subcategorization frame of verbsand the selnan(;ic value of categories in con-temporary theories of grammar, (Pollard andSag, 1992).
Without modification, the algo-r ithm above would not terminate.The sohltion to this problem is to define afinite number of equivalence classes into whichthe infinite uumber of nnnterminals inay besorted.
'Fhese (',lasses may be established ina number of ways; the one we have adopted inthat presented by (Harrison and Ellison, \] 992)which builds on l;he work of (Shieber, 1985): itintroduces the nol;ion of a negative restrictorto define equivalence classes.
In this solutiona predefined portion of a category (a specificset of paths) is discarded when determiningwhether a category belongs to an equivalence(:lass or not.
For instance, in the above ex-ample we could define the negative restrictorto be {orth}.
Applying this negative restrietorto each of the three NPs abow~' would discardthe infbrmation in the %rth' feature t,o give usthree cquiwflenI; nonterminals.
It, is clear thatthe restrictor must be such that it discards fea-tures which in one way or another give rise I;oan infinil;e munl)er of nOlfl;erminals.
Unl'ortu-nately, terlnination in not guaranteed for allrestrict;ors, and \['llrl;hermore, the, best restric-tOl' CalUIOt; l)e chosen  automatical ly since it de-pends on the amount of grammatical  informa-tion I;hat is t;o be preserved.
Thus, selection876o\[ :m ~t)t)roi)rial;e restr ictor will det)(',IM on theparti(:ub~r grammar  or system used.3 .2  VA\ ]  A)E SI IAR.
INGAno(;her prol)leln wil;h the Mgo,:il;hm Moove isl;ha.t, ree.ntranci(:s bel;w(:en a. ca tegory  a)\[(t itsIql l .ST a.nd F() I , I , ( )W values are n()(.
t)reservedin the sohit ion to (;hese t'unct;iollS; this is be-cause (he algoril;hlu assumes al;omic syml)olsand /;hese ca,m~ot encode (~xI)licilJy ,~ha, red in-f()rmation l)etwe(;l~ c~t(;t:gories, l 'br example,cousid(:r the \[oIlowing ha,ire gra, mnm, r:S:  :> Ne\[a.gr: X\] VP{a.gr: X\]VP\[agr: X\] ~> Vint\[a,gr: X\]NP\[~,gr: X \ ] -5  Det  N\[a.gr: X\]We would like l,h(: solul;i(m of I,'OLLOW(N)t() in(:h\]de l;h(: l)in(ling o\[ the 'ag\]" f(:a,tureSllch t;ha(; (;he va.hl(: of F() IA,()W ,'(~s(,ml)h:d:: x\]): : x\].
(:he a.lgoril;hm above, even wi(;h a. r(:s(;ri(:t;or,would nol, prese)'ve such at l)indiug siuce thea,dditi(m of a new ca, t('~go)'y to I,'OLLOW(N)is don(', indel)e.nd(',utly of the bindings \[)(;l:w(',(',n(;he new (:a,i:egory ~tlut N.4 Ti le  BASIC AI,QOI{.ITHMWe l)rOpose an algor i thm which, rather thancousl;ru(:{; a set; of categories as (;\[t(~ vah\]e ofl,'II1.S"l' a.nd F( )M, ( )W,  <:onstru(:(;s a.set of pairseach of which represeuts a (:M;egory and itsF IRST  ov F ( ) I , LOW category, with all the (:or-rect biudings exp\]i(:it;ly encoded.
For instant(:,for l;he a.hove (:xa.iill)l( L (,he pair (Vl>\[agr: X\],Vint\[agr: X\]) would t)e in l;ho.
set r(,pres(:ntingthe vMue ()f (;he fllll(:I;Joll FII{.ST.
In th(~ uextsection the a.lgorithm for (:OlUf)ul;ilu L FIl l .ST isd(:s(:ril)(,.
(l; (:ompul;a.l;io:t)oi' F() I~\] , ( )W t>ro(:(~e(lsin a s imi lar  l 'ashion.4.1 SO\],VIN(; FI.IZSq?When modi fy ing the a.lgorit;hm of Section 2w(' note 1;ha.l; (:a.ch o(:(:mren(:(: o\[' a.
(:al;eg()ry iu(;he g rammar  is pol;e.n(>ia.lly <list;in('.
(; \['rom ev-(:1' 3, o(;her (:a.Le.gory.
\])1 addit;iou, l()r each cat,c-gory we nee(| I;o r(:memb(u' a, ll the reentrmtciesbetween it aud the da,ughters wi(;hin the ruleill which i(; oc.(:ltrs.
Finally, we assmne thatany ca, tegory hi a, rule which c~m unify witha lexica.1 category is marked in some way, sayby using the t'e~ture-wthle pair 'l;er: + ' ,  andI;ha.l.
llOtl-(;(!rttlilla.l caJx;gori(,s IIIllS|; llni\[y withthe tool;her o\[' ~ome rule in the grammar ;  thelatter con(lit;ion is ne(:essaxy he(:ause the Mgo~r i thm only c(mllmLes the solutiou of FIl l .ST \[orh:xi(:a,l (:a.lx:gories in' for (:a?egories tJml; occur asmot, hers.\]n corn\]rot;in ~ Iql{.g'r w(' i(,era.l;e over ~1| \[;herules ill t;h(!
gF;LIHHI&I', (;re.al;ing t, he i\[loi;h('.l' O\[each rule as the category fl)r which we m'e (;ry-ing (,o lind a FIll.ST wdue.
Throughout  eachi(x~ral:ion, unif ic~l;ion of  a, (la.ugh(;er with tim lhsof an eh:Inent o\[ lql{ST resul(;s in a. modif iedrule and ~ modified pnir in which bindings be-(;ween the mot;her category mM the )'hs o\[ thepair are (~si;a, lflislmd.
The modi\[ ied mot;her aimrhs are \[;h('.tl l,q(:(l (,o (:o,lH(;rtl(:l; I,ho 1}air whichis added to F\[\]{ST. l)'or iusta.nce, giwm ruleX - > ~" ~u,d pair (L, l~), w(!
unify Y and L tot<iw: X ' -  } }7, and (I7, 1{); DOln these the pair(X', l~ t) is COllSl, t'llc:l;cd ~tll(| added 1,o \] I ~,S \[.The algorith\]n a.ssumes an op('ra?ion -I-~.which (:onsLrll(:l;.q a. sel; H' -- ,5' -} <7 /) ill the lbl-lowing w~Lv: i\[ pair p sul)smues an element; aof 5 then S' = ,ff - o, fl- p; if p is subsulnedI)y an (Qement of ,%~ (;hen 3;' ~= ,%'; else S' - ,S) p. 1(; should b('.
uol;ed (;trot the pairs col>stitul;h~g the wflue of li'II{.ST can themselw~sl)(: comlm.red using the subsumpt ion relation inwhid~ reeIll;ran(; wdu(;s a.re su\[),'-;ulIcled by non-r(:(:lll;ra.ti1; oIlcs~ 3AI(\[ combined using the uni\[i-cation olmration.
Thus in the pl'in(:ipal stepof the a.l~;orithm, a. new \]mir is constructed ;isdescribed above, ~ restrictov is appl ied to i(;,a.nd the resulting, resl;ricted pair is +<-addedto F IRST.
'Phe a.lgorithm is a.s follows:\].
\[nitia, iise t " i ' r , s l , .
~ {}.2. l~,un through a J1 the da,ughgers in Lhegramma, r. I f  X is pre-t;erlninal: thenfci,~.,~t :- Fi,~.,~t I< (X ,X)N ,  (whore(X,X)!q> meaus a.pply the nega.tiw: re.-,%ri(:tor (P (x) l~he.
ira, it (X,  X ) ) .3.
For each rule in the grammar  with mother877SSVP\[agr: X, slash: Y\]NP\[agr: X, slash: NULL\]NP\[slash: NP\]=> NP\[agr: X, slash: NULI,\] VP\[agr: X, slash: NULL\]NP\[slash: NULL\] NP\[agr: X, slash: NULL\] VP\[agr: X, slash: NP\]=> Vtra\[agr: X, ter: +\] Ne\[slash: Y\]-~ Det\[ter: +\] N\[ag,': X, ter: ?.\]=>-eFigure 1: Example grammar with value sharing.X, apply steps 4 and 5 until no morechanges are made to First .4.
If the rule is X -+ e, then F i rs t  =F i r s t  +< (X, e)!e~.5.
if the rule is X -+ V,..Y~..Yk, then F i rs t  =F i r s t  +~ (X', a)l(I ) .
if' ~(Y'i, a) has success-flflly unified with an eleinent of F i rst ,  and(~,, e, )... (~%,  ei_~) have all successfullyand simultaneously unified with membersof F i rs t .
Also, F i rs t  = F i r s t+< (X',  e)\[(l~if (Y(, e~)...(Y\[, e~) haw ~.
all suc(:essfullyand simultaneously unified with elementsof lvir',vt.6.
Now, for any string of categories Xl..X~..X,~, F i r s t  = F i rs t  +< (X',...X\[,,, a)!
(I)if (X~, a) has sueeessflflly unified with anelement of F i rst ,  and a f e. Also, fori -- 2 .
.
.n ,  F i r .
s t  = t " i r ' s t+< (X~.
.
.X  n, a)!q)if (X ' ,a)  has suceessfiflly unified withan eMnent of Fi rst ,  a ~ e, and(X~, e, )... (X~_l, ci-1) have all sueeessfidlyand simultaneously unified with membersof Fi rst .
Finally, F i rs t  = F i r s t  +<(Xf...X,'~, ?)!
(I' if (X' , ,e,) .
.
.
(X~, %) haveall suecessflflly and simultaneously unifiedwith members of Fi rst .
(This step may beeomtmted on demand).
()no observation on this algorithm is in order.Tim last; action of steps 5 and 6 adds e as al)ossible wfiue of FII{ST for a mother categoryor a. string of categories; such a wflue resultswhen all daughters or categories have e as theirFII2.ST value.
Since most grammatical descrip-tions assign a category to e (e.g.
to bind onto itinformation ecessary for correct gap thread-ing), the.
pairs (X ' ,{-)or  (X\[...X.\[~, ?)
shouldhave bindings between their two elements; thiscreates the problem of deciding which of thecs in the F IRST pairs to use, since it; is possi-t)le in principle that each of these will havea difl:erent value for (.
In our irnplementa-tion, the pair added to F i rs t  in these situa-tions consists of' the mother category or thestring of categories and the most general cate-gory for e as defined by the grammar, thus et-fectively ignoring any bindings that e may havewithin the constructed pair.
A more accuratesolution would have been to compute multiplepairs with c, construct their least upper bound,and then add this to First .
However, in ourimplementation this solution has not t)rovennecessary.4.2  EXAMPLEAssuming the grammm: in Fig.
1 and the neg-ative restrietor (\]) = {slash}, the following is asimplified run through the algorithm:?
~',:r.~t = {}?
After processing a.ll in'e-terminal categoriesFir,st - {(Dot, Dct), (N, N), (Vt'ra, Vtra)}(obvious bindings not shown).
* After I;he first iteration First  = {(Det, De.t),(N, N),(W, ra, Vt,',*),(VP{,,,r," : X\], W','~+,,:," :xJ), (NIP.. Wt),  (NI5 ~)}* Since ~slash' is in (.1}, any of the NPs in thegrammar will unit) with the lhs of (NP, e) andhence S will have Vtra as part of its FIRSTw~lue..rir,t = {..,(V l'\[o,,,' : X\], Wra\[a,," : X\]),(NP, Det),(NP, e), (S, De, t), (S, Vtra)}?
The next iteration adds nothing and the firststage of the algorithm terntinates.The second stage (step 6) is done on demand,for example to eomtmte state transitions fora parsing table, in order to avoid the expenseof colntmting FIRST for all possible substringsof categories.
For instance, to compute FIlq, STfor the string \[NP NP VP\] the algorithm wo,'ksas follows:878?
{.., (v  : x \ ] ) ,(N?
After considering the firsl, NP: t,'i'rsl, -:{.., ( f ro '  NIP Vr\], D~:t)}.?
(3onsi(l('a:~fl;ion f 1;11(,.
sc(:ond NI ) in I;h('~ inputsl,ring rcsul(;s in no (:ha.uges to t,'iv.,d., given the s(>manl;i(:s of-} <, sin(:e tim pair l;lutl; il; wouhl have,, Sin(-(; Nf's can rcwri(;(~ as < (i.
(', (N I ' , ( )is in  \[;"i','>;l,), l'"i'v,'~l, : :  {..,  (\[N\[' .N\]' V\["\], I)e.f),(\[Nr m' vr\],?
Finally, (\[NI' NP VI'\], c) ma,y not t)e added since(V I ' ,  () does nol; unif~y wil;h ;my clemett(, of Fir'sl,.5 IMPROVING THE SEARCHTHI/,OUCdt FiTst1\[ (;he a.lgoril;hm is r ,m a,s t)r(;s(;nt(~(l, ea.
(:h il:-eration I;hrough l;ha gramunar rules lm(:()messlow(;r a, nd sl(-)w(;I'.
The r('.a,son is (;\]l~:tl;> iH sl;e\[)5, when st!a,r(:hing l"i 'rst to cr(:at(, a new Imir(X' ,  o,), every 1)a, ir in l,'i'rsl, ix cousi(h;red andunilical, ion of its lhs with the relevanL daughterof ,V ~(;teml)l,('xl.
Sin(:(; en(:lL i(,(~raLion n()rmMlyadds pah's to Fi', 'st ca.oh i(;(,r~t;ion involves as(mr'(:h I;hrough a larger ~t\[l(l larger s('.
(;; fm-(;hertm)re, (;his search involves utfilic~rt;ion, a.ndin the case of a. su(:(:(;ssful match,  tit(; subse-quent; (:(instruction and a(l(tition to F i ' rst  alsor('quir(:s sul)sumption che(:ks.
All ()f t;hese Ol)-erat ions (:olnbine (;o make ea.t:h a(hlitit)nal ele-m(;nl; in 1/i'rsl, lu~ve ~v strong effect, on the per--\[brma,nce o\[ (;he Mgorithm.
\Ve (;h(~rel'ore ne(,.d(;o mmilnize (;he number  of pairs searched.C(msi(h,ring the d(:t)('nd(,nci(!s that exist t)(>Lwee, u pairs in Fivsl, one nol;iccs (;lust; once apair has been consi(ter(M in rela(:ion wit;h a, llI;hc rlllcs in the gralnnlaa', I;he efl'(~cl; of thai,l);rir has |)eeu COml)h;l;(;ly dctermin('.(\[.
Thai; is,a.ft(;r a, pair is added to Fi'r>d, i( n(>.d only I>(,(:onsidcr(:d u I) (;o a.nd int;luding (he rule frOIllwhich it was d(wivo.d, aft;ev which t ime it; maylm excluded from fl~rtho.r se;trches.
For exa.m~t>le, ta.ke th(: previous gra.IllIiii-lr, a.lld ilt pa.rtic-ul;n' (:h('~ va.hw of l/'irsl, a\['l;o.r 1;\]l('~ first i l;ei'~t;ionthrough th(: algorithln.
'\['he lmir (NI),  l)c,t),a,dded Iwca, use of l;hc rifle NP\[~gr: X, slash:NUI3~\] -~ DeL\[tm: +\] N\[a.gr: .X, Ix:r: +\], ha.s I;() Im(:onsi(lered only once by every ruh', in the gram-max; M't, er thai;, this I)a.ir cmmot  hc involved inl;he ('.onsl,ru(:tion of new values.A siml)le data.
stru('.ture which keel)s I;rackof thos(!
pairs (;hat; n(;ed to be sear(:hcd a.
(, anyone tim(; was added 1;o the Mgoril,hm; the (la.taS(;I'tlC(;III'(~ l ,ook l;hc l'()l'l\[l o\[' ~ list of l)oin(;ers I;oa.cl:ive pa.irs it) l,"i'rst, whel:(~ m, a.
('.l;ivc pair isone which has t~o(: linen (:()nsid(,red l)y the rulefrom which il; was c.(mst;ru(:t(M. For exa.ml>l( hthe pair (NP ,  I)(t) would 1)('.
a.
('.l;ive for a com-l)le(x~ it(,ral;ion l'vom the moment  tim(> the cot--responding rule in(,roduc.ed iL until that rule isvisited again (hiring (;he second it(u'~ti(m. Theeffe(:t of  this policy is (;o allow eaclt pair inl;'i'rsl, to be (;este(l against each )'ul(~ exa(:l:lyOlI(:(: a, ll(\[ (;hell \])e ex( : lu( led \['rolil slll)st~(lllell(;s(:ar('h(:s; this g)'ea.
(;ly r(~(lu(:(!s th(: mtml)er (>I'pairs considered for ca,dr il;era(,ion.Usin/~; th(' 't'yt>e<l l"(,a.l;ure St;ru<:l;m'e sysl:(!m(tit<,.
LK I \ ] )  of (lh.is<:<m el, al., 1993), we wroletwo gr~mmmrs and (;esl;(;d l;h(: algoril;hm onl;h(~ttl.
'l"a.ble 1 shows the average llllllIllCI' Of'pairs c(mside)'(~d for cad1 i(;(:rat;ion (-ompa.r(:(lI;o (;h(~ a.vera.ge mtmber  of pairs in l,'i'rst.\[ 13 Ihfl!
Grammar I 21 Rule (,rmnmar\] (,'on~\]d,~,\]~d %(:~,1 (,,,.'
s,)h,~,(~,\] \[ :coL~L1 \]{)271 - i).7 \[ u :7- \]2E) .o \] _ A;qLup oTabl(; f: Average mmflmr of 1)a.irs per iteral;ion.As we ca.n see., ah;er the first iteral;ion Lhemmflw, r of lmirs I;h~rt needs to be consideredis lnss (lnltch h.',ss t()i Lhc final iteration) thaut, he l;oLal mlml)er o\[ pf i rs  in I<'i'rsl,.
Similar im-I)rOV(mWnl;s in per\[ 'ormance were obga.ined forthe (:Oml)Ul;ation of F() I , IX)W.6 \[~iEI,ATED R,ESEARCH~l'he exl,eusion to the 1,1{ al~gorit, hn~ presenlx~dby (Na,ka,za,wa, 1991) uses a, similar a4)proa,cht;o LhaL dea',rilmd here; the \['undsions inw)lwMhOWCVtW ,~LI'(!
I;h()s(~ \[l(~CCSS/,/,l'y \['()1' \[;h(; /;OllSLI'llC-(;ion of an / J{ pa.rsing t;al)le (i.e.
the GOTOand A(YI'I()N funcl;i(ms).
One technica.l (lit t879ference between the two approaches i  that heuses positive restrictors, (Shieber, 1985), in-stead of negative ones.
In addition, both ofhis algorithms also differ in another way fromthe algorithm described here.
The differenceis that they add items to a set using simpleset addition whereas in the algorithm of Sec-tion 4.1 we add elements using the operator+<.
Furthermore, when computing the clo-sure of a set of items, both of the algorithmsthere ignore the effect that unification has onthe categories in the rules.For example, the states of an LR parser arecomputed using the closure operation on a setI of dotted rules or items.
In Nakazawa's al-gorithms computation of this closure proceedsas follows: if dotted rule < A ~ "w.Bz > isin I, then add a dotted rule < C -+ .y > tothe closure of I, where C and B unify.
Thisignores the fact that both dotted rules may bemodified after unifcation, and therefore, hisalgorithm leads to less restricted \[values thanthose implicit in the grammar.
To adapt ouralgorithm to the computation of the closureof I for a feature-theoretic grammar would in-volve using a set of pairs of dotted rules as thevalue of I.7 CONCLUSIONWe have extended an algorithm that manip-ulates CF grammars to allow it to handlefeature-theoretic ones.
It was shown how mostof the information contained in the grammarrules may be preserved by using a set of pairs asthe value of a function and by using the notionof subsumption to update this set.
Althoughthe algorithm has in fact been used to adaptthe constraint propagation algorithm of (Brew,1992) to phrase structure grammars, the ba-sic idea should be applicable to the rest of theflmctions needed for constructing LR tables.However, such adaptations are left; as a topicfor future research.Finally, improvements in speed obtainedwith the active pairs mechanism of Section 5are of an order of magnitude in an implemen-tation using Common Lisp.ACKNOWLEDGEMENTSThis work was funded by the UK SERC.
Iam very grateflfl to Ted Briscoe, John Carroll,Mark-Jan Nederhof, Ann Copestake and twoanonymous reviewers.
All remaining errors aremine.ReferencesAho, A. V., R. Sethi, and J. D. Ullman , (1986).Compilers - Principles, Techniques, and Tools.Addison-Wesley Publishing Company, Read-ing, MA.Brew, C., (1992).
Letting the cat; out of thebag: Generation for Shake-and-Bake MT.
InCOLING-92, pages 610-616, Nantes, l~-ance.Briscoe, E. and J. Carroll, (1993).
GeneralisedProbabilistic LR Parsing of Natural Language(Corpora) with Unification-Based Grammars.Computational Linguistics , 19(1):25 60.Briscoe, E., A. Copestake and V. de Paiva (eds).(1993).
Inheritance, D@ults and the Lexicon.Cambridge University Press, Cambridge, UK.Harrison, S. P. and T. M. Ellison, (1992).
Re-striction and \[\[L'rmination in Parsing withFeature-Theoretic Grmmnars.
ComputationalLinguistics, 18 (4) :519-530.Nakazawa, T., (1.991).
An Extended LR ParsingAlgorithm for Grammars using Feature-BasedSyntactic Categories.
In Proceedings EuropeanACL 91, pages 69--74, Berlin, Germany.Nederhof, M., (1993).
Generalized Left-CornerParsing.
In Proceedinos European A CL 93,pages 305 -314, Utrecht, The Netherlands.Pollard, C. and I.
Sag, (1992).Phrase Structure Grammar.sity Press, IL.Head DrivenChicago Univer-Shieber, S. M., (1985).
Using Restriction to Ex-tend Parsing Algorithms for Complex-Feature-Based Formalisms.
In Proceedings ACL 85,pages 145-152, Chicago, IL.880
