Proceedings of the Fourth Workshop on Statistical Parsing of Morphologically Rich Languages, pages 91?96,Seattle, Washington, USA, 18 October 2013. c?2013 Association for Computational LinguisticsA Statistical Approach to Prediction of Empty Categories in HindiDependency TreebankPuneeth Kukkadapu, Prashanth MannemLanguage Technologies Research CenterIIIT Hyderabad, India{puneeth.kukkadapu,prashanth}@research.iiit.ac.inAbstractIn this paper we use statistical dependencyparsing techniques to detect NULL or Emptycategories in the Hindi sentences.
We havecurrently worked on Hindi dependency tree-bank which is released as part of COLING-MTPIL 2012 Workshop.
Earlier Rule basedapproaches are employed to detect Emptyheads for Hindi language but statistical learn-ing for automatic prediction is not explored.In this approach we used a technique of in-troducing complex labels into the data to pre-dict Empty categories in sentences.
We havealso discussed about shortcomings and diffi-culties in this approach and evaluated the per-formance of this approach on different Emptycategories.1 IntroductionHindi is a morphologically rich and a relativelyfree word order language (MoR-FWO).
Parsing isa challenging task for such MoR-FWO languageslike Turkish, Basque, Czech, Arabic, etc.
be-cause of their non-configurable nature.
Previous re-search showed that the dependency based annota-tion scheme performs better than phrase based an-notation scheme for such languages (Hudson, 1984;Bharati et al 1995).
Dependency annotation forHindi is based on Paninian framework for buildingthe treebank (Begum et al 2008).
In recent yearsdata driven parsing on Hindi has shown good re-sults, the availability of annotated corpora is a defi-nite factor for this improvement (Nivre et al 2006;McDonald et al 2005; Martins et al 2009; Man-nem and Dara, 2011).
Other approaches such asrule-based and hybrid of rule-based and data-driven(Bharati et al 2009a) for Hindi language have alsobeen tried out.
In the shared task for Hindi Pars-ing organized with COLING workshop Singla et al(2012) achieved best results for Gold-Standard datawith 90.99% (Labeled Attachment Score or LAS)and 95.87% (Unlabeled Attachment Score or UAS).Empty category is a nominal element which doesnot have any phonological content and is thereforeunpronounced.
Empty categories are annotated insentences to ensure a linguistically plausible struc-ture.
Empty categories play a crucial role in the an-notation framework of the Hindi dependency tree-bank (Begum et al 2008; Bharati et al 2009b).
Ifdependency structure of a sentence do not form afully connected tree then Empty category (denotedby NULL in Hindi Treebank) is inserted in the sen-tence.
In the Hindi treebank, an Empty category hasat least one child.
Traditional parsing algorithms donot insert Empty categories and require the Emptycategories to be part of the input.
These Emptycategories are manually annotated in the treebank.In real time scenarios, like translation between lan-guages, it is not possible to add the Empty cate-gories into the sentences manually.
So we require anapproach which can identify the presence of theseEmpty categories and insert into appropriate posi-tions in the sentence.Figure 1 shows an Example of a Hindi sentenceannotated with a NULL category.
The English trans-lation for this sentence is, ?Its not fixed what his bigbank will do?.
The aim of this paper is to investigatethe problem of automatically predicting the Emptycategories in the sentences using the statistical de-91Figure 1: An Example of a Hindi sentence annotated with a NULL category.pendency parsing technique and to shed some lighton the challenges of this problem.
As the data-drivenparsing on Hindi language has achieved good results(Singla et al 2012), we try to use this approach topredict Empty categories in the sentence.
In thisapproach the information about NULL categories isencoded into the label set of the structure.
In theseexperiments we have used only Projective sentencesfrom the treebank.
Non-projectivity makes it diffi-cult to identify the exact position of NULLs duringintroduction of NULLs in the sentence.The rest of the paper is divided into the follow-ing sections: Section 2 discusses about the relatedwork.
Section 3 gives an overview of the Hindi datawe have used for our experiments.
Section 4 con-tains the details of our approach and section 5 dis-cusses about experiments, parser, results and discus-sion.
We conclude the paper in section 6 with a sum-mary and the future work.2 Related WorkPrevious work related to Empty categories predic-tion on Hindi data is done by Gsk et al(2011) whichis a rule based approach for detection of Empty cate-gories and also presented detailed analysis of differ-ent types of Empty categories present in the Hinditreebank.
They used hand-crafted rules in orderto identify each type of Empty category.
As thisis a rule based approach it becomes language spe-cific.
There are many approaches for the recov-ery of empty categories in the treebanks like Penntreebank, both ML based (Collins, 1997; Johnson,2002; Seeker et al 2012), and rule based (Camp-bell, 2004).
Some approaches such as Yang andXue (2010) follow a post processing step of recov-ering empty categories after parsing the text.
Gsket al(2011) have discussed about different typesof Empty categories in Hindi Treebank in detailedmanner.
The main types of Empty categories are:?
Empty Subject where a clause is dependent onmissing subject (NP) of the verb, denoted asNULL NP or NULL PRP.?
Backward Gapping where the verb (VM) isabsent in the clause that occurs before a co-ordinating conjunct, denoted as NULL VM?
Forward Gapping where the verb (VM) isabsent in the clause that occurs after a co-ordinating conjunct, denoted as NULL VM.?
Conjunction Ellipses where the Conjunction(CC) is absent in the sentence, denoted asNULL CC.3 DataWe have used COLING-MTPIL workshop 2012data for our experiments.
This was released by theorganizers as part of the shared task in two differ-ent settings.
One being the manually annotated datawith POS tags, chunks and other information such asgender, number, person etc.
whereas the other onecontains only automatic POS tags without any otherinformation.
We have used Gold standard data with92Type of NULL No.
of InstancesNULL VM 247NULL CC 184NULL NP 71NULL PRP 25Table 1: Empty categories in Training + DevelopmentDataset of Hindi treebank.Type of NULL No.
of instancesNULL VM 26NULL CC 36NULL NP 9NULL PRP 4Table 2: Empty categories in Testing Dataset of Hinditreebank.all features provided for our experiments.
Train-ing set contains 12,041 sentences, development dataset consists of 1233 sentences and testing data setconsists of 1828 sentences.
In our experiments wehave worked with only projective sentences.
Wehave combined the training and development datasets into one data set and used as training in the finalexperiments.Training and Development data together consistsof 544 NULL instances (in 436 sentences) of 10,690sentences.
The major types of Empty categoriespresent in the training data are of type NULL CC,NULL VM, NULL NN and NULL PRP categories.Table 1 and Table 2 show the number of instances ofeach category.
Testing data consists of 80 instances(72 sentences) of 1455 sentences.4 ApproachThere are 3 main steps involved in this process.4.1 Pre-ProcessingIn the first step, we encode information about pres-ence of Empty categories in a sentence into thedependency relation label set of the sentence.
IfNULLs are present in a sentence, we remove theNULLs from the respective sentence in the treebank.In a sentence the dependents or children of a NULLcategory are attached to the parent of the NULL cat-egory and their respective labels are combined withdependency label of NULL category which indicatesthe presence of NULL and also says that such wordsor tokens are children of NULL category.
Instead ofjust combining the labels we also add a sense of di-rection to the complex label which indicates whetherthe position of NULL is to the right or left of thistoken in the sentence and subsequently NULLs arealso detached from its parent node.
Therefore acomplex label in a sentence indicates the presenceof a NULL category in the sentence.Example: Null-label r dep-label is a generictype of a complex label.
In this format ?r?
indicatesthat a NULL instance is to the right of this token.Null-label is the dependency relation label joiningthe Null instance and its parent and dep-label is thedependency relation label joining the current tokenor word to its parent which is a NULL instance.Figure 2 illustrates this step.4.2 Data-driven parsingIn the second step a Data-driven parser is trainedusing the training data (with complex dependencyrelation labels) and when this parser model is usedon the test data it predicts the complex labels in theoutput.
In this approach we have tried out differentdata-driven parsers such as Malt (Nivre et al 2006),Turbo (Martins et al 2010) and MST (McDonaldet al 2005) for this experiment which were shownearlier to be performing better for Hindi Parsing byKukkadapu et al(2012) and found that Malt parserperforms better than the rest on this data with com-plex labels.4.3 Post-processingIn the final step, Post-processing is applied on theoutput predicted by the parser in the above step.
Inthis step presence of NULLs are identified using thecomplex labels and their position in the sentenceis identified using sense of direction in these labels(i.e., whether NULL instance is to the left ?l?
or right?r?
of this token).
During the insertion of NULLsinto the sentence Projectivity of the sentence mustbe preserved.
Keeping this constraint intact and us-ing the direction information from the dependencyrelation labels, NULLs are introduced into the sen-tence.
Figure 2 illustrates this step.The advantage in using statistical approach ratherthan a rule based approach to predict NULLs is, it93Figure 2: Processcan be easily used to predict NULLs in other MoR-FWO languages.
The problem with this approachis, it can?t handle Empty categories occurring asLeaf nodes (or Terminal nodes in the dependencytree) and as Root nodes.
As we have mentionedearlier, the dependency annotation scheme of Hindilanguage does not allow for Empty categories to oc-cur as Leaf nodes (or Terminal nodes).
But if theseEmpty categories occur as Root nodes in the depen-dency tree then such cases are not disturbed in ourapproach.5 Experiments and Results5.1 Parser settingsAs mentioned earlier we had used Malt parser forour experiments.
Malt Parser implements the tran-sition based approach to dependency parsing whichhas two components:1) A transition system for mapping sentences intodependency trees.2) A classifier for predicting the next transition forevery possible system configuration.Malt parser provides two learning algorithmsLIBSVM and LIBLINEAR.
It also provides variousoptions for parsing algorithms and we have exper-imented on nivre-eager, nivre-standard and stack-proj parsing algorithms.
Nivre-eager has showngood results in our experiments.5.2 Features and TemplateFeature model is the template, which governs thelearning from the given training data.
We observedfeature model used by Kosaraju et al(2010) per-forms best.In order to get best results in the second step(Data-driven parsing) we have experimented withType of NULL Category RecallNULL VM 50NULL CC 69.45NULL NN 88.89NULL PRP 50Table 3: Empty categories Predicted by this approach ontest data.various features provided in the data.
Kosaraju et al(2010) and Husain et al(2010) showed the best fea-tures that can be used in FEATS column in CoNLL-X format.
These features are vibhakti (post posi-tional marker), TAM (tense, aspect and modality),chunk features like chunk head, chunk distance andchunk boundary information have proved to be ef-fective in parsing of Hindi language and our resultson overall accuracy of data is consistent with theirresults.5.3 Results and DiscussionThe Results obtained on the test dataset are shownbelow and Recall on each Empty category are givenin Table 3:The Results obtained by using this approach onthe test set including all the Empty category types isas follows:Precision = 84.9Recall = 69.23F-measure = 76.26In computation of the above results the exact po-sition of NULLs in the sentence are not considered.These values indicate the efficiency of the systemin identifying the presence of the Empty categoriesin the system.
However, this approach inserted the94NULLs in exact positions with a Precision of morethan 85%, i.e., of all the NULL instances it has in-serted correctly, it has inserted 85% of them in exactpositions in the sentences.The approach was able to insert NULL NP to-kens with good accuracy but it had a tough time pre-dicting NULL VM tokens.
This was also consistentwith Gsk et al(2011) conclusions about Empty cat-egories in Hindi treebank.In case of NULL VM categories we have ob-served some inconsistency in the annotation of thesesentences.
In these sentences which have multipleclauses with main verb (VM) token missing, certainsentences are annotated with NULL VM for eachclause where main verb (VM) token is missing andcertain sentences are annotated with one NULL VMfor all the clauses with main verb (VM) missing.This may be a reason for accuracy drop in predict-ing NULL VM tokens.
The main reason for low ac-curacy as we have observed is that the output pre-dicted by the parser is low for these complex labels.The test data consists of 202 complex labels whereasthe parser has been able to predict only 102 of them,which is a huge drop in accuracy for complex labels.The overall accuracy of parser on the test data (onlyprojective sentences) has been high 91.11%(LAS),95.86%(UAS) and 92.65%(LS).
The low accuracyof the parser on complex labels may be due to lessnumber of these instances compared to size of thecorpus.
Another reason may be due to the introduc-tion of complex labels the size of label set has in-creased significantly and it may be difficult for theparser to learn the rare labels.6 Conclusion and Future workIn this paper, we presented a statistical approach toEmpty category prediction using Data-driven pars-ing.
We have used state-of-the-art parser for Hindilanguage with an accuracy above 90% and haveachieved a decent F-score of 76.26 in predictingEmpty categories.
We look to try out this approachfor other MoR-FWO languages and compare theperformances on different languages.
We need toidentify Features which would help in identifyingNULL CC category and also should try this ap-proach on a big data set with a significant numberof instances of NULLs and also look to extend thisapproach to Non-Projective sentences.ReferencesRafiya Begum, Samar Husain, Arun Dhwaj, Dipti MisraSharma, Lakshmi Bai, and Rajeev Sangal.
2008.
De-pendency annotation scheme for indian languages.
InProceedings of IJCNLP.A.
Bharati, V. Chaitanya, R. Sangal, and KV Ramakrish-namacharyulu.
1995.
Natural language processing: APaninian perspective.
Prentice-Hall of India.Akshar Bharati, Samar Husain, Dipti Misra, and RajeevSangal.
2009a.
Two stage constraint based hybrid ap-proach to free word order language dependency pars-ing.
In Proceedings of the 11th International Confer-ence on Parsing Technologies, pages 77?80.
Associa-tion for Computational Linguistics.Akshara Bharati, Dipti Misra Sharma, Samar Husain,Lakshmi Bai, Rafiya Begam, and Rajeev Sangal.2009b.
Anncorra: Treebanks for indian languages,guidelines for annotating hindi treebank.Richard Campbell.
2004.
Using linguistic principles torecover empty categories.
In Proceedings of the 42ndannual meeting on association for computational lin-guistics, page 645.
Association for Computational Lin-guistics.Michael Collins.
1997.
Three generative, lexicalisedmodels for statistical parsing.
In Proceedings of theeighth conference on European chapter of the Associ-ation for Computational Linguistics, pages 16?23.
As-sociation for Computational Linguistics.Chaitanya Gsk, Samar Husain, and Prashanth Mannem.2011.
Empty categories in hindi dependency treebank:Analysis and recovery.
In Proceedings of the 5th Lin-guistic Annotation Workshop, pages 134?142.
Associ-ation for Computational Linguistics.R.A.
Hudson.
1984.
Word grammar.
Blackwell Oxford.Samar Husain, Prashanth Mannem, Bharat Ram Ambati,and Phani Gadde.
2010.
The icon-2010 tools conteston indian language dependency parsing.
Proceedingsof ICON-2010 Tools Contest on Indian Language De-pendency Parsing, ICON, 10:1?8.Mark Johnson.
2002.
A simple pattern-matching al-gorithm for recovering empty nodes and their an-tecedents.
In Proceedings of the 40th Annual Meetingon Association for Computational Linguistics, pages136?143.
Association for Computational Linguistics.P.
Kosaraju, S.R.
Kesidi, V.B.R.
Ainavolu, andP.
Kukkadapu.
2010.
Experiments on indian languagedependency parsing.
Proceedings of the ICON10 NLPTools Contest: Indian Language Dependency Parsing.Puneeth Kukkadapu, Deepak Kumar Malladi, andAswarth Dara.
2012.
Ensembling various dependency95parsers: Adopting turbo parser for indian languages.In 24th International Conference on ComputationalLinguistics, page 179.P.
Mannem and A. Dara.
2011.
Partial parsing from bi-text projections.
In Proceedings of the 49th AnnualMeeting of the Association for Computational Lin-guistics: Human Language Technologies, pages 1597?1606.A.F.T.
Martins, N.A.
Smith, and E.P.
Xing.
2009.
Con-cise integer linear programming formulations for de-pendency parsing.
In Proceedings of the Joint Confer-ence of the 47th Annual Meeting of the ACL and the 4thInternational Joint Conference on Natural LanguageProcessing of the AFNLP: Volume 1-Volume 1, pages342?350.A.F.T.
Martins, N.A.
Smith, E.P.
Xing, P.M.Q.
Aguiar,and M.A.T.
Figueiredo.
2010.
Turbo parsers: Depen-dency parsing by approximate variational inference.In Proceedings of the 2010 Conference on EmpiricalMethods in Natural Language Processing, pages 34?44.R.
McDonald, F. Pereira, K. Ribarov, and J. Hajic?.
2005.Non-projective dependency parsing using spanningtree algorithms.
In Proceedings of the conference onHuman Language Technology and Empirical Meth-ods in Natural Language Processing (EMNLP), pages523?530.J.
Nivre, J.
Hall, and J. Nilsson.
2006.
Maltparser: Adata-driven parser-generator for dependency parsing.In Proceedings of LREC, volume 6, pages 2216?2219.Wolfgang Seeker, Richa?rd Farkas, Bernd Bohnet, Hel-mut Schmid, and Jonas Kuhn.
2012.
Data-driven de-pendency parsing with empty heads.
In Proceedingsof COLING 2012: Posters, pages 1081?1090, Mum-bai, India, December.
The COLING 2012 OrganizingCommittee.Karan Singla, Aniruddha Tammewar, Naman Jain, andSambhav Jain.
2012.
Two-stage approach forhindi dependency parsing using maltparser.
Training,12041(268,093):22?27.Yaqin Yang and Nianwen Xue.
2010.
Chasing the ghost:recovering empty categories in the chinese treebank.In Proceedings of the 23rd International Conferenceon Computational Linguistics: Posters, pages 1382?1390.
Association for Computational Linguistics.96
