GENERATING PRECONDIT ION EXPRESSIONSIN INSTRUCTIONAL TEXTKe i th  Vander  L indenITR I ,  Un ivers i ty  of  Br ightonLewes  RoadBr ighton ,  BN2 4ATUKIn ternet :  knv l@i t r i .b ton .ac .ukAbst ractThis study employs a knowledge intensive corpusanalysis to identify the elements of the commu-nicative context which can be used to determinethe appropriate lexical and grammatical form ofinstructional texts.
IMAGENE, an instructionaltext generation system based on this analysis: ispresented, particularly with reference to its ex-pression of precondition relations.INTRODUCTIONTechnical writers routinely employ a range offorms of expression for precondition expressions ininstructional text.
These forms are not randomlychosen from a pool of forms that say "basicallythe same thing" but are rather systematicaUy usedbased on elements of the communicative context.Consider the following expressions ofvarious kindsof procedural conditions taken from a corpus of in-structional text:( la )  If light flashes red, insert credit card again.
(Airfone, 1991) l( lb )  When the 7010 is installed and the batteryhas charged for twelve hours, move theOFF/STBY/TALK \[8\] switch to STBY.
(Code-a-phone, 19891)( l c )  The BATTERY LOW INDICATOR willlight when the battery in the handset i~ low.
(Excursion, 1989)( ld )  Return the OFF/STBY/TALK switch toSTBY a/ter your call.
(Code-a-phone, 1989)( le )  1.
Make sule the handset and baseantennas are fully extended.
2.
Set theOFF /STBY/TALK SWITCH to Talk.
(Excltrsion, 1989)As can be seen here, procedural conditionsmay be expressed using a number of alternativel In this paper, a reference wiU be added to theend of all examples that have come directly from thecorpus, indicating the ma~uual from which they weretaken.lexical and grammatical forms.
They may occureither before or after the expression of their relatedaction (referred to here as the issue of slot), andmay be linked with a variety of conjunctions orprepositions (the issue of linker).
Further, theymay be expressed in a number of grammaticalforms, either as actions or as the relevant statebrought about by such actions (called here the ter-minating condition).
Finally, they may or may notbe combined into a single sentence with the ex-pression of their related action (the issue of clausecombining).Text generation systems nmst not only be ca-pable of producing these forms but must also knowwhen to produce them.
The study described herehas employed a detailed corpus analysis to addressthese issues of choice and has implemented the re-sults of this study in IMAGENE, an  architecture forinstructional text generation.CORPUS ANALYSISThe corpus developed for this study contains ap-proximately 1000 clauses (6000 words) of instruc-tions taken from 17 different sources, including in-struction booklets, recipes, and auto-repair man-uals.
It contains 98 precondition expressions,where the notion of precondition has been takenfrom Rhetorical Structure Theory (Mann andThompson, 1988): and in particular from RSsnerand Stede's modified relation called Precondition(1992).
This relation is a simple amalgam of thestandard RST relations Circumstance and Condi-tion and has proven useful in analyzing variouskinds of conditions and circumstances that fre-quently arise in instructions.The analysis involves addressing two relatedissues:1.
Determining the range of expressional formscommonly used by instructional text writers;2.
Determining the precise comnnmicative contextin which each of these forms is used.42TextLevellnquirh'sIMAGENESystem Network-\] Sentence Builder"1PENMANI IFigure 1: The Architecture of IMAGENEInstructhmalTextDetermining the range of forms was a matterof cataloging the fl~rms that ~mcurred in the cor-pus.
Example (1) shows exemplars of the majorforms found, which include present tense actionexpressions (la), agentless passives (lb), relationalexpressions of resultant states (lc): phrasal forms,(ld), and separated iml,erative forms (le).Determining the functional context in whidleach ~,f the forms is used inw~lves identifying corre-lations between the contextual features of commu-nicative context on the -he hand, and the lexicaland grammatical form on the other.
I focus hereon the range of lexical and gralnmatical forms cor-responding to the precondition expressions in thecorpus.
The analyst begins by identifying a fea-ture of the communicative context that appearsto correlate with the variation of some aspect oftlle lexical and grammatical forms.
They then at-tempt to validate the hypothesis by referring tothe examples in the corpus.
These two phases arerepeated until a good match is achieved or until arelevant hypothesis cannot be found.IMAGENEThe analysis has resulted in a number of identifiedcovariations which have been coded in the Sys-tem Network formalism from Systemic-FunctionalLinguistics (Halliday, 1976) and included in theIMAGENE architecture.
The system network isbasically a derision network where each choicepoint distinguishes between alternate features ofthe communicative context.
It has been used ex-tensively in Systemic Linguistics to address bothsentence-level and text-level issues.
Such networksare traversed based on the appropriate features ofthe comnmnicative context, and as a side-effect,of this traversal, linguistic structures are con-structed by realization ~statemcnts which are as-sociated with each feature of the network.
Thesestatements allow several types of manipulation ofthe evolving text structure, including the insertionof text structure nodes, grammatical marking ofthe nodes, textual ordering, and clause combin-ing.
Currently, the network is traversed manually;the data structures and code necessary to auto-matically navigate the structure have not been im-plemented.
This has allowed me to focus on thecontextual distinctions that need to be made andon their lexical and grammatical consequences.The general architecture of IMAGENE, as de-picted in Figure 1. consists of a System Networkand a Sentence Building routine, and is built ontop of the Penman text generation system (Mann,1985).
It transforms inputs (shown on the left)into instructional text (shown on the right).The following sections will detail the resultsof the analysis for precondition expressions.
Itshould be noted that they will include intuitivemotivations for the distinctions made in the sys-tem network.
This is entirely motivational; the de-terminations made by the systems are based solelyon the results of the corpus analysis.PRECONDIT ION SLOTIn the corpus, preconditions are typically fronted,and therefore the sub-network devoted to precon-dition expression will default to fronting.
Thereare four exceptions to this default which are illus-trated here:(2a) The BATTER?
*" LOW INDICATOR willlight when the battery is the handset is low.
(Excursion, 1989)43LocalNt~cleus >PrecondAct-TopicNot-LocalFigure 2: The Precondition Slot Selection Network(2b) Return the OFF/STBY/TALK switch toSTBY after your call.
(Code-a-phone, 1989)(2c) The phone will ring only if the handset 'ison the base.
(Code-a-phone, 1989)(2d) In the STBY (standby) position, the phonewill ring whether the handset .is on the base orin another location.
(Code-a-phone, 1989)The slot selection fi~r example (2a) couht goeither way; except that it is the first sentence ina section titled ':Battery Low Indicator", mak-ing the discussion of this indicator the local topicof conversation, and thus the appropriate themeof the sentence.
This distinction is made in theportion of the system network shown in figure 2.This sub-network has a single system which dis-tinguishes between preconditions associated withactions referring to thematic material and thoseassociated with non-thematic material.
The re-alization statement, Nucleus>Precond, indicatesthat the main action associated with the condi-tion (called the nucleus in RST terminology) is tobe placed before the precondition itself.The slot determinations for the remainder ofexample (2) are embedded in system networksshown later in this paper.
Example (2b) is theexample of what I call rhetorical demotion.
Theaction is considered obvious and is thus demotedto phrase status and put at the end of its imme-diately following action.
Examples (2c) and (2d)show preconditions that are not fronted because ofthe syntax used to express the logical nature of theprecondition.
In (2c), the condition is expressed asan exclusive condition which is never fronted.
Onecould, perhaps; say "??
Only if the handset is onthe base, will the phone ring."
2 but this form isnever used in the corpus.
Neither is the conditionform in (2d) ever fronted in the corpus.2The "??"
notation is used to denote a possibleform of expression that is not typically found in thecorpus; it does not indicate ungrammaticMity.PRECONDIT ION L INKERPreconditions are marked with a number of link-ers, illustrated in the IoUowing examples:(3a) Lift the handset and set theOFF/STBY/TALK \[8\] switch to TALK.
Whenyou hear dial tone, dial the number on theDialpad \[4\].
(Code-a-phone, 1989)(3b) If you have touch-tone service, move theTONE/PULSE SWITCH to the Tone position.
(Excursion, 1989)(3c) I.
Make sure the handset and baseantennas are fully extended.
2.
Set theOFF/STBY/TALK SWITCH to Talk.
(Excursion, 1989)The systems largely dedicated to selectingprecondition linkers are shown in figure 3.
3Two parallel systems are entered, Condi t ion-P robab i l i ty  and Changeab le -Type .Cond i t ion -Probab i l i ty  distinguishes ac-tions which are probable from those which are not.Highly probable actions are typicaUy marked with':when".
Those actions which are not highly prob-ably are marked with "If" or some similar linker,as determined by the Complex i ty  system and itsdescendants.The Complex i ty  system is entered for ac-tions which are not probable and not changeable.It determines the logical nature of the precondi-tions and sets the linker accordingly.
The threepossible linkers chosen by this sld:)-network are':if"; "only if", or "whether .
.
.
o r .
.
.
".P recond-When is entered when the actionis conditional and further is highly probable.
Theoccurrence of the dial tone in example (3a) is partof a sequence of actions and is conditional in that itnlay not actually happen, say if the telephone sys-tem is malflmctioning in some way, but is ntmethe-less highly probable.
P recond-Nomina l  is en-tered immediately after P recond-When when-ever the precondition is being stated as a nom-inalization.
It overwrites the linker choice with':after" in only this case.Preconditions that the user is expected to beable to change if necessary and which come atthe beginning of sections that contain sequencesof prescribed actions are called Change.able pre-conditions.
Example (3c) is such a case.
Here, thereader is expected to check the antennas and ex-tend them if they are not already extended.
This3In the figure, the bold-italic on(htious attached tothe front of these systems denote conditions that holdon entry (e.g., ConditionM-Action is a condition triteon the entry of Condition-Probability), They axe nec-essary because the networks hown are only portionsof a much larger network.44Conditional-ActionProbableNot-ProbableChangeableMark(make-sure)Changeable-Procedural-Sequence andNot-Concurrent and(Obvious or Not.Coordinate)Not-ChangeablePrecoItd>NucleusPrecond -WhenMark(when)Nominal.Available JSimplexComplexityComplexPrecond-Nomin',dMark(after)ExclusivityAlternativenessExclusiveMark(only-i39Nucleus> PrecondNot-ExclusiveMark(~AlternativesMark(whether-or-nol)Not-AlternativesMark( iJ9Figure 3: The Precondition Linker Selection Networktype of precondition is marked as a "Make sure"imperative clause by Changeab le -Type .PRECONDIT ION FORMAs noted above, preconditions can be expressedas either a terminating condition or as an action.The choice between the two is made by the formselection sub-networks: hown in figures 4 and 5.This choice depends largely upon the type of ac-tion on which the precondition is based.
The ac-tions in the corpus can be divided into five cate-gories which affect the grammatical form of pre-c(mdition expressions:?
Monitor Actions;?
Giving Actions;?
Placing Actions;?
Habitual Decisions;?
Other Actions.The first four actions are special categoriesof actions that have varying act and terminatingcondition forms of expression.
The last category,other actions: encompasses all actions not fallinginto the previous four categories.
The sub-networkwhich distinguishes these forms is shown in figure4.
This section wiU discuss each category in turn:starting with the following examples of the firstfour action types:(4a) Listen for dial tone, then dial AREACODE + NUMBER slowly (Airfone, 1991)(4b) If you have touch-tone service: move theTONE/PULSE SWITCH to the Tone position.
(Excursion, 1989)(4c) The phone will ring only if the handset ison the base.
(Code-a-phone, 1989)(4d) / f  you leave the OFF /STBY/TALK \[8\]switch in TALK: move the switch to PULSE:and tap FLASH \[6\] the next time you lift thehandset; to return to PULSE dialing mode.
(Code-a-phone, 1989)Monitor actions, as shown in example (4a),concern explicit commands to monitor conditionsin the environment.
In this case, readers are beingcommanded to listen for a dial tone: with the un-derlying assumption that they will not continue on45Previous-Act-TypeMonitorMarI~pr~$era)~a~im~)  ( Procedural-Giving\] Made(present)Giving " ~ M~*4ha*ing)Primitive-GivingMade(is-required)Habitual-DecisionMark(present)Mark{act) ( Procedural-Placing\] Made(present)Made(locative)Placing ~ Primitive-PlacingMade(locative)OtherFigure 4: The Precondition Form Selection Net-workwith the instructions unless one is heard.
Givingand Placing actions, however, tend to be expressedas terminating conditions, as shown in (4b) and(4c).
The corpus does not include active formsof these actions: such as "??
If the phone com-pany has given you touch-tone service, do .
.
. "
or"??
Do ...  if you have placed the handset on thebase."
An Habitual decision is a decision to makea practice of performing some action or of per-forming an action in some way.
When stated aspreconditions, they take the present ense form in(4d).
Taken in context, this expression refers notto a singular action of leaving the OFF /STBY/ -TALK switch in TALK position; but rather to thedecision to habitually leave it in such a state.
Thesingular event would be expressed as "If you haveleft the OFF /STBY/TALK switch in TALK, do.
.
. "
which means something quite different fromthe expression in (4d) which is stated in presenttense.The bulk of the preconditions in the corpus(70.4%) are based on other types of actions.
Thesetypes are distinguished in figure 5.
In general, theOther Effective Action systems are based on theactor of the action.
Reader actions are expressedeither as present ense passives or as present enseactions, depending upon whether the action hasbeen mentioned before or not.
These distinctionsare made by the gates Repeated-Reader  andNot -Repeated-Reader .
An example of the for-mer can be found in (5a), (':When the 7010 is in-stalled").
In the corpus, such expressions of ac-tions already detailed in the previous text takethe present ense, agentless passive form.
If thereader action is not a repeated mention, a simplepresent ense active form is used, as in example(5b).
(5a) When the 7010 is installed and the batteryhas charged for twelve hours, move theOFF/STBY/TALK \[8\] switch to STBY.
(Code-a-phone, 1989)(5b) / f  you make a dialing error, or want tomake another call immediately, FLASH givesyou new dial tone without moving theOFF /STBY/TALK switch.
(Code-a-phone,1989)The Act -H ide  system and its descendantsare entered for non-obvious, non-reader actions.There are four basic forms for these preconditionexpressions, examples of which are shown here:(6a) If light flashes red, insert credit card again(Aiffone, 1991)(6b) When you hear dial tone, dial the numberon the Dialpad \[4\].
(Code-a-phone, 1989)(6c) The BATTERY LOW INDICATOR willlight when the battery in the handset is low.
(Excursion, 1989)(6d) When instructed (approx.
10 sec.)
removephone by firmly grasping top of handset andpulling out.
(Airfone, 1991)Act -H ide  distinguishes actions which areoverly complex or long duration and those thatare not.
Those which are not will be expressedeither as present ense actions, as the one in ex-ample (6a), if the action form is available in thelexico-grammar.
Act ive-Avai lab le  makes thisdetermination.
If no action form is available, thenIncept ion -Status  i entered.
If the inception ofthe action is expected to have been witnessed bythe reader, then the present ense sensing actionform is used, as shown in example (6b).Terminat ion -Ava i lab i l i ty  is entered eitherif the action is to be hidden or if the inception ofthe action was not expected to be experienced bythe reader.
In these cases, the relational form ofthe terminating condition is used if it is available.An example of this is shown in example (6c).
Thelong duration action of the battery draining is notexpressed in the relational form used there.
If therelational form is not available, the present ense,agentless passive is specified, as shown in example(6d).Finally, if an action being expressed as a pre-condition is considered obvious to the reader, thenominalization is used, provided its nominalizedform is available in the lexicon.
Example (ld) isan example of such an expression.46Not.Obvious-Action andReader-Action//Repeated-ReaderMark(present)Mark(pc~*'sive )Not-Repeated-ReaderMark(present )Mark(act)Not-Obvious-Action andNon-Reader.ActionHid*Active-Not-HideHideAvailableMark(acOMark(present) i\] Experienced\] Mark(sena'ing)Mark(present)Not-Available Stat-~ 1Not-Experienced-~ Termination.AvailabilityFigure 5: The Other Effective Actions Selection NetworkAvailableMark(relational)Mark(present)Not-AvailableMark(passive)Mark(present)VERIFY ING IMAGENE'SPRESCRIPT IONSThis study has been based primarily on an analysisof a small subset of the fitll corpus: namely on theinstructions for a set of three cordless telephonemanuals.
This training set constitutes appro~-mately 35% of the 1000 clause corpus.
The resultsof this analysis were implemented in IMAGENE andtested by manually re-running the system networkfor all of the precondition expressions in the train-ing set.
These tests were performed without thePenman realization component engaged: compar-ing the text structure output by the system net-work with the structure inherent in the corpustext.
A sample of such a text structure: showingIMAGENE:s output when run on the actions ex-pressed in the text in example (7)., is shown in fig-ure 6.
The general structure of this figure is reflec-tive of the underlying RST structure of the text.The nodes of the structure are fitrther marked withall the lexical and grammatical information rele-vant to the issues addressed here.
(7) Wh, en the 7010 i.~ installed and the batteryhas charged for twelve hours; move theOFF/STBY/TALK \[8\] switch to STBY.
The7010 is now ready to use.
Fully extend thebase antenna \[12\].
Extend the handset antenna\[1\] for telephone conversations.
(Code-a-phone,1989)Statistics were kept on how well IMAGENE:stext structure output matched the expressionsin the corpus with respect to the four lexicaland grammatical issues considered here (i.e.
: slot:form; linker: and clause combining).
In the ex-ample structure, all of the action expressions arespecified correctly except for the Charge action(the second clause).
This action is marked as apresent ense passive, and occurs in the corpus inpresent perfect form.In fi|ll realization mode: IMAGENE translatesthe text structure into sentence generation com-mands for the Penman generation system: produc-ing the following output for example (7):(8) PiOten the phone is installed, and the batteryis charged, move the OFF /STBY/TALKswitch to the STBY position.
The phone is now~eady to use.
Extend the base antenna.
Extendthe handset antenna for phone convez:~ation.As just mentioned, this text identical to theoriginal with respect o the four lexical and gram-matical issues addressed in the corpus study with47*IG-Text*I I I nI IReady-to-use J New_~ Extend-Hands t ConversePrecondition Form: Relational /Sentence Form: Imper.
Form: NominalTense: Present~New New- Linker: For Sentence?
Move .
Continue-Form: Imper.
Sentence SentenceInstall Charge J ont inue-Form: Passive Form: Passiv~.1" SentenceLinker: When Linker: AndTense: Present Tense: Present" , , .
_ .
fContinue-SentenceFigure 6: A Sample Text Structurethe exception of the second clause.
There are otherdifferences: however; having to do with issues notaddressed in the study; such as referring expres-sions and the expression of manner.
A corpusstudy of these issues is yet to he performed.The overall results are shown in table 7 (seeVander Linden, 1993b for the results concerningother rhetorical relations).
This (:hart indicatesthe percentage of the prec.ndition examples forwhich IMAGENE:s predic:tions matched the c(~rpusfor each of the four lexical and grammatical issuesconsidered.
The values for the training and testingsets are differentiated.
The training set resultsindicate that there are patterns of expression incordless telephone manuals that can he identifiedand implemented.The system's predictions were als.
tested ona separate and m(~re diverse portion ,,f the cor-pus which includes instructions for different ypesof devices and processes.
This additional testingserves both to disallow over-fitting of the data inthe training portion: and to give a measure of howfar beyond the telephone domain the predictionscan legitimately he applied.
As (::an be seen in fig-ure 7; the testing set results were not as good asthose for the training set.
hut were still well aboverandom guesses.100908070605040Preconditions3020100\ [ \ ]  Training Set \ [ \ ]  Testing SetFigure 7: The Accuracy of IMAGENE's Realizationsfor Precondition Expressions48CONCLUSIONSThis study has employed a knowledge intensivecorpus analysis to identify the elements of thecommunicative context which can be used to de-termine the appropriate l xical and grammaticalform of precondition expressions in instructionaltexts.
The methodology provides a principledmeans for cataloging the use of lefical and gram-matical forms in particular egisters, and is thuscritical for any text generation project.
The cur-rent study of precondition expressions in instruc-tions can be seen as providing the sort of registerspecific data required for some current approachesto register-based text generation (Bateman andParis.
1991).The methodology is designed to identify co-variation between elements of the communicativecontext on the one hand and grammatical formon the other.
Such covariations, however: do notconstitute proof that the technical writer actu-ally considers those elements during the genera-tion process; nor that the prescribed form is ac-tually more effective than any other.
Proof of ei-ther of these issues would require psycholinguistictesting.
This work provides detailed prescriptionsconcerning how such testing could be performed:i.e.
: what forms should be tested and what con-texts controlled for: but does not actually performthem (cf.
Vander Linden: 1993a).The analysis was carried out by hand (withthe help of a relational database): and as such wastedious and limited in size.
The prospect of au-tomation: however: is not a promising one at thispoint.
While it might be possible to automati-call)' parse the grammatical nd lexical forms: itremains unclear how to automate the determina-tion of the complex semantic and pragmatic fea-tures relevant o choice in generation.
It mightbe possible to use automated learning procedures(Quinlan: 1986) to construct the system networks~but this assumes that one is given the set of rele-vant features to start with.Future work on this project will include at-tempts to automate parts of the process to facili-tate the use of larger corlmra, and the implemen-tation of the data structures and code necessaryto automate the inquiry process.ACKNOWLEDGMENTSThis work was done in conjunction with Jim Mar-tin and Susanna Cumming whose help is grate-fitlly acknowledged.
It was supported by theNational Science Foundation under Contract No.IRI-9109859.REFERENCESAirfone (1991).
Inflight Entertainment ~ In\]orma-tion Guide.
United Airlines.Bateman: J.
A. and Paris: C. L. (1991).
Con-straining the development of lexicogrammati-cal resources during text generation: towardsa computational instantiation of register the-ory.
In Ventola, E.: editor: Functional andSystemic Linguistics Approaches and Uses:pages 81 106.
Mouton: Amsterdam.
Selectedpapers from the 16th International SystemicsCongress: Helsinki: 1989.Code-a-phone (1989).
Code-A-Phone Owner'sGuide.
Code-A-Phone Corporation; P.O.
Box5678, Portland, OR 97228.Excursion (1989).
Excursion 3100.
NorthwesternBell Phones.
A USWest Company.Halliday, M. A. K. (1976).
System and Function inLanguage.
Oxford University Press, London.edited by G. R. Kress.Mann.
W. C. (1985).
An introduction to the Nigeltext generation grammar.
In Benson, J. D.;Freedle; R. O.: and Greaves, W. S.: edi-tors, Systemic Perspectives on Discourse, vol-ume 1; pages 84 95.
Ablex.Mann, W. C. and Thompson, S. A.
(1988).
Rhetori-cal structure theory: Toward a fimctional the-ory of text organization.
Text: An Interdisci-plinary Journal for the Study of Text, 8(2).Quinlan: J. R. (1986).
Induction of decision trees.Machine Learning; 1:81 106.RSsner, D. and Stede; M. (1992).
CustomizingRST for the automatic production of techni-cal manuals.
In Dale: R., Hovy: E., RSesner:D., and Stock, O., editors, Aspects of Au-tomated Natural Language Generation; Lec-ture Notes in Artificial Intelligence 587: pages199 214.
Springer Verlag: Berlin.
Proceedingsof the 6th International Workshop on Natu-ral Language Generation, Trento, Italy; April,1992.Vander Linden~ K. (1993a).
Generating effective in-structions.
In Proceedings of the Fifteenth An-nual Conference of the Cognitive Science So-ciety, June 18 21, Boulder: CO, pages 10231028.Vander Linden: K. (1993b).
Speahnng of Actions:Choosing Rhetorical Status and GrammaticalForm in Instructional Text Generation.
PhDthesis, University of Colorado.
Available asTechnical Report CU-CS-654-93.49
