Expressing generalizationsin unification-based grammar formalisms *Marc Moens, Jo CalderEwan Klein, Mike Reape, Henk ZeevatCentre for Cognitive Science, University of Edinburgh2, Buccleuch Place, Edinburgh EH8 9LWScotland, UKAbst rac tThis paper shows how higher levels of general-ization can be introduced into unification gram-mars by exploiting methods for typing grammati-cal objects.
We discuss the strategy of using globaldeclarations to limit possible linguistic structures,and sketch a few unusual aspects of our type-checking algorithm.
We also describe the sortsystem we use in our semantic representation lan-guage and illustrate the expressive power gainedby being able to state global constraints over thesesorts.
Finally, we briefly illustrate the sort systemby applying it to some agreement phenomena andto problems of adjunct resolution.1 In t roduct ionSince Kay's seminal work (Kay 1979), the util-ity of unification as a general tool in computa-tional linguistics has gained widespread recogni-tion.
One major point on which the methodologyof unification grammars differs radically from thatassumed by linguistic theories lies in the way theydeal with generalizations that hold over the do-main of description.
In unification-based theories,such generalizations are typically implicit, or ex-tremely limited in their import.
The reasons forthis are easy to pinpoint.
First, in such theoriesone has to be explicit about the feature structuresthat the grammar manipulates, and these struc-tures have to be described more or less directly.
InPATR-II for example (Shieber et al1983) the onlymeans of expressing a generalization is via the no-tion of template, a structure which merely repre-sents recurring information--i.e, information that*The work reported here was carried out ae part of ES-PRIT project P393 ACORD.
A longer version of this papercan be found in Calder et a!
(1988a).recurs in different lexical items, combination rules,lexical rules or other templates.
A second reasonwhy unification-based theories do not lend them-selves easily to the expression of general state-ments is that there is no explicit quantification iunification formalisms.
In fact, every statementin these formalisms represents a simple existentialconstraint, never a universal generalization.The work reported here is an attempt o intro-duce higher levels of organization into unificationgrammars.
The notions we employ to do this comefrom sorted logics and from strong data typing inprogramming language theory.
We will show thatthe typing of grammatical objects offers a way ofstating structural constraints on, or equivalentlyuniversal properties of, the objects that constitutethe grammar.The grammatical framework in which theseideas have been implemented is Uaificatioa Cat-egorial Grammar (UCG) and its semantic repre-sentation language InL, both developed as partof the ESPRIT-funded project ACORD.
Introduc-tions to UCG and InL can be found in Calder et al(1988b) and Zeevat (1988).
For present purposesit is sufficient o note that UCG uses a sorted logicwhich requires being able to express complex con-straints over clusters of features.
While there is noreal distinction between this technique and that ofdata typing mentioned above, we will neverthelesscontinue to use the term typing only to refer toconstraints on the global structure of an objectand reserve the term sort to refer to constraintsthat hold of a variable in InL.In the following sections, we will first discussour strategy of using global declarations to limitpossible linguistic structures.
We will briefly de-scribe some of the type declarations currently im-plemented in UCG and discuss the unusual aspectsof our type-checking algorithm.
We will also infor-174 -mally describe the InL sort system and will showhow the ability to express global constraints onthe sort lattice is both perspicuous and expres-sively powerful.
Detailed discussion of the under-lying formal theory and the implementation canbe found in Calder et al(1988a) and will not beattempted here.Next, we will demonstrate the usefulness of thesort system by describing ucG's  adjunct resolu-tion system, the declarative semantics of which de-pends crucially on our use of a logic of sorts.
Thistreatment allows the grammar writer to write andadd adjunct resolution conditions using the samenotation as that used to express ort descriptionsin the grammar and without having to modify anyimplementation code.2 Types in UCGImporting the notion of data typing intounification-based grammars has several advan-tages (cf.
also Calder et al1986, Calder 1987).To begin with, the use of data typing allows oneto show whether a grammar is consistent with aset of statements about the possible structuresallowed within the grammar.
This compile-timetype-checking of the structures designed by thegrammar writer allows more useful error informa-tion to be presented to the grammar writer.
Wehave found such information essential in writinglarge grammars for the ACORD project.Second, data typing forces the grammar writerto make the structure of linguistic objects explicit.This higher level of organization makes it easier topinpoint aspects of the grammar which are inele-gant or inefficient.Finally, the notion of typing represents a fur-ther step towards the goal of making local struc-tures reflect global restrictions.
This move is anessential part of the programme of characterizing,within a formal computational theory, linguisticdevices such as GPSG's feature co-occurrence re-strictions.A standard way of defining categorlal grammarsis to provide a set of basic categories and oneor more recursive rules for defining complex cate-gories.
A very similar definition holds in uCG.
Fol-lowing Pollard & Sag (1987), we treat every ucGobject, apart from the rules, as a sign.
That is, itrepresents a complex conjunction of phonological,syntactic and semantic information.
We can fur-ther specify a sign by adding constraints on legalinstantiations of each of the sign's attributes: forexample, semantics in UCG has a tripartite struc-ture, consisting of an index, a predicate and anargument list.It is obvious that the abstract structure of eachof these categories must be known in advance tothe interpreter.
The formalism we will use here fordeclaring types is borrowed from Smolka (1988),and the following illustrates his matrix notationfor record structures, where type symbols are writ-ten in bold face, and feature symbols are writtenin italics 1:s ignphonology : phon l i s t  LJ bas ic(1) category : complex  U beat  u basicsemantics : var iab le  U fo rmulaThe structure as a whole is declared to be oftype sign, and it is defined for exactly three fea-tures, namely phonology , category , and semantics.We also show, for each feature, the types of thevalues that it takes; as it happens, these are alldisjunctive.
So, for example, the feature seman-tics has a value either of type var iab le  or of typefo rmula .Obviously, further information has to be givenabout what constitute legal structures of type for-mula .
As was mentioned above, semantic formu-lae in InL are typically tripartite:fo rmulaindex : var iab le(2) predicate : bas ic  U l istarglist : bas ic  U sem_m-gsFor present purposes, it suffices to know thatthe first element is the index, a privileged variablerepresenting the ontological type and the identityof the semantic structure.
Next, there is the pred-icate.
This may be basic or a list of atoms.
Thetype basic  is the only type provided as a primitivein the system, and indicates that only instantia-tions to an atomic value (in the PROLOG sense ofatomic) are legal.
In the case where the predicateis a list, it represents a disjunction over adjunctfunctions, as will be discussed below.Further discussion of (1) and (2) is not possiblewithin the limited space here.
The examples areonly intended to illustrate how at each level ina UCG sign, type specifications can be given thatindicate restrictions on the value any given featuremay take on.
However, one point deserves furtherXSmolka uses the term 'sort' in place of 'type'; however,as already mentioned, we reserve the former for talkingabout InL expressions.- 175  -comment.
It will be recalled that earlier we saidthe structure (1) was ~defined for exactly threefeatures".
It follows from this that, for example,(lt) would not be a legal instantlation of this type:s ignphonology : value_a(lt) category : value_b8eraantic$ : value_carglist : value_dThus, types in UCG are closed: all features whichare not explicitly stated as defined in a particulartype declaration are held to be undefined for thattype (i.e.
they can only be specified as .1_).
Con-sequently, closed types offer a form of universalquantification over features.
This device offers away of characterizing the well-formedness of dif-ferent dimensions of a sign that is stronger thansystems based on open types, such as  HPSG.
2The UCG compiler uses declarations like those in(1) and (2) to check variables for consistent typ-ing.
This involves keeping track of all variablesintroduced by a particular UCG expression as wellas of the possible types that a variable may beassigned.
The compiler proves that, for multipleoccurrences of the same variable, the intersectionof the sets of possible types induced for each oc-currence of the variable is non-empty.
If the set isempty, the compilation process fails and an erroris reported.This technique has the advantage that one maypartition the set of variables employed by the sys-tem.
Thus in ucG, the set of PROLOG variablesthat is used to represent variables in an InL for-mula is disjoint from the set used to represent thepredicate introduced by a sign: the type of vari-ables of the first set is stated to be var iable,  whilethe type of those of the second set is pred icate .This property is crucial if we wish to check forcorrectness of highly underspecified structures.3 The sort sys temThe ontological types of InL indices are formalizedby dividing the set of InL variables into sorts.
Tak-ing results from work in automated theorem prov-ing (Cohn 1984, Walther 1985), the use of sortedvariables in InL was first presented in Calder etal (1986).
Similar proposals have also been madein the SRI Core Language Engine (Aishawi et al2See Uszkoreit (1987) and Bouma et ag C1988) for a sys-tem that allows the flexible combination of open and closedtypes.1988) and in recent HPSG work on referential pa-rameters (Pollard & Sag 1988).As a first approximation, InL sorts can be iden-tified with bundles of feature-value pairs, such as(3) l-Temporal, +Human, +Singu r\]However, the standard linguistic notation forfeature bundles is too restricted, since it only al-lows conjunction and negation of atoms.
We findit useful to use a full propositional language ~or tfor expressing sortal information, where each fea-ture specification of the form -/-F is translated into~oort as an atomic proposition F, and each spec-ification -F is translated as a negated atom -~F.Thus, in place of (3) we write the following:(4) -.Temporal  ^ Human A SingularThis is construed as a partial description of el-ements in the semantic domain used to interpretInL.
In order to calculate the unification of twosorted variables, we conjoin the associated sort for-mulae and check for consistency.The design of the sort structure as a theory ofpropositional logic also allows the incorporation ofbackground constraints or axioms with which ev-ery possible description in the structure is consis-tent.
Let's call the theory Tsort.
A few examplesof these background axioms in Teort are given in(5) to (9):(5) Temporal --* Neuter V Plural(6) Neuter --* Singular A --Human(7) Singular --* Objectual(8) Measure --*Objectual A (Tmeasure V Lmeasure)(9) Stative --, EventualFrom (5), (6) and (7) it follows that the unifi-cation of an index of sort Temporal and an indexof sort Neuter should give us an index of sort(10) Objectual  ^ Singular ^  --HumanAnd from (8) it follows that anything that isTmeasure is also Objectual.
This implicit deduc-tive capacity is useful in specifying concisely andaccurately the sort of an index.A few examples will help clarify these distinc-tions.
Below are listed the lexical definitions forsome of the nouns in the current lexicon.
In thesedefinitions, the items preceded by the symbol ~Q"are templates, in the sense of PATR-II.
Templateswhose names are the unabbreviated form of sortnames instantiate the indez of the aemantiee ofa sign to the corresponding sort.
For example,UQExtended" specifies the sort of the InL vari-ables as Eztended, ~QNeuter ~ as Neuter, etc.tomato :  \[QNoun, QNeuter, QExtended,:pred -- tomato\].176 -o4Tempor   !MassPlur SingularuterPlUral~ Mass Male Femaleactual~ a s u r e  / \TmeasureJ~vventualStative NonstativeLmeasure/ ~Process Event / iFigure 1: Sort lattice (overview)inquiry: \[~Noun, ~Temporal, QNeuter,:pred = inquiry\].organlsation: \[QNoun, ~Neuter, QAbstract,:pred = organisation\].miles: \[~Noun, QLmeasure, ~Plural,:pred = mile\].night: \[~Noun, QNeuter, QTmeasure,:pred = night\].A tomato is obviously an object with spatial ex-tent.
It is also Neuter, which implies---given theaxiom in (6) above--that i is also 8iagular, andnot Humaa.
An inquiry is also Neuter, but it hasa temporal dimension; a time span can be predi-cated of it.
An organisation is an abstract entity;it is, moreover, Neuter (implying it is a singularobject).
Finally, miles has the index Lmeasuresince it can be used in measure phrases to expressthe length of something; and night is Tmeasurewhich means it can be used to express the tempo-ral duration of something.The standard consequence r lation over thesepartial descriptions (i.e.
the formulae of ~,ort) in-duces a lattice (cf.
Mellish 1988).
Moreover, thesets of models associated with these partial de-scriptions (i.e.
the truth assignments othe formu-lae) also form a lattice, ordered by the set inclusionrelation.
This lattice is isomorphic to the lattice ofdescriptions.
The model sets can be encoded as bi-nary bit strings where a zero bit indicates that thecorresponding model is not a member of the modelset and a one bit indicates the opposite.
Modelset intersection is equivalent to bitwise conjunc-tion and model set union to bitwise disjunction.Testing for the satisfiability of the conjunction oftwo descriptions can consequently be performedin two machine instructions, viz.
taking the bit-wise conjunction of two model" set encodings andtesting for zero (el.
Proudian & Pollard 1985).Such a model set encoding is obviously linear inthe number of models it generates; in the worstcase, the number of models is exponential in thenumber of propositional constants mentioned inT,o,t, but typically it is much less.
This meansthat the exponential complexity involved in test-ing for satisfiability can be compiled away offline;the resulting model set encoding can be used withequal computational efficiency.As illustrated above, the statements that de-fine the lattice of sorts can be arbitrary state-ments in classical propositional logic.
This is indistinction to systems discussed by Mellish (1988)and Alshawi et al(1988), in which the set of logi-cal connectives i restricted to those for which anencoding exists using PROLOG terms without re-peated variables and for which PROLOG unificationprovides an immediate test of the compatibilityof two descriptions.
The resulting sort definitionlanguage is therefore more expressive.
The majordrawback of such an approach is that the encoding- 177-ObjectualMeasur~ ~ " Temporal Extended Smgular "~-~stract~ ~ ~ Neuter /\ ff j f _?J -  \ /  \ /mile inquiry pig butter loveFigure 2: Sort lattice plus examples (detail)in terms of sets of satisfying models prevents thestatement of reentrant dependencies between fea-tures in the sort system and features in the restof the grammar.
A more general, but computa-tionally less efficient approach would use generaldisjunction and negation over feature structures,as discussed by Smolka (1988), and so give a uni-form encoding of sortal and general grammaticalinformation.Figure 1 depicts part of our current lattice ofsorts.
It is not complete in that not all the sortswe currently use are represented in Figure 1, norare all the meets of the sorts in Figure 1 repre-sented.
Figure 2 gives an enlarged fragment ofFigure 1, showing a more complete picture of thesorts related to Neuter, as well as some instantia-tions of these sorts in English.The fact that the lattice soon becomes rathercomplicated isn't particularly worrisome: thegrammar writer need only write simple back-ground axioms in Taort, like the ones in (5) to(9), to extend or otherwise change the sort lattice.To check for plausibility, the grammar writer canalso ask for the models or truth assignments o theproperties of the sort system.In UCG, sortal restrictions have been used tocapture certain agreement phenomena.
Collectivenouns like committee, for example, are lexlcallymarked as being either Neuter or Plural (for which,of course, the term Collective can be introduced).In British English, this allows anaphoric referenceby means of a singular as well as a plural pronoun:(11) The committee met yesterday.
It/They re-jected the proposal.Proper binding of the pronoun in (11) requiresthe index associated with it or they to be identicalwith that introduced by committee.
Since com-mittee is marked as either Neuter or Plural, bothbindings are possible.However, once the choice has been made (as in(12a) and (b)) the referential index for committeehas become specified more fully (as being eithersingular or plural) and further pronominal refer-ence in the discourse is restricted (as illustratedin (c) and (d)) (cf.
Klein & Sag 1982, and morerecently Pollard & Sag 1988 on this issue):(12a) The committee has rejected its own pro-posal(12b) The committee have rejected their ownproposal.
(12c) *The committee has rejected their ownproposal.
(12d) *The committee have rejected its own pro-posalNote that sorts like Plural or Neuter are not syn-tactic features, but are part of the internal struc-ture of referential indices introduced through theusage of certain expressions.
These indices are ab-stract objects whose function in a discourse repre-sentation it is, amongst other things, to keep trackof the entities talked about in the discourse.Of course, sorts like Plural or Human also havea semantic import in that they permit real-worldnon-linguistic objects to be distinguished fromone another (cf.
Hoeksema (1983) and Chierchia(1988) on a similar use of indices in theories ofagreement and binding).
Nevertheless, the aim ofthe sort system is not to reflect the characteris-tics of real world objects and events referred to bylinguistic expressions, but rather to systematizethe ontological structure evidenced by linguisticexpressions.The usefulness of being able to express globalconstraints over the sort lattice can best be illus-trated by considering the treatment of adjunct res-olution in UCG.
It is to a brief account of this thatwe turn next.- 178  -4 Ad junct  reso lu t ionAmbiguity in the attachment of prepositionalphrases is a longstanding problem in the area ofnatural anguage processing.
We suggest that thisambiguity has two basic causes.
First, there isstructural ambiguity in that prepositional phrasesmay modify at least nouns and verb phrases.
Thisstructural ambiguity is a cause of inefficiency inprocessing.
Second, prepositions may have sev-eral distinct, if related, meanings.
(This problembecomes even more acute in a multilingual set-ting with a common semantic representation lan-guage).
Such ambiguity then represents an in-determinacy for theorem provers and knowledgebases that deal with the output of a natural an-guage component.The mechanisms we have introduced above al-low us to address both these problems simulta-neously.
We use the term adjunct resolution todescribe the situation in which the possible mean-ings of a preposition, perhaps drawn from a uni-versal set of possible prepositional meanings, andthe possible attachments of a prepositional phraseare mutually constraining.To consider the problem from the multilingualpoint of view, the way in which a particular lan-guage uses its prepositions to decompose the set ofspatial and temporal relations that obtain betweenobjects and events may well be inconsistent withthe decomposition shown in othdr languages.
Forexample, the French preposition dana can expressspatial ocation (il eat dans la ehambre - he is inthe room), spatial inclusion (dans un rayon de 15kilomdtres - within a radius of 10 m//es), spatialpath (il passerait dans le feu pour ells - he'd 9othrough fire for her sake), spatial source (copierquelque chose dans un liars - copy somethin9 froma book), and several other relations.In the semantic representation language InL,the meaning of a preposition is a relation betweentwo InL indices.
Thus the translation of a sentencelike(14) John walked to the storewould be(15) \[e\]\[walk(e,john) & store(x)& direction(e,x)\]where "direction(e,x) ~ represents a relation be-tween the going event and the store.
However, asnoted above, a preposition will typically introducea disjunction over relations.
The French preposi-tion dana, for example, will have as its translationa disjunction of spatial ocation, spatial inclusion,spatial source and spatial path.
Some of these itwill share with the English preposition in; otherswill be shared with within, through and the otherprepositions mentioned above.Let us look at an English example in some moredetail An adjunct phrase introduced by with canexpress (without aiming to be exhaustive) an ac-companiment relation (as in 18a), the manner inwhich an act was carried out (18b), the instrumentwith which it was carried out (illustrated in 18c),or something which is part of something or ownedby someone (as in 18d).Sortal restrictions on the arguments of these re-lations are expressed by means of the three-placepredicate sort_restriction:(16) sort_restriction(RELATION,HEAD.INDEX,MODIFIER_INDEX).In (16), RELATION is a possible adjunct rela-tion (or a list of adjunct relations, interpreteddisjunctively), HEAD_INDEX represents the condi-tions on the index of the expression modified bythe adjunct, and MODIFIER_INDEX likewise statesrestrictions on the index of the object that is partof the modifier phrase.An instance of this schema is (17):(17) sort_restriction(instrument,-"Stative A Eventual,Extended A --Human)The declaration i  (17) restricts instruments obe non-human, extended objects.
They can, more-over, only be combined with nonstative or eventexpressions.
This rules out an instrumental read-ing for the wit~phrases in (lSa) and (b) (sinceteacher will be marked in the lexicon as Human,and effort is Abstract), and for (18d) (since theman is not EventuaO, but allows it for (c):(18a) Lisa went to Rome with her teacher.
(18b) He ran with great effort.
(18c) He broke the window with a hammer.
(18d) There's the man with the funny nose.The restrictions on accompaniment, manner andpossession are given as follows:(19) sort_restriction(accompaniment,Eventual,Extended)(20)  sort_restriction(manner,--Stative A Eventual,Abstract)(21) sort.restriction(possession,Objectual,Extended A "-Human)It is easy to verify that (19) rules out an ac-companiment reading for (18b) (since effort is notg, tende  and for (18d) (since man is not Even-- 179  -tual).
(20) renders a manner reading impossiblefor (18a), (c) and (d), since neither teacher, ham-mer or nose are Abstract.
Finally, (21) rules out apossession relation for (18a) and (b).In some cases the sortal restrictions will reducethe disjunction of possible readings to a single one,although this is obviously not a goal that is al-ways obtainable or even necessary for the seman-tics component of a natural language system.As the discussion of the with-clauses hows, insome cases PP attachment ambiguity may be re-duced by restrictions associated with particularadjunct prepositions.
A standard example of suchan ambiguity is(22) John saw the man with a telescope.There are two readings to this sentence, repre-sented by these two bracketings:(23a) \[vpsaw \[Npthe man \[ppwith a telescope\]\]\](23b) \[vP \[vpsaw the man\]\[ppwith a telescope\]\]Due to the restrictions given above, only the pos-session relation may hold between man and tele-scope in (23a), while in (b) only the relations ac-companiment or instrument may hold between thetelescope and the event of seeing.In some cases, the sortal restrictions may actu-ally remove prepositional ttachment ambiguitiesaltogether.
Examples (24) are predicted by mosttheories to be ambiguous:(24a) John will eat the tomato in two hours.
(24b) John will eat the tomato in his ofllce.The ambiguity arises because the prepositionalphrase may attach low, to the noun phrase, orhigh, modifying the verb phrase.
In the systemdescribed here, the first sentence is not ambigu-ous.
The preposition in introduces a disjunctionbetween (amongst other things) spatial ocationand duration.
The former can relate an objectwith any other object or event.
The latter rela-tion can only hold of expressions involving sometemporality; as was illustrated above, tomato hasno temporal extent, therefore does not allow thiskind of temporal time-span to be predicated of it.As a result, the prepositional phrase in (24a) canonly get high attachment.Although the discussion has been limited to theuse of sortal information i adjunct resolution andthe treatment ofcertain agreement phenomena, itshould be clear that exactly the same mechanismmay be used to indicate sortal restrictions asso-ciated with any other predicates of the system.Thus we have one way of expressing the linguis-tic concept of selectional restrictions.
We realizethat care has to be taken here, since there is nowell-defined point at which statements about nor-tal correctness become clearly inappropriate.
Forinstance, we might be tempted to treat the ambi-guity associated with the verb bank as in Ronniebanked the cheque and Maggie banked the MIG byinvoking a feature monetary for the first exampleand a feature manoeuvrable for the second.
If wehad a clear picture of precisely those propertiesthat might be invoked for lexical disambiguation,this approach might be tenable.
It seems morelikely to be the case that the features and axiomsabout those features used in a particular case aread hoc and domain-specific, astheir creation anddefinition would be governed by just those lexi-cal items one wanted to distinguish.
Also theyare language-specific, as patterns of homographypresumably do not hold cross-linguistically.
It is,nevertheless, plausible (following Kaplan 1987) toassume that the techniques we have introducedcould be employed in the automatic projection ofnon-lexical knowledge into the lexicon.The notation we have presented above for thedefinition of sorts and the relations between sortsthat prepositions represent may appear somewhatremoved from the notation introduced insection 2in our discussion of typed grammatical objects.
Itis however worth noting that the use of ~order-sorted algebras" (Meseguer et al1987) as themathematical basis of feature structures allowsnot only the statement ofsuch restrictions on thestructure of grammatical nd semantic objects,but also the definition of relations, like our prepo-sitional relations above, whose interpretation isdependent on the interpretation f the structuresthey relate.
Such formalisms may well providea useful foundation for a more general theory ofprepositional meaning and its relation to syntac-tic structure.ReferencesAlshawl, H., Carter ,  D. M., van Eijck, J.,Moore, R. C., Moran,  D. B., Pereira, F. C.N.
,  Smi th ,  A.  G. and Pu lman,  S. G. \[1988\]Interim Report on the SRI Core Language Engine.Technical Report No.
CCSRC-005.
CambridgeComputer Science Research Centre, Cambridge,UK.
July 1988.Bouma,  G., Koenig, E. and Uszkoreit, H.\[1988\] A Flexible Graph-Unification Formalismand its Application to Natural Language Process-ing.
IBM Journal of Research and Development,82, 170-184.Calder, J .
\[1987\] Typed unification for nat-- 180 -ural language processing.
In Klein, E. and vanBenthem, J.
(eds.)
Categories, Polymorphism andUnification, pp65-72.
Centre for Cognitive Sci-ence, University of Edinburgh, and Institute forLanguage, Logic and Information, University ofAmsterdam.Calder, J., Klein, E., Moens, M. and Zee-vat, H. \[1986\] Problems of Dialogue Parsing.ACORD Deliverable T2.1, Centre for Cognitive Sci-ence, University of Edinburgh.
December 1986.Calder, J., Klein, E., Moens, M. andReape, M. \[1988a\] Global Constraints in Unifi-cation Grammar.
ACORD Deliverable T1.6, Cen-tre for Cognitive Science, University of Edinburgh.February 1988.Calder, J., Klein, E. and Zeevat, H.\[1988b\] Unification Categorial Grammar: A Con-cise, Extendable Grammar for Natural LanguageProcessing.
In Proceedings of the l~th Interna-tional Conference on Computational Linguisticsand the ~Jth Annual Meeting of the Associationfor Computational Linguistics, Budapest.
August1988, pp.
83-86.Chierchia, G. \[1988\] Aspects of a CategorialTheory of Binding.
In Oehrle, R., Bach, E. andWheeler, D.
(eds.)
Categorial Grammars and Nat-ural Language Structures, pp125-151.
Dordrecht:D. Reidel.Co\]an, A. G. \[1984\] On the Solution of Schu-bert's Steamroller in Many Sorted Logic.
Unpub-lished paper, Department of Computer Science,University of Warwick.Hoeksema, J.
\[1983\] Plurality and conjunc-tion.
In ter Meulen, A.
(ed.)
Studies in Mod-eltheoretie Semantics, pp63-84.
Dordrecht: ForisPublications.Kaplan, It.
M. \[1987\] Three Seductions ofComputational Psycholinguistics.
In Whitelock,P., Wood, M. M., Somers, H. L., Johnson, R.and Bennett, P.
(eds.)
Linguistic Theory andComputer Applications, pp149-188.
London: Aca-demic Press.Kay, M. \[1979\] Functional Grammar.
In Pro-ceedings of the Fifth Annual Meeting of the Berke-ley Linguistic Society, 1979, pp142-158.Klein, E. and Sag, L A.
\[1982\] Semantictype and control.
In Barlow, M., Flickinger, D.and Sag, I.
A.
(eds.)
Developments in GeneralizedPhrase Structure Grammar: Stanford WorkingPapers in Grammatical Theory, ppl-25.
Bloom-ington, Indiana: Indiana University LinguisticsClub.Mellish, C. S. \[1988\] Implementing SystemicClassification by Unification.
Computational Lin-guistics, 14, 40-51.Meseguer, J., Goguen, 3.
A. and Smolka,G.
\[1987\] Order-Sorted Unification.
TechnicalReport No.
CSLI-87-86, Center for the Study ofLanguage and Information, Stanford, Ca.
March1987.Pollard, C. and Sag, I.
\[1987\] AnInformation-Based Approach to Syntaz and Se-mantics.
Volume 1: Fundamentals.
Stanford, Ca.
:Center for the Study of Language and Informa-tion.Pollard, C. and Sag, I.
A.
\[1988\] AnInformation-Based Theory of Agreement.
ReportNo.
CSLI-88-132, Center for the Study of Lan-guage and Information, Stanford, Ca.
September1988.Proudian,  D. and Pollard, C. J.
\[1985\]Parsing Head-driven Phrase Structure Grammar.In Proceedings of the $3rd Annual Meeting of theAssociation for Computational Linguistics, Uni-versity of Chicago, Chicago, Illinois.
July 1985,pp167-171.Shieber, S., Uszkoreit, H., Pereira, 1% C.N., Robinson, J.
5. and Tyson, M. \[1983\]The Formalism and Implementation f PATR-II.In Grosz, B. and Stickel, M. E.
(eds.)
Research onInteractive Acquisition and Use of Knowledge, SRIInternational, Menlo Park, 1983, pp39-79.Smolka, G. \[1988\] A Feature Logic with Sub-sorts.
LILOG-Report No.
33, IBM DeutschlandGmbH, Stuttgart.
May 1988.Uszkoreit, H. \[1987\] A Flexible Type-Unification-Based Representation Formalism.
InAlvey/SERC Workshop on Natural LanguageProcessing, Unification and Grammatical For.malisms, University of Edinburgh.
June 1987,ppl-2.Walther, C, \[1985\] A mechanical solution ofSchubert's steamroller by many-sorted resolution.Artificial Intelligence, 26, 217-224.Zeevat, H. \[1988\] Combining categorial gram-mar and unification.
In Reyle, U. and Rohrer, C.(eds.)
Natural Language Parsing and LinguisticTheories, pp202-229.
Dordrecht: D. ReideL181 -
