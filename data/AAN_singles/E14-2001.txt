Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 1?4,Gothenburg, Sweden, April 26-30 2014.c?2014 Association for Computational LinguisticsITU Turkish NLP Web ServiceG?uls?en Eryi?gitDepartment of Computer EngineeringIstanbul Technical UniversityIstanbul, 34469, Turkeygulsen.cebiroglu@itu.edu.trAbstractWe present a natural language processing(NLP) platform, namely the ?ITU Turk-ish NLP Web Service?
by the natural lan-guage processing group of Istanbul Tech-nical University.
The platform (availableat tools.nlp.itu.edu.tr) operatesas a SaaS (Software as a Service) and pro-vides the researchers and the students thestate of the art NLP tools in many lay-ers: preprocessing, morphology, syntaxand entity recognition.
The users maycommunicate with the platform via threechannels: 1. via a user friendly web inter-face, 2. by file uploads and 3. by using theprovided Web APIs within their own codesfor constructing higher level applications.1 IntroductionITU NLP research group is devoted to produceTurkish NLP tools for more than 10 years.
Thegroup offers many NLP courses in graduate leveland core NLP research components to different re-search groups both in NLP field and other disci-plines: e.g.
linguistics, data mining, web miningand information retrieval.
The motivation of thepresented platform in this paper comes from thereal word problems of sharing the produced NLPresources by different people from varying level ofcomputer background (starting from undergradu-ates to PhD students or researchers, people fromother fields (e.g.linguistics)).
These may be cate-gorized under the following main problems:1.
Need to provide assistance for the installa-tion and the usage of different tools, all pos-ing different technological requirements inthe users?
computers.2.
Difficulty to share the updates and the newmodules introduced into the pipeline.3.
Difficulty of using the tools for educationalpurposes within the classrooms and termprojects.4.
licensing issues of the underlying technolo-gies (such as FST and machine learning soft-wares)The difficulty in the ease-of-use of Turkish NLPtools and their inconsistencies with each otherswere also causing the replication of the same effortin different places and preventing the communityfrom working on less-studied higher level areas forthe Turkish language.
A good example to this maybe the efforts for creating Turkish morphologicalanalyzers: some outstanding ones among manyothers are (Oflazer, 1994; Eryi?git and Adal?, 2004;Ak?n and Ak?n, 2007; Sak et al., 2008; C?
?oltekin,2010; S?ahin et al., 2013))In this paper, we present our new web ser-vice which provides both a whole Turkish NLPpipeline (from raw data to syntax, example givenin Figure1 priorly defined in (Eryi?git, 2012)) andits atomic NLP components for stand-alone usage,namely:?
Tokenizer?
Deasciifier?
Vowelizer?
Spelling Corrector?
Normalizer?
isTurkish?
Morphological Analyzer?
Morphological Disambiguator?
Named Entity Recognizer?
Dependency Parser2 Provided ComponentsThe provided components via our web servicemay be grouped under 4 layers: preprocessing,morphological processing, multiword expressionhandling and syntactic processing.2.1 PreprocessingThe preprocessing layer consists of many subcomponents specifically developed for unformat-1Figure 1: ITU Turkish NLP Pipeline2ted social media data in focus.
These are a tok-enizer, a diacritic restorer, a vowelizer, a spellingcorrector and a normalizer.
The diacritic restorer1is the component where the ASCII characters aretransformed into their proper Turkish forms.
Thedeasciifier (Adal?
and Eryi?git, 2014) chooses themost probable candidate within the current contextby using conditional random fields (CRFs).
Thevocalizer (Adal?
and Eryi?git, 2014) restores theomitted vowels (generally within the social mediamessages for shortening purpose): e.g.
?svyrm?will be converted to ?seviyorum?
(I love you).The spelling corrector2is kind of an adaptationof Wang et al.
(2011) into agglutinative languages.The normalizer (Toruno?glu and Eryi?git, 2014) isconstructed of the previous three components andmany other modules and provides a state of the arttext normalizer for Turkish.2.2 Morphological ProcessingThis layer consists of a rule based morpholog-ical analyzer (S?ahin et al., 2013; S?ahin, 2014)which uses HFST-Helsinki Finite State Transducer(Lind?en et al., 2009) and a hybrid morphologicaldisambiguator3.
This layer also provides the is-Turkish component which validates a word by us-ing the morphological analyzer.2.3 Multi Word ExpressionsAs shown in Eryigit et al.
(2011), the detectionand unification of the named entities has the high-est impact for the syntactic layer.
That is why thefollowing Turkish named entity recognizer (S?ekerand Eryi?git, 2012) is included within the pipelineand the remaining multiword expressions are de-tected in the syntactic layer as shown in Figure 1(dependency label MWE).2.4 Syntactic ParsingFor the syntactic layer we are providing the stateof the art dependency parser for Turkish presentedin (Eryi?git et al., 2008; Nivre et al., 2007) whichproduces the ouputs in Conll format (Buchholzand Marsi, 2006).3 Conclusion and Future WorkWe introduced our ITU Turkish NLP Web Plat-form which provides us easier administration, au-tomatic updates and patch management, com-1named as ?deasciifier?
since the term is already adoptedby the Turkish community2Publication in preparation.3Publication in preparation.patibility, easier usage, easier collaboration4andglobal accessibility by being designed as a SaaS.Any body from any discipline with any level of un-derlying computer background may easily use ourweb interface either for only analyzing languagedata or for constructing more complicated NLPsystems.
The platform already attracted manyusers from different universities in Turkey and it isnow started to get used in many research projectsand graduate theses.
We believe as being the pi-oneer serving almost all of the available and topperforming NLP tools for Turkish, ITU TurkishNLP Web Service will fed light to new researchtopics for this language.For now, the pipeline is constructed by convert-ing the input output formats of each individualtools.
But our current effort is to transform theplatform into a UIMA(Ferrucci and Lally, 2004)compliant architecture so that it can also integratewith other such platforms universally.
We alsoplan to service the new version of ITU Data Anno-tation Tool (Eryi?git, 2007) from the same addresswhere the users will also be able to see their datavisually (e.g.
dependency trees)AcknowledgmentsI want to thank my students without whose itwould be impossible to produce the ITU TurkishNLP pipeline: Thomas Joole, Dilara Toruno?glu,Umut Sulubacak and Hasan Kaya.
This work ispart of a research project supported by TUBITAK1001(Grant number: 112E276) as an ICT cost ac-tion (IC1207) project.ReferencesK?ubra Adal?
and G?uls?en Eryi?git.
2014.
Vowel anddiacritic restoration for social media texts.
In 5thWorkshop on Language Analysis for Social Media(LASM) at EACL, Gothenburg, Sweden, April.
As-sociation for Computational Linguistics.Ahmet Afsin Ak?n and Mehmet D?undar Ak?n.
2007.Zemberek, an open source nlp framework for turkiclanguages.
Structure.Sabine Buchholz and Erwin Marsi.
2006.
Conll-Xshared task on multilingual dependency parsing.
InProceedings of the 10th Conference on Computa-tional Natural Language Learning, pages 149?164,New York, NY.
Association for Computational Lin-guistics.C?a?gr?
C??oltekin.
2010.
A freely available morpho-logical analyzer for Turkish.
In Proceedings ofthe 7th International conference on Language Re-sources and Evaluation (LREC2010), pages 820?827.4The mailing list notifications are sent to registered userswith each new broadcast.3Figure 2: ITU Turkish NLP Web InterfaceG?uls?en Eryi?git and Es?ref Adal?.
2004.
An affix strip-ping morphological analyzer for Turkish.
In Pro-ceedings of the International Conference on Artifi-cial Intelligence and Applications, pages 299?304,Innsbruck, 16-18 February.Gulsen Eryigit, Tugay Ilbay, and Ozan Arkan Can.2011.
Multiword expressions in statistical depen-dency parsing.
In Proceedings of the Second Work-shop on Statistical Parsing of Morphologically RichLanguages (IWPT), pages 45?55, Dublin, Ireland,October.
Association for Computational Linguistics.G?uls?en Eryi?git.
2007.
Itu treebank annotation tool.In Proceedings of the ACL workshop on LinguisticAnnotation (LAW 2007), Prague, 24-30 June.G?uls?en Eryi?git.
2012.
The impact of automatic mor-phological analysis & disambiguation on depen-dency parsing of turkish.
In Proceedings of theEighth International Conference on Language Re-sources and Evaluation (LREC), Istanbul, Turkey,23-25 May.G?uls?en Eryi?git, Joakim Nivre, and Kemal Oflazer.2008.
Dependency parsing of Turkish.
Computa-tional Linguistics, 34(3):357?389.David Ferrucci and Adam Lally.
2004.
UIMA: anarchitectural approach to unstructured informationprocessing in the corporate research environment.Natural Language Engineering, 10(3-4):327?348.Krister Lind?en, Miikka Silfverberg, and Tommi Piri-nen.
2009.
Hfst tools for morphology?an efficientopen-source package for construction of morpholog-ical analyzers.
In State of the Art in ComputationalMorphology, pages 28?47.
Springer.Joakim Nivre, Johan Hall, Jens Nilsson, AtanasChanev, G?uls?en Eryi?git, Sandra K?ubler, StetoslavMarinov, and Erwin Marsi.
2007.
Maltparser:A language-independent system for data-driven de-pendency parsing.
Natural Language EngineeringJournal, 13(2):99?135.Kemal Oflazer.
1994.
Two-level description of Turk-ish morphology.
Literary and Linguistic Comput-ing, 9(2):137?148.Muhammet S?ahin, Umut Sulubacak, and G?uls?enEryi?git.
2013.
Redefinition of Turkish morphol-ogy using flag diacritics.
In Proceedings of TheTenth Symposium on Natural Language Processing(SNLP-2013), Phuket, Thailand, October.Muhammet S?ahin.
2014.
ITUMorph, a more accurateand faster wide coverage morphological analyzer forTurkish.
Master?s thesis, Istanbul Technical Univer-sity.Has?im Sak, Tunga G?ung?or, and Murat Sarac?lar.
2008.Turkish language resources: Morphological parser,morphological disambiguator and web corpus.
InGoTAL 2008, volume 5221 of LNCS, pages 417?427.
Springer.G?okhan Ak?n S?eker and G?uls?en Eryi?git.
2012.
Initialexplorations on using CRFs for Turkish named en-tity recognition.
In Proceedings of COLING 2012,Mumbai, India, 8-15 December.Dilara Toruno?glu and G?uls?en Eryi?git.
2014.
A cas-caded approach for social media text normalizationof Turkish.
In 5th Workshop on Language Analy-sis for Social Media (LASM) at EACL, Gothenburg,Sweden, April.
Association for Computational Lin-guistics.Ziqi Wang, Gu Xu, Hang Li, and Ming Zhang.
2011.A fast and accurate method for approximate stringsearch.
In Proceedings of the 49th Annual Meet-ing of the Association for Computational Linguis-tics: Human Language Technologies, pages 52?61.4
