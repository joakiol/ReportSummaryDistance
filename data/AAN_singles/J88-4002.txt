NATURAL LANGUAGE QUERYING OF H ISTORICAL  DATABASESJ ames  C l i f fordInformation Systems AreaGraduate School  of Business Administrat ionNew York UniversityNew York,  NYIn this paper we examine the connection between two areas of semantics, namely the semantics ofhistorical databases and the semantics of natural language querying, and link them together via acommon view of the semantics of time.
Since the target application domain is an historical database, wepresent the essential features of the Historical Relational Database Model (HRDM), an extension to therelational model motivated by the desire to incorporate more "real world" semantics into a database atthe conceptual level.
We then present the essential features of QE-III, a formally defined Englishdatabase query language whose semantic and pragmatic theory, based on a Montague-type semantics,makes explicit reference to the notion of denotation with respect to a moment of time.
We demonstratethe use of this language to query an example historical database, and discuss the issues of how to provideboth a semantic and a pragmatic interpretation for questions within a model-theoretic framework.1 INTRODUCTIONThe relational model of data (RM), first proposed in 1970(Codd 1970), has by now become the standard for bothdatabase practitioners and theoreticians alike.
In spiteof this success, however, much recent database re-search has focused on ways to extend RM to overcomeperceived shortcomings.
Chief among the criticisms hasbeen RM's lack of any "real-world semantics."
Amongthe many diverse fforts directed at this deficiency havebeen a number of attempts to extend RM to incorporatea temporal dimension at the model level.
While suchefforts as Ben-Zvi (1982), Ariav et al (1984), Snodgrass(1984), Lum et al (1984), Clifford (1985), Snodgrass andAhn (1985), and Gadia and Vaishnav (1985) have alladdressed this issue, the Historical Relational DatabaseModel (HRDM) ((Clifford 1982a), (Clifford and Warren1983), (Clifford 1985), (Clifford and Croker 1987)i) hasthe advantage of being directly parallel to a formaltheory of natural language.
In Section 2 we present anoverview of HRDM, as it serves as the environment inwhich we wish to explore our query language.
Inparticular, HRDM views database attributes as func-tions from moments in time to values (in the appropriatedomain), and the intensional logic IL s provides a mech-anism for direct reference to these higher-order objects,and for incorporating them into a general temporalsemantics for the database.
We can therefore xpressboth static and dynamic queries in the same language,by quantifying over variables of the appropriate types.In a series of papers culminating in Montague (1973),henceforth PTQ, Richard Montague mbarked upon aprogram of providing a formal syntax coupled with amodeMheoretic semantics for increasingly sophisti-cated fragments of English.
Section 3 argues that asuccessful formal treatment can be given to a naturallanguage querying facility for a historical relational database (HRDB), through the medium of the intensionallogic IL s.We view this work as important for two reasons.First, it represents one of the initial attempts to adaptthe ideas of Montague Semantics (MS) (Montague 1974)to a practical problem.
(Landsbergen (1981) looks at theissue of machine translation within an MS framework.
)The research that has been done since the PTQ paperhas primarily looked at extensions or modifications toits linguistic or logical theory, or at implementations ofthe theory on the computer.
We will attempt to showthat this theory of language can serve as the formalfoundation of a useable computer system for queryingactual databases.Second, in addition to approaching the problem ofNLQ formally, rather than from a purely engineeringapproach, the theory presented provides a novel (butsee Gunji (1981) for a similar approach developedCopyright 1988 by the Association for Computational Linguistics.
Permission tocopy without fee all or part of this material is granted providedthat he copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page.
Tocopy otherwise, orto republish, requires a fee and/or specific permission.0362-613X/88/010010-34503.0010 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical DatabasesEMP EMP-NAME MGR DEPT SALJohnMikeElsieLizRachelPeterJohn LinenJohn LinenElsie ToyLiz HardwareLiz HardwareLiz HardwareFigure 2-1.
Example Relation.25K17K26K30K29K29Krelation empconcurrently with ours) approach to the interpretationof queries that involves both a semantic and a pragmaticaccount.
This work represents only a first step in thisdirection within a MS framework.
The fragment ofEnglish that we define herein is certainly not adequateto express all of the queries that one would want topresent o an HRDB.
It is intended only to lay thegroundwork for a formal theory of database queryingthat is both extendible and implementable.In this paper we present an informal overview of afragment of English for database querying that we callQE-III.
We discuss the kinds of properties and abilitiesthat a database query language in English should pos-sess; principal among these are (1) an account ofquestion semantics that possesses close analogs indatabase theory, (2) an account of the semantics ofmultiple-WH questions, (3) an account of the semanticsof time, and (4) a grammar that is conducive to acomputer implementation.
After examining a number ofpartial solutions to these problems, we introduce thenotion of a formalized pragmatics as an equal partnerwith the syntax and semantics in the specification oftheQE-III language.
We argue that assigning to the prag-matic component the task of providing a representationfor the answer(s) to a question is both appropriate andelegant.
Finally, we discuss several other recent at-tempts at developing a formal theory of questions.QE-III is defined as a formal language, with syntaxpaired with semantics, and with a pragmatics defined onthe two of these; the language as a whole is designedwith the database application in mind.
QE-III is both asimplification and an extension of the PTQ semantictheory.
Within the tradition of Montague Semantics,QE-III is a formalized fragment of English allowingquestions, tenses, and temporal operators.
The inclu-sion of a formal pragmatics as an interpretive compo-nent of QE-III is an interesting extension to the tradi-tional conception of a Montague Grammar.
Among theother extensions to the PTQ fragment embodied inQE-III are (1) the inclusion of time-denoting expres-sions and temporal operators, (2) an analysis of verbmeanings into primitive meaning units derived from thedatabase schema, and, of course, (3) the inclusion ofcertain forms of direct questions.
These extensions, andthe semantic and pragmatic interpretations with whichthey are provided, are motivated by the ultimate goal ofdatabase access, but they are equally interesting intheirown right.
The syntactic theory presented is in somecases admittedly naive, for we have been primarilyinterested in getting the interpretation right.Section 4 provides an overview of the salient featuresof the QE-III by means of a number of example deriva-tions and translations.
The complete definition of QE-III is given in Clifford (1982b) and again in Clifford(1987), where it appears with a fuller set of examples.We conclude in Section 5 with a discussion of some ofthe limitations of the fragment and of some possibilitiesfor further extensions.2 THE HISTORICAL RELATIONAL DATABASE MODELAnalogous to the relationship between the relationalmodel of data and first-order logic (Gallaire and Minker1978), we can view an HRDB as a model for IL s(Clifford 1982b).
The higher-order language IL s (with itsbuilt-in concept of denotation with respect o an index)provides a formal semantics for such data bases in anatural way.In the standard or "static" relational model, wemight see a relation such as emp on a schemeEMP(EMP-NAME MGR SAL DEPT).
A typical queryof such a relation, say, "What is employee John'ssalary?
", would be expressed in the relational algebraas 77SA L (OrEMP_NAME=John(emp)).
A first-order languagewould express this same query as something like {z I3x3y emp(John,x,y,z)} where x,y, and z are individualvariables and John is an individual constant.
To answersuch a query, a data manipulation language (DML)would access the current relation instance emp onEMP, such as the one in Figure 2-1.More complex queries about the employees in thiscompany, such as: (1) "Has John's salary risen?
", (2)"When was Peter rehired?
", (3) "Did Rachel work forthe toy department last year?
", (4) "Has John everearned the same as Peter?
", or (5) "Will the averagesalary in the linen department surpass 30K within thenext 5 years, if current rends continue?"
have typicallynot been expressible in any query language, becauseneither the structures nor the operations in the under-lying data model provide for them.Computational Linguistics, Volume 14, Number 4, December 1988 11J ames  Cl i f ford Natura l  Language Query ing  o f  H istor ica l  DatabasesIn practice, database administrators have had toresort to ad-hoc solutions, typically involving program-ming in some host language, in order to handle queriesof this sort.
The issue of modeling time in a DBMS hasrecently attracted considerable attention within the da-tabase community.
The HRDM (and other historical ortemporal database models) attempts to satisfy the needfor access to the temporal dimension of information byproviding a unified and formal theory of database se-mantics that includes time.
In particular, HRDM andQE-III, recognizing the need for maintaining a historicalrecord of changing data, and a language (English) thatmakes explicit or implicit reference to the concept oftime, together provide a theory of database semanticscapable of interpreting sentences in the language cor-rectly, i.e., in a way that corresponds with our intuitiveunderstanding of the relation of time to the semantics ofthe real world.Consider again the query "Has John's salary risen?
"Even with time represented explicitly in the database,there is no apparent simple relational algebraic formu-lation for this query.
With the first-order epresentationfor John's salary given above, as a first guess we mightimagine that RISE({z I 3x3y emp(John,x,y,z)}) wouldrepresent his new query, where RISE is a predicatesymbol.
However, even with the knowledge that Johnhas only one salary, say 25K, it clearly makes no senseto ask whether 25K "r ises."
To answer this question,more data is needed than the current extension ofJohn's salary: the values of John's salary for some otherpoint(s) of time (in this specific instance, in the past) areneeded.
The HRDM model presented in Clifford andCroker (1987), built upon a formalization of the conceptof intension, provides a uniform way to view attributes(such as SALaries) not as individual dollar amounts, butas functions from moments in time to dollar amounts.For the purposes of this paper we will present anoverview of HRDM and discuss some of the issuesinvolved.Informally speaking, tuples in a relation representfacts about some object (entity or relationship) identi-fied by the value of the key attribute(s).
For example, inrelation emp on scheme EMP (EMP-NAME MGRDEPT SALARY), the attribute EMP-NAME is the keyattribute, and DEPT, MGR, and SALARY define prop-erties of employees.
A particular tuple, e.g., <Peter,Hardware, Maria 30K> represents facts about theemployee Peter.
A relation in the ordinary, or static,relational data model would consist of a set of suchtuples representing the facts about a set of employees.Each tuple would consist of exactly four atomic values,one for each of the four attributes in the scheme.By contrast, in HRDM a relation would providehistorical information about the changing values of theattributes of the objects denoted by values of the key, inthis instance about EMPloyees.
Each tuple would be acomplex, three-dimensional object whose size would bebased upon what we call the lifespan of that particular/ / I  / / I  / / I/ / I  / / I  / / I/ / I / / I / / I/ / I / / I I I I/ / / / / / I I // / / / / / / / I  I /I I / I I / I I I _1 /I I / I I / I I II I I  I I /  I I II I /  I I /  I I /t, uple t, in  rA1 A2 A3/ / I  / / I  / / I/ / I / / I I I I/ / I / / I I I I/ / I I I I / / I  I I/ / / I _ _  I / / / I _1 /I I I I I I I I  I I II I / I I1_1 /  I I II I / I I I I I /I I / I \] I I I /I I /  I I /  I I /~uple t ,"  in rFigure 2-2.
The History of Two Similar Objects.employee, i.e., the times when that employee was ofinterest o the enterprise.
Figure 2-2 depicts two tuplesin the same relation but with different lifespans.Time is represented in the HRDM as a set T = { .
.
.
.to, ti .
.
.
.
}, at most countably infinite, over which isdefined the linear (total) order <T, where ti <w tj meansti occurs before (is earlier than) tj.
(For the sake ofclarity we will assume that t i <T  tj if and only if i < j.
)The set T is used as the basis for incorporating thetemporal dimension into the model.
We assume that T isisomorphic to the natural numbers, and therefore theissue of whether to represent ime as intervals or aspoints is simply a matter of convenience.
Using thenatural numbers allows us to restrict our attention toclosed intervals (a closed interval of T, written \[t l, t 2\] issimply the set {t i I t i <= t i <= t2}).D = {D 1, D 2 .
.
.
.
.
Dno } is the set of value domains,where for each i, D i ~ q~.
Each value domain Di isanalogous to the traditional database notion of a domainin that it is a set of atomic (non-decomposable) values.In HRDM, however, attributes take their values notfrom these simple domains, but rather from more com-plex fimctions.
U = {A I, A 2 .
.
.
.
.
Ana } is a (universal)set of attributes.
Simplifying somewhat, we define overthe sets T and D a set of temporal mappings from the setT into the set D. This set, TD = {TD~, TD2 .
.
.
.
.
TDnd}where for each i, TD i = {fi I fi : T - ->  Di}, is the set ofall partial functions from T into the value domain D i.The domain of each attributes in HRDM is some setof partial temporal functions.
Since key attributes areintended to be time-invariant, hey are constrained totake a constant valued function (i.e., one which associ-ates the same value with every time in its domain) astheir value.
As we shall see, these mappings are thecounterparts o the notion of individual concepts in theintensional logic IL s.The notion of a tuple t on scheme R is expanded inHRDM to be an ordered pair, t = <v, l>,  where12 Computatienal Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databases1.
t.I, the lifespan of tuple t, is a subset of the set T,and represents the set of times over which itsattributes are defined, and2.
t.v, the value of the tuple, is a mapping such that Vattributes A E R, t.v(A) is a mapping in t.l - ->DOM(A) (the value-domain of attribute A).2.1 EXAMPLE DATABASEIn the remainder of the paper we will discuss thesemantics and pragmatic theory of QE-III, illustratedwith example database queries to an HRDB.
For thispurpose we now define the relation schemas for ahistorical department store data base based upon anexample in Chang (1978).EMP__.REL (EMP MGR DEPT SAL)DEPT REL (DEPT FLOOR)ITEM REL (ITEM TYPE)SALES REL (DEPT ITEM VOL)This concludes our brief overview of HRDM.
Forfurther details the reader is referred to Clifford (1985)and Clifford and Croker (1987).3 OVERVIEW OF ENGLISH QUERY LANGUAGE QE-III3.1 INTRODUCTIONHRDM serves to formally incorporate a temporal se-mantics into an extended relational database model.
Inorder to query a historical database using English, wedefine the semantics of queries expressed in English interms of the semantics of HRDM, by defining a smallquery fragment as a Montague Grammar.
The correla-tion between the database semantics and this querylanguage is made explicit by providing the semantics ofthe query fragment via an indirect ranslation into theintensional logic ILs.
~ The translations provide for acompletely extensional treatment of verbs (i.e., thereare no verbs like seek, which can be nonextensional inobject position in the PTQ treatment).
This treatment isdictated by the application to a database nvironment,in which existence is tantamount to existence in thedatabase (Reiter 1978).
Through these translations,then, the historical database ssentially serves as amodel for ILs and therefore as the model for a formaldefinition of the interpretation f the English queries.
Inaddition to providing a semantic interpretation, which inmodel-theoretic erms is called its denotation, we alsoprovide for each expression a pragmatic interpretationin a manner to be explained.Our goal in this effort has not been to define anEnglish database query language that is, in any sense ofthe term, complete.
Rather, we have been motivated bytwo complementary goals.
First, we have wanted toinvestigate the possibility of a formal, model-theoreticquery language for historical databases.
This led to ourinterest in Montague Semantics and to our secondgoal demonstrating that Montague's theories of natu-ral language semantics are applicable to such a practicaltask.
Along the way we discovered that it was simplerand more natural to define the interpretation of thisquery language in two components, one semantic andthe other pragmatic.Two overrriding principles have guided this work.First was that whatever interpretation r meaning ourtheory would give to a natural language database queryshould be as close as possible to the interpretation givento database queries in, say, the relational algebra orcalculus.
This meant hat the interpretation f a queryshould somehow encompass its answer as representedin the underlying data base.
Second, the theory shouldmake sense computationally.
This meant taking intoaccount what had already been learned about parsingstrategies for Montague Grammars (Friedman and War-ren (1978), Warren (1979), Landsbergen (1981)), as wellas what database theory had to say about he semanticsof the modeled enterprise.
These principles motivatecertain systematic simplifications to the PTQ transla-tions from English to logic, wherever these are sug-gested by the simplified view of the semantics of theenterprise provided by the database model.
Moreover,since we are not attempting to develop a semantictheory of questions for English in general, these simpli-fications have been introduced into the translation pro-cess as early as possible.
We believe that this strategyhas the dual effect of making some of the PTQ theory alittle more accessible, and eliminating the need to resortto the less computationally attractive technique of in-troducing a large number of meaning postulates andusing logical equivalences to perform the reductions ata later stage.We have made little attempt o develop a sophisti-cated syntax for our fragment.
Numerous extensions tothe syntax of the PTQ fragment have been investigatedby researchers in the past decade that we have notincorporated into our fragment.
Since our primary con-cern has been "getting the meaning right," we felt thata too broad syntactic overage might obscure our majorpoints.
For this reason, we have extended the PTQfragment only slightly.
The treatment of questions thatwe present is syntactically naive, although in its favorwe might point out that unlike most work on questionsin Montague Grammar, QE-III makes a stab at directquestions.
We believe that the semantic theory ofquestions that we present, and particularly our proposalto capture the answer in a pragmatic component, are animportant contribution to the formalization of the inter-pretive component of natural anguage understandingsystems.
Naturally, the true test of a natural anguagequery facility is in how useable it is; certainly the syntaxof QE-III would have to be extended before anyonewould think of using it.In this section we discuss the major issues underlyingthe definition of QE-III, which fall roughly into twobroad categories: aspects of the process of databasequerying that we have incorporated into the fragment,and modifications and additions to the PTQ fragmentComputational Linguistics, Volume 14, Number 4, December 1988 13James Clifford Natural Language Querying of Historical Databasesthat these, and the database semantics, have occa-sioned.
As in much of the work that has been done inthe area of Montague Semantics ince Montague'sdeath in 1970, we have allowed the PTQ fragment tostand pretty much intact as the heart of QE-III.
How-ever, we have redefined this fragment in terms of thelanguage ILs, in order to allow direct reference tomoments in time.3.2 PRELIMINARIES3.2.1 INDIVIDUAL CONCEPTS VS. ENTITLESMost recent research in the field of Montague Seman-tics has incorporated the suggestion, first made inBennett (1974), that Montague's treatment of commonnouns (CNs) and intransitive verbs (IVs) as denotingsets of individual concepts (ICs) is unduly complicated.Under Bennett's uggestion, both CNs and IVs denotesets of simple individuals, with the result hat the entiretyping scheme of the English categories in these frag-ments is considerably simplified.
In Section 2 weshowed that attributes in an HRDB can be identifiedwith ICs.
Accordingly we have not adopted the Bennetttype system, but have instead maintained the treatmentof PTQ.3.2.2 VERBSMontague's emantic treatment of verbs leaves themcompletely unanalyzed; thus, for example, the Englishverb "walk" translates into the constant "walk '"  in IL," love" into " love'" ,  etc.
The interpretation of theseconstants is some function in the model for the lan-guage, a function about which Montague says nothingexcept o specify its logical type (and in certain cases tospecify an extensional meaning postulate).
Because weare using a database as a representation f the logicalmodel we are in a position to provide an analysis ofEnglish verbs that takes into account the meaning of theverbs as encoded in the database.
This analysis is givenin terms of the database schema.
For example, insteadof translating the verb "manage" into the unanalyzedpredicate "manage' ", we take advantage of the data-base semantics to incorporate directly into its transla-tion the information that its subject must be an IC in therole of a MGR, and that its object must be a constant ICthat is an EMP.
We do not change the logical type of thetranslation, i.e., a transitive verb in our fragment de-notes the same kind of function as it does in Montague'streatment; we simply analyze its meaning in terms of thedatabase primitives.
This analysis in terms of a small setof primitive meaning units is not very different fromsome approaches taken in AI work in natural languageunderstanding (e.g., Schank 1972), or from the linguistictheory of deep cases (Fillmore 1968).
The difference, ofcourse, is that our primitives or cases are different,motivated by the HRDM and the schema design, andare no more absolute than any well-chosen databasedesign.As an example, the translation of "manage" in ourfragment is given as: hWhxW(i)(hyAS-l(y(i),x) /%EMP.
'(i)(y(i))/~ MGR'(i)(x)).
This expression is of thesame logical type as manage' in a PTQ-like treatment,and will combine with terms in the same way, but itdoes not leave "managing" unanalyzed.
Instead itspecifies what attribute class(es) its subject and objectmust belong to, and how they must be related.
Specif-ically, the subject must be an entity (y(i)) that is anEMP, the object an IC (x) that is a MGR, and theMGR-IC must be ASsociated with the EMPloyees (AS-I).
In general the translation of any verb in our theorywill so specify the attribute of its subject (or thedisjunction of alternatives, if any).
The translation of aTV will further specify the attribute(s) of its directobject, and of a DTV of both its objects.
Moreover anyrelationship(s) among these attributes will also be spec-ified.3.3 THE PROBLEMS OF TENSE AND TIME3.3.1 INTERVALS OR STATES?David Dowty (1979) presents a discussion of a broadspectrum of semantic and syntactic issues relevant othe understanding of English, and in particular to pro-viding a Montague Semantic analysis of these issues.
Inthe final chapter of this book he formalizes many of theideas he has discussed by defining aMontague fragmentof English that includes such features as temporaladverbs, dative-taking verbs, a theory of word forma-tion, and a treatment of several compound tense struc-tures.
In order to provide a semantics for this expansionof the PTQ fragment Dowty argues for the necessity ofseveral significant extensions to the logic IL: a radicallydifferent treatment ofthe phenomenon f tense is one ofhis contributions.
Because we are concerned with manyof the same issues as Dowty--in particular tenses anddirect temporal references---it seems appropriate todiscuss his work and to contrast two different solutionsto some of the same issues.A major section of the book is concerned withdeveloping a rigorous taxonomy of verbs in Englishbased upon several syntactic and semantic riteria.
Theproblems with a number of different classificationschemes that have been proposed over the years arediscussed, in particular Vendler's scheme (Vendler1967), which divides verbs into the four categories ofstatives, activities, accomplishments, and achieve-ments.
Dowty judges all of these proposals by the twocriteria of syntactic and semantic uniformity: can all ofthe verbs assigned to a given class appear in the samesyntactic onstructs, and are the same inferences inmeaning justified for all like-classified verbs?
Dowty'sfinal taxonomy, offered with many reservations, defineseight different verb categories.These aspectual verb distinctions, and particularlythe semantics of the progressive tenses, lead Dowty toespouse atheory of interval semantics, earlier proposedby Bennett and Partee (1972), wherein truth conditionsare given relative to an interval, rather than to a14 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databasesmoment, of time.
Unlike other proposed changes toMontague's PTQ analysis of English, this proposalcauses major modifications to the most basic semanticnotion of IL, and indeed of most other temporal logicsthat have been studied (e.g., Rescher and Urquhart1971).
We are not convinced of the necessity of takingthis step (indeed, Dowty himself says that "it results ina system that is really too powerful for natural languagesemantics" (Dowty 1979), p. 138).
Certainly from theperspective of database querying, the complicationsthat it introduces into the logic seem unnecessary.The existence of an actual historical database as theheart of our logical model is the major constraint withinwhich all of our work must be undertaken.
This"given," which in essence already takes a stand on thesemantics of the real world, stands as the major differ-ence between Dowty's enterprise and ours.
The seman-tic theory that we present is a theory of the semantics ofEnglish when used as a database query language for anHRDB, and not when used in ordinary discourse,whatever that might be.
If these two theories diverge, itshould be neither surprising nor disturbing, and itshould be of interest o compare and contrast hem.It is apparent that an HRDB is a gross abstraction ofthe real world:entities are represented by unique iden-tifiers, complex relationships are reduced to simpletuples in relations, time is rather crudely represented asa set of states of gross, perhaps even somewhat amor-phous, granularity.
And yet in spite of these limitationsthese databases are found to be useful to a large andgrowing number of people.
What kind of constraintsdoes the abstraction of real-world semantics embodiedin the HRDB impose upon our enterprise?
Preciselythis: the historical database mbodies a semantics thatis based upon the notion of truth with respect o a state.Every fact in the database is recorded with respect o astate that "time stamps" it; this is interpreted asasserting that the fact is true at that state.
If intervalscome into play, they can be modeled as sets of timepoints, since time in our database view is discrete.The differences that Dowty examines certainly exist;they do not, however, seem relevant in most databaseapplications.
Unlike Dowty, our analysis treats theprogressive tenses synonymously with their simplecounterparts:Did John earn 30K last week?
and Was John earning30K last week?Does Peter work for the toy department?
and Is Peterworking for the toy department?Perhaps it is the case that database applications do notlend themselves to handling achievements or accom-plishments, but instead record stative information.
Inany case it is difficult to conceive of many real databaseexamples where distinctions of the sort that Dowty'sanalysis is concerned with actually make sense.Dowty's analysis of the interaction of tenses andtemporal expressions accords exactly with our own.Sentences with such interaction, such as "John workedyesterday," cannot be analyzed as resulting from twoseparate temporal operators ("-ed" and "yesterday")acting on the proposition that John works, as thefollowing example should make clear:John worked yesterday/ \/ \yesterday John worked/ \/ \-ed John worksJohn works --~ work'(i)(John)-ed ~ ~> hp3il\[\[i I < i\] A p(i0\]John worked ~ ~> Ap3il\[\[i ] < i\] A p(il)\](Ai work'(i)(John))3i1\[i I < i\] A work'(il)(John) \]yesterday ~ ~> Ap3i2\[yesterday'(i2) A P(i2) \]John worked yesterday ~ ~> Ap3i2\[yesterday'(i2)A P(i2)\](Ai3il\[\[i I < i\] A work'(il)(John)\] )--~ 3i23il\[yesterday'(i 2)/% \[i I < i2\] A work'(il)(John)\]This analysis 2 (or the reverse, which would first apply"yesterday" and then "-ed") causes the two timeoperators to compete with each other, placing the eventin the wrong time frame.
For example, the followingtime line is consistent with this logical analysis, butinconsistent with the intended meaning of the English:I I Iil i 2 NOWI I IJohn works yesterdayInstead the two temporal operators must be treated asoperating in conjunction; the English -ed is, in a sense,semantically superfluous in the presence of the othertime indicator.
Thus the fragment has rules for applyingtense operators, and separate rules for applying tenseoperators in conjunction with other temporal adver-bials.
These rules differ slightly from Dowty's in that wetreat all temporal operators as operating on entireclauses, rather than simply on verb phrases.
The nextsection will explore some of the reasons for this deci-sion.3.3.2 SENTENTIAL VS. VERB-PHRASAL TEMPORALOPERATORSOur analysis of tense differs from the PTQ analysis andthe one in Dowty in the manner in which tense isincorporated into an English sentence.
In PTQ, the Rule$4 combines a term with an IV to form a present-tensedsentence:John walks $4/ \/ \John walkThe past and future tenses are accommodated in RuleS 17, which similarly combines the subject and predicateto form a sentence in either of these tenses.Computational Linguistics, Volume 14, Number 4, December 1988 15James Clifford Natural Language Querying of Historical DatabasesDowty's analysis is somewhat different.
In his frag-ment a sentence is always formed first by using $4; ifthe tense is other than present, he introduces this withan additional rule that takes the present-tensed sentenceas input and forms its past-tense coun~terpart, as in thefollowing example:John walked $39 (Dowty's)IIJohn walks $4/ \/ \John walkExtensions to the PTQ fragment have had to deal withthis issue of tense and how it interacts with the othercomponents of a sentence.
We agree with Dowty'sbasic premise that tense is really a property of thesentence (actually, clause) as a whole.
This is particu-larly important when, as in our fragment, there aredifferent kinds of sentences: declarative, wh-questions,yes-no-questions, and when-questions.
For under astraightforward extension of the FI'Q treatment henumber of rules would proliferate, since separate ruleswould be needed for each kind and tense of the sentenceformed by conjoining a term and a VP.
However, underDowty's treatment, he tense rules applied after $4 inmost cases must undo the syntactic work that it hasdone, viz.
the inflection of the verb as third-personsingular present ense.
(Semantically, the treatment isthe same, i.e., the untensed version denotes exactlywhat the present-tensed version does.)
This syntacticundoing is both inelegant and computationally unattrac-tive.
For this reason, we have incorporated into QE-IIIthe additional categories of tensed sentences of eachvariety, and have modified $4 so that it creates anuntensed sentence from a term and an IV.
The strings ofultimate interest in the fragment, then, are the tensedsentences (categories T-t, T-WHQ, T-YNQ, andWHENQ).
The following example from QE-III illus-trates this for a simple declarative sentence.John worked (T-t) S105IIJohn #work (t) $5/ \/ \John #workIn Section 4, when we discuss further examples oftensed sentences, particularly tensed questions andwhen-questions, we will discuss this issue further.3.4 QUESTIONS3.4.1 INTRODUCTIONDespite their obvious importance as a tool for gainingknowledge of the world, both linguists and philosophershave historically considered interrogative sentences thepoor relation of the declaratives, to which they havepaid the bulk of their attention.
Among linguists there isno generally accepted theory about he syntactic gener-ation of English questions (Kuno and Robinson 1972,Pope 1976), and philosophers and logicians have untilrecentlLy given little attention to the question of ques-tions.
More recently Engdahl (1986) explored the issueof constituent questions in Swedish, and proposed asemantic theory of questions imilar to those of Ham-blin (1973) and Karttunen (1977), which we shall discussin Section 3.6.
Groenendijk and Stokhof (1983) addressthe issue of the appropriateness of an answer in differ-ent situations, an issue outside the scope of the presentwork.
Formal logic from its inception directed its atten-tion to languages based upon the notion of formulas,abstractions of declarative sentences in natural lan-guages.
Only recently have logicians begun to investi-gate the semantics of questions in any depth and todevelop formal languages powerful enough to expressquestions in order to carry out these investigations.Hintikka (1974) discusses a number of interesting lin-guistic and philosophical attempts to provide an analy-sis of questions.Although Montague, too, focused his attention on aformal treatment of the syntax and semantics of declar-ative sentences in natural anguage, the framework ofusing a lambda calculus and the model theory of inten-sional logic, developed in PTQ, is rich enough toincorporate a view of natural language questions aswell.
In what seems to be his only published remark onthe issue of questions, he says: "In connection withimperatives and interrogatives truth and entailmentconditions are of course inappropriate, and would bereplaced by fulfillment conditions and a characteriza-tion of the semantic content of a correct answer"(Montague 1973).Perhaps inspired by this comment, a number ofresearchers have been investigating ways to incorporatea formal account of the syntax and semantics of ques-tions within the framework of Montague Semantics.Hamblin (1973), Karttunen (1977), Bennett (1977, 1979),Hausser and Zaefferer (1978), and Belnap (1982) areperhaps the most important of these investigations, andwe will discuss their work in relation to ours in thefollowing section.
Many of the aspects of our proposalhave been adapted from or influenced by the work ofthese researchers.Others not working within the MS framework havealso made important contributions to our understandingof the issues involved.
Approaching this issue from anentirely different perspective, researchers in artificialintelligence (AI) have over the years developed andimplemented automatic question-answering theoriesand systems to varying degrees of success.
These haveranged from some early experimental programs (Greenet al 1963) to database querying programs bound to aparticular database domain (Woods et al 1972 and16 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical DatabasesWaltz 1978) to some rather sophisticated DBQ systemstoday that are designed to be general and easily portable(Harris 1973, Hendrix et al 1978).
The research behindthese systems eems to share a goal common to much ofthe work in AI (as distinct from cognitive science), i.e.,an interest more in getting a system to "work" than indeveloping a formal theory that explains its behavior.3.4.2 DATABASE QUESTIONSAs guidelines to help us judge any proposed theory ofquestions we have adopted a number of self-imposedcriteria that any solution acceptable to us should meet.1.
It must fall within the general confines of Montague'sframework: syntax and semantics defined in parallel,with the semantics of a phrase defined composition-ally in terms of the semantics of its components.2.
The interpretation of questions hould be closelyanalogous to the interpretation of queries in therelational database model.
This means that theirinterpretation should be objects in the logical modelwhich have direct analogs in the HRDM modeldescribed in Section 2.In the relational database model "a query is acomputation upon relations to yield other relations"(Maier 1983).
This is an operational view of a data-base query; a denotational semantics view wouldhold that a query denotes a relation that is its answer,and would define just how, in fact, the query sodenoted.
In order to provide for the closest possibleparallel between the interpretation of questions inour theory and the query semantics of HRDM, wehoped to define the semantics of our English querylanguage in just such a way, viz., such that eachquery would denote the relation that is its answerwith respect o the database.
In other words, if aquery in the relational database context denoted ann-ary relation over entities (i.e., a set of n-tuples), wefelt that its expression as a question in our fragmentshould be defined to denote a function of type<en,t>.
As we shall see we were able to accomplishthis easily and naturally not in the semantics, but byextending the framework of Montague Semantics toinclude a pragmatic omponent.3.
The theory should be computationally tractable.Because we are interested in developing a theory fornatural anguage query systems that are ultimatelyimplementable, this criterion leads us to direct ourattention to solutions that fall within the general PTQframework.
This is because there have been success-ful results (Warren 1979 and Landsbergen 1981)implementing parsers and semantic interpretationroutines for fragments defined within this frame-work, and we wanted to build upon this work asmuch as possible.
While this work does not discuss acomputer implementation f its results, an extensionof Warren's PTQ parser (Warren 1979) to the QE-IIIfragment has been implemented by Hasbrouck(1982).4.
Proper treatment must be given to the interaction ofquestions and quantifiers.
The PTQ treatment suc-cessfully accounts for multiple readings of sentenceswith interacting quantifiers ("A woman loves everyman.")
Our solution should likewise allow for all ofthe readings of questions involving quantified terms("Who manages every employee?").5.
Y-N questions, wh-questions involving "who" and"what," and temporal questions ("when") shouldbe provided for.
This means that we do not treatindirect questions ("Tell me whether .
.
. "
) ,  sincethese do not generally arise within the databaseframework and could nevertheless easily be para-phrased as direct YNQs.6.
The theory should account for multiple wh-questions(e.g., "Who sells what to whom?")
as these seemindispensable in a database context.The problem of providing acorrect analysis of questionsthat involve quantified terms is illustrated by a querylike "Who manages every employee?"
An analysisshould only be considered adequate if it is able to findsuch a query ambiguous between an interpretation of"every" as "all" and also as "each."
In PTQ Monta-gue provided a solution to the familiar problem of themultiple readings of such sentences as "A woman lovesevery man."
Under one reading there is a single womanwho (magnanimously) loves each and every man, whileunder the other reading there is, for each man, somewoman or other who loves him.
A similar problemarises with respect o the interaction between ordinaryand question terms, as in "Who manages every em-ployee?
"Under one reading the questioner wishes to knowwhat individual(s) manage all of the employees, where-as under the other eading what is wanted is really a setof ordered pairs, viz., for each employee, the set ofindividuals who manage him/her.
Our interpretation fEnglish questions must permit both readings, sinceeither one is possible; the problem of disambiguatingbetween the two is best left, as in PTQ, to a later stagethat has access to domain-dependent meaning postu-lates.In order to get these readings, we propose making achange in the standard interpretation of the Englishword "every".
It is well known that this work isambiguousmin some cases it means "all" and in others"for each".
This is precisely the ambiguity in this case,and we must provide for both readings.The first reading, where "who" has wider scope than"every," presents no problems.who manages every employee/ \/ \who \[it-NOM-0\] manages every employeeComputational Linguistics, Volume 14, Number 4, December 1988 17James Clifford Natural Language Querying of Historical Databases\[it-NOM-0\] manages every employee : ==>'?x\[EMP'(i)(x) ---> MGR'(i)(Xo) ./~ manage'(i)(Xo,X)\]who ~---:> AP3y\[y(i) = u/~ P(i)(y)\]who manages every employee ---> 3y\[y(i) = u/~ Vx\[EMP'(i)(x) ---> MGR'(i)(y) A manage'(i)(y,x)\]\]The other reading requires the opposite scoping.Who manages every employee/ \/ \every employee who manages \[it-ACC-O\]as well as a different meaning for "every employee.
"The desired reading is accomplished by allowing"every"  to be ambiguous between its standard meaning"for  all" and its interrogative meaning of " for  each",  inwhich it is essentially synonymous with "which" .With this treatment of "every"  we obtain the desiredsecond (and more likely) reading.who manages \[it-ACC-O\] --> 3y\[y(i) = u/~ MGR'(i)(y)A EMP'(i)(Xo) A manage'(i)(y,Xo)\]every employee ---> AP=lz\[z(i) = v/~ EMP'(i)(z)/~ P(i)(z)\]who manages every employee?--> AP3z\[z(i) = v/~ EMP'(i)(z)/~ P(i)(z)\](AiAxo=ly\[y(i) = u/~ MGR'(i)(y)/~ EMP'(i)(Xo)/~ manage'(i)(y,xo)\])---> 3z3y\[z(i) = v/~ EMP'(i)(z)A y(i) = u A MGR'(i)(y) A manage'(i)(y,z)\]which denotes a set of ordered pairs <u,v> such that umanages v.The problem of multiple wh-questions has a rathersimple solution if one is willing to restrict one's atten-tion to questions that involve only one wh-word; it iswell known, however, that multiple wh-words require aconsiderably more complex treatment if the semanticsis to be defined compositionally as in a Montagueframework it must (Kuno and Robinson 1972).
Further-more, within the database context a restriction to singlewh-questions would be too severe a constraint--itwould limit the language to queries that return relationsover only a single attribute.We will discuss a number of different possible solu-tions to this issue of multiple wh-questions and ulti-mately adopt one as our solution.
We will see, however,in the course of this presentation, that there are consid-erable technical difficulties in defining the semantics insuch a way as to get it all to come out right for bothsingle and multiple wh-questions.
The solution that weadopt, involving the addition of a formally specifiedpragmatics for the fragment, does have this property inaddition to meeting our other criteria; moreover, thesimplicity of our solution, as contrasted with the con-siderable complexity in other proposals for a questionsemantics, e.g., Bennett (1977, 1979) and Hausser andZaefferer (1978), makes it especially attractive.
How-ever, it is clear that many researchers have found thesame kinds of difficulties in extending Montague's workin the direction of interpreting questions, and thatfurther work in this area is needed.
We hope that ourpropo,~al to treat the answering of a question as acomponent of a formally specified pragmatics of thelanguage, apart from its semantics, is a step in theproper direction.3.5 THE QE-III THEORY OF QUESTIONS3.5.1 INTRODUCTIONWe first present a general view of the substance of ourtheory of the interpretation of questions and then dis-cuss how this theory is carried out technically for thevarious types of questions that we consider.
Our goal isa formal interpretation of questions as the set of theircorrect answers with respect o an index and a model(state and database.)
This viewpoint is inspired by therelational database querying paradigm, wherein a querydenotes the relation that is its answer in the currentstate of the database.
It will be important o keep inmind the distinction between objects in a model for IL sand objects in the relational database model.
In therelational model, particularly when dealing with therelational algebra, one tends to think of all relations asbeing the same kind of object.
One projects and joinsrelations at will, since these relational operators aredefined generically.
However,  models for IL s arestrongly typed: considerations of the domains andranges of functions are of critical importance.
WithinIL~, e.g., a one-place relation of individuals is a functionfrom D e to D t (denoted by expression of type <e, t>) ,  atwo-place relation of individuals a function from D e tofunctions from De to Dt (denoted by expressions of type<e,<e, t>>) ,  etc.
Thus, under our theory, a questionsuch as "Who manages Peter?"
is pragmatically inter-preted (in a sense to be made clear below) as an objectof a completely different ype from the interpretation ofa question such as "Who manages whom?"
Later on wewill see that this theory does not fall within the main-stream of the logical theories for question semanticsthat have been proposed.3.5.2.
YES-NO QUESTIONSA semantic analysis of yes-no questions (YNQs) thatmeets the criteria set forth in the introduction to thissection is not difficult to obtain.
Since we want tointerpret YNQs as either "yes"  or "no"  (or equiva-lently T or F, or 1 or 0), they can be defined to denoteobjects in {0,1}.
But this is just the denotation set of thecorresponding declarative sentence that expresses theproposition that the YNQ asks.
Thus we easily meet ourcriteria by providing that a YNQ denote the sameproposition as that denoted by the declarative sentencefrom which it was derived.
For example,3-1.
John manages the shoe department.would roughly be translated as: manage'(i)(John, shoedept.
)This formula is true with respect o a state s just incase John manages the shoe department in that state.Our analysis of the corresponding question "Does John18 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databasesmanage the shoe department?"
provides that it is de-rived syntactically from " John manages the shoe de-partment" and that semantically it denotes the sameobject in the model.
The pragmatic interpretation of thisquestion is represented by the formula: manage'(now)(John, shoe dept.
), which in effect "questions"the model as to its truth or falsity in the same way thata YNQ questions the database for the response "yes"or "no . "
This analysis is provided by the following pairof syntactic and semantic rules for our fragment, and bythe pragmatic rules to be introduced in Section 3.5.6:S101.
(YNQ Formation)<F~01a,<t>,YNQ> and <F io lb ,<t>,YNQ>Flola(0) = #AUX0* where 0* is 0 with the "firstverbs" unmarked.Fi0~b(0) = "Is it the case that" 0T101.
Flola(0 ) and Floib(0) ~- -~> 0'This = => notation is used in each translation rule thatis not an instance of the general rule of function appli-cation.
In this case it indicates that the translation of theexpression formed by performing the operation FI0ia (orFi0~b) on the input string ~b is exactly the same as thetranslation that has already been assigned to ~b, whichwe denote with the notation &.
This semantic accountworks, since we want the interpretation of the yes-noquestion to be the same as the interpretation of thedeclarative sentence from which it is derived.In what follows we examine the more difficult prob-lem of defining compositionally a model-theoretic se-mantics for general wh-questions.3.5.3 WH-QUEST IONSWe first present a semantic solution that does providefor a successful interpretation for questions involvingonly one wh-word, e.g., "Who manages Peter?"
Thissolution has its simplicity to recommend it, but isunfortunately unable to accommodate multiple wh-questions.
We then examine a number of alternativesolutions to illustrate some of the many problems in-volved in attempting to accommodate these multiplequestions.It is obvious linguistic fact that question words like"who, "  "what , "  "whom,"  etc.
behave syntactically inmuch the same way as terms like "Peter"  or "anemployee" (e.g., Hamblin 1973).
In subject positionthere is virtually no difference.Interrogative Declarativewho manages Peter managesthe shoe depa~ment the shoe department/ \ / \/ \ / \who \[it-0\] manages Peter \[it-0\] managesthe shoe dept.
the shoe dept.while in object position there is so-called wh-Q-movement:/whatInterrogative DeclarativeWhat does Peter managesPeter manage?
the shoe department.\[ / \I / \Peter manages what the shoe Peter manages\[it-0\]/ \ department\Peter manages \[it-O\]Nonetheless in both cases the question word takes therole of a term syntactically.
Semantically, however,there is a difference.
Whereas ordinary terms refer to anindividual or a set of individuals in the model (actuallyin PTQ to the set of properties of these individuals, butthis point need not concern us here), question termsseem in some way to refer to the set of all possibleindividuals that, when substituted for the individualvariable in a matrix, makes the resulting formula true.This observation leads to the consideration that ques-tion words should denote, not sets of properties of setsof individuals, but rather functions from sets of proper-ties to sets of individuals that have those properties.The following table makes this analogy clearer.Term Logical Translation Logical TypePeter AP3x\[x(i) = Peter A P(i)(x)\] <<s,<<s,e>, t>>, t>an employee AP3x\[EMP(i)(x) A P(i)(x)\]who APAu3x\[x(i) = u A P(i)(x)\] <<s,<<s,e>, t>>,<e, t>>Because of the similarity of these wh-words to ordinaryterms, both syntactically and semantically, we shallrefer to them as wh-terms.
The schematic essentials ofthe translations of two of the above examples will showhow this analysis of the semantics of wh-terms providesthe desired analysis of the wh-question.Peter = :> ;tP3x\[x(i) = Peter A P(i)(x)\]\[it-NOM-0\] manages the shoedepartment ~ ~> manage'(i)(xo,shoe-dept )Peter manages the shoe department -~-=>AP3x\[x(i) = Peter/~ P(i)(x)\](AiAxomanage'(i)(Xo,shoe-dept))3x\[x(i) = Peter/~ manage'(i)(x,shoe-dept)who -m-~> APAu3x\[x(i) = u/~ P(i)(x)\]who manages the shoe department : :>APAu3x\[x(i) = u A P(i)(x)\](AiAxomanage'(i)(Xo,shoe-dept))---> Au3x\[x(i) = u/~ manage'(i)(x,shoe-dept)The first example demonstrates the PTQ-like analysis ofa declarative sentence translating into a formula whoseinterpretation i  the model with respect o a given stateis a truth value.
The second example provides ananalysis of an interrogative sentence containing a singlewh-term, using an analogous substitution rule.
Weobtain an expression of type <e, t> whose denotationwith respect o an index is a set of entities, viz., the setComputational Linguistics, Volume 14, Number 4, December 1988 19James Clifford Natural Language Querying of Historical Databasesof entities who manage the shoe department in thatstate.This analysis, unfortunately, cannot be generalized.Although it can also be made to provide the desiredanalysis for single wh-terms in direct or indirect objectposition, it will not allow for multiple wh-questions.
Tosee why this is the case, consider what the S and T rulesfor the above analysis might look like:.SWH.If a is a WH-Term and 05 is a formula, then FWH_ n(a,05) is a WIll-?, where FwH_ ~ (a,05) would bedefined as some sort of substitution of a for thefirst occurrence of xn, and the appropriate pro-noun for each subsequent occurrence, as in thePTQ substitution rules.TwI- I.FS_WH_ n (a,05) : :>  a'(AiAXn\[05'\]).Notice that this rule, unlike the analogous ubstitutionrules in the PTQ fragment, cannot be applied recur-sively to its output.
This is because the PTQ rules are ofthe form P~ + Q~ = ~---> R~ (i.e., an expression of typea combines with an expression of type /3 to yieldanother expression of type/3) whereas this rule is of theform P~ + Q~ ~ ~--> R v (i.e., the output is of a differenttype from either of the inputs).A number of alternatives present hemselves at thispoint to allow for an analysis of multiple wh-questionswithin this framework.
The first requires that wh-termshave different flavors (who0, whol, who2 .
.
.
.  )
depend-ing on the meaning of the expression i to which they aresubstituted for a free variable.
The second requiressubcategorizing the category term, and substituting allterms in for free variables at one time.
The third, andthe one we have adopted, achieves the same semanticeffect as the Rule T-WH, but in a two-stage processinvolving a separate pragmatic omponent.
We willexamine ach of these ideas in turn.
First, however, aword about substitution.In the PTQ analysis, a term can become a constituentpart of a sentence ither by directly combining withsome other constituent, or indirectly by means of sub-stitution for a free variable that has been so directlycombined.
For example, consider the following twoPTQ-like derivations of the sentence "John works".John works $4/ \ // \ /John work John/he-0John works S14I \I \0 he-0 works $4/ \\workUnder the semantic analysis of PTQ it turns out thatthese two derivations receive the same translation, andhence the same "meaning."
But the substitution rulesare not gratuitous.
They are introduced as a theory toaccount for pronomial co-reference and quantifier scop-ing.
The following example illustrates how pronomialco-refi~rence is handled by means of one of the substi-tution rules.Arz employee manages and he works S104I IAt~ employee #manage and he #work S14,0/ \/ \an employee \[it-NOM-0\] #manage and\[it-NOM-0\] #work Sl l/ \  / \/ \ / \a employee \[it-NOM-0\] \[it-NOM-0\]#manage #workIn this derivation, the Substitution Rule S14,0 providesfor the reading in which the same individual is thereferent of the terms "an employee" and "he".
Thesame problem of accounting for co-reference occurs inthe consideration of the semantics of questions, as thefollowing example illustrates 3.3-2. Who manages an employee such that he manageshim?The PTQ theory of co-reference, xtended to allowsubstitution of wh-terms, is equally able to capture thefact that "who" and "him" are co-referent, as are "anemployee" and "he".
Under our analysis, this sentencewould be derived as follows:Who manages an employee such that he manages him?IIWho #manage an employee such that he manages him?/ \/ \who \[it-NOM-0\] #manage an employee such that\[it-NOM-0\] manages him.This idea of extending the PTQ theory of co-referenceto the case of interrogatives is not ours.
It is used inmost of the work on question semantics in the Monta-gue Grammar tradition (including Karttunen 1977, Ben-nett 1977, 1979, and Belnap 1982).
It is that theory thatwe have incorporated into our fragment.
Because ques-tion words in our fragment are always assumed to havethe entire sentence as their scope (i.e., there are noembedded question clauses), and because of the exten-sional nature of our theory as dictated by the database,question words can always be brought in indirectly bymeans of substitution rules.
The difference in our re-spective treatments lies in our attempts to formalize themeaning iven to questions.Let us take a look now at why the analysis we havepresented so far cannot be extended to multiple wh-questions.
According to that analysis, the derivation of20 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databasesa question like "Who manages what?"
is blocked afterthe first wh-term is brought in.BLOCKED!/ \/ \who \[it-NOM-0\] manages what/ \/ \what \[it-NOM-0\] manages \[it-ACC-1\]\[it-NOM-0\] manages \[it-ACC-1\] ~--=>manage'(i)(Xo,X 0 (PTQ-rules)what =-----> hPhu3x\[x(i) =u/~ P(i)(x)\]\[it-NOM-0\] manages what : ~> ApAu3x\[x(i) =u/~ p(i)(x)\]---> Au3x\[x(i) =u/~ manage'(i)(Xo,X)\]Syntactically the derivation is blocked because theproposed Rule S-WH only allows a wh-term to combinewith a string in the category sentence, and under theanalysis "\[it-NOM-0\] manages what" is not a sentence.More to the point is the semantics.
"Who" denotes afunction from sets of properties to sets of individuals(having those properties), and the meaning of "\[it-NOM-0\] manages what" is not an appropriate argumentfor such a function.But suppose that the "who" that combined withformulas to form expressions denoting sets of individu-als were a different function from the "who" thatcombined with expressions denoting sets of individualsto form expressions denoting sets of ordered pairs ofindividuals, etc.?
Suppose, that is, that the English"who" were really a syntactic realization of a numberof different meanings, whoo, whol, etc., as follows:who o combines with propositions to form a set ofindividuals,who1 combines with sets of individuals to form a set ofordered pairs, and in general,whoi combines with sets of ordered i-tuples to form setsof ordered i+ 1-tuplesThese different functions of the English "who" wouldbe captured by their different translations into the logic(reflecting their interpretation as different semanticfunctions).who-word Translation Typewho 0 APAu:lx\[x(i) = u/k P(i)(x)\] <<s.<s.e>.t>,<e,t>>whol ARAvAw3z\[z(i) = v/x R(i)(z,w)\] <<s,<<s,e>,<e,>>>.<e.<e,t>>>With this analysis we could complete the above deriva-tion, previously blocked, as follows:\[it-NOM-0\] manages what ~ ~->;tu3x\[x(i) =u/k manage'(i)(xo,x)\]who (as who-l) ~ ~> ARAvAw3z\[z(i) = v/k R(i)(z,w)\]who manages what = => ARAvAw3z\[z(i) = v/k R(i)(z,w)\](AiAxoAu3x\[x(i) = u/k manage'(i)(Xo,X)\])---> AvAw3z=lx\[z(i) = v/k x(i) = w/k manage'(i)(z,x)\]In theory there would be an infinite number of such(related) meanings to the word "who," one for eachnatural number n, and we could even give a rule forgenerating these meanings inductively from the singlemeaning of who0.
In practice (and computationally),since ordinary English (and even "database-ese") al-lows for only a small number of terms in only a smallnumber of places (subject, direct and indirect objects,object of preposition, " l i s t .
.
. "
requests, etc.)
only asmall number would actually ever be used in any normalEnglish question.
The S and T rules for this analysiswould be something like the following:SWH.n.If a ~ PwH-Term-i and/3 ~ P?67 (i.e./3 denotes a setof i I -tuples), then Fwn.n(a, 13) E P?i?, whereFWH.n(a, /3) is the result of replacing the firstoccurrence of \[it-CASE-n\] in/3 with a, and replac-ing all subsequent occurrences of \[it-CASE-n\] in/3with he/she/it or him/her/it, respectively, accord-ing to the gender of a and the CASE of \[it-CASE-n\].TWh-n.FWH,n(Ot, /3 )~ ~> a'(AiAx,/3')Moreover, to account for derived wh-terms like "whichemployee" in "which employee sells shoes?
", we couldextend this analysis to the interrogative determiners"which" and "what".
This would dictate that which ocombined with employee to form \[which employee\]o,which t with employee to form \[which employee\]l , etc.,of the appropriate types.This analysis, while inelegant, is not really so far-fetched.
After all, in asking, "Who manages John?
""who" is in some way asking for a set of individuals,viz., those that manage John.
In asking, "Who manageswhom?"
however, rather than asking for a set ofindividuals, "who" is asking in conjunction with"whom" for a set of ordered pairs such that the firstcomponent manages the second component.
A theorysuch as the above sketch would claim that Englishallows for these many semantic functions of interroga-tive terms to be performed by the same surface wordslike "who".We might also point out here a closely related alter-native to this approach.
Instead of having an infinitenumber of meanings for each wh-term, we could sufficewith one and allow an infinite number of syntactic andsemantic rules for performing the substitutions.
Theserules would perform the necessary conversions of themeanings, not of the wh-term, but of the sentential forminto which it is being substituted.
Thus, e.g., theT-WH-I rule for combining "who" with "\[it-NOM-0\]manages whom" would form the following expression(where WHO* stands for the translation of "who"):Aw\[WHO*\[AiAXo/3*(w)\]\]Computational Linguistics, Volume 14, Number 4, December 1988 21James Clifford Natural Language Querying of Historical DatabasesFor example, combining "who" with "\[it-NOM-0\]manages what":who = => APAv3y\[y(i) = v A P(i)(y)\]\[it-NOM-0\] manages what = ~-->Au3x\[x(i) = u A manage'(i)(xo,x)\]who manages what = =>Aw\[APAv3y\[y( i )  = v A P(i)(y)\]\](\[AiAXo\[Au::lx\[x(i) = uA manage'(i)(xo,x)\](w)\])--, Aw\[APAv3y\[y(i) = v A P(i)(y.
)\]\](\[AiAXo\[3X\[x(i) = w A manage'(i)(xo,x)\]\]\])--, AwAv3y=lx\[y(i) = v A x(i) = w A manage'(i)(y,x)\]Notice that this rule schema essentially converts theone-place relation denoted by one of its arguments("\[it-NOM-0\] sells what" in the example) into a formula(by function application to the new individual variablew) in order to allow the single meaning of "who" toapply.
Lastly, it A-abstracts this variable w over theresult in order to obtain a two-place relation.
A slightlyunfortunate result of this rule is that the order of theindividuals in the relation is exactly opposite from theorder in which the wh-terms were quantified.A second possible approach that would handle mul-tiple wh-questions would dispense with this essentiallyinductive treatment of i-place questions and attack theproblem all at once.
Such a theory would derive allquestions in the same manner, by simultaneously sub-stituting all wh-terms into the matrix sentence, keepingtrack of which terms were substituted for which varia-bles.
For example, the question "Who supplies what towhich departments such that they sell shoes?"
would beanalyzed as follows:"Who supplies what to which departments such thatthey sell shoes?
"/ N/ Nwho:0 \[it-NOM-0\] supplies \[it-ACC-1\] to\[it-DAT-2\]what: I such that \[it-NOM-2\] sells shoeswhich department:2Either of these two basic theories is possible; we haverejected them both for a number of reasons.
First, theuse of an infinite number of meanings for wh-terms andwh-determiners (or an infinite number of rules schemasfor their substitution) requires the same technique foreach of the tense rules, and for each of the tense ruleswith time adverbials, and for each of the when-questionrules, the rules for when-questions with tenses, forwhen-questions with tenses and time adverbials, etc.
Inother words, accepting a solution that types all ques-tions differently depending upon what they ask forforces the inclusion of rule schemas for all of the othersemantic functions that in a simple theory would oper-ate only on one type, the type given to sentences.
(Laterwe will discuss how the solutions of Bennett (1977,1979), Belnap (1982), and of Hausser and Zaefferer(1978) entail a similar rippling effect of complexitythroughout the rest of the semantic theory alreadydeveloped for declarative sentences.
)For an example of this effect in the theory underconsideration, consider what the rule for adding pasttense to a sentence would look like.
(Recall our argu-ments for the necessity of treating tense as a property ofthe entire sentence.)
Such a rule would have to be of theform P~ + -ED ~ >  Q~, where a could be thecategory declarative sentence (type t), 1-term question(type <e,t>), 2-term question (type <e,<e,t>>),  etc.Because of the strict typing system of ILs (and of thecategorial grammar of the PTQ theory of English syn-tax), this would require an infinite number of such rules,one for each of the possible input categories.
While sucha scheme is possible, it seems to violate a concern forsimplicity and elegance.An additional problem with a theory dependent uponsimultaneous substitution is a difficulty of conceiving ofit in semantic terms.
While the translation rules for sucha theory can probably be described (they would besomewhat complicated), they strongly suggest the viewthat the translation rules themselves are the semantics,when in fact they are nothing more than syntacticoperations on strings of logical symbols.
(This is acommon problem for people working with MontagueGrammars, occasioned by the indirect way that thesemantics for English is specified.
Dowty (1978) refersto this problem when he reminds us that "the transla-tion is a completely dispensable part of the \[PTQ\]theory.
The 'real' semantic interpretation f an Englishsentence is the model-theoretic interpretation of itstranslation and nothing but the model-theoretic inter-pretation of that translation.")
When examined in termsof the: semantic space of functions in the model, it is notclear what simultaneous substitution i the syntax de-notes model theoretically?3.5.4 TEMPORAL QUESTIONSWhen-questions are different from any of the questionswe have considered so far for three reasons.
First, theyask about an object of a different logical type: all of thequestions we have considered have been treated as insome way referring to sets of n-tuples of individuals (oftype e); when-questions, on the other hand, refer tostates (of type s).Second, although sentences can and do make refer-ence to more than one time ("I know that John washere"), multiple when-questions are very infrequent.
Inmost situations "when" in English can generally onlybe asked once in a given sentence?
"When and when?
.
.?"
does not make sense, and questions like "Whendid John come and when did he leave?"
are really twoconjoined questions.
4 We have not accounted for mul-tiple when-questions of these sorts in our theory.
Aninterpretation for them could be formulated ina manneranalogously to our treatment of multiple wh-questions,but this would require modifying the treatment of time(modeled after Montague's) in the semantics.
We will22 Computational \]Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databaseshave more to say about this in our discussion ofpragmatics.Finally, when combining with wh-terms, "when"must be brought in last to have the widest scope, foressentially the same reasons that led to the recognitionthat tense had to have widest scope.
Moreover, someaccount must be given of how "when" interacts withour treatment of tenses, the other major temporalindicator in the surface structure of English.
The fol-lowing example indicates how "when" is introducedinto a sentence and captures the variable i in all of itsfree occurrences.When did John work?/ I \/ I \when (PAST) John #workJohn #work ~ EMP.
'(i)(John)When did John work?
~ ApAil\[\[i ~< i\]/% p(i 0\](AiEMP.
'(i)(John))--> Ail\[\[i j < i\] A (AiEMP,'(i)(John)(i0\]--> Aij\[\[i I < i\] A EMP,'(i0(John)\]Thus the question is interpreted as asking for the set oftimes in the past at which John was an employee.3.5.5 PRAGMATICS OR SEMANTICS?Most theories of question semantics, including thosesketched above, and those of a number of other re-searchers in the Montague framework to be discussedshortly, make significant complications tothe semanticsof other parts of the PTQ analysis in order to incorpo-rate these new sentences.
Perhaps we are overtaxingthe semantic omponent of our language theories, ask-ing it to do for us more than it was intended to do.
Forexample, most theories of question semantics haveattempted toinclude some representation f the answerof the question as part of its denotation.
Is there notsomething odd in a theory that holds that a questiondenotes its answer, especially if one has tried (or triednot) to think of denoting as a formal counterpart to theintuitive notion of meaning?
Yet in one form or another(denoting the set of possible answers (Hamblin 1973),the set of correct answers (Karttunen 1977), functionsfrom sequences of individuals to propositions (Bennett1977, 1979 and Belnap 1982), and our sets of n-tuples ofindividuals) many researchers have been investigatingways to accomplish this in a formal semantics.
Thesimilarity between wh-terms and unbound pronouns("Who loves whom?"
versus "He loves him") suggestanother approach, viz., one in which1.
the semantic component provides that questionsdenote as declarative sentences (with unboundpronouns) do, and2.
the pragmatic component provides that questionsare interpreted as requests for their answers.Pragmatics i the least understood branch of the tripar-tite division of the study of language that Morris (1938)proposed in his theory of semiotics.
This century hasseen tremendous successes in the development of for-mal logical syntax and model-theoretic semantics, butvery little in the way of formal pragmatics.
(Martin(1959) is an early attempt in this direction.)
Marcis-zewski (1971) and more recently Levinson (1983) to-gether contain a thorough analysis of the various ap-proaches that have been taken to define the scope oflinguistic pragmatics, from its origin in Morris's defini-tion of semiotics (Morris 1938) to the present day.
It isobvious from these accounts that there has been lessagreement as to the scope of this branch of the field.Morris (1938) originally defined pragmatics as the studyof"the relation of signs to interpreters."
Later, at leastpartly in response to Carnap's proposal that "if  in aninvestigation explicit reference is made to the .
.
,  userof a language, then we assign it to the field of pragmat-ics" (Carnap 1947), Morris felt the need to expand uponthis definition.
In Morris (1946), he says that pragmaticsis "that portion of semiotic which deals with the origins,uses, and effects of signs within the behavior in whichthey occur.
"Montague's conception of pragmatics (Montague1968, 1970a, and 1973), based upon Bar-Hillel's (Bar-Hillel 1954) discussion of indexical expressions, repre-sents a departure from the traditional view.
Hamblin(1973) felt that Montague's incorporation ofa pragmaticcomponent directly in the syntax and semantics wasunconventional, nd felt the need "to defend pragmat-ics from this weakened interpretation .
.
.
.
Pragmaticsis the study of the use (not just reference) of language ofall kinds; or, if it is not, we need a new name for thestudy that complements syntax and semantics.
Monta-gue's 'pragmatics' would be better classed as a specialpart of semantics."
Dowty (1978), while admitting that"the linguist's use of the term pragmatics i far fromstandardized," adopts the view that it should encom-pass direct and indirect speech acts, presuppositions,and implicatures, and explicitly rejects Montague's useof the term to encompass a treatment of indexicalexpressions.What we propose in our theory of questions is thatthe proper place for considering the answer(s) to aquestion is in a separate theory of pragmatics for thelanguage.
We do not propose a completely generaltheory of pragmatics.
But we believe that incorporatinginto our fragment a formal pragmatic omponent thattreats the notion of a response to a question is defensi-ble as at least one component of a theory of languageuse.
In the first place, Montague notwithstanding, it fallswithin the confines of pragmatics as that term is gener-ally understood.
For whether one speaks of "the useand effects" of language (Morris 1946), the "relation ofsigns to their interpreters" (Morris 1938), the notion of"speech acts" (Dowty 1978), or the "linguistic meansfor effecting literal purposes" (Kasher 1977), it is clearthat the notion of responding to a question is encom-passed.
Our attempt to formalize a pragmatic ompo-Computational Linguistics, Volume 14, Number 4, December 1988 23James Clifford Natural Language Querying of Historical Databasesnent to QE-III accords well with what Stalnaker (1972)sees as the goals of "a formal semiotics no less rigorousthan present day logical syntax and semantics."
Thosegoals, he goes on to say, include an analysis of suchlinguistic acts as "assertions, commands .
.
.
.
.
re-quests .
.
.
to find necessary and sufficient conditionsfor the successful (or perhaps in some cases  normal)completion of the act.
"A second argument in favor of this approach comesfrom looking at the way that linguists have described theconcept of a question.
Linguists have traditionally clas-sifted sentences into four distinct types: declarative,interrogative, imperative, and exclamatory.
A glancethrough some standard text or reference books  onEnglish grammar eveals two separate approaches tothe rationale behind this scheme.
According to oneschool, as in Roberts (1954), it is based upon the"different kinds of meaning" a sentence may have.
Theother school, as in Quirk and Greenbaum (1974), con-siders that the distinction is based upon such criteria asword order in the sentence, presence or absence of asubject, the presence of an interjection, etc.
Clearly thedisagreement is over whether to consider this a syntac-tic or a semantic distinction.
Perhaps in some sense it ismainly a pragmatic one, reflecting both the use andeffects of the utterance.Finally, this approach in its technical details is bothsimple and elegant.
It removes from semantics theburden of providing an account of the response to aquestion, and allows it to do what semantics theorieshave always done best--account for reference.
Then,just as the semant ics  of a language is based upon itssyntax, the pragmatics i based upon both the syntacticand semantic analyses (or, in Hamblin's phrase, it"complements syntax and semantics").
The simplicitywith which we can state the pragmatic rules for ourfragment, which take into account he notion of theanswer to a question, is based upon this ability to haveboth the syntax and the semantics at hand upon whichto build a theory of pragmatics.
An example shouldmake this clear.In QE-III, questions denote (a semantic concept)justas declarative sentences do.
Thus QE-III gives thefollowing semantic analyses for "Who manageswhom?"
in the syntactic ategory wh-question, and for"He manages him" in the category declarative sen-tence.who manages whom?
---> 3x\[x(i) = u 2/% EMP,'(i)(u0/% AS-l(ul,x)\]he manages him ---> 3x\[x(i) = u 2/% EMP,'(i)(u0/% AS-l(Ul,X)\]Both are treated as denoting the same object withrespect to an index, a variable assignment, and a model.But they are interpreted ifferently in the pragmatics.Pragmatics in QE-III is a function that, given a deriva-tion for an expression of QE-III together with itssyntactic ategory and its (semantic) denotation, re-turns a (possibly) new object in the same model as itspragmatic interpretation.
Thus, although we view prag-matics as a separate component of a language theory, itis closely allied to the semantics--both provide inter-pretations of linguistic expressions within the context ofthe same logical model.
The formal definition of thepragmatic ,component of IL s results in these two sen-tences, interpreted pragmatically, denoting what thefollowing expressions of IL s denote:who manages whom?
---> Au2Aul=lx\[x(i) = u 2A EMP.
'(i)(u0/% MGR'(i)(x)/% AS-l(ul,x)\]he manages him ---> 3x\[x(i) = u 2/~ EMP.
'(i)(u0A MGR'(i)(x) A AS-l(Ul,X)\]The pragmatic nterpretation f the question is the set ofn-tuples that answer it, while of the declarative sentenceis the same as its denotation.3.5.6 THE PRAGMATICS OF QE-IIIThe pragmatics that we give here for QE-III is a simpletheory of the effects of producing an expression i  thatlanguage within the assumed context of a question-answering environment.
That is, we assume that a userof QE-III is using the language to produce some effectwithin this context, and it is this effect which weformalize as the pragmatic omponent of the languagedefinition.
We could, of course, have defined the prag-matics in the same manner as the semantics was de-fined, i.e., inductively over the syntax.
However, indoing so we would have seemed to be giving somestatus or importance to the pragmatic interpretation fexpress ions  in every category of QE-III.
Because wehad no real intuition about what the pragmatic interpre-tation of, say, the expression "in 1978" represented, wedecided upon a different form of the definition.
Accord-ingly, our definition provides apragmatic interpretationfor expressions in any of the several sentential catego-ries of the language, namely T-YNQ, T-WHQ,WHENQ, and T-t. (Section 3.2 contains a discussionboth of some of the issues involved in our decision topresent a separate pragmatic omponent to the formaltheory of QE-III, as well as some of the considerationsfor the present form of this theory.
)The following preliminary definitions are neededbefore stating the pragmatic rules.1.
By/a\  is meant a derivation tree for the meaning-ful express ion a of  QE-III, as informally under-stood from our discussion of the syntax.
Wefurther assume that nodes of derivation trees arelabeled with ordered triples <A,B,C>, such thatA is the meaningful expression derived at thatnode, B is its syntactic ategory, and C is the ruleof syntax applied at that step in the derivation.For simplicity, we shall refer to component A ofthe root o f /a \  as a, and to the component B asCAT(/a\).24 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databases2.
The translation rules guarantee that correspond-ing to any derivation tree/a\  for a E MEQE_nlthere is a unique translation into IL s. By T(/a\)shall be understood this unique translation, and by\[/a\\] Mthe denotation of/t~\ provided indirectly viaT(/a\) with respect o the model M.3.
There are two standard ways of defining a (Tars-kian) model-theoretic semantics.
One is to definethe notion of denotation with respect to a model Monly, in which case formulas, e.g., denote the setof their satisfying variable assignments.
Theother, and more usual, procedure is to define thedenotation with respect to a model M and avariable assignment g, in which case a formuladenotes either True or False.
The two notions are,for all practical purposes, equivalent.
Since forthe purposes of pragmatics we shall want toconsider that open formulas denote the set of theirsatisfying variable assignments, we shall in thissection refer to the notion of denotation withrespect o a model M only.4.
If \[/a\\] M is a function whose domain is As(M), theset of all possible variable assignments over M,and if further V= {v I .
.
.
.
.
Vk} is a set of variablesof IL s, then by IIv(\[/a\\]M ) is understood the re-striction of \[/a\\]M to the domain V. Note that if V= 0, then IIv(\[/a\\]M is defined to be just \[/a\\]M.5.
If f is any function with domain As(M), thennow(f) is the restriction of f to the domainAS,,ow(M), where ASnow (M) = {g I g E As(M) andg(i) -- F(now)}, that is, that subset of the possiblevariable assignments for M for which the distin-guished time variable i is interpreted as denotingthat state denoted by the constant now.6.
By FV(/a\) we shall understand the set {il, i2,.
.
.
.
in} of indices of the variables (expressions ofthe form \[it-CASE-i\]) occurring free in a. Thisnotion will not be defined rigorously here, butwould be defined inductively over the structure of/a\ in the usual manner, with particular attentionpaid to which rules bind occurrences of variables(all of the PTQ substitution rules) and which rulesleave them free (e.g., the rules that introducewh-terms.)
This definition would be analogous tothe definition of the set FV e of variables of type eoccurring free in a logical expression, inparticularin the expression T(/a\).
It is clear that if FV(/a\)= {il .
.
.
.
.
in} then FV(T(/a\) = {ui, .
.
.
.
.
ui,}.However, we emphasize that FV(/a\) is definedover the derivation tree of a (i.e., over the syntaxof QE-III) and make no reference to the (interme-diate) translation of this tree into ILs.7.
Finally, if/3 is a meaningful expression of IL s, andif the free variables of type e in/3, FV e (/3) = {Ui,Ui 2 .
.
.
.
.
Ui.
}, are such that ui,, ui2 .
.
.
.
.
ui.
are inalphabetical order, then LCFvc (/3) is the uniqueexpression:hui.. .
,  hul/3 formed by first prefixing/3 with Aui,, then prefixing hUi2 to the result, and soon.In order to understand the form of some of the followingdefinitions we state the following fact (the proof ollowsdirectly from the translation rules of QE-III): If/3 is thetranslation of any meaningful expression a of QE-III,then the free variables of a are all of type e, except forthe possible xception of the distinguished variable i oftype s.The rules of pragmatics that we now state constitutea definition of the pragmatic function, in a manneranalogous to the way in which the translation rulesconstitute a translation relation.
In particular they con-stitute adefinition of the function P: P :/QE-III\ - ->  MU {ERROR}, which assigns to any derivation tree of ameaningful expression a of QE-III, either an object inthe model M or the distinguished symbol "ERROR" asits pragmatic interpretation.P1.
If CAT(/a\) ~ {WHENQ, T-WHQ, T-t,T-YNQ}then P(/a\) = ERROR.P2.
If CAT(/a\) ~ {WHENQ, T-WHQ, T-t, T-YNQ} then P(/a\) = IIFv ?
(now (\[/a\\]M))Rule P1 ensures that only sentences have a pragmaticinterpretation.
Rule P2 ensures that all sentences areinterpreted with respect o the "current" state index,and that in the case of questions, the infinite sequencesof variables that the question denotes is projected ownto include only the questioned variables.It is clear that the set of sequences given by IIFv ?
(now (\[/a\\]M)) is equivalently represented by the deno-tation of the expression LCFv c (hiT(/a\)(now)) of ILswith respect o M and g. P2 is therefore alternativelydefined as:P(/a\) = \[LCFv ~ (ZiT(/a\) (now))\]M,g.What this alternative definition allows us to do is toutilize the semantic notion of denotation to define thepragmatic interpretation f sentences in QE-III.
For itallows us to take a translation T(/a\) of any sentence aand determine its pragmatic interpretation asthe deno-tation of the expression LCFv c (hiT(/a\)(now)) and thusevaluate the pragmatic interpretation of a in terms ofthe semantics of IL s by means of this simple syntactictransformation T(/a\).3.5.7 CONCLUSIONSThe QE-III theory defines the denotation of a questionin exactly the same way as the denotation of thecorresponding declarative sentence that has pronounsin place of the interrogatives, but defines its pragmaticinterpretation asthe set of n-tuples that answer it.
Wehave discussed our initial attempts to accomplish thisresult directly, by having wh-terms denote functionsfrom sets of properties to sets of individuals that hadthose properties.
Technically, we discovered that toComputational Linguistics, Volume 14, Number 4, December 1988 25James Clifford Natural Language Querying of Historical Databasesaccomplish this directly required a c, onsiderable com-plication of the semantics throughout the structure ofour fragment.
And we discovered, as we shall see, thatothers with similar goals had also been forced to intro-duce more complexity into their logical model in orderto accomplish these goals in the semantic omponent oftheir theory.
Finally, we realized thai: by eliminating asa goal of the semantics the capturing of the answer(s) ofquestions, we could leave the basic semantic theory ofPTQ intact, and moreover, we could easily accomplishthis goal in the pragmatics.This concludes our informal discussion of the syntax,semantics, and pragmatics of QE-III.
We now proceedto discuss the theory in relation to :some of the otherwork in the field of Montague Semantics which hasattempted to extend the PTQ fragment o include atheoretical account of the syntax and semantics ofquestions.3.6 RELATED WORK3.6.1 INTRODUCTIONTwo common threads run through much of the recentwork on formalizing a theory of questions.
The first isthe idea that all questions hould be defined so as todenote objects of the same type.
Generally, this hasmeant propositions or sets of propositions, but it seemsthat even before the choice of just what questionsdenote was made, this "single semantics" viewpointhad been adopted.
The other, as we have alreadypointed out, is that some account of the answer(s) to aquestion should be included at least as a component ofits semantics.
When combined with other factors thesetwo biases have led to somewhat different results.
ThusHamblin (1973) suggests that a question denotes the setof all "propositions that count as answers to it";Karttunen (1977), "the set of propositions expressedby\[its\] true answers"; Bennett (1977, 1979) and Belnap(1982), who worked with Bennett on the theory, "setsof open propositions:functions from sequences of indi-viduals to propositions.
"3.6.2 KARTTUNENAs we have said, Karttunen (1977) presents an analysisof the semantics of questions that falls within the singlesemantics tradition.
(Hamblin (1973) earlier proposed atreatment similar to Karttunen's, but his theory was notworked out in as much detail.)
In Karttunen's theory,for example, the question "Who manages John?
"would roughly be translated as: Ap3x\[p(i) /% p = Ai\[manage'(i)(x)(i),John\]).
Semantically, this expression,when interpreted with respect o a model and a state,denotes the set which contains, for each person x thatmanages John, the proposition that x manages John.Such a treatment ofthe semantics of questions seemsinappropriate to us for two related reasons.
First, itseems to confuse propositions with the sentences thatexpress them.
Whatever a proposition might be in ourinformal use of the term, it is in the formal systemdefined by ILs a function from indices to truth values, orequiwdently a set of indices.
In order to see why thisseems; an inappropriate choice for the semantic objectdenoted by a question, consider a model in which theconstants manage' and love' are interpreted as follows:I 1978 ~ {<Mary, John>, <Susan, John>} IF(manage') = I 1979 --~ {<Mary, John>, <Bill, John>} II 1980 ~ {<Bill, John>} II 1978 ~ {<Bill, John>, <Susan, John>} IF(love') = I 1979 ~ {<Bill, John>} II 1980 ~ t~ INow consider the two queries QI: "Who manages Johnin 1978?
", which translates to Ap3x\[manage'(1978)(x,John)/% p = Mmanage'(i)(x,John)\]; and Q2: "Wholoves John in 1978?
", which translates to Ap3x\[love'(1978)(x,John) /% p = Mlove'(i)(x,John)\].
Given thesetranslations, the interpretation f these two queries inthis model, \[Q1\] and \[Q2\], is:\[Q1\] = { {1978,1979}/*Mary manages John */{1978} }/*Susan manages John*/\[Q2\] = { {1978,1979}/*Bill loves John */{1978} }/*Susan loves John */Under this interpretation, both queries, which are ob-viously quite distinct, denote exactly the same set ofpropositions in the model, the set containing the prop-osition {1978,1979} and the proposition {1978}.
Thusunder this interpretation we cannot distinguish betweenthese two questions--they are semantically equivalentin the database under this theory.The second and related objection is that under thisinterpretation all direct mention of the entities (Mary,Susan, John .
.
.
.  )
involved disappears.
Instead, thetheory claims that the question denotes a set thatcontains ets of states (years).
What this implies is thatthere is no obvious way of going backwards from theseobjects in the model (the sets of propositions) to someuseful expression in a language (English) that namesthem.
Since in this theory the denotation of questionsloses the people involved, we have no simple way torecover their names and report hem to the questioner.The theory neglects considering the use and effects ofthe question.
Moreover, there seems to be no way evento add a pragmatic component to such a theory in orderto account for a question's answer(s), for on the onehand the syntax has no mention of the names of theindividuals involved, nor on the other hand does thedenotation i volve any individuals at all.
In the prag-matics of our theory the two queries would instead beinterpreted, with respect to a given database, as follows(where \[Qi\] now means the pragmatic interpretation fQi): \[Q1\] = {Mary,Susan}, and \[Q2\] = {Bill,Susan}.With these interpretations we have not lost thepeople involved, and there is an obvious relationshipbetween these objects and English expressions for them26 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databases("Mary and Susan" and "Bill and Susan"), as well asthe relations in the database that express the sameinformation.
5understand it, we provide the following table of thetypes of the variables used.Q1MarySusanQ2BillSusanVariable symbols Type of variable symbolP <e,t> : sets of individualsr,s <n,e> : sequences of individuals0 <<n,e>,<s,t>> : open propositionsAs noted earlier, Bennett discussed the issue of thelogic of questions in two separate papers, and collabo-rated with Belnap in the development.
Their theory ispresented cumulatively in Bennett (1977, 1979) andBelnap (1982).
Motivated again by the goal of a singlesemantics, and even more strongly by a desire toaccount for the individuals that answer the question,Belnap and Bennett develop a theory that incorporatessequences of individuals into the model theory.
Thus aquestion like "Whom does John love?"
is treated asdenoting a set of functions from sequences of individu-als to propositions.
Essentially all and only those se-quences that close the open proposition "John loves\[it-ACC-0\]" and make it true are included in thisdenotation.
What this is tantamount to is incorporatingthe standard (Tarskian) notion of a variable assignmentinto the model theory, instead of leaving it in the metatheory of the logic.
For technical reasons the entiresystem must be altered to include these sequences, othat even sentences are no longer translated into formu-las, but rather into expressions denoting sets of suchsequences.
This rippling effect of the complications tothe semantics i extraordinarily reminiscent ofthe prob-lems we had in formulating a theory with inductivewh-terms.In order to accomplish this result, the set of types ofthe IL is expanded to include as a basic type n ,expressions of type n denoting a natural number.
Thusthe natural numbers must be included as objects in themodel, as well as functions constructed from them.
Ofparticular interest in their theory are the functions fromN to individuals, i.e., sequences.
The ripple effectnecessitates that "all expressions of English \[denote\]functions from sequences of individuals to their usualextensions" (Bennett 1979).
Even sentences are nolonger translated into formulas, but rather into expres-sions of type <<n,e>, t> that denote sets of sequences.Unfortunately, the results of this complication to thelogic and the English translations do not seem to justifythe cost.
Certainly this theory represents a step closerto the goal of capturing explicitly in the denotation theindividuals that answer the question, so it is an improve-ment over the proposition proposal.
But these individ-uals are hidden somewhere inside infinite sequences ofindividuals, with no indication of their position withinthose sequences.An example should clarify this point.
In order toIn the Bennett/Belnap theory, an open sentencelike "John loves him" is translated as: \[As\[love'(\['APP(s(1))\])(John')\], which denotes (ignoring inten-sions) the set of sequences such that John loves the firstmember of each of them.
The corresponding question"Whom does John love?
''6 would be: \[AO\[O =\[As\[^love'(\[^APP(s(1))\])(John')\]\] A 3r\[VO(r)\]\]\], whichdenotes a set of open propositions.
But these againinvolve infinite sequences of individuals, and there is noindication of which projection of these sequences rep-resents the individuals that John loves.This problem of having the individuals that constitutethe answer embedded in infinite sequences withoutknowing how to project hem out is the same one thatwe have in our semantic theory.
For our semanticstranslates questions into open formulas, which denotethe set of variable assignments that satisfy the formula.Our relegating to pragmatics the task of projecting thesevariable assignments could also be used to solve thisproblem here.
But if this is the case, then what is gainedby paying the price for the complication to the modeltheory and the translation rules?
This use of sequencesin effect duplicates the variable assignment of theirTarskian meta-theory (albeit restricted to the domainD e) in the object language and in the logical model withno noticeable advantages.3.6.3 HAUSSER AND ZAEFFERERThe proposal of Hausser and Zaefferer (Hausser andZaefferer (1978) and hereafter H-Z) is quite differentfrom the other theories we have discussed, and makes anumber of interesting points.
The theory is motivatedearly in the paper by a discussion of the range ofanswers that are possible to any given question, and aclassification of these possibilities as ranging from"minimal" to "redundant".
For example, in answer tothe question "Who dates Mary?"
the following list ofpossibilities i cited:a. Bill.b.
Bill does.c.
Bill does so.d.
Bill dates her.e.
Bill dates Mary.Answer (e), of course, is just what the propositionalapproach would say that the question denotes (as-suming Mary is going steady with Bill.)
H-Z goes on tosay, however, that "the truth value of the answerComputational Linguistics, Volume 14, Number 4, December 1988 27James Clifford Natural Language Querying of Historical Databasesexpression will depend on the question in the context ofwhich it is uttered, except for \[the completely redundantanswer\].
This shows that redundant answers are notvery interesting from a semantica point of view sincetheir semantic representation is identical to that ofordinary declarative sentences.
Since both redundantand non-redundant answers are possible, and sincenon-redundant answers are generally much more natu-ral, we hold that no serious theory of questions andanswers hould restrict itself to a treatment of redun-dant answers alone, and that it should be able to handleboth.
"H-Z then proceeds to develop atheory to account forall of these possible answers, by extending the PTQgrammar and the logic IL.
This theory replaces themodel theory of IL by what they call a "context-model."
In essence this model is an IL-model expandedto include as model-theoretic objects the entire languageof IL itself.
Minimal answers are then translated intoexpressions that denote formulas when interpretedwithin the context of a preceding question.
This isaccomplished technically by including in the logic a setof context variables, and by including an abstractionover a context variable in the translation of the non-redundant answers.
A context variable denotes anexpression of IL, viz., the question that has set up thecontext.
This idea of a context allows H-Z to define asemantics not just for questions like "Who datesMary?
", but also for each of the answers (a) through (e)in such a way that each of them is equivalent inextension.H-Z's concern with the semantics of the answers tothe questions, which at first sight seems to be ourconcern, is in fact another issue.
For our theory, whileit takes the answers of questions into account, isessentially not a theory of answers but a theory ofquestions.
Of course, in the context of a more completeand user-friendly question-answering system, the abilityto keep track formally of the context of the discourseand to express the answer in a number of differentways, is very attractive.
Such a system would need theability to go "backwards" from expressions in the logicto expressions in English with the same interpretation;Friedman (1981) discusses this issue from the point ofview of the PTQ fragment.
But the development in H-Zof the semantics of the questions themselves, althoughmotivated from this different concern with the equiva-lence of redundant and non-redundant answers, doesalso lead them to an analysis of question semanticsoutside of the single semantics framework.
Their anal-ysis "lets questions denote different ypes of sets ac-cording to the type of that expression which is thecritical one in any kind of answer."
In other words,their semantic analysis of answers is quite similar to ourpragmatic analysis of questions.
The following tablecomparing the types assigned to various kinds of ques-tions by their semantics and our pragmatics might helpto make this analogy clearer.Question class Our typingyes-rio t1 ind~viduM <e,t>2 indNidual <e,<e,t>>H-Z typing<<s,<<s, t>, t>>, t><<s,f(T)>,t><<s,f(T)>,<<s,f(T)>,t>>3.6.4 SCHA AND GUNJIThe work of Scha (1983) on the PHLIQA1 project andGunji (1981), both being developed concurrently withthe development of QE-III (Clifford 1982b), are remark-ably similar in spirit, though not in detail, to the presentwork.
The close parallels in the motivation of thesethree works indicate a trend among many researcherstoward developing a formal foundation for computersystems that do natural language processing.The major theoretical difference between QE-III andthat of the PHLIQA1 project of Scha are that we makea distinction between the semantics and pragmatics ofsentences inQE-III, so that the pragmatic nterpretationof questions in QE-III is closely analogous to Scha'ssemantics for the same question.
We continue to believethat this separation between the denotation of a sen-tence (given by the semantic omponent of the lan-guage) and its interpretation (given by the pragmaticcomponent) is a simpler and more easily extendibleapproach to the problem of providing a formal accountof meaning.Much of the motivation for the work reported inGunji (1981), namely to provide a formal pragmatics toa language specification by means of the computationalapplication of a"superinterpreter" after the completionof the syntactic and semantic interpretation, is the sameas ours.
Gunji's superinterpreter, in fact, is quite clearlythe computational realization of what we have termedour pragmatic interpretation.
The major difference be-tween these two projects is in the scope of their lan-guages, which reflect Gunji's focus on conversationimplicatures and ours on querying historical databases.Whereas Gunjrs work covers declarative and impera-tive sentences, and true-false questions, QE-III resultedfrom a concentration on wh-questions and an explicittreatment of time-denoting expressions.This concludes our informal discussion of the goalsand philosophy behind the definition of the fragmentQE-III, and its relation to other recent work in the areaof formal question semantics.
The next section providesan overview of QE-III through a series of examples anddiscussions illustrating the major features of the lan-guage.
(The complete definition of the syntax, seman-tics, and pragmatics of QE-III can be found in Clifford(1987).
)4 EXAMPLES FROM THE QE-III FRAGMENT4.1 INTRODUCTIONThis section presents and discusses examples of thesyntactic and translation rules of the QE-III fragment.As we pointed out in Section 3, the PTQ fragment28 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical Databasesstands essentially intact as the core of QE-III.
Thereare, however, certain changes to this core.
One majorchange is our use of the logic IL s as the intermediatetranslation language; this logic is a modification toMontague's IL, and makes explicit the "hidden" ab-straction over indices that is a part of the evaluationprocess in Montague's PTQ analysis.
With respect oIL, the major change is that in IL s, we evaluate anyexpression a with respect o a state s by forming theexpression \[Aia\](s).The other major aspect of QE-III is the inclusion of aformal pragmatic omponent to the language, on anequal standing with the syntactic and semantic ompo-nents.
The formalized pragmatic omponent of QE-IIIwas primarily motivated by the desire to simplify theprovision of an interpretation for questions in a formalway.
As we showed in Section 3.5.6 the pragmaticinterpretation of any sentential expression was essen-tially the denotation of the expression formed byAabstracting over all of the free individual variables andalso evaluating with respect o "now.
"In addition to these changes in the underlying logicand method of evaluation, the following additionalmodifications have been made to the rules of the PTQfragment.1.
Rule $4 has been modified to perform the singlefunction of combining a term with an IV to form asort of protosentence.
It no longer performs theverb inflection for third-person singular presenttense.
The entire treatment of tense and timeadverbials i now performed more systematicallyby rules S101-S106.
(The tensing functions of S17have therefore been totally eliminated.)2.
Montague's use of the variables he o and him oamounted to a simple technique of case marking inorder to choose the appropriate personal pronounupon substitution of a term.
We have expandedthis technique somewhat, using variables of theform \[it-CASE-i\] where CASE ranges over{NOM,DAT,ACC} and i over the natural num-bers.3.
Rule $9 for combining a sentence adverbial("Necessarily") with a sentence, has been elimi-nated.
This is because the only sentence adver-bials in QE-III are time adverbials, which arebrought in together with the tense marker in rulesS 104-S 106.4.
It is well know that there are problems with thePTQ treatment of conjunction and disjunction ofterms and IVs (see discussion in Friedman (1979)and Bennett (1974)).
While Friedman's bracketingsolution is ultimately more acceptable (both byvirtue of its generality and, of particular interest,its natural correspondence to a LISP implementa-tion), we have for simplicity of presentationadopted Bennett's imple solution of marking allbasic verbs with a # marker, which is removedwhen the verb is ultimately tensed.
(We choosethis solution because the points we wish to makehave only to do with the verbs, and are easilyunderstood with this technique.For ease of understanding the translations tofollow, thefollowing table shows the types of the variables used.Variable symbols Type of variable symbolX, y, Z, X0, XI, .
.
.P, Q, QI, Q2 .
.
.
.P,q, ql, q2 .
.
.
.ii l ,  i 2, .
.
.w<s,e> : individual concepts (ICs)<s,<<s,e>,t>> : properties ofICs<s,t> : propositionss : distinguished state variable wrt,which all expressions are evaluateds : states<s,<<s,<<s,e>,t>>,t>>:properties ofproperties ofICs4.2 PTQ-L IKE  EXAMPLES FROM THE QE- I I I  FRAGMENTBefore illustrating some of the added features of theQE-III database query fragment, we present a simpleexample within the syntactic range of the PTQ fragment(up to vocabulary differences) in order to contrast heway these two fragments derive and translate it.
Forexample, under one analysis,4-1.
John manages Mary.would have the following derivation tree in QE-III:John manages Mary S104IIJohn #manage Mary $4/ \/ \John #manage Mary $5/ \/ \#manage MaryThe syntactic and translation rules illustrated in thisexample are $4 to form an untensed clause from aSUBJect and PREDicate, $5 to form a verb phrase froma transverb and a direct object, and $104 to form apresent-tense clause.Several points arise with this example.
First, we notethat this analysis tree presents the derivational historyof non-basic expressions in the language in the obviousway.
Each node is labeled with a meaningful expressionin QE-III; in case the expression is non-basic, it isfurther labeled by the syntactic rule by which it wasconstructed, and is given children labeled with theexpressions from which it was obtained.
Montague(1970b) provides a more formal definition of analysistrees; it should be sufficient to point out that thelanguage is defined in such a way that to each analysistree (though not necessarily to each meaningful expres-sion) there corresponds a unique translation into theintermediate logical anguage.This analysis of Example 4-1 illustrates everal de-partures from the corresponding PTQ analysis.
First,we note that the basic verb is prefixed with #, and thisComputational Linguistics, Volume 14, Number 4, December 1988 29James Clifford Natural Language Querying of Historical Databasesprefix remains even after $4 is applied to combine theterm "John" with the intransitive verb phrase"#manage Mary".
Second, Rule SI04 is new.
It takesan untensed sentence as input and gives a (present)tensed sentence as output.
Thus we have characterizedtense as a property not of verbs, but of clauses, al-though this property in English is realized by theinflection of the main verb of the clause.
The impor-tance of this characterization will be made clearer whenwe consider the interaction of tense with interrogativesentences.This method of introducing tense,'~ into a sentenceobviates the need for undoing the English verb inflec-tions that would be required by a method (such as inPTQ or in Dowty (1979) that always introduced presenttense first, subject to possible subsequent modifica-tions.
Dowty (1979) makes a similar point--though stillin terms of introducing the tense via a SUBJ + PREDrule---but does not incorporate the idea into the frag-ment presented there.In a number of the PTQ rules Montague makes use ofthe auxiliary notions of the gender of a CN or a T, andthe third-person singular form of ave, rb.
These notionsare never defined with the same rigor that Montaguedemanded of other characteristics of his logic andgrammar, presumably because he felt they were obvi-ous and uninteresting.
As in Bennett (1974) we makeuse of a number of similar auxiliary notions in our rules.This example points out two such notions, viz., that ofthe tense of a clause and the case of a variable.
In ourfragment a clause is either untensed or tensed, andbelongs to a different category (though of the samelogical type) in either case.
A variable introduced into asentence is either uncased, or one of NOM, ACC, orDAT.The translation of Example 4-1 corresponding to theabove analysis tree is as follows:Mary ~-~-> hP=lx\[P(i)(x) A x(i) = Mary\]#manage ~ ~> AWAx\[W(i)(AiAy\[AS-I(y(i),x)A EMP,'(i)(y(i)) A MGR'(i)(x)\])\]#manage Mary =-----> AWAx\[W(i)(AiAy\[AS-I(y(i),x)A EMP,'(i)(y(i)) A MGR'(i)(x)\])\](AiAP=ix\[P(i)(x)A x(i) = Mary\])--~ Ax3z\[AS-l(z(i),x) A EMP,'(i)(z(i))A MGR'(i)(x) A z(i) = Mary\]John = ~> AP=ly\[P(i)(y) A y(i) = John\]John #manage Mary ~ :> AP=ly\[P(i)(y) A y(i) = John\](AiAx=lz\[AS-l(z(i),x) A EMP,'(i)(z(i))A MGR'(i)(x) A z(i) = Mary\])---> =ty\[AS-l(Mary,y) A EMP,'(i)(Mary)A MGR'(i)(y) A y(i) = John\]John manages Mary ~ ~> =ly\[EMP,'(i)(Mary)A MGR'(i)(y) A y(i) = John A AS-I(Mary,y)\]The pragmatic interpretation is represented by: 3y\[EMP,' (now)(Mary) A MGR' (now)(y) A y(now) =John A AS-l(Mary,y)\].Our treatment of proper terms is slightly differentfrom the PTQ treatment, in that the translations includean individual concept variable whose extension at thestate i is as,~erted to be the indicated individual.
This isdone because in HRDM all individuals of interest mustbe playing a role in the-database, and roles can only befilled by individual concepts.
Further, as we discussedin Section 13, verbs are treated as objects of the sametype as in I?TQ, but they are analyzed in terms of thedatabase schema.4,3 TEMPORAL REFERENCE IN QE-IIIIn addition to its indication by means of the tensesystem, temporal reference in English is also indicatedby certain time adverbials (today, last year .
.
.
.  )
andalso by prepositional phrases (in 1978, on Monday .
.
. )
.Care must be taken in order to analyze properly thesemantics of sentences that involve an interaction be-tween tenses and these other temporal indicators.
Theycannot be applied sequentially as operators to a clause,or the semantics will be incorrect.
(Dowty (1979) makesthe same observation.)
The following derivation for4-2.
Peter earned 25K in 1978.illustrates this aspect of QE-III.Peter earned 25K in 1978 S108/ \/ \in 1978 Sl13 Peter #earn 25K $4/ \ (derived as in Example 4-1)/ \in 1978This example illustrates Rule S108, which simulta-neously adds a tense (past) and a time adverbial, andS113, which forms a temporal prepositional phrase.
Thepragmatic nterpretation correctly indicates that there issome state in the past that is also in the set of states 1978at which the present-tense ntence "Peter earns 25K istrue": 3i13y\[1978'(ii) A \[il < now\] A EMP,'(il)(Peter)A SAL'(il)(y) A y(i 1) = 25K A AS-l(Peter,y)\].If we had introduced the two temporal indicators (thetense and "in 1978") separately, in either order, theresulting interpretations would be incorrect.Peter earned 25K in 1978/ \/ \(PAST) Peter #earn 25K in 1978/ \/ \in 1978 Peter #earn 25Kinterpreted as: 3i23i1=1y\[\[i2 < now\] A 1978'00 AEMP,'(il)(Peter) A SAL'(i~)(y) A y(i0 = 25K A AS-l(Peter,y)\].
This places the three times i~, i 2, and now onthe time line as follows:.
.
.
.
.
.
.
I .
.
.
.
.
.
.
.
.
I .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.i2 nowwith i~ anywhere on the time line in 1978.30 Computational Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical DatabasesThe reverse order of sequential introduction is alsoincorrect.Peter earned 25K in 1978/ N/ Nin 1978 Peter earned 25K/ N/ \(PAST) Peter #earn 25Ksince it is interpreted as: 3i23i13y\[1978'(i2) A \[i I < i2\] AEMP,'(il)(Peter) A SAL'(i0(y ) A y(il) = 25K A AS-l(Peter,y).
Here the two times are located as follows:.
.
.
.
.
.
.
.
I .
.
.
.
.
.
.
.
.
.
.
.
.
.
I .
.
.
.
.i!
i 2, in 1978The properties of Peter are asserted to be true in state i~,but il may or may not be in 1978, and may or may not bein the past (with respect to now.)
Only the simultaneousintroduction of these temporal operators provides thecorrect interpretation.Example 4-3 illustrates how tense is treated as aproperty of clauses in compound sentences, and howthese tenses are independent of one another.
It alsoillustrates how relative clauses are maintained in theQE-III fragment.4-3.
Peter manages an employee such that he earned30K.Under the most likely analysis, this sentence is inter-preted in QE-III as: :lw=lxqy=lil\[EMP,'(now)(x(now))A MGR'(now)(w) A w(now) = Peter A AS-l(x(now),w)A EMP,'(i0(x(now)) A SAL'(i0(y ) A y(i 0 = 30K A1978'(il) A \[i I < now\] A AS-l(x(now),w)\].Example 4-4 illustrates how propositions can betreated in almost the same way as time constants fordenoting sets of states.4-4.
John worked before Mary worked.This sentence is analyzed as asserting that there wassome state S1 before now at which John worked, andthat S 1 was also before some other state $2 before nowat which Mary worked.
:lil\[\[il <<(AiEEMP,'(i2)(Mary))\] A \[i 2 < now\]A \[i I < now\] A EMP,'(i0(John)\].Similarly, we can combine simple time expressions withprepositions toform temporal adverbials, as in Example4-5.4-5.
Rachel worked before yesterday.which is analyzed as: 3i1\[\[i I << yesterday'(now)\] A [i l< now\] A EMP,'( i  0 (Rachel)\].
Notice that this transla-tion places two restrictions upon when the state iI canoccur in time.1.
\[i I << yesterday'(now)\] because of "before yes-terday," and2.
\[i I < now\] because of the past tense.
Since a timebefore yesterday must be before now (by themeaning of "yesterday"), a meaning postulate forwords such as "yesterday" might well be in orderhere to remove this redundancy and reduce thefinal translation to 3i~\[\[i~ << yesterday'(now)\] AEMP,'(il)(Rachel)\].We now proceed to discuss the other additional rules ofthe QE-III fragment.
These rules either form expres-sions that have particular elevance to the databaserealm (possessives, role specifications, etc.)
or forminterrogative sentences.
We will look first at the ques-tions; some of the considerations involved in the fram-ing of these rules for database querying purposes wasgiven in Section 3.4.4 QUESTIONS IN QE-IIIConsider the following query:4-6. Who managed Rachel?translated as 3i13y\[\[i Z < i\] A EMP.
'(i0(Rachel) AMGR'(im)(y) A y(i0 = u A AS-l(Rachel,y)\].
Recall thatthe pragmatics provides a representation forthe answerto questions, and that the pragmatic interpretation ofthis query is denoted by the expression Au 3il3y\[\[i I <now\] A EMP.
'(il)(Rachel) A MGR'(i0(y) A y(i0 = u AAS-l(Rachel,y)\] formed by binding all free occurrencesof the variable i to the constant now, and A-abstractingover all of the free individual variables.This example illustrates why the tense must beconsidered a property of the entire clause, rather thanjust of the verb phrase, if the semantics of the questionis to come out right.
For suppose instead that wederived (4-6) as follows:Who managed Rachel?/ \/ \who \[it-NOM-0\] managed RachelThe translation would then be 3y3il \[y(i) = u A \[i~ < i\]A EMP.
'(i0(Rachel) A MGR'(i0(y) A AS- l(Rachel,y)\].The problem with this translation is that the manager-ICy is not tensed properly.
When evaluated, this querywill return the set of individuals u who are the extensionof Rachel's manager-IC, not at some time in the past,but now.
Because "who" has wider scope in thisderivation, the past-tense operator could not capturethe free i of the translation of "who".
The question,under our treatment, is correctly analyzed as "Who(past) managed (past) Rachel?}"
rather than as "Who(now) managed (past) Rachel?"
In order to get thisreading, tenses (and tenses + TmADVerbials) must bebrought in last over all clauses, including interrogativesentences.Interrogative terms (WriT's) can also be derivedfrom common ouns and the interrogative determinerssuch as "which," as seen in Example 4-7.4-7. Who manages which employees?which is interpreted as: hUlAU2:ly\[EMP,'(now)(u2) AMGR'(now)(y) Ay (now) = u I A AS-l(u2,y)\].Example 4-8 illustrates a three-term interrogative,using the three-place verb "#supply" and a rule (asimple extension of the two-place case, essentiallyComputational Linguistics, Volume 14, Number 4, December 1988 31James Clifford Natural Language Querying of Historical Databasestaken from Dowty (1979)) for combining such a verbwith an indirect object to form a two-.place verb.4-8.
What does who supply to whom?The interpretation 7 is AUaAUEAUl\[COMP,'(now)(u3) ADEPT,'(now)(u2) A ITEM,'(now)(u0 A REL-3(u3,u2,uP\].Example 4-9 illustrates a more complicated questionthat requires, in terms of the database: representation, a"join" of two relations.4-9.
Who works for a department such that it sellsshoes?It is interpreted as Au:lx\[EMP,'(new)(u) ADEPT, '(now) (x(now)) A AS-l(u,x) A ITEM,'(now)(Shoes) AREL-2(x(now),Shoes)\].Yes-no questions can take two forms in the frag-ments4-10.
Is it the case that Peter earns 30K?and4-11.
Does Peter earn 30K?Both of these questions receive the same interpretation:3x\[EMP,'(i)(Peter) A SAL'(i)(x) A x(i) =30K A AS-1(Peter,x)\].When-questions, very important in a historical data-base context, are illustrated by the following example.4-12.
When did Peter earn 25K?interpreted as hil3y\[\[il < now\] A EMP,'(i0(Peter) ASAL'(i~)(y) A y(il) -- 25K A AS-l(Peter,y)\].Finally, the next two examples illustrate the interac-tion of when and an already-formed term question, andthe interaction of when with time phrases.4-13.
When did who manage whom?interpreted as Au2AuiAil3x\[\[il < now\] A EiP, ' ( i l ) (U l)A MGR'(il)(X) A x(il) = u2 A AS-l(Ul,X)\], and4-14.
When and to whom did company A sell item Byesterday?interpreted as: AilAu2Aut 3x\[\[il < now\] A yesterday'(i 0A DEPT,'(il)(Ul) A x(i 1) = u I A COMP,'(il)(A) AITEM,'(it)(B ) A REL-3(A,B,u0\].This concludes the examples of the kinds of queriesexpressible in the language QE-III, and the semanticsand pragmatics that the fragment provides for them.
Wenow present some of the other additions we have madeto the PTQ fragment in order to express certain othercommon query constructions.4.5 MISCELLANEOUS FEATURES OF QE-IIIThe use of possessives i very common in databasequeries, and is easily incorporated into the fragment, asin4-15.
Who is Peter's manager?which is interpreted as Au3x\[MGR'(now)(x) A x(now) =u A AS-l(Peter,x)\].
An alternative way of phrasing thesame question uses "of"  instead of the possessivemarker.4-16.
Who is a manager of Peter'?and ultimately receives the same interpretation.
Finally,specification of the role played by an individual in thedatabase can also be accomplished by means of theword "as".4-1'7.
Who has Peter as manager?interpreted as Au3z\[MGR'(now)(z) A z(now) = Peter AAS-I(u,z)\], or by the simple concatenation of the roleand a term.4-18.
Who sells Item 37?interpreted as Au\[DEPT,'(now)(u) A ITEM,'(now)(37)A REL-2(u,37)\].5 CONCLUSIONThe problem of modeling the semantics of time is onewhich is beginning to be explored by researchers in anumber of different areas of computer science.
Webelieve that formal logic can make an important contri-bution to our understanding and specification of theproperties of time that we can incorporate into ourmodels and systems.
Using the logic IL s and the frame-work of MS, we have presented in this paper anoverview of the HRDM, which is a formalization of theconcept of a historical database.
HRDM provides forthe modeling of historical information in a DBMS, forthe specification of constraints on the way that infor-mation can change over time, and for a query languagefor accessing that information with specific reference toits temporal dimension.To complement the relational query language ofHRDM (Clifford and Croker 1987), we have in thispaper described a formal English database query lan-guage, QE-III, which is defined in a MS framework.QE-III incorporates a formal syntax, semantics, andpragmatics to account for an interpretation of questionsthat accord with the interpretation of HRDM, includingan account of multiple-wh questions, a semantics andpragmatics of time, and a grammar that is conducive toa computer implementation.
In addition to its formalsyntax and parallel semantics, QE-III is provided with aformal pragmatics that provides a representation for theanswer(s) to a question as a function of its syntax andsemantics.
We believe that this approach, and the wholearea of formal pragmatics as a component of languagetheory, is a fertile area for further research.ACKNOWLEDGEMENTSThis paper is based upon research done while I was a graduate studentin computer science at SUNY Stony Brook.
I would like to thank myadvisor David Warren for introducing me to, and schooling me in, thecomplexities of Montague Semantics, and also Professor Joyce Fried-man for encouraging me to conduct his research.
I would also like tothank the referees for their many useful and constructive commentson an earlier draft of this paper.REFERENCESAriav, G.; Belier, A.; and Morgan, H.L.
1984 A Temporal Model(Technical Report DS-WP 82-12-05).
Department of DecisionSciences University of Pennsylvania, Philadelphia, PA.Bar-Hillel, Yehoshua 1954 Indexical Expressions.
Mind 63: 359-379.32 Comput~tional Linguistics, Volume 14, Number 4, December 1988James Clifford Natural Language Querying of Historical DatabasesBelnap, Nuel D., Jr. 1982 Questions and Answers in MontagueGrammar.
In Peters, S., and Saarinen, E.
(eds.)
Processes,Beliefs, and Questions.
D. Reidel Publishing Co., Dordrecht, TheNetherlands.Ben-Zvi, J.
1982 The Time Relational Model.
Ph.D.
diss., Departmentof Computer Science, University of California, Los Angeles, CA.Bennett, M.R.
1974 Some Extensions of a Montague Fragment ofEnglish.
Ph.D.
diss., UCLA.Bennett, M.R.
1977 A Response to Karttunen on Questions.
Linguis-tics and Philosophy 1: 279-300.Bennett, M.R.
1979 Questions in Montague Grammer (TechnicalReport).
Indiana University Linguistics Club, Bloomington, IN.Bennett, M.R.
and Partee, B.H.
1972 Toward the Logic of Tense andAspect in English (Technical Report).
Indiana University Linguis-tics Club, Bloomington, IN.Carnap, R. 1947 Meaning and Necessity.
University of ChicagoPress, Chicago, IL.Chang, C.L.
1978 DEDUCE 2: Further Investigations ofDeduction inRelational Data Bases.
In Gallalre, H. and Minker, J.
(eds.)
Logicand Data Bases.
Plenum Press, New York, NY.Clifford, J.
1982 A Model for Historical Data Bases.
In Proceedings ofLogical Bases for Data Bases.
ONERA-CERT, Toulouse, France.Clifford, J.
1982 A Logical Framework for the Temporal Semanticsand Natural-Language Querying of Historical Databases.
Ph.D.diss., Department of Computer Science, S UNY at Stony Brook.Clifford, J.
1985 Towards an Algebra of Historical Relational Databases.
In ACM-SIGMOD International Conference on Manage-ment of Data.
Austin, TX.Clifford, J.
1987 Natural Language Querying of Historical Databases--The QE-III Language Definition and Examples (TechnicalReports CRIS-#164, GBA-WP#87-90).
Department of Informa-tion Systems, New York University, New York, NY.Clifford, J., and Croker, A.
1987 The Historical Relational DataModel (HRDM) and Algebra Based on Lifespans.
In Proceedingsof the Third International Conference on Data Engineering.
LosAngeles, CA.Clifford, J., and Warren, D.S.
1983 Formal Semantics for Time inData bases.
ACM Transcript on Data base Systems 8(2): 214-254.Codd, E.F. 1970 A Relational Model of Data For Large Shared DataBanks.
Communications ofthe ACM 13(6): 377-387.Cooper, R. 1979 Variable Binding and Relative Clauses.
InGuenthner, F., and Schmidt, S.J.
(eds.)
Formal Semantics andPragmatics for Natural Languages.
D. Reidel Publishing Co.,Dordrecht, The Netherlands.Dowty, D.R.
1978 A Guide to Montague's PTQ (Technical Report).Indiana University Linguistics Club, Bloomington, IN.Dowry, D.R.
1979 Word Meaning and Montague Grammer.
D. ReidelPublishing Co., Dordrecht, The Netherlands.Engdahi, E. 1986 Constituent Questions--The Syntax and Semanticsof Questions with Special Reference to Swedish.
D. Reidel Pub-lishing Co. Dordrecht, The Netherlands.Filmore, C. 1968 The Case for Case.
In Bach, E. and Harris, R.
(eds.
)Universals in Linguistic Theory.
Rinehart & Winston, New York,NY.Friedman, J.
1979 An Unlabeled Bracketing Solution to the Problemof Conjoined Phrases in Montague's PTQ.
Journal of Philosophi-cal Logic, 8:151-169.Friedman, J.
1981 Expressing Logical Formulas in Natural Language.In Groenendijk, J.; Janssen, T.; and Stokhof, M.
(eds.)
FormalMethods in the Study of Language.
Mathematical Center, Amster-dam, Holland.Friedman, J. and Warren, D.S.
1978 A Parsing Method for MontagueGrammars.
Linguistics and Philosophy, 347-372.Gadia, S.K.
and Vaishnav, J.
1985 A Query Language for a Homo-geneous Temporal Data Base.
In Proceedings of The FourthAnnual ACM SIGACT-SIGMOD Symposium on Principles ofDatabase Systems.Gallaire, H. and Minder, J.
1978 Logic and Data Bases.
PlenumPress, New York, NY.Green, B.F.; Wolf, A.K.
; Chomsky, C.; and Laughery, K. 1963Baseball: An Automatic Question Answer.
In Feigenbaum, E.A.,and Feldman, J.
(eds.)
Computers and Thought.
McGraw-Hill,New York, NY.Groenendijk, J. and Stokhof, M. 1983 On the Semantics of Questionsand the Pragmatics of Answers.Gunji, Takao 1981 Toward a Computational Theory of Pragmatics--Discourse, Presupposition, and Implicature.
Ph.D.
diss., TheOhio State University, Columbus, OH.Hamblin, C.L.
1973 Questions in Montague English.
Foundations ofLanguage 10: 41-53.Harris, L.R.
1973 The ROBOT System: Natural Language ProcessingApplied to Database Query (Technical Report TR78-1).
Depart-ment of Mathematics, Dartmouth College, Hanover, NH.Hasbrouck, B.L.
1982 Methods of Parsing English with Context-FreeGrammar.
Master's thesis, Department of Computer Science,SUNY at Stony Brook.Hausser, R. and Zaefferer, D. 1978 Questions and Answers in aContext-Dependent Montague Grammar.
In Guenthner F., andSchmidt, S.J.
(eds.)
Formal Semantics and Pragmatics for Natu-ral Languages.
D. Reidel Publishing Co., Dordrecht, The Neth-erlands.Hendrix, G.G.
; Sacerdoti, E.D.
and Sagalowicz, D.; and Slocum, J.1978 Developing a Natural Language Interface to Complex Data.ACM Transactions on Database Systems 3(2).Hintikka, J.
1974 Questions About Questions.
In Munitz, M.K.
andUnger, P.K.
(eds.)
Semantics and Philosophy.
New York Univer-sity Press, New York, NY.Karttunen, L. 1977 Syntax and Semantics of Questions.
Linguisticsand Philosophy 1: 3--44.Kasher, A.
1977 What is a Theory of Use.
Journal of Pragmatics 1:105-120.Kuno, S. and Robinson, J.
1973 Multiple WH-Questions.
LinguisticInquiry 3(2): 463--487.Landsbergen, S.P.J.
1981 Adaptation of Montague Grammar to theRequirements of Parsing.
In Proceedings of the Third AmsterdamColloquium on Formal Methods in the Study of Language.
Math-ematical Centre, Amsterdam, Holland.Levinson, Stephen C. 1983 Pragmatics.
Cambridge University Press,Cambridge, England.Lum, V., et al 1984 Designing DBMS Support for the TemporalDimension.
In ACM-S1GMOD International Conference on Man-agement of Data.
Boston, MA.Maier, D. 1983 The Theory of Relational Data Bases.
ComputerScience Press, Rockville, MD.Marciszewski, W. 1971 Introduction to Appendix.
In Pelc, Gerzy(ed.)
Studies in Functional Logical Semiotics of Natural Lan-guage.
Mouton, The Hague.Martin, R.M.
1959 Toward a Systematic Pragmatics.
North-Holland,Amsterdam.Montague, R. 1968 Pragmatics.
In Klibansky, R.
(ed.)
ContemporaryPhilosophy: A Survey.
Florence: La Nuova Italia Editrice, Flor-ence, Italy.Montague, R. 1970 Pragmatics and Intensional Logic.
Synthese, 22:68-94.Montague, R. 1970 English as a Formal Language.
In Visentini, B. etal (eds.)
Linguaggi nella Societa e nella Tecnica.
Edizioni diComunita, Milan, Italy.Montague, R. 1973 The Proper Treatment of Quantification i  En-glish.
In Hintikka, K.J.J.
et al (eds.)
Approaches to NaturalLanguage.
D. Reidel Publishing Co., Dordrecht, The Nether-lands.Montague, R. and Thomason, R.
(ed.)
1974 Formal Philosophy:Selected Papers of Richard Montague.
Yale University Press,New Haven, CT.Computational Linguistics, Volume 14, Number 4, December 1988 33James Clifford Natural Language Querying of Historical DatabasesMorris, C. 1938 Foundations of the Theory of Signs.
In InternationalEncyclopedia of Unified Science.
University of Chicago Press,Chicago, IL.Morris, C. 1946 Signs, Language, and Behavior.
Prentice Hall, NewYork, NY.Pope, E.N.
1976 Questions and Answers in English.
In JanuaLinguarum Series Practice 226.
Mouton, The Hague.Quirk, R. and Greenbaum, S. 1974 A University Grammar of English.Longman, London, England.Reiter, R. 1978 On Closed World Data Bases.
In Gallaire, H., andMinker, J.
(eds.)
Logic andData Bases.
Plenum Press, New York,NY.Rescher, N. and Urquhart, A.
1971 Temporal Logic.
Springer Verlag,New York, NY.Roberts, P. 1954 Understanding Grammar.
Harper & Row, NewYork, NY.Scha, Remko J.H.
1983 Logical Foundations fi~r Question Answering.Ph.D.
diss., University of Groningen, The Netherlands.Schank, R.C.
1972 Conceptual Dependence: A Theory of NaturalLanguage Understanding.
Cognitive Psychology 3(4): 552-631.Snodgrass, R. 1984 The Temporal Query Language TQuel.
In Pro-ceedings of the Third ACM SIGACToSIGMOD Symposium onPrinciples of Database Systems.
Waterloo, Ontario, Canada.Snodgrass, R., and Ahn, I.
1985 A Taxonomy of Time in Data Bases.In ACM-SIGMOD International Conference on Management ofData.
Austin, TX.Stalnaker.
1972 Pragmatics.
In Davidson, Donald and Harman, Gil-bert (eds.)
Semantics of Natural Language's.
D. Reidei PublishingCo., Dordrecht, The Netherlands.Tichy, P. 1978 Questions, Answers, and Logic:.
American Philosoph-ical Quarterly 15(4): 275-284.Vendler, Z.
1967 Linguistics in Philosophy.
Cornell University Press,Ithaca, NY.Waltz, D.L.
1978 An English Language Question Answering Systemfor a Large Relational Data base.
Communications of the ACM21(7): 526-539.Warren, D.S.
1979 Syntax and Semantics in Parsing: An Applicationto Montague Grammar.
Ph.D.
diss., University of Michigan, AnnArbor, MI.Woods, W.A.
; Kaplan, R.M.
; and Nash-Webber, B.
1972 The LU-NAR Sciences Natural Language Information System: FinalReport (Technical Report BBN Report 2378) Bolt, Beranek andNewman Inc., Cambridge, MA.NOTES1.
See Clifford (1987) for the definition of ILs, and adiscussion ofhow(and why) it differs from Montague's IL.2.
In all translation examples we follow Partee in using a doublearrow "~ ~--->" to indicate the immediate result of applying atranslation rule of the fragment, and a single arrow "--->" to indicatethe result of any of a number of logical simplifications (principallyA-reduction).3.
The "such that" construction for heading relative clauses is asyntactic holdover from the PTQ fragment, which, because ourconcern is primarily semantic, we have not attempted to replacewith a more sophisticated treatment.
For a treatment of more usualEnglish relative clauses, the reader is referred to Cooper (1979).4.
Although David Warren suggests considering the following sort ofexchange:\[SHE\]: "There are several Fire Island ferries each day.
"\[HE\]: "Oh, really!
When do they arrive and when do they leave?
"It is natural to interpret this as a request for the set of ordered pairs<t~,t2> representing the arrival and departure times of particularferry runs.
Other sorts of multiple when-questions that ask for arange ("Between when and when.
.
. "
)  seem to be of this sametype.5.
Tichy (1978) makes many of the same points that we make hereregarding the proposition idea.6.
Actually their syntax does not cover direct questions, and so thisis really their treatment of "John loves him" in the category ofBasic Question; it seems clear, however, that they intend thesemantics of the corresponding direct question to be the same.7.
REL-3 indicates that there is a tri-ary relationship among theindicated three individuals.34 Computational Linguistics, Volume 14, Number 4, December 1988
