HUGHES RESEARCH LABORATORIE STRAINABLE TEXT SKIMMER :MUC-4 TEST RESULTS AND ANALYSI SStephanie E .
Augus tHughes Aircraft Compan yElectro-Optical and Data Systems GroupP.O.
Box 902 -- EO E52 C235El Segundo, CA 90245-0902august@ sed l 70 .hac .com(310) 616-6491Charles P .
DolanHughes Research Laboratorie s3011 Malibu Canyon Road M/S RL9 6Malibu, CA 90265cpd@aic.hrl .hac.com(310) 317-5675SUMMARY OF MUC-4 PERFORMANC ETable 1 shows the official template-by-template score results for the Hughes Trainable Text Skimmer use dfor MUC-4 (TTS-MUC4) on TST3 .
TI'S is a largely statistical system, using a set of Bayesian classifiers with theoutput of a shallow parser as features.
(See the System Summary section of this volume for a detailed description o fTTS-MUC4) .SLOT POS ACTICOR PAR INCIICR IPAI SPU MIS NONIREC PRE OVG FALtemplate-id 112 106163 0 01 0 01 4349 01 56 59 4 0inc-date 109 101122 15 241 22 151 4048 61 27 29 4 0inc-loc 112 87111 39 41 0 171 3358 101 27 35 38inc-type 112 106155 8 01 0 01 4349 01 53 56 40 4inc-stage 112 106159 0 41 0 01 4349 01 53 56 40 1 3inc-instr-id 33 1415 1 01 1 11 827 1271 17 39 57inc-instr-type 52 1414 0 21 0 Cl 846 1091 8 28 57 0perp-inc-cat 69 101128 0 101 0 01 6331 231 40 28 62 3 0perp-ind-id 85 87112 5 191 2 51 5149 351 17 17 5 9perp-org-id 52 52112 0 71 1 01 3333 721 23 23 63perp-org-conf 52 5214 2 131 0 21 3333 721 10 10 63 5phys-tgt-id 66 112113 2 101 0 21 8741 741 21 12 78phys-tgt-type 66 112110 4 111 0 31 8741 741 18 11 78 4phys-tgt-num 67 122113 7 51 0 71 9742 741 25 14 80phys-tgt-nation 2 010 0 01 0 01 02 1541 0 * * 0phys-tgt-effect 39 11216 6 21 0 51 9825 821 23 8 88 1 0phys-tgt-total-num 0 3910 0 01 0 01 390 1161 * 0 100hum-tgt-name 57 173122 5 91 1 51 13721 681 43 14 7 9hum-tgt-desc 132 222129 24 171 1 241 15262 351 31 18 68hum-tgt-type 146 371135 16 321 1 131 28863 231 29 12 78 1 7hum-tgt-num 146 389135 32 161 1 261 30663 231 35 13 7 9hum-tgt-nation 16 010 0 01 0 01 016 1431 0 * * 0hum-tgt-effect 124 386135 20 111 1 181 32058 261 36 12 83 2 0hum-tgt-total-num 1 3310 0 01 0 01 331 1211 0 0 10 0inc-total 530 4281156 63 341 23 331 175 277 2521 35 44 4 1perp-total 258 292156 7 491 3 71 180 146 2021 23 20 62phys-tgt-total 240 497142 19 281 0 171 408 151 5741 21 10 82hum-tgt-total 622 15741156 97 851 5 8611236 284 4391 33 13 7 8MATCHED/MISSING 1650 18181410 186 1961 31 14311026 858 10171 30 28 5 6MATCHED/SPURIOUS 919 27911410 186 1961 31 14311999 127 9361 55 18 7 2MATCHED ONLY 919 18181410 186 1961 31 14311026 127 4861 55 28 5 6ALL TEMPLATES 1650 27911410 186 1961 31 14311999 858 14671 30 18 7 2SET FILLS ONLY 790 8791236 56 851 2 411 502 413 4911 33 30 57 2STRING FILLS ONLY 425 434193 37 621 6 371 242 233 2831 26 26 5 6TEXT FILTERING 69 99168 * *1 * *I 311 01 98 69 31 100 .PSR 2P&R P&2RF-MEASURES 22 .5 19 .57 26 .47Table 1: Official TST3 score report.10 4The performance, on a slot by slot basis, is, therefore, what one might expect : the pure set fills such asINCIDENT: TYPE and INCIDENT : STAGE OF EXECUTION show much better performance than the string fill ssuch as HUM TGT: NAME .Table 2 shows the summary rows of the official template-by-template results on TST4 .
The completeofficial score report for TTS-MUC4 on TST4 can be found in Appendix G : Final Test Score Summaries .Performance was comparable on both sets of texts .SLOTPOS ACTICOR PAR INCIICR IPAI SPU MIS NONIREC PRE OVG FA LMATCHED/MISSING1157 12601340 146 1571 34 891617 514 645 136 33 4 9MATCHED/SPURIOUS803 22731340 146 1571 34 8911630 160 955 151 18 7 2MATCHED ONLY803 12601340 146 1571 34 891617 160 404151 33 4 9ALL TEMPLATES1157 22731340 146 1571 34 8911630 514 11961 36 18 7 2SET FILLS ONLY561 6121195 48 77 I 0 311292 241 314 139 36 482STRING FILLS ONLY302 2931 80 22 47 1 2 221144 153 179 130 31 4 9TEXT FILTERING56 981 56** I **I 4202 1100 57 43 9 5P&R2P&RP&2 RF-MEASURES24 .020 .030 .
0Table 2 : Summary rows of the official TST4 score report .MUC-4 TEST SETTING STTS-MUC4 uses Bayesian classifiers for each of the template slots .
The general form for Bayesia nclassifiers is to compute,Pr(ci If l A f2 .
.
.fn )where fi are textual features .
For set fill slots, the Ci are the possible values (e .g .
DEATH, SOME DAMAGE ,etc.)
.
For the string fill slots, the Ci are yes or no answers to whether a particular item fills a slot, (e .g .
HUMAN-TGT-NAME versus HUMAN-TGT-NAME-NOT).
For typical Bayesian classifiers, the tunable parameter is th eprior probabilities for the Ci .
In TTS-MUC4 we have two different settings, EQUI-PROS and REL-FREQ ,respectively for probabilities that are equal for all classes and probabilities that reflect the relative frequency of classe sin the training data .
EQUI-PROB favors recall, and REL-FREQ favors precision .In addition, for text applications, there is an issue as to whether one includes only those features present i nthe text, or, also, those that are absent.
In TTS-MUC4 we used two different settings, PRESENT andPRESENT&FREQUENT, where PRESENT&FREQUENT considers all those features which are present and als othose that are absent, but which occur very frequently in the texts .
The threshold for whether a feature wa sconsidered frequent was set so that, for each slot, approximately 30 features were considered frequent .
In the TTS-MUC4 conceptual hierarchy there are over 400 potential features .For each slot, the parameter settings were optimized to balance recall and precision .
The optimization wa sdone using TST1 and TST2 .
Table 3 gives the parameter settings for each slot.
Balancing precision and recall forstring fill slots is difficult in TTS-MUC4 .
For example, in the training corpus, TTS-MUC4 detects over 4,000potential HUMAN-TARGET-NAMES, but less than 10% of these are actual string fills.TRAINING METHODOLOG YTo compute the conditional probabilities, the MUC-3 development (DEV) corpus and the associate dtemplates where used .
Each sentence in the DEV corpus that contained a string fill for some template was used as atraining sample .
TI'S detects features for important domain words (e.g .
explosion, report, etc .
), and also forphrases that may map into string fills .
For each training sample, the presence or absence of each feature wasexamined to compute, for example,105Pr,f (:explosion - wI:PHYS - TGT - TYPE = :COMMERCIAL )The probability estimates using relative frequency?
Pr,1 , are then combined using Bayes rule on a ne wsentence to compute:~'(c,lft A f2 .
.
.
f,, )SLOTIPriors Test sINCIDENT-TYPE REL-FREg PRESENTSTAGE-OF-EXEC_ REL-FREQ PRESENTINSTRUMENT-ID_ EQUI-PROB PRESENT&FREQUENTINSTRUMENT-TYPE REL-FRE9 PRESENT&FREQUENTPERP-INDIV EQUI-PROB PRESENTPERP-ORG_ EQUI-PROB PRESENTPERP-CAT EQUI-PROB PRESENTPERP-CONF EQUI-PROB PRESENT&FREQUENTHUM-TGT-NAME EQUI-PROB PRESENTHUM-TGT-DESCR EQUI-PROS PRESENTHUM-TGT-TYPE REL-FRE9 PRESENTHUM-TGT-EFFECT REL-FREQ PRESENTPHYS-TGT- ID EfUI-PROS PRESENT&FREQUENTPHYS-TGT-TYPE REL-FREQ PRESENTPHYS-TGT-EFFECT_REL-FREQ PRESENTTable 3 : Test run setting for the Bayesian classifiers .In addition to training of the Bayesian classifiers, the DEV corpus was used, exactly as in TTS-MUC3, t oderive phrase patterns for potential string fills .
For example, "SIX JESUITS" would drive the creation of thephrase ( :NUMBER-W : RELIGIOUS-ORDER-W) .
The type of the string fill served as the semantic feature forthe phrase, which is : CIVILIAN-DESCR, in this example .Improvement that occurred over time in TTS-MUC4 is attributable to two factors: the introduction of theBayesian classifiers to replace the K-Neighbors technique from TTS-MUC3, and the tuning of the parameters of th eBayesian classifiers for each slot.All of the training for TTS-MUC4 is automated .
As with TTS-MUC3, the only manual portion of th eprocess is choosing the conceptual classes for the lexicon .ALLOCATION OF EFFORTTwo calendar months and approximately 2 .5 person months were spent on enhancing the TTS-MUC3system to create TTS-MUC4.TTS-MUC4 effort falls roughly into three categories : classifier evaluation, system training, and filte rdevelopment.
Approximately 20% of our time was spent on developing and evaluating the performance of th eBayesian classifier, and tuning the parameters used in this classifier .
This classifier replaced the K-Nearest Neighborclassifier previously employed in TTS-MUC3.
10% of the development effort focused on tuning other systemparameters, such as the *fill-strength-threshold*, which provides a means for filtering out unlikely slot fillers .About 40% of our time was devoted to developing filters to improve the precision of the values of the templat efillers, and evaluating their effects .
Retraining of the system to take advantage of a modified lexicon and t oaccommodate the revised templates took up about 10% of the time.
The remaining 20% of the effort was spent o ndeveloping code to extract information to fill the new and revised slots of the MUC-4 templates .LIMITING FACTORSOne limiting factor for the Hughes TTS-MUC4 system was time.
The Bayesian classifier is effective forfilling most slots, but the K-Nearest Neighbor classifier might provide better fills for others .
However, time did not10 6permit us to experiment enough to identify the best classifier to use for each slot .
Another aspect of TTS to whichwe would like to have devoted more attention is on dynamically weighting features retrieved from the knowledgebase depending upon their relevance to the slot being processed .
Our algorithm for grouping sentences into topic swas responsible for many of our errors .
Improving the slot-dependent weighting portion of the system would take aconsiderable amount of additional time, and would require that domain knowledge be added into the processing .FUTURE WOR KThe following enhancements are most relevant to the current MUC-oriented software : (1) filters for stringfills based on linguistic knowledge, (2) reference resolution, and (3) better learningfpattem classification algorithms .TTS-MUC4 currently has a very limited amount of processing that is specialized for language .
One of the feature sthat we would have liked to detect in the MUC-4 corpus was the source of information in a story .
Individuals whoare the source of a report occurred frequently, and er oneously, as human targets .
Another "language specific" portio nwe would like to add is reference resolution for string fills .
TTS-MUC4 currently suffers in its precision scorebecause it lists each referent for a filler several times .Additional changes would make a more usable "real syste m" , although they are not essential for the MUCtask as it now stands.
These include (1) the development of a user interface for corpus marking, and (2) integratio nwith on-line data sources, such as map databases, to eliminate the burden of creating special data files for natura llanguage processing.TRANSFERABILITY TO OTHER TASK SCurrently, TTS only requires a lexicon and a training corpus with templates .
Therefore, extension toterrorism in another locale or to a completely different domain would be easy .
However, once features are added toimprove performance, as noted in Section 6 above, handling a new domain will be more difficult .LESSONS LEARNEDTTS-MUC4 represents a small increase in performance beyond TTS-MUC3 .
TTS currently has very littl eprocessing specific to language ; most of the processing is simple feature detection followed, by pattern recognitio nalgorithms .
We believe that TTS-MUC4 represents a plateau in performance that will require more linguisti cknowledge to increase performance .
The goal for TTS, then, is to significantly increase performance withou tincreasing development time for new applications .REFERENCES[1] Dolan, Charles P ., Goldman, Seth R., Cuda, Thomas V., Nakamura, Alan M. Hughes Trainable Tex tSkimmer: description of the US system as used for MUC-3 .
Proceedings of the Third Message UnderstandingConference (MUC-3) .
San Diego, California, 21-23 May 1991 .
[2] Dolan, Charles P ., Goldman, Seth R ., Cuda, Thomas V ., Nakamura, Alan M .
Hughes Trainable Tex tSkimmer: MUC-3 test results and analysis .
Proceedings of the Third Message Understanding Conferenc e(MUC-3) .
San Diego, California, 21-23 May 1991 .107
