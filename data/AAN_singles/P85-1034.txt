USING AN ON=LINE DICTIONARY TO FIND RHYMING WORDSAND PRONUNCIATIONS FOR UNKNOWN WORDSRoy J ByrdI.B.M.
Thomas J. Watson Research CenterYorktown Heights, New York 10598Martin S. ChodorowDepartment of Psychology, Hunter College of CUNYandI.B.M.
Thomas J. Watson Research CenterYorktown Heights, New York 10598ABSTRACTHumans know a great deal about relationships amongwords.
This paper discusses relationships among wordpronunciations.
We describe a computer system whichmodels human judgement of rhyme by assigning specificroles to the location of primary stress, the similarity ofphonetic segments, and other factors.
By using themodel as an experimental tool, we expect o improve ourunderstanding of rhyme.
A related computer model willattempt to generate pronunciations for unknown wordsby analogy with those for known words.
The analogicalprocesses involve techniques for segmenting andmatching word spellings, and for mapping spelling tosound in known words.
As in the case of rhyme, thecomputer model will be an important tool for improvingour understanding of these processes.
Both models erveas the basis for functions in the WordSmith automateddictionary system.1.
In t roduct ionThis paper describes work undertaken in the develop=merit of WordSmith, an automated dictionary systembeing built by the Lexical Systems group at the IBM T.J. Watson Research Center.
WordSmith allows the userto explore a multidimensional space of informationabout words.
The system permits interaction with lexi-cal databases through a set of programs that carry outfunctions such as displaying formatted entries from astandard dictionary and generating pronunciations for aword not found in the dictionary.
WordSmith alsoshows the user words that are "close" to a given wordalong dimensions such as spelling (as in published dic-tionaries), meaning (as in thesauruses), and sound (as inrhyming dictionaries).Figure I shows a sample of the WordSmith user inter-face.
The current word, urgency, labels the text box atthe center of the screen.
The box contains the outputof the PRONUNC application applied to the currentword: it shows the pronunciation of urgency and themapping between the word's spelling and pronunciation.PRONUNC represents pronunciations in an alphabetderived from Webster's Seventh Collegiate Dictionary.
Inthe pronunciation shown "*" represents the vowelschwa, and ">" marks the vowel in the syllable bearingprimary stress.
Spelling-to-pronunciation mappings willbe described in Section 3.Three dimensions, displaying words that are neighborsof urgency, pass through the text box.
Dimension one,extending from uriede to urinomerric, contains wordsfrom the PRONUNC data base which are close to ur-gency in alphabetical order.
The second dimension(from somebody to company) shows words which arelikely to rhyme with urgency.
Dimension three (from9udency to pruriency) is based on a reverse alphabeticalordering of words, and displays words whose spellingsend similarly to urgency.
The RHYME and REVERSEdimensions are discussed below.277ureideuremiauremicureterureteraluretericurethanurethaneurethraurethraeurethralurethritisurethroscopeurethroscopicurgesomebodyperfidysubsidyburgundyhypertrophycourtesydiscourtesyreluctancydecumbencyrecumbencyincumbencyredundancyfervencyconservancypungencypudencyagencysubagencyregencyexigencyplangencytangencystringencyastringencycontingencypungencycogencyemergencydetergencyconvergencyl-urgency .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
II N: >*R-J*N-SE3 II u:>* r:R g:d e:* n:N c:S y:E3 Ii Iurgenturicuricosuricuridineurielurim and thummurinalurinalysisurinaryurinateurinationurineurinogenitalurinometerurinometricdetergencysurgeoncyinsurgencyconvergencyemergencyindeterminacypertinencyimpertinencyrepugnancypermanencyimpermanencycurrencytrustworthytwopennycompanyinsurgencydeficiencyefficiencyinefficiencysufficiencyinsufficiencyproficiencyexpediencyinexpediencyresiliencyleniencyconveniencyinconveniencincipiencypruriencyAPPLICATION: PRONUNC COMMAND:DIM1: PRONUNC DIM2: RHYME DIM3: REVERSE DIM4:Figure 1.
WordSmith User Interface.Section 2 describes the construction of the WordSmithrhyming dimension, which is based on an encoding pro-cedure for representing pronunciations.
The encodingprocedure is quite flexible, and we believe it can be usedas a research tool to investigate the linguistic andpsycholinguistic structure of syllables and words.
Sec-tion 3 outlines a program for generating a pronunciationof an unknown word based on pronunciations of knownwords.
There is evidence (Rosson.
1985) that readerssometimes generate a pronunciation for an unfamiliarletter string based on analogy to stored lexical "neigh-bors" of the string, i.e.
actual words that differ onlyslightly in spelling from the unfamiliar string.
A programwhich generates pronunciations by analogy might serveas a supplement to programs that use spelling-to-soundrules in applications such as speech synthesis (Thomas,et aL, 1984), or it might be used to find rhyming words,in WordSmith's rhyming dimension, for an unknownword.Z.
RhymeThe WordSmith rhyme dimension is based on two files.The first is a main file keyed on the spelling of wordsarranged in alphabetical order and containing the words'pronunciations organized according to part of speech.This same file serves as the data base for thePRONUNC application and dimension shown in Figure1.
The second file is an index to the first.
It is keyed onencoded pronunciations and contains pointers to wordsin the main file that have the indicated pronunciations.If a single pronunciation corresponds to multiplespellings in the main file, then there will be multiplepointers, one for each spelling.
Thus.
tiffs index file alsoserves as a list of homophones.
The order of the en-coded pronunciations in the index file defines the rhym-ing dimension so that words which are close to oneanother in tiffs file are more likely to rhyme than wordswhich are far apart.The original motivation for the encoding used to obtainthe rhyme dimension comes from published reverse dic-tionaries, some of which (e.g., Walker, 1924) even callthemselves "rhyming dictionaries".
Such reverse dic-tionaries are obtained from a word list by (a) writing thewords right-to-left, instead of left-to-right, (b) doing anormal alphabetic sort on the reversed spellings, and (c)restoring the original left-to-right orientation of thewords in the resulting sorted list.
This procedure wasused to derive the REVERSE dimension shown in Fig-ure I.There are several problems with using reverse diction=aries as the basis for determining rhymes.
First, sinceEnglish spelling allows multiple ways of writing the samesounds, words that in fact do rhyme may be located farapart in the dictionary.
Second, since English allows agiven spelling to be pronounced in multiple ways, wordsthat are close to one another in the dictionary will notnecessarily rhyme with each other.
Third, the locationof primary stress is a crucial factor in determining if twowords rhyme (Rickert, 1978).
Primary stress is not en-coded in the spelling of words.
As an extreme xampleof this failure of reverse dictionaries, note that the verbrecord does not rhyme with the noun record.
Fourth,basing rhyme on the reverse linear arrangement of let-ters in words gives monotonically decreasing weight tothe vowels and consonants as one moves from right toleft in the word.
This procedure does not capture theintuition that the vowel in the syllable bearing primarystress and the vowels following this syllable are moresignificant determiners of rhyme than are the conso-nants.
For example, we feel that as a rhyme forurgency, fervency would be better than agency.
A reversedictionary, however, would choose the latter.
Morespecifically, even if the difficulties associated with spell-ing differences were overcome, a reverse dictionarywould still accord more weight to the /g/ consonantsound of agency than to the /or/ vowel sound offervency, contrary to our intuitions.tAs already indicated, our procedure uses word pronun-ciations rather than spellings as the basis for the rhymedimension.
A total of more than 120,000 pronuncia-tions from Webster's Seventh Collegiate Dictionaryhave been submitted to the encoding process.
The firststep in encoding replaces the symbols in the pronuncia-tion representations with single-byte codes representingphonetic segments.
The procedure which maps seg-ments to byte codes also allows different segments tobe mapped into a single code, in effect defining equiv-alence classes of segments.
For example, the French usound in brut is mapped onto the same segment as theEnglish long u sound in boot.
This is the same mappingthat most English speakers would make.In the mapping currently in use, all vowels are organizedlinearly according to the vowel triangle.
At one end ofthe spectrum is the long e sound in beet ( / i / ) .
At theother end is the long u sound in boot ( /u / ) .beet i \ /u  bootbit I '~  .
/U  bookbait e \  / o boatbat ~e ~/ o boughtapotThe diphthongs are organized into two subseries, one forrising diphthongs and the other for falling ones.
As withthe vowels, each subseries i  a linear arrangement of thediphthongs according to the position of the initial soundon the vowel triangle.
The consonants are similarly or-ganizod into several subseries.
There are voiced andvoiceless stops, voiced and voiceless fricatives andaffricates, nasals, and liquids.An important point about this mapping from pronun=elation patterns to phonetic segments i that it is flexible.Both the phonetic equivalence classes and the collatingsequence can be easily changed.
The system can thusserve as the basis for experimentation aimed at findingthe precise set of phonetic encodings that yield the mostconvincing set of rhymes,270The second encoding step arranges the segments for apronunciation i the order representing theft importancefor determining rhyme.
This ordering is also the subjectof continuing experimentation.
The current arrange-ment is as follows:(1) All segments preceding the syllable bearing pri-mary stress are recorded in the order that they occurin the pronunciation string.
(2) All consonantal segments in and following thesyllable beating primary stress are added to the en-coding in the order in which they occur.
(3) All vocalic segments (vowels and diphthongs) inand following the syllable bearing primary stress areplaced before any segments for trailing consonantsin the final syllable.
\[f there are no trailing conso-nants in the final syllable, then these vocalic seg-ments are placed at the end of the encoding.Note that this scheme preserves the order of the seg-ments preceding the point of primary stress, as well asthose in the final syllable.
For words where primarystress occurs before the final syllable, the vowels areraised in importance (with respect o rhyming) over allconsonants except final ones.
This procedure allows usto capture the intuition that fervency is a better rhymefor urgency than agency.The final step in the encoding procedure reverses thephonetic segment strings right-for-left, groups them ac-cording to the position of the syllable bearing primarystress (i.e., the distance of that syllable from the end ofthe word) and sorts the groups just as in the productionof reverse dictionaries.
The difference is that nowneighbors in the resulting sorted list have a better chanceof rhyming because of the use of pronunciations and theapplication of our intuitions about rhymes.We note that the resulting lists of rhymes are not perfect.This is so first because we have not completed the ex-periments which will result in an "optimal" set of int-uitions about the encoding process.
One plannedexperiment will clarify the position of the schwa vowelin the vowel triangle.
Another will study intervocalic280consonant clusters which, especially when they containnasals or liquids, result in less successful rhymes.
A thirdstudy will allow us to identify "discontinuity" in therhyme List, across which rhyming words ate very unlikelyto be found.
In Figure 1., a discontinuity seems to occurbetween currency and trustworthy.The second reason that our rhyme lists ate not perfectis that it is unlikely that any single dimension will besufficient o guarantee that all and only good rhymes fora given word will appear adjacent o that word in thedimension's order, if only because different people disa-gree on what constitutes "good" rhyme.ExamplesWe give two sequences of words selected from theWordSmith RHYME dimension.antiphonarydictionaryseditionatyexpeditionarymissionaryThese fi,~ words have their primary stress in the forthsyllable from the right, and they also have the same fourvowel sounds from that point onwards.
Notice that thespelling of antiphonary would place it quite far from theothers in a standard reverse dictionary.
In addition, theextra syllables at the beginning of antiphonary,seditionary, and expeditwnary are irrelevant for deter-mining rhyme.writewrightriterightThese four words, each a homonym of the others, sharea single record in the rhyming index and are thereforeadjacent in the WordSmith RHYME dimension.3.
Pronunciation of Unknown WordsReading aloud is a complex psycholinguistic process inwhich letter strings ate mapped onto phonetic repres=entations which, in turn, are converted into articulatorymovements.
Psycholinguists have generally assumed(Forster and Chambers, 1973) that the mapping fromletters to phonemes is mediated by two processes, onebased on rules and the other based on retrieval of storedpronunciations.
For example, the rule ea -> / i /  con-verts the ea into the long e sound of leaf.
The otherprocess, looking up the stored pronunciation of a word,is responsible for the reader's rendering of deaf as/d~f/ ,despite the existence of the ea ->/ i / ru le .
Both proc-esses are believed to operate in the pronunciation ofknown words (Rosson, 1985).Until recently, it was generally assumed that novelwords or pseudowords (letter strings which are not realwords of English but which conform to English spellingpatterns, e.g.. heat') are pronounced solely by means ofthe rule process because such strings do not have storedrepresentations in the mental lexicon.
Hcwever,Glushko (1979) has demonstrated that the pronuncia-tion of a pseudoword is influenced by the existence oflexical "neighbors."
i.e., real words that strongly resem-ble the pseudoword.
Pseudowords such as heal, whoseclosest neighbors (leaf and deaf) have quite differentpronunciations, take longer to read than pseudowordssuch as hean, all of whose close neighbors have similarpronunciations (dean, lean, mean, etc.).
(It has beenassumed that words which differ only in initial conso-nants are "closer" neighbors than those which differ inother segments.)
Giushko has also demonstrated an ef-fect of lexical neighbors on the pronunciation of familiarwords of English.The picture that emerges from this psychological workdepicts the retrieval process as selecting all stored wordswhich are similar to a given input.
If the input is notfound in this set (i.e., the input is a novel word orpseudoword), its pronunciation is generated by analogyfrom the pronunciations that are found.
Analogicalprocessing must take note of the substring common tothe input and its neighbors (ean in the case of hean), useonly this part of the pronunciation, and make provisionfor pronouncing the substring which is different (h).When the pronunciations of the lexical neighbors areconsistent, he pronunciation of the pseudoword can begenerated by the reader more quickly than when thepronunciations are inconsistent.There are of course  many unanswered questions abouthow readers actually generate pronunciations by anal-ogy.
One approach to answering the questions is tobuild a computational system that can use various strat-egies for finding lexical neighbors, combining partialpronunciations, etc., and then compare the output of thesystem to the pronunciations produced by human read-ers.
The following is an outline of such a computationalsystem.Two WordSmith files will be used to support a proposedprogram that generates pronunciations for unknownwords based on stored pronunciations of known words.The fh'st is a main file which is keyed on the spelling ofwords and which contains pronunciations organized ac-cording to part of speech.
This is the file which sup-ported the PRONUNC and RHYME WordSmithfunctions described earlier.
In this file, each pronuncia-tion of a word has stored with it a mapping from itsphonetic segments onto the letters of the spelling of theword.
These mappings were generated by a PROLOGprogram that uses 148 spelling-to-pronunciation rulesfor English (e.g.. ph ->/f/).
The second file is an indexto the main file keyed on reverse spelling.
This file isequivalent to the one which supports the REVERSEWordSmith dimension shown in Figure I.The strategy for generating a pronunciation for an un-known word is to find its lexical neighbors and producea pronunciation "by analogy" to their pronunciations.The procedure is as follows: (a) Segment he spelling ofthe unknown word into substrings.
(b) Match each sub-string to part of the spelling of a known word (orwords).
(c) Consult the spelling-to-pronunciation mapto find the pronunciation of the substring.
(d) Combinethe pronunciations of the substrings into a pronunciationfor the unknown word.These steps are illustrated below for the unknown wordbrange.
(a) Segmentationbrange<- - ?
initial substring<- - -> final substringStrategies for segmentation will be discussed later.281(b) Matchingbran is the longest initial substring in brangethat matches a word-initial substring in the dic-tionary.
The word bran is a dictionary entry,and 20 other words begin with this string.range is the longest final substring in brange thatmatches a word-final substring in the diction-ary.
The match is to the word range.
In thereverse spelling Fde, 22 other words end inange.
(c) Pronunciation of substringsAll 21 words that have the initial string matchfor bran have the mappingb r a nI I I Ib r aD nIn 20 of the 23 words that match word-finalange, the mapping isa n geI I I?
n j as in range(/renj/)The other three words are flange (/aenj/), or-ange ( / In j / ) ,  and melange ( /anj / ) .
(d) Combining pronunciationsFrom the substring matches, the pronunciationso f /b / , / r / , /n / , /g / ,  and /e /are  obtained ina straightforward manner, but pronunciation ofthe vowel a is not the same in the bran and angesubstrings.
Thus, two different pronunciationsemerge as the most likely renderings of brange.
(i) below is modelled after range or change, and(ii) is modelled after bran or branch.
(i) b r a n g eI I I I Ib r e n j(ii) b r a n geI I I I Ib r ~ n jHere, pronunciation by analogy yields twoconflicting outcomes depending upon the wordmodel selected as the lexical neighbor.
If peo-ple use similar analogical strategies in reading,then we might expect comparable disagree-ments in pronunciation when they are asked toread unfamiliar words.
A very informal surveywe conducted suggests that there is consider-able disagreement over the pronunciation ofbrange.
About half of those we asked preferredpronunciation (i), while the others chose (ii).In the example shown above, segmentation is driven bythe matching process, i.e.
the substrings chosen are thelongest which can be matched in the main file and thereverse spelling f'fle.
There are, of course, other possiblestrategies of segmentation, including division at syllableboundaries and division based on the onset-rhymestructure within the syllable (for brange, br + angelEvaluation of these alternative methods must await fur-ther experimentation.There are other outstanding questions related to theMatching and Combining steps.
If matches cannot befound for initial and final substrings that overlap (as inthe example) or at least abut, then information about thepronunciation of an internal substring will be missing.Finding a match for an internal substring requires eithera massive indexing of the dictionary by letter position, atime consuming search of the standard indexes, or thedevelopment of a clever algorithm.
With regard tocombining substring pronunciations, the problem of pri-mary stress assignment arises when primary stress is ab-sent from all of the substrings or is present at differentlocations in two or more of them.
Finally, there is aquestion of the weight that should be assigned to alter-native pronunciations generated by this procedure.Should a match to a high frequency word be preferredover a match to a low frequency word?
Is word fre-quency more important han the number of matchingsubstrings which have the same pronunciation?
Theseare empirical psycholinguistic questions, and the an-swers will no doubt help us generate pronunciations thatmore closely mirror those of native English speakers.4.
Conc lus ionThe two applications described here, finding rhymingwords and generating pronunciations for unknownwords, represent some ways in which the tools of com-putational linguistics can be used to address interestingpsycholinguistic questions about the representation ofwords.
They also show how answer~ to thesepsycholinguistic questions can, in turn, contribute to282work in computational linguistic.s, in this case to devel-opment of the WordSmith on-line dictionary.AcknowledgementsWe are grateful to Barbara Kipfer for her preliminarywork on the syllabification of unknown words, and toYael Ravin and Mary Neff for comments on earlier ver-sions of this report.ReferencesForster, K. and Chambers, S. (1973), Lexical access andnaming time.
Joutmal of Verbal Learning andVerbal Behavior, 12, 627-635.Giushko, R. (1979), The organization and activation oforthographic knowledge in reading aloud.
Jour-nal of Experimental Psychology, 5 674-691.Rickert, W.E.
(1978), Rhyme terms.
Style, 12(1),35-46.Rosson, M.B.
(1985), The interaction of pronunciationrules and lexical representations in readingaloud.
Memory and Cognition, in press.Thomas, J., Klavans, J., Nartey, J., Pickover, C., Reich,D., and Rosson, M. (1984), WALRUS: A de-velopment system for speech synthesis.
IBMResearch Report RC-10626.Walker, J.
(1924), The Rhyming Dictionary, Routledgeand Kegan Paul, London.Webster's Seventh Collegiate Dictionary (1967),Merriam, Springfield, Massachusetts.283
