Proceedings of the NAACL HLT 2010 Second Workshop on Computational Approaches to Linguistic Creativity, pages 31?39,Los Angeles, California, June 2010. c?2010 Association for Computational LinguisticsAn alternate approach towards meaningful lyric generation in TamilAnanth Ramakrishnan A Sobha Lalitha DeviAU-KBC Research CentreMIT Campus of Anna UniversityChennai, IndiaAU-KBC Research CentreMIT Campus of Anna UniversityChennai, Indiaananthrk@au-kbc.org sobha@au-kbc.orgAbstractThis paper presents our on-going work toimprove the lyric generation component ofthe Automatic Lyric Generation system forthe Tamil Language.
An earlier version ofthe system used an n-gram based model togenerate lyrics that match the given melody.This paper identifies some of the deficien-cies in the melody analysis and text genera-tion components of the earlier system andexplains the new approach used to tacklethose drawbacks.
The two central approach-es discussed in this paper are: (1) An im-proved mapping scheme for matching melo-dy with words and (2) Knowledge-basedText Generation algorithm based on an ex-isting Ontology and Tamil Morphology Ge-nerator.1 IntroductionIn an attempt to define poetry (Manurung, 2004),provides three properties for a natural languageartifact to be considered a poetic work, viz., Mea-ningfulness (M), Grammaticality (G) and Poetic-ness (P).
A complete poetry generation systemmust generate texts that adhere to all the threeproperties.
(Ananth et.
al., 2009) explains an ap-proach for automatically generating Tamil lyrics,given a melody, which attempts to generate mea-ningful lyrics that match the melody.The existing approach (Ananth et.
al., 2009) to au-tomatically generate Tamil lyrics that match thegiven tune in ABC format (Gonzato, 2003) in-volves two steps.
The first step is to analyze theinput melody and output a series of possible sylla-ble patterns in KNM representation scheme - ascheme for representing all words in the language,where, K stands for Kuril ((C)V, where V is ashort vowel), N stands for Nedil ((C)V, where V isa long vowel) and M stands for Mei or Ottru (con-sonants) - that match the given melody, along withtentative word and sentence boundary.
This melo-dy analysis system was trained with sample filmsongs and their corresponding lyrics collected fromthe web.
The tunes were converted to ABC Nota-tion (Gonzato, 2003) and their lyrics wererepresented in KNM scheme.
The trained modelwas then used to label the given input melody.The subsequent step uses a Sentence Generatormodule to generate lines that match the given syl-lable pattern with words satisfying the followingconstraints: a) Words should match the syllablepattern and b) The sequence of words should havea meaning.
This was achieved by using n-Grammodels learnt from a Tamil text corpus.Though the system manages to generate sentencesthat match the syllable pattern, it has the followinglimitations:1) When no words are found matching a givensyllable pattern, alternate patterns that areclose to the given pattern, as suggested by theEdit Distance Algorithm, are considered.
Thisalgorithm treats the syllable patterns as stringsfor finding close patterns and hence, can pro-vide choices that do not agree with the inputmelody.2) The Sentence Generation is based on the n-Gram model learnt from a text corpus.
Thiscan result in sentences that do not have a cohe-rent meaning.
Also, since only bi-grams areconsidered, it can generate sentences that areungrammatical due to Person-Number-Gender(PNG) agreement issues.This paper is an attempt to propose alternate ap-proaches in order to overcome the above limita-tions.312 Limitations of existing approach2.1 Finding close matches to syllable patternsIn the existing system, when no words are foundmatching the given syllable pattern (either due to asmall corpus or rarity of the pattern), the closestpatterns are considered as alternatives.
The closestmatch to a given syllable pattern is generated basedon the Edit Distance algorithm.
For example, if theinput sequence is given as "NKN" (long vowel -short vowel - long vowel) and if no words arefound matching NKN, closest matches for NKNare generated.
Thus, if an edit distance of 1 is con-sidered, the alternate pattern choices are "KKN","NKM", "NNN", "NMN", etc.
However, not all ofthese syllable patterns can fit the original musicnotes.As an example, consider the Tamil word ?thA-ma-rai?
(lotus) that fits the pattern NKN.
Suppose nowords that match the pattern NKN was present inthe corpus and other close patterns were opted for,we get:Pat.
Word Meaning MatchKKN tha-va-Lai Frog No matchNKM thA-ba-m Longing No matchNNN kO-sA-lai Cow Hut Close MatchNMN pA-p-pA Child No matchTable 1.
Alternative patterns for ?NKN?None of the above words can be used in the placeof ?thA-ma-rai?, a good fit for a NKN pattern, asthey don?t phonetically match (except for a close-but-not-exact ?kO-sA-lai?)
and hence cannot beused as part of the lyric without affecting the in-tended melody.2.2 Ungrammatical or meaningless genera-tionThe Sentence Generation algorithm was based onthe n-Gram model built from a text corpus.
Giventhat n-Gram based generation schemes have in-built bias towards shorter strings, it can end-upgenerating meaningless and ungrammatical sen-tences.
As observed in (Ananth et.al., 2009), wecan get sentences such as:(* avan-He-3sm  nadandhu-walk sendrAlY-3sf)(He reached by walking)Here, the subject avan (He), which is a 3rd person,singular, masculine noun, does not agree with theverb sendrAlY , which is 3rd person, singular, femi-nine.
Thus, the noun and the verb do not agree onthe gender.
The correct sentence should be:(avan-3sm nadandhu sendrAn-3sm)This is happening because the bi-gram score forcould be greater than.Similar disagreements can happen for other aspectssuch as person or number.
Though performing ajoint probability across words would help in reduc-ing such errors, it would slow down the generationprocess.In addition to the above ungrammatical generationproblem, the system can also generate meaninglesssentences.
Though, some of them can be consi-dered as a poetic license, most of them were justnon-sensical.
For example, consider the followingsentence generated by the n-Gram sentence genera-tion system:(adhu-that idhu-this en-my)(that this my)The above sentence does not convey any coherentmeaning.2.3 Ability to control theme/choice of wordsGiven the nature of the Sentence generation algo-rithm, it is not possible for the program to hand-pick specific words and phrases.
That is, the wholegeneration process is guided by the probabilityvalues and hence it is not possible to bias the algo-rithm to produce utterances belonging to a particu-lar theme.In the subsequent sections, we explain the alterna-tive approaches to tackle the above limitations.323 Closest Syllable PatternsThe existing approach uses the KNM Notation forrepresenting all words in the language.
This pho-netic representation is at the most basic level, i.e.,alphabets, and hence can be used to represent allwords in the language.
The KNM notation is gen-erated by the melody analyzer and is used through-out the system for generating sentences.
Thoughthis representation scheme is at the most basic lev-el, it does not help in cases where we are lookingfor alternate or close matches.
Thus, we need tocome up with a representation scheme at a higherlevel of abstraction that will help us in providingvalid choices without compromising the require-ments of the melody.
To this end, we hereby pro-pose to use elements from classic poetry metricrules in Tamil Grammar (Bala et.
al., 2003) as de-fined in the oldest Tamil Grammar work, Tholkap-piyam (Tholkappiyar, 5th Century B.C.
).3.1 Meter in classical Tamil PoetryMeter is the basic rhythmic structure of a verse andthe basic term that refers to Tamil meter is pA.Each line in the poem is called an adi, which, inturn, is made up of a certain number of metricalfeet known as the ceer (words/tokens).
Each ceeris composed of a certain metrical units called asai(syllables) which are made up of letters (vowelsand consonants) that have certain intrinsiclength/duration, known as mAthirai.
The aboveentities are known as the core structural compo-nents of a Tamil poem (Rajam, 1992)The basic metrical unit asai is mostly based onvowel length.
There are two basic types of asai:nEr asai (straightness) and niRai asai (in a row;array).
The nEr asai has the pattern (C)V(C)(C)and niRai asai, (C)VCV(C)(C).
These longest-matching basic asai patterns are expanded torepresent non-monosyllabic words, but for ourneeds, we use these two basic asai patterns for thenew representation scheme.3.2 asai-based Representation SchemeIn the new representation scheme, the constituentsof the KNM representation scheme are convertedto nEr or niRai asai before being sent to the Sen-tence Generator module.
The Sentence Generatormodule, in turn, makes use of this new representa-tion scheme for picking words as well as for find-ing alternatives.
In this new representation scheme,a nEr asai is represented as Ne and a niRai asai isrepresented as Ni.The following table illustrates the mapping re-quired for converting between the two representa-tion schemes:KNM Representation asai representationK NeKM(0?.2) NeN NeNM(0?2) NeKK NiKKM(0?2) NiKN NiKNM(0?2) NiTable 2.
KNM to asai representationFor example, an output line such as, for example,?KK  KK  KKK?
in the old representation schemewill be converted as ?Ni  Ni  NiNe?
in the new re-presentation based on asai.
This means that theline should contain three ceer(words/tokens) andthe first word should be a nirai asai, second wordshould be a nirai asai and the third word containstwo syllables with a nirai asai followed by nErasai.This new representation scheme helps in comingup with alternatives without affecting the metricalneeds of the melody as the alternatives have thesame mAthirai (length/duration).
Thus, if we aregiven a pattern such as ?NiNe?, we have severalvalid choices such as ?KKK?
(originally given),?KKMK?, ?KKMKM?, ?KKN?, ?KKMN?
and?KKMNM?.
We can use words that match any ofthe above patterns without compromising the dura-tion imposed by the original music note.
This wayof choosing alternatives is much better than usingthe Edit Distance algorithm as it is based on theoriginal meter requirements as against matchingstring patterns.To use the previous example of ?thA-ma-rai?
(lo-tus) (NKN) in this new representation scheme, weget, ?NeNi?
and all the following words willmatch:33Word KNM schemenE-ra-lai (straight wave) NKNSa-nj-nja-la-m (doubt) KMKKMMa-ng-ka-la-m (auspicious) KMKKMa-m-bi-kai (goddess) KMKNvE-ng-ka-ta-m (Venkatam ?
aname)NMKKMTable 3.
NKN alternatives using asai representationThe above (valid) choices such as KMKKM,NMKKM, etc.
are not possible with just using theEdit Distance algorithm.
Thus, the architecture ofthe system now consists of a new component forthis conversion (Figure 1)Figure 1.
System Approach with new ASAI converter4 Knowledge-based Sentence GenerationThe goal of the Sentence Generation module is togenerate sentences matching the input pattern giv-en in the new asai representation scheme.
The ex-isting system generated sentences based on the n-Gram language model created from a text corpusof poems and film songs.
However, as explainedearlier, this can result in ungrammatical or mea-ningless sentences being generated.
In order toovercome this limitation, the Sentence Generationmodule is completely overhauled using a know-ledge-based approach.
A Tamil Morphology gene-rator component, built in-house, is used to generategrammatically correct sentences from this know-ledge base.4.1 Knowledge BaseThe knowledge base consists of: (a) set of verbsalong with their selectional restriction rules (b)hand-coded sub-categorization Ontology withnouns and (c) list of adjectives and adverbs learnedfrom a text corpus.4.1.1 Verbs and Selectional RestrictionsSelectional restriction is defined as the right of theverb to select its arguments.
Verb is the nucleus ofa sentence and has the nature of choosing its argu-ments.
Any particular verb can take its argumentsonly according to its selectional restriction con-straints.
When these constraints are violated, themeaning of the sentence is affected.
This violationof selectional restriction rules may lead to semanti-cally wrong sentences or figurative usages.
Cor-rectness of a sentence not only depends on the syn-tactic correctness, but also with the semantic inter-pretation of the sentence.4.1.2 Syntactic ClassificationVerbs can be broadly classified into three divi-sions, viz., monadic, dyadic and triadic verbs.Monadic verbs can have only one argument - thesubject.
Dyadic verbs can have two arguments -subject and object.
Triadic verbs can take threearguments - subject, direct and indirect objects.But there is no strict rule that the triadic verbsshould have all three arguments or the dyadic verbsshould have the two arguments filled.
There can beoverlaps between these groups of verbs.
Triadicverb can drop the indirect object and have a Prepo-sitional Phrase (PP) attached with the sentence.Dyadic verb can drop the object and still give avalid sentence.
The verbs are grouped according tothe sub-categorization information of the subjectand object nouns.
The sub-categorization featuresare explained in the following section.
At present,we are using only Monadic and Dyadic verbs forour sentence generation purposes.4.1.3 Sub-CategorizationSub-categorization features explain the nature ofthe noun.
The subject and object nouns are ana-34lyzed using these features.
These features may in-clude the type of noun, its characteristics, state etc.Sub-categorization information includes the fea-tures such as [?animate], [?concrete], [?edible]etc.Some of the features and the meanings are listedbelow:[+animate] All animals, human beings[+human] All human beings[+female] Animals/human beings offeminine gender[+solid] Things that are in solid state[+vehicle] All vehicles[+concrete] Things that physically exist[-concrete] Things that do not physicallyexist[+edible] Things that can be eaten[-edible] Things that cannot be eaten[+movable] Things that are movable[-movable] Things that are not movableTable 4.
Sub-categorization Features4.1.4 Ontology of NounsThe sub-categorization features are used in theformulation of general Ontology of Nouns.
It ismade with respect to the usage of language.
TheOntology that is developed has the following sa-lient features:?
It is a language-based Ontology originallydeveloped for English and has been cus-tomized for Tamil?
Nodes in the Ontology are the actual sub-categorization features of Nouns?
It is made according to the use of nouns inthe Tamil language?
Each node will have a list of nouns as en-tries for that nodeThe complete Ontology can be found in (Arulmoz-hi, et.
al., 2006)4.1.5 Contents of Knowledge BaseAt present, the knowledge-base consists of 116unique verbs, 373 selectional restriction rules and771 Nouns in the Ontology.The verbs list includes both cognitive as well asnon-cognitive verbs.
Examples of verbs includepAr (to see), kelY (to listen), vA (to come), thEtu(to search), piti (to catch), po (to go), kal (to learn),etc.The selectional restriction rules are stored as fol-lows:Verb=>subject_category;subject_case=>object_category;object_case.When a verb does not take any object, the keyword[no_obj] is used to denote the same.
In addition tothe subject and object categories, the rule also con-tains the appropriate case markers to be used forthe subject and object nouns.
This additional in-formation is stored for use by the Morph Genera-tion component.Some examples of selectional restriction rules aregiven below:pAr=>[+living,+animate,+vertebrate,+mammal,+human];NOM=>[no_obj]pAr=>[+living,+animate,+vertebrate,+mammal,+human];NOM=>[+living,+animate,+vertebrate,+mammal,+human];ACCpi-ti=>[+living,+animate,+vertebrate,+mammal,+human];NOM=>[living,+concrete,+movable,+artifact,+solid,+instrument,-vehicle,+implements];NOMpi-ti=>[+living,+animate,+vertebrate,+mammal,+human];NOM=>[no_obj]Here, ACC, NOM, DAT, etc.
denote the case mark-ers to be used for the subject and object nouns.The 771 Nouns are stored across several files ac-cording to their position in the Ontology.
An On-tology map is used to determine the list of nounspresent in a particular node position.354.1.6 Adjectives and AdverbsIn addition to the verbs and nouns mentionedabove, the knowledge-base also contains a list ofadjective-noun and adverb-verb bi-grams learntfrom a text corpus.
This information is used toaugment the Sentence Generator with words fromthese POS categories.4.2 Tamil Morphological GeneratorTamil is a densely agglutinative language and dis-plays a unique structural formation of words by theaddition of suffixes representing various senses orgrammatical categories, to the roots or stems.
Thesenses such as person, number, gender and case arelinked to a noun root in an orderly fashion.
Theverbal categories such as transitive, causative,tense and person, number and gender are added toa verbal root or stem.
Thus, with the given know-ledge-base and a Tamil Morphological generatorcomponent one can generate grammatically correctsentences.We use the Tamil Morphological Generator com-ponent (Menaka et.
al., 2010) to generate inflec-tions of subject/object nouns with appropriatenumber & case and the verbs with person, numberand gender suffixes.4.3 Sentence GenerationGiven a line in asai representation scheme, thesentence generation module is responsible for ge-nerating a grammatically correct and meaningfulsentence matching the given asai scheme.
Itachieves the same by using the knowledge-basealong with the Tamil Morphology Generator com-ponent (Figure 2).
In addition to the asai represen-tation, the module also accepts the tense in whichthe sentence must be written.
The rest of the para-meters such as person, gender and case are auto-matically deduced by the module.Figure 2.
Sentence Generator moduleThe algorithm for generating a matching sentenceis as follows:1.
Pick a selectional restriction rule, R in random2.
For each noun, SUB_N in subject_category ofrule, R:2.1 Guess the gender for SUB_N based on sub-ject_category2.2 For each noun, OBJ_N in object_category:2.2.1 Use Morphology Generator componentto get morphed nouns & verbs based on tense, per-son, gender and case.2.2.2 Generate sentences of the form [SUB_N][OBJ_N] [VERB]2.2.3 Add adjectives or adverbs, if needed2.2.4 Repeat words, if needed2.2.4 Add to list of sentences generated3.
Check the list of sentences against the asai pat-tern.
If matches, return sentence.
Otherwise, go tostep 1.Table 5.
Sentence Generation Algorithm36Details about steps such as matching against asaipattern, gender identification, word repetition andadding adjectives/adverbs are explained below.4.3.1 Matching against asai patternThe list of sentences generated from the moduleare compared against the given asai pattern.
Thematching could either be an exact match or a re-ordered match.
That is, since Tamil is a relativelyfree word-order language, the generated sentencecan also be re-ordered, if required, to match thegiven asai pattern.
However, when adjectives oradverbs are added to the sentence, they need tomaintain their position in front of the noun or verbrespectively and hence they are not re-ordered.
Fornow, we do not weight the sentences and hencereturn the first matching sentence.4.3.2 Gender IdentificationAs noted in the algorithm, the gender needs to beautomatically guessed.
In Tamil, the gender of thesubject is denoted by the appropriate suffix in theverb.
If a personal pro-noun such as nAnY (I) or nI(you) is used as subject, then any of masculine orfeminine gender can be used without affecting thegrammatical correctness of the verb.
In this case,the program uses the default value of masculinegender.
If the subject is not a personal pronoun, thegender for the verb is guessed based on the sub-ject_category of the subject noun.
If the sub-ject_category explicitly mentions [+human,+living, +female,?
], then feminine gender is re-turned.
If the subject_category explicitly mentions[+human, +living, -female,?
], then masculinegender is returned.
Otherwise, if [+human,+living,?]
is present, but there is no explicit men-tion of +female or ?female, it defaults to honorificsuffix.
In all other cases, neuter gender is returned.4.3.3 Adding adjectives and adverbsThe Sentence Generator module using the selec-tional restriction rules can only create sentences ofthe form ?
[subject] [object] [verb]?.
However,typical lyrics will not always contain just threeword sentences and thus, the ability to put morewords in a sentence generated by our system isrequired.
In such cases, a look-up list of adjectivesand adverbs is used for filling the additional wordsrequired by the syllable pattern.
This look-up list isgenerated from a POS-tagged text corpus fromwhich the list of adjective-noun, adverb-verb bi-grams are added to the look-up list.
Whenever asentence needs more than three words, this look-uplist is consulted to generate sentences that add therelevant adjectives to subject or object nouns andrelevant adverbs before the verb.
Each possiblecombination of such sentences is generated andadded to the list of sentences.4.3.4 Word repetitionAn additional approach to handle lines with morethan three words is to repeat certain words alreadypresent in the ?
[subject] [object] [verb]?
output.
Ifan adjective or adverb is already added to the sen-tence, then preference for repetition is given to theadjective/adverb subject to the constraints of theinput asai scheme.
Otherwise, the verb is chosenfor repetition.
Finally, the subject and object nounsare considered.5 ExperimentsThe goal of the experiment was to validate whetherthe sentences generated using the Knowledge-based approach are more grammatical and mea-ningful than the n-Gram approach.
In order to testthis hypothesis, a set of 10 syllable patterns wasgiven to the old n-Gram system and 30 sentenceswere generated from them.
The new knowledge-based approach was also given the syllable patternsand the resulting 32 sentences were collected.
Inorder to avoid any bias, these 62 sentences wereinterleaved in a single document and this documentwas given to five human evaluators for scoringeach sentence.
The scoring methodology is as fol-lows:Score Meaning1 Incorrect2 Grammatically perfect, but no mean-ing at all3 Grammatically correct but only par-tially meaningful4 Both Grammar and Meaning are onlypartially correct5 PerfectTable 6.
Scoring methodologyBased on the scores given by the human evalua-tors, the sentences generated using the n-Gram ap-37proach scored an average of 2.06, whereas the sen-tences generated using the knowledge-based ap-proach scored an average of 4.13.
This clearly de-monstrates that the new approach results in consis-tently more grammatical and meaningful sen-tences.A break-down of statistics based on the scores giv-en by each evaluator is given below (Table 7):E-1 E-2 E-3 E-4 E-5Avg.
Score(KB)*4.5 4.38 4.06 4.09 3.63Avg.
Score (n-G) *2.37 1 3.3 2.13 1.5# Sentencesscoring 5 (KB)25 25 23 20 14# Sentencesscoring 5 (n-G)6 0 14 1 0# Sentencesscoring 1 (KB)2 0 7 4 7# Sentencesscoring 1 (n-G)16 30 11 19 25Table 7.
Detailed Statistics*KB = Knowledge-based approach and n-G = n-Gram based approach.A subset of syllable patterns given to the systemand the sentences generated by the system are giv-en below:Input NM KKMKMKMKKMNMIntermediate Form Ne NiNeNeNe NeNeSentences(nAm-we arangathukku-stadium  vanthOm-came)(We came to the stadium)(nee-You siraichAlaikku-prison vanthAi-came)(You came to the prison)Input NN KKNN NMNMIntermediate Form NeNe NiNeNe NeNeSentences(* rAjA-King  nadanathai-dance  kEttAr-listen)(The King listened to the dance)(neengal-You  piditheergal-caught  kaiyai-hand)(You caught the hand)Here, the sentence ?rAjA-King  nadanathai-dancekEttAr-listened?
(The King listened to the dance) isgenerated due to the fact that the noun dance istaken from the Ontology node ?content?
that alsocontains nouns for music, drama, etc.
for which theverb listen matches perfectly.
Thus, this semanti-cally meaningless sentence is generated due to thepresent sub-categorization levels of the nouns On-tology.
In addition to this, Ontology based genera-tion can also create semantically meaningless sen-tences when a verb has more than one sense andthe appropriate sense is not taken into considera-tion.The next sentence ?neengal-You  piditheergal-caught  kaiyai-hand?
(You caught the hand) is anexample of a sentence in which the verb and objectnoun were re-ordered to match the input pattern.6 Limitations and Future WorkFrom the initial set of experiments, we see that theknowledge-based approach results in generatinggrammatically correct and mostly meaningful sen-tences.
Also, unlike the Edit Distance algorithm,the new asai representation scheme consistentlyprovides valid choices and alternatives for syllablepatterns, thus resulting in better coverage.We are also currently working on introducing co-hesion across multiple lines of the verse by (a)grouping related verbs, (b) using semantically re-lated verbs (such as Synonym, Antonym, Hy-ponym, etc.)
from previous sentences and (c) pick-ing rules that can result in using the same subjector object.The main drawback of the current knowledge-based approach is the lack of poetic sentences andhence the poetic aspect of the verse needs im-provement.
Although we attempt to introducestructural poeticness by rhyme and repetition, thecontent aspect of the poem remains a bottleneckgiven our approach of using selectional restrictionrules that does not lend well for figurative sen-tences.38ReferencesAnanth Ramakrishnan, Sankar Kuppan, and Sobha Lali-tha Devi.
2009.
Automatic Generation of Tamil Lyr-ics for Melodies.
Proceedings of the Workshop onComputational Approaches to Linguistic Creativity,CALC'09, Boulder, Colorado:40-46.Arulmozhi P, Sobha.
L. 2006.
Semantic Tagging forLanguage Processing.
34th All India conference forDravidian Linguistics (June 22-24, 2006), Trivan-drum, India.Bala Sundara Raman L, Ishwar S, and Sanjeeth KumarRavindranath.
2003.
Context Free Grammar for Nat-ural Language Constructs ?
An implementation forVenpa Class of Tamil Poetry.
6th International TamilInternet Conference and Exhibition, Tamil Internet2003 (August 22-24, 2003), Chennai, India.Guido Gonzato.
2003.
The ABCPlus Projecthttp://abcplus.sourceforge.net.Hisar Maruli Manurung.
2004.
An evolutionary ap-proach to poetry generation.
Ph.D. Thesis, Universi-ty of Edinburg.Menaka S, Vijay Sundar Ram, and Sobha Lalitha Devi.2010.
Morphological Generator for Tamil.
Proceed-ings of the Knowledge Sharing event on Morpholog-ical Analysers and Generators (March 22-23, 2010),LDC-IL, Mysore, India:82-96.Rajam V.S.
1992.
A Reference Grammar of ClassicalTamil Poetry (150 B.C.-pre-5th/6th century A.D.).Memoirs of the American Philosophical Society,Philadelphia: 113-240.Tholkaappiyar.
5th Century B.C.
Tholkaapiyam -http://www.tamil.net/projectmadurai/pub/pm0100/tolkap.pdf.39
