Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 121?130,Singapore, 6-7 August 2009. c?2009 ACL and AFNLPA Rich Feature Vector for Protein-Protein Interaction Extraction fromMultiple CorporaMakoto Miwa1 Rune S?tre1 Yusuke Miyao1 Jun?ichi Tsujii1,2,31Department of Computer Science, the University of Tokyo, JapanHongo 7-3-1, Bunkyo-ku, Tokyo, Japan.2School of Computer Science, University of Manchester, UK3National Center for Text Mining, UK{mmiwa,rune.saetre,yusuke,tsujii}@is.s.u-tokyo.ac.jpAbstractBecause of the importance of protein-protein interaction (PPI) extraction fromtext, many corpora have been proposedwith slightly differing definitions of pro-teins and PPI.
Since no single corpus islarge enough to saturate a machine learn-ing system, it is necessary to learn frommultiple different corpora.
In this paper,we propose a solution to this challenge.We designed a rich feature vector, and weapplied a support vector machine modi-fied for corpus weighting (SVM-CW) tocomplete the task of multiple corpora PPIextraction.
The rich feature vector, madefrom multiple useful kernels, is used toexpress the important information for PPIextraction, and the system with our fea-ture vector was shown to be both fasterand more accurate than the original kernel-based system, even when using just a sin-gle corpus.
SVM-CW learns from one cor-pus, while using other corpora for support.SVM-CW is simple, but it is more effec-tive than other methods that have been suc-cessfully applied to other NLP tasks ear-lier.
With the feature vector and SVM-CW, our system achieved the best perfor-mance among all state-of-the-art PPI ex-traction systems reported so far.1 IntroductionThe performance of an information extraction pro-gram is highly dependent on various factors, in-cluding text types (abstracts, complete articles, re-ports, etc.
), exact definitions of the information tobe extracted, shared sub-topics of the text collec-tions from which information is to be extracted.Even if two corpora are annotated in terms of thesame type of information by two groups, the per-formance of a program trained by one corpus isunlikely to be reproduced in the other corpus.
Onthe other hand, from a practical point of view, it isworth while to effectively use multiple existing an-notated corpora together, because it is very costlyto make new annotations.One problem with several different corpora isprotein-protein interaction (PPI) extraction fromtext.
While PPIs play a critical role in un-derstanding the working of cells in diverse bio-logical contexts, the manual construction of PPIdatabases such as BIND, DIP, HPRD, IntAct, andMINT (Mathivanan et al, 2006) is known to bevery time-consuming and labor-intensive.
The au-tomatic extraction of PPI from published papershas therefore been a major research topic in Natu-ral Language Processing for Biology (BioNLP).Among several PPI extraction task settings, themost common is sentence-based, pair-wise PPI ex-traction.
At least four annotated corpora have beenprovided for this setting: AIMed (Bunescu et al,2005), HPRD50 (Fundel et al, 2006), IEPA (Dinget al, 2002), and LLL (Ne?dellec, 2005).
Each ofthese corpora have been used as the standard cor-pus for training and testing PPI programs.
More-over, several corpora are annotated for more typesof events than just for PPI.
Such examples includeBioInfer (Pyysalo et al, 2007), and GENIA (Kimet al, 2008a), and they can be reorganized into PPIcorpora.
Even though all of these corpora weremade for PPI extraction, they were constructedbased on different definitions of proteins and PPI,which reflect different biological research inter-ests (Pyysalo et al, 2008).Research on PPI extraction so far has revealedthat the performance on each of the corpora could121benefit from additional examples (Airola et al,2008).
Learning from multiple annotated cor-pora could lead to better PPI extraction perfor-mance.
Various research paradigms such as induc-tive transfer learning (ITL) and domain adaptation(DA) have mainly focused on how to effectivelyuse corpora annotated by other groups, by reduc-ing the incompatibilities (Pan and Yang, 2008).In this paper, we propose the extraction of PPIsfrom multiple different corpora.
We design a richfeature vector, and as an ITL method, we ap-ply a support vector machine (SVM) modified forcorpus weighting (SVM-CW) (Schweikert et al,2008), in order to evaluate the use of multiple cor-pora for the PPI extraction task.
Our rich featurevector is made from multiple useful kernels, eachof which is based on multiple parser inputs, pro-posed by Miwa et al (2008).
The system with ourfeature vector was better than or at least compa-rable to the state-of-the-art PPI extraction systemson every corpus.
The system is a good startingpoint to use the multiple corpora.
Using one of thecorpora as the target corpus, SVM-CW weightsthe remaining corpora (we call them the sourcecorpora) with ?goodness?
for training on the tar-get corpus.
While SVM-CW is simple, we showthat SVM-CW can improve the performance of thesystem more effectively and more efficiently thanother methods proven to be successful in otherNLP tasks earlier.
As a result, SVM-CW with ourfeature vector is comprised of a PPI system withfive different models, of which each model is su-perior to the best model in the original PPI extrac-tion task, which used only the single corpus.2 Related WorksWhile sentence-based, pair-wise PPI extractionwas initially tackled by using simple methodsbased on co-occurrences, lately, more sophisti-cated machine learning systems augmented byNLP techniques have been applied (Bunescu et al,2005).
The task has been tackled as a classifica-tion problem.
To pull out useful information fromNLP tools including taggers and parsers, severalkernels have been applied to calculate the similar-ity between PPI pairs.
Miwa et al (2008) recentlyproposed the use of multiple kernels using multi-ple parsers.
This outperformed other systems onthe AIMed, which is the most frequently used cor-pus for the PPI extraction task, by a wide margin.To improve the performance using externalClassificationResultTrainingDataFeaturevectorRaw TextsParsersClassifierTestDataRaw TextsModelPair InformationPair InformationLabelFigure 1: Overview of our PPI extraction systemtraining data, many ITL and DA methods havebeen proposed.
Most of ITL methods assume thatthe feature space is same, and that the labels maybe different in only some examples, while most ofDA methods assume that the labels are the same,and that the feature space is different.
Among themethods, we use adaptive SVM (aSVM) (Yang etal., 2007), singular value decomposition (SVD)based alternating structure optimization (SVD-ASO) (Ando et al, 2005), and transfer AdaBoost(TrAdaBoost) (Dai et al, 2007) to compare withSVM-CW.
We do not use semi-supervised learn-ing (SSL) methods, because it would be consid-erably costly to generate enough clean unlabeleddata needed for SSL (Erkan et al, 2007).
aSVMis seen as a promising DA method among sev-eral modifications of SVM including SVM-CW.aSVM tries to find a model that is close to the onemade from other classification problems.
SVD-ASO is one of the most successful SSL, DA, ormulti-task learning methods in NLP.
The methodtries to find an additional useful feature space bysolving auxiliary problems that are close to the tar-get problem.
With well-designed auxiliary prob-lems, the method has been applied to text clas-sification, text chunking, and word sense disam-biguation (Ando, 2006).
The method was reportedto perform better than or comparable to the beststate-of-the-art systems in all of these tasks.
TrAd-aBoost was proposed as an ITL method.
In train-ing, the method reduces the effect of incompatibleexamples by decreasing their weights, and therebytries to use useful examples from source corpora.The method has been applied to text classifica-tion, and the reported performance was better thanSVM and transductive SVM (Dai et al, 2007).3 PPI Extraction SystemThe target task of our system is a sentence-based,pair-wise PPI extraction.
It is formulated as a clas-sification problem that judges whether a given pair122XPGp1 protein interacts with multiple subunits ofTFIIHprot and with CSBp2 protein.Figure 2: A sentence including an interacting pro-tein pair (p1, p2).
(AIMed PMID 8652557, 9thsentence, 3rd pair)BOWv-walkse-walksGraph BOWv-walkse-walksGraphNormalizationParsersKSDEPEnjua sentence including a pairfeature vectorBOW Graph BOWv-walkse-walksGraphv-walkse-walksFigure 3: Extraction of a feature vector from thetarget sentenceof proteins in a sentence is interacting or not.
Fig-ure 2 shows an example of a sentence in which thegiven pair (p1 and p2) actually interacts.Figure 1 shows the overview of the proposedPPI extraction system.
As a classifier using a sin-gle corpus, we use the 2-norm soft-margin lin-ear SVM (L2-SVM) classifier, with the dual co-ordinate decent (DCD) method, by Hsieh et al(2008).
In this section, we explain the two mainfeatures: the feature vector, and the corpus weight-ing method for multiple corpora.3.1 Feature VectorWe propose a feature vector with three types offeatures, corresponding to the three different ker-nels, which were each combined with the twoparsers: the Enju 2.3.0, and KSDEP beta 1 (Miyaoet al, 2008); this feature vector is used because thekernels with these parsers were shown to be effec-tive for PPI extraction by Miwa et al (2008), andbecause it is important to start from a good per-formance single corpus system.
Both parsers wereretrained using the GENIA Treebank corpus pro-vided by Kim et al (2003).
By using our linearfeature vector, we can perform calculations fasterby using fast linear classifiers like L2-SVM, andwe also obtain a more accurate extraction, than byusing the original kernel method.Figure 3 summarizes the way in which the fea-ture vector is constructed.
The system extractsBag-of-Words (BOW), shortest path (SP), andgraph features from the output of two parsers.
ThePROT M:1, and M:1, interact M:1, multiple M:1,of M:1, protein M:1, subunit M:1, with M:2, pro-tein A:1Figure 4: Bag-of-Words features of the pair in Fig-ure 2 with their positions (B:Before, M:in the Mid-dle of, A:After) and frequencies.NMOD SBJrNMODENTITY1 protein interact ENTITY2protein proteinENTITY1 protein interacts with multiple and with ENTITY2 protein .NMOD SBJCOODCOORDNMODPMODNMOD SBJrNMODprotein interact proteinSBJ rCOODrPMODV-walksE-walks????????
?Figure 5: Vertex walks, edge walks in the uppershortest path between the proteins in the parse treeby KSDEP.
The walks and their subsets are usedas the shortest path features of the pair in Figure 2.output is grouped according to the feature-typeand parser, and each group of features is separatelynormalized by the L2-norm1.
Finally, all valuesare put into a single feature vector, and the wholefeature vector is then also normalized by the L2-norm.
The features are constructed by using pred-icate argument structures (PAS) from Enju, and byusing the dependency trees from KSDEP.3.1.1 Bag-of-Words (BOW) FeaturesThe BOW feature includes the lemma form of aword, its relative position to the target pair of pro-teins (Before, Middle, After), and its frequency inthe target sentence.
BOW features form the BOWkernel in the original kernel method.
BOW fea-tures for the pair in Figure 2 are shown in Figure 4.3.1.2 Shortest Path (SP) FeaturesSP features include vertex walks (v-walks), edgewalks (e-walks), and their subsets (Kim et al,2008b) on the target pair in a parse structure, andrepresent the connection between the pair.
Thefeatures are the subsets of the tree kernels on theshortest path (S?tre et al, 2007).
Figure 5 illus-trates the shortest path between the pair in Fig-ure 2, and its v-walks and e-walks extracted fromthe shortest path in the parse tree by KSDEP.
Av-walk includes two lemmas and their link, while1The vector normalized by the L2-norm is also called aunit vector.123an e-walk includes a lemma and its two links.
Thelinks indicates the predicate argument relations forPAS, and the dependencies for dependency trees.3.1.3 Graph FeaturesGraph features are made from the all-paths graphkernel proposed by Airola et al (2008).
The ker-nel represents the target pair using graph matricesbased on two subgraphs, and the graph features areall the non-zero elements in the graph matrices.The two subgraphs are a parse structure sub-graph (PSS) and a linear order subgraph (LOS).Figure 6 describes the subgraphs of the sentenceparsed by KSDEP in Figure 2.
PSS represents theparse structure of a sentence.
PSS has word ver-tices or link vertices.
A word vertex contains itslemma and its part-of-speech (POS), while a linkvertex contains its link.
Additionally, both typesof vertices contain their positions relative to theshortest path.
The ?IP?s in the vertices on theshortest path represent the positions, and the ver-tices are differentiated from the other vertices like?P?, ?CC?, and ?and:CC?
in Figure 6.
LOS repre-sents the word sequence in the sentence.
LOS hasword vertices, each of which contains its lemma,its relative position to the target pair, and its POS.Each subgraph is represented by a graph matrixG as follows:G = LT?
?n=1AnL, (1)where L is a N?L label matrix, A is an N?Nedge matrix, N represents the number of vertices,and L represents the number of labels.
The la-bel of a vertex includes all information describedabove (e.g.
?ENTITY1:NN:IP?
in Figure 6).
Iftwo vertices have exactly same information, thelabels will be same.
G can be calculated effi-ciently by using the Neumann Series (Airola et al,2008).
The label matrix represents the correspon-dence between labels and vertices.
Lijis 1 if thei-th vertex corresponds to the j-th label, and 0 oth-erwise.
The edge matrix represents the connectionbetween the pairs of vertices.
Aijis a weight wij(0.9 or 0.3 in Figure 6 (Airola et al, 2008)) if thei-th vertex is connected to the j-th vertex, and 0otherwise.
By this calculation, Gijrepresent thesum of the weights of all paths between the i-thlabel and the j-th label.A B H I Lpositive 1,000 2,534 163 335 164all 5,834 9,653 433 817 330Table 1: The sizes of used PPI corpora.
A:AIMed,B:BioInfer, H:HPRD50, I:IEPA, and L:LLL.50607080901000 20 40 60 80 100% examplesAImed (F)BioInfer (F)AImed (AUC)BioInfer (AUC)Figure 7: Learning curves on two large corpora.The x-axis is related to the percentage of the ex-amples in a corpus.
The curves are obtained by a10-fold CV with a random split.3.2 Corpus Weighting for Mixing CorporaTable 1 shows the sizes of the PPI corpora that weused.
Their widely-ranged differences includingthe sizes were manually analyzed by Pyysalo etal.
(2008).
While AIMed, HPRD50, IEPA, andLLL were all annotated as PPI corpora, BioInfer inits original form contains much more fine-grainedinformation than does just the PPI.
BioInfer wastransformed into a PPI corpus by a program, somaking it the largest of the five.
Among them,AIMed alone was created by annotating whole ab-stracts, while the other corpora were made by an-notating single sentences selected from abstracts.Figure 7 shows the learning curves on two largecorpora: AIMed and BioInfer.
The curves areobtained by performing a 10-fold cross valida-tion (CV) on each corpus, with random splits, us-ing our system.
The curves show that the perfor-mances can benefit from the additional examples.To get a better PPI extraction system for a chosentarget, we need to draw useful shared informationfrom external source corpora.
We refer to exam-ples in the source corpora as ?source examples?,and examples in a target corpus as ?target exam-ples?.
Among the corpora, we assume that the la-bels in some examples are incompatible, and thattheir distributions are also different, but that thefeature space is shared.In order to draw useful information from thesource corpora to get a better model for the target124ENTITY1NNIPproteinNNIPinteractVBZIPwithINIPmultipleJJsubunitNNSofINPROTNNandCCwithINIPENTITY2NNIPproteinNNIP..NMODIPSBJIPCOODIPPMODNMOD NMODPMODCCCOORDIPNMODIPPMODIPPENTITY1NNproteinNNMinteractVBZMwithINMmultipleJJMsubunitNNSMofINMPROTNNMandCCMwithINMENTITY2NNproteinNNA..0.9,            0.3IP: In shortest Path, B:Before, M:in the Middle of, A:AfterFigure 6: Parse structure subgraph and linear order subgraph to extract graph features of the pair inFigure 2.
The parse structure subgraph is from the parse tree by KSDEP.corpus, we use SVM-CW, which has been usedas a DA method.
Given a set of instance-labelpairs (xi, yi), i = 1, .
.
., ls + lt, xi?Rn, andyi?
{?1,+1}, we solve the following problem:minw12wTw + Csls?i=1`i+ Ctls+lt?i=ls+1`i, (2)where w is a weight vector, ` is a loss function,and ls and lt are the numbers of source and targetexamples respectively.
Cs?
0 and Ct?
0 arepenalty parameters.
We use a squared hinge loss`i= max(0, 1?
yiwTxi)2.
Here, the source cor-pora are treated as one corpus.
The problem, ex-cluding the second term, is equal to L2-SVM.
Theproblem can be solved using the DCD method.As an ITL method, SVM-CW weights each cor-pus, and tries to benefit from the source corpora,by adjusting the effect of their compatibility andincompatibility.
For the adjustment, these penaltyparameters should be set properly.
Since we areunaware of the widely ranged differences amongthe corpora, we empirically estimated them byperforming 10-fold CV on the training data.4 Evaluation4.1 Evaluation SettingsWe used five corpora for evaluation: AIMed,BioInfer, HPRD50, IEPA, and LLL.
For the com-parison with other methods, we report the F-score (%), and the area under the receiver op-erating characteristic (ROC) curve (AUC) (%)using (abstract-wise) a 10-fold CV and a one-answer-per-occurrence criterion.
These measuresare commonly used for the PPI extraction tasks.The F-score is a harmonic mean of Precision andRecall.
The ROC curve is a plot of a true posi-tive rate (TPR) vs a false positive rate (FPR) fordifferent thresholds.
We tuned the regularizationparameters of all classifiers by performing a 10-fold CV on the training data using a random split.The other parameters were fixed, and we report thehighest of the macro-averaged F-scores as our fi-nal F-score.
For 10-fold CV, we split the corporaas recommended by Airola et al (2008).4.2 PPI Extraction on a Single CorpusIn this section, we evaluate our system on a singlecorpus, in order to evaluate our feature vector andto justify the use of the following modules: nor-malization methods and classification methods.First, we compare our preprocessing methodwith other preprocessing methods to confirm howour preprocessing method improves the perfor-mance.
Our method produced 64.2% in F-scoreusing L2-SVM on AIMed.
Scaling all features in-dividually to have a maximal absolute value of 1,produced only 44.2% in the F-score, while nor-malizing the feature vector by L2-norm produced61.5% in the F-score.
Both methods were inferiorto our method, because the values of features inthe same group should be treated together, and be-cause the values of features in the different groupsshould not have a big discrepancy.
Weighting each125L2 L1 LR AP CWF 64.2 64.0 64.2 62.7 63.0AUC 89.1 88.8 89.0 88.5 87.8Table 2: Classification performance on AIMed us-ing five different linear classifiers.
The F-score (F)and Area Under the ROC curve (AUC) are shown.L2 is L2-SVM, L1 is L1-SVM, LR is logistic re-gression, AP is averaged perceptron, and CW isconfidence weighted linear classification.group with different values can produce better re-sults, as will be explored in our future work.Next, using our feature vector, we appliedfive different linear classifiers to extract PPIfrom AIMed: L2-SVM, 1-norm soft-marginSVM (L1-SVM), logistic regression (LR) (Fanet al, 2008), averaged perceptron (AP) (Collins,2002), and confidence weighted linear classifica-tion (CW) (Dredze et al, 2008).
Table 2 indicatesthe performance of these classifiers on AIMed.We employed better settings for the task than didthe original methods for AP and CW.
We used aWidrow-Hoff learning rule (Bishop, 1995) for AP,and we performed one iteration for CW.
L2-SVMis as good as, if not better, than other classifiers (F-score and AUC).
In the least, L2-SVM is as fast asthese classifiers.
AP and CW are worse than theother three methods, because they require a largenumber of examples, and are un-suitable for thecurrent task.
This result indicates that all linearclassifiers, with the exception of AP and CW, per-form almost equally, when using our feature vec-tor.Finally, we implemented the kernel method byMiwa et al (2008).
For a 10-fold CV on AIMed,the running time was 9,507 seconds, and the per-formance was 61.5% F-score and 87.1% AUC.Our system used 4,702 seconds, and the perfor-mance was 64.2% F-score and 89.1% AUC.
Thisresult displayed that our system, with L2-SVM,and our new feature vector, is better, and faster,than the kernel-based system.4.3 Evaluation of Corpus WeightingIn this section, we first apply each model from asource corpus to a target corpus, to show how dif-ferent the corpora are.
We then evaluate SVM-CWby comparing it with three other methods (see Sec-tion 2) with limited features, and apply it to everycorpus.0102030405060708090AIMed BioInfer HPRD50 IEPA LLLFTarget corpusAIMedBioInferHPRD50IEPALLLco-occModelFigure 8: F-score on a target corpus using a modelon a source corpus.
For the comparison, we showthe 10-fold CV result on each target corpus andco-occurrences.
The regularization parameter wasfixed to 1.First, we apply the model from a source corpusto a target corpus.
Figure 8 shows how the modelfrom a source corpus performs on the target cor-pus.
Interestingly, the model from IEPA performsbetter on LLL than the model from LLL itself.
Allthe results showed that using different corpora (ex-cept IEPA) is worse than just using the same cor-pora.
However, the cross-corpora scores are stillbetter than the co-occurrences base-line, which in-dicates that the corpora share some information,even though they are not fully compatible.Next, we compare SVM-CW with three othermethods: aSVM, SVD-ASO, and TrAdaBoost.For this comparison, we used our feature vec-tor without including the graph features, becauseSVD-ASO and TrAdaBoost require large compu-tational resources.
We applied SVD-ASO andTrAdaBoost in the following way.
As for SVD-ASO, we made 400 auxiliary problems from thelabels of each corpus by splitting features ran-domly, and extracted 50 additional features eachfor 4 feature groups.
In total, we made new 200additional features from 2,000 auxiliary problems.As recommended by Ando et al (2005), we re-moved negative weights, performed SVD to eachfeature group, and iterated ASO once.
Since Ad-aBoost easily overfitted with our rich feature vec-tor, we applied soft margins (Ratsch et al, 2001)to TrAdaBoost.
The update parameter for sourceexamples was calculated using the update param-eter on the training data in AdaBoost and the orig-inal parameter in TrAdaBoost.
This ensures thatthe parameter would be the same as the originalparameter, when the C value in the soft margin ap-proaches infinity.126aSVM SVD-ASO TrAdaBoost SVM-CW L2-SVMF AUC F AUC F AUC F AUC F AUCAIMed 63.6 88.4 62.9 88.3 63.4 88.4 64.0 88.6 63.2 88.4BioInfer 66.5 85.2 65.7 85.1 66.1 85.2 66.7 85.4 66.2 85.1HPRD50 71.2 84.3 68.7 80.8 72.6 85.3 72.7 86.4 67.2 80.7IEPA 73.8 85.4 72.3 83.8 74.3 86.3 75.2 85.9 73.0 84.7LLL 85.9 89.2 79.3 85.5 86.5 88.8 86.9 90.3 80.3 86.3Table 3: Comparison of methods on multiple corpora.
Our feature vector without graph features is used.The source corpora with the best F-scores are reported for aSVM, TrAdaBoost, and SVM-CW.F-score AUCA B H I L all A B H I L allA (64.2) 64.0 64.7 65.2 63.7 64.2 (89.1) 89.5 89.2 89.3 89.0 89.4B 67.9 (67.6) 67.9 67.9 67.7 68.3 86.2 (86.1) 86.2 86.3 86.2 86.4H 71.3 71.2 (69.7) 74.1 70.8 74.9 84.7 85.0 (82.8) 85.0 83.4 87.9I 74.4 75.6 73.7 (74.4) 74.4 76.6 86.7 87.1 85.4 (85.6) 86.9 87.8L 83.2 85.9 82.0 86.7 (80.5) 84.1 86.3 87.1 87.4 90.8 (86.0) 86.2Table 4: F-score and AUC by SVM-CW.
Rows correspond to a target corpus, and columns a sourcecorpus.
A:AIMed, B:BioInfer, H:HPRD50, I:IEPA, and L:LLL corpora.
?all?
signifies that all sourcecorpora are used as one source corpus, ignoring the differences among the corpora.
For the comparison,we show the 10-fold CV result on each target corpus.In Table 3, we demonstrate the results of thecomparison.
SVM-CW improved the classifica-tion performance at least as much as all the othermethods.
The improvement is mainly attributed tothe aggressive use of source examples while learn-ing the model.
Some source examples can be usedas training data, as indicated in Figure 8.
SVM-CW does not set the restriction between CsandCtin Equation (2), so it can use source exam-ples aggressively while learning the model.
SinceaSVM transfers a model, and SVD-ASO transfersan additional feature space, aSVM and SVD-ASOdo not use the source examples while learning themodel.
In addition to the difference in the data us-age, the settings of aSVM and SVD-ASO do notmatch the current task.
As for aSVM, the DA as-sumption (that the labels are the same) does notmatch the task.
In SVD-ASO, the numbers of bothsource examples and auxiliary problems are muchsmaller than those reported by Ando et al (2005).TrAdaBoost uses the source examples while learn-ing the model, but never increases the weight ofthe examples, and it attempts to reduce their ef-fects.Finally, we apply SVM-CW to all corpora usingall features.
Table 4 summarizes the F-score andAUC by SVM-CW with all features.
SVM-CWis especially effective for small corpora, show-ing that SVM-CW can adapt source corpora to asmall annotated target corpus.
The improvementon AIMed is small compared to the improvementon BioInfer, even though these corpora are sim-ilar in size.
One of the reasons for this is thatwhole abstracts are annotated in AIMed, thereforemaking the examples biased.
The difference be-tween L2-SVM and SVM-CW + IEPA on AIMedis small, but statistically, it is significant (McNe-mar test (McNemar, 1947), P = 0.0081).
In thecases of HPRD50 + IEPA, LLL + IEPA, and twofolds in BioInfer + IEPA, Csis larger than CtinEquation (2).
This is worth noting, because thesource corpus is more weighted than the target cor-pus, and the prediction performance on the tar-get corpus is improved.
Most methods put moretrust in the target corpus than in the source cor-pus, and our results show that this setting is not al-ways effective for mixing corpora.
The results alsoindicate that IEPA contains more useful informa-tion for extracting PPI than other corpora, and thatusing source examples aggressively is importantfor these combinations.
We compared the resultsof L2-SVM and SVM-CW + IEPA on AIMed,and found that 38 pairs were described as ?inter-action?
or ?binding?
in the sentences among 61127SVM-CW L2-SVM Airola et alF AUC F AUC F AUCA 65.2 89.3 64.2 89.1 56.4 84.8B 68.3 86.4 67.6 86.1 61.3 81.9H 74.9 87.9 69.7 82.8 63.4 79.7I 76.6 87.8 74.4 85.6 75.1 85.1L 86.7 90.8 80.5 86.0 76.8 83.4Table 6: Comparison with the results by Airolaet al (2008).
A:AIMed, B:BioInfer, H:HPRD50,I:IEPA, and L:LLL corpora.
The results with thehighest F-score from Table 4 are reported as theresults for SVM-CW.newly found pairs.
This analysis is evidence thatIEPA contains instances to help find such inter-actions, and that SVM-CW helps to collect goldpairs that lack enough supporting instances in asingle corpus, by adding instances from other cor-pora.
SVM-CW missed coreferential relations thatwere also missed by L2-SVM.
This can be at-tributed to the fact that the coreferential informa-tion is not stored in our current feature vector; sowe need an even more expressive feature space.This is left as future work.SVM-CW is effective on most corpus combi-nations, and all the models from single corporacan be improved by adding other source corpora.This result is impressive, because the baselines byL2-SVM on just single corpora are already betterthan or at least comparable to other state-of-the-artPPI extraction systems, and also because the vari-ety of the differences among different corpora isquite wide depending on various factors includingannotation policies of the corpora (Pyysalo et al,2008).
The results suggest that SVM-CW is usefulas an ITL method.4.4 Comparison with Other PPI SystemsWe compare our system with other previouslypublished PPI extraction systems.
Tables 5 and6 summarize the comparison.
Table 5 summa-rizes the comparison of several PPI extraction sys-tems evaluated on the AIMed corpus.
As indi-cated, the performance of the heavy kernel methodis lower than our fast rich feature-vector method.Our system is, to the extent of our knowledge, thebest performing PPI extraction system evaluatedon the AIMed corpus, both in terms of AUC andF-scores.
Airola et al (2008) first reported resultsusing all five corpora.
We cannot directly com-pare our result with the F-score results, becausethey tuned the threshold, but our system still out-performs the system by Airola et al (2008) on ev-ery corpus in AUC values.
The results also indi-cate that our system outperforms other systems onall PPI corpora, and that both the rich feature vec-tor and the corpus weighting are effective for thePPI extraction task.5 ConclusionIn this paper, we proposed a PPI extraction systemwith a rich feature vector, using a corpus weight-ing method (SVM-CW) for combining the mul-tiple PPI corpora.
The feature vector extracts asmuch information as possible from the main train-ing corpus, and SVM-CW incorporate other exter-nal source corpora in order to improve the perfor-mance of the classifier on the main target corpus.To the extent of our knowledge, this is the first ap-plication of ITL and DA methods to PPI extrac-tion.
As a result, the system, with SVM-CW andthe feature vector, outperformed all other PPI ex-traction systems on all of the corpora.
The PPIcorpora share some information, and it is shownto be effective to add other source corpora whenworking with a specific target corpus.The main contributions of this paper are: 1)conducting experiments in extracting PPI usingmultiple corpora, 2) suggesting a rich featurevector using several previously proposed featuresand normalization methods, 3) the combination ofSVM with corpus weighting and the new featurevector improved results on this task compared withprior work.There are many differences among the corporathat we used, and some of the differences are stillunresolved.
For further improvement, it would benecessary to investigate what is shared and whatis different among the corpora.
The SVM-CWmethod, and the PPI extraction system, can be ap-plied generally to other classification tasks, andto other binary relation extraction tasks, withoutthe need for modification.
There are several othertasks in which many different corpora, which atfirst glance seem compatible, exist.
By apply-ing SVM-CW to such corpora, we will analyzewhich differences can be resolved by SVM-CW,and what differences require a manual resolution.For the PPI extraction system, we found manyfalse negatives that need to be resolved.
For fur-ther improvement, we need to analyze the cause128positive all P R F AUCSVM-CW 1,000 5,834 60.0 71.9 65.2 89.3L2-SVM 1,000 5,834 62.7 66.6 64.2 89.1(Miwa et al, 2008) 1,005 5,648 60.4 69.3 64.2 (61.5) 87.9 (87.1)(Miyao et al, 2008) 1,059 5,648 54.9 65.5 59.5(Airola et al, 2008) 1,000 5,834 52.9 61.8 56.4 84.8(S?tre et al, 2007) 1,068 5,631 64.3 44.1 52.0(Erkan et al, 2007) 951 4,020 59.6 60.7 60.0(Bunescu and Mooney, 2005) 65.0 46.4 54.2Table 5: Comparison with previous PPI extraction results on the AIMed corpus.
The numbers of positiveand all examples, precision (P), recall (R), F-score (F), and AUC are shown.
The result with the highestF-score from Table 4 is reported as the result for SVM-CW.
The scores in the parentheses of Miwa et al(2008) indicate the result using the same 10-fold splits as our result, as indicated in Section 4.2.of these false negatives more deeply, and design amore discriminative feature space.
This is left as afuture direction of our work.AcknowledgmentsThis work was partially supported by Grant-in-Aidfor Specially Promoted Research (MEXT, Japan),Genome Network Project (MEXT, Japan), andScientific Research (C) (General) (MEXT, Japan).ReferencesAntti Airola, Sampo Pyysalo, Jari Bjo?rne, TapioPahikkala, Filip Ginter, and Tapio Salakoski.
2008.All-paths graph kernel for protein-protein interac-tion extraction with evaluation of cross corpus learn-ing.
BMC Bioinformatics.Rie Kubota Ando, Tong Zhang, and Peter Bartlett.2005.
A framework for learning predictive struc-tures from multiple tasks and unlabeled data.
Jour-nal of Machine Learning Research, 6:1817?1853.Rie Kubota Ando.
2006.
Applying alternating struc-ture optimization to word sense disambiguation.
InProceedings of the Tenth Conference on Compu-tational Natural Language Learning (CoNLL-X),pages 77?84, June.C.
M. Bishop.
1995.
Neural Networks for PatternRecognition.
Oxford University Press.Razvan C. Bunescu and Raymond J. Mooney.
2005.Subsequence kernels for relation extraction.
InNIPS 2005.Razvan C. Bunescu, Ruifang Ge, Rohit J. Kate, Ed-ward M. Marcotte, Raymond J. Mooney, Arun K.Ramani, and Yuk Wah Wong.
2005.
Comparativeexperiments on learning information extractors forproteins and their interactions.
Artificial Intelligencein Medicine, 33(2):139?155.Michael Collins.
2002.
Discriminative training meth-ods for hidden markov models: theory and experi-ments with perceptron algorithms.
In EMNLP 2002,pages 1?8.Wenyuan Dai, Qiang Yang, Gui-Rong Xue, and YongYu.
2007.
Boosting for transfer learning.
In ICML2007, pages 193?200.J.
Ding, D. Berleant, D. Nettleton, and E. Wurtele.2002.
Mining medline: abstracts, sentences, orphrases?
Pacific Symposium on Biocomputing,pages 326?337.Mark Dredze, Koby Crammer, and Fernando Pereira.2008.
Confidence-weighted linear classification.
InICML 2008, pages 264?271.Gunes Erkan, Arzucan Ozgur, and Dragomir R. Radev.2007.
Semi-supervised classification for extract-ing protein interaction sentences using dependencyparsing.
In EMNLP 2007.Rong-En Fan, Kai-Wei Chang, Cho-Jui Hsieh, Xiang-Rui Wang, and Chih-Jen Lin.
2008.
LIBLINEAR:A library for large linear classification.
Journal ofMachine Learning Research, 9:1871?1874.Katrin Fundel, Robert Ku?ffner, and Ralf Zimmer.2006.
Relex?relation extraction using dependencyparse trees.
Bioinformatics, 23(3):365?371.Cho-Jui Hsieh, Kai-Wei Chang, Chih-Jen Lin,S.
Sathiya Keerthi, and S. Sundararajan.
2008.
Adual coordinate descent method for large-scale lin-ear SVM.
In ICML 2008, pages 408?415.Jin-Dong Kim, Tomoko Ohta, Yuka Tateisi, andJun?ichi Tsujii.
2003.
GENIA corpus ?
a semanti-cally annotated corpus for bio-textmining.
Bioinfor-matics, 19:i180?i182.Jin-Dong Kim, Tomoko Ohta, and Jun?ichi Tsujii.2008a.
Corpus annotation for mining biomedicalevents from literature.
BMC Bioinformatics, 9:10.129Seonho Kim, Juntae Yoon, and Jihoon Yang.
2008b.Kernel approaches for genic interaction extraction.Bioinformatics, 24(1):118?126.Suresh Mathivanan, Balamurugan Periaswamy, TKBGandhi, Kumaran Kandasamy, Shubha Suresh, RiazMohmood, YL Ramachandra, and Akhilesh Pandey.2006.
An evaluation of human protein-protein inter-action data in the public domain.
BMC Bioinformat-ics, 7 Suppl 5:S19.Quinn McNemar.
1947.
Note on the sampling errorof the difference between correlated proportions orpercentages.
Psychometrika, 12(2):153?157, June.Makoto Miwa, Rune S?tre, Yusuke Miyao, TomokoOhta, and Jun?ichi Tsujii.
2008.
Combining mul-tiple layers of syntactic information for protein-protein interaction extraction.
In Proceedings of theThird International Symposium on Semantic Miningin Biomedicine (SMBM 2008), pages 101?108.Yusuke Miyao, Rune S?tre, Kenji Sagae, TakuyaMatsuzaki, and Jun?ichi Tsujii.
2008.
Task-oriented evaluation of syntactic parsers and theirrepresentations.
In Proceedings of the 45th Meet-ing of the Association for Computational Linguistics(ACL?08:HLT).Claire Ne?dellec.
2005.
Learning language in logic -genic interaction extraction challenge.
In Proceed-ings of the LLL?05 Workshop.Sinno Jialin Pan and Qiang Yang.
2008.
A survey ontransfer learning.
Technical Report HKUST-CS08-08, Department of Computer Science and Engineer-ing, Hong Kong University of Science and Technol-ogy, Hong Kong, China, November.Sampo Pyysalo, Filip Ginter, Juho Heimonen, JariBjo?rne, Jorma Boberg, Jouni Ja?rvinen, and TapioSalakoski.
2007.
BioInfer: A corpus for infor-mation extraction in the biomedical domain.
BMCBioinformatics, 8:50.Sampo Pyysalo, Antti Airola, Juho Heimonen, JariBjo?rne, Filip Ginter, and Tapio Salakoski.
2008.Comparative analysis of five protein-protein inter-action corpora.
In BMC Bioinformatics, volume9(Suppl 3), page S6.Gunnar Ratsch, Takashi Onoda, and Klaus-RobertMuller.
2001.
Soft margins for adaboost.
MachineLearning, 42(3):287?320.Rune S?tre, Kenji Sagae, and Jun?ichi Tsujii.
2007.Syntactic features for protein-protein interaction ex-traction.
In LBM 2007 short papers.Gabriele Schweikert, Christian Widmer, BernhardScho?lkopf, and Gunnar Ra?tsch.
2008.
An empir-ical analysis of domain adaptation algorithms forgenomic sequence analysis.
In NIPS, pages 1433?1440.Jun Yang, Rong Yan, and Alexander G. Hauptmann.2007.
Cross-domain video concept detection usingadaptive SVMs.
In MULTIMEDIA ?07: Proceed-ings of the 15th international conference on Multi-media, pages 188?197.130
