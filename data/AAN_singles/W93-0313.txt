Experiences about Compound Dictionary on Computer NetworksKyoji Umemura (NTT Basic Research Laboratories)Akihiro Umemura (NTT Basic Research Laboratories)Etsuko Suzuki (Tsuda College)Suite 5-310A, 3-9-11, Midori-cho, Musashino, Tokyo 180, JapanEmall: umemura@nuesun.nttjpABSTRACTThis paper reports on the implementation, user interface, and experiences with the on-linedictionary system we developed.
We call it Avenue.
Avenue consists of several different kindsof dictionaries.
Since it simultaneously searches all of its dictionaries for each query, the userdoes not need to specify which dictionary to search for the desired word.
Japanese peopleusually consult several different dictionaries to look up a word.
It is troublesome to findappropriate dictionary all the time.
Avenue does not have this problem.
Even if only onedictionary contains the word, the information will appear without fail.1.
INTRODUCTIONWhen Japanese people have trouble with an English word, they usually consult an English-Japanese dictionary, but often this is not enough.
An English-English dictionary is needed tounderstand the nuance.
When the concept expressed by an English word does not exist inproper Japanese, Japanese people have been creating a new Japanese word.
English-Japanesedictionaries show these new Japanese words that are rarely used.
They sound as if they mightbe still another foreign word.
Thus, a Japanese-Japanese dictionary is also needed.
Therefore,we sometimes need three dictionaries to understand English.Many words have been imported into Japanese from Chinese, English, German, French, andso on.
When a loanword is not in the Japanese-Japanese dictionary, we have to consult aforeign language dictionary.
This happens often with technical words.Japanese researchers always have several dictionaries on their desks.
When they encounter anunknown word, they have trouble selecting the appropriate dictionary to check.
Though thereare many on-line dictionary systems, they also have the same problem.
It is rather difficult ortroublesome touse multiple dictionaries simultaneously.
The problem is not limited to Japanese;English also has many kinds of dictionaries, uch as field-specific dictionaries, thesauri, lexicons.To make life simpler, we adopted a simple policy: "Combine all the dictionaries and alwaysrefer to all of them."
We have developed an experimental on-line dictionary system based onthis policy.
We combined a Japanese-Japanese dictionary, an English-Japanese dictionary, anacronym dictionary, an information science dictionary, and our office telephone directory.This paper is constructed as follows.
Section 2 describes the implementation.
Section 3 showsoutput examples.
Section 4 describes the user interface.
Section 5 describes how user behavioris recorded.
Section 6 discusses the problems found from the analysys of access record.Section 7 discusses the importance of the record-keeping and cooperation with the publishers.Section 8 reports other problems derived from dictionary combination.
Section 9 compares oursystem with other network information aggregations.
Section l0 presents the conclusion.2.
IMPLEMENTATION OVERVIEWThe experimental on-line dictionary system implemented at NTT Research Laboratories icalled Avenue.
It is used daily by researchers.
Most of them are Japanese.
Avenue has onecentral server machine and many client machines.
About 3000 researchers are able to access113this system.
More than 500 people of them have used the system, and it currently averagesmore than 100 requests per hour during the day.
More than two hundred machines have beenconnected to the server.
Ten to twenty machines usually connect to the server during the day.All of the information is stored in the central server.Avenue consists of a Japanese-Japanese dictionary, an English-Japanese dictionary, aninformation science dictionary, a computer jargon dictionary, an acronym dictionary, and anoffice telephone directory.
We are currently working on adding more dictionaries, such asJapanese-English dictionary, and an English-English dictionary, and a thesaurus.All of the source information is convened into a uniform format.
The server eads all of thedictionaries and then builds a combined index.
Since this index is in memory, only a few diskoperations are required to handle a request.
This means that the server esponds quickly.There are three ways to access the server: through remote shell command, through Emacs, andthrough HyperCard.
UNIX users usually use the Emacs interface.
Macintosh users usually usethe HyperCard interface.
These interfaces are built as extensions of the existing software.The remote shell provides a simple command line interface.
Though it does not providesophisticated functionality, it does have one important characteristic.
It does not require anyinstallation.
This feature is very important for gaining new users.The Emacs interface is more sophisticated.
By pressing one key, the word at the cursor isselected, a dedicated window appears, and the meanings appear.
Mouse action or retyping isnot required.
It produces outlined text if the word exists in multiple dictionaries.
Users cantherefore quickly see which dictionaries contain the word.
They can then explore the meaningsin detail by using familiar Emacs commands.
The HyperCard interface provides imilar functions.3.
EXAMPLESAvenue simultaneously presents information from various dictionaries.
The example in Fig.
1shows the information provided for "abc."
The underlined part is user input.
The first listcontains words that begin with ABC.
"ABCL/I" is the name of a programming language and isan entry in the information science dictionary.
"ABC_Powers" is an entry in the English-Japanesedictionary.
"ABC%IJ~" is an entry in the Japanese-Japanese dictionary.
Japanese sometimesuses English letters for imported words.word: abeABCL/I; ABC_Powers; ABC$1J~Jt;- -  eiwa: ABCABC, A. B.C.
American Bowling Congress; American Broadcasting Company;Australian Broadcasting Commission..--- eiwa: ABCABC \[e'ibi':si':\] (~ , ,~  ABC' s, ABCs)n. 1 .~)k '77 .
"~ '7  \]-.
2.
~ .- -  kojien: ABC: r _ - -  E ' - -5 , -  \ [ABC\ ](Argent  i ne)  - '7"~)~ (Br  az  i l )  .~ ' )  (Ch  i 1 e )~o- -  acron: ABCABC - American Broadcasting Companyword:Fig.1.
Example for "abc".In this example, three dictionaries have an entry for the word "ABC."
They are English-Japanese114(eiwa), Japanese-Japanese (kojien), and Acronym (acron) dictionaries.
This entry is in theJapanese-Japanese dictionar 3,because, as in English, Japanese people use it to denote "the firststep".
They also sometimes use it to denote Argentine, Brazil, and Chile.
The latter descriptiondoes not appear in English dictionaries.Another example is shown in Fig.
2.
This example shows an effect derived from a fieldspecific dictionary.
When we enter the word "amoeba," Avenue shows that it is also a computerjargon.
This jargon dictionary has 1532 entrys of words.
Though this number is relativelysmall, combination with other dictionaries i useful.
It is useful to know that some words havespecialized meanings.
Since the English-Japanese dictionary and the special dictionary have thesame interface, users can obtain various kinds of information i  a uniform manner.word: amoebaamoeba ; ameba;--- kojien: amoeba_7 .~- - \ ]~  \ [a rno  e b a \ ]7"  --- computer jargon: amoebaamoeba:/@-mee'b@/n.
Humorous term for the Commodore Amiga personal computer.--- eiwa: amoebaa ?
moe ?
ba \[_mi':b_\] ( :~ j~,  -bae \[-bi:\] , -bas) n. 7 ~ --\]'~, f.~:~,,.~.word: "7' J --,'~7~ -~,~-~  tO; 7~ -~ '~5 ,L ~+5 ;--- kojien: '7' ~ --\]~"_T .
J .
- \ ] '~ '_  \ [amo e b a .a  me b a \ ]7" - \ ]%--- waei: 7 ~ --\]~_ '7~ --~'~an amoeba-\[  (~)  ameba\] (p l .
- -bas, - -bae)  ?7 ~ - \ ] '~ J  am (o) ebic dysentery.word:Fig.
2.
Example for "amoeba"The second word entry in Fig.2 is "'7' ~ - -  / v', which is how amoeba is written in Japanese.
Itappears in the English-Japanese dictionary (eiwa).
It is a loanword and is read "arne:ba.
"Japanese understand that this word comes from foreign language since it is written in thecharacter set used for Ioanwords.
However, this word conveys no information about he smallcreature but the pronunciation.
Since there are many ioanwords in Japanese, we have to consulta Japanese-Japanese dictionary (kojien) to get the detailed information.
The Japanese-Japanesedictionary shows that it has only one cell, and is less than 0.2 mm in size.In the example shown in Fig.3, Avenue responds to the words "Albert," "Einstein," and"Albert Einstein" and presents information about Albert Einstein.
The user gets information forboth the given name and the family name.
It is a result of the combination since one dictionaryhas only the word, "Albert" and another dictionary has only the word, "Einstein.
"115word: einsteineinsteinium;--- eiwa: EinsteinEin ?
stein \[a'instain\] , Albert Einstein, ~ ~ .word: albertAlberta; Albertus_Magnus; AlbertoMoravia; Albeno_Giacometti;Albert_von_Le_Coq; Alben_Thibaudet; Albert_Schweitzer; Albert Mosse;Albert_Einstein; Albert_Carnus;--- eiwa: AlbertA \ [ .
ben \[A'lb_rt/-b_t\] n. l .~ j - -~-~.2 .
(~ i 'Z I ;~a- )~~7~\]~.
.word: albert einsteinAlbert_Einstein;--- koiien: Albert Einstein_7#>'S .
,aq~>,  \ [A  1 be  r t E i n s t e i n \ ]'Ro(1879- - -1955)word:Fig.3.
Example for Einstein, Albert and Albert Einstein.Avenue is more likely to find a word than a single dictionary.
Users find this to be veryimportant; they seem to feel as if it contains complete information.
They use Avenue even ifthey are not sure whether it contains the word or not.4.
USER INTERFACESThe user interface is a key element o gain users.
It is difficult to determine what kind ofinterface is good for users.
Some clear policies are necessary to design user interface.
Weattempted not to change the way users use the computer.
We therefore use several existingsystems for the user interface: the Rsh command, Emacs, and HyperCard.The Rsh command is an existing UNIX command, as we have already explained.
Since it is astandard network command, no installation is required and documentation is always available.A user only has to know the server's name to start using our system.Furthermore, users can combine the Rsh command with other commands in the standardmanner.
Since information goes through standard input and standard output, users can easilywrite additional programs in order to format the output.
If the service were to ask the user tologon to another computer, this additional programming would become more troublesome.After using the "Rsh" command for a while, most users find retyping the word cumbersomeand become annoyed with excessive output.
When the output does not fit onto one screen, theuser has to suspend output in order to read all of it.
Using Emacs program and a HypcrCardstack overcome these problems, that is, retyping and excessive output.The Emacs program picks up the word at the cursor.
At any time, one key stroke will initiatedictionary access for that word.
The HyperCard stack picks up a selected region.
In both cases116there is no need for typing.The Emacs program displays the information in outline mode.
If the output is long.
the detailedinformation is hidden by the interface program.
Users can explore the hidden parts after theyscan all of the headings.
The HyperCard stack has a dictionary preference list and cursormovement buttons.
Users can arrange the order of the dictionaries and even ignore some of thedictionaries.
They can also go backward and forward, dictionary by dictionary by using adedicated button on the stack.5.
RECORDING USER BEHAVIORIt is important for an information system to record each user's behavior; who uses what.Dedicated interface programs usually solve this problem.
However, they introduce anotherproblem: installation.
Our observations show that users tend to continue using printed ictionariesif software installation is required at the user's site.
A special trick is needed to record usernames and their requests when users will not install related software.UNIX has a standard command called "Rsh" or "Remsh."
It executes commands at a remotemachine.
This command sends the user's name when it requests a job to be run on anothermachine.
Rsh's protocol is designed so that the regular user cannot disguise himself as anotheruser, even if he builds his own network programs.
The problem with "Rsh" is that it requiresstrict registration in order to ensure system security.
If a new user should register himselfbefore using Avenue, he would refrain from using Avenue.The problem of installation and registration was solved by creating a modified server.
After ourmodification, it responds to everyone, but limits the commands that can be run.
Since "Rsh"provides user identification, it is easy for the modified server to record who uses what.
Thereis no installation or modification at the user site.
Only the central server has a special program.From the user's point of view, new machines and new users can access the dictionarieswithout registering by using this method.
The only thing a user has to know is the name of theserver machine.
From the operator's point of view, he will have a record of user behaviorwithout installation or registration.6.
PROBLEMS FOUND FROM ACCESS RECORDWe analyzed Avenue's access record in order to find various problems.
We assume that a userhas encountered a problem when he makes several requests within a short time period, that is,several minutes.
We therefore picked up those places where a user repeatedly accessed Avenue.We then entered the same words so that we could see what the user actually got.
We thusidentified five common problems.Problem (1): The user needs a variation of the given word.If the word is a headword, it will be in the candidate list from Avenue.
If it is not a headword,he must guess the spelling.
Sometimes he enters Japanese word to get some hints.Problem (2): The user needs an idiom.Idioms usually appear among the definitions, not as headwords.
It is difficult to find the correctheadword for a given idiom.
Furthermore, the dictionary may be inconsistent.
For example, "~to"  may he used in one place, while "'-- to," which has a space, is used in another place.Problem (3): The user needs an example.After finding an English word in the Japanese-English dictionary, a user freque.ntly consultsthe English-English dictionary to get an example.
When the entry does not contmn an examplesentence, he sometimes starts entering relatively simple words, hoping to find some examples.When this word is a relatively rare word, this search for examples happens more frequently.Problem (4): The user cannot enter the characterJapanese characters are hard to read and harder to enter since Japanese uses thousands of117Chinese characters (Kanji) and many other characters.
It often happens that a user can understandthe meaning of a character, but cannot pronounce it.
Unless the character can be pronounced, itis very hard to input the character into the computer.
Users sometimes enter words that havesome relation in meaning in order to obtain the character.
Once it is obtained, he enters thedesired word using cut and paste.Problem (5): The user is not sure of the correct spelling of the wordWhen the spelling is uncertain, the user will often enter words that have similar spelling.
If thecorrect one is not found, Japanese words are often entered.Problems (1), (2), and (3) indicated the need for additional dictionaries: a thesaurus, an idiomdictionary, and a corpus of English.
It is important that this fact comes from the actual recordof usage.Problem (4) reflects aproblem in handling Japanese.
Currently, Japanese characters are convertedfrom pronunciation tocharacters when they are input to a computer.
If the character cannot bepronounced, it is very hard to enter the character.
Though this is an apparent problem, we hadfailed to recognize it.
This is because we have taken it for granted unconsciously.
Though thisproblem is not specific to Avenue, it is important to know that our user actually have thisproblem.Problem (5) means that users sometimes fail to specify what they want to know.
This is acommon problem in information retneval.
Though we do not have a good idea for overcomingit, we can recognize it based on actual usage.Several problems have been identified by focusing on repetitive access from one user.
It isimportant for us to be aware of the problems o that we can improve the system.
Someproblems are due to the lack of certain dictionaries.
We have thus identified a specific improvementthat needs to be made.7.
COOPERATION WITH PUBLISHERSCooperation with publishers i  essential in operating network dictionary systems.
Since thesesystems and printed dictionaries are in a competitive relation, cooperation is a rather subtleissue.
Luckily, publishers are searching for new ways of publishing.
For example, they areinitiating CD-ROM publication.
Network systems are another future publication form.The recording mechanism is a key to making cooperation possible.
With it, the users can beidentified, along with their number of uses.
It also provides valuable information to publishersto revise their dictionary.
For example, the record shows which words may be candidates foraddition.
Publishers have agreed to provide their information to us in return for a fee and acomplete record of user activity.8.
OTHER PROBLEMS AND FUTURE WORKOne problem for future work is that, though many entries may appear for one word, each mayhave different format.
This sometimes makes the information hard to read.
Since the informationoriginally comes from printed ictionaries, there is some variance in format.
It is rather difficultto reformat all of them.
Although the Avenue interface has a mechanism to add a formattingprogram for each dictionary, it is troublesome to write such a program for all dictionaries.Furthermore, it is hard to write program that will produce a clean and neat formalAnother problem is that too much information may sometimes be given for one word.
If it doesnot fit one screen, it is difficult to find the needed information.
Although the interface hasoutline control and cursor movement control, which reduce the trouble, it will become a moresevere problem as the number of information sources increases.Dictionary preference is another technical issue.
Users will prefer different sets of dictionaries,depending on their speciality.
Computer engineers and linguists consult different dictionaries.118Furthermore, A person's preference may change over time as their interests change; He may becomputer engineer one time and linguist another time.
Avenue currently provides only one-dimensional list of dictionaries.
If there are many information sources, a one-dimensional listmay be too limited for many users.
A more flexible and powerful mechanism is needed tospecify the relations among dictionaries.9.
RELATED WORKMany information systems have become available.
WAIS, Gopher, and WWW are notable \[ 1 \]among them.
They also combine various information sources and they handle not only dictionary,but also may other kinds of information.
While Avenue calls up all sources imultaneously,they call up one at a time.
Although they have a single dedicated keyword search server, usersstill have to select one among sources to get the information.
Generally speaking, selectinginformation sources is difficult and time consuming.There are also many on-line dictionaries for personal computers.
The variety of informationand uniform interface are the main advantages ofAvenue.10.
CONCLUSIONWe have implemented a combined ictionary system that combines a Japanese-Japanesedictionary, English-Japanese dictionary, information science dictionary, an acronym dictionary,and a telephone directory.
They are all consulted simultaneously when responding to a query.We found that this feature is very important for users.
The recording of user behavior showsthe need for additional dictionaries.
This record is also valuable to the dictionary publishers.ACKNOWLEDGMENTSWe thank Chisato Furuya at the Nagaoka University of Technology for her valuable suggestionsand discussion about the value of this work.
We also thank Yasuki Saito at the NTT BasicResearch Laboratories for his guidance and support.\[1 \] Ed Krol, "The Whole lnternet User's Guide & Catalog", ISBN 1-56592-025-2, O'Reilly.119
