DANISH FIELD GRAMMAR IN TYPED PROLOGHenrik RueUNI-C, Danish Computing Center for Research and EducationVermundsgade 5, DK 2100 @, Copenhagen, DenmarkABSTRACTThis paper describes a field grammar forDanish and its implementations in a Prologversion with predeclared types.
In compa-r ison to the ususa l  S -> NP VP schema,this kind of grammar, where the first ruleis S -> CNF FF NF CF enhances  ana lys i seffeciency because the f ields specifyconstituents and syntactic function at thesame time.
The field grammar tradition isoutl inedand an overv iew of the major rulesof the Prolog program, which implementsthe grammar, is given.FIELD GRAMMARA Syntactic StrategyIn terms of computational l inguistics,field grammar may be viewed as a syntacticstrategy, which offers the user the imme-diate constituents whi le at the same timegiving their syntactic functions and thefunctional sentence perspective, in partat least.
Field grammar furthermore faci-l itates the handl ing of discontinuous con-stituents, as wil l  be shown.BackgroundThe field grammar of the Danish linguistPaul Diderichsen adequately describes con-stituent structure in Danish, while at thesame time capturing both topical izat ionand syntactic roles.
Diderichsens grammar"Elementmr dansk grammatik" (1946) wasdeveloped from the 1940's onwards with thein tent ion  that it shou ld  be used as acommon framework for grammar teaching insecondary school as well  as on universitylevel.
This grammar has since served asone cornerstone of Danish grammaticalthought.Diderichsen's grammar is distinguishedby a high degree of formalization, and itis one of the aims of the work presentedin this paper to see how much of theoriginal formalism can be implementeddirect ly as a Prolog program, and whetherit is necessary to make substantial chan-ges in the definit ion and inventory off ields in order to make an executableprogram.Prolog DialectThe Prolog dialect used is the Danishprototype of Borland's TurboProlog.
Thisis a typed prolog, and may be termed ahybrid between Prolog and Pascal.
Whenseeing a sample grammar written in thisdialect, one is impressed by the clarityit achieves: grammatical structures arestat ical ly  described in the declarat ion oftypes.
The dynamic part which enables oneto get at these s t ruc tures  are the ru lesof the program.
A further aim of thiswork, then, is to explore whether thisclar ity wi l l  prevai l  a lso in an elaborategrammar program.Other PurposesApart from the purpose implicit in theaims we bel ieve that field theory offers asound (read: economic) starting point fora great variety of parsing purposes.
Asmentioned, the theory offers a combina-tion of constituent structure analysiswith syntactic and thematic analysis.This wi l l  not only hold for the Scandi-navian languages, but presumably also forother Germanic language like English,where one might  abandon the S -> NP VP infavour  of someth ing  on the l ines  of theSVC SVA SV SVO etc.
clause patterns ofQuirk (1972) et alIn the work presented here, however,there is no exploitat ion of the topical i-zation faci l it ies offered by the grammar.A DANISH FIELD GRAMMARAccording to Diderichsen, the Danishsentence structure has four major fields,the connector field, the fundament field,the nexus field and the content field.The four types are present in main sen-tences167S -> CONN FF NF CFand three of them in subordinate ones:SS -> CONN S-NF CFwhere all  f ields except the nexus field(NF or S-NF) may be empty.The CONN is the field for conjunctions.The FF (for Fundament Field, which isthe Danish topical izat ion device) maycontain any complete constituent, which isthere as a resu l t  of a movement  from itsf ield in the sentence: 'Moderen giverdrengen gaven' vs. 'Gaven giver moderendrengen', ('The mother gives the boy agift') where the second version differesin its thematical content only: it stres-ses the direct object as the theme.The NF, for Nexus Field, contains afinite verbform, a possible subject plusadverbia ls  modifying the verb; the inter-nal structure of the nexus field differsin main and subordinate clauses.The CF, for Content Field, contains twopossible infinite verbforms, the objectsand predicates plus adverbial  and othermodifiers.The Grammar DeclarationSo far the project has implemented fieldanalysis of both main and subordinatesentences.
However, not al l  topical iza-tions are handled yet: in questions, thefundament f ield may be empty too, but thisis not incorporated in the program, as itremains to be seen whether an anlysis withthe finite topicalized, that is moved intothe fundament field, would be more fit forthe purpose.Clause  structureThe fol lowing declarat ions describe mainand subordinate clauses and furthermorethe internal structure of the majorfields:S : s( CONN, FUNDF, NEXUSF, CONTENTF );nil;s_s( CONN, NEXUSF_S, CONTENTF )CONN =nil;konj( KONJ )FUNDF = fundf n( NOMINAL ); /* No nil */fundf--a( ADVERBIAL );fundf--i( INF );fundfZc( CONTENTF )NEXUSF : nexusf( FINIT, SUBJ, NADV )NEXUSF_S : nexusf_s( SUBJ, NADV, FINIT )CONTENTF = nil;contentf( INFFLD, OBJFLD,CADVFLD )These are the major fields.
They may inturn be divided into subfields:INFFLD : nil;inffld( INFI, INF2 )means that Danish has a possibi l i ty of twoauxil iaries, (the finite + one infinite),and impl ic i t ly  that if INF2 is fi l led,then this w i l l  be the content  verb.
Thistreatment is not quite adequate, actual ly,but it follows Diderichsen's schema.OBJFLD : nil;obJfld( NOMINAL, PREPG, NOMINAL )the object field, which at the moment con-tains a quick-and-dirty solut ion to theproblem that the indirect object may beexpressed by a preposit ional phrase inDanish, the solut ion being the incorpora-tion of an unwarranted PREP subfield.It should be noted in passing, that theconnector field in Diderichsen's formal ismis one of the p laces  where the system wi l lnot be ab le  to ho ld  on to the or ig ina l .Th is  f ie ld  is part of scemata not on ly  forsentences, but also for noun- and adver-bial phrases, where it may contain i.a.preposition.
The system thus has to di-stinguish between the two types of connec-tor f ields in order to avoid the genera-tion of spurious analysis results.Discontinuous Verbal ParticlesIn Danish some verbs are either prefi-gated or obl igator ly  constructed with aparticle, a preposit ion actually, whichmoves  to the end of the sentence  with a l lf in i te  forms: 'oplade' ('charge') but 'hanlader batteriet op', ('he charges thebattery'); ' lukke op' ('open up') but 'banlukker  d~ren op' ('he opens the -door  up').The same phenomenon exists in German:'Peter gab sein rauchen auf'.
This is oneof the places where field grammar showsits force as a syntactic strategy, becausethe phenomenon of discontinuity is handledin a straightforward way at the firstlevel  of analysis:ADVFLD = nil;cadvfld( CADF, CADF )withCADF = nil;prep( PREP );cadf( ADVERBIAL )where CADF is the field for i.a.
conten-tial adverbs, but also for disjunct verbal168particles.
These are acommodated by split-ting the original Diderichsen subfield forcontent adverbials into two further sub-fields, one of which wil l  contain theverbal particle (if any) the other theregular content adverbials.
This is suffi-cient for the declaration of the grammar;how our analysis handles the variousfields wil l  be shown in a later section.Phrasal structureSyntagmatic structures are also dividedinto fields.
As the system stands it isimplemented for adverbial  phrases, but notyet for noun phrases.
These are at themoment structured in a way, that is prettymuch on the NP -> Det AdjP N l ines.
Asregards adverbials, the structure given isonly one of several possible:NOMINAL = nil;nominal( ART, ADJEKTIVAL, SUBKERNPREPP, CS )ADVERBIAL : nil;adverbial( CONN,DEGREEF, SITUATF, ADVKERN,PREPP, CS )The CS is a symbol representing subordi-nate sentences, which have the form:CS = nil;cs( S, SYNT )where S is the field structure, and SYNTthe corresponding syntactical structure ofthe subordinate sentence represented bythe token of the symbol type CS.Verb phrases, on the other hand, do notexist as such.
Instead we have:FINIT = finit( VERB, VERB, TEMPG )INFINIT = infinit( VERB, VERB, TEMPG )VERB = Symbolwhich means that a verb, whether it befinite or infinite, is described by astructure, which consists of I) the verbalform i t se l f  as it is found in the sentence(the first 'VERB'), 2) a lexical unit,(the second 'VERB', which wil l  be found asa resu l t  of the ana lys i s  of the sentence,and which will leave the fields for infi-nite form empty) and 3) a complex descrip-tion, TEMPG, of tense, aspect, voice,modal i ty and the tel ic/atel ic  property ofthe situation described by the verb.
ThisTEMPG is used of the sentence as a who lealso.In this way a 'FINIT' in a sentence wil lhave either an auxiliary, a finite verb-form missing the verbal prefix or thefull, finite form of the content verb inthe first 'VERB' slot when field analysisis carried out.
The result of the syntac-tical analysis which follows, wil l  be inthe second 'VERB' slot.SyntaxThe system also comprises a syntacticpart, based on traditional school grammar:SYNT = synt( SUBJ, VERB, NADV, SUBJPRED,OBJ, OBJPRED, IOBJ, CADV,TEMPG )where NADV and CADV are the adverbialmodifiers of the nexus and the con-tentfield respectivi ly.
The other mnemo-nics should be self  evident.The DictionaryAs the dictionary of the system has notbeen given much attention yet, and as itworks on a pure ly  ad hoc basis, it w i l lnot be treated in this paper.ANALYSISAnalysis runs in two steps, one carryingout the field analysis, the other handlingthe syntactical interpretation of theresult of the field analysis.Field AnalysysField analysis is carried out by a call  tothe fol lowing major rule:is_s( I, O, s( CONN, FUNDF, NEXUSF,CONTENTF  ) ):-is forb( I, II, CONN, FEATC ),FEATC <> subord,is fundf( II, I2, FUNDF ),is--nexusf( I2, I3, NEXUSF ),is--contentf( I3, O, CONTENTF ).which applies the fol lowing rules in orderto succeed (or fail):is_fundf( I, O, fundf n( NOMINAL ) ):-is nomen( I, O, NOMINAL  ), I <> O.is_fundf( I, O, fundf a( ADVERBIAL ) ):-is adverbial( I, O, ADVERBIAL, ),I~> O.is_nexusf( I, O, nexusf( FINIT, NOMINAL,ADVERBIAL ) ):-is f init( I, II, F INIT ),is -nomen( II, I2, NOMINAL,  _, _ ),is~adverbial( I2, O, ADVERBIAL, _ ).and169is contentf( I, O, contentf( INFFLD,-- OBJFLD, CADVFLD ) ):-is inffld( I, II, INFFLD ),is--objfld( II, I2, OBJFLD ),is--cadvfld( I2, O, CADVFLD ),I~> O.is contentf(  I, I, ni l  ).As a consequence of having a possible nil-f i l l ing for a major field, the contentfield, it becomes necessary to explode thenumber of rules which identify and col lectcompound verb forms, or in other wordswhat is gained in the s impl i c i ty  of thegrammar is lost again by the number ofrules.Discontinous Verbal ParticlesAs an example of the rules handling themajor  f ields,  we sha l l  take a look at therule, which picks out discontinous verbalparticles.The rules which handle the adverbial  sub-field of the content field contain a spe-cification for the particles, as theya l low for the class of preposit ional ad-verbs:is cadvfld( I, O, cadvfld( PREPG,- -  C ADVERBIAL ) ):-is_advprep( I, II,--PREPG ),is c adverbial( II, O, C ADVERBIAL ),I <> O.is cadvfld( I, O, cadvfld( C ADVERBIAL,- PREPG ) ) :-is c adverbial( I, 11, C ADVERBIAL ),is--advprep( II, O, PREPG- ),no~_nom( 0 ), I <> O.The prepositional adverbs are then pickedup by the rule:is advprep(  I, O, prep( PREP ) ):-f ronttoken(  I, PREP, 0 ),d ic_prep( X ), X = PREP.which in fact is an ad hoc ru le to c i rcum-vent the restrictions posed on the systembe the typing facility.
During syntacticanalysis the disjunct particles are col-lected with the verb by the ruleextract disco vpart, as wil l  be demon-strated-in th~ following.Syntactic AnalysisThere is one major clause for syntacticanalysis, 'is_syn', which is cal led by thetop level anlysis clause 'start':start:-write("Skriv en smtning"),nl,readln( Line ),is s( Line, "", S ),is~syn( S, SYNT ),nl, write("Feltanalyse:"),nl,skriv s( S, 0 ), nl,nl, w~ite("Syntaktisk analyse:"), nl,skriv( SYNT, 0 ), nl, fail.is_syn( S, SYNT ):-extract_vg( S, VERBI, TEMPG ),extract disco vpart( VERBI, S, VERB ),extract~advg(--S, NADV, CADV ),interpret_nominals( S, VERB, SUBJ,SUBJPRED, OBJ,OBJPRED, IOBJ ),col lect_synt( VERB, NADV, SUBJ,SUBJPRED, OBJ, OBJPRED,IOBJ, CADV, TEMPG, SYNT ).is_syn( nil, nai ).The claim was that field grammar faci l i -tates syntactic analysis, and we shall  nowendeavour to support this claim by lookingat the handling of the noun phrases.The major rule is ' interpretnominals' ,which has the form:interpret nominals(s( _, FUNDF, NEXUSF, CONTENTF ),VERB, SUBJ, SUBJPRED,OBJ, OBJPRED, IOBJ ):-syn_nomfund( FUNDF, NEXUSF, CONTENTF,VERB, SUBJ, SUBJPRED,OBJ, OBJPRED, IOBJ).For transit ive verbs the fol lowingversion of a 'synnomfund'  rulegenerates the f i l ler in the fundamentfield as subject, and two f i l lers to theobject and indirect object slots; if thereis only one f i l ler in the object subfieldthis wi l l  be the object:syn nomfund(~undf n( FUNDFN I ),nexus~( _, nil, _ ),CONTENTF,VERB, subj( FUNDFN 0 ), nil,OBJS, nil, IOBJS )T-trans verb( VERB, DITRANS ),check--sentcomp( FUNDFN I, FUNDFN 0 ),extra~t_obj( nil, DITRANS, CONTENTF,OBJS, IOBJS ),!.where the interesting call is the one to'extract obj', where the fol lowing wil lmatch (the 'check_sentcomp' in the fol lo-wing rules should be disregarded, as ithas noth ing to do with the ana lys i s  of thearguments proper, it only activates asyntactic analysis of a possible clausalcomplement to the given nominal kernels):170extract obj( nil, _,contentf( _, objfld( NOM_I, nil, nil ),),obj( NOM O--), nil ):-check~sentcomp( NOM I, NO~O ),!,is_noprep( NOM_O ).extract_obJ( nil, DITRA,contentf( _,objfld( NOMI_I, nil, NOM2_I ),),obj( NOM20 ), iobj( NOMI O ) ):-DITRA--<> nil,is noprep( NOMI I ),check_sentcomp(--NOM1 I, NOMI 0 ),check_sentcomp( NOM2~I, NOM2~O ),l.extract_obj( nil, DITRA,contentf( _,objfld( NOMI_I, prep( PREP ),NOM2 I ),),obj( NOMI O ), iobj( NOM20 ) ):-DITRA--<> nil,is_noprep( NOMI I ),check tilfor( PREP ),check~sentcomp( NOMI I, NOMI 0 ),check_sentcomp( NOM2~I, NOM2ZO ),!.extract_obJ( nil, _,contentf()_, nil, _ ),nil, nil .extract_obJ( nil, _, nil, nil, nil ).Even if s imp l i c i ty  is in the eye of thebeholder, we are confident that the rulesabove are not very complicated.It is evident, however, that at leastone necessary modification to the claimmust be that the two structures for 'Themother gives the boy a present' example:s(fundf n(X),nexusf(f init(Y),ni l ,_),conte~tf(obJfld(nominal(XX)i ,nominal(YY)s(fundf n(X),nexusf(f init(Y),subj(Z), ),contentf(objf ld(obJ1(XX),_,ni l))can only be distinguished from each otherin ana lys is  by a ca l l  to a rule thatoperates at the lexical level of the verband its arguments.Discontinouos Verbal ParticlesIn the syntactic analysis, a possiblediscontinous verbal particles is disco-vered by the rule extract disco vpart,which has the form:extract disco_vpart(VERBIN,S(  _ ,  , __,contentf(  , _,cadvfld( prep( PREPIN ),))),VERBOUT ):-dic v( VERB, _,_,_,_, ,_,_, discon, _ ),VERB = VERBIN,dic v discon( VERB, PREP, , ),VER~ ~ VERBIN, PREPIN = PREP,-concat( VERB, " ", X ),concat( X, PREP, VERBOUT ).PERFORMANCEThe system consists of 35 complex gramma-tical objects, eg.
FUNDF, NOMINAL, with atotal of 69 possible internal structu-rings.
There are 18 simple grammaticaltypes, eg.
INF, ADV.There are 77 predicate types for theanalysis proper, and another 36 types usedfor prettyprinting the results of theanalysis.There are 72 ru les  for the hand l ing  ofthe field grammar analysis, and 74 rulesfor the syntactic analysis.F inal ly there are 70 actual rules to the36 types of prettyprinting.This reflects on one of the shortcomingsof the typing system: you need a separatepredicate for each object type you want totype out.
Up to a certain point one mayhave one predicate type handle severalobject types, but what happens is thatinstead the compiler generates differentpredicate types behind your back.
All ina l l  one must say, that running on an IBMXT you wil l  very soon hit the upper limitsof the various tables in the compiler,when you attempt to exploit the typingfacil it ies offered.The sentence 'den meget gode dreng somgiver moderen gaven lukker ?i op med etredskab' ('The very good boy who givesthe-mother the-gift opens beer up with atool') takes a total of 21.13 seconds infield and syntactic analysis:Field analysis:FUNDAMENTFIELDFUNDFNOM drengDET denADJ godeADV meget171CONJ somNEXUSFIELDFINITVERB giverCONTENTFIELDOBJ-SUBPRED FIELDOBJI/SPNOM moderenOBJ2/OP gavenNEXUSFIELDFINITVERB lukkerCONTENTFIELDOBJ-SUBPRED FIELDOBJI/SPNOM ?iCONTENT ADVERBIAL FIELDVB-PART opCF-ADVPREP medNOM redskabDET etSYNTACTIC ANALYSISSUBJ NOM drengDET denADJ godeADV megetSUBJ NOM RelT AVERB giveDIR-OBJ NOM gavenDAT-OBJ NOM moderenTEMP tempg(pres,contmp,act,ni l , imperf,atelic)VERB oplukkeDIR-OBJ NOM ?iCF-ADV PREP medNOM redskabDET etpresent'): 1.21 seconds before, 1:60 afterthe extension.Experience has also shown that typedPro log  is a h indrance  for the wr i t ing  ofrules, which handle different construc-tors: the compiler generates separaterules for each cnstructor, and that leavesyou with a severe problem of adequacy ofspace in the ru le  tables,  when runn ing onan IBM XT.REFERENCESPaul Diderichsen, Elementmr dansk gram-matik, Copenhagen 1946Randolph Quirk, Sidney Greenbaum, Geof-fry Leech & Jan Svar tv ik ,  A Grammar  ofContemporary English, London 1972PC PROLOG, Tutorial and User's guide,Prolog Development Center, Copenhagen1985, 1986.CONCLUSIONSAs the project is sti l l  running, it istoo early to propose any firm conclusions.It has been seen ,though, that a fieldanalysis for Danish is easi ly implementedin Prolog, that for the most part short-cuts are merely programming conveniences,and that typed Prolog using mnemotecnicvar iable names enhance readabil i ty andthereby adaptability.On the other hand, our experience hasshown that expanding the system is easybut expensive in process time.
When eg.subordinate clauses were introduced tonoun phrases and adverbial  phrases, thiswas a very simple operation in the grammar(it required the addition of a singlesymbol) but it had severe consequenses forexecution time: roughly a 25% increase inanalysis time for the sentence 'den megetgode dreng vil gerne f~ givet moderen dengode gave' ('The very good boy wi l l  be-happy-to manage-to give the-mother the-
