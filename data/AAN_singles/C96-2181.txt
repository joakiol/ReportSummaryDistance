NKRL, a Knowledge Representation Language for NarrativeNatural Language ProcessingGian Piero ZarriCentre National de la Recherche ScientifiqueCNRS - CAMS54, boulevard Raspail75270 PARIS Cedex 06, Francezar r i~cams.msh-par i s ,  frAbstractNKRL is a conceptual language which intends toprovide a normalised, pragmatic description of thesemantic ontents (in short, the "meaning") of NLnarrative documents.
We introduce firstly thegeneral architecture of NKRL, and we give someexamples of its characteristic features.
We supply,afterward, some sketchy information about theinference techniques and the NLP proceduresassociated with this language.1.
I n t roduct ionNKRL (Narrative Knowledge RepresentationLanguage) aims to propose some possible, pragmaticsolutions for the set up of a standardised description ofthe semantic ontents (in short, the "meaning") ofnatural anguage (NL) n,'uTative documents.
With theterm "nan'ative documents" we denote here NL texts ofan industrial and economic interest con'esponding, e.g.,to news stories, corporate documents, normative texts,intelligence messages, etc.The NKRL code can be used according to twomain modalities.
It can be employed as a standardvehicle for the interchange of content informationabout narrative documents.
It can also bc utilised tosupport a wide range of industrial applications, likepopulating large knowledge bases which can support,thereafter, all sort of "intelligent" applications(advanced expert systems, case-based reasoning,intelligent information retrieval, etc.).
NKRL is afully implemented language ; the most recent versionshave been rcalised in the frmnework of two Europeanprojects : NOMOS, Esprit P5330, and COBALT,LRE P61011.2.
The architecture of  NKRLNKRL is a two layer language.The lower layer consists of a set of general toolswhich are structured into several integratedcomponents, four in our case.The descriptive component concerns the tools usedto produce the formal representations (called predicativetemplates) of general classes of narrative vents, like"moving a generic object", "formulate a need", "bepresent somewhere".
Predicative templates arecharacterised by a threefold format, where the centralpiece is a semantic predicate (a primitive, likeBEHAVE, EXPERIENCE, MOVE, PRODUCE etc.
)whose arguments (role fillers) are introduced by rolesas SUBJ(ect), OBJ(ect), SOURCE, DEST(ination),etc.
; the data structures proper to the descriptivecomponent are then similar to the case-grammarstructures.
Templates are structured into a hierarchy,H TEMP(lates), corresponding, therefore, to a"taxonomy of events".Templates' instances (predicative occurrences),i.e., the NKRL representation of single, specificevents like "Tomorrow, I will move the wardrobe","Lucy was looking for a taxi", "Peter lives in Paris",,are in the domain of the factual component.The definitional component supplies the NKRLrepresentations, called concepts, of all the generalnotions, like physical_entity, human_being, taxi_,city_, etc., which can play the role of argumentswithin the data su'uctures of the two componentsabove.
The concepts correspond to sets or collections,organised according to a generalisation/specialisation(tangled) hier~chy which, for historical reasons, iscalled H_CLASS(es).
The data structures used for theconcepts are, substantially, frame-like structures ;H_CLASS corresponds relatively well, therefore, tothe usual ontologies of terms.The enumerative component of NKRL concernsthe formal representation f the instances (concrete,countable x,'unples, ee lucy_, wardrobe_l, taxi_53)of the concepts of H CLASS ; their formalrepresentations take the name of individuals.Throughout his paper, we will use the italic typestyle to represent a "concept", the roman style torepresent an "individual_".The upper layer of NKRL consists of two parts.The first is a "catalogue", giving a completedescription of the formal characteristics and themodalities of use of the well-formed, "basic templates"(like "moving a generic object" mentioned above)associated with the language - -  presently, about 150,pertaining mainly to a (very general) socio-economico-political context where the m~fin characters are humanbeing~ or social bodies.
By means of properspecialisation operations it is then possible to obtain,from the basic templates, the (specific) "derived"templates that could be concretely needed to implementa particular, practical application - -  e.g., "move anindustrial process" - -  and the correspondingoccurrences.
In NKRL, the set of legal, basictemplates can be considered, at least in a firstapproach, ,as fixed.Analogously, the general concepts which pertainto the upper levels of H_CLASS - -  such ashuman_being, physicalentity, modality_, etc.
- -form a sort of upper-level, ilwariable ontology.3.
Some characteristic NKRL featuresFig.
1 supplies a simple exmnple of NKRL code.
Ittranslates a small fragment of COBALT news :"Milan, October 15, 1993. qhe financial daily 11 Sole103224 Ore reported Mediobanca had called a special ?
),'udmeeting concerning plums for capital increKse".cl) MOVE SUBJOBJdate-1:date-2:(SPECIF sole 24 orefinancial_daily): (milan__)#c215 october_93C2) PRODUCE SUBJOBJmediobanca(SPECIF summoning 1(SPEClF board meeting_lmediobanca special_))TOPIC (SPECIF plan1 (SPECIFcardinal#y_ several_)capital_increase 1 )date-l: circa 15 october_93date-2:Figure 1.
At\] NKRI.
coding.In Fig.
1, cl and c2 are symbolic labels ofoccurrences ; MOVE and PRODUCE are predicates ;SUB J, OBJ, TOPIC (",:l propos of...") are roles.With respect now to the arguments, sole 24 ore,milan_, mediobanca_ (an Italian merchant bank),summoning l, etc.
,'u'e individuals ;financialdaily,special_, cardirtality_ and several_ (this last belonging,like some , all_ etc., to the logical_quantifierintensional sub-tree of II_CLASS) are concepts, q\]~eattributive operator, SPECIF(icatiou), with syulax(SPECIF el Pl -.. Pn), is used to represent some oftile properties which can be asserted about the firstelement el, concept or individual, of a SPECIF list ;severa l  is used within a SPECIF list havingcardinality_ as first element as a standard way ofrepresenting the plural number mark, sec c2.The arguments, and file templates/occurrences as awhole, may be characterised by the presence ofpro'titular codes, the determiners.
For example, thelocation determiners, represented aslists, are associatedwith the m'guments (role fillers) by using the colon,":", operator, see cl.
For the determiners date-1 anddate-2, see (Zarri, 1992a).A MOVE consUuctiou like that of occurrence l(completive construction) is necessarily used totranslate any event concerning the transmission of aninformation ("... I1 Sole 24 Ore reported ...").Accordingly, the filler of the OBJ(ect) slot in theoccurrences (here, cl) which instantiates the MOVEtransmission template is ~dways a symbolic label (c2)which refers to anolher predicative cx:curreuce, i.e., thatbearing the informational content o be spread out ("...Mediobanca had called a meeting ...").
We can notethat the enunciative situation can be both explicit orimplicit.
For example, the eompletive constructioncan be used to deal with a problem originally raised byNaz,'u'enko (1992) in a conceptual graphs context,namely, that of the correct rendering of causalsituations where the general framework of them~tecedent consists of an (implicit) speech situation.Let us examine briefly one of the Nazarenko'sexmnples (1992 : 881) : "Peter has a lever since he isflushed".
As Naz~enko remarks, "being flushed" is notthe "cause" of "having a fever", but that of an implicitenunciative situation where we claim (affirm, assertetc.)
that someone has a fever.
Using the completiveconstruction, this example is easily translated inNKRL using the I'onr occmTences of Fig.
2.\[ I Ic3) MOVE SUBJ human being or social bodyOBJ #c4c4) EXPERIENCE SUBJ peter_OBJ fevered_state_lC5) EXPERIENCE SUBJ peterOBJ flushing state_llobs\]c6) (CAUSE c3 e5)Figure 2.
An implicit enunciative situation.We cau remark that, in Fig.
2, c6 is a bindingoccun'ence.
Binding structures - -  i.e., lists where theelements are conceptual labels, c3 and c5 in Fig.
2 - -~ne second-order structures used to represeut the logico-semantic links which can exist between predicativetemplates or teem'fences.
The binding occun'ence c6 - -meaning that c3, the main event, has been caused byc5 - -  is labelled using one (CAUSE) of the fouroperators which define together the taxonomy ofcausality of NKRL, see (Zarri, 1992b).
The presencein c5 of a specific determiner - - a temporal modulator,"obs(ervc)", see again (Zarri, 1992a) - -  leads to aniuterprelalion of this occurrence as the description of asituatiou that, that very moment, is observed to exist.We give now, Fig.
3, a (slightly simplified)NKRL represeutation f the narrative sentence : "Wehave to make orange juice" which, according toIlwang and Schubert (1993 : 1298), exemplifiesseveral interesting semantic phenomena.c7) BEHAVE SUBJ (COORDinformant 1(SPECIF humar&being(SPECIF cardinalityseveral_)))\[oblig, ment\]date1: observed datedate2:c8) *PRODUCE SUBJ (COORD informant_l(SPECIF human_being(SPECIF cardinal#y_several_)))OBJ (SPECIF orange_juice(SPECIF amount_ 0))date1: observed date + idate2:c9) (GOAL c7 c8)Figure 3.
Wishes and intentions.i i  i i iFig.
3 illustrates the standard NKRL way ofrepresenting the "wishes, desires, intention" domain.To translate the idea of "acting in order to obtain agiven result", we use :i) An occurrence (here c7), instance of a basictemplate pertaining to the BEIIAVE branch of theH TEMP hierarchy, and corresponding to thegeneral meaniug of focusing on a result.
Thisoccurrence is used to express the "acting"1033component - -  i.e., it identifies the SUBJ(ect) ofthe action, the temporal co-ordinates, etc.ii) A second predicative occurrence, here c8, allinstance of a template structured around a differentpredicate (e.g., PRODUCE in Fig.
3) and which isused to express the "intended result" component.iii) A binding occmTence, c9, which links together theprevious predicative occurrences and which islabelled by means of GOAL, another operatorincluded in tile taxonomy of causality of NKRL.Please note that "oblig" and "ment" in Fig.
3 are,like "obs" in Fig.
2, "modulators", see (Zan-i, 1992b),i.e., particular determiners u ed to refine or modify theprimary interpretation f a template or occurrence asgiven by the basic "predicate - -  roles - -  argument"association.
"ment(al)" pertains to the modalitymodulators.
"oblig(atory)" suggests that "someone isobliged to do or to endure something, e.g., byauthority", and pertains to the deontic modulatorsseries.
Other modulators are the temporal modulators,"begin", "end", "obs(erve)", see also Fig.
2.Modulators work as global operators which take astheir argument ile whole (predicative) template oroccurrence.
When a list of modulators i present, as inthe occurrence c7 of Fig.
3, they apply successively tothe template/occurrence in a polish notation style toavoid any possibility of scope ambiguity.
In thestandard constructions for expressing wishes, desiresand intentions, tile absence of the "ment(al)" modulatorin the BEHAVE occurrence meaus that tile SUBJ(ect)of BEHAVE takes some concrete initiative (actsexplicitly) in order to fulfil the result ; if "merit" ispresent, as in Fig.
3, no concrete action is undertaken,and the "result" reflects only the wishes and desires ofthe SUBJ(ec0.4.
Inferences and NL processingEach of the four components ofNKRL is characterisedby the association with a class of basic inferenceprocedures.
For exmnple, the key inference mechanismfor the factual component is the Filtering andUnification Module (FUM).
The primary datastructures handled by bq3M are the "search patterns"that represent the general properties of an informationto be searched for, by filtering or unification, within aknowledge base of occun'ences.
The most interestingcomponent of tile FUM module is represented by thematching algorithm which unifies the complexstructures - -  like "(SPECIF summoning_l (SPECIFboard_meeting_l mediobanca_ special))" inoccurrence c2 of Fig.
1 - -  that, in the NKRLterminology, are called "structured arguments".Structured arguments are built up in a principled wayby making use of a specialised sub-language whichincludes four expansion operators, the "disjunctiveoperator", the "distributive operator", the "collectiveoperator",  and the "attr ibutive operator"(SPECIFication), see (Zaxli, 1996) for more details.The basic inference mechanisms call then be usedas building blocks for implementing all sort of highlevel inference procedures.
An example is given bythe "transformation rules", see (Ogonowski, 1987).NKRL's transformations deal with the problem ofobtaining aplausible answer from a database of factualoccurrences also in the absence of the explicitlyrequested infommlion, by searching semantic affinitiesbetween what is requested and what is really present infile base.
The fund,'unental principle employed is thento "transform" tile original query into one or moredifferent queries which - -  unlike "trmisfonned" queriesin a database context - -  are not strictly "equivalent"but only "semantically closC' to the original one.With respect now to the NL/NKRL translationprocedures, they are based oil file well-known principleof locating, within the original texts, the syntactic andsemantic indexes which can evoke the conceptualstructures used to represent these texts.
Ourcontribution has consisted in tile set up of a rigorousalgorithmic procedure, centred around the twofoUowing conceptual tools :?
The use of rules - -  evoked by particular lexicalitems in the text exmnined and stored in properconceptual dictionaries - -  which take the form ofgeneralised production rules.
The left hand side(,antecedent Par0 is always a syntactic ondition,expressed as a tree-like structure, which must beunified with the results of tile general parse treeproduced by the syntactic specialist of thetranslation system.
If the unification succeeds, tileright haud sides (consequent parts) ,are used, e.g., togenerate well-formed templates Ctriggering rules").?
The use, within file rules, of clever mechanisms todeal with the variables.
For example, in thespecific, "triggering" f,'unily of NKRL rules, theantecedent variables (a-variables) ,are first declaredin tile syntactic (antecedent) part of the rules, andthen "echoed" in tile consequent pro'is, where theyappear under the form of arguments and constraintsassociated with the roles of the activated templates.Theh" function is that of "capturing" - -  during thematch between file antecedents and the results ofthe syntactic specialist - -  NL or H_CLASS termsto be then used as specialisation terms lot fillingup the activated templates and building the finalNKRL structures.A detailed escription of these tools can be found,e.g., in (Zarri, 1995) ; see also Azzmn (1995).
Theirgenerality and their precise formal scmautics make itpossible, e.g., tile quickly production of useful sets ofnew rules by simply duplicating and editing theexisting ones.We reproduce now, Fig.
5, one of the severaltriggering rules to which tile lexical entry "call" - -pertaining to tile NL fragment examined at thebeginning of Section 3.
- -  contains a pointer, i.e.,one of tile rules corresponding to the meaning "toissue a call to convene".
This rule allows theactivation of a basic template (PRODUCE4.12) givingrise, at a later stage, to the occurrence c2 of Fig.
1 ;the x symbols in Fig.
5 correspond to a-variables.We can remark that all the details of the fulltemplate are not actually stored in the consequent,given that the H TEMP hierarchy is part of the"common shared ata stmctmes" used by the translator.Only the par,'uneters relating to tile specific triggeringrule ,'ue, therefore, really stored.
For exmnple, in Fig.5, the list "eonstr" specialises the constraints on some1034of the variables, while others - -  e.g., the constraintson the v,'uiables xl  (humanbeing/social_body) and x4(planning_activity) - - are unchanged with respect othe constraints permanently associated with thevariables of template PRODUCFA.
12.trigger: "call"syntactic condition:(s (subj (rip (noun xl)))(vcl (voice active) (t = x2 = call))(dir-obj(np (modifiers (adjs x31))(noun x3)(modifiers (pp (prep about I concerning I ... )(np (noun x4)(modifiers (pp (prep of I for ...)(np (noun x5))))))))))parameters for the template :(PRODUCE4.12 (roles subj xl  obj (SPECIF x2(SPECI F x3 x31)) +topic (specif x4 x5))(constr x3 assembly_ x31 quality_ x5modification_procedures))Figure 5.
An example of triggering rule.I I I  I I I  I mThe "standard" prototype of an NL/NKRLtranslation system - -  e.g., the COMMON LISPtranslator ealised in the NOMOS project - -  is arelatively fast system which take 3 min 16s on SunSparcStafion 1 wifll 16Mb to process a inedium-sizetext of 4 sentences and 150 wordfonns ; it takes 1 min06s for the longest sentence.
This pure conceptualparser, however, is not suitable, per se, for dealingdirectly with huge quantifies of unrestricted data.
In theCOBALT project, we have then used a commercialproduct, TCS (Text Categorisation System, byCarnegie Group) to pre-select from a corpus of Reutersnews stories those concerning in principle the chosendomain (financial news about merging, acquisitions,capital increases etc.).
The candidate news items (about200) have then been translated into NKRI, formal, andexamined through a query system in order to i) confirmtheir relevance ; ii) exlract heir main content elements(actors, circumstances, locations, dates, amounts ofshares or money, etc.).
Of the candidate news stories,80% have been (at least partly) successfiflly translated ;"at least p,'u'fly" metals that, somethnes, the translationwas incomplete due, e.g., to the difficulty ofinstantiating correctly some binding structures.
Otherquantitative information about the COBALT resultscan be found in (Azzmn, 1995 ; Zarri, 1995).5.
ConclusionPossible, general advantages of NKRL withrespect o other formalisms that also claim to be ableto represent extensive chunks of semantics, see, e.g.,(Lehmann, 1992), are at least the following :?
The addition of a "taxonomy of events" to thetraditional "taxonomy of concepts" : often,"normal" ontologies elude in fact lhe problem ofrepresenting how the concepts interact with eachother in the context of real-life events.
Recently,Park (Park, 1995) has prcsemed a language whichprovides a set of ontological primitives to be usedto model the dynamic aspects ("events") of adomain, llowever, Park's system seems to be avery "young" onc, and it lacks of tools fordcscribing essential narrative features like therelationships betwecn events, the temporalinformation, etc.The presence of a catalogue of standard, basictemplates, which can be considered as part andparcel of the definition of the language.
Thisimplies that : i) a system-builder does not have tocreate himself the slrnctural knowledge needed todescribe the events proper to a (sufficiently) largeclass of m~afive documents ; ii) it becomes easierto secure the reproduction and the sharing ofprevious results.ReferencesAzzam, S. (1995).
"Anaphors, PPs and DisambignationProcess for (?onceptnal Analysis".
In Proceedings ofthe 14th International Joint Conference on ArtificialIntelligence.
Morgan Kaufinann, San Mateo (CA).Itwang, C.II., and Schubert, I,.K.
(1993).
"Meeting theInterlocking Needs of LF-Computation, Deindexingand Inference: An Organic Approach to General NI,U".In Proceedings of the 13th International JointConference on Artificial Intelligence.
MorganKaufinann, San Mateo (CA).Nazarenko-Perrin, A.
(1992).
"Causal Ambiguity inNatural Langnage: Conceptual Representation f 'parceque/because' and 'puisqne/since'".
In Proceedings ofthe 151h International Cot(erence on ComputationalLinguistics (COLIN(; 92), Nantes, fTrance.l.ehmann, F., editor (1992).
Semantic Networks inArtificial Intelligence.
Pergamon Press, Oxford.Ogonowski, A.
(1987).
"MENTAT : An Intelligent andCooperative Natural Lauguage DB Interface".
InProceedings of the 7th Avignon InternationalConference on Expert Systems and Their Applications(Avignon '87), vol.
2.
EC2 & Cie., Paris.Park, B.J.
(1995).
"A Language for Ontologies Based onObjects and Events".
In Proceedings of the IJCAI'95Workshop on Basic Ontological Issues in KnowledgeSharing.
l)epartmeut of Computer Science of theUniversity of Ottawa.Zarri, G.P.
(1992a).
"Encoding the TemporalCharacteristics of the Natural Language Descriptionsof (Legal) Situations".
In A. Martino, editor, ExpertSystems in Law.
Elsevier Science, Amsterdam.Zarri, G.P.
(1992b).
"The 'Descriptive' Comt~neut of allybrid Knowledge Representation Language".
In F.Lehmann, editor, Semantic Networks in ArtificialIntelligence.
Pergamon Press, Oxford.Zarri, G.P.
(1995).
"Knowledge Acquisition fromComplex Narrative Texts Using the NKRLTechnology".
In B.R.
Gaines and M. Musen, editors,Proceedings of the 9th Banff Knowledge Acquisitionfor Knowledge-Based Systems Workshop, vol.
1.l)epartment of Computer Science of the University ofCalgary.Zan'i, G.P., and Gilardoni, L. (1996).
"Structuring andRetrieval of the Complex Predicate Arguments Properto the NKRL Conceptual I,anguage".
In Proceedings ofthe Ninth International Symposiunt on Methodologiesfor Intelligent Systems (ISM1S'96).
Springer-Verlag,Berlin.1035
