Analyzing the ExplanationStructure of Procedural Texts:Dealing with Advice andWarningsLionel FontanPatrick Saint-DizierIRIT, Toulouse (France)email: stdizier@irit.frAbstractWe present the explanation structure of procedural texts, focusing on theanalysis of argumentation, in particular advice and warnings.
Their role isto support and motivate the goal-instruction structure, which is the skele-ton of procedural texts.
Procedural texts consist of a sequence of instruc-tions, designed with some accuracy in order to reach a goal (e.g.
assemblea computer).
Procedural texts may also include subgoals.
Goals and sub-goals are most of the time realized by means of titles and subtitles.
Theuser must carefully follow step by step the given instructions in order toreach the goal.
We introduce the notion of instructional compound, whichis a complex structure that articulates instructions with various discourseelements.
We then show how arguments can be extracted with the help ofpatterns.
We finally investigate their contribution to the structure and theunderstanding of procedural texts.115116 Fontan and Saint-Dizier1 IntroductionThe main goal of our project is to analyze the structure of procedural texts in order toefficiently and accurately respond to How-to-do-X?
questions.
This means identifyingtitles (which convey the main goals of the procedure), sequences of instructions serv-ing these goals, and a number of additional structures such as prerequisites, warnings,advice, illustrations, etc.
(Takechi et al 2003, Adam, 2001).
A response to an How-toquestion is then the well-formed text portion within the scope of the title that matchesthe question.In our perspective, procedural texts range from apparently simple cooking recipesto large maintenance manuals.
They also include documents as diverse as teachingtexts, medical notices, social behavior recommendations, directions for use, assemblynotices, do-it-yourself notices, itinerary guides, advice texts, savoir-faire guides etc.
(Aouladomar et al, 2005).
Procedural texts follow a number of structural criteria,whose realization may depend on the author?s writing abilities, on the target user,and on traditions associated with a given domain.
Procedural texts can be regulatory,procedural, programmatory, prescriptive or injunctive.
The work we report here wascarried out on a development corpus of 1,700 French texts taken from the Web frommost of the areas cited above, and extracted randomly from our more global corpus of8,000 texts.We have developed a detailed analysis of procedural texts from a manual corpusanalysis, identifying their main basic components as well as their global structure.For that purpose, we have defined two levels: a segmentation level that basically iden-tifies structures considered as terminal structures (titles, instructions, prerequisites,connectors, etc.)
and a grammar level that binds these terminal structures to give aglobal structure to procedural texts (Delpech et al 2008).
This structure is textual anddedicated only to elements relevant to procedurality.
To design the grammar, we haveborrowed a few considerations from Minimalist syntax, in particular recent develop-ments of X-bar syntax and notions like merge.
This point will not be developed here(but see Delpech et al 2007).
Note that text grammars are generally in a relativelyearly development stage (Webber 2004, Gardent 1997).Procedural texts are complex structures, they often exhibit a quite complex rational(the instructions) and ?irrational?
structure which is mainly composed out of pieces ofadvice, conditions, preferences, evaluations, user stimulations, etc.
They form whatwe call the explanation structure, which motivates and justifies the goal-instructionsstructure, viewed as the backbone of procedural texts.
A number of these elementsare forms of argumentation, they appear to be very useful, sometimes as important asinstructions, they provide a strong and essential internal cohesion and coherence toprocedural texts.An important aspect of this project is the accurate identification of the explana-tion structure as found in procedural texts in order to better understand explanationstrategies deployed by humans in precise, concrete and operational situations and totranspose it to the generation of explanations in general and in cooperative question-answering systems in particular.
We have already studied the instructional aspectsof procedural texts and implemented a quite efficient prototype within the TextCoopproject (Delpech et al 2008) that tags titles and instructions with dedicated XMLtags.
In this paper, after a categorization of explanation structure as found in our cor-Analyzing the Explanation Structure of Procedural Texts 117pus of procedural texts, and the presentation of instructional compounds, we focus onthe recognition of warnings and advice.
The work is realized for French, examples inEnglish are just glosses.2 The explanation structure in procedural textsWe will introduce two independent structures: the general organization of the expla-nation structure, and the notion of instructional compound.2.1 A global view of the explanation structureProcedural texts have a very rich semantic structure, with a large number of facets.From our development corpus (1,700 web texts of 1?3 pages), we established a clas-sification of the different forms explanations may take.
The explanation structure ismeant to guide the user in two ways: (1) by making sure that he will effectively real-ize actions as they are specified, via arguments (Amgoud et al 2001, 2005) such asthreats, rewards, advice and warnings which are ?coercitive?
in a certain sense, and (2)help considerations such as evaluation of work realized so far and encouragements ofdifferent kinds.The main structures we have identified in this type of text are facilitation and argu-mentation structures.
They are either global (adjoined to goals, and having scope overthe whole procedure) or local, included into instructional compounds, with a scopelocal to the instructional compound (see next section).
The latter is by far the mostfrequently encountered case.Explanation structures can be organized as follows (the terminology is borrowedfrom existing work on rhetorical relations or introduced by ourselves):?
facilitation structures, which are rhetorical in essence (Kosseim et al 2000,Vander Linden 1993), correspond to How to do X?
questions, these include twosubcategories:1. user help, with: hints, evaluations and encouragements;2. controls on instruction realization, with two cases:(a) controls on actions: guidance, focusing, expected result and elabora-tion;(b) controls on user interpretations: definitions, reformulations, illustra-tions and also elaborations.?
argumentation structures, corresponding to Why do X?
questions.
These haveeither:1. positive orientation with the author involvement (promises) or not (adviceand justifications), or2.
negative orientation with the author involvement (threats) or not (warn-ings).In what follows, we will mainly concentrate on this second point, and in partic-ular on warnings and advice which are the most frequently encountered arguments(since there are rarely involvements from the author).
Roughly, we have about 25%118 Fontan and Saint-Dizierof instructions which have arguments in do-it-yourself texts, and up to 60% in socialprocedural texts.
Argumentation structures are relatively general to an application do-main, while facilitation structures are much more specific to the text and the targetedaudiences.2.2 From instructions to instructional compoundsIn most types of texts, we do not just find sequences of simple instructions but morecomplex compounds composed of clusters of instructions, that exhibit a number of se-mantic contextual dependencies between each other, that we call instructional com-pounds.
These compounds are organized around a few main instructions, to whicha number of subordinate instructions, warnings, arguments, and explanations of var-ious sorts may possibly be adjoined.
All these elements are, in fact, essential in acompound for a good understanding of the procedure at stake.An instructional compound has a very rich, but relatively well organized, discoursestructure, composed of several layers, which correspond to the different aspects in-structions may have.
The structure is the following:?
The goal and justification level, which has in general wider scope over the re-mainder of the compound.
It indicates motivations for doing actions that followin the compound (e.g.
You must regularly clean the curtains of your bedroom:to do this ...; To change your mother card, you must..., which here motivatesactions to undertake).
It gives the fundamental motivation of the compound.Compared to titles, these introduce very local goals.
These are not consideredin the goal hierarchy introduced by titles, and they will not be considered forquestion answering.?
The instruction core (or kernel) structure, which contains the main instruc-tions.
These are more or less explicitly temporally organized (see below).
Ingeneral simple sequentiality prevails, the goal being to limit the intellectual loadimposed to the user.
Actions are identified most frequently via the presence ofaction verbs (in relation to the domain) in the imperative form, or in the infinitiveform introduced by a modal (Delpech et al 2008).
We observed also a numberof subordinated instructions forms adjoined to the main instructions.
These arein general organized within the compound by means of rhetorical relations, asthe examples below will illustrate.?
The deontic and illocutionary force structures: consist of marks that oper-ate over instructions, outlining different parameters.
These linguistic structuresplay a major role in argumentation:?
deontic: obligatory, optional, forbidden or impossible, alternates (or),?
illocutionary and related aspects: stresses the importance of actions: nec-essary, advised, recommended, to be avoided, etc.
These marks are crucialto identify the weight of an argument.?
a temporal structure that organizes sequences of instructions (and, at a higherlevel, instructional compounds).
In general, the temporal structure is simple,Analyzing the Explanation Structure of Procedural Texts 119sequentiality prevails.
In some cases, parallel actions are specified, which par-tially overlap.
Action verbs may indicate some form of parallelism of actions(incorporate and stir).
In other cases it is the user?s experience that determinesthe exact temporal interpretation.?
The conditional structure: introduces conditions over instructions within thecompound or even over the whole instructional compound.
We encounter quitea lot of structures organizing mutually exclusive cases If you are pregant, takemedicine X ..., if you are not pregnant and between 19 and 65, it is advised thatyou take medecine Y, ...?
The rhetorical structure whose goal is to enrich the core instructions by meansof a number of subordinated aspects (realized as propositions, possibly instruc-tions) among which, most notably: enablement, basic forms of motivation, cir-cumstance, elaboration, instrument, precaution, manner.
A group of relationsof particular interest in this paper are arguments, developed hereafter.?
The causal structure indicating the goal of an action.
We identified in pro-cedural texts four types of causal relations, following (Talmy 2001): intend-to(direct objective of an action: push the button to start the engine), Instrumented(use a 2 inch key to dismount the door), Facilitation (enlarge the hole to bet-ter empty the tank) and Continue (keep the liquid warm till its color changes).These are local to a single instruction, with no a priori interaction with the goalor justification level advocated above.Explanations and arguments help the reader understand why an instruction must befollowed and what are the risks or the drawbacks if he does not do it properly.
Wewill illustrate this with two instructional compound examples.
In the first example, wehave three main instructions, and an elaboration is adjoined to the second one.
Thetemporal relations are simple (realized by then, and) and are not represented:[instructional?compound[instruction The first step consists in opening the computer box,][instruction then to place it on a large, clean surface,[elaboration or precaution where you make sure there is no risk todamage electronic components,]][instruction and then to withdraw all the caches at the PC front.
]]In the second example, an argument of type advice is introduced; it is composed oftwo instructions (later called conclusions) and a conjunction of three supports whichmotivate the two instructions.
[instructional?compound[goal To clean leather armchairs,][argument:advice[instruction choose specialized products dedicated to furniture],[instruction and prefer them colorless,][support they will play a protection role, add beauty, and repairsome small damages.
]]]120 Fontan and Saint-DizierIdentifying rhetorical relations in this type of text is not straightforward.
Some rela-tions have a fewmarks associated whereas others are largely pragmatic and need someknowledge of the domain to be identified by a reader.
We observed a few, partial, hi-erarchical relations between the items that build up an instructional compound.
Scopepriorities come in three groups.
The first group is composed of goals and conditions,then, at a second level come causal, deontic and illucotionary elements operating overinstructions.
At the lower level, we have subordinated instructions, attached to thecore instructions.2.3 Implementation of instructional compoundsThe actual schema for recognizing instructional compounds is quite simple at the mo-ment, but results are quite satisfactory.
Basically, such a compound contains at leastone instruction.
It is then delimited as follows:?
any element in an enumeration (typographically marked) is an instructionalcompound,?
in a paragraph which is not an enumeration, an instructional compound is de-limited by expressions which induce an idea of strong break (even though thisterm is quite fuzzy).
Such marks are for example: goal or conditional expres-sion, end of paragraph, strong temporal mark (after two hours, when this is over,at the end of, and so on).We have manually annotated 160 procedural texts.
This is not an easy task dueto the complexity of the structures at stake.
Then these were compared with resultsobtained automatically.
These will be used fully or in part to test the system.
Weselected texts we understand so that the risk of errors is limited as much as possible.This is presented in detail in (Delpech et al 2008) where Kappa tests are realized toevaluate the homogeneity of human judgements.For instructional compounds, for the three domains with best title and instructionrecognition rate (do it yourself, cooking, and social life), we obtained the followingresults, based on a small corpus of data (60 texts):Domain Recall Precisioncooking receipes 0.95 1.00do it Yourself 0.89 0.98social life 0.88 0.98We have not yet attempted to implement an efficient system, but we are able to fullytag about 500 million web pages per hour, on a Pentium 4 3GhZ dual core machinewith 4 Gigabyte RAM.
This process includes cleaning web pages, running TreeTagger,and tagging titles, instructions and instructional compounds.3 Identifying arguments in proceduresIn this section let us first give a quite informal definition of what an argument is, andhow it interacts with the goal-instructions structure.
Let us then focus on warnings andadvice which are, by far, the most frequently encountered structures.
Most warningsand advice are included into instructional compounds.Analyzing the Explanation Structure of Procedural Texts 1213.1 Argumentation and Action theoriesRoughly, argumentation is a process that allows speakers to construct statements foror against another statement called the conclusion.
These former statements are calledsupports.
The general form of an argument is: Conclusion ?because?
Support (notedas C because S).
In natural language, conclusions usually appear before the support,but they may also appear after, to stress the support.
A conclusion may receive sev-eral supports, possibly of different natures (advice and warnings): don?t add naturalfertilizer, this may attract insects, which will damage your young plants.
Argumentsmay be more or less strong, they bear in general a certain weight, mostly induced fromthe words they contain or from their syntactic construction (Anscombre et al 1981,Moeschler 1985, Amgoud et al 2001).
In natural contexts, this weight is somewhatvague.In the case of procedural texts, the representation and the role of arguments in atext can be modeled roughly as follows.
Let G be a goal which can be reached by thesequence of instructions Ai, i ?
[1,n], whatever their exact temporal structure is.
Anyinstruction Ai is associated with a pair (gi, pi) where gi is the gain associated with Ai(there is a gain only in case where Ai is a piece of advice, improving G) and pi is thepenalty in case where the user (partly of fully) fails to realize Ai.A subset of Ai are interpreted as explicit arguments (Ai, is a conclusion) when theyare explicitly paired with a support Si that stresses the importance of Ai (Carefullyplug in your mother card vertically, otherwise you will damage the connectors) orwhen advice is given.
Their general form is: A j because S j (we use here the term?because?
which is more vague than the implication symbol used in formal argumen-tation, because natural language is not so radical).
Supports Sk which are negativelyoriented are warnings whereas those which are positively oriented are pieces of ad-vice.
Neutral supports simply introduce explanations which are not arguments.
Forthe other instructions, the support is just implicit (do the action otherwise you will runinto problems).Similarly to the principles of argumentation theory, but within the framework ofaction theory (e.g.
Davidson 1963), it is a priori possible to evaluate for a givenrealization of the instructions, the gains w.r.t.
the goal G (when advice is followed,improving G) and the penalties (when actions are not well performed, with or withoutwarnings).
In an abstract model, we can assign each instruction a gain and a penalty,however in practice this is a little bit difficult.
At the moment, let?s say that gains area priori null, except when we have an instruction of type advice which is realized,in that case the gain is greater or equal to 1.
Penalties are numbers greater than 0,high penalties corresponding to very crucial instructions.
If an instruction is correctlyrealized, penalty is 0, if there is a complete failure, penalty is the assigned number,which may be infinite if the instruction is absolutely crucial.Given a certain realization by a user, the success of a goal G is the sum of the gainson the one hand, and the sum of the penalties on the other.
Gains and penalties do notcompensate each other but operate at different levels.
Since any Ai is in fact realizedsuccessfully to a certain degree by the user, gains and penalties (which are valuesgiven a priori) need to be weighted, i.e.
paired with a success measure, respectively?
and ?, each of these weights being included in [0,1].
Then, for a given execution ofthe goal G, we have:122 Fontan and Saint-Diziergain(G) = ?ni=1 gi ?
?i penalty(G) = ?ni=1 pi ?
?iAs can be noted, our definitions include terms which are gradual: ?more difficult?,?easier?, because in practice, failing to realize an instruction properly does not neces-sarily means that the goal cannot be reached, but the user will just be less successful,for various reasons.
In the natural language expressions of conclusions (the A j) aswell as of supports, there are many modals or classes of verbs (like risk verbs) thatmodulate the consequences on G, contrast for example:use professional products to clean your leathers, they will give them abrighter aspect.with:carefully plug in your mother card vertically, otherwise you will mostlikely damage its connectors.In the latter case, the goal ?mounting your own PC?
is likely to fail (the instructionat stake will be assigned a high penalty), whereas in the former, the goal ?cleaningyour leathers?
will just be less successful, but there is a gain gi associated.3.2 Processing argumentsFrom the above observations, we have investigated the different forms arguments maytake and how they are realized in French.
We noted that, in a very large numberof cases, arguments in procedural texts can be identified by means of specific terms,i.e.
there is no need to make complex parses or inferences.
For most of them, theyare embedded into instructional compounds, it is therefore quite easy to delimit them.Their scope is in general the compound, and their delimitation is quite simple.
Most ofthe time, arguments are introduced by a goal or a cause connector.
They are quite ofteneither a complete, independent sentence following an instruction, or a subordinatedclause ending a sentence.
As a result, their recognition is relatively well portable fromone procedural domain to another, with only mainly generic vocabulary involved.We have defined a set of patterns that recognize instructions which are conclusionsand their related supports.
We defined those patterns from a development corpus ofabout 1,700 texts from various domains (cooking, do it yourself, gardening, videogames, social advice, etc.).
The study is made on French, English glosses are givenhere for ease of reading.
The recognition problem is twofold: identifying propositionsas conclusions or supports bymeans of specific linguistic marks and a few typographicmarks, and then delimiting these elements.
In general, boundaries are either sentencesor, by default, instructional compound boundaries.
In procedural texts, roughly, theproportion of advice and warnings is almost equivalent.Processing warningsWarnings are basically organized around a unique structure composed of an ?avoidexpression?
combined with a proposition.
The variations in the ?avoid expressions?capture the illocutionary force of the argument via several devices, ordered here byincreasing force:1.
?prevention verbs like avoid?
NP / to VP (avoid hot water)Analyzing the Explanation Structure of Procedural Texts 1232. do not / never / ... VP(infinitive) ... (never put this cloth in the sun)3. it is essential, vital, ... to never VP(infinitive).In cases where the conclusion is relatively weak in terms of consequences, it may nothave any specific mark, its recognition is then based on the observation that it is theinstruction that immediately precedes an already identified support.Supports are propositions which are identified from various marks: (a) via connec-tors such as: otherwise, under the risk of, etc., in French: sinon, car, sous peine de, aurisque de or via verbs expressing consequence; (b) via negative expressions: in ordernot to, in order to avoid, etc.
; (c) via specific verbs such as risk verbs introducingevents (you risk to break) ?
in general the embedded verb has a negative polarity; (d)via the presence of very negative terms, such as: nouns: death, disease, etc., adjec-tives, and some verbs and adverbs.
We have a lexicon of ca.
200 negative terms foundin our corpora.Some supports have a more neutral formulation: they may be a portion of a sen-tence where a conclusion has been identified.
For example, a proposition in the futuretense or conditional following a conclusion is identified as a support.
However, somesupports may be empty, because they can easily be inferred by the reader.
In that case,the argument is said to be truncated.Patterns are implemented in Perl and are included into the global system (theTextCoop software).
From the above observations, with some generalizations andthe construction of lexicons of marks, we have summarized the extraction processin only eight patterns for supports and three patterns for conclusions.
Arguments aretagged by XML tags.
We carried out an indicative evaluation (e.g.
to get improvementdirections) on a corpus of 66 texts over various domains, containing 262 arguments.We get the following results for warnings: (supports well delimited are with respectto warnings correctly identified):Conclusion Support Conclusions Supportsrecognition recognition well delimited well delimited88% 91% 95% 95%Processing adviceConclusions of type advice are identified essentially by means of two types of pattern(in French):1. advice or preference expression followed by an instruction.
The preferenceexpression may be a verb or a more complex expression: is advised to, prefer, itis better, preferable to, etc.;2.
expression of optionality or of preference followed by an instruction: our sug-gestions: ..., or expression of optionality within the instruction (use preferablya sharp knife).In addition, as for warnings, any instruction preceding a support of type advice isa conclusion.
Supports of type advice are identified on the basis of 3 distinct types ofpattern:124 Fontan and Saint-Dizier1.
Goal exp + (adverb) + positively oriented term.
Goal expressions are e.g.
: inorder to, for, whereas adverb includes: better, more (in French: mieux, plus,davantage), and positively oriented term includes: nouns (savings, perfection,gain, etc.
), adjectives (efficient, easy, useful, etc.
), or adverbs (well, simply, etc.
).For this latter class of positively oriented terms we constructed a lexicon thatcontains about 50 terms.2.
Goal expressions with a positive consequence verb (favor, encourage, save,etc.
), or a facilitation verb (improve, optimize, facilitate, embellish, help, con-tribute, etc.),3.
The goal expression in (1) and (2) above can be replaced by the verb ?to be?
inthe future: it will be easier to locate your keys.A short example of an annotated text is given in Figure 1 below.
Similarly as above,we carried out an indicative evaluation on the same corpus with 68 texts containing240 manually identified pieces of advice (again, delimitation results are calculatedwith respect to advice correctly identified):Conclusion Support Conclusions Supports Support/Conclusionrecognition recognition well delimited well delimited correctly related79% 84% 92% 91% 91%As the reader may note, results are less satisfactory than for warnings.
This ismainly due to the fact that advice is expressed in a much ?softer?
way than warnings,with less emphasis and strength, therefore, terms typical of advice are not necessarilystrongly marked, when present.
[procedure[title How to embellish your balcony[Prerequisites 1 lattice, window boxes, etc.]
...[instructional?compound In order to train a plant to grow up a wall, select first a sunny area,clean the floor and make sure it is flat...[Argument [Conclusion:Advice You should better let a 10 cm interval between the wall and thelattice.
][Support:Advice This space will allow the air to move around, which is beneficial for thehealth of your plant.]
... ]]]]Figure 1: An annotated procedureThe terms involved in advice as well as warning patterns are mostly domain inde-pendent, they are also quite limited in number.
Their variations are mainly due to theauthor?s style and the target audience.
Finally, it seems that our extraction mechanismcan be used to extract arguments in a large number of non-procedural texts such asnews.
This is very tentative but a few tests on French news indicates an accuracy ofabout 75%, but these also contain a few rewards and threats.
We get really good resultswith teaching texts, which may be felt to be at the boarder line of procedural texts, butwhich contain quite a lot of reward expressions since interactions are more prominent(with the teacher).
In terms of multilinguality, we are at the moment developing thesame approach for Thai (at Kasetsart univ., Bangkok) applied to the treatment of rice.Analyzing the Explanation Structure of Procedural Texts 125[instructional?compound En decembre-janvier, effectuer la taille d?
?quilibrage et de net-toyage de vos arbres.
[Argument [Conclusion:warning La premi?re ann?e de fructification, ?liminer tous lesfruits au moment o?
ils se d?veloppent,][Support:warning Cela ?vite d?
?puiser l?arbre.]
... ]]Figure 2: Annotated warning (gloss: In December-January, make the first pruningand cleaning of your trees.
The first year with fruits, eliminate all fruits, this avoidsthe tree to run out.
)[instructional?compound [goal Les ?tag?res de votre meuble doivent ?tre lisses.
[Argument [Conclusion:advice Utilisez si possible une ponceuse ?lectrique,][Support:advice Ce sera beaucoup plus rapide et vraiment moins fatigant.]
...]]Figure 3: Anotated advice (gloss: The shelves of your furniture must be very smooth.Use if possible an electric sander, this will be faster and less tiring.
)3.3 Dealing with empty supportsConsidering do-it-yourself and gardening texts, we noted that about 2/3 of the argu-ments are not supported.
This very large number of unsupported arguments, in suchtypically procedural texts, can be explained by several factors: (1) procedural texts aremore oriented towards action than control, (2) some supports, possibly complex, couldin fact introduce doubts or confusions, (3) some explanations (supports) may be toocomplex to be understood by a casual user, and (4) supports are sometimes sufficientlyexplicit in the conclusions (do not scatter seeds by high winds!
= they won?t go whereyou want them to go).
In socially-oriented procedural texts, supports are often muchmore explicit, but this may differ depending on the author?s style.We noted that realized supports correspond to two main trends: (1) supports thatexpress general requirements such as: efficiency of actions, security, ease of execution,adequate execution, speed, aesthetics, lower cost, etc.
and (2) supports that cover moreprecise, domain dependent situations (avoid pruning trees when temperature dropsbelow zero).Reconstructing empty support is still under research, let us note here the still verytentative directions we are investigating, which require different forms of inference.For empty supports corresponding to general requirements, we infer a generic supportbased on those requirements, e.g.
: mounting your computer: use a flat and clean sur-face.
induced support: ?for a better ease of execution?.
From our observations (whichneed further confirmation), generic supports are in general triggered by adjectives orby general purpose verbs used in the conclusion.The second situation (empty support in a domain dependent situation) is more del-icate and requires domain or lexical knowledge.
We are investigating the use of prin-ciples of the Generative Lexicon (Pustejovsky 1991) for that purpose.
Very briefly,wind has in its telic role several predicates like push, take away, scatter, disperse,break, damage, ....
When applied e.g.
to gardening, such as planting new flowers,since these are not so mobile when planted, a predicate like break or damage can be126 Fontan and Saint-Dizierselected (selection principles in the Generative lexicon remain however an open andvery delicate problem).
Then, from a statement such as: avoid planting flowers byhigh winds the support: because wind will damage or break flowers can be inferred.4 PerspectivesThe work presented here complements the tagging of titles and instructional com-pounds in procedural texts of various domains, as reported in (Delpech et al 2007,2008).
It allows us to have a quite comprehensive analysis of procedural texts, whichturn out to have a very rich structure.
Annotated corpus is available on request.
Weplan to include in our system the treatment of conditional expressions realized in(Bouffier et al 2007), since we have not studied this phenomenon (and the associ-ated scoping problems).
We will then examine how illocutionary force is expressed.Finally, we plan to investigate the main lines of the facilitation structure.We analyzed the forms arguments of type advice and warning may take, and haveimplemented and tested a system that tags those structures and attempts at reconstruct-ing empty supports.
At this level, there is still linguistic and formal work to be carriedout, for example to evaluate the illocutionary force of arguments and to better settlethis work within action theory.
We believe we have a very useful corpus of examplesof arguments, of much interest for research in argumentation theory.
An importantresult is that arguments can be recognized on the basis of relatively simple parameter-ized patterns.
The terms involved in those patterns are mostly domain independent.They may just vary depending on the author?s style and the target audience.
Finally,it seems that our extraction mechanism can be used to extract arguments in a largenumber of non-procedural texts such as news.Besides studying the textual structure of procedural texts and responding to How-to questions from the analysis of these texts, a major application of this work is theconstruction of domain know-how knowledge base, quite basic but which could besubject to interesting generalizations.
Obviously, to make this knowledge optimal, itwould be useful to associate with every statement a formal representation that supportsinference, data fusion, etc.
This domain know-how knowledge base of advice, hintsand warnings is of much importance for different types of users who have a procedureto realize a task but who want to know more before starting.
Some psychologicalexperiments have shown that, besides instructions given in procedural texts, users arevery much interested in what remains implicit in those texts: what you are supposed toknow or care about (but have no means to ask).
Although there are already available,but manually constructed, such bases of advice, it is of much interest to construct itautomatically, using the instructional compound as an advice unit.Acknowledgements This paper relates work realized within the French ANR projectTextCoop.
We thank its partners for stimulating discussions.
We also thank LeilaAmgoud and Daniel Kayser for very useful discussions on this work.
Finally, we arevery grateful to three reviewers for their detailed comments which helped improve andclarify this paper.Analyzing the Explanation Structure of Procedural Texts 127ReferencesAdam, J.M., Types de Textes ou genres de Discours?
Comment Classer les Textes quiDisent De et Comment Faire, Langages, 141, pp.
10?27, 2001.Amgoud, L., Bonnefon, J.F., Prade, H., An Argumentation-based Approach to Mul-tiple Criteria Decision, in 8th European Conference on Symbolic and QuantitativeApproaches to Reasoning with Uncertainty, ECSQARU?2005, Barcelona, 2005.Amgoud, L., Parsons, S., Maudet, N., Arguments, Dialogue, and Negotiation, in: 14thEuropean Conference on Artificial Intelligence, Berlin, 2001.Anscombre, J.-Cl.
Ducrot, O., Interrogation et Argumentation, in Langue francaise,no 52, L?interrogation, 5 - 22, 1981.Aouladomar, F., Saint-Dizier, P., An Exploration of the Diversity of Natural Argumen-tation in Instructional Texts, 5th International Workshop on Computational Models ofNatural Argument, IJCAI, Edinburgh, 2005.Bouffier, A., Poibeau, T., Re-engineering free texts to obtain XML documents: a dis-course based approach, RANLP 2007.Delin, J., Hartley, A., Paris, C., Scott, D., Vander Linden, K., Expressing ProceduralRelationships in Multilingual Instructions, Proceedings of the Seventh InternationalWorkshop on Natural Language Generation, pp.
61-70, Maine, USA, 1994.Davidson, D., Actions, Reasons, and Causes, Journal of Philosophy, 60, 1963Delpech, E., Murguia, E., Saint-Dizier, P., A Two-Level Strategy for Parsing Procedu-ral Texts, VSST07, Marrakech, October 2007.Delpech, E., Saint-Dizier, P., Anonymous, Investigating the Structure of ProceduralTexts for Answering How-to Questions, LREC 2008, Marrakech.Gardent, C., Discourse tree adjoining grammars, report nb.
89, Univ.
Saarlandes,Saarbrucken, 1997.Kosseim, L., Lapalme, G., Choosing Rhetorical Structures to Plan Instructional Texts,Computational Intelligence, Blackwell, Boston, 2000.Moeschler, J., Argumentation et Conversation, El?ments pour une Analyse Pragma-tique du Discours, Hatier - Cr?dif, 1985.Pustejovsky, J., The Generative Lexicon, Computational Linguistics, 17(4), 1991.Takechi, M., Tokunaga, T., Matsumoto, Y., Tanaka, H., Feature Selection in Cate-gorizing Procedural Expressions, The Sixth International Workshop on InformationRetrieval with Asian Languages (IRAL2003), pp.
49?56, 2003.Talmy, L., Towards a Cognitive Semantics, vol.
1 and 2, MIT Press, 2001.Vander Linden, K., Speaking of Actions Choosing Rhetorical Status and GrammaticalForm in Instructional Text Generation Thesis, University of Colorado, 1993.Webber, B., D-LTAG: extending lexicalized TAGs to Discourse, Cognitive Science28, pp.
751?779, Elsevier, 2004.
