A TWO-WAY APPROACH TO STRUCTURAL TRANSFER IN MTRebecca RootLinguistic.s Research CenterUniversity of TexasP.O.
Box 7247Austin, Texas 78712USAAbst ractThe METAL machine translation project incorporates twomethods of structural transfer - direct transfer and transfer bygrammar.
In this paper I discuss the strengths and weaknessesof these two approaches in general and with respect to theMETAL project, and argue that, for many applications, acombination of the two is preferable to either alone.1.
In t roduct ionOne of the central design questions in machine translation isthat of the best method of structural transfer, that is, theconversion from the syntactic analysis structure of the sourcelanguage to the syntactic generation structure of the targetlanguage.
Although several of the various approaches to this -interlingua, transfer grammar, and direct transfer \[Slocum, 84\] -share a number of properties which reader a choice among themof relatively little consequence, there is at least one point ofvariance that can have significant practical ramifications.
Thisis the choice between the ~ of an independent grammar, as onefinds in the interlingua nd tran~er grammar approaches, anddirect transfer, where transfer specifications are tied directly tosource language structures.
Since each method has itsadvantages and disadvantages, there is no b~-qi~ for favoring oneover the other, independent of a particular application.However, it is highly likely that for a system with any significantrange of application, neither approach will be completelysatisfactory.
Furthermore, decisions made in the design of othercomponents of the system may render a homogeneous approachto transfer impractical.
For both of these reasons, we haveimplemented in METAL a scheme for transfer which issufficiently flexible to allow for the use of both direct transferand transfer by grammar.
This is done in such a way as to putcontrol of the interaction in the hands of the grammar writer,allowing him to take maximum advantage of the strengths ofeach approach.in the following, I will contrast he strengths and weaknessesof the two methods mentioned above and illustrate how acombination can inherit the advantages of each by discu~ing ourexperiences with a combined system in METAL.
For the sake ofclarity, I will first give an overview of the METAL architecture.2.
Overv iew of  METALMETAL is a machine translation system designed for thetranslation of technical texts.
Currently, it is implemented forGerman to English translation, but preliminary work has begunon other language pairs.
These efforts indicate that, by andlarge, the design is suitable for application to multiple sourceand target languages, and work is in progress to make thiscompletely so.Translation proceeds in three phases: analysis, integration,and transfer.
The analysis phase consists of parsing the inputsentence and building a phrase structure tree annotated withvarious grammatical features.
Anaphoric links are resolvedduring the integration phase \[Weir, 1985\].
During the transferphase, the parse tree is structurally and lexicslly modifiedaccording to target language specifications.
The output sentenceis gotten by reading the terminal nodes of this tree.Our basic method of structural transfer is a fairly directtransfer.
Rather than using a separate transfer grammar,transfer instructions are associated with each rule of the analysisgrammar.
W"hen an analysis rule applies to build a node, storedon that node, along with grammatical features, is the set oftransfer instructions associated with that rule.
After integration,the selected parse tree is traversed from top to bottom, executingthe transfer instructions associated with each node.
Theinstructions typically consist of such things as feature passing,constituent reordering instructions, tree traversal messages, andlexical transfer instructions.
Since the grammar writer chooseswhat transfer instructions to include and how to order them, hehas significant control over the flow of the transfer procedure.An  example of such a rule is given here.
This is a rule forparsing German prepositional phrases.
I have left out thevarious TEST,  CONSTRuct ion  and INTEGRat ion instructionsrelating to analysis and integration.
See \[Bennett, 1983\] for acomplete description of the grammar component.
Commentsexplaining the English transfer instructions are given in italics.PP PP.EP NP1 2TESTCONSTRI lCTE~~gGT.ISH(SEF 1 CA GC) father's CAse becomes f irstson 'e Grammatical Case(XFR) transfer the sons,i.e.
descend the tree(Am)(INT 1 P0 POST) i f  f i rst son hae \]:~)sition POST,(XFM FLIP))  make it follow the second sonThe prepoaition's value for GC is updated because this canresolve English transfer ambiguities.
After this modification, thesons are transferred according to the English instructions foundon their nodes.
After transfer, the preposition, now with Englishfeatures becanse the node has been transferred, is checked for itsposition requirements.
If it is a postposition, it is placed after70the noun phrase.
For example, the structure associated with thephrase "vor einer Woche" is modified to yield a structurereflecting the the phrase "a week ago'.
When other targetlanguages are included, their transfer instructions will appear inthis rule as SPAfqlSH, CHINESE or whatever.
In this way, oneanalysis could simultaneously serve as input to the transferprocedures for several target languages.The type of direct transfer described here has several goodpoints.
It is very efficient because ~ere  is no time wasted intrying rules which don't apply.
By the same token, it is fairlyeasy for the linguist to guarantee the results of the transferprocess because he can gear his rules to very specific structures.For example, there are several Ger~,~ constructions which areanalyzed by rules with a phrase structure specification NP ->NP NP.
One of these is the genitive construction, as in "ein Teildes Programms'.
The English transfer set se~ciated with thisparticular ule contains instructions to insert the English genitivemarker "of" so that the translation becomes "~ part of theprogram'.
There is no wasted attempt o make this insertion inthe similar, but not genitive, constructions.
Likewise, transferprocedures peculiar to thoec structures are not applied in vain tothe genitive construction.
As one might suppoae, this methodalso has the real, if somewhat embarrassing, advantage ofallowing for fairly easy implementation of ad hoc solutions,which, unfortunately must be resorted to from time to time.There are, of course, several disadvantages to doing thingsthis way.
If there are multiple source languages, the linguistmust repeat, in perhaps non-trivial ways, the same targetlanguage information for each aource grammar.
There is noconvenient way to sta~e more global linguistic facts that don'trelate to immediate constituent structure (this is a problem foranalysis as well).
ALso, this method forces the description of thetarget language to be made in terms of the constituent structureof the source language.
All of the~ are problems which arebetter handled in a grammm- based approach to structuraltransfer.
Our decision to incorporate a franker grammar grewout of the need to overcome the last two restrictions, particularlyin the treatment of clauses.3.
The use of  t rans fer  g rammar  in METALThe moat pr~,~in_S need for grammar based transfer was theresult of the adoption of a canonical clause structure.
Theoriginal impetus for using a canonical structure wu the need foran efficient analy,,ds of the German clause.
However, thiscanonical structure is put to use by METAL in another way, onewhich will, in all likelihood, insure its utility, or at least itsnecessity, for all source languages.
The area which would requirethis is lexical transfer.Because the dependency between a verb and its object caninfluence greatly the lexical and structural transfer of both, aswell as the structural transfer of the clause as a whole, it is veryuseful to do a certain amount of lexical transfer, in particular,verb transfer, at the clause level, where both the verb and itsarguments are &variable for inspection and manipulation.
This isnot a new idea.
What is important here is that, although thegrammar writer determines when and how clause level lexicaltransfer takes place, the proper functioning of the transferprocedure depends on the canonical structure of the clause.
See\[Bear, 1983\] for a complete description of the lexical transferprocess.
The structure we employ is a flat structure, consistingof a PREDicate node followed by one or more arguments:<clausa l  c;Lr, egory/ \/ \PPXD *R~I C ..3 C ..3 ARGnHowever useful a canonical structure is for analysis andlexical transfer, and, in principle, for structural transfer, itcreates problems for our direct, node by node structural transfer.The effect of transforming during analysis and integration is thatthe constituent structure that is reflected by the analysis rule isby no means the constituent structure that actually exists attransfer time for the node built by that rule.
This can beillustrated by the following two trees for the sentence "dem Kindgab der Mann den Bal l ' .
The first is the parse tree that wouldhave been bnilt ff the tree had not been transformed.
Thesecond is the actual tree that is built.
The circled nodes are oneswhich are eljm;nffited by flattening, the boxed node is one whosesons have been changed.Sf/ \den If.t ndPP~D/VB !g~bNP / \DET NO!
'DET NO d n BallM~nn/ / \  / \  / \VB DE'I" NO DET NO DET NO\[ \[ 1 I t 1 1g~.b dem Kind der  Mznn den B~IIObviously, the transfer portion written for the rule givingthe boxed node, CLS -> NP RCL, can have very little specific tosay about the transfer proce~ becanse the actual sons and theirorder are not at all predictable from anything in this rule.
Thepower to make the various examinations and permutationsnec,~mry to execute an appropriate transfer does exist, but theycan o-ly awkwardly be specified.
Furthermore, they wouldnecesasrlly be repeated throughout the grammar.
The flatteningdescribed here takes place in the construction of all clause typestructures, and so this same crop of sons could be found hangingon a wide variety of trees.
Rather than forcing such atreatment, we exploit what is known about the canonicalstructure to reap the benefits of treating what is e~entially aninterlingua s such, by manipulating its structure through theapplication of transfer grammar rules.
This is done in thefollowing way.Transfer rules are implemented as packages of instructions,typically including tree transformations, of the type found in thetarget language portion of an analysis rule.
However, ratherthan being stored on a node by virtue of that node's parsehistory, they comprise an independent portion of the system and71are invoked by instructions in target packages.
Transfer rulesare stored according to one or more root categories.
Rulespertaining to a particular category are invoked when the targetpackage associated with a node of that category invokes ORO,the program which accedes the transfer grammar.
Because thisprogram is called directly from the grammar and under controlof the grammar writer, the overall tran~er efficiency is notdegraded by the use of a transfer grammar.
Any additional costassociated with the use of this grammar is born locally by theconstructions which directly benefit.
The tran~er packagea.~ociated with the boxed node is given here:CLS NP RCLENGLISHC~.SXFR) do main verb transfer(ORO) invoke grammar ulesfor this category(XFR) descend the tree and transfer sonsAn example of one transfer ule which ORO would invoke isgiven below.
The first line is a list of root categories to whichthis rule applies.
Thes rule tests to see whether the clause isindicative, and if it is, invokes a transformation by means of thefunction XFM to place the subject NP before the main verb.The structural description of this transformation is met if thefirst son is of category PRED and if there is some son followingit of category NP and having the value SUBJ for the featureROL, i.e., some noun phrase fullfdls the grammatical rolesubject.
The description allows for the possibility of zero ormore constituents preceeding and/or following the NP.CLS-SUB LCL RCl.
CLS-REL(AND( I lcr  I m3 DID SUB)i f  PREDicate is INDicativeor SUBjunct im MooD.
(XFM ..  move SUBject in front of  PREDicateC/E:1 (PRED:2 - :3  CNP:4 NIL (I~Q R0L SUB J ) )  - :5 ) )(Z:I (NP:4 PRED:2 - :3  - :S ) ) ) ) )It might well be asked whether there will be any role fordirect transfer in a multilingual system, if it has been found tonot be completely satisfactory in a bilingual one.
I tend to thinkthere will be, although the role will, no doubt, be reduced.There will probably always be the need for ad hoc solutions toisolated transfer problems, and there is no reason why s'~ch non-general solutions should not take advantage of the efficiencyavailable by a more specific direct transfer.
And at the veryleast, this method offers an excellent way to give the linguistcontrol over the flow of the transfer process.
The combinedcapability is particularly valuable when one considers not onlythe requlremen~ of a completed system, but those of a systemstill under development, as well.REFERENCESBear, John.
"Aspects of the Transfer Component of theMETAL Machine Translation System," unpublished manuscript,1984.Bennett, Winfield S. "The LRC Machine TranslationSystem: an Overview of the Linguistic Component of METAL,"Computers and Artificial Intelligence, vol.
2, no.
2, April 1983.Slocum, Jonathan.
*Machine Translation: It's History,Current Stattm and Future Prospects', COLING, 1984.Weir, Carl.
"Anaphora Resolution in the METAL MachineTranslation System," unpublished manuscript, 1985.There are a variety of rules for placement of other clauseconstituents.
The results of the call to ORO at the clause level isthen a tree whose major constituents reflect English word order.Transfer of the constituents thenmelves i then accomplished bydescending the tree in the usual manner.The discumion above involves only changes which reorderconstituents.
The transfer grammar also includes rules for moredrastic structural changes, such as placement of the particle"not" and the subject of questions within the English verbauxilliary.4.
SummaryWe have, so far, only utilized the transfer grammar inplaces where a direct approach would lead to extremeredundancy in transfer with respect o one language pair.
Ourtreatment of English clauses, however, a~o has the advantage ofreducing redundancy acro~ source languages, since therequirements of the transfer lexicon insure that the inputstructure to these rules would remain the same.
It is likely thatfurther work in other language pairs will give rise to other usesof the transfer grammar.72
