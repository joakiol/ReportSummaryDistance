TRW JAPANESE FAST DATA FINDERMatt MettlerTRW Systems Deve lopment  Div is ionR2/2194One Space ParkRedondo Beach,  CA 90278matt@ wi lbur .coyote.
t rw.comABSTRACTThe Japanese Fast Data Finder (JFDF) is a system to loadelectronic Japanese text, allow the user to enter a query inJapanese, and retrieve documents hat match the query.
Keyterms in the browser display are highlighted.
The interfaceis targeted for the non-native Japanese speaker and a vari-ety of tools are provided to help formulate Japanese que-ries.
The system uses TRW/Paracel Fast Data Finderhardware as the underlying search engine.1.
DESCRIPT ION OF  F INAL  SYSTEM1.1.
Techn ica l  ApproachAs part of the Tipster program, TRW has built an interfaceto the TRW Fast Data Finder (FDF) to search native Japa-nese scripts.
The program is called the Japanese Fast DataFinder (JFDF).
This effort involved working out the issuesof converting and loading Japanese text into the FDiC's file-system, adapting the FDF to properly search 16-bit charac-ters, developing an X-windows application program towork in Japanese, and researching query formulation tech-niques that will provide good precision and recall againstJapanese texts.We aimed our design toward providing special query gener-ation support for non-native Japanese speakers.
We devel-oped an algorithm to convert English proper nouns or termsto multiple possible Katakana representations.
We setupthe user interface to provide easy access to lists of pre-defined subqueries and to an English to Japanese thesaurus.While the prototype was implemented towork with Japa-nese, we believe the JFDF could easily be extended to workwith other languages uch as Chinese and Korean.
Dataloaded for searching can be converted from multiple repre-sentations to a common Unicode representation if desired.Using Unicode allows a single database to contain docu-ments in multiple languages.
Query terms entered in Japa-nese could match against equivalent characters in Chineseor Korean documents.The basic query formulation paradigm is extended booleansearch.
The user is provided with an expandable booleanform in which to enter query terms.
Kana terms are enteredby selecting the appropriate entry mode and typing Romaji.Kanji terms are entered by first entering the Hiragana ndthen asking for a menu of choices.
Terms from the browserwindow may he copied and pasted into the query windowto help refine a query.
The user may select from a menu ofchoices to require query terms to be within a specifiedproximity window.
A full set of features to browse, save,recall, print, and manipulate the results of searches are pro-vided.
There are also features to select he databases tosearch and to create and load new databases.
Each screenhas a help button which brings up a description of the avail-able functions.Since there are a number of different encoding schemesused for Japanese, the program currently runs using eitherExtended Unix Coding (EUC) or Unicode.
Routines areprovided to convert from one to another so that all docu-ments in the database are represented in a common encod-ing format.
It is easier to convert data once at load timethan to convert (and search) each user query in multipledata representations.Query Generation Features for the Non-Native SpeakerOne of our primary considerations during the design of theJFDF was to make it easy to operate for the non-native Jap-anese speakers, which we believe make up the bulk of ourprospective government users.
We implemented three spe-cial features to aid query generation.First, the JFDF includes a28,000 entry English to Japanesethesaurus which can be used to help select appropriateterms for the search.
The user types the term in English andreceives a menu of possible Japanese terms and theirEnglish meanings.
The user may select any combination ofterms which are then included by reference in the query.The thesaurus i  in a simple format that may be easilyextended at customer sites.Second, the user may select from a menu of predefinedsubqueries.
These subqueries are typically setup by the sys-tem administrator an advanced user.
They may them-113selves include any valid FDF query expression i cludingproximity, nested boolean logic, or error tolerance.
Byselecting the subquery 'Sony', the user could include in histop level query a number of different ways to referenceSony Corporation and its products.Third, we implemented an English to Japanese translitera-tion scheme for proper nouns.
This was a major undertak-ing.
While the Japanese "spellings" for common foreignloan words or Western public figures tend to becomequickly standardized (and thus could be included in the the-saurus), company names, new product names, and non-pub-lic figures are not likely to be represented in consistentKatakana cross sources.
Particular difficulties arise whenthe foreign words contain sounds or patterns of sounds (i.e.two consonants in a row) not used in Japanese.
In thesecases there are a number of different ways the foreignproper noun might be expressed in Katakana.Our transliteration algorithm maps an English word to itsmost likely Katakana possibilities.
The basic idea is tobreak the word apart phonetically and then substitute asmany of the possible ways the sounds might be heard by aJapanese speaking person as alternatives.
Figure 1 showsthree simple examples 1.ro~ald reaganbill clintonmary brownFigure 1:=> Inlt3-1Jbl \ [ -YI~-I JbIFI ,> F\] \ [ ' J I ' J - I L - IL - - I  I#I*S' - \ ] ; ,=> li~lsqJ~dlGlJb 'T \ [ ' ) l~ l~#l Jb \ ]21->'=> \ [71Y- \ ]U -  ~\ [~ '91ta"91~- \ ]~Sample English to Japanese TransliterationsWe believe that this style of transliteration, with the FDFhardware available to execute the resultant expressions eas-ily, is one of the JFDF's most effective and novel features.We reviewed the performance of this algorithm on a samplelist of 150 English last names and tallied that the programwas picking up the academically correct variation 80-90%of the time.Designing the retrieval system around the Fast Data Finderis desirable for two reasons.
First, the FDF can cost effec-tively evaluate complex query patterns required to achievehigh recall and precision.
In searching for Western propernouns for example, we made heavy use of the FDF's abilityto scan complex phonetically equivalent alternative Kata-kana representations of each word.
Second, since the FDFcan process data with no word segmentation, data prepro-cessing, or index construction, it is ideal for real-time dis-semination systems.
Thousands of detailed user profiles canbe evaluated against large batches of documents withinminutes of their arrival.t.
The notation "a \[ b I c \] d" means an "a" followed bya "b" or "c" followed by a "el".
Thus the user enteredterm of 'Reagan' will match on any ofI j j v~- j  or  U - -~- -~ or  I/j~j~.../ or  !/'--'~JL.:'1.2.
Processing flowThe JFDF can be divided into four modules that are inter-connected as shown below.1.
JFDF - The main JFDF application / user interfaceprogram2.
Transliteration - The English to Katakana phonetictransliteration algorithm3.
MLT - The Multi-lingual toolkit from ILA.4.
FDF-3 - The Fast Data Finder system from Paracel(hardware +software)Modules (1), (2), and (3) compile into a single executableprogram that is the JFDF.
Module (4) is the hardware andcontrol software for the Fast Data Finder.
Modules (1) and(2) were developed on the JFDF contract Modules O) and(4) are commercial products.
The user interacts with the dis-plays of the JFDF main module.
The JFDF main programmakes client requested to the FDF-3 acting as a searchserver.
The FDF-3 many be hosted on another workstationif desired.. .
.
.
.
.
.
: :I Transliterator i//!?
JFDF i :  ::::l !
:iiii:::: IFlgure 2: JFDF M(x:lules1.3.
Descr ip t ion  o f  Key  Modu les /S tagesThe main JFDF module is the application program that pro-vides a Japanese Language interface to the FDF.
It uses theMLT functions to convert between Japanese text representa-tions (i.e.
EUC and Unicode), display Japanese on thescreen, and accept entry of Kana or Kanji characters fromthe keyboard.
The JFDFuses the FDF search engine toevaluate database documents against he user entered que-ries.
The JFDF also provides a series of control options,help screens, and thesaurus lookups.
The transliterationfunction is accessed when the user requests a term to beexpanded by transliteration.The transliteration module takes an English proper noun orphrase and converts it to a series of phonetically equivalentKatakana possibilities.
The algorithm works by successivepasses of string substitution on the input ASCII string.
Thesubstitutions are arranged in precedence order.
The outputis a single Katakana expression, which includes alternationsto cover the variety of ways a particular syllable or lettermight be pronounced, suitable for input to the FDE114The Multi-Lingual Tooklit (MLT) contains a variety oftools and software routines to facilitate the development ofmulti-lingual applications.
Specifically, the JFDF usesMLT functions to convert between different representationsof Japanese text (i.e.
EUC and Unicode), convert Romaji toKana or Kanji, and render Japanese on the X-windows dis-play.The Fast Data Finder (FDF) is a hardware text searchdevice developed by TRW and sold as a commercial prod-uct by Paracel Inc. in Pasadena California.
It attaches to theSCSI bus of a host Unix workstation.
It comes with severalserver or daemon processes that control the FDF hardware,manage the FDF's filesystem, and talk with client (user)processes.
It also comes with a complete Application Pro-grammers Interface (API).1.4.
Hardware/Software RequirementsThe JFDF prototype is available to run on Sun Microsys-tems workstations running under Sun's Japanese LanguageEnvironment (JLE).
The man-machine interface uses X-windows and Sun's Open Look / Xview.
The text searchoperations are performed in hardware by the TRW/ParacelFast Data Finder (FDF-3).
The FDF-3 acts like a peripheraldevice to the host workstation and attaches to the hostworkstations SCSI device bus.
The software is designed tothe client-server model so that one FDF-3, located any-where on the network, can provide search services tonumerous user workstations running JFDF.
The FDF-3 andassociated FDF Executive Software may be purchased as acommercial product from Paracel Inc. of Pasadena Califor-nia.In addition to a Sun workstation running JLE and an FDFinstalled on the network, the JFDF uses a third party Multi-Lingual Toolkit (MLT) to provide character conversions,display, and appropriate fonts.
This toolkit may be pur-chased as a commercial product from International LispAssociates of Cambridge MA.Finally, the JFDF utilizes a 28,000 entry publicdomain the-saurns, which can be supplied with the JFDF software fromTRW.1.5.
Efficiency/Speed/Throughput StatisticsSpeed and throughput of the JFDF system are a function ofthe FDF hardware search engine.
During development ofthe JFDF we used an FDF2000 system that searched at 10MB/s (5 million Kanji / second) and evaluated between 10and 20 average queries simultaneously.
Using a singlecommercial FDF-3 system, a search rate of around 3.5 MB/s (1.75 million Kanji / second) could be obtained whilesearching 20 to 40 average queries imultaneously.1.6.
Key Innovations of Final SystemThe JFDF prototype contains a number of novel features,including:?
Successful adaptation of a commercial high perfor-mance 8-bit hardware search engine to searchingmixed 8-bit and 16-bit datastreams,?
Development of an automatic English to Katakanatransliteration algorithm for proper nouns andphrases, and?
Adapting the man-machine interface to provide tools(such as an extensive English-Japanese thesaurus) toaid the formulation of Japanese queries by non-native Japanese speakers.2.
Original Project/System GoalsPrimary goals for the Japanese Fast Data Finder (JFDF)were to build a system that could load electronic Japanesetexts in various formats, allow the user to build queries inJapanese, search the queries against the text, and display theretrieved ocuments o the user with key terms highlighted.To provide a scalable high performance architecture, theTRW/Paracel Fast Data Finder (FDF) was chosen as thesearch engine.
The FDF also provides awide variety of textsearch operators uch as proximity searching, characteralternation, term counting, term weighting, and fuzzy termmatching.To aide the non-native Japanese speaker in formulating que-ries, we also aimed at providing three query constructiontechniques:?
For common ouns, provide an English-JapaneseThesaurus to help select he proper terms,?
For proper nouns, provide an English to Katakanaphonetic transliteration capability, and?
For specific topics, provide a menu of predefinedsubqueries for the user to include in queries asneeded.3.
Evolution of System Over 6 MonthsThe JFDF prototype was developed over a six month periodfrom Jan-93 to Jun-93.
We delivered an early version togovernment evaluators at one of the sponsoring agencies inApril-93.
They suggested a number of improvements in theman-machine interface design and requested several addi-tional features.
We were able to accommodate some ofthese in the final version completed in June.1154.
Accomplishments 5.2.
Unofficial ResultsJudging from the enthusiastic reception of the governmentevaluators, the JFDF prototype seems to be a success.
It hasbeen demonstrated to hundreds of people and we havereceived ozens of useful comments and suggestions onhow its features might be enhanced or adapted to variousoperational scenarios.
Some of the features that seem tohave stimulated potential user interest include:?
Easy to use and expandable query entry form,?
The automatic English to Katakana transliterationfor proper nouns,?
Incorporation of a comprehensive public domainthesaurus,?
Ability to copy terms from the browser window andpaste them into the query,?
User-friendly X-windows interface,?
Ability to handle both Japanese and English/ASCIIterms imultaneously in the same queries and data-bases, and?
Completion of the prototype on budget and onschedule.5.
Evaluation Summary5.1.
Official ResultsDue to time constraints, government relevance assessmentswere only available for 3 of the 7 Japanese test topics.
Nev-ertheless, the results eemed encouragingTopiclRel47Rel Ret31P@1000.295 33 21 0.21The ARPA test topics did not evaluate some of the JFDF'snovel features, especially the automatic transliteration.
Weperformed a self-assessment o  the transliteration algorithmby the following method.?
Select 150 western ames beginning with differentletters of the alphabet and containing various pho-netic sounds,?
Run the algorithm to generate the possible Katakanatransliterations,?
Have a native Japanese speaker spell out the mostlikely combination, and then?
Score 1 if the possible transliterations i cluded theone the native speaker generated, otherwise 0.From this test it appears that we were getting between 80-90% coverage.
In other words, if the 150 names had beenrepresented in the text as Katakana, we would have foundover 120 of them.
We did not perform this test on namesalready in the sample database, since we used the databaseduring development of the algorithm.5.3.
Explanation/Interpretation of ResultsFrom the point of view of correcdy locating regions of textthat matched the user's query in the test database, the JFDFperformed flawlessly.
We were also very pleased withachieving an accuracy of 80-90% on our rule-based translit-eration algorithm.
While the Japanese valuation data isfairly sparse, the 0.1877 " l lp t  average" number for Japa-nese is a reasonable number and is comparable towhat sim-ilar query formulation techniques might be expected toachieve in English.Table 1: Government Relevance Assessment for 3 JapaneseTopicsFor the three topics taken together the JFDF's recall wasabout 60% and precision about 20%.
The 1 lpt average forthese three topics was 0.1877.116
