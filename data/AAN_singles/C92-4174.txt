DIRECT PARSING WITH METARUI~ESWilhelm WEISWEBER, Susanne PREUBTechnical University of BerlinInstitute for Software and Thcx)retical Computer ScienceProject KIT-FAST, Sekr.
FR 5-12Franklinstr.
28/29, D-1000 Berlin 10E-mail: ww@kit.es.tu-berlin.de andpreuss@kit.cs.tu-berlin.deAbstractIn this paper we argue for the direct application ofmetarules ill the parsing prlx;ess and intrurluce a slightrestriction on metarules.
This restriction relies mltheoretical results alxmt he ternfiluation of term-rewritesystems and does not retinue tile expressive power ofmetarules as much as previous restrictions.
We provethe termination for a ~t  of metarnles used in ourGerman gramnlar and show \[low nletarules can beintegrated into the parer.1 Introduction1tie metarules within the theory of Genendized PhraseStructure Grammar (GPSG) are a very interestingdevice to express generalizations on a basic set ofimmediate dominance (ID) rules.
A short introductionto the theory of metarules i  given in the followingsection.
Metarules are used to generate an objectgnanmar f om a set of basic ID rules.
One of the firstdiscussions about the application time of metaruleswithin the GPSG theory, which has strongly inlhlencedthe succeeding research ill this field, has beenpublished by \[Thompson 821.
In his article Thompsonargued fi~r applying the metarules all at once in apreprocessing step (compile-tilne application).
How-ever, our parer applies file metarules during tileparsing process (run-time aPldication or directapplication).
A discussion why we prefer file directapplication is given in section 3.
No matter when tilemetarules are applied to tile basic set of ID rules, wehave to care for tile termination of the recursiveapplication of metarules.
\[Thompson 82\] made apropo~l to guarantee t rmination by the definition of aFinite Closure (FC).
This approach restricts theapplication of nlctarulcs uch that one metarule canonly be applied once in the derivation of an ID rule andprevents it from recnrsive al)l)licatiou.
This restrictionhas been taken over by the authors of \[G~dar et Ill. 85\]and they gave a further estriction.
They restricted theapplication of ntetarules to lexical ID rules, eventhough they knew that this restriction ulay prove to Ix;incompatible with the descriptive lx)wer needed fornatural language gramnmrs (p. 59).
But we think thatthere is nu need to restrict he application of mekarulesonly to lexical ID rules, even if there are proposals toelimi~mte file u~ of metarules and to use lexical ruleslike in LFG and HPSG (see \[Jacobson 87\]).
But to doso with GPSG would involve crucial changes u~ tiletheory, and therefore we preserved file metarulecomponent ill our machine translation (MT) system amltried to find an adequate criterion h)l tile termination ofmelarules.
In our approach die granlnlar writer is liceto decide whether a metarule is to be applied to lexicalID rules or to another type of rule.Tile Finite Closure (FC) is too restricive, \[w.,cause insome cases (see tile examples of IUszkoreit 87\] and\[G~dar et ill. 851 in tile sections 3 and 4, respectively)re.cursive application is needed.
In section 4 wepresent all alternative constraint on die basis of resultsin the lield of term-rewriting.
"l-lais constraint is lessrestrictive than the FC.
It 'allows for the definition ofrecursive metarules which may be applied freely andguarantees the termination.
In section 5 the metarulesof the German GPSG grammar used in our MT systemare outlined and, with the help of the constraint insection 4, we show that their application is terminating.hi section 6 we give an outline of how to modify theparsing process in a way that nretarules can be applieddirectly rather than at compile-time.
In the last sectionwe draw sonre conclusions for future work in this field.2 Metarules in GPSGMetamles are one of file most criticized evices of theGPSG lonnalisnl.
GPSG is a grmnmar fomvalism thatstates most ol ils generalizations on the level of localtrees.
Melarules were introduced to capturegeneralizations ontile mt of 1D rules.
An ID rule statestile d()ulinance relation bctweA~n tile mother categoryand a umltiset of (laughter categories in a local treewith()ut fixing the linear precedence relation of tile(laughters.
ID rules have the following torrent:Co) - ~ C l ,  C2 .
.
.
.
.
C~Melarutes define a relation on ID rules.
They have thelollowing tk~rlnat:'input ll) rule scheme' ~ 'output ID rule scheme'and can be read as: If tile ~t  of \[D rules contains an IDrule which is nlatched by 'input ID rule scheme', then italso contains an Ill rule that matches 'output ID nileseheule', where the feature SlW.cifications of the inputID rnle are tanled over to file output ID rule if notspecilied otherwise by the melarule, For example themetamle VP\[-PAS\] --~ W, NP\[acc\] ~ VP\[+PAS\] --)W, (PPIby\]) states the connection between active andpassive, where W is a vltriablc ranging over a (possiblyempty) nmltiset of categories.
The major point ofcriticism against mcumdes is tlmt they increase thegenerative power of GPSG ill an undesirable way whenthey are recursively applicable, because this may leadto arl infinite set of ID rules.
The resulting grammarneed not be context free.
Ill order to remedy thesituation, suggestions ofvarying radicality were made.The pruposal of \[Thompson 82\] and \[Gazdar et al 85\],which tries to maintain metarules, was simply to applya nleulrule ill most once in the generation of an ID rule.This stipulation is somewhat s range, because it allowsfor recursive metarules and just prevents them frombeing applied recnrsively.\[Kilbury 861 suggested toeliminate nletarules by usingcategory co~K;cnrrence restrictions.The most radical prolxlsal was to dispense withmetarules.
Bnt our aim was to stay within theti'amework ofGPSG, and it would be a loss to dispensewith melarules, beeanse GPSG formulates for examplevalency of verbs and other constituents on the level ofID rules aud nm'tarules are the means to capturegeneralisations on diat level.For this rca.son we formalize the properties ofmetarules that terulhiate recursive application and stateACTES I)E COLING-92, NANTI.
:S, 23 28 AOL'I 1992 l 1 l 1 I)ROC.
Of U.OLING-92.
NANTES, Au(i.
23-28, 1992them as a condition that a set of metarules narst fulfil.Metarules can then be applied freely.3 Application timeThere are two possibilities for the time to apply themetarules.
The first is to compile the basic set of IDrules (compile-time application) in a preprocessingstep.
Thompson calls it all-at-once approach.
Theother possibility is to apply the metarules during theparsing process (run-time application or direct applica-tion), which Thompsoo calls as-needed approach.Thompson argued for the compile-time applicationbecause the direct application of metarules has thefollowing disadvantages (see \['/homlrson 82\]: p.5):(1) If a metarule can be applied to an ID rule duringthe parsing process, the metarule has to be appliedagain when the ~me ID rule is involved in thesame or a subsequent parse.
(2) To store the structures generated by ID ruleswhich are the result of the application of ametarnle is just another instanoe of the compile-time application.
(3) Derivations of ID rtdes of length greater than one,i.e.
ID rules which are the results of applyingmore than one metarule to one basic ID rule, willrapidly expand the .search slmme.In order to look a little bit closer to Thompson'sarguments and to stay on his line, we presuppose that akind of top-down parsing method is used and there aren basic ID rules and m ID rules, generated by the.
application of the metarules.Wheu looking to argument (1), we see that it is anargument lor the ran-time approach.
If the metarulesare applied at compile-time a huge set of ID rules iscompiled from the basic set.
For exanlple if we wouldapply the metarules of our MT system (see section 5)to our basic set of 80 ID rules at compile-time, wcwonld get about 240 ID rules in the object grammar.Let us assume that some category C has to be expandedm~d there are i ID rules in our grammar with mothercategory C. In the compile-time approach the parserwould have to check (n+m)/n*i ID rules on average,whereas in the run-time approach i ID rules and(n+m)/u metandes ((n+m)/n+i rules) have to bechecked for application to these ID rules.
In the normalcase that are less than in the compile-time approach.Argument (2) is indeed an argument for the run-timeapproach.
Let as again consider the above exampleand each of the i ID rules has d daughters on average.If the category C is expanded according to all ID rules,in the worst case (n+m)/n*d*i (partial) structures haveto he stored ou average in the compile-time approach.These structures are very similar, because in generalthe metarules modify the ID rules slightly.
The run-time approach can make use of this fact and stores onlyapproximately d*i (partial) structures and additionally(n+m)/n*i structures after the application of themetarules.
That makes ((n+m)/n+d)*i sn-netures to bestored in the run-time approach.
The common parts ofdie ID rules generated by metarules need not to bestored, that are (n+m)/n*(d-1)*i-d*i partial structuresless.
For example if n = 80, m = 160, d = 3 and i = 10then Otis would mean that on average 30 partialstructures less have to he stored for the correspondingconstituent.Conceruing argument (3), \[Barton et al 87\]: p.226showed that the computation of the Finite Closure (FC)of a GPSG G with x ID rules and y metarules canincrease the number of the ID rules worse thanexponentially, namely from x to more than X 2y, i.e.there is no difference between the compile-time andrun-time approach.In order to sum up fltis discussion, we can say thatthere is no difference in complexity between the com-plile-time and file run-time approach with respect to thearguments in \['lltompson 821.
The direct approach iseven preferable to the eomplile time approach whenlooking at the arguments (1) and (2), which are indeedarguments for direct application of metarules.There is another argument for direct application ofmetarules.
The FC in \['lltompson 82\] states that everymetarule can apply at most once in the derivation ofany given object grammar rule from one basic rule.
Anexample for the recursive application of a metarule hasbeen proposed in \[Uszkoreit 87\]: p.145 in his Germangrammar.
It makes the adverbial phrase (AdvP) a sisternode of the verb and its arguments:V2\[-AUX\] --~ V, W ~ V2\[-AUX\] --~ V, W, AdvPThis metarule is to solve the problem that adverbialphrases can be interspersed freely among thearguments of the verb and the number of AdvPs in averb phrase is not limited (but it is finite) and themetarule has to be applied recursively.
This fact wouldrule out the definition of this metarule with respect othe definition of the FC wltich has been adopted also in\[Gazdar et al 85\] to avoid the production of an infinitenumber of ID rules.
Uszkoreit ried to circumvent thel~rublem in redefining the above metarule such that itfits the requirements of the FC.
It employs the Kleenestar operator:.V2\[-AUX\] -+ V, W :=~ V2\[-AUX\] --~ V, W, AdvP*This change of the memrule is not uecessary if themetarules are applied directly during the parsingprocess and the above melarule without he Kleene starcan be applied freely, because the termination isdetermined by tile finiteness of the input string.4 TerminationNo matter whether the metarules are applied irectly orat compile-time, we have to cam for the termination.We think that the restriction on the application ofmetarules imposed by the Finite Closure (FC) is toostrong.
That may have crucial consequences for somemetarnles.
Look for example at the ComplementOmission Metarule from the English grammar in\[G~dar et al 85\], which is \[+N, BAR 1\] --~ N ?, W :=2,\[+N, BAR 1\] --~ N ?.
This metarule deletes optionalcomplements of nouns.
For example the noun gift mayhave two optional prepositional phrases as comple-ments, i.e.
N I ~ N o , (PP\[of\]), (PP\[to\]).
Theprepositions of add to are fixed but either of the PPs orboth may be left out: the gift, the gift of John, the giftto Paul, the gift of John to Paul.
The above metaruleonly allows for the gift and the gift of John to Paul,because it deletes all complements of the noun.
Thecorrect me "tarule would be:\[+N, BAR 1\] --~ N ?, X, W :::*, \[+N, BAR 1\] --~ N d, W\[(;~dar et al 85\] have not been able to define thismetarule, because it has to be applied recarsively addthe FC does not allow recursive application.
For thisreason we decided to define another constraint which isnot so restrictive.As it Ires turned out, most of the metarules which havebeen defined within the fragment of English in \[Gazdaret al 85\] or of German (see the .section below for amore detailed diseussion) are or can be defined in aACRES DE COI.1NG-92, NANIES, 23-28 AO~r 1992 1 l 1 2 PRO(:.
OF COLING-92, NANTES, AUG. 23-28, 1992way that guarantees rite termination of the recursiveapplication of metarules.
In order to prove thetermination, some research results within the field ofterm-rewriting can be applied (see \[Dershowitz 82 and85\] for general results and \[Weisweber 89\], \[Weiswe-bet/ llanen~hild 901 and \[Weisweber 92\] for anapplication to mappiugs within machiue translation).ID rules can be viewed as tenns and metarales can beviewed as term-rewrite rules, because they derive oneID rule from another.
A set of term-rewrite rulesterufinates if an ordering '>' on the terms of the left-hand and right-hand sides (lhs and rhs, respectively) ofthe rewrite rules can be defined.
This may be aquantitative ordering, e.g.
a category occuring on thelhs of a metarule is deleted on its rhs, or a qualitativeordering, e.g.
art operator precedeuce.
We think that amixture of both types of orderings is needed to provethe termination of sets of metarules.
If a qualitative anda quantitative ordering are merged, the resultingordering guarantees termination (see \[Dershowi~ 82and 85\]).
The operator precedence that is nsed in ourMT system is in fact a precedence ordering on featurevalues occurring at rite categories of the lhs and rhs ofthe metarules.Termination condition for metarule applicationFor every metarule lhs ::> rhs, Ihs > rhs.
lhs > rhs(it a daughter category occnrriug on the lhs isdeleted on the rhs and/or(it) an operator precedence >or.
on feature valuesoccurring at the categories of the lhs and rhs canlye defined, which is not contradictory for thewhole set of metarules and(iii) every variable for (multisets of) categoriesoccurring on the rhs occtws on the lhs.Melarnles have to fulfil the conditions (it and (iii) or(it) attd (iii).
The condition (it is a quantitativeordering and the termination of melarules which fulfil(it is obvious, because verytime such a meuu'alc isapplied one category is deleted aud the number ofdaughter categories inan ID rule is finite.The condition (it) is a qualitative orderiug.
The termi-nation of metarules which fulfil (it) is not as obvious asin (it.
It means that a feature value of a category h,'ts tobe changed and there must not be another melarule,which reverses the change of this feature value.
Itallows\[br not haviug to delete categories, addiugcategories or adding values to a list, which may be afeature value, on the rhs of a metarule, if a featurevalue is changed on another category.
This is thereason why we decided to impose cotttrol on thedefinition of metarules and not to move away frumsuch devices ,as recent research iu coutputational lin-guistics does.
If a metarulc fulfils condition (it) it can-not be applied for a second time iu a derivation of anID rule, because once a feature value has been cluangedit will never be reversed and the metarule will not beapplicable again, qhis part of the termination conditionsimulates the tenninatiou condition of the FC.~lhe condition (iii) prohibits the introdnetion ordoubling of variables for (mnltisets of) categories onthe rhs.Thus the termination of a certain set of metarules canbe guaranteed, iff for all metarules either the metaruledeletes acategory occuring on its Ihs and/or a non-con-tradicting precedence on operators (feature values ofthe categories occurring iu the metarule) can be definedand all variables occurring on the rhs occur on the lhs.qt~e application of the termination condition is demon-strated with the melarules for Germm~ in the next.section.5 Metarules for GermanOur GPSG syutax of German is based on the grammardeveloped in \[Uszkoreit 87\].
We assume a fiatstructure for the verb and its complements includingthe subject.
Subeategorization of verbs is staled in IDrules of the following form:V3 "4' V?\[ SUBCAT (~n\], C1 ..... C..V 3 is a ~ntential category and SUBCAT f~ means thefixed value for the subeategorization feature in the 1Drule with n arguments, but for every subeategorizationthere is a seperate rule.
The subject of main verbs isincluded in the rhs of the rule.
Unlike Uszkoreit'sapproach we do not add the subject o the complementsof a verb phrase via metarule application but reduce asentential category to a verb phrase and delete thesubject.
The following Subject Deletion Metarulefulfils the termination cottditions (i) and (iii), because itdeletes the category DP\[nom\].tSubject Deletion Metarule:V3\[-AUXI --~ V ?, W, DP{nom\]V2\[-AUX\] -~ V ?, WAdditionally, the operator precedence 'BAR 3' >oP'BAt/2' has to be defined, because the feature BAR atthe mother category is changed on the rhs.
Thisadditional definition is needed in order to get a non-contradicting set of operator preeexlence definitions outof the whole set of mctarules in the grammar.
"lhe Slash "fermination Metarule is responsible forending (or from the bottom-up view, for the introduc-tion of) a long distance relationship that is handled inGPSG via the category-valued feature SLASIt.
Unlike\[Gazdar et al 85\] we do artt have a trace.
Traces causeproblents in fiat structures without fixed word order,becau~ there are multiple analyses that are onlydifferent with respect to the position of the trace.Slash Termination MetarulesiV3\[-AUX\] ~.
V 0, W, X 2V3\[-AUX, SLASH X 2\] --) V ?, WV~\[-AUX\] -~ V ?, W, V 3V31-AUX, SLASH V 3\] -).
V ?, W.Here the tenninatiotL conditions (it and (iii) are a l~fulfilled, because a category of the rhs of the ID rule isdeleted.
The operator precedence definitions are'SLASH ~,2 >o~, 'SLASH X 2' and 'SLASH ~' >oP'SLASH V 9', respectively.
"lt~e Extraposition Metarule handles complement sen-tences and infinitive constructions that we treat asdislocated when they appear in the fianl position of asentence.
Another category-vahted f ature, SLASHI, isThe category DP is a determiner phrase according to theX-Bar-Schema in the Government and Binding Theory.
'F ~' means that the feature F has the value '~' (see\[Busemann/ Hauenschikl 88\] and \[Busemaan/ Hauen-schild 89\]).
This is equivalent to file notation -\[F\] of\[Gazdar et at.
85\] mad means that the value for F isalways undefined, i.e.
the corresponding category doesnot take a value for F. "lqm value '7' is sw~ially treated bythe unification and the feature instaariation principles.AcrEs DE COLING-92, NA1Vn:.s, 23-28 not',~r 1992 1 1 1 3 PROC.
OF COL1NG 92, NANTES.
Anti.
23-28, 1992introduced for them.
The feature specification-COH(erent) marks categories that can be extraposed.This metarule fulfils the termination conditions (i) and(iii) and 'SLASH1 ~' >op 'SLASH1 X\[-COH\]' has to bedefined.Extraposition Metarule:V 3 ---) V ?, W, X\[-COH\]V3\[SLASH1 XI-COH\]\] ~ V ?, WThe metarule for passive is an example in which thetermination conditions (ii) and (iii) are necessary,because no category is deleted and an optionalprepositio~ml phrase is introduced that replaces theaccusative determiner phrase:Passive Metarule:V3\[-PAS\] -~ V o, W, DP\[acc\]V3\[+PASI -~ V ?, W, (PP\[von\]).Here the change of the feature specification of PAS atthe mother category can be used for terminatingmelarule application and we have to define '-PAS' >or,'+PAS '3 and "DP\[acc\] >oP PP\[vonl ".4The Auxiliary Metarule is similar to the PassiveMetarule in that feature values of some categories arechanged and the termination conditions (ii) and (iii) arefulfilled.
Here it is the BAR level of the mother andV3-daughter that are lowered in analogy to to theSubject Deletion Metarule.
The operator precedence tobe defined is 'BAR 3' >oe 'BAR 2', which already hasbeen defined in connection with that metarule.A uxUiary Metarule:V3\[+AUX\] --4.
V 0, V 3 ~ VPI+AUX\] --4 V ?, VPAS we have seen, the Subject Deletion, the SlashTermination and the Extraposition Metarule fulfil thecriterion of deleting a category on the rhs of the 1Drule; the Passive and the Auxiliary Metarule changefeature values at the categories.
For all metarules anon-contradictory set of operator precedences can bedefined and the application of the whole set ofmetanfies will terminate in every case.Even the AdvP-metarule in section 3 proposed by\[Uszkoreit 87\] can be treated when the me 'tarules areapplied directly, because we can give a proof for itstermination, which is guaranteed by the finite length ofthe input string in connection with direct application.This is another argument for the direct application ofmetarales.6 The parsing processIn our parser, which is a part of an experimentalmachine translation system (see \[Weisweber 87\] for a3 Treating passive, one has to say a word about semantics.We do not adopt the semantics of \[Gazdar et al 85\]because of its shortcomings ( ee \[Urnbach 87\]), butdeveloped a semantic level of our own that captures filefunctor argument s ructures (FAS, see \[Busemann/Hau-enschild 891 and \[Hanan~hild/Umbach 88\])of sentencesand is derived from the syntactic strucnlre via term-rewrite rules.
Here an explicit assignment of semanticroles to complements of verbs takes place that isdependent on the subcategorization f the verb and itsvoice.4 In this case we have to define a procedence for all featurevalues which are changed.detailed description of file parser without directapplication of metandes), the metarules are definedaccording to the following scheme:Co ~ Co, W, Cd ~ C6 ~ C~, W, (C~)Co, Cc and Cd arc categories and W is a variable for a(possibly empty) multiset of categories.
The categoriesC6 and C~ correspond to Co and Co, respectively, interms of {Gazdar et at.
85\].
The category C~ can beviewed as a condition category for the application ofthe metarule.
Cd is the category which is to be deletedor modified.
This is indicated by the brackets arroundC~, If Cd is to be deleted, C,~ is left out on the rhs of themetarule.
If C d is to be modified, C d is replaced by C,~.The feature values of the categories are cospecified onthe lhs and rhs of a metarule, if not specified otherwise.This causes the values to be carried over to the rhs.
Ifthe metarule should only be applied to lexical ID rulesas proposed in \[Gazdar eta!.
85\], the category Cc has tobe Ihe lexical head with respect to Co.The proof for the termination of .sets of such metarulesis simple.
At first we look at the case in which C~ isdeleted, then the termination condition (i) holds.The second case is that the category CA is replaced bythe category C,~ and the number of categories i  notreduced.
Now the termination condition (ii) has to beapplied and at least one feature value of the categories{Co, C~},~ Um W has to be changed, which must not bereversed by another metarule.The termination condition (iii) holds in every case,because the variable W occurs on both sides of themetarule.In order to apply the metarules directly during theparsing process, all the categories of an ID rule, whichare matched by the multiset {C~},,, t.-)m W, have to becollected by the parser.
This is done for example by theCompleter of the modified Earley algorithut (see\[Earley 70\], \[Shieber 84\], \[Kilbury 84\] and \[IMirre/Momma 85\]).
Suppose the Completer tries to completewith the inactive edge (C~, i, j, T'{},~), which isspanning li'om node i to node j of the chart, where ~' isa multiset of daughter categories which have alreadybeen analysed and the remainder, i.e.
the tnultiset ofdaughter categories still to be analysed, is empty andC,~ is the mother category of the ID rule, which islicensing this edge.
M is the ~t  of metarules.I f  (Co, h, j, (x.\[~) is an inactive dge and ~ Cc, W,C,~ :=:, C;~ ~ C~, W) ~ Mand \[Cd}~ andfee  (~ t..Jm 1~then the Completer introduces a new inactive edge(C;~, h, j, (Z'{}m) and computes its closure.
Thecategory C~ in O~ t..3~ ~ is replaced by C~.I f  (Co, h, i, ?z-13 ) is an inactive dge and(C0~C~,W,  Cd ::~ C6 ~C'o,W,C,~) ~ MandC~ c ~ L) m ~ andCd E D andC~ is consistent to the categories in ~/{C,l}m withrespect to linear precedencethen the Completer introduces a new edge (C6, h, j.
0?u,,, (C~}~-~/{C,j}m) and the category C~ in O~ t.J~ 13is replaced by C~.
If the remainder \[~/{Cd},, = { }m thenthe closure of this edge has to be computed.The advantage of direct parsing with melarules is anincrease of efficiency, because all the inactive edgeswhich are licensed by ID rules indroduced bymetarules need not to be stored seperately and thenumber of inactive edges generated by the Earleyparer  is reduced considerably.ACRES DI~ COL1NG-92, NAN'IX.S, 23-28 Ao(rr 1992 1 1 1 4 I'ROC.
Ol: COLING-92, NANTES, AUG. 23-28, 1992Another interesting approach to direct parsing withmetamles, in which the metarules are treated as specialkinds of context-free roles, is presented in \[Kay 83\].7 ConclusionMetarules are an interesting device to express omeimportant generalizations on phrase structure rules of auatural language granlmar.
If they are used inpreprocessing to compile a huge set of rules out of asmall set of basic ones, file parsing process maybecome very inefficient, because it has to care for theset of basic rules and additionally for the rules whichhave been derived from them and are very similar tothe basic ones.
When metarules are applied directlyduring the parsing process, only the set of basic rules inconnection with the mctarules have to be considered bythe parser.
This reduces the set of intermediate~fiutions (inactive dges) to be stored considerably.lu order to apply mEtarulcs directly, it has to beguaranteed that the given set of meturules willtemlinate if all metarules fulfil the tcrraination criterionin section 4.
We gavc tile termination proof for themetarules of our German grammar in secdon 5.
Wethink that with file help of this criterion the terminationof every relevant set of ioelarules can be proven,because a metarule is defined to change something inan ID rule, either to delete a category, to modify Sonicfeature values, to add a category or to do a combinationof all.
With the termination criterion it is possible toconstruct a device which automatically proves the- termination of a given set of metarules.
This algorithmcomputes the set of operator precedences from thefeature values which are changed on the categories of ametarule.To enable the parser to process metarules like Uszko-reit's tor AdvPs in section 3, which add categories tobasic ID rules and for which the termination can beproven, will be suhject to future work.8 References\[Barton et al 87\]: G. ~lward Barton, Robert C.Berwick and Eric Sven Ristad: "ComputationalComplexity and Natural Language", MIT Press,Cambridge (Massachusetts), London ~ngland) 1987\[Basemann/Hauenschild 88\]: S. Busemann, Ch.Hauensehild: "A Constructive View of GPSG or Howto Make it Work", in: Prcxzs.
of Coling 88, Budapest1988, pp.
77-82\[Basemann/Hauen~hild 89\]: S. Busemann, Ch.Hauenschild: "From FAS Representudons to GPSGStructures", in: S. Busemann, Ch.
Hauenschild and C.Ombach (eds.
): "Views of the Syntax/SemanticsInterface", in: Precs.
of the Workshop "GPSG midSemantics", KIT-Report 74, Technical University ofBerlin 1989, pp.
17-43\[Dershowitz 82\]: N. Dershowitz: "Orderings for Term-REwriting Systems", Thcorelical Computer Science 17(1982), North-Holland, pp.
279-301\[Dershowitz 85\]: N. Dershowi~: "Termination", in:G.Goos, J. Hartmanis (eds.
): "Rewriting Techniquesand Applications", LNCS 202, Dijon, France 1985, pp.180-224\[Drrre/Momma 85\]: J. D0rfe, S. Momma:"Mtxlifikationen des Earley-Algorithmus und ihreVerwendnng ffir ID/LP-Grammatiken", Mmarscript ofthe Institute for Computational Language Proce, ssing(IMS) at ate University of Stuttgart 1985IEarley 70\]: J. Earley: "An Efficient Context-FreeParsing Algorithm", Communications of the ACM 13(2) 1970, pp.
94-102\[Gazdar et al 85\]: G. G~dar, E. Klein, G. Pullum andI.
Sag: "Generalized Phrase Structure Grammar",Oxford, Blackwell 1985\[Hauenschild/Umbach 88\]: Ch.
tlauenschild, C.Umbach: "Funktor-Argument-Struktur, Die~tzsemantische R praseutatious- und Transferebeneim Projekt KIT-FAST", iu: J. Schlitz (ed.
): "WorkshopSemantik trod Transfer", EUROTRA-D WorkingPapers No.6, Saarbr~icken 1988, pp.
16-35IJacob~u 871: P. Jacobson: Review of \[Gazdar et al85\], in: Linguistics and Philosophy 10, 1987, pp.389-426\[Kay 83\]: M. Kay: "When Meta-rules are not Meta-rules", in: K. Sparck Jones.
Y. Wilks (eds.
): "Auto-matte Natural Language l'arsing", Ellis HorwoodLimite.d, West Sussex, England 1983, pp.
94-117\[Kilbury 84\]: J. Kilbury: "Earley-basierte Algorithmenfiir direktes Parsen mit ID/LP-Grummatiken", KIT-Report 16, Technical University of Berlin 1984\[Kilhury 86\]: J. Kilbury: "Category CoocurreneeRestrictions and the Elimination of Metarules", in:Procs.
of Coling 86, Bonn 1986, pp.
50-55\[Shieber 84\]: S.M.
Shieber: "Direct Parsing of ID/LPGrammars", Linguistics aod Philomphy 7 1984, pp.135-154\[Thomt)son 821: H. Thompson: "Handling Melarulesin a Parer for GPSG", I).A.I.
Research Paper No.
175,University of Edinburgh\[Umbach 87\]: C. Umbach: "Zur semantischenInterpretation in der Tbeorie der GPSG", KIT-lAB 19,Technical University of Berlin 1987.\[Uszkoreit 87\]: H. Uszkoreit: "Word Order midConstituent Structure in German", CSLI Lecture NotesNmnber 8, Stanlord University 1987\[Weisweber 87\]: W. Weisweber: "Ein Dominmlz-ChartParser fiir generalisierte Phrasenstruktnrgrammatiken",KIT-Report 45, Technical University of Berlin 1987\[Weisweber 89\]: W. Weisweber: "Transfer in MachineTranslation by Non-Confluent Term-Rewrite Systems",in: Procs.
of the 13th German Workshop on ArtificialIntelligence (GWAI-89), Eringerfeld, September 1989,pp.
264-269\[Wcisweber/Hauenschild 90\]: W. Weisweber, Ch.tlauenschild: "A model of Multi-Level Transfer forMachine Translation and Its Partial Realization", KIT-Report 77, Technical University of Berlin 1990 and toappear in: Procs.
of the Seminar "Computers &Translation '89", Tiflis 1989\[Weisweber 92\]: W. Weiswebev.
"Term-Rewriting as aBasis for a Uniform Architecture in MachineTranslation", in: Procs.
of Coling 92, Nantes 1992Aclv:s DE COLING.92.
NAICrES, 23-28 hot'rr 1992 1 !
1 5 t'Jtoc:.
O1: COLING-92, NANTEs, AUO.
23-28.
1992
