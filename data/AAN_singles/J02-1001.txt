Binding MachinesAnto?nio BrancoUniversity of LisbonBinding constraints form one of the most robust modules of grammatical knowledge.
Despite theircrosslinguistic generality and practical relevance for anaphor resolution, they have resisted fullintegration into grammar processing.
The ultimate reason for this is to be found in the originalexhaustive coindexation rationale for their specification and verification.
As an alternative, wepropose an approach which, while permitting a unification-based specification of binding con-straints, allows for a verification methodology that helps to overcome previous drawbacks.
Thisalternative approach is based on the rationale that anaphoric nominals can be viewed as bindingmachines.1.
IntroductionSince the so-called integrative approach to anaphor resolution was developed in thelate 1980s (Carbonell and Brown 1988; Rich and LuperFoy 1988; Asher and Wada1989), and its practical viability extensively tested (e.g., Lappin and Leass 1994; Mitkov1997, 1998), it has been common wisdom that factors determining the antecedentsof anaphors divide into filters and preferences.
The former exclude impossible an-tecedents and help to circumscribe the set of antecedent candidates; the latter help topick the most likely candidate, which will be proposed as the antecedent.Binding constraints are a significant subset of such filters.
As they delimit the rel-ative positioning of anaphors and their possible antecedents in grammatical geometry,these constraints are crucial to restricting the search space for antecedents and enhanc-ing the performance of anaphor resolvers.1 From an empirical perspective, they stemfrom quite robust generalizations and exhibit a universal character, given their param-eterized validity across natural languages.
From a conceptual point of view, in turn, therelations among binding constraints involve nontrivial symmetry, which lends them amodular nature.
Accordingly, they have been considered one of the most robust andintriguing grammar submodules, usually referred to as binding theory.
However, incontrast to this, the formal and computational handling of binding constraints haspresented considerable resistance.Anaphor resolution typically builds on many sources of information?among them,information about the grammatical structure of the sentence?so that the different fil-ters and preferences may be used.
Consequently, it must in general be regarded as apostgrammatical process, in the sense that it is completed after sentences are parsed.Binding constraints, as a subset of the filters for anaphor resolution, are a special case Department of Informatics, Faculdade de Cie^ncias de Lisboa, Campo Grande, 1700 Lisboa, Portugal.E-mail: Antonio.Branco@di.fc.ul.pt.1 See the Appendix for a specification of binding constraints.
We adhere to the following terminologicalconvention: anaphors divide into reflexives and nonreflexives; reflexives form a class that includesshort-distance (ruled by Constraint A; e.g., himself ) and long-distance reflexives (Constraint Z; e.g.,Chinese ziji); nonreflexives include pronouns (Constraint B; e.g., he) and nonpronouns (Constraint C;e.g., the student).c?
2002 Association for Computational LinguisticsComputational Linguistics Volume 28, Number 1in this respect.
Given that they form a submodule of grammar, they are specified on apar with other grammatical submodules and constraints, and they are thus expectedto be integrated already into the processing of grammar.
Nevertheless, this integrationcannot be considered to have been adequately achieved.As we will discuss at length, the original methodology for verifying the complianceof grammatical representations with binding constraints requires extragrammaticalprocessing steps delivering a forest of indexed trees to anaphor resolvers (Chomsky1981).
More recently, constraint-based grammatical frameworks either require special-purpose extensions of the description formalism, though ensuring only a partial han-dling of these constraints, as in Lexical-Functional Grammar (LFG; Dalrymple 1993), ordo not offer a solution yet to integrate them into grammar, as in Head-Driven PhraseStructure Grammar (HPSG; Pollard and Sag 1994).2Our primary goal here is thus to bridge the gap between the grammatical natureof binding constraints and their full integration into grammar processing.
In particular,we aim at achieving this in such a way that a lean interface between grammar andreference processing emerges.In Section 2, we first underline the distinction, seldom taken into account, betweenspecification and verification of binding constraints.
We then review advances pro-posed in the literature concerning the completion of the verification task.
We observethat three major lines of progress can be identified: packing of anaphoric ambiguity,packing of nonlocal context, and lexicalization of binding constraints.Building on these contributions, in Section 3 we argue that the remaining stepforward is to harmonize these different advances.
We suggest that a more accurate,semantics-driven comprehension of the nature of binding constraints is a relevantmove toward this harmonization.
On the basis of this revision, we introduce a method-ology for verifying these constraints, which rests on the new concept of binding ma-chine, to be defined.In Section 4, in the light of this new methodology, we show how binding con-straints can be given a unification-based specification and can be fully integrated intogrammar.In Section 5, we present an illustrative example and discuss in detail how bindingconstraints and reference-processing systems are coordinated, and how the previouslyidentified drawbacks are overcome.2.
Advances in the Verification TaskIn recent decades, great strides have been made toward an empirically adequate spec-ification of binding constraints, this being an important research issue in theoreticallinguistics.
Many aspects of this issue?a parameterizable definition of local domain,the existence of a fourth constraint for long-distance reflexives, the possible subject-orientedness of some anaphors, and the degree of universality of binding constraints,to name just a few?have come under intense scrutiny.In contrast, the verification task has been studied much less extensively.
Eventhough important problems also remain to be solved in this more applied dimension2 The fragment of grammar developed and extensively discussed in Pollard and Sag (1994) is formallyspecified in its Appendix with the HPSG unification-based description language.
Binding constraintsescape such encoding.
While noting that these constraints have yet to be accommodated in HPSGgrammars, Bredenkamp?s (1996) and Backofen et al?s (1996) subsequent elaboration of this issueimplies that some kind of essential limitation of the unification-based formalism might have beenreached, a suggestion we seek to contradict here.2Branco Binding Machinesof the so-called binding theory, the issue of determining whether a given grammaticalrepresentation complies with binding constraints has not attracted similar attention.In this section, we briefly review major advances reported in resolving this issue.2.1 Exhaustive Coindexing for FilteringThe first formulation of a verification procedure, based on exhaustive coindexation,dates back to Chomsky (1980, Appendix; 1981, Section 3.2.3).
The basics of this ap-proach can be outlined as follows:After the grammatical parsing of a sentence with n NPs has been completed,for every parse tree t:a.
Indexation: Generate a new, annotated tree by assigning indices to the NPsin t.b.
Filtering: Store this annotated tree if the indexation of NPs respects bindingconstraints; otherwise, delete it.c.
Iteration: Repeat (a)?
(b) until all type-different assignments of n possiblydifferent indices have been exhausted.As discussed in Correa (1988), this procedure is grossly inefficient: its complex-ity was shown in Fong (1990) to be of exponential order.
Moreover, this approachis conceptually awkward, given that a submodule of the grammar, the set of bind-ing constraints, is not operative during grammatical processing, but functions as anextragrammatical add-on.3This proposal also disregards the need to interface grammar with systems for ref-erence processing.
The input for such systems will not be a grammatical representationto be refined vis-a`-vis the preferences for anaphor resolution, but a forest of differ-ently labeled trees that have to be internally searched and compared with each otherby anaphor resolvers.2.2 Packing Anaphoric AmbiguityA first proposal for improving the exhaustive coindexation-driven methodology is dueto Correa (1988), whose goal was to enhance the integration of binding constraints intogrammar and obtain a tractable verification procedure.Simplifying some details, the proposed algorithm can be outlined as follows:Let t be a constituency tree where every NP has a type-distinct index.
Start fromthe top node of t with two empty stacks, A and B, where indices will be collected,respectively local c-commanding4 indices and nonlocal c-commanding indices,while descending the tree.
When an NPj is found:a.
Copy: Leave a copy of A (if NPj is a short-distance reflexive) or B (if it is apronoun) at the NPj.3 Correa (1988, page 123) observes that although the integration of binding constraints ?into rules whichmay be used to derive structure that already satisfies the [constraints] is not a straightforward task,?that should be the path to follow, a point also strongly stressed in subsequent elaboration on this issueby Merlo (1993).4 C-command is a configurational version of the command relation where x c-commands y iff the firstbranching node that dominates x dominates y (Barker and Pullum 1990).3Computational Linguistics Volume 28, Number 1b.
Assign: Take the first index i of the stack copied into the NPj node, andannotate NPj with j = i.c.
Collect: Add index j to A in each sister node of NPj.When a local domain border is crossed:d. Reset: Reset B to A [ B.This algorithm has been given two different implementations, one by Correa(1988), the other by Ingria and Stallard (1989).
Further elaboration by Giorgi, Pianesi,and Satta (1990) and Pianesi (1991) offers a variant in terms of formal language tech-niques, where the stack copied into pronouns contains the antecedent candidates ex-cluded by Principle B.The ?do-it-while-parsing?
approach of Correa?s implementation has the advantageof discarding a special-purpose postgrammatical module for binding.
Nevertheless,this solution turns out to be dependent on a top-down parsing strategy.
On the otherhand, while Ingria and Stallard?s implementation is independent of the parsing strat-egy adopted, its independence comes at the cost of still requiring a special-purposepostgrammatical parsing module for binding.Besides incorporating binding theory into grammar, Correa?s development insidethe coindexation-driven methodology presents other significant improvements.
If onedisregards step (b)?a disguised recency preference mixed with binding constraints?and considers the result of verifying these constraints to be the assignment to an NPof the set of indices of its grammatically admissible antecedents, then it is possibleto discard the proliferation of indexed trees as a way to express anaphoric ambigu-ity.
Moreover, this packing of anaphoric ambiguity provides for a neat interface withanaphor resolvers, whose preferences will then pick the most likely antecedent candi-date from the relevant stack of indices.These advances permit a verification procedure of tractable complexity (Correa1988, page 127; Giorgi, Pianesi, and Satta 1990, page 5).
This results crucially fromthe move toward the lexicalization of the constraining effect of binding principles, asolution also adopted in subsequent proposals by other authors, as we will discussbelow.
The binding constraint of each anaphor is now enforced independently of howthe surrounding anaphors happen to be resolved.
This implies that there is no needto anticipate all the different resolutions for every relevant anaphor with a process ofexhaustive coindexation.
It also implies that cases of undesired transitive anaphoricityare handled by other filters during the anaphor resolution process.5However, these positive results regarding the verification task seem to be obtainedat the cost of some negative consequences regarding the specification task and em-pirical adequacy.
The above algorithm is acknowledged not to be able to cope with5 Consider the sentence John said that he shaved him.
Ignoring how other anaphors are resolved, in the lightof Binding Constraint B, he can take John as its antecedent, as empirically replicated in other minimallydifferent examples such as Johni said that he shaved Peter; likewise, him can take John as its antecedent.
Apoint worth noting is that, if he actually ends up resolved against John, the latter cannot be theantecedent of him, and vice versa.
This specific resolution of he and him, out of the many possibleresolutions, blocks two anaphoric links that would otherwise have been admissible.
It induces acontingent violation of binding constraint B due to an accidental, transitive anaphoric relationshipbetween he and him.This issue is not discussed in Correa (1988), since this paper is strictly focused on syntax andbinding.
See footnote 13 below for a suggestion on how this issue may be handled in a grammaticalframework integrating syntactic and semantic representations.4Branco Binding Machinesconstraints involving nonlocal dependencies.
It does not account for Principle C, andit only partially accommodates the anaphoric potential of anaphors complying withPrinciple B.
As Stack B only contains indices of the nonlocal c-commanders?ratherthan all indices except those of the local c-commanders?the algorithm does not cor-rectly account for the constraining effect of Principle B.
Also this approach does notaccount for backward anaphora or crossover cases (Correa 1988, page 127; Ingria andStallard 1989, page 268).62.3 Packing NonlocalityOther improvements in the task of verifying binding constraints are due to Dalrymple(1993) and Johnson (1995).
Instead of being concerned with packing ambiguity, theyare concerned with packing nonlocality.2.3.1 Trees in Nodes of Trees.
Johnson?s (1995) algorithm is embodied in Prolog code.Abstracting away from details associated with that format, it can be outlined as fol-lows:Let t be a constituency tree where every NP has a type-distinct index.
Forevery NPi in t, traverse the tree from NPi upward until the top node is reached.When a locally c-commanding NPj is found:a. Annotate NPi with i = j if NPi is a short-distance reflexive.b.
Annotate NPi with i 6= j if NPi is a nonreflexive.When a nonlocally c-commanding NPj is found:c. Annotate NPi with i 6= j if NPi is a nonpronoun.Although this outline renders the algorithm in a bottom-up fashion, Johnson inge-niously develops an implementation of it that is independent of the parsing strategy byresorting to delaying mechanisms.
Consequently, despite its postgrammatical flavor,this implementation does not require postgrammatical processing, thus incorporatingthe task of binding constraint verification into grammar processing.These results are obtained with some auxiliary devices.
Each node in the tree is?conceptualized as a pair consisting of a tree and a vertex in that tree?
(Johnson 1995,page 62).
Consequently, the whole tree where a given NP appears is locally accessibleto be ?walked up?
since its replica is present at the pair (Category, Tree), which is theNP node itself.This algorithm makes the verification of binding constraints more efficient becauseit does not resort to exhaustive indexation.
However, it does so at the cost of highlycomplicating the grammatical representation, since the tree is replicated at each oneof its nodes.While avoiding exhaustive indexation, this approach does not fully eliminate theproliferation of trees.
For a given ambiguous reflexive, with more than one admissible6 See the Appendix for the notion of locality and local domain and other auxiliary notions in thedefinition of binding constraints.Backward anaphora occurs in cases where the anaphor is resolved against an antecedent thatoccurs linearly after the anaphor, as in If hei is around, Peteri will do it.An example of so-called crossover cases is the ungrammatical construction *Whoi did Peter think sheisaw?
or *Peteri, hei said you like, where the fronted phrase is meant to be the antecedent of some pronounc-commanding the position from which this phrase is displaced.5Computational Linguistics Volume 28, Number 1antecedent, each antecedent candidate corresponds to a different coindexation and,consequently, to a different tree.
That is what generally happens with long-distancereflexives, whose antecedents can be found in any of the binding domains inducedby the local or by the upward predicators, but it may also happen with short-distanceones, as in (2) below.As to the interface with reference processing, problems arise with reflexives andnonreflexives, though of different nature.
Reflexives, if ambiguous, give rise to prolif-eration of trees, thus requiring comparison between trees during subsequent anaphorresolution.As to nonreflexives?pronouns and nonpronouns?their analysis does not giverise to proliferation of trees, but the representation of their ambiguity is not fullymade explicit in the grammatical representation of the sentence being parsed.
Thisis so because they end up associated with negative information, that is, informationabout what NPs cannot be their antecedents.
The index of a pronoun is made unequalwith the indices of its local c-commanders; it is not made equal with the indicesof its grammatically admissible antecedents.
The same holds for nonpronouns withrespect to their c-commanders.
Consequently, in this case, the task of determiningthe antecedent candidates that satisfy the relevant binding constraint of nonreflexivesremains to be completed after grammatical processing is finished.
This will involvesome postgrammatical rescanning of the parse tree generated for extracting the indicesthat do not enter in the inequalities obtained during the parsing.Finally, like Correa?s approach, Johnson?s does not account for backward anaphora,as only surface c-commanders are visible to the tree-climbing procedure.2.3.2 Equations with Regular Expressions.
The basic LFG account of binding, setforth by Dalrymple (1993), adopts a different approach to generalize over the possiblenonlocality of intrasentential anaphoric dependencies.
This approach makes crucialuse of a special-purpose extension of the LFG description formalism, the so-calledbinding equations, which are lexically associated with anaphors.
Building on Kaplanand Maxwell?s (1988) proposal concerning functional uncertainty, binding equationsare designed to encode the uncertainty concerning the long-distance path between thepositions of the anaphor and its permissible antecedent in the grammatical structure.7Given that uncertainty concerning long-distance dependencies involves a (possiblyinfinite) disjunction of possibilities, the basic idea is to encode such a disjunction infinite terms by the use of regular expressions over feature structures.
An example ofa binding equation encoding functional uncertainty is given in (1), preceded by anexample with the corresponding long-distance subject-oriented reflexive, Chinese ziji.
(1) Zhangsani yiwei [Lisij yiwei [: : : zijii=j=:::: : : ]].Zhangsani thought [Lisij thought [: : :himi=j=:::: : : ]]ziji: ((COMP* OBJ ") SUBJ) = " The right-hand side of the equation stands for the semantic representation (??)
of theanaphor (?"?
), while the left-hand side stands for the semantic representation of theantecedent.
The description of the antecedent indicates that the long-distance reflexiveis an object and that this object is constrained to be part of a feature structure where7 Koenig (1999) introduces a device in HPSG description language for stating inside-out constraints.
Thiswould help in developing an HPSG emulation of the LFG approach for the verification of bindingconstraints.6Branco Binding Machinesits antecedent may be one of the possibly many upward subjects.
The Kleene operator?*?
allows abbreviation of the set of paths consisting of zero or more occurrencesof COMP?corresponding to possible successive clausal embeddings?followed by oneoccurrence of OBJ.While regular expressions may be used in binding equations, such expressions arenot necessary if the grammatical relation between the anaphor and its admissible an-tecedents does not involve a long-distance dependency.
That is the case in (2), whichdisplays the binding equation for the short-distance reflexive himself.
Given that boththe subject and the object are admissible antecedents for the reflexive, in the bindingequation the use of the attribute GF, which stands for any grammatical function, un-derspecifies the grammatical functions of the admissible antecedents (Dalrymple 1993,Section 4.4.2).
(2) Johni described Billj to himselfi=j.himself: ((OBLGoal ") GF) =" Binding equations may also express negative constraints, as in (3), where the se-mantic representation of the pronoun is constrained to be different from that of itslocal coarguments.
(3) Johni described Billj to himi=j.him: ((OBLGoal ") GF) 6=" As noted in Dalrymple (1993, Section 3.3), a few aspects of this approach for bind-ing need to be fully worked out.
For instance, the positive equations for reflexivesdo not require identity of indices of anaphorically related expressions, but insteadimpose identity of semantic representations.
Without further elaboration, this will in-correctly enforce any type of anaphoric link (coreference, bound, bridging, e-type, etc.
)to the sole mode of coreference.
Another important issue is the account of nonlexicalanaphoric NPs: it is not clear how this type of NP (e.g., anaphoric definite descriptions,ruled by Principle C) may be assigned the corresponding binding equation.However these difficulties turn out to be resolved, the LFG approach for binding,though building on a different strategy for handling nonlocality, presents the samesort of problems as Johnson?s proposal.The interfacing of grammar with reference-processing systems is problematic sincethe proliferation of representations is not avoided.
Constructions with reflexives, ifthese are ambiguous, end up associated with several grammatical representations.In the case of long-distance reflexives, as exemplified in (1), these representationsresult from the possibly many solutions for the functional uncertainty encoded by theregular expression in the binding equation.
In the case of short-distance reflexives, asexemplified in (2), they result from the different solutions for the unification of thedifferent grammatical functions of the admissible antecedents with the attribute GF inthe binding equation.Likewise, the anaphoric capacity of pronouns and nonpronouns, typically ambigu-ous, is not explicitly captured in the final grammatical representation.
These anaphorsare lexically associated with negative equations, and for this type of equation thereis only one possible solution, namely, the grammatical structure where the semanticrepresentation of the anaphor is not identical to the semantic representations of anyof the phrases complying with the description of the antecedent in the left-hand side7Computational Linguistics Volume 28, Number 1of the equation (Dalrymple 1993, Section 4.1.5).
Therefore, for these anaphors the fi-nal grammatical representation provides no information about what their admissibleantecedents are according to the relevant binding constraints.3.
A Semantics-Driven ApproachThe contributions assessed above share a common point of departure with regardto the verification algorithm first proposed by Chomsky (1981), each addressing andsolving some of its more significant drawbacks.
The common move toward the lexical-ization of binding constraints represents an important shift in the verification strategy:verifying binding constraints is not a matter of inspecting final grammatical represen-tations, but instead a matter of some local operation triggered by information lexicallyassociated with anaphors about their anaphoric class.
This move has allowed bind-ing constraint verification to be incorporated into grammar processing and permittedtractable verification procedures.From the discussion in the previous section, it follows also that these contribu-tions have been partially successful in overcoming other problems of the verificationmethodology based on exhaustive coindexation.
Though partially successful, they havebrought to the fore important dimensions of binding that have to be concomitantlyaccounted for.
Accordingly, an alternative method for the verification of binding con-straints has to find a way to harmonize all those different dimensions?lexicalization,anaphoric ambiguity packing, and nonlocal context packing?while providing ade-quate empirical coverage and neatly interfacing grammar with reference processing.Against this background, a breakthrough depends, in our view, on reconsideringsome primitives underlying the conception of binding constraints.
In the previoussection, we made a clear distinction between specification and verification of bindingconstraints, so that the latter task could be isolated and better assessed.
We will arguenow that further progress on the verification task depends on bridging this distinctionand possibly changing the way the specification of binding constraints is understood.3.1 Patterns in the Semantics of AnaphorsBinding constraints have generally been viewed as well-formedness conditions onsyntactic representations, thus belonging to the realm of syntax.
In line with Gawronand Peters (1990), however, we think these constraints should rather be understood asconditions on semantic representations, since they primarily delimit (nonlocal) aspectsof semantic composition, rather than aspects of syntactic composition.8Like other types of constraints on semantic composition, binding constraints im-pose conditions on the interpretation of certain expressions?anaphors, in the presentcase?based on syntactic geometry.
However, this cannot be viewed as implying thatthey express grammaticality requirements.
By replacing a pronoun with a reflexivein a given sentence, for instance, we do not turn a grammatical construction into anungrammatical one, even if we assign to the reflexive the antecedent appropriately se-8 As implied by the title of this section, and as will become clear in the following discussion, this doesnot mean that we are claiming that binding theory can be built without any reference to syntacticconstructs.In the argument in the following paragraphs, we are assuming a notion of semantic compositionnot in its strict sense, as used for example in Montague Grammar, but in the broader sense that theintermediate semantic representations of the expressions are composed from other representations, asused in Discourse Representation Theory (DRT).
Note that reformulations of frameworks like DRT canbe worked out that result in a semantic system adhering to strict compositionality; see Janssen (1997,Section 4.4) for references and a thorough discussion of this issue.8Branco Binding Machineslected for the pronoun.
In that case, we are simply asking the hearer to try to assign tothat sentence a meaning it cannot express?just as if we were to ask whether someonecould interpret The red book is on the white table as describing a situation where a whitebook is on a red table.In this example, given how they happen to be syntactically related, the semanticvalues of red and table cannot be composed in such a way that the sentence could beused to describe a situation concerning a red table, rather than a white table.
Likewise,in the sentence John thinks Peter shaved him, given how they happen to be syntacticallyrelated, the semantic values of Peter and him cannot be composed in such a way thatthis sentence could be used to describe a situation where John thinks that Peter shavedhimself (i.e., Peter), rather than a situation where John thinks that Peter shaved otherpeople (e.g., Paul, Bill, or John himself).
The difference between these two cases is thatin the former, the composition of the semantic contributions of white and table (for theinterpretation of the NP white table) is constrained by local syntactic geometry, whilein the latter, the composition of the semantic contributions of John and him (for theinterpretation of the NP him) is constrained by nonlocal syntactic geometry.This discussion leads us to consider that, semantically, an anaphor should be spec-ified in the lexicon as a function whose argument is a suitable representation of thecontext?providing a semantic representation of the NPs available in the discoursevicinity?and its value is the set of the grammatically admissible antecedents for thatanaphor.
This rationale is in line with other approaches to the meaning of anaphorsthat, building in other sorts of arguments or research concerns, understand it also asa projection from some relevant representation of contexts to entities.9 But given thespecific focus of the present study, what should be noted is that, all in all, there willbe four such functions available to be lexically associated with anaphors, each corre-sponding to one of the four different classes of anaphors, in accordance with the fourbinding constraints A, B, C, and Z.103.2 Binding MachinesGiven these considerations, we can show that this conceptual shift to a semantics-driven approach for the verification of binding constraints provides an adequate basisfor harmonizing the advances put forward in the literature and discussed above.To make this alternative rationale for binding perspicuous, we suggest envisioningan anaphoric NP as a binding machine, which operates by receiving an input, changingits internal state, and returning an output.
More specifically, an anaphoric NP can be9 See, among others, Gawron and Peters (1990), Lappin and Francez (1994), and the discussion inJacobson (1999).Adopting Lo?bner?s (1987) duality criterion for quantification in natural language, and the formaltools he developed for the analysis of phase quantification, we showed in Branco (2000) that the fourbinding constraints can be seen as the effect of four binding quantifiers.
These phase quantifiers can beviewed as being expressed by the nominals of the four binding classes, and they quantify over thereference markers organized in the obliqueness order.A full-fledged account of the empirical support and justification for these results, and of theirimplications, is beyond the scope of this article.
For an abridged presentation of the core argument, seeBranco (1998).10 As there are different grammatical frameworks, binding constraints have been specified under differentversions.
Some differences between versions are due just to this fact that binding constraints aresupposed to be accommodated into different grammatical frameworks; some other differences,however, are real differences of specification in the sense that different variants may not have the sameempirical coverage or be aimed at predicting the same (un)grammatical constructions.
In theAppendix, we present a common and fairly well empirically tested version of binding theory given thecurrent state of the art in this area, a version presently adopted in the HPSG framework.
For analternative, see for example Reinhart and Reuland (1993).9Computational Linguistics Volume 28, Number 1viewed as a binding machine that (1) takes a representation of its context; (2) updatesits own semantic value in response both to its context and to its intrinsic anaphoricpotential (i.e., in accordance with its binding constraint); and (3) contributes to themakeup of the context, which the other binding machines read as input (i.e., againstwhich the other anaphoric NPs are interpreted).11The output of an anaphoric nominal n viewed as a binding machine is simply theincrementing of the context with a copy of its reference marker.12The internal state of the machine after its operation is a representation of the con-textualized anaphoric capacity of n under the form of the set of reference markersof the grammatically admissible antecedents of n. This internal state results when thebinding constraint associated with n is applied to the input, and it is the interface pointbetween grammar and reference processing.
This set of reference markers collects theantecedent candidates, and its elements are submitted to other filters and preferencesby the anaphor resolvers so that one of them ends up being chosen as the antecedent.The input, in turn, is a representation of the aspects of the context relevant tohelp circumscribe the anaphoric potential of nominal anaphors.
It is coded under theform of three lists of reference markers, A, Z, and U.
In list A, the reference markersof the local o-commanders of n are ordered according to their relative grammaticalobliqueness; Z includes the o-commanders of n, possibly observing a multiclausalobliqueness hierarchy; and U is the list of all reference markers in the discourse context,including those not linguistically introduced.Given this setup, the contribution of binding constraints in circumscribing the an-aphoric potential of nominals is explicitly acknowledged.
The particular contextualizedinstantiation of that potential and the verification of binding constraints coincide andconsist of a few simple steps.
If n is a short-distance reflexive, its internal state is setup as A0, where A0 contains the reference markers of the o-commanders of n in A.If n is a long-distance reflexive, its semantic representation includes Z0, such that Z0contains the o-commanders of n in Z.
If n is a pronoun, B = U n (A0 [ [r-markn]) isencoded into its representation, where r-markn is the reference marker of n. Finally, ifn is a nonpronoun, its updated semantics keeps a copy of C = U n (Z0 [ [r-markn]).Besides adhering to an empirically grounded conception of binding constraints,this approach embodies, and harmonizes, the crucial contributions of previous pro-posals concerning the verification of these constraints.
It assumes the lexicalizationof binding constraints.
Concomitantly, it builds on specific strategies for the packingof anaphoric ambiguity (viz., list of reference markers) and nonlocal context (viz., setof lists of reference markers).
Moreover, it achieves this while avoiding the above-mentioned problems related to the proliferation of grammatical representations andto the interfacing of grammar with reference processing, as well as the problems ofensuring complete empirical coverage.What remains to be discussed is whether, given this new format for the verifica-tion of binding constraints, they can still be specified and integrated into grammarprocessing with currently affordable formal and computational tools.4.
A Unification-Based Specification ExerciseThis new approach to binding constraints can be integrated into grammar easily andin a principled manner.
In what follows, we outline how these constraints can bespecified and handled in a unification-based grammatical framework such as HPSG.11 This rationale is in line with the insights of Johnson and Klein (1990) concerning the processing of thesemantics of nominals.12 See Kamp and Reyle (1993) for the notion of reference marker.10Branco Binding MachinesAs a proposal for that integration, we designed an extension to the UnderspecifiedDiscourse Representation Theory (UDRT) semantics component for HPSG developedby Frank and Reyle (1995).
This component is encoded as the value of the featureCONT(ENT), which is now extended with the feature ANAPH(ORA); see (4).
This new fea-ture keeps information about the anaphoric potential of the corresponding nominal n:its subfeature ANTEC(EDENTS) keeps a record of how that potential is updated when theanaphor enters a grammatical construction; and its subfeature R(EFERENCE)-MARK(ER)indicates the reference marker of n, to be contributed to the context.Similarly, and still assuming Pollard and Sag?s (1994) feature geometry as a startingpoint, the NONLOC value is also extended with a new feature, BIND(ING), with subfea-tures LIST-A, LIST-Z, and LIST-U.
These lists provide a specification of the relevant contextand correspond to the lists A, Z, and U above.
Subfeature LIST-LU is a fourth, auxiliarylist for encoding the contribution of local context to the global, nonlocal context.The SYNSEM value of a pronoun, for instance, can now be designed as shown in (4).
(4)266666666666666666666666664loc jcont26666666666666664ls"l-max 1l-min 1#subord fgconds8<:"label 1arg-r 2#9=;anaph24r-mark 2antec 5 principleB4 , 3 , 23537777777777777775nonloc jbind26664list-a 3list-z listlist-u 4list-lu 237775377777777777777777777777775Given this feature structure, the binding constraint associated with pronouns isspecified as the relational constraint principleB.
This relational constraint returns listB as the value of ANTEC.
It is defined to take (in the first argument) all markers inthe discourse context, given in LIST-U value, and remove from them both the localo-commanders of the pronoun (included in the second argument) and the markercorresponding to the pronoun (in the third argument).The SYNSEMs of other anaphors, ruled by Principles A, C, and Z, are similar to theone above.13 The only difference lies in the relational constraint in the ANTEC value,which encodes the appropriate binding constraint and returns the updated anaphoricpotential under the form of list A0, C, or Z0, respectively, as discussed in the previoussection.Turning to the specification of the context (i.e., the values of LIST-A, LIST-Z, LIST-U,and LIST-LU), this is handled by means of a new HPSG principle, which can be termedthe Binding Domains Principle.
This principle consists of three clauses constraining13 Binding constraints for nonlexical anaphoric nominals are lexically stated in the correspondingdeterminers.A constraint for pronominal anaphoric transitivity may also be introduced at the lexicalrepresentation of pronouns, by including in the CONDS value in (4) Discourse RepresentationStructure conditions expressing that8ra, rb(( 2 = anaphra ^ rb = anaphra) ) ([rb] [ 5 = 5 )).11Computational Linguistics Volume 28, Number 1signs and their values with respect to these lists of reference markers.
Due to spacelimitations, we illustrate this principle simply by stating Clause I, which constrainsLIST-U and LIST-LU.14(5) Binding Domains Principle, Clause Ia.
In every sign, the LIST-LU value is identical to the concatenationof the LIST-LU values of its daughters.b.
In a sign of sort discourse, the LIST-LU and LIST-U values are tokenidentical.c.
In a non-NP sign, the LIST-U value is token identical to eachLIST-U value of its daughters.d.
In an NP sign k,i.
In Spec-daughter, the LIST-U value is the result ofremoving the elements of the LIST-A value ofHead-daughter from the LIST-U value of k;ii.
In Head-daughter, the LIST-U value is the result ofremoving the value of R-MARK of Spec-daughter from theLIST-U value of k.LIST-LU collects, up to the outermost sign of sort discourse, all the markers contributedby the different NPs for the context.
At this sign, they are passed to LIST-U, by meansof which they are propagated to every NP.
The HPSG ontology was extended with thesort discourse, which corresponds to sequences of sentential signs and at whose signsreference markers from the nonlinguistic context may be introduced in the semanticrepresentation.15 Subclause (d) is meant to avoid what is known in the literature asthe i-within-i effect.5.
Example and DiscussionThe above unification-based specification of binding constraints, while ensuring theirintegration into grammar, allows the binding module to be suitably hooked upwith systems of reference processing.
Feature ANTEC is the interface point betweenthem.14 Clauses II and III constrain LIST-A and LIST-Z, respectively.
Roughly, Clause II ensures that the LIST-Avalue is passed from the lexical head to its successive projections, and also from the head-daughters totheir arguments.
Note that exemption occurs when principleA( 1 , 2 ) is the empty list, in which case thereflexive should find its antecedent outside any binding constraint (Pollard and Sag 1994,Chapter 6).Clause III ensures that, at the top node of the grammatical representation, LIST-Z is set up as theLIST-A value of that node, and that LIST-Z is successively incremented at the suitable downstairs nodesby appending its value with the LIST-A value of those nodes.At the lexical entry of a predicator, LIST-A is defined as the concatenation of the R-MARK values ofits subcategorized arguments specified in the ARG-S value.For a detailed specification of the Binding Domains Principle, see Branco (2000).15 Reference markers can be introduced linguistically, by the utterance of the corresponding expressions,or nonlinguistically, by means of their cognitive availability in the context of the discourse.
Theories ofnatural language semantics can be used to represent these two types of reference markers.Nevertheless, only a global theory encompassing natural language and cognition seems to be able topursue the ambitious goal of providing an integrated account of how both types of markers, and notonly those linguistically evoked, are introduced into semantic representation.12Branco Binding MachinesWe are following a distinction between the notions of anaphor resolution and ref-erence processing commonly assumed in the literature.
Anaphor resolution is seen asbeing concerned with the task of identifying the antecedents of anaphors.
It is there-fore part of a reference-processing system, whose overall goal, in turn, is to determinethe interpretation of the anaphors.
This involves determining the appropriate semantictype of the anaphoric link between an anaphor and its antecedent (coreference, bridg-ing, e-type, bound anaphora, etc.)
and providing a suitable semantic representationfor this link.Being the interface point between grammatical representation and reference pro-cessing, the list value of the feature ANTEC has just to be reduced by anaphor resolvers,given the relevant preferences and filters other than binding constraints, until the mostlikely antecedent is isolated.
It is thus a process concerning selection in a list, ratherthan search in a set of indexed trees.As to reference processing in general, the specification suggested in the previoussection provides a suitable framework for the correct representation of the semanticallydifferent types of anaphoric links, the range of options not being restricted to corefer-ence only.
After the anaphor has been resolved, the reference marker of the anaphorand the reference marker selected as the antecedent can be related in accordance withthe mode of anaphora determined by the reference-processing system.This semantic relation between anaphorically related reference markers can berepresented simply as another DRS condition in the CONDS value.
This makes possiblea mainstream DRT representation for the resolved anaphoric link, thus building onthe substantial number of already worked out solutions available in the literature forDRT-based semantic representation of anaphora.16This specification of binding theory for HPSG was tested with a computationalimplementation using ProFIT (Erbach 1995).
In this implementation, the relationalconstraints corresponding to binding principles were straightforwardly encoded bymeans of Prolog predicates associated to the lexical clauses of anaphoric expressions,and defined in terms of simple auxiliary predicates ensuring the component operationsof list appending, list difference, and so on.
It is worth noting that some of thesepredicates have arguments?for example, the LIST-U value, whose value is computedwhen the whole relevant grammatical representation is built up.
This is a consequenceof packing nonlocal information in such lists.
As in Johnson?s approach, it requiresthat some delaying device be used, which in this computational grammar was doneby resorting to the Prolog built-in predicate freeze/2.For the sake of the example, consider the following multiclausal sentence fromPortuguese displaying backward anaphora between a topicalized reflexive and a pro-noun:(6) De si pro?prio, cada estudante disse que ele gosta.of him self every student said that he likes?Himself, every student said that he likes.
?An abridged version of the grammatical representation produced by the imple-mented grammar for this sentence is presented in Figure 1, where the feature structuresbelow the tree correspond to partial grammatical representations of the constituents16 See Kamp and Reyle (1993) for a comprehensive rendering of DRT, and Branco (2000, Chapter 5) for anoverview concerning the semantic representation of different modes of anaphora.13Computational Linguistics Volume 28, Number 1heeverystudenthimself...|ANAPHORAREFMARKANTEC...|BINDINGLIST_ALIST_ZLIST_ULIST_LU24 41524754392243925424392415242475439224,,,, ,,,,,,?
??
??
??
??
??
?
?
?
?
??
??
?
?
?
?
??
??
?
?
?
?
?
?
?
??
??
?
?
?
?
?
?
?
?...|ANAPHORAREFMARKVAR...|BINDINGLIST_ALIST_ZLIST_ULIST_LU2475454 54 415242475439224754?
???
???
??
?
?
?
?
??
??
?
?
?
?
??
??
?
?
?
?
?
?
?
??
??
?
?
?
?
?
?
?
?,,,,,...|ANAPHORAREFMARKANTEC...|BINDINGLIST_ALIST_ZLIST_ULIST_LU392242439254243924152424754392392?
???
???
??
?
?
?
?
??
??
?
?
?
?
??
??
?
?
?
?
?
?
?
??
??
?
?
?
?
?
?
?
?, ,,,,,,saidthatctx...CONT|CONDSARGR...|BINDINGLIST_ALIST_ZLIST_ULIST_LU...... ,,,,4154152424754392415[]?
??
?
?
?
?
??
??
?
?
?
?
??
??
?
?
?
?
?
?
??
??
?
?
?
?
?
?
?likestraceLIST_ALIST_ZLIST_ULIST_LU2439254243924152424754392, ,,,,,,?
??
?
?
?
??
??
?
?
?
?LIST_ALIST_ZLIST_ULIST_LU2439254243924152424754392392, ,,,,,,?
??
?
?
?
?
??
??
?
?
?
?
?LIST_ALIST_ZLIST_ULIST_LU54 54 41524247543922424754,,,,,,?
??
?
?
?
?
??
??
?
?
?
?
?LIST_ALIST_ZLIST_ULIST_LU54 54 41524247543922424754392,,,,,,,?
??
?
?
?
?
??
??
?
?
?
?
?LIST_ALIST_ZLIST_ULIST_LU41524247543924152424754392,,,,,,,,?
??
?
?
?
?
??
??
?
?
?
?
?Figure 1Abridged grammatical representation for the example sentence (9).14Branco Binding Machinesin the leaves of the tree, while the ones above the tree correspond to partial represen-tations of some nonterminal nodes.First, consider LIST-Z.
In the outer nodes of the matrix clause, due to the effect ofthe Binding Domains Principle, Clause III, the LIST-Z value is obtained from the valueof LIST-A, with which it is token identical, comprising the list with a single elementh 54 i.
In the nodes of the embedded clause, the LIST-Z value is the concatenation of thatupper LIST-Z value and the LIST-A value h 24 , 392 i in the embedded clause, from whichthe list h 54 , 24 , 392 i is the result.
LIST-A values are obtained from the representation ofthe subcategorization frames of the verbal predicators.Next, consider LIST-LU.
Reading upward, note that at each higher level in theconstituency representation, the list gets longer; by the effect of the Binding DomainsPrinciple, Clause I, the LIST-LU value at a given node gathers the reference markers ofthe nodes dominated by it.
At the discourse top node, LIST-LU includes all the referencemarkers of the NPs in the example, the list h 415 , 24 , 247 , 54 , 392 i.
The Binding DomainsPrinciple, Clause I, also ensures that this list of all reference markers is passed to theLIST-U value of the top node and that it is then percolated down to all relevant nodesof the grammatical representation.Taking a closer look at the NPs, it is easy to check that every phrase contributes tothe global anaphoric potential of its linguistic context by passing the tag of its referencemarker into its own LIST-LU.
In the case of the quantificational NP every student, twotags are passed, corresponding to the REFMARK value, providing for e-type anaphora,and the VAR value, providing for bound anaphora interpretations.
And in the case ofthe ctx node, to illustrate how the nonlinguistic context may be taken into accountin the linguistic representation, the reference marker h 415 i is obtained from the set ofsemantic conditions that conventionally may capture the nonlinguistic context.On the other hand, the context also contributes to establishing the anaphoric po-tential of each NP.
This is ensured by the different clauses of the Binding DomainsPrinciple, which enforce the presence of suitable values of LIST-A, LIST-Z, and LIST-U atthe different nodes.Finally, token identity is ensured between the ANTEC value and the outcome of thedifferent relational constraints that are lexically associated with each NP and expressbinding constraints.
The value of ANTEC is a list that, at this stage of anaphor resolution,records the grammatically admissible antecedents of the corresponding anaphor onlyin the light of binding constraints.6.
ConclusionsDeparting from the coindexation-driven approach for encoding anaphoric dependen-cies in grammatical representations, we have proposed an alternative methodologywhere binding constraints are viewed as contributing to circumscribing their contex-tually determined semantic value.
This semantics-driven approach allows a principledintegration of binding constraints into grammar that supports both a specification for-mat and a verification methodology free from previous difficulties.
Importantly, it alsopermits a neat interface between the grammatical module of binding and systems ofreference processing.AppendixIn this article, we consider the version of binding constraints formulated within Head-Driven Phrase Structure Grammar (Pollard and Sag 1994, Chapter 6).
Recent devel-opments indicate that there are four binding constraints (Xue, Pollard, and Sag 1994;15Computational Linguistics Volume 28, Number 1Branco and Marrafa 1999).
Here, the definition of each binding constraint is followedby an illustrative example.
(7) Principle AA locally o-commanded short-distance reflexive must be locally o-bound.Leei thinks [Maxj saw himselfi=j].
(8) Principle ZAn o-commanded long-distance reflexive must be o-bound.
[O amigo do Ruii]j acha que o Pedrok gosta dele pro?prioi=j=k.
[the friend of the Rui] thinks that the Pedro likes of he PRO?PRIO?
[Rui?s friend]j thinks that Pedrok likes himj/himselfk.?
(Portuguese)(9) Principle BA pronoun must be locally o-free.Leei thinks [Maxj saw himi=j].
(10) Principle CA nonpronoun must be o-free.
[Kimi?s friend]j thinks [Lee saw Kimi=j].These constraints are defined on the basis of some auxiliary notions.The notion of local domain involves the partition of sentences and associated gram-matical geometry into two zones of greater or lesser proximity with respect to theanaphor.
The exact definition of the boundary separating the local from the nonlocaldomain may vary from language to language.
Typically, the local domain tends tocorrespond to the structure in the grammatical representation that is affected by theselectional capacity and requirements of a predicator.O-command is a partial order under which, in a clause, the subject o-commands thedirect object, the direct object o-commands the indirect object, and so on, following theusual obliqueness hierarchy of grammatical functions, while in a multiclausal sentence,the upward arguments o-command the successively embedded arguments.The notion of o-binding is such that x o-binds y iff x o-commands y and x and yare coindexed, where coindexation is meant to represent anaphoric links.AcknowledgmentsI am grateful to Hans Uszkoreit for adviceand helpful discussion, and to MarkJohnson for clarifying criticisms.
I am solelyresponsible for remaining errors.The results presented here were obtainedwhile I was on leave at the LanguageTechnology Group of the DFKI-GermanResearch Center on Artificial Intelligence,Saarbru?cken, Germany, whose hospitalityand enthusiastic atmosphere I was veryfortunate to enjoy and I hereby gratefullyacknowledge.ReferencesAsher, Nicholas and Hajime Wada.
1989.
Acomputational account of syntactic,semantic and discourse principles foranaphora resolution.
Journal of Semantics,6:309?344.Backofen, Rolf, Tilman Becker, Jo Calder,Joanne Capstick, Luca Dini, Jochen Do?rre,16Branco Binding MachinesGregor Erbach, Dominique Estival, SureshManandhar, Anne-Marie Mineur, Gertjanvan Noord, Stephan Oepen, and HansUszkoreit.
1996.
Final report of theEAGLES Formalisms Working Group.Technical Report, EAGLES-ExpertAdvisory Group on LanguageEngineering Standards, Luxemburg.Barker, Chris and Geoffrey K. Pullum.
1990.A theory of command relations.Linguistics and Philosophy, 13:1?34.Branco, Anto?nio.
1998.
The logical structureof binding.
In Proceedings of the 36th AnnualMeeting of the Association for ComputationalLinguistics and 17th International Conferenceon Computational Linguistics(ACL/COLING?98), pages 181?187.Branco, Anto?nio.
2000.
Reference Processingand Its Universal Constraints.
Edic?o?esColibri, Lisbon.Branco, Anto?nio and Palmira Marrafa.
1999.Long-distance reflexives and the bindingsquare of opposition.
In Gert Webelhuth,Jean-Pierre Koenig, and Andreas Kathol,editors, Lexical and Constructional Aspects ofLinguistic Explanation.
CSLI Publications,Stanford, CA, pages 163?177.Bredenkamp, Andrew.
1996.
Towards aBinding Theory for Head-Driven PhraseStructure Grammar.
Ph.D. thesis,University of Essex.Carbonell, Jaime and Ralf Brown.
1988.Anaphora resolution: A multi-strategyapproach.
In Proceedings of the 12thInternational Conference on ComputationalLinguistics (COLING?88), pages 96?101.Chomsky, Noam.
1980.
On binding.Linguistic Inquiry, 11:1?46.Chomsky, Noam.
1981.
Lectures onGovernment and Binding.
Foris, Dordrecht.Correa, Nelson.
1988.
A binding rule forgovernment-binding parsing.
InProceedings of the 12th InternationalConference on Computational Linguistics(COLING?88), pages 123?129.Dalrymple, Mary.
1993.
The Syntax ofAnaphoric Binding.
CSLI Publications,Stanford, CA.Erbach, Gregor.
1995.
Prolog with features,inheritance and templates.
In Proceedingsof the 7th Conference of the European Chapterof the Association for ComputationalLinguistics (EACL?95), pages 180?187.Fong, Sandiway.
1990.
Free indexation:Combinatorial analysis and acompositional algorithm.
In Proceedings ofthe 28th Annual Meeting of the Association forComputational Linguistics (ACL?90),pages 105?110.Frank, Anette and Uwe Reyle.
1995.Principle based semantics for HPSG.
InProceedings of the 7th Conference of theEuropean Chapter of the Association forComputational Linguistics (EACL?95),pages 9?16.Gawron, Jean Mark and Stanley Peters.1990.
Anaphora and Quantification inSituation Semantics.
CSLI Publications,Stanford, CA.Giorgi, Alessandra, Fabio Pianesi, andGiorgio Satta.
1990.
A computationalapproach to binding theory.
In Proceedingsof the 13th International Conference onComputational Linguistics (COLING?90),pages 1?6.Ingria, Robert and David Stallard.
1989.
Acomputational mechanism for pronominalreference.
In Proceedings of the 27th AnnualMeeting of the Association for ComputationalLinguistics (ACL?89), pages 262?271.Jacobson, Pauline.
1999.
Binding withoutpronouns.
In Formal Grammar Conference1999: Symposium on Grammatical Resourcesand Grammatical Inference.
Abstract.Janssen, Theo.
1997.
Compositionality.
InJohan van Benthem and Alice ter Meulen,editors, Handbook of Logic and Language.Elsevier, Amsterdam, pages 417?474.Johnson, Mark.
1995.
Constraint-basednatural language parsing.
Course notes,7th European Summer School in Logic,Language and Information, Barcelona.Johnson, Mark and Ewan Klein.
1990.Discourse, anaphora and parsing.
InProceedings of the 28th Annual Meeting of theAssociation for Computational Linguistics(ACL?90), pages 669?675.Kamp, Hans and Uwe Reyle.
1993.
FromDiscourse to Logic: Introduction toModeltheoretic Semantics of NaturalLanguage, Formal Logic and DiscourseRepresentation Theory.
Kluwer, Dordrecht.Kaplan, Ronald and John Maxwell.
1988.
Analgorithm for functional uncertainty.
InProceedings of the 12th InternationalConference on Computational Linguistics(COLING?88), pages 297?302.Koenig, Jean-Pierre.
1999.
Inside-outconstraints and description languages forHPSG.
In Gert Webelhuth, Jean-PierreKoenig, and Andreas Kathol, editors,Lexical and Constructional Aspects ofLinguistic Explanation.
CSLI Publications,Stanford, CA, pages 265?280.Lappin, Shalom and Nissim Francez.
1994.E-type pronouns, I-sums, and donkeyanaphora.
Linguistics and Philosophy,17:391?428.Lappin, Shalom and Herbert Leass.
1994.An algorithm for pronominal anaphoraresolution.
Computational Linguistics,20:535?561.17Computational Linguistics Volume 28, Number 1Lo?bner, Sebastian.
1987.
Quantification as amajor module of natural languagesemantics.
In Jeroen Groenendijk, Dick deJong, and Martin Stokhof, editors, Studiesin DRT and the Theory of GeneralizedQuantifiers.
Foris, Dordrecht, pages 53?85.Merlo, Paola.
1993.
For an incrementalcomputation of intra-sententialcoreference.
In Proceedings of theInternational Joint Conference on ArtificialIntelligence (IJCAI?93), pages 1216?1221.Mitkov, Ruslan.
1997.
Factors in anaphoraresolution: They are not the only thingsthat matter.
In Proceedings of theACL/EACL?97 Workshop on OperationalFactors in Practical, Robust AnaphoraResolution, pages 36?51.Mitkov, Ruslan.
1998.
Robust pronounresolution with limited knowledge.
InProceedings of the 36th Annual Meeting of theAssociation for Computational Linguistics and17th International Conference onComputational Linguistics(ACL/COLING?98), pages 869?875.Pianesi, Fabio.
1991.
Indexing and referentialdependencies within binding theory: Acomputational framework.
In Proceedingsof the 5th Conference of the European Chapterof the Association for ComputationalLinguistics (EACL?91), pages 39?44.Pollard, Carl and Ivan Sag.
1994.Head-Driven Phrase Structure Grammar.University of Chicago Press, Chicago.Reinhart, Tanya and Eric Reuland.
1993.Reflexivity.
Linguistic Inquiry, 24:657?720.Rich, Elaine and Susann LuperFoy.
1988.
Anarchitecture for anaphora resolution.
InProceedings of the 2nd Conference on AppliedNatural Language Processing (ANLP?88),pages 18?24.Xue, Ping, Carl Pollard, and Ivan Sag.
1994.A new perspective on Chinese ziji.
InProceedings of the 12th West Coast Conferenceon Formal Linguistics (WCCFL?94).
CSLIPublications, Stanford, CA.18
