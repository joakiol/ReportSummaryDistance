Coling 2008: Companion volume ?
Posters and Demonstrations, pages 107?110Manchester, August 2008Comparative Evaluation of Arabic Language MorphologicalAnalysers and  StemmersMajdi SawalhaSchool of Computing,University of Leeds,Leeds LS2 9JT, UK.sawalha@comp.leeds.ac.ukEric AtwellSchool of Computing,University of Leeds,Leeds LS2 9JT, UK.eric@comp.leeds.ac.ukAbstractArabic morphological analysers andstemming algorithms have become apopular area of research.
Manycomputational linguists have designedand developed algorithms to solve theproblem of morphology and stemming.Each researcher proposed his own goldstandard, testing methodology andaccuracy measurements to test andcompute the accuracy of his algorithm.Therefore, we cannot make comparisonsbetween these algorithms.
In this paperwe have accomplished two tasks.
First,we proposed four different fair andprecise accuracy measurements and two1000-word gold standards taken from theHoly Qur?an and from the Corpus ofContemporary Arabic.
Second, wecombined the results from themorphological analysers and stemmingalgorithms by voting after running themon the sample documents.
The evalua-tion of the algorithms shows that Arabicmorphology is still a challenge.1 Three Stemming AlgorithmsWe selected three stemming algorithms forwhich we had ready access to the implementationand/or results.Shereen Khoja Stemmer : We obtained a Javaversion of Shereen Khoja?s stemmer(Khoja,1999).
Khoja?s stemmer removes thelongest suffix and the longest prefix.
It thenmatches the remaining word with verbal and?
2008.
Licensed under the Creative Commons At-tribution-Noncommercial-Share Alike 3.0 Unportedlicense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.1Tim Buckwalter web site: http://www.qamus.orgnoun patterns, to extract the root.
The stemmermakes use of several linguistic data files such asa list of all diacritic characters, punctuation char-acters, definite articles, and 168 stop words (Lar-key & Connell 2001).Tim Buckwalter Morphological analyzer:Tim Buckwalter developed a morphological ana-lyzer for Arabic.
Buckwalter compiled a singlelexicon of all prefixes and a corresponding uni-fied lexicon for suffixes instead of compilingnumerous lexicons of prefixes and suffix mor-phemes.
He included short vowels and diacriticsin the lexicons1.Tri-literal Root Extraction Algorithm : Al-Shalabi, Kanaan and Al-Serhan developed a rootextraction algorithm which does not use any dic-tionary.
It depends on assigning weights for aword?s letters multiplied by the letter?s position,Consonants were assigned a weight of zero anddifferent weights were assigned to the lettersgrouped in the word ??
where all affixesare formed by combinations of these letters.
Thealgorithm selects the letters with the lowestweights as root letters (Al-Shalabi et al 2003).2 Our Approach: Reuse Others?
WorkThe reuse of existing components is an estab-lished principle in software engineering.
We pro-cured results from several candidate systems, andthen developed a program to allow ?voting?
onthe analysis of each word: for each word, exam-ine the set of candidate analyses.
Where all sys-tems were in agreement, the common analysis iscopied; but where contributing systems disagreeon the analysis; take the ?majority vote?, theanalysis given by most systems.
If there is a tie,take the result produced by the system with thehighest accuracy (Atwell & Roberts, 2007).3 Experiments and ResultsExperiments are done by executing the threestemming algorithms, discussed above, on a ran-107domly selected chapter number 29 of the Qur?an?Souraht Al-Ankaboot?
?The Spider?
in English see figure 1; and a newspaper text takenfrom the Corpus of Contemporary Arabic devel-oped at the University of Leeds, UK.
We se-lected the test document from the politics, sportsand economics section, taken from newspaperarticles, see figure 2 (Al-Sulaiti & Atwell, 2006).Each test document contains about 1000 words.We manually extracted the roots of the testdocuments?
words to compare results from dif-ferent stemming systems.
Roots extracted havebeen checked by Arabic Language scholars whoare experts in the Arabic Language.Table 1 shows a detailed analysis been donefor the sample test documents, the Qur?an corpusas one unit, and a daily newspaper of contempo-rary Arabic test document, taken from Al-RaiFigure 1: Sample from Gold Standard firstdocument taken from Chapter 29 of the Qur?an.daily newspaper published in Jordan.
Theanalysis also shows that function words such as?
?
?fi?
?in?, ??
?min?
?from?, ???Ala?
?on?
and ???
?Allah?
?GOD?
are themost frequent words in any Arabic text.
On theother hand, non functional words with high fre-quency such as ????
?Al-Jami?at?
?Uni-versities?
and ???
?Al-Kuwait?
?Kuwait?gives a general idea about the main topic of thearticle.Simple tokenization is applied for the text ofthe gold standard documents.
This will ensurethat test documents can be used to test anystemming algorithm smoothly and correctly.4     Four Accuracy measurementsIn order to fairly compare between differentstemming algorithms we applied four differentFigure 2: Sample from Gold Standard documenttaken from the Corpus of Contemporary Arabic.Table 1: Summary of detailed analysis.Qur?an Corpus Gold StandardFirst DocumentChapter 29 ofthe Qur?anGold StandardSecond Document?Corpus of Con-temporary Arabic?Al-Rai dailyNewspaper TestDocumentTotalnumber ofTokens77,789 987 1005 977Word Types 19,278 616 710 678Top 10 To-kensToken Freq.
Token Freq.
Token Freq.
Token Freq.1   ?
1179   ?
21  35  392   ?
872   	??
17  21  163   ?
832   ?
14  12  134    	??
?
808   	??
12 	12 ?
	10 ?5    ??
652   ?
?
?
12 	11 ?
	9 ?6   ?
?
?
640  	 ?
10 ??
12 ?
	8 ?7  ?
?
?
605    	??
?
11 "!
?
10 ?	8 ?8   	??
?
464   ?
8 	7 ??
8 ?9 499 ?
?
?
 	??
8 &%?
8 ??
7 ?10  ?
(?
?
416 ?
( ?
?
?
8  7 	%+ 7,   ?
?
?
	0  ?
/ & .
?
??
?
?
?
?
?
?
?
?
2   ?
  	?
3   ?
?
0   	??
?
?
?
 4   ???
?
?
?
?
?
?
?
??
?
?   !
5 	 7 6 ) ?
?
  	?
 	?
   !
5    0 8   (      	4 6      ?
?
?
??
???
??
?
?
?
?
?
??
???
?
?
??
?
?
?
?
??
?
?
?
? 4 (  : ?
&  & 5 ; ?
?
?
?
?   !
    	?
> 5   ?
?
/ & .
?
 	?
?
?
?
???
?
?
?
?>   ?
??
?
?
?
?
?
?
?
?
?
?
??
?
?   ?   ?
?
?
?
?
?
?
 @?
?
?
 	?
A + ?
?
B    	4 ?
?
?
?
 , +   ?
?
?
?
?
?
?
?
?
??
?
??
?
?
?
?
?  D 	   	2 &   ?
?
?
 	?
6   "    ) B   6 !
 05   ?
  + ?
?
E5  &	?F ??
?
?
?
?
?
?
??
?
?
?
?
?
??
?
?
?
?
?
?
??
?
?
?0 8    2 , ?
  	?
?
G	?
?    3  ?
?
  	5   ?
?
!
?
 ?
?
?
?
?
>?
??
?
?
?
??
?
?
??
?
?
?
?
?
?
?
?
?
?
; 5 :?>?
 5 7 ?
?
?   !
 ?
?
( ?
 	8 0  ?
/ &   ?
  I "  	 8 0  ?
J ??
?
?
?
??
?
?
?
?
?
?
?
?
?
?
?
??
?
???
?
?
? <  K 	  L 5 	    <  ?
, N  	  6    / &   ?
?
?
+ ?
6 ??
?
>  ?
&) B 	??
?
?
?
?
?
?
?
?
?
?
?
??
?
?
?
?
??
??
?
?
?
?
?
?
?
?
?
??
?   !
J  0  ?
< 0  ;  ) P   0  !
+ ,    	 ?
8 !
Q J     0  ?
??
?
?
?
?
?
?
?
?
?>???
?
?
?
?
?
?
??
?
?
?
?
?
??
?
??
??
  	??
?5 ?
G	8 0    ?
  S 6  	  ?
?
G	?
?    3?
 ?
?
?
?
?
?
?
??
?
??
?
?
?
??
?
?
??T<+U??
T;:V	 5,?X 6 (?
	??
T	!
4 ?
:T;:U?
? Y!<  T45 APJ T2(4?
?
? ??
?T	!	 ?
?,J >?
	66?
 ?+ T+ 6??
 ,?<.Q4	?
A[  ,N	?5?
?
"66 	?
AN	??
?
<]	 >?
,??
	?
?  ]) ?
??
,U? ,U?
AXU? ]
	4?
>27 ?X	??
??,U6?
?
!A`:)?> ?
	"66?
?
?
T5)	?
T,4	5?
 ???%a?
A`:?
??
!
0 ?b)?7%?
?	?
?
?cGJc? ,N< ?,b	?
?7?
?
? ,N? T2e	?` ?I+5 ?<5?
??> ,N< 66+ ?)108accuracy measurements.
Each time we ran theexperiment, a comparison of the results with thegold standard was performed.The first experiment was done by comparingeach root extracted using the three stemming al-gorithms with the roots of words in the goldstandard.The second experiment excludes from the words?list stop words.
The third experiment comparesall word-type roots to the gold standard?s roots.Finally, word-type roots excluding the stopwords are compared to the gold standard?s roots.Tables   4-7 show the accuracy rates resultingfrom the four different accuracy measurements.Table 2: Tokens Accuracy of stemming algo-rithms after testing on Qur?an gold standardNumber of Tokens including Stop words(978 tokens)StemmingAlgorithmErrors FaultRateAccuracyKhoja stemmer 311 31.8% 68.2%Tim Buckwaltermorph.
Analyzer419 42.8% 57.16%Tri-literal Rootalgorithm394 40.3% 59.71%Ex.1 434 44.4% 55.6% Votingalgorithm Ex.2 405 41.4% 58.6%Number of Tokens excluding  Stop words (554tokens)Khoja stemmer 209 37.73% 62.27%Tim Buckwaltermorph.
Analyzer123                 22.2% 77.8%Tri-literal Rootalgorithm279 50.36% 49.64%Ex.1 266 48.0% 52.0% Votingalgorithm Ex.2 229 41.3% 58.7%Table 3: Word type Accuracy of stemming al-gorithms  after testing on Qur?an gold standardNumber of Word Types including Stop words(616 word types)Stemming Al-gorithmErrors FaultRateAccuracyKhoja stemmer 224 36.36% 63.64%Tim Buckwaltermorph.
Analyzer267 43.34% 56.66%Tri-literal Rootalgorithm266 43.18% 56.82%Ex.1 242 39.3% 60.7% Votingalgorithm Ex.2 219 35.6% 64.4%Number of Word types excluding  Stop words( 451 word types)Khoja stemmer 155 34.37% 65.63%Tim Buckwaltermorph.
Analyzer251 55.65% 44.34%Tri-literal Rootalgorithm214 47.45% 52.55%Ex.1 174 38.6% 61.4% Votingalgorithm Ex.2 151 33.5% 66.5%Table 4: Token Accuracy of stemming algo-rithms.
Tested on newspaper gold standardNumber of Tokens including Stop words(1005tokens)Stemming Al-gorithmErrors FaultRateAccuracyKhoja stemmer 231 22.99% 77.01%Tim Buckwaltermorph.
Analyzer596 59.30% 40.70%Tri-literal Rootalgorithm234 23.28% 76.72%Ex.1 303 30.15% 69.85% Votingalgorithm Ex.2 266 26.47% 73.53%Number of Tokens excluding  Stop words (766tokens)Khoja stemmer 212 27.7% 72.3%Tim Buckwaltermorph.
Analyzer431 60.70% 39.30%Tri-literal Rootalgorithm253 35.63% 64.37%Ex.1 303 39.56% 60.44% Votingalgorithm Ex.2 266 34.73% 65.27%Table 5: Word type Accuracy of stemming al-gorithms.
Tested on newspaper gold standardNumber of Word Types including Stop words(710 word types)Stemming Al-gorithmErrors FaultRateAccuracyKhoja stemmer 232 32.68% 67.32%Tim Buckwaltermorph.
Analyzer431 60.70% 39.30%Tri-literal Rootalgorithm253 35.63% 64.37%Ex.1 248 34.93% 65.07% Votingalgorithm Ex.2 215 30.28% 69.71%Number of Word types excluding  Stop words( 640 word types)Khoja stemmer 184 28.75% 71.25%Tim Buckwaltermorph.
Analyzer423 66.09% 33.91%Tri-literal Rootalgorithm224 35.00% 65.00%Ex.1 252 39.4% 60.6% Votingalgorithm Ex.2 195 30.5% 69.5%109Experiments are done for results generated fromthe three stemming algorithms after executingthem on both gold standard documents.The output analysis of the stemming algo-rithms is considered as input for the ?voting?program.
The program reads in these files, token-izes them, and stores the words and the roots ex-tracted by each stemming algorithm in temporarylists to be used by the voting procedures.The temporary lists work as a bag of wordsthat contains all the result analysis of the stem-ming algorithms.
Khoja and the tri-literal stem-ming algorithms generate only one result analy-sis for each input word, while Tim Buckwaltermorphological analyzer generates one or moreresult analysis.
These roots are ranked in best-first order according to accuracy measurementdone before.
Khoja stemmer results are insertedto the list first then the results from tri-literalstemming algorithm and finally the results ofTim Buckwalter morphological analyzer.After the construction of the lists of all wordsand their roots, a majority voting procedure isapplied to it to select the most common rootamong the list.
If the systems disagree on theanalysis, the voting algorithm selects ?MajorityVote?
root as the root of the word.
If there is atie, where each stemming algorithm generates adifferent root analysis then the voting algorithmselects the root by two ways.
Firstly, it simplyselects the root randomly from the list using theFreqDist() Python function in experiment 1.Secondly, In experiment 2, the algorithm selectsthe root generated from the highest accuracystemming algorithm which is simply placed inthe first position of the list as the root of the wordare inserted to the list using the best-first in termsof accuracy strategy.After the voting algorithm, the selected root iscompared to the gold standard.
Tables 2-5 showthe result of the voting algorithm which achievespromising accuracy results of slightly better thanthe best stemming algorithm in experiment 2 anda similar accuracy rates for the best stemmingalgorithms in experiment 1.5  ConclusionsIn this paper, we compared between three stem-ming algorithms; Shereen Khoja?s stemmer, TimBuckwalter?s morphological analyzer and theTri-literal root extraction algorithm.Results of the stemming algorithms are com-pared with the gold standard using four differentaccuracy measurements.
The four accuracymeasurements show the same accuracy rank forthe stemming algorithms: the Khoja stemmerachieves the highest accuracy then the tri-literalroot extraction algorithm and finally the Buck-walter morphological analyzer.The voting algorithm achieves about 62%average accuracy rate for Qur?an text and about70% average accuracy for newspaper text.
Theresults show that the stemming algorithms usedin the experiments work better on newspaper textthan Quran text, not unexpectedly as they wereoriginally designed for stemming newspaper text.All stemming algorithms involved in the ex-periments agreed and generate correct analysisfor simple roots that do not require detailedanalysis.
So, more detailed analysis and en-hancements are recommended as future work.Most stemming algorithms are designed forinformation retrieval systems where accuracy ofthe stemmers is not important issue.
On the otherhand, accuracy is vital for natural language proc-essing.
The accuracy rates show that the best al-gorithm failed to achieve accuracy rate of morethan 75%.
This proves that more research is re-quired.
We can not rely on such stemming algo-rithms for doing further research as Part-of-Speech tagging and then Parsing because errorsfrom the stemming algorithms will propagate tosuch systems.Our experiments are limited to the threestemming algorithms.
Other algorithms are notavailable freely on the web, and we have beenunable so far to acquire them from the authors.We hope Arabic NLP researchers can cooperatefurther in open-source development of resources.ReferencesAl-Shalabi, R., Kanaan, G., & Al-Serhan, H.(2003, December).
New approach for extract-ing Arabic roots.
Paper presented at the Inter-national Arab Conference on InformationTechnology (ACIT?2003), Egypt.Al-Sulaiti, Latifa; Atwell, Eric 2006.
The designof a corpus of contemporary Arabic.
Interna-tional Journal of Corpus Linguistics, vol.
11,pp.
135-171.
2006.Atwell, Eric and Roberts, Andy, 2007.
CHEAT:combinatory hybrid elementary analysis of textin: Proceedings of Corpus Linguistics 2007.Khoja, Shereen, 1999.
Stemming Arabic Text.http://zeus.cs.pacificu.edu/shereen/research.htmLarkey Leah.
S. and Connell Margrate.
E. 2001.Arabic information retrieval at UMass.
In Pro-ceedings of TREC 2001, Gaithersburg: NIST,2001.110
