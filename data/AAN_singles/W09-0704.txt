Proceedings of the EACL 2009 Workshop on Language Technologies for African Languages ?
AfLaT 2009, pages 25?31,Athens, Greece, 31 March 2009. c?2009 Association for Computational LinguisticsA computational approach to Yoru`ba?
morphologyRaphael FinkelDepartment of Computer Science, University of Kentucky, USAraphael@cs.uky.eduO.
de?.tu?nj??
A`ja`d?
?, O.
DE?.
JO.
BI?Cork Constraint Computation Center, University College Cork, Cork, Ireland.t.odejobi@4c.ucc.ieAbstractWe demonstrate the use of default de-fault inheritance hierarchies to representthe morphology of Yoru`ba?
verbs in theKATR formalism, treating inflectional ex-ponences as markings associated with theapplication of rules by which complexword forms are deduced from simplerroots or stems.
In particular, we sug-gest a scheme of slots that together makeup a verb and show how each slot rep-resents a subset of the morphosyntacticproperties associated with the verb.
Wealso show how we can account for thetonal aspects of Yoru`ba?, in particular, thetone associated with the emphatic end-ing.
Our approach allows linguists to gainan appreciation for the structure of verbs,gives teachers a foundation for organizinglessons in morphology, and provides stu-dents a technique for generating forms ofany verb.1 IntroductionRecent research into the nature of morphology hasdemonstrated the feasibility of several approachesto the definition of a language?s inflectional sys-tem.
Central to these approaches is the notion ofan inflectional paradigm.
In general terms, theinflectional paradigm of a lexeme L can be re-garded as a set of cells, where each cell is the pair-ing of L with a set of morphosyntactic properties,and each cell has a word form as its realization;for instance, the paradigm of the lexeme walk in-cludes cells such as <WALK, {3rd singular presentindicative}> and <WALK, {past}>, whose real-izations are the word forms walks and walked.Given this notion, one approach to the definitionof a language?s inflectional system is the realiza-tional approach (Matthews 1972, Zwicky 1985,Anderson 1992, Corbett & Fraser 1993, Stump2001); in this approach, each word form in a lex-eme?s paradigm is deduced from the lexical andmorphosyntactic properties of the cell that it re-alizes by means of a system of morphologicalrules.
For instance, the word form walks is de-duced from the cell <WALK, {3rd singular presentindicative}> by means of the rule of -s suffixation,which applies to the root walk of the lexeme WALKto express the property set {3rd singular presentindicative}.We apply the realizational approach to the studyof Yoru`ba?
verbs.
Yoru`ba?, an Edekiri languageof the Niger-Congo family (Gordon 2005), is thenative language of more than 30 million peo-ple in West Africa.
Although it has many di-alects, all speakers can communicate effectivelyusing Standard Yoru`ba?
(SY), which is used in ed-ucation, mass media and everyday communica-tion (Ade?wo.
le?
1988).We represent our realizational analysis of SYin the KATR formalism (Finkel, Shen, Stump &Thesayi 2002).
KATR is based on DATR, a for-mal language for representing lexical knowledgedesigned and implemented by Roger Evans andGerald Gazdar (Evans & Gazdar 1989).
Our infor-mation about SY is primarily due to the expertiseof the second author.This research is part of a larger effort aimed atelucidating the morphological structure of naturallanguages.
In particular, we are interested in iden-tifying the ways in which default-inheritance re-lations describe a language?s morphology as wellas the theoretical relevance of the traditional no-tion of principal parts.
To this end, we haveapplied similar techniques to Hebrew (Finkel &Stump 2007), Latin (Finkel & Stump to appear,2009b), and French (Finkel & Stump to appear,2009a).251.1 BenefitsAs we demonstrate below, the realizational ap-proach leads to a KATR theory that provides aclear picture of the morphology of SY verbs.
Dif-ferent audiences might find different aspects of itattractive.?
A linguist can peruse the theory to gain anappreciation for the structure of SY verbs,with all exceptional cases clearly marked ei-ther by morphophonological diacritics or byrules of sandhi, which are segregated from allthe other rules.?
A teacher of the language can use the the-ory as a foundation for organizing lessons inmorphology.?
A student of the language can suggest verbroots and use the theory to generate all the ap-propriate forms, instead of locating the rightparadigm in a book and substituting conso-nants.2 SY phoneticsSY has 18 consonants (b, d, f, g, gb, h, j, k, l, m,n, p, r, s, s. , t, w, y), 7 simple vowels (a, e, e. , i, o,o.
, u), 5 nasalized vowels (an, en, in, o. n, un), and2 syllabic nasals (m, n).
SY has 3 phonologicallycontrastive tones: High, Mid and Low.
Phoneti-cally, there are also two tone variants, rising andfalling (Laniran & Clements 2003).
SY orthog-raphy employs two transcription formats for thesetones.
In one format, the two tones are markedon one vowel.
For example, the vowel a with alow tone followed by a high tone is written as a?and with a high tone followed by a low tone as a?.This paper follows the alternative orthography, inwhich each tone is carried by exactly one vowel.We write a?
as a`a?
and a?
as a?a`.3 A Realizational KATR theory for SYThe purpose of the KATR theory described hereis to generate verb forms for SY, specifically,the realizations of all combinations of the mor-phosyntactic properties of tense (present, continu-ous, past, future), polarity (positive, negative), per-son (1, 2 older, 3 older, 2 not older, 3 not older),number (singular, plural), and strength (normal,emphatic).
The combinations form a total of 160morphosyntactic property sets (MPSs).Our analysis posits that SY verbs consist of a se-quence of morphological formatives, arranged insix slots:?
Person, which realizes the person and num-ber but is also influenced by tense and polar-ity,?
Negator marker 1, which appears only in thenegative, but is slightly influenced by personand number,?
Tense, which realizes the tense, influenced bypolarity,?
Negator marker 2, which appears only in thenegative, influenced by tense,?
Stem, which realizes the verb?s lexeme,?
Ending, which appears only for emphaticverbs.Unlike many other languages, SY does not dis-tinguish conjugations of verbs, making its KATRtheory simpler than ones for languages such asLatin and Hebrew.
However, the tonality of SYadds a small amount of complexity.A theory in KATR is a network of nodes.
Thenetwork of nodes constituting SY verb morphol-ogy is very simple: every lexeme is representedby a node that specifies its stem and then refers tothe node Verb.
The node Verb refers to nodesfor each of the slots.
We use rules of Sandhi as afinal step before emitting verb forms.Each of the nodes in a theory houses a set ofrules.
We represent the verb mu?n ?take?
by a node:Take:1 <stem> = m u?n2 = VerbThe node, named Take, has two rules, whichwe number for discussion purposes only.
KATRsyntax requires that a node be terminated by a sin-gle period (full stop), which we omit here.
Ourconvention is to name the node for a lexeme by acapitalized English word (here Take) represent-ing its meaning.Rule 1 says that a query asking for the stem ofthis verb should produce a two-atom result con-taining m and u?n.
Rule 2 says that all other queriesare to be referred to the Verb node, which we in-troduce below.A query is a list of atoms, such as <stem>or <normal positive past 3Older26sg>, addressed to a node such as Take.
Inour theory, the atoms in queries either representmorphological formatives (such as stem) ormorphosyntactic properties (such as 3Olderand sg).A query addressed to a given node is matchedagainst all the rules housed at that node.
A rulematches if all the atoms on its left-hand sidematch the atoms in the query.
A rule can matcheven if its atoms do not exhaust the entire query.In the case of Take, the query <stem past> ismatched by Rules 1 and 2; the query <positivepast> is only matched by Rule 2.Left-hand sides expressed with path nota-tion (<pointed brackets>) only match iftheir atoms match an initial substring of thequery.
Left-hand sides expressed with set nota-tion ({braces}) match if their atoms are all ex-pressed, in whatever position, in the query.
Weusually use set notation for queries based on mor-phological formatives and morphosyntactic prop-erties, where order is insignificant.When several rules match, KATR picks the bestmatch, that is, the one whose left-hand side ?usesup?
the most of the query.
This choice embodiesPa?n.
ini?s principle, which entails that if two rulesare applicable, the more restrictive rule applies, tothe exclusion of the more general rule.
We some-times speak of a rule?s Pa?n.
ini precedence, whichis the cardinality of its left-hand side.
If a node in aKATR theory houses two applicable rules with thesame Pa?n.
ini precedence, we consider that theorymalformed.In our case, Rule 2 of Take only applies whenRule 1 does not apply, because Rule 1 is alwaysa better match if it applies at all.
Rule 2 is calleda default rule, because it applies by default if noother rule applies.
Default rules define a hierarchi-cal relation among some of the nodes in a KATRtheory.KATR generates output based on queries di-rected to nodes representing individual lexemes.Since these nodes, such as Take, are not referredto by other nodes, they are called leaves, as op-posed to nodes like Verb, which are called inter-nal nodes.
The KATR theory itself indicates thelist of queries to be addressed to all leaves.
Here isthe output that KATR generates for several queriesdirected to the Take node.normal,positive,present,1,sgmo mu?nnormal,positive,present,1,pla mu?nnormal,positive,present,2Older,sge.
mu?nnormal,positive,present,2Older,ple.
mu?nnormal,positive,present,3Older,sgwo?.
n mu?nnormal,positive,present,3Older,plwo?.
n mu?nnormal,positive,present,2NotOlder,sgo mu?nnormal,positive,present,2NotOlder,ple.
mu?nnormal,positive,present,3NotOlder,sgo?
mu?nnormal,positive,present,3NotOlder,plwo?.
n mu?nnormal,positive,past,2NotOlder,sgo ti mu?nnormal,positive,continuous,2NotOlder,sgo` n?mu?nnormal,positive,future,2NotOlder,sgo o?o` mu?nnormal,negative,present,2NotOlder,sgo (k)o` mu?nnormal,negative,past,2NotOlder,sgo (k)o` t??
?` mu?nnormal,negative,continuous,2NotOlder,sgo (k)o` mu?nnormal,negative,future,2NotOlder,sgo (k)o` n??
(k?`o?o`) mu?nemphatic,positive,present,2NotOlder,sgo mu?nunemphatic,positive,past,2NotOlder,sgo ti mu?nunThe rule for Take illustrates the strategy weterm provisioning (Finkel & Stump 2007): It pro-vides information (here, the letters of the verb?sstem) needed by a more general node (here,Verb).3.1 The Verb nodeWe now turn to the Verb node, to which the Takenode refers.Verb:1 {continuous negative} = <presentnegative>2 {} = Person Negator1 Tense Negator2, "<stem>" EndingRule 1 of Verb reflects the continuous negativeto the present negative, because they have identicalforms.27Rule 2 is a default rule that composes the sur-face form by referring to a node for each slotexcept the stem.
This rule directs an query thatdoes not satisfy Rule 1 to each of the nodes men-tioned.
In this way, the theory computes valuesfor each of the slots that represent the morpholog-ical formatives.
The KATR phrase "<stem>"directs a new query to the original node (in ourcase, Take), which has provisioned informationabout the stem (in our case, m u?n).
The commain the right-hand side of rule 2 is how we repre-sent a word division; our post-processing removesordinary spaces.3.2 Auxiliary nodesThe Verb node invokes several auxiliary nodes togenerate the surface forms for each slot.Person:1 {1 sg} = mo2 {1 sg negative} = mi3 {1 sg future} = m4 {1 pl} = a5 {2Older} = e.6 {2Older continuous} = e`.7 {2Older continuous pl} = w o?.n8 {3Older positive !future} = w o?.n9 {3Older} = w o.n10 {2NotOlder sg} = o11 {2NotOlder pl} = e.12 {2NotOlder continuous sg} = o`13 {2NotOlder continuous pl} = e`.14 {3NotOlder} = o?15 {3NotOlder negative sg} =16 {3NotOlder future} = y?
?17 {3NotOlder pl ++} = <3Older>Generally, the Person slot depends on personand number, but it depends to a small extent onpolarity and tense.
For example, the exponence1of 1 sg is m, but it takes an additional vowelin the negative and the non-future positive.
Onthe other hand, the exponence of 1 pl is alwaysa.
Rule 8 applies to tenses other than future, asmarked by the notation !future; in the future,the more general Rule 9 applies.
Rule 17 reflectsany query involving 3NotOlder pl to the samenode (Person) and 3Older forms, to which itis identical.
The ++ notation increases the Pa?n.
iniprecedence of this rule so that it applies in pref-erence to Rules 15 and 16, even if one of themshould apply.Negator1:1An exponence is a surface form or part of a surface form,that is, the way a given lexeme appears when it is attached tomorphosyntactic properties.1 {negative} = , (k)o`2 {negative 3NotOlder sg} = ko`3 {} =The first negation slot introduces the exponenceo` for negative forms (Rules 1 and 2) and the nullexponence for positive forms.
In most situations,this vowel starts a new word (represented by thecomma), and careful speech may place an op-tional k before the vowel (represented by the par-enthetical k); in 3NotOlder sg, this consonantis mandatory.Tense:1 {} =2 {past} = , t i3 {continuous positive} = , n?
-4 {future positive} = , o?o`5 {future 1 sg positive} = , a`a?6 {future 3NotOlder positive} =<future 3Older positive>The Tense slot is usually empty, as indicatedby Rule 1.
However, for both negative and posi-tive past, the word ti appears here.
In the positivecontinuous, the following slot (the stem) is pre-fixed by n?.
We use the hyphen (-) to remove thefollowing word break by a spelling rule (shownlater).
Similarly, future positive forms have a tensemarker, with a special form for 1 sg.
As of-ten happens, the 3NotOlder form reflects to the3Older form.Negator2:1 {future negative} = , n?
?2 {past negative} = ?
?`3 {} =The second negator slot adds the word n??
in thefuture (Rule 1).
In the past (Rule 2), it changesthe tone of the tense slot from ti to t???`.
In all othercases, Rule 3 gives a null default.
Rule 2 followsan assumption that tone and vowel can be speci-fied independently in SY; without this assumption,this slot would be more cumbersome to specify.Such floating tones are in keeping with theories ofautosegmental phonology (Goldsmith 1976) andare seen in other Niger-Congo languages, such asBambara (Mountford 1983).Ending:1 {} =2 {emphatic} = ?The Ending slot is generally null (Rule 1), butin emphatic forms, it reduplicates the final vowelwith a mid tone, unless the vowel already has a28mid tone, in which case the tone becomes low.
(We disagree slightly with Akinlabi and Liber-man, who suggest that this suffix is in low toneexcept after a low tone, in which case it becomesmid (Akinlabi & Liberman 2000).)
For this case,we introduce a jer2, represented by ??
?, for post-processing in the Sandhi phase, discussed below.Such forms are important as a way to simplify pre-sentation, covering many cases in one rule.
Whenwe tried to develop a SY KATR theory without ajer, we needed to separate the stem of each wordinto onset and coda so we could repeat the codain emphatic forms, but we had no clear way to in-dicate the regular change in tone.
The jer accom-plishes both reduplication and tone change with asingle, simple mechanism.
It also suggests that theemphatic ending is really a matter of tone Sandhi,not a matter of default inheritance.4 Postprocessing: Sandhi, Spelling andAlternativesAfter the rules produce a surface form, we post-process that form to account for Sandhi (language-specific rules dictating sound changes for eu-phony), spelling conventions, and alternative ex-ponence.
We have only one Sandhi matter to ac-count for, the jer ???.
We accomplish this postpro-cessing with these rules:1 #vars $vowel: a e e. i o o. u .2 #vars $tone: ?
` .3 #sandhi $vowel ?
=> $1 $1 ` .4 #sandhi $vowel $tone ?
=> $1 $2 $1 .5 #sandhi $vowel n ?
=> $1 n $1 ` n .6 #sandhi $vowel $tone n ?
=> $1 $2 n $1n .The first two lines introduce shorthands sowe can match arbitrary vowels and tone marks.Sandhi rules are applied in order, although in thiscase, at most one of them will apply to any surfaceform.Rules 3?6 represent tone Sandhi by showinghow to replace intermediate surface strings withfinal surface strings.
Each rule has a left-hand sidethat is to be replaced by the information on theright-hand side.
Numbers like $1 on the right-hand side refer to whatever a variable (in thiscase, the first variable) on the left-hand side hasmatched.2A jer, also called a morphophoneme, is a phonologi-cal unit whose phonemic expression depends on its context.It is an intermediate surface form that is to be replaced in acontext-sensitive way during postprocessing.Rule 3 indicates that if we see a vowel with-out a tone mark (indicating mid tone) followed bythe jer, we replace it with the vowel (representedby $1) repeated with low tone.
This specificationfollows our assumption that tone and vowel maybe treated independently.
Rule 4 indicates thata vowel followed by a tone mark and the jer isrepeated with mid tone (without a mark).
Rules5 and 6 are similar, but they deal with nasalizedvowels.There is one spelling rule to remove wordbreaks that would otherwise be present.
We haveused ?-?
to indicate that a word break should dis-appear.
We use the following rule to enforce thisstrategy:#sandhi - , => .That is, a hyphen before a comma removes both.SY allows the negative future forms (k)o` n??
andko` n??
to be expressed instead as k?`o?o`.
We providerules of alternation for this purpose:#alternative \(k\)o` , n??
=> k?`o?o` .#alternative ko` , n??
=> k?`o?o` .These alternation rules effectively collapse thethree slots, Negator1, Tense, and Negator2 into asingle exponence.5 ProcessingThe interested reader may see the entire SYtheory and run it through our software by di-recting a browser to http://www.cs.uky.edu/?raphael/KATR.html, where theoriesfor several other languages can also be found.
Oursoftware runs in several steps:1.
A Perl script converts the KATR theory intotwo files: a Prolog representation of the the-ory and a Perl script for post-processing.2.
A Prolog interpreter runs a query on the Pro-log representation.3.
The Perl post-processing script treats the Pro-log output.4.
Another Perl script either generates a textualoutput for direct viewing or HTML output fora browser.This software is available from the first authorunder the GNU General Public License (GPL).296 Discussion and ConclusionsThis exercise demonstrates that the realizationalapproach to defining language morphology leadsto an effective description of SY verbs.
We haveapplied language-specific knowledge and insightto create a default inheritance hierarchy that cap-tures the morphological structure of the language,with slots pertaining to different morphosyntacticproperties.
In particular, our KATR theory nicelyaccounts for the slot structure of SY verbs, eventhough most slots are dependent on multiple mor-phosyntactic properties, and we are easily able todeal with the tone shifts introduced by the em-phatic suffix.This work is not intended to directly addressthe problem of parsing, that is, converting surfaceforms to pairings of lexemes with morphosyntacticproperties.
We believe that our KATR theory forSY correctly covers all verb forms, but there maycertainly be exceptional cases that do not followthe structures we have presented.
Such cases areusually easy to account for by introducing infor-mation in the leaf node of such lexemes.
Further,this work is not in the area of automated learning,so questions of precision and ability to deal withunseen data are not directly relevant.We have constructed the SY theory in KATRinstead of DATR for several reasons.?
We have a very fast KATR implementation,making for speedy prototyping and iterativeimprovement in morphological theories.
Thisimplementation is capable of taking standardDATR theories as well.?
KATR allows bracket notation ({ and }) onthe left-hand side of rules, which makes itvery easy to specify morphosyntactic proper-ties for queries in any order and without men-tioning those properties that are irrelevant toa given rule.
Rules in DATR theories tend tohave much more complicated left-hand sides,obscuring the morphological rules.?
KATR has a syntax for Sandhi that separatesits computation, which we see as postpro-cessing of surface forms, from the applica-tion of morphological rules.
It is possible towrite rules for Sandhi in DATR, but the rulesare both unpleasant to write and difficult todescribe.As we have noted elsewhere (Finkel & Stump2007), writing KATR specifications requires con-siderable effort.
Early choices color the structureof the resulting theory, and the author must oftendiscard attempts and rethink how to represent thetarget morphology.
The first author, along withGregory Stump, has built KATR theories for verbsin Hebrew, Slovak, Polish, Spanish, Irish, Shughni(an Iranian language of the Pamir) and Lingala (aBantu language of the Congo), as well as for partsof Hungarian, Sanskrit, and Pali.AcknowledgmentsWe would like to thank Gregory Stump, the firstauthor?s collaborator in designing KATR and ap-plying it to many languages.
Lei Shen and SureshThesayi were instrumental in implementing ourJavaTM version of KATR.
Nancy Snoke assisted inimplementing our Perl/Prolog version.Development of KATR was partially supportedby the US National Science Foundation underGrants IIS-0097278 and IIS-0325063 and by theUniversity of Kentucky Center for ComputationalScience.
The second author is supported by Sci-ence Foundation Ireland Grant 05/IN/I886 andMarie Curie Grant MTKD-CT-2006-042563.
Anyopinions, findings, conclusions or recommenda-tions expressed in this material are those of theauthors and do not necessarily reflect the views ofthe funding agencies.ReferencesAde?wo.
le?, L. O.
(1988).
The categorical status andthe function of the Yoru`ba?
auxiliary verb with somestructural analysis in GPSG, PhD thesis, Universityof Edinburgh, Edinburgh.Akinlabi, A.
& Liberman, M. (2000).
The tonal phonol-ogy of Yoruba clitics, in B. Gerlach & J. Grizen-hout (eds), Clitics in phonology, morphology andsyntax, John Benjamins Publishing Company, Am-sterdam/Philadelphia, pp.
64?66.Anderson, S. R. (1992).
A-morphous morphology, Cam-bridge University Press.Corbett, G. G. & Fraser, N. M. (1993).
Network Mor-phology: A DATR account of Russian nominal in-flection, Journal of Linguistics 29: 113?142.Evans, R. & Gazdar, G. (1989).
Inference in DATR,Proceedings of the Fourth Conference of the Euro-pean Chapter of the Association for ComputationalLinguistics, Manchester, pp.
66?71.30Finkel, R., Shen, L., Stump, G. & Thesayi, S.(2002).
KATR: A set-based extension of DATR,Technical Report 346-02, University of Ken-tucky Department of Computer Science, Lex-ington, KY. ftp://ftp.cs.uky.edu/cs/techreports/346-02.pdf.Finkel, R. & Stump, G. (2007).
A default inheritancehierarchy for computing Hebrew verb morphology,Literary and Linguistic Computing 22(2): 117?136.dx.doi.org/10.1093/llc/fqm004.Finkel, R. & Stump, G. (to appear, 2009a).
Stem alter-nations and principal parts in French verb inflection,Cascadilla Proceedings Project .Finkel, R. & Stump, G. (to appear, 2009b).
What yourteacher told you is true: Latin verbs have four prin-cipal parts, Digital Humanities Quarterly .Goldsmith, J.
A.
(1976).
Autosegmental phonology,PhD thesis, Massachusetts Institute of Technology,Boston, MA.Gordon, R. G. (2005).
Ethnologue: Languages of theWorld, 15th edn, SIL International, Dallas, Texas.Laniran, Y. O.
& Clements, G. N. (2003).
Downstepand high rising: interacting factors in Yoru`ba?
toneproduction, J. of Phonetics 31(2): 203 ?
250.Matthews, P. H. (1972).
Inflectional morphology, Cam-bridge University Press.Mountford, K. W. (1983).
Bambara declarative sen-tence intonation, PhD thesis, Indiana University,Bloomington, IN.Stump, G. T. (2001).
Inflectional morphology, Cam-bridge University Press, Cambridge, England.Zwicky, A. M. (1985).
How to describe inflection, Pro-ceedings of the 11th annual meeting of the BerkeleyLinguistics Society, pp.
372?386.31
