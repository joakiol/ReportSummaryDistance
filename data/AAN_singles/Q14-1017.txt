Grounded Compositional Semanticsfor Finding and Describing Images with SentencesRichard Socher, Andrej Karpathy, Quoc V. Le*, Christopher D. Manning, Andrew Y. NgStanford University, Computer Science Department, *Google Inc.richard@socher.org, karpathy@cs.stanford.edu,qvl@google.com, manning@stanford.edu, ang@cs.stanford.eduAbstractPrevious work on Recursive Neural Networks(RNNs) shows that these models can producecompositional feature vectors for accuratelyrepresenting and classifying sentences or im-ages.
However, the sentence vectors of previ-ous models cannot accurately represent visu-ally grounded meaning.
We introduce the DT-RNN model which uses dependency trees toembed sentences into a vector space in orderto retrieve images that are described by thosesentences.
Unlike previous RNN-based mod-els which use constituency trees, DT-RNNsnaturally focus on the action and agents ina sentence.
They are better able to abstractfrom the details of word order and syntacticexpression.
DT-RNNs outperform other re-cursive and recurrent neural networks, kernel-ized CCA and a bag-of-words baseline on thetasks of finding an image that fits a sentencedescription and vice versa.
They also givemore similar representations to sentences thatdescribe the same image.1 IntroductionSingle word vector spaces are widely used (Turneyand Pantel, 2010) and successful at classifying sin-gle words and capturing their meaning (Collobertand Weston, 2008; Huang et al., 2012; Mikolov etal., 2013).
Since words rarely appear in isolation,the task of learning compositional meaning repre-sentations for longer phrases has recently received alot of attention (Mitchell and Lapata, 2010; Socheret al., 2010; Socher et al., 2012; Grefenstette et al.,2013).
Similarly, classifying whole images into afixed set of classes also achieves very high perfor-mance (Le et al., 2012; Krizhevsky et al., 2012).However, similar to words, objects in images are of-ten seen in relationships with other objects which arenot adequately described by a single label.In this work, we introduce a model, illustrated inFig.
1, which learns to map sentences and imagesinto a common embedding space in order to be ableto retrieve one from the other.
We assume word andimage representations are first learned in their re-spective single modalities but finally mapped into ajointly learned multimodal embedding space.Our model for mapping sentences into this spaceis based on ideas from Recursive Neural Networks(RNNs) (Pollack, 1990; Costa et al., 2003; Socheret al., 2011b).
However, unlike all previous RNNmodels which are based on constituency trees (CT-RNNs), our model computes compositional vectorrepresentations inside dependency trees.
The com-positional vectors computed by this new dependencytree RNN (DT-RNN) capture more of the meaningof sentences, where we define meaning in terms ofsimilarity to a ?visual representation?
of the textualdescription.
DT-RNN induced vector representa-tions of sentences are more robust to changes in thesyntactic structure or word order than related mod-els such as CT-RNNs or Recurrent Neural Networkssince they naturally focus on a sentence?s action andits agents.We evaluate and compare DT-RNN induced rep-resentations on their ability to use a sentence such as?A man wearing a helmet jumps on his bike near abeach.?
to find images that show such a scene.
Thegoal is to learn sentence representations that capture207Transactions of the Association for Computational Linguistics, 2 (2014) 207?218.
Action Editor: Alexander Clark.Submitted 10/2013; Revised 3/2014; Published 4/2014.
c?2014 Association for Computational Linguistics.A man wearing a helmet jumps on his bike near a beach.Compositional Sentence VectorsTwo airplanes parked in an airport.A man jumping his downhill bike.Image Vector RepresentationA small child sits on a cement wall near white flower.Multi-ModalRepresentationsFigure 1: The DT-RNN learns vector representations for sentences based on their dependency trees.
We learn tomap the outputs of convolutional neural networks applied to images into the same space and can then compare bothsentences and images.
This allows us to query images with a sentence and give sentence descriptions to images.the visual scene described and to find appropriateimages in the learned, multi-modal sentence-imagespace.
Conversely, when given a query image, wewould like to find a description that goes beyond asingle label by providing a correct sentence describ-ing it, a task that has recently garnered a lot of at-tention (Farhadi et al., 2010; Ordonez et al., 2011;Kuznetsova et al., 2012).
We use the dataset intro-duced by (Rashtchian et al., 2010) which consists of1000 images, each with 5 descriptions.
On all tasks,our model outperforms baselines and related mod-els.2 Related WorkThe presented model is connected to several areas ofNLP and vision research, each with a large amountof related work to which we can only do some justicegiven space constraints.Semantic Vector Spaces and Their Composition-ality.
The dominant approach in semantic vec-tor spaces uses distributional similarities of singlewords.
Often, co-occurrence statistics of a word andits context are used to describe each word (Turneyand Pantel, 2010; Baroni and Lenci, 2010), suchas tf-idf.
Most of the compositionality algorithmsand related datasets capture two-word compositions.For instance, (Mitchell and Lapata, 2010) use two-word phrases and analyze similarities computed byvector addition, multiplication and others.
Compo-sitionality is an active field of research with manydifferent models and representations being explored(Grefenstette et al., 2013), among many others.
Wecompare to supervised compositional models thatcan learn task-specific vector representations such asconstituency tree recursive neural networks (Socheret al., 2011b; Socher et al., 2011a), chain structuredrecurrent neural networks and other baselines.
An-other alternative would be to use CCG trees as abackbone for vector composition (K.M.
Hermann,2013).Multimodal Embeddings.
Multimodal embed-ding methods project data from multiple sourcessuch as sound and video (Ngiam et al., 2011) or im-ages and text.
Socher et al.
(Socher and Fei-Fei,2010) project words and image regions into a com-mon space using kernelized canonical correlationanalysis to obtain state of the art performance in an-notation and segmentation.
Similar to our work, theyuse unsupervised large text corpora to learn seman-tic word representations.
Among other recent workis that by Srivastava and Salakhutdinov (2012) whodeveloped multimodal Deep Boltzmann Machines.Similar to their work, we use techniques from thebroad field of deep learning to represent images andwords.Recently, single word vector embeddings havebeen used for zero shot learning (Socher et al.,2013c).
Mapping images to word vectors enabledtheir system to classify images as depicting objectssuch as ?cat?
without seeing any examples of thisclass.
Related work has also been presented at NIPS(Socher et al., 2013b; Frome et al., 2013).
This workmoves zero-shot learning beyond single categoriesper image and extends it to unseen phrases and fulllength sentences, making use of similar ideas of se-mantic spaces grounded in visual knowledge.208Detailed Image Annotation.
Interactions be-tween images and texts is a growing research field.Early work in this area includes generating singlewords or fixed phrases from images (Duygulu et al.,2002; Barnard et al., 2003) or using contextual in-formation to improve recognition (Gupta and Davis,2008; Torralba et al., 2010).Apart from a large body of work on single objectimage classification (Le et al., 2012), there is alsowork on attribute classification and other mid-levelelements (Kumar et al., 2009), some of which wehope to capture with our approach as well.Our work is close in spirit with recent work in de-scribing images with more detailed, longer textualdescriptions.
In particular, Yao et al.
(2010) describeimages using hierarchical knowledge and humans inthe loop.
In contrast, our work does not require hu-man interactions.
Farhadi et al.
(2010) and Kulkarniet al.
(2011), on the other hand, use a more automaticmethod to parse images.
For instance, the former ap-proach uses a single triple of objects estimated for animage to retrieve sentences from a collection writtento describe similar images.
It forms representationsto describe 1 object, 1 action, and 1 scene.
Kulkarniet al.
(2011) extends their method to describe an im-age with multiple objects.
None of these approacheshave used a compositional sentence vector repre-sentation and they require specific language gener-ation techniques and sophisticated inference meth-ods.
Since our model is based on neural networks in-ference is fast and simple.
Kuznetsova et al.
(2012)use a very large parallel corpus to connect imagesand sentences.
Feng and Lapata (2013) use a largedataset of captioned images and experiments withboth extractive (search) and abstractive (generation)models.Most related is the very recent work of Hodosh etal.
(2013).
They too evaluate using a ranking mea-sure.
In our experiments, we compare to kernelizedCanonical Correlation Analysis which is the maintechnique in their experiments.3 Dependency-Tree Recursive NeuralNetworksIn this section we first focus on the DT-RNN modelthat computes compositional vector representationsfor phrases and sentences of variable length and syn-tactic type.
In section 5 the resulting vectors willthen become multimodal features by mapping im-ages that show what the sentence describes to thesame space and learning both the image and sen-tence mapping jointly.The most common way of building representa-tions for longer phrases from single word vectors isto simply linearly average the word vectors.
Whilethis bag-of-words approach can yield reasonableperformance in some tasks, it gives all the words thesame weight and cannot distinguish important dif-ferences in simple visual descriptions such as Thebike crashed into the standing car.
vs.
The carcrashed into the standing bike..RNN models (Pollack, 1990; Goller and Ku?chler,1996; Socher et al., 2011b; Socher et al., 2011a) pro-vided a novel way of combining word vectors forlonger phrases that moved beyond simple averag-ing.
They combine vectors with an RNN in binaryconstituency trees which have potentially many hid-den layers.
While the induced vector representationswork very well on many tasks, they also inevitablycapture a lot of syntactic structure of the sentence.However, the task of finding images from sentencedescriptions requires us to be more invariant to syn-tactic differences.
One such example are active-passive constructions which can collapse words suchas ?by?
in some formalisms (de Marneffe et al.,2006), relying instead on the semantic relationshipof ?agent?.
For instance, The mother hugged herchild.
and The child was hugged by its mother.should map to roughly the same visual space.
Cur-rent Recursive and Recurrent Neural Networks donot exhibit this behavior and even bag of words rep-resentations would be influenced by the words wasand by.
The model we describe below focuses moreon recognizing actions and agents and has the po-tential to learn representations that are invariant toactive-passive differences.3.1 DT-RNN Inputs: Word Vectors andDependency TreesIn order for the DT-RNN to compute a vector repre-sentation for an ordered list of m words (a phrase orsentence), we map the single words to a vector spaceand then parse the sentence.First, we map each word to a d-dimensional vec-tor.
We initialize these word vectors with the un-209A man wearing a helmet jumps on his bike near a beachdetnsubjpartmod detdobjrootprep posspobjprepdetpobjFigure 2: Example of a full dependency tree for a longer sentence.
The DT-RNN will compute vector representationsat every word that represents that word and an arbitrary number of child nodes.
The final representation is computedat the root node, here at the verb jumps.
Note that more important activity and object words are higher up in this treestructure.supervised model of Huang et al.
(2012) which canlearn single word vector representations from bothlocal and global contexts.
The idea is to construct aneural network that outputs high scores for windowsand documents that occur in a large unlabeled corpusand low scores for window-document pairs whereone word is replaced by a random word.
Whensuch a network is optimized via gradient descent thederivatives backpropagate into a word embeddingmatrix A which stores word vectors as columns.
Inorder to predict correct scores the vectors in the ma-trix capture co-occurrence statistics.
We use d = 50in all our experiments.
The embedding matrix Xis then used by finding the column index i of eachword: [w] = i and retrieving the corresponding col-umn xw from X .
Henceforth, we represent an inputsentence s as an ordered list of (word,vector) pairs:s = ((w1, xw1), .
.
.
, (wm, xwm)).Next, the sequence of words (w1, .
.
.
, wm) isparsed by the dependency parser of de Marneffeet al.
(2006).
Fig.
2 shows an example.
We canrepresent a dependency tree d of a sentence s asan ordered list of (child,parent) indices: d(s) ={(i, j)}, where every child word in the sequencei = 1, .
.
.
,m is present and has any word j ?
{1, .
.
.
,m} ?
{0} as its parent.
The root word hasas its parent 0 and we notice that the same word canbe a parent between zero and m number of times.Without loss of generality, we assume that these in-dices form a tree structure.
To summarize, the inputto the DT-RNN for each sentence is the pair (s, d):the words and their vectors and the dependency tree.3.2 Forward Propagation in DT-RNNsGiven these two inputs, we now illustrate how theDT-RNN computes parent vectors.
We will use thefollowing sentence as a running example: Students1ride2 bikes3 at4 night5.
Fig.
3 shows its treeand computed vector representations.
The depen-Students                 bikes           nightrideat          x 1x 2x 3x 4x 5h1h2h3h4h5Figure 3: Example of a DT-RNN tree structure for com-puting a sentence representation in a bottom up fashion.dency tree for this sentence can be summarized bythe following set of (child, parent) edges: d ={(1, 2), (2, 0), (3, 2), (4, 2), (5, 4)}.The DT-RNN model will compute parent vectorsat each word that include all the dependent (chil-dren) nodes in a bottom up fashion using a com-positionality function g?
which is parameterized byall the model parameters ?.
To this end, the algo-rithm searches for nodes in a tree that have either(i) no children or (ii) whose children have alreadybeen computed and then computes the correspond-ing vector.In our example, the words x1, x3, x5 are leafnodes and hence, we can compute their correspond-ing hidden nodes via:hc = g?
(xc) = f(Wvxc) for c = 1, 3, 5, (1)where we compute the hidden vector at position cvia our general composition function g?.
In the caseof leaf nodes, this composition function becomessimply a linear layer, parameterized by Wv ?
Rn?d,followed by a nonlinearity.
We cross-validate overusing no nonlinearity (f = id), tanh, sigmoid orrectified linear units (f = max(0, x), but generallyfind tanh to perform best.The final sentence representation we want to com-pute is at h2, however, since we still do not have h4,210we compute that one next:h4 = g?
(x4, h5) = f(Wvx4 +Wr1h5), (2)where we use the same Wv as before to map theword vector into hidden space but we now also havea linear layer that takes as input h5, the only childof the fourth node.
The matrix Wr1 ?
Rn?n is usedbecause node 5 is the first child node on the rightside of node 4.
Generally, we have multiple matri-ces for composing with hidden child vectors fromthe right and left sides: Wr?
= (Wr1, .
.
.
,Wrkr) andWl?
= (Wl1, .
.
.
,Wlkl).
The number of needed ma-trices is determined by the data by simply findingthe maximum numbers of left kl and right kr chil-dren any node has.
If at test time a child appearedat an even large distance (this does not happen inour test set), the corresponding matrix would be theidentity matrix.Now that all children of h2 have their hidden vec-tors, we can compute the final sentence representa-tion via:h2 = g?
(x2, h1, h3, h4) = (3)f(Wvx2 +Wl1h1 +Wr1h3 +Wr2h4).Notice that the children are multiplied by matricesthat depend on their location relative to the currentnode.Another modification that improves the meanrank by approximately 6 in image search on the devset is to weight nodes by the number of words under-neath them and normalize by the sum of words underall children.
This encourages the intuitive desidera-tum that nodes describing longer phrases are moreimportant.
Let `(i) be the number of leaf nodes(words) under node i and C(i, y) be the set of childnodes of node i in dependency tree y.
The final com-position function for a node vector hi becomes:hi = f??
1`(i)?
?Wvxi +?j?C(i)`(j)Wpos(i,j)hj????
,(4)where by definition `(i) = 1 + ?j?C(i) `(j) andpos(i, j) is the relative position of child j with re-spect to node i, e.g.
l1 or r2 in Eq.
3.3.3 Semantic Dependency Tree RNNsAn alternative is to condition the weight matriceson the semantic relations given by the dependencyparser.
We use the collapsed tree formalism ofthe Stanford dependency parser (de Marneffe et al.,2006).
With such a semantic untying of the weights,the DT-RNN makes better use of the dependencyformalism and could give active-passive reversalssimilar semantic vector representation.
The equationfor this semantic DT-RNN (SDT-RNN) is the sameas the one above except that the matrices Wpos(i,j)are replaced with matrices based on the dependencyrelationship.
There are a total of 141 unique suchrelationships in the dataset.
However, most are veryrare.
For examples of semantic relationships, seeFig.
2 and the model analysis section 6.7.This forward propagation can be used for com-puting compositional vectors and in Sec.
5 we willexplain the objective function in which these aretrained.3.4 Comparison to Previous RNN ModelsThe DT-RNN has several important differences toprevious RNN models of Socher et al.
(2011a) and(Socher et al., 2011b; Socher et al., 2011c).
Theseconstituency tree RNNs (CT-RNNs) use the follow-ing composition function to compute a hidden par-ent vector h from exactly two child vectors (c1, c2)in a binary tree: h = f(W[c1c2]), where W ?Rd?2d is the main parameter to learn.
This can berewritten to show the similarity to the DT-RNN ash = f(Wl1c1 +Wr1c2).
However, there are severalimportant differences.Note first that in previous RNN models the par-ent vectors were of the same dimensionality to berecursively compatible and be used as input to thenext composition.
In contrast, our new model firstmaps single words into a hidden space and then par-ent nodes are composed from these hidden vectors.This allows a higher capacity representation whichis especially helpful for nodes that have many chil-dren.Secondly, the DT-RNN allows for n-ary nodes inthe tree.
This is an improvement that is possible evenfor constituency tree CT-RNNs but it has not beenexplored in previous models.Third, due to computing parent nodes in con-stituency trees, previous models had the problemthat words that are merged last in the tree have alarger weight or importance in the final sentence rep-211Figure 4: The architecture of the visual model.
This model has 3 sequences of filtering, pooling and local contrastnormalization layers.
The learnable parameters are the filtering layer.
The filters are not shared, i.e., the network isnonconvolutional.resentation.
This can be problematic since these areoften simple non-content words, such as a leading?But,?.
While such single words can be important fortasks such as sentiment analysis, we argue that fordescribing visual scenes the DT-RNN captures themore important effects: The dependency tree struc-tures push the central content words such as the mainaction or verb and its subject and object to be mergedlast and hence, by construction, the final sentencerepresentation is more robust to less important ad-jectival modifiers, word order changes, etc.Fourth, we allow some untying of weights de-pending on either how far away a constituent is fromthe current word or what its semantic relationship is.Now that we can compute compositional vectorrepresentations for sentences, the next section de-scribes how we represent images.4 Learning Image Representations withNeural NetworksThe image features that we use in our experimentsare extracted from a deep neural network, replicatedfrom the one described in (Le et al., 2012).
The net-work was trained using both unlabeled data (randomweb images) and labeled data to classify 22,000 cat-egories in ImageNet (Deng et al., 2009).
We thenused the features at the last layer, before the classi-fier, as the feature representation in our experiments.The dimension of the feature vector of the last layeris 4,096.
The details of the model and its trainingprocedures are as follows.The architecture of the network can be seen inFigure 4.
The network takes 200x200 pixel imagesas inputs and has 9 layers.
The layers consist ofthree sequences of filtering, pooling and local con-trast normalization (Jarrett et al., 2009).
The poolingfunction is L2 pooling of the previous layer (takingthe square of the filtering units, summing them upin a small area in the image, and taking the square-root).
The local contrast normalization takes inputsin a small area of the lower layer, subtracts the meanand divides by the standard deviation.The network was first trained using an unsuper-vised objective: trying to reconstruct the input whilekeeping the neurons sparse.
In this phase, the net-work was trained on 20 million images randomlysampled from the web.
We resized a given imageso that its short dimension has 200 pixels.
We thencropped a fixed size 200x200 pixel image right at thecenter of the resized image.
This means we may dis-card a fraction of the long dimension of the image.After unsupervised training, we used Ima-geNet (Deng et al., 2009) to adjust the features in theentire network.
The ImageNet dataset has 22,000categories and 14 million images.
The number ofimages in each category is equal across categories.The 22,000 categories are extracted from WordNet.To speed up the supervised training of this net-work, we made a simple modification to the algo-rithm described in Le et al.
(2012): adding a ?bottle-neck?
layer in between the last layer and the classi-fier.
to reduce the number of connections.
We addedone ?bottleneck?
layer which has 4,096 units in be-tween the last layer of the network and the softmaxlayer.
This newly-added layer is fully connected tothe previous layer and has a linear activation func-tion.
The total number of connections of this net-work is approximately 1.36 billion.212The network was trained again using the super-vised objective of classifying the 22,000 classes inImageNet.
Most features in the networks are local,which allows model parallelism.
Data parallelismby asynchronous SGD was also employed as in Leet al.
(2012).
The entire training, both unsupervisedand supervised, took 8 days on a large cluster of ma-chines.
This network achieves 18.3% precision@1on the full ImageNet dataset (Release Fall 2011).We will use the features at the bottleneck layer asthe feature vector z of an image.
Each scaled andcropped image is presented to our network.
The net-work then performs a feedforward computation tocompute the values of the bottleneck layer.
Thismeans that every image is represented by a fixedlength vector of 4,096 dimensions.
Note that duringtraining, no aligned sentence-image data was usedand the ImageNet classes do not fully intersect withthe words used in our dataset.5 Multimodal MappingsThe previous two sections described how we canmap sentences into a d = 50-dimensional space andhow to extract high quality image feature vectors of4096 dimensions.
We now define our final multi-modal objective function for learning joint image-sentence representations with these models.
Ourtraining set consists of N images and their featurevectors zi and each image has 5 sentence descrip-tions si1, .
.
.
, si5 for which we use the DT-RNN tocompute vector representations.
See Fig.
5 for ex-amples from the dataset.
For training, we use a max-margin objective function which intuitively trainspairs of correct image and sentence vectors to havehigh inner products and incorrect pairs to have lowinner products.
Let vi = WIzi be the mapped imagevector and yij = DTRNN?
(sij) the composed sen-tence vector.
We define S to be the set of all sentenceindices and S(i) the set of sentence indices corre-sponding to image i.
Similarly, I is the set of all im-age indices and I(j) is the image index of sentencej.
The set P is the set of all correct image-sentencetraining pairs (i, j).
The ranking cost function tominimize is then: J(WI , ?)
=?(i,j)?P?c?S\S(i)max(0,??
vTi yj + vTi yc)+?(i,j)?P?c?I\I(j)max(0,??
vTi yj + vTc yj), (5)where ?
are the language composition matrices,and both second sums are over other sentences com-ing from different images and vice versa.
The hyper-parameter ?
is the margin.
The margin is found viacross validation on the dev set and usually around 1.The final objective also includes the regulariza-tion term ?/left(??
?22 + ?WI?F ).
Both the visualmodel and the word vector learning require a verylarge amount of training data and both have a hugenumber of parameters.
Hence, to prevent overfitting,we assume their weights are fixed and only train theDT-RNN parameters WI .
If larger training corporabecome available in the future, training both jointlybecomes feasible and would present a very promis-ing direction.
We use a modified version of Ada-Grad (Duchi et al., 2011) for optimization of bothWI and the DT-RNN as well as the other baselines(except kCCA).
Adagrad has achieved good perfor-mance previously in neural networks models (Deanet al., 2012; Socher et al., 2013a).
We modify itby resetting all squared gradient sums to 1 every 5epochs.
With both images and sentences in the samemultimodal space, we can easily query the model forsimilar images or sentences by finding the nearestneighbors in terms of negative inner products.An alternative objective function is based on thesquared loss J(WI , ?)
= ?
(i,j)?P ?vi ?
yj?22.
Thisrequires an alternating minimization scheme thatfirst trains only WI , then fixes WI and trains theDT-RNN weights ?
and then repeats this severaltimes.
We find that the performance with this ob-jective function (paired with finding similar imagesusing Euclidean distances) is worse for all modelsthan the margin loss of Eq.
5.
In addition kCCAalso performs much better using inner products inthe multimodal space.6 ExperimentsWe use the dataset of Rashtchian et al.
(2010) whichconsists of 1000 images, each with 5 sentences.
SeeFig.
5 for examples.We evaluate and compare the DT-RNN in threedifferent experiments.
First, we analyze how wellthe sentence vectors capture similarity in visualmeaning.
Then we analyze Image Search withQuery Sentences: to query each model with a sen-tence in order to find an image showing that sen-2131 .
A woman and her dog watch the cameraman in their living with wooden floors .2 .
A woman sitting on the couch while a black faced dog runs across the floor.3 .
A woman wearing a backpack sits on a couch while a small dog runs on the hardwood floor next to her .4 .
A women sitting on a sofa while a small Jack Russell walks towards the camera .5 .
White and black small dog walks toward the camera while woman sits on couch , desk and computer seenin the background as well as a pillow, teddy bear and moggie toy on the wood floor .1 .
A man in a cowboy hat check approaches a small red sports car .2 .
The back and left side of a red Ferrari and two men admiring it .3 .
The sporty car is admired by passer by .4 .
Two men next to a red sports car in a parking lot .5 .
Two men stand beside a red sports car.Figure 5: Examples from the dataset of images and their sentence descriptions (Rashtchian et al., 2010).
Sentencelength varies greatly and different objects can be mentioned first.
Hence, models have to be invariant to word ordering.tence?s visual ?meaning.?
The last experiment De-scribing Images by Finding Suitable Sentences doesthe reverse search where we query the model with animage and try to find the closest textual descriptionin the embedding space.In our comparison to other methods we focus onthose models that can also compute fixed, continu-ous vectors for sentences.
In particular, we compareto the RNN model on constituency trees of Socheret al.
(2011a), a standard recurrent neural network;a simple bag-of-words baseline which averages thewords.
All models use the word vectors provided byHuang et al.
(2012) and do not update them as dis-cussed above.
Models are trained with their corre-sponding gradients and backpropagation techniques.A standard recurrent model is used where the hiddenvector at word index t is computed from the hiddenvector at the previous time step and the current wordvector: ht = f(Whht?1 + Wxxt).
During training,we take the last hidden vector of the sentence chainand propagate the error into that.
It is also this vectorthat is used to represent the sentence.Other possible comparisons are to the very differ-ent models mentioned in the related work section.These models use a lot more task-specific engineer-ing, such as running object detectors with boundingboxes, attribute classifiers, scene classifiers, CRFsfor composing the sentences, etc.
Another line ofwork uses large sentence-image aligned resources(Kuznetsova et al., 2012), whereas we focus on eas-ily obtainable training data of each modality sepa-rately and a rather small multimodal corpus.In our experiments we split the data into 800 train-ing, 100 development and 100 test images.
Sincethere are 5 sentences describing each image, wehave 4000 training sentences and 500 testing sen-tences.
The dataset has 3020 unique words, half ofwhich only appear once.
Hence, the unsupervised,pre-trained semantic word vector representations arecrucial.
Word vectors are not fine tuned during train-ing.
Hence, the main parameters are the DT-RNN?sWl?,Wr?
or the semantic matrices of which there are141 and the image mappingWI .
For both DT-RNNsthe weight matrices are initialized to block identitymatrices plus Gaussian noise.
Word vectors and hid-den vectors are set o length 50.
Using the develop-ment split, we found ?
= 0.08 and the learning rateof AdaGrad to 0.0001.
The best model uses a mar-gin of ?
= 3.Inspired by Socher and Fei-Fei (2010) and Ho-dosh et al.
(2013) we also compare to kernelizedCanonical Correlation Analysis (kCCA).
We use theaverage of word vectors for describing sentences andthe same powerful image vectors as before.
Weuse the code of Socher and Fei-Fei (2010).
Tech-nically, one could combine the recently introduceddeep CCA Andrew et al.
(2013) and train the re-cursive neural network architectures with the CCAobjective.
We leave this to future work.
With lin-ear kernels, kCCA does well for image search butis worse for sentence self similarity and describingimages with sentences close-by in embedding space.All other models are trained by replacing the DT-RNN function in Eq.
5.6.1 Similarity of Sentences Describing theSame ImageIn this experiment, we first map all 500 sentencesfrom the test set into the multi-modal space.
Thenfor each sentence, we find the nearest neighbor sen-214Sentences Similarity for ImageModel Mean RankRandom 101.1BoW 11.8CT-RNN 15.8Recurrent NN 18.5kCCA 10.7DT-RNN 11.1SDT-RNN 10.5Image SearchModel Mean RankRandom 52.1BoW 14.6CT-RNN 16.1Recurrent NN 19.2kCCA 15.9DT-RNN 13.6SDT-RNN 12.5Describing ImagesModel Mean RankRandom 92.1BoW 21.1CT-RNN 23.9Recurrent NN 27.1kCCA 18.0DT-RNN 19.2SDT-RNN 16.9Table 1: Left: Comparison of methods for sentence similarity judgments.
Lower numbers are better since they indicatethat sentences describing the same image rank more highly (are closer).
The ranks are out of the 500 sentences in thetest set.
Center: Comparison of methods for image search with query sentences.
Shown is the average rank of thesingle correct image that is being described.
Right: Average rank of a correct sentence description for a query image.tences in terms of inner products.
We then sortthese neighbors and record the rank or position ofthe nearest sentence that describes the same im-age.
If all the images were very unique and the vi-sual descriptions close-paraphrases and consistent,we would expect a very low rank.
However, usuallya handful of images are quite similar (for instance,there are various images of airplanes flying, parking,taxiing or waiting on the runway) and sentence de-scriptions can vary greatly in detail and specificityfor the same image.Table 1 (left) shows the results.
We can see thataveraging the high quality word vectors already cap-tures a lot of similarity.
The chain structure of astandard recurrent neural net performs worst sinceits representation is dominated by the last words inthe sequence which may not be as important as ear-lier words.6.2 Image Search with Query SentencesThis experiment evaluates how well we can find im-ages that display the visual meaning of a given sen-tence.
We first map a query sentence into the vectorspace and then find images in the same space usingsimple inner products.
As shown in Table 1 (center),the new DT-RNN outperforms all other models.6.3 Describing Images by Finding SuitableSentencesLastly, we repeat the above experiments but withroles reversed.
For an image, we search for suitabletextual descriptions again simply by finding close-by sentence vectors in the multi-modal embeddingspace.
Table 1 (right) shows that the DT-RNN againoutperforms related models.
Fig.
2assigned to im-Image SearchModel mRankBoW 24.7CT-RNN 22.2Recurrent NN 28.4kCCA 13.7DT-RNN 13.3SDT-RNN 15.8Describing ImagesModel mRankBoW 30.7CT-RNN 29.4Recurrent NN 31.4kCCA 38.0DT-RNN 26.8SDT-RNN 37.5Table 2: Results of multimodal ranking when models aretrained with a squared error loss and using Euclidean dis-tance in the multimodal space.
Better performance isreached for all models when trained in a max-margin lossand using inner products as in the previous table.ages.
The average ranking of 25.3 for a correct sen-tence description is out of 500 possible sentences.
Arandom assignment would give an average rankingof 100.6.4 Analysis: Squared Error Loss vs. MarginLossWe analyze the influence of the multimodal lossfunction on the performance.
In addition, we com-pare using Euclidean distances instead of inner prod-ucts.
Table 2 shows that performance is worse for allmodels in this setting.6.5 Analysis: Recall at n vs Mean RankHodosh et al.
(2013) and other related work use re-call at n as an evaluation measure.
Recall at n cap-tures how often one of the top n closest vectors werea correct image or sentence and gives a good intu-ition of how a model would perform in a rankingtask that presents n such results to a user.
Below, wecompare three commonly used and high performingmodels: bag of words, kCCA and our SDT-RNN on215A gray convertible sports car is parked in front of the trees .A close-up view of the headlights of a blue old -fashioned car.Black shiny sports car parked on concrete driveway .Five cows grazing on a patch of grass between two roadways .A jockey rides a brown and white horse in a dirt corral .A young woman is riding a Bay hose in a dirt riding -ring.A white bird pushes a miniature teal shopping cart.A person rides a brown horse.A motocross bike with rider flying through the air .White propeller plane parked in middle of grassy field .The white jet with its landing gear down flies in the blue sky .An elderly woman catches a ride on the back of the bicycle .A green steam train running down the tracks.Steamy locomotive speeding thou the forest .A steam engine comes down a train track near trees.A double decker bus is driving by Big Ben in London .People in an outrigger canoe sail on emerald green water .Two people sailing a small white sail boat.behind a cliff, a boat sails awayTourist move in on Big Ben on a typical overcast London day .A group of people sitting around a table on a porch.A group of four people walking past a giant mushroom.A man and women smiling for the camera in a kitchen.A group of men sitting around a table drinking while a man behindstands pointing.Figure 6: Images and their sentence descriptions assigned by the DT-RNN.Image SearchModel mRank 4 R@1 5 R@5 5 R@10 5BoW 14.6 15.8 42.2 60.0kCCA 15.9 16.4 41.4 58.0SDT-RNN 12.5 16.4 46.6 65.6Describing ImagesBoW 21.1 19.0 38.0 57.0kCCA 18.0 21.0 47.0 61.0SDT-RNN 16.9 23.0 45.0 63.0Table 3: Evaluation comparison between mean rank ofthe closest correct image or sentence (lower is better 4)with recall at different thresholds (higher is better, 5).With one exception (R@5, bottom table), the SDT-RNNoutperforms the other two models and all other modelswe did not include here.this different metric.
Table 3 shows that the mea-sures do correlate well and the SDT-RNN also per-forms best on the multimodal ranking tasks whenevaluated with this measure.6.6 Error AnalysisIn order to understand the main problems with thecomposed sentence vectors, we analyze the sen-tences that have the worst nearest neighbor rank be-tween each other.
We find that the main failure modeof the SDT-RNN occurs when a sentence that shoulddescribe the same image does not use a verb but theother sentences of that image do include a verb.
Forexample, the following sentence pair has vectors thatare very far apart from each other even though theyare supposed to describe the same image:1.
A blue and yellow airplane flying straight downwhile emitting white smoke2.
Airplane in dive positionGenerally, as long as both sentences either have averb or do not, the SDT-RNN is more robust to dif-ferent sentence lengths than bag of words represen-tations.6.7 Model Analysis: Semantic CompositionMatricesThe best model uses composition matrices based onsemantic relationships from the dependency parser.We give some insights into what the model learnsby listing the composition matrices with the largestFrobenius norms.
Intuitively, these matrices havelearned larger weights that are being multiplied withthe child vector in the tree and hence that child willhave more weight in the final composed parent vec-tor.
In decreasing order of Frobenius norm, the re-lationship matrices are: nominal subject, possessionmodifier (e.g.
their), passive auxiliary, prepositionat, preposition in front of, passive auxiliary, passivenominal subject, object of preposition, prepositionin and preposition on.The model learns that nouns are very important aswell as their spatial prepositions and adjectives.7 ConclusionWe introduced a new recursive neural networkmodel that is based on dependency trees.
For eval-uation, we use the challenging task of mapping sen-tences and images into a common space for findingone from the other.
Our new model outperformsbaselines and other commonly used models that cancompute continuous vector representations for sen-tences.
In comparison to related models, the DT-RNN is more invariant and robust to surface changessuch as word order.216ReferencesG.
Andrew, R. Arora, K. Livescu, and J. Bilmes.
2013.Deep canonical correlation analysis.
In ICML, At-lanta, Georgia.K.
Barnard, P. Duygulu, N. de Freitas, D. Forsyth,D.
Blei, and M. Jordan.
2003.
Matching words andpictures.
JMLR.M.
Baroni and A. Lenci.
2010.
Distributional mem-ory: A general framework for corpus-based semantics.Computational Linguistics, 36(4):673?721.R.
Collobert and J. Weston.
2008.
A unified archi-tecture for natural language processing: deep neuralnetworks with multitask learning.
In Proceedings ofICML, pages 160?167.F.
Costa, P. Frasconi, V. Lombardo, and G. Soda.
2003.Towards incremental parsing of natural language usingrecursive neural networks.
Applied Intelligence.M.
de Marneffe, B. MacCartney, and C. D. Manning.2006.
Generating typed dependency parses fromphrase structure parses.
In LREC.J.
Dean, G. S. Corrado, R. Monga, K. Chen, M. Devin,Q.
V. Le, M. Z. Mao, M. Ranzato, A.
Senior, P. Tucker,K.
Yang, and A.Y.
Ng.
2012.
Large scale distributeddeep networks.
In NIPS.J.
Deng, W. Dong, R. Socher, L.-J.
Li, K. Li, and L. Fei-Fei.
2009.
ImageNet: A Large-Scale Hierarchical Im-age Database.
In CVPR.J.
Duchi, E. Hazan, and Y.
Singer.
2011.
Adaptive sub-gradient methods for online learning and stochastic op-timization.
JMLR, 12, July.P.
Duygulu, K. Barnard, N. de Freitas, and D. Forsyth.2002.
Object recognition as machine translation.
InECCV.A.
Farhadi, M. Hejrati, M. A. Sadeghi, P. Young,C.
Rashtchian, J. Hockenmaier, and D. Forsyth.
2010.Every picture tells a story: Generating sentences fromimages.
In ECCV.Y.
Feng and M. Lapata.
2013.
Automatic caption gen-eration for news images.
IEEE Trans.
Pattern Anal.Mach.
Intell., 35.A.
Frome, G. Corrado, J. Shlens, S. Bengio, J. Dean,M.
Ranzato, and T. Mikolov.
2013.
Devise: A deepvisual-semantic embedding model.
In NIPS.C.
Goller and A. Ku?chler.
1996.
Learning task-dependent distributed representations by backpropaga-tion through structure.
In Proceedings of the Interna-tional Conference on Neural Networks.E.
Grefenstette, G. Dinu, Y.-Z.
Zhang, M. Sadrzadeh, andM.
Baroni.
2013.
Multi-step regression learning forcompositional distributional semantics.
In IWCS.A.
Gupta and L. S. Davis.
2008.
Beyond nouns: Exploit-ing prepositions and comparative adjectives for learn-ing visual classifiers.
In ECCV.M.
Hodosh, P. Young, and J. Hockenmaier.
2013.
Fram-ing image description as a ranking task: Data, mod-els and evaluation metrics.
J. Artif.
Intell.
Res.
(JAIR),47:853?899.E.
H. Huang, R. Socher, C. D. Manning, and A. Y. Ng.2012.
Improving Word Representations via GlobalContext and Multiple Word Prototypes.
In ACL.K.
Jarrett, K. Kavukcuoglu, M.A.
Ranzato, and Y. Le-Cun.
2009.
What is the best multi-stage architecturefor object recognition?
In ICCV.P.
Blunsom.
K.M.
Hermann.
2013.
The role of syntaxin vector space models of compositional semantics.
InACL.A.
Krizhevsky, I. Sutskever, and G. E. Hinton.
2012.Imagenet classification with deep convolutional neuralnetworks.
In NIPS.G.
Kulkarni, V. Premraj, S. Dhar, S. Li, Y. Choi, A. C.Berg, and T. L. Berg.
2011.
Baby talk: Understandingand generating image descriptions.
In CVPR.N.
Kumar, A. C. Berg, P. N. Belhumeur, , and S. K. Na-yar.
2009.
Attribute and simile classifiers for face ver-ification.
In ICCV.P.
Kuznetsova, V. Ordonez, A. C. Berg, T. L. Berg, andYejin Choi.
2012.
Collective generation of naturalimage descriptions.
In ACL.Q.
V. Le, M.A.
Ranzato, R. Monga, M. Devin, K. Chen,G.S.
Corrado, J.
Dean, and A. Y. Ng.
2012.
Build-ing high-level features using large scale unsupervisedlearning.
In ICML.T.
Mikolov, W. Yih, and G. Zweig.
2013.
Linguisticregularities in continuous spaceword representations.In HLT-NAACL.J.
Mitchell and M. Lapata.
2010.
Composition in dis-tributional models of semantics.
Cognitive Science,34(8):1388?1429.J.
Ngiam, A. Khosla, M. Kim, J. Nam, H. Lee, and A.Y.Ng.
2011.
Multimodal deep learning.
In ICML.V.
Ordonez, G. Kulkarni, and T. L. Berg.
2011.
Im2text:Describing images using 1 million captioned pho-tographs.
In NIPS.J.
B. Pollack.
1990.
Recursive distributed representa-tions.
Artificial Intelligence, 46, November.C.
Rashtchian, P. Young, M. Hodosh, and J. Hocken-maier.
2010.
Collecting image annotations usingAmazon?s Mechanical Turk.
In Workshop on Creat-ing Speech and Language Data with Amazon?s MTurk.R.
Socher and L. Fei-Fei.
2010.
Connecting modalities:Semi-supervised segmentation and annotation of im-ages using unaligned text corpora.
In CVPR.R.
Socher, C. D. Manning, and A. Y. Ng.
2010.
Learningcontinuous phrase representations and syntactic pars-ing with recursive neural networks.
In Proceedings ofthe NIPS-2010 Deep Learning and Unsupervised Fea-ture Learning Workshop.217R.
Socher, E. H. Huang, J. Pennington, A. Y. Ng, andC.
D. Manning.
2011a.
Dynamic Pooling and Unfold-ing Recursive Autoencoders for Paraphrase Detection.In NIPS.R.
Socher, C. Lin, A. Y. Ng, and C.D.
Manning.
2011b.Parsing Natural Scenes and Natural Language withRecursive Neural Networks.
In ICML.R.
Socher, J. Pennington, E. H. Huang, A. Y. Ng, andC.
D. Manning.
2011c.
Semi-Supervised RecursiveAutoencoders for Predicting Sentiment Distributions.In EMNLP.R.
Socher, B. Huval, C. D. Manning, and A. Y. Ng.2012.
Semantic Compositionality Through RecursiveMatrix-Vector Spaces.
In EMNLP.R.
Socher, J. Bauer, C. D. Manning, and A. Y. Ng.
2013a.Parsing With Compositional Vector Grammars.
InACL.R.
Socher, M. Ganjoo, C. D. Manning, and A. Y. Ng.2013b.
Zero-Shot Learning Through Cross-ModalTransfer.
In NIPS.R.
Socher, M. Ganjoo, H. Sridhar, O. Bastani, andA.
Y. Ng.
C. D. Manning and.
2013c.
Zero-shot learn-ing through cross-modal transfer.
In Proceedings ofthe International Conference on Learning Representa-tions (ICLR, Workshop Track).N.
Srivastava and R. Salakhutdinov.
2012.
Multimodallearning with deep boltzmann machines.
In NIPS.A.
Torralba, K. P. Murphy, and W. T. Freeman.
2010.Using the forest to see the trees: exploiting context forvisual object detection and localization.
Communica-tions of the ACM.P.
D. Turney and P. Pantel.
2010.
From frequency tomeaning: Vector space models of semantics.
Journalof Artificial Intelligence Research, 37:141?188.B.
Yao, X. Yang, L. Lin, M. W. Lee, and S.-C. Zhu.
2010.I2t:image parsing to text description.
IEEE Xplore.218
