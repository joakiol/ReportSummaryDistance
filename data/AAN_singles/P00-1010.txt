Robust Temporal Processing of NewsInderjeet Mani and George WilsonThe MITRE Corporation, W64011493 Sunset Hills RoadReston, Virginia 22090{imani, gwilson}@mitre.orgAbstractWe introduce an annotation scheme fortemporal expressions, and describe amethod for resolving temporalexpressions in print and broadcast news.The system, which is based on bothhand-crafted and machine-learnt rules,achieves an 83.2% accuracy (F-measure) against hand-annotated data.Some initial steps towards tagging eventchronologies are also described.IntroductionThe extraction of temporal information fromnews offers many interesting linguisticchallenges in the coverage andrepresentation of temporal expressions.
It isalso of considerable practical importance ina variety of current applications.
Forexample, in question-answering, it is usefulto be able to resolve the underlinedreference in ?the next year, he won theOpen?
in response to a question like ?Whendid X win the U.S.
Open??.
In multi-document summarization, providing fine-grained chronologies of events over time(e.g., for a biography of a person, or ahistory of a crisis) can be very useful.
Ininformation retrieval, being able to indexbroadcast news stories by event times allowsfor powerful multimedia browsingcapabilities.Our focus here, in contrast to previous worksuch as (MUC 1998),  is on resolving timeexpressions, especially indexical expressionslike ?now?, ?today?, ?tomorrow?, ?nextTuesday?,  ?two weeks ago?, ?20 mins afterthe next hour?, etc., which designate timesthat are dependent on the speaker and some?reference?
time1.
In this paper, we discussa temporal annotation scheme forrepresenting dates and times in temporalexpressions.
This is followed by details andperformance measures for a tagger to extractthis information from news sources.
Thetagger uses a variety of hand-crafted andmachine-discovered rules, all of which relyon lexical features that are easilyrecognized.
We also report on a preliminaryeffort towards constructing eventchronologies from this data.1 Annotation SchemeAny annotation scheme should aim to besimple enough to be executed by humans,and yet precise enough for use in variousnatural language processing tasks.
Ourapproach (Wilson et al 2000) has been toannotate those things that a human could beexpected to tag.Our representation of times uses the ISOstandard CC:YY:MM:DD:HH:XX:SS, withan optional time zone (ISO-8601 1997).
Inother words, time points are represented interms of a calendric coordinate system,rather than a real number line.
The standardalso supports the representation of weeksand days of the week in the formatCC:YY:Wwwd where ww specifies whichweek within the year (1-53) and d specifiesthe day of the week (1-7).
For example, ?lastweek?
might receive the VAL 20:00:W16.A time (TIMEX) expression (of type TIMEor DATE) representing a particular point onthe ISO line, e.g., ?Tuesday, November 2,2000?
(or ?next Tuesday?)
is representedwith the ISO time  Value (VAL),20:00:11:02.
Interval expressions like ?From1 Some of these indexicals have been called?relative times?
in the (MUC 1998) temporaltagging task.May 1999 to June 1999?, or ?from 3 pm to 6pm?
are represented as two separate TIMEXexpressions.In addition to the values provided by theISO standard, we have added severalextensions, including a list of additionaltokens to represent some commonlyoccurring temporal units; for example,?summer of ?69?
could be represented as19:69:SU.
The intention here is to capturethe information in the text while leavingfurther interpretation of the Values toapplications using the markup.It is worth noting that there are several kindsof temporal expressions that are not to betagged,  and that other expressions tagged asa time expression are not assigned a value,because doing so would violate thesimplicity and preciseness requirements.
Wedo not tag unanchored intervals, such as?half an hour (long)?
or ?
(for) one month?.Non-specific time expressions like generics,e.g., ?April?
in ?April is usually wet?, or?today?
in ?today?s youth?,  and indefinites,e.g., ?a Tuesday?, are tagged without avalue.
Finally, expressions which areambiguous without a strongly preferredreading are left without a value.This representation treats points as primitive(as do (Bennett and Partee 1972), (Dowty1979), among others); other representationstreat intervals as primitive, e.g., (Allen1983).
Arguments can be made for eitherposition, as long as both intervals and pointsare accommodated.
The annotation schemedoes not force committing to end-points ofintervals, and is compatible with currenttemporal ontologies such as (KSL-Time1999); this may help eventually supportadvanced inferential capabilities based ontemporal information extraction.2 Tagging MethodOverall ArchitectureThe system architecture of the temporaltagger is shown in Figure 1.
The taggingprogram takes in a document which hasbeen tokenized into words and sentences andtagged for part-of-speech.
The programpasses each sentence first to a module thatidentifies time expressions, and then toanother module (SC) that resolves self-contained time expressions.
The programthen takes the entire document and passes itto a discourse processing module (DP)which resolves context-dependent timeexpressions (indexicals as well as otherexpressions).
The DP module trackstransitions in temporal focus, uses syntacticclues, and various other knowledge sources.The module uses a notion of Reference Timeto help resolve context-dependentexpressions.
Here, the Reference Time is thetime a context-dependent expression isrelative to.
In our work, the reference time isassigned the value of either the TemporalFocus or the document (creation) date.
TheTemporal Focus is the time currently beingtalked about in the narrative.
The initialreference time is the document date.2.2 Assignment of time valuesWe now discuss the modules that assignvalues to identified time expressions.
Timeswhich are fully specified are tagged withtheir value, e.g, ?June 1999?
as 19:99:06 bythe SC module.
The DP module uses anordered sequence of rules to handle thecontext-dependent expressions.
These coverthe following cases:Explicit offsets from reference time:indexicals like ?yesterday?, ?today?,?tomorrow?, ?this afternoon?, etc., areambiguous between a specific and a non-specific reading.
The specific use(distinguished from the generic one bymachine learned rules discussed below) getsassigned a value based on an offset from  thereference time, but the generic use does not.Positional offsets from reference time:Expressions like ?next month?, ?last year?and ?this coming Thursday?
use lexicalmarkers (underlined) to describe thedirection and magnitude of the offset fromthe reference time.Implicit offsets based on verb tense:Expressions like ?Thursday?
in ?the actiontaken Thursday?, or bare month names like?February?
are passed to rules that try todetermine the direction of the offset fromthe reference time.
Once the direction isdetermined, the magnitude of the offset canbe computed.
The tense of a neighboringverb is used to decide what direction to lookto resolve the expression.
Such a verb isfound by first searching backward to the lastTIMEX, if any, in the sentence, thenforward to the end of the sentence andfinally backwards to the beginning of thesentence.
If the tense is past, then thedirection is backwards from the referencetime.
If the tense is future, the direction isforward.
If the verb is present tense, theexpression is passed on to subsequent rulesfor resolution.
For example, in the followingpassage, ?Thursday?
is resolved to theThursday prior to the reference date because?was?, which has a past tense tag, is foundearlier in the sentence:The Iraqi news agency said the first shipmentof 600,000 barrels was loaded Thursday by theoil tanker Edinburgh.Further use of lexical markers:  Otherexpressions lacking a value are examined forthe nearby presence of a few additionalmarkers, such as ?since?
and ?until?, thatsuggest the direction of the offset.Nearby Dates:  If a direction from thereference time has not been determined,some dates, like ?Feb.
14?, and otherexpressions that indicate a particular date,like ?Valentine?s Day?, may still beuntagged because the year has not beendetermined.
If the year can be chosen in away that makes the date in question less thana month from the reference date, that year ischosen.
For example, if the reference date isFeb.
20, 2000 and the expression ?Feb.
14?has not been assigned a value, this rulewould assign it the value Feb. 14, 2000.Dates more than a month away are notassigned values by this rule.3 Time Tagging Performance3.1 Test CorpusThere were two different genres used in thetesting: print news and broadcast newstranscripts.
The print news consisted of 22New York Times (NYT) articles fromJanuary 1998.
The broadcast news dataconsisted of 199 transcripts of Voice ofAmerica  (VOA) broadcasts from January of1998, taken from the TDT2 collection(TDT2 1999).
The print data was muchcleaner than the transcribed broadcast datain the sense that there were very fewtypographical errors, spelling and grammarwere good.
On the other hand, the print dataalso had longer, more complex sentenceswith somewhat greater variety in the wordsused to represent dates.
The broadcastcollection had a greater proportion ofexpressions referring to time of day,primarily due to repeated announcements ofthe current time and the time of upcomingshows.The test data was marked by hand taggingthe time expressions and assigning value tothem where appropriate.
This hand-markeddata was used to evaluate the performanceof a frozen version of the machine tagger,which was trained and engineered on aseparate body of NYT, ABC News, andCNN data.
Only the body of the text wasincluded in the tagging and evaluation.3.2 System performanceThe system performance is shown in Table12.
Note that if the human said the TIMEXhad no value, and the system decided it hada value,  this is treated as  an error.
Abaseline of just tagging values of absolute,fully specified TIMEXs (e.g., ?January 31st,1999?)
is shown for comparison inparentheses.
Obviously, we would prefer alarger data sample; we are currently engagedin an effort within the information extractioncommunity to annotate a large sample of theTDT2 collection and to conduct an inter-annotator reliability study.Error AnalysisTable 2 shows the number of errors made bythe program classified by the type of error.Only 2 of these 138 errors (5 on TIME, 133on DATE) were due to errors in the source.14 of the 138 errors (9 NYT vs. 5 VOA)2 The evaluated version of the system does notadjust the Reference Time for subsequentsentences.were due to the document date beingincorrect as a reference time.Part of speech tagging: Some errors, both inthe identification of time expressions and theassignment of values, can be traced toincorrect part of speech tagging in thepreprocessing; many of these errors shouldbe easily correctable.TIMEX expressionsA total of 44 errors were made in theidentification of TIMEX expressions.Not yet implemented: The biggest sourceof errors in identifying time expressions wasformats that had not yet been implemented.For example, one third (7 of 21, 5 of whichwere of type TIME) of all missed timeexpressions came from numeric expressionsbeing spelled out, e.g.
?nineteen seventy-nine?.
More than two thirds (11 of 16) of thetime expressions for which the programincorrectly found the boundaries of theexpression (bad extent) were due to theunimplemented pattern ?Friday the 13th?.Generalization of the existing patternsshould correct these errors.Proper Name Recognition: A few itemswere spuriously tagged as time expressions(extra TIMEX).
One source of this thatshould be at least partially correctable is inthe tagging of apparent dates in propernames, e.g.
?The July 26 Movement?, ?TheTonight Show?, ?USA Today?.
The timeexpression identifying rules assumed thatthese had been tagged as lexical items, butthis lexicalization has not yet beenimplemented.Values assignedA total of 94 errors were made in theassignment of values to time expressionsthat had been correctly identified.Generic/Specific: In the combined data, 25expressions were assigned a value whenthey should have received none because theexpression was a generic usage that couldnot be placed on a time line.
This is thesingle biggest source of errors in the valueassignments.4 Machine Learning RulesOur approach has been to develop initialrules by hand, conduct an initial evaluationon an unseen test set, determine majorerrors, and then handling those errors byaugmenting the rule set with additional rulesdiscovered by machine learning.
As notedearlier, distinguishing between specific useof a time expression and a generic use (e.g.,?today?, ?now?, etc.)
was and is asignificant source of error.
Some of the otherproblems that these methods could beapplied to distinguishing a calendar yearreference from a fiscal year one (as in ?thisyear?
), and distinguishing seasonal fromspecific day references.
For example,?Christmas?
has a seasonal use (e.g., ?Ispent Christmas visiting European capitals?
)distinct from its reference to a specific dayuse as ?December 25th?
(e.g., ?We went to agreat party on Christmas?
).Here we discuss machine learning results indistinguishing specific use of ?today?
(meaning the day of the utterance) from itsgeneric use meaning ?nowadays?.
Inaddition to features based on words co-occurring with ?today?
(Said, Will, Even,Most, and Some features below), some otherfeatures (DOW and CCYY) were addedbased on a granularity hypothesis.Specifically, it seems possible that ?today?meaning the day of the utterance sets a scaleof events at a day or a small number of days.The generic use, ?nowadays?, seems to havea broader scale.
Therefore, terms that mightpoint to one of these scales such as thenames of days of the week, the word ?year?and four digit years were also included inthe training features.
To summarize, thefeatures we used for the ?today?
problem areas follows (features are boolean except forstring-valued POS1 and POS2):Poss: whether ?today?
has a possessiveinflectionQcontext: whether ?today?
is inside aquotationSaid: presence of ?said?
in the same sentenceWill: presence of ?will?
in the same sentenceEven: presence of ?even?
in the same sentenceMost: presence of ?most?
in the same sentenceSome: presence of ?some?
in the samesentenceYear: presence of ?year?
in the same sentenceCCYY: presence of a four-digit year in thesame sentenceDOW: presence of a day of the weekexpression (?Monday?
thru ?Sunday?)
in thesame sentenceFW:  ?today?
is the first word of the sentencePOS1: part-of-speech of the word before?today?POS2: part-of-speech of the word after?today?Label: specific or non-specific (class label)Table 3 shows the performance of differentclassifiers in classifying occurrences of?today?
as generic versus specific.
Theresults are for 377 training vectors and 191test vectors,  measured in terms of PredictiveAccuracy (percentage test vectors correctlyclassified).We  incorporated some of the rules learnt byC4.5 Rules (the only classifier whichdirectly output rules) into the current versionof the program.
These rules includedclassifying ?today?
as generic based on (1)feature Most being true (74.1% accuracy) or(2) based on feature FW being true andPoss, Some and Most being false (67.4%accuracy).
The granularity hypothesis waspartly borne out in that C4.5 rules alsodiscovered that the mention of a day of aweek (e.g.
?Monday?
), anywhere in thesentence predicted specific use (73.3%accuracy).5 Towards Chronology ExtractionEvent OrderingOur work in this area is highly preliminary.To extract temporal relations betweenevents, we have developed an event-ordering component, following (Song andCohen 1991).
We encode the tenseassociated with each verb using theirmodified Reichenbachian (Reichenbach1947) representation based on the tuple<si, lge, ri, lge, ei>.
Here si is an index forthe speech time, ri for the reference time,and ei for the event time, with lge being thetemporal  relations precedes, follows, orcoincides.
With each successive event, thetemporal focus is either maintained orshifted, and a temporal ordering relationbetween the event and the focus is asserted,using heuristics defining coherent tensesequences; see (Song and Cohen 1991) formore details.
Note that the tagged TIMEexpressions aren't used in determining theseinter-event temporal relations, so this event-ordering component could be used to orderevents which don't have time VALs.Event Time AlignmentIn addition, we have also investigated thealignment of events on a calendric line,using the tagged TIME expressions.
Theprocessing, applied to documents tagged bythe time tagger, is in two stages.
In the firststage, for each sentence, each ?taggable verboccurrence?
lacking a time expression isgiven the VAL of the immediately previoustime expression in the sentence.
Taggableverb occurrences are all verb occurrencesexcept auxiliaries, modals and verbsfollowing  ?to?, ?not?, or specific modalverbs.
In turn, when a time expression isfound, the immediately previous verblacking a time expression is given thatexpression's VAL as its TIME.
In the secondstage, each taggable verb in a sentencelacking a time expression is given the TIMEof the immediately previous verb in thesentence which has one, under the defaultassumption that the temporal focus ismaintained.Of course, rather than blindly propagatingtime expressions to events based onproximity, we should try to representrelationships expressed by temporalcoordinators like ?when?, ?since?, ?before?,as well as  explicitly temporally anchoredevents, like ?ate at 3 pm?.
The event-alignercomponent uses a very simple method,intended to serve as a baseline method, andto gain an understanding of the issuesinvolved.
In the future, we expect toadvance to event-alignment algorithmswhich rely on a syntactic analysis, whichwill be compared against this baseline.AssessmentAn example of the chronological tagging ofevents offered by these two components isshown in Figure 2, along with the TIMEXtags extracted by the time tagger.
Here eachtaggable verb is given an event index, withthe precedes attribute indicating one or moreevent indices which it precedes temporally.
(Attributes irrelevant to the example aren'tshown).
The information of the sort shownin Figure 2 can be used to sort and clusterevents temporally, allowing for varioustime-line based presentations of thisinformation in response to specific queries.The event-orderer has not yet beenevaluated.
Our evaluation of the event-aligner checks the TIME of all correctlyrecognized verbs (i.e., verbs recognizedcorrectly by the part-of-speech tagger).
Thebasic criterion for event TIME annotation isthat if the time of the event is obvious, it isto be tagged as the TIME for that verb.
(Thiscriterion excludes interval specifications forevents, as well as event references involvinggenerics, counterfactuals, etc.
However, thejudgements are still delicate in certaincases.)
We score Correctness as number ofcorrect TIME fills for correctly recognizedverbs over total number of correctlyrecognized verbs.
Our total correctnessscores on a small sample of 8505 words oftext is 394 correct event times out of 663correct verb tags, giving a correctness scoreof 59.4%.
Over half the errors were due topropagation of spreading of an incorrectevent time to neighboring events; about 15%of the errors were due to event timespreceding the initial TIMEX expression(here the initial reference time should havebeen used); and at least 10% of the errorswere due to explicitly marked tenseswitches.
This is a very small sample, so theresults are meant to be illustrative of thescope and limitations of this baseline event-aligning technique rather than present adefinitive result.6 Related WorkThe most relevant prior work is (Wiebe etal.
98), who dealt with meeting schedulingdialogs (see also (Alexandersson et al 97),(Busemann et al 97)), where the goal is toschedule a time for the meeting.
Thetemporal references in meeting schedulingare somewhat more constrained than innews, where (e.g., in a historical news pieceon toxic dumping) dates and times may berelatively unconstrained.
In addition, theirmodel requires the maintenance of a focusstack.
They obtained roughly .91 Precisionand .80 Recall on one test set, and .87Precision and .68 Recall on another.However, they adjust the reference timeduring processing, which is something thatwe have not yet addressed.More recently, (Setzer and Gaizauskas2000) have independently developed anannotation scheme which represents bothtime values and more fine-grained inter-event and event-time temporal relations.Although our work is much more limited inscope, and doesn't exploit the internalstructure of events, their annotation schememay be leveraged in evaluating aspects ofour work.The MUC-7 task (MUC-7 98) did notrequire VALs, but did test TIMEXrecognition accuracy.
Our 98 F-measure onNYT can be compared for just TIMEX withMUC-7 (MUC-7 1998) results on similarnews stories, where the best performancewas .99 Precision and .88 Recall.
(The MUCtask required recognizing a wider variety ofTIMEXs, including event-dependent ones.However, at least 30% of the dates andtimes in the MUC test were fixed-formatones occurring in document headers, trailers,and copyright notices.
)Finally, there is  a large body of work, e.g.,(Moens and Steedman 1988), (Passoneau1988), (Webber 1988), (Hwang 1992),(Song and Cohen 1991), that has focused ona computational analysis of tense and aspect.While the work on event chronologies isbased on some of the notions developed inthat body of work, we hope to furtherexploit insights from previous work.ConclusionWe have developed a temporal annotationspecification, and an algorithm for resolvinga class of time expressions found in news.The algorithm, which is relativelyknowledge-poor, uses a mix of hand-craftedand machine-learnt rules and obtainsreasonable results.In the future, we expect to improve theintegration of various modules, includingtracking the temporal focus in the timeresolver, and interaction between the event-order and the event-aligner.
We also hope tohandle a wider class of time expressions, aswell as further improve our extraction andevaluation of event chronologies.
In the longrun, this could include representing event-time and inter-event relations expressed bytemporal coordinators, explicitly temporallyanchored events, and nominalizations.Figure 1.
Time TaggerSourcearticlesnumberof wordsType HumanFound(Correct)SystemFoundSystemCorrectPrecisionRecall F-measureNYT2235,555TIMEX 302 302 296 98.0 98.0 98.0Values 302 302 249 (129)82.5(42.7)82.5(42.7)82.5(42.7)Broadcast19942,616TIMEX 426 417 400 95.9 93.9 94.9Values 426 417 353 (105)84.7(25.1)82.9(24.6)83.8(24.8)Overall22178,171TIMEX 728 719 696 96.8 95.6 96.2Values 728 719 602 (234)83.7(32.5)82.7(32.1)83.2(32.3)Table 1.
Performance of Time Tagging AlgorithmPrint Broadcast TotalMissing Vals 10 29 39Extra Vals 18 7 25Wrong Vals 19 11 30MissingTIMEX6 15 21ExtraTIMEX2 5 7Bad TIMEXextent4 12 16TOTAL 59 79 138Table 2.
High Level Analysis of ErrorsDriverResolveSelf-containedIdentifyExpressionsDiscourseProcessorContextTrackerAlgorithm Predictive AccuracyMC4 Decision Tree3 79.8C4.5 Rules 69.8Na?ve Bayes 69.6Majority Class (specific) 66.5Table 3.
Performance of  ?Today?
ClassifiersIn the last step after years of preparation, the countries <lex eindex=?9?precedes=?10|?
TIME=?19981231?>locked</lex> in the exchange rates oftheir individual currencies to the euro, thereby <lex eindex=?10?TIME=?19981231?>setting</lex> the value at which the euro will begin <lexeindex=?11?
TIME=?19990104?>trading</lex> when financial markets openaround the world on <TIMEX VAL=?19990104?>Monday</TIMEX>?
?.Figure 2.
Chronological Tagging3 Algorithm from the MLC++ package (Kohavi and Sommerfield 1996).ReferencesJ.
Alexandersson, N. Riethinger, and E. Maier.Insights into the Dialogue Processing ofVERBMOBIL.
Proceedings of the FifthConference on Applied Natural LanguageProcessing, 1997, 33-40.J.
F.  Allen.
Maintaining Knowledge AboutTemporal Intervals.
Communications of theACM, Volume 26, Number 11, 1983.M.
Bennett and B. H. Partee.
Towards the Logicof Tense and Aspect in English, IndianaUniversity Linguistics Club, 1972.S.
Busemann, T. Decleck, A. K. Diagne, L. Dini,J.
Klein, and S. Schmeier.
Natural LanguageDialogue Service for Appointment SchedulingAgents.
Proceedings of the Fifth Conferenceon Applied Natural Language Processing,1997, 25-32.D.
Dowty.
?Word Meaning and MontagueGrammar?, D. Reidel, Boston, 1979.C.
H. Hwang.
A Logical Approach to NarrativeUnderstanding.
Ph.D. Dissertation,Department of Computer Science, U. ofAlberta, 1992.ISO-8601ftp://ftp.qsl.net/pub/g1smd/8601v03.pdf 1997.R.
Kohavy and D. Sommerfield.
MLC++:Machine Learning Library in C++.http://www.sgi.com/Technology/mlc 1996.KSL-Time 1999.http://www.ksl.Stanford.EDU/ontologies/time/1999.M.
Moens and M. Steedman.
Temporal Ontologyand Temporal Reference.
ComputationalLinguistics, 14, 2, 1988, pp.
15-28.MUC-7.
Proceedings of the Seventh MessageUnderstanding Conference, DARPA.
1998.R.
J. Passonneau.
A Computational Model of theSemantics of Tense and Aspect.
ComputationalLinguistics, 14, 2, 1988, pp.
44-60.H.
Reichenbach.
Elements of Symbolic Logic.London, Macmillan.
1947.A.
Setzer and R. Gaizauskas.
Annotating Eventsand Temporal Information in Newswire Texts.Proceedings of the Second InternationalConference On Language Resources AndEvaluation (LREC-2000), Athens, Greece, 31May- 2 June 2000.F.
Song and R. Cohen.
Tense Interpretation inthe Context of Narrative.
Proceedings of theNinth National Conference on ArtificalIntelligence (AAAI'91), pp.131-136.
1991.TDT2http://morph.ldc.upenn.edu/Catalog/LDC99T37.html 1999B.
Webber.
Tense as Discourse Anaphor.Computational Linguistics, 14, 2, 1988, pp.61-73.J.
M. Wiebe, T. P. O?Hara, T. Ohrstrom-Sandgren, and K. J. McKeever.
An EmpiricalApproach to Temporal Reference Resolution.Journal of Artificial Intelligence Research, 9,1998, pp.
247-293.G.
Wilson, I. Mani, B. Sundheim, and L. Ferro.Some Conventions for Temporal Annotation ofText.
Technical Note (in preparation).
TheMITRE Corporation, 2000.
