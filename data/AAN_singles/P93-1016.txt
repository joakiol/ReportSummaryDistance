PRINCIPLE-BASED PARSING WITHOUT OVERGENERATION 1Dekang LinDepartment of Computing Science, University of ManitobaWinnipeg, Manitoba, Canada, l~3T 2N2E-mail: lindek@cs.umanitoba.caAbst rac tOvergeneration is the main source of computationalcomplexity in previous principle-based parsers.
Thispaper presents a message passing algorithm forprinciple-based parsing that avoids the overgenera-tion problem.
This algorithm has been implementedin C++ and successfully tested with example sen-tences from (van Riemsdijk and Williams, 1986).1.
In t roduct ionUnlike rule-based grammars that use a large num-ber of rules to describe patterns in a language,Government-Binding (GB) Theory (Chomsky, 1981;Haegeman, 1991; van Riemsdijk and Williams,1986) ezplains these patterns in terms of morefoundmental and universal principles.A key issue in building a principle-based parser ishow to procedurally interpret he principles.
SinceGB principles are constraints over syntactic struc-tures, one way to implement the principles is to1.
generate candidate structures of the sentencethat satisfy X-bar theory and subcategoriza-tion frames of the words in the sentence.2.
filter out structures that violates any one ofthe principles.3.
the remaining structures are accepted as parsetrees of the sentence.This implementation of GB theory is very ineffi-cient, since there are a large number of structuresbeing generated and then filtered out.
The prob-lem of producing too many illicit structures i calledovergenera~ion a d has been recognized as the cul-prit of computational difficulties in principle-basedparsing (Berwick, 1991).
Many methods have beenproposed to alleviate the overgeneration problemby detecting illicit structures as early as possible,such as optimal ordering of principles (Fong, 1991),coroutining (Doff, 1991; Johnson, 1991).\] The author  wishes to thank the anonymous referees fortheir helpful comments and suggestions.
This research wassupported by Natural  Sciences and Engineering ResearchCouncil of Canada grant OGP121338.This paper presents a principle-based parser thatavoids the overgeneration problem by applying prin-ciples to descriptions of the structures, instead ofthe structures themselves.
A structure for the inputsentence is only constructed after its description hasbeen found to satisfy all the principles.
The struc-ture can then be retrieved in time linear to its sizeand is guaranteed to be consistent with the princi-ples.Since the descriptions of structures are constant-sized attribute vectors, checking whether a struc-tural description satisfy a principle takes constantamount of time.
This compares favorably to ap-proaches where constraint satisfaction involves treetraversal.The next section presents a general frameworkfor parsing by message passing.
Section 3 shows howlinguistic notions, such as dominance and govern-ment, can be translated into relationships betweendescriptions of structures.
Section 4 describes in-terpretation of GB principles.
Familiarity with GBtheory is assumed in the presentation.
Section 5sketches an object-oriented implementation of theparser.
Section 6 discusses complexity issues andrelated work.2.
Pars ing  by  Message  Pass ingThe message passing algorithm presented here isan extension to a message passing algorithm forcontext-free grammars (Lin and Goebel, 1993).We encode the grammar, as well as the parser,in a network (Figure 1).
The nodes in the net-works represent syntactic categories.
The links inthe network represent dominance and subsumptionrelationships between the categories:?
There is a dominance link from node A to Bif B can be immediately dominated by A. Thedominance links can be further classified ac-cording to the type of dominance relationship.?
There is a specialization link from A to B if Asubsumes B.The network is also a parser.
The nodes in thenetwork are computing agents.
They communicate112with each other by passing messages in the reversedirection of the links in the network./x!
':" .............. ~ ......... /.
.
.
.
.
.
.
.
.
\ .... t .
.
.
"/\?....
xPSpec B / i VI~.
"d ' ' ' -~  , _~ \ %1 i I i k " \ "  ".. .3.?
F S ~ N ~  \] AUX" Have%e iv( //--' ., : \ $ : ",,,i \ XiASpec .. A'bar %~ D~et "N.............. ~ --" 0 barrier adjunct-dominance specialization link~--~ .
, l l .
l l * .
l l |head ominance specifier~ominance complement-dominanceFigure 1: A Network Representation of GrammarThe messages contains items.
An item is atriplet that describes a structure:<sur face-s t r ing ,  a t t r ibute -va lues ,  sources>,wheresur face-s t r ing  is an integer interval \[i, j\] denotingthe i'th to j ' th  word in the input sentence.a t t r ibute -va lues  specify syntactic features, such ascat,  p lu ,  case ,  of  the root node of the struc-ture described by the item.sources component is the set of items that describethe immediate sub-structures.
Therefore, bytracing the sources of an item, a completestructure can be retrieved.The location of the item in the network deter-mines the syntactic category of the structure.For example, \[NP the ice-cream\] in the sentence"the ice-cream was eaten" is represented by an itemi4 at NP node (see Figure 2):<\[0 ,1 \ ] ,  ( ( ca t  n) -p lu  (nforta norm)-cm +theta), {ix, 23}>An item represents the root node of a structureand contains enough information such that the in-ternal nodes of the structure are irrelevant.The message passing process is initiated by send-ing initial items externally to lexical nodes (e.g., N,P, ..
.).
The initial items represent the words in thesentence.
The attribute values of these items areobtained from the lexicon.In case of lexical ambiguity, each possibility isrepresented by an item.
For example, suppose theinput sentence is "I saw a man," then the word"saw" is represented by the following two items sentto nodes N and V:NP 2 respectively:<\[I,I\], ((cat n) -plu (nform norm)), {}><\[i,I\], ((cat v) (cform fin) -pas(tense past)), {}>When a node receives an item, it attempts tocombine the item with items from other nodes toform new items.
Two items<\[i l jx\], A~, S I> and <\[i2,j~\], A2, $2>can be combined if1.
their surface strings are adjacent to eachother: i2 = jx+l .2. their attr ibute values A1 and As are unifiable.3.
their sources are disjoint: Sx N $2 = @.The result of the combination is a new item:<\[ix~j2\], unify(A1, A2), $113 $2>.The new items represent larger parse trees resultedfrom combining smaller ones.
They are then prop-agated further to other nodes.The principles in GB theory are implementedas a set of constraints that must be satisfied dur-ing the propagation and combination of items.
Theconstraints are attached to nodes and links in thenetwork.
Different nodes and links may have differ-ent constraints.
The items received or created by anode must satisfy the constraints at the node.The constraints attached to the links serve asfilters.
A link only allows items that satisfy its con-straints to pass through.
For example, the link fromV:NP to NP in Figure 1 has a constraint hat anyitem passing through it must be unifiable with (caseacc).
Thus items representing NPs with nominativecase, such as "he", will not be able to pass throughthe link.By default, the attributes of an item percolatewith the item as it is sent across a link.
However,the links in the network may block the percolationof certain attributes.The sentence is successfully parsed if an item isfound at IP or CP node whose surface string is theinput sentence.
A parse tree of the sentence can beretrieved by tracing the sources of the item.An  exampleThe message passing process for analyzing the sen-tence2V:NP denotes verbs taking an NP complement.
Sim-ilarly, V:IP denotes verbs taking a CP complement, N:CPrepresents nouns taking a CP complement.113IP i12 @(~) ~ b a r  ~.
(~i9/ V~ bar i \ [  / ~ i ,?
/ \] NP.
i4.
Aux Have BeNP i4 \Nbar i3Det il N i2The i ce -c ream~IP~ t l Ibar i / \I i6 VP il0i9 Vbar/.18 v,Be i5 V:NP i7was eaten& The message passing process b.
The parse tree retrieved11 :<\ [0 ,0 \ ]  ((cat d)), {}>12 =<\[1,1\]  ((cat n) -plu (nform norm) +theta),{}>13 =<\[1,1\]  ((cat n) -plu (nform norm) +theta),{i2}>14 =<\[0,1\]  ((cat n) -plu (nform norm) -cm +theta), {il, i3}>15 =<\[2,2\]  ((cat i) -plu (per 1 3) (cform fin) +be +ca +govern (tense past)), {}>16 =<\[2,2\]  ((cat i) -plu (per 1 3) (cform fin) +be +ca +govern (tense past)), {i5}>17 =<\[3,3\]  ((cat v) +pas), {}>18 ----<\[3,3\] ((cat v) +pas +nppg -npbarrier (np-atts NNORM)), {i7}>19 =<\[3,3\]  ((cat v) +pas +nppg -npbarrier (rip-arts NNORH)), {is}>110=<\[3,3\] ((cat v) +pas +nppg -npbarrier (rip-arts NNORM)), {i9}>111=<\[2,3\] ((cat ?)
+pas +nppg -npbarrier (np-atts NNORH) (per 1 3) (cform fin)+ca +govern (tense past))),  {i6, ilo}>i12~-<\[0,3\], ((cat i) +pas (per 1 3) (cform fin) +ca +govern (tense past)), {i4, i l l}>Figure 2: Parsing the sentence "The ice-cream was eaten"(1) The ice-cream was eatenis illustrated in Figure 2.a.
In order not to convolutethe figure, we have only shown the items that areinvolved in the parse tree of the sentence and theirpropagation paths.The parsing process is described as follows:1.
The item il is created by looking up the lexi-con for the word "the" and is sent to the nodeDet, which sends a copy of il to NP.2.
The item i2 is sent to N, which propagates it toNbar.
The attr ibute values ofi2 are percolatedto i3.
The source component eli3 is {i2}.
I temi3 is then sent to NP node.3.
When NP receives i3 from Nbar, i3 is com-bined with il from Det to form a new item i4.One of the constraints at NP node is:if (nform norm) then -cm,which means that normal NPs need to be case-marked.
Therefore, i4 acquires -cm.
Item i4 isthen sent to nodes that have links to NP.4.
The word "was" is represented by item i5,which is sent to Ibar via I.5.
The word "eaten" can be either the past par-ticiple or the passive voice of "eat".
The sec-ond possibility is represented by the item i7.The word belongs to the subcategory V:NPwhich takes an NP as the complement.
There-fore, the item i7 is sent to node V:NP.6.
Since i7 has the attribute +pas (passive voice),an np-movement is generated at V:NP.
Themovement is represented by the attributesnppg, npbarr ier ,  and np-atts .
The first twoattributes are used to make sure that themovement is consistent with GB principles.The value of np -a t ts  is an attr ibute vector,which must be unifiable with the antecedentof this np-movement, l~N0aM is a shorthand for(cat n) (nform norm)?7.
When Ibar receives il0, which is propagatedto VP from V:NP, the item is combined with114i6 from I to form i11.8.
When IP receives i11, it is combined with i4from NP to form i12.
Since ill contains an np-movement whose np-at ts  attribute is unifiablewith i4, i4 is identified as the antecedent of np-movement.
The np-movement a tributes in i12are cleared.The sources of i12 are i4 from NP and ill fromIbar.
Therefore, the top-level of parse tree consistsof an NP and Ibar node dominated by IP node.
Thecomplete parse tree (Figure 2.b) is obtained by re-cursively tracing the origins of i4 and ill from NPand Ibar respectively.
The trace after "eaten" is in-dicated by the np-movement attributes of i7, eventhough the tree does not include a node representingthe trace.3.
Mode l ing  L ingu is t i cs  Dev icesGB principles are stated in terms of linguistic con-cepts such as barrier, government and movement,which are relationships between nodes in syntacticstructures.
Since we interpret the principles withdescriptions of the structures, instead of the struc-tures themselves, we must be able to model thesenotions with the descriptions.Dominance  and  m-command:Dominance and m-command are relationships be-tween nodes in syntactic structures.
Since an itemrepresent a node in a syntactic structure, relation-ships between the nodes can be represented by re-lationships between items:dominance:  An item dominates its direct and in-direct sources.
For example, in Figure 2, i4dominates il, i2, and iz.m-command:  The head daughter of an item repre-senting a maximal category m-commands non-head daughters of the item and their sources.Bar r ie rChomsky (1986) proposed the notion of barrier tounify the treatment of government and subjacency.In Chomsky's proposal, barrierhood is a propertyof maximal nodes (nodes representing maximal cat-egories).
However, not every maximal node is a bar-rier.
The barrierhood of a node also depends on itscontext, in terms of L-marking and inheritance.Instead of making barrierhood a property of thenodes in syntactic structures, we define it to be aproperty of links in the grammar network.
Thatis, certain links in the grammar network are clas-sified as barriers.
In Figure 1, barrier links have ablack ink-spot on them.
Barrierhood is a propertyof these links, independent of the context.
This def-inition of barrier is simpler than Chomsky's inceit is context-free.
In our experiments o far, thissimpler definition has been found to be adequate.GovernmentOnce the notion of barrier has been defined, the gov-ernment relationship between two nodes in a struc-ture can be defined as follows:government :  A governs B if A is the minimal gov-ernor that m-commands B via a sequence ofnon-barrier links, where governors are N, V,P, A, and tensed I.Items representing governors are assigned+govern attribute.
This attribute percolates acrosshead dominance links.
If an item has +govern at-tribute, then non-head sources of the item and theirsources are governed by the head of the item if thereare paths between them and the item satisfying theconditions:1. there is no barrier on the path.2.
there is no other item with +govern attributeon the path (minimality condition (Chomsky,1986, p.10)).Movement  :3Movement is a major source of complexity inprinciple-based parsing.
Directly modeling Move-c~would obviously generate a large number of invalidmovements.
Fortunately, movements must also sat-isfy:c -command cond i t ion :  A moved element must c-command its trace (Radford, 1988, p.564),where A c-command B if A does not domi-nate B but the parent of A dominates B.The c-command condition implies that a movementconsists of a sequence of moves in the reverse direc-tion of dominance links, except the last one.
There-fore, we can model a movement with a set of at-tribute values.
If an item contains these attributevalues, it means that there is a movement out of thestructure represented by the item.
For example, inFigure 2.b, item i10 contains movement attributes:nppg, npbarr?er and np-at ts .
This indicates thatthere is an np-movement out of the VP whose rootnode is il0.3We limit the discussion to np-movements and wh-movements whose initial traces are in argument positions.115The movement attributes are generated at theparent node of the initial trace.
For example, V:NPis a node representing normal transitive verbs whichtake an NP as complement.
When V:NP receivesan item representing the passive sense of the wordeaten, V:NP creates another item< \[i,i\] , ((cat v) -npbarrier +nppg(np-atts (cat n))), {}>This item will not be combined with any item fromNP node because the NP complement is assumedto be an np-trace.
The item is then sent to nodesdominating V:NP.
As the item propagates further,the attributes is carried with it, simulating the effectof movement.
The np-movement land at IP nodewhen the IP node combines an item from subjectNP and another item from Ibar with np-movementattributes.
A precondition on the landing is thatthe attributes of the former can be unified with thevalue of np -a t ts  of the latter.
Wh-movements aredealt with by attributes whpg, whbarrier, wh-atts.This treatment of movement requires that theparent node of a initial trace be able to determinethe type of movement.
When a movement is gener-ated, the type of the movement depends on the ca(case assigner) attribute of the item:ca+movement exampleswh active V, P, finite IPnp A, passive V, non-finite IPFor example, when IP node receives an item fromIbar, IP attempts to combine it with another itemfrom subject NP.
If the subject is not found, thenthe IP node generates a movement.
If the itemrepresent a finite clause, then it has attributes +ca(cform f in)  and the movement is of type wh.
Oth-erwise, the movement is of type np.4.
In terpretat ion  o f  P r inc ip lesWe now describe how the principles of GB theoryare implemented.~ -bar  Theory :  ~N~ ?
Every syntactic ategory is a projection of a \] lexical head.
/ ?
There two levels of projection of lexical Iheads.
Only the bar-2 projections can be)complements and adjuncts, j /The first condition requires that every non-lexicalcategory have a head.
This is guaranteed by a con-straint in item combination: one of the sources ofthe two items being combined must be from thehead daughter.The second condition is implemented by thestructure of the grammar network?
The combina-tions of items represent constructions of larger parsetrees from smaller ones.
Since the structure of thegrammar network satisfies the constraint, the parsetrees constructed by item combination also satisfythe X-bar theory.Case  F i l ter :  Every lexical NP must be case-~arked, where A case-marks B iff A is a case as- I~igner and A governs B (Haegeman, 1991, p.156)flThe case filter is implemented as follows:1.
Case assigners (P, active V, tensed I) have +caattribute.
Governors that are not case assign-ers (N, A, passive V) have -ca attribute?2.
Every item at NP node is assigned an at-tribute value -cm, which means that the itemneeds to be case-marked.
The -cm attributethen propagates with the item.
This item issaid to be the origin of the -era attribute.3.
Barrier links do not allow any item with -cmto pass through, because, once the item goesbeyond the barrier, the origin of -cm will notbe governed, let alne case-marked.4.
Since each node has at most one governor, if'the governor is not a case assigner, the nodewill not be case-marked.
Therefore, a case-filter violation is detected if +govern -era -caco-occur in an item.5.
If +govern +ca -cm co-occur in an item, thenthe head daughter of the item governs andcase-marks the origin of -cm.
The case-filtercondition on the origin of -era is met.
The -eraattr ibute is cleared.For example, consider the following sentences:(2) a. I believe John to have left.b.
*It was believed John to have left.c.
I would hope for John to leave?d.
*I would hope John to leave.The word "believe" belongs to a subcategory of verb(V:IP) that takes an IP as the complement.
Sincethere is no barrier between V:IP and the subjectof IP, words like "believe" can govern into the IPcomplement and case-mark its subject (known asexceptional case-marking in literature).
In (2a), the-cm attribute assigned to the item representing \[NPJohn\] percolates to V:IP node without being blockedby any barrier.
Since +govern +ca -cm co-occur inthe item at V:IP node, the case-filter is satisfied(Figure 3.a).
On the other hand, in (25) the pas-116*g ..... V : IP  ~..-pas / ~ ' IPbelieve /~  \NP -crn IbarJohnto have lefta.
Case-filter satisfied at V:IP~ :CP ~ CP .~+govern Cbar hope +ca ~'~/ ~ ;for NP -cm IbarJohnto leavec.
Case-filter satisfied at Cbar, --cm cleared+govern V:IP ~..-cm:;as / /  -,< / IPbe,ieved ~ \NP -era IbalrJohnto have leftb.
Case-filter v io la t ion  at V:IPv :cP~ /hopeNP -cm IbMJohnto leaved.
The attribute --cm is blocked by a barrier.Figure 3: Case Filter Examplessive "believed" is not a case-assigner.
The case-filterviolation is detected at V:IP node (Figure 3.b).The word "hope" takes a CP complement.
Itdoes not govern the subject of CP because there isa barrier between them.
The subject of an infini-tive CP can only be governed by complement "for"(Figure 3.c and 3.d).c r i ter ion :  Every chain must receive and one~ly one 0-role, where a chain consists of an NP Id the traces (if any) coindexed with it (van Iemsdijk and Williams, 1986, p.245).
/We first consider chains consisting of one element.The 0-criterion is implemented as the following con-straints:1.
An item at NP node is assigned +theta  if itsnform attribute is norm.
Otherwise, if the valueof nform is there or i t ,  then the item is as-signed - theta.2.
Lexical nodes assign +theta or - theta  to itemsdepending on whether they are 0-assigners (V,A, P) or not (N, C).3.
Verbs and adjectives also have a sub j - thetaattribute.value O-role* examples+subj - theta yes "take", "sleep"- sub j - theta  no "seem", passive verbs*assigning O-role to subjectThis attribute percolates with the item fromV to IP.
The IP node then check the value oftheta and sub j - theta  to make sure that tileverb assigns a 0-role to the subject if it re-quires one, and vice versa.Figure 4 shows an example of 0-criterion in actionwhen parsing:(3) *It loves Mary-theta lP ~.
+subj-theta-em /~// % +govern caNP IbarIt .
.
.
.
.  "
.....+theta "" V. ~ +theta+govern Iove Nl:*MaryFigure 4: 0-criterion in actionThe subject NP, "it", has attr ibute - theta,  whichis percolated to the IP node.
The verb "love" hasattributes +theta +sub j - theta .
The NP, "Mary",has attribute +theta,  When the items representing"love" and "Mary" are combined.
Their theta  at-tribute are unifiable, thus satisfying the 0-criterion.The +sub j - theta  ttr ibute of "love" percolates withthe item representing "love Mary", which is prop-agated to IP node.
When the item from NP andIbar are combined at IP node, the new item hasboth - theta  and +sub j - theta  ttribute, resulting ina 0-criterion violation.117The above constraints guarantee that chainswith only one element satisfy 0-criterion.
We nowconsider chains with more than one element.
Thebase-position of a wh-movement is case-marked andassigned a 0-role.
The base position of an np-movement is assigned a 0-role, but not case-marked.To ensure that the movement chains satisfy 0-criterion we need only to make sure that the itemsrepresenting the parents of intermediate traces andlanding sites of the movements satisfy these condi-tions:None of +ca,  +theta  and +sub j - theta  ispresent in the items representing the parentof intermediate traces of (wh- and np-) move-ments as well as the landing sites of wh-movements, thus these positions are not case-marked and assigned a O-role.Both +ca and +sub j - theta  are present in theitems representing parents of landing sites ofnp-movements.Sub jacency :  Movement cannot cross more thanJne barrier (Haegeman, 1991, p.494).A wh-movement carries a whbarrier attribute.
Thevalue -whbarr ier means that the movement has notcrossed any barrier and +whbarrier means that themovement has already crossed one barrier.
Barrierlinks allow items with -whbarr ier to pass through,but change the value to +whbarrier.
Items with+whbarrier are blocked by barrier links.
When awh-movement leaves an intermediate trace at a po-sition, the corresponding whbarrier becomes -.The subjacency of np-movements i similarlybandied with a npbar r ie r  attribute.Ermpty Category  P r inc ip le  (ECP) :  A traceJits parent must be properly governed.In literature, proper government is not, as the termsuggests, subsumed by government.
For example,in(4) Who do you think \[cP e' \[IP e came\]\]the tensed I in liP e came\] governs but does notproperly govern the trace e. On the other hand, #properly governs but does not govern e (Haegeman,1901, p.4 6).Here, we define proper government to be a sub-class of government:P roper  government :  A properly governs B iff Agoverns B and A is a 0-role assigner (A do nothave to assign 0-role to B).Therefore, if an item have both +govern and one of+theta or +sub j - theta ,  then the head of the itemproperly governs the non-head source items andtheir sources that are reachable via a sequence ofnon-barrier links.
This definition unifies the notionsof government and proper government.
In (4), e isproperly governed by tensed I, e I is properly gov-erned by "think".This definition won't be able to account fordifference between (4) and (5) (That-Trace Effect,(Haegeman, 1991, p.456)):(5) *Who do you think \[CP e' that \[IP e came\]\]However, That-Trace Effect can be explained by aseparate principle.The proper government of wh-traces are handledby an attr ibute whpg (np-movements are similarlydealt with by an nppg attribute):Value Meaning-whpg the most recent trace has yet tobe properly governed.+~hpg the most recent trace has alreadybeen properly governed.1.
If an item has the attributes -whpg, - theta ,+govern, then the item is an ECP violation,because the governor of the trace is not a 0-role assigner.
If an item has attributes -whpg,+theta ,  +govern,  then the trace is properlygoverned.
The value of whpg is changed to +.2.
Whenever a wh-movement leaves an interme-diate trace, whpg becomes -.3.
Barrier links block items with -~hpg.N:CP-ca CPclaim /CSpec Cbarthat Reagan met eFigure 5: An example of ECP violationFor example, the word claim takes a CP com-plement.
In the sentence:(6) *Whol did you make the claim e~ thatReagan met eithere is a wh-movement out of the complement CPof claim.
When the movement left an intermedi-ate trace at CSpec, the value of whpg became -.When the item with -whpg is combined with the item118representing claim, their unification has attributes(+govern - theta  -whpg), which is an ECP violation.The item is recognized as invalid and discarded.PRO Theorem:  PRO must be ungoverned 1Haegeman, 1991, p.263).When the IP node receives an item from Ibar withcform not being f in, the node makes a copy of theitem and assign +pro and -ppro to the copy andthen send it further without combining it with anyitem from (subject) NP node.
The attribute +prorepresents the hypothesis that the subject of theclause is PRO.
The meaning of -ppro is that thesubject PRO has not yet been protected (from beinggoverned).When an item containing -ppro passes through abarrier link, -ppro becomes +ppro which means thatthe PRO subject has now been protected.
A PRO-theorem violation is detected if +govern and -pproco-occur in an item.5.
Ob jec ted-or iented  Imp lementat ionThe parser has been implemented in C++,  anobject-oriented extension of C. The object-orientedparadigm makes the relationships between nodesand links in the grammar network and their soft-ware counterparts explicit and direct.
Communica-tion via message passing is reflected in the messagepassing metaphor used in object-oriented languages.I \ 1,1  , ,_,,_1 \ \- - - -~"  = (~) I Iinstance of subclass of instance classFigure 6: The class hierarchy for nodesNodes and links are implemented as objects.Figure 6 shows the class hierarchy for nodes.
Theconstraints that implement he principles are dis-tributed over the nodes and links in the network.The implementation of the constraints is modularbecause they are defined in class definitions and allthe instances of the class and its subclasses inheritthese constraints.
The object-oriented paradigm al-lows the subclasses to modify the constraints.The implementation of the parser has beentested with example sentences from Chapters 4-10, 15-18 of (van Riemsdijk and Williams, 1986).The chapters left out are mostly about logical formand Binding Theory, which have not yet been im-plemented in the parser.
The average parsing timefor sentences with 5 to 20 words is below half of asecond on a SPARCstation ELC.6.
D iscuss ion  and  Re la ted  WorkComplex i ty  of  un i f i ca t ionThe attribute vectors used here are similar to thosein unification based grammars/parsers.
An impor-tant difference, however, is that the attr ibute vec-tors used here satisfy the unil closure condition(Barton, Jr. et al, 1987, p.257).
That  is, non-atomic attribute values are vectors that consist onlyof atomic attribute values.
For example:(7) a.
((cat v) +pas +whpg (wh-atts (cat p))b.
* ((cat v) +pas +ghpg (wh-atts (cat v)(np-att (cat n))))(7a) satisfies the unit closure condition, whereas(7b) does not, because wh-atts in (7b) contains anon-atomic attribute np-atts .
(Barton, Jr. et al,1987) argued that the unification of recursive at-tribute structures is a major source of computa-tional complexity.
On the other hand, let a be thenumber of atomic attributes, n be the number ofnon-atomic attributes.
The time it takes to unifytwo attribute vectors is a + na if they satisfy theunit closure condition.
Since both n and a canbe regarded as constants, the unification takes onlyconstant amount of time.
In our current implemen-tation, n = 2, a = 59.A t t r ibute  grammar  in terpretat ionCorrea (1991) proposed an interpretation of GBprinciples based on attr ibute grammars.
An at-tribute grammar consists of a phrase structuregrammar and a set of attribution rules to computethe attribute values of the non-terminal symbols.The attributes are evaluated after a parse tree hasbeen constructed by the phrase structure grammar.The original objective of attribute grammar is toderive the semantics of programs from parse trees.Since programming languages are designed to be un-ambiguous, the attribution rules need to be eval-uated on only one parse tree.
In attr ibute gram-mar interpretation of GB theory, the principles are119encoded in the attribution rules, and the phrasestructure grammar is replaced by X-bar theory andMove-~.
Therefore, a large number of structureswill be constructed and evaluated by the attributionrules, thus leading to a serious overgeneration prob-lem.
For this reason, Correa pointed out that theattribute grammar interpretation should be used asa specification of an implementation, rather than animplementation itself.Actor-based GB parsingAbney and Cole (1986) presented a GB parser thatuses actors (Agha, 1986).
Actors are similar to ob-jects in having internal states and responding tomessages.
In our model, each syntactic categoryis represented by an object.
In (Abney and Cole,1986), each instance of a category is representedby an actor.
The actors build structures by creat-ing other actors and their relationships according to0-assignment, predication, and functional-selection.Other principles are then used to filter out illicitstructures, such as subjacency and case-filter.
Thisgenerate-and-test nature of the algorithm makes itsuscetible to the overgeneration problem.7.
Conc lus ionWe have presented an efficient message passing al-gorithm for principle-based parsing, where* overgeneration is avoided by interpreting prin-ciples in terms of descriptions of structures;* constraint checking involves only a constant-sized attribute vector;?
principles are checked in different orders at dif-ferent places so that stricter principles are ap-plied earlier.We have also proposed simplifications of GB the-ory with regard to harrier and proper government,which have been found to be adequate in our exper-iments so far.Re ferencesAbney, S. and Cole, J.
(1986).
A government-binding parser.
In Proceedings of NELS.Agha, G. A.
(1986).
Actors: a model of concurrentcomputation i  distributed system.
MIT Press,Cambridge, MA.Barton, Jr., G. E., Berwick, R. C., and Ristad, E. S.(1987).
Computational Complexity and NaturalLanguage.
The MIT Press, Cambridge, Mas-sachusetts.Berwick, R. C. (1991).
Principles of principle-basedparsing.
In Berwick, B. C., Abney, S. P., andTenny, C., editors, Principle-Based Parsing:Computation and Psycholinguistics, pages 1-38.
Kluwer Academic Publishers.Chomsky, N. (1981).
Lectures on Governmentand Binding.
Foris Publications, Cinnaminson,USA.Chomsky, N. (1986).
Barriers.
Linguistic InquiryMonographs.
The MIT Press, Cambridge, MA.Correa, N. (1991).
Empty categories, chains, andparsing.
In Berwick, B. C., Abney, S. P., andTenny, C., editors, Principle-Based Parsing:Computation and Psycholinguislics, pages 83-121.
Kluwer Academic Publishers.Dorr, B. J.
(1991).
Principle-based parsing for ma-chine translation.
In Berwick, B. C., Abney,S.
P., and Tenny, C., editors, Principle-BasedParsing: Computation and Psycholinguistics,pages 153-184.
Kluwer Academic Publishers.Fong, S. (1991).
The computational implementationof principle-based parsers.
In Berwick, B. C.,Abney, S. P., and Tenny, C., editors, Principle-Based Parsing: Computation and Psycholin-guistics, pages 65-82.
Kluwer Academic Pub-lishers.Haegeman, L. (1991).
Introduction to Governmentand Binding Theory.
Basil Blackwell Ltd.Johnson, M. (1991).
Deductive parsing: The useof knowledge of language.
In Berwick, B. C.,Abney, S. P., and Tenny, C., editors, Principle-Based Parsing: Computation and Psycholin-guistics, pages 39-64.
Kluwer Academic Pub-lishers.Lin, D. and Goebel, I%.
(1993).
Contex-free gram-mar parsing by message passing.
In Proceedingsof PACLING-93, Vancouver, BC.Radford, A.
(1988).
Transformational Grammar.Cambridge Textbooks in Linguistics.
Cam-bridge University Press, Cambridge, England.van Riemsdijk, H. and Williams, E. (1986).
Intro-duction to the Theory of Grammar.
CurrentStudies in Linguistics.
The MIT Press, Cam-bridge, Massachusetts.1 20
