COLING 82, J.
Horeck?)
fed.
)North.Holland Publishing Company(~ Arademia.
1982KNOWLEDGE REPRESENTATIONAND MACHINE TP~ANSLATIONSusumu Sawai, Hiromichi Fukushima,Masakatsu Sugimoto and Naoya UkaiDevelopment Division, Computer SystemsFujitsu LimitedNakahara-ku, KawasakiJapanThis paper describes a new knowledge representation called"frame knowledge representation-O" (FKR-O), and an experi-mental machine translat ion system named ATLAS/I which usesFKR-O.The purpose of FKR-O is to stored information required formachine translat ion processing as f lex ib ly  as possible, andto make the translat ion system as expandable as possible.I .
INTRODUCTIONPreliminary research on machine translat ion (MT) started soon af ter  computersbecame avai lable.MT research was prevalent in the USA during the ear ly  1960s.
However, the con-clusions of the ALPAC report published in 1966 opposed funding for  MT researchand resulted in I)  the general discontinuance of MT research in the USA .The e f fo r t  is more concerted in countries where MT systems are more necessary thanin the USA.
For example, the use of both French and English in Canada and themult i l ingual  use of formal documents in the EEC present pressing demands forpractical MT systems.The SYSTRAN system (produced by Latsec Incorporated) has been applied in thefol lowing areas:I )  Private companies in Canada use i t  for translat ing engineering documents fromEnglish into French.2) NASA used i t  to communicate with the crews of the Apollo and Soyuz spaceships,t ranslat ing between Russian and English.3) The EEC uses i t  for  examining the feas ib i l i ty  of other MT systems 2).Other systems current ly being used include the METEO system which translatesEnglish weather reports into French in Canada, and the WEIDNER and LOGOS systemsproduced by pr ivate firms in the USA.
Recently, there has been a revival  ofinterest  in MT systems in the USA, part ly  because of s ign i f i cant  advances beingmade in a r t i f i c ia l  inte l l igence (AI) research.The future development of MT systems is ensured by the tota l  integrat ion of high-performance computers, new man-machine interface designs, new software methodolo-3) gies, and progress in knowledge engineering .The language barr ier  in Japan in far greater than in the EEC or Canada, becauseJapanese is an isolated language.
There is a large demand for document t rans lat ionin Japan.The f i f th  generation system project in Japan aims to bui ld the ar t i f i c ia l  in te l l i -gence machine that w i l l  process natural languages.
This machine w i l l  performlanguage t rans lat ion at least 90% of i t  automatical ly,  such that the cost of atranslat ion job could be reduced by 70%.351352 S. SAWAI et al2.
PROBLEMS AND SOLUTION2.1 Methodological problems in a machine translat ion systemBasical ly,  a machine translat ion system consists of three components: a d ic t io -nary ( lexicon) ,  grammar ( t rans lat ion rules) ,  and the translat ion program (algo-r ithm).The major methodological problem in machine translat ion systems is how to separatethe translat ion program from the grammatical rules.
The advantage of this sepa-rat ion is that the program can be used for various languages and grammars withoutmodif ication; that is ,  i t  is language-independent.
However, there are practicalproblems in separating the grammar from the program, including d i f f i cu l t ies  informulating complex rules for l ingu is t i c  data and avoiding large storage require-ments or heavy computation loads4).2.2 Solution by knowledge representation methodologyAr t i f i c ia l  in te l l igence research on natural languages and knowledge representationprogressed rapidly during the 1970s.
In AI, "knowledge representation" is acombination of data structures and interpret ive  procedures that leads to "know-ledgeable" behavior.
A new type of machine translat ion system conceived byDrs.
Y. Wilks and R. Schank appeared in the early 1970s.
This type of systemtranslates input text  into the knowledge representation of semantic pr imit ivesintended to be language-independentl).At present, the major knowledge representation techniques are predicate logic ,procedural representations, semantic networks, production systems (PS), andframes.
In procedural representations, knowledge is contained in procedures(programs).
The basic idea of production systems is a database consisting ofrules, cal led production rules, in the form of condit ion-act ion pairs.
A frameis a predefined internal re lat ion.This paper proposes an e f f i c ient  knowledge representation method using frame.techniques to solve the above-described problems in machine translat ion systems.3, FKR-OFigure 1 shows the framework of frame knowledge re-presentation-O (FKR-O)5).In the FKR-O knowledge representation method, a pro-duction system is combined with a procedual repre-sentation and is systematized into a state t rans i t ionnetwork.
Rule representation frames and controlframes are provided for the ef f ic iency of systemoperation.3.1 Rule representation frameFigure 2 shows Jackendoff's semantic representationof verbs.
Because Jackendoff is a l ingu is t ,  he didnot propose any machine t rans lat ion system, but hissemantic representation provides a good frame workwith a clear indicat ion of the re lat ionship betweenthe actor and the action.
I t  indicates that theverb "OPEN" can take two noun phrases; that thesubject can be ei ther  of two noun phrases, NP ( I )or NP (3); and that NP (2) is an instrument,"INST"7).
(1) Node of statetransit ion network(2) Production System(3) ProceduralrepresentationFig.
1Framework of knowledgerepresentation FKR-O.I CAUSE(NP(I ),~0 posit S~antics(NP(3}),y,OPEN)) I~T: NP(2)Fig.
2Jackendoff's semanticrepresentationKNOWLEDGE REPRESENTATION AND MACHINE TRANSLATION 353Figure 3 is an example of therule representation frameused in FKR-O for the Japaneseverb " ~ "  (to specify).The frame shows:l) the verb name, which isthe name of a node inthe state transitionnetwork;2) the relationship betweenthe verb and one ormore noun phrases;3) the conditional processto be performed afterthe rules are applied.Rule representation frame- -  Verb; ~ &Rule NH NB NCNo,l (A) (0) (I)Rule NH !NCNO.2 (A) ( I )A (Actor)D (Object)I (Instrument)RuleControl representationframe frameLJ , LJ~ RuleVA , , \~ ,~ / \ " FeraPreeSentationVA co?t~ol \ m_\]parameter \ .'
~ Rul~representationframek_JFig.
3Communication of framesThis conditional process includes the judgement of the conditions required forcalling other frames.Current FKR-O specifications do not have the "cause" concept included inJackendoff's semantic representation, however, procedural representation isplanned for future FKR-O editions.3.2 Control frameThe FKR-O system has control frames which supervise the rule representation framesdiscussed in Sec.
3.1.
Each pair  of adjacent frames communicates by a controlparameter as shown in Fig.3.The roles of the control frame are to resolve one rule frame into several subruleframes and to control the ca l l ing  sequence of these frames.
This is one solut ionwhich overcomes the disadvantages inherent in production system (PS) methodology;i .e .
ineff icency of program execution and opaqueness of the control flow.
A con-t ro l  frame addresses the rule frame by means of the contents of the control para-meter.
I f  the next frame is not speci f ied,  control returns to the top- level  con-t ro l  frame cal led the "control nucleus".3.3 Grammatical rulesATLAS/I is an experimental machine translation system in which grammatical rulesare specified in FKR-O representation.
ATLAS/I corrently has several controlframes and the several types of rule representation frames.
These are examples:l) Noun frameExample: ( (STATE (NOUN ) ?
STATE (CONTROLI)) )(R (COND (NH X4 ) ND) (PARM (0 Wl ) ) )A noun phrase "H4" is formed by combining a noun denoting a human being "NH"( ~ ) and postposition "X4" (~) .
The function "PARM" is the mappingfunction from graph to graph which can be used by the analysis, translation,and synthesis processes.2) Verb frameExample: ((STATE (OPEN ) ?
STATE (CONTROL5)) DEMON)(R (COND (H4 C7 VO) A') (PARM (I '  VO W@I@2@3)))DEMON:PROC; /*ACTOR AND INST ARE SLOTS.
*TACTOR=WORD(2);/*A WORD(*) IS THE CONTENTS.
*/INST=WORD(3); /*OF THE STACKS.
*/END;354 S. SAWAI et alThe surface case structure "H4 + C7 + VO" is changed to a deep case structure"A' + I' + VO".
DEMON is a procedure.
A noun phrase "C7" is a combinationof the concrete noun "NC" (~#) ,  and postposition "X7" (~) .
I f  the surfacecase structure is "H4 + C7 + VO", a verb "VO" (open) has an agent case "A'"and an instrument case " I ' " .
A variable "WORD" designates a slot in thestack.
Figure 4 shows the structure of the grammatical rules.
(OPEN) - Ve~(n) f r~Input-patte~ Output-pattern (Action)(PrOduction rules)Oescriptlon of sequence of attr ibuteZ ( " " " ) ( I  " " ) (  " " " } ( "  " " ) '~  " " " " ) (  m " " ) (  " " " ) : (Ac t ion  x )3 ( " ' ) ( ' " ) ( " ' )  ' " ) ( " ' ) ( " ' ) ( ' " ) : (Act ion  3)D~ION ~ Procedural representation of  OPEN: !
i !Rule rep~s~tation fraysFig.
4Inp.t OutputWord(CO~ffROL 5) Input tape ~ Output tapeI _ _ J  - r  ... .
.
.
.
.
.
.
.
.
.
.
.?
tControl fraysStructure of the grammartical rules3.4 Model of ATLAS/IFigure 5 is a simplified model of ATLAS/I whichincludes an input tape, an output tape, a stack,a control section, a dictionary, a register,and grammatical rules (rule representationframes and control frames).
When scanning aninput tape, the stack is used as a table fortemporary storage; at reduction, i t  is usedas a table with attributes and equivalents.The dictionary is a table with words, a t t r i -butes, and equivalents and is used as a tablefor lexical rules.
The word "~EB", forI 1 Pr~uct lon rules + P~cedu~Rule ~presentatlon frays Cont~l frame.
.
.
.
.
.
.
.
.
.
.
.
.
.
Gram~t Ical Ru)es .
.
.
.
.
.
.
.
.
.
.
.
.
.Notes: W ~an$ a ~rd ,  A means an attr ibute,  and E ~ansan equivalent.F ig .
5Model of  ATLAS/Iexample, is stored as (p~,  noun, Taro) in the dictionaries.
The characterstrings "2~EB~ ~P)~o-" ,  for example, are stored in the input tape.
The con-trol parameter is set in the register.3.5 In i t ia l  state of ATLAS/I Model"NOUN" is set in the register as an in i t ia l  value.
Grammatical rules have pre-defined values.
The input head points to the lef t  most position of the input tape.The output tape is blank.
The output head points to the leftmost position of theoutput tape.
The in i t ia l  value of the slots in the stack is (#X, ?
), meaning thetop of the sentence and null string (?
).3.6 Flow of ATLAS/I Model3.6.1 Phase A: sentence processingIn phase A, one sentence of a text is translated.l)  State (1): scanThe words in the input tape are scanned by the input head and the dictionaryis accessed to determine the attributes and equivalents.
When found, theseattributes and equivalents are stored in the stack, and then the input headKNOWLEDGE REPRESENTATION AND MACHINE TRANSLATION 3552)advances one word to the right.
When the input tape is scanned, the stack isused as a table by the control section.The control section scans the words of the input tape.
If  a period "."
isencountered, i t  stops scanning and stores (X#, @) in the stack.The rule representation frame that is pointed to by the control parameter isreferenced, and the control causes a translation from state (1) to state (2).State (2): reduction and code generationThe control section checks i f  the slots in the stack are (#X, @), (SS, acharacter string), and (X#, ~).
I f  so, there is a transition from state (2)to state (4); i f  not, the control section checks whether the attributes in thestack match those in the input pattern of the production rule (P).
I f  not,the control causes a transition to the state specified by the rule repre-sentation frame.3)4)I f  matched rule (P) does not exist and i f  the rule representation frame doesnot specify the new state, there is a transition to the default state speci-fied by the top-level control frame called the "control nucleus".
I f  matchedrule (P) exists, the equivalents (SE) in the stack whose attributes (SA)match the attributes of the rule (P) input pattern are used as parameters ofthe rule (P) action function.
Figure 8 is a general diagram of the organi-zation of the grammar.
The input and output patterns are organized accord-ing to the sequence of attributes.
The action function of rule (P) pops theequivalents (SE) and attributes (SA) from the stack, and pushs the attributesof the rule (P) output pattern and the'character strings created by thisaction function as the new slots (SA', SE'), whose number equals that of therule (P) output pattern.
The control returns ~o state (2).State (3): Frame transitionThe control checks the control frame, determines the name of the next rulerepresentation frame, and stores this name in the register.
After selectionof this rule representation frame control passes to state (2).Remark: The control frame determines the termination of phase A.
At termina-tion, the control causes a transition to phase B.State (4): acceptControl pops the character string of the slot (SS, a character string) fromthe stack and writes this string into the output tape.3.6.2 Phase B: text processingThe text is translated in phase B.
Control continues phase (A) until the inputhead arrives at the rightmost position of the input tape.All text translation processes end when the input head arrives at the right-mostposition of the input tape.4.
ATLAS/I MACHINE TRANSLATION SYSTEMATLAS/I is currently used in the limited application of translating software-related reports from Japanese into English.
The number of sentence translationpatterns is gradually increasing through the addition of grammatical rules andvocabulary.3S6 S. SAWAI ?t al.4.1 Japanese to English machine translationMachine translation involves three stages: );~X)~)o,input of the original Japanese text, trans- ,~t ....lation, and postediting of the translatedEnglish text (see Fig.
6).~rpho) icat Syntax %, English sentence i analysis~kCase analysis ~.
j /  iFig.
6Flow of ATLAS/IATLAS/I currently integrates three processes: analysis of an original Japanesesentence, structural translation from Japanese into English, and synthesis ofthe English sentence.
The "case" of nou n phrases, which is the relation of nounphrases to verbs, is checked while the syntax is analyzed.
This case analysis isperformed with reference to the production rules.
When the matching rule is found,case and syntactic synthesis of the English are performed, and the synthesizedEnglish sentence is printed.
These production rules are defined in FKR-O.The machine translation processes achieved through the use of FKR-O are delincatedin Fig.6 by dotted lines.5.
CONCLUSIONThe major methodological problem in a machine translation system is how to separatethe translation program from the grammatical rules.
In ATLAS/I, grammatical rulesare stored in the new form of knowledge representation called FKR-O.
In FKR-O, aproduction system is combined with a procedural representation and systematizedinto a state transition network.
Rule representation frames and control framesare provided for eff ic ient system operation.ATLAS/I is currently operational with about 5000 words and 400 grammatical rulesfor translating software-related reports from Japanese into English.FKR-O allows the system to gradually increase the number of sentence patterns, andthis expansion is currently underway in the ATLAS/I system.6.
ACKNOWLEDGEMENTThe authors wish to express their sincere gratitude to al l  those who qave con-tinued and valuable guidance in the f ield of machine translation, including, inparticular, Mr. Sato, Manager of Development Division.REFERENCESI l l  Barr, A. and Feigenbaum, E.A.
: The Handbook of Artificial Intelligence Vo1.
l(William Kaufmann, Inc., Los Altos, California, 1981) 231-238.\[2\] Hutchins, W.J.
: Progress in Documentation-Machine Translation and Machine-Aided Translation, Journal of Documentation, 34, 2 (Jun.
1978)\[3\] Nagao, M.: Machine Translation (In Japanese), Journal of Information Process-ing, Vol.
20, No.
10 (Oct. \]979) 896-902\[4\] Bruderer, H.E.
: Handbook of Machine Translation and Machine-aided Translation(North-Holland, Amsterdam, 1977)\[5\] Sawai, S., Sugimoto, M. and Ukai, N.: Knowledge Representation and MachineTranslation, FUJITSU Sci.
Tech.
J., 18, l (Mar.
1982) I17-134\[8\] Jackendoff.
R.: Toward an Explanatory Semantic Representation, Ling.
Inq., 7(1976) 89-150.
