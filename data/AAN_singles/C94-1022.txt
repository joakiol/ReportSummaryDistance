Morpho logy  w i th  a Nu l l - In ter faceHara ld  Tros t  and Johannes  Mat iasekAustr ian Research Institute for ArtificiM Intelligence.
*Scllottengasse 3, A-IOIO Vienna, Austr ia{hara ld ,  john} 0a i .
un iv ie ,  ac.
atAbstractWe present an integrated architecture forword-level and sentence-level processing in aunification-based paradigm.
The core of the sys-tem is a CLP implementation of a nnilication en-gine for feature structures uplmrting relationalvalues.
In this framework an IiPSC,-style granl-mar is implemented.
Word-level processing usesX2MoltF,  a morphological component I)ased onan extended version of two-level morphology.
Thiscomponent is tightly integrated with the grammaras a relation.
The advantage of this apl)roach isthat morphology and syntax are kept logically au-tonomous while at the same time minimizing in-terface problems.1 Int roduct ionOver the last few years there has 1)eeu a growinginterest in computational morphology and phonol-ogy.
A number of systems have been developedthat deal with word-level processing.
A widelyused approach is finite-state morphology, most no-tably two-level morphology (for an introduction,see Sproat 92).
Morphological components aresueeessflflly used for a wide range of stand-aloneapplications like sl)elling correction aM hyphen-ation.
One obvious application is the use in NI,Psystems geared to the analysis/generation f text.Surprisingly, they have not been widely al)l)lied inthis domain up to now.A major reason for this is the llrolllem ofinterfacing morphology with syntax.
Reflectingtile current trend in syntax towards lexicalism,unification-1)ased systems use highly structuredfeature structures as inI)ut.
Translating tile out-put of morphologieM components into such it rel)-resentation has proved to be diiticult.
Reducinginterface problems is therefore crucial to success.
*Financial support for the Austrian Research Institutefor Artificial Intelligence is provkled by the Austrian Min-istry o\] Science and Research.
We wouhl like to thankWolfgang lleinz for vMuable comments and suggestimlsA tight integration between word and sen-tence level processing also has linguistic advan-tages.
The boundary between morphology andsyntax is fuzzy.
When processing written text theunits nmrl>hology has to deal with are, ill it tech-nicM sense, not words Mt character strings sepa-rated by delimiters.
While these strings roughlycorrespond to the words of a sentence there areproblematic ases.
In German, e.g., zu-infinitiveor w'rbs with separMfie prefixes ;Lre written as asingle unit in some instances and separately illothers.The prol)lem has boon recognized and seinepossihle remedies have been prol)osed.
They alltry to minimize or to elhninMe the intel'r:tce be-tweell word and sontoiic(: low4 processing.
Onestop is the descriptiml of word fl)rmation ill termsof a unification-based gl'all/lnai' to make the result(~1' morphological l)rocessing dir(,ctly ~wMhd)le tosyntax and vice w~rsa, an :g)l)roa(-h ah'eady ti~kenin X2Moltl,' (Trost 90, '\['rost 91), an extension oftwo-hwel nmrphohlgy.The harder probhml is the integration of mor-phol)honology which is traditionally formalized init way not easily t,':mshmdlle into the fei~ture for-malisnx.
We will show how this can he achievedby merging the word-level grammar of X2MolI.I,'into an lll'S(;-styl0 gralnnla.r, alld by adopting arelational view of its two-level rules.1l, this llal)or we ass / l i l l e  basic flmfilhu'ity withunification-ha.seal N I,P techniques and two-low~llnorphology.2 Integrat ing Morpho logy  intoI IPSGllead-driwm Phrase Smwture Grammar (IIPSG,Polhu'd ,~ S;tg 87, l'ollard &.
Sag in press) canbe viewed as a mono-level Mt  multi-stratal the-ory Of gl'anlnlitl', where different strat it  relate todifferent aspects (d" linguistic informlttion, but areropresonted uniformly in feature logics.
As suchit is well suited as a linguistic theory for our en-141terprise.ItPSG differentiates between three strata---PIION, SYNSEM and DTItS.
Though morphology isnot considered in the standard approach, it sug-gests itself to be included as a fourth stratum byintroducing a feature MORPH into the type sign.Morphotactics are easily described in terms of afeature based grammar.
The problem is how todeal with morphophonology.
Two proposals havebeen made to overcome this problem.Krieger et al 93 encode finite state automatadirectly in the feature formalism.
Since two-levelrules can be compiled into such automata, roofphophonology can be straightforwardly integrate<linto the grammar.
While this is formally elegant itseems to be no good solution for practical consid-erations.
First, it is not entirely clear frmn theirpaper how the problem of null characters can behandled.
Second, encoding large automata willresult in a very large and unwieldy type hierar-chy.
In general, introducing automata into fea-ture structures and encoding morphophonologydirectly at that level seems to be too low-level.Bird & Klein 93 argue against the use oftwo-level morphology because of linguistic con-siderations.
The linguistic background of two-level rules--main stream segmental phonology--has widely been rejected as a valid linguisticmodel.
Instead, they base their implementationon autosegmental phonology (of.
Goldsmith 90).This is certainly linguistically appealing.
Butthere are reasons for sticking to a more conser-vative approach.
Finite-state morphology as aformalism is not necessarily tied to segmentalphonology.
There are various approaches to copewith non-concatenative phenomena--one of tlmmX2MoltF (Trost 90).
Also, for a nmnber of lan-guages complete sets of two-level rules do existand can immediately be brought to bear.
Finally,finite-state morphology has proven to be eflicientwhile the method proposed by Bird ~: Klein 93seems to be computationally costly.Like the other apl>roaches ours is also based onIIPSG.
Itowever, we employ a different approachto integration.
Our grammar is encoded using aunification engine based on constraint logic pro-gramming (CLP).
Besides conventional ttril)ute-value descriptions this system allows for the directrepresentation of more general relations, as theyare required by IIPSG.
This extension of the for-malism is used for the integration of morl>hology.Thus X2MoI~F is treated as one special relationof tile grammar.
As a result, our approach is moremodular than the others.
While being fully inte-grated morphology can still be viewed as an au-tonomous component leading to a more llexibledesign.We will now give an overview of X2Mol IF he-fore describing the integrated system and its im-plementation i  detail.Word Level ProcessingX2MoRFX2MoRF differs fi'mn standard two-level mor-l>hology hi two hnportant respects.
Continua-tion classes are replaced by a feature-based wordgrammar.
This allows for a more line-graineddescription of morphs.
It is also a prerequisitefor a tight integration with a unification-basedgrammar.
X2MoRF uses a morph lexicon whereeach morl>h has one or more feature structuresassigned.
The word grammar itself is shnple.Morphs have a functor-argument structure alongthe lines of di Sciullo ,~: Williams 87.
Affixes areunary functors while stems are arguments with-out ally further structure, resulting in a hinarytree structure.Tile othe,' extension concerns the two-levelrules, which are supplemented with a morpholog-ical filter consisti,g of a feature structure.
This ishnportant because in morl~hol>honology nly somerules are purely l)honologically nmtivated.
Oth-ers are triggered by a mixture of phonologicM andmorphological facts.
Such rules cannot be prop-erly represented in tile standard al>proach.TAD,, e.g., umlaut an<l schwa epenthesis in(lerman: The third I>erson singular present ensesuffix for (;er,nan w~rbs is 4, e.g., sag-t --+ sagt.For stems ending in a dental, schwa is insertedbefi)re the ending, e.g., bad-t - ,  badct.
This ruledoes not hold across the whole vocabulary though.Stems of the stroTIg paradignl <1o exhibit umlautin 3,'dPersSgPres which blocks schwa epenthesis.The /inal dental of tile stem must be omitted in-stead, e.g., rat-t --+ riil.The th,'ee miles I shown in Fig.
l I togetherwith the a.pl)ropriate ntries in the morl>h lexicon(el.
Fig.
7 below)--produce the re<luired behav-ior.
In particular, these rules relate surface Nit tolexical $rAt?t$ 2.
X2Mold  '~ can be seen as a re-*These rules as well as other data presented in the e?
:amples are simplified for the purl)ose of denmnstration2The lexical character A may have the surface realiza-742(i) A:(L ~ _ j' \[MORPIIIMIII':AI)IUMLAIIT aolt-lt111la*tl\](ii) t:O ?=::V _ 4 .
:0  t(iii) + :e ?=e,.
denta l  _ +:0  \[s It\] ; \[MORPHIMtII.;ADIEPl.;NTIIESI.
; -\[-\]Figure \[: Three extended two-level Ruleslation between a surface string (the word i~orm), alexical string, and a feature structure (tim inter-pretation of the word form).
Relevant for sentencelevel processing is the morl)hosyntactic informa-tion and the stem, found as the values of pathsMOltPlI \[MIIEAI) and MOR, Pll \[STEM resl)ectively (of.Fig.
9 below).
This is supplemented by lexemespecific information in the value of SYNSF:M (for adetailed description see Trost 93).4 Imp lement ing  HPSG in a CLPFrameworkI IPSG employs strongly typed feature structurestogether with principles constraining them fur-ther.
Well-typcdness requirements restrict thespace of valid feature structures (cf.
Carl)enter92): Every feature structure must I)e associatedwith a type, and every type restricts its associ-ated feature structure in that only certain featuresare allowed and the values of these features mustbe of a certain type.
Appropriateness and valuerestrictions are inherited along the type hierarchy.The second source of constraints, in order toadmit only linguistically valid feature structures,are the principles of grammar.
Pollard ,~ Sag 87allow general implicative and negative constraintsin the form of conditional feature structures.
InPollard h Sag in press principles are given only inverbal form.
Recent work on formalizing the basisof I IPSG models them as constraints attached totypes (e.g., Carpenter et al 91).
Iiowever, thesedistinctions affect only how the applicability ofa principle is specified.
More iml)ortant for ourpresent purpose is the form which the constraintsexpressed by a principle may take.
Besides con-straints enforcing simple structure sharing (e.g.,the Head Featnre Principle given in Fig.2) thereare also complex relational dependencies (e.g., inthe Subcategorization Principlea).
Constraintstions a and d. The rule ha.s an empty phonological contextbut a morphological fi ter.
This is an example for the treat-meat of non-concatenative phenomena in X2MonF.3,in a headed phrase (i.e., a phrmsal sign whose DTRSvalue is of sort head-struc), the suncAT value of the headlike these go beyond the exl)ressivity of l)ure Da-ture formalisms alone and need to be defined in arecursive manner.In order to integrate such complex constraintsin the feature unification framework we interpretunitication of typed feature structures under therestrictions of princil)led constra.ints as constraintsolving in the CLI' paradigm (Jafl'ar ,~ Lassez g7).In CI,P the notion of unification is replacedby the more general notion of constraint solving.Constraint solvers may be embedded into a logicl)rogramufing language ither by writing a nteta-itlterl)reter or by urn.king use of a system whichallows \[or the impletn(mtation el+ unification ON-tollS\]OilS.The s~,cond approacls is taken by I)MCAI(:l,l)4 (l\[olzbaur 92), it l)rolog system whose uni-tication mechanlsnl is extended in such a waythat the user may introduce interl)reted termsand specify their meaning with regard to uni\[ica-tion through l'rolog predicates.
The basic mech-anism to a chiow, this behavior is the use of at-tributed variables, which may l)e qualified by ar-1)itrary user-defined attr ibutes.
Attr ibuted vari-ables behave like ordinary l)rolog variables withtwo notal)le exceptions: when an attr ibuted vari-able is to be unified with a non-wu'iable term oranother attril)uted variable the unifi('.atk)n exten-sions come into play.
For either case the userhas to supply a predicate which explicitly specifieshow the attril)utes interact and how they should1)e interpreted with respect to the semantics ofthe al)l)lication domain.
Unilication succeeds onlyif these constraint solving clauses managing thecond)inati,m -el' vm'ification--af the involved at-tril)utes are successfid.The iml)hm~entati(m of typed feature struc-tures in our system makes use of the CLP facilitiesprovided by this enhanced Prolog system.
Fea-ture structures are imlflemented by the attri l)utedaughter is the concatenation of the phrase's SUBCAT llstwith tile list (in order of incre~Lslng obliqueness) ofSYNSEMvalues of the COml)hmlent daughters.
"(Pollard & .gag inI)ress)4 I)MC, AI CLP is au enhanced version of SICStus Prolog,awdlahle by anonymous ftp from f tp.
ai .univie, ac.
at143:fs (Type, Dag, Goals), where Dag is a list of feature-value pairs (which is empty in case of atomictypes) or a marker indicating uninstantiatednessof the substructure (feature structures are instan-tiated lazily).
Goals is a list of delayed constraints(see below).
Well-typed unification of two featurestructures is implemented via the constraint solv-ing clauses mentioned above, taking into accounttype hierarchy and feature appropriateness (for adetailed description cf.
Matiasek & Ileinz 93).Constraints imposed onto feature structuresby the principles of grammar are stated in a con-ditional form where the antecedent is restricted tocontain only typing requirements.
5 In order to ac-count for these conditional constraints we adopt alicensing view: Every node of a feature structurehas to be licensed by all principles of grammar.A node is l icensed by a principle if either (i)the feature structure F rooted in that node sat-isfies the applicability conditions of the l)rincipleand the constraints expressed by the l)rinciple suc-cessfully unify with F, or (ii) the feature structureF rooted in that node is incompatible with theapplicability conditions of the principle.
The in-teresting case arises when a feature structure doesnot satisfy the applicability conditions of the l)rin-ciple but is compatible with them.
Thus applica-bility of tile principle can be decided only later, af-ter further instantiation or unification steps haverestricted the (sub)structure rooted at that node.In precisely this case the application (or the al)an-doning) of the constraint has to be delayed.
Thedelay mechanism utilizes tim Goals slot in thef s /3  6 attribute, which is dedicated to hold thedelayed constraints.
As an example take the wellknown Ilead Feature Principle of IIPSG (Fig.2) r.The conditional operator ===> is translated atread time via terra_expansion/2 and implementsthe delay mechanism by coml)iling l>recon<litionchecks into the principle.
These antecedent checkstrigger either the application of the princiltle, itsabandomnent, or its delay (by annotating the vari-ables wlfich are not sufficiently constrained to de-cide on the antecedent with the delayed goals).Two advantages of this approach to implementSThis is only a syntactic variant of attaching constraintssolely to types (Carpenter et al 91) and does not permitgeneral conditional structnres ms used in Pollard & Sag 87.6pred/n is the usual notation for a n-ary Prologpredicate.VThe operators ::,,, : :, :, === are defined for typingof a node, path restriction, path concatenation aim valuerestriction (type or coreference) respectively.A VM:\[SYNSEMILOCICATII'E D \[\] headed- LD'I'ItS\[I \[I';AD-DTIII SYNSEMILO<':ICATII1EAI) \[~\]phraseProloq:head_feature_pr incip le(X)  :-X: :=headed_phrase===>X::synsem:loc:cat:head===H,X::dtrs:head_dtr:synsem:loc:cat:head===H.Figure 2: Head Feature Princil)leprincipled constraints are especially important forour present purpose: First, stating redundanttyping re<luirements for embedded structures (i.e.type restrictions that would follow automaticallyfrom well-typing) forces delay of the conditionalconstraint until these sul)structures are instanti-ated.
This device can, e.g., be used to block in:finite recursion in recursively detlned constraints.Second, the right hand part of the conditional isnot restricted to feature logical expressions, butinstead can contain arbitrary Prolog goals.
Inthis way constraints involving relational depen-dencies (such as the Subcategorization Principleand the morl>hological relation between a lexicaland a surface string) can be expressed within thefeature fornmlism and there is no need for externaldevices controllh~g this interaction.
Furthermore,the conditional constraint syntax is not restrictedto unary licensing principles but can also be usedto express relations, such as *s_append/3--neededfor implementing the Subcat l~rinciple--which ap-l>ends two feature structure lists (Fig.
3).
Notefs_append(X,Y,Z) :-fs_empty appond(X,Y,Z),fs nonempty append(X,Y,Z).fs_empty append(X,Y,Z) :-X::=elist===> Y = Z.fs_nonempty_append(X,Y,Z)  :-X::=nel ist===> X::f irst===F, Z::f irst===F,X::rest===XRest,  Z: :rest===ZRest,fs_append(XRest,Y,ZRest) .Figure 3: A1)pend for feature structure liststhat disjunctiw~ relations such as append call nowl)e written as tile conjunction of two specializedcases applying conditionally.
Furthermore, in-144Inp u l <=> t:O <=> \['+':0, t:t\].morphru le ( \ [ l lG ,43 ,116 ILS \ ] , \ [Sc ,dS ,1161SS0\ ] ,SS ,LCon,SCon,F )  :~!, Sc=48,morpho logy( \ [43 ,116 I I ,S \ ] , \ [48 ,1161SS0\ ] ,SS , \ [ l16 ILCon\ ] , \ [H ISCon\ ] ,F ) .CompiledFigure 4: Sample Two-l,evel R. lemorphology (LexStream, SurfStream0, SurfPlainln, LexContext, SurfCont ext ,  F) : -instant iate(LexStream,SurfStroam0,SurfP la in ln,SurfP la inOut ,F) ,morphrul  e (LexStr earn, Surf Sir earn, Surf Pla inOut, LexCont ext, Surf Cont ext, F ).instantiate(\[LCILCs\]  , \[SCISCs\] ,SurfPlainIn,SurfPlainOut,F) :-val id alphabet_pair  (LC, SC\],synchronize ( \[SC I SCs\] , S1trf PlainIn, S~irf Plain0ut ),lookahead (LC, LCs, SCs, Surf PlainOut ) .~ynchron ize( \ [481_ \ ] ,S t ream,St ream)  :~- !.synchronize( \[Char I_\] , \[Char I Stream\] , Stream) .Figure 5: The morphology rela.t, imlfinite loops due to uninstantiated variM)les cannever occur, a cruciM requirement when integr;tt-ing relational dependencies into st lazy instantiat-ing feature formal ism.5 Embedding X2MouF into theFeature SystemOriginally X2MoI tF  was realized ~ts st separatemorphological component interfaced to the sen-tence analyzer/generator only via seq.ential (lat~transfer.
In the case.
of analysis, the feature strm>ture representing the word form was transmittedto the parser.
For generation, X2MoRF' expecteda feature structure as inlmt reproducing one ormore word forms.
This l)urely sequential architec-ture was not satisfactory lmcauso, of the l)roblemsmentioned in the introduction.In order to achieve tight integration, we a(h|l)ta relational view of X2MoM;'  and encode the re-lation between surfiLce string and lexical string <li-reetly without using finite state automata (for ar-guments suI)porting this ai)pro~Lch of.
A1)ramson92).
Ilowever, our al)l)roach extends A1)ramson92 in that it (i) explicitly accounts for the inser-tion of null characters and (ii) introduces the filterconcept of X2Mol tF  into the relational approach.The general format of a two-hwel rule sl)eciIi-cation in our system isLCon <=> Trans i t ion <=> RCon \ [ : -  F i l te r \ ]in the case of equiwdence rules, option:d rulesare written using only single arrows (=> and <=).These rules aro cmnpiled into Prolog c\]a,uses 8 re-buting the \]oxical and surfaco character streamsappropriately (see Fig.,1 for an example of the l-elision rtlle f'or ( \ ]er l l la t l ) .q'- obtain a c.rroct relathmship between sur-fa, c(, and h~xi('al string ewwy transition has to belicensed I)y st morphological rule.
Transitions notmentioned by rules are handled by a defitult rule.Instantiation of contexts may not be done by therules themselw,s, since this would make it impos~sible to obt~dn negation via the cut-operator.
In-stead, it is handled Sel)a.rately in a backtrackablef~shion.The central relation is the morphology predi-cate, (soe l"iI';.
5) nledia.tiug between lexical string,surf:we string (with inserted n.l l  elements), thepuro (dellullifiod) surl~w(~ string and the featurestructure of the morl)hologica.l sign.
lnstantiationof pairs is done del)onding on the possible lexi-cal con|in,rations (the lexicon bei ,g representedby a trie-structure).
The amount of lookahead isdetormilmd by the current pair which is to be li-censed by morphrule.
'~Synchronization of s,rfaceand lexical string by insertion of mill characters ialso ha.lMlml a.t the insta.ntiatlon hwel.Tim intogra.tion (ff tim two-hwel rohU, ion intoKN(II~!
l.hat \]e\[t Collie?Is are encoded reversed to ac-count for the lelt to rlg, ht traw~rsa\] af the pair of characters\[.r(!itlllS;.
\[J('.\[t COIItCXts C~tll be rellleHIbered 3.1ld c\]leckedmost efficiently this way.9This interactio, and the lexicon look,p of the featurestructure corresponding to the current morph, which takespl;~.
(:e whell (:llCOllllt(~l'illg ;k IIIOl'ph bOlll/dAry iS not .
'4hOWlIfor the sake of simplMty.145the general framework of the feature basedsentence-level and word-level grammars is nowperformed by adding this relation as a principledconstraint at the appropriate level.In a definite clause style AVM notationthis could be written as follows (given thatmorpho:l.ogy/a is a wrapper around the morphol-ogy relation given above, starting with empty leftcontext and hiding the nullified surface stream):rPnON ~\]strlng/msignLMm~AO mheod j| lEAD heodwordLSYNSEM synsemThe actual imi)lementation as a princil)led con-straint in our formalism additionally takes care ofdelaying the actual enforcement of this relation incase the strings are not sufficiently instantiated.A second provision has to be made in theword level grammar to assnre prol)er concatena-tion of the lexical strings of the morl)hologicalsigns being combined.
Given the subtyping ofresign into marg and mfunctor, which in turnhas the suhtypes leftfunctor and rightfunctor, theprincipled constraints ensuring concatenation ofa left functor with its argument are shown inFig.
6.
Concatenation is delayed until the ar-concat_right_gunctor(X) :-X::=rightfunctor,X::arg:mstring===subtype_of(string)===>X::arg:mstring===hrg,X::affix===Suffix,X::mstring===Mstring,concat(hrg,Suffix,Mstring).Figure 6: Concatenation of lexical stringsgument's MSTRING is instantiated.
Thus, infiniteloops when concatenating are avoided.As an example we demonstrate how these con-straints interact in forming the third person sin-gular present ense form of the German verb raten(to guess).
The lexical string is composed of thestem rat and the suffix +t.
The lexical entries ofthese two morphs are given in Fig.
7.The two-level rules applicable for this examl)leare the t-elision rule (Fig.4) and two rules withfilters licensing a-umlavt and epenthesis, given inrightfunctorIMSTRING "rAt" 1STEM " ro t "  |LUMLAUT aou_umlautJ Jverb_stem m a rg'STEM \[~stringAH"IX " 4"t"M,,,.
:A,) |PERSON 3 /LIIMI,AUT \[~\]umlautJverb_formI-s'r,.
:M \ [ \ ]  lARG / \[EPENq'HESI'  1//MI~,,,D / 1-71// IIl~/#/II L tJt?I'b_st?
;TII"UMLAUT u a .1Fignre 7: Lexical entriesthe input notation for our system (Fig.8).lnteractkm between syntactic and morpholog-ical processes takes place at the word level.
Theapl)lieation of the two-lew'J rules relating the sur-face string (i.e the pllON-value of the word) andthe lexic:d-string (i.e.
MORP,IMsTRINC ) is alsotriggered here.
This interaction is completely neu-tral with respect o the direction of l)rocessing dueto its relational nature.
Parsing is performed bysimply instantiating the PIION value.
Generationcan be achieved when MORPIIIMSTRING is present,which in turn is obtained by concatenating thelexical strings of the resigns instantiated by themorph grammar.As a result of this constraint interaction thestructure shown in Fig.
9 is obtahmd.
Featuresrelevant at the syntactic level (such as PERSONand TENSE) are percolated fi'om MORPIIIMI1EADto SYNSI,:MILoc\[CAT \[ll~,:al) via structure sharingconstraints attached to the type word (this in-teraction is not shown in Fig.
9).
Informationon sul)c;d,egorization a d semantic ontent for theword is obtained fi-om the lexeme lexicon usingMORPIIIsTNM aS a key.
These constraints con>plete the interaction between syntactic and mor-phological processing at the word-level.6 Conc lus ionWe have presented a fl'amework for" tile tight inte-gration of word level and sentence lew.q processingin a unification-1)ased paradigm.
Tile system isbuilt upon a unification engine hnl)lemented in aCLP language supporting types and delhfite rela-tions as l)art of feature descriptions.
Using this ex-146A-umlaut _ <=> h:"a <=> _ :- filter(X, \[X::mhead:umlaut===aou-umlaut\])Epenthesis denta l  <=> '+ ' :e  <=> s_or_t : -  f i l to r (X ,  \ [X : :mhead:openthose==='+' \ ] )Figure 8: F'ilter lhi les"PIlON "rift""MSTRING "rAt+t"STEM \[~'l"a t"AFFIX "4-t"FEPENTnESE~" \]MIIEAD |PERSON 3 /\[TI'~NSE tense_pre~ \[verb- LUMLAUT \[~ft O ll_tl llll(l It t_\]SOFIII MORPIIFMS'rItIN<I ",'At" \]All.
(; /MI1EAI) \] i>ERsON 3 I \]L stem J margrigh t-'word functorFigure 9: Result  of constraint ini;eri~(:tiontended feature formalism, which is indel>en<h,ntlymotivated by reqnh'enlents of standard I l l 'St ; ,  iLreiml)lementation f X2MoRF was integr,~ted intothe grammar as a specialized relation.This architecture has computational as wellas l inguist ic advantages,  integrating morphologyand morphophonology directly into the gralnmaris in the spirit of I IPSG, which views gramm:cr as arelation between the I)honological (or gr~qllielnic)form of an utterance and its syntactic/senianticrel)resentation.
This way the treatnmnt of phe-nomena transcending ti le boundary between in()r-phology and syntax is also nlade l)ossil)h~.On the implementation si(h~, the practi('alproblems of interfacing two inherently difl'erentmodules are eliminated.
For applh:ations thismeans that using a morl)hological component ismade easy.
Nevertheless,  this t ight integrationstill leaves morphology and syntaz/somantics aautonomous comI)onents, enal)\]ing direct use ,)1'existing data sets descril)ing morphopholmh)gy interms of  the two-level p,~ra(ligm.ReferencesAbramson If.
: A Logic Programmiilg View of l(.e-lational Morl)hology, in Proceedings of the 15thCOIANG, August 2?,-28, 1992, Vol.l II, pp.850-854,1992.Bird S., Klein E.: l'\]nriehing IIPSG Phonology,University of l'\]dildmrgh, UK, Research PaperI'~UCCS/I~ 1'-56, 1993.Carpenter B., Pollard C., Franz A.: 'the ~pecificationand Implementation f Constraint-Based Unifica-tion C, rammars, Proceedings of 2 '*'I IWPT, Can-curt, Mexico, 143-153, 1991.C, arl>enter B.: The Logic of "l~ped I"calure ,S'h'uclures,(~amhridg,, \[hfiversity Press, Caml)ritlge Tracts inTheoretical (~Omlmter Science 32, 1992.
(ilolclsmh.h J.A.
: Anloseymcnhd and Metrical l'hovol-ogy , Basil Blacl(well, Oxford, 1990.llolzbaur C.: Metastructures vs. Attrilmted Vari-ames in the (~ontext of Extensible Unification, inlh'uynooghe M. and Wirsing M.(eds.
), l)rogram-ruing Language hnplementation and Logic Pro-gramming, Springer, LN(JS 6:/1, pp.260-268, 19!12.Jatl'ar J., lmssez .I.L.
: CoIisl.raint Logic Programming,in I'ro('eodings 14t.tl ACM IK)PI, Conf., Muifich,1987.Kriegor II.-U., Pirker lI., Nerbolme J.: Fe~ture-bmsedAllomorldly , Ih'oceedings of the :l 1st Ammal Meet-ing of the At'L, (k)hmll)us, Ohio, Pl).
140-147, 1993.Matiasek J.,.
lleinz W.: A CLI ~ Based Approach tolIPS(;, ()sterrei(:hisches Forschungsinstitut fiir Ar-tificial h,telligen(:e, Wien, TI(-93-26, 19!
):{.l>ollard C.J., Sag I.A.
: hi formation-Based 5'ynlaz ond5'emmdics, Uuiw'rsity of C\]licago Press, Chicago,1987.l'ollard, (2.I, .%g I.A.
: Ih'ad-l)rivcn Phrase Sh'vchtre(;ra,mlar, I/niw'i'sil.y of (:hicago Iq'oss and (~Sl,Il>uhlicat.ions, in press.di ,q('iullo A.-M., }Viliialns I'\].
: Oil lhr \[)efinitioli ofWord, MIT l'ross, Caulbridge, MA, 1!)87.Sproal.
R.: Morphology alid Coniputalion, MIT Press,(Janibridge, MA, ACI,-MIT Series in NLI', 1!)92.
'l'rost 11.: The Appli(mtion of Two-Level Morphology toNon-(ik)ncatenal.ive (i~el'lilall Morphology, hi I(arl-gren II.(ed.
), liroce(-dings of the 13th COLIN(\] ,lh'lsinkl, F'inland, 1q).
'371-376, 1990.Trost II.
: X2MORF:  A Morphological (JoDlpoli011~13asi,d Oll Augniei/l>ed 'l'wo-Lew~l Morphology, illProceedings of the 12th I JCAI ,  Morgal/Ka/i f i l iani l ,,~ttll ~/llti,eo)C,i 1 1)1).1()24-1030, 1991.Trost \]l.: (k)iihlg with l)erivat.ion in a. Morphologi-cal Conlpl)lienl., ill 61,11 (Jollference of the EilropeailChal)l.er of the ACI,, Ul.recht, pp.368-376, 199,1.
"147
