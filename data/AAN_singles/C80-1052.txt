PARSING AGAINST LEX ICAL  AMBIGUITYRob Mi lneDept of Ar t i f i c ia l  In te l l igence  and School  of Ep is temicsUn ivers i ty  of Ed inburghEd inburgh ,  Scot landEH8 9NWABSTRACTMarcus'  o r ig ina l  determin is t i c  pars ing  inc luded a lmost  no par t -o f - speechambigu i ty .
In this paper ,  the add i t ion  of par t -o f - speech  ambigu i ty  to adetermin is t i c  parser  wr i t ten  in Pro log is descr ibed .
To handle this ambigu i ty ,  itwas necessary  to add no spec ia l  mechan isms to the parser .
Instead the grammar  ruleswere made to en force  agreement ,  and reject ungrammat ica l  sentences .
The resu l t ingsystem is very e f fec t ive  and covers  many examples  of ambigu i ty .INTRODUCTIONMost words can be more than one part ofspeech.
For example, many words that can be anoun, can also be a verb, many -ing verbs canalso act as adjectives, many prepositions canserve as particles, several modals can also benouns, and some relative pronouns can also bedeterminers.
In order to analyze a sentence, itis necessary to decide which part of speech agiven word is in the sentence.
Deciding whichpart of speech a word is during sentenceprocessing shall be refered to as LexicalAmbiguity(LA).
If a parser is to handle a widerange of English and ambiguity, it is necessaryfor it to handle this problem.STATE OF THE ARTMarcus \[1977\] showed that a wide range ofEnglish grammar could be parseddeterminsitca!ly, that is without every making amistake and having to backtrack.
But in Marcus'parser, almost every word was defined as onlyone part of speech.
For example in his parser,"block" could only be a noun, making thefollowing sentence unacceptable to the parser.\[I\] Block the road.With so little ambiguity, it is notsurprising that Marcus's parser could workdeterministically.
For determinstic parsing tobe a serious claim, it must be shown that it ispossible to parse determinstically sentenceswhich contain part-of-speech ambiguity.
Isdeterministic parsing still possible when partof speech ambiguity is included?The answer to this question can be thoughtof as the first major test for determinsiticparsing.
If it is able to handle part-of-speechambiguity easily, this will be a majorreinforcement of the deterministic parsingstrategy.
If it cannnot handle LA, the theorywill collapse.The first approach to LA for adeterministic parser was \[Milne 78\].
This workdealt solely with noun/verb ambiguity.
When anoun/verb word was discovered, a special packetof rules was activated to decide whichpart-of-speech the word should be.
For example,a typical rule stated that "to" followed by anoun/verb word meant that the noun/verb word wasbeing used as a verb, and would disambiguate itas such.
The rest of the grammar dealt with thedisambiguated word.Although this approach was very effective,the rules were very special case, and many ruleswould be needed to handle all the possibilities.THE DEFAULT CASEI have implemented a deterministic parserin Prolog \[Pereira 78\] similar to Marcus' butextended it to allow words to be defined asmultiple parts of speech.
The parser hasappoximately 80% of Marcus' original grammar,but the grammar has been extended to cover thedomain of mechanics problems.
(MECHO) \[Bundy79a,79b\].To extend the Prolog parser, each word inthe dictionary was syntactically defined as allparts-of-speech it could function as, given thegrammar.
The only other initial modificationnecessary was to alter the attach function todisambigute the word to the part-of-speech it isbeing attached as.
For example if "block" isattached as a noun, it will be disambiguated toa noun.
Because of the expectations of theparser, represented by the packets, and theconstraints of neighboring items, represented bythe buffer pattern matching, a large number ofcases were handled without further modification.For example in the sentence:\[2\] The block is red.The parser will be expecting a noun after350 -the determiner, and hence only the rules fornouns in nounphrases will be active.
"Block"will be used as a noun, and the verb usage neverconsidered.Similary in the case:\[3\] Block the road.The rule for Imperative at the sentencestart will match off the verb features of"block", and the noun usage will not beconsidered.The current parser can handle the followingexamples with no special rules:noun/verb\[4\] The block will block the road.\[5\] I want to block her.\[6\] The pot cover screws tightly.pronoun/poss-det\[7\] Tom hit her.\[8\] Tom hit her dog.noun/modal\[9\] The trash can be smelly.\[10\] The trash can is smelly.THE DIAGNOSTICSMarcus allowed several "function" words tobe more than one part of speech.
For example"have" could be an auxverb or a main verb,"that" could be a comp, determiner, or pronoun,and "to" could be a preposition or a auxverb.To handle these ambiguities, Marcus had a"Diagnostic rule" for each word.
The diagnosticrules matched when the word it was to "diagnose"arrived in the first buffer, and used the 3buffer look ahead to resolve the ambiguity.Each Diagnostic rule could ask questionsconcerning the grammatical features of thecontents of the 3 buffers, as well as thepartial item being built.
As a result theserules were very complex and cumberson comparedwith the rest of the rules.
But these rulesseemed necessary to preserve the generality ofthe other rules.For example, the "HAVE-DIAG" decided if thesentence was a Yes-No-Question(YNQ) or anImperative, and hence "have" a main verb orauxverb.
The rule was as follows:\[have\]\[np\]\[verb\] ->If 2nd is noun singular,n3por 3rd is not +en then run Imperative.else run Yes-No-Question.and decided between:\[auxverb\]\[np\] -> Yes-No-Question\[tnsless verb\] -> Imperativeat the start of the sentence.To alter the YNQ rule for the special caseof "have", would ruin the simple generality ofthe rule, and lose the linguistic generalizationit captures.But the Marcus Parser assumed it would onlybe given grammatical sentences.
If the Marcusparser was given an ungrammatical sentence, itmight pass it as legal.
For example the parserwould pass as legal:\[11\] *Is the boys running\[12\] *Is the boy run?Notice they both match the YNQ pattern.Clearly for the rule YNQ to run, theauxverb must agree in number with the subject,and in affix with the verb.
If we modify theYNQ rule to enforce this agreement, then only\[13\] will match the YNQ rule:\[13\] Have the boys taken the exam?\[14\] Have the boy taken the exam.\[15\] Have the boys take the exam.\[16\] ?Have the boy takenthe exam.In fact, if we enforce agreement on the YNQrule, it will perform exactly the same as theold HAVE-DIAGNOSTIC, and the diagnostic is maderedundant.Closer inspection of the diagnostics andthe grammar rules they decide between, revealsthat the grammar rules will in general passungrammatical sentences as legal.
If theserules are then corrected, using agreement andgrammaticallity, then all the diagnostics aremade redundant and no longer needed.In order to handle part-of-speech ambiguityin a determinsitic way, the parser does not needspecial "Diagnostice rules".
If the grammarenforces agreement, and rejects ungrammaticalstrings then ambiguity handling happensautomatically.THE THAT-DIAGNOSTICThe most complicated of all thediagnostics, was the THAT-DIAGNOSTIC.
This ruledecided if "that" was a determiner, pronoun, ora comp.
In Marcus' parser, 3 rules were neededfor this decision.
Also, if Marcus' diagnosticdecided that "that" was to be a determiner, thenit would be attached after the nounphrase itwould be a determiner for, was built!
In Church\[1980\], the THAT-DIAGNOSTIC is only one rule,but extremely complicated.
His deterministicparser can handle the widest range of "that"examples, but the diagnostic is seemingly themost complicated in the grammar.Following the above methodology though, thediagnostic can be made redundant.
"that" canonly be a determiner if the word following it--351--will take a determiner.
In Marcus' originalparser, the rule DETERMINER made no check forgrammaticallity, and would attempt to parse thefollowing fragements:\[17\] *the the boy\[18\] *the he\[19\] *the tom\[20\] *a blocksIf the rule DETERMINER is fixed to rejectthese examples, then the determiner usages willall work properly.
Similary, the rule PRONOUNwould pass ungrammatical strings, so this wasaltered.
Finally, only the comp use of "that"are left, and the parser's normal rules canhandle this case.
By simply altering the aboverules to reject ungrammatical strings, thefollowing sentences can be parsed with nospecial diagnostic additions to the parser.
:\[21\] I know\[22\] I know\[23\] I know\[24\] I know\[25\] I know\[26\] I knowthat.that boy.that boy hit mary.that was nice.that that was nice.that he hit mary.GARDEN PATHSAfter altering the grammar, so there wereno special rules for ambiguity, the followingsentences were still a problem:\[27\] What little fish eat is worms.\[28\] That deer ate everything in mygarden surprised me.\[29\] The horse raced past thebarn fell.
"\[30\] The building blocks the sun fadedwere red.But for each of these, there is a partnersentences, showing these ae potential gardenpaths \[r~ilne 1980b\].\[31\] What little fish eat worms.\[32\] That deer ate everything inmy garden.\[33\] The horse raced past the barn.\[34\] The bu i ld in~ocks  the sun.As Marcus stated in his thesis, adeterministic parser cannot handle correctly agarden path sentence.
But people also fail ongarden path sentences.
Since deterministicparsing should model human performance, and notexceed it, it is acceptable for the parser tofail.
Instead these potential garden pathsituations are resolved using semanticinformation \[Milne 1980b\].Enforcing number agreement fails when aword is morphologically ambiguous.
This problemhas not been examined yet.FREE TEXTA simulation of these rules was conductedby hand on an article in TIME \[1978\] and thefront page of the NEW YORK TIMES \[1978\].
Theparser's rules disambigution was correct for 99%of the occurances that the grammar could cover.
(some ambiguities are not yet handled).A POSSIBLE EXPLANATIONAt first glance, English looks extremelyambigous and the ambiguity very difficult tohandle.
But given the constraints ofgrammaticallity, most of the ambiguitydisappears.
For only one of the possiblemultiple choices will generally be grammatical.People do not seem aware of all the ambiguity inthe sentences they process (excluding globalambiguity examples).
This and the papersuggests that handling ambiguity causes noadditional load on a parser, a very desirableand intuitively acceptable result.
In otherwords, grammaticallity and LA handling aredirectly related.CONCLUSIONIn this paper, I have described addingpart-of-speech ambiguity to a version of theMarcus determinstic parser.
The only additionsnecessary to the parser, were having theattachment function coerce the words to the partof speech the word is attached as and thegrammar had to be altered so the rules wouldreject ungrammatical sentences, and made toenforce number and affix agreement.
With theseadditions, the parser is able to handle a verywide range of ambiguity, with no special rules,and no need to backtrack.
The resulting lexicalambiguity handling is very flexible and has ahigh success rate when simulated on free text.This work is far from complete.
In thispaper we have not discussed syntax/semanticsinteraction and global ambiguity.
For commentson these, see \[Milne 1980\].ACKNOWLEDGEMENTSExamples \[13,14,~7,28\] are from Marcus.Examples \[21-26\] are from Church.This paper describes work done under anEdinburgh University Studentship.BIBLIOGRAPHYBundy, A., Byrd, L., Luger, G., Mellish, C.,Milne, R.,Palmer, M. \[1979a\] "MECHO:A Program To Solve MechanicsProblems",DAI Working Paper No.
50.Bundy, A., Byrd, L., Luger, G., Mellish, P.,Palmer, M. \[1979b\] "Solving MechanicsProblems Using Meta-Level Inference",IJCAI-79352Church, K. \[1980\] "On Memory Limitations inNatural Language Processing",unpublished MSc.
Thesis, MIT AI LAB.Marcus, M. P. \[1977\] "A Theory of SyntacticRecognition for Natural Language",unpublished Ph.D. thesis, MIT.Milne, R. \[1978J "Handling Lexical Ambiguityin a Deterministic ParsingEnviornment", unpublished B.Sc.thesis, MIT.Milne, R. \[1980a\] "A Framework forDeterministic Parsing UsingSyntax and Semantics", DAI WorkingPaper No.
64.Milne, R. \[1980b\] "Using Determinism toPredict Garden Paths",AISB 80Conference Proceedings.Pereira, C.M., Pereira, F.C.N.
and Warren,D.H.D.
\[1978\] "User's Guide toDECsystem-10 PROLOG", Available fromthe AI Dept, Edinburgh.The New York Times Wednesday, April 28, 1978Vol CXXVII No.
43922TIME \[Jan. 9, 1978~ Good ole Burt;Cool-eyed Clint--353--
