PORTABLE SOFTWARE MODULES FOR SPEECH RECOGNITION(DARPA PHASE II SBIR Contract DAAH01-91-C-R297)John Shore, Principal InvestigatorEntropic Research Laboratory600 Pennsylvania Ave.
S.E., Suite 202Washington, D.C. 20003PROJECT GOALSThe main goal of this work is to create program-ming libraries for speech recognition R&D that notonly facilitate rapid prototyping, but also raise theprobability that the prototypes will be robust andportable enough to serve beyond the prototypestage.
Specific technical objectives for the firstyear include:(1) Refine the software engineering method thatwas developed during Phase I.
(2) Choose anexisting speech recognition system as a "refer-ence" target.
(3) Produce a working subset of theutility modules.
(4) Produce a working subset ofthe numerical algorithms modules.
(5) Write anopen specification for the file formats and I/Ofunctions.
(6) Produce example user-level pro-grams (including at least one auditory model).RECENT RESULTSSince contract award (1 Sept. 1991), we haveconcentrated on refining the software engineeringmethod and building a significant set of low-levelutiility modules.
The method yields reusable,modular C libraries with these properties:?
Modules are simple enough to be designed,written, tested, understood, and maintained bya single person (at a time).?
Testing adding, removing, replacing, or modify-ing modules are simple operations.?
The result of combining several modules into alibrary is itself useable as a module in a "higherlevel" library.?
Modules are organized into a "uses hierarchy"that makes the module dependencies explicit.Our mehod does not require an elaborate CASEenvironment.
Rather, we stick to ANSI C, afull-featured make program (at present, gnu-make), and a collection of relatively simple shellscripts.
The development was carried out in thecontext of writing (and re-writing) 10 utility mod-ules, complete with test programs and documen-tation.
The more important modules are these:msgio: primitive functions for exchanging ASCIImessages with the userusrmsg: functions for verbosity-constrained usermessagesestop: functions for halting an applicationevents: exception handlingsignals: turns UNIX signals into eventsemal/oc: dynamic memory allocationestrings: strings and string arraystypes: numeric data typesarrays: multidimensional arraysPLANS FOR THE COMING YEARWe are now engaged in the development of mod-ules for signal representation and signal process-ing algorithms.
Design goals include providing forautomatic type conversion if a type-specific signalprocessing function is not available, having uni-form treatment of signals regardless of their stor-age location (memory, disk, or mixed), and provid-ing run-time parameterization of the number ofrecords (e.g., frames) dealt with as a single unit.The next tasks will be to specify and implementthe file system, to implement he command-lineuser-interface modules, and then to completeseveral user-level programs that demonstrate andillustrate various aspects of the approach.
We willalso be selecting an existing speech recognitionsystem to serve as a target for the optional sec-ond year of the project.A detai2ed progress report (and plan for theoptional second year) will be available in May,1992.472
