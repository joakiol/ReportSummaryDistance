Pars ing  in  Para l le lXiuming Huang ~ Louise GuthrieComputing Research LaboratoryNew Mexico State UniversityLas Cruces, NMI USA 88003ABSTRACTThe paper is a description of a parallel model fornatural language parsing, and a design for its imple-mentation on the Hype,'eube multiproeessor.
Thepm'allel model is based on the Semantic Definite ClauseGrammar formalism and integrates syntax andsemantics through the commmfication of processes.The main proeessess, of which there are six, containeither purely syntactic or purely semantic information,giving the advantage of simple, transparent algorithmsdedicated to only one aspect of parsing.
Communica-tion between processes is used to hnpose semantic eon-st,'aints on the syntactic processes.1.
In t roduct ionThis paper describes parallel model for naturallanguage parsing and gives a design for its implementa-tion.
With  the advent of parallel machines, it may bepossible to view the relation of syntax and semantics innatural language parsing in a wholly new way.
Theapproach is moving towards an application environ-meat which is similar to the heterarchical sytem pro-posed by Winograd \[Winograd 721.
Processes whichcontrol the syntactic aspects can be separated fromthose which control the semantic aspects in that thesyntactic processes contain no semantic informationthemselves, but receive it by communication with thesemantic processes, and vice versa.
The advantage ofthis approach is that transparent algorithms can bewritten that are dedicated to only one aspect of pars-ing, while the desirable ffects of integrating syntax andsemantics can be achieved through the communicationof processes.
In our model we use this communicationto enforce semantic onstraints on the syntactic proces-sors in order to avoid the combinatorial explosion ofproducing all legal syntactic possibilities.Communication between the two components isthen our focus in designing a parallel parser.
Thereseem to be three obvious levels at which communica-tion between syntax and semantics can take place: theword level, tim phrase level, and the sentence level.
Wehave chosen to consider communication at the phraselevel rather than at either of the other two because itwould be too early for the syntactic and semanticcomponents to communicate at the word level (too lit-tle information is available at this level to help theparsing), and too late for them to communicate at thesentence level (too many syntactic parses might havealready been "produced).
How the communicationbetween the syntactic and semantic components takesplace at the phrase level will be described in Section 3.In Section 4, we design an hnplementation of thispa,'allel model for a 6-Hypereube lintel 85\] multlpro-cessing system, which we will have available shortly.The 6-Hypercube has sixty-four identical processors(Intel 80286's with 512K bytes of memory) and noshared memory.
Although each node in the Hypereubecan eventually communicate with any other node, eachprocessor can directly communicate with only siximmediately neighboring nodes.
We therefore intend tolimit our message passing among processors to immedi-ate neighbors whenever possible.Like the work of Eiselt \[Eiselt 85\] on parallel infer-ence processing, we have a pers\]~icuous a signment ofnatural language processing moaules to processors inthe machine, although we are suggesting a parallelimplementation of a parser with much more parallelismand with a clearer separation of syntax and semantics.The work on "massively parallel parsing" by Waltz andPollack \[Waltz 85 models various components ofeompreheilsion by a~tivation and inhibition of nodes ofa network.
A practical applieation of their approachrequires massively parallel processing, currently beyondthe state of l, he art in multiprocessing.We base our parallel model on the SemanticDefinite Clause Grammars (SDCG) formalism of HuangIlluang 85.
The SDCG evolve'd from the I)efiniteClause Gra,nmars of Pereira \[Pereira et al80 and isdescribed below.2.
Semant ic  Def in i te  C lause  GrammarsThe SDCG is em'rently implemented on a singleprocessor machine where it is the parser for the XTRA(English Chinese Sentence Translator) machine transla-tion system \[Huang 85\].
The XTRA is a prototype sys-tem now running nnd&" a C-prolog interpreter and fiasa wide coverage of English phenomena, even though itsvocabulary is rather small (1000 entries).
The SDCGuses the semantics of words and phrases to restrict thenumber of syntactic pm~es of a sentence to those whicharc semantically compatible.A simplified vemion of the SDCG used in theXTRA system is as follows:(1) sentence(s(Subj Np,vp(v(Verb sense),Obj Np)) -- >noun_phrase(S ubj Np),is verb(V~rb) , -subject verb match(Subj Np,Verb,- VeTb sense), -noun_phrase(Oh\] Np~,verb obj ect__matell(Verb sense,Obj_Np).The graminar says that  an input string is a sentencewith the structure s(Sub3: Np, vp-(vYVerb sense)Obj Np)).
if it is composed of Su(~j NP which is-a noun{phrase, followed by Verb (a ve,'b) whose one senseVerb sense is semantically compat:ble with Subj Np,followed by Obj NP (a noun phrase) which is semanti-cally compatible-with Verb_sense.The sub-grammar for pa,'sing a noun phrase is asfollows:(2) noun phrase\[np(det(DeQ, adj(Adj sense),n(Nonn ~ense) ) ) - ->  -determiner(Det),adjective(Adjective),noun(Noun),adj noun match(Adjective, Noun,- -Adj se'nse, Nounsense) .140The last predicate ill the noun phl'~Lse sub-grammar, 'adj_jiounAI:ateh', tries to match Adjectiveand Noun to find a compatible pail" of senses for tilegiven Adjective and Noun to be eombined.
The predi-cates'sub\]  verb.
match'  and 'verb object mateh ' in ihesentence gralnmar accomplish shn-ilar ta~k.
All thosematches are based on the system of seleetional restric-tions proposed by \[Katz & Fodor 63\] and their eod-ings are omitted here to save spaee, l,ater we will seehow they function.There is a syntactic lexicon ia the SDCG of thefollowing form:determiner(the).noun(coach,\[eoacht,eoaeh2\]).noun(star,\[starl ,star2 D.adjective(tough,\[tough1 ,tough2,toug h3,tough4\]).verb(marry,\[mar,'yl ,inarry2\]).For instance, the syntactic entry for "coach" is anoun having two senses, labeled "eoacbl"  and"coach2".For each word sense, a semantie interpretation isgiven in the semantic dictionary:sem(coaehl,\[head(thing)\])*.
(eg.
'a passengercoaeh')sem(coach2,\[hoad(man)\]).
(a ~rah,er)sem(starl,\[head(thing)\]).
(a celestial object)Seyl/(star2,\[hcad(l-/lan)D, (?
'a sil\]g\]llg S~al"', etc)sem(toughl \[poss(tlfing)\]).
(,nodilles 'thing', as h,% tough matera:l")sem(tough2,\[poss0;:,an ) ).
(modines 'man',  as i,,"a tough mountaineer ), seln(ll:_{-irry \] ,lsubj{man),o j(m an),head(do)\]).
( John m re'led Mary.
)senl(marry2, snbj (,~1 an),obj(t hing),head(do)l), tog.in "IIe mm'ried money.
)For example, "coach1 labels the sense of "coach"whereby it refms to a "tlfing .
in pa~sing (3),(3) The I, ough coach married a star*.according to the grammar in (1) the system starts withthe predicate 'nonnA)lu'~me', which is presented in (2).After it instantiates tile variables Det, Adjective andNoun instantiated to the' tough" and coach" itattempts to apply the predleate 'adj noun match',whose task it is to find tile first pair of senses for thewords "tough" and "eoach", respectively, which arecompatible with each other aeeording to our seleetionalrestrietions.
Here I, he first pair found would be ' loath1+ coach1', beeause the semantic category of "coach1"('thing') fibs into bile 'poss(thing)' slot of the word sense%ough l "  (meaning that his adjectival sense is formodifying sometlfing whose semant, ic category is'thing').Now tile parser is at tile predicate 'is verb' whereit finds the verb "marry".
It, t, hen tr:es to matehSubj ,Np (%otigh\] -I- coachl') witt: a some sense of the"mam'y" but fails because both "marry l "  and"marry2" prefer the subject to be of the semanticcategory 'man',  which "coachl"  cannot satisfy.
Thesystem b~ektracks, trying 'adj noun match'  again andproducing the next matclfing-pah" of senses for "thetough coach" ('tough2 -I- coach2').
YVhei}'subj verb mateh is tried again and it selects 'marry1as tI:~ appTopriate verb sense.
The parser proceeds toanalyse the rest of tim sentence, employing"noun_0hrase" to find the object noun phr~e sense* The semantic primitives sneh a.s 'thing', 'man',  ere,are based ell the primitive set suggested in \[Wilks 75\].
* Modified version of the "semantie garden path" sen-tence by \[Chm'niak 83\] ("The astronomer married thes tar , " )and "verb_obj_match" to see whether this noun phrasesense lits the partieular verb sense.
'S~arl' (a eelest:alobject) is thus tried and rejected, and 'Stal'2' (a cele-brity) is accepted ('marry1' requires the object t'o be ofthe semantic category man ).
A plausible zeadlng ofthe sentence is thus gained (' "File strict ~ralner marrieda celebril, y.
")It is clear from t, he above description that in theSI)CG syntax and semantics closely interact: syntax -semantics -.
syntax, ere.
One class of predicate waitsfor the other to make a decision, then makes its owndecision.
\]low much baektraeking must be done isunpredictable; the pm'se might only be completed afterseveral routes have been tried and rejeel, ed.3.
Para l le l  Pars ingThe model consists of six processes which con>munlcate to produce all the semantically compatibleparses of a given sentence.
Each process will be hnple-mented as a tree of processors.
The root node of t, hetree eonl~ains a queue of requests and allocates proces-sors to the elements of l, he qneue as they become awdl-able.
For the pnrpose of this model it is sulIicent tonote f, hat each process itself has {,he capability of pro-cessing several requests in parallel.
We identify beloweach of the processes and describe the communicationbetween them.1) Sentenee maste," - Controlling process whichoperates as a modified top down syntacticprocessor (modified in the sense thaC infer-\[nation fi'om el, her processes influences itsdecisions).2) Noun-phrase m~ster (NP-master ) -  Givenan arbitrary string, it identifies yhtactieallyall possible initial noun phr~mes in thestring.
Ttn'ough eommuilication with theAN-master, it del, ernfines which of I, hese aresenmntieally acceptable.3) Semantic dictionary lna.ster - Contains thesemantic dictionary and provides appropri-ate entries for the current input sentence tothe other semantic processes.4) Adjective-Noun master (AN-master) -Given an adjective and a noun, Iiads allpossible pairs (adjective word sense, neat\]we "d sense) thai are compatible.5) Subject-Verb master (SV-master)-  Given aword sense for a nou6 and a verb, finds allpossible word senses for the verb that arecompatible.6) Verb-Objeel, master (VO-lm~ster) - Given aword sense of a verb and a word sense of anoun, determines whether or not that verbsense-object noun sense pair \]s compatible.The following diagram illustrates tile processes andthe eommnnieation between them.r .
.
.
.
.
.
.
.
.
.
input .
.
.
.
.
.
.
.
.
.
.
:I AN-lnaSLel'-*~ - -  ~NP-maBLcr  IIi / /  "\ , ISemant ic  SV-master\ ] ) i c t ionary  "mj -~ ~- - -  _ Sentencelllas\[,el" - -~  l\]'l t~.q ~ c 1-" ' ' " '~  VO-ma~ster141Input is read simultaneously by the semantic dic.~tionary, and the sentence master.
The sentence mastercontains the s,vutaetic dictionary and tlegins a top-down parse o f  tim sentence guided by the definiteclause grammar.
Wimnever a noun piu'ase is searchedfor, the noun phrase master is invoked to produce allpossible initial noun phrases in the remainder (tllcunparsed portion) of the input string.
After the mainverb of any clause imps been identified by tim sentencemaster, the SV-master is invoked to produce all possi-ble verb senses which are mean ingfu la t  his point inthe parse.
Ill tim case that a transitive verb is foundand a possible word sense fox" the object noun is deter-mined, the VO-master is consulted as to wheti~er or notthe given verb word sense and object noun word senseare acceptable as a verb-object pail'.In communicating witl~ the NP-master or SV-master, several possibilities may be returned to the sen-tence master, and the parse is continued fox" each ofthese possibilities in parallel.Tile NP-master, which is also a syntactic process,finds all possible initial noun phrases which are mean-ingful by using its own syntactic information (in a topdown manner )and  by communicating with tile AN-master for semantic information.
This communicationis similar to that of the sentence master witll tile SV-master.
After determining an adjective which is fol-lowed by a noun, ti~e NP-master invokes the AN-master to tind all meaningful adjective-noun word sensepairs.
Multiple adjectives which modify a noun areconsidered in parallel by the AN-master, which in ti~isease, returns pairs which consist of a list of adjectiveword senses and a noun word sense.
Whenever theNP-master reeives a pair from the AN-master, it con-tinues any work that it might lmve (such as findingprepositional pin'ascs which modify tile noun, e.g.
'thebig boy in the park').
If several pairs are returned bythe AN-master, the remainder of the parse is handledby the NP-master and is done in parallel when possible.The sentence master produces all the parses of thesentence that have not been blocked.
A parse may beblocked rot any one of the following three reasons:1) The syntactic category needed by tim sen-tence master is not satisfied by any initialsegment of the unparsed portion of theinput.2) The SV-master eturns a negative response.3) The VO-mastcr returns a negative response.We use the example in Section 2 ("The toughcoach married a star.")
to il lustrate the above commun-ication of processes and to exhibit a path whiei~ isblocked.For shnplieity, we write the SDCG used previ-ously, without the arguments for the predicatesinvolved.
We also add an additional rule fornounphrase  and another entry in the semantic diction-ary for the noun sense of 'tough', tougi13 (as in "thetough never suffer"), to make the example interesting.sentence --:> nounphrase ,  verb,subject verb match,noun phrase,verb_obj  eet_mat oh.nounA)ln'ase--:> determiner, adjective, noun,adj noun match.noun_phrase -- > determiner, noun.determiner - -> \[the\].determiner -- > \[\].The sentence master receives the input and in thisease, immediately passes it to the NP-master and waits.The NP-master finds "The tough" and "The toughcoach" as possible initial noun phrases in the string itwas given.
"The tough" (tough_3) is returned immedi-ately to the sentence master who begins searching fox" uverb.
Sinlultaneously, ti~e NP master sends the adjec-tive noun pair, (tough, coach) to the AN-master.
TheAN-master returns (\[oughl, coachl) ("rugged vehicle")and (tough2, coacil2) ("strict trainer").
Note thatthese are the same possibilities considered by back-tracking in the example in Section 2.
The NP-masterreturns these to the sentence m~ster, who initiates thecontinuation of the parse fox" each of timse possibilities.The sentence master, in tim interim, found a verb(coach) for its f rst  noun-phrase (the tou{~!13) andrequest a subject-verb match from the Sv-master.The SV-master eturns coacil3 (the verb sense of coach)and the sentence master continues with the remainderof the input string "married a star".
Here, anoun A0hrase is needed, and so once again the NP-m'mter is invoked, and asked to find an initial nounphrase in the string.
Since no noun phrase is found,this path is blocked.
The path containing(tougM,coachl) will be blocked exactly as the descrip-tion in Section 2.
The path containing (tough2,eoaeb2)will succeed and produce the correct parse fox" the sen-tence.We now consider the function of the Semantic Dic-tionary master.
While the sentence master is receivingits .input and begins the processing described above, thesemantic dictionary master simultaneously finds all pos-sible word senses for cacti input word.
The semanticdictionary contains an entry mr each sense of a word.The structure of each entry reveals its syntacticcategory.
Word senses corresponding to nouns containonly the semantic class to whici~ the word sensebelongs.
For example, the semantic dictionary entryfox" tile noun "name '~ (as in the gh'l's name) is given by:sere(name1, \[>ad(sign)l ).Adjective word senses contain the semantic classof the noun that it prefers to modify.
The adjective"specific" has the following entry:sere(specific1, \[poss(sign)\]).Word senses corresponding to verbs m'e describedwiti~ a structm'e which contains the class of the subjectthat is prefered by this verb, the class of' the objectprefered, and the semantic class of tim verb itself.
Theverb "name" ("to name a dog") is represented as:sere(name2, \[subj(man), obj(man), head(make)l ).After finding all possible word senses for words inthe input sentence, the semantic dictionary mastersends these dictionary entries to the appropriate seman-tic processes.
Verb entries are sent to the SV- andVO-masters, adjectives are sent to the AN-master, andnouns arc sent to all three.
These three process mas-ters then contain a "cache" of the semantic dictionaryentries relevant o the parsing of the present input sen-tence.
The purpose of the "cache" is so that thesemantic dictionary entry fox" any input word can bequickly found by the processes which use these entries.4.
The Design of  the system>k We describe the design of the implementation ofthe parallel parsing model.
Each of the six processesconsists of a tree of processors.
We label the root ofeach process tree with the name of the process that  itrepresents.
The design of the semantic processors andthe noun-phrase master is independant of tim imple-mentation of the SDCG which is used.
The design ofthe sentence master, however, is heavily dependant onthe formal grammar used for the SDCG implementa-tion as the parser fox' XTRA.
The two syntacticprocesses above, the NP-master and the sentence mas-ter, have a significantly more complex design thanthose of the semantic processes o that  different possi-ble syntactic alternatives may be considered in parallel.
*Although tile actual implementation has not begun,we hope to do so by summer 1986 when the Hypercubemultiproeessor will have been ready for use.1424.1 .
The  sentence  masterThe desi~;n of tile sentence master  is based on thefollowing product ion rules of the SDCG:sentence- -> sentence 1)ody.sentence - ->  sentence head, scntence_f lody.Intuit ively,  we (:an consider the sentence head tobe wbateve, '  appears before the scntenee snb je~ 0t canbe an empty  str ing),  and the sentence body Lo be theremainder  of the sentence.The sentence master ,  as i l lustrated below, can bethought  of as the root of a tree which h~s two chi ldrenwhieh we will refer to as the sentence monitors:  thesentence head moni tor  (SH-monitor) and the sentencebody moni tor  (SB.-monitor).
Each sentence nlonitor istile root of a sub\]red of ehild processors (S iMlandlersand SB-haadlers)  and acts as ,'t monitor  foi' these childp,'ocessors.
We later describe the sentenec handlers inmore detail.Sentence masterSH-molntor SB-monitor' - , ?
-~  , '  SBhandleil SI hmdle l2S l /hmdhl /  SII handlml SII hmdlct2 ~' -  , ' .." -.
a '" ' - ; ".
'1The sentence minster is the process which deter-mines whether  or \]lot a st, ' ing is a sentence.
Any  inputto the sentence master  is immediate ly  given I,o both theSli I-monitor and the SB-nlonlto," to examine in parMlelthe possibil it ies that  the sentence does trod does nothave a sentence head.
The SH-monitors  and the SB-\]nonitors each put  incoming requests from the sentenecIn~ter  in a queue and allocate the first available childprocessor t,) begin its work.
In the ease of a SH-handler,  this work is to identi fy a possible sentencebead, and in the case of an SB-handler,  it is to see ifthe input  str ing is a sentence body.
The SI I -handlersand SB-handlers  moni tor  child processes which operatein parMlel.in the egse that  a sentence head is found by one ofthe SI I -handlers,  the.
result is retnrned to tile sentencemaster  v ia the SH-monitor.
The remainder  of theinput  is then  given to the SB-monitor  which allocates afl'ee SB-handle," to cont inue the parse of the remainderof the sentence.
For example,  consider the sentence:(4) Wr i t ing  to ,Iohn was dill\]cult.The sentence master  gives the sentence to both theSI I -handler and tile SB-monitor  which in turn give it toone of their children, say SI I -handler l  and SB-handler l .Since the grammar  for tile SDCG indicates that  anlag--clause is a possible sentence head, SH-handler l  willidenti fy "wr i t ing to .
lohn" as a candidate sentencehead.
\ [he ,emamder  of the sentence "was difficult" isgiven to a new SB-handler,  say SB-handler2 via theSH-monitor  and the SBqnonitor ,  to see if this is a pos-sible sentence body.
SB?handler2 fails and notifies SH-handler1 (via tile SIt- and SB-monitors).
Sit-handle, '1and SB-handlel '2 become available for' other  processingand SB-handler l  succeeds in showing that  "WrilAng to,John was dilrieult" is a legal sentence body.The S\]-l-handlers and tile SB-handlers are arrays of~ roeessors which imp lement  he or-paral lel ism of Prolog )r the predicates sentence_head and sentencebodyrespectively.
Below is a simplif ied version of the gram-mar  rules used in the SDCG for sentence head.sentence head - ->  ing-elause.sentence head- -> prepos i t iona lphrase .sentence-head  - ->  adverbial  phrase.Based on these rules, each Sil-handle," monitors  threechild processors:SH-hand lerpl epomtronal plu ase m~ clause par enthetidal_plu aseTim SB-handlers  moni tor  five p,'ocessors which areagain based on the SDCG.
The funct ion of these fivechild processes will vary depending on the type of theinput  sentence (declarative, interrogat ive or impera-tive).
We give he,'e a simplif ied version of thesenl;enee_body product ions in the SDCG for a deelara.-t i re sentence.sentence_body --:> subject  np, vp l .sentence body - ->  subject  np, vp2.sentencebody  -- > inverted_sentence.subject  np - -> noun I)hrase.sub ject_np -.- > ing_.elause.Here vp l  represents a complete verb phrase, likethat  in the sentence(5) John d idn' t  go to the park yesterday.And  vp2 , 'epresents an elliptical verb phra.se, like"d idn ' t "  in(6) No, John didn't .An  i l lust, 'ation of the SB-handlers  in this case isgiven below.Sl:l-handlernoun phrase mg clause nounA)hrase lag_clause inverted~senteneevpl vpl vp2 vp2in Section 3 we indicated that  the sentence mastercommunieaters  with the NP-master .
Actual ly,  each ofthe child processors of the sentence handlers sends amessage to the NP-master ,  v ia the sentence master ,whenever  tile DCG dictates that  a noun phrase shouldbe found next in tile input  str ing.
The NP-masterreturns  all semant ica l ly  compat ib le noun phrases.Where  there is more than  one acceptable noun phrase,a mess.age m sent to tile request ing sentence handlerwho allocates one possible noun phrase to the wait ingchild processor and  distr ibutes the others to availablechild processors.
Each child process of tile sentencehandlers communicates  with the NP-  , SV-, and VO-ma:sters via the sentence master .It is ~)ossible that  one of the child processors of thesentence handlers needs to know whether  or not somesubclause is itself a sentence.
For example,  if one ofthe paths  of, say, SB-handler l  does a reeursivc call tocheck whether  or not the next phrase is a sentence (asin a parenthet ica l  expression or a conjunct ive sentence),a message is sent to the sentence master  to take care ofthis request.
Tile request ing processor waits.143Should each of the sentence handlers have a wait-ing child processor and the sentence master a request,we invoke a special processor, called the black-sheepprocessor, to grant the request, so that the requestingprocesses may continue.
The black-sheep processor,functions precisely as the current single processorimplementation of the SDCG and will only be used toavoid deadlock*.4.2.
The Noun-phrase masterSince noun phrases are the major building block ofmany substructures of a sentence, and since ambiguityoften arises through determination of different nounphrases (eg.
"The tough coach the young" and "Theprime number consecutively"), the identification ofnoun phrases is an important place tbr parallelism inthe parser.
The NP-master can be thought of as theroot of a tree of processors.
It functions similarly tothe sentence master.
The noun-phrase master containsa queue of noun-phrase requests and allocates them toavailable noun-phrase handlers.N o u n - ~Each noun-phrase handler monitors three childprocessors.
The child processors try to parse the nextinput phrase as a noun phrase with no adjectives, oneadjective, and two or more adjectives respectively.For example, in parsing the phrase "the tough coach,"two of the child processors would succeed (no adjectivesand one adjective), these results are reported to theparent noun-~phrase handler, and then sent to the sen-tenee master via the NP-master.
At this point, thewaiting sentence processor (child of either one of theSB-handlers or one of the SH-hundlers) continues withone of the possibilities and  an available sibling proces-sor is allocated by  the sentence handler to continue theparse of the sentence using the other possible nounphrase.In the ease of a truly ambiguous sentence, alllegal parses are eventually produced.
The above exam-ple would produce two parses in the case of "The toughcoach married people"?, but not in the case of "Thetough coach the young.Each of the child processes of the noun-phrasehandler communicates with the AN-master via thenoun-phrase handler.4.3.
The Semantic ProcessorsThe semantic dictionary master and the AN-, SV-and VO-master processor trees have a much simplerstructure in that they have only two levels.
The rootnode is the master; children of the root are handlcm.Semantic AN-master SV-master VO-masterDictionarymaster144The Semantic dictionary entries are dividedamong the semantic dictionary handlers.
The Seman-tic dictionary master reads the input and passes therelevant semantic entries, which it obtains from itschild processors, to the AN-, SV-, and VO-masters asdescribed in Section 3.The AN-master receives input which is in generala list of adjectives and u noun, from the noun-phrasehandlers.
It forms all possible pairs (adjective wordsense, noun word sense) and allocates child processorsto determine whether or not there is a semantic match.The pail'S consisting of a list of adjective word senses,and a noun word sense which matches each of theadjective word senses in the list, are returned to theNP-master.The SV-master and the VO-master receive inputdirectly from the sentence processors.
The input andoutput of these processes is exactly as deseribedin Sec-tion 3.
In both cases, the semantically compatible wordsense pairs are determined in parallel.5.
Future workThe Computing Research Laboratory (CRL) hasthe use of Longman's LDOCE English dictionary,which is realistic in size, prov\]des comprehensive syn-tactic information and also has its semantic entriesboth syntactically and semantically restricted, and lim-ited to a 2000 word vocabulary.
We plan to implementthe Semantic Dictionary master by providing each ofthe semantic dictionary handlers with a portion ofLDOCE.After the initial implementation of the designedparallel parser, we would like to see how W\]lksianPreference Semantics \[Wilks 75, Wilks et al85\] can berealized in our parser in the sense that one or morereadings (in the case of genuine ambiguity) can beselected by weighting the competing interpretations.We are also investigating a parallel parsing modelwhich is driven by semantics, rather than syntax.
Wehave in mind that  the role of the sentence master inthis case is purely semantic and that syntax is usedonly to help the segmentation of the input string.Comparison of the two systems would be of greatinterest o us.
Eventually, we also want to consider theincorporation of pragmatlcs into the system.6.
AcknowledgementsWe would like to thank the Natural Languagegroup at the CRL, namely Yorick Wilks, Jerry Ball,Sharon Dorfman, David Furwell, Dan Fuss, ChengmingGuo, and Sylvia Candeluria de Rain, for their com-ments and suggestions.
We also thank Ted Dunningfor his many helpful discussions.7.
ReferencesCharniak, E. (1983) "Passing markers: a theory ofcontextual influence in language comprehension," Cog-nition Science, 1983, 7, 171-190.Eiselt ,  K .P .
(1985) "A parallel-process model of on-line inference processing," Proceedings of InternationalJoint Conference on Artificial Intelligence, Los Angles,CA.Huang, X-M.  (1985) "Machine translation in theSDCG formalism," Proceedings of the Conf.
onTheoretical and Methodological Issues in MachineTranslation of Natural Languages, Colgate University,New York.
*The system will never invoke the black-sheep roces-SOl" unless the sentence contains four or more conjoinedsentences or a parenthetical sentence with three ormore eonjunets m it.
In these eases the black-sheepprocessor is used only for the recursive calls which can-not be handled by the system.Intel, Corp. (1985) iPSC Data Sheet, Intel ScientificCoinputers~ Oregon.Katz, J.
& Fodor~ J.
(1.963) "The structure or asemantic bheolT," Language 39, pp.170-210.Pereira, F. & Warren,  D. (1980) "Definite elausegrammars for language analysis - a survey of the for-malism and a comparison with augmented transitionnetworlcs," ArtificialIntelligence, 13:231-278.Waltz, David L. Sz Pollack, Jordan B.
(1985)M,'~ssively parallel parsing: a sl, rongly interactivemodel of natural language inberpretaiton," mimeo.Wilks, Y.A.
(1975) "Preference semantics," Keenan(ed), Formal Semantics o\] Natural Language, Cam-bridge University Press, London.
~.
,,Wilks, Y., Huang, X-M. and Fass, D. (198o) Syn-tax, preference and right attachment,' Proceedings o\]IJCAI85, UCLA, Los Angeles.Winograd~ T. (1972) Understanding NaturalLanguage, Academic Press, New York.145
