Second Joint Conference on Lexical and Computational Semantics (*SEM), Volume 2: Seventh International Workshop on SemanticEvaluation (SemEval 2013), pages 543?548, Atlanta, Georgia, June 14-15, 2013. c?2013 Association for Computational LinguisticsSerendio: Simple and Practical lexicon based approach to SentimentAnalysisPrabu Palanisamy, Vineet Yadav and Harsha ElchuriSerendio Software Pvt LtdGuindy, Chennai 600032, India{prabu, vineet, harsha}@serendio.comAbstractThis paper describes the system developed bythe Serendio team for the SemEval-2013 Task2 competition (Task A).
We use a lexiconbased approach for discovering sentiments.Our lexicon is built from the Serendio tax-onomy.
The Serendio taxonomy consists ofpositive, negative, negation, stop words andphrases.
A typical tweet contains word varia-tions, emoticons, hashtags etc.
We use prepro-cessing steps such as stemming, emoticon de-tection and normalization, exaggerated wordshortening and hashtag detection.
After thepreprocessing, the lexicon-based system clas-sifies the tweets as positive or negative basedon the contextual sentiment orientation of thewords.
Our system yields an F-score of 0.8004on the test dataset.1 IntroductionSocial media websites like Twitter, Facebook etc.are a major hub for users to express their opinionsonline.
On these social media sites, users post com-ments and opinions on various topics.
Hence thesesites become rich sources of information to mine foropinions and analyze user behavior and provide in-sights for:?
User behavior?
Product feedback?
User intentions?
Lead generationBusinesses spend an enormous amount of timeand money to understand their customer opinionsabout their products and services.
Thus SentimentAnalysis has become a hot research area since 2002.Sentiment Analysis is used to determine sentiments,emotions and attitudes of the user.
The text used foranalysis can range from big document (e.g.
Productreviews from Amazon, blogs) to small status mes-sage (e.g.
Tweets, Facebook comments).
In this pa-per, we confine to Twitter data i.e classify a tweet tohave a positive, negative or neutral sentiment.The rest of the paper is organized as follows.
InSection 2, we study relevant previous work on Sen-timent Analysis on Twitter data.
In Section 3, wedescribe each processing step of our approach in de-tail.
In Section 4, we experiment with the trainingand the lexicon.
In Section 5, we report and evaluatethe final result obtained from the test data publishedby the SemEval team.
In Section 6, we present ourconclusions and outline our future work.2 Related WorkSentiment Analysis on raw text is a well knownproblem.
The Liu (2012) book covers the entirefield of Sentiment Analysis.
Sentiment Analysis canbe done using Machine learning or a Lexicon-basedapproach.
We use our lexicon based approach in ourstudy.
The rest of the paper is confined to Lexiconbased approach2.1 Lexicon based approachThe lexicon based approach is based on the assump-tion that the contextual sentiment orientation is the543sum of the sentiment orientation of each word orphrase.
Turney (2002) identifies sentiments basedon the semantic orientation of reviews.
(Taboada etal., 2011; Melville et al 2011; Ding et al 2008)use lexicon based approach to extract sentiments.Sentiment Analysis on microblogs is more chal-lenging compared to longer discourses like reviews.Major challenges for microblog sentiment analysisare short length status message, informal words,word shortening, spelling variation and emoticons.Sentiment Analysis on Twitter data have been re-searched by (Bifet and Frank, 2010; Berming-ham and Smeaton, 2010; Pak and Paroubek, 2010).We use our lexicon based approach to extract sen-timents.
The open lexicon such as Sentiword-net (Esuli and Sebastiani, 2006; Baccianella etal., 2010), Q-wordnet (Agerri and Garc?
?a-Serrano,2010), WordNet-Affect (Strapparava and Valitutti,2004) are developed for supporting Sentiment Anal-ysis.
Studies have been made on preprocessingtweets.
Han and Baldwin (2011) used a classi-fier to detect word variation and match the relatedword.
Kaufmann and Kalita (2010) gives the fullpreprocessing approach to convert a tweet to normaltext.
Sentiment Analysis on Twitter data is not con-fined to raw text.
Analyzing Emoticons have beenan interesting study.
Go et al(2009) used emoti-cons to classify the tweets as positive or negativeand train standard classifiers such as Naive Bayes,Maximum Entropy, and Support Vector Machines.Hashtag may have some sentiment in it.
Davidovet al(2010) used 50 hashtags and 15 emoticons assentiment labels for classification to allow diversesentiment types for the tweet.
Negation and inten-sifier play an important role in Sentiment Analysis.Negation word can reverse the polarity, where as in-tensifier increases sentiment strength.
Taboada etal.
(2011) studied role of the intensifier and negationin the lexicon based Sentiment Analysis.
Wiegandet al(2010) survey the role of negation in SentimentAnalysis.3 Serendio ApproachSerendio sentiment engine extracts and analyzessentiments for a given product and feature set.Serendio sentiment engine currently works for eightdifferent domains such as banking, tablets, smart-phones, televisions, apparel, gaming, automobilesand e-readers.
In this section, we will introduceSerendio?s Sentiment engine and the enhancementsthat were made to handle the SemEval Task 2, TaskA - Contextual Polarity Disambiguation (Wilson etal., 2013).
The main steps of our approach are ex-plained in detail in the subsections.3.1 Creation of lexiconThe lexicon can be created either manually(Taboada et al 2011; Tong et al 2001) or expand-ing automatically from a seed of words (Kanayamaet al 2006; Kaji and Kitsuregawa, 2007; Turney,2002; Turney and Littman, 2003).
In our study, thelexicon is manually created.
It is a one time process.Two types of lexicons are created.Common lexicon: This contains data that wouldhave the same semantic meaning or sense across dif-ferent domains and categories.?
Common or default sentiment words.
Posi-tive and Negative sentiment words that have thesame sentiment value or sense across differentdomains.
For e.g.
sentiment word ?good?
al-ways represents a positive sentiment and it isindependent of any category.
Positive or Nega-tive sentiment words have a sentiment score of+1 or -1 to indicate the respective polarity.?
Negation Words.
Negation words are thewords which reverse the polarity of sentiment.For example, ?The battery life is not good?
hasnegative sentiment?
Blind Negation Words.
In the sentence, ?TheT.V needs a better remote?, ?needs?
is a blindnegation word.
Blind negation words operateat a sentence level and points out the absenceor presence of some sense that is not desired ina product feature.?
Split words.
Split words are the words usedfor splitting sentences into clauses.
The splitwords list consists of conjunctions and punc-tuation marks.
For example the complex sen-tence, ?Camera is good but the battery is bad?is split into two clauses ?Camera is good?
and?Battery is bad?.544Category specific lexicon: Category specific lex-icon contains the (1) Product Catalog which iden-tifies all the products that we are interested in.
(2)Feature Catalog which is a list of attributes that theproduct has.
This enables the Serendio engine to doanalysis at the feature level.
(3) Sentiment words(positive and negative) that are specific to the cate-gory.
For example, for a category such as Televi-sions, a product would be Samsung TV.
The featurewould be LCD screen and the word ?glare?
wouldbe the category specific negative sentiment word.The semeval task 2 contains Twitter data that can-not be pinned to any specific category.
So for thistask, only the common lexicon was used.3.2 PreprocessingA typical tweet contains word variations, emoticons,hashtags etc.
The objective of the preprocessing stepis to normalize the text into an appropriate form toextract the sentiments.
Below are the preprocessingsteps used.?
POS Tagging.
POS Tagger gives part ofspeech tag associated with words.
POS taggingis done using NLTK (Bird, 2006).?
Stemming.
Stemmer gives the stem word.Serendio lexicon contains stem words only.
Sonon stem words are stemmed and replaced withstem words.
For example, words like ?loved?,?loves?, ?loving?, ?love?
are replaced with ?lov?.This would aid the engine to do the word matchfrom the text to the lexicon.
Stemming is doneusing NLTK?
Exaggerated word shortening.
Words whichhave same letter more than two times and notpresent in the lexicon are reduced to the wordwith the repeating letter occurring just once(Kouloumpis et al 2011).
For example, theexaggerated word ?NOOOOOO?
is reduced to?NO?.?
Emoticon detection.
Emoticon has some sen-timent associated with it.
Twitter NLP (Ritteret.
al , 2011; Ritter et.
al , 2012) is used toextract emoticons along with the sentiments inthe Twitter data.?
Hashtag detection.
The hashtag is a topic ora keyword that is marked with a tweet.
Hash-tag is a phrase starting with # with no spacebetween them.
Hashtags are identified and sen-timents are extracted from them.3.3 Sentiment calculationSentiment calculation is the aggregation of the sumof the sentiment bearing entities of the tweet.
Enti-ties can be text, emoticons and hashtags.
The sen-timent calculation algorithm is shown in Algorithm1.
The sentiment calculation is based on a set ofheuristics built on the sentiment orientation of thewords.
Blind negation words are extracted from thesentence.
The presence of the blind negation wordsindicate negative sentiment.
If the sentence containsa blind negation word then other steps are skippedand sentiment is blindly assigned as negative.
Next,sentiment words are extracted.
The sentiment po-larity of the word can be changed due to negationwords that occur in proximity (2 word distance).If a sentiment word is not present, then the senti-ment negation word becomes additive to the neg-ative sentiment list.
The sentence ?I can not dealit?
has the negation word ?not?
and it does not con-tain a sentiment word.
So the negation word justgets added to the negative sentiment word.
Senti-ments from emoticons are extracted with the helpof Twitter NLP.
Sentiment words within the hash-tag are extracted by python regex functions.
For ex-ample, from the hashtag ?#ihateu?, the word ?hate?is extracted as a sentiment word.
The sentiment ofthe tweet is aggregated as the sum of the sentimentsfrom all the entities.4 Experimental DataThe training data consist of real time tweets.
9451subjective expressions are marked from all thetweets and are labeled as positive or negative or neu-tral.
The average number of words of the markedsubjective expression is around 2 to 3 words.
Thecommon dictionary that is constructed is shown inTable 2.
The Serendio sentiment engine is run onthe training data set.
We identify the correct senti-ment of the the phrases which are misclassified asneutral, we include the phrases in our lexicon withtheir appropriate sentiments.545Algorithm 1: Sentiment CalculationData: Preprocessed Twitter dataResult: Output: Positive, Negative, NeutralFind the list of sentiment words SentiList, itsposition in the sentence;Find the list of sentiment negation wordsSentiNegat, its position in the sentence;Find the list of blind negation wordsBlindNegat, its position in the sentence;if BlindNegat thenreturn negativity;elseif SentiList and SentiNegat thenforeach word in the SentiList doif word is atmost the distance of 2from SentiNegat thenRevert the polarity of the word;endendelseif SentiNegat thenAdd the SentiNegat to thenegative SentiList;endendendSentiSum=0;foreach word in the SentiList doSentiSum=SentiSum+sentiment ofword;endif Hashtag is present thenFind all the sentiment words in hash tagusing regex matching and add them toSentiListendif Emoticon is present thenFind sentiment of the emoticon and addemoticon,it?s sentiment to SentiListendSentiType=?neutral?
;if SentiSum > 0 thenSentiType=?positive?
;endif SentiSum < 0 thenSentiType=?negative?
;endreturn SentiType;Table 1: Training DataSentiment type Expression countPositive 5865Negative 3120Neutral 466Table 2: Lexicon DetailsData type CountBlind Negation word 7Negation 13Positive sentiment word 1260Negative sentiment word 1703Split word 165 Result and DiscussionOur sentiment engine performed reasonably well.Please see Table 3 for Precision and Recall measure-ments.
The recall rates are lower because of our lexi-cons lack of coverage of all the sentiment words.
In-formal language of tweets posed another challengefor identifying negative sentiments.
For example,swear words such as ?sh*t?
and ?f**k?
are generallyconsidered as negative sentiment words.
Phrasessuch as ?This sh*t is good?
and ?F**king awesome?were identified as negative sentiments when in factthey were expressing positive sentiments.Table 3: ResultsPOSITIVE NEGATIVEPRECISION 0.9361 0.8884RECALL 0.7132 0.7912The Serendio lexicon that we used has sentimentwords with a sentiment attached to it.
By integrat-ing with a lexical source such as Sentiwordnet, wefeel we could get a more nuanced word sense dis-ambiguation.
For example, the word ?good?
is con-sidered to have positive polarity.
According to Sen-tiwordnet 3.0, good as an adjective has 21 differentsenses with different sentiments.
For example, thesentiment word ?good?
in the phrase ?A good milefrom here?
gives an objective sense, not in a positivesense.5466 ConclusionIn this paper we presented our system that we usedfor the SemEval-2013 Task 2 for doing SentimentAnalysis for Twitter data.
We got an F-score of0.8004 on the test data set.We presented a lexicon based method for Senti-ment Analysis with Twitter data.
We provided prac-tical approaches to identifying and extracting sen-timents from emoticons and hashtags.
We also pro-vided a method to convert non-grammatical words togrammatical words and normalize non-root to rootwords to extract sentiments.A lexicon based approach is a simple, viable andpractical approach to Sentiment Analysis of Twitterdata without a need for training.
A Lexicon basedapproach is as good as the lexicon it uses.
To achievebetter results, word sense disambiguation should becombined with the existing lexicon approach.7 AcknowledgmentsWe would like to thank the organizers of SemEval2013.
We also would like to express our gratitude tothe various reviewers for their encouragement andpositive feedback.ReferencesRodrigo Agerri and Ana Garc??a-Serrano.
2010.
Q-WordNet: Extracting polarity from WordNet senses.Seventh Conference on International Language Re-sources and Evaluation, Malta.Stefano Baccianella, Andrea Esuli and Fabrizio Sebas-tiani.
2010.
Sentiwordnet 3.0: An enhanced lexi-cal resource for sentiment analysis and opinion min-ing.
Proceedings of the 7th conference on Interna-tional Language Resources and Evaluation (LREC10),Valletta, Malta, May.Adam Bermingham and Alan F Smeaton.
2010.
Clas-sifying sentiment in microblogs: is brevity an advan-tage?
Proceedings of the 19th ACM international con-ference on Information and knowledge management1833?1836, ACM.Albert Bifet and Eibe Frank.
2010.
Sentiment knowl-edge discovery in twitter streaming data.
DiscoveryScience 1?14, Springer.Steven Bird.
2006.
NLTK: the natural language toolkit.Proceedings of the COLING/ACL on Interactive pre-sentation sessions 69?72, Association for Computa-tional Linguistics.Kushal Dave, Steve Lawrence and David M Pennock.2003.
Mining the peanut gallery: Opinion extractionand semantic classification of product reviews.
Pro-ceedings of the 12th international conference on WorldWide Web 519?528, ACM.Dmitry Davidov, Oren Tsur and Ari Rappoport.
2010.Enhanced sentiment learning using twitter hashtagsand smileys.
Proceedings of the 23rd InternationalConference on Computational Linguistics 241 ?249,Association for Computational Linguistics.Xiaowen Ding, Bing Liu and Philip S Yu.
2008.
Aholistic lexicon-based approach to opinion mining.Proceedings of the international conference on Websearch and web data mining 231?240, ACM.Andrea Esuli and Fabrizio Sebastiani.
2006.
Sentiword-net: A publicly available lexical resource for opinionmining.
Proceedings of LREC Volume 6, 417?422.Alec Go, Richa Bhayani and Lei Huang.
2009.
Twit-ter sentiment classification using distant supervision.CS224N Project Report, Stanford 1?12.Bo Han and Timothy Baldwin.
2011.
Lexical normal-isation of short text messages: Makn sens a# twitter.Proceedings of the 49th Annual Meeting of the Asso-ciation for Computational Linguistics: Human Lan-guage Technologies Volume 1 , 368?378.Nobuhiro Kaji and Masaru Kitsuregawa.
2007.
Buildinglexicon for sentiment analysis from massive collectionof HTML documents.
Proceedings of the joint confer-ence on empirical methods in natural language pro-cessing and computational natural language learning(EMNLP-CoNLL) 1075?1083, Association for Com-putational Linguistics.Hiroshi Kanayama and Tetsuya Nasukawa.
2006.
Fullyautomatic lexicon expansion for domain-oriented sen-timent analysis.
Proceedings of the 2006 Conferenceon Empirical Methods in Natural Language Process-ing 355?363,Association for Computational Linguis-tics.Max Kaufmann and Jugal Kalita.
2010.
Syntactic nor-malization of Twitter messages.
International Con-ference on Natural Language Processing Kharagpur,India.Efthymios Kouloumpis, Theresa Wilson and JohannaMoore.
2011.
Twitter sentiment analysis: The goodthe bad and the omg.
Proceedings of the Fifth Interna-tional AAAI Conference on Weblogs and Social Media538?541.Bing Liu.
2008 Sentiment analysis and opinion mining.Synthesis Lectures on Human Language Technologies,1?167,Morgan & Claypool Publishers.Prem Melville, Wojciech Gryc and Richard D Lawrence.2011.
Sentiment analysis of blogs by combining lex-ical knowledge with text classification.
Proceedings547of the 15th ACM SIGKDD international conferenceon Knowledge discovery and data mining, 1275?1284,ACM.Alexander Pak and Patrick Paroubek.
2010.
Twitter asa corpus for sentiment analysis and opinion mining.Proceedings of LREC, Volume 2010.Bo Pang and Lillian Lee.
2008.
Opinion mining andsentiment analysis.
Foundations and trends in infor-mation retrieval Volume 2 number 1-2, 1?135, NowPublishers Inc.Bo Pang, Lillian Lee and Shivakumar Vaithyanathan.2002.
Thumbs up?
: sentiment classification using ma-chine learning techniques.
Proceedings of the ACL-02conference on Empirical methods in natural languageprocessing Volume 10, 79?86, Association for Compu-tational Linguistics.Ellen Riloff, Janyce Wiebe and Theresa Wilson.
2003.Learning subjective nouns using extraction patternbootstrapping.
Proceedings of the seventh conferenceon Natural language learning at HLT-NAACL 2003-Volume 4 25?32, Association for Computational Lin-guistics.Alan Ritter, Sam Clark, Mausam and Oren Etzioni.
2011.Named Entity Recognition in Tweets: An Experimen-tal Study.
EMNLP.Alan Ritter, Mausam, Oren Etzioni, Sam Clark.
2012.Open Domain Event Extraction from Twitter.
KDD.Carlo Strapparava and Alessandro Valitutti.
2004.WordNet-Affect: an affective extension of WordNet.Proceedings of LREC 1083?1086.Maite Taboada, Julian Brooke, Milan Tofiloski, KimberlyVoll and Manfred Stede.
2011.
Lexicon-based meth-ods for sentiment analysis.
Computational linguistics,volume 37, number2, 267?307, MIT Press.Richard M Tong 2001.
An operational system for detect-ing and tracking opinions in on-line discussions.
InWorking Notes of the ACM SIGIR 2001 Workshop onOperational Text Classification 1?6,New York, NY.Peter Turney and Michael Littman.
2003.
Measuringpraise and criticism: Inference of semantic orientationfrom association.
ACM Transactions on InformationSystems 21(4):315?346.Peter Turney.
2002.
Thumbs up or thumbs down?
: se-mantic orientation applied to unsupervised classifica-tion of reviews.
Proceedings of the 40th annual meet-ing on association for computational linguistics, 417?424, Association for Computational Linguistics.Michael Wiegand, Alexandra Balahur, Benjamin Roth,Dietrich Klakow, Andre?s Montoyo.
2010.
A surveyon the role of negation in sentiment analysis.
Pro-ceedings of the workshop on negation and speculationin natural language processing 60?68, Association forComputational Linguistics.Theresa Wilson, Zornitsa Kozareva, Preslav Nakov, AlanRitter, Sara Rosenthal and Veselin Stoyonov.
2013.SemEval-2013 Task 2: Sentiment Analysis in Twitter.Proceedings of the 7th International Workshop on Se-mantic Evaluation Association for Computation Lin-guistics.548
