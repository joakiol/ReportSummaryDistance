THE SRI TIPSTER II PROJECTSteven MaioranoOffice of  Research & DevelopmentWashington,  D.C. 20505E-mail:  smaioran@ord.govTelephone: 703-351-2701IntroductionThe SRI TIPSTER Phase II program focused onsupporting the development of an integratedarchitecture by helping to define the TIPSTERarchitecture and improving the portability of dataextraction applications by enabling users to define andtailor their own information eeds.Architecture SupportSRI participated in the Architecture WorkingGroup (AWG) meetings and aided in the design,testing, and implementation of the TIPSTERdocument manager architecture.
Their contributionsconcerned input on the nature of basic entities, suchas documents and text segments, and ways ofcommunicating information from extraction modulesto other modules in order to allow extraction anddetection modules to work together.
Subsequent tothis design work, SRI made their FASTUSinformation extraction system compliant with theTIPSTER architecture, and integrated it with the NewMexico State University implementation of thearchitecture that was demonstrated at the Tipster 12-month workshop in May 1995.
Also incorporatedinto this demo were three processing modules of thegeneric FASTUS system: name finder, phrase finder,and table recognizer.The Generic SystemGeneric information extraction (IE) systemstoday adequately identify in text basic entities uch ascompanies, personal names, and places.
Thisperformance promises that information extractiontechnology will becomes more widely utilized in real-world environments \[1\].
The main obstacle todeployment immediately is that generic systems mustThis material has been reviewed by the CIA.
That review neither \]constitutes CIA authentication of information nor implies CIA I l endorsement of the author's views.improve to the point where they can recognize otherentities as specified by users who are not developersor computational linguists.
SRI has been focusingits research efforts on developing the domainportability tools necessary for users to customizegeneric IE and capture previously unidentified entitiesin text.The MUC-6 evaluation in November 1995provided a good framework for testing theeffectiveness of SRI's customization tools.
SRI'sexcellent results indicate that their approach is on theright track.
On both the Named Entity andCoreference Resolution Tasks, the FASTUS systemwas one of the top performers.
The MUC-6 ScenarioTemplate Task provided and even more rigorous testof SRI's domain transportability strategy sinceparticipants had only a month to achieve a high levelof performance \[2\].Support of TransportabilityTwo of the key elements in support oftransportability are major SRI research areas:FastSpec and metarules \[3\].The first area of research in support oftransportability and user customization was thedevelopment of the pattern specification languageFastSpec.
This language allows one to definepatterns for the FASTUS system in a convenientway.
SRI also succeeded in accelerating FastSpec'scompile time which had positive impact ondevelopment time in implementing domain-specificapplications uch as the MUC-6 dry run and testscenarios of labor negotiations and managementsuccession.
FastSpec is one of the influences onstandardizing a community-wide pattern specificationlanguage.55The second key area of research in support oftransportability was the implementation f compile-time transformations.
These are metarules that allowthe user to specify the simple domain-relevantsubject-verb-object (S-V-O) patterns and have thesystem expand them into all the linguistic variantswith the same semantic ontent including passives,gerunds, infinitives, and relative clauses.
E.g.,variations such as "cars are manufactured byGM" and"GM is to manufacture cars" can be generatedautomatically by the simple active S-V-O pattern"GM manufactures cars."
Implementation f thesemetarules enabled SRI to bring the FASTUS systemup to a high level of performance in a matter of daysfor the MUC-6 evaluation.Ongoing Work and FutureDirectionsFastSpec and metarules constitute the basis forongoing efforts to improve system transportabilityand customization further.
SRI is developing anarchitecture for learning rules by example where, in ahighly developed grammar, a constrained version ofthe rule -- or metarule -- is generated from a user'sannotations; for relatively undeveloped grammars,simple S-V-O patterns are recognized in annotationsand corresponding variant patterns are generated.
Inshort, the goal is to have the system "observe" usersand learn from their annotations rules of maximumgenerality from the minimum number of examples.References\[1\] Hobbs, J. R., Appelt, D. E., Bear, J., Israel, D.,Kameyama, M., Stickel, M. and Tyson, M.;"FASTUS: A Cascaded Finite-State Transducer forExtracting Information from Natural-Language Text;"in Roche, E. and Schabes, Y., eds.
; Finite-StateDevices for Natural Language Processing; MIT Press;Cambridge, Mass.
; 1996.\[2\] Appelt, D. E., Hobbs, J. R., Bear, J., Israel, D.,Kameyama, M., and Tyson, M.; "SRI InternationalFASTUS System MUC-6 Results and Analysis;" inProceedings of Sixth Message UnderstandingConference (MUC-6); Columbia, Maryland;November 1995.\[3\] Hobbs, J. R., Appelt, D. E., Bear, J., Israel, D.,Kameyama, Kehler, A., M., Stickel, M. and Tyson,M.
; "SRI's Tipster H Project;" in this volume.56
