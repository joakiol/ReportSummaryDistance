Automatic Predicate Argument Analysis of the Penn TreeBankMartha Palmer, Joseph Rosenzweig and Scott CottonCIS Department, University of Pennsylvania{mpalmer,josephr,cotton}@linc.cis.upenn.edu1.
INTRODUCTIONOne of the primary tasks of InformationExtraction is recognizing all of the different guisesin which a particular type of event can appear.
Forinstance, a meeting between two dignitaries can bereferred to as A meets B or A and B meet, or ameeting between A and B took place/washeld/opened/convened/finished/dragged on or Ahad/presided over a meeting/conference with BThere are several different lexical items that canbe used to refer to the same type of event, andseveral different predicate argument patterns that canbe used to specify the participants.
Correctlyidentifying the type of the event and the roles of theparticipants is a critical factor in accurateinformation extraction.
In this paper we refer to thespecific subtask of participant role identification aspredicate argument tagging.
The type of syntacticand semantic information associated with verbs inLevin?s Preliminary Classification of English verbs,[Levin,93] can be a useful resource for an automaticpredicate argument tagging system.
For instance, the?meet?
class includes the following members, meet,consult, debate and visit, which can all be used torefer to the meeting event type described above.
Inaddition, the following types of syntactic frames areassociated with these verbs:A met/visited/debated/consulted BA met/visited/debated/consulted with B.A and B met/visited/debated/consulted(with each other).This type of frame information can be specifiedat the class level, but there is always a certainamount of verb-specific information that must stillbe associated with the individual lexical items, suchas sense distinctions.
For the purposes of this paperwe will only be considering sense distinctions basedon different predicate argument structures.
Webegin by giving more information about the Levinclasses and then describe the system thatautomatically labels the arguments in a predicateargument structure.
We end by giving the results ofevaluating this system versus human annotatorsperforming the same task.
Our input to the tagger isthe Penn TreeBank [Marcus, 94], so the sentencesalready have accurate syntactic parses associatedwith them.2.
LEXICON GUIDELINESAs mentioned above, Levin classes provide thetheoretical underpinnings for many of our choicesfor basic predicate-argument structures [Levin, 93].Levin verb classes are based on the ability of a verbto occur or not occur in pairs of syntactic frames thatare in some sense meaning preserving (diathesisalternations).
The distribution of syntactic frames inwhich a verb can appear determines its classmembership.
The sets of syntactic frames associatedwith a particular Levin class are not intended to bearbitrary, and they are supposed to reflect underlyingsemantic components that constrain allowablearguments.
For example, break verbs and cut verbsare similar in that they can all occur as transitivesand in the middle construction, John broke thewindow, Glass breaks easily, John cut the bread,This loaf cuts easily.
However, only break verbs canalso occur in the simple intransitive, The windowbroke, *The bread cut.
Notice that for all of theseverbs, the subject of the intransitive, The windowbroke, plays the same role as the object of thetransitive, John broke the window.
Our goal is tocapture this by using consistent argument labels, inthis case Arg1 for the window in both sentences.
So,for example, shake and rock would get the followingannotation:The earthquake  shook  the building.Arg0     REL Arg1The walls shook;Arg1 RELthe building rocked.Arg1  RELVerbNet In a related project funded by NSF,NSF-IIS98-00658, we are currently constructing alexicon, VerbNet, that is intended to overcome someof the limitations of WordNet, an on-line lexicaldatabase of English, [Miller, 90], by addressingspecifically the needs of natural language processingapplications.
This lexicon exploits the systematiclink between syntax and semantics that motivates theLevin classes, and thus provides a clear and regularassociation between syntactic and semanticproperties of verbs and verb classes, [Dang, et al 98,00, Kipper, et al 00].
Specific sets of syntacticconfigurations and appropriate selectionalrestrictions on arguments are associated withindividual senses.
This lexicon gives us a firstapproximation of sense distinctions that are reflectedin varying predicate argument structures.
As suchthese entries provide a suitable foundation fordirecting consistent predicate-argument labeling oftraining data.The senses in VerbNet are in turn linked toone or more WordNet senses.
Since our focus ispredicate-argument structure, we can rely onrigorous and objective sense distinction criteriabased on syntax.
Purely semantic distinctions,such as those made in WordNet, are subjectiveand potentially unlimited.
Our senses aretherefore much more coarse-grained thanWordNet, since WordNet senses are purelysemantically motivated and often cannot bedistinguished syntactically.
However, somesenses that share syntactic properties can still bedistinguished clearly by virtue of differentselectional restrictions, which we will also beexploring in the NSF project.3.
AUTOMATIC EXTRACTION OFPREDICATE-ARGUMENTRELATIONS FROM PARSEDCORPORAThe predicate-argument analysis of a parse treefrom a corpus such as the Treebank corpus isperformed in three main phases.
First, root forms ofinflected words are identified using a morphologicalanalyzer derived from the WordNet stemmer andfrom inflectional information in machine-readabledictionaries such as the Project Gutenberg version ofWebster.
Also in this phase, phrasal items such asverb-particle constructions, idioms and compoundnominals are identified.
An efficient matchingalgorithm is used which is capable of recognizingboth continuous and discontinuous phrases, andphrases where the order of words is not fixed.
Thematching algorithm makes use of hierarchicaldeclarative constraints on the possible realizations ofphrases in the lexicon, and can exploit syntacticcontextual cues if a syntactic analysis of the input,such as the parse tree structure of the Treebank, ispresent.
In the next phase, the explicit antecedents ofempty constituents are read off from the Treebankannotation, and gaps are filled where implicitlinkages have been left unmarked.
This is done byheuristic examination of the local syntactic contextof traces and relative clause heads.
If no explicitmarkings are present (for automatically generatedparses or old-style Treebank parses), they areinferred.
Estimated accuracy of this phase of thealgorithm is upwards of 90 percent.Finally, an efficient tree-template patternmatcher is run on the Treebank parse trees, toidentify syntactic relations that signal a predicate-argument relationship between lexical items.
Thepatterns used are fragmentary tree templates similarto the elementary and auxiliary trees of a TreeAdjoining Grammar [XTAG, 95].
Each templatetypically corresponds to a predication over one ormore arguments.
There are approximately 200templates for: transitive, intransitive and ditransitiveverbs operating on their subjects, objects andindirect objects; prenominal and predicateadjectives, operating on the nouns they modify;subordinating conjunctions operating on the twoclauses that they link; prepositions; determiners; andso on.
The templates are organized into a compactnetwork in which shared substructures need to belisted only once, even when they are present in manytemplates.Templates are matched even if they are notcontiguous in the tree, as long as the interveningmaterial is well-formed.
This allows a transitivetemplate for example to match a sentence wherethere is an intervening auxiliary verb between thesubject and the main transitive verb, as in He wasdropping it.
The mechanism for handling such casesresembles the adjunction mechanism in TreeAdjoining Grammar.Tree grammar template for progressive auxiliaryverb, licensing discontinuity in main verb treeWhen a template has been identified, it isinstantiated with the lexical items that occur in itspredicate and argument positions.
Each template isassociated with one or more annotated template sets,by means of which it is linked to a bundle ofthematic or semantic features, and to a class oflexical items that license the template?s occurrencewith those features.
For instance, if the template isan intransitive verb tree, it will be associated bothwith an unergative feature bundle, indicating that itssubject should have the label Arg0, and also with anunaccusative bundle where the subject is marked asArg1.
Which of the feature bundles gets useddepends   on  the   semantic    class of the word   thatRecognition of progressive auxiliary tree whichmodifies and splits transitive-verb tree for dropin Treebank corpusappears in the predicate position of the template.
Ifthe predicate is a causative verb that takes theunaccusative alternation, the subject will be assignedthe Arg1 label.
If however it is a verb of creation, forexample, the subject will be an Arg0.
The verbsemantics that inform the predicate-argumentextractor are theoretically motivated by the Levinclasses [Levin, 93], but the actual lexicalinformation it uses is not derived from Levin?s work.Rather, it draws on information available in theWordNet 1.6 database [Miller, 90] and on framecodes are derived from the annotation scheme usedin the Susanne corpus [Sampson, 95].For example, one entry for the verb developspecifies its WordNet synset membership, andindicates its participation in the unaccusativealternation with the code o_can_become_sdevelop SF:so_N_N+W:svJ3W_W:svIM2+o_can_become_sThe prefix SF: signifies that this is a frame codederived from the Susanne corpus.
Each frame codepicks out a lexical class of the words that take it, andthe frame codes are organized into an inheritancenetwork as well.
The frame codes in turn are linkedto annotated template sets, which describe how theseframes can actually appear in the syntacticbracketing format of the TreeBank.
In the case of theabove frame code for an alternating transitive verb,two template sets are linked: TG:V_so_N_N for theframe with a subject and an object (here notated withs and o); and TG:V_s_N+causative, for theunaccusative frame.
Each of the template sets liststree-grammar templates for all the variations ofsyntactic structure that its corresponding frame maytake on.
A template for the canonical structure of asimple declarative sentence involving that frame willbe present in the set, but additional templates will beadded for the forms the frame takes in relativeclauses, questions, or passive constructions.The features for each set are listed separatelyfrom the templates, with indications of where theyshould be interpreted within the various templatestructures.
Hence the template setTG:V_s_N+causative includes the featureTGC:subject+print_as=TGPL:arg1 as part ofits feature bundle.
This serves to associate the labelArg1 with the subject node in each template in theset.
When the predicate-argument extractor is able toinstantiate such a template, thereby connecting itssubject node with a piece of a TreeBank tree, itknows to print that piece of the tree as Arg1 of thepredicate for that template.
If another annotatedfeature set were active instead, for instance in a casewhere the predicate of the template does not belongto a verb class which licenses the unaccusative framecode and its associated annotated template set(TG:V_s_N+causative), the label of the subjectmight be different.4.
EVALUATIONThe current implementation of the tagger assignspredicate argument structures to all of the 6500verbs that occur in the Penn Treebank.
However,our evaluation of its accuracy is not yet socomprehensive.
Our first preliminary evaluation ofthe performance of the tagger was based on a 5000word section of the Penn TreeBank.
The tagger wasrun on this, and the argument labeling wassubsequently hand corrected by a linguisticsgraduate student, giving an accuracy rate of 81% outof 160 predicate argument structures.
We have sinceautomatically tagged and hand corrected anadditional 660 predicate argument structures, withan accuracy rate of 86%, (556 structures), giving usa combined accuracy rate of 83.7%.
There are over100 verbs involved in the evaluation.
The numberof possible frames for the verbs in the second testranges from 13 frames to 30, with the typicalnumber being in the teens.
Not all of these framesactually appear in the TreeBank data.These results compare favorably with the resultsreported by Gildea and Jurafsky of 80.7% on theirdevelopment set, (76.9% on the test set.)
Their datacomes from the Framenet project, [Lowe, et al, 97],which has been in existence for several years, andconsisted of over 900 verbs out of 1500 words andalmost 50,000 sentences.
The Framenet project alsouses more fine-grained semantic role labels,although it should be possible to map from ourArg0, Arg1 labels to their labels.
They usedmachine learning techniques applied to humanannotated data, whereas our tagger does notcurrently use statistics at all, and is primarily rule-based.
Once we have sufficient amounts of dataannotated we plan to experiment with hybridapproaches.5.
ACKNOWLEDGEMENTSWe would like to thank Paul Kingsbury andChris Walker for their annotation efforts, andAravind Joshi, Mitch Marcus, Hoa Dang andChristiane Fellbaum for their comments onpredicate-argument tagging as a task.
This work hasbeen funded by DARPA N66001-00-1-8915 andNSF 9800658.6.
REFERENCES[1] Hoa Trang Dang, Karin Kipper, and MarthaPalmer.
Integrating compositional semantics into averb lexicon.
In Proceedings of the EighteenthInternational Conference on ComputationalLinguistics (COLING-2000), Saarbr"ucken,Germany, July-August 2000.
[2] Hoa Trang Dang, Karin Kipper, Martha Palmer,and Joseph Rosenzweig.
Investigating regular senseextensions based on intersective levin classes.
InProceedings of Coling-ACL98, Montreal, CA,August 1998.
[3] Daniel Gildea and Daniel Jurafsky,  AutomaticLabeling of Semantic Roles, In Proceedings of theAssociation for Computational LinguisticsConference, Hong Kong, October, 2000.
[4] Karin Kipper, Hoa Trang Dang, and MarthaPalmer.
Class-based construction of a verb lexicon.In Proceedings of the Seventh National Conferenceon Artificial Intelligence (AAAI-2000), Austin, TX,July-August 2000.
[5] Beth Levin.
English Verb Classes andAlternations A Preliminary Investigation.
1993.
[6] J.B. Lowe, C.F.
Baker, and C.J.
Fillmore.
Aframe-semantic approach to semantic annotation.
InProceedings 1997 Siglex Workshop/ANLP97,Washington, D.C., 1997.
[7] Mitch Marcus.
The penn treebank: A revisedcorpus design for extracting predicate argumentstructure.
In Proceedings of the ARPA HumanLanguage Technology Workshop, Princeton, NJ,March 1994.
[8] G. Miller, R. Beckwith, C. Fellbaum, D. Gross,and K. Miller.
Five papers on wordnet.
TechnicalReport 43, Cognitive Science Laboratory, PrincetonUniversity, July 1990.
[9] Martha Palmer, Hoa Trang Dang, and JosephRosenzweig.
Sense tagging the penn treebank.
InProceedings of the Second Language Resources andEvaluation Conference, Athens, Greece.
[10] The XTAG-Group.
A Lexicalized TreeAdjoining Grammar for English.
Technical ReportIRCS 95-03, University of Pennsylvania, 1995.
