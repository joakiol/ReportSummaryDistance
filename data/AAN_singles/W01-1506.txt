The OLAC Metadata Set and Controlled VocabulariesSteven BirdLinguistic Data ConsortiumUniversity of Pennsylvania3615 Market Street, Suite 200Philadelphia, PA 19104-2608, USAsb@ldc.upenn.eduGary SimonsSIL International7500 West Camp Wisdom RoadDallas, TX 75236, USAGary Simons@sil.orgAbstractAs language data and associatedtechnologies proliferate and as thelanguage resources community rapidlyexpands, it has become difficult tolocate and reuse existing resources.Are there any lexical resources forsuch-and-such a language?
Whattool can work with transcripts inthis particular format?
What is agood format to use for linguistic dataof this type?
Questions like thesedominate many mailing lists, sinceweb search engines are an unreliableway to find language resources.This paper describes a new digitalinfrastructure for language resourcediscovery, based on the Open ArchivesInitiative, and called OLAC ?
theOpen Language Archives Community.The OLAC Metadata Set and theassociated controlled vocabulariesfacilitate consistent description andfocussed searching.
We report progresson the metadata set and controlledvocabularies, describing current issuesand soliciting input from the languageresources community.1 IntroductionLanguage technology and the linguistic sciencesare confronted with a vast array of languageresources, richly structured, large and diverse.Multiple communities depend on languageresources, including linguists, engineers,teachers and actual speakers.
Many individualsand institutions provide key pieces of theinfrastructure, including archivists, softwaredevelopers, and publishers.
Today we haveunprecedented opportunities to connect thesecommunities to the language resources theyneed.
First, inexpensive mass storage technologypermits large resources to be stored in digitalform, while the Extensible Markup Language(XML) and Unicode provide flexible waysto represent structured data and ensure itslong-term survival.
Second, digital publication?
both on and off the world wide web ?
is themost practical and efficient means of sharinglanguage resources.
Finally, a standard resourcedescription model, the Dublin Core Metadata Set,together with an interchange method providedby the Open Archives Initiative (OAI), makeit possible to construct a union catalog overmultiple repositories and archives.In December 2000, an NSF-funded workshopon Web-Based Language Documentation andDescription, held in Philadelphia, broughttogether a group of nearly 100 languagesoftware developers, linguists, and archivistswho are responsible for creating languageresources in North America, South America,Europe, Africa, the Middle East, Asia andAustralia http://www.ldc.upenn.edu/exploration/expl2000/.
The outcomeof the workshop was the founding of the OpenLanguage Archives Community (OLAC), anapplication of the OAI to digital archives oflanguage resources, with the following purpose:OLAC, the Open Language ArchivesCommunity, is an internationalpartnership of institutions andindividuals who are creating aworldwide virtual library of languageresources by: (i) developing consensuson best current practice for the digitalarchiving of language resources,and (ii) developing a network ofinteroperating repositories and servicesfor housing and accessing suchresources.This paper will describe the leading ideasthat motivate OLAC, before focussing onthe metadata set and the controlled vocabularieswhich implement part (ii) of OLAC?s statement ofpurpose.
Metadata elements of special interest tothe language resources community include suchthings as language identification and languageresource type.
The corresponding controlledvocabularies ensure consistent description.For example, French language resources arespecified using an official RFC-3066 designation(Alvestrand, 2001), instead of multiple distincttext strings like ?French?, ?Francais?
and?Franc?ais?.
A separate controlled vocabularyexists for resource type, and has items suchas annotation/phonetic and description/grammar.Services for end-users can map controlledvocabularies onto convenient terminology forany target language.
(A live demonstrationaccompanies this presentation.
)2 Locating Data, Tools and AdviceWe can observe that the individuals who useand create language resources are lookingfor three things: data, tools, and advice.
ByDATA we mean any information that documentsor describes a language, such as a publishedmonograph, a computer data file, or evena shoebox full of hand-written index cards.The information could range in content fromunanalyzed sound recordings to fully transcribedand annotated texts to a complete descriptivegrammar.
By TOOLS we mean computationalresources that facilitate creating, viewing,querying, or otherwise using language data.Tools include not just software programs, but alsoFigure 1: In reality the user can?t always get therefrom herethe digital resources that the programs dependon, such as fonts, stylesheets, and documenttype definitions.
By ADVICE we mean anyinformation about what data sources are reliable,what tools are appropriate in a given situation,what practices to follow when creating new data,and so forth.
In the context of OLAC, the termlanguage resource is broadly construed to includeall three of these: data, tools and advice.Unfortunately, today?s user does not have readyaccess to the resources that are needed.
Figure 1offers a diagrammatic view of the reality.
Somearchives (e.g.
Archive 1) do have a site on theinternet which the user is able to find, so theresources of that archive are accessible.
Otherarchives (e.g.
Archive 2) are on the internet, sothe user could access them in theory, but the userhas no idea they exist so they are not accessible inpractice.
Still other archives (e.g.
Archive 3) arenot even on the internet.
And there are potentiallyhundreds of archives (e.g.
Archive n) that the userneeds to know about.
Tools and advice are outthere as well, but are at many different sites.There are many other problems inherent in thecurrent situation.
For instance, the user may notbe able to find all the existing data about thelanguage of interest because different sites havecalled it by different names (low recall).
Theuser may be swamped with irrelevant resourcesbecause search terms have important meanings inother domains (low precision).
The user may notbe able to use an accessible data file for lack ofbeing able to match it with the right tools.
Theuser may locate advice that seems relevant buthave no basis for judging its merits.2.1 Bridging the gap2.1.1 Why improved web-indexing is notenoughAs the internet grows and web-indexingtechnologies improve one might hope thata general-purpose search engine should besufficient to bridge the gap between peopleand the resources they need, but this is a vainhope.
The first reason is that many languageresources, such as audio files and software, arenot text-based.
The second reason concernslanguage identification, the single most importantproperty for describing language resources.If a language has a canonical name which isdistinctive as a character string, then the userhas a chance of finding any online resourceswith a search engine.
However, the languagemay have multiple names, possibly due to thevagaries of Romanization, such as a languageknown variously as Fadicca, Fadicha, Fedija,Fadija, Fiadidja, Fiyadikkya, and Fedicca (givinglow recall).
The language name may collide witha word which has other interpretations that arevastly more frequent, e.g.
the language namesMango and Santa Cruz (giving low precision).The third reason why general-purpose searchengines are inadequate is the simple fact thatmuch of the material is not, and will not, bedocumented in free prose on the web.
Eitherpeople will build systematic catalogues of theirresources, or they won?t do it at all.
Of course,one can always export a back-end databaseas HTML and let the search engines indexthe materials.
Indeed, encouraging people todocument resources and make them accessibleto search engines is part of our vision.
However,despite the power of web search engines, thereremain many instances where people still preferto use more formal databases to house their data.This last point bears further consideration.
Thechallenge is to build a system for ?bringing likethings together and differentiating among them?
(Svenonius, 2000).
There are two dominantstorage and indexing paradigms, one exemplifiedby traditional databases and one exemplifiedby the web.
In the case of language resources,the metadata is coherent enough to be stored ina formal database, but sufficiently distributedand dynamic that it is impractical to maintain itcentrally.
Language resources occupy the middleground between the two paradigms, neither ofwhich will serve adequately.
A new frameworkis required that permits the best of both worlds,namely bottom-up, distributed initiatives, alongwith consistent, centralized finding aids.
TheDublin Core (DC) and the Open ArchivesInitiative provide the framework we need to?bridge the gap.
?2.1.2 The Dublin Core Metadata InitiativeThe Dublin Core Metadata Initiative began in1995 to develop conventions for resource discov-ery on the web [dublincore.org].
The DublinCore metadata elements represent a broad, inter-disciplinary consensus about the core set of ele-ments that are likely to be widely useful to sup-port resource discovery.
The Dublin Core consistsof 15 metadata elements, where each elementis optional and repeatable: Title, Creator, Subject,Description, Publisher, Contributor, Date, Type, For-mat, Identifier, Source, Language, Relation, Coverage,Rights.
This set can be used to describe resourcesthat exist in digital or traditional formats.In ?Dublin Core Qualifiers?
(DCMI, 2000a)two kinds of qualifications are allowed: encodingschemes and refinements.
An encoding schemespecifies a particular controlled vocabulary ornotation for expressing the value of an element.The encoding scheme serves to aid a client systemin interpreting the exact meaning of the elementcontent.
A refinement makes the meaning of theelement more specific.
For example, a Languageelement can be encoded using the conventionsof RFC 3066 to unambiguously identify thelanguage in which the resource is written (orspoken).
A Subject element can be given alanguage refinement to restrict its interpretationto concern the language the resource is about.2.1.3 The Open Archives InitiativeThe Open Archives Initiative (OAI) waslaunched in October 1999 to provide a commonframework across electronic preprint archives,and it has since been broadened to include digitalrepositories of scholarly materials regardless oftheir type [www.openarchives.org] (Lagoze andde Sompel, 2001).Figure 2: Bridging the gap through communityinfrastructureIn the OAI infrastructure, each participatingarchive implements a repository ?
a networkaccessible server offering public access toarchive holdings.
The primary object in anOAI-conformant repository is called an item,having a unique identifier and being associatedwith one or more metadata records.
Eachmetadata record describes an archive holding,which is any kind of primary resource such asa document, raw data, software, a recording,a physical artifact, a digital surrogate, and soforth.
Each metadata record will usually containa reference to an entry point for the holding, suchas a URL or a physical location, as shown inFigure 2.To implement the OAI infrastructure, aparticipating archive must comply with twostandards: the OAI shared metadata set (DublinCore), which facilitates interoperability acrossall repositories participating in the OAI, and theOAI metadata harvesting protocol, which allowssoftware services to query a repository usingHTTP requests.OAI archives are called ?data providers,?though they are strictly just metadata providers.Typically, data providers will also have asubmission procedure, together with a long-termstorage system, and a mechanism permittingusers to obtain materials from the archive.
AnOAI ?service provider?
is a third party thatprovides end-user services (such as searchfunctions over union catalogs) based on metadataharvested from one or more OAI data providers.Figure 3 illustrates a single service provideraccessing three data providers (using the OAImetadata harvesting protocol).
End-users onlyinteract with service providers.Figure 3: A Service Provider Accessing MultipleData ProvidersOver the past decade, the Linguist List hasbecome the primary source of online informa-tion for the linguistics community, reaching outto over 13,000 subscribers worldwide, and havingfour complete mirror sites.
The Linguist List willbe augmenting its service by hosting the primaryservice provider for OLAC, and permitting end-users to browse distributed language resources ata single place.2.2 Applying the OAI to language resourcesThe OAI infrastructure is a new invention; it hasthe bottom-up, distributed character of the web,while simultaneously having the efficient, struc-tured nature of a centralized database.
This com-bination is well-suited to the language resourcecommunity, where the available data is growingrapidly and where a large user-base is fairly con-sistent in how it describes its resource needs.The primary outcome of the Philadelphia work-shop was the founding of the Open LanguageArchives Community, and with it the identifica-tion of an advisory board, alpha testers and mem-ber archives.
Details of these groups are availablefrom the OLAC site [www.language-archives.org].Recall that the OAI community is defined bythe archives which comply with the OAI metadataharvesting protocol and that register with the OAI.Any compliant repository can register as an OpenArchive, and the metadata provided by an OpenArchive is open to the public.
OAI data providersmay support metadata standards in addition tothe Dublin Core.
Thus, a specialist communitycan define a metadata format which is specificto its domain.
Service providers, data providersand users that employ this specialized metadataformat constitute an OAI subcommunity.
Theworkshop participants agreed unanimously thatthe OAI provides a significant piece of the infras-tructure needed for the language resources com-munity.In the same way that OLAC represents aspecialized subcommunity with respect to theentire Open Archives community, there arespecialized subcommunities within the scopeof OLAC.
For instance, the ISLE Meta DataInitiative is developing a detailed metadatascheme for corpora of recorded speech eventsand their associated descriptions (MPI ISLETeam, 2000).
Similarly, the language data centers?
the Linguistic Data Consortium (LDC) andthe European Language Resources Association(ELRA) ?
are using OLAC metadata as thebasis of a joint catalog, and will add elementsand vocabularies for their specialized needs(price, rights, and categories of membershipand use).
For archived language resources thatare of this kind, such a metadata scheme wouldsupport a richer description.
This specializedsubcommunity can implement its own serviceprovider that offers focused searching based onits own rich metadata set.
At the same time, thedata providers will exposing OLAC and DublinCore versions of the metadata, permitting theresources to be discovered by users of OLAC andOAI service providers.2.3 Federation and integration of languageresource archivesThe OAI framework permits archives tointeroperate.
OAI archives support the DublinCore metadata format and metadata harvestingprotocol.
OLAC archives additionally support theOLAC metadata format.
Widespread adoptionof these standards will permit language resourcearchives to be federated and integrated.First, a collection of archives which supportthe same metadata format can be federated, inthe sense that a virtual meta-archive can collectall the information into a single place, and end-users can query multiple archives simultaneously.To demonstrate this, the Linguistic Data Consor-tium has harvested the catalogs of three languageresource archives (LDC, ELRA, DFKI) and cre-ated a prototype service provider.
A search forlanguage=Bulgarian returns records from all threearchives, as shown in Figure 4 (Ba?nik and Bird,2001).Second, a collection of archives which supportthe same metadata format can be integrated, in thesense that relational joins can be performed acrossdifferent archives.
This permits queries such as:?find all lexicon tools that understand a format forwhich Hungarian data is available.
?3 A Core Metadata Set for LanguageResourcesThe OLAC Metadata Set extends the DublinCore set only to the minimum degree requiredto express basic properties of language resourceswhich are useful as finding aids.All fifteen Dublin Core elements are used in theOLAC Metadata Set.
In order to suit the specificneeds of the language resources community, theelements have been qualified following principlesarticulated in ?Dublin Core Qualifiers?
(DCMI,2000a) and exemplified in (DCMI, 2000b).This section describes some of the attributes,elements and controlled vocabularies of theOLAC Metadata Set.
Before launching intothis discussion, we first review some XMLterminology and explain some aspects of theOLAC representation which follow directly fromour choice of XML.3.1 Aside: XML representationThe Extensible Markup Language (XML) is theuniversal format for structured documents anddata on the Web [www.w3.org/XML].
The keybuilding block of an XML document is the ele-ment.
An element has a name, attributes and con-tent.
Here is an example of an element Languagewith attributes refine and code, and free-text con-tent:<Language refine="OLAC" code="x-sil-BAN">Foreke Dschang</Language>In general, XML elements may contain otherelements, or they may be empty.
XML Docu-ment Type Definitions (DTDs) and XML schemasare grammars that define the structure of a validXML document, and they limit the arrangementof XML elements in a document.
We believe itoai:ldc:LDC94T5Date: 1994Title: ECI Multilingual TextType: textIdentifier: 1-58563-033-3Subject.language: Albanian, Bulgarian, Chinese, Czech, Dutch, English, Estonian,French, Gaelic, German, Greek, Italian, Japanese, Latin, Lithuanian,Malay, Spanish, Danish, Uzbek, Norwegian, Portuguese, Russian,Serbian, Swedish, Turkish, TibetanIdentifier: http://www.ldc.upenn.edu/Catalog/LDC94T5.htmlDescription: Recommended Applications: information retrieval, machine transla-tion, language modelingoai:elra:L0030Title: Bulgarian Morphological DictionaryDate: 1998Subject.language: BulgarianDescription: 67,500 entries divided into 242 inflectional types (including propernouns), morphosyntactic information for each entry, and a morpho-logical engine (MS DOS and WINDOWS 95/NT) for morphologicalanalysis and generationIdentifier: http://www.icp.inpg.fr/ELRA/cata/text det.html#bulmodicoai:dfki:KPMLTitle: KPMLCreator: Bateman and many othersSubject.language: Spanish, Russian, Japanese, Greek, German, French, English, Czech,BulgarianFormat.os: Windows NT, Windows 98, Windows 95/98, SolarisType.functionality: Software: Annotation Tools, Grammars, Lexica, Development Tools,Formalisms, Theories, Deep Generation, Morphological Generation,Shallow GenerationDescription: Natural Language Generation Linguistic Resource Development andMaintenance workbench for large scale generation grammar devel-opment, teaching, and experimental generation.
Based on systemic-functional linguistics.
Descendent of the Penman NLG system.Identifier: http://www.purl.org/net/kpmlDescription: Contact: bateman@uni-bremen.deRelation.requires: Windows: none; Solaris: CommonLisp + CLIMFigure 4: Querying the Prototype Service Provider for Bulgarian Resourcesis important to use a formal mechanism for vali-dating a metadata record.
Following the OAI, weuse XML schemas to specify the OLAC metadataformat.XML schemas make it possible for elementcontent and attribute values to be constrainedaccording to the element name.
However, XMLschemas do not permit element content to beconstrained on the basis of the attribute value.Accordingly, in implementing qualified DublinCore using XML, we are limited to using oneencoding scheme (or controlled vocabulary) perelement.There are two cases we need to consider here.In the case where all refinements of an elementemploy the same encoding scheme, we use theelement name as is and add a refine attribute witha fixed value.
This documents that the particu-lar encoding scheme has been used, and ensuresthat the element cannot be confused with a cor-responding unqualified Dublin Core element (seethe above example).
In the case where differ-ent refinements of an element employ differentencoding schemes, then a unique element mustbe defined.
Following (DCMI, 2000b), we definesuch elements by concatenating the Dublin Coreelement name and the refinement name with anintervening dot.
An example is shown below:<Format.encoding code="iso-8859-1"/>3.2 Attributes used in implementing theOLAC Metadata SetThree attributes ?
refine, code, and lang ?
areused throughout the metadata set to handle mostqualifications to Dublin Core.
Some elements inthe OLAC Metadata Set use the refine attributeto identify element refinements.
These quali-fiers make the meaning of an element narroweror more specific.
A refined element shares themeaning of the unqualified element, but with amore restricted scope (DCMI, 2000a).Some elements in the OLAC Metadata Set usethe code attribute to hold metadata values that aretaken from a specific encoding scheme.
When anelement may take this attribute, the attribute valuespecifies a precise value for the element takenfrom a controlled vocabulary or formal notation(x3.4).
In such cases, the element content mayalso be used to specify a freeform elaboration ofthe coded value.Every element in the OLAC Metadata Set mayuse the lang attribute.
It specifies the languagein which the text in the content of the element iswritten.
The value for the attribute comes froma controlled vocabulary OLAC-Language.
Bydefault, the lang attribute has the value ?en?, forEnglish.
Whenever the language of the elementcontent is other than English, the lang attributeshould be used to identify the language.
Byusing multiple instances of the metadata elementstagged for different languages, data providersmay offer their metadata records in multiplelanguages.In addition, there is a lang attribute on the<olac> element that contains the metadataelements for a given metadata record.
It liststhe languages in which the metadata recordis designed to be read.
This attribute holdsa space-delimited list of language codes.
Bydefault, this attribute has the value ?en?, forEnglish, indicating that the record is aimed onlyat English readers.
If an explicit value is given forthe attribute, then the record is aimed at readersof all the languages listed.Service providers should use this informationin order to offer multilingual views of the meta-data.
When a metadata record lists only one alter-native language, then all elements are displayed(regardless of their individual languages), unlessthe user has requested to suppress all records inthat language.
When a metadata record has mul-tiple alternative languages, the user should be ableto select one and have display of elements in theother languages suppressed.
An element in alanguage not included in the list of alternativesshould always be displayed (for instance, the ver-nacular title of a work).3.3 The elements of the OLAC Metadata SetIn this section we present a synopsis of theelements of the OLAC metadata set.
For eachelement, we provide a one sentence definitionfollowed by a brief discussion, systematicallyborrowing and adapting the definitions providedby the Dublin Core Metadata Initiative (DCMI,1999).
Each element is optional and repeatable.Contributor: An entity responsible for makingcontributions to the content of theresource.
Examples of a Contributorinclude a person, an organization, or aservice.
The refine attribute is optionallyused to specify the role played by the namedentity in the creation of the resource, usingthe controlled vocabulary OLAC-Role.Coverage: The extent or scope of the contentof the resource.
Coverage will typicallyinclude spatial location or temporal period.Where the geographical information is pre-dictable from the language identification, itis not necessary to specify geographic cov-erage.Creator: An entity primarily responsible formaking the content of the resource.
Therefine attribute is optionally used to specifythe role played by the named entity in thecreation of the resource, using the controlledvocabulary OLAC-Role.Date: A date associated with an event in the lifecycle of the resource.
The refine attribute isoptionally used to refine the meaning of thedate using values from a controlled vocab-ulary (for instance, date of creation versusdate of issue versus date of modification, andso on).
The vocabulary for refinements toDate is defined in (DCMI, 2000a).Description: An account of the content of theresource.
Description may include but is notlimited to: an abstract, table of contents, ref-erence to a graphical representation of con-tent, or a free-text account of the content.Format: The physical or digital manifestationof the resource.
Typically, Format mayinclude the media-type or dimensions of theresource.
Format may be used to determinethe software, hardware or other equipmentneeded to use the resource.
The codeattribute identifies the format using thecontrolled vocabulary OLAC-Format.Format.cpu: The CPU required to use a soft-ware resource.
The code attribute identi-fies the CPU using the controlled vocabularyOLAC-CPU.Format.encoding: An encoded character setused by a digital resource.
For a digitallyencoded text, Format.encoding names theencoded character set it uses.
For a font,Format.encoding names an encoded characterset that it is able to render.
For a softwareapplication, Format.encoding names anencoded character set that it can read orwrite.
The code attribute is used to identifythe character set using the controlledvocabulary OLAC-Encoding.Format.markup: The OAI identifier for thedefinition of the markup format.Format.markup provides an OAI identifierfor an XML DTD, schema or some otherdefinition of the markup format.
(This hasthe side-effect of ensuring that the formatdefinition is archived somewhere).
For asoftware resource, Format.markup names amarkup scheme that it can read or write.The code attribute identifies the markupscheme using the controlled vocabularyOLAC-Markup.Format.os: The operating system required touse a software resource.
The code attributeis used to identify the operating systemusing the controlled vocabulary OLAC-OS.Additional restrictions for operating systemversion, may be specified using the elementcontent.Format.sourcecode: The programming lan-guage(s) of software distributed in sourceform.
The code attribute identifies thelanguage using the controlled vocabularyOLAC-Sourcecode.Identifier: An unambiguous reference tothe resource within a given context.Recommended best practice is to identifythe resource by means of a string or numberconforming to a globally-known formalidentification system (e.g.
URIs, ISBNs).For non-digital archives, Identifier may usethe existing scheme for locating a resourcewithin the collection.Language: A language of the intellectualcontent of the resource.
Language isused for a language the resource is in, asopposed to the language it describes (seeSubject.language).
It identifies a languagethat the creator of the resource assumesthat its eventual user will understand.
Thecode attribute is used to make a preciseidentification of the language using thecontrolled vocabulary OLAC-Language.Publisher: An entity responsible for making theresource available.
Examples of a publisherinclude a person, an organization, or a ser-vice.Relation: A reference to a related resource.
Thiselement is used to document relationshipsbetween resources.
The refine attribute isused to refine the nature of the relationshipusing values from a controlled vocabulary(for instance, is replaced by, requires, ispart of, and so on).
The vocabulary forrefinements to Relation is defined in (DCMI,2000a).Rights: Information about rights held in andover the resource.
Typically, a Rights ele-ment will contain a rights management state-ment for the resource, or reference a serviceproviding such information.
Rights informa-tion often encompasses intellectual propertyrights (IPR), copyright, and various propertyrights.
The code attribute is used to makea summary statement about rights using thecontrolled vocabulary OLAC-Rights.Rights.software: Information about rights heldin and over a software resource.
A rightsstatement pertaining to software, using thecontrolled vocabulary OLAC-Software-Rights.Source: A reference to a resource from whichthe present resource is derived.
Forinstance, it may be the bibliographicinformation about a printed book of whichthis is the electronic encoding or from whichthe information was extracted.Subject: The topic of the content of theresource.
Typically, a Subject will beexpressed as keywords, key phrases orclassification codes that describe a topic ofthe resource.
Recommended best practiceis to select a value from a controlledvocabulary or formal classification scheme.Subject.language: A language which the contentof the resource describes or discusses.
Aswith the Language element, a code attributeis used to identify the language precisely.Title: A name given to the resource.
Typically,a title will be a name by which the resourceis formally known.
A translation of the titlecan be supplied in a second Title element.The lang attribute is used to identify the lan-guage of these elements.Type: The nature or genre of the content ofthe resource.
The code attribute is used toidentify the type using the Dublin Core con-trolled vocabulary DC-Type.Type.data: The nature or genre of the content ofthe resource, from a linguistic standpoint.Type includes terms describing general cate-gories, functions, genres, or aggregation lev-els for content.
The code attribute is used toidentify the type using the controlled vocab-ulary OLAC-Data.Type.functionality: The functionality of asoftware resource.
The code attributeis used to identify the type using thecontrolled vocabulary OLAC-Functionality.Observe that some elements, such as Format,Format.encoding and Format.markup are applicableto software as well as to data.
Service providerscan exploit this feature to match data with appro-priate software tools.3.4 The controlled vocabulariesControlled vocabularies are enumerations of legalvalues for the code attribute.
In some cases, morethan one value applies, in which case the corre-sponding element must be repeated, once for eachapplicable value.
In other cases, no value is appli-cable ands the corresponding element is simplyomitted.
In yet other cases, the controlled vocab-ulary may fail to provide a suitable item, in whichcase a similar item can be optionally specified anda prose comment included in the element content.3.4.1 OLAC-LanguageLanguage identification is an importantdimension of language resource classification.However, the character-string representationof language names is problematic for severalreasons: different languages (in different partsof the world) may have the same name; thesame language may have a different name ineach country where it is spoken; within thesame country, the preferred name for a languagemay change over time; in the early history ofdiscovering new languages (before names werestandardized), different people referred to thesame language by different names; and forlanguages having non-Roman orthographies,the language name may have several possibleromanizations.
Together, these facts suggest thata standard based on names will not work.
Instead,we need a standard based on unique identifiersthat do not change, combined with accessibledocumentation that clarifies the particular speechvariety denoted by each identifier.The information technology community has astandard for language identification, namely, ISO639 (ISO, 1998).
Part 1 of this standard liststwo-letter codes for identifying 160 of the world?smajor languages; part 2 of the standard lists three-letter codes for identifying about 400 languages.ISO 639 in turn forms the core of another stan-dard, RFC 3066 (formerly RFC 1766), which isthe standard used for language identification inthe xml:lang attribute of XML and in the languageelement of the Dublin Core metadata set.
RFC3066 provides a mechanism for users to registernew language identification codes for languagesnot covered by ISO 639, but very few additionallanguages have been registered.Unfortunately, the existing standard fallsfar short of meeting the needs of the languageresources community since it fails to account formore than 90% of the world?s languages, andit fails to adequately document what languagesthe codes refer to (Simons, 2000).
However,SIL?s Ethnologue (Grimes, 2000) provides acomplete system of language identifiers whichis openly available on the Web.
OLAC willemploy the RFC 3066 extension mechanismto build additional language identifiers basedon the Ethnologue codes.
For the 130-plusISO-639-1 codes having a one-to-one mappingonto Ethnologue codes, OLAC will support both.Where an ISO code is ambiguous ?
such as mhkfor ?other Mon Khmer languages?
?
OLAC willrequire the Ethnologue code.
New identifiersfor ancient languages, currently being developedby LINGUIST List, will be incorporated.
Theselanguage identifiers are expressed using the codeattribute of the Language and Subject.languageelements.
The free-text content of these elementsmay be used to specify an alternative human-readable name for the language (where the namespecified by the standard is unacceptable forsome reason) or to specify a dialect (where theresource is dialect-specific).3.4.2 OLAC-DataAfter language identification, another dimen-sion of central importance is the linguistic type ofa resource.
Notions such as ?lexicon?
and ?gram-mar?
are fundamental to OLAC, and the discourseof the language resources community depends onshared assumptions about what these types mean.We believe that it is helpful to distinguish atleast four top-level types: transcription, annota-tion, description and lexicon, each defined broadlyas proposed below.
A transcription is any time-ordered symbolic representation of a linguisticevent.
An annotation is any kind of structuredlinguistic information that is explicitly aligned tosome spatial and/or temporal extent of a linguisticrecord (such as a recorded signal or an image).A description is any description or analysis of alanguage; unlike a transcription or an annotation,the structure of a description is independent of thestructure of the linguistic events that it describes.A lexicon is any record-structured inventory of lin-guistic forms.For each of these top-level types we envision amore specific vocabulary to facilitate greater pre-cision.
For example, an orthographic transcrip-tion would have the code transcription/orthographic.Other subtypes could include: phonetic, prosodic,morphological, gestural, part-of-speech, syntactic, dis-course, musical.
The annotation type would includethese subtypes, and add others to cover spatialannotation of images (e.g.
for OCR annotationof textual images or for isogloss maps).The description type could have subtypes forgrammatical, phonological, orthographic, paradigms,pedagogical, dialectal and comparative.
The lexi-con type could also carry subtypes to distinguishwordlists, wordnets, thesauri and so forth.3.4.3 Other controlled vocabulariesOLAC-CPU: A vocabulary for identifying theCPU(s) for which the software is available,in the case of binary distributions: x86, mips,alpha, ppc, sparc, 680x0.OLAC-Encoding: A vocabulary for identifyingthe character encoding used by a digitalresource, e.g.
iso-8859-1, ...<?xml version="1.0" encoding="UTF-8"?><olacxmlns="http://www.language-archives.org/OLAC/0.3/"xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://www.language-archives.org/OLAC/0.3/http://www.language-archives.org/OLAC/olac-0.3b1.xsd"><Title>KPML</Title><Identifier>http://www.purl.org/net/kpml/</Identifier><Creator refine="Author">Bateman, John</Creator><Subject.language code="es"/> <Subject.language code="ru"/><Subject.language code="ja"/> <Subject.language code="el"/><Subject.language code="de"/> <Subject.language code="fr"/><Subject.language code="en"/> <Subject.language code="cs"/><Subject.language code="bg"/><Format.os code="MSWindows/winNT"/> <Format.os code="MSWindows/win95"/><Format.os code="MSWindows/win98"/> <Format.os code="Unix/Solaris"/><Type.functionality>Annotation Tools, Grammars, Lexica, Development Tools,Formalisms, Theories, Deep Generation, Morphological Generation,Shallow Generation</type.functionality><Relation refine="Requires">Windows: none; Solaris: CommonLisp + CLIM</Relation><Description>Natural Language Generation Linguistic Resource Development andMaintenance workbench for large scale generation grammar development,teaching, and experimental generation.
Based on systemic-functionallinguistics.
Descendent of the Penman NLG system.</Description></olac>Figure 5: OLAC Metadata Record for KPMLOLAC-Format: A vocabulary for identifyingthe manifestation of the resource.
Therepresentation is inspired by MIME types,e.g.
text/sf for SIL standard format.
(Format.markup is used to identify theparticular tagset.)
It may be necessaryto add new types and subtypes to covernon-digital holdings, such as manuscripts,microforms, and so forth and we expect to beable to incorporate an existing vocabulary.OLAC-Functionality: A vocabulary for clas-sifying the functionality of software, againusing the MIME style of representation,and using the HLT Survey as a source ofcategories (Cole, 1997) as advocated bythe ACL/DFKI Natural Language SoftwareRegistry.
For example, written/OCR wouldcover ?written language input, print orhandwriting optical character recognition.
?OLAC-OS: A vocabulary for identifying theoperating system(s) for which the softwareis available: Unix, MacOS, OS2, MSDOS,MSWindows.
Each of these has optionalsubtypes, e.g.
Unix/Linux, MSWindows/winNT.OLAC-Rights: A vocabulary for classifyingthe rights held over a resource, e.g.
: open,restricted, ...OLAC-Role: A vocabulary for identifyingthe role of a contributor or creator of theresource, e.g.
: author, editor, translator,transcriber, sponsor, ...OLAC-Software-Rights: A vocabulary forclassifying the rights held over a resource,e.g.
: open-source, royalty-free-library, royalty-free-binary, commercial, ...OLAC-Sourcecode: A vocabulary for identify-ing the programming language(s) used bysoftware which is distributed in source form,e.g.
: C++, Java, Python, Tcl, VB, ...4 XML RepresentationThe OLAC metadata format consists of an XMLschema for the element set, and a set of schemasfor the controlled vocabularies.
The latest ver-sions are available from the OLAC website.Figure 5 shows the OLAC metadata record cor-responding to the KPML display from Figure 4.The top element is olac; this references the XMLnamespace for version 0.3b1 of the schema.
Thecontents of the olac element are the OLAC meta-data elements, which are optional and repeatable,and can occur in any order, as in Dublin Core.Some elements employ the optional code orrefine attributes, and/or free-text content.
Thethird attribute, lang, is not used here since the free-text content is in English (specified in the XMLschema as the default).
For the Creator element,the refine attribute narrows the meaning of cre-ator to Author.
For the Subject.language elements,the code attribute specifies nine languages usingEthnologue codes.
A service provider would mapthese codes to human-readable names.The Format.os element illustrates a two-levelcoding scheme, consisting of an OS ?family?,followed by a specific operating system.
Furtherdetails can be included in the free-text contentif necessary.
If a piece of software runs on allmembers of an OS family, then the more detaileddesignation can be omitted, e.g.
code=?Unix?.The Type.functionality element is specified usingfree-text content, since the details of thecontrolled vocabulary OLAC-Functionality arestill being worked out.5 ConclusionsThe OLAC Metadata Set and controlled vocabu-laries are works in progress, and are continuing tobe revised with input from participating archivesand members of the wider language resourcescommunity.
We hope to have provided sufficientmotivation and exemplification for our choices sothat readers will easily be able to contribute toongoing developments.Even once OLAC is completely in place, therewill still be documentation tasks which the cre-ators of language resources will have to under-take, and new habits to acquire.
It will always benecessary to identify and manually correct incon-sistent or erroneous metadata.
The OLAC con-trolled vocabularies will need to be refined indef-initely in response to changes in the world aroundus.
The creators of language resources will needto generate metadata with each new resource andplace the resource in a suitable archive.
Thecommunities will need to adopt best practices forarchival storage formats.Despite these intrinsic limitations, the OLACMetadata Set and controlled vocabularies offer atemplate for resource description, providing twoclear benefits over traditional full-text descrip-tion and retrieval.
First, the template guides theresource creator in giving a complete descriptionof the resource, in contrast to prose descriptionswhich may omit important details.
And second,the template associates a resource with standardlabels, such as creator and title, permitting usersto do focussed searching.
Resources and reposi-tories can proliferate, yet common metadata andvocabularies will support centralized services giv-ing users easy access to language resources.ReferencesHarald Alvestrand.
2001.
RFC 3066: Tags for theidentification of languages (replaces 1766).ftp://ftp.isi.edu/in-notes/rfc3066.txt.
?Eva Ba?nik and Steven Bird.
2001.
LDC experimentalOLAC service provider.
http://wave.ldc.upenn.edu/OLAC/sp-0.2/sp.php4.Ronald Cole, editor.
1997.
Survey of the State of the Art inHuman Language Technology.
Studies in Natural LanguageProcessing.
Cambridge University Press.http://cslu.cse.ogi.edu/HLTsurvey/.DCMI.
1999.
Dublin Core Metadata Element Set, version1.1: Reference description.
http://dublincore.org/documents/1999/07/02/dces/.DCMI.
2000a.
Dublin Core qualifiers.http://dublincore.org/documents/2000/07/11/dcmes-qualifiers/.DCMI.
2000b.
Recording qualified Dublin Core metadatain HTML.
http://dublincore.org/documents/2000/08/15/dcq-html/.Barbara F. Grimes, editor.
2000.
Ethnologue: Languages ofthe World.
Dallas: Summer Institute of Linguistics, 14thedition.
http//www.sil.org/ethnologue/.ISO.
1998.
ISO 639: Codes for the representation of namesof languages-part 2: Alpha-3 code.http://lcweb.loc.gov/standards/iso639-2/langhome.html.Carl Lagoze and Herbert Van de Sompel.
2001.
The OpenArchives Initiative: Building a low-barrier interoperabilityframework.
http://www.cs.cornell.edu/lagoze/papers/oai-jcdl.pdf.MPI ISLE Team.
2000.
ISLE meta data elements forsession descriptions proposal.http://www.mpi.nl/world/ISLE/documents/draft/ISLE_Metadata_2.0.pdf.Gary Simons.
2000.
Language identification in metadatadescriptions of language archive holdings.
In Steven Birdand Gary Simons, editors, Proceedings of the Workshop onWeb-Based Language Documentation and Description.http://www.ldc.upenn.edu/exploration/expl2000/papers/simons/.Elaine Svenonius.
2000.
The Intellectual Foundation ofInformation Organization.
The MIT Press.
