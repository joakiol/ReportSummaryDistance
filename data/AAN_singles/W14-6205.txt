Proceedings of Third Workshop on Semantic Web and Information Extraction, pages 33?40,Dublin, Ireland, 24 August, 2014.Semi-supervised Sequence Labeling for Named Entity Extractionbased on Tri-Training:Case Study on Chinese Person Name ExtractionChien-Lung Chou1National Central University,Taoyuan, Taiwanformatc.chou@gmail.comChia-Hui ChangNational Central University,Taoyuan, Taiwanchia@csie.ncu.edu.twShin-Yi WuIndustrial TechnologyResearch Institute, Taiwansywu@itri.org.twAbstractNamed entity extraction is a fundamental task for many knowledge engineering applications.Existing studies rely on annotated training data, which is quite expensive when used to obtainlarge data sets, limiting the effectiveness of recognition.
In this research, we propose an auto-matic labeling procedure to prepare training data from structured resources which contain knownnamed entities.
While this automatically labeled training data may contain noise, a self-testingprocedure may be used as a follow-up to remove low-confidence annotation and increase theextraction performance with less training data.
In addition to the preparation of labeled trainingdata, we also employed semi-supervised learning to utilize large unlabeled training data.
Bymodifying tri-training for sequence labeling and deriving the proper initialization, we can furtherimprove entity extraction.
In the task of Chinese personal name extraction with 364,685 sen-tences (8,672 news articles) and 54,449 (11,856 distinct) person names, an F-measure of 90.4%can be achieved.1 IntroductionDetecting named entities in documents is one of the most important tasks for message understanding.For example, the #Microposts 2014 Workshop hosted an ?Entity Extraction and Linking Challenge?,which aimed to automatically extract entities from English microposts and link them to the correspond-ing English DBpedia v3.9 resources (if a linkage existed).
Like many other types of research, this taskrelies on annotated training examples that require large amounts of manual labeling, leading to a limitednumber of training examples (e.g.
2.3K tweets).
While human-labelled training examples (?)
have highquality, their cost is very high.
Thus the major concern in this paper is how to prepare training data forentity extraction learning on the Web.In practice, sometimes there are existing structured databases of known entities that are valuable toimprove extraction accuracy.
For examples, personal names, school names, and company names can beobtained from a Who?s Who website, and accessible government data for registered schools and busi-nesses, respectively.
Meanwhile, there are many unlabeled training examples that can be used for manyinformation extraction tasks.
If we can automatically label known entities in the unlabeled training ex-amples, we can obtain large labeled training set.
While such training data may contain errors, self-testingcan be applied to filter unreliable labeling with less confidence.On the other hand, the use of unlabeled training examples (?)
has also been proved to be a promisingtechnique for classification.
For example, co-training (Blum and Mitchell, 1998) and tri-training (Zhouet al.
2005) are two successful techniques that use examples with high-confidence as predicted by theother classifier or examples with consensus answers from the other two classifiers in order to preparenew labeled training data for learning.
By estimating the error rate of each learned classifier, we cancalculate the maximum number of new consensus answers for learning to ensure the error rates arereduced.In this paper, we explore the possibility of extending semi-supervised learning to sequence labelingvia tri-training so that unlabeled training examples can also be used in the learning phase.
The challengehere is to obtain a common label sequence as a consensus answer from multiple models.
As enumerating1 This research was partially supported by ITRI, Taiwan under grant B2-101052.33all possible label sequences will be too time-consuming, we employ a confidence level to control theco-labeling answer such that a label sequence with the largest probability is selected.
Comparing with acommon label sequence from multiple models, the most probable label sequence has larger chance toobtain a consensus answer for training and testing.In addition to the extension of tri-training algorithm to sequence labeling, another key issue with tri-training is the assumption of the initial error rate (0.5), leading to a limited number of co-labeling ex-amples for training and early termination for large set training.
Therefore, a new estimation method isdevised for the estimation of initial error rate to alleviate the problem and improve the overall perfor-mance.To validate the proposed method, we conduct experiments on Chinese personal name extraction using7,000 known Chinese celebrity names (abbreviated as CCN).
We collect news articles containing thesepersonal names from Google?s search engine (using these names as keywords) and automatically labelthese articles containing CCN and known reporters?
names.
In a test set of 8,672 news articles (364,685sentences) containing 54,449 personal names (11,856 distinct names), the basic model built on CRF(conditional random field) has a performance of 76.8% F-measure when using 500 celebrity names forpreparing training data, and is improved to 86.4% F-measure when 7,000 celebrity names are used.
Withself-testing, the performance is improved to 88.9%.
Finally, tri-training can further improve the perfor-mance through unlabeled data to 90.4%.2 Related WorkEntity extraction is the task of recognizing named entities from unstructured text documents, which isone of the information tasks to test how well a machine can understand the messages written in naturallanguage and automate mundane tasks normally performed by human.
The development of machinelearning research from classification to sequence labeling such as the HMM (Hidden Markov Model)(Bikel et al., 1997) and the CRF (Conditional Random Field) (McCallum and Wei, 2003) has beenwidely discussed in recent years.
While supervised learning shows an impressive improvement overunsupervised learning, it requires large training data to be labeled with answers.
Therefore, semi-super-vised approaches are proposed.Semi-supervised learning refers to techniques that also make use of unlabeled data for training.
Manyapproaches have been previously proposed for semi-supervised learning, including: generative models,self-learning, co-training, graph-based methods (Zhou et al.
2005) and information-theoretic regulariza-tion (Zheng et al.
2009).
In contrast, although a number of semi-supervised classifications have beenproposed, semi-supervised learning for sequence segmentation has received considerably less attentionand is designed according to a different philosophy.Co-training and tri-training have been mainly discussed for classification tasks with relatively fewlabeled training examples.
For example, the original co-training paper by Blum and Mitchell (1998)described experiments to classify web pages into two classes using only 12 labeled web pages as exam-ples.
This co-training algorithm requires two views of the training data and learns a separate classifierfor each view using labeled examples.
Nigam and Ghani (2000) demonstrated that co-training performedbetter when the independent feature set assumption is valid.
For comparison, they conducted their ex-periments on the same (WebKB course) data set used by Blum and Mitchell.Goldman and Zhou (2000) relaxed the redundant and independent assumption and presented an algo-rithm that uses two different supervised learning algorithms to learn a separate classifier from the pro-vided labeled data.
Empirical results demonstrated that two standard classifiers can be used to success-fully label data for each other with 95% confidence interval.Tri-training (Zhou, et al.
2005) was an improvement of co-training, which used three classifiers anda voting mechanism to solve the confidence issue of co-labeled answers by two classifiers.
In each roundof tri-training, the classifiers ??
and ??
choose some examples in ?
to label for ??
(?, ?, ??{1,2,3},?????).
Let ???
denote the set of examples that are labeled for ??
in the ?-th round.
Then the training setfor ??
in the ?-th round are ?
?
???.
Note that the unlabeled examples labeled in the ?-th round, i.e.
??
?,won?t be put into the original labeled example set, i.e.
?.
Instead, in the (?
+ 1)-th round all the examplesin ???
will be regarded as unlabeled and put into ?
again.While Tri-training has been used in many classification tasks, the application in sequence labelingtasks is limited.
Chen et al.
(2006) proposed an agreement measure that computed the unit consistency34between two label sequences from two models.
Then based on the agreement measure, the idea is tochoose a sentence, which is correctly labeled by ??
and ??
but is not parsed correctly by the targetclassifier ?
?, to be a new training sample.
A control parameter is used to determine the percentage (30%)of examples selected for the next round.
The process iterates until no more unlabeled examples areavailable.
Thus, Chen et al.
?s method does not ensure the PAC learning theory.3 System ArchitectureDue to the high cost of labeling, most benchmarks for NER are limited to several thousand sentences.For example, the English dataset for the CoNLL 2003 shared task (Tjong et al., 2003) consists of 14,987training sentences for four entity categories, PER, LOC, ORG, and MISC.
But it is unclear whethersufficient data is provided for training or the learning algorithms have reached their capacity.
Therefore,two intuitive ways are considered in this paper: one is automatic labeling of unlabeled data for preparinga large amount of annotated training examples, and the other is semi-supervised learning for making useof both labeled and unlabeled data during learning.For the former, automatic labeling is sometimes possible, especially for named entities which can beobtained from Web resources like DBpedia.
For example, suppose we want to train a named entityextractor for the Reuters Corpus, we can use the known entities from CoNLL 2003 shared task as queriesto obtain documents that contain queries from the Reuters Corpus and label the articles automatically.While such automatic annotation may involve wrong labeling, we can apply self-testing to filter low-confidence labels.
Overall, the benefit of the large amount of labeled training examples is greater thanthe noise it may cause.In this paper, we propose a hybrid model composed of the following modules: automatic labeling,feature engineering, and tri-training based algorithm for training and testing.
The framework is illus-trated in Figure 1.3.1 Tri-training for ClassificationLet ?
denote the labeled example set with size |?| and ?
denote the unlabeled example set with size |?|.In each round, ?, tri-training uses two models, ??
and ?
?, to label the answer of each instance ?
fromunlabeled training data ?.
If ??
and ??
give the same answer, then we could use ?
and the common an-swer pair as newly training example, i.e.
???
= {(?, ?
): ?
?
?, ?
=  ???(?)
= ???
(?)}
) for model ??
(?, ?, ??
{1,2,3}, ?????).
To ensure that the error rate is reduced through iterations, when training ?
?, Eq.
(1) must be satisfied,???|??
?| < ????1|???
?1|  (1)where ???
denotes the error rate of model ??
in ??
?, which is estimated by ??
and ??
in the t-th round usingthe labeled data ?
by dividing the number of labeled examples on which both ??
and ??
make an incor-rect estimation by the number of labeled examples for which the estimation made by ??
is the same asthat made by ?
?, as shown in Eq.
(2).2,2 Assuming that the unlabeled examples hold the same distribution as that held by the labeled ones.Figure 1 Semi-Supervised Named Entity Extraction Based on Automatic Labeling and Tri-training35???
=|{(?,?)?
?, ???(?)=???
(?)
??}||{(?,?)?
?, ???(?)=???
(?
)}|(2)If |??
?| is too large, such that Eq.
(1) is violated, it would be necessary to sample maximum ?
examplesfrom ???
such that Eq.
(1) can be satisfied.?
= ?????1|????1|???
?
1?
(3)???
= {?????????(???
, ?)
????????
??.
(1)???
?????????
(4)For the last step in each round, the union of the labeled training examples ?
and ??
?,  i.e.
????
?, is usedas training data to update classifier ??
for this iteration.3.2 Modification for the InitializationAccording to Eq.
(1), the product of error rate and new training examples define an upper bound for thenext iteration.
Meanwhile, |?
?t?1| should satisfy Eq.
(5) such that |??
?| after subsampling, i.e., ?, is stillbigger than |????1|.|???
?1| >???????1????
(5)In order to estimate the size of |?
?1|, i.e., the number of new training examples for the first round, weneed to estimate ?
?0, ?
?1, and |?
?0| first.
Zhou et al.
assumed a 0.5 error rate for ?
?0, computed ?
?1 by ?
?and ?
?, and estimated the lower bound for |?
?0| by Eq.
(6), thus:|?
?0| = ???1??0??
?1 + 1?
= ???10.5??
?1 + 1?
(6)The problem with this initialization is that, for a larger dataset |?|, such an initialization will have noeffect on retraining and will lead to an early stop for tri-training.
For example, consider the case whenthe error rate ?
?1 is less than 0.4, then the value of |?
?0| will be no more than 5, leading to a small upperbound for ??1|?
?1| according to Eq.
(1).
That is to say, we can only sample a small subset |?
?1|  from ?
?1for training ??
based on Eq.
(4).
On the other hand, if ?
?1 is close to 0.5 such that the value of |?
?0| isgreater than the original dataset |?|, it may completely alter the behavior of ?
?.To avoid this difficulty, we propose a new estimation for the product ??0|??0|.
Let ??(?
?, ??)
denotethe set of labeled examples (from ?)
on which the classification made by ??
is the same as that made by??
in the initial round, and ??(?
?, ??)
denote the set of examples from ??(?
?, ??)
on which both ??
and??
make incorrect classification, as shown in Eq.
(7) and (8).
In addition, we define ???(?
?, ??)
to bethe set of examples from ??(?
?, ??)
on which ??
makes incorrect classification in the initial round, asshown in Eq.
(9).
The relationship among ??(?
?, ??
), ??(?
?, ??
), and ???(?
?, ??)
is illustrated in Figure2.??(??
, ??)
= {(?, ?)
?
?
: ??(?)
= ??(?)}
(7)??(??
, ??)
= {(?, ?)
?
??(??
, ??
): ??(?)
?
?}
(8)???(??
, ??)
= {(?, ?)
?
??(??
, ??
): ??(?)
?
?}
(9)By replacing ??0|?
?0| with ???(?
?, ??)
and estimation of ?
?1 by |??(?
?, ??)|/|??(?
?, ??
)|), we can es-timate an upper bound for |?
?0| via Eq.
(3).
That is to say, we can compute an upper bound for |?
?0| andreplace Eq.
(3) by Eq.
(10) to estimate the maximum data size of |?
?1|, in the first round.|?
?0| = ???0|??0|?
?1 ?
1?
= ????(??,??)???(??,??)??(??,??)?
1?
(10)363.3 Modification for Co-LabelingThe tri-training algorithm was originally designed for traditional classification.
For sequence labeling,we need to define what should be the common labels for the input example ?
when two models (trainingtime) or three models (testing time) are involved.
In Chen et al.
?s work, they only consider the mostprobable label sequence from each model; the selection method chooses examples (for ??)
with the high-est-agreement labeled sentences by ??
and ?
?, and the lowest-agreement labeled sentences by ??
and ??
;finally, the newly training samples were labeled by ??
(ignoring the label result by ??
).As the probability for two sequence labelers to output the same label sequence is low (a total of  5|?|(BIEOS Tagging) possible label sequences with length ?
), we propose a different method to resolve thisissue.
Assume that each model can output the ?
best label sequences with highest probability (m=5).Let ??(?|?)
denote the probability that an instance ?
has label ?
estimated by ??.
We select the labelwith the largest probability sum by the co-labeling models.
In other words, we could use ??
and ??
toestimate possible labels, then choose the label ?
with the maximum probability sum, ??(?|?)
+ ??(?|?
),to re-train ??.
Thus, the set of examples, ??
?, prepared for ??
in the ?-th round is defined as follows:???
= {(?, ?
): ???,????(??(?|?)
+ ??(?|?))
?
?
?
2} (11)where ?
(default 0.5) is a threshold that controls the quality of the training examples provided to ?
?.During testing, the label ?
for an instance ?
is determined by three models ?1, ?2 and ?3.
We choosethe output with the largest probability sum from 3 models with a confidence ?
?
3 or ?
?
2.
If the labelwith the largest probability sum from 3 models is not greater than ?
?
3, then we choose the one withthe largest probability from single model with a maximum probability.
That is to say, if the label withthe largest probability sum from three models is not greater than ?
?
3, then we choose the one with thelargest probability sum from two models with a confidence of ?
?
2.
The last selection criterion is thelabel with the maximum probability estimated by the three models as shown in Eq.
(12).?
= max?{max?(?1(?|?)
+ ?2(?|?)
+ ?3(?|?))
?
?
?
3max?(??(?|?)
+ ??(?|?))
?
?
?
2, ?, ??
{1,2,3}, ???max?(?1(?|?
), ?2(?|?
), ?3(?|?
))}(12)4 ExperimentsWe apply our proposed approach on Chinese personal name extraction.
We use known celebrity namesto query search engines for news articles from four websites (including Liberty Times, Apple Daily,China Times, and United Daily News) and collect the top 10 search results for sentences that containthe query keyword and uses these query keyword as extraction target via automatic labeling.
Givendifferent numbers of personal names, we prepare six datasets by automatically labeling as mentioned inthe beginning of Section 3 and consider them as labeled training examples.
We also crawl these fournews websites from 2013/01/01 to 2013/03/31 and obtain 20,974 articles for unlabeled and testing data.To increase the possibility of containing person names, we select sentences that include some commonFigure 2 The relationship among Eq.
(7), (8), and (9).37surname followed by some common first name to obtain 240,994 as unlabeled data (?)
(Table 1).
Fortesting, we manually labeled 8,672 news articles, yielding a total of 364,685 sentences with 54,449person names (11,856 distinct person names).For the tagging scheme, we used BIEOS to mark the named entities to be extracted.
Fourteen featureswere used in the experiment including, common surnames, first names, job titles, numeric tokens, al-phabet tokens, punctuation symbol, and common characters in front or behind personal names.
Thepredefined dictionaries contain 486 job titles, 224 surnames, 38,261 first names, and 107 symbols aswell as 223 common words in front of and behind person name.
We use CRF++ (Kudo 2004) for thefollowing experiment.
With a template involving unigram macros and the previous three tokens andbehind, a total of 195 features are produced.
We define precision, recall and F-measure based on thenumber personal names as follows:?????????
=?????????
??????????
???????????????
?????(13)??????
=?????????
??????????
?????????
?????(14)?
????????
=  2??/(?
+ ?)
(15)4.1 Performance of Automatic Labeling & Self-TestingAs mentioned above, using the query keyword itself to label the collected news articles (called uni-labeling) only labels a small part of known person names.
Therefore, we also use all celebrity namesand six report name patterns such as ?UDN [reporter name]/Taipei?
(???[???]/????
), tolabel all collected articles (called Full-labelling).
While this automatic labelling procedure does not en-sure perfect training data, it provides acceptable labelled training for semi-supervised learning.
Asshown in Figure 3, the automatic labelling procedure can greatly improve the performance on the testingdata.Based on this basic model, we apply self-testing to filter examples with low confidence and retrain anew model with the set of high confidence examples.
The idea is to use the trained CRF model to testthe training data themselves and output the conditional probability for the most possible label sequence.By removing examples with low confidence we can retrain a new model with the set of high confidenceexamples.
As indicated by black-dashed line (with + symbol) in Figure 4, the F-measures increases asthe data size increases.
The performance of self-testing is improved for all datasets with confidencelevels from 0.5 to 0.9.
An F-measure of 0.815 (Dataset 1) to 0.889 (Dataset 6) can be obtained, depend-ing on the number of celebrity names we have.
The best performance is achieved at confidence level 0.8for all data sets except for dataset 3 which has the best performance when T = 0.9.4.2 Performance of Tri-TrainingNext, we evaluate the effect of using unlabeled training data based on tri-training.
In our initial attemptto apply original tri-training, we obtained no improvement for all datasets.
As shown in Figure 5, thefinal data size used for training and the performance is similar to those values obtained for the self-testing results (with confidence level 0.8).
This is because we have a very small estimation of |?
?0| byEq.
(6) when a 0.5 initial error rate for ?
?0 (i?
{1,2,3}) is assumed.
Therefore, it does not make any im-provement on retraining.Table 1 Labeled dataset (?)
and unlabeled dataset (?)
for Chinese person name extractionL UDataset 1 Dataset 2 Dataset 3 Dataset 4 Dataset 5 Dataset 6 --#Names 500 1,000 2,000 3,000 5,000 7,053 --Sentences 5,548 10,928 21,267 30,653 50,738 67,104 240,994Words 106,535 208,383 400,111 567,794 913,516 1,188,822 4,251,86138However, with the new initialization by Eq.
(10), the number of examples that can be sampled fromunlabeled dataset |?
?1| is greatly increased.
For dataset 1, the unlabeled data selected is five times theoriginal data size (an increase from 4,637 to 25,234), leading to an improvement of 2.4% in F-measure(from 0.815 to 0.839).
For dataset 2, the final data size is twice the original data size (from 8,881 to26,173) with an F-measure improvement of 2.7% (from 0.830 to 0.857).
For dataset 6, since |?
?1| is toolarge to be loaded for training with ?, we only use 75% for experiment.
The improvement in F-measureis 1.5%.
Overall, an improvement of 1.2% ~ 2.7% can be obtained with this tri-training algorithm.Figure 3 Performance Comparison of automatic labelingFigure 4 Performance Comparison of self-testingFigure 5 Performance of Tri-training with different initialization for |?1|Dataset 1 Dataset 2 Dataset 3 Dataset 4 Dataset 5 Dataset 6Data Size 5,548 10,928 21,267 30,653 50,738 67,104Full-Labeling 0.7677 0.7974 0.8254 0.8329 0.8544 0.8636Uni-Labeling 0.1916 0.2750 0.3939 0.4762 0.6249 0.6916010,00020,00030,00040,00050,00060,00070,0000.100.200.300.400.500.600.700.800.90DataSizeF-MeasurePerformance of Automatic LabelingDataset 1Dataset 2Dataset 3Dataset 4Dataset 5Dataset 60.740.750.760.770.780.790.800.810.820.830.840.850.860.870.880.890.900 10,000 20,000 30,000 40,000 50,000 60,000 70,000F-MeasureData SizeF-Measure with Various Filtering ThresholdNone T=0.5 T=0.6 T=0.7 T=0.8 T=0.9The same dataset395 ConclusionNamed entity extraction has been approached with supervised approaches that require large labeledtraining examples to achieve good performance.
This research makes use of automatic labeling basedon known entity names to create a large corpus of labeled training data.
While such data may containnoise, the benefit with large labeled training data still is more significant than noise it inherits.
In practice,we might have a large amount of unlabeled data.
Therefore, we applied tri-training to make use of suchunlabeled data and to modify the co-labeling mechanism for sequence labeling to improve theperformance.
Instead of assuming a constant error rate for the initial error of each classifier, we proposeda new way to estimate the number of examples selected from unlabeled data.
As shown in theexperiments, such a semi-supervised approach can further improve the F-measure to 0.904 for dataset 6with 7,000 celebrity names.ReferenceRie Kubota Ando and Tong Zhang.
2005.
A high-performance semi-supervised learning method for text chunking.In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics (ACL '05).
pp.1-9.Avrim Blum and Tom Mitchell.
1998.
Combining labeled and unlabeled data with co-training.
COLT' 98 Proceed-ings of the eleventh annual conference on Computational learning theory, pp.
92-100.Wenliang Chen, Yujie Zhang and Hitoshi Isahara.
Chinese Chunking with Tri-training Learning, The 21st Inter-national Conference on the Computer Processing of Oriental Languages (ICCPOL2006), LNCS, Vol.
4285,Springer, pp.
466-473, Singapore, Dec. 2006.Sally Goldman and Yan Zhou.
2000.
Enhancing supervised learning with unlabeled data.
ICML'00 Proceedingsof the 17th International Conference on Machine Learning, pp.
327-334.Feng Jiao, Shaojun Wang, Chi-Hoon Lee, Russell Greiner, and Dale Schuurmans.
2006.
Semi-supervised condi-tional random fields for improved sequence segmentation and labeling.
In Proceedings of the 21st InternationalConference on Computational Linguistics and the 44th annual meeting of the Association for ComputationalLinguistics (ACL-44), pp.
209-216.Taku Kudo.
CRF++: Yet Another CRF toolkit.
http://crfpp.googlecode.com/svn/trunk/doc/index.htmlWei Li, and Andrew McCallum.
2005.
Semi-supervised sequence modeling with syntactic topic models.
In Pro-ceedings of the National Conference on Artificial Intelligence - Volume 2 (AAAI '05), pp.
813-818.Gideon S. Mann and Andrew McCallum.
2010.
Generalized expectation criteria for semi-supervised learning withweakly labeled data.
Journal of machine learning research, Volume 11, pp.955-984.Andrew McCallum and Wei Li.
2003.
Early results for named entity recognition with conditional random fields,feature induction and web-enhanced lexicons.
In Proceedings of the seventh conference on Natural languagelearning at HLT-NAACL 2003 - Volume 4 (CONLL '03), pp.
188-191.Kamal Nigam and Rayid Ghani.
2000.
Analyzing the effectiveness and applicability of co-training.
CIKM '00Proceedings of the ninth international conference on Information and knowledge management, pp.
86-93.C?cero Nogueira dos Santos, Ruy Luiz Milidi?.
2012.
Named entity recognition.
Entropy Guided TransformationLearning: Algorithms and Applications, Springer, Briefs in Computer Science, pp.
51-58.Erik F. Tjong, Kim Sang and Fien De Meulder.
2003.
Introduction to the CoNLL-2003 shared task: language-independent named entity recognition.
In Proceedings of the seventh conference on Natural language learningat HLT-NAACL 2003 - Volume 4 (CONLL '03), pp.
142-147.Lei Zheng, Shaojun Wang, Yan Liu, and Chi-Hoon Lee.
2009.
Information theoretic regularization for semi-su-pervised boosting.
In Proceedings of the 15th ACM SIGKDD international conference on Knowledge discoveryand data mining (KDD '09), pp.
1017-1026.Dengyong Zhou, Jiayuan Huang, and Bernhard Sch?lkopf.
2005.
Learning from labeled and unlabeled data on adirected graph.
In Proceedings of the 22nd international conference on Machine learning (ICML '05), pp.
1036-1043.Zhi-Hua Zhou and Ming Li.
2005.
Tri-Training: Exploiting Unlabeled Data Using Three Classifiers.
IEEE Trans-actions on Knowledge and Data Engineering archive, Volume 17 Issue 11, pp.
1529-1541.40
