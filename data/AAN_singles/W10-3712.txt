Proceedings of the Multiword Expressions: From Theory to Applications (MWE 2010), pages 81?84,Beijing, August 2010A Hybrid Approach for Functional Expression Identificationin a Japanese Reading AssistantGregory HazelbeckGraduate School ofScience and TechnologyKeio Universitygregh@nak.ics.keio.ac.jpHiroaki SaitoGraduate School ofScience and TechnologyKeio Universityhxs@ics.keio.ac.jpAbstractIn this paper we present a hybrid approachfor identifying Japanese functional ex-pressions and its application in a Japanesereading assistant.
We combine the re-sults of machine learning and pattern-based methods to identify several typesof functional expressions.
We show thatby using our approach we can double thecoverage of previous approaches and stillmaintain the high level of performancenecessary for our application.1 IntroductionFunctional expressions are one of the most im-portant elements of Japanese grammar that any-one studying the language must learn.
Despite theimportance of functional expressions, many toolsthat assist learners of Japanese with reading textsonly provide dictionary look-up of simple words.However, the ability to quickly obtain informa-tion about such grammar could not only improvethe learner?s comprehension of the text, but alsofacilitate their learning process of new elementsof Japanese grammar.
Thus, we have decided todevelop a Japanese reading assistant that is ca-pable of providing explanations of functional ex-pressions in addition to vocabulary.Functional expressions in Japanese are com-pound expressions that contain content and func-tion words, and can have both compositional andnon-compositional meanings.
For example, in Ta-ble 1, sentences 1 and 2 contain the????
(ni-atari) compound expression.
In sentence 1, thisexpression has a functional, non-compositionalmeaning of ?when.?
However, in sentence 2, thesame expression has a compositional meaning thatresults simply from using the post-particle?
(ni)and verb ???
(a conjugated form of ???
(ataru), meaning ?to hit?)
together.
We refer tothis as the content usage of a functional expres-sion.
However, there are also functional expres-sions where this type of content usage is very rare(or even nonexistent).
Sentence 3 shows an ex-ample of the?????????
(nakerebanari-masen) functional expression which has a verycommon functional meaning of ?must or have to.
?Tsuchiya et al (2006) have proposed a methodbased on machine learning to identify functionalexpressions.
However, this method only coversfunctional expressions which have balanced func-tional vs. content usage ratios.
In order to boostcoverage of current methods, we propose a hybridapproach for functional expression identificationwhich uses a combination of the machine learningmethod proposed by Tsuchiya et al (2006) andsimple patterns.
Coverage analysis and empiricalevaluations show that our method doubles the cov-erage of previous approaches while still maintain-ing a high level of performance.2 Related Work2.1 Functional ExpressionsResearch on Japanese functional expressions hasincluded work on identification methods as wellas resources that aid identification.
Matsuyoshiet al (2006) developed a hierarchical dictionaryof functional expressions called Tsutsuji.
The toplevel of the dictionary?s nine level hierarchy con-tains the lexical form of 341 expressions.
The sec-ond level categorizes these expressions by mean-ing.
The remaining seven levels contain various81????
(niatari)1.
Functional ??????????????????????????????????
?It is a custom in Japan to greet your neighbors when you move into a new apartment.2.
Content ????????????????
?The ball hit me in the face and broke my tooth.?????????
(nakerebanarimasen)3.
Functional ?????????????????
?I have to go to school tomorrow.Table 1.
Examples of Japanese functional expressions.surface forms for each expression where inser-tion/deletion of particles and other conjugationshave been made.
While this is the most compre-hensive dictionary of Japanese functional expres-sions, it can not be directly used for identifica-tion because of the functional/content usage prob-lem described in the previous section.
Therefore,identification methods like Tsuchiya et al (2006)which uses Support Vector Machines(SVM) havebeen proposed to solve this problem.
The data set(Tsuchiya et al, 2005) used to train this method,called MUST, contains annotated instances of 337functional expressions.
For each expression, amaximum of 50 instances were collected from the1995 Mainichi newspaper corpus.Recent work by the same group of researchers(Nagasaka et al, 2010) indicates that they havecontinued to annotate additional functional ex-pressions for the MUST data set.
During thisprocess, they have observed that only around onethird of all functional expressions possess a suf-ficient amount of functional and content usagesto be used with their machine learning method.However, they have yet to propose any methodto cover the other two-thirds of functional expres-sions.
Our hybrid approach aims to improve cov-erage by identifying functional expressions thatfall into this group.3 Identification MethodOur hybrid approach combines the results fromtwo different methods of functional expressionidentification.
First, we will describe our imple-mentation of a method that uses machine learning.Then, we will describe our method of generatingpatterns for functional expressions.3.1 Machine LearningOur implementation of the method proposed byTsuchiya et al (2006) only deviates slightly fromits original form.
We developed our own SVM-based text chunking system in Python while theoriginal paper uses a text chunker called Yamcha1.We also use the MeCab2 morphological analyzerwith a dictionary called UniDic while the originalpaper used ChaSen with the default dictionary.When training the SVMs, the original methoduses three sets of labels: functional, content, andother.
This allows both functional and content us-ages to be explicitly identified.
However, in ourapplication, we only need to identify functionalusages so that the expressions?
correct definitionscan be displayed.
Therefore, in our implementa-tion we only use two sets of labels (functional andother) and label all content usages as other.
Wealso decided to build a separate model for eachfunctional expression because it enables us to addnew training data and functional expressions with-out having to retrain everything.
Although thisdoes increase time complexity in the worse case,in practice it does not have a big affect on perfor-mance because only a small fraction of the totalnumber of models are being used for a given text.Identification of functional expressions in a newtext is performed in the following steps:1.
Morphologically analyze the text withMeCab and extract candidate functionalexpressions from the morpheme sequence.2.
Select the model corresponding to each can-didate functional expression.1http://chasen.org/~taku/software/yamcha/2http://mecab.sourceforge.net/82GeneratePatterns(C: list of candidates from Tsutsuji)01 P = {}02 for each candidate c in C:03 S = sentences that contain c in the BCCWJ04 for each sentence s in S:05 Ms = morpheme sequence of s06 Mc = ExtractCandMorph(c, Ms)07 if Mc ?= null ?
VerbChk(c, Mc, Ms, P):08 Add Mc to P09 break out of loop on line 410 end if11 end for12 end for13 return PFigure 1.
The GeneratePatterns algorithm.3.
Use each model to conduct chunking.
Labelany functional chunks as the model?s corre-sponding functional expression.4.
Combine the results from each model.
Re-solve any overlapping chunks by the samerules3 that Tsuchiya et al (2006) use to re-solve overlapping candidate functional ex-pressions during feature generation.3.2 PatternsWe generate simple patterns to identify functionalexpressions with a high ratio of functional usage.First, surveys are conducted of functional expres-sions in Tsutsuji using the Balanced Corpus ofContemporary Written Japanese (BCCWJ)4.
Asof writing this paper, we have selected 36 func-tional expressions from Tsutsuji?s top level as can-didates for pattern generation.
We also includedvarious surface forms of these expressions fromother levels of Tsutsuji resulting in a total of 1558candidate functional expressions.
The algorithmused to generate patterns is shown in Figure 1.The ExtractCandMorph function simply re-turns the candidate c?s morpheme sequence.
Ifthe candidate?s string does not match the bound-aries of morphemes in Ms then null is returned.The VerbChk function returns true if a candidateis an auxiliary verb from Tsutsuji?s top level andthe morpheme immediately preceding it inMs is averb.
It returns true for lower level auxiliary verb3Specifically, select the candidate that starts at the left-most morpheme.
If more than one candidate starts at thesame morpheme then select the longest candidate.4Balanced Corpus of Contemporary Written JapaneseMonitor Release Data (2009 Version).candidates if the last morpheme in its morphemesequence is also in the morpheme sequence of itstop-level parent candidate from Tsutsuji.
For anycandidate that is not an auxiliary verb, the func-tion always returns true.
We force candidates fromlower levels to satisfy an extra condition becausetheir lower frequency in the BCCWJ increases theprobability that a sentence with the wrong ex-pression/usage will be selected.
This algorithmproduces one pattern per functional expression.Each pattern is composed of the expression?s mor-pheme sequence.
This is a list where each ele-ment contains a morpheme?s surface form, part ofspeech, and lexical form.
Patterns for auxiliaryverbs also check if the previous morpheme is averb.
Using this algorithm, we were able to gen-erate 502 patterns with our 1558 candidate func-tional expressions.4 Coverage AnalysisTo investigate the improvement in coverageachieved by our hybrid approach, we comparedthe coverage of our approach with the coverageof just the MUST data set.
We define coverageas the ratio of functional expressions contained inboth the Tsutsuji dictionary and BCCWJ that aresupported.We first collected all of the functional expres-sion surface forms contained in Tsutsuji.
We ex-cluded all of the single character surface formswhich are mostly simple particles.
Next, werecorded the frequency of each surface form?sstring in the BCCWJ.
Overlapping of strings isallowed as long as a string covers at least onecharacter that no other string does.
Finally, werecorded which surface forms were supported byour hybrid approach and the MUST data set.
Ta-ble 3 shows our final results.Our results show that MUST is only cover-ing around 12% of Tsutsuji?s functional expres-sions in the BCCWJ.
The additional functionalexpressions supported by our hybrid approachhelps boost this coverage to 24%.
Improvementin coverage is observed at every frequency inter-val.
This is especially advantageous for our ap-plication because it allows us to display informa-tion about many different common and uncom-mon functional expressions.83Corpus Usage Examples Total Examples Total MorphemesFunctional ContentTraining (MUST) 1,767 1,463 3,230 114,699Testing (1995 Mainichi Newspaper) 5,347 1,418 6,765 244,324Table 2.
Training and testing corpora details.FrequencyIntervalTsutsuji MUST Hybrid>5,000 199 44 (22%) 70 (35%)5,000-1,001 244 70 (29%) 111 (45%)1,000-501 134 37 (28%) 54 (40%)500-101 519 124 (24%) 191 (37%)100-51 269 53 (20%) 90 (33%)50-26 327 54 (17%) 97 (30%)25-11 467 46 (10%) 113 (24%)10-2 1,180 55 (5%) 188 (16%)1 723 11 (2%) 82 (11%)Total 4,062 494 (12%) 996 (24%)Table 3.
Functional expressions covered by eachresource.
Percentage of Tsutsuji covered in eachfrequency interval is given in parenthesis.Software (kernel) Precision Recall F?
= 1Yamcha (polynomial) 0.928 0.936 0.932Our chunker (linear) 0.931 0.935 0.933Table 4.
Experiment 1 results.5 EvaluationWe evaluated the machine learning method on 54of the most difficult to identify functional expres-sions.
These are the same expressions that wereused in Tsuchiya et al (2006)?s evaluation.
De-tails of the training and testing data sets are shownin Table 2.
Results (Table 4) show that this methodperforms well even on the most difficult functionalexpressions.
We also found that using a simplelinear kernel gave the best precision.We evaluated the patterns generated from ourmethod by using them to identify functional ex-pressions in randomly selected texts from the BC-CWJ.
After verifying 2000 instances of identifiedfunctional expressions, we only found 6 instancesto be incorrect.
However, since these 2000 in-stances only cover 89 of the 502 expressions thatwe support, we randomly selected two instancesof each remaining expression from the BCCWJand verified them.
In the additional 750 instancesthat were verified, only 10 instances were foundto be incorrect.
Results of the second experi-ment show that patterns generated for high fre-quency functional expressions are providing espe-cially good performance.6 ConclusionIn this paper we presented a hybrid approach foridentifying Japanese functional expressions andits application in a Japanese reading assistant.
Weshowed that a combination of machine learningand simple patterns can improve coverage whilestill maintaining the high level of performancenecessary for our application.7 AcknowledgementsWe would like to thank Takehito Utsuro for allow-ing us to use his annotated functional expressiondata to evaluate our approach.
We would also liketo thank all of the other people involved in cre-ating the MUST data set.
Finally, we would liketo thank the anonymous reviewers for all of theirhelpful comments.ReferencesMatsuyoshi, Suguru, Satoshi Sato, and Takehito Utsuro.2006.
Compilation of a Dictionary of Japanese Func-tional Expressions with Hierarchical Organization.
IC-CPOL.
pp.
395?402.Nagasaka, Taiji, Takehito Utsuro, Suguru Matsuyoshi,Masatoshi Tsuchiya.
2010.
Analysis and Detection ofJapanese Functional Expressions based on a HierarchicalLexicon.
Proceedings of the 16th Annual Meeting of theAssociation for Natural Language Processing.
pp.
970?973.
(in Japanese)Tsuchiya, Masatoshi, Takao Shime, Toshihiro Takagi, Take-hito Utsuro, Kiyotaka Uchimoto, Suguru Matsuyoshi,Satoshi Sato, and Seiichi Nakagawa.
2006.
ChunkingJapanese Compound Functional Expressions by MachineLearning.
Proceedings of the 2nd International Workshopon Web as Corpus (EACL-2006).
pp.
11?18.Tsuchiya, Masatoshi, Takehito Utsuro, Suguru Matsuyoshi,Satoshi Sato, and Seiichi Nakagawa.
2005.
A Corpusfor Classifying Usages of Japanese Compound FunctionalExpressions.
PACLING.
pp.
345?350.84
