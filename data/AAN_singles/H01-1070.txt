Towards an Intelligent Multilingual Keyboard SystemTanapong Potipiti, Virach Sornlertlamvanich, Kanokwut ThanadkranNational Electronics and Computer Technology Center,National Science and Technology Development Agency,Ministry of Science and Technology Environment,22nd Floor Gypsum Metropolitan Tower 539/2 Sriayudhya Rd.
Rajthevi Bangkok 10400 ThailandEmail: tanapong@nectec.or.th, virach@nectec.or.th, kanokwutt@notes.nectec.or.thABSTRACTThis paper proposes a practical approach employing n-grammodels and error-correction rules for Thai key prediction andThai-English language identification.
The paper also proposesrule-reduction algorithm applying mutual information to reducethe error-correction rules.
Our algorithm reported more than99% accuracy in both language identification and keyprediction.1 INTRODUCTIONFor Thai users, there are always two annoyances while typingThai-English bilingual documents, which are usual for Thais.The first is when the users want to switch from typing Thai toEnglish, they have to input a special key to tell the operatingsystem to change the language mode.
Further, if the language-switching key is ignored, they have to delete the token just typedand re-type that token after language switching.
The second isthat Thai has more than 100 alphabets, to input about half of allThai characters, the user has to use combinations of two keys(shift key + another key) to input them.
Some of the other Asianusers also have the same problem.It will be wonderful, if there is a intelligent keyboardsystem that is able to perform these two tasks ?switchinglanguage and shifting key?
automatically.
This paper proposes apractical solution for these disturbances by applying trigramcharacter probabilistic model and error-correction rules.
Tooptimize number of the generated error-correction rules, wepropose a rule reduction approach using mutual information.More than 99 percent of key prediction accuracy results arereported.2 RELATED WORKSThere is only one related work on inputting Chinese wordsthrough 0-9 numpad keys.
[8] applied lexical trees and Chineseword n-grams to word prediction for inputting Chinesesentences by using digit keys.
They reported 94.4% predictionaccuracy.
However, they did not deal with automatic languageidentification process.
The lexical trees they employed requireda large amount of space.
Their algorithm is required someimprovement for a practical use.3 THE APPROACH3.1 OverviewIn the traditional Thai keyboard input system, a key button withthe help of language-switching key and the shift key can output4 different characters.
For example, in the Thai keyboard the ?a?-key button can represent 4 different characters in differentmodes as shown in Table 1.Table 1: A key button can represent different characters indifferent modes.English Modewithout ShiftEnglish Modewith ShiftThai Modewithout ShiftThai Modewith Shift?a?
?A?
???
??
?However, using NLP technique, the Thai-Englishkeyboard system which can predict the key users intend to typewithout the language-selection key and the shift key, should beefficiently implemented.
We propose an intelligent keyboardsystem to solve this problem and have implemented withsuccessful result.To solve this problem, there are basically two steps:language identification and Thai key prediction.
Figure 1 showshow the system works.Figure 1: How the System Works3.2 Language IdentificationThe following example illustrates the disturbance of languageswitching.
In the Thai input mode, typing a word ?language?will result ???g????.
It is certain that the user has to deletesequence ???g????
and then switches to the English mode beforeretyping the key sequence to get the correct result of ?language?.LanguageIdentificationKey InputThai KeyPredictionO utputEngYesThaiTherefore an intelligent system to perform language switchingautomatically is helpful in eliminating the annoyance.In general, different languages are not typedconnectedly without spaces between them.
The language-identification process starts when a non-space character is typedafter a space.
Many works in language identification, [3] and [5],have claimed that the n-gram model gives a high accuracy onlanguage identification.
After trying both trigrams and bigrams,we found that bigrams were superior.
We then compare thefollowing bigram probability of each language.Tprob =?=+PLLL7..SEprob =?=+PLLL(..Swhere7S is the probability of the bi-gram key buttonsconsidered in Thai texts.K is the key button considered.
(S is the probability of the bi-gram key buttonsconsidered in English texts.Tprob is the probability of the considered key-buttonsequence to be Thai.Eprob is the probability of the considered key-buttonsequence to be English.m is the number of the leftmost characters of the tokenconsidered.
(See more details in the experiment.
)The language being inputted is identified bycomparing the key sequence probability.
The language will beidentified as Thai if Tprob > Eprob and vice versa.3.3 Key Prediction without Using Shift Keyfor Thai Input3.3.1 Trigram Key PredictionThe trigram model is selected to apply for the Thai keyprediction.
The problem of the Thai key prediction can bedefined as:__PD[DUJLLLLLQLFFFF.SFFFSQ=?=?where?
is the sequence of characters that maximizes thecharacter string  sequence  probability,c is the possible input character for the key buttonK,K is the key button,n is the length of the token considered.3.3.2 Error Correction for Thai Key PredictionIn some cases of Thai character sequence, the trigram modelfails to predict the correct key.
To correct these errors, the error-correction rules proposed by [1] and [2] is employed.3.3.2.1 Error-correction Rule ExtractionAfter applying trigram prediction to the training corpus areconsidered to prepare the error correction rule.
The left and rightthree keys input around each error character and the correctpattern corresponding with the error will be collected as anerror-correction pattern.
For example, if the input key sequence?glik[lkl9in?
is predicted as ??????????
?r?, where the correctprediction is ???????????r?.
The string ?ik[lkl9?
is then collected asan error sequence and ????????
is collected as the correct patternto amend the error.3.3.2.2 Rule ReductionIn the process of collecting the patterns, there are a lot ofredundant patterns collected.
For example, patterns no.1-3 inTable 2 should be reduced to pattern 4.
To reduce the number ofrules, left mutual information and right mutual information ([7])are employed.
When all patterns are shortened, the duplicatepatterns are then eliminated in the final.Table 2: Error-Correction Rule ReductionPatternNo.Error Key Sequences Correct Patterns1.
k[lkl9??????2.
mpklkl9???????3.
kkklkl9???????4.
lkl9???
?Left mutual information (Lm) and right mutualinformation (Rm) are the statistics used to shorten the patterns.Lm and right Rm are defined as follows.
)()()()(zpxpzxpzxLmyyy = ,)()()()(zpxpzxpzxRmyyy = ,wherexyz is the pattern being considered,x is the leftmost character of xyz,y is the middle substring of xyz,z is the rightmost character of xyz,p( ) is the probability function.Training CorpusTrigram Prediction ModelErrors from TrigramPredictionError-Correction RulesFigure 2: Error-Correction Rule ExtractionThe pattern-shortening rules are as follows.1) If the Rm(xyz) is  less than 1.20 then pattern xyz is reducedto xy.2) Similarly, If the Lm(xyz) is  less than 1.20 then pattern xyzis reduced to yz.3) Rules 1 and 2 are applied recursively until the consideredpattern cannot be shortened anymore.After all patterns are shortened, the following rules are appliedto eliminate the redundant patterns.1) All duplicate rules are unified.2) The rules that contribute less 0.2 per cent of error correctionsare eliminated.3.3.3 Applying Error-correction RulesThere are three steps in applying the error-correction rules:1) Search the error patterns in the text being typed.2) Replace the error patterns with the correct patterns.3) If there are more than one pattern matched, the longestpattern will be selected.In order to optimize the speed of error-correction processing andcorrect the error in the real time, the finite-automata patternmatching ([4] and [6]) is applied to search error sequences.
Weconstructed an automaton for each pattern, then merge theseautomata into one as illustrated in Figure 3.4.
EXPERIMENTS4.1 Language IdentificationTo create an artificial corpus to test the automaticlanguage switching, 10,000 random words from an Englishdictionary and 10,000 random words from a Thai dictionary areselected to build a corpus for language identification experiment.All characters in the test corpus are converted to their mappingcharacters of the same key button in normal mode (no shift keyapplied) without applying the language-switching key.
Forexample, character ??
?, ???
and ?a?
will be converted to ?a?.
Forthe language identification, we employ the key-button bi-gramsextracted As a conclusion the first 6 characters of the token areenough to yield a high accuracy on English-Thai languageidentification.Table 3: The Accuracy of Thai-English LanguageIdentificationm (the number of the firstcharacters to be considered)Identification Accuracy(%)3456794.2797.0698.1699.1099.114.2 Thai Key Prediction4.2.1 Corpus InformationThe sizes of training and test sets applied to our key predictionalgorithm are 25 MB and 5 MB respectively.
The table belowshows the percentage of shift and unshift alphabets used in thecorpora.Table 4: Information on Alphabets Used in CorpusTraining Corpus(%)Test Corpus(%)Unshift Alphabets 88.63 88.95Shift Alphabets 11.37 11.05Figure 3: The Example of Constructing andMerging Automata0 1 2 3GN L(i) The automaton for patterntGNLu0 1 2 3LN G(ii) The automaton for patterntLNGu(iii) Merging automata (I) and (ii)G1 2 3LN0G4 5 6N LNNFigure 4: The Error-Correction ProcessKey InputF in ite Autom ataterm inal s tate?CorrectionNY4.2.2 Thai Key Prediction with TrigramBecause the Thai language has no word boundary, we trainedthe trigram model from a 25-MB Thai corpus instead of a wordlist from a dictionary as in the language identification.
Thetrigram model was tested on another 5-MB corpus (the test set).Similarly, a typing situation without applying shift key wassimulated for the test.
The result is shown in Table 4.Table 5: Thai Key Prediction Using Trigram ModelTraining Corpus Test Corpus93.11 92.214.2.3 Error-correction RulesFrom the errors of trigram key prediction when applied to thetraining corpus, about 12,000 error-correction rules are extractedand then reduced to 1,500.
These error-correction rules areapplied to the result of key prediction.
The results are shown inthe table below.Table 6: The Accuracy of Key Prediction Using TrigramModel and Applying Error-correction RulesPredictionAccuracy fromTraining Corpus(%)Prediction Accuracyfrom Test Corpus(%)Trigram Prediction 93.11 92.21Trigram Prediction+ Error Correction99.53 99.425 CONCLUSIONIn this paper, we have applied trigram model and error-correction rules for intelligent Thai key prediction and English-Thai language identification.
The result of the experiment showsthe high accuracy of more than 99 percent accuracy, which isvery impressive.
Through this system typing is much moreeasier and enjoyable for Thais.
This technique is expected to beable to apply to other Asian languages.
Our future work is toapply the algorithm to mobile phones, handheld devices andmultilingual input systems.REFERENCES[1] Brill, E. (1997) Automatic Rule Acquisition for SpellingCorrection.
ICML.
[2] Brill, E. (1993) A Corpus-Based Approach to LanguageLearning.
Ph.D. Dissertation, University of Pennsylvania.
[3] Cavnar, W. (1994) N-gram Based Text Categorization.Proceedings of the Third AnnualSymposium on Document Analysis and InformationRetrieval, pp.161-169.
[4] Cormen, T., Leiserson, C. and Rivest, R. (1990)Introduction to Algorithms, MIT Press[5] Kikui, G. (1998) Identifying the Coding System andLanguage of On-line Documents on the Internet.Proceedings of the 16th International Conference onComputational Linguistics, pp.
652-657.
[6] Knuth, D., Morris J., and Pratt V. (1977) Fast patternmatching in strings.
SIAM Journal on Computing.
6(2),pp.323-350.
[7] Sornlertlamvanich, V., Potipiti, T., and Charoenporn, T.(2000) Automatic Corpus-Based Thai Word Extraction withthe C4.5 Machine Learning Algorithm.
The Proceedings ofthe 18th International Conference on ComputationalLinguistics,  pp.
802-807.
[8] Zheng, F., Wu, J. and Wu, W. (2000) Input ChineseSentences Using Digits.
The Proceedings of the6th International Conference on Spoken LanguageProcessing, vol.
3, pp.
127-130.
