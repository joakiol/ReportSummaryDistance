Datenbank-D IALOG and the Re levance of Habi tab i l i tyHara ld  Trost*DFKI  GmbHStuh lsatzenhausweg 3D-6600 Saarbr f i cken ,  GermanyWol fgang He inz ,  Johannes  Mat iasekErns t  Buchberger~SFAISchot tengasse  3, A-1010 Wien ,  Aust r iaj ohn@ai ,  un iv i  e. ac.
at1 In t roduct ionThe paper focusses on the issue of habitability and how itis accounted for in Datenbank-DIALOG 1.
Examples fromthe area of comparisons and measures--both ilnportantfor many application domains and non-trivial from a lin-guistic point of view--demonstrate how design strategiescan SUl)port the development of a habitahle system.Datenbank-DIALOG is a German language interface torelational databases.
Since the development of a firstprototype (1985-88) it has been tested in different en-viromnents and continually been improved.
Currently,in a large field test, Datenbank-DIALOG interfaces to adatabase about AI research in Austria.
Questions sentby einail 2 are answered automatically.The system consists of four main components.
Thescanner breaks up the natural language query into to-kens for morphological analysis.
The parser l)erformssyntactic and semantic analysis creating one or-- in caseof ambiguit ies--more caseframes containing the queryrepresentation at the domain level.
The interpretationof the query is performed in three stages.
The mappingfrom domain-level to database-level predicates results ina DB-Caseframe, then a linearization step produces theLogical Form and finally a syntactic transformation leadsto an SQL query.
The answer is then given directly bythe DBMS as the result of executing the SQL query.2 Hab i tab i l i tyExperiments with NLIs indicate that the linguistic cov-erage of state-of-the-art systems is adequate.
Savings intraining time outweigh problems with queries not han-dled.
Very important hough is that the system behavesin a predictable way, i.e.
is habitable, so that users canlearn the types of acceptable queries very fast.
Other-*at OFAI during development of Datenbank-DIALOGIThe (levdopment was carried out at the Austrian Re-search Institute for Artificial Intelligence (OFAI)jointly with"Software Management GmbH', Vienna and has been spon-sored by the Austrian Government within the "Mikroelek-tronik F6rderungsprogramm, Schwerpunkt $7".
See also:H. Trost, E. Buchberger, W. Heinz, Ch.
H6rtnagl and J. Ma-tiazek.
Datenbank-DIALOG -A German Language Interfacefor Relational Databases.
In Applied Artificial Intelligence,1:181-203, 1987.2 Email address: aif orsch~ai, univie, ac.
atwise, they will either face a continuously high rejectionrate or - -more likely, since humans adapt much betterthan computers--formulate th ir queries ill an unneces-sarily simple and inefficient way.Hahitability cannot be judged solely on syntactic ov-erage.
Queries must be correctly interpreted syntac-tically, semantically and pragmatically.
While syntac-tic coverage depends olely on tile parser, semantic andpragmatic overage must be considered with respect tothe contents of the database to which the NLI connects.The grammar of Datenbank-DIALOG is completelydomain-independent, designed to make the acceptedsuhlanguage as consistent as l)ossihle.
Recent advancesof linguistic theory were incorporated in its development,thus also facilitating implementation and maintenance.Two examples for this strategy are the treatment of de-terminers and verb-second (V2).Using results of Generalized Quantifiers Theory fornatural language quantifiers (e.g.
conservativity) a for-mal correspondence between GQ-formulas (representingthe logical form of a query) and SQL-statements (for-mulas over the relational calculus) was estal)lished andimplemented.
This gives a sound theoretical basis forsemantic interpretation and SQL generation.
All exten-sional natural language determiners can be handled--matching the extensional nature of databases.In German finite verbs occur ill second position inmain clauses (V2) and in final position in subordinateclauses.
Ideas from (_;B-Theory are used for a uniformtreatment.
V2 is considered to be the result of a move-rnent from an underlying final position in the verb clusterto clause initial cornplementizer position.
This move-ment is iml)lemented as a relation between the "moved"finite verb and its trace.
In the case of main clauses,Vlin is "moved back" to the end of the verb cluster,and now the same mechanism applies uniformly.
Thusboth clause types are subject to the same syntactic andsemantic constraints (which thus need only be statedonce) and give rise to the same interpretation.3 Compar i sonsA central concern ill querying databases are cornparisonsbetween various kinds of objects.
Comt)arisons involvea relation between values associated with a dimensionand units of measure.
Values may be given explicitly orimplicitly by derivation (thus including superlatives).241Linguistic means for express ing  co lnpar i son  varywidely.
Usually, comparison is associated with grad-able adjectives and adverbs in various syntactic con-structions: hal ein hgheres Gehalt (Aux+A/NP); verdientmehr (V+Adv); rail einem hgheren Gehall (A/PP).
Theinterpretation of those expressions hould be the same.Datenbank-DIALOG uses a compositional semantics andseparates the lexical item from the underlying semanticrelation, which may be shared by different words.More prol)lerns arise when specifying the value for thecornparison: ein hb'heres Gehalt als 20.000,-; ein Gehaltyon mehr als 20.000,-; mehr als 20.000,- Gehalt; verdi-ent mehr als 20.000,-.
The comparative and the valuemay be adjacent or not, and show up a.s PPs, complexdeterminers or adverbial phrases.
All these constructionsmap onto the same semantic representation, a relation, avalue along with a dimension and a unit - - thus allowingto compare values with different units--and a comparedobject.
This assures a uniform semantic treatment.In verdicnl mehr als Dr. Haid the value is specifiedonly implicitly by referring to the salary of Dr. Haid.Despite the different structure of the corresponding SQLqueries the user will hardly notice this fundarnental dif-ference.
For a habitable system it is necessary to pro-vide solutions to both types of comparisons.
Datenbank-DIALOG recognizes the different interpretations by thesemantic type associated with the value of the phrase tobe cornpared.
If the value has the correct dimension, itmay safely be inserted a.s an argulnent into the cornpar-ison relation.
Otherwise, Datenbank-DIALOG constructsa subquery giving the value by using the dominatingrelation and fitting the comparison object into the "sub-ject" slot of the attribute.
The resulting structure isprocessed analogously to a top-level query.
As a conse-quence, anal)hora resolution may be apl)lied enabling Da-tenbank-DIALOG to give a correct interpretation of Weriverdient mehr als seini Vorgeselzler'?Domain  predicates need not uniquely deterrnine therelation and attributes of a corresponding predicate inthe database .
Datenbank-DIALOG splits the interpreta-tion of an utterance into two stages: An interpretationin the domain model, i.e.
a caseframe, which is thenmapped (using a translation table) to an interpretationin the database lnodel, i.e.
a DB-caseframe.This approach allows to interpret superficially simi-lar queries as quite different SQL queries.
Attributeswith the same meaning stored in different ables (nurse-salary vs. doctor-salary) can be treated as well as de-rived attributes (salary computed from basic + variablesalary)--in short, the user should not need to knowabout the actual encoding of information.
An interestinginstance of this prillciple is the interpretation of WievielePatienten behandelt Dr. Haid.
Whereas in one databasernodel the imrnber of patients is stored explicitly andcan be treated analogously to the salary above, otherdatabase models contain this "attribute" only implicitly:the number of patients haz to be computed (counted) bythe SQL query.
To obtain these quite different interpre-tations, only a different mapping of the (contents of the)argurnent-slot f the predicate Treatment in the transla-tion step between domain and databa.se l vel is required.A special case (where irnplicit attributes must be madeexplicit) are queries involving the comparison of two sub-queries.
This cannot be expressed in a single SQL query.A ternporary table has to be created containing the rel-evant count-attribute together with information on theobject hearing that attribute.
The actual comparisoncan then be made with the now explicit attribute.Most problems with comparatives also occur with su-per la t ives  and are dealt with in an analogous way.One interesting phenomenon which has no direct par-allel in comparative structures hows in Welcher Arzl,der in der Ambulanz arbeilet, verdient am meislen?
Inmost cases Who has the highest salary among the doctorsworking in the casualty department?
is the most plausi-ble interpretation and should be preferred.
To producethis reading, a kind of copying has to he performed: notonly must the dominating relation be copied but also therestrictions on the subject slot (i.e., on the bearer of theattribute) have to be inherited.
In Datenbank-DIALOGthis copying works on the ca.seframe representation, andthus is able to handle restrictions resulting from differ-ent syntactic constructions, uch as the lexicon (Ambu-lanzarzl), APs (in der Ambulanz arbeitende Arzl), PPs(Arzt aus der Ambulanz), NPs (Arzt der Ambulanz) andrelative clauses (Arzt, der in der Ambulanz arbeitet).
Allthese constructions end up as modifications in the case-frame due to the compositional nature of our approach.Thus a unified solution for inheritance of modifiers intheir various forms is achieved.A correct comparison is only possible if compared val-ues are of the same d imens ion  and share a un i t  ofmeasure .
Differences and incompatibilities may arisein different places: frorn special formatting conventions(e.g.
20000, 20.000,-, $20), when the user specifies a di-mension and unit of measure verbatim (e.g.
"10 Meter"),from the database, where coinparable columns may bea.ssociated with different units of Inca.sure.
Datenbank-DIALOG solves this problem--by defining a normalizedform azsociating values with units and transformationrules between measures of different uni ts- -at  the scannerlevel (l)atterns, e.g.
(late formats), at the parser level(linguistic information to fill the slots in the normalizedvalue frame), at the interpretation level (procedures totransform constant values from one unit to another), atthe database level (transformation fimctions of the querylanguage).4 SummaryHabitability is a rnost iinl)ortant feature of NLIs.
Us-ing comparison as examl)le we have shown how the de-sign of Datenbank-DIALOG enhances habitability, in par-ticular by: giving a uniform interpretation to semanti-cally equivalent user queries of different syntactic andmorphological appearance; enabling users to enter datain the form most convenient o them (formatting, unitconversion); removing the need for users to know aboutthe database representations of the concepts they use(domain concepts vs. databa.se relations and attributes,implicit flmctions, unit conversion); making ambiguitiesexplicit; and incorporating presupl)ositions (relation andrestriction copying).242
