Cooperation between Pronoun and ReferenceResolution for Unrestricted TextsAndrei Popescu-Belis & lsabelle RobbaL IMSI  - CNRS,  BP.
13391403 - -  ORSAY CEDEX, FRANCEpopescu@l ims i .
f r -  robba@l imsi .
f rAbstractAnaphora resolution is envisaged in this paper aspart of the reference resolution process.
A generalopen architecture is proposed, which can be particu-larized and configured in order to simulate someclassic anaphora resolution methods.
With the aimof improving pronoun resolution, the system takesadvantage ofelementary cues about characters of thetext, which are represented through a particular datastructure.
In its most robust configuration, the sys-tem uses only a general exicon, a local morpho-syntactic parser and a dictionary of synonyms.
Ashort comparative corpus analysis shows that narra-tive texts are the most suitable for testing such asystem.1 Methods for Anaphora Resolution1.1 Knowledge sourcesCorrect interpretation f anaphora is crucial for natu-ral language understanding systems, as it enables asystem to keep track of the entities introducedthrough the processed text.
Various knowledgesources have been used for anaphora resolution,leading to more or less realistic systems.
For in-stance, (Hobbs, 1978) uses a parse-tree analysisalgorithm, and correctly solves an average of 88% ofthe personal pronouns, in a selection of Englishtexts.
A blackboard-like architecture is proposed by(Rich and Luperfoy, 1988) in order to integrate vari-ous knowledge sources, but no evaluation is given.The method proposed in (Lappin and Leass,1994) uses context modelling and salience values,besides syntactic onstraints, and proves 4% moreaccurate than Hobbs' algorithm on the same corpus.Salience can realistically be calculated even for unre-stricted texts, and permits also integration of hetero-geneous criteria.
Local semantic onstraints can beadded to this algorithm, as in (Huls et al, 1995).Whereas it is almost certain that complex seman-tic and pragmatic knowledge is needed to solve a/lthe well-formed anaphors, it is highly improbablethat this would soon be available for a computationalsystem.
Even elaborated semantics and completeparse trees aren't yet realistic for unrestricted textprocessing.
A solution is then to use statisticalmethods to induce semantic onstraints of frequentlyused verbs, as in (Dagan and Ito, 1990).
But(Kennedy and Boguraev, 1996a) show that the lap-pin and Leass algorithm still provides good results(75%) even without complete parse.
They suggestalso (Kennedy and Boguraev, 1996b) that anaphoraresolution is part of the discourse referents resolu-tion.
However, little is said about concrete methodsfor building "coreference lasses": the example givenby the authors concerns only coreference between anacronym and its expanded form.We describe here an open architecture for referenceresolution, which provides a common frame forpronoun and reference resolution.
At its most ele-mentary level, our system uses simple cues for pro-nominal anaphora solving (morphology, local syntaxand context rules) and simultaneously performs nounphrase referent resolution (using identity, synonymsand hyperonyms).
These two aspects of the sametask benefit from their cooperation.1.2 The antecedent/anaphor paradigmThe cooperative strategy proposed here has long beenmasked by the classic conception of anaphora s apure textual relationship, between an anaphor (e.g., apronoun) and its explicit or inferred antecedent i  thetext (e.g., a noun phrase).
In this view, the anaphoralways needs another textual description or phrase inorder to be solved, while the antecedent can referdirectly to an object outside the text.Recent work tends to unify these two situations(Ariel, 1990 and 1994) (Reboul, personal communi-cation).
They propose a gradual classification for allthe referring expressions (RE), ranging from propernames and definite or indefinite noun phrases up tothe pronouns.
Their "resolution" means the construc-tion of a link between the RE (be it nominal orpronominal) and its correct referent, from an evolv-ing set of potential referent representations.94Text.
.
.
.
RE~ .
.
.
.
.
.
.
\[ Contro l ler  (M2)- -  RE2- -  RE3---\ [ ~ ~  ~ MOdule (MI ,  j \ [ - ' - - - -~- -  RE  5 .
.
.
.
.Other modality.
.
.
.
.
RE I  .
.
.
.
.
.
/ ~?~ Other  ~?
.
.
.
.
.
.
.
.
.
.
.
.
Mo.ole ( )"?
.
.
.
.
.
.
.
.
.
pRE~- - '~', - - -  pRE4 .
.
.
.
.
.
.
.COMPUTERSet of  charactersIC ) .
activati?n ogtRepresentationof  the real worldFigure 1.
General structure of a reference resolution systemTherefore, we will avoid using the ana-phor/antecedent distinction, and will speak insteadabout REs and their referent, called "character".
Asour open architecture supports the transition betweenthe two paradigms, we will sometimes use also theclassic terminology.2 A Frame for Reference Resolution2.1 General DescriptionWe suggest that most natural language understandingsystems are structured (at least partly) as in Figure 1.The machine receives natural language input (text)with referring expressions (RE), and possibly otherinput (e.g.
mouse clicks on a screen) with pseudo-RE (pRE).
Also, knowledge can be provided moredirectly by the programmer.
The machine handles aset of referents extracted from the text - in fact repre-sentations of real entities, called here characters.
Aformal representation f the real world (model) mayalso be available.The task of a RE resolution system is thus tobuild and manage a set of characters; modules M1and M2 are its two main components.
This architec-ture can account for:mono- or multi-modal interaction;"cognitive" system or not - depending on themodel of the world;"classic" system or not - classic if the set ofcharacters i just a duplicate of some of the text'sphrases, not classic if an elaborate character struc-ture is present.2.2 Balance between alternatives leads tovarious resolution paradigmsModule M1 selects referring expressions (REs) frominput data, and associates them to the proper"character structure" in the character set (cf.
?3).
M1has one alternative when solving a RE:?
(1) associate the RE to an existing character,adding new data to the character's record; - or?
(2) create a new character, its parameters beinginstanciated with data from the RE.Choice restrictions carl simulate various approaches.If noun phrases always call (2), and pronouns call(1), we obtain the classic antecedent/anaphora frame-work.
Otherwise, if all categories of RE can be fol-lowed by (1) or (2), then the system treats all REs ina homogeneous way, which is cognitively moreaccurate.Module M2 controls the character set, updatingtheir activation (or salience, cf.
?3.1) among otherparameters.
M2 can:?
(3) merge two characters in the set, if M1 hasbeen overproductive; - or?
(4) remove (and possibly archive) characterswhich haven't been referred to for a long time.At this stage, it might seem that (1) and (3) areequivalent, i.e.
(2)+(3)=(1).
In fact both operationsare necessary as the system is given increasingknowledge.
Suppressing (1) would only mean topostpone the reference resolution and leave it entirelyfor M2; the role of M 1 would thus become insignifi-cant.
On the contrary, MI has to start working onreference resolution, and not rely entirely on M2.But M2 should also be able to merge two charac-ters of the set.
Indeed, before reaching a suitable95balance between creating vs. merging characters ((1)vs. (2)), which is our long term goal, it is better tohave an overproductive M1, privileging (1).
Thesystem would avoid incorrect resolution, which ishard to undo, and reference resolution would be atworst incomplete, but not wrong.
M2 can completethe resolution by merging characters, which is mucheasier than undoing previous reference links.
Themore accurate M1 becomes, creating less and lessredundant characters, the more seldom (3) is used.The problem of revisable choices subsists how-ever in M1, depending on how consecutive REs aretreated.
It is reasonable for the beginning to processthe REs sequentially, validating each reference reso-lution before examining the next one.
This rigidorder is not really compatible with camphors (unlessthe module can take the initiative to create acharactercorresponding to a pronominal RE), but has provedsuccessful in most of the algorithms cited above.Also, it limits influence between textual close refer-ences.
A better solution is to handle a buffer for thecurrent sentence, compute mutual influence of theREs through their respective activation (cf.
?5.3) andafter stabilization validate the resolution for theentire current sentence.
Afterwards, only M2 canmake changes, by merging characters.3 The  character  se tA character is any object, animated or inanimate,which occurs in the text: a tree, a kitchen, a bed maybe a character.
But we represent neither the events(his marriage, the storm...) nor the concepts of ab-stract domain (a new idea, this music...) as charac-ters.
Nevertheless, we are aware that, in a completesystem, these should also be represented.
We use theterm "character" to refer to "the representation f acharacter".3.1 The character  structureThe structure we have adopted to describe the charac-ters has first been proposed in (Berthelin, 1979).
Themain contributions of this work lie in the originalityof the structure itself, and in the use of this structureto highlight the inconsistency that may be underly-ing in a story.
This work has been primary appliedto stories but its application to dialogues would notpose any problem.The structure is involved in two processes.
First,during the parsing of the text, a representationalstructure is instanciated for each character of thestory.
This structure gathers all the informationabout he character and underlines the different pointsof view of the different characters involved in thestory.
Second, this structure is used to detect thecontradictions and the incoherence that may existbetween the different points of view of the characters.Space lacks to describe the work achieved in thissecond step, but we will show how it improves ourpreliminary work.The representation f a character C consists of aset of facets.
Each of these facets contains the set ofstatements which have been expressed by a characterC' about the character C. In that way, the facet re-flects the point of view that C' has about C. Each ofthe statements contained in a facet consists itself of adata set: temporal references, state of C'... Thisinformation, extracted from the text, will be usefulto the second aspect above.In our approach, reference is solved without hav-ing completely parsed the text neither syntactically,nor semantically.
This kind of approach is essentialsince we do not have actually at our disposal a parsercapable of dealing with unrestricted texts.
Certainlyin this case, the "character" structure may appear toocomplex (without complete parse, there isn't enoughknowledge to fill in all the structure's attributes); butthe architecture is open to semantic methods whichcould take advantage of this complexity.Each character C is described with the followingparameters:?
a label: a number which allows to identify C?
a list of  ident i f ie rs :  the REs which havebeen used to design the character; we envisage toorder this list according to the frequency of use ofthe identifiers?
a l ist of  verbal  descr ip t ions  (VD): whathas been said about C?
an activation value: it represents the salienceof C, this value is modified during the resolutionand it depends on the context?
an access ib i l i ty  mark:  at each step of theresolution it indicates whether C is accessible ornot according to the concordance rules imple-mented by M1 (see ?2)And each verbal description VD consists of:?
a list of  words: the words which compose VD?
a sentence number :  to localize the place ofVD in the text?
a pos i t ion in the sentence :  a pair of markswhich localize the RE referring to the character inthe sentence?
a f -s t ructure:  it describes the syntactic struc-ture of VD, if its parsing has succeededThe values of the different parameters of the structureare determined by the module MI ,  except for the f-structure which is not always available.3.2 Modi f i cat ions  of  the character  setThe reference resolution mechanism consists in theinteraction of two modules (namely M1 and M2, cf.?2).
M2 periodically examines the complete set ofcharacters (provided by M l), to determine whethertwo or more characters should be merged into a sin-96gle one.
Indeed, since our system does not dispose ofall the knowledge necessary to understand correctly atext it may make mistakes which a merging modulemight be able to rectify on the basis of further in-formation.Moreover, a complete system of text comprehen-sion should be able to dynamically modify the set ofcharacters.
Indeed, even when parsing the best writtentexts, comprehension mechanisms sometimes haveto backtrack on their decisions, and on the charactersthey have recognised.Obviously, a module able to detect he inconsis-tencies (the one proposed by Berthelin) would beessential to give some indications for launching themerging module, but since it is not actually avail-able, we suggest o trigger it with a regular butarbitrary frequency.
We also suggest a mechanismwhich tracks MI,  and triggers the merging whenseveral characters have been created ue to the pres-ence of definite determinants, because this kind ofdeterminant often describes a character already intro-duced, but without using the terms already used.As far as the structure is concemed, the mecha-nism has to unify the parameters of the two charac-ters.
The following methods are proposed:?
the label: only the smaller of the two numeri-cal numbers is retained (the label of the first REwhich introduced the characte0?
the list of identifiers: the 2 lists are merged?
the list of verbal descriptions: the twolists are simply merged, and the parameters con-stituting the VD are conserved?
the activation value: it seems reasonable toretain the higher of them, but a more complexcalculation may also be considered?
the accessibi l i ty mark:  there is no decisionto take since this mark is determined at each reso-lution.4 Processing French Texts4.1 Description of three corporaThe system presented here is designed to work onunrestricted French texts; therefore, only few robustNLP resources are available.
Non-specialized textsare preferable, as convenient lexicons are availablefor general vocabulary.
We considered three texts: anessay by Stendhal (from the Chroniques ltaliennes), ascientific report by G6rard Sabah (PLC), and someStock Market articles from the journal Le Monde.The next table compares characteristics of thesetexts, and indicates that Stendhal is the most rich andinteresting from the anaphora point of view.Stendlal PLC LeMondeWord count 9 144 15 006 16 504/il/personal (he,it) 165 50 35ill/impersonal (~it) 44 45 45/elle/(she,it) 31 19 25/le/masc.
art.
(the) 217 226 367/le/masc.pron.
(him,it) 16 7 3/la/fern.
art.
(the) 201 345 577/la/fern.
pron.
(her,it) 7 2 1/1'/article 95 374 242/1'/masc.
pron.
13 6 2/r/fern.
pron.
7 4 0I/lui/masc.
indirect obj.
37 5 3/lui/fem.
indirect obj.
10 1 5/iui/masc.
tonic pron.
20 2 6/son/,/sa/,/ses/poss.
110 46 874.2 Ambiguity of French pronounsNotwithstanding our critique of the antece-dent/anaphor distinction, we focus for the beginningon pronoun resolution.
We examine the 3rd personsingular and plural, subject, direct object and indirectobject pronouns:/i l/,/elle/,/le/,/la/,/1'/,/ lui/, /ils/,/elles/ (the English /he/, /she/, /him/, /her/, /it/,/they/).Three main problems appear specific to French.First, /le/ and/la/ are both pronouns and definitearticles, so one has to select pronominal occurrencesbefore the reference resolution.
Second, elision anduse of an apostrophe for/ le/  and/la/ change theminto the even more ambiguous form/1'/, which hasfour interpretations; as a pronoun, all indication ofgender disappears.
Third, /lui/ can be an indirectobject pronoun, masculine and feminine, and also thetonic form of / i l l5 Realisation5.1 General overviewModule M1 selects nominal or pronominal REs inthe input text.
We impose that new pronominal REsbe always linked to existing characters, MI=>(I), asdetailed at the end of ?2.2.
There is clearly a need forfirst instanciating the character set ("antecedents", inthe classical terminology): M 1 processes also nomi-nal REs (noun-phrases) from the text.
When process-ing a NP-RE, MI can choose between (1) or (2), i.e.create a new character (like in classic systems) orlink the RE to an existing character.97The resulting mechanism is now easy to under-stand.
M1 reads linearly the (pre-processed) inputtext, and when it finds a NP-RE, either attaches it toa previous character if the linguistic descriptionsmatch (same word, synonym, hyperonym), or buildsa new character with the corresponding descriptionand activation.
When MI processes a pronominalRE, it uses "salience value" criteria (cf.
(Lappin andLeass, 1994) and (Huis, 1995)), intertwined withmorpho-syntaxic constraints (and later semanticones), in order to choose a character f om the set asreferent of the RE.
The character's parameters arethen updated, in particular its linguistic descriptionsand activation.5.2 Resources used by the systemRobust linguistic resources are essential for process-ing unrestricted texts.
The most important one is anLFG parser developed in the Language and CognitionGroup at the LIMSI (Vapillon et al, 1997); how-ever, as the rules cannot yet cover a significant pro-portion of complex sentences, our system uses onlylocal analysis, which parses NPs even when thesentence analysis fails.
Thus, the only limitationsare the lexicon used by the parser ~, some complexNPs, and, of course, morpho-syntactic ambiguities.A tagger is used to help lexical disambiguation,and performs also robust pre-processing of the inputtext.
The STK tagger (Ferrari, 1996) developed at theLIMSI is used together with some simple rules fordistinguishing the article/le/,/ In/from the pronoun/le/, /la/.
When these rules aren't sufficient (e.g.,unknown or truly ambiguous noun), we don't con-sider/le/,/In/as an article.Our proposition for a robust reference resolutionrelies on two ideas.
First, a character is often desig-nated by the same phrase - this criterion is extremelysimple to track, and is worth considering.
Second, anentity is often designated by a synonym of the previ-ously used RE, or a hyperonym.
It is thus interest-ing to use a dictionary of synonyms, and we arecurrently integrating one.5.3 Activation values and selectionActivation is the global salience value of each char-acter.
Several gradual criteria are used: the more acriterion is satisfied by a character, the higher itscontribution to the character's activation will be.
Thefollowing criteria have been implemented:?
recency of the last textual mention of the charac-ter (last RE)~The lexical analyser has a dictionary of 25 000 cano-nical forms and 350 000 inflected forms.?
number of REs already referring to the character.mention by a nominal RE brings more activationthan a pronominal RE, and proper NPs bnngmore activation than common NPs?
grammatical role of the last textual mention (lastRE).
Activation decreases from subject to directobject, indirect object, or other.Behind the elegance of the activation paradigm,which integrates different criteria (and possiblymulti-modality), there is a hidden limitation.
Theactivation distribution does not depend on the natureof the current RE, but only on its position.
So,character activation cannot ake into account proper-ties of the processed RE, and syntactic parallelismcannot be considered, as it would require the activa-tion to depend on the RE's nature.Besides, the activation distribution at a givenpoint in the text is a recursive function: it is calcu-lated using also its previous values.
This makesbacktracking (and revisable choices) difficult to im-plement, as they would require a complete recompu-tation of the activation distribution (or a"decomputation").
That is why Ml's choices aren'trevisable for the moment.Finally, the system has to take somewhere intoaccount the RE's nature, and operate a selectionamong the characters.
This is done without furthercomputation, using a set of various constraintswhich change the binary value (yes/no) of the charac-ter's "accessibility mark".
In this way, only"accessible" characters are considered when solving aparticular RE, and all "accessibility marks" are sub-sequently reset o "true".The selectional constraints implemented at thisstage are:?
for NP-REs, gender and number concordance?
for pronominal REs, number and gender, if un-ambiguous (cf.
the/17, ?
5.3).
Furthermore, anobject pronoun cannot refer to the subject of thesentence?
coreference is hypothesized if two NP-REs areidentical, or if the second is a hyperonym of thefirst.6 ResultsThe system is implemented in Smalltalk, and itsuser-friendly interface permits step-by-step monitor-ing of the process as well as parameter tuning.Current work concerns Stendhal's text, as it hasthe highest density and variety of pronouns (cf.
?4.1).
Its syntactic omplexity and the overproductiv-ity of the local LFG parser oblige us to make man-ual selection among NPs, and disambiguation of the/le/, /In/, /1'/ pronouns vs. definite articles.
The nexttable summarizes our first experiment.98DATAWords 3954Sentences 131Nominal REs 495Pronominal REs 113REs per sentence 3.8RESULTSCharacters found I 291Pronouns correctly, attached I 70 (62%)When coreference is not dealt with, there are as many"characters" asNPs, and, as expected, the number ofcorrectly solved pronouns i  smaller (by 40%).The pronoun resolution score, 62%, is a littlesmaller than those obtained elsewhere for Englishtexts; but these results are encouraging, especially asthey rely only on simple rules.
Moreover, on thisparticular text, we have observed, that 50% of themistakes could be avoided using on the one handsimple semantic constraints derived from verbalargument s ructure (e.g., human/non-human subject,animated/non-animated subject/object...); on theother hand syntactic onstraints concerning the pos-sibilities of coreference between NPs and pronounsoccurring in the same sentence.Further work will first concem a more accuratetuning of the parameters, and adjunction of newactivation and selection rules.
In particular, syntacticrestrictions will be adapted to the local parser's data.Also, we would like to make the processing entirelyautomatic, which requires a selection among the NPsprovided by the lOcal parser, and disambiguation ofthe pronouns.
These being complex tasks, they willprobably decrease the success rate, especially withrespect o English, where articles and pronouns arenever homonymous.AcknowledgementsThe authors are grateful to Anne Reboul, GrrardSabah and Jean-Baptiste Berthelin for valuable dis-cussions and advice.
This work is related to theCERVICAL research project, involving members ofthe LIMSI (Orsay)and CRIN (Nancy).ReferencesAlshawi Hiyan 1987, Memory and Context ForLanguage Interpretation, Cambridge UniversityPress, Cambridge, UK.Ariel Mira 1990, Accessing noun-phrase antecedents,Routlege, Londres.Ariel Mira 1994, Interpreting anaphonc expressions:a cognitive versus a pragmatic approach, Journalof Linguistics, 30, p. 1-42.Berthelin Jean-Baptiste 1979, Le traitement du per-sonnage dans un systdme de comprdhensionautomatique du rdcit, Ph.D. Thesis, Paris VI.Dagan Ido and Alon ltai 1990, Automatic Processingof Large Corpora for the Resolution of AnaphoraReferences, 13th International Conference onComputational Linguistics, Coling-90, Helsinki,Finland, volume 3, p. 330-332.Ferrari Stfphane 1996, Detecting metaphors ondomain-specific corpora, ECAI Workshop C O SAon Corpus-Oriented Semantic Analysis, BudapestHungary, p. 24-33.Hirst Graeme 1981, Anaphora in Natural LanguageUnderstanding: A Survey, Springer-Verlag, Ber-lin.Huls Carla, Wim Claassen and Edwin Bos 1995,Automatic Referent Resolution of Deictic andAnaphoric Expressions, Computational Linguis-tics, 21, 1, p. 59-79.Hobbs Jerry R. 1978, Resolving Pronoun Refer-ences, Lingua 44, p. 339-352.Kennedy Christopher and Branimir Boguraev 1996a,Anaphora for Everyone: Pronominal AnaphoraResolution without a Parser, 16th InternationalConference on Computational Linguistics, COL-ING 96, Copenhagen, Denmark, volume 1/2, p.113-118.Kennedy Christopher and Branimir Boguraev 1996b,Anaphora in a Wider Context: Tracking Dis-course Referents, 12th European Conference onArtificial Intelligence, ECAI 96, John Wiley &Sons, Budapest, Hungary, p. 582-586.Lappin Shalom and Herbert J. Leass 1994, An Algo-rithm for Pronominal Anaphora Resolution,Computational Linguistics, 20, 4, p. 535-561.Rich Elaine and Susann Luperfoy 1988, An Archi-tecture for Anaphora Resolution, 2nd ACL Con-ference on Applied Natural Language Processing,Austin, Texas, p. 18-24.Vapillon Jrrrme, Xavier Briffault, Grrard Sabah andKarim Chibout 1997, An Object-Oriented Lin-guistic Engineering Environment using LFG(Lexical Functional Grammar) and CG(Conceptual Graphs), ACL '97 Workshop"Computational Enviromnents for Granmlar De-velopment and Linguistic Engineering", Madrid,Spain.99
