Proceedings of the 10th International Workshop on Finite State Methods and Natural Language Processing, pages 116?125,Donostia?San Sebastia?n, July 23?25, 2012. c?2012 Association for Computational LinguisticsLattice-Based Minimum Error Rate Training using Weighted Finite-StateTransducers with Tropical Polynomial WeightsAurelien Waite?
Graeme Blackwood??
Department of Engineering, University of Cambridge, Trumpington Street, CB2 1PZ, U.K.{aaw35|wjb31}@cam.ac.uk?
IBM T.J. Watson Research, Yorktown Heights, NY-10598blackwood@us.ibm.comWilliam Byrne?AbstractMinimum Error Rate Training (MERT) is amethod for training the parameters of a log-linear model.
One advantage of this methodof training is that it can use the large num-ber of hypotheses encoded in a translation lat-tice as training data.
We demonstrate that theMERT line optimisation can be modelled ascomputing the shortest distance in a weightedfinite-state transducer using a tropical polyno-mial semiring.1 IntroductionMinimum Error Rate Training (MERT) (Och, 2003)is an iterative procedure for training a log-linear sta-tistical machine translation (SMT) model (Och andNey, 2002).
MERT optimises model parametersdirectly against a criterion based on an automatedtranslation quality metric, such as BLEU (Papineniet al, 2002).
Koehn (2010) provides a full descrip-tion of the SMT task and MERT.MERT uses a line optimisation procedure (Presset al, 2002) to identify a range of points along a linein parameter space that maximise an objective func-tion based on the BLEU score.
A key property of theline optimisation is that it can consider a large set ofhypotheses encoded as a weighted directed acyclicgraph (Macherey et al, 2008), which is called a lat-tice.
The line optimisation procedure can also be ap-plied to a hypergraph representation of the hypothe-ses (Kumar et al, 2009).
?The work reported in this paper was carried out while theauthor was at the University of Cambridge.It has been noted that line optimisation over a lat-tice can be implemented as a semiring of sets of lin-ear functions (Dyer et al, 2010).
Sokolov and Yvon(2011) provide a formal description of such a semir-ing, which they denote the MERT semiring.
The dif-ference between the various algorithms derives fromthe differences in their formulation and implemen-tation, but not in the objective they attempt to opti-mise.Instead of an algebra defined in terms of trans-formations of sets of linear functions, we proposean alternative formulation using the tropical polyno-mial semiring (Speyer and Sturmfels, 2009).
Thissemiring provides a concise formalism for describ-ing line optimisation, an intuitive explanation of theMERT shortest distance, and draws on techniquesin the currently active field of Tropical Geometry(Richter-Gebert et al, 2005) 1.We begin with a review of the line optimisationprocedure, lattice-based MERT, and the weightedfinite-state transducer formulation in Section 2.
InSection 3, we introduce our novel formulationof lattice-based MERT using tropical polynomialweights.
Section 4 compares the performance of ourapproach with k-best and lattice-based MERT.2 Minimum Error Rate TrainingFollowing Och and Ney (2002), we assume thatwe are given a tuning set of parallel sentences{(r1, f1), ..., (rS , fS)}, where rs is the referencetranslation of the source sentence fs.
We also as-sume that sets of hypotheses Cs = {es,1, ..., es,K}1An associated technical report contains an extended discus-sion of our approach (Waite et al, 2011)116are available for each source sentence fs.Under the log-linear model formulation with fea-ture functions hM1 and model parameters ?M1 , themost probable translation in a set Cs is selected ase?
(fs;?M1 ) = argmaxe?Cs{ M?m=1?mhm(e, fs)}.
(1)With an error function of the form E(rS1 , eS1 ) =?Ss=1E(rs, es), MERT attempts to find model pa-rameters to minimise the following objective:?
?M1 = argmin?M1{ S?s=1E(rs, e?
(fs;?M1 ))}.
(2)Note that for MERT the hypotheses set Cs isa k-best list of explicitly enumerated hypotheses,whereas lattice-based MERT uses a larger space.2.1 Line OptimisationAlthough the objective function in Eq.
(2) cannot besolved analytically, the line optimisation procedureof Och (2003) can be used to find an approxima-tion of the optimal model parameters.
Rather thanevaluating the decision rule in Eq.
(1) over all pos-sible points in parameter space, the line optimisa-tion considers a subset of points defined by the line?M1 +?dM1 , where ?M1 corresponds to an initial pointin parameter space and dM1 is the direction alongwhich to optimise.
Eq.
(1) can be rewritten as:e?
(fs; ?)
= argmaxe?Cs{(?M1 + ?dM1 )ThM1 (e, f s)}= argmaxe?Cs{?m?mhm(e, f s)?
??
?a(e,fs)+?
?mdmhm(e, f s)?
??
?b(e,fs)}= argmaxe?Cs{a(e, f s) + ?b(e, f s)?
??
?`e(?)}
(3)This decision rule shows that each hypothesise ?
Cs is associated with a linear function of ?:`e(?)
= a(e, f s) + ?b(e, f s), where a(e, f s) is they-intercept and b(e, f s) is the gradient.
The opti-misation problem is further simplified by defining asubspace over which optimisation is performed.
Thesubspace is found by considering a form of the func-tion in Eq.
(3) defined with a range of real numbers(Macherey et al, 2008; Och, 2003):Env(f) = maxe?C{a(e, f) + ?b(e, f)?
??
?`e(?
): ?
?
R} (4)?Env(fs; ?
)`e1`e2 `e3`e4?E(rs, e?
(fs; ?
))e4e3e1?1 ?2Figure 1: An upper envelope and projected error.
Notethat the upper envelope is completely defined by hypothe-ses e4, e3, and e1, together with the intersection points ?1and ?2 (after Macherey et al (2008), Fig.
1).For any value of ?
the linear functions `e(?)
associ-ated with Cs take (up to) K values.
The function inEq.
(4) defines the ?upper envelope?
of these valuesover all ?.
The upper envelope has the form of a con-tinuous piecewise linear function in ?.
The piece-wise linear function can be compactly described bythe linear functions which form line segments andthe values of ?
at which they intersect.
The examplein the upper part of Figure 1 shows how the upperenvelope associated with a set of four hypothesescan be represented by three associated linear func-tions and two values of ?.
The first step of line op-timisation is to compute this compact representationof the upper envelope.Macherey et al (2008) use methods from com-putational geometry to compute the upper envelope.The SweepLine algorithm (Bentley and Ottmann,1979) computes the upper envelope from a set of lin-ear functions with a complexity of O(K log(K)).Computing the upper envelope reduces the run-time cost of line optimisation as the error functionneed only be evaluated for the subset of hypothesesin Cs that contribute to the upper envelope.
Theseerrors are projected onto intervals of ?, as shown inthe lower part of Figure 1, so that Eq.
(2) can bereadily solved.2.2 Incorporation of Line Optimisation intoMERTThe previous algorithm finds the upper envelopealong a particular direction in parameter space over117a hypothesis set Cs.
The line optimisation algorithmis then embedded within a general optimisation pro-cedure.
A common approach to MERT is to selectthe directions using Powell?s method (Press et al,2002).
A line optimisation is performed on each co-ordinate axis.
The axis giving the largest decreasein error is replaced with a vector between the initialparameters and the optimised parameters.
Powell?smethod halts when there is no decrease in error.Instead of using Powell?s method, the DownhillSimplex algorithm (Press et al, 2002) can be usedto explore the criterion in Eq.
(2).
This is done bydefining a simplex in parameter space.
Directionswhere the error count decreases can be identified byconsidering the change in error count at the pointsof the simplex.
This has been applied to parametersearching over k-best lists (Zens et al, 2007).Both Powell?s method and the Downhill Simplexalgorithms are approaches based on heuristics to se-lect lines ?M1 + ?dM1 .
It is difficult to find theoret-ically sound reasons why one approach is superior.Therefore Cer et al (2008) instead choose the di-rection vectors dM1 at random.
They report that thismethod can find parameters that are as good as theparameters produced by more complex algorithms.2.3 Lattice Line OptimisationMacherey et al (2008) describe a procedure for con-ducting line optimisation directly over a word latticeencoding the hypotheses in Cs.
Each lattice edge islabelled with a word e and has a weight defined bythe vector of word specific feature function valueshM1 (e, f) so that the weight of a path in the latticeis found by summing over the word specific featurefunction values on that path.
Given a line throughparameter space, the goal is to extract from a latticeits upper envelope and the associated hypotheses.Their algorithm proceeds node by node throughthe lattice.
Suppose that for a state q the upper enve-lope is known for all the partial hypotheses on allpaths leading to q.
The upper envelope defines aset of functions {`e?1(?
), ..., `e?N (?)}
over the partialhypotheses e?n.
Two operations propagate the upperenvelope to other lattice nodes.We refer to the first operation as the ?extend?
op-eration.
Consider a single edge from state q to stateq?.
This edge defines a linear function associatedwith a single word `e(?).
A path following this edgetransforms all the partial hypotheses leading to q byconcatenating the word e. The upper envelope as-sociated with the edge from q to q?
is changed byadding `e(?)
to the set of linear functions.
The in-tersection points are not changed by this operation.The second operation is a union.
Suppose q?has another incoming edge from a state q??
whereq 6= q??.
There are now two upper envelopes rep-resenting two sets of linear functions.
The first up-per envelope is associated with the paths from theinitial state to state q?
via the state q.
Similarly thesecond upper envelope is associated with paths fromthe initial state to state q?
via the state q??.
The upperenvelope that is associated with all paths from theinitial state to state q?
via both q and q??
is the unionof the two sets of linear functions.
This union is nolonger a compact representation of the upper enve-lope as there may be functions which never achievea maximum for any value of ?.
The SweepLine al-gorithm (Bentley and Ottmann, 1979) is applied tothe union to discard redundant linear functions andtheir associated hypotheses (Macherey et al, 2008).The union and extend operations are applied tostates in topological order until the final state isreached.
The upper envelope computed at the finalstate compactly encodes all the hypotheses that max-imise Eq.
(1) along the line ?M1 + ?dM1 .
Macherey?stheorem (Macherey et al, 2008) states that an upperbound for the number of linear functions in the up-per envelope at the final state is equal to the numberof edges in the lattice.2.4 Line Optimisation using WFSTsFormally, a weighted finite-state transducer (WFST)T = (?,?, Q, I, F,E, ?, ?)
over a semiring(K,?,?, 0?, 1?)
is defined by an input alphabet ?, anoutput alphabet ?, a set of states Q, a set of initialstates I ?
Q, a set of final states F ?
Q, a setof weighted transitions E, an initial state weight as-signment ?
: I ?
K, and a final state weight assign-ment ?
: F ?
K (Mohri et al, 2008).
The weightedtransitions of T form the setE ?
Q????
?K?Q,where each transition includes a source state fromQ,input symbol from ?, output symbol from ?, costfrom the weight set K, and target state from Q.For each state q ?
Q, let E[q] denote the set ofedges leaving state q.
For each transition e ?
E[q],let p[e] denote its source state, n[e] its target state,118and w[e] its weight.
Let pi = e1 ?
?
?
eK denote apath in T from state p[e1] to state n[eK ], so thatn[ek?1] = p[ek] for k = 2, .
.
.
,K. The weight as-sociated by T to path pi is the generalised product ?of the weights of the individual transitions:w[pi] =K?k=1w[ek] = w[e1]?
?
?
?
?
w[eK ] (5)If P(q) denotes the set of all paths in T start-ing from an initial state in I and ending in state q,then the shortest distance d[q] is defined as the gen-eralised sum ?
of the weights of all paths leading toq (Mohri, 2002):d[q] = ?pi?P(q)w[pi] (6)For some semirings, such as the tropical semir-ing, the shortest distance is the weight of the short-est path.
For other semirings, the shortest distanceis associated with multiple paths (Mohri, 2002); forthese semirings there are shortest distances but neednot any be shortest paths.
That will be the case inwhat follows.
However, the shortest distance algo-rithms rely only on general properties of semirings,and once the semiring is specified, the general short-est distance algorithms can be directly employed.Sokolov and Yvon (2011) define the MERTsemiring based on operations described in the pre-vious section.
The extend operation is used for thegeneralised product ?.
The union operation fol-lowed by an application of the SweepLine algorithmbecomes the generalised sum ?.
The word latticeis then transformed for an initial parameter ?M1 anddirection dM1 .
The weight of edge is mapped froma word specific feature function hM1 (e, f) to a wordspecific linear function `e(?).
The weight of eachpath is the generalised product ?
of the word spe-cific feature linear functions.
The upper envelope isthe shortest distance of all the paths in the WFST.3 The Tropical Polynomial SemiringIn this section we introduce the tropical polynomialsemiring (Speyer and Sturmfels, 2009) as a replace-ment for the MERT semiring (Sokolov and Yvon,2011).
We then provide a full description and aworked example of our MERT algorithm.3.1 Tropical PolynomialsA polynomial is a linear combination of a finitenumber of non-zero monomials.
A monomial con-sists of a real valued coefficient multiplied by one ormore variables, and these variables may have expo-nents that are non-negative integers.
In this sectionwe limit ourselves to a description of a polynomialin a single variable.
A polynomial function is de-fined by evaluating a polynomial:f(?)
= an?n + an?1?n?1 + ?
?
?+ a2?2 + a1?+ a0A useful property of these polynomials is that theyform a ring2 (Cox et al, 2007) and therefore are can-didates for use as weights in WFSTs.Speyer and Sturmfels (2009) apply the defini-tion of a classical polynomial to the formulation ofa tropical polynomial.
The tropical semiring usessummation for the generalised product ?
and a minoperation for the generalised sum ?.
In this form,let ?
be a variable that represents an element in thetropical semiring weight set R ?
{??,+?}.
Wecan write a monomial of ?
raised to an integer expo-nent as?i = ?
?
?
?
?
?
??
??
?iwhere i is a non-negative integer.
The monomialcan also have a constant coefficient: a?
?i, a ?
R.We can define a function that evaluates a tropicalmonomial for a particular value of ?.
For example,the tropical monomial a?
?i is evaluated as:f(?)
= a?
?i = a+ i?This shows that a tropical monomial is a linearfunction with the coefficient a as its y-intercept andthe integer exponent i as its gradient.
A tropicalpolynomial is the generalised sum of tropical mono-mials where the generalised sum is evaluated usingthe min operation.
For example:f(?)
= (a?
?i)?
(b?
?j) = min(a+ i?, b+ j?
)Evaluating tropical polynomials in classical arith-metic gives the minimum of a finite collection oflinear functions.Tropical polynomials can also be multiplied by amonomial to form another tropical polynomial.
Forexample:f(?)
= [(a?
?i)?
(b?
?j)]?
(c?
?k)= [(a+ c)?
?i+k]?
[(b+ c)?
?j+k]= min((a+ c) + (i+ k)?, (b+ c) + (j + k)?
)2A ring is a semiring that includes negation.119Our re-formulation of Eq.
(4) negates the featurefunction weights and replaces the argmax by anargmin.
This allows us to keep the usual formu-lation of tropical polynomials in terms of the minoperation when converting Eq.
(4) to a tropical rep-resentation.
What remains to be addressed is the roleof integer exponents in the tropical polynomial.3.2 Integer Realisations for TropicalMonomialsIn the previous section we noted that the functiondefined by the upper envelope in Eq.
(4) is simi-lar to the function represented by a tropical poly-nomial.
A significant difference is that the formaldefinition of a polynomial only allows integer expo-nents, whereas the gradients in Eq.
(4) are real num-bers.
The upper envelope therefore encodes a largerset of model parameters than a tropical polynomial.To create an equivalence between the upper enve-lope and tropical polynomials we can approximatethe linear functions {`e(?)
= a(e, f s)+?
?
b(e, f s)}that compose segments of the upper envelope.
Wedefine a?
(e, f s) = [a(e, f s) ?
10n]int and b?
(e, f s) =[b(e, f s)?10n]int where [x]int denotes the integer partof x.
The approximation to `e(?)
is:`e(?)
?
?`e(?)
=a?
(e, f s)10n + ?
?b?
(e, f s)10n (7)The result of this operation is to approximatethe y-intercept and gradient of `e(?)
to n decimalplaces.
We can now represent the linear function?`e(?)
as the tropical monomial?a?
(e, fs)???b?
(e,fs).Note that a?
(e, fs) and b?
(e, fs) are negated since trop-ical polynomials define the lower envelope as op-posed to the upper envelope defined by Eq.
(4).The linear function represented by the tropicalmonomial is a scaled version of `e(?
), but the up-per envelope is unchanged (to the accuracy allowedby n).
If for a particular value of ?, `ei(?)
> `ej (?
),then ?`ei(?)
> ?`ej (?).
Similarly, the boundarypoints are unchanged: if `ei(?)
= `ej (?
), then?`ei(?)
= ?`ej (?).
Setting n to a very large value re-moves numerical differences between the upper en-velope and the tropical polynomial representation,as shown by the identical results in Table 1.Using a scaled version of `e(?)
as the basis for atropical monomial may cause negative exponents tobe created.
Following Speyer and Sturmfels (2009),?f(?)0a?
?i(a?
?i)?
(b?
?j)?
(c?
?k)b?
?jc?
?kFigure 2: Redundant terms in a tropical polynomial.
Inthis case (a??i)?(b??j)?(c?
?k) = (a??i)?(c?
?k).we widen the definition of a tropical polynomial toallow for these negative exponents.3.3 Canonical Form of a Tropical PolynomialWe noted in Section 2.1 that linear functions inducedby some hypotheses do not contribute to the upperenvelope and can be discarded.
Terms in a tropi-cal polynomial can have similar behaviour.
Figure2 plots the lines associated with the three terms ofthe example polynomial function f(?)
= (a??i)?(b??j)?(c??k).
We note that the piecewise linearfunction can also be described with the polynomialf(?)
= (a??i)?(c??k).
The latter representationis simpler but equivalent.Having multiple representations of the same poly-nomial causes problems when implementing theshortest distance algorithm defined by Mohri (2002).This algorithm performs an equality test betweenvalues in the semiring used to weight the WFST.
Thebehaviour of the equality test is ambiguous whenthere are multiple polynomial representations of thesame piecewise linear function.
We therefore re-quire a canonical form of a tropical polynomial sothat a single polynomial represents a single function.We define the canonical form of a tropical polyno-mial to be the tropical polynomial that contains onlythe monomial terms necessary to describe the piece-wise linear function it represents.We remove redundant terms from a tropical poly-nomial after computing the generalised sum.
For atropical polynomial of one variable we can take ad-vantage of the equivalence with Lattice MERT andcompute the canonical form using the SweepLine al-gorithm (Bentley and Ottmann, 1979).
Each term120corresponds to a linear function; linear functionsthat do not contribute to the upper envelope are dis-carded.
Only monomials which correspond to theremaining linear functions are kept in the canonicalform.
The canonical form of a tropical polynomialthus corresponds to a unique and minimal represen-tation of the upper envelope.3.4 Relationship to the Tropical SemiringTropical monomial weights can be transformed intoregular tropical weights by evaluating the tropicalmonomial for a specific value of ?.
For example, atropical polynomial evaluated at ?
= 1 correspondsto the tropical weight:f(1) = ?a?
(e, fs)?
1?b?
(e,fs) = ?a?
(e, fs)?
b?
(e, fs)Each monomial term in the tropical polynomialshortest distance represents a linear function.
Theintersection points of these linear functions defineintervals of ?
(as in Fig.
1).
This suggests an alter-nate explanation for what the shortest distance com-puted using the tropical polynomial semiring rep-resents.
Conceptually, there is a continuum of lat-tices which have identical edges and vertices butwith varying, real-valued edge weights determinedby values of ?
?
R, so that each lattice in the contin-uum is indexed by ?.
The tropical polynomial short-est distance agrees with the shortest distance througheach lattice in the continuum.Our alternate explanation is consistent with theTheorem of Macherey (Section 2.3), as there couldnever be more paths than edges in the lattice.
There-fore the upper bound for the number of monomialterms in the tropical polynomial shortest distance isthe number of edges in the input lattice.We can use the mapping to the tropical semiringto compute the error surface.
Let us assume we haven + 1 intervals separated by n interval boundaries.We use the midpoint of each interval to transform thelattice of tropical monomial weights into a lattice oftropical weights.
The sequence of words that labelthe shortest path through the transformed lattice isthe MAP hypothesis for the interval.
The shortestpath can be extracted using the WFST shortest pathalgorithm (Mohri and Riley, 2002).
As a technicalmatter, the midpoints of the first interval [?
?, ?1)and last interval [?n,?)
are not defined.
We there-fore evaluate the tropical polynomial at ?
= ?1 ?
1and ?
= ?n + 1 to find the MAP hypothesis in thefirst and last intervals, respectively.3.5 The TGMERT AlgorithmWe now describe an alternative algorithm to Lat-tice MERT that is formulated using the tropicalpolynomial shortest distance in one variable.
Wecall the algorithm TGMERT, for Tropical Geome-try MERT.
As input to this procedure we use a wordlattice weighted with word specific feature functionshM1 (e, f), a starting point ?M1 , and a direction dM1 inparameter space.1.
Convert the word specific feature functionshM1 (e, f) to a linear function `e(?)
using ?M1and dM1 , as in Eq.
(3).2.
Convert `e(?)
to ?`e(?)
by approximating y-intercepts and gradients to n decimal places, asin Eq.
(7).3.
Convert ?`e(?)
in Eq.
(7) to the tropical mono-mial ?a?
(e, fs)?
??b?(e,fs).4.
Compute the WFST shortest distance to the exitstates (Mohri, 2002) with generalised sum ?and generalised product ?
defined by the trop-ical polynomial semiring.
The resulting trop-ical polynomial represents the upper envelopeof the lattice.5.
Compute the intersection points of the linearfunctions corresponding to the monomial termsof the tropical polynomial shortest distance.These intersection points define intervals of ?in which the MAP hypothesis does not change.6.
Using the midpoint of each interval convert thetropical monomial?a?
(e, fs)???b?
(e,fs) to a reg-ular tropical weight.
Find the MAP hypothesisfor this interval by extracting the shortest pathusing the WFST shortest path algorithm (Mohriand Riley, 2002).3.6 TGMERT Worked ExampleThis section presents a worked example showinghow we can use the TGMERT algorithm to computethe upper envelope of a lattice.
We start with a threestate lattice with a two dimensional feature vectorshown in the upper part of Figure 3.We want to optimise the parameters along a linein two-dimensional feature space.
Suppose the ini-tial parameters are ?21 = [0.7, 0.4] and the direction1210 1 2z/[?0.2, 0.7]?x/[?1.4, 0.3]?y/[?0.9,?0.8]?z/[?0.2,?0.6]?0 1 2z/?14?
??29x/86?
?27y/95?
?67z/38?
?36Figure 3: The upper part is a translation lattice with 2-dimensional log feature vector weights hM1 (e, f) whereM = 2.
The lower part is the lattice from the upper partwith weights transformed into tropical monomials.is d21 = [0.3, 0.5].
Step 1 of the TGMERT algorithm(Section 3.5) maps each edge weight to a word spe-cific linear function.
For example, the weight of theedge labelled ?x?
between states 0 and 1 is trans-formed as follows:`e(?)
=2?m=1?mhM1 (e, f)?
??
?a(e,f)+?2?m=1dmhM1 (e,fs)?
??
?b(e,f)= 0.7 ?
?1.4 + 0.4 ?
0.3?
??
?a(e,f)+?
?
0.3 ?
?1.4 + 0.5 ?
0.3?
??
?b(e,f)= ?0.86?
0.27?Step 2 of the TGMERT algorithm converts theword specific linear functions into tropical mono-mial weights.
Since all y-intercepts and gradientshave a precision of two decimal places, we scale thelinear functions `e(?)
by 102 and negate them to cre-ate tropical monomials (Step 3).
The edge labelled?x?
now has the monomial weight of 86?
?27.
Thetransformed lattice with weights mapped to the trop-ical polynomial semiring is shown in the lower partof Figure 3.We can now compute the shortest distance(Mohri, 2002) from the transformed example latticewith tropical monomial weights.
There are threeunique paths through the lattice corresponding tothree distinct hypotheses.
The weights associatedwith these hypotheses are:?14?
?
?29 ?
38?
?36 = 24?
?7 z z86?
?27 ?
38?
?36 = 122?
?63 x z95?
?67 ?
38?
?36 = 133?
?103 y z0 1 2z/-2.4x/75.2y/68.2z/23.60 1 2z/55.6x/21.2y/-65.8z/-48.4Figure 4: The lattice in the lower part of Figure 3 trans-formed to regular tropical weights: ?
= ?0.4 (top) and?
= ?1.4 (bottom).The shortest distance from initial to final state isthe generalised sum of the path weights: (24??7)?(133?
?103).
The monomial term 122?
?63 corre-sponding to ?x z?
can be dropped because it is notpart of the canonical form of the polynomial (Sec-tion 3.3).
The shortest distance to the exit state canbe represented as the minimum of two linear func-tions: min(24 + 7?, 133 + 103?
).We now wish to find the hypotheses that definethe error surface by performing Steps 5 and 6 of theTGMERT algorithm.
These two linear functions de-fine two intervals of ?.
The linear functions intersectat ?
?
?1.4; at this value of ?
the MAP hypothesischanges.
Two lattices with regular tropical weightsare created using ?
= ?0.4 and ?
= ?2.4.
Theseare shown in Figure 4.
For the lattice shown in theupper part the value for the edge labelled ?x?
is com-puted as 86?
?0.427 = 86 + 0.4 ?
27 = 75.2.When ?
= ?0.4 the lattice in the upper part inFigure 4 shows that the shortest path is associatedwith the hypothesis ?z z?, which is the MAP hy-pothesis for the range ?
< 1.4.
The lattice in thelower part of Figure 4 shows that when ?
= ?2.4the shortest path is associated with the hypothesis?y z?, which is the MAP hypothesis when ?
> 1.4.3.7 TGMERT ImplementationTGMERT is implemented using the OpenFst Toolkit(Allauzen et al, 2007).
A weight class is addedfor tropical polynomials which maintains them incanonical form.
The ?
and ?
operations are im-plemented for piece-wise linear functions, with theSweepLine algorithm included as discussed.122Iteration Arabic-to-EnglishMERT LMERT TGMERTTune Test Tune Test Tune Test1 36.2 36.2 36.242.1 40.9 39.7 38.9 39.7 38.92 42.0 44.5 44.545.1 43.2 45.8 44.3 45.8 44.33 44.545.5 44.14 45.645.7 44.0Iteration Chinese-to-EnglishMERT LMERT TGMERTTune Test Tune Test Tune Test1 19.5 19.5 19.525.3 16.7 29.3 22.6 29.3 22.62 16.4 22.5 22.518.9 23.9 31.4 32.1 31.4 32.13 23.6 31.6 31.628.2 29.1 32.2 32.5 32.2 32.54 29.2 32.2 32.231.3 31.5 32.2 32.5 32.2 32.55 31.331.8 32.16 32.132.4 32.37 32.432.4 32.3Table 1: GALE AR?EN and ZH?EN BLEU scoresby MERT iteration.
BLEU scores at the initial and finalpoints of each iteration are shown for the Tune sets.4 ExperimentsWe compare feature weight optimisation using k-best MERT (Och, 2003), lattice MERT (Machereyet al, 2008), and tropical geometry MERT.
We referto these as MERT, LMERT, and TGMERT, resp.We investigate MERT performance in the contextof the Arabic-to-English GALE P4 and Chinese-to-English GALE P3 evaluations3.
For Arabic-to-English translation, word alignments are generatedover around 9M sentences of GALE P4 parallel text.Following de Gispert et al (2010b), word align-ments for Chinese-to-English translation are trainedfrom a subset of 2M sentences of GALE P3 paral-lel text.
Hierarchical rules are extracted from align-ments using the constraints described in (Chiang,2007) with additional count and pattern filters (Igle-3See http://projects.ldc.upenn.edu/gale/data/catalog.htmlsias et al, 2009b).
We use a hierarchical phrase-based decoder (Iglesias et al, 2009a; de Gispert etal., 2010a) which directly generates word latticesfrom recursive translation networks without any in-termediate hypergraph representation (Iglesias et al,2011).
The LMERT and TGMERT optimisation al-gorithms are particularly suitable for this realisationof hiero in that the lattice representation avoids theneed to use the hypergraph formulation of MERTgiven by Kumar et al (2009).MERT optimises the weights of the following fea-tures: target language model, source-to-target andtarget-to-source translation models, word and rulepenalties, number of usages of the glue rule, worddeletion scale factor, source-to-target and target-to-source lexical models, and three count-based fea-tures that track the frequency of rules in the paralleldata (Bender et al, 2007).
In both Arabic-to-Englishand Chinese-to-English experiments all MERT im-plementations start from a flat feature weight initial-ization.
At each iteration new lattices and k-best listsare generated from the best parameters at the previ-ous iteration, and each subsequent iteration includes100 hypotheses from the previous iteration.
ForArabic-to-English we consider an additional twentyrandom starting parameters at every iteration.
Alltranslation scores are reported for the IBM imple-mentation of BLEU using case-insensitive match-ing.
We report BLEU scores for the Tune set at thestart and end of each iteration.The results for Arabic-to-English and Chinese-to-English are shown in Table 1.
Both TGMERTand LMERT converge to a small gain over MERTin fewer iterations, consistent with previous re-ports (Macherey et al, 2008).5 DiscussionWe have described a lattice-based line optimisationalgorithm which can be incorporated into MERTfor parameter tuning of SMT systems and systemsbased on log-linear models.
Our approach recaststhe optimisation procedure used in MERT in termsof Tropical Geometry; given this formulation imple-mentation is relatively straightforward using stan-dard WFST operations and algorithms.123ReferencesC.
Allauzen, M. Riley, J. Schalkwyk, W. Skut, andM.
Mohri.
2007.
OpenFst: A general and efficientweighted finite-state transducer library.
In Proceed-ings of the Ninth International Conference on Imple-mentation and Application of Automata, pages 11?23.O.
Bender, E. Matusov, S. Hahn, S. Hasan, S. Khadivi,and H. Ney.
2007.
The RWTH Arabic-to-English spo-ken language translation system.
In Automatic SpeechRecognition Understanding, pages 396 ?401.J.L.
Bentley and T.A.
Ottmann.
1979.
Algorithms forreporting and counting geometric intersections.
Com-puters, IEEE Transactions on, C-28(9):643 ?647.Daniel Cer, Daniel Jurafsky, and Christopher D. Man-ning.
2008.
Regularization and search for minimumerror rate training.
In Proceedings of the Third Work-shop on Statistical Machine Translation, pages 26?34.David Chiang.
2007.
Hierarchical phrase-based transla-tion.
Computational Linguistics, 33.David A. Cox, John Little, and Donal O?Shea.
2007.Ideals, Varieties, and Algorithms: An Introduction toComputational Algebraic Geometry and CommutativeAlgebra, 3/e (Undergraduate Texts in Mathematics).Adria` de Gispert, Gonzalo Iglesias, Graeme Blackwood,Eduardo R. Banga, and William Byrne.
2010a.
Hier-archical phrase-based translation with weighted finite-state transducers and shallow-n grammars.
Computa-tional Linguistics, 36(3):505?533.Adria` de Gispert, Juan Pino, and William Byrne.
2010b.Hierarchical phrase-based translation grammars ex-tracted from alignment posterior probabilities.
In Pro-ceedings of the 2010 Conference on Empirical Meth-ods in Natural Language Processing, pages 545?554.Chris Dyer, Adam Lopez, Juri Ganitkevitch, JonathanWeese, Ferhan Ture, Phil Blunsom, Hendra Setiawan,Vladimir Eidelman, and Philip Resnik.
2010. cdec: Adecoder, alignment, and learning framework for finite-state and context-free translation models.
In Proceed-ings of the ACL 2010 System Demonstrations, pages7?12, July.Gonzalo Iglesias, Adria` de Gispert, Eduardo R. Banga,and William Byrne.
2009a.
Hierarchical phrase-basedtranslation with weighted finite state transducers.
InProceedings of HLT: The 2009 Annual Conference ofthe North American Chapter of the Association forComputational Linguistics, pages 433?441.Gonzalo Iglesias, Adria` de Gispert, Eduardo R. Banga,and William Byrne.
2009b.
Rule filtering by patternfor efficient hierarchical translation.
In Proceedingsof the 12th Conference of the European Chapter ofthe Association for Computational Linguistics, pages380?388.Gonzalo Iglesias, Cyril Allauzen, William Byrne, Adria`de Gispert, and Michael Riley.
2011.
Hierarchicalphrase-based translation representations.
In Proceed-ings of the 2011 Conference on Empirical Methods inNatural Language Processing, pages 1373?1383.
As-sociation for Computational Linguistics.Philipp Koehn.
2010.
Statistical Machine Translation.Cambridge University Press.Shankar Kumar, Wolfgang Macherey, Chris Dyer, andFranz Och.
2009.
Efficient minimum error rate train-ing and minimum bayes-risk decoding for translationhypergraphs and lattices.
In Proceedings of the JointConference of the 47th Annual Meeting of the ACL andthe 4th International Joint Conference on Natural Lan-guage Processing of the AFNLP, pages 163?171.Wolfgang Macherey, Franz Och, Ignacio Thayer, andJakob Uszkoreit.
2008.
Lattice-based minimum errorrate training for statistical machine translation.
In Pro-ceedings of the 2008 Conference on Empirical Meth-ods in Natural Language Processing, pages 725?734.Mehryar Mohri and Michael Riley.
2002.
An efficientalgorithm for the n-best-strings problem.
In Proceed-ings of the International Conference on Spoken Lan-guage Processing 2002.Mehryar Mohri, Fernando C. N. Pereira, and Michael Ri-ley.
2008.
Speech recognition with weighted finite-state transducers.
Handbook on Speech Processingand Speech Communication.Mehryar Mohri.
2002.
Semiring frameworks and algo-rithms for shortest-distance problems.
J. Autom.
Lang.Comb., 7(3):321?350.Franz Josef Och and Hermann Ney.
2002.
Discrimi-native training and maximum entropy models for sta-tistical machine translation.
In Proceedings of the40th Annual Meeting on Association for Computa-tional Linguistics, pages 295?302.Franz Josef Och.
2003.
Minimum error rate trainingin statistical machine translation.
In Proceedings ofthe 41st Annual Meeting on Association for Computa-tional Linguistics, pages 160?167.K.
A. Papineni, S. Roukos, T. Ward, and W. Zhu.
2002.BLEU: a method for automatic evaluation of ma-chine translation.
In Proceedings of the 40th AnnualMeeting on Association for Computational Linguis-tics, pages 311?318.W.
H. Press, W. T. Vetterling, S. A. Teukolsky, and B. P.Flannery.
2002.
Numerical Recipes in C++: the artof scientific computing.
Cambridge University Press.J.
Richter-Gebert, B. Sturmfels, and T. Theobald.
2005.First steps in tropical geometry.
In Idempotent mathe-matics and mathematical physics.Artem Sokolov and Franc?ois Yvon.
2011.
Minimum er-ror rate training semiring.
In Proceedings of the Euro-pean Association for Machine Translation.124David Speyer and Bernd Sturmfels.
2009.
Tropicalmathematics.
Mathematics Magazine.Aurelien Waite, Graeme Blackwood, and William Byrne.2011.
Lattice-based minimum error rate training usingweighted finite-state transducers with tropical polyno-mial weights.
Technical report, Department of Engi-neering, University of Cambridge.Richard Zens, Sasa Hasan, and Hermann Ney.
2007.A systematic comparison of training criteria for sta-tistical machine translation.
In Proceedings of the2007 Joint Conference on Empirical Methods in Natu-ral Language Processing and Computational NaturalLanguage Learning, pages 524?532.125
