THE SUBWORLD CONCEPT LEX ICON AND THE LEXICON MANAGEMENTSYSTEMSergei N i renburgCenter for Machine TranslationCarnegie Mellon UniversityVictor  RaskinNatural Language Processing LaboratoryPurdue UniversityNatural language processing systems require three different types of lexicons: the concept lexicon thatdescribes the (sub)world ontology and the analysis and generation lexicons for natural languages.
Weargue that the acquisition of the concept lexicon must precede any lexical work on natural language andthat a comprehensive lexicon management system (LMS) is necessary for lexicon acquisition inlarge-scale applications.
We describe the interactive concept lexicon acquisition module of the LMS forTRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project.This project belongs to two of the fastest growing fieldsof computational linguistics and artificial intelligence ingeneral: the lexicon and knowledge acquisition for AIsystems.The work in lexicon has centered on a) studiesconcerned with the utilization of conventional human-oriented ictionaries, newly available in machine-read-able form, for computational tasks (e.g., Amsler1984a,b; Chodorow et al 1985; Ahlswede 1985; Marko-witz et al 1986) improving the ancillary capabilities forlexicon systems, such as, for instance, morphologicalprocessors and descriptions (e.g., Nirenburg and BenAsher 1984; Byrd et al 1986; Boguraev et al 1987); c)hand-building oflexicons necessary for natural languagesystems, often with considerations about extensibility(e.g., Zernik and Dyer 1985; Bessemer and Jacobs1987).
An interesting perspective on the field is given inMiller (1985).Knowledge acquisition is a central topic in AI andexpert systems.
A number of systems exist for assis-tance in acquiring specialized knowledge for naturallanguage processing.
Thus, TEAM (Grosz et al 1985),TEL1 (Ballard and Stumberger, 1986), IRACQ (Ayusoet al 1987) and some others are devoted to facilitatingcustomizations in the framework of database querysystems; INKA (Phillips et al 1986) and CYC (Lenat etal.
1986) are examples of knowledge acquisition systemsaimed at expert system design.We would like to address ome important method-ological and strategic points in providing the lexiconsupport in the context of a text processing system, suchas the machine translation system TRANSLATOR (Ni-renburg et al 1987).1.
NEED HELP BUILDING LEXICONA natural anguage lexicon is a necessary part of anynatural language processing (NLP) system.
Buildingsuch a lexicon is an important Rnowledge acquisitiontask.
The format of the lexicon has been the subject ofsubstantial number of research projects, both in linguis-tics and in artificial intelligence (AI).
In linguistic se-mantics, the efforts have focused on the formal notationfor representing semantic knowledge with a specialemphasis on the involved categories and rules.
Theprojects have ranged from simple feature notations(Katz, Fodor 1963; Bendix 1966) to script-based con-textual analysis (Raskin 1986).In AI, this type of work belongs to the area ofknowledge representation.
A number of methods ofrepresenting knowledge have been developed, rangingfrom first-order predicate calculus notation to quitesophisticated frame-based and advanced logical formal-isms.
(Brachman and Levesque 1985 summarizes thestate of the art in knowledge representation.
)By comparison, the number of projects devoted tothe design of procedures for compiling and maintainingCopyright 1987 by the Association for Computational Linguistics.
Permission to copy without fee all or part of this material is granted providedthat the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page.
Tocopy otherwise, or to republish, requires a fee and/or specific permission.0362-613X/87/030276-289503.00276 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management Systema large lexicon has been relatively small.
The usualpractice in AI has been to suggest a relatively well-developed knowledge representation language and thenuse it to represent a miniature world or a very restrictedsublanguage.
It is clear, however, that for an NLPsystem to be really useful, one needs not only to providea language in which to record the meanings of linguisticunits, but also, in fact, to record those meanings for anon-miniature world (and its corresponding sublangu-age).The crux of this problem is generating linguisticheuristics to support he growth of the representation fthe subworld/sublanguage.
Indeed, there can be nodeterministic solution to the problem of knowledge?
acquisition; therefore, weaker, heuristic methodsshould be applied to (a) discovering the categories interms of which to account for the morphological, syn-tactical, and semantical properties of words and phrasesof natural anguage and (b) developing uidelines forcompiling the lexicon for a natural language.
It followsfrom the above that new, sophisticated ways of human-computer interaction must be devised in order to sup-port the tasks of linguistic description in terms ofAI-style knowledge representation.The implication of many workers in knowledge rep-resentation that once the notation is developed it will beeasy to use it for actually describing the world, is clearlyanti-intuitive and anti-experiential, s anybody who hasever developed an NLP system knows only too well.Quite frequently, the lack of any reference to theprocedures of lexical description spells out the differ-ence between a system conceived and a system exe-cuted.Thus, decisions to assign a word to a postulatedcategory, for instance, are far from straightforward - -many borderline cases have to be routinely consideredand resolved.
In any large application, lexicon buildingis typically done by a large number of relatively un-trained people who are certain to make non-uniformdecisions in many cases.
The instructions these peopleobtain at the beginning of their work cannot be veryprecise, unambiguous, or designed to provide in ad-vance for any contingency.
As a result, even a goodknowledge representation language cannot guarantee aquality lexicon.One can in principle think of avoiding these diffi-culties through automation.
Fully automated lexiconbuilding procedures would definitely ensure the unifor-mity of description.
There was a considerable enthusi-asm about the possibility of a complete automation oflexicology some 15-20 years ago (see, for instance,Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973).A more feasible scenario, however, is partial computa-tional assistance for lexicology, probably along the linessuggested in this paper, as well as utilizing such new andpromising resources as on-line dictionaries.Recent work on machine-readable dictionaries offersnew and interesting possibilities both for the computer-assisted lexicology (see Walker 1984) and for construct-ing lexical databases derived from the definitions inmachine-readable dictionaries and utilized in NLP alongwith other fields (see Amsler 1982, 1984a; Walker,Amsler 1986, Calzolari 1984a,b).
The premises andgoals of these efforts are fully compatible with ourbelief, first, that no AI system is ready to make the kindof decisions that lexicon building requires and, second,that 'simply having an online version of an encyclopedia\[or a dictionary\] would be of little use, as there ispractically nothing that current AI could draw from theraw text.
Rather, we must carefully re-represent theencyclopedia's knowledge - -  by hand - -  into somemore structured form' (Lenat et al 1986:75).
Suchre-representation would be necessary for Amsler's(1984a:458) 'lexical knowledge base \[which\] is a repos-itory of computational information about concepts' andwhich contains information derived from machine-read-able dictionaries, the full text of reference books, theresults of statistical analysis of text usages, and datamanually obtained from human world knowledge.
'This paper deals primarily with the last item onAmsler's agenda.
It is based on the following approachto the problem of lexicon building.
The work is done byhumans assisted by an interactive aid which enhancesproductivity and ensures uniformity.
It is important torecognize that lexicon building in NLP involves theacquisition of not one entity but rather of three interre-lated but distinct lexicons, namelya) the world concept lexicon which structures ourknowledge of the worldb) the analysis lexicon which is indexed by naturallanguage words and phrases connected with conceptsfrom the world concept lexicon, andc) the generation lexicon, which is indexed by  con-cepts in the world concept lexicon connected withnatural language words and phrases.In reality, AI systems deal not with the entire worldbut typically with a well-specified subworld of it.
Inother words, in any practical application, the worldconcept lexicon will, in fact, be a subworld conceptlexicon.
In the area of machine translation the analysisand generation lexicons involve two different naturallanguages, which creates the task of building suchresources as, say, an Eng l i sh -  subworld and subworld- -  Russian lexicons, as is the case, for example, inTRANSLATOR, the knowledge-based machine trans-lation project for the computer subworld (see Nirenburget al 1985, 1986, 1987).2.
WORLD FIRST, WORD LATERWe assert hat of the three lexicons described above,the first to be built must be the subworld conceptlexicon.
The availability of such a lexicon is a sine quanon for any subsequent lexical work in NLP.The recognized necessity to describe the conceptlexicon prior to dealing with natural languages is afeature which clearly distinguishes our approach fromComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management Systemother work on lexical aids (e.g., Ahlswede 1985) andbrings us closer to some non-NL work on knowledgeacquisition (e.g., Lenat et al 1986).Ahlswede (1985) describes a typical approach tolexicon building in a constrained subworld.
The sub-world is that of stroke medicine.
The interactive aid isdesigned for the analysis lexicon, in our terminology.The concept realm is not discussed at all, though thefour major semantic features used in this lexicon areobviously underlain by subworld concepts.
As a result,the structure and interrelations of concepts cannot beconveniently reasoned about.
Thus, for instance, thedistinction between 'general' and 'specific' features isnot supported by the ontology and is not really used,since only one subworld is chosen.We agree with those who believe that each subworldmust be described fully and uniformly prior to theintroduction of any semantic feature.
This may not befeasible or practical for some very rich domains - -  it isdefinitely beyond reach as far as the whole world servedby the whole language is concerned.
However, mostNLP systems are designed for constrained omains,and it will probably remain this way for some time.The description of a subworld is a matter of distin-guishing all the relevant concepts in it and arrangingthem in a logical, consistent, and meaningful way.
Weagree entirely with Lenat et al (1986:75) that to createa knowledge acquisition system, 'we must encode allthe world's knowledge down to some level of detail;there is no way to finesse this.'
We differ from them byour overt, theoretically built-in emphasis on limitedsubworlds.
More importantly, we want to assist the'knowledge nterers' with an interactive aid it is not atall clear how the CYC system of knowledge acquisitionwhich Lenat et al describe can ensure the quality anduniformity of the descriptions without such a device.Another eason why it is important as well as conve-nient to precede the lexical work with the description ofthe subworld is that such a description is natural an-guage-independent.
I  other words, the same subworldmay correspond to sublanguages of different naturallanguages.
In MT, the representation f the subworldfunctions as - -  and is - -  the interlingua.
Beginningdirectly with the lexicon of a natural anguage wouldmake the implied subworld biased toward this language,and this is known to have an adverse affect on thedescription of other natural sublanguages correspondingto the same subworld.The subworld concept lexicon determines the struc-ture of the associated analysis and generation lexicons.Thus, the constrained nature of the subworld (seeRaskin 1985 and references therein as well as Kittredgeand Lehrberger 1982 and Grishman and Kittredge 1986)always everely limits polysemy/homonymy so rampantin the language as a whole.
Thus, the concept lexiconfor the computer subworld will make it clear that thereis a need to accommodate only meanings (5) and (7) inthe lexical entry for operator in the correspondingsublanguage of English, even though the English lan-guage possesses all of the meanings listed in Figure I(cf.
SOED 1973:1453).
(1) one who does something, an agent(2) one who is professionally engaged to perform acertain operation(3) a surgeon(4) one who carries on financial operations(5) one who works a machine(6) one who works a business(7) a symbolFigure 1.
Meanings of operatorIn fact, (5) will be narrowed own even further in thesublanguage, to 'one who works a computer' and this iswhat the English (or any other natural language) lexicalentry should be limited to.The subworld concept lexicon also determines, to alarge extent, the inventory of semantic features used inthe entries of the analysis and generation lexicons, thevalues of those features, and their status.
Thus, a binarysemantic feature is usually induced by a branching inthe 'isa' hierarchy underlying the concept lexicon.Frame slots are suggested by a perceived link betweensome two hierarchically unrelated concepts in the con-cept lexicon.
The relative importance and scope offeatures used in analysis and generation lexicons de-pends on the status of the corresponding concepts in theconcept lexicon.
We now rest our case for the priorityof the concept lexicon over the analysis and generationlexicons and proceed to describe a system for facilitat-ing lexicon acquisition and maintenance.2.1 ThE DESIGN OF A LEXlCON MANAGEMENTSYSTEM.In a large-scale NLP application, the process of acquir-ing and maintaining the various lexicons cannot be leftunattended.
Therefore, any such application requires alexicon management system (LMS).
Historically, rela-tively less attention has been devoted to the lexicons inthis context han to either the grammars or the actualprocessing modules - -  parsers, inference ngines, andgenerators.
The importance of an LMS grows propor-tionally to the size of the lexicons necessary for anapplication and also to the depth of coverage.
Thus, forinstance, it is extremely important to use a principledLMS in a knowledge-based machine translation systemwhere the lexicons must cover not only the usualmorphological and syntactic knowledge but also thesemantic and pragmatic knowledge about the transla-tion area and where the typical number of concepts insuch an area is large.An LMS is a collection of programs that help create,augment, modify, and test the various lexicons in anNLP application.
The particular LMS described in thispaper is suggested for the TRANSLATOR project.
Thegoal of TRANSLATOR is ultimately to develop aknowledge-based multilingual machine translation sys-278 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemI Subworld SubworldConcept ConceptI Lexicon LexiconWorldConceptLexicon//Analysis AnalysisLexicon Lexicon(Natural (NaturalLanguage A) Language B)SubworldConceptLexicon-<//1Generation GenerauonLexicon Lexicon(Natural (NaturalLanguage C) Language A)KnowledgeI | Representation<---2 LanguageFigure 2.
The architecture of the TRANSLATOR Lexicon Module, including the Lexicon Management System (LMS).
Atpresent, the world concept lexicon is identical with the only subworld concept lexicon--that ofcomputer science.tem for multiple subject areas.
Various modules in thesystem are designed so as to allow interactive humanparticipation with no pre- or post-editing.
The LMS isone such module.The lexicon component of TRANSLATOR (Figure2) contains four types of lexicons:1. the subworld concept lexicons, which containrepresentations, in the DRL knowledge represen-tation language (Nirenburg, Raskin, Tucker 1986),of concepts that belong to a particular subworld,such as, for instance, the subworld of weatherreports or of research papers in computer science;2. the world concept lexicon, in which the informa-tion from all the available subworld concept lexi-cons is merged;3. the analysis lexicons, whose entries are indexed bylexical units in a natural language and whichcontaina) syntactic information about these units;b) a pointer to a corresponding concept in the con-cept lexicon (this link essentially assigns emanticmeaning to the lexical unit; note that some lexicalunits do not correspond to concepts); and/orc) additional control and constraint information forthe use of the analysis module of the underlyingNLP system.4.
the generation lexicons, whose entries are indexedby concepts in the concept lexicon and which containpointers to corresponding lexical units in the targetlanguage.
(Note that the analysis and generation lexi-cons are not symmetrical; for a detailed analysis of thedifferences see Nirenburg and Raskin 1989.
)LMS maintains all four types of lexicons.
In thispaper we will concentrate on describing that part of theLMS which is devoted to the maintenance of onesubworld concept lexicon (that of computer scienceresearch).The primary purpose of an LMS at the first stage ofthe project is to support knowledge acquisition.
At laterstages in the life of the LMS, testing and modificationwill become the primary types of work it supports.
Anordinary LMS user, i.e., an enterer, will obtain at thisstage a list of concepts to enter in the concept lexiconand will code the information about them in DRL.
TheLMS assists the enterer by providing raphic and otheraids for human decision making.
In case of doubt, theenterer can try to resolve the difficulty or to refer it tothe lexicon manager, whose responsibility it is to forcesolutions to problems in lexicon acquisition.The task of the manager has much in common withthat of a database administrator in the database systemComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 279Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management Systemenvironment.
In their respective capacities, they areboth responsible fora) maintaining the format and contents of the knowl-edge representation language ('data dictionary' indatabase terms);b) defining and executing the security and integritychecks for the accumulated data;c) developing and running statistic analysis routinesto monitor access time, etc.
(this becomes impor-tant in production-size l xicon systems);d) interfacing with regular users (enterers for thelexicon manager).In addition to the above, the lexicon manager alsomodifies the knowledge representation language in ac-cordance with the evidence accumulated in the processof knowledge acquisition.The LMS thus has two modes of operation: a modefor enterers and a mode that supports the activities of alexicon manager.
In what follows we will describe andillustrate how these modes are implemented in theTRANSLATOR LMS.
The system has been imple-mented in Zetalisp on a Symbolics 3600 Lisp Machine.2.2 A DRL ONTOLOGY FOR COMPUTER SUBWORLDThe intended result of the first stage of research re-ported in this paper is a computer subworld conceptlexicon.
The subsequent stages will add a number ofanalysis and generation lexicons.
We have argued thatfor the purpose of lexicon building it is necessary to gobeyond just proposing a knowledge representationframework.
It is necessary to use it for the constructionof actual exicons and to keep using it until the lexiconsare judged sufficiently complete.
An LMS must containa set of interactive aids to facilitate this type of activity.The first step is, however, still to suggest a knowl-edge representation scheme for coding lexical meaningsin a concept lexicon.
Structurally, the concept lexiconcan be viewed as a complex network, with concepts asnodes.
The connections in this network place the nodesin various hierarchies and classify them on the basis ofcertain characteristics and constraints.
We suggest aframe-based representation in which frames correspondto concepts, and slots convey constraints on the mean-ing of these concepts.
The sets of values that canoccupy certain slots, the domains of the latter, can befurther classified.
Thus, some slots take names ofconcepts in the world as values (such are hierarchy-related slots); some others, take values from speciallydefined property sets.
The slots can be occupied by anynumber of members of the corresponding domain, andthe logical operators and, or, and not can be used toaugment the expressive power.
Also, in every case, thesemantics of the constraints in the lexicon is that ofdefault knowledge: the contents of a slot are understoodas typically constraining the meaning of the concept.The semantic haracter of a slot in a concept lexiconframe underscores a careful distinction that should bemade between concept ypes and concept okens.
Sucha distinction is common in certain knowledge represen-tation languages (see Brachman and Schmolze 1985;Nirenburg et al 1986).
Concept types belong in thelexicon; concept okens are instantiations of concepttypes obtained as a result of analyzing natural languageinputs.
One kind of knowledge representation can beused for both types and tokens, a frame-based notationbeing one of them.
(Of course, due to a number ofpossible reasons, a complete knowledge representationsystem can use one type of representation forthe typesand another for the tokens, cf.
Hobbs 1985 for adiscussion of' such a position.)
The frames for a type andits token will not, however, be identical in structure.The semantic ontent of slots in a lexicon (type) frameis different fi:om that of the corresponding slots in thetext (token) frame.
Concept tokens have their slotsoccupied by actual values of properties; if informationabout a property is not forthcoming, then the defaultvalue (if any) is inherited from the corresponding typerepresentations.
For example, the frame for a verbalaction type and a verbal action token can have a slotnamed 'agent.'
However, in the former case, the slotcan be occupied by a concept ype, such as, for in-stance, 'human.'
In the latter case, the slot must beoccupied by a concept oken, such as 'John23.'
If theanalysis program cannot make a decision as to whattoken(s) must occupy a slot, it produces a temporaryfiller token where constraints will be inherited from itscorresponding type.
In this case, it may be 'personl,'with all the constraints of the type 'human' inherited.The concept lexicon forms a tangled ISA hierarchywith property inheritance.
However, the examples be-low are simplified to make it look as a strict hierarchy.The current version of the top levels of this hierarchy isshown in Figure 3.
The actual world ontology in aworking system depends on the subworld for which it isdeveloped.
We will survey the concept frames in theorder suggested by the ISA hierarchy.all:: = (all(id string)(subworld subworld*))This is the root of the isa hierarchy.
The two slotsmean that every node has an id and represents a conceptthat belongs to one or more subworlds.process ::= (process(isa all)(patient object))At this level we meet the 'isa' slot, the pointer to anode's parent in the hierarchy.
Processes, as one cansee from Figure 3, divide into actions and states.
Theonly overtly mentioned property common to all pro-cesses is the conceptual case of 'patient' (this reflectsour opinion that in the English sentence 'John is asleep'John is not an agent, but rather a patient).
Note that'patient' subsumes the semantics of 'beneficiary.
'action ::= (action(isa process)(consists-of process-sequence)280 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System~ plant/ - olive ~ container/ ~ artifact ~ lettert object.
~ '?
- -  ~ ' -  ~veh ic leI --mental-object J jda ta - - - -datobasea l l /  ~ infor moti?n ~ program ~~"  :doim~tiler\  physical-s,ate/ reaction\p rocess  menial oc'tion Jcognition\ J "  oe,=,oo\oc,,ooJ ~ossertion speech -aclion ~"-request ~ req- into~ r e q  -action  movephysical- action ingest~operateFigure 3.
A fragment of the ISA hierarchy for the computer science world.
(part-of process*)(preconditions state*)(effects tate*)(tempor process*)(agent creature)(object all)(instrument object)(source object)(destination object))The action frame contains two groups of slots:a) paradigmatic relation slots (isa, consists-of, part-of, preconditions, effects, tempor) that connect itwith other processes;b) syntagmatic relation slots (the conceptual caseslots agent, object, instrument, source and desti-nation; patient is inherited).The consists-of slot contains either the constant'primitive,' if the action is not further decomposable, ora description of the sequence of actions which comprisethe given action.
This sequence is a list of action namesconnected by the operators sequential, choice andshuffle.
In other words, an action can be a sequence ofsubactions ('sequential'), a choice among several subac-tions ('choice'), a temporally unordered sequence ofsubactions ('shuffle') or any recursive combination ofthe above.
This treatment of processes is inspired byNirenburg, Nirenburg, Reynolds 1985.
The tempor slotconnects the action with other actions that typicallyoccur proximally in time to it.
Metaphorically, whileconsists-of describes children, tempor describes sib-lings.physical-action ::= (physical-action(isa action)(object physical-object))mental-action ::= (mental-action(isa action))Only creatures can be fillers for the agent slot.Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 281Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemMental actions further classify into reaction (cf.
theEnglish please or like), cognition (deduce) and percep-tion actions (see).speech-action :: = (speech-action(isa process)(consists-of primitive)(agent person)(patient person* \[ organization*)(object event)(source agent)(destination patient))Speech processes are 'primitives'?
The agent slotfiller has the semantics of the speaker.
The patient is thehearer.state ::= (state(isa process)(part-of state*))The actant in states, which is the patient rather thanthe agent, is inherited from the process frame?object :: = (object(isa all)(part-of object*)(consists-of object*)(belongs-to creature \[ organization)(spatial physical-object*)(object-of mental-action speech-action)(patient-of process)(instrument-of process)(source-of process)(destination-of process))Once again two groups of slots describe paradigmaticand syntagmatic relations.
The spatial slot lists objectsthat typically appear proximally in space to the currentobject?
The .
.
.-of slots have the semantics of 'typical?
.
.
-o f '  and are complementary to the conceptual caseslots in process descriptions.The other type of slot fillers in the DRL frames is aset of property values.
Properties are defined in theworld, each with a corresponding set (domain) of prop-erty values.
Only an illustration of property values isgiven here.
Many more exist and are used in the lexicondescription.size-set :: = (infinitesimal .
.
.
huge)color-set :: = (black .
.
.
white)shape-set ::= (flat square spherical .
.
.
)subworld-set ::= (computer-world business-worldeveryday-world .
.
.
)boolean-set ::= (yes no)texture-set ::= (smooth .
.
.
rough)A path of concepts from the root to a leaf node in theisa hierarchy is presented below and followed by thecorresponding frames (the frames for all and object aregiven above).aU-->object--~physical-object--->+alive-~creature ~ ~person--~computer-userphysical-object ::-- (physical-object(isa object)(object-of (+ (take put))(size size-set)(shape shape-set)(color color-set)(mass integer))The '+ '  sign in slots means all inherited informationplus the contents of the current slot.+alive ::= (+alive(isa physical-object)(edibility boolean-set))creature :::= (creature(isa +alive)(agent-of (eat ingestattack))(consists-of(head body))(object-of (+ (attack))(power power-set)(speed speed-set))drink moveperson :: :-- (person(isa creature)(agent-of (+ (take put find speech-actionmental-action)))(source-of speech-action)(destination-of speech-action)(consists-of(+ (hand foot .
.
.
)))(power human)(speed slow)(mass human))computer-user ::= (computer-user(isa person)(agent-of (+ operate))(subworld computer-world))The complete frame of the leaf of this path, 'computer-user,' including all inherited slots and default values, islisted below.
In reality frames like this do not exist,because the tokens of this type do not contain all thepossible slot fillers?
(computer-user(isa person)(consists-of (hand foot head body))( belongs-to none)(part-of organization*)(spatial physical-object*)(agent-of (operate take put find speech-actionmental-action eat ingest drink move attack))(object-of ( ind mental-action speech-action at-tack take put))(destination-of speech-action)(source-of speech-action)(power human)(speed slow)(mass human)(subworld computer-world))282 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemjjlJP HY~I~T MENTAL-OBJECT/+ALIVE  - A L I V E  ARTERIAL IHFORHATIOHVEHICLE COflPUTER RRITING-DEVICE LETTER HEHGPRPER BOOKCOMMEND:insertmodifg-treemodifg-nodedelete: ( lex lcon)COMPUTER-USER's attr lbuten:IBR personCOHSISTS-OF hand foot head bodyBELONGS-TO -PERT-OF orBantzattonSPRTIRL physical-obJectROEMT-OF take put find speech-action mental-action eat ingest drink nave attackOBJECT-OF find mental-action speech-action attack take putDESTIHRTIOH-OF speech-actionSOURCE-OF speech-actionPOWER humanSPEED e|owMRSS human3o I t  \ [ \ ]  Rbort \[\]RETAIN MODIFY\[\] \[\]\[\] \[\]\[\] \[\]\[\] \[\]\[\] o \ [ \ ]  \ [ \ ]\[\] \[\] \[\] \[\] \[\] \[\] \[\] \[\] \[\]Figure 4.
Entering computer-user, I.3.
Two SAMPLE SESSIONS WITH THE SUBWORLDMODULE OF THE TRANSLATOR LMSWe will demonstrate he work of the subworld moduleof the TRANSLATOR LMS on two examples.
Theywill illustrate the two modes discussed in 2.1, theenterer and manager modes.
The first, simple examplewill involve the placing of a concept in an appropriateslot of the 'isa' tree and checking the slots of theinherited frame for appropriate values.
All of theseoperations will be executed in the enterer mode.
Thesecond, more complicated example will present seriousdifficulties for the enterer and will require the manager'sfull authority for the resolution of the problem.
In otherwords, the first example will leave the existing ontologyintact while the second will require its modification.3.1 THE ENTERER MODE: ADDING THE CONCEPTCOMPUTER-USER.This concept represents meaning (5) in the dictionaryentry for the English word operator (see Figure 1).
Thetask of the enterer essentially involves the followingoperations:Insert: finding the appropriate slot in the isa hierar-chy to which the new concept will be attached as a leafchildFill: describing all the properties of this concept bymodifying, wherever necessary, the slot fillers of theinherited frameCheck: checking whether the property values chosendistinguish it from its parent and siblings.The LMS helps the enterer with air three of theseactivities.
To decide on the position of the concept inthe hierarchy, the enterer can browse through its graph-ical representation a d view the frames correspondingto any node (concept) in it.
If the enterer has to considermore than one possibility, the frames for several candi-date parents for the node to be inserted, can be dis-played - -  in the current implementation up to threecandidate frames can be displayed simultaneously.
Inthe case of computer-user the enterer does not have adifficulty in selecting person as the only candidateparent node.When the place for a concept is found, a menucontaining all slots pertinent for the parent node framewhich incorporates all the slots and slot fillers it inher-ited from its ancestors, appears on the screen.
Theenterer scans the menu and modifies, wherever neces-sary, the values in these slots.
Figure 4 ~ shows the stateof the process for entering computer-user when thevalues for the agent-of slot are being considered.
Notethat the system provides additional help by listingcandidate ~,alues for this slot.
The set of candidates iproduced automatically by determining the commonComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 283Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemOBJECTPHYSICRL-OBJECI MENTAL--OBJECT+ALIVE -AL IVE MATERIAL INFORMATIONRNIBRL PERSON DEVICE COHTRIBER OOCOBEBT EDITOR conPILER DONS DATABASEVEHICLE COMPUTER MRITIHS-DEVICE LETTER NEMSPFLPER BOOKCOMMRND:i nser tmodi fg - t reemodi fg-nodede le teCommand: ( lex icon)INHERITED DEFRULTS RETRI~ DELETEtake \ [ \ ]  \[\]put \[\] \[\]find \[\] \[\]speech-action \ [ \ ]  \[ \]mental-action \ [ \ ]  \[ \]eat \[ \]  \[\]In9est \[\] \[\]drink \ [ \ ]  \[\]nova \[ \]  \[\]attack \[\] \[\]0o It \[\] ~ Rbort \[\]Lisp LisOBJECTPHYSICAl-OBJECT MENTAL-OBJECTI ~  -AL IVE MATERIAL INFORMATIONRHinO1 PERSON DEVICE CONTAINER DOCUMEHT EDITOR COMPILER DAMS DATABASEVEHICLE COMPUTER MRITING-DEVICE LETTER NEWSPAPER BOOKCOMMRND:insertmodifg-treemodi fg-nodede le teCommand: ( lexicon)lLisp LisFigure 5.
Entering computer-user, II.284 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemPHYSICAL-OBJECT+ALIVE -ALIVEPLRNT CAERTURE ARTIFACT NATURALANIMAL PERSON DEVICE CONTAINER DOCUMENTCOMPUTER-USER VEHICLE COMPUTER URITING-DEVICE LETTER NEUSPEPER BOOKCOMMAND:inser tmodify-treemodify-nodedeleteCommand: ( lex icon) IFigure 5A.
Entering computer-user, III.Lisp Lisancestor of the inherited slot values (in this case,'action') and suggesting to the enterer all the descen-dants of this ancestor node that are not currently listedas the slot values.
For slots whose value domains arenot concepts but rather property values, the help mech-anism simply lists the complete list of values for discretedomains and the appropriate ranges for the continuousones.
In our example, the enterer adds operate to thevalues of the agent-of slot.
Another important ability(not illustrated in the example) is adding new slots tovarious frames and then supplying fillers for them.When the slot filling stage is completed (this stage ofthe process is illustrated in Figure 5), it is necessary tocheck whether the new node is distinct from its parentand siblings.
In our example, the new concept does nothave siblings, therefore only the former distinction istested.
The parent distinction check is performed auto-matically - -  the system will alert the enterer if there hasbeen no changes (except for the 'isa' slot filler) to theframe displayed for modification at the Fill stage.
If thishappens, the new concept is discarded as a duplicate ofthe parent node.
In our example, an additional value hasbeen added to the agent-of slot.
The sibling distinctioncheck is facilitated in the LMS by allowing the entererto view the frames for the concept and its siblingsalongside one another.
In case no distinction can befound between the new concept and one of its siblings,the new concept is deleted as a duplicate.
In general,before deleting a new concept because of duplication,the enterer makes an effort to save it by changing atleast one slot value in either of the two duplicate frames.This may involve adding an existing concept or aproperty value from the current domain.
However,  insome cases, a new concept or a modification of aproperty domain may be required.
Each such case isreported to the manager.3.2  THE MANAGER MODE: ADDING THE CONCEPTMANAGE( -DATABASE)The enterer first decides to insert the new conceptmanage(-database) as a sibling of operate and, there-fore, selects physical-action as the parent node.
Whenthe frame menu is displayed, however, he discovers amajor discrepancy - -  manage(-database) r quires the'mental-object' filler for the object slot.
The entererthen makes an attempt o attach the new concept as achild of the mental-action ode but cannot acceptreaction, cognition, and perception as the siblings ofmanage(-database) for reasons of significant conceptualdissimilarity.
At this point, the enterer decides to referthe matter to the manager.
This is accomplished bywriting a report about the situation and sending itthrough the mail sys tem.At this point the responsibility for processing thisComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 285Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemPHYS'rCBL-$TBTE HEHTAL-STATE PHYSICRL-RCIION $PEE\[Show Attribut~Sll nEHTAL-ACTIONJ--IOisplay 5ubtree I 1 ~BOVE 0 P E R AT E ~ ~ .
, .
, ~  ASSFRIION REACTION COGNITION PERCEPTIONREO-THFO REO-ACTIOHCOMMAND:insertmodiFy-treemodify-nodedeleteConMendnaneger) lLisp LisFigure 6.
Changing the descendents for mental-action, I.concept passes to the manager.
In addition to theenterer's message the manager also has access to theenterer's attempts to insert manage(-database) into thehierarchy.
The manager is, naturally, capable of han-dling all the enterer's tasks; but the LMS manager modehas additional functionality.
The enterer is allowed toperform only one operation on the 'isa' hierarchy - -adding leaves to it.
The manager can perform all theoperations on this tree u insert new nodes anywhere init; delete nodes (either with their subtrees or without, inwhich case the children of the deleted node becomechildren of the latter's parent); and move subtrees to adifferent position.
The manager is also entitled to createadditional property sets (domains) and add and deletevalues in the existing ones.
Finally, the manager'sauthority also covers adding, deleting and modifying thevalue domains of all slots in all concept frames.
Each ofthese capabilities i supported by LMS routines.In our example, the manager has to reorganize thesubtree whose root is mental-action.
First, he finds thenecessary node and calls a menu of operations on anode (Figure 6).
Clicking on 'delete-child', he obtainsanother menu, in which he indicates that he wants todetach the children of the node.
The result of thisoperation is illustrated in Figure 7.
At this point theinsertion of the two intermediate concepts: computer-mental-action and non-computer-mental-action can beperformed (which is supported in the manner illustratedin 3.1 above).
During the insertion process the manageracts exactly in the same manner as an enterer.
Tempo-rarily disregarding the detached children, he inserts theintermediate concepts one by one.At the next stage, the former children of mental-action are reconnected to the hierarchy as children ofnon-computer-mental-action.
Once again, the manageracts here as an enterer, filling the frame slots andrunning the sibling and parent distinction checks.
Next,manage(-database) is attached as a child of the com-puter-mental-action node.
Again, all the insert-timechecks are run.
At this point the manager decides todevelop the computer-mental-action node further de-ductively, that is, without waiting for empirical evi-dence for this to accumulate.
He decides to enter thenodes write-code and use-interactive-system as siblingsof manage(-database).
This operation is entirely at themanager's discretion and expresses the manager's un-derstanding of the computer world and his expectationsconcerning the concepts that will have to be added tothe ontology in the future.
After these concepts havebeen added to the world, the subtree with the rootmental-action will look as in Figure 8.286 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemSTATE ACTIONPHYSICAL-STATE I IEHTf lL -$Tf lTE PHYSICAL-ACTION SPEECH-flCIION nENTflL-flCTIONhOVE OPERATE IHSEST _~_ .~ES T ASSERTION\REO-ZRFO REO-RCTIONREACTION COGNITION PERCEPTIONFigure 7.
Changing the descendents for mental-action, II.COflflRND:insertmodi?y-treenodify-nodedeleteCoes~and: ( lextcon inanager) lLisp LIs4.
DISCUSSIONThe TRANSLATOR LMS has been implemented onlyin its initial stage, so that its functionality at present ismore constrained than it will be when the LMS attainsfull capacity.
We would like to discuss here the func-tionality upgrades under development at the presenttime.First, the manager's ability to maintain integrity andconsistency in the lexicons must be further supported.This capability includes modifications of the existingconcept lexicon entries which are affected by the inser-tion of a new concept by an enterer or the manager or bythe manager's revision of the domain of a frame slot.
Atpresent, the LMS can automatically find and modify thevalues in slots complementary to the ones modified.
Forexample, in our first sample session, after the entereradds 'operate' to the agent-of slot of computer-user, thesystem automatically adds computer-user to the agentslot of 'operate.'
But more should be expected.
Thus, inour second sample session, after the manager inserts thecomputer-mental-action a d non-computer-mental-action as the children of mental-action,' the LMSshould be able to generate a suggestion that he considera symmetrical modification i the sibling branch (phys-ical-action), which would make operate a child ofcomputer-physical-action.'
In general, we feel that theLMS should provide more heuristic support for themanager's thought processes concerning ontology mod-ifications.This latter modification, along with the one themanager actually executed in the sample session, wouldbe a step in the transition from the world ontology inFigure 3 to the computer subworld ontology.
Some ofthese changes accurately reflect he differences betweenthe world and the subworld, i.e., in this case, thedistinction between concepts of computer-related andnon-computer-related is central for the subworld butnot for the world.
Other changes in the ontology includethe correction of mistakes and the refining of thehierarchies suggested by the accumulation of data andexperience.
Thus, we will not be surprised if additionaldata will provide evidence for making speech-action adescendant of mental-action i stead of action.An additional source of insight into the improvementof the LMS will be provided by its use.
Thus, it isdifficult to know a priori how many enterers a singlemanager will be able to supervise; what forms of theinteraction between the enterers and the manager aremost effective; whether it is possible to support aconcurrent mode of operation in which more than oneenterers work on one hierarchy simultaneously; orshould there be levels of priority assigned to the mes-sages from enterers to the manager or mechanisms forclustering similar messages (if the messages are forcedComputational Linguistics, Volume 13, Numbers 3-4, July-December 1987 287Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemMENTAL-ACTIONCOMPUTER-M-A AOX-COMPUTER-M-AAANAGE-DB MRITE-COOE USE-IHTER-SYSTEA REACTION COGNITION PERCEPTIONCOMMRND:inser tmodi fy - t reemodify-nodedeleteConnand: ( lexicon~mna9er) |Lisp LisFigure 8.
Changing the descendents for mental-action, III.into a certain format).
A separate concern is a detailedset of on-line instructions for quick reference both bythe enterers and the manager.
It should be added to theLMS in the tutorial, reference-manual and keyword-based help mode format.So far in this section, we have been discussing thedepth-wise improvements to the TRANSLATOR LMS.The breadth-wise development concerns the analysisand generation lexicons.
The work on those can becompleted only after the subworld concept lexicon isalready reasonably complete.In the analysis lexicons, indexed by the words orword equivalents, the entries will contain conceptualinformation from the subworld concept lexicon.
Manywords, however, will not have a concept-based lexiconentry but will contain information triggering certainparsing procedures.
Some other entries will includeboth of these types of information.
Every entry in ananalysis lexicon contains yntactic information, and thecurrent LMS already includes an interactive aid foracquiring it for English.
It appears that generationlexicons are, in fact, indexed not only by subworldconcepts but also by rhetorical and pragmatic markersin the representation f a text obtained after analysisbecause both typically have lexical - -  as well as gram-matical - -  expression in natural language.Acknowledgements.
This research was supported, inpart, by the National Science Foundation under GrantDCR-8407114 and, in part, by the Air Force SystemsCommand, Rome Air Development Center, Griffiss AirForce Base, NY 13441-5700, and the Air Force Office ofScientific Research, Boiling Air Force Base, DC, 20332,under contract number F30602-85-C-0008, to the North-east Artificial Intelligence Consortium.
We would alsolike to thank Irene Nirenburg who implemented theLMS, and Sabine Bergler for a number of useful discus-sions of the subject matter.REFERENCESAhlswede, T. E. 1985.
A Tool Kit for Lexicon Building.
Proceedingsof 23rd ACL, pp.
268-276.Amsler, R. A.
1982.
Computational Lexicology: A Research Program.AF1PS, Proceedings of the National Computer Conference, vol.V, pp.
657-663.Amsler, R. A.
1984a.
Lexical Knowledge Bases.
Proceedings ofCOLING-84.
Stanford University, Stanford, CA, July, pp.
458-459.Amsler, R. A.
1984b.
Machine-Readable Dictionaries.
In: M. E.Williams (ed.
), Annual Review of Information Science and Technol-ogy, vol.
19.
White Plains NY: Knowledge Industry Publications,pp.
161-209.Apresyan, Ju.
D. 1974.
Leksicheskaya Semaatika (Lexical Semantics).Moscow: Nauka.Ayuso, D., V. Shaked and R. Weischedel.
1987.
An Environment forAcquiring Semantic Information.
Proceedings of 25th ACL, pp.32-40.288 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management SystemBallard, B. and D. Stumberger, 1986.
Semantic Acquisition in TELl:A Transportable, User-Customized Natural Language Processor.Proceedings of 24th ACL, pp.
20-29.Bendix, E. H. 1966.
Componential Analysis of General Vocabulary.Bloomington, IN: Indiana University Research Center in Anthro-pology, Folklore and Linguistics, Publication 41.Bessemer, D. and P. Jacobs.
1987.
FLUSH: A Flexible LexiconDesign.
Proceedings of 25th ACL, pp.
186-192.Boguraev, B. et al 1987.
The Derivation of a Grammatically IndexedLexicon from the Longman Dictionary of Contemporary English.Proceedings of 25th ACL, pp.
193-200.Brachman R. J. and H. J. Levesque (eds.)
1985.
Readings in Knowl-edge Representation.
Los Altos, CA: Morgan Kaufmann.Brachman, R. and J. Schmolze 1985.
An Overview of the KL-ONEKnowledge Representation System.
Cognitive Science, 9, pp.171-216.Byrd, R., J. Clavans, M. Aronoff and F. Anshen.
1986.
ComputerMethods for Morphological Analysis.
Proceedings of 24th ACL,pp.
120-127.Calzolari, N. 1984a.
Detecting Patterns in a Lexical Database.
Pro-ceedings of COLING-84.
Stanford University, Stanford, CA, July,pp.
170-173.Calzolari, N. 1984b.
Machine-Readable Dictionaries, Lexical Data-base and the Lexical System.
Proceedings of COLING-84.
Stan-ford University, Stanford, CA, July, p. 460.Chodorow, Martin S., Roy J. Byrd and George E. Heidorn.
1986.Extracting Semantic Hierarchies from a Large On-Line Dictio-nary.
Proceedings of 23d ACL, pp.
299-304.Collin, A.
1960.
The Automatic Construction of a Glossary.
Informa-tion and Control, IX, pp.
211-230.Frawley, W. 1980-81.
Lexicography and the Philosophy of Science.Dictionaries, 2-3, pp.
18-27.Grimes J. E. 1970.
Computing and Lexicography.
Linguistic Re-porter, V, pp.
1-4.Grishman R. and R. Kittredge (eds.)
1986.
Analysing Language inRestricted Domains.
Hillsdale, NJ: Erlbaum.Grosz, B., D. Appelt, P. Martin and F. Pereira.
1985.
TEAM: AnExperiment in the Design of Transportable Natural-LanguageInterfaces.
TR 356, SRI International, Menlo Park, CA, August.Hobbs, J.R. 1985a.
Introduction.
In: J.R. Hobbs and R.C.
Moore(eds.
), Formal Theories of the Commonsense World.
Norwood, N J:Ablex, pp.
xi-xxii.Hobbs J. R. 1985b.
Ontological Promiscuity.
Proceedings of 23rdACL, pp.
61-69.Katz J. J. and J.
A. Fodor 1963.
The Structure of a Semantic Theory.Language, 39, pp.
170-210.Kittredge R. and J. Lehrberger (eds.)
1982.
Sublangnage.
Berlin: deGruyter.Kucera, H. 1969.
Computers in Language Analysis and Lexicogra-phy.
In: American Heritage Dictionary of the English Language,NY: Houghton Mifflin, pp.
XXXVII-XL.Lakoff, G. 1972.
Linguistics and Natural Logic.
In: D. Davidson andG.
Harman (eds.
), Semantics of Natural Language, Dordrecht:Reidel, pp.
545-665.Lakoff, G. and M. Johnson 1980.
Metaphors We Live By.
Chicago - -London: University of Chicago Press.Landau, S. 1984.
Dictionaries.
NY: Scribners.Lenat, D., M. Prakash and M. Shepherd 1986.
CYC: Using CommonSense Knowledge to Overcome Brittleness and Knowledge Ac-quisition Bottlenecks.
AI Magazine, VI, pp.
65-85.Markowitz, J., T. Ahlswede and M. Evens.
1986.
SemanticallySignificant Patterns in Dictionary Definitions.
Proceedings of 24thACL, pp.
112--119.McCawley, J. D. 1972.
A Program for Logic.
In: D. Davidson and G.Harman (eds.
), Semantics of Natural Language, Dordrecht: Reidel,pp.
157-212.McCawley, James D. 1986.
What Linguists might Contribute toDictionary Making if They could Get Their Act Together.
In: P.Bjarkman and V. Raskin (eds.
), The Real-World Linguist: Linguis-tic Applications in the 1980s, Norwood, N J: Ablex, pp.
3-18.Miller, G. 1985.
Dictionaries of the Mind.
Proceedings of 23d ACL,pp.
305-314.Nirenburg, S. and Y, Ben Asher.
1984.
HUHU: The Hebrew Univer-sity Hebrew Understander.
The Journal of Computer Languages,9, pp.
161-182.Nirenburg, S. and V. Raskin.
1989.
Meaning in Human-ComputerInteraction: Computational Lexical Semantics, Amsterdam: Else-vier (in preparation).Nirenburg, S., V. Raskin and A.
B. Tucker 1985.
Interlingua Designfor TRANSLATOR.
Proceedings of the Conference on Theoreti-cal and Methodological Issues in Machine Translation of NaturalLanguages , Colgate University, Hamilton, NY, August, pp.224-244.Nirenburg, S., V. Raskin and A,B.
Tucker 1986.
On Knowledge-Based Machine Translation.
Proceedings of XI International Con-ference on Computational Linguistics, COLING-86, Bonn, Ger-many, August 1986, pp.
627-632Nirenburg, S., V. Raskin and A.B.
Tucker 1987.
The Structure ofInterlingua in TRANSLATOR.
In: S. Nirenburg (editor), MachineTranslation: Theoretical and Methodological Issues, ACL Series'Studies in Natural Language Processing,' Cambridge UniversityPress, pp.
90-t 13.Nirenburg, S., I. Nirenburg and J.H.
Reynolds 1985.
Control Knowl-edge in POPLAR: a Personality-Oriented Planner.
Proceedings of3rd Annual Conference on Intelligent Systems and Machines.Oakland University, Rochester, Michigan, April, pp.
63-67.Raskin, V. 1985.
Linguistics and Natural Language Processing.Proceedings of the Conference on Theoretical and MethodologicalIssues in Machine Translation of Natural Languages, ColgateUniversity, Hamilton, NY, August, pp.
268-282.
Also in: S.Nirenburg (ed.
), Machine Translation: Theoretical and Method-ological Issues, ACL Series 'Studies in Natural Language Proces-sing,' Cambridge University Press, pp.
42-58.Raskin, V. 1986.
Script-Based Semantics.
In: D.G.
Ellis and W.E.Donohue (eds.
), Contemporary Issues in Language and DiscourseProcesses.
Hillsdale, NJ: Erlbaum, pp.
23-61,SOED 1973.
Shorter Oxford English Dictionary.
Oxford: ClarendonPress, 3rd Ed.Venezky, R.L.
1973.
Computational Aids to Dictionary Compilation.In: R.Frank and A.F.Cameron (eds.
), A Plan for the Dictionary ofOld English.
Toronto: University of Toronto Press, pp.
307-327.Walker, D. E. 1984.
Panel Session: Machine-Readable Dictionaries.Proceedings of COLING-84.
Stanford University, Stanford, CA,July, p. 457.Walker, D .E and R. A. Amsler 1986.
The Use of Machine-ReadableDictionaries in Sublanguage Analysis.
In: Grishman and Kittredge(eds.
), pp.
69-83.Zernik, U. and M. Dyer.
1985.
Towards a Self-Extending Lexicon.Proceedings of 23d ACL, pp.
284-292.Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 289
