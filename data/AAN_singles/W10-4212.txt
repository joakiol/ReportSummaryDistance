Charting the Potential of Description Logicfor the Generation of Referring ExpressionsYuan Ren and Kees van Deemter and Jeff Z. PanDepartment of Computing ScienceUniversity of AberdeenAberdeen, UKAbstractThe generation of referring expressions(GRE), an important subtask of NaturalLanguage Generation (NLG) is to gener-ate phrases that uniquely identify domainentities.
Until recently, many GRE algo-rithms were developed using only simpleformalisms, which were taylor made forthe task.
Following the fast developmentof ontology-based systems, reinterpreta-tions of GRE in terms of description logic(DL) have recently started to be studied.However, the expressive power of theseDL-based algorithms is still limited, notexceeding that of older GRE approaches.In this paper, we propose a DL-based ap-proach to GRE that exploits the full powerof OWL2.
Unlike existing approaches, thepotential of reasoning in GRE is explored.1 GRE and KR: the story so farGeneration of Referring Expressions (GRE) is thesubtask of Natural Language Generation (NLG)that focuses on identifying objects in natural lan-guage.
For example, Fig.1 depicts the relationsbetween several women, dogs and cats.
In sucha scenario, a GRE algorithm might identify d1 as?the dog that loves a cat?, singling out d1 fromthe five other objects in the domain.
Referencehas long been a key issue in theoretical linguis-tics and psycholinguistics, and GRE is a crucialcomponent of almost every practical NLG sys-tem.
In the years following seminal publicationssuch as (Dale and Reiter, 1995), GRE has be-come one of the most intensively studied areas ofNLG, with links to many other areas of Cogni-tive Science.
After plan-based contributions (e.g.,(Appelt, 1985)), recent work increasingly stressesthe human-likeness of the expressions generatedin simple situations, culminating in two evalua-tion campaigns in which dozens of GRE algo-rithms were compared to human-generated ex-pressions (Belz and Gatt, 2008; Gatt et al, 2009).Figure 1: An example in which edges from womento dogs denote feed relations, from dogs to catsdenote love relations.Traditional GRE algorithms are usually basedon very elementary, custom-made, forms ofKnowledge Representation (KR), which allowlittle else than atomic facts (with negation ofatomic facts left implicit), often using a simple?Attribute : V alue?
format, e.g ?Type : Dog?.This is justifiable as long as the properties ex-pressed by these algorithms are simple one-placepredicates (e.g., being a dog), but when logicallymore complex descriptions are involved, the po-tential advantages of ?serious?
KR become over-whelming.
(This point will become clearer in latersections.)
This realisation is now motivating amodest new line of research which stresses logi-cal and computational issues, asking what proper-ties a KR framework needs to make it suitable togenerate all the referring expressions that peoplecan produce (and to generate them in reasonabletime).
In this new line of work, which is proceed-ing in tandem with the more empirically orientedwork mentioned above, issues of human-likenessare temporarily put on the backburner.
These andother empirical issues will be brought to bear onceit is better understood what types of KR system arebest suitable for GRE, and what is the best way topursue GRE in them.A few proposals have started to combine GREwith KR.
Following on from work based on la-belled directed graphs (cf.
(Krahmer et al, 2003))?
a well-understood mathematical formalism thatoffers no reasoning support ?
(Croitoru and vanDeemter, 2007) analysed GRE as a projectionproblem in Conceptual Graphs.
More recently,(Areces et al, 2008) analysed GRE as a problem inDescription Logic (DL), a formalism which, likeConceptual Graphs, is specifically designed forrepresenting and reasoning with potentially com-plex information.
The idea is to produce a for-mula such as Dog u ?love.Cat (the set of dogsintersected with the set of objects that love at leastone cat); this is, of course, a successful referenceif there exists exactly one dog who loves at leastone cat.
This approach forms the starting point forthe present paper, which aims to show that when aprincipled, logic based approach is chosen, it be-comes possible to refer to objects which no exist-ing approach to GRE (including that of Areces etal.)
has been able to refer to.
To do this, we de-viate substantially from these earlier approaches.For example, while Areces et al use one finite in-terpretation for model checking, we consider arbi-trary (possibly infinite) interpretations, hence rea-soning support becomes necessary.We shall follow many researchers in focussingon the semantic core of the GRE problem: weshall generate descriptions of semantic content,leaving the decision of what words to use for ex-pressing this content (e.g., ?the ancient dog?, or?the dog which is old?)
to later stages in the NLGpipeline.
Furthermore, we assume that all domainobjects are equally salient (Krahmer and Theune,2002).
As explained above, we do not considerhere the important matter of the naturalness or ef-ficacy of the descriptions generated.
We shall becontent producing uniquely referring expressionswhenever such expressions are possible, leavingthe choice of the optimal referring expression ineach given situation for later.In what follows, we start by explaining how DLhas been applied in GRE before (Sec.
2) , point-ing out the limitations of existing work.
In Sec.3we discuss which kinds of additional expressivityare required and how they can be achieved throughmodern DL.
In Sec.4 we present a generic algo-rithm to compute these expressive REs.
Sec.5concludes the paper by comparing its aims andachievements with current practise in GRE.2 DL for GRE2.1 Description LogicsDescription Logic (DLs) come in differentflavours, based on decidable fragments of first-order logic.
A DL-based KB represents thedomain with descriptions of concepts, relations,and their instances.
DLs underpin the Web On-tology Language (OWL), whose latest version,OWL2 (Motik et al, 2008), is based on DLSROIQ (Horrocks et al, 2006).An SROIQ ontology ?
usually consists of aTBox T and an ABox A. T contains a set of con-cept inclusion axioms of the formC v D, relationinclusion axioms such as R v S (the relation R iscontained in the relation S), R1 ?
.
.
.
?
Rn v S,and possibly more complex information, such asthe fact that a particular relation is functional, orsymmetric; A contains axioms about individuals,e.g.
a : C (a is an instance of C), (a, b) : R (a hasan R relation with b).Given a set of atomic concepts, the entire setof concepts expressible by SROIQ is defined re-cursively.
First, all atomic concepts are concepts.Furthermore, if C and D are concepts, then so are> | ?
| ?C | C uD | C unionsqD | ?R.C | ?R.C | ?nR.C | ?
nR.C | ?R.Self | {a1, .
.
.
, an},where > is the top concept, ?
the bottom con-cept, n a non-negative integer number, ?R.Selfthe self-restriction ((i.e., the set of those x suchthat (x, x) : R holds)), ai individual names andR a relation which can either be an atomic rela-tion or the inverse of another relation (R?).
Wecall a set of individual names {a1, .
.
.
, an} a nom-inal, and use CN , RN and IN to denote the setof atomic concept names, relation names and indi-vidual names, respectively.An interpretation I is a pair ?
?I , I?
where ?Iis a non-empty set and I is a function that mapsatomic concept A to AI ?
?I , atomic role r torI ?
?I ?
?I and individual a to aI ?
?I .The interpretation of complex concepts and ax-ioms can be defined inductively based on their se-mantics, e.g.
(C uD)I = CI ?DI , etc.I is a model of ?, written I |= ?, iff all the ax-ioms in ?
are satisfied in I.
It should be notedthat one ?
can have multiple models.
For ex-ample when T = ?,A = {a : A unionsq B}, therecan be a model I1 s.t.
?I1 = {a}, aI1 =a,AI1 = {a}, BI1 = ?, and another model I2s.t.
?I2 = {a}, aI2 = a,BI2 = {a}, AI2 = ?.In other words, the world is open.
For details, see(Horrocks et al, 2006).The possibly multiple models indicate that anontology is describing an open world.
In GRE,researchers usually impose a closed world.
Fromthe DL point of view, people can (partially) closethe ontology with a DBox D (Seylan et al, 2009),which is syntactically similar to the ABox, exceptthat D contains only atomic formulas.
Further-more, every concept or relation appearing in Dis closed.
Its extension is exactly defined by thecontents of D, i.e.
if D 6|= a : A then a : ?A,thus is the same in all the models.
The conceptsand relations not appearing in D can still remainopen.
DL reasoning can be exploited to inferimplicit information from ontologies.
For exam-ple, given T = {Dog v ?feed?.Woman} (ev-ery dog is fed by some woman) and A = {d1 :Dog,w1 : Woman}, we know that there must besome Woman who feeds d1.
When the domainis closed as D = A we can further infer that thisWoman is w1 although there is no explicit rela-tion between w1 and d1.
Note that the domain ?Iin an interpretation ofD is not fixed, but it includesall the DBox individuals.However, closing ontologies by means of theDBox can restrict the usage of implicit knowledge(from T ).
More precisely, the interpretations ofthe concepts and relations appearing inD are fixedtherefore no implicit knowledge can be inferred.To address this issue, we introduce the notion ofNBox to support Negation as Failure (NAF): Un-der NAF, an ontology is a triple O = (T ,A,N ),where T is a TBox, A an ABox and N is a subsetof CNorRN .
We callN an NBox.
NAF requiresthat O satisfy the following conditions:1.
Let x ?
IN and A ?
N uCN .
Then(T ,A) 6|= x : A implies O |= x : ?A.2.
Let x, y ?
IN and r ?
N u RN .Then (T ,A) 6|= (x, y) : r implies O |=(x, y) : ?r.Like the DBox approach, the NBox N definesconditions in which ?unknown?
should be treatedas ?failure?.
But, instead of hard-coding this, itspecifies a vocabulary on which such treatmentshould be applied.
Different from the DBox ap-proach, inferences on this NAF vocabulary is stillpossible.
An example of inferring implicit knowl-edge with NAF will be shown in later sections.2.2 Background AssumptionsWhen applying DL to GRE, people usually im-pose the following assumptions.?
Individual names are not used in REs.
Forexample, ?the Woman who feeds d1?
wouldbe invalid, because d1 is a name.
Names aretypically outlawed in GRE because, in manyapplications, many objects do not have namesthat readers/hearers would be familiar with.?
Closed World Assumption (CWA): GRE re-searchers usually assume a closed world,without defining what this means.
As ex-plained above, DL allows different interpre-tations of the CWA.
Our solution does not de-pend on a specific definition of CWA.
In whatfollows, however, we use NAF to illustrateour idea.
Furthermore, the domain is usuallyconsidered to be finite and consists of onlyindividuals appearing in A.?
Unique Name Assumption (UNA): Differentnames denote different individuals.
If, forexample, w1 and w2 may potentially be thesame woman, then we can not distinguish onefrom the other.We follow these assumptions when discussing ex-isting works and presenting our approach.
In ad-dition, we consider the entire KB, including A,T and N .
It is also worth mentioning that, inthe syntax of SROIQ, negation of relations arenot allowed in concept expressions, e.g.
you can-not compose a concept ??feed.Dog.
However,if feed ?
N , then we can interpret (?feed)I =?I ?
?I \ feedI .
In the rest of the paper, we usethis as syntactic sugar.2.3 Motivation: DL Reasoning and GREEvery DL concept can be interpreted as a set.
Ifthe KB allows one to prove that this set is a sin-gleton then the concept is a referring expression.It is this idea (Gardent and Striegnitz, 2007) that(Areces et al, 2008) explored.
In doing so, theysay little about the TBox, appearing to consideronly the ABox, which contains only axioms aboutinstances of atomic concepts and relations.
For ex-ample, the domain in Fig.1 can be described asKB1: T1 = ?, A1 = {w1 : Woman,w2 : Woman, d1 : Dog, d2 : Dog,c1 : Cat, c2 : Cat, (w1, d1) : feed,(w2, d1) : feed, (w2, d2) : feed,(d1, c1) : love}Assuming that this represents a Closed World,Areces et al propose an algorithm that is ableto generate descriptions by partitioning the do-main.1 More precisely, the algorithm first findsout which objects are describable through increas-ingly large conjunctions of (possibly negated)atomic concepts, then tries to extend these con-junctions with complex concepts of the form(?
)?R1.Concept, then with concepts of the form(?)?R2.
(Concept u (?
)?R1.Concept), and soon.
At each stage, only those concepts that havebeen acceptable through earlier stages are used.Consider, for instance, KB1 above.
Regardless ofwhat the intended referent is, the algorithm startspartitioning the domain stage by stage as follows.Each stage makes use of all previous stages.
Dur-ing stage (3), e.g., the object w2 could only beidentified because d2 was identified in stage (2):1.
Dog = {d1, d2},?Dog uWoman = {w1, w2},?Dog u ?Woman = {c1, c2}.2.
Dog u ?love.
(?Dog u ?Woman) = {d1},Dogu??love.
(?Dogu?Woman) = {d2}.3.
(?Dog u Woman) u ?feed.
(Dog u??love.
(?Dog u ?Woman)) = {w2},(?Dog u Woman) u ??feed.
(Dog u??love.
(?Dog u ?Woman)) = {w1}.As before, we disregard the important questionof the quality of the descriptions generated, otherthan whether they do or do not identify a givenreferent uniquely.
Other aspects of quality dependin part on details, such as the question in whichorder atomic concepts are combined during phase(1), and analogously during later phases.However this approach does not extend the ex-pressive power of GRE.
This is not because ofsome specific lapse on the part of the authors: itseems to have escaped the GRE community as awhole that relations can enter REs in a variety ofalternative ways.Furthermore, the above algorithm considersonly the ABox, therefore background information1Areces et al (Areces et al, 2008) consider several DLfragments (e.g., ALC and EL).
Which referring expressionsare expressible, in their framework, depends on which DLfragment is chosen.
Existential quantification, however, isthe only quantifier that was used, and inverse relations arenot considered.will not be used.
It follows that the domain al-ways has a fixed single interpretation/model.
Con-sequently the algorithm essentially uses model-checking, rather than full reasoning.
We willshow that when background information is in-volved, reasoning has to be taken into account.For example, suppose we extend Fig.1 with back-ground (i.e., TBox) knowledge saying that oneshould always feed any animal loved by an ani-mal whom one is feeding, while also adding a loveedge (Fig.2) between d2 and c2:Figure 2: An extended example of Fig.1.
Edgesfrom women to cats denote feed relations.Dashed edges denote implicit relations.If we close the domain with NAF, the ontologycan be described as follows:KB2: T2 = {feed ?
love v feed},A2 = A1 ?
{(d2, c2) : love}, N2 ={Dog,Woman, feed, love}The TBox axiom enables the inference of implicitfacts: the facts (w1, c2) : feed, (w2, c1) : feed,and (w2, c2) : feed can be inferred using DL rea-soning under the above NBox N2.
Axioms of thiskind allow a much more natural, insightful andconcise representation of information than wouldotherwise be possible.Continuing to focus on the materialised KB2,we note another limitation of existing works: ifonly existential quantifiers are used then some ob-jects are unidentifiable (i.e., it is not possible todistinguish them uniquely).
These objects wouldbecome identifiable if other quantifiers and inverserelations were allowed.
For example,?
The cat which is fed by at least 2 women =Catu ?
2feed?.Woman = {c1},?
The woman feeding only those fed by atleast 2 women = Woman u ?feed.
?2.feed?.Woman = {w1},?
The woman who feeds all the dogs = {w2}.It thus raises the question: which quantifierswould it be natural to use in GRE, and how mightDL realise them?3 Beyond Existential DescriptionsIn this section, we show how more expressive DLscan make objects referable that were previouslyunreferable.
This will amount to a substantial re-formulation which allows the approach based onDL reasoning to move well beyond other GRE al-gorithms in its expressive power.3.1 Expressing Quantifiers in OWL2Because the proposal in (Areces et al, 2008) usesonly existential quantification, it fails to identifyany individual in Fig.2.
Before filling this gap,we pause to ask what level of expressivity oughtto be achieved.
In doing so, we make use ofa conceptual apparatus developed in an area offormal semantics and mathematical logic knownas the theory of Generalized Quantifiers (GQ),where quantifiers other than all and some are stud-ied (Mostowski, 1957).
The most general formatfor REs that involves a relation R is, informally,the N1 who R Q N2?s, where N1 and N2denote sets, R denotes a relation, and Q a gener-alized quantifier.
(Thus for example the womenwho feed SOME dogs.)
An expression of thisform is a unique identifying expression if it corre-sponds to exactly one domain element.
Using aset-theoretic notation, this means that the follow-ing set has a cardinality of 1:{y ?
N1 : Qx ?
N2 | Ryx}where Q is a generalized quantifier.
For example,if Q is the existential quantifier, while N1 denotesthe set of women, N2 the set of dogs, and R therelation of feeding, then this says that the numberof women who feed SOME dog is one.
If Q is thequantifier at least two, then it says that the num-ber of women who feed at least two dogs is one.It will be convenient to write the formula abovein the standard GQ format where quantifiers arecast as relations between sets of domain objectsA,B.
Using the universal quantifier as an exam-ple, instead of writing ?x ?
A | x ?
B, we write?(AB).
Thus, the formula above is written{y ?
N1 : Q(N2{z : Ryz)}}.Instantiating this as before, we get {y ?Woman :?
(Dog{z : Feed yz)}}, or ?women who feed adog?, where Q is ?, A = Dog and B = {z :Feed yz} for some y.Mathematically characterising the class of allquantifiers that can be expressed in referringexpressions is a complex research programmeto which we do not intend to contribute here,partly because this class includes quantifiers thatare computationally problematic; for example, aquantifiers such as most (in the sense of more than50%), which is not first-order expressible, as iswell known.To make transparent which quantifiers are ex-pressible in the logic that we are using, let us thinkof quantifiers in terms of simple quantitative con-straints on the sizes of the sets A?B, A?B, andB?A, as is often done in GQ theory, asking whattypes of constraints can be expressed in referringexpressions based on SROIQ.
The findings aresummarised in Tab.1.
OWL2 can express any ofthe following types of descriptions, plus disjunc-tions and conjunctions of anything it can express.Table 1: Expressing GQ in DLQAB DL1 ?
nN2{z : Ryz} y :?
nR.N22 ?
nN2?
{z : Ryz} y :?
n?R.N23 ?
n?N2{z : Ryz} y :?
nR.
?N24 ?
n?N2?
{z : Ryz} y :?
n?R.
?N25 ?
nN2{z : Ryz} y :?
nR.N26 ?
nN2?
{z : Ryz} y :?
n?R.N27 ?
n?N2{z : Ryz} y :?
nR.
?N28 ?
n?N2?
{z : Ryz} y :?
n?R.
?N2When n = 1, for example, type 1 becomes?R.N2, i.e.
the existential quantifier.
When n = 0type 7 becomes ?R.N2, i.e.
the quantifier only.When n = 0 type 6 becomes ??R.
?N2, i.e.
thequantifier all.
In types 2, 4, 6 and 8, negation ofa relation is used.
This is not directly supportedin SROIQ but, as we indicated earlier, givenR ?
N , ?R can be used in concepts.Together, this allows the expression of a de-scription such as ?women who feed at least onebut at most 7 dogs?, by conjoining type 1 (withn = 1) with type 5 (with n = 7).
Using nega-tion, it can say ?women who do not feed all dogsand who feed at least one non-dog?
(Woman u???Feed.
?Dog u ?Feed.?Dog).
In additionto Tab.1, SROIQ can even represent reflexiverelation such as ?the dog who loves itself?
byDogu?love.Self , which was regarded infeasiblein (Gardent and Striegnitz, 2007).Comparing the quantifiers that become express-ible through OWL2?s apparatus with classes ofquantifiers studied in the theory of GQ, it is clearthat OWL2 is highly expressive: it does not onlyinclude quantifiers expressible in the binary treeof numbers, e.g.
(van Benthem, 1986) ?
which isgenerally regarded as highly general ?
but muchelse besides.
Even wider classes of referring ex-pressions can certainly be conceived, but these arenot likely to have overwhelming practical utility intoday?s NLG applications.4 Generating SROIQ-enabled REsIn this section, we present an algorithm that com-putes the descriptions discussed in sect.3.
A GREalgorithm should have the following behaviour: ifan entity is distinguishable from all the others, thealgorithm should find a unique description; oth-erwise, the algorithm should say there exists nounique description.
In this paper, we follow Are-ces et al?s strategy of generating REs for all ob-jects simultaneously, but we apply it to a muchlarger search space, because many more constructsare taken into account.4.1 GROWL: an algorithm for GeneratingReferring expressions using OWL-2.In this section we show how the ideas of pre-vious sections can be implemented.
To do this,we sketch an algorithm scheme called GROWL.GROWL applies a generate-and-test strategy thatcomposes increasingly complicated descriptionsand uses DL reasoning to test whether a de-scription denotes a singleton w.r.t.
the KB.
Toavoid considering unnecessarily complicated de-scriptions, the algorithm makes use of the (syntac-tic) depth of a description, defined as follows:Definition 1 (Depth) Given a description d, itsdepth |d| is calculated as follows:1.
|d| = 1 for d := >|?|A|?A, where A isatomic.2.
|d u d?| = |d unionsq d?| = max(|d|, |d?|) + 1.3.
|?r.d| = |?r.d| = | ?
nr.d| = | ?
nr.d| =| = nr.d| = |d|+ 1.Different descriptions can mean the same ofcourse, e.g.
?
?R.A ?
?R.?A.
We do not knowwhich syntactic variant should be used but focus,for simplicity, on generating their unique negatednormal form (NNF).
The NNF of a formula ?can be obtained by pushing all the ?
inward un-til only before atomic concepts (including > and?
), atomic relations, nominals or self restrictions(e.g.
?r.Self ).
Without loss of generality, in whatfollows we assume all the formulas are in theirNNF.
To avoid confusion, the NNF of negationof a formula ?
is denoted by ~?
instead of ?
?.For example ~(A unionsq B) = ?A u ?B if A and Bare atomic.
Obviously, ~(~A) = A, ~(~R) = R,(R?)?
= R, and (~R)?
=~R?.
The use of NNFsubstantially reduces the redundancies generatedby the algorithm.
For example, we won?t generateboth ?
?R.A and ?R.
?A but only the later.Given an ontology ?, we initialise GROWLwith the following sets:1.
The relation name set RN is the minimal setsatisfying:?
if R is an atomic relation in ?, then R ?RN ;?
if R ?
RN , then ~R ?
RN ;?
if R ?
RN , then R?
?
RN ;2.
The concept name set CN is the minimal setsatisfying:?
> ?
CN ;?
if A is an atomic concept in ?, then A ?CN ;?
if R ?
RN , then ?R.Self ?
CN ;?
if A ?
CN , then ~A ?
CN ;3.
The natural number set N contains1, 2, .
.
.
, n where n is the number ofindividuals in ?.4.
The construct set S contains all the con-structs supported by a particular language.For SROIQ, S = {?,u,unionsq,?,?,?,?,=}.We assume here that nominals are disallowed(cf.
sect.2).Algorithm GROWL:Construct?
description(?, CN,RN,N, S)INPUT: ?, CN,RN,N, SOUTPUT: Description Queue D1: D := ?2: for e ?
CN do3: D := Add(D, e)4: for d = fetch(D) do5: for each s ?
S do6: if s = u or s = unionsq then7: for each d?
?
D do8: D := Add(D, d s d?
)9: if s = ?
or s = ?
then10: for each r ?
RN do11: D := Add(D, s r.d)12: if s =?
or s =?
or s is = then13: for each r ?
RN , each k ?
N do14: D := Add(D, s k r.d)15: return DAlgorithm ADD:Add(D, e)INPUT: D, eOUTPUT: (Extended) Description Queue D1: for d ?
D do2: if |d| < |e| and d v?
e then3: return D4: else if |d| = |e| and d v?
e and e u ?d issatisfiable then5: return D6: if e is satisfiable in ?
then7: D := D ?
{e}8: return DGROWL takes an ontology ?
as its input andoutput a queue D of descriptions by adding in-creasingly complex concepts e to D, using thefunction Add(D, e), which is implemented as thealgorithm ADD.
Because of the centrality of ADDwe start by explaining how this function works.In the simple algorithm we are proposing in thispaper ?
which represents only one amongst manypossibilities ?
addition is governed by the heuris-tic that more complex descriptions should havesmaller extensions.
To this end, a candidate de-scription e is compared with each existing descrip-tion d ?
D. Step 2 ensures that if there exists asimpler description d (|d| < |e|) whose extensionis no larger than e (d v?
e), then e is not addedinto D (because the role of e can be taken by thesimpler description d).
Similarly, step 4 ensuresthat if there exists d with same depth (|d| = |e|)but smaller extension (d v?
e and e u ?d is satis-fiable), then e should not be added into D. Thesubsumption checking in Step 2 and 4, and theinstance retrieval in Step 6, must be realised byDL reasoning, in which TBox, ABox and NBoxmust all be taken into account.
ADD guaran-tees that when the complexity of descriptions in-creases, their extensions are getting smaller.We now turn to the main algorithm, GROWL.
InStep 1 of this algorithm,D is initialised to ?.
Steps2 to 3 add all satisfiable elements of CN to D.From Steps 4 to 14, we recursively ?process?
ele-ments ofD one by one, by which we mean that theconstructors in S are employed to combine theseelements with other elements of D (e.g., an ele-ment is intersected with all other elements, and soon).
We use fetch(D) to retrieve the first unpro-cessed element of D. New elements are added tothe end of D. Thus D is a first-come-first-servedqueue (note that processed elements are not re-moved from D).To see in more detail how elements of D areprocessed, consider Steps 5-14 once again.
Foreach element d of D, Step 5 uses a construct s toextend it:1.
If s is u or unionsq, in Step 7 and 8, we extend dwith each element ofD and add new descrip-tions to D.2.
If s is ?
or ?, in Step 10 and 11, we extendd with all relations of RN and add new de-scriptions to D. In Areces et el.
?s work, ?
isalso available when using ?
and ?
together,however due to their algorithm they can nevergenerates descriptions like ?r.A.3.
If s is ?,?
or =, in Step 13 and 14, we ex-tend d with all relations in RN and all num-bers in N , and add new descriptions to D.Because the = construct can be equivalentlysubstituted by the combination of?,?
and uconstructs (= kr.d is semantically equivalentto ?
kr.du ?
kr.d), it is a modelling choiceto use either ?,?, or only =, or all of them.In this algorithm we use them all.Because we compute only the NNF and wedisallow the use of individual identifiers, nega-tion ?
appears only in front of atomic conceptnames.
For this reason, processing does not con-sider s = ?.
Note that GROWL leaves someimportant issues open.
In particular, the or-der in which constructs, relations, integers andconjuncts/disjuncts are chosen is left unspecified.Note that D,RN,N, S are all assumed to be fi-nite, hence Steps 5 to 14 terminate for a givend ?
D. Because Steps 5 to 14 generate descrip-tions whose depth increases with one constructorat a time, there are finitely many d ?
D such that|d| = n (for a given n).GROWL extends the algorithm presented byAreces et al The example in Fig.2 shows thatmany referring expressions generated by our algo-rithm cannot be generated by our predecessors; infact, some objects that are not referable for themare referable by GROWL.
For example, if we ap-ply the algorithm to the KB in Fig.2, a possiblesolution is as follows:1.
{w1} = Womanu?
?feed.Cat, the womanthat does not feed all cats.2.
{w2} =?
0?feed.Cat , the woman thatfeeds all cats.3.
{d1} = Dogu ?
0?feed?.Woman, thedog that is fed by all women.4.
{d2} = Dog u ?
?feed?.Woman, the dogthat is not fed by all women.5.
{c1} = Catu ?
0?feed?.Woman, the catthat is fed by all women.6.
{c2} = Cat u ?
?feed?.Woman, the catthat is not fed by all women.It is worth reiterating here that our algorithm fo-cusses on finding uniquely referring expressions,leaving aside which of all the possible ways inwhich an object can be referred to is ?best?.
Forthis reason, empirical validation of our algorithm?
a very sizable enterprise in itself, which shouldprobably be based on descriptions elicited by hu-man speakers ?
is not yet in order.4.2 DiscussionLet us revisit the basic assumptions of Sec.2.2, tosee what can be achieved if they are abandoned.1.
In natural language, people do using names,e.g.
?the husband of Marie Curie?.
To allowREs of this kind, we can extend our Algo-rithm A-1 by including singleton classes suchas {Maria Curie} in CN .2.
Traditional GRE approaches have always as-sumed a single model with complete knowl-edge.
Without this assumption, our approachcan still find interesting REs.
For example,if a man?s nationality is unknown, but he isknown to be the Chinese or Japanese, we canrefer to him/her as Chinese unionsq Japanese.However, models should be finite to guaran-tee that N is finite.3.
Individuals with multiple names.
DL im-poses the UNA by explicitly asserting theinequality of each two individuals.
With-out UNA, reasoning can still infer some re-sults, e.g.
{Woman uMan v ?, David :Man,May : Woman} |= David 6= May.Thus we can refer to David as ?the man?
ifthe domain is closed.5 Widening the remit of GREThis paper has shown some of the benefits thatarise when the power of KR is brought to bearon an important problem in NLG, namely the gen-eration of referring expressions (GRE).
We havedone this by using DL as a representation andreasoning formalism, extending previous work inGRE in two ways.
First, we have extended GREby allowing the generation of REs that involvequantifiers other than ?.
By relating our algo-rithm to the theory of Generalised Quantifiers, wewere able to formally characterise the set of quan-tifiers supported by our algorithm, making exacthow much expressive power we have gained.
Sec-ondly, we have demonstrated the benefits of im-plicit knowledge through inferences that exploitTBox-information, thereby allowing facts to berepresented more efficiently and elegantly, and al-lowing GRE to tap into kinds of generic (as op-posed to atomic) knowledge that it had so far leftaside, except for hints in (Gardent and Striegnitz,2007) and in (Croitoru and van Deemter, 2007).Thirdly, we have allowed GRE to utilise incom-plete knowledge, as when we refer to someone as?the man of Japanese or Chinese nationality?.Current work on reference is overwhelminglycharacterised by an emphasis on empirical accu-racy, often focussing on very simple referring ex-pressions, which are constituted by conjunctionsof 1-place relations (as in ?the grey poodle?
), andasking which of these conjunctions are most likelyto be used by human speakers (or which of thesewould be most useful to a human hearer).
Thepresent work stresses different concerns: we havefocussed on questions of expressive power, fo-cussing on relatively complex descriptions, askingwhat referring expressions are possible when re-lations between domain objects are used.
We be-lieve that, at the present stage of work in GRE, itis of crucial importance to gain insight into ques-tions of this kind, since this will tell us what typesof reference are possible in principle.
Once suchinsight, we hope to explore how the newly gainedexpressive power can be put to practical use.ReferencesDouglas Appelt.
1985.
Planning English Sentences.Cambridge University Press, Cambridge, UK.Carlos Areces, Alexander Koller, and Kristina Strieg-nitz.
2008.
Referring expressions as formulas ofdescription logic.
In Proceedings of the 5th INLG,Salt Fork, Ohio.Anja Belz and Albert Gatt.
2008.
Intrinsic vs. extrinsicevaluation measures for referring expression gener-ation.
In HLT ?08: Proceedings of the 46th AnnualMeeting of the Association for Computational Lin-guistics on Human Language Technologies, pages197?200.Madalina Croitoru and Kees van Deemter.
2007.
Aconceptual graph approach to the generation of re-ferring expressions.
In Proceedings of the 20th IJ-CAI.Robert Dale and Ehud Reiter.
1995.
Computational in-terpretations of the gricean maxims in the generationof referring expressions.
CoRR, cmp-lg/9504020.Claire Gardent and Kristina Striegnitz.
2007.
Gen-erating bridging definite descriptions.
ComputingMeaning, 3:369?396.Albert Gatt, Anja Belz, and Eric Kow.
2009.
TheTUNA-REG Challenge 2009: Overview and eval-uation results.
In Proceedings of the 12th ENLG(ENLG 2009), pages 174?182, Athens, Greece,March.
Association for Computational Linguistics.Ian Horrocks, Oliver Kutz, and Ulrike Sattler.
2006.The Even More Irresistible SROIQ.
In KR 2006.Emiel Krahmer and Mariet Theune.
2002.
Efficientcontext-sensitive generation of descriptions in con-text.
Information Sharing: Givenness and Newnessin Language, pages 223?264.Emiel Krahmer, Sebastiaan van Erk, and Andr Verleg.2003.
Graph-based generation of referring expres-sions.
Computational Linguistics, 29(1):53?72.A Mostowski.
1957.
On a generalization of quanti-fiers.
Fund.
Math., 44:235?273.Boris Motik, Bernardo Cuenca Grau, Ian Horrocks,Zhe Wu, Achille Fokoue, and Carsten Lutz.
2008.Owl 2 web ontology language: Profiles.
W3c work-ing draft, W3C, October.Inanc?
Seylan, Enrico Franconi, and Jos de Bruijn.2009.
Effective query rewriting with ontologies overdboxes.
In IJCAI 2009.Johan van Benthem.
1986.
Essays in Logical Seman-tics.
Reidel.
