FASTUS:  A System for Extract ing Information from Text*Jerry R. Hobbs, Douglas Appelt ,  John Bear,David Israel, Megumi Kameyalna, and Mabry TysonSRI International333 Ra.venswood AvenueMenlo Park, C,A 94025INTRODUCTIONFAS'rUS is a (slightly permuted) acronym for FiniteState Automaton Text Understanding System.
It is a.system \[br extracting information fi'om free text in En-glish (Japanese is under development), for entry intoa database, and potentially for other apl)lications.
Itworks essentially as a set of cascaded, nondeterministicfinite state automata.FASTUS is rnost appropriate for inform.ation e~:lracliontasks, rather than fldl text understanding.
That is, it.
ismost effective for text-scanning tasks where?
Only a fi'actiou of the text is relevant.?
There is a. pre-defined, relatively simple, rigid targetrepresentation that the information is mappe(I into.?
The subtle nuances of meaning a,nd the writer'sgoals in writing the text are of no interest.THE STRUCTURE OF THE MUC-4FASTUS SYSTEMThe opera.tion of FASTUS is comprised of four steps.l.
Triggering: Sentences are scanned for key words todetermine whether they should be processed flir-t.her.2.
Recognizing Phrases: Sentences are segmented intonoun groups, verb groups, and particles.3.
Recognizing Patterns: The sequence of phrases pro-duced in Step 2 is scanned for patterns of interest,and when they are found,  corresponding "incidentstructures" axe built.4.
Merging Incidents: Incident structures from differ-ent parts of the text are merged if they provide in-formation about the same incident.
*This research was supported in part by the Defense AdvancedI~esearch Projects Agency under Contract ONI~I N00014-90-C,-0220wi|.h the Office of Naval Research, in part by NTT Data, and inpart by an SIII internal research and development grant.
Theviews and c~mclusions ,'ontail~ed in this document are those of I.heant|mrs and should not be interpreted as necessarily representingthe ,dfi,:ial policies, e i ther  expressed or in,plied, of |he DefenseAdvanced l:{eseav,:h I:)roject:s Agency of the U.S. (;,~vernment.Many systems have been built to do pattern matching onstrings of words.
One crucial innovation in the FASTUSsystem has been separating that process into the twosteps of recognizing phrases and recognizing patterns.Phrases can be recognized reliably with purely syntac-tic information, and they provide precisely the elementsthat are required for stating the patterns of interest.The system is implemented in CommonLisp and rmls onboth Sun and Symbolics machines.AN EXAMPLEThe task in the MUC-3 and MUC,-4 (Message Under-standing Conference) evaluations of text processing sys-tems was to scan news reports and extract intbrmationabout terrorist incidents, in particular, who did what towhom.
Tim following sentence occurred in one rel)ort:Salvadoran President-elect Alfredo Cris-tiani condemned the terrorist killing of Attor-ney General Roberto Garcia Alvarado and ac-cused the Farabundo Marti National LiberationFront (FMLN) of the crime.1.
Triggering: This sentence is triggered because it hasa nmnber of key words, including "terrorist", "killing",and "FMLN".2.
Recognizing Phrases: Step 2 segments tim sen-tence into the following phrases:Noun Group:Name:Verb Group:Noun Group:Preposition:Noun Group:Name:Conjunction:Verb Group:Noun Group:Preposition:Noun Groul):Salvadoran President-electAlfredo Cristianicondemnedthe terrorist killingofAttorney GeneralRoberto Garcia Alvaradoandaccusedthe Farabundo Marti NationalLiberation Front (I!
'MLN)ofthe crime133The phrases that are recognized are nantes, the noungroup, or the noun phrase up t.hrough tile head noun, theverb group, or the verb together with its a.uxilliaries andany trapped adverbs, and various particles, includingprepositions, conjunctions, relatiw~ pronouns, the word"ago", and tile word "'that" which is treated Sl)ecially be-cause of the ambiguities it gives rise to.
Essentially thefull complexity of English noun groups and wq'b groul.
)Sis accommodated.This phase of the processing ives very reliable results -better than 96% accuracy on the data we haxe examined.3.
Reeogn lz ing  Pat terns :  In the exa.mlAe, two pat-terns are recognized in the sequence of phrases:<Perpetrator> <Kil l ing> of <Hmnan'Fa.rget>and<GovtOtficial> accused <PerpOrg> of<Incident>Two corresponding incident structures are constructed:Incident: KILLINGPerpetrator: "terrorist"Confidence:Hurnan Ta.rget: "Roberto (.-;aleia Alvarado"andIncident: INCIDENTPerpetrator: FMLNConfidence: Suspected or Accused byAuthoritiesHuman Target: --Altogether for the MUC-4 application, about one hun-dred patterns were recognized.4.
Merg ing  Inc idents :  These two incident structuresare merged into a single incident structure, containingthe most specific infornlation from each.Incident:Perpetrator:Confidence:Human Target:KILLINGFMLNSuspected or Accused byA ut, horities"Rol)erto (larcia Alvarado"In the MUC-4 system, l.here are fairly elaborate rules formerging the noun groups that a.ppear ill the Perpetra-tor, Physical Target, a.nd Hmna.n Target slot.s.
A namecall be ii)erged with a. description, as "(-larcia" with "'a.t-torney general", provided I.he description is COllSiSl,ell|,with the other descriptions for that name.
A precise de-scription can be merged with a vague description, such as"person", with the precise description as the result.
Twoprecise descriptions can be merged if they a.re sen)an-tically compatible.
The descriptions "prieslY and "Je-suit" are compatible, while "priest" and "peasant" arenot.
When precise descriptions are merged, the longeststring is taken as the result.
If merging is inlpossible,both noun groups are listed in tile slot.SKIPP ING COMPLEMENTSPattern-matching approaches have often been tried inthe past, without much success.
We believe that our suc-cess was due to two key ideas.
The frst, as stated above,is the use of cascaded finite-state automata, dividing thetask at the noun group and verb group level.
The secondis our approach to skipping over complements.One significant problem in pattern-matching approachesis linking up arguments with their predicates when theyare distant in the sentence, for example, linking up thesubject noun group with the main verb when the subjecthas a number of nominal complements.
One techniquethat has been tried is to skip over up to some umnber ofwords, say, five, in looking for tile subject's verb.
Onetrouble with this is that there are often more t.han fivewords in tim subject's nominal complement.
Anothertrouble is that in a. sentence likeThe police reported that terrorists bombed theParliament oday.this teclmique would find "the police" as the subject of"bombed".Our approach is to implement knowledge of the gram-mar of nominal complements directly into the finite-statepattern recognizer.
The material between the end of thesubject noun group and the beginning of the main verbgroup nmst be read over.
There are patterns to accom-plish this.
Two of them are as follows:Subject {Preposition NounGroup}*VerbGroupSubject Relpro {NounGroup I Oi, her}*VerbGroup {NounGroup \[Other}*VerbGroupTlle first of these patterns reads over prepositionalphrases.
The second over relative clauses.
The verbgroup at the end of these patterns takes the subject noungroup as its subject.
There is another pattern for cap-turing the COl)tent encoded in relative clauses:Subject Relpro {NounGroup { Other}*VerbGroupSince tile finitie-state mechanisnl is nondeternlinistic, tileful l  colll, ent can be exl, ra.cted fl'om the selli,ellce134The n3a.yor, who was kidiral)ped yesterday, wasfoulid dead today.One branch discovers i.he iricident encoded in the rela.tiveclause.
Another branch marks t, ime through the relativeclause arid then discovers the incident in the niain clause.
"Flies(, incidents are then merged.A similar device is used for" conjoined verb phrases.
ThepatternSubject VelbGroup {Nourr(~4roup I Other}*Conju uction Verb(Iroupallows i,lie n\]achine to nondeternlinistically skip over thefirst, conjunct and associate the subject with the verbgroup in the second colrjunct.
This is llow, in the ahoveexamph', we were able to recognize Cristia.ni a~s the onewho was accusing the FMLN of the crime.THE PERFORMANCE OF FASTUSOn the MUC-4 evahlation in June 1992, FASTUS wasamong to top few systems, even tllough it had only beentinder (levelopnient for five nlonths.
On the TST3 set ofOlle hul ldred irressa,gos, \[A,_~ \[IS actl ieved a recall of 44%and a. precisiolr of 5,5%.
The flrll results of the MUC-4evahiation can be forrnd in Sundheirn (;1992).Moreover, FASTUS is an order of magnitude faster thanany other conrpa,rabh' system, hi the MUC,-4 evahiationit.
was able to l)rocess the era.ire test set of 100 messages,ranging fl'om a. third of a page to two pages in lelJgth, inl l .8 mimltes o f ( IPU time on a Sun SPARC-2 processor.The ela.pse(l real time was 1.5.9 minutes, hi nlore con-crete terms, FASTUS can read 2,375 words per minute.It can analyze one text in an average of 9.6 seconds.
Thistranslates into 9,000 texts per day.This fast run time translates directly into fast devel-opment time.
I~;%STUS became operationa.1 on May 6,1992, aud we did a. run on a set of messages that we hadnot trained on, obtaining a score of 8% recall and 42%precision.
At that point we began to train the system on1300 development texts, adding patterns and doing pe-riodic runs on the fair test to monitor our progress.
Thiseffort culminated three and a half weeks later on June1 in a. score of 44% recall and 57% precision.
(Recall ispercent of the possible answers the system got correct;precision is percent of the system's answers that werecorrect.)
'thus, in less than a lnonth, recall went up 3(Jpoints and precision 15 points.A more complete description of FASTUS and its perfor-mance is given in Hobbs et a.l.
(1992).RECENT EXTENSIONSWe are crrrrenl.ly ~'xl.ei/ding the I;'ASTU,q sysl.ein hi threeways:?
We are deve lo lY iug  a. cor lvorr iei l l ,  i l it(,r'fa.ce t\]la, t w i l la.llow risers I,o oh'f ine i)alJ,er'llS i r iore  easily.?
We axe irnphmwnt,in~ a Japa.nese la.nguage versionof FASTLiS.?
\'V(' are apl)lying i,he syst,em to a, new domain-exl.ra.ctiilg i\[,tbrnla.tion a.bout joint velltrlres fl'Ollrnews articles.The last of these will be the subject of our M U(:-5 paper.The other l.wo awe descri/)ed hero.THE INTERFACEThe original version o\[' li'A,lgT\[JS has been augnientedwith a convenienl, graphical user interface for iniple-nlellt, illg O1" extend ing aJI application, eniployi l lg S i l l ' sGrasper systenr (Karl) el.
a.l., 1993).
We expect this tospeed up developrirerrt time for a new application by afactor of three or four.
Moreover, whereas hefore riowonly a systenl dew4oper could inlpleinent a new applica-tion, now virtrrally a.nyoue should I)e able to.In a specification interface tbr FASTUS, there needs tobe convenient means for performing four tasks:1.
Defining ta.rget strtr('tlrres.2.
Defining word classes.3.
Defining sta.te l, ra.risitiorrs.4.
Defining nierge coirditioris.ViSe have dolle nothing yet irl the firsl, two areas, sincee.veryone currently working with the syst(~nl is tltlent illLisp.
Target structures are defined with defstruct, wordclasses with deDa.r.
As we acquire users who are notprogrammers, it will be straighth)rward to inil)lenlentconvenient means for these tasks.The Grasper-based graphical interface provides a con-venient inemls for creating, exaulining, editing, and de-stroying nodes arid links in the graphs representing thefinite-state automata.
Each link is labelled with the to-kens that cause that transition to take place.
Nodes haveassociated with them sequences of instructions that areexecuted when that node is reached.
These instructionstypically fill slots in the target strlrctures, and they ~canbe conditionalized on what link the node was reachedfrom, allowing greater economy in the finite-state ma-chiries.In addition, the interface allows the graphs a,t each levelto be modularized in whatever fashion the user desires,so that at any given tin\]e, the user can focus on only asmall portion of the total graph.
There are also conve-nient means for saving and compiling the graphs afl.erchanges have been made.Perhaps the hardest problem in the inforn\]ation extra.c-tion task is defiifing when two target structures can bemerged.
This is, after a.ll, the coreference l)rol)h'nr in dis-('Oilr'SO, well-knowrl to I)e "al-eomlilete".
W'e have devel-ol)ed a kiird of a.lgebra on l,he l,a.rgel, sl, ructures.
'H ie  rrser135can define abstract data types, inchiding ntlniber rallges,date ranges, locations, and strings.
Comparison opera.-lions can then be defined for each of these data.
l.ypes,returning vahies of Equal, Snbstnnes, Inconsistent, andhlcorupa.rable.
(\]onlbina.tion operations ca.n also be de-fined.
For exainple, the cornbination of two uunil)er ordate ranges is the nlore restrictive range.
For striligs,the conll)ination depends on the semantic categories ofthe heads of the strings.
I f  one is more specific than theother, the more sl)ecific term is the resu It.
of the combhm-t,ion.
There are t.hree types of actions that be l)erformedafter doing a comparison.
The items can be merged orc.ombined.
I f  they are incomparable and if the slot.
in t.hetarget struct,ure admits eonlpound entries, die two callsimply be added together.
Or the unification of the l.woitems can be rqjected.This algebra of target structures gives us a very cleantreatment of what in the MUC-4 systenl was often veryad hoe.FASTUS has been restrtictured somewhat a.s well sinceMUC-4.
A Tokenizer Phase has been added, its in-put consists of ascii characters and it output is tokens,usually words, numerals, and punctuation lnarks.
Thisphase gives the user control over the lowest level of input,,so that special rules can be encoded for abbreviations,numbers with radix other than 10, and other such phe-nOlllena.
The illOSt conlnlon tokenizations are, of course,ah'eady iniplenmnted.A Preprocessor Phase has also been added.
This incofpora.tes t,he nmltiword handling that.
was done in t.hePhrase R.ecognition phase of the first, version of FAS-TUS.
It also allows the user to customize automata lotdealing, for example, with names that have a differentgiven-name falnily-nanae order and with names of non-human entities that have internal structure significant o/.he donm.in, such a.s company names.The treatment of appositives, conjunct,ions, and "oF'prepositional phrases was originally done in the PatternRecognition phase.
This has now been separated outinto a Combining Pha.se for a. treat.nlent ha.t is nloreperspicuous and hence more conw?nient for the user.JAPANESE FASTUSWe are also developing a Japanese version of Ia)~SJ'US.The initial application is for extracting a, summary ofspoken diMogues, inpu{, in R,omari characters, in thedomain of conDrenee room reservatiolls.
Smmnarizinggoal-oriented dialogues can be achieved by filling a pre-defined sumnlary tenq)late, and a.ny digressions in thedialogue content can 1)e ignored.
Sunnnarization is i, houan exalnple of expectatiorl-driven i forlila.tioli extracl,ionperformed by FAS'FUS.Despite the dissiniila.ril.y bet.weon t.he English and.
}al)a.nese lallglla.ges, t.ho Basic FASTUS a, rchit.o('l, lrO COil-sis ing of \[bur phases can be a.l)plh~d to the process-ing of .la.i)anese.
The phrase recognition phase (phaseII) recognizes noun groups, verb groups, and parlicles.The phrase coral)tirol, ion phase (phase II1) recognizesthe "N(~ no NG" l)hra.ses (similar to the English "of"phrases) and N(I conjunctions that a.re of interest, to thegiwm domain.
The incident recognition phase (phaseIV) recognizes those ut, tera.nce patt,erns that conl,ain keyinrorma.l,ion releva.nt l.o the sumnmry template.
Be-cause the inl)ut, is Sl)ont, aueous dialogues rather thanwritt.en news reports, we will have a dialogue manag-ing module a.fter the.
incident recognition phase in orderto combine intbrma.tion contained in successive dialogueturns---for instance, question-answer pairs and request-confirmation pairs.
We have implemented phases \]l andIll, and phase IV will be in place shortly.The main complexity of summarization in this roomreservation domain is in the use of tempora.l expres-sions and in the dynamics of negotiation between thetwo speakers.
Written news report,s typically report pastewnlts whose resulting states are already known.
Spokendialogues, however, progress through a sequence of nego-tiations where the speakers express their desires, possi-Ifilit.ies, iml)ossibilities, concessions, accel)tances, a.nd so\[ortrh.
This is a considerable challenge to the structlu:emerging routine of FAS'I'IIS.For i.he M U( '.-5 particil)ation, the Jal)anese FASTUS sys-tem will be extended for the new domain of joint ven-tures and the new inl)ut type of written news reports inJ apa.neso charact.ers.SUMMARYThe advantages of the FAS'I'IIJS system are as \[;allows:?
It, is concept.ually simple.
It is a set of cascadedfin ite-state a.utomat.a.?
The basic system is relatively small, Mthough thedict.ionary and other lists are potentially very large.?
It is effective.
It.
was among the top few systems inI.he MUC-4 evaluation.?
It has very fast run time.
The average time for an-alyzing one message is less than 10 seconds.
This isnearly a.n order of magnitude faster than compara-I)le sysl.ems.?
In part I)ecause of the fast nm time, it has a veryra.sL dewqopment time.
This is also true because thesystem provides a wiry direct link between the textsbeing analyzed and the da.l.a being extracted.We I)eli,'w" thai.
the le:'\STUS technology can achieve alevel or (i0(~, r,'call and 60% precision oi;i hlforn-iation ex-l.racl.ion l.asks Ilk,' thai.
or M U(.:-~I.
tlunian coders do not136agree on flus task nlore than 80% of the i,hue, tlenc(',a systeln working ten tinles as fast as \[lllllla.ns do ('allachieve 75% of hulnan perforrnau('e.
We beliew" thatconabining this system with a good user interface couhlincrease the productivity of analysts by a factor of' liveor ten in this task.This of course raises the quest, iou about the final :25%.ttow call we achieve that?
We believe this will notbe achiew~d until we niake substantia.l progress on thelong-term problem of hill text undersla.uding.
This call-not hai)peri unt i l  there is a long-terrn connnitnienl,  thatnlakes resources available for innovative research on 1,hel)roblem, research tiiat will ahllOSt surely not producestriking results on large bodies of text in the near hl-ture.Absent such an environment, our inmiediate plans areto spend about two months bringing our MUC-5 sys-tem to and beyond the level of our MUC-4 systeni, andthen to explore the important research question of hownmch of hill text understanding can be a.pproxinlai.ed bythe finite-state approach.
The following observations arevery suggestive in this regard.We beliew~ that the most promising approach for fulltext understanding is the "htterprel, ation as Abducl,iou"approach elaborated in Hobbs el, al.
(1993).
There arei,hree basic operations in this approach, a.nd each of l.henlcan be approximated in FASTUS technology.
First, thesyntactic structure is recognized and a Iogica.I form isproduced.
The corresponding operation in FASTUS isthe recognition of phrases, that part of syntax that canbe done reliably.
Second, the logical form is proven al)-ductively by back-chaining on axioms of the form(ga, b)Y(a,b) D X(a,b)Tiffs can be approximated by adding flirt.her i)a.l, terns:In addition to having a pattern forA X'ed Bwe would also have a pattern forA Y'ed BThird, redundancies are spotted and merged to solve thecoreference problem.
As pointed out above, this is ap-proximated in FASTUS by the operation of merging in-cidents.However, it nlust be realized that nnlch of the successof the FASTUS approach is in the clever ways it ignoresmuch of the irrelevant information in the texl.. As wedeal with texts in which more and more o\[" l.he informa-tion is relevant, this a.
(Ivantage could well I)e Iosi, and a.gmmine, full text-understan(ling system will b(" required.REFERENCESI.
llobbs, .\]erry R., Douglas E. Appelt..loll, Bear, I)avidIsrael, and Mabry Tyson, 1992.
"I':\STIJS: A Syslenl forI~xtracting I nf(n'mation fi'om Nalm ral-l~a,guage Text",SRI '!Pechnical Note 519, SRI International.
Menlo Park,Ca|ifornia, November 1992.2.
Hobl)s, Jerry R.., Mark Stickel, Douglas Appelt, andPa.ul Martin.
1993.
"Interpretation as A I)du('tion", Io~q)pear in Artificial Intelligence(, .Journal.
Also Iml4ish(:das SRI Technical Note 499, ,q\]{\] lut(:rim.tioiml, MenloPa.rk, California.
December 199(I.3.
t(arp, Peter D., .\]olin D. Lowra.ncc, Thomas M. Strat.David E. Wilkins, 1993.
"'l'he Grasper-( :l, (;raph Man-aggement System", Technical Note No.
521, Artificial In-telligence Center, SR1 International, .lanuary 1993.4.
Sundheim, Beth, ed., 1992.
Proceeding.x, Fourth M('ssa.g('Understanding Conference (MUC-4), Mcl,ean, Virginia,June 1992.
Distributed by Morgan l(aufmann Pul)lish-ers, Inc., San Mateo, California.137
