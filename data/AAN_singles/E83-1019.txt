How to Parse Gaps in Spoken UtterancesG.
Goerz, C. BecksteinUniv.
Erlangen-Nuernberg, RRZEMartensstr.
I, D-8520 Erlangen, W. GermanyPhone: (09131) 85-7031, Network: Goerz~SUMEXABSTRACTWe describe GLP, a chart parser thatwill be used as a SYNTAX module of theErlangen Speech Understanding System.
GLPrealizes an agenda-based multiprocessingscheme, which allows easily to apply vari-ous parsing strategies in a transparentway.
We discuss which features have beenincorporated into the parser in order toprocess speech data, in particular the abi-lity to perform direction independent is-land parsing, to handle gaps in the utter-ance and its hypothesis scoring scheme.I.
GLP, A GENERAL LINGUISTIC PROCESSORGLP (Goerz 1981, 1982a,b) is a multi-strategy chart-parser, which has specialfeatures for the analysis of fragmentaryand defective input data as it is the casewith speech.
GLP, a descendant of a versionof GSP by M. Kay (1975), has been implemen-ted in InterLISP.
It can be used as astand-alone system, to e.g.
perform experi-ments, test various parsing strategies, orassist in the development of a linguisticdata base.
While for this purpose it got acooperative, user-friendly interface, wealso implemented an interface to the Erlan-gen Speech System (Niemann 1982).
TheSpeech System's architecture is similar tothat of HEARSAY-II, so that it employs avariety of knowledge sources, among whichare modules for phonological, syntactic,semantic and pragmatic analysis.
Althoughthe structure of GLP does not limit itsability to perform syntactic analysis only- it is suitable for morphological or thenon-inferential part of semantic analysisas well (see the similar system UCP, Sag-vall-Hein (1982)) -, its role in the SpeechSystem is constrained to the first men-tioned task.II.
THE ARCHITECTURE OF GLP AND ITSEXTENSIONS FOR SPEECH ANALYSISThe chart parsing idea was originallyconceived and further developed by MartinKay (1980).
Its basic design extends theWell Formed Substring Table, a device usedin many parsers to store intermediary re-sults, which is represented as a directedgraph, and makes it into an active parsingagent.
Initially, the chart is set up as aset of vertices which mark beginning andend of an utterance and the boundaries bet-ween words.
The vertices are connected by(inactive) edges which carry the lexicalinformation of the rasp.
words.
Whenever aconstituent is found during the parsingprocess, a new inactive edge is added tothe chart.
In contrast to that, active ed-ges represent incomplete constituents; theyindicate an intermediate state in thesearch for a phrase.
Using this data struc-ture, GLP simulates internally a multipro-cessing scheme by means of agendas.
Anagenda is a list of tasks to be carried outover the chart.
Tasks are processing stepsof different kinds, e.g.
genuine analysis~ rocesses (Syntax- and Scan-Tasks), input output with the outside world (Listen- andTalk-Tasks), and supervision to govern theanalysis process in the large.
In order toachieve a clear modularization, GLP is cur-rently employing three agendas: Main forSyntax- and Scan-Tasks, Communication forListen- and Talk-Tasks, and Control forSupervisor-Tasks.
Whenever edges are addedto the chart, any new tasks that can becreated as a result, are scheduled on anagenda.
The selection of tasks from anagenda is performed by its selector, whichcan, in the extreme cases, either perform adepth-first (agenda as a stack) or abreadth-first (agenda as a queue) searchstrategy.
The question of the rule invo-cation strategy (or parsing strategy) isindependent of the choice of the searchstrategy.
Different parsing strategies suchas top-down or bottom-up are reflected indifferent conditions for the introductionof empty active edges.
An empty edge repre-sents the task to search a constituent; itpoints to the same vertex where it is emer-ging from, indicating the search direction.Scheduling of tasks on an agenda isperformed by its scheduler which assignspriorities to tasks.
GLP's operation ingeneral is controlled by Supervisor-Taskson the Control agenda, while the othertasks are executed by specific processors(interpreters).illThe overall control mechanism is embed-ded in a general interrupt system.
Inter-rupts are caused when the Main agenda - oreven a particular task - is done or whenthe currently available resources are usedup, in particular time and number of tasks.Whenever an interrupt occurs, the currentlyactive task is finished and control ispassed to the selector of the Control agen-da.
Then and only then input/output opera-tions can be performed, new resources canbe assigned, and GLP's strategy can bechanged (see IV).We do not claim any psycholinguisticvalidity for this kind of system archi-tecture, although M. Kay (1980) argues thatan agenda-based model may lead to signifi-cant insights in cognitive psychology.~II.
SCORINGIn general, there are two parts of theproblem of syntactic and semantic analysis:Judgment or decision (whether a givenstring is grammatical or not) and represen-tation or interpretation (to decide how thepieces of the utterance fit together andwhat they mean).
In a speech understandingsystem, hypotheses in all levels of ab-straction carry quality scores, which playan important role in the overall strategyof the system.
GLP receives word hypothesesfrom the Speech System's blackboard, whichhave been produced by the word hypothe-sizer, inserts appropriate word edges intoits chart, extracts their quality scoresand attaches derived priority scores to theresp.
edges as features.
If gaps in theutterance are recognized (i.e.
there are noword hypotheses in a certain time intervalwith a score larger than a given thresholdvalue), edges are introduced which are mar-ked with the universal category GAP and ascore feature which has the threshold asits value.During parsing, GLP assigns scores tophrases.
We are currently developing anexplicit focussing strategy which is simi-lar to Woods' (1982) Shortfall Scoringmethod.
This method assigns priorities topartial interpretations, the so called is-lands, by comparing the actual score for anisland with the maximum attainable scorefor the time period covered by the islandand adding to it the maximum attainable:~cores for its environment.
It can be shownthat this priority scheme guarantees thediscovery of the best matching interpreta-tion of the utterance.
In the special caseof  a GAP edge, a task is scheduled automa-tically looking for matching word hypothe-ses which have possibly been generated inthe meantime.
With each attempt to find amatching word hypothesis the GAP edges'score is reduced by a certain percentageuntil it falls below a second threshold.
Inthis case of a fai lure GLP constructs anincomplete phrase hypothesis out of theavailable information including the patternwhich characterizes the missing word(s).
Inaddition, while building phrase hypotheses,GLP can also take into considerat ion pre-ference scores (or weights) for differentbranches in the grammar, but our grammardoes not employ this feature at the presenttime.IV.
INCREMENTAL PARSINGIncremental  parsing is a sal ient fea-ture of GLP.
There is no distinct setupphase; GLP starts to work as soon as itreceives the first (some ten) word hypothe-ses with a sufficient quality score.
When-ever an interrupt occurs, new word hypothe-ses can be incorporated into the chart.These hypotheses are provided by the SpeechSystem's word hypothesizer,  either conti-nuously or as an answer to a request byGLP, result ing from gap processing, thathas the form of an incomplete word hypothe-sis which is to be filled.
In the lattercase active edges act as demons waiting fornew informat ion to be imbedded in alreadygenerated partial structures in such a waythat no dupl icate analysis has to be per-formed.
Since the Speech System's overal lstrategy can decide when new word hypothe-ses are delivered, a data-driven influenceon GLP's local strategy is achieved.The required input/output processes forhypotheses are performed by Listen- andTalk-Tasks, which are activated by the se-lector attached to the Communication agen-da.
The Communication selector is triggeredby interrupt conditions, which are due tothe mentioned overall parsing strategy.
Thecommunication channel to the outside worldcan be parameterized by a general feature,the Wait list.
Whenever the name of a pro-cessor, e.g.
Listen or Talk, is put on theWait list, this processor is blocked untilit is removed from the Wait list.
Becauseb locking of any processor causes a redis-tr ibut ion of the avai lable resources, iteffects in conseq,~ence GLP's strategy.
Di-rect influence on the parsing strategy isachieved by temporarily blocking the Syntaxor Scan processors.
Furthermore, the stra-tegy can be modified explicitly by attach-ing a new selector to the Main agenda andby setting Various global strategy parame-ters.
These include threshold values, e.g.for gap processing, as well  as l imits forresources, the most important of which istime.
This f lexibi l i ty in strategy varia-tion is important for an empirical evalua-tion of our approach.
Although we have notyet analyzed GGP's parsing complexity ingeneral, some limiting factors for chartparsing are well known by investigations on112the context free case by Sheil (1976): Thenumber of steps is o~ O (nD), the spacerequirements of 0 (n 2) independent of theparsing strategy, where n is the length ofthe input sentence.
The size of the grammardoes not influence complexity, but itsbranching factor, which is a measure forits degree of nondeterminism, acts as aproportionality factor.V.
ISLAND PARSING WITH A CHARTIn the following we like to point outwhy we think that GLP's mechanism has seve-ral advantages over traditional island par-sing schemes-(e.g.
Woods 1976).
In order toprocess defective input data, the parsermust be able to start its operation at anypoint within the chart.
In general, ourmain parsing direction is from left toright.
With respect to the expansion ofislands, in particular from right to left,our mechanism is simpler, because, forexample, there is no explicit representa-tion of paths.
For Syntax-Tasks, which areproceeding in the usual way from left toright, this information is already attachedto their corresponding active edges.
Scan-Tasks, which are seeking to the left of theisland, access information attached to thevertex they are starting from.
Phrase hypo-theses are only generated by Syntax-Tasks;if an island cannot be expanded to theright, a Scan-Task which seeks an anchorpoint for an active edge to the left of theisland is scheduled automatically.
While inthe usual island parsing schemes the focusof attention is not shifted left of an is-land before appropriate hypotheses are ge-nerated, (e.g.
if there is a gap - of arbi-trary duration - left of the island), GLPseeks for an anchor point, attaches an ac-tive edge to it and schedules a correspon-ding Syntax-Task.
This task will then andonly then generate a phrase hypothesis.Furthermore, we think that our scheme iscombinatorially more efficient, becausefewer hypotheses are generated.
This factresults from a more adequate representationof an island's left context: In usual is-land parsing expansions to the left areperformed without regarding the left con-text of the island as long as only predic-tions exist and no hypotheses are availa-ble.The goal of the parsing strategy we aredeveloping now is that semantic analysis atthe constituent level can be started assoon ~s a local constituent is syntactical-ly recognized (bottom-up).
The resultingsemantic hypotheses, produced by theSEMANT\[CS module and delivered through theSpeech System's blackboard, which containsemantically based predictions, are thenmatched against the chart.
This processwill lead to the generation of new tasks,which in turn may produce new word andphrase hypotheses, so that present islandscan be expanded and merged.VI.
ACKNOWLEDGEMENTSThanks to Prof. G. Nees, who continu-ously encouraged us in our work on GLP, andto Prof. K.M.
Colby, Roger Parkison and DanChristinaz of the Neuropsychiatric Insti-tute, UCLA, where the first author learnt alot on robust parsing during a researchstay sponsored by the German Academic Ex-change Service (DAAD).VII.
REFERENCESGoerz G. (1981): GLP: A General LinguisticProcessor.
Proc.
IJCAI-81, Vancouver,B.C.
1981, 429-431Goerz G. (1982a): GLP: The Application of aChart Parser to Speech Understanding.SIGART Newsletter No.
79, Jan. 1982,52-53Goerz G. (1982b): Applying a Chart Parserto Speech Understanding.
Proc.
EuropeanA.I.
Conference, Orsay, 1982,Kay M. (1975): Syntactic Processing andFunctional Sentence Perspective.
Proc.TINLAP-I, Cambridge, Mass., 1975, 6-9Kay M. (1980): Algorithm Schemata and DataStructures in Syntactic Processing.
XeroxReport CSL-80-12, Palo Alto, Calif.,1980Niemann, H.: The Erlangen System for Recog-nition and Understanding of ContinuousGerman Speech.
In: Nehmer J.
(Ed.
): GI -12.
Jahrestagung, Berlin: Springer IFB-57, 1982, 330-348Sagvall-Hein A.
(1982): An ExperimentalParser.
In: Horecky J.
(Ed.
): Proc.COLING-82, Prague, 1982, 121-126Sheil B.
(1976): Observations on ContextFree Parsing.
Star.
Meth.
in Linguistics6, 1976, 71-109Woods W. (1976): Speech Understanding Sys-tems, Final Report, Vol.
IV.
Syntax andSemantics.
BBN Report 3438, Cambridge,Mass., 1976Woods W. (1982): Optimal Search Strategiesfor Speech Understanding Control.
A.I.Journal 18, 1982, 295-326I13
