Interact ive Prob lem Solving and Dia loguein the ATIS Domain  1Stephanie Seneff, Lynette Hirschman, and Victor W. ZueSpoken Language Systems GroupLaboratory for Computer ScienceMassachusetts In titute of TechnologyCambridge, Massachusetts 02139ABSTRACTThis paper describes the present status of the discourse anddialogue models within the MIT ATIS system, extended to sup-port the notion of booking a flight.
The discourse model includesnot only the resolution of explicit anaphoric references, but alsoindirect and direct references to information mentioned earlier inthe conversation, such as a direct reference to an entry in a previ-ously displayed table or an indirect reference to a date, as in "thefollowing Thursday."
The system keeps a history table containingobjects uch as flights and dates, represented assemantic frames,as well as the active ticket, previously booked tickets, and previ-ously displayed tables.
During flight reservations scenarios, thesystem monitors the state of the ticket (which is displayed to theuser), making sure that all information is complete (by queryingthe user) before allowing a booking.
It may even initiate calls tothe database to provide additional unsolicited information as ap-propriate.
We have collected several dialogues of subjects usingthe system to make reservations, and from these, we are learninghow to design better dialogue models.INTRODUCTIONA key goal of spoken language systems is to provide sup-port for interactive problem solving.
To be effective in thisrole, a system should permit the user to build up a solutionincrementally, and therefore to make implicit and explicit ref-erence to information from earlier parts of the system/userdialogue.
In addition, in certain scenarios, e.g., making flightreservations, it is natural to have the system play an ac-tive role in the dialogue.
It is in fact our belief that spokenlanguage systems will never reach a practical level of perfor-mance unless special attention is paid to issues of discourseand dialogue.
To this end, we spent considerable effort overthe last several months augmenting our system's discoursecapabilities, and developing a much more active role for thecomputer during the dialogue with a user.We can view interactive problem solving systems on acontinuum of system/user control.
At one extreme would bea system that answers user's questions without at any point1This research was supported by DARPA under Contract N00014-89-J-1332, monitored through the Office of Naval Research.asking questions or making suggestions.
At the other extremewould be a menu system that forces the user into a verylimited range of choices.
This paper will describe an attemptat MIT to explore a middle ground in this continuum, in thecontext of allowing users to make flight reservations.There are a number of advantages to an approach whichexplores a mixed initiative system for flight reservations.
First,it provides the user with a more focused way to interact:making a reservation provides a natural notion of task com-pletion.
Second , a system that can take the initiative onoccasion not only can provide a more flexible and naturalinteraction (e.g., asking for clarification, eliciting missing in-formation) but also can reduce the search space for spokeninput, thus potentially improving performance.There are also a number of potential disadvantages tosuch an approach.
One problem with making reservationsis the difficulty in eliciting clean data that does not con-tain extraneous information ('names of travelers, VISA cardnumbers, etc.)
A problem that arises when the system takesthe initiative is that it must have substantial problem solvingexpertise; it crosses the line into an expert system, and there-{ore may extend beyond the scope of the Spoken LanguageSystems effort as currently defined.
Third, such systems aremuch more difficult to evaluate automatically.
Finally, bymaking the system more natural, we run the risk of raisinguser expectations too high.This paper describes the present status of the discourseand dialogue models within the MIT AWlS system.
After de-scribing the models, we will illustrate some of the system'scapabilities by way of an example.
We then describe our pre-liminary attempts at collecting data in a booking mode, forwhich we hive included a complete dialogue licited from oneof our subjects.
Finally, potential implications for improve-meats in speech recognition are discussed.MODELL ING METHOD OLOGYThe back-end component of the MIT ATm system hasbeen completely redesigned since last June \[5\].
The mainsystem is described in detail in \[4\], and will only be briefly354Frame fo rmat  :\[name ~ypekey1: va3.uelkey2:value2?.,\]Fr  a,me :\[veri~y clause~opic: \ [ f l ight  qset number: 22\]predicate: \[serve predicatetheme': \["dinner" referenceref~ype: meal\]\]\]Figure 1: Frame representation resulting from analysis of theparse tree for the sentence, "Does flight twenty two serve dinner?
"mentioned here.
The parser delivers a semantic frame to theback-end, which processes it to produce averbal response anda database table for display.
Processing includes a step toincorporate previous elements from thehistory that may stillhold, even though they were not explicitly mentioned in theimmediate sentence.
An example frame is given in Figure 1for the sentence "Does flight twenty two serve dinner?
"The system can be operated in both a non-booking anda booking mode.
2 In the former, when a user tries to makea reservation, he/she is simply informed that such a capabil-ity does not yet exist.
In the latter, the system launches areservations plan upon user request, which includes a num-ber of subgoals initiated by either the system or the user.Once a user initiates a booking, a complex series of eventstranspires, in which the computer is actively interpreting thestate of the ticket and initiating both explicit requests to theuser and calls to the database to provide relevant additionalinformation.
It also displays a facsimile of the ticket (seeFigure 3 below), and slots get filled in as they become spec-ified.
The computer can carry the user all the way througha round trip ticket, being sure to get unique flight/fare/datespecifications for both legs, and making sure that the datesare not violated by fare restrictions.
It also warns the userabout the date limits for the return flight when they try tobook a restricted fare.In our current system, we keep at most two distinct flightevents in the history table.
One of these refers roughly tothe most recently mentioned set  of flights requested by theuser, appearing as a new object for reference.
The otherflight event in the history records the most recently refer-enced unique flight or itemized flight set, typically introducedwhen the user specifically asks for more information abouta flight that was previously presented in a table.
3 Flightevents are not inherited wholesale xcept through specific~We define booking as the process of acquiring all relevant informa-tion for an itinerary, including the fare.
At the moment, no furtheraction, such as seat assignment and purchase/issue of the ticket, is per-formed, although it could presumably be simulated at a later time.3This is a more limited approach than a general stack of availableanaphoric reference such as "it" or "these flights."
Instead,individual modifiers are inherited unless new modifiers over-ride their inheritance.
History elements are stored in thestandard frame format, and inheritance of a modifier usuallyamounts to simply inserting it into the appropriate frame ofthe new sentence.A flight that is incompletely specified in a new sentenceinherits modifiers that are consistent with its current state.Defining consistency is tricky and requires knowledge of howinformation is structured in the domain.
Within the ATISdomain, the explicit mention of a flight number is taken tomark a change of focus, and therefore blocks almost all in-heritance modifiers except source and destination.
Similarly,the modifier "cheapest" would block an inheritance of a spe-cific flight number, since it implies taking a subset of a pre-viously mentioned set .
Whenever both a new source and anew destination are present, all inheritance is blocked, unlessthe new sentence was a clarifier, such as "How about fromBoston to Denver?"
Of course, a modifier always blocks in-heritance of an entry under the same key in the history ta-ble.
Exactly which modifiers hould block which others wasdetermined empirically from subject data through the datacollection episodes.The history table contains not only the frames associatedwith previously mentioned noun phrases and their modifiers,but also the previously displayed table, the previous tate ofthe ticket under development, and previously booked ticketsor first legs of a round trip ticket.
The system frequently con-sults the tickets, as well as other elements from the history,to decide what directed questions to ask the user.Occasionally, the history elements have to be reinterpretedafter being inherited.
This is particularly true for "return"flights, which can be mentioned ina number of different ways:using an adjective or a verb phrase modifier, with or withoutexplicit mention of a source, destination, or date, and withor without a mention of a forward leg in the same sentence.It turned out to be quite difficult o make all conditions workout, inheriting source and destination when appropriate, andreversing them only if they came fl'om a history flight thatwas not also marked as a return flight.
Return flights alsoinherit fare class, fare restrictions, and airline.
In addition,a restricted weekday fare is generalized to include a com-patible weekend fare, and some restrictions require a min-imum/maximum stay restricting the return date.
Finally,users often mention the return date early in the dialogue, inwhich case the system stores it and recalls it later, when thetopic turns to the return leg.Figure 2 gives a block diagram of the control flow formanaging discourse and dialogue.
As shown in the figure,both the user and the computer may issue questions to theback-end component.
These questions are processed the samediscourse references \[I\].
However it has been sufficient for the nTISdomain to date.355~--,TA--~=,~ Subject Input ~ Update History ~ Computer Query L ?
.
I ~1 ~ =a,ogue StsW---\]C..O.
"S,ow,.res" V -?
g Round trip, ~- ~;~y/  .
.
.
.
II Generate Response }No Pop Dialogue , State Stac,kFigure 2: Block diagram of control flow for managing dialogueand discourse.way, updating both the discourse and dialogue componentsaccordingly.
For instance, when the user has booked a partic-ular flight but has said nothing about fares, the system cansimply issue the request "Show fares" to the back-end.
Thediscourse history will incorporate automatically the relevantflight information.
If a user query is ambiguous, the systemdefers calling the database until it has queried the user for res-olution of the ambiguity.
After the computer has answeredthe user's question, it assesses the dialogue state, which ismaintained as a stack.
When the state stack is popped, thesystem may update the information contained in the ticket.The computer may decide at this point to take the initiative,anticipating the user's needs.Consider the example in which the user says, "Book thecheapest flight."
The system does not immediately knowwhether it should find the cheapest one-way fare or the cheap-est round-trip fare.
It also must remember, however, that abooking has been requested.
The system pushes <booking>onto the dialogue state, followed by <resolve flight cycle>.This is similar to the stack-based approach described in \[2\].The database query function examines the top of the dialoguestate and finds that more information is needed before a tablecan be displayed, so it does nothing.
Control now passes tothe computer, which asks the directed question, "One way orround trip?"
and pops the top of the dialogue stack.
Afterthe question has been answered by the user, the user's an-swer is incorporated into the flight-event object, and a tableis displayed.
Now it consults the dialogue state once againand finds <booking>, so it calls up the booking routine tofill in all the ticket information and make the next decisionabout what to ask.Before deciding to query the user about the one-way/round-trip ambiguity, the computer tries hard to infer the answerfrom history information.
Of course, if this had been spec-ified in a previous sentence, then it would be available as aflight-modifier frame in the history.
It is also possible thatthe table previously displayed contained only round-trip (oronly one-way) fares, in which case it could decide based onthe table.
Finally, if the user had previously specified a re-turn date (as in the example below), the computer wouldassume a round-trip fare was wanted.
Only when all theseconditions fail does it resort to asking the user.AN EXAMPLEThe easiest way to explain some of the discourse/dialogueaspects of the system is through an example of a simulateddialogue, as-shown in Table 14 .
The dialogue involves makinga round trip reservation fl-om Boston to San Francisco.
Thesubject's first sentence indicates only a destination.
Ratherthan displaying all flights to San Francisco from anywhere,the system asks instead a directed question for clarification ofthe source location.
The subject responds with only the word"Boston," but the system infers "from Boston" based on thedialogue state.
The system then immediately asks for a date,since this will dictate whether the flight is available on thatday and also which fares apply.
The next sentence from thesubject, "I'll be leaving Boston next Sunday and returningthe following Tuesday," provides two dates, the first relativeto today's date and the second relative to the first one.
Thesystem updates the reference date "on the fly" so that theappropriate date is available for reference when the phrase"the following Tuesday" is processed.
The system now an-swers by focusing on the forward leg, holding the return datefor later reference.
It also provides verbal feedback verify-ing its understanding of the flight conditions: "These are theflights from Boston to San Francisco n Sunday, January 6,"where it has interpreted "next Sunday" as "Sunday of nextweek."
Finally, it fills in the source, destination, and date onthe ticket form being displayed continuously to the subject.The subject now asks a question referring to a specificentry in the list, "the third one."
The system extracts airline,flight number, source and destination from the table entry,and constructs the appropriate semantic frame, inheriting thedate from the history.
Again it confirms understanding witha verbal response.Question 5 from the subject is a complicated one, con-taining two superlative adjectives.
The system knows to firstextract all non-stop flights that serve dinner 5, then to pickthe earliest among them; and finally to find the cheapest farefor that flight.
If these modifiers were processed in a differentorder, it would not get the right answer.
Usually the systemwould ask for a one-way/round-trip disambiguation at thispoint, but since the subject has already specified a returndate, the system assumes they want a round-trip ticket.
Thecheapest fare is an unrestricted one because the restrictionsare failing on advance-purchase requirements, given the date.In Question 6, the subject says, "Book it," where "it"4Tables have been abbreviated somewhat so that they will fit withina single column on the page.5It inherits ource, destination, and date from the flight set historycreated by Question 3.356Subject: I WANT TO GO TO SAN FRANCISCO (i)ATIS: Where from7Subject: Boston.ATIS: What date will you be travelling on?Subject: I'LL BE LEAVING BOSTON NEXT SUNDAY ANDRETURNING THE FOLLOWING TUESDAyATIS: These are the flights from Boston toSan Franoisco on Sunday January 6.AIRLINE NUMBER FROM TO DEPARTURE ARRIVAL STOPSUNITED 21 BOS SFO 8:00 A.M. 11:31A.M.
0UNITED 343 BOS SFO 8:40 A.M. 1:36 P.M. 1AA 813 BOS SFO 11:49 A.M. 5:58 P.M. 1CONT 1765 BOS SFO 5:40 P.M. 11:10 P.M. 1UNITED 93 BOS SFO 5:45 P.M. 9:27 P.M. 0TWA 61 BOS SFO 6:I0 P.M. 9:37 P.M. 0Subject: WHERE DOES THE THIRD ONE STOPATIS: American flight 813 from Boston to San Franciscoon Sunday January 6 stops in the Tollowing places.
(2)(3)(4)AIRLINE NUMBER FROM TO DEPARTURE ARRIVAL STOPS STOP AIRPORTAA 813 BOS SFO II:49A.M 5:58P.M.
I DFWSubject: WHAT IS THE CHEAPEST FARE FOR THE EARLIESTNONSTOP FLIGHT THAT SERVES DINNERATIS: This is the cheapest round-trip fare for theearliest non-stop flights from Boston to San Franciscoserving dinner on Sunday January 6.AIRLINE NUMBER RESTRICTION ROUND TRIP FARE CLASSUNITED 93 NONE $1210.00 Y:COACH CLASSSubject: BOOK ITATIS: I'll show it to you again.
(s)(6)AIRLINE NUMBER RESTRICTION ROUNDTRIP FARE CLASSUNITED 93 NONE $1210.00 Y:COACH CLASSI'll book United flight 93 from Boston to San Franciscofor you.
Can I help you with the return flight onTuesday January 87(7) Subject: YES PLEASEATIS: These are the United flights from San Franciscoto Boston class Y on Tuesday January B.AIRLINE NUMBER FROM TO DEPARTURE ARRIVAL ROUND TRIP FAREUNITED 92 SFO BOS 8:00A.M.
4:27P.M.
$1210.00 Y:COACHUNITED 20 SFO BOS 1:40P.M.
IO:02P.M.
$1210.00 Y:COACNPlease select a booking.
(8)Subject: I'D LIKE TO BOOK UNITED FLIGHT NINETY TWO PLEASEATIS: This is United flight 92 from San Francisco to Bostonclass Y on Tuesday January 8.AIRLINE NUMBER FROM TO DEPARTURE ARRIVAL ROUND TRIP FAREUNITED 92 SFO BOS 8:00A.M.
4:27P.M.
$1210.00 Y:COACNI'll book united flight 92 from San Francisco to Bostonfor you.
Can I help you with something else7Subject: NO THANK YOU (9)ATIS: Have a nice day.Table 1: Simulated ialogue involving a round trip flight reser-vation.Figure 3: The ticket facsimile displayed to the subject, as itappears after Question 6 in the simulated ialogue from Table 1.could be the flight or the fare.
The system assumes "it"means the entire noun phrase in the system's answer ("thecheapest round-trip fare for the earliest non-stop flights"),i.e., the fare along with the flight restrictions implied by thefor-phrase.
The system then fills in the appropriate slotsin the displayed ticket, including airline, flight number, de-parture and arrival times, far e category, and dollar amount.When the system displays the table this time, it says, "I'llshow it to you again," rather than the usual "This is the <farewith appropriate description>."
This represents an attemptto reduce the verbose nature of the computer responses, doneonly on the condition that the sentence about to be spoken isidentical to the one the computer just said.
Figure 3 shows areproduction of the ticket as it appears after Question 6 hasbeen processed.By examining the ticket, the system determines that thereare both a unique flight and a unique fare available for book-ing.
Had there only been flight information specified, thesystem would have taken the initiative to display the fareOptions for that flight on that date, and to ask the subject o"narrow down the fare to a single choice."
The system nowsays, "I'll book United flight 93 from Boston to San Franciscofor you," thus renaming "the earliest non-stop flight servingdinner.
"At this point, the system reminds the subject hat thereis a return leg, and also that the date, "Tuesday January 8"had been previously specified.
Even if the subject had notmentioned a return date, the system would still ask whetherit could help with the return flight.
Furthermore, when thesubject selects a restricted fare, the system warns them aboutthe earliest and latest dates they are allowed to return on,and rejects a return date whenever it is outside this range.The subject has two general options for a "yes" answer tothe question, "Can I help you with the return flight on Tues-day January 87" One is a simple, "Yes please," in which casethe system Constructs the appropriate restrictions based onthe ticket slots.
The other is a direct statement explicitly ask-ing for return flights, such as "Show me the return flights," or"I'd like to see flights returning on January ninth," in whichcase it inherits appropriate information from the semantic357frame in the history table, reversing source and destination.The system now shows the subject wo United flights fromSan Francisco to Boston, and asks the subject o select one.The subject selects flight 92, and the system is now ready toform a complete booking consisting of two flights tied to asingle fare, adding it to a list of previous bookings.
The sys-tem finally asks the subject, "Can I help you with somethingelse?"
and the subject concludes the dialogue.COLLECT ING D IALOGUE DATAWe have collected several thousand sentences from sub-jects using our system \[3\], but only about ten of the subjectswere allowed to use the system in booking mode.
Even forthese ten, we only asked them to do one booking scenario, inaddition to several non-booking scenarios.
In part, this wasdone because data collection at TI is done in non-bookingmode, and we wanted our data to be better matched to thelikely TI test data.
In addition, we were not confident hatour booking dialogue was sufficiently robust to be ready fordata collection until the last month or so.
We are encour-aged, however, by preliminary results of the booking scenar-ios.
While a subject almost never gets through a booking"without a hitch," we do find that subjects are able to spec-ify flights to be booked and successfully complete scenarios.With each data collection episode, we gain new insights onfaulty assumptions in the system.
A close coupling betweendata collection and system development should ultimatelyyield a robust dialogue model, which could possibly be viewedas an "artist's conception" of a useful system.In the appendix can be found an example of an actual di-alogue between one of our subjects and the computer.
Twiceduring the dialogue the computer made faulty assumptions,but the subject was able to recover from the error and ulti-mately achieve all the goals of the scenario.
Obviously, weare improving the system so that, next time around, theseerrors will not reccur.HELP ING THE RECOGNIZERThere are potentially many ways to use discourse and di-alogue to make the speech recognition task more successful.A simple step that we are taking is to restrict flight num-bers to be only those that have previously been displayed ina table.
Hypotheses with unlicensed flight numbers wouldbe pruned away.
This can be effective, since numbers arerelatively difficult to recognize correctly.Another feature that we have implemented has to do withease of recovery from a recognition error.
A system which re-members the history can become quite confused if it remem-bers false information from sentences that were incorrectlyrecognized.
We have therefore implemented a "scratch that"or "erase that" command which allows the system to com-pletely "forget" all information that was newly introduced inthe most recent sentence.
This includes erasing entries fromthe ticket display if the sentence requested a booking.
Thiscommand is distinct from a "clear history" command, whichhas a more global effect of erasing all records in the history.Finally, we hope to be able to use the dialogue state to dy-namically modify probabilities on arcs in the grammar.
Oncewe have a fully integrated recognizer, with parse probabili-ties incorporated into the scores of partial theories, perplex-ity can be reduced by rewarding paths that are supported bythe dialogue state.
For example, we could introduce a bonuson the <date> node; whenever the system asks the question,"What date will you be travelling on?"
We hope to be ableto explore some of tlhese ideas in the near future.SUMMARYThis paper describes our current model for discourse anddialogue within the ATIS system.
Heavy emphasis has beenplaced on the specific goal-directed task of making flightreservations.
This is in part because we believe that this par-ticular capability represents he most useful possible outcomeof our efforts in developing a system based on the Official Air-line Guide, potentially reaching a large population of userswith no prior expert training.
But in part this choice wasalso made because it offers a very well-defined goal with anumber of well-defined subgoals, ideally suited for exploringissues in interactive human/computer dialogues.
The task isnontrivial, but the potential pay-off is large, both in terms ofreducing the complexity of the recognition task and improv-ing user satisfaction.
We believe that it would be particularlyworthwhile to narrow down the ATIS system to be focusedonly on making flight reservations, discarding, for example,all references to ground transportation a d questions probingthe database for other types of information, such as capacityof aircraft, wingspan, etc.
If we can demonstrate a systemthat actually works with speech input and speech/text/tablesas output, then such a system should stand as a convincingdemonstration of the utility of spoken language systems.REFERENCES\[1\] Dahl, D. A. and C. N. Ball, "Reference Resolution in PUN-DIT," Chapter 8 in Logic and Logic Grammars for LanguageProcessing, P. Saint-Dizier and S. Szpakowicz, Ed., Ellis Hor-wood, New York, 1990.\[2\] Grosz, B. J. and C. L. Sidner, "Attention, Intentions, andthe Structure of Discourse," Computational Linguistics, Vol.12, No.
3,, PP.
175-204, July-September, 1986.\[3\] Polifroni, J., S. Seneff, V. W. Zue, "Collection of Sponta-neous Speech for the nTIS Domain and Comparative Analy-ses of Data Collected at MIT and TI," These Proceedings.\[4\] Zue, V., J.
Glass, D. Goddeau, D. Goodine, L. Hirschman, H.Leung, M. Phillips, J. Pofifroni, and S. Seneff, "Developmentand Preliminary Evaluation of the MIT ATIS System," TheseProceedings.\[5\] Zue, V. J.
Glass, D. Goodine, H. Leung, M. Phillips, J. Po-lifroni, and S. Seneff, "Preliminary ATIS Development atMIT," Proc.
Third DARPA Speech and Natural LanguageWorkshop, Hidden Valley, PA, June 1990.358APPENDIX: A dialogue between a subject and the computer, from our data collection files.SCEHARIO: You live in Philadelphia.
You need to make a business trip to San Francisco next week.
You havean old friend in Dallas and you'd therefore like to spend the afternoon in Dallas on your way to SanFrancisco.
You'd prefer to fly first class on American.
Find out what kind of aircraft you'll be flying on.SUBJECT: I'D LIKE TO FLY FROM PHILADELPHIA TO SAN FRANCISCOATIS: What date will you be travelling on?SUBJECT: NEXT TUESDAYATIS: These are the flishts from philadelphia to san francisco on Tuesday January 16(four flights)SUBJECT: DO ANY STOP IN DALLASATIS: I'm sorry I got stuck just before the words "STOP" "IN"SUBJECT: IS THERE A FLIGHT WHICH STOPS IN DALLASATIS: This is the with-stop flight from philadelphia to san francisco stopping in dallas on Tuesday January 16(one flight)SUBJECT: WHICH FLIGHTS GO FROM PHILADELPHIA TO SAN FRANCISCO ON MONDAYATIS: These are the flights from philadelphia to san francisco on Monday January 15(four flights)SUBJECT: WHICH FLIGHTS GO FROM PHILADELPHIA TO DALLAS ON TUESDAYATIS: These are the flights from philadelphia to dallas on Tuesday January 16(seven flights)SUBJECT: ARE THERE FLIGHTS FROM DALLAS TO SAN FRANCISCO OH TUESDAY AFTERNOON.ATIS: These are the flights from dallas to san francisco in the afternoon on Tuesday January 16(four flights)SUBJECT: I'D LIKE TO TAKE AMERICAN AIRLINES FLIGHT FOUR EIGHT SEVEN.
(MISUHDERSTANDING)ATIS: There are no american flights 487 from dallas to san francisco on Tuesday January 16I'm sorry, you'll have to make another selection.SUBJECT: I'D LIKE TO TAKE AMERICAN AIRLINES FLIGHT FOUR EIGHTY SEVEN FROM PHILADELPHIA TO DALLAS ON TUESDAY.ATIS: This is american flight 487 from philadelphia to dallas on Tuesday January 16(one flight)These are the fares for american flight 487 from philadelphia to dallas on Tuesday January 16(two fares)Please narrow down the fare Co a single choice.SUBJECT: FIRST CLASS ONE WAYATIS: This is the one-way fare for first class american flight 487 from philadelphia to dallas on Tuesday January 16(one fare)I'll book american flight 487 from philadelph~ ~ to dallas fort-worth for you.Can I help you with something else?SUBJECT: I'D LIKE TO TAKE AMERICAN AIRLINES FLIGHT EIGHT THIRTEEN FROM DALLAS TO SAN FRANCISCO ON TUESDAY.ATIS: This is american flight 813 from dallas to san francisco on Tuesday January 16(one flight)These are the fares for american flight 813 from dallas to san francisco on Tuesday January 16(tWo fares)Please narrow down the fare to a single choice.SUBJECT: FIRST CLASS ONE WAYATIS: This is the one-way fare for first class american flight 813 from dallas to san francisco on Tuesday January 16(one fare)I'll book american flight 813 from dallas fort-worth to san-francisco for you.Can I help you with something else?
\SUBJECT: I'D LIKE TO FLY FROM SAN FRANCISCO BACK TO PHILADELPHIA OH THURSDAY.ATIS: These are the flights from san francisco to philadelphia on Thursday January 18(four flishts)SUBJECT: COULD YOU PLEASE BOOK AMERICAH AIRLINES ONE OH SEVEN FOUR FIRST CLASSATIS: This is first class american flight 1074 from san francisco to philadelphia on Thursday January 18(one flight)One-way or round-trip?SUBJECT: ONE WAYATIS: This is first class one-way american flight 1074 from san francisco to philadelphia on Thursday January 18(one flight)I'll book american flight 1074 from oakland to philadelphia for you.You have a roand trip fare.
(MISUNDERSTANDING)C~n I help you with the return flight?SUBJECT: WHAT KIND OF AIRCRAFT IS THATATIS: This is aircraft for first class one-way american flight I074 from san francisco to philadelphia on Thursday January 18(one entry)SUBJECT: END SCENARIO EIGHT359
