A Corpus -Based  Grammar  Tutorfor Educat ion  in Language and Speech  Techno logyLars Borin and Mats Dahll6fDepartment of Linguistics, Uppsala University,Box 527, SE-751 20 UPPSALA, SWEDENE-mail: Lars.
Bor in~l ing.
uu.
se, Nats.
Dahllof@ling.
uu.
seAbstractWe describe work in progress on acorpus-based tutoring system for edu-cat, ion in traditional and formal gram-mar.
It is mainly intended for lan-guage and speech technology studentsand gives them the opportunity to learngrammar and grammatical nalysis fromauthentic language material.
The ex-ercises offered by the system are basedon pedagogically adapted versions of for-malisms and tools that are likely to beof relevance to the students also later intheir professional life.
The system willbe continuously evaluated in university-level courses, both in order to assess itseffectiveness a a learning aid and to pro-vide guidance in its further development.1 BackgroundIn this paper, we describe work in progress ona corpus-based grammar tutor.
The inspirationcomes from the authors' extensive xperience ofteaching traditional and formal grammar to stu-dents specialising in computational linguistics andlanguage ngineering or- - to use the terminologyadopted for this workshop--Language and SpeechTechnology (LST).
This practical teaching expe-rience, from both elementary and advanced uni-versity courses, provided the original impetus toundertake the work described here.
In particu-lar, we were motivated by the following consider-ations.
We wished:?
to raise the generally poor level of grammarskills in our students, in an economic realitywhere tile resources to provide individual in-struction are conspicuously acking;?
to base the grammar learning on realisticdata.
both as to the kind of language anal-ysed a.nd as to the formalism used;?
to separate for didactical purposes two con-ceptually, but not practically, independentcomponents of a natural language grammat-ical description, viz.
grammar and lexicon,without reducing either component to trivi-ality;?
to go from the simple to the complex in termsof the expressiveness of the formalism;?
to support a hypothetico-deductive learningstyle "learning by inquiry" (McArthur et al1995) based on intrinsic feedback (Laurillard1996).1.1 LST  s tudents '  g rammar  skillsGrammar, which used to play a leading role inteaching and learning languages, has been rel-egated to a fairly subordinate position in con-temporary language pedagogy.
Instead, lan-guage learning theorists currently favour so-calledcommunicative approaches to language teaching.While it is true that most researchers in the fieldof second language learning (e.g.
Ellis 1985; Light-bown and Spada 1993) recognise learning situa-tions and learner types for which grammar mayprove the most effective means of learning at leastsome aspects of a second or foreign language (see,e.g., Batstone 1994), even here it is not alwaysexplicit grammatical reasoning that the authorshave in mind (see Underwood 1984).
Theoreticalinsight in grammar is, on the whole, not regardedas very useful for language learners.We do not wish to take issue with the stand-point that foreign or second languages in generalare better learned through conversational interac-tion than through the study of grammar.
It ishowever obvious that the subject (both morphol-ogy and syntax) is a matter of vital importancefor LST  (and linguistics) students.
They  con-sequently need a solid grasp of the fundamenta lgrammat ica l  and lexicological concepts and theability to apply them to the analysis of texts.They also need to be able to use grammar for-malisms to state general grammatical principles.From our point of view, the ideological shift inlanguage pedagggy has brought with it the unfor-tunate consequence that the students who enrollon our courses generally know less grammar thanused to be the case.
This in turn has forced ourdepartment to ~estructure both the language ngi-neering and general inguistics curricula, throughthe addition of courses covering elementary gram-matical concepts and techniques, knowledge ofwhich we earlier could take for granted in our stu-dents.Grammatica!
analysis is a skill which--likemany other sldlls--is best acquired and honedthrough its application to concrete reality, e.g.
towords and sentences as found in authentic con-texts, and by :writing grammatical descriptionsof (fragments of) natural language.
At the sametime, practical exercise sessions with a tutor areamong the more costly modes of teaching.
This isa pedagogical problem in times when many edu-cational institutions experience financial cutbacksand the number of teacher hours per student de-crease.Much would thus be gained if we could offerthe students good self-study materials for gram-mar practice, good in the sense that they wouldbe pedagogically sound, but also in the sense thatthey actually would be used by the students.
Be-cause of this, we are interested in investigatinghow computer-based grammar instruction mate-rial should be designed.
For theoretical inspira-tion we have ~urned to the findings of the re-search in Computer-Assisted Language Learning(CALL).
The reasons for this is that both CALLand our prese~!t aims are about computer-basedlanguage-related training and that CALL is alarge and growing research area.
1 And, indeed,as we will se below, many of the insights of theCALL community seem to be directly relevant othe case at hand.2 Pedagog ica l  cons iderat ionsThere are some pedagogical points that we wish toraise in connection with the design of a grammartutoring system ibr LST students, and which wefeel are inadequately addressed in existing systemsof this kind.
'This connection is natural to us also because weoffer CALL as one of the specialisations in languageengineering.2.1 The  impor tance  of  authent ic i tySeveral pedagogical systems support training informal grammar writing (Gazdar and Mellish1989; Antworth 1990; von Klopp and Dalton 1996;McConnel 1995; Beskow et al 1997; see alsoRogers 1998).
In most cases these systems onlydeal with grammars from an abstract point ofview, without calling attention to the issue howwell a grammar accounts for real language.
Thesesystems do however offer the students valuable fa-cilities, e.g.
allow them to evaluate a grammar byusing it to parse arbitrary strings or for randomgeneration.
For our purposes, these systems are"realistic" in one sense, namely in that they letstudents express linguistic generalisations in for-malisms which are similar to those actually usedby language technologists.In another sense, however, systems of this kindare spiritually kindred to the "intuitive" methodin generative grammar, rather than to the goals oflanguage ngineering.
The issue of how relevantdata is to be found and used is normally left out ofthe picture altogether.
This is a major pedagog-ical defect as the step from understanding gram-mars as formal systems to understanding them astheories about existing language use is both cru-cial and intellectually demanding.
It is our expe-rience that this is one of the most difficult aspectsof education in formal grammar.
We consequentlythink that there is much to gain by the use of atutoring system that helps the student o see howa grammar relates to a morphosyntactically anno-tated corpus.
The aim of the work described hereis to develop a system which will introduce gram-mar writing as an empirical process with the aimof accounting for authentic language.2.2 D iv ide  and conquerThe use of a tagged corpus as a testing ground forfledgling formal grammar writers confers anotheradvantage which is often absent from the systemsreferred to above.
Since the aim of these systemsis to train the students in writing syntactic or mor-phological rules, the lexicon is more often than notreduced to the absolute min imum--both in thenumber and in the complexity of entries--neededto illustrate how the syntactic or morphologicalrule system works.
This is indeed a problem, butit can not be solved simply by urging the studentsto compile extensive lexicons.
On the contrary,there is a clear pedagogical point to the separationof the grammar from the lexicon for training pur-poses.
Generally, it is a good principle to presentnew material a little at a time, in conceptuallycoherent portions.
Otherwise, the students mayget confused, and as a consequence frustrated.
Inthis case, you would like to offer them a ready-made lexicon which should be flexible enough toaccommodate a number of grammar formalisms (a"poly-theoretic" lexicon).
A morphosyntacticallytagged corpus can be made to stand in for such alexicon, at least in some respects; in addition tothe purely linguistic information contained in it,there is also (implicit) information about frequen-cies of occurence in authentic language, about col-locations, etc.
Even if there is lexical informationwhich will not, as a rule, be found even in a fairlyrichly annotated corpus (e.g.
valency informationand semantics), the information that you can findthere still constitutes a vast improvement over thetypical lexicons of grammar training systems.Conversely, the tagged corpus makes an excel-lent basis for exercises aiming at learning to iden-tif:y the "atoms" of grammar, i.e.
parts of speechand inflectional categories, in a realistic context.There are some tutoring systems for this purpose(e.g.
Qiao 1996), including one (Mats 1999) thatwe have been trying out in our department re-cently.
McEnery et al (1995) compare anothersuch system (the one described by McEnery etal.
1997) to traditional human teaching in a con-trolled evaluation procedure, and reach the con-clusion that tile corpus-based computer-assistedmethod yields slightly better learning results.2.3 F i rs t  th ings  f irstIt, is a good pedagogical principle not only to di-vide that which is to be learned into manageablechunks, but also to proceed from simpler to morecomplex knowledge.
Ideally, the tutoring programshould impose exactly this ordering for those stu-dents that need it (see Lanrillard 1996).
The mor-phosyntacially annotated corpus puts at the stu-dents' disposal a "lexicon" which will tag along,as it were, as?
they learn to identify not only which part ofspeech a certain text word is, but also whichinflectional information should be associatedwith it;?
their grammars evolve in terminal complex-ity from simple phrase structure rules withatomic terminal categories, to unification-based grammars with feature structures en-coding the full morphosyntactic informationfor each lexical unit;?
their grammars evolve in nonterminal com-plexity, enabling them to analyse increasinglylarger portions of the corpus.2.4 Learn ing  by  inqu i ryA corpus-based grammar tutor shares withcorpus-based CALL in general the trait of be-ing eminently suited for hypothetico-deductive,problem- and data-driven learning ("serendipitylearning"; cf.
Flowerdew 1996, or "learning byinquiry"; see McArthur et al 1995).
By work-ing with the program the student will develop hisskills in evaluating a grammar as an account ofthe syntactic phenomena found in a corpus.
Thesystem will support a process of thinking thathighlights important aspects of scientific reason-ing.
Abstract concepts uch as theory, data, pre-cision, recall and prediction are illustrated in afairly concrete manner, as are (other) basic as-pects of formal grammar.3 The  grammar  tu torWith these aims in mind, we are developinga corpus-based grammar tutoring system.
Weare aiming at first for a system with limitedfunctionality--both in order not to overreach our-selves and to facilitate evaluation--which will un-dergo several rounds of formative evaluation (seeLaurillard 1996).The system will provide a learning context hatin important respects is a realistic one.
The stu-dents will work with authentic linguistic material,in the form of a tagged corpus, and use peda-gogically adapted versions of formalisms and toolsthat they will be using also later in their profes-sional life.
This is similar in spirit to the approachtaken by McArthur et al (1995), who argue per-suasively for the use in education of so-called ES-SCOTS (Educational Support Systems based onCommercial-Off-The-Shelf software).
They reportboth an unusually short system development timeand good learning results (in an experiment wherethey adapted a commercial Geographic Intbrma-tion System (GIS) for use in an educational set-ting).The system will be used and evaluated in thecontext of one or more of our LST and linguisticscourses (formal syntax and computational syntax,at least, possibly also basics of grammar),  startingin the autumn term of 1999.
The evaluation willnot be carried out as a test group-control groupsetup.
This is mainly for practical reasons, ourstudent population being too small for this kind ofexperiment.
2 Instead, we will use in-class observa-2There are also theoretical motivations for this, asthere have been serious concerns voiced in the litera-ture about the meaningfulness of such "experiments"in the context of computer-assisted l arning (see Borin1998).Ition, questionnaires and interviews with the stu-dents and teachers, and logging of student activ-ity as our main evaluation instruments.
The eval-uations will, hopefully, yield two kinds of result.Firstly, we expect o learn something about the ef-fectiveness of using a corpus-based computerisedgrammar tutor i and, secondly, we will see whatshould be changed and what added in the system(this is what the "formative" part is about).3.1 Corpus  and  exerc ise  typesAs just stated, any annotated corpus could formthe basis of the grammar tutor.
As our point \]of departure, we have chosen to use a Swedishone-million-woad balanced corpus, the StockholmU'me,~ Corpus (SUC; Ejerhed and K~llgren 1997).
3For the first version, there are two grammar ex-ercise types under development: The most basicexercise is to assign part of speech and morphosyn-tactic features to words in the corpus.
This exer-cise exists in a preliminary version (Mats 1999),which has been used at our department with en-couraging results.
4The second step is the formulation of grammat-ical rules and applying them to the corpus withthe help of a built-in parser.
Random analysisand generation with the same grammar will alsobe supported.
The system will eventually supporttwo formalisms, plain context-free grammar and afeature-structure based one.The parser helps the student o evaluate his/hergrammar by making clear which analyses thegrammar assigns or fails to assign to the sub-strings of the corpus.
One grammatical category(non-terminal symbol) is selected as the one be-ing of particular interest for the moment.
Theparser locates all strings that are generated as in-stances of that category.
The corpus provides thelexical nodes, i.e.
the text word-category pairings.By inspecting these analyses the student will bein a position to decide, with respect o a certain:tSUC was compiled and semi-automatically taggedm the years 1989-1996 (Ejerhed and K?11gren 1997).The corpus follows the Brown Corpus format: Thereare 5(}0 text chunks of approximately 2000 words each,with a genre distribution similar to that in other bal-anced corpora, although only the written standardlanguage is represented.
A corrected second versionof the corpus is due to appear before the end of 1999.
'~It has been tried out during the spring term of1999 with a group of computer science students tak-ing a course in language ngineering in our depart-meat (Mats 1999).
The students were largely positivein their evaluation of the exercises, but they also sug-gested some improvements in the user interface and inthe way the material was presented to the user.
Wewill incorporate some of these suggestions in the nextversion of the exercise.category, to what extent the grammar accountsfor the instances of the category and to what ex-tent it overgenerates.
The tokens found may belisted (with context) or graphically indicated inthe running corpus text.
This exercise will encour-age the student o evaluate a grammar in terms ofits precision and recall with respect o the selectedcategory.
The student's own grammar-related in-tuitions are, of course, important in this kind ofcorpus-oriented setting, as only the words of thecorpus are tagged (it is not a treebank).
In otherwords, there is no predefined right answer avail-able (but see below).
The evaluation of the stu-dent's performance is rather based on his/her ownjudgments.
This is an example of so-called intrin-sic/cedback, which is the best kind of feedback,according to several CALL practitioners; ee Lau-rillard 1996.
Nevertheless, the system will ensurethat the application of these intuitions and thereasoning about the grammar will be supportedby considerations of concrete data.The tagged corpus may also be used for randomgeneration.
The text word-category pairings de-fine a lexicon which generates expressions of var-ious categories in conjunction with the student'sgrammar.
In this way the lexical material of thecorpus and the grammar are used to make gram-maticality predictions.
The generation exercisewill mainly throw light upon how overgenerationproblems are discovered and dealt with.The system gives some feedback about the sta-tus of the grammar.
Warnings are issued if somecategory is left undefined.
The number of rules,categories, and features used is also reported.This is intended to alert the student to the issueof how simple/complicated the grammar is, whichis important as simplicity is one of the most im-portant aspects of theoretical adequacy.3.2 Par ts  of  speech  and  grammarsThe tagging provides the link between the stu-dent's grammar and the given corpus data.
It istherefore crucial which categories are used.
As theempirical material is a selection from a particularcorpus, the tags visible to the student must bederivable from the tagset used in that corpus.
Ofcourse, these tags may be mapped onto the tagsof the tutoring system in various ways.The system comes with two predefined map-pings from corpus tags to grammar categories, tocontext-free categories on the one hand and to fea-ture structures on the other.
These mappings aredefined in a file and can be revised by the teacher.Manipulation of this mapping can, of course, alsobe a part of more advanced exercises for the stu-dent.As mentioned, the system will support twogrammar fbrmalisms--corresponding to the twotagset mappings just mentioned--pure context-free grammar and a feature-structure formalism,the latter in the style of PATR-II  (Shieber 1986).A context-free grammar is (by definition) usedtogether with a fiat taxonomy of lexical categories.As the default option, the program operates withsuch an inventory of categories which is related tothe traditional part-of-speech system, but morefine-grained.The feature structure tags used with the PATR-II-style formalism correspond to the full informa-tion in the tagset used, i.e., they contain primarilyinflectional information, in addition to the syntac-tic category.
This means that the corpus mainlywill support constraint-based accounts of agree-ment phenomena.
However, the system as suchwill allow descriptions dealing with arbitrary as-pects of grammar.3.3 ImplementationAs the implementation language we have cho-sen Java, primarily because of its platform-independence and because it is an excellent lan-guage for rapid prototyping of applications withsophisticated GUIs, but also to some extent be-cause of its association with the Internet and theWWW (see below).3.4 P lanned deve lopmentsExplicit evaluation of the students' actual use ofthe system will, needless to say, provide the mainindication of how the system should be improvedand extended.
The implemented exercises havenevertheless been designed to fit into a schemeof logically linked exercises, which step-wise leadthe students on to more complicated and difficulttasks.The present system could in a natural way beextended to deal with a corpus which is preanal-ysed also with regard to constituent structure.
Aless advanced task for the student would then beto write a grammar that agrees with the givenstructure(s).
The system would provide detailedfeedback evaluating the ability of the grammar togenerate the given syntactic structures.
This ex-ercise would illustrate the purely formal aspect ofgrammar tbrmulation.
It could preferably be usedas a preparation for the exercises relying on intrin-sic feedback from the student's own grammaticalintuitions.Another valuable addition to the system wouldbe a module that encourages the student o organ-ise the empirical evaluation in a systematic way.The compilation and use of test suites provide anoften used and simple method with this advan-tage.
A test suite for a certain category is a listof known instances of the category and a list ofstrings that are known not to belong to the cat-egory.
A test suite thus provides a collection ofdata against which a grammar may be automati-cally evaluated.
The system reports the number ofpositive instances the grammar fails to account forand the number of overgenerations.
This exerciseshows how the empirical evaluation of a grammarmay proceed in a more systematic fashion and en-courages trial and error experimentation with thegrammar formulation.Another dimension of difficulty is given by thetwo grammar formalisms.
The basic idea is thatthe system should be a pedagogically organisedtoolbox for grammar formulation and corpus in-spection (taking the ideas presented in Lager 1995one step further) and this idea makes it natu-ral to integrate various extensions into the sys-tem, such as new inspection tools and other gram-mar formalisms and parsers, e.g.
that describedin DahllSf 1999 or finite-state formalisms for syn-tax (e.g.
Karlsson et al 1994) or morphology (e.g.Karttunen 1993).In the context of feature-structure grammars,a unification-failure xplanation generator is use-ful.
This component indicates which feature mis-match(es) made it impossible for the grammarrules to assemble a certain phrase.
A simpleversion of this facility is implemented in DahllSf(1999) and it has turned out to be very usefulduring grammar construction.
Pedagogically de-veloped versions of it would likely be valuable forstudents (and professionals) as it often is verydifficult to see how feature~assignments i teractin a constraint-based grammar and to locate thesource of unwanted unification failures.A longer-term goal would be to provide the sys-tem with intelligent error analysis and help facili-ties.
This is an exciting but largely unexplored re-search topic in CALL, known as Intelligent CALL,or ICALL, which draws on research in the fieldsof Artificial Intelligence and Computational Lin-guistics.It would also be desirable to develop some kindof authoring interface to the system.
Direct ma-nipulation of the system's Java code would pre-suppose fairly advanced programming skills andthis would presumably make it impossible fbrmost teachers to adapt the system to new learn-ing tasks.
An authoring facility, allowing users todefine new exercises in a suitable authoring lan-guage, would consequently extend the usefulnessof the system.
Such an interface can also be givena more direct pedagogical motivation: There areCALL applications where students step into tilerole of the teacher, as it were, designing exercises(as if) for their fellow students, and learning aboutthe subject matter in doing so (see Borin 1998).In its first version, the grammar tutor will, forpractical reasons, be accompanied by written in-structions and conventional coursebooks.
We dohowever intend to integrate this information in thesystem.
53.5 Benef i t s  f rom In ternet  useAs we mentioned above, our choice of Java asthe programming language for the grammar tu-tor was only partially motivated by its status asth.e programming language of the World WideWeb.
Rather, we chose it because it is platform-independent and because the GUI capabilities weneed are built into the language.
~ Thus, the ap-plication was not built with the WWW in mind,although it is fully feasible to use it over the In-ternet.
In this case, a possible division of labourcould be implemented, where the exercise pro-grams are Java applets locally executed in thestudent's computer, while the corpus resides in aserver-side database.From the experiences of the CALL community,we know that the Internet can bring two distinctlydifferent kinds of pedagogical added value to alearning situation:1.
In this case, the pedagogical value is only inci-dental upon the general advantage of a client-server setUp, i.e.
that it is easier to main-tain and upgrade an application if you onlyhave to do, it once and in one location.
For aCALL application, this means that data andexercises probably can be updated more oftenthan otherwise would have been the case.2.
Tlle other case turns around using theInternet as a widely accessible time-of-day-indepdndent communications network.Thanks to the Internet, students and teach-ers, who may be geographically far apart,can collaborate both asynchronously andsynchronously in creating an optimal vir-tual learning environment for some types ofr'This matter may deserve some deliberation.Benyon et al (1997) point out that turning writtencoursebooks directly into hypertext rarely yields goodresults, and m Nygren (1996), on the basis of practi-cal experiences ofmedical information systems, we arewarned that paper-based information often loses in lu-(:idity and navigability as a result of it being pouredinto a computer.
(~The A~VT and JFC class libraries.learning tasks (Pennington 1996; Warschauer1996; Levy 1997; Borin 1998).The grammar tutoring system has been de-signed with self-study in mind, so that it is hardto see how it could benefit pedagogically otherthan incidentally--i.e, as in (1) above-- from beingmade into an Internet application.
On the otherhand, positive learning effects have been notedin situations where students cooperate in fi'ontof the computer to do the exercises in a CALLprogram designed for self-study (Chapelle et al1996).
This points to the possibility of designingfor a more central role of the Internet even in aprogram such as the one discussed here.
Thus, forinstance, grammatical analysis could be carriedout collaboratively (or competitively) by severalstudents over the network.4 Conc lus ions  and  fu ture  prospectsSumming up, we propose to let LST students learngrammatical analysis and formal grammar writ-ing by practicing these skills with the help of atutoring system which provides a learning envi-ronment which in many ways is a realistic one,both as regards data and formal methods.
Thegrammar exercises will have an empirical connec-tion to authentic language in the form of a taggedcorpus; the formalisms and tools will be of thesame kind as those used in "real-life" LST; andgrammar formulation will be presented as a caseof hypothetico-deductive problem solving.The pedagogical daptation consists, as of now,in the following: (1) arranging the learning situa-tion so that the students' practice at each momentis focussed on one component of the subject whichis to be learned, while keeping the other compo-nents as realistic as possible; (2) going from tilesimple to the complex; (3) making sure that thereis adequate feedback (preferrably intrinsic) at alltimes.
Further, we plan to evaluate the grammartutor continuously in actual LST and linguisticscourses in our department, both in order to assessits effectiveness as a learning aid and to give usguidance in its further development.ReferencesAntworth, Evan L. 1990.
PC-KIMMO: A two-level processor for morphological analysis.Occasional Publications in Academic Corn-pitting 16.
Dallas: Summer Institute of Lin-guistics.Batstone, Rob 1994.
Grammar.
Oxford: Ox-ford University Press.Benyon, David, Debbie Stone and MarkWoodroffe 1997.
Experience with develop-ing multimedia courseware for the WorldWide Web: the need for better tools andclear pedagogy.
International Journal ofHuman-Computer Studies, 47 (1), 197-218.Beskow, Bj6rn, Torbj6rn Lager and JoakimNivre 1997.
Linguistic Instruments: Gram-mar Laboratories for the Macintosh.http ://www.
l ing.
gu.
se /~ l i / .Borin, Lars 1998.
Datorst6dd spr~tkinl~irning.Dept.
of Linguistics, Uppsala University.MS.Chapelle, Carol, Joan Jamieson and YuhsoonPark 1996.
Second language classroom re-search traditions: How does CALL fit?
InThe Power of CALL, ed.
by Martha C. Pen-nington.
Houston, Texas: Athelstan, 33-53.Dahll6f, Mats 1999.
Flexible typed featurestructure grammar.
Dept.
of Linguistics,Uppsala University.
MS.http : / / s tp .
l ing .uu.
se /~matsd / f t f  sg/.Eierhed, Eva and Gunnel KEllgren 1997.
Stock-holm Ume?
Corpus Version 1.0, SUC 1.0.Dept.
of Linguistics, Ume?
University.Ellis, Rod 1985.
Understanding Second Lan-guage Acquisition.
Oxford: Oxford Univer-sity Press.Flowerdew, John 1996.
Concordancing in lan-guage learning.
In The Power of CALL, ed.by Martha C. Pennington.
Houston, Texas:Athelstan, 97-113.Gazdar, Gerald and Chris Mellish 1989.Natural Language Processing in LISP.Wokingham: Addison-Wesley.Karlsson, Fred, Atro Voutilainen, JuhaHeikkil'~ and Arto Anttila (eds) 1994.
Con-straint Grammar: A Language-IndependentFormalism for Parsing Unrestricted Text.Berlin: Mouton de Gruyter.Karttunen, Lauri 1993.
Finite-State LexiconCompiler.
Technical Report ISTL-NLTT-1993-04-02.
Xerox PARC, Palo Alto,California.Lager, TorbjSrn 1995.
A Logical Approach toComputational Corpus Linguistics.
Diss.Dept.
of Linguistics, G6teborg University.Laurillard, Diana 1996.
The TELL Consortium- formative valuation report, ht tp  ://www.hull.
ac.
uk/ct i/f ormeval, doc.Levy, Michael 1997.
Computer-Assisted Lan-guage Learning.
Oxford: Clarendon Press.Lightbown, Patsy M. and Nina Spada 1993.How Languages are Learned.
Oxford: OxfordUniversity Press.Mats, Erik 1999.
Spr?kt?get: en webbaseradprogramvara fSr datorstSdd spr?kinl~rning.MS.
http : / / s tp .
l ing.
uu.
se/~er?km/spraktaget/ .McArthur, David, Matthew W. Lewis andMiriam Bishay 1995.
ESSCOTS for learning:Transforming commercial software into pow-erful educational tools.
Journal of ArtificialIntelligence in Education, 6, 3-34.McConnel, Stephen 1995.
PC-PATR ReferenceManual.
http ://www.
sil.
org/pcpatr/manual/pcpatr, html.McEnery, Tony, John Paul Baker and AndrewWilson 1995.
A statistical analysis of cor-pus based computer vs. traditional humanteaching methods of part of speech analy-sis.
Computer-Assisted Language Learning,8, 259-274.McEnery, Tony, John Paul Baker and JohnHutchinson 1997.
A corpus-based gram-mar tutor.
In Corpus Annotation, ed.
byRoger Garside, Geoffrey Leech and AnthonyMcEnery.
London: Longman, 209-219.Nygren, Else 1996.
From Paper to ComputerScreen.
Human Information Processing andUser Interface Design.
Uppsala: Acta Uni-versitatis Upsaliensis.Pennington, Martha C. 1996.
The power of thecomputer in language education.
In ThePower of CALL, ed.
by Martha Pennington.Houston, Texas: Athelstan, 1-14.Qiao, Hong Liang 1996.
Processing the Lan-caster Parsed Corpus as data for a CALL pro-gram: The design and implementation of theWord Class Drills vl.0.
Computer AssistedLanguage Learning, 9, 163-180.Rogers, Henry 1998.
Education.
In Using Com-puters in Linguistics.
A Practical Guide, ed.by John M. Lawler and Helen Aristar Dry.London: Routledge, 62-100.Shieber, Stuart 1986.
An Introduction toUnification-Based Approaches to Grammar.Lecture Notes No.
4.
Stanford, California:CSLI.Underwood, John H. 1984.
Linguistics, Com-puters and the Language Teacher.
ACo'mmu'nicative Approach.
Rowley, Mas-sachusetts: Newbury House Publishers.von Klopp, Ana and Chris Dalton 1996.Interactive teaching material for the WorldWide Web: A linguistics tutor written inJ~tva.
Department of Linguistics ResearchReports UWB-LING/RR96-01.
Universityof Wales, Bangor.http ://www.
bangor, ac.
uk/ling/staf f /avk/icalm, htmlWarschauer~ Mark 1996.
Computer-assistedlanguage learning: An introduction.
InMultimedia Language Teaching, ed.
by S.Fotos.
Tokyo: Logos International, 3-20.WWW documents as accessed on April 19th,1999.
