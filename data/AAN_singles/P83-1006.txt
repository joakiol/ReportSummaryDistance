A Modal Temporal Logic for Reasoning about ChangeEric MaysDepartment of Computer and Information ScienceMoore School of Electrical Engineerlng/D2University of PennsylvaniaPhiladelphia, PA 19104ABSTRACTWe examine several behaviors for querysystems that become possible with the ability torepresent and reason about change in data bases:queries about possible futures, queries aboutalternative histories, and offers of monitors asresponses to queries.
A modal temporal logic isdeveloped for this purpose.
A completion axiom forhistory is given and modell ing strategies aregiven by example.I INTRODUCTIONIn this paper we present a modal temporallogic that has been developed for reasoning aboutchange in data bases.
The basic motivation is asfollows.
A data base contains information aboutthe world: as the world changes, so does the database -- probably maintaining some description ofwhat the world was like before the change tookplace.
Moreover, if the world is constrained Inthe ways it can change, so is the dat~ base.
Weare motivated by the benefits to be gained bybeing able to represent those constraints and usethem to reason about the possible states of a database .It is generally accepted that a naturallanguage query system often needs to provide morethan just the literal answer to a question.
Forexample, \[Kaplan 82I presents methods forcorrecting a questionerls misconceptions (asreflected in a query) about the contents of a database, as well as providing additional informationin suvport of the literal answer to a query, Byenriching the data base model, Kaplan's work oncorrecting misconceptions was extended in \[Mays801 to distinquish between misconceptions aboutdata base structure and data base contents.
Ineither case, however, the model was a static one.By incorporating a model of the data base in whicha dynamic view is allowed, answers to questionscan include an offer to monitor for some conditionwhich might possibly occur in the future.
Thefollowing is an example:U: "Is the Kitty Hawk in Norfolk?
"S: "No, shall I let you know when she is?
"IThJs work is partially supported by a grantfrom the Natlonal Science Foundation, NSF-MCS81-07290.But just having a dynamic view is not adequate, itis necessary--r-y--~at the dynamic view correspond tothe possible evolution of the world that ismodelled.
Otherwise, behaviors such as thefollowing might arise:U: "Is New York less than 50 miles fromPhiladelphia?
"S: "No, shall I let you know when it is?
"An offer of a monitor is said to be competent onlyif the conditlon to be monitored can possiblyoccur.
Thus, in the latter example the offer isnot competent, while in the former it is.
Thispaper is concerned with developing a lo~ic forreasoning about change in data bases, andassessing the impact of that capability on thebehavior of question answering systems.
Thegeneral area of extended interaction in data basesystems is discussed in \[WJMM 831.As just pointed out, the ability to representand reason about change in data bases affects therange and quality of responses that may beproduced by a query system.
Reasoning about priorpossibllty admits a class of queries dealing withthe future possibil ity of some event or state ofaffairs at some time in the past.
These querieshave the general form:"Could it have been the case that p?
"This class of queries will be termedcounterhistoricals in an attempt to draw someparallel with counterfactuals.
The futurecorrelate of counterhistoricals, which one mightcall futurities, are of the form:"Can it be the case that p?"i.e.
in the sense of:"Might it ever be the case that p?
"The most interesting aspect of this form ofquestion is that it admits the ability for a querysystem to offer a monitor as a response to aquestion for relevant information the system maybecome aware of at some future time.
A querysystem can only competently offer such monitorswhen it has this ability, since otherwise itcannot determine if the monitor may ever besatisfied.II REPRESENTATIONWe have chosen to use a modal temporal logic.There are two basic requirements which lead ustoward logic and away from methods such as Petrinets.
F~rst, it may be desirable to assert thatsome proposition is the case without necessarily38specifying exactly when.
Secondly, our knowledgemay be disjunctive.
That is, our knowledge oftemporal situations may be incomplete andindefinite, and as others have argued \[Moore 821(as a recent example), methods based on formallogic (though usually flrst-order) are the onlyones that have so far been capable of dealing withproblems of this nature.In contrast to flrst-order representations,modal temporal logic makes a fundamentaldistinction between variabil ity over time (asexpressed by modal temporal operators) andvariability in a state (as expressed usingpropositional or flrst-order languages).
Modaltemporal logic also reflects the temporallyindefinite structure of language in a way that ismore natural than the commaon method of usingstate variables and constants in a flrst-orderlogic.
On the side of flrst-order logic, however,is expressive power that is not necessarilypresent in modal temporal logic.
(But, see \[K amp68\] and \[GPSS 80\] for comparisons of theexpressive power of modal temporal logics withflrst-order theories.
)There are several possible structures thatone could reasonably imagine over states in time.The one we have in mind is discrete, backwardslinear, and infinite in both directions.
We allowbranching into the future to capture the idea thatit is open, but the past is determined.
Due tothe nature of the intended application, we alsohave assumed that time is discrete.
It should bestressed that this decision Is not motivated bythe belief that time itself is discrete, butrather by the data base application.
Furthermore,in cases where it is necessary for the temporalstructure to be dense or continuous, there is noimmediate argument against modal temporal logic ingeneral.
(That Is, one could develop a modaltemporal logic that models a continuous structureof time \[RU 71\].
)A modal temporal structure is composed of aset oP states.
Each state is a set of propositionswhich are true of that state.
States are relatedby an immediate predecessor-successor relation.
Abranch of time is defined by taking some possiblesequence of states accessible over this relationfrom a given state.
The future fragment of thelogic is based on the unified branching temporallogic of \[BMP 81\], which introduces branches andquantifies over them to make it possible todescribe properties on some or all futures.
Thlsis extended with an "until" operator (as in \[K amp68\], \[GPSS 801) and a past fragment.
Since thestructures are backwards linear the existentialand universal operators are merged to form alinear past fragment.A.
SyntaxFormulas are composed from the symbols,- A set ~of  atomic propositions.Boolean connectives: v, -.Temporal operators: AX (every next), EX(some next), AG (every always), EG (somealways), AF (every eventually), EF (someeventually), AU (every until), EU (someuntil), L (immediately past), P (sometimepast), H (always past), S (since).
AU, EU,and S are binary; the others are unary.For the operators composed of two symbols,the first symbol ("A" or "E") can bethought of as quantifying universally orexistentially over branches in time; thesecond symbol as quantifying over stateswithin the branch.
Since branching is notallowed into the past, past operators haveonly one symbol.using the rules,- If p~,  then p is a formula.- If p and q are formulas, then (-p),(p v q) are formulas.- If m is a unary temporal operator and p isa formula, then (m p) is a formula.- If m is a binary temporal operator and pand q are formulas, then (p m q) is aformula.Parentheses will occasionally be omitted, and &,-->, 4--> used as abbreviations.
(In the nextsection: "Ax" should be read as the universalquantifier over the variable x, "Ex" as theexistential quantifier over x.)B.
SemanticsA temporal structure T is a triple (S ,~,  R)where,- S is a set of states.-~'~:(S -+ 2 ~) is an assignment of atomicpropositions to states.- R C (S x S) is an accessibil ity relationon--S. Each state is required to have atleast one successor and exactly onepredecessor -- i.e., As (Et (sRt) & E!t(tRs)).Define b to be an s-branchb = (..., S_l , S=So, Sl, ...) such that siRsi+ 1.The relation ">" is the transitive closure ofR.The satisfaction of a formula p at a state sin a structure T, <T,s> I = p, is defined asfollows :<T,s>I = p iff pG~s) ,  for p~<T,s>l = -p iff not <T,s>i=p<T,s>l = p v q Iff <T,s>J=p or <T,s>l=q39<T,s>L = AGp iff AbAt((t~b & t>s) -9 <T,t>l=p)(p is true at every time of every future)<T,s>\[= AFp Iff AbEt(tfb & t>s & <T,t>\[=p)(p is true at some time of every future)<T,s>i = pAUq iffAbEt(tf"b & t>s & <T,t>i=q &At'((t'~b & s<t'<t) -9 <T,t'>l=p)))(q is true at some--time of every future and untilq is true p is true)<T,s>I= AXp i ff At(sRt --> <T,t>I=p)(p is true at every immediate future)<T,s>l= EGp iff EbAt((tSb & t>s) -9 <T,t>l=p)(p is true at every time of some future)<T,s>l= EFp iff EbEt(tfb & t>s & <T,t>{=p)(p fs true at some time of some future)<T,s>1 = EXp iff Et(sRt & <T,t>l=p)(p is true at some immediate future)<T,s>I = pEUq iffEbEt(teb & t>s & <T,t>I=q &At'((t'eb & s<t'<t) --> <T,t'>I=p)))(q is true at some time of some future and in thatfuture until q is true p is true)<T,s>~= Hp iff AbAt((tfb & t<s) -~ <T,t>l=p)(p is true at every time of the past)<T,s>l= Pp iff AbEt(t~b & t<s & <T,t>I=p)(p is true at some time of The past)<T,s>J= Lp iff A=(tRs --> <T,t>l=p)(p is true at the immediate past)<T,s>I= pSq iffAbEt(tGb & t<s & <T,t>I=q &At'((t'~b & s>t'>t) -9 <T,t'>l=p)))(q is true at some time of the past and since q istrue p is true)A formula p is valid iff for every structureT and every state s in T, <T,s> I= p.III MODELLING CHANGE IN KNOWLEDGE BASESAs noted earlier, this logic was developed toreason about change in data bases.
Althoughultlmately the application requires extension to aflrst-order language to better express varlabilltywithin a state, for now we are restricted to thepropositional case.
Such an extenslon is notwfthout problems, but should be manageable.The set of propositional variables formodelling change in data bases is divided into twoclasses.
A state proposition asserts the truth ofsome atomic condition.
An event propositionassociates the occurence of an event with thestate in which it occurs.
The idea is to imposeconstraints on the occurence of events and thenderive the appropriate state description.
To bespecfic, let Osl...Qsn be state propositions andQel...Oem be event propos~tlons.
If PHI is aboolean formula of state propositions, thenformulas of the form:(PHI -9 EX Qei) are event constraints.
To derivestate descriptions from events frame axioms arerequired:(Qei -9 ((L PHIl) -9 PHI2)),where PHIl and PHI2 are boolean ~ormulas of statepropositions.
In the blocks world, and eventconstraint would be that If block A was clear andblock B was clear then move A onto B is a nextpossible event:((cleartop(A) & cleartop(B)) -9 EX move(A,B)).Two frame axioms are:(move(A,B) -9 on(A,B)) and(move(A,B) --> ((L on(C,D)) -9 on(C,D))).If the modell ing strategy was left as justoutlined, nothing very significant would have beenaccomplished.
Indeed, a simpler strategy would behard to imagine, other than requiring that thestate formulas be a complete description.
This canbe improved in two non-trivial ways.
The first isthat the conditions on the transitions mayreference states earlier than the last one.~econdly, we may require that certain conditionsmight or must eventually happen, but'notnecessarily next.
As mentioned earller, thesecapabilities are important consideratlons for us.By placing biconditionals on the eventconstraints, it can be determined that somecondition may never arise, or from knowledge ofsome event a reconstruction of the previous statemay be obtained.The form of the frame axioms may be invertedusing the until operator to obtain a form that isperhaps more intuitive.
As specified above theform of the frame axioms will yield identicalprevious and next state propositions for thoseevents that have no effect on them.
The standardexample from the blocks world is that moving ablock does not alter the color of the block.
Ifthere are a lot uf events llke move that don'tchange block color, there will be a lot of frameaxioms around stating that the events don't changethe block color.
But if there is only one event,say paint, that changes the color of the block,the "every until" (AU) operator can be used tostate that the color of the block stays the sameunti\] it is painted.
This strategy works best ifwe maintain a single event condition for eachstate; i.e, no more than a single event can occurIn each state.
For each application, a decisionmust be made as to how to best represent the frameaxioms.
Of course, if the world is verycomplicated, there will be a lot of complicatedframe axioms.
I see no easy way around thisproblem in this logic.40A.
Completion of History T-reg ~--> (AX T-add)As previously mentioned, we assume that thepast is determined (i.e.
backwards linear).However this does not imply that our knowledge ofthe past is complete.
Since in some cases we maywish to claim complete knowledge with respect toone or more predicates in the past, a completionaxiom is developed for an intuitively naturalconception of history.
Examples of predicates forwhich our knowledge might be complete arepresidential inaugurations, employees of acompany, and courses taken by someone in college.In a first order theory, T, the completionaxiom with respect to the predicate Q where(Q cl)...(Q cn) are the only occurences of Q in Tis:Ax((Q x) ~-~ x=cl v...v x=cn).
From right to lefton the bicondltional this just says what theorginal theory T did, that Q is true of cl...cn.The completion occurs from left to right,asserting that cl...cn are the only constants forwhich Q holds.
Thus for some c' which is not equalto any of cl...cn, it is provable in the completedtheory that ~(Q c'), which was not provable in theoriginal theory T. This axiom captures ourintuitive notions about Q.
2 The completion axiomfor temporal logic is developed by introducingtime propositions.
The idea is that a conjunct ofa time proposition, T, and some other proposition,Q, denotes that Q is true at time T. If timepropositions are linearly ordered, and Q occursonly in the formP(Q & TI) &...& P(Q & Tn) in some theory M, thenthe h~story completion axiom for M with respect toQ isH(Q 4--> T1 v...v Tn).
Analogous to the first-order completion axiom, the direction from left toright is the completion of Q.
An equivalent first-order theory to M in which each temporalproposition Ti is a first-order constant tl and Qis a monadic predicate,(Q tl) &...& (Q tn), has the flrst-ordercompletion axiom (with Q restricted to timeconstants of the past, where tO is now):Ax<t0 ((Q x) ~-+ x=tl v...v x=tn).B.
ExampleThe propositional variables T-reg, T-add, T-drop, T-enroll, and T-break are time pointsintended to denote periods in the academic semsteron which certain activities regarding enrollmentfor courses is dependent.
The event propositionare Qe-reg, Qe-pass, Qe-fail, and Qe-drop; forregistering for a course, passing a course,fa i l ing  a course ,  and  dropp ing  a cou i rse ,respectively.
The only state i s  Qs-reg, whichmeans that a student is registered for a course.2\[Clark 781 contains a general discussion ofpredicate completion.
\[Reiter 82\] discusses thecompletion axiom with respect to circumscription.T-add ~--> (AX T-drop) - drop follows addT-drop ~-~ (AX T-enroll) - enroll follows dropT-enroll (-~ (AX T-break) - break follows enroll((T-reg v T-add) & ~Qs-reg & -(P Qe-pass)) ~-~(EX Qe-reg) - if the period is reg or add anda student is not registered and has notpassed the course then the student may nextregister for the course((T-add v T-drop) & Qs-reg) ~-) (EX Qe-drop) - ifthe period is add or drop and a student isregistered for a course then the student maynext drop the course(T-enroll & Qs-reg) ~-+ (EX Qe-pass)) - if theperiod is enroll and a student is registeredfor a course then the student may next passthe  course(T-enroll & Qs-reg) ~-~ (EX Qe-fail)) - if theperiod is enroll and a student is registeredfor a course then the student may next failthe courseQe-reg -+ (Os-reg AU (Qe-pass v Qe-fail vQe-drop)) - if a student registers for acourse then eventually the student will passor fall or drop the course and until then thestudent will be registered for the course((L -Qs-reg) & -Qe-reg) --> -Qs-reg) - notregistering maintains not being registeredAX(Qe-reg & Qe-pass & Qe-fail & Qe-drop & Qe-null)- one of these events must next happen-(Qe-i & Qe-j), for -l=j (e.g.
-(Qe-reg & Qe-pass)) - but only oneIV COUNTERHISTORICALSA counterhistorlcal may be thought of as aspecial case of a counterfactual, where ratherthan asking the counterfactual, "If kangaroos didnot have tails would they topple over?
", one asksinstead "Could I have taken CSEII0 lastsemester?".
That is, counterfac=uals suppose thatthe present state of affairs is slightly differentand then question the consequences.Counterhlstorlcals, on the other hand, questionhow a course of events might have proceededotherwise.
If we picture the underlying temporalstructure, we See that althouKh there are nobranches into the past, there are branches fromthe past into the future.
These are alternativehistories to the one we are actually in.Counterhlstoricals explore these alternate41histories.Intuitively, a counterhistorlcal may beevaluated by "rolling back" to some previous stateand then reasoning forward, d lsregarding anyevents that actually took place after that state,to determine whether the speclfied condition mightarise.
For the question, "Could I have registeredfor CSEII0 last semester?
", we access the statespecified by last semester, and from that statedescription, reason forward regarding thepossibil ity of registering for CSEII0.However, a counterhistorlcal is really onlyinteresting if there is some way in which thecourse of events is constrained.
These constraintsmay be legal, physical, moral, bureaucratic, or awhole host of others.
The set of axioms in theprevious section is one example.
The formalismdoes not provide any facility to dlstinquishbetween various sorts of constraints.
Thus themortal inevitability that everyone eventually diesis given the same importance as a university rulethat you can't take the same course twice.In the logic, the general counterhistoricalhas the form: P(EFp).
That is, is there some timein the past at which there is a future time when pmight possibly be true.
Constraints may be placedon the prior time:P(q & EFp), e.g.
"When I was a sophomore, could Ihave taken Phil 6?".
One might wish to requirethat some other condition still be accessible:P(EF(p & EFq)), e.g.
"Could I have taken CSE220and then CSEII0?
"; or that the counterhistoricalbe immediate from the most recent state:L(EXp).
(The latter is interesting in what it hasto say about possible alternatives to -- or theinevitability of -- what is the case now.
\[WM 831shows its use in recognizing and correcting event-related misconceptions.)
For example, in theregistration domain if we know that someone haspassed a course then we can derive from the axiomsabove the counterhistorical that they could havenot passed:((P Qe-pass) -+ P(EF-Qe-pass).V FUTURITIESA query regarding future possibil ity has thegeneral logical form: EFp.
That is, is there somefuture time in which p is true.
The basicvariations are: AFp, must p eventually be true;EGp, can p remain true; AGp, must p remain true.These can be nested to produce infinite variation.However, answering direct questions about futurepossibility is not the only use to be made offuturities.
In addition, futurities permit thequery system to competently offer monitors asresponses to questions.
(A monitor watches forsome specified condition to arise and thenperforms some action, usually notif ication thatthe condition has occurred.)
A monitor can only beoffered competently if it can be shown that thecondition might possibly arise, given the presentstate of the data base.
Note that if any of thestronger forms of future possibil ity can bederived it would be desirable to provideinformation to that effect.For example, if a student is not registeredfor a course and has not passed the course and thetime wasprior to enrollment, a monitor for thestudent registering would be competently madegiven some question about registration, since((~Qs-reg & -(P Qe-pass) & ~X(AF Te)) -+(EF Qe-reg)).
However, if the student hadpreviously passed the course, the monitor offerwould not be competent, since((-Qs-reg & (P Qe-pass) & AX(AF Te)) -+-(EF Qe-reg)).Note that if a monitor was explicityrequested, "Let me know when p happens," afuturity may be used to determine whether p mightever happen.
In addition to the processingeff iciency gained by discarding monitors that cannever be satisfied, one is also in a position tocorrect a user's mistaken belief that p might everhappen, since in order to make such a request s/hemust believe p could happen.
Corrections of thissort arise from Intensional failures ofpresumptions in the sense of \[Mays gOl and \[WM8~I.
If at some future time from the monitorrequest, due to some intervening events p can nolonger happen, but was originally possible, anextensional failure of the presumption (in thesense of \[Kaplan 82\]) might be said to haveoccurred.The application of the constraints whenattempting to determine the validity of an updateto the data base is important to the determinationof monitor competence.
The approach we haveadopted is to require that when some formula p isconsidered as a potential addition to the database that it be provable that EXp.
Alternativelyone could just require that the update not beinconsistent, that is not provable chat .~X~p.
Theformer approach is preferred since it does notmake any requirement on decidability.
Thus, inorder to say that a monitor for some condition p\[s competent, it must be provable that EFp.VI DISCUSSIONThis work has been influenced most stronglyby work within theory of computation on provingprogram correctness (IBMP 811 and \[GPSS 801) andwithin philosophy on temporal logic \[RU 711..Thework within AI that is most relevant is that of\[McDermott 821.
Two of McDermott's major pointsare regarding the openess of the future and thecontinuity of time.
With the first of these we arein agreement, but on the second we differ.
Thisdifference is largely due to the intendedapplication of the logic.
Ours is applied tochanges in data base states (which are discrete),whereas McDermott's is physical systems (which arecontinuous).
But even within the domain ofphysical systems it may be worthwhile to considerdiscrete structures as a tool for abstraction, for42which computational methods may prove to be moretractable.
At least by considering modal temporallogics we may be able to gain some insight intothe reasoning process whether over discrete orcontinuous structures.We have not made at serlous effort towardsimplementation thus far.
A tableau based theoremprover has been implemented for the futurefragment based on the procedure given in \[BMP 81\].It is able to do problems about one-half the sizeof the example given here.
Based on this limitedexperience we have a few Ideas which might improveits abilities.
Another procedure based on thetableau method which is based on ideas from \[BMP81\] and \[RU 71\] has been developed but we are notsufficiently confident In its correctness topresent ft at this point.ACKNOWLEDGEMENTSI have substantially benefited from comments,suggestions, and discussions wlth Aravlnd Joshi,Sltaram Lanka, Kathy McCoy, Gopalan Nadathur,David Silverman, Bonnie Webber, and ScottWeinstein.Reasoning About Processes and Plans,"Cognitive Science (6), I982.\[Moore 82\] R.C.
Moore, "The Role of Logic inKnowledge Representation and CommensenseReasoning," Proceedings of AAAI 82,Pittsburgh, Pa., August 1982.\[RU 711N.
Rescher and A. Urquhart, TemporalLogic, Sprlnger-Verlag, New York, 1971.\[Relter 82\] R. Relter, "Circumscription ImpliesPredicate Completion (Sometimes),"Proceedings of AAAI 82, Pittsburgh, Pa.,August \[982.\[WJMM 83\] B. Webber, A. Joshi, E. Mays,K.
McKeown, "Extended Natural Language DataBase Interactions," International Journal ofComputers and Mathematics, Spring 83.\[W'M 83\] B. Webber and E. Mays, "Varieties of UserMisconception: Detection and Correction",Proceedings of IJCAI 83.REFERENCES\[BMP 81\] M. Ben-Ari, Z.
Manna, A. Pneuli, "TheTemporal Logic of Branching Time," Eighth ACMSymposium on Principles of ProgrammingLanguages, Williamsburg, Va., January \[981.\[Clark 78\] K.L.
Clark, "Negation as Failure," inLogic and Data Bases, H. Gallalre andJ.
Minker (eds.
), Plenum, New York.\[GPSS 80\] D. Gabbay, A. Pneull, S. Shelah,J.
Stavl, "On the Temporal Analysis ofFairness, Seventh ACM Symposium on Principlesof Programming Languages, 1980.\[Kamp 68\] J.A.W.
Kamp, Tense Logic and the Theoryof Linear Order, PhD Thesis, UCLA, |968.\[Kaplan 82\] S.J.
Kaplan, "Cooperative Responsesfrom a Portable Natural Language QuerySystem," Artificial Intelligence (19, 2),October 1982.\[Mays 80\] E. Mays, "Failures in Natural LanguageSystems: Appllcations to Data Base QuerySystems," Proceedings of AAAI 80, Stanford,Ca., August \[980.\[Mays 82\] E. Mays, "Monitors as Responses toQuestions: Determining Competence,"Proceedings of AAAI 82, Pittsburgh, Pa.,August 1982.\[McDermott 82\] D. McDermott, "A Temporal Loglc for43
