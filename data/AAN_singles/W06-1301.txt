Proceedings of the 7th SIGdial Workshop on Discourse and Dialogue, pages 1?8,Sydney, July 2006. c?2006 Association for Computational LinguisticsAdaptive Help for Speech Dialogue Systems Based on Learning andForgetting of Speech CommandsAlexander Hof, Eli Hagen and Alexander HuberForschungs- und InnovationszentrumBMW Group, Munichalexander.hof,eli.hagen,alexander.hc.huber@bmw.deAbstractIn this paper we deal with learning and for-getting of speech commands in speech di-alogue systems.
We discuss two mathe-matical models for learning and four mod-els for forgetting.
Furthermore, we de-scribe the experiments used to determinethe learning and forgetting curve in ourenvironment.
Our findings are comparedto the theoretical models and based onthis we deduce which models best describelearning and forgetting in our automotiveenvironment.
The resulting models areused to develop an adaptive help systemfor a speech dialogue system.
The systemprovides only relevant context specific in-formation.1 IntroductionModern premium class vehicles contain a largenumber of driver information and driving assis-tance systems.
Therefore the need for enhanceddisplay and control concepts arose.
BMW?s iDriveis one of these concepts, allowing the driver tochoose functions by a visual-haptic interface (seeFig.
1) (Haller, 2003).
In Addition to the visual-haptic interface, iDrive includes a speech dialoguesystem (SDS) as well.
The SDS allows the driverto use a large number of functions via speech com-mands (Hagen et al, 2004).
The system offersa context specific help function that can be ac-tivated by uttering the keyword ?options?.
Theoptions provide help in the form of a list, con-taining speech commands available in the currentcontext (see dialogue 1).
Currently neither thedriver?s preferences nor his knowledge is takeninto consideration.
We present a strategy to op-Figure 1: iDrive controller and Central Informa-tion Display (CID)timize the options by adaption that takes prefer-ences and knowledge into account.Our basic concern was to reduce the driver?smemory load by reducing irrelevant information.An adaptive help system based upon an individualuser model could overcome this disadvantage.
In(Komatani et al, 2003) and (Libuda and Kraiss,2003), several adaptive components can be in-cluded to improve dialogue systems, e.g.
user andcontent adaption, situation adaption and task adap-tion.
Hassel (2006) uses adaption to apply differ-ent dialogue strategies according to the user?s ex-perience with the SDS.
In our system we concen-trate on user modeling and content adaption.In this paper, we present studies concerninglearning and forgetting of speech commands in au-tomotive environments.
The results are used to de-velop a model describing the driver?s knowledgein our SDS domain.
This model is used to adaptthe content of the options lists.1Dialogue 1User: ?Phone.
?System: ?Phone.
Say dial name, dial number or name a list.
?User: ?Options.
?System: ?Options.
Say dial followed by a name, for example ?dial Alex?, or say dial name,dial number, save number, phone book, speed dialing list, top eight, last eight, ac-cepted calls, missed calls, active calls and or or off.
?2 Learning of CommandsIn this section, we determine which function mostadequately describes learning in our environment.In the literature, two mathematically functions canbe found.
These functions help to predict thetime necessary to achieve a task after several trials.One model was suggested by (Newell and Rosen-bloom, 1981) and describes learning with a powerlaw.
Heathcote et.
al.
(2002) instead suggest touse an exponential law.T = B ?N??
(power law) (1)T = B ?
e??
?N (exponential law) (2)In both equations T represents the time to solvea task, B is the time needed for the first trial ofa task, N stands for the number of trials and ?
isthe learning rate parameter that is a measure forthe learning speed.
The parameter ?
has to be de-termined empirically.
We conducted memory teststo determine, which of the the two functions bestdescribes the learning curve for our specific envi-ronment.2.1 Test Design for Learning ExperimentsThe test group consisted of seven persons.
Thesubjects?
age ranged from 26 to 43 years.
Five ofthe subjects had no experience with an SDS, twohad very little.
Novice users were needed, becausewe wanted to observe only novice learning behav-iour.
The tests lasted about one hour and were con-ducted in a BMW, driving a predefined route withmoderate traffic.Each subject had to learn a given set of ten taskswith differing levels of complexity (see table 1).Complexity is measured by the minimal necessarydialogue steps to solve a task.
The tasks were notdirectly named, but explained in order not to men-tion the actual command and thus avoid any influ-ence on the learning process.
There was no helpallowed except the options function.
The subjectsreceived the tasks one by one and had to searchfor the corresponding speech command in the op-tions.
After completion of a task in the testset thenext task was presented.
The procedure was re-peated until all commands had been memorized.For each trial, we measured the time span fromSDS activation until the correct speech commandwas spoken.
The time spans were standardized bydividing them through the number of the minimalnecessary steps that had to be taken to solve a task.2.2 ResultsIn general, we can say that learning takes placevery fast in the beginning and with an increas-ing amount of trials the learning curve flattensand approximates an asymptote.
The asymptoteat Tmin = 2s defines the maximum expert level,that means that a certain task can not be completedfaster.The resulting learning curve is shown in Fig.
3.In order to determine whether equation (1) or (2)describes this curve more exactly, we used a chi-squared goodness-of-fit test (Rasch et al, 2004).The more ?2 tends to zero, the less the observedvalues (fo) differ from the estimated values (fe).
?2 =k?i=1(fo ?
fe)2fe(3)According to Fig.
2, the power law has a mini-mum (?2min = 0.42) with a learning rate parame-ter of ?
= 1.31.
The exponential law has its min-imum (?2min = 2.72) with ?
= 0.41.
This meansthat the values of the exponential law differ morefrom the actual value than the power law?s values.Therefore, we use the power law (see Fig.
3(a)) todescribe learning in our environment.3 Forgetting of CommandsThe second factor influencing our algorithm forthe calculation of options is forgetting.
If a com-mand was not in use for a long period of time,we can assume that this command will be forgot-ten.
In this section, we determine how long com-mands are being remembered and deduce a func-tion most adequately describing the process of for-2Task 1 Listen to a radio station with a specific frequencyTask 2 Summary of already used destinationsTask 3 Enter a new destinationTask 4 Start navigationTask 5 Turn off speech hintsTask 6 3D mapTask 7 Change map scaleTask 8 Avoid highways for route calculationTask 9 Turn on CDTask 10 Display the car?s fuel consumptionTable 1: Tasks for learning curve experiments(a) ?2 for the Power Law(b) ?2 for the Exponential LawFigure 2: Local ?2 Minimagetting in our environment.
In (Rubin and Wen-zel, 1996) 105 mathematical models on forgettingwere compared to several previously published re-tention studies.
The results showed that there is nogenerally appliable mathematical model, but a fewmodels fit to a large number of studies.
The mostadequate models based on a logarithmic function,an exponential function, a power function and asquare root function.
?new = ?old ?
ln(t + e)??
(logarithmic)(4)?new = ?old ?
e??
?t (exponential) (5)?new = ?old ?
(t + ?)??
(power) (6)?new = ?old ?
e???
?t (square root) (7)The variable ?
represents the initial amount oflearned items.
The period of time is representedthrough t while ?
defines the decline parameterof the forgetting curve.
In order to determine thebest forgetting curve for SDS interactions, we con-ducted tests in which the participants?
memoryskills were monitored.3.1 Test design for forgetting experimentsThe second experiment consisted of two phases,learning and forgetting.
In a first step ten subjectslearned a set of two function blocks, each consist-ing of ten speech commands (see table (2)).
Thelearning phase took place in a BMW.
The tasksand the corresponding commands were noted on30 1 2 3 4 5 60246810121416Tmin = 2sNumber of trials NTime(s)(a) Observed learning curve and power law (dashed) with ?
=1.310 1 2 3 4 5 60246810121416Tmin = 2sNumber of trials NTime(s)(b) Observed learning curve and exponential law (dotted) with?
= 0.42Figure 3: Learning curvesFunction block 1 Function block 2Task 1 Start CD player Task 11 Turn on TVTask 2 Listen to CD, track 5 Task 12 Watch TV station ?ARD?Task 3 Listen to tadio Task 13 Regulate blowersTask 4 Listen to radio station ?Antenne Bay-ern?Task 14 Change time settingsTask 5 Listen to radio on frequency 103,0 Task 15 Change date settingsTask 6 Change sound options Task 16 Change CID brightnessTask 7 Start navigation system Task 17 Connect with BMW OnlineTask 8 Change map scale to 1km Task 18 Use phoneTask 9 Avoid highways for route calculation Task 19 Assistance windowTask 10 Avoid ferries for route calculation Task 20 Turn off the CIDTable 2: Tasks for forgetting curve experimentsa handout.
The participants had to read the tasksand uttered the speech commands.
When all 20tasks were completed, this step was repeated aslong as all SDS commands could be freely repro-duced.
These 20 commands built the basis for ourretention tests.Our aim was to determine how fast forgettingtook place, so we conducted several memory testsover a time span of 50 days.
The tests were con-ducted in a laboratory environment and should im-itate the situation in a car if the driver wants to per-form a task (e.g.
listen to the radio) via SDS.
Be-cause we wanted to avoid any influence on the par-ticipant?s verbal memory, the intentions were notpresented verbally or in written form but as iconicrepresentations (see Fig.
4).
Each icon representedan intention and the corresponding speech com-mand had to be spoken.Intention ??
Task ??
Command ??
SuccessIcon ??
Task ??
Command ??
SuccessFigure 4: Iconic representation of the functions:phone, avoid highways and radioThis method guarantees that each function wasFigure 5: Test procedure for retention testsonly used once and relearning effects could not in-fluence the results.
As a measure for forgetting, weused the number of commands recalled correctlyafter a certain period of time.40 10 20 30 40 500246810Time (days)Recalledcommands(a) Empirical determinded forgetting curve0 10 20 30 40 500246810Time (days)Recalledcommands(b) Exponential forgetting curve (dashed) with ?
= 0.027Figure 6: Forgetting curves3.2 ResultsThe observed forgetting curve can be seen in Fig.6(a).
In order to determine whether equation (4),(5), (6) or (7) fits best to our findings, we used thechi-squared goodness-of-fit test (cf.
section 2.2).The minima ?2 for the functions are shown in ta-ble (3).
Because the exponential function (see Fig.Function ?2 Corresponding ?logarithmic 2.11 0.58exponential 0.12 0.027power 1.77 0.22square root 0.98 0.15Table 3: ?2 values6(b)) delivers the smallest ?2, we use equation (5)for our further studies.Concerning forgetting in general we can deducethat once the speech commands have been learned,forgetting takes place faster in the beginning.
Withincreasing time, the forgetting curve flattens andat any time tends to zero.
Our findings show thatafter 50 days about 75% of the original numberof speech commands have been forgotten.
Basedon the exponential function, we estimate that com-plete forgetting will take place after approximately100 days.4 Providing Adaptive HelpAs discussed in previous works, several adaptivecomponents can be included in dialogue systems,e.g.
user adaption (Hassel and Hagen, 2005), con-tent adaption, situation adaption and task adaption(Libuda and Kraiss, 2003).
We concentrate on userand content adaption and build a user model.According to Fischer (2001), the user?s knowl-edge about complex systems can be divided intoseveral parts (see Fig.
7): well known and regu-larly used concepts (F1), vaguely and occasionallyused concepts (F2) and concepts the user believesto exist in the system (F3).
F represents the com-plete functionality of the system.
The basic ideabehind the adaptive help system is to use infor-mation about the driver?s behaviour with the SDSto provide only help on topics he is not so famil-iar with.
Thus the help system focuses on F2, F3within F and finally the complete functionality F.For every driver an individual profile is gen-5Figure 7: Model about the user?s knowledge oncomplex systemserated, containing information about usage fre-quency and counters for every function.
Severalmethods can be used to identify the driver, e.g.a personal ID card, a fingerprint system or facerecognition (Heckner, 2005).
We do not furtherfocus on driver identification in our prototype.4.1 Defining an Expert UserIn section 2 we observed that in our environ-ment, the time to learn speech commands followsa power law, depending on the number of trials(N ), the duration of the first interaction (B) andthe learning rate parameter (?).
If we transformequation (1), we are able to determine the numberof trials that are needed to execute a function in agiven time T .N = ??
?TB (8)If we substitute T with the minimal time Tmin anexpert needs to execute a function (Tmin = 2s, cf.section 2.2), we can estimate the number of trialswhich are necessary for a novice user to becomean expert.
The only variable is the duration B,which has to be measured for every function at itsfirst usage.Additionally, we use two stereotypes (noviceand expert) to classify a user concerning his gen-eral experience with the SDS.
According to Has-sel (2006), we can deduce a user?s experience bymonitoring his behaviour while using the SDS.The following parameters are used to calculate anadditional user model: help requests h (user askedfor general information about the system), optionsrequests o (user asked for the currently availablespeech commands), timeouts t (the ASR did notget any acoustic signal), onset time ot (user neededmore than 3 sec to start answering) and barge-in b (user starts speech input during the system?sspeech output).
The parameters are noted in a vec-tor?UM .The parameters are differently weighted by aweight vector?UMw, because each parameter is adifferent indicator for the user?s experience.?UMw=??????
?h = 0.11o = 0.33t = 0.45ot = 0.22b = ?0.11???????
(9)The final user model is calculated by the scalarproduct of?UM ??UMw.
If the resulting value isover a predefined threshold, the user is categorizedas novice and a more explicit dialogue strategy isapplied, e.g.
the dialogues contain more expam-ples.
If the user model delivers a value under thethreshold, the user is categorized as expert and animplicit dialogue strategy is applied.4.2 Knowledge Modeling AlgorithmOur findings from the learning experiments can beused to create an algorithm for the presentation ofthe context specific SDS help.
Therefore, the op-tion commands of every context are split into sev-eral help layers (see Fig.
8).
Each layer contains aFigure 8: Exemplary illustration of twelve helpitems divided into three help layersmaximum of four option commands in order to re-duce the driver?s mental load (Wirth, 2002).
Eachitem has a counter, marking the position within thelayers.
The initial order is based on our experiencewith the usage frequency by novice users.
The firstlayer contains simple and frequently used com-mands, e.g.
dial number or choose radio station.Complex or infrequent commands are put into thelower layers.
Every usage of a function is loggedby the system and a counter i is increased by 1 (seeequation 10).Besides the direct usage of commands, we alsotake transfer knowledge into account.
There are6several similar commands, e.g.
the selection of en-tries in different lists like phonebook, adressbookor in the cd changer playlists.
Additionally, thereare several commands with the same parameters,e.g.
radio on/off, traffic program on/off etc.
Allsimilar speech commands were clustered in func-tional families.
If a user is familiar with one com-mand in the family, we assume that the other func-tions can be used or learned faster.
Thus, we in-troduced a value, ?, that increases the indices ofall cammnds within the functional families.
Thevalue of ?
depends on the experience level of theuser.inew ={iold + 1 direct usageiold + ?
similar command(10)In order to determine the value of ?, we conducteda small test series where six novice users were toldto learn ten SDS commands from different func-tional families.
Once they were familiar with theset of commands, they had to perform ten tasks re-quiring similar commands.
The subjects were notallowed to use any help and should derive the nec-essary speech command from their prior knowl-edge about the SDS.
Results showed that approxi-mately 90% of the tasks could be completed by de-ducing the necessary speech commands from thepreviously learned commands.
Transferring theseresults to our algorithm, we assume that once auser is an expert on a speech command of a func-tional family, the other commands can be derivedvery well.
Thus we set ?expert = 0.9 for expertusers and estimate that for novice users the valueshould be ?novice = 0.6.
These values have to bevalidated in further studies.Every usage of a speech command increases itscounter and the counters of the similar commands.These values can be compared to the value of Nresulting from equation (8).
N defines a thresholdthat marks a command as known or unknown.
Ifa driver uses a command more often than the cor-responding threshold (i > N ), our assumption isthat the user has learned it and thus does not needhelp on this command.
It can be shifted into thelowest layer and the other commands move overto the upper layers (see Fig.
9).If a command is not in use for a long period oftime (cf.
section 3.2), the counter of this commandsteadily declines until the item?s initial countervalue is reached.
The decline itself is based on theresults of our forgetting experiments (cf.
sectionFigure 9: Item A had an initial counter of i = 1and was presented in layer 1; after it has been used15 times (i > N), it is shifted into layer 3 and thecounter has a new value i = 163.2) and the behaviour of the counter is describedby equation (5).5 Summary and Future WorkIn this paper we presented studies dealing withlearning and forgetting of speech commands in anin-car environment.
In terms of learning, we com-pared the power law of learning and the exponen-tial law of learning as models that are used to de-scribe learning curves.
We conducted tests underdriving conditions and showed that learning in thiscase follows the power law of learning.
This im-plies that learning is most effective in the begin-ning and requires more effort the more it tends to-wards an expert level.Concerning forgetting we compared four possi-ble mathematical functions: a power function, anexponential function, a logarithmic function and asquare root function.
Our retention tests showedthat the forgetting curve was described most ad-equately by the exponential function.
Within theobserved time span of 50 days about 75% of theinitial amount of speech commands have been for-gotten.The test results have been transferred into analgorithm specifying the driver?s knowledge ofcommands within the SDS.
Based on the learn-ing experiments we are able to deduce a thresh-old that defines the minimal number of trials thatare needed to learn a speech command.
The for-getting experiments allow us to draw conclusionson how long this specific knowledge will be re-mebered.
With this information, we developed analgorithm for an adaptive options list.
It provideshelp on unfamiliar speech commands.Future work focuses on usability tests of theprototype system, e.g.
using the PARADISE eval-uation framework to evaluate the general usabil-7ity of the system (Walker et al, 1997).
One mainquestion that arises in the context of an adaptivehelp system is if the adaption will be judged use-ful on the one hand and be accepted by the useron the other hand.
Depending on user behaviourthe help system could shift its contents very fast,which may cause some irritation.
The test resultswill show whether people get irritated and whetherthe general approach for the options lists appearsto be useful.ReferencesGerhard Fischer.
2001.
User modeling in human-computer interaction.
User Modeling and User-Adapted Interaction, 11:65?86.Eli Hagen, Tarek Said, and Jochen Eckert.
2004.Spracheingabe im neuen BMW 6er.
ATZ.Rudolf Haller.
2003.
The Display and Control Con-cept iDrive - Quick Access to All Driving and Com-fort Functions.
ATZ/MTZ Extra (The New BMW 5-Series), pages 51?53.Liza Hassel and Eli Hagen.
2005.
Evaluation of adialogue system in an automotive environment.
In6th SIGdial Workshop on Discourse and Dialogue,pages 155?165, September.Liza Hassel and Eli Hagen.
2006.
Adaptation of anAutomotive Dialogue System to Users Expertise andEvaluation of the System.Andrew Heathcote, Scott Brown, and D. J. K. Me-whort.
2002.
The Power Law Repealed: The casefor an Exponential Law of Practice.
PsychonomicBulletin and Review, 7:185?207.Markus Heckner.
2005.
Videobasierte Personeniden-tifikation im Fahrzeug ?
Design, Entwicklung undEvaluierung eines prototypischen Mensch MaschineInterfaces.
Master?s thesis, Universita?t Regensburg.Kazunori Komatani, Fumihiro Adachi, Shinichi Ueno,Tatsuya Kawahara, and Hiroshi Okuno.
2003.
Flex-ible Spoken Dialogue System based on User Modelsand Dynamic Generation of VoiceXML Scripts.
In4th SIGdial Workshop on Discourse and Dialogue.Lars Libuda and Karl-Friedrich Kraiss.
2003.Dialogassistenz im Kraftfahrzeug.
In 45.Fachausschusssitzung Anthropotechnik der DGLR:Entscheidungsunterstu?tzung fu?r die Fahrzeug- undProzessfu?hrung, pages 255?270, Oktober.Allen Newell and Paul Rosenbloom.
1981.
Mecha-nisms of skill acquisition and the law of practice.
InJ.
R. Anderson, editor, Cognitive skills and their ac-quisition.
Erlbaum, Hillsdale, NJ.Bjo?rn Rasch, Malte Friese, Wilhelm Hofmann, andEwald Naumann.
2004.
Quantitative Methoden.Springer.David Rubin and Amy Wenzel.
1996.
One hundredyears of forgetting: A quantitative description of re-tention.
Psychological Review, 103(4):734?760.Marilyn Walker, Diane Litman, Candace Kamm, andAlicia Abella.
1997.
Paradise: A framework forevaluating spoken dialogue agents.
In Proceedingsof the eighth conference on European chapter ofthe Associationfor Computational Linguistics, pages271?280, Morristown, New Jersey.
Association forComputational Linguistics.Thomas Wirth.
2002.
Die magische Zahl 7 und dieGeda?chtnisspanne.8
