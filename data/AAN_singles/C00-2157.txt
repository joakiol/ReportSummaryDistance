A Description Language for Syntactically Annotated CorporaEsther KSnig and Wolfgang LeziusIMS, Univers i ty  of S tut tgar t ,  Germanywww.
ims.
uni-stuttgart, de/proj ekte/TIGEgAbstractThis paper introduces a description languagefor syntactically annotated corpora which al-lows for encoding both the syntactic annota-tion to a corpus and the queries to a syntac-tically annotated corpus.In terms of descriptive adequacy and com-putational efficiency, the description lan-guage is a compromise between script-likecorpus query languages and high-level, typedunification-based grammar formalisms.1 I n t roduct ionSyntactically annotated corpora like thePenn Treebank (Marcus et al, 1993), theNeGra corpus (Skut et al, 1998) or the sta-tistically dismnbiguated parses in (Bell etal., 1999) provide a wealth of intbrmation,which can only be exploited with an ade-quate query language.
For example, onemight want to retrieve verbs with their sen-tential complements, or specific fronting orextraposition phenomena.
So far, queries toa treebank have been formulated in script-ing languages like tgrep, Perl or others.
Re-cently, some powerful query languages havebeen developed: an exalnple of a high-level, constraint-based language is describedin (Duchier and Niehren, 1999).
(Bird et al,2000) propose a query language for the gen-eral concept of annotation grat)hs,, A graph-ical query notation tbr trees is under devel-opment in the ICE project (UCL, 2000).In the current paper, we present a pro-posal for a graph description language whichis meant to fulfill two conflicting require-ments: On the one hand, the languageshould be close to traditional linguistic de-scriptions languages, i.e.
to grammar for-malisms, as a basis for modular, under-standable code, even for complex corpusqueries.
On the other lmnd, the languageshould not preclude etlicient query evalua-tion.
Our answer is to profit from the re-search on typed, feature-based/constraint-based grammar tbrmalisms (e.g.
(Carpenter,1992), (Copestake, 1999), (DSrre and Dorna,1993), (D6I're et al, 1996), (Emele and Za-jac, 1990), (H6ht~ld and Smolka, 1988)), andto pick those ingredients which are known tobe con~i)utationally 'tractable' in some sense.2 The Query Language2.1 The r ight k ind of graphsIf syntactic analysis is meant to providefor a basis of semantic interpretation, thepredicate-argulnent structure of a sentencenmst be recoverable fi'om its syntactic ana-lysis.
Nonlocal dependencies like topicaliza-tion, right extraposition, tell us that tr'ccsare not expressive nough.
We need a wayto connect an extraposed constituent with itssyntactic resp.
semantic head.
This can bedone either by introducing empty leaf nodesplus a means for node coreference (like inthe Penn Treebank) or by admitting cross-ing edges.
In our project, the latter solutionhas been chosen (Skut et al, 1997), partlytbr the reason that it is simpler to annotate(no decision on the right place of a trace hasto be taken).
We call this extension of treeswith crossing edges yntaz graphs.
An exam-ple is shown in Fig.
1.In order to discuss the details of the lan-guage, we will make reference to the simplersyntax graph in Fig.
2.1056CK EqKq r~qF~q + +Die Tagung hat mohr  Te i lnohmer  als \]e zuvorART NN VVF IN  HAT NN KOKOM ADV ADVDef.Fem.Nom.Sg Fem.Nom.Sg.
* 3.Akk.Pl %'.
* Masc.Akk.Pl.
* .
.
.
.
.
.Figure 1: A syntax graph with crossing edges ("the conference has more tmrticipants thanever bet:bre")eJn  Mann IfiuftART NN VVF INFigure 2: A simple syntax graph ("a manI'l\].IIS '~)2.2 Nodes: feature  recordsSyntactic phrases and lexical entries usu-ally come with a bundle of morphosyntae-tic information like part -of  speech, case, gen-der, and mnnber.
In computational linguis-tics, t~ature structures are used for that pur-pose.
Since we need only a way to repre-sent morphosyntactic information (not Syll-tactic or semantic structures) themselves, werestrict ourselves to feature records, i.e.
fiat;feature structures whose tbature values areconstants.
We admit Boolean tbrmulas, tbrthe fl.
'ature values, as well as tbr the feature-value pairs themselves.For example, all proper nouns ("NE") andnouns ("NN") can be retrieved by\[pos= "NE" I "NN"\]As usual, strucl;ura\] identity ca.n be ex-pressed by the use of logical variables.
How-ever, variables must not occur in the SCOl)eof negation, since this would introduce thecolnlmtational overhead of inequality con-straints.The values of a feature with 'infinite' rangelike word or 1emma can be referred to by reg-ular exl)ressions, e.g.
the nouns ("NN") withinitial M can be retrieved by\[word = /^M.
*/ & pos="NN"\]The/-symbols inark a regular expression.2.3 Node  relationsSince gral)hs are two-dimensional objects, weneed one basic node relation tbr each di-mension, direct precedence .
for the hor-izontal dilnension and direct dominance >tbr the vertical dimension (the precedence oftwo inner nodes is defined as the precedence1057of their leftmost erminal successors (Leziusand KSnig, 2000a)) Some convenient derivednode relations are the following:>* dominance (minimum path length 1)>n dominance in n steps (n > 0)>m,n dominance between ~n, and n steps(0 < m < n)>Ol leftmost erminal successor('left corner')>@r rightmost erminal successor('right corner')?
* precedence (minimum nmnber of inter-vals: 1)?
n precedence with rt intervals (n > 0)?
m,n precedence between m and 'n, intervals(0 < m <$ siblings$.
* siblings with precedence2.4 Graph  descr ip t ionsWe admit restricted 13oolean expressionsover node relations, i.e.
conjunction and dis-junction, but no negation.
For examI)le, tilequeries#nl : \[word="ein" ~ pos="ART"\]#n2: \[word="Mann" & pos="NN"\]#nl #n2and#nl : \ [cat="NP"\ ]  >"NK" \[pos="kRT"\]& #nl >"NK" \[word="Mann"\]art both satisfied by the NP-constituentin Fig.
2.
#nl, #n2 art variables.
Tile sym-bol "NR" is an edge label.
Edges can be la-belled in order to indicate the syntactic re-lation between two nodes.2.5 TypesFor tile t)urpose of conceptual chuity, tileuser can define type hierarchies.
'SubtylleS:may also be constants e.g.
like in the case ofpart-of-speech symbols.
Here is all excerptfrom the type hierarchy tbr the STTS tagset:nomina l  := noun,properNoun,pronoun.noun := "NN".properNoun := "NE".pronoun "="PPPER" , "PPOS" , "PRELS" ,  ... .This hierarchy can be used to tbrmulatequeries in a more concise manner:\ [pos=nomina l \ ]  .
* \ [pos="VVF IN" \ ]2.6 TemplatesE.g.
Ibr a concrete lexicon acquisition task,one might have to define a collection of in-terdependent, comI)lex queries.
In orderto keel) tile resulting code tractable andreusable, queries call be organised into teln-plates (oi macros).
Templates can take log-ical variables as arguments and may refer toother temi)lates , as long as there is no (em-bedded) self reference.
Logically, templatesart offline-compilable Horn fbrmula.Here are some examples tbr template definitions.
A simple notion of VerbPhrase isbeing de.fined with reference to a notion ofPrepPhrase .PrepPhrase ( #nO : \[cat="PP ''\]> #nl  : \ [pos="APPR"\]#nO> #n2: \[pos="NE"\]#nl.#n2 ) ;VerbPhrase ( #nO : \[cat="VP"\]> #nl : \[pos="VVFIN"\]#nO > #n2 &#n l .#n2 ) <-P repPhrase  (#n2)  ;10583 The Corpus Annotat ionLanguage3.1 Corpus  annotat ion  vs. quer iesActually, the query language is rather a dc-,scription language which (:an 1)e used alsofor encoding the syntactic annotation of acorpus.
\]n the current proje, ct, a SylltaC-tically disambiguated corpus is being 1)re-duced.
This means, that, for corl)us anno-tation, only a sublanguage of the i)rol)osedlanguage is adnlissibh', with the following re-strict;ions:?
The graph (;ollstrailltS Illay only inclu(lethe, t)asi(: node relations (>, .
).,, The only logical contlective on all struc-tural levels is the COl\junction el)cra-ter &.?
lq,egular expressions are, 'not admitted.,, Tyl)es and teml)lates are 'uo/, admitted.The automatically generate(1 corl)us anno-tation (:ode (generate(1 from the, outl)ut oftile gral)hical annotation i terface) for Fig.
2looks as fl)llows, with some additional mark-up for ease of processing.<sentence  ?d="i" roeC="5">"1": \ [uord="ein" & pos="hRT"\] gg"2": \[word="Mann" g~ pos="NN"\] g~"3": \[uord="l~iuft" & pos="VVFIN"\]"4": \[cat="NP"\] &"5": \ [cat="S ''\] &("l" "2") ("2" "3")("5" >"SB" "4") & ("5" >"HD" "3")("4" >"NK" "1") & ("4" >"NK" "2")3.2 An  XML representat ionWhen designing the, architecture of our sys-loin, we had to deal with the 1)roblem of var-ious diflhrent formats for the representationof syntactically annotated corpora: Penn~lYe, bank, Ne, Gra (Skut et al, 1.997), Tip-st;er, Susmme, several fi)rnlats for chunkedtexts and the I)roposed es(:ription language,.Thus, we have developed an XML based for-mat which guarantees maximmn 1)ortabil-ity (Mengel and Lezius, 2000).
An online('onversion tool (NeOra, Penn Treebank -+XML) is availabh', on our project homepage.4: Formal SemanticsCompared to most other corpus descriptionand corpus query languages, o111 graph (te-scription language comes with a ibrmal anda clear-cut operational semantics, which hasbeen described ill a technical report (Lez-ills anti KSnig, 2000a).
The semantics hasbeen compiled from the correslmntling partsof tbrmal semantics of the typed, unification-based gramlnar tbrmalisms and constraint-based logic programming languages whichhave been cited above.
Due to the, factthat the corpus slid the query are repre-se, nted in the same description language, oneCall detille a (;oi1se(tllellce relat ion })et\veellthe corl)uS and the query.
Essentially, theannotated cortms corresponds to a Prologdatabase, and the corpus query to a Prologquery.
A query result is a syntax graph fromthe tort)us.5 ImplementationOne might argue that commercial and re-search implementations tbr structurally an-notated texts are already available, i.e.XML-retrieval systems, e.f. (LTG, 1999).However, we intend to solve t)rol)lemswhich are spe('ifi(" to natural language de-scriptions: non-eml)e(t(ling (non-tree-lilw,)structm'al annotations crossing edge, sand, on the long-texm, re, trieval of co-indexed sul.
)structures (co-refl;rence phenom-ena).
A domain-specific impleme, ntation ofthe search engine gives the basis for opti-inizations wrt.
linguistic applications (Leziusand KSnig, 20001)).Before queries can be (wahlate.d on a newcorl)uS (e.ncoded in the NeGra, Penn Tree-bank or XML format), a preprocessing toolhas to convert it into the format of the de-scription language.
Subsequently, the co lpus is indexed in order to guarantee efficientlookups during the query evaluation.
Thequery processor to date is cal)able of evaluat-ing 1)asic queries (cf.
Sect.
2.2-2.4)..To sup-port all popular platforms, the tool is imple-mented in JawL There, is a servlet availableon the project web page which illustrates the,cuir(:nt stage of the implementation.1059ConclusionSyntactic orpus annotations, complex cor-pus queries and comt)utational grammarshave one common point: they are descrip-tions of natural anguage grammars.
Ourclaim is that corpus query languages shouldbe close to traditional grammar fbrmalisinsin order to make complicated information ex-traction tasks easier to encode.
The level ofprocessing efficiency of scripting languagescan still be reached if one restricts oneself to'off-line' compilable language lements only.ReferencesFranz Bell, Glenn Carroll, Detlef Prescher,Stefan Riezler, and Mats Rooth.
1999.Inside-outside estimation of a lexicalizedpcfg ibr german.
In Proceedings of the37th Annual Meeting of the ACL, Mary-land.Steven Bird, Peter Buneman, and TanWang-Chiew.
2000.
Towards a query lan-guage for annotation graphs.
In Proceed-ings of the LREC 2000, Athens, Greece.Bob Carpenter.
1992.
The Logic of TypedFeature Structures.
Tracts in TheoreticalComputer Science.
Cambridge UniversityPress, Cambridge.Ann Copestake, 1999.
Th, e (new) LKB sys-tem.
www-csli.stanibrd.edu, /~aac/doc5-2.pdfJochen D6rre and Michael Dorna.
1993.cur  - a formalism tbr linguistic knowl-edge representation.
Deliverable R.1.2A,DYANA 2, August.3ochen DSrre, Dov M. Gabbay, and Es-ther KSnig.
1996.
Fibred semantics tbrfeature-based grammar logic.
Journal ofLogic, Language, and Infi)rmation.
Spe-cial Issue on Language and Proof Theory,5:387-422.Denys Duchier and Joachim Niehren.
1999.Solving dominance constraints with finiteset constraint programming.
Technicalreport, Universitiit des Saarlandes, Pro-gramming Systems Lab.Martin Emele and Rfmi Zajac.
1990.
Afixed-point semantics for feature typesystems.
In Proceedings of the 2ndInternational Workshop on Conditionaland Typed Rewriting Systems, Montreal,Canada.Markus HShfeld and Gert Smolka.
1988.Definite relations over constraint lan-guages.
LILOG-Report 53, IBM Deutsch-land, Stuttgart, Baden-Wfirttemberg, Oc-tober.Wolfgang Lezius and Esther KSnig.
2000a.The TIGER language - a description lan-guage for syntax graphs.
Internal reI)ort,IMS, University of Stuttgart.Wolf'gang Lezius and Esther K5nig.
2000b.Towards a search engine for syntacticallyannotated corpora.
In Proceedings of theKONVENS 2000, Ihnenau, Germany.LTG Language Technology Group, Ed-inburgh, 1999.
LT XML version 1.1.User docum.cntation and reference guide.www.
l tg .
ed .
ac .
uk, so f tware /xmLMitchell Marcus, Beatrice Santorini, andMary Ann Marcinkiewicz.
1993.
Buildinga large annotated corpus of English: ThePenn Treebank.
Coraputational Linguis-tics.Andreas Mengel and Wolfgang Lezius.
2000.An XML-based representation tbrmat brsyntactically annotated corpora.
In Pro-ceedings of the LREC 2000, Athens,Greece.Wojciech Skut, Brigitte Krenn, ThorstenBrants, and Hans Uszkoreit.
1997.
Anannotation scheme ibr free word orderlanguages.
In Proceedings of the 5thConference on Applied Natural LanguageProcessing (ANLP), Washington, D.C.,March.Wojciech Skut, Thorsten Brants, BrigitteKrenn, and Hans Uszkoreit.
1998.
A lin-guistically interpreted corpus of germannewspaper text.
In ESSLI 1998, Work-shop on Recent Advances in Corpus An-notation.UCL University College London, 2000.
ICE(International Corpus of English).1060
