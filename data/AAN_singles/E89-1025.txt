A rich environment for exper imentat ion withuni f icat ion grammarsR.
Johnson  & M. RosnerIDSIA, LuganoABSTRACTThis paper descr ibes some ofthe features of a sophist i -cated language and environmentdesigned for exper imentat ionwith un i f i cat ion-or ientedl inguist ic descr ipt ions.
Thesystem, which is cal led ud,has to date been used success-ful ly as a development andprototyping tool in a researchproject on the appl icat ion ofs i tuat ion schemata to therepresentat ion of real text,and in extensive exper imenta-tion in machine translat ion.Whi le the ud language bearsclose resemblances to all thewel l -known uni f icat ion grammarformalisms, it offers a widerrange of features than anysingle alternative, pluspowerful  fac i l i t ies for nota-t ional abstract ion which al lowusers to s imulate di f ferenttheoret ical  approaches in anatural way.After a brief d iscuss ion ofthe mot ivat ion for implement-ing yet another uni f icat iondevice, the main body of thepaper is devoted to a descr ip-t ion of the most importantnovel features of ud.The paper concludes with ad iscuss ion of some quest ionsof implementat ion and com-pleteness.several languages: pr inc ipa l lya demanding machine transla-t ion exercise and a substan-tial invest igat ion into somepract ical  appl icat ions ofs i tuat ion semantics (Johnson,Rosner and Rupp, forthcoming).The interact ion between usersand implementers has f iguredlargely in the development  ofthe system, and a major reasonfor the r ichness of itslanguage and environment hasbeen the pressure to accommo-date the needs of a group ofl inguists working on three orfour languages s imul taneous lyand import ing ideas from avar iety of d i f ferent  theoret i -cal backgrounds.H istor ica l ly  ud evolved out ofa near relat ive of PATR-I I(Shieber, 1984), and its ori-gins are still apparent,  notleast in the notation.
In thecourse of development,  how-ever, ud has  been enr ichedwith ideas from many othersources, most notably from LFG(Bresnan, 1982) and HPSG (Sagand Pollard, 1987).Among the language featuresment ioned in the paper area wide range of datatypes, including lists,trees and user - rest r ic tedtypes, in addit ion to thenormal feature structuresi.
Introduction.The development of ud aroseout of the need to have avai l -able a full set of prototypingand development tools for anumber of d i f ferent  researchprojects in computat ionall inguistics, all involvingextensive text coverage incomprehens ive t reatmentof d is junct iondynamic binding ofname segmentspath-A part icu lar  art ic le of faithwhich has been very inf luen-tial in our work has been theconvict ion that we l l -des ignedprogramming languages (includ-ing ones used pr imar i ly  by- 182-l inguists) ,  should not onlysupply  a set of p r imi t iveswhich are appropr ia te  for theapp l i ca t ion  domain  but shouldalso conta in  w i th in  themse lvessu f f i c ient  apparatus  to enablethe user to create newabst ract ions  which can betuned to a par t i cu la r  v iew ofthe data.We have there fore  paid part ic -u lar  a t tent ion  to a const ructwh ich  in ud we call a rela-t ional  abst ract ion ,  a genera l -i sat ion of PATR- I I  templateswhich can take arguments  andwhich a l low mult ip le ,  recur-sive def in i t ion .
In manyrespects  re lat iona l  abst rac-t ions resemble  Pro log pro-cedures,  but wi th  a dec lara-t ive semant ics  imp lemented  interms of a typical  feature-s t ructure  uni f ier .are in tended to be read assubscr ipts .Three other  special  symbolsare used:+ stands for the un i f i ca -t ion operator* stands for top, theunderdef ined  element.# stands for bottom, theoverdef ined  e lement  thatcor responds  to fai lure.The semant ics  of un i f i ca t ionproper  are summar ised in f ig-ures 2 - 4.
C lauses \[i\] - \[3\]def ine  its a lgebra ic  proper -ties; c lauses  \[4\] - \[6\] def ineun i f i ca t ion  over constants ,l ists and trees in a mannerana lagous  to that found inProlog.i.i.
S t ructure  of the paperSect ion  2 gives a conc ise  sum-mary of the semant ics  of thebas ic  ud uni f ier .
This servesas a basis  for an informald iscuss ion ,  in Sect ion 3, ofour imp lementat ion  of rela-t ional  abst rac t ions  in termsof 'lazy' un i f i cat ion .
Thef inal sect ion conta ins  a fewremarks on the issue of com-p leteness ,  and a br ief  surveyof some other  languagefeatures.2.
Bas ic  Uni f ier  Semant icsIn add i t ion  to the usual atomsand feature  st ructures ,  the udun i f ie r  a lso deals  wi th  l ists,trees, feature  st ructures ,typed instances,  and pos i t iveand negat ive  d i s junct ions  ofatoms.
This sect ion conta insthe de f in i t ion  of un i f i ca t ionover these const ructs  andemploys cer ta in  notat iona lconvent ions  to represent  thesepr imi t ive  ud data types, asshown in f igure I.Throughout  the descr ipt ion ,the metavar iab les  U and Vstand for ob jects  of a rb i t ra rytype, and juxtaposed integersC~--NIn f igure 4, c lause \[7\] t reatspos i t ive  and negat ive  d is junc-t ions wi th  respect  to sets ofatomic  values.
C lause \[8\]deals  wi th  feature  s t ructuresand typed instances.
Intu i -t ively, type ass ignment  is amethod of s t r ic t ly  const ra in -ing the set of a t t r ibutesadmiss ib le  in a feature  struc-ture.Any case not covered by \[i\] to\[8\] y ie lds  #.
Moreover ,  allthe complex type const ructorsare str ict,  y ie ld ing  # ifapp l ied  to any argument  thatis i tsel f  #.The extens ions  to a conven-t ional  feature  s t ructureun i f ie r  descr ibed  in this sec-t, ion are l i t t le  more thancosmet ic  fr i l ls ,  most  of whichcou ld  be s imulated  in a stan-dard PATR env i ronment ,  even ifw i th  some loss of descr ip t ivec lar i ty .In the rest of the paper, wed iscuss  a fur ther  enhancementwhich  dramat ica l ly  and perhapscont rovers ia l l y  extends  theexpress ive  power  of thelanguage.183 -:Type name:constantl i s tn -ary  t ree+ve d is junct ion-ve  d i s junct ionfeature  s t ructuretyped ins tanceNotat ionA B C\[U : V\]V0(V I  .... Vn)/el  .... Cr /" /C l , .
.
,C r /{<AI ,V I> .... <Ar ,Vr>}<C,{<AI ,V I> .... <An,Vn>}>f igure  1 : Notat iona l  Convent ions\[i\] ?
is commutat ive :U + V\[2\] * is the  ident i ty :V + *\[3\] + is #-preserv ing :V?#f igure  2 : A lgebra ic  P roper t ies= V + U= V-- #\[4\] un i f i ca t ion  of  constants :Cl + C2 = Cl,  i f  C1 = C2\[5\] un i f i ca t ion  of  l i s t s :\ [U I :U2\ ]  + \ [V I :V2 \ ]  = \ [U I+VI :U2+V2\ ]\[6\] un i f i ca t ion  of  t rees :U0(U I , .
.
,Un)  + V0(V I , .
.
,Vn)  = UO+VO(UI+VI , .
.
,Un+Vn)f igure  3 : Constants ,  L i s ts  and  Trees- 184  -\[7\] d is junct ion:/C I , .
.
,Cn/  + C = C, if C in {Cl ..... Cn}/AI .... Ap/ + /B I , .
.
,Bq /= /C l , .
.
,C r / ,  if Ci in {AI, .
.
,Ap}and Ci in {BI , .
.
,Bq},l<=i<=r,  r > 0~/C l , .
.
,Cn /  + C = C, if C ~= Ci, l<=i<=n~/A I , .
.
,Ap/  + ~/BI , .
.
,Bq/= ~/Cl , .
.
,Cr / ,  where  Ci in {AI, .
.
,Ap}or Ci in {BI , .
.
,Bq},l<=i<=r/A I , .
.
,Ap/  + ~/B I , .
.
,Bq/= ~/C l , .
.
,C r / ,  where  Ci in {AI, .
.
,Ap}and Ci not in {BI , .
.
,Bq},l<=i<=r\[8\] feature  structures:{<AI ,U I>, .
.
,<Ap,Up>} + {<BI ,V I>, .
.
,<Bq,Vq>}= {<Ai,Ui> : Ai not in {BI, .
.
,Bq}} union{<Bj,Uj> : Bj not in {AI .... Ap}} un ion{<Ai ,Ui+Vj> : Ai = Bj},l<=i<=p, l<=j<=q}<C,{<AI ,U I>, .
.
,<Ap,Up>}> + <C,{<AI ,V I> .... <Ap,Vp>}>= <C,{<AI ,U I+VI>, .
.
,<Ap,Up+Vp>}~<C,{<AI ,U I> .... <Ap,Up>}> + {<BI,VI> .... <Bq,Vq>}= <C,{<Ai ,U i> : Ai not in {BI , .
.
,Bq}}un ion  {<Ai ,Ui+Vj> : Ai = Bj}>,if all Bj in {AI , .
.
,Ap},where l<=i<=p, l<=j<=qf igure 4 : Atomic  Va lue D is junct ions  and Feature  S t ructures3.
Extend ing  the Uni f ierOne of the major  shor tcomingsof typical  PATR-s ty lelanguages is their  lack offac i l i t i es  for def in ing  newabst ract ions  and express ingl ingu is t ic  genera l i sa t ions  notfo reseen (or even foreseeable)by the language des igner .
Thisbecomes a ser ious issue when,as in our own case, qu i telarge teams of l ingu is ts  needto deve lop  several  largedescr ip t ions  s imul taneous ly .To meet  this need, ud prov idesa powerfu l  abst rac t ion  mechan-ism which is notat iona l lys imi lar  to a Pro log procedure,but hav ing a s t r i c t ly  dec la ra -t ive in terpretat ion .
We usethe term re lat iona l  abst rac -t ion to emphas ise  the non-p rocedura l  nature of the con-struct.~'!"
Some Examples  of Re la-t ional  Abst ract ionThe examples  in this sect ionare all adapted  f rom a- 185  -descr ipt ion of a large subsetof German writ ten in u_dd byC.J.
Rupp.
As well as rela-tional abstract ions?
two otherud features are introducedhere: a bui l t - in list concate-nation operator '?+' and gen-eral ised disjunction, notatedby curly brackets (e.g.{X,Y}).
These are discussedbr ief ly in Section 4.The first example i l lustratesa relat ion Merge, used to col-lect together the semantics ofan arbitrary number of modif-iers in some list X into thesemantics of their head Y.Its def in i t ion in the externalsyntax of the current ud ver-sion isMerge(X,Y) :!Merge-all(X,<Y desc cond>,<Y desc ind>)(The invocat ion operator '!
'is an artefact of the LALR(1)compi ler  used to compi le theexternal notat ion - one day itwill go away.
X and Y should?in this context, be var iablesover feature structures.
Thedesc, cond and ind attr ibutesare intended to be mnemonicsfor, respectively?
'descrip-tion' (a list of) 'condi-tions' and ' indeterminate' .
)Merge  is def ined in terms of asecond relation, Merge-al l ,whose def in i t ion isc lear ly indebted for the nota-tion, the important di f fer-ence, which we alreadyreferred to above?
is that theinterpretat ion of Merge andMerge-al l  is str ict ly declara-tive.The best examples of the prac-tical advantages of this kindof abstract ion tend to be inthe lexicon?
typical ly  used todecouple the great complexityof lexical ly or iented descr ip-t ions from the intuit ivedef in i t ions often expectedfrom dict ionary coders.
Asi l lustrat ion?
without enter inginto d iscuss ion of the under-lying complexity,  for which weunfortunate ly  do not havespace here, we give an exter-nal form of a lexical entryfor some of the senses of theGerman verb traeumen.This is a real entry takenfrom an HPSG- inspi red analysismapping into a quite sophist i -cated s ituat ion semanticsrepresentat ion.
All of thenecessary information isencoded into the four lines ofthe entry; the expansions ofPref, Loctype and Subcat areall themselves wr i t ten in ud.The feature -prefix is merelya flag interpreted by aseparate morphological  com-ponent to mean that t raeumenhas no unstressed pref ix andcan take 'ge-' in its pastpart ic ip le form.Merge-al l ( \ [HdlT l \ ] ,<Hd desc cond> ++ L,Ind) :Ind = <Hd desc ind>' !Merge-al l (TI ,L, Ind)Merge-a l l ( \ [ \ ] , \ [ \ ] , Ind)traeumen -prefix!Pref(none)!Loctype(\[project\])!Subcat(np(nom),{vp(inf,squi),pp(von,dat)})Merge-al l  does all the hardwork, making sure that all theindeterminates are consistentand recurs ively combiningtogether the condit ion lists.A l though these def in i t ionslook suspic iously like piecesof Prolog, to which we arePref is ation usedsyntax ofpref ixessyntact ic abstrac-in unravel ing theGerman separableLoctype is a rudimentaryencoding of Act ionsart .Subcat contains all the infor-mat ion necessary for mapping- 186-ins tances  of verbs wi th  vp orpp complements  to a s i tuat ionschema (Fenstad, Ha lvorsen,Langho lm and van Benthem,1987).Here, for completeness  butw i thout  fur ther  d iscuss ion ,are the re levant  f ragments  ofthe de f in i t ion  of Subcat.Subcat (np(nom) ,pp(P ,C) )  :!Normal!Obl (Pobj ,P ,C,X)~Arg(X,2)<* subcat> = \[PobjlT\]!Assign(T,_)Subcat (np(nom) ,vp(F ,squ i ) )!Contro lVerb!Vcomp(VP,F ,NP,S i t )!Arg(Sit ,2)<* subcat> = \[VP:T\]!Ass ign(T,X)F = inf /bse!Contro l (X,NP)is that  some un i f i ca t ionswhich  would  u l t imate ly  con-verge may not converge  loca l ly(i.e.
at some g iven in termed i -ate stage in a der ivat ion)  ifinsu f f i c ient  in fo rmat ion  isava i lab le  at the t ime when theun i f i ca t ion  is a t tempted  (ofcourse  some patho log ica l  casesmay not converge  at all - wereturn to this quest ionbelow).We cope wi th  this by de f in ingan argument  to the un i f ie r  asa pair  <I,K>, cons is t ing  of anin fo rmat ion  s t ructure  Ibe long ing  to one of the typesl is ted in sect ion 2, p lus anagenda which holds the set ofas yet unreso lved  const ra in tsK which  potent ia l l y  hold overI.
Un i f i ca t ion  of twoobjects ,<I I ,KI> + <I2,K2>Ass ign( \ [X \ ] ,X )<* voice> = act ive!Subj(X)!Arg(X,l)Ass ign({ \ [Y \ ] , \ [ \ ]} ,Z)<* voice> = pass ive<* vform> = psp!Takes(none)!Obl (Y ,von,dat ,Z)!Arg(Z, l)4.
Imp lementat ion  o_ff theExtens ionsIn this sect ion we descr ibebr ie f ly  the a lgor i thm used toimplement  a dec la rat ive  seman-t ics for re la t iona l  abst rac -t ions, conc lud ing  with someremarks on fur ther  in teres t ingextens ions  which can be imple-mented  natura l ly  once thebasic  a lgor i thm is in place.For the moment,  we have onlyan informal  character !sat !on ,but a more formal  t reatment  isin preparat ion .4.1.
The so lu t iona lgor i thmThe main prob lem which  ar iseswhen we in t roduce  re la t iona labst rac t ions  into the languageinvolves the at tempt  toreso lve the poo led  set of con-s t ra intsK1 un ion K2 = K0with respect  to the newly uni -f ied in fo rmat ion  s t ructure  I0= Ii + I2, if it exists.The quest ion  of dec id ingwhether  or not some given con-s t ra int  set wil l  convergeloca l ly  is so lved by a verys imple heur is t ic .
F i rst  weobserve  that app l i ca t ion  ofthe const ra in t  pool K0 to I0is l ikely to be non-determin is t i c ,  leading to aset of poss ib le  so lut ions.Growth  of this so lut ion  setcan be conta ined  loca l ly  in as imple way, by const ra in ingeach potent ia l l y  t roub lesome(i.e.
recurs ive ly  def in ined)member  of K0 to apply  onlyonce for each of its poss ib leexpans ions ,  and f reez ing  pos-s ib le cont inuat ions  in a newconst ra in t  set.A f ter  one i te ra t ion  of thisp rocess  we are then left wi tha set of pa i rs{<J i , L l> , .
.
.
,< J r , L r>},  where- 187  -the Li are thest ra int  setscor respond ing  Ji.cur rent  con-for theIf this resul t  set is empty,the un i f i ca t ion  fa i ls  immedi-ately,  i.e.
I0 is incons is tentwi th  K0.
Otherwise ,  we a l lowthe process  to cont inue,breadth  f irst,  only  wi th  those<J i ,L i> pai rs  such that thecard ina l i ty  of Li is s t r i c t lyless than at the prev iousi terat ion.
The other  membersare left unchanged in thef inal  result ,  where  they arein terpreted  as prov is iona lso lut ions  pend ing  arr iva l  offu r ther  in format ion,  for exam-ple at the next step in ader ivat ion .4.2.
Dec idab i l i tyIt is ev ident  that, when allsteps in a der ivat ion  havebeen completed,  the processdescr ibed  above wil l  in gen-eral y ie ld  a set ofin fo rmat ion /const ra in t  pa i rs{<I i ,K l>.
.
.< InKn>} where someso lu t ions  are st i l l  i ncomplete- i.e.
some of the Ki are notempty.
In very many c ir -cumstances  it may well  be leg-i t imate to take no fur therac t ion  - for example  where theoutput  f rom a l ingu is t ic  pro-cessor  wi l l  be passed  to someother  dev ice  for fur thert reatment ,  or where one solu-t ion is adequate  and at leastone of the Ki is empty.
Gen-eral ly,  however,  the resultset wi l l  have to be processedfurther.The obv ious  move, of re lax ingthe requ i rement  on immediatelocal convergence  and a l lowingthe i te rat ion  to proceedwi thout  bound, is of coursenot guaranteed  to converge  atall in patho log ica l  cases.Even so, if there ex ist  somef in i te  number  of completeso lu t ions  our depth f i rsts t rategy is guaranteed  to f indthem eventua l ly .
If even thisexped ient  fai ls,  or is unac-ceptab le  for some reason, theuser is a l lowed to change theenv i ronment  dynamica l ly  so asto set an arb i t ra ry  depthbound on the number  of f inald ivergent  i terat ions.
Inthese latter  cases, the resul tis p resented  in the form of afeature  s t ructure  annotatedwi th  deta i l s  of any con-s t ra ints  wh ich  are st i l lunreso lved.4.2.1.
D iscuss ionDes igners  of un i f i ca t ion  gram-mar fo rmal i sms typ ica l ly  avo idinc lud ing  const ructs  wi th  thepower  of re lat iona l  abst rac -t ion, p resumably  th rough con-cern about issues of complete -ness and dec idab i l i ty .
Wefeel that this is an unfor -tunate  dec is ion  in v iew of thet remendous  increase in expres -s iveness  which  these con-s t ructs  can give.
( Inc iden-tal ly,  they can be int roduced,as in ud, w i thout  compromis ingdec la ra t iveness  and monoton i -city, wh ich  are arguably ,  f roma pract ica l  po int  of view,more important  cons idera -t ions.)
On a more pragmat icnote, ud has been runn ing nowwi thout  observab le  error  fora lmost  a year on descr ip t ionsof substant ia l  subsets  ofFrench and German, and we haveonly  once had to in tervene  onthe depth bound, wh ichde fau l ts  to zero (this waswhen someone t r ied to use itto run Pro log programs) .In pract ice ,  users  seem toneed the extra  power  veryspar ing ly ,  perhaps  in one ortwo abst rac t ions  in theirent i re  descr ip t ion ,  but thenit seems to be c ruc ia l l yimportant  to the c la r i ty  ande legance  of the whole  descr ip -t ive s t ruc ture  (l ist append ingoperat ions ,  as in HPSG, forexample,  may be a typica lcase).4.3.
Other  extens ionsOnce we have a mechan ism for'lazy' un i f i ca t ion ,  it becomesnatura l  to use the sameapparatus  to implement  a- 188  -var ie ty  of features  whichimprove the hab i tab i l i ty  andexpress iveness  of the systemas a whole.
Most  obv ious ly  wecan exp lo i t  the same f rameworkof local convergence  orsuspens ion  to support  hand-coded vers ions  of some basicp r imi t ives  l ike l ist concate-nat ion and non-determin is t i cext rac t ion  of e lements  f romarb i t ra ry  l ist pos i t ions .This has been done to advan-tage in our case, for example,to fac i l i ta te  impor ta t ion  ofuseful  ideas from, inter al iaHPSG and JPSG (Gunji, 1987).We have also imp lemented  afu l ly  genera l i sed  d is junct ion(as oppposed to the atomicva lue d i s junct ion  descr ibed  insect ion 2) us ing the same lazys t rategy to avoid  exp lod inga l te rnat ives  unnecessar i l y .S imi lar ly ,  it was qu i te  s impleto add a t reatment  of under -spec i f ied  pathnames  to a l lows imulat ion  of some recentideas f rom LFG (Kaplan,Maxwel l  and Zaenen, 1987).. Current  stateto othert ions.l i sp /un ix  combina-ReferencesBresnan J (ed) (1982).
TheMental  Representat ion  of Gram-mat ica l  Re lat ions .
MIT Press.Fenstad J-E, P-K Halvorsen,  TLangho lm and J van Benthem(1987).
S i tuat ions ,  Lanquageand Logic.
Reidel .Gunj i  T (1987).
JapanesePhrase St ructure  Grammar.Reidel .Johnson  R, M Rosner  and C JRupp ( forthcoming) .
'Situa-t ion schemata  and l ingu is t i crepresentat ion ' .
In M Rosnerand R Johnson (eds).
Computa-t ional  L ingu is t i cs  and FormalSemant ics .
Cambr idge  Univer -s ity Press (to appear  in1989).Kaplan R, J Maxwel l  and AZaenen (1987).
'Funct ionalUncer ta inty ' .
In CSLIMonthly ,  January  1987.The system is sti l l  underdeve lopment ,  wi th a completeparser  and rud imentary  syn-thes iser ,  p lus a full, rever-sible, morpho log ica l  com-ponent.
We are now work ing  ona more sat i s fac tory  generat ioncomponent ,  as wel l  as tools  -such as b i /mul t i - l ingua l  lexi-cal access  and t rans fer  -spec i f i ca l ly  c ra f ted  for usein mach ine  t rans la t ionresearch.
Substant ia l  f rag-ments  of German and Frenchdeve loped in ud are a l readyoperat iona l .There is a lso a r ich userenv i ronment ,  of which spacel im i ta t ions  prec lude  d iscus-sion here, inc lud ing t rac ingand debugg ing  tools  and avar ie ty  of in teract iveparameter i sa t ions  for modi fy -ing run- t ime behav iour  andper formance.
The whole  pack-age runs on Suns, and we havebegun to work  on por tab i l i tySag I and C Po l lard  (1987).Head-Dr iven  Phrase St ructureGrammar:  an Informal  Synops is .CSLI Report  ~ CSL I -87-79.Sh ieber  S (1984).
'Thedes ign of a computer  languagefor l ingu is t ic  in format ion ' .P roceed ings  of Col ing 84.AcknowledgementsWe thank the Fondaz ione  Dal leMol le,  Su isset ra  and theUn ivers i ty  of Geneva for sup-por t ing  the work  repor ted  inthis paper.
We are gratefu lto all our former co l leaguesin ISSCO, and to all ud usersfor their  he lp  and encourage-ment.
Special  thanks are dueto C.J.
Rupp for being a wi l -l ing and const ruct ive  gu inea-pig, as well  as for a l low ingus to p lunder  his work  forGerman examples.- 189  -
