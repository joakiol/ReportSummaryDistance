UNIT-TO-UNIT INTERACTION AS A BASIS FOR SEMANTIC INTERPRETATIONOF JAPANESE SENTENCESHozumi TANAKAELECTROTECHNICAL LABORATORY, 1-1-4 UMEZONO, SAKURA-MURA, NIIHARI-GUN,IBARAKI-KEN, JAPANABSTRACT: The notion of UNIT-to-UNIT inter-action is introduced to analyse dependencyrelations between words in a sentence.
A UNITis a basic framework for concept representationand is composed of many slots.
After generatinga parsed tree from an input sentence, our se-mantic interpretation begins traversing.the treefrom right to left to discern the case frame ina stage as early as possible, since Japanese isa language in which verb is in the sentence-final and has a case frame.
UNIT-to-UNIT inter-action, which is performed at each node of theparsed tree, follows a bottom-up progression.There are UNIT descriptions at terminal (bottom)nodes and the UNIT descriptions are modified ormerged into other UNITs in the course of theinteraction.
The results of the interactionwill be transferred to upper nodes.
The inter-action process continues on upward until thetop node; at this point, the semantic structureof the input sentence is finally obtained.
Thenotion of UNIT-to-UNIT interaction is feasiblyapplicable to semantic interpretation ofEnglish.i.
INTRODUCTIONSemantic processing is very important forus to build a natural language (NL) under-standing system.
It will be true that semanticstakes precedence over syntax when human beingsunderstand language.
Based on this assumption,some NL understanding system designers havetotally abandoned the traditional use ofgrammars for linguistic analysis.
They arebased on special procedures of semantic inter-pretation to build up semantic structures, andthe result of syntactic parsing is not used.Such systems without grammar often lackformalism.We should not totally abandon a traditionaluse of grammars for linguistic analysis, sinceresults of syntactic parsing fill the gap be-tween an input sentence and its semanticstructure.
We have developed Extended LINGOL\[13,12\] that is the extended version of Pratt'sLINGOL \[8,9\].
Pratt's LINGOL has a very goodformalism to merge syntactic and semanticinformation.
The idea is that the result ofsyntactic parsing, a parsed tree, is consideredas a program tree which is evaluated at the timeof semantic interpretation.
In the course ofthe interpretation, UNIT-to-UNIT interactionsare performed.
Thus a parsed tree of LINGOLcorresponds to an analysis tree of Montaguegrammar and the evaluation phase of the parsedtree is analogous to the translation phase ofMontague grammar \[3\] (See the See.6).Our Extended LINGOL inherits the semanticinterpretation method from the original Pratt'sLINGOL.
After generating a parsed tree from aninput sentence, semantic interpretation is setout.
The parsed tree is composed of context-free rules to each of which a LISP program isattached.
In other words, at each node of thetree, there is a program for making semanticinterpretation.
As will be explained in theSec.
5.,UNIT-to-UNIT interaction will takeplace at each node of the program tree.
Theinteraction process continues on upward untilthe top node, at which it stops getting theresults of the semantic interpretation.2.
4SEM>-PROGRAM TREE AND PARSED TREEOur Extended LINGOL produces a parsed treeusing both grammar and dictionary.
The formatof our grammatical rule is:~<left> <right> i<advice> <cog>~ <sem>~.The left-right pair represents acontext-free rule in the form of A - -> B orA > B C. The <advice>, which is introducedinto our Extended LINGOL, is an arbitrary LISPprogram for controlling parsing process \[13\].The role of <cog> and <sem> is the same asthat of Pratt's LINGOL \[9\].
The <sem> is anyLISP program to perform semantic interpretation.The Pratt's LINGOL offers us a flexible methodof semantic interpretation.In order to understand UNIT-to-UNIT inter-action, we will briefly illustrate the inter-pretation method.
By means of <sem> attached toeach (augmented) context-free rule, we canobtain a <sem>-program tree from a parsed tree.Consider the following very simple example.The input sentence is "iOKGNOOMOSANOMIZU (waterof i0 kg)',, grammatical rules are:(NP (NLNK NP) ( .
.
. )
<S-exprl>)(NLNK (NOUN NO) ( .
.
. )
<S-expr2>)(NP NOUN (...) <S-expr3>)(NOUN (NPOS2 NOUN) (...) <S-expr4>)(NPOS2 (QUANT NO) ( .
.
. )
<S-exprS>)(QUANT (NUMB UNIT) (...) <S-expr6>)and dictionary entries are:383--F lg , I  MPINLHK - - -Z  .
.
.
.
.
.
.
.
.
.
.
.
.
.
NP!NOUN .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
NONPOS2 .
.
.
.
.
.
.
.
.
.
.
.
.
NOUNQUAMT .
.
.
.
.
.
.
.
.
.
NONUMB ..... UNIT !tO KQ NO OMOgA!!
NoUNt !NO MIZUF t~.E(a )  (~-ex~r i>(S-exprS> .......... (S-exp.3}(S-exit4) .
.
.
.
(S -mxprB)  <S-~xp~le)<S-exprS> .
.
.
.
(S -exp~9)!<S-expr6)  .... {S-exprS)llO ........ ($-exprT)Ft~,~(b)<S-expr l>  !
(~-e?pr2> !!
(S-exp.4) !t!
($-exprS> !!
!<S-expr6)  !!
B + .
.
.
.
.
.
.
.
.
.
.
.
+t t ~ i@,  !!
!
!<$-exp~7)  tt !
~KQ!
+--+ ............ +!
!<S-exprS)  I+--+ .
.
.
.
.
.
.
.
- .
.
.
.
.
.
?!
(S -exprg)  !
!OMOSA !+--+ .
.
.
.
.
.
.
.
.
.
.
.
.
~ .
.
.
.
4!
(~-expr8)  !
!NO !+-- -+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?\ ] (S -expr3> !!
!!
+ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.!
!<~-expr i~> !
(KG UNIT (...) <S-expr7>)(NO NO (...) <S-expr8>)(OMOSA NOUN (...) <S-expr9>)(MIZU NOUN (...) <S-exprl0>).Fig.l is a parsed tree of"iOKGNOOMOSANOMIZU."
Fig.2(a) is a <sem>-program tree obtained from Fig.l.
Fig.2(b) isthe nesting structure of the <sem>-program treeof Fig.2(a) which defines the scope ofvariables.
At lower nodes, we see values ofvariables at upper nodes.
For instance, fro~<S-exprA>, one can refer to the value ofvariables in <S-expr2> and <S-exprl>.Semantic interpretation begins with theevaluation of S-expression at the top node.There are several built-in functions two ofwhich are LG and RG, which are evaluated at each<sem>-tree node with left and right branches.The evaluation sequence of LG and RG determinesthe evaluation sequence of S-expressions atone-level-lower nodes.
For example, in<S-exprl>, if the evaluation of RG precedesthat of LG, <S-expr3> is evaluated and then<S-expr2>.
The result of RG evaluation becomesequal to that of <S-expr3> evaluation.Usually, at each node of the <sem>-program tree,UNIT-to-UNIT interaction takes place and theresults of the interaction are transferred toone- leve l -upper  node.
As will be explainedbefore ,  the  ro le  o f  a parsed  t ree  i s  s imi la r  tothat  o f  an ana lys i s  t ree  o f  Montague grammar.3.
UNIT DESCRIPTIONA UNIT is a basic framework for concept re-presentation and is composed of many slots.Our UNIT description incorporates some usefulfeatures from KRL \[i\] which was developed byBobrow and Winograd.
Fig.3(a) is an example ofour UNIT descriptions.
(MIZU unit ...(self (a EKITAI))(sf +natural)?
.
.
.
, .
.
.
.
.
.
.
.
.
.
?
.
.
.
, )(EKITAI unit ...(self (a BUSSITU))(sf +natural).
, , .
.
.
.
.
.
.
.
.
.
, .
.
.
.
?
, )(BUSSITU unit ...(self ...)(sf)(OMOSA ((%value (a OMOSA)).
.
.
.
.
.
.
.
.
.
.
.
.
(OMOSA un i t  .
.
.
( se l f  .
.
.
)(sf .
.
.
)(VALUE ((%value (a OMOSA))<act ion - l>).
,  .
, o .
?
.
.
.
.
.
.
.
.
, .
.
.
.
)Fig.3(a)(KG unit ...(self (a OMOSA))(sf %unit) ...... )-NO) )-NO)--384V?(~IZU(?)
---> EKITAI(x)) I Vx(~ater(x) ---> l lquld(x))Vx(EKITAI(x) ---> BUSSITU(x)) I Vx(l lqutd(x) - - - )  materlal(x))Vx(HAKO(x) ---> KOTQI(x)) 1 Vx(box(x) ---> solid(x)).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
I .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Bg dl~jolntneee of same level UNIT:)Vx(EKITAI(x) ---> ~KOTAI(x)) I Vx(tiqUid(x) - - - )  ~ot ld (x ) )For eeman~Ic tea?uree In "e l ' '~x(+na~ural(x) ---) +\[iVlng(x) V -\[IVlng(x))~x(-natural(x) ---) -living(x)).
.
.
.
.
.
, , .
.
.
.
.
.
.
.
, , , , ,Vx(+llving(x) --->~-tlulng(x)), .
, ' 4 .
, , .
.
.
.
.
.
.
~ , , .Fiff.3(lo)The "self" slot which is present in eachUNIT description enables us to understand theUNIT framework as a whole.
As in KRL, the"self" slot is used for the hierarchicalorganization of UNITs and enables all infor-mation (slots) to transfer from superordinateUNIT to subordinate UNITs.
For example, the"self" slot in MIZU (water) UNIT indicates thatthe superordinate UNIT of MIZU (water) is EKITAI(liquid).Our UNIT descriptions are slightly differ-ent from KRL descriptions.
Semantic featuresare incorporated into each special slot named"sf".
The "sf" slot in MIZU (water) indicatesthat the semantic feature of MIZU is \[+natural\].In order to express gross semantics of aUNIT description, we can use logical expressionsof first-order predicate calculus.
For example,gross semantics of MIZU UNIT is expressed as:<precondition> .. > <action>.As will be explained later, <precondition> and<action> act as though they are to-fill andwhen-filled method of KRL \[i\].Two UNITs, which relate to each other inUNIT-to-UNIT interaction, are cilled FILLER andORIGIN.
During the interaction, FILLER mustsatisfy some slot of ORIGIN.
<Precondition>specifies conditions of FILLER filled in theslot.\[A\] <PRECONDITION>In order to satisfy some slot of ORIGIN,FILLER has to satisfy the <percondition>, whichspecifies not only semantics of FILLER but alsoJapanese surface cases that can follow FILLER inthe sentence.
<Precondition> is divided intotwo parts, <f-constraint> and <J-case>:> MIZU (UNIT)> +natural (UNIT).Hierarchical organization of UNITs is expressedas a set of logical entailments \[I0\].
Forexample, from Fig.
3(a) we will have Fig.3(b).We can regard Fig.3(b) as a set of axiomswhich is used in performing UNIT-to-UNITinteractions.
The details will be explained inthe Sec.5.<precondition>::= i<f-constraint> ?
<J-case>\[.Semantics of FILLER is expressed by<f-constraint>.
On the other hand, Japanesesurface cases, which can follow FILLER in asentence, are specified in <J-case>.For example, in BUSSITU (material) UNIT ofFig.3(a), there is an <unsatisfied> slot:(OMOSA ((%value (a OMOSA)) - -NO)).4.
ORDINARY SLOTMost UNITs include a block of ordinaryslots which are classified into two categories,<satisfied> and <unsatisfied>:<ordinary-slot>::= <satisfied>l<unsatisfied>.The format of two ordinary slots is:<satisfied>::=i<slot-name>=<value>~<unsatisfied>::=~<slot-name><precondition> (<action>)~.As a proeedual attachment \[i\], we use a pro-duction rule \[2,7\].
A pair of <precondition>and <action> expresses a production rule in theform of:The <slot-name> and <precondition> are OMOSA(weight) and ((%value (a OMOSA)) -NO),respectively.
The <f-constraint> and <J-case>are (%value (a OMOSA)) and (- -NO),respectively.
The <f-constraint> is expressedas follows:> %value(FILLER)A OMOSA(FILLER).
(Note that logical "and" is always omitted inthe description of <f-constraint>.)
It ispossible to describe any we~l-formed formula byusing @OR and @NOT in <f-constraint>.
Forexample, (%value (@OR (a WEIGHT) (a VOLUME))) isexpressed as:- ->  %value(FILLER) ^ (WEIGHT(FILLER) VVOLUMECFILLER)).- -385- -The <J-case> of (- -NO) describes what aJapanese surface case is allowed to followFILLER in ~ sentence.
"-" indicates none ofJapanese surface cases should follow FILLER, and"-NO" indicates that Japanese surface case NO("of") should follow FILLER.\[B\] <ACTION>After FILLER satisfies the <precondition>of some ordinary slot, the <action> which isany LISP program is activated.
Typical effectsof <action> are:(i) Modification of UNITs and slots(2) Creation of new UNITs and new slots(3) Deletion of UNITs and slots.If no <action> is specified, the <unsatisfied>slot becomes <satisfied> slot, whose <value>becomes FILLER's name but the <slot-name>remains unchanged.5.
UNIT-to-UNIT INTERACTIONAs explained before, UNIT-to-UNITinteraction usually occurs at each node of<sem>-program tree.
In other word, thestructure of <sem>-program tree determines whatUNITs should be interacted to each ~ther.
Forexample, at <S-expr4> of Fig.2(b), both UNITsof "IOKG" and "OMOSA (weight)" are related byUNIT-to-UNIT interaction.Two UNITs, which relate to each other inUNIT-to-UNIT interaction, are called FILLER andORIGIN.
During the interaction, FILLER mustsatisfy some <unsatisfied> slot of ORIGIN.
Ifit is impossible to find out any satisfiableslot in ORIGIN, superordinate UNITs of ORIGINwill be retrieved through "self" until somesatisfiable slot will be found.
The satis-fiability is determined by FILLER and<precondition> in an ordinary slot of ORIGIN.At first, a surface case which followsFILLER is checked by using <J-case> in<precondition>.
If this checking succeeds, thenthe semantics of FILLER is checked by using<f-constraint> in <precondition>.
Thesecheckings are expressed as follows:Given the semantics of FILLER and aset of axioms as shown in Fig.3(b), thenexamine whether <f-constraint> hold or not.Let us consider two simple examples.
Asexplained before, at <S-expr4> of Fig.2(b), thefollowing two UNITs are interacted to eachother:FILLER:((i0 KG) unit ...(self (a OMOSA)) ...)ORIGIN:(OMOSA unit ...(VALUE ((%value (a OMOSA)) - -NO)<action-l>).
.
.
.
.
.
, .
.
.
.
.
.
.o .
.
. )
.In this case, if a Japanese surface case ofNO ("of") follows FILLER, then FILLER can satis-fy VALUE-slot of (VALUE ((%value (a OMOSA)) --NO) <action-l>), since the semantics of FILLERis:> OMOSA(FILLER) ;+ %value(FILLER).and it is easy to show that the following<f-constraint> holds:?
> OMOSA(FILLER) A %value(FILLER).If the VALUE-slot is satisfied by FILLER,<action-l> will be activated to make furthersemantic interpretation if necessary.
Let usconsider another example:FILLER:(MIZU unit ...(self (a EKITAI))(sf +natural).
.
.
.
.
.
, .
.
?
.
?
.
* .
.
)ORIGIN:(SOSOGU unit ...(self ...)?
.
.
.
.
.
.
, .
(THEME ((a EKITAI) -WO)).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
)where the words, SOSOGU, EKITAI and MIZU inJapanese are POUR, LIQUID and WATER in English,respectively.If a Japanese surface case of WO followsFILLER, the slot (THEME ((a EKITAI) -WO)) issatisfied by FILLER, because the semantics ofFILLER is:---> MIZU(FILLER) ;---~ +natural(FILLER)and from a set of axioms as shown in Fig.3(b),we get~x (MIZU (x) ~> EKITAI (x) ) .It is easy to show that the following<f-constraint> holds:> EKITAI(FILLER).As the result of the interactions, the slotof (THEME ((a EKITAI) -WO)) becomes a<satisfied> slot of (THEME = MIZU).6.
SIMPLE EXAMPLE OF SEMANTIC INTERPRETATIONBY UNIT-to-UNIT INTERACTIONLet us trace semantic interpretation- 386process by UNIT-to-UNIT interaction, providedthat the input sentence is "IOKGNOOMOSANOMIZU.
"The parsed tree and its <sem>-program tree areshown in Fig.l, Fig.2(a) and Fig.2(b).Depending on the evaluation sequence of LG andRG, we can traverse <sem>-program tree in anyorder (see the Sec.2).
Suppose <sem>-program ofFig.2(a) is traversed as shown by the arrow ofFig.4.Ftq.4.\[g\] I@ KG HO OMOSA HO MIZU< 5 - e x p r l >i@ KQ NO OMOSA NO !
\ [ /3 MIZO<5-expr2> .. .
.
.
.
.
.
.
.
<S-expr3)/ , i?
IZU .
, \ [e \ ]  i@ KG HO OMOSA I NO I<5-expr4> .... {$ -~xprB)}~i@ KG HO !
Ed\] OMOSA~ Ec\]<S-~xprS> .... (S-exprg)?\[b\] I@ KG !
NO<5-ex~r6) .... <S-exprB)!
\[a\] KQ...... <S-expr .Trace of UNIT-to-UNIT interaction becomes asfollows:\[a\] KG ~ Create KG UNIT(KG unit ... at <S-expr7>.
(self (a OMOSA))(sf %unit) ...... )\[b\] i0 KG ~ At <S-expr6>,((i0 KG) unit ... i0 and \[a\] are(self (a OMOSA)) merged.
(sf %value) ..... )\[c\]\[d\]i0 KG NO.
> \[b\] and NO At <S-expr5>.OMOSA ~ Create OMOSA((N000001 .
OMOSA) UNIT at <S-exprg>.unit ...(self ...)(sf ...).
, ?
.
.
.
.
?
(VALUE ( (%value (a OMOSA))  - -NO)<action-l>).
?
.
, .
.
.
.
, , ?
, .
.
?
.
)Eel i0 KG NO OMOSA___~((i0 KG) unit ...(self (a OMOSA))(sf %value) ...)At <S-expr4>,UNIT-to-UNITinteraction occursbetween FILLER \[b\]and ORIGIN \[d\].VALUE-slot of \[d\]is satisfied byFILLER and<action-l> isactivated toremove UNIT \[d\],since OMOSA isredundant in thiscase.\[f\] MIZU ~_-->((NO00002 .
MIZU)un i t  .
.
.
(self (a EKITAI))(sf +natural).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Create MIZU UNITat <S-exprl0> andsend it to<S-expr3>.\[g\] i0 KG NO OMOSA NO MIZU.__~> ((N000002 .
MIZU)unit ...(self(a EKITAI with(OMOSA =( i0  KG))))( s f  +natura l ).
.
.
.
.
.
.
.
.
.
.
.
.
.
.At <S-exprl>,UNIT-to-UNITinteraction occursbetween FILLER \[b\]and ORIGIN El).There is no<unsatisfied> slotin MIZU UNIT, sosuperordinateUNITs are re-trieved and aOMOSA-slot isfound in BUSSITUUNIT (seeFig.3(a)).7.
CONCLUSIONIn order to explain a basic notion ofUNIT-to-UNIT interaction, we showed a verysimple example in the Sec.6.
Based on the idea,we have implemented a semantic interpretationsystem called EXPLUS \[12,14\].
Our experimentsby EXPLUS proved that EXPLUS can extractsemantic strucures from rather complicatedJapanese sentences.
Sato uses in turn thesemantic structures as a source to generateJapanese sentences\[ll\].
However, we have neededmore refinements for UNIT description.
Forexample, we have augmented following features tothe UNIT description described in the Sec.3.
(a) Incorporation of arbitrary LISPprograms in <precondition> through which wecan specify FILLER's semantics in any levelof details;(b) A special slot "part-of" to organizepart-whole relations \[5\];(c) "Without" and "selector" descriptionsto exclude undesirable slots in thesuperordinate UNITs.They are related to the problems ofknowledge representation.
The details of (a)-(c) will be explained in \[14\].
In \[14\], morecomplex examples of UNIT-to-UNIT interactionwill be explained.From our experience, we believe thatUNIT-to-UNIT interaction gives us a reasonableframework for semantic interpretation, and willbe feasibly applicable to other kinds oflanguages such as Egnlish.387ACKNOWLEDGEMENT: The author is grateful toDr.
Fuchi, Head of the Pattern InformationDivision of Electrotechnical Laboratory, for hispatient encouragement of this study.
Thanks arealso due to all members of the Machine InferenceSection of Electrotechnical Laboratory, fortheir valuable discussions.REFERENCES:\[i\] Bobrow,D.G.
and Winograd,T.
: "An Overviewof KRL, a Knowledge Representation Language",Cognitive Science, Vol.l, No.l, 1977.\[2\] Davis,R.
and King,J.
: "An Overview ofProduction Systems", Stanford AIM-271, 0ct.1975.\[3\] Dowty,D.R.
: "A Guide to Montague's PTQ",Indiana University Linguistic Club, Dec. 1978.\[4\] Fillmore,C.J.
: "The Case for Case", inBach and Harms (Eds): "Universals in LinguisticTheory", Holt, Rinehart and Winston, 1968.\[5\] Miller,G.A.
and Johnson-Laird,P.N.
:"Language and Perception", Harvard Univ.
Press,1976.\[6\] Minsky,M.
: "Framework for RepresentingKnowledge", in Winston (Ed.
): "The Psychology ofComputer Vision", McGrow-Hill, 1975.\[7\] Newell,A.
: "Productions Systems: Modelsof Control Structures", in Chase,W.G.
(Ed.
):"Visual Information Processing", Academic Press,1973.\[8\] Pratt,V.R.
: "A Linguistic OrientedProgramming Language", IJCAI3, 1973, 372-381.\[9\] Pratt,V.R.
: "LINGOL-A Progress Report",IJCAI4, 1975, 422-428.\[i0\] Reiter,R.
: "On Reasoning by Default", inWaltz (Ed.
): TINLAP2, 1978, 210-218.\[ii\] Sato,T.
: "SGS: A System for MechanicalGeneration of Japanese Sentences", Proc.
ofCOLING80, 1980, (in this volume).\[12\] Tanaka,If., Sato,T.
and Motoyoshi,F.
:"EXPLUS-A Semantic Parsing System for JapaneseSentences", 3rd USA-JAPAN Computer Conference,1977, 236-240.\[13\] Tanaka,H., Sato,T.
and Motoyoshi,F.
:"Predictive Control Parser: Extended LINGOL",IJCAI-79, 1979, 868-870.\[14\] Tanaka,H.
: "A Semantic Processing Systemfor Natural Language Understanding", ResearchNo.797, Electrotechnical Laboratory, July, 1979(in Japanese).\[15\] Wilks,Y.
: "An Artificail IntelligenceApproach to Machine Translation", in Schank andColby (Eds.
): "Computer Models of Thought andLanguage", Freeman and Company, 1973.\[16\] Winograd,T.
: "Understanding NaturalLanguage", Academic Press, 1972.- 388
