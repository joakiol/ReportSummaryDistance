RDF Instantiation of ISLE/MILE Lexical EntriesNancy IdeDepartment of ComputerScienceVassar CollegePoughkeepsie, New YorkUSA 12604-0520ide@cs.vassar.eduAlessandro LenciUniversit?
di PisaDipartimento di LinguisticaVia Santa Maria 3656100 PISAItalylenci@ilc.cnr.itNicoletta CalzolariIstituto di LinguisticaComputazionale, CNRArea della RicercaVia Moruzzi 1 ?
56100 PISAItalyglottolo@ilc.cnr.itAbstractIn this paper we describe the overallmodel for MILE lexical entries andprovide an instantiation of the model inRDF/OWL.
This work has been donewith an eye toward the goal of creating aweb-based registry of lexical datacategories and enabling the description oflexical information by establishingrelations among them, and/or using pre-defined objects that may reside at variouslocations on the web.
It is also assumedthat using OWL specifications to enhancespecifications of the ontology of lexicalobjects will eventually enable theexploitation of inferencing engines toretrieve and possibly create lexicalinformation on the fly, as suited toparticular contexts.
As such, the modeland RDF instantiation provided here arein line with the goals of ISO TC37 SC4,and should be fully mappable to theproposed pivot.1 IntroductionThe eventual vision for computational lexicons isto enable universal access to sophisticatedlinguistic information, which in turn will serve as acentral component for content-based informationmanagement on the web.
This demands, first of all,some standardized means to represent complexlexical information while retaining the flexibilityrequired to accommodate diverse approaches tolexicon organization and use.
To this end, theISLE1( International Standards for LanguageEngineering) Computational Lexicons WorkingGroup (CLWG) has designed MILE (MultilingualISLE Lexical Entry), a general schema for theencoding of multilingual lexical informationintended as a meta-entry that can serve as astandardized representational layer for multilinguallexical resources.
MILE consists of an incrementaldefinition of object-oriented layers for lexicaldescription that will enable open and distributedlexicons, with elements possibly residing indifferent sites of the web.
The defined lexicalobjects are intended for use by lexicon andapplication developers to build and target lexicaldata at high level of abstraction.The Resource Definition Framework (RDF) andthe Ontology Web Language (OWL) recentlydeveloped by the World Wide Web Consortium(W3C) build upon the XML web infrastructure toenable the creation of a Semantic Web, whereinweb objects can be classified according to theirproperties, and the semantics of their relations(links) to other web objects can be preciselydefined.
This in turn will enable powerfulinferencing capabilities that can adapt languageprocessing applications to particular contexts.The MILE lexical entry is an ideal structure forrendering via RDF/OWL.
It consists of a hierarchyof lexical objects that are built up in a layeredfashion by combining atomic data categories viaclearly defined relations.
The overall architecture ismodular and layered, as described in Atkins et al1ISLE Web Site URL:lingue.ilc.pi.cnr.it/EAGLES96/isle/ISLE_Home_Page.htm(2002) and Calzolari et al (2003).
On thehorizontal dimension, independent, linked modulestarget different dimensions of lexical entries.
Onthe vertical dimension, the layered organizationallows for varying degrees of granularity in lexicaldescriptions, allowing both ?shallow?
and ?deep?lexical representations.
RDF?s class hierarchymechanism, together with its capacity to specifynamed relations among objects in the variousclasses, provide a web-based means to representthis architecture.2Furthermore, because RDFallows for instantiating objects in any defined classand subsequently referring to them as the target ofappropriate relations, lexical objects at any level ofspecificity can be pre-defined.
This provides animportant mechanism for standardization of lexicalelements, since these elements may be pre-defined,organized in class hierarchies with inheritedproperties, and used ?off-the-shelf?
as needed.In this paper we describe the overall model forMILE lexical entries and provide an instantiationof the model in RDF/OWL.
This work has beendone with an eye toward the goal of creating aweb-based registry of lexical data categories andenabling the description of lexical information byestablishing relations among them, and/or usingpre-defined objects that may reside at variouslocations on the web.
It is also assumed that usingOWL specifications to enhance specifications ofthe ontology of lexical objects will eventuallyenable the exploitation of inferencing engines toretrieve and possibly create lexical information onthe fly, as suited to particular contexts.
As such, themodel and RDF instantiation provided here are inline with the goals of ISO TC37 SC4, and shouldbe fully mappable to the proposed pivot.32 The MILE Lexical ModelThe MILE Lexical Model (MLM) consists of twoprimary components: a mono-lingual componentand a multi-lingual component.
The mono-lingual2It should be noted that this architecture is analogous toother data models, including ER diagrams and variousknowledge representation schemes.3We have in fact produced a version of the prototypeISLE lexical entry in an XML format instantiating theproposed ISO pivot format (Ide and Romary,Vassar/LORIA internal document).component comprises three layers: morphological,syntactic, and semantic.
The overall architecture isshown in Figure 1.Within each of the MLM layers, two types ofobjects are defined:1.
MILE Lexical Classes (MLC): the mainbuilding blocks of lexical entries.
Theyformalize the basic lexical notions for eachlayer defined in the ISLE project (Calzolari etal.
2003).
The MLM defines each class byspecifying its attributes and the relationsamong them.
Classes represent notions likesyntactic feature, syntactic phrase, predicate,semantic relation, synset, etc.
Instances ofMLCs are the MILE Data Categories (MDC).So for instance, NP and VP are data categoryinstances of the class <Phrase>, and SUBJ andOBJ are data category instances of the class<Function>.
Each MDC is identified by a URI.MDC can be either user- defined or reside in ashared repository.2.
lexical operations: special lexical entitieswhich allow users to state conditions andperform complex operations over lexicalentries.
They will for instance allowlexicographers to establish multilingualconditions, link the slots within two differentsyntactic frames, link semantic arguments withsyntactic slots, etc.The MLM is described with Entity-Relationship(E-R) diagrams defining the entities of the lexicalmodel and the way they can be combined to designan actual lexical entry.
As such, the MLM does notcorrespond to a specific lexical entry, but is ratheran entry schema corresponding to a lexical meta-entry.
This means that different possible lexicalentries can be designed as instances of the schemaprovided by the MLM.
Instance entries mighttherefore differ for the type of information theyinclude (e.g.
morphological, syntactic, semantic,monolingual or multilingual, etc.
), and for thedepth of lexical description.Figure 2 depicts the MLM classes and relations forthe syntactic layer (SynU for ?syntactic unit?).
Fulldefinitions for the MLM can be found in the ISLEdocument (Calzolari et al 2003).Figure 1.
Overall MILE architectureMLC:SynUid: xs:anyURYcomment: xs:stringexample: xs:stringMLC:SyntacticFramehasSyntacticFrame1..*MLC:FrameSetCompositionhasFrameSet**composedByMLC:SemUcorrespondsTo*CorrespSynUSemUFigure 2.
Lexical classes and their relations for the syntactic layer (SynU)morphologicallayersyntactic layersemantic layerlinking conditionsmono-Milemulti-MILEmultilingualcorrespondenceconditionsmono-Mile3 RDF instantiationWe have created an RDF schema for thesyntactic layer of the ISLE/MILE lexical entryand instantiated one entry in several alternativeforms to explore its potential as a representationfor lexical data that can be integrated into theSemantic Web.
The following describes thevarious components.3.1.1 RDF schema for ISLE lexical entriesAn RDF schema defines classes of objects andtheir relations to other objects.
It does not initself comprise an instance of these objects, butsimply specifies the properties and constraintsapplicable to objects that conform to it.The RDF schema for the syntactic layer of ISLElexical entries can be accessed athttp://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6.
The classes and relations (properties)defined in the schema correspond to the ERdiagrams in Calzolari et al (2003).
The schemaindicates that there is class of objects calledEntry; a property declaration indicates that therelation hasSynU holds between Entry objectsand SynU  objects.
Note that classes can bedefined to be subclasses of other classes, inwhich case properties associated with the parentclass are inherited.
In the ISLE schema, forexample, the objects Self and SlotRealizationare defined to be sub-classes of PhraseElement,and the hasPhrase property holds between anyobject of type PhraseElement (including itssub-classes) and objects of type Phrase.The ISLE RDF schema and entries have beenvalidated using the ICS-FORTH Validating RDFParser (VRP v2.1), which analyzes the syntax ofa given RDF/ XML file according to the RDFModel and Syntax Specification4and checkswhether the statements contained in both RDFschemas and resource descriptions satisfy thesemantic constraints derived by the RDF SchemaSpecification.54http://www.w3.org/TR/rdf-syntax-grammar/5http://www.w3.org/TR/rdf-schema/4  ISLE Lexical Entries and the DataCategory RegistryAppendix A contains three versions of the SynUdescription for ?eat?, instantiated as RDFobjects.
The first is a ?full?
version in which allof the information is specified, including atomicvalues (strings) at the leaves of the tree structure.The second two versions, rather than specifyingall information explicitly, rely on the existenceof a Data Category Registry (DCR) in whichpre-defined lexical objects are instantiated andmay be included in the entry by a directreference.The potential to develop a Data CategoryRegistry in which lexical objects are instantiatedin RDF is one of the most important for thecreation of multi-lingual, reusable lexicons.
Itallows for the following:1. specification of a universally accessible,standard set of morphological, syntactic, andsemantic information that can serve as areference for lexicons creators;2. a fully modular specification of lexicalentities that enables use of all or parts of thelexical information in the repository asdesired or appropriate, to build morecomplex lexical information modules;3. a template for data category description thatlexicon creators can use to create their owndata categories at any level of granularity;4. means to reuse lexical specifications inentries sharing common properties, therebyeliminating redundancy as well as providingdirect means to identify lexical entries orsub-entries with shared properties;5. a universally accessible set of lexicalinformation categories that may be used inapplications or resources other than lexicons.Note that the existence of a repository of lexicalobjects, instantiated and specified at differentlevels of complexity, does not imply that theseobjects must be used by lexicon creators.
Rather,it provides a set of ?off the shelf?
lexical objectswhich either may be used as is, or which providea departure point for the definition of new ormodified categories.The examples in Appendix A provide a generalidea of how a repository of RDF-instantiatedlexical objects can be used.
Sample repositoriesat three different levels of granularity,corresponding to the examples in Appendix A,are given in Appendix B:1. a repository of enumerated classes forlexical objects at the lowest level ofgranularity; this comprises a definition ofsets of possible values for various lexicalobjects.
Any object of this type must beinstantiated with one of the listed values.2.
a repository of phrase classes whichinstantiate common phrase types, e.g., NP,VP, etc.3.
a repository of constructions containinginstantiations of common syntacticconstructions (e.g., for verbs which are bothtransitive and intransitive, as shown in theexample).The example entries demonstrate three differentpossibilities for the use of information in therepositories:1.
Entry 1 uses only the enumerated classes inthe LDCR for SynFeatureName andSynFeatureValue.
Note that in this case, theLDCR only provides a closed list of possiblevalues, from which the assigned value in theentry must be chosen.2.
Entry 2 refers to instances of phrase objectsin the LDCR rather than including them inthe entry; this enables referring to a complexphrase (Vauxhave in the example) ratherthan including it directly in the entry, andprovides the potential to reuse the sameinstance by reference in the same or otherentries (this is done with N P  in theexample).3.
Entry 3 takes advantage of constructioninstances in the LDCR, thus eliminating thefull specification in the entry and, again,allowing for reuse in other entries.5 SummaryThis exercise is intended to exemplify how RDFmay be used to instantiate lexical objects atvarious levels of granularity, which can be usedand reused to create lexical entries within asingle lexicon as well as across lexicons.
Byrelying on the developing standardizedtechnologies underlying the Semantic Web, weensure universal accessibility and commonality.Ultimately, lexical objects defined in this waycan be used not only for lexicons, but also inlanguage processing and other applications.This example serves primarily as a proof ofconcept that may be refined and modified as weconsider in more depth the exact RDFrepresentation that would best serve the needs oflexicon creation.
However, the potential ofexploiting the developments in the SemanticWeb world for lexicon development should beclear.
More importantly, by situating our work inthe context of W3 standards, we are in step withISO TC37/SC4 vision of a Linguistic AnnotationFramework that includes a Data CategoryRegistry of the type we describe here.ReferencesAtkins, S., Bel, N., Bertagna, F., Bouillon, P.,Calzolari, N., Fellbaum, C., Grishman, R., Lenci,A., MacLeod, C., Palmer, M., Thurmair, G.,Villegas, M., Zampolli A., 2002.
?FromResources to Applications.
Designing theMultilingual ISLE Lexical Entry?, Proceedingsof LREC 2002, Las Palmas, Canary Islands,Spain: 687-693.Calzolari, N., Bertagna, F., Lenci, A.,Monachini, M., 2003.
Standards and bestPractice for Multilingual ComputationalLexicons and MILE (Multilingual ISLE LexicalEntry), ISLE Computational Lexicon WorkingGroup deliverables D2.2 ?
D3.2, Pisa.Appendix A: Sample EntriesENTRY 1 : Full entryHighlighted lines refer to objects whose values are constrained in DCR definitions (Appendix B).<?xml version="1.0"?><!-- Sample ISLE lexical Entry for EAT (transitive), SynU onlyAbbreviated syntax version using no pre-defined objects2002/10/23 Author: Nancy Ide --><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns:mlc="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"xmlns="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><Entry rdf:ID="eat1"><!-- The SynU for eat1 --><hasSynu rdf:parseType="Resource"><SynU rdf:ID="eat1-SynU"><example>John ate the cake</example><hasSyntacticFrame><SyntacticFrame rdf:ID="eat1SynFrame"><hasSelf><Self rdf:ID="eat1Self"><headedBy><Phrase rdf:ID="Vauxhave"><hasSynFeature><SynFeature><hasSynFeatureName rdf:value="aux"/><hasSynFeatureValue rdf:value="have"/></SynFeature></hasSynFeature></Phrase></headedBy></Self></hasSelf><hasConstruction><Construction rdf:ID="eat1Const"><slot><SlotRealization rdf:ID="NPsubj"><hasFunction rdf:value="Subj"/><filledBy rdf:value="NP"/></SlotRealization></slot><slot><SlotRealization rdf:ID="NPobj"><hasFunction rdf:value="Obj"/><filledBy rdf:value="NP"/></SlotRealization></slot></Construction></hasConstruction><hasFrequency rdf:value="8788" mlc:corpus="PAROLE"/></SyntacticFrame></hasSyntacticFrame></SynU></hasSynu></Entry></rdf:RDF>ENTRY 2 : Using DCR categories for PHRASEThe highlighted lines refer to pre-instantiated lexical objects.
A portion of the LDCR for Phrases is givenin Appendix C. The URL reference is to the actual web address where the object is instantiated.<?xml version="1.0"?><!--Sample ISLE lexical Entry for EAT (transitive), SynU onlyAbbreviated syntax version using no pre-defined objects2002/10/23 Author: Nancy Ide --><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns:mlc="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"xmlns="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><Entry rdf:ID="eat1"><!-- The SynU for eat1 --><hasSynu rdf:parseType="Resource"><SynU rdf:ID="eat1-SynU"><example>John ate the cake</example><hasSyntacticFrame><SyntacticFrame rdf:ID="eat1SynFrame"><hasSelf><Self rdf:ID="eat1Self"><headedBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#Vauxhave"/></Self></hasSelf><hasConstruction><Construction rdf:ID="eat1Const"><slot><SlotRealization rdf:ID="NPsubj"><hasFunction rdf:value="Subj"/><filledBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP"/></SlotRealization></slot><slot><SlotRealization rdf:ID="NPobj"><hasFunction rdf:value="Obj"/><filledBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP"/></SlotRealization></slot></Construction></hasConstruction><hasFrequency rdf:value="8788" mlc:corpus="PAROLE"/></SyntacticFrame></hasSyntacticFrame></SynU></hasSynu></Entry></rdf:RDF>ENTRY 3 : Using DCR categories for CONSTRUCTIONThe highlighted lines refer to a pre-instantiated Construction object.
A portion of the DCR forConstructions is given in Appendix B.
The URL reference is to the actual web address where the object isinstantiated.<?xml version="1.0"?><!-- Sample ISLE lexical Entry for EAT (transitive)Abbreviated syntax version using pre-defined construction2002/10/23 Author: Nancy Ide --><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns:mlc="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"xmlns="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><Entry rdf:ID="eat1"><!-- The SynU for eat1 --><hasSynu rdf:parseType="Resource"><SynU rdf:ID="eat1-SynU"><example>John ate the cake</example><hasSyntacticFrame><SyntacticFrame rdf:ID="eat1SynFrame"><hasSelf><Self rdf:ID="eat1Self"><headedBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#Vauxhave"/></Self></hasSelf><hasConstruction rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Constructions#TransIntrans"/><hasFrequency rdf:value="8788" mlc:corpus="PAROLE"/></SyntacticFrame></hasSyntacticFrame></SynU></hasSynu></Entry></rdf:RDF>Appendix B: DCR definitionsSample DCR entries specifying enumerated values for SynFeatureName, etc.
The specification uses theOntology Web Language (OWL) to list valid values for objects of the defined class.<!-- Enumerated classes for ISLE lexical entries v0.1 2002/10/23 Author: Nancy Ide  --><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns:owl ="http://www.w3.org/2002/07/owl#xmlns:isle ="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><rdfs:Class rdf:about="http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#FunctionType"><owl:oneOf><rdf:Seq><rdf:li>Subj</rdf:li><rdf:li>Obj</rdf:li><rdf:li>Comp</rdf:li><rdf:li>Arg</rdf:li><rdf:li>Iobj</rdf:li></rdf:Seq></owl:oneOf></rdfs:Class><rdfs:Class rdf:about="http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#SynFeatureName"><owl:oneOf><rdf:Seq><rdf:li>tense</rdf:li><rdf:li>gender</rdf:li><rdf:li>control</rdf:li><rdf:li>person</rdf:li><rdf:li>aux</rdf:li></rdf:Seq></owl:oneOf> </rdfs:Class><rdfs:Class rdf:about="http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#SynFeatureValue"><owl:oneOf><rdf:Seq><rdf:li>have</rdf:li><rdf:li>be</rdf:li><rdf:li>subject_control</rdf:li><rdf:li>object_control</rdf:li><rdf:li>masculine</rdf:li><rdf:li>feminine</rdf:li></rdf:Seq></owl:oneOf></rdfs:Class></rdf:RDF>Sample LDCR entry for two Phrase objects<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns:mlc="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><Phrase rdf:ID="NP" rdfs:label="NP"/><Phrase rdf:ID="Vauxhave"><hasSynFeature><SynFeature><hasSynFeatureName rdf:value="aux"/><hasSynFeatureValue rdf:value="have"/></SynFeature></hasSynFeature></Phrase></rdf:RDF>Sample LDCR entry for a Construction object<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"xmlns="http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#"><Construction rdf:ID="TransIntrans"><slot><SlotRealization rdf:ID="NPsubj"><hasFunction rdf:value="Subj"/><filledBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP"/></SlotRealization></slot><slot><SlotRealization rdf:ID="NPobj"><hasFunction rdf:value="Obj"/><filledBy rdf:resource="http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP"/></SlotRealization></slot></Construction></rdf:RDF>
