Higher-Order Coloured Unification and Natural LanguageSemanticsClaire GardentComputat iona l  LinguisticsUniversit?t des SaarlandesD-Saarbr i ickenc la i re@co i l ,  un i - sb ,  deMichael Koh lhaseComputer  ScienceUniversit~t des SaarlandesD-Saarbr i ickenkoh lhase?cs ,  un i - sb ,  deAbstractIn this paper, we show that Higher-OrderColoured Unification - a form of unificationdeveloped for automated theorem proving- provides a general theory for modelingthe interface between the interpretationprocess and other sources of linguistic, nonsemantic information.
In particular, it pro-vides the general theory for the PrimaryOccurrence Restriction which (Dalrympleet al, 1991)'s analysis called for.1 IntroductionIt is well known that Higher-Order Unification(HOU) can be used to construct he semantics ofNatural Language: (Dalrymple t al., 1991) - hence-forth, DSP - show that it allows a treatment ofVP-Ellipsis which successfully captures the interactionof VPE with quantification and nominal anaphora;(Pulman, 1995; Gardent and Kohlhase, 1996) useHOU to model the interpretation of focus and itsinteraction with focus sensitive operators, adverbialquantifiers and second occurrence expressions; (Gar-dent et al, 1996) shows that HOU yields a sim-ple but precise treatment of corrections; Finally,(Pinkal, 1995) uses linear HOU to reconstruct under-specified semantic representations.However, it is also well known that the HOUapproach to NL semantics ystematically over-generates and that some general theory of the in-terface between the interpretation process and othersources of linguistic information is needed in orderto avoid this.In their treatment of VP-ellipsis, DSP introducean informal restriction to avoid over-generation: thePrimary Occurrence Restriction (POR).
Althoughthis restriction is intuitive and linguistically well-motivated, it does not provide a general theoreticalframework for extra-semantic constraints.In this paper, we argue that Higher-OrderColoured Unification (HOCU, (cf.
sections 3,6), arestricted form of HOU developed independently fortheorem proving, provides the needed general frame-work.
We start out by showing that the HOCUapproach allows for a precise and intuitive model-ing of DSP's Primary Occurrence Restriction (cf.section 3.1).
We then show that the POR can beextended to capture linguistic restrictions on otherphenomena (focus, second occurrence xpressionsand adverbial quantification) provided that the no-tion of primary occurrence is suitably adjusted (cf.section 4).
Obviously a treatment ofthe interplay ofthese phenomena and their related notion of primaryoccurrence is only feasible given a precise and well-understood theoretical framework.
We illustrate thisby an example in section 4.4.
Finally, we illustratethe generality of the HOCU framework by using itto encode a completely different constraint, namelyKratzer's binding principle (cf.
section 5).2 Higher-Order Unification and NLsemanticsThe basic idea underlying the use of HOU for NLsemantics i very simple: the typed A-calculus isused as a semantic representation la guage while se-mantically under-specified lements (e.g.
anaphorsand ellipses) are represented by free variables whosevalue is determined by solving higher-order equa-tions.
For instance, the discourse (la) has (lb) asa semantic representation where the value of R isgiven by equation (lc) with solutions (ld) and (le).
(1) a. Dan likes golf.
Peter does too.b.
like(dan, golf)AR(peter)c. like(dan,golf) = R(dan)d. R = Ax.
like(x, golf)e. R = Ax.
like(dan,golf)The process of solving such equations i tradition-ally called unification and can be stated as follows:given two terms M and N, find a substitution ofterms for free variables that will make M and Nequal.
For first order logic, this problem is decidableand the set of solutions can be represented by a sin-gle most general unifier.
For the typed A-calculus,the problem is undecidable, but there is an algorithmwhich - given a solvable equation - will enumeratea complete set of solutions for this equation (Huet,1975).Note that in (1), unification yields a linguisticallyvalid solution (ld) but also an invalid one: (le).To remedy this shortcoming, DSP propose an in-formal restriction, the Primary Occur rence  Re-str ict ion:In what follows, we present a unification frameworkwhich solves both of these problems.3 H igher -Order  Co louredUni f i ca t ion  (HOCU)There is a restricted form of HOU which allows fora natural modeling of DSP's Primary OccurrenceRestriction: Higher-Order Coloured Unification de-veloped independently for theorem proving (Hutterand Kohlhase, 1995).
This framework uses a variantof the simply typed A-calculus where symbol occur-rences can be annotated with so-called colours andsubstitutions must obey the following constraint:Given a labeling of occurrences as eitherprimary or secondary, the POR excludesof the set of linguistically valid solutions,any solution which contains a primary oc-currence.For any colour constant c and anyc-coloured variable V~, a well-formedcoloured substitution must assign to Vc a c-monochrome term i.e., a term whose sym-bols are c-coloured.Here, a primary occurrence is an occurrence thatis directly associated with a source parallel element.Neither the notion of direct association, nor that ofparallelism is given a formal definition; but given anintuitive understanding of these notions, a sourceparal le l  e lement  is an element of the source (i.e.antecedent) clause which has a parallel counterpartin the target (i.e.
elliptic or anaphoric) clause.To see how this works, consider example (1) again.In this case, dan is taken to be a primary occur-rence because it represents a source parallel elementwhich is neither anaphoric nor controlled i.e.
it isdirectly associated with a source parallel element.Given this, equation (lc) becomes (2a) with solu-tions (2b) and (2c) (primary occurrences are under-lined).
Since (2c) contains a primary occurrence, itis ruled out by the POR and is thus excluded fromthe set of linguistically valid solutions.
(2) a. like(dan, gol f )=R(dan)b. R = Ax.like(x, golf)c. R = Ax.like(dan, golf)Although the intuitions underlying the POR areclear, two main objections can be raised.
First, therestriction is informal and as such provides no goodbasis for a mathematical nd computational evalua-tion.
As DSP themselves note, a general theory forthe POR is called for.
Second, their method is agenerate-and-test method: all logically valid solu-tions are generated before those solutions that vio-late the POR and are linguistically invalid are elimi-nated.
While this is sufficient for a theoretical anal-ysis, for actual computation it would be preferablenever to produce these solutions in the first place.3.1 Mode l ing  the Primary OccurrenceRestrictionGiven this coloured framework, the POR is directlymodelled as follows: Primary occurrences are pe-coloured whilst free variables are -~pe-coloured.
Forthe moment we will just consider the colours pe (pri-mary for ellipsis) and ~pe (secondary for ellipsis) asdistinct basic colours to keep the presentation sim-ple.
Only for the analysis of the interaction of e.g.ellipsis with focus phenomena (cf.
section 4.4) do weneed a more elaborate formalization, which we willdiscuss there.Given the above restriction for well-formedcoloured substitutions, uch a colouring ensures thatany solution containing a primary occurrence isruled out: free variables are -~pe-coloured and mustbe assigned a -~pe-monochrome term.
Hence no sub-stitution will ever contain a primary occurrence (i.e.a pe-coloured symbol).
For instance, discourse (la)above is assigned the semantic representation (3a)and the equation (3b) with unique solution (3c).
Incontrast, (3d) is not a possible solution since it as-signs to an -~pe-coloured variable, a term containinga pe-coloured symbol i.e.
a term that is not -~pe-monochrome.
(3) a. like(danpe,gol f)  A R~pe(peter)b. like(danpe, go l f )= R~pe(danpe)c. R~pe = Ax.like(x, golf)d. R~pe = Ax.like(danpe,gOl f)3.2 HOCU theoryTo be more formal, we presuppose a finite setg = {a, b, c, pe, -~pe,...) of co lour  constants  and a2countably infinite supply ~ -- {A, B, .
.
.}
of co lourvariables.As usual in A-calculus, the set wff of well-fo rmed formulae  consists of (coloured 1) con-stants ca,runs~,runsA,..., (possibly uncoloured)variables x, xa,yb,...  (function) appl icat ions  ofthe form MN and A-abstractions of the formAx.M.
Note that only variables without colourscan be abstracted over.
We call a formula M c-monochrome,  if all symbols in M are bound ortagged with c.We will need the so-called co lour  erasure  IMI ofM, i.e.
the formula obtained from M by erasing allcolour annotations in M. We will also use variouselementary concepts of the A-calculus, such as freeand bound occurrences of variables or substitutionswithout defining them explicitly here.
In particularwe assume that free variables are coloured in all for-mulae occuring.
We will denote the substitution ofa term N for all free occurrences of x in M with\[N/x\]M.It is crucial for our system that colours annotatesymbol occurrences (i.e.
colours are not sorts!
), inparticular, it is intended that different occurrencesof symbols carry different colours (e.g.
f(xb, Xa))and that symbols that carry different colours aretreated ifferently.
This observation leads to the no-tion of coloured substitutions, that takes the colourinformation of formulae into account.
In contrastto traditional (uncoloured) substitutions, a colouredsubstitution a is a pair (at,at), where the te rmsubst i tu t ion  at maps coloured variables (i.e.
thepair xc of a variable x and the colour c) to formulaeof the appropriate type and the co lour  subst i tu -t ion a c maps colour variables to colours.
In order tobe legal (a g -subst i tu t ion)  such a mapping a mustobey the following constraints:?
If a and b are different colours, then \[a(xa)\[ =\[a(xb)\[, i.e.
the colour erasures have to be equal.?
If c E C is a colour constant, then a(x?)
is c-monochrome.The first condition ensures that the colour erasureof a C-substitution is a well-defined classical substi-tution of the simply typed A-calculus.
The secondcondition formalizes the fact that free variables withconstant colours stand for monochrome subformu-lae, whereas colour variables do not constrain thesubstitutions.
This is exactly the trait, that we willexploit in our analysis.1Colours axe indicated by subscripts labeling termoccurrences; whenever colours axe irrelevant, we simplyomit them.Note that/37/-reduction in the coloured A-calculusis just the classical notion, since the bound vari-ables do not carry colour information.
Thus wehave all the known theoretical results, such as thefact that/~/-reduction always terminates producingunique normal forms and that /3T/-equality can betested by reducing to normal form and comparingfor syntactic equality.
This gives us a decidable testfor validity of an equation.In contrast o this, higher-order unification testsfor satisfiability by finding a substitution a thatmakes a given equation M = N valid (a(M) =~a(N)),  even if the original equation is not (M ~Z,N).
In the coloured A-calculus the space of (se-mantic) solutions is further constrained by requiringthe solutions to be g-substitutions.
Such a substi-tution is called a C-unif ier of M and N. In par-ticular, C-unification will only succeed if compara-ble formulae have unifiable colours.
For instance,introa (Pa, jb, Xa) unifies with introa (Ya, jA, Sa) butnot with introa (Pa, ja, sa) because of the colour clashon j .It is well-known, that in first-order logic (and incertain related forms of feature structures) thereis always a most general unifier for any equationthat is solvable at all.
This is not the case forhigher-order (coloured) unification, where variablescan range over functions, instead of only individu-als.
Fortunately, in our case we are not interestedin general unification, but we can use the fact thatour formulae belong to very restricted syntactic sub-classes, for which much better results are known.
Inparticular, the fact that free variables only occur onthe left hand side of our equations reduces the prob-lem of finding solutions to higher-order matching,of which decidability has been proven for the sub-class of third-order formulae (Dowek, 1992) and isconjectured for the general case.
This class, (intu-itively allowing only nesting functions as argumentsup to depth two) covers all of our examples in thispaper.
For a discussion of other subclasses of formu-lae, where higher-order unification is computation-ally feasible see (Prehofer, 1994).3Some of the equations in the examples have multi-ple most general solutions, and indeed this multiplic-ity corresponds to the possibility of multiple differ-ent interpretations of the focus constructions.
Therole of colours in this is to restrict he logically pos-sible solutions to those that are linguistically sound.4 Linguistic Applications of thePORIn section 3.1, we have seen that HOCU allowed fora simple theoretical rendering of DSP's Primary Oc-currence Restriction.
But isn't this restriction fairlyidiosyncratic?
In this section, we show that the re-striction which was originally proposed by DSP tomodel VP-ellipsis, is in fact a very general constraintwhich far from being idiosyncratic, applies to manydifferent phenomena.
In particular, we show that itis necessary for an adequate analysis of focus, secondoccurrence xpressions and adverbial quantification.Furthermore, we will see that what counts as aprimary occurrence differs from one phenomenon tothe other (for instance, an occurrence directly asso-ciated with focus counts as primary w.r.t focus se-mantics but not w.r.t to VP-ellipsis interpretation).To account for these differences, ome machinery isneeded which turns DSP's intuitive idea into a fully-blown theory.
Fortunately, the HOCU framework isjust this: different colours can be used for differenttypes of primary occurrences and likewise for differ-ent types of free variables.
In what follows, we showhow each phenomenon is dealt with.
We then illus-trate by an example how their interaction can beaccounted for.4.1 FocusSince (Jackendoff, 1972), it is commonly agreed thatfocus affects the semantics and pragmatics of utter-ances.
Under this perspective, focus is taken to bethe semantic value of a prosodically prominent ele-ment.
Furthermore, focus is assumed to trigger theformation of an additional semantic value (hence-forth, the Focus Semantic Value or FSV) which isin essence the set of propositions obtained by makinga substitution i the focus position (cf.
e.g.
(Kratzer,1991)).
For instance, the FSV of (4a) 2 is (4b), theset of formulae of the form l(j,x) where x is of typee, and the pragmatic effect of focus is to presupposethat the denotation of this set is under considera-tion.
(4) a. Jon likes SARAHb.
{l(j,x) l x e wife}In (Gardent and Kohlhase, 1996), we show thatHOU can successfully be used to compute the FSVof an utterance.
More specifically, given (part of) anutterance U with semantic representation Sere andfoci F1.
.
.
F n, we require that the following equa-2Focus is indicated using upper-case.tion, the FSV equation, be soIved:Sem = Gd(F1).
.
.
(F ~)On the basis of the Gd value, we then define theFSV, written Gd, as follows:Definition 4.1 (Focus Semantic Value)Let Gd be of type ~ = ~k --~ t and n be the number ofloci (n < k), then the Focus Semantic Value deriv-able from Gd, written G---d, is {Gd(t l .
.
.
t n) I ti ewife,}.This yields a focus semantic value which is inessence Kratzer's presupposition skeleton.
For in-stance, given (4a) above, the required equation willbe l(j, s) = Gd(s) with two possible values for Gd:Ax.l(j, x) and Ax.l(j, s).
Given definition (4.1), (4a)is then assigned two FSVs namely(5) a. Gd= {l(j,x) l x e Wife}b. G'--d = {l(j,s) l x ~ Wife}That is, the HOU treatment of focus over-generates: (5a) is an appropriate FSV, but not (5b).Clearly though, the POR can be used to rule out(5b) if we assume that occurrences that are directlyassociated with a focus are primary occurrences.
Tocapture the fact that those primary occurrences aredifferent from DSP's primary occurrences when deal-ing with ellipsis, we colour occurrences that are di-rectly associated with focus (rather than a sourceparallel element in the case of ellipsis) pf.
Conse-quently, we require that the variable representingthe FSV be -~pf coloured, that is, its value may notcontain any pf term.
Under these assumptions, theequation for (4a) will be (6a) which has for uniquesolution (6b).
(6) a. l(j, Spf) = FSV~pf(Spf)b. FSV~pf = Ax.l(j, x)44.2 Second Occurrence ExpressionsA second occurrence expression (SOE) is a partial orcomplete repetition of the preceding utterance andis characterised by a de-accenting of the repeatingpart (Bartels, 1995).
For instance, (Tb) is an SOEwhose repeating part only likes Mary is deaccented.
(7) a. Jon only likes MARY.b.
No, PETER only likes Mary.In (Gardent, 1996; Gardent et al, 1996) we showthat SOEs are advantageously viewed as involving adeaccented anaphor whose semantic representationmust unify with that of its antecedent.
Formally,this is captured as follows.
Let SSem and TSem bethe semantic representation f the source and targetclause respectively, and TP  1 ... TP  n, SP  1 ... SP  nbe the target and source parallel elements 3, then theinterpretation of an SOE must respect he followingequations:An(Sp1, .
.
.
,  SP  n) = SSemAn(Tp1, .
.
.
,  TP  '~) = TSemGiven this proposal and some further assumptionsabout the semantics of only, the analysis of (Tb) in-volves the following equations:(8) An( j )= VP\[P e {)~x.like(x,y) l y ?
wife}A P( j )  ~ P = ~x.like(x, m)\]An(p) = VP\[P ?
FSV  A P(p)--+ P = Ax.like(x, m)\]Resolution of the first equation then yields twosolutions:An = )~zVP\[P ?
{;kx.like(x,y) l Y ?
wife}A P(z)  ~ P = )~x.like(x, m)\]An = AzVP\[P ?
{)~x.like(x,y) l Y ?
wife}A P( j )  ~ P = )~x.like(x, m)\]Since An represents the semantic informationshared by target and source clause, the second so-lution is clearly incorrect given that it contains in-formation (j) that is specific to the source clause.Again, the POR will rule out the incorrect solutions,whereby contrary to the VP-ellipsis case, all occur-rences that are directly associated with parallel el-ements (i.e.
not just source parallel elements) aretaken to be primary occurrences.
The distinction isimplemented by colouring all occurrences that aredirectly associated with parallel element ps, whereasthe corresponding free variable (An) is coloured as--ps.
Given these constraints, the first equation in(8) is reformulated as:An~ps(jps) = VP\[P ?
{)~x.like(x,y) l Y ?
wife}A P(Jps) --+ P = Ax.like(x, m)\]with the unique well-coloured solutionAn.
,s  = )~z.VP\[P ?
{Ax.l ike(x,y) l y ?
wife}A P(z)  --~ P = )~x.like(x, m)\]4.3 Adverbial quantificationFinally, let us briefly examine some cases of adver-bial quantification.
Consider the following examplefrom (von Fintel, 1995):Tom always takes SUE to Al's mother.Yes, and he always takes Sue to JO's mother.In (Gardent and Kohlhase, 1996), we suggest thatsuch cases are SOEs, and thus can be treated asinvolving a deaccented anaphor (in this case, theanaphor he always takes Sue to _'s mother).
Givensome standard assumptions about the semantics of3As in DSP, the identification of parallel elements itaken as given.5always, the equations constraining the interpretationAn of this anaphor are:An(al) = always (Tom take x to al's mother)(Tom take Sue to al's mother)An(jo) = always FSV(Tom take Sue to Jo's mother)Consider the first equation.
If An is the semanticsshared by target and source clause, then the onlypossible value for An is)~z.always (Tom take x to z's mother)(Tom take Sue to z's mother)where both occurrences of the parallel element mhave been abstracted over.
In contrast, the followingsolutions for An are incorrect.Az.always (Tom take x to al's mother)(Tom)~z.always (Tom(TomAz.always (Tomtake Sue to z's mother)take x to al's mother)take Sue to al's mother)take x to z's mother.
)(Tom take Sue to al's mother)Once again, we see that the POR is a necessaryrestriction: by labeling as primary, all occurrencesrepresenting a parallel element, it can be ensuredthat only the first solution is generated.4.4 In teract ion  of  constraintsPerhaps the most convincing way of showing theneed for a theory of colours (rather than just an in-formal constraint) is by looking at the interaction ofconstraints between various phenomena.
Considerthe following discourse(9) a. Jon likes SARAHb.
Peter does tooSuch a discourse presents us with a case of inter-action between ellipsis and focus thereby raising thequestion of how DSP' POR for ellipsis should inter-act with our POR for focus.As remarked in section 3.1, we have to interpretthe colour -~pe as the concept of being not primaryfor ellipsis, which includes pf (primary for focus).
Inorder to make this approach work formally, we haveto extend the supply of colours by allowing booleancombinations of colour constants.
The semantics ofthese ground colour formula is that of propositionallogic, where -~d is taken to be equivalent to the dis-junction of all other colour constants.Consequently we have to generalize the secondcondition on C-substitutions?
For all colour annotations d of symbols in a(xc)d ~ c in propositional logic.Thus X.d can be instantiated with any colouredformula that does not contain the colour d. TheHOCU algorithm is augmented with suitable rulesfor boolean constraint satisfaction for colour equa-tions.The equations resulting from the interpretation of(9b) are:l(jpe, 8pf) ~-- R-,pe(jpe)R~pe(P) = FSV~pf(F)where the first equation determines the interpre-tation of the ellipsis whereas the second fixes thevalue of the FSV.
Resolution of the first equationyields the value Ax.l(x, Spf) for R~pe.
As required,no other solution is possible given the colour con-stralnts; in particular Ax.l(jpe, Spf) is not a valid so-lution.
The value of R~pe(jpe) is now l(Ppe, 8pf) SOthat the second equation is4:l(p, Spf) = FSV~pf(F)Under the indicated colour constraints, three so-lutions are possible:FSV~pf = Ax.l(p, x), F = spfFSV~pf = AO.O(p), F = Ax.l(x, Spf)FSV~pf = ~X.X,  F = l(p, spf)The first solution yields a narrow focus read-ing (only SARAH is in focus) whereas the secondand the third yield wide focus interpretations corre-sponding to a VP and an S focus respectively.
Thatis, not only do colours allow us to correctly capturethe interaction of the two PORs restricting the in-terpretation of ellipsis of focus, they also permit anatural modeling of focus projection (cf.
(Jackend-off, 1972)).5 Another  const ra in tAn additional argument in favour of a general the-ory of colours lies in the fact that constraints thatare distinct from the POR need to be encoded toprevent HOU analyses from over-generating.
In thissection, we present one such constraint (the so-calledweak-crossover constraint) and show how it can beimplemented within the HOCU framework.In essence, the main function of the POR is to en-sure that some occurrence occuring in an equationappears as a bound variable in the term assignedby substitution to the free variable occurring in thisequation.
However, there are cases where the dual4Note that this equation falls out of our formal sys-tem in that it is untyped and thus cannot be solved bythe algorithm described in section 6 (as the solutions willshow, we have to allow for FSV and F to have differenttypes).
However, it seems to be a routine xercise to aug-ment HOU algorithms that can cope with type variableslike (Hustadt, 1991; Dougherty, 1993) with the colourmethods from (Hutter and Kohlhase, 1995).6constraint must be enforced: a term occurrence ap-pearing in an equation must appear unchanged inthe term assigned by substitution to the free vari-able occurring in this equation.
The following ex-ample illustrates this.
(Chomsky, 1976) observes that focused NPspattern with quantified and wh-NPs with re-spect to pronominal anaphora: when the quanti-fied/wh/focused NP precedes and c-commands thepronoun, this pronoun yields an ambiguity betweena co-referential nd a bound-variable r ading.
Thisis illustrated in example(10) We only expected HIMi to claimthat he~ was brilliantwhere the presence of the pronoun hei gives riseto two possible FSVs sFSV = {Ax.ex(x,y, i)  l Y E wife}FSV = {Ax.ex(x,y,y) \[y E Wife}thus allowing two different readings: the corefen-t ia l  or s t r ic t  readingVP\[P E {Ax.ex(x,y, i)  I Y E Wife}A P(we) --+ P = Ax.ex(x, i, i)\]and the bound-var iab le  or s loppy reading.VP\[P E {Ax.ex(x,y,y)) \[y E wife}^ P(we) ~ P = Ax.ex(x, i, i))\]In contrast, if the quantified/wh/focused NP doesnot precede and c-command the pronoun, as in(11) We only expected himi to claimthat HEi was brilliantthere is no ambiguity and the pronoun can onlygive rise to a co-referential interpretation.
For in-stance, given (11) only one reading arisesVP\[P E {Ax.ex(x,i ,y) l Y E Wife}A P(we) ~ P = Ax.ex(x, i, i)\]where the FSV is {Ax.ex(x, i ,y) l Y E wife}.To capture this data, Government and Bindinganalyses postulate first, that the antecedent is raisedby quantifier aising and second, that pronouns thatare c-commanded and preceded by their antecedentare represented either as a A-bound variable or asa constant whereas other pronouns can only be rep-resented by a constant (cf.
e.g.
(Kratzer, 1991)'sbinding principle).
Using HOCU, we can model thisrestriction directly.
As before, the focus term is pf-and the FSV variable -~pf-coloured.
Furthermore,we assume that pronouns that are preceded and c-commanded by a quantified/wh/focused antecedentare variable coloured whereas other pronouns are-~pf-coloured.
Finally, all other terms are taken to5We abbreviate exp( x, cl(y, blt( i) ) ) to ex( x, y, i) to in-crease legibility.be --pf-coloured.
Given these assumptions, the rep-resentation for (10) is ex~o~(we~pf,ipf ,iA) and thecorresponding FSV equationR~pf(ipf) -- )~x.eX~pf (x, ipf, in)has two possible solutionsR~0f = )~y.
)~x.ex~pf (x, y, i~0f)R~of = )~y.
)~x.ex~of(x , y, )In contrast, the representation for (11) isex-.pf(We~of, i~0f, ipf) and the equation isR-~pf(ipf) = )~x.ex~pf(X, i~of , /0f )with only one well-coloured solutionR~0f = )~y.Ax.ex~of ( x , i~of ,Y)Importantly, given the indicated colour con-straints, no other solutions are admissible.
Intu-itively, there are two reasons for this.
First, thedefinition of coloured substitutions ensures that theterm assigned to R~0f is -~pf-monochrome.
In par-ticular, this forces any occurrences of/of to appearas a bound variable in the value assigned to R~pfwhereas in can appear either as i~0f (a colour vari-able unifies with any colour constant) or as a boundvariable - this in effect models the sloppy/strict am-biguity.
Second, a colour constant only unifies withitself.
This in effect rules out the bound variablereading in (11): if the i~0f occurrence were to be-come a bound variable, the value of R~of wouldthen Ay.
)~x.ex~of(x, y, y) .
But then by ~-reduction,R~of(ipf ) would be )~x.ex~of(x, iof,iof ) which doesnot unify with the right hand side of the originalequation i.e ~x.ex.of(x , i-0f, i0f).For a more formal account of how the unifiers arecalculated see section 6.1.6 Calculating Coloured UnifiersSince the HOCU is the principal computational de-vice of the analysis in this paper, we will now tryto give an intuition for the functioning of the algo-rithm.
For a formal account including all details andproofs see (Hutter and Kohlhase, 1995).Just as in the case of unification for first-orderterms, the algorithm is a process of recursive decom-position and variable limination that transform setsof equations into solved forms.
Since C-substitutionshave two parts, a term-  and a colour part, we needtwo kinds (M =t N for term equations and c =c dfor colour equations).
Sets g of equations in solvedform (i.e.
where all equations are of the form x = Msuch that the variable x does not occur anywhere lsein M or g) have a unique most general C-unifier a~that also C-unifies the initial equation.There are several rules that decompose the syntac-tic structure of formulae, we will only present wo ofthem.
The rule for abstractions transforms equa-tions of the form )~x.A =t )~y.B to \[c/x\]A =t \[c/y\]B,and Ax.A =t B to \[c/x\]A =t Bc where c is a newconstant, which may not appear in any solution.
Therule for applications decomposes ha(s1,.. .
,s n) =thb(t l , .
.
.
, t  '~) to the set {a =c b, sl =t t l , .
.
.
,s,~ =ttn}, provided that h is a constant.
Furthermoreequations are kept in 13~/-normal form.The variable elimination process for colour vari-ables is very simple, it allows to transform a setg U {A =c d} of equations to \[d/A\]g U {A =c d},making the equation {A =c d} solved in the result.For the formula case, elimination is not that simple,since we have to ensure that la(XA)l = la(xs)l toobtain a C-substitution a.
Thus we cannot simplytransform a set gU{Xd =t M} into \[M/Xd\]EU{Xd __tM}, since this would (incorrectly) solve the equa-tions {Xc = fc,Xd = gd}.
The correct variableelimination rule transforms $ U {Xd =t M} intoa(g) U {Xd =1 M, xc, = M1,.. .
,Xc~ =t Mn}, whereci are all colours of the variable x occurring in M andg, the M i are appropriately coloured variants (samecolour erasure) of M, and a is the g-substitutionthat eliminates all occurrences of x from g.Due to the presence of function variables, sys-tematic application of these rules can terminatewith equations of the form xc(s l , .
.
.
, s  n) =thd(t l , .
.
.
, tm).
Such equations can neither be fur-ther decomposed, since this would loose unifiers (ifG and F are variables, then Ga = Fb as a solutionAx.c for F and G, but {F = G,a  = b} is unsolv-able), nor can the right hand side be substituted forx as in a variable elimination rule, since the typeswould clash.
Let us consider the uncoloured equa-tion x(a) ~t a which has the solutions (Az.a) and(Az.z) for x.The standard solution for finding a complete setof solutions in this so-called f lex / r ig id  situation isto substitute a term for x that will enable decompo-sition to be applicable afterwards.
It turns out thatfor finding all g-unifiers it is sufficient o bind x toterms of the same type as x (otherwise the unifierwould be ill-typed) and compatible colour (other-wise the unifier would not be a C-substitution) thateither?
have the same head as the right hand side; theso-called imi ta t ion  solution (.kz.a in our exam-ple) or?
where the head is a bound variable that enablesthe head of one of the arguments of x to becomehead; the so-called pro jec t ion  binding ()~z.z).In order to get a better understanding of the situ-ation let us reconsider our example using colours.z(a?)
-- ad.
For the imitation solution (~z.ad) we"imitate" the right hand side, so the colour on amust be d. For the projection solution we instantiate($z.z) for x and obtain ()kz.z)ac, which f~-reduces toac.
We see that this "lifts" the constant ac from theargument position to the top.
Incidentally, the pro-jection is only a C-unifier of our coloured example,if c and d axe identical.Fortunately, the choice of instantiations can befurther restricted to the most general terms in thecategories above?
If Xc has type f~n --+ c~ and hd hastype ~ -~ a, then these so-called genera l  b ind-ings have the following form:G h = ~kzal... za".hd(H~l (-5),..., Hem (-5))where the H i are new variables of type f)-~ ~ Vi andthe ei are either distinct colour variables (if c E CI))or ei = d = c ( i fc  E C).
If h i s  one of the boundvariables z~' , then ~h is called an imi ta t ion  b ind-ing, and else, (h is a constant or a free variable), ap ro jec t ion  binding?The general rule for flex/rigid equations trans-forms {Xc(Sl, .
.
.
,s n) =t hd(t l , .
.
.
, tm)} into{Xc(S 1 .
.
.
.
, s n) =t hal(t1,..., tin), Xc =t ~h}, whichin essence only fixes a particular binding for thehead variable Xc.
It turns out (for details and proofssee (Hutter and Kohlhase, 1995)) that these generalbindings uffice to solve all flex/rigid situations, pos-sibly at the cost of creating new flex/rigid situationsafter elimination of the variable Xc and decompo-sition of the changed equations (the elimination ofx changes xc(s l , .
.
.
,  s n) to ~h(sl, .
.
.
,  s n) which hashead h).6.1 ExampleTo fortify our intuition on calculating higher-ordercoloured unifiers let us reconsider examples (10) and(11) with the equationsR~pf(ipf) __t ~x.ex~pf(X, ipf, iA)R~pf(ipf) =t Ax.ex~pf(X, i-~pf, ipf)We will develop the derivation of the solutions forthe first equations (10) and point out the differencesfor the second (11).
As a first step, the first equationis decomposed toR~pf(ipf, c) : t  ex~pf(C, ipf, iA)where c is a new constant?
Since R~pf is a vari-able, we are in a flex/rigid situation and have thepossibilities of projection and imitation.
The pro-jection bindings Axy.x and )~xy.y for R~pf wouldlead us to the equations ipf =t eX~pf(C, ipf,iA) andc =t eX~pf (c, ipf, iA), which are obviously unsolvable,since the head constants ipf (and c resp.)
and eX~pf8clash 6.
So we can only bind R~pf to the imitationbinding ~kyx?ex~pf(H~pf(y, x), H~2pf (y, x), H 3 (y, x)).Now, we can directly eliminate the variable R~pf,since there are no other variants.
The resulting equa-tioneX~pf(Hlpf(ipf, c), H2pf (ipf, c), g 3 (ipf, c))=t eX~pf (c, ipf, iA)can be decomposed to the equations(17) Hlpf(ipf,C) __t cH~pf(ipf, c) =t ipfg3pf(/pf, C) __--t iALet us first look at the first equation; in thisflex/rigid situation, only the projection binding)kzw.w can be applied, since the imitation bindingAzw.c contains the forbidden constant c and theother projection leads to a clash.
This solves theequation, since (Azw.w)(ipf,c) j3-reduces to c, giv-ing the trivial equation c __t c which can be deletedby the decomposition rules?Similarly, in the second equation, the projectionbinding Azw.z for H 2 solves the equation, while thesecond projection clashes and the imitation binding)kzw.ipf is not -~pf-monochrome.
Thus we are leftwith the third equation, where both imitation andprojection bindings yield legal solutions:?
The imitation binding for H3pf is )kzw.i~pf, andnot Azw.iA, as one is tempted to believe, sinceit has to be -~pf-monochrome.
Thus we are leftwith i~pf =t iA, which can (uniquely) be solvedby the colour substitution \[-~pf/A\].?
If we bind H 3 to Azw.z, then we are left with ~pfZpf.
_-t iA, which can (uniquely) be solved by thecolour substitution \[pf/A\].If we collect all instantiations, we arrive at exactlythe two possible solutions for R~pf in the originalequations, which we had claimed in section 5:R~pf = ~kyx.ex~pf(X, y, i~pf)R~pf = )kyx?ex~pf(X, y, x)Obviously both of them solve the equation andfurthermore, none is more general than the other,since i~pf cannot be inserted for the variable x inthe second unifier (which would make it more generalthan the first), since x is bound?In the case of (11) the equations corresponding1 __t 2 " __t - and to (17) are H.~pf(e, ipf) - e, H~pf(e, Zpf) - ?,~pfH3pf(ipf) __t ipf.
Given the discussion above, it is im-mediate to see that H 1 has to be instantiated with -~pfthe projection binding ~kzw.w, H 2 with the imitation6For (11) we have the same situation?
Here the cor-?
t responding equation is tpf -- ex~pf(C, i~pf, ipf).binding Azw.i~of, since the projection binding leadsto a colour clash (i~f =t ipf) and finally H~pf has tobe bound to the projection binding Azw.z, since theimitation binding Azw.ipf is not -~pf-monochrome.Collecting the bindings, we arrive at the unique so-lution R~f = Ayx.ex~pf(x, i~pf, x).7 Conc lus ionHigher-Order Unification has been shown to be apowerful tool for constructing the interpretation fNL.
In this paper, we have argued that Higher-Order Coloured Unification allows a precise speci-fication of the interface between semantic interpre-tation and other sources of linguistic information,thus preventing over-generation.
We have substan-tiated this claim by specifying the linguistic, extra-semantic constraints regulating the interpretation fVP-ellipsis, focus, SOEs, adverbial quantificationand pronouns whose antecedent is a focused NP.Other phenomena for which the HOCU approachseems particularly promising are phenomena inwhich the semantic interpretation process is obvi-ously constrained by the other sources of linguisticinformation.
In particular, it would be interesting tosee whether coloured unification can appropriatelymodel the complex interaction of constraints govern-ing the interpretation a d acceptability of gappingon the one hand, and sloppy/strict ambiguity on theother.Another interesting research direction would bethe development and implementation f a monos-tratal grammar for anaphors whose interpretationare determined by coloured unification.
Coloursare tags which decorate a semantic representationthereby constraining the unification process; on theother hand, there are also the reflex of linguistic,non-semantic (e.g.
syntactic or prosodic) informa-tion.
A full grammar implementation would makethis connection more precise.8 AcknowledgementsThe work reported in this paper was funded by theDeutsche Forschungsgemeinschaft (DFG) in Sonder-forschungsbereich SFB-378, Project C2 (LISA).ReferencesChristine Bartels.
1995.
Second occurrence test.Ms.Noam Chomsky.
1976.
Conditions on rules in gram-mar.
Linguistic Analysis, 2(4):303-351.Mary Dalrymple, Stuart Shieber, and FernandoPereira.
1991.
Ellipsis and higher-order-unification.
Linguistics and Philosophy, 14:399-452.Daniel Dougherty.
1993.
Higher-order unificationusing combinators.
Theoretical Computer ScienceB, 114(2):273-298.Gilles Dowek.
1992.
Third order matching is decid-able.
In Proc.
LICS92, pages 2-10.
IEEE Com-puter Society Press.Claire Gardent and Michael Kohlhase.
1996.
Focusand higher-order unification.
In Proe.
COLING96forthcoming.Claire Gardent, Michael Kohlhase, and Noor vanLeusen.
1996. Corrections and higher-order unifi-cation.
CLAUS report 77, University of Saarland.Claire Gardent.
1996.
Anaphores parall~les et tech-niques de r~solution.
Langages.G@rard Huet.
1975.
A unification algorithm fortyped A-calculus.
Theoretical Computer Science1, pages 27-57.Ulrich Hustadt.
1991.
A complete transformationsystem for polymorphic higher-order unification.Technical Report MPI-I-91-228, MPI Informatik,Saarbriicken, Germany.Dieter Hutter and Michael Kohlhase.
1995.
Acoloured version of the A-calculus.
SEKI-ReportSR-95-05, Universit/it des Saarlandes.Ray S. Jackendoff.
1972.
Semantic Interpretationin Generative Grammar.
The MIT Press.Angelika Kratzer.
1991.
The representation f fo-cus.
In Arnim van Stechow and Dieter Wunder-lich, editors, Semantik: Ein internationales Hand-buch der zeitgenoessischen Forschung.
Berlin:Walter de Gruyter.Manfred Pinkal.
1995.
Radical underspecification.In The lOth Amsterdam Colloquium.Christian Prehofer.
1994.
Decidable higher-orderunification problems.
In Alan Bundy, editor,Proc.
CADE94, LNAI, pages 635-649, Nancy,France.Steve G. Pulman.
1995.
Higher-order unificationand the interpretation f focus.
Paper submittedfor publication.Kai von Fintel.
1995.
A minimal theory of adver-bial quantification.
Unpublished raft Ms. MIT,Cambridge, March.9
