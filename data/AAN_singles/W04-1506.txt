Towards a Dependency Parser for BasqueM.
J. Aranzabe, J.M.
Arriola and A. Diaz de Ilarraza,Ixa Group.
(http://ixa.si.ehu.es)Department of Computer Languages and SystemsUniversity of the Basque CountryP.O.
box 649, E-20080 Donostiajibarurm@si.ehu.esAbstractWe present the Dependency Parser,called Maxuxta, for the linguisticprocessing of Basque, which can serveas a representative of agglutinativelanguages that are also characterized bythe free order of its constituents.
TheDependency syntactic model is appliedto establish the dependency-basedgrammatical relations between thecomponents within the clause.
Such adeep analysis is used to improve theoutput of the shallow parsing wheresyntactic structure ambiguity is not fullyand explicitly resolved.
Previous to thecompletion of the grammar for thedependency parsing, the design of theDependency Structure-based Schemehad to be accomplished; we concentratedon issues that must be resolved by anypractical system that uses such models.This scheme was used both to themanual tagging of the corpus and todevelop the parser.
The manually taggedcorpus has been used to evaluate theaccuracy of the parser.
We haveevaluated the application of the grammarto corpus, measuring the linking of theverb with its dependents, withsatisfactory results.1 IntroductionThis article describes the steps given for theconstruction of a dependency syntactic parserfor Basque (Maxuxta ).
Our dependencyanalyser follows the constraint-based approachadvocated by Karlsson (Karlsson, 1995).
Ittakes as input the information obtained in theshallow parsing process (Abney, 1997).
Theshallow syntax refers to POS tagging and thechunking rules which group sequences ofcategories into structures (chunks) to facilitatethe dependency analysis.
The dependencyparser is considered as the module involved indeep parsing (see Fig.
1).
In this approach,incomplete syntactic structures are producedand, thus, the process goes beyond shallowparsing to a deeper language analysis in anincremental fashion (Aduriz et al, 2004).
Thisallows us to tackle unrestricted text parsingthrough descriptions that are organized inordered modules, depending on the depth levelof the analysis (see Fig.
1).In agglutinative languages like Basque, it isdifficult to separate morphology from syntax.That is why we consider morphosyntacticparsing for the first phase of the shallowsyntactic analyser.CGMorphosyntacticparsingSyntactictaggingChunkerDependenciesEUSLEMMorpheusDisambiguation using linguisticinformationDisambiguation using statisticalinformationShallow syntactic parsingNamed Entities%CGPostpositionsCGxfstNoun and verb chainsCGTagging of syntactic dependenciesCGShallowparsingDeepparsingRaw dataAnalysed textFig.
1.
Syntactic processing for Basque.The dependency parser has been performedin order to improve the syntactic analysisachieved so far, in the sense that, apart fromthe surface structural properties, we haveadded information about deeper structures byexpressing the relation between the head andthe dependent in an explicit manner.Additionally, we have adopted solutions toovercome problems that have emerged indoing this analysis (such as discontinuousconstituents, subordinate clauses, etc.
Thisapproach has been used in several projects(J?rvinen & Tapanainen, 1998; Oflazer, 2003).Before carrying out the definition of thegrammar for the parser, we established thesyntactic tagging system in linguistic terms.We simultaneously have applied it to build thetreebank for Basque (Eus3LB1) (Aduriz et al,2003) as well as to define the DependencyGrammar.
The treebank would serve toevaluate and improve the dependency parser.This will enable us to check how robust ourgrammar is.The dependency syntactic tagging system isbased on the framework presented in Carroll etal., (1998, 1999): each sentence in the corpusis marked up with a set of grammaticalrelations (GRs), specifying the syntacticdependency which holds between each headand its dependent(s).
However, there arecertain differences: in our system, argumentsthat are not lexicalised may appear ingrammatical relations  (for example, thephonetically empty pro argument, whichappears in the so-called pro-drop languages).The scheme is superficially similar to asyntactic dependency analysis in the style ofLin (1998).
We annotate syntactically theEus3LB corpus following the dependency-based formalism.
The dependencies we havedefined constitute a hierarchy (see Fig.
2) thatdescribes the theoretically and empiricallyrelevant dependency tags employed in theanalysis of the basic syntactic structures ofBasque.1This work is part of a general project(http://www.dlsi.ua.es/projectes/3lb) which objective is to buildthree linguistically annotated corpora with linguistic annotationat syntactic, semantic and pragmatic levels: Cat3LB (forCatalan), Cast3LB (for Spanish) (Civit & Mart?, 2002) andEus3LB (for Basque).
The Catalan and the Spanish corporainclude 100.000 words each, and the Basque Corpus 50.000words.This formalism is also used in the PragueDependency Treebank for Czech (Hajic, 1998)and in NEGRA corpora for German (Brants etal., 2003) among others.dependantstructurally casemarkedcomplementsnegationlinking-wordsmodifiersauxiliaryotherssemanticsnon clausalclausalclausalnonclausaldeterminernon clausalclausalpredicativefinitenon finiteclausalnonclausalconnectorappositiongraduatorparticleinterjec.ncsubjnczobjncobjncmodfinitenon finitedetmodxcomp_objxmodxcomp_subjcmodccomp_objccomp_subjncmodlotauxmodncprednon finite xpredfinitenonfiniteaponcmodapocmodapoxmodgradmodprtmoditj_outarg_modmetagaldemodccomp_zobjxcomp_zobjFig.
2.
Dependency relations hierarchy.Section 2 examines the main features of thelanguage involved in the analysis in terms ofdependency relations.
Taking into accountthese features, we will explain the reasons forchoosing the dependency-based formalism.
Insection 3 we briefly describe the generalparsing system.
Section 4 explains thedependency relations, the implementation ofthe dependency rules and a preliminaryevaluation.
Finally, some conclusions andobjectives for future work are presented.2 A brief description of Basque in orderto illustrate the adequacy of the adoptedformalismBasque is an agglutinative language, that is,for the formation of words the dictionary entryindependently takes each of the elementsnecessary for the different functions (syntacticcase included).
More specifically, the affixescorresponding to the determinant, number anddeclension case are taken in this order andindependently of each other.
These elementsappear only after the last element in the nounphrase.
One of the main characteristics ofBasque is its declension system with numerouscases, which differentiates it from languagesspoken in the surrounding countries.At sentence level, the verb appears as thelast element in a neutral order.
That is, giventhe language typology proposed by Greenberg,Basque is a Subject-Object-Verb (SOV) typelanguage (Laka, 1998) or a final head typelanguage.
However, this corresponds to theneutral order, but in real sentences any order ofthe sentence elements (NPs, PPs) around theverb is possible, that is, Basque can also beconsidered a language with free order ofsentence constituents.These are the principal features thatcharacterize the Basque language and,obviously, they have influenced us critically inour decision:1.
The dependency-based formalism is the onethat could best deal with the free word orderdisplayed by Basque syntax (Skut et al,1997).2.
We consider that the computational toolsdeveloped so far in our group facilitateeither achieving dependency relations ortransforming from dependency-trees to othermodes of representation.3.
From our viewpoint, it is less messy toevaluate the relation between the elementsthat compose a sentence rather than therelation of elements included in parenthesis.4.
Dependency-based formalism provides away of expressing semantic relations.3 Overview of the Syntactic Processingof Basque: from shallow parsing to deepparsingWe face the creation of a robust syntacticanalyser by implementing it in sequential rulelayers.
In most of the cases, these layers arerealized in grammars defined by the ConstraintGrammar formalism (Karlsson et al , 1995;Tapanainen & Voutilainen, 1994).
Eachanalysis layer uses the output of the previouslayer as its input and enriches it with furtherinformation.
Rule layers are grouped intomodules depending on the level of depth oftheir analysis.
Modularity helps to maintainlinguistic data and makes the system easilycustomisable or reusable.Figure 1 shows the architecture of thesystem, for more details, see Aduriz et al,2004.
The shallow parsing of the text beginswith the morphosyntactic analysis and endsdelimiting noun and verb chains.
Finally, thedeep analysis phase establishes thedependency-based grammatical relationsbetween the components within the clause.The parsing system is based on finite stategrammars.
The Constraint Grammar (CG)formalism has been chosen in most casesbecause, on the one hand, it is suitable fortreating unrestricted texts and, on the otherhand, it provides a useful methodology and thetools to tackle morphosyntax as well as freeorder phrase components in a direct way.A series of grammars are implementedwithin the module of the shallow parsingwhich aim:1.
To be useful for the disambiguation ofgrammatical categories, removing incorrecttags based on the context.2.
To assign and disambiguate partial syntacticfunctions.3.
To assign the corresponding tags to delimitverb and noun chains.3.1 Shallow Syntactic AnalyserThe shallow or partial parsing analyserproduces minimal and incomplete syntacticstructures.
The output of the shallow parser, asstated earlier, is the main base for thedependency parser.
The shallow syntacticanalyser includes the following modules:1.
The morphosyntactic analyser MORFEUS.The parsing process starts with the outcomeof the morphosyntactic analyser MORFEUS(Alegria et al, 1996), which was createdfollowing a two-level morphology(Koskenniemi, 1983).
It deals with theparsing of all the lexical units of a text, bothsimple words and multiword units as aComplex Lexical Unit (CLU).2.
The morphosyntactic disambiguationmodule EUSLEM.
From the obtainedresults, grammatical categories and lemmasare disambiguated.
Once morphosyntacticdisambiguation has been performed, thismodule assigns a single syntactic function toeach word.3.
The ckunk analysis module ZATIAK.
Thismodule identifies verb and noun chainsbased on the information about syntacticfunctions provided by each word-form.Entity names and postpositional phrases arealso determined.We will focus on the last step of the shallowanalysis because it contains the moreappropriate information to make explicit thedependency relations.
Basically, we use thesyntactic functions and the chunks that aredetermined in the partial analysis.Shallow syntactic functionsThe syntactic functions that are determinedin the partial analysis are based on those givenin Aduriz et al, 2000.
The syntactic functionsemployed basically follow the same approachto syntactic tags found in ENGCG(Voutilainen et al, 1992), although somedecisions and a few changes were necessary.There are three types of syntactic functions:1.
Those that represent the dependencieswithin noun chains (@CM>, @NC> etc.).2.
Non-dependent or main syntactic functions(@SUBJ, @OBJ, etc.).3.
Syntactic functions of the components ofverb chains (@-FMAINV, @+FMAINV,etc.
).The distinction of these three groups isessential when designing the rules that assignthe function tags for verb and noun chainsdetection.Chunker: verb chain and noun chainsAfter the morphological analysis and thedisambiguation are performed (see Figure 1),we have the corpus syntactically analysedfollowing the CG syntax.
In this syntacticrepresentation there are not phrase units.
Buton the basis of this representation, theidentification of various kinds of phrase unitssuch as verb chains and noun chains isreasonably straightforward.Verb chainsThe identification of verb chains is based onboth the verb function tags (@+FAUXV, @-FAUXV, @-FMAINV, @+FMAINV, etc.)
andsome particles (the negative particle, modalparticles, etc.
).There are two types of verb chains:continuous and dispersed verb chains (thelatter consisting of three components at most).The following function tags have been defined:?
%VCH: this tag is attached to a verb chainconsisting of a single element.?
%INIT_VCH: this tag is attached to theinitial element of a complex verb chain.?
%FIN_VCH: this tag is attached to the finalelement of a complex verb chain.The tags used to mark-up dispersed verbchains are:?
%INIT_NCVCH: this tag is attached to theinitial element of a non-continuous verbchain.?
%SEC_NCVCH: this tag is attached to thesecond element of a non-continuous verbchain.?
%FIN_NCVCH: this tag is attached to thefina l element of a non-continuous verbchain.Noun chainsThis module is based on the followingassumption: any word having a modifierfunction tag has to be linked to some word orwords with a main syntactic function tag.Moreover, a word with a main syntacticfunction tag can, by itself, constitute a phraseunit (for instance, noun phrases, adverbials andprepositional phrases).
Taking into account thisassumption, we recognise simple andcoordinated noun chains, for which these threefunction tags have been established:?
%NCH: this tag is attached to words withmain syntactic function tags that constitute aphrase unit by themselves?
%INIT_NCH: this tag is attached to theinitial element of a phrase unit.?
%FIN_NCH: this tag is attached to the finalelement of a phrase unit.Figure 3 shows part of the informationobtained in the process of parsing the sentenceDefentsako abokatuak desobedientziazibilerako eskubidea aldarrikatu du epaiketan(The defense lawyer has claimed the right tocivil disobedience in the  trial) with itscorresponding chains tags.Let us know the some syntactic tags used infig.
3: @NC>: noun complement; @CM>:modifier of the word carrying case in the nounchain; @-FMAINV: non finite main verb;@+FAUXV: finite auxiliary verb and@ADVL: adverbial.
"<Defentsako>" <INIT_CAP>"   defense"defentsa" N @NC>  %INIT_NCH"<abokatuak>"  the lawyer"abokatu" N @SUBJ  %FIN_NCH"<desobedientzia>"                       disobedience"desobedientzia" N @CM> %INIT_NCH"<zibilerako>"                                to civil"zibil" ADJ @<NC"<eskubidea>"                                the right"eskubide" N @OBJ %FIN_NCH"<aldarrikatu>"                              claimed"aldarrikatu" V @-FMAINV %INIT_VCH"<du>"                                            has"*edun" AUXV @+FAUXV %FIN_VCH"<epaiketan>"                                 in the trial"epaiketa" N @ADVL  %NCH"<$.>" <PUNCT_PUNCT>"Fig.
3.
Analysis of chains.
English translation on theright3.3 Deep Syntactic AnalysisThe aim of the deep syntactic analysis is tomake explicit the dependency relationsbetween words or chunks.
For this reason, wehave designed a Dependency Grammar basedon the Constraint Grammar Formalism.4 The Dependency Grammar for theParserIn this section we describe in more detail thedependency relations defined (see fig.
2), thedesign of the rules and the results obtained.The results obtained in the deep parsing ofsample sentence will help in providing a betterunderstanding of the mentioned parsingprocess.
This parsing process takes as basis theoutput of the shallow parser (see fig.
3).
Therules are implemented by means of the CG-2parser (www.conexor.com).4.1 The dependency relationsAs Lin (2003) says a dependencyrelationship (Hays, 1964; Hudson, 1984;Mel?cuk, 1987; B?mov?
et al, 2003) is anasymmetric binary relationship between aword called head (or governor, parent), andanother word called modifier (or dependent,daughter).
Dependency grammars representsentence structures as a set of dependencyrelationships.
Normally the dependencyrelationships form a tree that connects all thewords in a sentence.
A word in the sentencemay have several modifiers, but each wordmay modify at most one word.
The root of thedependency tree does not modify any word.
Itis also called the head of the sentence.For example, figure 4 describes thedependency structure of the example sentence.We use a list of tuples to represent adependency tree.
Each tuple represents onerelation in the dependency tree.
For example, astructurally case-marked complement whencomplements are nc (non-clausal, NounPhrases, henceforth NP) has the followingformat:case : the case-mark by means of what therelation is established among the head and themodifier.head: the modified word head ofNP/dependent: the modifier.
In this case, thehead of the NP.case-marked element withinNP/dependent: the component of thedependent NP that carries the case.subj relationship: the label assigned to thedependency relationship.The syntactic dependencies between thecomponents within the sentence arerepresented by tags starting with ?&?.
Thesymbols ?>?
and ?<?
attached to eachdependency-tag represent the direction inwhich we find the sentence component whosedependant is the target word.In the example we can see that the nounphrase defentsako abokatuak  ?the defenselawyer?
depends on the verb aldarrikatu ?toclaim?, which is on its right side.
A post-process will make this link explicit.The dependency tree in fig 4 is representedby the following tuples:Modifier Cat Head TypeDefentsakoabokatuakdesobedientziazibilerakoeskubideaaldarrikatuduepaiketanNNNADJNVAuxNabokatuakaldarrikatueskubideadesobedientziaaldarrikatualdarrikatualdarrikatu&NCMOD>&NCSUBJ>&NCMOD>&<NCMOD&NCOBJ>&<AUXMOD&<NCMOD4.2 The dependency grammar rulesThe grammar consists of 255 rules that havebeen defined and distributed in the followingway:complements modifiersnc2 cc3 det nc cm4others62 11 19 124 20 19These rules were formulated, implemented,and tested using a part of the manuallydisambiguated corpus (24.000 words).
For themoment, part of the rest of the corpus was usedfor testing.For more details of the rules, we describesome examples that illustrate how dependencyrules can be written to define different types oflinguistic relations.1.
Verb-subject dependencyThe following rule defines a verb-subjectdependency relation between 2 wordsaldarrikatu (claimed) and abokatuak   (lawyer)of the sentence in the previous example:MAP (&NCSUBJ>) TARGET (NOUN)IF (0 (ERG) + (@SUBJ) +(%FIN_NCH))(*1(@-FMAINV) + (%INIT_VCH)BARRIER (PUNCT_PUNCT));The rule assigned the ncsubj tag to the nounabokatuak (lawyer) if the following conditionsare satisfied: a) the noun is declined in ergativecase; besides, it has assigned the @SUBJsyntactic function and, it is the last word of anoun chain; b) it has a non-finite main verbeverywhere on its right before the punctuationmark.2 nc: non-clausal complement or modifier3 cc:clausal complement4 cm: clausal modifier2.
Subordinate clause dependencyThe following rule defines a complementsubordinate clause dependency relationbetween a subordinate verb and a main verb.We illustrate this rule by means of an examplein which the word egoten (usually stayed) isthe verb of the complement subordinate clauselinked to esan (told):Example: Lehenago aitona egoten zela niEGOTEN naizen tokian esan dit amonak5.MAP(&CCOMP>>)TARGET (V)IF(0(@-FMAINV)+ (%INIT_VCH))(1(@+FAUXV_SUB)+ (%FIN_VCH));The rule assigned the CCOMP tag to theverb egoten  (usually stayed) if the followingconditions are satisfied: a) the verb is a non-finite main verb and, it?s the first word-form ofa verb chain; b) it has an auxiliary verb on itsimmediate right-side which has assigned thecomplement tag and appears as the last part ofthe verb chain.3.
Infinitive controlThe following rule defines that in thesentence Jonek Miren etortzea nahi du.
(Johnwants to come Mary), etortzea (infinitivesubordinate clause with object function, "tocome") is controled by the main verb nahi  ("towant").
Taking into account, that etortzea  isthe controlled object of nahi, if there is anothernon-infinitive object Miren; then we willassign to it the subject dependency relation tothe infinitive verb ("to come").5 My grandmother told me my grandfatherusually stayed  where I am nowepaiketan Defentsako abokatuak desobedientzia  zibilerako eskubidea aldarrikatu duFig.4.
Dependency treeMAP (&NCSUBJ>) TARGET (NOUN)IF (0 (ABS) + (@SUBJ) OR (@OBJ)  + (%NCH))(1(@-FMAINV_SUB_@OBJ) ) (2 VTRANS_ -FV ));4.3 EvaluationThe system has been manually tested on acorpus of newspaper articles (included inEus3LB), containing 302 sentences (3266words).We have evaluated the precision (correctlyselected dependent / number of dependantreturned) and the recall (correctly selecteddependent / actual dependent in the sentence)of the subject (including coordinated subjects),and modifier dependency of verbs.
For subject,precision and recall were respectively 67% and69 %, while the figures for verb modifiers were73 % and   95%.We have detected two main  reasons forexplaining these figures: 1) the analysisstrategy is limited because we cannot make useof semantic or contextual information forresolving uncertainties at an early level; 2)errors in previous steps.
These errors can be a)due either to an incorrect assignment of POS toword-forms or to the syncretism of case marks(@SUBJ, @OBJ); b) the presence of non-known word-forms that increases the numberof possible analysis.
At this moment, the headand dependent slot fillers are, in all cases, thebase forms of single head words, so forexample, ?multi-component?
heads, such asnames, are reduced to a single word; thus theslot filler corresponding to Xabier Arzalluswould be Arzallus.5 ConclusionsWe have presented the application of thedependency grammar parser for the processingof Basque, which can serve as a representativeof agglutinative languages with free order ofconstituents.We have shown how dependency grammarapproach provides a good solution for deepersyntactic analysis, being at this moment thebest alternative for morphologically complexlanguages.We have also evaluated the application ofthe grammar to corpus, measuring the linkingof the verb with its dependents, withsatisfactory results.
However, the developmentof a full dependency syntactic analyser is still amatter of research.
For instance, all kinds ofconstructions without a clear syntactic head aredifficult to analyse: ellipses, sentences withouta verb (e.g., copula -less predicative), andcoordination.
All these aspects have beentreated in our manually annotated Corpus; ourefforts now are oriented to deal with themautomatically.6 AcnowledgmentsThis research is supported by the Universityof the Basque Country (9/UPV00141.226-14601/2002), the Ministry of Industry of theBasque Government (project XUXENG,OD02UN52).ReferencesAbney S. P. 1997.
Part-of-speech tagging andpartial parsing.
S. Young and G. Bloothooft,editors,  Corpus -Based Methods in Languageand Speech Processing, Kluwer, Dordrecht.Aduriz I., Aranzabe M.J., Arriola J.M.,  D?azde Ilarraza A., Gojenola K., Oronoz M., Ur?aL.
2004.
A Cascaded Syntactic Analyser forBasque.
In Gelbukh, A (ed.)
ComputationalLinguistics and Intelligent Text Processing.SpringerLNCS 2945.Aduriz I., Aranzabe M.J., Arriola J.M., AtutxaA., D?az de Ilarraza A., Garmendia A.,Oronoz M. 2003.
Construction of a BasqueDependency Treebank.
Proceedings of theSecond Workshop on Treebanks andLinguistic Theories "TLT 2003", (J. Nivreand E. Hinrichs eds.
), V?xj?
UniversityPress.
V ?xj?, SueciaAduriz I., Arriola J.M., Artola X., Diaz deIllarraza A., Gojenola K., Maritxalar M.2000.
Euskararako Murriztapen Gramatika:mapaketak, erregela morfosintaktikoak etasintaktikoak.
UPV/EHU/LSI/TR 12-2000.Alegria I., Artola X., Sarasola K., Urkia M.1996.
Automatic morphological analysis ofBasque.
Literary & Linguistic ComputingVol.
11, No.
4, 193-203.
Oxford UniversityPress.
Oxford.B?mov?
, A., Haji?c, J., Hajicov?a, E.,Hladk?a, B.
2003.
The PragueDependencyTreebank: A Three levelAnnotation Scenario.
In Abeill?
(ed.
)Treebanks Building and Using ParsedCorpora, Book Series: TEXT, SPEECHAND LANGUAGE TECHNOLOGY :Volume 20 Kluwer Academic Publisher,Dordrecht.Brants T., Skut W. & Uszkoreit H. 2003"Syntactic Annotation of a German Newspa-per Corpus?.
In Abeill?
(ed.)
TreebanksBuilding and Using Parsed Corpora, BookSeries: TEXT, SPEECH AND LANGUAGETECHNOLOGY : Volume 20 KluwerAcademic Publisher, Dordrecht.Carroll J., Briscoe E., Sanfilippo A.
1998.Parser evaluation: a survey and a newproposal.
Proceedings of the 1stInternational Conference on LanguageResources and Evaluation, 447-454.Granada, Spain.Carroll J., Minnen G., Briscoe T. 1999.
CorpusAnnotation for Parser Evaluation.Proceedings of Workshop on LinguisticallyInterpretated Corpora, EACL?99.
Bergen.Civit M. & Mart?
M. 2002.
Design Principlesfor a Spanish Treebank.
Proceedings of TheTreebank and Linguistic Theories(TLT2002).
Sozopol, Bulgaria.Hays, D. 1964.
Dependency theory: aformalism and some observations.Language40, p. 511?525.Hajic J.
1998.
Building a SyntacticallyAnnotated Corpus: The Prague DependencyTreebank.
In  Issues of Valency andMeaning, 106-132.
Karolinum, Praha.Hudson, R. 1984.
Word Grammar.
Oxford,England: Basil Blackwell PublishersLimited.J?rvinen T. and Tapanainen P, 1998.
Towardsan implementable dependency grammar.
InProceedings of the Workshop "Processing ofDependency-Based Grammars", (eds.
)Sylvain Kahane and Alain Polgu?re,Universit?
de Montr?al, Quebec, Canada,15th August 1998, pp.
1-10.Karlsson F., Voutilainen A., Heikkila J.,Anttila A.
1995.
Constraint Grammar: aLanguage-Independent System for ParsingUnrestricted Text.
Mouton de Gruyter.Koskenniemi K 1983.
Two-level Morphology:A general Computational Model for Word-Form Recognition and Production.University of Helsinki, Department ofGeneral Linguistics.
Publications 11.Laka, I.
1998.
A Brief Grammar of Euskara,the Basque Language.
HTML document.http://www.ehu.es/grammar.
Office of theVice-Dean for the Basque Language.University of the Basque Country.Lin D. 1998.
A Dependency-based Method forEvaluating Broad-Coverage Parsers.
NaturalLanguage Engineering.Lin D. 2003.
"Dependency-based evaluation ofMINIPAR" in Building and Usingsyntactically annotated corpora, Abeill?, A.Ed.
Kluwer, DordrechtMel?cuk, I.
A.
1987.
Dependency syntax:theory and practice.
Albany: StateUniversityof New York Press.Oflazer K. 2003.
Dependency Parsing with anExtended Finite-State Approach.
ACLJournal of Computational Linguistics, Vol.29, n?4.Skut W., Krenn B., Brants T., Uszkoreit H.1997.
An Annotation Scheme for Free WordOrder Languages.
In Proceedings of theFifth Conference on Applied NaturalLanguage Processing (ANLP-97).Washington, DC, USA.Tapanainen P. and Voutilainen A.
1994Tagging Accurately-Don?t guess if you know.In Proceedings of the 4th Conference onApplied Natural Language Processing,Washington.Voutilainen A., Heikkil?
J. and Anttila A.1992.
Constraint Grammar of English.
APerformance-Oriented Introduction.Publications of Department of GeneralLinguistics, University of Helsinki, No.
21,Helsinki.
