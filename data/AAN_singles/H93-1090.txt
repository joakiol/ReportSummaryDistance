MatchPlus: A CONTEXT VECTOR SYSTEM FORDOCUMENT RETRIEVALStephen L Gallant, Principal InvestigatorWilliam R. Caid, Project ManagerHNC, Inc.5501 Oberlin DriveSan Diego, CA 92121PROJECT GOALS ?
Hand-entered queries may be given using a sim-There are two primary goals for Mat&Plus.
First wewant to incorporate into the system anotion of similarityof use.
For example, if a query deals with 'autos' we wantto be able to recognize as relevant adocument with manymentions of 'cars'.Second, we want to apply machine learning algorithms toimprove both ad-hoc retrieval and routing performance.Several different algorithms come into play here:?
a "bootstrap" algorithm develops context vectorrepresentations for stems o that similar stems havesimilar vector epresentations?
neural network algorithms produce routing queriesfrom initial queries and lists of relevant and non-relevant documents?
clustering algorithms help generate a word-sensedisambiguation subsystem (being implemented)?
neural network algorithms interactively improve ad-hoc user queries (being implemented)?
clustering algorithms can also speed retrieval algo-rithms using a new "cluster tree" pruning algorithm(planned)A context vector representation is central to all Match-Plus system capabilities.
Every word (or stem), docu-ment (part), and query is represented by a fixed lengthvector with about 300 real-valued entries.
For any two ofthese items, we can easily compute a similarity measureby taking a dot product of their respective vectors.
Thisgives a build-in, generalized thesaurus capability to thesystem.RECENT RESULTS?
We have built a system for 800,000 documents(2 GB of text).
This system takes Tipster topics,automatically generates queries, and performs re-trievals.ple syntax.
Terms, paragraphs, and documents cancomprise a query (all optionally weighted), alongwith an (optional) Boolean filter.
Documents arealways returned in order by estimated likelihood ofrelevance.?
Documents may be "highlighted" to show hotspots,or areas of maxinmm correspondence with thequery.?
We have implemented routing using neural networklearning algorithms.
This resulted in a 20-30% im-provement compared with the automated ad-hocsystem.?
Lists of stems closest o a given stem provide use-ful and interesting insight into the system's vectorrepresentations.PLANS FOR THE COMING YEARWe have been running many bootstrap learning exper-iments, and some variations have resulted in significantimprovements to performance.
We expect hat this im-provement will carry over to all aspects of the system~including routing.Currently we are implementing word sense disambigua-tion.
We hope that this will give performance improve-ments, possibly even eliminating the need for phrase pro-cessing.
This module should also be able to serve as astand-alone package, providing help for machine trans-lation and speech understanding systems.We plan to apply learning algorithms for automated in-teractive query improvement in a manner similar to ourapproach with routing.
It seems likely that this will givea significant boost to ad-hoc query performance.Finally, we are performing additional learning experi-ments to improve routing.396
