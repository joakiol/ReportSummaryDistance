DISJUNCTION WITHOUT TEARSAl lan RamsayDepartment of Computer ScienceUniversity College DublinBelfield, DUBL IN  4,IrelandIt is now common practice to use structured sets of features to describe syntactic structures, and to comparesuch structured sets by some form of unification.
It is extremely tempting to try to encode disjunctiveinformation within this framework; unfortunately, general unification of disjunctive structures is NP-complete, which is not a desirable property for the basic operation involved in comparing descriptions.
Wenote that certain kinds of disjunctfve specifications can be converted to conjunctive ones.
This enables us todescribe a restricted set of disjunctive phenomena without incurring the costs associated with generaldisjunctive unification.1 UNIFICATION AND SYNTACTICDESCRIPTIONWe assume that the use of lattices and directed acyclicgraphs (DAGs) for describing properties of syntactic struc-tures, and of unification for combining such descriptions, istoo well known to require justification at this point.
A widevariety of notations have been used in this context--PROLOG terms, PATR-II specifications, FUG functionaldescriptors, GPSG category specifications, and so on(Pereira and Warren 1980; Shieber 1986; Kay 1985; Gaz-dar et al 1985).
The discussion below is couched in aFUG-like notation for concreteness, but the argument isequally applicable to any of the other standard formalisms.
(except perhaps GPSG).We can use our notation for characterizing objects interms of their properties.
We will generally be talkingabout linguistic objects such as words or phrases, thoughthere is nothing that restricts this kind of description tosuch objects.
We start by considering the word providing.We know various things about his word, including the factthat it is a present participle.
We can represent this specificpiece of information with the descriptor shown in Figure 1.We have included some negative information i  this descrip-tion, namely the fact the word in question is not tensed, isnot an infinitive, and is not a past participle or a passive one.This information is generally omitted from FUG specifica-tions, since it seems to be redundant.
In fact it is notredundant unless we have specified elsewhere that being aparticiple, being tensed, and being an infinitive are mutu-ally exclusive, and similarly for present, past, and passiveparticiples.
We will continue to include this kind of informa-tion locally within specifications, rather than appealing tosome externally specified set of constraints.
In subsequentdescriptors we will generally write --nTENSED forTENSED = _1_, though we will continue to spell outpositive specifications such as PRESENT = T in full.2 Two USES OF DISJUNCTIONThe kind of representation in Figure 1 is appropriate whensome specific piece of information about some item isknown--in Figure 1, for instance, the fact that the word inquestion is a present participle.
It often happens, however,that we know that some item can be described in severalways, but that we are not sure which is correct in thepresent circumstances.
Consider for instance the wordprovided.
This might be a past tense form, or a pastparticiple, or a passive participle.
There is nothing aboutthe word itself that can help us decide which it is, though inany actual context only one of these descriptions will beappropriate.
(1) He provided us with everything we needed.
(2) He has provided us with everything we needed.
(3) Everything we needed has been provided.We could produce three descriptions of the kind in Figure1, one for each case.
If we did this, however, we would findourselves repeating all sorts of information--the fact thatit's a verb, for instance, plus whatever we know about itssubcategorization frame, and so on.
It is therefore temptingto try to adapt our notation so that it allows disjunctivespecifications for feature values, as shown in Figure 2.Figure 2 represents a description of an item that is either apast tense verb or a past or passive participle, with the curlybracket {used to indicate a range of options.
This kind ofComputational Linguistics Volume 16, Number 3, September 1990 171Allan Ramsay Disjunction without TearsSYNTAX =CAT = VERBMAJOR = \ [BAR = 0I fPRESENT=TMINOR= HEAD = FORM = \ [PART IC IPLE= \ [PAST=.k| \ [ .PASS IVE  = l\ [ .
INF IN IT IVE  = ?Figure I Present Participle, e.g.
providing?disjunctive specification is widespread in unification gram-mer- - the curly bracket, for instance, is standard notationin FUG, and most other notations provide some way oftalking about disjunction.
Kasper and Rounds (1986),among others, have taken up the question of exactly whatsuch notations mean.
We are more interested here ininvestigating the circumstances under which they are reallynecessary, and in trying to remove them wherever we can.Much the same sort of issue arises when we considersyntactic rules, particularly when we consider ules repre-senting information about subcategorization frames.
Con-sider, for instance, the interpretation of the verb be as anauxiliary.
Be, as an auxiliary, can be combined with eithera VP whose main verb is a present participle or one whosemain verb is a passive participle.
We might try to representthis information with the rule shown in Figure 3.
Figures 2and 3 are very perspicuous.
Figure 2 describes a word thatis a past tense verb, a past participle, or a passive participle.Figure 3 describes a grammatical constraint, namely thatbe may be followed by a VP whose main verb is either apresent participle or a passive one.
The placeholder ?H isused to indicate that the form of the VP that results fromcombining an instance of be with a suitable complementhas the same HEAD features as the instance of be.
Unfor-tunately, the introduction of disjunctions into our descrip-tions has drastic effects on the computational properties ofunification, particularly when it is combined with the use ofplaceholders or other ways of specifying reentrance.
To seethis, suppose we want to see whether some VP whose mainverb has the properties ascribed to provided fits the con-straints imposed by be (in other words, we are trying toSYNTAX =CAT = VERB'MAJOR = \[ .BAR = 0MINOR= HEAD= FORM=,TENSED { ~PRESENT= \ [PAST  = T~PART IC IPLE?
~ INF IN IT IV  E?
~TENSED\[ ~PRESENTPART IC IPLE  = \ [PAST  = TIk~PASSIVE?
~ INF IN IT IVE\ [ -TENSED \ [ -PRESENTl -PASTI PART IC IPLE  LPASS IVE  = Tk ~ INF IN1T IVEFigure 2 Underdetermined VerbForm, e.g.
provided.\ [CAT  = VERBSYNTAX =:  MAJOR = \ [BAR = 2\ ] .M INOR = \ [HEAD = ?H==~I =\[CAT=VERBSYNTAX== MAJOR \ [BAR=O\ [ .M INOR = IHEAD = ?HCAT = VERB'MAJOR = \ [BAR = 2 "SYNTAX =MINOR = FIEAD = PORM =-TENSED TIPART IC IPLE= \ [PRESENT=\[ ~ INF IN  IT IV  E?
-TENSED~-PRESENTPART IC IPLE  = \ [~PAST' \ [ .PASS IVE  = T?
- INF IN IT IVEFigure 3 UnderdeterminedRule--Subcategorization Frame for be.parse (3)).
At some point we will have to compare- -nPRESENTTENSED =\[PAST = r7PAR T IC IPLE~INF IN IT IVE-'7 TENSED "TPRESENTPART IC IPLE  = PAST = T7PASS IVE\ [7 INF IN IT IVE7TENSEDTPRESENTPART IC IPLE  = 17PAST\ [PASS IVE  =- T7 INF IN IT IVEwithI-7 TENSEDPART IC IPLE  =~INF IN IT IVE"--7 TENSEDPART IC IPLE  =7 INF IN IT IVE"PRESENT = T7PAST7PASS IVETPRESENT7PAS TPASS IVE  ~ TWe will have to try various possibilities--is- -nPRESENT"TENSED = \ [PAST  = T7PART IC IPLE~INF IN IT IVE172 Computational Linguistics Volume 16, Number 3, September 1990Allan Ramsay Disjunction without Tearsthe same as"~TENSEDPARTIC IPLE =~INF IN IT IVE"PRESENT = T~PAST-1PASSIVEand so on.
Eventually we will compare the part of thedescription of solved that says it might be a passive partici-ple with the part of the rule that says that a VP whose mainverb is a passive participle is acceptable here.
At this pointwe will realize that the given text fits the rule, but only aftertrying out numerous options that led nowhere.Worse than this, there may be several locally compatiblesets of options, only one of which may lead to a globallycoherent description of the complete text being examined.If this is a possibility then the process of unifying twostructures turns out to be NP-complete, a most undesirableconsequence of our decision to allow disjunctive featuredescriptions.3 EXTRA CONSTRAINTSIf we look again at the descriptions in Figures 2 and 3 wesee that we know rather more about the FORM part ofthese descriptions than is explicitly stated.
In particular, weknow that the FORM of any verb whatsoever is drawn fromthe range of options shown in Figure 4.
Given this extrainformation, we see that a disjunctive description such asthe one we have been using for provided can be replaced bya conjunctive one containing nothing but negative informa-tion.
The descriptions of the FORM of the lexical itemprovided and the complement of be, for instance, can bereplaced by the following purely conjunctive descriptions:'TENSED = \[-~PRESENTPARTICIPLE = \[-1PRESENTand~INF IN IT IVETENSED \[-aPRESENT\[ =\['-nPASTPARTICIPLE = -nPAS T\[-nINFINITIVEThe equivalence depends on the fact that in any specificcase FORM has exactly one of the values given in Figure 4.TENSED = \ [PRESENT = T PART IC IPLE  = \ [PRESENT = TTENSED = \ [PAST = T PART IC IPLE  = \ [PAST = TINF IN IT IVE  = T PART IC IPLE  = \ [PASS IVE  = TFigure 4 Possible Values for FORM for Verbs.If  we know what values it doesn't have, we can infer therange that the value it does have must be drawn from.When we attempt to unify these two specifications, we findthat they lead to the following more precise description:--aPRESENT'TENSED = \ [~PAST-'aPRESENTPART IC IPLE  = -'aPAS T~ INF IN IT IVEThe only way for this to be compatible with the generalconstraint that the value of FORM must be drawn from thevalues in Figure 4 is if it is in fact a passive participle.
Wehave obtained the required effect without complicating ourunification algorithm, simply by making use of the extrainformation that the value in question must be drawn froma known finite range.
Note that we do not need to referexplicitly to the information in Figure 4 when we want toknow whether two specifications for FORM are compati-ble.
Rather we have used this information to construct ourspecifications, which can be compared irectly using ordi-nary unification.Many of the situations that seem to call for disjunctivedescriptions can be dealt with this way.
The NP the sheepcould be either third person singular or third person plural?Then describe it as not first person singular or first personplural or second person singular or second person plural.The pronoun he is nominative, whereas it may be eithernominative or accusative?
Then describe he as not accusa-tive, and say nothing about it.
When we can replacedisjunctive descriptions by ones that embody a conjunctionof negations, we can save a considerable amount of work,since our unification algorithm no longer needs to plodthrough a series of possible analyses, keeping track of theoptions that have been tried and possibly backtrackingwhen some analysis that looked plausible leads to a deadend.
We cannot hope to eliminate disjunction from ourgrammar entirely, since if we could then parsing wouldbecome a trivial deterministic task, which it does not looklike becoming.
We can, however, eliminate it in a lot ofplaces where it looks as though it would be useful; whichdoesn't make parsing a trivial task, but it does mean thatwe can avoid doing more work than we really need.4 LIMITATIONSThe example discussed above shows how we can replacedisjunctive descriptions by conjunctive ones in two specificcases, namely in the description of the FORMs of lexicalitems and VP complements.
We further suggested that thistechnique might be extendable to other uses of disjunctivespecifications, uch as the agreement properties of the NPthe sheep or the case marking of the pronoun it.
We havenot, however, banished disjunction from the grammar ofComputational Linguistics Volume 16, Number 3, September 1990 173Allan Ramsay Disjunction without TearsEnglish.
We could hardly expect to, given that in someversions of unification grammar, e.g.
FUG, the entiregrammar is specified by a single disjunctive descriptor,which is required to unify with the description of any legalsentence.
Just what are the limits of our technique?The following two restrictions eem crucial.
(i) Theelements of the disjunction must pick out points in somefinite partition of the space of possibilities, preferably asmall finite partition.
(ii) The disjunction must not containany placeholders (reentrance conditions).
Consider for in-stance the word changes.
For the sake of argument we willassume that this item has exactly two interpretations, asaplural noun and as a third person singular verb.
We couldrepresent the fact that it can be seen either as a noun or as averb as follows:SYNTAX = MAJOR =?
MINOR"~ADJECTIVECAT= ~ADVERB~PREPOSITIONLBAR 0This indicates that we can specify the major category ofchanges in terms of what it is not, though it does seem thatthis may be too cumbersome to be worthwhile.
The realproblem, however, is that the MINOR features will beexpected to specify some value for AGR;  but the value ofAGR for this word depends on whether it is in fact a nounor a verb---it is plural as a noun, but singular as a verb.
Wesimply cannot deal with this within our framework, and ifwe try to adapt the framework to accommodate it, then allthe computational complexity will return.This is particularly significant when we consider informa-tion about subcategorization.
It is widely, and very sensi-bly, argued that as much information as possible aboutconstituent structure should be associated irectly withlexical items.
FUG, for instance, permits the description ofa lexical item to contain a pattern that describes its comple-ments, and UCG (Calder 1988) even goes so far as tospecify that for many lexical items the major category isthe subcategorization frame.
It is clear that the range ofpossible subcategorization frames cannot effectively beexpressed in terms of a small finite set; and even if it could,our technique would be inapplicable because of the com-plex dependencies between the choice of subcategorizationframe and the values of other features.
This is the criticalrestriction on our technique--that it cannot be used toeliminate the disjunctions that arise from different subcate-gorization frames and different phrase structure rules.
Ouraim is to replace unnecessary disjunctions, not to eliminatethem from syntactic description entirely.We end by returning to our earlier remark that "theargument is equally applicable to any of the other standardformalisms (except perhaps GPSG)."
Our analysis of ourmain example depended on the fact that we have generalknowledge about the range of possible values for the fea-ture FORM,  which we used to modify local descriptions ofthis feature.
In GPSG, however, local information aboutfeature structures is not complete, since there is a fulldefault logic specifying possible restrictions on what valuesare po,;sible or mandatory in various circumstances.
Itseems; likely that the interactions between this logic and ouruse of general knowledge about features will interact inways that are at best hard to predict, and may even makeour approach completely infeasible.REFERENCESCalder J., Klein, E., and Zeevat, H. 1988 Unification Categorial Gram-mar: A Concise, Extendable Grammar for Natural Language Process-ing.
Proceedings of the 12th International Conference on Computa-tional Linguistics, 83-86.Gazdar, G., Klein, E., Pullum, G., and Sag, I.
1985 Generalised PhraseStructure Grammar.
Basil Blackwell, Oxford, U.K.Kasper, R. and Rounds, W. 1986 A Logical Semantics for FeatureStructures.
Proceedings of the 24th Annual Meeting of the Associationfor Computational Linguistics 24, 257-266.Kay, M. 1985 Parsing in Functional Unification Grammar.
In: Dowty,D.R., Karttunen, L., and Zwicky, A:M.
(eds.)
Natural LanguageParsing.
Cambridge University Press, Cambridge.Pereira, F.C.N.
and Warren, D.H.D.
1980 Definite Clause Grammars forLanguage Analysis--A Survey of the Formalism and a Comparisonwith ATNs.
Artificial Intelligence 13(3): 231-278.Shieber, S. M. 1986 An Introduction to Unification-Based Approaches toGrammar.
University of Chicago Press, Chicago.174 Computational Linguistics Volume 16, Number 3, September 1990
