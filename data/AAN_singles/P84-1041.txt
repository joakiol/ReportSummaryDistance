Is There Natural Languageafter Data Bases?Jaime G. Carbonel lComputer Science DepartmentCarnegie-Mellon UniversityPittsburgh, PA 152131.
Why Not Data Base Query?The undisputed favorite application for natural languageinterfaces has been data base query.
Why?
The reasons rangefrom the relative simplicity of the task, including shallow semanticprocessing, to the potential real-world utility of the resultantsystem.
Because of such reasons, the data base query task wasan excellent paradigmatic problem for computational linguistics,and for the very same reasons it is now time for the field toabandon its protective cocoon and progress beyond this ratherlimiting task.
But, one may ask, what task shall then become thenew paradigmatic problem?
Alas, such question presupposesthat a single, universally acceptable, syntactically andsemantically challenging task exists.
I will argue that betterprogress can be made by diversification and focusing on differenttheoretically meaningful problems, with some research groupsopting to investigate issues arisinq from the development ofintegrated multi-purpose systems.2.
But I Still Like Data Bases...Well, then, have I got the natural language interface task foryou!
Data base update presents many unsolved problems notpresent in pure query systems.
"Aha," the data base adherents twould say, "just a minor extension to our workU' Not at all; thereis nothing minor about such an extension \[4\].
Consider, forexample, the following update request to an employee-recorddata base:"Smith should work with the marketing team and Jones withsales"First, the internal ellipsis in the coordinate structure is typical ofsuch requests, but is mostly absent from most DB queries.However, let us assume that such constructions present noinsurmountable problems, so that we can address an equallyfundamental issue: What action should the system take?
ShouldSmith be deleted from sales and added to marketing (and viceversa for Jones)?
Or, should Smith and Jones remain fixed pointswhile all other sales and marketing employees are swapped?
AsKaplan and Davidson \[3\] point out, one can postulate heuristics toameliorate the problem.
They proposed a minimal mutilationcriterion, whereby the action entailing the smallest change to the11 must confess that I would have to include myself in any group claimingadherence to data base query as a unify=ng task.
I am still actively working in thearea, and to some extent expect o contmue doing so.
The practical applicationsare immense, but theoretical breakthroughs require fresh ideas and morechallenging problems.
Hence I advocate a switch based on scientific researchcriteria, rather than practical applicability orengineering significance.data base is preferred.
However, their bag of tricks fails miserablywhen confronted with examples such as:"The sales building should house the marketing people andvice versa"Applying the above heuristic, the bewildered system will prefer touproot the two buildings, swap them, and lay them on eachother's foundations.
Then, only two DB records need to bechanged.
Such absurdities can only be forestalled if a semanticmodel of the underlying domain is built and queried, one thatmodels actions, including their preconditions and consequences,and knows about objects, relations, and entailments.So, data base update presents many difficult issues notapparent in the simpler data base query problem.
Why not, then,select this as the paradigmatic task?
My only objection i3 to thedefinite article the--I advocate data base update as one of severaltheoretically significant tasks with major practical utility thatshould be selected.
Other tasks highlight additional problems ofan equally meaningful and difficult nature.3.
How Should I Select A Good TaskDomain?At the risk of offending a number of researchers incomputational linguistics, I propose some selection criteriaillustrated both by tasks that fail to meet them, and later by amuch better set of tasks designed to satisfy these criteria fortheoretical significance, and computational tractability.1.
The task should, if possible, be able to build upon past work,rather than addressing a completely disjoint set of problems.This quality enhances communication with other researchers,and enables a much shorter ramp-up period beforemeaningful results can be obtained.
For instance, anautomated poetry comprehension device fails to meet thiscriterion.2.
The task should be computationally tractable and grounded inan external validation test.
Interfaces to as yet non-existentsystems, or ones that must wait for radically new hardware(e.g., connectionist machines) before they can beimplemented fail to meet this criterion.
However, data basequery interfaces met this criterion admirably.3.
The task should motivation investigation of a set of languagephenomena of recognizable theoretical significance that canbe addressed from a computational standpoint.
Ideally, thetask should focus on restricted instances of a general anddifficult phenomenon to encourage progress towards initialsolutions that may be extended to (or may suggest) Solutionsto the general problem.
Data base query has been thoroughly186mined for such phenomena; hence it is time to go prospectingon virgin land.4.
The task should be of practical import, or should be a majorstep towards a task of practical import.
Aside from very real ifmundane concerns of securing funding, one desires a.large,eager, potential user community as an inexhaustible source ofexamples, needs, encouragement, and empirical motivationand validation.
A parser for Summerian cunneiform tablets ora dialog engine built around the arbitrary rules of a talk-showgame such as "You don't say" would completely fail on thiscriterion.4.
What Then Are Some OtherParadigmatic Tasks?Armed with the four criteria above, let us examine some tasksthat promise to be quite fruitful both as vehicles for research andas means of providing significant and practical natural languageinterfaces.?
Command In ter faces  to Operat ing  Systems - Imperativecommand dialogs differ from data base queries in manyimportant ways beyond the obvious differences in surfacesyntactic structure, But, much of the research on limited-domain semantics, ambiguity resolution, ellipsis and anaphoraresolution can be exploited, extended and implemented insuch domains.
Moreover, there is no question as to thepractical import and readily-available user community for suchsystems.
What new linguistic phenomena do they highlight?More than one would expect.
In our preliminary work leadingup the the PLUME interface to the VMS operating system, wehave found intersentential meta-language utterances, crass-party ellipsis and anaphora, and dynamic languageredefinition, to name a few.
An instance of intersententialmeta.language typical to this domain would be:USER: Copy foo.bar to my directory.SYST: File copied to/carbonel l \ ] foo.bar.USER: Oops, I meant to copy lure.bar.There is no "oops command", nor any act for editing, re-executing, and undoing the effects of a prior utterance in thediscourse.
This is a phenomenon not heretofore analyzed,but one whose presence and significance was highlighted bythe choice of application domain.
See\[2\] for additionaldiscussion of this topic.?
I n te r faces  to exper t  sys tems - -  There is little questionabout the necessity, practicality and complexity of such atask.
One can view expert systems as reactive, super databases that require deduction in addition to simple retrieval.
Assuch, the task of interpreting commands and providinganswers is merely an extension of the familiar data-baseretrieval scenario.
However, much of the interesting humancomputer interaction with expert systems, as we discovered inour XCALIBUR interface\[I\], goes beyond this simpleinteraction.
To wit, expert system interfaces require:o Mixed-initiative communication, where the system musttake the initiative in order to gather needed informationfrom the user in a focused manner.o Explanation generation, where the system must justify itsconclusion in human-comprehensible terms, requiringuser modelling and comparative analysis of multiple viablededuction paths.o Knowledge acquisition, where information supplied innatural language must be translated and integrated intothe internal workings of the system.?
Un i f ied  mul t i - funct ion  in ter faces  - -  Ideally one woulddesire communication with multiple "back ends" (expertsystems, data bases, operating systems, utility packages,electronic mail systems, etc.)
through a single uniform naturallanguage interface.
The integration of multiple discoursegoals and need to transfer information across contexts andsubtasks present an additional ayer of problems .- mostly atthe dialog structure level -- that are absent from interfaces tosingle-task, single-function backends.The possible applications meeting the criteria have not by anymeans been enumerated exhaustively above.
However, thesereflect an initial set, most of which have received some attentionof late from the computational inguistics community, and allappear to define theoretically and practically fruitful areas ofresearch.5.
References1.
CarbonelL J.G., Boggs, W.M., Mauldin, M.L.
and Anick, P.G., "TheXCALIBUR Project, A Natural Language Interface to Expert Systems,"Proceedings of the Eighth International Joint Conference Dn ArtificialIntelligence.
1983.2.
Carbonell, J. G.. "Meta-Language Utterances in Purposive Discourse," Tech.report, Carnegie.Mellon University, Computer Science Department, 1982.3.
Kaplan.
S.J.
and Davidson, J., "Interpreting Natural Language Data BaseUpdates," Proceedings of the 19th Meeting of the Association forComputational Linguistics.
1981.4.
Salvater.
S., "Natural Language Data Ba,s~ Update," Tech.
report 84/001,Boston University, 1984.187
