Computing Declarative Prosodic MorphologyMarkus WaltherSeminar ftir Al lgemeine SprachwissenschaftHeinrich-Heine-Universit~it Dt sseldorfUniversit~itsstr.
1, D-40225 Dtisseldorf, Germanywal ther@ling, uni -duesseldor  f. deAbstractThis paper describes a computational, declarativeapproach to prosodic morphology that uses invio-lable constraints o denote small finite candidate setswhich are filtered by a restrictive incremental opti-mization mechanism.
The new approach is illustratedwith an implemented fragment of Modern Hebrewverbs couched in MicroCUF, an expressive con-straint logic formalism.
For generation and parsingof word forms, I propose anovel off-line technique toeliminate run-time optimization.
It produces a finite-state oracle that efficiently restricts the constraint in-terpreter's search space.
As a byproduct, unknownwords can be analyzed without special mechanisms.Unlike pure finite-state transducer approaches, thishybrid setup allows for more expressivity in con-straints to specify e.g.
token identity for reduplica-tion or arithmetic constraints for phonetics.1 IntroductionProsodic morphology (PM) circumscribes a numberof phenomena r nging from 'nonconatenative' root-and-pattern morphology over infixation to variouscases of reduplication, where the phonology stronglyinfluences the shape of words by way of obedienceto structural constraints defining wellformed morae,syllables, feet etc.
These phenomena have been diffi-cult to handle in earlier ule-based treatments (Sproat1992, 159 ft.).
Moreover, as early as Kisseberth(1970) authors have noted that derivational ccountsof PM are bound to miss important linguistic gen-eralizations that are best expressed via constraints.Kisseberth showed that verb stems in Tonkawa, aCoahuiltecan language, display a complex V/~ al-ternation pattern when various affixes are added (fig.1).
This leads to more and more complicated voweldeletion rules as the fragment isenlarged.
In contrast,a straightforward constraint that bans three consecu-tive consonants offers a unified account of the condi-tions under which vowels must surface.
Later devel-'to cut' "to lick'picn-o?we-pcen-o?picna-n-o?netl-o?
( 3sg.obj.stem-3sg.subj.
)we-ntal-o?
( 3pl.obj.-stem-3sg.subj.
)netle-n-o?
( 3sg.obj.stem-prog.-3sg.subj.
)p(i)c(e)n(a) n(e)t(a)l(e) stemsFigure 1: Tonkawa verb forms with V/~ effectsopments have refined constraints such as ,CCC to re-fer to syllable structure instead: complex codas andonsets are disallowed.
At least since Kahn (1976),Selkirk (1982), such segment-independent r ferenceto syllable structure has been standardly assumed inthe generative literature.Astonishing as it may be, even the latest computa-tional models of PM phenomena apparently eschewthe incorporation of real prosodic representations,syllabification and constraints.
Kiraz (1996) usesmulti-~tape two-level morphology to analyze someArabic data, but - despite the suggestive title - mustsimulate prosodic operations uch as 'add a mora'by their extensionalized rule counterparts, which re-fer to C or V segments instead of moras.
There is noon-line syllabification and the exclusive use of lexi-cally prespecified syllable-like symbols on a separatetemplatic pattern tape renders his approach vulnera-ble to postlexical resyllabification effects.
Similarly,Beesley (1996) seems content in employing a greatnumber of CV templates inhis large-scale finite-statemodel of Arabic morphology, which are intersectedwith lexical roots and then transformed tosurface re-alizations by various epenthesis, deletion and assim-ilation rules.
Beesley states that further applicationof his approach to e.g.
Hebrew is foreseen.
On thedownside, however, again there is no real prosody inhis model; the relationship between template formand prosody is not captured.Optimality Theory (OT, Pnnce & Smolensky1993), as applied to PM (McCarthy & Prince 1993),does claim to capture this relationship, using a11ranked set of violable prosodic onstraints ogetherwith global violation minimization.
However, to datethere exist no sufficiently formalized analyses ofnontrivial PM fragments that could be turned intotestable computational models.
The OT frameworkitself has been shown to be expressible with weightedfinite-state automata, weighted intersection and best-path algorithms (Ellison 1994) if constraints andOT's GEN component - the function from under-lying forms to prosodified surface forms - are reg-ular sets.
A recent proposal by Karttunen (1998)dispenses with the weights while still relying onthe same regularity assumption.
Published PM anal-yses, however, frequently make use of constraint?
parametrizations from the ALIGN family, which re-quires greater than regular power (Ellison 1995).Further developments of OT such as correspondencetheory - extensively used in much newer work onPM - have not received a formal analysis o far.
Fi-nally, although OT postulates that constraints are uni-versal, this metaconstraint has been violated from theoutset, e.g.
in presenting Tagalog -um- as a language-specific parameter to ALIGN in Pnnce & Smolen-sky (1993).
Due to the convincing presentation ofa number of other forceful arguments against con-straint universality in Ellison (to appear), the case forlanguage-specific constraints must clearly be seen asreopened, and - as a corollary - the case for con-straint inviolability as well.Declarative Phonology (DP, Bird 1995, Scobbie1991 ) is just such a constraint-based framework thatdispenses with violability and requires amonostratalconception of phonological grammar, as comparedto the multi-level approaches discussed above.
Bothabstract generalizations and concrete morphemes areexpressed by constraints.
DP requires analyses tobe formally adequate, i.e.
use a grammar descrip-tion language with formal syntax and semantics.
Asa consequence, Chomsky's crteda for a generativegrammar which must be "perfectly explicit" and "notrely on the intelligence of the understanding reader"(Chomsky 1965, 4) are automatically fulfilled.
DPthus appears to be a good starting point for a restric-tive, surface-true theory of PM that is explicitly com-putational.The rest of this paper eviews in informal terms thetheory of Walther (1997) (section 2), showing in for-mal detail in section 3 how to implement a concreteanalysis of Modern Hebrew verbs.
Section 4 explainsa novel approach to both generation and parsing ofword forms under the new theory.
The paper con-cludes in section 5.2 Declarative Prosodic MorphologyFocussing on cases of 'nonconcatenative' root-and-pattern morphology, Declarative Prosodic Morphol-ogy (DPM) starts with an intuition that is opposite towhat the traditional idea of templates or fixed phono-logical shapes (McCarthy 1979) suggests, namelythat shape variance is actually quite common andshould form the analytical basis for theoretical ac-counts of PM.
Besides the Tonkawa case (fig.l),shape variance is also at work in Modern Hebrew(MH) inflected verb forms (Glinert 1989), see fig.2.1 Here we see a systematic V/O alternation of bothpast futurel sg gamar-ti2sg.m gamar-ta2sg.f gamar-t3sg.m gamar3sg.f gamr-alpl gamar-nu2pl gamar-tem3pl gamr-u?e-gmorti-gmorti-gmer-iji-gmorti-gmorni-gmorti-gmer-uji-gmer-uFigure 2: Modern Hebrew xfg.m.r ~nish' (B1)stem vowels, depending on the affixation pattern.This results in three stem shapes CVCVC, CVCC andCCVC.
Any analysis that simply stipulates shape se-lection on the basis of specific inflectional categoriesor phonological context (e.g.
3sg.f V 3pl or -V .-~CVCCstem / B 1 past) misses the fact that the shapes,their alternating behaviour and their proper selec-tion are derivable.
Derivational repairs by means of'doubly open syllable' syncope rules (/ga.ma.r-a.//.gam.ra./) are similarly ad hoc.?
A first step in developing an alternative DPManalysis of MH verbs is to explicitly recognize al-ternation of an element X with zero - informallywritten (X) - as a serious formal device besidesits function as a piece of merely descriptive no-tation (cf.
Hudson 1986 for an earlier applicationto Arabic).
In contrast o nonmonotonic deletionor epenthesis, (X) is a surface-true declarative x-pression (Bird 1995, 93f.).
The reader is remindedtRegular MH verbs are traditionally divided into seven ver-bal classes or binyanim, B I-B7.
Except for B4 and B6, whichregularly act as passive counterparts of B3 and B4, the semanticcontribution of each class is no longer transparent i  the modemlanguage.
Also, in many cases the root (written ~/'C~ .C~.Cs) isrestricted to an idiosyncratic subset of the binyanim.An a-templatic treatment of MH prosodic morphology wasfirst proposed by Bat-El (1989, 40ff.)
within an unformalized,non-surface-tree, non-constraint-based setting.12that DP sees grammar expressions as partial for-mal descriptions of sets of phonological objects.
Theformer reside on a different ontological level fromthe latter, in contrast o traditional object-to-objecttransformations on the same level.
Hence a prelim-inary grammar expression g(V1)m(V2)r for a He-brew stem (with abstract stem vowels) denotes theset {gmr, gVlmr, gmV2r, gVlmV2r).
Note that the(X) property as attributed to segmental positions isdistinctive - in contrast o stem vowels root seg-ments do not normally alternate with zero, and nei-ther do affix segments in an important asymmetrywith stems.
This point is reinforced by the exceptionsthat do exist: phonologically unpredictable C/~ al-ternation occurs in some MH stems, e.g.
natan/lakax'he gave/took' vsfi-ten/ji-kax 'he will give/take'; bysurface-true (n/l) encoding we can avoid diacriticalsolutions here.?
Step two uses concatenation to combine indi-vidual descriptions of stems and affixes, besides con-necting segmental positions within these linguisticentities.
Since, as we have just seen, a single de-scription can denote several objects of varying sur-face stnng length, concatenation (^) at the descriptionlevel is actually powerful enough to describe 'non-concatenative' morphological phenomena.
In DPMthese do not receive independent ontological status(cf.
Bird & Klein 1990 and Gafos 1995 for other for-mal and articulatory-phonological arguments leadingto the same conclusion).
A more detailed escriptionof the 3pl.fut.
inflected form of x~g.m.r might here-fore be j^i^g'(V1)^m^(V2)r^u.
In order to allow forparadigmatic 2 generalizations over independent enti-ties such as root and stem vowel pattern within con-catenated escriptions, a hierarchical lexicon con-ception based on multiple inheritance of named ab-stractions can be used (cf.
Riehemann 1993).?
Step three conjoins aword form description withdeclarative syllabification and syllable structureconstraints in order to impose prosodic well-formedness conditions.
For Modem Hebrew (andTonkawa), the syllable canon is basically CV(C).Expressed in prosodic terms, complex codas andonsets are banned, while an onset must precede achsyllable nucleus.
These syllable roles are establishedin the first place by syllabification constraints thatexploit local sonority differences between successivesegments (Walther 1993).
Alltogether, the ensemble2See Walther (1997) for a discussion of various ways to de-rive rather than stipulate the syntagmatic pattern of alternatingand non-alternating segmental positions within stems.of prosodic Constraints indeed succeeds in narrow-ing down the set for the 3sg.m past tense formto {*.9mr., *.9amr., *.9mar., !.9a.mar.}
=/gamar/.
For 3pl.
future tense B1, how-ever, an unresolved ambiguity remains: in{.jig.me.ru.,.ji.gam.ru.
}, only the first ele-ment is grammatical.
3 An important observation isthat in general there can be no purely phonologicalconstraint o disambiguate this type of situation.The reason lies in the existence of minimal pairswith different category.
In our case, homophonous/.ji.gam.ru./ is grammatical as 3pl.
fut.
B2 'theywill be finished'.
We will return to the analysis ofsuch cases after proposing a specific disambiguationmechanism in the next step.?
Step four eliminates the remaining ambiguityby invoking an Incremental Optimization Princi-ple (IOP): "For all (X) elements, prefer the zero al-temant as early as possible".
"Early" corresponds totraditional left-to-right directionality, but is meant obe understood w.r.t, the speech production time ar-row.
"As possible" means that IOP application toa (X) position nevertheless realizes X if its omis-sion would lead to a constraint conflict.
Hence,the IOP correctly rules out the second elementof {.jig.me.ru.,*.ji.9ara.ru.}.
This is because.ji.gam.ru.
represents a missed chance to leave out/a/, the earlier one of the two stem vowels.
The readermay verify that the IOP as it stands also accountsfor the Tonkawa data of fig.
I. Tonkawa lends evenclearer support to IOP's left-to-right nature due to thelarger number of V/O vowels involved.
As a limit-ing case, the IOP predicts the possibility of vowel-less surface stems, e.g.
formed by two root conso-nants combined with vowel-final prefix and suffix.This prediction is strikingly confirmed by MH formslike te-lx-i 'you (sg.f.)
will go' ~/(h).l.x, ti-kn-u'you/they (pl.)
will buy' ~/'k.n.O, ti-tn-i 'you (sg.f.
)will give' ~/(n).t.n; similar cases exist in Tigdnya.There can be no meaningful prosodic characteriza-tion of isolated CC stem shapes; only a wordform-based theory like the present one may explain whythese forms exist.Note that, conceptually, IOP is piggybacked on au-tonomous DP-style constraint interaction.
It merelyfilters the small finite set of objects described bythe conjunction of all constraints.
From another an-gle, IOP can be seen as a single context-free sub-3Note that the prosodic view explains the pronounced influ-ence of (C)V affixes on the shape of the whole word: they pro-vide a nonalternating syllable nucleus which can host adjacentstem consonants.13stitute for the various syncope rules employed informer transformational analyses.
The claim is thatfixed-directionality-IOP is the only such mechanismneeded to account for PM phenomena.A distinguishing feature of the IOP is its poten-tial for an economical procedural implementationin incremental production.
If constraint contexts aresufficiently local, the pnnciple can locally decideover (X) nonrealizations and there will be very lim-ited backtracking through delayed etection of con-straint violation.
Because the IOP stops after find-ing the first (X) realization pattern that violates noconstraints, it has less formal power than global opti-mization which must always consider all candidates.Moreover, the IOP supports economic ommunica-tion, as it leads to shortest surface forms whereverpossible.
Finally, at least for root-and-pattern mor-phologies it can be argued to aid in speech per-ception as well.
This is because the closed class ofstem vowel patterns is less informative than open-class root segments.
Since IOP-guided vowel omis-sion causes root segments to (statistically) appearat an earlier point in time from the acoustic onsetof the word, the IOP hypothesis actively prunes thesize of the cohort of competing lexical candidates.As a result, unambigous recognition will generallybe achieved more quickly during continous lexicalaccess.
In sum, the IOP hypothesis not only pos-sesses overall psycholinguistic plausibility but actu-ally gives some processing advantage to shape vari-ance.
If future research provides the necessary ex-perimental confirmation, we have yet another case ofperformance shaping competence.?
Step five returns to the minimal pairs problemhighlighted in step three: what to do with anti-IOPrealizations such as that of/a/in/.
j i .gam.ru./for B2fut.?
The answer is (prosodic) prespecification.
Asurface-true constraint demands that B2 future andinfinitive as well as all of B3, B4 must have an onsetrole for the first stem element.
Thus, the possibilityof IOP eliminating the first stem vowel is blocked bythe constraint inconsistency that arises for the firststem element: either syllabification licenses an in-compatible coda or first and second stem segmenttogether form an illformed onset cluster.
Note that ifthe constraint is lexicalized as part of the grammat-ical description of first stem position, it will have amaximally local context, referring to just the positionitself.
In general, DPM analyses pay much attentionto proper attachment sites of constraints in order tomaximize their locality.The MH verbal suffix -et (fem.sg.pres.)
illustratesthat sometimes another, segmental mode of prespec-ification is useful.
This suffix is always preceded bya syllable ending in /el, although IOP applicationalone would e.g.
prefer */gom.ret/over/go.me.ret/'she finishes'.
The effect is morpheme-specific sinceother -VC suffixes behave as expected here: gomr-im/ot 'they (masc./fem.)
finish'.
One solution is to letpart of the suffix definition be a constraint statementwhich demands that the segment two positions to itsleft must be a front vowel.
This move captures boththe stability and the quality of this vowel at the sametime.
(Apophony constraints ensure that the secondstem vowel is never/i/except in B5, which signifi-cantly has a different suffix -a in place of -et).
Notethat prespecifying the presuffixal segment to be in anonset position would not work.3 On implement ing  analysesIn the following I show how to implement a toy frag-ment of MH verbs using the MicroCUF formalism,a typed, feature-based constraint-logic programminglanguage suitable for natural language modelling.MicroCUF implements a subset of CUF (D6rre &Dorna 1993), inheriting its formal semantics.
It wasinitially delevoped by the author to overcome ffi-ciency problems with CUF's original type system.Additionally, its simpler implemenation provides anopen platform for experimental modifications, asneeded e.g.
for parsing and generation with DPM.After briefly introducing the essentials of MicroCUFfirst, the MH analysis is developed and explained.3.1 The MicroCUF constraint formalismThis section assumes a basic knowledge of Prolog.Like in Prolog, MicroCUF variables tart with upper-case letters or _ , whereas relational symbols, fea-tures and simplex types start in lowercase; % marksa comment (fig.
3a).
Relations like member are writ-ten in functional notation, with a notationally distin-guished result argument on the nghthand side of : =and the relation symbol plus its (optional) argumentson the lefthand side.
Subgoals like member (Elem)Can occur anywhere as subterms.
Instead of Prolog'sfixed-arity first order terms, MicroCUF has typedfeature terms as its basic data structures.
As illus-trated in fig.
3b, subterms are explicitly conjoinedwith & or disjunctively combined with ;, while onlytype terms may be prefixed by the negation oper-ator ,-.,.
Features like l e f t ,  cat  are separatedfrom their righthand value terms by :.
Terms may betagged by conjunction with a variable (vl), allowingfor the expression of structure sharing through mul-14tiple occurences of the same variable.
Feature appro-priateness declarations ( : : ) ensure that both the termin which a feature occurs and its value are typed.
Forcomparison, the result value of f s  appears in HPSG-style notation under fig.
3c.a.% MicroCUFmember(Elem) := \[ElemI_\].member(Elem) := \[_Imember(Elem)\].%Prologmember(Elem, \[Eleml_\]).member(Elem, \[_IRest\]) :- member(Elem, Rest).b.fs:=cat: (~((b2;b3;b5)&past)&Vl)&left :cat:Vl .phonl ist : : \ [cat :categor ies\] .segmental positions to the left - a frequent situationin phonological contexts - we supplement i  with anew feature le f t  to yield bidirectional lists.
For thisdoubly-linked list encoding to be wellbehaved, a stepright followed by a step left is constrained to return tothe same position Se l f  (3), thus yielding cyclic fea-ture structures.
Next, the value of the feature cat atthe current position is connected with its right neigh-bour (3-4).
In the face of our recursively structuredlists this makes morphological nd other global cate-gorial information locally accessible at each segmen-tal position.
Finally, relations to incrementally clas-sify each segmental position as word-initial, medialor wordfinal and to impose prosodic constraints areadded in (5-6).Basic concatenation is used in (10-12) to defineX/O positions.C.fsplzotzlist \]eat ~ ~ ( (b2 v b3 v b5) ^  past )left r phOnlist \]\[cat D\]Figure 3: MicroCUF vs Prolog and HPSG notation3.2 Modern Hebrew verbs in MicroCUFBelow I present a concrete MicroCUF grammarin successive pieces.
It encodes a toy fragmentof MH verbs and represents a simplified excerptfrom a much larger computational grammar.
Forlack of space, the type hierarchy - specifying syl-lable roles, segments, morphological categories andword-peripheral position - and the definition ofsyllabi fy (formalized in Walther 1995) have beenomitted.Let us start the explanation with a basicconcatenation relation which adds a position Se l fin front of some string of Segments (1-6).1 conc(Self, Segments) :=2 Self &3 r ight: (Segments&left :Sel f&cat:Cat)4 cat:Cat &5 c lass i fy_pos i t ion_ in_word &6 constraints.78 c lass i fy_pos i t ion_ in_word :=9 r ight:self : ' - ini '  & left:self: ' -f in'.Here, the familiar recursive first-rest encoding oflists translates into se l f - r ight  features.
This alonemakes self and (arbitrarily long) right-context ref-erences possible.
To support looking one or morei0ii121314151617x_0(_, Segments) := segments.x_0(X, Segments) := mark:marked &conc(X, Segments).obl(X, Segments) := mark:unmarked &conc(X, Segments).is(Segment) := self :seg:Segment.The first clause of x_0 (10) realizes the zero alternantby equating in its second argument the Segments tofollow with the result argument; the first argumentholding x is unused.
It gets used in the second clause(11-12), however, where it is prefixed to the follow-ing Segments by ordinary concatenation.
The valueof an additional feature mark specifies that realiz-ing an X position is marked w.r.t, the IOP, whereasno such value is prescribed in the first clause.
In-stead, the marking there will be supplied later by ad-jacent instances of either the second x_0 clause orob l  (14-15).
The latter is the version of concatena-tion used for specifying obligatory, i.e.
nonalternat-ing positions, which consequently are specified asunmarked.
Alltogether these means yield fully spec-ified strings w.r.t, markedness information.
We willsee below how this simplifies an implementation ofthe IOP.As can be seen in the accessor elation i s  (17),phonological segments are actually embedded un-der a further feature seg.
This treatment enablesstructure-sharing of segments independent of theirsyllable roles.The syllable shape constraint (18-25) shows firstof all that syllable roles are modelled as O,pes underself.1518 shape :=19 ( se l f : (nuc leus  & seg:vowel)  &20 le f t : se l f :onset21 ; se l f : ( -nuc leus)  &22 ( se l f :onset  & left :sel f :  (-onset)23 ; se l f : coda  & le f t : se l f : ( -coda)24 )25 ).2627 const ra in ts  := sy l lab i fy  & shape.Lines (19-20) capture the fact that syllable nucleiin MH are always vowels and that every syllablenucleus is preceded by an onset.
In (21-22) a non-nuclear position that is an onset may only licensepreceding non-onsets, thus disallowing complex on-sets; similarly for codas in (23).
In (27) geneticsy l lab i fy  is intersected with shape, since seg-mental positions must be prosodified and conformto language-specific shape restrictions.The constraints under (28-30), included for com-pleteness, merely ensure proper termination of seg-mental strings at the word periphery.28 word29 end30:= se l f : ( '+ in i '  & prom:up  & onset).
:= le f t : se l f : ( '+ f in '  & -onset) &se l f : ' - f in 'Prosodic prespecification (31-36) faithfully modelswhat was stated in prose in section 2.31 prosod ic_prespec i f i ca t ion  :=32 (cat : ( (b2&( - (past ;p res ) ) ) ;b3 ;b4)  &33 se l f :onset34 ;35 cat : (~( (b2& ( - (past ;pres) ) ) ;b3;b4) )36 ).We proceed in (37-41) with a rudimentary definitionof first (v l )  and second (v2) stem vowel which issufficient for our toy fragment.37 vl := is(low) & cat : (past  & bl ;b7).38 vl := i s ( round & '-hi') &39 cat : (b l  & ~ past).40 v2 := is( low).41 v2 := i s ( f ront  & '-hi').The larger grammar mentioned above contains a fullbinary decision tree for each vowel.
Still, even hereone can see the use of type formulae like round &' -h i '  to classify segments phonologically.Next come a number of exemplary inflectional af-fixes (42-79), again simplified.
The zero affixes (42-45, 47-54) are phonologically just like the zero alter-nant in (10) in taking up no segmental space.42434445464748495051525354555657585960% init ia l  "0" prefix'#'(More) := More  & se l f : '+ in i '  &cat: ( -  fut & - in f in i t i ve  &( bl ; (~ pres & (b3 ; b4))% f inal "0" suf f ix'#'(More) := More  &sel f : ' - in i '  & le f t : se l f : '+f in '  &( cat : (sg  & masc & th i rd  & past) &le f t : le f t : i s ( - f ront ); cat : (sg  & masc & th i rd  & pres) &le f t : le f t : i s ( f ront )).% overt prefixj i (More) := se l f : '+in i '  &ob l ( i s ( i ) ,ob l ( i s ( i ) ,  More)) &cat : ( fut  & th i rd  & ((sg&masc)(bl ; b2)).)).
; pl) &The segmental content of all other affixes is spec-ified via possibly repeated instances of obl ,  sinceaffixes are nonalternating.
Apart from the respectivecategotial information, positional type information' + in i ' ,  ' + f in '  ensures that prefixes and suffixesare properly restricted to wordinitial and wordfinalposition.
Note that the glide-initialji- prefix specifiesan initial/i/(58) which will be prosodified as onsetby means of syllabify.
This representational as-sumption is in line with other recent work in phono-logical theory which standardly analyzes glides asnonsyllabic high vowels.
Hence, even in MH wehave a case where segmental classes and prosodicrolesdon't align perfectly.To control second stem vowel apophony, somesuffixes demand (53,73) or forbid (51) front vowelstwo positions to their left.61626364656667686970717273747576777879u(More) := ob l ( i s (u )&se l f : '+ f in ' ,More)&le f t : le f t : i s ( -  (vowel & -front)) &cat : (p l  & ( (past & third); (fut & - first) )).a (More) :=ob l ( i s (a )&se l f : '+ f in ' ,More)&le f t : le f t : i s ( -  (vowel & -front)) &cat : ( (past  & th i rd  & sg & fem); (pres & sg & fem & b5)).et(More) :=ob l ( i s (e ) ,ob l ( i s ( t )&se l f : '+ f in ' ,More) )&le f t : le f t : i s ( f ront )  &cat:(pres & sg & fem & -b5).im(More) :=ob l ( i s ( i ) ,ob l ( i s (m)&se l f : '+ f in ' ,More) )&le f t : le f t : i s ( -  (vowel & -front)) &cat:(pres & pl & masc).16Others posit the weaker demand vowel -+ front(62,67,78), thus not forbidding consonantal fillingsof the position adressed by le f t  : l e f t .The stem definition (80-82) for a regular triliteralis parametrized for the three root segments and theinflectional Su f f ixes  to follow.80 stem(el, C2, C3, Suffixes) :=81 obl(is(Cl),x O(vl,obl(is(C2),82 x_0(v2,obl(is(C3), Suffixes))))).8384 affixes(Stem, '#'(end)) := '#'(Stem).85 affixes(Stem, a(end)) := '#'(Stem).86 affixes(Stem, et(end)) := '#'(Stem).87 affixes(Stem, im(end)) := '#'(Stem).88 affixes(Stem, u(end)) := yi(Stem).8990 verbform(\[Cl & consonant,C2 & consonant,91 C3 & consonant\], Category) :=92 root_letter_tree(\[Cl,C2,C3\]) & word &93 affixes( prosodic_prespecification &94 stem(Cl,C2,C3, Suffixes),95 Suffixes) & cat:Category.Given the informal description i  section 2, the suc-cession of obligatory root and altel"nating stem vowelpositions now looks familiar.
It should be obvi-ous how to devise analogous tem definitions forquadriliterals (e.g.
mixfev) and cluster verbs (e.g.flirtet).A rather simple tabulation of a f f i xes  lists(a subset of) the allowable prefix-suffix cooccur-rences in the MH verbal paradigm (84-88) be-fore everything is put together in the defini-tion for verbform, parametrized for a list ofroot segments and Category  (90-95).
Note howprosod ic_prespec i  f ca t ion  is intersected withstem in (93-94), exploiting the power of the descrip-tion level to restrict stem realizations without diacrit-ical marking of stem vs affix domains on the objectlevel.
The subgoal root_ le t te r_ t ree  (92) will bediscussed below.When proving a goal like verb form(  \[g, m, r \ ] ,bl&third&pl&fut), the MicroCUF interpreterwill enumerate he set of all candidate result featurestructures, including one that describes the gram-matical surface string jigmeru.
An implementationof the IOP, to be described next, must thereforecomplement the setup established sofar to excludethe suboptimal candidates.
While the subtle inter-twining of zero alternant preference and constraintsolving described above has its theoretical merits, amuch simpler practical solution was devised.
In afirst step, the small finite set of all candidate solu-tions for a goal is collected, together with numerical'disharmony' values representing each candidate'sdegree of optimality.
Disharmony is defined as thebinary number that results from application of themapping {unmarked ~ 012, marked  ~ 102} tothe left-to-right markedness vector of a segmentalstring: e.g., jolioxgolal0moxroluol yields the dishar-mony value 010101100101012 = 552510 > 54771o =010101011001012 from joli01golmoleloroluol.
Steptwo is a straightforward search for the candidate(s)with minimal disharmony.4 Parsing and generationThe preceding paragraph described how to com-pute surface forms given roots and categories.
How-ever, this generation procedure amounts to an ineffi-cient generate-and-minimize mechanism which mustcompute otherwise useless uboptimal candidates asa byproduct of optimization.
More importantly, dueto the nonmonotonicity of optimization it is not obvi-ous how to invert the procedure for efficient parsingin order to derive root and category given a surfaceform.A first solution which comes to mind is to im-plement parsing as analysis-by-synthesis.
A goallike ParseSt r ing&verb form (Root, Category)is submitted to a first run of the MicroCUF con-straint solver, resulting in instantiations for Rootand Category  iff a proof consistent with thegrammar was found.
With these instantiations, asecond run of MicroCUF uses the full generate-and-minimize mechanism to compute optimalstrings OptSt r ing l  .
.
.
.
.
OptStr ingN.
The parseis accepted iff ParseSt r ing&(OptSt r ing l ;.
.
.
;OptSt r ingN)  is  consistent.
Note that for thissolution to be feasible it is essential that constraintsare inviolable, hence their evaluation in the first runcan disregard optimization.
The main drawbacks ofanalysis-by-synthesis are that two runs are requiredand that the inefficiencies of generate-and-minimizeare not avoided.The new solution recognizes the fact that bidi-rectional processing of DPM would be easy with-out optimization.
We therefore seek to perform alloptimization at compile time.
The idea is this: ex-ploiting the finiteness of natural language paradigmswe compute - using generate-and-minimize - eachparadigm cell of e.g.
the verbal paradigm of MH fora suitable root.
However, while doing so we recordthe proof sequence of relational clause invocationsemployed in the derivation of each optimal form, us-ing the fact that each clause has a unique index ininternal representation.
Such proof sequences have17two noteworthy properties.
By definition they firstof all record just clause applications, therefore nat-urally abstracting over all non-relational parameterfillings of top-level goals.
In particular, proving agoal like verb form ( \ [g ,  m, r \ ]  , b l  ; b2  ) normallylooses the information associated with the root andcategory parameters in the proof sequence represen-tation (although these parameters could indirectly in-fluence the proof if relationally encoded choices inthe grammar were dependent on it).
Secondly, wecan profitably view each proof sequence as a linearfinite state automaton (FSAc~u).
Since a paradigmis the union of all its cells, a complete abstractparadigm can therefore be represented by a unique?
minimal deterministic FSAp=r~ which is computedas the union of all FSAcett followed by determiniza-tion and minimization.
At runtime we just need torun FSAp~,.~ as afinite-state oracle in parallel withthe MicroCUF constraint solver.
This means thateach proof step that uses a clause k must be sanc-tioned by a corresponding k-labelled FSA transition.With this technique we are now able to efficiently re-strict the search space to just the optimal proofs; theneed for run-time optimization in DPM processinghas been removed.
However, a slight caveat is nec-essary: to apply the technique it must be possible topartition the data set into a finite number of equiv-alence classes.
This condition is e.g.
automaticallyfulfilled for all phenomena which exhibit a paradigmstructure.What are the possible advantages of this hybridFSA-guided constraint processing technique?
Firstof all, it enables a particularly simple treatment ofttnkaowtl words for root-and-pattern morphologies,surely a necessity in the face of ever-incompletelexicons.
If the grammar is set up properly to ab-stract from segmental detail of the Root segmentsas much as possible, then these details are also ab-sent in the proof sequences.
Hence a single FSAparamerging these sequences in effect represents an ab-stract paradigm which can be used for a large numberof concrete instantiations.
We thus have a principledway of parsing words that contain roots not listedin the lexicon.
However, we want the system not toovergenerate, mistakenly analyzing known roots asunknown.
Rather, the system should return the se-mantics of known roots and also respect their verbalclass affiliations as well as other idiosyncratic prop-erties.
This is the purpose of the root_ le t te r_ t reeclauses in (96-123).96979899i00I01102103104105106107108109ii0i i i112113114115116117118119120121122123root_ le t te r_ t ree( \ [g lRest \ ] )  :=root_ le t te r_ t ree_g(Rest ) .root_ le t te r_ t ree( \ [ -g l _ \ ] )  :=cat : sem: 'UNKNOWN' .root_ le t te r_ t ree  g ( \ [m\ [Rest \ ] )  :=root_ le t te r_ t ree_gm(Rest ) .root_ le t te r_ t ree  g ( \ [d \ [Rest \ ] )  :=root_ le t te r_ t ree_gd(Rest ) .root_ le t te r_ t ree  g ( \ [ -m&~dI_ \ ] )  :=cat : sem: 'UNKNOWN' .root_ le t te r_ t ree  gm(\[r \ ] )  :=cat: (bl & sem: 'F IN ISH '; b2 & sem: 'BE  F IN ISHED' ) .root_ le t te r_ t ree  gm( \ [ - r l _ \ ] )  :=cat :sem: 'UNKNOWN' .root_ le t te r_ t ree_gd(  \[r\] ) :=cat: ( bl  & sem: 'ENCLOSE '; b2 & sem: 'BE ENCLOSED'; b3 & sem: 'FENCE IN'; b4 & sem: 'BE FENCED IN'; b5 & sem: 'DEF INE '; b6 & sem: 'BE DEFINED'; b7 & sem: 'EXCEL').root_ le t te r_ t ree_gd(  \[-rl_\] ) :=cat :sem: 'UNKNOWN' .For each level in the letter tree a new terminalbranch is added that covers the complement of all at-tested root segments at that level (99,106,112,123).This terminal branch is assigned an 'UNKNOWN' se-mantics, whereas known terminal branches recorda proper semantics and categorial restrictions.
Dur-ing off-line creation of the proof sequences we nowsimply let the system backtrack over all choices inthe root_letter_tree by feeding it a totally un-derspecified Root parameter.
The resulting FSApar=represents both the derivations of all known rootsand of all possible unknown root types covered bythe grammar.
While this treatment results in a ho-mogenous grammar integrating lexical and gram-matical aspects, it considerably enlarges FSApara.
Itmight herefore be worthwhile to separate l xical ac-cess from the grammar, unning a separate proof ofroot_ le t te r_ t ree  (Root )  to enforce root-specificrestrictions after parsing with the abstract paradigmalone.
It remains to be seen which approach is morepromising w.r.t, overall space and time efficiency.A second advantage of separating FSA guidancefrom constraint processing, as compared to purefinite-state transducer approaches, i  that we are freeto build sufficient expressivity into the constraint lan-guage.
For example it seems that one needs tokenidentity, i.e.
structure sharing, in phonology to cover18instances of antigemination, assimilation, dissimila-tion and reduplication i  an insightful way.
It is well-known that token identity is not finite-state repre-sentable and cumbersome toemulate in practice (cf.Antworth 1990, 157 on a FST attempt at reduplica-tion vs the DPM treatment of infixal reduplicationin Tigrinya verbs described in Walther 1997, 238-247).
Also, it would be fascinating to extend theconstraint-based approach to phonetics.
However, apilot study reported in Walther & Krrger (1994) hasfound it necessary to use arithmetic onstraints todo so, again transcending finite-state power.
Finally,to the extent hat sign-based approaches togrammarlike HPSG are on the right track, the smooth integra-tion of phonology and morphology arguably is bet-ter achieved within a uniform formal basis such asMicroCUF which is expressive enough to cover therecursive aspects of syntax and semantics as well.In conclusion, some notes on the pilot implemen-tation.
The MicroCUF system was modified to pro-duce two new incarnations of the MicroCUF inter-preter, one to record proof sequences, the other toperform FSA-guided proofs.
FSApara was createdwith the help of finite-state ools from AT&T's freelyavailablefsm package (h t tp :  //www.
research .ar t .
com /sw / too ls  / fsm/) .
Ihavemeasuredspeedups of more than 102 for the generation of MHforms (< l second with the new technique), althoughparse times in the range of 1 .
.
.
4 seconds on a Pen-tium 200 MHz PC with 64 M_Byte indicate that thecurrent prototype is still too slow by a factor of morethan l02.
However, there is ample room for futureimprovements.
Besides drawing from the wealth ofoptimizations found in the logic programming liter-ature to generally accelerate MicroCUF (e.g., termencoding of feature structures, memoization) we canalso analyze the internal structure of FSAvara to gainsome specific advantages.
This is due to the fact thateach maximal linear sub-FSA of length k > i corre-sponds to a deterministic proof subsequence whoseclauses should be partially executable at compiletime, subsequently saving k - 1 proof steps at run-time.5 ConclusionThis paper has described a computational, declara-tive approach to prosodic morphology which usesinviolable constraints formulated in a sufficiently ex-pressive formalism (here: MicroCUF) together witha restrictive incremental optimization component.The approach as been illustrated by implementingan a-templatic analysis of a fragment of Modern He-brew verbs.
The full grammar behind the illustrativefragment covers additional detail such as antigem-ination effects (noded-im, *nod d-im 'they (masc.
)wander'), spirantization, B7 sibilant metathesis, etc.Also, the formalization of X/~ presented here isactually a special case of the more powerful no-tion of resequencing, whose application to Tigrinyavowel coalescence and metathesis was demonstratedin Walther (1997).Despite the initial emphasis on incremental op-timization, a compilation technique was later pro-posed to remove the need for run-time optimiza-tion and guarantee fully bidirectional processing ofprosodic morphology.
Although the general idea ofusing a finite-state oracle to guide a parser hasbeen previously proposed for context-free grammars(Johnson 1996), both the details of our implemen-tation of the idea and its specific application toprosodic morphology are believed to be novel.
It wasemphasized how the proposed technique aided in asimple treatment of unknown words.
Note that un-known words are not normally integrated into finite-state transducer models of prosodic morphology, al-though the necessary extensions appear to be pos-sible (K. Beesley, p.c.).
Finally, the fact that a hy-brid setup rather than a pure finite-state approachwas chosen has been motivated inter alia by refer-ence to additional phenomena such as antigemina-tion and reduplication that require the richer notionof token identity.
Future research will especially fo-cus on detailed analyses of reduplication phenomenato secure the relevance of the present approach toprosodic morphology at large.ReferencesAntworth, E. (1990).
PC-KIMMO: A Two-Level Pro-cessor for Morphological Analysis.
Dallas: SIL.Bat-El, O.
(1989).
Phonology and Word Structure inModern Hebrew.
Ph.D. thesis, UCLA.Beesley, K. R. (1996).
Arabic Finite-State Morpholog-ical Analysis and Generation.
In: Proceedings ofCOLING-96, vol.
I, 89-94.Bird, S. (1995).
ComputationalPhonology.
CambridgeUniversity Press.Bird, S. & E. Klein (1990).
Phonological events.
Jour-nal of Linguistics 26, 33-56.Chomsky, N. (1965).
Aspects of the Theory of Syntax.Cambridge, MA: MIT Press.Drrre, J.
& M. Dorna (1993).
CUF - A Formalism forLinguistic Knowledge Representation.
I : J.
Drrre(Ed.
), Computational Aspects of Constraint-BasedLinguistic Description.
IMS, Universit/it Stuttgart.19Deliverable R1.2.A, DYANA-2 - ESPRIT BasicResearch Project 6852.Ellison, T. M. (1994).
Phonological Derivation in Op-timality Theory.
In: Proceedings of COLING '94,vol.
II, 1007-1013.
(ROA-75, CMP-LG 9504021).Ellison, T. M. (1995).
OT, Finite-State Representationsand Procedurality.
In: Proceedings of the Confer-ence on Formal Grammar, Barcelona.Eilison, T. M. (to appear).
The Universal ConstraintSet: Convention, ot Fact.
In: J. Dekkers, E van derLeeuw & J. van de Weijer (Ed.
), Conceptual Stud-ies in Optimality Theory.
Oxford University Press.Gafos, A.
(1995).
On the Proper Characterization of'Nonconcatenative' Languages.
Ms., Departmentof Cognitive Science, The Johns Hopkins Univer-sity, Baltimore.
(ROA-106).Glinert, L. (1989).
The grammar of Modern Hebrew.Cambridge University Press.Hudson, G. (1986).
Arabic root and pattern morphol-ogy without iers.
Journal of Linguistics 22, 85-122.Johnson, M. (1996).
Left Corner Transforms and Fi-nite State Approximations.
Tech report ML'Iq'-026,Rank Xerox Research Centre, Grenoble.Kahn, D. (1976).
Syllable-Based Generalizations inEnglish Phonology.
Bloomington: Indiana Univer-sity Linguistics Club.
(= MIT Ph.D. dissertation).Karttunen, L. (1998).
The Proper Treatment of Opti-mality in Computational Phonology.
In: Proceed-ings of FSMNLP'98.
International Workshop onFinite-State Methods in Natural Language Pro-cessing, Bilkent University, Ankara, 1-12.Kiraz, G. A.
(1996).
Computing Prosodic Morphology.In: Proceedings of COLING '96, vol.
II, 664.-669.Kisseberth, C. (1970).
On the functional unity ofphonological rules.
Linguistic Inquio' 1, 291-306.McCarthy, J.
(1979).
Formal Problems in SemiticPhonology and Morphology.
Ph.D. thesis, MIT.McCarthy, J.
& A.
Prince (1993).
Prosodic Morphol-ogy I: Constraint Interaction and Satisfaction.
Techreport RuCCS-TR-3, Rutgers University Centerfor Cognitive Science.Prince, A.
& P. Smolensky (1993).
Optimality The-ory.
Constraint Interaction in Generative Gram-mar.
Tech report RuCCS-TR-2, Rutgers UniversityCenter for Cognitive Science.Riehemann, S. (1993).
Word Formation in LexicalType Hierarchies: A Case Study of bar-Adjectivesin German.
Master's thesis, Universit~it Tiibingen.
(also: SfS-Report-02-93, Seminar f'tir Sprachwis-senschaft, Universit~it Tiibingen).Scobbie, J. M. (1991).
Towards Declarative Phonol-ogy.
In: S. Bird (Ed.
), Declarative Perspectives onPhonology, vol.
7 of Edinburgh Working Papers inCognitive Science, 1-26.
Centre for Cognitive Sci-ence, University of Edinburgh.20Selkirk, E. (1982).
The syllable.
In: H. van der Hulst& N. Smith (Ed.
), The structure of phonologicalrepresentations, vol.
II, 337-383.
Dordrecht: Foris.Sproat, R. (1992).
Morphology and Computation.Cambridge, Mass.
: MIT Press.Walther, M. (1993).
Declarative Syllabification withApplications to German.
In: T. M. Ellison & J. M.Scobbie (Ed.
), ComputationalPhonology, vol.
8 ofEdinburgh Working Papers in Cognitive Science,55-79.
Centre for Cognitive Science, University ofEdinburgh.Walther, M. (1995).
A Strictly Lexicalized Approach toPhonology.
In: J. Kilbury & R. Wiese (Ed.
), Pro-ceedings of DGfS/CL'95, 108-113.
Diisseldorf:Deutsche Gesellschaft f'tir Sprachwissenschaft,Sektion Computerlinguistik.Walther, M. (1997).
Deklarative prosodische Mor-phologie - constraintbasierte Analysen und Com-putermodelle zum Finnischen und Tigrinya.
Ph.D.thesis, Philosophische Fakultfit der Heinrich-Heine-Universit~it D .isseldorf.Walther, M. & B. Kr6ger (1994).
Phonologie-Phonetik-Kopplung in einem constraintbasiertengesturalen Modell.
In: H. Trost (Ed.
), Tagungs-band KONVENS '94, Nummer 6 in Infor-matik Xpress, 387-396.
Wien: OsterreichischeGesellschaft fiir Artificial Intelligence.
