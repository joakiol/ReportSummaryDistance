Proceedings of the NAACL HLT 2010 Student Research Workshop, pages 40?45,Los Angeles, California, June 2010. c?2010 Association for Computational LinguisticsTemporal Relation Identification with EndpointsChong Min LeeGeorgetown University3700 O Street, NWWashington, D.C. 20057, USAcml54@georgetown.eduAbstractTemporal relation classification task has is-sues of fourteen target relations, skewed dis-tribution of the target relations, and relativelysmall amount of data.
To overcome the is-sues, methods such as merging target relationsand increasing data size with closure algo-rithm have been used.
However, the methodusing merged relations has a problem on howto recover original relations.
In this paper,a new reduced-relation method is proposed.The method decomposes a target relation intofour pairs of endpoints with three target rela-tions.
After classifying a relation of each end-point pair, four classified relations are com-bined into a relation of original fourteen targetrelations.
In the combining step, two heuris-tics are examined.1 IntroductionAn interesting task in temporal information process-ing is how to identify a temporal relation betweena pair of temporal entities such as events (EVENT)and time expressions (TIMEX) in a narrative.
Af-ter the publication of TimeBank (Pustejovsky et al,2003b) annotated in TimeML (Pustejovsky et al,2003a), supervised learning techniques have beentested in the temporal relation identification taskwith different types of temporal entity pairs (Cham-bers et al, 2007; Boguraev and Ando, 2005; Verha-gen et al, 2007).There are three issues in applying supervised ma-chine learning methods to this task.
The first issueis that a temporal entity pair that is defined as a di-rected temporal link (TLINK) in TimeML should beclassified into a relation among fourteen relations.The second issue is that the number of TLINKs isrelatively small in spite of the fourteen targets.
Thethird issue is skewed distributions of the relations.Without the solutions of the issues, it is impossi-ble to achieve good performance in temporal relationidentification through machine learning techniques.Several solutions have been suggested such as in-creased number of TLINKs with a transitivity clo-sure algorithm (Mani et al, 2007; Chambers etal., 2007) and decreased target relations into six(Mani et al, 2006; Chambers et al, 2007; Tatu andSrikanth, 2008) or three (Verhagen et al, 2007).
Anissue of the reduced-relation method is how to re-cover original relations.
A module for the recoverycan cause performance degeneration and seems in-tuitively inappropriate.In this paper, a new reduced-relation method ispresented.
The method uses endpoints of tempo-ral entities.
A TimeML relation can be representedinto four endpoint pairs with three relations: before,equal, and after.
This method requires four rela-tion identification classifiers among endpoints for aTLINK and each classifier has only three target re-lations instead of fourteen.
The four classified re-lations need to be combined in order to restore aninterval-based relation.
In this study, the perfor-mance of the proposed method will be evaluated inidentifying TLINK relations between temporal enti-ties empirically.Firstly, related studies are described in section 2.Secondly, the identification of four pointwise rela-tions is described.
Thirdly, methods for the combi-nation of pointwise relations are explained.
Finally,40the outlook of the proposed method is proposed.2 BackgroundTemporal relation identification has three problems:sparse data, fourteen target relations, and skeweddistribution.
To reduce the problems, previous stud-ies have used techniques such as increasing data sizewith closure algorithm and merging target relations.Mani et al (2006) used closure algorithm to in-crease training data size and merged inverse rela-tions into six main relations.
Their study appliedthe methods to classify relations of all TLINKs andshowed the benefit of the methods in temporal re-lation identification.
Chambers et al (2007) re-ported 67.0% accuracy on the relation identificationtask among EVENT-EVENT (EE) TLINKs usingthe merged relations.
And, the accuracy is the bestperformance with EE TLINKs.The merging method assumes that target relationsof TLINKs is already known.
When a TLINK re-lation from an anchor to a target is AFTER, it canbe changed into BEFORE by conversing the anchorand the target each other.
When unknown instanceis given, the merging process is impossible.
Whensix merged relations were used as target relations,we assumes the conversion is already done.
And theassumption is inappropriate.TempEval07 (Verhagen et al, 2007) integrated14 TLINK relations into three: before, after, andoverlap.
overlap is an extended relation that cov-ers 12 relations except BEFORE and AFTER.
Thisapproach has a burden to recover 12 relations fromthe extensive one.In this study, a TLINK is decomposed into fourpairs of endpoint links in the step of applying ma-chine learning approaches.
Then, four classifiedendpoint relations are combined into a TimeML re-lation.
Allen (1983) showed a relative order betweenintervals can be decomposed into relative orders offour endpoint pairs.
In TimeML, temporal entities,EVENT and TIMEX, are intervals.
An interval hasa pair of endpoints: start and end.
A relation be-tween two intervals can be represented into relationsof four pairs of starts and ends as in Table 2.
Arelative order between endpoints can be representedwith three relations: before, equal, and after.
Theproposed method will be empirically investigated inthis study.3 Resources and Data Preparation3.1 Temporal CorporaTimeBank and Opinion corpora consist of 183 and73 documents respectively.
Among the documents,it is found that 42 documents have inconsistentTLINKs.
The inconsistencies make it impossible toapply closure algorithm to the documents.
There-fore, the 42 documents with inconsistent TLINKsare excluded.
This study focuses on classifying re-lations of three types of TLINKs: TLINKs betweenEVENTs (EE), between an EVENT and a TIMEX(ET), and between an EVENT and Document Cre-ation Time (ED).As a preparation step, fourteen relations aremerged into eleven relations (TimeML relations).SIMULTANEOUS, IDENTITY, DURING, and DU-RUNG BY relations are identical in relative orderbetween entities.
Therfore, the relations are inte-grated into SIMULTANEOUS1.
Then, closure algo-rithm is run on the documents to increase the num-ber of TLINKs.
The distribution of relations of threetypes is given in Table 1.A document with merged relations is divided intofour documents with endpoint relations: start of an-chor and start of target, start of anchor and end oftarget, end of anchor and start of target, and end ofanchor and end of target documents.
The conversiontable of a TimeML relation into four endpoint rela-tions is given in Table 2 and the distribution of threerelations after the conversion is given in 3.4 Relation identification with end pointsIn endpoint relation identification experiment, sup-port vector machine (SVM) and maximum entropyclassifiers are built to classify three relations: be-fore, equal, and after.
First, feature vectors areconstructed.
When four endpoint links are from aTLINK, their feature vectors are identical except tar-get endpoint relations.1Mani et al (2006) said DURING was merged intoIS INCLUSED.
However, DURING, SIMULTANEOUS, andIDENTITY are converted into = of Allen?s relations inTarski Toolkit (Verhagen et al, 2005).
In this paper, theimplementation is followed.41Relation EVENT-EVENT EVENT-TIMEX EVENT-DCTOriginal Closed Original Closed Original ClosedAFTER 735 11083 86 2016 169 259BEFORE 1239 12445 160 1603 721 1291BEGINS 35 75 23 36 0 0BEGUN BY 38 74 51 58 10 11ENDS 15 64 65 128 0 0ENDED BY 87 132 43 61 6 6IAFTER 38 138 3 8 1 1IBEFORE 49 132 2 9 0 0INCLUDES 246 3987 122 166 417 469IS INCLUDED 327 4360 1495 2741 435 467SIMULTANEOUS 1370 2348 201 321 75 90Table 1: Distribution of TimeML relationsTimeML Relation Inverse Endpoint Relationsx BEFORE y y AFTER x x?
< y?, x?
< y+,x+ < y?, x+ < y+x SIMULTANEOUS y y SIMULTANEOUS x x?
= y?, x?
< y+,x+ > y?, x+ = y+x IBEFORE y y IAFTER x x?
< y?, x?
< y+,x+ = y?, x+ < y+x BEGINS y y BEGUN BY x x?
= y?, x?
< y+,x+ > y?, x+ < y+x ENDS y y ENDED BY x x?
> y?, x?
< y+,x+ > y?, x+ = y+x INCLUDES y y IS INCLUDED x x?
< y?, x?
< y+,x+ > y?, x+ > y+Table 2: Relation conversion tableEnd pairs EVENT-EVENT EVENT-TIMEX EVENT-DCTbefore equal after before equal after before equal afterstart-start 1621 (39%) 1443 (35%) 1115 (27%) 327 (15%) 275 (12%) 1649 (73%) 1144 (62%) 85 (5%) 605 (33%)start-end 3406 (82%) 38 (1%) 735 (18%) 2162 (96%) 3 86 (4%) 1664 (91%) 1 169 (9%)end-start 1239 (30%) 49 (1%) 2891 (69%) 160 (7%) 2 2089 (93%) 721 (39%) 0 1113 (61%)end-end 1650 (39%) 1472 (35%) 1057 (25%) 1680 (75%) 309 (14%) 262 (12%) 1156 (63%) 81 (4%) 597 (33%)Table 3: Distribution of end point relations.4210-fold cross validation is applied at document-level.
In some previous studies, all temporal linkswere collected into a set and the set was split intotraining and test data without the distinction onsources.
However, the approach could boost systemperformance as shown in Tatu and Srikanth (2008).When TLINKs in a file are split in training andtest data, links in training data can be composed ofsimilar words in test data.
In that case, the links intraining can play a role of background knowledge.Therefore, document-level 10-fold cross validationis exploited.4.1 FeaturesIn constructing feature vectors of three TLINKtypes, features that were used in order to identifyTimeML relations in previous studies are adopted.The features have been proved useful in identifyinga TimeML relation in the studies.
Moreover, the fea-tures still seem helpful for endpoint relation identifi-cation task.
For example, past and present tenses oftwo EVENTs could be a clue to make a predictionthat present tensed EVENT is probably after pasttensed EVENT.Annotated information of EVENT and TIMEX inthe temporal corpora is used in the feature vectorconstruction.
This proposed approach to use end-point conversion in relation identification task is thefirst attempt.
Therefore, the annotated values areused as features in order to see the effect of this ap-proach.
However, state-of-the-arts natural languageprocessing programs such as Charniak parser andPorter Stemmer are sometimes used to extract ad-ditional features such as stems of event words, theexistence of both entities in the same phrase, andetc.The company has reported declines in op-erating profit in the past three yearsFeatures for EVENT TENSE, ASPECT,MODAL, POS, and CLASS annotations are bor-rowed from temporal corpora as features.
And,a stem of an EVENT word is added as a featureinstead of a word itself in order to normalize it.reported is represented as <(TENSE:present),(ASPECT:perferce), (MODAL:none), (POS: verb),(CLASS: reporting), (STEM:report)>.Features for TIMEX In the extraction of TIMEXfeatures, it tries to capture if specific words are in atime expression to normalize temporal expressions.The time point of an expression can be inferredthrough the specific words such as ago, coming, cur-rent, earlier and etc.
Additionally, the existence ofplural words such as seconds, minutes, hours, days,months, and years is added as a feature.
The specificwords are:?
ago, coming, current, currently, earlier, early,every, following, future, last, later, latest, next,now, once, past, previously, recent, recently,soon, that, the, then, these, this, today, tomor-row, within, yesterday, and yetthe past three years are represented as <(AGO:0),(COMING:0), (CURRENT:0), (CURRENTLY:0),(EARLIER:0), (EARLY:0), (EVERY:0), (FOL-LOWING:0), (FUTURE:0), (LAST:1), (LATER:0),(LASTED:0), (NEXT:0), (NOW:0), (ONCE:0),(PAST:1), (PREVIOUSLY:0), (RECENT:0), (RE-CENTLY:0), (SOON:0), (THAT:0), (THE:1),(THEN:0), (THESE:0), (THIS:0), (TODAY:0),(TOMORRWO:0), (WITHIN:0), (YESTERDAY:0),(YET:0), (PLURAL:1)>.Relational features between entities In addition,relational information between two entities is usedas features.
It is represented if two entities are in thesame sentence.
To get the other relational informa-tion, a sentence is parsed with Charniak parser.
Syn-tactic path from an anchor to a target is calculatedfrom the parsed tree.
A syntactic path from reportedto the past three years is ?VBN?VP?PP?NP?.
It isrepresented if two entities are in the same phraseand clause with the path.
When only one clauseor phrase exists in the path except part-of-speechesof both entities, the features are marked as 1s.
Thecounts of words, phrases, and clauses between tem-poral entities are also used as features.
When twoentities are not in the same sentence, 0s are givenas the values of the features except the word count.Some prepositions and conjunctions are used as fea-tures when the words are used as a head word ofsyntactic path from an entity to the other entity.
Inthe example of ?VBN?VP?PP?NP?, ?in?
in ?in thepast three years?
is the head word of PP.
So, in ismarked 1.
The head words that are used as featuresare:43?
after, as, at, before, between, by, during, for, in,once, on, over, since, then, through, throughout,until, when, and whileEE and ET types have feature vectors that consistof features of both entities and relational features.ED type has only features of EVENT.5 Restoration of original relationsFour endpoint relations of a TLINK are classified inthe previous section.
The combination of the clas-sified relations needs to be restored into a relationamong the eleven merged TimeML relations.
How-ever, due to the independence of four classifiers, it isnot guaranteed that a TimeML relation can be gener-ated from four endpoint relations.
When the restora-tion fails, the existence of errors in the four predic-tions is implied.
In this step, two methods to restorea TimeML relation are investigated: Minimum EditDistance (MED) and Highest Score (HS).MED checks how many substitutions are neededto restore a TimeML relation.
A TimeML relationwith the minimum changes is defined as the restoredrelation.
Let?s suppose four endpoint relations aregiven such as x?
before y?, x?
after y+, x+ be-fore y?, and x+ before y+.
Among other possibleways to get a TimeML relation, BEFORE could berecovered with a change of before in x?
after y+into before.
Therefore, BEFORE is chosen as a re-stored TimeML relation.
When several candidatesare available, a method is examined in selecting one.The method is to give weight on classifiers that showbetter performance.
If two candidates are availableby changing before of start-start or before of start-end in ET type, this method selects a candidate bychanging before when before of start-end shows bet-ter performance.HS uses the sum of confidence scores from clas-sifiers.
Each classifier of the four endpoint pairsgenerates confidence scores of three relations (be-fore, equal, and after).
Among 81 possible com-binations of four classifiers with three target rela-tions, the highest-scored one that can be restoredinto a TimeML relation is chosen as a prediction.When several candidates exist, the selection methodof MED is also adopted.6 Expectations and future plansFirst, I will show how beneficial four endpointsystems are at identifying endpoint relations.
F-measure will be used to show the performance of anendpoint relation classifier in identifying each end-point relation.
And, accuracy is used to report over-all performance of the classifier.
Second, I will showhow effective the endpoint method is in identifyingTLINK relations.
I will build a base classifier witheleven TimeML relations and feature vectors thatare identical with the endpoint systems.
The perfor-mance difference in identifying TimeML relationsbetween this proposed system and the base systemwill be presented to show whether this proposed ap-proach is successful.Previous research such as Verhagen et al (2007)using three reltions as target relations showed from60% to 80% performance according to TLINKtypes.
Moreover, some distributions of endpoint re-lations show over 90% such as before of end-startin ET and ED TLINKs, and after of end-start in ETTLINK in Table 3.
Therefore, we can expect eachendpoint identification system will perform well inclassifying endpoint relations.The success of this new approach will depend onthe restoration step.
The excessively skewed dis-tributions can make similar predicted sequences ofendpoint relations.
It can weaken the advantage ofthis endpoint approach that every TimeML relationcan be generated through combining endpoint rela-tions.
For example, equal shows very small dis-tributions in start-end and end-start endpoint pairs.Therefore, it is probable that TimeML relations suchas IAFTER and IBEFORE cannot be classified cor-rectly.
It can be a challenge how to correctly classifyendpoint relations with small distribution.One possible solution for the challenge is to checkglobal consistency among classified relations suchas Bramsen et al (2006) and Chambers and Juraf-sky (2008).
The global consistency restoration cangive a chance to replace excessively distributed rela-tions with sparse relations.
However, equal is usedadditionally in this study.
Therefore, modificationsin the method of Bramsen et al (2006) and Cham-bers and Jurafsky (2008) are needed before applyingtheir method.44ReferencesJames Allen.
1983.
Maintaining knowledge about tem-poral intervals.
Communications of the Association forComputing Machinery, 26(1):832?843.Branimir Boguraev and Rie Kubota Ando.
2005.TimeML-compliant text analysis for temporal reason-ing.
In Proceedings of the 2005 International JointConference on Artificial Intelligence, pages 997?1003.Philip Bramsen, Pawan Deshpande, Yoong Keok Lee,and Regina Barzilay.
2006.
Inducing temporal graphs.In Proceedings of the 2006 Conference on EmpiricalMethods on Natural Language Processing, pages 189?198.Nathanael Chambers and Dan Jurafsky.
2008.
Jointlycombining implicit constraints improves temporal or-dering.
In EMNLP ?08: Proceedings of the Confer-ence on Empirical Methods in Natural Language Pro-cessing, pages 698?706, Morristown, NJ, USA.
Asso-ciation for Computational Linguistics.Nathanael Chambers, Shan Wang, and Dan Jurafsky.2007.
Classifying temporal relations between events.In Proceedings of 45th Annual Meeting of the Associ-ation for Computational Linguistics, pages 173?176.Inderjeet Mani, Marc Verhagen, Ben Wellner, Chong MinLee, and James Pustejovsky.
2006.
Machine learningof temporal relations.
In Proceedings of the 21st In-ternational Conference on Computational Linguisticsand 44th Annual Meeting of the Association for Com-putational Linguistics.Inderjeet Mani, Ben Wellner, Marc Verhagen, and JamesPustejovsky.
2007.
Three approaches to learningtlinks in timeml.
Technical Report CS-07-268, Bran-deis University, Waltham, MA, USA.James Pustejovsky, Jose Castao, Robert Ingria, RoserSaur, Robert Gaizauskas, and Andrea Setzer.
2003a.TimeML: robust specification of event and temporalexpressions in text.
In IWCS-5 Fifth InternationalWorkshop on Computational Semantics.James Pustejovsky, Patrick Hanks, Roser Saur, AndrewSee, David Day, Lisa Ferro, Robert Gaizauskas, Mar-cia Lazo, Andrea Setzer, and Beth Sundheim.
2003b.The TimeBank corpus.
In Proceedings of Corpus Lin-guistics 2003, pages 647?656, Lancaster, UK.Marta Tatu and Munirathnam Srikanth.
2008.
Experi-ments with reasoning for temporal relations betweenevents.
In COLING ?08: Proceedings of the 22nd In-ternational Conference on Computational Linguistics,pages 857?864, Morristown, NJ, USA.
Association forComputational Linguistics.Marc Verhagen, Inderjeet Mani, Roser Sauri, RobertKnippen, Seok Bae Jang, Jessica Littman, AnnaRumshisky, John Phillips, and James Pustejovsky.2005.
Automating temporal annotation with tarsqi.
InACL ?05: Proceedings of the ACL 2005 on Interac-tive poster and demonstration sessions, pages 81?84,Morristown, NJ, USA.
Association for ComputationalLinguistics.Marc Verhagen, Robert Gaizauskas, Frank Schilder,Mark Hepple, Graham Katz, and James Pustejovsky.2007.
SemEval-2007 task 15: TempEval temporal re-lation identification.
In Proceedings of the 4th Interna-tional Workshop on Semantic Evaluations (SemEval-2007), pages 75?80, Prague.45
