Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1724?1734,October 25-29, 2014, Doha, Qatar.c?2014 Association for Computational LinguisticsLearning Phrase Representations using RNN Encoder?Decoderfor Statistical Machine TranslationKyunghyun ChoBart van Merri?enboer Caglar GulcehreUniversit?e de Montr?ealfirstname.lastname@umontreal.caDzmitry BahdanauJacobs University, Germanyd.bahdanau@jacobs-university.deFethi Bougares Holger SchwenkUniversit?e du Maine, Francefirstname.lastname@lium.univ-lemans.frYoshua BengioUniversit?e de Montr?eal, CIFAR Senior Fellowfind.me@on.the.webAbstractIn this paper, we propose a novel neu-ral network model called RNN Encoder?Decoder that consists of two recurrentneural networks (RNN).
One RNN en-codes a sequence of symbols into a fixed-length vector representation, and the otherdecodes the representation into another se-quence of symbols.
The encoder and de-coder of the proposed model are jointlytrained to maximize the conditional prob-ability of a target sequence given a sourcesequence.
The performance of a statisti-cal machine translation system is empiri-cally found to improve by using the con-ditional probabilities of phrase pairs com-puted by the RNN Encoder?Decoder as anadditional feature in the existing log-linearmodel.
Qualitatively, we show that theproposed model learns a semantically andsyntactically meaningful representation oflinguistic phrases.1 IntroductionDeep neural networks have shown great success invarious applications such as objection recognition(see, e.g., (Krizhevsky et al., 2012)) and speechrecognition (see, e.g., (Dahl et al., 2012)).
Fur-thermore, many recent works showed that neu-ral networks can be successfully used in a num-ber of tasks in natural language processing (NLP).These include, but are not limited to, languagemodeling (Bengio et al., 2003), paraphrase detec-tion (Socher et al., 2011) and word embedding ex-traction (Mikolov et al., 2013).
In the field of sta-tistical machine translation (SMT), deep neuralnetworks have begun to show promising results.
(Schwenk, 2012) summarizes a successful usageof feedforward neural networks in the frameworkof phrase-based SMT system.Along this line of research on using neural net-works for SMT, this paper focuses on a novel neu-ral network architecture that can be used as a partof the conventional phrase-based SMT system.The proposed neural network architecture, whichwe will refer to as an RNN Encoder?Decoder, con-sists of two recurrent neural networks (RNN) thatact as an encoder and a decoder pair.
The en-coder maps a variable-length source sequence to afixed-length vector, and the decoder maps the vec-tor representation back to a variable-length targetsequence.
The two networks are trained jointly tomaximize the conditional probability of the targetsequence given a source sequence.
Additionally,we propose to use a rather sophisticated hiddenunit in order to improve both the memory capacityand the ease of training.The proposed RNN Encoder?Decoder with anovel hidden unit is empirically evaluated on thetask of translating from English to French.
Wetrain the model to learn the translation probabil-ity of an English phrase to a corresponding Frenchphrase.
The model is then used as a part of a stan-dard phrase-based SMT system by scoring eachphrase pair in the phrase table.
The empirical eval-uation reveals that this approach of scoring phrasepairs with an RNN Encoder?Decoder improvesthe translation performance.We qualitatively analyze the trained RNNEncoder?Decoder by comparing its phrase scoreswith those given by the existing translation model.The qualitative analysis shows that the RNNEncoder?Decoder is better at capturing the lin-guistic regularities in the phrase table, indirectlyexplaining the quantitative improvements in theoverall translation performance.
The further anal-ysis of the model reveals that the RNN Encoder?Decoder learns a continuous space representationof a phrase that preserves both the semantic andsyntactic structure of the phrase.17242 RNN Encoder?Decoder2.1 Preliminary: Recurrent Neural NetworksA recurrent neural network (RNN) is a neural net-work that consists of a hidden state h and anoptional output y which operates on a variable-length sequence x = (x1, .
.
.
, xT).
At each timestep t, the hidden state h?t?of the RNN is updatedbyh?t?= f(h?t?1?, xt), (1)where f is a non-linear activation func-tion.
f may be as simple as an element-wise logistic sigmoid function and as com-plex as a long short-term memory (LSTM)unit (Hochreiter and Schmidhuber, 1997).An RNN can learn a probability distributionover a sequence by being trained to predict thenext symbol in a sequence.
In that case, the outputat each timestep t is the conditional distributionp(xt| xt?1, .
.
.
, x1).
For example, a multinomialdistribution (1-of-K coding) can be output using asoftmax activation functionp(xt,j= 1 | xt?1, .
.
.
, x1) =exp(wjh?t?)?Kj?=1exp(wj?h?t?
),(2)for all possible symbols j = 1, .
.
.
,K, where wjare the rows of a weight matrix W. By combiningthese probabilities, we can compute the probabil-ity of the sequence x usingp(x) =T?t=1p(xt| xt?1, .
.
.
, x1).
(3)From this learned distribution, it is straightfor-ward to sample a new sequence by iteratively sam-pling a symbol at each time step.2.2 RNN Encoder?DecoderIn this paper, we propose a novel neural networkarchitecture that learns to encode a variable-lengthsequence into a fixed-length vector representationand to decode a given fixed-length vector rep-resentation back into a variable-length sequence.From a probabilistic perspective, this new modelis a general method to learn the conditional dis-tribution over a variable-length sequence condi-tioned on yet another variable-length sequence,e.g.
p(y1, .
.
.
, yT?| x1, .
.
.
, xT), where onex1 x2 xTyT' y2 y1cDecoderEncoderFigure 1: An illustration of the proposed RNNEncoder?Decoder.should note that the input and output sequencelengths T and T?may differ.The encoder is an RNN that reads each symbolof an input sequence x sequentially.
As it readseach symbol, the hidden state of the RNN changesaccording to Eq.
(1).
After reading the end ofthe sequence (marked by an end-of-sequence sym-bol), the hidden state of the RNN is a summary cof the whole input sequence.The decoder of the proposed model is anotherRNN which is trained to generate the output se-quence by predicting the next symbol ytgiven thehidden state h?t?.
However, unlike the RNN de-scribed in Sec.
2.1, both ytand h?t?are also con-ditioned on yt?1and on the summary c of the inputsequence.
Hence, the hidden state of the decoderat time t is computed by,h?t?= f(h?t?1?, yt?1, c),and similarly, the conditional distribution of thenext symbol isP (yt|yt?1, yt?2, .
.
.
, y1, c) = g(h?t?, yt?1, c).for given activation functions f and g (the lattermust produce valid probabilities, e.g.
with a soft-max).See Fig.
1 for a graphical depiction of the pro-posed model architecture.The two components of the proposed RNNEncoder?Decoder are jointly trained to maximizethe conditional log-likelihoodmax?1NN?n=1log p?
(yn| xn), (4)1725where ?
is the set of the model parameters andeach (xn,yn) is an (input sequence, output se-quence) pair from the training set.
In our case,as the output of the decoder, starting from the in-put, is differentiable, we can use a gradient-basedalgorithm to estimate the model parameters.Once the RNN Encoder?Decoder is trained, themodel can be used in two ways.
One way is to usethe model to generate a target sequence given aninput sequence.
On the other hand, the model canbe used to score a given pair of input and outputsequences, where the score is simply a probabilityp?
(y | x) from Eqs.
(3) and (4).2.3 Hidden Unit that Adaptively Remembersand ForgetsIn addition to a novel model architecture, we alsopropose a new type of hidden unit (f in Eq.
(1))that has been motivated by the LSTM unit but ismuch simpler to compute and implement.1Fig.
2shows the graphical depiction of the proposed hid-den unit.Let us describe how the activation of the j-thhidden unit is computed.
First, the reset gate rjiscomputed byrj= ?([Wrx]j+[Urh?t?1?
]j), (5)where ?
is the logistic sigmoid function, and [.
]jdenotes the j-th element of a vector.
x and ht?1are the input and the previous hidden state, respec-tively.
Wrand Urare weight matrices which arelearned.Similarly, the update gate zjis computed byzj= ?([Wzx]j+[Uzh?t?1?]j).
(6)The actual activation of the proposed unit hjisthen computed byh?t?j= zjh?t?1?j+ (1?
zj)?h?t?j, (7)where?h?t?j= ?
([Wx]j+[U(r h?t?1?)]j).
(8)In this formulation, when the reset gate is closeto 0, the hidden state is forced to ignore the pre-vious hidden state and reset with the current input1The LSTM unit, which has shown impressive results inseveral applications such as speech recognition, has a mem-ory cell and four gating units that adaptively control the in-formation flow inside the unit, compared to only two gatingunits in the proposed hidden unit.
For details on LSTM net-works, see, e.g., (Graves, 2012).zrh h~ xFigure 2: An illustration of the proposed hiddenactivation function.
The update gate z selectswhether the hidden state is to be updated witha new hidden state?h.
The reset gate r decideswhether the previous hidden state is ignored.
SeeEqs.
(5)?
(8) for the detailed equations of r, z, hand?h.only.
This effectively allows the hidden state todrop any information that is found to be irrelevantlater in the future, thus, allowing a more compactrepresentation.On the other hand, the update gate controls howmuch information from the previous hidden statewill carry over to the current hidden state.
Thisacts similarly to the memory cell in the LSTMnetwork and helps the RNN to remember long-term information.
Furthermore, this may be con-sidered an adaptive variant of a leaky-integrationunit (Bengio et al., 2013).As each hidden unit has separate reset and up-date gates, each hidden unit will learn to capturedependencies over different time scales.
Thoseunits that learn to capture short-term dependencieswill tend to have reset gates that are frequently ac-tive, but those that capture longer-term dependen-cies will have update gates that are mostly active.In our preliminary experiments, we found thatit is crucial to use this new unit with gating units.We were not able to get meaningful result with anoft-used tanh unit without any gating.3 Statistical Machine TranslationIn a commonly used statistical machine translationsystem (SMT), the goal of the system (decoder,specifically) is to find a translation f given a sourcesentence e, which maximizesp(f | e) ?
p(e | f)p(f),where the first term at the right hand side is calledtranslation model and the latter language model(see, e.g., (Koehn, 2005)).
In practice, however,most SMT systems model log p(f | e) as a log-linear model with additional features and corre-1726sponding weights:log p(f | e) =N?n=1wnfn(f , e) + logZ(e), (9)where fnand wnare the n-th feature and weight,respectively.
Z(e) is a normalization constant thatdoes not depend on the weights.
The weights areoften optimized to maximize the BLEU score on adevelopment set.In the phrase-based SMT frameworkintroduced in (Koehn et al., 2003) and(Marcu and Wong, 2002), the translation modellog p(e | f) is factorized into the translationprobabilities of matching phrases in the sourceand target sentences.2These probabilities areonce again considered additional features in thelog-linear model (see Eq.
(9)) and are weightedaccordingly to maximize the BLEU score.Since the neural net language model was pro-posed in (Bengio et al., 2003), neural networkshave been used widely in SMT systems.
Inmany cases, neural networks have been used torescore translation hypotheses (n-best lists) (see,e.g., (Schwenk et al., 2006)).
Recently, however,there has been interest in training neural networksto score the translated sentence (or phrase pairs)using a representation of the source sentence asan additional input.
See, e.g., (Schwenk, 2012),(Son et al., 2012) and (Zou et al., 2013).3.1 Scoring Phrase Pairs with RNNEncoder?DecoderHere we propose to train the RNN Encoder?Decoder (see Sec.
2.2) on a table of phrase pairsand use its scores as additional features in the log-linear model in Eq.
(9) when tuning the SMT de-coder.When we train the RNN Encoder?Decoder, weignore the (normalized) frequencies of each phrasepair in the original corpora.
This measure wastaken in order (1) to reduce the computational ex-pense of randomly selecting phrase pairs from alarge phrase table according to the normalized fre-quencies and (2) to ensure that the RNN Encoder?Decoder does not simply learn to rank the phrasepairs according to their numbers of occurrences.One underlying reason for this choice was that theexisting translation probability in the phrase ta-ble already reflects the frequencies of the phrase2Without loss of generality, from here on, we refer top(e | f) for each phrase pair as a translation model as wellpairs in the original corpus.
With a fixed capacityof the RNN Encoder?Decoder, we try to ensurethat most of the capacity of the model is focusedtoward learning linguistic regularities, i.e., distin-guishing between plausible and implausible trans-lations, or learning the ?manifold?
(region of prob-ability concentration) of plausible translations.Once the RNN Encoder?Decoder is trained, weadd a new score for each phrase pair to the exist-ing phrase table.
This allows the new scores to en-ter into the existing tuning algorithm with minimaladditional overhead in computation.As Schwenk pointed out in (Schwenk, 2012),it is possible to completely replace the existingphrase table with the proposed RNN Encoder?Decoder.
In that case, for a given source phrase,the RNN Encoder?Decoder will need to generatea list of (good) target phrases.
This requires, how-ever, an expensive sampling procedure to be per-formed repeatedly.
In this paper, thus, we onlyconsider rescoring the phrase pairs in the phrasetable.3.2 Related Approaches: Neural Networks inMachine TranslationBefore presenting the empirical results, we discussa number of recent works that have proposed touse neural networks in the context of SMT.Schwenk in (Schwenk, 2012) proposed a simi-lar approach of scoring phrase pairs.
Instead of theRNN-based neural network, he used a feedforwardneural network that has fixed-size inputs (7 wordsin his case, with zero-padding for shorter phrases)and fixed-size outputs (7 words in the target lan-guage).
When it is used specifically for scoringphrases for the SMT system, the maximum phraselength is often chosen to be small.
However, as thelength of phrases increases or as we apply neuralnetworks to other variable-length sequence data,it is important that the neural network can han-dle variable-length input and output.
The pro-posed RNN Encoder?Decoder is well-suited forthese applications.Similar to (Schwenk, 2012), Devlin et al.
(Devlin et al., 2014) proposed to use a feedfor-ward neural network to model a translation model,however, by predicting one word in a target phraseat a time.
They reported an impressive improve-ment, but their approach still requires the maxi-mum length of the input phrase (or context words)to be fixed a priori.1727Although it is not exactly a neural network theytrain, the authors of (Zou et al., 2013) proposedto learn a bilingual embedding of words/phrases.They use the learned embedding to compute thedistance between a pair of phrases which is usedas an additional score of the phrase pair in an SMTsystem.In (Chandar et al., 2014), a feedforward neuralnetwork was trained to learn a mapping from abag-of-words representation of an input phrase toan output phrase.
This is closely related to both theproposed RNN Encoder?Decoder and the modelproposed in (Schwenk, 2012), except that their in-put representation of a phrase is a bag-of-words.A similar approach of using bag-of-words repre-sentations was proposed in (Gao et al., 2013) aswell.
Earlier, a similar encoder?decoder model us-ing two recursive neural networks was proposedin (Socher et al., 2011), but their model was re-stricted to a monolingual setting, i.e.
the modelreconstructs an input sentence.
More recently, an-other encoder?decoder model using an RNN wasproposed in (Auli et al., 2013), where the de-coder is conditioned on a representation of eithera source sentence or a source context.One important difference between the pro-posed RNN Encoder?Decoder and the approachesin (Zou et al., 2013) and (Chandar et al., 2014) isthat the order of the words in source and tar-get phrases is taken into account.
The RNNEncoder?Decoder naturally distinguishes betweensequences that have the same words but in a differ-ent order, whereas the aforementioned approacheseffectively ignore order information.The closest approach related to the proposedRNN Encoder?Decoder is the Recurrent Contin-uous Translation Model (Model 2) proposed in(Kalchbrenner and Blunsom, 2013).
In their pa-per, they proposed a similar model that consistsof an encoder and decoder.
The difference withour model is that they used a convolutional n-grammodel (CGM) for the encoder and the hybrid ofan inverse CGM and a recurrent neural networkfor the decoder.
They, however, evaluated theirmodel on rescoring the n-best list proposed by theconventional SMT system and computing the per-plexity of the gold standard translations.4 ExperimentsWe evaluate our approach on the English/Frenchtranslation task of the WMT?14 workshop.4.1 Data and Baseline SystemLarge amounts of resources are available to buildan English/French SMT system in the frameworkof the WMT?14 translation task.
The bilingualcorpora include Europarl (61M words), news com-mentary (5.5M), UN (421M), and two crawledcorpora of 90M and 780M words respectively.The last two corpora are quite noisy.
To trainthe French language model, about 712M words ofcrawled newspaper material is available in addi-tion to the target side of the bitexts.
All the wordcounts refer to French words after tokenization.It is commonly acknowledged that training sta-tistical models on the concatenation of all thisdata does not necessarily lead to optimal per-formance, and results in extremely large mod-els which are difficult to handle.
Instead, oneshould focus on the most relevant subset of thedata for a given task.
We have done so byapplying the data selection method proposed in(Moore and Lewis, 2010), and its extension to bi-texts (Axelrod et al., 2011).
By these means weselected a subset of 418M words out of morethan 2G words for language modeling and asubset of 348M out of 850M words for train-ing the RNN Encoder?Decoder.
We used thetest set newstest2012 and 2013 for dataselection and weight tuning with MERT, andnewstest2014 as our test set.
Each set hasmore than 70 thousand words and a single refer-ence translation.For training the neural networks, including theproposed RNN Encoder?Decoder, we limited thesource and target vocabulary to the most frequent15,000 words for both English and French.
Thiscovers approximately 93% of the dataset.
All theout-of-vocabulary words were mapped to a specialtoken ([UNK]).The baseline phrase-based SMT system wasbuilt using Moses with default settings.
This sys-tem achieves a BLEU score of 30.64 and 33.3 onthe development and test sets, respectively (see Ta-ble 1).4.1.1 RNN Encoder?DecoderThe RNN Encoder?Decoder used in the experi-ment had 1000 hidden units with the proposedgates at the encoder and at the decoder.
The in-put matrix between each input symbol x?t?and thehidden unit is approximated with two lower-rankmatrices, and the output matrix is approximated1728ModelsBLEUdev testBaseline 30.64 33.30RNN 31.20 33.87CSLM + RNN 31.48 34.64CSLM + RNN + WP 31.50 34.54Table 1: BLEU scores computed on the develop-ment and test sets using different combinations ofapproaches.
WP denotes a word penalty, wherewe penalizes the number of unknown words toneural networks.similarly.
We used rank-100 matrices, equivalentto learning an embedding of dimension 100 foreach word.
The activation function used for?h inEq.
(8) is a hyperbolic tangent function.
The com-putation from the hidden state in the decoder tothe output is implemented as a deep neural net-work (Pascanu et al., 2014) with a single interme-diate layer having 500 maxout units each pooling2 inputs (Goodfellow et al., 2013).All the weight parameters in the RNN Encoder?Decoder were initialized by sampling from anisotropic zero-mean (white) Gaussian distributionwith its standard deviation fixed to 0.01, exceptfor the recurrent weight parameters.
For the re-current weight matrices, we first sampled from awhite Gaussian distribution and used its left singu-lar vectors matrix, following (Saxe et al., 2014).We used Adadelta and stochastic gradientdescent to train the RNN Encoder?Decoderwith hyperparameters  = 10?6and ?
=0.95 (Zeiler, 2012).
At each update, we used 64randomly selected phrase pairs from a phrase ta-ble (which was created from 348M words).
Themodel was trained for approximately three days.Details of the architecture used in the experi-ments are explained in more depth in the supple-mentary material.4.1.2 Neural Language ModelIn order to assess the effectiveness of scoringphrase pairs with the proposed RNN Encoder?Decoder, we also tried a more traditional approachof using a neural network for learning a targetlanguage model (CSLM) (Schwenk, 2007).
Espe-cially, the comparison between the SMT systemusing CSLM and that using the proposed approachof phrase scoring by RNN Encoder?Decoder willclarify whether the contributions from multipleneural networks in different parts of the SMT sys-tem add up or are redundant.We trained the CSLM model on 7-gramsfrom the target corpus.
Each input wordwas projected into the embedding space R512,and they were concatenated to form a 3072-dimensional vector.
The concatenated vector wasfed through two rectified layers (of size 1536 and1024) (Glorot et al., 2011).
The output layer wasa simple softmax layer (see Eq.
(2)).
All theweight parameters were initialized uniformly be-tween ?0.01 and 0.01, and the model was traineduntil the validation perplexity did not improve for10 epochs.
After training, the language modelachieved a perplexity of 45.80.
The validation setwas a random selection of 0.1% of the corpus.
Themodel was used to score partial translations dur-ing the decoding process, which generally leads tohigher gains in BLEU score than n-best list rescor-ing (Vaswani et al., 2013).To address the computational complexity ofusing a CSLM in the decoder a buffer wasused to aggregate n-grams during the stack-search performed by the decoder.
Only whenthe buffer is full, or a stack is about tobe pruned, the n-grams are scored by theCSLM.
This allows us to perform fast matrix-matrix multiplication on GPU using Theano(Bergstra et al., 2010; Bastien et al., 2012).
?60 ?50 ?40 ?30 ?20 ?10 0?14?12?10?8?6?4?20RNN Scores (log)TMScores (log)Figure 3: The visualization of phrase pairs ac-cording to their scores (log-probabilities) by theRNN Encoder?Decoder and the translation model.4.2 Quantitative AnalysisWe tried the following combinations:1.
Baseline configuration2.
Baseline + RNN3.
Baseline + CSLM + RNN4.
Baseline + CSLM + RNN + Word penalty1729Source Translation Model RNN Encoder?Decoderat the end of the [a la fin de la] [?r la fin des ann?ees] [?etre sup-prim?es `a la fin de la][`a la fin du] [`a la fin des] [`a la fin de la]for the first time [rc?
pour la premir?ere fois] [?et?e donn?es pourla premi`ere fois] [?et?e comm?emor?ee pour lapremi`ere fois][pour la premi`ere fois] [pour la premi`ere fois ,][pour la premi`ere fois que]in the United Statesand[?
aux ?tats-Unis et] [?et?e ouvertes aux?Etats-Unis et] [?et?e constat?ees aux?Etats-Unis et][aux Etats-Unis et] [des Etats-Unis et] [des?Etats-Unis et], as well as [?s , qu?]
[?s , ainsi que] [?re aussi bien que] [, ainsi qu?]
[, ainsi que] [, ainsi que les]one of the most [?t ?l?
un des plus] [?l?
un des plus] [?etre retenuecomme un de ses plus][l?
un des] [le] [un des](a) Long, frequent source phrasesSource Translation Model RNN Encoder?Decoder, Minister of Commu-nications and Trans-port[Secr?etaire aux communications et aux trans-ports :] [Secr?etaire aux communications et auxtransports][Secr?etaire aux communications et aux trans-ports] [Secr?etaire aux communications et auxtransports :]did not comply withthe[vestimentaire , ne correspondaient pas `a des][susmentionn?ee n?
?etait pas conforme aux][pr?esent?ees n?
?etaient pas conformes `a la][n?
ont pas respect?e les] [n?
?etait pas conformeaux] [n?
ont pas respect?e la]parts of the world .
[c?
gions du monde .]
[r?egions du monde con-sid?er?ees .]
[r?egion du monde consid?er?ee .
][parties du monde .]
[les parties du monde .
][des parties du monde .
]the past few days .
[le petit texte .]
[cours des tout derniers jours .
][les tout derniers jours .
][ces derniers jours .]
[les derniers jours .]
[coursdes derniers jours .
]on Friday and Satur-day[vendredi et samedi `a la] [vendredi et samedi `a][se d?eroulera vendredi et samedi ,][le vendredi et le samedi] [le vendredi et samedi][vendredi et samedi](b) Long, rare source phrasesTable 2: The top scoring target phrases for a small set of source phrases according to the translationmodel (direct translation probability) and by the RNN Encoder?Decoder.
Source phrases were randomlyselected from phrases with 4 or more words.
?
denotes an incomplete (partial) character.
r is a Cyrillicletter ghe.The results are presented in Table 1.
As ex-pected, adding features computed by neural net-works consistently improves the performance overthe baseline performance.The best performance was achieved when weused both CSLM and the phrase scores from theRNN Encoder?Decoder.
This suggests that thecontributions of the CSLM and the RNN Encoder?Decoder are not too correlated and that one canexpect better results by improving each method in-dependently.
Furthermore, we tried penalizing thenumber of words that are unknown to the neuralnetworks (i.e.
words which are not in the short-list).
We do so by simply adding the number ofunknown words as an additional feature the log-linear model in Eq.
(9).3However, in this case we3To understand the effect of the penalty, consider the setof all words in the 15,000 large shortlist, SL.
All words xi/?SL are replaced by a special token [UNK] before being scoredby the neural networks.
Hence, the conditional probability ofany xit/?
SL is actually given by the model asp (xt= [UNK] | x<t) = p (xt/?
SL | x<t)=Xxjt/?SLp?xjt| x<t??
p?xit| x<t?,where x<tis a shorthand notation for xt?1, .
.
.
, x1.were not able to achieve better performance on thetest set, but only on the development set.4.3 Qualitative AnalysisIn order to understand where the performance im-provement comes from, we analyze the phrase pairscores computed by the RNN Encoder?Decoderagainst the corresponding p(f | e) from the trans-lation model.
Since the existing translation modelrelies solely on the statistics of the phrase pairs inthe corpus, we expect its scores to be better esti-mated for the frequent phrases but badly estimatedfor rare phrases.
Also, as we mentioned earlierin Sec.
3.1, we further expect the RNN Encoder?Decoder which was trained without any frequencyinformation to score the phrase pairs based ratheron the linguistic regularities than on the statisticsof their occurrences in the corpus.We focus on those pairs whose source phrase islong (more than 3 words per source phrase) andAs a result, the probability of words not in the shortlist isalways overestimated.
It is possible to address this issue bybacking off to an existing model that contain non-shortlistedwords (see (Schwenk, 2007)) In this paper, however, we optfor introducing a word penalty instead, which counteracts theword probability overestimation.1730Source Samples from RNN Encoder?Decoderat the end of the [`a la fin de la] (?11)for the first time [pour la premi`ere fois] (?24) [pour la premi`ere fois que] (?2)in the United States and [aux?Etats-Unis et] (?6) [dans les?Etats-Unis et] (?4), as well as [, ainsi que] [,] [ainsi que] [, ainsi qu?]
[et UNK]one of the most [l?
un des plus] (?9) [l?
un des] (?5) [l?
une des plus] (?2)(a) Long, frequent source phrasesSource Samples from RNN Encoder?Decoder, Minister of Communica-tions and Transport[ , ministre des communications et le transport] (?13)did not comply with the [n?
tait pas conforme aux] [n?
a pas respect l?]
(?2) [n?
a pas respect la] (?3)parts of the world .
[arts du monde .]
(?11) [des arts du monde .]
(?7)the past few days .
[quelques jours .]
(?5) [les derniers jours .]
(?5) [ces derniers jours .]
(?2)on Friday and Saturday [vendredi et samedi] (?5) [le vendredi et samedi] (?7) [le vendredi et le samedi] (?4)(b) Long, rare source phrasesTable 3: Samples generated from the RNN Encoder?Decoder for each source phrase used in Table 2.
Weshow the top-5 target phrases out of 50 samples.
They are sorted by the RNN Encoder?Decoder scores.Figure 4: 2?D embedding of the learned word representation.
The left one shows the full embeddingspace, while the right one shows a zoomed-in view of one region (color?coded).
For more plots, see thesupplementary material.frequent.
For each such source phrase, we lookat the target phrases that have been scored higheither by the translation probability p(f | e) orby the RNN Encoder?Decoder.
Similarly, we per-form the same procedure with those pairs whosesource phrase is long but rare in the corpus.Table 2 lists the top-3 target phrases per sourcephrase favored either by the translation modelor by the RNN Encoder?Decoder.
The sourcephrases were randomly chosen among long oneshaving more than 4 or 5 words.In most cases, the choices of the target phrasesby the RNN Encoder?Decoder are closer to ac-tual or literal translations.
We can observe that theRNN Encoder?Decoder prefers shorter phrases ingeneral.Interestingly, many phrase pairs were scoredsimilarly by both the translation model and theRNN Encoder?Decoder, but there were as manyother phrase pairs that were scored radically dif-ferent (see Fig.
3).
This could arise from theproposed approach of training the RNN Encoder?Decoder on a set of unique phrase pairs, discour-aging the RNN Encoder?Decoder from learningsimply the frequencies of the phrase pairs from thecorpus, as explained earlier.Furthermore, in Table 3, we show for each ofthe source phrases in Table 2, the generated sam-ples from the RNN Encoder?Decoder.
For eachsource phrase, we generated 50 samples and showthe top-five phrases accordingly to their scores.We can see that the RNN Encoder?Decoder isable to propose well-formed target phrases with-out looking at the actual phrase table.
Importantly,the generated phrases do not overlap completelywith the target phrases from the phrase table.
Thisencourages us to further investigate the possibilityof replacing the whole or a part of the phrase table1731Figure 5: 2?D embedding of the learned phrase representation.
The top left one shows the full represen-tation space (5000 randomly selected points), while the other three figures show the zoomed-in view ofspecific regions (color?coded).with the proposed RNN Encoder?Decoder in thefuture.4.4 Word and Phrase RepresentationsSince the proposed RNN Encoder?Decoder is notspecifically designed only for the task of machinetranslation, here we briefly look at the propertiesof the trained model.It has been known for some time thatcontinuous space language models usingneural networks are able to learn seman-tically meaningful embeddings (See, e.g.,(Bengio et al., 2003; Mikolov et al., 2013)).
Sincethe proposed RNN Encoder?Decoder also projectsto and maps back from a sequence of words intoa continuous space vector, we expect to see asimilar property with the proposed model as well.The left plot in Fig.
4 shows the 2?D embeddingof the words using the word embedding matrixlearned by the RNN Encoder?Decoder.
The pro-jection was done by the recently proposed Barnes-Hut-SNE (van der Maaten, 2013).
We can clearlysee that semantically similar words are clusteredwith each other (see the zoomed-in plots in Fig.
4).The proposed RNN Encoder?Decoder naturallygenerates a continuous-space representation of aphrase.
The representation (c in Fig.
1) in thiscase is a 1000-dimensional vector.
Similarly to theword representations, we visualize the representa-tions of the phrases that consists of four or morewords using the Barnes-Hut-SNE in Fig.
5.From the visualization, it is clear that the RNNEncoder?Decoder captures both semantic and syn-tactic structures of the phrases.
For instance, inthe bottom-left plot, most of the phrases are aboutthe duration of time, while those phrases that aresyntactically similar are clustered together.
Thebottom-right plot shows the cluster of phrases thatare semantically similar (countries or regions).
Onthe other hand, the top-right plot shows the phrasesthat are syntactically similar.5 ConclusionIn this paper, we proposed a new neural networkarchitecture, called an RNN Encoder?Decoderthat is able to learn the mapping from a sequence1732of an arbitrary length to another sequence, possi-bly from a different set, of an arbitrary length.
Theproposed RNN Encoder?Decoder is able to eitherscore a pair of sequences (in terms of a conditionalprobability) or generate a target sequence given asource sequence.
Along with the new architecture,we proposed a novel hidden unit that includes a re-set gate and an update gate that adaptively controlhow much each hidden unit remembers or forgetswhile reading/generating a sequence.We evaluated the proposed model with the taskof statistical machine translation, where we usedthe RNN Encoder?Decoder to score each phrasepair in the phrase table.
Qualitatively, we wereable to show that the new model is able to cap-ture linguistic regularities in the phrase pairs welland also that the RNN Encoder?Decoder is able topropose well-formed target phrases.The scores by the RNN Encoder?Decoder werefound to improve the overall translation perfor-mance in terms of BLEU scores.
Also, wefound that the contribution by the RNN Encoder?Decoder is rather orthogonal to the existing ap-proach of using neural networks in the SMT sys-tem, so that we can improve further the perfor-mance by using, for instance, the RNN Encoder?Decoder and the neural net language model to-gether.Our qualitative analysis of the trained modelshows that it indeed captures the linguistic regu-larities in multiple levels i.e.
at the word level aswell as phrase level.
This suggests that there maybe more natural language related applications thatmay benefit from the proposed RNN Encoder?Decoder.The proposed architecture has large potentialfor further improvement and analysis.
One ap-proach that was not investigated here is to re-place the whole, or a part of the phrase table byletting the RNN Encoder?Decoder propose targetphrases.
Also, noting that the proposed model isnot limited to being used with written language,it will be an important future research to apply theproposed architecture to other applications such asspeech transcription.AcknowledgmentsKC, BM, CG, DB and YB would like to thankNSERC, Calcul Qu?ebec, Compute Canada, theCanada Research Chairs and CIFAR.
FB and HSwere partially funded by the European Commis-sion under the project MateCat, and by DARPAunder the BOLT project.References[Auli et al.2013] Michael Auli, Michel Galley, ChrisQuirk, and Geoffrey Zweig.
2013.
Joint languageand translation modeling with recurrent neural net-works.
In Proceedings of the ACL Conference onEmpirical Methods in Natural Language Processing(EMNLP), pages 1044?1054.
[Axelrod et al.2011] Amittai Axelrod, Xiaodong He,and Jianfeng Gao.
2011.
Domain adaptation viapseudo in-domain data selection.
In Proceedings ofthe ACL Conference on Empirical Methods in Natu-ral Language Processing (EMNLP), pages 355?362.
[Bastien et al.2012] Fr?ed?eric Bastien, Pascal Lamblin,Razvan Pascanu, James Bergstra, Ian J. Goodfellow,Arnaud Bergeron, Nicolas Bouchard, and YoshuaBengio.
2012.
Theano: new features and speed im-provements.
Deep Learning and Unsupervised Fea-ture Learning NIPS 2012 Workshop.
[Bengio et al.2003] Yoshua Bengio, R?ejean Ducharme,Pascal Vincent, and Christian Janvin.
2003.
A neu-ral probabilistic language model.
J. Mach.
Learn.Res., 3:1137?1155, March.
[Bengio et al.2013] Y. Bengio, N. Boulanger-Lewandowski, and R. Pascanu.
2013.
Advancesin optimizing recurrent networks.
In Proceedingsof the 38th International Conference on Acoustics,Speech, and Signal Processing (ICASSP 2013),May.
[Bergstra et al.2010] James Bergstra, Olivier Breuleux,Fr?ed?eric Bastien, Pascal Lamblin, Razvan Pascanu,Guillaume Desjardins, Joseph Turian, David Warde-Farley, and Yoshua Bengio.
2010.
Theano: a CPUand GPU math expression compiler.
In Proceedingsof the Python for Scientific Computing Conference(SciPy), June.
Oral Presentation.
[Chandar et al.2014] Sarath Chandar, Stanislas Lauly,Hugo Larochelle, Mitesh Khapra, Balaraman Ravin-dran, Vikas Raykar, and Amrita Saha.
2014.
An au-toencoder approach to learning bilingual word repre-sentations.
arXiv:1402.1454 [cs.CL], Febru-ary.
[Dahl et al.2012] George E. Dahl, Dong Yu, Li Deng,and Alex Acero.
2012.
Context-dependent pre-trained deep neural networks for large vocabularyspeech recognition.
IEEE Transactions on Audio,Speech, and Language Processing, 20(1):33?42.
[Devlin et al.2014] Jacob Devlin, Rabih Zbib,Zhongqiang Huang, Thomas Lamar, RichardSchwartz, , and John Makhoul.
2014.
Fast androbust neural network joint models for statisticalmachine translation.
In Proceedings of the ACL2014 Conference, ACL ?14, pages 1370?1380.1733[Gao et al.2013] Jianfeng Gao, Xiaodong He, Wen tauYih, and Li Deng.
2013.
Learning semantic repre-sentations for the phrase translation model.
Techni-cal report, Microsoft Research.
[Glorot et al.2011] X. Glorot, A. Bordes, and Y. Ben-gio.
2011.
Deep sparse rectifier neural networks.
InAISTATS?2011.
[Goodfellow et al.2013] Ian J. Goodfellow, DavidWarde-Farley, Mehdi Mirza, Aaron Courville, andYoshua Bengio.
2013.
Maxout networks.
InICML?2013.
[Graves2012] Alex Graves.
2012.
Supervised Se-quence Labelling with Recurrent Neural Networks.Studies in Computational Intelligence.
Springer.
[Hochreiter and Schmidhuber1997] S. Hochreiter andJ.
Schmidhuber.
1997.
Long short-term memory.Neural Computation, 9(8):1735?1780.
[Kalchbrenner and Blunsom2013] Nal Kalchbrennerand Phil Blunsom.
2013.
Two recurrent continuoustranslation models.
In Proceedings of the ACL Con-ference on Empirical Methods in Natural LanguageProcessing (EMNLP), pages 1700?1709.
[Koehn et al.2003] Philipp Koehn, Franz Josef Och,and Daniel Marcu.
2003.
Statistical phrase-basedtranslation.
In Proceedings of the 2003 Conferenceof the North American Chapter of the Associationfor Computational Linguistics on Human LanguageTechnology - Volume 1, NAACL ?03, pages 48?54.
[Koehn2005] P. Koehn.
2005.
Europarl: A parallel cor-pus for statistical machine translation.
In MachineTranslation Summit X, pages 79?86, Phuket, Thai-land.
[Krizhevsky et al.2012] Alex Krizhevsky, IlyaSutskever, and Geoffrey Hinton.
2012.
Ima-geNet classification with deep convolutional neuralnetworks.
In Advances in Neural InformationProcessing Systems 25 (NIPS?2012).
[Marcu and Wong2002] Daniel Marcu and WilliamWong.
2002.
A phrase-based, joint probabilitymodel for statistical machine translation.
In Pro-ceedings of the ACL-02 Conference on EmpiricalMethods in Natural Language Processing - Volume10, EMNLP ?02, pages 133?139.
[Mikolov et al.2013] Tomas Mikolov, Ilya Sutskever,Kai Chen, Greg Corrado, and Jeff Dean.
2013.
Dis-tributed representations of words and phrases andtheir compositionality.
In Advances in Neural Infor-mation Processing Systems 26, pages 3111?3119.
[Moore and Lewis2010] Robert C. Moore and WilliamLewis.
2010.
Intelligent selection of languagemodel training data.
In Proceedings of the ACL2010 Conference Short Papers, ACLShort ?10,pages 220?224, Stroudsburg, PA, USA.
[Pascanu et al.2014] R. Pascanu, C. Gulcehre, K. Cho,and Y. Bengio.
2014.
How to construct deep recur-rent neural networks.
In Proceedings of the SecondInternational Conference on Learning Representa-tions (ICLR 2014), April.
[Saxe et al.2014] Andrew M. Saxe, James L. McClel-land, and Surya Ganguli.
2014.
Exact solutionsto the nonlinear dynamics of learning in deep lin-ear neural networks.
In Proceedings of the SecondInternational Conference on Learning Representa-tions (ICLR 2014), April.
[Schwenk et al.2006] Holger Schwenk, Marta R. Costa-Juss`a, and Jos?e A. R. Fonollosa.
2006.
Continuousspace language models for the iwslt 2006 task.
InIWSLT, pages 166?173.
[Schwenk2007] Holger Schwenk.
2007.
Continuousspace language models.
Comput.
Speech Lang.,21(3):492?518, July.
[Schwenk2012] Holger Schwenk.
2012.
Continuousspace translation models for phrase-based statisti-cal machine translation.
In Martin Kay and Chris-tian Boitet, editors, Proceedings of the 24th Inter-national Conference on Computational Linguistics(COLIN), pages 1071?1080.
[Socher et al.2011] Richard Socher, Eric H. Huang, Jef-frey Pennington, Andrew Y. Ng, and Christopher D.Manning.
2011.
Dynamic pooling and unfoldingrecursive autoencoders for paraphrase detection.
InAdvances in Neural Information Processing Systems24.
[Son et al.2012] Le Hai Son, Alexandre Allauzen, andFranc?ois Yvon.
2012.
Continuous space transla-tion models with neural networks.
In Proceedings ofthe 2012 Conference of the North American Chap-ter of the Association for Computational Linguistics:Human Language Technologies, NAACL HLT ?12,pages 39?48, Stroudsburg, PA, USA.
[van der Maaten2013] Laurens van der Maaten.
2013.Barnes-hut-sne.
In Proceedings of the First Inter-national Conference on Learning Representations(ICLR 2013), May.
[Vaswani et al.2013] Ashish Vaswani, Yinggong Zhao,Victoria Fossum, and David Chiang.
2013.
De-coding with large-scale neural language models im-proves translation.
Proceedings of the Conferenceon Empirical Methods in Natural Language Pro-cessing, pages 1387?1392.
[Zeiler2012] Matthew D. Zeiler.
2012.
ADADELTA:an adaptive learning rate method.
Technical report,arXiv 1212.5701.
[Zou et al.2013] Will Y. Zou, Richard Socher,Daniel M. Cer, and Christopher D. Manning.2013.
Bilingual word embeddings for phrase-basedmachine translation.
In Proceedings of the ACLConference on Empirical Methods in NaturalLanguage Processing (EMNLP), pages 1393?1398.1734
