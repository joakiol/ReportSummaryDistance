SPOT: TRW'S MULTI-LINGUAl, TEXT SEARCH TOOLPeggy OtsuboTRW Systems Deve lopment  Divis ionR2/2162One Space ParkRedondo Beach,  CA 90278peggy@wilbur.coyote.trw.comABSTRACTTRW has developed a text search tool thatallows users to enter a query in foreign lan-guages and retrieve documents hat match thequery.
A single query can contain words andphrases in a mix of different languages, with theforeign-language terms entered using the nativescript.
The browser also displays the originaldocument in its native script.
Key terms in thebrowser display are highlighted.
The interface istargeted for the non-native speaker and includesa variety of tools to help formulate foreign-lan-guage queries.
Spot has been designed to inter-face to multiple search engines through anobject-oriented search engine abstraction layer.It currently supports Paracers Fast Data Findersearch engine, with support for Excalibur'sRetrievalWare currently being developed.1.0.
INTRODUCTION1.1.
Des ign ObjectivesTRW has developed a text search tool thatallows users to enter a query in a number of lan-guages and retrieve documents hat match thequery.
This text search tool is called Spot.
Thefollowing subsections describe the design objec-fives and goals of Spot.1.1.1.
Support multiple search enginesOur government users currently use a variety oftools for different purposes.
For example, anarchival database is only available through alegacy text search system that  performs itssearches very quickly, but lacks a great deal insearch functionality.
Other users use Paracel'sFast Data Finder search engine due to its power-ful search capabilities and are only able to accessits power through the FDF search tool user inter-face.One of our design objectives was to handle multi-ple search engines within the same user interfacetool.
This provides users with a single user inter-face tool to learn, while providing them with achoice of search engines.
Users might choose toperform a natural  anguage query using theExcalibur/ConQuest search engine's conceptquery and switch to the Fast Data Finder tosearch Chinese text.We also aimed to provide the users with the fullfunctionality of each of the search engines.
Thisapproach necessitates a more generic approach tomany functions to ensure that the same userinterface can be tailored to differing searchengine technologies.1.1.2.
Support multi- l ingual dataInternationalized support is fairly easy to obtaincommercially for a number of commonly-sup-ported languages.
The commercial products forinternationalization are designed to support hemarketing of a tool in a specific set of foreigncountries, where the menus, buttons, error mes-sages, and text all need to be displayed in theappropriate foreign language.
For example, if aspecific product needs to be marketed to the Jap-anese, it might be running under Sun's JapaneseLanguage Environment, with JLE providing sup-port for entering and displaying Japanese text.Multi-lingual support, however, is very difficultto obtain commercially.
Our user community con-sists of native-English speakers, who want themenus and buttons to appear in English, butrequire support for dewing foreign-language doc-uments in their native scripts, as well as enteringforeign-language query terms in their native95scripts.
For this functionality, internationalizedsupport is inadequate.1.1.3.
Support query generation toolsUsers who are not native speakers of the foreignlanguage in which they are submitting a querywould like tools to assist in building queries.
Forexample, we located a large Japanese-to-Englishthesaurus that was available in electronic form.It would be very useful for native-English speak-ers to look up relevant words in the Japanesethesaurus for assistance in building their que-ries.In addition, words that are of a foreign origin areoften transl i terated in a number of differentways.
For example, the name "Kadafi" is oftenspelled "Khadafi" or "Gadsm'.
Query generationtools that allow users to enter "Kadafi" and findthe other possible spellings are designed intoSpot.1.2.
Maximize performanceSpot was designed to be the user interface for alarge archival database of hundreds of gigabytesof data.
It needs to provide hundreds of userswith access to this database.An archival  database using the Fast  DataFinder was implemented using Paracers BatchSearch Server (BSS) product.
Spot currentlyinterfaces to this FDF archival database.
Devel-opment is currently proceeding to interface Spotto an Excalibur/ConQuest archival database.Our objective in developing functionslity, includ-ing multi-l ingual query generation tools andquery functionality, has emphasized solutionsthat work very quickly, usually by exploiting thefeatures of a specific search engine.Speed and throughput of searches through theFDF hardware search engine was measuredusing a commercial FDF-3 system.A single FDF-3 produced a search rate of around 3.5 MB/s,which could be obtained while searching 20 to 40average queries simultaneously.
A system ofmultiple FDFs can linearly expand the searchrate.1.3.
User Interface Highl ightsSome of the highlights of our current user inter-face system include the following:?
Multi-lingual query entry?
Multiple languages in a single query?
Queries can be saved, loaded, edited,printed?
Customizable fill-in-the-boxes query form?
Query generation tools?
Highlights query terms when browsingsearch results?
Display of search results in native script?
Copy-and-paste from Browser into a Query?
Search using Paracers Fast Data Finder?
Search using Excalibur/ConQuest'sRetrievalWare2.0.
DESCRIPT ION OF  THE SYS-TEMSpot is a TRW-built graphical user interface toolthat  supports query entry  and browsing ofsearch results.
Some of the goals of Spot includethe following: support multiple search enginesby allowing users to select he search enginethey desire, support for multiple languageswithin the same tool without requiring differentversions of Spot or different operating systemsupport, query generation tools to assist non-native speakers in creating foreign-languagequeries, capability of browsing foreign-languagetext using their native script, and support forutilities to aid Analysts.A full set of features to browse, save, recall,print, and manipulate the results of searches areprovided.
There are also features to select hedatabases to search and to create and load newdatabases.
Each screen has a pulldown Helpmenu, which brings up a description of the avail-able functions.2.1.
Support for Multiple Search EnginesWe allow users to select the desired searchengine by merely selecting the desired searchengine from a pulldown menu.
The list of queryforms, query functionality, and databases avail-able for searching is dependent on the searchengine that is selected.Spot consists of a Search Server Interface layerthat uses an object-oriented approach to abstractthe details of each search engine from the user96interface portion of Spot.
Figure 1 il lustrateshow the Search Server Interface and the searchengines fit into the architecture ofSpot.~ilure 1: Multiple search engines in SpotThe Search Server Interface consists of a pack-age of code routines that act as a broker for thesearch engine functions for Spot.
These func-tions include initialization of the search engine,retrieving the list of databases that are search-able, retrieving a list of allowable search engineoptions, performing the search, and retrievingresults.A single software package contains code thatdirectly interfaces to a specific search engine.For example, the SeFDF package contains allreferences tothe FDF's API function calls.2.2.
Multi-lingual Query EntrySince our government user community requiressupport of multiple languages in the same query,we can not rely on operating system support,such as the features provided by the JapaneseLanguage Environment for Sun Workstations.To provide multi-lingual query entry support, wehave integrated the New Mexico State Univer-sity's multi-lingual text widget, called MUTT, toprovide users with a full multi-lingual queryentry capability.
The latest release of MUTT,version 2.0, supports Unicode as its underlyingcharacter set.
There is also built-in support forconversions between various encoding sets for aparticular language.
Spot uses this feature toallow users to expand the character sets acrosswhich to search.The languages that are currently supported byNMSU's MUTT include: Japanese, Chinese,Korean, Latin, Serbo-Croat, Lao, Thai, Arabic,Armenian, Russian, Georgian, Hebrew, Irish,Portugese, Rumanian, Czech, French, Spanish,Vietnamese, Ethiopic, Latvian, Greek, Turkish,Icelandic, Italian, and Dutch.Figure 2 illustrates Spot's Main Window.
Theportion of the window below the fill-in-the-boxesQuery Editor is the multi- l ingual text area.Users can select he language and the entrymethod using menus.
The foreign-language textis entered in the text area just below the Lan-guage menu.. .
.
.
.
.
.  '
!~F i le  Edit Setr'iiil.l~gl~ F_~l viell  lIJl,,~lolll _~lpi : 1 i l l  ~'rl) i" ~ i  ' !, .
.
.
.
.
.
I!
!i IIi lt,Ui~t J ~  " ~1!
: iIi .
.
.
.
.
':, IJ !
LI',i - -  .
.
.
.
.
.
.
.
.
.
.
.
.
u __L___  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.:.,_L,.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Z2~L~L= Y_L= .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~1 d~c~mt ~I  \].
.
.
.
.
.
.
.
.
.
.
.
.
- J .
.
.
.
.~:Errer end Stttu* ~e~e*l tter 12 lg:57:42 ~eecf~T\] Ir~B: I~dl~ it~ v\] ?~flguratten f~ " /hem/to~d~0/~/ .~c*"  ~Iii~igure 2: Fill-in-the-form ulti-lingual queryThe basic query formulation paradigm in theabove figure is extended boolean search.
Theuser is provided with an expandable booleanform in which to enter query terms.
Foreign-lan-guage terms are typed into the multi-lingual textwidget are in the lower portion of the figure.These terms are then entered into the appropri-ate box in the query.
Terms from the browserwindow may be copied and pasted into the querywindow to help refine a query.
The user mayselect from a menu of choices to require queryterms to be within a specified proximity window.Query formulation paradigms other than theextended boolean search demonstrated abovecan be supported by designing a custom for~ Anexternal file is used to specify the appearanceand functionality of a form.
For example, Spotalso supports a term-weighting form that allowsusers to type in a term (a word or phrase) andassign a specific weight o the term.
Results ofthi.~ term-weighted search can then be ranked inorder of score, presenting users with the most-relevant score first.972.3.
Query Generat ion ToolsOne of our goals during the design of Spot was toprovide support for non-native speakers, whichwill believe make up the bulk of our prospectivegovernment users.
We implemented three typesof query generation aids.First, the user may select from a menu of pre-defined subqueries.
These subqueries can be"canned" queries that are set up by the systemadministrator or an advanced user.
Alterna-tively, the subqueries can be developed by theuser himself and saved as a subquery for use inother queries.
These subqueries include anyvalid query expression and provide a shorthandmethod of referr ing to a previously-definedentity.
For example, the subquery 'Sony" may beused to search for references to the Sony Corpo-ration and its products.Second, Spot allows users to select appropriateterms for a search from a thesaurus.
One of thethesaur i  that  we have integrated into Spotincludes a 28,000-entry English-to-Japanesethesaurus.
Users select from the thesaurus inthe fol lowing manner:  the user  enters  anEnglish word or phrase, selects an appropriatethesaurus, elects any combination of lines froma popup window that displays lines from the the-saurus that contain the user-entered word orphrase, and the selected terms are included inthe query.
The thesaurus can be easily extendedand other thesauri may be added at customersites.Third, Spot includes support for expansions tomodify user-entered search terms.
The mostpowerful use of expansions i to handle translit-erations for various foreign-language words andproper nouns.
Our English-to-Japanese translit-eration scheme is an example of an exp~n~iomHere's a description of the "Japanese-katakana"expansion: Foreign loan words and proper nounsare represented in the Japanese katakana pho-netic alphabet, based on its pronunciation.
Par-ticular difficulties arise when the foreign wordscontain sounds or patterns of sounds that arenot defined in the Japanese language.
In thesecases, there are a number of different ways theforeign loan word or proper noun might beexpressed in Katakana.
While the Japanese"spellings" for common foreign loan words orWestern public figures tend to become quicklystandardized (and thus could be included in thethesaurus) ,  company names,  new productnames, and non-public figures are not likely tobe represented in consistent Katakana acrosssources.Our transliteration algorithm maps an Englishword to its most likely Katakana possibilities.The basic idea is to break the word apart phonet-ically and then substitute as many of the possi-ble ways the sounds might  be heard  by aJapanese speaking person as alternatives.
Fig-ure 3 shows three simple examples 1.ronald reagan => IOlO-I Jbl  l'~'l$--\]Jb\[ F I'~ F\] \ [U IU- I I / Ib - - \ ]  \ [~I"Y- \ ]  :1bill clinton => l~'l#(l#(41YlJb ?
{' J l~l~41Jb\]:z b:/mars brown => l~ ' lS - l ' J -  I \ [~"~IDOIo - I7Figure 3: Some English to Japanese trAn~literatiThis particular expansion exploits the character-level expansion feature of the FDF to expand thelist of possible matches.
We reviewed the perfor-mance of this algorithm on a sample list of 150English last names and tallied that the programwas picking up the academically correct varia-tion 80-90% of the time.2.4.
Multi-lingual BrowsingThe Browser supports a full set of featuresincluding support for displaying the documentsin their native script, highlighting the queryterms, scrolling through the hits, saving docu-ments or search results, printing the documentor selected portions of the document with orwithout he highlighted portions in the nativescript, mailing selected portions of the text, copy-ing portions of the text into other applications aswell as the Query Editor portion of Spot, andperforming external processing on selected por-tions of the text.Figure 4 illustrates a Japanese-language docu-ment that was retrieved as a result of a search.Notice the highlighted areas that identify queryterms found in the document.
This Browser iseasy to use, with arrow turn-signals to scrollthrough the list of hits, documents, and terms.Users can either use the scrollbar or the Pageup-down arrows to scroll through a single docu-ment.
There are also hot-keys to quickly scrollthrough the list of hits or documents, as well as1.
The notation "a  \[ b I e \] d"  means an "a"  fol lowedby a "b"  or "a"  fol lowed by a "d".
Thus the userentered term of  'Reagan'  will match on any ofI):;l-J\]./ or iJ---~y'--\].i' or l./~L.,x or I./--~'11~./'98type-in fields for moving to a specific hit directlyor a slider for moving quickly to another hit.F i le  Edit  Save ~i~plz~J ~-e~evL~v,~ ^~e~_l Glossin9 Mindot~ HelpT~ "'~i :~ J  ~ - - - -  I Hit P~i~-its: 0.... P--"----  !
~o?
Number: 1 of<zw> $- -~ </K~><~> ~) '~) ,y  </x~><~> ~ </re><TEXT>=,.j-Figure 4: Search result displayed in the BrowserUsers may view the original text in another "lan-guage" by switching the "Display" menu toanother language.
To view selected portions oftext in another language, the user can highlighttext and select another language in the "Selec-tion" menu.
This aUows users to view a singledocument which contains multiple languages.Another powerful feature of the Browser is theconiigurable interface to "External" processes.The user can highlight a portion of text, select anexternal process from the "External" pulldownmenu, and view the results of applying an exter-nal process to the selected text  appear  in apopup window.
This can be used, for example, toview a hex dump of the selected text or to viewthe directory listing of a phone number that washighlighted in the text.
An "External" processcan be easily added without modifying any of theSpot code.2.5.
Database Select ionUsers select the database to search from theDatabase Window, which is illustrated in Figure5.
The data that is organized by date are shownin the upper portion of the window; the data thatis not affiliated with a date is shown in the list inthe lower portion of the window.
The date-ori-ented data is shown in a spreadsheet, with an"X" in boxes with data.
Users can zoom in toview the data by month or by day or they canzoom out to view the data by year.
To select datafor a particular day, they simply click on the box.File Edit V L~ ~otesorim C~fi9 He|p0 Files Selected.
0.0~ I~ 174 Filem ~wll~ble-Dete Oelee~tod ~ataba~95HYTal t.chtne~o.toxtelt.chinc~_te~t_bL95v We~,J ~ Year 1"4' Via ~ ~th l  v View DU-V -  I I I !
.--- i  ) i ) tx l?
V"~.
.
:1 : .
, 1 ~ i { t ~ .L_._i : I .-T - !
F T -T-I j :1,I~:..:.:.:-.."
#~-.LP.FSl ic ~a~absae?\[ ~ Bate Size(Hb}Reut S50~2 0.07 HRemit ~22 0.07 ~'.
"Reuters-hi lz Se~19 27?05 \].'.
'.Re~t~2-bl Jz ~?818 27.05 .. \]!~;Erroc taxi Status I~$~, !
)~ ..r .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.1?
Clv~ .
.
.
.
.
.
.
.
.
.
.
)Figure 5: Select data to searchMost of our government users deal with timelydata that is very strongly affiliated with a partic-ular date.
The spreadsheet portion of the Data-base  Window has  been  enthus ias t i ca l lyembraced as the appropriate method for select-ing data to search.2.6.
Summary  WindowUsers may also view a summary of their searchresults in the Summary Window, shown in Fig-ure 6.
Each hit result is described in a line, withinformation such as the date, document number,score, and keyword in context.
Users highlightthe hits that they would like to browse and pushthe Browse button to view the results.
Hits thathave been read are indicated with an asterisk inthe first colummThe Summary Window is very useful for gaininga quick overview of the results.
It is also usefulfor iteratively viewing the data by selecting theresults to browse.99F i le  Edit Sort X l~dc~F-,?~.a,~,~ry o?
Search Resultsi.
* Reute~b\] Iz ~18Reutmr't-bl iz S~818Reutter"J-bl iz 850819Rc~-b l i z  ~0818Rvut.~-bl iz 9~0818iJ Displ~j ~ \[........................................ aDoCm Sco?-e ~, ,a ry  (ket,~,d in c~text)~ 0 (ore Lll~jan leader Nu~r  Cadda?!
j~814 0 (ugust b 9 Colonel MuaMar 6addafl \]':i$70 0 (by Libyan loader Mu~mm~r F i  \]'..:1609 0 (k. Lll~j~m leader Mum'-  6addaFi I':{1731 0 (n9 Lltwhs,,'I lea::la" Nuamar GaddeCi I.: {lY.
:Error and Status\[xligure 6: Summary of search result hits3.0.
PAST  EXPERIENCESTRW has produced two other multi-lingual textsearch products that are predecessors of Spot.The experiences gained on these products werefolded into Spot.Our first experience handling foreign-languagetext search was the Japanese Fast Data Finder(JFDF) prototype that was developed as part ofthe Tipster program.
JFDF used the Fast DataFinder search engine to search Japanese lan-guage data and used Sun's Japanese LanguageEnvironment (JLE) Operating System supportfor handl ing the Japanese query entry  andbrowsing.
This prototype was very successfulwith the analysts that dealt with Japanese data.However, expanding this capability to other lan-guages was difficult, since the language capabili-ties depended on operating system support.Our second experience with foreign-languagetext search involved modification of the FDF-based text search tool, called XATI, to handleChinese.
Our goal hero was to support Chinesewithout using a custom Chinese-language oper-ating system.First of all, we modified the XATI browser tohandle a number of different languages, includ-ing Chinese, Japanese, Korean, and Cyrillic.
Webuilt in support to handle 16-bit languages (Jap-anese, Chinese, Korean), as well as extendedASCII and other 8-bit languages.
Modifying theBrowser to handle these different languages wasfairly straightforward, with much of the workdealing with collecting, building, and modifyingfonts.Then, we added support in the query editor toallow entry of Chinese.
We built in support forthe Pinyin entry  method, using the publicdomain cxterm as our model.
There are severalencoding formats for Chinese.
A configurationvariable indicates which of the two major encod-ing formats to use (Big5 or GB).The Chinese version of XATI worked success-fully without direct operating system support forlanguage-entry.
We found that  users wantedsupport for multiple encoding formats (i.e.
bothGB and Big5), as well as simultaneous supportfor additional languages.
These user require-ments were designed into our current multi-lin-gual Spot.4.0.
KEY  INNOVATIONSWe have developed a multi-lingual text searchtool that is being enthusiastically embraced byusers.
Some of our key innovations include:?
Search and retrieval of multi-lingual data,using queries pecifying search terms indifferent l~nguages and encoding sets.?
Display of search results in native scriptsincluding Japanese, Chinese, Korean, Ara-bic, Cyrillic, Thei, and Vietnamese.?
Multi-lingual query entry using NMSU'smulti-lingual text widget (MUTT).?
Multiple languages in a single query.?
Multiple encoding sets in a single query.?
Query generation tools to help non-nativespeakers build queries in different lan-guages.?
Allow users to perform externnl processeson portions of browsed text.?
Fill-in-the-box, custemizable query entryforms.?
Easy-to-use date-oriented database selec-tion screen.?
Allow users to select heir desired searchengine.100
