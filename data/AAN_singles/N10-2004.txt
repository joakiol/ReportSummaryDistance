Proceedings of the NAACL HLT 2010: Demonstration Session, pages 13?16,Los Angeles, California, June 2010. c?2010 Association for Computational LinguisticsMultilingual Propbank Annotation Tools:Cornerstone and JubileeJinho D. Choi, Claire Bonial, Martha PalmerUniversity of Colorado at Boulder, USA{choijd;bonial;mpalmer}@colorado.eduAbstractThis paper demonstrates two annotationtools related to Propbank: Cornerstoneand Jubilee.
Propbank is a corpus inwhich the arguments of each verb pred-icate are annotated with their semanticroles.
Propbank annotation also requiresthe choice of a sense id for each predicate,defined in the corresponding frameset file.Jubilee expedites the annotation processby displaying several resources of syntacticand semantic information simultaneously;easy access to each of these resources al-lows the annotator to quickly absorb andapply the necessary syntactic and semanticinformation pertinent to each predicate forconsistent and efficient annotation.
Cor-nerstone is a user-friendly xml editor, cus-tomized to allow frame authors to createand edit frameset files.
Both tools havebeen successfully adapted to many Prop-bank projects; they run platform indepen-dently, are light enough to run as X11 ap-plications and support multiple languagessuch as Arabic, Chinese, English, Hindiand Korean.1 IntroductionPropbank is a corpus in which the arguments ofeach verb predicate are annotated with their se-mantic roles (Palmer et al, 2005).
Propbank an-notation also requires the choice of a sense id foreach predicate.
Thus, for each predicate in thePropbank, there exists a corresponding frame-set file encompassing one or more senses of thepredicate.
All frameset files are written in xml,which is somewhat difficult to read and edit.
Al-though there already exist many xml editors,most of them require some degree of knowledgeof xml, and none of them are specifically cus-tomized for frameset files.
This motivated thedevelopment of our own frameset editor, Cor-nerstone.Jubilee is a Propbank instance editor.
Foreach verb predicate, we create a Propbank in-stance that consists of the predicate?s sense idand its arguments labeled with semantic roles.Previously the allocation of tasks, the annota-tion of argument labels and the frameset taggingwere all done as separate tasks.
With Jubilee,the entire annotation procedure can be done us-ing one tool that simultaneously provides richsyntactic information as well as comprehensivesemantic information.Both Cornerstone and Jubilee are developedin Java (Jdk 6.0), so they run on any plat-form where the Java virtual machine is installed.They are light enough to run as X11 applica-tions.
This aspect is important because Prop-bank data are usually stored in a server, soannotators need to update them remotely (viassh).
One of the biggest advantages of usingthese tools is that they accommodate severallanguages; in fact, the tools have been usedfor Propbank projects in Arabic (M.Diab et al,2008), Chinese (Xue and Palmer, 2009), En-glish (Palmer et al, 2005) and Hindi, and havebeen tested in Korean (Han et al, 2002).This demo paper details how to create Prop-bank framesets in Cornerstone, and how to an-notate Propbank instances using Jubilee.
Thereare two modes in which to run Cornerstone:multi-lemma and uni-lemma mode.
In multi-lemma mode, a predicate can have multiple lem-13mas, whereas a predicate can have only onelemma in uni-lemma mode.
Jubilee also hastwo modes: normal and gold mode.
In normalmode, annotators are allowed to view and editonly tasks that have been claimed by themselvesor by one other annotator.
In gold mode, adju-dicators are allowed to view and edit all tasksthat have undergone at least single-annotation.2 How to obtain the toolsCornerstone and Jubilee are available as an opensource project on Google code.1 The webpagegives detailed instructions of how to download,install and launch the tools (Choi et al, 2009a;Choi et al, 2009b).3 Description of Cornerstone3.1 Multi-lemma modeLanguages such as English and Hindi are ex-pected to run in multi-lemma mode, due to thenature of their verb predicates.
In multi-lemmamode, a predicate can have multiple lemmas(e.g., ?run?, ?run out?, ?run up?).
The xml struc-ture of the frameset files for such langauges isdefined in a dtd file, frameset.dtd.Figure 1 shows what appears when you opena frameset file, run.xml, in multi-lemma mode.The window consists of four panes: the frame-set pane, predicate pane, roleset pane and rolespane.
The frameset pane contains a framesetnote reserved for information that pertains to allpredicate lemmas and rolesets within the frame-set file.
The predicate pane contains one or moretabs titled by predicate lemmas that may in-clude verb particle constructions.
The rolesetpane contains tabs titled by roleset ids (e.g.,run.01, run.02, corresponding to different sensesof the predicate) for the currently selected predi-cate lemma (e.g., ?run?).
The roles pane includesone or more roles, which represent argumentsthat the predicate requires or commonly takesin usage.3.2 Uni-lemma modeLanguages such as Arabic and Chinese are ex-pected to run in uni-lemma mode.
Unlike multi-1http://code.google.com/p/propbank/Figure 1: Open run.xml in multi-lemma modelemma mode, which allows a predicate to havemultiple lemmas, uni-lemma mode allows onlyone lemma for a predicate.
The xml structureof the frameset files for such langauges is definedin a dtd file, verb.dtd.Figure 2: Open HAfaZ.xml in uni-lemma modeFigure 2 shows what appears when you open aframeset file, HAfaZ.xml, in uni-lemma mode.The window consists of four panes: the verbpane, frameset pane, frame pane and roles pane.The verb pane contains a verb comment fieldfor information helpful to annotators about theverb, as well as the attribute field, ID, which in-dicates the predicate lemma of the verb, repre-sented either in the Roman alphabet or charac-ters in other languages.
The frameset pane con-tains several tabs titled by frameset ids (corre-sponding to verb senses) for the predicate.
Theframe pane contains a frame comment for op-14tional information about the frame and the map-ping pane, which includes mappings betweensyntactic constituents and semantic arguments.The roles pane consists of a set of argumentsthat the predicate requires or commonly takes.4 Description of Jubilee4.1 Normal modeAnnotators are expected to run Jubilee innormal mode.
In normal mode, annotatorsare allowed to view and edit only tasks claimedby themselves or one other annotator whenthe max-number of annotators allowed is two.Jubilee gives the option of assigning a differentmax-number of annotators as well.When you run Jubilee in normal mode, youwill see an open-dialog (Figure 3).
There arethree components in the open-dialog.
Thecombo-box at the top shows a list of all Prop-bank projects.
Once you select a project (e.g.,english.sample), both [New Tasks] and [MyTasks] will be updated.
[New Task] shows alist of tasks that have either not been claimed,or claimed by only one other annotator.
[MyTasks] shows a list of tasks that have beenclaimed by the current annotator.Figure 3: Open-dialogOnce you choose a task and click the [Enter]button, Jubilee?s main window will be prompted(Figure 4).
There are three views available inthe main window: the treebank view, frame-set view and argument view.
By default, thetreebank view shows the first tree (in the PennTreebank format (Marcus et al, 1993)) in theselected task.
The frameset view displays role-sets and allows the annotator to choose the senseof the predicate with respect to the current tree.The argument view contains buttons represent-ing each of the Propbank argument labels.Figure 4: Jubilee?s main window4.2 Gold modeAdjudicators are expected to run Jubilee in goldmode.
In gold mode, adjudicators are allowed toview and edit all tasks that have undergone atleast single-annotation.
When you run Jubileein gold mode, you will see the same open-dialogas you saw in Figure.
3.
The [New Tasks] showsa list of tasks that have not been adjudicated,and the [My Tasks] shows a list of tasks thathave been adjudicated.
Gold mode does not al-low adjudicators to open tasks that have notbeen at least single-annotated.5 Demonstrations5.1 CornerstoneWe will begin by demonstrating how to viewframeset files in both multi-lemma and uni-lemma mode.
In each mode, we will open anexisting frameset file, compare its interface withthe actual xml file, and show how intuitive it isto interact with the tool.
Next, we will demon-strate how to create and edit a new frameset fileeither from scratch or using an existing framesetfile.
This demonstration will reflect several ad-vantages of using the tool.
First, the xml struc-ture is completely transparent to the frame au-thors, so that no knowledge of xml is required tomanage the frameset files.
Second, the tool au-tomates some of the routine work for the frameauthors (e.g., assigning a new roleset/framesetid) and gives lists of options to be chosen (e.g.,15a list of function tags) so that frameset creation,and the entire annotation procedure in turn, be-come much faster.
Third, the tool checks for thecompletion of required fields and formatting er-rors so that frame authors do not have to checkthem manually.
Finally, the tool automaticallysaves the changes so the work is never lost.5.2 JubileeFor the treebank view, we will compare Jubilee?sgraphical representation of the trees with theparenthetical representation of former tools: theclear visual representation of the phrase struc-ture helps the annotator to better understandthe syntax of the instance and to annotate theappropriate node within the correct span.
Forthe frameset view, we will detail what kind ofsemantic information it provides as you choosedifferent rolesets.
This will highlight how Ju-bilee?s support of roleset id annotation not onlyspeeds up the annotation process, but also en-sures consistent annotation because the rolesetinformation provides a guideline for the correctannotation of a particular verb sense.
For theargument view, we will illustrate how to anno-tate Propbank arguments and use the opera-tors for concatenations and links; thereby alsodemonstrating that having each of these labelsclearly visible helps the annotator to rememberand evaluate the appropriateness of each possi-ble argument label.
Finally, we will show howintuitive it is to adjudicate the annotations ingold mode.6 Future workBoth Cornerstone and Jubilee have been suc-cessfully adapted to Propbank projects in sev-eral universities such as Brandeis University, theUniversity of Colorado at Boulder, and the Uni-versity of Illinois at Urbana-Champaign.
Wewill continuously develop the tools by improv-ing their functionalities through user-testing andfeedback, and also by applying them to morelanguages.AcknowledgmentsSpecial thanks are due to Prof. Nianwen Xue ofBrandeis University for his very helpful insightsas well as Scott Cotton, the developer of RATSand Tom Morton, the developer of WordFreak,both previously used for PropBank annotation.We gratefully acknowledge the support of theNational Science Foundation Grants CISE-CRI-0551615, Towards a Comprehensive LinguisticAnnotation and CISE-CRI 0709167, Collabo-rative: A Multi-Representational and Multi-Layered Treebank for Hindi/Urdu, and a grantfrom the Defense Advanced Research ProjectsAgency (DARPA/IPTO) under the GALE pro-gram, DARPA/CMO Contract No.
HR0011-06-C-0022, subcontract from BBN, Inc. Any opin-ions, findings, and conclusions or recommenda-tions expressed in this material are those of theauthors and do not necessarily reflect the viewsof the National Science Foundation.ReferencesJinho D. Choi, Claire Bonial, and Martha Palmer.2009a.
Cornerstone: Propbank frameset editorguideline (version 1.3).
Technical report, Instituteof Cognitive Science, the University of Colorado atBoulder.Jinho D. Choi, Claire Bonial, and Martha Palmer.2009b.
Jubilee: Propbank instance editor guide-line (version 2.1).
Technical report, Institute ofCognitive Science, the University of Colorado atBoulder.C.
Han, N. Han, E. Ko, and M. Palmer.
2002.
Ko-rean treebank: Development and evaluation.
InProceedings of the 3rd International Conference onLanguage Resources and Evaluation.Mitchell P. Marcus, Mary Ann Marcinkiewicz, andBeatrice Santorini.
1993.
Building a large anno-tated corpus of english: The penn treebank.
Com-putational Linguistics, 19(2):313?330.M.Diab, A.Mansouri, M.Palmer, O.Babko-Malaya,W Zaghouani, A.Bies, and M.Maamouri.
2008.A pilot arabic propbank.
In Proceedings of the 7thInternational Conference on Language Resourcesand Evaluation.Martha Palmer, Daniel Gildea, and Paul Kingsbury.2005.
The proposition bank: An annotated cor-pus of semantic roles.
Computational Linguistics,31(1):71?106.Nianwen Xue and Martha Palmer.
2009.
Addingsemantic roles to the chinese treebank.
NaturalLanguage Engineering, 15(1):143?172.16
