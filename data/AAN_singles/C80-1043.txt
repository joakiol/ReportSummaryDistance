SYSTEM SUPPORT IN CHINESE DATA ENTRYJoseph E. GrimesCornell University, Ithaca NY, USASummaryOur aim is a viable software systemto support language data processinginvolving non-alphabetic symbols,specif ical ly the Chinese characters.
Thekey to the system is the exploitation ofcertain linguistic relationships betweenpairs of those characters in sequence.In the development vehicle for thissystem, independent modules of data arelinked by pointers at two criticalinterfaces.
The first links an inputrecognizer to a process that recognizessignif icant pairings.
The second linksboth recognizers to a charactergenerator.Chinese typists are readily trainedto end the input sequence thatidentifies the first character of a pairwith a special delimiter for pairsrather than the usual delimiter.
Thepairs delimiter alerts the system tolook up the pairing potential of thefirst character.
Then it matches thesecond character of the pair againstthat potential.
The result is automaticcontextual disambiguation performed oninput codes that otherwise might notidentify characters uniquely.OverviewUp to now, devices for typingChinese characters or for entering theminto computers have not been widelysuccessful.
The problem is not one ofstoring character shapes in a computeror of reproducing them once they arestored; it is rather a problem ofdesignating quickly which of a largenumber of accessible shapes should bereproduced.The companion paper by Paul King onhuman factors and l inguisticconsiderations shows that a satisfactorysolution can be worked out by payingattention not just to the graphic shapesinvolved, but to the characterist ics ofthe Chinese language that stand behindthose graphic shapes and theircombinations.The solution has three components.First, it is possible to use nonuniquestrings of key strokes to identify theshape of a character; that is, many ofthe identifiers in King's Cornell Codeidentify two or more characters.
Second,since often in Chinese it is atwo-character sequence that issignif icant rather than the individualcharacters that make it up, access toinformation about such pairings makes itpossible to eliminate, or at leastreduce, the ambiguity inherent in theuse of nonunique identifiers.
Third, inthe residual cases where it is still notclear which of several characters orcharacter pairs is intended, it hasproved adequate to display thepossibi l i t ies and interrupt the operatorto ask her to indicate which one shewants by typing the number of that oneon the screen before her.The results of this approach toChinese data entry are encouraging.Speakers of Chinese with a middle schooleducation or better learn the keyboardwith about half an hour's instruction.After a two week training session or itsequivalent, the median speed is around40 characters per minute and the bestspeeds are above 50.
The error rate bythat time approaches zero, and residualerrors are correctible by means of acursor editor that is built into thesystem.
Operators can type for severalhours at a time without fatigue.The software system that makes thisbehavior possible is not part icularlycomplex.
It derives its power from theamount of information about the Chineselanguage that it holds in compact formin its internal store: specifically,information about the most likelycharacter pairings in Chinese.RequirementsTo create this system we began withtwo overall requirements.
The first wasthat it be modular, so that anycomponent of it could be worked onwithout disturbing the other components,and so that it could be implemented on avariety of physical configurations.
Eachof the stored data structures ismanipulated not only by the main dataentry program, but also by util ityprograms that make it possible to addnew characters to the repertoire (forexample, to put together a specializedvocabulary for a particularapplication), or to augment the numberof pairings that the system recognizes.Modularity also makes it possible tochange output character fonts asdesired.. .
.
.
283Chinese Data Entry Gr imesThe second requi rement  was, ofcourse, that all funct ions of the systembe accompl ished at a speed that wouldpermit  typists to achieve their bestper fo rmance  without any l imit beingimposed on them.
In the disk or ientedprototype,  this requ i rement  involvedpaying special  at tent ion to min imiz ingdisk accesses when search ing  throughchains of pointers.The prototype embodies a th i rdrequ i rement  that product ion vers ionswil l  not have to meet: each typist 'sper fo rmance  needs to be logged in a waythat slows nothing down.
An internalc lock puts t imes and character  codesinto a buffer that is wr i t ten to a logfile from time to time.
A ut i l i typrogram later compares the log with astored vers ion of what was to be typed.From that compar ison it determines  theer ror  rate.
From the t iming in format ionit determines  the typing rate.
Theresults  of this ut i l i ty  are madeava i lab le  to another that plots theper fo rmance  of all typists  being testedas a funct ion of time.Stored in format ionThere are two kinds of in format ionthat the system uses in decid ing whichcharacter  the typist wants: a fi le ofident i f iers ,  and a file of pair ings.
Theident i f ier  fi le is used to find a directmatch to str ings typed in from thekeyboard.
A successfu l  match against  theident i f ier  f i le y ie lds one or moreChinese te legraph codes ( four-digitnumbers) that represent  all thecharacters  that that ident i f ier  couldstand for.
The file of pair ings,  on theother hand, tel ls what other characterscould fo l low a given character  in ac lose-kn i t  re la t ionsh ip  to it when itcomes f irst in a pair.The ident i f ier  fi le is organized asa B*-t ree with var iable length entr ies.This type of s t ructure keeps the numberof d isk  accesses needed to match anident i f ier  near the theoret ica l  minimum,with the result  that it can be traversedvery rapidly.
It has the addi t ionaladvantage that it can be implemented insuch a way that the disk blocks nearestthe root are kept in a core buffer area,thereby e l iminat ing outr ight  some of thedisk accesses that would be needed in afull search.
Since the tree is formedat the time when ,new ident i f iers  arebeing introduced into the system by aut i l i ty  program, the complex stepsneeded to keep the B*-tree in balanceare performed only at a time when speedis not a factor.The result  of a match between anident i f ier  and the B*-tree is a str ingof one or more te legraph code numbers.These are the same four-d ig i t  numbersthat have been used for years totransmit  Chinese characters  overte legraph lines.
They are def ined by astandard code book.
The str ing of one ormore te legraph codes that comes from theident i f ier  fi le represents  all theChinese characters  whose shape matchesthe ident i f ier  string.
This string ofcodes is held in an internal buffer,where later stages of the process workon it.The fi le of pa i r ings  is the heartof the system and the focal point of thepatent  that has been f i led on it.
Itcons is ts  of two parts: index andcontents.
The index is der ived byapply ing an ar i thmet ic  funct ion to thete legraph code that is desired,  y ie ldinga f ixed of fset  from the beginning of thefile.
At that of fset  is stored aninternal pointer to where the contentsbegin.
This makes poss ib le  a rapidsecond access to a nearby locat ion onthe disk.
The contents,  stored at thesecond locat ion,  are var iab le  in length;they are a str ing of te legraph codesthat ident i fy  all the characters  thatare known to pair with the characterwhose te legraph code forms the or ig inalsearch argument;  that is, all thecharacters  whose sequent ia l  re la t ionsh ipto the first character  is s ign i f i cant  inChinese.The system also stores graphicin format ion  that def ines charactershapes for d isp lay on the screen and forpr int ing.
The shape in format ion isindexed just as it is in the file ofpair ings,  using the te legraph code ofeach character  as a pointer.
The samea lgor i thm that is used for the file ofpa i r ings  converts  the te legraph code toa f ixed disk offset,  and at the pos i t ionon the disk that is so indicated, thein format ion is found that tel ls wherethe actual graphic  in format ion beginslater in the same file.The form of the graphic  in format ionor its d isp lay is of no d irect  concernto the se lect ion logic; it can betreated as a c luster of a data structurethat is pointed to, together with theprocesses necessary  to handle it.
Wehave implemented both vector  and rasterd isp lays,  and with in each mode anyava i lab le  font can be cal led up s implyby naming the appropr ia te  characterfile, s ince all are accessed through thesame pointer structure.-284  ?Chinese Data Entry Gr imesProcessesThree major  processes select theChinese character  the typist wants.
Thefirst recognizes the ident i f ier  stringthat is typed in, using the B*-treestructure of the ident i f ier  file.
Thesecond process is invoked whenever acharacter  pair is typed in.
Itrecognizes all pa i r ings that match bothident i f iers  in the pair in order.
Thethird process is invoked only if morethan one poss ib le  result  remains afterthe f irst two processes have finished;it gets the typist 's attent ion and asksher to make a decision.The process that recognizes anident i f ier  f inds an exact match in aB*-tree of known identi f iers.
If nomatch is poss ib le  it gets the operator 'sattent ion:  either the identi f ier wastyped wrong, or it is not yet in thesystem.
In either case something elseneeds to be typed.When a pair is typed in, the stringup to the special  del imiter  for pairs istaken as the first ident i f ier  andmatched separate ly  from the string forthe second identi f ier,  which comesbetween the special del imiter  and thefinal del imiter.
For each identi f ier,the ident i f ier  file yields a string offour-d ig i t  te legraph codes, one for eachof the Chinese characters  that thatident i f ier  can represent.
In about onecase out of nine, there is only onete legraph code for an identi f ier.Frequent ly,  however,  there are two; andthe number sometimes goes as high asf i f teen te legraph codes for oneidenti f ier.When a pair of characters  is typedin using the special  del imiter  toseparate them, the presence of thatde l imi ter  act ivates the second processthat recognizes known pair ings.
Thisprocess goes through the string ofte legraph codes that correspond to thef irst ident i f ier .
For each telegraphcode in that string, it looks in thefile of poss ib le  pair ings to see whatother codes might form possible pair ingswith the first one.
The process thengoes through the te legraph codes thatcorrespond to the second ident i f ier  tosee if any of them actual ly  does form apair ing with the first.
If one does,that pair of te legraph codes is copiedinto a special array which the thirdprocess uses for its final select ion.If on the other hand the pair ingthe typist reacts to is not yet in thefile of pair ings,  the third process isautomat ica l ly  appl ied to .
the firstcharacter  of the pair so that it can bed isambiguated manual ly ,  then to  thesecond member of the pair separate ly  forthe same process.If the process that recognizesident i f iers  f inds only one telegraphcode for an ident i f ier ,  and there is nopair ing,  then that te legraph code isaccepted as the correct  representat ionfor the character  the typist intended.If there is a pair ing, but after thesecond process is over only one pair ofte legraph codes has been found, thosetwo can be taken as the characters  thetypist  intended.Somet imes,  however,  an unpairedcharacter  ident i f ier  corresponds to twoor more telegraph codes, and thedec is ion as to which code is intendedhas to be made by the typist.
Much morerarely, two paired ident i f iers  matchmore than one pair of te legraph codes inthe second process, and the decis ion asto which pair of characters  is intendedhas to be made by the typist.
It is alsoposs ib le  for a legit imate pair ing to notyet be in the file of pair ings,  so thateach of the two characters  the typisttyped has to be presented separate ly  fora decis ion.In all these cases the thirdprocess interrupts the typist byemitt ing an audible signal to indicatethat she needs to divert  her attent ionfrom what she is typing to the quest ionposed on the screen in front of her.The screen displays the entire list ofposs ib i l i t ies ,  either single charactersor pairs of characters.
She in returntypes a number to tell the process whichone of them she wants: "2" for thesecond one displayed, "5" for the fifth,and so forth.All the te legraph codes that arefound by the three processes of matchingident i f iers ,  resolving pairs, anddecid ing among a l ternat ives  go into anoutput buffer in the form of characterstr ings that represent  the four-d ig i tte legraph codes.
The contents of thisbuffer  are avai lable for any one ofseveral  subsequent  processes.The first process that operates onthe output string of te legraph codes isan editor that al lows a cursor to bemoved through the string to the placewhere some change is to be made.
Theeditor then al lows delet ions andinsert ions to be made wherever thecursor is located.
All d isplay On thescreen, of course, is in the form of the- -285Chinese Data Entry Gr imesChinese characters  that correspond tothe stored te legraph codes; the codesthemselves  are never seen by the typist.The edited str ing can be stored ona magnet ic  medium, sent over acommunicat ions  line, or formattedver t i ca l l y  or hor i zonta l ly  to be sent toa pr int ing device.
All these processesare convent ional .
They give the Chinesedata entry system the potent ia l  of beingused as a computer  terminal,  acommunicat ions  terminal ,  an off l i nedata entry device, or even a simpleof f ice typewriter .The work on which this paper wasbased received support  from the NCRCorporat ion .- -286  - -
