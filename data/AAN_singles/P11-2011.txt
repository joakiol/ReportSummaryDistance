Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers, pages 58?64,Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational LinguisticsTier-based Strictly Local Constraints for PhonologyJeffrey Heinz, Chetan Rawal and Herbert G. TannerUniversity of Delawareheinz,rawal,btanner@udel.eduAbstractBeginning with Goldsmith (1976), the phono-logical tier has a long history in phonologicaltheory to describe non-local phenomena.
Thispaper defines a class of formal languages, theTier-based Strictly Local languages, which be-gin to describe such phenomena.
Then thisclass is located within the Subregular Hier-archy (McNaughton and Papert, 1971).
It isfound that these languages contain the StrictlyLocal languages, are star-free, are incompa-rable with other known sub-star-free classes,and have other interesting properties.1 IntroductionThe phonological tier is a level of representationwhere not all speech sounds are present.
For ex-ample, the vowel tier of the Finnish word pa?iva?a??Hello?
is simply the vowels in order without theconsonants: a?ia?a?.Tiers were originally introduced to describe tonesystems in languages (Goldsmith, 1976), and subse-quently many variants of the theory were proposed(Clements, 1976; Vergnaud, 1977; McCarthy, 1979;Poser, 1982; Prince, 1984; Mester, 1988; Odden,1994; Archangeli and Pulleyblank, 1994; Clementsand Hume, 1995).
Although these theories differ intheir details, they each adopt the premise that repre-sentational levels exist which exclude certain speechsounds.Computational work exists which incorporatesand formalizes phonological tiers (Kornai, 1994;Bird, 1995; Eisner, 1997).
There are also learningalgorithms which employ them (Hayes and Wilson,2008; Goldsmith and Riggle, to appear).
However,there is no work of which the authors are aware thataddresses the expressivity or properties of tier-basedpatterns in terms of formal language theory.This paper begins to fill this gap by defining Tier-Based Strictly Local (TSL) languages, which gen-eralize the Strictly Local languages (McNaughtonand Papert, 1971).
It is shown that TSL languagesare necessarily star-free, but are incomparable withother known sub-star-free classes, and that naturalgroups of languages within the class are string exten-sion learnable (Heinz, 2010b; Kasprzik and Ko?tzing,2010).
Implications and open questions for learn-ability and Optimality Theory are also discussed.Section 2 reviews notation and key concepts.
Sec-tion 3 reviews major subregular classes and their re-lationships.
Section 4 defines the TSL languages,relates them to known subregular classes, and sec-tion 5 discusses the results.
Section 6 concludes.2 PreliminariesWe assume familiarity with set notation.
A finite al-phabet is denoted ?.
Let ?n, ?
?n, ??
denote allsequences over this alphabet of length n, of lengthless than or equal to n, and of any finite length, re-spectively.
The empty string is denoted ?
and |w| de-notes the length of word w. For all strings w and allnonempty strings u, |w|u denotes the number of oc-currences of u in w. For instance, |aaaa|aa = 3.
Alanguage L is a subset of ??.
The concatenation oftwo languages L1L2 = {uv : u ?
L1 and v ?
L2}.For L ?
??
and ?
?
?, we often write L?
insteadof L{?
}.We define generalized regular expressions(GREs) recursively.
GREs include ?, ?
andeach letter of ?.
If R and S are GREs thenRS, R + S, R ?
S, R, and R?
are also GREs.The language of a GRE is defined as follows.58L(?)
= ?.
For all ?
?
?
?
{?
}, L(?)
= {?
}.If R and S are regular expressions thenL(RS) = L(R)L(S), L(R + S) = L(R) ?
L(S),and L(R ?
S) = L(R) ?
L(S).
Also,L(R) = ??
?
L(R) and L(R?)
= L(R)?.For example, the GRE ?
denotes the language ?
?.A language is regular iff there is a GRE defin-ing it.
A language is star-free iff there is a GREdefining it which contains no instances of the Kleenestar (*).
It is well known that the star-free languages(1) are a proper subset of the regular languages, (2)are closed under Boolean operations, and (3) havemultiple characterizations, including logical and al-gebraic ones (McNaughton and Papert, 1971).String u is a factor of string w iff ?x, y ?
?
?such that w = xuy.
If also |u| = k then u is a k-factor of w. For example, ab is a 2-factor of aaabbb.The function Fk maps words to the set of k-factorswithin them.Fk(w) = {u : u is a k-factor of w}For example, F2(abc) = {ab, bc}.The domain Fk is generalized to languages L ???
in the usual way: Fk(L) = ?w?LFk(w).
Wealso consider the function which counts k-factors upto some threshold t.Fk,t(w) = {(u, n) : u is a k-factor of w andn = |w|u iff |w|u < t else n = t}For example F2,3(aaaaab) = {(aa, 3), (ab, 1)}.A string u = ?1?2 ?
?
?
?k is a subsequence of astring w iff w ?
???1???2??
?
?
????k??.
Since|u| = k we also say u is a k-subsequence of w. Forexample, ab is a 2-subsequence of caccccccccbcc.By definition ?
is a subsequence of every string in??.
The function P?k maps words to the set of sub-sequences up to length k found in those words.P?k(w) = {u ?
?
?k : u is a subsequence of w}For example P?2(abc) = {?, a, b, c, ab, ac, bc}.
Asabove, the domains of Fk,t and P?k are extended tolanguages in the usual way.3 Subregular HierarchiesSeveral important subregular classes of languageshave been identified and their inclusion relation-ships have been established (McNaughton and Pa-pert, 1971; Simon, 1975; Rogers and Pullum, toRegular Star-FreeTSLLTT LTPTSLSPFigure 1: Proper inclusion relationships among subreg-ular language classes (indicated from left to right).
Thispaper establishes the TSL class and its place in the figure.appear; Rogers et al, 2010).
Figure 1 summarizesthose earlier results as well as the ones made inthis paper.
This section defines the Strictly Local(SL), Locally Threshold Testable (LTT) and Piece-wise Testable (PT) classes.
The Locally Testable(LT) languages and the Strictly Piecewise (SP) lan-guages are discussed by Rogers and Pullum (to ap-pear) and Rogers et al (2010), respectively.
Readersare referred to these papers for additional details onall of these classes.
The Tier-based Strictly Local(TSL) class is defined in Section 4.Definition 1 A language L is Strictly k-Local iffthere exists a finite set S ?
Fk(o?
?n) such thatL = {w ?
??
: Fk(own) ?
S}The symbols o and n invoke left and right wordboundaries, respectively.
A language is said to beStrictly Local iff there is some k for which it isStrictly k-Local.
For example, let ?
= {a, b, c} andL = aa?
(b+ c).
Then L is Strictly 2-Local becausefor S = {oa, ab, ac, aa, bn, cn} and every w ?
L,every 2-factor of own belongs to S.The elements of S can be thought of as the per-missible k-factors and the elements in Fk(o?
?n)?S are the forbidden k-factors.
For example, bb andob are forbidden 2-factors for L = aa?
(b+ c).More generally, any SL language L excludes ex-actly those words with any forbidden factors; i.e., Lis the intersection of the complements of sets definedto be those words which contain a forbidden fac-tor.
Note the set of forbidden factors is finite.
Thisprovides another characterization of SL languages(given below in Theorem 1).Formally, let the container of w ?
o?
?n beC(w) = {u ?
??
: w is a factor of o un}For example, C(oa) = a??.
Then, by the immedi-ately preceding argument, Theorem 1 is proven.59Theorem 1 Consider any Strictly k-Local languageL.
Then there exists a finite set of forbidden factorsS?
?
Fk(o?
?n) such that L = ?w?S?
C(w).Definition 2 A language L is Locally t-Thresholdk-Testable iff ?t, k ?
N such that ?w, v ?
?
?, ifFk,t(w) = Fk,t(v) then w ?
L ?
v ?
L.A language is Locally Threshold Testable iff thereis some k and t for which it is Locally t-Thresholdk-Testable.Definition 3 A language L is Piecewise k-Testableiff ?k ?
N such that ?w, v ?
?
?, if P?k(w) =P?k(v) then w ?
L ?
v ?
L.A language is Piecewise Testable iff there is some kfor which it is Piecewise k-Testable.4 Tier-based Strictly Local LanguagesThis section provides the main results of this paper.4.1 DefinitionThe definition of Tier-based Strictly Local lan-guages is similar to the one for SL languages withthe exception that forbidden k-factors only apply toelements on a tier T ?
?, all other symbols are ig-nored.
In order to define the TSL languages, it isnecessary to introduce an ?erasing?
function (some-times called string projection), which erases sym-bols not on the tier.ET (?1 ?
?
?
?n) = u1 ?
?
?
unwhere ui = ?i iff ?i ?
T and ui = ?
otherwise.For example, if ?
= {a, b, c} and T = {b, c}then ET (aabaaacaaabaa) = bcb.
A string u =?1 ?
?
?
?n ?
oT ?n is a factor on tier T of a string wiff u is a factor of ET (w).Then the TSL languages are defined as follows.Definition 4 A language L is Strictly k-Local onTier T iff there exists a tier T ?
?
and finite setS ?
Fk(oT ?n) such thatL = {w ?
??
: Fk(oET (w)n) ?
S}Again, S represents the permissible k-factors on thetier T , and elements in Fk(oT ?n) ?
S representthe forbidden k-factors on tier T .
A language L is aTier-based Strictly Local iff it is Strictly k-Local onTier T for some T ?
?
and k ?
N.To illustrate, let ?
= {a, b, c}, T = {b, c}, andS = {ob,oc, bc, cb, bn, cn}.
Elements of S arethe permissible k-factors on tier T .
Elements ofF2(oT ?n) ?
S = {bb, cc} are the forbidden fac-tors on tier T .
The language this describe includeswords like aabaaacaaabaa, but excludes words likeaabaaabaaacaa since bb is a forbidden 2-factor ontier T .
This example captures the nature of long-distance dissimilation patterns found in phonology(Suzuki, 1998; Frisch et al, 2004; Heinz, 2010a).Let LD stand for this particular dissimilatory lan-guage.Like SL languages, TSL languages can also becharacterized in terms of the forbidden factors.
Letthe tier-based container of w ?
oT ?n be CT (w) ={u ?
??
: w is a factor on tier T of o un}For example, CT (ob) = (?
?
T )?b??.
In generalif w = ?1 ?
?
?
?n ?
T ?
then CT (w) =???1(?
?
T )??2(?
?
T )?
?
?
?
(?
?
T )??n?
?In the case where w begins (ends) with a wordboundary symbol then the first (last) ??
in the pre-vious GRE must be replaced with (?
?
T )?.Theorem 2 For any L ?
TSL, let T, k, S bethe tier, length, and permissible factors, respec-tively, and S?
the forbidden factors.
Then L =?w?S?
CT (w).Proof The structure of the proof is identical to theone for Theorem 1.
4.2 Relations to other subregular classesThis section establishes that TSL languages prop-erly include SL languages and are properly star-free.Theorem 3 shows SL languages are necessarily TSL.Theorems 4 and 5 show that TSL languages are notnecessarily LTT nor PT, but Theorem 6 shows thatTSL languages are necessarily star-free.Theorem 3 SL languages are TSL.Proof Inclusion follows immediately from the defi-nitions by setting the tier T = ?.
The fact that TSL languages properly include SLones follows from the next theorem.Theorem 4 TSL languages are not LTT.60Proof It is sufficient to provide an example of a TSLlanguage which is not LTT.
Consider any thresholdt and length k. Consider the TSL language LD dis-cussed in Section 4.1, and consider the wordsw = akbakbakcak and v = akbakcakbakClearly w 6?
LD and v ?
LD.
However,Fk(own) = Fk(ovn); i.e., they have the samek-factors.
In fact for any factor f ?
Fk(own),it is the case that |w|f = |v|f .
ThereforeFk,t(own) = Fk,t(ovn).
If LD were LTT,it would follow by definition that either bothw, v ?
LD or neither w, v belong to LD, which isclearly false.
Hence LD 6?
LTT.
Theorem 5 TSL languages are not PT.Proof As above, it is sufficient to provide an exam-ple of a TSL language which is not PT.
Consider anylength k and the language LD.
Letw = ak(bakbakcakcak)k andv = ak(bakcakbakcak)kClearly w 6?
LD and v ?
LD.
But observe thatP?k(w) = P?k(v).
Hence, even though the twowords have exactly the same k-subsequences (forany k), both words are not in LD.
It follows that LDdoes not belong to PT.
Although TSL languages are neither LTT nor PT,Theorem 6 establishes that they are star-free.Theorem 6 TSL languages are star-free.Proof Consider any language L which is Strictly k-Local on Tier T for some T ?
?
and k ?
N. ByTheorem 2, there exists a finite set S?
?
Fk(oT ?n)such that L = ?w?S?
CT (w).
Since the star-free lan-guages are closed under finite intersection and com-plement, it is sufficient to show that CT (w) is star-free for all w ?
oT ?n.First consider any w = ?1 ?
?
?
?n ?
T ?.
Since(?
?T )?
= ??T??
and ??
= ?, the set CT (w) canbe written as?
?T?
?1 ?T?
?2 ?T?
?
?
?
?n ?This is a regular expression without the Kleene-star.In the cases where w begins (ends) with a wordboundary symbol, the first (last) ?
in the GRE aboveshould be replaced with ?T?.
Since every CT (w)can be expressed as a GRE without the Kleene-star,every TSL language is star-free.
Together Theorems 1-4 establish that TSL lan-guages generalize the SL languages in a differentway than the LT and LTT languages do (Figure 1).4.3 Other PropertiesThere are two other properties of TSL languagesworth mentioning.
First, TSL languages are closedunder suffix and prefix.
This follows immediatelybecause no word w of any TSL language containsany forbidden factors on the tier and so neither doesany prefix or suffix of w. SL and SP languages?butnot LT or PT ones?also have this property, which hasinteresting algebraic consequences (Fu et al, 2011).Next, consider that the choice of T ?
?
andk ?
N define systematic classes of languages whichare TSL.
Let LT,k denote such a class.
It followsimmediately that LT,k is a string extension class(Heinz, 2010b).
A string extension class is onewhich can be defined by a function f whose do-main is ??
and whose codomain is the set of allfinite subsets of some set A.
A grammar G is aparticular finite subset of A and the language of thegrammar is all words which f maps to a subset ofG.
For LT,k, the grammar can be thought of as theset of permissible factors on tier T and the func-tion is w 7?
Fk(oET (w)n).
In other words, everyword is mapped to the set of k-factors present on tierT .
(So here the codomain?the possible grammars?isthe powerset of Fk(oT ?n).
)String extension classes have quite a bit ofstructure, which faciliates learning (Heinz, 2010b;Kasprzik and Ko?tzing, 2010).
They are closed un-der intersection, and have a lattice structure underthe partial ordering given by the inclusion relation(?).
Additionally, these classes are identifiable inthe limit from positive data (Gold, 1967) by an in-cremental learner with many desirable properties.In the case just mentioned, the tier is known inadvance.
Learners which identify in the limit a classof TSL languages with an unknown tier but knownk exist in principle (since such a class is of finitesize), but it is unknown whether any such learner is61efficient in the size of the input sample.5 DiscussionHaving established the main results, this section dis-cusses some implications for phonology in general,Optimality Theory in particular, and future research.There are three classes of phonotactic constraintsin phonology: local segmental patterns, long-distance segmental patterns, and stress patterns(Heinz, 2007).
Local segmental patterns are SL(Heinz, 2010a).
Long-distance segmental phono-tactic patterns are those derived from processes ofconsonant harmony and disharmony and vowel har-mony.
Below we show each of these patterns belongto TSL.
For exposition, assume ?={l,r,i,o?,u,o}.Phonotactic patterns derived from attested long-distance consonantal assimilation patterns (Roseand Walker, 2004; Hansson, 2001) are SP; on theother hand, phonotactic patterns derived from at-tested long-distance consonantal dissimilation pat-terns (Suzuki, 1998) are not (Heinz, 2010a).
How-ever, both belong to TSL.
Assimilation is obtainedby forbidding disagreeing factors on the tier.
Forexample, forbidding lr and rl on the liquid tierT = {l, r} yields only words which do not containboth [l] and [r].
Dissimilation is obtained by for-bidding agreeing factors on the tier; e.g.
forbiddingll and rr on the liquid tier yields a language of thesame character as LD.The phonological literature distinguishes threekinds of vowel harmony patterns: those without neu-tral vowels, those with opaque vowels and thosewith transparent vowels (Bakovic?, 2000; Nevins,2010).
Formally, vowel harmony patterns withoutneutral vowels are the same as assimilatory conso-nant harmony.
For example, a case of back harmonycan be described by forbidding disagreeing factors{iu, io, o?u, o?o, ui, uo?, oi, oo?}
on the vowel tierT ={i,o?,u,o}.
If a vowel is opaque, it does not har-monize but begins its own harmony domain.
For ex-ample if [i] is opaque, this can be described by for-bidding factors {iu, io o?u, o?o, uo?, oo?}
on the voweltier.
Thus words like lulolilo?
are acceptable becauseoi is a permissible factor.
If a vowel is transpar-ent, it neither harmonizes nor begins its own har-mony domain.
For example if [i] is transparent (as inFinnish), this can be described by removing it fromthe tier; i.e.
by forbidding factors {o?u, o?o, uo?, oo?
}on tier T ={o?,u,o}.
Thus words like lulolilu are ac-ceptable since [i] is not on the relevant tier.
The rea-sonable hypothesis which follows from this discus-sion is that all humanly possible segmental phono-tactic patterns are TSL (since TSL contains SL).Additionally, the fact that LT,k is closed under in-tersection has interesting consequences for Optimal-ity Theory (OT) (Prince and Smolensky, 2004).
Theintersection of two languages drawn from the samestring extension class is only as expensive as the in-tersection of finite sets (Heinz, 2010b).
It is knownthat the generation problem in OT is NP-hard (Eis-ner, 1997; Idsardi, 2006) and that the NP-hardness isdue to the problem of intersecting arbitrarily manyarbitrary regular sets (Heinz et al, 2009).
It is un-known whether intersecting arbitrarily many TSLsets is expensive, but the results here suggest thatit may only be the intersections across distinct LT,kclasses that are problematic.
In this way, this worksuggests a way to factor OT constraints characteri-zable as TSL languages in a manner originally sug-gested by Eisner (1997).Future work includes determining automata-theoretic characterizations of TSL languages andprocedures for deciding whether a regular set be-longs to TSL, and if so, for what T and k. Also,the erasing function may be used to generalize othersubregular classes.6 ConclusionThe TSL languages generalize the SL languagesand have wide application within phonology.
Eventhough virtually all segmental phonotactic con-straints present in the phonologies of the world?s lan-guages, both local and non-local, fall into this class,it is striking how highly restricted (sub-star-free) andwell-structured the TSL languages are.AcknowledgementsWe thank the anonymous reviewers for carefullychecking the proofs and for their constructive crit-icism.
We also thank the participants in the Fall2010 Formal Models in Phonology seminar at theUniversity of Delaware for valuable discussion, es-pecially Jie Fu.
This research is supported by grant#1035577 from the National Science Foundation.62ReferencesDiana Archangeli and Douglas Pulleyblank.
1994.Grounded Phonology.
Cambridge, MA: MIT Press.Eric Bakovic?.
2000.
Harmony, Dominance and Control.Ph.D.
thesis, Rutgers University.Steven Bird.
1995.
Computational Phonology: AConstraint-Based Approach.
Cambridge UniversityPress, Cambridge.G.
N. Clements and Elizabeth Hume.
1995.
The internalorganization of speech sounds.
In John A. Goldsmith,editor, The Handbook of Phonological Theory, pages245?306.
Blackwell, Cambridge, Mass., and Oxford,UK.G.
N. Clements.
1976.
Neutral vowels in hungarianvowel harmony: An autosegmental interpretation.
InDavid Nash Judy Kegl and Annie Zaenen, editors,North Eastern Linguistic Society (NELS) 7, pages 49?64, Amherst, MA.
University of Massachusetts, Grad-uate Linguistic Student Association.Jason Eisner.
1997.
Efficient generation in primitive Op-timality Theory.
In Proceedings of the 35th AnnualACL and 8th EACL, pages 313?320, Madrid, July.S.
Frisch, J. Pierrehumbert, and M. Broe.
2004.
Simi-larity avoidance and the OCP.
Natural Language andLinguistic Theory, 22:179?228.Jie Fu, Jeffrey Heinz, and Herbert Tanner.
2011.
Analgebraic characterization of strictly piecewise lan-guages.
In The 8th Annual Conference on Theoryand Applications of Models of Computation, volume6648 of Lecture Notes in Computer Science.
Springer-Verlag.E.M.
Gold.
1967.
Language identification in the limit.Information and Control, 10:447?474.John Goldsmith and Jason Riggle.
to appear.
Infor-mation theoretic approaches to phonological structure:the case of Finnish vowel harmony.
Natural Languageand Linguistic Theory.John Goldsmith.
1976.
Autosegmental Phonology.Ph.D.
thesis, MIT, Cambridge, Mass.
Published byGarland Press, New York , 1979.Gunnar Hansson.
2001.
Theoretical and typological is-sues in consonant harmony.
Ph.D. thesis, Universityof California, Berkeley.Bruce Hayes and Colin Wilson.
2008.
A maximum en-tropy model of phonotactics and phonotactic learning.Linguistic Inquiry, 39:379?440.Jeffrey Heinz, Gregory Kobele, and Jason Riggle.
2009.Evaluating the complexity of Optimality Theory.
Lin-guistic Inquiry, 40(2):277?288.Jeffrey Heinz.
2007.
The Inductive Learning of Phono-tactic Patterns.
Ph.D. thesis, University of California,Los Angeles.Jeffrey Heinz.
2010a.
Learning long-distance phonotac-tics.
Linguistic Inquiry, 41(4):623?661.Jeffrey Heinz.
2010b.
String extension learning.
In Pro-ceedings of the 48th Annual Meeting of the Associ-ation for Computational Linguistics, pages 897?906,Uppsala, Sweden, July.
Association for ComputationalLinguistics.William Idsardi.
2006.
A simple proof that OptimalityTheory is computationally intractable.
Linguistic In-quiry, 37(2):271?275.Anna Kasprzik and Timo Ko?tzing.
2010.
String ex-tension learning using lattices.
In Henning Fer-nau Adrian-Horia Dediu and Carlos Mart?
?n-Vide, ed-itors, Proceedings of the 4th International Confer-ence on Language and Automata Theory and Appli-cations (LATA 2010), volume 6031 of Lecture Notesin Computer Science, pages 380?391, Trier, Germany.Springer.Andras Kornai.
1994.
Formal Phonology.
Garland, NewYork.John J. McCarthy.
1979.
Formal problems in Semiticphonology and morphology.
Ph.D. thesis, MIT.
Pub-lished by Garland Press, New York, 1985.Robert McNaughton and Seymour Papert.
1971.Counter-Free Automata.
MIT Press.Armin Mester.
1988.
Studies in Tier Structure.
NewYork: Garland Publishing, Inc.Andrew Nevins.
2010.
Locality in Vowel Harmony.
TheMIT Press, Cambridge, MA.David Odden.
1994.
Adjacency parameters in phonol-ogy.
Language, 70(2):289?330.William Poser.
1982.
Phonological representation andaction-at-a-distance.
In H. van der Hulst and N.R.Smith, editors, The Structure of Phonological Repre-sentations, pages 121?158.
Dordrecht: Foris.Alan Prince and Paul Smolensky.
2004.
Optimality The-ory: Constraint Interaction in Generative Grammar.Blackwell Publishing.Alan Prince.
1984.
Phonology with tiers.
In MarkAronoff and Richard T. Oehrle, editors, LanguageSound Structure, pages 234?244.
MIT Press, Cam-bridge, Mass.James Rogers and Geoffrey Pullum.
to appear.
Auralpattern recognition experiments and the subregular hi-erarchy.
Journal of Logic, Language and Information.James Rogers, Jeffrey Heinz, Gil Bailey, Matt Edlefsen,Molly Visscher, David Wellcome, and Sean Wibel.2010.
On languages piecewise testable in the strictsense.
In Christian Ebert, Gerhard Ja?ger, and JensMichaelis, editors, The Mathematics of Language, vol-ume 6149 of Lecture Notes in Artifical Intelligence,pages 255?265.
Springer.63Sharon Rose and Rachel Walker.
2004.
A typology ofconsonant agreement as correspondence.
Language,80(3):475?531.Imre Simon.
1975.
Piecewise testable events.
In Au-tomata Theory and Formal Languages, pages 214?222.Keiichiro Suzuki.
1998.
A Typological Investigation ofDissimilation.
Ph.D. thesis, University of Arizona,Tucson, AZ.Jean-Roger Vergnaud.
1977.
Formal properties ofphonological rules.
In R. Butts and J. Hintikka, ed-itors, Basic Problems and Methodology and Linguis-tics.
Amsterdam: Reidel.64
