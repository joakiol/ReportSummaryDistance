A PROPOSAL FOR MODIFICATIONS IN THE FORMALISM OF GPSGJames KilburyUniversit~t~Trier, FB I I :  LDVPostfach 3825, D-5500 TrierFed.
Rep. of GermanyABSTRACTRecent investigations how a remarkable conver-gence among contemporary unification-based formal-isms for syntactic description.
This convergenceis now itsel f  becoming an object of study, andthere is an increasing recognition of the need forexplicit characterizations of the properties thatrelate and distinguish similar grammar formalisms.The paper proposes a series of changes in the for-malism of Generalized Phrase Structure Grammar thatthrow light on its relation to Functional Unifica-tion Grammar.The essential contribution is a generalizationof cooccurrence restrictions, which become theprincipal and unifying device of GPSG.
IntroducingCategory Cooccurrence Restrictions (CCRs) for lo-cal trees (in analogy to Feature Cooccurrence Re-strictions for categories) provides a genuine gainin expressiveness for the formalism.
Other devices,such as Feature Instantiation Principles and LinearPrecedence Statements can be regarded as specialcases of CCRs.
The proposals lead to a modified no-tion of unification i tsel f .A PROPOSAL FOR MODIFICATIONSIN THE FORMALISM OF GPSGRecent investigations how a remarkable conver-gence among contemporary unification-based formal-isms for syntactic description (cf Shieber 1985).This convergence is now itsel f  becoming an objectof study, and there is an increasing recognitionof the need for explicit characterizations of theproperties that relate and distinguish similargrammar formalisms.
For example, Shieber (1986)describes a compilation from Generalized PhraseStructure Grammar (GPSG; cf Gazdar et a l i i  1985,henceforth GKPS) to PATR-II.
The compilation de-fines the semantics of GPSG by expl icit ly relatingthe two formalisms; at the same time, dif f icult iesin specifying the compilation show that differ-ences between the formalisms transcend variety innotation.This paper is similar to Shieber's in its aimbut differs in the approach.
A series of changesin the formalism of GPSG wil l  be proposed thatmake i t  look more like the "tool oriented" formal-ism of Functional Unification Grammar (FUG; cf Kay1984 and Shieber 1985).
This notational transfor-mation has two consequences: the essential andnonessential differences between GPSG and FUG canbe made more apparent, and the internal structureof GPSG itsel f  becomes more homogeneous and trans-parent.The homogeneity of a formalism is desirable onmethodological grounds that amount o Occam'sprinciple of economy: entities should not be mul-t ipl ied.
This is not to suggest that linguisticformalisms can be simplified at our wi l l ;  on thecontrary, they must be complex and expressiveenough to capture the complexities inherent inlanguage i tsel f .
The burden of proof, however,fal ls  on those who choose more complicated andheterogeneous notational devices.Despite its restrictiveness in comparison withcurrent transformational theory, GPSG in the GKPSversion offers a rich palette of formal devices.I t  introduces Feature Cooccurrence Restrictions(FCRs) to state Boolean restrictions on the co-occurrence of feature specifications within cate-gories but does not explore the use of analogousrestrictions in other parts of the formalism.
Im-mediate Dominance rules, metarules, and lexicalrules are clearly distinguished in their form butall serve to capture the phenomenon of subcategor-ization.This paper proposes the extension of cooccur-rence restrictions in GPSG to express constraintson the cooccurrence of categories within localtrees.
While presented in Kilbury (1986) as a newdescriptive device, such Category CooccurrenceRestrictions (CCRs) are in fact simply a general-ization of principles fundamental to GKPS.The motivation for CCRs is analogous to thatfor distinguishing Immediate Dominance (IO) andLinear Precedence (LP) rules in GPSG (cf GKPS,pp.
44-50).
A context free rule binds informationof two kinds in a single statement.
By separatingthis information in ID and LP rules, GPSG is ableto state generalizations of the sort "A precedesB in every local tree which contains both asdaughters," which cannot be captured in a contextfree grammar.Just as ID and LP rules capture generalizationsabout sets of context free rules (or equivalently,about local trees), CCRs can be seen as statingmore abstract generalizations about ID rules,which in turn are equivalent to generalizations ofthe following sort about local trees:156(I) Any local tree with S as its root must haveA as a daughter.
(2) No local tree with C as a daughter also hasD as a daughter.We can state CCRs as expressions of f i r s t  orderpredicate logic using two primitive predicates,R(~, t) '~ is the root of local tree t '  andD(~, t) '~ is a daughter in local tree t ' .Advantages of CCRs are discussed in Kilbury(1986): The metarules of GPSG can be eliminated asan extra device of the formalism.
As noted above,generalizations can be captured that elude the ex-pressive capabilities of GPSG.
Moreover, CCRs ren-der the GPSG formalism more homogeneous and estab-lish a parallelism that can be expressed in thetraditional notation ~ of an analogy:(3) FCR : category :: CCR : local treeLinguistic items (categories and local trees)and restrictions on such items make up the termsof the above analogy.
GPSG chooses to representthe items and restrictions as different kinds ofobject, whereas FUG has only one kind of object,the functional description (FD), which Kay (1984:76) defines as "a Boolean expression over fea-tures" \[ i .e.
GPSG feature specifications\].
Thus,a homogeneous formalism for GPSG is easilyachieved: just like cooccurrencerestrictions, l in-guistic items can be represented as Boolean ex-pressions, namely, as conjunctions of atomic as-sertions.We shall henceforth regard a GPSG category as aconjunction of assertions about the values as-signed to features \ [ i .e .
FUG attributes\]; the as-sertions assigning these values constitute featurespecifications.
Unlike FUG, which always allowsmore information to be added to FDs and hence hasno notion of a complete description, GPSG has ful-ly specified categories in which every featurepossible for the category is assigned a value.Excluding certain extensions to GPSG for non-con-text-free phenomena (cf Gazdar and Pullum 1985),GPSG allows only a f in i te number of categories fora language, while FUG permits inf initely many FDs.Like FDs, GPSG categories do not have a fixed termstructure, but this property is nonessential forGPSG while being essential for FUG.
I t  may beadded that the modifications to GPSG proposed hereleave i t  nonfunctional in Kay's sense.FUG as described in Kay (1984) provides forconjunction and disjunction but not for negationin FDs.
Karttunen (1984), however, argues for theuse of both disjunction and negation in unifica-tion-grammar formalisms.
GPSG has the fu l l  set oflogical connectives in FCRs, which are arbitraryBoolean conditions on the cooccurrence of featurespecifications within categories; categories them-selves, however, are restricted in form to con-junctions of feature specifications.
I f  the formaldistinction of GPSG between linguistic items andlinguistic restrictions is abandoned in favor of auniform representation for both as Boolean expres-sions, we then can in effect use disjunction andnegation in the categories as well.
Conversely, wemay view FCRs as partially instantiated catego-ries, and CCRs correspondingly as partially in-stantiated local trees.All Boolean expressions can be written in con-junctive normal form ,?NF), i.e.
as a conjunctionof disjunctions of li~erals (positive or negatedatomic expressions).
Expressions in CNF are inturn equivalent to clause sets, i.e.
sets of suchdisjunctions.
Given this uniform representationfor linguistic items and grammatical statements,i t  should come as no surprise to see unification,the principal operation of unification grammar, beclosely identified with resolution as introducedby Robinson (1965) for automatic theorem proving.Nevertheless, no previous version of unificationgrammar has to my knowledge taken just this step.The proposed operation differs somewhat fromresolution.
While the resolution of the clausesets {P} and {~P v Q} yields the resolvent( Q~, their unification in this sense produces( P, Q \ ] .
Some examples of such resolution-basedunification wil l  be useful at this point:(4) C I = { f1 :v l ,  (--f2:v2 v f3:v3) )c2:  { f2 :v2}c a : {fa:va }C 4 = {f2:v2 w f4:v4~;: {f2:v4 }c I U c 2 : { fl= {flc I U c 3 : {fl= {fl:v I, f2:v2, (,,true v f3:v3)}:v I, f2:v2, f3:v3 }:v I, f3:v3, (~f2:v2 v true)}:v I, f3:v3 }C I U C 4 = {f1 :v l ,  (f3:v3v f4:v4)}Note that for any two atomic values a I and a 2,the unification a I U a 2 succeeds i f f  a I : a2.Given (4) above, i f  v 2 II v 4 succeeds (whether v 2and v 4 are atomic or complex), then the unifica-tion C 2 U c 5 : { f2 : (v2  U v 4)} succeeds; i fv 2 U v 4 fai ls,  then C 2 Ll c 5 also fai ls.
The uni-fication C I U C 5 has three cases:(5) C I U C 5 = { f1 :v l ,  f2:v4, (~,true v f3:v3)}= ~f1:vl, f2:v4, f3:v3i f  v 2 I I  v 4 succeeds and v 4 is anextension of v 2C I U C 5 = { f1:vl, f2:v4, (,~f2:v2 v f3:v3)}i f  v 2 U v 4 succeeds and v 4 is notan extension of v 2157C I U C 5 : {f1:vl, f2:v4, (~-false vf3:v3)}: {f1:Vl, f2:v4 }i f  v 2 U v 4 fai lsFUG employs two special values, ANY and NONE,which unify with any and no other value, respec-t ively.
With the adoption of negation in the form-alism, ANY and NONE emerge in the following dualrelationship:(6) ~f :  ANY ~ f: NONE (Def.
)-~f :  NONE ~ f: ANY (Def.
)ANY and NONE may be used in GPSG to express thecondition that a feature must or may not receive avalue.
Shieber (1985: 32) notes that ANY consti-tutes a nonmonotonic device in the formalism,since final representations must not contain occur-rences of ANY.
In our terms, final representationsmust not contain negation or disjunction, i .e.
,they must be sets of unit clauses, each of whichis a nonnegated l i teral .
Since the logic uponwhich this formalism is based is monotonic, how-ever, the essential monotonicity of the formalismis preserved.GPSG goes a step further and introduces FeatureSpecification Defaults (FSDs), which are a patent-ly nonmonotonic device based on default logic.This paper proposes banning them from the formal-ism for the time being.
Some of the particularFSDs formulated in GKPS for English appear ques-tionable under different analyses (cf Kilbury1986).
This is notto deny that default statementsmay capture significant generalizations about lan-guage.
But why, then, should defaults be confinedto the statement of restrictions on categories?I t  may be methodologically advantageous to f i r s tdevelop a more homogeneous and coherent formalismfor GPSG without strongly nonmonotonic devices.I f  default logic later s t i l l  appears desirable ontheoretical inguistic grounds, then i t  can be re-introduced in a more principled fashion allowingdefault statements at all levels of linguisticdescription where i t  is useful.The posit ion of Linear Precedence (LP) state-ments in th i s  formalism must now be c la r i f ied .
I twas stated above that CCRs are formulated usingthe two pr imi t ive  predicates R(~, t )  '~  is theroot of local tree t '  and D(~, t )  '~ is a daugh-ter  in local tree t ' .
This is not quite adequatesince d i f fe rent  daughters in a local tree may betokens of the same category.
Let us replace0(~, t )  with 0(~, i ,  t ) ,  interpreted as '~t is thei - th  daughter in local tree t ' .
A local tree twith VP as root and V, NP, and NP as daughters ( inthat order) can now be represented with the fo l -lowing set of un i t  clauses:(7) {R(VP,t), D(V,I,t), D(NP,2,t), D(NP,3,t)}Likewise, the LP statement ,t < S '~ may notprecede ~ in any local tree t '  (where '<' denotesthe LP relationship) may be reformulated in a log-ical expression (using '( '  for arithmetic compari-son) as follows:(8) Vt: ( 0(~., i, t) ^ D(B, j ,  t)) ~ i< jThis, in turn, can be represented as a set con-taining one clause:(g) i, t) v ~D(a, j, t) v ( i< j ) )}I f  arithmetic comparison ' ( '  is now added tothe primitive predicates allowed in CCRs, then LPstatements become simply a special case of CCRs;they are applied to local trees by resolution-based unification with the representations of thelatter.The principle of cooccurrence restrictions canbe further generalized in a final step.
GPSG de-scribes linguistic items and their distributions.Local trees are arrangements of categories, whichin turn are arrangements of feature specifica-tions; the latter are themselves items consistingof a feature name and a feature value in an ar-rangement.
The formal devices already introducedallow us to state cooccurrence restrictions gov-erning the combination of features and values infeature specifications; the definition of thevalue range of a feature can thus be regarded asanother special case of cooccurrence restriction.In summary, the essential contribution of thispaper lies in its generalization of the notion ofcooccurrence restriction.
Many of the distinctformal devices of GPSG as presented in GKPS can beeliminated without an apparent loss of expressivepower, and the resulting formalism gains both insimplicity and homogeneity while preserving essen-t ia l  properties of the GKPS formalism.
Likewise,the uniform representation of cooccurrence re-strictions and linguistic items allows a new in-terpretation of unification which is promising inits own right and which should faci l i tate the com-parison of GPSG with other unification-based gram-mar formalisms.
Parallels to other linguistic ap-proaches, both more and less distant, should beevident.
Similarities to American structuralismare neither accidental nor unintentional.
In re-gard to his own proposals for unification,Karttunen (1984: 31) remarks that "the problemsthat arise in this connection are very similar tothose that come up in logic programming."
Indeed,many questions involving the equivalence of nota-tions and of computational problems are raisedthat must be addressed in future studies.REFERENCESGazdar, G. / E. Klein /G.
Pullum / I.
Sag (1985):Generalized Phrase Structure Grammar.
Blackwell:Oxford.Gazdar, G. / G. K. Pullum (1985): "ComputationallyRelevant Properties of Natural Languages andtheir Grammars," New Generation Computing 3:273-306.Karttunen, L. (1984): "Features and Values,"Pro-ceedings of COLING 84, 28-33.158Kay, M. (1984): "Functional Unification Grammar:A Formalism for Machine Translation," Proceed-ings  of COLING 84, 75-78.Kilbury, J.
(1986): "Category Cooccurrence Re-str ict ions and the Elimination of Metarules,"Proceedings of C05ING 86, 50-55.Robinson, J.
A.
(1965): "A Machine Oriented LogicBased on the Resolution Principle," J ourna l  o fthe ACM 25: 23-41.Shieber, S. M. (1985): An Introduction to Unifica-tion-Based A@proaches to Grammar.
CSSI: Stan-ford, California.Shieber, S. M. (1986): "A Simple Reconstruction ofGPSG," Proceedings of COLING 86, 211-215.159
