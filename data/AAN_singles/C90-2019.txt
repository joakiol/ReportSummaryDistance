Generating French with a Reversible Unification GrammarDominique EstivalISSCO54 rte des Acacias, CH-1227 GenevaO.
Intr~cluctionIn this paper, we describe the linguistic solutionsto some of the problems encountered in writing areversible French grammar.
This grammar is pri-marily intended to be one of the components of amachine translation system built using ELU, 1 anenhanced PATR-II style unification grammar linguis-tic environment based on the LID system described inJohnson and Rosner (1989), but it is also part of ourmore general experimentation with fully reversiblegrammars.The requirement that it be reversible imposes astringent criterion of linguistic adequacy on a gram-mar, siuce it is not allowed to overgenerate while itmust at the same time provide a large coverage foranalysis (Dymetman and IsabeUe (1988)).
Formally,grammars that are fully reversible must be completelydeclarative, since no reierence can be made in thegrammar rules to the process (analyzer or synthesizer)which will use them.
The unification formalismmakes itt possible to write such grammar statements,because due to the associativity and commutativity ofthe unitication operation, the result of unifying featurestructures i  independent of the order in which theyare unitied (Appelt (1989)).Writing reversible grammars, however, presentsproblems which do not arise in the traditional gram-mars used for either analysis or generation.
In addi-tion, the progress accomplished recently in buildinggenerators for unification grammars has alreadyrevealed some of the problems posed by unification-based reversible grammars.
2 As shown by Russell etal.
(1990), even though the grammar rules do not referto the generation process, the generation algorithmimposes particular constraints on the grammar formal-ism.
3This paper concentrates particularly on the prob-lems encountered in the generation of French,specifically in the analysis to be given to clitics.1 ELU stands for Environnement Linguistiqued' Unification.2 See Dymetman and Isabelle (1988), Shieber (1988),Shieber et al (1989), van Noord (1988), inter alia.3 For instance, we cannot compare our grammar with theone pre~;nted in Saint-Dizier (1989), since his grammar is nei-ther reversible nor purely declarative, as the rules are annotat-ed with ' generation points'.We first briefly describe the aspects of the genera-tion algorithm and of the grammar formalism whichare relevant o the particular problems under discus-sion, then present he facts of French syntax whichpose those problems and the solutions we haveadopted.1.
The GeneratorThe generation algorithm of ELU is based on thealgorithm described in Shieber et al (1989) and wasdeveloped at ISSCO by J. Carroll.
4 Generation ishead-driven: each role has a "semantic head" (seeShieber (1988)), which is specified by the ~ammarwriter, and the head daughter of a rule is generatedbefore its siblings.
The depth-first algorithm defines adownward path through the semantic heads of rules.This algorithm does not require that the grammarbe semantically monotonic.
Non-monoto\]tficity isobtained by having the generator distinguish two typesof rules in the grammar, "chaining" arKl "non-chaining" rules, and by introducing the notion of"pivot".
Following from this distinction, it employsboth bottom-up and top-down processing.The partition of the set of grammar ules intochaining and non-chaining rules is pre-compiled fromthe specification of what counts as the "semantics" ofa feature structure.
In a chaining rule, the mother andthe head daughter have identical semantics; chainingrules are used bottom-up from the "pivot", which isdefined as the lowest point in the path through thehead daughters of chaining rules at which the seman-tics of the feature structure remains unchanged.
In anon-chaining rule, the mother and the head daughterhave different semantics; non-chaining rules are usedtop-down from the pivot.The efficiency of the ELU generator depends in alarge part on the restrictors defined by the grammarwriter.
Computing the pivot, i.e.
creating ateachabil-ity table for chaining rules, and bottom-up rocessing4 Cf.
Russell et al (1990) for a description of the dif fer-ences  between the two algorithms.106 1are both controlled by pre-compiled "linking" inforomation, which is encoded as sets of restrictor values.A restrictor is a specification of a value wlfich can becomputed from a feature structure (syntactic ategory,for example, is often defined as a resUictor).
Beforeattempting unification between two feature structures,the values tbr the restrictors are checked in both ofthem; if these values are not compatible, uniticationwould be bound to fail mid is not tried.
As linkinginformation is only relevant for chaining rules, it isonly used bottom-up during processing, ~md since bydefinition, chaining rules have the same semantics fortheir heads, linking information must be syntactic.Restrictors are also used heavily m the selection oflexical items, so the attributes chosen as restrictorshave to be good discriminauts between i~ature struc-tures.
5"Ihe generation algorithm by itself guarantees nei-ther the completeness nor the coherence of tile result-ing feature structure.
The responsibility tbr prevent?ing the generation of structures which unify with theinput, bu~ me incomplete (i.e.
ensuring completeness)rests with the grmnmar writer: any structure whichneeds to be generated in its entirety should not berepresented as an uncotx~trained ti~ature structure, butmust be specified as another data type, i,e.
a list, atree, or a user-defined type expression.
Tt~e graulmarwriter and the generator share tile responsibility forpreventing additions to the input structure (i.e.preserving coherence): the gramm~ writer mustagain select the appropriate data types, and the gen-erator "tTcezes" uninstantiated variables that occur inthe input.The choice of appropriate data types as well as ofgood restrictors i  therclore crucial to ensure flint thegrammar is not only efficient but usable in generation.2.
The G, rammar Formalism.The syntactic ieplesentations built by file parserare trees where each node is a directed acyclic graphconsisting of atuibute-value pairs (i.e.
a feature struc~ture which allows reentrancy).
'File semanticrepresemations u ed ~s input by the generator arefeature structures derived from the syntactic trees.The gr~unmar rules consist of context-free phrasestructure rules annotated with corrstraint equatiotrsexpressing relations between the categories mentionedill the rule.
The ELU tormalism provides a generali-zation of the template facility of PATR-II, the "rela-tional abstractions", which are statements abstractingover sets of constraint equations.
These statements5 Restrictors are also used to restrict the search space inparsing (see Shieber (1985)).
"fbe use of linking informationin generation was first proposed by van Noord (1988).may receive multiple and mcursive definitions.
Togive multiple definitions to a relational abstractionpermits collapsing what i~l an unextended PATR-Iikeformalism would be several distinct rules, and is apowerful way to capture linguistic generalizations.Multiple definitions, however, give rise to a highdegree of non-determinism during processing.
There-fbre, while the parser expands multiple definitionswhenever they are encountered, the generator uses alazier approach and only expands them when they areneeded.
Nevertheless, tiffs strategy is not sufficient,and the problem posed by the non-determinism ofrelational abstractions is the most complex and severeof the grammar/generator interactions described inRussell et al (1990), because of its adverse ffects onthe restliclion of top-down generation.3.
French CriticsAny French gr~wnmar must account for the posi-tion aid ordering of preverbal clitics.
While full com-plement aud modifier ptwases occur to tile right of themah~ verb of a clause, up to three elitics may occur infront of a verb, as in (1).
(1) 11 m'y en a fait p,'u-t.he me there of it informedHe infot~ned me of it there.Moreover, tile clitics must appear in a fixed order,which, as shown ill (2), is independent of the seman-tics of the critics.
(2) a. Ils vous l'y ont dolm~e.they to you it there gaveThey gave it to yott there.b.
*Ils leur l'y ont dotm6e.they to them it there gave77wy gm, e it to them there.This f~ed order can be represented by the traditionaltable given in (3).
6(3) Ordering of French diticsme le lui y ente la leurse lesnousvousin most accounts of the distribution shown in (3), tileproblem is simplified, because only subcategolizedcomplements are de'tit with.
A French preverbal eli-tic, however, is not necessarily a subcategorized com-plement of the verb; adverbials and parts of comple-ment phrases can also cliticize, and the grammaticalcategory of some clitics is that of adverbs or6 In (3), se  stands for any of the so-called 'R-clitics', i.e.the reflexive and reciprocal pronouns, as well as the inherentreflexive ~md the middle marker, as explained in more detailbelow.2 107quantifiers.The contrast between (4.a) and (4.b) shows that aclitic can be either a full complement, or part of acomplement.
In (4.a), en is the full prepositionalobject of the verb parler, while in (4.b), en representsthe partitive prepositional phrase which is the comple-ment of the object of vouloir.
(4) a. I1 en parlait souvent.he often talked about it\[cf.
I1 parlait souvent de ce Uvre\]\[he often talked about that book\]b. J' en veux deux.I want two of them\[cf.
Je veux deux de ces pommes\]\[I want two of these apples\]The contrast between (5.a) and (5.b) shows that a eli-tic can either be subcategorized or not.
In (5.a), y isthe subcategorized complement of the verb aller,while in (5.b), y is a locative adverb, which is not sub-categorized by the verb dormir.
(5) a. I1 y aUait souvent.he often went there\[cf.
I1 allait souvent dans cette ville\]\[he often went to that city\]b. I1 y dormait souvent.he often slept there.\[cf.
I1 dormait souvent dans cet hdtel\]\[he often slept in that hotel\]Besides the personal pronouns and the adverbsgiven in Table (3), there are other lexical items whichare not usually considered in the treatment of Frenchclitics, but whose behavior is closely related.
7 Thenegative elements pas, plus, jamais, rien, and thequantifiers tant, autant, plus, moins and tout 8 also cli-ticize and may appear preverbally.While ,all the clifics of Table (3) must appear infront of the traditional AUX constituent (i.e.
beforeany of the verbal elements of the VP), the examples in(6) slhow that the elements of this second set appearinside AUX, more precisely after the first tense-bearing verbal form.
(6) a. I1 n'en avaitjamais 4t6 persuad6,he had never been sure of itb.
I1 n' en avait jamais rien cru.he had never believed any of itc.
Je n'y en ai jamais autant vu.I had never seen so many of them there7 They are, however, the subject of work in theoreticallinguistics, see e.g.
Perlmutter (197l), Emonds (1975), Kayne(1975), and more recently Pollock (1989).
Interestingly,though it was developed in a different framework and for dif-ferent reasons, our treatment of those elements is compatiblewith the latter's analysis (cf.
also fn.9).8 The quantifier tout has actually several forms, inflectedfor gender and number: tout/tousltoute/toutes.There are thus at least two slots for clitics inside aFrench VP, and neither of these slots correlates withargumenthood.
The quantifiers rien and autant whichappear inside AUX in (6.b) and (6.c) are (paJtts) of theargument of the verbs croire and voir, and so is thequantifier en, which is in front of the AUX.
On theother hand, the adverb y is not an argument in (6.c),nor is jamais in (6.a-c).Therefore, the lexical entry of every clitic elementmust specify not only that it is a clitic but whether itappears in front of or inside the AUX constituent.4.
GenerationTheoretically, the fundamental problem posed byclitics stems from their dual nature, syntactic' and mor-phological, and partly consists in deciding whether totreat them by syntactic or by morphologicalprocesses.
9Descriptively, there are three issues to beaddressed: argument-binding, linear ordering rela-tior~s, and categorial status of the clitics.
All threegive rise to problems in generation due to non-determinism, for which the solution is to ensure thatthe lexical verb is instantiated assoon as possible.4.1.
SubcategorizatlonThe unification formalism makes it very natural toencode syntactic information i  the lexicon and with alexicalist approach, our treatment of arguments isstraightforward: we make the standard use of a sub-categorization list to encode the complements a verbrequires.
Since any complement phrase may be real-ized as a clitic, this fact is not mentioned in the sub-categorization list.
to9 E.g., restrictions on coordination show that clitics are notindependent syntactic onstituents.
(i) * I1 me et te connait.he knows me and youCf.
the various analyses presented in Borer (1986).
More re-cently (Rizzi and Roberts (1989), Kayne (1990)), the questionhas been reformulated in terms of the type of mechanism (ad-junction or substitution) involved in cliticization and ofwhether clitics are phrasal heads or not.
With the lexicalist ap-proach adopted in our grammars both types of processes canbe referred to in the lexicon, but it is of course still desirablethat the two be clearly separated.l0 This analysis contrast with that of Baschung et al(1987), or B6s et al (1989), which treats separately comple-ments appearing to the left and complements appearing to theright of the verb.
Their reason for doing so is that they takethe variants hown in (i) and (ii) to indicate a relatively freeorder of complements (sulx-ategorized or not) in French.
(i) il a donn6 (hier) un livre ~t Marie (hier).yesterday he gave a book to Marie(ii) il a donn6 (hier) ?l Marie un livre (bier).yesterday he gave a book to MarieWhile the ordering of full complements inside the VP posessome problems for generation, it is a separate question fromthat of cliticization, and the two should receive principledsolutions of their own.108 3During analysis, art element found in the VP ischecked against Subcat, the subcategorization list ofthe predicate.
If it does not unify with any element ofSubcat, ~t is treated as a VP modifier and added toMods, the list of modifiers.
From the point of view ofgeneration, clitics realize elements from either theSubcat list or from the Mods list.For instance, we partly follow the lexicalistanalysis of Grimshaw (1982) for the R-cliticsrepresented by se.
That is, we consider that the R-clitic is not an argument of "iuheienfly reflexive"(7.a,b) and "middle" verbs (7.c), but a morpho-syntaclic marker, t i(7) a. i~1 s'est 6vanoui.he faintedb.
I1 se le demandait.he was wondering about itc.
II s'est cassd.it brokeBut in reciprocal and true reflexive constructions, suchas (8.a,b), we treat the R-clitic as a pronoun which isan argument of the verb.
12(8) a. Ils se sont regardds.they looked at each other~themselvesb.
Ils se les sont donnds.they gave them to each other~to themselvesThereibre, because the verbs in the examples of (7)are marked in the lexicon as being iitherentlyreflexive, an R-clitic is generated from Subcat withoutbeing bound to the list of semantic arguments.
In (8)on the other hand, the verbs are respectively transitiveand ditransitive: in their case, a semantic argument isboth bound to ,an element of Subcat and re,alized as areflexive pronoun because of its own semanticfeatures.
In (9.a-c) se is, as in (7), the inherentreflexive marker mid is generated from Subcat.
In(9.a) en is the partitive phrase of a subcategorizedargument; y in (9.b) is a subcategorized locative argu-ment from Subcat and in (9.c), it is a VP adverb fromMods.
(9) a. I1 s'en est cass6 deux.two of them brokeb.
Ils s'y trouvaient.they were therec.
lls s'y vendaient.they were soM thereAs described in Russell et at.
(1990), problemsarise iin generation because of non-determinism andbecau~e of the unavailability of some syntactic infor-mation to the generator.
The subcategorization listII In (7.a), there is no non-reflexive verb e~'anouir, and in(7.b), die reflexive verb has a different semantics than thenon-reflexive verb from which it is lexically derived.12 In this respect, our analysis also differs from thatpresented in Wehrli (1986).mechanism typical of unification grammars i a sourceof both these kinds of problems.
Subcategorizationlists are relational abstractions with multipledefinitions; therefore, they introduce non-detenninismin tile expansion of the rules in which they areinvoked.
Moreover, they exemplify the type of synotactic information typically found ill lexical entries;tiffs infommtion is not available to the generator untilthe lexical head has been instantiated, but if it wasavMlable at a higher point in the path through the rulesit would help constrain the top-down search.In particular, here, separating the elements foundinside the VP into arguments and modifiers can onlybe (lone alter the lexical head has been instantiatedmid its subcategorization list is available.
As shownby the two meanings of the verb trouver given in thelexical entries (10.a,c) and exemplified in (10.b,d), thesemantics of the verb (its argument list) may changeaccording to its subcategorization list.(10)a.
trouver * v {+UN}!Verb Imain !avoir ~Nrefl !trans!Subcat(np,np)b. I1 l' y trouve.he finds it there\[cf.
II le trouve dans les Alpes.\]\[he finds it in the Alps\]c. trouver * v {+UN)!Verb !main !~tre IRefl !intrans!Subcat(np,pp) !PPsem(loc)d. I1 s'y trouve.it is located there\[cf.
I1 se trouve dans les Alpes.\]\[it is located in the Alps\]In (10.d) the clitic y is ,an argument (i.e.
it is bound toone of the variables in the arguments list), while in(10.b) it is not (i.e.
it is added to the modifiers list).Even though the two possiblities ,are mutuallyexclusive, if the subcat list is not available at the VPlevel, the search must proceed top-down and tim VP isexpanded top-down and non-deterministically.
Recallthat when the semantics for the head daughter of arule does not change, the rule is a chaining rule whichis used bottom-up, but if the semantics of the headchanges, then the rule is a non-chaining rule, which isused top-down and defines a pivot.4.2.
Linear orderingAs was shown by the examples of (2), the linearordering among preverbal clitics is independent oftheir semantics; it is also independent of the syntacticfeatures of their dominating clause, i.e.
negation,inversion, etc, A perspicuous way to express citricordering is to have one relational abstraction withseparate definitions tating the different precedenceconstraints holding between two preverbal clitics.The simplified definitions for Precede(C1,C2) givenin (11) would account for most of the distribution4 109facts of Table (3) in a natural and elegant way.
13(11) Precede(C 1 ,C2)<C1 head morph pers> = 1/2<C2 head morph pers> = 3Precede(C1,C2)<C1 head morph case> = acc/refl<(.
'2 head morph case> = datPrecede(C1,C2)<C1 head morph case> = refl<C2 head morph case> = acc\]datPrecede(C1,C2)<C1 head sem pred> = y<(~ head sem pred> = en4.3.
Categorial statusA characteristic property of clitics is that they donot have a maximal projection and remain X ?
consti-tuents, with their own syntactic ategory feature com-ing from the lexicon.
To express the fact that a dativepronoun or the clitics y and en actually stand for a PPcan be done by building a PP in the lexicon, e.g.
witha relational abstraction such as Make-PP(CI,PP).
(12) Make-PP(CI,PP)<CI head sem pred> = "y/en<CI head morph case> = dat<PP head sere pred> = ~t<PP head sem args> = \[<CI>\]Make-PP(CI,PP)<CI head sem pred> = y<PP head sere pred> =<PP head sem args> = \[<CI>\]Make-PP(CI,PP)<C1 head sem pred> = en<PP head sere pred> = de<PP head sere args> = \[<CI>\]The relational abstractions Precede and Make-PPconstitute an elegant collapsing of syntactic and lexi-cal rules which is useful in analysis: the grammarrules which rewrite VPs containing clitics need notspecify all the various possibilities.
However, as withthe relmional abstractions encoding subcategorizationfacts, its multiple definitions render Precede non-deterministic.
The non-determinism of Make-PP,which is due to the fact that some clitic forms areambiguous, is no less severe.
During generation, theevaluation of the equations is delayed until the seman-tics for the head has been instantiated, and if the lexi-cal head is not instantiated early enough, rules whichinvolve these relational abstractions are tried repeat-13 There are other constraints not accounted for by (11),e.g.
the one requiring that an ambiguous acc/dat form cannotbe interpreted as an accusative in front of a dative:(i) ,k Elie nous lui prdsentera.she us to him will introduceSimilar constraints exist among the clitic elements appearingin post-verbal position.edly even if they cannot apply.In conclusion, for the purpose of generation, weneed an analysis where the semantic head of the VP isnot necessarily the lexical main verb, but is the ele-ment which will be sure to be instantiated as early aspossible.
In an analysis reminiscent of current workin the Government-Binding framework, 14 where aclause is IP (Inflectional Phrase), the maximal projec-tion of INFL, we take as the semantic head for ourrules the element which bears tense.
This element, Imay be either the main verb or an auxiliary whichtakes the main verb as complement.With this analysis of the structure of VP, thesemantics of the head daughter I remains the samealong the path through the semantic heads so that thepivot of the structure, i.e.
the point at which bottom-up generation can start from, is at the end of path.
Atthat point, either I is the main verb (V-raising hasapplied) and it can be instantiated immediately, or I isan auxiliary (V-raising hasn't applied) and the mainverb is its sister, which can be reached through otherchain rules.We can deal with clitics in two ways:?
by successive adjunction to the head:(13) TP/ \e l  TP/ \c l  TP?
by building a list, itself adjoined to the head:(14) TP/ \CL TP/ \c l  c lBesides being descriptively more adequate, since theordering constraints hold between the clitics them-selves, not between a clitic and a verbal constituent,the second approach is to be preferred because a listensures completeness of the resulting feature struc-ture.
Moreover, the whole list of clitics can he builtwithout instantiating the lexical verbal head.
With thetwo clitic positions and taking I as the head, the syn-tactic structure for a VP is as in (15).
(15) T\]?/ \CL TP/ I \I CL  V2/ \verb  .
.
.14 Cf.
fn.6 and 9, and work cited in the references giventhere.5 I i0Clitic elements are marked as to whether theymust appear to the left or to the fight of I.
If V-raisinghasn't applied, as in the examples of (6), the two criticlists will be in front of the main verb, on either side ofI.
If V-raising has applied, the two clitic fists will stillbe on either side of I, and of the main verb, as in (16).
(16) a. I1 ne l'en persuaderajamais.he will never convince her of itb.
I1 n' en croit jamais rien.he never believes any of itc.
Je n ' y en voit jamais autant.I never see so many of them there5.
Conch~slonWe have shown with die example of French cliticshow some problems inherent in the writing of reversi-ble grammars arise, ~md what aspects of the formalismare responsible for them.
The solutions we proposeare motivated by internal considerations ,and providesa coherent syntactic account of the phenomena underconsideration, i.e.
clitic placement and so-called"adverb climbing" (although space prevents us fromshowing tile details here, riley also deal adequatelywith vefibal negation).
These solutions make full useof the properties and adwmtages of die lexicalistapproach to gr,'unmars while circumventing (some of)the dange~ it presents.
** I ,'un grateful to Susan Warwick and GrahamRussell for the time they have spent helping me under-stand EHJ  and its generator.
Neither of them, ofcourse, is responsible for any mistake in this paper.RefeFencesAppelt, D. (1989).
"Bidirectional Grammars and fileDesign of Natural Lmlgaage Systems".
In~ITteoretical issues in natural anguage processing,edited by Y. Wilks.
Hillsdale: Lawrence ErlbaumAssociates.Baschung, K, G. B~3s, A. Corluy a/ld T. Guillotin(198'7).
"Auxiliaries and Clitics in French UCGGrammar".
In Proceedings of the Ttffrd Cor~'eroence of the European Chapter of the Associationfor Computational Linguistics, Copenhagen, pp.173-178.B~s, G. and C. Gardent (1989).
"French Orderwithout Order".
in Proceedings of the FourthConference ofate European Chapter of' the Assoociation for Computational Linguistics, Manches-ter, pp.
249-255.Borer, H. (1986).
ed.
The Syntax of Pronominal Cli-tics, Syntax and Sem~mtics, vol.19.
AcademicPress.Dymetman, M. and P. Isabelle (1988).
"ReversibleLogic Granlmars lor Machine Trar~slation".
InProceedings of a~e Secure1 International Confer-ence on Theoretical and Methodological Issues inMachine Translation of" Natural Languages,Carnegie-Mellon University, Pittsburgh.Emonds, J.E.
(1975).
"A transformational analysis ofFrench clitics without positive output constraints".Linguistic Analysis, 1.
3-24.Grimshaw, J.
(1982).
"On the lexical Representationof Romance Reflexives".
In The MentalRepresentation f Grammatical Relations.
exlitedby J. Bresnan.
Cambridge: MIT Press, pp.87-148.Johnson, R. and M. Rosner (1989).
"A rich environ-ment for experimentation with unification gram-mars".
In Proceedings of the Fourth Conferenceof the European Chapter of the Association forComtmtational Linguistics, Manchester, pp.
182-189.Kayne, R. (1975).
French Syntax'.
Cambridge: MITPress.Kayne, R. (1990).
Seminar.
University of Geneva.van Noord, G. (1988).
"BUG: A Directed Bottom UpGenerator for Unification Based Formalisms".Dept.
of Linguistics, Trans 10, Utrecht University.Perlmutter, D. (1971).
Deep and Surface StructureConstraints in Syntax.
New York: Holt, Rinehartand Winston.Pollock, J.?Y.
(1989).
"Verb Movement, UniversalGrammar and the Structure of IP".
LinguisticInquiry, 20.3 pp.
365-424.Rizzi, L. and I. Roberts (1990).
"Complex Inversionin French".
Probus, vol.l.1, pp.
1-30Russell, G., S. Warwick and J. Carroll (1990).
"Asymmetry ill Parsing and Generating withUnification Grmnmars".
to appear in the Proceed-ings of the 28th Annual Meeting of the Assockltionfor Computational Linguistics, Pittsburgh.Saint-Dizier, P. (1989).
"A Generation Method Basedon Principles of Government-Binding Theory".
inProceedings of the Second European NaturalLanguage Generation Workshop, Edinburgh.Slfieber, S. (1985).
"Using Restriction to Extend Pars-ing Algorithms for Complex-Feature-Based For-malisms".
In Proceedings of the 23rd AnnualMeeting of the Association for ComputationalLinguistics, Chicago, pp.
145-152.Shieber, S. (1988).
"A Uniform Arctfitecture for Pars-ing and Generation".
Proceedings of the 12thInternational Conference on ComputationalLinguistics, Budapest, pp.
614-619.Shieber, S., van Noord, G., R.C.
Moore and F.C.N.Pereira (1989).
"A Semantic-Head-Driven Gen-eration Algorithm for Unification-Based Formal-isms".
In Proceedings of the 27th Annual Meetingof the Association for Computational Linguistics,Vancouver.Wehrli, E. (1986).
"On Some Properties of FrenchClitic Se".
In Borer (1986).111
