Island Parsing and Bidirectional ChartsOliviero STOCK (~*)Rino FAI~CONE (*'Y")Patrizia INSINNAMO ('a.
)( ~ ) Istituto per la Ricerca Scientil~ca e Tecuologica, 38050 Povo, Trento, Italy(*) Istituto di Psieologia-Consiglio Nazionale delle Ricerche, Rome, Italy(%) Fondazione Ugo Bordoni, Rome, ItalyAbstractChart parsing is directional in the sense that it worksfrom the starting point (usually the beginning of thesentence) extending its activity usually in a rightwardmanner.
We shall introduce the concept of a chart thatworks outward from islands and makes sense of as muchof the sentence as it is actually possible, and after that willlead to predictions of missing fragments.
So, for any placewhere the easily identifiable fragments occur in thesentence, the process will extend to both the left and theright of the islands, until possibly completely missingfragments are reached.
At that point, by virtue of the factthat both a left and a right context were found, heuristicscan be introduced that predict he nature of the missingfragments.1.
IntroductionThe goat of using "high level" knowledge sources inrecognizing continuous speech is to reduce the hypothesesspace generated by acoustic-phonetic analysis (andpossibly to implement an interpretation of the utterance)(see for instance Walker 1976, Stringa 1988).
Deeodifyingthe vocal signal is a process that must take into accountphenomena such as the eoarticulatory processes typical ofcontinuous peech and the presence of many sources ofvariability of the signal (anatomic haracteristics of thespeaker, emission speed, prosody and so on).
Thesephenomena have as a consequence the fact that, at thelevel of aco.ustic-phonetic analysis, it is extremelyuncertain how to segment he signal and what labels togive to the segments.
Therefore acoustic-phonetic analysisgenerates a space of possible interpretative hypotheses ofthe signal; in general, the likelihood of each lexicalhypothesis is given a score.
A matr ix of lexicalhypotheses i  provided by the lower level processes.
Eachhypothesis i  characterized by: a) the hypothesized stringthat was recognized; b) the score of this hypothesis; c) thetime interval that this hypothesis spans.
We consider twodif ferent thresholds for the l ikel ihoods: the wordhypotheses with score above the higher threshold are to he/considere~ "very reliable", and their role will be to drivethe process.
The word hypotheses with score between thetwo thresholds will be included in the analysis without a636driving role, while the word hypotheses below the lowerthreshold are not to be considered, at least in the firstpass.
This work is about parsing with the aboveconstraints.
In this connection it seems advantageous toanchor the recognizing process to those hypotheses thatwere given a high score.
As we shall see, there is also apredictive aspect in our approach: this means that theparser will tell the lower level component to "do its best"to find in the given place an instance of what waspredicted.
In the simplest case we can think of a directrecovering of a word hypothesis with score below thelower threshold.
Our starting point will be a very wellfounded technique, that has also been experimentallyproved as valid, namely chart oarsinmChart parsing works very well with well formed input,but the technique was not conceived for working with anuncertain input, and even worse, with a fragmentaryinput.
Chart parsing is directional in the sense that itworks from the starting point (usually the beginning ofthe sentence) extending its activity usually in a rightwardmanner.
We shall introduce a different concept, thatnonetheless will work with the same linguistic data.
Theconcept is that of a chart that works outward from islandsand makes sense of as much of the sentence as it isactually possible.
Furthermore, where the signal was justnot detected, predictions can be made on the basis of theconfiguration and of a set of heurist ics.
After theapplication of these heuristics, and the introduction of newlow level hypotheses, the algorithm works on in the sameway and if the situation was not unrecoverable concludeswith one (or more) complete analysis of the sentence.It is worth noting that the proposed solution helps also indealing with ill-formed written input.
There is somethingmore to it: in the general treatment we are giving in thispaper we shall refer only to a grammar coded in thetraditional form of rewriting rules, but the mechanism canwork with a large number  of formal isms.
Somecontemporary linguistic theories emphasize the role ofparticular words that play the role of head of a constituent(e.g.
a noun in a noun phrase).
As a matter of generalparsing strategy it seems very interesting to couple thelocalization of the pivot with an island mechanism thatguarantees local control of the process in all directions.2.
Chart  pars ingChart parsing is a very powerful idea for parsing naturallanguage.
It was introduced by Martin Kay \[1973, 1980\]and Ronald Kaplan \[1973\] and historically was inspiredby Earley'r.
algorithm \[1970\].
The most basic goal inintroducing the chart was to reduce the complexity of anondeterministic parsing algorithm.An advantage of chart parsing is that the mechanism isperfectly suited for both bottom-up and top-down parsing.A fur ther  advantage is that  the chart  can becomplemented with an agenda.
In this way, instead ofintroducing new edges following the rigid application ofthe algorithm, tasks can be added to the agenda nd atevery moment a scheduling function can decide the orderin which tasks  shou ld  be executed ,  in amultiprogramming fashion.
Very easily the schedulingfunction can implement depth-first control and breadth-first control, but any kind of control can in principle beinserted \[see for instance Stock 1987\].Also, a particular point is that the input relation withother levels of analysis is very coherent: lcxical ambiguityresults in the very simple fact that more than one inactiveedge are introduced for an mnbiguous word.3.
BidirectionalityChart parsing has a positive aspect and some evidentproblems in facing speech recognition.
Typical ofcontinuous speech recognition are the following aspects:1) The separation between words is not univocally given;one of the tasks of the sentence parser is exactly to yieldsuggestion:3 for word separations.
In the chart this can bevery well accomplished introducing more vertices, one forevery hypothetical separation point.
Vertices must beordered and ordering here is provided by the time orderrelation.
Therefore we can introduce a vertices tructure2) Some words in the input matrix are anchored as"surely" recognized while others are only very tentativeinterpretat ions.
It makes sense that the analys isprivileges elements of the first type as starting points.This is the concept of island parsing, for which the parsertries to make sense of portions of a sentence starting fromfixed points (islands), that can occur in any position.
Thetraditional chart mechanism cannot deal with this task.3) Island parsing is required to get to the extreme bordersof the recognizable fragments, and from that situationhelp in making suggestions for the unrecognizedfragments based on both the left and the right contexts.IIere again the traditional chart mechanism cannot dealwith this task.We are now going to introduce a new concept:bidirectional charts.Data structures must be rearranged in this connection andthe whole parsing process will be different: things getcomplex if one wants to preserve the good qualities ofcharts and be reasonably efficient.We begin with redifining active edges.An active edge here is a data structure that includes twopositions in the rule involved : an initial position and afinal position, such that a fragment is covered by thegiven edge in reference to a ti'agmeut ofthe right bandsideof the rule.Therefore an active edge is characterized by from, the leftvertex, to, the right vertex, rule, the referred rule,fromposition, the first of the two positions in the rule,toposition, the second of the positions, and sub-inactives,the list of the immediately spanned inactive edges thatwere included.Inactive edges are characterized asusual, by from,to andcat, the category.Let us now say that an active edge E is locally rightwardlargest iff there is no other active edge E' withf rom(E ' )= from(E),  ru le (E ' )  = ru le(E) ,fi'omposition(E')=fromposition(E) and sub-inactives(E')including as an initial substring sub-inactives(E).Analogously we.can define a locally leftward largest edge.Vt0...Vt I .
.
.
.
.
.
Vti.. .
.
.
.
Vt n,with for i=O, n-1 ti <t i+ iwhere for every vertex arrives or leaves at least onelexical edge.
It just does not matter i f  the final analysiswil l  not "make use" of all the vertices in the chart.We then define four different rules for introducing a newedge in the chart:The first rule says, roughly, that if you are trying to buildthe same thing from the left and from the right you shouldunify your efforts.537A-A Rule:If we have two active edges Ai and A2,with to(A 1 ) = from(A2)rule(A1) = rule(A2)toposition(A 1 ) = fromposition(A2)and A1 is locally leftward largest and A2 is locallyrightward largest, then we can introduce a new activeedge A3 into the chart withfrom(A3) = from(A1 ), to(A3) = to(A2), rule(A3) = rule(A1 ),f rompos i t ion(A3)  = f rompos i t ion(A!
),toposition(A3) =toposi t ion(A2) ,sub- inact ives(A3)  =concat(sub-inactives(Al), sub-inactives(A2)), where concatis the usual string concatenation perator.If fromposition(Al)=0 and toposition(A2)=n, number ofsymbols in the right hand side of rule(A1), an inactiveedge I is introduced instead, with from(I)=from(Al),to(I)=to(A2) and cat(I) equal to the left hand side ofrule(AlLWe also maintain the usual edge combination rule, withthe extension to the two directions.A-I Rule:Given an active edge A and an inactive edge I withfrom(I)=to(A), and, having named i toposition(A), withi?
n (the number of symbols in the right hand side of therule), cat(I)= Ci +1, i + 1-th symbol of the right hand sideof rule(A), then a new edge E can be added to the chart,with from(E)=from(A), to(E)=to(I), and, if i+ l=n wasthe last symbol in rule(A) and fromposition(A)=0, Ewill be an inactive edge with cat(E) equal to the lefthand side of rule(A), if not it will be an active edge withrule(E) = rule(A) and fromposition(E) = fromposition(A),toposition(E) = i + 1.Similarly, if to(I)=from(A), and having named ifromposition(A), i?
0, cat(I) = Ci-I , i-l-th symbol of theright handside of rule(A), then a new edge E can be addedto the chart, with from(E)= from(I), to(E)= to(A), and, if i-1 = 0 and toposition(A) is equal to the length of the righthandside of rule(A), E will be an inactive dge with cat(E)equal to the left handside of rule(A), if not, it will be anactive edge with rule(E)=rule(A), fromposition(E)=i-1,toposition(E) = toposition(A).Let us now recall our classification of word hypothesesinto three classes, say a, b, c, in relation ~ their scores.As stated earlier, we consider word hypotheses of class athe islands for our process.
The algorithm will proceedoutward from the is lands and bottom-up when a638constituent including an island (however far inside thestructure) is completed.
Let us say that an edge hasanother feature, called withis land, a boolean that isoriginally true for lexical edges of class a and false for theothers, and during the process is propagated to any newedge that "includes" an edge with withisland =true.We can now state theI/bu Rule:When an inactive edge I, with .withisland(I)=true, isintroduced in the chart, a new active edge is introducedfor every rule R in the grammar that includes on its righthand side the symbol cat(I) and in relation to R for everyposition i such that cat(I) is the i + 1-th symbol on the righthand side of R. Let us denote such a generic active edge asA; its character is t ics  wil l  be f rom(A)= from(I),to(A)--  t0(I), ru le(A)  = R, f rompos i t ion(A)  =i,toposition(A) = i + 1, sub-inactives = list(I).We have also the usual top-down rule, r iv is i tedconsistently with our approach:A/td Rule:When an active edge A is added to the chart, if from thevertex to(A) only edges with withisland=false l averightward, then introduce a cycling active edge on to(A)for every rule that has on the left handside the symbolthat comes after the position toposition(A) for rule rule(A),unless there is already an active edge with that rule or aninactive dge with that category.
Do likewise on the othervertex.The meaning of the presence of both the I/bu and the A/tdrules is that the process will be a bottom-up one, startingfrom the islands.
When a point is met where only class bwords are found, hypotheses of the presence of certainconstituents, according to the "island" constraints, areintroduced in the form of cycling active edges.
This top-down operation will ensure that the parser is led by themost consolidated fragments.Every time we introduce a new active edge A we mustperform a redundancy check to ensure that we do notbuild, not only now, but also in the forseeable future,anything that has already been built.r/Check:A new active edge A can be inserted in the chart unlessfrom the vertex from(A) there is an active edge A' leavingr ightward  wi th  ru le (A ' )  = ru le(A) ,fromposition(A')=fromposition(A) and sub-inaetives(A')including as an initial substring sub-inactives(A).Similarly, A can be inserted in the chart unless from thevertex to(A) there is an active edge A' leaving leftwardwith rnle(A')=rule(A), toposition(A')=topos~tion(/k) andsub-inactives(A') including as a final substr ing sub-inactives (A).It is conw~nient that the above rules be applied in thegiven order so as to minimize the effort.As regards the question of control, it seems reasonablethat all edge building tasks originated by an islandshould be carried on in the first place, and the actionsresulting from l~redictions over class b hypotheses becarried out later, in order to avoid an explosion of fuzzyedges in the chart.
Still, it is clear that, because of thenature of the algorithm, after the introduction ofan edgeof the second type, an edge building action originated byan island can take place again.With this in mind we introduce two agendas, a-agenda,where tasks of building edges with withisland---true areadded and b-agenda where the other tasks are added.Task execution isconstrained only by the discipline that atask in b-agenda can be executed only if a-agenda isempty.
At the beginning of the process a-agenda is filledwith all the tasks or iginated by the class a wordhypothese:~.class a words: MILAN, BOSSclass b words: THE WANTS AN IMMEDIATE CALL TOrules: 1) S ->NPVNPPP2) S -> NPVP3) NP- > ProperN4) NP - > DET N5) NP - > DET ADJ N6) PP -> PREPNP7) VP -> V NPWe shall insert inactive edges in the lower side of thesentence and active edges in the upper side of thesentence.
The edge being processed is drawn with adotted line, the possible other edge considered in the rulethat is currently applied is drawn with a dashed line, theresulting edge is drawn with a bold line.The process tarts bottom-up fi'om the islands (class awords) MILAN and BOSS, introducing active, inactiveand cycling adges into the cahrt, following the compositionrules introduced before.4.
All exampleWe shall present here an example of parsing with theconcepts iritroduced in this paper.
The sentence is :THEBOSS WANTS AN IMMEDIATE CALL TO MILAN.For clarity's ake, we shall consider vertices univocallydetected and lexical interpretations unambiguous.
Ofcourse we ~hall consider words of class a (islands) and ofclass b.Starting from MILAN we get to produce an inactive dgewith cat =PP, between vertices 7and 9, and an active edgei with eat = S, relative to rule 1, once more between vertices!7 and 9, with fromposition-- 3.When the word BOSS is analyzed we get to produce anactive edge with cat=S, relative to rule I , and withtoposition =2.~f, I,eO~T e V0 the 0 boss (~ want~ (~VPNP NI'NP NPan (~ immediate (~ call ,~ PPFigure1639NI'  PPNPN IH r , .  '
"  A l l  j " " ' , ,  " '>N I I0 the ~ immediatePPVl ,/ * '  Np  VPFigure 2PP\[)1 ~ NP l I I NP0 the (~.boss'.
vP  NI '.
I '0  ~ uPFigure 3A top-down process is needed after that because a phraseoccurs without any islands in it.
Through that process anoun phrase is recognized between vertices 4 and 7, sothat we have the situation shown in Figure 1.At this point, by virtue of the A-I composition rule anactive edge with cat=S can be inserted into the chartbetween vertices 1and 7 as shown in Figure 2.The last step consists in introducing an inactive dge with"Cat = S into the chart between vertices 1and 9, by virtue ofthe A-A composition rule, as shown in Figure 3.
Thisyields a succesful recognition of the sentence.ConclusionsA mechanism that extends the chart algorithm withbidirectionality has been introduced.
This step is a majorone, since a monodirectional chart would not be able to64J~base its processing selectively on easi ly identi f iablefragments (the so called islands) and derive hypothesesabout he other parts of the input string.
Instead, with themechanism proposed here, for any place where the easilyidentifiable fragments occur in the sentence, the processwill extend to both the left and the right of the islands,until possibly completely missing fragments are reached.At that point, by virtue of the fact that both a left and aright context were found, heuristics can be introduced thatpredict he nature of the missing fragments.The described mechanism is particularly advantageouswhen dealing with complex sentences, because it is aninherent ly  nondeterminist ie mechanism, capable ofdealing with the complex local ambiguity typical ofnatural  language.
An important  aspect is that  themechanism is completely independent of the part icularl inguist ic theory adopted.
In technical  terms, the?
linguistic representation is reflected only in the particularfunctional description, and in its particular operations,which are added to the edges of the chart and will providethe necessary information for constraining the process andallowing better predictiions.The use of bidirectional charts seems to be particularlysuitable fiPr speech recognition, but also for processingother forms of ill-formed input; lastly, it seemsparticularly suited even for processing well formed stringswhen combined with a head-driven linguistic theory, i.e.
atheory that privileges particular elements insideconstituents \[ ee for instance Stock 1986\].ReferencesBarton, E.; Berwick, R., and Ristad, E. ComputationalComplexity and Natural Language.
MIT Press Cambridge,Mass.
(1987)Earley, J.
An efficien~ context-free parsing algorithm.Communications of the Association for ComputingMachinery.
13(2): 94-102 (1970)Kaplan, R. A general syntactic processor.
In Rustin, R.(Ed.
), Nataral Language Processing.
Englewood Cliffs,N.J.
: Prentice-Hall (1973)Kay, M. Algorithm Schemata nd Data Structures inSyntactic Processing.
Xerox, Palo Alto Research Center(October 1980)Kay, M. The Mind System.
In Rustin, R.
(Ed.
), NaturalLanguage Processing.
Englewood Cliffs, N.J.: Prentice-Hall (1973)Stock O.
'Dynamic Unification in Lexically Based Parsing'Proceedings of the 7th European Conference on ArtificialIntelligence, Brighton, (1986).
Also in Advances inArtificial Intelligence II, B.
Du Boulay, D. Hogg & L.Steels Eds., North Holland, Amsterdam,(1987)Stock O.
'Coping with dynamic syntactic strategies: anexperimental environment for an experimental parser'Proceedings of the Third Conference ofthe Association \[brComputational Linguistics, European Chapter,Copenhagen (1987)Stringa, L. 'An Artificial Intelligence Approach to SpeechRecognition and Understanding' to appear in PatternRecognition Letters (1988).Thompson, H.S.
Chart parsing and rule schemata inGPSG.
In Proceedings of the Igth Annual Meeting of theAssociation for Computational Linguistics.
Alexandria,Va.
(1981)Walker, D.E.
Speech Understanding through syntacticand semantic analysis.
In IEEE Transactions onComputers, Vol.
C-25, no.
4, 1976 (1976)Wiren, M. A comparison of rule invocation strategies incontext-free chart parsing.
In Proceedings of the ThirdConference of the Europen Chapter of the Association/brComputational Linguistics.
Copenhagen, (1987)641
