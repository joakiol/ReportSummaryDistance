Construction and Visualization of Key Term HierarchiesJoe Zhou and Troy TannerLEXIS-NEXIS,  a Division of Reed Elsevier9555 Spr ingboro PikeMiamisburg, OH 45342{joez, tit} @ lexis-nexis.comAbstractThis paper presents a prototype system for keyterm manipulation and visualization in a real-worldcommercial environment.
The system consists oftwo components.
A preprocessor generates a setof key terms from a text dataset which representsa specific topic.
The generated key terms are orga-nized in a hierarchical structure and fed into agraphic user interface (GUI).
The friendly and inter-active GUI toolkit allows the user to visualize thekey terms in context and explore the content of theoriginal dataset.1.
INTRODUCTIONAs the amount of on-line text grows at an exponen-tial rate, developing useful text analysis techniquesand tools to access information content from vari-ous electronic sources is becoming increasinglyimportant.
In this paper we present an appliedresearch prototype system that intends to accom-plish two major tasks.
First, a set of key terms,ranging from single word terms to four word terms,are automatically generated and organized in ahierarchical structure out of a text dataset whichrepresents a specific topic.
Second, a graphic userinterface (GUI) is established that provides thedomain expert or the user with an interactive envi-ronment to visualize the key term hierarchy in thecontext of the original dataset.2.
SYSTEM DESCRIPTIONThe ultimate goal of this prototype system is tooffer an automated toolkit which allows the domainexpert or the user to visualize and examine keyterms in a large information collection.
Such a tool-kit has proven to be useful in a number of realapplications.
For example, it has helped us reducethe time and manual effort needed to develop andmaintain our on-line document indexing and classi-fication schemes.The system consists of two components: a prepro-cessing component for the automatic constructionof key terms and the front-end component for user-guided graphic interface.2.1 Automatic Generation of Key TermsAutomatically identifying meaningful terms fromnaturally running texts has been an important askfor information technologists.
It is widely believedthat a set of good terms can be used to express thecontent of the document.
By capturing a set ofgood terms, for example, relevant documents canbe searched and retrieved from a large documentcollection.
Though what constitutes a good termstill remains to be answered, we know that a goodterm can be a word stem, a single word, a multipleword term (a phrase), or simply a syntactic unit.Various existing and workable term extraction toolsare either statistically driven, or linguisticallyoriented, or some hybrid of the two.
They all targetfrequently co-occurring words in running text.
Theearlier work of Choueka (1988) proposed a purefrequency approach in which only quantitativeselection criteria were established and applied.Church and Hanks (1990) introduced a statisticalmeasurement called mutual information forextracting strongly associated or collocated words.Tools like Xtract (Smadja 1993) were based on thework of Church and others, but made a stepforward by incorporating various statisticalmeasurements like z-score and variance ofdistribution, as well as shallow linguistic techniqueslike part-of-speech tagging and lemmatization ofinput data and partial parsing of raw output.Exemplary linguistic approaches can be found inthe work by Str-zalkowsky (1993) where a fast andaccurate syntactic parser is the prerequisite for theselection of significant phrasal terms.Different applications aim at different ypes of keyterms.
For the purpose of generating key terms forour prototype system, we have adopted a =learndata from data" approach.
The novelty of this307approach lies in the automatic comparison of twosample datasets, a topic focused dataset based ona predefined topic and a larger and more generalbase dataset.
The focused dataset is created bythe domain expert either through a submission ofan on-line search or through a compilation ofdocuments from a specific source.
Theconstruction of the corresponding base dataset isperformed by pulling documents out of a number ofsources, such as news wires, newspapers,magazines and legal databases.
The intention is tomake the resulted corpora cover a much greatervariety of topics or domain subjects than thefocused dataset.To identify interesting word patterns in both sam-ples a set of statistical measures are applied.
Theidentification of single word terms is based on thevariation of a t-test.
Two-word terms are capturedthrough the computation of mutual information(Church et al 1991), and an extension of mutualinformation assists in extracting three-word andfour-word terms.
Once the significant erms ofthese four types are identified, a comparison algo-rithm is applied to differentiate terms across thetwo samples.
If significant changes in the values ofcertain statistical variables are detected, associ-ated terms are selected from the focused sampleand included in the final generated lists.
(For acomplete description of the algorithm and prelimi-nary experiments, please refer to Zhou and Dap-kus 1995.
)2.2 Graphic User Interface (GUI)We view our prototype system as a means toachieve information visualization.
Analogous to sci-entific visualization that allows scientists to makesense out of intellectually large data collections,information visualization aims at organizing largeinformation spaces so that information technolo-gists can visualize what is out there and how vari-ous parts are related to each other (Robertson etal.
1991).
The guiding principle for building the GUIcomponent of our prototype system is to automatethe manual process of capturing information con-tent out of large document collections.2.2.1 General PresentationThe design of the GUI component relies on a num-ber of well understood elements which include asuggestive graphic design and a direct manipula-tion metaphor to achieve an easy-to-learn userinterface.
The layout of the graphic design isintended to facilitate the quick comprehension ofthe displayed information.
The GUI component isdivided into two main areas, one for interacting withkey terms structures and one for browsing targeteddocument collections.The following descriptions should be viewedtogether with the appropriate figures of the GUIcomponent.
Figure 1, attached at the end of thepaper, represents the overall GUI picture.
Figures 2and 3 capture the area where the interaction withthe key term structures occurs.
Figures 4 and 5present the area for document browsing and keyterms selection.
The topic illustrated in the figuresis the legal topic =Medical Malpractice".2.2.2 Term Access MechanismThe left area of the GUI component (see figures 2and 3) is devoted to selecting, retrieving and oper-ating on the key terms generated by the prepro-cessing component of the prototype system.
Ascan be seen, the key terms, ranging from singleword terms to four word terms, are organized in atree structure.
The tree is a two dimensional visual-ization of the term hierarchy.
Single word terms arerepresented as root nodes and multiple word termscan be positioned uniformly below the parent nodein the term hierarchy.
The goal of the visualizationis to present the key term lists in such a way that ahigh percentage of the hierarchy is visible with min-imal scrolling.Figure 2308The user interaction is structured around termretrieval and navigation as the top level user inter-actions.
The retrieval of the key terms is treated asan iterative process in which the user may selectsingle world terms from the term hierarchy andnavigate to multiple word terms accordingly.The user begins term navigation by selecting froma list of available topics.
In this case, the legal topic"Medical Malpractice" (i.e., medmal3) is selected(see figure 2).
Often data structures are organizedlinearly by some metric.
Frequency of key termusage is the metric used to organize and partitionthe term hierarchy in an ascending numericalorder.
The partitioning is necessary as it is difficultto accommodate the large ratio of the term hierar-chy on the screen.
Currently, each partition con-tains 100 root nodes (or folders), representingsingle word terms.
Once a partition has beenselected, the corresponding document collection isloaded into the document browser.
The browserprovides the user with the ability to quickly navigatethrough the document collection to locate relevantkey terms.example, when =malpractice" is selected as theroot key term, a list of multiple word terms will bedisplayed including multiple key terms such as"medical malpractice", "malpractice cases", "medi-cal malpractice action", "medical malpracticeclaims", "limitations for medical malpractice", etc.
(see figure 3)Functionality to shrink and collapse subtrees isalso in place.
When a term is selected from thetree, a corresponding term lookup is conducted onthe document collection to locate the selected termwithin the currently displayed document.
Docu-ments representing the four highest frequencies forthe selected term will be displayed first.
Upon loca-tion the selected term is always highlighted withinthe document browser.2.2.3 Document Browsing MechanismThe right area of the GUI component (see figures 4and 5) is occupied by the document browser.
Thedesign of the document browser is intended to pro-vide an easy-to-learn interface for the managementand manipulation of the document collection.There are three subwindows: the document identi-fier window, the document window and the naviga-tion window.
The document identifier windowidentifies the document that is currently displayedin the document window.
It shows the document idand the total frequency of the selected key term inthe document collection.
The document windowprovides a view of the content of the targeted docu-ment (see figure 4).Figure 3The primary interaction with the key term hierarchyis accomplished by direct manipulation of the treevisualization.
The user can select individual nodesin the tree structure by pointing and clicking thecorresponding folders.
When selecting nodes withchildren, the tree will expand, resulting in the dis-play of multiple word terms of the root key term.
For Figure 4309The user can move through the document by mak-ing use of the scroll bar, document buttons in thenavigation window, or by dragging the mouse upand down while depressing the middle mouse but-ton.
The user can copy relevant key terms to aholding area by selecting "Edit" from the menubar.The user is presented with a popup dialog forimporting the selected key terms (see figure 5).The navigation window enables the user to navi-gate through the documents to view the selectedkey terms in context.
In addition, the user is pro-vialed with information regarding term frequenciesand term relevance ranking scores.Figure 52.2.4 ImplementationThe GUI component described above is imple-mented using the C++ programing language andthe OSF Motif graphical user interface toolkit.
Theuser interface consists of a small set of classesthat play various roles in the overall architecture.The two major objects of the user interface interac-tion model are the ListTree and the DocumentStore objects.ListTree is the primary class for implementing thetree visualization.
Operations for growing, shrinkingand manipulating the tree visualization have beenimplemented.Document Store provides the interface to docu-ment collections.
In particular, a document storeprovides operations to create, modify and navigatedocument collections.3.
RESULTS OF USABILITY TESTINGThe prototype system, despite its prototype mode,has proven to be useful and applicable in the com-mercial business environment.
Since the system isin place, we have conducted a series of usabilitytesting within our company.
The preliminary resultsindicate that the system can provide internal spe-cialized library developers, as well as subjectindexing domain experts with an ideal automatedtoolkit o select and examine significant erms froma sample dataset.A number of general topics have been tested fordeveloping specialized libraries for our on-linesearch system.
These include four legal topics=State Tax ~, =Medical Malpractice", =Uniform Com-mercial Code", and =Energy ~, and three news top-ics =Campaign", =Legislature", and =Executives".Specific subject indexing topics that have beentested are =Advertising Expenditure", =lntranet",=Job interview" and =Mutual fund".
Two sets ofquestionnaires were filled out by the domainexperts who participated in the usability testing.The overall ranking for the prototype system fallsbetween "somewhat useful" to =very useful",depending on the topics.
They pointed out that thesystem is particularly helpful when dealing with acompletely new or unfamiliar topic.
It helps spotsignificant erms which would normally be missedand objectively examine the significance level ofcertain fuzzy and ambiguous terms.REFERENCESK.
Church and P. Hanks.
Word association norms,mutual information and lexicography.Computational Linguistics, 16(1), March1990.K.
Church, et al Using statistics in lexical analysis.In U. Zernik, editor, Lexica/Acquisition:Exploring On-line Resources to Build aLexicon, Lawrence Erlbaum Association,1991.Y.
Choueka.
Looking for needles in a haystack.
InProceedings, RIAO, Conference on User-Oriented Context Based Text and ImageHandling.
Cambridge, MA.
1988.310G.
Robertson.
Cone trees: Animated 3rdvisualizations of hierarchical information.In proceedings SIGCHI '91: HumanFactors in Computing Systems, pages189-194.
ACM, 1991.F.
Smadja.
Retrieving collocations from text:Xtract.
Computational Linguistics, 19(1),March 1993.T.
Strzalkowski.
Document Indexing and RetrievalUsing Natural Language Processing.
InProceedings, RIAO, New York, NY.
1994.J.
Zhou and P. Dapkus.
Automatic Suggestion ofSignificant Terms for a Predefined Topic.In Proceedings of the 3rd Workshop onVery Large Corpora, Association forComputational Linguistics, MIT, Boston,1995.Figure 1311
