Compositional Semantics in VerbmobilJohan Bos Bj~irn Gamb~ick Christian LieskeYoshiki Mori Manfred Pinkal Karsten WormDepartment of Computational LinguisticsUniversity of the SaarlandPostfach 151150D-66041 Saarbrficken, Germany*e-mail : vm@coli .uni-sb.deAbstractThe paper discusses how compositionalsemantics is implemented in the Verb-mobil speech-to-speech translation sys-tem using LUD, a description languagefor underspecified discourse representa-tion structures.
The description lan-guage and its formal interpretation inDRT are described as well as its imple-mentation together with the architectureof the system's entire syntactic-semanticprocessing module.
We show that a lin-guistically sound theory and formalismcan be properly implemented in a sys-tem with (near) real-time requirements.1 IntroductionContemporary syntactic theories are normallyunification-based and commonly aim at specifyingas much as possible of the peculiarities of specificlanguage constructions in the lexicon rather thanin the "traditional" grammar ules.
When doingsemantic interpretation within such a framework,we want a formalism which allows for?
compositionality,?
monotonicity, and?
underspecification.Compositionality may be defined rather strictlyso that the interpretation of a phrase alwaysshould be the (logical) sum of the interpreta-tions of its subphrases.
A semantic formalismbeing compositional in this strict sense wouldalso trivially be monotonic, since no destructive*This research was funded by the German FederalMinistry of Education, Science, Research, and Tech-nology (BMBF) under grant number 01 IV 101 R.changes would need to be undertaken while build-ing the interpretation of a phrase from those of itssubphrases)However, compositionality is more commonlydefined in a wider sense, allowing for othermappings from subphrase-to-phrase interpreta-tion than the sum, as long as the mappings aresuch that the interpretation of the phrase still is afunction of the interpretations of the subphrases.A common such mapping is to let the interpre-tation of the phrase be the interpretation of its(semantic) head modified by the interpretationsof the adjuncts.
If this modification is done byproper unification, the monotonicity of the for-malism will still be guaranteed.In many applications for Computational Lin-guistics, for example when doing semanticallybased translation - -  as in Verbmobil, the Germannational spoken language translation project de-scribed in Section 2 - -  a complete interpretationof an utterance is not always needed or even desir-able.
Instead of trying to resolve ambiguities, forexample the ones introduced by different possiblescopings of quantifiers, the interpretation of theambiguous part is left unresolved.
The semanticformalism of such a system should thus allow forthe underspecification f these unresolved ambi-guities (but still allow for them to be resolved ina monotonic way, of course).
An underspecifiedform representing an utterance is then the rep-resentation of a set of meanings, all the possibleinterpretations of the utterance.The rest of the paper is structured as follows.Section 2 gives an overview of the VerbmobilProject.
Section 3 introduces LUD (descriptionLanguage for Underspecified Discourse 'represen-tations), the semantic formalism we use.
Section 4compares our approach to that of others for simi-1 More formally, a semantic representation is mono-tonic iff the interpretation of a category on the rightside of a rule subsumes the interpretation of the leftside of the nile.131lar tasks.
The actual implementation is describedin Section 5, which also discusses coverage andpoints to some areas of further research.
Finally,Section 6 sums up the previous discussion.2 The Verbmobil ProjectThe project Verbmobil funded by the GermanFederal Ministry of Research and Technology(BMBF) combines speech technology with ma-chine translation techniques in order to developa system for translation in face-to-face dialogues.The overall project is described in (Wahlster,1993); in this section we will give a short overviewof the key aspects.The ambitious overall objective of the Verb-mobil project is to produce a device which willprovide English translations of dialogues betweenGerman and Japanese businessmen who only havea restricted active, but larger passive knowledge ofEnglish.
The domain is the scheduling of businessappointments.
The major requirement is to pro-vide translations as and when users need them,and do so robustly and in (near) real-time.In order to achieve this, the system is composedof time-limited processing components which onthe source language (German or Japanese) sideperform speech recognition, syntactic, semanticand pragmatic analysis, as well as dialogue man-agement; transfer on a semantic level; and onthe target language (English) side generation andspeech synthesis.
When the users speak English,only keyword spotting for the dialogue manage-ment is undertaken.At any moment in the dialogue, a user mayactivate the Verbmobil device and start speak-ing his/her native language.
The speech recog-nition component hen processes the input andproduces a word lattice representing the speechhypotheses and their corresponding prosodic in-formation.
The parsing component processes thelattice and assigns each well-formed path throughit one or several syntactic and (compositional) se-mantic representations.
Ambiguities introducedby thesc may be resolved by a resolution compo-nent.
The representations produced are then as-signed dialogue acts and used to update the modelof the discourse, which in turn may be used by thespeech recognizer to choose the current languagemodel.
The transfer component takes the (possi-bly resolved) semantic analysis of the input andbuilds a target language representation.
The gen-erator then constructs the corresponding Englishexpression.
For robustness, this deep-level pro-cessing strategy is complemented with a shallowanalysis-and-transfer component.3 Underspecified Representations3.1 Theoret i ca l  BackgroundSince the Verbmobil domain is related to dis-course rather than isolated sentences, a variantof Kamp's Discourse Representation Theory, DRT(Kamp and Reyle, 1993) has been chosen as themodel theoretic semantics.
Itowcver, to allow forunderspecification f several linguistic phenom-ena, we have chosen a formalism that is suitedto represent underspecified structures: LUD, adescription language for underspecified discourserepresentations (Bos, 1995).
The basic idea is theone given in Section 1, namely that natural lan-guage expressions are not directly translated intoDiscourse Representation Structures (DRSs), butinto a representation that describes everal DRSs.Representations in LUD have the following dis-tinct features.
Firstly, all elementary seman-tic "bits" (conditions, entities, and events) areuniquely labeled.
This makes them easy to referto and results in a very powerful description lan-guage.
Secondly, meta variables over DRSs (whichwe call holes) allow for the assignment of under-specified scope to a semantic operator.
Thirdly,a subordination relation on the set of holes andlabels constrains the number of interpretations ofthe LUD-representation i the object language:DRSs.3.2 LUD-Representat ionsA LUD-representation U is a triple< Hu,Lu,Cu >where Hu is a set of holes (variables over labels),Lu is a set of labeled (LUD) conditions, and Cuis a set of constraints.
A plugging is a bijectivefunction from holes to labels.
For each pluggingthere is a corresponding DRS.
The syntax of LUD-conditions is formally defined as follows:1.
If x is a discourse marker (i.e., en-tity or event), then din(x) is a LUD-condition;2.
If R is a symbol for an n-place rela-tion, x l , .
.
.
,  xn are discourse mark-ers, then pred(R, xl,...,x,~) is aLUD-condition;3.
If I is a label or hole for aLUD-condition, then -~l is a LUD-condition;4.
If 11 and 12 are labels (or holes) forLUD-conditions, then 11 --+ 12, 11AI2and 11 V 12 are  LUD-conditions;5.
Nothing else is a LUD-condition.132There are three types of constraints in LUD-representations.
There is subordination (<_), strictsubordination (<), and fimdly presupposition (c~).These constraints are syntactically defined as:I f / i ,  l.~ are labels, h is a hole, then It < h,11 < 12 and l~ ~ 12 are LUD-constraints.The interpretation of a LUD-representation isthe interpretation of top,  the label or hole of aLUi)-representation tbr which tt,ere exists no labelthai; subordinates it.
~The interpretation f nction I is a function froma labeled condition to a DRS.
This hmction is de-fined with respect o a plugging P. We represent aI)RS ~ a box ~DI~ , where D is the set of dis-course markers and C is the set of conditions.
Themappings between LUD-conditions and I)RSs arethen detiued in (2)-(9) where l is a label or holeand ~b is a labeled condition.I(~) ifr l: ~b ~ Lu5, (0  = (u)i i r l  c Hu= (3)\[(pT,(;a(~,Xl,... , xn)  ) = (~1){\[ ,.
(.., ,<\]}:(t,  A l=) = (s): ( l ,  = (6){ L i 'I~'1 ~I(ll)&~ K2~I(l'2)}v l.,.)
= (r){1 \[ KI V/f2\] \ [ I?l~ I(11)& f?2 ~ /(12)}I(-,11) = (8)\[n (6) ?
is the merge operation, that takes twoDRSs K1 and K= and returns a I)RS which do-main is the nnion of the set of the domains of K1and K2, and which conditions form the union ofthe set of the conditions of K1 and K2.2q.
'he reade.r interested in a more detailed discus-SiGn of the iul;erl)retation of underspccified semanti(:representations is referred to (Bos, 19{)5).3.3 Lexica l  Ent r ies  and  Compos i t ionFor building LUD-reprcsentations we use alambda-operator and functional application inorder to compositionally combine simple LUD-representations to complex ones.
In addition, wehave two functions that help us to keep trackof the right labels.
These are top,  as describedabove, and main ,  the label of the semantic head ofa LU1)-reprcsentation.
Further, we have an opera-tion that combines two LUD-representations intoone: q) (merge for LUl)-representations).
Somesample lexical entries for German as well as a sam-ple derivation, are shown in Figure 1.4 Re la ted  WorkThe LUD representation is quite closely related toUDI{Ss, underspecified l)t{Ss (Reyle, 1993).
Themain difference is that the I,UI) description lan-guage in principle is independent of the objectlangnage, thus not only DI{T, but also or(tinarypredicate logic, as well as a Dynamic PredicateLogic (Groenendijk and Stokhof, 1991) can beused as the object language of LUI), as shownin (Bos, 1995).
Compared to UDRS, LUD alsohas a stronger descriptive power: Not DRSs, butthe smallest possible semantic components areuniquely labeled.The Verbmobil system is a translation systembuilt by some 30 different groups in three coun-tries.
The semantic \[brmalism used on the En-glish generation side has been developed by CSLI,Stanford and is called MRS, Minimal RecursionSemantics (Copest;ake L al., 1995).
The deep--level syntactic and semalttic German processing ofVerbmobil is also done along two parallel paths.The other path is developed by IBM, lleidelbergand uses a variant of MRS, Underspecified Min-imal Recnrsion Semantics (UMRS) (Egg and Le-beth, 1995).
All the three formalisms LUD, MRS,and UMRS have in common that they use a fiat,nco-Davidsoniau representation and allow for thenndcrspecification o\[" functor-argmnent relations.In MRS, this is done by unification of the rela-tions with unresolved ependencies.
This, how-ever, results in structures which cannot be fltrtherresolved.
In UMRS this is modified by expressingthe scoping possibilities directly as disiunctions.The main difference between both types of MRSsand LUI) is that the interpretation of LUI) inan object language other than ordinary predicatelogic is well delined, as described in Section 3.2.The translation task of the SICS-SRI l:/ilin--gnal Conversation Interpreter, BCI (Alshawi etal., 1991) is quite similar to that of Verbmobil.The BCI does translation at the level of Quasi-13 3das :geht :AP.
< { } ,{  l, : dm(z) } ,{  li w main(P )  } >@P(z)ll : pred(gehen, e), )Ay e < { h, }, l :pre (the..e,e,y), ,{ Zk < h, } >lk : li A ljjeder : AP.AQ.
< { hi } lk : lj A maln(P) ,  It < top(Q),' ' main(Q) < hi 11 : lk -4 hite rmin  : Ax.
< { } ,{  li : termin(x)  } ,{  } >15 pred(gehen, e), 17 < ho, >das geht : Ae.
< { ho },  16 pred(theme,e,z) ,  ' 14 ~i 17lz 15 A 16> @P(z) @ Q(z)Figure 1: Lexical entries and a sample derivation in LUDLogical Form, QLF which also is a monotonicrepresentation language for compositional seman-tics as discussed in (Alshawi and Crouch, 1992).The QLF formalism incorporates a Davidsonianapproach to semantics, containing underspecifiedquantifiers and operators, as well as 'anaphoricterms' which stand for entities and relations to bedetermined by reference resolution.
In these re-spects, the basic ideas of the QLF formalism arequite similar to LUD.5 Syntax -Semant ics  In ter face  andImp lementat ion5.1 GrammarThe LUD semantic onstruction component hasbeen implemented in the grammar formalismTUG, Trace and Unification Grammar (Block andSchachtl, 1992), in a system called TrUG (in coop-eration with Siemens AG, Munich, who providedthe German syntax and the TrUG system).
TUGis a formalism that combines ideas from Gov-ernment and Binding theory, namely the use oftraces, with unification in order to account for, forexample, the free word order phenomena found inGerman.5.1.1 Syntax and SemanticsA TUG grammar basically consists of PATR-IIstyle context free rules with feature annotations.Each syntactic rule gets annotated with a seman-tic counterpart.
In this way, syntactic derivationand semantic construction are fully interleavedand semantics can further constrain the possiblereadings of the input.In order to make our formalisation executable,we employ the TrUG system, which compiles ourrules into an efficient Tomita-style parser.
In addi-tion TrUG incorporates sortal information, whichis used to rank parsing results.Consider a simplified example of a syntactic ruleannotated with a semantic functor-argument ap-plication.s ---> rip, vp lnp:agr = vp:agr?lud_fun arg ( s, vp, np).In this example, a sentence s consists of an npand a vp.
The first feature quation annotated tothis rule says that the value of the feature agr (foragreement) of the np equals that of the respectivefeature value of the vp.5.1.2 The  Compos i t ion  ProcessA category symbol ike np in the rule above alsostands for the entry node of its associated featurestructure.
This property is used for the seman-tic counterpart of the rule: lud..fun_.arg is a callto a semantic rule, a macro in the TUG nota-tion, which defines functor-argument application.Since the macro gets the entry nodes of the fea4ture structures as arguments, all the informationpresent in the feature structures can be accessedwithin the macro which is defined aslud_fun_arg(Result ,Fun,hrg) =>lud_ cont ext_equal (Fun, Result ),context (Fun, FunContext),context (hrg, ArgCont ext ),subcat (Result ,  ResultSc),subcat (Fun, \[hrgContext \]ResultSc\] ).134The functor-argument application is based onthe notion of the context of a LUD-representation.The context of a LUD-representation is athree-place structure consisting of the LUD-representation's main label and top hole (as de-scribed in Section 3.3) and its main instance,which is a discourse marker or a lambda-boundvariable.
A LUD-representation also has a seman-tic subcategorization listunder the feature subcatwhich performs the same function as a A-prefix.This list consists of the contexts of the argumentsa category is looking for.The functor-argumcnt application macro thussays the following.
The context of the result isthe context of the functor.
The functor is look-ing for the argument as the first element on itssubcat  list, while the result's subcat list is that ofthe functor minus the argument (which has beenbound in the rule).
The binding of variables be-tween functor and argument akes place via thesubcat  list, through which a functor can accessthe main instance and thc main label of its argu-ments and state relations between them.Note that the only relevant piece of informa-tion contained in a LUD-representation for thepurpose of composition is its context.
Its contentin terms of semantic prcdicates is handled differ-ently.
The predicates of a LUD-representation arestored in a special slot provided for each categoryby the TrUG systcm.
The contents of this slotis handed up the tree from the daughters to themother completely monotonically.
So the predi-cates introduced by some lexical entry percolateup to the topmost node automatically.These two restrictions, the use of only a LUD-representation's context in composition and themonotonic percolation of semantic predicates upthe tree, make the system completely composi-tional in the sense defined in Section 1.5.1.3 The  lex iconTo see how the composition interacts with thelexicon, consider the following lexical macro defin-ing the semantics of a transitive verbtrans_verb_sem(Cat,Rel,\[Rolel,Role2\]) =>basic_pred(Rel,Inst,Ll),udef(Inst,L2),group(\[L1,L2,ArgLI,ArgL2\],Main),leq(Main,Top),lud_context(Cat,Inst,Main,Top).ro le ( Ins t ,Ro le l ,Arg l ,ArgL1) ,role(Inst,Role2,Arg2,ArgL2),subcat(Cat,\[lud(Argl .... ),lud(Arg2 .... )\] ).The macro states that a transitive verb in-troduces a basic predicate of a certain relationwith an instance and a label.
The instance isrelated to its two arguments by argument roles.The arguments' instances are accessed via theverb's subcat  list (and get bound during functor-argument application, cf.
above).
The labels in-troduced are grouped together; the group label isthe main label of the LUD-representation, the in-stance its main instance.
Another property of theverb's semantics i  that it introduces the top holeof the sentence.5.2 In ter faces  to  Other  ComponentsAs sketched in Section 2, our semantic onstruc-tion component delivers output to the componentsfor semantic evaluation and transfer.
The para-graphs that follow describe the common interfaceto these two components.5.2.1 Reso lu t ion  of  Underspec i f i ca t ionGenerating a scopally resolved LUD-represen-tation from an underspecified one is the processwhich we referred to as plugging in Section 3.2.It aims at making the possibly ambiguous e-mantics captured by a LUD unique.
Obviously,purely mathematical pproaches for transformingthe partial ordering encoded in the leq  constraintsinto a total ordering may yield many results.Fortunately, linguistic constraints allow us toreduce the effort that has to be put into the com-putation of pluggings.
An example is the linguis-tic observation that a predicate that encodes en-tence mood in many cases modifies all of the re-mainder of the proposition for a sentence.
Thus,pluggings where the predicate for sentence moodis subject to a leq constraint should not be con-sidered.
They would result in a resolved structureexpressing that the mood-predicate does not havescope over the remaining proposition.
This wouldbe contrary to the linguistic observation.5.2.2 Supp lementary  In fo rmat ionAs a supplement to semantic predicates, ouroutput contains various kinds of additional infor-mation.
This is caused by the overall architec-ture of the Verbmobil system which does not pro-vide for fully-interconnected components.
Thereis, e.g., no direct connection between the speechrecognizer and the component for semantic eval-uation.
Thus, our component has to pipe certainkinds of information (like prosodic values).
Ac-cordingly, our output consists of "Verbmobil In-terface Terms" (VITs), which differ slightly fromthe LUD-terms described above mainly in thatthey include non-semantic nformation.1355.3 Implementation StatusCurrently, the lexicon of the implemented systemcontains about 1.400 entries (full forms) and thegrammar consists of about 400 syntactic rules,of which about 200 constitute a subgrammar fortemporal expressions.
The system has been testedon three simplified ialogues from a corpus of spo-ken language appointment scheduling dialoguescollected for the project and processes about 90%of the turns the syntax can deal with.The system is currently being extended to covernine additional dialogues from the corpus com-pletely.
The size of the lexicon will then be about2500 entries, which amounts to about 1700 lem-mata.6 Conc lus ionsWe have discussed the implementation f a com-positional semantics in the Verbmobil speech-to-speech translation system.
The notions of mono-tonicity and underspecification were discussedand LUD, a description language for underspeci-fled discourse representation structures was intro-duced.
As shown in Section 3, the LUD descrip-tion language has a well-defined interpretation iDRT.
Differently from Reyle's UDRSs, however,LUD assigns labels to the minimal semantic ele-ment and may also be interpreted in other objectlanguages than DRT.The key part of the paper, Section 5, showedhow the linguistically sound LUD formalism hasbeen properly implemented in a (near) real-timesystem.
The implementation in Siemens' TUGgrammar formalism was described together withthe architecture of the entire semantic processingmodule of Verbmobil and its current coverage.7 AcknowledgementsWe are gratefully emdebted to Scott McGlashanand CJ Rupp who both worked on parts of theimplementation.
The results of the paper havegreatly benefitted from the cooperation with ourother collegues in Verbmobil, especially those atIBM and CSLI, as well as the ones working on themodules closest o ours in the processing chain.A number of people have contributed directly toparts of the work described in the paper: RonaldBieber, Hans-Ulrich Block, Michael Dorna, Man-fred Gehrke, Johannes Heinecke, Julia Heine,I)aniela Kurz, Elsbeth Mastenbroek, SebastianMillies, Adam Przepiorkowski, Stefanie Schachtl,Michael Schiehlen, Feiyu Xu, and several others.ReferencesHiyan Alshawi and Richard Crouch.
1.992.
Mono-tonic semantic interpretation.
In Proceedingsof the 30th Annual Meeting of the Associationfor Computational Linguistics, pages 32-39,Newark, Delaware, June.
ACL.
Also availableas SRI International Technical Report CRC-022, Cambridge, England.Hiyan Alshawi, David M. Carter, Bj6rn Gamb?ck,and Manny Rayner.
1991.
Translation byQuasi Logical Form transfer.
In Proceedings ofthe 29th Annual Meeting of the Association forComputational Linguistics, pages 161-168, Uni~versity of California, Berkeley, California, July.ACL.
Also available as SRI International Tech-nical Report CRC-021, Cambridge, England.Hans Ulrich Block and Stefanie Schachtl.
1992.Trace and Unification Grammar.
In Proceed-ings of the 1.~th International Conference onComputational Linguistics, volume 2, pages658-664, Nantes, France, July.
ACL.Johan Bos.
1995.
Predicate logic unplugged.In Proceedings of the 10th Amsterdam Collo-quium, University of Amsterdam, Amsterdam,Holland.Ann Copestake, Dan Flickinger, Rob Malouf, Su-sanne Riehemann, and Ivan Sag.
1995.
Trans-lation using Minimal Recursion Semantics.
Ms.,Stanford University, Stanford, California.Markus Egg and Kai Lebeth.
1995.
Semantic un-derspecification a d modifier attachment ambi-guities.
In Proceedings of the Annual Meetingof the German Linguistic Society, University ofDiisseldorf, Diisseldorf, Germany.Jeroen Groenendijk and Martin Stokhof.
1991.Dynamic Predicate Logic.
Linguistics and Phi-losophy, 14:39-100.Hans Kamp and Uwe Reyle.
1993.
From Dis-course to Logic: An Introduction to Modelthe-oretic Semantics of Natural Language, FormalLogic and DRT.
Kluwer, Dordrecht, Ifolland.Uwe Reyle.
1993.
Dealing with ambiguities by un-derspecification: Construction, representationand deduction.
Journal of Semantics, 10:123--179.Wolfgang Wahlster.
1993.
Verbmobil: Trans-lation of face-to-face dialogs.
In Proceed-ings of the 3rd European Conference on SpeechCommunication and Technology, pages 29-38,Berlin, Germany, September.1.36
