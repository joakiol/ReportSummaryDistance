A Computat iona l  Mode l  o f  Inc rementa lUt terance  Product ion  in Task -Or iented  D ia loguesKohji DohsakaNTT Basic Research Laboratories3-1 Morinosato-wakamiya,Atsugi, Kanagawa, 243-01 Japandohsaka@at om.
br l .
ntt.
j pAkira ShimazuNTT Basic Research Laboratories3-1 Morinosato-wakamiya,Atsugi, Kanagawa, 243-01 Japanshimazu@at om.
brl.
ntt.
jpAbstractThis paper presents a comtmtationalmodel of incremental utterance produc-tion in task-oriented ialogues.
Thismodel incrementally produces utter-antes to propose the solution of a givenproblem, while simultaneously solvingthe problem in a stepwise manner.
Evenwhen the solution has been partially de-termined, this model starts utterancesto satisfy time constraints where pausesin mid-utterance must not exceed a cer-tain length.
The results of an analysisof discourse structure in a dialogue cor-pus are presented and the fine structureof discourse that contributes to the in-cremental strategy of utterance produc-tion is described.
This model utilizessuch a discourse structure to incremen-tally produce utterances constituting adiscourse.
Pragmatic onstraints are ex-ploited to guarantee the relevance of dis-courses, which are evaluated by an utter-ance simulation experiment.1 IntroductionDialogues occur in real-time and so are suscep-tible to time constraints.
For example, dialogueparticipants must produce utterances under timeconstraints where pauses in mid-utterance mustnot exceed a certain length.
Moreover, partici-pants are inference-limited (Walker and Rainbow1994).
Due to time constraints and limits in ilffer-ence, dialogue participants cannot help producingutterances incrementally.
Incremental utteranceproduction is characterized like this: speakers pro-duce utterances while deliberating what to say~and refine what they will say while articulatingthe first part of their utterances.The incremental strategy of utterance produc-tion plays a crucial role in spoken dialogues in tworespects.
First, it helps speakers to satisfy timeconstraints on pauses.
This is crucial since lengthypauses imply the transition of a turn from the cur-rent speaker to others.
Second, it helps hearers toeasily understand utterances ince it enables thepiecemeal transmission of information.This paper presents a computational model ofincremental utterance production in task-orienteddialogues.
This model produces utterances to pro-pose the solution of a given problem while simulta-neously solving the problem in a stepwise manner.To satisfy time constraints on pauses, this modelstarts utterances even when the solution has notbeen fully determined and refines on the solutionduring the articulation of utterances.We present the results of an analysis of dis-course structure in a corpus of Japanese task-oriented dialogues and show that the fine struc-ture of discourse prevails in spoken dialogues andthe predominant discourse structure contributesto the incrementM strategy.
Based on such a dis-course structure, this model incrementally pro-duces utterances constituting a discourse.
How-ever, the incremental strategy is subject to gen-erating irrelevant discourses.
To guarantee therelevance of discourses, this model utilizes prag-matic constraints and a context model, which areevaluated in an utterance simulation experiment.2 Re la ted  ResearchRecent studies of human speech production (Lev-elt 1989) show that human speakers frequetatlyuse the incremental strategy of utterance produc-tion.
This paper is concerned with a computa-tional model of incremental utterance production.Computational models for the incrementalsyntactic formulation of a sentence were pro-posed (Kempen and HoenKamp 1987; De Smedtand Kempen 1991).
Although incremental syntac-tic formulation is an important issue, we do notaddress this here.POPEL  is a parallel and incremental nat-ural language generation system (Finkler andSchauder 1992; Reithinger 1992).
In POPEL,  the"what to say" component determines the contentto be generated and gradually carries it over tothe "how to say" component, which formulates asentence incrementally.
POPEL  can generate dis-304(1.)
aiko-ishida made desune / (2) itte/ <hai>PN to COl'ULA go(to The i iko- ishida station) (go)(3) sokode basu nandesuga / ~tothen bus COI'ULA FIId,I,;I((then b.s) (ullm)(d) morinosato-aoyama-ikitoiu <hal> basu gaPN nametI btls SuII.Iam-node /exist-CAUSAl,(as there is a Ires itamed morinosato-aoyama-iki)(5) sore ni notte-moratte / <hal>it OBJ gc't on(get ()it it)(Note: <ha l> shows that the dialogue partner in-serts an utterance to provide acknowledgnmnt.
)Figure 1: Part of transcription of dialoguecourses using eontextuM information, tlowever,it d(les not allow for the line structure ()f dis-course prevailing in st)oken diMogues.
We l)resenta eomlmtational model of incremental utterancel)roduetion using the line structure of discourse.Carletta, Caley, and Isard (1993) proi)osed anarchitecture for time-constrained la.nguage pro-duction.
As for phenomena peculiar to st)oken di-alogues, they focused on tlesil;?Ltion an(l self-tel)air.Although our model ca,n 1)roduce filler terms andrepair prior utterances, our chief concern is thetine structure of spoken discourse, which is closelyrelated to incremental utterance pro(tnction.3 Discourse  S t ruc ture  Ana lys i sWe analyzed the discourse structure in a corpusof task-oriented iah)gues, which were collected bythe folh)wing method.
The subjects were ninetynative Japaimse.
In each diah)gue, two subjects,N and E, were ~Lsked to converse by telephoneto lind a solution to the l)roblem of how N couldget from one place to another.
Subjects were cho-sen such that E had enough knowledge to solvethe problem but N did not.
Eigilty dialogueswere recorded and transcribed.
Fifteen dialogueswere randomly chosen for analysis.
The discoursestructure was analyzed in terms of informationunits and discourse relations.a.1 Ana lyz ing  i n fo rmat ion  un i t sSpeakers organize tile information to t)e conveyedto information units (Halliday 1994), which arethe units for traitsmission of information.
The in-formation units (IKs for short) are regarded asminilnal components of discourse structure.
Weassume that IUs a,re realized by grammatical  lie-vices: a clause realizes an 1 U, an intel jectory wordrealizes an 1U, and a tiller term shows the end ofan IU.
Figure 1 shows pa.rt of the transcription ofa dialogue where a diahlgue participant prol)osesa domMn l)lan.
Tile symbol "/" separates the IUs.Table 1: Frequency distribution for information unitsClause 929Interjectory word 665PP  or NP 279Conjun(:tion 84Sequence of PPs or NPs 41Others 14Total 2012Tal)le 1 shows the frequency distribution for tim/~ramnlatiea\] (:ategoric's of IU, where NP and I 'Pmean noun 1)hrase and 1)ostl)ositional phrase.
'.\['heaverage nmnber of NPs in an IU as a clause, NP,Pl ' ,  or sequen(-e of NPs and Pl?s is 1.01 in thetifteen dialogues.
The vm'ianee is 0.28.This reslflt indicates that small IUs are fre-quently used.
For example, althougil IU (1) inFigure 1 descril)es only a part of a domain ac-tion, it is regarded as ail IU siil.ce it has a e(/pula("desu") an(1 a sentenee-linal t)article ("ne").3.2 Ana lyz ing  d i scourse  re la t ionsDiscourse relations between adjacent discoursesegments w(,.re examined.
A (liscourse segmentis an IU or a sequence of IUs.
For discourse re-ta.tions, we here adot)ted those used in Rhetori-(:al Structure Theory (M~nn and Thomt)son 1988)and tlere followed Hovy (1993) to classify theminto semantic and interpersonal ones.
Figure 2shows discourse relations tllat appear in the dis-course displayed in Figure 1.
The small IUs are hi-erarchically related.
This results ill the fine struc-ture of diseom:se.Table 2 shows tile frequency distributions fordiscourse relations in tile fifteen diak)gues.
Let usconsider the role that tile l)redominant relations,Elaboration, Circumstance, and Motivation, l)lay intile inereinental strategy of utterance t)roduction.
*First, Elaboration is exploited to describe domainactions, states or objects in a piecemeal fashion.Elaboration enables peakers to distribute the con-tent to be conveyed among different lUs.
'_Ptfis re-lation is useful for the incremental strategy sinceit allows speakers to begin uttering even when thecontent has not been fully determined.Second, Circumstance is the relation betweentwo segments, a nucleus and a satellite.
The m>eleus describes a domain action or state.
Thesatellite describes the circumstances where the m>cleus is interpreted, such as the preconditions ofa domain action.
There are 41 cases where thesatellite describes a precondition of a domain ac-tion, which amounts to 68% of all cases.
The con-stituents of a domain action are often referred toin its preconditions.
We see ~ typical ease in tilerelation l)etween (4) and (5) in Figure 1.
(5) de-scribes the action of getting on a bus and (4) de-1We found no direct reh~tionship between Sequenceand the increme.nt~d strategy.305Sequence / Circumstance, Motivation /Elaboration Elaboration(1) (2) (3) (4) (5)Figure 2: Discourse relations in Figure 1Table 2: Distribution for discourse relationsElaboration 305Sequence 74Cirucumstance 60Result 25Condition 25Purpose 2Contrast 1(a) Semantic relationsMotivation \ [ i  l BackgroundEvidenceInterpretationConcessionEnablement(b) Interpersonalrelationsscribes the existentional status of the bus ms theprecondition of the action.
By utilizing this rela-tion, speakers can distribute the content of a do-main action between two IUs.
They can pick upa constituent of an action and describe it beforedescribing the whole content of the action.
ThusCircumstance is useful for the incremental strategy.Finally, Motivation is mainly used for describinga domain action as a nucleus and motivating ad-dressees to adopt the action by presenting a factas a satellite.
In typical cases, speakers motivateaddressees to adopt an action by asserting thatits precondition is satisfied.
In such cases, Moti-vation occurs together with Circumstance and con-tributes to the incrementa.1 strategy in the sameway as Circumstance.4 The ModelAs shown in Figure 3, this model is composed offive modules: a problem solver, an utterance plan-ner, an utterance controller, a text-to-speech on-verter, and a pause monitor.
The problem solvermakes domain plans that solve a given problem.The utterance planner makes utterance plans topropose domain plans.
Pragmatic onstraints anda context model are used to generate relevant dis-courses.
According to utterance plans, the ut-terance controller sends linguistic expressions totile text-to-speech converter.
The pause monitorwatches the length of pauses and signals the utter-ance planner and controller when the pause lengthexceeds a given length.These modules work in parallel.
Both domainplans and utterance plans are made in a stepwisemanner using the hierarchical planning mecha-nism (Russel and Norvig 1995: Chap.12).
Thismodel starts to make an utterance plan before afully determined omain plan has been obtained.When a pause exceeds the time limit, the utter-ance planner sends the utterance controller an ut-Input: a domain problemParallel Modules /\[ ProlflcnlSolvcr \] \[~f Pragmatic ~'~k,, ConstraintsJ domain plans ~ .
.
/ " \ ]\[- Utterance Planner \]i Context Modelutterance plansUtterance ControllerexpressionsOutput: utterancesFigure 3: Model overviewterence plan obtained within the time limit.
Adomain plan is refined during the planning and ar-ticulaton of utterances.
Based on a refined domainplan, the utterance plan is replanned.
When theutterance controller is not given utterance planswithin the time limit, it produces a filler term.5 Pragmat ic  Constra intsPragmatic constraints are required to guaranteethe relewmce of discourses.
This model exploitsthe following pragmatic onstraints.
(cl) Avoid conveying redundant information.
((:2) Pronominalize objects in the focus of atten-tion (Grosz and Sidner 1986).
(c3) Be relevant according to the attentionM state.
?\['he context model records the information thathas been conveyed and tracks the attentionalstate.
For example, consider the domain actionof moving from one location 11 to another 12.
Todescribe such a domain action with verbs such as"iku(go)", It must be in focus.
Otherwise, the de-scription is irrelevant.
After such an action hasbeen described, 12 is in the focus.
Moreover, anyobject marked as a topic becomes a focused one.6 Prob lem SolvingWe outline the problem solver using a sampleproblem of how to move from the Musashino Cen-ter to the Atsugi Center on the map in Figure 4.Tile problem solver first makes an abstract do-main plan, which is a sequence of three actions el,a2, and a3 : moving from the Musashino Centerto the nearest station by bus, moving to the sta-tion nearest he Atsugi Center, and then movingto the Atsugi Center by bus.
This plan is writtenas (rl).
The contents of these actions are writtenas (r2).
Expression cont(X, Y) means that thecontent of X is represented as a set Yof literals.
(rl) plan(\[el, a2, a3\])(r2) cont(al,  {type(el, move), source(el, xl),manner(el ,  x2), dest(al, x3)})cont(xl, {type(M, building),named(xl,  "musashino senta~")})eont(x2, {type(x2, bus)})306Musashino CenterMitaka KichijojiW""~ ...~hinjukuj .~-Shimokitazawa /x  "Zo0a  uL4Atsugi CenterFigure 4: Sample mapcont(x3, {type(x3, station), nearest(x3, xl)})cont(a2, {type(a2, move), source(a2, x3),dest(a2, x4)})cont(aa, {type(a3, inove), source(a3, x4),m  n.er(a3, xS), de t(a3, x6)})cont(x4, {type(x4, station), nemest(x4, x6)})cont(x5, {type(x5, bus)})cont(x6, {tytte(x6, building),named(x6, "atsugi sentaa") })The problem solver tries to make a more con-crete plan.
When more tha,n one domain 1)lan ispossible, it chooses tile domain i)lan that requiresthe shortest execution time.
In this domain, thedomain plan is a sequence of actions a/t, a5, a6 andaT: moving from the Musashino Center to Kichi-joji station by bus, moving to Shimokitazawa sta-tion by tile Inokashira IAne, moving to Aiko-ishidastation by the Odakyu Line, ~md then moving tothe Atsugi Center by bus.
Part of the content ofthis plan is represented as follows.
(r3) phm(\[a4, a5, a6, a71)(r4) cont(a4, {type(M, move), source(a4, xl),manner(a4, x2), dest(a4, x7)})cont(xT, {type(xT, station),named(x7, "kichijoji" )}) ......7 Utterance PlanningAn utterance plan is a sequence of colnmnnieativeactions that achieves a communicative goal.
It isrefined in a stepwise manner.
A sequence of sur-face communicative actions corresponding to theuttering of linguistic ext)ressions is finally planned.7.1 Communicat ive  goalsGeneration systems engaging in dialogues mustrecord communicative goals related to commu-nicative actions (Moore and Paris 1994).
Com-municative goals used here are:?
persuaded-plan(P): dialogue partner is per-shaded to adopt dommn plan P.?
persuaded-act(A): dialogue partner is per-suaded to adopt domain action A.?
described-event(E, C, At): domain event E isdescribed as an event having content C an(tattitude At toward E is also described.?
dc.scribed-obj(O, 6): domain object O is de-scribed ~s an object having content C.?
dcscribcd-them.a-rel(l?~, O, E): thematic rela-tion It is described, which domain object Obears to domain event E.When the domain t)lan (rl) is obtained, (r5) isgiven as the initiM communicative goal.
(1"5) persuadeA-plan(\[al, a2  a3\])7.2 Surface co inmunicat ive  act ionsSllrfa(;e commnnicativ(, actions used here are:?
sv.rfacc-desc-cvent(E, C, At): utter expres-sions tO descrit)e, domain event E iLq all eventhaving content C and des(-ribe attitude At to-ward E.?
surface-desc-obj(O, C, It): utter expressions todescribe doinain object O as an object havingcontent C and bearing thenmtic relation R toa certain event.7.3 P lann ing  ut terances  based  on t i lefine s t ructure  of  d iscourseAn utterance pbm is elaborated using actionschemata nd decomposition methods.
An actionschema consists of an action description, appli-cability constraints and an effe(:t. 2 It defines acommunicative action.
A decomposition i etho(lconsists of an action description, applieal)ility con-straints and a plan.
It specifies how an action isdecolnposed to a detailed phm.The following schema (r6) defines the commu-nic;ttive action of proI)osing a domain plan by us-ing Sequence.
The decomposition method (rT)specifies how the ~mtion is decomposed to a se-quence of finer actions.
:~(1"6) Aet(propose-acts-in-seq( * P),Constr: plan( .
P),Effect: persuaded-plan( * P) )(r7) Decomp(propose-acts-in-seq(\[*Act l *Rest\]),Constr: *Rest ?
\[\],Plan: \[aehieve(persuaded-aet( * Act) ),propose-acts-in-scq( * Rest ) \] )In these representations, achieve(P) designatesan action that achieves goal P. Notation \[H I L\]specifies a list, where H is the head of the list andL is the rest.
Symbols starting with "*" representvariables.
By applying (r6) and (r7) to the initialcommunicative goal (rS), the following utteranceplan is obtained:(r8) achieve(pers,laded-act ( l)),achieve(persuaded-act(a2)),achieve(persuaded-act(a3)).2In this paper, we do not consider a preconditionfor an action schema.aWe have omitted other method to avoid intinitereeursive application of the method (r7).307(r9) Act(propose-act@A), Effect: persuadcd-act( * A) )(rl0) Decomp(proposc-act( * A ), Constr: cont( , A, *C), Plan: achicvc( dcscribcd-cvcnt( , A, ,C, proposal))(rl 1)Act(describc-cvcnt-by-elaboration(,E, *C, *At), Effect: described-cvcnt( , E, *C, *At))(r12) Decomp( describc-event-by-elaboration( , E, *C, *At), Constr: * Thema E *CA*Thcma =.. \[*R, *E, *0\] A *R ?
type A cont(*O, ObjC) A *Rest = *C - {*Thema}plan: \[ chi  e( descr  cd-obj( ,O, *ObjC) ), *R, *0, *E) ),ach, ie e( d sc i ed-e e, t( , E, , Re  t, , At  ) ) \] )(r13) Act( describe-obj-with-thcma( *O, *C, *R, *E),Effect: dcscribcd-obj( *O, *C)A described-thema-rcl( ,R, *0, *E) )(r14) Decoinp(dcscribe-obj-with-thcrna(,O, *C, *R, *E), Plan: surface-desc-obj(,O, *C, *R))(r15) Act( dcscribc-cvcnt-type( ,E, *C, *At), Constr: *C = {type(*E, *T)},Effect: describcd-cvcnt( , E, *C, *At))(r16) De~comp( describc-event-type( , E, *C, *At), Plan: surface-desc-event( * E, *C, *At))Figure 5: Action schemata nd decomposition methods for proposing domain action(r8) is decomposed by applying the actionschemata nd decomposition methods hown inFigure 5.
These schemata define communicativeactions for proposing a domain action while elabo-rating the content of the action in a stepwise man-ner.
They reflect the results of a discourse struc-ture analysis, which show that speakers tend todistribute the constituents ofa domain action intodifferent IUs by using EI,ABORATION.
In (r12),notation F(X, 17,...) =.. \[F, X, Y,...\] is used fordecomposing term F(X, Y,...) into relation F andarguments X, Y, ....When domain objects are linguistically realizedby the surfaee-desc-obj in (r14), pragmatic on-straint (c2) is exploited to t)ronominalize focusedobjects.
In addition, according to constraint (c3),the objects that are not in focus need to be topi-ealized if they must be in focus.By applying these schemata to the first actionin (r8), the following utterance plan is obtained.Thematic relations are chosen in default orderwhen (r12) is applied.
(r17)surface-desc-obj(xl, {type(xl, building),named(x1, "mnsashino sentaa")}, source),surface-desc-obj(x2, {type(x2, bus)}, manner),surface-desc-obj(x3, {type(x3, station),nearest(xa, xl)}, dest),surface-desc-event(al, {type(a1, move)},proposal).According to utterance plan (r17), this modelcan start the following utterances to satisfy thetime constraints before Obtaining a concrete do-main plan such as (r3).
(ul)musashino sentaa kara-wa desune/PN from-Topic COPULA(from the Musashino Center)basu de/ mo~ori-no-eki made/ ikimasu/bus by nearest station to go(by bus) (to the nearest station) (go)For brevity, we have omitted action schemataand decomposition methods for utterance plan-ning using MOTIVATION and CIRCUMSTANCE.7.4 Replann ing  ut terance  plansWhile planning and articulating utterances usingan abstract domain plan, a more concrete domainplan is being made.
When a more concrete do-main plan is obtained, an utterance plan is re-planned.
For example, consider the case wherea concrete domain plan, (r3), is obtained duringthe production of utterance (ul).
The followingutterance plan is replanned:(r18) surface-desc-obj(xl, {type(x1, building),named(M, "nmsashino sentaa")}, source),surface-desc-obj (x2,{type(x2, bus)},manner),surface-desc-obj(x7, {type(x7, station),named(x7, "kichijoji")}, dest),surface-desc-event (a4,{type(a4, move) },proposal).We assume that plan (r18) is obtained whenthis model finishes uttering "moyori-no-eki made"in utterance (ul).
Then (ul) is interrupted andutterances follow based on (r18).
Consequently,the following utterances are produced:(u2)musashino sentaa kara-wa desune/PN from-Toplc COPULA(from the Musashino Center)basu de/ moyori-no-eki made/bus by nearest station to(by bus) (to the nearest station)kichijoji made desune / ikimasu /PN to COPULA go(to Kichijoji station) (go)In the above, the redundant information is notrestated according to pragmatic onstraint @1).Self-repair occurs: "moyori-no-eki made" is re-placed by "kichijoji made".8 Exper imentsThis model has been implemented in Com-mon Lisp.
A logical constraint unification sys-tern (Nakano 1991) is used in the planners.
Thedomain planner includes 18 action schemata nd16 decomposition methods.
The utterance plan-308(el) Musashino sentaa kara-wa desune /PN front-Topic, COPULA(from the Musashino Center)(e2) ~to Kichijoji made / dete-kudasai /FILI,F,I~ PN to go-t)le~se(crm to Kichijoji station) (please go)@3) ~to desune sorekara inokashira-sen deFILLER then PN by(erm then by the Inokastfira Line)(e4) odakyu-sen hi/ norikaete /PN for change((:hange train for the Odakyu Line)basu de / moyori-no-eki made /bus by nearest station to(by Ires) (to the nearest station)desune / shimokitazawa made /COI'UI,A PN to(to Shimokitazawa station)aiko-ishida made / ikimasu / .....PN to go(to Aiko-ishida station) (go)Figure 6: Discourse generated by implemented systemner includes 16 action schemata nd 16 decom-position methods.
We ewduated pragmatic on-straints in an utterance simulation experiment,where discourses generate.d with the constraintswere contpared with those generated withoutthem.
A map including 120 h)cations uch as sta-tion and 25 railroad lines w~s used.
The pauselength limit was ().5 see.When pragmatic onstraints were used, this im-plemented systeIn generated relevant discourses.Figure 6 shows the discourse generated when theproblem of inoving frolIl the Mus~ksliino Center tothe Atsugi Center was given.
Filler terms such asgto were produced to satisfy the time constraints.Pragmatic onstraint (el) was used ill (e2), ~Uq ex-p la ined  in section 7.4.
Constraint (c2) was usedto zero-proImminalize stations in the focus of at-tention.
Constraint (e3) was used in ((:1) to top-icalize the Musashino Center.
Topicalization wasalso used in other cases where the system mustshift the focus of attention to the location al-ready described in the preceding discourse.
Suchcases happened when the system started utter-antes based on an abstract domain I)lan, took along time to obtain a more concrete plan, and thenelaborated on a route from a location that wasnot in focus based on the concrete plan.
With-out prt~gmatic constraints, the system generatedirrelevant and excessively redundant discourses.9 Conc lus ionWe presented a computational model of producingutterances incrementally so as not to make exces-sively long pauses.
We presented the results of ananMysis of discourse structure and showed thatspeakers frequently use small information unitsand exploit the fine structure of discourse thatcontributes to the increlnentM production strat-egy.
This model can utilize such a discourse struc-ture to incrementally produce utterances accord-ing to pragmatic onstraints.
These were ewdu-ated by an utterance simulation experiment.ReferencesCarletta, Jean; Caley, Richard; and Isard, Stephen.itte /go(go)(1993).
A system architecture for simulating time-constrained language production.
Research PaperItCRC/RP-43, University of Edinburgh.I)e Smedt, Koenraad, and Keinpen, Gerard.
(1991).Segment grammar: A fornmlism for incrementalsentence generation, in Natural Language Gen-eTnlion in ArtiJieial Intelligence and Computa-tional Linguistics.
Edited by Cdcile L. Paris,William R. Swartout, and William C. Mann,Khlwer Academic Publishers, 329-349.Finkler, ~Volfgang, and Schauder, Ann.
(1992).
Effectsof incrementM output on incrementM natural an-guage generation, ht Proc.
of 10th ECAI, 505-507.Grosz, Barbara J., and Sidner, Candace L. (1986).
At-tention~ intentions~ and the structure of discourse.Computational Linguistics, 12, 175-204.lIalliday, M. A. K. (1994).
An Introduction to l,'unc-lional Grammar.
Fdward Arnold.\]lovy, F, duard II.
(\] 993).
Automated iscourse gener-ation using discourse structure relations.
ArtificialIntelligence, 63, 34t-385.Kempen, Gerard, and Iloenkamp, Edward.
(1987).
Anincremental procedural grammar for sentence for-mulation.
Cognitive Science, 11, 201-258.Levelt, Willem J. M. (1989).
Speaking: Prom Inten-tions to Articulation.
The MIT Press.Mann, William C., and TholnI)son , Sandra A.
(1988).Rhetorical structure theory: Towards a functionaltheory of text organizatiou.
Text, 8(3), 243-281.Moore, Johanna D., and Paris, Cdcile L. (1994).
Plan-ning text for advisory dialogues: capturing inten-tional aim rhetorical information.
ComputationalLinguistics, 19(4), 651-694.Nakano, Mikio.
(1991).
Constraint projection: An ettl-cient treatment of disjunctive feature descriptions.In Proc.
of 29th ACL, 307-314.Reithinger, Norbert.
(1992).
The performance of anincrementM generation for multi-modM dialog con-tributions.
In Aspects of Automated Natural Lan-guage Generation.
Edited by Robert Dale, Ell-uard tlovy, l)ietmar RSsner, and Oliviero Stock,Springer-Verlag, 263-276.Russel, Stuart, and Norvig, Peter.
(1995).
ArtificialIntelligence: A Modern Approach.
Prentice IIall.Walker, Marilyn A., and Rainbow, Owen.
(1994).
Therole of cognitive modeling in achieving communica-tive intentions.
In Proe.
of 7th International Con-ference on Natural Language Generation.309
