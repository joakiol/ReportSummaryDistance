Proceedings of the Linguistic Annotation Workshop, pages 164?167,Prague, June 2007. c?2007 Association for Computational LinguisticsMultiple-step treebank conversion: from dependency to Penn formatCristina BoscoDipartimento di Informatica, Universita` di TorinoCorso Svizzera 18510149 Torino - Italiabosco@di.unito.itAbstractWhilst the degree to which a treebank sub-scribes to a specific linguistic theory limitsthe usefulness of the resource, the availabil-ity of more formats for the same resourceplays a crucial role both in NLP and linguis-tics.
Conversion tools and multi-format tree-banks are useful for investigating portabilityof NLP systems and validity of annotation.Unfortunately, conversion is a quite complextask since it involves grammatical rules andlinguistic knowledge to be incorporated intothe converter program.The paper focusses on a methodology fortreebank conversion which consists in split-ting the process in steps corresponding tothe kinds of information that have to be con-verted, i.e.
morphological, structural or re-lational syntactic.
The advantage is the gen-eration of a set of parallel treebanks fea-turing progressively differentiated formats.An application to the case of an Italiandependency-based treebank in a Penn likeformat is described.1 IntroductionThe usefulness of a treebank can be potentially lim-ited by the degree to which it subscribes to a spe-cific linguistic theory, and when a new annotation isdevised which employs a different linguistic frame-work than a standard, the problem of how to relatethe syntactic schemes to one another arises.
The in-creasing availability of multi-format treebanks (e.g.
(Bick, 2006)) and the automatic conversion fromsome formats to others, e.g.
(Collins et al 1999;Bahgat Shehata and Zanzotto, 2006), are attempts toovercome this problem.The automatic conversion of a treebank plays animportant role in NLP and linguistics.
First, it in-creases the exportability of the treebank, making us-able tools developed for other resources.
Second,it underlies a full check on correctness and consis-tency of the treebank annotation.
Moreover, it isan explicit comparison among formats and linguis-tic frameworks.
Therefore, a conversion is crucialfor overcoming the limits imposed by data in for-mats that realize different grammatical theories tovery important activities such as parsing evaluationand comparative testing of the adequateness of a rep-resentation for particular linguistic phenomena, lan-guages and/or tasks.
For instance, the availability ofparallel annotations, and among them one in Pennformat, can be of some aid in investigating the irre-producibility of the state-of-the-art results on tree-banks or languages other than Penn and English,as empirically demonstrated by, e.g., (Collins et al1999) on Czech, (Dubey and Keller, 2003) on Ger-man, (Corazza et al 2004) on Italian.The paper, first, presents a methodology for the con-version, then an application of the methodology tothe conversion of a dependency-based treebank intoa Penn-like format, and finally some remarks on theimplementation.2 On the conversion methodologyThe conversion of a treebank, annotated with someformat A, into format B consists in a simple filtering164and string manipulation only when A and B both fol-low the same linguistic framework.
Elsewhere theconversion and development of parallel annotationsis a challenging task, which involves grammaticalrules and linguistic knowledge to be incorporatedinto the converter programs (see e.g.
(Musillo andSima?an, 2002) (Bick, 2006)).
Nevertheless, par-allel annotations which employ different linguisticframeworks may serve as a suitable infrastructurefor comparisons among them.
In fact, the defini-tion of a conversion process is in itself a compari-son between A and B, since it involves explicit as-sumptions about how A and B relate, and a virtuallycomplete and correct mapping which translates ev-ery analysis in A into the corresponding analysis inB (Musillo and Sima?an, 2002).We propose a methodology that consists in organiz-ing the conversion in steps to be performed in cas-cade.
Each step outputs a new annotation format,which differentiates from the previous one only withrespect to a single kind of knowledge, e.g.
morpho-logical, structural or functional syntactic.
The mainadvantage is in making available a set of parallel an-notations for further use too.In the next part, we describe the application of thismethodology to the conversion of the Turin Univer-sity Treebank (henceforth TUT), which exploits adependency-based functionally rich annotation, intoa Penn-like format.3 Converting TUTTUT is a project for an Italian treebank that fea-tures a dependency-based annotation following thedependency grammar major tenets (Hudson, 1984).The annotation is centred on a notion of morpho-syntactic-semantic grammatical relation which aimsat represent the syntax-semantics interface by meansof the Augmented Relational Structure (Bosco,2004).
TUT currently includes 2.000 sentences (seeat http://www.di.unito.it/?tutreeb/) where 200 differ-ent dependency relations are annotated.
The figure1 a) shows an example of TUT tree.Other Italian resources1 implement, like TUT, par-ticular representation formats and subscribe to spe-cific linguistic frameworks, thus strongly limiting1Two other larger Italian treebanks exist: Venice ItalianTreebank (VIT) (Delmonte, forthcoming) and Italian SyntacticSemantic Treebank (ISST) (Barsotti et al 2001)activities such as the application of state-of-the-artparsers and parsing evaluation for this language.The conversion of TUT in a Penn-like format isa crucial step towards the exportability of the re-source, but also a first attempt at overcoming theselimits by choosing as a further output a format ofwidespread use in training, testing and evaluating.Moreover, since the process is fully deterministic,even if currently applied on a small corpus, the con-version is in itself a preliminary validation of the re-source and a demonstration that TUT annotation isexpressive at least as Penn.In the next sections, we show the translation of de-pendency into constituency trees and the manage-ment of differences in PoS tagging, structural syn-tactic, and syntactic-semantic relations faced duringthe conversion.
For detailed information about theconversion of specific linguistic phenomena see athttp://www.di.unito.it/?tutreeb/noteparallele.zip.3.1 First step: morphologySince Italian is inflectionally richer than English,TUT PoS tagset is richer than that of Penn(see at http://www.di.unito.it/?tutreeb/syntcat-22-7-02.doc), but we reduced it including only infor-mation that Penn makes explicit too, as usualin similar cases, see e.g.
(Collins et al 1999)and http://www.coli.uni-sb.de/sfb378/negra-corpus/.The major differences with respect to Penn concerntags of Verbs, which include fine-grained tempo-ral information and are organized in three classes(Modal, Auxiliary, Main), rather than two like inPenn (Modal and non-Modal).
Moreover, a fine-grained variety of Adjectives and Pronouns enablesthe recovery of information such as e.g.
the ownerof an object (possessive Adjective).The output of this first step includes compact tagswhere features are expressed by short strings, likein (Collins et al 1999).
The following are exam-ples of TUT PoS native vs reduced tags: for a com-mon Noun ?nome?
is (NOME NOUN COMMONMSING) reduced in (NOU?CS); for the main infiniteVerb ?entrare?
is (ENTRARE VERB MAIN INFI-NITE PRES INTRANS) reduced in (VMA?IN).3.2 Second step: structural syntaxThe main issue in this step is the conversionof dependency trees into Penn-like trees, i.e.165Figure 1: TUT (a), Constituency-TUT (b), Augmented-Penn (c) and Penn-like (d) representations of sen-tence ALB-4 ?Il governo di Berisha appare in difficolta`?
(The government of Berisha appears in trouble)constituency structures implementing a minimalprojection strategy.
It is approached in two sub-steps: by first converting the TUT trees into astandard linguistically motivated Xbar form (i.e.Constituency-TUT), and then into Penn format (i.e.Augmented-Penn), but both including the functionalsyntactic information as TUT, i.e.
the grammaticalrelations (annotated on constituents).Constituency-TUT is a TUT-oriented constituency-based annotation that introduces in TUT trees thetypes of the multiple words syntactic units (e.g.
VPand S).
Each terminal category X corresponds to aword of a TUT tree, and projects into non-terminalnodes, namely the intermediate (Xbar) and maximal(XP) projections of X.
The distinction betweencomplements and adjuncts is here structurallymarked.Augmented-Penn instead features a format struc-turally isomorphic to Penn, but more functionallyannotated.
It applies to the Constituency-TUT struc-tures the minimal projection strategy2, and managesthe smoothing of structures conceptually different inTUT and Penn, i.e.
those of Determiners, auxiliaryVerbs and relative clauses.
In figure 1 you cansee the same sentence in TUT, Constituency-TUT,Augmented-Penn and Penn format.The conversion from dependency to constituencyis not affected by the typical problem of non-projective structures, since TUT represents themthrough projective structures exploiting null ele-ments.
In dependency TUT, empty nodes also markdropped subjects, and Constituency-TUT exploits2Each terminal category projects only when the constituentincludes more than one word166null elements for marking subjects which occur innon standard position with respect to the Verb (i.e.extraposed).3.3 Third step: syntactic-semantic relationsWhile Penn features a description of relations basedonly on a single component, TUT features an ex-plicit, systematic annotation of three componentsin each relation.
Moreover, Penn includes a lowernumber of values for each component than TUT3and in various cases the Penn tags do not enable fine-grained distinctions as TUT.We applied the original Penn tags that can be mean-ingful for Italian looking for correspondences be-tween TUT and Penn relations (e.g.
using the re-lation LOC for all TUT LOC+ relations)4.
Never-theless, the multi-step methodology makes availablealso a Penn-like format almost functionally rich asTUT, i.e.
Augmented-Penn5.4 The converterThe five modules of the converter are: Mreduc forthe reduction of PoS tags; Mctu which converts inthe Constituency-TUT format; Maugp, which con-verts Constituency-TUT in Augmented-Penn; Mpen,which takes Augmented-Penn and outputs Penn;Mpar that generates the parenthetical notation of theoutput.Mctu manages the conversion from dependencyto constituency by implementing the algorithm in(Xia, 2001).
It recovers the types of phrases that(the grammatical category of) each node of the de-pendency tree projects by using the linguistic knowl-edge stored in dedicated tables.The converter follows a lowest attachment strategy,i.e.
the projection of a dependent attaches to a pro-jection of its head as lowly as possible, but, in con-trast with (Xia, 2001), it pursues a maximal rather3While Penn annotates 2 morpho-syntactic, 11 syntactic and7 semantic relations, TUT features 40 morpho-syntactic, 55functional-syntactic and 88 semantic items for building rela-tions.4The conversion from NEGRA to Penn maintains in-stead the NEGRA relations, see at http://www.coli.uni-sb.de/sfb378/negra-corpus/.5The relations linking terminal nodes encompassed in a sin-gle constituent in Augmented-Penn are deleted during the con-version in this latter format.than minimal projection heuristics, i.e.
a categoryalways projects into intermediate and maximal pro-jections.5 ConclusionsThe methodology for treebank conversion here pre-sented splits the process in steps, which correspondto the kinds of annotated linguistic knowledge thathave to be converted.
Since each step outputs a newannotation format, the advantage is the generation ofset of parallel treebanks.The application of the methodology in the conver-sion from a small Italian dependency-based treebankto a Penn like format is described.ReferencesA.
Bahgat Shehata and F.M.
Zanzotto.
2006.
Adependency-based algorithm for grammar conversion.Proc.
of LREC ?06F.
Barsotti and R. Basili et al 2001.
The ItalianSyntactic-Semantic Treebank: Architecture, Annota-tion, Tools and Evaluation.
Kluwer, Dordrecht.E.
Bick.
2006.
Turning a dependency-based treebankinto a PSG-style constituent treebank.
Proc.
of LREC06.C.
Bosco.
2004.
A grammatical relation system for tree-bank annotation.
PhD thesis, University of Torino.M.
Collins, J. Hajic, L. Ramshaw, and C. Tillmann.
1999.A statistical parser of Czech.
Proc.
of ACL?99.A.
Corazza, A. Lavelli, G. Satta, and R. Zanoli.
2004Analyzing an Italian treebank with state-of-the-art sta-tistical parser.
In Proc.
of TLT-2004.R.
Delmonte.
forthcoming.
Strutture sintattichedall?analisi computazionale di corpora di italianoFranco Angeli, Milano, Italy.A.
Dubey and F. Keller.
2003.
Probabilistic parsingfor German using sister-head dependencies.
Proc.
ofACL?03.R.
Hudson.
1984.
Word Grammar.
Basil Blackwell,Oxford and New York.G.
Musillo and K. Sima?an.
2002.
Towards comparingparsers from different linguistic frameworks.
An infor-mation theoretic approach.
Proc.
of Workshop BeyondPARSEVAL.F.
Xia.
2001.
Automatic grammar generation from twodifferent perspectives.
PhD thesis, University of Penn-sylvania.167
