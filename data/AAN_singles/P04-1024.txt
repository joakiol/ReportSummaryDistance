Finding Ideographic Representations of Japanese Names Written in LatinScript via Language Identification and Corpus ValidationYan QuClairvoyance Corporation5001 Baum Boulevard, Suite 700Pittsburgh, PA 15213-1854, USAyqu@clairvoyancecorp.comGregory Grefenstette?LIC2M/LIST/CEA18, route du Panorama, BP 6Fontenay-aux-Roses, 92265 FranceGregory.Grefenstette@cea.frAbstractMultilingual applications frequently involvedealing with proper names, but names areoften missing in bilingual lexicons.
Thisproblem is exacerbated for applicationsinvolving translation between Latin-scriptedlanguages and Asian languages such asChinese, Japanese and Korean (CJK) wheresimple string copying is not a solution.
Wepresent a novel approach for generating theideographic representations of a CJK namewritten in a Latin script.
The proposedapproach involves first identifying the originof the name, and then back-transliterating thename to all possible Chinese characters usinglanguage-specific mappings.
To reduce themassive number of possibilities forcomputation, we apply a three-tier filteringprocess by filtering first through a set ofattested bigrams, then through a set of attestedterms, and lastly through the WWW for a finalvalidation.
We illustrate the approach withEnglish-to-Japanese back-transliteration.Against test sets of Japanese given names andsurnames, we have achieved averageprecisions of 73% and 90%, respectively.1 IntroductionMultilingual processing in the real world ofteninvolves dealing with proper names.
Translationsof names, however, are often missing in bilingualresources.
This absence adversely affectsmultilingual applications such as machinetranslation (MT) or cross language informationretrieval (CLIR) for which names are generallygood discriminating terms for high IR performance(Lin et al, 2003).
For language pairs withdifferent writing systems, such as Japanese andEnglish, and for which simple string-copying of aname from one language to another is not asolution, researchers have studied techniques fortransliteration, i.e., phonetic translation acrosslanguages.
For example, European names areoften transcribed in Japanese using the syllabickatakana alphabet.
Knight and Graehl (1998) useda bilingual English-katakana dictionary, akatakana-to-English phoneme mapping, and theCMU Speech Pronunciation Dictionary to create aseries of weighted finite-state transducers betweenEnglish words and katakana that produce and ranktransliteration candidates.
Using similar methods,Qu et al (2003) showed that integratingautomatically discovered transliterations ofunknown katakana sequences, i.e.
those notincluded in a large Japanese-English dictionarysuch as EDICT1, improves CLIR results.Transliteration of names between alphabetic andsyllabic scripts has also been studied for languagessuch as Japanese/English (Fujii & Ishikawa, 2001),English/Korean (Jeong et al, 1999), andEnglish/Arabic (Al-Onaizan and Knight, 2002).In work closest to ours, Meng et al(2001),working in cross-language retrieval of phoneticallytranscribed spoken text, studied how totransliterate names into Chinese phonemes (thoughnot into Chinese characters).
Given a list ofidentified names, Meng et al first separated thenames into Chinese names and English names.Romanized Chinese names were detected by a left-to-right longest match segmentation method, usingthe Wade-Giles2 and the pinyin syllable inventoriesin sequence.
If a name could be segmentedsuccessfully, then the name was considered aChinese name.
As their spoken documentcollection had already been transcribed into pinyin,retrieval was based on pinyin-to-pinyin matching;pinyin to Chinese character conversion was notaddressed.
Names other than Chinese names wereconsidered as foreign names and were convertedinto Chinese phonemes using a language modelderived from a list of English-Chinese equivalents,both sides of which were represented in phoneticequivalents.?
The work was done by the author while atClairvoyance Corporation.1http://www.csse.monash.edu.au/~jwb/edict.html2http://lcweb.loc.gov/catdir/pinyin/romcover.htmlThe above English-to-Japanese or English-to-Chinese transliteration techniques, however, onlysolve a part of the name translation problem.
Inmultilingual applications such as CLIR andMachine Translation, all types of names must betranslated.
Techniques for name translation fromLatin scripts into CJK scripts often depend on theorigin of the name.
Some names are nottransliterated into a nearly deterministic syllabicscript but into ideograms that can be associatedwith a variety of pronunciations.
For example,Chinese, Korean and Japanese names are usuallywritten using Chinese characters (or kanji) inJapanese, while European names are transcribedusing katakana characters, with each charactermostly representing one syllable.In this paper, we describe a method forconverting a Japanese name written with a Latinalphabet (or romanji), back into Japanese kanji3.Transcribing into Japanese kanji is harder thantransliteration of a foreign name into syllabickatakana, since one phoneme can correspond tohundreds of possible kanji characters.
For example,the sound ?kou?
can be mapped to 670 kanjicharacters.Our method for back-transliterating Japanesenames from English into Japanese consists of thefollowing steps: (1) language identification of theorigins of names in order to know what language-specific transliteration approaches to use, (2)generation of possible transliterations using soundand kanji mappings from the Unihan database (tobe described in section 3.1) and then transliterationvalidation through a three-tier filtering process byfiltering first through a set of attested bigrams, thenthrough a set of attested terms, and lastly throughthe Web.The rest of the paper is organized as follows: insection 2, we describe and evaluate our nameorigin identifier; section 3 presents in detail thesteps for back transliterating Japanese nameswritten in Latin script into Japanese kanjirepresentations; section 4 presents the evaluationsetup and section 5 discusses the evaluationresults; we conclude the paper in section 6.2 Language Identification of NamesGiven a name in English for which we do nothave a translation in a bilingual English-Japanesedictionary, we first have to decide whether thename is of Japanese, Chinese, Korean or someEuropean origin.
In order to determine the originof names, we created a language identifier fornames, using a trigram language identification3We have applied the same technique to Chinese andKorean names, though the details are not presented here.method (Cavner and Trenkle, 1994).
Duringtraining, for Chinese names, we used a list of11,416 Chinese names together with theirfrequency information4.
For Japanese names, weused the list of 83,295 Japanese names found inENAMDICT5.
For English names, we used the listof 88,000 names found at the US.
Census site6 .
(We did not obtain any training data for Koreannames, so origin identification for Korean names isnot available.)
Each list of names7 was convertedinto trigrams; the trigrams for each list were thencounted and normalized by dividing the count ofthe trigram by the number of all the trigrams.
Toidentify a name as Chinese, Japanese or English(Other, actually), we divide the name into trigrams,and sum up the normalized trigram counts fromeach language.
A name is identified with thelanguage which provides the maximum sum ofnormalized trigrams in the word.
Table 1 presentsthe results of this simple trigram-based languageidentifier over the list of names used for trainingthe trigrams.The following are examples of identificationerrors: Japanese names recognized as English, e.g.,aa, abason, abire, aebakouson; Japanese namesrecognized as Chinese, e.g., abeseimei, abei, adan,aden, afun, agei, agoin.
These errors show that thelanguage identifier can be improved, possibly bytaking into account language-specific features,such as the number of syllables in a name.
Fororigin detection of Japanese names, the currentmethod works well enough for a first pass with anaccuracy of 92%.InputnamesAsJAPAsCHIAsENGAccuracyJapanese 76816 5265 1212 92%Chinese 1147 9947 321 87%English 12115 14893 61701 70%Table 1: Accuracy of language originidentification for names in the training set (JAP,CHI, and ENG stand for Japanese, Chinese, andEnglish, respectively)4http://www.geocities.com/hao510/namelist/5http://www.csse.monash.edu.au/~jwb/enamdict_doc.html6http://www.census.gov/genealogy/names7Some names appear in multiple name lists: 452 of thenames are found both in the Japanese name list and inthe Chinese name list; 1529 names appear in theJapanese name list and the US Census name list; and379 names are found both in the Chinese name list andthe US Census list.3 English-Japanese Back-TransliterationOnce the origin of a name in Latin scripts isidentified, we apply language-specific rules forback-transliteration.
For non-Asian names, we usea katakana transliteration method as described in(Qu et al, 2003).
For Japanese and Chinesenames, we use the method described below.
Forexample, ?koizumi?
is identified as a name ofJapanese origin and thus is back-transliterated toJapanese using Japanese specific phoneticmappings between romanji and kanji characters.3.1 Romanji-Kanji MappingTo obtain the mappings between kanji charactersand their romanji representations, we used theUnihan database, prepared by the UnicodeConsortium 8 .
The Unihan database, whichcurrently contains 54,728 kanji characters found inChinese, Japanese, and Korean, provides richinformation about these kanji characters, such asthe definition of the character, its values indifferent encoding systems, and thepronunciation(s) of the character in Chinese (listedunder the feature kMandarin in the Unihandatabase), in Japanese (both the On reading and theKun reading 9 : kJapaneseKun andkJapaneseOn), and in Korean (kKorean).
Forexample, for the kanji character   , coded withUnicode hexadecimal character 91D1, the Unihandatabase lists 49 features; we list below itspronunciations in Japanese, Chinese, and Korean:U+91D1  kJapaneseKun    KANEU+91D1  kJapaneseOn     KIN KONU+91D1  kKorean KIM KUMU+91D1  kMandarin       JIN1 JIN4In the example above, is represented in itsUnicode scalar value in the first column, with afeature name in the second column and the valuesof the feature in the third column.
The JapaneseKun reading of is KANE, while the Japanese Onreadings of is KIN and KON.From the Unicode database, we constructmappings between Japanese readings of a characterin romanji and the kanji characters in its Unicoderepresentation.
As kanji characters in Japanesenames can have either the Kun reading or the On8http://www.unicode.org/charts/unihan.html9Historically, when kanji characters were introducedinto the Japanese writing system, two methods oftranscription were used.
One is called ?on-yomi?
(i.e.,On reading), where the Chinese sounds of the characterswere adopted for Japanese words.
The other method iscalled ?kun-yomi?
(i.e., Kun reading), where a kanjicharacter preserved its meaning in Chinese, but waspronounced using the Japanese sounds.reading, we consider both readings as candidatesfor each kanji character.
The mapping table has atotal of 5,525 entries.
A typical mapping is asfollows:kou U+4EC0 U+5341 U+554F U+5A09U+5B58 U+7C50 U+7C58 ......in which the first field specifies a pronunciation inromanji, while the rest of the fields specifies thepossible kanji characters into which thepronunciation can be mapped.There is a wide variation in the distribution ofthese mappings.
For example, kou can be thepronunciation of 670 kanji characters, while thesound katakumi can be mapped to only one kanjicharacter.3.2 Romanji Name Back-TransliterationIn theory, once we have the mappings betweenromanji characters and the kanji characters, we canfirst segment a Japanese name written in romanjiand then apply the mappings to back-transliteratethe romanji characters into all possible kanjirepresentations.
However, for some segmentation,the number of the possible kanji combinations canbe so large as to make the problemcomputationally intractable.
For example,consider the short Japanese name ?koizumi.?
Thisname can be segmented into the romanji characters?ko-i-zu-mi?
using the Romanji-Kanji mappingtable described in section 3.1, but thissegmentation then has 182*230*73*49 (over 149million) possible kanji combinations.
Here, 182,239, 73, and 49 represents the numbers of possiblekanji characters for the romanji characters ?ko?,?i?, ?zu?, and ?mi?, respectively.In this study, we present an efficient procedurefor back-transliterating romanji names to kanjicharacters that avoids this complexity.
Theprocedure consists of the following steps: (1)romanji name segmentation, (2) kanji namegeneration, (3) kanji name filtering viamonolingual Japanese corpus, and (4) kanji-romanji combination filtering via WWW.
Ourprocedure relies on filtering using corpus statisticsto reduce the hypothesis space in the last threesteps.
We illustrate the steps below using theromanji name ?koizumi?
(  .3.2.1 Romanji Name SegmentationWith the romanji characters from the Romanji-Kanji mapping table, we first segment a namerecognized as Japanese into sequences of romanjicharacters.
Note that a greedy segmentationmethod, such as the left-to-right longest matchmethod, often results in segmentation errors.
Forexample, for ?koizumi?, the longest matchsegmentation method produces segmentation ?koi-zu-mi?, while the correct segmentation is ?ko-izumi?.Motivated by this observation, we generate allthe possible segmentations for a given name.
Thepossible segmentations for ?koizumi?
are:ko-izumikoi-zu-miko-i-zu-mi3.2.2 Kanji Name SegmentationUsing the same Romanji-Kanji mapping table,we obtain the possible kanji combinations for asegmentation of a romanji name produced by theprevious step.
For the segmentation ?ko-izumi?,we have a total of 546 (182*3) combinations (weuse the Unicode scale value to represent the kanjicharacters and use spaces to separate them):U+5C0F U+6CC9U+53E4 U+6CC9......We do not produce all possible combinations.
Aswe have discussed earlier, such a generationmethod can produce so many combinations as tomake computation infeasible for longersegmentations.
To control this explosion, weeliminate unattested combinations using a bigrammodel of the possible kanji sequences in Japanese.From the Japanese evaluation corpus of theNTCIR-4 CLIR track 10 , we collected bigramstatistics by first using a statistical part-of-speechtagger of Japanese (Qu et al, 2004).
All validJapanese terms and their frequencies from thetagger output were extracted.
From this term list,we generated kanji bigram statistics (as well as anattested term list used below in step 3).
With thisbigram-based model, our hypothesis space issignificantly reduced.
For example, with thesegmentation ?ko-i-zu-mi?, even though ?ko-i?
canhave 182*230 possible combinations, we onlyretain the 42 kanji combinations that are attested inthe corpus.Continuing with the romanji segments ?i-zu?, wegenerate the possible kanji combinations for ?i-zu?that can continue one of the 42 candidates for ?ko-i?.
This results in only 6 candidates for thesegments ?ko-i-zu?.Lastly, we consider the romanji segments ?zu-mi?, and retain with only 4 candidates for thesegmentation ?ko-i-zu-mi?
whose bigramsequences are attested in our language model:U+5C0F U+53F0 U+982D U+8EABU+5B50 U+610F U+56F3 U+5B50U+5C0F U+610F U+56F3 U+5B50U+6545 U+610F U+56F3 U+5B5010http://research.nii.ac.jp/ntcir-ws4/clir/index.htmlThus, for the segmentation ?ko-i-zu-mi?, thebigram-based language model effectively reducesthe hypothesis space from 182*230*73*49possible kanji combinations to 4 candidates.
Forthe other alternative segmentation ?koi-zu-mi?, nocandidates can be generated by the languagemodel.3.2.3 Corpus-based Kanji name FilteringIn this step, we use a monolingual Japanesecorpus to validate whether the kanji namecandidates generated by step (2) are attested in thecorpus.
Here, we simply use Japanese term listextracted from the segmented NTCIR-4 corpuscreated for the previous step to filter out unattestedkanji combinations.
For the segmentation ?ko-izumi?, the following kanji combinations areattested in the corpus (preceded by their frequencyin the corpus):4167    koizumi16   koizumi4   koizumiNone of the four kanji candidates from thealternate segmentation ?ko-i-zu-mi?
is attested inthe corpus.
While step 2 filters out candidatesusing bigram sequences, step 3 uses corpus termsin their entirety to validate candidates.3.2.4 Romanji-Kanji Combination ValidationHere, we take the corpus-validated kanjicandidates (but for which we are not yet sure ifthey correspond to the same reading as the originalJapanese name written in romanji) and use theWeb to validate the pairings of kanji-romanjicombinations (e.g.,    AND koizumi).
This ismotivated by two observations.
First, in contrast tomonolingual corpus, Web pages are often mixed-lingual.
It is often possible to find a word and itstranslation on the same Web pages.
Second, personnames and specialized terminology are among themost frequent mixed-lingual items.
Thus, wewould expect that the appearance of bothrepresentations in close proximity on the samepages gives us more confidence in the kanjirepresentations.
For example, with the Googlesearch engine, all three kanji-romanji combinationsfor ?koizumi?
are attested:23,600 pages --     koizumi302 pages --    koizumi1 page --   koizumiAmong the three, the    koizumi combinationis the most common one, being the name of thecurrent Japanese Prime Minister.4 EvaluationIn this section, we describe the gold standardsand evaluation measures for evaluating theeffectiveness of the above method for back-transliterating Japanese names.4.1 Gold StandardsBased on two publicly accessible name lists anda Japanese-to-English name lexicon, we haveconstructed two Gold Standards.
The Japanese-to-English name lexicon is ENAMDICT 11 , whichcontains more than 210,000 Japanese-Englishname translation pairs.Gold Standard ?
Given Names (GS-GN): toconstruct a gold standard for Japanese givennames, we obtained 7,151 baby names in romanjifrom http://www.kabalarians.com/.
Of these 7,151names, 5,115 names have kanji translations in theENAMDICT12.
We took the 5115 romanji namesand their kanji translations in the ENAMDICT asthe gold standard for given names.Gold Standard ?
Surnames (GS-SN): toconstruct a gold standard for Japanese surnames,we downloaded 972 surnames in romanji fromhttp://business.baylor.edu/Phil_VanAuken/JapaneseSurnames.html.
Of these names, 811 names havekanji translations in the ENAMDICT.
We tookthese 811 romanji surnames and their kanjitranslations in the ENAMDICT as the goldstandard for Japanese surnames.4.2 Evaluation MeasuresEach name in romanji in the gold standards hasat least one kanji representation obtained from theENAMDICT.
For each name, precision, recall,and F measures are calculated as follows:?
Precision: number of correct kanji output /total number of kanji output?
Recall: number of correct kanji output / totalnumber of kanji names in gold standard?
F-measure: 2*Precision*Recall / (Precision +Recall)Average Precision, Average Recall, and AverageF-measure are computed over all the names in thetest sets.5 Evaluation Results and Analysis5.1 Effectiveness of Corpus ValidationTable 2 and Table 3 present the precision, recall,and F statistics for the gold standards GS-GN and11http://mirrors.nihongo.org/monash/enamdict_doc.html12The fact that above 2000 of these names weremissing from ENAMDICT is a further justification for aname translation method as described in this paper.GS-SN, respectively.
For given names, corpusvalidation produces the best average precision of0.45, while the best average recall is a low 0.27.With the additional step of Web validation of theromanji-kanji combinations, the average precisionincreased by 62.2% to 0.73, while the best averagerecall improved by 7.4% to 0.29.
We observe asimilar trend for surnames.
The resultsdemonstrate that, through a large, mixed-lingualcorpus such as the Web, we can improve bothprecision and recall for automaticallytransliterating romanji names back to kanji.AvgPrecAvgRecallF(1) Corpus 0.45 0.27 0.33(2) Web(over (1))0.73(+62.2%)0.29(+7.4%)0.38(+15.2%)Table 2: The best Avg Precision, Avg Recall,and Avg F statistics achieved through corpusvalidation and Web validation for GS-GN.AvgPrecAvgRecallF(1) Corpus 0.69 0.44 0.51(2) Web(over (1))0.90(+23.3%)0.45(+2.3%)0.56(+9.8%)Table 3: The best Avg Precision, Avg Recall,and Avg F statistics achieved through corpusvalidation and Web validation for GS-SN.We also observe that the performance statisticsfor the surnames are significantly higher than thoseof the given names, which might reflect thedifferent degrees of flexibility in using surnamesand given names in Japanese.
We would expectthat the surnames form a somewhat closed set,while the given names belong to a more open set.This may account for the higher recall forsurnames.5.2 Effectiveness of Corpus ValidationIf the big, mixed-lingual Web can deliver bettervalidation than the limited-sized monolingualcorpus, why not use it at every stage of filtering?Technically, we could use the Web as the ultimatecorpus for validation at any stage when a corpus isrequired.
In practice, however, each Web accessinvolves additional computation time for file IO,network connections, etc.
For example, accessingGoogle took about 2 seconds per name13; gathering13We inserted a 1 second sleep between calls to thesearch engine so as not to overload the engine.statistics for about 30,000 kanji-romanjicombinations14 took us around 15 hours.In the procedure described in section 3.2, wehave aimed to reduce computation complexity andtime at several stages.
In step 2, we use bigram-based language model from a corpus to reduce thehypothesis space.
In step 3, we use corpus filteringto obtain a fast validation of the candidates, beforepassing the output to the Web validation in step 4.Table 4 illustrates the savings achieved throughthese steps.GS-GN GS-SNAll possible 2.0e+017 296,761,622,7632gram model 21,306,322(-99.9%)2,486,598(-99.9%)Corpusvalidate30,457(-99.9%)3,298(-99.9%)Web validation 20,787(-31.7%)2,769(-16.0%)Table 4: The numbers of output candidates ofeach step to be passed to the next step.
Thepercentages specify the amount of reduction inhypothesis space.5.3 Thresholding EffectsWe have examined whether we should discardthe validated candidates with low frequencieseither from the corpus or the Web.
The cutoffpoints examined include initial low frequencyrange 1 to 10 and then from 10 up to 400 in withincrements of 5.
Figure 1 and Figure 2 illustratethat, to achieve best overall performance, it isbeneficial to discard candidates with very lowfrequencies, e.g., frequencies below 5.
Eventhough we observe a stabling trend after reachingcertain threshold points for these validationmethods, it is surprising to see that, for the corpusvalidation method with GS-GN, with stricterthresholds, average precisions are actuallydecreasing.
We are currently investigating thisexception.5.4 Error AnalysisBased on a preliminary error analysis, we haveidentified three areas for improvements.First, our current method does not account forcertain phonological transformations when theOn/Kun readings are concatenated together.Consider the name ?matsuda?
(   ).
Thesegmentation step correctly segmented the romanjito ?matsu-da?.
However, in the Unihan database,14At this rate, checking the 21 million combinationsremaining after filtering with bigrams using the Web(without the corpus filtering step) would take more thana year.the Kun reading of   is ?ta?, while its On readingis ?den?.
Therefore, using the mappings from theUnihan database, we failed to obtain the mappingbetween the pronunciation ?da?
and the kanji  ,which resulted in both low precision and recall for?matsuda?.
This suggests for introducinglanguage-specific phonological transformations oralternatively fuzzy matching to deal with themismatch problem.Avg Precision - GS_GN00.10.20.30.40.50.60.70.81 6 15 50 100150200250300350400Threshold for frequency cutoffAvgPrecisioncorpus+web corpusFigure 1: Average precisions achieved via bothcorpus and corpus+Web validation with differentfrequency-based cutoff thresholds for GS-GNAvg Precision - GS_SN00.10.20.30.40.50.60.70.80.911 6 15 50 100150200250300350400Threshold for frequency cutoffAvgPrecisioncorpus+web corpusFigure 2: Average precisions achieved via bothcorpus and corpus+Web validation with differentfrequency-based cutoff thresholds for GS-SNSecond, ENAMDICT contains mappingsbetween kanji and romanji that are not availablefrom the Unihan database.
For example, for thename ?hiroshi?
in romanji, based on the mappingsfrom the Unihan database, we can obtain twopossible segmentations: ?hiro-shi?
and ?hi-ro-shi?.Our method produces two- and three-kanjicharacter sequences that correspond to theseromanji characters.
For example, corpus validationproduces the following kanji candidates for?hiroshi?
:2    hiroshi10    hiroshi5    hiroshi1    hiroshi2 	  hiroshi11 	  hiroshi33 	  hiroshi311   hiroshiENAMDCIT, however, in addition to the 2- and3-character kanji names, also contains 1-characterkanji names, whose mappings are not found in theUnihan database, e.g.,HiroshiHiroshiHiroshiHiroshiHiroshiHiroshiThis suggests the limitation of relying solely onthe Unihan database for building mappingsbetween romanji characters and kanji characters.Other mapping resources, such as ENAMDCIT,should be considered in our future work.Third, because the statistical part-of-speechtagger we used for Japanese term identificationdoes not have a lexicon of all possible names inJapanese, some unknown names, which areincorrectly separated into individual kanjicharacters, are therefore not available for correctcorpus-based validation.
We are currentlyexploring methods using overlapping characterbigrams, instead of the tagger-produced terms, asthe basis for corpus-based validation and filtering.6 ConclusionsIn this study, we have examined a solution to apreviously little treated problem of transliteratingCJK names written in Latin scripts back into theirideographic representations.
The solution involvesfirst identifying the origins of the CJK names andthen back-transliterating the names to theirrespective ideographic representations withlanguage-specific sound-to-character mappings.We have demonstrated that a simple trigram-basedlanguage identifier can serve adequately foridentifying names of Japanese origin.
Duringback-transliteration, the possibilities can bemassive due to the large number of mappingsbetween a Japanese sound and its kanjirepresentations.
To reduce the complexity, weapply a three-tier filtering process which eliminatesmost incorrect candidates, while still achieving anF measure of 0.38 on a test set of given names, andan F measure of 0.56 on a test of surnames.
Thethree filtering steps involve using a bigram modelderived from a large segmented Japanese corpus,then using a list of attested corpus terms from thesame corpus, and lastly using the whole Web as acorpus.
The Web is used to validate the back-transliterations using statistics of pages containingboth the candidate kanji translation as well as theoriginal romanji name.Based on the results of this study, our futurework will involve testing the effectiveness of thecurrent method in real CLIR applications, applyingthe method to other types of proper names andother language pairs, and exploring new methodsfor improving precision and recall for romanjiname back-transliteration.
In cross-languageapplications such as English to Japanese retrieval,dealing with a romaji name that is missing in thebilingual lexicon should involve (1) identifying theorigin of the name for selecting the appropriatelanguage-specific mappings, and (2) automaticallygenerating the back-transliterations of the name inthe right orthographic representations (e.g.,Katakana representations for foreign Latin-originnames or kanji representations for native Japanesenames).
To further improve precision and recall,one promising technique is fuzzy matching (Menget al 2001) for dealing with phonologicaltransformations in name generation that are notconsidered in our current approach (e.g.,?matsuda?
vs ?matsuta?).
Lastly, we will explorewhether the proposed romanji to kanji back-transliteration approach applies to other types ofnames such as place names and study theeffectiveness of the approach for back-transliterating romanji names of Chinese origin andKorean origin to their respective kanjirepresentations.ReferencesYaser Al-Onaizan and Kevin Knight.
2002.Machine Transliteration of Names in ArabicText.
Proc.
of ACL Workshop on ComputationalApproaches to Semitic LanguagesWilliam B. Cavnar and John M. Trenkle.
1994.
N-gram based text categorization.
In 3rd AnnualSymposium on Document Analysis andInformation Retrieval, 161-175Atsushi Fujii and Tetsuya Ishikawa.
2001.Japanese/English Cross-Language InformationRetrieval: Exploration of Query Translation andTransliteration.
Computer and the Humanities,35( 4): 389?420K.
S. Jeong, Sung-Hyon Myaeng, J. S. Lee, and K.S.
Choi.
1999.
Automatic identification andback-transliteration of foreign words forinformation retrieval.
Information Processingand Management, 35(4): 523-540Kevin Knight and Jonathan Graehl.
1998.Machine Transliteration.
ComputationalLinguistics: 24(4): 599-612Wen-Cheng Lin, Changhua Yang and Hsin-HsiChen.
2003.
Foreign Name BackwardTransliteration in Chinese-English Cross-Language Image Retrieval, In Proceedings ofCLEF 2003 Workshop, Trondheim, Norway.Helen Meng, Wai-Kit Lo, Berlin Chen, and KarenTang.
2001.
Generating Phonetic Cognates toHandel Named Entities in English-ChineseCross-Language Spoken Document Retrieval.
InProc of the Automatic Speech Recognition andUnderstanding Workshop (ASRU 2001) Trento,Italy, Dec.Yan Qu, Gregory Grefenstette, David A. Evans.2003.
Automatic transliteration for Japanese-to-English text retrieval.
In Proceedings of SIGIR2003: 353-360Yan Qu, Gregory Grefenstette, David A. Hull,David A. Evans, Toshiya Ueda, Tatsuo Kato,Daisuke Noda, Motoko Ishikawa, Setsuko Nara,and Kousaku Arita.
2004.
Justsystem-Clairvoyance CLIR Experiments at NTCIR-4Workshop.
In Proceedings of the NTCIR-4Workshop.
