L INGSTAT:  AN INTERACTIVE ,  MACHINE-A IDEDTRANSLAT ION SYSTEM*Jonathan Yamron, James Baker, Paul Bamberg, Haakon Chevalier, Taiko Dietzel, John Elder,Frank Kampmann, Mark Mandel, Linda Manganaro, Todd Margolis, and Elizabeth SteeleDragon Systems, Inc., 320 Nevada Street, Newton, MA 02160ABSTRACTIn this paper we present he first implementation f LING-STAT, an interactive machine translation system designed toincrease the productivity of a user, with little knowledge ofthe source language, in translating or extracting informationfrom foreign language documents.
In its final form, LING-STAT will make use of statistical information gathered fromparallel and single-language corpora, and linguistic informa-tion at all levels (lexical, syntactic, and semantic).1.
INTRODUCTIONThe DARPA initiative in machine translation supportsthree very different avenues of research, including CAN-DIDE's fully automatic system \[1,2\], the interactive,knowledge-based system of the PANGLOSS group \[3-6\],and LINGSTAT, also an interactive system.
LING-STAT, as its name implies, incorporates both linguisticand statistical knowledge representations.
It is intendedfor users who are native speakers of the target language,and is designed to be useful to those with little knowledgeof the source (by providing access to foreign languagedocuments), as well as those with a greater knowledgeof the source (by improving productivity in translation).Although a future implementation will suggest ransla-tions of phrases and sentences, high quality automatictranslation is not a goal; LINGSTAT's purpose is to re-lieve users of the most tedious and difficult translationtasks, but may well leave problems that the user is bettersuited to solve.Initial efforts have been focused on the translation ofJapanese to English in the domain of mergers and acqui-sitions, and a first version of a translator's workstationhas been assembled.
Work has also begun on a Span-ish version of the system.
As resources become avail-able, particularly parallel corpora, the Spanish systemwill be further developed and work will be extended toinclude other European languages.
This paper describesthe Japanese system.Japanese poses special challenges in translation that arenot seen in European languages.
The most striking are*This work was sponsored by the Defense Advanced ResearchProjects Agency under contract number J-FBI-91-239.that Japanese text is not divided into words, and thatthe number of writing symbols is very large.
These sym-bols can be divided into at least four sets: kanji, hira-gana, katakana, and, occasionally, the Latin alphabet.The general-use kanji number about 2000.
They are notphonetic symbols (most have several pronunciations, de-pending on context), but carry meaning and often ap-pear two or three to a word.
Hiragana and katakana, onthe other hand, are phonetic alphabets; hiragana is usu-ally used for important function words in Japanese gram-mar (sentence particles, auxiliary verbs) and to indicateinflection of verbs, adjectives, and nouns, while katakanais used almost exclusively for borrowed foreign words.Another difficulty of Japanese is that it lacks many gram-matical features taken for granted in English, such asplurals, articles, routine use of pronouns, and a futuretense.
Conversely, there are many Japanese conceptsthat have no analog in English, including the many lev-els of politeness, the notion of a sentence topic distinctfrom its subject, and exclusive vs .
non-exclusive listings.In addition, Japanese word order and sentence structureare very different from English.This paper is organized as follows.
Section 2 liststhe dictionaries and text resources used in assemblingLINGSTAT.
Section 3 presents an outline of the systemcomponents, ome of which are described in greater de-tail in section 4.
Section 5 describes the results of theDARPA July 1992 evaluation of the Japanese system, aswell some informal results on the Spanish system.
Sec-tion 6 discusses ome improvements planned for futureversions of the workstation.2.
RESOURCESLINGSTAT currently makes use of a number of dictio-naries and text sources of Japanese.
As yet, there is nohigh-quality source of parallel Japanese-English text.Dict ionar ies?
EDR DictionaryApproximately 400,000 words defined in both En-191glish and Japanese (about 200,000 distinct defini-tions)?
Japanese-English CD-ROM DictionaryPronunciations and glosses for approximately50,000 Jat~anese words?
ICOT morphological dictionaryPronunciations and parts of speech for approxi-mately 150,000 Japanese wordsText?
T IPSTER articlesJapanese newspaper articles on joint ventures?
Technical abstracts10,000 scientific abstracts in Japanese, with Englishsummaries or low-quality translations?
Asahi Sinbun CD-ROMSeven years of Japanese newspaper articles, all sub-jects3.
OVERVIEW OF SYSTEMARCHITECTUREAn initial implementation of the interactive translationsystem for Japanese has been completed, running un-der MS-DOS on PC (486) hardware.
In its currentform, lexical and syntactic analyses are done in a pre-processing step (initiated by the user) that produces anannotated source document and a document-specific di -tionary, which are then presented to the user in a cus-tomized word-processing environment.The pre-processing step consists of a number of sub-tasks, including:1.
Breaking the Japanese character stream into wordsusing a maximum-likelihood tokenizer in conjunc-tion with a morphological analyzer (de-inflector)that recognizes all inflected forms of Japanese verbs,adjectives, and nouns2.
Attaching lexical information to the identifiedwords, including inflection codes and roots (for in-flected forms), pronunciation, English glosses (someautomatically generated from parallel text), andEnglish definitions3.
Finding "best guess" transliterations of katakanawords using dynamic-programming techniques4.
Translating numbers with following counters (elim-inating a large source of user errors arising from theunusual numbering conventions in Japanese)5.
Using a finite-state parser to identify modifyingphrases6.
Creating the annotated ocument and document-specific dictionaryThe user's word-processing environment consists nor-mally of two windows, one containing the originalJapanese broken into words and annotated with pronun-ciation and "best guess" glosses, the other for entry ofthe English translation.
Information extracted uringpre-processing but not available in the annotated oc-ument (longer definitions, inflection information, etc.
)can be accessed instantly from the document-specific d -tionary using the keyboard or mouse, and is presented ina pop-up window.
The interface also allows easy accessto browsing resources uch as on-line dictionaries andproper name lists.4.
IMPLEMENTATION DETAILSTokenizat lon.
Tokenization is done using a maximum-likelihood algorithm that finds the "best" way to breakup a given sentence into words.
Conceptually, the ideais to find all ways to tokenize a sentence, score each tok-enization, then choose the one with the best score.
Thetokenizer uses a master list of Japanese words with uni-gram frequencies.The score of a tokenization is defined to be the sum of thescores assigned to the words it contains, and the scoreof a word is taken to be proportional to the log of itsunigram probability.
Any character sequence not in themaster list is considered infinitely bad, although to guar-antee that a tokenization is always found, an exceptionis made for single character tokens not in the master list,which are assigned a very low, but finite, score.
The tok-enizer also assigns a moderate score to unfamiliar stringsof ASCII or katakana, as well as to numbers.The search for the best tokenization is done using a sim-ple dynamic programming algorithm.
Let score(w) andlenflh(w) denote the score and length of the charactersequence w. For a sentence of N characters numberedfrom 0 to N - 1, let best\[i\] denote the score of the besttokenization of the character sequence from 0 to i -  1,and initialize best\[O\] = O, best\[i\] = -oo  for 1 < i < N.The best tokenization score for the sentence is then givenby best\[N\] after:FOR i=0  to N-  1 DOFOR all sequences w that starl at position i DOIF best\[i\] + score(w) > best\[i + length(w)lTHEN best\[i + length(w)\] = best\[i\] + score(w)192Note that when two tokenizations both have a word end-ing at a given position, only the higher scoring solutionup to that position is used in subsequent calculations.Currently the most serious tokenization errors are causedby kanji proper nouns in the incoming document.
UnlikeEuropean languages, there is no lexical cue (such as cap-italization) to identify such nouns, and since most kanjican appear as words in isolation, the tokenizer will al-ways find some way to break up a multi-kanji name intolegal, but probably not sensible, pieces.De-inflection.
In order to keep the master list rela-tively small, only root forms of words that inflect havean entry.
To recognize inflected forms, the tokenizer callsa de-inflector whenever it fails to find a candidate tokenin the master list.In Japanese there are three classes of words that inflect:verbs (no person or number, but negatives and manytenses), adjectives (no cases or plurals, but negatives,adverbial, and tense), and nani-nouns (adjectival andadverbial).
De-inflection is typically a multi-step ro-cess, as intabetakunakalta (didn't want to eat)--~ iabetakunai (doesn't want to eat)tabetai (wants to eat)taberu (eats).It may also happen that a particular form can de-inflectalong multiple paths to different roots.The engine of the LINGSTAT de-inflection module islanguage-independent (to the extent that words in-flect by transformation of their endings), driven by alanguage-specific de-inflection table.
It handles multi-step and multi-path de-inflections, and for a given candi-date will return all possible root forms to the tokenizer,along with the probability of the particular inflectionfor incorporation i to the word score.
The de-inflectoralso returns information about he de-inflection path foruse by the annotation module.
De-inflection tables havebeen developed for Japanese, Spanish, and English.Annotation.
The annotation module attaches pronun-ciations, English glosses, English definitions, and inflec-tion information to each word identified by the tokenizer.Pronunciation i formation might seem superfluous butis often of value to a Japanese translator.
One of theconsequences of the difficulty of written Japanese is thatmost students of the language can speak much betterthan they can read (recall that the pronunciation of akanji cannot be deduced from its shape).
The verbalcue that LINGSTAT provides through the pronunciationmay therefore be enough to allow a user to identify anotherwise unfamiliar kanji word.
In any case, having thepronunciation allows the user access to supplementarypaper dictionaries ordered by pronunciation, which aremuch faster to use than radical-and-stroke dictionariesordered by character shape information.The glosses used by LINGSTAT come from threesources: hand entry, the Japanese-English CD-ROM dic-tionary, and automatic extraction from the definitionsin the EDR dictionary.
There are two methods of auto-matic extraction:Pull the gloss out of the definition--for example, Atype of financial transaction amed leveraged buyoutbecomes leveraged buyout.Use the English and Japanese definitions in theEDR dictionary as sentenced-aligned parallel textand apply CANDIDE's word alignment algorithm(Model 1) \[1\] to determine which English words cor-respond to each Japanese word.The first method is moderately successful because manyof the definitions adhere to a particular style.
The secondmethod gives good glosses for those Japanese words thatoccur frequently in the text of the definitions.Katakana Transliteration.
Words are borrowed sofrequently from other languages, particularly English,that their transliterations into katakana rarely appearin even the largest dictionaries.
The best way to deter-mine their meaning, therefore, is to transliterate hemback into English.
This is made difficult by the fact thatthe transformation to katakana is not invertible: for ex-ample, English I and r both map to the Japanese r,r following a vowel is sometimes dropped, and vowelsare inserted into consonant clusters.The LINGSTAT katakana transliterator attempts toguess what English words might have given rise to anunfamiliar katakana word.
It converts the katakana pro-nunciation into a representation intermediate betweenJapanese and English, then compares this to a list of80,000 English words in the same representation.
A dy-namic programming algorithm isused to identify the En-glish words that most closely match the katakana.
Thesewords are then attached to the katakana token in the an-notation step.This procedure fails for non-English foreign words, andfor most proper names (since they rarely appear in themaster English list).Number Translation.
In traditional Japanese, num-bers up to 104 are formed by using the kanji digits in193conjunction with the kanji symbols for the various pow-ers of ten up to 1000, e.g., 6542 would be written(6)( 1000)(5)(100) (4)(10) (2),with each number in parentheses replaced by the appro-priate kanji symbol.
Notice that the powers of ten areexplicitly represented, rather than being implied by po-sition.There are special kanji for the large numbers 104, l0 s,elc.
These may be preceded by expressions like thatabove to form very large numbers, such as(2)(10s)(5)(1000)(5)(100)(104)= 2 x l0 s +5500 x 104= 255,000,000.Modern Japanese often mixes the traditional Japaneserepresentation with the "place-holding" representationused in English.
Arabic numerals are freely mixed withkanji symbols in both formats.
To ease the burden onthe translator LINGSTAT has a function that recognizesnumbers in all their styles, including following counters,and translates them into conventional English notation.These translations are then attached to the number to-ken in the annotation step.
Comparison of manual andLINGSTAT-aided translations has demonstrated thatthis feature liminates a large source of critical errors,particularly in the evaluation domain, which frequentlyreferences large monetary transactions.Finlte-state parser.
As a first pass at helping the userwith Japanese sentence structure, LINGSTAT incorpo-rates a simple finite-state parser designed to identifymodifying phrases in Japanese sentences.
An interfacefunction has also been added to display this informationin a structured way.
At this stage, the quality of theparse is only fair.
This function has not yet been testedfor its effect on translation speed.5.
RESULTSThe system as described here (without he finite-stateparser) was evaluated by DARPA in July 1992.
Theperformance of two Level 2 translators was measuredon a test set of 18 Japanese documents, each translatortranslating 9 with the aid of the system and 9 by hand.In general, the quality of translation with and withoutthe system was found to be comparable, but the systemprovided a speedup of approximately 30%.Since the tested system provided no help with the anal-ysis of the Japanese sentences, this savings was achievedby drastically reducing the time spent doing tokeniza-tion and lookup.
It might appear surprising that somuch time could be saved from these activities alone, butthe many unusual features of Japanese described aboveconspire to produce a large overhead in this phase oftranslation compared to other languages.
This result isalso consistent with an analysis of how the translatorsallocated their time: without he system, their principaleffort involved dictionary lookup, but with the systemmost of their time was spent analyzing sentence struc-ture.Productivity tests have also been conducted on the rudi-mentary Spanish version of the workstation.
This sys-tem incorporates a Spanish de-inflector, provides wordfor word translation to English, and has fast access toan on-line dictionary.
On a scaled down version of theDARPA test (6 documents instead of 18, including 3 byhand and 3 with the aid of the system), a fluent speakerof Italian (a language very similar to Spanish) showed noproductivity gain.
At the other extreme, a user with noSpanish knowledge and no recent raining in any Euro-pean language was about 50% faster using the system'son-line tools than with a paper dictionary.6.
CURRENT ANDFUTURE WORKThere are currently two programs underway to improvethe translation system.
The first is an effort to ex-pand the Japanese and Spanish dictionaries, which re-quires not only adding words, but also glosses, pronun-ciations (for Japanese), and multi-word objects.
Partof this task involves updating the Japanese and Spanishword frequency statistics, which will improve the perfor-mance of the tokenizer in Japanese and the de-inflectorin both languages.
Part of speech information is alsobeing added, in anticipation of the use of grammaticaltools.The second program is the development of a probabilisticgrammar to parse the source and provide grammaticalinformation to the user.
This will supplement or re-place the current rule-based finite-state parser currentlyimplemented in the system.
In the current phase, wehave chosen a lexicalized context-free grammar, whichhas the property that the probability of choosing a par-ticular production rule in the grammar is dependent onheadwords associated with each non-terminal symbol.Lexicalization is a useful tool for resolving attachmentquestions and in sense disambiguation.
This grammarwill be trained using the inside-outside algorithm \[7\] onJapanese and SpaniSh newspaper articles.One use of the grammar will be to provide more accurateglossing of the source by making use of co-occurrencestatistics among the phrase headwords.
This requiresdeveloping an English word list with frequency and part194of speech information, as well as constructing an Englishinflector-deinflector.
These tools, along with an Englishgrammar, will enable the system to construct candidatetranslations of Japanese phrases and simple Spanish sen-tences.A longer term goal of the syntactic analysis (particularlywhen more languages are incorporated) is to generatea probability distribution in a space of data structuresin which the order of representation of the componentgrammatical elements is language neutral.
This can re-garded as a kind of syntactic interlingua.
There willalso be a deeper semantic analysis of the source whichwill be less dependent on the syntactic analysis, and willuse a probabilistic model to fill in the components of acase-frame semantic interlingua.
These kinds of struc-tures will allow faster inclusion of new languages anddomains.References1.
P.F.
Brown, S.A. DellaPietra, V.J.
DellaPietra, and R.L.Mercer, "The Mathematics of Machine Translation: Pa-rameter Estimation," submitted to Computational Lin-guistics, 1991.2.
P.F.
Brown, S.A. DellaPietra, V.J.
DellaPietra, J. Laf-ferty, and R.L.
Mercer, ``Analysis, Statistical Transfer,and Synthesis in Machine Translation," submitted toTMI-92, Fourth International Conference on Theoreti-cal and Methodological Issues in Machine Translation,1992.3.
D. Farwell and Y. Wilkes, ` `ULTRA: A Multi-lingualMachine Translator," Proceedings of the Third MTSummit, pp.
19-24, 1991.4.
E. Hovy and S. Nirenburg, "Approximating an Interlin-gun in a Principled Way," Proceedings ofthe Speech andNatural Language Workshop, pp.
261-266, 1992.5.
K. Knight, ` `Building a Large Ontology for MachineTranslation," Proceedings of the ARPA Workshop onHuman Language Technology, 1993.6.
R. Frederking, D. Grannes, P. Cousseau, and S. Niren-burg, "A MAT Tool and Its Effectiveness," Proceedingsof the ARPA Workshop on Human Language Technol-ogy, 1993.7.
~I.K.
Baker, ` `Trainable Grammars for Speech Recogni-tion," Speech Communication Papers for the 97th Meet-ing of the Acoustical Society of America (D.H. Klatt andJ.J.
Wolf, eds.
), pp.
547-550, 1979.195
