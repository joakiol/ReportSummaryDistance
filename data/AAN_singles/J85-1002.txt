TAUM-AVIATION: ITS TECHNICAL FEATURESAND SOME EXPERIMENTAL RESULTSPierre IsabeHe and Laurent BourbeauD~partement de LinguistiqueUniversit6 de Montr6alC.P.
6128, Succ.
A, MontrEal, Qu6, Canada H3C 3J7Upon the completion of its highly successful TAUM-METEO machine translation system, the TAUMgroup undertook the construction of TAUM-AVIATION, an experimental system for English to Frenchtranslation in the sublanguage of technical maintenance manuals.
A detailed description of the resultingprototype is offered.
In particular, the paper includes: a) some figures on the size of the system; b) adescription of the underlying translation model (indirect approach, analysis/transfer/synthesis scheme);c) a presentation of the basic computational techniques (use of a specialized high-level metalanguagefor each linguistic component); and d) some results on the evaluation of the prototype.1 BACKGROUND1.1 HISTORICAL NOTESIn 1965, with funding from the National Research Coun-cil of Canada, the CETADOL research center in computa-tional linguistics was created at l'Universit6 de Montr6al.Around 1970, the center narrowed its focus to the prob-lem of machine translation (MT), renaming itself TAUM(Traduction Automatique Universit6 de Montr6al).
In thenext few years, several MT protypes were developed:TAUM-71, TAUM-73, and TAUM-76 (Colmerauer et al1971, Kittredge et al 1973, Kittredge et al 1976).Starting in 1973, the Canadian Secretary of StateDepartment (Translation Bureau) assumed responsibilityfor funding the project, in the hope that tangible resultswould soon emerge.
Between 1974 and 1976, TAUMproduced its first practical application: theTAUM-METEO system, for the translation of weatherforecasts (Chevalier et al 1978).
Since 1977, this systemhas been used on a daily basis for the Canadian Environ-ment Department (Chandioux and Gu6raud 1981).
Itscurrent workload represents an annual volume of 8.5million words (Bourbeau 1984).
In spite of its verynarrow scope, TAUM-METEO represents an importantbreakthrough in MT, since it is the only system thatcurrently produces high quality translation without theneed for human revision (although approximately 20%of the input is rejected).The AVIATION project was undertaken in 1976, evenbefore the on-site implementation of TAUM-METEO wascompleted.
The aim was to develop a system capable oftranslating aircraft maintenance manuals.
Obviously, thiswas a more difficult challenge than translating weatherforecasts.
The magnitude of the task necessitated amassive infusion of new personnel and the developmentof a set of new metalanguages (e.g.
LEXTRA, SISIF).
Aprototype of the TAUM-AVIATION system, restricted tohydraulic system maintenance manuals, was demon-strated in 1979.The following year, an independent evaluation(Gervais 1980) concluded that it was not possible toenvisage immediate cost-effective production usingTAUM-AVIATION.
This evaluation led the TranslationBureau to stop funding the TAUM-AVIATION project,and to look for a broader funding base for MT researchand development in Canada.
In the meantime, the TAUMGroup had to be disbanded.1.2 LANGUAGES TRANSLATEDTAUM-AVIATION is designed in such a way that a coreportion of the system is independent of particularlanguage pairs: linguistic descriptions constitute data forCopyright1985 by the Association for Computational Linguistics.
Permission tocopy without fee all or part of this material isgranted provided thatthe copies are not made for direct commercial dvantage and the CL reference and this copyright notice are included on the first page.
To copyotherwise, or to republish, requires a fee and/or specific permission.0362-613X/85/010018-27503.0018 Computational Linguistics, Volume 11, Number 1, January-March 1985Pierre Isabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental ResultsTable 1.
Size of compiled codes and memory requirements.ComponentPre-processingMorphological analysisSource language dictionarySyntactic/semantic analysisBilingual dictionarySyntactic transfer and synthesisMorphological synthesisPost-processingSize of compiled code(6-bit K/char)(a) (b)60 1577 481958 72205 561919 107113 6399 6443 15Runtime CM requirements(60-bit octal K/words)34404012040562434(a) compiled linguistic data; (b) compiled interpreter for linguistic dataTable 2.
Metalanguage compiler sizes.MetalanguageSISIFREZOLEXTRASYSTEMES-QUsed forpre- and post-processingsyntactic/semantic analysislexical transferstructural transfer; syntactic synthesisCompiler size(compiled code, 6-bit K/char)4315513028the system.
However, from a linguistic perspective, theproject was exclusively focused on English-to-Frenchtranslation.In addition, the linguistic descriptions incorporatedinto the system are addressed not to general language butto the particular sublanguage of maintenance manuals(Lehrberger 1982).
The notion of sublanguage ispresented in Kittredge and Lehrberger (1982).1.3 PROJECT SIZEThe initial staff of seven researchers in 1976 was rapidlyincreased to a peak of 20 people during 1979, and thenslowly decreased until the project was terminated.1.4 SYSTEM SIZETAUM-AVIATION was implemented on a CYBER 173computer, with the NOS/BE 1.4 operating system, butwas designed so as to be practically machine-indepen-dent.
Most components of the system are based on thefollowing scheme: certain linguistic data (dictionaries,grammars) are compiled into an object code interpretedat run time against he input text.
Table 1 gives an ideaof the size of the runtime code, together with typicalmemory requirements for execution.
Table 2 gives thesize of the programs used to compile the linguistic data.1.5 SIZE OF DICTIONARIESThe dictionaries list only the base form of the words(roughly speaking, the entry form in a conventionaldictionary).
In March 1981, the source language(English) dictionary included 4054 entries; these entriesrepresented the core vocabulary of maintenance manuals,plus a portion of the speciafized vocabulary of hydraulics.Of these, 3280 had a corresponding entry in the bilingualEnglish-French dictionary.2 APPLICATION ENVIRONMENTTAUM-AVIATION remains an experimental system.
It isdesigned to take as input a text that is in a photocompo-sition-ready format; a pre-processing program stores theformatting codes, which will be reinserted in the trans-lated text.
No use is made of manual pre-editing.The translation process is fully automatic.
If desired, itcan be interrupted after dictionary lookup to obtain a listof unidentified words, and enter any such words in thedictionary.Revision of the machine output is normally necessary:the domain is too complex for results comparable tothose of TAUM-METEO.
The designers of the systemdecided not to rely heavily on "fail-soft" strategies uchas constraint relaxation or partial parses; these strategiesmake the quality of the output totally unpredictable.Thus, the material passing through the system is trans-lated relatively well (very well by MT standards), and therevisor is less likely to feel overwhelmed by finguisticgarbage.
The price to be paid is a failure to produce anyoutput for a relatively high proportion of the inputsentences (somewhere between 20 and 40 per cent, atthe stage of development reached in 1981).
For a sampleof translations produced by TAUM-AVIATION, see theAppendix.The development of TAUM-AVIATION has not beentaken far enough for a definitive assessment to be madeComputational Linguistics, Volume 11, Number 1, January-March 1985 19Pierre Isabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental Resultsof the linguistic and computational strategies that itembodied: the total system throughput was approximate-ly 100,000 words.3 GENERAL TRANSLATION APPROACHThe TAUM-AVIATION system is based on a typicalsecond generation design (Isabelle et al 1978, Bourbeau1981).
The translation is produced indirectly, by meansof an analysis/transfer/synthesis scheme.
The internalorganization of the major components of the system isbased on the :notion of linguistic level.
Finally, thelinguistic data are generally separated from the algorith-mic specifications.3.1 TRANSFER MODELThe overall design of the system is based on the assump-tion that translation rules should not be applied directlyto the input string, but rather to a formal object thatrepresents a structural description of the content of thisinput.
Thus, the source language (SL) text (or successivefragments of it) is mapped onto the representations of anin termediate language, (also called normalized structure)prior to the application of any target language-dependentrule.No one knows how to construct a universal,language-independent semantic interlingua.
The inter-mediate language used in the TAUM-AVIATION system islargely language dependent: it consists of semanticallyannotated eep structures for SL and TL sentences.
Acertain degree of language independence is attained bythe use of a common "base component" (a context-freegrammar that enumerates the admissible deep structures)for both SL and TL.
But the lexical items are left intact,and a transfer module is used in order to map the lexicalitems of SL onto those of TL.3.2 LINGUISTIC ORGANIZATIONThe arrangement of the system into three major modules(analysis, transfer, synthesis) reflects a theoretical modelof translation operations: it is claimed that these oper-ations take place at a "deep" level, between language-de-pendent meaning representations.
Moreover, each one ofthe three modules is arranged internally along the lines ofa linguistic theory: the components of these modulescorrespond to the standard levels of linguistic description(lexicon, morphology, syntax, semantics).
This contrastswith older systems, the structure of which frequently hadno direct relationship to any definite theory of languageand translation.Figure 1 shows the internal structure of theTAUM-AVIATION system.SL/nterne~AaterepreaentatAonsyntax/seaant icstlex icontmorphology1 pre-proceea.SL textFigure I.Tit lexAcal, JSF s t ruc tura lE?
?r il?g, I i fOveral l  Structure of the TAUM-AVIATION System.20 Computational Linguistics, Volume 11, Number 1, January-March 1985Pierre lsabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental Results4 LINGUISTIC TECHNIQUES4.1 PROCESSING UNITSIt is well known that some translation problems can onlybe solved trough textual, as opposed to sentential, proc-essing.
However, we still know too little about discourseanalysis techniques to use them effectively in large-scalesystems.
Thus, the processing unit in TAUM-AVIATIONis the sentence.Fortunately, anaphoric pronouns are quite rare intechnical manuals.
A more frequent problem is the use ofanaphoric definite noun phrases.
Consider for examplethe text fragment in (1):(1) Remove hydraulic filter bypass valve.
This valve islocated below accumulator No.
1.A word like valve cannot be translated correctly inisolation.
Depending on the type of valve, French willuse clapet, robinet, soupape, etc.
In the second sentence of(1), the word valve is used anaphorically.
To translate itcorrectly, one has to refer to its antecedent: he modifierbypass determines a specific French equivalent.TAUM-AVIATION cannot solve problems of this type.The designers of the system preferred to concentratetheir efforts on the best possible sentential analysis.
Andin fact, in spite of a relatively advanced sentence analyz-er, translation failures due to weaknesses in sententialprocessing (e.g.
scoping problems for conjunctions,nominal compounds, etc.)
turned out to be much morefrequent than failures due to anaphor problems, asevidenced by the error compilations of Lehrberger (1981).4.2 THE ANALYSIS MODULE: AMBIGUITY PROBLEMSAmbiguity is a language-internal phenomenon and it isthe responsibility of the analysis module to resolve it.Sometimes, it is possible to ignore certain ambiguities, inthe hope that the same ambiguities will carry over intranslation.
This is particularly 'true in systems likeTAUM-AVIATION that deal with only one pair of closelyrelated languages.
The difficult problem of prepositionalphrase attachment, for example, is frequently bypassed inthis way.
Generally speaking, however, analysis is aimedat producing an unambiguous intermediate represen-tation.The analysis module comprises four components: pre-processing, morphology, lexicon and syntactic/semanticanalysis (see Figure 1).
The pre-processing componentsegments the input text into successive words and intoprocessing units.
In this latter function, it can be seen asa degenerate text grammar.
Because this is carried outdeterministically, without interaction from the othercomponents, egmentation problems occasionally arise.Morphological analysis includes complete rules andexception lists for English inflectional morphology, cate-gory assignment rules for numbers and rules for dealingwith unknown words.
No rules are provided for deriva-tional morphology.
The system handles some types ofcompositional morphology, but this is done in the syntac-tic component, since compounds frequently exhibit prop-erties that are otherwise thought of as syntactic; forexample, internal conjunction is possible (e.g.
four- andsix-cell batteries).Syntactic and semantic analysis are very tightly inte-grated in the TAUM-AVIATION system.
First, both ofthem are implemented using the same metalanguage, aparticular version of Wood's ATNs (see section 5,below).
Second, both components interact freely duringanalysis.
It is nevertheless convenient to describe themseparately.4.2.1 SYNTAXThe TAUM-AVIATION system includes a large-scalegrammar of English capable of handling mostconstructions that occur with some frequency in thesublanguage of maintenance manuals (Lehrberger 1982).The rules are based on an extensive lexical subcategon-zation scheme: 12 standard categories are furthersubclassified using more than 75 features (excludingmorpho-syntactic features).
This is in addition to the useof lexical "strict subcategonzation" frames comparableto those of transformational grammar.Since the intermediate r presentation used for transferis a type of semantically annotated "deep structure", andsince maintenance manuals make use of a very complexsyntax, it was necessary to provide the parser with a richtransformational component.
Thus, the inverses ofseveral transformations from standard transformationaltheory are used: passive, extraposition, raising, etc.In dealing with texts as complex as technical manuals,the parser is faced with difficult ambiguity problems.Ambiguities are already present in the input to theparser, at the lexical level.
These ambiguities mayconcern the syntactic properties of the lexical element(e.g.
light is a noun, a verb, or an adjective); or they mayconcern primarily its semantic properties: pure homo-graphs like the two nouns lead or polysemous items likethe noun line.The parser will as a side effect eliminate some lexicalambiguities; for example, if Check valve is to be taken asa sentence, syntax tells us that check must be a verb.However, the parser will itself introduce structural ambi-guities, owing to the existence of syntactically undeter-mined choice points in the application of grammar ules.Two examples of structural ambiguity are adjective scopeas in (3), and conjunction scope, as in (4).
(3) a )a' )(4) a ) a')(liquid oxygen) tanks??
liquid (oxygen tanks)b ) correct (oil level)b' ) ??
(correct oil) level(pressure and return) lines??
pressure and (return lines)b ) jack and (jacking adapter)b' ) ??
(jack and jacking) adapterComputational Linguistics, Volume 11, Number 1, January-March 1985 21Pierre lsabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental ResultsThese examples show that with ADJ NOUN NOUNsequences and NOUN CONJ NOUN NOUN sequences,two different syntactic groupings are possible.
But onlyone of them is semantically acceptable and results in acorrect ranslation.Moreover, some lexical ambiguities, instead of beingeliminated in the parsing process, will constitute a furthersource of structural ambiguity, each reading of the rele-vant lexical item being compatible with a differentsyntactic structure.
In example (5), drain can be takeneither as a noun or as a verb, when appropriate adjust-ments are made to the surrounding syntactic structure.
(5) Remove dust cap and drain plug.Thus by itself, a syntactic parser produces a highlyambiguous output, and further constraints are needed ina practical MT system.4.2.2 SEMANTICSSemantic processing in the TAUM-AVIATION systemperforms two related tasks: a) it filters the syntacticstructures, eliminating as many ambiguities as possible;and b) it associates with each node of the tree a set ofsemantic features which will be used by transfer ules.Most semantic features originate in the dictionary,where lexical items are described in terms of some 35features that form a tangled hierarchy.
Predicative lexicalitems (verbs, adjectives, certain prepositions) areassigned selectional restrictions on their possible argu-ments in terms of these semantic features.Selectional restrictions constitute the main semanticmechanism used by the system to eliminate ambiguitiesof two types:a. structural ambiguities introduced by syntactic rules;thus the spurious structure proposed by the parserfor (5) is eliminated because the verb drain does notaccept as direct object something in the semanticcategory of plug,b.
lexical ambiguity in the semantic properties of certainlexical items; polysemous words like the noun line(which can denote either an abstract geometricalobject, or physical objects such as conductors) arefrequently disambiguated by selectional restrictions;for example, in Flush the line, the concrete sense isselected.In order for selectional restrictions to work properlyand for trees to be correctly annotated, it is necessary toapply semantic projection rules which assign sets offeatures to tree nodes.
In TAUM-AVIATION, the seman-tic rules work in a compositional fashion, raising selec-tively certain features from daughter nodes to theirmothers (Isabelle 1985).
Rules such as the following areused:?
all of the semantic features of a headnoun are raisedonto the dominating NP node;?
the intersection of the features of two conjoined NPnodes is raised onto the dominating NP node; and?
when the headnoun is a partitive noun (e.g.
portion),and the NP has an of NP complement, he features ofthis complement are raised onto the dominating NPnode.The system also makes use of standard control rulesfor subjectless infinitives and gerundives, and of somepronoun/antecedent rules, in order to enforce semanticconstraints wherever possible.Semantic ambiguity, whether real homography (e.g.the two nouns lead) or polysemy (e.g.
the various sensesof the noun line), is not handled by creating multipleentries in the source language dictionary.
Rather, in itssingle entry, the word is assigned a number of seman-tically incompatible features.
The semantic rules seek tofilter out some of these features, so that no incompatibili-ty remains.
This strategy prevents the redundant syntac-tic search that results from a multiple-entry strategy.4.3 THE TRANSFER MODULEIn principle, transfer ules state correspondences betweentwo sets of unambiguous tructural descriptions.
Theirmost obvious task is to relate the lexical items of SL tothose of TL.
Even if the rules are applied to unambig-uous lexical elements, the correspondences are by nomeans one-to-one: the lexical system of each naturallanguage reflects a specific way of breaking down theconceptual universe.
For this reason, equivalences haveto be stated in terms of structural patterns rather than interms of words or strings of words.To take an example, there is no language-internalevidence that hard is ambiguous in English; however,depending on the context, it is translated into French asdifficile, dur, etc.
The French equivalents have morerestricted collocations.
In all those cases, transfer rulesare needed to select the contextually appropriate quiv-alent.Moreover, very frequently, these lexical transfer ulescannot simply substitute lexical items, leaving the treestructure unaffected.
Since SL and TL lexical itemsfrequently have different contextual requirements (i.e.subcategorization frames), translation rules have toestablish correspondences between a source and a targetstructural pattern, as illustrated by the examples in (6).
(6) a. check x against y ~ comparer x ~ yb.
supply x with y ~ fournir y ~ xc.
cantilever x ~ monter x en porte-~t-fauxd.
bond x electrostatically ~ m6talliser xe.
service x ~ faire l'entretien de xIt is clear that lexical transfer ules must include powerfultransformational mechanisms.
This basic fact has not sofar received the attention it deserves in the MT communi-ty.
The TAUM-AVIATION system provides for full trans-formational power at the level of lexical transfer(Chevalier et al 1981).The transfer component also involves rules for struc-tural transfer, that is, rules that deal with linguistic22 Computational Linguistics, Volume 11, Number 1, January-March 1985Pierre Isabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental Resultscontrasts not tied to any specific lexical item.
Since thesame base rules are used for SL and TL, this sub-compo-nent is kept to a minimum.
Nevertheless, a number ofstructural differences between SL and TL have to beaccounted for by means of contrastive rules.
For exam-ple, because the intermediate language does not providefor "universal semantic tenses", the tense systems of SLand TL have to be explicitly contrasted by a set of rules.Another task left .to structural transfer is to deal withobservable contrasts concerning the use of optional  move-ment  transformations.
In all likelihood, the use of thesetransformations is governed by discourse phenomena thatthe system does not attempt to analyze.
The strategyused in TAUM-AVIATION is to take advantage of thefrequent parallelisms between SL and TL regarding theseaspects of surface structure organization.
Thus, the inter-mediate representation retains "traces" from SL surfacestructure used by the synthesis component to maintain acertain parallelism with SL.
However, in some cases weknow that the two languages exhibit systematic differ-ences in their use of certain movement transformations.The structural transfer grammar describes these facts.For instance, TAUM-AVIATION includes complex rulesfor translating English passives with various Frenchconstructions, as illustrated in the following examples:(7) Quick-disconnect fi tings should not be removed.--,.
Ne pas enleverAes raccords fi d6montage rapide.
(8) Ensure that pump and lines are bled.--,.
S'assurer qu'on a purg6 la pompe et les canalisa-tions.
(9) The flaps are operated by hydraulic system no.
1.Le circuit hydraulique no.
1 actionne les volets.4.4 THE SYNTHESIS MODULESynthesis of the TL text involves three steps: syntacticsynthesis, morphological synthesis, and post-processing.Syntactic synthesis is carried out on the basis of alarge-scale transformational grammar of French.
Sincethe input to the synthesis component is normally a well-formed unambiguous sentential deep structure, synthesishere is much simpler than analysis.
This is not to say thatsynthesis of natural language texts is generally easy.Generating a coherent text from an abstract discourserepresentation is certainly a very difficult problem.
But inTAUM-AVIATION, synthesis can only be achieved on asentential basis.
Therefore, no attempt can be made todescribe the complex discourse factors that influencesentence generation (e.g.
application of "optional" move-ment transformations).
As mentioned in the previoussection, the strategy adopted is to try to preserve acertain parallelism with the SL sentences, since bothlanguages have relatively similar means of expressingdiscourse cohesion.Syntactic synthesis produces a string of lexical itemsannotated with all the information required to inflectthem correctly.
The morphological synthesis componentthen determines the final form of each word.
This is doneon the basis of an exhaustive description of the rules ofFrench inflection (together with their exceptions).
Post-processing reformats the TL text, making use, whereverpossible, of the formatting codes of the SL text.5 COMPUTATIONAL TECHNIQUESFrom the computational point of view, theTAUM-AVIATION system is more complex thanTAUM-METEO, which is entirely written in the Q-SYS-TEMS metalanguage (Colmerauer 1971).
One of theideas underlying TAUM-AVIATION is to make use ofspecialized tools for different tasks in the interests ofincreased efficiency, though somewhat at the expense ofoverall simplicity.In the implementation, the actual modules closelymatch the components of the linguistic model presentedin Figure 1.
They are applied sequentially and communi-cation between components is achieved by means of achart structure (a type of loop-free graph).
The arcs ofthese charts are labelled with tree structures whose nodesare labelled with complex symbols: a categorial label plusa set of features.Most components are based on the following scheme.Certain linguistic data are described with a high-levelmetalanguage; in this metalanguage, the linguistexpresses facts about tree structures.
These descriptionsare compiled into an abstract formal structure interpretedat run time against he material to be translated.
Most ofthese compilers and interpreters are written in PASCAL.5.1 PRE- AND POST-PROCESSINGThese relatively simple components, which map characterstrings onto sequences of chart structures and vice-versa,are implemented as sets of rules in a metalanguage calledSISIF; a set of SISIF rules amounts to a deterministicfinite-state automaton.
These rules are compiled into liststructures, which are interpreted against he input text atrun time.5.2 INFLECTIONAL MORPHOLOGYSince it was possible to exhaustively describe the inflec-tional morphology of both French and English, there wasno compelling reason to use a very high-level formalism.Consequently, in the interests of efficiency, two PASCALprograms were written for morphological analysis ofEnglish and morphological synthesis of French.5.3 DICTIONARIES5.3.1 SOURCE LANGUAGE DICTIONARYA dictionary system called SYDICAN enables the linguistto write lexical rules that associate a complex of lexicalinformation with a string of base forms, forming a path inan input chart.
Two types of rules are provided: a) rulesthat simply add a new path (labelled with the complex oflexical information) to the chart; and b) rules that, inComputational Linguistics, Volume 11, Number 1, January-March 1985 23Pierre Isabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental Resultsaddition, have the effect of taking precedence over short-er matches in the chart (cf.
"longest-match" strategy).The rules are compiled into list structures.
At run time,they are retrieved from an arbitrarily large lexical database and applied to the chart.
The lexical databasesystem includes some maintenance facilities, such asintegrity constraints on its contents, and facilities forretrieving entries through arbitrarily complex requests ontheir contents.5.3.2 BILINGUAL DICTIONARYWe saw in 4.3 that lexical transfer involves rules thatperform complex transformations on tree structures.
TheLEXTRA metalanguage makes it possible to associatewith any lexical item an arbitrarily complex set of treetransformations.
These transformations describe apattern (anchored in the relevant lexical item), which isto be matched against the tree structure at run time.When a match is found, a series of associated actionsspecifying structural changes is performed.An important idea embodied in LEXTRA is that atransfer component should have an explicit description ofthe intermediate language.
In the TAUM approach thisintermediate language is partially defined by a set ofcontext-free rules that describe a common base compo-nent for SL and TL.
LEXTRA takes as data this context-free grammar and guarantees that any manipulated treestructure corresponds to a permissible derivation in termsof that context-free grammar.
This notion is to be relatedto computational formulations of transformational gram-mar such as Petrick (1973), where the deep structuresproduced by the inverse transformations are checkedagainst the rules of the base component.
No equivalentcheck is performed with parsing systems like ATNs.LEXTRA rules are compiled into list structures.
It wasfound that some of the constraints on admissible treestructures could be enforced at compile time(G6dn-Lajoie 1980).
This mechanism is very useful inthe complex task of dictionary development.
It helps vali-date the work of the lexicographer.
At run time, theLEXTRA interpreter searches the tree structure for SLlexical items, retrieves the associated lexical rules andapplies them to the tree.5.4 SYNTAX AND SEMANTICS5.4.1 ANALYSISThe English grammar for syntactic analysis is written inREZO (Stewart 1975, 1978), TAUM's version ofaugmented transition etworks (ATNs).
The REZO meta-language is different from Wood's ATNs (Woods 1970)in several respects.
Some of the differences are:?
REZO does not support morphological nalysis, which isperformed in a separate component;?
tree nodes are complex symbols that include sets offeatures on which boolean operations can beperformed;?
REZO includes a number of primitives to performpattern matching over tree structures;?
in addition to regular ATN states where all transitionsare tried, REZO includes "deterministic" states whereonly the first transition whose test is met is followed;?
REZO accords special status to the states to which arecursive call can be made, so that the resulting gram-mar is a collection of sub-networks.The REZO grammar is compiled into a set ofinstructions for a virtual machine, which is simulated bythe runtime interpreter.
Parsing is done in the usual top-down, depth-first, left-to-right, serial manner.
The inter-preter can either work in an all-paths or in a first-pathmode.
One important difference from Wood's ATN inter-preter is that REZO takes as input a chart structure inwhich lexical ambiguities are encoded and applies thegrammar in parallel to all the paths of this chart.
Theresult is also a chart structure: REZO is thus a chart-to-chart transducer.In 4.2, it was mentioned that syntactic rules createstructural ambiguities, and that semantic processing caneliminate some of these.
Serial parsing provides anothermeans of selecting a particular eading.
Since the transi-tions of the REZO networks are followed in a fixed order,the grammar can be made to produce the most likelyreading first.
In TAUM-AVIATION's analysis grammar,the ordering of the transitions reflects:?
general parsing principles such as those discussed inhuman performance studies (e.g.
Kimball 1973); and?
sublanguage-specific statistical tendencies.5.4.2 STRUCTURAL TRANSFER AND SYNTHESISStructural transfer and syntactic synthesis are imple-mented in the well-known Q-SYSTEMS, which we willnot describe here.
This introduces some heterogeneityinto TAUM-AVIATION, since: a) unlike the other meta-languages, Q-SYSTEMS do not support trees withcomplex symbols as node labels; and b) the compiler andthe interpreter are written in FORTRAN while PASCAL isused for the other metalanguages.In fact, the original design of the system includedprovisions for a new metalanguage well suited to synthe-sis; but time constraints precluded its development.6 EXPERIMENTAL RESULTS6.1 COST-BENEFIT EVALUATIONIn 1981, the sponsor submitted TAUM-AVIATION to acost-benefit evaluation, in order to determine if thesystem was usable in a production environment.
Thisevaluation made by an independent consultant isreported in Gervais (1980), and we will only summarizethe main conclusions.Raw machine output was deemed to have a degree ofintelligibility, fidelity, and style that reaches 80% ofunrevised human translations (HT).24 Computational Linguistics, Volume 11, Number 1, January-March 1985Pierre lsabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental ResultsTable 3.
MT/HT: Compared costs per word ($CDN).Tasks MT HTPreparation/inputTranslationHuman RevisionTranscription/ProofreadingTOTALm$0.100 (69%)$0.030 (21%)$0.015 (10%)$0.145$0.014 (8%)$0.079 (43%)$0.068 (37%)$0.022 (12%)$0.183Revised MT and revised HT have a comparable degreeof quality, but revision costs are twice as high for MT;thus, globally, revised MT turns out to be more expensivethan revised HT as shown in Table 3.
However, it isnoted in the evaluator's report that MT reduces by halfthe human time required in the translation/revision proc-ess.The direct costs of MT could probably be reduced toan acceptable level, for example by interfacing thesystem with a suitable word-processing environment andby reducing the percentage of sentences for which notranslation is produced (Isabelle 1981).Cost-effective production would require the system tobe applicable to at least 6 million words per year.
Inorder to reach that target, the system would have to beextended to translate domains other than hydraulics.
Butthe indirect costs involved in these extensions (e.g.dictionary development) are very high.
Gervais concludesthat it is impossible to assert that translation usingTAUM-AVIATION would be globally cheaper thanhuman translation.6.2 TECHNICAL EVALUATION OF PERFORMANCECost-benefit evaluations are certainly necessary, but asingle evaluation of this type tells one very little abouthow the system can be expected to perform on differenttexts, or after further investment.
TAUM developed amethodology for analyzing the performance of an MTsystem through a systematic examination of its trans-lation errors.The first step is to collect all the errors in the trans-lation of the sample text; translators/revisors then havethe responsibility of deciding what is to be counted as anerror.
A classification scheme for translation errors willinclude headings such as the following: incorrect TLequivalent for a word, incorrect word order, lack of anarticle, etc.In itself, an absolute number of such errors for a giventext is not very revealing; but a comparison of the ratioof errors to word tokens in different exts, or at variousstages of development of the system is an initial source ofuseful information.Still, from the point of view of system development,these "surface" translation problems are merely symp-toms for problems in some component of the system.
Toprovide an answer to questions uch as:?
how many of these problems have a known solution??
how long would it take to correct hem??
how much better would the performance of the systembe after n person/months of work??
what should the priorities be?it is necessary to identify, for each surface problem, oneor several causes in the functioning of the system.
Forexample, the fact that; in the translation of a givensentence, a French adjective is incorrectly inflected couldbe caused by one or more of the following factors:?
incorrect marking in a dictionary entry;?
mistake in TL syntactic rules for agreement;?
incorrect scoping in SL analysis (e.g.
give the wrongbracketing to an ADJ NOUN NOUN sequence); or?
absence of relevant marking in SL (e.g.
when translatingfederal and provincial governments into French, shouldone pluralize the adjectives?
).A sophisticated error classification grid was developed,so that the sources of translation errors could be investi-gated in a coherent and meaningful way.
Basically, thiserror grid reflects the internal organization of the system,so that translation errors can be assigned a precise causein the operation of the system.Once a coherent scheme is available, one can proceedwith the classification of the translation errors found inthe sample text.
This classification process is difficult andtedious, but it is crucial that it be done with accuracy andconsistency.
Frequently, one has to follow "executiontraces" to discover the exact source of a given error.The final step is to look at the possible remedies forthe problems that have been identified.
A careful exam-ination of each problem source will reveal whether or notthere is a known way of eliminating it, and if so, whatamount of effort is needed.If this type of technical evaluation can be carried outat successive stages of development (with both old andnew texts), one gets a clear picture of the evolution ofthe system.
The figures obtained will reveal whether ornot:?
there has been substantial progress compared to previ-ous stages;?
an asymptote has been reached in the curveinvestment/improvement.The same figures will also help determine developmentand research priorities.This sort of technical evaluation was applied twice toTAUM-AVIATION in the final year of the project; only afew person-months of development had been invested inComputational Linguistics, Volume l I, Number l ,  January-March 1985 25Pierre lsabelle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental Resultsthe system between the two tests.
The main goal was tosee how well a system developed on the basis of corporafrom the domain of hydraulics would fare in the domainof electronics.
Some results were as follows:?
In both tests, more than 70% of the failures were clas-sified as having a known solution; the vast majority ofthese could be corrected in 12 person/months  of work.?
From a syntactic point of view, there is no notabledifference between hydraulics and electronics.
In fact,as a result of a minimal effort in correcting some prob-lems discovered in the test on hydraulics, the overallperformance of the parser turned out to be better in theelectronics test.?
As expected, there was a major dictionary problem ingoing from one domain to the other.
Selectionalrestrictions as assigned for hydraulics worked so poorlythat they did more harm than good to the final result.A definitive assessment of the linguistic and computa-tional techniques on which TAUM-AVIATION is basedwould have required a few more applications of thisevaluat ion/correct ion cycle.7 FUTURE DIRECTIONSBefore TAUM was disbanded, Isabelle 1981 voiced theviews of the group on a possible course for short- andlong-term machine translation R&D activities.The difficulties encountered in the AVIATION projectconvinced the Translat ion Bureau that a more permanentand broader R&D base would be required for MT to beviable in Canada.
In 1983, the Translat ion Bureau inconjunct ion with the Canadian Department of Communi -cations, funded a large-scale study to review naturallanguage processing technologies and examine opportu-nities for Canada in this field.The consultants have submitted their report and thetwo Departments involved now have to determine thebest way to implement he recommendations that aremade therein.
In the area of MT, there would appear tobe three fronts on which R&D could be pursued:?
the development and integration of various computeraids to human translation within a translator's work-station;?
the application of second-generation MT technology topromising sublanguages (Kittredge 1983);?
research on third-generation MT technology.REFERENCESBourbeau, Laurent 1981 Linguistic Documentation of theTAUM-AVIAT1ON Translation System.
Groupe TAUM, Universit~ deMontrral, Montrral, Canada.Bourbeau, Laurent 1984 Transfert du syst~me METEO sur micro-ordinateur: 6tude de faisabilitr.
Bureau des traductions, Secrrtariatd'Etat, Ottawa.Chandioux, John and Gu~raud, Marie-France 1981 METEO: unsyst~me l'~preuve du temps.
META 26(1): 18-22.Chevalier, Monique; Dansereau, Jules; and Poulin, Guy 1978TAUM-METEO: description du syst~me.
Groupe TAUM, Universit6de Montrral, Montreal, Canada.Chevalier, Monique; Isabelle, Pierre; Labelle, Francois; and Lainr,Claude 1981 La traductotogie appliqure ~t la traduction automa-tique.
META 26(1): 35-47.Colmerauer, Alain 1971 Les SYSTEMES-Q: un formalisme pouranalyser et synth~tiser des phrases ur ordinateur.
Groupe TAUM,Universit6 de Montrral, Montrral, Canada.Colmerauer, Alain.
et al 1971 TAUM-7I.
Groupe TAUM, Universit6de Montrral, Montrral, Canada.Gervais, Antoni 1980 Evaluation of the TAUM-AVIATION MachineTranslation Pilot System.
Translation Bureau, Secretary of State,Ottawa, Canada.Grrin-Lajoie, Robert 1980 Vrrification des manipulations d'arbres enLEXTRA.
M.Sc.
thesis, Universit6 de Montrral, Montrral, Canada.Isabelle, Pierre; Bourbeau, Laurent; Chevalier, Monique; and Lepage,Suzanne 1978 TAUM-AVIATION: description d'un systrme detraduction automatisre de manuels d'entretien en arronautique.COL1NG-78, Bergen, Norway.Isabelle, Pierre 1981 Some Views on the Future of the TAUM Groupand the TAUM-AVIATION System.
Groupe TAUM, Universit~ deMontrral, Montreal, Canada.Isabelle, Pierre 1985 Machine Translation at the TAUM Group, In:King, Margaret, Ed., Machine Translation: the State of the Art.
Edin-burgh University Press, Edinburgh.Kimball, John 1973 Six or Seven Principles of Surface Structure Pars-ing in Natural Language, Indiana University Linguistics Club,Bloomington.Kittredge, Richard 1983 Sublanguage-Specific Computer Aids toTranslation: A Survey of the Most Promising Application Areas.Translation Bureau, Secretary ofState, Ottawa, Canada.Kittredge, Richard et al 1973 TAUM-73.
Groupe TAUM, Universit~ deMontreal, Montr6al, Canada.Kittredge, Richard; Bourbeau, Laurent; and lsabelle, Pierre 1976Design and Implementation of a French Transfer Grammar.COL1NG-76, Ottawa, Canada.Kittredge, Richard and Lehrberger, John 1982 Sublanguage: Studiesof Language in Restricted Semantic Domains.
Walter de Gruyter,New York.Lehrberger, John 1981 Possibilit6s d'extension du systemeTAUM-AVIAT1ON.
Groupe TAUM, Universit6 de Montr6al,Montr6al, Canada.Lehrberger, John 1982 Automatic Translation and the Concept ofSublanguage.
In: Kittredge and Lehrberger (1982): 81-106.Petrick, Stanley 1973 Transformational Analysis.
In: Rustin, R. Ed.,Natural Language Processing.
Algorithmic Press: 27-41.Stewart, Gilles 1975 Le langage de programmation REZO.
M.Sc.thesis, Universit6 de Montr6al, Montr6al, Canada.Stewart, Gilles 1978 Sp6cialisation et compilation des ATN: REZO.COLING-78, Bergen, Norway.Woods, William A.
1970 Transition Network Grammars for NaturalLanguage Analysis.
Communications of the ACM 13(10): 591-606.26 Computational Linguistics, Volume 11, Number 1, January-March 1985Pierre I~belle and Laurent Bourbeau TAUM-AVIATION: Its Technical Features and Some Experimental ResultsINPUT TEXT:HYDRAULIC PRESSURE IN-LINERELIEF VALVE(See figures 2-4 and 2-5.
)30 Identical interchangeablehydraulic pressure in-line reliefvalves (in-line relief valve) areprovided for each ac hydraulicpump and for the de hydraulicpump.
The in-line relief valves arelocated in the hydraulic servicecenter.
Those for the No.
1, No.1A, and No.
1B ac and dc hydraulicpumps are on the left side next tothe No.
1 service centre assembly.The in-line relief valve for the No.
2ac hydraulic pump is incorporatedin the No.
2 service centre assem-bly.31 The in-line relief valves arepoppet-type, spring-loaded to theclosed position.
A pressure of 3450psi impinging on the poppet is suffi-cient to overcome the opposingspring force, and the poppet willmove from its knife-edge seat.APPENDIXRAW MACHINE OUTPUT:CLAPET DE DECHARGE INCOR-PORE DE PRESSION HYDRAU-LIQUE(Voir les figures 2-4 et 2-5.
)30 Les clapets de d6chargeincorpor6s interchangeables iden-tiques de pression hydraulique(clapets de d6charge incorpor~s)sont pr6vus pour chaque pompehydraulique ca et pour la pompehydraulique co. Les clapets ded6charge incorpor6s sont situ6sdans le compartiment hydraulique.Ceux pour les pompes hydrauliquesca et cc no 1, no 1A et no 1B sontdu c6t6 gauche ~t cOt6 du bloccollecteur no 1.
Le clapet ded6charge incorpor6 pour la pompehydraulique ca no 2 est int6gr6 aubloc collecteur no 2.31 Les clapets de d6chargeincorpor6s sont champignon, sontrappel6s par ressort ~t la positionferm6e.
Une pression de 3450 psis'exergant sur le clapet-champignonest suffisante pour vaincre la forcede rappel du ressort et le clapet-champignon se d6placera de sonsi~ge en couteau.HUMAN REVISION:CLAPET DE DECHARGE INCOR-PORE DE PRESSION HYDRAU-LIQUE(Voir les figures 2-4 et 2-5.
)30 Des clapets de d6chargeincorpor6s interchangeables iden-tiques de pression hydraulique(clapets de d6charge incorpor6s)sont pr~vus pour chaque pompehydraulique ca et pour la pompehydraulique cc.
Les clapets ded6charge incorpor~s sont situ6sdans le compartiment hydraulique.Ceux des pompes hydrauliques ca etcc no 1, no 1A et no 1B sont duc6t6 gauche ~ c6t6 du bloc collec-teur no 1.
Le clapet de d6chargeincorpor6 pour la pompe hydrau-lique ca no 2 est int6gr6 au bloccoUecteur no 2.31 Les clapets de d6chargeincorpor6s, du type champignon,sont rappel6s par ressort ~t la posi-tion ferm6e.
Une pression de 3450psi s'exergant sur le clapet-champig-non est suffisante pour vaincre laforce de rappel du ressort et leclapet-champignon s'dcartera de sonsi~ge en couteau.Computational Linguistics, Volume 11, Number 1, January-March 1985 27
