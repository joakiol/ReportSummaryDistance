Structure from Anarchy: Meta Level Representation f Expert SystemPropositions for Natural Language Interfaces.
1Galina Datskovsky MoerdlerDepartment of Computer ScienceColumbia UniversityNew York, N.Y. 10027phone: (212) 280-8177Arpanet: galina@ columbia.arpa.eduAbst rac t :In this paper we describe a meta levelrepresentation used for mapping natural languageinput into propositions of an expert system.
Thisrepresentation is based on verb classes that arestructured hierarchically, with more generalinformation encoded in the top level nodes and morespecific information in the lower level nodes.Because of its structure, the representation is able toprovide a detailed classification of the propositions,supplying a basis for defming semantics.
It allowsthe system to answer questions about relationshipsbetween propositions without inferencing, as well asto answer questions the expert system could notpreviously handle.1 IntroductionA great deal of work has been done inconstructing natural language interfaces to wellstructured underlying systems, such as data basesystems.
These natural anguage interfaces generallymake use of an assumed system structure, such as aschema, to define semantics \[Martin, Appelt andPereira 83; Grosz et.
al.
85\] \[Woods et.
al.
72; Woods73\] \[Kaplan 79\].
On the other hand, almost no efforthas been made in constructing natural languageinterfaces to systems that do not have such anextensive description, e.g.
expert systems 2.
The lackof such a schema means that the~ is no easy way toobtain information about propositions 3 of theunderlying system.
Thus, in order to build a natural2Throughout thlt paper we ?m only ooncemed with expertsystems that must communicate with their uteri in ot'der to gatherdata befon~ giving advice, inch It  Mycin \[Shot~liffe 76\]3In the rule of the form IF A and B them C, A, B and C an~propositions.
The terms pmlxmtion and fact an~ usedinterch~geably throughout thl.
paper.language interface to expert systems the semanticinterpreter must be able to provide the necessarystructure.
In an earlier paper \[Datskovsky MoerdlereLal.
87\] we briefly described a semantic interpreterthat maps user statements into facts of an expertsystem, as well an inference engine for expertsystems that can efficiendy utilize this input.
In thispaper we discuss the meta level description of theexpert system propositions, imilar to a schema of adata base, utilized by the semantic interpreter andshow how this structure is used in processing of userquestions.Our structure consists of a group of hierarchieswhich are formed from verb categories.
Thehierarchies provide a grouping of the propositions ofan expert system by topic.
For example, allpropositions that deal with interpersonal relationshipsare grouped under one hierarchy, while those dealingwith transfer of possession are grouped underanother.
The meaning of a proposition is specifiedstep by step, as the hierarchy is traversed, thusallowing for mapping of various sentences, or partsof sentences into the propositions.
To test ourtheories, the approach is currendy being implementedas a front end to a small expert system that deals withpersonal income tax matters 4.2 Expert Systems vs. Data Base SystemsMany techniques used in building naturallanguage interfaces for data base systems can notcarry over into the expert system domain because ofthe differences between the two underlying systems.
'In particular, we are implememin8 our ideat on one module ofTaxlmrt\[Entor et.
tL 85\], m expert syttem designed inconjunction with AT&T Bell Laboratories.
Thlt module helpsuteri d~ ~_~mmine whether they can or can not claim an individual s?
dependent \[Datskovsky Moerdler et.al.
87\]tThis research was partially supported by Office of Naval Research grant N00014-82-K-0256.121A semantic interpreter for a data base system usuallyrelies on the regular structure of the dam base asencoded in the schema describing it.
The schemausually describes the fields and tables of a given database and provides uch information as the key fieldof a table, the type of data found in each field,relationships between the fields (e.g.
all the fields ofa given table describe its key field), etc.. Therelationships between tables are indicated bysimilarities and differences of their fields.
A typicalnatural language interface associates emantics ofnouns, adjectives and verb phrases of a naturallanguage with fields of a data base.
Verbs of thenatural language are also associated with actions thatcan be performed on the tables of a given data base,such as Find and Join.In contrast, no schema or description isavailable for expert systems.
The propositions of anexpert system may have arbitrary meanings.
Norelationship between the propositions is clearlydefined.
Although meta level structures have beenbuilt by systems uch as Theresias \[Davis 78\], thesestructures are inadequate for defming semantics.Theresias provides such information as therelationships between antecedents and consequents ofrules, groupings of rules by their left hand sides, etc..Only one type of representation, schemata, actuallygives a shallow (3 levels) description of propositions(as opposed to rules).
However, this information isnot sufficient for complete semantic definition and amore complex structure is required.Another major difference is in the function ofthe two systems.
A data base system is not expectedto know or solve a user's problem, but only supplythe information that the user requests.
Consequently,an interface to a dam base system must be able toretrieve information requested by the user.
In figure1 we present a typical interaction betweenLifer-Ladder \[Hendrix eL al.
78\] and a use,.
Thequestions here involve retrieval of information from anaval data base.user:.
What is the length mad hull numb= of theConstellation?system: .......user.
the home port?system: ...Figure 1: Interaction between ?
us= andLIFER-LADDER (Taken from \[Tennmt 81\])On the other hand, an expert system isdesigned to be a problem solver.
A use~ consults itabout an issue and it must gather information i  orderto advise him.
In figure 2 we present a typicalinteraction between a user and the Mycin \[Shortliffe76\] system (taken from transcripts generated by theauthor).
First, in questions 1-6 the system gathersinformation about the patient, such as age, sex, labanalysis, etc., and then, after many more questionsnot shown in the figure, makes a recommendationbased on the gathered ata.
Note that the menuinterface predefines the order in which information isentered into the system, whereas with a naturallanguage interface, information is entered in noparticular order, i.e it may be imbedded in every userinput.
The addition of new information with everyuser statement means that the expert system has topose fewer questions and that the natural languageinterface must be responsible for managing all thenew information.
Further, the interface may have toderive information ot only from user statements, butalso from questions.
This means that it has to derivethe problem to solve, as well as facts that can be usedfor its solution from any given question, and addthese facts to the data base (or working memory).The action of extracting a goal 5 and adding facts atthe same time has no analogy in a data base system,but  would be similar to allowing the user to queryand UlXiate the data base at the same time.I) Pat ient ' s  name:** PT2442) Age:**  8 0 YEARS3) Sex:* * MALE"'6) F rom what s ite was the spec imenfor CULTURE- I  taken?
** SPUTUMMore similar Questions Follow and finallya recommendation is made\ [Determin ing  which  drugs aredes i rab le  for use aga inst  the(K lebs ie l la -  pneumoniae .
.
.
\ ]\[REC-I\] My pre fer red  therapyrecommendat ion  is as fo l lows:Figure 2: Mycin Transcript~'hmugheut thht paper seth refer to the grab the expert systemmutt prove, not Ion 8 tam met goal,.1223 The  St ructure  in More  Detai lTo translate user input into facts and goals ofan underlying expert system, a structure that is ableto provide a foundation for the translation isnecessary.
This structure must provide the meaningof the expert system propositions, relationshipsbetween them and supply a means of mappingsemantics of words and phrases into thosepropositions.
It is also desirable that such a structurehe general, and hence to some extent ransportablefrom one system to another.<Transfer of possession> \[hmn/org, ", ",'\]Non Phys.oioj\[-,abstract,','\] Phys.
0hi \[-,concrete, ",'\]Money -,m~0n0tary., o1Donation \[-,-,0rg,'\] Income \[--,hmn,'\] / \Tax \[-,-,-,paymen~earn~\] Non tax \[-,-,-,payment/given\]I~ '~_~ 6 .~  (.
'~ ~ a~_~_~ .~a ~Figure 3: Partial Tree formed forl~'leTransfer of possession category  6Our structure consists of a group of hierarchiesformed from classes of verbs.
We have analyzedover 90 verbs most common to our domain andclassified them into 13 categories 7.
These categoriescan be used in any domain that requires the verbsbelonging to them, because they are derived fromgeneral properties of the verbs , thus allowing for adegree of transportability.
Each verb category isorganized hierarchically where each node of ahierarchy is derived from the meanings of one ormore verbs.
A number of selectional restrictions iattached to each node indicating constraints on thethe figure, * stanch for wild card, and .
means that thefeature is inherited flora the patent node.7This is not an absolute number.
Mo~ ca~4oci~ may ben~_,9~__ in other domains wbem ?
grater nmnbm, of ved~ isnecessary.SThe.~ camgoriea am beusd on works m lingumics, e. 8.\[Osso~d 791 and an Roller's ~ .
Fix ?
mo~d~cription of tim caleSoriej see \[Datakovsky Moeldler eLM.
87\]agent, patient, object and modifier of an inputsentence (not all four restrictions are specified forevery category).
The hierarchies group propositionsof an expert system by topic.
The leaves of thehierarchies contain either expert system facts orpointers to other hierarchies, thus forming aconnectexl forest.
The top level nodes of thehierarchies provide general classes into which agroup of propositions of an expert system might fall.At the lower levels of the hierarchies the propositionsare separated into more specific subclasses of a givenparent node, thus further specifying their meanings.At the lowest level, each node points to only oneproposition thus uniquely def'ming itwithin its class.For example, figure 3 shows the partialhierarchy for the Transfer of Possession category.The top level node of the hierarchy is derived fromthe properties of the verbs of the general class ofTransfer of Possession.
Verbs from that class havepointers to this node and all the propositions that dealwith transfer of possession can be accommodated bythis node and the nodes below it.
The selectionalrestrictions on this node indicate that the transfer isinitiated by either a human or an organization andthat the beneficiary of the transfer, the object beingtransferred, as well as any modifiers can beunspecified until some lower level.
The two nodes atthe next level further divide the class of transfer ofpossession verbs and predicates into those dealingwith physical object ransfers and non physical objecttransfers.
The \[-\] in the selectional restrictionsindicate that the feature is inherited from the parentnode.
The restrictions on the two nodes also furtherspecify that the object being transferred must beconcrete in order to take the Plays Obj link andabstract in order to take the Non Phys Obj link.
Atthe next level, the concept of physical object ransfers(as embodied by the Plays Obj node) is furtherspecified.
In this example only one of its children, theMoney node is shown 9.
Again, verbs dealingspecifically with money transfers may point directlyto this node.
The restriction on the object of thetransfer must be monetary in order for this node to bechosen during parsing.
This node is furthersubdivided into Donation and Income, where thedistinction is made based on the recipient of thetransfer, since donations are normally given toorganizations, and income to people.
Next, Incomecan come in two forms, Taxable and Non Taxable, asindicated by the selectional restrictions of the objects9The node I~m 2 other chil&en in the complete tree.123of the transfer, and finally, the bottom level of thehierarchy contains expert system propositions.
Thepropositions (?dependent is gross_income ?income)and (?dependent is amount_of_support ?support)belong to a general class of Transfer of Possession,and a more specific lass Income, indicating that bothpropositions describe a type of income that isgenerally transferred from one party to another.However, because one deals with taxable income andthe other with non taxable income, these propositionsare further subdivided into subclasses at the nextlevel.This kind of gradual division of propositionsinto subclasses not only provides a means formapping user input into facts and goals of an expertsystem, but also allows the system m answerquestions about relationships between thepropositions, often without any infercncing.
Inaddition, it allows the system to make meta levelinferences it could not make without he structure.
Inthe next section we present a brief description of theparsing algorithm and illustrate it with an example.3.1 Pars ing A lgor i thm:  Overv iew andExample .During parsing, an appropriate hierarchy isselected according to the definition of the verb in thesystem's dictionary, where each verb can point to anylevel in a hierarchy, and a selectional restrictionbased algorithm is used to traverse the hierarchy withthe nouns of the sentence guiding the parser down thehierarchy, until an expert system proposition isreached.
The information for this algorithm isencoded into each hierarchy, with the restrictions onthe arguments of the verbs based on noun featm'esderived from Roget's thesaurus.
The system iscurrently being implemented in Common lisp on aSymbolics Lisp Machine.
It uses an ATN parserwhich has been modified to call the semantics atvarious points before deciding which a~ to take next.Syntax and semantk:s run in parallel, with syntaxproviding a deep struclxn, e of a sentence, andsemantics supplying infommtion for modifierattachment.
Although the verb hierarchies are theprimary source of facts, some facts are deriveddirectly from the noun features.As an example of how the natural languageinterface derives both Wopositions and goals fromYes~No questions posed by the user consider thequestion Can i claim my son who earns a salary of$2000?.
A trace of the system execution of thissentence is shown in appendix I.
The trace shows thenodes of the different hierarchies considered by thealgorithm and where the interaction between syntaxand semantics occurs.
It also shows all the predicatesderived by the system and a complete syntactic parse.In yes/no questions the goal is generally indicated bythe main verb.
The syntactic parser identifies claimas the main verb of the sentence.
The verb claim isdefined in the system's dictionary as Classification<+> Dependency 1?,indicating that the verb belongsto the general category of Classification and a morespecific subnode of that category, Dependency.
The<+> indicates that the syntactic subject of thesentence is the semantic agent.
Based on thedefinition of the verb the algorithm enters theClassOeu:ation hierarchy at the Dependency node, asdemonstrated in stam~ents 1 and 2 of the systemtrace, thus limiting the choice of propositions that thisinput can map into to the general category ofClassO~cation and the subclass Dependency (seefigure 4).
Since only one proposition, (?usercan_claim ?dependent), falls into this classification, itis derived as the goal, indicating that the user wantsto know whether he can or can not claim a dependent(the variables of the proposition will later beinstantiated with the appropriate values).The additional information in the relativeclause states that the dependent earns a salary of$2000, or (?dependent is gross_income ?income).
Toderive this additional information, the system selectsa hierarchy based on the meaning of the verb of therelative clause.
The verb to earn is defined in thedictionary as Transfer of possession <+>, so thealgorithm enters the Transfer of Possession hierarchy(shown in figure 3).
The choice of propositions thatthis input can map into is now limited to those in thegeneral class of Transfer of Possession.
Next,because of the feature concrete of the object (twothousand dollars) of the sentence the algorithmselects Phys Obj as the next node to consider.
Basedon the feature monetary of the word dollars theMoney node is selected next.
The Income node ischosen because the recipient of the money has thefeature human, and finally, because salary is definedas payment~earned, thenode Tax is selected, sinceearned payments are generally taxable.
Finally(?dependent is gross_income ?income) is added tothe working memory.
The variables ?dependent andt?A/lhough there are other meaninp of the verb, this is the mostfiequmtly used mcemng inthe tax domain, so the system tries thiscaliph/fma.124?income are later instantiated with son and $2000respectively.
The derivation of this predicate can beseen in statement 5-13 of the system trace inappendix I.Propositions can also be derived from certainnoun phrases.
In this example, the phrase my sonindicates the existence of a child-parent relationship.The system then checks for agreement between thehead pronoun I and the possessive my and once thisagreement is verifies maps the representation f thisrelationship into the proposition (?dependent isson_of ?user), as shown in statement 4 of the trace.<Classification> \[hmn/org, " ",'\]Secrecy\[-,',secret,'l Categorization{.,', ",'\]PeoDle .,h~mn,.,.\] N~ ot)j \[-,obj,','\] j -Oepencfency\[-,.,subjection,'\](?user can_claim ?dependent)Figure 4: Partial Tree formed for the ClassCicationcategory.The mapping of natural language intopropositions of the expert system as demonstratedabove is possible because of the classification ofpropositions and descriptions of their meaningsprovided by the hierarchies.
Note that he hierarchiesare used to def'me semantics of words of the naturallanguage .g.
the verb to earn is directly related tothe meta level structure, or the Transfer of Possessionhierarchy.
The strncture given by the hierarchies alsoprovides a description of the propositions and givessimilarities and differences between them.
Forexample, both propositions (?dependent isgross_income ?income) and (?depeadeat isamount_of..support ?support) would have the generalproperties of the class Income, with unique featuresof their particular subclasses Tax and Non Tax.
Thisunique classification allows for the mapping of theinput in the above example into the aplxopriateproposition.
It also allows the system to answerquestions about the differences twaween the twopropositions, as shown in the next section.
Anotherbenefit of this representation is that it provides thesystem with a way of dealing with input sentenceslike My son earns $2000, that do not completelyspecify a particular proposition.
The sentenceindicates that the desired proposition is in the classIncome, and the system can proceed to specify theappropriate subclass by posing questions to the userwithout any additional inferencing on the part of theexpert system.
This particular capability of thealgorithm will be discussed in greater detail in futurework.3.2 Other Questions that can be Answeredfrom the HierarchiesThe hierarchies allow the system to handle anumber of questions that could not be previouslyhandled by the expert system, and answer otherquestions without invoking the inference process.
Inparticular, these include questions that deal withrelationships between facts and comparisons betweensessions, as well as questions requiring generalinformation.User: My daughter receives astipend of $5000,while my son gets a salary of $2000.WHY is my daughter's tax situation differentfrom my son's?System: Your daughter's stipend is non taxableincome.\[Answered by looking at the Income node of theTransfer of Possession hierarchy, where thetwo paths diverged.\]Figure 5: A Question Answered from theTransfer of Possession HierarchyAS an example of questions that can beanswered without invoking the inference process,consider the hypothetical example in figure 4 wherethe user tells the expert hat his daughter receives astipend of $5000, which translates into theproposition (daughter is amount_of..support 5000),since stipend is defined in the dictionary aspayment.given.
The fact that his son has a salary of$2000 translates into the proposition (son isgross income 2000).
To answer the WHY questionthe system could check where the derivation paths forthe two sets of inputs diverged, and the differencebetween the two subclasses would constitutes theanswer.
In this example the paths diverge at theIncome node of the Transfer of possession hierarchy,thus the answer can be supplied by simply examiningthe hierarchy.125The question in the first example required botha comparison between two  derivation paths as well asthe knowledge of the differences between twopropositions.
As a second example consider thequestion What kinds of family relationships arerecognized by the tax code?
This question is aboutgeneral properties of the tax code and could not behandled by the expert system without the naturallanguage interface, even though all the necessaryinformation was already available in the system.
Toanswer this question it is enough to search thehierarchies for a Relationship node with a child nodethat describes family relationships.
Such a parent-child pair is found in the Possession hierarchy (seefigure 6).
The answer eturned would consist of allthe children found under this pair.<Possession> \[l~mn/org, ", "\]t(~al \[-,-,l~.rol\] Family \[hmn,mL'\] Business{-,.
'\]Spouse Parent... ChildFigure 6: Partial Tree formed for the Possessioncategory.The question handling algorithm is currentlyunder design.
To process WH questions the systemmust ftrst be able to deter\[nine whether it can beanswered from the hierm~hies, or whether theinference engine of the expert system should beinvoked.
Many of the necessary clues that indicatethe question type have been identified, however thereis still some more work to be done on this, as well ason the implementation of the module.
It is clear,however, that the hierarchies give the system theability to handle many more types of questions thanthe expert system alone could handle, and in manyinstances allow questions to be answered withoutinvoking the inference process of the expert system.4 Comparison with Previous Work: NLIsto Expert Systems and Other Work inSemanticsThere has been some effort to constructnatural language interfaces to expert systems, namelyProspector \[Duda eL al.
79\] and Xcaiibur \[CartxmelleLal.
83; Carbonell and Hayes 84\].
Prospector is oneof the fast expert systems to communicate with itsusers in natural anguage.
During the consultationthe user simply describes what has been discovered ata given site by using patterns, built with the help ofthe Lifer \[Hendrix et.
al.
78\] system, of the form"There is <deposit>', "There may be <deposit>", etc.There is not much published information thatdescribes Prospector's natural anguage module.
Wecan only hypothesize that a very simple and limitedset of sentences i accepted by the system based onsample system sessions.Xcalibur's interaction with the user greatlyresembles that of a natural ang~mge interface to adata base system.
Unlike systems uch as Mycin,Xcalibur does not do most of the asking.
It is notresponsible for solving the user's problem, but ratherthe user has to know what he wants and queryaccordingly.
Most expert systems are designed tosolve a user's problem, and this property must bereflected in the interface.
Xcalibur does not seem tobe suitable as an interface for such systems because itis designed to retrieve information rather than solve aproblem.4.1 Other work  in SemanticsOur work draws on Palmer's \[Palmer 85\], butis different from it in several ways.
Palmer'sInference-driven sexnantic analysis is specificallydesigned for a finite, well-defined, i.e.
limiteddomain.
The main element of her approach is a set ofpartially instantiated logical terms, or semanticpropositions, which capture the differentrelationships that can occur in a given domain.Unlike Palmer's work, our interpreter deals with acomplex real world domain.
It also makes a greaterseparation between domain specific and domainindependent knowledge to allow for a degree oftransportability.
Also, while our semantics providesa hierarchical organization, Palmer's does not.Other work that has influenced our own alsoincludes that of Graeme Hirst \[Hirst 83\] and SteveLytinen tLytinen 84\].
One of the main differencesbetween our work and the work mentioned above(including Palmer's) is that our semantics imposes astructure on top of an unstructured underlyingsystem, which is not the goal of the work mentionedabove.1265 Possible Automation of HierarchyDesignThe lack of automatic construction of thehierarchies and automatic classification ofpropositions in them is currently a limitation in oursystem.
If, for a given domain, a certain tree has tobe extended, such extension will have to be done byhand.
Also, propositions have to be hand encoded inthe hierarchies.
This makes transportability to otherdomains more difficult.
After the top level categoriesare selected, the rest of the nodes of the hierarchiesand the propositions, as well as the selectionalrestrictions can not be done interactively.
However,we feel that the hierarchies lend themselves toautomation construction by an Expert System Expert,because they are based on the linguistic properties ofthe verbs in the domain, as well as on the knowledgeof the meanings of propositions.In the future, we would like to design acustomization phase similar to that of Team \[Martin,Appelt and Pereira 83; Grosz et al 85\] andTeli \[-Ballard 86\].
With such a customization phase, agiven expert, such as an Expert Systems Expert, canspend several horn's automatically building up thenecessary parse Irees for a given domain.
We feelthat such a module would geatly enhance the systemand make it much more usable.6 Conclusions and Future ResearchIn this paper we presented a slructure forexpert systems, similar to a dam base schema, thatfacilitates construction of natural language interfaces.This structure is based on verb classification andhierarchical structuring within each categocy.
Thehierarchies provide a grouping of expert systempropositions into classes, thus capturing thesimilarities and differences betweea the pmlx~itions.This grouping provides amal~ing between user inputand the propositions of the expert system, as well as amechanism for dealing with several types ofquestions without additional ~pert  systeminferencing.
The structme provides a mechanism foranswering questions that could not be previouslyhandled by the expert system.
It also provides aflexible and somewhat general mapping allowing fora degree of wansportability.One of our primary goals is to complete theimplementation of our ideas.
Processing ofstatements and yes/no questions has been fullyimplemented and the work on petagraph parsing andhandling of semanUcally incomplete input is ourcurrent focus.
In the future we plan to add suchfeatures as complete WH question processing and anautomatic hierarchy construction algorithm.7 AcknowledgmentsI would like to thank my advisor, KathleenMcKeown for all her help and guidance in this workand Robert Ensor of AT&T for his helpful comments.Appendix I(process '((can I claim my son who earns a salary oftwothousand donars)))1.
In Tree: CLASSIFY2.
Considering the children of DEPENDENCY3.
the proposition that was derived is((?USER ICAN_CLAIMI ?DEPENDENT))back to syntax...4. the proposition derived from the noun phrase(MY SON) is(?DEPENDENT IS ISON_OFI ?USER)5.
In Tree: TRANS OF_POS6.
Considering the children of TRANS OF POSbeck to syntax...7.
Considering the children of TRANS_OF__POSback to syntax...8.
Considering the children of TRANS_OF..POS9.
Considering the children of IPHYS_OBJI10.
Considering the children of MONEY11.
Considering the children of INCOME12.
Considering the children of TAX13.
the proposition that was derived is((?DEPENDENT IS IGROSS_INCOMEI?INCOME))back to syntax...((S (SLrBJ (NP (DET NIL) (DESCRIBERS NIL) (HEAD ((PRONI))) (NUMBER SING)(CONJ NIL) (gEM (HUMAN) NIL)) (QUAI.2FIERSNIL) (Q~ON NO)(CASE OIMECTIVE))) (AUXS (CAN)) (TENSEPRES) (MAINVERB CLAIM) (SEM-~ ((CLASSIFY ?DEPENDENCY))) (ADVERB NIL) (IND-OBJ NIL) (SUBCONJ NIL)(D-ore (NP (Dirt MY) (D~ERS NIL)(HEAD ((NOUN SON)))(NUMBER Sn~G)(CONJ Nn.)
(SEM ((HUMAN MALE RELA'nVE127CHILD) NIL)) (QUALIHF, RS ((S (SUBJ (NP (DET MY) (DESCRIBERSNIL) (HEAD ((NOUN SON))) (SEM ((HUMAN MALE RELATIVECIiXLD) NIL)) (QUESTION NO))XAUXS NIL) (TENSE PRES)(MAINVERB EARN) (SEM-MVERB ((TRANS_OF_POS +))) (ADVERBNIL) (BrD-OBJ NIL)(SUBCONJ Nn.
)(D-OBJ (NP (DET A)(DESCRmERS NIL) (HEAD ((NOUN SALARY))) (NUMBERSING)(CONJ NIL) (SEM ((CONCRETE MONETARY PAYMENT-EARNED) Nn.))
(QUAL~RS (0'I' (PREP OF) (PRF.P-OW (NP (DET~'~I.)
(DESOtmERS tTWOTHOUSAND)) (HEAD ((NOUN DOLLAR)))(NUMBER PLURALXCONJ NIL) (SEM ((MONETARY) (CONCRETENUMBER))) (QUALu.\[F_.R$ NILXQUESTION NO) (CASEOBJECTIVE)))))) (QUESTION NO) (CASE OBJECTIVE))XADJCOMPNIL) (MODIF NIL) (TYPE WH-RELAT\[VE) (QUF~TION-k'\[x~MlgsrrNILXVOICE At=rIVE) (CONJ NIL) (CSENT NIL)))) (QUESTION NO)(CASE POSSESSIVE))) (ADJCOMP N1L)(MODn ~ NIL) (TYPE\[~TERRGO&TIVE) (QUESTION-ELEMENT (YES-NO)) (VOICEACT\[VE)(CONJ N\]L)(CSENT NIL)))THE GOAL IS: ('RISER EAN_O.AIM\] 7D~EYr )References\[Ballard 86\] Ballard B. Semantic Acquifitien inTELI: A Transportable, User-Customized NaturalLanguage Processor.
In Proceedings of twenty flrst ACLconference.
1986.\[CarboneLl and Hayes 84\] Carbonell J., Hayes, P .Recovery Strategies Parsing ExtragrammaticalLanguage.
Technical Report CMU-CS-84-107,Carngie-Mellon University, 1984.\[Carbonell et.al.
83\] Carbonell J., Boggs W.M., MauldinM., Anick, P. Xcalibur Project Report 1.Technical Report CMU-CS-83-143, Carngie-MeLlonUniversity, Digital Equipment Corp., 1983.\[Clancey 83\] CIancey, W. The Epistinxalogy of aRule-Based Expert System - a Framework for Explanation.Art~tcial Intelligence 20,1983.\[Datskovsky Moe~ler et.al.
87\] G. Datskovsky Moerdler,K.
McKeown, J.R. Ensor.
Building Nat, u-al LanguageInterface to Expert Systems.
In Proceedings of the IJCAI.1987.\[Davis 78\] Davis, R. Knowledge Acquisition inRule-Based Systems-Knowledge About Representation asaBasis for System Construction and Maintanance.
PanernDirected Inference Systems.
Academic Press" 1978.\[Duda et.
al.
79\] Duda, R., Gasching, J., Hart, P. ModelDesign in the Prospector Consultant System for MineralExploration.
In Michie, D. (editor), F..wert Systona in themicro-electronic age.
Edinburgh University Press, 1979.\[Ensor et.
al.
85\] Ensor, Gabbe and Blumenthal.
Taxpert- A Framework for Exploring Interactions Among Experts.1985.in preparation.\[Grosz et.
al.
85\] Grosz, B., Martin, P., AIvelt, D.,Pereira, F.,Team: An Experiment inthe Design ofTransportable Natured Language Interfaces.
TechnicalReport, SKI International 1985.\[Hcndrix et.
al.
78\] Henddx, G., Sacerdoti, E., SagalowiczD., Slocum Jl)eveloping a Natural Language Interface toComplex Data.
ACM Transactiona on DatabaseSystems, 1978.\[Hirst 83\] Hitst, G. Semantic InterpretationAgainst Ambiguity.
PhD thesis, Brown University, 1983.\[Kaplan 79\] Kaplan, SJ.
Cooperative ResponsesFrom a Portable Natural Language Data Base QuerySystem.
PhD thesis, University of Pennsylvania, 1979.\[Levin 85\] Levin, B. Lexical Semantics in Review:An Introduction.
In Levin, B.
(editor), Le.xical Semanticsin Review.
M1T, 1985.\[Lytinen g4\] Lytinen S.L.
The Organization ofKnowledge in a Multi-lingual Integrated Parser.
PhDthesis, Yale University, 1984.\[Martin, Appelt and Pereira 83\] Matin, P., Appelt, D.,Peteira, F. Transportability and Generality in aNatural Language Interface System.
InProceedings Of lJCAI.
1983.\[Osgood 79\] Osgood, Charles, E. Focus on MeaningVolume I: Explorcaions inSemantic Space.
MoutonPublishers, 1979.\[Palmer 83\] Palmer, M. Inference-Driven SemanticAnalysis.
In Proceedings of the AAAI.
1983.\[Palmer 85\] Stone Palmer, M. Driving Semantics fora Limited Domain.
PhD thesis, University of Edinburg,1985.\[Pollack g3\] PoLlack, M.E.
Generating ExpertAnswers Through Goal Inference.
Technical Report, SRIInternational, 1983.\[Shortliffe 76\] ShoRliffe, E.H. Mycin: A rule-basedcomputer program for advising physiciana regardinganilimicrobial therapy selection.
PhD thesis, StanfordUniversity, 1976.\[Tennant 81 \] Tennant, H. Nat"red LanguageProcessing.
PetoceLli Books, USA, 1981.\['Webber 71\] Nash-Webber, B., Verbs ofComposition.
1971.Harvard University, 1971.\[Woods 73\] Woods" W.A.
An Experimental parsingSystem for Transition Network Grammars.
In Rustin(editor), Natural Language Processing.
Algorithmic Press,1973.\[Woods el.
al.
72\] Woods W., Kaplan R., Nash-Webber B.The Lunar Sciences Natured Lnaguage Information System:Final Report.
Technical Report 2378, BBN, Cambridge,Mass" 1972.128
