TRANSPORTABLE NATURAL-LANGUAGE INTERFACES: PROBLEMS AND TECHNIQUESBarbara J. GroszArtificial Intelligence CenterSRI International, Menlo Park, CA 94025Department of Computer and In format ion  Science 1University of Pennsylvania, Philadephia, PA 19104I OVERVIEWI will address the questions posed to thepanel from wlthln the context of a project at SRI,TEAM \[Grosz, 1982b\], that is developing techniquesfor transportable natural-language interfaces.The goal of transportability is to enablenonspeciallsts to adapt a natural-languageprocessing system for access to an existingconventional database.
TEAM is designed tointeract with two different kinds of users.During an acquisition dlalogue, a database expert(DBE) provides TEAM with information about thefiles and fields in the conventlonal database forwhich a natural-language interface is desired.
(Typlcally this database already exists and ispopulated, but TEAM also provides facillties forcreating small local databases.)
This dlalogueresults in extension of the language-processlngand data access components that make it possiblefor an end user to query the new database innatural language.A major benefit of using natural language isthat it shifts onto the system the burden ofmediating between two views of the data--the wayin which it is stored (the "database view") andthe way in which an end user thinks about it (the"user's view").
Basically, database access isdone in terms of files, records, and fields, whilenatural-language expressions refer to the sameinformation in terms of entities and relationshipsin the world.In my discussion, I will assume the use of ageneral grammar of English rather than a semanticgrammar, and also that the interpretation ofqueries will pass through an intermediate stage inwhich a database-lndependent representation of themeaning of the query is derived beforeconstructing the formal database query.
This isbecause systems based on semantic grammarsamalgamate i~formatlon about language, about thedomain, ~ asout the database in ways that makeit difficult to transfer those systems to newdatabases.
I will use the term "conceptualschema" to refer to the internal representation of1 Currently visiting under the auspices of theProgram in Cognitive Science at the Unlversity ofPennsylvania.information about the entities in the domain ofdiscourse and the relationships that can holdamong them, 2 and "database schema" to refer to theencoding of information about the way concepts inthe conceptual schema map onto the structures ofthe database.
In addition, I will use the term"logical form" to refer to the representation ofthe literal meaning of an expression in thecontext of an utterance.The insistence on transportability (whichdistinguishes TEAM from previous systems such asLADDER \[Hendrlx et al, 1978\], LUNAR \[Woods,Kaplan, and Webber, 1972\], PLANES \[Waltz, 1975\],REL \[Thompson, 1975\], and CHAT \[Warren, 1981\])entails two major consequences for the design of anatural-language interface.
First, the databasecannot be restructured to make the way in which itstores data more compatible with the way in whicha user would pose his questions.
Second, becausethe DBE cannot be expected to know about theinternal structure of the conceptual schema andthe database schema, these must be organized sothat  the information they encode about anyparticular database and its corresponding domaincan be obtained systematically (and, therefore,automatically).These differences are crucial to anyconsideration of the issues before this panel.Although, for any partlcular database, it may bepossible to handcraft solutions to each problem,such an approach is not viable for a transportablesystem.
Handcraftlng requires expertise incomputational linguistics, knowledge of theinternal structures and algorithms used in aninterface, and so forth--none of which the DBE canbe expected to possess.
In addition, interfacingto an existing conventional database introducesmany problems caused by the difference between thedatabase view and the end user's view.
Many ofthese problems can be avoided if one is allowed todesign the database as well as the natural-language system.
However, given the prevalence ofexisting conventional databases, approaches thatmake this assumption are likely to have llmitedapplicability in the near future.Most of the issues the panel has been askedto address arise (or have analogues) in any2 This schema is a restricted form of the standardAI knowledge base.46application of natural-language processing.
Inthe sections that follow, my objective indlscusslng each of these issues will be to pointout where I see the constraints of the databasequery task as simplifying the general problem andwhere, on the other hand, transportability (andthe way in which database systems typicallystructure information and view the world) makesthings more difficult.
Inevitably, l will beraising at least as many questions as I answer.II AGGREGATESIt is useful to separate problems involvingaggregates into two categories: (I) those t!mtinvolve mapping from natural-language to logicalform, and (2) those that involve translating fromlogical form into a formal database query.
Theexamples presented to the panel have elements ofeach of these.In addressing the question of logical form, Ifirst want to note how similar "how many" and "howmuch" questions are to other degree questions(e.g., "How tall i s  John?").
Consider, forexample,(I) James is old./ How old is James?
(2) The department is big./ How big is thedepartment?
(3)(4)The department has many employees./ Howmany employees does the department have?The ship is heavy./ How heavy is theship?
(5) The ship is carrying much coal./ Howmuch coal is the ship carrying?Hence, it seems that the logical forms for thequeries ought to bear a close resemblance.
Ininterpreting degree questions, the language-processing component of TEAM \[Gzosz et al,1982a\], applies a hlgher-order degree operator tothe predicate that underlies the adjective.
Forexample, the logical form for "How tall is John?
"would be(WHAT H (HEIGHT H) ((DEGREE TALL) JOHN H))The problem in transferring this treatment to "howmany" and "how much" questions is that whileadjectives llke "heavy" are usually treated aspredicates, "many" is usually treated as aquantifier.
So, if "how" is treated by uniformlyapplying some kind of hlgher-ozdez degreeoperator, then that operator has to apply to bothpredicates and quantiflers.
Another possibilitywould be to apply the degree operator to an entirefozmula, as in(WHAT H (HEIGHT H) ((DEGREE (TALL JOHN) H))rather than Just to the head of the formula.Whether this can be made to work, however, dependson whether a satisfactory analysis can be providedwhen the formula consists of mole than Just apredicate and its arguments.The problem of an appropriate logical formfor these questions is not affected by the needfor transportability.
However, transportabilitydoes make the problem of translating from logicalform into a database query more difficult.
Fieldsthat store count totals, llke NUMBER-OF-EMPLOYEES,are semantically complex in much the same way asthe CHILD-OF-ALUMNUS field (the predicate encodedby a count field can be defined in terms of acount operator and the domain entities that are tobe counted), and they present similar problems fortransportability and database access (seesection 5).
The question therefore (to which I donot have an answer) is whether this kind ofsemantically complex field is any simpler tohandle than the more general case.In addition, some ways of storing informationabout aggregates in these semantically complexfields may require inferences to be drawn toanswer ceztaln kinds of queries.
For example, ifthe number of employees in a department must becalculated from the number of employees in eachoffice of the department, answering queries aboutthe number of employees in a department willrequire reasoning about the part/wholerelationship between offices and departments andhow the number of employees in a departmentdepends on that relationship.
A general treatmentof such cases would require both the acquisitionof information about the part/whole relationshipImpllcltly encoded in the database, and theability to infer that (in this case) the count forthe whole is the sum of the counts for the parts.The need for drawing inferences arises withmass fields as well as with count fields.
Forexample, consider a database of ships and theircargoes, with separate entries for the differentkinds of cargo a ship is carrylng.
Then an answerto "How much cargo is the ship cazzylng?"
willrequire the same kind of totaling operation asdoes the query about the number of employees inthe above example.
It may be possible to handlethe most straightforward cases of these phenomenaby adding special purpose information ("hacks" tocompensate for the lack of theorem-provingcapabilltes) for each operator corresponding to adata access system aggregate function, specifyinghow it interacts with part/whole relationships(AVERAGE will work differently from TOTAL).47III TIME AND TENSEThe context of database querying does notseem to make questions concerning time and tenseany easier than they are for linguistics orphilosophy in general; in fact, they are actuallymore difficult because of the extensional natureof the temporal information stored in a database.I t  does not appear useful, even in thedatabase query context, to have differentrepresentations for sentences involving conceptsrelated to points in time and those involvingintervals.
The same natural-language expressionsabout time may be used to refer to a given time aseither a point or an interval.
Consider,(6) How far did the Fox travel yesterday?
(yesterday as an interval over which anevent extends)<7) Who was the officer of the dayyesterday?
(yesterday as a point in asequence of days)It is fairly easy to imagine databases againstwhich each of these queries might be posed and, ineach case, "yesterday" might correspond either toa single database entzy or to a set of entriesspanning an interval.
Furthermore, the same verbcan be used to refer to activities in terms ofpoints or intervals--e.g.,(8) The ship is sailing to Naples.
(interval)(9) The ship is sailing tomorrow.
(point)--and the same event may be viewed as occurringduring an interval or at some single point \[Moore,1981\].
(See Prince \[1982\] for an interestingdiscussion of the differences between (9) and "Theship sails tomorrow.
")On the issue of interpolation, we should notethat questions involving temporal attributes alsoinvolve at least one other attribute of an entity(e.g., its location).
To handle adequatelyqueries about times not explicitly represented inthe database, such factors must he taken intoaccount as the time scale over which an attributechanges (e.g., a ship's position changes moreslowly than an airplane's), and whether or not thechange is linear.
In general, this requiresmechanisms for reasoning about temporalrelationships and complex events, mechanismsnormally absent in database systems.
Also notethat, even when interpolation is possible,additional mechanisms are needed to handl- queriesabout times beyond the last zecord~d~ e+me.
(Ihave been living in Philadelphia for the last fourmonth , Out I will not be two months hence.
)All this suggests that naive interpolation islikely to result in incorrect answers (entitiesmay even have ceased to exist since the last dataabout them was recorded).
I believe it ismisleading to provide direct responses involvingsuch interpolation, because the user has no way ofknowing that the system's reasoning is onlyapproximate, or knowing on what it has based itsanswer.
If the natural-language interfaceisolates a user from the manner in whichinformation is stored, it must compensate byfurnishing sufficient information in its responsesto allow the user to assess their validity.
Ofcourse, this is a more general issue than oneconcerning Just time, but the appeal ofinterpolatlon (as a simple solution) may misleadus into thinking we can provide the user with ananswer that later reflection will reveal as worsethan no answer at all.In an interface designed for a particulardatabase, special purpose routines may be providedthat take such factors as time scale into account.The problem is more difficult to deal with for atransportable natural-language interface, but twostrategies appear possible.
One is to provide thetwo values of the attribute being queried thatcorrespond to times that bracket the timespecified in an actual query.
The second is toassociate with each attribute-time pairing aninterval oyez which the attribute value can beconsidered to be constant, as well as possibly afunction for interpolating between values andextrapolating from them.
The problem fortransportability, then, is obtaining the ~equisiteinformation from the DBE.IV QUANTIFYING INTO QUESTIONSThe problem of quantifying into questions mayhave a simpler solution in the database queryenvironment than it does in general.
Databasequeries usually seek an enumeration (as opposed toqueries seeking a description, as in "Which womandoes every Englishman admire most?
His mother.
"\[Engdahl, 1982\]).
For such cases, it seemspossible to analyze a question as a REQUEST toINFORM (an analysis done in \[Cohen andPerrault, 1979\] to allow planning of questions,taking into account plans and goals of bothspeakers and hearers), with REQUEST being theillocutionary-force operator.
If this is done, aquantifier can outscope the INFORM withoutoutscoplng the REQUEST.
Thus, the logical form of"Who commands each ship" would be something like(REQUEST (EVERY X (SltI?
X)(INFORM "who commands X")))48V SEMANTICALLY COMPLEX FIELDSThe predicate represented in a semanticallycomplex field llke CHILD-OF-ALUMNUS typically hasa definition in terms of simpler concepts, namelyan existential quantifier and whatever entity isbeing quantified over (in this case ALUMNUS).
Ina nontranspoztable system, some of the variabilityof expression that these fields give rise to canbe handled by enriching the conceptual schemaappropriately (e.g., adding to it the class ofalumnl).
However, as the query "Did either ofJohn Jones's parents attend the college?
"illustrates, this by itself is not sufficient ingeneral.In extreme cases, sophisticated deductivecapabilities may be necessary to answer questionsthat can arise in connection with semanticallycomplex fields.
For example, the BLI~FILEdatabase (to which LADDER provided an interface)has a field DOC that records whether or not a shiphas a doctor on board.
To answer a query like "Isthere a doctor within 200 miles of Philadelphia?
"requires not only repzesentlon of the connectionbetween a positive value In the DOC field and theexistence of a doctor, but also the ability toreason that, if a ship that has a doctor on boardis within 200 miles of Philadelphia, then thedoctor himself is within 200 miles ofPhiladelphia.An apparent precondition for the correcttreatment of semantically complex fields is thatthe system should have a richer model of thedomain than the model constituted by the databaseitself.
Konollge \[1981\] suggests one possibleapproach to this in which a metatheory is employedto describe both the domain of discourse and theinformation the database contains.
Axioms in themetalanguage are used to encode things llke theconnection between the existence of an alumnus anda particular value in the CHILD-OF-ALLPMNUS field.It does not seem possible to handle a widevariety of semantically complex fields In atransportable system, unless the system is muchricher than typical DB systems (in which case muchmore general knowledge acquisition schemes must beimplemented, such as those proposed by Hendrix andHaas \[1982\], for example).
~owever, transportablesystems can provide for a fairly wide range offixed phrases corresponding to these fields \[Groszet el, 1982b\]).Vl MULTIFILE QUERIESover which the Join must be made possesscompatible values).
Two basic problems arise incoordinating information from multiple files: (i)determining the relationships among the domainscorresponding to the different fields;(2) accounting for the composition of relationsacross files.It is relatively straightforward to achievecorrectness in (I) even in a transportable system.The composition of relations that are introducedby Joins over distinct files presents greaterdifficulties because natural-language queries mayrefer only implicitly to the composition.
I wantto consider two such cases: (I) the use of a fieldvalue (or a synonym) to modify a noun phrase(e.g., "Italian ships"), and (2) the use of afield value as a head noun referring to entitiespossessing that value for the attributerepresented by the field (e.g., in a databaseabout cars, "Fords" might refer to those cars withmanufacturermFORD).In both cases, it may be ambiguous as toexactly what relationship is being expressed.
Ifwe restrict natural-language interface systems tohandling only isolated queries, the DBE can beasked to eliminate certain of these ambiguities byestablishing which fields have values that can beused to modify (or stand alone for) the entitiesin the database.
Thus, for example, a DBE mightestablish that "Italian ships" will never be usedto refer to ships with a port of departure inItaly.Once discourse contexts are taken intoaccount, the problem becomes more difficult.
Forany field, it is fairly easy to create a contextin which the relation represented by that fieldcan be implicitly expressed by using one of itsvalues as a modifier.
For example, following thequery "Are there more ships sailing from Italy orFrance this month?
", the query "What cargoes arethe Itallan ships carrying?"
uses "Italian ships"to refer specifically to ships departing fromItaly.Vll AcknowledgmentsRobert Moore and Bonnie Webber provided manyhelpful comments on the content and form of thispaper.
Many of the ideas in it have resulted fromdiscussions among the members of the TEAM projectat SRI.
The TEAM project is supported by theDefense Advanced Research Projects Agency underContract N00039-80-C-0645 with the NavalElectronic Systems Command.I will address only those aspects of thisproblem that are directly concerned withinterpreting natural-language queries correctly,and not those that are concerned primarily withdatabase access (e.g., ensuring that the fields49REFERENCESCohen, P. R. and C. R. Perzault \[1979\] "A Plan-Based Theory of Speech Acts," CognitiveScience, Vol.
3, No.
3, pp.
177-212 (July-September 1979)Gzosz, B. et al \[1982a\] "DIALOGIC: A CoreNatural-Language Processing System," toappear  in Proceedings of the NinthInternational Conference on ComputationalLinguistics, Prague, Czechoslovakia (July1982)Gzosz, B. et al \[1982b\] "TEAM: A TransportableNatural-Language System," Technical Note No.263, Aztlflclal Intelligence Center, SRIInternatlonal, Menlo Park, Callfoznla (April1982).Engdahl, E. \[1982\] "Constituent Questions,Topicallzation, and Surface StructureInterpretation," to appear in proceedingsfrom the First West Coast Conference onFormal Linguistics, D. Flicklnger, M. Macken,and N. Wiegand, eds., Stanford, California(1982).Thompson, F.B.
,  and B.H.
Thompson \[1975\]"Practical Natural Language Processing: TheREL System as Prototype," in Advances inComputers 13, M. Rublnoff and M. C. Yovits,eds.
(Academic Press, New York, New York,1975).Waltz, D. \[1975\] "Natural Language Access to aLarge Data Base: An Engineering Approach,"Advance Papers of the Fourth InternationalJoint Conference on Artificial Intelligence,pp.
868-872, Tbilisi,(September 1975).Georgia, USSRWarren, D.H.  \[1981\] "Efficient Processing ofInteractive Relational Database QueriesExpressed in Logic," Proc.
SeventhInternational Conference on Very Large DataBases, pp.
272-283, Cannes, France (September1981).Woods, W. A., R. M. Kaplan, and B. N-Webber \[1972\]"The Lunar Sciences Natural LanguageInformation System," BBN Report 2378, BoltBezanek and Newman, Cambridge, Massachusetts(1972).Rendrix, G.G.,  et al \[1978\] "Developing aNatural Language Interface to Complex Data,"ACM Transactions on Database Systems, Vol.
3,No.
2, pp.
105-147 (June 1978).Eendzlx, G. G. and Haas, N. \[1982\] "Learning byBeing Told: Acquiring Knowledge forInformation Management," to appear in MachineLearning, R.S.
Michalskl, J. Carbonell, andT.
Mitchell, eds.
(Tioga Publishing Co., PaloAlto, California, 1982).Konolige, K.G.
\[1981\] "A MetalanguageRepresentation of Relational Databases forDeductive Question-Answering Systems,"Proceedings of the Seventh InternationalJoint Conference on Artificial Intelligence,pp.
496-503, Vancouver, British Columbia,Canada (August 24-28, 1981).Moore, R. C. \[1981\] "Problems in Logical Form,"Proceedings of the 19th Annual Meeting of theAssociation for Computational Linguistics,pp.
117-124, Stanford University, Stanford,California (June 29-July I, 1981).Prince, E. \[1982\] "The Simple Futurate: Not SimplyProgrsslve Futurate Minus Progressive,"Meeting of the Chicago Linguistics Society,Chicago, Illinois (April 1982).50
