Natural Language for Expert Systems:Comparisons with Database SystemsKathleen R. McKeownDepartment of Computer ScienceColumbia UniversityNew York, N.Y. 100271 IntroductionDo natural language database systems still,~lovide a valuable environment for further work onn~,tural language processing?
Are there othersystems which provide the same hard environment:for testing, but allow us to explore more interestingnatural language questions?
In order to answer ,o  tothe first question and yes to the second (the positiontaken by our panel's chair}, there must be aninteresting language problem which is more naturallystudied in some other system than in the databasesystem.We are currently working on natural languagefor expert systems at Columbia and thus, expertsystems provide a natural alternative nvironment tocompare against the database system.
The relativelyrecent success of expert systems in commercialenvironments (e.g.
Stolfo and Vesonder 83,McDermott 81) indicates that they meet the criteriaof a hard test environment.
In our work, we areparticularly interested in developing the ability togenerate xplanations that are tailored to the user ofthe system based on the previous discourse.
In orderto do this in an interesting way, we assume thatexplanation will be part of natural language dialogwith the system, allowing the user maximumflexibility in interacting with the system and allowingthe system maximum opportunity to provide differentexplanations.The influence of the discourse situation on themeaning of an utterance and the choice of responsefalls into the category of pragmatics, one of theareas of natural language research which has onlyrecently begun to receive much attention.
Giventhis interesting and relatively new area in naturallanguage research, my goals for the paper are toexplore whether the expert system or databasesystem better supports study of the effect of previousdiscourse on current responses and in what ways.1The work described in this paper is partiallysupported by ONR grant N00014-82-K-0256.2 Pragmatics and DatabasesThere have already been a number of effortswhich investigate pragmatics in the databaseenvironment.
These fall into two classes: those thatare based on Gricean principles of conversation andthose that make use of a model of possible userplans.
The first category revolves around the abilityto make use of all that is known in the databaseand principles that dictate what kind of inferenceswill be drawn from a statement in order to avoidcreating false implicatures in a response.
Kaplan(79) first applied this technique to detect failedpresuppositions in questions when the response wouldotherwise be negative and to gener&te responses thatcorrect the presupposition instead~.
Kaplan's workhas only scratched the surface as there have followeda number of efforts looking at different types ofimplicatures, the most recent being Hirschberg's (83)work on scalar implicature.
She identifies a varietyof orderings in the underlying knowledge base andshows how these can interact with conversationalprinciples both to allow inferences to be drawn froma given utterance and to form responses carryingsufficient ~formation to avoid creating falseimplicatures ?.
Webber (83) has indicated how thiswork can be incorporated as part of a databaseinterface.The second class of work on pragmatics andlanguage for information systems was initiated byAllen and Perrault (80), and Cohen (78) and involvesmaintaining a formal model of possible domain plans,of speech acts as plans, and of plausible inferencerules which together can be used to derive a2Kaplan's oft-quoted example of this occurs in thefollowing sequence.
If response (B) were generated,the false implicature that CSEl l0 was ~iven inSpring '77 would be created.
(C) corrects this falsepresupposition and entails (B) at the same time.A: How many students failed CSEl l0 in Spring '77?B: None.C: CSEl l0 wasn't given in Spring 77.3For example, knowledge about set membershipallows the inference that not all the Bennets wereinvited to be drawn from response (E) to quesUon(D):D: Did you invite the Bennets?E: 1 invited Elizabeth.190speaker's intended meaning from a question.
Theirwork was done within the context of a railroadinformation system, a type of database.
As with theGrieean-based work, their approach is being carriedon by others in the field.
An example is the work ofCarberry (83) who is developing a system which willtrack a user's plans and uses this information toresolve pragmatic overshoot.
While this work has notbeen done within a traditional database system, itwould be possible to incorporate it if the databasewere supplemented with a knowledge base of plans.All of these efforts make use of systemknowledge (whether database contents or possibleplans), the user's question, and a set of rules relatingsystem knowledge to the question (whetherconversational principles or plausible inference rules)to meet the user's needs for the current question.That this work is relatively recent and that there ispromising ongoing work on related topics indicatesthat the database continues to provide a goodenvironment for research issues of this sort.3 Extended DiscourseWhat the database work does not address isthe influence of previous discourse on responsegeneration.
That is, given what has been said inthe discourse so far, how does this affect wh~tshould be said in response to the current question "~Our work addresses these questions in the context ofa student advisor expert 5 system.
To handle thesequestions, we first note that being able to generatean explanation (the type of response that is requiredin the expert system) that is tailored to a userrequires that the system be capable of generatingdifferent explanations for the same piece of advice.We have identified 4 dimensions of explanationwhich can each be varied in an individual response:point of view, level of detail, discourse strategy, andsurface choice.For example, in the student advisor domain,there are a number of different points of view thestudent can adopt of the process of choosing coursesto take.
It can be viewed as a state model process(i.e., "what should be completed at each state in theprocess f"), as a semester scheduling process (i.e.,"how can courses fit into schedule slots?
"), as aprocess of meeting requirements (i.e., "how docourses tie in with requirement sequencinge"), or asprocess of achieving a balanced workload.
Given4Note that some natural language databasesystems do maintain a discourse history, but in mostcases this is used for ellipsis and anaphora resolutionand thus, plays a role in the interpretation ofquestions and not in the generation o!
responses.5This system was developed by a seminar classunder the direction of Sa\]vatore Stotfo.
We arecurrently working on expanding the capabilities andknowledge of this system to bring it closer to aeneral roblem solvin sstem Matthews 84.these different points of view, a number of differentexplanations of the same piece of advice (i.e., yes)can be generated in response to the question,"Should I take both discrete math and datastructures next semesterS":?
State Model: Yes, you usually take themboth first semester sophomore year.?
Semester Scheduling: Yes, they'reoffered next semester, but not in thespring and you need to get them out ofthe way as soon as possible.?
Requirements: Yes, data structures is arequirement for all later Computer Sciencecourses and discrete math is a co-requisitefor data structures.?
Workload:  Yes, they complement eachother and while data structures requires alot of programming, discrete does not.To show that the expert system environmentallows us to study this kind of problem, we firstmust consider what the obvious natural languageinterface for an expert system should look like.Here it is necessary to examine the full range ofinteraction, including both interpretation andresponse generation, in order to determine what kindof discourse will be possible and how it can influenceany single explanation.
A typical expert system doesproblem-solving by gathering information relevant tothe problem and making deductions based on thatinformation.
In some cases, that information isgathered from a system environment, while in others,the information is gathered interactively from a userThis paper will be limited to backward chainingsystems that gather information interactively as theseprovide a more suitable environment for naturallanguage (in fact, it is unclear how natural languagewould be used at all in other systems, except toprovide explanations after the system has producedits advice).In a backward chaining system, the expertsystem begins by pursuing a goal (for example, todiagnose the patient as having myoeardia).
Toascertain whether the goal holds or not, the systemgathers information from the user often usingmultiple choice questions to do so.
Depending onthe answer given to a single question, the systemforms a partial hypothesis and asks other questionsbased on that hypothesis.If natural language were used in place of sucha menu-like interface, the interaction might looksomewhat different.
Instead of the system beginningby asking questions, the user might initiateinteraction by suggesting a plausible goal (forexample, a likely diagnosis) supporting it with severaljustifications.
The system could use this informationto decide which goal to pursue first and to fill ininformation which the system would otherwise have191had to request using menu questions.
Alternatively,if the system has several top-level problem solvingcapabilities (e.g., perform a diagnosis or recommenddrug treatment), the user's initial question mayindicate which o!
these problem solving capabilities isbeing called on.
.
Again, the system can use thisinformation to avoid asking a question it wouldnormally have to ask.
The use of natural languageas an "overlay" on an underlying menu system toallow the user to directly state his/her goals, to skipirrelelvant questions, and to provide information to asequence of menu questions in a single utterance isan issue we are currently exploring at Columbia.For example, the underlying expert system inthe student advisor domain has two possible problemsolving capabilities: it can help the student plan nextsemester's chedule or it can provide informationabout university courses.
Using the menu interface,the system would first query the user to ask whichof these is desired.
If the student chose to plan thenext semester schedule, the system next asks a seriesof questions to determine the student's year, whatcourses have already been taken, and what coursesthe student wants to take.
A hypothetical naturallanguage interaction (towards which we are working)is shown below.
Note that the system can avoidasking three questions in this case (the requiredproblem solving capability, the student's year, andthe courses already taken) as these are all indicatedin the first user utterance.
In the last systemresponse, the system provides its advice withjusUfication:1) User: I'm a sophomore and just finished datastructures.
What courses should I takethis spring?2) System: Have you taken discrete math?3) User: Yes.4) System: Are there any courses you'd particularlylike to take?5) User: I'd like to take less programmingcourses.6) System: I suggest you take fundamentalalgorithms and finite math which areboth offered next semester You shouldhave finished both courses by the endof your sophomore year and onlyfundamental algorithms requiresprogramming.There are a number of ways in which this typeof discourse allows us to address our objectives oftaking previous discourse into account to generatetailored responses.
This discourse segment is clearlyconcerned with a single purpose which is stated bythe user at the beginnning of the session s This isthe goal that the expert system must pursue and theensuing discourse is directed at gathering informationand defining criteria that are pertinent to this goal.Since the system must ask the user for informationto solve the problem, the user is given theopportunity to provide additional relevantinformation.
Even if this information is not strictlynecessary for the problem-solving activity, it providesinformation about the user's plans and concerns andallows the system to select information in itsiustifieation which is aimed at those concerns.
Thus,in the above example, the system can use thevolunteered information that the user is a sophomoreand wants to take less programming courses to tailorits justification to just those concerns, leaving outother potentially relevant information.Is this type of extended discourse, revolvingaround an underlying goal, possible in the databasedomain?
First, note that extended discourse in anatural language database system would consist of asequence of questions related to the same underlyinggoal.
Second, note that the domain of the databasehas a strong influence on whether or not the user islikely to have an underlying goal requiring a relatedsequence of questions.
In domains such as thestandard suppliers and parts database (Codd 78), itis hard to imagine what such an underlying goalmight be.
In domains such as IBM's TQA townplanning database (Petrick 82), on the other hand, auser is more likely to ask a series of relatedquestions.Even in domains where such goals are feasible,however, the sequence of questions is only implicitlyrelated to a given goal.
For example, suppose oursystem were a student advisor database in place ofan expert system.
As in any database system, theuser is allowed to ask questions and will receiveanswers.
Extended discourse in this environmentwould be a sequence of questions which gather theinformation the user needs in order to solve his/herproblem.
Suppose the user again has the goal ofdetermining which courses to take next semester.S/he might ask the following sequence of questionsto gather the information needed to make thedecision:1.
What courses are offered next semester?2.
What are the pre-requisites?3.
Which of those courses are sophomorelevel courses?4.
What is the programming load in eachcourse?6Over a longer sequence of discourse, more than asingle user ~oa--\] is likely to surface.
I am concernedhere with discourse segments which deal with asinle or related set of oals.192Although these questions are all aimed atsolving the same problem, the problem is neverclearly stated.
The system must do quite a bit ofwork in inferring what the user's goal is as well asthe criteria which the user has for how the goal isto be satisfied.
Furthermore, the user has theresponsibility for determining what information isneeded to solve the problem and for producing thefinal solution.In contrast, in the expert system environment,the underlying expert system has responsibilitycoming up with a solution to the given problem andthus, the natural language system Is aware ofinformation needed to solve that goal.
It can usethat information to take the responsibility fordirecting the discourse towards the solution of thegoal (see Matthews 84).
Moreover, the goal itself ismade clear in the course of the discourse.
Suchdiscourse is likely to be segmented into discernabletopics revolving around the current problem beingsolved.
Note that one task for the natural languagesystem is determining where the discourse issegmented and this is not necessarily an easy task.When previous discourse is related to the currentquestion being asked, it is possible to use it inshaping the current answer.
Thus, the expert systemdoes provide a better environment m which toexplore issues of user modeling based on previousdiscourse.4 Conc lus ionsThe question of whether natural languagedatabase systems still provide a valuable environmentfor natural language research is not a simple one.As evidenced by the growing body of work onGricean implicature and user modelling of plans, thedatabase environment is still a good one for someunsolved natural language problems.
Nevertheless,there are interesting natural language problems whichcannot be properly addressed in the databaseenvironment.
One of these is the problem oftailoring responses to a given user based on previousdiscourse and for this problem, the expert systemprovides a more suitable testbed.References(Allen and Perrault 80).
Allen, J .F .
and C .R .Perrault, "Analyzing intention in utterances,"Artificial Intelligence 15, 3, 1980.
(Carberry 83).
Carberry, S., "Tracking user goals inan information-seeking environment," inProceedings of the National Conference onArtificial Intelligence, Washington D.C., August1983.
pp.
59-63.
(Codd 78).
Codd, E. F., et.
al., Rendezvous Version1: An Experimental English-Language QueryFormulation System for Casual Users ofRelational Databases, IBM Research Laboratory,San Jose, Ca., Technical Report RJ2144(29407),1978.
(Cohen 78).
Cohen, P., On Knowing What to Say:Planning Speech Acts, Technical Report No.118, University of Toronto, Toronto, 1978.
(Grice 75).
Grice, H P., "Logic and conversation,"in P. Cole and J. L Morgan (eds) Syntax andSemantics: Speech Acts, Vol.
3, AcademicPress, N.Y., 1975.
(Hirschberg 83).
Hirschberg, J., Scalar quantityimplicature: A strategy for processing scalarutterances.
Technical Report MS-CIS-83-10,Dept.
of Computer and Information Science,University of Pennsylvania, Philadelphia, Pa.,1983.
(Kaplan 79).
Kaplan, S. J., Cooperative responsesfrom a portable natural language database querysystem Ph.
D. dissertation, Univ.
ofPennsylvania,Philadelphia, P ., 1979.
(Matthew 84).
Matthews, K. and K. McKeown,"Taking the initiative in problem solvingdiscourse," Technical Report, Department ofComputer Science, Columbia University, 1984.
(McDermott 81).
McDermott, J., "Rl: The formativeyears," A/ Magazine 2:21-9, 1981.
(Petrick 82).
Petrick, S., "Theoretical /TechnicalIssues in Natural Language Access toDatabases," in Proceedings of the 20th AnnualMeeting of the Association for ComputationalLinguistics, Toronto, Ontario, 1982 pp.
51-6.
(Stolfo and Vesonder 82).
Stolfo, S. andG.
Vesonder, "ACE: An expert systemsupporting analysis and management decisionmaking," Technical Report, Department ofComputer Science, Columbia University, 198~, toappear in Bell Systems Technical Journal.
(Webber 83).
"Pragmatics and database questionanswering," in Proceedings of the EighthInternational Joint Conference on ArtificialIntelligence, Karlsruhe, Germany, August 1983,pp.
1204-5.193
