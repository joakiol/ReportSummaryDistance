Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 553?560Manchester, August 2008What?s the Date?High Accuracy Interpretation of Weekday NamesPawe?
Mazur1,21Institute of Applied Informatics,Wroc?aw University of TechnologyWyb.
Wyspia?nskiego 27,50-370 Wroc?aw, PolandPawel.Mazur@pwr.wroc.plRobert Dale22Centre for Language Technology,Macquarie University,NSW 2109, Sydney, Australia{mpawel,rdale}@ics.mq.edu.auAbstractIn this paper we present a study on theinterpretation of weekday names in texts.Our algorithm for assigning a date to aweekday name achieves 95.91% accuracyon a test data set based on the ACE2005 Training Corpus, outperforming pre-viously reported techniques run againstthis same data.
We also provide the firstdetailed comparison of various approachesto the problem using this test data set, em-ploying re-implementations of key tech-niques from the literature and a range ofadditional heuristic-based approaches.1 IntroductionMany temporal expressions in text are underspeci-fied, requiring contextually-sourced information inorder to determine their correct interpretation.
Insome cases, it is sufficient to determine what issometimes called the temporal focus, so that theprecise location of a relative temporal expressionon a timeline can be determined with respect tothis ?time of speaking?.
Consider, for example, ex-pressions like the following:(1) three days ago(2) last Monday(3) in two weeks timeOnce we know the temporal focus, calculation ofthe temporal location referred to in each of thesecases is straightforward, since the temporal ex-pressions themselves explicitly indicate what wec?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.will call the direction of offset (here, respectively,past, past and future).
However, in other casesthere is no explicit indication of the direction ofoffset from the temporal focus.
This is most ob-viously the case when bare expressions based oncalendar cycles?i.e., weekday names and monthnames?are used, as in the following example:(4) Jones met with Defense Minister Paulo Portason Tuesday and will meet Foreign Minis-ter Antonio Martins da Cruz before leav-ing Portugal Wednesday.Here, the proper interpretation of the referencesto Tuesday and Wednesday requires at the least acorrect syntactic analysis of the sentence, in orderto locate the controlling verb for each weekdayname.
The tense of this verb can then be usedto determine the direction?either in the past or inthe future?in which we need to look to establishthe fully specified date referred to.
In the case ofexample (4), this means determining that Tuesdayis in the scope of the verb met, and that Wednes-day is in the scope of the verb group will meet.As we note below, it turns out that there are caseswhere even the controlling verb does not providesufficient information to determine the direction ofoffset.
But even in those cases where the tenseof the verb does provide the relevant information,there are two problems.
First, especially when thesentences considered are complex, there is a non-negligible likelihood that the analysis returned by aparser may not be correct, and this is especially thecase when the sentences in question contain struc-tures such as prepositional phrases: the attachmentof these is notoriously a source of ambiguity, andthey just happen to often be the hosts to temporalexpressions.
Second, even if a parser provides thecorrect analysis, parsing technology is still compu-553tationally expensive to use when processing verylarge bodies of text; if we are interested in time-stamping events described in significant volumesof data, we would prefer to have a faster, moreheuristic-based approach.In this paper, we explore the development of afast and high accuracy algorithm for the interpre-tation of weekday names, in particular with regardto determining the direction of offset to be usedin the temporal interpretation of these expressions:in essence, how can we determine whether the dayreferred to is in the past or in the future?The rest of the paper is structured as follows.
InSection 2 we present some general observations onthe interpretation of weekday names in text.
Sec-tion 3 provides a review of related work.
In Sec-tion 4 we describe the corpus used for evaluation,and in Section 5 we describe in detail the variousalgorithms we evaluated.
Section 6 compares theresults of the various algorithms when applied tothe corpus, and Section 7 provides an error anal-ysis.
Finally, in Section 8 we draw some conclu-sions and point to future work.2 The ProblemThe interpretation of relative temporal expres-sions1can be seen as a two step process: (1) firstwe have to determine a reference point for the in-terpretation of the expression;2(2) then we have tocalculate the actual position of the referred-to timeon the timeline.Once we have the reference point determined,the interpretation of the offset from this referencepoint requires us to determine the magnitude anddirection of offset.
As noted above, in some casesthe tense of the controlling verb will indicate thedirection of offset; but prepositional attachmentambiguity can easily damage the reliability of suchan approach, as demonstrated by the followingminimal pair:(5) We can show you some pictures on Monday.
(6) We can show you some pictures from Monday.In example (5), the correct PP attachment is re-quired in order to determine that Monday is in the1In the literature, a variety of different terms are used:(Schilder and Habel, 2001) call these expressions indexicals,and (Han et al, 2006b) uses the term relative for what wecall anaphoric references: in our terminology, both deicticand anaphorical expressions are relative.2This reference point is often referred to as the temporalfocus or temporal anchor.scope of the verb group can show, allowing us toinfer that the Monday in question is in the future.Example (6), on the other hand, is quite ambigu-ous and requires world knowledge in order to de-termine the correct attachment.We are interested, therefore, in determiningwhether some heuristic method might providegood results.
In the rest of this paper, we focuson the determination of the direction of offset.
Wewill not explicitly address the question of deter-mining the temporal focus: although this is clearlya key ingredient, we have found that using the doc-ument creation date performs well for the kinds ofdocuments (typically newswire stories and similardocument types) we are working with.
More so-phisticated strategies for temporal focus trackingwould likely be required in other genres.3 Related WorkThe literature contains a number of approaches tothe interpretation of weekday names, although weare not aware of any pre-existing direct compari-son of these approaches.3Filatova and Hovy (2001) assign time stamps toclauses in which an event is mentioned.
As partof the overall process, they use a heuristic for theinterpretation of weekday names: if the day namein a clause is the same as that of the temporal focus,then the temporal focus is used;4otherwise, theylook for any ?signal words?
or check the tense ofthe verb in the clause.
An analogous approach istaken for the interpretation of month names.Negri and Marseglia (2005), in their rule-basedsystem for temporal expression recognition andnormalisation, use what they call ?context words?,such as following or later, to decide on the inter-pretation of a weekday name.
Consider the fol-lowing example:(7) He started studying on March 30 2004, andpassed the exam the following Friday.Here, having identified the date March 30 2004(which happens to be a Tuesday), they then recog-nise the structure ?following + trigger?
and reasonthat the Friday is three days later.3Although Ahn et al (2007) compared their results withthose presented by Mani and Wilson (2000), they went onto point out that, for a variety of reasons, the numbers theyprovided were not really comparable.4Filatova and Hovy use the term reference point for whatwe call the temporal focus.554There have also been machine-learning ap-proaches to the interpretation of temporal expres-sions.
Ahn et al (2005) describes a system de-veloped and tested on the ACE 2004 TERN testcorpus.
Using lexical features, such as the oc-currence of last or earlier in a context windowof three words, their maximum entropy classifierpicked the correct direction (?backward?, ?same?,or ?forward?)
with an accuracy of 59%; the addi-tion of features encoding information about tenseincreased the result to 61%.Ahn et al (2007) go on to describe a system us-ing a classifier based on support vector machinesand an extended set of features over a larger subsetof the data.
This algorithm was used to determinethe direction of all relative temporal expressions,not just the names of weekdays.
They used threesets of features:1.
Character type patterns, lexical features suchas weekday name and numeric year, a con-text window of two words to the left, and sev-eral parse-based features: the phrase type, thephrase head and initial word (and POS tag),and the dependency parent (and correspond-ing relation) of the head.2.
The tense of the closest verb (w.r.t.
depen-dency path), the POS tag of the verb, and thePOS tags of any verbal elements directly re-lated to this verb.3.
Features comparing year, month name andday name of a temporal expression to thoseof the document creation date.Their experiments demonstrated that the third setwas the most useful.Han et al (2006a) report on the development ofthe Time Calculus for Natural Language (TCNL),a compact formalism designed to capture themeaning of temporal expressions in natural lan-guage, which is built on top of their constraint-based calendar model (see (Han and Lavie, 2004)).In this formalism each temporal expression is con-verted to a formula in TCNL, which then can beprocessed to calculate the value of a temporal ex-pression.
Interpretation of weekday names usesthe tense of the nearest verb chunk and the pres-ence of lexical items such as next.
Their tempo-ral focus tracking mechanism allows correct inter-pretation of cases like ?I am free next week.
Howabout Friday?
?, where the TCNL formula for Fri-day, being +{fri}, reflects the occurrence of next inTable 1: ACE 2005 Training CorpusDomain #Docs #Words # TIMEX2BC 60 40415 626BN 226 55967 1455CTS 39 39845 409NW 106 48399 1235UN 49 37366 741WL 119 37897 1003Total 599 259889 5469Table 2: Weekdays in ACE 2005 Training CorpusDomain #Docs # TIMEX2 # per docBC 4 7 (1.91%) 1.75BN 25 31 (8.47%) 1.24CTS 2 2 (0.54%) 1.00NW 102 292 (79.56%) 2.86UN 3 3 (0.81%) 1.00WL 19 32 (8.72%) 1.68Total 155 367 (100%) 2.37the preceding sentence.Most closely relevant to the work described inthe present paper are the approaches described in(Baldwin, 2002), (Jang et al, 2004) and (Mani andWilson, 2000).
Since we have re-implemented ver-sions of these algorithms for the present paper, weleave description of these to Section 5.4 Corpus and Experimental SetupFor this work we used the ACE 2005 Training Cor-pus, which is publicly available and distributed bythe Linguistic Data Consortium (LDC).5It has al-ready become the gold standard in the informationextraction community, especially for the temporalexpression recognition and normalisation (TERN)task, and currently it provides the largest avail-able corpus of annotated temporal expressions.
Ta-ble 1 presents some relevant statistics, and Table 2shows the distribution of bare weekday names (asTIMEX2 counts) in the corpus across the variousgenres represented.6For the work described here, we used only thosedocuments in the corpus that contained at least oneweekday name; all subsequent analysis makes useonly of the gold standard annotations of the bareweekday names in these documents, thus signifi-cantly reducing corpus processing time.
This re-sults in a total of 367 instances, once errors (ofwhich there are quite a few) in the gold standard5The corpus?s catalogue number is LDC2006T06.6BC = Broadcast Conversations; BN = Broadcast News;CTS = Conversational Telephone Speech; NW = Newswire;UN = Usenet Newsgroups; and WL = Weblogs.555annotations have been repaired.
We made the fol-lowing changes to the gold standard data:?
One day name had been missed by the anno-tators; we added this.?
Some 40 values were corrected from the for-mat YYYY-Wnn-m to YYYY-MM-DD: al-though both are correct in some sense, theACE guidelines indicate that the second is thepreferred form.?
Eight cases where the incorrect value hadbeen provided by the annotators were cor-rected.Specific details of these corrections, and the com-plete data set used, are available on the web.75 Evaluated ApproachesWe implemented and evaluated a number of bothsimple and more complex approaches to determin-ing what date is meant in a text when a bare week-day name is used.
These methods, described be-low, can be divided into two main classes: (a) 7-day window based, and (b) tense analysis based.Our new algorithm is a hybrid solution that incor-porates ideas from both of these approaches.5.1 BaselinesOur baselines are motivated by the observation thatdays referred to by bare weekday names are typi-cally temporally close to the temporal focus.8Past7-day Window (inclusive): This baseline looksfor the specified day in a 7-day window whoselast day is the temporal focus.
In other words, daynames are always assumed to refer to days in thelast week, including the ?day of speaking?.Past 7-day window (exclusive): This is the sameas the approach just described, except that we lookfor the referred-to day in the week leading up tobut not including the ?day of speaking?.Future 7-day window (inclusive): This is thefuture-oriented version of the first approach de-scribed above: we look for the specified day in a7-day window whose first day is the temporal fo-cus.
This assumes that all day name references areto the present or future.97Visit http://TimexPortal.info.8Recall that in the present work we take the temporal focusto be the document creation date.9An informal check of email data drove Han et al (2005)to use the simple strategy of always assuming that weekdaynames refer to days in the future.Future 7-day window (exclusive): In this case the7-day window starts on the day following the ?dayof speaking?.5.2 Algorithms5.2.1 Baldwin?s 7-Day WindowThis algorithm was presented in (Baldwin, 2002;Jang et al, 2004).
It is similar to our window-based baselines, but in this case the temporal focusis the middle day of the 7-day window.
This ap-proach was used in their research after observingthat 96.97% of weekday name expressions in theirEnglish corpus referred to dates within such a win-dow.
Suppose we have the following sentence in adocument with creation date 2003-06-16 (a Mon-day):(8) Police arrested her in Abilene, Texas, Saturdaywhere she had moved with a friend June 2.The 7-day window then spans from Friday(June 13) to Thursday (June 19).
The referenceto Saturday is assigned (correctly) the value of thesecond day in the window, i.e.
2003-06-14.
Notethat this method will deliver the wrong result whenthe referred-to day actually falls further than threedays either side of the temporal focus.
Suppose,for example, we have the following sentence in adocument written on 2005-01-01 (a Saturday):(9) We got into Heathrow on Monday morning.Here the 7-day window spans from Wednesday toTuesday, and so the reference to Monday will beassigned the incorrect interpretation 2005-01-03.5.2.2 Mani and Wilson?s Tense EstimationIn the system presented in (Mani and Wilson,2000), weekday name interpretation is imple-mented as part of a sequence of interpretation rulesfor temporal expression interpretation more gener-ally.
This algorithm attempts to establish the tenseof what we have called the controlling verb in thefollowing way.
First, it looks backwards from thetemporal expression in question to any previoustemporal expression in the sentence, or if there isnone, to the beginning of the sentence.
If no verbis found here, then it looks between the temporalexpression and the end of the sentence; and if averb is still not found, then it looks in front of anypreceding temporal expression found back to thebeginning of the sentence.
If the verb found is inpast tense, the direction of offset is assumed to be556Table 3: Interpretation rulesTense Example DirectionPresent Continuous I am flying to New York on Monday.
FuturePast Simple I wrote a paper on Monday.
PastFuture Simple I will write a paper on Monday.
FuturePresent Perfect I have been writing a paper since Monday.
PastBare Past Participle The draft written on Monday was useless.
PastModal Verb I should finish the paper on Monday.
FutureModal Verb + have I should have submitted the paper on Monday.
Pastbackwards; if the tense is future, then the forwarddirection is used.
If the verb found is in presenttense, then the temporal expression is passed to afurther set of interpretation rules, which check forthings like the occurrence of lexical markers suchas since or until.10For example, in example (4),repeated below, the algorithm would correctly pickmet for Tuesday and will meet for Wednesday, in-terpreting Tuesday as a day in a past and Wednes-day as a day in future.
(4) Jones met with Defense Minister Paulo Portason Tuesday and will meet Foreign Minis-ter Antonio Martins da Cruz before leav-ing Portugal Wednesday.However, this approach will not correctly interpretexample (10):(10) Still a decision has to made on what, ifany, punishment he will face in the wakeof that incident Tuesday night.In this case, the wrong verb will be identified, andthe direction of offset will be incorrect.5.2.3 Simple Tense EstimationAs an alternative to Mani and Wilson?s approach,we also implemented a much simpler tense estima-tion heuristic.
This checks whether the sentencecontains any tokens with the VBD (i.e., past tense)part of speech tag;11if one is found, then the direc-tion of offset is assumed to be backwards, and ifnot, then we use the forward direction.
In the caseof example (4), this will assign the correct value toTuesday, but the wrong value to Wednesday.10We have reimplemented this algorithm based on the de-scription given in the cited paper, but some details are unclear,so we acknowledge that the original implementation mightproduce slightly different results.11Where POS tags are required in our algorithms, weused Mark Hepple?s part of speech tagger, an implementa-tion of which is available as a plugin for the GATE platform(http://gate.ac.uk).5.2.4 Dependency-based Tense DeterminationThe two previous algorithms attempt to determinethe controlling verb using very simple heuristics.Of course, a more reliable way of determining thecontrolling verb is to use a parser.
We used theStanford parser?s dependency information output(see (de Marneffe et al, 2006)) to find the con-trolling verb of a weekday name in a sentence.This algorithm does this by traversing the result-ing dependency tree from the node containing theweekday name to its root until a verb is found, andthen following further dependencies to identify thewhole verbal sequence.5.2.5 A Hybrid AlgorithmHeuristic methods for determining tense are risky,especially as the distance between the controllingverb and the temporal expression increases.
Wetherefore propose a hybrid approach that attemptsto leverage both tense estimation approaches likeMani and Wilson?s, and Baldwin?s window-basedapproach.
This algorithm was developed on thebasis of an error analysis of the results of usingBaldwin?s algorithm.
It embodies a two-step ap-proach, where we first look only in the very localenvironment for clues as to the tense of the control-ling verb, then fall back on Baldwin?s algorithm ifno such evidence is found close by.
First, we checkif the temporal preposition since appears immedi-ately in front of a weekday name; if so, the direc-tion of offset is assumed to be backwards; other-wise, the algorithm looks for any verbs in a win-dow of three tokens before and three tokens afterthe temporal expression.
If a verb is found, thenits tense is used to determine the direction (usingthe same rules as in Mani and Wilson?s approach).If no verb is found, then a 7-day window with thetemporal focus as the middle day is used, just as inBaldwin?s algorithm.557Table 4: ResultsAlgorithm Errors CorrectPast 7-day Window (Inclusive) 51 316 (86.10%)Past 7-day Window (Exclusive) 240 127 (34.60%)Future 7-day Window (Inclus.)
129 238 (64.85%)Future 7-day Window (Exclus.)
316 51 (13.90%)Sentence Tense Estimation 38 329 (89.65%)Dependency-Based 29 338 (92.10%)Mani and Wilson?s 27 340 (92.64%)Baldwin?s 7-day Window 21 346 (94.28%)Voting 16 351 (95.64%)Hybrid 15 352 (95.91%)Table 5: Processing timesAlgorithm Time [seconds]Past 7-day Window (inclusive) 79.9Past 7-day Window (exclusive) 79.7Future 7-day Window (inclus.)
79.2Future 7-day Window (exclus.)
79.4Sentence Tense Estimation 80.6Dependency-Based 616.5Mani and Wilson?s 80.9Baldwin?s 7-day Window 79.4Voting 636.1Hybrid 80.25.2.6 VotingThis algorithm uses a voting mechanism overthe output of Baldwin?s, Mani and Wilson?s, andthe Dependency-based Tense Determination algo-rithms.
If all values are different (no majority) thenBaldwin?s result is used.5.3 Tense Interpretation RulesOnce the verb group is found by any particular al-gorithm, it needs to be analysed to determine whatits tense is; this information is then used to de-termine the direction of offset.
The interpretationrules are summarized in Table 3.6 ResultsTable 4 presents the results achieved with each ofthe algorithms.The 51% difference between the inclusive andexclusive baselines is indicative of the fact that,in this data, in over 50% of cases the correctdate was in fact the document creation date.
Thisphenomenon is due to the large proportion ofnewswire data in the corpus; in this genre, it iscommon to use the weekday name even when re-porting on events that happen on the same day asthe reporting takes place.
Also of note is that thebest performing baseline, ?Past 7-day window (in-clusive)?, achieves 86.10% accuracy despite its be-ing an extremely naive approach.All the algorithms tested here performed bet-ter than the baselines.
The best performing algo-rithm was the Hybrid method, which made 15 er-rors, resulting in an accuracy of 95.91%; the Vot-ing method came second with 16 errors.
Bald-win?s 7-day window algorithm correctly inter-preted 94.28% of weekday names.
The big advan-tage of this algorithm, along with all the baselines,is their complete resource independence: they donot use any parsers or POS taggers.Perhaps surprisingly, Mani and Wilson?s tenseestimation heuristic was more effective than tensedetermination based on a dependency parse tree;this reinforces our earlier point about the risks ofusing parsers.
It is also important to note thatthere are huge differences in execution time forparser-based approaches.
Table 5 presents timesfor processing the entire corpus for temporal ex-pression recognition and interpretation; the parser-based algorithm required 616 seconds, in contrastto around 80 seconds for each of the other algo-rithms.12There were 296 cases (80.65%) that were cor-rectly interpreted by all of the following algo-rithms: Sentence Tense Estimation, Mani and Wil-son?s, Dependency-based Tense Determination,Baldwin?s 7-day Window, and Hybrid.
There arealso three cases where all these algorithms pro-vided an incorrect value:13(11) reporter: friday night in the gaza strip anda journalist is about to lose his life.
(12) president bush head to the g-8 summit infrance on friday with victory over saddamhussein and in his pocket and a soaring ap-proval rating by the american public, butdo europeans share the same enthusiasmfor the president?
(13) I will return this piece of shit on Fri-day, only to rent another vehicle Mondaymorning while we take the wife?s car tothe shop to get her 1400 bucks worth ofdamage repaired.12Note that the parser was only called for those sentencesthat contained bare weekday names, and not for other sen-tences in these documents.13We present these examples with their original spellingand casing.558In example (11), the algorithms interpreted Fri-day night as a day in future.
However, this textis a case of what is sometimes called the histori-cal present, where for rhetorical effect the authorspeaks in present tense from a past point in time; itis not obvious how any algorithm would determinethe correct answer here.
Example (12) is ungram-matical as a consequence of a missing ?s?
in head;consequently, the POS tagger did not annotate thisword as a verb, and the algorithms identified door bush as a verb, leading to the decision that thereferred-to friday is in the future; however, the goldstandard interpretation puts this in the past (notethat, even with the correct verb form of heads, allthe algorithms would still get the wrong date).
Itso happens the correct date here is also outsidethe 7-day window.
In example (13), because theweekday name used is the same as the day nameof the document creation date, all the algorithmsassigned the document creation date instead of adate seven days later.7 Error AnalysisThe Hybrid Algorithm achieved the best accuracyof 95.91%, which corresponds to 15 error cases.These were as follows:?
Eight cases where there was no verb found inthe three-token neighbourhood of the tempo-ral expression; in these cases the 7-day win-dow method was used, but this did not findthe correct value.?
Three cases where the algorithm identified averb that was not the controlling verb; for ex-ample, it picked will meet instead of met tointerpret Tuesday in the sentence given in ex-ample (4).?
Two cases where the document creation datewas very misleading (see below).?
Two cases where past tense was used to talkabout plans for the future which were sub-sequently cancelled, as in discussions werescheduled to end Friday, when Kelly was tofly.
.
.
.In 204 cases the algorithm interpreted the week-day name based on a verb found in the three-tokenneighbourhood; and in 163 cases it used the fall-back 7-day window strategy.
Since the HybridAlgorithm was built as an extension of Baldwin?smethod, it is worth knowing whether there wereany cases where the original 7-day window methodgot the correct value and the Hybrid Algorithm gotit wrong.
There were six such cases:?
Two of them occurred for documents witha misleading document creation date.
In atypical example, a document with the times-tamp 17-04-2004 (a Thursday) contained thesentence ?Malaysia?s Appeal Court Friday re-fused to overturn the conviction .
.
.
?.
As thedocument timestamp was used as the tempo-ral focus, Friday was interpreted as a day inthe past, when in fact it was the day after thetimestamp.?
The other two cases demonstrate a weaknessin our approach, exemplified by the sentencegiven in example (4): here the algorithm in-correctly uses the verb group will meet wheninterpreting Tuesday.?
The remaining two cases were cases wherethe verb groups were scheduled to end andscheduled to begin were used to talk about fu-ture events.In these last cases, the controlling verb is an in-finitive, and there is no way, in the absence of ei-ther world knowledge or a much more sophisti-cated analysis of the text, of determining whetherthe scheduled event is in the past or the future.Sentences like these are a particular problem forMani and Wilson?s algorithm, where a signif-icant number of misinterpretations involve sen-tences in which the past tense is used to talk aboutsubsequently-changed plans for future, as in thefollowing:(14) A summit between Sharon and his Pales-tinian counterpart, Mahmoud Abbas, hadbeen planned for Wednesday but was post-poned .
.
.Here, this utterance could be legitimately producedboth before and after the Wednesday in question,so no simple algorithm will be able to determinethe direction of offset.8 Conclusions and Future WorkWe have investigated the problem of the interpreta-tion of bare weekday names in texts, and presenteda new heuristic which extends Baldwin?s (2002)approach.
Our evaluations on a widely-availabledata set show that our Hybrid Algorithm was the559best performing algorithm, achieving an accuracyof 95.91% with 15 errors out of 367 instances.
Thealgorithm is implemented within our DANTE sys-tem for temporal expression interpretation (Daleand Mazur, 2006; Mazur and Dale, 2007).It seems quite possible that our heuristicstake advantage of phenomena that are specificto newswire texts and other similar types of re-portage.
Although these are precisely the kinds oftexts where, in our own work, we need to providefast processing of large volumes of text, it remainsto be seen how these heuristics fare when facedwith a broader range of text types.
In particular,other text types are likely to require more sophis-ticated approaches to temporal focus tracking thanwe have used here.Also, we have not attempted to replicate here themachine learning approaches described in (Ahn etal., 2005) and (Ahn et al, 2007), nor Han?s use ofconstraint satisfaction problem methods (see (Hanet al, 2006a)).
The comparative evaluation ofthese is left for future work.ReferencesAhn, D., S. F. Adafre, and M. de Rijke.
2005.
Recog-nizing and interpreting temporal expressions in opendomain texts.
In We Will Show Them: Essays inHonour of Dov Gabbay, Vol 1, pages 31?50.Ahn, D., Joris van Rantwijk, and Maarten de Rijke.2007.
A Cascaded Machine Learning Approachto Interpreting Temporal Expressions.
In Proc.
ofHLT: The Annual Conference of the North AmericanChapter of the ACL (NAACL-HLT 2007).Baldwin, J.
2002.
Learning Temporal Annotation ofFrench News.
Master?s thesis, Dept.
of Linguistics,Georgetown University, April.Dale, R. and P. Mazur.
2006.
Local Semantics in theInterpretation of Temporal Expressions.
In Proceed-ings of the Workshop on Annotating and Reasoningabout Time and Events, pages 9?16, Sydney, Aus-tralia, July.de Marneffe, M.-C., B. MacCartney, and Ch.
D. Man-ning.
2006.
Generating Typed Dependency Parsesfrom Phrase Structure Parses.
In Proceedings of theIEEE / ACL 2006 Workshop on Spoken LanguageTechnology.Filatova, E. and E. Hovy.
2001.
Assigning Time-Stamps to Event-Clauses.
In Harper, L., I. Mani,and B. Sundheim, editors, Proceedings of the Work-shop on Temporal and Spatial Information Process-ing, pages 1?8, Morristown, NJ, USA.Han, B. and A. Lavie.
2004.
A Framework for Res-olution of Time in Natural Language.
ACM Trans-actions on Asian Language Information Processing(TALIP), 3(1):11?32.Han, B., D. Gates, and L. Levin.
2005.
AnchoringTemporal Expressions in Scheduling-related Emails.In Katz, Graham, James Pustejovsky, and FrankSchilder, editors, Annotating, Extracting and Rea-soning about Time and Events, Dagstuhl SeminarProceedings.Han, B., D. Gates, and L. Levin.
2006a.
From Lan-guage to Time: A Temporal Expression Anchorer.In Proceedings of the Thirteenth International Sym-posium on Temporal Representation and Reasoning,pages 196?203.Han, B., D. Gates, and L. Levin.
2006b.
UnderstandingTemporal Expressions in Emails.
In Proceedings ofthe Human Language Technology Conference of theNorth American Chapter of the Association of Com-putational Linguistics, pages 136?143, Morristown,NJ, USA.Jang, S. B., J. Baldwin, and I. Mani.
2004.
AutomaticTIMEX2 Tagging of Korean News.
ACM Trans-actions on Asian Language Information Processing(TALIP), 3(1):51?65.Mani, I. and G. Wilson.
2000.
Robust Temporal Pro-cessing of News.
In Proceedings of the 38th AnnualMeeting of the Association for Computational Lin-guistics, pages 69?76, Morristown, NJ, USA.Mazur, P. and R. Dale.
2007.
The DANTE Tempo-ral Expression Tagger.
In Vetulani, Zygmunt, edi-tor, Proceedings of the 3rd Language & TechnologyConference (LTC).Negri, M. and L. Marseglia.
2005.
Recognition andNormalization of Time Expressions: ITC-IRST atTERN 2004.
Technical Report WP3.7, InformationSociety Technologies, February.Schilder, F. and Ch.
Habel.
2001.
From Temporal Ex-pressions to Temporal Information: Semantic Tag-ging of News Messages.
In Harper, L., I. Mani, andB.
Sundheim, editors, Proc.
of the Workshop on Tem-poral and Spatial Information Processing, pages 1?8, Morristown, NJ, USA.560
