Integrating Shallow Linguistic Processing into a UnicationbasedSpanish GrammarMontserrat MarimongilcUBGrup dInvestigacio en Lingustica ComputacionalUniversitat de BarcelonamontsegilcubesAbstractThis paper describes to what extent deep processing may benet from shallow processingtechniques and it presents a NLP system whichintegrates a linguistic PoS tagger and chunkeras a preprocessing module of a broadcoverageunicationbased grammar of Spanish Experiments show that the eciency of the overallanalysis improves signicantly and that our system also provides robustness to the linguisticprocessing while maintaining both the accuracyand the precision of the grammar IntroductionDeep linguistic processing produces a completesyntactic and semantic analysis of the sentencesit processes however it fails in producing a result when the linguistic structure being processed andor words in the input sentences fallbeyond the coverage of the grammatical resources Natural Language Processing NLPsystems with monolithic grammars in additionhave to deal with huge search space due to several sources of nondeterminism ie ambiguity	 This is particularly true of broadcoverageunicationbased grammars where all dimensions of linguistic information are interleaved astheories such as HPSG propose Lack of robustness and inecient processing make such systems inadequate for practical applications egNatural Language Interfaces NLI	This paper presents a NLP system which integrates a linguistic PartofSpeech PoS	 tagger and chunker as opposed to datadrivenas a preprocessing module of a broadcoverageunicationbased grammar of SpanishBy integrating shallow and deep processingthe eciency of the overall analysis process improves signicantly since we can release theparser from certain tasks that may be eciently and reliably dealt with by computationally less expensive techniques The integrationof shallow processing in addition provides theunicationbased grammar with larger coveragefor syntactic structures and allows us to implement default lexical entry templates for virtually unlimited lexical coverage while avoiding increase in ambiguityThe system we present is inspired by Abneyand it is in accordance with Srinivas etal Ciravegna and Lavelli Yoon etal Venkova  Watanabe  Prinsand Noord  Grover and Lascarides Crysmann et al 	In the following section we briey present theunicationbased grammar Section  describeslatch the linguistic tagger and chunker Section  discusses the extensions required by oursystem in order to transfer the information delivered by the tagger and chunker into the grammar In section  we describe the default lexicalentries we have dened Results on the systemperformance are provided in section  This papers ends by presenting the general conclusions The Unicationbased GrammarThe development of the grammar that served asthe basis of our research work was done in theframework of the Advanced Language Engineering Platform ALEP	 Simpkins et alduring the project LSGRAM LRE Schmidt et al	 and it was used inthe project MELISSA ESPRIT 	 Bredenkamp et al	 for the rst time in anindustrial context The grammar is currentlybeing used in the project IMAGINE IST	 The main goal of the IMAGINE projectis to develop software technology that allows theinteraction with ebusiness applications by using a multilingual NLI from mobile devices andother appliances Coverage of the GrammarThe range of linguistic phenomena that thegrammar handles includes all types of subcategorization structures determination simple and complex	 a full coverage of agreement subjectverb subjectattribute agreement within the NP	 nullsubjects prodropimpersonal sentences	 compound tenses andperiphrastic forms clausal complements completive clauses and indirect questions	 controland raising structures support verb constructions passive constructions with the copulawith or without the byagent complement andreexive passive	 modiers of verbs nouns adjectives and adverbs negation sentential adjuncts topicalization relative and interrogatives clauses surface word order variation coordination binary enumeration and coordination of unlike categories	 clitics cliticNP alternation clitic doubling clitic climbing enclitics	 NPs with no nounhead nonsententialinput strings and special constructions number dates    	 The ALEP ArchitectureALEP distinguishes preprocessing operationsand linguistic processing operations The former Text Handling TH	 and orphographemicanalyses account for surface properties of input text document formatting delimitationof textual structural elements orthographemicaspects of morphology	 while the latter parsing and renement deal with its nonsurface properties morphosyntactic analysisconstituent structure semantic representation	A special rulebased operation Lifting interfaces the output of the preprocessing operation with the parsing operation The ALEP Linguistic FormalismThe ALEP linguistic formalism has been developed on the basis of the specications resulting from the ET design study Alshawi et alSee httpwwwrtdsoftwareagesimagineA distinctive feature of the ALEP processing architecture is the division of the analysis task into two subtasks parsing which builds up a complete but shallowphrase structure tree and renement which traversesthe structure topdown thus monotonically performingfeature decoration typically with semantic information It is a so called lean formalism compilable into rstorder Prolog	 terms and thusavoiding computationally expensive formal devicesAn ALEP grammar is implemented by specifying lexical entries and grammar rules basedon a type system that constitutes a monotonicsimple type hierarchy with appropriateness conditionsLexical entries are based on the data structure Linguistic Description LD	 collecting constraints on the type system The lexical component of our grammar plays a crucial role inthe grammatical description needed for processing It is a highly lexicalized grammar where linguistic phenomena such as subjectverb agreement subcategorization modication controlrelations etc traditionally dealt with by meansof specialized phrase structure rules are treatedin the lexicon Grammar rules are thus reducedto a small set of binarybranching contextfreephrase structure rules which are based on thedata structure Linguistic Structure LS	The adopted approach in the grammar wepresent follows HPSG proposals Pollard andSag	 Latch The Linguistic Tagger andChunkerLatch was rstly conceived as a lexical disambiguation tool based on analyses promotionreduction by means of weighted symboliccontext rules Porta	It is a lean formalism where lexical information including fullform lemma and MorphoSyntactic Description MSD	 is expressedby regular expressions The pivots of the ruleswhich specify the tokens to be disambiguatedare sequences of lexical elements that receive avote on their morphosyntactic analyses Votesmay be positive or negative to promote or toeliminate them respectively In addition a precondition may be expressed in the pivots tospecify the type of ambiguity the rule is referred to Linear generalizations are expressedby means of contextual operators for immediateunbounded and constrained unbounded contextual conditionsBesides phrase structure rules a set of word structure rules are applied at the parsing component performing morphosyntactic analysisIn a further development state the Latch formalism was extended so that it can also be usedto mark chunks or intraclausal partial constituents	 Abney	 and use that information for PoS disambiguation This interactionof PoS disambiguation and partial parsing reduces the eort needed for writing rules considerably and improves results Marimon andPorta 	 Integrating PoS Tags and Chunksinto the GrammarThe integration of shallow processing techniques PoS tagging and partial parsing	 is fullysupported by the open architecture of ALEPwhich allows easy integration of external modulesOur system requires some changes to the default architecture of the ALEP system whereboth the TH system and the morphographemicanalysis component are replaced by a uniqueexternal preprocessing module Latch	 Italso requires the lifting component to be extended in order to transfer the information delivered by the external preprocessing moduleinto the highlevel linguistic processing components The changes to be made in the highlevellinguistic processing components however arevery thin word structure rules have to be extended but phrase structure rules and lexicalentries can be left untouched Text Structure to LinguisticStructure RulesThe integration of both the PoS tags and chunkmarkups delivered by Latch is done by the lifting component of the ALEP system which converts them into data structures suitable for deeplinguistic analysisThe lifting component is based on a particular set of rules the socalled Text Structure toLinguistic Structure TSLS	 rulesThree levels are assumed at the lifting component M W and S which in the defaultarchitecture of the system were converted intoLatch is currently being used to annotate themillion word Corpus Diacronico del Espanol CORDEandmillion word Corpus de Referencia del EspanolActual CREAby the Departamento de LingusticaComputational de la Real Academia Espanola Someresults on the rst version of the tool can be found inSanchez et al 	LDs representing morphemes fullforms and thetop node establishing the axiom of the grammar Structure rules then are distributedaccording to the dierent types of structuralunits being involved in the parsing operationmorphemes to words word structure rules	 orwords to sentences phrase structure rules	 Lifting PoS TagsIntegrating PoS information in a system likeALEP means dening TSLS rules propagating the morphosyntactic information associatedto fullforms ie PoS tag and lemma	 deliveredby the tagger to the relevant morphosyntacticfeatures at the lexical entries of the grammarThe integration of PoS tags into ALEP isdone at the level M By using the lowest taglevel to lift the lexical information associatedto fullforms we can propagate the ambiguitieswhich can not be reliably solved by the shallow processing tool to the grammar componentthus ensuring that the accuracy of the grammarremains the sameshows the rule we dened to lift the tagNcfsts ls ruleldsynsem j loct localmorpht morphlemmamorphemeagr femsingcatt substheadt nounnclass commonM  POS  Ncfs LEMMA  Lifting ChunksSimilar to the integration of PoS informationthe integration of chunk markups in the ALEPsystem requires TSLS rules to convert theminto LD data structures used by the linguisticprocessing components of ALEPNormally this will be the sentence node though itcan also be any phrasal node when partial input stringsare to be processedThe output of the lifting process is a Partial Linguistic Structure PLSwhere the hierarchical relationsbetween the dierent structural elements is expressed interms of week dominance relationsThe integration of chunk markups intoALEP is done at the level W By integrating chunk markups at the intermediate levelwe avoid modifying phrase structure rules whichbuild up a LD on top of the converted LDs iattaching posthead sisters modiers andorcomplements to the right of the head element	ii	 andor attaching modiers andor speciers to the left of the head element when thechunk has only been partially recognized Furthermore we avoid interference with the set ofphrase structure rules which build up the sametype of LDs These rules are maintained tobuild up nodes that have not been marked upby the preprocessing moduleThe system we propose in addition integrates into the highlevel components of ALEPLDs which do not need to be rebuilt by phrasestructure rules since even though they arequite underspecied wrt the head element ofthe chunk they only contain information aboutits partofspeech	 they already specify syntactic and semantic information about the nonhead elements that have been attached to thehead elementThis allows us to deal with lowfrequent syntactic structures whose coverage bymeans of our ALEP grammar though feasiblewould increase both the parsing search spaceand the ambiguity	 shows the rule for adjectival chunks whichhave the head element and a degree adverb Word Structure RulesBesides the TSLS rules we have presentedthe strategy we propose also requires unaryword structure rules to consolidate the structural nodes provided by the lift operation forthe new tags M and WThese rules in addition are in charge of percolating the linguistic information of the headelement of the chunk which is encoded in thelexicon to the mother node which already contains information about the nonhead elementsThese rules are applied when parsing words to sentences whereas lifted chunk markups are dealt withword structure rules cf section This strategy however requires very specialized TSLS rules not only wrt the category of the head elementnoun verb adjective adverbbut also the number category determiner adjective adverb auxiliary   andtype denite indenite   of nonhead elementsExamples of such syntactic structures are given insection already attached by the preprocessing toolts ls ruleldstringmuy interesantet localcatt substhead t adjsemt semindx j ind sfindex modst sem modrel sfreldegreeindx j ind sfindexneventpredargt predargpred sfpredW  TYPE  CHUNK CHUNKTY  AX ADV  Default Lexical EntriesSupplementary to the integration of the shallowprocessing tool default lexical entries have beenimplemented in our ALEP grammar to providerobust deep processingDefault lexical entries are lexical entry templates which are activated when the system cannot nd a specic lexical entry to apply Notethat having default lexical entries in a systemlike ALEP increases ambiguity and thus theparsing search space unless a mechanism isused to restrict as much as possible the templates that are activated The integration of thetagger which supplies the PoS information tothe linguistic processing modules of our systemallows us to increase robustness while avoidingincrease in PoS ambiguityThere are two basic ways to dene default lexical entries One is to implement underspeciedlexical entry templates assigned to each majorword class such that while parsing the systemlls in the missing information of each unknownword Horiguchi et al Music and Navarretta Mitsuishi et al Grover andLascarides  In the other approach verydetailed default lexical entries for each majorword class are denedThe approach we have followed falls under amiddle type We have dened several defaultlexical entry templates for the dierent major word classes verbs nouns adjectives andadverbs which cover their most frequent subcategorization frames These templates however are unspecied wrt those features whichencode the subcategorization restrictions imposed on their subjects and complements egmarking prepositions lexical semantics etcThis information is lled by the application ofphrase structure rulesFirst experiments testing the eect of ourdefault lexical entries however showed thatby covering the most frequent subcategorization frames we ensured that the accuracy ofthe grammar percentage of input sentencesthat received the correct analysis remainedthe same The precision of the grammar percentage of input sentences that received nosuperuous or wrong	 analysis however wasvery low since we could not restrict the lexicaltemplate to be activated for each word typeTo improve the precision of the system weextended the PoS tags of our external lexiconie the lexicon we use for morphosyntactic annotation in Latch	 so that they included syntactic information about the subcategorized forelements category marking prepositions 	This allowed us to reduce the number of defaultlexical templates to be appliedExperiments and ResultsThe two experiments described in this sectionwere used to evaluate the performance of theintegrated system both wrt ecient processing and robustnessIn the rst experiment our goal was to perform a comparative study of the processing timeof our ALEP grammar before and after the integration of the PoS tagger and chunker Forthis experiment therefore we required testingcases which were already fully covered by ourgrammar before the integration of the taggerand chunker In this experiment we used asubset of the test suites we have used in theLSGRAM and the MELISSA projectsIn the second experiment our goal was toinvestigate to what extent the ALEP grammarbeneted from the default lexical entries interms of robustness In this experiment wetested our system on test corpus which wasThis information was not manually encoded but itwas extracted from the lexical resources developed in theproject PAROLE Melero and Villegas 	selected randomlya Experiment ATo evaluate the eciency of the system wedened two test suites and run them with ourALEP grammar both before and after the integration of the shallow processing toolsThe rst test suite included short instructive sentences or queries from the corpus ofthe MELISSA projectand sentences we selected from the dierent test suites we haveused for diagnosis and evaluation purposes inthe LSGRAM and the MELISSA projectsTest cases were selected according to i	 thesyntactic function of the chunk eg subjectcomplement and adjunct for nominal chunkscomplement and adjunct for adjectival chunksetc ii	 the position of the chunk in the sentence and iii	 the category and the numberof nonhead elements This test suite included casesIn running the test suite with the new systemprocessing time of the overall process improvedan average of  due to the reduction of bothlexical ambiguity and sentence lengthOnce positive results were achieved with suchtype of sentential structures we evaluated oursystem with much more complex sentencesshowing a high interaction of phenomena Forthis we used an article from the newspaperTest suites and corpora are the two tools traditionally used for evaluating and testing NLP systems Themain properties of test suites are systematicity control over data exhaustivity and inclusion of negativedata Test corpora by contrast reect naturally occurring date cf Lehmann et al 	Experiments have been run in a Mb Ultra Sparc Mean CPU time values were calculated for  samplesNL utterances which users made in interacting withICAD an administrative purchase and acquirement handling system employed at ONCE Organizacion Nacional de Ciegos de Espana dealing with budget proposals and providing information to help decision makersThese test suites are organized on the basis of a hierarchical classication of linguistic phenomena Testsuites including cases with interaction of phenomena andnegative cases are also includedThe reduction of the sentence length is due to thefact that elements that are wrapped together in a chunkby the preprocessing module are lifted to the parsingcomponent of the grammar as a unique elementEl Diario Vasco of  words from the LSGRAM corpusTwo experiments have been carried onrst by integrating the PoS tags into ALEPand then the chunk markups For the rstexperiment the reduction of morphosyntacticambiguity an average of  reduces theprocessing time of the overall process by  on average per sentence	 For thesecond experiment the system processing timeis reduced by  an average of persentence	 Here parsing speedup is due tothe fact that by integrating chunk markupswe do not only avoid generating irrelevantconstituents not contributing to the nal parsetree but we also provide part of the structurethat the analysis component has to computeb Experiment BThe evaluation of the eect of default lexicalentries on the ALEP grammar was done withfree input text Here we used a  word articlefrom El Pais September In running the second experiment we observed that our rst approach ensured thatthe accuracy of the grammar percentageof input sentences that received the correctanalysis remained the same even thoughof major words which appeared in thearticle was not encoded in the ALEP lexiconThe precision of the grammar percentage ofinput sentences that received no superuous orwrong	 analysis however was be very lowwe got an average of  analysis per sentence Byadding framing information to the PoS tags ofour external lexicon we reduced overgenerationup to an average of  analysis per sentenceBesides our system provides structural robustness to the highlevel processing We observed that a number of linguistic structureswhich could not be handled by the grammarA detailed analysis of the results showed us thatwhile in processing simple sentences as the ones we included in the rst test suite the most relevant factor forimproving processing time was the reduction of the number of tokens of the sentences in processing complex sentential constructions eg sentences included embeddedclauses eciency gains were mainly due to the reductionof the morphosyntactic ambiguity since this drasticallyreduced the structural ambiguitybefore the integration of the shallow processingtools are currently covered Examples are	 a No dieron credito alguno a   they	 did not believe in   b Se incrementaran en los proximosocho meses They will be increased inthe following eight monthsa	 shows a nominal chunk where the indenite alguno is postponed b	 shows a nominalchunk where the canonical cardinal  adjectiveorder is invertedConclusionsThis paper has described research into the development of engineered largescale grammar toprovide more robust and ecient deep grammatical analysis of linguistic expressions in realworld applications eg NLI while maintainingboth the accuracy of the grammar and its precisionWe foresee to extend the chunker to cover ungrammatical or uncomplete intraclausal partial constituents which can then be integratedinto the ALEP linguistic processing components Also we plan to add semantic information to the PoS Frame tags encoded in the lexical resources developed in the project SIMPLEReferencesS Abney Prosodic Structure Performance Structure and Phrase Structure InProceedings of the Workshop on Speech andNatural Language Morgan Kaufmann Publishers San Mateo CAS Abney httpwwwsfsnphilunituebingende abneyPapershtmliH Alshawi DJ Arnold R Backofen DMCarter J Lindop K Netter S PulmanJ Tsujii and H Uszkoreit EurotraET Rule Formalism and Virtual MachineDesign Study nal report	 Commission ofthe European Communities LuxembourgA Bredenkamp T Declerck P GroenendijkM Phelan S Rieder P Schmidt H Schulzand A Theolidis Natural LanguageAccess to Software Applications In Proceedings of COLINGACL Montreal CanadaF Ciravegna and A Lavelli Controlling Bottomup Chart Parsers ThoughText Chunking In Proceedings of IWPTBoston MAB Crysmann A Frank B Kiefer HUKrieger S M!uller G Neumann J Piskorski U Sch!afer M Siegel H Uszkoreitand F Xu  An Integrated Architecture for Shallow Deep Processing In Proceedings of ACL University of Pennsylvania Philadelphia PAC Grover and A Lascarides  XMLBased Data Preparation for Robust DeepParsing In Proceedings of ACLEACLToulouse FranseK Horiguchi K Torisawa and J TsujiiAutomatic Acquisition of Content Words Using an HPSGBased Parser In Proceedingsof the NLP Pacic Rim Symposium SeoulKoreaS Lehmann S Oepen S RegnierProstK Netter V Lux J Klein K FalkedalF Fouvry D Estival E Dauphin H Compagnion J Baur L Balkan and D Arnold TSNLP  Test Suites for Natural Language Processing In Proceedings ofCOLING Copenhagen DenmarkM Marimon and P Porta  PoS Disambiguation and Partial Parsing BidirectionalInteraction In Proceedings of LRECAthens GreeceM Melero and M Villegas Issues onthe Encoding of a Computational Lexicon InProceedings of LREC Granada SpainY Mitsuishi K Torisawa and J TsujiiHPSGStyle Underspecied Japanese Grammar with Wide Coverage In Proceedings ofCOLINGACL Montreal CanadaB Music and C Navarretta Documentation of the LSGRAM Danish LingwareDeliverable EDDK Center for Sprogteknologi CopenhagenC Pollard and IA Sag HeadDrivenPhrase Structure Grammar University ofChicago Press ChicagoJ Porta Rtag Technical ReportGrup de Investigaci"o en Ling!u"#stica Computacional Universitat de BarcelonaR Prins and G van Noord  Unsupervised PostTagging Improves Parsing Accuracy and Parsing Eciency In Proceedingsof IWPT Beijing ChinaF S"anchez J Porta JL Sancho A NietoA Ballester A Fern"andez L G"omez E Raigal and R Ruiz La anotaci"on de loscorpus CREA y CORDE In Proceedings ofSEPLN LLeida SpainP Schmidt A Theolidis S Rieder and T Declerck Lean formalism Linguistic Theory and Applications Grammar Development in ALEP In Proceedings of COLING Copenhagen DenmarkN K Simpkins M Groenendijk andG Cruickshank ALEP User GuideCommission of the European CommunitiesLuxembourgB Srinivas C Doran BA Hockey andA Joshi An Approach to Robust Partial Parsing and Evaluation Metrics In Proceedings of IWPT Boston MAT Venkova  A Local Grammar Disambiguator of Compound Conjunctions asa PreProcessor for Deep Analysis In Proceedings of Workshop on Linguistic Theory and Grammar Implementation ESSLLI Birmingham UKH Watanabe  A Method for Accelerating CFGParsing by Using Dependency Information In Proceedings of COLINGSaarbr!ucken Luxembourg NancyJ Yoon KS Choi and M Song ThreeTypes of Chunking in Korean and Dependency Analysis Based on Lexical AssociationIn Proceedings of ICCPOL
