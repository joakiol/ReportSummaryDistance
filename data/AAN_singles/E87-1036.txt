DECLARATIVE NOOEL FOR DEPENDENCY PARSING -k V IEV  INTO BLACKBOARD METHOOOLOGYVatkonen, K., J ipp inen ,  H., Lehtota,  A. and Ytltammi, N.KIELIKOHE-pr~ject, SITRA FoundationP.O.Box 329, SF-00121Hets ink iFinLandteL.
in t i  + 358 0 641 877ABSTRACTThis paper presents  a dec la ra t ive ,  dependencyconst ra in t  model fo r  pars ing an in fLect ionaL  f ree  wordorder  Language, t |ke  F inn ish.
The s t ruc ture  ofFinnish sentences is  descr ibed as par t ia l  dependencyt rees of  depth one.
Parsing becomes anondetermin is t tc  search problem in the fo res t  ofpar t ia l  parse t rees .
The search process is  able toso lve a lso  ambigu i t ies  and tong-d is tance dependencies.Parsing is  controLLed by a blackboard system.
A~orking parser  fo r  F innish has been implemented basedon the modeL.1 |RTROOUCT|OBThe development of  our computat ional  model fo rdependency pars ing has progressed in three para l le land in ter re la ted  phases:(1) The development of  a perspicuous high Levelgrammar spec i f i ca t ion  Language which grasps wel lregu lar i t ies  and idiosyncracies of in f lec t iona l  f reeword order  Languages.
(2) The acqu is i t ion  of  a grammar using that  Languageas the descr ip t ion  media.
(3) The development of  a pars ing s t ra tegy  and acompi ler  fo r  the spec i f i ca t ion  Language.In our f i r s t  approach the pars ing process is descr ibedas a sequence of  tocat dec is ions  (Netimarkka et at .1984).
A pa i r  of  adjacent s t ruc tures  of  an inputsentence is connected i f  there ex is ts  a va l id  b inarydependency re la t ion  between them.
B inary  re la t ionsare boolean express ions of  the morphological  andsyntact i c  res t r i c t ions  on argument s t ruc tures .
Inthat  f i r s t  vers ion  dependency sructures  were modelledprocedura l ly  with f in i te  two-way automata (Lehtota  eta t .
1985).
Grammar descr ip t ions  turned out to becomplicated to handle,  and due to pure ly  Localdec is ions  some gtobat phenomena, such as tong-d is tancedependencies, were not analyzed.A new grammar descr ip t ion  formal ism and computat ionalmethod was developed: a dec la ra t ive  high LevelLanguage FUMDPL (J~ppinen et a t .
1986) fo r  a grammar,and an under ly ing  blackboard-based pars ing method(Vatkonen and Lehtota,  1986).
Recent ly,  we haveaugmented the dependency parsing model to cover a lsotong-d is tance dependencies.
According to theaugmented model we have implemented a blackboard-baseddependency parser  ADP (Augmented Dependency Parser ) .In th i s  paper we shor t ly  descr ibe  our model and focuson the pars ing s t ra tegy .
For the grammar developmentenvironment and the compi la t ion  of  the high \[everdescr ip t ion  Language?
see Lehtota et  a t .
(1985 e1986).Our pars ing method belongs to the c lass  of  const ra in tsystems: a user spec i f ies  the const ra in ts  ho ld ing inthe problem domain, and a goat fo r  the computat ion.The in terpreter  must search fo r  the goa l .
The resu l tfo l lows  ind i rec t ly  from the search process,  in ourmodel b inary  re la t ions  spec i fy  const ra in ts  on argumentstructures.
The goal is  to f ind  a matching Localenvironment descr ip t ion  fo r  each word of  an inputsentence.
As a s ide e f fec t  of  the recogn i t ioncorresponding par t ia l  dependency t rees  are bu i l t .
Thepar t ia l  dependency t rees  ere Linked in to  a parse t reecover ing the whole sentence (F igure  1).PROOLEM SPAC(: p | r t t ?
l  dependency t r luuof depth oneGOAL: ?
completepor ?
l  t reeW4~L 6 /~o w5SentenceW I W z W 3 W 4 .
.
W nFigure 1.
Pars ing as a search process in a fo res t  ofpar t ia l  dependency t rees .2182 GRANNAR OESCR|PTIONFor the development of  a grammar notat ionid iosyncrac ies  of the ob ject  Language had to beobserved.
Finnish is a re la t ive ly  f ree  word orderlanguage.
The syntactic-semantic knowledge ts o f tenexpressed in the in f lec t ions  of  the words.Furthermore, the parser  was needed to work as apract i ca l  toot  fo r  rea l  product ion app l i ca t ions ,  sothe process of  pars ing was taken as a s tar t ing  po intinstead of  sentence generat ion .A grammar descr ip t ion  cons is ts  of four  par ts :(1) Type def in i t ions :  L ingu is t i c  p roper t ies ,  featuresand categor ies .
(2) A lex icon  fo r  assoc ia t ing  features  with words.
(3) B inary  dependency re la t ions  that  may hold betweenregents and the i r  dependents.
(4) Funct ional  8?hemmta fo r  de f in ing  the Localenvironments of  regents .2.1 Type def in i t ionsi n  the type def in i t ion  part  a grammar wr i te r  def inesthe types and the i r  va lues used in a grammardescr ip t ion .
This corresponds to the c lass i f i ca t ionof L ingu is t i c  p roper t ies .
There are three kinds oftypes:  CATEGORIES, FEATURES end PROPERTIES.
Inadd i t ion  to th i s  the s t ruc ture  of  the tex ica l  ent r iesis descr ibed in th i s  par t .CATEGORY statement assigns names in h ie rarch ies .
Forexample, a category SyntCat fo r  word classes could bedef ined as(CATEGORY: SyntCat< (Word)(Noun I Word)(Proper I Noun)(Common I Noun)(Pronoun I Word)(PersPron I Pron)(OemPron I Pron)( ;n tPron  I Pron)In a FEATURE statement ?
feature  name and t t s  valuesare def ined.
Values can be mutuaLLy exc lus ive :adding of the complement value automaticaLLy destroysthe o ld va lue.
(FEATURE: SyntFeet< (Locat ive)  ;a name of a place( In fAt t r )  ;a noun, that  may have antn f in i t tv ia l  a t t r ibute(CountMessure) ;a countable measure noun?e .PROPERTY values are Like FEATURES except that they mayhave defau l t  va lues.
For example:(PROPERTY: Polar  < ( Pos ) Neg >)In th i s  type de f in i t ion  po la r i ty  is pos i t i ve  byde fau l t .2.2 LexiconThe parser  is  preceded by a morphoLogicaL analyzer(J~ppinen and Ytitammi 1986).
The morphologicalanatyzer  produces fo r  each word i t s  morphologicalin terpretat ion  inc lud ing  tex icat  in fo rmat ion .
Theparser  assoc iates  de fau l t  features  fo r  words.
Thosewords which have idiosyncratic features ,  ms a l l  verbsdo, are in the parser~s Lexicon.
Some example ent r iesof  the parser ' s  lex icon :NETRi (Common (SubstNeasure))HELSINKI (Proper (Locat ive) )AJATELLA (TrProcV ( In fObj  Psnt i sOb j ) )"Net r i "  (meter)  is s measure un i t  fo r  common nouns.
"Nets ink{"  ts s proper noun and a name of  a place.
"A ja te t la"  ( to  th ink)  Js a t rans i t i ve  verb that  mayhave in f in i t tv ta t  or  par t i c ip le  ob jec ts .2.3 B inary  dependency re ta t ionsThe dependency pars ing model aims at prov id inganalyzed sentences with the i r  dependency t rees .According to th i s  approach two elements of  ?
sentenceare d i rec t ly  re la ted  in a dependency re la t ion  t f  onedepends on another .
The two elements ere cat ted theregent R (or  head or governer)  and the dependent 0 (ormod i f ie r ) .
B inary  re la t ions  de f ine  a l l  permit teddependency re la t ions  that  may ex is t  between two wordsin Finnish sentences.
For example, the b inaryre la t ion  Subject is  the fo l low ing  boolean express ionof  the morphological  end syntact i c  features  of af in i te  verb and i t s  nominal sub jec t :(RELATION: Sub ject  (D := Sub ject )((R = Verb Act(< lad  Cond Imper Pot I lpar t i s  > (PersonP O)(PersonN D)- Negat ive - Aux i l i a ry )(Auxil iary llpertis Nom - Negative)(Negative ?
limper Pr ?
(S 2P) Neg >)(Cond Pr S 3P) (Pot Pr Neg)( I Ipar t i s  Nom)> - Aux i l i a ry )>)(D ?
PersPron Nom)) .
.
.R must be an act ive  verb.
Further res t r i c t ions  fo r  i t219appear w i th in  angle brackets that  ind icates  ad i s junct ion .
Negation is expressed by " - " .
(PersonPD) (PersonH D) ind icates  an agreement tes t .
O must bee personal pronoun in nominative case in th i sfragment.In our computational  model words of  an input sentenceappear as complexes of  the i r  morphologica l ,syntact i ca l  end semantic p roper t ies .
We ca l l  th i scomplex a const i tuent .
I f  ?
b inary  re la t ion  holdsbetween R and D, they ere ad jo ined in to  a s ing leconst i tuent .
This ts what we mean by a funct iona ldescr ip t ion .
I t  can be s ta ted  fo rmal ly  as moppingf (R,D) -> R Iwhere R' stands fo r  the regent R a f te r  that  i t  hasbound D. Function f is de f ined  by the correspondingb inary  re la t ion .
This funct ion  abst rac t ion  should bed i s t ingu ished  from grammatical funct ions ,  even thoughin our grammar spec i f i ca t ion  dependency re la t ions  a lsoest imate grammatical funct ions .2.4 Funct ional  schemataIn funct iona l  schemata the Local environment of  aregent is  descr ibed by dependency funct ions .Funct ional  schemata can be seen as par t ia l  dependencyt ree  descr ip t ions .
A s impl i f ied  schema for  verbphrases, when a regent is  ?
t rans i t i ve  verb and i t  ispreceeded by s negat ive  aux i l i a ry  verb,  could bedef ined aS(SCHEHA: NegTronsVerbWHEN (AND (R ?
ProcVerb Act T rans i t ive )(LEFT ?
Aux i l i a ry  Negat ive) )FUNCTIONS (NULTIPLE Adverb ia l )(OBLIGATORY Negation Subject Object)(LEFT Negation Subject Object Adverb ia l )(RIGHT Object Subject Adverb ia l )HARK (R := VerbP))This scheme is  able to recognize end bu i ld ,  fo rinstance,  per t le t  dependency t rees  shown in Figure 2.?mr~ WMrt~ Ver~svb~ eeg eb} subl nag e~v e~| eaj s~ j  mqlFigure 2.
Example t rees  bu i l t  by a schema NegTransVerb.There ere three par ts  in the s impl i f ied  schemaNegTransVerb: WHEN.
FUMCTIOIIS end HARK.
WHEN per tdescr ibes  features  fo r  the regent and i t s  context .FUNCTIONS par t  descr ibes  the dependents fo r  theregent .
NULT|PLE c lause ind icates  which dependentsmay ex is t  mul t ip le  times.
OBLIGATORY names ob l igatorydependents.
LEFT end RIGHT give the s t ruc ture  of thele f t  and r ight  context  of the regent.The f ree  word order  is a l lowed by de fau l t  because ofthe par t i cu la r  in terpretat ion  of  the clauses LEFT andRIGHT.
The def in i t ion  only ind icates  which dependentsex is t  in the named context ,  not the i r  mutual order .ALl the permutat ions ere at toued.
There is a lso meansof  f i x ing  yard order ing .
ORDER clause ind icatesmutual o rder ing  of  dependents.
For example, a grammarwr i te r  may def ine  fo r  the simple NP#s(ORDER Ad jAt t r  GenAttr R Re lAt t r )For th i s  par t i cu la r  regent the most immediate Leftnetghbour must be a genet ive  a t t r ibute .
The next tothat  is  an ad jec t ive  a t t r ibute .
The r ight  netghbouris a re la t ive  c lause.For tong-distmnce dependencies the Local dec is ions t ra tegy  must be augmented.
The b inding of|ong-dJstance dependents has two phases: therecogn i t ion  end the actual  b ind ing.In t rans format iona l  grammar, tong-d is tancedependencies ere dea l t  with by assuming that  in thedeep s t ructure  the missing word is  in the place i twould be in the corresponding simple sentence.
I t  isthen moved or de le ted  by a t rans format ion .
Theessent ia l  po in t  is  that  tong-d is tance dependency iscaused by an element which has moved from the Localenvironment of  ?
regent to the Local environment ofanother regent .
Hence a moved element must berecognized by the funct iona l  schema assoc iated withthat  Lat ter  regent .
The b ind ing,  then, is  done Lateron by the schema of  the former regent .In the recogn i t ion  phase the tong-d is tance dependentsare recognized and bound "sway" (captured) ,  so thatthe cur rent  regent can govern i t s  environment.A f te r  th i s  capture the poss ib le  Long-distancedependent remains wa i t ing  fo r  b ind ing by anotherscheme.Captur ing dependency funct ions  are marked tn theCAPTURE c lause:(CAPTURE DistantNember)The dependency funct ion  DistentNember is  generalenough to capture a l l  poss ib le  tong-d is tantdependents.
For the actual  b inding of  tong-d is tancedependents, one must mark in the c lause DISTANT thedependents which may be d i s tant :(DISTANT Object)2203 BLACKBOARD-BASED CONTROL FOB DEPENDENCY PARSINGBLackboard ts a problem-so lv ing model fo r  expertsystems (Hayes-Both et at .
1983, Ni i  1986).
We haveadopted that  concept end ut i l i zed  i t  fo r  pars ingpurposes.
Our blackboard model app l i ca t ion  is ra thersimple (F igure 3) .There are three main components: ?
b lackboard,  mcont ro l  part  end knowledge sources.
The blackboardcontains the ac t ive  environment descr ip t ion  fo r  aregent.
According to the s t ruc tura l  knowledge in thatenvironment descr ip t ion  corresponding par t ia l  parset ree  is  bu i l t  in the blackboard.
Also a l l  otherchanges in the s ta te  of  computation are marked in theblackboard.Functional schemata and b inary  dependency re la t ionsare independent and separate knowledge sources; nocommunication happens between them.
Art data f lowtakes place through the blackboard.
Which module ofknowledge to appty is  determined dynemicalty,  one stepat ?
t ime, resu l t ing  in the incremental generat ion ofpar t ia l  so lu t ions .In funct iona l  schemata s grammar writer has descr ibedLocal environments fo r  regents by dependencyfunct ions .
The schemata are compiled in to  an in terna lLXSP-form.
At s time, on ly  one of  the schemata ischosen as an act ive  environment descr ip t ion  fo r  thecur rent  regent .
The act ivated  schema is  matched withthe environment of  the regent by b inary  re la t iontes ts .
The b inary  re la t ions  respond to the changes inthe blackboard according to the s t ruc tura l  descr ip t ionin the ac t ive  schema and the proper t ies  of  the regentand dependent candidates.
At the same the par t ia ldependency t ree  is  bu i l t  by corresponding dependencyfunct ion  app l i ca t ions .
When s schema has been fu l l ymatched end the ac t ive  regent bound to i t s  dependentsthrough funct ion  Links, the Local par t ia l  dependencyparse is  complete.A scheduler  fo r  knowledge sources cont ro l s  the wholesystem.
It monitors  the changes on the blackboard anddecides Mhat act ions  to take next .
The scheduleremploys ?
f in i te  two-way automaton fo r  recogn i t ion  ofthe dependents.IBLACKBOARD KNOWLEDGESOURCES,...,,v. i i,._.x.i environment description Functional schemataPartial solutions (local dependenc Utrees).
.
.
.
I ~  - "* l  dependencuOther computational state uoLa --I relations- -  oon, o, ,,0 0o,o \]CONTROLf igure  3.
A blackboard model fo r  dependency pars ing.2213.1 The blackboard-based cont ro l  s t ra tegy  fo rdependency pars ingFor the format de f in i t ion  of the pars ing process wedescr ibe the input sentence as a sequence(c (1 ) ,c (2 ) , .
.
.
, c ( i -1 ) ,  c ( i ) ,  c ( i+ l ) , .
.
.
, c (n ) )  of  wordconst i tuents .
With each const i tuent  c ( i )  there isassoc iated a set ( s ( i ,1 ) , .
.
.
, s ( i ,m) )  of  funct iona lschemata.
The general  pars ing s t ra tegy  fo r  each wordconst i tuent  c ( t )  can be modelled using ?
t rans i t ionnetwork.
During pars ing there ere f i ve  poss ib lecomputat ional  s ta tes  fo r  each const i tuent  c ( i ) :Sl The in i t ia l  s ta te .
One of  the schemataassoc iated with c t t )  is  ac t ivated .S2 Le f t  dependent?
ere searched fo r  c ( i ) .$3 c ( i )  is  wa i t ing  fo r  the bu i ld ing  of  the r ightcontext .1) A schema candidate s ( iek )  assoc iated with c ( t )  isac t ivated ,  i .e .
the const i tuent  c ( t )  take ?
the roteof a regent .
Fol lowing the environment descr ip t ion  ins ( i , k ) ,  dependents fo r  c ( i )  are searched from i t simmediate neighbourhood.
Go to the step 2 with j ?i -1 .2) The search of  le f t  dependents.
There are twosubcases:2a) There are no le f t  neighbours ( j  = 0),  none isexpected fo r  c ( i ) ,  or c ( j )  ( j  < i )  ex i s ts  and isin the ?
ta ts  $3.Go to the step 3 with j = j+ l .2b) c ( j )  ( j  x i )  ex i s ts  and is  in the s ta te  SS.B inary  re la t ion  tes ts  are done.
In the case o?
a?
ucces the l ipp ing  f (c ( i ) ,  c ( j ) )  -> c ( i ) '  takesp lace.
Repeat the ?
tap  2 with j - j -1  end c ( i )  =c t i ) , .S4S5Right dependent?
are searched fo r  c ( i ) .The f ina l  s ta te .
The schema assoc iated with c ( i )has been fu l l y  matched and becomes inact ive ,  c ( i )is the head of  the completed (par t ia l )  dependencyt ree .At any time, on ly  one schema is  ac t ive ,  i .e .
on ly  oneconst i tuent  c ( i )  may be in the s ta te  B2 or S4.
Only scompleted const i tuent  (one in the ?
ta le  S5) is  a l lowedto be bound as s dependent fo r  ?
regent .
There may bes number of  const i tuents  s imul taneous ly  in the s ta teS3.
We ca l l  these pending const i tuent ?
(implementedas a ?
tack  PENDING).3) Bu i ld ing  the r ight  context  of  the regent .
Thereare two subcases:3a) There ere no r ight  neighbours ( j  ?
n) or noneis  expected fo r  c ( i ) .
Go to the ?
tap  5.3b) c ( j )  ( j  ?
i )  ex i s ts .
Go to the step 1 withc ( i )  : c ( i+ l )  and PENDING = push (c ( i ) ,  PEND%MG).4) The search of  r ight  dependents.
B inary re la t iontes ts  are done.
in the case of  succes the mappingf (c ( i ) ,  c ( j ) )  -> c ( i )  ~ takes p lace.
Repeat the step 3with j = j+ l  and c ( i )  = c ( i ) ' .5) The f ina l  s ta te .
There are two subcases:The pars ing process ?
ta r ts  with c(1) ?nd proceeds tothe r ight .
In i t ia l l y  a l l  const i tuents  c (1 ) , .
.
, c (n )are in the ?
ta ts  e l .
A sentence is  welt formed i f  inthe end of  the pars ing process the resu l t  i ?
?
?
i ng leconst i tuent  that  has reached the s ta te  S$ and conta in ?a l l  o ther  const i tuents  bound In i t ?
dependency t ree .For each const i tuent  c ( i )  the pars ing process can bedescr ibed by the fo l low ing  f ive  steps.
Parsing beginsfrom the ?
tap  1 with i , k  = 1.5a) The environment descr ip t ion  has been matched.i f  there remains no unbound c ( j ) ' s  ( j  < i or j >i )  the sentence is parsed.
I f  c ( i+ l )  ex i s ts  go tothe step 1 with i = i+1.
i f  c ( i+ l )  doesn ' t  ex i s tor the steps fo l lowed prev ious case returned afa i lu re ,  go to the step 4 with c ( i )  ?
pop(PENDING).5b) The environment descr ip t ion  h ?
?
not beenmatched.
Return a fa i lu re .2b 4. .
.
.
.
.
.
.
.
.
.Figure 4.
The t rans i t ion  network model of  thecont ro l  s t ra tegy .2223.2 The implementat ion of  the cont ro l  a t ra tegyThe cont ro l  system has two leve ls :  the basic levelemploys a generat two-way automaton and the upperleve l  uses a blackboard system.
There is a ctearcorrespondence between the grammar descr ip t ion  and thecont ro l  system: the two-way automaton makes localdec is ions  according to the b inary  re la t ions .
Theselocal  dec is ions  are cont ro l led  by the blackboardsystem which u t i l i zes  the environment descr ip t ionswr i t ten  in the schemata.
This two- leve l  cont ro l  modelhas cer ta in  advantages.
The two-way automaton iscomputat iona l ty  e f f i c ient  in loca l  dec is ions .
On theother hand, the blackboard system is  able to u t i l i zeglobal  knowledge of  the input sentence.ChronoLogicat backt rack ingTo account fo r  ambigu i t ies  there are three kinds ofbacktrack ing po ints  in the cont ro l  system.Backtracking may be done in regard to choice ofdependency funct ions ,  homographic word forms, orassoc iated schemata.
Backtracking is chrono log ica l .In our system a const i tuent  c ( | )  may conta in  severald i f fe rent  morphotact ic  in terpretat ions  of  a word form.Function backtrack ing takes place i f  there are severalposs ib le  b inary  re la t ions  between a given const i tuentpa i r .
The precond i t ions  of  the schemata may a l lowmul t ip le  schema candidates fo r  a given const i tuent .A l l  a l te rnat ives  are gone through one by one, i fnecessary, in chrono log ica l  backtrack ing.
As aresu l t ,  the system may perform an exhaust ive searchand produce a l l  poss ib le  so lu t ions .Register  fo r  tong-d is tance dependenciesThe recogn i t ion  of  poss ib le  fond-d is tant  dependenciesis  done by the capture funct ion .
An element is  boundas a poss ib le  "d i s tant  member" in the context  wherethe capture funct ion  f i res .
An element is  a lso  movedto the spec ia l  reg is ter  fo r  s set o f  d i s tant  elements.The actual  b inding is  done by the d i s tant  funct ionfrom another schema.
In chrono log ica l  backtrack inga lso  d i s tant  b indings are undone.The s t ra tegy  of  local  dec is ions  cont ro l led  by g lobalknowledge of  the input sentence y ie lds  a s t rong lydata -dr iven ,  ta f t - to - r ight  and bottom-up parse wherebypar t ia l  dependency t rees are bu i l t  proceeding frommiddle to out .3.3 EZANPLESTo v |suat i ze  our d iscuss ion ,  a funct iona l  schemaIntrllapNegVP is  descr ibed in F igure 5.
A grammarwr i te r  has dec lared in WHEN-part that  R must be at rans i t i ve  process verb in ac t ive  tense snd Imperat ivemood.
In i t s  ta f t  context  there must be a negat iveverb in imperat ive mood and of  the textcat  form "E l "("NOT").
There is  one ob l igatory  dependency re ts t ionHegVerb.
Adverb ia l s  may ex is t  mul t ip le  times.
Agrammar wr i te r  has wr i t ten  in clauses LEFT and RIGHTthe le f t  and r ight  context  b inary  re la t ions  of  theregent .
A f te r  the schema has fu l l y  matched, theregent is  marked VerbP and features  PersonH andPersonP of  the dependent recognized as HegVerb aremarked fo r  the regent .
($CHEHA: lntrlmperNegVPWHEN (AND(R : ProcVerb Act Imper (NOT VerbTr))(Le f t  = 'E% Imper))FUNCTIONS (OBLIGATORY NegVerb)(NULTIPLE AdverbiaL)(LEFT NegVerb Adverbial Connect)(RIGHT AdverbiaL))lARK (R : -  VerbP (RecNegVerb (PersonP PersonH))))F igure S. A funct iona l  schema lntrlmperMegVPA fu t t  t race  of  pars ing the sentence "~t i  eksymets~ss~l" (Don' t  get los t  in s fo res t )  appears inF igure 6.
Parsing s tar ts  from the ta f t  Can arrow).Next t ins  ind icates  the se lected schema and dependentsthat  are tes ted .
The f i r s t  word " i tS"  is  ident i f iedms a negat ive imperat ive verb with no dependents(schema DummyVP ok) .
The imperat ive verb "eksy" ( toget los t )  is then t r ied  by the schemaIntrlmperNegVP.
The b inary  re la t ion  NegVerb holdsbetween the two verbs,  and the correspondingdependency funct ion  ad jo ins  them.
The othen funct ionsfa i l .
Dependents are searched next from the r ightcontext .
The cont ro l  proceeds to the word "mets~ss~"( fo res t ) .
For that  word no dependents are found andthe system returns  to the unf in i shed  regent "eksy" .The schema IntrlmperNegVP has onty two re la t ionsremaining: Connect and Adverb|at .
The word"nets~ss~" is  bound as an adverb ia l .
The schema hasbeen fu l l y  matched and the Input sentence iscomplete ly  parsed.223> i t~ eksy mets iss i lNORFO:( ( ( ( " i t i "  EI Verb Act Imper Pr S /2P / ) ) )( ( ( "eksy"  EKSY~ Verb Act Imper Pr S /2P / ) ) )( ( ( "mets i ss i "  METSX Noun SG In ) ) )( ( ( " ! "
EXCLAMATION)))):> ( i t i )  (eksy) (mets iss i )Schema: OummyVP n i tOummyVP ok( i t i )  :> (eksy) (mets iss i )Schema: lntrlmperNegVP (Negverb Adverbial  Connect)NegVerb okAdverbial fa i ledConnect fa i led( ( i t i )  eksy) => (mets iss i )Schema: Tr iv iatSP (DefPart R)DefPart fa i ledTr iv ia lSP okreturning to unf inished const i tuent .
.
.
( ( i l i )  eksy) <= (mets iss i )Schema: IntrlmperNegVP (Connect Adverbia l )Adverbial  okIntrlmperNegVP ok=> ( ( i t i )  eksy (mets tss i ) )  PARSEDThe parse took 0.87 seconds CPU-time on VAX-11/751.Figure 6.
An example of parsing.The second example shows how our parser solves thefo l lowing sentence (adopted from Karttunen, 1986b)which has a tong-distance dependency:En mini tenn is t i  a|o ruveta petaamaan.not I tennis intend s tar t  playI do not intend to s ta r t  to play tennis .The object  of the subordinated in f in i t i v ia t  clause( " tenn is t i " )  has been raised in the main clause thuscreat ing a gap.
The parse t ree  of the sentence is inFigure 7.aidPredicateI.
.
.
.
.
.
.
.
.
?
.
.
.
.
.
.
.
.
.
?
.
.
.
.
.
.
.
.
.
?
.
.
.
.
.
.
.
.
.
?I I I Ien mini tenni$tl ruvetlNegation Subject Distant(I) ObjectiipeteamaenAdverbialI.
.
.
.
.
.
.
.
.
.
+ItenniltiObject(I)Figure 7.
An example of a tong-distance dependency.In the parsing process the schema NO-VP has matchedthe environment of the verb "a|o"  ( intend)  and theschema O-LocativeVP of the verb "peLaamaan" (p lay) .
(SCHEMA: NO-VPASSUME (R :, Negative)FUNCTIONS (OBLIGATORY Object Negation)(KULTIPLE Adverb|at OistentMember)(LEFT Auxiliary Negation Object Adverbial Connector)(RIGHT Object Adverbial Cor~'na)(CAPTURE OistantNember)CLAUSE READYCHEC~ (VerbObjCongr Negation Object)MARK (R := ProcVP Predicate (Negation (PersonP PersonN))))(SCHEHA:FUNCTIONSMARK)O-LocativeVP(OBLIGATORY Object)(HULTIPLE Adverbial OistentNember)(RIGHT Object Adverbial)(LEFT Object Adverbiat)(CAPTURE P|stantRember)(DISTANT Object Adverb|it)(R :s LocetlveVP Pred|cete)The schema NO-VP has captured the word " tenn is t i "  as aDistantNember.
The schema O-LocattveVP has Later onbound i t  as a removed Object.4 COl iPARISONThe not ion of un i f i ca t ion  has recent ly  emerged as acommon descr ip t ive  device in many L ingu is t i c  theor iesLike FUG, PATR-\[\[ and HPSG (Shieber 1986).
Anotherpopular approach has been to apply a t t r ibute  grammarso r ig ina l ly  developed as a theory for  formal Languages(gnuth 1968).
LFG and OCG can be viewed as a t t r ibutegrammar systems.
The trend has been towards s t r i c t lydec la ra t ive  descr ipt ions  of syntact i c  s t ruc ture .Syntact ic  rules are of ten expressed in the form ofcomplex feature  sets .Our ADP system also uses features ,  but d i f fe rs  bothfrom the un i f i ca t ion -based  approach and a t t r ibutegrammar approach.
The basic d i f fe rence  is ,  of course,that  there is ne i ther  un i f i ca t ion  nor correspondenceto a t t r ibute  grammars in our system.
We use a patternmatching via binary re la t ion  tes ts .
Throughblackboard approach we have gained a f lex ib le  cont ro l .Blackboard system can convenient ly  take into accountglobal knowledge of the sentence.
In our modeldependents become "hidden" from fur ther  processingonce they have been found.
A regent so le ly  representsthe const i tuents  hanging below.
This makes theparsing process simpler as the number of const i tuentsdecreases during parsing.
There ere, however, somecases where some informat ion must be raised from thedependent to the regent (e .g .
from conjuncts to thecon junct ion) ,  so that the regent could represent thewhole const i tuent .2245 CONCLUSIONIn our system l ingu is t i c  knowledge and processingmechanisms are separated.
Structura l  information ofthe funct ional  schemata is interpreted by theblackboard scheduler as control  knowledge, accordingto which dependencies are searched.
The d i f ferencebetween local and global decis ions is c lear lyseparated.
Locat decis ions cont ro l led  by globalknowledge of the input sentence has made i t  poss ib leto f ind  so lut ions for problems that are d i f f i cu l t  tosolve in t rad i t iona l  parsing systems.
ADP f inds a l lso lut ions for  an ambiguous sentence.
Augmented searchprocess covers tong-distance dependencies as wel l .D i f fe rent  c r i te r ia  have been expressed for grammarformalisms (Winogrsd 1983, Karttunen 1986a):persp icu i ty ,  nond i rec t ions t i ty ,  correspondence withmeanings, mul t ip le  dimensions of pat tern ing,order-independency, declarat iveness and monotontc~ty.Our model rates welt in most of these c r i te r ia .Persp icu i ty ,  correspondence with meanings anddectarsttveness are sa t i s f ied  in the way thefunct ional  schemata describe local  environments forregents.
The funct ional  descr ip t ion  is monotonic andal lows mul t ip le  dimensions of pat tern ing .There is s process of parsing as s s ta r t ing  point  inthe grammar spec i f i ca t ion ,  so i t  lacksnond i rec t ionat i ty .
The weakest point  is theorder-dependent contro l  mechanism, a lbe i t  the grammardescr ip t ion  is order- lndependent.
Plans for  thegeneral,  order-independent control  s t rategy have beendone.ADP has been implemented in FranzLisp.
Experimentsw~tn a non- t r iv ia l  set of Finnish sentence structureshas been performed on VAX 11/751 system.
An averagetime for  parsing a s ix  word sentence is between 0.5and 2.0 seconds for  the f i r s t  parse.
At the momentthe grammar descr ip t ion  contains common sentencestructures qu i te  wel l .
There are 66 binary re la t ions ,188 funct ional  schemata and 1800 lexicon ent r ies .
Thelexicon of the morphological analyzer contains 35 000words.ACKNOWLEDGENENT$This research has been supported by SlTRA Foundation.REFERENCESHayes-Roth, F., Waterman, D. and Lenat, D. 1983Buitding Expert Systems.
Addison-Wesley Publ ishingCompany, Reading.Jappinen, H. and Ytitammi, N. 1986 Associat ive Nodelof Norphotogicat Analysis:  an Empirical Inquiry .Computational L ingu is t i cs ,  Volume 12, Number 4,October-December 1986, pp.
257-272.Jappinen, H., Lehtola, A. and Vatkonen, K. 1986Functional Structures for Parsing DependencyConstraints.
Proceedings of COLING861ACL, Bonn, pp.461-463.Karttunen, L. and Kay, H. 1985 Parsing in a freeword order Language.
In Dowry, Karttunen and Zwicky(Eds.)
,  Natural Language Parsing, Cambridge Un ivers i tyPress.garttunen, L. 1986a The Relevance of ComputationalL ingu is t i cs .
A paper presented at the Conference onFinnish L ingu is t i cs .Karttunen, L. 1986b Radical Lexicatism.
A paperpresented at a Conference on A l te rnat ive  Conceptionsof Phrase Structure,  New York.Knuth, D. 1968 Semantics of Context-Free Languages.Nathematicat Systems Theory 2(1968a), pp.
127-145.Lehtots, A., J ippinen, H. and Netimarkka, E. 1985Language-based Environment for  Natural LanguageParsing.
Proceedings of the 2nd European Conferenceof ACL, Geneva, pp.
98-106.Lehtots, A. and Vatkonen, K. 1986 KnowledgeRepresentation Formalisms and Netsdescr ipt ions for theIn terpreta t ion  of Finnish.
Proceedings of the ThirdFinnish Symposium on Theoret ical  Computer Science, pp.64-87.Netimarkka, E., J ipptnen, H., and Lehtots, A.
1984Parsing an in f lec t iona l  free word order language withtwo-way f in i te  automata.
Proceedings of the 6thEuropean Conference on Ar t i f i c ia l  In te l l igence ,  Piss,pp.
167-176.
Also in O'Shea, T.
tEd.)
,  Advances inAr t i f i c ia l  In te l l igence ,  North-Hol land.N i i ,  N. 1986 Blackboard Systems: The BlackboardNodet of Problem Solving and the Evolut ion ofgtackboard Arch i tec tures .
The AI Nagazine, Summer1986, pp.
38-53, August 1986, pp.
82-106.Shieber, S. 1986 An Int roduct ion  to Uni f icat ion-BasedApproaches to Grammar.
CSLI Lecture Notes Series, No.4.Vatkonen, K. and Lehtola,  A.
1986 Blackboard Controlfor  Dependency Parsing.
A paper presented in Nordiskseminar am maskinoversattetse,  9.-11.10 1986,Un ivers i ty  of Copenhagen, 12 p. ( in  p r in t ) .Winograd, T. 1983 Language as a Cognit ive Process.Volume I :  Syntax.
Addison-Wesley.225
