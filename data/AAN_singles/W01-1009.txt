Gathering Knowledge for a Question Answering System fromHeterogeneous Information SourcesBoris Katz and Jimmy Lin and Sue FelshinMIT Articial Intelligence Laboratory200 Technology SquareCambridge, MA 02139fboris, jimmylin, sfelshing@ai.mit.eduAbstractAlthough vast amounts of informationare available electronically today, no ef-fective information access mechanism ex-ists to provide humans with convenientinformation access.
A general, open-domain question answering system is asolution to this problem.
We propose anarchitecture for a collaborative questionanswering system that contains four pri-mary components: an annotations sys-tem for storing knowledge, a ternary ex-pression representation of language, atransformational rule system for han-dling some complexities of language, anda collaborative mechanism by which or-dinary users can contribute new knowl-edge by teaching the system new infor-mation.
We have developed a initial pro-totype, called Webnotator, with which totest these ideas.1 IntroductionA tremendous amount of heterogenous informa-tion exists in electronic format (the most promi-nent example being the World Wide Web), but thepotential of this large body of knowledge remainsunrealized due to the lack of an eective informa-tion access method.
Because natural language isthe most convenient and most intuitive methodof accessing this information, people should beable to access information using a system capa-ble of understanding and answering natural lan-guage questions|in short, a system that com-bines human-level understanding with the infal-lible memory of a computer.Natural language processing has had its suc-cesses and failures over the past decades; while thesuccesses are signicant, computers will not soonbe able to fully process and understand language.In addition to the traditional di?culties associ-ated with syntactic analysis, there remains manyother problems to be solved, e.g., semantic inter-pretation, ambiguity resolution, discourse model-ing, inferencing, common sense, etc.
Furthermore,not all information on the Web is textual|someis sound, pictures, video, etc.
While natural lan-guage processing is advanced enough to under-stand typical interactive questions about knowl-edge (interactive questions are typically fairly sim-ple in structure), it cannot understand the knowl-edge itself.
For the time being, therefore, theonly way for computers to access their own knowl-edge is for humans to tell the computers what theknowledge means in a language that the comput-ers can understand|but still in a language thathumans can produce.
A good way to accomplishthis is with the use of natural language annota-tions, sentences which are simple enough for acomputer to analyze, yet which are in natural hu-man language.
Once knowledge is so annotated,and indexed in a knowledge repository, a questionanswering system can retrieve it.The Start (SynTactic Analysis using Re-versible Transformations) Natural Language Sys-tem (Katz, 1990; Katz, 1997) is an example of aquestion answering system that uses natural lan-guage annotations.
Start is a natural languagequestion answering system that has been availableto users on the World Wide Web1since Decem-ber, 1993.
During this time, it has engaged inmillions of exchanges with hundreds of thousandsof people all over the world, supplying users withknowledge regarding geography, weather, movies,corporations, and many many other areas.
De-spite the success of Start in serving real users,its domain of expertise is relatively small and ex-panding its knowledge base is a time-consumingtask that requires trained individuals.We believe that the popularity of the Web mayoer a solution to this knowledge acquisition prob-lem by providing collaborative mechanisms on ascale that has not existed before.
We can poten-tially leverage millions of users on the World Wide1http://www.ai.mit.edu/projects/infolabWeb to construct and annotate a knowledge basefor question answering.
In fact, we had proposeda distributed mechanism for gathering knowledgefrom the World Wide Web in 1997 (Katz, 1997),but only recently have we attempted to implementthis idea.An advantage of natural language annotationsis that it paves a smooth path of transition as nat-ural language processing technology improves.
Asnatural language analysis techniques advance, theannotations may become more and more complex.Eventually, a textual information segment couldbe its own annotation; someday, through othertechnologies such as speech and image recognition,etc., annotations could even be automatically con-structed for non-textual information.A further advantage is that natural languageannotations can be processed via techniques thatonly partially understand them|via IR engines,or less-than-ideal natural language systems|yetthey retain their more complex content and can bereanalyzed at a later date by more sophisticatedsystems.2 OverviewWe propose a collaborative question answering ar-chitecture composed of the four following compo-nents:1.
Natural Language Annotation is a tech-nique of describing the content of informa-tion segments in machine parsable naturallanguage sentences and phrases.2.
Ternary Expressions are subject-relation-object triples that are expressive enoughto represent natural language, and alsoamenable to rapid, large-scale indexing.3.
Transformational Rules handle the prob-lem of linguistic variation (the phenomenonin which sentences with dierent surfacestructures share the same semantic content)by explicitly equating representational struc-tures (derived from dierent surface forms)that have approximately the same meaning.4.
Collaborative Knowledge Gathering is atechnique by which the World Wide Web maybe viewed not only as a knowledge resource,but also a human resource.
The knowledgebase of a question answering system could beconstructed by enlisting the help of millionsof ordinary users all over the Web.3 AnnotationsNatural language annotations are machine-parsable sentences or phrases that describe thecontent of various information segments.
They de-scribe the questions that a particular segment ofinformation is capable of answering.
For example,the following paragraph about polar bears:Most polar bears live along the northerncoasts of Canada, Greenland, and Russia,and on islands of the Arctic Ocean.
.
.may be annotated with one or more of the follow-ing:Polar bears live in the Arctic.Where do polar bears live?habitat of polar bearsA question answering system would parse theseannotations and store the parsed structures withpointers back to the original information segmentthat they described.
To answer a question, theuser query would be compared against the anno-tations stored in the knowledge base.
Because thismatch occurs at the level of ternary expressions,structural relations and transformation (to be dis-cussed in Section 5) can equate queries and anno-tations even if their surface forms were dierent.Furthermore, linguistically sophisticated machin-ery such as synonymy/hyponymy, ontologies, canbe brought to bear on the matching process.
If amatch were found, the segment corresponding tothe annotation would be returned to the user asthe answer.The annotation mechanism we have outlinedserves as a good basis for constructing a questionanswering system because annotating informationsegments with natural language is simple and intu-itive.
The only requirement is that annotations bemachine parsable, and thus the sophistication ofannotations depends on the parser itself.
As natu-ral language understanding technology improves,we can use more and more sophisticated annota-tions.In addition, annotations can be written to de-scribe any type of information, e.g., text, im-ages, sound clips, videos, and even multimedia.This allows integration of heterogenous informa-tion sources into a single framework.Due to the vast size of the World Wide Web,trying to catalog all knowledge on the World WideWeb is a daunting task.
Instead, focusing onmeta-knowledge is a more promising approach tobuilding a knowledge base that spans more than atiny fraction of the Web.
Consider that referencelibrarians at large libraries obviously don't knowall the knowledge stored in the reference books,but they are nevertheless helpful in nding infor-mation, precisely because they have a lot of knowl-edge about the knowledge.
Natural language anno-tations can assist in creating a smart \referencelibrarian" for the World Wide Web.4 Representing Natural LanguageA good representational structure for natural lan-guage is ternary expressions.2They may be in-tuitively viewed as subject-relation-object triples,and can express most types of syntactic relationsbetween various entities within a sentence.
We be-lieve that the expressiveness of ternary relationsis adequate for capturing the information need ofusers and the meaning of annotations.
For ex-ample, \What is the population of Zimbabwe?
"would be represented as two ternary expressions:[what is population][population of Zimbabwe]Ternary expressions can capture many rela-tionships between entities within a sentence.Such a representational structure is better thana keyword-based scheme which equates a doc-ument's keyword statistics with its semanticcontent.
Consider the following sets of sen-tences/phrases that have similar word content,but (dramatically) dierent meanings:3(1) The bird ate the young snake.
(10) The snake ate the young bird.
(2) The meaning of life(20) A meaningful life(3) The bank of the river(30) The bank near the riverTernary expressions abstract away the linear or-der of words in a sentence into a structure that iscloser to meaning, and therefore a relations-basedinformation access system will produce much moreprecise results.We have conducted some initial information re-trieval experiments comparing a keyword-basedapproach with one that performs matching basedon relations4.
Using Minipar (Lin, 1999), weparsed the entire contents of the Worldbook En-cyclopedia and extracted salient relations fromit (e.g., subject-verb-object, possessives, prepo-sitional phrase, etc.)
We found that precision2See (Katz, 1990; Katz, 1997) for details aboutsuch representation in Start.3Examples taken from (Loper, 2000)4to be publishedfor relations-based retrieval was much higher thanfor keyword-based retrieval.
In one test, retrievalbased on relations returned the database's threecorrect entries:Question: What do frogs eat?Answer:(R1) Adult frogs eat mainly insects andother small animals, including earthworms,minnows, and spiders.
(R4) One group of South American frogsfeeds mainly on other frogs.
(R6) Frogs eat many other animals, includ-ing spiders,ies, and worms.compared to 33 results containing the keywordsfrog and eat which were returned by the keyword-based system|the additional results all answer adierent question (\What eats frogs?")
or other-wise coincidentally contain those two terms.Question: What do frogs eat?Answer:.
.
.
(R7) Adult frogs eat mainly insects andother small animals, including earthworms,minnows, and spiders.
(R8) Bowns eat mainly other sh, frogs,and craysh.
(R9) Most cobras eat many kinds of animals,such as frogs, shes, birds, and various smallmammals.
(R10) One group of South American frogsfeeds mainly on other frogs.
(R11) Cranes eat a variety of foods, includ-ing frogs, shes, birds, and various smallmammals.
(R12) Frogs eat many other animals, includ-ing spiders,ies, and worms.
(R13) .
.
.Another advantage of ternary expressions isthat it becomes easier to write explicit transfor-mational rules that encode specic linguistic vari-ations.
These rules are capable of equating struc-tures derived from dierent sentences with thesame meaning (to be discussed in detail later).In addition to being adequately expressive forour purposes, ternary expressions are also highlyamenable to rapid large-scale indexing and re-trieval.
This is an important quality becausea large question answering system could poten-tially contain answers to millions of questions.Thus, compactness of representation and e?-ciency of retrieval become an important consid-eration.
Ternary expressions may be indexed andretrieved e?ciently because they may be viewedusing a relational model of data and manipulatedusing relational databases.5 Handling Linguistic VariationLinguistic variation is the phenomenon in whichthe same meaning can be expressed in a varietyof dierent ways.
Consider these questions, whichask for exactly the same item of information:(4) What is the capital of Taiwan?
(5) What's the capital city of Taiwan?
(6) What is Taiwan's capital?Linguistic variations can occur at all levels oflanguage; the examples above demonstrate lexical,morphological and syntactic variations.
Linguisticvariations may sometimes be quite complicated,as in the following example, which demonstratesverb argument alternation.5(7) Whose declaration of guilt shocked thecountry?
(8) Who shocked the country with his dec-laration of guilt?Transformational rules provide a mechanism toexplicitly equate alternate realizations of the samemeaning at the level of ternary expressions.As an example, Figure 1 shows a sample trans-formational rule for (7) and (8).6Thus, throughapplication of this rule, question (7) can beequated with question (8).
[n1shock n2] [n3shock n2][shock with n3] $[n3related-to n1] [n3related-to n1]where n 2 Nouns where n 2 NounsFigure 1: Sample Transformational RuleTransformational rules may be generalized byassociating arbitrary conditions with them; e.g.,verb 2 shock, surprise, excite : : :A general observation about English verbs isthat they divide into \classes," where verbs inthe same class undergo the same alternations.For example, the verbs `shock', `surprise', `excite',etc., participate in the alternation shown in Sen-tence (7) and (8) not by coincidence, but because5Beth Levin (Levin, 1993) oers an excellent treat-ment on English verb classes and verb argument al-ternations.6This rule is bidirectional in the sense that eachside of the rule implies the other side.
The rule isactually used in only one direction, so that we canon-icalize the representation.they share certain semantic qualities.
Althoughthe transformational rule required to handle thisalternation is very specic (in that it applies to avery specic pattern of ternary expression struc-ture), the rule can nevertheless be generalized overall verbs in the same class by associating with therule conditions that must be met for the rule tore, i.e., verb 2 emotional-reaction-verbs; see Fig-ure 2.
[n1v1n2] [n3v1n2][v1with n3] $[n3related-to n1] [n3related-to n1]where n 2 Nouns and v 2 emotional-reaction-verbsFigure 2: Sample Transformational RuleNote that transformational rules can also en-code semantic knowledge and even elements ofcommon sense.
For example, a rule can be writtenthat equates a selling action with a buying action(with verb arguments in dierent positions).
Oras another example, rules can even encode impli-catures, e.g., A murdered B implies that B is dead.Transformational rules can apply at the syntac-tic, semantic, or even pragmatic levels, and oera convenient, powerful, and expressive frameworkfor handling linguistic variations.In order for a question answering system to besuccessful and have adequate linguistic coverage,it must have a large number of these rules.
A lexi-con which classied verbs by argument alternationpatterns would be a good start, but this is anotherresource lacking in the world today.
Rules gener-ally may be quite complex, and it would be di?-cult to gather such knowledge from average Webusers with little linguistic background.
Requestingthat users describe segments with multiple anno-tations (each representing a dierent phrasing ofthe description), might serve as a preliminary so-lution to the linguistic variation problem.
Anotherpossible solution will involve learning transforma-tional rules from a corpus.
The di?culty in cre-ating transformational rules is a serious problemand unless and until this problem is solved, anNL-based QA system would have to be restrictedto a limited domain where a small number of ex-perts could provide enough transformational rulecoverage, or would require a large commitment ofresources to attain su?cient coverage.6 Collaboration on the WebA critical component of a successful natural lan-guage question answering system is the knowledgebase itself.
Although the annotation mechanismsimplies the task of building a knowledge base,the accumulation of knowledge is nevertheless atime consuming and labor intensive task.
How-ever, due to the simplicity of natural language an-notations (i.e., describing knowledge in everydayEnglish), ordinary users with no technical skillsmay contribute to a knowledge base.
Thus, byproviding a general framework in which people onthe World Wide Web can enter additional knowl-edge, we can engage millions of potential users allover the world to collaboratively construct a ques-tion answering system.
We can distribute the ef-fort of building a knowledge base across many or-dinary users by allowing them to teach the systemnew knowledge.The idea of using the Internet as a tool forcollaboration across geographically distributed re-gions is not a new idea.
The Open Source move-ment rst demonstrated the eectiveness and sus-tainability of programming computer systems ina distributed manner.
Made possible in part bythe World Wide Web, the Open Source move-ment promotes software development by nurtur-ing a community of individual contributors work-ing on freely distributed source code.
Under thisdevelopment model, software reliability and qual-ity is ensured through independent peer review bya large number of programmers.
Successful OpenSource projects include Linux, a popular Unix-likeoperating system; Apache, the most popular Webserver in the World; SendMail, an utility on vir-tually every Unix machine; and dmoz, the OpenDirectory Project, whose goal is to produce themost comprehensive directory of the Web by rely-ing on volunteer editors.7Another example of Web-based collaborationis the Open Mind Initiative (Stork, 1999; Stork,2000), which is a recent eort to organize ordi-nary users on the World Wide Web (netizens) toassist in developing intelligent software.
Based onthe observation that many tasks such as speechrecognition and character recognition require vastquantities of training data, the initiative attemptsto provide a collaborate framework for collectingdata from the World Wide Web.
The three pri-mary contributors within such a framework aredomain experts, who provide fundamental algo-rithms, tool/infrastructure developers, who de-velop the framework for capturing data, and non-expert netizens, who supply the raw training data.Open Mind Commonsense8is an attempt atconstructing a large common sense database by7http://www.dmoz.org8http://openmind.media.mit.educollecting assertions from users all over the Web.9Other projects have demonstrated the viabil-ity of Web-enabled collaborative problem-solvingby harnessing the computational power of idleprocessors connected to the Web.10The SETI(Search for Extraterrestrial Intelligence) Institutewas founded after Nasa canceled its High Resolu-tion Microwave Survey project.
The institute or-ganizes thousands of individuals who donate theiridle processor cycles to search small segments ofradio telescope logs for signs of extraterrestrialintelligence.11Other similar projects that orga-nize the usage of idle processor time on personalcomputers include the Internet Mersenne PrimeSearch,12and the RC5 Challenge.13Recent technical, social, and economic devel-opments have made the abovementioned modelsof collaboration possible.
Furthermore, numeroussuccessful projects have already demonstrated theeectiveness of these collaborative models.
Thus,it is time to capitalize on these emerging trendsto create the rst collaborative question answer-ing system on the World Wide Web.Even with the components such as those de-scribed above, there still remains a major hurdlein jumpstarting the construction of a collaborativequestion answering system.
We are faced with aclassic chicken-and-egg problem: in order to at-tract users to contribute knowledge, the systemmust serve a real information need (i.e., actuallyprovide users with answers).
However, in orderto serve user information needs, the system needsknowledge, which must be contributed by users.In the initial stages of building a question an-swering system, the knowledge base will be toosparse to be useful.
Furthermore, the system maybe very brittle, and might not retrieve the correctinformation segment, even if it did exist withinthe knowledge base (e.g., due to a missing trans-formational rule).It may be possible to address this dilemma withan incremental approach.
The system can rstbe restricted to a very limited domain (e.g., \an-imals" or \geography").
Users' expectations willbe carefully managed so that they realize the sys-tem is highly experimental and has a very lim-ited range of knowledge.
In eect, the users will9A non-collaborative approach to building a com-mon sense knowledge base is taken by Lenat whoseCyc project (Lenat, 1995) is an attempt to build acommon sense knowledge base through a small teamof dedicated and highly trained specialists.10http://www.distributed.org11http://setiathome.ssl.berkeley.edu12http://www.mersenne.org13http://www.distributed.org/rc5/be populating a domain-specic knowledge base.Over time, the system will be able to answer moreand more questions in that domain, and hence be-gin to oer interesting answers to real users.
Afterthis, a critical mass will form so that users are notonly teaching the system new knowledge, but alsoreceiving high quality answers to their questions.At that point, a decision can be made to increasethe domain coverage of the system.In order to initialize this process, we can boot-strap o the curiosity and altruism of individualusers.
As an example, the Openmind CommonSense project has accumulated over 280 thousanditems of information by over six thousand usersbased on a data collection model that does notsupply the user with any useful service.
Thedream of building \smart" systems has alwaysbeen a fascination in our culture (e.g., HAL from2001: A Space Odyssey); we believe that this willserve to attract rst-time users.7 Evolving the SystemWhile the collaborative information gatheringtask proceeds, we are then faced with the prob-lem of maintaining the system and ensuring thatit will provide users with useful information.
Twoimmediate issues arise: quality control and lin-guistic variation.How can we insure the quality of the contributedmaterial?
In general, any system that solicits in-formation from the World Wide Web faces a prob-lem of quality control and moderation.
Althoughmost Web users are well-meaning, a small frac-tion of Web users may have malicious intentions.Therefore, some ltering mechanisms must be im-plemented to exclude inappropriate content (e.g.,pornography or commercial advertisement) frombeing inserted into the knowledge base.
Moretroublesome is the possibility of well-meant butincorrect information which is probably more com-mon and denitely harder to detect.How can we handle linguistic variation?
Thereare often dierent ways of asking the same ques-tion; the annotation of a particular segment mightnot match the user query, and hence the correctanswer may not be returned as a result.
Transfor-mational rules may be a solution to the problem,but writing and compiling these rules remain adi?cult problem.We propose a variety of solutions for the main-tenance of a collaborative question answering sys-tem, depending on the level of human interventionand supervision.At one end of the spectrum, an unsupervisedapproach to quality control can be implementedthrough a distributed system of moderation withdierent trust levels.
The scheme essentially callsfor self-management of the knowledge repositoryby the users themselves (i.e., the users with hightrust levels).
Dierent trust levels will allow usersvarious levels of access to the knowledge base, e.g.,the ability to modify or delete information seg-ments and their associated annotations or to mod-ify other users' trust levels.
To initiate the process,only a small group of core editors is required.In such an unsupervised system, the problem oflinguistic variation could be addressed by prompt-ing users to give multiple annotations, each de-scribing the information content of a particularsegment in a dierent way.
With a su?cientlylarge user base, wide coverage might still beachieved in the absence of broad-coverage trans-formational rules.At the other end of the spectrum, a large or-ganization may commit signicant amounts of re-sources to maintaining a supervised collaborativeknowledge base.
For example, an organizationmay be willing to commit resources to preserveits organizational memory in the form of an \in-telligent FAQ" supported by natural language an-notations.
Computers can be eectively utilizedto augment the memory of an organization (Allen,1977), and have been successfully deployed in real-world environments with relative success (Acker-man, 1998).If an organization were willing to commit signi-cant resources to a collaborative knowledge reposi-tory, then transformational rules can be written byexperts with linguistic background.
Such expertscould constantly review the annotations enteredby ordinary users and formulate transformationalrules to capture generalizations.Supervised use of natural language annotationfalls short of the grandiose goal of accessing theentire World Wide Web, but is the practical anduseful way to apply NL annotation until the trans-formational rule problem can be solved for unlim-ited domains.8 Initial PrototypeWebnotator is a prototype test-bed to evaluatethe practicality of NL-based annotation and re-trieval through Web-based collaboration.
It pro-vides e?cient facilities for retrieving answers al-ready stored within the knowledge base and a scal-able framework for ordinary users to contributeknowledge.The system analyzes natural language annota-tions to produce ternary expressions by postpro-cessing the results of Minipar (Lin, 1993; Lin,1994), a fast and robust functional dependencyparser that is freely available for non-commercialpurposes.
The quality of the representationalstructures depends ultimately on the quality ofwhatever parser Webnotator is made to access.
Inthe current implementation, ternary expressionsare not embedded, elements of ternary expres-sions are not indexed, and coreference is not de-tected.
Words are stemmed to their root form andmorphological information is discarded.
The sys-tem also implements a version of transformationalrules described above as a simple forward-chainingrule-based system.Using a relational database, Webnotator imple-ments a knowledge base that stores ternary ex-pressions derived from annotations and their asso-ciated information segments.
Ternary expressionst neatly into a relational model of data, and thusmanipulation of the knowledge (including answer-ing queries and inserting new knowledge) can beformulated as SQL queries.
This vastly simpliesdevelopment eorts while maintaining robustnessand performance.Webnotator provides an interface throughwhich users may teach the system new knowl-edge by supplying new information segments andadding new annotations.
Essentially, the user en-ters, in a CGI form, an information segment andannotations that describe the knowledge.
Sincethe segment of information can contain any validHTML, images, tables, and even multimedia con-tent may be included.
Alternatively, the user maysimply provide a URL to annotate, and Webnota-tor will automatically create a link to the URL inits knowledge base.Currently, Webnotator is a prototype that hasbeen released to a small community of developersand testers within the MIT Articial IntelligenceLaboratory.
We plan on releasing the system tothe general public in the near future.
By col-lecting knowledge from the general public and byvarying the representations and transformationsapplied by Webnotator, it should be possible todiscover which features are most important fora natural-language-based annotation system andwhether the state of the art is indeed su?cientlyadvanced to make such a system practical and ef-fective.9 Related WorkA variety of research has been conducted on bet-ter information access methods on the WorldWide Web (e.g., the \Semantic Web" (Berners-Lee, 1999)).
However, most of these approacheshave concentrated on methods of annotating exist-ing web pages with metadata such as XML/RDF(Resource Description Framework) (Staab et al,2000), extensions to HTML (Luke et al, 1997;Hein et al, 1999; Staab et al, 2000), special-ized descriptions (W. Dalitz and Lugger, 1997),or even conceptual graphs (Martin and Eklund,1999).The common thread among previous work is theembedding of metadata directly into Web docu-ments, which are then gathered via crawling orspidering.
This approach only works if the targetcommunity of the system is well-dened; adop-tion of various metadata techniques are presentlylimited, and thus it would be pointless to crawlthe entire web to search for metadata.
A modelin which distributed metadata are gathered by aspider will not work with a constantly changingcommunity that is ill-dened.
In principle, thereis no reason why our natural language annotationscannot be embedded into Web documents also; theissue is strictly a practical concern.Another common theme in previous work isthe organization of knowledge in accordance withsome pre-established ontology.
This presents sev-eral challenges for building a general system forgathering knowledge.
Ontologies are often ei-ther too specic to be of general use (e.g., Ri-boWeb's ontology for ribosome data (Altmann etal., 1999)), or too weak to provide much structure(e.g., Yahoo).
Since the ontology is static andmust be agreed upon prior to any knowledge basedevelopment, it may be too constricting and tooinconvenient for the expression of new or unantic-ipated concepts.
Although systems do allow forarbitrary extension of the ontology (Hein et al,1999; Staab et al, 2000), such extensions defeatthe purpose of a structure-imposing ontology.
Ourproposed alternative to a ontological hierarchy isto take advantage of the expressiveness of natu-ral language, and use linguistic devices to relateconcepts.
The combination of lexical resources(e.g., synonyms and meronyms in WordNet) andtransformational rules provide a natural, extensi-ble way to relate and structure dierent concepts.A compelling argument for natural language an-notations is their expressiveness and compactness.Martin and Eklund (Martin and Eklund, 1999) ar-gue against an XML-based system of metadata be-cause XML was primarily intended to be machinereadable, not human readable.
In their paper,they started with an English phrase, and then pro-ceeded to demonstrate the encoding of that sen-tence in various formalisms.
A constraint graphencoding was simpler than a KIF (Knowledge In-terchange Format) encoding, which was in turnshorter than a RDF format.
Of course, this begsthe question: why not just annotate the documentwith the original English phrase?
Current NLPtechnology can handle a large variety of Englishsentences and phrases, which may serve as theannotations directly.
Such is system is not onlysimpler, more intuitive, but also more compact.10 ConclusionRecent social, technical, and economic develop-ments have made possible a new paradigm of soft-ware development and problem solving throughloosely-organized collaboration of individuals onthe World Wide Web.
Many successful prece-dents have already proven the viability of this ap-proach.
By leveraging this trend with existing an-notation and natural language technology, we canprovide aexible framework for a question an-swering system that grows and \evolves" as eachuser contributes to the knowledge base, with onlyminimal outside supervision.
Testing will revealwhether such a system can help users realize someof the untapped potential of the World Wide Weband other sources of digital information as a vastrepository of human knowledge.ReferencesMark S. Ackerman.
1998.
Augmenting organi-zational memory: A eld study of answer gar-den.
ACM Transactions on Information Sys-tems, 16(3):203{224, July.Thomas Allen.
1977.
Managing the Flow of Tech-nology.
MIT Press.R.
Altmann, M. Bada, X. Chai, M. W. Car-illo, R. Chen, and N. Abernethy.
1999.
Ri-boWeb: An ontology-based system for collabo-rative molecular biology.
IEEE Intelligent Sys-tems, 14(5):68{76.T.
Berners-Lee.
1999.
Weaving the Web.
Harper,New York.Je Hein, James Hendler, and Sean Luke.
1999.SHOE: A knowledge representation languagefor internet applications.
Technical ReportCS-TR-4078, Institute of Advanced ComputerStudies, University of Maryland, College Park.Boris Katz.
1990.
Using English for indexing andretrieving.
In P.H.
Winston and S.A. Shellard,editors, Articial Intelligence at MIT: Expand-ing Frontiers, volume 1.
MIT Press.Boris Katz.
1997.
Annotating the World WideWeb using natural language.
In Proceedings ofthe 5th RIAO Conference on Computer AssistedInformation Searching on the Internet (RIAO'97).Doug Lenat.
1995.
CYC: A large-scale investmentin knowledge infrastructure.
Communicationsof the ACM, 38(11):33{38.Beth Levin.
1993.
English Verb Classes and Al-ternations: A Preliminary Investigation.
Uni-versity of Chicago Press.Dekang Lin.
1993.
Principled-based parsing with-out overgeneration.
In Proceedings of the 31thAnnual Meeting of the Association for Compu-tational Linguistics (ACL'93).Dekang Lin.
1994.
PRINCIPAR|An e?cient,broad-coverage, principle-based parser.
In Pro-ceedings of the 15th International Conference onComputational Linguistics (COLING '94).Dekang Lin.
1999.
Minipar|a minimalist parser.In Maryland Linguistics Colloquium, Universityof Maryland, College Park, March 12,.Edward Loper.
2000.
Applying semantic relationextraction to information retrieval.
Master'sthesis, Massachusetts Institute of Technology.S.
Luke, L. Spector, D. Rager, and J. Hendler.1997.
Ontology-based web agents.
In Proceed-ings of the First International Conference onAutonomous Agents.Philippe Martin and Peter Eklund.
1999.
Em-bedding knowledge in web documents.
In Pro-ceedings of the Eighth International World WideWeb Conference.S.
Staab, J. Angele, S. Decker, M. Erd-mann, A. Hotho, A. Maedche, H.-P. Schnurr,R.
Studer, and Y.
Sure.
2000.
Semantic com-munity web portals.
In Proceedings of the NinthInternational World Wide Web Conference.David G. Stork.
1999.
Character and documentresearch in the open mind initiative.
In Pro-ceedings of the Fifth International Conferenceon Document Analysis and Recognition.David G. Stork.
2000.
Open data collection fortraining intelligent software in the open mindinitiative.
In Proceedings of the Engineering In-telligent Systems Symposium (EIS '2000).M.
Grotschel W. Dalitz and J. Lugger.
1997.Information services for mathematics and theinternet.
In A. Sydow, editor, Proceedings ofthe 15th IMACS World Congress on ScienticComputation: Modelling and Applied Mathe-matics.
Wissenschaft und Technik Verlag.
