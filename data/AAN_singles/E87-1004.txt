MORPHOLOGYin theEUROTRA BASE LEVEL CONCEPTby Peter  Lau and Serge i  PerschkeCommission of the  EC,Bat.
JMOL - 2920 LuxembourgABSTRACTXn recent  years  the  nature  and the  ro le  of  amorpho log ica l  component in NLP sys tems hasa t t rac ted  a lo t  of  a t tent ion .The two-level model of Koskenniemi which relatesgraphemlc to  morpho log ica l  s t ruc ture  has beensucces fu l l y  implemented in the  form of  f in i tes ta te  automata .Xn EUROTRA a so lu t ion  which combinesmorpho log ica l  and sur face  syntact i c  p rocess ing  inone CFG implemented in a un i f i ca t ion  grammarframework has been tried out.
This articlecont ras ts  these  two approaches  cons ider ingespec ia l l y  the  feas ib i l i ty  of  bu i ld ingmorpho log lca l  modules fo r  a b ig mul t i l i ngua l  MTsys tem in a decent ra l i sed  R & V pro jec t .O.
INTRODUCTIONThe deve lopment  of  soph is t i ca ted  NLPapp l i ca t ions  has c reated  a need for spec i f i cp rocess ing  in o rder  to  be ab le  to  cope w i th  la rgevocabu lar ies  w i thout  c reat ing  monst ruousd ic t ionar ies .
Ear l ie r  approaches  o f ten  avo idedmorphology more or less  by l i s t ing  fu l l  wordformsin the d ic t ionary  or by s imply  segment ing  somein f lec t iona l  end ings  w i th  a few genera l  ru les .Much recent  work i s  based on the  Two- leve l  Model(Koskenniemi ,  1983) and re la tes  d i rec t ly  orind i rec t ly  to  the  or ig ina l  imp lementat ion  of  th i smodel in the  form of f in i te  s ta te  t ransducers(FST).
The or ig ina l  nota t ion  and imp lementat ionhave been fu r ther  deve loped and re f ined  (c f .
e .g .B lack,  1986 and Bear,  1986) in o rder  to improvecompi la t ion  and runt ime,  debugging andru le -wr i t ing  fac i l i t i es .S t i l l  some problems pers i s t  and o thers  have notbeen touched yet .
Th is  paper  p resents  ana l te rnat ive ,  but  not  cont rad ic tory ,  so lu t ionwhich has to  some extent  been t r ied  out  in theEUROTRA Machine Trans la t ion  P ro jec t  and arguesthat  the two- leve l  approach may not  be ent i re lyv iab le  in a decent ra l i sed  R&D pro jec t  which aimsat  ~he c reat ion  of a b ig mul t i l i ngua l  HT sys tem.I.
THE TWO-LEVEL MODELThe or ig ina l  p resentat ion  of  the  model(Koskenniemi ,  1983) shows that  i t  i s  poss ib le  tot reat  the  in f lec t iona l  morphology ( inc lud ingspe l l ing  ru les )  of a h igh ly  in f lec ted  languagel i ke  F inn ish  by es tab l i sh ing  cor respondencesbetween a surface alphabet and a lexical alphabet(the two levels) and using a lexicon to determinewhich combinations of characters and morphemesare legal.
Moreover, this is done by means ofdeclarative rules, thereby avoiding theprocedural problems of generative phonology, andthe algorithm used is language independent.Together with the fact that the model may bc usedfor synthesis as well as for analysis this is astrong argument in favour of employing atwo-level approach to morphology.Later  work po in ts  to some impor tant  shor tcomingsof the  o r ig ina l  imp lementat ion  of  the  model inthe loom of FST's (Black, 1986).
Especiallycompi la t ion  and runt ime requ i rements  anddebugging are  seen to pose severe  prob lems.
InB lack ' s  words :"Debugging automata  i s  remin iscentof  debugging assembly  language progranuuing inhex" .
Cons ider ing  that  the  ( l ingu is t i c )  user  isinterested in the rules rather than in thelow-level implementation of them, Black et alhave proceeded to develop high-level notations inthe form of rules which are interpreted directly,instead of being compiled into FST's.Nonetheless, they entirely respect the two-levelapproach in their notation.
Their rules stillestablish correspondences between, on one side,elements of a lexical alphabet (the characters ofthe natural language alphabet plus the emptycharacter  (if), the  morpheme boundary (+) ,  andarch iphonemes (noted  as cap i ta l  l e t te rs ) )  and, onthe  o ther  s ide ,  the  e lements  of a sur facea lphabet  (the characters  of the natura l  languagep lus  the empty character ) ,  and they  use a lex iconto determine  which combinat ions  of charactersmake up lega l  morphemes.
The i r  work shows there la t ive  independence of  the  ru le  fo rmal i sm fromits implementation - accepting the two-levelmodel by no means forces one to accept FST's asan implementation vehicle - and it shows that therules for combination of characters (spellingrules or morpho-graphemics) are best treated ini so la t ion  from the  ru les  fo r  combinat ion  ofmorphemes (morpho-syntax) .Th is  l a t te r  approach has been fu r ther  deve lopedby Bear (Bear ,  1986).
He combines a two- leve lapproach to morpho-graphemics  wi th  a un i f i ca t iongrammar approach (a mod i f ied  PATE  ru leinterpreter) to morpho-syntax.
The resulting19imp lementat ion  preserves  the genera l i ty  andf lex ib i l i ty  of  the  t reatment  of  morpho-graphemicphenomena l i ke  a l lomorphy wh i le ,  a t  the  samet ime,  avo id ing  the problems of t reat ingmorpho-syntax  in the  lex icon ,  which in rea l i ty  i swhat happens in Koskenn iemi ' s  o r ig ina l  modelwhere the lex ica l  ent r ies  fo r  root  morphemes aremarked fo r  "cont inuat ion  c lasses"  ( re fe rences  tosub- lex icons  which determine  the  lega lcombinat ions  of  morphemes).Furthermore, by t reat ing  morpho-syntax  in aun i f i ca t ion  grammar framework, Bear obta ins  ane f fec t  which i s  very  impor tant  p rov ided  thatmorpho log ica l  ana lys i s  and synthes i s  are normal lyregarded  as e lements  or modules of  sys tems whicha l so  do o ther  k inds  of  language  process ing ,  e .g .syntact i c  pars ing :  He reaches  a s tage  where theoutput  of  the  morpho log ica l  ana lyser  i s  someth ingwhich can eas i l y  be used by a parsee  or someother  program (Bear ,  1986, p. 275).S t i l l ,  one must  admit  that  on ly  subsets  ofmorphology have been t reated  w i th in  the  two- leve lframework and i t s  successors .
Most of  the  workseems to have cent red  on in f lec t iona l  morphologyw i th  a few excurs ions  in to  der ivat ion  and a to ta lexc lus ion  of compounding which i s  a veryimpor tant  phenomenon in languages  l i ke  German,Dutch and Danish .
I t  i s  a l so  notewor thy  that  noneof  the  imp lementat ions  ment ioned  above cou ld  beused fo r  the  ana lys i s  (or  synthes i s )  of  runn ingtext  because  they  know no cap i ta l  l e t te rs ,  nonumbers ,  no punctuat ion  marks or spec ia lcharacters ,  nor  fo rmat t ing  in fo rmat ion .
Th is  doesnot  mean that  such th ings  cou ld  not  be taken  careof  in combinat ion  w i th  a two- leve l  framework ( fo rins tance  by a pre -processor  of  some k ind) ,  i tjus t  means that  in o rder  to  cater  fo r  them oneneeds new k inds  of  nota t ions  and imp lementat ions(as numbers could  hard ly  be ana lysed  as lex iconent r ies )  w i th  the cor respond ing  in ter fac ingproblems (cf.
Bear's motivation for using aun i f i ca t ion  grammar fo r  morpho-syntax) .IT.
THE EUROTRA BASE LEVELI .
BackKroundEUROTRA i s  a decent ra l i sed  R & D pro jec ta iming at  the  deve lopment  of  a mul t i l i nEua lmachine translation system.
Thus, on top of thec lass ica l  coder cons is tency  problems known fromthe  deve lopment  of  b ig  )ST sys tems l i ke  SYSTRAN,EUROTRA has to ensure  cons is tency  of  work done insome 20 geograph ica l ly  d i spersed  s i tes .
Th isca l l s  fo r  a s t rong ,  coherent ,  unders tandab le ,problem or iented  and comprehens ive  framework.Cons ider ing  a l so  that  the  so f tware  deve lopment  inthe  pro jec t  i s  supposed to be based on rap idpro to typ ing ,  i t  becomes c lear  that  the  pro jec thas to bu i ld  on some genera l  idea about  howth ings  w i l l  f i t  together  in the  end.
We cannota f fo rd  to bu i ld  independent  modules (e .g .
an FSTimp lementat ion  of  a morpho log ica l  component ,  aPATR-II grammar for our syntactic componentimplemented in PROLOG, some SNOBOL programmingfor the treatment of text formatting, specialcharacters  e tc ,  and a re la t iona l  database  fo r  ourd ic t ionar ies )  and then  s tar t  car ing  about  thecompat ib i l i ty  of  these  modules a f te rwards .Consequently, the EUROTRA base level which treatsall kinds of characters (alpha-numeric, special,control etc.)
and morphemes and words has beenconceived as a part of the general EUROTRAframework and described in the same notation asthe syntactic and semantic components.In  the  absence of  a ded icated  user  language(which i s  be in  E deve loped now) the  EUROTRAnotation is the language of the virtual EUROTRAmachine.
This virtual machine stipulates a seriesOf so-called generators (G's) linked by sets oftranslation rules (t-rules).
Each generatorbuilds a representation of the source text (inanalysis) or the target text (in synthesis) andit is the job of the linguists who are buildingthe translation system to use these generators insuch a way that they construct linguisticallyrelevant levels of representation (e.g.morphological, syntactic constituent, syntaticrelation and semantic representations).
Theindividual generators are unification grammarsconsisting of const ruc tors  which are basicallyfunctions with a fixed number of arguments andatoms which are constructors with no arguments.An atom has the form(name,~feature descr ip t ion~)The feature  descr ip t ion  i s  a se t  ofa t t r ibute -va lue  pa i rs  ( features )  wi th oned i s t ingu ished  feature ,  ca l led  the  name, which i scaracter i s t i c  fo r  each generator  (e .g .
,  fo r  thesur face  syntact i c  generator  i t  would be syntact i cca tegory) .
The name i s  p laced  outs ide  the cur lyb rackets ,  and on ly  the  va lue  i s  g iven .A constructor has the formHEAD A R G U M E N T Swhere the n=name and fd=feature  descr ip t ion .
Infunctional terms this represents a function(descr ibed  by the head) over  n a rguments .The t-rules relate the representation built by agenerator to the atoms and constructors of thesubsequent G, thereby making it possible for thisG to build a new representation of thetranslation of the elements of the preceding onein a compositional way (cf.
EUROTRA literature(2,3 and 4) in the reference list).The v i r tua l  machine has been implemented inPROLOG and an Ear ly - type  parser  has been used tobu i ld  the  f i r s t  representat ion  in ana lys i s(viewed as a tree-structure over the inputstrins).
This implementation, of course,20represents  a cho ice .
Other programming  languagesand parsers  might  have  been used .
The sys temimplemented  by Bear ,  e .g .
ind icates  that  atwo- leve l  approach  to  morpho-graphemica  may becombined w i th  a un i f i ca t ion  granuuar approach  tomorpho-syntax .
For  var ious  reasons ,  though wehave  not  chosen  th i s  so lu t ion .2.
Text  s t ruc ture  and lex ico~raph iccons is tencyThe f i r s t  ser ious  prob lems encountered  inchoos ing  a two- leve l  approach  to  morpho logy  in  anMT sys tem i s  the  quest ion  o f  what  to  do w i th  a l lthose  characters  wh ich  are  not  le t te rs .
I f  wef ind  a p iece  o f  text  l i keA.
Th is  quest ion  w i l l  be d i scussed  w i th  theD i rec tor  Genera l  on Apr i l  25th .we do not  want  an ana lys i s  wh ich  te l l s  us  thatthe  sys tem has  found  4 nouns  (one be ing  a'p roper '  noun), 3 verbs  (one f in i te ,  twoi n f in i tes ) ,  two determiners ,  two prepos i t ions  andsome unintell igible elements which anothermachine wil l  have to take care of.
We want toknow that "Director General" is a compound which,syntact i ca l l y ,  behaves  l i ke  a s ing le  noun ,  that"Apr i l  25th"  i s  a date  (because  i t  may be at ime-mod i f ie r  o f  a sentence) ,  that  "A" i s  anindex  wh ich  ind icates  some enumerat ive  s t ruc tureo f  the  text ,  that  " . "
i s  a punctuat ion  mark  wh ichmay ind icate  that  a sentence  ends  here ,  andprobab ly  more in fo rmat ion  wh ich  we need i f  wewant  to  bu i ld  a representat ion  o f  the  who le  textand not  jus t  o f  some se lec ted  words  o r  s imp lesentences .I t  seems d i f f i cu l t  to  see  how the  two- leve lapproach  cou ld  cope w i th  compounds ,  apar t  f romenter ing  them a l l  in to  the  lex icon ,  and th i swould rea l ly  he a heavy  burden  on the  lex icon  o fcompounding languages .
S ing le  le t te rs  l l ke  "A .
"and even punctuat ion  marks  might  be inc luded  inthe  lex icon ,  but  numbers  cou ld  not  fo r  obv iousreasons .Fur thermore ,  cont ro l  and escape  sequences  wh ichdetermine  most  o f  the  text  s t ruc ture  ( font ,d iv i s ion  into chapters ,  sec t ions ,  paragraphse tc . )
in  any ed i to r  or  word processor  might  beentered  in to  the  lex icon ,  but  the  two- leve lapproach  does  not  p rov ide  any so lu t ion  to  theprob lem of g iv ing  these  sequences  anin terpreta t ion  wh ich  i s  use fu l  in  bu i ld ing  arepresentat ion  o f  the  text  s t ruc ture .In  o rder  to  cope w i th  these  prob lems,  we havechosen ,  in  EUROTRA, to  de f ine  the  input  and theoutput  o f  the  sys tem as extended ASCII f i l es .
TheASCII characters ,  inc lud ing  numbers ,  spec ia l  andcont ro l  characters ,  a re  de f ined  as the  atoms o fthe  f i r s t  leve l  o f  representat ion  and therebyprov ided  w i th  an in terpreta t ion  wh ich  makes i tposs ib le  fo r  them to  serve  as a rguments  o fconst ruc tors  wh ich  bu i ld  a t ree -s t ruc turerepresent ing  the  text  and a l l  i t s  e lements ,  a l sothose  e lements  which  are  not  words .The second prob lem in  the  two- leve l  approach  i sthat ,  apar t  f rom the  fac t  that  some textua le lements  seem to  be to ta l l y  outs ide  the  scope  o fthe  lex icon ,  even  those  e lements  wh ich  go in tothe  lex icon  pose  a ser ies  o f  p rob lems in  ourcontext .For MT to  be o f  any use  and e f f i c iency  we needla rge  d ic t ionar ies  wh ich  cover  a substant ia l  par to f  the  vocabu lar ies  o f  those  languages  t reated  bythe MT system.
It is known from a lot of MTsystems that the coding of large dictionaries (orl ex ica )  cannot  be le f t  to  a smal l  g roup  o f  peop lework ing  together  in  c lose  contact  fo r  a l im i tedper iod  o f  t ime.
Many coders  work ing  over  longper iods  a re  needed,  and they  w i l l  constant ly  bemainta in ing ,  rev i s ing  and up-dat ing  the  work o fone another .
For  such  an enterpr i se  to  succeedone needs  ext remely  s t rong  and deta i ledgu ide l ines  fo r  cod ing ,  and the  cod ing  languageshou ld  be as s imp le  and t ransparent  as  poss ib leand conta in  no content ious  e lements  f rom atheoret i ca l  po in t  o f  v iew.
Morpheme boundar ies ,a rch iphonemes  and nu l l - characters  a re  hard lyuncontent ious  in  the  sense  that ,  e .g .
everybodyagrees  on the  root  fo rm to  employ  in ' reduct ion '( ' reduce '  or  ' reduc '  ? )
,  and even  the  s l ightes td i sagreement  w i l l  i nvar iab ly  jeopard ize  thein tercoder  cons is tency  wh ich  i s  abso lu te lynecessary  fo r  an MT pro jec t  to  succeed .3.
Character  normal i za t ion  and morphemeident i f i ca t ionThe atoms of the base level identify andinterpret the characters of the input file inthat the name of the atom unifies with the inputcharacter  ( fo r  non-pr ln tab le  charactershexadec ima l  nota t ion  in  quotes  i s  used) :( A, { type  = le t te r ,  subtype  = vowe l ,  char=a,case  = upper~)( k, ~ type  = le t te r ,  subtype  = vowe l ,  char=a,case  lower ,  accent  = grave~)( ' IB ' ,  ~type  = cont ro l _char ,  subtype  = escape~ )In  a un i f i ca t ion  granuuar wh ich  a l lows  the  use  o fnamed and anonymous var iab les ,  i t  i s  easy  to  jo inall variants of the letter 'a' under one heading(a constructor in EUROTRA terms) and percolateall relevant features to this beading by means offeature-passing.
This is called normalisatlon inour tet~us, and it simply means that alltypographical variants of a character arecollapsed so that the dictionary will only haveto contain one character type.
A normalizingconst ruc tor  fo r  'a  t cou ld  be:21(a ,  ~type  = le t te r ,  subtype  = vowe l ,  case  = X,accent  = Y~)( ' ?
,  ~char  = a,  case  = X, accent  = Y})~where  ' ? '
i s  the  anonymous var iab le .
The argumento f  th i s  const ruc tor  w i l l  un i fy  w i th  any a tomconta in ing  the  feature  ' char  = a '  and accept  theva lues  fo r  ' case '  and 'accent '  found  in  thesea toms.
By feature -pass ing  these  va lues  w i l l  thenbe perco la ted  to  the  head .At th i s  s tage  the  representat ion  o f  the  inputf i l e  i s  a sequence  o f  normal i sed  characters .
Th issequence  i s  now matched  aga ins t  the  d ic t ionary  o rlex icon  wh ich  i s  Jus t  another  se t  o f  const ruc torso f  the  fo rm( fo r ,  ~ c lass  = bas ic_word ,  type  = lex ica l ,ca t  = prep ,  parad igm = invar iant  } )I f ,  O ,  r~( fo r ,  ~ c lass  = bas ic  word,  type  = pre f ix ,parad igm = der ivat ion  ~ )I f ,  o , r JMatch ing  here  means the  k ind  o f  match ing  wh ichoccurs  in  un i f i ca t ion .
Th is  means ,  o f  course ,that  the  overgenerat ion  may be severe  in  somecase ,  e .g .
each  o f  the  ' s '  appear ing  inM iss i ss ipp i  w i l l  i .
a .
be in terpreted  as  a p lu ra lmorpheme.
Th is  overgenerat ion  must  beconst ra ined .
We are  work ing  w i th  th i s  p rob lem andsome resu l t s  a re  ready ,  wh ich  conf i rm that  ourapproach  to  character  normal i sa t ion  andd ic t ionary  look -up ,  i .e .
the  one descr ibed  above ,p rov ides  fo r  a s t ra ight - fo rward ,  s t r i c t  and yetper fec t ly  unders tandab le  and uncont rovers ia lcod ing  o f  d ic t ionary  ent r ies .
The set  o f  poss ib lefeatures  and the  co -occur r rence  const ra in tsho ld ing  between those  features  a re  de f ined  inadvance .
What the  d ic t ionary  coder  has  to  do i sto  choose  the  re levant  features  fo r  each  lex ica li tem (bas ic  word in  our  te rmino logy)  and wr i tethem in to  the  re levant  const ruc tor  wh ich  w i l loperate  in  to ta l  independence  o f  any o therconst ruc tor .
There  w i l l  be no prob lems w i thl ink ing  sub- lex icons  o r  d i scuss ing  morphemeboundar ies ,  because  each  const ruc tor  operatesd i rec t ly  on the  sequence  o f  sur face  characters ,i .
e .
the  prob lem o f  whether  the  sur face  fo rm o f'ab i l i ty '  i s  a b i 1 ~ ' i  t y o ra b i 1 ~ ~ i t y does  not  ex i s t  ( c f .
B lack1986,  p. 16) .
The ensu ing  prob lems in  re la t ion  tothe  t reatment  o f  a l lomorphy  are  exposed  be low.4.
Imp lementat ionThe EUROTRA Base Leve l  has  been imp lementedby means  o f  a p ro to type  vers ion  o f  the  v i r tua lmach ine  imp lemented  in  PEOLOG wi th  an Ear ly - typeparser .
Th is  p ro to type  was const ruc ted  in  such  away that  the  parser  would  on ly  work in  one o f  thegenerators ,  i .
e .
the  f i r s t  generator  employed  inana lys i s ,  wh i le  the  o ther  generators  wou ldproduce  t rans forms o f  the  t ree -s t ruc ture  bu i l t  bythe  f i r s t  generator .Due to  th i s  const ra in t ,  we had to  co l lapsemorpho-syntax  and sur face  syntax  in to  onegenerator  wh ich  bu i l t  a t ree  over  the  sequence  o fcharacters  o f  the  input  f i l e  v ia  normal i zedcharacters ,  bas ic  words ,  complex  words( in f lec ted ,  der ived  and compound word forms) ,phrasa l  nodes  (NP, VP, PP e tc . )
and end ing  a t  anS top  node .
The resu l t ing  grannnars  became veryb ig ,  and tes t ing  in  most  cases  had to  be donew i th  sub-grammars  in  o rder  to  p revent  load ing  andpars ing  t imes  f rom becoming  proh ib i t i ve .Ac tua l  imp lementat ion  work was done in  5languages  (Eng l i sh ,  German,  Dutch ,  Dan ish  andGreek) ,  and severa l  sub-grammars  weresuccess fu l l y  imp lemented  and tes ted .
The mostimpor tant  exper ience  was that  the  d i f fe rentg roups  par t i c ipat ing  in  the  pro jec t  were ab le  tounders tand  the  base  leve l  spec i f i ca t ions  and touse  them or  dev ia te  f rom them in  a p r inc ip led  wayproduc ing  comparab le  resu l t s .The pro to type  used  fo r  th i s  f i r s t  imp lementat ion ,however ,  was a fa i r l y  une legant  anduser -un f r iend ly  mach ine  wh ich  was ra ther  in tendedto  be runn ing  spec i f i ca t ions  than  a veh ic le  o fconst ruc t ing  and tes t ing  granuuars .
Wi th  a mores t reaml ined  proto type  two const ra in ts  onimp lementat ion  and tes t ing  o f  g rammars  would  bere l ieved:  load ing  and runt ime requ i rements  wouldd imin ish  rad ica l ly  and i t  shou ld  be poss ib le  touse  pars ing  or  pars ing - l i ke  procedures  in  morethan  one generator .Th is  wou ld  a l low us  to  const ruc t  a fu l l  MT sys temwi th  a s tandard ised  and s imp le  d ic t ionary  fo rmatand capab le  o f  t reat ing  a l l  k inds  o f  characterswh ich  may appear  in  an input  f i l e .5.
The base  leve lsThe l ingu is t i c  spec i f i ca t ions  o f  th i ssys tem,  wh ich  i s  to  be imp lemented  in  the  presentphase  o f  the  pro jec t ,  have  been  e laborated  insome deta i l .
The input  to  the  sys tem wi l l  bef i l es  conta in ing  characters  in  a 7 o r ,p re ferab ly ,  8 b i t  code ( in  o rder  to  cover  themul t i l i ngua l  EOROTRA env i ronment ) .
The charactersun i fy  w i th  atoms o f  the  type  descr ibed  above .
Theatoms then  un i fy  with abst rac t  word form,sentence, paragraph etc.
constructors of thefollowing kind:22(wordform) /~+(?, { type  = le t te r}  )~(sentence)  \[ + wordform, (?,~type  = punctuat ion_mark~ )1(paragraph) \[ + sentenc_e, ( f in  paragraph,?
~char ffi double CR} )where ?
is  s t i l l  the anonymous var iab le ,  '+ '  isthe Kleene plus s ign i fy ing  one or more of thefo l lowing argument and 'double car r iage  re turn 'is  assumed to be the character  (or sequence)ind icat ing  te rminat ion  of a paragraph in the text .These abst rac t  const ruc tors  w i l l  bu i ld  at ree -s t ruc ture  represent ing  the fu l l  input  textfrom the characters  v ia  the words, the sentences ,the paragraphs, the sections etc.
to a top T(ext)node, of course with some overgeneration, e.g.some punctuation marks do not terminate asentence, but the overgeneration will be filteredout by subsequent generators  us ing morpho log ica l ,syntact i c  and semantic information.The generator  fo l low ing  the f i r s t  ( texts t ruc ture)  leve l  w i l l  normal ise the characters  bya many-to-one mapping of ,  e .g .
var iants  of 'a ' ,and a l l  the bas ic  words of the system component(e .g .
the Engl ish ana lys i s  component), i .
e .
themajor part  of the monol ingual  d ic t ionary ,  w i l l  bepresent in this generator in the form ofconstructors (cf.
the 'for' constructor mentionedabove).
This will cause some overgeneration asillustrated above with the example 'M iss i ss ipp i 'but an abst rac t  wordform const ruc tor  which isconnected by a t - ru le  to the representat ionsbu i l t  by the abst rac t  wordform const ruc tor  of theprevious (text structure) level will filter outspurious results:(wordform) ~ +(?, \ [ c lass  = bas ic_word~)~Given that  'm i ' ,  ' i '  and ' ipp i '  are not a l l  bas icwords of English, no interpretation of the 's' asplural or third person singular markers will beal lowed, because each wordform has to coverexact ly  one sequence of bas ic  words exhaust ive lywithout over lapp ing .Assuming that  'M iss i ss ipp i '  is  a bas ic  word ofEngl ish present  in the d ic t ionary  (as aconstructor of this level), the sequence ofnormalised characters 'mississippi' will receiveat least one legal interpretation which is thentranslated into the subsequent (morpho-syntactlc)level by a t-rule.The t reatment  of a l lomorphic  var ia t ion  in th i sapproach w i l l  re ly  on a l te rnat ing  arguments inthe bas ic  word const ruc tors .
In order  to coverthe a l te rnat ion  y - ie  found in,  e .g .
,  c i ty  - -~c i t ies '  we sha l l  have to use a bas ic  wordconstructor of the following form:(c i ty ,  ~ ~)  ~c ,  i ,  t ,  ( i ; y ) \ ]where ';' is the alternation operator.
Thisconstructor will unify with any of the twosequences ' c i t i '  and ' c i ty ' ,  and i f  we c reate  twobas ic  word const ruc tors  over  the p lu ra l  ending ofnouns (cover ing  at  the same time the th i rd  persons ingu lar  of the present  tense of verbs ) ,  i .
e .
(s)and (es ) ,  e .g .we may cover the wordform 'c i t ies '  by (c i t i )  and(es ) .
A de f in i te  advantage of us ing th i s  approachis that  i t  covers a l lomorphic  var ia t ion  ins idethe root  form l i ke  in German p lura l  of nouns:Mann - -> M~nnerby (mann,{ ~) I ra ,  (a, ~), n, n JThe only way of cover ing th i s  phenomenon in thetwo- leve l  approach seems to be by enter ing  both'Mann' and 'M~nn' in to  the d ic t ionary  as poss ib leroots.The generator  fo l low ing  the leve l  where bas icword ident i f i ca t ion  takes p lace conta ins ,  as i t satoms, the bas ic  words t rans la ted  by t - ru les  fromthe representations built by the basic wordconstructors.
The characters, which are the atomsof the previous level, are cut off by receiving a0 translation.The constructors of this generator are wordform(or complex word) constructors covering thevar ious  inflectional paradigms, the differentclasses of derivation and compounding.
Thefollowing constructor would build representationsof all French verbs of the regular er-paradigm inthe infinitive, including the information thatthese representations may be used as arguments ofconstructors over future and conditional forms(which include the infinitive):(V, Jclass = wordform, cat = v, lexical unit = X,verbfomu = infinitive,inflectional_class = regu lar_verb  er ,inflectlonal_paradigm = inf_cond_fut ~ )iX ,  ~c lass  = bas ic  word, type = lex ,--inflectional_~lass = reg_verb_er~)(e r ,{c lass  = bas ic  word, type = in f lec t ion ,in f lec t iona l  c lass  = reg_verb_er ,  ~)in f lec t iona l _parad igm = in f_cond_ fut~ J23The const ruc tor  over cond i t iona l  forms w i l l  taketh i s  representat ion  p lus  a bas ic  wordrepresent ing  a cond i t iona l  end ing as i t sa rguments ,  and the f ina l  representat ion  o f ,  e .g .'
a imera is '  w i l l  be equ iva lent  to a t ree  wi th  a l lre levant  in fo rmat ion  perco la ted  to the  top node:v / \v a i s  / \aim erThe morpho-syntact i c  generator  bu i lds  the  samek ind of  representat ions  of  der ivat ions  andcompounds.
The leaves  of  the  t rees  alwayscor respond to bas ic  words,  and consequent ly ,  th i sgenerator  w i l l  bu i ld  representat ions  o f ,  e .g .
a l lcompounds the e lements  of  which are present  inthe  bas ic  word ident i f i ca t ion  generator :hand ba l l  n,  der ivat ion  / \mann schaf tThe morpho-syntaet i c  representat ions  aret rans la ted  in to  the fo l low ing  (sur face  syntact i c )leve l  in such a way that  wordforms which areexhaust ive ly  descr ibed  by the i r  top node( invar iant  words,  in f lec t ions  and someder ivat ions  l i ke  the  agent ive  (e .g .  '
sw immer ' ) )appear  as atoms,  wh i le  a l l  o thers  (a l l  o therder ivat ions  and compounds) appear  as s t ruc ture(const ruc tors )  wi th  the re levant  categor ia lin fo rmat ion  in the  top node:n, der ivat ion  a t ion(n ,  der ivat ion)inv i te  a t ion  inv i te  Iv)At subsequent  deep syntact i c  or semant ic  leve lsin fo rmat ion  from other  nodes of  the  word t ree  maybe needed.
Th is  can be prov ided  by le t t ingt - ru les  t rans form the t ree  in such a way that  there levant  in fo rmat ion  goes to the  top node (e .g .i f  the frame of the root  of  a der ivat ion  i sneeded fo r  semant ic  purposes ,  the  root  featuresare moved to  the top of  the t ree) .
In th i s  wayre levant  morpho log ica l  in fo rmat ion  w i l l  a lways beava i lab le  when i t  i s  needed:a t ion  (n,  der ivat ion)  inv i te  (v)!
> Ii nv i te  Iv) a t ion  (n,  der ivat ion)The resu l t ing  t ree  i s  used in a deep syntact i c  orsemant ic  generator  where the  in fomuat ion  thatth i s  e lement  was or ig ina l ly  a der ived  noun i si r re levant ,  because  the e lement  has  a l ready  beenp laced in the  overa l l  s t ruc ture  on the  bas i s  ofth i s  in fo rmat ion .
Nonethe less ,  the  'a t ion ' -nodei s  not cut  o f f ,  because  i t  i s  re levant  fo rt rans fer  to  know that  a verb -noun der ivat ion  andnot  jus t  a verb i s  be ing  t rans la ted .I I I .
CONCLUSIONThe EUROTRA base  leve ls  bu i ld  a fu l lrepresentat ion  of  the  text  s t ruc ture  by t reat inga l l  characters  of  the  input  f i l e  inc lud ingspec ia l  and cont ro l  characters .
They normal i sethe  characters  in such a way that  the  sys temd ic t ionary  may funct ion  independent ly  of  lay -out ,font  and o ther  typograph ic  var ia t ions .
Theyprov ide  separate  t reatments  of  morpho-graphemicsand morpho-syntax ,  and the  representat ions  of  thewords are  of  such a k ind that  they  may be usednot  on ly  fo r  syntact i c ,  but  a l so  fo r  semant icp rocess ing .At the  same t ime,  the  d ic t ionary  ent r ies  ares imple  bas ic  word const ruc tors  over  sequences  ofcharacters .
No spec i f i c  phono log ica l  knowledge i srequ i red  fo r  the cod ing of  these  ent r ies ,  and soa poss ib le  source  of  incons is tency  among codersi s  avo ided.The fac t  that  EUROTRA const ruc tors  c lose lyresemble  t rad i t iona l  rewr i te  ru les  tosether  w i ththe coocur rence  res t r i c t ions  imposed by theEUROTRA feature  theory  a l lev ia tes  the debugg ingof  grammars and d ic t ionar ies .
No rea l  prograr~nin$exper ience  in the c lass ica l  sense  i s  needed.
Theconst ruc tors ,  however,  do not  implyund i rec t iona l i ty  l i ke  the ru les  of generat ivephonology.
They work equa l ly  we l l  both ways, andconsequent ly ,  they  serve  fo r  ana lys i s  as we l l  asfo r  synthes i s .
The const ruc tors  of  a generatora l l  apply  in para l le l ,  thereby  avo id ing  the  k indof  in te rac t ion  which i s  typ ica l  of  o rdered setsof  ru les .Th is  des ign ,  in our  op in ion ,  p rov ides  a good setof  too l s  fo r  ensur ing  cons is tent  imp lementat ionof grantnars and d ic t ionar ies  across  adecent ra l i sed  and mul t i l i nsua l  MT pro jec t .24REFERENCESI.
Ananiadou, Effie & John McNauBht.
A Review ofTwo-Level Morphology.
Manchester 1986.Unpublished EUROTRA paper2.
Arnold,  Douglas.
EUROTRA: A Europeanperspect ive  on MT.
IEEE Proceed ings  onNatura l  Lansuage Process inB ,  19863.
Arnold, D.J.
& S. Krauwer, N. Rosner, L. desTombe, G.B.
Varile.
The <C,A>~ T Frameworkin EUROTRA: A theoretically committednotation for fir.
ProceedlnBs of COLING *85.Bonn, 19864.
D.J.
Arnold, L. Jaspaert, R. Johnson, S.Krauwer, M. Rosner, L. des Tombe, G.B.
Varile& S. Warwick.
A Mu-I View of the~C,A~TFramework in EUROTRA.
ProceedlnBs of theConference on Theoretlcal and MethodoloBicalI s sues  in Machine Trans la t ion  of Natura lLanguages.
ColBate Un ivers i ty ,  Hami l ton,  NewYork, 1985.5.
Bear,  John.
A Morpho log ica l  Recogn izer  w i thSyntact i c  and Phono loB ica l  Ru les .
P roceed ingsOf COLING *86.
Bonn, 19866.
Black,  Alan W. Morpho~raphemic Rule Systemsand the i r  Imp lementat ion .
Unpubl i shed paper ,Department of AI, Un ivers i ty  of  Ed inburgh,19867.
Koskenniemi,  Kimmo.
Two-Level Morphology: A~enera l  computat iona l  model fo r  word-formrecosn i t ion  and product ion .
Un ivers i ty  ofBe ls ink i ,  Department of Genera l  L insu is t i cs ,1983.25
