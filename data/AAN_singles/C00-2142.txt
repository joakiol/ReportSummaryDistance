Rapid Development of Translation Tools:Appl ication to Persian and TurkishJan W. Amtrup~ Karine Megerdoomian and Rdmi ZajacComput ing  Research  LabNew Mex ico  S ta te  Un ivers i ty{j  amtrup ,  kar  ?ne,  za j  ac}Ocr l ,  nmsu.
eduAbstractThe Computing Research laboratory (CRL) is devel-oping a machine translation toolkit that allows rapiddeployment of translation capabilities.
This toolkithas been used to develop several machine translationsystems, including a Persian-English and a Turkish-English system, which will be demonstrated.
Wepresent he architecture of these systems as well asthe development methodology.1 IntroductionAt CRL, one of the major research topics is the de-velopment and deployment of machine translationsystems for low-density languages in a short amountof time.
As the availability of knowledge sourcessuitable for automatic processing in those languages(e.g.
Persian, Turkish, Serbo-Croatian) is usuallyscarce, the systems developed have to assist the ac-quisition process in an incremental fashion, startingout fl'om low-level translation on a word-fo>wordbasis and gradually extending to the incorporationof syntactic and world knowledge.The tasks and requirements for a machine trans-lation enviromnent that supports linguists with thenecessary tools to develop and debug increasinglycomplex knowledge about a specific language in-elude:?
The development of a bilingual dictionary thatis used for initial basic translation and can fur-ther be utilized in the more complex translationsystem stages.?
Methods to describe and process morpholog-ically rich languages, either by integratingalready existing processors or by developinga morphologicM processor within the systemframework.?
Glossing a text to ensure the correctness ofmor-phological analysis and the colnpleteness of thedictionary for a given corpus.?
Processors and grammar development tools forthe syntactic analysis of the source language.?
In order to allow rapid development cycles, thetranslation system itself has to be reasonablyfast and provide the user with a rich envi-ronment for debugging of linguistic data andknowledge.?
The system used for development must be con-figurable for a large variety of tasks that emergeduring the development process.We have developed a component-based transla-tion system that meets all of the criteria men-tioned above.
In the next section, we will describethe m:chitecture of the system MEAT (MultilingualEnvironment for Advanced Trmlslations) , which isused to translate between a number of languages(Persian, Turkish, Arabic, Japanese, Korean, Rus-sian, Serbo-Croatian and Spanish) and English.
Inthe following sections, we will describe the generaldevelopment cycle for a new language, going intonmre detail for two such languages, Persian andTurkish.2 Genera l  a rch i tec tureMEAT is a publicly available nvironmeut I hat as-sists a linguist in rapidly developing a machine trans-lation system, in order to keep the overhead in-volved in learning and using the system as low aspossible, the linguist uses use simple yet powerful ba-sic data and control structures.
These structures areoriented towards contemporary linguistic and con>putationM linguistic theories.In MEAT, linguistic knowledge is entirely repre-sented using Typed Feature Structures (TFS) (Car-penter, 1992; Zajac, 1992), the most widely used rep-resentational formalism today.
We developed a fastimplementation of Typed Feature Structm:es withappropriateness, based on an abstract machine view(eft Carpenter and Qu (1995), Wintner and Francez(1995).
Bilingual dictionary entries as well as allkinds of rules (morphology, syntax, transfer, gener-ation) are expressed as feature structures of specifictypes, so only one description language has to bemastered.
This usually leads to a rapid familiaritywith the system, yielding a high productivity almostfrom the start.i ht tp ://crl.nmsu.
edu/~j aratrup/Meat982Runtime linguistic objects (words, syntactic struc-tures etc.)
are stored in a central data struct.ure.We use an extension of the well-known concept ofa chart (Kay, 1973) to hold all temporary and fi-nal results.
As nmltiple components have to processdifferent origins of data, the chart is equipped withseveral different layers, each of which denotes a spe-cific aspect of processing.
Thus, at every point dur-ing the runtime of the system, the contents of thechart reflect what operations have been performedso far (Amtrup, 1999).
The complete chart is avail-able to the user using a graphical interface.
Thischart browser can be used to exactly trace why aspecific solution was produced, a significant aid indeveloping and debugging rammars.MEAT addresses the necessity of carrying out sev-eral different asks by providing a component-basedarchitecture.
The core of the system consists of theformalism and the chart data representation.
Allprocessing components arc implemented in the formof plug-ins, components that obey a small interfaceto comumnicate with the main application.
Thechoice of which components to apply to an actualinput, the order in which the components are pro-cessed, and individual parameters for componentscan be specified by the user, allowing for a highlyflexible way of configuring a machine translation (orword-lookup, of glossing etc.)
system (el.
Amtrupet al (2000) for a more detailed description of thearchitecture).The MEAT system is completely implemented inG++,  resulting in a relatively tast mode of op--eration.
The implenrentation of the TFS formal-ism supports between 3000 and 4500 unificationsper second, depending on the application it is usedin.
Translating an average length sentence (20-25words) takes about 3.5 seconds on a Pentium PII400(in non-optimized ebug mode).
The system sup.-ports Unix (tested on Solaris and Linux) and Win--dows95/98/NT.
We use Unicode to represent charac-ter data, as we face translations of several different,non-European languages with a variety of scripts.3 Development cycleOne of the main requirement facilitating the deploy-ment of a new language with possibly scarce pre-existing resources is the ability to incrementally de-velop knowledge sources and translation capability(the incremental pproach to MT development is de-scribed in (Zajac, 1999)).
In the case of translationsy,~tems at our laboratory, we mostly translate intoEnglish.
Thus, a complete s t of English resources ialready available (dictionary, generation grammarsand morphological generation) and does not need tobe developed.The first step in bootstrapping a running systemis to build a bilingual dictionary.
The work on thedictionary usually continues throughout he devel.-opment process of higher level knowledge sources.We use dictionaries where entries are encoded as flatfeature-value pairs, as shown in Figure 1.$Headword OJ lyb hftglnh$Category Noun$Number Plural$Regular False$English Seven Wonder<nc plur>;$$Figure h A Persian--English dictionary entry.While this is already enough information to faciLirate a basic word-.for-word translation, in generala morphological analyzer for the source language isneeded to translate real-world text.
For MEAT, onecan either import the results of an existing morpho-logical analyzer, or use the native description lan-guage, based on a finite-state transducer using char-acters as left projections and typed feature struc-tures as right projections (Zajac, 1998).
After com-pleting the morphological nalysis of the source lan-guage and specifying the mapping of lexical featuresto English, glossing is available.
The Glosser is anMEAT application consisting of morphological nal-ysis of source language words, tbllowed by dictionarylookup for single words and compounds, and thetranslation into English inflected word forms.
Anexample of the interface \[br the glosser is shown in.l?igure 2.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.File Edit View G0 C0mlaun\[c~2ot Helo- :  - "7 -  .
.
.
.~' ,~3~ t~l ?ndont ts ia ;J and;~3/z~}J_~ cont ract  j~ @rant; ~st i t~o;  p~.ttir~/;&~- to; atl in; on; for;)~  )~ East TJ2~O=;b .
;L~I  mi~j~at~r~; approval.
; slanatu~;u~ wine;~I~E dig; pull ofl; do;~ J / i  IndonQ=ia;J an~3J~i today; t odag;&~a;(&~3; (Ve?\ ]  .
.
.
.
.
.
.
.
.diq; pu l l  o f f ;Pre~ent ;  Th/x~;  P lura l _~c~ive; S~o3~ctive1~ unstgned Javn ~pFl~t Whqd~v'c-A i .
.
.
.
iAp~a taeat~p~ ;~ r,~,~ '.~ " -  -5 "J ~ -2 -Figure :2: The Glosser interfaceThe next step in developing a nmdium-.quality,broad coverage translation system is to develop983.-,C _2227.7_Z:22_C-_~TfT2L27AL--Z:ZZT~:7:hfZ.._~\[_ 2 -,~Nv,~-:c~_ j~ ~-::27 _~ ~ T--_ZiLT.\[  Z.::__22 2 7J:.7-.-_L_2_..2Y Y_~:2-__-?
.
I .
:  .4_IQ~II% ;Vtn'IlcesI -dgeS161ZSta~.
Imai0 ......N~k i~-~: : -2 -L77  ............ 7"-"---,A,/"-->..# /_--J - - .  "
-" , , '> -~ / j~<-~2 '"-.
/ ,",  .
->%/" .
/ .
.C , -< .~Z- - ,  ~ .
.
/ , ~ .
.
.
.
, .
, .
_ .
, .~ .~\ // ' .
I /  ,'::;G ~ > "';-5-"..'~,~ ....~1/5 I/' /.'-'/2?"
~51"-'2-.~,-I-~.:--.<<.""
II I "  t /  ':" - "  1/.-~2,./-~ / .
/~ .
.
, .
7\ 1' ,/ //.$.-'L>:'7..~;v, .... IK,*; '  .
'%-,~ -\ f/ ~?,~" ~,h'~ 2 ...... ~,?7:-.. \by lqYy  Iz sh  mD l)y'~~.~'~c'_.
-~ .~_~ .
.
.
.
:--.
"-.. ;.q<*j -.. "-, %,.
~.*.......
~" 7-Yb?
:--'" ...... :-v~<~, ....
"-3,.
',q../"_ _~,~7<---7..2;.=~ .
.
.
.
.
.
.
.
.
~ ~- .
.~ .
~_ .
, zv%,>,y .
x 'q .
, , \  .
.
.
.
.
-~- -~ \ ,x~* .~ J~"  --.. ,, .
.
.
.
.
.
---.-?..
v:>:< "-~--'>.
";~.y" _I f z ly "s  ^s l Iydy  y l f th  Is /  vI83 gg g9 ?3  ?7 6'~ fib g6 100 l i l t  I'"Cam lamt: Sentence \[ .
.
.
.
.
i-.
.
.
.
.
.
.
.
.
.
.
l : \ [aer .
l~ .~M~lra~ ounaTZeel \[Ad\]ecti'3e" \[ I \[ \[Pre m~l ta0nA.
\ ]~ ' \ ]N '  \] ICPoIIIP \[ \[ \[ \[ \[~lu~er a l \]l'!u~' I Nu:'~ \] $"" : "Verh lUP lS  ", \[NounlN' INPo \[ \[ \[Noun\]If' I NP0l,'ct; ~ IPP IX IXP \[ \[ \[ \[M l' i~ :lmr.l:~le ..~e rdetg: e he~d VerbPhraae Ia~er .
rml~.~nm,~ head f:nt~y( ~ "'form g,,~m I4:per.R111e.
Se.te|i?~ ;~orph Ve ;.bllo i:pholo~-i \[,~ ,~ ,  \[blle.
,~e,~ |~Ice lex Ve rha\]J, ox~call\[i:laa i*.
FRIIIt.
~.
!~, telll?~ ~ poa 9eeb.7:ger .Ru le .~e.
te i *ce i  p~, : : )entS  te~.
"y lh%regul.a," T~uel .I I :p~ r.  l'Illl~l.
~n  ll~llrA~ infl Ve~bal.lnf kect\].on\[,~: NF.
~t1111.
~\[~n ~t II g ~ voice Undeflned,t lhper.Rtl leo~len~m;e clztzc : C?.Jtic\[function : Nulll,11:~.Rtde.8~It~I1C8 tense ' Part ic lp1~LIZ:per.RtdmS6~ten~s I causat lw  False, I1:J - -e l '  ~UlI~ ~lall|/eligli~ i , person  Unde~:tned.
, \[.
4' ? '
~ood Un(~f~.ned.
{14 : l l l~?
.Rt~e 'Se"~t tce  \[ nu~erAg~eement  Undefined,nege, t lon  Fa lse \ ]  l ,, og~ Or rhography !key : "ylftn", *!~ \[:--~ Li .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~ ................... .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
:.
::: : : : : _ : : .
:: .
:: : -= ._ :  ....... : .
.
.
.
- :  =-  :_-.
::_ .
:_ :.
: : _  ' : : - : : - _  _: .
_ _ :  :_;: .
:_ ._  _ -_ .
_=>-:_ -  2 : : JFigure 3: Viewing  a eomple :~c  aual&,;isknowledge sources  for the stt?uctural analysis of in-put sentences.
Mt';AT supports the use of modmlar mfific.ation grammars, which facilitate,," develop.merit and debugging.
E;ach grammar module ca,~.
bedeveloped and tested irJ isolation, the final systemapplying each gtammar in a linear fashion (Zajacand Amtrup, 2000).
The main.
component used is abidirectional island-.parser (cf.
Stock et al (1988))for unification-based gra.mmars.
The grammar ulesare usually writtet~ in the style of context-free ruleswith  \ [~ssoc ia ted  unification constraints as shown i~Figure 4.
The rules allow for the specification ofthe right-hand side as a regular-.expression of featurestructures.
We plan to add more restricted types ofgrammars (e.g.
based on finite-.state transducers) togive the linguist a richer choice of syntactic processesto choose from.For the time being, the transfer capabilities of thesystem are restricted to lexical transDr, as we havenot finished the implementation f a complex trans-fer module.
Thus, the grammar developer eitherneeds to create structural descriptions that matchthe English generation, or the English generationgrammar has to be modified for each language.At each point during the development of a trans-.Adj  ~ ::: ' i ;u :c , thdLc ;  \[J im : i;u~:', g djBa~: \[\ [ \ [c :x :}.
!eAd : #Ld\ ] jg}pe{.
: :  : '~adv\ ]  ,#adv: : tl**.
&dvg~Et;ry "Y"#ad.
j ' : : :  i:.u:~.
', gd jEnt : !
:y:>\ ] ;Figm'e 4: A Turldsh syntax rulelation syste.m, we consider it essential to be ahlenot ouly to see the resuRs, but also to monitorthe processing history of a result.
Thus, th.e chartthat leads 1;o the construction of all English o l t tp t l tcan be viewed in order to examine all intermediateconstructions.
In the MEAT system, each modulerecords various steps of computations in the chartwhich can be inspected statically after processing.
Aunified data interface for all modules in the systeinallows both the inspection of recorded internal datastructures for each module (when it makes sen:-;e,984such aq ill a ch.art parser), aml tile im;pecticm of tit(.
'input/ou?put of all module,';.
The graphical i~terfa.ceused to view complex a.t~alyscs i.r; shown in Figure 3.d A.pp\] J .ca{; ionsIn this section, we give an overview of the capal)i!i.ti(~'; of MEA71' using ~wo (-l!ri{~.nt examples from workaf, our laboratory.
In the Shiraz pro jec t  ?
(Amtrupei; al., 2000), we developed a machine translatio~sys tem from Farsi tO English, for which no previousknowledge sources were awdlable.
We mainly targetnews material and the transl~tion of web pages.
TileTm'kish~English ystem has been developed with theExpedition project a, an enterprise for the rapid de-velopment of MT systems for low-density languages.Botl /systems use a common user interface for ac~cess to MEAT, which is shown in Figure 5.
TheMT systems are targeted t() the translation of newsy.paper text and other sources available online (e.g.web pages).
The emphasis is therefore put ou exten+sive coverage rather than very-+high quality transta+tion+ Currently, we reach for bol;h systmns a levelof quality that allows to assess in detail tile contentof source texts, at the expense of some rmfelicitousEnglish.r~ t a ~.
.
.
.
.
.
.
.
.
.
.
.
.
D vc~lv~ {ll;t,~c s:/Im~oa~tj am~ In Iplr,eanhltm-!
C fl t g '~A.
t..R ~d~q~ ~f~l  ,+01.
bl t. .
.
.
.
.
.
.
.
.
.
.
.
.
.
i?i ~ZL2Z -2-~?2-?.27 ~-+ ~2Z7-~ -_._ _L_,7.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
T~ak~tmac~,~ :\[iT~;i-;;,a;;~Eh Tg~GiTg~'TggU~..,.-gJ~ g ;gTJE.TKg7 \[yT7:2~: 7 7 ~ 7 ~ 7  : I}IC~W: CriaX~ =true\]( ocon0~,Dm ( rL~Rhlh ) I I' '  ~ " ~t" j C .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
\[ :~-~ ............................. s~,2~, ,~  .
.
.
.
.~ht~l~llt~a }lONer gx~cut in  9 llodu\[~ cll~rgS~v~r +~.
.
.
.
.
.
.
.
~5:___.
::~ .
.
.
.
.
.
: \ [chartsauer  Size-ag, re~xde~t-S~, toCah,.O, C~U.,0 010a ' ?ht~l -~ IRt |~  Execut in~ Nodule su ' fce  I\[c+ Sueface0ener~nor  S tar t inq  t~ 1 +OZ L~t st~tl-O3,lxt ": : S~tcfGcn:Ur f~ e0onor~orsiz~+0E ~=~tdeltt=~K'znL~h~d" to~cl-0,  ~pII-00{\]0s .
Jhl~*1-0/'bct I r }Tot~\]."
g~ze=S2R, re~id~nt-48g, toeal~99800 C~J=2 3~0s (croat ~/\ ] Iu , - .+ ;  =~ , i ~ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Figure 5: The MEAT user interface4,1 Persian..+Englisb MTThe input for the Persian-English system is usu-ally taken from web pages (on-line news articles),although plain text can be handled as well.
The imternal encoding is Unicode, and various codeset con-w.'rters are available; we also developed an ASCII-based transliteration to facilitate the easy acquisi~tion of dictionaries and grammars (see Figure 1).The dictionary consists of approximately 50,000 en+tries, single words as well as multi-word compounds.Additionally, we utilize a multi-lingual onomasticonmaintained locally to identify proper names.2http  : / / c r l .
ransu, edu/sh i raz3ht tp  : / / c r l .
nmsu.
edu/exped i t  ionwe developed a, morphological grammar for Per-siai~ using a unifies.lion-based formalism (Zajac,1998).
A sample rule is showtt in Figure 6 (of.Megerdoomian (2000) for a more thorough descrip~ion of the Persian morphological analyzer).PresentStem = <Regu l  a rPx 'e  sent  S t  em< < <" In"  "y"?>per .
Verba l \ [ in f \ ] .
.
causat ive :  Trne\]> I< per .Verba .
\ ]o \ [ in f l .
causat ive :  Fa lse\ ]>>>;Figu.re 6: A Persian morphological ruleThe knowledge sources for syntax were (manually)developed using a corpus of 3,000 tagged and brack-eted setrt, ences extracted h:om a 10MB corpus of Per.
?sian news articles.
We use three grammars, respon.-sible lor the attaetunent of auxiliaries to main verbs,the recognition and processing of light verb phenom-.ena, and phrasal and sentential syntax, respectively.The combined size is about 110 rules.
The develop.ment of the Persian resources took several months,primarily due to the fact that the translation systemwas developed in parallel to the linguistic knowl..edge.
The Persian resources were developed by ateam of one computational linguist (morphologicaland syntactic grammars, overall supervision ibr lan--guage resources), and 3 lexicographers (dictionaryand corpus annotation).4?2 'lti~urkish+-English MTWithii~ yet another project (Expedition), we devel-oped a machine translation system, for Turkish.
Thisapplication functioned as a benchnrark on how mucheffort the building of a medium-quality system re--quires, given that an appropriate framework is al-.ready available.For Turkish, we use a pre-existing morphologi-cal analyzer (Oflazer, 1994).
Turkish shows a richderivational and inflectional morphology, which ac-counts for most of the system development workthat was necessary to build a wrapper for inte-grating the Turkish morphological analyzer in thesystem (approximatly 60 person-hours) 4.
The de-velopment of the Turkish syntactic grammars tookaround 100 person-hours, resulting in 85 unification-based phrase structure rules describing the basics ofTurkish syntax.
The development of the bilingualTurkish-English dictionary had been going on for4The main problem dur ing the adaptat ion was the treat-ment  of derivational information, where the morphologicallyanalyzed input does not conform exactly to the contents ofthe dictionary985some time prior to the application of MEAT, andcurrently contains approximately 43,000 headwords.5 Conc lus ionThe development of automatic machine translationsystems for several languages is a complicated task,even more so if it has to be done in a short amountof time.
We have shown how the availability of amachine translation environment based on contem-porary computational linguistic theories and usinga sound system design aids a linguist in buildinga complete system, starting out with relatively siln-ple tasks as word-for-word translation and increlnen-tally increasing the complexity and capabilities ofthe system.
Using the current library of modules, itis possible to achieve a level of quality on par withthe best transfer-based MT systems.
Some of thestrong points of the system are: (1) The system canbe used by a linguist with reasonable knowledge ofcomputational linguistics and does not require spe-cific programming skills.
(2) It can be easily con-figured for building a variety of applications, includ-ing a complete MT system, by reusing a library ofgeneric modular components.
(3) It supports an in-crelnental develol)ment methodology which allows todevelop a system in a step-wise fashion and enablesto deliver rumfing systems early in the developmentcycle.
(4) Based on the experiences in building theMT systems mentioned in the paper, we estimatethat a team of one linguist and three lexicographerscan build a basic transfer-based MT system withmedium-size coverage (dictionary of 50,000 head-words, all most fi'equent syntactic onstructions inthe language) in less than a year.One major improve,nent of the system would bea nmre integrated test and debug cycle linked to acorpus and to a database of test items.
Although ex-isting testing methodologies and tools could be used(l)auphin E., 1996; Judith Klein and Wegst, 1998),building test sets is a rather time-consulning taskand some new approach to testing supporting rapiddevelopment of MT systems with an emphasis onwide coverage would be needed.ReferencesJan W. Amtrup, Hmnid Mansouri Rad, KarineMegerdoomian, and Rdmi Zajac.
2000.
Persian-English Machine Translation: An Overview ofthe Shiraz Project.
Memoranda in Computer andCognitive Science MCCS-00-319, Colnputing Re-search Laboratory, New Mexico State University,Las Cruces, NM, April.Jan W. Amtrup.
1999.
Incrcmcntal Speech TraTtsla-tion.
Nmnber 1735 in Lecture Notes in ArtificialIntelligence.
Springer Verlag, Berlin, Heidelberg,New York.Bob Carpenter and Yan Qu.
1995.
An AbstractMachine for Attribute-Value Logics.
In Proceed-ings of the ~th International Workshop on Pars-ing Technologies (II/VPT95), pages 59-70, Prague.Charles University.Bob Carpenter.
1992.
The Logic of 2~ped FeatureStructures.
Tracts in Theoretical Computer Sci-ence.
Cambridge University Press, Cambridge.Lux V. Dauphin E. 1996.
Corpus-Based annotatedTest Set for Machine Translation Evaluation byan Industrial User.
In Proceedings of the 16thInternational Conference on Computational Lin-guistics, COLING-96, pages 1061-1065, Centerfor Sprogteknologi, Copenhagell, Demnark, Au-gust 5-9.Klaus Netter Judith Klein, Sabine Lehmann andTillman Wegst.
1998.
DIET in the context of MTevaluation.
In Proceedings of KONVENS-98.Martin Kay.
1973.
The MIND System.
In.R.
Rustin, editor, Natural Language Processing,pages 155-188.
Algorithmic Press, New York.Karine Megerdoomian.
2000.
Unification-BasedPersian Morphology.
In Proceedings of the CI-Cling 2000, Mexico City, Mexico, February.Kemal Oflazer.
1994.
Two-level Description ofTnrkish MorI)hology.
Literary and LinguisticComputing, 9(2).Oliviero Stock, Rino Falcone, and Patrizia Insin-namo.
1988.
Island Parsing and BidirectionalCharts.
In Proc.
of the 12 t1~ COLING, pages 636-641, Budapest, Hungary, August.Shuly Wintner and Nissim Francez.
1995.
Pars-ing with Typed Feature Structures.
In Proceed-ings of the ~th International Workshop on ParsingTechnologies (\]WPT95), pages 273 287, Prague,September.
Charles University.Rdmi Zajac and Jan W. Amtrup.
2000.
ModularUnification-Based Parsers.
In Proc.
Sizth lr~,tcrna-tional Workshop on Parsing Technologies, trento,Italy, February.Rdmi Zajac.
1992.
Inheritance and Constraint-Based Grammar FormMislns.
Computational Lin-guistics, 18(2):159-182.R&mi Zajac.
1998.
Feature Structures, Unificationand Finite-State Transducers.
In FSMNLP'98,Intcrnational Workshop on Finite State Methodsin Natural Language Processing, Ankara, ~lhlrkey,June.Remi Zajac.
1999.
A Multilevel Frmnework for In-cremental Development of MT Systems.
In Ma-chine Translation Summit VII, pages 131-157,University of Singapore, September 1.3-17.986
