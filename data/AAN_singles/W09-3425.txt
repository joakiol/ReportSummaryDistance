Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 171?178,Suntec, Singapore, 6-7 August 2009. c?2009 ACL and AFNLPUsing Search Engine to Construct a Scalable Corpus forVietnamese Lexical Development for Word SegmentationDoan NguyenHewlett-Packard Companydoan.nguyen@hp.comAbstractAs the web content becomes more accessibleto the Vietnamese community across theglobe, there is a need to process Vietnamesequery texts properly to find relevant informa-tion.
The recent deployment of a Vietnamesetranslation tool on a well-known search en-gine justifies its importance in gaining popu-larity with the World Wide Web.
There arestill problems in the translation and retrievalof Vietnamese language as its word recogni-tion is not fully addressed.
In this paper weintroduce a semi-supervised approach inbuilding a general scalable web corpus forVietnamese using search engine to facilitatethe word segmentation process.
Moreover,we also propose a segmentation algorithmwhich recognizes effectively Out-Of-Vocabulary (OOV) words.
The result indi-cates that our solution is scalable and can beapplied for real time translation program andother linguistic applications.
This work ishere is a continuation of the work of NguyenD.
(2008).1 IntroductionThe Vietnamese language as a minority languageis gaining popularity including content and au-dience.
It is important to emphasize a need fornatural language such as search engines or trans-lation tools to process the data correctly.
Withthis emphasis, we need to have a way to improveand automate the training process as well as ex-panding its training data.
Previous works in con-structing segmentation systems for the Vietnam-ese language relied on single source of informa-tion such as newspapers or electronic dictionaries(Le H. Phuong et al 2008, Dinh Dien and VuThuy, 2006, Le T. Ha et al, 2005).
Mono-sourcecorpora would work best within their domain,and might not work well externally per O?Neil(2007).
Le A. Ha, (2003) described the dictio-nary based approach as problematic due to thelack of consistency and completeness.
Thisspeaks to the need of standardizations betweendictionaries, concrete grammar theories, and be-ing up-to-date with the arrival of new words.
Inthe work of Nguyen C. T. et al (2007), corpustraining was done manually by linguists.
Thiswas very time-consuming and costly.
Becausethe task is performed only once, a corpus will gostale and will get out-of-date.
Dinh et al (2008),in a comparison with major Vietnamese segmen-tation approaches, concluded that the handling ofunknown compound words is a much greatersource of segmenting errors and underscored thatfuture effort should be geared at prioritizing to-wards the automatic detection of new com-pounds.In this paper, we first present the main issueswith the Vietnamese word segmentation prob-lem.
We describe the two approaches in obtain-ing raw text from the Web.
Then, we present ourapproach in building a large web corpus for aword segmentation function and compare ourresult against a sophisticated algorithm built on ahuman trained corpus.
Finally, we provide ourconclusion and offer suggestions for future re-search directions.2 Vietnamese Word SegmentationProblemsVietnamese (Ti?ng Vi?t) is the official languageof Vietnam.
The current writing system origi-nates from the Latin alphabet, with diacritics fortones and certain letters.
Vietnamese is oftenmistakenly judged as a ?monosyllabic?
language.However, the majority of the words are disyllab-ic (Le A. Ha, 2003) covering reduplication andadjectives.
Its grammar depends on word order-ing and sentence structure rather than morpholo-gy.
Even though there is a space separating171sound units, there is nothing used to identifyword boundary.Examples in Figure 1. are used to illustrate thedifficulty of Vietnamese word segmentationwhen compared it to English.
There are 256possible sequences (2n-1) of segmentation in thisexample.Figure 1.
Ambiguity of word segmentationThe major segmentation problems with theVietnamese word segmentation include: the han-dling of word ambiguities, detection of unknownwords, and recognition of named entities.2.1 Addressing Words AmbiguitiesIn a sequence of Vietnamese syllables, S, com-posing of two syllables A and B occurring nextto one another, if S, A, and B are each words,then there is a conjunctive ambiguity in S.  Incontrast, in a sequence of Vietnamese syllables,S, composing of three syllables A, B, and C ap-pearing contiguously, if A B and B C are eachwords, then there is a disjunctive ambiguity in S.In order to attain a higher precision rating, wordambiguity must be addressed.2.2 Detection of Unknown WordsIn a dictionary word segmentation based ap-proach, only the words that are in the dictionarycan be identified.
The unknown words mightbelong to one of the following categories: (1)Morphologically Derived Word (MDW).
Thereare some lexical elements that never stand alone,which express negation such as: ?b?t?
in ?b?tquy t?c?
(irregular) or transformation such as?ho??
in ?c?ng nghi?p ho??
(industrialize).
(2)Interchanging usage of vowels i and y andchanging in position of tone.
For example: ?du?cs??
and ?du?c s??.
Both mean ?pharmacist?.
(3)Phonetically transcribed words.
This can be seenin naturalized words like: ?ph?
mai?
(fromage),?h?p h?p?
(hip hop music), or ?iPh?ne?
(AppleiPhone).2.3 Recognition of Named EntitiesUnlike other Asian languages, Vietnamese per-sonal, location, and organizational names allhave the initial letter capitalized.
For example:?Nguy?n Du?
(a famous Vietnamese poet).
Dueto the language syntax standardization, a propername could be written in many different forms.The following organizational name has three ac-ceptable forms: B?
N?ng Nghi?p, B?
N?ngnghi?p, or B?
n?ng nghi?p (Department of Agri-culture).
We use the following shape features(pattern) to assist with the recognition process:Word Shape  ExamplesCapitalized S?i G?n (Location )All Caps WTO (World TradeOrganization)Containing digit H5N1 (Bird flu)Containing hyphen Vn-Index (Securitiesmarket of Vi?t Nam)Mixed case VnExpress (VietnamNews Daily)Table 1.
Word Shape features for identifyingVietnamese Name Entities3 Using World Wide Web as a Resourceto Build CorporaThere are two approaches to obtain linguisticsdata from the Web.
The first approach is tocrawl the web (Baroni et al, 2006 and O?Neil,2007).
This option gives flexibility in choosingor restricting sites to crawl upon.
To have goodcoverage, it requires extensive hardware resourceto support storage of content documented in thework of Baroni et al (2006).
Other complexitiesinclude a filtering capability to recognize contentof a target language from crawling data, remov-ing html code, and handling page duplication.The work of Le V. B (2003) indicated that it isvery difficult to crawl on Web pages located inVietnam due to a low network communicationbandwidth.A second approach is to use search engines viaa web service API to find linguistic data.
In thework of Ghani et al (2001), a term selection me-thod is used to select words from documents touse for a query.
Documents from a search resultlist are downloaded locally to process and buildcorpus data.
The technical challenges of thisapproach are: (1) Corpus being biased and beingdictated by a ranking of a search engine.
(2) Li-172mited number of search queries is allowed by asearch engine per day.4 Our Approach to build corpusWe are structuring our system with two maincomponents.
The first component works as aword training and recognition system.
Thesecond component utilizes the training informa-tion provided from the first component to per-form just a word segmentation task by leveragingthe computed lexical statistics.
This is a cleardistinction between our work and Nguyen D.(2008).
Because there is a limited number ofsearch request imposed by commercial searchengines each day, this approach is not practicalfor a condition where there is constant usage ofsearch requests, for word segmentation purpose.Aside from this limitation, lexical statistics haveto be recomputed for each new word segmenta-tion request.Figure 2. depicts the overall system consists oftwo components: The training Processing in-cludes a new word discovery function and Nor-mal Segmentation process.
The training processwould execute continuously and feed the lexicalstatistics to the second process for segmentationtask purely.Figure 2.
Vietnamese Words Corpus Construc-tion Process4.1 Word Training and Recognition SystemThis component trains identified words inside aVietnamese Word Database with its frequency ofoccurrences.
Newly encountered OOV words arerecognized by the system then verified by acheck against the Vietnamese Wikipedia pro-grammatically.
We do not wish to include allwords from the Vietnamese Wikipedia as thereare many foreign words.
For examples:  St. He-lens, Oregon.
The remained frequently foundOOV words are evaluated by linguists for validi-ty and will be included into the word database asconfirmed.
Unlike the work of Ghani (2001), inour work, a query to submit to an engine is a sen-tence derived from an unknown document title.The reason here is to enable the system to dis-cover the unknown words and their frequenciesnaturally.
This system performs:?
Seed the queries database with an initial setof queries, Qn.?
Randomly select a query from Qn and send toa search engine.?
From a search result list, process on docu-ment titles and snippet texts directly.?
Perform Vietnamese word segmentation onrecognized sentences using question mark,exclamation mark, periods as separators.Update the word database with recognizedsegmented words and their computed fre-quencies and weights.?
Recognize and validate OOV words, usingthe Vietnamese Wikipedia or through mor-phological rules programmatically.?
Bootstrap Qn with retrieved document titles.?
Return to step 2 above.5 Word Segmentation SystemIn the Vietnamese language, as the white spacecannot be used to denote word boundary, thefunction of a word segmentation system is tosegment a sentence into a sequence of segmentedwords such that a context (or meaning) of a sen-tence is preserved.5.1 Data Gathering and Words ExtractionIn the first step, a search query is submitted to asearch engine API and requests for N returneddocuments.
The engine returns a search resultlist, which consists of document titles and theirsummary text.
We parse the data and extract therequired text.
Syllables in the search query arethen matched against the parsed text to extractpotential words covering both monosyllabic andpolysyllabic words.
This function keeps trackand counts their occurrences.
At this stage, wealso determine if a word is a proper name.
Weuse the various word shape features in capitaliza-tion forms to assist with the recognition process.We compute the likelihood of extracted words tobe proper names by taking the account of thenumber of identified capitalized words over the173total of the same words in appearing the docu-ments set, N documents.
Once the extractionprocess is complete, we perform additional vali-dation steps to discard incorrect generated words.To be accepted as a potential word, a word mustsatisfy one of the following rules: (1) It appearsin the word database.
(2) It is recognized as aproper name word.
(3) It is a MDR word.
(4) Itis an OOV word with strong world collocation asdefined below.An OOV word is identified when there is astrong collocation (cohesion) attached betweenits syllables.
That is the following condition(s)is/are met: (1) For two syllable words to collo-cate: P(s?
s?)
> P(s?)P(s?
), (2) For three syllablewords to collocate: P(s?
s?
s?)
> MAX{P(s?)P(s?)P(s?
), P(s?)P(s?s?
), P(s?s?)P(s?)
} wherew = s?
s?
s?, P(s?
?sn) = Freq(s?
?sn)/N, and N isthe number of documents returning from a searchengine.Collocation concept has been utilized in themerging syllables to determine the best possiblesegment in the work of Wirote (2002).Suffix TranslationResult Lexi-cal Category Morphological Rules  Examplesh?c "'-logy, -ics" Noun  IF Syllable_Suffix("h?c") AND Pre-fix_With_Word((Noun(W))  THENWORD(W+ " "+ "h?c")ng?n ng?
(lan-guage) + h?c ?ng?n ng?
h?c(linguistics)h?a "-ize, -ify" Verb IF Syllable_Suffix("h?a") AND (Pre-fix_With_Word((NOUN(W) )  ORPrefix_With_Word((ADJECTIVE(W))  ) THEN WORD(W+ " " +"h?a")c?ng nghi?p (in-dustry) + h?a ?c?ng nghi?p h?a(industrialize)Prefix TranslationResult Lexi-cal Category Morphological Rules  Exampless?
"Action-" Noun IF Syllable_Prexix("s?")
AND (Suf-fix_With_Word((Verb(W)) OR Suf-fix_With_Word((Adjective(W)))THEN WORD(s?+ " "+ W)s?
+ th?o lu?n(discuss, debate)?
s?
th?o lu?n(discussion)b?t "Un-" Noun IF Syllable_Prexix("b?t") AND (Suf-fix_With_Word((Verb(W)) OR Suf-fix_With_Word((Adjective(W)))THEN WORD(b?t+ " "+ W)b?t + h?p ph?p(legal, lawful)?b?t h?p ph?p(Not legal)Table 2.
Examples of derivational morphology and morphological rulesto construct compound wordsTo recognize for morphological derived words(MDW), we have identified a range of prefixesand suffixes (Goddard, 2005).
When a mor-pheme modifies another morpheme, it produc-es a subordinate compound word (Ngo, 2001).For example: nh?
(as a prefix) + b?o (newspa-per) ?
nh?
b?o (journalist).
The table 2. pro-vides a few examples of Vietnamese suffixes,prefixes, and Morphological Rules to derivesubordinate compound words.5.2 Sentences ConstructionGiven a set of potential segmented words ob-tained from step 5.1, applied only for trainingprocess or for a normal segmentation process(Figure 2.
), the task of sentences constructor is toassemble the identified words in such a way thatthey appear in the same order as the originalquery.
We use Greedy algorithm to constructsentences using the following heuristic strate-gies: (1) Selection of polysyllabic words overmonosyllabic words whenever possible.
(2) Eli-minating segments which have already ex-amined.
(3) Declaring a solution when a con-structed sentence has all of segmented wordsappearing in the same order as in the originalquery text.5.3 Sentences Refinement and Reductionthrough Ambiguity ResolutionSince there is only a single solution to present toa user, we need to have an algorithm to improveupon proposed sentences and reduce them to amanageable size.
The algorithm Sen-tences_Refine_Reduce below describes the174steps in refining the sentences to a finer solu-tion(s).Definition: Let the pipe symbol, |, be designatedas a boundary of a segment.
Two segments, intwo sentences, are overlapped if their first andlast syllables are: (1) located next to a segmentedboundary.
(2) Identical and positioned at thesame location.
For example, in the followingtwo sentences:Sentence #1: t?c ??
| truy?n | th?ng tin | s?
| t?ng |caoSentence #2: t?c ??
| truy?n th?ng | tin | s?
| t?ng |caoThe overlapped segments are: ?t?c ??
?, ?s?
?,?t?ng?, and ?cao?.
We are now describing analgorithm to perform sentences refinement andreduction as follows:Algorithm : Sentences_Refine_Reduce()Input: SBuffer - for input sentencesOutput: SBuffer - for output sentences1:2:3:4:5:6:7:Until Converged(SBuffer) Do:Itr_Sentences_Buf = {}For si in SBuffer Do:Find sj such that Max {|Overlapped_Segment(si,sj)|} for sj ?
SBuffer  and si != sjRes_Segments=Overlapped_Segments(si,sj)U Conjunctive_Segments_Resolutions(si,sj)U Disjunctive_Segments_Resolutions(si,sj)Itr_Sentences_Buf = Itr_Sentences_Buf USentence(Res_Segments)SBuffer=(SBuffer!=Itr_Sentences_Buf)?
Itr_Sentences_Buf : SBufferFor conjunctive ambiguity resolution, to de-termine if all syllables should be classified as asingle word or appeared as individual words, weutilize word collocation strength.
We define col-locating strength as follows.)2()...
()...ss( 1n1 NssFreq P n?We compare it against a probability of findingthe syllables occur independently in N docu-ments as shown in equation (3).
The outcomedetermines if the syllables should be collocatedor separately appeared:)3()(...)()(s)...s( 1n1 NsFreqNsFreq PP n??
?For disjunctive ambiguity resolution, becausea determination involves multiple words withoverlapping text, we determine the best possiblesegments by computing their probability distri-bution of word segments to find out which onehas the highest probability of success.
This isdiscussed further in the section ?Sentences Scor-ing and Ordering?
below.
Figure 3 illustrates aprocess where sentences are refined through dis-ambiguating words.Figure 3.
An Example of Sentences RefinementAfter the 1st iteration, the sentences 1 and 2 arecombined through a resolution of conjunctiveambiguity between ?t?c ???
vs. ?t?c |???
.
After the 2nd iteration, sentences 1 and 2are combined through a resolution of disjunctiveambiguity between ?truy?n | th?ng tin?
vs.?truy?n th?ng | tin?.
The process exits when aconverged condition is reached.
The final seg-mented sentence is translated in English as ?Thespeed of information transmission will increase?.5.4 Sentences Scoring and OrderingThe task in this phase is to score and order thecandidates.
A language model is usually formu-lated as a probability distribution p(s) overstrings s that attempts to reflect how frequently astring s occurs as a sentence in a corpus, Chen etal.
(1998).
For a segmented sentence S=nwww ...21 , where w is an identified segmentedword, using a bigram model, we compute theprobability distribution of a sentence s as fol-lows:)4()| ()...| (  p(s)1 11 11 ??
?
??
?
?
?ni iini iiwwPwwwPHowever, there is an event such that)| ( 1?ii wwP  = 0.
To handle this condition, weapplied Additive Smoothing to estimate its prob-ability.
The formula was experimented andslightly modified to fit our needs and defined asfollows:)5()()()|(111_ ?
???
??
?iw iiiiiiThetaAdd wwFreqWwFreqwwP ?
?We define ?
parameter as Freq( iw )/|W|where |W| is an estimate number of the totalwords appears in N returned documents and 0 <?
< 1.1756 Experimental ResultsWith no restriction, there were 167,735 searchesperformed using the Yahoo!
Boss Web ServiceAPI.
We bootstrapped the initial core lexiconsfrom Ho?s Word List (2004) and built up togather lexical statistics and discovered new OOVwords.
The corpus syllables classifications andtheir occurrences are shown in Figure 4.Figure 4.
Syllables Types by FrequencyWe compared our collected lexical data, usingour approach, against VietLex (Dinh et al, 2008)and found a resembling to one, three, four, andfive syllables.
For the two syllables, there is a bigdifference: roughly about 19,000 words.
Thiscontributes to the fact that the original Ho?s wordlist had already covered 49,583 two-syllablewords to begin with.
On top of it, we have in-cluded 3,000 additional new OOV words includ-ing MDW and proper names words.
Accordingto the Wiki?s - Vietnamese_morphology, it esti-mates about 80% of the lexicon being disyllabic.In our corpus, we have 72% of disyllabic words.Table 3.
The top 20th one-syllable words compar-ing with corpus of Le A. H1 (2003)1 The star marker indicates the same word is co-occurred inLe?s of top unigram listing.Table 3 provides a top 20 one-syllable wordsobtained from our word database.
The star mark-er indicates the same word is also co-occurred inLe?s of top unigram listing.The following disyllabic words, in Table 4,are a few of the new OOV words identified byour approach and absent from Ho?s Word List(2004) .CommonDisyllabicWordsFre-quencyUncom-monDisyllab-ic WordsFre-quencyVi?t Nam(Viet Nam)206704 lan r?ng(spread)263Ng?
?i Vi?t(Vietnam-ese)41260 ga l?ng(gallon)14Trung Qu?c(China)35345 C?nPh?ng(Island)9Ti?ng Vi?t(Vietnam-ese)28460 ngh?
s?
(congressgress-man)22Hoa K?
(America)21262 c?ng x?n(console)2Table 4.
Some OOV disyllabic wordsWe evaluated our segmentation system againsta popular Vietnamese word segmentation tool -the JVnSegmenter (Nguyen C. T, 2007): A Java-based Vietnamese Word Segmentation Tool(SVM).
This tool was also a part of Dinh et al(2008) evaluation aforementioned.
With a sourcedata provided by a neutral evaluator, and about9600 sentences with an estimate of 100K words,we ran an experiment.
The texts were input intoboth methods.
To keep the fairness of the evalu-ation, the segmented output texts were sent out toa neutral assessor to analyze for results.
The per-formance results are presented in Table 5. below.EvaluationAreasJVnSegmenter Our Ap-proachRecall 0.814 0.821Precision 0.883 0.897F-Measure 0.847 0.857OOV Rate 0.06 0.06OOV Recall 0.921 0.951IV Recall 0.807 0.813Table 5.
Performance Results Comparison176From the data above, the low OOV rate andhigh OOV recall in both systems could be ex-plained by the nature of the testing corpus: Viet-namese novels/stories chosen by a neutral evalu-ator.
With this type of content, the numbers ofOOV words are much lesser when compared toother areas such as news, technology.
Eventhough the results don?t seem much higher thanthose obtained by JVnSegmenter, given the factthat JVnSegmenter used a manual trained corpus,our result is worth encouragements.
Table 6provides a few examples of the segmentationresults.Q1: t?c ??
truy?nth?ng tin s?
t?ng cao(Ambiguity)JVnSegmenter: [t?c ??
][truy?n th?ng tin] [s?
][t?ng] [cao]Our Approach: t?c ??
|truy?n | th?ng tin | s?
|t?ng | caoQ2: h?n m?c t?
l?
m?tnh?
th?
n?i ti?ng(Proper Name)JVnSegmenter: [h?nm?c] [t?]
[l?]
[m?t][nh?
th?]
[n?i ti?ng]Our Approach: h?nm?c t?
| l?
| m?t | nh?th?
| n?i ti?ngQ3:  m?t ng?
?i ?
?n b?l?m ngh?
b?n n??ctr?
ven ??
?ng (Ambi-guity)JVnSegmenter: [m?t][ng?
?i ?
?n b?]
[l?mngh?]
[b?n n?
?c] [tr?
][ven ??
?ng]Our Approach: m?t |ng?
?i ?
?n b?
| l?m ngh?| b?n | n?
?c tr?
| ven??
?ngQ4: th?
t?
?ng trungqu?c ?n gia b?o(Proper name)JVnSegmenter: [th?t?
?ng] [trung] [qu?c][?n] [gia b?o]Our Approach: th?t?
?ng | trung qu?c | ?ngia b?oTable 6.
Sample outputs of the two approaches:Our approach vs. JVnSegmenter7 ConclusionWe presented our approach to segment Viet-namese text and to build a web corpus for thefunction.
We made use of the web documenttitles and their snippet text to build a scalablecorpus for segmenting query text.
The results sofar have shown that this approach has the follow-ing benefits:?
From a practical and performance perspective,this approach does not require extended ma-nual effort in building a corpus.
The learningfrom the training engine, running continuously,discovers new OOV words and feeds them intoa normal word segmentation process where itsupplies solutions to requesters efficiently.?
The approach discovers new OOV words anddisambiguates words.
Additionally, we discov-ered new proper nouns which are not a part ofany dictionaries continuously.
We integratedthe finding knowledge from the VietnameseWikipedia into our OOV words confirmationprocess automatically.
This makes the valida-tion of new words much easier as suppose torely on word adjudicators manually as perO?Neil (2007).
And last, the evaluation resultis a better edge when comparing to a popularVietnamese segmentation tool in all the me-trics considered.
This tool has a corpus trainedmanually.?
Frequently found OOV words identified by ourprocess which are not available in the Viet-namese Wikipedia can be suggested to Wikiauthors?
communities to create content andmake them available for the worldwide au-diences for their benefit.For future works, we would like to look intothe possibility of applying grammatical rules inconjunction with our current statistical based sys-tem to obtain a higher identification rate.
Spel-ling suggestion and cross-lingual search are otherinteresting aspects, as now words can be identi-fied along with their lexical statistics.AcknowledgementOur work is credited from the works of NguyenBon et al (2006), Ho Ngoc Duc (The Free Viet-namese Dictionary Project), Cam T Nguyen et al(JVnSegmenter - 2007), O?Neil (2007), and Ya-hoo!
Boss Web Service, which made the APIavailable limitlessly during the course of thework, and many anonymous contributors andreviewers.
A Special thank to Mr. Thuy Vu whocontributed to an assessment of our approach andthe JVnSegmenter.ReferenceC.
T. Nguyen, T. K. Nguyen, X. H. Phan, L. M.Nguyen, and Q. T. Ha.
2006.
Vietnamese wordsegmentation with CRFs and SVMs: An investiga-tion.
In Proceedings of the 20th Pacific Asia Confe-rence on Language, Information and Computation(PACLIC 2006), Wuhan, CH.Cliff Goddard.
2005.
The Languages of East andSoutheast Asia (pages 70-71)Dinh Dien, Vu Thuy.
2006.
A Maximum EntropyApproach for Vietnamese Word Segmentation.
InProceedings of the 4th IEEE International Confe-177rence on Computer Science- Research, Innovationand Vision of the Future 2006, HCM City, Viet-nam, pp.247?252.Dinh Quan Thang, et al 2008.
Word Segmentation ofVietnamese Texts: a comparison of approaches.LREC : 2008Ghani, R., Jones, R., Mladenic, D. 2001.
Using theWeb to create minority language corpora?.
Pro-ceedings of the 10th International Conference onInformation and Knowledge ManagementHo Ngoc Duc, 2004: Vietnamese word list:  Ho NgocDuc?s word list ?
http://www.informatik.uni-leipzig.de/~duc/software/misc/wordlist.htmlJohn O?Neil.
2007.
Large Corpus Construction forChinese Lexical Development, Government UsersConference: http://www.basistech.com/knowledge-center/unicode/emerson-iuc29.pdfLe Thanh Ha,  Huynh Quyet Thang,  Luong Chi Mai.2005.
A Primary Study on Summarization of Doc-uments in Vietnamese.
The First InternationalCongress of the International Federation for Sys-tems Research, Japan.L.
H. Phuong and H. T. Vinh, 2008, Maximum Entro-py Approach to Sentence Boundary Detection ofVietnamese Texts, IEEE International Conferenceon Research, Innovation and Vision for the FutureRIVF 2008, Vietnam.L.
A. Ha.
2003.
A method for word segmentation inVietnamese.
In Proceedings of the InternationalConference on Corpus Linguistics, Lancaster, UK.Marco Baroni, Motoko Ueyama.
2006.
Building gen-eral and special-purpose corpora by Web Crawling.Proceedings of the 13th NIJL International Sympo-sium, Language Corpora: Their Compilation andApplication.
31-40.Ngo.
N. Binh, B. H. Tran.
2001.
Vietnamese Lan-guage Learning Framework ?
Part One: s Linguis-tic.Nguyen D. 2008.
Query preprocessing: improvingweb search through a Vietnamese word tokeniza-tion approach.
SIGIR 2008: 765-766.Stanley F. Chen, J. Goodman.
1998.
An empiricalstudy of smoothing techniques for language model-ing.
Center Research in Computing Technology,Harvard University, TR-10-98Thanh Bon Nguyen, Thi Minh Huyen Nguyen, Lau-rent Romary, Xuan Luong Vu.
2006.
A lexicon forVietnamese language processing.
Language Re-sources and Evaluation.
Springer NetherlandsV-B.
Le, B. Bigi, L. Besacier, E. Castelli, 2003.
Usingthe Web for fast language model construction inminority languages", Eurospeech'03, Geneva,Switzerland, September 2003Wirote Aroonmanakun.
2002.
Collocation and ThaiWord Segmentation, Proceedings of SNLP-Oriental COCOSDA 2002Vietnamese morphology: From Wikipedia:http://en.wikipedia.org/wiki/Vietnamese_morphologyYahoo!
Boss Web Service APIhttp://developer.yahoo.com/search/boss178
