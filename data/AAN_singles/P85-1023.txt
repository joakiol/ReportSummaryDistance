ANALYSIS OF OONOUNCTIONS IN A ~JLE-~ PAKSERleonardo L~smo and Pietro TorassoDipartimento di Informatica - Universita' di TorinoVia Valperga Caluso 37 - 10125 Torino (ITALY)ABSTRACTThe aim of the present paper is to show how arule-based parser for the Italian language has beenextended to analyze sentences involving conjunc-tions.
The most noticeable fact is the ease with~4nich the required modifications fit in the previ-ous parser structure.
In particular, the ruleswritten for analyzing simple sentences (withoutconjunctions) needed only small changes.
On thecontrary, more substantial changes were made to thee~oeption-handling rules (called "natural changes")that are used to restructure the tree in case offailure of a syntactic hypothesis.
T0~ parserdescribed in the present work constitutes the syn-tactic component of the FIDO system (a FlexibleInterface for Database Operations), an interfaceallowing an end-user to access a relational data-base in natural language (Italian).INTRODUCTIONIt is not our intention to present here acomprehensive overview of the previous work oncoordination, but just to describe a couple ofrecent studies On this topic and to specify themain differences between them and our approach.It must be noticed, however, that both systemsthat will be discussed use a logic grammar as theirbasic framework, so that we will try to make thecomparison picking out the basic principles for themanipulation of conjunctions, and disregarding themore fundamental differences concerning the globalsystem design.
It is also worth pointing out that,although the present section is ac~nittedly incom-plete, most of the systems for the automaticanalysis of I~ural  language do not describe themet~hods adopted for the interpretation of sentencescontaining conjunctions in great detail.
There-fore, it is reasonable to assume that in many ofthese systems the conjunctions are handled only bymeans of specific heuristic mechanisms.A noticeable e~ception is the ~ facilityof the U/R~%R system (Woods, 1973): in this case,The research project described in this paper haspartially been m/pported by the Ministero dellaBabblica Istruzione of Italy, MPI 40% IntelligenzaArtificiale.the conjunctions are handled by m~ans of a para-syntactic mechanis~ that enables the parser toanalyze the second conjunct assuming that it has astructure dependent on the hypothesized first con-junct.
The main drawback of this approach is thatthe top-down bias of the ATNs does not allow thesystem to take advantage of the actual structure ofthe second conjunct to hypothesize its role.
Inother words, the analysis of the second conjunctacts as a confirnution mechanism for the hypothesismade on the sole basis of the position where theconjunction has been found.
Consequently, all thev~rious possibilities (of increasing levels of com-plexity) must be analyzed until a match is found,which involves an apparent ~aste of computationalresources.The solution proposed in the first of thesystems we will be discussing here is quite simi-lar.
It is based on Modifier Structure Grammars(MSG), a logic formalism introduced in (Dahl &McCord, 1983), which constit%Ites an extension ofthe Extraposition Grammar by F. Pereira (1981).TNe conjunctions are analyzed by means of a specialoperator, a "demon", that deals with the two prob-lems that occur in coordination: ~he first conjunctcan be "interrupted" in an incomplete status by theoccurrence of the conjunction (this is not foresee-able at the beginning of the analysis) and thesecond conjunct must be analyzed taking intoaccount the previous interruption point (and inthis case, mainly because the second conjunct mayass~m~ a greater number of forms, some degree oftop-down hypothesization is required).~e  first problem is solved by the "backup"procedure, which forces the satisfaction (or "clo-sure" in our terms) of one or more of the (incom-plete) nodes appearing, in the so-called "parent"stack.
T~e choice of the node to which the secondconjunct must be attached makes the systemhypothesize (as in SYSCONJ) the syntactic categoryof the second conjunct and the analysis can proceed(a previous, incomplete constituent would be savedin a parallel structure, called '~erge stack" thatwould be used subsequently to complete theinterpretation of the first conjunct).Apar~ from the ccr~iderable pc~er offered by~LgGs for semantic interpretation, it is not quiteclear why this approach represents an advance withrespect to ~ ' a~roach.
Even though theanalysis times re\[x)zted in the appendix of (Oahl &McCord, 1983) are ~ry  low, the top-down bias of180F~Gs produces the ~ problems as ATNs do.
The'~:sckup" procedure, in fact, chooses blindly amongthe alternatives present in the parent stack (thisproblem is mentioned by the authors).
A final ccm-ment concerns the analysis of the second conjtmct:since the basic grammar aims at describing "normal"English clauses, it seems that the system has so~trouble with sentences involving "gapping" (see thethird section).
In fact, while an elliptical sub-ject can be handled by the hypothesizetion, assecond conjunct, of a verb phrase (this is theequivalent of treating the sit~/ation as a singlesentence involving a single subject and tw3actions, and not as tw~ coordinated sentences, thesecond of which has an elliptical subject; ita perfectly acceptable choice), the same mechanismcannot be used t~ handle sentences with an ellipti-cal verb in the second conjunct.The last system we discuss in this section hasbeen described in (Huang, 1984).
ThOugh it isbased, as the previous one is, on a logic grammar,it starts from a qt/ite different asst~tion: thegrammar deals explicitly with conjunctions in itsrules.
It does not need any extra-gramnaticalmechanisms hut the positions where a particularconstituent can be erased by the ellipsis ~ve  tobe indicated in the rules.
Even though the effortof reconstructing the complete structure (i.e.
ofrecovering the elliptical fragment) is mainly leftto the unification mechanism of P~K)LOG, the designof the grammar is rendered s(~newhat more complex.%~e fragment of grammar reported in (Huang,1984) gives the i~pression of a set of rules"flatter" than the ones that normally appear instandard grammars (this is not a negative aspect;it is a feature of the ATNs too).
The "sentence"structure co,rises a NP (the subject, which m~y beelliptical) , an adverbial phrase, a verb (whichalso may be elliptical), a restverb (for handlingpossible previous auxiliares) and a rest-sentencecc~nent .
We can justify our previous comment onthe increased effort in grammar development by not-ing that two different predicates had to be definedto account for the normal ccmlplements and thestructure that Huang calls "reduced conjunction",see example (13) in the third section.
Moreover, itse~ms that a recovery procedure deeply embeddedwithin the language interpreter reduces the flexi-bility of the design.
It is difficult to realizehow far this problem could affect the analysis ofn~re complex sentences (space contraints limited thesize of the gra~m~ar reported in the paper quoted),but, for instance, the explicit assu~tion that theabsence of the subject makes the system retrieve itfrom a previous conjumct, seems too strong.
Disre-garding languages where the subject is not alwaysrequired (as it is the case for Italian), inEnglish a sentence of the fore "Go home and staythere till I call you" could give the parser storetrouble.In the following we will describe an approachthat overcomes som~ of the problems mentionedabove.
The parser that will be induced consti-tutes the syntactic com\[xm~t of the FIDO system (aFlexible Interface for Database Operations), whichis a prototype allowing an end-user to interact innatural language (Italian) with a relational database.
The query facility has been fully implementedin E~ANZ LISP on a VAX-780 computer.
The updateoperations are currently under study.
Tne variouscom\[x~ents of the system have been described in aseries of papers which will be referenced withinthe following sections.
The system includes also anoptimization ccmlmonent that c~nverts the queryexpressed at a conceptual level into an efficientlogical-level query (Lesmo, Siklossy & Torasso,1985).ORGANIZATION OF THE PARSERIn this section we overview the principlesthat lie at the root of the syntactic analysis inFIDO.
We try to focus the discussion on the issuesthat guided the design of the parser, rather thangiving all the details about its current implen~n-tation.
We hope that this approach will enable thereader to realize why the system is so easilyextendible.
For a more detailed presentation, see(Lesmo & Torasso, 1983 and Lesmo & Torasso, 1984).The first issue concerns the interactionsbetween the concept of "structured representationof a sentence" and "status of the analysis".
Theset%~ concepts have usually been considered as dis-tinct: in ATNs, to consider a well-known exa~le,the parse tree is held in a register, but the glo-bal status of the parsing process also includes t/hecontents of the other registers, a set of statesidentifying the current position in the varioustransition networks, and a stack containing thedata on the previous choice points.
In logic gram-mars (Definite Clause Granmars (Pereira & Warren,1980), Extraposition Grammars (Pereira, 1981),M~difier Structure Grammars (Dahl & ~L-~Drd, 1983))this book-keeping need not be completely explicit,but the interpreter of the language (usually adialect of PROLOG) has to keep track of the bindingof the variables, of the clauses that have not beenused (but could be used in case of failure of thecurrent path), and so on.
On the contrary, ~etried to organize the parser in such a way that thetwo concepts mentioned above coincide: the portionof the tree that has been built so far "is" thesta~/s of the analysis.
Tne implicit assunlDtion isthat the parser, in order to go on wi~/~ theanalysis does not need to know how the tree wasbuilt (what rules have been applied, what alterna-tives there were), but just what the result of theprevious processing steps is 4.Of course, this assumption implies that all infor-mation present in the input sentence must also beAWe must confess that this assumption has not beenpushed to its extreme consequences.
In some cases(see (Lesm~ & Torasso, 1983) for a more detaileddiscussion) the backtracking mechanism is stillneeded, but, although we are not unable to pro-vide experimental evidence, we believe that itcou/d be substituted by diagnostic procedures ofthe type discussed, with different purposes andwithin a different fomTalism, in (Weischedel &Black, 1980).181present in its struct-ttred representation; actually,what happens is that new pieces of information,which were implicit in the "linear" input form, aremade explicit in the result of the analysis.
Thesepieces of information are extracted using the syn-tactic knowledge (how the constituents are struc-tured) and the lexical knowledge (inflectionaldata).The main advantage of such an approach is thatthe whole interpretation process is centered arounda single structure: the deL~ndency s t ructure  of theconstituents composing the sentence.
This enhancesthe modularity of ~he systam: the mutual indepen-dence of the various knowledge sources  can bestated clearly, at least as regards the pieces ofknowledge contained in each of t_~; on the c~n-trary, the control flow can be designed in such away that all knowledge sources contribute, bycooperating in a more or less synchronized way, tothe overall goal of comprehension (see fig.l).A side-effect of the independence of knowledgesources n~_ntioned above is that there is no strictcoupling between syntactic analysis and s~T~%nticinterpretation, contrarily to what happens, forinstance, in Augmented Phrase Structure Grammars(Robinson, 1982).
This moans that there is no one-to-one association between syntactic and semanticrules, a further advantage if we succeed in makingthe structured representation of the sentence rea-sonably uniform.
This result has been achieved bydistinguishing between "syntactic categories",which are used in the syntactic rules to build thetree, and "node types", whose instantiations arethe ele_,~nts the tree is built of.
z Since the numberof syntactic categories (and of syntactic rules) isconsiderably larger than the ntm~ber of node types(6 node types, 22 syntactic categories, 61 rules),then so,~ general constraints and interpretationtales may be expressed in a more compact form.WiL-hout entering into a discussion on semanticinterpretation, we can give an ex i le  using therules that validate the tree from a syntactic pointof view (SY~IC  RULES 2 in fig.l).
One of theserules specifies that the subject and the verb ofthe sentence must agree in nun~r.
On the otherhand, the subject can be a noun, a pronoun, aninterrogative pro~)un, a relative pro~m~n: each ofthem is associated with a different syntacticcategory, but all of them will finally be stored ina node of type REF (standing for REFerent) ;independently of the category, a single rule isused to specify the agreement constraint mentionedabove.let us now have a look at the box in fig.llabelled " ~ I C  RULES i: EXTENDING THE \[~a~".~Six node types have been introduced (each node isactually a o~91ex data structure): REL (~a-tions, mainly verbs), REF (R\]~Ferents, no~s, pro-nouns, etc.
), CO~ (CONNectors, e.g.
preposi-tions), OET (DETerminers), ADJ (ADJectives), andMOD (MCOifiers, ~ainly adverbs).
Be~nd these sixtypes, a special node (TOP) has been included toidenti~ Z the main verb(s) of the sentence.SYNTACTICRULES 1 :EXTENDINGTHE TREE III SYNT"C iC I |1\] RULES 2: I~{IREIVALZDATZNG\[ ,I T"=T E I /NATURAL \[CHANCES: \[RESHAPING\[THE TREE\[SEMANTIC IKNOWLEDGE l: 1VALIDATING ITHE TREE I(STRONG1 J' SENTATIO INKNOW E GEANNOTATING \[/ '  THETRE  1ANAPHORARESOLUTION:DISAMBIGUATINGTHE TREEFiE.l: A single structure is the basis of thewhole interpretation process.The rules that are logically contained in that boxare the primary tool for performing the syntacticanalysis of a sentence.
Each of them has the form:~ IT ION ---> ACTIONwhere PR~ONDITION is a boolean expression ~noseter~tg are elementary conditions; their predicatesallow the system to inspect the current status ofthe analysis, i.e.
the tree (for instance: '"~hat isthe type of the current node?
", "Is t.here an en~ptynode of type X?")
; a look-ahead can also beincluded in the preconditions (maxirman 2 words).The right-hand side of a rule (ACTION) consists ina sequence of operations; there are two operators:CRLINK (X,Y)which creates a new instance of the type X andlinks it to the nearest node of type Y existing inthe rightn~Dst path of the tree (and moving onlyupwards)FILL (X,V)which fills the nearest node (see above) of type Xwith the value V (which in most cases coincideswith the lexical date about the current inputword).
'\]\[he rules are grouped in packets, each ofwhich is associated with a lexical category.
It isworth noting that the choice of the rule to fire isnon-deterministic, since different rules can beexecuted at a given stage.
On the other hand, thenon-determinism has been reduced by making thepreconditions of the rules belonging to the samepacket mutually e~uzlusive; consequently, the statusis saved on the stack only (but not always) if theinput word is syntactically ambiguous.
Note thatnothing prevents there being exceptions to thisrule.
For e~le ,  in ~gl ish the past indicativeand the past participle u.~ually have the same form:in this case, ~ different rules of the V~packet could be activated if the context allows forboth interpretations.182Currently, the syntactic categories of anambiguous word are ordered manually in the lexicon;since the "first" rule is deten~ined by that order,the selection of the rule to execute depends Onlyon the choices made by the designer of the lexicon.Same experiments :,a~e been made to include aweighting mechanism, which should depend both onthe syntactic context and on the semantic knowledge(Lesmo & Torasso, 1985).A second "syntactic" box appears in fig.l.
Itrefers to rules that are, in a sense, weaker thanthe rules of the set discussed above.
The rules ofthe first set are aimed at defining acceptable syn-tactic structures, where "acceptable" is used tomaan that the resulting structure is semanticallyinterpretable (for instance, a determiner cannot beused to modify an adjective).
On the contrary, therules of t~he second set specify which of the mean-ingful sentences are well formed; in particular,they are used to check gender and number agreementand the ordering of constituents (e.g.
the factthat in ~gl i sh  an adjective should occur beforethe noun it refers to, whereas this is not alwaysthe case in Italian).
The separation between therules of the two sets is the feature that makes thesystem robust from a syntactic point of view (see(Lesmo & Torasso, 1984) for further details).It may be noticed that, in fig.
i, both thesecond set of syntactic rules we have just dis-cussed and a part of the semantic knowledge havethe purpose of '~alidating the tree", independentlyof t.he fact that the second-level syntactic con-straints can be broken (they are "weak" con-straints), whilst the semantic constraints can not(they are "strong" constraints), sane action mustbe performed when the structure hypothesized by thefirst-level rules does not match those constraints.The task of the rules called "natural changes" (seefig.l) is to restructure the tree in order to pro-vide the parser with a new, "correct" structure.
Wewill not go into further details here, since thenatural changes (in particular t_he one concerningthe treatn~nt of conjunctions) will be discussed ina following section; however, in order to give acomplete picture of the behavior of the parser, wemust point out ~.hat the natural changes can fail(no correct structure can be built) .
In this case,the parser returns to the original structure andissues a warning m~ssage, if the trigger of thenatural changes ~as a weak constraint; otherwise(semantic failure) it backtracks to a previouschoice point.A~LYSIS OF CDNJUNL~IONSBefore starting the description of the n~chan-isms adop~=d to analyze conjunctions, it is worthnoting that the analysis of conjunctions wasalready mentioned in a previous paper (Lesmo &Torasso, 1984).
The present paper represents anadvance with respect to the referenced one in thatnew solutions have been adopted, which greatlyenhance the homogeneity of the parsing process (notto mention the fact that the behavior of ~ parserwas treated very sketchily in the previous paper).The presentation of the solution we adopted isbased on the classification of sentences containingconjunctions reported in (Huang, 1984) : we willstart from the simpler cases and introduce the moreccmplex examples later.
A last remark concerns thelanguage: as stated above, the FIDO system works onItalian; in order to enhance the readability of thepaper, we present ~g l i sh  examples.
Actually, weare doing some experiments using a restricted~g l i sh  grammar, but it must be clear that thefacilities that will be described are fully i~@le-mented only for the Italian grammar (the caseswhere Italian behaves differently from I~glish willbe pointed out during the presentation).As for all other syntactic categories, thecategory "conjunction" also has an associated setof rules: the set contains a single, very simplerule: it saves the conjunction in a global regis-ter, which is available during the subsequentstages of processing.
%~e simplest case of conjunc-tion is the one referred to in (Fmang, 1984) as"unit interpretation" :(i) Bob met Sue and Mary in LondonNormally, the rules associated with hOLmShypothesize the attachrrent of a newly created REFnode to a connector that (if it does not alreadyexist) is, in turn, created and attached to thenearest node of type REL above the current node (orto the current node itself if it is of type REL).After the analysis of "Bob mat", the situation ofthe parse tree would be as in fig.2.a (and p~l  isthe current node).
Tne analysis of "Sue" would pro-duce the tree of fig.2.b.
The noun rules have bee_nchanged to allow for the attachment of more thanone noun to the same connector (should a conjunc-tion be present in the register).
In fig.2.c, thetree built after the analysis of sentence (1) isreported.It must be noted that the most common exar~leof natural change (the one called MOVEUP) is alsouseful when a conjunction is present.
Cons ider,for instance, the sentence :(2) John saw the boy you told the story and thegirl you met yesterdayAfter the analysis of the fragment ending wir/n"story", we get the tree of fig.3.a (and REF4 isthe current node).
According to the previousdisc-assion, the noun "girl" would be stored in a~EF node attached to CONN4.
On the other hand, thesemantics would reject this hypothesis, since thecase frame (TO '~r :  SUHJ/PERSON; DIROBJ/PERSON;INDOBJ~)  is not acceptable.
The portion ofthe tree representing "and the girl" would be'~ved up" and attached to CONN2, thus yielding thetree of fig.3.b (that would be expanded subse-quently, by attaching the relative clause "you nnetyesterday" to Faro'5).Unlike what happens in the previous cases, anew rule had to be added to account for the othertypes of conjt~ctions.
This rule is a new naturalchange, that the system executes when the conjunc-tion implies the existence of a new clause in thesentence.
~he need for such a rUle is clear if we183REL~ ~?I soe I H I(a)g g L ~ ~(b)Fig.2 -I',-o NEET  I , IH I , IT t?oww:P ~ CONN~(c)Dif ferent  phases of  the in terpretat ion  ofthe sentence "Bob met Sue and Mary inLondon".H means "head" and indicates the positionof the node filler within the sequence ofdependent structures.UNM means "Unmarked" and indicates thatthe corresponding verb case is not markedby a p~-eposition(a)(b)Fig.3 - Two phases in the analysis of the sentence"John saw the boy you told the story andthe Eirl you met yesterday" (the subtreerelative to "you met yesterday" is notshown).consider one of the basic assumptions of theparser.
In a sense, the parser knows that it has toparse a sentence because, before starting theanalysis, the tree is initialized by the creationof an empty REL node.
Analogously, when a relativepronoun is found, the relative clause is "initial-ized" via the creation of a new empty REL node andits attachment to the REF node whictl the relativeclause is supposed to refer to.
The only exceptionto this rule is represented by gerunds and partici-ples, which are handled by means of explicitpreconditions in the VERB rule set.
Of course,this can give rise to ambiguities when the pastindicative and the past participle have the sameform, as in the well known garden path:(3) The horse raced past the barn fellIn the case of sentence (3) ,  the choice of theindicative tense would be made, and the past parti-ciple rule would be saved ~o allow for a possiblebacktrackLng in a s ~ n t  phase, as would actu-ally occur in example (3) (we must note here thatsuch an ambiguity does not occur in Italian).
Afurther co~Tent concerns the relative clauses withthe deleted relative pronouns (as in (2) above):this gaencmenon does not occur in Italian either;v~ believe that it could be handled by means of a184natural change very s imi la r  to  the one descr ibedbelow.Wecan now turn hack to the prob1~ of c~m-junctions.
Let's consider first a sentence wherethe right conjumct is a complete ~rase.
(4) Bob mint Sue and Mary kissed herAfter the analysis of the sentence as far as"Mary", the s t ru~=e of the tree would be as infig.2.c (apart ~ the subtree referring to "inLond~") .
~ "kissed" is four~, no empty~ga_~ exists to ac~----.---~umte it, thus the naturalcha.~es are triggered and, because of the preconai-tions, the new one (caLled D e ~ )  is executed.It operates according to the following steps:I) A conjunction is looked for in the r ight  subtrse2) It is detached together with the structure fol-lowing it3) The con j~t ion  is inserted in the nodethe first I~  that is found going up in thehierarchy (in fig.2.c, starting from C~NN2 andgoing u~s ,  we find 1:m.'.1 and the node aboveit is TOP)4) A new empty REL is created and attac~ed to theL~d__e found in  step 35) The s t ructure  deteched in step 2 is attached tothe new REL, inserting, when ~ ,  a cc~nmc-tot.The e.~.~cution of INam~z~L in the case of example(4) produces the s~-uc~n~e depictad in f ig .4 ,  thatis completed subsequently, by inserting "TO KISS"in REL2 and by creating the branch for "her" in theususl way.~Wo more complex examples show that the abil-ity of the parser to analyze conjunctions is notlimited to main clauses:(5) Henry heard the s tory  that John to id  Marl, andBOb told AnnWith regard to sentence (5), wa can see theresult of the analysis of the portion ending with"Bob" in fig.5.a.
It is apparent that the executionof the steps described above causes the insertionof a new REL node at the same level of R~2 andattached to ~Y2; this seems intuitively acceptableand provides FIDO with a structure consistent withthe ~s i t ive  semantics adopted to obtain theformal query (Easing, Siklossy & Torasso, 1983).11"op l , l^No I , II'm "e'TI IHITI I 1,1lUNM I '1 lu,,,,', l u ' , ' , " l t lleo, ,  I '1 I I I'1FIE.4 - Pamtial structure built durin E theanalysis of the sentence "Bob metSue and Mary kissed he~".An even more interesting exanlple is providedby the following sentence:(6) ~ ~-d  the story John told Wary and Bobtola Ann his opinion~ere  the I~TREL  and MDVEOP cooperate in build-ing the right tree.
What happens is as follows:after the execution of I~ IREL  (in the waydescribed above) "his opinion" is attached to REL3.~he se lect ion  restrictions are not respectedbecause four um-~rked cases are present for theverb "to tell" (including the elliptical relativeextracted from the first conjtnnct), so thesmallest right subtres ("his opinion") is m~ved upand attached to RELI; again, the hypothesis isrejected (three unmarked cases for "to hear").
Thetree returns to the original sta~zs and MOVEJP istried again on a larger subtree (the one headed by~mT~}.
Since a conjunction is found in the nodeabove REL3, it is moved t~o and the analysisfinally succeeds.~he last type of sentences that we will con-sider involves gapping.
An example of clause-internal ellipsis is:(7) I played football and John tennis.the name "John" is encountered, a ~ i tinterpretation is attempted ("football and John ")and it is rejected for obvious reasons.
The onlyalternative left to the parser is the execution of15~KTREL, which, working in the usual way, allowsthe parser to build up the right interpretation.Note that an empty node is left after theanalysis of the sentence is completed, which is notdone in the examples described above.
This is han-dled by non-syntactic routines that build up these,~ntic interpretation of the sentence (formalquery oonstruction in FIDO).
However the ac~a l~rb  is made available as soon as possible, becausethe interpretation routines do not wait until theanalysis of the o~,,=nd is finished before begin-ning the i r  work.As the reader will see frum the followingexamples, no ~ub le  is caused for the parser bythe other kinds of gapping:- left-peripheral ellipsis with ~ NP-remn ns.For example:(8) Max gave a nickel to Sally and a dime toHarvey(unit interpretation "to Sally and a dime"attampted and rejected; I~E~L executed; thesemantic routines also have to recover theelliptical subject).- left-peripheral ellipsis with one NP remnant andnDn-NP remnant(s).
For example:(9) Bob met Sue in Paris and Mary in London(e~Jctly the same case as (8); the parser makesno distiction between NPs and non-NPs)- Right peripheral ellipsis concomitant with clauseint~mm%al ellipmis.
For example:185(I0) Jack asked Elsie to dance and Wilfred Phoebe(same processing as be~re; more complex semanticrecovery of lacking constituents is necessary).Not very different is the case where "the rightconjunct is a verb ~rase to be treated as a clausewith the subject deleted".
As an example considerthe following sentence:(11) The ~sn kicked the child and threw the ball.In this case, the search for an empty REL nodefails in the usual way and II~SERTREL is executed asdiscussed above, except that the ccmjuncticn isstill in the register and no structure follows it,so that the steps 1,2, and 5 are skipped.Finally, the "Right Node Raising", exemplified(12) The man kicked and threw the ball.%T~ problem here is that the left conjunct is not acomplete sentence.
However, the syntactic ruleshave no troubles in analyzing it; it is a task ofsemantics to decide whether "the man kicked" can heaccepted or not.
In other words, "the ball" couldhe considered as an elliptical object in the firstclause; although the procedures for ellipsis reso-lution are unable, at the present stage of develop-ment, to handle such a case, it is not difficult toimagine how they could be extended.To close this section, two cases must be men-tioned that the parser is unable to analysecorrectly.
In sentence (13)(13) John drove his car through and completelydemolished a plate glass windowa preposition (through) has no NP attached to it.The prob lem here is very similar to that of "dan-gling prepositions" (and, like the latter, it doesnot occur in Italian).
A simple change in the syn-tax would allow a CONN node to be left without anydependent R~:.
Less simple would be the changesnecessary in the anaphora procedures to allow themto reconstruct the ~=aning of the sentence (thedifficulty here is similar to the "Right Node Rais-CONM?J t JN/~R~-I=~ ~ 'r i 'A,, ,o I ,  I(a)REL I  pI ,..,N:REF~.
f,,F ig .
5 - Two phases  in the ana lys i s  o f  the sentence :  "Henry herd  the  s torythat John told Mary and Bob told Ann".186ing" discussed above).The last problematic case is concerned withmulti-level gappings, as in the folluwing example:(14) Max wants to try to begin t~ write a novel andAlex a play.In this case, the insertion of an empty REL node toaccount for the second conjunct ("Alex a play")does not allow the parser to build a structure thatcorresponds to the one erased by the ellipsis.
Wehave not gone deeply into this problem, which,unlike the preceding ones, also occurs in Italian.H~wever, it seems that, also in this case, theincreased power of the procedures handling ellipti-cal fragments could provide some reasonable solu-tions without requiring substantial changes to thepresented approach to parsing.CONCLUSIONSAS stated in the introduction, a proper treat-?
ent of coordination involves the ability to inter-rupt the analysis of the first conjunct when theconjunction is found and the ability to analyze thesecond conjunct taking into account what happenedbefore.~he system described in the paper deals withthe two probl~s by adopting a robust and modularbottom-up approach.
The first conjunct is extendedas far as possible using the incoming words and thestructure building syntactic rules.
Its complete-ness and/or acceptability is verified by n~_ans ofanother set of rules that fit easily in the pro-posed framework and do not affect the validity ofthe other rules.~he second conjunct is analyzed using the s~mestandard set of structure building rules, plus anexcep~ion-~%ndling rule that accounts for the pres-ence of a whole clause as second conjunct.
The need~o take into account what happened before is satis-fied by the availability of the portion of the treethat has already been built and that can beinspected by all the rules existing in the system.qhe paper shows that the approach that hasbeen adopted enables the system to analyzecorrectly most sentences involving conjunctions.Although sane cases are pointed out, where thepresent i~plementation fails tm analyze a correctsentence, we believe that the solutions presentedin the paper enlight some of the advantages that arule-based approach to parsing has with respect tothe classical grammar-based ones.V.Dahl, M.MmCord (1983): Treating Coordination inLogic Grammars.
AJCL 9, 69-91.X.Huang (1984) : Dealing with Conjunctions in aMachine Translation Environment.
Proc.
COLING 84,Stanford, 243-246.L.Lesr~, L.Siklossy, P.Torasso (1983): A Two LevelNet for Integrating Selectional Restrictions andSemantic Knowledge.
Proc.
IEEE Int.
Conf.
on Sys-tems, Man and Cybernetics, India, 14-18.L.iesmo, L.Siklossy, P.Torasso (1985): Semantic andPragmatic Processing in FIDO: a Flexible Interfacefor Database Operations.
Information Systa~s 10,n.2.L.Lesmo, P.Torasso (1983) : A Flexible NaturalLanguage Parser Based on a T~o-ievel Representationof Syntax.
Pro(:.
ist Conf.
ACL Europe, Pisa, i14-121.L.Lesmo, P.Torasso (1934):tally Ill-Formed Sentences.ford, 534-539.Interpreting Syntacti-Pro(:.
COLING 84, Stan-L .Le~,  P.Torasso (1985): Weighted Interaction ofSyntax and Semantics in Natural Language Analysis.9th IJCAI, Los Angeles.F.Pereira (1981) : Extraposition Grammars.
AJCL 7,243-256.F.Pereira, D.Warren (1980): Definite Clause Gram-mars for Language Analysis: A Survey of the Formal-ism and a Comparison with Transition Networks.Artificial Intelligence 13, 231-278.J.J.Robinson (1982): DIAGRAM: A Grammar for Dialo-gues.
Ccmm.
ACM 25, 27-47.R.M.Weischedel, J.E.Black (1980): Responding Intel-ligently to Unparsable InpUts.
AJCL 6, 97-109.W.A.Woods (1973): An Experimental Parsing Systemfor Transition Network Grammars.
In R.R~stin (ed.
):Natural Language Processing, Algorithmics Press,New York, Iii-154.187
