On building a high performance gazetteer databaseAmittai E. AxelrodMetaCarta, Inc.875 Massachusetts Ave., 6th Flr.Cambridge, MA, 02139amittai@metacarta.comAbstractWe define a data model for storing geographicinformation from multiple sources that en-ables the efficient production of customizablegazetteers.
The GazDB separates names fromfeatures while storing the relationships be-tween them.
Geographic names are stored ina variety of resolutions to allow for i18n andfor multiplicity of naming.
Geographic fea-tures are categorized along several axes to fa-cilitate selection and filtering.1 IntroductionWe are interested in collecting the largest possible set ofgeographic entities, so as to be able to produce a varietyof extremely comprehensive gazetteers.
These gazetteersare currently produced to search for both direct and indi-rect geospatial references in text.
The production processcan be tailored to produce custom gazetteers for other ap-plications, such as historical queries.The purpose of the MetaCarta GazDB is to provideboth a place and supporting mechanisms for storing,maintaining, and exporting everything we know aboutour collection of geographic entities.To produce a gazetteer from various data sources, wemake use of a database, the GazDB, as well as two setsof scripts: conversion scripts, to transfer the data fromits source format into the GazDB, and export scripts tooutput data from the GazDB in the form of gazetteers.The interaction between these elements is illustrated inFigure 1.Geographic input data is collected from multiple (notnecessarily disjoint) sources, each with their own pecu-liar format.
As such, the conversion scripts must performsome amount of normalization and classification of theinput data in order to maintain a single unified repositoryFigure 1: The gazetteer production processof geographic data.
However, in order to justify the over-head of consolidating all the data into a single entity, itmust be possible to output all of it into multiple gazetteersdesigned for different goals.It should also be possible to perform filtering oper-ations on the gazetteer entries, such as comparing en-try names against common-language dictionaries.
Thiscan be used determine whether occurrences of gazetteernames in documents are geographically relevant (Rauchet al, 2003).This is the task for the export scripts.
However, in thispaper, we shall focus on the heart of the system, namelythe GazDB.
Section 2 describes how the GazDB relatesgeographic names and features.
In Section 3 we describehow the GazDB handles ambiguities and inconsistenciesin geographic names.
Finally, in Section 4 we outlinethe classification and storage system used for geographicfeatures.2 Gazetteer entries in the GazDBThe most basic form of a gazetteer entry consists of amapping between a geographic name and a geographicFigure 2: Relating features and names in the GazDBlocation.
The Alexandria Digital Library Project (Hill,2000), however, defines a gazetteer entry as also requir-ing a type designation to describe the entity referred toby the name and location.
Because a geographical typedesignation classifies the physical entity rather than thename assigned to it, we think of gazetteer entries pro-duced by the GazDB as relating geographic names andgeographic features (which have inherent types).
We willseparately discuss geographic names and geographic fea-tures in greater detail later, and focus on the stored rela-tions between them first.A naive approach to creating a gazetteer is to main-tain a flat file with one gazetteer entry per line, as follows:Boston 42?
21?30?N, 71?
4?23?WCambridge 42?
23?30?N, 71?
6?22?WSomerville 42?
23?15?N, 71?
6?00?WThis schema is overly simplistic because it supposes aone-to-one mapping between geographic names and fea-tures, when in reality many geographic features havemore than one name commonly associated with them.For instance, the tallest mountain in North America is un-ambiguously referred to as either Mount McKinley or De-nali.
Using this gazetteer, recording both names for themountain would result in the creation of two entries.
Thisis highly impractical on a large scale due to space require-ments and the complexity of systematically updating ormodifying the gazetteer.The GazDB uses the well-known relational ap-proach (Codd, 1970) to store the geographic data forthe gazetteer.
To do so, we separate the notion ofa geographic name from the geographic feature that itrepresents.
We maintain distinct tables for locationsand names?
mappings between names and locations arestored in a third table, keyed by the unique numericalidentifiers of both the name and the location, as shownFigure 3: Updating a name in the GazDBin Figure 2.
This system enables the GazDB to supportboth many-to-one relations between names and features,as in the case of Denali and McKinley, and one-to-manyrelations such as London being the name of both a city inBritain and a town in Connecticut.In the GazDB, several other relational tables are usedto store numerical data associated with the known geo-graphic features.
For example, population data is kept ina separate table that links census figures with the ID?s ofentries in the feature table.
This is useful because it facil-itates queries to be performed only on inhabited places.Elevation data is stored in a similar manner.As gazetteers get updated, corrections are often madeto the name or to the feature data.
To update a name, weformally abandon the old ID, create a new name entry,and update the name?feature mapping table by replac-ing the old name ID with the new one, as in Figure 3.We repeat this process for each table in the GazDB thatrefers to the old ID?
this is simple, because the tables areindexed by ID.
Updating geographic locations or numer-ical data in the GazDB is done in an identical manner.The GazDB also includes a table for storing de-tailed information about the sources of the data in theGazDB?
for instance, ?NIMA GeoNet names datafile forAfghanistan (AF), published November 8 2002?.
Everyelement in the GazDB is then associated with the ap-propriate entry in the source table.
This enables the ac-countability of all entries in the GazDB, preventing theappearance of ?mystery data?.
The source table also al-lows easy, systematic, source-specific modifications ofthe GazDB?s entries to keep pace with frequently up-dated datasets, thereby maintaining the freshness of theGazDB?s data.The GazDB also includes a complete log of all updatesto the database tables and entries.
Because data rows areabandoned but not deleted during updates, it is possibleto recreate the state of the database prior to any particularset of updates.The flexibility of the relational design also allows theinclusion of new kinds of data that were not thought ofor not available in the original schema.
For instance, onecould add yearly precipitation data for geographic loca-tions by creating an additional table mapping locations torainfall amounts, without the need to re-ingest the dataalready in the GazDB.The GazDB also maintains a historical geographicalrecord by capturing temporal extents for mappings ?
i.e.the city at 59?
54?20?N, 30?
16?9?E would be associatedwith the names:?
St. Petersburg from 1991-present day?
Leningrad from 1924-1991?
Petrograd from 1914-1924The GazDB can thus export temporally-sensitivegazetteers customized for use in historical documents.3 Geographic namesGeographic names present a number of challenges to agazetteer.
These include issues inherent to translation andtransliteration of foreign names, mediation between re-peated entries and multiple sources, and the (in)accuracyof placename specifications.3.1 Resolution of namesThe first hurdle is internationalization (i18n).
Differencesbetween character encodings and display capabilities re-sult in some names taking on a variety of forms (e.g.printing Sa?o Tome?
as Sao Tome).
Although the printedforms of the name are not character-identical, the nameitself has not changed from its original representation.To resolve this, the GazDB defines and stores a geo-graphic name as a triple: [canonical name, display name,search name], with each element at a different level ofresolution.
The canonical form of the feature?s name iskept as a 16 bit string (Unicode / UTF-8), the displayform is 8 bits (ISO 8859-1), and the search name is 7-bituppercase ASCII.
These resolutions are appropriate fordifferent purposes: wide characters are necessary for Chi-nese/Japanese/Korean (CJK) content, the display name isa necessary compromise given the default display capa-bilities of Internet browsers, and the search name is nec-essary given the data entry capabilities of the default (US-ASCII) keyboard.
We henceforth use the term name toimplicitly refer to this triple.We also support Soundex and Metaphone geographicname searches at a 7 bit resolution, by storing the hashcodes in separate tables within the GazDB.However, there are cases when variances in a namearise due to multiple transliteration, rather than characterencodings, as in the case of Macau and Macao.
As such,we further define a spelling of a geographic name to bea similarly constructed triple of [UTF-8, 8859-1, ASCII]encodings, with the added restriction that while the au-thoritative name is directly associated to a geographicalentity, a spelling is only directly associated to a name.Thus while Macao is a spelling variant of Macau, andMacau is the name of a city in Southern China, nonethe-less Macao is not considered to be a GazDB name properfor the city.3.2 AuthoritativenessThe GazDB also makes a distinction about the authorita-tiveness of names.
We view a placename as an informa-tion resource in and of itself, independent of the featurethat it names.
This is analogous to the Unicode standard,where the name of a character is treated as an informationresource independent of the glyph it corresponds to.There are multiple names that refer to the same geo-graphic feature but are neither spelling variants of anothernor are they seemingly derived from one another, such asHolland vs.
The Netherlands or Nihon vs. Japan.
Be-cause of this, we define and maintain alternate names foreach authoritative name.
Each geographic entity is per-mitted to have only one authoritative name, but that au-thoritative name can have several more informal alternatenames associated to it.
Both alternate names and author-itative names can have variant spellings.Conflicts between authoritative names from differentsources are inevitable.
However, we cannot indepen-dently determine the proper solution in an objective waybecause we are not a mapping agency?
we seek to usegeographic data, not produce it.
Without being able totake our own measurements, resolving these discrepan-cies must therefore be done on the basis of the perceivedtrustworthiness of the sources providing the data.
TheGazDB?s source data consists of many sources that can betrusted to varying degrees.
We put the highest trust in theGeographic Names Information System (USGS, 2003)data and the GEOnet Names Server (NIMA, 2003) data,and mediate the incorporation of all the other sources ac-cordingly.To enforce the distinction between the authoritativeand the alternate versions of a name,, and to emphasizethe authoritative name, we speak of ?names?
referringonly to the authoritative name.
For all others, we speakof ?alternates?
and ?spellings?.3.3 ExplicitnessLastly, the GazDB distinguishes fully specified geo-graphic names, such as New York City, New York, USAfrom their short forms such as New York City or even themore colloquial yet ambiguous New York.The GazDB maintains a taxonomy of geographic fea-tures, consisting of an administrative hierarchy of theworld.
The administrative hierarchy serves to locate ge-ographic entities by country, then state, county, and soforth.
This is based upon both the FIPS 10-4 citeFIPSand the ISO 3166-2 (ISO, 1998) codes.
However, thesestandards often disagree and update infrequently, so webase ours upon the Hierarchical Administrative Subdi-vision Codes (HASC) system (Law, 1999).
Using thistaxonomy, we can specify geographic entities by nameand by their location within the political divisions of theworld.
The GazDB is capable of maintaining multipletaxonomies for geographic entities, such as one basedupon physical features (for instance: ?Mont Blanc is amountain in the Alps which are in Europe?, in additionto ?Mont Blanc is a mountain in France?
), however thesehave not yet been completed.We define as an authoritative title the unambiguouslist of hierarchical administrative regions that contain thegeographic entity.
Here New York State, United Stateswould be the authoritative title, such that the sequenceNew York City, New York State, USA unambiguouslyrefers to a single geographic entity.
The authoritative ti-tle is the ordered sequence of the authoritative names forthe list of hierarchical regions that contain the feature, soit is easy to compute from a hierarchical region tree in theGazDB.
Other titles can be computed by using variants orspellings of the containing regions?
names, or by omittingsome of them (New York City, USA, for example).We have thus imposed an order on the GazDB geo-graphic names: each feature can have one primary (mostauthoritative) GazDB name and some alternate GazDBnames.
Each GazDB name, both primary and alternate,can have multiple spellings associated with it.
All of theabove are available at all three encoding resolutions.This ordering allows the GazDB to classify geographicnames along three orthogonal scales: general/vernacularvs.
authoritative; raw (original character encoding) vs.cooked (character-set- and transliteration-normalized);and implicit (short form) vs. explicit (long form).
Thisallows us to export, on an as-needed basis, multiplegazetteers from the GazDB at different name resolutions.3.4 Language informationThe multilingual support in the GazDB goes beyond theuse of Unicode.
To map different name entries to geo-graphic features for different languages, we also maintainwithin the GazDB a detailed list of the world?s languages(Grimes and Grimes, 2000), and associate all names anddescriptions with their language.The GazDB can keep one authoritative name (but ar-bitrary numbers of associated spellings, variants, and ti-tles) per language in the world for any geographic fea-ture.
Therefore, given authoritative sets of raw geo-graphic data in a foreign language, the GazDB could pro-duce a gazetteer in that language.
By matching gazetteerentries by feature, the GazDB could potentially issue amultilingual gazetteer as well.
Of course, obtaining thelarge, accurate, geographic datasets in foreign languagesrequired for this purpose is a major ongoing undertaking?one that we make no claim to have completed!4 Geographic featuresAs mentioned in Section 2, a geographic feature includesboth a geographic location and some categorization ofwhat is situated there.
The GazDB classifies geographicentities along 3 orthogonal scales: spatial representation,functional class, and administrative type.
These classi-fications allows users to better restrict gazetteer queries,perhaps via pull-down menus, for more relevant results.4.1 Spatial representationsSimple point/bounding-box categorization does not ac-curately depict the topological footprint of most features(Hill et al, 1999).
Points do not represent the geographicextents of locations, and bounding boxes misrepresentfeatures by oversimplifying the shape.
Of particular in-terest is the ability to categorize geographic entities with?fuzzy boundaries?, such as the extent of wetlands, ordisjoint regions, such as an archipelago.
The GazDBclassifies features by their footprint into 6 major types(each with numerous subtypes):1 point ?
0-dimensional (approximated to a point, e.g.a factory gate or a well)2 line ?
1-dimensional (e.g.
a road or power line)3 area ?
2-dimensional without clearly defined bound-aries (e.g.
wetlands)4 point-area ?
a 2-D region with clearly definedboundaries (e.g.
county or lake)5 cluster of point-areas ?
e.g.
an archipelago6 probability density distribution ?
a feature that shiftsover time, e.g.
ice packs0 unknown/unclassified4.2 Functional classesMany features, particularly structures, can also be de-scribed by their functional class:1 building ?
a man-made structure2 campus ?
a feature that contains a number of build-ings on open space, such as a military base.3 field ?
a feature that predominantly open space with-out structures, such as a cemetery.4 city0 unknown/unclassified4.3 Administrative typesWe also distinguish administrative types:1 international organization ?
encompasses multiplecountries2 nation3 province ?
first-order administrative subdivisionwithin a nation4 county ?
first-order administrative subdivisionwithin a province5 smaller than county ?
anything below second-ordersubdivision within a nation0 unknown/unclassifiedIt is worth reiterating that these categorizations are de-liberately broad and are used for filtering purposes only.The GazDB maintains a complete hierarchical tree of allthe administrative subdivisions within a country and thegeographic entities contained therein, without any depthlimitations.4.4 Using feature categorizationThe particular categories and classifications are specifiedfor a number of reasons:To facilitate Knowledge Representation within theGazDB by axiomatizing how we classify data.
We cur-rently have no ontology for the geographic entities, butwe leave open the option to add one to our taxonomies.To reduce the need for human training, such that anaverage user of the gazetteer can have reasonable expec-tations of what each category includes based on intuition.User convenience: the categories in the appropriatepull-down menu should be ones useful to a user.To make querying more efficient: for example, we canuse axiomatic expectation to assume a polygonal featureto only match other polygons.4.5 Storing geographic locationsA major advantage that coordinate systems have overnaming systems is that, given an appropriate method, it ispossible to convert from one coordinate system to anotherwith reasonable accuracy.
As such, the GazDB currentlyonly stores geocoordinates in decimal degrees (albeit intwo versions: one high-precision, and the other roundedfor display purposes).
However, the conversion and ex-port scripts are already prepared to handle a wide varietyof coordinate systems, such as Degrees-Minutes-Seconds(DMS), Military Grid Reference System (MGRS), Uni-versal Transverse Mercator (UTM) coordinates, to namea few.The GazDB scripts can also convert between map pro-jections, but so far it is only done to convert source datainto the GazDB standard format.5 ConclusionsMaintaining a large-scale gazetteer database is a non-trivial task.
Nonetheless, we have created a gazetteerdatabase containing tens of millions of entries collectedfrom several large gazetteers (each with their own for-mat, encoding, classification, and field conventions), andproviding output in several highly compressed binary for-mats.
We believe that the problems we have encounteredin designing and building the GazDB are not unique tous, but rather, they are inherent to the task.
We thereforehope that others can use the solutions proposed here tosome advantage.AcknowledgementsWe would like to thank Dr. Andra?s Kornai for invaluableideas and support, Dr. Michael Bukatin for technicalassistance and caffeine, the anonymous reviewers forproviding useful comments, and lastly, Kenneth Bakerand Keith Baker for their roles in the development of thisproject.
Thank you.ReferencesEdgar Frank Codd.
1970.
A relational model of datafor large shared data banks.
Communications of theACM.
13(6):377?387.US Department of Commerce, National Institute of Stan-dards and Technology (NIST).
1995.
FIPS PUB 10-4:Countries, dependencies, areas of special sovereignty,and their principal administrative divisions.http://www.nima.mil/gns/html/fips10-4.htmlBarbara F. Grimes and Joseph E. Grimes.
2000.
Ethno-logue.
Volume 1: languages of the world.
SIL Interna-tional.Linda L. Hill, James Frew, and Qi Zheng.
1999.
Geo-graphic Names: The implementation of a gazetteer ina georeferenced digital library.
D-Lib Magazine.
5(1).Linda L. Hill.
2000.
Core elements of digital gazetteers:placenames, categories, and footprints.
In J. Borbinha& T. Baker (Eds.
), Research and Advanced Technol-ogy for Digital Libraries : Proceedings of the 4th Euro-pean Conference, ECDL 2000 Lisbon, Portugal.
(pp.280-290)International Organization for Standardization.
1998.ISO/IEC 3166 ISO ISO 3166-2:1998 Codes for therepresentation of names of countries and their sub-divisions ?
Part 2: Country subdivision code.
Pub-lished by International Organization for Standardiza-tion, Geneva.Gwillim Law.
1999.
Administrative subdivisions ofcountries.
McFarland & Company, Inc.http://www.mindspring.com/?gwil/statoids.htmlNational Imagery and Mapping Agency.2003.
GEOnet Names Server (GNS).http://www.nima.mil/gns/html/index.htmlUnited States Geological Survey.2003.
Geographic Names Information System (GNIS).http://geonames.usgs.gov/Erik Rauch, Michael Bukatin, and Kenneth Baker.
2003.A confidence-based framework for disambiguating ge-ographic terms.
Published in this volume.
