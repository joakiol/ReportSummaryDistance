Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96?102,Suntec, Singapore, 6-7 August 2009. c?2009 ACL and AFNLPA Syntactic Resource for Thai: CG TreebankTaneth Ruangrajitpakorn      Kanokorn Trakultaweekoon      Thepchai SupnithiHuman Language Technology LaboratoryNational Electronics and Computer Technology Center112 Thailand Science Park, Phahonyothin Road, Klong 1,Klong Luang Pathumthani, 12120, Thailand+66-2-564-6900 Ext.2547, Fax.
: +66-2-564-6772{taneth.ruangrajitpakorn, kanokorn.trakultaweekoon, thep-chai.supnithi}@nectec.or.thAbstractThis  paper  presents  Thai  syntactic  re-source:  Thai  CG treebank,  a  categorialapproach  of  language  resources.
Sincethere  are  very  few  Thai  syntactic  re-sources,  we designed to create treebankbased on CG formalism.
Thai corpus wasparsed  with  existing  CG  syntactic  dic-tionary  and  LALR  parser.
The  correctparsed trees were collected as prelimin-ary  CG  treebank.
It  consists  of  50,346trees  from 27,239 utterances.
Trees  canbe  split  into  three  grammatical  types.There are 12,876 sentential trees, 13,728noun  phrasal  trees,  and  18,342  verbphrasal trees.
There are 17,847 utterancesthat obtain one tree, and an average treeper an utterance is 1.85.1 IntroductionSyntactic lexical resources such as POS taggedcorpus and treebank play one of  the  importantroles in NLP tools for instance machine transla-tion (MT), automatic POS tagger, and statisticalparser.
Because of a load burden and lacking lin-guistic expertise to manually assign syntactic an-notation to sentence, we are currently limited to afew  syntactical  resources.
There  are  few  re-searches  (Satayamas  and  Kawtrakul,  2004)  fo-cused  on  developing  system to  build  treebank.Unfortunately,  there is  no further report on theexisting treebank in Thai  so far.
Especially forThai,  Thai  belongs  to  analytic  language  whichmeans  grammatical  information  relying  in  aword  rather  than  inflection  (Richard,  1964).Function words represent grammatical  informa-tion such as tense, aspect, modal, etc.
Therefore,to recognise word order is a key to syntactic ana-lysis  for  Thai.
Categorial  Grammar  (CG)  is  aformalism which focuses on principle of syntact-ic behaviour.
It can be applied to solve word or-der  issues  in  Thai.
To  apply  CG  for  machinelearning and statistical based approach,  CG tree-bank, is initially required.CG is a based concept that can be applied toadvance  grammar  such  as  Combinatory  Cat-egorial  Grammar  (CCG)  (Steedman,  2000).Moreover,  CCG is  proved  to  be  superior  thanPOS for CCG tag consisting of fine grained lex-ical  categories and its  accuracy rate (Curran etal., 2006; Clark and Curran, 2007).Nowadays,  CG and CCG become popular inNLP researches.
There are several researches us-ing them as a main theoretical approach in Asia.For example, there is a research in China usingCG with Type Lifting (Dowty, 1988) to find fea-tures interpretations of undefined words as syn-tactic-semantic  analysis  (Jiangsheng,  2000).
InJapan,  researchers  also works  on Japanese cat-egorial grammar (JCG) which gives a foundationof  semantic  parsing  of  Japanese  (Komatsu,1999).
Moreover, there is a research in Japan toimprove CG for solving Japanese particle shift-ing phenomenon and using CG to focus on Ja-panese particle (Nishiguchi, 2008).This paper is organised as follows.
Section 2reviews  categorial  grammar  and  its  function.Section  3  explains  resources  for  building  ThaiCG treebank.
Section 4 describes experiment res-ult.
Section 5 discusses issues of Thai CG tree-bank.
Last, Section 6 summarises paper and listsup future work.962 Categorial GrammarCategorial  grammar  (Aka.
CG or  classical  cat-egorial  grammar)  (Ajdukiewicz,  1935;  Car-penter,  1992;  Buszkowski,  1998;  Steedman,2000) is a formalism in natural language syntaxmotivated  by  the  principle  of  constitutionalityand  organised  according  to  the  syntactic  ele-ments.
The syntactic elements are categorised interms of their ability to combine with one anoth-er to form larger constituents as functions or ac-cording to a function-argument relationship.
Allsyntactic categories in CG are distinguished by asyntactic category identifying them as one of thefollowing two types:1.
Argument: this type is a basic category,such  as  s  (sentence)  and  np  (nounphrase).2.
Functor  (or  functor  category):  this  cat-egory type is a combination of argumentand  operator(s)  '/'  and  '\'.
Functor  ismarked to a complex lexicon to assist ar-gument   to  complete  sentence  such  ass\np  (intransitive  verb)  requires  nounphrase from the left  side to complete asentence.CG captures the same information by associat-ing a functional type or category with all gram-matical entities.
The notation ?/?
is a rightward-combining  functor  over  a  domain  of  ?
into  arange of ?.
The notation ?\?
is a leftward-com-bining functor over ?
into ?.
?
and ?
are both ar-gument  syntactic  categories  (Hockenmaier  andSteedman,  2002;  Baldridge  and  Kruijff,  2003).The basic concept is to find the core of the com-bination  and  replace  the  grammatical  modifierand complement with set of categories based onthe same concept with fractions.
For example, in-transitive verb is needed to combine with a sub-ject to complete a sentence therefore intransitiveverb is written as s\np which means it  needs anoun phrase from the left side to complete a sen-tence.
If there is a noun phrase exists on the leftside, the rule of fraction cancellation is appliedas np*s\np = s. With CG, each lexicon can be an-notated  with  its  own  syntactic  category.However,  a  lexicon could have more  than onesyntactic category if it is able to be used in dif-ferent appearances.Furthermore,  CG  does  not  only  construct  apurely  syntactic  structure  but  also  delivers  acompositional  interpretation.
The  identificationof derivation with interpretation becomes an ad-vantage over others.Example of CG derivation of Thai sentence isillustrated in Figure 1.Recently,  there are many researches on com-binatory categorial grammar (CCG) which is animproved  version  of  CG.
With  the  CG  basedconcept and notation, it is possible to easily up-grade  it  to  advance  formalism.
However,  Thaisyntax still remains unclear since there are sever-al points on Thai grammar that are yet not com-pletely  researched  and  found  absolute  solvent(Ruangrajitpakorn et al, 2007).
Therefore, CG iscurrently set for Thai to significantly reduce overgeneration rate of complex composition or am-biguate usage.Figure 1.
CG derivation tree of Thai sentence3 ResourcesTo collect CG treebank, CG dictionary and pars-er  are  essentially required.
Firstly,  Thai  corpuswas parsed with the parser using CG dictionaryas a syntactic resource.
Then, the correct trees ofeach sentence were manually determined by lin-guists and collected together as treebank.3.1 Thai CG DictionaryRecently, we developed Thai CG dictionary to bea syntactic dictionary for several purposes sinceCG is new to Thai NLP.
CG was adopted to oursyntactic  dictionary because  of  its  focusing  onlexicon's behaviour and its fine grained lexical-ised  grammar.
CG is  proper  to  nature  of  Thailanguage since Thai belongs to analytic languagetypology; that is, its syntax and meaning dependon  the  use  of  particles  and word orders  ratherthan inflection (Boonkwan, and Supnithi, 2008).Moreover,  pronouns  and other  grammatical  in-formation, such as tenses, aspects, numbers, andvoices, are expressed by function words such as97determiners, auxiliary verbs, adverbs and adject-ives, which are in fix word order.
With CG, it ispossible  to  well  capture  Thai  grammatical  in-formation.
Currently we only aim to improve anaccuracy of Thai syntax parsing since it still re-mains unresearched ambiguities in Thai syntax.A list of grammatical Thai word orders which arehandled with CG is shown in Table 1.Thaiutilisation Word-orderSentence - Subject + Verb + (Object)1 [rigid order]Compoundnoun - Core noun + AttachmentAdjectivemodification - Noun + Adjective2Predicate Ad-jective - Noun + Adjective3Determiner - Noun + (Classifier) + DeterminerNumeral ex-pression- Noun + (Modifier) + Number + Classifier +(Modifier)Adverbmodification- Sentence + Adverb- Adverb + SentenceSeveral aux-iliary verbs  - Subject + (Aux verbs) + VP + (Aux verbs)Negation- Subject + Negator + VP- Subject + (Aux verb) + Negator + (Aux verb) +VP- Subject + VP + (Aux verb) + Negator + (Auxverb)Passive - Actee + Passive marker + (Actor) + VerbDitransitive  - Subject + Ditransitive verb + Direct object + In-direct  objectRelativeclause - Noun + Relative marker + ClauseCompoundsentence- Sentence + Conjunction + Sentence- Conjunction + Sentence +  SentenceComplexsentence- Sentence + Conjunction + Sentence- Conjunction + Sentence +  SentenceSubordinateclause thatbegins withword ?
???
?- Subject + Verb + ?
?
???
+ SentenceTable 1.
Thai word orders that CG can solve1 Information in parentheses is able to be omitted.2 Adjective modification is a form of an adjective per-forms as a modifier to a  noun, and they combine as anoun phrase.3 Predicate adjective is a form of an adjective acts as apredicate of a sentence.In addition, there are many multi-sense wordsin Thai.
These words have the same surface formbut  they have different  meanings  and  differentusages.
This issue can be solved with CG formal-ism.
The different usages are separated becausethe annotation of syntactic information.
For ex-ample,  Thai  word  ?
?
????
/k??
?/  can  be  used  torefer to noun as an 'island' and it is marked asnp, and this word can also be denoted an actionwhich  means  'to  clink'  or  'to  attach'  and  it  ismarked as s\np/np.After observation Thai word usage, the list ofCG  was  created  according  to  CG  theory  ex-plained in Section 2.Thai  argument  syntactic  categories  were  ini-tially created.
For Thai  language,  six argumentsyntactic  categories  were  determined.
Thai  CGarguments  are  listed  with  definition  and  ex-amples in Table 2.
Additionally,  np,  num, andspnum are a Thai  CG arguments  that  can dir-ectly tag to a word, but  other can not and theycan only be used as a combination for other argu-ment.With  the  arguments,  other  type  of  word  arecreated as functor by combining the argumentstogether  following  its  behaviour  and  environ-mental  requirements.
The  first  argument  in  afunctor is a result of combination.
There are onlytwo main operators in CG which are slash '/' andbackslash '\' before an argument.
A slash '/' refersto  argument  requirement  from the  right,  and  abackslash '\' refers to argument requirement fromthe left.
For instance,  a transitive verb requiresone np from the left and one np from the right tocomplete a sentence.
Therefore, it can be writtenas  s\np/np in CG form.
However, several Thaiwords have many functions even it has the sameword sense.
For example, Thai word ?
?
????
/c???
?/(to believe) is capable to use as intransitive verb,transitive  verb,  and  verb  that  can  be  followedwith subordinate clause.
This word therefore hasthree  different  syntactic  categories.
Currently,there are 72 functors for Thai.With an argument and a functor, each word inthe word list is annotated with CG.
This informa-tion is  sufficient  for  parser  to analyse  an inputsentence into a grammatical tree.
In conclusion,CG dictionary presently contains 42,564 lexicalentries with 75 CG syntactic categories.
All ThaiCG categories are shown in Appendix A.98Thai ar-gumentcategorydefinition examplenp a noun phrase ?
???
(elephant), ??
(I, me)num A both digit and word cardinal number????
(one),2  (two)spnuma number which is suc-ceeding to classifier in-stead of proceeding clas-sifier like ordinary num-ber???
(one),?????
(one)4pp a prepositional phrase ????
(in car),??????
(on table)s a sentence?
????????
???
(elephant eats ba-nana)wsa specific category forThai which is assignedto a sentence that beginswith Thai word ???
(that :sub-ordinate clausemarker).
* ?????????????
5'that he will comelate'Table 2.
List of Thai CG arguments3.2 ParserOur implemented lookahead LR parser (LALR)(Aho and Johnson, 1974; Knuth, 1965) was usedas a tool to syntactically parse input from corpus.For  our  LALR  parser,  a  grammar  rule  is  notmanually determined, but it is automatically pro-duced by a any given syntactic notations alignedwith lexicons in a dictionary therefore this LALRparser has a coverage including a CG formalismparsing.
Furthermore, our LALR parser has po-tential to parse a tree from sentence, noun phraseand verb phrase.
However,  the parser  does notonly return the best first tree, but also all parsabletrees  to  gather  all  ambiguous  trees  since  Thailanguage tends to be ambiguous because of lack-ing explicit sentence and word boundary.3.3 Tree VisualiserTo reduce load burden of linguist to seek for thecorrect tree among all  outputs,  we developed atree visualiser.
This tool was developed by usingan open source library provided by  NLTK: The4 This spnum category has a different usage from othernumerical use, e.g.
?
??
[noun,'horse'] ??
[classifier]?????
[spnum,'one'] 'lit: one horse'.
This case is differentfrom normal numerical usage, e.g.
?
??
[noun,'horse'] ????
[num,'one'] ??
[classifier] 'lit: one horse'5 This example is a part of a sentence ????????????????????
'lit: I believe that he will come late'Natural  Language Toolkit  (http://www.nltk.org/Home; Bird and Loper, 2004).A tree visualiser is a tool to transform a textualtree structure to graphic tree.
This tool reads atree  marking  with  parentheses  form and  trans-mutes it into graphic.
This tool can transform alloutput types of tree including sentence tree, nounphrase tree, and verb phrase tree.
For example,Thai  sentence   "|???|???|????|???
?|???|?????
?|"/ka:n l?
: s??
?
p?n ka:n p?a?
con p?ai/  'lit: Tigerhunting  is  an  adventure'  was  parsed  to  a  treeshown in Figure 2.
With a tree visualiser, the treein Figure 2 was transformed to a graphic tree il-lustrated in Figure 3.4 Experiment ResultIn the preliminary experiment, 27,239 Thai utter-ances with a mix of sentences and phrases from ageneral domain corpus are tested.
The input wasword-segmented  by  JwordSeg  (http://www.su-parsit.com/nlp-tools) and approved by  linguists.In the test corpus, the longest utterance containsseventeen words, and the shortest utterance con-tains two words.s(np(np/(s\np)[???]s\np((s\np)/np[???]np[????]))s\np((s\np)/np[???
?]np(np/(s\np)[???]s\np[?????
])))Figure 2.
An example of CG tree outputFigure 3.
An example of graphic tree99All trees are manually observed by linguists toevaluate accuracy of the parser.
The criteria ofaccuracy are:?
A tree is correct if sentence is success-fully parsed and syntactically correct ac-cording to Thai grammar.?
In case of syntactic ambiguity such as ausage of preposition or phrase and sen-tence  ambiguity,  any  tree  followingthose ambiguity is acceptable and coun-ted as correct.The parser returns 50,346 trees from  27,239utterances  as  1.85  trees  per  input  in  average.There are 17,874 utterances that returns one tree.The outputs can be divided into three differentoutput  types:   12,876  sentential  trees,  13,728noun phrasal trees, and 18,342 verb phrasal trees.From the parser output, tree amount collectingin the CG tree bank in details is shown in Table3.Tree type UtteranceamountTreeamountAverageOnly S 8,184 12,798 1.56Only NP 7,211 12,407 1.72Only VP 8,006 11,339 1.42Both NPand S1,583 5,188 3.28Both VPand S1,725 6,816 3.95Both NPand VP397 1,140 2.87S, NP, VP 133 658 4.95Total 27,239 50,346 1.85Table 3.
Amount of tree categorised by a dif-ferent kind of grammatical tree5 DiscussionAfter  observation  of  our  result,  we  found  twomain issues.First, some Thai inputs were parsed into sever-al correct outputs due to ambiguity of an input.The use  of  an adjective  can be parsed to  bothnoun phrase  and  sentence  since  Thai  adjectivecan be used either a noun modifier or predicate.For example, Thai input ?|?????|????|??|????|?
/d?
?k d?
?k sod sai bon sa?
na:m/  can be literallytranslated as follows:1.
Children is cheerful on a playground.2.
Cheerful children on a playgroundFor  this  problem,  we  decided  to  keep  bothtrees in our treebank since they are both gram-matically correct.Second, the next issue is a variety of syntacticusages of Thai word.
It is the fact that Thai has anarrow range of word's surface but a lot of poly-symy words.
The more the word in Thai is gener-ally used, the more utilisation of word becomesvarieties.
With the several combination, there aremore chances to generate trees in a wrong con-ceptual meaning even they form a correct  syn-tactic word order.
For example, Thai noun phrase??????
?| ?
??????
/kam la?
ma?
ha: sa:n/ 'lit: greatpower' can automatically be parsed to three treesfor a sentence, a noun phrase, and a verb phrasebecause of polysymy of the first word.
The firstword "??
?
??"
has two syntactic usages as a nounwhich  conceptually refers  to  power and a  pre-auxiliary verb to imply progressive aspect.
Theword "??????"
is an adjective which can per-form two options in Thai as noun modifier andpredicate.
These affect parser to result three treesas follows:np: np(np[??????]
np\np[??????
])s: s(np[????? ]
s\np[??????
])vp: s\np((s\np)/(s\np)[??????]
s\np[??????
])Even though all trees are syntactically correct,only  noun  phrasal  tree  is  fully  acceptable  interms of semantic sense as great power.
The oth-er trees are awkward and out of certain meaningin Thai.
Therefore, the only noun phrase tree iscollected into our CG treebank for such case.6 Conclusion and Future WorkThis paper presents Thai CG treebank which is alanguage resource for developing Thai NLP ap-plication.
This treebank consists of  50,346 syn-tactic trees  from 27,239 utterances  with CG tagand  composition.
Trees  can  be  split  into  threegrammatical  types.
There  are  12,876 sententialtrees, 13,728 noun phrasal trees, and 18,342 verbphrasal  trees.
There  are  17,847  utterances  thatobtain one tree, and an average tree per an utter-ance is 1.85.In  the  future,  we  plan  to  improve  Thai  CGtreebank to Thai CCG treebank.
We also plan toreduce a variety of trees by extending semanticfeature  into  CG.
We  will  improve  our  LALRparser to be GLR and PGLR parser respectivelyto reduce a missing word and named entity prob-lem.
Moreover,  we  will  develop  parallel  Thai-English  treebank  by  adding  a  parallel  Englishtreebank  aligned  with  Thai  since  parallel  tree-bank is useful resource for learning to statistical100machine translation.
Furthermore, we will applyobtained CG treebank for automatic CG taggingdevelopment.ReferenceAlfred  V.  Aho,  and  Stephen  C.  Johnson.
1974  LRParsing,  In  Proceedings  of  Computing  Surveys,Vol.
6, No.
2.Bob Carpenter.
1992.
?Categorial Grammars, LexicalRules,and the English Predicative?,  In  R.
Levine,ed., Formal Grammar: Theory and Implementation.OUP.David Dowty,  Type raising,  functional  composition,and non-constituent conjunction, In Richard Oehrleet al, ed., Categorial Grammars and Natural Lan-guage Structures.
D. Reidel, 1988.Donald  E.  Knuth.
1965.
On the  translation  of  lan-guages from left to right, Information and Control86.Hisashi Komatsu.
1999.
?Japanese Categorial Gram-mar Based on Term and Sentence?.
In Proceedingof The 13th Pacific Asia Conference on Language,Information and Computation, Taiwan.James R.  Curran,  Stephen Clark,  and David Vadas.2006.
Multi-Tagging  for  Lexicalized-GrammarParsing.
In Proceedings of the Joint Conference ofthe  International  Committee  on  ComputationalLinguistics and the Association for ComputationalLinguistics (ACL), Paris, France.Jason  Baldridge,  and  Geert-Jan.  M.  Kruijff.
2003.?Multimodal combinatory categorial grammar?.
InProceeding  of  10th  Conference  of  the  EuropeanChapter of the ACL-2003, Budapest, Hungary.Julia Hockenmaier, and Mark Steedman.
2002.
?Ac-quiring  Compact  Lexicalized  Grammars  from  aCleaner Treebank?.
In Proceeding of 3rd Interna-tional  Conference  on  Language  Resources  andEvaluation (LREC-2002), Las Palmas, Spain.JWordSeg,  word-segmentation  toolkit.
Availablefrom: http://www.suparsit.com/nlp-tools), 2007.Kazimierz Ajdukiewicz.
1935.
Die Syntaktische Kon-nexitat, Polish Logic.Mark  Steedman.
2000.
The  Syntactic  Process,  TheMIT Press, Cambridge Mass.NLTK:  The  Natural  Language  Toolkit.
Availablefrom: http://www.nltk.org/HomeNoss B. Richard.
1964.
Thai Reference Grammar, U.S. Government Printing Office, Washington DC.Prachya  Boonkwan,  and  Thepchai  Supnithi.
2008.Memory-inductive  categorial  grammar:  An  ap-proach to gap resolution in analytic-language trans-lation.
In  Proceeding  of  3rd  International  JointConference  on  Natural  Language  Processing(IJCNLP-2008), Hyderabad, India.Stephen Clark and James R.  Curran.
2007.
Formal-ism-Independent Parser Evaluation with CCG andDepBank.
In  Proceedings  of  the  45th  AnnualMeeting of the Association for Computational Lin-guistics (ACL),  Prague, Czech Republic.Steven G. Bird, and Edward Loper.
2004.
NLTK: TheNatural Language Toolkit, In Proceedings of 42ndMeeting of the Association for Computational Lin-guistics (Demonstration Track), Barcelona, Spain.Sumiyo  Nishiguchi.
2008.
Continuation-based  CCGof  Japanese  Quantifiers.
In  Proceeding  of  6thICCS,  The Korean  Society of  Cognitive Science,Seoul, South Korea.Taneth  Ruangrajitpakorn, Wasan.
na  Chai, PrachyaBoonkwan,  Montika  Boriboon,  and  Thepchai.Supnithi.
2007.
The Design of Lexical Informationfor Thai  to English MT,  In  Proceeding of  SNLP2007, Pattaya, Thailand.Vee Satayamas, and Asanee Kawtrakul.
2004.
Wide-Coverage  Grammar  Extraction  from  Thai  Tree-bank.
In Proceedings of Papillon 2004 Workshopson  Multilingual  Lexical  Databases,  Grenoble,France.Wojciech  Buszkowski, Witold Marciszewski, and Jo-han van Benthem, ed.,  Categorial Grammar, JohnBenjamin, Amsterdam, 1998.Yu Jiangsheng.
2000.
Categorial Grammar based onFeature Structures, dissersion in In-stitute of Com-putational Linguistics, Peking University.101Appendix AType CG Category Type CG Category Type CG CategoryConjoiner ws/s Verb (s\np)/ws Function word ((s\np)\(s\np))/(np\np)Conjoiner ws/(s/np) Verb, Adjective (s\np)/pp Function word ((s\np)\(s\np))/((s\np)\(s\np))Function word spnum Determiner (s\np)/num Verb ((s\np)/ws)/ppParticle, Adverb s\s Verb, Adjective (s\np)/np Verb ((s\np)/ws)/npVerb s\np/(s\np)/npFunction word, Verb,Adverb, Auxiliary verb (s\np)/(s\np)Adverb, Auxiliaryverb ((s\np)/pp)\((s\np)/pp)Verb s\np Function word (s\np)/(np\np) Verb ((s\np)/pp)/npFunction word, Particle s/s Auxiliary verb (s\np)/((s\np)/np)Function word,Adverb ((s\np)/pp)/((s\np)/pp)Function word s/np Conjunction (s/s)/s Auxiliary verb ((s\np)/np)\((s\np)/np)Auxiliary verb s/(s/np) Function word (s/s)/np Verb ((s\np)/np)/npSentence s Function word (s/s)/(s/np) Verb ((s\np)/np)/(s\np)Conjoiner pp/s Classifier (np\np)\num Adverberb ((s\np)/(s\np))\((s\np)/(s\np))Conjoiner pp/npFunction word, Adverb,Auxiliary verb (np\np)\(np\np) Function word ((np\np)\(np\np))/npConjoiner pp/(s\np) Classifier (np\np)/spnum Conjoiner ((np\np)\(np\np))/(np\np)Function word num Function word (np\np)/sAdverb, Auxiliaryverb ((np\np)/pp)\((np\np)/pp)Classifier np\num Determiner (np\np)/numAdverb, Functionword ((np\np)/pp)/((np\np)/pp)Adjective np\np Adjective, Conjoiner (np\np)/np Auxiliary verb ((np\np)/np)\((np\np)/np)Noun, Pronoun np/pp Function word (np\np)/(s\np) Conjoiner ((np/pp)\(np/pp))/(np/pp)Adjective, Determiner np/npClassifier, Function word,Adverb, Auxiliary verb (np\np)/(np\np) Verb (((s\np)\np)Function word np/(s\np) Auxiliary verb (np\np)/((np\np)/np) Verb (((s\np)/ws)/pp)/npAuxiliary verb np/(np/np) Adjective, Determiner (np/pp)\(np/pp) Conjoiner (((s\np)/pp)\((s\np)/pp))/((s\np)/pp)Function word np/((s\np)/np) Determiner (np/pp)/(np/pp) Function word (((s\np)/pp)\((s\np)/pp))/(((s\np)/pp)\((s\np)/pp))Noun, Pronoun np Classifier ((s\np)\(s\np))\num Verb (((s\np)/pp)/np)/npConjunction (s\s)/s Classifier ((s\np)\(s\np))/spnum Function word (((s\np)/pp)/np)/(((s\np)/pp)/np)Adverb, Auxiliary verb (s\np)\(s\np)Function word ((s\np)\(s\np))/np Verb (((s\np)/np)/(s\np))/ppConjoiner ((s\np)\(s\np))/(s\np) Conjoiner (((np\np)/pp)\((np\np)/pp))/((np\np)/pp)102
