User Specification of Syntactic Case Frames in TELI,A Transportable, User-Customized Natural Language ProcessorBruce W.  Ba l la rdAT&T Bell Laborator ies600 Mounta in  AvenueMurray  Hi l l ,  NJ 079741.
IntroductionIn this paper, we present methods that allow theusers of a natural anguage processor (NLP) to define,inspect, and modify any case frame informationassociated with the words and phrases known to thesystem.
An implementation f this work forms a criticalpart of the Transportable English-Language Interface(TELI) system.
However, our techniques have enabledcustomization capabilities largely independent of thespecific NLP for which information is being acquired.The primary goal of the syntactic acquisitions ofTELI is to redress the fact that many NL prototypeshave failed (1) to make known to users exactly whatinputs are allowed (e.g.
what words and phrases aredefined) and (2) to meet the needs of a given user orgroup of users (e.g.
appropriate vocabulary, syntax, andsemantics).
Experience has shown that neither users norsystem designers can predict in advance all the words,phrases, and associated meanings that will arise inaccessing a given database (cf.
Tennant, 1977).
Thus, wehave chosen to make TELl "transportable" in anextreme sense, where customizations may be performed(1) by end users, as opposed to computer professionals,and (2) at any time during English processing.The current prototype of TELI, which runs on aSymbolics Lisp Machine, derives from work at DukeUniversity on the LDC project (Ballard, 1982; Ballard,1984; Ballard, Lusth, and Tinkharn, 1984; Ballard andTinkham, 1984).
The top-level menu of TELl, and alsoa sample snapshot of a session with TELl, which maygive the flavor of how the System operates, are shown inFigure 1.
A discussion of semantic acquisitionsappeared in Baltard and Stumberger (1986).2.
The Importance of Case Frame InformationFollowing Ballard and Tinkham (1984), TELIseeks to enable domain-independent E glish processingby maintaining detailed case frame information aboutthe phrase types provided for by the system.
Forexample, when accessing a restaurant database, thesystem would know not only that "serve" is a transitiveverb but also that it requires objects of type Restaurantas subject and either Food or Meal as object.
Thus, if"Japanese" is known to be a type of Food, and "lunch" aMeal, then the system would accept"Which restaurants serve lunch?
""How many restaurants serve Japanese food?
"and reject....
Which meals serve Japanese food?
"* "How many meals serve a restaurant?
"As a more elaborate xample, suppose we are accessinginformation about researchers at Bell Labs, and we ask"Which manager does the newest speech employeenot in building two report to?
"The exact phrase types involved in the above input areVerb Phrase: (employee report nil nil to manager)Prepositional Phrase: (employee in building)Noun-Noun Phrase: (project employee)where "nil" denotes unfilled optional slots for directobject and particle.
Adverbials ("not") and inflections ofsingle-word modifiers ("newest") are handled bymechanisms separate from those associated with whatwe are calling phrase types (see Section 9).As suggested above, we treat the noun beingmodified by a prepositional phrase as an argument of themodifier in question (e.g "in").
Thus, departing frommore conventional treatments, our "head noun" is partof the prepositional case frame, which thereforecomprises three rather than two slots.
Similarly,adjective phrase case frames comprise four rather thanthree slots (see Section 5).
Our syntactic and semantictreatment of prepositional phrases is suggested by the"Intermediate Representation" shown in Figure 1.3.
Situations In Which Case Frames May Be ConsideredThere are presently five situations in TELI whereusers are able to examine and possibly modify syntacticcase frames.
The first of these occurs during initialcustomization, when the system first confronts a new4545El,IT.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
-ZL~---- == .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
_~NOUN NOT PEL.............. ~..~<:.-~ .
.... -~ .
.
.
.
.
.
.
.
.
.
.
.. EMPLIOYEE PRE~-PH ','EP6 FPE;:' :,u} ar',3.......... .................. .OIRK ol, !
oub,t.it, l ...... " ....................... ?
NIJUN NI)UNU,qL S P E\[E C HOEPflRITIIENT ?1~25Engl i sh  Input :Nhich employees not in department 11225 are Norking on speechI n te rna l  Representation:(EMPLOYEE (VERBINFO (EMPLOYEE WORK NIL NIL OM PROJECT)(SUBJ ?
)(ARG (PROJECT (= SPEECH))))(NOT (PREPINFO (EMPLOYEE I~ DEPORTMENT)(SUBJ ?
)(BRG (DEPARTMENT (= 11225))))))Olgebra Query:(SELECT(TJOIN mh-nl(name) = project-info(emp))(name org proj)(and (!= org 11225)(= pro j  ' speech) ) )Answer: ( ROJEC.I EO):.
,,MEBaCHENKO \[1138~ISPEECH ITZPBTRICK I I t3841~Figure 1: Sample Display Screen; Top-Level Menu of TEL1What ' s  Your  P leasure?,~\]n$~,,icr- 19 I~!u65tiot\]Edit the La:;L Input,Print FIar:,~.
)r~_:cFrl.ltl I;'iCL-{E, i?l: thc NLF'Es:il.E;?~qir, a I~,tl:st,_~lrlizat.i,<,FiUocabularvq >.,'n ta ;,;SF.Krqant ic~56cneral Info.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Clear ScreenEdit 61obal Flags'~av~;/Ret.riev~ 5e:ssiorldatabase.
The remaining four, which concern thecentral English processing mode of TEL1 relevant tothis paper, are as fellows.When explicitly requested by the user.
When logging onto the system, or at a later time, uscrs can ask whatwords and phrases are associated with a particulardomain object.
This contributes to the habitability ofthe interface.When adding new vocabulary items.
For example, if theuser specifies "open" as an adjective, the system asks forits associated case frames.When attempting to recover front a parsing failure.
Forexample, if a sentence that the system cannot parsecontains the word "with", the system will offer to showthe user all existing prepositional triples of the formEntity-with-Fntity.
This permits the user to ascertainwhether the parsing failure was caused by missing caseframe information or for some other reason.
If theproblem is due to missing case frame information, theuser can add it, then have the system retry the input.When semantic information is being considered.
Usersmay ask to examine or modify current definitions ofprepositional phrases, verb phrases that take "up" as aparticle, and so forth.
To do so, the user first specifiesthe syntactic relationships of the phrases of interest.As shown below, the manner in which the user specifiesa phrase or range of phrases is independent of thereason the case frame information is being sought.4.
Principles Behind Case Frame SpecificationsThe primary criteria our methods of case framespecification are designed to meet are:To be independent of the specific NLP that information isbeing supplied to.
This permits us to alter or augmentthe underlying case frames used by the parser withouthaving to change any of the actual code responsible foracquiring phrasal compatibilities from the user.
Forinstance, we have made several changes in the wayrelational nouns like "classmate" are processed, withoutany changes to the customization modules.To be fully data-driven.
Our knowledge acquisitionmodules provide general capabilities for a large class ofphrase types, but they know nothing specific about verbphrases, etc.
This is our principal method of achievingthe previous criterion.
At present, about two pages ofspecifications of a form shown below are used to driveTELI 'a knowledge acquisition component.To be driven by data which can in principal be inferredfrom the underlying grammar.
This means that anychanges to the grammar will be automatically reflectedin the modules that acquire case frame information.
Atpresent, about half of the two pages of data that driveour syntactic knowledge acquisition module are takendirectly from the grammar.In addition to the above criteria, which relate toautomating the process of customizing an NLP, anadditional human factors criterion is to have types of455information which function similarly, from the user'sstandpoint, appear similar as presented by the system.Thus, output formats do not always reflect howinformation is stored and manipulated by the system.5.
Defining the User Interface to Case FramesAt present, TEL I  provides for five phrase types:Adjective Phrase:e.g.
researchers associated with TEL1Noun-Modifier Phrase:e.g.
the COLING presentationsVerb Phrase:e.g.
employees working with BrachmanPrepositional Phrase:e.g.
the researchers in Marcus' departmentRelational Noun Phrase:e.g.
the associates of Litman,the salary of SmithIn discussing how actual case frame acquisitions aredone, we wilt find it convenient o give in detail all theinformation associated with one of the phrase typesprovided for by the system grammar.
For this purpose,we have chosen to consider adjective phrases, since thesituations they involve are fairly representative.
Theactual system provides somewhat more sophisticatedcapabilities than what we have space to describe here,especially in its treatment of verb phrases.Before proceeding, we note that the actual datastructures used in TEL l  differ slightly from thosepresented here, although they contain precisely the sameinformation.
Also, we mention that our use of the term"interface designer" reflects our belief that most of thejob about to be described can be done by a trained userof the system, as opposed to the actual system builders.Before TELI  is supplied with phrase typeinformation, it will have been given lexical informationabout each part of speech recognized by the underlyinggrammar.
Parts of speech are also classified as either"open" or "closed", the former enabling the user tosupply new words of that type.
For example, the systemdesigner might have specifiedOpen (adjective, noun, verb .... )Closed = (article, prep, ...)This information is used by the acquisition module indeciding which case frame slots may be filled withvocabulary items not already in the system lexicon.As a first step in telling the system about phrasetypes, the interface designer must indicate for each caseframe slot (1) a name to be used inside the system toidentify this slot, (2) an appropriate f i l ler  type, and (3)an external name to be used as a label in system output.For adjective phrases this might be given as456(adjinfo(head entity "Subject")(adj adjective "Adjective")(prep prep "Preposition")(obj entity "Object"))where "adjinfo" is an arbitrary symbol used internally toreference adjective phrase case frames.
Slot names(head, adj, prep, obj) are arbitrary; f i l ler  types (entity,adj, prep) generally correspond to parts of speech,although "entity" denotes the subset of nouns thatcomprise the primitive object types of the domain athand.
For example, in a building domain, Room mightbe a basic object type (entity), while "office" is merely anoun that refers to some of the objects of type Room.Finally, extenTal names ("Subject" etc.)
may be anystring useful in identifying a case role.Next, the interface designer specifies an arbitrarynumber of templates which the system will seek tomatch against a user's English-like case framespecification.
For example,(adjinfo (a Head can be Adj Prep an Obj))enables the system to recognize a specification such as"a room can be adjacent to a corridor"as a reference to an adjective phrase case frame.
Recallthat this information is given by the interface designerand does not define, but merely reflects, thegrammatical coverage provided by the underlyingparser.
Note that case frame templates are specified interms of case frame labels rather than parts of speech.This allows transposing the etements of a case framecontaining two or more elements of the same type.In the event that the interface designer wishes tospecify optional items, (s)he can either give multiplespecifications or denote optionality within parentheses.Thus, the verb phrase specification(subj verb (obj) (part) (prep obj))will expand into eight patterns having from two to sixelements each.Since the interface designer will have specifiedslot names for each type of case frame, the system caneasily detect the presence of "noise" words.
In addition,small matters such as the equivalence of "a" and "an"must be taken care of, and the interface designer doesthis be a giving a translation map such asNoise-Translations = ((an a) (the a))which instructs the system to make the indictedreplacements in both an English-like specification to bematched and the internal patterns.
It is not necessarythat all noise words be present in the system dictionary.For example, "can" does not presently appear in thecontext of our question-answering applications.6.
A User's View of Case Frame SpecificationThere are two ways in which a user may designatewhich case frame information is of interest, namely (1)by menu,  and (2) by English-like specification.
Theformer is straightforward, while the latter is moreconvenient, and more interesting.In specification by menu, the user first indicates aphrase type to be inquired about, and is then instructedby the system to provide a filler for each slot in theassociated case frames.
For example, to find out whatdomain objects can be "in" a county, a user would makethe selections indicated in Figure 2.
Since our caseframes allow both the head-noun and argument-of-preposition slots to be filled with any basic object typeof the domain at hand, the second and fourth menuscontain the same options.
The internal list that resultsfrom these specifications i  essentiallyPhrase Type: Prepositional PhraseHead Noun: (all)Preposition: inObject: countyAs suggested in Figure 2, during menu specification, thesystem considers in turn each case slot of the phrasetype in question and, for each of them, presents to theuser for selection a list of current fillers, along with anoption to "look at all".
For slots whose filler type iseither an open category, or a closed category havingpossible fillers not presently being listed, an option toselect some "other" filler is included.
Finally, foroptional phrase elements (e.g.
direct object of a vcrb),an option appears that allows the user to select "nonc".In English-like spccification, the user typcs aphrase that indicates each desired slot value, notnecessarily in the order they appear in internally.Appropriate noise words may appear, and "?"
may beused as a "wildcard" to indicate an interest in allpossible values.
For example, the sample specificationgiven above by menu could be indicated by"a ?
can be in a county"As with menu specification, it is possible for the user tointroduce new vocabulary.
For instance, if the italicizeditems Were new in the specifications"an employee can report to a manager""an employee can be rerponsible for a project""an employee can be the supervisor of a project"the system would have sufficient information to find aunique match among the patterns stored.
In thesesituations, the system will have automaticallydetermined the part of speech of the new word.Although our use of "?"
may seem artificial in theexample above, when compared against a more fluentmethod of inquiry such as "what can be in a county", itallows any case frame slot to be inspected, not just thoseslots that are filled with nominals.
For example, a usermight specify"a city can be ?
a county"to find ali prepositions linking "city" with "county", or"an employee can ?
a project ?
"to find all verb-particle pairs connecting "employee"with "project".
We prefer to provide a small number ofsimple and powerful mechanisms, even though othermethods might appear preferable in some situations.For the readcr whose aesthetics clif\[cr from ours, wenote that alternate phrasings can bc provided for bysimple modifications to the algorithm given in Section 7.Unl ike menu specification, English-likespecification allows certain ambiguities to arise,especially when the system designer has chosen topermit terse forms with few or no noise words.
Forexample, the respective absence of the noise words "can"and "can be" in the specifications"employee responsible for project""employee report to manager"makes it impossible for the system to decidc whether thenew word is an adjectivc or a verb.
In such situations,Examine Inf'o fo r  Some:Adjective PhraseNoun-l%difier Phrase-l..--Pr-epositional Phr'a >eVerb I~ hra'_=.eFur, ctionat Noun Phrasr:.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Look exhau~.t.iveJy at .
.
.
.=========================\[ ret.urrl \]Head Noun(o f "  P rep  Phrase),ADDRESSCITYCOUNTYFOODPHOHERES T,'~UR,qI'.IT-D---(all of these)(,qbort!
)P repos i t ion(of" Prep Phrase)\[ So fa r :  (a l l )  .
.
.
\]INWIlt l(other)(tlbor t!
)Ar( j t lment of Prepos i t ion(of Prep Phrase)\[ So ram (al l )  IIq .
.
.
\],qOORESSCITY-----------.,-~ C OUIqT YFDODPHONEREST4UF.,'Ar',IT.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
(all of t,k, cs,:)(,qt:,ort bFigure 2: Menu Requests  to See What Objects Can Be "in" a "county"457the system constructs a suitable menu, which for theabove specifications would be roughlyWhat  type  o f  in fo rmat ion  are  you  ( l i v inq?- t)erb Phra -~Pat ' t  i ci e - - -gt"dinarv 9e:rb Pt-,ras:e?hdject.ive Phrase.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
- (F ;F ;7 - , - s -  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.In the other extreme, it is possible that none of thestored patterns match the user's specification, in whichcase the system requires the user either to paraphrase orto resort to menu specification.In our experience, English-like specificationyields a unique match about 80 percent of the time;more than one match about 15 percent of the time; andno matches about 5 percent of the time.
The mostfrequent situation in which a multiple match occursconcerns the possibility that a preposition appearing in averb phrase is a particle.
For example, if the user types"an employee can pick a project up"then "up" is known to be a particle by its position?
Ifinstead the user were to type"an employee can pick up a project"then the system will need to determine whether "up" is aparticle.
Although we generally aw)id yes-no questions,as discussed below, we decided to allow one in thisfrequent and predictable situation, as indicated byI Canan employee  can work  fo r  a managerbe paraphrased  asan em~ e.V~e_can wot'k a m ~ ( o r- - \ [  - -  "( ~: 5,. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Finally, it is useful to allow the system to presentthe user with relevant information that the systemknows it will need, rather than wait (and hope) for theuser to offer it.
As a first example, suppose the systemhas failed to parse the input"Which corridor is Stumberger's office adjacent o'?
"and the user accepts tile system's offer to provide helpin tracking down the problem.
Since the word"adjacent" is an adjective, and adjectives are known tohave phrases associated with them, the system willsupply all current information about those adjectivephrases having "adjacent" in the adj slot and leaving tileremaining slots unspecified.
That is, the system willrespond as though the user has specifiedPhrase Type: Adjective PhraseHead Noun: (all)Adjective: adjacentPreposition: (all)Object: (all)4587.
How English-Like Specifications are ProcessedWhen an English-Like Specification is receivedfrom the user, the system must (1) determine whatphrase type is being dealt with; (2) detect any newwords; and (3) account for any unspecif ied (wildcard)case slots.
As an example, suppose a user wants to knowwhat things can be "associated with" an employee, andsuppose further that the word "associated" is not yetknown to the system.
In this case, the system willnaturally know of nothing that can be "associated with"an employee, but will give the user an opportunity toadd to its knowledge.
If tile user were to typean employee can be associated with a ?this specification is first is scanned and turned intoa employee can be ??
with a ?where "??"
marks the position of all unknown word and"'~" continues to denote a wildcard slot.
Note that (1) a"noise translation" from Section 5 has been used for"an", and (2) the noise words "can" and "be" have not yetbeen removed, since they may act  as content  words  in apattern for something ()tiler than an adjective phrase.The next step is to substitute part-of-speech labelsfor each word in the partially processed specification.Only those parts of speech that tile system knows arerelevant, as indicated by the information supplied by theinterface designer as shown above, are included (e.g.
%"is not replaced by "article").
Thus, tile system convertstile structure shown above intoa (noun entity) can be ??
(prep) a ??
at which point an attempt can be made to match tileinternal patterns that represent the acceptable caseframe specifications.The pattern matching that occurs at this point issimple, where?
matches any case slot??
matches any "open" category case slotx matches x(x y ...) matches any of x, y ....In particular, the single match found for the structureshown above isa entity can be adj prep a entitywhich is known to be associated with adjective phrases(since it was defined for that purpose).At  this point, the intermediate structurecontaining the ??
marker is re-examined and comparedwith the original specification the user typed; the user isasked to confirm that "associated" is indeed a newadjective; and the lexicon update routine is invoked toinsert "associated" into the lexicon as an adjective.Next, the system strips noise words and so the caseframes to be examined are indicated byPhrase Type: Adjective PhraseHead Noun: employeeAdjective: associatedPreposition: withObject: (all)Finally, the system presents a l-dimensional mentt,similar to that shown below in Figurc 3b, which allowsthe user to specify what things an employee can beassociated with.8, Display of Relevant hfformat ionThe formats that we have chosen for TEL l  todisplay the current case frame iuformation relevant to auser's specification are based on the desiresI.
to allow information to bc inspected and updatedsimultaneously, and2.
to  min imize  the  number  of spec i f i c  menu t y/)espresented  to  the  user .In particular, thc system constucts, whenever possible, amenu in which each possible setting of unspecified caseframe values may independently be turned "on" or "off"by a mouse click.
In the current implementat ion,"whenever possible" amounts to precisely thosesituations in which no more than two case frame slotsare left unspecified.
Thus, a menu will contain choiceboxes which have from zero through two dimensions,according to the number of unspecif ied case slots.Examples appear in Figures 3a through 3c.
Note thatappropriate row and column labels, and also a suitablemenu label, must be constructed by the system.
Sincethe system has no initial domain-specific vocabulary,these menus must be formulated at run-time.When more than two case slots are unspecified,the system simply prints all existing case frames thatsatisfy the indicated constraints, supplying an initiallyfilled box for each, as indicated in Figure 3d.
Thisallows the user to remove individual case frames, andthe "Add" oplion allows information to be added.Although we have chosen to avoid asking literalyes-no questions whenever possible, largely because ofthe low information content they provide, the choice-box scheme we have adopted implicitly asks a number ofsimultaneous yes-no questions.
Thus, when the userchecks the box in a menu for the preposition "with"having City as row label and County as column label,(s)he is in effect answering "yes" to the implicit question"can a city be in a county".9.
DiscussionWe now consider (a) t reatment of single-wordmodifiers, (b) phmned enhancements to case framecapabil it ies, and (c) related acquisition modules.i t i c,,,.~ 1 D  Pl-,r .
.
.
.
.
E M F'L,-,',' Upd.dt_ e EE IltO DE F'FIR 1 r'IEItT \ [ \ ]  !11\[_Pr~d;,,D~iglo,-,al Ph, ~seLEMP_LOYEE IH : _IDEPARTrlEHT \ [ \ ]IEI'IPLOYEE \[\]IrlaHnGER \[\]I IDFFICEI_PPOJ_ECT .
.
.
.
u\[E,<it \ [ \ ]  Update \ [ \ ]F~lEPRPfl.
EIT {'!
',-k':~ ~i'~t-'!
-\[!!!
: -'#i" L \] Ill :r I;E!:'QST!
'!\[\[\] H  EI!F!\[\]I'I'I \[\[i ~:~)!
\[t IE;~F~ Qf(\[l\[\] F FFF,\[\]I~\[ IIE r-if:It I:,,'F f N O \[\] N \[\] IIm,.
*,l  ~ N \[\] \[\] El \[\] I F,F~I, I \[\] \[\] \[\] \[\] \[\] IIr~:~'YEc!
N ~ \[\] \[\] O IF: ! '
~ 'UP t '  q l~o: - - , i  t i on.-~ l F'hca-~e :DEPARIPIEIIT IdlTII llfltlfli~EF,'EI'IPLUYEE III DEPAPII'IEHIIEMPLOYEE IN OFFICEEMF'I.O','EE I.lI1H DEPRRIIIEItTzfIPLOYEE I.tITH nFFIF:E-IIPLOYEE MITH PPOHEH1"IRHHGEF~' I I t  \[IEF'RRHIEHI3RO._IECT I I t  DEF'RF'rI'IEItTqdd \ [ \ ]  leet,,,-n \ [ \ ]\[\]\[\]\[\]\[\]\[\]\[\]NNFigure 3: Case Frame Display for VaryingNumber of Queried SlotsThe techniques presented in this paper, ~hich arcdirected toward case frames for multiple-word phrases,are actually used for single-word modifiers as well.Internally, one important difference is that theassociated modifier compatibil ity information ismaintained in the lexicon rather than stored intoauxiliary case frames.
A'~ an example, if the user saysthat the word "large" can modif 3 obiccts of typeDepartment and Office, onc associated lcxical entry is(larger compar large (nt department office))As with case lramcs, the user may impart compadbil it>information for single-word modifiers by either menu orEnglish-like specification.
Fhe latter is typified bya room can be largewhile an example of how the user may ask to seeeverything known about acceptable adjectivemodifications is shown in Figure 4.Several enhancements to our facilities forEnglishqike capabilitites are planned.
For instance, wenoted in section 6 that whereas the use of "?"
to denotean unspecified slot works for all parts of speech, itmight be more natural to denote unspecified norms byEX.PEHSI UE \[\] \[\]QUIET r l  \ [ \ ]:~r'Ic)' _ N  \[\]E>Ht \ [ \ ]  U\[\],JL\]te \[\]Figure 4: Modifier Information for Adjectives459"w\[aat" and possibly transpose the specificationaccordingly.
As noted previously, the question is one ofgenerality versus naturalness in specific situations;simple modifications to the algorithm given in thepreceding section would enable alternate forms.
We areconsidering whether to alter our methods of inquiry,perhaps to provide for both forms.
Anotherenhancement being considered is to permit inflectedforms, as indicated by the italicized elements ofstudents  can be fa i led  by an instructorFinally, we wish to give some feeling for thelexical and semantic acquisition facilities alluded to inthe paper.
Figure 4a gives the top-level menu pertainingto part-of-speech information.
This menu enables theuser to obtain output which as with case frameinformation allows simultaneous inspection andmodification, as i l lustrated in Figure 4c.
Word andphrase meanings are acquired similarly, and also involveeither menu or English-like specification.
As anexample of the latter, if the user has said thatan employee can work with an employeethen the system will ask what "work with" means in thissense by selecting two example employees in terms ofwhich the user is asked to define semantics.
Forexample, the system will in effect askWhat does it mean for Bob to work with Jill?at which point the user might saythe dept of Bob is equal to the dept of Jill10, Related WorkSome of the systems which, like TELI, seek toprovide for user customization within the context ofdatabase query are ASK (Thompson and Thompson1983, 1985), formerly REL (Thompson and Thompson,1975), from Caltech; INTELLECT, formerly Robot(Harris, 1977), marketed by Artif icial Intell igenceCorporation; IRUS (Bates and Bobrow, 1983; Bates,Moser, and Stallard 1984), from BBN Laboratories; TQA(Damerau, 1985), formerly REQUEST (Plath, 1976),from IBM Yorktown Heights; TEAM (Mart in et al1983; Grosz et al 1985), f rom SRI International;  andUSL (Lehmann, 1978), from IBM Heidleberg.
Otherhigh-quality domain- independent systems includeDATALOG (Hafner and Godden, 1985), from GeneralMotors Research Labs; ItAM-ANS (Hoeppner et at,1983; Wahlster, 1984), from the University of Hamburg;and PttLIQA (Bronnenberg et al 1978-1.979), fromPhilips Research.Due to the space limitations endemic toconference papers, we refer the reader to Ballard andStumberger (1986) for some substantive comparisons,largely related to semantic issues, between TEL l  andeach of TEAM,  IRUS, TQA,  and ASK.460ReferencesBallard, B.
A "Domain Class" Approach to Transportable NaturalLanguage Processing.
Cognition and Brain Theory 5, 3 (1982),269-287.Ballard, B.
The Syntax and Semantics of User-Defined Modifiers ina Transportable Natural Language Processor.
Proc.
Coling-84,Stanford University, July 1984.52-56.Ballard, B., Lusth, J.. and Tinkham, N. LDC-I: A TransportableNatural Language Processor for Office Environments.
ACMl'rcmsactions oll Office Information S3'stem.~ 2.
1 (1984), 1-23,Ballard, B. and Stumberber, D. Semantic Acquisition in TELl: ATransportable, User-Customized Natural Language Processor.Proc.
24th Annual Meeting oj" the ACL, Columbia University.June 1986.Ballard, B. and Tinkham, N. A Phrase-Structured GrammaticalFramework for Transportable Natural Language Processing.Computational Linguistics 10, 2 (1984), 81-96,Bates, M. and Bobrow, R. A Transportable Natural LanguageInterface for Information Retrieval, 6th Int.
ACM SIGIRConference, Washington.
D.C,, June 1983.Bates, M.. Moser, M. and Stallard.
D. The IRUS TransportableNatural Language \[nterface.
Proc.
First Int.
Workshop onErpert Database Systems, Kiawah Island, October 1984.Bronnenberg, W., Landsbergen.
S., 8cha, R.. Schoenmakers, W.and van Uttcren.
E. PHLIQA-I.a Question-Answering Systemfor Data-Base Consnltatioa in Natural English.
Philips tech.Rev.
38(1978-79),229-239and269-284.Damerau, F. Problems and Some Solutions in Customization ofNatural Language Database Front Ends.
ACM Transactions onOffice Information Systems 3, 2 (1985).
165-184.Grosz.
B.. Appelt, D., Martin, P. and Pereira, F. TEAM: AnExperiment in the Design of Transpartable Natural-LanguageIntrfaces.
Artificial Intelligence, to appear.Hafner, C. and Godden, C. Portability of Syntax and Semantics inDatalog.
ACM Transactions on Office Information Systems 3, 2(1985).
141-164.Harris, L. User-Oriented Database Query with the ROBOTNatural Language System.
lnt.
Journal of Man.Machine Studies9 (1977), 697-713.Hoeppner, W., Christaller.
T., Marburger, H., Morik, D., Nebel.
B.,O'Leary, M., and Wahlster.
W. Beyond Domain-Independence:Experience with the Develapment of a German LanguageAccess System to Highly Diverse Background Systems.
Proc.8th lnt.
J. Conf.
on Artificial Intelligence, Karlsruhe.
WestGermany, 1983, pp.
588-594.Johnson, T. Natural Language Conlputing, The CommercialApplications, Ovum ktd.
London.
1985.Lehmann, H. Interpretation of natural anguage in an informationsystem, lBM J. Res.
Dev.
22.5(1978).pp.
560-571.Martin, P.. Appelt, D. and Pereira, F. Transportability andGenerality in a Natural Language Interface System, Proc.
8thInt.
J. Cot(.
on Artificial Intelligence, Karlsruhe.
WestGermany, 1983, pp, 573-581.Moser, M. Domain Independent Semantic Acquisition.
BBNReport No.
5694, Research in Knowledge Representation forNatural Language Understanding, September 1984,Thompson, F. and Thompson, B, Practical Natural LanguageProcessing: The REL System as Prototype.
In Advances inComputers, Vol, 3.
M. Rubinoff and M. Yovits, Eds., AcademicPress, 1975.Thompson, B, and Thompson.
F. Introducing ASK: A SimpleKnowledgeable System, Conf.
on Applied Natural LanguageProcessing, Santa Monica, 1983.
17-24.Thompson.
B. and Thompson, F. ASK Is Transportable in Half aDozen Ways.
ACM Trans, on Office Information Systems 3, 2(1985).
185-203.Wahlster.
W. User Modets in Dialog Systems, Invited talk atCoitaL-a4, Stanford University, July 1984,
