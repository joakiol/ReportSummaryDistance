Proceedings of the ACL Interactive Poster and Demonstration Sessions,pages 109?112, Ann Arbor, June 2005. c?2005 Association for Computational LinguisticsA Flexible Stand-Off Data Model with Query Languagefor Multi-Level AnnotationChristoph Mu?llerEML Research gGmbHVilla BoschSchlo?-Wolfsbrunnenweg 3369118 Heidelberg, Germanymueller@eml-research.deAbstractWe present an implemented XML data model and anew, simplified query language for multi-level an-notated corpora.
The new query language involvesautomatic conversion of queries into the underly-ing, more complicated MMAXQL query language.It supports queries for sequential and hierarchical,but also associative (e.g.
coreferential) relations.The simplified query language has been designedwith non-expert users in mind.1 IntroductionGrowing interest in richly annotated corpora is adriving force for the development of annotation toolsthat can handle multiple levels of annotation.
Wefind it crucial in order to make full use of the po-tential of multi-level annotation that individual an-notation levels be treated as self-contained moduleswhich are independent of other annotation levels.This independence should also include the storingof each level in a separate file.
If these principles areobserved, annotation data management (incl.
leveladdition, removal and replacement, but also conver-sion into and from other formats) is greatly facili-tated.The way to keep individual annotation levels in-dependent of each other is by defining each withdirect reference to the underlying basedata, i.e.
thetext or transcribed speech.
Both sequential and hi-erarchical (i.e.
embedding or dominance) relationsbetween markables on different levels are thus onlyexpressed implicitly, viz.
by means of the relationsof their basedata elements.While it has become common practice to usethe stand-off mechanism to relate several annota-tion levels to one basedata file, it is also not un-common to find this mechanism applied for relatingmarkables to other markables (on a different or thesame level) directly, expressing the relation betweenthem explicitly.
We argue that this is unfavourablenot only with respect to annotation data management(cf.
above), but also with respect to querying: Usersshould not be required to formulate queries in termsof structural properties of data representation thatare irrelevant for their query.
Instead, users shouldbe allowed to relate markables from all levels in afairly unrestricted and ad-hoc way.
Since querying isthus considerably simplified, exploratory data analy-sis of annotated corpora is facilitated for all users,including non-experts.Our multi-level annotation tool MMAX21(Mu?ller & Strube, 2003) uses implicit relationsonly.
Its query language MMAXQL is rathercomplicated and not suitable for naive users.
Wepresent an alternative query method consisting ofa simpler and more intuitive query language anda method to generate MMAXQL queries from theformer.
The new, simplified MMAXQL can expressa wide range of queries in a concise way, includingqueries for associative relations representing e.g.coreference.2 The Data ModelWe propose a stand-off data model implemented inXML.
The basedata is stored in a simple XML file1The current release version of MMAX2 can be downloadedat http://mmax.eml-research.de.109<?xml version="1.0" encoding="US-ASCII"?><!DOCTYPE words SYSTEM "words.dtd"><words>...<word id="word_1064">My</word><word id="word_1065">,</word><word id="word_1066">uh</word><word id="word_1067">,</word><word id="word_1068">cousin</word><word id="word_1069">is</word><word id="word_1070">a</word><word id="word_1071">F</word><word id="word_1072">B</word><word id="word_1073">I</word><word id="word_1074">agent</word><word id="word_1075">down</word><word id="word_1076">in</word><word id="word_1077">Miami</word><word id="word_1078">.</word>...<word id="word_1085">she</word>...</words>Figure 1: basedata file (extract)<?xml version="1.0" encoding="US-ASCII"?><!DOCTYPE markables SYSTEM "markables.dtd"><markables xmlns="www.eml.org/NameSpaces/utterances">...<markable id="markable_116" span="word_1064..word_1078"/>...</markables>Figure 2: utterances level file (extract)which serves to identify individual tokens2 and as-sociate an ID with each (Figure 1).In addition, there is one XML file for each an-notation level.
Each level has a unique, descriptivename, e.g.
utterances or pos, and contains an-notations in the form of <markable> elements.In the most simple case, a markable only identifiesa sequence (i.e.
span) of basedata elements (Figure2).Normally, however, a markable is also associatedwith arbitrarily many user-defined attribute-valuepairs (Figure 3, Figure 4).
Markables can also bediscontinuous, like markable 954 in Figure 4.For each level, admissible attributes and their val-ues are defined in a separate annotation scheme file(not shown, cf.
Mu?ller & Strube (2003)).
Freetextattributes can have any string value, while nominalattributes can have one of a (user-defined) closed setof possible values.
The data model also supportsassociative relations between markables: Markableset relations associate arbitrarily many markableswith each other in a transitive, undirected way.
Thecoref class attribute in Figure 4 is an exam-ple of how such a relation can be used to representa coreferential relation between markables (here:markable 954 and markable 963, rest of set2Usually words, but smaller elements like morphologicalunits or even characters are also possible.<?xml version="1.0" encoding="US-ASCII"?><!DOCTYPE markables SYSTEM "markables.dtd"><markables xmlns="www.eml.org/NameSpaces/pos">...<markable id="markable_665" span="word_1064" pos="PRP$"/><markable id="markable_666" span="word_1065" pos=","/><markable id="markable_667" span="word_1066" pos="UH"/><markable id="markable_668" span="word_1067" pos=","/><markable id="markable_669" span="word_1068" pos="NN"/><markable id="markable_670" span="word_1069" pos="VBZ"/><markable id="markable_671" span="word_1070" pos="DT"/><markable id="markable_672" span="word_1071" pos="NNP"/><markable id="markable_673" span="word_1072" pos="NNP"/><markable id="markable_674" span="word_1073" pos="NNP"/><markable id="markable_675" span="word_1074" pos="NN"/><markable id="markable_676" span="word_1075" pos="IN"/><markable id="markable_677" span="word_1076" pos="IN"/><markable id="markable_678" span="word_1077" pos="NNP"/><markable id="markable_679" span="word_1078" pos=".
"/>...<markable id="markable_686" span="word_1085" pos="PRP"/>...</markables>Figure 3: pos level file (extract)<?xml version="1.0" encoding="US-ASCII"?><!DOCTYPE markables SYSTEM "markables.dtd"><markables xmlns="www.eml.org/NameSpaces/ref_exp">...<markable id="markable_953" span="word_1064" type="poss_det"/><markable id="markable_954" span="word_1064,word_1068" type="np"coref_class="set_3"/><markable id="markable_955" span="word_1070..word_1074" type="np"/><markable id="markable_956" span="word_1071..word_1073" type="pn"/><markable id="markable_957" span="word_1077" type="pn"/>...<markable id="markable_963" span="word_1085" type="pron"coref_class="set_3"/>...</markables>Figure 4: ref exp level file (extract)not shown).
Markable pointer relations associatewith one markable (the source) one or more targetmarkables in an intransitive, directed fashion.3 Simplified MMAXQLSimplified MMAXQL is a variant of the MMAXQLquery language.
It offers a simpler and more con-cise way to formulate certain types of queries formulti-level annotated corpora.
Queries are automat-ically converted into the underlying query languageand then executed.
A query in simplified MMAXQLconsists of a sequence of query tokens which arecombined by means of relation operators.
Eachquery token queries exactly one basedata element(i.e.
word) or one markable.3.1 Query TokensBasedata elements can be queried by matching reg-ular expressions.
Each basedata query token con-sists of a regular expression in single quotes, whichmust exactly match one basedata element.
The query?
[Tt]he?matches all definite articles, but not e.g.
ether or110there.
For the latter two words to also match, wild-cards have to be used:?.*[Tt]he.
*?Sequences of basedata elements can be queried bysimply concatenating several space-separated3 to-kens.
The query?
[Tt]he [A-Z].+?will match sequences consisting of a definite articleand a word beginning with a capital letter.Markables are the carriers of the actual annota-tion information.
They can be queried by meansof string matching and by means of attribute-valuecombinations.
A markable query token has the formstring/conditionswhere string is an optional regular expressionand conditions specifies which attribute(s) themarkable should match.
The most simple ?condi-tion?
is just the name of a markable level, which willmatch all markables on that level.
If a regular ex-pression is also supplied, the query will return onlythe matching markables.
The query[Aa]n?\s.
*/ref exp4will return all markables from the ref exp levelbeginning with the indefinite article.The conditions part of a markable query to-ken can indeed be much more complex.
A mainfeature of simplified MMAXQL is that redundantparts of conditions can optionally be left out, mak-ing queries very concise.
For example, the mark-able level name can be left out if the name of theattribute accessed by the query is unique across allactive markable levels.
Thus, the query/!coref class=emptycan be used to query markables from the ref explevel which have a non-empty value in thecoref class attribute, granted that only one at-tribute of this name exists.5 The same applies to thenames of nominal attributes if the value specifiedin the query unambiguously points to this attribute.Thus, the query/pn3Using the fact that meets is the default relation operator,cf.
Section 3.2.4The space character in the regular expression must bemasked as \s because otherwise it will be interpreted as a querytoken separator.5If this condition does not hold, attribute names can be dis-ambiguated by prepending the markable level name.can be used to query markables from the pos levelwhich have the value pn, granted that there is ex-actly one nominal attribute with the possible valuepn.
Several conditions can be combined into onequery token.
Thus, the query/{poss det,pron},!coref class=emptyreturns all markables from the ref exp level thatare either possessive determiners or pronouns andthat are part in some coreference set.63.2 Relation OperatorsThe whole point of querying corpora with multi-level annotation is to relate markables from differentlevels to each other.
The reference system with re-spect to which the relation between different mark-ables is established is the sequence of basedata el-ements, which is the same for all markables on alllevels.
Since this bears some resemblance to differ-ent events occurring in several temporal relations toeach other, we (like also Heid et al (2004), amongothers) adopt this as a metaphor for expressingthe sequential and hierarchical relations betweenmarkables, and we use a set of relation operatorsthat is inspired by (Allen, 1991).
This set includes(among others) the operators before, meets (de-fault), starts, during/in, contains/dom,equals, ends, and some inverse relations.
Thefollowing examples give an idea of how individualquery tokens can be combined by means of rela-tion operators to form complex queries.
The exam-ple uses the ICSI meeting corpus of spoken multi-party dialogue.7 This corpus contains, among oth-ers, a segment level with markables roughly corre-sponding to speaker turns, and a meta level contain-ing markables representing e.g.
pauses, emphases,or sounds like breathing or mike noise.
These twolevels and the basedata level can be combined to re-trieve instances of you know that occur in segmentsspoken by female speakers8 which also contain apause or an emphasis:?
[Yy]ou know?
in (/participant={f.*} dom /{pause,emphasis})6The curly braces notation is used to specify several OR-connected values for a single attribute, while a comma outsidecurly braces is used to AND-connect several conditions relatingto different attributes.7Obtained from the LDC and converted into MMAX2 for-mat, preserving all original information.8The first letter of the participant value encodes thespeaker?s gender.111Relation operators for associative relations (i.e.markable set and markable pointer) are nextpeer,anypeer and nexttarget, anytarget, re-spectively.
Assuming the sample data from Section2, the query/ref_exp nextpeer:coref_class /ref_expretrieves pairs of anaphors (right) and their direct an-tecedents (left).
The query can be modified to/ref_exp nextpeer:coref_class (/ref_exp equals /pron)to retrieve only anaphoric pronouns and their directantecedents.If a query is too complex to be expressed as a sin-gle query token sequence, variables can be used tostore intermediate results of sub-queries.
The fol-lowing query retrieves pairs of utterances (incl.
thereferring expressions embedded into them) that aremore than 30 tokens9 apart, and assigns the resulting4-tuples to the variable $distant utts.
(/utterances dom /ref_exp) before:31- (/utterances dom /ref_exp)-> $distant_uttsThe next query accesses the second and last columnin the temporary result (by means of the zero-basedcolumn index) and retrieves those pairs of anaphorsand their direct antecedents that occur in utterancesthat are more than 30 tokens apart:$distant_utts.1 nextpeer:coref_class $distant_utts.34 Related WorkIn the EMU speech database system (Cassidy &Harrington, 2001) the hierarchical relation betweenlevels has to be made explicit.
Sequential and hi-erarchical relations can be queried like with simpli-fied MMAXQL, with the difference that e.g.
for se-quential queries, the elements involved must comefrom the same level.
Also, the result of a hierarchi-cal query always only contains either the parent orchild element.
The EMU data model supports an as-sociation relation (similar to our markable pointer)which can be queried using a => operator.Annotation Graphs (Bird & Liberman, 2001)identify elements on various levels as arcs connect-ing two points on a time scale shared by all lev-els.
Relations between elements are thus also rep-resented implicitly.
The model can also express a9A means to express distance in terms of markables is notyet available, cf.
Section 5.binary association relation.
The associated Annota-tion Graph query language (Bird et al, 2000) is veryexplicit, which makes it powerful but at the sametime possibly too demanding for naive users.The NITE XML toolkit (Carletta et al, 2003) de-fines a data model that is close to our model, al-though it allows to express hierarchical relations ex-plicitly.
The model supports a labelled pointer re-lation which can express one-to-many associations.The associated query language NXT Search (Heidet al, 2004) is a powerful declarative language forquerying diverse relations (incl.
pointers), support-ing quantification and constructs like forall andexists.5 Future WorkWe work on support for queries like ?pairs of re-ferring expressions that are a certain number of re-ferring expressions apart?.
We also want to includewild cards and proximity searches, and support forautomatic markable creation from query results.AcknowledgementsThis work has been funded by the Klaus TschiraFoundation, Heidelberg, Germany.ReferencesAllen, James (1991).
Time and time again.
International Jour-nal of Intelligent Systems, 6(4):341?355.Bird, Steven, Peter Buneman & Wang-Chiew Tan (2000).
To-wards a query language for annotation graphs.
In Pro-ceedings of the 2nd International Conference on Lan-guage Resources and Evaluation, Athens, Greece, 31May-June 2, 2000, pp.
807?814.Bird, Steven & Mark Liberman (2001).
A formal framework forlinguistic annotation.
Speech Communication, 33:23?60.Carletta, Jean, Stefan Evert, Ulrich Heid, Jonathan Kilgour,J.
Robertson & Holger Voormann (2003).
The NITEXML toolkit: flexible annotation for multi-modal lan-guage data.
Behavior Research Methods, Instruments,and Computers, 35:353?363.Cassidy, Steve & Jonathan Harrington (2001).
Multi-level anno-tation in the EMU speech database management system.Speech Communication, 33:61?78.Heid, Ulrich, Holger Voormann, Jan-Torsten Milde, Ulrike Gut,Katrin Erk & Sebastian Pado (2004).
Querying both time-aligned and hierarchical corpora with NXT search.
InProceedings of the 4th International Conference on Lan-guage Resources and Evaluation, Lisbon, Portugal, 26-28May, 2004, pp.
1455?1458.Mu?ller, Christoph & Michael Strube (2003).
Multi-level an-notation in MMAX.
In Proceedings of the 4th SIGdialWorkshop on Discourse and Dialogue, Sapporo, Japan,4-5 July 2003, pp.
198?207.112
