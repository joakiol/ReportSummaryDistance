Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 169?176,Sydney, July 2006. c?2006 Association for Computational LinguisticsDependency Parsing of Japanese Spoken MonologueBased on Clause BoundariesTomohiro Ohno?a) Shigeki Matsubara?
Hideki Kashioka?Takehiko Maruyama] and Yasuyoshi Inagaki\?Graduate School of Information Science, Nagoya University, Japan?Information Technology Center, Nagoya University, Japan?ATR Spoken Language Communication Research Laboratories, Japan]The National Institute for Japanese Language, Japan\Faculty of Information Science and Technology, Aichi Prefectural University, Japana)ohno@el.itc.nagoya-u.ac.jpAbstractSpoken monologues feature greater sen-tence length and structural complexitythan do spoken dialogues.
To achieve highparsing performance for spoken mono-logues, it could prove effective to sim-plify the structure by dividing a sentenceinto suitable language units.
This paperproposes a method for dependency pars-ing of Japanese monologues based on sen-tence segmentation.
In this method, thedependency parsing is executed in twostages: at the clause level and the sen-tence level.
First, the dependencies withina clause are identified by dividing a sen-tence into clauses and executing stochasticdependency parsing for each clause.
Next,the dependencies over clause boundariesare identified stochastically, and the de-pendency structure of the entire sentenceis thus completed.
An experiment usinga spoken monologue corpus shows thismethod to be effective for efficient depen-dency parsing of Japanese monologue sen-tences.1 IntroductionRecently, monologue data such as a lecture andcommentary by a professional have been consid-ered as human valuable intellectual property andhave gathered attention.
In applications, such asautomatic summarization, machine translation andso on, for using these monologue data as intel-lectual property effectively and efficiently, it isnecessary not only just to accumulate but also tostructure the monologue data.
However, few at-tempts have been made to parse spoken mono-logues.
Spontaneously spoken monologues in-clude a lot of grammatically ill-formed linguisticphenomena such as fillers, hesitations and self-repairs.
In order to robustly deal with their extra-grammaticality, some techniques for parsing of di-alogue sentences have been proposed (Core andSchubert, 1999; Delmonte, 2003; Ohno et al,2005b).
On the other hand, monologues also havethe characteristic feature that a sentence is gen-erally longer and structurally more complicatedthan a sentence in dialogues which have been dealtwith by the previous researches.
Therefore, fora monologue sentence the parsing time would in-crease and the parsing accuracy would decrease.
Itis thought that more effective, high-performancespoken monologue parsing could be achieved bydividing a sentence into suitable language units forsimplicity.This paper proposes a method for dependencyparsing of monologue sentences based on sen-tence segmentation.
The method executes depen-dency parsing in two stages: at the clause leveland at the sentence level.
First, a dependency rela-tion from one bunsetsu1 to another within a clauseis identified by dividing a sentence into clausesbased on clause boundary detection and then ex-ecuting stochastic dependency parsing for eachclause.
Next, the dependency structure of the en-tire sentence is completed by identifying the de-pendencies over clause boundaries stochastically.An experiment on monologue dependency pars-ing showed that the parsing time can be drasti-1A bunsetsu is the linguistic unit in Japanese that roughlycorresponds to a basic phrase in English.
A bunsetsu con-sists of one independent word and more than zero ancillarywords.
A dependency is a modification relation in which adependent bunsetsu depends on a head bunsetsu.
That is, thedependent bunsetsu and the head bunsetsu work as modifierand modifyee, respectively.169?????????????
????????????????????????????????????????
?Dependency relation whose dependent bunsetsu is not the last bunsetsu of a clause?Dependency relation whose dependent bunsetsu is the last bunsetsu of a clause?Bunsetsu?Clause boundary?ClauseThe public opinion poll that the Prime Minister?s Office announced the other day indicates thatthe ratio of people advocating capital punishment is nearly 80%the otherdaythat thePrimeMinister?sOfficeannounced Thepublicopinionpollindicatesthatcapitalpunishmentadvocating the ratioof peoplenearly80%isFigure 1: Relation between clause boundary anddependency structurecally shortened and the parsing accuracy can beincreased.This paper is organized as follows: The nextsection describes a parsing unit of Japanese mono-logue.
Section 3 presents dependency parsingbased on clause boundaries.
The parsing experi-ment and the discussion are reported in Sections4 and 5, respectively.
The related works are de-scribed in Section 6.2 Parsing Unit of Japanese MonologuesOur method achieves an efficient parsing by adopt-ing a shorter unit than a sentence as a parsing unit.Since the search range of a dependency relationcan be narrowed by dividing a long monologuesentence into small units, we can expect the pars-ing time to be shortened.2.1 Clauses and DependenciesIn Japanese, a clause basically contains one verbphrase.
Therefore, a complex sentence or a com-pound sentence contains one or more clauses.Moreover, since a clause constitutes a syntacti-cally sufficient and semantically meaningful lan-guage unit, it can be used as an alternative parsingunit to a sentence.Our proposed method assumes that a sentenceis a sequence of one or more clauses, and everybunsetsu in a clause, except the final bunsetsu,depends on another bunsetsu in the same clause.As an example, the dependency structure of theJapanese sentence:?????????????????????????????????????????????????????
?The public opinionpoll that the Prime Minister?s Office announcedthe other day indicates that the ratio of peopleadvocating capital punishment is nearly 80%)is presented in Fig.
1.
This sentence consists offour clauses:?
??????????????
(that thePrime Minister?s Office announced the otherday)?
??????????
(The public opinionpoll indicates that)?
??????????
(advocating capitalpunishment)?
???????????????????
(the ratio of people is nearly 80%)Each clause forms a dependency structure (solidarrows in Fig.
1), and a dependency relation fromthe final bunsetsu links the clause with anotherclause (dotted arrows in Fig.
1).2.2 Clause Boundary UnitIn adopting a clause as an alternative parsing unit,it is necessary to divide a monologue sentenceinto clauses as the preprocessing for the follow-ing dependency parsing.
However, since somekinds of clauses are embedded in main clauses,it is fundamentally difficult to divide a mono-logue into clauses in one dimension (Kashioka andMaruyama, 2004).Therefore, by using a clause boundary anno-tation program (Maruyama et al, 2004), we ap-proximately achieve the clause segmentation ofa monologue sentence.
This program can iden-tify units corresponding to clauses by detectingthe end boundaries of clauses.
Furthermore, theprogram can specify the positions and types ofclause boundaries simply from a local morpho-logical analysis.
That is, for a sentence mor-phologically analyzed by ChaSen (Matsumoto etal., 1999), the positions of clause boundaries areidentified and clause boundary labels are insertedthere.
There exist 147 labels such as ?compoundclause?
and ?adnominal clause.?
2In our research, we adopt the unit sandwichedbetween two clause boundaries detected by clauseboundary analysis, were called the clause bound-ary unit, as an alternative parsing unit.
Here, weregard the label name provided for the end bound-ary of a clause boundary unit as that unit?s type.2The labels include a few other constituents that do notstrictly represent clause boundaries but can be regarded as be-ing syntactically independent elements, such as ?topicalizedelement,?
?conjunctives,?
?interjections,?
and so on.170Table 1: 200 sentences in ?Asu-Wo-Yomu?sentences 200clause boundary units 951bunsetsus 2,430morphemes 6,017dependencies over clause boundaries 942.3 Relation between Clause Boundary Unitsand Dependency StructuresTo clarify the relation between clause boundaryunits and dependency structures, we investigatedthe monologue corpus ?Asu-Wo-Yomu 3.?
In theinvestigation, we used 200 sentences for whichmorphological analysis, bunsetsu segmentation,clause boundary analysis, and dependency pars-ing were automatically performed and then modi-fied by hand.
Here, the specification of the parts-of-speech is in accordance with that of the IPAparts-of-speech used in the ChaSen morphologi-cal analyzer (Matsumoto et al, 1999), the rulesof the bunsetsu segmentation with those of CSJ(Maekawa et al, 2000), the rules of the clauseboundary analysis with those of Maruyama etal.
(Maruyama et al, 2004), and the dependencygrammar with that of the Kyoto Corpus (Kuro-hashi and Nagao, 1997).Table 1 shows the results of analyzing the 200sentences.
Among the 1,479 bunsetsus in the dif-ference set between all bunsetsus (2,430) and thefinal bunsetsus (951) of clause boundary units,only 94 bunsetsus depend on a bunsetsu locatedoutside the clause boundary unit.
This resultmeans that 93.6% (1,385/1,479) of all dependencyrelations are within a clause boundary unit.
There-fore, the results confirmed that the assumptionmade by our research is valid to some extent.3 Dependency Parsing Based on ClauseBoundariesIn accordance with the assumption described inSection 2, in our method, the transcribed sentenceon which morphological analysis, clause bound-ary detection, and bunsetsu segmentation are per-formed is considered the input 4.
The dependency3Asu-Wo-Yomu is a collection of transcriptions of a TVcommentary program of the Japan Broadcasting Corporation(NHK).
The commentator speaks on some current social is-sue for 10 minutes.4It is difficult to preliminarily divide a monologue intosentences because there are no clear sentence breaks in mono-logues.
However, since some methods for detecting sentenceboundaries have already been proposed (Huang and Zweig,2002; Shitaoka et al, 2004), we assume that they can be de-tected automatically before dependency parsing.parsing is executed based on the following proce-dures:1.
Clause-level parsing: The internal depen-dency relations of clause boundary units areidentified for every clause boundary unit inone sentence.2.
Sentence-level parsing: The dependencyrelations in which the dependent unit is the fi-nal bunsetsu of the clause boundary units areidentified.In this paper, we describe a sequence of clauseboundary units in a sentence as C1 ?
?
?Cm, a se-quence of bunsetsus in a clause boundary unit Cias bi1 ?
?
?
bini , a dependency relation in which thedependent bunsetsu is a bunsetsu bik as dep(bik),and a dependency structure of a sentence as{dep(b11), ?
?
?
, dep(bmnm?1)}.First, our method parses the dependency struc-ture {dep(bi1), ?
?
?
, dep(bini?1)} within the clauseboundary unit whenever a clause boundary unitCi is inputted.
Then, it parses the dependencystructure {dep(b1n1), ?
?
?
, dep(bm?1nm?1)}, which is aset of dependency relations whose dependent bun-setsu is the final bunsetsu of each clause boundaryunit in the input sentence.
In addition, in both ofthe above procedures, our method assumes the fol-lowing three syntactic constraints:1.
No dependency is directed from right to left.2.
Dependencies don?t cross each other.3.
Each bunsetsu, except the final one in a sen-tence, depends on only one bunsetsu.These constraints are usually used for Japanese de-pendency parsing.3.1 Clause-level Dependency ParsingDependency parsing within a clause boundaryunit, when the sequence of bunsetsus in an inputclause boundary unit Ci is described as Bi (=bi1 ?
?
?
bini), identifies the dependency structureSi (= {dep(bi1), ?
?
?
, dep(bini?1)}), which max-imizes the conditional probability P (Si|Bi).
Atthis level, the head bunsetsu of the final bunsetsubini of a clause boundary unit is not identified.Assuming that each dependency is independentof the others, P (Si|Bi) can be calculated as fol-lows:P (Si|Bi) =ni?1?k=1P (bik rel?
bil|Bi), (1)171where P (bikrel?
bil|Bi) is the probability that a bun-setsu bik depends on a bunsetsu bil when the se-quence of bunsetsus Bi is provided.
Unlike theconventional stochastic sentence-by-sentence de-pendency parsing method, in our method, Bi isthe sequence of bunsetsus that constitutes not asentence but a clause.
The structure Si, whichmaximizes the conditional probability P (Si|Bi),is regarded as the dependency structure of Bi andcalculated by dynamic programming (DP).Next, we explain the calculation of P (bikrel?bil|Bi).
First, the basic form of independent wordsin a dependent bunsetsu is represented by hik, itsparts-of-speech tik, and type of dependency rik,while the basic form of the independent word ina head bunsetsu is represented by hil , and its parts-of-speech til .
Furthermore, the distance betweenbunsetsus is described as diikl.
Here, if a dependentbunsetsu has one or more ancillary words, the typeof dependency is the lexicon, part-of-speech andconjugated form of the rightmost ancillary word,and if not so, it is the part-of-speech and conju-gated form of the rightmost morpheme.
The typeof dependency rik is the same attribute used inour stochastic method proposed for robust depen-dency parsing of spoken language dialogue (Ohnoet al, 2005b).
Then diikl takes 1 or more than 1,that is, a binary value.
Incidentally, the aboveattributes are the same as those used by the con-ventional stochastic dependency parsing methods(Collins, 1996; Ratnaparkhi, 1997; Fujio and Mat-sumoto, 1998; Uchimoto et al, 1999; Charniak,2000; Kudo and Matsumoto, 2002).Additionally, we prepared the attribute eil to in-dicate whether bil is the final bunsetsu of a clauseboundary unit.
Since we can consider a clauseboundary unit as a unit corresponding to a sim-ple sentence, we can treat the final bunsetsu of aclause boundary unit as a sentence-end bunsetsu.The attribute that indicates whether a head bun-setsu is a sentence-end bunsetsu has often beenused in conventional sentence-by-sentence parsingmethods (e.g.
Uchimoto et al, 1999).By using the above attributes, the conditionalprobability P (bikrel?
bil|Bi) is calculated as fol-lows:P (bik rel?
bil|Bi) (2)?= P (bik rel?
bil|hik, hil, tik, til, rik, diikl, eil)= F (bikrel?
bil, hik, hil, tik, til, rik, diikl, eil)F (hik, hil, tik, til, rik, diikl, eil).Note that F is a co-occurrence frequency function.In order to resolve the sparse data problemscaused by estimating P (bikrel?
bil|Bi) with formula(2), we adopted the smoothing method describedby Fujio and Matsumoto (Fujio and Matsumoto,1998): if F (hik, hil, tik, til, rik, diikl, eil) in formula (2)is 0, we estimate P (bikrel?
bil|Bi) by using formula(3).P (bik rel?
bil|Bi) (3)?= P (bik rel?
bil|tik, til, rik, diikl, eil)= F (bikrel?
bil, tik, til, rik, diikl, eil)F (tik, til, rik, diikl, eil)3.2 Sentence-level Dependency ParsingHere, the head bunsetsu of the final bunsetsuof a clause boundary unit is identified.
LetB (=B1 ?
?
?Bn) be the sequence of bunset-sus of one sentence and Sfin be a set of de-pendency relations whose dependent bunsetsu isthe final bunsetsu of a clause boundary unit,{dep(b1n1), ?
?
?
, dep(bm?1nm?1)}; then Sfin, whichmakes P (Sfin|B) the maximum, is calculated byDP.
The P (Sfin|B) can be calculated as follows:P (Sfin|B) =m?1?i=1P (binirel?
bjl |B), (4)where P (binirel?
bjl |B) is the probability that abunsetsu bini depends on a bunsetsu bjl when thesequence of the sentence?s bunsetsus, B, is pro-vided.
Our method parses by giving considerationto the dependency structures in each clause bound-ary unit, which were previously parsed.
That is,the method does not consider all bunsetsus lo-cated on the right-hand side as candidates for ahead bunsetsu but calculates only dependency re-lations within each clause boundary unit that donot cross any other relation in previously parseddependency structures.
In the case of Fig.
1,the method calculates by assuming that only threebunsetsus ???
(the ratio of people),?
or ????????
(is)?
can be the head bunsetsu of thebunsetsu ????????
(advocating).
?In addition, P (binirel?
bjl |B) is calculated as inEq.
(5).
Equation (5) uses all of the attributes usedin Eq.
(2), in addition to the attribute sjl , whichindicates whether the head bunsetsu of bjl is thefinal bunsetsu of a sentence.
Here, we take into172Table 2: Size of experimental data set (Asu-Wo-Yomu)test data learning dataprograms 8 95sentences 500 5,532clause boundary units 2,237 26,318bunsetsus 5,298 65,821morphemes 13,342 165,129Note that the commentator of each program is different.Table 3: Experimental results on parsing timeour method conv.
methodaverage time (msec) 10.9 51.9programming language: LISPcomputer used: Pentium4 2.4 GHz, Linuxaccount the analysis result that about 70% of thefinal bunsetsus of clause boundary units depend onthe final bunsetsu of other clause boundary units 5and also use the attribute ejl at this phase.P (binirel?
bjl |B) (5)?= P (binirel?bjl |hini , hjl , tini , tjl , rini , dijnil, ejl , sjl )= F (binirel?bjl , hini , hjl , tini , tjl , rini , dijnil, ejl , sjl )F (hini , hjl , tini , tjl , rini , dijnil, ejl , sjl )4 Parsing ExperimentTo evaluate the effectiveness of our method forJapanese spoken monologue, we conducted an ex-periment on dependency parsing.4.1 Outline of ExperimentWe used the spoken monologue corpus?
Asu-Wo-Yomu,?annotated with information on mor-phological analysis, clause boundary detection,bunsetsu segmentation, and dependency analy-sis6.
Table 2 shows the data used for the ex-periment.
We used 500 sentences as the testdata.
Although our method assumes that a depen-dency relation does not cross clause boundaries,there were 152 dependency relations that contra-dicted this assumption.
This means that the depen-dency accuracy of our method is not over 96.8%(4,646/4,798).
On the other hand, we used 5,532sentences as the learning data.To carry out comparative evaluation of ourmethod?s effectiveness, we executed parsing for5We analyzed the 200 sentences described in Section 2.3and confirmed 70.6% (522/751) of the final bunsetsus ofclause boundary units depended on the final bunsetsu of otherclause boundary units.6Here, the specifications of these annotations are in accor-dance with those described in Section 2.3.0501001502002503003504000 5 10 15 20 25 30Parsingtime[msec]Length of sentence [number of bunsetsu]our methodconv.
methodFigure 2: Relation between sentence length andparsing timethe above-mentioned data by the following twomethods and obtained, respectively, the parsingtime and parsing accuracy.?
Our method: First, our method providesclause boundaries for a sequence of bunset-sus of an input sentence and identifies allclause boundary units in a sentence by per-forming clause boundary analysis (CBAP)(Maruyama et al, 2004).
After that, ourmethod executes the dependency parsing de-scribed in Section 3.?
Conventional method: This method parsesa sentence at one time without dividing it intoclause boundary units.
Here, the probabilitythat a bunsetsu depends on another bunsetsu,when the sequence of bunsetsus of a sentenceis provided, is calculated as in Eq.
(5), wherethe attribute e was eliminated.
This conven-tional method has been implemented by usbased on the previous research (Fujio andMatsumoto, 1998).4.2 Experimental ResultsThe parsing times of both methods are shown inTable 3.
The parsing speed of our method im-proves by about 5 times on average in comparisonwith the conventional method.
Here, the parsingtime of our method includes the time taken notonly for the dependency parsing but also for theclause boundary analysis.
The average time takenfor clause boundary analysis was about 1.2 mil-lisecond per sentence.
Therefore, the time cost ofperforming clause boundary analysis as a prepro-cessing of dependency parsing can be consideredsmall enough to disregard.
Figure 2 shows the re-lation between sentence length and parsing time173Table 4: Experimental results on parsing accuracyour method conv.
methodbunsetsu within a clause boundary unit (except final bunsetsu) 88.2% (2,701/3,061) 84.7% (2,592/3,061)final bunsetsu of a clause boundary unit 65.6% (1,140/1,737) 63.3% (1,100/1,737)total 80.1% (3,841/4,798) 76.9% (3,692/4,798)Table 5: Experimental results on clause boundaryanalysis (CBAP)recall 95.7% (2,140/2,237)precision 96.9% (2,140/2,209)for both methods, and it is clear from this figurethat the parsing time of the conventional methodbegins to rapidly increase when the length of asentence becomes 12 or more bunsetsus.
In con-trast, our method changes little in relation to pars-ing time.
Here, since the sentences used in theexperiment are composed of 11.8 bunsetsus on av-erage, this result shows that our method is suitablefor improving the parsing time of a monologuesentence whose length is longer than the average.Table 4 shows the parsing accuracy of bothmethods.
The first line of Table 4 shows theparsing accuracy for all bunsetsus within clauseboundary units except the final bunsetsus of theclause boundary units.
The second line showsthe parsing accuracy for the final bunsetsus ofall clause boundary units except the sentence-endbunsetsus.
We confirmed that our method couldanalyze with a higher accuracy than the conven-tional method.
Here, Table 5 shows the accu-racy of the clause boundary analysis executed byCBAP.
Since the precision and recall is high, wecan assume that the clause boundary analysis ex-erts almost no harmful influence on the followingdependency parsing.As mentioned above, it is clear that our methodis more effective than the conventional method inshortening parsing time and increasing parsing ac-curacy.5 DiscussionsOur method assumes that dependency relationswithin a clause boundary unit do not cross clauseboundaries.
Due to this assumption, the methodcannot correctly parse the dependency relationsover clause boundaries.
However, the experi-mental results indicated that the accuracy of ourmethod was higher than that of the conventionalmethod.In this section, we first discuss the effect of ourmethod on parsing accuracy, separately for bun-Table 6: Comparison of parsing accuracy betweenconventional method and our method (for bunsetsuwithin a clause boundary unit except final bun-setsu)``````````conv.
methodour methodcorrect incorrect totalcorrect 2,499 93 2,592incorrect 202 267 469total 2,701 360 3,061setsus within clause boundary units (except the fi-nal bunsetsus) and the final bunsetsus of clauseboundary units.
Next, we discuss the problem ofour method?s inability to parse dependency rela-tions over clause boundaries.5.1 Parsing Accuracy for Bunsetsu within aClause Boundary Unit (except finalbunsetsu)Table 6 compares parsing accuracies for bunsetsuswithin clause boundary units (except the final bun-setsus) between the conventional method and ourmethod.
There are 3,061 bunsetsus within clauseboundary units except the final bunsetsu, amongwhich 2,499 were correctly parsed by both meth-ods.
There were 202 dependency relations cor-rectly parsed by our method but incorrectly parsedby the conventional method.
This means that ourmethod can narrow down the candidates for a headbunsetsu.In contrast, 93 dependency relations were cor-rectly parsed solely by the conventional method.Among these, 46 were dependency relations overclause boundaries, which cannot in principle beparsed by our method.
This means that our methodcan correctly parse almost all of the dependencyrelations that the conventional method can cor-rectly parse except for dependency relations overclause boundaries.5.2 Parsing Accuracy for Final Bunsetsu of aClause Boundary UnitWe can see from Table 4 that the parsing accuracyfor the final bunsetsus of clause boundary units byboth methods is much worse than that for bunset-sus within the clause boundary units (except thefinal bunsetsus).
This means that it is difficult174Table 7: Comparison of parsing accuracy betweenconventional method and our method (for finalbunsetsu of a clause boundary unit)``````````conv.
methodour methodcorrect incorrect totalcorrect 1037 63 1,100incorrect 103 534 637total 1,140 597 1,737Table 8: Parsing accuracy for dependency rela-tions over clause boundariesour method conv.
methodrecall 1.3% (2/152) 30.3% (46/152)precision 11.8% (2/ 17) 25.3% (46/182)to identify dependency relations whose dependentbunsetsu is the final one of a clause boundary unit.Table 7 compares how the two methods parsethe dependency relations when the dependent bun-setsu is the final bunsetsu of a clause bound-ary unit.
There are 1,737 dependency relationswhose dependent bunsetsu is the final bunsetsu ofa clause boundary unit, among which 1,037 werecorrectly parsed by both methods.
The numberof dependency relations correctly parsed only byour method was 103.
This number is higher thanthat of dependency relations correctly parsed byonly the conventional method.
This result mightbe attributed to our method?s effect; that is, ourmethod narrows down the candidates internally fora head bunsetsu based on the first-parsed depen-dency structure for clause boundary units.5.3 Dependency Relations over ClauseBoundariesTable 8 shows the accuracy of both methods forparsing dependency relations over clause bound-aries.
Since our method parses based on the as-sumption that those dependency relations do notexist, it cannot correctly parse anything.
Al-though, from the experimental results, our methodcould identify two dependency relations overclause boundaries, these were identified only be-cause dependency parsing for some sentences wasperformed based on wrong clause boundaries thatwere provided by clause boundary analysis.
Onthe other hand, the conventional method correctlyparsed 46 dependency relations among 152 thatcrossed a clause boundary in the test data.
Sincethe conventional method could correctly parseonly 30.3% of those dependency relations, we cansee that it is in principle difficult to identify thedependency relations.6 Related WorksSince monologue sentences tend to be long andhave complex structures, it is important to con-sider the features.
Although there have beenvery few studies on parsing monologue sentences,some studies on parsing written language havedealt with long-sentence parsing.
To resolve thesyntactic ambiguity of a long sentence, some ofthem have focused attention on the ?clause.
?First, there are the studies that focused atten-tion on compound clauses (Agarwal and Boggess,1992; Kurohashi and Nagao, 1994).
These triedto improve the parsing accuracy of long sentencesby identifying the boundaries of coordinate struc-tures.
Next, other research efforts utilized the threecategories into which various types of subordinateclauses are hierarchically classified based on the?scope-embedding preference?
of Japanese subor-dinate clauses (Shirai et al, 1995; Utsuro et al,2000).
Furthermore, Kim et al (Kim and Lee,2004) divided a sentence into ?S(ubject)-clauses,?which were defined as a group of words containingseveral predicates and their common subject.
Theabove studies have attempted to reduce the pars-ing ambiguity between specific types of clauses inorder to improve the parsing accuracy of an entiresentence.On the other hand, our method utilizes all typesof clauses without limiting them to specific typesof clauses.
To improve the accuracy of long-sentence parsing, we thought that it would be moreeffective to cyclopaedically divide a sentence intoall types of clauses and then parse the local de-pendency structure of each clause.
Moreover,since our method can perform dependency pars-ing clause-by-clause, we can reasonably expectour method to be applicable to incremental pars-ing (Ohno et al, 2005a).7 ConclusionsIn this paper, we proposed a technique for de-pendency parsing of monologue sentences basedon clause-boundary detection.
The method canachieve more effective, high-performance spokenmonologue parsing by dividing a sentence intoclauses, which are considered as suitable languageunits for simplicity.
To evaluate the effectivenessof our method for Japanese spoken monologue, weconducted an experiment on dependency parsingof the spoken monologue sentences recorded inthe ?Asu-Wo-Yomu.?
From the experimental re-175sults, we confirmed that our method shortened theparsing time and increased the parsing accuracycompared with the conventional method, whichparses a sentence without dividing it into clauses.Future research will include making a thoroughinvestigation into the relation between dependencytype and the type of clause boundary unit.
Afterthat, we plan to investigate techniques for identi-fying the dependency relations over clause bound-aries.
Furthermore, as the experiment described inthis paper has shown the effectiveness of our tech-nique for dependency parsing of long sentencesin spoken monologues, so our technique can beexpected to be effective in written language also.Therefore, we want to examine the effectivenessby conducting the parsing experiment of long sen-tences in written language such as newspaper arti-cles.8 AcknowledgementsThis research was supported in part by a contractwith the Strategic Information and Communica-tions R&D Promotion Programme, Ministry of In-ternal Affairs and Communications and the Grand-in-Aid for Young Scientists of JSPS.
The first au-thor is partially supported by JSPS Research Fel-lowships for Young Scientists.ReferencesR.
Agarwal and L. Boggess.
1992.
A simple but use-ful approach to conjunct indentification.
In Proc.
of30th ACL, pages 15?21.E.
Charniak.
2000.
A maximum-entropy-inspiredparser.
In Proc.
of 1st NAACL, pages 132?139.M.
Collins.
1996.
A new statistical parser based onbigram lexical dependencies.
In Proc.
of 34th ACL,pages 184?191.Mark G. Core and Lenhart K. Schubert.
1999.
A syn-tactic framework for speech repairs and other dis-ruptions.
In Proc.
of 37th ACL, pages 413?420.R.
Delmonte.
2003.
Parsing spontaneous speech.
InProc.
of 8th EUROSPEECH, pages 1999?2004.M.
Fujio and Y. Matsumoto.
1998.
Japanese depen-dency structure analysis based on lexicalized statis-tics.
In Proc.
of 3rd EMNLP, pages 87?96.J.
Huang and G. Zweig.
2002.
Maximum entropymodel for punctuation annotation from speech.
InProc.
of 7th ICSLP, pages 917?920.H.
Kashioka and T. Maruyama.
2004.
Segmentationof semantic unit in Japanese monologue.
In Proc.
ofICSLT-O-COCOSDA 2004, pages 87?92.M.
Kim and J. Lee.
2004.
Syntactic analysis of longsentences based on s-clauses.
In Proc.
of 1st IJC-NLP, pages 420?427.T.
Kudo and Y. Matsumoto.
2002.
Japanese depen-dency analyisis using cascaded chunking.
In Proc.of 6th CoNLL, pages 63?69.S.
Kurohashi and M. Nagao.
1994.
A syntactic analy-sis method of long Japanese sentences based on thedetection of conjunctive structures.
ComputationalLinguistics, 20(4):507?534.S.
Kurohashi and M. Nagao.
1997.
Building aJapanese parsed corpus while improving the parsingsystem.
In Proc.
of 4th NLPRS, pages 451?456.K.
Maekawa, H. Koiso, S. Furui, and H. Isahara.
2000.Spontaneous speech corpus of Japanese.
In Proc.
of2nd LREC, pages 947?952.T.
Maruyama, H. Kashioka, T. Kumano, andH.
Tanaka.
2004.
Development and evaluationof Japanese clause boundaries annotation program.Journal of Natural Language Processing, 11(3):39?68.
(In Japanese).Y.
Matsumoto, A. Kitauchi, T. Yamashita, and Y. Hi-rano, 1999.
Japanese Morphological Analysis Sys-tem ChaSen version 2.0 Manual.
NAIST TechnicalReport, NAIST-IS-TR99009.T.
Ohno, S. Matsubara, H. Kashioka, N. Kato, andY.
Inagaki.
2005a.
Incremental dependency pars-ing of Japanese spoken monologue based on clauseboundaries.
In Proc.
of 9th EUROSPEECH, pages3449?3452.T.
Ohno, S. Matsubara, N. Kawaguchi, and Y. Inagaki.2005b.
Robust dependency parsing of spontaneousJapanese spoken language.
IEICE Transactions onInformation and Systems, E88-D(3):545?552.A.
Ratnaparkhi.
1997.
A liner observed time statisticalparser based on maximum entropy models.
In Proc.of 2nd EMNLP, pages 1?10.S.
Shirai, S. Ikehara, A. Yokoo, and J. Kimura.
1995.A new dependency analysis method based on se-mantically embedded sentence structures and its per-formance on Japanese subordinate clause.
Jour-nal of Information Processing Society of Japan,36(10):2353?2361.
(In Japanese).K.
Shitaoka, K. Uchimoto, T. Kawahara, and H. Isa-hara.
2004.
Dependency structure analysis and sen-tence boundary detection in spontaneous Japanese.In Proc.
of 20th COLING, pages 1107?1113.K.
Uchimoto, S. Sekine, and K. Isahara.
1999.Japanese dependency structure analysis based onmaximum entropy models.
In Proc.
of 9th EACL,pages 196?203.T.
Utsuro, S. Nishiokayama, M. Fujio, and Y. Mat-sumoto.
2000.
Analyzing dependencies of Japanesesubordinate clauses based on statistics of scope em-bedding preference.
In Proc.
of 6th ANLP, pages110?117.176
