Proceedings of the 2010 Named Entities Workshop, ACL 2010, pages 126?135,Uppsala, Sweden, 16 July 2010. c?2010 Association for Computational LinguisticsRule-based Named Entity Recognition in UrduKashif RiazUniversity of MinnesotaDepartment of Computer ScienceMinneapolis, MN, USAriaz@cs.umn.eduAbstractNamed Entity Recognition or Extraction(NER) is an important task for automated textprocessing for industries and academiaengaged in the field of language processing,intelligence gathering and Bioinformatics.
Inthis paper we discuss the general problem ofNamed Entity Recognition, more specificallythe challenges in NER in languages that do nothave language resources e.g.
large annotatedcorpora.
We specifically address thechallenges for Urdu NER and differentiate itfrom other South Asian (Indic) languages.
Wediscuss the differences between Hindi andUrdu and conclude that the NERcomputational models for Hindi cannot beapplied to Urdu.
A rule-based Urdu NERalgorithm is presented that outperforms themodels that use statistical learning.1.
IntroductionText processing applications, such as machinetranslation, information extraction, informationretrieval or natural language understandingsystems need to recognize multiple wordexpressions that refer to people names,organizational names, geographical locations,and other named entities.
Proper Names play acrucial role in information management, both inspecific applications and in underlyingtechnologies that drive the application.
NameRecognition becomes important in situationswhen the person or the organization is moreimportant than the action it performed, forexample, bankruptcy of the corner shop John &Sons is not as interesting as the bankruptcy ofGeneral Motors, an American car manufacturer.In this particular example, latter event will be ofmuch interest for the financial markets andinvestors to track.The proper name identification depends uponthe domain, and the applications in that domain.For the purpose of this study we have limited thescope of names to entities proposed by Palmerand Day (1996), i.e.
times, numbers, personalnames, organizations, and geographical areas.The goal of a named entity finder is to find theseentities.In this paper we study the challenges ofnamed entity recognition for resource scarcelanguages among South Asian languages.
Urdu isused as an example language because of its largenumber of speakers, the only language in theregion with Arabic script orthography, andinteresting assumptions about its similarity withHindi.
Section 2 describes the characteristics andcomputational processing for Urdu.
Section 3motivates the named entity recognition task byoutlining the challenges in NER in any languagealong with some of the approaches that havebeen used by well known NER systems.
Section4 discusses some previous work related to NERin South Asian languages.
Section 5 describeschallenges of NER in Urdu.
Section 6 describesthe complex relationship between Hindi andUrdu and asserts that NER computation modelsfor Hindi cannot be used for Urdu NER.
Section7 presents a rule-based NER algorithm for UrduNER.
Section 8 presents the conclusion andfuture work.
It is assumed that the reader knowsthe history, orthography and some characteristicsof Urdu in general.
We give a brief introductionto Urdu and Urdu processing in section 1.1.
For adetailed explanation refer to Riaz (2008) thatdescribe computational challenges for Urduprocessing.As a convention, Urdu words written inArabic orthography are followed by Englishtranslation in parenthesis and are italicized.2.
Characteristics of UrduThis section briefly introduces some right to leftlanguages and a few characteristics of Urdu.Urdu is the national language of Pakistan, andone of the major languages of India.
It isestimated that there are about 300 millionspeakers of Urdu.
Most of the Urdu speakers livein Pakistan, India, UAE, U.K and USA.Recently, there has been a lot of interest in126computational processing of right to leftlanguages.
Most of the interest has been focusedtoward Arabic.
There are other right to leftlanguages like Urdu, Persian (Farsi), Dari,Punjabi, and Pashto that are mostly spoken inSouth Asia.
Arabic is a Semitic language and theother languages belong to the Proto Indo Iranianlanguages.
Arabic and these other languages onlyshare script and some vocabulary.
Therefore, thelanguage specific task done for Arabic is notapplicable to these languages.
For example,stemming algorithms generated for Arabic willnot work for a language like Urdu.Unlike other languages in South Asia, Urdushares its grammar with Hindi.
The difference isvocabulary, and writing style.
Hindi is written inDevanagri script whereas Urdu is written inArabic script.
Because of these similarities,Hindi and Urdu are considered one language forlinguistic purposes but current Hindi resourcescannot be used for Urdu processing (Riaz, 2009).Urdu is quite complex language because Urdu?sgrammar and morphology is a combination ofmany languages: Sanskrit, Arabic, Farsi, Englishand Turkish to name a few.
Urdu?s descriptivepower is quite high.
This means that there couldbe many different ways in which a concept canbe expressed in Urdu.
For example, in Urdu thewords Pachem and Maghreb both are used forthe direction West.
In the previous examplePachem has its ancestry in Sanskrit and Maghrebhas its roots in Arabic.
Urdu is considered thelingua franca of business in Pakistan, and theSouth Asian community in the U.K (Baker et.
al,2003).Urdu has a property of accepting lexicalfeatures and vocabulary from other languages,most notably English.
This is called code-switching in linguistics e.g.
it is not uncommonto see a right to left flow interrupted by a wordwritten in English (left to right) and thencontinuation of the flow right to left.
Forexample,????
??
laptop ??
(That is my laptop).
Inthe above example, Microsoft Word did notsupport English embedding within the Urdusentence and displayed it improperly.
But whileelectronically processing, the tokenization willbe done correctly (Becker and Riaz, 2002).
Inorder to process Urdu and other right to leftlanguages Unicode encoding and proper fontusage is necessary.
Becker and Riaz (2002)discuss Urdu Unicode encoding in detail.3.
Challenges in NERNamed Entity Recognition was first introducedas part of Message Understanding Conference(MUC-6) in 1995 and a related conference MET-1 in 1996 introduced named entity recognition innon-English text.
In spite of the recognizedimportance of names in applications, most textprocessing applications such as search systems,spelling checkers, and document managementsystems, do not treat proper names correctly.This suggests proper names are difficult toidentify and interpret in unstructured text.Generally, names can have innumerable structurein and across languages.
Names can overlap withother names and other words.
Simple clues likecapitalization can be misleading for English andmostly not present in non western languages likeUrdu.The goal of NER is first to recognize thepotential named entities and then resolve theambiguity in the name.
There are two types ofambiguities in names, structural ambiguity andsemantic ambiguity.
Wacholder et al (1997)describes these ambiguities in detail.
Non-English names pose another dimension ofproblems in NER e.g.
the most common firstname in the world is Muhammad, which can betransliterated as Mohmmed, Muhammad,Mohammad, Mohamed, Mohd and many othervariations.
These variations make it difficult tofind the intended named entity.
Thistransliteration problem can be solved if the nameMuhammad is written in Arabic script as ???
?.3.1 General Approaches to NEROver the years many systems have been craftedto find names in different domains.
Some arequite general and work in all domains, whileothers are domain specific.
The domain specificsystems do much better in their domains andperform poorly on foreign domains.
On the otherhand the systems that claim generality do notwork as well as the best domain specific systemsbut do not fare poorly when the domain ischanged.Nymble (Bikel et al 1996) is a purelystatistical model where named entities are foundusing a generative statistical model using avariant of HMM (Hidden Markov Model).Recently, statistical discriminative models likeCondition Random Fields (CRF) (Wallah, 2002)are used consistently for segmenting and labelingthe sequence data as a graphical model (Laffertyet al 2009).
Nominator (Wacholder et al 1997)is a fully implemented module for proper name127recognition.
It applies a set of heuristics to a listof words based on patterns of capitalization,punctuation and location within the sentence.
Dr.Hermansen at Linguistic Analysis Systems Inc.has a well known system that recognizes namesbased on regional names (Erickson, 2005).4.
NER for South Asian languages andRelated WorkAlthough over the years there has beenconsiderable work done for NER in English andother European languages, the interest in theSouth Asian languages has been quite low untilrecently.
One of the major reasons for the lack ofresearch is the lack of enabling technologies like,parts of speech taggers, gazetteers, and mostimportantly, corpora and annotated training andtest sets.
One of the first NER study of SouthAsian languages and specifically on Urdu wasdone by Becker and Riaz (2002) who studied thechallenges of NER in Urdu text without anyavailable resources at the time.
The by-productof that study was the creation of Becker-RiazUrdu Corpus (2002).
Another notable example ofNER in South Asian language is DARPA?sTIDES surprise language challenge where a newlanguage is announced by the agency to buildlanguage processing tools in a short period oftime.
In 2003 the language chosen was Hindi.
Liand McCallum (2003) tried conditional randomfields on Hindi data and reported f-measureranging from 56 to 71 with different boostingmethods.
Mukund et al (2009) used CRF forUrdu NER and showed f-measure of 68.9%.By far the most comprehensive attempt madeto study NER for South Asian and South EastAsian languages was by the NER workshop ofInternational Joint Conference of NaturalLanguage Processing in 2008.
The workshopattempted to do Named Entity Recognition inHindi, Bengali, Telugu, Oriya, and Urdu.
Amongall these languages Urdu is the only one that hasArabic script.
Test and training data wasprovided for each language by differentorganizations therefore the quantity of theannotated data varied among different languages.Hindi and Bengali led the way with the mostamounts of data; Urdu and Oriya were at thebottom with the least amount of data.
Urdu hadabout 36,000 thousand tokens available.
Ashared task was defined to find named entities inthe languages chosen by the researcher.
Thereare 15 papers in the final proceedings of NERworkshop at IJCNLP 2008, all cited in thereferences section, a significant number of thosepapers tried to address all languages in general,but resorted to Hindi, where the most number ofresources were available.
Some papers onlyaddressed specific languages like Hindi, Bengali,Telugu and one paper addressed Tamil.
Therewas not a single paper that focused on only Urdunamed entity recognition.
The papers that tried toaddress all languages, the computational modelshowed the lowest performance on Urdu.
Amongthe experiments performed at Named EntityWorkshop on various Indic languages and Urdu,almost all experiments used CFR with limitedsuccess.4.
NER challenges for UrduIn general NER is a difficult task and a numberof challenges need to be addressed in alllanguages.
South Asian languages have someadditional challenges.
We will focus on languagecharacteristics and some practical problems oflanguage processing focusing on Urdu forexamples.
It is important to note that thefollowing characteristics are not unique to Urdunor to the South Asian languages.5.1 No CapitalizationCapitalization, when available, is the mostimportant feature for named entity extraction.English and many other European languages useit to recognize proper names.
Orthography ofUrdu does not support capitalization.
Englishsystems easily recognize acronyms by usingcapitalization, but in Urdu they are quite difficultto recognize.
For example, ??
??
??
(transcribedBBC) in Urdu cannot be recognized as anacronym.5.2 Agglutinative natureAgglutinative property means that someadditional features can be added to the word toadd more complex meaning.
Agglutinativelanguages form sentences by adding a suffix tothe root forms of the word.
This feature wasmentioned in relation to Telugu only in the NERliterature of IJCNLP 2008 presumingunfamiliarity to Urdu by the authors.
A deeperstudy shows that agglutinative nature of Urducomes from Persian, Turkish and Dravidianlanguages.
In Urdu Hyderabad + i = Hyderabadi?????????
; the root word is Hyderabad and thesuffix is i.
Here Hyderabadi should not berecognized as a named entity whereasHyderabad (city in India) should be recognizedas a location named entity.1285.3 AmbiguityAmbiguity in proper name names is present inSouth Asian languages as in English.
The nameslike Brown are ambiguous in English ?
name orcolor.
Similarly,  ???
(Sahar) is ambiguous inUrdu ?
name or morning dawn.
In Urdu this getsmore complicated because    ???
(Sahar)  alsomeans a spell.Common nouns can be used as proper namesin South Asian languages.
An example in Urduis ????
(generosity) which is also a man?s name.5.4 Word OrderA number of South Asian languages have adifferent word-order than English and some havea free word-order.
Urdu mostly has a word orderbut depending upon the domain the word order isnot respected.
e.g.
Jamal ne paani ka pura glasspiya  and Panni ka glass Jamal ne pura piya bothtranslates to Jamal drank a whole glass of water.5.5 Spelling VariationsA number of situations occur in news articleswhere different authors or reporters scribe thename in different spellings even for native Urdunames.
In English, this is recognized bycapitalization and but in Urdu in the absence ofcapitalization this becomes a problem.
Anexample is ????
?
and ????
, where both stringsrepresent the same person Masood.
?????
(Masood) represents the Arabic style of writingthe name with an extra vowel and ????
(Masood)is written in the native Urdu form.5.6 Ambiguity in SuffixesA very common phenomenon in the propernames and common name in the South Asianlanguages is the use of a location suffix in aname.
Sometimes the suffix is attached to thelocation name like a building or a road.
Acommon practice is to append the location ofperson?s origin in a name with a suffix -i or -vi.For example, if a person was from Batala (city inthe Indian Punjab), -vi is added to the name toform Batalvi.
This is observed in Urdu becausemost poets of Urdu use a name of their choosing,like an alias, at the end their name.
This alias iscalled takhalus to refer themselves in theirpoetry.
Almost always these names in absence ofthe poetic context are meaningful words that arenot named entities.5.7 Loan words in UrduUrdu has a number of loan words.
Loan wordsare words that are not indigenous to Urdu.
Thenamed entity recognizer that is based on simplemorphological cues will fail to recognize a largenumber of proper nouns.
For example, ????????????
(Guantanamo Bay) is an English word with Bayas a cue for location.
Similarly, for Osama BinLaden, ??
(bin) an Arabic cue needs to be used inthe middle of the name for the person name.5.8 Nested EntitiesThe named entities that are classified as nestedcontain two proper names that are nestedtogether to form a new named entity.
Anexample in Urdu is Punjab University wherePunjab is the location name and Universitymarks the whole entity as an organization.5.9 Conjunction AmbiguityUrdu text shows quite a few examples ofconjunction ambiguities among proper nouns.That is, there is an ambiguity if the entity is oneproper noun or two proper nouns e.g.
Toyota andHonda motor company in English.
Although, thisphenomenon is present in most languages noneof the papers in IJCNLP NER workshopmentioned them as a problem.
An example ofconjunction ambiguity is ????
???????
?????
?????
(Google and Yahoo offered banquet).5.10 Resource ChallengesNER approaches are either based on rule engineor inference engines.
In each approach some typeof corpus is required; lack of a large corpus forderiving rules is an issue for most South Asianlanguages, Urdu in particular.
There are only twocorpora available EMILLE corpus (Baker, et al,2003) and Becker-Riaz (2002) corpus.
TheEMILLE corpus contains long running articlesthat do not have a lot of named entities.
Becker-Riaz corpus contains short news articles and hasa very rich content for named entity recognition.NER workshop at IJCNLP 2008 did not useeither of them and contained only 36,000 Urdutokens.Recent experiments in NER in almost allaspects have been conducted through the use ofinference engines using statistical machinelearning.
In the NER workshop at IJCNLP 2008,with one exception, all experiments usedstatistical machine learning for name recognitionand conditional random fields (CRF) wasfavored by the majority.
A good large annotatedcorpus is the pre-requisite to learn the rules.
Allexperiments that used pure machine learningperformed poorly and had to boost theperformance of the system using gazetteers,online dictionaries and other hand crafted rules.129Urdu NER performed poorly and mostly at thebottom for each experiment and all researchersclaimed the lack of the other resources to boostits performance.
In summary, there is a dearth ofannotated corpus for named entities for NER forSouth Asian languages.
Urdu and Oriya are twolanguages where researchers could not find anygazetteers and online dictionaries for boostingthe performance of the algorithms.6.
Analysis of Urdu and HindiSince Hindi NER was satisfactory in NERworkshop at IJCNLP 2008 and Urdu and Hindiare closely related languages, a claim can bemade that any computational model or algorithmthat works for Hindi should work for Urdu also.This section describes in detail that this assertionis invalid for computational processing andsharing of resources.
Extensive research has beendone about the ancestry of Urdu and Hindi andtheir origins but no research study exists thatcompares and contrasts Urdu and Hindi in ascholarly fashion (Russell, 1996).
Somerudimentary experiments for computationallyrecognizing names show that Hindi and Urdubehaved as two different languages.
Forexample, while trying to recognize the capitol,the cues of recognition of locations are differente.g.
Dar-al-Khilafah (Urdu) and Rajdihani(Hindi) are both used for the capitol of a city or acountry.
Therefore, we concluded that moreresearch is warranted to understand therelationship between these two languages tounderstand if the computational models basedone language can be used in some capacity forthe other language.The relationship between Hindi and Urdu isvery complex, while analyzing the differences athigh level they can be treated as the samelanguage and play pivotal role in establishing thelinks between other South Asian communitiesacross the world.
At detailed levels they areseparate languages and deserve to be studied andtreated as separate languages.
This is mostapparent in the official documents produced bythe Indian government in Hindi and newsbroadcasts that are not understandable by Urduspeakers (Matthews, 2002).
The followingexample is borrowed from Russell (1996) toexplain the growing divergence between Hindiand Urdu.
Consider the sentence in English ?Theeighteenth century was the period of the social,economic and political decline?.
The Urdutranslation of the sentence is ?Atharvin sadisamaji, iqtisadi aur siyasi zaval ka daur tha?while the Hindi equivalent is ?Atharvin sadisamajik, arthik aur rajnitik girav ki sadi thi?.Russell points out that this example shows alonethat Urdu speakers cannot understand themeaning of the Hindi equivalent and vice versa.Therefore, these two languages should not betreated as the same language in allcircumstances.We assert that that computational modelsbuilt for one of the languages cannot betranslated for the other language.
A case in pointis Hindi Wordnet (Jha et al, 2001), which is anexcellent source for Hindi language processingbut cannot be used for Urdu, because of theexplanations given earlier.
In addition, thefollowing properties of the Hindi Wordnet makeit unusable for Urdu processing without extraordinary amount of work: The terminology usedto describe parts of speech (POS) in HindiWordnet is completely foreign to Urdu speaker.Also, the POS names are Sanskrit-based whereasthe Urdu POS are Persian and Arabic based.
Forexample, in Hindi the word for noun is sangyaand in Urdu it is called ism.
The proper noun inHindi is called vyakti vachak sangy, no Urduspeaker will know this unless they have studiedHindi grammar.
In order to work through thesedifferences, one has to be familiar with bothlanguages at almost expert levels.
In other wordsin order to use Hindi resources to do Urducomputational processing one has to know Hindiat detailed linguistic level.
A detailed analysis ofphonological differences between Hind and Urduand the resource construction of Hindi usingHighbrow formalisms is discussed in detail byRiaz (2009).7.
Rule-based Urdu NERWe used a hand crafted rule-based NER systemfor Urdu NER instead of using a machinelearning approach for the following reasons:?
There are no good annotated corpora available.The only annotated corpus available is throughthe NER workshop of IJCNLP 2008 which isonly 36000 words.?
At NER workshop IJCNLP 2008 Urdu datawas available to all the researchers but none ofthe experiment fared well for Urdu using CRF.?
Conditional Random Fields (CRF) is the stateof art for named entity extraction, in theabsence of boosting methods like gazetteers,CRF performed poorly with only annotatedtext.130?
There are no gazetteers and online dictionariesavailable for Urdu that are accessible throughWeb Services or for online consumption.?
Hindi resources cannot be used to bridge thelack of language resources for Urdu (Riaz,2009).?
Creating a new set of tagged data set formodeling CRF or other new statisticalalgorithm on Urdu data is cost prohibitive atthis time.7.1 Experiment SetupThere are two corpora available for Urdu forresearch in NER; Becker-Riaz corpus andEMILLE corpus.
Although EMILLE is a largercorpus, it contains articles that are long anddeficient of named entities.
Becker-Riaz corpusis a news article corpus and it contains abundantof named entities.
We chose 2,262 documentsfrom the Becker-Riaz corpus and removed anumber of XML tags and their content forreadability.
A sample document from the reducedBecker-Riaz corpus is constructed by usingXSLT is given below:<cesDoc><doc-number>021003_uschinairaq_atif</doc-number><title> ????:??
????????
???
??
????
????
</title><para> ??????
??????????????
??
???
??
????
??
?????
???
??
?
???????
?
?????
??????
?
???
??
??
????
?????
?????
??
????
?????
??
????????
??????????
????
?
????
?????
??
????
??
?????
??????
????
??
????????
??
???
????
?
????
?????
??
????
??
?????
??????
????
????
?????????
???
</para></cesDoc>The documents are not tagged with namedentities so rules need to be constructed to findproper names.
A number of proper noun cues areavailable in the text to generate those rules.About 200 documents were analyzed to constructthe set of rules, while analyzing text a number ofambiguities were found ?
some of those arediscussed in the earlier sections.
The rules wereconstructed for the following named entities ?examples are given in English for clarity.?
Person name e.g.
George Bush?
Person of influence if proper name is identifiede.g.
President George Bush?
Location name e.g.
Pakistan, Bharat, Punjab,America, Lahore?
Date: 1996?
Numbers: e.g.
31,000?
Organization e.g.
Taliban, Al-Qaeda, B.B.C.Although rules are designed to recognize theabove named entities, the current implementationrecognizes all of them as simple named-entities.While crafting rules for named entities a numberof interesting rule patterns, heuristics andchallenges were discovered that play importantrole when discovering a named entity.
Wemention some interesting ones below:?
Punctuation marks like ?:?
are useful but theposition of their occurrence in text isimportant.?
Beginning of the sentence in title of news texthas a different rule than beginning of thesentence in the paragraph text.?
Titles of the news text are not grammaticallyformed.
A rudimentary POS tagger availablefrom CRULP (Center for Research in Urdulanguage Processing) fails on marking theconstituents of sentence.
Moreover, POStagger changed the order of words.
This furthercomplicated writing matching rules.?
Stemming reduces the precision of the system.It will conflate terms like Pakistani toPakistan.
Hence, marking Pakistan as namedentity in the context of the Pakistani which isnot a named entity.?
Suffix rules are very helpful in recognition oflocation names e.g.
?stan for Pakistan,Afghanistan etc.
But it does not find nameslike Bharat, Iran etc.?
Same suffix can identify location andorganization e.g.
Taliban and Afghanistan.?
String of names like Rahid Latif, Shahid Afridi,and Muhammad Yousaf are problematic for ourNER system since there is no capitalization inUrdu and they occur without any prefix orsuffix cues.?
Co-reference resolution for names will be non-trivial since they have multiple spellings, onlycontext can be used to resolve them.
Forexample, Milosevic is spelled at least withthree different spellings.?
Honorific titles are very important but a titlelike Sadr (President) can occasionally lead toincorrect recognition because Sadr is thelocation of a well known neighborhood ofKarachi (largest city in Pakistan).?
Honorific titles are sometimes transliteratedinto Urdu from English and other times theyare scribed in indigenous from in anotherarticle to refer to the same person e.g.
?????
isthe transliteration of captain and  ????
?meanscaptain in indigenous Urdu form.?
Anchoring around the named entities is auseful heuristic.
The anchor text choice is oneof the most challenging tasks for our system.1317.2 Algorithm for Urdu NERIn our rule-based system, the rules form a finitestate automata (FSA) based on lexical cues.Some cues are at the start of the state, some areat the end of the state, sometimes the cues arefound in the middle of the finite state machine.These rules are corpus-based, heuristic-based,and grammar-based.
The rules are implicitlyweighted in the order they are applied.
Forexample, the most probable match is listed firstand applied first on the text string.
For example,one rule that has high chance of recognizing theperson name is ??
?
?
?
?
?
??????.
Here  and ?
?are anchors.
In English this rule will berepresented as Rahnuma [????
?1 , ????
?2] post-position (Rahnuma means leader in Urdu).
In theexample given ????
?1 , ????
?2 will be tagged asa named entity.
Each rule is represented asregular expressions since they are an ideal way torepresent rules created as finite state automata.Instead of finding the named entities in eachdocument in this version of the system thealgorithm finds named entities in the given stringof text regardless of the document.
The input tothe algorithm is a UTF-8 or UTF-16 Urdu textstring.
One document contains two input strings,the title of the document and the paragraphrepresented as long string without line breaks.There could be a number of named entities in theparagraph but our rules currently address onnamed-entity recognition per rule.
An n-gramapproach was used to limit the length of the inputtext.
After a number of experiments, a 6-grammodel was used for an input string.
The bigrammodel was too small and trigram models showedit had no room for named-entities for multi wordnamed entities, four gram and five gram modelslacked adequate room for anchor texts and cues.6-gram model was quite successful butsometimes the windows size was too big when atri-gram would have worked e.g.
two anchortokens and a named-entity representing onetoken.
The n-grams were constructed by usingJDOM implementation to read in XMLdocuments.When a named entity is found with fullconfidence it is propagated to all 6-grams and ifthe matched named entity is found in other inputstrings (6-grams) it is tagged as a named-entity.Once the 6-gram is tagged it is not processedagain.
There are some named entities that areabundant in the text but sometimes theiroccurrences are ambiguous in a number of ways.The reason for these ambiguities is because theseentities are so prevalent in the news articles andcommon in the South Asia that reporters andwriters of news articles do not use cues to referthem in the news text.
For example, cities likeKarachi, Lahore, and countries like America,Bharat, Pakistan occur frequently with no cues.Instead of writing complicated regularexpressions, a small authority file is created withthese important names.
This authority file serveslike a mini gazetteer for our system.
A lookup isdone before the rules are applied if the name isfound the entity is marked.
Currently, theauthority file contains 40 named entities afterexamining the 200 document rule-creation set.
Inthe absence of the authority file, complicatedrules will need to be crafted using morphologicalanalysis for words like Pakistan and throughsome co-reference resolution for words likeKarachi.The complete algorithm is given below:?
Iterate over the input 6-gramsa.
Given the input text match thestring?s tokens with the tokens inthe authority file.b.
If the match occurs mark thenamed entity and iterate allother input strings and mark themwith the matched entity if it ispresent.i.
The strings that are tagged areremoved from the pool to bematchedc.
If the match does not occur inthe authority file iterate overthe regular expressions to matchthe expression on the inputstring.i.
If the match occurs on aregular expression, mark thename entity and iterate overall other input strings andmark them with the matchedentity if it is present.It is important to note that the algorithmpresented above recognizes name entities in theexponential complexity for clarity but the actualimplementation is done in linear timecomplexity.In the algorithm, regular expressions that arethe bottom of the list will be applied when theinput string was not tagged with any previousregular expression and the input string did nothave any token that is the authority file.
Theregular expressions that are towards the bottomof the list tend to have patterns that are mostlyrecognized by the readers who have backgroundknowledge about the topic discussed in thedocument e.g.
the string of names of cricketplayers without any reference to the cricket or132athlete.
English translation of the text would beRashid Latif and Shahid Afridi are in the field.These names of Pakistani cricketers will beknown to most South Asians who have followedcricket at any level.Given an input 6-gram, there could be morethan one entity in the input string but we are onlyfinding one named entity and then not processingthe string again.
This might give the impressionthat other named entities will not be tagged.
Ourset up of n-grams prevents us from the missingthe later named entity in the string because theseentities will show up as one of subsequent 6-grams.The rules at the top of the list could tie forimportance e.g.
The rules for ????
????
(GeneralFaisal) and  ????
??????
(Shahrah-e-Faisal orFaisal Boulevard) have very consistent previoustoken cues.
Our strategy of looping through allthe 6-grams to tag the named entities is going totag both strings as named entities but it will notclassify ????
?????
?as the location if the?general?
rule was applied first.
This has theside-effect of low recall for nested-entities.7.3 Evaluation & ResultsThe rule sets were created from 200 documentsof Becker-Riaz corpus and the experiment wererun on 2,262 documents.
Each of thesedocuments is evaluated to create relevancejudgments.
The relevance judgments are createdby two native speakers of Urdu who are avidnews readers.
The results of experiment runswere hard to grade on such a large set ofdocuments so we chose 600 documents forevaluation.
Two judges were chosen who arefluent in Urdu but required some coaching torecognize the named entities.
At first judges wereexpecting terms like Palestinian and elections tobe named entities but after some coaching allevaluation was done correctly.
There were veryfew disagreements among the judges aftercoaching.
A third native speaker was used toaddress instances of disagreements between thetwo initial judges.
The evaluation set was chosenwhere all the judges agreed upon the namedentities.
The results are measured by ?
????????
that is defined in terms of well knownInformation Retrieval measures of precision?and recall?.
?
?
???????
is defined by thefollowing equation: ?
????????
=2??
?+?Since our algorithm does not support namedentity recognition at a document level, the totalnumber of unique named entities in theevaluation set are found.
The total numbers ofunique named entities are 206.
The algorithmmatched about 2819 total named entities.
Whilecreating the rules and the evaluation set it lookedas the number of documents grows the uniquenamed-entities will level out gradually, but wefound a lot of repetitions as the number ofdocuments increased but new names consistentlywere added to the unique list but at a very lowrate.
Although, the corpus domain is news text,the genre of the documents spans over almostany news worthy information in South Asia, thisresults in increase of non-unique names.
Thealgorithm execution resulted in 187 named-entities and 171 of those were true namedentities.
The results show the recall of 90.7% andprecision of 91.5%.
This gives the ?1 ????????
value of 91.1%.
We found that,suffixes cues and anchor text features were veryuseful feature but at the same time anchor textfeature was the cause of most false positives.Almost all false positives were noun phrases.
Weran our rule set on the 36,000 token Urdu dataprovided for IJCNLP 2008 NER Workshop.Without tuning any of the rules ?1 ???????
?was 72.4% and after adding a few rules afterlooking at the training set ?1 ????????
wasincreased to 81.6% on the test set.
A closeanalysis of this data showed considerable lack ofnamed entities in contrast to the Becker-Riazcorpus.
Therefore major results are drawn fromthe Becker-Riaz corpus.
The results of ruleexecution on IJCNLP 2008 data for Urdu arebetter than any of the results reported in IJCNLP2008 NER workshop for Urdu data.7.3.1 DiscussionAlthough our results are very encouraging somediscussion is warranted about the experience increating and refining the rules for named entityrecognition.?
The 6-gram is processed a number of times tosee the performance with stemming and noisewords.
Both stemming and removal of stopwords lowers the precision of the system.?
We mostly used Urdu postpositions as suffixanchor texts.
This rule sometimes gave a highrecall but very low precision e.g.
thepostposition conflicted with the transcribedEnglish words in Urdu.?
We removed a rule where the entity ispreceded by the punctuation mark colon in thetitle filed.
This rule gave 100% recall but theprecision was about 30%.133?
Some of the cue words gave 100% recall butthe precision was quite low e.g.
the rule thatidentifies name entity through the cue word oftranscribed English word of leader gave perfectrecall but 56% precision.?
The phrases that could contain more than onetoken are sometimes written with the blankspace between tokens and sometimes as onetoken e.g.
????????
(prime minister).
In thiscase the rules are modified to recognize bothoccurrences.8.
Conclusion and Future work.NER in Urdu is a challenging problem forlanguage processing.
In the absence of a learningtraining set, rule-based approach for NER inUrdu shows promising results.
Also, we arguethat Hindi resources like gazetteers etc.
cannot beused Urdu NER models.
Our results are animprovement on all other approaches that areused for Urdu NER.
It also shows that our rule-based approach is superior to ConditionalRandom Fields approach used in IJCNLP 2008NER workshop by the majority of the papers.
Infuture we plan to use online dictionaries fromCRULP through Web Services framework, ifavailable instead of the manually createdauthority file.
Finally, we want to change ourregular expressions to accommodate alreadynamed entity tagged texts and also to identifynames at document level.9.
ReferencesD.
Bikel, S. Miller, R. Schwartz, R. WeischedelNymble: A High Performance Learning Name-Finder,Proceedings of 5th Conference on Applied NaturalLanguage Processing.
1996D.
Becker, B. Bennett, E. Davis, D. Panton, and K.Riaz.
Named Entity Recognition in Urdu: A ProgressReport.
Proceedings of the 2002 InternationalConference on Internet Computing.
June 2002.D.
Becker, K. Riaz.
A Study in Urdu CorpusConstruction.
Proceedings of the 3rd Workshop onAsian Language Resources and InternationalStandardization at the 19th International Conferenceon Computational Linguistics.
August 2002.P.
Baker, A. Hardie, T. McEnery, and B.D.
Jayaram.Corpus Data for South Asian Language Processing.Proceedings of the 10th Annual Workshop for SouthAsian Language Processing, EACL 2003.CRULP http://www.crulp.org/software/langproc/POS_tagger.htm (February 2010)D. Palmer, D. Day, A Statistical Profile of the NamedEntity Task, Proceedings of 5th Conference onApplied Natural Language Processing.
1996D.
Matthews, Urdu in India, Annual of Urdu Studiesvol.
17 (2002).J.
Erickson, Jack Hermansen on Mulit-culaturalName Recognition Software, Dr. Dobbb?s Journal July2005.J.
Lafferty, A. McCallum, F. Pereira, Conditionalrandom fields: probabilistic models for segmentingand labeling sequence data, International Conferenceon Machine Learning, 2001.L.
Wei ; A. McCallum, Rapid development of Hindinamed entity recognition using conditional randomfields and feature induction, ACM Transactions onAsian Language Information Processing (TALIP),volume 2, issue 3.
2003Mukund, S., Srihari, R., NE Tagging for Urdu based onBootstrap POS Learning, Third International Workshopon Information Access, Addressing the InformationNeed of Multilingual Societies (CLIAWS3), 2009Ijaz, M., Hussain, S., Corpus Based LexiconDevelopment, in the Proccedings of Conference onLanguage Technology.
2007Goyal, Named Entity Recognition for South AsianLanguages, Workshop on NER for South and SouthEast Asian Languages, IJCNLP 2008Ekbal, S. Bandyopadhyay, Bengali Named EntityRecognition Using Support Vector Machine,Workshop on NER for South and South East AsianLanguages, IJCNLP 2008P.
Srikanth, K. Murthy, Named Entity Recognition forTelugu, Workshop on NER for South and South EastAsian Languages, IJCNLP 2008Ekbal, R. Haque, A. Das, V. Poka, S.Bandyopadhyay, Language Independent NamedEntity Recognition in Indian Languages, Workshopon NER for South and South East Asian Languages,IJCNLP 2008K.
Gali, H. Surana, A. Vaidya, P. Shishtla, D.Sharma, Aggregating Machine Learning and RuleBased Heuristics for Named Entity Recognition,Workshop on NER for South and South East AsianLanguages, IJCNLP 2008S.
Kumar, S. Chatterji, S. Dandapat, S. Sarkar, AHybrid Named Entity Recognition System for Southand South East Asian Languages, Workshop on NERfor South and South East Asian Languages, IJCNLP2008P.
Shishtla, K. Gali, P. Pingali, V. Varma,Experiments in Telugu NER: A Conditional RandomField Approach, Workshop on NER for South andSouth East Asian Languages, IJCNLP 2008134Nayan, B. Ravi, K. Rao, P. Singh, S. Sanyal, R.Sanyal, Named Entity Recognition for IndianLanguages, Workshop on NER for South and SouthEast Asian Languages, IJCNLP 2008P.
Praveen, R. Kiran, Hybrid Named EntityRecognition System for South and South East AsianLanguages, Workshop on NER for South and SouthEast Asian Languages, IJCNLP 2008Chaudhuri, S. Bhattacharya, An Experiment onAutomatic Detection of Named Entities in Bangla,Workshop on NER for South and South East AsianLanguages, IJCNLP 2008P.
Shishtla, P. Pingali, V. Varma, A Character n-gramBased Approach for Improved Recall in IndianLanguage, NER Workshop on NER for South andSouth East Asian Languages, IJCNLP 2008R.
Vijayakrishna, L. Sobha, Domain Focused NamedEntity Recognizer for Tamil Using ConditionalRandom Fields, Workshop on NER for South andSouth East Asian Languages, IJCNLP 2008P.
Thompson, C. Dozier, Name Searching andInformation Retrieval, Proceedings of SecondConference on Empirical Methods in NaturalLanguage Processing.
1996N.
Wacholder, Y. Ravin, M. Choi, Disambiguation ofProper Names in Text, Proceedings of 5th Conferenceon Applied Natural Language Processing.
1997.S.
Martynuk, Statistical Approach to the Debate onHindi and Urdu, Annual of Urdu Studies vol.
18(2003)R. Russell, Some Notes on Hindi and Urdu, Annual ofUrdu Studies vol.
11 (1996).K.
Riaz, Concept Search in Urdu, Proceedings of the2nd PhD workshop on Information and KnowledgeManagement, 2008K.
Riaz, Urdu is not Hindi for Information Access,Workshop on Multilingual Information Access,SIGIR 2009S.
Jha, D. Narayan, P. Pande, P. Bhattacharyya, AWordNet for Hindi, International Workshop onLexical Resources in Natural Language Processing,Hyderabad, India, January 2001H.
Wallah, Conditional Random Fields: AnIntroduction, University of Pennsylvania CISTechnical Report MS-CIS-04-21, 2004.135
