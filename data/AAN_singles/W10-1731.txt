Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207?211,Uppsala, Sweden, 15-16 July 2010. c?2010 Association for Computational LinguisticsUCH-UPV English?Spanish system for WMT10Francisco Zamora-Mart??nezDep.
de F?
?sica, Matema?ticas y Computacio?nUniversidad CEU-Cardenal HerreraAlfara del Patriarca (Valencia), Spainfzamora@dsic.upv.esGerma?n Sanchis-TrillesInstituto Tecnolo?gico de Informa?ticaUniversidad Polite?cnica de ValenciaValencia, Spaingsanchis@dsic.upv.esAbstractThis paper describes the system developedin collabaration between UCH and UPVfor the 2010 WMT.
For this year?s work-shop, we present a system for English-Spanish translation.
Output N -best listswere rescored via a target Neural NetworkLanguage Model, yielding improvementsin the final translation quality as measuredby BLEU and TER.1 IntroductionIn Statistical Machine Translation (SMT), the goalis to translate a sentence f from a given source lan-guage into an equivalent sentence e?
from a certaintarget language.
Such statement is typically for-malised by means of the so-called log-linear mod-els (Papineni et al, 1998; Och and Ney, 2002) asfollows:e?
= argmaxeK?k=1?khk(f , e) (1)where hk(f , e) is a score function representingan important feature for the translation of f intoe, K is the number of models (or features) and?k are the weights of the log-linear combination.Typically, the weights ?k are optimised duringthe tuning stage with the use of a developmentset.
Such features typically include the target lan-guage model p(e), which is one of the core com-ponents of an SMT system.
In fact, most of thetimes it is assigned a relatively high weight in thelog-linear combination described above.
Tradi-tionally, language modelling techniques have beenclassified into two main groups, the first one in-cluding traditional grammars such as context-freegrammars, and the second one comprising morestatistical, corpus-based models, such as n-grammodels.
In order to assign a probability to a givenword, such models rely on the assumption thatsuch probability depends on the previous history,i.e.
the n ?
1 preceding words in the utterance.Nowadays, n-gram models have become a ?defacto?
standard for language modelling in state-of-the-art SMT systems.In the present work, we present a system whichfollows a coherent and natural evolution of prob-abilistic Language Models.
Specifically, we pro-pose the use of a continuous space language modeltrained in the form of a Neural Network LanguageModel (NN LM).The use of continuous space representation oflanguage has been successfully applied in recentNN approaches to language modelling (Bengio etal., 2003; Schwenk and Gauvain, 2002; Castro-Bleda and Prat, 2003; Schwenk et al, 2006).However, the use of Neural Network LanguageModels (NN LMs) (Bengio, 2008) in state-of-the-art SMT systems is not so popular.
The only com-prehensive work refers to (Schwenk, 2010), wherethe target LM is presented in the form of a fully-connected Multilayer Perceptron.The presented system combines a standard,state-of-the-art SMT system with a NN LM vialog-linear combination and N -best output re-scoring.
We chose to participate in the English-Spanish direction.2 Neural Network Language ModelsIn SMT the most extended language models aren-grams (Bahl et al, 1983; Jelinek, 1997; Bahl etal., 1983).
They compute the probability of eachword given the context of the n?1 previous words:p(s1 .
.
.
s|S|) ?|S|?i=1p(si|si?n+1 .
.
.
si?1) .
(2)where S is the sequence of words for which wewant compute the probability, and si ?
S, from avocabulary ?.207A NN LM is a statistical LM which followsequation (2) as n-grams do, but where the proba-bilities that appear in that expression are estimatedwith a NN (Bengio et al, 2003; Castro-Bleda andPrat, 2003; Schwenk, 2007; Bengio, 2008).
Themodel naturally fits under the probabilistic inter-pretation of the outputs of the NNs: if a NN, in thiscase a MLP, is trained as a classifier, the outputsassociated to each class are estimations of the pos-terior probabilities of the defined classes (Bishop,1995).The training set for a LM is a sequences1s2 .
.
.
s|S| of words from a vocabulary ?.
In or-der to train a NN to predict the next word givena history of length n ?
1, each input word mustbe encoded.
A natural representation is a local en-coding following a ?1-of-|?|?
scheme.
The prob-lem of this encoding for tasks with large vocab-ularies (as is typically the case) is the huge sizeof the resulting NN.
We have solved this prob-lem following the ideas of (Bengio et al, 2003;Schwenk, 2007), learning a distributed represen-tation for each word.
Figure 1 illustrates the archi-tecture of the feed-forward NN used to estimatethe NN LM:?
The input is composed of wordssi?n+1, .
.
.
, si?1 of equation (2).
Eachword is represented using a local encoding.?
P is the projection layer of the input words,formed by Pi?n+1, .
.
.
, Pi?1 subsets of pro-jection units.
The subset of projection unitsPj represents the distributed encoding of in-put word sj .
The weights of this projectionlayer are linked, that is, the weights fromeach local encoding of input word sj to thecorresponding subset of projection units Pjare the same for all input words.
After train-ing, the codification layer is removed fromthe network by pre-computing a table of size|?| which serves as a distributed encoding.?
H denotes the hidden layer.?
The output layerO has |?| units, one for eachword of the vocabulary.This n-gram NN LM predicts the posteriorprobability of each word of the vocabulary giventhe n ?
1 previous words.
A single forward passof the MLP gives p(?|si?n+1 .
.
.
si?1) for everyword ?
?
?.Figure 1: Architecture of the continuous spaceNN LM during training.
The input words aresi?n+1, .
.
.
, si?1 (in this example, the input wordsare si?3, si?2, and si?1 for a 4-gram).
I , P , H ,andO are the input, projection, hidden, and outputlayer, respectively, of the MLP.The major advantage of the connectionist ap-proach is the automatic smoothing performed bythe neural network estimators.
This smoothing isdone via a continuous space representation of theinput words.
Learning the probability of n-grams,together with their representation in a continousspace (Bengio et al, 2003), is an appropriate ap-proximation for large vocabulary tasks.
However,one of the drawbacks of such approach is the highcomputational cost entailed whenever the NN LMis computed directly, with no simplification what-soever.
For this reason, in this paper we will berestricting vocabulary size.3 Experiments3.1 Baseline systemFor building the baseline SMT system, we usedthe open-source SMT toolkit Moses (Koehn etal., 2007), in its standard setup.
The decoder in-cludes a log-linear model comprising a phrase-based translation model, a language model, a lex-icalised distortion model and word and phrasepenalties.
The weights of the log-linear interpo-lation were optimised by means of MERT (Och,2003).For the baseline LM, we computed a regularn-gram LM with Kneser-Ney smoothing (Kneser208and Ney, 1995) and interpolation by means of theSRILM (Stolcke, 2002) toolkit.
Specifically, wetrained a 6-gram LM on the larger Spanish corporaavailable (i.e.
UN, News-Shuffled and Europarl),and a 5-gram LM on the News-Commentary cor-pus.
Once these LMs had been built, they werefinally interpolated so as to maximise the perplex-ity of the News-Commentary test set of the 2008shared task.
This was done so according to pre-liminary investigation.3.2 NN LM system architectureThe presented systems follow previous worksof (Schwenk et al, 2006; Khalilov et al, 2008;Schwenk and Koehn, 2008; Schwenk, 2010)where the use of a NN LM helps achieving betterperformance in the final system.The NN LM was incorporated to the baselinesystem via log-linear combination, adding a newfeature to the output N -best list generated by thebaseline system (in this case N = 1 000).
Specif-ically, the NN LM was used to compute the log-probability of each sentence within theN -best list.Then, the scores of such list were extended withour new, NN LM-based feature.
This being done,we optimised the coefficients of the log-linear in-terpolation by means of MERT, taking into ac-count the newly introduced feature.
Finally thelist was re-scored and the best hypothesis wasextracted and returned as final output.
Figure 2shows a diagram of the system structure.3.3 Experimental setup and resultsNN LM was trained with the concatenation of theNews-shuffled and News-Commentary10 Span-ish corpora.
Other language resources were dis-carded due to the large amount of computationalresources that would have been needed for train-ing a NN LM with such material.
Table 1 showssome statistics of the corpora.
In order to reducethe complexity of the model, the vocabulary wasrestricted to the 20K more frequent words in theconcatenation of news corpora.
Using this re-stricted vocabulary implies that 6.4% of the run-ning words of the news-test2008 set, and 7.3% ofthe running words within the official 2010 test set,will be considered as unknown for our system.
Inaddition, the vocabulary includes a special tokenfor unknown words used for compute probabili-ties when an unknown word appears, as describedin Equation 2.Table 1: Spanish corpora statistics.
NC stands forNews-Commentary and UN for United Nations,while |?| stands for vocabulary size, and M/K formillions/thousands of elements.Set # Lines # Words |?|NC 108K 2.96M 67KNews-Shuffled 3.86M 107M 512KEuroparl 1.82M 51M 172KUN 6.22M 214M 411KTotal 3.96M 110M 521KA 6-gram NN LM was trained for this task,based in previous works (Khalilov et al, 2008).The distributed encoding input layer consists of640 units (128 for each word), the hidden layerhas 500 units, and the output layer has 20K units,one for each word in the restricted vocabulary.The total number of weights in the network was10 342 003.
The training procedure was conductedby means of the stochastic back-propagation al-gorithm with weight decay, with a replacement of300K training samples and 200K validation sam-ples in each training epoch.
The training and vali-dation sets were randomly extracted from the con-catenation of news corpora.
The training set con-sisted of 102M words (3M sentences) and valida-tion set 8M words (300K sentences).
The networkneeded 129 epochs for achieving convergence, re-sulting in 38.7M and 25.8M training and valida-tion samples respectively.
For training the NN LMwe used the April toolkit (Espan?a-Boquera et al,2007; Zamora-Mart?
?nez et al, 2009), which im-plements a pattern recognition and neural net-works toolkit.
The perplexity achieved by the 6-gram NN LM in the Spanish news-test08 devel-opment set was 116, versus 94 obtained with astandard 6-gram language model with interpola-tion and Kneser-Ney smoothing (Kneser and Ney,1995).The number of sentences in the N -best list wasset to 1 000 unique output sentences.
Results canbe seen in Table 2.
In order to assess the reliabilityof such results, we computed pairwise improve-ment intervals as described in (Koehn, 2004), bymeans of bootstrapping with 1000 bootstrap itera-tions and at a 95% confidence level.
Such confi-dence test reported the improvements to be statis-tically significant.Four more experiments have done in order tostudy the influence of the N -best list size in the209Figure 2: Architecture of the system.Table 2: English-Spanish translation quality fordevelopment and official test set.
Results are givenin BLEU/TER.test08 (dev) test10 (test)Baseline 24.8/60.0 26.7/55.1NN LM 25.2/59.6 27.8/54.0Table 3: Test set BLEU/TER performance for eachN -best list size.N -best list size BLEU TER200 27.5 54.2400 27.6 54.2600 27.7 54.1800 27.6 54.21000 27.8 54.0performance achieved by the NN LM rescoring.For each N -best list size (200, 400, 600 and 800)the weights of the log-linear interpolation were op-timised by means of MERT over the test08 set.
Ta-ble 3 shows the test results for eachN -best list sizeusing the correspondent optimised weights.
As itcan be seen, the size of the N -best list seems tohave an impact on the final translation quality pro-duced.
Although in this case the results are notstatistically significant for each size step, the finaldifference (from 27.5 to 27.8) is already signifi-cant.4 ConclusionsIn this paper, an improved SMT system by using aNN LM was presented.
Specifically, it has beenshown that the final translation quality, as mea-sured by BLEU and TER, is improved over thequality obtained with a state-of-the-art SMT sys-tem.
Such improvements, of 1.1 BLEU points,were found to be statistically significant.
The sys-tem presented uses a neural network only for com-puting the language model probabilities.
As animmediate future work, we intend to compute thelanguage model by means of a linear interpola-tion of several neural networks.
Another interest-ing idea is to integrate the NN LM within the de-coder itself, instead of performing a subsequent re-scoring step.
This can be done extending the ideaspresented in a previous work (Zamora-Mart?
?nez etal., 2009), in which the evaluation of NN LM issignificantly sped-up.AcknowledgmentsThis paper was partially supported by the EC(FEDER/FSE) and by the Spanish Government(MICINN and MITyC) under the MIPRCV?Consolider Ingenio 2010?
program (CSD2007-00018), iTrans2 (TIN2009-14511) project and theerudito.com (TSI-020110-2009-439) project.ReferencesL.
R. Bahl, F. Jelinek, and R. L. Mercer.
1983.
A Max-imum Likelihood Approach to Continuous SpeechRecognition.
IEEE Trans.
on Pat.
Anal.
and Mach.Intel., 5(2):179?190.Y.
Bengio, R. Ducharme, P. Vincent, and C. Jauvin.2003.
A Neural Probabilistic Language Model.Journal of Machine Learning Research, 3(2):1137?1155.210Y.
Bengio.
2008.
Neural net language models.
Schol-arpedia, 3(1):3881.C.
M. Bishop.
1995.
Neural networks for patternrecognition.
Oxford University Press.M.J.
Castro-Bleda and F. Prat.
2003.
New Directionsin Connectionist Language Modeling.
In Computa-tional Methods in Neural Modeling, volume 2686 ofLNCS, pages 598?605.
Springer-Verlag.S.
Espan?a-Boquera, F.
Zamora-Mart?
?nez, M.J. Castro-Bleda, and J. Gorbe-Moya.
2007.
Efficient BP Al-gorithms for General Feedforward Neural Networks.In Bio-inspired Modeling of Cognitive Tasks, vol-ume 4527 of LNCS, pages 327?336.
Springer.F.
Jelinek.
1997.
Statistical Methods for SpeechRecognition.
Language, Speech, and Communica-tion.
The MIT Press.M.
Khalilov, J.
A. R. Fonollosa, F.
Zamora-Mart??nez,M.
J. Castro-Bleda, and S. Espan?a-Boquera.
2008.Neural network language models for translation withlimited data.
In 20th International Conference onTools with Artificial Intelligence, ICTAI?08, pages445?451, november.R.
Kneser and H. Ney.
1995.
Improved backing-offfor m-gram language modeling.
IEEE Int.
Conf.on Acoustics, Speech and Signal Processing, II:181?184, May.P.
Koehn et al 2007.
Moses: Open Source Toolkit forStatistical Machine Translation.
In Proc.
of the ACLDemo and Poster Sessions, pages 177?180, Prague,Czech Republic.P.
Koehn.
2004.
Statistical significance tests for ma-chine translation evaluation.
In Proc.
of EMNLP,pages 388?395.F.
Och and H. Ney.
2002.
Discriminative trainingand maximum entropy models for statistical ma-chine translation.
In Proc.
of ACL?02, pages 295?302.F.J.
Och.
2003.
Minimum Error Rate Training in Sta-tistical Machine Translation.
In Proc.
of ACL, pages160?167, Sapporo, Japan.K.
Papineni, S. Roukos, and T. Ward.
1998.
Maxi-mum likelihood and discriminative training of directtranslation models.
In Proc.
of ICASSP, pages 189?192.H.
Schwenk and J. L. Gauvain.
2002.
Connectionistlanguage modeling for large vocabulary continuousspeech recognition.
In Proceedings of the Interna-tional Conference on Acoustics, Speech, and SignalProcessing (ICASSP?02), pages 765?768, Orlando,Florida (USA), May.H.
Schwenk and P. Koehn.
2008.
Large and diverselanguage models for statistical machine translation.In International Joint Conference on Natural Lan-guage Processing, pages 661?668.H.
Schwenk, D. De?chelotte, and J. L. Gauvain.
2006.Continuous space language models for statisticalmachine translation.
In Proceedings of the COL-ING/ACL 2006 Main Conference Poster Sessions,pages 723?730.H.
Schwenk.
2007.
Continuous space language mod-els.
Computer Speech and Language, 21(3):492?518.H.
Schwenk.
2010.
Continuous space language mod-els for statistical machine translation.
The PragueBulletin of Mathematical Linguistics, 93.A.
Stolcke.
2002.
SRILM ?
an extensible languagemodeling toolkit.
In Proc.
of ICSLP?02, pages 901?904, September.F.
Zamora-Mart?
?nez, M.J. Castro-Bleda, andS.
Espan?a-Boquera.
2009.
Fast Evaluation ofConnectionist Language Models.
In InternationalWork-Conference on Artificial Neural Networks,volume 5517 of LNCS, pages 33?40.
Springer.211
