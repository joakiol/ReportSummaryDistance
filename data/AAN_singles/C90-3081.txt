ELU:  an Env i ronment  for Mach ine  Trans la t ionISSCO54 rte des AcaciasCH-1227 GenevaSwitzerlande-mail: estival@ divsun.unige.chL IntroductionWe present here ELU, 1 all environment for researchin computational linguistics, and, in particular,machine u'anslation.
As its name indicates, ELU isone of the growing number of systems designed toemploy unification as the principal computationalmechanism; we shall mention below some respects inwhich it difl~rs from other such systems.In addition to investigations of MT techniques,ISSCO has been involved in research on evaluation ofMT systems (cf.
King and Falkedal, 1990).The basic assumption underlying work on ELU isthat the nature of (machine) translation is as shown inFigure 1 below - distinct grammars encodinglanguage-specific infommdon, and defining a relationbetween texts and representations, u ed in conjunctionwith a mechanism for transforming these representa-~.ions:Analysis SynthesisGerman text French textGerman FrenchGrammar Grammarrepresentations representationsTransfermapping between representationsFigure 1: TranslationAs will be apparent, the facilities provided in ELUhave been strongly influenced by this view.2.
ELUELU exploits the parser and unifier of UD (Johnsonand Rosner, 1989), but differs from that earlier systemin the addition of a generator (Russell et al, 1990) anda transfer component (Estival et al, 1990; Russell etal., 1989).1 "E,lvironnement Linguistique d'Unification"ELU may be thought of as an enhanced PATR-II styleenvironment for linguistic development.
Throughoutthe system, including the transfer component, the syn-tax of the ELU language follows rather closely thePATR formalism which has become a standard forunification-based systems (Shieber, 1986).
Anenvironment of this kind is both a computational tool,and a formalism for representing linguisticknowledge, and we will consider ELU under thosetwo aspects:?
as a computational work environment which pro-vides?
a language for stating linguistic descriptions.2.1.
ELU: The Computational ToolThe characteristics of ELU as a computational tool forlinguistic development and applications derive fromits clear and well-defined formalism, which allows therepresentation f linguistic knowledge independentlyof any particular machine or application.
Some pro-perties of the system are worth emphasizing - it is:?
machine independent: ELU is a Common LISPprogram, and requires no specific interface, and?
general purpose: ELU is designed as a computa-tional tool suitable for a large range of linguisticapplications, uch as:?
the description of differing aspects of a particularlanguage: lexical, morphological, syntactic, orsemantic.?
a specific task such as parsing or generatingnatural language texts or transfer betweenfeature-structures ( .g.
to map a range of logi-cally equivalent representations to a canonicalform, cf.
Russell et al (1989)).?
translation, an application which includes thespecific tasks mentioned above - parsing texts inthe source language, manipulating the resultingrepresentations by means of the transfer ides,and generating texts in the source language fromthe result of this manipulation.?
user.friendly: 2 This is obviously very importantsince one of the goals of the project is to providei 385their analyses in the easiest and most natural way.2.2.
ELU: The FormalismELU ks designed to offer the same formalism in all ofits components, be it for synthesis, analysis ortransfer.
Such a formalism must have a clear trans-parent syntax and a declarative semantics.
The basicproperties of the FLU formalism are that it is declara-tive and it is unification-based.
These two propertiesimmediately give it certain advantages:Declarativeness means that a description is a set ofindependent s atements about he well-formed expres-sions of the language.
This allows the system to be:?
flexible, permitting changes during development;?
incrementable, as the linguist need not be con-cemed with the order in which information is addedor new phenomena accounted for;?
reversible: Grammar eversibility (or bidirectionalgrammars) is a highly desirable goal in the contextof machine translation, i.e, using the same grammaras either source or target language description, agoal attested to in other centres working on MT (cf.Dymetman & Isabelle, 1988; Van Noord, to appear;Russell et al, 1990).
And regardless of the applica-tion, the ability to generate with a grammar isextremely useful as a method of checking its ade-quacy.
Transfer reversibility is a workinghypothesis we are pursuing (Estival et al, 1990),but its consequences are harder to foresee; onlyexperimentation will help us to (possibly) identifyclasses of natural anguage phenomena where thetranslation relation cannot be reversed.Among the advantages deriving from a unification-based system, we first note that unification hasbecome a central concept for a number of computa-tional tools for linguistics (cf.
Kay, 1983; Shieber,1986; Carroll et al, 1988), and linguistic theories uchas GPSG, HPSG and LFG (more generally, cf.
Sag etal., 1986).
More concretely, a unification-based for-malism can be characterized by the following proper-t ies:?
expressivity, different types of analysis at differentlevels of abstraction,~, uniformity, across these different analyses oracross grammatical components,?
theory-neutrality - the system doesn't impose anyparticular linguistic theory (however, it is particu-larly well-suited for the implementation f some ofthe fundamental properties of modem linguisticThe ELU work environment offers a number of facilitiesto the user: various levels of debugging; tracing on individualrules and macros; incremental compilation; repetition of com-mands; graphic trace of rule application; scripting, aI~l indica-tian of system status at any time.theories, i.e.
lexicalism and the description oflinguistic objects structured in terms of complexattribute-value pairs.Similar to other unification-based systems the gram~mar is written as a set of context-free roles whichdefine the structure of constituents.
Constraining equa-tions annotated on these roles define the combinationof information, thus establishing the mapping betweena complex feature structure and the text, which is sim-ply a string of words.
The lexicon in ELU, containinginformation about the morphological and syntacticprocesses that a given lexical item might undergo, is aseparate component consisting of a 'base lexicon' andan optional morphological processor.
In the morpho-logical component, word forms are described as aconcatenation of surface characters (organized as afinite-state automaton) and feature structures areassigned to a given sequence of characters or globallyto a transition state.
These word forms are associatedto entries in the base lexicon where relational abstrac-tions (see below) provide a concise way to expresspowerful exical generalizations about the behaviourof the words.Finally, the ELU formalism provides ome exten-sions to the well-kiaown unification-based systems(such as PATR-II and its derivatives) which make itmore expressive and permit a more direct expressionof linguistic generalizations.
In particular:?
ELU provides a language for stating?
disjunction over both atomic and general featurestructures?
atomic negation.?
ELU accepts terms (trees) and lists as attributevalues in addition to feature structures.?
ELU allows direct manipulation of lists defined asfeature values with primitives imilar to 'append'and 'member'.?
ELU allows the linguist:?
to define variable path names,e to type feature structures as a means of impos-ing linguistic onstraints.?
FLU allows abstracting over sets of equations withrelational abstractions.
Relational abstractions, ormacros, are similar to PATR templates, but they area much more powerful tool, because they admitrecursive and multiple definitions.
They thus allowthe user to state lexical, morphological nd syntac-tic generalizations in a concise way.?
ELU allows mapping between representations.The transfer component in ELU provides a formalismto state relations over sets of feature structures inorder to e.g.
transfer from a feature structure of onelanguage to the feature structure of another (the outputof which can serve as input to generation).
Transferroles associate the analysis of one feature structurewith the synthesis of another; they may be thought of386as a specialized variety of pattem-matching rule.
Theyare local in nature, and permit the recursive analysisand synthesis of complex feature structures accordingto patterns pecified in a format closely related to thatof the other FLU components.
The interpretation oftransfer oles involves unification, albeit in a contextwhich restricts it to the role of a structure-buildingoperation.
The rules specify information about twodistinct feature structures (e.g.
one for German andone for French) but they do not indicate the directionthey will be applied in (i.e.
no mention of source ortarget language); they are truly bidirectional, simplystating a relation that must hold between two featurestructures.
The direction they are to be applied in isspecified when the rules are compiled in order todetermine which set of feature structures will bematched against and which set are to be 'built', thusthe same rules can be used in either direction.3.
CondusionThe demo will present he various components ofELU - morphological nalysis and generation, pars-ing, tramfer and generation with grammars for Frenchand German.
The demonstration will he given byDominique Estival.ReferencesCarroll, J, B. Boguraev, C. Grover and T. Brkscoe(1988) "A Development Environment for LargeNatural Language Grammars".
Technical Report127, Computer Laboratory, University of Cam-bridge.Dymetman, M. and P. Isabelle (1988) "ReversibleLogic Grammars for Machine Translation".Proceedings of the Second International Confer-ence on Theoretical and Methodological Issues inMachine Translation of Natural Languages,Came#e-Mellon University, Pittsburgh.Estival, D. (1990) "Generating French with a Reversi-ble Unification Grammar".
Proceedings of COL-ING 1990, Helsinki.Estival, D., A. Ballim, G. Russell and S. Warwick(1990) "A Syntax and Semantics for Feature Struc-ture Transfer".
Presented at the Third InternationalConference on Theoretical and MethodologicalIssues in Machine Translation of NaturalLanguages, University of Texas at Austin.Johnson, R. and M. Rosner (1989) "A rich environ-ment for experimentation with unification gram-mars".
Proceedings of the Fourth Conference of theEuropean Chapter of the Association for Computa-tional Linguistics, 182-189.Kay, M. (1983).
"Unification Grammar".
TechnicalReport, Xerox Palo Alto Research Center.King, M. and K. Falkedal (1990) "Using Test Suitesin the Evaluation of Machine Translation Systems".Proceedings of COLING 1990, Helsinki.Russell, G., A. Ballim, D. Estival and S. Warwick(1989) "A Language for the Statement of BinaryRelations over Feature Structures".
Internal report,ISSCO.Russell, G., S. Warwick and J. Carroll (1990) "Asym-metry in Parsing and Generating with UnilicationGrammars".
Proceedings of the 28th Annual Meet.ing of the Association for Computational Linguis-tics, Pittsburgh.Sag, I., R. Kaplan, L. Karttunen, M. Kay, C. Pollard,S.
Shieber and A. Zaenen (1986) "Unification ~mdGrammatical Theory".
Proceedings of the WestCoast Conference on Formal Linguistics, vol.5, U.of Washington.
Stanford Linguistics Association.Shieber, S. (1986) An Introduction to Unifwation-based Approaches to Grammar.
Volume 4 of CSLILectme Notes.Van Noord, G. (to appear) "Bottom Up Generation iUnification-Based Formalisms", in C. Mellish, R.Dale, and M. Zock (eds.)
Proceedings of theSecond European Workshop on Natural Z~angzutgeGeneration.3 387
