Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 608?615,Prague, Czech Republic, June 2007. c?2007 Association for Computational LinguisticsBeyond Projectivity: Multilingual Evaluationof Constraints and Measures on Non-Projective StructuresJir???
HavelkaInstitute of Formal and Applied LinguisticsCharles University in PragueCzech Republichavelka@ufal.mff.cuni.czAbstractDependency analysis of natural languagehas gained importance for its applicabilityto NLP tasks.
Non-projective structuresare common in dependency analysis, there-fore we need fine-grained means of describ-ing them, especially for the purposes ofmachine-learning oriented approaches likeparsing.
We present an evaluation ontwelve languages which explores severalconstraints and measures on non-projectivestructures.
We pursue an edge-based ap-proach concentrating on properties of in-dividual edges as opposed to properties ofwhole trees.
In our evaluation, we includepreviously unreported measures taking intoaccount levels of nodes in dependency trees.Our empirical results corroborate theoreti-cal results and show that an edge-based ap-proach using levels of nodes provides anaccurate and at the same time expressivemeans for capturing non-projective struc-tures in natural language.1 IntroductionDependency analysis of natural language has beengaining an ever increasing interest thanks to its ap-plicability in many tasks of NLP?a recent exampleis the dependency parsing work of McDonald et al(2005), which introduces an approach based on thesearch for maximum spanning trees, capable of han-dling non-projective structures naturally.The study of dependency structures occurring innatural language can be approached from two sides:by trying to delimit permissible dependency struc-tures through formal constraints (for a recent reviewpaper, see Kuhlmann and Nivre (2006)), or by pro-viding their linguistic description (see e.g.
Vesela?
etal.
(2004) and Hajic?ova?
et al (2004) for a linguisticanalysis of non-projective constructions in Czech.1)We think that it is worth bearing in mind thatneither syntactic structures in dependency tree-banks, nor structures arising in machine-learning ap-proaches, such as MST dependency parsing, need apriori fall into any formal subclass of dependencytrees.
We should therefore aim at formal means ca-pable of describing all non-projective structures thatare both expressive and fine-grained enough to beuseful in statistical approaches, and at the same timesuitable for an adequate linguistic description.2Holan et al (1998) first defined an infinite hierar-chy of classes of dependency trees, going from pro-jective to unrestricted dependency trees, based onthe notion of gap degree for subtrees (cf.
Section 3).Holan et al (2000) present linguistic considerationsconcerning Czech and English with respect to thishierarchy (cf.
also Section 6).In this paper, we consider all constraints and mea-sures evaluated by Kuhlmann and Nivre (2006)?with some minor variations, cf.
Section 4.2.
Ad-1These two papers contain an error concerning an alternativecondition of projectivity, which is rectified in Havelka (2005).2The importance of such means becomes more evident fromthe asymptotically negligible proportion of projective trees toall dependency trees; there are super-exponentially many unre-stricted trees compared to exponentially many projective treeson n nodes.
Unrestricted dependency trees (i.e.
labelled rootedtrees) and projective dependency trees are counted by sequencesA000169 and A006013 (offset 1), respectively, in the On-LineEncyclopedia of Sequences (Sloane, 2007).608ditionally, we introduce several measures not con-sidered in their work.
We also extend the empiricalbasis from Czech and Danish to twelve languages,which were made available in the CoNLL-X sharedtask on dependency parsing.In our evaluation, we do not address the issue ofwhat possible effects the annotations and/or conver-sions used when creating the data might have onnon-projective structures in the different languages.The newly considered measures have the first orboth of the following desiderata: they are basedon properties of individual non-projective edges (cf.Definition 3); and they take into account levels ofnodes in dependency trees explicitly.
None of theconstraints and measures in Kuhlmann and Nivre(2006) take into account levels of nodes explicitly.Level types of non-projective edges, introducedby Havelka (2005), have both desiderata.
They pro-vide an edge-based means of characterizing all non-projective structures; they also have some further in-teresting formal properties.We propose a novel, more detailed measure, levelsignatures of non-projective edges, combining lev-els of nodes with the partitioning of gaps of non-projective edges into components.
We derive a for-mal property of these signatures that links them tothe constraint of well-nestedness, which is an exten-sion of the result for level types (see also Havelka(2007b)).The paper is organized as follows: Section 2 con-tains formal preliminaries; in Section 3 we reviewthe constraint of projectivity and define related no-tions necessary in Section 4, where we define anddiscuss all evaluated constraints and measures; Sec-tion 5 describes our data and experimental setup;empirical results are presented in Section 6.2 Formal preliminariesHere we provide basic definitions and notation usedin subsequent sections.Definition 1 A dependency tree is a triple(V,?,), where V is a finite set of nodes, ?
a de-pendency relation on V , and  a total order on V .33We adopt the following convention: nodes are drawn top-down according to their increasing level, with nodes on thesame level being the same distance from the root; nodes aredrawn from left to right according to the total order on nodes;edges are drawn as solid lines, paths as dotted curves.Relation ?
models linguistic dependency, and sorepresents a directed, rooted tree on V .
There aremany ways of characterizing rooted trees, we givehere a characterization via the properties of?
: thereis a root r?V such that r??
v for all v?V and thereis a unique edge p?
v for all v ?
V , v 6= r, and noedge into r. Relation ??
is the reflexive transitiveclosure of ?
and is usually called subordination.For each node i we define its level as the length ofthe path r??
i; we denote it leveli.
The symmetriza-tion ?
= ???
?1 makes it possible to talk aboutedges (pairs of nodes i, j such that i?
j) withoutexplicitly specifying the parent (head; i here) andthe child (dependent; j here); so ?
represents di-rected edges and ?
undirected edges.
To retain theability to talk about the direction of edges, we defineParenti?
j ={i if i?
jj if j?
i and Childi?
j ={j if i?
ji if j?
i .To make the exposition clearer by avoiding overuseof the symbol ?, we introduce notation for rootedsubtrees not only for nodes, but also for edges:Subtreei = {v ?
V | i??
v}, Subtreei?
j = {v ?
V |Parenti?
j??
v} (note that the subtree of an edge isdefined relative to its parent node).
To be able to talkconcisely about the total order on nodes , we de-fine open intervals whose endpoints need not be ina prescribed order (i, j) = {v ?V |min{i, j} ?
v?max{i, j}}.3 Condition of projectivityProjectivity of a dependency tree can be character-ized both through the properties of its subtrees andthrough the properties of its edges.4Definition 2 A dependency tree T = (V,?,) isprojective if it satisfies the following equivalent con-ditions:i?
j & v ?
(i, j) =?
v ?
Subtreei ,(Harper & Hays)j ?
Subtreei & v ?
(i, j) =?
v ?
Subtreei ,(Lecerf & Ihm)j1, j2 ?
Subtreei & v ?
( j1, j2) =?
v ?
Subtreei .
(Fitialov)Otherwise T is non-projective.4There are many other equivalent characterizations of pro-jectivity, we give only three historically prominent ones.609It was Marcus (1965) who proved the equivalenceof the conditions in Definition 2, proposed in theearly 1960?s (we denote them by the names of thoseto whom Marcus attributes their authorship).We see that the antecedents of the projectiv-ity conditions move from edge-focused to subtree-focused (i.e.
from talking about dependency to talk-ing about subordination).It is the condition of Fitialov that has been mostlyexplored when studying so-called relaxations of pro-jectivity.
(The condition is usually worded as fol-lows: A dependency tree is projective if the nodesof all its subtrees constitute contiguous intervals inthe total order on nodes.
)However, we find the condition of Harper & Haysto be the most appealing from the linguistic pointof view because it gives prominence to the primarynotion of dependency edges over the derived notionof subordination.
We therefore use an edge-basedapproach whenever we find it suitable.To that end, we need the notion of a non-projective edge and its gap.Definition 3 For any edge i?
j in a dependencytree T we define its gap as followsGapi?
j = {v ?V | v ?
(i, j) & v /?
Subtreei?
j} .An edge with an empty gap is projective, an edgewhose gap is non-empty is non-projective.5We see that non-projective are those edges i?
jfor which there is a node v such that together theyviolate the condition of Harper & Hays; we groupall such nodes v into Gapi?
j, the gap of the non-projective edge i?
j.The notion of gap is defined differently for sub-trees of a dependency tree (Holan et al, 1998;Bodirsky et al, 2005).
There it is defined throughthe nodes of the whole dependency tree not in theconsidered subtree that intervene between its nodesin the total order on nodes .4 Relaxations of projectivity: evaluatedconstraints and measuresIn this section we present all constraints and mea-sures on dependency trees that we evaluate empir-5In figures with sample configurations we adopt this con-vention: for a non-projective edge, we draw all nodes in its gapexplicitly and assume that no node on any path crossing the spanof the edge lies in the interval delimited by its endpoints.ically in Section 6.
First we give definitions ofglobal constraints on dependency trees, then wepresent measures of non-projectivity based on prop-erties of individual non-projective edges (some ofthe edge-based measures have corresponding tree-based counterparts, however we do not discuss themin detail).4.1 Tree constraintsWe consider the following three global constraintson dependency trees: projectivity, planarity, andwell-nestedness.
All three constraints can be appliedto more general structures, e.g.
dependency forestsor even general directed graphs.
Here we adhere totheir primary application to dependency trees.Definition 4 A dependency tree T is non-planar ifthere are two edges i1 ?
j1, i2 ?
j2 in T such thati1 ?
(i2, j2) & i2 ?
(i1, j1) .Otherwise T is planar.Planarity is a relaxation of projectivity that cor-responds to the ?no crossing edges?
constraint.
Al-though it might get confused with projectivity, it is infact a strictly weaker constraint.
Planarity is equiv-alent to projectivity for dependency trees with theirroot node at either the left or right fringe of the tree.Planarity is a recent name for a constraint stud-ied under different names already in the 1960?s?we are aware of independent work in the USSR(weakly non-projective trees; see the survey paperby Dikovsky and Modina (2000) for references) andin Czechoslovakia (smooth trees; Nebesky?
(1979)presents a survey of his results).Definition 5 A dependency tree T is ill-nested ifthere are two non-projective edges i1 ?
j1, i2 ?
j2in T such thati1 ?
Gapi2?
j2 & i2 ?
Gapi1?
j1 .Otherwise T is well-nested.Well-nestedness was proposed by Bodirsky et al(2005).
The original formulation forbids interleav-ing of disjoint subtrees in the total order on nodes;we present an equivalent formulation in terms ofnon-projective edges, derived in (Havelka, 2007b).Figure 1 illustrates the subset hierarchy betweenclasses of dependency trees satisfying the particularconstraints:projective ( planar ( well-nested ( unrestricted610projective planar well-nested unrestrictedFigure 1: Sample dependency trees (trees satisfy corre-sponding constraints and violate all preceding ones)4.2 Edge measuresThe first two measures are based on two ways ofpartitioning the gap of a non-projective edge?intointervals and into components.
The third measure,level type, is based on levels of nodes.
We also pro-pose a novel measure combining levels of nodes andthe partitioning of gaps into components.Definition 6 For any edge i?
j in a dependencytree T we define its interval degree as followsidegi?
j = number of intervals in Gapi?
j .By an interval we mean a contiguous interval in ,i.e.
a maximal set of nodes comprising all nodes be-tween its endpoints in the total order on nodes .This measure corresponds to the tree-based gapdegree measure in (Kuhlmann and Nivre, 2006),which was first introduced in (Holan et al, 1998)?there it is defined as the maximum over gap degreesof all subtrees of a dependency tree (the gap degreeof a subtree is the number of contiguous intervalsin the gap of the subtree).
The interval degree of anedge is bounded from above by the gap degree of thesubtree rooted in its parent node.Definition 7 For any edge i?
j in a dependencytree T we define its component degree as followscdegi?
j = number of components in Gapi?
j .By a component we mean a connected componentin the relation ?, in other words a weak componentin the relation ?
(we consider relations induced onthe set Gapi?
j by relations on T ).This measure was introduced by Nivre (2006);Kuhlmann and Nivre (2006) call it edge degree.Again, they define it as the maximum over all edges.Each component of a gap can be represented bya single node, its root in the dependency relation in-duced on the nodes of the gap (i.e.
a node of the com-ponent closest to the root of the whole tree).
Notethat a component need not constitute a full subtreepositive type type 0 negative typeFigure 2: Sample configurations with non-projectiveedges of different level typesof the dependency tree (there may be nodes in thesubtree of the component root that lie outside thespan of the particular non-projective edge).Definition 8 The level type (or just type) of a non-projective edge i?
j in a dependency tree T is de-fined as followsTypei?
j = levelChildi?
j ?minn?Gapi?
j leveln .The level type of an edge is the relative distance inlevels of its child node and a node in its gap closestto the root; there may be more than one node wit-nessing an edge?s type.
For sample configurationssee Figure 2.
Properties of level types are presentedin Havelka (2005; 2007b).6We propose a new measure combining level typesand component degrees.
(We do not use interval de-grees, i.e.
the partitioning of gaps into intervals, be-cause we cannot specify a unique representative ofan interval with respect to the tree structure.
)Definition 9 The level signature (or just signature)of an edge i?
j in a dependency tree T is a mappingSignaturei?
j : P (V ) ?
ZN0 defined as followsSignaturei?
j = {levelChildi?
j ?
levelr |r is component root in Gapi?
j} .
(The right-hand side is considered as a multiset, i.e.elements may repeat.)
We call the elements of a sig-nature component levels.The signature of an edge is a multiset consistingof the relative distances in levels of all componentroots in its gap from its child node.Further, we disregard any possible orderings onsignatures and concentrate only on the relative dis-tances in levels.
We present signatures as non-6For example, presence of non-projective edges of nonnega-tive level type in equivalent to non-projectivity of a dependencytree; moreover, all such edges can be found in linear time.611decreasing sequences and write them in angle brack-ets ?
?, component levels separated by commas (bydoing so, we avoid combinatorial explosion).Notice that level signatures subsume level types:the level type of a non-projective edge is the com-ponent level of any of possibly several componentroots closest to the root of the whole tree.
In otherwords, the level type of an edge is equal to the largestcomponent level occurring in its level signature.Level signatures share interesting formal proper-ties with level types of non-projective edges.
Thefollowing result is a direct extension of the resultspresented in Havelka (2005; 2007b).Theorem 10 Let i?
j be a non-projective edge in adependency tree T .
For any component c in Gapi?
jrepresented by root rc with component level lc ?
0(< 0) there is a non-projective edge v?
rc in T withTypev?rc ?
0 (> 0) such that either i ?
Gapv?rc , orj ?
Gapv?rc .PROOF.
From the assumptions lc ?
0 and rc ?Gapi?
j the parent v of node rc lies outside thespan of the edge i ?
j, hence v /?
Gapi?
j. Thuseither i ?
(v,rc), or j ?
(v,rc).
Since levelv ?levelParenti?
j , we have that Parenti?
j /?
Subtreev, andso either i ?
Gapv?rc , or j ?
Gapv?rc .
Finally fromlc = levelChildi?
j ?
levelrc ?
0 (< 0) we get levelrc ?levelChildi?
j ?
0 (> 0), hence Typev?rc ?
0 (> 0).This result links level signatures to well-nestedness: it tells us that whenever an edge?s sig-nature contains a nonpositive component level, thewhole dependency tree is ill-nested (because thenthere are two edges satisfying Definition 5).All discussed edge measures take integer values:interval and component degrees take only nonneg-ative values, level types and level signatures takeinteger values (in all cases, their absolute valuesare bounded by the size of the whole dependencytree).
Both interval and component degrees are de-fined also for projective edges (for which they takevalue 0), level type is undefined for projective edges,however the level signature of projective edges isdefined?it is the empty multiset/sequence.5 Data and experimental setupWe evaluate all constraints and measures describedin the previous section on 12 languages, whose tree-banks were made available in the CoNLL-X sharedFigure 3: Sample non-projective tree consideredplanar in empirical evaluationtask on dependency parsing (Buchholz and Marsi,2006).
In alphabetical order they are: Arabic, Bul-garian, Czech, Danish, Dutch, German, Japanese,Portuguese, Slovene, Spanish, Swedish, and Turk-ish (Hajic?
et al, 2004; Simov et al, 2005; Bo?hmova?et al, 2003; Kromann, 2003; van der Beek et al,2002; Brants et al, 2002; Kawata and Bartels, 2000;Afonso et al, 2002; Dz?eroski et al, 2006; Civit Tor-ruella and Mart??
Anton?
?n, 2002; Nilsson et al, 2005;Oflazer et al, 2003).7 We do not include Chinese,which is also available in this data format, becauseall trees in this data set are projective.We take the data ?as is?, although we are awarethat structures occurring in different languages de-pend on the annotations and/or conversions used(some languages were not originally annotated withdependency syntax, but only converted to a unifieddependency format from other representations).The CoNLL data format is a simple tabular for-mat for capturing dependency analyses of naturallanguage sentences.
For each sentence, it uses atechnical root node to which dependency analyses ofparts of the sentence (possibly several) are attached.Equivalently, the representation of a sentence can beviewed as a forest consisting of dependency trees.By conjoining partial dependency analyses underone technical root node, we let al their edges inter-act.
Since the technical root comes before the sen-tence itself, no new non-projective edges are intro-duced.
However, edges from technical roots mayintroduce non-planarity.
Therefore, in our empiricalevaluation we disregard all such edges when count-ing trees conforming to the planarity constraint; wealso exclude them from the total numbers of edges.Figure 3 exemplifies how this may affect counts ofnon-planar trees;8 cf.
also the remark after Defini-tion 4.
Counts of well-nested trees are not affected.7All data sets are the train parts of the CoNLL-X shared task.8The sample tree is non-planar according to Definition 4,however we do not consider it as such, because all pairs of?crossing edges?
involve an edge from the technical root (edgesfrom the technical root are depicted as dotted lines).6126 Empirical resultsOur complete results for global constraints on de-pendency trees are given in Table 1.
They confirmthe findings of Kuhlmann and Nivre (2006): pla-narity seems to be almost as restrictive as projectiv-ity; well-nestedness, on the other hand, covers largeproportions of trees in all languages.In contrast to global constraints, properties of in-dividual non-projective edges allow us to pinpointthe causes of non-projectivity.
Therefore they pro-vide a means for a much more fine-grained classifi-cation of non-projective structures occurring in natu-ral language.
Table 2 presents highlights of our anal-ysis of edge measures.Both interval and component degrees take gen-erally low values.
On the other hand, Holan et al(1998; 2000) show that at least for Czech neither ofthese two measures can in principle be bounded.Taking levels of nodes into account seems to bringboth better accuracy and expressivity.
Since levelsignatures subsume level types as their last compo-nents, we only provide counts of edges of positive,nonpositive, and negative level types.
For lack ofspace, we do not present full distributions of leveltypes nor of level signatures.Positive level types give an even better fit withreal linguistic data than the global constraint of well-nestedness (an ill-nested tree need not contain a non-projective edge of nonpositive level type; cf.
The-orem 10).
For example, in German less than onetenth of ill-nested trees contain an edge of nonpos-itive level type.
Minimum negative level types forCzech, Slovene, Swedish, and Turkish are respec-tively ?1, ?5, ?2, and ?4.Level signatures combine level types and compo-nent degrees, and so give an even more detailed pic-ture of the gaps of non-projective edges.
In somelanguages the actually occurring signatures are quitelimited, in others there is a large variation.Because we consider it linguistically relevant, wealso count how many non-projective edges containin their gaps a component rooted in an ancestor ofthe edge (an ancestor of an edge is any node on thepath from the root of the whole tree to the parentnode of the edge).
The proportions of such non-projective edges vary widely among languages andfor some this property seems highly important.Empirical evidence shows that edge measures ofnon-projectivity taking into account levels of nodesfit very well with linguistic data.
This supportsour theoretical results and confirms that propertiesof non-projective edges provide a more accurateas well as expressive means for describing non-projective structures in natural language than theconstraints and measures considered by Kuhlmannand Nivre (2006).7 ConclusionIn this paper, we evaluate several constraints andmeasures on non-projective dependency structures.We pursue an edge-based approach giving promi-nence to properties of individual edges.
At the sametime, we consider levels of nodes in dependencytrees.
We find an edge-based approach also moreappealing linguistically than traditional approachesbased on properties of whole dependency trees ortheir subtrees.
Furthermore, edge-based propertiesallow machine-learning techniques to model globalphenomena locally, resulting in less sparse models.We propose a new edge measure of non-projectivity, level signatures of non-projectiveedges.
We prove that, analogously to level types,they relate to the constraint of well-nestedness.Our empirical results on twelve languages canbe summarized as follows: Among the global con-straints, well-nestedness fits best with linguisticdata.
Among edge measures, the previously unre-ported measures taking into account levels of nodesstand out.
They provide both the best fit with lin-guistic data of all constraints and measures we haveconsidered, as well as a substantially more detailedcapability of describing non-projective structures.The interested reader can find a more in-depth andbroader-coverage discussion of properties of depen-dency trees and their application to natural languagesyntax in (Havelka, 2007a).As future work, we plan to investigate more lan-guages and carry out linguistic analyses of non-projective structures in some of them.
We will alsoapply our results to statistical approaches to NLPtasks, such as dependency parsing.Acknowledgement The research reported in thispaper was supported by Project No.
1ET201120505of the Ministry of Education of the Czech Republic.613LanguageArabicBulgarianCzechDanishDutchGermanJapanesePortugueseSloveneSpanishSwedishTurkishill-nested179615416737114non-planar1506771378378741151086511713283561076556non-projective163690168318114865108839021718340571079580proportionofall(%)11.16%5.38%23.15%15.63%36.44%27.75%5.29%18.94%22.16%1.72%9.77%11.6%all146012823727035190133493921617044907115343306110424997Table1:Countsofdependencytreesviolatingglobalconstraintsofwell-nestedness,planarity,andprojectivity;thelastlinegivesthetotalnumbersofdependencytrees.(Anemptycellmeanscountzero.)LanguageArabicBulgarianCzechDanishDutchGermanJapanesePortugueseSloveneSpanishSwedishTurkishideg=121172423376940102091460515702398548581829813ideg=211895349119881272214627ideg=33837122491cdeg=120072323190842102641310714842466531591546623cdeg=210129278238220614315111204146cdeg=311662247434266427655Type>021172523495942105641580316672699547591847833Type?075324133508Type<042152Signature/count?1?/92?2?/674?2?/18507?2?/555?2?/8061?2?/8407?1?/466?2?/1670?2?/384?2?/46?2?/823?2?/341?2?/56?3?/32?1?/2886?1?/115?3?/1461?1?/3112?2?/209?1?/571?1?/67?3?/7?1?/530?1?/189?3?/18?1?/10?3?/1515?3?/100?1?/512?1,1?/1503?4?/186?3?/208?3?/45?4?/4?3?/114?1,1?/91?4?/10?4?/5?4?/154?1,1?/63?4?/201?3?/1397?3?/183?1,1?/113?4?/13?1?/2?1,1?/94?3?/53?1,1?/8?5?/2?1,1?/115?4?/41?1,1?/118?2,2?/476?5?/126?1,1,1?/44?5?/12?0?/31?2,2?/31?5?/7?1,1,1?/1?0?/70?5?/16?2,2?/52?1,1,1?/312?6?/113?2,2?/29?1,1?/6?1,3?/27?1,1,1?/29?6?/6?1,1?/1?2,2?/58?1,1,1?/16?1,1,1?/25?4?/136?7?/78?2,2,2?/13?6?/4?1,1,1?/25?4?/19?7?/4?1,1,1?/48?2,2?/7?5?/23?3,3?/98?1,1?/63?4?/12?1,1,1,1?/4?4?/21?2,2,2?/10?2,2?/2?2,4?/44?6?/6?1,3?/16?2,2,2?/69?8?/49?1,1,1,1?/7?7?/2?1,2?/19?3,3?/6?9?/1?1,3?/32?2,2,2?/6?3,3?/15?1,1,1,1?/59?9?/35?1,1,1,1,1?/6?1,1,3?/2?2,2?/16?2,2,2,2?/6.
.
.. .
.. .
.. .
.. .
.. .
.. .
.. .
.. .
.. .
.ancestorcomp.root39711200357039781101280183239257950345onlyancestorcomp.r.3971119913685969795260182038657857340non-projective21172523570945105661584416672702550591897841proportionofall(%)0.42%0.41%2.13%1.06%5.9%2.4%1.32%1.37%2.13%0.07%1.05%1.61%all50097177394110543789171179063660394126511197607257778602818042552273Table2:Countsforedgemeasuresintervaldegree,componentdegree(forvaluesfrom1to3;largervaluesarenotincluded),leveltype(forpositive,nonpositive,andnegativevalues),levelsignature(upto10mostfrequentvalues),andnumbersofedgeswithancestorcomponentrootsintheirgapsandsolelywithancestorcomponentrootsintheirgaps;thesecondtolastlinegivesthetotalnumbersofnon-projectiveedges,thelastlinegivesthetotalnumbersofalledges?weexcludeedgesfromtechnicalroots.(Thelistingsneednotbeexhaustive;anemptycellmeanscountzero.)614ReferencesA.
Abeille?, editor.
2003.
Treebanks: Building and UsingParsed Corpora, volume 20 of Text, Speech and LanguageTechnology.
Kluwer Academic Publishers, Dordrecht.S.
Afonso, E. Bick, R. Haber, and D. Santos.
2002.
?Florestasinta?(c)tica?
: a treebank for Portuguese.
In Proceedings ofthe 3rd Intern.
Conf.
on Language Resources and Evaluation(LREC), pages 1698?1703.Manuel Bodirsky, Marco Kuhlmann, and Matthias Mo?hl.
2005.Well-nested drawings as models of syntactic structure.
InProceedings of Tenth Conference on Formal Grammar andNinth Meering on Mathematics of Language.A.
Bo?hmova?, J.
Hajic?, E.
Hajic?ova?, and B. Hladka?.
2003.
ThePDT: a 3-level annotation scenario.
In Abeille?
(2003), chap-ter 7.S.
Brants, S. Dipper, S. Hansen, W. Lezius, and G. Smith.
2002.The TIGER treebank.
In Proceedings of the 1st Workshop onTreebanks and Linguistic Theories (TLT).S.
Buchholz and E. Marsi.
2006.
CoNLL-X shared task onmultilingual dependency parsing.
In Proceedings of CoNLL-X.
SIGNLL.M.
Civit Torruella and Ma A.
Mart??
Anton??n.
2002.
Designprinciples for a Spanish treebank.
In Proceedings of the 1stWorkshop on Treebanks and Linguistic Theories (TLT).Alexander Dikovsky and Larissa Modina.
2000.
Dependencieson the other side of the Curtain.
Traitement Automatique desLangues (TAL), 41(1):67?96.S.
Dz?eroski, T. Erjavec, N. Ledinek, P. Pajas, Z.
?Zabokrtsky, andA.
?Zele.
2006.
Towards a Slovene dependency treebank.
InProceedings of the 5th Intern.
Conf.
on Language Resourcesand Evaluation (LREC).J.
Hajic?, O.
Smrz?, P. Zema?nek, J.
?Snaidauf, and E. Bes?ka.
2004.Prague Arabic dependency treebank: Development in dataand tools.
In Proceedings of the NEMLAR Intern.
Conf.
onArabic Language Resources and Tools, pages 110?117.Eva Hajic?ova?, Jir???
Havelka, Petr Sgall, Kater?ina Vesela?, andDaniel Zeman.
2004.
Issues of Projectivity in the PragueDependency Treebank.
Prague Bulletin of MathematicalLinguistics, 81:5?22.Jir???
Havelka.
2005.
Projectivity in Totally Ordered RootedTrees: An Alternative Definition of Projectivity and OptimalAlgorithms for Detecting Non-Projective Edges and Projec-tivizing Totally Ordered Rooted Trees.
Prague Bulletin ofMathematical Linguistics, 84:13?30.Jir???
Havelka.
2007a.
Mathematical Properties of DependencyTrees and their Application to Natural Language Syntax.Ph.D.
thesis, Institute of Formal and Applied Linguistics,Charles University in Prague, Czech Republic.Jir???
Havelka.
2007b.
Relationship between Non-ProjectiveEdges, Their Level Types, and Well-Nestedness.
In Pro-ceedings of HLT/NAACL; Companion Volume, Short Papers,pages 61?64.Toma?s?
Holan, Vladislav Kubon?, Karel Oliva, andMartin Pla?tek.1998.
Two Useful Measures of Word Order Complexity.In Alain Polgue`re and Sylvain Kahane, editors, Proceedingsof Dependency-Based Grammars Workshop, COLING/ACL,pages 21?28.Toma?s?
Holan, Vladislav Kubon?, Karel Oliva, andMartin Pla?tek.2000.
On Complexity of Word Order.
Traitement Automa-tique des Langues (TAL), 41(1):273?300.Y.
Kawata and J. Bartels.
2000.
Stylebook for the Japanesetreebank in VERBMOBIL.
Verbmobil-Report 240, Seminarfu?r Sprachwissenschaft, Universita?t Tu?bingen.M.
T. Kromann.
2003.
The Danish dependency treebank andthe underlying linguistic theory.
In Proceedings of the 2ndWorkshop on Treebanks and Linguistic Theories (TLT).Marco Kuhlmann and Joakim Nivre.
2006.
Mildly Non-Projective Dependency Structures.
In Proceedings of COL-ING/ACL, pages 507?514.Solomon Marcus.
1965.
Sur la notion de projectivite?
[On thenotion of projectivity].
Zeitschrift fu?r Mathematische Logikund Grundlagen der Mathematik, 11:181?192.Ryan McDonald, Fernando Pereira, Kiril Ribarov, and JanHajic?.
2005.
Non-Projective Dependency Parsing usingSpanning Tree Algorithms.
In Proceedings of HLT/EMNLP,pages 523?530.Ladislav Nebesky?.
1979.
Graph theory and linguistics (chapter12).
In R. J. Wilson and L. W. Beineke, editors, Applicationsof Graph Theory, pages 357?380.
Academic Press.J.
Nilsson, J.
Hall, and J. Nivre.
2005.
MAMBA meets TIGER:Reconstructing a Swedish treebank from antiquity.
In Pro-ceedings of the NODALIDA Special Session on Treebanks.Joakim Nivre.
2006.
Constraints on Non-Projective Depen-dency Parsing.
In Proceedings of EACL, pages 73?80.K.
Oflazer, B.
Say, D. Zeynep Hakkani-Tu?r, and G. Tu?r.
2003.Building a Turkish treebank.
In Abeille?
(2003), chapter 15.K.
Simov, P. Osenova, A. Simov, and M. Kouylekov.
2005.Design and implementation of the Bulgarian HPSG-basedtreebank.
In Journal of Research on Language and Com-putation ?
Special Issue, pages 495?522.
Kluwer AcademicPublishers.Neil J.
A. Sloane.
2007.
On-Line Encyclopediaof Integer Sequences.
Published electronically atwww.research.att.com/?njas/sequences/.L.
van der Beek, G. Bouma, R. Malouf, and G. van Noord.2002.
The Alpino dependency treebank.
In ComputationalLinguistics in the Netherlands (CLIN).Kater?ina Vesela?, Jir???
Havelka, and Eva Hajic?ova?.
2004.
Con-dition of Projectivity in the Underlying Dependency Struc-tures.
In Proceedings of COLING, pages 289?295.615
