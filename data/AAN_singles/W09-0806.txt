Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45?52,Athens, Greece, 31 March, 2009. c?2009 Association for Computational LinguisticsAutomatic Treebank-Based Acquisition of Arabic LFG DependencyStructuresLamia Tounsi Mohammed AttiaNCLT, School of Computing, Dublin City University, Ireland{lamia.tounsi, mattia, josef}@computing.dcu.ieJosef van GenabithAbstractA number of papers have reported on meth-ods for the automatic acquisition of large-scale,probabilistic LFG-based grammatical resourcesfrom treebanks for English (Cahill and al., 2002),(Cahill and al., 2004), German (Cahill and al.,2003), Chinese (Burke, 2004), (Guo and al.,2007), Spanish (O?Donovan, 2004), (Chrupalaand van Genabith, 2006) and French (Schluterand van Genabith, 2008).
Here, we extend theLFG grammar acquisition approach to Arabic andthe Penn Arabic Treebank (ATB) (Maamouri andBies, 2004), adapting and extending the methodol-ogy of (Cahill and al., 2004) originally developedfor English.
Arabic is challenging because of itsmorphological richness and syntactic complexity.Currently 98% of ATB trees (without FRAG andX) produce a covering and connected f-structure.We conduct a qualitative evaluation of our annota-tion against a gold standard and achieve an f-scoreof 95%.1 IntroductionTreebank-based statistical parsers tend to achievegreater coverage and robustness compared to ap-proaches using handcrafted grammars.
However,they are criticised for being too shallow to markimportant syntactic and semantic dependenciesneeded for meaning-sensitive applications (Ka-plan, 2004).
To treat this deficiency, a numberof researchers have concentrated on enrichingshallow parsers with deep dependency informa-tion.
(Cahill and al., 2002), (Cahill and al., 2004)outlined an approach which exploits informationencoded in the Penn-II Treebank (PTB) trees toautomatically annotate each node in each treewith LFG f-structure equations representing deeppredicate-argument structure relations.
From thisLFG annotated treebank, large-scale unificationgrammar resources were automatically extractedand used in parsing (Cahill and al., 2008) andgeneration (Cahill and van Genabith, 2006).This approach was subsequently extended toother languages including German (Cahill andal., 2003), Chinese (Burke, 2004), (Guo and al.,2007), Spanish (O?Donovan, 2004), (Chrupalaand van Genabith, 2006) and French (Schluterand van Genabith, 2008).Arabic is a semitic language and is well-knownfor its morphological richness and syntacticcomplexity.
In this paper we describe the portingof the LFG annotation methodology to Arabic inorder to induce LFG f-structures from the PennArabic Treebank (ATB) (Bies, 2003), (Maamouriand Bies, 2004).
We evaluate both the coverageand quality of the automatic f-structure annotationof the ATB.
Ultimately, our goal is to use the f-structure annotated ATB to derive wide-coverageresources for parsing and generating unrestrictedArabic text.
In this paper we concentrate on theannotation algorithm.The paper first provides a brief overview ofLexical Functional Grammar, and the PennArabic Treebank (ATB).
The next section presentsthe architecture of the f-structure annotationalgorithm for the acquisition of f-structures fromthe Arabic treebank.
The last section providesan evaluation of the quality and coverage of theannotation algorithm.1.1 Lexical Functional GrammarLexical-Functional Grammar (LFG) (Kaplan andBresnan, 1982); (Bresnan, 2001), (Falk, 2001)2001, (Sells, 1985) is a constraint-based theoryof grammar.
LFG rejects concepts of configura-tionality and movement familiar from generativegrammar, and provides a non-derivational alterna-tive of parallel structures of which phrase structuretrees are only one component.LFG involves two basic, parallel forms of45knowledge representation: c(onstituent)-structure,which is represented by (f-structure annotated)phrase structure trees; and f(unctional)-structure,represented by a matrix of attribute-value pairs.While c-structure accounts for language-specificlexical idiosyncrasies, syntactic surface config-urations and word order variations, f-structureprovides a more abstract level of representation(grammatical functions/ labeled dependencies),abstracting from some cross-linguistic syntacticdifferences.
Languages may differ typologicallyas regards surface structural representations, butmay still encode similar syntactic functions (suchas, subject, object, adjunct, etc.).
For a recentoverview on LFG-based analyses of Arabic see(Attia, 2008) who presents a hand-crafted ArabicLFG parser using the XLE (Xerox Linguistics En-vironment).1.2 The Penn Arabic Treebank (ATB)The Penn Arabic Treebank project started in2001 with the aim of describing written ModernStandard Arabic newswire.
The Treebank consistsof 23611 sentences (Bies, 2003), (Maamouri andBies, 2004) .Arabic is a subject pro-drop language: a nullcategory (pro) is allowed in the subject positionof a finite clause if the agreement features onthe verb are rich enough to enable content to berecovered (Baptista, 1995), (Chomsky, 1981).This is represented in the ATB annotation by anempty node after the verb marked with a -SBJfunctional tag.
The ATB annotation, followingthe Penn-II Treebank, utilises the concept ofempty nodes and traces to mark long distancedependencies, as in relative clauses and questions.The default word order in Arabic is VSO.
Whenthe subject precedes the verb (SVO), the con-struction is considered as topicalized.
ModernStandard Arabic also allows VOS word orderunder certain conditions, e.g.
when the object isa pronoun.
The ATB annotation scheme involves24 basic POS-tags (497 different tags with mor-phological information ), 22 phrasal tags, and 20individual functional tags (52 different combinedtags).The relatively free word order of Arabic meansthat phrase structural position is not an indicatorof grammatical function, a feature of Englishwhich was heavily exploited in the automatic LFGannotation of the Penn-II Treebank (Cahill andal., 2002).
Instead, in the ATB functional tags areused to mark the subject as well as the object.The syntactic annotation style of the ATB follows,as much as possible, the methodologies andbracketing guidelines already used for the EnglishPenn-II Treebank.
For example, in the PennEnglish Treebank (PTB) (Marcus, 1994), smallclauses are considered sentences composed ofa subject and a predicate, without traces for anomitted verb or any sort of control relationship, asin example (1) for the sentence ?I consider Kris afool?.
(1) (S (NP-SBJ I)(VP consider(S (NP-SBJ Kris)(NP-PRD a fool))))The team working on the ATB found thisapproach very convenient for copula construc-tions in Arabic, which are mainly verbless(Maamouri and Bies, 2004).
Therefore they useda similar analysis without assuming a deletedcopula verb or control relationship, as in (2).
(2) (S (NP-SBJ Al-mas>alatu??A???
@)(ADJ-PRD basiyTatuN??J?fl.))??J?fl.??A???
@Al-mas>alatu basiyTatuNthe-question simple?The question is simple.
?2 Architecture of the Arabic AutomaticAnnotation AlgorithmThe annotation algorithm for Arabic is based onand substantially revises the methodology used forEnglish.For English, f-structure annotation is very muchdriven by configurational information: e.g.
theleftmost NP sister of a VP is likely to be a directobject and hence annotated ?
OBJ =?.
This infor-mation is captured in the format of left-right anno-tation matrices, which specify annotations for leftor right sisters relative to a local head.By contrast, Arabic is a lot less configurational andhas much richer morphology.
In addition, com-pared to the Penn-II treebank, the ATB features alarger functional tag set.
This is reflected in the de-sign of the Arabic f-structure annotation algorithm46(Figure 1), where left-right annotation matricesplay a much smaller role than for English.
Theannotation algorithm recursively traverses trees inthe ATB.
It exploits ATB morpho-syntactic fea-tures, ATB functional tags, and (some) configura-tional information in the local subtrees.We first mask (conflate) some of the complexmorphological information available in the pre-terminal nodes to be able to state generalisationsfor some of the annotation components.
We thenhead-lexicalise ATB trees identifying local heads.Lexical macros exploit the full morphological an-notations available in the ATB and map them tocorresponding f-structure equations.
We then ex-ploit ATB functional tags mapping them to SUBJ,OBJ, OBL, OBJ2, TOPIC and ADJUNCT etc.grammatical functions.
The remaining functions(COMP, XCOMP, SPEC etc.)
as well as somecases of SUBJ, OBJ, OBL, OBJ2, TOPIC and AD-JUNCT, which could not be identified by ATBtags, are treated in terms of left-right context anno-tation matrices.
Coordination is treated in a sepa-rate component to keep the other components sim-ple.
Catch-all & Clean-Up corrects overgenerali-sations in the previous modules and uses defaultsfor remaining unannotated nodes.
Finally, non-local dependencies are handled by a Traces com-ponent.The next sub-sections describe the main modulesof the annotation algorithm.2.1 ConflationATB preterminals are very fine-grained, encod-ing extensive morpho-syntactic details in addi-tion to POS information.
For example, the word??J?
sanaqifu ?
[we will] stand?
is tagged as(FUT+IV1P+IV+IVSUFF MOOD:I) denoting animperfective (I) verb (V) in the future tense (FUT),and is first person (1) plural (P) with indicativemood (IVSUFF MOOD:I).
In total there are over460 preterminal types in the treebank.
This levelof fine-grainedness is an important issue for theannotation as we cannot state grammatical func-tion (dependency) generalizations about heads andleft and right contexts for such a large tag set.
Todeal with this problem, for some of the annotationalgorithm components we masked the morpho-syntactic details in preterminals, thereby conflat-ing them into more generic POS tags.
For exam-ple, the above-mentioned tag will be conflated asVERB.Figure 1: Architecture of the Arabic annotation al-gorithm2.2 Lexical MacrosLexical macros, by contrast, utilise the de-tailed morpho-syntactic information encoded inthe preterminal nodes of the Penn Arabic Tree-bank trees and provide the required functional an-notations accordingly.
These tags usually includeinformation related to person, number, gender,definiteness, case, tense, aspect, mood, etc.Table 1 lists common tags for nouns and verbs andshows the LFG functional annotation assigned toeach tag.2.3 Functional TagsIn addition to monadic POS categories, the ATBtreebank contains a set of labels (called functionaltags or functional labels) associated with func-tional information, such as -SBJ for ?subject?
and-OBJ for ?object?.
The functional tags moduletranslates these functional labels into LFG func-tional equations, e.g.
-OBJ is assigned the anno-tation ?OBJ=?.
An f-structure equation look-uptable assigns default f-structure equations to eachfunctional label in the ATB (Table 2).A particular treatment is applied for the tag -PRD(predicate).
This functional tag is used with cop-ula complements, as in (3) and the correspond-ing c-structure in Figure 2.
Copula complements47Tag AnnotationNounsMASC ?
GEND = masc (masculine)FEM ?
GEND = fem (feminine)SG ?
NUM = sg (singular)DU ?
NUM = dualPL ?
NUM = pl (plural)ACC ?
CASE = acc (accusative)NOM ?
CASE = nom (nominative)GEN ?
CASE = gen (genitive)Verbs1 ?
PERS = 12 ?
PERS = 23 ?
PERS = 3S ?
NUM = sgD ?
NUM = dualP ?
NUM = plF ?
GEND = mascM ?
GEND = femTable 1: Morpho-syntactic tags and their functional anno-tationsFunctional Label Annotation-SBJ (subject) ?
SUBJ = ?-OBJ (object) ?
OBJ = ?-DTV (dative), ?
OBJ2 =?-BNF (Benefactive)-TPC (topicalized) ?
TOPIC=?-CLR (clearly related) ?
OBL =?-LOC (locative),-MNR (manner),-DIR (direction), ???
ADJUNCT-TMP (temporal),-ADV (adverbial)-PRP (purpose),Table 2: Functional tags used in the ATP Treebank and theirdefault annotationscorrespond to the open complement grammaticalfunction XCOMP in LFG and the ATB tag -PRDis associated with the annotation in (4) in order toproduce the f-structure in Figure 3.
The resultinganalysis includes a main predicator ?null be?
andspecifies the control relationship through a func-tional equation stating that the main subject is co-indexed with the subject of the XCOMP.(3)?KP?Q???KY??
@Al-hudonapu Daruwriy?apNthe-truce necessary?The truce is necessary.?
(4) ?
PRED = ?null be??
XCOMP = ??
SUBJ= ?
SUBJSNP-SBJNAlhudonapuNP-PRDNDaruwriyapNFigure 2: C-structure for example (3)26666666666666666666666664PRED ?null beDSUBJ , XCOMPE?SUBJ2666664PRED ?Al-hudonapu?NUM sgGEND femDEF +CASE nom37777751XCOMP2666666664PRED ?Daruwriy?apN?NUM sgGEND femDEF -CASE nomSUBJh i1377777777537777777777777777777777775Figure 3: F-structure for example (3)2.4 Left-Right Context RulesThe left-right context annotation module is basedon a tripartite division of local subtrees into a left-hand-side context (LHS) followed by a head (H)followed by a right-hand-side context (RHS).
Wedeveloped our own head finding, or head lexical-ization, rules based on a variety of heuristics andmanual inspection of the PS rules.Initially, we extracted 45785 Phrase Structure (PS)rules from the treebank.
The reason for the rela-tively large number of PS rules is the fine-grainednature of the tags encoding morphological infor-mation for pre-terminal nodes.
When we conflatepre-terminals containing morphological informa-tion to basic POS tags, the set of PS rules is re-duced to 9731.Treebanks grammars follow the Zipfian law: foreach category, there is a small number of highlyfrequent rules expanding that category, followedby a large number of rules with a very low fre-quency.
Therefore, for each LHS category we se-lect the most frequent rules which together give85% coverage.
This results is a reduced set of 339(most frequent) PS rules.
These rules are manu-ally examined and used to construct left-right LFGf-structure annotation matrices for the treebank.The annotation matrices encode information about48the left and right context of a rule?s head and stategeneralisations about the functional annotation ofconstituents to the left and right of the local head.Consider sentence (5), where an NP is expandedas NP NP ADJP.
The first NP is considered thehead and is given the annotation ?=?.
The secondNP and the ADJP are located to the left (Arabicreading) of the head (LHS).
The left-right contextmatrix for NP constituents analyses these phrasesas adjuncts and assigns them the annotation ?
?
?ADJUNCT.(5)?J??m.'B@?KPAJ??@?J?
?g.jamoEiy?apu Al-Tay?Ariyna Al->anoguwliy?apusociety the-pilot the-Angolian?Angolian Pilot Society?The left-right annotation matrices also coverother non-subcategorisable functions (such asXADJUNCT, SPEC, etc.)
as well as constituentswith subcategorisable grammatical functions(SUBJ, OBJ, OBL, COMP, etc.)
which are notidentified via ATB functional tags (and hence leftunannotated by the Functional Tags component)2.5 CoordinationTreebanks tend to encode co-ordination in a ratherflat manner.
In the LFG framework coordinatedconstituents are treated as sets.
The phrasestructure functional annotations for creating aset function for such constituents is given in (6)where the f-structures of the two coordinated NPson the right-hand side are members of the setvalued f-structure of the NP on the left-hand side.
(6) NP ?
NP CONJ NP???
??
?To keep the other modules simple and perspicuouscoordination is treated in the annotation algorithmas a separate component.
The coordination mod-ule localizes the coordinating conjunct, marks itas head and adds the coordinated elements to thef-structure set representation of the coordination???
COORD.
Figure 2.5 shows the f-structure forthe NP in sentence (7).
(7) H@YKY?fi?
@?H@Q??
@Al-kurAtu wa-Al-tasodiydAtuthe-balls and-the-scores266666666666666664COORD FORM ?wa-?COORD8>>>>>>><>>>>>>>:2664PRED ?Al-kurAtu?NUM plGEND femCASE nom37752664PRED ?Al-tasodiydAtu?NUM plGEND femCASE nom37759>>>>>>>=>>>>>>>;377777777777777775Figure 4: An Arabic coordination example2.6 Catch-All and Clean-UpThe previous components of the annotation algo-rithm give concise statements of linguistic gen-eralisations, but sometimes they overgeneralise.Such overgeneralisations are detected and cor-rected by the Catch-All and Clean-Up componentof the algorithm.For example, the mutiword expression?
@ B@?illaA ?anna ?but?
is annotated in the tree-bank as two subsequent subordinating con-junctions: (SUB CONJ ?illaA) (SUB CONJ?anna).
In the f-structure annotation this leads toa conflict as to which lexical item should occupythe value of the SUBORD FORM feature.
TheCatch-All and Clean-Up component sidelines theproblem by moving the second part of the MWEto an adjunct position.Another example is provided by quantifiers.
InArabic, quantifiers have the same syntactic struc-ture as the construct state (similar to the genitiveconstruction in English as in the boys?
book), sothat sentences (8) and (9) are syntactically equiv-alent.
The word ?students?
is in the second part ofthe construct state in both phrases, but it is a mod-ifier in the first and a head in the second.
There-fore, a list of quantifiers (Table 3) is used in theCatch-All and Clean-Up module, so that they areidentified and properly annotated according to cer-tain context conditions.The Catch-All and Clean-Up module also pro-vides default annotations for nodes that remainunannotated by the previous components.(8)H.C??
@ I.J?kutubu Al-Tul?abibooks the-students?students?
books?49(9) H.C??@?
?K.baEoDu Al-Tul?abisome the-students?some students?biDoEapu???fl.somekAf?apu??A?
all>ay?u ?
@ anyjamiyEu ?J?g.allmuEoZamu ?
???
mostbiDoEu ?
?fl.fewkul?u??
allbaEoDu Y?K.somebaqiy?apu?J?K.restnafosu ?
?K same>aHadu Yg@ one-masc<iHodaY ?Yg@one-femTable 3: List of Arabic quantifiers2.7 TracesThe f-structure generated prior to the Tracesmodule is called a proto-f-structure (i.e.
a partialrepresentation), as it is not complete with respectto long-distance dependency resolution.
In orderto produce proper f-structures, long-distancedependencies such as topicalisation and wh-movement must be captured.
In our annotationalgorithm we exploit trace information in the ATBtreebank and translate long-distance dependenciesinto cooresponding reentrancies at the f-structurelevel using coindexation.Figure 5 gives the ATB tree for the phrase in (10)containing a trace.
The trace is used to captureA-movement, and the indices on the WHNP-2and NP-SBJ-2 indicate that these constituents arerelated.In the annotation algorithm we assign the equa-tion ?SUBJ = ?TOPICREL to the empty nodeto indicate that the relative pronoun ?which?
isinterpreted as the subject of the verb ?threaten?.This annotation produces the proper f-structure inFigure 6.
(10) ?C??
@ XY?E?Y?
@?J??
@Al-Eunofu Al?a*iy yuhad?idu Al-salAmaviolence which threatens peaceOnce every node in a tree is annotated with f-structure equations, the equations are then passedNPNPNAl-EunofuSBARWHNP-2Ala*iySVyuhadiduNP-SBJ-2*NP-OBJAl-salAmaFigure 5: C-structure with a long-distance depen-dency2666666666666666666666666666664PRED ?Al-Eunofu?DEF +CASE genitiveRELMOD26666666666666666666664TOPICREL264PRED proPRON FORM ?Al?a*iy?PRON TYPE relative3751PRED ?yuhad?idu?ASPECT imperfectMOOD indicativeSUBJh i1OBJ264DEF +CASE accusativePRED ?Al-salAma?375377777777777777777777753777777777777777777777777777775Figure 6: Proper f-structure with long-distance de-pendencies capturedto a constraint solver.
Ideally one f-structure rep-resentation is produced for each sentence.
If thereare conflicts in the f-structure equations, no f-structure is produced.3 EvaluationWe conduct two types of evaluation: quantitativeand qualitative evaluation.The quantitative evaluation evaluates the coverageof our annotation algorithm, while the qualitativeevaluation compares the f-structures generated bythe automatic annotation procedure against a goldstandard of manually constructed f-structures for250 sentences (Al-Raheb and al., 2006) selectedat random from the ATB treebank.
The aim ofthe qualitative evaluation is to ensure that the an-notation quality is of a high standard, particularlyas the annotation algorithm is used for extracting50wide-coverage syntactic and lexical resources.In the quantitative evaluation experiment, the an-notation algorithm achieves good coverage for19 273 ATB sentences (remaining after removingtrees with FRAG and X - labeled constituents);98% of trees produce a complete and connectedf-structure (no fragments) and 2% of trees do notproduce an f-structure because of feature-valueclashes.For the qualitative evaluation, we use the eval-uation methodology of (Crouch and al., 2002)and (Riezler, 2002) in order to calculate preci-sion and recall on descriptions of f-structures.In this methodology, each f-structure is rep-resented as a set of triples of the form:relation(argument1,argument2).
For example thetriples num(riHol+At+i, pl), case(riHol+At+i,genitive), gender(riHol+At+i, fem) encode thatthe number of the word riHol+At+i HCgP ?jour-neys?
is plural; its case is genitive; and its gen-der is feminine.
The triple subj(ta+bolug+u: toreach,HarAr+ap+a: temperature) indicates thatthe subject of the verb to reach is temperature.
Theresults of the evaluation of the quality of the an-notation against the DCU 250 gold standard arepresented in Table 4.
We achieve an f-score of95%.
In comparison, the f-scores for French, Eng-lish and Chinese languages are 95%-96%.
Table 5presents the results by selected grammatical func-tions.Precision Recall F-scoreResults 95.49 94.43 94.96Table 4: Evaluation of the automatically producedf-structures against gold standard (all features).Precision Recall F-scoreadjunct 91 91 91coord 80 87 83obj 81 88 85obl 100 94 97poss 96 89 92subj 89 68 77topic 93 92 92topicrel 89 88 88Table 5: Evaluation of the automatically pro-duced f-structures against gold standard by se-lected grammatical functions.4 ConclusionIn this paper, we have shown how the methodol-ogy for automatically annotating treebanks withLFG f-structure equations originally developed forEnglish has been successfully adapted to Arabic.Arabic is known for its rich morphology and syn-tactic flexibility which allows SVO, VSO, VOSword orders.
We exploit the rich morphologicalinformation in the annotation algorithm by utilis-ing the morphological tags to add information tothe f-structures.
We also use ATB functional tagsto specify default syntactic functions, e.g.
-SBJ(subject) and -OBJ (object), provide left-right an-notation matrices for the remaining constituents,treat coordination and represent non-local depen-dencies.
The evaluation measured coverage aswell as the quality of the automatic annotation al-gorithm.
98% of ATB trees (without FRAG andX) produce a complete and connected f-structure.When evaluated against a gold standard of 250manually constructed f-structures, the algorithmscores an f-measure of 95%.
The work presentedin this paper is the first step in automatically ac-quiring deep resources for wide coverage parsingand generation for Arabic.AcknowledgmentsThis research was supported by Science Founda-tion Ireland Grant 04/IN/I527.ReferencesY.
Al-Raheb, A. Akrout, J. van Genabith, J. Dichy.2006.
DCU 250 Arabic Dependency Bank: An LFGGold Standard Resource for the Arabic Penn Tree-bank The Challenge of Arabic for NLP/MT at theBritish Computer Society, UK, pp.
105?116.M.
Attia.
2008.
Handling Arabic Morphologicaland Syntactic Ambiguity within the LFG Frameworkwith a View to Machine Translation.
Ph.D. Thesis.The University of Manchester, Manchester, UK.M.
Baptista.
1995.
On the Nature of Pro-drop inCapeverdean Creole.
Harvard Working Papers inLinguistics, 5:3-17.A.
Bies and M. Maamouri.
2003.
PennArabic Treebank Guidelines URL:http://www.ircs.upenn.edu/arabic/Jan03release/guidelines-TB-1-28-03.pdf.J.
Bresnan.
2001.
Lexical-Functional Syntax.
Black-well Publishers, Oxford, UK.M.
Burke, O. Lam, R. Chan, A. Cahill, R. ODonovan,A.
Bodomo, J. van Genabith, and A.
Way.
2004.Treebank-Based Acquisition of a Chinese Lexical-Functional Grammar.
The 18th Pacific Asia Con-ference on Language, Information and Computation,Tokyo, Japan, pp.
161?172.51M.
Burke.
2006.
Automatic Treebank Annotation forthe Acquisition of LFG Resources.
Ph.D. thesis,School of Computing, Dublin City University, Ire-land.A.
Cahill, M. McCarthy, J. van Genabith, A. Way.2002.
Automatic Annotation of the Penn Tree-bank with LFG F-Structure Information.
LRECWorkshop on Linguistic Knowledge Acquisition andRepresentation: Bootstrapping Annotated LanguageData, Spain, pp.
8-15.A.
Cahill, M. Forst, M. McCarthy, R. ODonovan,C.
Rohrer, J. van Genabith and A.
Way.
2003.Treebank-Based Multilingual Unification GrammarDevelopment.
The 15th Workshop on Ideas andStrategies for Multilingual Grammar Development,at the 15th European Summer School in Logic, Lan-guage and Information, Vienna, Austria, pp.
17?24.A.
Cahill, M. Burke, R. ODonovan, J. van Genabith,A.
Way.
2004.
Long-Distance Dependency Res-olution in Automatically Acquired Wide-CoveragePCFG-Based LFG Approximations.
42nd Meetingof the Association for Computational Linguistics,Barcelona, Spain pp.
319-326.A.
Cahill, J. van Genabith.
2006.
Robust PCFG-BasedGeneration using Automatically Acquired LFG Ap-proximations.
ACL 2006, Sydney, Australia, pages1033-1040.A.
Cahill, M. Burke, R. O?Donovan, S. Riezler, J. vanGenabith, A.
Way.
2008.
Wide-Coverage Deep Sta-tistical Parsing using Automatic Dependency Struc-ture Annotation.
Computational Linguistics, Vol.34, No.
1, pages 81-124.N.
Chomsky.
1981.
Lectures on Government andBinding.
Dordrecht: Foris.G.
Chrupala and J. van Genabith.
2006.
ImprovingTreebank-Based Automatic LFG Induction for Span-ish.
In Proceedings of the LFG06 Conference.R.
Crouch, R. M. Kaplan, T. H. King, S. Riezler.
2002.Comparison of Evaluation Metrics for a Broad Cov-erage Parser LREC Workshop: Beyond PARSE-VAL Towards Improved Evaluation Measures forParsing Systems, Spain, pp.
67-74.M.
Dalrymple.
2002.
Lexical Functional Grammar.Syntax and Semantics, Volume 34, Academic Press,San Diego, CA/London, U.K.Y.
Falk.
2001.
Lexical-Functional Grammar: AnIntroduction to Parallel Constraint-Based Syntax.Stanford, Calif.: CSLI Publications.A.
Frank, L. Sadler, J. van Genabith, A.
Way.
2003.From Treebank Resources to LFG F-Structurese.A.
Abeille editor Treebanks: Building and UsingSyntactically Annotated Corpora, Kluwer AcademicPublishers, Dordrecht/Boston/London,The Nether-landsm pp.
367-389.Y.
Guo, J. van Genabith, H. Wang.
2007.
Acquisitionof Wide-Coverage, Robust, Probabilistic Lexical-Functional Grammar Resources for Chinese.
Pro-ceedings of the 12th International Lexical Func-tional Grammar Conference, USA, pp.
214?232.R.
Kaplan and J. Bresnan.
1982.
Lexical FunctionalGrammar: a Formal System for Grammatical Rep-resentation, in J. Bresnan (ed.).
The Mental Rep-resentation of Grammatical Relations, MIT Press,Cambridge, MA, pp.
173-281.R.
M. Kaplan, S. Riezler, T. H. King, J. T. Maxwell,A.
Vasserman, and R. Crouch.
2004.
Speed andAccuracy in Shallow and Deep Stochastic Parsing.In The Human Language Technology Conferenceof the North American Chapter of the Associationfor Computational Linguistics (HLT-NAACL 2004),Boston, MA, pp.
97?104.M.
Maamouri and A. Bies.
2004.
Developing anArabic Treebank: Methods, Guidelines, Procedures,and Tools Workshop on Computational Approachesto Arabic Script-based Languages, COLING 2004,Geneva, 2004.M.
Marcus, G. Kim, M. Marcinkiewicz, R. MacIn-tyre, A. Bies, M. Ferguson, K. Katz and B. Schas-berger 1994.
The Penn Treebank: Annotating Pred-icate Argument Structure.
In Proceedings of theHuman Language Technology Workshop.
San Fran-cisco, CA.R.
O?Donovan, M. Burke, A. Cahill, J. van Genabith,and A.
Way.
2004.
Large-Scale Induction andEvaluation of Lexical Resources from the Penn-IITreebank.
The 42nd Annual Meeting of the As-sociation for Computational Linguistics, Barcelona,Spain, pp.
368?375.R.
O?Donovan, A. Cahill, J. van Genabith, and A. Way.2005.
Automatic Acquisition of Spanish LFG Re-sources from the CAST3LB Treebank.
The TenthInternational Conference on LFG, Bergen, Norway,pp.
334?352.S.
Riezler, King, T., Kaplan, R., Crouch, R., Maxwell,J.
T., and Johnson, M. 2002.
Parsing theWall StreetJournal using a Lexical-Functional Grammar andDiscriminative Estimation Techniques.
The 40thAnnual Conference of the Association for Compu-tational Linguistics (ACL-02), Philadelphia, PA, pp.271?278.P.
Sells 1985.
Lectures on Contemporary SyntacticTheories.
CSLI Lecture Notes.
Stanford, CA: CSLI.N.
Schluter and J. van Genabith 2008.
Treebank-BasedAcquisition of LFG Parsing Resources for French.Proceedings of the Sixth International Language Re-sources and Evaluation (LREC?08).52
