Proceedings of HLT/EMNLP 2005 Demonstration Abstracts, pages 10?11,Vancouver, October 2005.NooJ: A Linguistic Annotation System For Corpus ProcessingMax SilberzteinLASELDIUniversit?
de Franche-Comt?Besan?on, 25000 Francemax.silberztein@univ-fcomte.fr1 IntroductionNooJ is a new corpus processing system, similarto the INTEX software,1 and designed to replaceit.
NooJ allows users to process large sets oftexts in real time.
Users can build, accumulateand manage sophisticated concordances that cor-respond to morphological and syntactic gram-mars organized in re-usable libraries.One characteristic of NooJ is that its corpusprocessing engine uses large-coverage linguisticlexical and syntactic resources.
This allowsNooJ users to perform sophisticated queries thatinclude any of the available morphological, lexi-cal or syntactic properties.
In comparison withINTEX, NooJ uses a new technology (.NET), anew linguistic engine, and was designed with anew range of applications in mind.2 A new software architectureNooJ?s architecture is based on the .NET ?Com-ponent programming?
technology, which goes astep beyond the Object-Oriented approach (Sil-berztein 2004).
This architecture gives it severaladvantages, including:(1) it allows NooJ to read any document that canbe managed on the user?s computer.
For in-stance, on a typical MS-Windows computer,NooJ can process corpora in 100+ file formats,including all variants of ASCII, ISO and Uni-code, HTML, RTF, XML, MS-WORD, etc.1 Cf.
(Silberztein 1999a) for a description of the INTEXtoolbox, and (Silberztein 1999b) for a description of itsapplication as a corpus processing system.
See variousINTEX WEB sites for references and information on itsapplications, workshops and communities:http://intex.univ-fcomte.fr and the NooJ WEB site for adescription of NooJ: http://www.nooj4nlp.net.
(2) it allows other .NET applications to accessall NooJ?s public methods via its software com-ponent library.
For instance, a programmer caneasily run a NooJ method to extract sequences oftexts that match a NooJ grammar from a docu-ment that is currently opened in the current ap-plication (e.g.
MS-WORD).3 A new linguistic engineAs a corpus processing system, NooJ?s mostimportant characteristic is its linguistic engine,which is based on an annotation system.
An an-notation is a pair (position, information) thatstates that at a certain position in the text, a se-quence is associated with a certain piece of in-formation.
NooJ processes texts that areannotated; annotations are stored in each text?sannotation structure which is synchronized withthe text buffer.
Text annotations that are repre-sented as XML tags can be easily imported toNooJ; for instance, importing the XML text:<N Hum> Mr. John Smith </N>will produce an annotated text in which the se-quence ?Mr.
John Smith?
is annotated with thetag ?N+Hum?
(annotation category ?N?
; prop-erty ?Hum?).
NooJ also provides several power-ful tools to annotate texts:-- NooJ?s morphological parser is capable ofanalyzing complex word forms, such as Hungar-ian words and Germanic compounds, as well astokenizing Asian languages.
The morphologicalparser annotates complex word forms as se-quences of annotations.
For instance, the con-tracted word form ?don?t?
is associated with asequence of two annotations: <do,V+Aux+PR>and <not,ADV+Neg>.10-- NooJ?s lexical parser can process the inflec-tion of large dictionaries for simple and com-pound words.
For instance, the Englishdictionary contains 100,000+ simple words and70,000+ compound nouns.
NooJ contains large-coverage dictionaries for Arabic, Armenian,Chinese, Danish, English, French,  Hungarian,Italian and Spanish.
In general, running NooJ?slexical parser results in adding multiple lexicalannotations to a text.
The annotation system canrepresent all types of lexical ambiguities, such asbetween compounds and sequences of simplewords (e.g.
?round table?
), overlapping or em-bedded compounds (e.g.
?round table mat?
), etc.-- NooJ?s local grammars are Recursive Transi-tion Networks; they allow users to recognizecertain sequences of texts, and to associate themwith annotations.
NooJ?s graphical editor con-tains a dozen development tools to edit, test anddebug local grammars, to organize them in li-braries, and to apply them to texts, either as que-ries or to add (or filter out) annotations.NooJ?s query system and parsers can access anypreviously inserted annotation.
For instance, thefollowing query includes references to wordforms (e.g.
?mind?)
as well as to two annota-tions (written between brackets):(the + these) <N+Hum> <lose>their (mind + temper)<N+Hum> matches all sequences in the text thatare associated with an ?N?
annotation with prop-erty ?Hum?
; these annotations might have beenadded by NooJ?s lexical parser (e.g.
for the word?director?
), or by a local grammar used to rec-ognize human entities (e.g.
for the sequence?head of this company?).
Similarly, <lose>matches all sequences of the text that are associ-ated with an annotation whose lemma is ?lose?
;these annotations might have been added by thelexical parser (for all conjugated forms of ?tolose?, e.g.
?lost?
), or by a local grammar thatrecognizes compound tenses, e.g.
?have not yetlost?.
When all resulting matching sequences,e.g.
?These men have not yet lost their mind?,have been indexed, they can be annotated, andtheir annotation is then instantly available eitherfor other queries or for further cascaded parsing.Annotated texts can be used to build complexconcordances, annotate or color texts, perform asyntactic or semantic analysis, etc.NooJ?s linguistic engine, dictionaries andgrammars are multilingual; that should allowusers to implement translation functionalities.4 ConclusionAlthough NooJ has just come out and itstechnology is quite new, it is already being usedby several research teams in a variety of pro-jects.
See the proceedings of the ?EightINTEX/NooJ workshop?
at NooJ?s WEB site:http://www.nooj4nlp.net.5 DemoParticipants will use NooJ in order to build anamed-entity recognizer from the ground up.Participants will learn how to apply a simplequery to a corpus and build its correspondingconcordance.
Then I will demonstrate the build-ing of a local grammar with NooJ?s graphicaleditor, followed by a presentation of the organi-zation of local grammars in re-usable librariesthat can be shared and integrated into largergrammars.ReferencesSilberztein Max.
1999.
INTEX: a finite-state trans-ducer toolbox.
In Theoretical Computer Science#233:1, pp.
33-46.Silberztein Max.
1999.
Indexing large corpora withINTEX.
In Computer and the Humanities #33:3.Silberztein Max, 2004.
NooJ: an Object-OrientedApproach.
In INTEX pour la linguistique et le trai-tement automatique des langues.
C. Muller, J.Royaut?, Max Silberztein eds.
Cahiers de la MSHLedoux, Presses Universitaires de Franche-Comt?., pp.
359-369.11
