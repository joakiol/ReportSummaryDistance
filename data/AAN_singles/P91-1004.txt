Toward a Plan-Based Understanding Model for Mixed-Initiative DialoguesThis paper presents an enhanced model ofplan-based ialogue understanding.
Mostplan-based ialogue understanding modelsderived from \[Litman and Allen, 1987\] as-sume that the dialogue speakers have accessto the same domain plan library, and that theactive domain plans are shared by the twospeakers.
We call these features hared o-main plan constraints.
These assumptions,however, are too strict o account for mixed-initiative dialogues where each speaker has adifferent set of domain plans that are housedin his or her own plan library, and wherean individual speaker's domain plans maybe activated at any point in the dialogue.We propose an extension to the Litman andAllen model by relaxing the shared omainplan constraints.
Our extension improves (1)the ability to track the currently active plan,(2) the ability to explain the planning be-hind speaker utterances, and (3) the abilityto track which speaker controls the conver-sational initiative in the dialogue.1.
IntroductionIn this paper, we present an enhanced plan-based modelof dialogue understanding that provides a frameworkfor computer processing of mixed-initiative dialogues.In mixed-initiative dialogues, each speaker brings tothe conversation his or her own plans and goals basedon his or her own domain knowledge, and which donot necessarily match those of the other speaker, evenin cooperative situations.
Thus, mixed-initiative dia-logues exhibit a more complicated discourse structurethan do dialogues in which a single speaker controlsthe conversational initiative.Hiroaki Kitano* and Carol Van Ess-Dykema tCenter for Machine TranslationCarnegie Mellon UniversityPittsburgh, PA 15213hiroaki@cs.cmu.edu vaness@cs.cmu.eduABSTRACT The existing plan-based model of dialogue under-standing (as represented by \[Litman and Allen, 1987\])accounts for dialogues in which a single speaker con-trois the initiative.
We call these dialogues Single-Initiative Dialogues.
In modeling single-initiative di-alogues, Litman and Allen assume a shared stack thatrepresents ajointplan (joint domain plan).
This jointplan is shared by the two speakers.
We claim thatthis assumption is too restrictive to apply to mixed-initiative dialogues, because in mixed-initiative dia-logues each speaker may have his or her own indi-vidual domain plans I.
The assumption creates everalfunctional problems in the Litman and Allen model,namely, its inability to process mixed-initiative dia-logues and the need for a large amount of schema def-inition (domain knowledge representation) to handlecomplex conversational interactions.The model we present builds on the framework of\[Litman and Allen, 1987\].
We hypothesize, how-ever, that speaker-specific plan libraries are needed,instead of a single plan library storing joint plans, fora plan-based theory of discourse to account for mixed-initiativedialogues.
In our framework, the understand-ing system activates the instantiated schemata (placesthem on the stack) from each speaker's individual planlibrary 2, thus creating two domain plan stacks.
Wealso theorize that in addition to using the domain plansthat are stored in a speaker's memory (plan library),speakers incrementally expand their domain plans inresponse to the current context of the dialogue.
Theseextensions enable our model to.
"*This author is supported, inpart, by NEC Corporation,Japan.tThis author's research was made possible by a post-doctoral fellowship awarded her by the U.S. Department ofDefense.
The views and conclusions contained in this doc-ument are those of the authors and should not be interpretedas necessarily representing the official policies, either ex-pressed or implied, of the U.S. Department ofDefense or ofthe United States government.?
Provide a mechanism for tracking the currentlyactive plan in mixed-initiative dialogues,?
Explain the planning behind speaker utterances,?
Provide a mechanism for tracking which speakercontrols the conversational initiative, and fortracking the nesting of initiatives within a dia-logue segment.?
Reduce the amount of schema definition requiredto process mixed-initiative dialogues.Throughout this paper, we use two dialogue xtrac-lIn this regard, we agree with \[Grosz and Sidner, 1990\]'scriticism of the master-slave model of plan recognition.2Using the \[Pollack, 1990\] distinction, plans are mentalobjects when they are on the stack, and recipes-for-actionwhen they are in the plan library.25tions from our data: 1) an extraction from a Japanesedialogue in the conference registration domain, and2) an extraction from a Spanish dialogue in the travelagency domain.
3 SpA and SpB refer to Speaker A andSpeaker B, respectively.Dialogue I (Conference Registration, translatedfrom Japanese):SpA:SpA:SpB:SpB:SpA:SpB:I would like to attend the conference.
(1)What am I supposed to do?
(2)First, you must register for the conference.
(3)Do you have a registration form?
(4)No, not yet.
(5)Then we will send you one.
(6)Dialogue II (Travel Agency, translated from Span-ish):Prior to the following dialogue xchanges, the traveler(SpB) asks the travel agent (SPA) for a recommenda-tion on how it is best to travel to Barcelona.
They agreethat travel by bus is best.SpA:SpA:SpB:SpA:SpA:SpB:You would leave at night.
(1)You would take a nap in the bus on yourway to Barcelona.
(2)Couldn't we leave in the morning ...instead of at night?
(3)Well, it would be a little difficult.
(4)You would be traveling during the daywhich would be difficult because it'svery hot.
(5)Really?
(6)2.
Limitations of the Current Plan-BasedDialogue Understanding ModelThe current plan-based model of dialogue understand-ing \[Litman and Allen, 1987\] assumes a single planlibrary that contains the domain plans of the two speak-ers, and a shared plan stack mechanism to track thecurrent plan structure of the dialogue.
The sharedstack contains the domain plans and the discourse plansfrom the plan library that are activated by the inferencemodule of the dialogue understanding system.
The do-main plan is a joint plan shared by the two dialoguespeakers.
Although this shared stack mechanism ac-counts for highly task-oriented and cooperative dia-logues where one can assume that both speakers share3Dialogue 1is extracted from a corpus of Japanese ATR(Advanced Telecommunication Research) recorded simu-lated conference r gistration telephone conversations.
Novisual information was exchanged between the telephonespeakers.
Dialogue 2 is extracted from a corpus of recordedSpanish dialogues in the travel agency domain, collected bythe second author of this paper.
These dialogues are simu-lated telephone conversations, where no visual informationwas exchanged.the same domain plan, the model does not account formixed-initiative dialogues.In this section we examine three limitations of thecurrent plan-based ialogue understanding model: 1)the inability to track the currently active plan, 2) theinability to explain a speaker's planning behind his orher utterances, and 3) the inability to track conversa-tional initiative control transfer.
A dialogue under-standing system must be able to infer the dialogue par-ticipants' goals in order to arrive at an understandingof the speakers' actions.
The inability to explain theplanning behind speaker utterances i  a serious flaw inthe design of a plan-based dialogue processing model.Tracking the conversational control initiative providesthe system with a mechanism to identify which of aspeaker's plans is currently activated, and which goalis presently being persued.
We believe that an under-standing model for mixed-initiative dialogues must beable to account for these phenomena.2.1.
Tracking the Currently Active PlanThe Litman and Allen model lacks a mechanism totrack which plan is the currently active plan in mixed-initiative dialogue where the two speakers have verydifferent domain plan schemata in their individual planlibraries.
The currently active plan is the plan or actionthat he dialogue processing system is currently consid-ering.
In Dialogue I, after utterance (2), What am I sup-posed to do?, by SpA, the stack should look like Figure14.
Although the manner in which the conference r g-istration domain plans may be expanded on the stackdepends upon which domain plan schemata re avail-able in a speaker's domain plan library, we assume thata rational agent would have a schema containing theplan to attend aconference, A t tend-Conference .This plan is considered the currently active plan andthus marked \[Next\].
When processing the subsequentutterance, (3), First, you must register for the confer-ence., the currently active plan should be understoodas registration, RegS.zt:er,  since SpB clearly statesthat the action 5 of registration is necessary to carryout the plan to attend the conference.
The Litmanand Allen model lacks a mechanism for instantiatinga new plan within the domain unless the currently ac-4Notational conventions inthis paper follow \[Litman andAllen, 1987\].
In their model, the currently active plan islabeled \[Next\].
ID-PARAH in P lan2 refers to IDENTIFY-PARAMETER.
I1 in Plan2 and AC in Plan3 are ab-breviated tags for INFORMREF (Inform with Reference to)andAttend-Conference,  respectively.
Proc in Plan2stands for procedure.SThe words plan and action can be used interchangably.A sequence of actions as specified in the decomposition faplan carry out a plan.
Each action can also be a plan whichhas its own decomposition.
Actions are not decomposedwhen they are primitive operators \[Litman and Alien, 1987\].26Planl \[Completed\]INTRODUCE-PLAN(SpA, SpB, II,Plan2)REQUEST(SpI, SpB, II)SURFACE-REQUES~(SpA, SpB, II)Plan2ID-PARAM(SpB, SpA, proc,AC,Plan3)If: INFORMREF(~pB,SpA,proc)Plan3 AC: Attend-ConferenceReg st/er ... \[Next\]GetForm Fill SendFigure 1: State of the Stack after Utterance (2) inDialogue Itive plan (or an action of the domain plan) marked by\[Next\], is executed.
Thus, in this example, only ifthe plan At tend-Conference  marked as \[Next\],is executed, can the system process the prerequisiteplan, Reg is ter .
Looking at this constraint from thepoint of view of an event timeline, the Litman andAllen model can process only temporally sequentialactions, i.e., the At tend-Conference  event mustbe completed before the Reg is ter  event can begin.This problem can be clearly illustrated when we lookat the state of the stack after utterance (4), Do you havea registration form?, shown in Figure 2.
Utterance(4) stems from the action GetForm (GF) which is aplan for the conference office secretary to send a reg-istration form to the participant.
It is an action of theRegister plan.
Since the Attend-Conferenceplan has not been executed, the system has two ac-tive plans, Attend-Conference and GetForm,both marked \[Next\], in the stack where only GetFormshould be labeled the active plan.2.2.
Explaining Speaker Planning BehindUtterancesA second limitation of the Litman and Allen modelis that it cannot explain the planning behind speakerutterances in certain situations.
The system cannotprocess utterances stemming from speaker-specific do-main plans that are enacted because they are an activeresponse to the previous peaker's utterance.
This isbecause the model assumes ajointplan to account forutterances spoken in the dialogue.
But utterances thatstem from an active response stem from neither shareddomain plans currently on the stack nor from a planPlan-4 \[Completed\]INTRODUCE-PLAN(SpB,SpA, I2,Plan5)IREQUEST(SpB, SpA, I2)SURFACE-RE~UEST(SpB,SpA, I2)Plan-5ID-PARAM(SpA, SpB,have(form),GF,Plan3)I I2: INFORMIF(SpA, SpB,have(form))Plan2 \[Completed\]ID-PARAM(SpB, SpA, proc,AC,Plan3)II: INFORNREF(~pB, SpA, proc)Plan3 AC : Attend-ConferenceReg st/er ... \[Next\]GF : GetForm Fill Send \[ Next \]Figure 2: State of the Stack after Utterance (4) inDialogue Iwhich concurrently exists in the plan libraries of thetwo speakers.In Figure 1, the At tend-Conference  domainplan from Dialogue I is expanded with the Reg is  t e rplan after the first utterance because utterance (4), Doyou have a registration form?, and the subsequent con-versation cannot be understood without having domainplans entailing the Reg i  s t e r plan in the stack.
If thiswere a joint domain plan, SpA's utterance What am Isupposed to do?, could not be explained.
It can beinferred that SpA does not have a domain plan for at-tending aconference, orat least hat the system did notactivate it in the stack.
The fact that SpA asks SpBWhat am I supposed to do?
gives evidence that SpAand SpB do not share the Reg is ter  domain plan atthat point in the dialogue.Another example of speaker planning that the Lit-man and Allen model cannot explain, occurs in Dia-logue II.
After a series of interactions between SpAand SpB, SpB says in utterance (3), Couldn't we leavein the morning ... instead of at night?, as an activeresponse to SpA.
In order to explain the speaker plan-ning behind these utterances, the current model wouldinclude the schemata shown in Figure 36 .
Utterance(3), however, does not stem from speaker action.
Oneway to correct his situation within the current modelwould be to allow for the ad hoc addition of the schema,6This is a simplified list of schemata, excluding prereq-uisite conditions and effects.
Like the Litman and Allenmodel, our schema definition follows that of NOAH \[Sacer-doti, 1977\] and STRIPS \[Fikes and Nilsson, 1971\].27State-Preference.
The consequence, however,of this approach is that oo large a number of schemataare required, and stored in the plan library, This largenumber of schemata will explode xponentially as thesize of the domain increases.2.3.
Tracking Conversational Initiative ControlA third problem in the Litman and Allen model is that itcannot track which speaker controls the conversationalinitiative at a specific point in the dialogue, nor howinitiatives are nested within a dialogue segment, e.g.,within a clarification subdialogue.
This is self-evidentsince the model accounts only for single-initiative di-alogues.
Since the model calls for a joint plan, it doesnot track which of the two speakers maintains or initi-ates the transfer of the conversational initiative withinthe dialogue.
Thus, that he conversational initiative istransferred from SpA to SpB at utterance (3) in Dia-logue II, Couldn't we leave in the morning ... insteadof at night?, or that SpA maintains the initiative duringSpB's request for clarification about he weather, utter-ance (6), Really?, cannot be explained by the Litmanand Allen model.3.
An Enhanced ModelIn order to overcome these limitations, we propose anenhanced plan-based model of dialogue understand-ing, building on the framework described in \[Litmanand Allen, 1987\].
Our model inherits the basic flowof processing in \[Litman and Allen, 1987\], such asa constraint-based search to activate the domain planschemata in the plan library, and the stack operation.However, we incorporate wo modifications that enableour model to account for mixed-initiative dialogues,which the current model cannot.
These modificationsinclude:?
Speaker-Specific Domain Plan Libraries and theIndividual Placement of Speaker-Specific Planson the Stack.?
Incremental Domain Plan Expansion.First, our model assumes a domain plan libraryfor each speaker and the individual placement of thespeaker-specific domain plans on the stack.
Figure 4shows how the stack is organized in our model.
Thedomain plan, previously considered a joint plan, isseparated into two domain plans, each representing adomain plan of a specific speaker.
Each speaker canonly be represented on the stack by his or her owndomain plans.
Progression from one domain plan toanother can only be accomplished through the system'srecognition of speaker utterances in the dialogue.Discourse PlanDomain Plans Domain PlansSpeaker A Speaker BFigure 4: New Stack StructureSecond, our model includes an incremental expan-sion of domain plans.
Dialogue speakers use domainplans stored in their individual plan library in responseto the content of the previous peaker's utterance.
Thedomain plans can be further expanded when they ac-Ovate additional domain plans in the plan library ofthe current speaker.
For example, if a domain planis marked \[Next\] (currently active), the system de-composes the plan into its component plan sequence.Then the first element in the component plan sequence(which is an action) is marked \[Next\] and the previousplan is no longer marked.
Figure 5 illustrates howthe domain plans in Dialogue I can be incrementallyexpanded.
In Figure 5(a), A t tend-Conferenceis the only plan activated, and it is marked \[Next\].As the plan is expanded, \[Next\] is moved to the firstaction of the decomposition sequence (Figure 5(b)).This expansion is attributed to information providedby the previous peaker, for example, First, you mustregister for the conference.
(If such an utterance isnot made, no expansion takes place.)
Then, if thesubsequent speaker has a plan for the registration pro-cedure, the domain plan for Reg is ter  is expandedunder Reg is ter .
Again, \[Next\] ismoved to the firstelement of the component plan sequence, GetForm(Figure 5(c)).We are implementing this model using the Span-ish travel agency domain corpus and the JapaneseATR conference r gistration corpus.
The implemen-tation is in CMU CommonLisp, and uses the CMUFrameKit frame-based knowledge r presentation sys-tem.
The module accepts output from the GeneralizedLR Parsers developed at Carnegie Mellon University\[Tomita, 1985\].4.
Examples4.1.
Tracking the Currently Active PlanIn our model, we provide a mechanism for consis-tently tracking the individual speaker's currently ac-tive plans.
First, we show how the model keeps trackof a speaker's plans within mixed-initiative dialogue.The state of the stack after utterance (2), What am Isupposed to do?, in Dialogue I, should look like Fig-ure 6.
P lan  3 represents a domain plan of SpA,28((HEADER: Set-Itinerary)(Decomposition: Set-Destination Decide-Transportation ...)((HEADER: Decide-Transportation)(Decomposition: Tell-Depart-Times Tell-Outcomes Establish-Agreement))Figure 3: Domain Plan Schemata for Dialogue II (Partial Listing)Attend-Conference\[Next\](a)Attend-ConferenceRegiste/r\[Next\](b)Attend-ConferenceRegite/r,,4",,GetForm Fill Send\[Next\](c)Figure 5: Incremental Domain Plan Expansion for Dialogue Iand P lan  4 represents a domain plan of SpB.
SinceSpA does not know what he or she is supposed to doto attend the conference, the only plan in the stackis A t tend-Conference .
SpB knOWS the regis-tration procedure details, so his or her domain planis expanded to include Reg is ter ,  and then its de-composition into the GetForm F i l l  Send actionsequence.
The first element of the decomposition isfurther expanded, and an action sequence notHaveGetAdrs Send is created under GetForn~ Theaction sequence notHave GetAdrs Send is a se-quence where the secretary's plan is to ask whetherSpA already has a registration form (notHave), andif not, to ask his or her name and address (GetAdrs),and to send him or her a form (Send).Figure 7 shows the state of the stack in DialogueI after SpB's question, utterance (4), Do you have aregistration form?.
From the information given in hisor her previous utterance, (3), First, you must registerfor the conference., SpA's domain plan (Plan3) wasexpanded downward.
Thus, P lan3 has a Reg is terplan, and it is marked \[Next\].
For SpB, notHaveis marked \[Next\], indicating that it is his or her plancurrently under consideration.
Although SpB's cur-rently active plan is notHave, SpA considers theRegis ter  plan to be the current plan because SpAdoes not have the schema that includes the decompo-sition of the Reg is ter  plan.4.2.
Explaining Speaker Planning BehindUtterancesSecond, our model explains a speaker's active plan-ning behind an utterance.
In the Litman and Allenmodel, SpA's utterance (2) in Dialogue I, What am Isupposed to do ?, cannot be explained if the domain planAt tend-Conference  is shared by the two speak-ers.
In such a jointplan both speakers would know thata conference participant needs to register for a confer-ence.
However, the rational agent will not ask Whatam I supposed to do?
if he or she already knows thedetails of the registration procedure.
But, if such anexpansion isnot made on the stack, the system cannotprocess SpB's reply, First, you must register for theconference., because there would be no domain planon the stack for Register.
This dilemma cannot besolved with ajointplan.
It, however, can be resolved byassuming individual domain plan libraries and an activedomain plan for each speaker.
As shown in Figure 6,when SpA asks What am I supposed to do?, the activedomain plan is solely At tend-Conference ,  withno decomposition.
SpB's domain plan, on the otherhand, contains the full details of the conference r gis-tration procedure.
This enables SpB to say First, youmust register for the conference.
Italso enables SpB toask Do you have a registration form?, because the ac-tion to ask whether SpA has a form or not (notHave)is already on the stack due to action decomposition.Our model also explains speaker planning in Dia-logue II.
In this dialogue, the traveler (SpB)'s utterance(3), Couldn't we leave in the morning ... instead of at29PlanlPlan2\[Completed\]INTRODUCE-PLAN(SpA, SpB, II,Plan2)REQUEST(SpI, SpB, II)SURFACE-REQUES$(SpA, SpB, II)ID-PARAM(SpB,SpA,proc,AC,Plan3)II: INFORMREF(~pB, SpA,proc)Plan3AC : Attend-Conference\[Next \]Plan-4 Attend-ConferenceReg s t /e r  ...GetForm Flll Sendn o t ~\[NextlFigure 6: State of the Stack after Utterance (2) in Dialogue IPlan-5 \[Completed\]INTRODUCE-PLAN (SpB, SpA, I2, Plan6)iREQUEST ( Sp~, SpA, I2 )iSURFACE-REQUeST ( SpB, SpA, I2 )Plan-6'Plan2ID-PARAM (SPA, SpB, have ( form), NH, P lan-4 ) |I2 : INFORMIF (~pA, SpB, have (form))\[ Completed\]ID-PARAM (SpB, SpA, proc, AC, Plan3) |I 1 : INFORMREF (~pB, SpA, proc)Plan3AC : Attend-ConferenceRegist/er\[Next\]Plan-4 Attend-ConferenceReg st/er ...GetForm Fill SendNH: not~\[Next\]Figure 7: State of the Stack after Utterance (4) in Dialogue I30night?, can be explained by the plan specific tO SpBwhich is to State -Depar t -P re ference .
In ourmodel, we assign plans to a specific speaker, depend-ing upon his or her role in the dialogue, e.g., traveleror travel agent.
This eliminates the potential combina-torial explosion of the number of schemata required inthe current model.4.3.
Tracking Conversational Initiative ControlThird, our model provides a consistent mechanism totrack who controls the conversational initiative at anygiven utterance in the dialogue.
This mechanism pro-vides an explanation for the initiative control rules pro-posed by \[Walker and Whittaker, 1990\], within theplan-based model of dialogue understanding.
Our dataallow us to state the following rule:?
When Sp-X makes an utterance that instantiatesa discourse plan based on his or her domain plan,then Sp-X controls the conversational initiative.This rule also holds in the nesting of initiatives, uchas in a clarification dialogue segment:?
When Sp-X makes an utterance that instantiates adiscourse plan based on his or her domain plansand Sp-Y replies with an utterance that instantiatesa discourse plan, then Sp-X maintains control ofthe conversational initiative.In Dialogue II, illustrated in Figure 8, SpB'squestion, utterance (3), Couldn't we leave in themorning ... instead of at night?, instantiates dis-course P lan  5.
It stems from SpB's domain planState -Depar t -Pre ference .
In this case, thefirst conversational initiative tracking rule applies, andthe initiative is transferred toSpB.In contrast, SpB's response of Really?
to SpA'sutterance (5), You would be traveling during the daywhich would be difficult because it's very hot., is a re-quest for clarification.
This time, the second rule citedabove for nested initiatives applies, and the initiativeremains with SpA.5.
Related Worksallows other embedded turn-takings.
2) Communica-tion plans - plans that determine how to execute orachieve an utterance goal or dialogue goals.
3) Di-alogue plans - plans for establishing a dialogue con-struction.
4) Domain plans.
The ATR model attemptsto capture complex conversational interaction by usinga hierarchy of plans whereas our model tries to capturethe same phenomena by speaker-specific domain plansand discourse plans.
Their interaction, communica-tion, and dialogue plans operate at a level above ourspeaker-specific domain plans.
Their plans serve as atype of meta-planning to their and our domain plans.An extension enabling their plan hierarchy to operateorthogonally toour model would be possible.Our model is consistent with the initiative controlrules presented in \[Walker and Whittaker, 1990\].
Intheir control rules scheme, however, the speaker con-trois the initiative when the dialogue utterance type(surface structure analysis) is an assertion (unless theutterance is a response to a question), a command,or a question (unless the utterance is a response to aquestion or command).
In our model, the conversa-tional initiative control is explained by the speaker'splanning.
In our model, control is transferred fromthe INITIATING CONVERSATIONAL PARTICIPANT (ICP)tO the OTHER CONVERSATIONAL PARTICIPANT (OCP)when the utterance by the OCP is made based on theOCP's domain plan, not as a reply tO the utterance madeby the ICP based on the ICP's domain plan.
Caseswhere no initiative control transfer takes place despitethe utterance type (assertion, command or question)substantiate hat these utterances are (1) an assertionwhich is a response by the ICP through rD-PARAMtO answer a question, and (2) a question to clarify thecommand or question uttered by the ICP, and whichincludes a question functioning as a clarification dis-course plan.
Our model provides an explanation for theinitiative control rules proposed by \[Walker and Whit-taker, 1990\] within the framework of the plan-basedmodel of dialogue understanding.
\[Walker and Whit-taker, 1990\] only provide a descriptive explanation ofthis phenomenon.Carberry \[Carberry, 1990\] discusses plan disparity inwhich the plan inferred by the user modeling programdiffers from the actual plan of the user.
However,her work does not address mixed-initiative dialogueunderstanding where either of the speakers can controlthe conversational initaitive.The ATR dialogue understanding system \[Yarnaokaand Iida, 1990\] incorporates a plan hierarchy com-prising three kinds of universal pragmatic and domainplans to process cooperative and goal-oriented dia-logues.
They simulated the processing of such dia-logues using the following plans: 1) Interaction plans- plans characterized by dialogue turn-taking that de-scribes asequence of communicative acts.
Turn-taking6.
ConclusionIn this paper we present an enhanced model of plan-based dialogue understanding.
Our analysis demon-strates that the joint-plan assumption employed in the\[Litman and Allen, 1987\] model is too restrictive totrack an individual speaker's instantiated plans, ac-31Plan5 \[Completed\]INTRODUCE-PLAN (SpB, SpA, If, Plan6)REQUEST ( Sp~, SpA, I 1 )SURFACE-REQUEST (SpB)SpA, Ask-If (depart (morning)) )Plan6ID-PARAM(SpA, SpB,possible(depart(morning)),PREF,Plan4)If: INFORMIF(SpA, SpB!possible(depart(morning)))P lan3 Set-ItinerarySet -Dest in~Decide-TransportatlonTell-Depart- Te l l -  Establish-Times Outcomes Agreement\[Next\]P lan4 Go-Travel/Visit-Travel-AgentPREF:Tell ~- State~'-Depart-Destination Preference\[Next\]Figure 8: State of the Stack after Utterance (3) in Dialogue IIcount for active planning behind speaker utterances andtrack the transfer of conversational initiative control indialogues, all of which characterize mixed-initiativedialogues.
Our model employs peaker-specific do-main plan libraries and the incremental expansion ofdomain plans to account for these mixed-initiative di-alogue phenomena.
We have used representative dia-logues in two languages todemonstrate how our modelaccounts for these phenomena.7.
AcknowledgementsWe would like to thank Dr. John Fought, LinguisticsDepartment, University of Pennsylvania, for his helpin collecting the Spanish travel agency domain corpus,and Mr. Hitoshilida nd Dr. Akira Kurematsu for pro-viding us with their Japanese ATR conference r gistra-tion domain corpus.
We also thank Mr. Ikuto Ishizuka,Hitachi, Japan and Dr. Michael Mauldin, Center forMachine Translation, Carnegie Mellon University forimplementation support.References\[Carberry, 1990\] Carberry, S., Plan Recognition inNatural Language Dialogue, The MIT Press, 1990.\[Fikes and Nilsson, 1971\] Fikes, R., and Nilsson, N.,"STRIPS: A new apporach to the application of the-orem proving to problem solving," Artificial Intelli-gence, 2, 189-208, 1971.\[Grosz and Sidner, 1990\] Grosz, B. and Sidner, C.,'~Plans for Discourse," In Cohen, Morgan and Pol-lack, eds.
Intentions in Communication, MIT Press,Cambridge, MA., 1990.\[Litman and Allen, 1987\] Litman, D. and Allen, J., "APlan Recognition Model for Subdialogues in Con-versation", Cognitive Science 11 (1987), 163-200.\[Pollack, 1990\] Pollack, M., '~Plans as Complex Men-tal Attitudes," In Cohen, Morgan and Pollack, eds.Intentions in Communication, MIT Press, Cam-bridge, MA., 1990.\[Sacerdoti, 1977\] Sacerdoti, E. D., A Structure forPlans and Behavior, New York: American Elsevier,1977.\[Tomita, 1985\] Tomita, M., Efficient Algorithms forParsing Natural Language, Kluwer Academic,1985.\[Van Ess-Dykema and Kitano, Forthcoming\] VanEss-Dykema, C. and Kitano, H., Toward a Compu-tational Understanding Model for Mixed-InitiativeTelephone Dialogues, Carnegie Mellon University:Technical Report, (Forthcoming).\[Walker and Whittaker, 1990\] Walker, M, and Whit-laker, S., "Mixed Initiativein Dialogue: An Investi-gation into Discourse Segmentation," Proceedingsof ACL-90, Pittsburgh, 1990.\[Yamaoka and Iida, 1990\] Yamaoka, T. and Iida, H.,"A Method to Predict he Next Utterance Using aFour-layered Plan Recognition Model," Proceed-ings of the European Conference on Artificial Intel-ligence, Stockholm, 1990.32
