Proceedings of the 2010 Workshop on Graph-based Methods for Natural Language Processing, ACL 2010, pages 42?46,Uppsala, Sweden, 16 July 2010. c?2010 Association for Computational LinguisticsA Character-Based Intersection Graph Approach to Linguistic PhylogenyJessica EnrightUniversity of AlbertaEdmonton, Alberta, Canadaenright@cs.ualberta.caAbstractLinguists use phylogenetic methods tobuild evolutionary trees of languagesgiven lexical, phonological, and morpho-logical data.
Perfect phylogeny is too re-strictive to explain most data sets.
Con-servative Dollo phylogeny is more permis-sive, and has been used in biological ap-plications.
We propose the use of conser-vative Dollo phylogeny as an alternativeor complementary approach for linguisticphylogenetics.
We test this approach on anIndo-European dataset.1 Introduction1.1 Language PhylogenyA linguistic phylogenetic tree is a tree describingthe evolution of some set of languages.
Usually,we build such a tree using information given by aset of characters associated with those languages.We say that a character back-mutated if afterevolving from 0 state to 1 state, it subsequentlyis lost and switches back on the tree from 1 stateto 0 state.
We say that a character has parallelevolution if it evolves twice on the tree from state0 to state 1 independently.
We say that a charac-ter is borrowed if, on the true evolutionary tree, ithas been transfered from one branch to another bycontact between linguistic groups.
Loanwords arean example of this.1.2 Perfect phylogenyGiven a set of binary characters C = {c1...cj},we say that a rooted tree T = (r, VT , ET ) withlanguages L = l1...lk as the leaf nodes of T isa perfect phylogeny if there is a binary labelingof each character at each node such that the rootnode is labeled with a zero for each character, andfor each character both the subtree induced by thenodes labeled 1 at that character, and the subtreeinduced by the nodes labeled 0 at that characterare connected.This means that each character evolves exactlyonce, and that there is no back-mutation or bor-rowing.We can recognize whether a set of charactersadmits a perfect phylogeny in polynomial time(Felsenstein, 2004).
Unfortunately, often charac-ter data does not admit a perfect phylogeny.Usually the question given character data is:How far away is this data from admitting a perfectphylogeny?
What is the minimum level of bor-rowing, back mutation or parallel evolution thatwe must allow to produce a tree that describes thisdata?
Answering this question is NP-Hard (Day etal., 1986).Many approaches describe and formalize thisquestion.
Nakhleh et al (2005b) provide an ex-cellent survey of linguistic phylogenetic methods.Nakhleh et al (2005a) proposed perfect phy-logeny networks as a way of considering the phy-logeny problem.
A perfect phylogeny network isa graph that is not required to be a tree such thatevery character exhibits a perfect phylogeny on atleast one of the subtrees of that graph.Unfortunately, even given a phylogenetic treeand character data, determining the minimumnumber of edges one must add to produce a per-fect phylogeny network is NP-Hard (Day et al,1986).
Nakhleh et al (2005a) mention that ap-plying the perfect phylogeny network approach totheir Indo-European language dataset is tractableonly because one need only add very few edges totheir tree to produce a perfect phylogeny network.1.3 Dollo PhylogeniesIn contrast to a perfect phylogeny, a Dollo phy-logeny allows an arbitrary number of back muta-tions.Given a set of binary characters C = {c1...cj},we say that a rooted tree T = (r, VT , ET ) with42{1, 1, 0 }{0, 1, 0 } {0, 0, 1 }{1, 0, 1 }{1, 1, 0 }{1, 1, 0 }{0, 0, 0 }{1, 0, 1 }Figure 1: A tree that is a conservative Dollo phy-logeny, but not a perfect phylogeny, as charac-ters one and two back-mutate.
The lists at eachnode contain the state of characters one, two,and three in that order.languages L = l1...lk as the leaf nodes of T isa Dollo phylogeny if there is a binary labeling ofeach character at each node such that the root nodeis labeled with a zero for each character, and foreach character the subtree induced by the nodeslabeled 1 is connected.This means that each character evolves exactlyonce but an arbitrary number of back-mutationsare allowed.
Unfortunately, every set of charac-ter data admits a Dollo phylogeny.
Clearly Dollophylogeny is too permissive to be a useful notionin linguistic phylogenetics.Przytycka et al (2006) discussed the idea of aconservative Dollo phylogeny.Given a set of binary characters C = {c1...cj},we say that a rooted tree T = (r, VT , ET ) withlanguages L = l1...lk as the leaf nodes of T is aconservative Dollo phylogeny (CDP) if there is abinary labeling of each character at each node suchthat the root node is labeled with a zero for eachcharacter, for each character the subtree inducedby the nodes labeled 1 is connected, and if twocharacters appear together in their 1 states in thetree at an internal node, they also occur together intheir 1 states in the tree at a leaf node.
Recall thatthe leaves in this tree are the languages for whichwe have data.
For an example, see Figure 1.If two characters existed together in some an-cestral language, they must also exist together in atleast one leaf language.
That is, if they have everexisted together in the same language, we have ev-idence of it in the form of a known language thatpossessed both of those characters.
Is this a rea-sonable assumption?
We have no evidence thatit is.
However, it?s certainly a more reasonableassumption than that required for a perfect phy-logeny.
We expect that often, data sets will notadmit a CDP, and that, like for perfect phylogeny,the question will be: How far away are the datafrom admitting a CDP?Przytycka et al (2006) prove that a set of char-acters admit a CDP if and only if their intersectiongraph is chordal.
Chordal graphs are graphs withno induced cycles longer than three vertices.
Roseet al (1976) provide a linear-time recognition al-gorithm for chordal graphs.Graph G = (V,E) is an intersection graph of afamily of sets S if there is a bijection F between Vand S such that for every two sets s, t ?
S F(s)is adjacent to F(t) if and only if s intersects t.Set s intersects set t if they share at least one ele-ment.
Given sets, we can compute their intersec-tion graph in linear time.
For an example of anintersection graph derived from a family of sets,see Figure 2.
{1, 2},  {2, 3},  {3}, {3, 4}, {5, 3}a b c d ea bc edFigure 2: An example of a family of sets labeleda, b, c, d, e on the top and the intersection graphof those sets on the bottom.We can then determine if a set of characters ad-mits a CDP in linear time.
This approach to phy-logeny was used by Przytycka et al (2006) in abiological phylogenetic application.
Here, we useit for linguistic phylogeny.2 MethodologyWe implemented an algorithm to, given a charac-ter dataset, compute the intersection graph of thosecharacters, and determine whether the resultinggraph is chordal as given by Rose et al (1976).This tells us whether or not the dataset admits aCDP.
We also implemented an exhaustive searchthat computes the minimum number of charactersthat must be borrowed to otherwise admit a CDP.43We ran our program on the Indo-European character dataset used by Nakhlehet al (2005a), and available online athttp://www.cs.rice.edu/ nakhleh/CPHL/.2.1 Language Family GroupingNakhleh et al (2005a) combined established lan-guage groups into a single language during com-putation to decrease computation time.
We use thesame families as they do, and do the same in twoof our experiments.For example, we consider the Tocharian lan-guage family, consisting of Tocharian A andTocharian B to be a single language when buildingour intersection graph.
This language grouping isdone as a preprocessing step to the construction ofthe intersection graph of the characters.We expect this transformation to be particularlyuseful in the CDP setting, beyond just decreasingcomputation time.
We expect it will make our datacloser to admitting a CDP in a way consistent withtrue evolutionary history.Consider the difference between the intersec-tion graph of a set of characters with family group-ing and without.
Let s and t be two characters that,are considered to intersect with family grouping,but not without.
Then s and t are not present inany of the same languages, but there are two lan-guages li, lj such that li has character s but not tand language lj has character t but not s, and liand lj are in the same family L.We use the language family definitions given byNakhleh et al (2005a), where these language fam-ilies are identified as consistent with all characters,and it is argued that it is very unlikely there is anyborrowing between a portion of the tree inside thefamily, and a portion of the tree outside the family.Therefore, if s and t are both present withinleaves in the language family L, and neither is bor-rowed from outside the family, then each of s, t iseither present only within language family L, oris present in at least one internal node ancestralto language family L. If s and t are only presentwithin the language family, they are not informa-tive when language family grouping is used.However, if both s and t are present at an in-ternal node ancestral to language family L, thenthis is important information that we have derivedby applying family language grouping, and willmake the data closer to admitting a CDP in termsof number of borrowings required.2.2 Binary DataWe made the data binary by separating states ofa given character as best indicated by notes pro-vided by Nakhleh et al (2005a) on their coding ofthe characters.
In making the data binary, we havelikely lost some constraining information.
Whena language (or language family, when that group-ing was used) has a unique state at a character,we coded this as having all possible non-ancestralstates.
The basis for this is that some of thesecodes indicate that there is no data for that char-acter at that language, or that if that language ac-tually does have a unique state at that character,it is uninformative, but could have evolved fromany other state.
Data processing by someone morehighly trained in linguistics would either confirmthis decision or provide an alternative approach.We have tried to remain as close as possible to howthe data is used in Nakhleh et al (2005a).3 ExperimentsWe ran four experiments to investigate the use-fulness of the conservative Dollo parsimony ap-proach.
We ran our implementation on:1.
All characters without language familygrouping2.
All characters with language family grouping3.
Phonological and morphological charactersonly without language family grouping4.
Phonological and morphological charactersonly with language family grouping4 ResultsWe give our results in Table 4For the morphological and phonologicaldataset, both grouped and ungrouped, we ex-tracted a phylogenetic tree from our program?soutput.
These trees were consistent with Tree Ain (Nakhleh et al, 2005a).
The fact that we man-aged to build a tree consistent with expectationswithout any input tree is very encouraging.Recall that when we use language grouping wecombine all languages identified as being from anestablished family by Nakhleh et al (2005a) intoa single language.
For example, instead of con-sidering both Tocharian A and Tocharian B, in ourexperiments with language grouping we considera single language, Tocharian, that has all charac-teristics of Tocharian A and all characteristics ofTocharian B.44Table 1: The results of conservative Dollo phylogeny checking algorithm on modified versions of theIndo-European character dataset as used in (Nakhleh et al, 2005a).
We ran each program for at most 1hour.
Entries of ?Too slow?
indicate that we did not allow the program to halt.Dataset Admits a CDP?
Minimum number of languagesthat must borrowAnswer Time Answer TimePhonological, Morphological Datawithout Language GroupingYes <1 s 0 <1 sPhonological, Morphological Datawith Language GroupingYes <1 s 0 <1 sAll Data without Language Grouping No <1 s - Too slowAll Data with Language Grouping No <1 s 2 < 1 sIn our experiments without language grouping,we do not combine languages in this way, and in-stead consider all 24 languages separately.5 DiscussionWhen is the CDP approach useful for linguisticphylogenetics?Because a CDP allows back-mutation, it islikely most useful for datasets that exhibit a lot ofback mutation, and not a lot of borrowing.
Phono-logical and morphological characters are morelikely to fit this requirement than lexical data.
Thisis reflected in our positive results on the phonolog-ical and morphological characters alone.In contrast, when we included the lexical data,the dataset did not admit a conservative Dollo par-simony, whether or not we used language familygrouping.
We expect this is due to borrowing oflexical characters.The full dataset with language family group-ing was much closer to admitting a conserva-tive Dollo parsimony than the full dataset with-out language family grouping.
As explained in ourMethodology section, this was expected and rein-forces our position that language family groupingis extremely useful when computing conservativeDollo phylogenies.Our experiments ran in either negligible time,or were not allowed to halt.
The speed of the fastexperiments suggests that computing conservativeDollo phylogenies might be useful in construct-ing a tree when no tree is known, and the amountof character data causes computing other types ofphylogenies to be intractable.6 Future WorkWe are currently pursuing several extensions tothis work.First, we are developing an improved heuristicsearch for the minimum number of edges that needto be removed from or added to a graph to makethe resulting graph chordal.
This will enable us touse the Dollo phylogeny approach outlined hereon character data sets that require more borrowingto fully explain them.Using this improved search, we will run experi-ments on other sets of character data.Nakhleh et al (2005a) started with several pro-posed trees in their work on perfect phylogeneticnetworks.
We plan to implement a version of ourCDP approach that takes as input a proposed tree.This version will calculate the minimum numberof edges that must be added to create a Dollophylogeny network, as analogous to Nakhleh etal.
?s perfect phylogenetic network.
This minimumnumber of edges would be useful as a lower boundfor the required number of edges one must add toproduce a perfect phylogeny network.7 ConclusionWe have presented an alternative phylogeny thatmay be of use in linguistic phylogenetics, par-ticularly on phonological or morphological data.We have proposed a number of future extensionsbased on our experiments that we hope will im-prove the performance of this approach.AcknowledgmentsThe author would like to acknowledge the helpfulinput of reviewers, as well as Dr. Gzegorz Kon-drak and Dr. Lorna Stewart.45ReferencesWilliam Day, David Johnson, and David Sankoff.1986.
The computational complexity of inferringrooted phylogenies by parsimony.
MathematicalBiosciences, 81:33?42.Joseph Felsenstein.
2004.
Inferring Phyloge-nies.
Number 1.
Sinauer Associates, Massachusetts,USA.Luay Nakhleh, Don Ringe, and Tandy Warnow.
2005a.Perfect phylogenetic networks: A new methodologyfor reconstructing the evolutionary history of natu-ral languages.
Language (Journal of the LinguisticSociety of America), 81(2):382?420.Luay Nakhleh, Tandy Warnow, Don Ringe, andSteven N. Evans.
2005b.
A comparison of phyloge-netic reconstruction methods on an ie dataset.
TheTransactions of the Philological Society, 3(2):171 ?192.Teresa Przytycka, George Davis, Nan Song, and Dan-nie Durand.
2006.
Graph theoretical insights intoevolution of multidomain proteins.
Journal of com-putational biology : a journal of computationalmolecular cell biology, 13(2):351?363.Donald J.
Rose, R. Endre Tarjan, and George S. Leuker.1976.
Algorithmic aspects of vertex elimination ongraphs.
SIAM Journal of Computing, 5(2):266?283.46
