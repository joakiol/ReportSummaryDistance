J apanese  Sentence  Ana lys i s  as Argumentat ion3-9-11,Ak i ra  Sh imazuNTT Basic  Research  Laborator iesMidor i -cho ,  Musash ino-sh i ,  Tokyo  180, Japanshimazu ~ntt-20.
ntt.jp@relay, cs.netAbstractThis paper proposes that sentence analysis shouldbe treated as de feasible reasoning, and presents ucha treatment lbr Japanese sentence analyses using anargumentation system by Konolige, which is a for-malizat'ion of defeasible reasoning, that includes ar-guments and defeat rules that capture defeasibility.1 IntroductionSentence analyses are essentially reasoning processeswhich derive assumptions/expectations t?om ob-served input sentences.
A syntactic structure ex-.tracted fl'om a sentence by parsing is only a pre-diction, and may be invalidated by semantic or con-textual analyses.
This is because interpretation of asentence requires the use of semantic and contextualanalyses to determine its meaning, and because infor-mation expressed by an utterance is partial.
Further-more, even when utterances are not grammatical, itis impractical for a parser to reject them because oftheir ungrammatieality.
Therefore, the following twodesiderata can be considered for such sentence analy-ses: to select plausible candidates from among manypossible candidates and to integrate, in a uniformmanner, syntactic, semantic, m~d pragmatic process-ing.From these viewpoints, this paper proposes thatsentence analysis hould be treated as defeasible rea-soning, and presents uch a treatment using an ar-gumentation system \[7\], which is a formalization ofdefeasible rea~soning, that includes arguments anddefeat rules that capture defe,asibility.
In particu-lar, this paper discusses treatments of chart pars-ing \[5\], e~use analyses, and interpretation of Japanesenoun phrases with adnominal particles.
Since thereis a continuity from syntactic analysis (parsing) tosemantic and contextual analyses when viewed asreasoning processes, we use the word analysis ratherthan parsing.2 Underlying Frameworks2.1 Sentenee  Ana lys i s  as Deduct ionMental processes can be viewed as reasoning pro-cesses that are invoked by observations of exter-nal environments and interactions with other agents.Reasoning has been generally formalized and imple-mented as deduction frameworks.
Even parsing andgeneration can be formalized a~s deduction \[12\] [15\].This treatment has several advantages, including,in particular, theoretical cleanliness, harmony withsemantics and pragmatics, generalization of pars-ing, gap a.nd unbounded ependency treatments hatavoid the addition of specific mechanisms.
The de-ductive formalisms \['or parsing proposed by Shiebercorrespond to chart parsing \[5\].
\\"e describe deduc-tion rules for parsing \[15\], which satis{)' our presentrequirements for describing sentence analysis and de-feat rules.
The basic inf0rence rules are predictionand completion.The inference rule of prediction is as follows.\[a ,--- b7, i, j, a.\] b ~ ,3\[b ~ /3, j , j ,_ \]The inference rule of completion is as follows.\[a'--bT,i,j, ct\] \ [b~,j ,k,9\]\[a~- 7, i, k, al~\]Itere, \[a ,-- 3, i,j,c*\] represents an edge where iis its starting position, j is its ending position, andwhere a is analysed, b :-, /3 represents a grammarrule.
'Ib be precise, these rules are schemata.
Incontr~st to these rules, grammar ules in DCG them-selves flmction as deduction rules.2.2 Argunmntat ion  SystemMany types of common sense reasoning are said tobe defeasible; such reasoning involves inferences thatare plausible on tile basis of current information,but that rnay be invalidated by new information.Konofige defined a simple and natural system thattbrmalizes uch rea~soning.
This tbrmalization usedarguments pecified by schemata, tie showed howthe Yale Shooting Problem and the plan recogni-tion problem can be treated in an intuitively sat-isfying manner by using the argumentation syst.emARGH \[7\], \[8\].
According to \[8\], the ARGtI is a tbr-real system, in the sense that its elements are formalobjects.
It is similar in many respects to so-calledjustification-based 'Duth Maintenance Systems, butdiffers in tile diversity of argumentation allowed, andin the fact that arguments for a proposition and itsnegation may coexist without contradiction.
For-mally, an argulnent is a relation between a set ofpropositions (the premises of the argument), and an-other set of propositions (the conclusion of the argu-ments).
Argumentation is started with an initial sel259of facts.
Then, argument schemata re used to con-struct plausible arguments.
The process of decidingwhich arguments are valid is carried out using defeatrules.
Although there are other formalizations fordefeasible reasoning, such as abduction \[1\], \[3\], sinceour main concern is to clarify inferences in sentenceanalysis and the relations between them, we use theargumentation system here, without consideration ofthe alternatives.3 Sentence  Ana lys i s  asArgmnentat ionSentence analysis is comprised of reasoning pro-cesses which derive assumptions/expectations fromobserved input sentences.
From such a viewpoint,sentence analysis is reatly abduction rather than de-duction:Baekground +Assum, ption t- sentenceTherefore, various decisions pertaining to the as-sumption expectations are carried out in the sen-tence analysis processes.
These decisions may beinvalidated later in the processes as the analysis be-comes further elaborated.
The ba~sic decisions areperformed, when syntactic structures and semanticstructures (logical forms) are extracted along withtheir contextual analyses.
The important point hereis that we can view these analysis processes as deci-sions in a defeasible reasoning process; in this paper,we model this point with an a.rgumeutation process.Basic arguments in analysis and related defeat rules~tre presented in the following.a.1 Char t  Pars ing  as Argumentat ionBased on the framework that defines chart parsingas deduction, we define arguments corresponding tofundanaental rules of top-down chart parsing, predic-tion, and completion steps, as follows.member(\[a ~-- bT, i, j, a.\], Agenda),member(\[b ?- ,8, j, j, _\], Agenda) \[sn+l}{ere, Chart and Agenda respectively denote a chartand an agenda list as in usual implementations ofchart parsing.
Lower case roman and Greek lettersindicate schema variables.,~en, be,'(\[a ~- bT, i, j, o.\], Agenda),mernber(\[b +-, j, k, ~\], Chart) Is,, c?
'2~'~member(\[a ,-- 7, i, k, ab\], Agenda) Is,,+1This is for cases where an inactive edge \[b ~-, j, k, fl\]is in Chart.
Cases where the inactive edge is inAgenda are described similarly.
Both of the abovearguments may be satisfied when applicable.Since, in a chart parsing algorithm, an edge fromtile agenda must be removed and added to the chartwhen the above arguments are applied, the followingargument is necessary.mernber(\[a ~-- fl, i, j, c~\], Agenda) \[s,, ,a~o,~me.
ber(\[a i, j, Agenda),rncmbe r( \[a ~-- /3, i, j, a\] ,C h.art ) I.s,~+lHere, we assume that propositions continue to holdunless they are denied.
That is,-- ~ ISn.t-1A subsume argument is necessary to keep edgesnonredundant.
This is one characteristic of chartparsing.member(e, Agenda), already-in(e, Chart) Is,' "~ '~ -~mernber( ?, Agenda) Is,~+lOnly when the subsume argument does not hold,is the prediction or completion argument permitted.Therefore, the following defeat rule is necessary.When both a subsume argument and a pre-diction/completion argument are possible,tile former defeats the latter.One of the important characteristics of chart pars-ing is that it can control the order of parsing pro-cesses, that is, the order of edge selections from theagenda.
This aspect is suited for treating defeasiblereasoning.
To incorporate such control, we modifytile prediction and completion arguments.
First, weselect an edge from Agenda and put it on a list calledCache.
Then, we apply the prediction and comple-tion argltmeltts to the edge in Cache, and add theresulting edges into Agenda.
The selection argumentis as follows.select member(?,Agenda) \[s,~ ==:>.--member(e, Agenda),member(O, Cache) \[sn+ 1':\['he dge addition argument is modified by replacingAgenda with Cache.Several selection arguments are generally possiblebecause of plural edges in Agenda.
Selections areclassified according to types of edges.
The followingis classification of selection arguments based on typesof edges in the premise of the arguments \[15\].prediction-type: ?
= \[a ,-- fl, i, i, _\]active-type: ?
= \[a ~ 7, i, j, fl\]inactive-type: ?
= \[a ~--, i, k, fl\]lexical-type: ?
= lexical inactive edgewhere we List only 4) in member(?, Agenda) insteadof listing tile whole selection argument.3,2 Sinmlat ion  of  LR  Pars ing  for Engl ishFor selections of instances of selection argument, hatis, selection of edges from the agenda, we have thefollowing defeat rules b~sed on \[15\], which guide theparser to determine an appropriate syntactic struc-ture of English sentences ms the first solution.
Thedeductive parser by \[15\] simulates LR parsing, whichreflects right association and minimal attachmentreadings.
(i) If there is more than one possible argument,prediction-types defeat lexieal-types, which de-feat active-types, which defeat passive-types.260 2(2) If (1) does not fully order possible arguments,arguments with items ending farther to the rightdefeat he others.
(3) If (1) and (2) together do not fully order possiblearguments, arguments with items constructedfrom the instantiation of longer rules defeat theothert~.Shieber devised the above preferences based oncorrespondences between an I,P~.
parser and a chartparser, and on preferences of shift/reduce and re-duce/reduce conflicts in English \[13\].4 Japanese Sentence Ana lys i s4,1 S imulat ion  of  LR Pars ing  for JapaneseFor ,Japanese sentences, however, the above defeatrules are inappropriate.
Japanese sentences have thefollowing characteristics.
* When we read/hear a. Japanese sentence fromleft.
to right, we usually relate the word/phrasejust, read to the next word.- A Japanese sentence generally have a recursivestructure derived by a rule modif ier  + h{ad \[2\].These two characteristics result in a tendency for.lapanese sentences to have left.
branching structureslike \[\[\[\[\[\[\[\[neko ga\] ikaketa\] ,,czur,d\] gel tabeta\].,;akana\] ,vet\] shinsendatla\] (The fish that the ratthat the cat chased ate was fresh.)
\[9\].
\Ve can cap-ture the left.
branching characteristics bythe strategyof re&tee preference when shifl/rc&~ce conflicts occuragainst Shieber's strategy, llere, these argumentsdo not me~m that a aapnese sentence always has aleft branching structure, but they" do mean that thepreferable reading tram to resuhs in the left branch-ing structure, provided that linguistic constraints aresatisfied, i, br example, R)r 7'arc, ga kou,,~ ~i iku(Taro Subj park Goal go.
"Taro goes to a park.
"),the structure is \[\[Taro gel,, v \[\[kouen ni\]vv ikuv\]8@,mtd is not left branching, since Taro ga is not re-lated to kouen.
In this case, we try to combine 7~r0ga with Ko,ten, and since a relation between "/at09a and Konen does not hold, the above structure istried.To simulate the strategy of reduce preference whenshill/red'ace cont\]icts occur, the following three rulesin addition to (1) replace rules (2) and (3) for a\[)roper treatment of Japanese.
(4) If (1) does not fl~lly order possible arguments,arguments with longer items defeat the oth-ers.
(Length is defined as ending position minusstarting position.
)(5) If (1) and (4) together do not fully order pos-sible arguments, arguments with items startingfarther to the left defeat he others.
((i) If (1), (4) and (5) together do not fully or-der possible arguments, arguments with itemspushed into the agenda earlier dethat the oth-ers.Rules (4) and (5) are based on the preference forleft, branching structures.
Becm.lse these preferencestend to prevent the parser from proceeding to theright, rule (6) is necessary for longer phrases.
Theserules have been tested for basic sentences \[17\], someof which are syntactically ambiguous.
For example,there are many Japanese noun phrases that have thefollowing pattern.N1 no N~.
no .
.
.
no NkN1 poss Nu poss ... poss NkN~, of  N~-I of ... of  N1Generally there can be 2" -1 (2n-  3)!!/n!
possibli-ties for this noun phrase, which is computed bydependency combinations like ((((N1 no N2) no)...,~o)N,,).4.2 Feature  Incorporat ionContemporary parsing technology is based on con>plex feature structures.
Chart parsing uses such lin-guistic constraints presented by features when com-pletion and/or prediction steps are applied as in \[14\].Accordingly, for example, a compleX, ion argument forcases where an inactive edge is in the chart is as fol-lows.
"membe,'(\[a ~-- b 7, i, j ,  a, el, Cache),member( \[b , - ,  j, k, fl, f \], Chart),unify(e, \[b: f\], g)Is,~ ~'?
'2~ ~t~rnember(\[a +-- 7, i, k, ctb,g\], Agenda) Isn+,where e, f  and g are feature structures, and.unify(x, y, z) means that z is the result of unifyingx and y.Feature structures uniformly represent various lin-gtlistic constraints uch as subcategorizations, gaps,unbounded ependencies, and logical forms.
A prob-lem of this representation scheme is that it describesall possible constraints in one structure and dealswith them at once.
This is inefficient with many copyoperations due to unfications of unnecessary featuresthat do not contribute to successful unification \[6\].Thus treatments such as strategic unification \[6\] havebeen developed.It seems that a preferable approach is to treat lin-guistic constraints piecew'ise, taking into consider>tion abductivity of parsing, uniform integration ofvarious linguistic proc~ssings, and the problem of aunificat.ion-based approach.
From this point of view,we describe such treatments as, especially, incorpora-tion of word properties, case analyses, compositionof logical forms, and interpretMon of noun phraseswith adnominal particles.
This section discusses theincorporation of word properties, and the followingsection the others.Word properties are incorporated using lexical ar-guments when a. lexical edge is in Cache.
For ex-ample, semantic ategories of Tarv (boy's name) areincorporated using the following lexical argument..~,.t~,.
(\[Xv ~., O, 1, Ta,.o, X\], Ca,:he),scategorg(Taro, Animate) \[s,~,,.oun~.ov scatcgorg( X, Animate) Is,~4.13 261where the edge representation is redefined adding theidentifier X for the edge.
seategowj(x, e) means thatx's semantic ategory is c.Likewise, proposition partiele(x,p) is introducedfor edge \[P ~--, i,j,p, a:\] corresponding to a particle.Properties of constituents are generally propa-gated to their mother.
For example, since the aboveTaro and ga (subject e~se particle) are combinedto make a postpositional phrase (Pp), their prop-erties are propagated to the postpositional phrase,and used for case analyses.member(\[Pp +-, i, j, Np P, x y z\], Cache),seatcgory(y, c), particle(z, p) Is,,vpeategorvO:, p, e)where ppcategory(a~,p,c) means that postpositionalphrase Pp identified as a~ has particle p, usually acase particle, and semantic ategory e.A subcategorization frame for a verb is introducedas follows 1member(\[S ~,  j, k, v, x\], Cache),subcat(v, role,p, c) !,s,,~%':~,'ov subcat(x, role,p,c) {s,,+lwhere subcat(v,role,p,c) means thai.
verb v sub-categorizes for a postpositional phrase with par-ticle p and semantic category c. For example,subcat( X, Sub j, Ga, Animate) is introduced for edge\[S +--,2,3,asobu, X\] corresponding to verb asobu(play).
This is an argument for an intransitiveverb.
Here, for simplicity, we use the intransitiveease.
Arguments for plural case roles can be rep-resented in a similar manner by just adding ex-tra subcat predicates for the other cast roles likesubcat(v, role2, P2, C2).Like the property propagation of postpositionalphrases, when the above edge \[S --+, j, k, v, z\] is com-bined with active edge \[S ~ S, i,j, Pp, z y z\], a sub-categorization frame is propargated for later use, asfollows.member(IS +--, i, j, Pp S, x y z\], Cache),member(\[S ~,  j, k, v, z\], Chart),subcat( z, role, p, c) \[s,~,,,b~rov subcat(x, role,p, c) Is,,+~4.3 Case Analysis ArgumentsTwo important characteristics of Japanese sentencesare that it exhibit fi'ee word order, and that it haszero pronouns, i.e., subjects or objects which arenot explicitly expressed, but are supplied from thecontext.
Accordingly, ease particles and semanticcategories of head nouns are necessary to analyzerelations between postpositionM phrases (Pp) andverbs (v).
In some cases, only modal particles areused instead of case particles \[11\].
Therefore, seman-tic categories are important for subeategorization rcase analysis.
These characteristics of Japanese in-evitably necessitate defeat rules for practical analy-ses.1 Here, we assume that a verb itself can be ~ Japanesesentence, and use Japanese gr~tmmar rules including S -+v, and S --* PpS \[17\].262Two basic arguments of case analysis are a rulefor obligatory e~tses (subcategorization) and a rulefor optional cases (adjunction).Subeategor i za t ionThe argument for obligatory case analysis is as foblows.Pp S, i, j, V d, Cache),subcat( z, role, p, c), ppeategory(y , p, c) ls'n$ubcat relation(z, y, role) \[s,~+awhere relation(z,y, role) means that the postposi-tional phrase y is the case role of phra.se z.
For ex-ample, when there is ppcategory(Y , Ga, Animate)corresponding to postpositional phrase Pp with iden-tifier Y, and there is subcat(Z, Subj, Ga, Animate)corresponding to sentence S with identifier Z, we getrelation(X, Y, Sub j).Adjunet lonThe argument for optional case analysis is as follows.member(\[S ~,  Pp S, i, j, x y z\], Cache),adjunction(y, role, p, c), ppcategory( , p, c) I*,,~dj~io~ relation(z, y, role)Isn+lwhere adjunetion(y, role,p, c) means that postposi-tional phrase y modifies sentence z in the relationrole when y h~s the postposition particle p and thesemantic ategory c. 2 The properW a@unetion(y,role, p, c) is introduced for particles or adverbialnouDs ,No case relation holds when the above argumentsdo not hold, which is represented by the followingargument.member(\[S ,-, Pp S, i, j, a~ y z\], Cache),subcat(z, role,p, c) \[sncr\]ailurc -,relation(z, y, role) Isn+lThere is a similar argnment for an adjunct case.
Theabove argument always holds when it is applicable,but it should be defeated when the subcategorizationor adjunction argument holds.
Thus, we haw~ thefollowing defeat rule.If a subcategorizaiton or adjunction argu-ment holds, the case relation failure argu-ment is defeated.When a case relation failure argument holds, itis preferable to retract the premise edge which trig-gered case relation analyses.
This is represented bytile following argument.member(\[S' +--, Pp S, i, j ,  x v z\], C.d,e),-~relation( z, .Y,.
role) Is,, ,.c,r~ct-,member(\[S +--, ep S, i , j ,  x y z\], Cache) Ix2Strictly speaking, there are correlations betweentypes of adjunctive phrases (Pp) and types of setences(S) \[10\].
Here, we do not represent such correl,~tions forsimplici ty.Compos i t ion  of  Logical  FormsLike case analyses, composition of logical forms istreated as follows.member(\[S ~--, i, j, Pp S, x y z\], Cache),l f(z,p(a')),  If(a, a'), relation(z, a, ,') Is,'\]~'P l f (x,p(a')) I,s,~+,This is an argument for an intransitive verb wherel f (x ,x ' )  is introduced by lexieal edge introduc-tions, and means that the logical form of the con-stituent x is x'.
The premise predicates of thisargument are satisfied providied that instances ofrelation(z, y, role) and l f(y, y') hoht.
For the caseof Taro ga asobu (Taro subj-case play, "Taro plays"),I f (X ,  play(Taro)) holds when l f ( Z, play(a')), I f (Y ,Taro), and relation(Z, Y,  Subj) hold.4.4  P laus ib le  Case Analys isThe above two rules result in the possibility that agiven Pp may fill both obligatory and optional c~Lses.On the other hand, the requirements , ubcat(y, role,p, c), adjunction(y, role, p, c), and ppcategory(y,p, c) in the above rules are too strict, for practicalliguistic processings, since there are noun phraseswith modal particles, no particles, and no strict cat-egory matches.
Therefore, we relax the requirementppcategory(y, p, c) replacing it with one of the fol-lowing conditions.
That is, if some of the argumentshaving the following conditions hold, a given Pp canfill the corresponding case roles.
(a) ppeategory(y, p c),(b) ppcategory(y, p, e'), isa(c', c),(c) ppcategory(y, p, c'), -~i,sa(c', e),(d) ppcate,aory(y, p', c),(e) ppca* 9orv(y, p', i,a(c',if) pp ategorv(v, p', c'), c),where isa(e', c) means that c is a super semantic at-egory of e', and m(p') means that / is a modal par-ticle.Thus, when we replace the requirement conditionin the two arguments given above with conditions (a)- (f), we obtain twelve arguments for case analysis.This results in the possibility that some constituentmay be analyzed as filling more than one possiblecase role.
Therefore, we need defeat rnles to selectthe appropriate case analysis argument.
The follow-ing are two basic defeat rules.
(1) Generally, the strength order is (a) > (b) >(c) "> (d) > (e) > ( f )  except :for the follow-ing condition (2).
(e) and (f) do not hold foroptional cases.
(2) If both obligatory and optional cases fill (a)or (b), the obligatory case defeats the optionalcase.
That is, (a)ob > (b)ob > (a)op > (b)op.The fact.
that (c) and (f) cannot be satisfied by op-tional cases means that semantics i important whenoptional information is expressed.
Rule (2) meansthat syntax is important when case particles are ex-pressed explicitly.For the sentenceWalashi mo non-da.I modal-particle drink-past.I drank (something), too.an argument using (d) concludes that watashi mo isthe subject, while one using (f) concludes that it isthe object.
As (d) defeats (f), walashi rao is deter--mined to be the subject.
For the sentenceBudoushu mo non-da.wine modal-particle drink-past.
(Someone) drank wine, too.the reverse conditions hold.F'or noun phrases with relative clauses constructedby Np -~ 3 Np, the Np on the right of S may bea case element of S. In such cases, we use properlyt)pcategory(x,p,c) with variable p, which is not in-stanciated when applied, and it is assumed that only(a.)
and (b)hold.4.5 In terpretat ion  of  Japanese  NounPhrase  A no Bintegration of syntact.ic, semantic, and pragmaticprocessings is an interesting and complex problem\[3\], and the treatment by the argumentation frame--work is a promising approach to this problem.
Asfor such a problem, interpretation of Japanese nounphrase patterns of the type A no B, which aboundin Japanese \[16\], is a good testbed.A no B, which consists of two nouns A and ?'
withan adnominal particle no, and which has at.
least thesame ambiguity as B of A, is generally interpretedby assuming an appropriate predicate \[16\].
For ex-ample, densha no mado (a window of a train) is in-terpreted as densha (train) ni (Loc) aru (be) mado(window), supplementing a verb amt (be).
A no 1)is generally ambiguous when taken out of context asIIanako no e ("the picture of Hanako" or "ttanako'spicture") with a range of possible semantic relationsincluding possession, producer, purchase, and con--tent.We can interpret semantic relations of A no B byusing arguments in a similar way as before For ex-ample, from the following sentenceIIanako wa e o kakimasu.llanako paints a picture.tile propositions I f(X1, Paint(Hanako, O)) and I f(X2, Picture(O)) hold.
In this context, we can in-terpret an A no B relation of the following sentenceKono Hanako no e wa kireida.This picture of Hanako is beautififl.For the second sentence, the relation(Y, z, No)and I f (Y ,  Hanako) hold for an edge correspoindingto Pp (Hanako no), and I f (Z,  Picture(O)), l f (Z,p(a',O)), l f(a,a'),  relation(a, Z, No) for an edgeNp (e).
Then we have propositions relation(Y, Z,No) and l f (X ,  p(Zlanako, O)) based on the follow-ing argument.2635rnember(\[Np +--, Pp Np, i, k, x y z\], Cache),lf(z,p(y', z')), relation(y, z, No), If(y, y') Is~a_,_~ If(x, p(y', z')) I.%+1Finally, we get Paint(Hanako, O) using the follow-ing argument,relation(y, z, No), lf(z,p(al, a2)),lf(c, q(al,a~)) \[s,~in_~o lf(z, q(al, a2)) ISn+land thereby complement the meaning of Hanako noe by extrapolating the verb Paint.If it is learned that Hanako in fact bought he pic-ture, and not painted it, the final interpretation isdefeated using the same framework.5 ConclusionWe have presented an argumentation-based model ofJapanese sentence analysis, which is essentially ab-ductive.
We believe that this model is well suitedfor sentence analyses including various linguisticprocessings under conditions where information ex-pressed by utterances i  partial and its interpretationdepends on context, for the following reason.
Sincethe argumentation system is incremental nd has theability to cope with resource limitations \[8\], the anal-ysis systems based on this argumentation system canreturn an appropriate decision that has been derivedto that point.The original heuristics to which arguments and de-feat rules are formally described have been testedwith about a thousand sentences over a period ofmore than five years.
For case analysis, argumentsand defeat rules that handle zero prononns \[4\] couldbe introduced, thereby making reasoning about caseanalysis much more precise.
Generally speaking, de-feat rules for case analyses are based on the idea that,for new information, syntactic constraints are pre-ferred, and, for old information, semantic and wag-matic constraints preferred.
Finally, arguments suchas those presented by \[8\] will also be necessary.
Sucharguments hould be integrated with the argumentsdescribed in this paper.AcknowledgmentI would like to thank Douglas Appelt, Jerry Hobbs,Yasuhiro Katagiri, Masahito Kawamori, Kiyoshi Ko-gure, Kurt Konolige, Shozo Naito, Martha Pollack,and Ikuo Takeuchi for their discussion, comments,and improvements on this research and paper.References\[1\] D. E. Appelt.
Weighted abduction as an infer-ence method for plan recognition and evalua-tion.
In Proceedings of the Second InlernationalWorkshop on User Modeling, 1990.\[2\] T. Gunji.
Japanese Phrase Structure Grammar.Reidel, 1987.\[3\] J. tlobbs, M. Stickel, P. Martin, and D. Ed-wards.
Interpretation as abduction.
In Proceed-ings of the 26th Annual Meeting of the Associ-ation for Computational Linguistics, 1988.\[4\] M. Kameyama.
A property-sharing constraintin centering.
In Proceedings of the 2~th AnnualMeeting of the Association for ComputationalLinguistics, 1986.\[5\] M. Kay.
Algorithm Schemata nd Data Struc-tures in Syntactic Processing.
Technical P~eportCSL-80-12, Xerox PARC, 1980.\[6\] K. Kogure.
Strategic lazy incrementM copygraph unification.
In Proceeding of the 13th In-ternational Conference on Computational Lin-guistics, 1990.\[7\] K. Konolige.
Defensible argumentation i rea-soning about events.
In Proceeding of the In-ternational Symposium on Machine Intelligenceand Systems, Torino, Italy, 1988.\[8\] K. Konolige and M. E. Pollack.
Ascribing plansto agents.
In Proceeding of the llth Interna-tional Joint Conference on Artificial hztelli-gence, 1989.\[9\] S. Kuno.
Japanese Grammar (in Japanese).Taishu-kan, 1973.\[10\] F. Minami.
Structure of Contemporary Japanese(in Japanese ).
Taishu-kan, 1986.\[11\] S. Naito, A. Shimazu, and It.
Nomura.
Classifi-cation of modMity function and its applicationto Japanese language analysis.
In Proceedings ofthe 23st Annual Meeting of the Association forComputational Linguistics, 1985.\[12\] F. N. Pereira and D. tI.
D. Warren.
Parsing asdeduction.
In Proceedings of the 21st AnnualMeeting of the Association for ComputationalLinguistics, 1983.\[13\] S. M. Shieber.
Sentence disambiguation by shift-reduce parsing technique.
In Proceeding of thegist Annual Meeting of the Association forComputational Linguistics, 1983.\[14\] S. M. Shieber.
Using restriction to extend pars-ing algorithms for complex-feature-based for-malisms.
In Proceeding of the 23rd Annual Meet-in 9 of the Association for Computational Lin-guistic.s, 1985.\[15\] S. M. Shieber.
A Uniform architechture forParsing and Generation.
In Proceeding of theI2th International Conference on Computa-tional Linguistics, 1988.\[16\] A. Shimazu, S. Naito, and H. Nomura.
Seman-tic structure analysis of Japanese noun phraseswith adnominal particles.
In Proceedings of the25th Annual Meeting of the Association forComputational Linguistics, 1987.\[17\] A. Shimazu and S. Naito.
Preference readingmodels of Japanese sentences (in Japanese).
InTechnical Reports NL-73-9 of Natural LanguageProcessing Special Interest Group of Informa-tion Processing Society of Japan, 1989.264 6
