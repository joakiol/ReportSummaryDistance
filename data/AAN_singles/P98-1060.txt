Ambiguity Preserving Machine Translationusing Packed Representations*Mart in  C. Emele  and Michae l  DornaIMS, Institut fiir Maschinelle SprachverarbeitungUniversit~it StuttgartAzenbergstrai~e 12D-70174 Stuttgart~emele, dorna}@ims, tmi-stuttgart, deAbstractIn this paper we present an ambiguity preserv-ing translation approach which transfers am-biguous LFG f-structure representations.
Itis based on packed f-structure representationswhich are the result of potentially ambiguousutterances.
If the ambiguities between sourceand target language can be preserved, no un-packing during transfer is necessary and thegenerator may produce utterances which max-imally cover the underlying ambiguities.
Weconvert he packed f-structure descriptions intoa flat set of prolog terms which consist of pred-icates, their predicate argument structure andadditional attribute-value information.
Ambi-guity is expressed via local disjunctions.
Theflat representations facilitate the application of aShake-and-Bake like transfer approach extendedto deal with packed ambiguities.1 In t roduct ionIt is a central problem for any practical NLPsystem and specifically for any machine trans-lation (MT) system to deal with ambiguity ofnatural anguage utterances.
This is especiallytrue for systems with large coverage grammars,where the number of potentially ambiguous de-scriptions grows drammatically as the numberof acceptable syntactic constructions and thenumber of lexical readings increases.
In gen-eral, it is not possible to resolve all potentiallyambiguous descriptions without incorporatingworld knowledge of unlimited size.
This funda-mental problem has been discussed in the litera-* We would like to thank our col leagues at Xerox PARCand Xerox RCE for fruitful discussions and the anony-mous reviewers for valuable feedback.
This work wasfunded by the German Federal Ministry of Education,Science, Research and Technology (BMBF) in the frame-work of the Verbmobil project under grant 01 IV 701 N3.ture as the AI completeness problem (cf.
Kay etal.
(1994)).
Nevertheless, it has been observedthat many ambiguous utterances in the sourcelanguage (SL) text can be translated by equiva-lently ambiguous phrases in the target language(TL) text.
We call such an ambiguity apreserv-able ambiguity and the corresponding architec-ture for translation an ambiguity preserving MTapproach.In order to achieve this goal of ambiguity pre-serving translations there exist a number of dif-ferent solutions we can apply.
A naive solu-tion would enumerate all possible ambiguous de-scriptions, translate them and generate the cor-responding target utterances which would thenbe intersected to find a common string whichcovers all meanings.
This strategy is obvi-ously not feasible because the number of poten-tial readings might grow exponentially with thelength of the sentence.Another solution to overcome this problem isnot to resolve ambiguities at all by using un-derspecified representations.
This strategy hasbeen successfully applied for a number of se-mantic ambiguities like quantifier and operatorscope ambiguities.
Therefore it is not surpris-ing that the usage of underspecified semanticrepresentations have gained much popularity inrecent years.
Work in the literature includethe QLF representations (Alshawi, 1992), thework on Underspecified Discourse Representa-tion Structures (UDRS) (Reyle, 1993; Bos etal., 1996), and the collection of papers in vanDeemter and Peters (1996).
For an applicationof using underspecified semantic representationswithin MT see Alshawi et al (1991), Copestakeet al (1995) and Dorna and Emele (1996).Another source of ambiguities which might bepreservable between related languages includesyntactic ambiguities like the well-known PP at-365tachment ambiguities.
There has been growinginterest in developing underspecified or so calledpacked respresentations to deal with such syn-tactic ambiguities (cf.
Rich et al (1987), Seoand Simmons (1989), Bear and Hobbs (1988),Maxwell III and Kaplan (1993), Pinkal (1995),Egg and Lebeth (1995), Schiehlen (1996) andDSrre (1997)).The key idea of all these representations isto factor common information as much as pos-sible in a parse forest and to represent the at-tachment ambiguities as local disjunctions with-out conversion to disjunctive normal form.
Suchrepresentations avoid the exponential explosionwhich would result if all possible readings areextracted from the parse forest.To achieve our overall goal of ambiguity pre-serving MT it requires not only a parser whichis able to produce such packed representationsbut also a generator which is able to take such apacked representation as input and generate allpossible paraphrases without explicitly enumer-ating all readings.
The work in Kay (1996) andthe extension to ambiguous input in Shemtov(1996) and Shemtov (1997) describes a chart-based generation process which takes packedrepresentations a  input and generates all para-phrases without expanding first into disjunctivenormal form.What needs to be done to realize our envis-aged goal is a transfer system which is ableto work on these packed translations withoutunpacking them or only as much as necessaryif ambiguities can only partly be preserved inthe target language.
The rest of this paper isconcerned with the extension of a Shake-and-Bake like transfer approach (Whitelock, 1992;Beaven, 1992) or the kind of semantic-basedtransfer approach as described for example inDorna and Emele (1996) to cope with local am-biguities.To explain and illustrate the treatment oflocal ambiguities we show how an underspeci-fled representation of PP attachment ambigu-ities can be utilized in a machine translationarchitecture for providing ambiguity preservingtranslations.
It is illustrated on the basis ofLFG f-structure level representations (Kaplanand Bresnan, 1982).
However, it could equallywell be done on the level of underspecified se-mantic representations a shown in (Dorna etal., 1998).
The main reason for choosing the f-structure level representation is due to the factthat we could use the Xerox Linguistic Envi-ronment (XLE) system (Maxwell III and Ka-plan, 1996) for the analysis and generation ofEnglish and German utterances.
The key ar-gument for using this linguistic workbench isthe ability to produce packed representationsfor ambiguous utterances using techniques de-scribed in Maxwell III and Kaplan (1993) andthe availability of a generator which generatesutterances from f-structure descriptions.The rest of the paper is structured as follows:first, we show how the hierarchical f-structurerepresentations can be converted into a flat setof Prolog predicates uch that the Shake-and-Bake like transfer approach can be applied.
Sec-ond, we show how PP attachment ambiguitiesare represented using a packed representation.Then we show how this particular transfer ap-proach can be adopted for dealing with this kindof ambiguous representations.2 ExampleTo illustrate the approach we take a simple ex-ample which contains a PP attachment ambi-guity which can be preserved between Germanand English and probably between many otherrelated languages as well.
(1) wir treffen die KoUegen in Berlinwe meet the colleagues in BerlinFor example the sentence in (1) can either mean(a) that we will have a meeting in Berlin wherewe will meet our colleagues or (b) that we willmeet our colleagues who live in Berlin.
Withoutprevious knowledge about the discourse and thespecific people involved, it will not be possible toresolve these two meanings.
Nevertheless, boththe German and the English sentence xpressexactly the same ambiguity.There might exist other paraphrases using ex-actly the same semantic predicates, e.g.
the ut-terances in (2) but they will not be chosen bythe generator because they do not cover bothreadings at the same time.
Instead sentence(2a) would be chosen to express the attachmentof the prepositional phrase to the verb phrasewhereas entence (2b) would be chosen to ex-press the attachment to the noun phrase 'thecolleagues'.366(2) a.
In Berlin treffen wir die KollegenIn Berlin meet we the colleagues(In Berlin we will meet he colleagues.)b.
wir treffen die Kollegen aus Berlinwe meet the colleagues from Berlin(We will meet he colleagues from Berlin.
)In addition, those two maximally discriminat-ing sentences could also be used as an interfacefor an interactive translation system, e.g.
thenegotiator approach (Kay, 1997) where the hu-man translator would be asked to distinguishbetween the two possible readings.The f-structures in (3) and (4) correspond tothe disambiguated attachments as paraphrasedin (2a) and (2b) respectively.
(3) "PRED treffen<~, \[\]\]>SUBJ \['27\[ PREDNUM plPr?\]\[PRED gollege\]~\]\[PRED in<\[~> \])JADJN ~, L OBJ \[~PRED Berlin\](4) "PRED tre1~en <~, I~>SUBJ ~\]\[PREDNuM plPro\]F,.
D .ollegeITI INUM plOBJ \['~\[SPEC defI.
L OBJ \[~\]\[PRED Berlin3 From F-structures to Term SetsF-stuctures encode information in a hierarchicalmanner by recursively embedding substructures.They provide by nature only outside-in refer-ences whereas in transfer frequently inside-outaccess is necessary.
Hence, information accessfor transformation processes like transfer is notas straightforward asit could be when using flatset representations (Beaven, 1992; Whitelock,1992).
Set representations can be seen as a poolof constraints where co-references between theconstraints, i.e.
the set elements, are used to en-code the same embedding f-structures provide.Therefore, the structural embedding which is,on the one hand, part of f-structures themselfis represented, on the other hand, in the inter-pretation of constraint sets.
Furthermore, setscome with very simple test and manipulationoperations such as tests for membership and setunion.In the following we define a correspondencebetween f-structures and sets of terms.
We re-strict the f-structures to transfer elevant infor-mation such as PREDS, grammatical functions,etc.
Feature structure constraints are encodedas relational constraints using Prolog syntax (cf.Johnson (1991)).
As examples of such sets ofterms see (5) and (6) which corresponds to f-structures (3) and (4), respectively.
(5) treffen(1),subj (1,2) ,pro (2) ,num(2,pl),obj (1,3), kollege(3) ,num(3,pl),spec (3, def) ,adj n (1,4),  in (4),obj (4,5) ,Berlin(5)(6) treffen(1),subj (I ,2) ,pro(2) ,num(2,pl),obj (1,3), kollege(3) ,num(3,pl),epec (3, def ) ,adj n (3,4),  in (4),obj (4,5) ,Berlin(5)The 2-place relation t rans  given below trans-lates between f-structures and (sets of) terms.are references to f-structures which are mappedinto nodes i used in terms.
F are features, H(.. .
/describe predicates, v stands for atomic values,and ~o are complex f-structures.
Co-occuringparts of f-structures are translated only once.1.
(atomic values)trans< ~\[r v\], r ( i ,v )  >2.
(predicate values)traitS< \[~PRED II(...)\], H(i) )3.
(complex f-structure values)trans< \[~F \[\] ~o\], r ( i , j )  u T >with trans< \[~0, T >4.
(set values)trails< ~\[ADJN {\[~ ~Pl, ..-, \[\] ~On}\],ad jn( i ,Q) ,  .
.
.
,  ad jn( i , in)U T1 U ...U Tn >witht rans<\ [ \ ]~o j ,  Tj >; 1 < j<nzrans is bidirectional, i.e.
we are able totranslate between f-structures and terms for us-ing terms as transfer input, process terms in thetransfer, and convert he transfer output back tof-structures which are the appropriate generatorrepresentations.3674 F -s t ruc ture  T rans ferTransfer works on source language (SL) and tar-get language (TL) sets of terms representingpredicates, roles, etc.
like the ones shown in (5)and (6).
The mapping is encoded in transferrules as in (7).
For a rule to be applied, theset on the SL side must be a matching subset ofthe SL input set.
If this is the case, we removethe covering set from the input and add the seton the other side of the rule to the TL output.Transfer is complete, if the SL set is empty.
(7) a. t re f fen(E)  <-> meet(E).b.
kollege(X) <-> col league(X).c.
Berlin(X) <-> Berl in(X).d.
in(X) <-> in(X).e.
pro(X) <-> pro(X).f.
subj(X,Y) <-> subj(X,Y).g.
obj(X,Y) <-> obj(X,Y).h.
adjn(X,Y) <-> adjn(X,Y).The transfer operator <-> is bidirectional.
Up-per case letters in argument positions are logicalvariables which will be bound to nodes at run-time.
Because of the variable sharings on bothsides of a rule we work on the same nodes ofa graph.
Hence, the overall mechanism can beformalized as a graph rewriting process.
(8) a. meet ( t ) ,subj (1,2) ,pro (2) ,num(2,pl)obj (1,3),  col league (3),num (3, p l ) ,  spec (3, def) ,adj n (1,4),  in(4)obj (4 ,5) ,Ber l in  (5)b.
"FRED meet<~, ~>SUBJ \[~\]\[PRED pro\]NtJM pl J\[FRED colleague\]\[alFRED 'n<m> n }JADJN \[ L ?B`\] \[~\[PRED BerliApplying the rule set in (7) to (5), we yield theresult in (8a).
Using the correspondence b -tween f-structures and term representations it ispossible to translate back to the TL f-structurein (8b).
This f-structure will be passed on tothe generator which will produce the utterancein (2a) as one of the possible paraphrases.The transfer ules in (7c-h) which are definedas the identity transformation between SL andTL are actually redundant.
They can be re-placed via a general metarule which passes on allsingleton sets which are not covered by any ex-plicit transfer ule.
The same metarule transfersalso morpho-syntactic information like numberand definiteness.5 Packed  Representat ionsThe following example in (9) provides a packedf-structure respresentation for the German sen-tence in (1).
The ambiguous PP attachment ofthe 'in' PP is represented via a local disjunction 1(X=I V X=3) which binds the external variableX of the adjunct relation to either node I ornode 3 representing the VP or NP attachment,respectively.
(9) a. t re f fen(1) ,subj (1,2) ,pro (2) ,num(2 ,pl)obj (1,3),  ko l lege(3) ,num(3,pl),  spec (3, def ) ,adjn(X,4) , in(4)obj (4,5) ,Ber l in(5) ,(xffit v xffi3)b.
"PRED treffen<I~l, l~>__\[PRED pr~\]SUBJ IN\[NUM pl\[\]\[PRED gonege\]I.SFEC\[\] ADJN \[ \[OBJ \[~\]\[PRED Berlinm_-~ v \[\]=illApplying the very same transfer ules in (7) tothe input in (9) produces the result in (10) whichfully preserves the ambiguity between sourceand target language.
(I0) meet( l ) ,subj (I, 2), pro (2),num (2,pl)obj (1,3),  co l league(3) ,num(3 ,p l ) ,  spec (3 ,def ) ,adj n (X ,4),  in(4)obj (4,5) ,Ber l in(5) ,(xft v x=3)If the generator takes the corresponding f-structure for this packed description as input itwill generate (1) repeated in (11) and not any of1The notation of using a local disjunction isused onlyfor illustrating purposes.
The actual implementationuses contexted contraints as developed and implementedin the XLE system (cf.
Maxwell III and Kaplan (1991)).368the paraphrases in (2) because they would notcover both ambiguities at the same time.
(11) We will meet he colleagues in Berlin.The local disjunction is not affected by the ap-plication of the transfer rule for mapping theadjunct relation to the target language becausethere is no interaction between the variable xand any other predicate.6 Loca l  D isambiguat ionIf it is not possible to fully preserve the attach-ment ambiguities between source and target lan-guage, we need to partially disambiguate he rel-evant ambiguity.
For example, this would bethe case if we would translate (1) to Japanese.Depending whether we attach to the NP 'thecolleagues' or to the VP we have to choose be-tween two different postpositions 'de' (location)vs. 'no' (adnominal modification).
The two sen-tences in (12) show the Japanese translationstogether with their English glosses.
(12) a. watashi tachi -ga berurin -dewe NOM Berlin LOCdooryoo -to aimasucolleagues COM will meet(In Berlin we will meet he colleagues.)b.
watashi tachi -ga berurin -nowe NOM Berlin MODdooryoo -to aimasucolleagues COM will meet(We will meet the colleagues from Berlin.
)The choice of the postposition could be triggeredvia selectional restrictions in the condition partof the transfer ules.
The rules in (13) show twocomponents on their lefthand sides: the part tothe right of # is a test on a copy of the origi-nal input.
The test matches an adjunct relationwhere the variable Y is bound to the internal ar-gument.
Y is coindexed with the node of the SLpreposition 'in'.
The variable X is bound to theexternal argument node where the adjunct is at-tached.
The second element of the test checksthe selectional restriction 2 of this attachment.2Instead of using explicit predicates for testing selee-tional restrictions the real system uses a sort system.The test on explicit predicates i replaced with a moregeneral sortal subsumption test, e.g.
sort (X)<event vs.sor t  (X) <obj ect.
(13) a. in(Y) # adjn(X,Y),treffen(X) ->de(Y).b.
in(Y) # adjn(X,Y),kollege(X) ->no(Y).The Japanese distinction is parallel to the casewhere the German preposition 'in' would betranslated either with the English preposition'in' or the preposition 'from' depending whichof the two meanings is taken.
Hence for easeof exposition we will apply the two equivalenttransfer ules in (14) for the translation of the'in' instead of the equivalent Japanese ones.
(14) a. in(Y) # adjn(X,Y),treffen(X) ->in(Y).b.
in(Y) # adjn(X,Y),kollege(X) ->from (Y).Since the external argument of the adjunct rela-tion takes part in the local disjunction (X=l VX=3) the application of transfer ule (14a) trig-gers a local resolution.
This is done by applyingthe distributive law such that the selectional re-striction can be tested.
For the first disjunctthis yields true whereas it fails for the seconddisjunct.
Rule (14b) is treated in the same waywhere only the test on the second disjunct canbe satisfied.
Both results are joined togetherand are associated with the very same disjunc-tion: (X=l, in(4)  V X=3, from(4)) .
(15) a. meet( l ) ,subj (1,2) ,pro (2) ,num(2 ,pl)obj (1,3),  co l league(3) ,hum(3, p l ) ,  spec (3, def) ,adjn(X,4),  obj (4,5) ,Ber l in(5) ,(X=l, in(4) V X=3, from(4))b.
"PRED meet<~\], \[\]>~rPRED pro\]SUBJ 121\[NUM pl\]\[\]\[PrtEo colleagueqI.SPEC.~(ADJN {~\[OBJ ~\[PRED Bcrlin~)\]As a final result we get the packed representa-tion in (15), where the two prepositions are dis-tributed into the local disjunction without con-verting to disjunctive normal form.369The transferred packed representation corre-sponds to the two possible utterances in (16).
Itwould be left as a task for the (human) negotia-tor to find out which of the two sentences wouldbe more appropriate in a given context situa-tion.
Due to the local nature of the disjunctionsthey can be handed over to an additional resolu-tion component in order to disambiguate hemor if the discourse and world knowledge is notsufficient for disambiguating to leave them aschoices for the human translator.
(16) a. we will meet he colleagues in Berlinb.
we will meet he colleagues from BerlinThe main advantage of such an approach is thatthe transfer rules are independent of the factwhether they are applied to packed representa-tions or not.
Unpacking is done only locally andas much as necessary.
Only the internal pro-cessing needs to be adapted in order to keeptrack which of the local disjuncts are processed.This is done with a simple book-keeping mecha-nism which keeps track for any individual termto which local disjunct it belongs.
Technically,it is done by using the contexted constraintsas described in Maxwell III and Kaplan (1991).Hence the whole mechanism can be kept fullytransparent for the transfer ule writer and allof the complexity can be dealt with internallyin the transfer ule compiler which compiles theexternal transfer ule format into an executableProlog program which propagates the necessaryvariable sharings.In order to avoid duplicated work while try-ing to apply all possible transfer ule combina-tions the transfer system uses an internal chartto store all successful rule applications.
Eachpredicate in the input set gets assigned a uniquebit in a bit vector such that it can be checkedeasily that no predicate is covered more thanonce while trying to combine different edges inthe chart.
With this scheme it is also possible toidentify the final edges because they are the oneswhere all bits are set.
The overall processingscheme using an agenda nd the data structuresare very similar to the chart representation asproposed for doing chart-based generation fromambiguous input (cf.
Kay (1996) and Shemtov(1996)).
The main difference stems from thelack of explicit context-free grammar ules.
In-stead, in the proposed setup, the left hand sidesof transfer rules are interpreted as immediatedominance rules as they are used for describingfree word order languages upplemented with asingle binary context-free rule which recursivelytries to combine all possible subsets of terms forwhich no explicit transfer ule exists.7 SummaryIn this paper we have demonstrated that aShake-and-Bake inspired MT approach can beapplied to flat f-structure respresentations.
Ithas also been shown how such a transfer systemcan be combined with the treatment of packedambiguities for the representation f (syntactic)ambiguities to achieve a truly ambiguity pre-serving translation architecture.
Since the par-ticular treatment of syntactic ambiguities i or-thogonal to the possiblity of using underspeci-fled semantic representations, the same exten-sion could also be applied for a semantic-basedtransfer approach on flat representations a  ad-vocated for example in Copestake t al.
(1995)and Dorna and Emele (1996).
The advan-tage for doing transfer on the level of under-specified semantic representations is the gain ofparallelism between source and target languagedue to the abstraction and underspecificationof language specific idiosyncracies which are al-ready dealt with in the linking between syntac-tic and semantic information.
Popular examplesare cases of head-switching, category switchingand diathesis etc.
which disappear on the levelof semantic representations (e.g.
Dorna et al(1998)).
The discussion of such examples can befound at length in the literature and will there-fore not be repeated here.The proposed transfer architecture is cur-rently being implemented as an extension to anexperimental transfer MT system which is fullyintegrated and interfaced with the XLE systemfor doing parsing and generation.
The appli-cation domain comprises the translation of in-struction manuals.Re ferencesHiyan Alshawi, David M. Carter, Bj6rn Gamb~ick,and Manny Rayner.
1991.
Translation by QuasiLogical Form Transfer.
In Proceedings of the29th Annual Meeting of the Association for Com-putational Linguistics (ACL'91), pages 161-168,Berkeley, CA.370Hiyan Alshawi, editor.
1992.
The Core LanguageEngine.
ACL-MIT Press Series in Natural Lan-guages Processing.
MIT Press, Cambridge, Mass.John Bear and Jerry R. Hobbs.
1988.
Localizing ex-pression of ambiguity.
In Proceedings of the 2ndInternational Conference on Applied Natural Lan-guage Processing, pages 235-241, Texas, Austin.J.
L. Beaven.
1992.
Shake-and-Bake Machine Trans-lation.
In Proceedings of the 14th InternationalConference on Computational Linguistics (Col-ing'9$), Nantes, France.J.
Bos, B. Gamb~f~k, C. Lieske, Y. Mori, M. Pinkal,and K. Worm.
1996.
Compositional Semantics inVerbmobil.
In Proceedings of the 16th Interna-tional Conference on Computational Linguistics(Coling'96), Copenhagen, Denmark.A.
Copestake, D. Flickinger, R. Malouf, S. Riehe-mann, and I.
Sag.
1995.
Translation using Min-imal Recursion Semantics.
In Proceedings ofthe 6th International Conference on Theoreticaland Methodological Issues in Machine Translation(TMI'g5), Leuven, Belgium.Michael Dorna and Martin C. Emele.
1996.Semantic-based Transfer.
In Proceedings of the16th International Conference on ComputationalLinguistics (Coling'96), Copenhagen, Denmark.Michael Dorna, Anette Frank, Josef van Genabith,and Martin C. Emele.
1998.
Syntactic and se-mantic transfer with f-structures.
In Proceedingsof the 17th International Conference on Compu-tational Linguistics (Coling-ACL '98), Montreal,Canada, August.Jochen DSrre.
1997.
Efficient construction of un-derspecified semantics under massive ambiguity.In Proceedings of the 35th Annual Meeting of theAssociation for Computational Linguistics (ACL-EACL'97), Madrid, Spain.M.
Egg and K. Lebeth.
1995.
Semantic under-specifcation and modifier attachment ambigui-ties.
In J. Kilbury and R. Wiese, editors, Integra-tive Ansatze in der Computerlinguistik.
Beitragezur 5.
Fachtagung der Sektion Computerlinguis-tik der Deutschen Gesellschaft flit Sprachwis-senschaft (DGfS), pages 19-24, Dfisseldorf, Ger-many.Mark Johnson.
1991.
Features and Formulae.
Com-putational Linguistics, 17(2):131-151.Ronald M. Kaplan and Joan Bresnan.
1982.Lexical-Functional Grammar: A formal systemfor grammatical representation.
In Joan Bresnan,editor, The Mental Representation of Grammat-ical Relations, pages 173-281.
MIT Press, Cam-bridge, Mass.M.
Kay, M. Gawron, and P. Norwig.
1994.
Verb-mobil: a Translation System for Face-to-Face Di-alogs.
Number 33 in CSLI Lecture Notes.
Univer-sity of Chicago Press.Martin Kay.
1996.
Chart generation.
In Proceedingsof the 34th Annual Meeting of the Association forComputational Linguistics (ACL'g6), pages 200-204, Santa Cruz, CA.Martin Kay.
1997.
The Proper Place of Menand Machines in Language Translation.
MachineTranslation, 12:3-23.John T. Maxwell III and Ronald M. Kaplan.
1991.A method for disjunctive constraint satisfaction.In Masaru Tomita, editor, Current Issues in Pars-ing Techonlogy, pages 18-27.
Kluwer AcademicPublishers, Dordrecht, Holland.John T. Maxwell III and Ronald M. Kaplan.
1993.The interface between phrasal and functional con-straints.
Computational Linguistics, 19(4):571-590.John T. Maxwell III and Ronald M. Kaplan.
1996.An efficient parser for LFG.
In Proceedings of the1st LFG Conference.Manfred Pinkal.
1995.
Radical Underspecification.In Proceedings of the lOth Amsterdam Collo-quium, pages 587-606, Amsterdam, Holland, De-cember.
ILLC/Department of Philosophy, Univer-sity of Amsterdam.Uwe Reyle.
1993.
Dealing with Ambiguities byUnderspecification: Construction, Representationand Deduction.
Jounal of Semantics, 10(2):123-179.E.
Rich, J. Barnett, K. Wittenburg, and D. Wrob-lewski.
1987.
Ambiguity procrastination.
In Pro-ceedings of the 6th National Conference of theAmerican Association for Artificial Intelligence(AAAI'87), pages 571-576, Seattle, WA.Michael Schiehlen.
1996.
Semantic Constructionfrom Parse Forests.
In Proceedings of the 16thInternational Conference on Computational Lin-guistics (Coling'96).Jungyun Seo and Robert F. Simmons.
1989.
Syntac-tic graphs: A representation for the union of allambiguous parse trees.
Computational Linguis-tics, 15(1):19-32, March.Hadar Shemtov.
1996.
Generation of Paraphrasesfrom Ambiguous Logical Forms.
In Proceedingsof the 16th International Conference on Computa-tional Linguistics (Coling'g6), Copenhagen, Den-mark.Hadar Shemtov.
1997.
Ambiguity Management inNatural Language Generation.
Ph.D. thesis, Stan-ford University, June.Kees van Deemter and Stanley Peters, editors.
1996.Semantic ambiguity and underspecification.
Num-ber 55 in CSLI Lecture Notes.
CSLI Publications,Stanford University, CA.Pete Whitelock.
1992.
Shake-and-Bake Translation.In Proceedings of the l~th International Confer-ence on Computational Linguistics (Coling'92),pages 784-791, Nantes, France.371
