ADAPTAT ION OF  MONTAGUE GRA/k4MAR TO THE REQUIREMENTS OF  QUEST ION-ANSWERINGS.P.J.
LandsbergenPhilips Research  LaboratoriesEindhoven - The NetherlandsAbst rac tIn this paper  a new vers ion  of MontagueGrammar  (MG)  is deve loped ,  wh ich  is su i tab lefor application in question-answering systems.The general f ramework  for the definition ofsyntax and semantics described in Montague's'Universal Grammar '  is taken as starting-point.
This f ramework  provides an elegant wayof defining an interpretation for a naturallanguage (NL): by means  of a syntax-directedtranslation into a logical language for which aninterpretation is defined directly.In the question-answering system PHL IQA i \[i\]NL  questions are interpreted by translatingthem into a logical language, the Data BaseLanguage, for which an interpretation is defin-ed by the data base.
The similarity of thissetup with the Montague f ramework  is obvious.At first sight a QA system like this can beviewed as an application of MG.
However,  acloser look reveals that for this application MGhas to be adapted in two ways.Adaptation i. MG is a generative formalism.It generates NL  sentences and their logicalforms 'in parallel'.
In a QA system a parser isneeded: an effective procedure which assigns toan input question the syntactic structure that isrequired for the translation into the logicallanguage.
The MG f ramework  has to be chang-ed in such a way  that for each grammar  withinthat f ramework  a parser can be defined.Adaptation Z.
The logical language used in MGcontains a term for every referential word.The Data Base Language of a QA system isrestricted in this respect, which is caused bythe fact that the data base only contains knowl-edge about a restricted subject-domain.
There-fore the translation f rom NL  into the Data BaseLanguage is partial.
An  extension of MG isneeded which shows how a subset of NL  sen-tences can be interpreted by means  of a trans-lation into a restricted logical language.Adaptation g is only briefly discussed here, asit results in a f ramework  which has alreadybeen described extensively in \[ I\].The main  part of this paper is devoted to adap-tation I.
A new syntactic f ramework  isproposed, which can be summar ized  as follows.- The syntactic rules (M-rules) op.erate onlabeled trees (or equivalently: labeled bracket-ings) instead of strings as in MG.  Successfulapplication of M-ru les - starting with basicterms - leads to a surface tree of a sentence.
(This kind of extension of MG has already beenproposed by Partee and others, for differentreasons than for mak ing  parsing possible)- A context-free grammar  Gcf defines theclass Lcf of trees that are allowed as argumentsand results of the M-rules.
So the class ofsurface trees defined by the M-ru les is a sub-set of Lcf.- An  M-ru le  R i is a pair <Ci, A i>;  where C iis a condition on n-tuples of trees < t I .
.
.
.
, tn>and A i is an action, applicable to any tuple forwhich C i holds, and delivering a tree t.Each  rule R i must  obey the following conditions:(i) C i and A i are effective procedures.
(ii) F rom ~i an inverse rule Rf I = <C~ I, A~I>can be derived such that C\[  1 and A\[  1 areeffective procedures and:C i (<t  I .
.
.
.
.
tn > )---~C~ 1 (Ai( < tl .
.
.
.
tn>))Ci l(t) - - -=-~Ci(A ~ l (t))(iii) t is bigger (has more  nodes) than any t iin the tuple < t I .
.
.
.
.
t n >.Special, simple, cases of M-ru les  are thecontext-free rules of Gcf.For this type of g rammar  a parser can bedesigned which operates in two steps:i) an ordinary context-free parser, based onGcf, which assigns surface trees to sentences.Z) a procedure that applies inverse M-ru les  ina top-down fashion to these surface trees.The parser is successful for a given sentenceif a surface tree can be assigned to it by I)and if this surface structure can be brokendown into basic expressions by procedure Z).In that case the resulting derivation structureof M-ru les is input for the translation into thelogical language.211-It is proved that such a parser is an effectiveprocedure and that it assigns to a sentenceexactly those syntactic structures that thegenerative rules would assign.
The proof isfirst given for a finite set of rules and is thenextended to grammars  with ru le -schemesdefining an infinite set of rules.
Ru le -schemesare needed because the grammar  contains aninfinite set of syntactic variables.
The reser-vation has to be made that the parser generatesonly one of the infinitely many  derivations of asentence that differ only in their choice ofva r fable s.The power  of the new f ramework  is discussed.It is shown how Montague's PTQ grammarmight  be reformulated in it.
The parser iscompared  with the parser written by F r iedmanand Warren  for that g rammar .Finally, conditions are discussed that have tobe added to the f ramework  in order to make  aneffective translation into natural languagepossible.\[i\] W. J .H .
J .
B ronnenberg  et al - The ques-tion-answering system PHL IQA I.To  appear in L. Bolc (ed.
): NaturalLanguage Question Answer ing  Systems.Carl Hanser  Verlag, Mfinchen ~ Wien;Macmil lan, London.-212
