Might a semantic lexicon support hypertextual authoring?Roberto Basili, Fabrizio Grisoli, Maria Teresa PazienzaDipartimento di Ingegneria Elettronica,Universita' di Roma, Tor VergataVia della Ricerca Scientifica, 00133 Roma (ITALY)e-maih { rbas, paz ienza } 8rovvxl.
ccd.
utovrm, itAbstractIt is common opinion that currenthypertextual systems do not allow to expressobjectively the information content ofdocuments, but only the view of the "author".The hyperlink building requires an heavy andhighly specialised human intervention: thistask is very expensive whenever possible!A different approach, based on NLPmethodologies, aiming at automatizing thedevelopment of an hypertext, is hereafterproposed.
Anchorage points are inferred bothfrom content and structure of documents.
Asemantic lexicon based on conceptual graphstructures i used to guide text understanding.Contextual roles are introduced to modeldomain specific concepts relevant to thenavigation.
An off-line activation of usefullinks has been defined according to explicituser specifications.
A simple declarativelanguage (HyDeL) for the definition of suchlinks is available to the user to create his ownviews on the document base.
HERMES is aprototype system implementing our approach.The paper discusses the semantic processing ofa document base and highlights theperformance of different hypertextual systemsderived by HERMES over different languagesand knowledge domains.IntroductionAn intuitive representation of an hypertext isdepicted as a directed graph, in which nodes aredocuments ,  and arcs are l inks.
Brows ing  anhypertext means to move from a document (sourcenode) to another (destination ode) through a link.Specific words, named anchors, are considered moreimportant than others, as they are source ordestination of a link.Many different criteria have been used to describeexisting hypertextual systems.
According to (Frisse,Cousin 92) three different "levels" in modelling anhypertext should be underlined: physical, logicaland browsing semantics levels.At physical level, the model addresses the dataorganization on the storage devices.
At logical level,relationships among data are described.
Finally, thebrowsing semantics oriented models are used todescribe human interaction modalities.Main actors in hypertext systems are the author andthe user :  the author organizes the overallhypertextual structure defining the number and typeof links between documents, thus imposing aparticular navigation modality in the documentbase 1.
The user may browse the hypertext, followingonly the defined hypertextual structure.Authoring is a major problem in hypertextualsystems: the requested human effort explodes withthe document base size.
An incremental pproach isoften impossible ither because the insertion of anew document requires a reprocessing of the wholedocument base, or the new document mayintroduce new perspectives.
The management ofvery large document bases would suitably profit ofan automatic approach to authoring.Furthermore it is simply unrealistic that the authorknows what is of interest in any document, at anytime.
Manual authoring thus bases on a static sourceof information modelled once; it should be desirablea more objective and exhaustive processing.Our idea of hypertext is as follows: considering thatdocuments have their own meaning, strictly relatedboth to their content and structure, which isindependent from the "author" point of view, weaffirm that an anchor is a property of the document,and its existence does not depend by any (potential)link existence.HERMES 2 (Hypertextual Effective Role-basedMultilingual End user oriented System) is ourproposed hypertext management system thatembodies uch ideas.
HERMES uses an hypertextualframework where the author "makes explicit"information (on document structure and content),and the user creates his own hypertext schema bymeans of a simple definition language.1 With "document base" we refer simply to the set of documents,while we use the term "hyperbase" or "hypertext" when werefer to documents and links together.2 The implemented version of HERMES system actually runs on aSUN Sparc workstation.
Logic programming modules, based onProLog 3.1 by BIM, are integrated with C libraries, under theSunView and X-Windows environment.
I alian and englishcorpora on different domains have been used to test HERMES.1741.
The role of lexical knowledge in authoring.An automatic hypertext generation may follow twoapproaches: fully automatic (i.e.
pattern matchingand/or  statistic methods) or knowledge basedauthoring.
They replicate a very famous dichotomyabout symbolic vs. sub symbolic processing ofinformation.
As experimented in InformationRetrieval, numerical methods are efficient and havea wide coverage, even though they lack expressivepower and are not prevented from silence/noisedrawbacks.
But is reasonable to affirm that word (orphrase) relevance in a text is independent either byits frequency or by text size .
It is our opinion thatblack boxes are not enough expressive to do explicitthe meaning of what is implicit in the language.
Forexample in the domain of Remote Sensing weacquired evidences that the information content ofthe word satellite should not be shared by sentenceslike " the satellite flies over .... " and "Earth satellite(i.e.
moon)...".
Without any representation levelother than string cooccurrences there is no way tocapture such distinction.
In sentences like " EarthObservation systems .... " the notion of satellitaryplatform is expressed in a different fashion.Capturing equivalence among words is a final target.Scalability, robustness and efficiency are importantcharacteristics for any systems.Scalability is a problem from a linguistic andcomputational point of view.
To scale up to realsized document base it is necessary the use ofshallow semantics to guide text understanding.Navigation points are in general 'local' properties ofdocuments: they are usually triggered by limitedcontexts.
A surface semantic approach, like therepresentation language used in ARIOSTO (Basili etal.
92 a,b 93 a,b), a system for corpus driven lexicalacquisition, is sufficient to detect and extract suchmeaningful contexts.The use of ARIOSTO will favour the portability andscalability of the HERMES methodology.
As in ourapproach an anchor is a document property,existence of links should depend on the documentset and on the user needs.
Such distinctionimproves the flexibility of the hypertextualrepresentation (see section 2) and the efficiency ofthe overall document processing.Robustness of the linguistic processing is improvedby the availability of a robust semantic lexicongenerated by ARIOSTO within the corpussublanguage.
As information local to sentences issoundly detected and extracted by the ShallowSyntactic Analizer (SSA) processor of ARIOSTO, ithas been helpfully used in HERMES for the basictext processing.
Morphologic knowledge required bySSA is related to POS tagging.
The availableautomatic tools, POS taggers (Church 88), or on-linedictionaries favour the portability of this specialpurpose syntax throughout different sublanguages.Syntax-based processing has also allowed a unifiedprocessing of different domains, and languages.Rule-based processing favours a commonrepresentation for texts of different structures, styleand prose.The use of acquisition tools is also helpful inimproving the efficiency of the NLP preprocessing.The availability of a semantic lexicon and of coarsegra ined se lect ional  res t r i c t ions  a l lowsdisambiguation at syntactic as well as semanticlevels.
This implies a reduced need of memory.
Theefficiency of the overall hypertextual strategy is goodas NLP is not an on-line activity, but it is performedonly once over a text.
When the meaning of adocument has been stored, many successiveprocessing steps can be activated (i.e.
anchorsdetection and extraction, activation of links duringthe integration of the document in a (existing)document base, meaningful link visualizationduring the navigation phase).
Moreover differenthypertexts may be defined starting from the samesemantic representation of the document base.1.1 Automatic authoring and NL understanding.The core notion used to capture parts of documentsrelevant o the navigation is the context of anchor.Anchors are a document feature and they are"possible" hints for hypertextual navigation,independently by the existence of incident links.This idea supports an incremental approach tohyperbase generation.
In fact document content is tobe recognised just once during the linguisticpreprocessing: updating the hyperbase requires onlythe comparison of the new one with severaldocument representations.The main steps for the creation of an hypertext are :\[1\] Document base generation, rewriting ofdocuments in a structured representation doingexplicit meaningful components, i.e:a. structure processing (i.e.
identification oftextual vs. non textual parts ...),b. semantic processing (i.e.
syntactic processing,detection and extraction of meaningful anchorpoints)\[2\] Schema Definition, that allows end users tointentionally define, by a definition language,the nature and constraints of the links of interestfor his own hypertext.\[3\] Hypertext Compilation, that performs thegeneration of all those links matching theSchema Definition specifications.Whenever a new document is available steps \[1\] ad\[3\] are applied to it.
Steps \[1\] and \[2\] areasynchronous, several \[2\] phases can follow anunique \[1\].
This modularity allows to implement175different hypertexts as 'views' on the samedocument base.
Fig.
1 graphically represents anoverview of system functionalities.In such an approach it is evident hat the roles of"author" and "user" are conceptually different fromtraditional ones., Author ing  jHyper textCompi la t ionSchema ~Definitior~,~  ~ ~.~/ / ~  Hypertext A1Document Base / User A \ [ - - '~  ~/OGeneration , ~p.
j~ j  ~o/  v53 71  I .
.Set Ba ?
f N I - - \ ]  Js User N I~ IHypertext N1- Fig.
1: HERMES functionalities -Step \[1\] poses strong requirements o the linguisticknowledge available to the system.
ARIOSTOsupports uch a phase.
Anchor points are inducedfrom the raw text by means of a local semanticprocessing aiming at capturing sentences,propositions or phrases of interest.
Whenever ashallow semantic lassification of the content wordsis available, and a core set of conceptual relationsallows the interpretation of syntactic structures inthe sublanguage, parts of documents relevant fortheir content can be detected.To look at hypertextual navigation as at a privilegedsearch form as well as at a full text informationretrieval, text understanding is a main activity.
Theproblem is: what is an anchor according to its useduring navigation?
An anchor is related to a topic(expressed, mentioned or developed, within adocument) that is relevant in the correspondingknowledge domain.
Examples of such meaningfultopics may be satellite or IOL in sentences like"Earth observation satellites for futureapplications employ high resolution sensors (...)""Especially for the transmission of such high datarates on IOLs and ISLs optical systems are (...)"Targets of queries to a bibliographic database areexamples of information of interest for a user in therelated domain.
User interest focuses on (a limitedset of) classes of arguments relevant to theknowledge domain.
Symptoms, Medicines orPathologies are qualitative xamples of such classeswithin a (possible) medical domain.
We will seeother examples connected to Remote Sensinghereafter.
Existence and properties of concepts likeSymptoms vs. Pathologies may be ruled by somemeta level knowledge able to guide retrieval as wellas text comprehension.
"Cough" for example may bea Pathology (when aspecific) but more often it is aSymptom of a more complex disease.
Detecting suchdifferences for a word requires the recognition ofsome aspects of their 'meaning' in the context.These different behaviours of a word are defined ascontextual roles in our system, and will be used foran intelligent retrieval.
The contextual rolesrelevant for the document base will be derived by ananalysis of the related sublanguage.
We shall outlinethe way contextual roles are detected in texts andexpressed by suitable semantic primitives calledrepresentative types in section 1.2.
Roles and lexicalexpectations are also central to other text processingsystems, like SCISOR (Rau, Jacobs 88).Automatic authoring, as many other text orienteddisciplines, needs for a specialised, word orientedcomponent of the knowledge, i.e.
a lexicon,describing word meaning within the text.
ARIOSTOautomatizes the generation of one such lexiconrelated to the analysed corpus.The core of lexical knowledge acquired by ARIOSTOis word association data augmented with syntacticand semantic markers.
In ARIOSTO reliability isimproved by statistical processing applied tosyntactic information (that we call elementarysyntactic links (esl)).Statistically relevant associations between wordswith the same semantic tag are markers of typicalsemantic relationships between correspondingclasses (or conceptual categories).
The discovery ofsuch selectional restrictions throughout differentcorpora is relevant to the engineering of therequired specific lexicon.1.2 NL Process ing  of  documents  in HERMES.The need for a semantic interpreter is related to textintrinsic ambiguity at syntactic as well as at semanticlevels.
Main problems are related to multiple sensewords, syntactic ambiguity (e.g.
PP referents), long-range relationships, focus.
As we have previouslyoutlined ARIOSTO provides a specific domainlexicon based on a set of semantic lassification oflemmata nd a catalogue of conceptual relations: theformer is a 'flat' type hierarchy (Sowa 84) that aimsat improving word senses disambiguation, whilethe latter provides a set of canonical graphs (Sowa84,89), that guides syntactic disambiguation as wellas interpretation.
I  ARIOSTO this declarative formof knowledge is augmented by statistical figuresexpressing numerical preference factors.Elementary syntactic links (esl) are interpreted by thelexicon of cooccurring words.
For example a NLsegment like(1) " the temperature measured by the sensor ..."that originates the esl(2) V_P N (measure, by, sensor )may be interpreted by the following conceptualrelation176\[Act :measure\]-( INSTRUMENT)->\[  INSTRUMENTAL ITy3:sensor\],The relation\ [Ac t :measure \ ] - ( INSTRUMENT) -> \ [ INSTRUMENTALITY:* \ ]in the lexicon of measure is here triggered by (2).Conceptual graphs join (Sowa 84) is used to composeconceptual relations provided by esl's derived by thesame sentences.
Local meanings of content wordsoriginate complex conceptual graph structuresexpressing semantic analysis of the related phrases.Contextual roles are domain dependent conceptualgraphs schemata (Sowa 84) that are possibly filled inby relevant sentences and passages of thedocuments.
Anchor derivation is realized bytriggering schemata in an expectation drivenfashion.
An example of schema defined in theRemote Sensing domain is the following:(3) Remot  e Sens ing_Mach inery  (x) i f f\[ INSTRUMENTAL ITY  : *x\]- (OBJECT)  - > \[ LOCATION : *y \]<- ( INSTRUMENT)  - \[Act : *z\](3) provides the assignment of the roleRemote  Sens ing  Mach inery  to system in "Earthobservation systems ..." or to Sar in " ... ERS-1 Sarenlights land surface with a resolution of 30 m".Word sense ambiguity is partially solved by theword classification.
Syntactic ambiguity isapproached by the use of the lexicon of canonicalgraphs.
The remaining genuine ambiguities aresolved by maximizing the probabilities of thecompeting canonical relations of the lexicon.After the shallow syntactic processing of texts, thesemantic interpretation produces the list of relevantwords, tagged by their related contextual roles in thedocument.
The couple <word, contextual role> is apotential anchor in HERMES.
CoDHIR  system(Marega, Pazienza 94) uses the contextual roles forsemantic driven Information Retrieval in theRemote Sensing domain.2.
System architectureIn this section we describe the HERMES functionalarchitecture.
Implementative d tails may be foundin (Grisoli 94).
Main problems in hypertextualauthoring are: real text understanding, objectivityand incrementality.
Correspondingly we havedefined in HERMES three different activities:Document Preprocessing, Schema Definition andHypertext Compilation.
The Schema Definitionallows the end user to get a "self tailored system" aswell as a "view" of the document base.
Whiledocument preprocessing captures documentsemantics, hypertext compilation performs theeffective generation of the hyperbase.3 INSTRUMENTALITY is a semantic class of the 'flat'hierarchy semi-automaticaUy derived from WORDNET.2.1 Document base generation.We identified in document preprocessing twodifferent phases: full text and structural processing.In the document structure processing basicdocument components are recognised, while thesemantic information of interest (i.e.
contextualroles) is extracted from the textual parts during thefull text processing.In a document base several types of documents,identified by an explicit structure, may be collected.For example, the textual component of an abstracthas an implicit structure.
Scientific papers showgenerally a more explicit structure, e.g.
title, authors,sections .
.
.
.
Recently several standards fordocuments interchange have been defined toimpose an overall fixed structure to documents.
Thestructure brings part of the information related to adocument.
Hypertextual systems are able to managesuch kind of information (Essence 92).In HERMES this aspect has been exploited too:explicit CF grammars have been defined to recognisedifferent document types.2.2 Hypertext Schema DefinitionHypertext schema definition is based on anintentional description of: document structure, rulesfor defining collections, rules for defining links.HERMES provides the user with a definitionlanguage called HyDeL (Hypertext DefinitionLanguage) (Grisoli 94), to directly define his ownhypertexts.
HyDeL is a declarative language whosesyntax and semantics are quite simple.In the schema definition the user declares the typesof documents that wants be inserted in thedocument space.
HyDeL allows the definition of acorresponding set of document types .
Basicelements of a document type are attr ibutes.Attributes may be simple as strings, numbers andtext.
Complex attributes may be introduced as acombination of attributes.
For example we can saythat a scientific paper is a document with a list ofauthors, a title, an abstract, a list of sections, andreferences.
An author can be thought of as a stringor, alternatively, as a complex attribute (noun, e-mail, address, and so on) according to the userwishes.
Full text components are subject to adifferent representation, in terms of the list ofextracted anchors.A collection is a set of documents that share someproperties.
Properties can be expressed by declarativerules on document attributes.
For example we candefine a collection of scientific papers that have"title beginning with a" or "including an anchorwith a fixed role" etc...
In this way hypertext177definitions cluster together documents according tosome application oriented criteria.Links are also defined by declarative rules.
Theyexpress contraints on couples of anchors belongingto different documents.
Whenever constraints aresatisfied the corresponding links are activated.
Westress that a rule for link definition in HyDeL isindependent either by the user knowledge on thedocument content or by its activation.
Rules inHyDeL provide a sort of query language on anchors.Declarativity here may be used to deductivelygenerate links of semantic 'flavour'.Links activation and collection generation proceedat the hypertext compilation time (section 2.3).2.3 Hypertext compilationCompilation consists of the generation of all thelinks and collections as they have been defined inthe hypertext schema.
This activity is performeddocument by document: creating an hypertext, hus,consists of updat ing an empty hypertext.Inc rementa l i ty  fo l lows  consequent ly .Creat ing/updat ing activities are realized in acompletely automatic way.A document can be thought of as a point in a vectorspace.
Components are here related to the documentsemantic content, i.e.
its anchors: a previousresearch on this model has been carried out in(Marega, Pazienza 94).
A distance metrics has beendefined in such a semantic space.
To integrate anincoming document means to appropriatelycollocate it in this space as suggested by its semanticrepresentation.
Contextual as well as structuralinformation are used in this phase.
Collections areclusters of points in this space.
Links connectdocuments, i.e.
distinct points, even far in the space.3 Linguist ic evidences in HERMESFigure 2 shows the screendump of an excerpt of anEnglish hypertext.
Anchors (i.e.
words with theirrole labels) are highlighted.
Simple browsingIIII I ItnfrsrM ~W: |p~trs l  s lgnst~s  end ef IDCLI~ W?SCl  tamperst~e.E~Imnt )1  i cc~J  %m Bf /s?%l~ ourft?o par~et~,  s~fac Jtam~&t~e,  tad mlss tv l ty ,  re l~ent  to n t i l l t%e ~.ds~;m%tm t ,the e~m~'~l tn f r t r ld  ba~l (T|R), Is id~h'essl~ i~d c l~K~ee,  Thl?l~%ll~ed thrD2~h r~/~r~l| lz i%1on of ~.ht e f foc~t~ ~lss lv l t~~v~r u~ ms br~ ~.~ ~Isl lv~y prlv~oal ~,s~l~.
T~*?
?~tcy N l t t r  th in  \[ K. ~thO~t  t r~ dtrtc% i i .- Fig.
2: HERMES: hypertext over Remote Sensing d~uments 4 -4 Legenda ofcontextual role label in figure 4.operations (i.e.
index, history or backtracking) areavailable.
The current version has been alsoimplemented under the X-Windows environment.Parallel navigation sessions on the same documentbase are allowed.In order to appreciate the advantages of automaticgeneration and upgrade activities, details on systemperformance may be of interest.
Hypertextcompilat ion, in fact, provides importantinformation on the linguistic processing to bederived.
The following analysis is based on thehypertext developed for documents (abstracts andD.I.F.)
on Remote Sensing (210 documents).
10743anchors (of 133 different words), and 5908 links havebeen globally derived.
Fig.
3 describes the time needsduring the compilation phase.
We estimated alinear trend in time because the updating activityhas a complexity O(n) s, where n is the number ofdocument yet in the document base.
Experimentalevidence confirms a linear trend (fig.3).Updating times \[fTime 60 A| I(cPu ~;ec.)
40  ,i ? "
- !t 2;1 6 11 16  21 26  31 36  41 46  51 56  61 66  71 76 81 86  91 96  Ii- Fig.3: Updating time for a document -Note the difference from the linear regression(dotted line).
This is a clear marker of relevantdifference in document information density.
Thisdifference is much more evident when comparingabstracts with DIF (the last documents are composedby a large number of descriptors and a textualcomponent used as a comment).
We defined aninformation density score D as the ratio: number ofanchors / document length (in byte).
DIF andabstracts are very different in length: the averagelength value is 1022 bytes for abstracts and 6691 bytesfor DIF documents.7005O0~ 300200IO0 2 4 6 $ 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38Exiting Links- Fig.4: Exiting links versus anchors -MeP Measured Parameter, Exl Experimental Instrument, StPStudied Parameter, Foc Focus, ExA Experimental Activity.5 To insert adocument means to compare the new document withpreviously ones checking for link estabilishing.178Despite of this we obtained an average value D of129 for abstracts and 341 for DIF.Experimental evidence confirms abstracts are muchmore information dense than DIF.In figure 4 a link versus anchor plot has beenshown.
This graph shows the link density ofanchors.
In referred prototype, running on a RemoteSensing domain, there are more than 300 anchorstriggering only 1 link, while only less than 100 with6 links have been activated.
Note that there aremore than 600 anchors than have no links leavingfrom them thus showing peculiar concepts for adocument  and irrelevant in the domainsublanguage (we call them inactive anchors, laterinsertion of a document may activate them).
Amonotonic decreasing trend on the number of theleaving links is evident.
Isolated peaks on highervalues of links number are evident.
Those peaks arerelated to very domain dependent anchors, as forexample ,  the coup les  <method-Focus>,<information-Kind of processed Information>,<information-Focus>, <image-Focus>, <result-Focus>, <image-Kind of processed information>.These anchors are present in most of thedocuments.
Thus they represent common topics inthe related domain and may be considered asconcepts extremely important in the sublanguage.As descriptors of the underlying knowledge domain,the more frequently activated anchors are veryinformation.
One more evaluation provided by thisplot is the evidence of computational validity of ourapproach.
In fact the quickly decreasing curve showsthat a very large amount of documents generatesonly a few links thus avoiding an exponentialexplosion of physical connections.
We stress such aresult because a completely automated production ofanchors (as provided by our system) could havegenerated an unforeseen amount of links.4.
Conc lud ing  remarksIn this paper we have proposed a new approach tohypertexts based on a NLP methodology.
Moreovera general description of HERMES, an hypertextualsystem allowing automatic authoring, has beenprovided.
The growth in use and dimension ofhypertextual systems, makes automatic authoring amust.
In this activity, the efficacy of semantics,acquired by lexical acquisition tools (i.e.
ARIOSTO),has been stressed.
The semantic description guidedby the lexicon is worth expressive for automaticauthoring.
As a deep text understanding is notrequired, semantic interpretation is feasible and cost-effective.
A conceptual rather then just structuralrepresentation f documents suggests emantic rulesfor anchors detection and links activation.The proposed method enhances the figure of theuser, as opposed to the author.
User becomes themain actor in the hypertextual management, as hecan browse inside the space of documents withconfidence.
The hypertextual space is generatedaccording to his suggestions, as provided in thedefinition schema.
The author suggests only how tosemantically represent documents.As concluding remarks, the system evaluation hasproduced, as an unforeseen side-effect, someimportant linguistic evidences about the underlyingsublanguages.
This relates to HERMES capability ofautomatical ly deriving meaningful  anchors.HERMES portability as well as low resourcerequirements are also improved by the use of lexicalacquisition tools.ReferencesR.
Basili, M.T.
Pazienza, P. Velardi.
1992.
A shallowsyntactic analyzer to extract word associations fromcorpora, Literary and Linguistic Computing, vol.
7,n.
2, 114-124.R.
Basili, M.T.
Pazienza, P. Velardi.
1992.
"Computational Lexicon: the Neat Examples and theOdd Exemplars", Proc.
of 3rd Conf.
on Applied NLP.R.
Basili, M.T.
Pazienza, P. Velardi.
1993.Acquisition of selectional patterns, Journal ofMachine Translation, 8:175-201.R.
Basili, M.T.
Pazienza, P. Velardi.
1993.
What canbe Learned from Raw Text?
An Integrated Tool forthe Acquisition of Case Rules, Taxonomic Relationsand Disambiguation Criteria, Journal of MachineTraslation, 8:147-173.K.
Church.
1988.
A stochastic parts program andnoun phrase parser for unrestricted text, in Proc.
of2nd Conf.
on Applied Natural Language Processing,Morristown, February 1988.Essence Intelligent Document Analysis System.
1992.Technical Documentation, Toshiba, Australia.M.F.
Friesse, S.B.
Cousin.
1992.
Models for Hypertext.Journal od the American Society for InformationScience, 43(2).F.
Grisoli.
1994.
Definizione e realizzazione disistemi ipertestuali mediante tecniche di NLP,Thesis, Universit~ di Roma "Tor Vergata".R.
Marega, M.T.
Pazienza.
1994.
Co.D.H.I.R.
: anInformation Retrival System Based on SemanticDocument Representation, Journal of InformationScience, vol.
6.L.
F. Rau, P. S. Jacobs.
1988.
Integrating Top-Downand Bottom-Up strategies in a Text Processingsystem, Proc.
of the Second Applied NaturalLanguage Processing, MorrisTown, NJ.J.
F. Sowa.
1984.
Conceptual Structures: InformationProcessing in Mind and Machine, Addison-Wesley.J.
F. Sowa.
1988.
Using a Lexicon of CanonicalGraphs in a Semantic Interpreter, in RelationalModels of the Lexicon, M.Evens, Ed., CambridgeUniversity Press, 1988.179
