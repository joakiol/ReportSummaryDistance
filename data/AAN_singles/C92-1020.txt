On the Satisfiability of Complex ConstraintsLuis DamasUniversidade do Porto, Rua do Campo Alegre 823, 4000 Porto, PortugalGiovanni B. VarileCEC , 2920 Luxembourg, LuxembourgAbst rac tThe main problem arising from the use of com-plex constraints in Computational Linguists isdue to the NP-hardness of checking whether agiven set of constraints i satisfiable and, in theaffirmative case, of generating the set of min-imal models which satisfy the constraints.
Inthis "paper we show how the CLG approach torewriting constraints while constructing a par-tial model can greatly reduce the size of theoriginal constraints and thus contribute to re-duce the computational problem.1 In t roduct ionMost of the more recent formalisms in Com-putational Linguistics involve complex con-straints, i.e.
involving either disjunction or andnegation of equality constraints \[Kay85, KB82,PS87\].From a practical point of view, the mainproblem arising from the introduction of com-plex constraints is due to the NP-hardness ofchecking whether a given set of constraints issatisfiable and, in the affirmative case, of gen-erating tile set of minimal models which satisfythc constraints.Since the NP-hardness of the problem tendsto manifest in practical applications in a dra~matic way there were several proposals of algo-rithms to minimize this problem \[Kas87, ED88,MK91\].However, in our opinion, any practical ap-proach to the problem should rely on apply-ing an exponential satisfaction algorithm as sel-dom as possible and also, when that cannot beavoided, to reduce as much as possible the sizeof tile input formulae to which the algorithm isapplied.A classical way in which one can reduce thesize of input formulae is by factoring, i.e.
ex-pressing it as a conjunction of smaller formulaewhich do not have variables in common.
Asa matter of fact if instead of checking the sat-isfiability of a formula of length nk we checkthe satisfiability of n formulae of size k we aregaining an exponential reduction in time.
Thisstrategy is also explored in \[MK91\].Another way of reducing the size of input for-mulae which has been used in CLG implemen-tations \[DV89, BDMVg0, DMVglb\], and whichcan be combined with the previous approaches,is to build a partial model of the input formulaand to apply the algorithm to the remainingconstraints.
Since in many cases this is ableto do away with all the constraints this alsoachieves the goal of using the exponential satis-faction algorithm as seldom as possible.
Thismethod can also be seen as a generalizationof steps 1 and 2 of the algorithm described in\[Kas87\], while avoiding some of its pitfalls.In this paper we start by showing, by trans-lating to the feature logics context he methodsfor first order terms introduced in \[DMV91a,DMV91b\], how the CLG approach to rewritingconstraints while constructing a partial modelcan greatly reduce the size of the original con-straints and thus contribute to reduce the corn-putational problem.After that will review the notion of factoriza-tion for feature logic formulae showing underwhich conditions it can be done.2 An exampleFrom an intuitive point of view, our approachattempts to explore the fact that complex con-straints arising from combining descriptions oflinguistic objects, tend to take the form of alarge conjunction of smaller constraints.To illnstrate this approach we will use thefollowing example from \[MK91\] originated byconjoining the agreement features of the lexi-AcrEs DE COLING-92.
NANTES, 23-28 AOr3T 1992 1 0 g PROC.
OF COLING-92, NANTES.
AUG. 23-28, 1992eal information for tim German words die andKoffer.\[(feas~) = ,~om v (/ease) = acc\] ^\[\[(f gend) = fern A (fnum)= sg\]V( f  sum)  = pt\] ^( f  aend) = mase  ^  ( f  pers) = 3 ^\[\[(f num) = sg ^ ( lease) ?
gen\] V\[(f num) = pl ^ ( f  case) ?
dat\]\] (1)By looking at the top equality conjuncts inas it will be slmwn in the next section, is equiv-alent to the satisfiability of (1).
However weshould point out that the above process, wtfiehtakes at most quadratic time since, by usingadequate data structures, each rewrite can bedone in linear time and the number of rewritesis limited by the size of the fornmla, has succeedin drastically reducing the size of the originalformula.3 A rewr i t ing  sys tem(1) we can conclude that any model of (1) is In this section we iutroduee a rewriting system,subsumed by which is essentially an adaptation to featuregend = mase \]f = iv  .
.
.
.
a j ('~)Using this information and the standard ax-ioms of Feature Logics we can rewrite (1) asfollows\[(f case) = nora V (f ease) = ace\] A\[\[false A (f num)= sg\] V(f n~,n) : pl\] ^true A true A\[\[(f .
.
.
.  )
= sg A ( f  .
.
.
.  )
7 k Ben\] V\[(f,,ur.)
= pl A (f e~se)?
,tall\] (a)which, by using the standard rules of Proposi-tional Calculus, can be simplified to\[(f case) =noru V ( lease) = ace\] A( f  sum) = pl ^\[\[(f.um) = sg ^ (f ease) ?
ge.\] V\[(f nun,) = pl m (f ease) ?
datl\] (4)Again, froin the atomic top conjunct in (4)we can refine (2) to obtain\[ gend = mase \]f= /p~, .
s - -3  / (5)Inure = pt Jafter which (4) reduces to\[(: case) = sort, V ( f  ease) .
.
.
.
.
\] ^(f ease) # ant (6)Since 11o atomic top conjunct remains wewould now have to resort to the exponentiM al-gorithm to cheek the satisfiability of (6), which,structures of the one presented in \[DMV91a\]for constraints Oil first order terms.The purpose of this rewriting system is to for-nlalize the rewriting process illustrated in thcprevious section.
The rules of the rewritingsystem, whidt are justified by theorems of thelogic underlying features tructures, have beendcsigncd with the aim of bringing out conjunc-tions to the top while avoiding more than a lin-ear growth of the size of constraints.Tc~ formalize the rewriting system we will useFeature Logics \[Smo89\] and its notation.
Thuswe will use a and b to denote atoms, f to denotea feature name, x and y to denote variables andand t to denote either an atom or a variable.We start by recalling the notion of solved fea-ture clause of \[Smo89\] which is the feature logicw~rsion of the standard efinition of solved form\[lier30, Mah88\].A set of formulae C is said to be a solvedfeature clause if it satisfies the following condi-tions:1. every constraint in 6' has one of the follow-ing forms: fx -s ,  fx  \[, x=s, x~s2.
i fx:-s is in C then x occurs exactly once inC3.
if fx -s  and fx - t  are in C then s = t4.
i f fx  I is in C, then C contains no constraintfx -s5.
if x~s is in C, then x ?
s.Smolka a\]so shows that any satisfiable set Cof, possibly negated, atomic formulae can bereduced to solved form by using the followingsimplification rules, which again are the featurelogic version of l lerbrand's rules for solving setsof equations of first order terms:AcrEs DE COL1NG-92, NANTES, 23-28 Aotrr 1992 1 0 9 PROC.
OF COLING-92.
NANTES, AUG. 23-28, 19921.
{x--s) LI C ---* {x "-s} U \[s/x\]C if ?
~k .
.
.
.
Ix occurs in C2, {a--'=}uc-, {='----a}UC3.
{fx--s, fx--t} UC ---* {fx--s,s--f} UC4.
{s -s}uC~C5.
{Sa T}uC ~C7.
{atb}uC-*C i fu tb .We call a solved feature clause positive iff itincludes only constraints of the form fx -s  andx-s .We can now make precise the notion of par-tial model used in the previous ection as a pos-itive solved feature clause .
?4.Note that the form required for A~ is essen-tially the one produced by an unification algo-rithm for feature structures.Given a set of constraints C we say that afeature clause C ~ is a minimal model of C if everymodel ofC r is a model of C and no proper subsetof C ~ satisfies this condition.From Theorem 5.6 of \[Smo89\] we can con-clude that for any C there is a finite uumber ofminimal models of C."\]2he aim of the CLG rewriting system is toproduce from a set of constraints Co a partialmodel .
?4 and a smaller set of constraints C suchthat any minimal model of Co can be obtainedby conjoining (i.e.
"unifying") a minimal modelof C with .~  and moreover for any minimalmodel of C the reunion Ad U C is satisfiable.We start by defining a set of rewriting rules~ for terms and constraints:z - *~ t i f  x='t  E 34b-x  ---+~ x -bfa -  t - -~  falsefx  T~M false if fx - I  C 3da--b ---*~ falset -  t ~ ~ruef x -s  ~ t - s  if f x - I  E 34~true --*~4 false~false ~ true~C ~ C~(C v C') ~ .~ ~C A ~C'C A t rue -*~ CC A false -.2~ falseC V true---+A~ trueC V false -.~,~ CWe now define a rewriting system for pairs(34,17) by first closing C under ---*s~4 and thenusing the following rules(M, c u {false}) -~ ({rut,e}, ~)(M,Cu  {true)) ~ (34,C)(34,c u {~-s}) ~ (34 v {~-s},C)(34,c u {/z-t}) -- (34 u {fz-'-t}, c)with the convention that after each applicationof one of the rewrite rules the new partial modelis reduced to solved tbrm and the resulting setof constraints i closed nmler ~M.As in \[DMV91a\] the rewrite process could beextended to use negated atomic constraints inC.We will now sketch the proof of the claimsmade above about the rcwriting system.We will first argue that if given an initial setof constraints Co we apply the rewriting systemto (~,Co) to obtain {34,C} then Co ( ....... pre-cisely the conjunct of all the constraints in Co)is equivalent to 3.4 UC.
As a matter of fact thisfollows from the fact that each rewrite rule isassociated with a similar meta-theorem of l:irstOrder Logic and/or the axioms of Feature Log-its.As for the other property of the rewritingsystem, namely that the minimal models of Coare obtained by conjoining NI with those of C,we will only sketch the argument of the proofwhich follows from the fact that if some minimalmodel C' of C was inconsistent witl~ .M then, af-ter reducing C to disjunctive form, at least oneof the disjunctions |muld subsume C~ and thusshould be inconsistent with A4 while admiringitself a model.
Now, since every atomic formulaoccurring ill the disjunction already occurcd inC it is possible to derive a contradiction withthe hypothesis that C was closed under --~M.To see this we notice that each disjunct in thedisjunctive form of C can be regarded as fea-ture clause C'.
Now if A4 U C" was unsatisfi-able then some sequence of simplification rulesshould lead to a clash.
Now, noticing that anyatomic formula in C" umst already be presentin C, it is easy to check that any sequence ofsimplification rules would involve only fornm-lae from C" and a clash with a formula in f14would thus be impossible.4 On the  fac tor i za t ion  o ffeature  const ra in tsAlthough tile rewriting system introduced intile previous section can be seen as a factor-ization of tile original constraint it is also im-portant, in accordance with tile discussion inthe introduction, to further factorizing tile con-Acres DE COLING-92, NANTES, 23-28 hOt~T 1992 1 1 0 PgOC.
OF COLING-92, NawrEs, Auo.
23-28, 1992straint produced before an exponential satisfac-tion algorithm is api)licd.Now given a conjunction C A C' of featureconstraints it is easy to provc, using argumcntssimilar to the ones used in thc previuus ection,that a sufficient condition for tim conjunctionto be satisliablc iff each of the conjunets is in-dependently satisfiable, can be expressed ms fol-lows:1. any variable x which occurs in C in anatolnic formula x--s or s--a: does not oc-cur in C'  and vlce-versa2.
for every variable x and feature f such thatfx occurs in C, /x does nnt occur in C'and vice-versa.Note that given a conjunctiw~ wet of con-straints it is possible to l)artition it into miidmaldisjoint sets satisfying the.
conditions above inquadratic time.Using the above criteria results in achievillgthe objective described in \[MK91\] of separatingnot only the treatment of constraints dealingwith completely indel)endcnt linguistic descrip-tions but also of independent phenomena forthe same the \[iaguistic descriptions.5 Conc lus ions\[DMV91b\]\[DVSg\]\[El)aS\]\[oaw86\]Tim strategy for handling complex constraintsdescribed in this paper has I)een successfullyput to use in ditl~rent CLG implementations.One of the adwmtagcs of using a rewrite sys- \[I\[cr30\]tcm is that it is easily extended to other atomicconstraints like the ones in CLG(2) dealing withlists.
Similarly it can bc adapted to cope withthe extensions to feature constraints proposed \[Job91\]in \[Joh9i\].References\[Kas87\]\[BDMV9O\] Sergio Balari, Luis Damas, NehnaMoreira, and Giovanni I1.
Varile.CLG: Constraint logic grammars.In ll.Karlgrcn, editor, P~vceediugsof the 13th htternutional Confer-cuce on Computa~ioual Linguistics \[Kay85\](COLING), volume 3, pages 7-12,llelsinki, 1990.\[DMV91a\] Luis l)amas, Nelma Moreira, andGiovanni B. Varilc.
The forlnal andprocessing models of CLG.
In FiifthCoufereucc of the Emopeaa Chap=ter of the Association for Compu-tational Linguistics, pages 173-178,Berlin, 1991.Luis Damns, Nelma Moreira, andGiovamd B. Varile.
CLG - a generallogic grammar formalism, ht Pro-ceediugs of the Workshop on Con-straiut Propagation and LinguisticDescription, forthcoming, I ugano,Switzcrlan(l, 1991.Luis l)ama, s and Giovanni B. Var-tie.
CLG: A grammar formal-ism based oll constraint resolution.In l';.M.Morgado and J.P.Martitm,editors, EPIA 89, volume 390 ofLecture Notes in Artificial Intelli-gence, pages 175-186.
Springer Ver-lag, 1989.A.
Eisete and J. D6rre.
Unificationof disjunctive feature descriptions.In ~6th Annual Meeting of the As-sociation \[or Computational Lin-guistics, Buffalo, New York, 1988.Barbara Grosz, Karen SparckJones, and Bomty \],ynn Webber,editors.
Readings in Natural Lan-guage Processing.
Morgan Ka/ff-mann, 1986.Jacques llerbrand.
Recherchessur la theovie de la dgmoustration,7'h~se de Doctorat.
Univ.
Paris,Paris, 1930.Mark Johnson.
Features and for-mulae.
Computational Linguistics,17(2), 1991.IL T. Kasper.
A unification metbodfor disjm~etive t;eature deseril)tions.In 25th Annual Meeting of the As-sociation for Computational Lin-guistics, Stanford, CA, 1987.Martin Kay.
l>arsing in fimc-tional unification grammar.
Inl)avid It.
Dowty, I,auri Karttunen,and Arnold M. Zwicky, editors,Natural Language Parsing.
Ellisl lorwood/Wiley, 1985. also appearsin \[GJW86\].AcrEs DE COL1NG-92, NANTES, 23-28 AOI~'I' 1992 1 1 1 PROC.
OF COLING-92.
NANTI':S. AUG. 23-28.
1992\[KB82\]\[Mah88\]\[MK91\]\[P887\]\[Smo89\]R. Kaplan and J. Bresban.
Lex-ical functional grammar: A for-mal system for grammatical repre-sentation.
In Joan Bresnan, edi-tor, The Mental Representation ofGrammatical Relations.
MIT Press,1982.Michael J. Mailer.
Complete a.x-iomatizations of the algebras of fi-nite, rational and infinite trees.Technical report, IBM Thomas J.Watson Research Center, P.O.
Box704, Yorktown tleights, NY 10598,U.S.A., 1988.John T. Maxwell and Ronald M.Kaplan.
A method for disjunctiveconstraint satisfaction.
In MasaruTomita, editor, Current Issues inParsing Technology.
Kluwer Aca-demic Publishers, 1991.Carl Pollard and Ivan Sag.
\[n-formation Based Syntax: and Se-mantics, Volume 1, Fundamentals,volume 13.
Center for the Studyof Language and Information Stan-ford, 1987.GertSmolka.
Feature constraint logicsfor unification grammars.
Technicalreport, IBM Wissenschafliches Zen-trum, Institut fiir WissensbasierteSysteme, 1989.
IWBS Report 93.AcrEs DE COLING-92, NANTES, 23-28 AO't~T 1992 1 1 2 PROC.
OF COLING-92, NANTES, AUO.
23-28, 1992
