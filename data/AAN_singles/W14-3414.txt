Proceedings of the 2014 Workshop on Biomedical Natural Language Processing (BioNLP 2014), pages 93?97,Baltimore, Maryland USA, June 26-27 2014.c?2014 Association for Computational LinguisticsA repository of semantic types in the MIMIC II database clinical notesRichard M. OsborneComputational BioscienceUniversity of ColoradoSchool of Medicinerichard.osborne@ucdenver.eduAlan R. AronsonNational Library of MedicineBethesda, MDalan@nlm.nih.govK.
Bretonnel CohenComputational BioscienceUniversity of ColoradoSchool of Medicinekevin.cohen@gmail.comAbstractThe MIMIC II database contains1,237,686 clinical documents of vari-ous kinds.
A common task for researchersworking with this database is to runMetaMap, which uses the UMLSMetathesaurus, on those documentsto identify specific semantic types ofentities mentioned in them.
However,this task is computationally expensiveand time-consuming.
Research in manygroups could be accelerated if there werea community-accessible set of outputsfrom running MetaMap on this documentcollection, cached and available on theMIMIC-II website.
This paper describes arepository of all MetaMap output from theMIMIC II database, publicly available,assuming compliance with usage agree-ments required by UMLS and MIMIC-II.Additionally, software for manipulatingMetaMap output, available on Source-Forge with a liberal Open Source license,is described.1 Introduction1.1 The MIMIC II database and its textualcontentsThe Multiparameter Intelligent Monitoring in In-tensive Care II (MIMIC-II) database is a public-access intensive care unit database that containsa broad array of information for over 33,000 pa-tients.
The data were collected over a 7 year pe-riod, beginning in 2001 from Boston?s Beth Is-rael Deaconess Medical Center (Saeed et al, 2011;Goldberger et al., 2000).Of particular interest are the 1,237,686 clini-cal documents, which are broadly classified intothe following four groups: MD notes, dischargesummaries, radiology reports and nursing/other.Each free-text note contains information describ-ing such things as a given patient?s health, ill-nesses, treatments and medications, among others.1.2 Motivation for the resource: MetaMapruntimesPart of the motivation for making this resourcepublicly available is that considerable resourcesmust be expended to process it; if multiple groupscan share the output of one processing run, the sav-ings across the community as a whole could bequite large.
To illustrate why this would be valu-able from a resources perspective, we provide heresome statistics on the performance of MetaMap.Random samples of each category (10% each)were chosen and Monte Carlo simulation was per-formed (1,000 iterations per note) to obtain therunning times presented below.
The clinical notesranged from a minimum of 0 words to a maximumof 6,684 (some of the notes were 0 bytes becausethe note for a particular patient and day containedno text).
The mean, median and mode per doc-ument processed by MetaMap were 17, 5 and 2seconds, respectively, with a minimum of 1 and amaximum of 216 seconds.Figure 1 below plots the number of wordsagainst processing times in seconds for each of theof notes, sampled as mentioned above.The majority of the processing was done on aSun Fire X4600M2 server with 16 (4 x Quad-Core AMD Opteron(tm) Processor 8356 cores,2.3GHz), 128GB memory and 12 TB of disk stor-age, currently running Fedora Core 17 Linux.
(An Apple MacBook Pro and a Windows desktopserver were also used to speed processing.
Theanalysis of the random sample of notes was per-formed in its entirety on the Sun machine, therebyproviding consistent results for the data in Figure1.
)93Figure 1: MetaMap Runtimes1.3 Motivation for the resource:reproducibilityAny large-scale run of MetaMap over a huge doc-ument collection will have occasional failures, etc.The odds of any two runs having the same out-put are therefore slim.
Moreover, there is po-tential variability in how documents are prepro-cessed for use with MetaMap.
Using this reposi-tory of MetaMap outputs will ensure reproducibil-ity of experiments and also preclude the neces-sity of performing the same preparatory work andMetaMap processing on the same data.1.4 Motivation for the resource: semantictypesThe creation of the MIMIC-II repository is an in-termediate step in our research.
We are extractingthe semantic types found in each clinical note inan attempt to determine if there exists evidence ofsubdomains across the categories used by MIMIC-II to group the notes.2 Materials and Methods2.1 MaterialsMetaMap is a program developed at the NationalLibrary of Medicine (NLM) that maps biomedicalconcepts to the UMLS Metathesaurus and reportson the corresponding semantic types.1The pro-gram is used extensively by researchers in the fieldof biomedical text mining.
See Aronson, 2001;Aronson and Lang, 2010.1Users of MetaMap must comply with the UMLSMetathesaurus license agreement (https://uts.nlm.nih.gov/license.html).Although our focus is on the clinical notes con-tained in a single table, noteevents, MIMIC-II isboth a relational database (PostgreSQL 9.1.9) con-taining 39 tables of clinical data and bedside mon-itor waveforms and the associated derived param-eters and events stored in flat binary files (withASCII header descriptors).
For each IntensiveCare Unit (ICU) patient, Saeed et al.
(2011) col-lected a wide range of data including inter alialaboratory data, therapeutic intervention profiles,MD and nursing progress notes, discharge sum-maries, radiology reports, International Classifica-tion of Diseases, 9th Revision codes, and, for asubset of patients, high-resolution vital sign trendsand waveforms.
All data were scrubbed for per-sonal information to ensure compliance with theHealth Insurance Portability and AccountabilityAct (HIPAA).
These data were then uploaded to arelational database thereby allowing for easy ac-cess to extensive information for each patient?sstay in the ICU (Saeed et al.).
A more detaileddescription of the use of the MIMIC-II databasemay be found in(Clifford et al.
, 2012).The abbreviated schema in Table 1 below showsthat each ID uniquely identifies a note along with aSubjectID, a Category and Text.2We added the IDattribute to noteevents as a primary key becauseSubjectID, Category and Text are not keys.
Thus,a particular patient might have many notes andmany categories but each note is uniquely iden-tified.Attribute Type Cardinality Sample ValuesID integer unique 1, 2, 3, 4...SubjectID integer many to one ID 95, 100, 100, 99,Category character varying(26) many to one ID radiologyText text many to one ID interval placement of ICDTable 1: Schema MIMIC-II noteevents table.As mentioned above, the notes in the MIMIC-IIdatabase are categorized as MD reports, radiologyreports, discharge summaries and nursing/otherreports.
The contents of these notes varied greatly.The MD and nursing notes tended to be short andunstructured with a number of abbreviations andmisspellings, whereas the radiology reports werelonger, more structured and showed fewer errors.The MIMIC-II version used for this research is2.6 (April 2011; 32,536 subjects).The distribution of reports with summary statis-tics is below in Table 2.2The full noteevents table has ten other attributes such asadmission date, various timestamps and patient informationbut these were not relevant to our research.94MD Discharge Radiology Nursing Totalsmin words 0 0 0 0 0max words 632 6684 2760 632 6684median words 108 963.5 174 108 135average words 131.6 1009.2 265.5 131.6 194.7total notes 23,270 31,877 383,701 798,838 1,237,686Table 2: MIMIC-II Clinical Note Summary Stats.2.2 MethodsWe used MetaMap to process the clinical notes inorder to find semantic concepts, the latter of whichare being used in our current research.
For thework in this paper, we used MetaMap 2013 withthe 2013AB database.Before processing the notes with MetaMap,a number of preparatory steps were taken.
Asmentioned above, a primary key was added tothe noteevents table to provide a unique id foreach note.
A Python script then queried thedatabase extracting each note and storing it in afile named according to the following convention:uniqueID subjectID category.txt where uniqueIDis the primary key value from the noteevents ta-ble, subjectID is the unique number assigned toeach patient and category is one of the four cate-gories mentioned above.Each of the notes was then processed by a Bashshell script to remove blank lines and control char-acters.
(This important step was added after a sig-nificant amount of processing had already takenplace.
If this is not done, a number of prob-lems arise when running MetaMap).
Finally, allfiles with 0 bytes were removed.
These files werepresent because many tuples in the noteevents ta-ble contained clinical note entries with no data.The number of options available when runningMetaMap is considerable so we chose those thatwould provide a full and robust result set whichwould be useful to a wide range of researchers.
Inour first run, we limited the threshold for the Can-didate Score to 1,000.
However, for the repository,no threshold was set so that a full range of outputis provided.3The output is in XML in order to structure thedata systematically and provide an easier and con-sistent way to parse the data.
Although we choseXML initially, we intend to provide the same datain plain text and Prolog formats, again to provideutility to a broad range of researchers.In order to process all files, a Bash shell script3The exact MetaMap command we used wasmetamap13 ?XMLf ?silent ?blanklines 3 filename.txtwas created that called MetaMap on each note andcreated a corresponding XML file, named accord-ing to the same convention as that for notes butwith the txt extension replaced by xml.3 Results3.1 The repository of MetaMap outputThe repository for the MetaMap output containsan XML file for each note that originally containedtext in the MIMIC-II database.
Each XML filecontains a wealth of information about each noteand a discussion of this is beyond the scope ofthis paper (see http://metamap.nlm.nih.gov/Docs/MM12_XML_Info.shtml).For our research, we are interested in the se-mantic types associated with phrases identified byMetaMap.
Below is a section from output file768591 19458 discharge.xml.
This is a dischargesummary for subject 19458 with a unique note idof 768591.
The note contained the phrase ?Admis-sion Date?
which MetaMap matched with a candi-date score of 1000 and indicated that it is a tempo-ral concept (tmco).Ultimately, the MetaMap output files will be up-loaded to the PhysioNet website and made avail-able to the public.4The files will be organized ina fashion similar to the original data files on thesite.
Namely, data are grouped by subject ids andcompressed in archives with approximately 1000files each.<Candidate><CandidateScore>-1000</CandidateScore><CandidateCUI>C1302393</CandidateCUI><CandidateMatched>Admission date</CandidateMatched><CandidatePreferred>Date of admission</CandidatePreferred><MatchedWords Count="2"><MatchedWord>admission</MatchedWord><MatchedWord>date</MatchedWord></MatchedWords><SemTypes Count="1"><SemType>tmco</SemType></SemTypes>The original note contained 975 lines, whereasthe MetaMap xml file contained 248,198.
Thusit is obvious that there is a very large amount ofMetaMap output that we don?t consider but whichmay be of interest to other researchers.4Subject again to the data usage agreement.953.2 A Python module for manipulatingMetaMap outputIn order to make information in the XML files ac-cessible to others, we developed a Python module(parseMM xml.py) containing a number of meth-ods or functions that allow one to parse the XMLtree and extract relevant information.Although we will add more functionality asneeded and requested, at this point the followingmethods are implemented:?
parseXMLtree(filename) ?
parses the con-tents of filename and returns a node repre-senting the top of the document tree.?
getXMLsummary(XMLtree) ?
summarizesthe data contained in the parsed XML tree.The summary contains top-level elementsand their corresponding text.
The output ismuch like that contained in typical MetaMaptext output.?
getCUIs(XMLtree) ?
returns the MetaMapCUIs found in the XML tree along with thematching concepts.?
getNegatedConcepts(XMLtree) ?
returnsnegated concepts and their correspondingCUIs.?
getSemanticTypes(XMLtree) ?
returnsmatched concepts, their CUIs, the candidatescores and the semantic types associatedwith the concept.?
findAttribute(attribute) ?
searches the docu-ment tree for an attribute of the user?s choos-ing.
Returns the attributes with their corre-sponding text values.We chose Python to create our module be-cause of its ease of use and its multi-platformcapabilities.
Once Python is installed and theparseMM xml.py is placed in a directory alongwith the MetaMap xml file which is to be ana-lyzed, retrieving relevant information is relativelystraightforward.55Under most circumstances, Python is already installedon the Mac OS X and Linux operating systems.A stylized version of our code is presented be-low.# Parse XML tree and return semantictypes.import parseMM_xmlxml_tree = \parseXMLtree("noteid_subid_category.xml")semTypes = getSemanticTypes(xml_tree)print(semTypes)A truncated listing of the output:CandidateCUI ?
C0011008CandidateMatched ?
Date1 ?
SemType ?
Temporal ConceptCandidateCUI ?
C2348077CandidateMatched ?
Date2 ?
SemType ?
FoodIn order to fully test the robustness of our mod-ule, we will do further unit and regression testing,in addition to providing more exception handling.Ultimately, the code will be available on Source-Forge, an Open Source web source code repositoryavailable at www.sourceforge.net.AcknowledgmentsWe would like to thank George Moody of MIT forhis help with questions concerning the MIMIC-IIdatabase.ReferencesAlan R. Aronson 2001.
Effective mapping of biomed-ical text to the UMLS Metathesaurus: the MetaMapprogram, Proc AMIA Symp.
2001; 17:21.Alan R. Aronson, Franois-Michel Lang 2010.
Anoverview of MetaMap: historical perspective andrecent advances, J Am Med Inform Assoc 2010;17:3 229-236Gari D. Clifford, Daniel J. Scott, Mauricio Vil-larroel 2012.
User Guide and Documen-tation for the MIMIC II Database, http://mimic.physionet.org/UserGuide/UserGuide.pdfAry L. Goldberger; Luis A. N. Amaral; Leon Glass;Jeffrey M. Hausdorff; Plamen Ch.
Ivanov; Roger G.Mark; Joseph E. Mietus; George B. Moody; Chung-Kang Peng; H. Eugene Stanley, 2000 PhysioBank,PhysioToolkit, and PhysioNet: Components of aNew Research Resource for Complex PhysiologicSignals, Circulation 101(23): e215-e220.96Mohammed Saeed, Mauricio Villarroel, Andrew T.Reisner, Gari Clifford, Li-Wei Lehman, GeorgeMoody, Thomas Heldt, Tin H. Kyaw, BenjaminMoody, Roger G. Mark.
2011 The Multiparameterintelligent monitoring in intensive care II (MIMIC-II): A public-access ICU database, Critical CareMedicine; 39(5):952-960MetaMap Release Notes Website 2013.
MetaMap2013 Release Notes http://metamap.nlm.nih.gov/Docs/MM12_XML_Info.shtmlMetaMap 2012 Output Website 2014.MetaMap 2012 XML Output Explainedhttp://metamap.nlm.nih.gov/Docs/MM12_XML_Info.shtmlPhysioNet Website 2014.
PhysioNet MIMIC-II Web-site http://physionet.org/mimic2/97
