DISCONTINUITY  AND THE LAMBEK @ALCULUSMark  Hepp leDeI)artment of Computer Science, University of Shellield, lLegents Court,Portohello Street, Sheflield, UK.
gmai\]: hepple0dcs, shef f ie ld .a t  .ukI n t roduct ionThis paper is concerned with tile treatment of dis-continuous constituency within Categorial Grammar.In particular, I address the problem of providing anadequate formalisation of categorial commctives l)ro-l)osed by Moortgat (1988), which are useful for han-dling certain forms of diseontimmus eonstitnency, l)e-spite some interesting proposals, a satisfactory logicfor these e{mnectives has so far remained dnsive.
Iwill provide such a h)gie, using an approach that fallswithin the general framework of labelled deductive sys-tems (Gabbay, 1991), employing novel methods forreasoning ahout linear order in resource nsage.
Theapproach is illusl;rated by linguistic al}plications forextraction, pied-piping and quanti\[ieation.The Lambek ca lc t f lusOur general fran,ework is the associative I,ambelc cal-culus (L: l,mnbek, 1958), a system which falls withinthe class of formalisms known as Categorial Gram-mars.
The set of types is freely generated firom aset of primitiw; (atomic) types (e.g.
{s, np .. .
.
}), us-ing binary infix el)craters \, /, ..
The 'meaning' ofthese connectives in L is fixed hy a senlanties for thelogic, based on a (se,nigroup)algehra of strings (Z:,.),i.e.
where ?
is an associative, notl-coulmtltative bi-nary operator, with two-sided identity e, and E is theset  Of non-eH lpty  (-7 t:- g) strings over some vocabu lary .An interpretation funcl;ion \[\[~ assigns some subset ofZ; to each type, satisfying the conditions be.low forconlplex types and gyp(', sequence.s.
A type comhi-.l iar /o i l  X 1 ..... Xtz --> X0 h.ohls in a model ((?,.
), \[\[\]l ),if {\[x~ .... ,x.\]\]_cl\[Xol\], a.d is ~l id  if it is true in allmodels.
'1'here are several formulations of L that allrealise this same meaning for the connectives.t~x,v\]\] = {.~,v < z. I .~ e \[\[xll A ~ < {\[v\]\] }\[\[X/Y\]J = {,: e Z; I V; ~: \[~Y~.
:,:.y e ~\[X\]\] }I\[vxx\]\] - -  {~.
</ :  I V,,~ e IIY\]\].,>,.
e gx\]}}\[\[x~ ..... x,,\]} = {:,:~ ......... ec  I<  e \[Ix\]~\] A , .
,A  .... C EX,,I\]}\ ]The alternatlve formulations include e.g.
seqnent (l,aml}ek1958), proof net (l~.oor(la 199:1 ), and natura l  deduct.ion systems(Morrill e!
aL 1990, Barry eg al.
1991).
Alternative formula-tions carry different advantages,  e.g.
natura l  dcductlon is wellsuil.cd for lh,guisl.ic prcsental.ion, whereas proof nets haw~ ben-efits for automated theorem proving.l ) i scont inuous  type  const ruc torsThe I,ambek calculus is a purely concatenative system:where any two types are combined, the string of theresult is arrived at by concatenating the strings of thetypes combined.
This point is illustrated graphicallyin (la,b), for the Lambek tractors, where (follow-ing Moortgat, 1991) each triangle represents a resultstring, and unshaded and shaded areas represent fnne-tor and argutlre.nt stril/gs, respectively.
(1) (a) X/Y (b) YXX (c) XIY (d) XIYY Y Y yl'rclixa~ion Suffixal.ion Extract ion InfixationVarious linguistic phenomena, however, suggest heexistence of discontinous constituency, i.e.
situationsthe result string from combining two constituents isnot produced by concatenating the component strings.
(See e.g.
Bitch, 1981.)
Moortgat (1988) suggests aug-men?ing \]T, with two discontinuous type construct, ors.An exh'aclion fimctor X\]Y is one whose argument cor-responds to a non-peripheral (or more precisely, nornecessaribj peripheral) suhstring of the result of con>binaries, as it, (lc).
An infixation fimetor XIY itselfcorresponds to a non-l)eril)heral substring of the re-sult of combination, as in (ld).
Given these intuitiw'~characterisations, two options arise for the meaning ofeach comlecLive as to whether the point of insertionof one striug into the other is free (universal) for lixed(existential).
In this paper, I will focus on the exis-tential variants of the commctives, which appear to hethe most linguistically useful, and whose interpretiveconditions arc as follows:P rev ious  proposa lsF, ach connective should have two inference rules: a ruleof proof (showing how to derive a type containing theconnective), and it rule of nse (showing how to employsuch a type).
This indicates a possible eight infer-ence rules that we might hope to state (i.e.
proof/usex universal/existential x infixation/extraction).
V~ri~ous attempts have I~eeu made to provide a logic for tilediscoutiuuous type constructors, but all have provedullsu('cessflll or unsatisI'actory in some way or another.1235Moortgat  (1988), for example, uses an ordered se-quent calculus framework, which allows only two of thepossible eight rules to be stated: a rule of proof for ex-istential T, and a rule of nse for universal ~.
Moortgat(1.991) nses a proof method in which types are not or-dered in proof representations,  where linear order con-straints and consequences are instead handled using asystem of str ing labelling, i.e.
types are associatedwith string terms, which are explicitly manipulatedby inference rules.
This approach allows two furtherrules to be stated, but  the four expressible rules aredistr ibnted one per connective, i.e.
a complete logic isnot given for even any one connective.
As Versmissen(1991) notes, Moortgat 's  tr ing label system does notallow the recording of a specific posit ion for insertingone string into another,  as would seem to be required.Morrill & Solias (1993) avoid this latter problem byaugment ing the string \]al~elling algebra with a non-associa(,ive pairing operator (., .
), allowing labels suchas {st, s2), indicating an insertion point in between sland s2.
'lPhis system allows versions of T and ~ oper-ators to be specified, hut ones whose interpretive def-initions differ from Moortgat 's .
The non-associat ivityof pairing gives rise to l imited flexibility for the systemin terms of the type combinat ions that can be derived,and even the types that  can be constructed, e.g.
noflmctor (X~Y)/Z,  where a \] argument is not the firstsought, is allowed.Labe l led  deduct ion  &: Lambek ca lcu lusI next develop a formulat ion of L which can be e?-tended to allow for the (existential) discontinuity con-nectives.
Our start ing point is a lambda term se-mantics for impl icat ional L due to Bnszkowski (1987),ba.sed on the well kuown Cnrry -Howard interpretal;ionof proofs (I loward, 1969)3 This uses a bidirectionalvariant of the lambda calculus whose basic terms aredirectionally typed variables.
If t is a term of typeY \X  (resp.
X /Y) ,  and u one of type Y, then (at) t(resp.
(tu)") is a term of type X.
If v is a variable oftype Y, and t a term of type X, then klv.t (resp.
2"v.t)is a term of type Y \X  (resp.
X/Y) .
A semantics forimplicational L is given by the class of terms which2Under the Curry-lloward interpretation (lloward, 1969),logical formulas are regarded as types of expressions in typedlalnbda calculus, with atomic formulas corresponding to basictypes, and a formula A--~B to the type of functions from A to tl.It is dmnonstrable that the set of formulas for which there existsstone correspondingly typed lambda term is precisely the theo-rems of the impfieatlonal fragment of intuitlonistlc ogic.
Thus,typed lambda calculus provides a s emantlcs for implicational in-tuitlonlstic logic, i.e.
an independent, characterlsation f 'validdeductlon',just as the algebralc semantics ofL provides an inde-pendent characterisatlon f validity for that system.
Semanticsfor vm'ious other logics can be given in terms of classes of typedlambda terms, i.e.
subsets of the typed lambda terms whichsatisfy certain stated criteria, van Benthem (1983) provides alambda semantics for the system LP, a eonmmtative variantof L. Wansing (1990) provides lambda semantics for a range ofsubloglcs of intultlonistie logic.
The Curry-tloward interpreta-tion so permeates categorlal work that the terms "formula" and"type" have become almost interchangeable.
Note that I haveslightly modified BuszkowsM's notation.satisfy the conditions: ( l l l )  each subterm contains aflee variable, (132) no subterm contains > 1 free occur-renee of any variable, (133) each A t (resp.)?')
binds theleftmost (resp.
r ightmost)  free variable in its scope.This semantics can be used in formulat ing (implica-tionM) L as a labelled deductive system (LDS: Gabbay,1991).
a LM)els are terms of the directionM lambdasys -tern, and propagation of labels is via appl icat ion andabstract ion in the standard manner.
Natural  deduc-tion rules labelled in this way are as follows:(2) a /B :a  B:b \[B:v\]/E A:aa : (~b) ~ - - / IA/B : X:v.aB:b B\A :(~ \[B :v\]A : (b~) l \E~ ___A  :a \~/3\A : ,~v.aWe can eusure that only deduct ions appropr iate to( implicational) L are made by requiring that  the la-bel that  results with any inference is a term satisfy-ing Buszkowski's three conditions.
To faci l itate test-ing this requirement,  I use a f lmction E, which mapsfrom label terms to the string of their free variablesoccurring in the left-right order that follows from typedirectionality (giving what  I call a marker  term).
Anotion of 'str ing equivalence' ( ~- ) for marker terms isdefinecl by the axioms:(-~.1) * , (>z)?
(x .y ) .
z( -  2) .
-~ .
.
( - .3 )  .~-x.cE is recursively specified by the following clauses (wherePV returns the set of fi'ee variables in a term),  butit is defined for all and only those terms that  satisfyBnszkowski's three conditions.
4 Thus, we can ensurecorrect deduction by requiring of the label that resultswith each inference that there exists some marker termm such that )_'(a) = m.(~;.I) }2(v) = v where v E Vats(r .~) ~((~b) ~) = ~((,).~(1,)where l,'v((0 n lW(b) = 0(~.a) ~((~,~)~) = ~(.
).~(~)where FV(a)  ffl l!
'V(b) = 13(~.4) ~(~%.,) =/3where l~'V(2~..) ?
O, ~(a)=' v.~(~.~) >~(Xv..) = 9where l"V(~"v.( 0 ?
~, ~(a) - p,vThe followiug proofs i l lustrate this LDS (nsing t~m3111 labelled eduction, each fornulla is associated with a la-bel, which records information of the use of resources (i.e.
as-smnptions) in proving that formula.
Inference rules indicatehow labels are propagated, and may have side conditions whichrefer to labels, using the information recorded to ensure colrecL infcrencing.
Evidently, the Moortgat (1991) and Morrill &Solias (1993) formalisms arc LDSs.4Condition B2 is enforced by the requirement on the ap-plication cases of E. Conditions B1 and B3 are enforced bythe first and second rcquirement on the ahstraction cases of E,respectively.1236as shor thand for E ( t ) -m,  to indicate a signif icantniarker equivalence):x /v :~.
Y/Z:~ \[Z:z\]/i,:Y : (yz ) "/i,; >:x :  (~(vO")" ,+ ~.v.~x /z :  yz.
(~(vzy)"X/(Y/(Z\Y)) : m \[Z:z\] \[Z\Y:y\]\1;: r,Y : (z~) ~ ~ z.yY/ (z \v )  : a';>(<D ~ /~ /1," ~:x : (~ x';>(zv)|) " /I .
.
.
.
.XlZ..
x"~.
(~ X',v.
(~v)|) "Th is  system can be extended to cover product  usingthe inference rules (3), and the addit ional  )2 elansesshown following (with the obvious impl ic it  extensionsof the directional ambda system, and of Buszkowski'ssemantics).
Label l ing of \[.I\] inferences is via pairing,and that  of \[,.El inferences llses all operator  ada.pgedfrom \] lenton el al, (1992), where a term \ [b /v .w\] .aimplicit ly represents tim suhsl, it i it iol| of b for v+w iiia.
This rule is nsed hi (4).
(a) D: , \ ] \ [c : , I , \ ]  a : ,  i~:~,1 A : a t3.0 : b AIB : (a, b)iE(s.u) >:((<,, O) = ::(a).>~(~,)where l!
'V(a) rl FV(b) :: 007.7) >_,(\[b/v.w\].a) = fll')',(b)"fl2whe,.~ 1,'v((,)r: ~.
'vo) = 0(4) x /v /z : , :  \ [ z :q  \[v:,v\] z .v :~/ EXlV  : (~,) 'x:  ((*'z)"vy ~ .. .
.
v?
I')x ..
\[wl~.v\].
((.~O"v)' 5+ x.~,,x / (z .v )  : ~'~.(\[,,,/~.v\].
((=)":D ~)/:Labe l led  deduct ion  gz d i scont inu i ty'\]'his al)proach can be exi;eilded l;o allow for exist.enl, iali a.nd ,\[.
These conneci;iw;s have sLatidard iinl)lica-t ional inference rules, | lsing addit ional  dist inguishedoperators for labell ing (with superscr ipt  e for extrac-tion and i tbr lul l?at|on):(5) AtI~:~, ~:b \[1~:~}k : (oby - -  t*A'~B : ,Vv.aAIB:a B:b \[B:u\]A:(ab) i \]E A:a- - - - l lA \[ B : ,\iv.c,( lens|t ier /irsl;ly how >; Iiuist; I)e extended for theabstract.ion cases of |;he new introduct ion rules.
Fora \[II\] terin such as Aev.a, l.\]|e relevant E case allowsv to appear non-per ipheral ly  in the marker term ofa.
For a \[Ill term such as ,~v.a, v is allowed to hediscontinuous in the marker  of a (we shall see short lyhow this is possible), bug requires its components  toappear peripherally.where ~W(.\%..) ?
~, ~:(a)-' ,q~.v.,e~To allow for the new appl icat ion operators,  the markersystem must  be extended.
Recall that  the l inear orderinformat ion impl ic it  in lahcls is projected onto the left,-r ight d imension in markers.
Wi th  1" and 1, however,| l ie possibil ity exists that  either fiuletor or a rgument  isdiscontirmous in the result of their  combinat ion.
Forstr ings x G \[\[XTY\]\] and y G \[\[Y\]~, for example,  weknow there is some way of wrapping x around y togive a resnll, in X, but  we do no~ in general know howthe division of .v should be made.
This  problem of un-certainly ix handled by using operators  L and R, where1,(rn) and I t (m)represent  indefini le but  complemen~lary left and right suhcomponents  of the marker  termm.
(L arlcl 1{ are not project ion t ime| ions.)
This  ideaof the significance of :1, and II, in given content via theaddit ional  axiom ( =' .d), which allows that  if the eom-plemenl;ary left; and r ight snhcomponents  of a markerappear in ,q)propl:iate le l ' t - r ight juxtaposi t ion,  then thel~larker~s resot i rees  Irmy be treated as continuous.
5( = .d) I,(a:).\]{,(x) :: :cThe remaini i ,g clauses for L; then are:(>2.10) >:((,.t,)' 0 : V~:(~O).~(b) .
l t (~(a))wh..,.o l , ' v ( . )
n l?V(~) = 0(::.l I) ~((<,~y) = l , (>~(:)) .~(,) .
l~(~(~))where I~V(~)n vv(b)  =Some example deriw~tions follow:x /v :~.
\[v:,v\] x/v:,~- \[v:v\]/1.
', ~: \]1,; zx :  (~:,v)" .
.
.
.
.
,~.~ x:  0,~)" .
.
.
.
.
.
ut: JAX1Y : ,\%.
(~:y)" X IY '.
,~iy.
(zy) r\ [xlv:?\] Y:y \ [xtv:x\ ]  Y:yIf': IEx:  (<D' x :  (~y)~l~ ,UXl(X IY): ,\q,:.
(z.~D ~' X I(XIY):  A%'.
(:vy)'(X/Y)lZ:x \[Z:z\] \[Y:y\]l \]" x/Y: (~:~)~x: ((:~.~yy)" ,~, J :&Od~(~) .vI| ) \xtz:,\'~,.
((~.~V.v)' I,(x).aO).v - ~..v/I(x l z ) /v  ,\>v~.
((:,:~)tD"5rl'his ax iom may I)e seen as s ta t ing  the lhnlt of what  cml besaid cmtccrldi lg 'uncerl .ainly d iv ided '  resources, i.e.
only wheretile unccrt.aint.y is elimina{.cd by juxtapos i t ion  can the l,,t{ oper-~k\[ ol's })e ielllov(!
(Ii iiiitkii/~ r bOll/(l o\[.herwise qi idden ~ l'esource vis-ible.
I,'m'ther easonable ax ioms (not in pract ice requi red here)are l,(e) -::e and l/(e) ~ e, i.e.
|.he only possible left and r ightsubconlponents  of ml 'mnpty '  marker  are l ikewise empty.1237x /Y :~ \[YlZ:v\] \[z:~\]Y : (yz) ~x: (~(w)q" ~ =.L(v).~.R(y)xtz :~ .
(~(v , )~)  ~ ~ ~.~/i(xtz) / (v,z) :  :v~o~.
(,4vz)*yWord order  and  NL  semant icsLabels encode both the functional structure and lin-ear order information of proofs, and hence are usedin identifying both the NL semantic and word orderconsequences of combinations.
Label terms, however,encode distinctions not needed for NL semantics, butcan easily be simplified to terms involving only a singleabstraetor (A) and with application otated by simpleleft-right juxtaposition, e.g.x~A%.
(~(w)")' ~ ~z~.
((vz)~).To determine the linear order consequences of aproof with label a, we might seek a marker m consist-ing only of concatenated variables, where E(a) - m.These variables would be the labels of the proof's undis-charged assumptions, and their order in m would pro-vide an order for the types combined under the proof.Alternatively, for linguistic derivatlons, we mlght: sub-stitute lexical string atoms in place of variables, andseeker a marker consisting only of concatenated stringatoms, i.e.
a word string.
This method is adeqnatefor basic L, but problems potentially arise in relationto the discontinuity connectives.Consider the transformation X/Y  => Xi"Y.
The con-nective of the result type does not record all the lin-ear order import of the input type's connective, andneither consequently will the application label opera-tor for a subsequent \[\]E\].
Itowever, fl-normalisationyields a simpler label term whose operators record thelinear order information originally encoded in the con-nectives of the types combined.
For exarnple, the fol-lowing proof includes a subderivation of X/Y  =~ X\]Y.The overall proof term does not simply order the proof'sassumptions under )3 (giving marker L(z).y.l/,(x)),' butits t -normal form (xy)" does (giving x.y).X /Y : \  \[V:v\] Y:y /l,:x :(~)~IIXIY : ):v.(~:v) rx: ( (~%.
(~) , )  ~:)~Of course, normalisation can only bring out orderinginformation that is implicit in the types combined.
1:'orexample, the combination XTY:~,Y :y  => X: (xy)  ~ isa, theorem, but the label (xy) ~ does not simply o fder x and y.
However, if we require that lexical sub-categorisation is stated only using the standard Lam-bek connectives, then adequate ordering informationwill always be encoded in labels to allow simple order-ing for linguistic derivations.
Alternatively, we couldallow discontinuity connectives to be used in statinglexical subcategorisation, and farther allow that lex-ical types be associated with complex sh' ing terms,constrncted using label operators, which encode therequisite ordering information.
For example, a wordw with lexical type XTY might have a string term,Vv .
(wv)" ,  which does encode the relative ordering ofw and its argument.
A more radical idea is that de-duction be made over lexical types together with their(possibly complex) lexical string terms, and that thetesting of side conditions on inferences be done onthe /3-normal form of the end label, so that the im-plicit ordering information of the lexical string termis 'brought out', extending proof possibilities.
Then,tile lexical units of the approach are in effect partialproofs or derivationsfi Such a change would greatlyextend the power of tile approach.
(We shall meet alinguistic usage for this extension shortly.
)L ingu is t ic  app l i ca t ionsWe shall next briefly consider some linguistic uses ofthe discontinuity connectives in the new approach.
Themost obvkms role for \] is in handling extraction (henceits name).
Adapting a standard approach, a rela-tive pronoun might have type rel/(sTnp), i.e.
givinga relative clause (rel) if combined with s\]np (a 'sen-tence missinga NP somewhere').
Note that standardL allows only types re l / ( s /np)  and rel/(np\s), whichare appropriate for extraction from, respectively, rightand left peripheral positions only.
For example, whomMary  considers _ fool ish can be derived under thefollowing proof.
The atom string (6a) results viasubstitution of lexical string terms in the proof label,and )3.
Substitntion of lexical semantics and deletionof directional distinctions gives (6b).
(wl ..... ) ( ...... y) (considers) (foolish)rel/(slnp) .
.
.
.
.
.
p:~: ((nl>\S)/adi)/np:y \[np:u\] adj:z(nl~\S)/adj : (Vu)"/S ,,p\s: ((v,,)'~)"s: (x((!
:O"~y) *sJ,,p : a<~,,.
(~,( (~:,)' ~)" ) i T~/Erel: (,~ .
\?
, .
(~((V, , )~)")b  ~(6) a. whom.mm'y .cons iders .
foo l i shb.
whom' (,~u.considers / u foolish I mary I)Moortgat (1991) suggests that a (for example) sen-tentially scoped NP quantifier could be typed s~(s~np),i f  inlixation and extraction could be linked so thatinfixation wan to the position of the 'missing np' ofsTnp.
r Such linkage does not follow from tile defini-tions of the connectives but can be implemented in the6Thls idea invi~.es cmnparlsons to formalisms uch as lea:i-ealised tree adjoining 9':aramar (see Joshi et al 1991), wherethe basic lexical and derivatiomfl units are partial phrase struc-ture trees associated with h:xical items.7In the approach of Morrill & Solias (1993) such linkage fol-lows automatically given the int~erpretive definitions of their con-nectives.
Moorgat (1990,1991) proposes pecial purpose quan-tification I,ype const.rnetors.1238present approach by assigning a complex lexical stringterm, as in the lexical entry (<'rYeE,STmNG,SEM>):<st(sTnp) ,  A,,.,, ~,?so,,~eone, someone '>Such a string term would result under a 'type raising'transformation sud, as: np => s~(s\[np).
'Phe examplegoh.u gave someone money can be derived am follows,with string and semantic results in (7).
(~ot~,~on,,) (john) (g ,~)  (money)stCslm,):q ,w:~ ((m,\~)lm,)/m,:v \[m,:~\] m,:~(np \s ) /n l )  : (yv) r/Fm,\~: ( (w)~)  " \l.
:s: (~((yv)'~)')'IIsit, p: Z~v.
(x((yv)~ z)") ~s: (q ,\%.
(,~((wl"~)U q ~(7) a. john.gave.someone.moneyb.
sorneone' (Av.gave' v money' john')Tllere is a sense in which this view of quantifiersseems very natural.
Quantifiers behave distribution-ally like simple NPs, but semantically are of a highertype.
I{aising the string component under tile trans-formation p => s.\[(slnp) resolves this incompatibilitywithout imposing additional word order constraints.This aeCOllnt as stated does not allow for multi-ple quantitication, 8 bu~, would if lexical string termswere l;reated as part;\el proofs used in assembling largerderiwfl, ions, as suggested in the previous ection.In interesting test case, combining both movementand scope issues, arises with pied piping construcl, ions,where a whdtem moving to clause initial position isaccompanied by (or 'pied pipes') some larger phrasethat conl, ains it, as in e.g.
the relative clause to whomJohn spoke, where the PP to whom is fronted.
Fol-lowing Morrill & Sol\as (1993), and ultimately Mor-rill (1992), a treatment of pied piping can be givenusing \]" and 1.
Again, linkage of in\[ixation and ex-traction is achieved via complex lexical string assign-mont.
A l)P lfied-piping relative t~rono,m might b('(rel/(s\]pp))l(l)plnp) allowing it to infix to a NP I,O-sit\on within a Pl', giving a functor rel/(s\]pp), i.e.which prefixes to a 'sentence missing I 'P'  to give arelative clause.
Ilence, for example, lo whom wonldhave type rel/(slpp), and so Io whom ,/oh~z spoke is~ relative clause.
The lexical semantics of whom willensure that the resulting meaning is eqnivalent to thenonq)ied piping w~riant whom John spoke to.ReferencesBach, 1",.
1981.
'l)iscontinuons Constituents in Gener-alized Categorial Grmmnars.'
NRLS, 11, ppl- 12.Barry, G., llepple, M., l,eslie, N. and Morrill, G.
1991.
'Proof ligures and structm:al operators for eategorial8For example,  we might  seek Lo ex~.cnd the ln'oof just givenby abstract ing over z in a \[ l I\] inference, as a basis for add ing in aflu'thor quantif ier,  but  the cur rm~ proof  label would not licensesuch an inference, due to the presence of the 0 i appl ication.grammar'.
Ill P'lvc.
of t3ACL-5, Berlin.vm, l~cnthcm, 3.
1983.
'The semantics of variety inCatcgorial Grammar.'
R.cport 83-29, Dept.
of Math-mnatics, Simon Fraser University.
Also in W. Busz-kowski, W. Marciszewski an<l J. van llenthem (Eds),Catcgorial Grammar, Vol.
25, Linguistic and MtcraryStudies ill Eastern F, urope, John Benjamins.
1988.Benton, N., lfierman, G., dc Paiva, V. & tIyland, M.1992, "Ihrm a~ssignment forintuitionistic linear logic.
'Tedmical Report, Cambridge University ComputerLaboratory.Buszkowski, W. 1987.
'The Logic of Types.'
In J.Srzednicki (Ed), Initiatives iu Logic, Martinns Ni-jhoff Publishers, l)ordrecht.Gabbay, 1).
1991.
Labelled deduclivc syslems.
Draft1991.
(to appear: Oxford University Press).11epple, M. 1990.
The Grammar and Processing of Or-de'r and Dependency: A Categorial Approach.
Ph.1).dissertation, (~entre for Cognitive Science, Universityof l!klinbnrgh.l\[oward, W.A.
1!)69.
'The formulae-as-types notion ofconstruction.'
In ./.l{.
\[\[indley & J.P. Seldin (Eds),7b II.lL Cuv~'y, Essays on (2ombiuatory Logic, LambdaCalculus and l,brmalism, AP, 1980.Josh\, A.K., Vijay-Shanker, K. & Vgeir, D. 1991.
'Theconvergence, of mihtly context-sensitive formalisms'.In P. Sells, S. Shiebor & T. Wasow (Eds.)
l,'ounda-ZioTzal issues in Nal'~lral Lauguage Processing.
M1TI}ress, Canll)ridge MA.Lambeth, J.
1958.
"t'he mathelnatics of sentence struc-ture.'
Americau Mathcmalical Monlhly, 65.Moortgat, M. 1988.
Calegorial Investigations: Logicaland Liuguislic Aspects of lhe Lambck Calculus, For\s,Dordrecht.Moortgat, M. 1990.
'The quantification calculus.'
InlIendriks, 1\[.
and Moortgat, M. (Eds), Theory ofl;'le~:ible Inlerprelalion.
Esprit DYANA DeliverableR.I.2.A, lnstitul;e for l,anguage, l ogic and Informa-tion, Univ<~rsity of Amsterdam.Moortgat, C.
l!)91.
'Generalized Quantification andDiscontinuous type constructors'.
To appear: W.SijI;sm~t & A. van I lorck (li',ds) Poor.
Tilbury Sympooslum on I)iscoTdinuolts Uouslilucncy.
l)e Gruyter.Morrill, (.;.
1992.
'Cat;egorial l)'ormalisation of ILela-rio\sat\on: l'ied Piping, Islands and Extraction Sites.
'Research l(.eport, l)ept, de Lhmguatges i Sistemes In-formgtties, Universitat Politdcniea de Catalunya.Morrill, G. & Sol\as, M.T.
1993.
"lhlples, I)iscontinu-ity, and Clapping in Categorial Grammar.'
In: Proc.of ?
'ACI; 6, Utrecht.t/x)orda., 1).
1991. lgesource Logics: Proof Theorelicalhzves~igalions.
Ph.l).
Dissertation, Amsterdam.Versmissen, I?.
1991.
'l)iscontinuous type construe-to ts  ill ( )aLegor ia l  ( \ ] ran l i l l a r . '
ins .
Or\] 'S,  UniversiteitUtrecht, Netherlands.Wansing, W. 1990.
q!
'ormulas-as-types for a hierar-chy of sublogies of Intuition\stir Propositional Logic.'ms.
lnstitnt fiir Philosol)hie , Freie Universitgt Berlin.1239
