A MACHINE TRANSLATION SYSTEM FROM JAPANESE INTO ENGLISH-- ANOTHER PERSPECTIVE OF MT SYSTEMS --M. Nagao, J. Tsujii, K. Mitamura, H. Hirakawa, M. KumeDepartment of Electrical EngineeringKyoto UniversitySakyo, Kyoto, 606, JAPANSummaryA machine translation system from Japanese intoEnglish is described.
The system aims at trans-lation of computer manuals, and basically followsto the transfer approach.
The design principlesof the system are discussed in detail, togetherwith the overall constructions of the system.Especially, the effectiveness of lexicon-basedprocedures, i.e.
lexicon-based analysis, trans-fer, and synthesis, is emphasized.
Most of thelinguistic phenomena are treated by using lexicaldescriptions and lexical rules, instead of bygeneral syntactic rules.
Because Japanese andEnglish belong to quite different languagefamilies, much more structural transfers arenecessary than in other MT systems among Europeanlanguages.
Special cares have been paid fordesigning the transfer component.
Some trans-lation results are also given to illustrate thecurrent abilities of the system.i.
IntroductionThis paper is the first progress report of amachine translation system from Japanese intoEnglish being developed at Kyoto University.The project currently aims at the translation ofcomputer manuals, in which vocabulary is ratherlimited and less ambiguous than in other subjectfields.
However, this system is a good exampleof MTsvste~swhose SL's and TL's belong to quitedifferent language families, in which a lot ofinteresting problems have arisen that have beenconcealed in the systems whose language pairsare rather close in language families.
We willdiscuss in the paper some of the design princi-ples without referring to the detailed linguisticphenomena.The system has been implemented on FACOM M-200(Kyoto University Computing Center) mostly byLISP.
Only exception is the morphologicalanalysis of Japanese, which is done by PL/iprogram.The system basically follows to 'transferapproach' advocated by several other groups suchas TAUM, GETAetc.
(1) The overall system consistsof the three major components; Japanese analysis~transfer, and English synthesis components ssshown in Fig.
i.
The system is based on severalguiding principles.
Among these, the followingswould distinguish our system from the other MTsystems.i.
It is highly lexicon-driven.
Every compo-nent including analysis, transfer and synthesiscomponents is highly dependent on lixical de-scriptions of individual words.
In other words,most of the linguistic phenomena are treated bylexical descriptions and lexical rules, insteadof general syntactic rules such as 'structuredependent rules'in Chomskian grammar.
We complete-ly agree with J. Bresnan, an MIT linguist, when sheclaimed as follows: (2)'Finally, I assume that it is easier for usto look something up than it is to computeit.
It does in fact appear that our lexicalcapacity -- the long-term capability toremember lexical information -- is verylarge.'2.
The approach becomes closer to the inter-lingual approach.
Because Japanese structurescan be adequately captured by dependency struc-tures based on case notions, we adopted thisstructure as the intermediate representation forJapanese.
On the other hand, the structuresfrom which synthesis of English will start areordinary phrase structures.
It is well knownthat dependency structures require semanticallydeeper analyses than usual phrase structures.Therefore, our approach becomes closer to theinterlingual approach, and even undistinguish-able with it in some cases.
Especially, becausethe two languages have quite different systemsfor expressing tenses, modals, aspects etc.,these expressions are analyzed into much deeperlevels, that is, almost the i~terlingu~llevel.Considering the fact that the two languagesbelong to quite different language families, ourapproach seems to be inevitable.3.
Stereotyped or semi-stereotyped expressionsfound in computer manuals are effectively uti-lized.
Stereotyped expressions here mean notonly idioms in a usual sense, but also certainstylistic prototypes which can often be foundin manuals.
Special cares have been taken toutilize them effectively in our system.JIS .l I v I Transfer\] ~ EISJapanese ~ ~ EnglishAnalysis \['~_J ~_J \[ SynthesisJapanese EnglishSentence SentenceJIS : Japanese Intermediate Structure(Dependency Structure Based on Cases)EIS : English Intermediate Structure(Phrase Structure Tree)AD : Analysis Dictionary for JapaneseBD : Bilingual DictionarySD : Synthesis Dictionary for EnglishFig.
i Overall Construction of the MT System4142.
Japanese Sentence AnalysisThe analysis proceeds as follows:i. morphological analysis2.3.4.5.segmentation of an input sentence intoa set of simple sentence fragments (eachfragment contains only one predicativeterm such as verb, predicative adjective,copula, etc.
)recognition of relationships amongsentence fragmentsnoun phrase analysis ~ performedsimple sentence analysisJ intermixedlyBecause Japanese is a typical agglutinativelanguage, many useful sorts of information canbe obtained by morphological analysis, It isundoubtedly true in both cases, Japanese analysisand other European language analysis, typicallyin English analysis, that morphological andsyntactic analyses should work co-operatively.However, the co-operation should be done indifferent ways.
Generally speaking, Englishmorphological analysis needs much help from itssyntactic analysis.
English homograms can rare-ly be resolved by intra-word processings.Therefore, morphological analysis alone willproduce highly ambiguous results in English.Syntactic and even semantic information is re-quired to resolve them.
On the contrary,Japanese morphological analysis offers much helpto its syntactic analysis.
This implies thatJapanese morphological analysis can be done in aseparate phase with syntactic and other succeed-ing processings.Because Japanese morphological analysis is close-ly related to both the writing system and detail-ed word inflection rules of Japanese, we shallomit the discussion of this phase, only notingthat certain composite expressions are treatedin our system as single morphemes.
Some examplesare shown in Fig.
2.
A detailed discussion aboutthis phase can be found in \[5 \].~ m ~ ~ ~ ~ ~' (nakerabanaranai)\[ordinary ~x ~" ;z ~-: $ ~x ~"segmentation\] (nai) + (ba) + (naru) + (nai)auxiliary verb /con junet~ ver~auxi l iary  verb ~for negation postposition for negation\[our system\] ' ~ ~ ~ ~ ~ 6 ~ ~" is treated as a singlemorpheme (post-verbial suffix -see 2-2) whichexpresse the modality 'OBLIGATORY'.N~-~ ~ (wotsukatte)\[ordinary * f~ )segmentation\] (7) + (t.sukau)~ + (t;)case suffix verb suffix for(to use)  sentence-conjunction\[our system\] , ~ ~o ~, is treated as a single morpheme(case suffix) for INSTRument.Fig.
2 Examples of Composite Morphemes2-1.
Lexicon Based Analysis Procedure forJapaneseIn order to discuss the other analysis steps, wehave to mention certain syntactic aspects ofJapanese.
Among those, it should be noted thatcase relationships between noun phrases and verbsare usually marked by case suffixes attached tonoun phrases.
An example is shown in Fig.
3.~ h. v ~ 7~,  ~- ~ -~ ~ U~r  ~oIcase suffix: r ga de woWnoun : noun : noun : verb :user  program data to modifymeaning  : (The) user modifies (the) data by (a) program.Note : ~(ga) ,  %"(de), and ~(wo) are the casesuffixes.
In Japanese, noun phrases whichbear some grammatical relationships with a verbalways precede the verb in a surface sentence.Fig.
3 Case Suffixes in Japanese~(ga)  usually marks AGENTIVE, ~(wo) OBJECTIVEand %~(de) INSTRUMENTAL cases, respectively.However, this direct correspondence betweensurface case suffixes and deep cases may not bepreserved in actual sentences.
In other words,case suffixes indicate only surface grammaticalrelationships between noun phrases and a verb,and these grammatical relationships may notcoincide with deep semantic cases.
We shoulddistinguish them carefully, as C. Fillmore didin English.
He tried to set up general rules torelate deep cases with surface grammaticalrelationships in English.
Unfortunately, hismodel is based on generating sentences and givesus no clue as to how to parse them.
Moreover,we observed that, at least in Japanese, thissurface and deep correspondence i smore  or lessspecific to individual verbs.
The same phenomenahave been observed in English by J. Bresnan andother linguists.
(2)They have treated these phe-nomena by setting up 'lexical interpretationrules' which are specific to individual verbs,and which translate the surface grammaticalstructures into deep semantic ones.
Fromcomputational view points, this fremework leadsus to lexicon-based analysis procedures.
Insteadof general syntactic rules, we describe specificsurface-deep mappings for individual verbs inthe analysis dictionary, as shown in Fig.
4.One of the main purposes to establish transfor-mation rules was to relate surface structureswith deep ones by the rules.
In our framework,most of this task is done by surface-deep mapp-ings described in the dictionary.
Therefore, asimple pattern matching is sufficient to analyzesentence fragments, that contain only one verb.However, there still remain certain sets oftransformations which seem not to be wellcaptured by the surface-deep mappings of indi-vidual verbs.
We also treat them as lexicalrules.
We will discuss this point in the nextsection.- 415-I(to moai fy)sur face pat tern  :i ~, 2 ~ 3(ga) (de) (wo)deep s t ructure  :(* MODIFY  (AGENT (1)) ( INST (2)) (OBJ  (3 ) ) )In the actua l  inp lementat ion ,sets of semant ic  res t r i c t ion  aredescr ibed  here.Fig.
4 A Sur face~Deep Mapp ing2-2.
T rans format ions  as Lex ica l  Ru lesT rans format ions  t reated  by our  sys tem can bec lass i f ied  in to  the fo l low ing  categor ies  (Not icethat we use here  the te rm ' t rans format ions '  in ab roader  sense  than in t rad i t iona l  TG.
And  a lsonot i ce  that,  though ' scrambl ing '  operat ions  arevery  consp icuous  in Japanese  wh ich  are app l ieda f te r  t rans format ion  cyc les  in t rad i t iona l  TG's ,we do not  cons ider  them as t rans format ions  here ,because  they can be embod ied  in pat tern  match ingoperat ions ,  i .e .
,  pat te rn  match ings  w i thoutcons ider ing  orders  of e lements ) ,i. T rans format ions  dependent  on a set ofspec i f ied  case e lements  (Fig.
5, Ex.
i) : Thesecor respond to the F i l lmore 's  examples ,  ' Johnbroke  the w indow wi th  a hammer , '  'A Hammer  brokethe w indow, '  'The w indow broke '2.
T rans format ions  caused  by  adverb ia lsu f f i xes  (Fig.
5, Ex.
2) : As shown in Ex.
2, acase su f f i x  can be rep laced  by  an adverb ia lsuf f ix .
Care fu l  invest igat ion  revea ls  that  acer ta in  c lass  of case su f f i xes  can be rep lacedby an adverb ia l  su f f i x  w i thout  any t races  (TSPI,TSP2 in Ex.
2) and another  c lass  of case su f f i xescannot  be, but  just  be fo l lwed by an adverb ia lsu f f i x  (TSP3 in  Ex.2) .
In fact ,  a Re la t iveo rder ing  of case su f f i xes  ex is ts  and h igher  casesu f f i xes  in the order ing  can eas i ly  be rep lacedw i th  an adverb ia l  su f f i x  w i thout  any  sur facet races.
Moreover ,  th is  re la t ive  o rder ing  ofcase su f f i xes  depends  on ind iv idua l  verbs ,depend ing  on how in t imate  a re la t ionsh ip  theconcept  expressed  by  each noun phrase  bears  tothe ac t ion  expressed  by the verb.
We may be ab leto capture  this in t imacy  h ie rarchy  by  set t ing  upsevera l  d i f fe rent  leve ls  of connect ions  betweennoun phrases  and verbs ,  as Chomsky  does in h isX - theory~3)However ,  f rom computat iona l  v iewpo ints ,  espec ia l l y  f rom recogn i t ion  v iew points ,it is conven ient  to mark  in each sur face  pat ternwhat  o rder ing  ex is ts  and wh ich  case su f f i xes  canbe rep laced  by  wh ich  adverb ia l  su f f ixes .3.
T rans format ions  caused by  post -verb ia lexpress ions  (Fig.
5, Ex.
3) : Pos t -verb ia lexpress ions  a l so  cause  sur face  pat tern  t rans for -mat ions .
These  express ions  spec i fy  tenses,ssP : Standard Surface PatternTSP : Transformed Surface PatternC>Ex.i (Specified Case Elements)I SP : ~ U ~  ~L ~-  9"9  ~ -e ~- -~ ~ ~ ~o ,, user (~) program ~de) data ~wo) modify \[(The) user modifies (the) data by (the) pr~ram.\]program (~_a) data (wo) modify\[ (The) program modifies (the~data.
\]~>Ex.
2 ('Adverbial Suffixes)I SP : Same as Ex .
l  SPI: ~l J f f l~  ~ 1 ' -  ~ ~ ~" -~'~-~, ~ ~ i t  -~,o user (m~ program ~de) data ~w0) modify \[ ~T_h_el_us_e !
also modifies ( th~ data by (the)-~ro~ram.
\]ITSP2: ~ljm ~ ~ 7* ,, 9 ~ 9 ~ SZ_ ~" ~' ~-  ~iE-~ ~ouser (ga) program (de) data (mo) modify\[(The) us~ also modifies ( th~ data by (the~'program.\]LTSP3: ~i\]m ~ ~_j ~-  ~ 9 ~ -~ .~.
- - -n~- -  ~ _~.
~iE'4 ~ a,ouser (~) program (de-too) data (w o) modify\[(The) user also modifies (the) data by_~the)_program.\]Note : 6 (too) i s  an Ad~erh~ll Suffixes.~> Ex.
3 (Post-Verhial Expressions)TSSP : Same as Ex.lprogram (de) data (~.a) to modify\[(The) data is modified by (the) program.\]* The post-verblal expression ' ~ ~ ~ ' changes the aspectualfeature of 'modify' from 'ACTION' into 'STATE'.Note : Th0~gh the same case elements appear in this Japanesesentence as in TSP in Ex.l, passive construction shouldhe chosen in this case because English passives alsochange the aspectual feature of the verb.TSSP : Same as Ex.lprogram (de)" data  ~)  modify\[(The) data is  modi f ied by the orogram.\ ]* The post -verb ia l  express ion  '~  ~ ' changes the vo ice  ofthe sentence from 'ACTIVE' into 'PASSIVE'.~> Ex.4 (Verbal Complement)SSP : ~ ~ ~ t ~, .~_ .~, ~ ,~he ~K~) be right.
(to) believesententlal -~comp lement izercomplement\[ (Someone) believes that he is right.
\]LTSP : ~ ~ \]E b ~, _~_ .E', i ohe (w o) lbe rightl(tO) believeverhal -~c omp lement i z ercomplement\[ (Someone) believes him to be right.
\]Note : The case suffix 'h, (ga)) in SSP shows that 'he' hasthe direct grammatical relationship 'SUBJECT' with thecomplement 'be right'.
On the other hand, '% (wo)' inTSP shows that 'he' has the grammatical relationshipwith the main verb 'believe', but should be semanticallyinterpreted in relation to the verbal complement 'beright'.
This interpretation rule is described in theverb dictionary for '.~,, ) -to believe'.
"~> Ex.5 (Relative Clause)-SSP : Samz.
as Ex.lTSPi: ~J~ ~ ~!
~N!~ ~ ~user  ~ modify data\[(The) data which (the) user  mod i f ies \ ]TSP2: ~- ~ ~ ~iE~r ~ ~JNq~data (wo) modify user\[(The) user who modifies (the) data\]?TSP3: ~\]~.~.
~, ~'- ~' % ~?-~- .~ ~.
~ '~ ~user  (ga) data  (wo) modify program\[(The) program by which ~he)  user  mod i f ies  ( the)  data\ ].TSP4: ~,j~ ~.
~ ~ ~ ~- -user (no) modify data\[(The) data which (the) user modifies\]Note : TSP4 expresses the same as TSPi.
However.
the casesuffix ~ ~, (ga) ' is changed into ' ~ (no) ' This phenomenais observed only in a relativized construction.Fig.
5 T rans formed Pat terns~416aspects, models, and voices of sentences.
We nowhave about 50 such post-verbial expressions.Some of them are shown in Table I, in which *indicates the expression causes transformations.Notice that, though both the post-verbial expres-sions 'Z t 0"~'i"@$ ' and '~".~' give the modality'POSSIBLE' to the sentences, only '~"@$ ' changesthe surface patterns.
Also notice that active-passive transformations in Japanese are includedin this category.~ ~ (tearu)  IASPECT ACT ION e STATE-2~, ~ (te iru)  I ASPECT ACT ION 9 STATE,  PROGRESSIVE~ t,, c ,~, ~ MODAL POSSIBLE.
(kotogadek i ru )e ~ i~ (dekiru)  MODAl.
POSS IBLE~ ?
(reru) VOICE  ACT IVE  ~ PASS IVEI~7 ~t ~ (rareru)  VOICE  ACT IVE  ~ PASS IVEIt tl iz ~ ?.
~ ~.
MODAL OBL IGATORY(nakerebanarana i )"~ I~ ~' Ir ~; ~, MODAL : PROHIB IT ION ( tewa ikena i )~ ix ~ : .
~ ~, MODAL : OBL IGATORY (aebanarana i )t~ ,.
(tal) PERFOMATIVE  : DES IRE  (to want)~I~, ~ ~, 3, ~ MODAL : NECESSITY(hit suyougaaru)-c ?
~, ( teyoi)  MODAL : PERMISS ION-?
J:~ < (teoku) ASPECT : ACT ION ~ STATE-2Table 1 Examples of Post-Verbial Suffixes4.
Transformations caused by verbal comple-ments (Fig.
5, Ex.
4) : A certain class ofJapanese verbs require verbal complements, asEnglish verbs 'promiss', 'expect', 'believe','want' etc.
As shown in Ex.
4, certain nounphrases, which bear grammatical relationships tosuch verbs, should he semantically interpretedi~ relation to the verbs in the verbal comple-ments.
In the standard theory of TG, thesephenomena were also treated by general transfor-mation rules such as raising transformations.5.
Transformations in relative clauses (Fig.5, Ex.5) : Relativization in English is atypicalconstruction which can be adequately explainedby structure dependent transformations such aswh-movement rules.
However, a relativizedconstruction in Japanese causes not only nounphrase movement but also the other surface trans-formations as shown in TSP4 of Ex.
5.
Moreover,the noun phrases which can be moved are thephrases that are followed by particular casesuffixes in the surface patterns.
That is, whichnoun phrases can be moved is dependent on thecase suffixes in the surface patterns, and,therefore, dependent on individual verbs.6.
General Transformations : Cleftedconstructions, for example, also appear inJapanese.Because the t rans format ions  in the above aremore or less dependent on individual verbs whichgovern the transformed structures, we treat themby lexical rules, i.e., we assume that trans-formations of surface patterns have been donebeforehand, and that the transformed patternsare also stored in the individual verb entriesin the analysis dictionary.In the conventional approaches, there are a setof general transformational rules, which will beinversely applied in turn to input sentences,in order to obtain appropriate 'deep' structures.It has been well known that this inverse applica-tion of rules results in combinatorial prolifera-tion of possible structures, partly because suchrules are not general rules and only applicableto specific classes of verbs.
(consider 'promisshim to go' and 'want him to go' example).Our approach is to avoid such inverse applica-tions of general rules.
We regard most of trans-formation rules as word specific, and assume thatpre-applied, already transformed patterns arestored in the individual verb dictionaries.
Theschematic view of our analysis procedure is shownin Fig.
6.
During the analysis, it only Selectsappropriate surface patterns (transformed or not)from the dictionary and matches them with theinput sentences.
You may object to us that sucha configuration requires a large memory space forthe dictionary.
However, it is possible to re-duce the dictionary size by using macro expres-sions, if you can classify verbs and decide whichtransformations are applicable to which verbclasses.
These macro expressions will be expand-ed when the dictionary entries containing themacros are retrieved.
When you find a spcificverb behaves quite differently from others, youcan specify both its surface patterns and trans-formed patterns directly in the dictionary with-out using macros.
Our approach is: First, weassume that every verb is specific , and excep-tional, i.e,, it has its own usages and trans-formed usages and, if we can find some classesof verbs which behave in the same way, then itis possible to generalize them by using macros.GeneralSyntacticAnalysisProcedure Pattern MatchingInput SentenceSelection ofAppropriateSurface I"patterns Analysis~ Dictionaryfo r  Ind iv idua l~4ordsFig.
6 Schematic View of the Analysisof a Sentence FragmentIn the current version of our system, transfor-mations i, 2, 3, 4, and 5 can be analyzed.
Thatis, dictionary descriptions for them are pre-pared (However, because our system is an experi-mental prototype, the dictionary contains onlyabout 80 verbs).The information for i, 2 and 4 is directly codedin the surface patterns.
Various transformedpatterns for 1 and 4 are stored in the diction-ary.
As for 2, information as to which one canbe replaced by adverbial suffixes are indicatedin each surface pattern.
As for 3 and 5, eachtransformed patterns is accompanied with themarkers that indicate when the patterns should- 417-be used (See 2-3).2-3.
Selection of Surface PatternsAs described at the beginning of this chapter,the analysis proceeds in the sequence such asmorphological analysis, segmentation of asentence, recognition of relationships amongsentence fragments,and finally, simple sentenceand noun phrase analyses.
The analysis of simplesentences, the last step, is done by patternmatchings.
In this section, we will discuss howto select appropriate (transformed) surfacepatterns.At the second step of the analysis, the segmen-tation step, the input sentence is divided intoseveral sentence fragments so that each of themcontains only one predicative term.
At the sametime, post-verbial suffixes which fol low thepredicative terms are processed, and the appro-priate markers of tenses, aspects, medals, andvoices are selected.
Moreover, if the suffixesare the ones which cause transformations, theappropriate surface patterns are selected.
Thisselection process is performed in the way similarto Rieger's word exper parser (6) (Fig.
7).nY\  lexico lexicon*?
,iminat i .
.
.
.
t Irransf?r I ITransfer \]fur surface-deep I.t~e voice_marker \ [ I the  aspect marker /mappings I?PASSlVEi and \] I'STATIC' and |p~ 0 line mapping s e let- l Ithe mapping selec-IIf P tion marker cgmes--in l:olOn marker ~ i Ito // I t .e  preceding I / the preceding |\[verb box~ I 1, verb box |tcumes in -  1Selected IMappings of (VOICe= PASSIVE) ~Surface to Deep.
.
.
.
.
I(ASPECT = STATIC) IF ig .
7 Se lec t ion  of  Appropr ia te  S-D (Sur face -Deep Mappings) Tab les  fo r  Pos t -Verb ia lSu f f i xesThe th i rd  s tep  i s  to recogn ize  the  g loba l  s t ruc -tu re  of  the input  sentence .
The re la t ivec lauses ,  c le f ted  sentences ,  con junct ions  ofsentence~ etc.
are recognized at this step, byutilizing the inflection information of eachpredicative term in the sentence.
Generallyspeaking, several numbers of global structuresare produced for an input sentence.
Fig.
8O ViNPi Q V2NP2 Q V3'Input sentence: --~ ~--Verbs with inflection furms forrelative constructions.GPTi : MS Predicate"/ /p ra?
icat~od i f ied  Noun PT .....NP2~Pred icate - '~ ' - - -M~i f ied  Noun Phrase(.9 'v I Np,  rr entonce 1| RC : Relative Construc-\]\[ tion \] GPT2 : MS~ /  ~ - ~  PredicateR~ RC ~ V./ \ \Mod i f ied  "Note : GPTi and GPT2 represent different global structure forthe same input.
In CPTi, the first relative clause is embeddedin the second.
In GPT2, on the other hand, both the two rela-tive clauses are embedded in the main sentence.Fig.
8 GPT's Which Correpond to the SameInflection Patternshows such an example.
The global structure isrepresented by a tree called GPT (Global PlanTree), whiGh guides the succeeding analyses,That is, a node of GPT indicates what kind oftransformed patterns should be used to analyzethe corresponding fragment, and in what oder.A certain class of transformations can be ap-plied, whenever certain syntactic constructionsare found.
They do not depend on individualverbs.
In relativized constructions, forexample, the case suffix '~' (ga) can beoptionally replaced with the other suffix '~ '(no).
(Fig.
5, TSP4 in Ex.
5).
This rule isnot dependent on individual verbs, and moreover,it is not dependent on deep cases.
The rule isconsidered as 'structure dependent'.
Becausea GPT explicitly indicates by RC nodes whererelativized constructions appear, the analysisprogram transforms the patterns in the diction-ary into appropriate forms, when it analyzesfragments governed by a RC node, that is, ifa pattern in the dictionary contains the suffix'~' (ga), the program automatically generatesthe transformed patterns.
Such structuredependent rules are also found in sentenceconjunctions, that are similar to the gappingrules in English (sentence conjunctions cannotbe analyzed by the current system from the otherreasons.
We are now designing the proceduresfor sentence conjunctions).Because of space considerations we completelyomitted the discussions about the noun phraseanalysis, the semantic aspects of the processing,the analysis of tenses, medals, aspects and someother troublesome expressions such as adverbialmodifiers in Japanese etc.
The detaileddiscussions are found in (5).-4183.
Transfer StepThe transfer is also guided by a lexicon as theanalysis procedure is, -- in this case, by thebi-l ingual dictionary.
We will first describethe two structures over which the transfer phasebridges, ~.e.
intermediate structures forJapanese and English.3-1.
Japanese Intermediate St ructures - - J iSJapanese intermediate structures produced by theanalysis component are basically dependencystructures of input sentences, based on casenotions.
As a usual dependency structure, eachnode is not labelled by a category symbol likeNP, VP, PP etc., but by a word.
The word attach-ed to a node is an intermediate word which hasa unique entry in the bi-l ingual dictionary.It may happen that a single Japanese surface wordcorresponds to multiple entries in the bi-l ingualdictionary.
In these cases, the disambiguationamong them is to be done during the analysisphase.
However, it may also happen that, duringthe transfer phase, a single intermediate wordshould be mapped into several different Englishwords.Though we claimed that nodes in a JIS was label-ed only by an intermediate word that correspond-ed to a surface Japanese word, there are someexceptions.
In order to remedy computationaldefects of dependency structures, we introducethe other kinds of nodes which do not directlycorrespond to surface words, but to certainsyntactic constructions in Japanese (we call suchkinds of nodes 'relation descriptors').
In thissense, our JIS is a mixed form of dependencystructures and phrase structures.
In principle,our intermediate structures are organized insuch a way that a governing node can alwaysdetermine how to arrange the transferred sub-structures of its dependents.
As will bedescribed in 3-3, a JIS will be evaluatedrecursively, and the corresponding Englishi~termediate structure wil l  be built up fromthe bottoms (See Fig.
9).The transfer prOcedure for this node arrangesIthe transfer results of the lower level into~single ElS's, and return them to the higher~llevel.JISJfi /\\Fig.
9!
!Possible EIS's Possible EIS'sGenera l  View of  the  J IS -E iS  T rans ferIn a dependency structure, a noun phrase modi-fied by a relative clause is usually representedby a structure like Fig.
10-(1).However, thisstructure expresses only implicitly the relation-ship between the head noun and the modifyingclause (* indicates the head noun).
(The data which is modified by the user)(i) Ordinary Dependency Structuredata~- - -~| S-MOP \~di fy~og "-juser * data(2) JIS of our systemREL-CON-iHead N o ~ d i f y i n g  Clausedata~ A C ~ N T ~ J  .user *(data)Note : Actually, the node label REL-CON-1 has a uniqueentry in the Bi-lingual dictionary, which contains the'transfer procedure' that is responsible for transferringJapanese relative constructions of type 1 into corre-spondlng English ones.Fig.
I0 Comparison of an Ordinary DependencyStructure and JISTree traversing rules would be necessary torecognize that an embedded relative clauseexists.
Moreover, it is always difficult todetermine when to invoke such structure recogni-tion rules, and how to transfer such syntacticstructures in the source language into theircorrespondences in the target.
In our JIS,suchasyntact ic  construction is also explicit-ly marked by 22 node REL-CON-I in Fig.
10-(2).
(Relative clauses in Japanese are subclassifiedinto four different types, according to therelationships between the modified noun and therole which it plays in the modifying clause.Only three of these have direct correspondingrelative clause constructions in English).Table 2 shows examples of node labels used inJIS.node label role node label'role node label roleINST REASON sentence V-MOD modifierPURPOSE CAUSE connect- for verbsLOC-i ~xtrinslc TIME-SEQ ives S-MOD modifierTIME-1 zases QUALIFY noun for sent.QUANTIFY modifler CAUSATIVE: REL-CON-i relative surfacei CAUSE : I const.
~ordsTable 2 Typical Node Labels Usedin JISAnother comment would be necessary on caserepresentation.
Many researchers agree thatcases are useful in describing linguisticstructures, especially semantics of sentences.However, no two agree with each other as towhat is the complete set of cases.
Our approachis very pragmatic and highly oriented to machinetranslation.
We don't have a 'complete' set- -419--of cases in any sense.
We always have only atentative set.
If we observe something wrong,we are ready to revise the current set of cases.Moreover, the definition of each case is highlydependent on individual verbs.
As discussed in(4 ) ,  we divide the cases into two types (thisclassification is also dependent on individualverbs).
One is the type of cases which areintrinsic to the verb.
As to the intrinsic cases,the mappings from Japanese surface to JIS rela-tions are specified in the analysis dictionary,and moreover, the mappings from JIS relations toEIS structures are described in the bi-lingualdictionary (see Fig.
ii).
To put it in anotherway, Japanese surface structures that expressthese cases are mapped into correspondingEnglish structures by the lexical rules in thetwo dictionaries.
There are no general ruleswhich refer to general case notions.JIS-to-EIS mappingrule is specifiedin the dictionaryJIS for ' ~ r  ~ '(to modify)AGENT~OBJ  NP VPmodifyFig.
ii Structural Transfer for VerbsThe other type of cases, called extrinsic type,is treated differently.
For this type of cases,general rules are prepared to transfer them.These rules are independently formulated ofindividual verbs and show how to express thedeep cases in English.
Therefore, in contrastto the intrinsic cases, the cases of this typeare explicitly expressed by nodes in JIS's (seeFig.
12.)
These case labels have their ownentries in the bi-lingual dictionary, in whichrules for selecting appropriate prepositionsare described,~ $ This part is not containedpp~ in the v~rb dictionary ji~  ~ ~ ~ ~ by 3OBJ~ C ~ pp J AGENTl i i with 3JThis selection rule is specified in thedictionary for the extrinsic case INST.The rule generally selects an appropriateEnglish preposition, depending on thenoun fitted in 3.Fig.
12 JIS-EIS mapping for Extrinsic Cases3-2.
English Intermediate Structure -- EISThe EIS's are similar to conventional phrasestructures.
The main difference is that; eachnode in the tree is characterized not only by acategory symbol like S, NP, VP, etc., but also bya set of attribute - value pairs.
EIS playsalmost the same role of 'starting phrase struc-ture' in Chomsky.
Successive transformations areapplied cyclically on this structure'during theEnglish synthesis.
However, the transformationcomponent in our system includes a set of ruleswhich are not 'structure dependent' and, there-fore, not considered as 'transformation' in TG'ssense.
For example, passivized constructions aregenerated not through transformations in Chomsky'scurrent framework, but they are considered asbase-generated.
In our system, however, theyshould be treated during English synthesis phase,whether they are structure dependent or not.
Themain purpose of transformations in the Englishsynthesis is to generate adequate English surfacestructures from 'Japanese-generated' structures,instead of 'base-generated' ones.
Passivizationtransformation, for example, is indispensable inour system, because it is common in Japanese tostate sentences in active voice without any agents.In order to support such transformations, infor-mation other than syntactic categories and struc-tures is necessary.
They are expressed in EIS'sas a set of attribute-value pairs attached to anode.3-3.
The Transfer ProcedureThe general algorithm for the transfer phasechanges a given JIS into the corresponding EISby 'evaluating' the nodes in the JIS recursively.Each JIS node is labelled by an intermediate wordof Japanese which has a unique entry in the bi-lingual dictionary.
The description in thedictionary contains a set of transfer procedureswhich show how to transfer the JIS substructureswhose roots are the entry word.
Each trans?erprocedure may be accompanied with a set ofpreconditions, if necessary.
These preconditionsare expressed by user defined LISP functions toexamine the surrounding JIS as to whether thetransfer procedure is appropriate or not.
Somebuilt-in LISP functions are provided to facili-tate encoding these preconditions.
If a JISword has several English equivalents (i.e.
itis po lysemy relative to English), these pre-conditions are used to choose an appropriate one.Though deep semantic checking should be perform-ed in this precondition part in more advancedsystems, this part is currently used to examinecertain syntactic environments or simple semanticmarkers.A transfer procedure usually works as follows:(i) A transfer procedure defined for a governingword (verb, relation-descriptor,etc.)
will invokethe main program in order to transfer the JISsubstructures governed by the current node.
(2) When these substructure transfers are com-pleted, the transfer procedure attached to thegoverning node will arrange the substructures(in EIS) into single structures and return themto the higher level.
Because transfer procedures-420- -at the lower level generally return severalpossible EIS structures, the procedure at thehigher level selects feasible combinations andreturns them in parallel, if several combinationsare feasible.
(3) A transfer procedure for a dependent word(typically noun) will not invoke the main program,but only choose the appropriate English equiva-lents.
So the recursive process terminates.Notice that the whole process is highly lexicondriven.
Because the main program only checks thepreconditions and invokes transfer proceduresdefined in the dictionary, we can easily changeand augment the transfer step by adding newdescriptions in the dictionary.
Several stand-ard transfer procedures are provided as shown inTable 3.
Because these standard procedures areparametorized, most of Japanese intermediate wordscan be defined by supplying them with appropriateparameters.
Fig.
13 shows an example of a verbdictionary which uses the standard procedure VBi(specified in PNAME).
VBi transfers an inputJIS to the EIS as shown in Fig.
13.
Moreover,whenever we.
recognize that a certain intermediateword requires a special treatment, we can tailora transfer procedure applied only for that word,and put it in the dictionary.
This gives us aflexible framework for dealing exceptional wordsthat cannot be managed by general procedures.Generated EIS Procedure  Generated EIS i ProcedureVB-i The structures gov- COM-N Common nounsVB-2 erned by verbs NOM-i NomSnalized forms: for sentencesREL-i Type I relative QUANT-NOM quantified nounclause phrasesREL-2 Type II relative LOC-I prepositional(whose type) el.
: phrases forREL-3 Type III relative TIME-1 extrinsic cases(THAT- COMP) cl.
'C0NJ-I Conjunctive eonst.
COMPCN Sentences withfor co-ordinate sentential eomp.clauses and nouns IN-ORDER The infinitive cl.~ONJ-2 Conjunctive const.
'in order to'for subordinate TOUGH Noun phrases withclauses 'TOUGH' adjectivesTable 3 Standard Transfer Procedures Used inthe Bi-lingual DictrionaryIWARI  ATERU, c a t  .
Jo, TransferProcedure IMCHK Z ' I } \ [V ICE I  /I l l )NAME .
VBI I  ITYPE  .
S~ (S t.O TNUM .
31I SUBJ  .
I ) IOB J  , 2 I Ipp  13  .
I O I  i(SP I I .
t .
.
ASSIGN~Iq lPNAM\[  .
NOM\[ I  I I~PE  .
NP \ ]  ', oP  i 2 .
o r  i i s  .
i ~,IMCt lK  2 'REG l ( JN I222> gNPFig.
13asJign ~ io /Bi-lingual Dictionary for 'WARIATERU'(To Assign) and Its Parametorized EISWe will pick up an example to illustrate thispoint.The Japanese compound word '~- -  ' roughly means'the best in Japan', and consists of two words,B Ak (Japan) and ~ (the first or one).
Becausethe word behaves syntactically as a noun, theanalysis procedure treats it as a usual noun.
Asusual nouns in Japanese, it can be used as a nounmodifier.Fthe most beautifug(a) ~$- -~/~ > \[girl in Japan Ja single nounwhich means'the best in Japan'a single nounwhich means'beautiful girl'the same a single nounas above which means'runner'the best runnerin Japan \]The above two phrases are simply represented inJIS's as shown in Fig.
14.
However, thesephrases should be paraphrased in English.
Aspecial procedure is tailored and put in thelexicon for such a kind of words like B~q-- (thebest in Japan), ~- - ( the  best in the world) etc.
(1) JI__~ :Noun-Qualify(The best in Japan) (beaut i fu lgirl)(2) JI__s :Noun-QualifyModi f ie r~ad-N(the best in Japan)(runner)EI_S :NPDEE / / ~  PPAP P NPA 1 L APM A NL t tthe most beautiful girl in JapanNPDET NP PPAD P NPi Jthe best runner in Japan(3) Parametorized EIS for II $ (the best in Japan)NP.
.
.
.
| .
.
.
.
-~ in JapanThe modified noun (noun phrase)will be inserted here.Fig.
14 Structural Transfer for the Noun~-  -- (the Best in Japan)The procedure works as follows:i.
It checks whether the modified noun (ornoun phrase) contains an adjective or not.2.
If it contains, the procedure attaches thesuperlative indicator to the adjective.3.
If it does not, the procedure supplies tothe noun the default adjective 'good' with thesuperlative indicator.-421- -4.
It embeds the modified noun (or nounphrase) in the parametorized EIS structure asshown in Fig.
14-(3).Notice that both the superlative transformationand the 'the' attachment to the superlativeadjective will be done at the last step of theEnglish synthesis phase.4.
English SynthesiEBecause an EIS is generated directly from thecorresponding JIS, it preserves many character-istics of Japanese syntax.
In this sense, itis 'Japanese-generated' but not 'base-generated'.We should transform this structure to obtain acorrect English syntactic structure.
Japanese'wh'-questions, for example, are stated in theforms similar to their declarative ones, exceptthat wh-words are marked by special prefix words.The wh-movement rule is undoubtedly necessary toproduce correct English sentences.
Moreover,though passivization is not considered as atransformation from Lexicalists' point of view,it is indispensable in our system.
Therefore,much information other than structural matchingis necessary to determine whether the transfor-mation rule is applicable or not.4-1.
The Generation DictionaryAt the first step of the generation, the systemretrieves the lexical description of each wordin the EIS from the generation dictionary.
Thegeneration dictionary contains information suchas shown in Table 4.
It contains not only triv-ial indicators necessary for morphological syn-thesis, but also some other indicators which areexamined during the transformation process.marker meaningUN- Verbs which can notPASSIVE be used in passiveSTATE Verbs whose aspectualfeature are tSTATE t 'UNCV-ADV Adverbs mostly used TOUas verb modifiersS-ADV Adverbs mostly usedas sentence modifiersVP-TOP Adverbs usually pre- ~'~SicedinR the verbsS-TOP S-ADV adverbs which INFusually appears atJthe beginning of sent.lmarkerS-AFTOUNTGHPROPERAN~DSn~S-ADV adverbs whichusually appears at theend ol sentencesUncountable nounsTough adjectivesProper nounsThe words that beginwith vowelsThe last characters Ofthe words are 'ses'~etcThe words which hasirregular inflectionformsTable 4 Markers in the Synthesis Dictionary4-2.
Transformation RuleA transformation rule is represented in oursystem by a 9-tuple as shown in Fig.
15.
Atransformation rule is essentially a tree-to-tree mapping expressed by MP ->CP.
Each ruleis specified as either OB or OP.
OB means thatthe rule is obligatory; if the rule is applica-ble, it should be applied.
If a rule is markedas OP(tional), it may or may not be applied.At present, when an applicable optional rule isencountered, two alternative Structures withequal feasibilities will be generated.
To select(NAME COM TYPE MP BPL RP PL IAL INAL)NAME : The name of the rule.COM : Comment.
This does not have any actualeffects.
Only for later references anddebuggings.TYPE : This indicates whether the rule is obliga-tory (OB) or optional (OP).MP : Matching Pattern which shows the tree schemaon which the rule is to be applied.BPL : Procedural descriptions for checking the ap-plicability of the rule.RP : Resultant pattern which shows the transform-ed tree structure.IAL : If-applied list.
This list contains the namesof the rules that are to be applied if thisrule is successfully applied.INAL : If-not-applied llst.
This list contains thenames of the rules which are to be appliedif this rule fails.PL : Program List which contains the programswhich are applied to the transformed structureafter the rule application succeeds.Fig.
15 Format of a Transformation Rulethe most appropriate one would require, certainstylistic considerations, which is beyond ourcurrent scope.The applicability of a rule is checked not onlyby pattern-matching but also by user-definedchecking procedures specified in BPL.
Becausean MP contains several variables and the pattern-matching between MP and the current Free struc-tural binds the variables to appropriate sub-structures, these user-defined procedures caninvestigate the relationships between substruc-tures in arbitrary ways, including attributecheckings, by util izing this variable binding.The whole algorithm works cyclically from bottomto top, as usual transformations.
According tothe rule map as il lustrated in Fig.
16, trans-formation rules are applied to every cyclic node(VP, NP, S) at the lowest in a tree, then atone level higher, and so on.I' ICheck wheteher Check whetherSUBJ is nat the S is in aspecified THAT-COMP~ OB 9BINO-SUBJ-CHECK~-- -~NO-SUBJ-MANIPULATION\]~heck  ~hether\\\[ J the modality \X| / is 'POSSIBLE' \~ ~ ~ ~ ~B ' N~ OB|OPTIONAL-PASSIVE\] \[IT-POSSIBLES \[OB-PASSIVE-NO-SUBJ IIREALIZATIONI " / I "  I| IOB-PAS S IVE~ ~ Z| S - W H - M O V E M E N T ~I If the rule succeeds.
.
.
.
If the rule failsFig.
16  Rule Map for English Synthesis422The system currently has about 200 rules whichare selected from (~).
After the major trans-formation cycle is finished, English morphologicalsynthesis will begin which traverses the result-ant tree structures to generate appropriate mor-phological variants.
No special comments wouldbe necessary for this phase.5.
Concluding RemarksFig.
17. shows some examples of translation whichillustrate the current abilities of the system.As these examples show, the system can translatefairly complex sentences, though several problemsstill remain unsolved.
The distinction betweendefinite and indefinite noun phrases, for example,cannot be made by the current system, because nofixed expressions to distinguish them exist inJapanese surface sentences.
Therefore, neitherdefinite nor indefinite articles are not attachedto the English noun phrases.
Another problemis to supply appropriate elements from contextfor omitted expressions.
Especially, case ele-ments in a sentence are frequently omitted inJapanese, when they are easy to recognize fromthe context.
Though the current system tries tofind appropriate surface English words and struc-tures at the English synthesis phase which do notrequire the omitted elements, it would be inevit-able to incorporate contextual processings.
Thecurrent system works very well as an experimentalprototype.
Following to the same basic principleswith the current system, we are now designinga new and more advanced ~- -~system, in which these (i) Input Japanese ~ 0 ~ ~ ,~defects of the currentsystem will be improved.Our basic contention inthis paper is that mostof linguistic phenomenashould be treated byunderstanding systems, including the authors,em-phasized too much the importance of pragmaticknowledge.
However, one of the recent trends inthis area, which we also support, is to lay moreemphasis on the importance of syntactic process-ings, or at least, syntactic structures of sen-tences.
This attitude is, we believe, especiallyimportant for MT systems.
The various transform-ed syntactic structures described in section 2have been overlooked by the researchers of com-putational linguistics so far.
We hope that ourapproach, the lexicon based analysis procedure,provides an appropriate framework to integratesyntactic structures and operations with theother kinds of processings such as semantic andpragmatic ones.References(1)W.Hutchins : Machine Translation and Machine-Aided Translation, Jour.
of Doc., 1978(2)J.Bresnan : Realistic Transformational Gram-mar, in Linguistic Theory and PsychologicalReality, MIT Press, 1979(3)N.Chomsky : On Wh-movement, in Formal Syntax,Academic Press, 1977(4)M.Nagao et.al.
: Analysis of Japanese Sentencesby Using Sementic and Contextual Information,AJCL, Microfiche 41, 1976(5)K.Mitamura : Japanese Analysis for a MT sys-tem, MS Thesis, Kyoto Univ., 1980 (in Japanese)(6)C.Rieger : Word Expert Parsing, in Proc.
ofthe 6 th IJCAI, Tokyo, 1979(7)R. Stockwell et.al.
: The Major Syntactic Stru-ctures of English, Holt,Rinehart,& Winston,1973Result of TranslationUser  header  labe l  and  user  * ra i le r  labe |  can  be wr i t ten  out  to  sequent ia lda  %a ~ e* .lexical rules, instead ofgeneral syntactic ru les .
.z  ***This leads us to theframework called lexicon ~, I~  po6s lb le  ~o wr i te  Out  user  header  labo \ ]  and  user  t ra i le r  labe l  tobased  procedures .
Th is  seque .
* la l  d~*~ ~* .approach is not onlyfairly compatible with D D ~ ~ D S N A M E p~ 9 ~ P It.
~ w /~ ~ ~ ~ ~ b te ~ ~ .the recent trends in l in-  (2) Input Japanese ~ ~ 'J ~ ~ ~I~ la N A M E ~ ~ / ~' ~ '~ t~ ~ ~ ~f  N A Mguistics, but also gives E ~-" 9 J ~ la ~ ~ -r ~ ZZ ~ ?t ~ J, w /~ ~ ~'  ~ ~ ~ ~ ous a good framework inwhich grammars can beResult of Translation easily revised and aug-mented by modifying the ~* ***lexical description ofeach individual word, Whe.
member  name was  spec ,  f led  In  DSNAME paramelep  o f  DD .~.
ta+emeR* ,  ,'.fwithout any modifications NA"E parame%er  I s  spec  I rked  In  u t l  l i  %y cont ro l  s ta lem~nt  , member  nameof the general f ramework .spe?~,~ b~ NAME paramete~ takes  peeceda, ce .The next comment is about =z ***the relationships amongsyntactic, semantic, and When member  name was spec l  f led  I n DSNAME parameter  o f  DD ~ a  *ement  , I fpragmatic processings.
NAME paramo%er  I s  spec i f ied  |n  u t l  I I  *y  cont ro l  s ta temer~t  , member  name ~hlchAt the early stage of i s  Bpec l  f led  by  NAME parame%er  takes  pPecedance .development, the research- Fig.
17.
Translation Resultsers of natural language- - -423- -
