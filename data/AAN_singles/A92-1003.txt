AN APPROACH TO MULTILEVEL SEMANTICSFOR APPLIED SYSTEMSAlberto Lavelli Bernardo Magnini Carlo StrapparavaIRST, Istituto per la Ricerca Scientif ica e Tecnolog icaI - 38050 Povo  TN, Italye-mail: magnini@irst.
i tAbstractMultilevel semantics has been proposed as apowerful architecture for semantic analysis.
Wepropose a methodology that, while maintaining thegenerality of the multilevel approach, is able toestablish formal constraints over the possible waysto organize the level hierarchy.
More precisely, wepropose a "strong" version of the multilevelapproach in which a level can be defined if and onlyif it is possible to characterize a "meaningfulness"notion peculiar to that level.
Within such anarchitecture each level reached uring the analysiscomputes its meaningfulness value; this result isthen handled according to modalities that are peculiarto that level.The component described in this paper wasdesigned to be portable with respect to theapplication domain and so far has been tested as thesemantic analysis component of two multimedialdialog systems, ALFresco and MAIA.1.
IntroductionMultilevel semantics has been proposed \[Scha, 1983\] asa powerful architecture for semantic analysis.
In thisapproach, interpreting a natural language sentence is amulti-stage process, which starts out with a high-levelmeaning representation that reflects the semantic structure ofthe sentence rather directly.
Then translation rules, whichspecify how the language-oriented semantic primitives relateto those used at deeper levels of analysis, are applied.
One ofthe advantages of the multilevel approach is that it allows anatural decomposition of complex tasks and the functionalmodularization of semantic analysis.
However, whenmultilevel architecture is used in concrete applications, asimple functional approach does not solve the problem of aclear definition of the semantics for each level.
This fact isevident for applied systems whose semantic omponentmust deal with many linguistic phenomena (e.g.
lexical andstructural ambiguities, quantifier scoping, anaphoricalreferences, discourse topic and focus, referent retrieval, etc.
).In such systems the definition of the semantics for a levelhas at least two advantages: (i) modules for specificphenomena could be easily introduced within the appropriatelevel, provided that the module functions contribute to thedefinition of the semantics for that level; (ii) a betterunderstanding of the semantic analysis would be allowed:particularly, when a sentence is rejected at a certain level, itwould mean that the semantic onstraints for that level havebeen violated.In this paper we suggest a methodology that, whilemaintaining the generality of the multilevel approach, isable to establish formal constraints over the possible waysto organize the level hierarchy.
More precisely, we proposea "strong" version of the multilevel approach in which alevel can be defined if and only if it is possible tocharacterize a "meaningfulness" notion peculiar to that level.Within such an architecture each level reached uring theanalysis computes its meaningfulness value; this result isthen handled according to modalities that are peculiar to thatlevel.We shall show how our approach to multilevelsemantics is concretely applied to organize the semanticcomponent developed by the NLP group at IRST; thiscomponent is currently responsible for semantic analysis intwo dialog systems, ALFresco and MAIA.
At present twolevels are included in the semantic omponent and they willbe described in detail: the lexical level and the logical-interpretative level.
At the lexical level the meaningfulnessis defined by the consistency notion, which is computed bymeans of the lexical discrimination module; this moduletries to select only the sentence readings meaningful in agiven Domain Model (DM).
When the propositional contentof the sentence is proven to be consistent, the semanticrepresentation produced by this level is passed to the nextone; otherwise, if consistency cannot be proved, the wholesentence is rejected.
At the logical-interpretative level themeaningfulness is defined by means of the validity notion,which is satisfied when referents for the sentence areidentified.
Three modules interact at this level: thequantification module, which finds the correct interpretationof the quantifiers, resolving possible scoping ambiguities;the topic module, which organizes the mentioned referents;the interpretation module, which identifies the part of thesentence to extensionalize and is responsible for referentretrieval.
At this level, when validity cannot be proved, aspecial pragmatic procedure is activated.Section 2 surveys a few relevant approaches tomultilevel semantic analysis.
In Section 3 the formalrequirements for the "strong" multilevel semantics versionare introduced.
The architecture and the functional modulesof the two levels of the semantic component we havedeveloped are described in Sections 4 and 5.
Finally, Section6 deals with tile two systems in which the semantic1 7 17component has been used and Section 7 outlines somefuture developments.2.
Multilevel Semanlics AppliedOne of the first and most direct multilevel-based systemsis the BBN spoken language system \[Boisen et al, 1989\].At every level of analysis, the meaning of an input utteranceis represented as an expression of a logical language; thelanguages used at the various levels of analysis differ in thatat every level the descriptive constants are chosen so as tocorrespond to the semantic primitives assumed at that level.At the highest semantic level, the meaning of an inpututterance is represented as an expression of the English-oriented Formal Language (EFL).
The constants of EFLcorrespond to the descriptive terms of English.
Animportant feature of EFL is that descriptive constants areallowed to be ambiguous.
The logical language used at thedomain-dependent level of representation is called the WorldModel Language (WML).
This is an unambiguouslanguage, with an ordinary model-theoretic interpretation.
Itsconstants are chosen to correspond to the concepts thatconstitute the domain of discourse.
During the crossing ofthe EFL and the WML level (when domain dependentrewriting rules are called), the discrimination process iscarried out.
A type checking mechanism provides acceptanceonly for interpretations for which a domain knowledgecompatible type has been computed.
A further step oftranslation occurs when the WML is translated into DBL(DataBase Language) used to access the database to retrieveappropriate answers.While having sound theoretical foundations, the maindrawback of this approach is that it postpones emanticdiscrimination until domain knowledge is available; in themeantime, a complete sentence representation is built foreach analysis the parser produces.
However, IRUS-II \[Ayusoet al, 1989\], an applicative system also developed at BBN,confirms that in a real system it is useful to connect hediscrimination process to the parser.
It implements a rulesystem that translates each syntactic onstituent directly intoa WML form, skipping the domain independent level ofrepresentation.
While this solution improves systemefficiency, lexical discrimination is carried out by domaindependent rules in a way that limits system modularity.Another system with a clear distinction between thedomain independent and the domain dependent level isXTRA \[Allgayer et al, 19891.
However, in this case at eachlevel .the same language (i.e.
the knowledge representationlanguage SB-ONE) is used.
The domain independent level,called Functional-Semantic Structure (FSS), is intended asan intermediate structure that incorporates linguisticknowledge, substantially invariant in respect to theparticular application domain.
On the contrary, the domaindependent level, called Conceptual Knowledge Base (CKB),is necessary to adequately model the relations of theunderlying expert system.
In XTRA it is necessary that eachanalysis produced by the parser is consistent with the FSSlevel: this is achieved by means of a classification of thesentence instance with the SB-ONE mechanisms (therealizer and the matcher).
If the classification succeeds, theanalysis goes on to the CKB level, otherwise the syntacticanalysis is rejected.
In this approach the discriminatiolprocess is profitably anticipated, and a powerful (eve1though computationally expensive) consistency checkinlmechanism is provided.Both systems exploit the difference between knowledgabout the application domain and knowledge that iindependent of the particular domain (e.g., linguistiknowledge).
Although this distinction is relevant fcallowing portability to different application domains, thsemantic omponent described here focuses on the effeclthat domain dependent knowledge has on the type checkinmechanism.To make the problem clearer, let us consider ho~domain knowledg e is exploited in the systems ju~,described.
In the BBN spoken language system the typchecking is carried on by means of domain knowledge; othe other hand, within the XTRA system the discriminatioprocess is based only on domain independent knowledge.
Wthink that an effective discrimination process hould also bbased on the application domain, it being unclear how tassign a proper meaning to a sentence without having fixea particular context.
Moreover, it seems useful to considclexical discrimination as an incremental process: idiscrimination works in parallel with the parser, it ipossible to discriminate over single syntactic phrasetchecking the semantic ontent of each phrase.From the previous remarks, it can be noted that systemthat employ the multilevel semantics approach can assigthe same functionalities to different levels.
Hence, it coulbe useful trying to define the relations among each level in"stronger" way, facing the problem of coherencmaintenance.3.
Definitions of MeaningfulnessWe have seen that in a multilevel semantics approacthe main idea is to divide different functionalities intdistinct levels.
We propose a "strong" approach to suchmethodology in which for each level the definition ofsemantics is required.
This is achieved by means of thassignment of a proper meaningfulness notion that defin~the semantic behavior of the level.
In other words a level ia multilevel semantics hierarchy can be identified, if anonly if it is possible to characterize a meaningfulness noticpeculiar to that level.
We have defined theoretically suchnotion for two levels: the lexical level and logicainterpretative level (called cons is tency  and val iditrespectively).Let T be a theory of types that models our domain, lour multilevel semantics the notion of consistency is mealto demonstrate that an expression, representing tl~propositional content of a sentence, has type; i.e.
givenexpression w, it means to assign a type, if possible, toaccording to our type system.
An expression has nmeaning at the lexical evel, if the type checking fails.Validity, i.e.
the meaningfulness at interpretation levemeans to give a description of the objects of the tyl:suggested by the lexical level.
Such a description can be iterms of relations, sets or intensional expressior(mandatory for infinite denotations).
An expression has rmeaning at the logical-interpretative level if such18description cannot be found.As the meaning of a sentence is always relative to alevel in the multilevel architecture, very level manages theacceptance or the rejection of a sentence in a differentmanner.
As examples:(1) A mule paints a frescoThe components of the sentence have the followingtypes:a mule : Mule, a fresco : F resco ,to paint : Pa in ter  --9 Pa in t ing .Given the fact that "mules cannot paint" (only painterscan), the type checking mechanism fails to assign anappropriate type and this causes the meaningfulness forthelexical evel not to be satisfied.
(2) Show me a work painted by all the painters born inFlorenceSentence 2 satisfies the lexical level, but not the logical-interpretative one, because no description of the referents ofthe sentence can be proposed, i.e.
there is no paintingpainted by all the painters born in Florence.Once the functionalities of the levels are theoreticallystated, the implementative choices can be very different andsubject o criteria of portability.
Type checking can be madeusing logical formalisms such as typed ~,-calculi orintensional logics (possibly exploiting Curry-Howard'sisomorphism between typed ~.-terms and intuitionistic logic\[Hindley and Seldin, 1986\]).
The interpretation level canretrieve the referred elements using functional applicationsor some algebraic formalisms.
However, these approaches,although well founded, may not be the right ones from animplementative point of view, especially for large integratedsystems.
For example one has to define 'a priori' a theory ofadmissible types but when the domain changes, the theorydoes too.
Another way is to use a hybrid knowledgerepresentation system.
As will be clear in the next section,we refer to a terminological component (Tbox) in order toobtain the type checking and to an assertional component(Abox) in order to retrieve the relations that verify theanalyzed expression.
This choice allows us to parameterizethe type checking according to the knowledge representation.Indeed the portability of the modules encourages thisalternative.
Another possibility (to be explored) is to use adata base instead of the Abox, exploiting relational datatheories.4.
Lex ica l  Leve lThe semantic omponent (see Figure 1) interacts withboth a parser and a hybrid knowledge representation systemthat includes the domain knowledge.
As we have alreadymentioned, the semantic omponent consists of two levelsand each level includes one or more specialized modules.
Inthe following we will give a description of thefunctionalities of the various levels and modules of thesemantic omponent.The lexical level \[Lavelli and Magnini, 1991\]incrementally interacts with the parser: whenever the parsertries to build a (partially recognized) constituent, hediscrimination module is triggered to check the consistencyof the semantic part of such a constituent.Input SentenceLexical Level ~ " (Parser )Discrimination consistencymoduleiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii!iiiii!iii!'
r - ,iiii Logical-Interpretative Tbox:~:~ Level!i!i '(Quant i f i ca t ion)  Aboxmodule ~'~ JQ Interpretation m o,e ) - -  v i tyOomain.... ModelTopicmodule 3Figure 1: Sketch of the semantic process4.1.
Lex iconThe discrimination module uses semantic informationfrom two different sources: lexical entries (which are domaindependent) and phrase-structure rules (which are domainindependent).
The representation produced by this moduleconstitutes the input for the quantification module (at thelogical-interpretative level) and is still neutral with respectto quantifier scopings.Each lexical entry, along with the usual syntacticinformation (such as the lexical category of the word, thespecification of the subcategorization frame of the entry, thesuperficial inguistic function that each subcategorizedelement holds) specifies a semantic representation a d amapping between syntactic functions and semanticfunctions.
In such a way, within the semantic representationthe syntactic distinction between the word complements (i.e.the arguments) and its adjuncts (i.e.
its modifiers) ispreserved.As an example consider the simplified lexical entry forthe verbal form "dipinse", painted (past tense) (see Figure2).
Morphological analysis enriches the informationassociated with the root and is able (for example in the caseof passive) to change the mapping between linguisticfunctions and semantic functions.
The semantic part of thelexical entry is built using the domain model knowledge(see Section 7 for a discussion on the portability problem)and it includes one (or more) semantic descriptions (thisallows words with the same syntactic behavior, but differentsemantics, to be dealt with).
Each semantic descriptioncontains the name of the DM concept (paint) associated19with the word, along with its roles, which have a syntacticrealization as arguments of the word and their restrictions(in this case, agent with restriclion painter and goal withrestriction painting).dipinsecategory: Vlingfunctions: ((subj agent) (obj goal))<other syntactic information>semantics: ((paint ((agent painter x)(goal painting y))) lexFigure 2: Lexical entry for "dipinse": painted.As for the rules, they also include both a syntactic and asemantic part.
In the semantic part, the consistency iscomputed and the construction of the semanticrepresentation is carried out.
During this process, possibleambiguities taken from lexical items are reduced.
:ioni iI t i l  tI I < Cappella Scrovegni > / I I < paint#1 > t j t?
.
I i t spaua l - locanon t t< Giotto > '~  II / < Trento >Abox < Cacciata > < vaaova >Figure 3: A fragment of the DM used in ALFresco.4.2.
Consistency checkingWe define the consistency check operation such that itsucceeds if selectional-restriction (i.e.
the concept thatrepresents the selectional restriction of a given argumentposition) denotes a concept that is compatible with theconcept hat semantic-head (i.e.
the concept associated withthe constituent which has to fill such a position) denotes.There exist several possibil it ies to check thecompatibility between two concepts within a terminologicalhierarchy.
Within the JANUS system \[Weischedel, 1989\] theconsistency is implemented by means of a doublesubsumption check that guarantees uccess both whensemantic-head is a descendant of selectional-restriction andwhen it is an ancestor.
This double subsumption test doesnot consider the cases, sometimes relevant, in whichsemantic-head is a brother concept of selectional-restriction(e.g.
"Has a sculptor painted a fresco?
"); this caserecursively extends to all the cases in which semantic-headis a brother either of a descendant or of an ancestor for aselectional-restriction (e.g.
"Which object did Giottopaint?").
This case is slightly more complex than theothers.
In fact, while it is always true that along the ISAhierarchy there can be a non-empty intersection between twoconcepts, this is not true for concepts that are brothers.
If anexplicit disjoinmess i placed between two brother concepts,there cannot be a common intersection and the consistencyprocedure must fail; otherwise it is assumed that a commonintersection can exist, and the consistency-test procedurewill succeed.
KR languages with disjointness are usuallyprovided with a specific predicate holding between twoconcepts when their intersection is empty.
It is worthnoting that this predicate includes all the subsumption casesamong concepts, in which cases it is always false.Now we will illustrate how the whole process worksusing Sentence (3) (in the rest of the paper, all the examplesrefer to the DM knowledge in Figure 3; we will use"concept" characters to indicate DM objects):(3) 'Mostrami tutti gli affreschi dipinti da Giotto in unmonumento di Padova'Show me all the frescoes painted by Giotto in amonument of PadovaIn this sentence there is a typical case of ambiguity, thatof the preposition 'di' (of); at least two senses for 'di' arepossible in DM: the spatial interpretation, in which themapping is to the spatial-location role, and thetemporal interpretation, in which the mapping is to thetempora l - locat ion  role.
The selection of the rightinterpretation (the spatial one) is carried out through theapplication of the consistency check between the argumentselectional-restrictions (the domain and the range of a role)and the semantic-head that tries to fill the position.
In thiscase the temporal interpretation is rejected (it does notsatisfy the meaningfulness notion for the lexical level)because the range restriction ( t ime-per iod) i s  notconsistent with the proposed semantic-head (Padova).4.3.
First logical formThe final result of the lexical level is a form that uses apredicate-argument no ation that allows abstracting fromtime and context.
Omitting for the moment he intensionalaspects, four relevant constructs for the resolution ofquantifiers and definite/deictic referents are:(complex-term <features><quan tifier><variable><restriction>)20(ref-term <features><variable>< r striction>)(demonst r-term<features><variable><restriction>)(pronoun-term <features><variable><pred-restriction>)A complex-term represents a quantified NP (see Figure4).
A ref-term represents a definite NP.
It plays an importantrole at interpretation level (see Section 5.3).
A demonstr-term has the task of representing a demonstrative NP.
Therepresentation has to take into account the possiblemultimediality hat the system treats at this level (the touchon the touchscreen for a deictic reference).
A pronoun-termrepresents a pronoun.
The lexical level gives a suggestionwith <pred-restriction> on the type of semantic restrictionthat the bound variable can have.
Then this information willbe used by the interpretation module.
The <features> keepsyntactic information of the NP ready for use in theinterpretation module.
(show hearer(complex-term all x(and (fresco x)(paint Giotto x)(spatial-location x(complex-term indef y(and (monument y)(spatial-location y Padova)))))speaker)Figure 4: Output of the lexical level for Sentence (3).The resulting form produced by the lexical level forSentence (3), omitting the <features> information, is shownin Figure 4.5.
Logical-Interpretative LevelAt this level validity of the sentence is checked using theknowledge in the DM Abox.
Verifying the validity of alogical form and producing the correct interpretation is not atrivial task.
We want the semantic interpreter to beindependent of the domain of the knowledge representationsystem and of the different media through which a linguisticexpression can be built.
This process involves theinteraction of the three modules of this level shown inFigure 1 \[Strapparava, 1991\].5.1.
Quantification ModuleWithin the quantification module, an algorithm for theresolution of quantifier scopings generates all possiblereadings and for each quantifier it shows its range over therest of the sentence.
However, to get an acceptable numberof readings (possibly only one), the scoping generationalgorithm, which takes advantage of the idea of Cooperstorage, needs some heuristics based on linguistic/semanticknowledge.
These rules must be seen as a whole, i.e.
theystrictly interact with each other.
Moreover they suggest adisambiguation, they do not always ensure it.
Some rulescan be: 1) lexical relevance of the quantifiers; 2) syntacticposition of quantified NPs; 3) scope markers; 4)distributive/collective semantics of predicates.
The readingsare put in order of soundness according to a hierarchy ofrules.The scoping resolution algorithm produces a secondlogical form in which all complex-terms are resolved,making their scope and body explicit.
In this logical formfor each quantifier a quantified formula appears with thefollowing structure:(quant var restriction body)For example, the reading for Sentence (3) in which foreach fresco there exists a monument that includes it, isshown in Figure 5.
(all x (indef y (and (monument y)(spatial-location y Padova))(and (fresco x)(paint Giotto x)(spatial-location x y)))(show hearer x speaker))Figure 5: Second logical form for Sentence (3).5.2.
Interpretation ModuleThe interpretation of the logical form built by scopingresolution makes up a level in which the validity of asentence is detected and eventually the relative referents areretrieved (possibly interacting with the topic module in orderto get referents for linguistic expressions such as definiteNPs and personal pronouns).
The expressions are mappedinto the KR assertional language.
The main task of theinterpretation module is the interpretation of the logicalform operators, giving a set of possible candidates thatlogically satisfies the sentence for each NP.
The results arethen notified to other modules of the system (i.e.
thepragmatic component).The interpretation f the operators includes the quantifierinterpretation (existential, universal, numerals and naturalquantifiers).
The restriction of a quantified formula iscalculated and the result is logically verified in the bodyaccording to the semantics of the quantifier operators.
Sincethere may be an arbitrary nesting of quantifiers in the secondlogical form of a sentence, the algorithm has to provide anarbitrary deep recursion of such functionalities.
(Indeed theinterpretation module has other important tasks.
One of theimprovements under development consists of embeddingintensional aspects into the logical form.
These intensionalaspects tend to extend the characteristic of an extensionallogical form by allowing references to time and contexts(indexicals) \[Forbes, 1989, Stallard, 1987\].
They would alsoinclude the possibility of interpreting certain NPs along theattributive/referential dimension).For a detailed description of the algorithms of thelogical-interpretative modules ee \[Strapparava, 1991\].
Nowwe want to focus on the interpretation of quantifieroperators.
According to the semantics of these operators theinterpretation module checks the validity of a sentence.215.2.1.
Semantics of quantification operatorsThe notation that will be used in discussing thesemantics of quantification operators i given below:pred\ [x \ ]  indicates a well-formed form in which thevariable x appears free;- ext(kx.p\[x\]) indicates the extension of p in arepresentation domain DM;~(tx .p \ [x \ ] )  indicates the set of the parts of theextension denoted by p;- be I a set, ITI indicates its cardinality.We shall show how semantics is assigned to thequantification operators in the logical form.As seen above a quantifier is syntactically representedwith the wff(quant x rest rict ion\[x\] body\[x\])that has a semantic interpretation{ a e \ ]~quant(kx.
rest  rYctYon\[x\])I body\[x/a\] is verified in DM}where ~quant (kx .
res t r i c t  ion\ [x \ ] )  is appropriatelydefined for each treated quantifier.The quantification operators that can appear in thelogical form are universal and existential quantifiers, wh-operators, natural quantifiers such as numerals (two,three...), exception operators (all except hree ...), vagueoperators (many, several, most of...).
As an example weshow how semantics i assigned lo the quantifier 'many'.About 'moiti' (many) there can be two attitudes: eitherone excludes this type of quantification by an extensionaltreatment \[Keenan and Stavi, 1986\] or one tries to get what'many' means in a fixed context \[Barwise and Cooper,1981\].
In our approach this second consideration wasfollowed.
Therefore~many(kX.p\[x\]) ={ P \]P(Z,x.p\[x\]): Ipl = kl\[ext(~.x.p\[x\])\]l }where the multiplier k may be fixed, for example 0.6, ormay depend on pragmatic aspects or on inferences on thesemantic structure of the dialog.Also to interpret other vague operators extensionally, itis necessary to make a stipulation of cardinality (fixed ordynamic), depending on the inferential capabilities of dialogstructure at our disposal.
For example almost all, most ofmay be interpreted as semantically similar to 'except atmost K', where for K considerations similar to those madefor 'many' hold.For example, we can apply the operators to sentence (3).According to the domain DM, if the interpretation modulemay construct a and a', i.e.
to construct a description of thereferents of the sentence, the validity for sentence (3) holds.If the sentence were 'Mostrami tutti gli affreschi dipinti daGiotto in un monumento di Trento' (Show me all thefrescoes painted by Giotto in a monument of Trento) itwould be consistent, but the logical-interpretative levelwould have found it not valid (because there are no frescoesby Giotto in Trento).
The interpretation module would notbe able to construct a description of the referents of thesentence.5.3.
Topic ModuleThe ref-terms, demonstr-terms and pronoun-terms aretreated specially.
The demonstr-terms coming from a deicticgestuality (i.e., in our systems a touch on a touchscreen; seeSection 6) contain the entities to which the user intended torefer.
These are passed to the interpretation module to verifythe semantic consistency.
The demonstr-terms withouttouch, the pronoun-terms and some ref-terms are resolvedwith strict interaction with the topic module.
The topicmodule organizes the mentioned referents o that it offersplausible candidates for these operators and the interpretationmodule verifies their semantic soundness.
For a detaileddescription of the topic module, see \[Samek andStrapparava, 1990\].
First of all, the constants in the logicalform (in our example: Giotto and Padova) are passed to thetopic module.
Later on the topic module is asked to give aset of probable candidates for the terms in the logical formcoming from a deictic gestuality and from the terms comingfrom pronouns.
The interpretation then will test theirvalidity.
{ a' s ~existwhere a is{ az  \]Pall(\,I ky.(and (monument \[y\])(spatial-location \[y\] Padova)l DM verifies(and (fresco a)(paint Giotto a)(spatial-location a a' ))}kx.
(indef y (and (monument y)(spatial-location y Padova))(and (fresco \[x\])(paint Giotto \[x\])(spatial-location \[x\] y)))) \]DM verifies (show hearer a speaker)) }Figure 6: Quantification operators applied to Sentence (3).226.
App l i ca t ion  on Different ComplexSystemsThe semantic omponent described in this paper has beenused within two different prototypical dialog systems (i.eALFresco and MAIA).ALFresco is an interactive system for a user interested infrescoes.
It is connected to a videodisc unit and atouchscreen.
The videodisc includes images of FourteenthCentury Italian frescoes and relevant monuments andhypertext includes art critics' comment.
A generaldescription of the functionalities and finalities of theALFresco system can be found in \[Stock, 1991\].MAIA is the IRST global project.
It is conceived as anintegration of components being developed here in differentfields of AI (speech recognition, natural language, KR,vision, reasoning, etc).
It consists of both a mobile part (arobot moving in the corridors of the institute) and a centralpart (a kind of "concierge" with whom a visitor may enterinto a dialog about he institute).
The tasks of the conciergeare: (i) giving information about researchers' activities andinstitute organization; (ii) supervising the robot's activities;(iii) interacting with an electronic librarian in order to findrelevant books.
The initial paradigm for the conciergeinteraction is related to that of ALFresco, but of course thesituation and media are different.
As the project evolvesnatural language dialogs will also include direct interactionwith the robot (whose role is to accompany the visitor tosome office or deliver parcels) and an integration withspeech recognition and synthesis.
Within this more complexsituation, the NLP component has to increase itscapabilities in order to cope with aspects uch as multipleaccess to information and interaction with the robot planner.Both systems have a common architecture design andhave been implemented in CommonLisp within the Medleyenvironment running on Sun 4.
The main componentsinteracting with the semantic omponent described here are aparser and a hybrid knowledge representation system.
Bothfor ALFresco and MAIA the parser WEDNESDAY 2 is used\[Stock, 1989\], a chart-based parser for the Italian languagethat can cope with complex sentences, idiomaticexpressions, ellipsis, and so on.As for knowledge representalion, i  ALFresco the YAKsystem \[Franconi, 1990\] is used, while in MAIA theLOOM system \[McGregor and Bates, 1987\] is used.7.
Conclusions and Future WorkWe have presented an approach to multilevel semanticsthat was exploited in the development of two semanticlevels for a dialog system architecture: the lexical level andthe logical-interpretative level.
The suggested methodologyis able to establish formal constraints over the hierarchy bymeans of a local meaningfulness notion.
Such a notion wasdefined for the lexical and logical-interpretative level,specified as consistency and valiclity respectively.
Then howthe functionalities of each level realize their own semanticdefinitions was explained in full detail.
Finally twosystems, ALFresco and MAIA, that use the semanticcomponent were described.Future developments of our work concern the issue ofportability to different application domains.
While thegeneral inference mechanisms employed by both the lexicaland the logical-interpretative level are designed to bedomain-independent, the semantic lexicon containsinformation strictly connected with the domain ofinteraction.
To (at least partially) automatize theconstruction of this semantic lexicon (given a particularDM), the possibility of using an approach similar to theUpper Model used by the PENMAN text generation system\[Bateman et al, 1990\] is being investigated.
The UpperModel establishes a level of linguistically motivatedknowledge organization specifically designed for the task ofconstraining linguistic realizations.
Given a certainapplication domain, the domain knowledge is mapped(classified) into the Upper Model knowledge; in this way,for each domain object a proper lexical realization isestablished.
As a result, changing the application domainrequires that only the mapping between the domain and theUpper Model knowledge is specified.Further developments are connected with the use ofnatural anguage in a domain which implies an interactionwith the physical world (as happens in the MAIA system).This kind of application will also raise the need to accessboth information gathered from the physical environmentand dynamically changing knowledge and of a more complexpragmatic omponent, hereby stressing the need for a cleararchitecture.
We are also working on the issue of integratingsuch expansions within the approach to multiple underlyingsystems (MUS) as established by \[Bobrow et al, 1990,Resnik, 1989\].
In the MUS approach, a user may need tocombine the capabilities of more than one system (i.e.several DBs on various domains, expert systems,information retrieval systems, interfaces to simulationpackages, etc.)
in order to perform a general task.
Fordealing with MUS, not only our semantic modules must beable to represent various levels of meaning of a sentence,they must also be capable, in a transparent manner, oforganizing the different applications at their disposal andchoosing which combination of them to use.References\[Allgayer et al, 1989\] Allgayer, J., Jansen-Winkeln, R.,Reddig, C., Reithinger, N. "Bidirectional Use of Knowledgein the Multi-Modal NL Access System XTRA".
InProceedings of IJCAI-89, Detroit, Michigan, 1989.\[Allgayer, 1990\] Allgayer, J.
"SB-ONE + - dealing with setsefficiently".
In Proceedings of ECAI-90, Stockholm,Sweden, 1990.\[Ayuso et al, 1989\] Ayuso, D., Donlon, G., MacLaughlin, D.,Ramshow, L., Resnik, P., Shaked, V., Weischedel, R. "AGuide to IRUS-II Application Development".
Report No.7144, BBN System and Technologies Corporation, 1989.\[Barwise and Cooper, 1981\] Barwise, J., Cooper, R."Generalized quantifiers and natural anguage".
Linguisticsand Philosophy, 4, 198l.\[Bateman et al, 1990\] Bateman, John A., Kasper, Robert T.,Moore, Johanna D., Whitney, Richard A.
"A GeneralOrganization of Knowledge for Natural LanguageProcessing: tile PENMAN Upper Model".
1SI Technical23Report, USC/Information Sciences Institute, 1990.\[Bobrow et al, 1990\] Bobrow, R., Resnik, P., Weischedel, R."Multiple Underlying Systems: Translating User Requestsinto Programs to Produce Answers".
In Proceedings of ACL-90, 1990.\[Boisen et al, 1989\] Boisen, S., Chow, Y., Ingria, R., Roukos,S., Scha, R., Stallard, D, Vilain, M. "Integration of Speechand Natural Language Final Report".
Report No.
6991, BBNSystem and Technologies Corporation, 1989.\[Cooper, 1987\] Cooper, R. Quantification and SyntacticTheory.
Reidel, Dordrecth, 1983.\[Forbes89\] Forbes, G. "Indexicals".
In: Gabbay & Guenthner(eds.
), Handbook of Philosophical Logic IV.
Reidel,Dordrecth 1989.\[Franconi, 1990\] Franconi, E. "The YAK (Yet Another Krapfen)Manual".
IRST Manual, Trento, Italy, 1990.
Also as'Progetto Finalizzato CNR - Sistemi Informatici e CalcoloParallelo'.\[Hindley and Seldin, 1986\] Hindley, J., Seldin J. Introductionto Combinators and &-Calculus.
Cambridge UniversityPress, 1986.\[Hobbs and Shieber, 1987\] Hobbs, J., Shieber, S. "AnAlgorithm for Generating Quantifier Scopings".Computational Linguistics, 13, January 1987.\[Keenan and Stavi, 1986\] Keenan, E., Stavi, J.
"A semanticcharacterization of natural language determiners".Linguistics and Philosophy, 9, 1986.\[Lavelli and Magnini, 1991\] Lavelli, A., Magnini, B.
"LexicalDiscrimination within a Multilevel Semantics Approach".Proceedings of ALIA-91, Palemlo, Italy, 1991.\[Mac Gregor, Bates, 1987\] Mac Gregor, R.M., Bates, R. "TheLOOM Knowledge Representation Language".
TechicalReport ISI/RS-87-188, USC/In formation Science Institute,1987.\[Resnik, 1989\] Resnik, P. "Access to Multiple UnderlyingSystems in Janus".
BBN Report No.
7142, 1989.\[Samek and Strapparava, 19t~0\] Samek-Lodovici V.,Strapparava C. "Identifying Noun Phrase References: TheTopic Module of the AlFresco System".
Proceedings ofECAI-90, Stockholm, 1990.\[Scha, 1983\] Scha, R. "Logical Foundations for QuestionAnswering".
Philips Research Laboratories, M.S.
12.331,Eindhoven, The Netherlands, 1983.\[Scha and Stallard, 1988\] Scha, R., Stallard, D. "MultilevelPlural and Distributivity".
In Proceedings of ACL-88, 1988.\[Stallard, 1987\] Stallard, D. "'Answering Questions Posed inIntensional Logic.
A multilevel semantics approach".
BBNReport No.
6522, June 1987.\[Stock, 1989\] Stock, O.
"Parsing with Flexibility, DynamicStrategies, and Idioms in Mind".
Computat iona lLinguistics, 15(1): 1-18, 1989.\[Stock, 1991\] Stock, O.
"Natural L~mguage and Exploration ofan Information Space: The ALFresco Interactive System".
InProceedings of IJCAI-91, Sydney, Australia, 1991.\[Strapparava, 1991\] Strapparava, C. "From Scopings toInterpretation: The Semantic Interpretation within theALFresco System".
In Proceedings of ALIA-91, Palermo,Italy, 1991.\[Weischedel, 1989\] Weischedel, R. M. "A Hybrid Approach toRepresentation in the Janus Natural Language Processor".
InProceedings of ACL-89, Vancouver, British Columbia,1989.\[Westerstahl, 1986\] Westerstahl, D. "Quantifier in Formal andNatural Language".
Report No.
CSLI-86-55, June 1986.24
