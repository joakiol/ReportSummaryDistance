Recyc l ing  L ingware  in a Mu l t i l i ngua l  MT SystemSteffen Leo HansenManny RaynerDavid Car terIvan BretanRobert EklundMats Wir~nSabine Kirchmeier-AndersenChristina PhilpFinn SorensenHanne Erdman ThomsenSRI In ternat iona lSuite 23, Millers YardCambr idge  CB2 1RQUni ted K ingdommanny@cam.sri.comdmc~cam.sri.comTelia Research ABSpoken Language ProcessingS-136 80 HaningeSwedenIvan.P.Bretan@telia.seRobert.H.Eklund@telia.seMats.G.Wiren@telia.seHandelsh0jskolen i K0benhavnInst i tut  for Data l ingv is t ikDalgas Have 15DK-2000 Freder iksbergDenmarkslh.id@cbs.dkAbstractWe describe two methods relevant to multi-lingual machine translation systems, whichcan be used to port linguistic data (gram-mars, lexicons and transfer rules) be-tween systems used for processing relatedlanguages.
The methods are fully im-plemented within the Spoken LanguageTranslator system, and were used to createversions of the system for two new languagepairs using only a month of expert effort.1 IntroductionThe basic idea of this paper is simple and uncon-troversial.
All natural anguages are in some sensesimilar (some are obviously very similar), so softwarewritten to process one language ought to some ex-tent to be applicable to other languages.
If the lan-guages L1 and 52 are similar enough, then it shouldbe easier to recycle software applicable to L, thanto rewrite it from scratch for L2.This paper describes two related approaches inthis general direction, which have been success-fully applied within the Spoken Language Transla-tor (SLT) project (Rayner and Carter, 1997).
Thefirst is the most obvious: we start with a function-ing grammar and lexicon for L1, and port it to thesimilar language L2.
This is not, of course, a novelidea, but we think that we have refined it in a num-ber of ways.
In particular, we show that it is prac-tically feasible in the case of sufficiently close lan-guages to generalize an existing grammar for L1 tocover both L1 and L2 (i.e.
produce a single gram-mar which through the setting of a single param-eter becomes valid for either language).
We alsodescribe a method which makes it possible to portthe language-dependent l xicon for L1 so as to max-imize sharing of data between the systems for thetwo languages.The second idea is specifically related to trans-lation.
Suppose we have already developed sets oftransfer ules for the two language-pairs L1 --+ L2and L2 ~ L3.
We describe a method which allowsus to compose the two sets of rules off-line to createa new set for the pair L1 --+ L3.Both methods might be said to operate accordingto the principle memorably described by Mary Pop-pins as "Well begun is half done".
They do not solveeither problem completely, but automatically takecare of most of the drudgery before any human hasto become involved.
In each case, the initial result isa machine-written set of linguistic data (lexicon en-tries and transfer ules) which is not quite adequateas it stands; a system expert can however clean it upinto satisfactory shape in a small fraction of the timethat would have been required to write the relevantrules and lexicon entries from scratch.The practical experiments we describe have beencarried out using versions of the SLT system involv-ing the languages English, French, Swedish and Dan-ish.
Initial results are extremely promising.
In par-ticular, we were able to combine both methods tocreate fairly credible Swedish-to-French and English-to-Danish spoken language translation systems I us-~In fact we do not currently use a Danish speech syn-thesizer, but it would be straightforward to incorporate55ing only a few person-weeks of expert effort.The rest of the paper is structured as follows.
Sec-tion 2 gives a very brief overview of the relevant as-peers of the SLT system.
Section 3 describes themethods we have developed for porting linguisticdescriptions between closely related languages.
Sec-tion 4 summarizes the transfer composition method.Section 5 describes preliminary experiments.2 An  overv iew o f  the  SLT  sys temThe SLT system has been described in detail else-where (most recently (Rayner and Bouillon, 1995;Rayner and Carter, 1997)), so this section will onlyprovide the minimum information ecessary to un-derstand the main body of the paper.The language-processing (translation) part of thesystem is supplied with N-best sentence hypothesesby the system's recognizer, and itself uses a hybridarchitecture, which combines rules and trainable sta-tistical models.
To summarize the argument from(Rayner and Bouillon, 1995), there are good reasonsfor requiring both these components o be present.Rules are useful for capturing many kinds of regularlinguistic facts that are independent of any partic-ular domain of application, prime examples beinggrammatical greement and question-formation.
Icontrast, there are other types of phenomena whichintuitively are more naturally conceptualized as id-iosyncratic and domain-dependent: the most obvi-otis examples here are word-choice problems.The system uses two translation mechanisms, ap-plied bottom-up in parallel (Rayner and Carter,1997).
The primary, rule-based translation mecha-nism performs transfer at the level of Quasi-LogicalForm (QLF), a type of predicate/argument stylenotation (Alshawi et al, 1991).
The source- andtarget-language grammars provide a declarative def-inition of a many-to-many mapping between sur-face form and QLF.
The grammars are domain-independent, and can be compiled to run efficientlyeither in the direction surface form ~ QLF (anal-ysis) or QLF --+ surface form (generation).
Intransfer, unification-based rules are used to definea space of possible candidate translations; domain-dependent, statistically trained preferences then se-lect the most preferred candidate translation.
Thisdivision of effort has the important consequence ofallowing the transfer ules to be fairly simple, sincemuch of the complexity is "factored out" into thetrained preferences.In order to deal with the brittleness inherent inaz~y rule-based system, a second, much less sophisti-one .cated translation method is also used, which simplymaps surface phrases from the source language intopossible target-language counterparts.
We refer tothe backup method as "word-to-word" (WW) trans-lation.
The two methods are combined, roughlyspeaking, by using rule-based QLF transfer to trans-late as much as possible, filling in any gaps with ap-plications of the WW rules.The parts of the system of central interest hereare the rule-based components, in particular themorphologies, grammars, lexica and transfer ules.Morphologies are written in a variant of two-levelmorphology (Carter, 1995), and grammars in aunification-based formalism (Alshawi (ed), 1992).The lexicon for each language is divided into threemain parts:Domain-independent function (closed class)word entries are written directly in terms of def-initions of suitable feature-value assignments,and can from a software-engineering standpointbe regarded as part of the grammar.A collection of language-dependent but domain-independent macros define the feature-valueassignments needed for each type of regularcontent-word, e.g.
"count noun", "transitiveverb" and so on.
These macros are calledparadigm macros.Content word entries, which in general may bedomain-dependent, are defined in terms of theselexical macros.
An entry of this kind containsthe following information: the name of the rel-evant macro, the base surface form of the word,the associated logical-form (QLF) constant, andif necessary a pointer to the correct inflectionaltype (conjugation or declension).Structurally, transfer ules have much in commonwith lexicon entries.
(Bear in mind that conven-tional bilingual and monolingual dictionaries havesimilar structures too).
A small set of domain-independent transfer rules encode cross-linguisticdivergences significant enough that they need tobe represented at the QLF level: these rules maycontain arbitrary pieces of QLF form.
The ma-jority of the transfer ules, however, are "atomic-atomic" : they associate a logical-form constant fromthe source language with one or more logical-formconstants from the target language.
Transfer ulesof this type have a close connection with the macro-defined monolingual content-word lexicon, and mayalso be domain-dependent.553 Por t ing  grammars  and  lex icabetween c lose ly  re la ted  languagesThe original version of the Core Language Enginehad a single language description for English, writ-ten by hand from scratch (Pulman, 1992; Rayner,1994).
Subsequently, language descriptions havebeen developed for Swedish (Gamb~ck and Rayner,1992), French and Spanish (Rayner, Carter andBouillon, 1995).
In each of these cases, the new lan-guage description was created by manually editingthe relevant files for the closest existing language.
(The Swedish and French systems are modified ver-sions of the original English one; the Spanish systemis modified from the French one).
There are howeversome serious drawbacks to this approach.
Firstly,it requires a considerable quantity of expert effort;secondly, there is no mechanism for keeping the re-suiting grammars in step with each other.
Changesare often made to one grammar and not percolatedto the other ones until concrete problems how up intest suites or demos.
The net result is that the var-ious grammars tend to drift steadily further apart.When we recently decided to create a language de-scription for Danish, we thought it would be inter-esting to experiment with a more principled method-ology, which explicitly attempts to address the prob-lems mentioned above.
The conditions appearedideal: we were porting from Swedish, Swedish andDanish being an extremely closely related languagepair.
The basic principles we have attempted to ob-serve are the following:?
Whenever feasible, we have tried to arrangethings so that the linguistic descriptions for thetwo languages consist of shared files.
In partic-ular, the grammar ules files for the two lan-guages are shared.
When required, rules orparts of rules specific to one language are placedinside macros whose expansion depends on theidentity of the current language, so that therule expands when loaded to an appropriatelanguage-specific version.?
When files cannot easily be shared iin particu-lar, for the content-word lexica), we define thefile for the new language in terms of declara-tions listing the explicit differences against thecorresponding file for the old language.
We haveattempted to make the structure of these dec-larations as simple as possible, so that they canbe written by linguists who lack prior familiar-ity with the system and its notation.Although we are uncertain how much generality toclaim for the results (Swedish and Danish, as alreadynoted, are exceptionally close), we found them en-couraging.
Four of the 175 existing Swedish gram-mar rules turned out to be inapplicable to Danish,and two had to be replaced by corresponding Danishrules.
Five more rules had to be parameterized bylanguage-specific macros.
Some of the morphologyrules needed to be rewritten, but this only requiredabout two days of effort from a system specialistworking together with a Danish linguist.
The mostsignificant piece of work, which we will now describein more detail, concerned the lexicon.Our original intuition here was that the function-word lexicon and the paradigm macros (cf Section 2)would be essentially the same between the two lan-guages, except that the surface forms of functionwords would vary.
To put it slightly differently, weanticipated that it would make sense as a first ap-proximation to say that there was a one-to-one cor-respondence between Swedish and Danish function-words, and that their QLF representations could beleft identical.
This assumption does indeed appearto be borne out by the facts.
The only complica-tion we have come across so far concerns definitedeterminers: the feature-value assignments betweenthe two languages need to differ slightly in order tohandle the different rules in Swedish and Danish fordeterminer/noun agreement.
This was handled, aswith the grammar ules, by introduction of a suit-able call to a language-specific macro.With regard to content words, the situation issomewhat different.
Since word choice in transla-tion is frequently determined both by collocationaland by semantic onsiderations, it does not make asmuch sense to insist on one-to-one correspondencesand identical semantic representations.
We conse-quently decided that content-words would have alanguage-dependent QLF representation, so as tomake it possible to use our normal strategy of lettingthe Swedish-to-Danish translation rules in general bemany-to-many, with collocational preferences filter-ing the space of possible transfers.The remarks above motivate the concrete lexicon-porting strategy which we now sketch.
All workwas carried out by Danish linguists who had a goodknowledge of computational linguistics and Swedish,but no previous exposure to the system.
The start-ing point was to write a set of word-to-word trans-lation rules (cf Section 2), which for each Swedishsurface lexical item defined a set of possible Danishtranslations.
The left-hand side of each WW rulespecified a Swedish surface word-form and an asso-ciated grammatical category (verb, noun, etc), andthe right-hand side a possible Danish translation.An initial "blank" version of the rules was created57automatically by machine analysis of a corpus; theleft-hand side of the rule was filled in correctly, anda set of examples taken from the corpus was listedabove.
The linguist only needed to fill in the right-hand side appropriately with reference to the exam-ples supplied.The next step was to use the word-to-word rules toinduce a Danish lexicon.
As a first approximation,we assumed that the possible grammatical (syntac-tic/semantic) categories of the word on the right-hand side of a WW rule would be the same as thoseof the word on its left-hand side.
(Note that in gen-eral a word will have more than one lexical entry).Thus lexicon entries could be copied across fromSwedish to Danish with appropriate modifications.In the case of function-words, the entry is copiedacross with only the surface form changed.
Forcontent-words, the porting routines query the lin-guist for the additional information eeded to trans-form each specific item as follows.If the left-hand (Swedish) word belongs to a lexi-cal category subject o morphological inflection, thelinguist is asked for the root form of the right-hand(Danish) word and its inflectional pattern.
If theinflectional pattern is marked as wholly or partly ir-regular (e.g.
with strong verbs), the linguist is alsoqueried for the values of the relevant irregular in-flections.
All requests for lexical information areoutput in a single file at the end of the run, for-matted for easy editing.
This makes it possible forthe linguist to process large numbers of informationrequests quickly and efficiently, and feed the reviseddeclarations back into the porting process in an it-erative fashion.one  particularly attractive aspect of the schemeis that transfer ules are automatically generated asa byproduct of the porting process.
Grammar ulesand function-words are regarded as interlingual; thusfor each QLF constant C involved in the definitionof a grammar ule or a function-word efinition, thesystem adds a transfer ule which maps C into itself.Content-words are not interlingual.
However, sinceeach target lexical entry L is created from a sourcecounterpart L', it is trivial to create simultaneouslya transfer ule which maps the source QLF constantassociated with L' into the target QLF constant as-sociated with L.4 Transfer compositionThe previous ections have hopefully conveyed someof the flavour of our translation framework, whichconceptually can be thought of as half-way betweentransfer and interlingua.
We would if possible liketo move closer to the interlingual end; however, theproblems touched on above mean that we do not seethis as being a realistic short-term possibility.
Mean-while, we are stuck with the problem that dogs allmultilingual transfer-based systems: the number ofsets of transfer ules required increases quadraticallyin the number of system languages.
Even three lan-guages are enough to make the problem non-trivial.In a recent paper (Rayner et al 1996), we de-scribed a novel approach to the problem which wehave implemented within the SLT system.
Exploit-ing the declarative nature of our transfer formalism,we compose (off-line) existing sets of rules for thelanguage pairs L1 --+ L2 and L2 ~ L3, to createa new set of rules for L1 ~ L3.
It is clear thatthis can be done for rules which map atomic con-stants into atomic constants.
What is less obviousis that complex rules, recursively defined in termsof translation of their sub-constituents, can also becomposed.
The method used is based on program-transformation ideas taken from logic programming,and is described in detail in the earlier paper.
Simplemethods, described in the same paper, can also beused to compose an approximate transfer preferencemodel for the new language-pair.The rule composition algorithm is not complete;we strongly suspect that, because of recursion ef-fects, the problem of finding a complete set of com-posed transfer ules is undecidable.
But in practice,the set of composed rules produced is good enoughthat it can be improved quickly to an acceptablelevel of performance.
Our methodology for perform-ing this task makes use of rationally constructed,balanced omain corpora to focus the effort on fre-quently occurring problems (Rayner, Carter andBouillon, 1995).
It involves making declarations toreduce the overgeneration f composed rules; addinghand-coded rules to fill coverage holes; and adjust-ing preferences.
The details reported in (Rayner etal, 1996).5 ExperimentsWe will now present results for concrete experi-ments, where we applied the methods describedabove so as to rapidly construct translation systemsfor two new language pairs.
All of the translationmodules involved operate within the same Air TravelInquiry (ATIS; (Hemphill et ai., 1990)) domain asother versions of SLT, using a vocabulary of about1 500 source-language stem entries, and have beenintegrated into the main SLT system to produce ver-sions which can perform credible translation of spo-ken Swedish into French and spoken English intoDanish respectively.68Swe --+ Fre Eng -+ SweFLflly acceptable 29.4% 56.5%Unnatural style 16.3% 7.75%Minor syntactic errors 15.2% 11.75%Major syntactic errors 2.0% 4.75%Partial translation 7.0% 8.75%Nonsense 22.9% 5.0%Bad translation 7.0% !
4.0%No translation 0.2% 1.5%Table 1: Translation results for Swedish --+ Frenchand English --+ Swedish on unseen speech data5.1 Swedish  --+ Engl ish ~ FrenchThis section describes an exercise which involved us-ing transfer composition to construct a SwedishFrench translation system by composing SwedishEnglish and English ~ French versions of the sys-tem.
The total expert effort was about two person-weeks.
We start by summarizing results, and thensketch the main points of the manual work neededto adjust the composed rule-sets.We used a corpus of 442 previously unseen spokenutterances, and processed the N-best lists output forthem by the speech recognizer.
The results are asgiven in Table 1; for comparison, we also give theresults for English --+ Swedish, the language pair towhich we have devoted the most effort (and whichdoes not involve any transfer composition).Thus almost 30% (top row) of the translationsproduced were completely acceptable, with another30% or so (rows 2-3) having only minor problems,giving a total of 60% that would probably be ac-ceptable in practical use.
A further 9% (rows 4-5)contained major errors but also some correct infor-mation, while nearly all the remaining 30% (bot-tom 3 rows) were clearly unacceptable, consistingeither of nonsense or of a translation that made somesense but was wrong.
The reasons for these 30% ofoutright failures, compared to only about 10% forEnglish --~ Swedish, are firstly, that recognizer per-formance is slightly less good for Swedish than forEnglish, owing to less training data being available;second, that Swedish and French differ more thanEnglish and Swedish do; thirdly, that transfer ulesfor both the component pairs (Swedish ~ Englishand English --+ French) have had much less workdevoted to them than English --+ Swedish; and lastbut not least, of course, that transfer composition isbeing used.When cleaning up the automatically composedSwedish -+ French rule-set, the task on which wespent most effort was that of limiting overgenerationof composed transfer ules.
The second most impor~tant task was manual improvement of the Composedtransfer preference model.
The methods used aredescribed in more detail in (Rayner et al 1996).5.2 Engl ish --+ Swedish --+ Dan ishThis section briefly describes a second series of ex-periments, in which we converted an English --~Swedish system into an English --+ Danish systemusing the methods described earlier.
The total in-vestment of system expert effort was again aroundtwo person-weeks.About half the effort was used to port the Swedishlanguage description to Danish, employing the meth-ods of Section 3.
After this, we carried out tworounds of testing and bug-fixing on the Swedish --~Danish translation task.
For this, we used a Swedishrepresentative corpus, containing 331 sentences rep-resenting 9385 words from the original Swedish cor-pus.
These tests uncovered a number of new prob-lems resulting from previously unnoted divergencesbetween the Swedish and Danish grammars.
Abouthalf the problems disappeared after the addition of20 or so small hand-coded adjustments to the mor-phology, function-word lexicon, transfer rules andtransfer preferences.After the second round of bug-fixing, 95% of theSwedish sentences received a Danish translation, and79% a fully acceptable translation.
(When measur-ing results on representative corpora, we count cov-erage in terms of "weighted scores".
The weight as-signed to sentence is proportional to the number ofwords it represents in the original corpus: that is,its length in words times the number of sentences itrepresents).
Most of the translation errors that didoccur were minor ones.
Finally, we composed theEnglish ~ Swedish and Swedish --+ Danish rules tocreate a English -+ Danish rule-set, and used this,after a day's editing by an expert, to test English --+Danish translation using a representative text corpus(we will present results for unseen speech input atthe workshop).
Our results, using the same schemeas above, were as given in Table 2.6 Conc lus ions  and  fur ther  d i rec t ionsWe have demonstrated that it is practically feasiblein the case of sufficiently close languages to general-ize an existing grammar for one language to producea grammar which, through the setting of a single pa-rameter, becokes valid for either language.
As wellas providing major efficiency gains over writing agrammar for the second language from scratch, this69Eng ~ DanFully acceptable 52.5%Unnatural style 0.4%Minor syntactic errors 24.4%Major syntactic errors 0.7%Partial translation 0.0%Nonsense 0.9%Bad translation 10.7%No translation 10.3%Table 2: Translation results for English --+ Danishon representative t xt datatechnique means that subsequent enhancements tothe grammar, in those areas where the characteris-tics of the two languages are equivalent, will applyautomatically to both of them.We have also described an algorithm for com-position of transfer rules.
We have demonstratedthat it can be used to automatically compose non-trivial sets of transfer rules containing on the or-der of thousands of rules, and shown that by smalladjustments the performance can be improved to alevel only slightly inferior to that of a correspond-ing set of hand-coded rules.
Our experience is thatthe amount of work involved in using these methodsis only a fraction of that needed to develop similarrules from scratch.AcknowledgementsThe Danish-related work reported here was fundedby SRI International and Handelsh0jskolen iKobenhavn.
Other work was funded by Telia Re-search AB under the SLT-2 project.
We would liketo thank David Milward and Steve Pulman for help-ful comments.Alshawi, H.
(ed.)
1992.
The Core Language Engine.MIT Press.Carter, D. 1995.
Rapid Development of Morpho-logical Descriptions for Full Language ProcessingSystems.
Proceedings of 7th European ACL.
AlsoSRI Technical Report CRC-047Ganlbgck, B., and M. Rayner.
The Swedish CoreLanguage Engine.
Proc.
3rd Nordic Conferenceon Text Comprehension i  Man and Machine,LinkSping, Sweden.
Also SRI Technical ReportCRC-025.Hemphill, C.T., J.J. Godfrey and G.R.
Doddington.1990.
The ATIS Spoken Language Systems pilotcorpus.
Proc.
DARPA Speech and Natural Lan-guage Workshop, Hidden Valley, Pa., pp.
96-101.Pulman, S. 1992.
Unification-Based Syntactic Anal-ysis.
In (Alshawi (ed), 1992).Rayner, M. 1994.
English linguistic coverage.
In(Agn~ et al, 1994).Rayner, M. and Bouillon, P. 1995.
Hybrid Transferin an English-French Spoken Language Transla-tor.
Proceedings of IA '95, Montpellier, France.Also SRI Technical Report CRC-056.Rayner, M., P. Bouillon and D. Carter.
1995.
Us-ing Corpora to Develop Limited-Domain SpeechTranslation Systems.
Proc.
Translating and theComputer 17.
Also SRI Technical Report CRC-059.Rayner, M., D. Carter and P. Bouillon.
1996.Adapting the Core Language Engine to Frenchand Spanish.
Proc.
NLP-IA, Moncton, NewBrunswick.
Also SRI Technical Report CRC-061.Rayner, iVl., and D. Carter.
1997 Hybrid languageprocessing in the Spoken Language Translator.Proc.
ICASSP-97, Munich, Germany.
Also SRITechnical Report CRC-064.ReferencesAgn~is, M-S., Alshawi, H., Bretan, I., Carter, D.,Ceder, K., Collins, M., Crouch, R., Digalakis, V.,Ekholm, B., Gamb~ck, B., Kaja, J., Karlgren, J.,Lyberg, B., Price, P., Pulman, S., Rayner, M.,Samuelsson, C. and Svensson, T. 1994.
SpokenLanguage Translator: First Year Report.
SRITechnical Report CRC-0432Alshawi, H., D. Carter, B. Gamb~ck and M. Rayner.1991.
Transfer through Quasi Logical Form.
Proc.ACL-91.2All SRI Technical Reports listed are availablethrough WWW from http  : / /w~.
cam.
s r i .
corn70
