Proceedings of the 9th SIGdial Workshop on Discourse and Dialogue, pages 92?95,Columbus, June 2008. c?2008 Association for Computational LinguisticsFrom GEMINI to DiaGen:Improving Development of Speech Dialoguesfor Embedded SystemsStefan W. HamerichUniversity of Hamburg Harman/Becker Automotive SystemsDepartment of Informatics CoC Speech & ConnectivityNatural Language Systems Division Speech ServicesHamburg ?
Germany Ulm ?
Germanyshamerich@harmanbecker.comAbstractIn this paper DiaGen is presented, a tool thatprovides support in generating code for em-bedded dialogue applications.
By aid of it, thedialogue development process is speeded upconsiderably.
At the same time it is guaran-teed that only well-formed and well-definedconstructs are used.
Having had its roots inthe EU-funded project GEMINI, fundamen-tal changes were necessary to adopt it to therequirements of the application environment.Additionally within this paper the basics ofembedded speech dialogue systems are cov-ered.1 IntroductionThe EU funded research project GEMINI (GenericEnvironment for Multilingual Interactive Natural In-terfaces) aimed at the development of an Applica-tion Generation Platform (AGP) to semiautomati-cally generate multimodal dialogue applications fordatabase access (Hamerich et al, 2004a).
At the endof the project, two telephony applications had beensuccessfully deployed: a banking application for aGreek bank, and a citizen care application for a Ger-man city.
The former has been used by several thou-sand customers (Hamerich et al, 2004b).Based on the ideas and concepts of GEMINI anew tool named DiaGen has been developed, whichimproves the development process for dialogue ap-plications with regard to certain aspects.This paper is structured as follows: First the basicideas of the GEMINI AGP are introduced.
Next thecharacteristics and peculiarities of embedded speechapplications are explained.
This is followed by adescription of the concepts of GEMINI which hadbeen a starting point for the development of DiaGen.The core of this paper follows: a detailled descrip-tion of the DiaGen tool.
Finally the conclusion andoutlook are presented.2 The GEMINI AGPThe GEMINI AGP provided support for the semi-automatic creation of phone-based dialogue applica-tions.
The development process had several layers.Through the different phases of a layer the applica-tion developer was guided by a wizard and had touse specialised assistants for each phase.The first starting point was a rough abstract dia-logue model, which has been enriched step by stepthrough all phases until finally dialogue model wascompleted.
All models are completely written ina language specifically developed for the purposesof GEMINI covering both, dialogue description anddata modelling (Hamerich et al, 2003; Schubert andHamerich, 2005).Originally the GEMINI AGP was designed forphone-based or web-based applications.
Thereforethe final outcome of the AGP was VoiceXML orxHTML, according to the initial selection of the ap-plication developer.The three layers of the platform are described indepth in (d?Haro et al, 2006).3 Automotive Speech DialoguesSpeech dialogues for cars are embedded solutionsrunning under real-time operating systems with very92low memory and CPU power (Hamerich, 2005).1Next to these hardware requirements customersfrom automotive industry demand very explicitspecifications to understand the complete dialogueflow and see its connections to the graphical/hapticalHMI (human machine interface) in a car.
Thereforespecial algorithms and tools are used, to develop andrun speech dialogues on such embedded systems.
Inconsequence Harman/Becker has a proprietary dia-logue description language developed especially forbeing used on embedded environments (Hamerichand Hanrieder, 2004).
The Generic Dialogue Mod-elling Language (GDML) is designed as a compiledlanguage to save memory and CPU resources.
Thismakes sense, since dialogues within a car are stillclosed applications.Speech control for cars is available to the endcustomer since 1996 (Heisterkamp, 2001).
Todaymany car manufacturers offer speech control sys-tems.
Typical applications in a car are voice con-trol of telephone, tuner and navigation system.
Di-rect control of media files using their meta-data(e.g.
ID3-Tags) by saying e.g.
?play title ?Bad?
by?Michael Jackson??
is a feature currently under de-velopment (Wang and Hamerich, 2008).In spite of several tools and libraries, dialogue de-velopment for automotive applications is mainly stillmanual work.4 Porting Ideas from GEMINI to DiaGenSince the GEMINI AGP showed that advancedspeech dialogue applications can be created fast andeasy it was straightforward to attempt to transfer atleast some of the possibilities from the AGP into theworld of embedded speech dialogues.
However thefollowing features need to be changed for the newtool:?
Speech dialogues in cars do not access adatabase; instead the devices are controlled di-rectly by the speech dialogue.
Therefore Dia-Gen does not need a database interface butshould instead offer a flexible way to integrateaccess to external devices.1Generally embedded systems comprise other highly inte-grated systems as well.
Since the approach for embeddingspeech dialogue systems described here can work on such sys-tems as well, the term ?embedded?
is used as a generalisation.?
When starting development with the AGP firsta rough dialogue specification has to be pro-vided, which for every new application needsto be given again (except the library approachis used, which makes only sense for very sim-ilar applications).
It would make sense to pro-vide a sample dialogue at the start of dialoguedevelopment for embedded applications, con-taining the most common interfaces and allow-ing faster creation of new applications from thisstarting point.?
When using the AGP for dialogue develop-ment, there was no consistency check forspeech grammars and their connection to thedialogue.
This should be improved with Dia-Gen.?
Since highly customised applications are de-manded, code is still written by hand.
Never-theless dialogue designers are supported withseveral tools and libraries.
Therefore the newtool should fit into the existing tool chain,but should also allow for manual editing orat least fine-tuning of the code.
Since itwas experienced from GEMINI that generat-ing VoiceXML from the models coded in theGEMINI modelling language was hard work,it was decided to directly work on the runtimelanguage for the new tool.
This minimises ef-forts for the generation components and on theother hand allows for easy editing of code files.That means for the new tool no generator com-ponent is needed.
Instead the compiler neededfor the embedded dialogue descriptions shouldbe added to DiaGen, to allow for integrated de-velopment.?
Since the creation of a phone-based dialoguesystem requires specialised handling for differ-ent situations (e.g.
for database access, outputgeneration, etc.)
several specialised wizardshave been created forming the AGP.
Since de-velopment for a speech control system is quitedifferent it does not make sense, to have severalassistants.
Therefore DiaGen integrates all theneeded functionality into one tool.935 DiaGenAs already described above, DiaGen was developedas a new tool, based on the experiences made withinthe GEMINI project.
The key idea of DiaGen is toease development of speech dialogues for automo-tive applications.
The main point here is not onlyto speed up coding of dialogue scripts but addition-ally to support the development of correct, consis-tent, and user-friendly dialogue applications.The main differences between DiaGen and theGEMINI AGP are already described above.
In thissection the most outstanding properties of the finaltool are discussed in detail.5.1 Modelling LanguageSince effort for generating runtime code from de-velopment models was a big issuee within GEMINIand it is often required to change code details even ina late phase of development, it was decided for Dia-Gen to work directly on GDML.
This allows DiaGento offer manual editing at any development stage.5.2 IntegrationFor a GDML developer, there are daily tools to workwith.
These are the grammar and dialogue compilerand a testing and debugging tool.
These tools allhave been integrated into DiaGen.
For each tool,DiaGen allows to set configuration parameters aswell as to compile and debug directly in the envi-ronment.5.3 Project ModelOne of the main features of DiaGen is a completeproject model, which contains all project files andruntime configuration settings.
Loading this modelinto DiaGen allows easy compiling, testing and edit-ing of the complete application.The model can be extended by editing the con-tained files using DiaGen.
Additionally DiaGen alsooffers the possibility to add predefined routines ormethods to the model, allowing for a library usage.Another advantage of the model is the completecoverage of variables, functions, prompts, etc.
Thisspeeds up the development process quite a lot, sincethe tool automatically proposes allowed argumentvalues for a function call.
And if a variable has notbeen defined in the current context, this can just bedone by a simple click on the respective button.
Thisfeature was already available in parts with the GEM-INI AGP.5.4 Sample ApplicationAs already mentioned in section 4 development fora new application with DiaGen starts with a sampleapplication.
This saves time since setting up a newrunning application with correct configuration set-tings by hand can be a lengthy process.
If insteada complete running system is copied and strippeddown, this costs time as well.
Starting with a smallsample application therefore is much more efficient.The sample application can easily be updated andmaintained, therefore even new configuration set-tings or techniques can be adopted.5.5 Device InterfaceTo control devices by speech, their interface must beaccessible for the dialogue.
This in GDML generallyis done with the concept of system calls for detailssee (Hamerich and Hanrieder, 2004).
New systemcalls can be created using DiaGen or just be addedto an existing DiaGen project.
When a system callis needed, it can just be selected from a list, savingtime for lookup.
Of course all the advantages of theproject model (sec.
5.3) apply for system calls andtheir arguments and results as well.5.6 Grammar Tag ConsistencyGDML (like VoiceXML) uses semantic grammartags to identify user utterances.
These tags are evenindependent of the used language making GDML di-alogues complete language independent.
This givesbigger flexibility and minimises efforts for porting adialogue application to another language.To initiate a dialogue reaction, a specified taghas to be delivered from the parser.
For each taga dialogue action inside the dialogue code itself isneeded.
In this case consistency of these tags ingrammar and dialogue script is of highest impor-tance.
As already mentioned the GEMINI AGP didnot ensure this consistency automatically.
This ledto high efforts when developing an application withthe AGP.
To minimise these efforts and disable po-tential errors the consistency shall be ensured auto-matically by DiaGen.94To do so DiaGen offers a special view of thegrammar.
For each grammar rule or combination ofrules all possible grammar tags are shown.
Selectinga tag automatically constructs a complete switch-case statement for all possible alternatives and en-sures consistency between grammar and dialogue.5.7 Usage of DiaGenDiaGen has been developed to allow fast creationof flexible speech dialogues for automotive applica-tions.
See Figure 1 for possibilities of its contextmenu.
It was used successfully for a proactive dy-namic traffic information application based on Traf-fic Message Channel (TMC) messages.
This ap-plication has already been described in (Hamerich,2007).
Since the tool is still in its testing phase, it iscurrently used for prototypical development only.Figure 1: Context menu of DiaGen within GDML dialogstep.6 ConclusionIn this paper DiaGen was presented.
A tool to im-prove the development process of embedded speechdialogues as used for automotive systems.
Ma-jor improvements offered by usage of DiaGen arespeed-up of coding and verified code consistency.DiaGen results partly from the experiences collectedwithin the GEMINI project.
But since GEMINI con-centrated on phone-based and multimodal applica-tions, several changes have been necessary for em-bedded dialogues, which have been described.7 Future WorkAs pointed out the tool is currently used to developa pilot application.
As feedback from the work onthe pilot application, DiaGen is constantly being up-dated.
At a later development stage of DiaGen it willbe evaluated to be used for product development aswell.ReferencesL.F.
d?Haro, R. de Co?rdoba, J. Ferreiros, S.W.
Hamerich,V.
Schless, B. Kladis, V. Schubert, O. Kocsis, S. Igel,and J.M.
Pardo.
2006.
An Advanced Platform toSpeed up the Design of Multilingual Dialog Applica-tions for Multiple Modalities.
Speech Communication,48(6):863?887.S.W.
Hamerich and G. Hanrieder.
2004.
ModellingGeneric Dialog Applications for Embedded Systems.In Proc.
ICSLP, pages 237?240, Jeju, Korea.S.W.
Hamerich, Y.-F. H. Wang, V. Schubert, V. Schless,and S. Igel.
2003.
XML-Based Dialogue Descriptionsin the GEMINI Project.
In Proc.
?Berliner XML-Tage2003?, pages 404?412, Berlin, Germany.S.W.
Hamerich, R. de Co?rdoba, V. Schless, L.F. d?Haro,B.
Kladis, V. Schubert, O. Kocsis, S. Igel, and J.M.Pardo.
2004a.
The GEMINI Platform: Semi-Automatic Generation of Dialogue Applications.
InProc.
ICSLP, pages 2629?2632, Jeju, Korea.S.W.
Hamerich, V. Schubert, V. Schless, R. de Co?rdoba,J.
M. Pardo, L. F. d?Haro, B. Kladis, O. Kocsis, andS.
Igel.
2004b.
Semi-Automatic Generation of Dia-logue Applications in the GEMINI Project.
In Proc.SIGdial, pages 31?34, Cambridge, USA.S.W.
Hamerich.
2005.
Speech Dialogue Systems forCars - an Overview.
SDV ?
Sprache und Datenver-arbeitung, 29(2):107?118.S.W.
Hamerich.
2007.
Towards Advanced SpeechDriven Navigation Systems for Cars.
In Proc.
IE,pages 247?250, Ulm, Germany.P.
Heisterkamp.
2001.
Linguatronic ?
Product-LevelSpeech System for Mercedes-Benz Cars.
In Proc.HLT, pages 1?2, San Diego, USA.V.
Schubert and S.W.
Hamerich.
2005.
The Dialog Ap-plication Metalanguage GDialogXML.
In Proc.
EU-ROSPEECH, pages 789?792, Lisbon, Portugal.Y.-F.H.
Wang and S.W.
Hamerich, 2008.
Dybkj?r, L. andMinker, W.
(Ed.
): Recent Trends in Discourse and Di-alogue, chapter Designing Speech-Controlled MediaFile Selection for Automotive Systems, pages 25?43.Springer, Dordrecht, Netherlands.95
