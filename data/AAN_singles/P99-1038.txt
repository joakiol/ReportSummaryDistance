Two Accounts of Scope Availabil ity and SemanticUnderspecif icationAl i s ta i r  Wi l l i s  and  Suresh  Manandhar ,Department of Computer Science,University of York,York Y010 5DD, UK.
{agw, suresh}@cs, york .
ac.
ukAbst rac tWe propose a formal system for representing theavailable readings of sentences displaying quan-tifier scope ambiguity, in which partial scopesmay be expressed.
We show that using a theoryof scope availability based upon the function-argument structure of a sentence allows a deter-ministic, polynomial time test for the availabil-ity of a reading, while solving the same problemwithin theories based on the well-formednessof sentences in the meaning language has beenshown to be NP-hard.1 In t roduct ionThe phenomenon of quantifier scope ambigu-ity has been discussed extensively within com-putational and theoretical linguistics.
Given asentence displaying quantifier scope ambiguity,such as Every man loves a woman, part of theproblem of representing the sentence's meaningis to distinguish between the two possible mean-ings:Vx(ma (x) -+ 3y(woma (y) A lo e(x, y)))where every man loves a (possibly) differentwoman, orwhere a single woman is loved by every man.One aspect of the problem is the generation ofall available readings in a suitable representa-tion language.
Cooper (1983) described a sys-tem of "storing" the quantifiers as A-expressionsduring the parsing process and retrieving themat the sentence level; different orders of quan-tifier retrieval generate different readings of thesentence.
However, Cooper's method generateslogical forms in which variables are not correctlybound by their quantifiers, and so do not cor-respond to a correct sentence meaning.
Thisproblem is rectified by nested storage (Keller,1986) and the Hobbs and Shieber (1987) al-gorithm.
However, the linguistic assumptionsunderlying these approaches have recently beenquestioned.
Park (1995) has argued that theavailability of readings is determined not by thewell-formedness of sentences in the meaning lan-guage, but by the function-argument relation-ships within the sentence.
His theory proposesthat only a subset of the well-formed sentencesgenerated by nested storage are available to aspeaker of English.
Although the theories havedifferent generative power, it is difficult to findlinguistic data that convincingly proves eithertheory correct.In the absence of persuasive linguistic data,it is reasonable to ask whether other groundsexist for choosing to work with either of thetwo theories.
This paper considers the appli-cation of both theories to the problem of un-derspecified meaning representation, and thequestion of determining whether a set of con-straints represents an available reading of anambiguous entence or not.
We show that aconstraint language based upon Park's linguis-tic theory (Willis and Manandhar, 1999) solvesthis problem in polynomial time, and contrastthis with recent work based on dominance con-straints which shows that using the more per-missive theory of availability to solve the sameproblems leads to NP-hardness.2 Underspec i f i ca t ionA recent area of interest has been with under-specified representations of an ambiguous en-tence's meaning, for example, Quasi-LogicalForm (QLF) (Alshawi and Crouch, 1992) andUnderspecified Discourse Representation The-293ory (UDRT) (Reyle, 1995).
We shall charac-terise the desirable properties of an underspec-ified meaning representation as:1. the meaning of a sentence should be rep-resented in a way that is not committed toany one of the possible (intended) meaningsof the sentence, and2.
it should be possible to incrementally intro-duce partial information about the mean-ing, if such information is available, andwithout the need to undo work that hasalready been done.A principal aim of systems providing an un-derspecified representation f quantifier scope isthe ability to represent partial scopings.
Thatis, it should be possible to state that some ofthe quantifiers have some scope relative to eachother, while remaining uncommitted to the rel-ative scope of the remaining quantifiers.
How-ever, representations which simply allow partialscopes to be stated without further analysis donot adequately capture the behaviour of quanti-tiers in a sentence.
Consider the sentence Everyrepresentative of a company saw most samples,represented in the style of QLF:_:see(<+i every x _:rep.of(x,<+j exists y co(y)>)>,<+k most z sample(z)>)A fully scoped logical form of this QLF is:\[+i,+k,+j\] :see(<+i every x rep.of(x,<+j exists y co(y)>)>,<+k most z sample(z)>)where the list of quantifier labels indicates the rela-tive scope of qnantifiers at that point in the sentence.Although this formula is well formed in the QLFlanguage, it does not correspond to a well formedsentence of logic, seeming closer to the formula:every (x, rep. of (x, y), most (z, sample (z),exists(y, co(y), see(x, z))))where the variable y does not appear in thescope of its quantifier.
A language such asQLF will generally allow this scoping to be ex-pressed, even though it does not correspond toa reading available to a speaker.
In QLF se-mantics, a scoping which does not give rise toany well formed readings is considered "uninter-pretable"; ie.
there is no interpretation i  whichan evaluation function maps the QLF onto atruth value.Our aim is to present a system in whichthere is a straightforward computational test ofwhether a well-formed reading of a sentence x-ists in which a partial scoping is satisfied, with-out requiring recourse to the final logical form.The language CLLS (Egg et al, 1998) has re-cently been developed which correctly generatesthe well-formed readings by using dominanceconstraints over trees.
Readings of a sentencecan be represented using a tree, where domi-nance represents outscoping, and quantifiers arerepresented using binary trees whose daughterscorrespond to the quantifiers' restriction andscope.
So for the current example, Every repre-sentative of a company saw most samples, thereading:every(x, a(y, co(y), rep.o f ( x, y ) ),most(z,  sample(z), see(x, z) ) )can be represented by the tree in figure 1, wherethe restrictions of a and most have been omittedfor clarity.
Domination in the tree representsoutscoping in the logical form.every / /~a ?
?
mostI I rep.o f ?
?
seeFigure 1: Representing relative scope as a treeUnderspecification can be captured by defin-ing dominance constraints between nodes rep-resenting the quantifiers and relations in a sen-tence.
Readings of the sentence with a freevariable are avoided by asserting that each re-lation containing a variable must be dominatedby that variable's quantifier, and an availablereading of the sentence is represented by a treein which all the dominance constraints are sat-isfied.
So the ill-formed readings of the sen-tence can be avoided by stating that the relationrep.of is dominated by the restriction of everyand the scope of a, while see is dominated by thescopes of both a and most.
This is representedin figure 2, where the dominance constraints areillustrated by dotted lines.Further partial scope information can beintroduced with additional dominance con-straints.
So the partial scope requirement that294?
Root jy: : ...............every ?
~ a ?
mosti/%., -rep.of" .
"-~ seeFigure 2: Representing available scopes withdominance constraintsmost should outscope very would be capturedby a constraint stating that the node represent-ing most should dominate the node representingevery in the constraints' olution.It is has been shown (Koller et al, 1998) thatdetermining the consistency of these constraintsis NP-hard.
In the rest of this paper, we showthat an alternative theory of scope availabilityyields a constraint system that can be solved inpolynomial time.3 A l te rnat ive  Account  o fAva i lab i l i tyThe NP-hardness result of the previous ectionarises from the assumption that the availabilityof scopings is determined by the well formednessof the associated logical forms.
Park (1995) hasproposed an alternative theory of scope avail-ability which states that available scopes areaccounted for by relative scopes of argumentsaround relations, whereby quantifiers may notmove across NP boundaries.
For example, con-sider the sentence Every representative of acompany saw most samples, containing two rela-tions, saw and of.
Around saw, every (represen-tative of a company) can outscope most (sam-ples), or vice versa, and around of, every (rep-resentative) can outscope a (company), or viceversa.
Park generalises this observation to theclaim that for any n-ary relation in a sentence,there are n!
possible orderings of quantified ar-guments around that relation.
Other quanti-tiers in the sentence should not "intercalate" be-tween those which are single arguments to a re-lation.
So in the example sentence there are fourpossible scopes, because there are 2!
= 2 scop-ings around saw and 2!
= 2 scopings aroundof.
What is not possible is a reading where aoutscopes most which outscopes every; althoughthis can be represented by a well formed sen-tence of logic (with no unbound variables), it isnot available to a speaker of English.By using this theory as the basis of under-specification, we can say:?
underspecification is to be captured by al-lowing different possible relative scope as-signments around the predicates, and?
partial scopes between arbitrary quanti-tiers in the sentence will be translated intothe equivalent scoping of quantifiers aroundtheir predicates.The chosen representation will be based upon asentence's quantifiers and relations (for exam-ple, verbs and prepositions).Quantifiers and the relations which determinetheir relative scope are represented by a set ofelements under a strict partial order, where theordering represents he relative scopes.
A strictorder will be taken to be transitive, antisym-metric and irreflexive.
However, because theinteraction between the predicates in the sen-tence has implications for possible scopings, itis also necessary to consider the relationshipsbetween the ordered sets.Consider again the sentence Every man lovesa woman.
The quantifiers and relation in thissentence can be represented by a set of elements{every, a, love}.
A strict partial order, ~-, is de-fined over the set which states that the relationlove must be outscoped by both quantifiers:({every, a, love}, (every ~- love, a ~- love))The partial order states that both quantifiersoutscope the verb, but says nothing about theirscopes relative to each other.
This represents acompletely underspecified meaning.
An unam-biguous reading of the sentence is representedwhen ~- defines a total order on the set.
So ifthe relation every ~- a were added, the reading:Vx.man(x)  --~ 3y.woman(y)  A love(x, y)every ~- a ~- lovewould be represented.
Alternatively, addinga ~- every to the underspecified form would rep-resent he reading:3y.woman(y)  A Vx.man(x)  -+ love(x, y)a ~- every ~- love295The introduction of a further relation whichdoes not lead to a well formed sentence (suchas love ~- every) is shown by the irreflexivity of~- being violated.While using a single set of elements correctlyaccounts for the possible scopes of quantifiers inthe sentences discussed so far, relative clausesand prepositional ttachment to NPs are morecomplex.
Consider the sentence Every repre-sentative of a company saw most samples.
Thepresence of two binary relations, of and saw,implies that there should be 2!.2!
-- 4 readings.Continuing with the system developed so far,these possibilities could be represented by a pairof strictly partially ordered sets:({every, most, see} , (everyNsee ,  most Nsee))({every, a, of},  (every ~' of, a ~' of))where the four possible ways of completing thestrict orders on the sets correspond to the fouravailable readings.
To represent relative scopebetween arbitrary quantifiers in the sentence,a further transitive relation, .>, is defined.
Saythat if (S, ~-) is a strictly partially ordered set inthe structure where x, y E S and x ~- y then x .>y.
So for example, consider the pair of strictlypartially ordered sets:({every, most, see} , (every~most~see) )({every, a, of},  (a ~' every ~-' of))which would represent the reading (in a formatsimilar to generalised quantifiers):a(y, every(x, rep.of(x, y),most(z, sample(z), see(x, z))))The orders on the sets state that every .
:> mostsee and a .> every .
:> of,  and from the transi-tivity of .> it can be inferred (correctly) thata .
:> most.
Similarly, given the ambiguous en-tence and the partial scope requirement thata should outscope most, the required partialscope can be obtained by adding the relationsa ~-~ every and every ~- most.The transitivity of .> is not enough to cap-ture all the available scope information.
Sup-pose it were required that most should outscopea.
There are two readings of the sentence whichsatisfy this partial scope, those being:most(z, sample(z),every(x, a(y, co(y), rep.of (x, y)), see(x, z)))andmost(z, sample(z), a(y, co(y),every(x, rep.oI (x, y), see(x, z)))).These readings are precisely those for which theobject of see outscopes its subject; the partialscope is captured by the pair:({every, most, see}, (most ~- every ~- see))({every, a, of},  (every ~-' of, a ~-' of))where there is no additional information aboutthe relative scope of every and a.
However, thetransitivity of -> alone does not capture the factthat most .
:> a follows from most .
:> every.We remedy this by defining a domination re-lation.
In the current case, say that every dom-inates a, which means that a is nested withinthe QNP whose head quantifier is every.
Thenbecause quantifiers may not "intercalate" acrossNP boundaries, anything that outscopes everyalso outscopes anything that every dominates(here, a); if most outscopes one it must outscopeboth.
We capture this behaviour by putt ingthe sets into a tree structure, where each of thenodes is one of the strictly ordered sets repre-senting the scopes around a relation.
For anynode, N, each of the daughter nodes has (ex-actly) one element in common with N, oth-erwise, any element appears only once in thestructure.
So, consider again the sentence Ev-ery representative of a company saw most sam-ples.
The scope information of the underspeci-fled form is represented by the tree:({every, most, see}, (every see, most see))/({every, a, o f} , (every  ~-' of, a ~' of))Now, say that an element X dominates anotherelement Y (denoted as X ~-~ Y) if X and Y are(distinct) elements in a set at some node, and Xis also in the parent node.
Also, ~-+ is transitiveand irreflexive.
So in the example given:every ~-+ a and every ~ o f ,but every ~-+ every.We can now extend the definition of -> bysaying that:296if (P,~-) is a node in the tree, andx, y E P and x ~- y, then x.>y and x.>zwhere z is any term that y dominates.Also, .> is transitive and irreflexive.This captures the scoping behaviour for nestedquantifiers.
So from the ambiguous representa-tion of scopes:({every, most, see}, (most every see))I({every, a, of}, (every of, a of))where most ~-- every and every ~ a, it is pos-sible to infer correctly that most .> a, whateverthe relation is between every and a.4 Formal  Def in i t ion  o f  ScopeRepresentat ionsWe now provide a formal description of thestructures described in section 3.
The defini-tion is divided into two parts.
First a scopestructure is defined, which is a tree structurewhose nodes are sets under a strict order anddescribes the correct possible scopings of quan-tiffed arguments around their relations.
Next, ascope representation is defined, which is the pairof a scope structure and an outscoping relation,?
>, which is defined over all the elements in thestructure.The analysis presented here differs from thatof the previous section in that the nodes inthe scope ~ structures are sets under a strict to-tal order, rather than under a partial order.The structures therefore represent unambigu-ous readings of the sentence.
Underspecifica-tion will then be captured in the constraint lan-guage, rather than in the underlying structures,as discussed in section 5.A scope structure is a finite tree, where eachnode of the tree is a finite, non-empty set of el-ements, P, taken from a set (9 = {a,/~,-),,...}under a strict total order.
For any node, eachdaughter node is also a strictly ordered set, suchthat each daughter set di has exactly one el-ement in common with P, a different elementfor each of the di.
An element can only appearonce in the tree, unless it is the common nodebetween a mother and a daughter.
So:is a correct scope structure, because no elementappears twice except c~ and 8, which appear inmother/daughter pairs (the ordering relationshave been omitted for clarity).A scope structure is defined as a triple (P, ~-, :D), where P is a set of elements, ~- is a stricttotal order over P and 7:) is the set of daughters.We say that an element occurs in a scope struc-ture if it is a member of the set at any node inthe scope structure.
If (9 is a (countable) setof elements, then scope structures can be recur-sively defined as:?
If S = (Ps, >-s, {}), where Ps is a finite,non-empty subset of (9 and >-s is a stricttotal order on Ps, then S is a scope struc-ture, where:1. if x E Ps, then x occurs in S,?
If R and S are scope structures uch thatR = (PR, ~R, DR) and S = (Ps, ~-s, :DS),where no element occurs in both R andS, and there is some element a such thata E Pn, then if T = (PT, N'T,~T), wherePT = {a} t2 Ps, T~T = {R} U :Ds and ~-T isa strict total order on PT then T is a scopestructure, where:1.
If some element x occurs in either Ror S then x occurs in T2.
If some element x occurs in R and xa, then a dominates x in T3.
If x and y occur in R and x dominatesy in R then x dominates y in T4.
If x and y occur in S and x dominatesy in S then x dominates y in TIf S is a scope structure, then a node in S isdefined as:?
If S is a scope structure such that S --(Ps, >-s, T~S), then:- (Ps, >'-s) is a node in S- if di E :Ds, then any node in di is anode in S.Having defined scope structures, we now de-fine a scope representation, which is a pairiS, ">s), where S is a scope structure and ">s isa relation between pairs of elements which oc-cur in S. ">s represents outscoping between any297pair of elements in the structure, rather thanjust between elements at a common node.If S is a scope structure such that S =(Ps ,~-s ,7 )s ) ,  then (S, >s)  is a scope represen-tation, where ">s is the min imum relation suchthat:* If (P, ~-p) is a node in S and x, y E P andx N-p y, then x ">s Y.?
If (P, ~-p) is a node in S and x, y E P andx ~-p y, then i fz is an element which occursin S and y dominates z in S then x ">s z.?
">s is transitive.If (S, ">s) is a well formed scope representation,then ">s is a strict partial order over the set ofelements which occur in S.5 Const ra in ts  fo r  ScopeUnderspec i f i ca t ionWe now consider a constraint language for rep-resenting the available scopes in a sentence.
Thestructure of the sentence can be defined in termsof common arguments to a relation (which isrepresented by membership of a common set inthe scope structure) and the domination rela-tion.
The constraint language is:?, ?
::= x o y Common set membershipx ?--+ y Dominationx D y Outscoping~b A ?
Conjunctionwhere x, y are members of a (countable) set ofconstants, COAl  = {x, y, z, .
.
.
}.It is intended that these constraints be de-fined over terms in an underspecified semanticrepresentation, such as QLF or UDRT, with afunction mapping grammatical objects in therepresentation onto members of CON.
Repre-senting the quantifiers and relations in the sen-tence is sufficient for our current needs.
Con-straints of the form x o y (where o is symmetric)state either that x and y represent common ar-guments to a relation, or that x and y representa relation and a quantifier which quantifies overit.
Constraints of the form x ~-4 y indicate thatx is the head quantifier of a complex NP, inwhich y, another grammatical object (either aquantifier or a relation), is nested.So for example, consider again the sentenceEvery representative of a company saw mostsamples, and assume that terms in the un-derspecified representation representing the thegrammatical objects every, exists, most, rep.ofand see map onto the elements e, a, m, o and srespectively, where {e, a, m, o, s} C CON.
Thenthe constraint representing the fully underspec-ified meaning is:eosAmosAeomAsoeAsomAmoeAeooAaooAeoaAooeAooaAaoeAe c-~ a A e ~-+ oAei> sAe~oAmi> sAaDoNote that the symmetry of o is stated explic-itly in the constraint.
The (underspecified) con-straint is generated either from the grammaror directly from the underspecified structure, sothe inference rules for determining the availabil-ity of a partial scope only generate constraintsof the form X t> Y.
These rules are discussedfurther in section 6.
Underspecification is nowcaptured within the constraint language; notethe parallels between the constraints of the formX t> Y in this example and the partial ordersused in section 3.The satisfiability of the constraints is givenin terms of the scope representations defined insection 4.
A scope representation, (S, ">s), sat-isfies a constraint of the form X o Y if (P, >-p)is a node in S such that X',  Y' E Ps,  X '  # Y ' ,where some assignment function maps X andY onto X '  and Y'.
Similarly, constraints of theform X ~-+ Y are satisfied if X '  dominates Y'in S, and constraints of the form X D Y aresatisfied if X '  ">s Y'.
So the above constraint issatisfied by a set of scope structures of the form:({every,  most ,  see}, >-)/({every,  a, o f} ,  ~-')where the assignment function maps the con-stants e,a ,m,o  and s onto the elementsevery,  a, most ,  o f  and see respectively, andwhere every ~- see, most  ~- see, every ~-' o fand a ~-' o f .We can now define the semantics for the con-straint language.
An assignment function, I\[-~/,maps constants of the constraint language onto298elements which occur in S and wffs of the con-straint language onto one of the pair of values{t , f} .
I is a pair ((I),~4}, where (I) is a scoperepresentation, such that (I) = (S, ">s}, and .4 isa function mapping constants of the constraintlanguage onto the set of elements which occurin S. The denotation of the constraints i thengiven by:?
IX~ I -= ,A(X) if X is a constant in theconstraint language.?
IXoY \ ]  I = t if there is a node in S, (P, N-p),such that IX~ I E P and \[\[y\]\]/ E P and\[\[X\]\]I ~ \[\[y\]\]1, otherwise IX  o y \ ] I  = f .?
IX  ~ y \ ] I  = t if IX~ I dominates ~y~I inS, otherwise IX  ~-+ y~I  = f .?
IX  ~> Y~I = t if IZ\ ]  I >s lynX, otherwiseotherwise \[\[?
A ?\]\]" ---- f .Satisfiability A constraint set, A, is satisfiableiff there is at least one I such that I?~ / = tfor all constraints ?
where ?
E A.The satisfiability of a constraint set representsthe existence of a reading of the sentence whichrespects the partial scoping.6 Ava i lab i l i ty  o f  Partial ScopesWe now turn to the question of determiningwhether a partial scoping is available.
In sec-tion 3 it was stated that scope availability isaccounted for by the relative scope of quanti-tiers around their predicates.
It turns out (al-though we do not prove it here) that for anypartial scoping, there is a necessary and suffi-cient set of scopings of quantifiers around theirrelations that gives the partial scoping.
For ex-ample, we showed that for the sentence Everyrepresentative of a company saw most samples,the readings where most outscopes a are exactlythose where the subject of see outscopes its ob-ject.
Therefore, from the constraint most C> a,it should be possible to infer most E> every.
Theaim of the constraint solver is to determine whatscopings of quantifiers about their relations arerequired to obtain the required partial scoping,and therefore to state whether the partial scopeis available.A set of rules is defined on the constraints,so that additional scope information may be in-ferred.
The introduction of further scope con-straints does not affect scope information al-ready present (monotonicity).
The rules aregiven in figure 3, where F represents any con-junction of literals and the associativity andcommutativity of A are assumed.
The infer-ence rules S1, $2 and $3 operate by recursivelyreducing the (arbitrary) outscoping constraintX~>Z to X I>YAYE>Y~,  where Y and Y~represent arguments to a common relation, andY' either dominates or is equal to Z. Repeatedapplication of these constraints gives the set ofscopes of quantifiers around their relations forthe initial partial scoping.
The rules Transand Dora then generate the remaining possiblescope constraints.
If a scope is unavailable, thencompleting the transitive closure of D across thestructure yields a constraint of the form X ~> X.We then say that:?
A constraint set is in normal \]orm iff ap-plying the rules S1, $2, $3, Trans and Domdoes not yield any new constraints.If F is a constraint set in normal form then:?
F represents an available scoping iff it doesnot contain a constraint of the form X ~> X.?
F represents a complete scoping iff it rep-resents an available scoping, and for everyconstraint of the form X o Y there is eithera constraint X D Y or a constraint Y D X.The condition for a scoping to be available fol-lows from the irreflexivity of ->.
The conditionfor a scoping to be complete states that if twoelements are arguments to a relation, or are a re-lation and one of its arguments, then they musthave scope relative to each other.
This corre-sponds to considering sets under a total order,rather than under a partial order.Complex i ty  Issues Let F be a constraintrepresenting an available scoping of a sentence,and let X~>Y be a constraint representing a par-tial scope between two terms in that sentence.Then the worst case of applying the inferencerules to F A X ~> Y to saturation turns out tobe equivalent o completing the transitive clo-sure of i>, which is known to be soluble in betterthan O(n 3) time (Cormen et al, 1990), wheren is the number of elements in the structure.299S1 :$2 :$3 :Trans:Dora:F AX  oY  AX ~ Xt AXtC> Y F X ~> Y AXtC> XF A X o Y A Y ?-4 Y'  A X t> Yt I- X i:> YF AX oY  AX ,--~ X~ AY , -+ YI AXIC> y '~-X 'D  X AXC> YF AX t> Y AYt> Z~- X c> ZF AX o Y AX ~> Y A Y c-.+ Zt -  X t> Zwhere F is any conjunction of literals.Figure 3: Rules of inferenceApplication of rules $1, $2 and $3 to comple-tion can be completed in linear time; if X i> Yis a constraint between two arbitrary quanti-tiers X and Y where X fi Y, then exactly oneof the rules S1, $2 or $3 applies (lack of spaceprevents us proving this here).
If X o Y, thennone of these three rules applies.
Application ofS1, $2 or $3 adds at most two new constraints,of which at most one is a scope constraint XC>Y ~where X fi Y~.
At most n - 1 such constraintsare generated.Application of the rules S1, $2 and $3 re-duces an arbitrary partial scope into relativescopes of arguments around their relations.
Ifa scoping is unavailable, this is represented bythe irreflexivity of C> being violated.
Testing forthis requires that the transitive closure of C> becompleted; this is known to be soluble in betterthan cubic time.
We conclude that testing forthe availability of a partial scope in this frame-work can be achieved in better than cubic timein the worst case.7 Conc lus ion  and  CommentsA desirable property for an underspecified rep-resentation ofquantifier scope ambiguity is thatthere should be a computationally efficient estfor whether a partial scope is available or not.We have shown that accepting a theory of avail-ability which states that scope availability is de-termined by the function-argument structure ofa sentence allows the development of a test foravailability which is polynomial in the numberof quantifiers and relations in a sentence, whiletheories of availability based upon the logicalwell-formedness of meaning representations hasbeen shown to be NP-hard.Acknowledgements  The authors would liketo thank Alan Frisch, Mark Steedman and threeanonymous reviewers for useful comments.
Thefirst author is funded by an EPSRC grant.Re ferencesH.
Alshawi and R. Crouch.
1992.
MonotonicSemantic Interpretation.
In Proceedings ofthe 30th Annual Meeting of the ACL, pages32-39, Newark, Delaware.R.
Cooper.
1983.
Quantification and SyntacticTheory.
Reidel.T.
Cormen, C. Leiserson, and R. Rivest.
1990.Introduction to Algorithms.
The MIT Press,Cambridge, Massachusetts.M.
Egg, J. Niehren, P. Ruhrberg, and F. Xu.1998.
Constraints over lambda-structures insemantic underspecification.
In Proceedingsof the 17th International Conference on Com-putational Linguistics and 36th Annual Meet-ing of the A CL, Montreal, Canada.J.
Hobbs and S. Shieber.
1987.
An algorithmfor generating quantifier scopings.
Computa-tional Linguistics, 13.W.
Keller.
1986.
Nested Cooper storage:The proper treatment of quantification inordinary noun phrases.
In U. Reyle andC.
Rohrer, editors, Natural Language Parsingand Linguistic Theory, Studies in Linguisticsand Philosophy, pages 432-437.
Reidel.A.
Koller, J. Niehren, and R. Treinen.
1998.Dominance constraints: Algorithms and com-plexity.
In Third International Conference onLogical Aspects of Computational Linguistics(LA CL '98), Grenoble, France.J.C.
Park.
1995.
Quantifier scope and con-stituency.
In Proceedings of the 33rd AnnualMeeting of the Association for ComputationalLinguistics, pages 205-212.
Cambridge, MA.U.
Reyle.
1995.
On reasoning with ambiguities.In Proceedings of the EA CL, Dublin.A.
Willis and S. Manandhar.
1999.
The avail-ability of partial scopings in an underspeci-fled semantic representation.
In 3rd Interna-tional Workshop on Computational Seman-tics, Tilburg, the Netherlands, January.300
