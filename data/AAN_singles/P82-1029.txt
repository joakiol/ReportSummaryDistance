At~3MENTING A DATABASE KNOWLEDGE REPRESENTATIONFOR NATURAL LANGUAGE GENERATION*Kathleen F. M~CoyDept.
of Computer and Information ScienceThe Moore SchoolUniversity of PennsylvaniaPhiladelphia, Pa. 19104ABSTRACTThe knowledge representation is an importantfactor in natural language generation since itlimits the semantic capabilities of the generationsystem.
This paper identifies several informationtypes in a knowledge representation that can beused to generate meaningful responses to questionsabout database structure.
Creating such aknowledge representation, however, is a long andtedious process.
A system is presented which usesthe contents of the database to form part of thisknowledge representation automatically.
Itemploys three types of world knowledge axioms toensure that the representation formed ismeaningful and contains salient information.representation reflects both the database contentsand the database designer's view of the world.One important class of questions involvescomparing database entities.
The system'sknowledge representation must therefore containmeaningful information that can be used to makecomparisons (analogies) between various entityclasses.
This paper focuses specifically on thoseaspects of the knowledge representation generatedby ENHANCEwhich facilitate the use of analogies.An overview of the knowledge representation usedby TEXT is first given.
This is followed by adiscussion of how part of this representation isautomatically created by ENHANCE.i.
0 IN'IIRODUCTIONIn order for a user to extract meaningfulinformation from a database system, s/he mustfirst understand the system's view of the worldwhat information the system contains and what thatinformation represents.
An optimal way ofacquiring this knowledge is to interact, innatural language, with the system itself, posingquestions to it about the structure of itscontents.
The TEXT system \[McKeown 82\] wasdeveloped to fac i~te  this type of interaction.In order to make use of the TEXT system, asystem's knowledge about itself must be richenough to support the generation of interestingtexts about the structure of its contents.
As Iwill demonstrate, standard database models \[Chen76\], \[Smith & Smith 77\] are not sufficient tosupport this type of generation.
Moreover, sincetime is such an important factor when generatinganswers, and extensive inferencing is thereforenot practical, the system's self knowledge must bei~ediately available in its knowledgerepresentation.
Tne ENHANCE system, describedhere, has been developed to augment a databaseschema with the kind of information necessary forgenerating informative answers to users' queries.The ENHANCE system creates part of the knowledgerepresentation used by TEXT based on the contentsof the database.
A set of world knowledge axiomsare used to ensure that this knowledge~ r k  was partially supported by NationalScience 5oundatlon grant #MCS81-07290.2.0 KNOWLEDGE REPRESENTATION FOR G~ERATIONThe TEXT system answers three types ofquestions about database structure: (i) requestsfor the definition of an entity; (2) requests forthe information available about an entity;(3) requests concerning the difference betweenentities.
It was implemented and tested using aportion of an 0NR database which containedinformation about vehicles and destructivedevices.TEXT needs several types of information toanswer the above questions.
Some of this can beprovided by features found in a variety ofstandard database models \[Chen 76\], \[Smith & Smith77\], \[Lee & Gerritsen 78\].Of these, TEXT uses a generalizationhierarch Z on the entities in order to define oridentify them in terms of (I) their constituents(e.g.
"There are two types of entities in the ONRdatabase: destructive devices and vehicles.
"*)(2) their superordinates (e.g.
"A destroyer is asurface ship .. A bomb is a free fallingprojectile."
and "A whiskey is an underwatersubmarine ...").
Each node in the hierarchycontains additional descriptive information basedon standard features which is used to identify thedatabase information associated with each entityand to indicate the distinguishing features of theentities.
* The quoted material is excerpted from actualoutput from TEXT.121One type of comparison that TEXT mustger~erate has to do with indicating why aparticular individual falls into one entitysub-class as opposed to another.
For example, "Aship is classified as an ocean escort if thecharacters 1 through 2 of its HULL NO are DE ...A ship is classified as a cruis--er if thecharacters 1 through 2 of its HULL NO are CG."
and"A submarine is classified as an e~ho II if itsCLASS is ECHO II."
In order to generate this kindof comparison, TEXT must have available databaseinformation indicating the reason for a split inthe generalization hierarchy.
This information isprovided in the based DB attribute.In comparing two entities, TEXT must be ableto identify the major differences between them.Part of this difference is indicated by thedescriptive distinguishing features of theentities.
For example, "The missile has a targetlocation in the air or on the earth's surface ...The torpedo has an underwater target location.
"and "A whiskey is an underwater submarine with aPROPULSION TYPE of DIESEl and a FLAG of RDOR.
"These dist'inguishing features consist of a numberof attribute-value* pairs associated with eachentity.
They are provided in an information typetermed the distinguishing descriptive attributes(DDAs) of an entity.In order for TEXT to answer questions aboutthe information available about an entity, it musthave access to the actual database informationassociated with each entity in the generalizationhierarchy.
This information is provided in whatare termed the actual DB attributes (and constantvalues) and the r ela'~i6nal atEr ibutes (andvalues).
This informa?ioh -is also useful incomparing the attributes and relations associatedwith various entities.
For example, "Other DBattributes of the missile includePROBABILITY OF KILL, SPEED, ALTI~DE ... Other DBattributes -of- the torpedo include FUSE TYPE,MAXIMUM DEPTH, ACCURACY & UNITS..." and "Echo IIscarry 16 torpedoes, betwe--e~ 16 and 99 missiles and0 guns.
"3.0 AUGMENTING THE KNOWLEDGE REPRESENTATIONThe need for the various pieces ofinformation in the knowledge representation isclear.
How this representation should be createdremains unanswered.
The entire representationcould be hand coded by the database designer.This, however, is a long and tedious process andtherefore a bottleneck to the portability of TEXT.In this work, a level in the generalizationhierarchy is identified that contains entities forwhich physical records exist in the database~4~tabase entity classes).
It is asstmled that thehierarchy above this level must be hand ceded.The information below this level, however, can bederived f r~ the contents of the database itself.
* these attributes are not necessarily attributescontained in the database.The database entity classes can be subclassifiedon the basis of attributes whose values serve topartition the entity class into a number ofmutually exclusive sub-types.
For example, PEOPLEcan be subclassified on the basis of attributeSEX: MALE and FEMALE.
As pointed out by Lee andGerritsen \[Lee & Gerritsen 78\], some partitions ofan entity class are more meaningful than othersand hence more useful in describing the system'sknowledge of the entity class.
For example, apartition based on the primary key of the entityclass would generate a single member sub-class foreach instance in the database, thereby simplyduplicating the contents of the database.
TheENHANCE system relies on a set of world knowledgeaxioms to determine which attributes to use forpartitioning and which resulting breakdowns aremean ing f ul.For each meaningful breakdown of an entityclass, nodes are created in the generalizationhierarchy.
These nodes must contain theinformation types discussed above.
ENHANCEcomputes this information based on the facts inthe database.
The attribute used to partition theentity class appears as the based DB attribute.The DDAs are a list of actual DB attributes, otherthan the based DB attribute, which when takentogether distinguish a sub-class from all othersin the breakdown.
Since the sub-classes inheritall DB attributes from the entity class, thevalues of the attributes within the sub-class areimportant.
ENHANCE records the values of allconstant DB attributes and the range of values ofany DB attributes which appear in the DDA of anysibling sub-class.
These can be used by TEXT tocompare the values of the DDAs of one sub-classwith the values of the same attributes within asibling sub-class.
The values of relationalattributes within a sub-class are also recorded byENHANCE.The descriptive information will be used bythe generation system to indicate how thesub-classes differ.
It is therefore importantthat the most salient differences between thesub-classes are indicated.
Here again, the worldknowledge axioms are used to guide the systam inchoosing the most salient information.The world knowledge axioms fall into threecategories which reflect the extent to which theymust be changed when applying ENHANCE to a newdatabase.
~hey range from very specific axioms,which must always be changed, to very generalaxioms, which are domain independent.
The axiomsand their use by the system will be describedafter first giving an example of a questionanswered by TEXT based on information created byENHANCE.3.1 EXAMPLE USING AUGMENTED REPRESENTATIONThis example illustrates how TEXT integratesthe above information to form meaningfulcomparisons between entities.
This example istaken from actual TEXT output in response to the122question: What is the difference between anOCEAN-ESCORT and a CRUISER?
*i) The cruiser and the ocean escort aresurface ships.
2) The ship's surface-goingcapabilities are provided by the DB attributesDISPLACEMENT and DRAFT.
3) The ship has DBattributes MAXIMUM_SPEED, PROPULSION, FUEL(FUEL CAPACITY and FUEL TYPE), DIMENSIONS,SPE~DEPENDENT RANGE and OFFICIAL NAME.4) Ocean escorts have a DISPLACEMENT ~tween3400 and 4100.
5) All ocean escorts in theONR database have R~MARKS of 0, FUEL TYPE ofBNKR, FLAG of BLBL and MAST HEIGHT--of 85.6) Ocean escorts carry between 2 and 22torpedoes, 16 missiles and between 1 and 2guns.
7) A ship is classified as an oceanescort if the characters 1 through 2 of itsHULL NO are DE.
8) Cruisers have a PROPULSIONof S--TMTURGRD and a LENGTH between 510 and 673.9) All cruisers in the ONR database haveRE~MA~S of 0.
I0) Cruisers carry between 8and 42 torpedoes, between 4 and 98 missilesand between I and 4 guns.
ii) A ship isclassified as a cruiser if the characters 1through 2 of its HULL NO are CL or thecharacters i through 2 o~ its HULL NO are CG.12) The ocean escort, therefore, has a smallerLENGTH and a smaller DISPLACEMENT than thecruiser.The first sentence is derived from the factthat both ocean-escorts and cruisers are sub-typesof entity class ship.
TEXT then goes on todescribe some characteristics of the ship(sentences 2 and 3).
Information about the shipis part of the hand coded representation, it isnot generated by ENHANCE.
Next, thedistinguishing features (indicated by the DDA) ofthe ocean-escort are identified followed by alisting of its constant DB attributes (sentences 4and 5).
The values of the relation attributes arethen identified (sentence 6) followed by astatement drawn from the based DB attribute of theocean-escort.
Next, this same type of informationis used to generate parallel information about thecruiser.
1~e text closes with a simple inferencebased on the DDAs of the two types of ships.4.0 WORLD KNOWLEDGE AXIOMSIn order for the generation system to givemeaningful descriptions of the database, theknowledge representation must effectively captureboth a typical user's view of the domain and howthat domain has been modelled within the system.Without real world knowledge indicating what auser finds meaningful, there are several ways inwhich an automatically generated taxonomy maydeviate from how a user views the domain: (I) therepresentation may fail %o capture the user'spreconceived notions of how a certain database* The sentences are numbered here to simplify thediscussion: there are no sentence n~nbers in theactual material produced by TEXT.entity class should be partitioned intosub-classes; (2) the system may partition anentity class on the basis of a non-salientattribute leading to an inappropriate breakdown;(3) non-salient information may be chosen todescribe the sub-classes leading to inappropriatedescriptions; (4) a breakdown may fail to addmeaning to the representation (e.g.
a partitionchosen may simply duplicate information alreadyavailable).qhe first case will occur if the sub-types ofthese breakdowns are not completely reflected inthe database attribute names and values.
Forexample, even though the partition of SHIP intoits various types (e .g .
Aircraft-Carrier,Destroyer, etc.)
is very common, there may be noattribute SHIP TYPE in the database to form thispartition.
Th~ partition can be derived, however,if a semantic mapping between the sub-type namesand existing attribute-value pairs can beidentified.
In this case, the partition can bederived by associating the first few characters ofattribute HULL NO with the various ship-types.The ~ s~:~ific axioms are provided as a meansfor defl- ning such mappings.The taxonomy may also deviate from what auser might expect if the system partitions anentity class on the basis of non-salientattributes.
It seems very natural to have abreakdown of SHIP based on attribute CLASS, butone based on attribute FUEL-CAPACITY would seemless appropriate.
A partition based on CLASSwould yield sub-classes of SHIP such as SKORY andKITFY-HAWK, while one on FUEL CAPACITY could onlyyield ones like SHI PS-4~q~H- 10 0-FUEL-CAPAC ITY.Since saliency is not an intrinsic property of anattribute, there must be a way of indicatingattributes salient in the domain.
The specificaxioms are provided for this purpose.The user's view of the domain will not becaptured if the information chosen to describe thesub-classes is not chosen from attributesimportant to the domain.
Saliency is crucial inchoosing the descriptive information (particularlythe DDAS) for the sub-classes.
Even though aDESTROYER may be differentiated from other typesof ships by its ECONOMIC-SPEED, it seems moreinformative to distinguish it in terms of the morecommonly mentioned property DISPLACEMENT.
Hereagain, this saliency information is provided bythe specific axioms.A final problem faced by a system which onlyrelies on the database contents is that apartition formed may be essentially meaningless(adding no new information to the representation).This will occur if all of the instances in thedatabase fall into the same sub-cl~ss or if eachfalls into a different one.
Such breakdownseither exactly reflect the entity class as awhole, or reflect the individual instances.
Thissame type of problem occurs if the only differencebetween two sub-classes is the attribute thebreakdown is based on.
Thus, no trend can befound among the other attributes within thesub-classes formed.
Such a breakdown would add no123information that could not be trivially derivedfrom the database itself.
These types ofbreakdowns are "filtered out" using the @eneralax{oms.The world knowledge axioms guide ENHANCE toensure that the breakdowns formed are appropriateand that salient information is chosen for thesub-class descriptions.
At the same time, theaxioms give the designer control over therepresentation formed.
The axioms can be changedand the system rerun.
The new representation willreflect the new set of world knowledg e axioms.
Inthis way, the database designer can tune therepresentation to his/her needs.
Each axiomcategory, how they are used by ENHANCE, and theproblems each category solves are discussed below.4.1 Ver~ Specific AxiomsThe very specific axioms give the user themost control over the representation formed.
Theylet the user specify breakdowns that s/he would apriori like to appear in the  knowledgerepresentation.
The axioms are formulated in sucha way as to allow breakdowns On parts of the valuefield of a character attribute, and on ranges ofvalues for a numeric attribute (examples of eachare given below).
This type of breakdown couldnot be formed without explicit informationindicating the defining portions of the attributevalue field and their associated semantic values.A sample use of the very specific axioms canbe found in classifying ships by their type (ie.Aircraft-carriers, Destroyers, Mine-warfare-ships,etc...), qhis is a very common breakdown ofships.
Assume there is no database attributewhich explicitly gives the ship type.
With noadditional information, there is no way ofgenerating that breakdown for ship.
A userknowledgeable of the domain would note that thereis a way to derive the type of a ship based on itsHULL NO.
In fact, the first one or two charactersof \[he HULL NO uniquely identifies the ship type.~Dr example,--all AIRCRAFT-CARRIERS have a HULL NOwhose first two characters are CV, while the fi?sttwo characters of the HULL NO of a CRUISER are CAor CG or CL.
This information can be captured ina very specific axiom which maps part of acharacter attribute field into the sub-type names.An example of such an axiom is shown in Figure i.
(SHIP "SHIP HULL NO""OTHER-SH IP-TYPE"(I 2 "C~' "AIRCRAFT-CARRIER")(i 2 "CA" "CRUISER")(I 2 "CG" "CRUISER")(i 2 "CL" "CRUISER")(i 2 "DD" "DESTROYER")(i 2 "DL" "FRIGATE")(I 2 "DE" "OCEAN-ESCORT")(i 2 "PC" "PATROL-SHIP-AND-CRAFT")(i 2 "PG" "PATROL-SHIP-AND-CRAFT")(i 2 "PT" "PATROL-SHIP-AND-CRAFT")(i 1 "L" "AMPHIBIOUS-AND-LANDING-SHIP")(i 2 "MC" ,MINE-WARFARE-SHIP")(I 2 "MS" "MINE-WARFARE-SHIP")(i 1 "A" "AUXILIARY-SHIP"))Figure I.
Very Specific (Character) AxiomSub-typing of entities may also be specifiedbased on the ranges of values of a numericattribute.
For example, the entity BCMB is oftensub-typed by the range of the attributeBOMB WEIGHT.
A BOMB is classified as being HEAVYif i~s weight is above 900, MEDIUM-WEIGHT if it isbetween 100 and 899, and LIGHT-WEIGHT if itsweight is less than i00.
An axiom which specifiesthis is shown in FIGURE 2.
(BOMB "BCMB WEIGHT""OTHER-WEIGHT-BOMB"(900 99999 "HEAVY-BOMB")(i00 899 "MEDIUM-WEIGHT-BOMB" )(0 99 "LIGHT-WEIGHT-BOMB") )Figure 2.
Very Specific (Numeric) AxiomFormation of the very specific axiomsrequires in-depth knowledge of both the domain thedatabase reflects, and the database itself.Knowledge of the domain is required in order tomake common classifications (breakdowns) ofobjects in the domain.
Knowledge of the databasestructure is needed in order to convey thesebreakdowns in terms of the database attributes.It should be noted that this type of axiom is notrequired for the system to run.
If the user hasno preconceived breakdowns which should appear inthe representation, no very specific axioms needto be specified.4.2 Specific AxiomsThe specific axioms afford the user lesscontrol than the very specific axioms, but arestill a powerful device.
The specific axiomspoint out which database attributes are moreimportant in the domain than others.
They consist124of a single list of database attributes called theim~ortant attributes list.
The importantat?ributes list does not "control" the system asthe very specific axioms do.
Instead it suggestspaths for the system to try; it has no bindingeffects.
The important attributes list used fortesting ENHANCE on the ONR database is shown inFigure 3.
(CLASS FLAGDISPLACEMENTLENGTHWEIGHTLETHAL RADIUSMINIMUM ALTITUDEACCURAC~HO~Z RANGEMAXIMUM ALTITUDEFUSE TYPEPROPULS I ON TYPEPROPULSI ON--MAXIMUM OPERATING DEPTHPRI~YZRo~) -Figure 3.
Important Attributes ListENHANCE has two major uses for the importantattributes list: (i) It attempts to formbreakdowns based on some of the attributes in thelist.
(2) It uses the list to decide whichattributes to use as DDAs for a sub-class.ENHANCE must decide which attributes are better asthe basis for a breakdown and which are better fordescribing the resulting sub-classes.
While mostattributes important to the domain are good fordescriptive purposes, character attributes arebetter than others as the basis for a breakdown.Attributes with character values can morenaturally be the basis for a breakdown since theyhave a small set of legal values.
A breakdownbased on such an attribute leads to a smallwell-defined set of sub-classes.
Nt~mericattributes, on the other hand, often have aninfinite number of legal values.
A breakdownbased on individual numeric values could lead to apotentially infinite number of sub-classes.
Thisdistinction between numeric and character(symbolic) attributes is also used in the TEAMsystem \[Grosz et.
al.
82\].
ENHANCE firstattempts to form breakdowns of an entity based oncharacter attributes from the important attributeslist.
Only if no breakdowns result from theseattempts, does the system attempt breakdowns basedon numeric attributes.The important attributes list also plays amajor role in selecting the distinguishingdescriptive attributes (DDAs) for a particularsub-class.
Recall that the DDAs are a set ofattributes whose values differentiate onesub-class from all other sub-classes in the samebreakdown.
It is often the case that several setsof attributes could serve this purpose.
In thissituation, the important attributes list isconsulted in order to choose the most salientdistinguishing features.
The set of attributeswith the highest number of attributes on theimportant attributes list is chosen.The important attributes list affords theuser less control over the representation formedthan the very specific axioms since it onlysuggests paths for the system to take.
The systemattempts to form breakdowns based on theattributes in the list, but these breakdowns aresubjected to tests encoded in the general axiomswhich are not used for breakdowns formed by thevery specific axioms.
Breakdowns formed using thevery specific axioms are not subjected to as manytests since they were explicitly specified by thedatabase designer.4.3 General AxiomsThe final type of world knowledge axioms usedby ENHANCE are the general axioms.
These axiomsare domain independent and need not be changed bythe user.
They encode general principles used fordeciding such things as whether sub-classes formedshould be added to the knowledge representation,and how sub-classes should be named.The ENHANCE system must be capable of namingthe sub-classes.
The name must uniquely identifya sub-class and should give some semanticindication of the contents of the sub-class.
Atthe same time, they should sound reasonable to the~HANCE user.
These problems are handled by thegeneral axioms entitled naming conventions.
Anexample of a naming convention is:Rule 1 - The name of a sub-class of entity ENTformed using a character* attribute with valueVAL will be: VAL-ENT.Examples of sub-classes named using this ruleinclude: WHISKY-SUBMARINE and FORRESTAL-SHIP.The ENHANCE system must also ensure that eachof the sub-classes in a particular breakdown aremeaningful.
For instance, some of the sub-classesmay contain only one individual from the database.If several such sub-classes occur, they arecombined to form a CLASS-OTHER sub-class.
Thisuse of CLASS-OTHER compacts the representationwhile indicating that a number of instances arenot similar enough to any others to form asub-class.
The DDA for CLASS-OTHER indicates whatattributes are common to all entity instances thatfail to make the criteria for membership in any ofthe larger named sub-classes.
Without CLASS-OTHERthis information would have to be derived by thegeneration system; this is a potentially timeconsuming process.
The general axioms containseveral rules which will block the formation of"CLASS-OTHER" in circumstances where it will notadd information to the representation.
These* This is a slight simplification of the ruleactually used by EN}~NCE, see \[McCoy 82\] forfurther details.125include:Rule 2 - Do not form CLASS-(TfHER if it willcontain only one individual.Rule 3 - Do not form CLASS-OTHER if it will bethe only child of a superordinate.Perhaps the most important use of the generalaxioms is their role in deciding if an entirebreakdown adds meaning to the knowledgerepresentation.
The general axioms are used to"filter out" breakdowns whose sub-classes eitherreflect the entity class as a whole, Or the actualinstances in the database.
They also containrules for handling cases when no differencesbetween the sub-classes can be found.
Examples ofthese rules include:Rule 4 - If a breakdown results in theformation of only one sub-type, then do notuse that breakdown.Rule 5 - If every sub-class in two differentbreakdowns contains exactly the sameindividuals, then use only one of thebreakdowns.5.0 SYSTEM OVERVIEWThe ENHANCE system consists of ~ set ofindependent modules; each is responsible forgenerating some piece of descriptive informationfor the sub-classes.
When the system is invokedfor a particular entity class, it first generatesa number of breakdowns based on the values in thedatabase.
These breakdowns are passed from onemodule to the next and descriptive information isgenerated for each sub-class involved.
Thisprocess is overseen by the general axioms whichmay throw out breakdowns for which descriptiveinformation can not be generated.Before generating the breakdowns from thevalues in the database, the constraints on thevalues are checked and all units are converted toa common value.
Any attribute values that fail tomeet the constraints are noted in therepresentation and not used in the calculation.From these values a number of breakdowns aregeneratc~d using the very specific and specificaxioms.The breakdowns are first passed to the"fitting algoritl~n".
~en two or more breakdownsare generated for an entity-class, the sub-classesin one breakdown may be contained in thesub-classes of the other.
In this case, thesub-classes in the first breakdown should appearas the children of the sub-classes of the secondbreakdown, adding depth to tl~ hierarchy.
~efitting algorit|un is used to calculate where thesub-classes fit in the generalization hierarchy.After the fitting algoritt~ is run, the generalaxioms may intervene to throw out any breakdownswhich are essentially duplicates of otherbreakdowns (see rule 5 above).At this point, the DDAs of the sub-classeswithin each breakdown are calculated.
Thealgorithm used in this calculation is describedbelow to illustrate the combinatoric nature of theaugmentation process.
If no DDAs can be found fora breakdown formed using the important attributeslist, the general axioms may again intervene tothrow out that breakdown.Flow of control then passes through a numberof modules responsible for calculating the basedDB attribute and for recording constant DBattributes and relation attributes.
The actualnodes are then generated and added to thehierarchy.Generating the descriptive information forthe sub-classes involves combinatoric problemswhich depend on the number of records for eachentity in the database and the number ofsub-classes formed for these entities.
TheENHANCE system was implemented on a VAX 11/780,and was tested using a portion of an ONR databasecontaining 157 records.
It generated sub-typeinformation for 7 entities and ran inapproximately 159157 CPU seconds.
For a databasewith many more records, the processing time maygrow exponentially.
This is not a major problemsince the system is not interactive; it can berun in batch mode.
In addition, it is run onlyonce for a particular database.
After it is run,the resulting representation can be used by theinteractive generation system on all subsequentqueries.
A brief outline of the processinginvolved in generating the DDAs of a particularsub-class will be given.
This process illustratesthe kind of combinatoric problems encountered inautomatic generation of sub-type informationmaking it unreasonable computation for aninteractive generation system.5.1 Generatin@ DDAsThe Distinguishing Descriptive Attributes(DDAs) of a sub-class is a set of attributes,other than the based DB attribute, whosecollective value differentiates that sub-classfrom all other sub-classes in the same breakdown.Finding the DDA of a sub-class is a problem whichis ccmbinatoric in nature since it may requirelooking at all combinations of the attributes ofthe entity class.
This problem is accentuatedsince it has been found that in practice, a set ofattributes which differentiates one sub-class fromall other sub-classes in the same breakdown doesnot always exist.
Unless this problem isidentified ahead of time, the system would examineall combinations of all of the attributes beforedeciding the sub-class can not be distinguished.There are several features of the set of DDAswhich are desirable.
(i) The set should be ass,~all as possible.
(2) It should be made up ofsalient attributes (where possible).
(3) The setshould add information about that sub-class notalready derivable from the representation.
Inother words, they should be different from the126DDAS of the parent.A method for generating the DDAs couldinvolve simply generating all 1-combinations ofattributes, followed by 2-combinations etc..until a set of attributes is found whichdifferentiates the sub-class.
Attributes thatappeared in the DDA of the  immediate parentsub-class would not be included in thecombinations formed.
To ensure that the DDA wasmade up of the most salient attributes,combinations of attributes from the importantattributes list could be generated first.
Thismethod, however, does not avoid any of thecombinatoric problems involved in the processing.To avoid some of these problems, apre-processor to the combination stage of thecalculation was developed.
The combinations areformed of only potential-DDAs.
These are a set ofattributes whose value -can be used todifferentiate the sub-class from at least oneother sub-class.
The attributes included inpotential-DDAs take on a value within thesub-class that is different from the value theattributes take on in at least one othersub-class.
Using the potential-DDAs ensures thateach attribute in a given combination is useful indistinguishing the sub-class from all others.Calculating the potential-DDAs requirescomparing the values of the attributes within thesub-class with the values within each othersub-class in turn.
This calculation yields twoother pieces of important information.
If for aparticular sub-class this comparison yields onlyone attribute, then this attribute is the onlymeans for differentiating that sub-class from thesub-class the DDAs are being calculated for.
Inorder for the DDA to differentiate the sub-classfrom all others, it must contain that attribute.Attributes of this type are called definite-DDAs.The second type of information identified has todo with when the sub-class can not bedifferentiated from all others.
The comparing ofattribute values of sub-classes makes immediatelyapparent when the DDA for a sub-class can not befound.
In this case, the general axioms wouldrule out the breakdown containing that sub-class.
*Assuming that the sub-class is found to bedistinguishable, the system uses thepotential-DDAs and the definite-DDAs to find thesmallest and most salient set of attributes to useas the DDA.
It forms combination of attributesusing the definite-DDAs and me~rs  of thepotential-DDAs.
The important attributes list isconsulted to ensure that the most salientattributes are chosen as the DDA.5.2 Time/Space TradeoffThere is a time/space tradeoff in using a* There are several cases in which ENHANCE wouldnot rule out the breakdown, see \[McCoy 82\] fordetails.system like ENHANCE.
Once the ~ C E  system isrun, the generation system is relieved from thetime consuming task of sub-type inferencing.
~hismeans, however, that a much larger knowledgerepresentation for the generation system's useresults.
Since the generation system must beconcerned with the amount of time it takes toanswer a question, the cost of the largerknowledge representation is well worth the savingsin inferencing time.
If, however, at some futurepoint, time is no longer a major factor in naturallanguage generation, many of the ideas put forthhere could be used to generate the sub-typeinformation only as it is needed.6.0 USE OF REPRESENTATION CREATED BY ENHANCEThe following example illustrates how theTEXT system uses the information generated byENHANCE.
The example is taken from actual outputgenerated by the TEXT system in response to thequestion : What is an AIRCRAFT-CARRIER?.
Itutilizes the portion of the representationgenerated by ENHANCE.
Following the text is abrief description of where each piece ofinformation was found in the representation.
(Thesentences are numbered here to simplify thediscussion: there are no sentence numbers in theactual material produced by TEXT).
(i) An aircraft carrier is a surface ship witha DISPLACEMENT between 78000 and 80800 and aLENGTH between 1039 and 1063.
(2) Aircraftcarriers have a greater LENGTH than all otherships and a greater DISPLACEMENT than mostother ships.
(3) Mine warfare ships, forexample, have a DISPLACEMENT of 320 and aLENGTH of 144.
(4) 7%11 aircraft carriers inthe ONR database have R ~ S  of 0, FUEL TYPEof BNKR, FLAG of BLBL, BEAM of --252,ENDURANCE RANGE of 4000, ECONOMIC SPEED of 12,ENDURANCE--SPEED of 30 and PROPULSION ofSTM~'ORGRD?
(5) A ship is classified as anaircraft carrier if the characters 1 through 2of its HULL NO are CV.In this example, the DDAs of aircraft carrierare used to identify its features (sentence i) andto make a comparison between aircraft carriers andall other types of ships (sentences 2 and 3).Since the ENHANCE system ensures that the valuesof the DDAs for one sub-class appear in the DBattribute list of every other sub-class in thesame breakdown, the comparisons between thesub-classes are easily calculated by the TEXTsystem.
M~reover, since ENHANCE has selected outseveral attributes as more important than others(based on the world knowledge axioms), TEXT canmake a meaningful comparison instead of one lessrelevant.
The final sentence is derived from thebased DB attribute of aircraft carrier.1277.0 FUTURE WORKThere are several extensions of the ENHANCEsystem which would make the knowledgerepresentation more closely reflect the realworld.
These include (i) the use of very specificaxioms in the calculation of descriptiveinformation and (2) the use of relationalinformation as the basis for a breakdown.At the present time, all descriptivesub-class information is calculated from theactual contents of the database, althoughsub-class formation may be based on the veryspecific axioms.
The database contents may notadequately capture the real world distinctionsbetween the sub-classes.
For this reason, a setof very specific axioms specifying descriptiveinformation could be adopted.
The need for suchaxioms can best be seen in the DDA generated forship sub-type AIRCRAFT-CARRIER.
Since there areno attributes in the database indicating thefunction of a ship, there is no way of using thefact that the function of an AIRCRAFT-CARRIER isto carry aircraft to distinguish AIRCRAFT-CARRIERSfrom other ships.
This is, however, a veryimportant real world distinction.
Very specificaxioms could be developed to allow the user tospecify these important distinctions not capturedthe the contents of the database.The ENHANCE system could also be improved byutilizing the relational information when creatingthe breakdowns.
For example, missiles can bedivided into sub-classes on the basis of what kindof vehicles they are carried by.
AIR-TO-AIR andAIR-TO-SURFACE missiles are carried on aircraft,while SURFACE-TO-SURFACE missiles are carried onships.
Thus, the relations often containimportant sub-class distinctions that could beused by the system.8.0 CONCLUSIONA system has been described whichautomatically creates part of a knowledgerepresentation used for natural languagegeneration.
'IRis enables the generation system togive a richer description of the database, sincethe information generated by ENHANCE can be usedto make comparisons between sub-classes whichwould otherwise require use of extensiveinferencing.ENHANCE generates sub-classes of the entityclasses in the database; it uses a set of worldknowledge axioms to guide the formation of thesub-classes.
The axioms ensure the sub-classesare meaningful and that salient information ischosen for the sub-class descriptions.
This inturn ensures that the generation system will havesalient information available to use making thegenerated text more meaningful to the user.9.0 ACKNCWLEDGEMENTSI would like to thank Aravind Joshi andKathleen McKeown for their many helpful commentsthroughout the course of this work, and BonnieWebber, Eric Mays, and  Sitaram Lanka for theircomments on the content and style of this paper.i0.0 REFERENCES\[Chen 76\].
(:hen, P.P.S., "The Dltity-RelationshipModel - Towards a Unified view of Data", ACMTransactions on Database Systems, Vol.
i, No.
I,1976.\[Grosz et.
el.
82\].
Grosz, B., et.
el., "TEAM:A Transportable Natural Language System", TechNote 263, Artificial Intelligence Center, SRIInternational, Menlo Park, Ca., (to appear).\[Lee & Gerritsen 78\].
Lee, R.M., and Gerritsen,R., "Extended Semantics for GeneralizationHierarchies", Proceedings of the 1978 ACM-SIGMODInternational Conference-'on ~%an!~ement of Data,Austin, Texas, May 31 to J~-e 2, 1978. i\[McCoy 82\].
McCoy, K.F., "The ENHANCE System:Creating Meaningful Sub-Types in a DatabaseKnowledge Representation For Natural LanguageGeneration", forthcoming Master' s Thesis,University of Pennsylvania, Philadelphia, pa.,1982.\[McKeown 82A\].
McKeown, K.R., "Generating NaturalLanguage Text in Response to Questions AboutDatabase Structure", Ph.D. Dinner tatio: ~, ;University of Pennsylvania, Philadelphia, Pa.,1982.\[McKeown 82B\].
McKeown, K.R., "The TEXT systemfor Natural Language Generation: An Overview", toappear in Proceedings of the 20th Ant ualConference of the Association of ComputationalLin~uis?\[cs, Toronto, Canada, June 1982.\[Smith and Smith 77\].
Smith, J.M., and Smith,D.C.P., "Database Abstractions: Aggregation andGeneralization", ACM Transactions on DatabaseSystems, Vol.
2, No.
2, June 1977.128
