Cable Abstracting and INdexing S_ystem (CANIS)PrototypeIra SiderJeffrey BakerDeborah BradyLynne HigbieTom HowardLockheed Martin CorporationP.O.
Box 8048Philadelphia, PA 19101sider, j baker,  brady_d,h igbie,  howard@mds.
lmco .com1.
SUMMARYThe CANIS customer receives cables from sitesworld-wide, indexes the entities mentioned in thesecables and stores that information for access by ana-lysts at a later date.
The CANIS customer indexeslarge quantifies of information mostly manually, andwishes to reduce the human rescmrces applied to thistask.Incoming cables are processed, information is ex-tracted and stored in Corporate Databases.
Cableswith useful data are abstracted and indexed.Abstracting captures information about he cableitself: its document umber, source, date, etc.Indexing captures information about he entitiesdescribed in the cable: their names, dates of birth,locations, etc.The result of the abstracting and indexing process is aset of index records about he entities that were de-scribed in a cable.When a cable has been abstracted and indexed, itsindex record(s) are placed in a queue so that they willbe stored.
When file maintenance is performed (peri-odically overnight), the index records are stored in theCorporate Database.The abstracting and indexing process is a time con-suming and laborious task.
Analysts must read everycable and extract the infcmnation that should beplaced in the new index records or update xistingrecords.
Although the abstracting portion of the taskhas been automated, it is only a small part of the ab-stracting and indexing process.
The majority of theeffort is the indexing part of the process.
At present,there is little or no automation support for the index-ing part of the process.The CANIS prototype is intended to assist he CANIScustomer with the cable indexing task.
CANIS auto-matically extracts entity information, builds and up-dates index records from cables, and presents itforreview.
CANIS' analysts can 1) approve the systemgenerated index records, 2) add more information tothe system generated index records, or 3) ignore thesystem generated index records and create their own.CANIS also extracts and stores relationship informa-tion (such as family relations, employment, and affili-ations).
This information is not currently identified orstored uring the manual indexing task.CANIS is compatible with both the input and outputsystems currently being used by the CANIS customer.CANIS runs on the customer-specified hardware andsoftware plaffozms.
However, the prototype CANISsystem is a stand-alone system.2.
BACKGROUND2.1.
Concept DemonstrationCANIS Phase I Contract was completed February1995.
Lockheed Martin Management and Data Systemsdemonstrated the automatic extraction of the abstractedand indexed information from actual cables.
Followingthe demonstration, M&DS developed requirements anddesign specifications for a prototype system that wouldmeet he CANIS customers cable indexing and abstract-ing needs.693.
SYSTEM DES IGN(Cable Text + Cable HeaderJ,CorporateSystemCable ICable Text + Cable Header+ Pro f'de IntbCable Text + Cable HeaderCable Del iv~)System Serv~ .
\[(LogsNogsl ~ - %Cable Text +Cable Header +Cable DeliverySystem Fields\] Sel~d ~bs~ of Cablescopied from Doo~mom Ind~zDamb~Document Index(Database Data \CANIS / ~ H~d~+ Cable De~vay 4 Prototype Amot~o~+ /t Relatiouel Dlua ~?~User Display(Figure 1.0 - CANIS External Interface DesignThe CANIS prototype, as illustrated in Figure 1.0,will take as input, Cable Text, Cable Header, and CableDelivery System Server Fields.
CANIS performs allprocessing and stores the results internally.
Users canvisualiTe the processed ata via the User Display.70CANIS Prototype (Lores Notes)Ce0eceen IdA  + Det-i~at Aam~e Cd l~ee IdelmV~ ?Dom~t  Id~h~r 13oom~ I t~ff l~~ ~  File Server, ~J ~ ~ r  Display )Figure 2.0 - CANIS Top Level Process OverviewFigure 2.0 shows the top level design of the CANISprototype.
Cables are delivered to CANIS via the CableDelivery System Server.
This server acts as a commu-nication driven pipe to the CANIS Prototype.3.1.
Comm Process CSCIThe Comm Process CSCI retrieves the Cable Datafrom the Cable Delivery System Server at a constantgiven rate via a software timer.
The Comm ProcessCSCI creates a Document from the Cable Data andpasses the Document to the Document Manager ProcessCSCI which stores this information in a DocumentCollection.
The Comm Process CSCI sends the Collec-tion Identifier and Document Identifier to the ExtractionProcess CSCI.
The Comm Process CSCI also transfersthe Cable Delivery System Header information to theSQL Database as it relates to the Document in theCoLlection.3.2.
Extract ion Process CSCIThe Extraction Process CSCI processes ach Collec-tion Identifier and Document Identifier passed to it.
TheExtraction Process CSCI passes the Collection and Doc-ument Identifiers to the Document Manager CSCIwhich retrieves and returns the document text.
The Ex-traction Process CSCI extracts biographical entitiesfound within the document using Lockheed Martin'sNLToolset.
The Extraction Process CSCI passes the ex-tracted entities to the Document Manager ProcessCSCI, which stores them as Annotations on the Docu-ment.
The Extraction Process CSCI sends the Collec-tion Identifier and Document Identifier to the AnalystData Setup Process CSCI.Upon initialization, the Extraction Process CSCIspawns the NLToolset Server Object, which ties all theNLToolset's data resources together into a single object,and loads into it the NLToolset System SpecificationFile.
This fde contains aset of entries that identify the71resources that should be loaded, the debug flags thatshould be set, the organization of the resources, and thesequence of operations that the NLToolset should per-form.
The primary resources that are loaded are:?
Lexicon?
Ontology?
Gazetteer?
Abbreviation?
Special Term List?
Set of Lexiccr-Semantic RulePackagesThe Extraction Process CSCI passes a Documentthrough a series of NLToolset functions to perform theextraction.
The steps are Tokeaization, Segmentation,Reduction, Extraction, Reference Resolution, and PostProcessing.Tokenizatiou creates a buffer of tokens from theDocument's text.
All words, punctuation, umbers, etc.in a Document are processed into tokens.
The informa-tion captured for each token is: physical string, tokensymbol, token type.
symbol id, part of speech, stringcase type, and character start and end positions.Segmentation breaks the Document's token bufferinto paragraphs and sentences based on multiple new-lines, tabs, periods, etc.Reduction performs multiple passes through theDocument buffer looking for sequences of tokens thatcan be simplified into a single identifiable unit.
Thesepasses are used to identify specific pieces of informationneeded for Extraction.Extraction and Reference Resolution are theNLToolset functions that glue all individual pieces to-gether to create the entities.
The information automati-cally extracted by CANIS from the Cables includes dataof the following types:?
Person Names (All Types)?
Company/Organization Names?
Locations?
Dates?
Phone Numbers?
License Numbers?
Identification Numbers (exam-ple: Social Security)?
Gender?
Country of Birth?
Date of Birth?
Occupation?
Subject Line?
File Numbers?
Cable NumbersThe following associations will be extracted by theCANIS Prototype from the Cables:?
Family?
Employment?
AffiliationsPost Processing creates Annotations for all the dataitems and entities.
These Annotations are then attachedto the Document and stored in the Document ManagerProcess CSCI.
Appendix A contains the Annotation De-sign Specification for these ntities.3.3.
Analyst Data Setup Process CSCIThe Analyst Data Setup Process CSCI processeseach Collection Identifier and Document Identifier pairpassed to it.
It then passes the Collection and DocumentIdentifiers to the Document Manager Process CSCIwhich retrieves and returns the Document and its An-notations.
The Annotations for this document areplaced into relational records in the CANIS Server (SQLServer).
Names, Organizations and Associations enti-ties found within the extracted annotations are validatedagainst existing entities.
If the entity exists, then thenew information is linked to the existing entities.
If theentity does not exist, new relational records are createdfor that entity.The Analyst Data Setup Process CSCI collects andbuilds relations for each of the major entities (Person-nel, Organizations, and Associations) within the An-notations for the Document in the Collection.
It vali-dates and connects different types of locations, numbersand biographic nformation.
For each entity, the processvalidates against existing index relations.
If the entityexists, all information is processed as an update to theexisting records.
If the entity does not exist, the recordis added to the relational database as a currently knownIndex record.
Biographical entities are connected to thenamed entity through the ODBC SQLServer API.
Bio-graphical entity type connections are: gender, countryof birth, date of birth, etc.Additionally, the process operates on address earl-ties and number entities and connects these to the namedentities.
It validates the address and number informa-tion against existing data relations.
If the address ornumber exists, then all information is processed as a ref-erence to the existing records.
Otherwise, anew recordcontaining the information is added to the relations andconnected to the named entity.
The types of addressescaptured are: location, residence, etc.
The types ofnumbers captured are: phone, license, etc.The Analyst Data Setup Process CSCI links namedentities together through relation links in the SQL data-72base.
The process will link the following entity in-formation: Family (persons to family), Employment(persons to organizations), and Affiliation (persons toassociations).The Analyst Data Setup Process CSCI validates FileNumbers against existing relations and connects them tonamed entities.
The types of Filing and Document Ref-erence data connected are: System Folder Objects andDocument IDs.Finally, the Analyst Data Setup Process CSCI addsthe Document to an analyst working queue for proces-sing by an analyst through the Analyst Interface ProcessCSCI.The Analyst Data Setup Process bridges the gap he-tween the information that was extracted from eachDocument and the information currently stored in thecustomer's database.3.4.
Analyst Interface Process CSCIThe Analyst Interface Process CSCI processes UserCommands passed to it.
These Commands allow ananalyst o access and manipulate all the informationstored in the CANIS prototype.
When a Document isse-lected for display by an analyst, the Analyst InterfaceProcess CSCI passes the Collection Identifier and Docu-ment Identifier for the Document to the Document Man-ager Process CSCI which retrieves and returns the Doc-ument and its relational records.The Analyst Interface Process CSCI displays asum-mary list of the named entities associated with the se-lected Document.
An analyst may select a given entityfrom the list and review the enfity's detailed informa-tion, delete the entity from the list, or lookup a new enti-ty found in the body of the Document.
For each of thedetails available about a name, (ie.
biographies, rela-tionships, id numbers, locations, phone numbers etc.
)the analyst reviews, modifies the informatiou if neces-sary, and checks off the information.
Some of the data,such as gender, citizenship, or relationship types, for ex-ample, have alternative choices available on a pull-down menu to minimize key strokes necessary to makechanges.The Analyst Interface Process CSCI allows an ana-lyst to review and modify all information (Index re-cords, addressees, ubject line, and Fding locations)about a Document.
It will display a Document's textbody and allow the analyst to travel through the proces-sing of the information about hat Document.
The fol-lowing functions are available to an analyst: DocumentDetails Review, CANIS Prototype Process Logs Re-view, Name Lookup and Processing, and System Filing.Document Details Review displays the classifica-tion, addressees, and subject line associated with thecurrent Document.
The analyst may review and modifyany of this information.CANIS Prototype Process Logs Review displays thelogs generated by each of the CANIS System Processesin read-only mode.
The information captured by theselogs includes: document identifiers for documents pro-cessed, error messages, system generated messages (ie.debug).The Document Name Lookup and Processing allowsthe review and modification of named entities (Person-nel, Company, and Associations) of the selected Docu-ment.
The options available to an analyst here are, a)Name Lookup, b) Index, Review Data records for thisentity, c) Create Links between Entity names and re-viewed records: and d) Add and Modify Informationassociated with the entity (ie.
gender, citizenship, loca-tions, phone numbers, etc.
)Extraction errors found by the analyst during theirprocessing of a document are appended to a log withinthe SQL database for review by an engineer for Extrac-tion CSCI package adjustments.3.5.
Document Manager Process CSCIThe Document Manager Process CSCI is a set of li-brary routines which provide a standard interface be-tween the CANIS Prototype and the persistent s orageof documents.
The Document Manager conforms to theconcepts and specifications of the TIPSTER Phase IIArchitecture Design Document (version 1.15).
The Li-brary routines of the Document Manager Process pro-vides all CSCI's of the CANIS Prototype with a standardinterface (APD for accessing docmnents, and communi-caring annotation i formation about hose documents.The Document Manager Process CSCI is imple-mented on top of a relational database with access to thedatabase facilitated through ODBC library calls.
TheDocument Manager Process CSCI uses Microsoft'sODBC library.
Microsoft Access and MicrosoftSQLServer.
Other applications using Lockheed Mar-fin's Document Manager are being built on top of Sy-base and Oracle.4.
NLTOOLSETThe NLToolset is a framework of tools, techniquesand resources for building text processing applications.The NLToolset is portable, extensible, robust, geneticand language independent.
The NLToolset combinesartificial intelligence (AD methods, especially NL pro-cessing, knowledge-based systems and information re-trieval techniques, with simpler methods, uch as finitestate machines, lexical analysis and word-based text73search to provide broad functionality without sacrific-ing robustness and speed.The NLToolset currently runs on SUN Microsys-tem's UN/X-based platforms and PCs (using MicrosoftWindows NT).
The NLToolset is coded in C++ and usesthe COOL Object Library.
The CANIS application isPC based and using the Microsoft Visual C++ compilerand Visual Basic on the PC.5.
TEST ING AND EVALUATIONWe are currently in the testing phase and developingthe evaluation criteria in conjunction with the govern-ment These phases are scheduled to complete, July1996.Our Test Plan involves ubsystem testing of each ofthe Comms Process CSCI, Extraction Process CSCI,Analyst Data Setup Process CSCI, and the Analyst In-terface Process CSCI.
We are also performing SystemLevel Integration Testing to validate the data passingthrough each process within the CANIS application.Evaluation will be performed by analysts at their siteusing real data.
We are currently working with the cus-tomer to determine evaluation criteria.6, CONCLUSIONSThe CANIS prototype will show the customer a newway of doing business.
Analysts will see their taskschange from manually reading and creating index re-cords to verifying and updating automatically generatedindex records.
Their daily process will involve moreanalysis than data entry and they will be able to processa larger number of documents in a single day.7.
REFERENCES1.
CANIS System Requirements Specification:May 30, 1995.2.
CANIS System Design Specification;November 30, 1995.3.
TIPSTER Phase II Document Manager Snecifi-vcation (vl.
15)September, 1995.74APPENDIX  A.ANNOTATION DES IGN SPECIF ICAT IONannotation type r-fnllnameannotation type r-descriptorannotation type r-surnameannotation type r-birth-dateannotation type r-rifleannotation type r-occupation-fieldannotation type r-occupation-textannotation type r-file-numberannotation type r-phone-numberannotation type r-org-nameannotation type r-conntryannotation type r-addressannotation type r-cityannotation type r-id-numberannotation type r-genderannotation type r-stateannotatiOn type r-mailcodeannotation type r-subject-lineannotation type r-dateannotation type r-textannotation type r-phone-textannotation type c-tperson{r-fidlname: r-fullnamer-variation: sequence ofr-filllnamer-descriptor: -descriptorr -surname:  r-gl.llIIRmer-gender: -genderr-birth-date: r-birth-dater-taddress: equence of c-taddressr-tphone: sequence of c-tphoner-tidnum: sequence of c-tidnumr-tide: sequence of r-rifler-occupation-field: r-occupation-fieldr-occupation-text: sequence ofr-occupation-textr-text: sequence ofr-textr-person-type {e.g., MAIDEN... }r-associated {Y}}annotation type c-taddress{r-address: r-addressr-city: r-cityr-state: r-stater-conntry: r-countryr-mailcode: r-mailcoder-address-type: {BIRTH, LOC, ADDRESS }r-associated { Y }Iannotation type c-tphone{r-phone-number: sequence ofr-phone-numberr-phone-type: {PHONE, FAX, TI~I.~X}r-phone-text: sequence ofr-phone-textr-associated: {Y}\]annotation type c-tidnum{r-id-number: sequence ofr-id-numberr-id-type: {SSN, LICENSE}r-associated: {Y}}annotation type c-torgani~afion{r-org-name: r-org-namer-variation: sequence ofr-org-namer-org-type: {COMPANY, GOVERNMENT,OTHER}r-descriptor: r-descriptorr-taddress: equence ofc-taddressr-tphone: sequence ofc-tphoner-associated { Y \]Iannotation type: c-ffamily{r-fullname: r-fullnamer-suma.me: r-suillamer-taddress: equence ofc-taddressr-tphone: sequence ofc-tphouer-associated { Y }}annotation type c-parent-assoc{r-child: c-tpersonr-parent: c-tpersonr-descriptor: r-descriptor}annotation type c-fathex-assoc{r-child: c-tpersonr-father: c-tpersonr-descriptor: r-descriptor}75annotation type c-mother-assoc{ r--child: c-tpersonr-mother: c-tpersonr-descriptor: -descriptor\]annotation type c-brother-assoc{r-sibling: c-tpersonr-brother: c-tpersonr-descriptor: -descriptor\]annotation type c-sister-assoc{r-sibling: c-tpersonr-sister: c-tpersonr-descriptor: -descriptor\]annotation type c-sibling-assoc{r-sibling-a: c-tpersonr-sibling-b: c-tpersonr-descriptor: -descriptor\]annotation type c-married-assoc{r-spouse-a: c-tpersonr-spouse-b: c-tpersour-descriptor: -descriptorlannotation type c-family-other-assoc){r-person-a: c-tpersonr-person-b: c-tpersonr-descriptor: -descriptor)annotation type c-family-member-assoc{r-family: c-ffamilyr-family-member: c-tpersonr-descriptor: -descriptor\]Annotation type c-maiden-persona-assoc{r-person-a: c-tpersonr-person-b: c-tpersonr-descriptor: r-descriptor\]annotation type c-other-persona-assoc{r-person-a: c-tpersonr-person-b: c-tpersonr-descriptor: -descriptor}annotation type c-employment-assoc{r-person: c-tpersour-organization: c-torganizafionr-descriptor: r-descriptor)annotation type c-affiliafion-assoc{r-person: c-tpersonr-organization: c-torganizafionr-affiliated-with: c-torganizafionr-descriptor: -descriptor}annotation type c-tdocument{r-subject-line: r-subject-liner-reference-line: r-reference-liner-categories-type: s quence of {DRUGS,POLITICS, TERRORIST, OTHER\]}r-associations: sequence ofc-agfiliation-assoc orc-employment-assoc or c-coutact-assoc rc-persona-assoc or c-family-member-assocor c-family-other-assoc or -married-assocor c-sibling-assoc rc-sister-assoc rc-brother-assoc r c-mother-assoc rc-father-assoc r c-parent-assocr-unassocpersons: sequence of c-tpersour-unassocorgs: sequence ofc-torganizafionr-unassocaddr: sequence ofc-taddressr-tmassocphone: s quence ofc-tphouer-unassocidnum: sequence ofc-fidnumr-unassocfamily: sequence ofc-ffamily76
