Edge dependent pathway scoring for calculatingsemantic similarity in ConceptNetSteve SpagnolaCornell Universitysps34@cs.cornell.eduCarl LagozeCornell Universitylagoze@cs.cornell.eduAbstractMost techniques that calculate the relatedness between two concepts use a semantic network, suchasWikipedia, WordNet, or ConceptNet, to find the shortest intermediate pathway between two nodes.These techniques assume that a low number of edges on the shortest pathway indicates conceptualsimilarity.
Although this technique has proven valid in conforming to psychological data, we test theusefulness of additional pathway variables in ConceptNet, such as edge type and user-rated score.Our results show strong evidence for the application of additional pathway variables in calculatingsemantic similarity.1 ConceptNet PathwaysConceptNet 3 is one of the largest commonsense semantic networks in existence, relying on its users tomake conceptual assertions and collectively vote on the legitimacy of other users?
assertions.
Concept-Net is valuable as a semantic resource because it suggests transitive inference between ideas, enablingdissimilar concepts to share a semantic, indirect relationship.
Unlike Wikipedia and WordNet, the edgesin ConceptNet contain additional semantic information between two concepts.
Each edge is assigned arelation type (such as ?Is A?
or ?Located At?)
and a score that correlates to how well ConceptNet usersbelieve in the validity of the relation [Havasi and Alonso (2007)].
Previous work on calculating semanticrelatedness between two concepts ignores these extra edge features, using only the inverse of numberof edges on a short path [Rada and Blettner (1989); Wubben and A.
(2009)].
Instead of only lookingfor the shortest pathway from one concept to another we assess all pathways in measuring the semanticsimilarity of an association.
A simple example is shown in Figure 1: two nodes (cat and dog) with twopathways containing varying intermediary nodes and edge types.Figure 1: Transitive links between nodes in ConceptNet may occur through a variety of pathways, somebeing more appropriate than others.385Each possible pathway from one concept to another contains a set of edges, where each edge has apredefined edge type and validity score.
Hence, in addition to edge count, we can use the sum of edgescores within a pathway as an additional feature.
It may be the case that some pathways have a low num-ber of edges (implying a high relatedness metric by inverse edge count), yet only contain poorly scoringedges that are incorrect or noisy inferences, yielding low aggregate score.
In such cases the simple useof edge count may lead to false ?low confidence?
inferences, which our technique avoids.In addition to edge score, we also use the 27 predefined edge types in the network to calculate con-ditional edge type transition probability.
We use these edge types to calculate the overall distribution ofthe 27 edge types as the independent probability of encountering a given edge type on the initial edgetraversal within a pathway.
Furthermore, we also calculate the conditional probabilities of changing edgetypes along any given pathway.
For example, given that we traverse an ?Is A?
edge to a concept X, theprobability of traversing another ?Is A?
edge from concept X is .13, whereas the probability of changingto a ?Has A?
relation is only .05, as shown in Figure 2.
These transition probabilities are calculated forall sequential edge pairs within the entire graph, constructing the following Markov Model.Figure 2: Learned edge transition probabilities (only 2 of 27 edge types shown).We believe that the inclusion of these two additional variables helps identify edges that not only havea high consensus with respect to the individual triple, but also are contextually appropriate relative to theprior edge traversed.
Hence, we are combining the specific attributes of edges with the characteristics ofthe larger, overall network, edge transition probabilities to assess pathways.2 Pathway ScoringWe now have two properties for each edge on a given pathway of N nodes: score and transition prob-ability.
Using these, we can compose three vectors that can describe any given pathway: SCORES,TRANSITIONS, and EDGES (see equations 1, 2, and 3 respectively).SCORES = [ 3?EdgeScore1,2, 3?EdgeScore2,3, ..., 3?EdgeScoreN?1,N ] (1)SCORES is a vector of size N-1 with the cube root of each edge score in each cell.
In initial testing,we found that using the cube root of user ranked scores was necessary to prevent high scoring edges fromovershadowing lower scoring edges.
We believe that this particular normalization technique is unique tothe score distribution of ConceptNet 3, but that the general technique is expandable to other networksbased on score distributions.TRANSITIONS = [P (Edge1,2), P (Edge2,3|Edge1,2), ..., P (EdgeN,N?1|EdgeN?1,N?2)] (2)TRANSITIONS is another vector of size N-1 containing the conditional probabilities of observingeach edge type within each cell.
The first cell in the vector is just the independent probability of encoun-386tering the first edge, whereas every cell beyond that calculates the conditional probability of encounteringthe edge type based on the prior edge type.EDGES = [N ?
1] (3)EDGES is a vector of size 1 that simply contains N-1 as its value, or the number of edges in thepathway.After associating these three vectors with all possible pathways from one concept to another, wenow introduce a scoring function for each pathway.
The function assigns each possible pathway a score,and the pathway with the highest score is used as the ?shortest?
semantic pathway from one concept toanother.
Hence, if a given concept has several pathways to another given concept, we select the pathwaywith the maximum score and use this score as the similarity metric.
We use the maximum score as ametric to follow similar work in the field rather than experimenting with average or minimum pathwaystrength.
Note, that because ConceptNet is directed, the similarity metric between concepts correspondsto a specific direction.PathScore = < SCORES, TRANSITIONS >||EDGES||2 (4)The scoring function shown in equation 4 is the inner product of SCORES and TRANSITIONS dividedby the EDGES, or number of edges, squared.
This approach introduces the SCORES and TRANSI-TIONS values into the traditional inverse edge-count function.
We use the inner product to obtain aninteraction effect between scores and transitions, where each edge has its score multiplied by its transi-tion probability before being summed.
Hence, the inner product will reward edges with both high scoresand high transition probabilities as the product grows higher.
Our intuition is that this interaction effectwill be useful for finding relevant pathways because it ensures that the edges traversed have a high socialconfidence score, and are ordered in an edge-type sequence that agrees with the overall structure of thenetwork.We define our function in terms of vectors so we can easily test the effect of ignoring certain features bysubstituting vectors with all 1s instead of the actual values.
For example, to disable the use of the transi-tion probabilities in scoring, we simply set al values in the TRANSITIONS vector to 1.
This approachallows us to test all combinations of pathway features to determine which ones are useful, and whetheror not an interaction effect exists between scores and transitions.3 ExperimentsWe tested all possible combinations of enabling or disabling our three pathway feature vectors in com-puting pathway scores.
To measure how well a scoring function performs, we followed Wubben?s ap-proach of comparing ConceptNet shortest path conceptual relatedness to the Finkelstein-353 psycholog-ical dataset [Finkelstein and Ruppin (2002)].
This dataset contains 353 word pairs, each with a similarityscore from 0 to 10 based on psychological free word association between two words.
Because Concept-Net does not contain nodes for all words used in the Finkelstein-353, we ignored word pairs that couldnot be found in ConceptNet.
Wubben calculated the correlation between the word pair rankings in theFinkelstein-353 and ConceptNet similarity (using simple edge count as pathway cost) to obtain a Pear-son?s correlation of .47 [Wubben and A.
(2009)].
Studies using Wikipedia are able to obtain even highercorrelations than .47, however we find this work incomparable to our study due to the wider coverageand different structure of Wikipedia [Strube and Ponzetto (2006)].387Our experimental design differs from that of Wubben?s on two fronts.
Wubben used bidirectional path-ways, whereas our work only focuses on directed pathways for each pair in the dataset, ranking thedirected pathways from word A to word B in the Finkelstein-353.
We chose this approach because psy-chological subjects were presented with word A first, followed by word B, in which we assume thatsubjects were more prone to make the directed connections.
Furthermore, because we are not using asimple edge-counting algorithm, we were not able to efficiently examine all of ConceptNet due to com-putational limitations.
Instead, we ran several cases in which we examine all pathways between conceptsin the Finkelstein set within ConceptNet, subject to a maximum number of pathway nodes.
For example,if we only allow a maximum of three pathway nodes, then we only analyze the set of found pathwayscontaining up to three nodes.
If a pathway is not found between two concepts within a three node path-way, but we know that the concept exists in ConceptNet, then we set the score equal to 0.
We were ableto reach a maximum of six pathway nodes before calculations became infeasible.4 ResultsOur experiments were designed to test the usefulness for pathway score and transition probabilities, aswell as an interaction effect between the two features, in addition to inverse edge-count.
Hence, we aimto prove that using all three vectors in Equation 4 will outperform the traditional approach of only usingEDGES.
We tested these cases, in addition to all other feature usage combinations, on allowed maximumpathway lengths up to six, hoping to see how allowed pathway length additionally affects our scoringfunction?s usefulness.Our results from Table 1 show a significant performance gain when using all three vectors in tandem,as opposed to just the number of edges.
Furthermore, our results were able to outperform Wubben?sresults of .47.
We also see that the performance gains over the naive edge-only approach increase withthe maximum allowed number of nodes in the pathway.Although we are able to show improvements over edge-only scoring, we replicate previous results thatdemonstrate that using the inverse of edge length is both necessary and sufficient to obtain acceptableresults [Wubben and A.
(2009)].
Results become unusable for rows (S), (T), and (ST) beyond a pathwaylength of 3 when pathway length (E) is not considered.
Furthermore, edge only scoring (E) is sufficientby itself to obtain acceptable results, outperforming all other cases aside from (EST).The most important finding is that if we only add scores or transition probabilities to edge count scoringin cases (ES) and (ET), then performance declines from using only edge counts (E).
This suggests thatedge scores and transition probabilities are noisy features when considered in isolation.
It is only whenthey are combined, in conjunction with edge count (EST) that we see performance gains, confirming ourproposed interaction effect.5 DiscussionOur results suggest that the interaction effect between edge score and edge type transitioning is usefulfor improving conceptual similarity calculations in ConceptNet.
Our scoring formula provides a strongreward for edges that contain a high user rated score and edge transition probability.
We believe thatthese properties produce stronger results because isolated edge scores are contextualized based on theirrelative sequence of edge-types within a pathway.
For example, a path traversal across an ?is A?
edge andthen to a ?has A?
edge may not be meaningful if the network as a whole does not contextually supportthis edge type transition pattern.For future studies, we would like to extend our experiments beyond pathways of length 6 and see if388Maximum Pathway Length 2 3 4 5 6Edge (E) .285 .391 .414 .416 416Score (S) .280 .347 .079 -.166 -.120Transition (T) .281 .357 .041 -.268 -.097Edge & Score (ES) .280 .383 .400 .400 .401Edge & Transition (ET) .281 .399 .387 .407 .414Score & Transition (ST) .275 .363 .070 -.223 -.093Edge & Score & Transition (EST) .275 .416 .473 .496 .507(EST) Absolute Improvement over (E) -.010 .025 .059 .080 .091(EST) Relative Improvement over (E) -3.51% 6.39% 14.25% 19.23% 21.88%Table 1: Results: Pearson?s correlation for varying formulas and improvement over the traditional edge-only approach.
Row labels indicate which feature vectors were activated for the experiment.performance will begin sinking or will flatten after a given number of allowed nodes.
Furthermore, webelieve that deeper analysis of ConceptNet is warranted.
We noticed that there are many noisy relation-ships that are illogical at first glance.
However, deeper analysis shows that these noisy assertions are oftenthe result of word stemming (such as shortening ?building?
to ?build?
), and word sense disambiguationissues.
In future work, we would like to revert to the pure lexical assertions within ConceptNet to removethe stemming from the words, preserving the full meaning of the intended relations.
We believe that alexical parser would be able to detect plurals and address stemming issues better than the approach usedin ConceptNet.
Furthermore, we believe that word sense ambiguity adds noise to the network, and thatour results could improve if ambiguous nodes were split into their corresponding senses.Despite the noise present in ConceptNet, we believe that our approach demonstrates a strong improve-ment over traditional semantic similarity computations.
We hope that future work may resolve the noiseand ambiguity issues present in ConceptNet, in which our methodology may provide even stronger re-sults in accurately calculating semantic similarity.ReferencesFinkelstein, L., G. E. M. Y. R. E. S. Z. W. G. and E. Ruppin (2002).
Placing search in context: Theconcept revisited.
In ACM Transactions on Information Sys- tems.Havasi, C. Speer, R. and J. Alonso (2007).
Conceptnet 3: a flexi- ble, multilingual semantic network forcommon sense knowledge.
In Recent Advances in Natural Language Processing.Rada, R.; Mili, H. B. E. and M. Blettner (1989).
Development and application of a metric to semanticnets.
In IEEE Transactions on Systems, Man and Cybernetics, Volume 19 of 1, pp.
17?30.Strube, M. and S. Ponzetto (2006).
Wikirelate!
computing semantic relatedness using wikipedia.In AAAI?06: proceedings of the 21st national conference on Artificial intelligence, Boston, Mas-sachusetts, pp.
1419?1424.
AAAI Press.Wubben, S. and B.
A.
(2009).
A semantic relatedness metric based on free link structure.
In Proceedingsof the 8th International Conference on Computational Semantics, pp.
355?358.
International Confer-ence on Computational Semantics.389
