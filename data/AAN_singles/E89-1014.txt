A logical treatment of semi-free word  order and bounded discontinuousconstituencyMike ReapeCentre for Cognitive Science, University of Edinburgh2 Buccleuch Place, Edinburgh EH8 9LWScotland, UKAbstractIn this paper we present a logical treatment of semi-free word order and bounded i scont inuousconstituency.
We extend standard feature valuelogics to treat word order in a single formalism witha rigorous semantics without phrase structure rules.The elimination of phrase structure rules allows anatural general isat ion of the approach tononconfigurational word order and boundeddiscontinuous continuency via sequence union.Sequence union formalises the notions of clauseunion and scrambling by providing a mechanism fordescribing word order domains larger than the localtree.
The formalism incorporates the distinctionbetween bounded and unbounded forms ofdiscontinuous constituency.
Grammars areorganised as algebraic theories.
This means thatlinguistic generalisations are stated as axioms aboutthe structure of signs.
This permits a naturalinterpretation of implicational universals in terms oftheories, subtheories and implicational axioms.
Theaccompanying linguistic analysis is eclectic,borrowing insights from many current linguistictheories.1.
IntroductionIn this paper we present a logical treatment of semi-free word order and bounded d iscont inuousconstituency.
By a logical treatment, we mean thatthe grammar is an axiomatic algebraic theory, i.e., aset of axioms formalised in a logic.
By boundeddiscontinuous constituency, we refer to phenomenasuch as Dutch cross-serial dependencies, GermanMittelfeld word order and c lause-boundedextraposition in contrast o unbounded forms ofdiscontinuous constituency such as cross-serialmultiple extractions in Swedish relative clauses.There is no scope within this paper to provide thelinguistic argumentation sufficient to justify theapproach described below.
We shall have to limitourselves to describing the key linguistic insight hatwe wish to formalise.
That is that semi-free wordorder and nonconf igurat iona l i ty  are localphenomenon (i.e., bounded) and that word orderdomains are larger than the local trees of context-free based accounts of syntax.
(This includes nearlyall wel l -known uni f icat ion-based grammarformalisms such as GPSG, IF'G, I-IPSG and CUG.)
This issimply a restatement of the notion of clause union orscrambling familiar from transformational analyses.Our proposal is to provide a feature-value logic witha rigorous semantics with sufficient expressivepower to allow the encoding of even syntacticstructure within the single formalism.
This meansthat the work of encoding syntactic structure iscarried by the feature-value logic and not by formallanguage theoretic devices (i.e., phrase structurerules).
Sequences of linguistic categories, or signs(following Saussure, HI~G and UCG), do the work ofPSRs in our logic.
The phon attribute of signs isfunctionally dependent on the phon attributes ofthe signs in sequences encoding local orderdomains.
This allows us to trivially introduce wordorder domains larger than the local tree byintroducing a sequence union operation.
GPSG-stylelinear precedence (LP) statements express partialordering constraints on elements of sequences.The grammars we use consist of three types ofelements: (1) descriptions of lexical signs, (2)descriptions of nonlexical signs and (3) axiomswhich specify the redundant structure of signs.
Thisorganisation is similar to that of HPSG (Pollard andSag, 1987) from which we borrow many ideas.Subcategorisation is expressed in terms of sets ofarguments.
This borrows ideas from all of HPSG, LFG(Bresnan, 1982) and categorial grammar (CC).However, like HPSG and unlike LFG, our setdescriptions are collapsible.
We also share with CGthe notions that linguistic structure is based onfunctor-argument structure and that lexical functorspartially order their arguments.All word order facts are captured in the way thatlexical functors combine the ordering domains (dtrssequences) of their arguments.
Functors cancombine order domains in one of two ways.
Theycan take the sequence union of two sequences orconcatenate one with the other.
Discontinuity isachieved via sequence union.
Continuity isachieved via concatenation.
Since functors partiallyorder sequences by LP statements, order amongstboth continuous and discontinuous constituents itreated in the same way.
This solves the problemoften noted in the past of specifying the appropriate~.-~ - 103-constituents as sisters so that LP statements canapply correctly while satisfying thesubcategorisation requirements of lexical heads andcoindexing constituents correctly withsubcategorised arguments.
Furthermore, order is"inherited" from the "bottom" since sequenceunion preserves the relative order of the elements ofits operands.
The empirically falsifiable linguistichypothesis made is that the whole range of localword order phenomena is treatable in this way.In ?2 we present he syntax and semantics of thefeature-value logic In ?3 we develop a methodologyfor organising rammars as algebraic theories.
In ~4we present a toy analysis of Dutch subordinateclauses which illustrates the basic ideas underlyingthis paper.
We very brief ly discuss aninterpretation of parametric variation in terms oftheories and subtheories in ?5 and possibleimplementation strategies for the logic in ~6.2.
The Syntax and Semantics of the Feature-Value LogicThis logic is a quantifier free first order languagewith both set and sequence descriptions.
Intuitively,the underlying set theory is zF -  FA-  SXT + A~A(where SXT is the axiom of extensionality, FA is thefoundation axiom and AFA is Aczd's anti-foundationaxiom).
To cast this in more familiar terminology,two type identical elements of the domain need notbe token identical.
Token identity is indicated in thelanguage via conjoining of the same variable to twoor more descriptions.
This is a generalisation of thenotions of type identity and token identity familiarfrom conventional feature value logic semantics toset theory in general.
Furthermore, we allownonwellfounded structures.
That is, nothing in thedefinition of the semantics prevents circularstructures, i.e., structures which contain themselves.Otherwise, the set theory has the properties ofclassical set theory.
However, in this paper, we  willreconstruct the properties of the set theory weintend within standard set theory while observingthat there is no difficulty in extending this treatmentto either extensional or intensional nonwellfoundedset theory.2.1.
The Domain  of InterpretationEvery element, U i, of the universe or domain ofinterpretation, is a pair ~,~/) where i e N is the indexand U is a structure which is one of the basic types.There are four basic types.
They are constants,feature structures, ets and sequences.
We will calla pair ~,u)an i-constant, i-feature structure, i-set or i-sequence according to the type of ?/.
The i- is anabbreviation for intensional.
So, an i-set is anintensional set.
Although we will carefullydistinguish between i-types and basic types in thissection, we may occasionally refer to basic types inwhat follows when we really mean i-types.We will use the following notational conventions.Script capitals denote the class of objects of basictypes.
+-superscripted script capitals denote theclass of objects of the corresponding i-types.
Boldscript capitals denote elements of the types.
Boldscript capitals with superscript i denote elements ofthe i-types with index i.
Capital Greek letters denotethe class of descriptions of the i-types and lowercaseGreek letters denote descriptions of dements of thei-types.
I.e., ~ is the class of constants, ~r~ is the classof i-constants, ~ (e ~ is a constant, ~i (e .~+) = (i,~ isan i-constant, A is the class of i-constant descriptionsand 0t (e A) is a description of an i-constant.
We willalso use +-superscripted bold script capitals todenote elements of an i-type when we don't need tomention the index.
I.e., ~" e ~+ is an i-constant, etc.9-is the class of feature structures, ~(the class of setsand ?
the class of sequences.
?./= .~ u 9- u K u ?
isthe class of basic types.
?/+ = ~" u ~+ k# ~+ u 5 + isthe class of basic i-types, i.e., the domain ofinterpretation.
Sets and sequences may beheterogenous and are not limited to members ofone particular type.
A feature structure 9 r e 9"is apartial function 9": ~ -# ~/+.
We Will follow theseconventions below in the presentation of the syntaxand semantics of the language.2.2.
Syntax2.2.1 Notational ConventionsBelow, we  present an inductive definition of thesyntax of the language.
A is the set of i-constantdescriptions, N is the set of (object language)variables, 4) is the set of i-feature structuredescriptions, K is the set of i-set descriptions, Z is theset of i-sequence descriptions and= A u N u 4) u K u Z is the set of descriptions of i-structures (formulas) of the entire language.
Objectlanguage variables are uppercase-initial atoms.
(I.e., they follow the Prolog convention.)
LowercaseGreek letters are metavariables over descriptions ofstructures of the corresponding intensional type.
(E.g., ct eA  is an i-constant description, ~ e 4) is an i-feature structure description, t: e K is an i-setdescription and q ?
Z is an i-sequence description.v e N may denote a structure of any i-type.)2.2.2.
DefinitionGiven the notational conventions, ?
is inductivelydefined as follows:(a)~)(c)(d)(e)(0aeAyeN~e K::=v 10 I{?I .
.
.
.
.
~n} I~ClU ~21~1e Ic21\[o\]oe  Z::=v 101OlOO21~ .
.
.
.
.
~n)lal  u~ ~1(~I, .... Yn}<: I?I ~ ?21q?
~Ve + ::--a Iv I# IVl ^+21Vl vW21-V- 104-2.2.3.
Notes on the syntaxWe define V/1 "--~ V/2 to be -V/1 vv/2 and V/1 (-~V/2 to be(~V/I v V/2) A (~V/2 v v/l) in the usual way.Set descriptions ({V/l, .
.
.
.
v/n}) are multisets offormulas.
Set descriptions describe i-sets of i-structures.
A set union description 0?1 u I?
2)describes the union of two i-sets.
The union of two i-sets is an i-set whose second component is the unionof the second components of the two operand i-sets.
(Note that this definition means that the indices ofthe two subsets do not contribute to the union.
)A sequence concatenation description (Ol *o2)describes the concatenation of two i-sequences.
(Sometimes in grammars, we will be sloppy andwrite subformulas which denote arbitrary i-types.This should be understood as a shorthand forsubformulas urrounded by sequence brackets).
{V/1 .
.
.
.
.
v/n}< describes an i-sequence of elements theorder of which is unspecified.
V/1 < V/2 describes animplicitly universally quantified ordering constraintover a sequence.
The intuitive interpretation is: "V/1< V/2 is satisfied by a sequence if every element ofthe sequence that satisfies v/1 precedes (or is equalto) every element of the sequence that satisfies V/2".This is essentially the same interpretation as thatgiven to GPSG LP constraints (as modified forsequences).2.2.4.
Matrix notation and other abbreviatoryconvent ionsWe will use a variant of the familiar matrix notationbelow adapted to the extra expressive power thatour logic provides.
We will briefly outline here thetranslation from the matrix notation to the logic.A con junct ion  of feature -va lue  pairsa l :v/ l^ ... ^an:v/n is represented using thetraditional matrix notation:I al:v/1 \]Lan:v/nlAny other type of conjunction is represented asspecified above.
The connectives --~, v, ~, ~--~are usedin the normal way except hat their arguments maybe conjunctions written in matrix notation.
For set(sequence) descriptions, "big" set (sequence)brackets are used where the elements of the set(sequence) may be in matrix notation.
We will alsooften use boxed integers in the matrix notation toindicate identity instead of variables.
Theinterpretation should be obvious.We will also use a few abbreviatory syntacticconventions.
They should be obvious and will beintroduced as needed.
For example, the followingformulas are formally equivalentV/1 < V/2 < V/3V/1 < v/2 ^  V/2~ V/3In addition, we  will occasionally write partialordering statements in which the first (second)description in the ordering statement is a variablewhich denotes a sequence.
In this case, the intent isthat the elements of the denoted sequence all follow(precede) the elements satisfying the otherdescription.
For example, if VP  denotes a sequenceof feature structures then the descriptioncat: verb < VPstands for(cat:verb < Initial) ^(NonVP u< (VP A ((Initial) ?
Tail)))and all of the dements of the VP sequence mustfollow any verb.
Similar ly,VP < cat: verbstands for(Final < cat: verb) ^(NonVP u< (VP ^ (Front ?
(Final))))and all of the elements of the VP sequence mustprecede any verb?2.3.
SemanticsAn i-structure, ~i is an element of ?/+?
A functionN -~ f2 + is an assignment to variables.
A model isa pair (~i~2.3.1.
(a)2.3.2.Co)Constants~& ~ a i~ ,~ = ~,a) = ~,,~ (ie., a = a e ~0Variables(f.~',$) ~ v iff~(v) ffi ~ (v e N)2.3.3.
Feature-value pairs(c) ~+~g) D a:v/iff F&z and ~y(a),~ V/2.3.4.
(d)(e)(t)Classical connectives(7-/+,g) ~ V/I ^ V/2 iff (7./+,~ ~ V/1 and (?./+,g)V/2(~+~g) ~V/1 v V/2 iff (~/+4g) ~ V/1 or (~/+~  V/22.3.S.<g>(h)Set descriptions~+&~O(~t~4",$) ~ tc where z = {?I ..... Vn} iff thereexists a surjection z: n --~ ~s.t.Vie n: <~(i),g) ~Vi- 105-(i)(~(k)(9~'d) ~ Zl u z2iff3R+19~'2: K = g~ u ~and(~(+1,8) P Zl and (~+2,$) P K2(9C~,~) P Zl @ K2 iff Bg~+1R+2: K = ~ u ~and~,I c~ ~ = ?
and (aC+I,~ ~ Zl and(K+,g), \[o\] fff BS+: ~+~) ,  o and ~= \[3\]2.3.6.
(D(m)(n)(o)(p)(q)(r)2.3.7.Sequence descriptions(()+~ ~ 0CJ+,g) ~ Ol ?
02iff Id'lS+2:5 = $1 ,,92 and(J+l,g) ~ Ol and (3+2,~ \[= 02($+,~ ~ (tgl, .... Vn)iff3~'l ..... ~'n:5=(~r~ .... ~'n)and(qf'l,g) ~ Vl .
.
.
.
.
(~/+n,g) ~ Vn(5+,g) D {VI ..... Vn}< iff 3R+: K= \[5\] and(~,e> ~ {w, .
.
.
.
Vn}Cd',g) ~ Vl < V2 iff 5 = (?-P~I, .... ~'n)andVij e n s.t.
(~J+i,8) ~ VI and (?t+j,Z~ ?2: i < j(~',g) ~ o I u_< o~2 iff 3S+'3+": ?,.
?e,~ ~ Ol and~" ,g)  ~ o2 and \[5\] = \[$\] u \[$'\] and n =length(S) and 1 = length(5) and m =length(,?)
and 3~W' s.t.
~': 1 --->n and~": m -~n and range(~') ~ range(~") =nand Vi, j e ~': i < j ---> ~'(i) < ~'(j) and~i,j e ~': i <_ j --> ~'(i) $ ~'(j)(S+,g) ~ Ol @ o2 iff ~',g) ~ o 1 ~< 02 and 3~'~?
"as in (q) and range(~') c~ range(n") =Notes on the semanticsNote that the set of syntactic onstants A and the setof semantic onstants A are the same, i.e., A ffi ~ and~'oc-n = c~.
?
is the sequence concatenation operator.It is a total function s: 5?
3 --->3.
It is defined to be(~i ..... ~ .
(oi+i ..... ~n) = (~I, ..... Vn~\[5\] is the underlying set of the sequence 5, i.e., the setconsisting of the elements of sequence S.2.3.8.
The feature structure notat ion formodelsBelow we will use matrix notation for representing i-structures.
Since i-structures are completelyconjunctive, there is no indication of disjunction,negation or implication.
Furthermore, the order ofelements in i-sequences are totally specified sothere are no partial ordering statements, l-structures are composed of only i-feature structures,i-sets, i-sequences and i-constants.Obviously, there are no variables in structures.Rather than explicitly indicate all indices ofintensional structures, identity of two structures isindicated with boxed integers.2.4.
A Partial Proof TheoryWe use a partial Hi lbert-style proof  theoryconsisting of one rule of inference and many axiomsand axiom schema.
Space prevents us frompresenting even this partial proof theory.
We willnote briefly that many of the axioms allow ratherlarge disjunctions to be inferred.
For example, if wehave a formula(1,2) ^  (SI ?
S2)then we can infer(($1 ^ 0,2)) ?
($2 ^ 0)) v (($1 ^ (I)) ?
($2 ^ (2))) v(($1 ^ O * (S2 ^ (1,2))).Similar axioms hold for most of the two placeconnectives in the language including sequenceunion.The only rule of inference is modus ponens.From a and a --# ~ infer \[~3.
The organisation of the grammar3.1.
Basic organisationA = {81, .... 8m} is the set of lexical signs.
P = {Pl, .... Pn}is the set of nonlexical signs.
The s/gn axiom, ~Z e T,,encodes the signs A u P where~F.
; (cat: Cat) -~ (81 v ... v 8m v Pl v ... v Pn).A model ~f satisfies a formula ?
with respect to atheory ?= {q ..... ~ ,  written s?~ a- ?
iff~fP q ^...^ tnAV.
(We assume that the individual formulas in a theoryhave disjoint variables.
When they don't, theassumption is that the variables in the entire theoryare renamed such that this property holds.
)A sequence P is a category C iffrP  h?n: P\].3~fs.t.
S?~r  Lcat: CThe set of all sequences Z of category C isZ = la rphon: II I 3~fs.t.
~?~a-Lcat: C ajj.
t(This prov ides the generates relation for agrammar.)3.2.
Two AxiomsThe following two axiom schema are included inevery grammar which we consider.The dtrs-phon axiom- 106-((phon: Phon) ^ dtrs:(phon: Xl ..... phon: Xn)) <-~phon: (Xl ?
... * Xn)This axiom states that the value of the phon featureis the concatenation of the phon features of theelements of the dtrs sequence in the same order asthey occur in the dtrs sequence.
This means thatthe phon sequence of any feature structure iscompletely fiat.
That is, there are no embeddedlevels of sequence structure corresponding tophrase structure.The head-subcat-slash-dtrs axiom(head: Head) A (subcat: Subcat) ^ (dtrs: Dtrs) ^(slash: Slash) --->subcat: ({dtrs: X| ..... dtrs: Xn} (~ \[NonUnionSubcat\]Slash) Adtrs: ({Head} ?
(Xl u~ ... u_< Xn) @NonUnionSubcat)This axiom says that in any headed sign, anyelement of the subcat set is either an element of theslash set, an element of the dtrs sequence or is"unioned into" the dtrs sequence and that there areno other elements of the slash set or dtrs sequence.3.3.
A s imple  exampleConsider the following three element lexicon.01 =-- phon: Phoncat: sentencerPhon: Omes)\]head: Lcat: verb J\[ \[phon: Sub~Fphon: Obj'\] 1subcat: l |cat :np 11  cat:np i tLLcase: nom_lLcase: acc .IJdtrs: Dtrs-- slash: SlashrPhon: (he)l02=|cat: nP |Lcase: nom_\]Fphon: (her)l03 = |cat: np |Lcase: acc /Then the grammar Tis the one axiom theory '1"= {0}where 0 = cat: C -'->01 v02v03.That is, if a FS is defined for cat then it must satisfyone of 01, 02 or 03.
Given this grammar, the onlysentence defined is "he likes her" and the only NP'sdefined are "he" and "her".Consider the descriptionphon: (X,likes,Y)\].cat: CThen the minimal FS which satisfies it is- phon: (he, likes,her )cat: sentencerPhon: @kes)lNhead: Lcat: verb JfFP h?n: (he)l B rP h?n: <her)TB\]subcat:~/cat:np / ' /cat:r iP / ~'~tLcase:nomj Lcase:acc j ;dtrs: {B ,  B ,  ~}- slash: {}4.
An analysis of Dutch subordinate clausesIn this section, we will present a toy analysis ofsimple Dutch subordinate clauses.
The examplethat we will look at is the clause Jan Pier Marie zaghelyen zzaemmen (minus the complementiseromdat).
We require the following lexical entries.1an,:FPh?n: 0"n>lLcat: np _\]?Piet,: Fph?n: (Piet> 1Lcat: np Jrphon: (Marie)\] .
'Marie': \[.cat: np J'zag":- phon: Phoncat: sentence 3vfonn: fin |\['phon: (zag)'\]|head:/cat: verb | ILvform: fin 3 lsubcat: {01, 02, 03 } Idtrs: Dtrs l- slash: Slash ...Iwhere 01, 02, and 03 are:\['phon: Subj'\]01 = |cat: np |Lcase: nora _1Fphon: Obj~02 = |cat: np |Lcase: acc /~phon: VP03=\]cat:vp |Lvform: infJ- 107  -'helpen':i phon: Phon "\]cat: vp |vform: inf |Fph?n: @elpen)l \[head:/cat: verb \] /Lvform: inf J.
|ffph?n:NP7 rP h?n:vP7\] Isubcat: ~/cat: np I , / ca t :  vp /~" ILLcase: acc_l Lvform:infU \[dtrs: Dtrs lslash: Slash J'zwemmen':i phon: Phon cat: vpvform: infrPhon: (zwemmen~\]I head:/cat: verb /I Lvform: inf J\[ subcat: {}\[ dtrs: DtrsL slash: SlashWe also need the following axioms.cat: (vp v sentence) ^subcat: ({(cat: vp) ^  (dtrs:Dtrs) ^  VP} u X) ~ ((extra: - ^  dtrs: (Dtrs u_< Y)) v(-extra: Z ^  slash: (\[VP} u W)))dtrs: Dtrs ---~ dtrs: (cat: np _< cat: verb Acase: nora _< case: acc)((head: Head) ^ (dtrs: Dtrs)) ---)dtrs: (Head _< cat: verb)The first axiom simply states that VP  complementsare either extracted (i.e., members of the slash set)or are sequence unioned into the dtrs sequence.The second axiom says that NPs precede verbs andthat nominative NPs precede accusative NPs.
Thethird axiom says that a head precedes any otherdaughters in the dtrs sequence.
This encodes thegeneralisation for Dutch subordinate clauses thatgoverning verbs precede governed verbs.We'll now present the analysis.
(We will necessarilyhave to omit considerable detail due toconsiderations of space.)
We start as indicated in ?3with the following descriptionphon: (\]an,Piet, Marie,zag,helpen,zwemmen)^ cat: CThe sign axiom will have the disjunction of the sixlexical entries in its consequent.
Since our formulais specified for cat, thus satisfying the antecedent ofthe sign axiom, we can apply the sign axiom.
Thedisjunct that we  will pursue will be the one for 'zag'.This means we infer the formula- phoni (Jan,Piet, Marie,zag, helpen,zwemmen> =cat: sentencevform: finFPhon: (zag)\]head: lcat: verb |Lvform: fin Jsubcat: {?1, ?2, ?3 }dtrs: Dtrs- slash: Slash(where ?I, $2, ?3 are as in the lexical entry for 'zag').From the head-subcat-slash-dtrs axiom we caninfer a large disjunction one of whose disjuncts is- phon: (Jan,Piet, Marie,zag, helpen,zwemmen>qcat: sentence \]vform: fin /l rPhon: (zag)\] \[head: /cat: verb / ^ D4 ILvform: fin J /subcat: {D1 A ?1', D2 ^  ?2', ?3' } J dtrs: (D1,D2,D3,D4,D5,D6) slash: {}where ?1', ?2' and ?3' are:rphon: (Jan)'\[?1'= \[cat: np \[Lcase: nomjrPhon: (Pie)'\] ?2'= \[cat: np \[Lcase: acc j?3'= I phon: (Marie, helpen, zwemmen)  7 eat: vp / vform: inf \[ dtrs: (D3,D5,D6) jAgain, we can apply the sign axiom to each of theseembedded formulas.
?I' and ?2' will be consistentwith the lexical entries for 'Jan' and 'Pier'respectively and can be rewritten no further.
?3' willbe consistent with the lexical entry for 'helpen' so wewill be able to infer- 108 -Iphon: (Marie,helpen, zwemmen) -cat: vpvform: infrphon: (helpen)lhead:/cat: verb /Lvform: inf JI fFPhon: N M rphon: \ ] )  vpsubcat: ~\[cat: np I , \ [ ca t :  vp / t(.Lcase: acc J  Lvform: infJ Jdtrs: (D3,D5,D6)L. slash: SlashAgain, from the head-subcat-slash-dtrs axiom wecan infer a large disjunction one of whose disjunctsis- phon: (Marie, helpen,zwemmen)-\]cat: vp /vform: inf I-phon: ~helpen)'\] Ivform: inf J I|subcat: {04' ^  D3, 05' ^  D6 } /J dtrs: (D3,D5,D6) -- slash: {}where 04' and 05' are\['phon: (Marie)'\]04'=/cat: np ILcase: acc j\['phon: (zwemmen>'\]$5'= Icat: vp l"Lvform: inf .JAgain the sign axiom can be applied to thesubcategorised accusative NP and VP.
The NP isconsistent with the sign for 'Marie' and no furtherrewriting is possible.
The VP is consistent with thesign for 'zwemmen' and so we can inferF phon: (zwemmen) ,icat: vp Ivform: inf \[hon" zwemmen / .< >1I I head: | cat: verb I II Lvform: inf i II subcat: 0 II dtrs: Islash: Slash ..aAgain, the head-subcat-s lash-dtrs  axiom can beapplied leaving only one possibility in this case,namely, that both dtrs and slash has value O. Nofurther rewriting is possible.
Under the assumptionthat the proof theory axioms that we have used aresound, we have determined that the original clauseis in fact a finite sentence of the theory.There are two other points to make about theanalysis.
First, the first axiom we gave aboveguaranteed that VP complements which arespecified extra: - are sequence unioned into thesurrounding sign while NPs are not.
We simplychose the extra: - option for every complement VP.Second, although we freely guessed at the values ofdtrs sequences (within the limits allowed by thehead-subcat-slash-dtrs axiom) a quick glance willestablish that every dtrs  sequence obeys theordering constraints expressed in the second andthird axioms.A few words are in order about how we canaccomodate "canonical" German and Swiss-German subordinate clause order.
In either case,the first axiom is maintained as is.
For German weneed to either eliminate the strict orderingcondition concerning case of NPs in the secondaxiom or add disjunctive ordering constraints forNPs as Uszkoreit suggests.
The ordering constraintsfor Swiss-German are essentially the same.
The firsthalf of the consequent of the second axiom must bemaintained for German.
For Swiss-German,however, this constraint must be eliminated.
Itseems that the correct generalisation for at least theZfirich dialect (Zfiritfifisch) is that NP complementsneed only precede the verb that they depend on butnot all verbs.
(Cf.
Cooper 1988.)
Therefore, forZfiritfifisch we must add an axiom something likesubcat: ({cat: np ^  NP} u X) ^  head: (cat: verb ^  Verb)dtrs: (NP < Verb).
(This condition is actually more general than thefirst half of the consequent of the original secondaxiom.
I.e., it is a logical consequent of the secondaxiom.
)For German, the third axiom is simply the one forDutch with the order of Head and cat: verbreversed.
This encodes the generalisafion forGerman subordinate clauses that governed verbsprecede governing verbs.
For Zfiritiifisch, the thirdaxiom is s imply eliminated since verbs areunordered with respect to each other.This analysis has been oversimplified in everyrespect and has ignored a considerable amount ofdata which violates one or more of the axioms given.It is intended to be strictly illustrative.
It should,however, indicate that for "canonical" subordinateclauses, the differences which account for thevariation in Dutch, German and Zfiritfifisch wordorder are fairly small and related in straightforwardways.
It is this aspect which we briefly address next.5.
Parametric Variation- 109 -If T1 and T2 are theories and T1 ~ T2, then T2 is asubtheory of T 1.
This means that T2 axiomatises asmaller class of algebraic structures than T1.Typically, T1 (and T2) contain many implicationalaxioms.
The implicational axioms of T1 actuallylimit the class of structures which T2 axiomatises.
Atheory of universal grammar has a naturalinterpretation in terms of algebraic theories,subtheories and implicational axioms whichpotentially allows a richer account of parametricvariation than the naive parameter settinginterpretation.
The approach is entirely analogousto the relation of the theories of Brouwerian andBoolean lattices to the general theory of lattices.6.
Implementat ionThere has been no work done yet on theimplementation of the logic.
There are at leastthree obvious implementation strategies.
First, asimplied in ?3, parsing of a sequence P as a categoryC can be reduced to testing satisfiability of theformula phon: P ^ cat.
C. This means that weshould be able to use a general purpose proofenvironment (such as Edinburgh LF) to implementthe logic and test various proof theories for it.Second, there is an interpretation i  terms of head-driven parsing (Proudian and Pollard 1985).
Third,we might try to take advantage of the simplestructure of the grammars (i.e., the dependency ofphon on dtrs sequences) and implement a parseraugmented with sequence union.
We hope toinvestigate these possibilities in the future.7.
ConclusionThere are several comments to make here.
First,the specific logic presented here is not important initself.
There are undoubtedly much better ways offormalising the same ideas.
In particular, thesemantics of the logic is unduly complicatedcompared to the simple intuitions about linguisticstructure whose expression it is designed to allow.Specifically, a logic which uses partially orderedintensional sets instead of sequences i simpler andintuitively more desirable.
However, this approachalso has its drawbacks.
What is significant is theillustration that syntactic structure and a treatmentof nonconfigurational word order can be treatedwithin a single logical framework.Second, the semantics is complicated a great dealby the reconstruction of intensional structureswithin classical set theory.
A typed language whichsimply distinguishes atomic tokens from types andthe use of intensional nonweUfounded set theorywould give a far cleaner semantics.axiomatisation is still in work.
This is largely due tothe complexity of the semantics of set and sequencedescriptions and the belief that there should be anadequate logic with a simpler (algebraic) semanticsand consequently a simpler proof theory.
Wesimply note here that we believe that a Henkin stylecompleteness proof can be given for the logic (or anequivalent one).8.
AcknowledgementsI would first like to thank Jerry Seligman.
If thispaper makes any sense technically, it is due to hisgreat generosity and patience in discussing the logicwith me.
I would also like to thank Inge Bethke fordetailed comments on the semantics of the logicand Jo Calder and Ewan Klein for continuingdiscussion.
Any errors in this paper are solely theauthor's responsibility.9.
ReferencesAczel, P. (1988) Non-Well-Founded Sets.
CSLILecture Notes No.
14.
Stanford.Bresnan, J.
(Ed.)
(1982) The Mental Representationof Grammatical Relations.
Cambridge,Mass.
: MIT Press.Cooper, K. (1988) Word Order in Bare InfinitivalComplement Constructions in SwissGerman.
Master's Thesis, Centre forCognitive Science, University of Edinburgh,Edinburgh.Gazdar, G., E. Klein, G. K. Pullum and I.A.
Sag.
(1985)Generalised Phrase Structure Grammar.Cambridge: Blackwell, and Cambridge,Mass.
: Harvard University Press.Kasper, R. and W. Rounds.
(1986) A LogicalSemantics for Feature Structures.
InProceedings of the 24th Annual Meeting ofthe Association for ComputationalLinguistics, Columbia University, New York,10-13 June, 1986, 235-242.Johnson, M. (1987) Attribute-Value Logic and theTheory of Grammar.
Ph.D. Thesis,Department of Linguistics, StanfordUniversity, Stanford.Pollard, C. and I.
Sag.
(1987) Information-BasedSyntax and Semantics.
CSLI Lecture NotesNo.
13.
Stanford.Proudian, D. and C. Pollard.
(1985) Parsing Head-Driven Phrase Structure Grammar.
InProceedings of the 23rd Annual Meeting ofthe Association for Computat ionalLinguistics, University of Chicago, Chicago,8-12 July, 1985,167-171.Smolka, G. (1988) A Feature Logic with Subsorts.Li log-Report 33.
May, 1988, IBMDeutschland, Stuttgart.Third, the programme outlined here is obviouslyunsatisfactory without a sound and complete prooftheory.
The entire point is to have a completelylogical characterisation f grammar.
A complete110 -
