USER MODELS~ DISCOURSE MODELS, AND SOME OTHERSKaren Sparck JonesComputer LaboratoryUniversity of CambridgeCambridge, EnglandMy context for this note is natural language interfaces tocomplex systems, considered, as the aim is systembuilding, from the system's point of view.
I hold that thediscourse model relates four other models that are allrequired in dialog, but which need to be distinguished.These other models, as I define them in this note, arethe world model, the user model, the system model, andthe text model.
It is a mistake, in my view, to try toestablish the relation between discourse models anduser models without reference to the other models thatfigure in the interaction between man and machine.The case for all the models mentioned can be madethrough a hypothetical system example.
Suppose wehave an automated reference librarian in an industrialcompany, i.e., a highly sophisticated expert system.Suppose also that the system can sustain the kind ofdialog we can, and so imagine a dialog between thesystem and a user as follows:U1.
I'm looking for a book on logic programming.S1.
You're in Accounts, aren't you?U2.
Yes.$2.
So you'd like something with financial examples.U3.
Well that would be very convenient, but I'mreally interested in logic programming itself.$3.
Just as well: we don't have anything on Prologfor accountants.
Do you want something reallynoddy?
We've got one pretty basic book.U4.
How good do you think it is?$4.
It's very popular.
It doesn't assume you knowanything about programming.U5.
Oh, but I've done a bit of Cobol.$5.
There isn't anything on Prolog from a Cobolpoint of view, I'm afraid.U6.
I wouldn't have thought that mattered: Cobol'sa good general lead in, isn't it?$6.
Not especially.
But we have another book thatwould probably suit you better than the first: it's veryclear and has a lot of different examples like planningthe week's menus and building an office meetingdiary system, but it does assume you have someexperience of programming.I assume that the system knows about the material inthe library, about he company, and about he library'srole in the company's activities.
It also knows about hecompany's employees (which include the illustrativeuser, known to be a woman in Accounts who thinks herboss underestimates her).
The system's knowledge ofthe library and the company are part of its permanentworld knowledge, and its knowledge of the company'semployees i  in principle no different in kind, though thesystem's knowledge of people's intensional states maybe less certain than some of its other knowledge.There is nevertheless a good reason for distinguish-ing the system's knowledge of its users, and hence ofany specific user, from the rest of its world knowledge.This is a functional reason: the system exists to solveproblems presented by its users.
The individual user isa necessary participant inthe system's problem solving,and the system's actions are driven by its view of theuser's specific needs.
In the dialog, the system's re-sponse $6 is motivated by the perceived fact that theuser, as a user, is a person with particular characteris-tics who is separated out from the rest of the worldbecause her needs have to be met.
Thus the response isan appropriate one in relation not to individual utter-ances or facts about the user, but to the entity consti-tuting the user model as a whole, namely that she's anon-novice female, seeking to impress her boss byimproving her computing skills.
(This functional view,of course, implies that whether the user is human or notis an independent, contingent matter.
)But for the same functional reason, the system has tohave a model of itself embodying, for example, its planto extract more detail about the user's book request.Though the system is in principle, like the user, part ofthe world, it has to be functionally distinguished for it tocarry out its task: thus it is the system's aim, not thegeneral state of the world, which leads it to choose $2,asking about financial examples.Copyright 1988 by the Association for Computational Linguistics.
Permission to copy without fee all or part of this material is granted providedthat the copies are not made for direct commercial dvantage and the CL reference and this copyright notice are included on the first page.
Tocopy otherwise, or to republish, requires a fee and/or specific permission.0362-613X/88/0100o-o$03.0098 Computational Linguistics, Volume 14, Number 3, September 1988Karen Sparck Jones User Models, Discourse Models, and Some OthersHowever, there are no good grounds for assumingthat the system's immediately accessible world modelfor a given interactive session contains all its worldknowledge, its immediate user model everything itknows about the user, or its immediately accessiblesystem model everything it knows about itself: forexample, that its models for the illustrative dialog coverits knowledge of the company's buildings, the user'spay, or its own plan to revise its book descriptions (it'sa powerful system).
The system's entire stock of knowl-edge is not needed for effective interaction i  a partic-ular dialog: and indeed, given the large amounts ofpermanent knowledge presupposed, having all this tohand would simply clog everything up.For a given dialog, therefore, the world model, usermodel, and system model will be selections, which arefunctionally motivated and hence distinguished, fromthe system's complete and previously undifferentiatedstock of knowledge.
This, of course, requires an invo-cation mechanism of the kind sought by Sperber andWilson (1986), yet one which not merely selects infor-mation as relevant but assigns it a functional role.
Forexample, being in Accounts becomes part of the usermodel, but knowledge about the relation between Pro-log and logic programming becomes part of the worldmodel, and proffering specific books as a strategy forclarifying user needs becomes part of the system model.The invocation is continuous, triggered by the progressof the dialog, so the system's knowledge of the user'sdesire to impress her boss, for example, which was notnecessarily initially selected as relevant, is invoked tomotivate $6.The fourth factor is the dialog itself.
The text of theinteraction is an inert object: but discourse processingimplies some model of the text as a linguistic object(Sparck Jones 1983).
This linguistic model is a textmodel that is functionally required, like the other mod-els, to support one subprocess of the whole problem-solving interaction.
The text model deals with text-based entities, which are linguistically characterizedand need not have real world referents, like the Cobolbook (cf.
Panel VII in Tinlap-3 1987).
It is this linguis-tically motivated interpretation f the dialog text whichembodies information, e.g., about the lexical itemsused, topicalisation, and anaphoric links.
The textmodel is required to guide further discourse production,if not determining at least suggesting the choice of aword, constraining sentential structure to maintain co-hesion, etc., as in the use of "accountants" rather than"financial staff" in $3, for example and of "that" in U6,and in the form of $5, where the structure of "Prologfrom a Cobol point of view" is linguistically related to$3 and U5.Compared with the other models, the text model maynot appear to be a subset of a larger body of knowledgeabout he world, including knowledge about individuals.But it can apply general knowledge of argument struc-tures (in the sense of Reichman (1985)) as well as ofgrammar, just as the permanent world model containsgeneral knowledge about humans, and it can in principlealso depend on prior knowledge of linguistic individu-als, e.g., (somewhat trivially) "Accounts".
Knowledgeprovided by the text model, like that supplied by theother models as they develop through the interactivesession, can update the permanent s ock, in which it hasno more special status or character than the informationabout people who can function on occasion as users.But the text model is not the discourse model: it istoo shallow for this.
It does not, for instance, expressthe relation between Prolog and logic programming, orthe user's inferred intention to better herself, thoughthese are clearly discourse matters.
The text modelincludes, on the other hand, information about he orderof mention of entities that is relevant to the productionof linguistic responses, which is not obviously a dis-course matter if the discourse model is about thesubstantive relations between discourse entities (Co-hen, Morik, Schuster, all this issue).In fact, none of the four models listed can claim to bea discourse model.
The discourse model is what relatesthese four models, that is, expresses the relationsbetween them.
Thus the discourse model relates theworld model entity, the noddy book, with the usermodel element representing the user's request for abook on logic programming; and it relates the systemmodel constituent--help a user by suggesting a specificbook--to these world model and user model entities,the noddy book and requested book, respectively.Again, the discourse model relates the system's beliefabout he utility of a book on Prolog for a would-be logicprogrammer with the world model ink between Prologand logic programming, and it relates this book in theworld model with the text model entity for "one prettybasic book".The discourse ntities are the entities involved in thevarious models (taking entities as complex structuredobjects as well as simple ones), but the discourse modelis not the mere aggregate ofthe other four models: it hasto explicitly relate their elements in a way that allowstransitions from one model to another to meet therequirements of the system's task.
Thus the user'sbelief about the connection between Cobol and logicprogramming is an element of the user model, where itis functionally associated (by the system) with user'sgoal of learning about logic programming.
But the user'sbelief about the relation between Cobol and logic pro-gramming is also related to the world model because itis a function of the world model to test for existence, inthis case for the reality of a connection between Coboland logic programming.
The relation between these userand world model entities referring to Cobol and logicprogramming, i.e., the relation between a belief in auser model functionally concerned with achieving oalsand a proposition in a world model functionally con-cerned with existence testing, is one sort of discoursemodel relation.
There is another one in the relationComputational Linguistics, Volume 14, Number 3, September 1988 99Karen Sparek Jones User Models, Discourse Models, and Some Othersbetween the user model belief and the text model entity"a good general ead in".
But what discourse modelrelations we should recognize, and hence whether' weshould have an austere or promiscuous ontology forthese relations, is not so far clear.Thus the four different modelslworld, user, system,and text--below the discourse model are all neededbecause each serves a distinct function, implying adifferent selection from, and organization of, the totalinformation relevant to the interaction between the userand the system.
The discourse model is then alsoneeded to provide the links between the four, whichsupport calls from one to another.A shifting focus of attention like that represented bythe point of interaction between participants and dis-course in Grosz and Sidner's (1986) account is naturallypresupposed here.
But my argument is that we need toseparate a participant's (in this case, the system's) viewof itself rom its views of the world and of the user.
Theway these interact with the text model will then bereflected in a subset of relations (and hence entities) inthe discourse model which constitutes the focus ofattention.
Thus, within the type of framework Groszand Sidner propose, I am advocating, on functionalgrounds, a finer allocation of entities to a larger set ofmodel,~.
This large set of functionally motivated modelsis neede6 for serious systems and interfaces, though insimple cases the different models may collapse into one.I am similarly arguing, in relation to Wahlster (1987), fora finer set of modeling distinctions.
These distinctionsreflect the different status of the various objects andperspectives involved in discourse, and have to berecognized even if the system's operations are treatedas if carried out within one overall model.REFERENCESGrosz, B. and Sidner, C. 1986 Attention, Intentions, and the Structureof Discourse.
In Computational Linguistics 12: 175-204.Reichman, R. 1985 Getting Computers to Talk Like You and Me.
MITPress, Cambridge, MA.Sparck Jones, K. 1983 Shifting Meaning Representations.
In Proceed-ings of the 8th International Joint Conference on Artificial Intelli-gence: 621-623.Sperber, D. and Wilson, D. 1986 Relevance.
Basil Blackwell.
Oxford,England.Tinlap-3, Panel VII on Reference 1987 In Wilks, Y.
(ed.
), TheoreticalIssues in Natural Language Processing, New Mexico State Uni-versity, University Park, NM: 128--154.100 Computational Linguistics, Volume 14, Number 3, September 1988
