Proceedings of the Fourth Workshop on Teaching Natural Language Processing, pages 27?34,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsMultilingual Editing of Linguistic ProblemsIvan DerzhanskiDepartment of Mathematical LinguisticsInstitute of Mathematics and InformaticsBulgarian Academy of Sciencesiad58g@gmail.comAbstractMultilinguality has been an essential feature ofthe International Linguistic Olympiad since itsconception.
Although deemed most desirable,the production of a problem set in several par-allel versions and the verification of theirequivalence is a time-consuming and error-prone task.
This paper tells about the effortsto develop tools and methods which increaseits efficiency and reliability.1 IntroductionIn September 2003 the 1st International Linguis-tics Olympiad (IOL, n?e International Olympiadin Theoretical, Mathematical and Applied Lin-guistics), an annual contest for secondary-schoolstudents in solving self-sufficient linguistic prob-lems (Derzhanski, Payne 2009), took place inBulgaria.
Six countries were represented by atotal of 33 participants.
At the 10th instalment in2012 the countries were 26, the contestants 131,and both numbers keep growing.Since its launching, multilinguality has been acrucial feature of IOL.
A linguistic problem de-pends more on the language in which it is formu-lated than a problem in, e.g., mathematics: notevery problem can work in all languages, andeven when it can, producing versions which giveequal chances to all contestants is not alwaysstraightforward.
For this reason at IOL, unlikemany other international fora, there is no ques-tion of limiting the working languages to one orjust a few.
Accordingly their number has grownfrom five at IOL1 to fifteen at IOL10.1  For the1 In fact at IOL1 and some subsequent early IOLs the ver-sions that were made outnumbered the actual working lan-guages by one, because an English version was made, al-though not used at the contest, for general reference and foradvertising.
At some of the recent IOLs, too, there havesame reason the versions of the problem set in allworking languages can?t be created immediatelybefore the contest, as is done at some of the otherinternational science olympiads; they need to beprepared and verified well in advance.The production of the multilingual package isa time-consuming and error-prone task, and itcalls for the development of tools and methods toincrease its efficiency and reliability.2 The Past: IOL1A linguistic problem is composed of languagematerial and surrounding text; the language ma-terial in turn consists of data in unfamiliar lan-guages and in Solverese2 (usually translations ofthe unfamiliar language data).
In a multilingualedition of the problem set it is imperative that theSolverese parts be equivalent and everything elsebe identical.Figure 1 presents half a page from the Dutchand the English versions of the IOL1 problemset.
It is easy to see that the formatting, the for-mulae and the Egyptian Arabic expressions hadto be exactly the same.In order to minimise the effort needed to editthe problems in all working languages and thechance that a technical mishap might create adivergence where none should occur, an ad hocmethod was invented.
The problem set was writ-ten in LATEX,3 with a master source file for eachbeen more versions than working languages, as the versionsin British and American English have been separate, thoughonly differing in the format of the dates and in the spellingof a few words.2 On this term see (Bozhanov, Derzhanski 2013, fn.
2).3 This choice was made because TEX is not a mere typeset-ting system but a full-fledged programming environment,which enables some of the text to be computed rather thantyped, greatly reducing the danger of typographic errors.The most powerful inspiration was (Knuth 1986, p. 218);see also (Derzhanski 2009, Appendix A).27Figure 1.
Half a page from the Dutch and the English versions of the IOL1 problem set.28\newpage \def \probword {Opgave}\def \asgtword {Opdracht} \problem {25}%Hieronder staan rekenkundigevergelijkingen in het Egyptische dialect van het Arabisch%\footnote{[?
]}.%Alle onderdelen voor en na het ``='' teken zijn breuken waarin de tellersen noemers niet hoger zijn dan~$10$.
(Alleen het rechterdeel van de laatstesom is hierop een uitzondering.)
Er is ook geen noemer, die gelijk is aan$1$:%\fracdata%\assignment Noteer deze vergelijkingen in cijfers.\assignment In de vergelijking \hfill \fractest \hfill ontbreekt \'e\'enteken.\\ Welk teken is dat?\commentDe letters \wipa x en \wipa{\sh} worden ongeveer als de Nederlandse\word{ch} en \word{sj} uitgesproken;\wipa C is een specifieke Arabische medeklinker.Het streepje boven een klinker geeft lengte aan.\by{(Ivan Derzhanski)}\newpage\problem {25}%Below you see arithmetic equalitieswritten in Egyptian Arabic%\footnote{[?
]}.%All summands, as well as all sums except the last one, are represented asfractions in which neither the numerators nor the denominators are greaterthan~$10$, nor is any denominator equal to~$1$:%\fracdata%\assignment Write these equalities in figures.\assignment The equality \hfill \fractest \hfill is missing a sign.\\ Whichone?\commentThe letter \wipa{\sh} is pronounced as English \word{sh}, \wipa x as the\word{ch} in \word{loch};\wipa C is a specific Arabic consonant.A bar above a vowel indicates length.\by{(Ivan Derzhanski)}\newcommand \problem [1]{\section*{\probword\ \stepcounter{section}\thesection\ (#1 \pontword)}}\newcommand \assignment {\stepcounter {assignment}\paragraph{\asgtword~\theassignment.
}}\def \fractest {$\egar{rubC} + \egar{Ca{\sh}art its\A C} \; = \;\egar{sabaCt isd\A s}$}Figure 2.
Some excerpts from the Dutch and the English master files and the macro file.\def \comment {\paragraph {Noot:}}\def \probword {Problem}\def \asgtword {Assignment}\def \comment {\paragraph {Note:}}29language version and a file of common macrodefinitions, input by all master files.Figure 2 shows how this works.
The excerptsfrom the master files generate the text of theproblem seen in Figure 1.
Both master files referto the shared macro file for the set of equalitiesin the data (\fracdata) and the equality in theassignment (\fractest).
The macro file alsotakes care of the uniformity of the formatting ofproblems and assignments, although the wordsfor ?Problem?
and ?Assignment?
in the respectivelanguages are defined in the master files(\probword and \asgtword).The same technique saves repetition withineach text, for example, when handling a verycommon form of assignment:\def \fordword #1{Vertaal in het #1}\assignment \fordword {Nederlands}: [twice (in Problem 1 and in Problem 4)]\assignment \fordword {Baskisch}:\assignment \fordword {Adygisch}:\assignment \fordword {Adygisch}, op alle mogelijke manieren:\def \fordword #1{Translate into #1}\assignment \fordword {English}:  [twice (as above)]\assignment \fordword {Basque}:\assignment \fordword {Adyghe}:\assignment \fordword {Adyghe} in all possible ways:Figure 3.
Some more excerpts from the Dutch and the English master files for IOL1.The system made the production of the six paral-lel problem sets significantly more efficient andreliable than if six separate documents had beenwritten.
Still, much material is shared by thesource files, and as can be seen from Figure 1,the texts in Dutch and in English differ morethan they need to.3 The Present: IOL6 and onwardsThe problem sets for IOL2?5 were prepared inMicrosoft Word as separate documents, and theidentity of the unknown language materialas well as the equivalence of the Solverese textswas checked entirely by human eye and hand.By the time the LATEX-based multilingual systemwas revived (in 2008), things had changed inseveral respects.
The number of participants inIOL had grown significantly, as had the quantityand diversity of the working languages; IOL it-self had become more mature, and harder prob-lems were being assigned; most importantly, theawareness of IOL?s Problem Committee of theneed to invest more time and attention into thepreparation of the problem set (Derzhanski et al2004) had increased.
But with only so manydays in the year, this all meant that the multilin-gual process often had to start before the contentof the problems had been finalised, with changessometimes proving necessary as an effect of thisprocess, as it emerged that some problems (orparts of them), especially problems involvingword semantics, would be easier, or certain ex-planations make more sense, in some languagesthan in others.4  And having to make the samecontent change in several parallel texts is unde-sirable, for obvious reasons.Therefore when the system came back to lifein the weeks before IOL6, it did so as its ownantithesis.
In the new version, which has been inuse ever since, the main source files for the indi-vidual Solverese versions are very brief.
Apartfrom setting the paper size and the encodings andinvoking the Babel package (Braams, 2008) withthe appropriate language settings, each inputstwo other files.
One is composed entirely ofmacro definitions; this is effectively a pseu-docode-to-Solverese dictionary.
The other is thetext of the problems (statements and solutions),the same for all versions, written entirely in thesaid pseudocode.4 Several early versions of Problem IOL10#5 (on Rotuman,by Boris Iomdin and Alexander Piperski) required thesolver to make the conjecture that in Rotuman the word for?grey?
is derived from the word for ?ashes?, but this wordwas removed from the assignment at the final stage, when itwas brought to the Problem Committee?s attention that thesame is true of three of IOL10?s working languages.The canonical solution of Problem IOL5#3 (on Georgianverb morphology, by Yakov Testelets), first composed inRussian, suggested that predsedatel?stvovat?
was too long aword to gloss a suppletive Georgian verb; this was crossedout because the corresponding verb in English, chair, isarguably only two phonemes long.The original Russian text of Problem IOL1#1 (on JacobLinzbach?s Transcendental Algebra, by Ksenia Gilyarova)glossed the verb ?
in the same way (ljubit?)
whether it re-ferred to loving people or liking things, but the final versionused different expressions because in Estonian there was noother choice.30Figure 4.
Half a page from the Dutch, English and Hebrew versions of the IOL10 problem set.31\problem \givesent {\inlgEus} \andtrans {\tothislang} \chaotict.
\pasoreus:%\begin{center}\bord{ahaztu ditut, ahaztu zaizkit, ahaztu zaizu, hurbildu natzaizue,hurbildu zait, lagundu ditugu, lagundu dituzu, lagundu dute,lagundu nauzue, mintzatu natzaizu, mintzatu gatzaizkizue,mintzatu zaizkigu, ukitu ditugu, ukitu naute}\medskip\ahazty 23, \mintzaty 64, \hurbildy 15, \mintzaty 12, \lagundy 46,\lagundy 51, \hurbildy 31, \ukity 46, \ukity 61, \lagundy 26,\lagundy 63, \mintzaty 45, \ahazty 16\end{center}%\begin{assgts}\item \corrcorr.\item \fordinto {\tolgEus}: \ukity 21, \hurbildy 61.\item \fordinto {\tothislang}:\bord{lagundu dut}, \bord{hurbildu gatzaizkizu}.\item \formahat {\tolgEus}.
\findtran.\end{assgts}%\by{?\NZname}\def \givesent #1{Gegeven zijn enkele zinnen in het #1}\def \andtrans #1{evenals hun vertalingen in het #1}\def \chaotict{in willekeurige volgorde}\def \fordinto #1{Vertaal naar het #1}\def \inlgEus{Baskisch}\def \tolgEus{Baskisch}\def \tothislang{Nederlands}\def \mintzaty #1#2{\iN{#1} sprak\iJ{#1} met \iA{#2}}\def \ukity #1#2{\iN{#1} raakte\6#1(,,,n,n,n) \iA{#2} aan}\def \iN #1{\6#1(ik,jij,hij,wij,jullie,zij)}\def \iA #1{\6#1(mij,jou,hem,ons,jullie,hen)}\def \iJ #1{\6#1(,,,en,en,en)}\def \givesent #1{Here are some sentences in #1}\def \andtrans #1{as well as their #1 translations}\def \chaotict{in arbitrary order}\def \fordinto #1{Translate into #1}\def \inlgEus{Basque}\def \tolgEus{Basque} In the English master file:\def \tothislang{English}\def \ous {ou$_{\textrm{\small sg}}$}\def \oup {ou$_{\textrm{\small pl}}$}\def \mintzaty #1#2{\iN{#1} talkedto \iA{#2}}\def \ukity #1#2{\iN{#1} touched \iA{#2}}\def \iN #1{\6#1(I,y\ous,he,we,y\oup,they)}\def \iA #1{\6#1(me,y\ous,him,us,y\oup,them)}Figure 5.
Excerpts from the pseudocode source and the Dutch and English dictionaries.32Figure 4 presents half a page from the Dutch,English and Hebrew versions of the IOL10 prob-lem set; Figure 5, the text of this problem inpseudocode and some excerpts from the Dutchand English dictionary files.How much granularity is desirable depends onthe variety of the data and the regularity of therelevant fragments of the grammars of the fea-tured and the working languages.
Breakingdown a sentence such as He ate the fish (and itsequivalents) into subject, verb and object andgenerating each by its own macro makes themost sense if the same constituents also appearelsewhere in the text, but it always makes verifi-cation easier.One important advantage of this approachover the others was already noted: if a contentchange in some problem (adding, replacing ordeleting some item in the data or the assign-ments) is required, it is made in one place only,reducing the danger of error.
Another lies in themaking of the dictionaries.
Those are preparedby filling the cells of a spreadsheet, with all lan-guages in parallel columns.
Figure 6 shows ascreenshot containing part of the spreadsheet forIOL10 (several rows and six of the 15 workinglanguages).Figure 6.
A screenshot of part of the multilingual spreadsheet.This makes it easy to compare words or sen-tences in any two languages and to find mis-matches and imbalances.
Also, since the order-ing of the rows of the spreadsheet is immaterial,they can be arranged and rearranged to groupcertain words or sentences in close rows in orderto make similarities or differences stand out.5A final advantage is the move away from themodel (disadvantageous for more than one rea-son6) in which the version of a problem in oneworking language is the original and the other5 One of the phenomena in Problem IOL10#1 (on Dyirbal,by Art?rs Seme?uks) was factitive morphology; it was illus-trated by several deadjectival verbs, which could be trans-lated as lexical factitives (bent ?
bend, healthy ?
heal) oras periphrastic ones (fat ?
make fat, sleep ?
make fallasleep), but which were which differed from one workinglanguage to the other.
In order to guarantee the equal diffi-culty of the problem in all versions it was necessary to en-sure that each language used factitives of several types,which was facilitated by the summary character of thespreadsheet.6 At IOL5, where some versions of the problem set weremade by translating the English one, the sentence ?Knowl-edge of English is not necessary for solving the problem?was supposed to be present in one of the problems, but wasomitted from the English version (because of its obviousinappropriateness there) and therefore didn?t make it intothe other ones either; this was considered a grave mishap.versions are translations.
The parallel productionof all Solverese versions from the same pseu-docode source and with use of dictionaries madefrom a table where all working languages areuniformly situated creates the effect of (machine)translation from pseudocode to all languages,which in turn makes all languages equal.
At acontest such as IOL, where all contestants are tohave the same chances regardless of their work-ing languages, this is of vital importance.The method has been tested and proven towork with two Cyrillic-written and 12 Roman-written languages, as well as Korean (at IOL7)and Hebrew (at IOL10), with hardly any techni-cal difficulties.
It remains to be seen whether itwill meet just as cheerfully the predictable fur-ther growth of the number and diversity of IOL?sworking languages, but it is certain that its poten-tial has not yet been fully explored.ReferencesB.
Bozhanov and I. Derzhanski.
2013.
Rosetta StoneLinguistic Problems.
In this volume.Johannes Braams.
2008.
Babel, a multilingual pack-age for use with LATEX?s standard documentclasses.
CTAN:macros/latex/required/babel/.33I.A.
Derzhanski, A.S. Berdichevsky, K.A.
Gilyarova,B.L.
Iomdin, E.V.
Muravenko, and M.L.
Rubin-stein.
2004.
On the Translatability of LinguisticProblems: the Lessons of the First InternationalLinguistics Olympiad.
In: I.M.
Kobozeva, A.S.Narinyani, and V.P.
Selegey (eds.
), Proceedingsof the International Conference Dialogue2004: Computational Linguistics and Intellec-tual Technologies.
Nauka, Moscow, 166?171 (inRussian).Ivan A. Derzhanski.
2009.
Linguistic Magic andMystery.
Union of Bulgarian Mathematicians,Sofia.I.A.
Derzhanski and T.E.
Payne.
2009.
The Linguis-tics Olympiads: Academic competitions in linguis-tics for secondary school students.
In: K. Denhamand A. Lobeck (eds.
), Linguistics at School:Language Awareness in Primary and Secon-dary Education, Cambridge University Press,Cambridge, UK, 213?226.Donald E. Knuth.
1986.
The TEXbook.
Addison?Wesley, Reading, MA.34
