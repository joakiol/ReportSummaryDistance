INTRODUCING MAXIMAL VARIAT IONIN  TEXT PLANNING FOR SMALL  DOMAINSErwin Marsi *Depar tment  of Language and SpeechUniversity of Ni jmegenAbstract?
This work describes a method for text planning that is suitable to small domains liketrain table information.
Our aim is to introduce maximal variation in the packaging of?
information and in the linear order of its presentation.
To this end, we regard text planningas a goal-driven process that dynamically constructs a text plan.
The goal is a state where allinformation i the input is shared with the user; the means to achieve this goal are utterances.The application of utterances is limited by constraints hat refer to the user's current state ofknowledge.
This approach to text planning can be conven!ently implemented as a FunctionalUnification Grammar.
In addition, we show how optional or inferable information can beaccountedfor, how focus can be distributed, and how the generation ofanaphoric expressionscan be constrained by looking at the form and content of a previous utterance.1 In t roduct ionThis work on text planning is part of a project that is concerned with investigating Dutchprosody by implementing a concept-to-speech system.
The project focuses on the prosodicmodule, which predicts the pitch accents and the prosodic boundaries of an utterance on thebasis ?of its semantic and syntactic ?structure and its discourse context.
The key idea is that anatural anguage generator, as opposed to a parser, generates extensive and reliable informationabout the liriguistic structure of an utterance, and is therefore particularly suitable to provideinput to the prosodic ?module.
This approach requires at least two things from the generator.First, it should generate all information that the prosodic module needs for deriving the prosodicstructure of an utterance.
Second, it should generate as much variation as?
possible, in orderto put the prosodic module to the test.
Given a conventional rchitecture consisting of a textp lanner  followed by a surface generator, these requirements affect the text planner.
For instance,it should keep track of the information status of concepts, because the distinction between oldand new information is important for pitch accent placement.
With respect to the secondrequirement, it should be able to paraphrase one and the same conceptual structure as differentsemantic structures, which are in turn realized as different ?sentences by the surface generator.?
This paper describes a text planner that  meets these requirements.
It is described on thebasis of an application of concept-to-speech in which train table information is taken as input togenerate a spoken description, in Dutch, of how to get from one placeto another by train.
Theapproach, however, is easily adaptable to similar domains.
Since we are primarily interestedin generating linguistically rich and maximally varied input for the prosodic module, the textplanner is rather uncomplicated and ignores many other aspects of text planning like rhetorical"Thanks to Peter-Arno Coppen, Wire Claassen, Carlos Gussenhoven, and two anonymous reviewers for theiruseful comments and corrections.58iiiiiiJ~EPTSECTIONSROUTE"CONCEPTDATANEXTSECTION"DEP-PLACEDEP-TIMEARR-PLACEARR-TIMECONVEYANCEDIRECTIONPLATFORM"CONCEPT SECTION"DEpoPLACEDEP-TIMEARR-PLACEDATA ARR-TIMECONVEYANCEDIRECTIONPLATFORMNijmegen1~:08's-Hertogenboset~1~:38- sneltreinRoosendaal4b"s-Hertogenbosch12:4ZG elderThalsen1~:59stoptreinUtrecht eentraal, station3b?
Figure 1: Example of an input structurestructuring of the text or tailoring information to the user.
In fact, there is no real dialogue withthe user in the sense that the system is capable ?of reacting on feedback from the user.
Also,efficiency considerations (real time behaviour) have not played a role.
The interesting points,however, are that the text planner employs a constraint-based approach to produce variationand that  its implementation is completely grammar-based within the framework of FunctionalUnification Grammar.2?
A Funct ional  Unif ication Grammar for text planning2.1 Input  s t ruc turesThe input to the text planner comes from an existing train travel information system.
Inresponse to a query typed by the user, it outputs travel information in a tabular format.
Thisinformation is mapped to a feature description (FD) of hierarchically structured concepts in astraightforward way.
For instance, the FD in Figure 1 represents a journey with one change.The top concept, representing ?the whole journey from departure place to arrival place, is calledROUTE.
1 It is composed of one or more SECTION nodes, each of which represents a partialjourney- from one place to another.
A section ode is accompanied by information about theplace and time of departure, the place and time of arrival, the type of conveyance, its direction,and the platform it leaves from.
Notice that the attribute NEXT serves as a link to the subsequentsection.2.2 Text  p lann ing  grammarText planning is regarded as the process of mapping the input structure to a sequence ofsemantic structures, which will ultimately be realized as spoken utterances.
Evidently, notl i t  also contains information like the  total  amount  of traveling t ime and the number of changes, which is usedto generate a summary  of the journey.
This option will be ignored here.69-CONCEPT SECTIONDONE ( 1" UNITS DONE )CSET == (UNITS) .
"CONCEPT UNIT?
DATA ( I" I" DATA )"DEP-PLACEDEP-TIMEUNF~ ARR-PLACEBMB ARRoTIMECONVEYANCEDIRECTIONPLATFORMI :tuaif- DONE\[CSET + (NEXT.
)\[NEXT\[ CONCEPTUNKNOWN"UNKNOWNUNKNOWNUNKNOWNUNKNOWNUNKNOWNUNKNOWNsECTION\] 1Figure 2: Grammar alternative for a sectionall the information in the input can be expressed in a single utterance, so the text plannermust divide it into smaller packages.
The information within a package should be coherent andthe linear order of the packages should  make sense.
For instance, it is quite odd to start thedescription of a section with the arrival place and arrival time, that is, without mentioning thedeparture place and departure time first.
Ruling out certain ways of information packaging isof course a matter of common sense; it is always possible to come up with a context in whicha very marked order  of presentation is acceptable.
The obvious solution is to use one or moretemplates that prescribe acceptable ways of presenting the information.
However, as explainedabove, our goal is to generate as much variation as possible.
Us ing  just a limited number oftemplates wduld severely restrict the amount of variation at the level of text planning.
Toobtain more variation, one has to Create an extensive list of templates, which accounts for allpossible ways of pafJ~aging and linear ordering of information.The alternative is to adopt a dynamic approach to text planning, and to consider it asan attempt o achieve a particular goal under certain constraints (Hovy 1991).
The goal is atransfer of all available information, i.e.
a state where the user knows all the information thatis in the input structure.
This does not imply, however, that all data have to be ?
explicitlyexpressed, because the listener may infer some of it from the situational context or from theprevious discourse.
For example, the departure place may be inferred, because it is the arrivalplace of  th e previous section.
The means to achieve this goal are utterances.
Generating asemantic structure for an utterance may be considered as performing a speech act that altersthe user's state of knowledge (Cohen and Perrault 1979).
According to this view, the use ofa certain utterance is limited by constraints referring to the user's current state of knowledge,and the form and content of ?previous utterances.
Within the boundaries of these constraints,planning is assumed to be a dynamic process directed by random choices.
As a result, theoutput of the planner will vary considerably from one run to another.
Thus, the text planneris not designed to generate a p lan  that will eventually transfer the information to the user?
optimally, but instead to generate as many plans as possible, which nevertheless transfer theinformation in an acceptabIe way.
70!1IIIi'!1!
:i I!i|"CONCEPT UNIT'DEP=PLACE UNKNOWN IARR-PLACE UNKNO'VN /BMB CONVEYANCE UNKNOWN I\[.DIRECTION UNKNOWNJ"Go .from (DEP-PLACE) tO (ARR-PLACE)with the (CONVEYANCE) towards (DIRECTION)'"CONCEPT UNITDATADONENEXT?
BMB(I" I" DATA)'(I" I" DONE)"DEP-PLACE KNOWNARR-PLACE KNOWNDEP-TIME (I" I" I" BMB DEP-TIME)ARR-TIME (~" I" I" BMB ARR-TIME)CONVEYANCE KNOWNDIRECTION KNOWNPLATFORM " (~" 1" 1" BMB PLATFORM).Figure 3: One of the grammar alternatives for a unitThe text planner is implemented as a Functional Unification Grammar (Kay 1984) inFUF (Elhadad 1993).
The grammar is a feature description that consists of a number of alter-natives, most of which represent an utterance with i ts  constraints on application, its semanticstructure and its effect on the user's knowledge.
The process of text pl .anning is a step-wise uni-fication of the input with the grammar.
The control mechanism of FUF traverses all conceptsin the input structure (i.e.
sub-FD's that contain the attribute CONCEPT), unifying them withsuitable alternatives of the grammar.
During this process, the input structure is enriched withnew concepts, semantic structures and updates of the user's knowledge state.We will trace this process on the basis of a simplified example.
Suppose we take the FD inFigure 1 as input.
Each SECTION concept in the input is unified with a corresponding grammaralternative.
The grammar alternative for SECTION (see Figure 2) adds a feature UNITS that isused to store a number of nodes of type UNIT, corresponding to the utterances that togetherdescribe a section.
A section typically contains between two and six units.
A unit has a featureBMB, shorthand for 'belief-mutual-belief', which represents the text planner's belief about thecurrent knowledge shared with the user.
The alternative for SECTION initializes the knowledgestate for its first unit: it is assumed that initially all information is unknown.
The remainingfeatures will be explained later on.The grammar contains many different alternatives for UNIT, of which the one in Figure 3is an example.
The value of the BMB is best viewed as a condition on the applicability of thisalternative.
For the current example, it states that the departure place, departure time andconveyance must be unknown.
Notice thati due to the nature of unification, the condition isindifferent with respect o the status of other data; they can be either known or unknown.
Ifthe condition succeeds, the speech act under ACT can be performed, which amounts  to sendinga semantic structure to the surface generator.
The string template shown as the value Of ACTis for expository reasons only; the value is actually an FD that is the semantic structure for anutterance.
Semantic structures will be discussed later On.
The slots in the template are filledby reference to the relevant values under DATA, which is the reason why this attribute is shared71-CONCEPT UNIT"DEP-PLACEDEP-T IMEARR-PLACEBMB ARR-TIME "CONVEYANCE.
DIRECTIONPLATFORMDONE TRUEKNOWN"KNOWNKNOWNKNOWNKNOWNKNOWNKNOWNFigure 4: The special unit that states the termination conditionbetween a unit and a section (cf: F igure 2) and between units (cf.
Figure 3).
2 Now performing aspeech act alters the knowledge state, which is modeled by the fact that in the subsequent unitthe values of the attr ibutes DEP-PLACE, ARR-PLACE, CONVEYANCE, and DIRECTION becomeknown.
The state of the other data is shared with the previous BMB, implying that their statusremains unaffected by the  current speech act.The expansion of a unit into a speech act and a next unit is a recursive process.
It continuesuntil BMB reaches the point where all data have become known.
This termination condition ismodeled by a special unit that has neither a speech act nor a NEXT attribute; see Figure 4.
Itdoes, however, provide the attr ibute DONE with its value TRUE, and because this value is sharedbetween subsequent units as well as between a section and its first unit, it means that  in thesection node the attr ibute DONE becomes TRUE too.
This in turn, triggers the alternatives 3 inFigure 2, which had been frozen by means of the special opt ion :wait until the feature DONEhad received a value.
FUF  tries the alternatives in the order they are given in the grammar.The first alternative succeeds if no more sections are given in the input, i.e.
this was the lastsection of the route.
Otherwise, the second alternative is taken, which forces processing of thenext sect ionJThe important thing to not ice is that when the next unit must be added, there are ingeneral multiple units whose conditions are compatible with the current knowledge state.
Atsuch points, the random choice of a unit introduces the variation that was sought after.
However,not every choice will lead to a solution, Causing FUF  to backtrack and revise its choice of units.Thus, the text  p lanner can actually be Considered a planner in the AI sense of the  wordas  aprogram that traverses a search space (a network of connected units) for a path (a sequence ofunits with associated speech acts and knowledge Updates) that satisfies its goal (a state wherethe planner believes that all data is shared with the user).F igure 5 shows an example of a part of the output of the text planner based on the input i n2The fact that two attributes hare the same value is expressed by means of path.
For instance, the path~" 1" DATA > that is the value of DATA means: go Up two levels (i.e.
skipping the attributes DATA and UNITS)and from there follow the attribute DATA to arrive at the intended value.
This value is not present yet in thegrammar alternative 0f Figure 2, but will be present in the input structure it is unified with.aAlternatives (disjunctions) in the grammar are indicated by braces.4The :wait option fo/'ces goal-freezing and is one of the ways in which FUF extends the FUG formalism itis based on.
Another extension is exemplified by the special attribute CSET.
By default, the unifier identifiesCOnstituents (i.e.
sub-FD's in the input that need to be unified with the grammar) by the presence of a specialattribute (CONCEPT in our case) and traverses these constituents in a top-down breadth-first manner.
TheCSET attribute nables the grammar writer to overrule this default and explicitly specify the constituents.
Thisoptions is used to force processing of al units (by CSET =----(UNITS) before the next section is processes (by CSET-\[-(NEXT)).
See (E!hadad 1993):72!!!
!|iIi i i"CONCEPTSECTIONSROUTE"CONCEPTJN\]SECTIONCONCEPT UNITDONE ( 1`  NEXT DONE )"DEP-PLACE UNKNOWN"DEP-T IME .
UNKNOWNARR-PLACE UNKNOWNBMB ARR-T IME UNKNOWNCONVEYANCE UNKNOWNDIRECT ION UNKNOWNPLATFORM ?
UNKNOWNCAT S . "
~ "IACT \[SEM ~U gaat van Nijmegen naar s-Hertogenboschmet de sneltrein richtin 9 Roosendaal.
""CONCEPT UNITDONE ( I" NEXT DONE )?
"DEP-PLAcE KNOWNDEP-TIME ( 1" 1` 1` BMB DEP-TIME )ARR-PLACEVIB ARR-TIME B\]CONVEYANCEDIRECTIONPLATFORMCAT SACT \[SEM "Die vertrekt vana\] perrron ~b om twaalf uur acht.
'"CONCEPT UNITDONE ( 1`  NEXT DONE)-DEP-PLACEDEP-TIME?
ARR-PLACEBMB ARK-TIMECONVEYANCEDIRECTIONPLATFORMKNOWN( 1`  1`  1`  BMB ARR-T IME )KNOWN ?KNOWN1` 1` 1` BMB PLATFORMKNOWNKNOWNKNOWN( ~ ~ ~ BMB ARK-TIME?KNOWNKNOWNKNOWNCAT S " " "ACT \[SEM "U arriveert in 's.Hertogenbosch\[ om twaalf uur aehtendertig.
""CONCEPT UNIT "DONE TRUEBMB"DEP-PLACE KNOWN"DEP-TIME KNOWNARR-PLACE KNOWNARR-TIME KNOWNCONVEYANCE KNOWNDIRECTION KNOWNPLATFORM KNOWNN EX~NEXT .
.
.Figure 5: A part of the.output that corresponds to the description of one section with threeutterances.
See example (3) for a gloss of the Dutch sentences.73Figure 15.
Notice that in the third unit the arrival place is repeated, although it was alreadymentioned in the first unit.
This is possible because the grammar alternative for the thirdunit requires the departure time to be unknown, but does not constrain the value for arrival?
place.
Therefore, it can be applied to introduce the arrival time only, ?
or to introduce the arrivalplace as well.
Either way, the arrival place is known after application of the unit.
However,every units, with the exception of the termination unit, requires at least one piece of data to beunknown, since otherwise its application would be superfluous.The  planning grammar presented so far is simplified; the one actually used has a numberof  extensions.
For instance, the assumption that some information is optional is modeled byrelaxing the terminat ion condition.
?
That  is, if the feature \[PLATFORM KNOWN\] is removedfrom the FD in Figure 4, then processing of a section may finish without making mention o fthe platform.
Furthermore, the assumption that the place of departure is inferable, since it isthe arrival place of the previous ection, is implemented by forcing the departure place to beknown in the first unit of a non:initial section.
Two othe r extensions, for generating anaphoricexpressions and discourse markers, will be discussed next.2.3 Semant ic  s t ruc turesAs mentioned earlier, the value of an ACT attr ibute is not a string template, but an FD that isthe semantic structure for an utterance.
An example is given in Figure 6.
6 It ispassed on to asurface generator for Dutch that is similar to the SURGE surface generator for English (Elhadadand Robin 1996)/ Notice how the lemmas for participants and circumstances are instantiatedby means o f  paths that refer to the relevant values within the unit's DATA feature, sFigure 6 also illustrates the distribution of focus.
A constituent that is focused is presented asimportant to the listener (as opposed to unf0cused material that is presented as less important tothe listener).
In general, information of which the speaker assumes that the listener is unfamiliarwith is unfocused, and vice versa.
9 The distinction has repercussions for both syntactic andprosodic realization.
Focus affects the syntactic structure, because it is used by the surfacegenerator to determine the word order of an utterance.
In particular, it will strive for a canonicalword order with unfocused material at  the start of the utterance and focused material at theend.
Focus ,affects the  prosodic structure, because focused material will be marked by at least?
one pitch accent.
For current purposes, this means that ?
checking the value of BMB provides aconvenient way to determine if something is focused or not.
This check is implemented as theoption between parentheses in Figure 6.
It states that if the arrival place is known, then itsrealization must be unfocused.
However, if the arrival place is unknown, the option fails andthe value for FOCUS is left unspecified.
This interacts with the default assumption about focusmade by the surface generator: Content words are focused,: while function words are unfocused.Hence, the text planner can limit itself to the exceptions, like the aforementioned case wherethe departure place is realized as a content word, but is nonetheless unfocused.
Likewise, thereis no need to explicitly specify that ?the Instrument is ?focused, or the Agent is unfocused.In addition to the distribution of focus, the text planner is also responsible for generating5The features DATA, CSET, FC, as well as the second section, were left out to save space.. 6<:1`7 DATA.
ARRLPLACE~> is an abbreviation of <1" 1" 1" 1" 1" 1" 1" DATA ARR-PLACE>ZThis generator, called SEM2SYN,  is a reusable surface generator for Dutch implemented in FUF  (Marsi1998).
Its use is not limited to the present domain of travel descriptions.
It has also been used to generatebotanical descriptions of plants.SAt present, the tex.t planner performs lexical choice, and is therefore responsible for variation at lexical level.This is not a not the only option however, since lexical choice might as well be performed in a separate module.9The focused versus unfocused distinction does not always coincide with the known versus unknown distinction.For example, old.
or know n informat~oa may be focused, to obtain a contrastive effect.74!
"CONCEPTBMB .
.
.DATA .
.
.
"CATACTUNITSPREDICATE \[ SYNSEMNEXT .
.
.
"LEMMA 9n~n?
"AGENT \[ SYNSEM I PERSON SECOND II'LE'"A Ct' VATA ARR-PLACE) 1/PARTIC \[PROPER TRUE //GOAL \[ SYNSEM . "
"?
L\LFOCUS FALSE " j / j jILEMMA (I.7 DATA iCIRCUM I INSTRUMENT \ ] I I (~  6 BMB ARR-PLACE) KNOWNI~ IL~k\[FOCUS FALSE .
\ ] \ ] jFigure 6: A unit containing the semantic structure for the utterance U gaat naarmet  de <conveyance>.
'You go to <arr-place> with the <conveyance>.
'< arr-place>anaphoric expressions.
The range of possible anaphoric expressions within the present domainis quite small.
First, the listener is situationally evoked and is always referred to by a personalpronoun.
Second, the conveyance may be referred to by a relative pronoun if it has beenmentioned before.
Third,?
a departure place, arrival place, direction or platform may be referredto by a locative anaphoric?
adverb.
The latter type of reference is less trivial, because its useis restricted by word order.
A case in point is (1) versus (2).
The anaphoric expression daar('there') is most naturally interpreted as referring to the place that was most recently mentioned.This leads to the intended interpretation (i.e.
the departure place) in (l-b), but to a confusingor even unintended interpretation (i.e.
the direction of the conveyance) in (2-b).
Thus, in orderto generate adequate anaphoric expressions of place, the text planner must keep track of themost recently mentioned place.
(1) a. U neemt de sneltrein richting Roosendaal in N i jmegeni .you take the train towards Roosenda~l in Nijmegen?
b. Daari vertrekt u om 12:08 van perron ~b.
""there leave you at !2:08 from platform 4b(2) a. U neemt in Nijmegen de sneltrein richting Roosendaali.you take in Nijmegen the train towards Roosendaal.b.
*Daari vertrekt u om 12:08 van perron Jb.there leave you at 12:08 from platform 4bThis is implemented by means of a feature FC 1?
that tells a unit what the most recently men-tioned items of type HUMAN, PLACE and OBJECT are.
This way, a unit can consult he content OfFC to decide if an anaphoric expression can be used in its accompanying utterance.
Depend ingon  the content and word order of its utterance, a unit projects similar information to the FCI?FC stands for 'forward centers', because its use shows ome resemblance to the notion of a set of forwardcenters in centering theory (Grosz, Joshi, and Weinstein 1995).
However, the text planner is certainly not meantto be an implementation of centering theory.75-CONCEPT UNITFC\].
PLACE DEP-PLACEACT "Daar vertrekt u om 12:08 van perron ~b ~CONCEPT UNIT/ \[HUMAN LISTENERNEXT I FC I PLACE PLATFORML LOBJECT CONVEYANCEFigure 7: Example of the use of FC.
See example (la) for a gloss of the Dutch sentence.feature of the next unit.
An example is given in Figure 7.The difference between the features BMB and FC is that the former tells us whether somethingis already known (either because it was mentioned in one of the previous entences or becauseit could be inferred), whereas the latter tells us whether something was ment ioned in the latestutterance.This approach poses an interesting question regarding word order: is word orderdeterminedby the text planner, by the surface generator, or perhaps by both?
One point ?of view is thata semantic structure is passed on to the surface generator, which determines the word order,which in turn determines the FC a unit projects to the next unit.
This assumes that thereis feedback from surface generator to text planner and that generation proceeds 'depth-first'(i.e.
plan the first utterance, realize the first?
utterance, plan the second utterance, realize thesecond utterance, etc.)
An alternative point of view is that the semantic structure containsrestrictions on word order (like 'mention the departure place last'), depending on the FC a unitprojects to the next unit.
This requires no feedback and assumes that the generation processis 'breadth-first' (i.e.
planning all utterances before sending them to the surface generator).
Sofar, we have adopted the latter approach, ?
because it less complicated, both in concept and inimplementation.Finally, the text planner also inserts discourse markers.
For the time being, this is justa provisional solution to improve the quality of the output; ?
the implementation is not basedon any theory.
Since the nature of the domain is a small narrative in which the sections aredescribed?
in ?chronological order, temporal continuity markers are suitable in most cases.
Forexample, the first unit of non-initial section may add a temporal continuation marker like next, ?then, after that etc.
It would be  interesting to explore the possibilities of a more principledaccount of discourse markers, e.g.
by using rhetorical relations as in (Hovy 1991).?
2 .4  F ina l  output(3) gives an example of a travel description in Dutch, generated by the Combination of textplanner and the surface generator, and based on the input in Figure 1.
(3 )  a. U #aat van N i jmegen naar 's-Hertogenbosch met  de sneltrein r icht ingyou go from Nijmegen to 's-Hertogenbosch with the express-train towardsRoosendaal.Roosendaal'You take the Roosendaal express train to 's-Hertogenbosch.'b.
Die vertrekt  van perron ~b om twaalf  uur  acht.that leaves from platform 4b at twelve hour eight'Which ?leaves from platform 4b at  12.08'76IIIIIIIIIC.
?d.
?e .f.U arriveert in 's-Hertogenbosch om twaalf uur achtendertig.You arrive in 's-Hertogenbosch at twelve hour thirty-eight'Which gets you to 's-Hertogenbosch at 12.38'Vervolgens neemt u .
daar de stoptrein richting Utrecht Centraal Station.next take you there the local-train towards Utrecht Central Station'Next, take the local train to Utrecht Central Station.
'Die vertrekt in 's-Hertogenbosch van perron 3b om twaalf uur tweeenveertig.that leaves in 's-Hertogenbosch from platform 3b at twelve hour fortytwo?
'Which leaves in 's-Hertogenbosch from platform 3b at 12.42.
'Dan bent u in Geldermalsen om twaalf uur negenenvijftig.then are you ?in Geldermalsen at twelve hour fiftynine ?
'Which gets you to Geldermalsen at 12.5973 SummaryWe have described a simple method for text planning that is suitable to small domains like travelinformation.
Our aim was to introduce maximal variation in the packaging of information andin the linear order of its presentation.
To this end, it proved useful to view text planning as agoal-driven process, in Which utterances are used to alter the knowledge state of the user, andtheir use is restricted only by constraints that refer to the user's knowledge state.
This can be?
conveniently implemented as a Functional Unification Grammar.
In addition, we showed howoptional or inferable information can be accounted for, how focus is .distributed, and how thegeneration of anaphoric expressions can be ?constrained by the form and content of the latestutterance.
Future work may address the necessity of feedback from surface generator to textplanner, and the incorporation of a more ?principled account of generating discourse markers.Furthermore, an evaluation 0f the output with real users would be desirable.ReferencesCohen, P. and C. Perrault (1979).
Elements of a plan-based theory of speech acts.
CognitiveScience (3), 177-212.Elhadad, M. (1993).
FUF: The Universal Unifier - User Manual, version 5.2.
New York.Technical Report CUCS-038-91.Elhadad, M. and J. Robin (1996).
An overview of SURGE: A reusable comprehensive syntacticrealization component.
Technical Report 96-03, Ben Gurion University, Department ofcomputer Science, Beer Sheva, Israel.Grosz, B. J., A. K. Joshi, and S. Weinstein (1995).
Centering: a framework for modeling thelocal coherence of discourse.
Computational Linguistics 21 (2), 203-225.Hovy, E. H.
?(1991).
Approaches to the planning of coherent ext.
In W. Swartout andW.
Mann (Eds.
), Natural Language Generation in Artificial Intelligence and Computa-tional Linguistics, pp.
83-102.
Boston: Kluwer Academics Publishers.Kay, M. (1984).
Functional unification grammar: A formalism for machine translation.
InProceedings of COLING-84, pp.
75-78.
ACL, Stanford University.Marsi, E. (1998).
A reusable syntactic generator for Dutch.
In P.-A.
Coppen, H. V. Halteren,and L. Teunissen (Eds.
), Proceedin9s o\]7C7LIN9Z Nijmegen.
