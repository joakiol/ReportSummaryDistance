Lessons Learned in BuildingSpoken Language Collaborative Interface AgentsCandace  L. S idnerCaro lyn  Boet tnerLotus Development Corporat ionCambridge, MA 02142 USAcsidnerlcarolyn_boettner@lotus.comChar les  R ichMitsubishi Electric Research LaboratoryCambridge, MA 02139 USArich@merl.comAbst rac tThis paper reports on the development of twospoken language collaborative interface agentsbuilt with the Collagen system.
It presentssample dialogues with the agents working withemail applications and meeting planning appli-cations, and discusses how these applicationswere created.
It also discusses limitations andbenefits of this approach.1 Co l laborat ive  AgentsThe underlying premise of the Collageff M (forCollaborative agent) project is that softwareagents, when they interact with people, shouldbe governed by the same principles that governhuman-to-human collaboration.
To determinethe principles governing human collaboration,we have relied on research in computational lin-guistics on collaborative discourse, specificallywithin the SharedPlan framework of Grosz andSidner (1986, 1990) (Grosz and Kraus, 1996,Lochbaum, 1998).
This work has provided uswith a computationally-specified theory thathas been empirically validated across a range ofUser Agentcommunicatel ApplicationFigure 1: Collaborative interface agent paradigm.human tasks.
We have implemented the algo-rithms and information structures of this theoryin the form of a Java middleware component,a collaboration manager called Collagen, whichsoftware developers can use to implement a col-laborative interface agent for any Java applica-tion.In the collaborative interface agent paradigm,illustrated abstractly in Figure 1, a softwareagent is able to both communicate with andobserve the actions of a user on a shared ap-plication interface, and vice versa.
The soft-ware agent in this paradigm takes an active r01ein joint problem solving, including advising theuser when he gets stuck, suggesting what to donext when he gets lost, and taking care of low-level details after a high-level decision is made.The screenshot in Figure 2 shows how thecollaborative interface agent paradigm is con-cretely realized on a user's display.
The largewindow in the background is the shared appli-cation, in this case, the Lotus eSuite TM emailprogram.
The two smaller overlapping windowsFigure 2: Interface for Collagen email agent.in the corners of the screen are the agent's anduser's home windows, through which they com-municate with each other.A key benefit of using Collagen to build an in-terface agent is that the collaboration managerautomatically constructs a structured history ofthe user's and agent's activities.
This segmentedinteraction history is hierarchically organizedaccording to the goal structure of the applica-tion tasks.
Among other things, this history canhelp re-orient he user when he gets confusedor after an extended absence.
It also supportshigh-level, task-oriented transformations, uchas returning to an earlier goal.
Figure 3 showsa sample segmented interaction history for thean email interaction.To apply Collagen to a particular application,the application developer must provide an ab-stract model of the tasks for which the appli-cation software will be used.
This knowledgeis formalized in a recipe library, which is thenautomatically compiled for use by the interfaceagent.
This approach also allows us to easilyvary an agent's level of initiative from very pas-sive to very active, using the same task model.For more details on the internal architecture ofCollagen, see (Rich and Sidner, 1998).We have developed prototype interface agentsusing Collagen for several applications, includ-ing air travel planning (Rich and Sidner, 1998),resource allocation, industrial control, and com-mon PC desktop activities.2 A Collaborative Email AgentThe email agent (Gruen et al, 1999) is the firstCollagen-based agent we have built that sup-ports spoken-language interaction.
Our otheragents avoided the need for natural languageunderstanding by presenting the user with adynamically-changing menu of expected utter-ances, which was generated from the currentdiscourse state according to the predictions ofthe SharedPlan theory.
Sample menus are dis-played in Figure 2.
The email agent, how-ever, incorporates a speech and natural lan-guage understanding system developed by IBMResearch, allowing users to collaborate itherentirely in speech or with a mixture of speechand interface actions, such as selecting a mes-sage.
More recently we have developed theLotus Notes TM meeting planning agent, whichincorporates peech and sentence level under-standing using the Java Speech API, as imple-mented by IBM.
The JSAPI toolkit providesa parser, which we use with a vocabulary andgrammar we developed for the domain of meet-ing planning.
The tags produced by the JavaSpeech parser are interpreted with a set of se-mantic rules that produce internal structuresused by the Collagen agent.With the email application, the user can read,compose and send messages as one typicallydoes with email.
The Collagen email agent,called Daffy, performs actions requested by theuser with speech and watches user interface ac-tions.
It can perform a few email actions on itsown (such as opening and closing windows, andfilling in the user's signature on email) and canalso undertake actions that the user requests inspoken utterances.
In the sample session shownin Figure 4, the agent keeps a todo list for theuser, explains how to accomplish email tasks fora user who is new to email, answers user ques-tions about what actions were taken in the in-teraction and offers suggestions about what todo next in the interaction as well as forming {lserrequests.To create the email agent, we built a recipelibrary about email, as required for the Colla-gen architecture, of about 55 actions and 32recipes for doing those actions; the actions in-cluded GUI primitives uch as sending a mes-sage, and high level actions such as reacting toa message.3 A Collaborative Agent forPlanning MeetingsOur experience with Daffy convinced us thatcollaborative agents would be more useful ifthey not only understood what the user was do-ing in the interface but could undertake moreof the user's sub-goals and thus off-load someof the burden from the user.
To explore thisnotion, we built Dotty, a Collagen agent, thatworks with a user who is planning a meetingwith a customer, using Lotus Notes.
As the di-alogue in Figure 5 demonstrates, Dotty is ableto take over many of the details of planning themeeting.
Dotty uses a library that is far smallerthan Daffy's: 19 actions and 5 recipes.This dialogue begins with an overall goals ofmanaging sales contacts and several sub-goals,: 2USER: "Your turn,"Done checking our to-do list.AGENT: "Let's check our to-do list.
"USER: "Ok .
"AGENT: "The following items are on our to-do list.
"AGENT: "Work on email.
"AGENT: "Prepare a presentation about Java Beans.
"AGENT: "That's all,"USER: "Ok .
"Done work ing  on emai l .AGENT: "Let ' s  work  on emai l .
"Done explaining how to work on email.USER: "What should I do?
"AGENT: "First, you reed a message.
"USER: "Ok."AGENT: "Then, you might store, print or delete the message.
"Done reading message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH GROUP ....Done explaining how to read a message.Done agent selecting message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH GROUP ....USER: "Select message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH GROUP .... "AGENT: Select message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH GROUP ....AGENT: 0pen ~essage from Brian Gorwin <brg@dewey.watson.ibm.eom> about WEEKLY SPEECH GROUP SEMINAR.Done using the contents of message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH ....AGENT: "Shall we use the contents of message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY ...?
"Done scheduling meeting with Brian at three P.M. Thursday by schedul ing.Done agent setting up meeting with Brian.USER: "Set up meeting with Brian.
"AGENT: Set up meeting with Brian.Done agent scheduling event tentatively at three P.M. Thursday.AGENT: "Let's schedule event tentatively at a time.
"USER: "Schedule event tentatively at three P.M.
Thursday.
"AGENT: Schedule event tentatively at three P.M. Thursday.AGENT: "There is a conflict of meeting with Brian at three P.M. Thursday withmeeting with Irene Landoz at three P.M.
Thursday.
"AGENT: "Let's remember to reschedule meeting with Irene Landoz at three P.M, Thursday.
"USER: "Ok .
"AGENT: Finalize meeting with Brian at three P.M. Thursday.AGENT: Close message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH GROUP SEMINAR.Done reacting to message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY SPEECH ....AGENT: "Shall we react to message from Brian Gorwin <brg@dewey.watson.ibm.com> about WEEKLY ...?
"Done agent forwarding message from Brian Gorwin <brg@dewey.watson.ibm,com> about WEEKLY ... to Steve Krantz.USER: "Forward message from Brian Gorwin <brg@dewey.watson.ibm.com> about ... to Steve Krantz.
"Done user saying identify the recipient as Steve Krantz.AGENT: "Who is the recipient?
"USER: "The recipient is Steve Krantz.
"AGENT: Forward message from Brian Gorwin <brg@dewey.watson.ibm.com> about ... to Steve Krantz.Done filling in message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH GROUP SEMINAR.AGENT: "Shall we fill in message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY ,..?
"USER: "Ok."AGENT: Add text to message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY ....Stopped ccing message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH ....AGENT: "Shall we cc message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH GROUP SEMINAR?
"USER: "No.
"AGENT: "0k, your turn.
"Done sending, canceling or saving this message as a draft.Done agent sending message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH ....USER: "Send message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH GROUP .... "AGENT: Send message from Candy Sidner <csidner@lotus.com> about Fwd:WEEKLY SPEECH ....Done storing, printing or deleting this message.AGENT: "Shall we store, print or delete this message?
"USER: "Did I forward message to Steve Krantz.
"AGENT: "Yes, you did forward message from Brian Gorwin <brg@dewey.watson.ibm,com> about ... to Steve Krantz.
"USER: "Done.
"Done interruption agent checking history.USER: "Please check history,"USER: "Done.
"Figure 3: Sample s?~gnmnted interaction history for ~m email interactiou.3AGENT:USER:AGENT:USER:AGENT:USER:AGENT:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:USER:AGENT:AGENT:AGENT:USER:AGENT:AGENT:AGENT:AGENT:USER:AGENT:AGENT:"Let's manage sales contacts.
""Let's create profile for Miles White from Abbott Laboratories.
""What is the eemail address?
""The emailAddress is mileswhite@abl.com.
""What is the workPhone?
""The workPhone is 8173329280.
"Goto profile for Abbott Laboratories.Create profile for Miles White.
"Do you want to schedule a presentation for Miles White?
""Schedule the meeting for December 9 from 2 to 4 pm.
"Make meeting entry for Miles White on December 9.
"Is the meeting here or at the customer site?
""The site is here.
""Which building?
""The building is Rogers Street.
"Locate room 5003 Center in Rogers Street.
"I'm going to reserve room 5003 Center in Rogers Street.""Ok.
"Reserve room 5003 Center in Rogers Street.
"Do you need any special equipment?""No.""Okay.
""Who will attend the meeting?
""Invite Fred Smith and Jerry Johnson.
"Invite Fred Smith and Jerry Johnson.
"Will the customer need consulting services?""Ok.
""Identifying the consulting staff.
""Invite Pam Bridges from Lotus Consulting and Jimmy Barnes from IGS.
"Invite Pam Bridges and Jimmy Barnes.
"The following people: Pam Bridges have a conflict with the meeting time..""Instead invite Julie Knox.
"Invite Julie Knox instead of Pam Bridges.
"I will get back to you to confirm this meeting.""Ok.
"Send invitations to Fred Smith, Jerry Johnson, Julie Knox, and Jimmy Barnes.
"Do you want to see company information?
""Show me information about Dover Hospital.
"Goto profile for Dover Hospital.
"You need to plan a presentation for Miles White.
""Shall we find presentations about a subject?""No.""Okay.
""I'm going to get back to you about meeting.
""The following people: Jimmy Barnes have a conflict with the meeting time..""This is message from Jimmy Barnes: I have to be in Cleveland on December 9.
"Invite Jonathan Parks instead.
"Invite Jonathan Parks instead of Jimmy Barnes.
"I will get back to you to confirm this meeting.
"Jonathan Parks is available.
"Figure 5: Sample session of Collagen agent using Lotus Notes for meeting planning (unsegmented).5including creating a profile for Miles White(which is displayed to the user as a Notes doc-ument), scheduling a meeting with Miles White(which the agent undertakes by itself using facil-ities in Lotus Notes), finding information aboutDover Hospital (which is displayed as a Notesdocument), and a brief discussion about plan-ning a presentation.4 Cur rent  L imi ta t ionsThe spoken interaction of our two Collagenagents is limited by the range of utterancesthat the utterance understanding componentscan interpret More significantly, we feel theseagents are limited in dealing with spoken con-versational errors, i.e.
errors that arise eitherbecause the recognition system produces an er-ror, or the semantic interpretation is faulty(even given the correct choice of words).
Er-rors resulting from semantic mis-interpretationare especially important because often the con-tent of the faulty interpretation is somethingthat the agent can respond to and does, whichresults in the conversation going awry.
Insuch cases we have in mind using the historybased transformations possible in Collagen (c.f.
(Rich and Sidner, 1998)) to allow the user toturn the conversation back to before where theerror occurred.Whether communicating byspeech or menus,our agents are limited by their inability to ne-gotiate with their human partner.
For example,whenever one of our agents propose an actionto perform that the user rejects (as in the emailconversation i Figure 4, where the agent pro-poses filling in the cclist and the user says no),the agent currently does not have any strategiesfor responding in the conversation other than toaccept he rejection and turn the conversationback to the user.
We are in present exploringhow to use a set of strategies for negotiationof activities and beliefs that we have identifiedfrom corpora of human-human collaborations.Using these strategies in the Collagen systemwill give interface agents a richer set of negoti-ation capabilities critical for collaboration.Finally, our agents need a better modelof conversational initiative.
We have experi-mented in the Collagen system with three initia-tive modes, one dominated by the user, one bythe agent and one that gives each some controlof the conversation.
The dialogues presented inthis paper are all from agent initiative.
None ofthese modes is quite right.
The user dominatedmode is characterized byan agent hat only actswhen specifically directed to or when explicitlytold to take a turn in the conversation, while theagent dominated mode has a very chatty agentthat constantly offers next possible actions rel-evant to the collaboration.
We are currentlyinvestigating additional modes of initiative.The collaborative agent paradigm that wehave implemented has several original features.The conversation and collaboration model isgeneral and does not require tuning or the im-plementation of special dialogue steps for theagent to participate.
The model tracks the in-teraction and treats both the utterances ofbothparticipants and the GUI level actions as com-munications for the discourse; it relates these tothe actions and recipes for actions.
The modelhas facilities for richer interpretation of dis-course level phenomena, such as reference andanaphora, through the use of the focus stack.Finally, when we began this research, we werenot certain that the Collagen system could beused to create agents that would interact withusers for many different applications.
Our expe-rience with five different applications indicatesthat the model has the flexibility and richness tomake human and computer collaboration possi-ble in many circumstances.Re ferencesB.
J. Grosz and S. Kraus.
1996.
Collaborative plansfor complex group action.
Artificial Intelligence,86(2):269-357, October.B.
J. Grosz and C. L. Sidner.
1986.
Attention, in-tentions, and the structure of discourse.
Compu-tational Linguistics, 12(3):175-204.B.
J. Grosz and C. L. Sidner.
1990.
Plans for dis-course.
In P. R. Cohen, J. L. Morgan, and M. E.Pollack, editors, Intentions and Communication,pages 417-444.
MIT Press, Cambridge, MA.D.
Cruen, C. Sidner, C. Boettner, and C. Rich.1999.
A collaborative assistant for email.
In Proc.ACM SIGCHI Conference on Human Factors inComputing Systems, Austin, TX, May.K.
E. Lochbaum.
1998.
A collaborative planningmodel of intentional structure.
ComputationalLinguistics, 24(4), December.C.
Rich and C. Sidner.
1998.
COLLAGEN: A col-laboration manager for software interface agents.User Modeling and User-Adapted Interaction,8(3/4):315-350.6
