Proceedings of the 2th Workshop of Natural Language Processing for Improving Textual Accessibility (NLP4ITA), pages 39?48,Atlanta, Georgia, 14 June 2013. c?2013 Association for Computational LinguisticsA System for the Simplification of Numerical Expressions at Different Levelsof UnderstandabilitySusana Bautista, Raquel Herva?s,Pablo Gerva?sUniversidad Complutense de MadridProf.
Jose?
Garc?
?a SantesmasesMadrid, Spain{subautis,raquelhb}@fdi.ucm.espgervas@sip.ucm.esRichard Power, Sandra WilliamsDepartment of Computing,The Open UniversityMilton Keynes,MK76AA, UKr.power@open.ac.uks.h.williams@open.ac.ukAbstractThe purpose of this paper is to motivate anddescribe a system that simplifies numericalexpression in texts, along with an evaluationstudy in which experts in numeracy and liter-acy assessed the outputs of this system.
Wehave worked with a collection of newspaperarticles with a significant number of numericalexpressions.
The results are discussed in com-parison to conclusions obtained from a priorempirical survey.1 IntroductionA surprisingly large number of people have limitedaccess to information because of poor literacy.
Themost recent surveys of literacy in the United King-dom reveal that 7 million adults in England can-not locate the reference page for plumbers if giventhe Yellow Pages alphabetical index.
This meansthat one in five adults has less literacy than the ex-pected literacy in an 11-year-old child (Jama andDugdale, 2010; Williams et al 2003a; Christina andJonathan, 2010).
Additionally, almost 24 millionadults in the U.K. have insufficient numeracy skillsto perform simple everyday tasks such as payinghousehold bills and understanding wage slips.
Theywould be unable to achieve grade C in the GCSEmaths examination for 16-year-old school children(Williams et al 2003a).
?The Standard Rules on the Equalization of Op-portunities for Persons with Disabilities?
by UnitedNations (1994) state that all public information ser-vices and documents should be accessible in sucha way that they could be easily understood.
If wefocus on numerical information, nowadays, a largepercentage of information expressed in daily newsor reports comes in the form of numerical expres-sions (economic statistics, demography data, etc)but many people have problems understanding themore complex expressions.
In the text simplificationprocess, different tasks are carried out: replacingdifficult words, splitting sentences, etc., and the sim-plification of numerical expressions is one of them.A possible approach to solve this important socialproblem of making numerical information accessi-ble is to rewrite difficult numerical expressions usingalternative wordings that are easier to understand.For example, the original sentence, ?25.9% scored Agrades?
could be rewritten by ?Around 26% scoredA grades?.
In our study we define a ?numerical ex-pression?
as a phrase that presents a quantity, some-times modified by a numerical hedge as in these ex-amples: ?less than a quarter?
or ?about 98%?.
Suchan approach would require a set of rewriting strate-gies yielding expressions that are linguistically cor-rect, easier to understand than the original, and asclose as possible to the original meaning.
Some lossof precision could have positive advantages for nu-merate people as well as less numerate.
In rewrit-ing, hedges play also an important role.
For exam-ple, ?50.9%?
could be rewritten as ?about a half?
us-ing the hedge ?about?.
In this kind of simplification,hedges indicate that the original number has beenapproximated and, in some cases, also the directionof the approximation.This paper presents a system developed for auto-mated simplification of numerical expressions.
Ex-perts in simplification tasks are asked to validate the39simplifications done automatically.
The system isevaluated and the results are discussed against con-clusions obtained from previous empirical survey.2 Previous workText simplification, a relative new task in NaturalLanguage Processing, has been directed mainly atsyntactic constructions and lexical choices that somereaders find difficult, such as long sentences, pas-sives, coordinate and subordinate clauses, abstractwords, low frequency words, and abbreviations.The rule-based paradigm has been used in theimplementation of some systems for text simpli-fication, each one focusing on a variety of read-ers (with poor literacy, aphasia, etc) (Chandrasekaret al 1996; Siddharthan, 2003; Jr. et al 2009;Bautista et al 2009).The transformation of texts into easy-to-read ver-sions can also be phrased as a translation problembetween two different subsets of language: the orig-inal and the easy-to-read version.
Corpus-based sys-tems can learn from corpora the simplification oper-ations and also the required degree of simplificationfor a given task (Daelemans et al 2004; Petersenand Ostendorf, 2007; Gasperin et al 2009).A variety of simplification techniques have beenused, substituting common words for uncommonwords (Devlin and Tait, 1998), activating passivesentences and resolving references (Canning, 2000),reducing multiple-clause sentences to single-clausesentences (Chandrasekar and Srinivas, 1997; Can-ning, 2000; Siddharthan, 2002) and making appro-priate choices at the discourse level (Williams et al2003b).
Khan et at.
(2008) studied the tradeoff be-tween brevity and clarity in the context of generat-ing referring expressions.
Other researchers have fo-cused on the generation of readable texts for readerswith low basic skills (Williams and Reiter, 2005),and for teaching foreign languages (Petersen andOstendorf, 2007).Previous work on numerical expressions has stud-ied the treatment of numerical information in differ-ent areas like health (Peters et al 2007), forecast(Dieckmann et al 2009), representation of proba-bilistic information (Bisantz et al 2005) or vagueinformation (Mishra et al 2011).
In the NUM-GEN project (Williams and Power, 2009), a corpusof numerical expressions was collected and a for-mal model for planning specifications for propor-tions (numbers between 0 and 1) was developed.The underlying theory and the design of the work-ing program are described in (Power and Williams,2012).3 Experimental identification ofsimplification strategies for numericalinformationIn order to analyze different simplification strategiesfor numerical expressions, first we have to study themathematical complexity of the expressions.
Ex-pressions can be classified and a level of difficultycan be assigned.
A study about the simplificationstrategies selected by experts to simplify numericalexpressions expressed as decimal percentages in acorpus was carried out in Bautista et al(2011b).Other important aspect of the simplification task isthe use of hedges to simplify numerical expressionsin the text.
A study was performed in Bautista etal.
(2011a) to analyze the use of hedges in the sim-plification process.
This study was done with ex-perts in simplification tasks.
A set of sentences withnumerical expressions were presented and they hadto rewrite the numerical expressions following somerules.
Several hypotheses were expressed and an-alyzed to understand experts?
preferences on sim-plification strategies and use of hedges to simplifynumerical expressions in the text.
The main conclu-sions from the study were:Conclusion 1: When experts choose expressionsfor readers with low numeracy, they tend to preferround or common values to precise values.
For ex-ample, halves, thirds and quarters are usually pre-ferred to eighths or similar, and expressions like Nin 10 or N in 100 are chosen instead of N in 36.Conclusion 2: The value of the original propor-tion influences the choice of simplification strategies(fractions, ratios, percentages).
With values in thecentral range (say 0.2 to 0.8 in a 0.0 to 1.0 scale)and values at the extreme ranges (say 0.0-0.2 and0.8-1.0) favoring different strategies.Conclusion 3: When writers choose numericalexpressions for readers with low numeracy, theyonly use hedges if they are losing precision.404 A system for adapting numericalexpressionsIn this first prototype, only numerical expressionsdefined as percentages are adapted.
From an in-put text, the percentage numerical expressions aredetected, a target level of difficulty is chosen andthe simplified version of the text is generated by re-placing the original numerical expression with theadapted expression.4.1 Numerical expressionA numerical expression consists of: (1) a numericalvalue, a quantity which may be expressed with dig-its or with words; (2) an optional unit accompanyingthe quantity (euro, miles, .
.
.
); and (3) an optionalnumerical hedge modifier (around, less than, .
.
.
).Some examples of numerical expressions used inour experiments are: ?more than a quarter?, ?around98.2%?, ?just over 25 per cent?
or ?less than 100 kilo-metres?.4.2 Levels of difficultyThe Mathematics Curriculum of the Qualificationsand Curriculum Authority (1999) describes a num-ber of teaching levels and we assume that conceptsto be taught at lower levels will be simpler than onestaught at higher levels.
Following this idea a Scale ofMathematic Concepts is defined to identify the dif-ferent levels of difficulty to understand mathematicconcepts.
The scale defined from less to greater dif-ficulty is: numerical expression in numbers (600),words (six), fractions (1/4), ratios (1 in 4), percent-ages (25%) and decimal percentages (33.8%).From the Scale of Mathematic Concepts defined,different levels of difficulty are considered in oursystem.
There are three different levels (from eas-iest to hardest):1.
Fractions Level: each percentage in the text isadapted using fractions as mathematical formfor the quantity, and sometimes a hedge is used.2.
Percentages without decimals Level (PWD):the system rounds the original percentage withdecimals and uses hedges if they are needed.3.
Percentages with decimals Level: This is themost difficult level where no adaptation is per-formed.The system operates only on numerical expres-sions at the highest levels of the scale (the most dif-ficult levels), that is, numerical expression given inpercentages or decimal percentages, adapting themto other levels of less difficulty.
So, the user canselect the level to which adapt the original numeri-cal expression from the text.
Using the interface ofthe system, the level of difficulty is chosen by the fi-nal user and the numerical expressions from the textwith higher level of difficulty than the level chosenare adapted following the rules defined.4.3 Set of strategiesA set of strategies is defined so they can be applied toadapt the original numerical expression.
The quan-tity of the expression is replaced with another ex-pression and sometimes numerical hedges are addedto create the simplified numerical expression.The use of hedges to simplify numerical expres-sion can be influenced by three parameters.
The firstis the type of simplification depending on the math-ematical knowledge of the final user.
The second isthe simplification strategy for the choice of the finalmathematical form.
And the last is the loss of preci-sion that occurs when the expression is simplified.Out of the European Guidelines for the Produc-tion of Easy-to-Read Information for People withLearning Disability (Freyhoff et al 1998), only oneinvolves the treatment of numbers: ?Be careful withnumbers.
If you use small numbers, always use thenumber and not the word?.
For example, if the textssays ?four?, the system adapts it by ?4?
following thisEuropean Guideline.
This strategy is applied by thesystem at all levels.There are other strategies to adapt numerical ex-pressions in the form of percentage to other levels ofdifficulty: (1) replace decimal percentages with per-centages without decimals; (2) replace decimal per-centages with ratios; (3) replace percentages with ra-tios; (4) replace decimal percentages with fractions;(5) replace percentages with fractions; (6) replaceratios with fractions; (7) replace numerical expres-sions in words with numerical expressions in digits.At each level of difficulty, a subset of the strate-gies is applied to simplify the numerical expression.For the Fractions Level the strategies 4, 5 and 7are used.
For the Percentages with decimals Levelthe strategies 1 and 7 are applied.
And for the last41level, Percentages without decimals Level only thelast strategy, number 7, is used.4.4 System operationThe system takes as input the original text.
The userof the system has to choose the level of difficulty.
Aset of numerical expressions are selected and a setof transformations is applied to adapt them, generat-ing as output of the system a text with the numericalexpressions simplified at the chosen level.The system works through several phases to adaptthe numerical expressions in the input text.
Some ofthem are internal working phases (2, 4 and 5).
Therest of them (1, 3 and 6) are phases where the userof the system plays a role.
The phases considered inthe system are:1.
Input text: an original text is selected to adaptits numerical expressions.2.
Mark Numerical Expressions: the numericalexpressions that can be adapted are marked.3.
Choose the level of difficulty: the user choosesthe desired level of difficulty for the numericalexpressions in the text.4.
Adapt the numerical expression from thetext: each numerical expression is adapted ifthe level of the numerical expression is higherthan the level of difficulty chosen.5.
Replace numerical expression in the text:adapted numerical expressions replace the orig-inals in the text.6.
Output text: the final adapted version of thetext is presented to the user.The next subsections presents how the system actsin each phase and what kind of tools are used toachieve the final text.4.4.1 Phase 1: Input textIn this first phase, a plain text is chosen as input tothe system to adapt its numerical expressions.
Usinga Graphical User Interface (GUI) in Java, the usercan upload an original text.4.4.2 Phase 2: Mark numerical expressionsFor the text chosen, the system executes the Nu-merical Expression Parser1.
Using this parser thenumerical quantities are annotated with their type(cardinal, fraction, percentage, decimal percentage,etc.
), their format (words, digits), their value (Vg),their units, and hedging phrases, such as ?morethan?.
The input to the program is the plain text fileand the output is the text with sentences and numer-ical expressions annotated in XML format.
In thefollowing code we can see how a numerical quantityis annotated in the parser.Overall figures showed the national passrate soared<numex hedge=?above?
hedge-sem=?greaterthan?
type=?percentage?format=?digits?
Vg=?0.97?>above 97% </numex>The XML file is treated by the system and numer-ical expressions are marked in the original text.
So,the user can see which numerical expressions are go-ing to be adapted by the system (in the next phase)depending on the level of difficulty chosen.4.4.3 Phase 3: Choose the level of difficultyThe user of the system chooses the level of dif-ficulty to adapt the original numerical expressions.There are three levels: fractions, percentages with-out decimals and percentages with decimals.4.4.4 Phase 4: Adapt the NumericalExpressionsAfter deciding the level of difficulty, the systemhas to adapt each numerical expression to generatethe final version.
The process of simplification hastwo stages: obtaining the candidate and applying theadaptation and hedge choice rules.From the XML file produced by the parser the fol-lowing information for a numerical expression is ob-tained: (1) if there is or not hedge and the kind ofhedge; (2) the type (cardinal, fraction, percentage,decimal percentage) and format (digits or words)of the original numerical expression; (3) the givenvalue (Vg) translated from the original numerical ex-pression value of the text; and (4) the units from the1For more details see (Williams, 2010)42OriginalExpressionParserVmgProportionApprox.ProgramVrMorethan28%0.280.281/30.33VgVc[0...1][0...1]1/330%28%Figure 1: Obtaining the candidate for simplification.
The original expression is annotated by the parser (Vg), and thisvalue is normalized (Vmg).
A candidate substitute value (Vc) is chosen from the proportion approximation programand normalized (Vr).original expression (M, ins, grams).
For example,if in the text the original numerical expression is apercentage like ?25.9%?, there is no hedge, the typeis ?decimal percentage?, the format is ?digits?, Vg is0.259 and there are no units.
In the expression, ?20grams?, there is no hedge, the type is ?cardinal?, theformat is ?digits?, Vg is 20 and the parser annotatesthe units with ?g?.The given value Vg annotated by the parser istransformed into a value between 0 to 1, referredto as mapping given value (Vmg), which representsthe proportion under consideration.
This value isgiven as input to the proportion approximation pro-gram (Power and Williams, 2012), which returns alist of candidates for substitution.
From this list,the first option is taken as candidate substitute value(Vc), because the program returns them in decreas-ing order of precision.
This means that the mostprecise candidate at the required level of difficultyis chosen.
The program also might return the val-ues ?none?
and ?all?
if the input value is close to0 or 1, respectively.
From the Vc we calculate therounded value (Vr) corresponding to the normaliza-tion of the candidate value between 0 to 1.
For ex-ample, if Fraction level is chosen, for the originalexpression ?more than 28%?
with Vmg=0.28, thesystem chooses Vc=1/3 with Vr=0.33.
The wholeprocess can be seen in Figure 1.An additional level of adaptation is required be-yond simple replacement with the candidate substi-tute value.
If the original numerical expressions inthe text are difficult to understand, the system mustadapt them to the desired level of difficulty.
For eachnumerical expression, the system only applies theadaptation rules if the difficulty level of the numer-ical expression is higher than the level of difficultychosen by the user.
This is captured by a set of threeadaptation rules:?
If the type of the numerical expression is ?car-dinal?
and the format is ?words?
then the candi-date to be used in the simplification is Vg.
Forexample, if the original numerical expression is?six?, it will be replaced by ?6?.?
In a similar way, if the type is ?fraction?
(thelowest possible level of difficulty) and the for-mat is also ?words?
then the candidate is ob-tained by applying the proportion approxima-tion program.
For example, if the original nu-merical expression is ?a quarter?, it would bereplaced by ?1/4?.?
If the type is ?percentages?
or ?decimal percent-ages?
and the format is ?digits?
then the can-didate is calculated by the proportion approxi-mation program provided that the level of dif-ficulty chosen in the GUI was lower than thelevel of the calculated numerical expression.In order to complete the simplification, the systemhas to decide if a hedge should be used to achievethe final version of the adapted numerical expres-sion.
This decision is taken based on the differencein value between the value of the original expressionin the text (Vg) and the value of the candidate substi-tute (Vc) (as given by the relative difference betweenthe normalized values Vr and Vmg calculated in thefirst stage).
The actual hedge used in the originalexpression (if any) is also considered.
The variouspossible combinations of these values, and the corre-sponding choice of final hedge, are described in Ta-ble 1, which presents all possible options to decidein each case, the hedge and the value correspondingto the final numerical expression.
For example, ifthe original expression is ?more than 28%?, we haveVc=1/3, Vmg=0.28 and Vr=0.33.
Then Vr>Vmg sothe corresponding choice of the final hedge is in the43OriginalNumExp if Vr>Vmg if Vr=Vmg if Vr<Vmgmore than OrigValue around Vc more than Vc more than Vcexactly OrigValue less than Vc exactly Vc more than Vcless than OrigValue less than Vc less than Vc around VcOrigValue around Vc Vc around VcTable 1: Hedge Choice Rules.
For each original expression (OrigValue), the normalized values (Vmg, Vr) are used todeterminate the hedge chosen for the simplified expression.
The final version is composed by the hedge chosen andthe candidate value (Vc)first column of Table 1 (?around?)
and the simplifiedexpression is ?around 1/3?.When the user chooses the Fraction Level in thesystem, every numerical expression with difficultylevel greater than fraction level will be replaced bya numerical expression expressed in fraction form.Depending on the values Vr and Vmg, the appropri-ate hedge will be chosen.4.4.5 Phase 5: Replace numerical expressionsOnce the system has applied its rules, an adaptedversion is available for each original numerical ex-pression which was more difficult than the target dif-ficulty level.
The output text is obtained by replac-ing these difficult expressions with the correspond-ing simplified version.5 Evaluation of the systemThis section presents the evaluation of the system,describing the materials, experiment, participantsand results of the evaluation.5.1 MaterialsWe selected for the experiment a set of eight can-didate sentences from the NUMGEN corpus, but thenumber of numerical expressions was larger as somesentences contained more than one proportion ex-pression.
In total we had 13 numerical expressions.We selected sentences with as many variations incontext, precision and different wordings as possi-ble.
The range of proportions values was from pointsnearly 0.0 to almost 1.0, to give coverage to a widespread of proportion values.
We considered valuesin the central range (say 0.2 to 0.8) and values at theextreme ranges (say 0.0-0.2 and 0.8-1.0).
We alsoclassified as common values the well-known per-centages and fractions like 25%, 50%, 1/4 and 1/2,and as uncommon values the rest like 15% or 6/7.5.2 ExperimentTo evaluate the system a questionnaire was pre-sented to a set of human evaluators.
The experi-ment was created and presented on SurveyMonkey2,a commonly-used provider of web surveys.
For eachoriginal sentence, we presented two possible simpli-fications generated by the system.
Participants wereasked to use their judgement to decide whether theyagreed that the simplified sentences were acceptablefor the original sentence.
A Likert scale of four val-ues (Strongly Disagree, Disagree, Agree, StronglyAgree) was used to collect the answers.In the survey only two levels of adaptation fromthe original sentence were presented.
The first op-tion generated by the system was for the Fractionslevel.
The second option generated by the systemwas for the Percentages without decimals (PWD).5.3 ParticipantsThe task of simplifying numerical expressions is dif-ficult, so we selected a group of 34 experts made upof primary or secondary school mathematics teach-ers or adult basic numeracy tutors, all native Englishspeakers.
This group is well qualified to tackle thetask since they are highly numerate and accustomedto talking to people who do not understand mathe-matical concepts very well.
We found participantsthrough personal contacts and posts to Internet fo-rums for mathematics teachers and numeracy tutors.5.4 ResultsThe answers from the participants were evaluated.In total we collected 377 responses, 191 responsesfor the Fraction level and 186 responses for the Per-centage without decimals (PWD).
Table 2 shows theaverage from the collected responses, considering 12http://www.surveymonkey.com/s/WJ69L8644Level Total average Values Average Values AverageFraction 2,44Central 2,87 Common 2,59Extreme 2,14 Uncommon 1,21PWD 2,96Central 3,00 Common 2,80Extreme 2,96 Uncommon 3,22Table 2: System Evaluation: Fraction Level and Percentages Without Decimals (PWD)Opinion Fraction PWDLevel LevelStrongly Disagree 19% 6%Disagree 27% 15%Agree 43% 56%Strongly Agree 11% 23%Table 3: Opinion of the experts in percentagesto 4 for strongly disagree to strongly agree.
In ad-dition, Table 3 shows the distribution in percentagesof the opinion of the experts.
At the Fraction level,there is not too much difference between the averageof the answers of the experts that agree with the sys-tem and those that disagree.
Most experts are neu-tral.
But for the PWD level the average shows thatmost experts agree with the simplification done.We have also analyzed the answers consideringtwo different criteria from the original numerical ex-pressions: when they are central (20% to 80%) orextreme values (0% to 20% and 80% to 100%), andwhen the original numerical expressions are com-mon or uncommon values.
In general terms, the ex-perts think that the simplification done by the sys-tem in the PWD level is better than the simplificationdone in the Fraction level.
They disagree speciallywith the simplification using fractions in two cases.One is the treatment of the extreme values where thesystem obtains as possible candidates ?none?
and?all?3.
Another case is when uncommon fractionsare used to simplify the numerical expression, likefor example 9/10.
In these two cases the average islower than the rest of the average achieved.5.5 DiscussionThe system combines syntactic transformations (viathe introduction of hedges) and lexical substitu-3See (Power and Williams, 2012) for a discussion of appro-priate hedges for values near the extreme points of 0 and 1.tions (by replacing actual values with substitutioncandidates and transforming quantities expressed aswords into digits) to simplify the original numericalexpression.
These kinds of transformations are dif-ferent from those used by other systems, which relyonly on syntactic transformations or only on lexi-cal substitutions.
Rules are purpose-specific and fo-cused on numerical expressions.
With this kind oftransformations the readability of the text improvesin spite of the fact that the resulting syntactic struc-ture of the numerical expression is more compli-cated, due to the possible presence of hedges.
Forexample, for a original numerical expression like?25.9%?
the system generates the simplified ?morethan a quarter?
which is easier to understand eventhough longer and syntactically more complex.With respect to coverage of different types of nu-merical expressions, this system does not considerratios as a possible simplification strategy becausethe proportion approximation program does not usethem as candidates to simplify a proportion.
Thispossibility should be explored in the future.Another observation is that the system does notconsider the context of the sentence in which thenumerical expression occurs.
For example, if thesentence makes a comparison between two numer-ical expressions that the system rounded to the samevalue, the original meaning is lost.
One exampleof this case is the following sentence from the cor-pus: ?One in four children were awarded A grades(25.9%, up from 25.3% last year)?.
Both percent-ages ?25.9%?
and ?25.3%?
are simplified by the sys-tem using ?around 1/4?
and the meaning of the sen-tence is lost.
Thus we should consider the role ofcontext (the set of numerical expressions in a givensentence as a whole and the meaning of the text) inestablishing what simplifications must be used.456 Conforming with conclusions of priorsurveysThe results presented for the system are evaluatedin this section for conformance with the conclusionsresulting from the empirical studies described in(Bautista et al 2011b) and (Bautista et al 2011a).With respect to the preference for round or com-mon values in simplification (Conclusion 1), the sys-tem presented conforms to this preference by virtueof the way in which the list of candidate substitu-tions is produced by the program.
The candidates re-turned by the program are already restricted to com-mon values of percentages (rounded up) and frac-tions, so the decision to consider as preferred candi-date the one listed first implicitly applies the criteriathat leads to this behavior.With respect to the need to treat differently valuesin the extreme or central ranges of proportion (Con-clusion 2), the system addresses this need by virtueof the actual set of candidates produced by the pro-gram in each case.
For example, if the original ex-pression is a extreme value like ?0.972?, the programproduces a different candidate substitution (?almostall?)
that in the central ranges is not considered.With respect to restricting the use of hedges tosituations where loss of precision is incurred (Con-clusion 3), the hedge choice rules applied by thesystem (see Table 1) satisfy this restriction.
WhenVr=Vmg hedges are included in the simplified ex-pression only if they were already present in theoriginal expression.In addition, the system rounds up any quantitieswith decimal positions to the nearest whole num-ber whenever the decimal positions are lost duringsimplification.
This functionality is provided im-plicitly by the program, which presents the roundedup version as the next option immediately follow-ing the alternative which includes the decimal posi-tions.
For example, if the input proportion is ?0.198?,some rounded candidate substitutions are calculatedas ?almost 20%?
or ?less than 20%?.Finally, the system follows the European guide-lines for the production of easy to read informationin that it automatically replaces numerical quantitiesexpressed in words with the corresponding quantityexpressed in digits.7 Conclusions and future workThe system described in this paper constitutes a firstapproximation to the task of simplifying numericalexpressions in a text to varying degrees of difficulty.The definition of an scale of difficulty of numeri-cal expressions, the identification of rules governingthe selection of candidate substitution and the appli-cation of hedges constitute important contributions.The empirical evaluation of the system with humanexperts results in acceptable rates of agreement.
Thebehavior of the system conforms to the conclusionson simplification strategies as applied by humans re-sulting from previous empirical surveys.There are different aspects to improve the actualsystem from the data collected, with a special atten-tion to cases in which the experts disagree.
As futurework, the syntactic context should be considered tosimplify numerical expression, extending the kindof proportion to simplify and treating special casesanalyzed in this first version.
At the syntactic level,some transformation rules can be implemented froma syntactic analysis.
It is important that the meaningof the sentences be preserved regardless of whetherpart of the sentence is deleted or rewritten by theadaptation rules.
In addition, the numerical expres-sion parser and the proportion approximation pro-gram could also be studied in order to evaluate theimpact of their errors in the final performance.Our final aim is to develop an automatic simplifi-cation system in a broader sense, possibly includingmore complex operations like syntactic transforma-tions of the structure of the input text, or lexical sub-stitution to reduce the complexity of the vocabularyemployed in the text.
Additionally we hope to de-velop versions of the simplification system for otherlanguages, starting with Spanish.
Probably the sim-plification strategies for numbers would be the samebut the use of hedge modifiers may be different.AcknowledgmentsThis research is funded by the Spanish Ministryof Education and Science (TIN2009-14659-C03-01Project), Universidad Complutense de Madrid andBanco Santander Central Hispano (GR58/08 Re-search Group Grant), and the FPI grant program.46ReferencesSusana Bautista, Pablo Gerva?s, and Ignacio Madrid.2009.
Feasibility Analysis for SemiAutomatic Con-version of Text to Improve Readability.
In Proceed-ings of The Second International Conference on Infor-mation and Communication Technologies and Acces-sibility, Hammamet, Tunusia, May.Susana Bautista, Raquel Herva?s, Pablo Gerva?s, RichardPower, and Sandra Williams.
2011a.
Experimentalidentification of the use of hedges in the simplifica-tion of numerical expressions.
In Proceedings of theSecond Workshop on Speech and Language Process-ing for Assistive Technologies, pages 128?136, Edin-burgh, Scotland, UK, July.
Association for Computa-tional Linguistics.Susana Bautista, Raquel Herva?s, Pablo Gerva?s, RichardPower, and Sandra Williams.
2011b.
How toMake Numerical Information Accessible: Experimen-tal Identification of Simplification Strategies.
In Cam-pos, Pedro and Graham, Nicholas and Jorge, Joaquimand Nunes, Nuno and Palanque, Philippe and Winck-ler, Marco, editor, Human-Computer Interaction IN-TERACT 2011, volume 6946 of Lecture Notes in Com-puter Science, pages 57?64.
Springer Berlin / Heidel-berg.Ann M. Bisantz, Stephanie Schinzing, and JessicaMunch.
2005.
Displaying uncertainty: Investigatingthe effects of display format and specificity.
HumanFactors: The Journal of the Human Factors and Er-gonomics Society, 47(4):777.Yvonne Canning.
2000.
Cohesive simplification ofnewspaper text for aphasic readers.
In 3rd annualCLUK Doctoral Research Colloquium.Raman Chandrasekar and Bangalore Srinivas.
1997.Automatic induction of rules for text simplification.Knowledge-Based Systems, 10.Raman Chandrasekar, Christine Doran, and BangaloreSrinivas.
1996.
Motivations and methods for textsimplification.
In In Proceedings of the Sixteenth In-ternational Conference on Computational Linguistics(COLING ?96), pages 1041?1044.Clark Christina and Douglas Jonathan.
2010.
Youngpeople reading and writing today: Whether, what andwhy.
Technical report, London: National LiteracyTrust.Walter Daelemans, Anja Hothker, and Erik Tjong KimSang.
2004.
Automatic Sentence Simplification forSubtitling in Dutch and English.
In Proceedings of the4th Conference on Language Resources and Evalua-tion, pages 1045?1048, Lisbon, Portugal.Siobhan Devlin and John Tait.
1998.
The use of aPsycholinguistic database in the Simplification of Textfor Aphasic Readers.
Lecture Notes.
Stanford, USA:CSLI.Nathan Dieckmann, Paul Slovic, and Ellen Peters.
2009.The use of narrative evidence and explicit likelihoodby decision makers varying in numeracy.
Risk Analy-sis, 29(10).Geert Freyhoff, Gerhard Hess, Linda Kerr, ElizabethMenzel, Bror Tronbacke, and Kathy Van Der Veken.1998.
European guidelines for the production of easy-to-read information.Caroline Gasperin, Lucia Specia, Tiago F. Pereira, andSandra M. Aluisio.
2009.
Learning when to simplifysentences for natural text simplification.
In Proceed-ings of the Encontro Nacional de Inteligencia Artificial(ENIA), pages 809?818, Bento Gonalves, Brazil.Deeqa Jama and George Dugdale.
2010.
Literacy: Stateof the nation.
Technical report, National LiteracyTrust.Arnaldo Candido Jr., Erick Maziero, Caroline Gasperin,Thiago A. S. Pardo, Lucia Specia, and Sandra M.Aluisio.
2009.
Supporting the Adaptation of Textsfor Poor Literacy Readers: a Text Simplification Ed-itor for Brazilian Portuguese.
In Proceedings of theNAACL/HLT Workshop on Innovative Use of NLPfor Building Educational Applications, pages 34?42,Boulder, Colorado.Imtiaz Hussain Khan, Kees Deemter, and GraemeRitchie.
2008.
Generation of refering expressions:managing structural ambiguities.
In Proceedings ofthe 22nd International Conference on ComputationalLinguistics(COLING), pages 433?440, Manchester.Himanshu Mishra, Arul Mishra, and Baba Shiv.
2011.In praise of vagueness: malleability of vague informa-tion as a performance booster.
Psychological Science,22(6):733?8, April.Ellen Peters, Judith Hibbard, Paul Slovic, and NathanDieckmann.
2007.
Numeracy skill and the commu-nication, comprehension, and use of risk-benefit infor-mation.
Health Affairs, 26(3):741?748.Sarah E. Petersen and Mari Ostendorf.
2007.
Text Sim-plification for Language Learners: A Corpus Analysis.In Proceedings of Workshop on Speech and LanguageTechnology for Education (SLaTE).Richard Power and Sandra Williams.
2012.
Generatingnumerical approximations.
Computational Linguis-tics, 38(1).Qualification and Curriculum Authority.
1999.
Mathe-matics: the National Curriculum for England.
Depart-ment for Education and Employment, London.Advaith Siddharthan.
2002.
Resolving attachment andclause boundary amgiguities for simplifying relativeclause constructs.
In Proceedings of the Student Re-search Workshop, 40th Meeting of the Association forComputacional Linguistics.47Advaith Siddharthan.
2003.
Syntactic Simplification andText Cohesion.
Ph.D. thesis, University of Cambridge.United Nations.
1994.
Standard Rules on the Equal-ization of Opportunities for Persons with Disabilities.Technical report.Sandra Williams and Richard Power.
2009.
Precisionand mathematical form in first and subsequent men-tions of numerical facts and their relation to documentstructure.
In Proc.
of the 12th European Workshop onNatural Language Generation, Athens.Sandra Williams and Ehud Reiter.
2005.
Generatingreadable texts for readers with low basic skills.
InProceeding of the 10th European Workshop on Natu-ral Language Generation, pages 140?147, Aberdeen,Scotland.Joel Williams, Sam Clemens, Karin Oleinikova, andKaren Tarvin.
2003a.
The Skills for Life survey: Anational needs and impact survey of literacy, numer-acy and ICT skills.
Technical Report Research Report490, Department for Education and Skills.Sandra Williams, Ehud Reiter, and Liesl Osman.
2003b.Experiments with discourse-level choices and read-ability.
In In Proceedings of the European Natu-ral Language Generation Workshop (ENLG) and 11thConference of the European Chapter of the Associa-tion for Computational Linguistics (EACL03), pages127?134.Sandra Williams.
2010.
A Parser and InformationExtraction System for English Numerical Expres-sions.
Technical report, The Open University, MiltonKeynes, MK7 6AA, U.K.48
