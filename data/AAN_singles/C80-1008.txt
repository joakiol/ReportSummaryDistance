A RULE-BASED APPROACH TO ILL-FORMED INPUTNorman K. Sondheimer Ralph M. WeischedelSperry UnivacBlue Bell, PA, USAUniversity of DelawareNewark, DE, USASUMMARYThough natural language understanding sys-tems have improved markedly in recent years,they have only begun to consider a major problemof truly natural input: ill-formedness.
Quiteoften natural language input is ill-formed inthe sense of being misspelled, ungrammatical, ornot entirely meaningful.
A requirement for anysuccessful natural language interface must bethat the system either intelligently guesses ata user's intent, requests direct clarification,or at the very least, accurately identifies theill-formedness.
This paper presents a proposalfor the proper treatment of ill-formed input.Our conjecture is that ill-formedness should betreated as rule-based.
Violation of the rulesof normal processing should be used to signalill-formedness.
Meta-rules modifying the rulesof normal processing should be used for erroridentification and recovery.
These meta-rulescorrespond to types of errors.
Evidence forthis conjecture is presented as well as someopen ~\]estions.I.
IntroductionNatural Language interfaces have improvedmarkedly in recent years and have even begun toenter the cor~ercial marketplace, e.g., theROBOT system of Artificial Intelligence Corpora-tion (Harris, 1978).
These systems promise tomake major improvements in the ease-of-use ofdata base management and other computer systems.However, they have only begun to consider theproblems of truly natural input.
The emphasishas been, and continues to be, on the under-standing of well-formed inputs.
True naturallanguage input is often ill-formed in the abso-lute sense of being filled with misspellings,mistypings, mispunctuations, tense and numbererrors, word order problems, run-on sentences,sentence fragments, extraneous forms, meaning-less sentences, impossible requests, etc.
Inaddition, natural input is ill-formed in the re-lative sense of containing requests that arebeyond the limits of either the computer systemor the natural language interface.
The frequentoccurrence of these phenomena has been pointedout by both friend and foe of natural languageinterfaces, see for example, Malhotra (1975),Montgomery (1972), and Shneiderman (1978).Most systems deal with a few of thesetypes of ill-formedness.
Experience (Harris,1977b and Hendrix, et al, 1978) has shown thatusers can adapt to the limitations of thesystem's well-formed, anticipated input.
Yet,we feel that presuming on such user adaptationeliminates one of the most powerful motivationsfor English input: namely, enabling infrequentusers to access their data without an intermedi-ary person and without extensive practice.
Evenfor the person who frequently uses such a sys-tem, if it cannot explain why it misunderstandsan input, the system will be exasperating attimes.Therefore, we totally agree with Wilks(1976) in his statement that "Understanding re-quires, at the very least, ... some attempt tointerpret, rather than merely reject, what seemsto be ill-formed utterances."
A requirement forany natural language interface must be that,when faced with ill-formed input, the system ei-ther intelligently guesses at a user's intent,requests direct clarification, or at the veryleast, accurately identifies, the ill-formedness.Researchers including ourselves haveworked on various aspects of ill-formedness.Out of our work, and that of others, we haveproduced a conjecture on the treatment of ill-formed input to natural language interfaces.That conjecture is in essence that ill-formedness should be treated as "rule-based".First, natural language interfaces should pro-cess all input as presumably well-formed untilthe rules of normal processing are violated.
Atthat ~nt ,  error handling procedures based onmeta-rules relating ill-formed input to well-formed structures through the modification ofthe violated normal rules should be employed.These meta-rules correspond to types of errors.The rest of the paper argues for thisrule-based approach.
Section 2 characterizesboth the types of ill-formed input, and thetypes of possible approaches to them.
Section 3explains our proposal.
Section 4 motivates theproposal through analysis of its effect on the46development and operation of natural languageinterfaces, the use of evidence from other dis-ciplines that consider ill-formedness in naturaland artificial languages, and, most importantly,evidence from work on natural language under-standing systems.
Section 5 discusses some openproblems in light of the proposal.2.
Problem and Solution SpacesThis section introduces the problem of in-terpreting ill-formed input.
First, an analysisis given of the types of ill-formed input.
Thenwe present the range of approaches for allowingfor such input.
In the next section we use thisset to isolate our own conjecture.2.1 A view of Ill-formed InputIll-formedness can be divided into twosets.
The first defines what we call absoluteill-formedness.
We will call an utterance a6so-lutely ill-formed if it cannot convey thespeaker's intended message unless the typicallistener gives it an abnormal interpretation.The definition unfortunately appeals to subjec-tive evaluations; these are known to differwidely (Ross, 1979).
But it seems to includethe majority of typical cases and exclude themajority of types of good English sentences.The second set defines relativeill-formedness.
This is ill-formedness ~6hrespec--~-h'~6 normal processing rules of theformal computing system including the naturallanguage interface and the underlying applica-tion system.
The set of ill-formed inputs foran interface will be defined as the union ofthese two sets for that interface.The set of ill-formed input captured bythis definition can also be seen through thefour typical phases of interpretation in naturallanguage interfaces: lexical, syntactic,semantic and pragmatfc processing-.
In--\]$e~calprocessing, (processing individual words), abso-lute ill-formedness can come from misspellingand mistyping; relative ill-formedness can arisefrom unexpected words.
In syntactic processing,absolute ill-formedness is seen in subject-verbagreement, word order errors, fragmentaryqueries, run-on sentences, etc; relative ill-formedness is seen in grammatical combinationsof words that exceed the interface's granmnar.Semantic processing can be defined as theinterpretation of the input in isolation.Knowledge of the task domain can be applied, butthe context of input with respect to previousinteractions and the state of the underlyingcomputing system are only considered in pragmat-ic processing.
Absolute ill-formedness in se-mantics includes omitting needed information andviolation of selectional restrictions.
Absoluteill-formedness in pragmatJcs includes breakingthe rules of conversation, as when answering aquestion with a question, having presuppositionsof the questioner fail, and failing to makeclear the reference of a pronoun.
Relativeill-formedness in both cases is usually a matterof "overshoot", requesting capabilities or in-formation not covered by the system in itscurrent state.2.2 Possible App!oachestqInterpretationA large set of approaches deal with ill-formed input.
The set's size is seen throughthe choices available in three of the majorphases in a system's life and use: systemSdevelopment, error identification and errorrecovery.
In - t~fs~n,  we w~ll go throughthe basic options in these phases, giving aquick survey of systems exhibiting the options.2.2.1 Development PhaseThe basic decision during a naturallanguage interface~s development is the degreeof differentiation between ill-formed andwell-formed input processing.
Where no differ-ence is maintained either ill-formed inputs canbe included in the regular components, (e.g.,putting unallowable words in dictionaries todetect some queries that cannot be answered(Codd et al, 1978) and sentence fragments inthe granmlar (Burton and Brown, 1977)), or thecomponents can be written to ignore many well-formedness constraints (Shapiro and Kwasny,1975; Waltz, 1978; Lebowitz, 1979), when thetask does not depend on them.When differences are recognized, a muchlarger range of choices is possible.
For exam-ple, new classes of rules could be added to theexisting components (Kwasny and Sondheimer,1979).
New components could be added to thesystem as well, using the same form as normalrules, (Harris, 1977).2.2.2 Error Identification PhaseDiscovering how an input is ill-formedwill be called error indentification, eventhough not all ill-formedness is an error.
Dur-ing this phase, the type of computation under-taken can vary.
If ill-formed input is not dis-tinguished frem well-formed, then no error iden-tification is done.When it is done, one approach is to makeno effort to analyze ill-formed portions, e.g.,unidentified words are often skipped and pro-cessing resumed (Burton and Brown, 1977; Codd etal., 1978; Kwasny and Sondheimer, 1979).
Asecond strategy is to totally ignore the sourceof the failure in interpretation and attempt er-ror identification (and also reoovery) by com-pletely independent computations on input, e.g.,the separate grammar for ill-formed sentences inROBOT (Harris, 1977).
Using a third approach,many systems attempt to clarify the nature of--47--the ill-formedness by directly considering thesource of the failure (Weischedel et ai.,1978;Weischedel and Black, 1980; Kwasny and Sondhei-mer, 1979).2.2.3 Error Recovery PhaseThe error recovery phase covers all compu-tation following identification of an error un-til normal processing is resumed.
One choice isto cenanunicate to the user the error descriptionand have him reenter a corrected request(Weischedel et al, 1978 and Codd et al 1978).Another basic choice is autematicrecovery.
One can design a process not relyingon the rules for well-formed input; for in-stance, Harris (1977) uses a granmnar for ill-formed input and Waltz (1978) has a specialistroutine for completing fragmentary sentences.Alternatively one can relate the ill-formednessto normal processing; Hendrix, et al (1978),Biermann and Ballard (1978), Weischedel (1977),and Kwasny and Sondheimer (1979) have taken thisapproach for some classes of ill-formedness.It is difficult to give an independentpicture of error recovery.
Depending on thechoices in system development and error identif-ication, a system can have anything from no ideaas to the source of the problem, to moderatelyinformative insights such as knowing it doesnot recognize some words, to precise knowledgeof the problem such as being aware of the lackof subject-verb number agreement.
Further, theerror itself may dictate the limits of recovera-bility.
Some errors may be too crucial to allowrecovery.
For example, when a presupposition ofthe user's input is not true, no recovery seemsreasonable other than stating that the particu-lar presupposition is not true.3.
A Rule-Based Approach to Ill-formed InputOut of the options available for preparingfor and responding to ill-formed input, we pro-pose one,in particular.
This section beginswith a short statement of our proposal and con-tinues by clarifying and motivating it.
Evi-dence for it from other work is then presented.3.1 StatementIn essence, we believe that ill-formednessshould be treated as rule-based.
We see twokinds of rules: first, r~s  used in normalprocessing and second, meta-rules which are onlyemployed to interpret ill-formed input.
Withrespect to the first, we feel that their viola-tion should be used to detect ill-formed input.With respect to the second, we feel that theyshould be meta-rules applying to the rules ofthe first sort in order to relate the structureof ill-formed input to that of well-formedstructures.
This would be done by showing howthe well-formedness rules could be modified toaccept the ill-formed input with as complete astructure as possible.
They will indicate ageneral type of error user's make.In terms of the three phases discussed inthe last section, acceptance of our conjecturewould lead to separate development of componentsfor handling well-formed and ilL-formed inputs.Considering syntactic processing as an example,a normative gransnar would be written to inter-pret grammatically well-formed sentences.Separately, meta-rules would be developed forgrammatically ill-formed sentences.Error identification would includeanalysis of failures in normal processing rulesusing the rules defining ill-formedness.
Forexample, an error identification component wouldfind the cause of a blockage in parsing by con-sidering the failed grammar rules and the meta-rules that show how these normative rules couldfail.
In light of these, the normative rulescould be modified automatically via the meta-rules in order to see if the input could be ac-cepted.Finally, whenever error recovery wasfeasible, it wou\]d use the ill-formedness rulesto guide the modification of the rules of normalprocessing in order to continue processing theill-formed input.
For example, a failed seman-tic restriction test can be relaxed by a meta-rule and processing continued.
Note that thisoften introduces uncertainty in that the con-straint often carries semantic information,hence complete understanding is not guaranteedby our proposal.3.2 ExampleConsider subject-verb number agreement asin Weischedel (1977).
Presumably any naturallanguage interface for well-structured inputwould have tests to check for this, since it re -flects semantic information, e.g., verb numberdifferentiates between the meanings of "Flyingplanes is dangerous" and "Flying planes aredangerous."
However, number agreement errors areknown to occur.
We would capture this by addinga meta-rule allowing the agreement test to beignored.
This would, of course, be done at thecost of not identifying the intended sense.
Ac-cording to our proposal, an input, such as "Theboy run fast", would be treated as a potentiallywell-formed until the granmaar failed to inter-pret it.
When the example fails to parse, wewould attempt identification of the input basedon the failure of the agreement test and themeta-rule.
Then recovery would be attempted byremoving the test and proceeding without knowingwhether singular or plural was intended.Of course a system could at this point re-quest user supplied clarification, or it coulddecide to abort the processing.
However, ourgoal is to provide the ability to automatically48interpret as much as possible.3.3 AssL~nptionsUnderlying our belief in the viability ofthis approach to ill-formedness are some assump-tions that limit the problem.
Most important isthe assumption of a cooperative user.
Observa-tion of cooperative users has shown that theytend to keep their requests linguistically sim-ple and tailored to what they feel are thesystem's limits (Woods, 1973; Malhotra, 1975;Damerau, 1979).
At the same time, users havebeen shown to be able to communicate effectivelythrough limited machine interfaces (Kelly andChapanis, 1977).
This allows us to ignore manyof the more difficult ill-formedness phenomena.An uncooperative user could "break" any system.For example, a user is reported to have asked awell-known system "what the h-ll is going onhere?".
No system should be expected to handlesuch 'f input.Overshoot is a related phenomenon.Overshoot often arises with users unfamiliarwith the capabilities of the computer systemunderlying the natural language interface(Woods, 1973; Shneiderman, 1978; Tennant, 1979).In order to allow for any overshoot we must beable to depend on our understanding of theuser's knowledge.
We therefore assume that theuser has at least basic familiarity with thepurpose and power of the underlying system.Finally, we assume that the naturallanguage interface for normal sentences iswell-structured in the sense of handling likesentences similarly and unlike sentences dis-similarly, and in the sense of having a decompo-sition of processing into explainable and defen-sible phases.
In progra~ninglanguages, it isthe case that grammars and parsers can be writ-ten to identify and recover from errors (Aho andJohnson, 1974).
This ought to be the case withnatural language interfaces.
We are willing todefend our conjecture independent of any onestructuring as long as the interface for well-formed input we are augmenting is built on con-sistent, explainable lines.4.
Supporting evidenceWe will now consider evidence supportingour proposal.4.1 Pragmatic MotivationThere are a number of reasons to preferthis solution, independent of the empirical evi-dence that we will present shortly.
Basically,this approach will ease systems development andprocessing.
This is true first because of theability to design the normative processing sys-tem independent of the error identification andrecovery methods.
Second, not invoking ill-formedness processing until normal processingfails avoids unnecessary runtime costs forwell-formed sentences, which are the normal typeof input.
Third, describing ill-formednessthrough meta-rules that relate to normativerules will avoid duplication of aspects of nor-mative processing and allow general statementscovering classes of ill-formedness.4.2 External Supporting EvidenceThere is support for our proposal frommany other areas where ill-formedness in naturalor artificial languages is considered.
Mostrelevant are the efforts of linguists.
Whenthey have considered ill-formedness it has beencon~non for them to propose the type of meta-rules we propose.
For example, Chomsky (1964)relates failures to abide by different aspectsof his gran~nar model to different classes ofill-formedness through relaxation of well-formedness constraints.
Linguists also try tospot patterns in utterances containing errors inorder to motivate rules for normal processing(Fromkin, 1973).A pattern of rule-based treatment of ill-formedness can be seen elsewhere.
In informa-tion retrieval, index terms are processed as ifthey were correctly presented, until failurestarts recovery methods based on rules whichchange the conditions for acceptance (Damerau,1964).
In progranmling languages, similar pro-cessing is seen with typographic errors and withsyntactic problems such as incorrect numbers ofparentheses (Teitelman, 1969; Morgan, 1970; Ahoand Johnson, 1974).
Trapping based on normativeconstraints and error recovery (at least in no-tifying the user) is seen in the maintenance ofdata base integrity (Wilson and Salazar, 1979).Finally, speech understanding systems, whoseill-formedness problems are related to noisysignals, often work from an initial assumptionthat a clear interpretation can be found for theinput.
When this fails, they take what theyhave found and attempt to recover by applyingnormative rules in a less rigorous way in orderto identify the ill-formed segments (Bates,1976; Miller, 1974).4..3 Support from Natural Language InterfaceEfTor~--To our knowledge, our general approach toill-formedness has not been propounded else-where.
However, work fitting within the para-digm has been applied to a number of isolatedill-formedness problems.
In addition, one im-portant technique which has been employed forill-formedness appears to be modifiable so as tofit within our approach.
The success of theseefforts stands as support for our approach.
Inthis section, they will be briefly surveyed.4.3.1 LexicalA lexicon may be thought of as a computa-49tional model of dictionary information.
Accord-ing to our approach, p~ocessing of lexical ill-formedness would be developed separately fromthe preparation of the processing of normal lex-ical entries (i.e.
dictionary entries).
Oncethe rules for processing well-formed inputs fai\]to recognize a lexical entry, error identifica-tion would begin based on the failed rules andrules which showed how lexical entries could beill-formed.
At the end of this identificationphase, a guess or guesses as to the identity ofa lexical entry would be available for the sys-tem to attempt recovery.
This paradigm for pro-cessing can be seen in a number of systems inattempts to treat both absolute and relativelexical ill-formedness.The LIFER system is prepared to deal withmisspelled and mistyped words through a methodfitting within our model (Hendrix et al, 1978).The developer of a question-answering system us-ing LIFER prepares only a dictionary of well-formed words.
If a sentence contains a wordthat is not in the dictionary, the LIEER parserwill fail and start error identification.
LIFERfirst chooses as the putative failed rule theone associated with the partial interpretationthat has proceeded furthest.
From that rule,LIFER identifies the part of speech the wordshould belong to and applies a mistyping andmisspelling algorithm based on such meta-rulesas "expect letters to be duplicated" or "expectletters to be reversed" to modify the normaldictionary look up rulesand to match the ill-formed input to all well-formed members of thedesired part of speech.
If one is found, normalprocessing resumes.Examples related to our approach can alsobe seen in methods that deal with relative ill-formedness.
For example, Granger's (1977)FOUL-UP program proceeds through input until itfinds an unknown word.
Based on its expecta-tions for the input derived from parsing and itsmodel of semantic content, it attempts recoveryby assigning a partial interpretation to the in-put.Somewhat similar processing can be seen indealing with typographic errors (Biermann andBallard, 1978), learning new names (Codd et al,1978), and learning new words (Carbonell, 1979 ,and Miller, 1975).4.3.2 SyntaxWith syntactic processing, our paradigmcalls for separate development of a gra~ar forwell-formedness, identification of errors basedon the failure to parse, and error recoverybased on manipulation of the grammar.
This ismost clearly seen in our own work.
weischedel(1977) was the first to suggest several dif-ferent techniques for dealing with syntacticallyill-formed input.
One technique allows gra~arwriters to insert rules to enable selective re-laxation of restrictions in the gran~ar so thatcertain ungrammatical sentences may be assignedas much structure as possible.
For example, hismethod would allow the number-agreement test tobe relaxed as was discussed.
Weischedel'smethod was tested in a natural language under-standing system for intelligent tutoring of stu-dents learning a foreign language (Weischedel etal., 1978).
A second technique suggested byWeischedel (1977) is the assignment of meaningsto the states of an ATN grammar.
These assign-ments were used to guide error identificationfor the end-user when interpretation of a sen-tence blocked at a state.
The assignments couldbe quite general including operational pro-cedures and could attempt complex deductions ofthe source of the error.
Weischedel and Black(1980) report the results of testing the methodon a parser for English.Kwasny and Sondheimer (1979) extendWeischedel's first method to allow for succes-sively less stringent constraints.
In addition,they propose a relaxation method using hierarch-ical structuring of syntactic categories, basedon a suggestion in Chomsky (1964).
If the nor-mal rules fail to accept a sentence and thefailed rule is looking for a part of speechwhich is a member of a hierarchy, then relaxa-tion proceeds by substituting the next more gen-eral class in the hierarchy for the unsatisfiedpart of speech.Perhaps the most powerful technique oftreating syntactic ill-formedness, as Hayes andReddy (1979) and Hayes and Mouradian (1980)point out, is including patterns for ill-formedinput.
Kwasny and Sondheimer (1979) generalizethis technique by allowing evenmore dramaticrelaxation of the grammar through patterns thatallow the input to be matched against the gram-mar in a relaxed way, either by skipping wordsin the input, or by skipping the application ofrules.
This is most useful for assigning struc-ture to sentence fragments.
Importantly, italso applies to many types of conjunction in-cluding the problematic case of gapping, cases.This technique dif\[ers from the paradigm sug-gested here because of its method of error iden-tification and recovery.
When an input is notrecognized by the gran~ar, processing switchesto an entfrely separate set of arcs in an ATNgra~runar, essentially another grammar, which areused to assign structure to the ill-formed in-put.
However, experience with the method sug-gests that the arcs used in this separate gram-mar could in general be found in the normativegrammar.
If this is always the case, then theseparate gran~aar could be eliminated.
Also, er-ror identification could proceed by consideringthe failure of the normative rules; errorrecovery could proceed by relaxing the condi-tions on the application of the rules to the in-put string.-504.3.3 Semantics and PragmaticsSimilar kinds of relaxation efforts can beseen in semantic processing.
One feature of thepreference semantics system of Wilks (1975) isthe ability to relax certain semantic con-straints.
With respect to error identification,Heidorn (1972) dealt with incomplete semanticentities by requesting users to supply missinginformation based on failures to translate fromthe internal semantic structures to externalcomputer programs.
A somewhat similar processis seen in work by Chang (1978) on the RENDEZ-VOUS system where failure to parse a query leadsto a request for clarification from the user.With respect to pragmatic errors,Weischedel (1977) introduced a technique whichuses presupposition to find certain incorrectuses of words.
Joshi and Weischedel (1977) andWeischedel (1979) show that since presupposi-tions can be computed by a parser and its lexi-con they are a class of assumptions inherent inthe user input; therefore they can be checkedfor discrepancies with the system's worldknowledge.
This work was used and extended byKaplan (1979) in error identification andrecovery in those situations where a user's da-tabase query would normally yield only an emptyset, i.e.
an answer of none.
Janas (1979) ap-plied similar techniques to assist the user inthe same situations.Many of these techniques can be ~pplied toproblems of relative ill-formedness.
For exam-ple, techniques that are being applied in thedevelopment of JETS specifically to capture re-latively ill-formed sentences will fit withinour paradigm (Finin et al, 1979).We find the number of techniques that fitwithin the model we suggest encouraging.5.
ConclusionOur hypothesis is that both absolute andrelative ill-formedness should be treated asrule-based.
Rules for well-formed input shouldbe employed first.
The detailed way in whichthe rules of well-formed input are violated sig-nal which meta-rule(s) to use to relate thestructure of the ill-formed input to a well-formed one.
The meta-rules show how well-formedrules should be modified to interpret i\]l-formedinput as completely as possible.There are at least three ways to proceedin order to strengthen that hypothesis:i) Reformulating the popular technique ofexplicitly encoding ill-formed patterns of anATN within the methodology,2) Developing strategies for additionalclasses of ill-formedness:a) merged thoughts or run-on sen-tences.
An example is "Give me a list of thesupplier's list.
"b) wrong word choice.
An example is"Computer the standard deviation..." instead of"Compute the standard deviation..." This couldnot be treated as a spelling error if both "com-pute" and "computer" were in the lexicon.Hence, it would have to be treated as incorrectword choice.c) "expansion" ellipsis.
Expansionellipsis is a kind of fragmentary input no sys-tem has processed before.
An example would be aresponse of "On employee name" to a question,"Should the list be printed in alphabetical ord-er?
"d) violation of semantic constraints.An ill-formed input such as "Have we orderedsupplier 34?"
violates semantic constraints,since a supplier is not semething that can beordered.
We plan to develop techniques thatwill recognize this semantic Violation and hy-pothesize that "Have we ordered frc~n supplier34?"
was intended.3) Improving ill-formedness handling byparallel processing of lexical, semantic, syn-tactic, and pragmatic components:a) interaction of semantics and syntaxfor explaining the cause of misunderstandingwhen no interpretation is possible,b) pragmatic and semantic overshoot.An example of overshoot is asking, "What are theaverage weights of all rock samples?"
when thesystem has no such weights.
This could not be'detected by dictionary lookup if the data basehas weights of atcmic elements and has data onrock samples, just not their weights.
We intendto develop strategies to detect overshoot andrespond appropriately; for the example, an ap-propriate response is "The system has no weightsof rock samples.
"We are engaged in a research program in-volving work on these three problems.
All ofthe rules and meta-rules that we have alreadydeveloped or are developing will be tested inone of two systems.
One is an English front endto data base systems; this research-oriented na-tural language processor is under development inthe Software Research Department of SperryUnivac.
The second is a question-answering sys-tem (with English input) is being constructed atthe University of Delaware.We believe that sophisticated understand-ing and response to ill-formed input is themissing ingredient in making natural languageinteraction truly natural.REFERENCESAho, A. V. and S. C. Johnson, "LR Parsing",Computing Surveys, 6, 2, (1974), 99-124.Bates, Madeleine, "Syntax in Autc~natic SpeechUnderstanding", AJCL, Microfiche 45, (1976).51 rBiermann, A. W. and B. W. Ballard, TowardNatural Language Computation, CS-1978-i1, Dur-~ ,Nor th  Uar~fin~."
b~p~-6ment of Computerscience, Duke University, December, 1978.Burton, Richard R. and John Seeiy Brown,Semantic Gran%~ar: A Technique for ConstructingNaturaT- Language Interfaces to Instructionaly~en~s, BBN Repor-~o.--~55~\[7 ,--Cam~-f~\[ge-{-Bo-\]76Beranek and Newman Inc., May 1977.Carbonell, Jaime G., "Toward a Self-ExtendingParser", in Proceedings of the 17th AnnualMeeting of the Asso(~\[ation for ComputationalL~u-~'st~s,-S-an D~go, August, 1979, 3-7.Chang, C. L., Finding Missing Joins forIncomplete Queries in Relational Data Bases,k72145 (29408), San Jose: IBM Research Labora-tory, February, 1978.Chomsky, Noam, "Degree of Grammaticalness", inThe Structure of Language: Readings in theP~losop~~La~uage,  e-c~7, J.
A.
~r  ~-ffd-17"~J.
Katz, Englewood Cliffs, New Jersey:Prentice-Hall, 1964, 384-389.Codd, E. F., R. S. Arnold, J-M. Cadiou, C. L.Chang and N, Roussopoulis, RENDEZVOUS VersionI: An Experimental English-Language QueryFormulation System for Casual Users ofRelational Data Bases, IBM Research Report~f~,  San JOse, California, January, 1978.Damerau, Fred J., "A Technique for ComputerDetection and Correction of Spelling Errors",Con~unications of the ACM, 7, 3, (1964),171-176.Damerau, Fred J., The Transformational QuestionAnswering (TQA) System Operational Statistics -1978, IBM R~ear~ Report RC 773~, YorktownHeights, New York, June, 1979.Finin, Tim, Bradley Goodman, and Harry Tennant,"JETS: Achieving Completeness through Coverageand Closure", in Proceedings of the SixthInternational Joint---c6n-~e-~nce on ~t i f~fa fIntell\[genceiTokyo, August, 1979,--275-281.Fromkin, Victoria A., ed., Speech Errors asLinguistic Evidence, Janua Linguarum, Seriesmaior 77, The Hague: Mouton, 1973.Granger, Richard H., Jr., "FOUL-UP: A Programthat Figures Out Meanings of Words from Con-text", Proceedings of the 5th InternationalJoint Conference on Artificial Intelligence,C~F idge ,  Massachu~tts, August7 1977, 172-178.Harris, Larry R., ROBOT: A High PerformanceNatural Language Interface for Data Base Query,Te~n~cal Report TR 77-Jlf Dartmout~---Col~ege,Department of Mathematics, February, 1977.Harris, Larry R., "The ROBOT System: NaturalLanguage Processing Applied to Data Base Query",in Proceedings 1978 Annual Conference,Assoc~-6fEn for CompS\[rig M~hfn-ery, Washington,D.C., December, 1978, 165-172.Harris, L. R., "User Oriented data base querywith the ROBOT natural language query system,"Int.
Journal of Man-Machine Studies, 9, (1977b),pp.
6Vr -71TC .
.
.
.
.
.
.Hayes, P. and R. Reddy, An Anatomy of GracefulInteraction in Spoken and W{f~6eff Man-MachfneCommunication, Pittsburgh: Department of Com-puter Sci'ence, Carnegie-Mellon University, Au-gust, 1979.Hayes, P. and G. Mouradian, "Flexible Parsing",in Proceedings of the 18th Annual Meeting of theAssociation for---Computational Linguistics andParasess{on on Topics on Interactive Discourse,P6Tfad-~ph-lh,-Ju~-7-i98~, 97-103.Heidorn, George E., Natural Language Inputs to aSimulation Progranmnl~g- S~ys~_h~ ~-.~5ITD-7~/10YA~Monterey, CA: Naval Postgraduate School, Oc-tober, 1972.Hendrix, Gary G., Earl O. Sacerdoti, Daniel Sa-galowicz and Jonathan Slocum, "Developing a Na-tural Language Interface to Complex Data", ACMTransactions on D ata?oase Sy_s_tems, 3, 2, (1978) ,105-147.Janas, Jurgen M., "How to not say "Nil" - Im-proving ~Answers to Failing Queries in Data BaseSystems", in Prooeedings of __the SixthInternational Joint Conference on ArtificialIntelligence, Tokyo, August, 1979, 429-434.Joshi, Aravind K. and Ralph M. Weischedel, "Com-putation of a Subclass of Inferences: Presuppo-sition and Entailment," American Journal ofComputational Linguistics, 4, Microfiche 63,1977.Kaplan, Samuel Jerrold, Cooperative Responsesfrom a Portable Natural Language Data Base QuerySystem, hn~f i~-ed  15h~ Diss~t-at~n, TheUniversity of Pennsylania, 1979.Kelly, M. J., and A. Chapanis, "Limited Vocabu-lary Natural Language Dialogue", Int.
Journal ofMan-Machine Studies, 9, (1977), 479-501.Kwasny, Star C. and Norman K. Sondheimer,"Ungran~naticality and Extragran~naticality in Na-tural Language Understanding Systems", inProceedings of the 17th Annual Meeting of theA~-a- t~on for Computational Linguistics, SanLebowitz, Michael, "Reading with a Purpose", inProceedings of the 17th Annual Meetinq of theAs s~!ciati_on - f_o A Compj!tationaJ: Li__nsj)ist_ics, SanDiego, August, 1979, 59-63.?
52Malhotra, Ashok, Design Criteria for aKnowledge-Based English Language System fo~Manageme3?t~ An E~mentaT- -~-~ys i~,  MAC TRl~,---C-~bri~e, "Mass: Pr~ect ~4AC, Mas-sachusetts Institute of Technology, February,1975.Miller, Perry L., "A Locally-Organized Parserfor Spoken Input", Conmlunications of the ACM,17, ii, (1974), 621-630.Miller, Perry L., "An Adaptive Natural LanguageSystem that Listens, Asks, and Learns", in_Advance Papers of the Fourth International JointCon~en~"  on ~-ti~fc'~f-i-nt~gence, TqSiTi-~fGeorgia, USSR, September 3-8, 1975, 406-413.Montgomery, Christine A., "Is Natural Languagean Unnatural Query Language?
", in Proceedings ofthe ACMAnnual Conference, New York, i -9~ 1075.Morgan, Howard L., "Spelling Correction in Sys-tems Programs", Conmunications of the ACM, 13,2, (1970), 90-94.Ross, John Robert, "Where's English" inIndividual Differences in Language Ability andLanguage Behavior, eds., Charles J. Fillmore,D~el  Kempler, and William S-Y.
Wang, New York:Academic Press, 1979, 127-163.Shapiro, Stuart C. and S. C. Kwasny, "Interac-tive Consulting Via Natural Language",Conmnunications of the ACM, 18, 8, (1975),Shneiderman, Ben, "Improving the Human FactorsAspects of Database Interactions", ACM-TOD6, 3,4, (1978), 417-439.Teitelman, W., "Toward a Progran~ning Laborato-ry", in Proceedings: International JointConference on Ar~'a l  Intelligence, Wash i~-ton, D.C., May, 1969.Tennant, Harry, "Experience with the Evaluationof Natural Language Question Answerers", inProceedings of the Sixth International JointConference on Artificial Intelligence, Tokyo,August, 1979, 87-~7~.Waltz, David L., An English Language QuestionAnswering System for a Large Relational Data-base", Consnunications of the ACM, 21, 7, (1978),526-539.Weischedel, Ralph M,, Please Re-Phrase, TR#77/1, Department of Statistics and ComputerScience, Newark: University of Delaware, 1977.Weischedel, Ralph M., "A New Semantic Computa-tion While Parsing: Presupposition and Entail-ment", Syntax and Semantics, Volume 11:Presupposition, eds., Choon-Kyu Oh and Dineen,New Yor-k.~Ac-ademic Press, 1979.Weischedel, Ralph M. and John Black, "RespondingIntelligently to Unparsable Inputs", TheAmerican Journal of Computational Linguistics,6, 2, (1980), 97-109.Weischedel, Ralph M., Wilfried M. Voge, and MarkJames, "An Artificial Intelligence Approach toLanguage Instruction", Artificial Intelligence,i0, (1978), 225-240.Wilks, Y.
A., "A Preferential Pattern-SeekingSemantics for Natural Language Inference,Artificial Intelligence, 6, (1975), 53-74.Wilks, Yorick, "Natural Language UnderstandingSystems Within The AI Paradigm - A Survey andSome Comparlson~ , AJCL, Microfiche 40, (1976).Wilson, Gerald A. and Sandra B. Salazar, "A Sys-tem for Interactive Error Detection", inProceedings Fifth International Conference onVery Large Data Bases, Rio de Janeiro, October,1979, 33-51.Woods, William A., "Progress in Natural LanguageUnderstanding - An Application to Lunar Geolo-gy", in AFIPS Conference Proceedings, __42,(1973), 441-450.53
