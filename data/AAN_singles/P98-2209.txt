Reactive Content Selectionin the Generation of Real-time Soccer CommentaryKumiko TANAKA-Ishii and KSiti HASIDA and Itsuki NODAElectrotechnical Laboratory1-1-4 Umezono, Tsukuba, Ibaraki 305, Japan.Abst rac t~V~IKE is an automatic commentary s stem that gen-erates a commentary of a simulated soccer game inEnglish, French, or Japanese.One of the major technical challenges involved inlive sports commentary is the reactive selection ofcontent o describe complex, rapidly unfolding situ-ation.
To address this challenge, MIKE employs im-portance scores that intuitively capture the amountof information communicated to the audience.
Wedescribe how a principle of maximizing the total gainof importance scores during a game can be used toincorporate content selection into the surface gen-eration module, thus accounting for issues such asinterruption and abbreviation.Sample commentaries produced by MIKE are pre-sented and used to evaluate different methods forcontent selection and generation in terms of effi-ciency of communication.1 In t roduct ionTimeliness, or reactivity, plays an important role inactual anguage use.
An expression should not onlybe appropriately planned to communicate r levantcontent, but should also be uttered at the right mo-ment to describe the action and further to carry onthe discourse smoothly.
Content selection and itsgeneration are inseparable here.
For example, peo-ple often start talking before knowing all that theywant to say.
It is also relatively common' to fill gapsin commentary by describing what was true inthepast.
An extreme instance is when an utteranceneeds to be interrupted to describe a more impor-tant event hat suddenly occurs.It might be expected that dialogue systems shouldhave addressed such real-time issues, but in factthese studies appear to have been much more fo-cused on content planning.
The reason for this liesin the nature of dialogue.
Although many human-human conversations involve a lot of time pressure,slower conversations can also be successful providedthe planning is sufficiently incorporated.
For exam-ple, even if one conversation participant spends timebefore taking a turn, the conversation partner canjust wait until hearing a contribution.In contrast, reactivity is inevitable in live com-mentary generation, because the complexity and therapid flow of the situation severely restrict what tobe said, and when.
If too much time is spent think-ing, the situation will unfold quickly into anotherphase and important events will not be mentionedat the right time.MIKE is an automatic narration system that gen-erates poken live commentary of a simulated soccergame in English, French, or  Japanese.
We chosethe game of soccer firstly because it is a multi-agentgame in which various events happen simultaneouslyin the field.
Thus, it is a suitable domain to studyreal-time content selection among many heteroge-neous facts.
A second reason for choosing soccer isthat detailed, high-quality logs of simulated soccergames are available on a real-time basis from Soc-cer Server(Noda nd Matsubara, 1996), the officialsoccer simulation system for the RoboCup (RoboticSoccer World Cup) initiative.The rest of the paper proceeds as follows.
First,we describe our principle for real time content se-lection and explain its background.
Then, afterbriefly explaining MIKE'S overall design, ?4 explainshow our principles are realized within our imple-mentation.
?6 discusses some related works, and ?5presents some actual output by MIKE and evaluatesit in terms of efficiency of communication.2 P r inc ip les  o f  Content  Se lec t ion  inthe  Rea l  T ime D iscourse2.1 Max imizat ion  o f  Tota l  In fo rmat ionA discourse is most effective when the amount ofinformation transmitted to the listener is maximal.In the case O f making discourse about a static sub-ject whose situation does not change, the most im-portant contents can be selected and described in1282the given time.In the case of making discourse on adynamic sub-ject, however, content selection suddenly becomesvery complex.
Above all, the importance of the con-tents changes according to the dynamic discoursetopic, and also according to the dynamic situationof the subject.
Additionally, past events becomeless importarit with time.
Under this condition, thebasic function of content selection is to choose themost important content at any given time.
This con-trol, however, is not enough, because any contentwill take time to be uttered and during that time,the situation of the subject might change rapidly.Therefore, it should always be possible to change orrearrange the content being uttered.Examples of such rearrangements are:?
interruption.
When the situation of the sub-ject changes uddenly to a new one, more in-formation can be given by rejecting the currentutterance and switching to new one.?
abbreviation.
When many important factsarise, the total information can be augmentedby referring to each facts quickly by abbreviat-ing each one.?
repetit ion.
When nothing new comes up inthe subject, the important facts already utteredcan be repeated to reinforce the informationgiven to the listener.As a consequence, creating a system which in-volves real time discourse concerns 1.assessing thedynamic importance of contents, 2.controlling thecontent selection with this importance so that thetotal information becomes maximal using the rear-rangement functions.In ?4, we discuss how we implemented these prin-ciples in MIKE to produce a real time narration.2.2 What, How and When-to-SayThe previous section pointed out that contentsshould be uttered at the right time; that is, realtime discourse systems should effectively address theproblem of when-to-say any piece of information.However, in MIKE we have only an implicit model ofwhen-to-say.
Rather, a collection of game analysismodules and inference rules first suggest the possiblecomments hat can be made (what-to-say).
Then, anNL-generation module decides which of these com-ments to say (again what-to-say), and also how itshould be realised (how-to-say).
This how-to-sayprocess takes into account issues such as the rear-rangements described in the previous ection.In traditional language generation research, therelationship between the what-to-say aspect (plan-ning) and the how-to-say aspect (surface generation)?
Explanation of  complex events concern formchanges, posit ion change, and advanced plays.?
Evaluation of  team plays concern average forms,forms at a certain moment ,  players' location, indi-cat ion of the active or problematic players, winningpasswork patterns, wasteful movements.?
Suggestions for improving p lay  concern loose de-fense areas, and better  locations for inactive players.?
P red ic t ions  concern pass, game result, and shots atgoal.?
Set pieces concern goal kicks, throw ins, kick offs,corner kicks, and free kicks.?
Passworks  track basic ball-by-ball plays.Figure 1: MIKE'S repertoire of statementshas been widely discussed (Appelt, 1982) (Hovy,1988).
One viewpoint is that, for designing naturallanguage systems, it is better to realize what-to-sayand how-to-say as separate modules.
However, inMIKE we found that the time pressure in the domainmakes it difficult o separate what-to-say and how-to-say in this way.
Our NL generator decides both onwhat-to-say and how-to-say because the rearrange-ments made when deciding how to realize a pieceof information directly affect the importance of theremaining unuttered comments.
To separate theseprocesses cause significant ime delays that wouldnot be tolerable in our time-critical domain.3 Br ie f  Descr ip t ion  o f  MIKE's Des ignA detailed escription, of MIKE, especially its soccergame analysis capabilities can be found in (Tanaka-Ishii et al, 1998).
Here we simply give a briefoverview.3.1 MIKE's StructureMIKE, 'Multi-agent Interactions KnowledgeablyExplained', is designed to produce simultaneouscommentary for the Soccer Server, originally pro-posed as a standard evaluation method for multi-agent systems(Noda and Matsubara, 1996).
TheSoccer Server provides a real-time game log 1 of avery high quality, sending information on the po-sitions of the players and the ball to a monitoringprogram every 100msec.
Specifically, this informa-tion consists of:?
player location and orientation,?
ball location,?
game score and play modes (such as throw ins,goal kicks, etc ).From this low-level input, the current implementa-tion of MIKE can generate the range of commentsshown in Figure 1.1The s imulator  and the game logs are available athttp : / / c i .
e t l .
go.
j p/'noda/s occer/server.1283I SoccerServer 1Figure 2: MIKE's structureTable 1:fragments of commentaryLocalEvent KickPassDribbleShootPredictState NarkPlayerPassSuccessRateProblematicPlayerPlayerActiveExamples of Propositions, the internalGlobalChangeFormSideChangeTeamPassSuccessRateAveragePassDistanceScoreTimeMIKE'S architecture - -  a role-sharing multi-agentsystem 2__ is shown in Figure 2.
Here, the ovals rep-resent concurrently running modules and the rectan-gles represent data.All communication among modules i  mediated bythe internal symbolic representation f commentary2In natural anguage processing, the multi-agent approachdates back to Hearsay-II (Erraan et al, 1980), which was thefirst to use the blackboard architecture.
The core organizationof MIKE, however, is more akin to a subsumption architecture(Brooks, 1991), because the agents are regarded as behaviormodules which are both directly connected to the externalenvironment ( hrough sensor eadings from the shared mem-ory) and can directly produce system behavior (by suggest-ing commentary).
However, MIKE does not exactly fit thesubsumption architecture model because the agents can alsocommunicate with each other: there are some portions of theshared memory that are global and some that are exported toonly a limited number of agents.
This division of shared mem-ory leads to more possibilities for inter-agent communication.?
Log ica l  consequences :(PassSuccessRate player percentage)(PassPattern player Goal)---* (ac t ive  player)?
Logical subsumpt ion :(Pass playerl player2) (Kick playerl)-~ (Delete @2)?
State  change:(Form team forml)(F0rm team form2)--+ (Delete ear l ie r -p rop)?
Second order  re la t ion :(PassSuccessRate player percentage)(PlayerOnVoronoiLine playr) --*(Reason @1 @2)Figure 3: Categories and examples of inference rulesfragments, which we call propositions.
A proposi-tion is represented with a tag and some attributes.For example, a kick by player No.5 is representedas (Kick 5), where Kick is the tag and 5 is the at-tribute.
So far, MIKE has around 80 sorts of tags,categorized in two ways: as being local or global andas being state-based or event-based.
Table 1 showssome examples of categorized proposition tags.Some of the important modules in MIKE'S archi-tecture can be summarized as follows.There are six Soccer Analyzers that try to inter-pret the game.
Three of these analyze vents (shownin the figure as the 'kick analysis', pass work', and'shoot' modules).
The other three carry out state-based analysis (shown as the 'basic strategy', for-mation', and 'play area' modules).
The modules an-alyze the data from the Soccer Server, communicatewith each other via the shared memory, and thenpost the results as propositions into the Pool.The Real T ime Inference Engine processes thepropositions.
Prpositions deposited in the Pool arebare facts and are often too detailed to be used ascomments.
MIKE therefore uses forward chainingrules of the formprecedents---, antecedentsto draw further inferences.
The types of rules usedfor this process are shown in Figure 3.
Currently,MIKE has about 110 such rules.The Natura l  Language Generator  selects theproposition from the Pool that best fits the currentstate of the game (considering both the situation onthe field and the comment currently being made).It then translates the proposition into NL.
So far,MIKE just carries out this final step with the simplemechanism oftemplate-matching.
Several templatesare prepared for each proposition tag, and the out-1284importanceiinitial value <: -.
Global Propositions:always the default valueLocal Propositions:' different values accordingto the bali's location ~,~decreased  by in ~tepost infer delete timeor utterFigure 4: An example transformation f importanceof a propositionput can be is in English, French or Japanese.To produce speech, MIKE uses off the shelftext-to-speech software.
English is produced byDectalk(DEC, 1994), French by Proverbe SpeechEngine Unit(Elan, 1997), Japanese by FujitsuJapanese Synthesizer(Fujitsu, 1995).4 Imp lementat ion  o f  ContentSe lec t ion4.1 Importance of a Proposit ionThe Soccer Analyzers attach an importance score toa proposition, which intuitively captures the amountof information that the proposition would transmitto an audience.The importance score of a proposition is plannedto change over time as follows (Figure 4).
After be-ing posted to the Pool, the score decreases over timewhile it remains in the Pool waiting to be uttered.When the importance score of a proposition reacheszero, it is deleted.
This decrease in importance mod-els the way that an event's relevance decreases as thegame progresses.The rate at which importance scores decrease canbe modeled by any monotonic function.
For sim-plicity, MIKE'S function is currently linear.
Sinceit seems ensible that local propositions should losetheir score more quickly than global ones, severalfunctions with different slopes are used, dependingon the degree to which a proposition can be consid-ered local or global.
When a proposition is used forutterance or inference, the score is reduced in orderto avoid the redundant use of the same proposition,but not set to zero, thus leaving a small chance forother inferences.There is also an initialization process for the im-portance scores as follows.
First, to reflect he situa-tion of the game, the local propositions are modifiedby a multiplicative factor depending on the stateof the game.
This factor is designed so that localpropositions are more important when the ball isnear the goal.
Global propositions are always ini-tialized with the default value.Secondly, to reflect the topic of the discourse,MIKE has a feedback control which enables each Soc-cer Analyzer module to take into account MIKE'spast and present utterances.
The NL generatorbroadcasts the current subject to the agents andthey assign greater initial importance scores topropositions with related subjects.
For example,when MIKE is talking about player No.5, the An-alyzers assign a higher importance to propositionsrelating to this player No.5.4.2 Maximizat ion of the Importance ScoreAs the importance score is designed to intuitivelyreflect he information transmitted to the audience,the natural application of our content selection prin-ciples described in ?2 is simply to attempt to max-imize the total importance of all the propositionsthat are selected for utterance.MIKE has the very basic function of uttering themost important content at any given time.
Thatis, MIKE repeatedly selects the proposition with thelargest importance score in the Pool.The NL Generator translates the selected propo-sition into a natural anguage xpression and sendsit to the TTS-administrator module.
Then the NLGenerator has to wait until the Text-to-Speech soft-ware finishes the utterance before sending out thenext expression.
During this time lag, however, thegame situation might rapidly unfold and numerousfurther propositions may be posted to the Pool.
It isto cope with this time lag that MIKE implements aalternative function, that allows a more flexible se-lection of propositions by modeling the processes ofinterruption, abbreviation, and repetition,Interrupt ionIf a proposition with a much larger importance scorethan the one currently being uttered is inserted intothe Pool, the total importance score may becomelarger by immediately interrupting the current ut-terance and switching to the new one.
For example,the left of Figure 5 shows (solid line) the changeof the importance score with time when an inter-ruption takes place (the dotted line.
represents theimportance score without interruption).
The leftpart of the solid line is lower than the dotted, be-cause the first utterance conveys less of its impor-tance score (information) when it is not completelyuttered.
The right part of the dotted line is lowerthan that of the solid, because the importance ofthesecond utterance decreases over time when waiting1285i n te r rupt ion  abbrev ia t ion: with interruption?
'1 l -- w thou - ~!
interruplion it timeImportant propositionposted at this pointtotal importancescore usinginterruptioni without abbreviation- ~  withabbreviationt timeTwo important propositionsat this point _ _ _total importance total importance total importancescore not using score using score not usinginterruption abbreviation abbreviationFigure 5: Change of importance score on interrup-tion and abbreviationto be selected.Thus, the sum of the importance of the utteredpropositions can no longer be used to access the sys-tem's performance.
Instead, the area between thelines and the horizontal axis indicates the total im-portance score over time.
Whether or not to makeinterruption should be decided by comparing two ar-eas made by the solid and dotted, and the larger areasize is the total importance score gain.
Further, thisselection decides what to be said and how at thesame time.Note that interruptions raise the importance scoregain by reacting sharply to the sudden increase ofthe importance score.AbbreviationIf the two most important propositions in the Poolare of similar importance, it is possible that theamount of communicated information could be max-imized by quickly uttering the most importantproposition and then moving on to the second be-fore loses importance due to some development ofthe game situation.
In the Figure 5, we have illus-trated this in the same way we did for the case ofinterruption.
The left hand side of the solid line islower than that of the dotted because an abbrevi-ated utterance (which might not be grammaticallycorrect, or whose context might not be fully given)transmits less information than a more complete ut-terance.
As the second proposition can be utteredbefore losing its importance score, however, the righthand part of the solid line is higher than that of thedotted.
As before, the benefits or otherwise of thismodification should be decided by comparing withRed3 collects the ball from Red$, Red3, Red-Team,wonderful goal!
P to ~!
Red3's great center shot!Equal!
The Red-Team's formation is now breakingthrough enemy line from center, The Red-Team'scounter attack (Red4 near at the center line made along pass towards Red3 near the goal and he madea shot very swiftly.
), Red3's goal!
Kick o~, Yellow-Team, Red1 is very active because, Red1 always takesgood positions, Second hall o\] RoboCup'9?
quater-final(Some background is described while the ballis in the mid field.)
Left is Ohta Team, Japan,Right is Humboldt, Germany, Red1 takes the ball,bad pass, (Yellow team's play after kick off was in-terrupted by Read team) Interception by the Yellow-Team, Wonderful dribble, YellowP, YellowP (Yellow6approaches Yellow2 for guard), Yellow6's pass, Apass through the opponents' defense, Red6 can takethe ball, because, Yellow6 is being marked by Red6,....
The Red- Team's counter attack, The Red- Team's\]ormation is (system's interruption), Yellow5, Backpass of YellowlO, Wonderful pass,Figure 6: Example of MIKE'S commentary of aquater-final from RoboCup'97the two areas made by the solid and the dotted linewith the horizontal axis.
Again, this selection de-cides how and what-to-say at the same point.In this case we would hope that abbreviationsraise the importance score by smoothing sudden de-creases of the importance scores posted to the Pool.RepetitionWhenever a proposition is selected to be uttered, itsimportance value is decreased.
It is also marked ashaving been uttered, to prevent its re-use.
However,sometimes it can happen that the remaining un-uttered propositions in the Pool have much smallervalues than any of those that have already been se-lected.
In this case, we investigate the effects o fallowing previously uttered propositions to be re-peated.5 Eva luat ion5.1 Output ExampleAn example of MIKE's commentary (when employ-ing interruption, abbreviation and repetition) isshown in Figure 6.
In practice, this output is de-signed to accompany a visual game, but it is im-practical to reproduce here enough screen-shots odescribe the course of the play.
We have thereforeinstead included some context and further explana-tions in parentheses.
This particular commentary1286,~, 4 ~ ?)
7" l~- ,  ,~, 4 ~"  ~ ,~, 3 ~,  ~, 3 :~,~,-7~,r~?~-,-- b !
~,~ !
if, 3 ~::b~::f-- Jl~, ~,"7--5~~-b ,  ~-z ,~}.~,p~f  ~, ~8~,  ~,~z~-c L.~ 5~ ~,Figure 7: Japanese outputRouge~, Rouge4, Balle du Rouge4 au Rouge3,Rouge3, 2e but.
Score de 2~ P. Tit du centre parRouge3 !
Egalite !
Rouge3, but / Attaque rapide del'dquipe rouge, JaunelO, La formation de l'gquipejaune est basde sur l'attaque par le centre.
L 'dquipejaponaise a gagng dans le Groupe C du deuxidmeTour, tandis que l'dquipe allemande a gagng dansle Groupe D. Rouge1 prend la baUe, mauvaise passeC'est l'gquipe jaune qui relance le jeu, Magnifiquedribble du JauneP, Passe pour JauneS.
Est-ce queJaune6 passe ~ Jaune5?Figure 8: French outputcovers a roughly 20 second period of a quater-finalfrom RoboCup'97.For comparison, we have included MIKE'S Frenchand Japanese descriptions of the same game periodin Figure 8 and Figure 7.
In general, the generatedcommentary differs because of the timing issues re-sulting from two factors: agent concurrency and thelength of the NL-templates.
One NL template israndomly chosen from several candidates at transla-tion time and it is the length of this template thatdecides the timing of the next content selection.5.2 Effect of RearrangementsImportance Score IncreaseFigure 9 plots the importance score of thePropositions in MIKE'S commentary for the someRoboCup'97 quater-final we used in the previoussection.
The horizontal axis indicates time unit of100msec and the vertical axis the importance scoreof the comment being uttered (taking into accountreductions due to interruption, abbreviation, or re-peated use of a proposition).
The solid line describesthe importance score change with interruption, ab-breviation and repetition, whereas the dotted showsthat without such rearrangements.
A  we describedin ?4, the area between the plotted lines and the1287I with rear'age-.---e4 w/o rearrange .
.
.
.
ii I / Still talking on | \[ ~/Goal  after the |I I J / Goal  H,I !
; ,i ' .
'o2000 2100 2200 2300 2400 \ 2500 2600time The duration of examplecommentary output inSection 5.1Figure 9: Importance score change during aRoboCup'97 quater-final gamehorizontal axis indicates the total importance score.Two observations:?
The graph peaks generally occur earlier for thesolid line than for the dotted.
This indicatesthat the commentary with rearrangements ismore timely than the commentary that repeat-edly selects the most important proposition.For instance, the peaks caused by a goal aroundtime 2200 spread out for the dotted line, whichis not the case for the solid line.
Also, the peaksare higher for the solid line than dotted.?
The area covered by the solid line is larger thanthat by the dotted, meaning that the total im-portance score is greater with rearrangements.During this whole game, the total importancescore with rearrangements amounted 9.90%more than that without.Decrease of Delayed UtterancesAs a further experiments, we manually annotatedeach statement in the Japanese output for theRoboCup'9?
quater-final with it optimal time forutterance.
We then calculated the average delay inthe appearance of these statements in MIKE'S com-mentary both with and without rearrangements.
Wefound that adding the rearrangements decreased thisdelay from 2.51sec to 2.16sec , a improvement atabout 14%.6 Re la ted  Works(Suzuki et al, 1997) have proposed new interac-tion styles to replace conventional goal-oriented dia-logues.
Their multi-agent dialogue system that chatswith a human considers topics and goals as beingsituated within the context of interactions amongparticipants.
Their model of context handling is anadaptation of a subsumption architecture.
One im-portant common aspect between their system andMIKE is that the system itself creates topics.The SOCCER system described in (Andr~ et al,1994), combines a vision system with an intelligentmultimedia generation system to provide commen-tary on 'short sections of video recordings of realsoccer games'.
The system is built on VITRA,which uses generalized simultaneous scene descrip-tion to produce concurrent image sequence valua-tion and natural anguage processing.
The visionsystem translates TV images into information andthe intelligent multimedia generation module thentakes this information and presents it by combiningmedia such as text, graphics and video.7 Conclusions and Future WorkWe have described how MIKE, a live commentarygeneration system for the game of soccer, deals withthe issues of real time content selection and realiza-tion.MIKE uses heterogeneous modules to recognizevarious low-level and high-level features from basicinput information on the positions of the ball andthe players.
An NL generator then selects contentsfrom a large number of propositions describing thesefeatures.The selection of contents is controlled by impor-tance scores that intuitively capture the amount ofinformation communicated to the audience.
Underour principle of maximizing the total importancescores communicated to the audience, the decisionon how a content should be realized considering re-arrangements such as interruption, abbreviation, isdecided at the same time as the selection of a con-tent.
Thus, one of our discoveries was that severewhen-to-say restriction works to tightly incorporatewhat-to-say (content selection) module and a how-to-say (language realization) module.We presented sample commentaries produced byMIKE in English, French and Japanese.
The effectof using the rearrangements was shown comparedand found to increase the total importance scores by10%, to decrease delay of the commentary by 14%.An important goal for future work is parameterlearning to allow systematic mprovement ofMIKE'Sperformance.
Although the parameters used in thesystem should ideally be extracted from the gamelog corpus, this opportunity is currently very lim-ited; only the game logs of RoboCup'97 (56 games)and JapanOpen-98 (26 games) is open to public.Additionally, no model commentary text corpus isavailable.
One way to surmount the lack of appro-priate corpora is to utilize feedback from an actualaudience.
Evaluations and requests raised by theaudience could be automatically reflected in param-eters such as the initial values for importance scores,rates of decay of these scores, the coefficients in theformulae used for controlling inferences.Another important research topic is the incorpo-ration of more sophisticated natural anguage gen-eration technologies in MIKE to produce a morelively, diverse output.
At the phrase generationlevel, this includes the generation of temporal ex-pressions, anaphoric references to preceding parts ofthe commentary, embedded clauses.
At the moresurface level, these are many research issues relatedto text-to-speech technology, especially prosody con-trol.ReferencesE.
Andre, G. Herzog, and T. Rist.
1994.
Mul-timedia presentation of interpreted visual data.In P. McKevitt, editor, Proceedings of AAAI-g~,Workshop on Integration of Natural Language andVision Processing, pages 74-82, Seattle, WA.D.E.
Appelt.
1982.
Planning natural-language refer-ring expressions.
In Proceedings of Annual Meet-ing of the Association for Computational Linguis-tics, pages 108-112.R.A.
Brooks.
1991.
A new approach to robotics.Science, pages 1227-1232.DEC.
1994.
Dectalk express text-to-speech synthe-sizer user guide.Elan.
1997.
Speech proverbe ngine unit manual.L.
D. Erman, F. Hayes-Roth, V. R. Lesser, and D. R.Reddy.
1980.
The Hearsay-II speech understand-ing system: Integrating knowledge to resolve un-certainty.
ACM Computing Surveys, 12(2):213-253.Fujitsu.
1995.
FSUNvoicel.0 Japanese speech syn-thesizer document.E.H.
Hovy.
1988.
Generating Natural Language un-der Pragmatic Constraints.
Lawrence ErlbaumAssociates.I.
Noda and H. Matsubara.
1996.
Soccer Server andresearches on multi-agent systems.
In Hiroaki Ki-tano, editor, Proceedings of IROS-96 Workshopon RoboCup, pages 1-7, Nov.N.
Suzuki, S. Inoguchi, K. Ishii, and M. Okada.1997.
Chatting with interactive agent.
In Eu-rospeech'97, volume 3, pages 2243-2247.K.
Tanaka-Ishii, I. Noda, I. Frank, H. Nakashima,K.
Hasida, and H. Matsubara.
1998.
Mike: Anautomatic commentary s stem for soccer.
In Pro-ceedings of ICMAS98, Paris, France.1288
