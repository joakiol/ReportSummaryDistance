Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 345?352,Sydney, July 2006. c?2006 Association for Computational LinguisticsA Collaborative Framework for Collecting Thai Unknown Words fromthe WebChoochart Haruechaiyasak, Chatchawal Sangkeettrakarn, Pornpimon PalingoonSarawoot Kongyoung and Chaianun DamrongratInformation Research and Development Division (RDI)National Electronics and Computer Technology Center (NECTEC)Thailand Science Park, Klong Luang, Pathumthani 12120, Thailandrdi5@nnet.nectec.or.thAbstractWe propose a collaborative framework forcollecting Thai unknown words found onWeb pages over the Internet.
Our maingoal is to design and construct a Web-based system which allows a group of in-terested users to participate in construct-ing a Thai unknown-word open dictionary.The proposed framework provides sup-porting algorithms and tools for automati-cally identifying and extracting unknownwords from Web pages of given URLs.The system yields the result of unknown-word candidates which are presented tothe users for verification.
The approvedunknown words could be combined withthe set of existing words in the lexiconto improve the performance of many NLPtasks such as word segmentation, infor-mation retrieval and machine translation.Our framework includes word segmenta-tion and morphological analysis modulesfor handling the non-segmenting charac-teristic of Thai written language.
To takeadvantage of large available text resourceon the Web, our unknown-word boundaryidentification approach is based on the sta-tistical string pattern-matching algorithm.Keywords: Unknown words, open dictio-nary, word segmentation, morphologicalanalysis, word-boundary detection.1 IntroductionThe advent of the Internet and the increasing pop-ularity of the Web have altered many aspects ofnatural language usage.
As more people turn to theInternet as a new communicating channel, the tex-tual information has increased tremendously andis also widely accessible.
More importantly, theavailable information is varied largely in terms oftopic difference and multi-language characteristic.It is not uncommon to find a Web page written inThai lies adjacent to aWeb page written in Englishvia a hyperlink, or a Web page containing bothThai and English languages.
In order to performwell in this versatile environment, an NLP systemmust be adaptive enough to handle the variation inlanguage usage.
One of the problems which re-quires special attention is unknown words.As with most other languages, unknown wordsalso play an extremely important role in Thai-language NLP.
Unknown words are viewed as oneof the problematic sources of degrading the per-formance of traditional NLP applications such asMT (Machine Translation), IR (Information Re-trieval) and TTS (Text-To-Speech).
Reduction inthe amount of unknown words or being able tocorrectly identify unknown words in these sys-tems would help increase the overall system per-formance.The problem of unknown words in Thai lan-guage is perhaps more severe than in English orother latin-based languages.
As a result of theinformation technology revolution, Thai peoplehave become more familiar with other foreign lan-guages especially English.
It is not uncommon tohear a few English words over a course of con-versation between two Thai people.
The foreignwords along with other Thai named entities areamong the new words which are continuously cre-ated and widely circulated.
To write a foreignword, the transliterated form of Thai alphabets isoften used.
The Royal Institute of Thailand is theofficial organization in Thailand who has respon-345sibility and authority in defining and approving theuse of new words.
The process of defining a newword is manual and time-consuming as each wordmust be approved by a working group of linguists.Therefore, this traditional approach of construct-ing the lexicon is not a suitable solution, especiallyfor systems running on the Web environment.Due to the inefficiency of using linguists indefining new lexicon, there must be a way to au-tomatically or at least semi-automatically collectnew unknown words.
In this paper, we proposea collaborative framework for collecting unknownwords from Web pages over the Internet.
Ourmain purpose is to design and construct a systemwhich automatically identifies and extracts un-known words found on Web pages of given URLs.The compiled list of unknown-word candidates isto be verified by a group of participants.
The ap-proved unknown words are then added to the ex-isting lexicon along with the other related infor-mation such as meaning and POS (part of speech).This paper focuses on the underlying algorithmsfor supporting the process of identifying and ex-tracting unknown words.
The overall process iscomposed of two steps: unknown-word detectionand unknown-word boundary identification.
Thefirst step is to detect the locations of unknown-word occurrences from a given text.
Since Thailanguage belongs to the class of non-segmentinglanguage group in which words are written contin-uously without using any explicit delimiting char-acter, detection of unknown words could be ac-complished mainly by using a word-segmentationalgorithm with a morphological analysis.
By us-ing a dictionary-based word-segmentation algo-rithm, locations of words which are not previ-ously included in the dictionary will be easily de-tected.
These unknown words belong to the classof explicit unknown words and often represent thetransliteration of foreign words.The other class of unknown words is hiddenunknown words.
This class includes new wordswhich are created through the combination ofsome existing words in the lexicon.
The hiddenunknown words are usually named entities suchas a person?s name and an organization?s name.The hidden unknown words could be identified us-ing the approaches such as n-gram generation andphrase chunking.
The scope of this paper focusesonly on the extraction of the explicit unknownwords.
However, the design of our framework alsoincludes the extraction of hidden unknown words.We will continue to explore this issue in our futureworks.Once the location of an unknown word is de-tected, the second step involves the identificationof its boundary.
Since we use the Web as ourmain resource, we could take advantage of its largeavailability of textual contents.
We are interestedin collecting unknown words which occur morethan once throughout the corpus.
Unknown wordswhich occur only once in the large corpus are notconsidered as being significant.
These words maybe unusual words which are not widely accepted,or could be misspelling words.
Using this assump-tion, our approach for identifying the unknown-word boundary is based on a statistical pattern-matching algorithm.
The basic idea is that thesame unknown word which occurs more than oncewould likely to appear in different surroundingcontexts.
Therefore, a group of characters whichform the unknown word could be extracted by an-alyzing the string matching patterns.To evaluate the effectiveness of our proposedframework, experiments using a real data set col-lected from the Web are performed.
The experi-ments are designed to test each of the two mainsteps of the framework.
Variation of morphologi-cal analysis are tested for the unknown-word de-tection.
The detection rate of unknown wordswere found to be as high as approximately 96%.Three variations of string pattern-matching tech-niques were tested for unknown-word boundaryidentification.
The identification accuracy wasfound to be as high as approximately 36%.
Therelatively low accuracy is not the major concernsince the unknown-word candidates are to be ver-ified and corrected by users before they are ac-tually added to the dictionary.
The system isimplemented via the Web-browser environmentwhich provides user-friendly interface for verifi-cation process.The rest of this paper is organized as fol-lows.
The next section presents and discussesrelated works previously done in the unknown-word problem.
Section 3 provides an overviewof unknown-word problem in the relation to theword-segmentation process.
Section 4 presents theproposed framework with underlying algorithmsin details.
Experiments are performed in Section5 with results and discussion.
The conclusion isgiven in Section 6.3462 Previous WorksThe research and study in unknown-word prob-lem have been extensively done over the pastdecades.
Unknown words are viewed as prob-lematic source in the NLP systems.
Techniquesin identifying and extracting unknown words aresomewhat language-dependent.
However, thesetechniques could be classified into two major cat-egories, one for segmenting languages and an-other for non-segmenting languages.
Segment-ing languages, such as latin-based languages, usedelimiting characters to separate written words.Therefore, once the unknown words are detected,their boundaries could be identified relatively eas-ily when compared to those for non-segmentinglanguages.Some examples of techniques involvingsegmenting languages are listed as follows.Toole (2000) used multiple decision trees toidentify names and misspellings in English texts.Features used in constructing the decision treesare, for example, POS (Part-Of-Speech), wordlength, edit distance and character sequencefrequency.
Similarly, a decision-tree approachwas used to solve the POS disambiguationand unknown word guessing in (Orphanos andChristodoulakis, 1999).
The research in theunknown-word problem for segmenting lan-guages is also closely related to the extraction ofnamed entities.
The difference of these techniquesto those in non-segmenting languages is thatthe approach needs to parse the written text inword-level as opposed to character-level.The research in unknown-word problem fornon-segmenting languages is highly active forChinese and Japanese.
Many approaches havebeen proposed and experimented with.
Asaharaand Matsumoto (2004) proposed a technique ofSVM-based chunking to identify unknown wordsfrom Japanese texts.
Their approach used a sta-tistical morphological analyzer to segment textsinto segments.
The SVM was trained by usingPOS tags to identify the unknown-word bound-ary.
Chen and Ma (2002) proposed a practicalunknown word extraction system by consideringboth morphological and statistical rule sets forword segmentation.
Chang and Su (1997) pro-posed an unsupervised iterative method for ex-tracting unknown lexicons from Chinese text cor-pus.
Their idea is to include the potential unknownwords to the augmented dictionary in order to im-prove the word segmentation process.
Their pro-posed approach also includes both contextual con-straints and the joint character association metricto filter the unlikely unknown words.
Other ap-proaches to identify unknown words include sta-tistical or corpus-based (Chen and Bai, 1998), andthe use of heuristic knowledge (Nie et al , 1995)and contextual information (Khoo and Loh, 2002).Some extensions to unknown-word identificationhave been done.
An example include the determi-nation of POS for unknown words (Nakagawa etal.
, 2001).The research in unknown words for Thai lan-guage has not been widely done as in other lan-guages.
Kawtrakul et al (1997) used the combina-tion of a statistical model and a set of context sen-sitive rules to detect unknown words.
Our frame-work has a different goal from previous works.
Weconsider unknown-word problem as collaborativetask among a group of interested users.
As moretextual content is provided to the system, new un-known words could be extracted with more accu-racy.
Thus, our framework can be viewed as col-laborative and statistical or corpus-based.3 Unknown-Word Problem in WordSegmentation AlgorithmsSimilar to Chinese, Japanese and Korea, Thai lan-guage belongs to the class of non-segmenting lan-guages in which words are written continuouslywithout using any explicit delimiting character.To handle non-segmenting languages, the first re-quired step is to perform word segmentation.
Mostword segmentation algorithms use a lexicon ordictionary to parse texts at the character-level.
Atypical word segmentation algorithm yields threetypes of results: known words, ambiguous seg-ments, and unknown segments.
Known words areexisting words in the lexicon.
Ambiguous seg-ments are caused by the overlapping of two knownwords.
Unknown segments are the combination ofcharacters which are not defined in the lexicon.In this paper, we are interested in extractingthe unknown words with high precision and re-call results.
Three types of unknown words arehidden, explicit and mixed (Kawtrakul et al ,1997).
Hidden unknown words are composed bydifferent words existing in the lexicon.
To illus-trate the idea, let us consider an unknown wordABCD where A, B, C, and D represents individ-ual characters.
Suppose that AB and CD both ex-347ist in a dictionary, then ABCD is considered asa hidden unknown word.
The explicit unknownwords are newly created words by using differ-ent characters.
Let us again consider an unknownword ABCD.
Suppose that there is no substringof ABCD (i.e., AB, BC, CD, ABC, BCD) exists inthe dictionary, then ABCD is considered as explicitunknown words.
The mixed unknown words arecomposed of both existing words in a dictionaryand non-existing substrings.
From the example ofunknown string ABCD, if there is at least one sub-string of ABCD (i.e., AB, BC, CD, ABC, BCD) ex-ists in the dictionary, then ABCD is considered asa mixed unknown word.It can be immediately seen that the detection ofthe hidden unknown words are not trivial since theparser would mistakenly assume that all the frag-ments of the words are valid, i.e., previously de-fined in the dictionary.
In this paper, we limit our-self to the extraction of the explicit and mixed un-known words.
This type of unknown words usu-ally represent the transliteration of foreign words.Detection of these unknown words could be ac-complished mainly by using a word-segmentationalgorithm with a morphological analysis.
By usinga dictionary-based word-segmentation algorithm,locations of words which are not previously de-fined in the lexicon could be easily detected.4 The Proposed FrameworkThe overall framework is shown in Figure 1.Two major components are information agent andunknown-word analyzer.
The details of each com-ponent are given as follows.?
Information agent: This module is com-posed of a Web crawler and an HTML parser.It is responsible for collecting HTML sourcesfrom the given URLs and extracting the tex-tual data from the pages.
Our framework isdesigned to support multi-user and collabora-tive environment.
The advantage of this de-sign approach is that unknown words couldbe collected and verified more efficiently.More importantly, it allows users to select theWeb pages which suit their interests.?
Unknown-word analyzer: This module iscomposed of many components for analyzingand extracting unknown words.
Word seg-mentation module receives text strings fromthe information agent and segments theminto a list of words.
N-gram generationmodule is responsible for generating hiddenunknown-word candidates.
Morphologicalanalysis module is used to form initial ex-plicit unknown-word segments.
String pat-tern matching unit performs unknown-wordboundary identification task.
It takes theintermediate unknown segments and iden-tifies their boundaries by analyzing stringmatching patterns The results are processedunknown-word candidates which are pre-sented to linguists for final post-processingand verification.
New unknown words arecombined with the dictionary to iterativelyimprove the performance of the word seg-mentation module.
Details of each compo-nent are given in the following subsections.4.1 Unknown-Word DetectionAs previously mentioned in Section 3, applyinga word-segmentation algorithm on a text stringyields three different segmented outputs: known,ambiguous, and unknown segments.
Since ourgoal is to simply detect the unknown segmentswithout solving or analyzing other related issuesin word segmentation, using the longest-matchingword segmentation algorithm previously proposedby Poowarawan (1986) is sufficient.
An exam-ple to illustrate the word-segmentation process isgiven as follows.Let the following string denotes atext string written in Thai language:{a1a2...aib1b2...bjc1c2...ck}.
Suppose that{a1a2...ai} and {c1c2...ck} are known wordsfrom the dictionary, and {b1b2...bj} be an un-known word.
For the explicit unknown-wordcase, applying the word-segmentation algo-rithm would yield the following segments:{a1a2...ai}{b1}{b2}...{bj}{c1c2...ck}.
It can beobserved that the detected unknown positions fora single unknown word are individual charactersin the unknown word itself.
Based on the initialstatistical analysis of a Thai lexicon, it was foundthat the averaged number of characters in a wordis equal to 7.
This characteristic is quite differentfrom other non-segmenting languages such asChinese and Japanese in which a word couldbe a character or a combination of only a fewcharacters.
Therefore, to reduce the complexityin unknown-word boundary identification task,the unknown segments could be merged toform multiple-character segments.
For exam-348                                 ff fi fl ffi   ff ! "
# $  %  ff &  ' ( ff fi ) !
 ffi * + , # fi-  .
/ .
     0 1   0  2   3  0   0  4 5 6 7 8 9 : 9 ;< = > = ?
@ =A B C D B = ; EF 9 G G B =< = > = ?
@ =A B C D B = ; E< = > = ?
@ =H ?
I GJ K = G 9 G K ; B E0  L  0  0  M  2    0  4    /     0 N O P O Q R OS T U V T O W X R YW Z[ Q O W T \ W XFigure 1: The proposed framework for collecting Thai unknown words.ple, a merging of two characters per segmentwould give the following unknown segments:{b1b2}{b3b4}...{bj?1bj}.
In the following experi-ment section, the merging of two to five charactersper segment including the merging of all unknownsegments without limitation will be compared.Morphological analysis is applied to guaran-tee grammatically correct word boundaries.
Sim-ple morphological rules are used in the frame-work.
The rule set is based on two types ofcharacters, front-dependent characters and rear-dependent characters.
Front-dependent charactersare characters which must be merged to the seg-ment leading them.
Rear-dependent charactersare characters which must be merged to the seg-ment following them.
In Thai written language,these dependent characters are some vowels andtonal characters which have specific grammaticalconstraints.
Applying morphological analysis willhelp making the unknown segments more reliable.4.2 Unknown-Word Boundary IdentificationOnce the unknown segments are detected, theyare stored into a hashtable along with their con-textual information.
Our unknown-word bound-ary identification approach is based on a stringpattern-matching algorithm previously proposedby Boyer and Moore (1977).
Consider theunknown-word boundary identification as a stringpattern-matching problem, there are two possiblestrategies: considering the longest matching pat-tern and considering the most frequent matchingpattern as the unknown-word candidates.
Bothstrategies could be explained more formally as fol-lows.Given a set of N text strings, {S1S2...SN},where Si, is a series of leni characters de-noted by {ci,1ci,2...ci,leni} and each is markedwith an unknown-segment position, posi, where1?posi?leni.
Given a new string, Sj , withan unknown-segment position, posj , the longestpattern-matching strategy iterates through eachstring, S1 to SN and records the longest string pat-tern which occur in both Sj and the other stringin the set.
On the other hand, the most fre-quent pattern-matching strategy iterates througheach string, S1 to SN , but records the matchingpattern which occur most frequently.The results from the unknown-word bound-ary identification are unknown-word candidates.These candidates are presented to the users forverification.
Our framework is implemented viaa Web-browser interface which provides a user-friendly environment.
Figure 2 shows a screensnapshot of our system.
Each unknown word islisted within a text field box which allows a user toedit and correct its boundary.
The contexts couldbe used as some editing guidelines and are alsostored into the database.349Figure 2: Example of Web-Based Interface5 Experiments and ResultsIn this section, we evaluate the performance ofour proposed framework.
The corpus used in theexperiments is composed of 8,137 newspaper ar-ticles collected from a top-selling Thai newspa-per?s Web site (Thairath, 2003) during 2003.
Thecorpus contains a total of 78,529 unknown wordsof which 14,943 are unique.
This corpus wasfocused on unknown words which are transliter-ated from foreign languages, e.g., English, Span-ish, Japanese and Chinese.
We use the publiclyavailable Thai dictionary LEXiTRON, which con-tains approximately 30,000 words, in our frame-work (Lexitron, 2006).We first analyze the unknown-word set to ob-serve its characteristics.
Figure 3 shows the plotof unknown-word frequency distribution.
Not sur-prisingly, the frequency of unknown-word usagefollows a Zipf-like distribution.
This means thereare a group of unknown words which are used veryoften, while some unknown words are used only afew times over a time period.
Based on the fre-quency statistics of unknown words, only about3% (2,375 words out of 78,529) occur only once inthe corpus.
Therefore, this finding supports the useof statistical pattern-matching algorithm describedin previous section.5.1 Evaluation of Unknown-Word DetectionApproachesAs discussed in Section 4, multiple unknown seg-ments could be merged to form a representativeunknown segment.
The merging will help reducethe complexity in the unknown-word boundaryidentification as fewer segments will be checkedfor the same set of unknown words.The following variations of merging approachare compared.?
No merging (none): No merging process is0 500 1000 1500 20000100200300400500600RankFrequencyFigure 3: Unknown-word frequency distribution.applied.?
N-character Merging (N-char): Allow themaximum of N characters per segment.?
Merging all segments (all): No limit on num-ber of characters per segment.We measure the performance of unknown-worddetection task by using two metrics.
The first isthe detection rate (or recall) which is equal to thenumber of detected unknown words divided by thetotal number of previously tagged unknown wordsin the corpus.
The second is the averaged de-tected positions per word.
The second metric di-rectly represents the overhead or the complexityto the unknown-word boundary identification pro-cess.
This is because all detected positions froma single unknown word must be checked by theprocess.
The comparison results are shown in Fig-ure 4.
As expected, the approach none gives themaximum detection rate of 96.6%, while the ap-proach all yields the lowest detection rate.
An-other interesting observation is that the approach2-char yields comparable detection rate to the ap-350] ^ _ ^ ` _ a b c d e _ ^ f g hi j ^ k e l ^ m ] ^ _ ^ ` _ ^ m n b o a _ a b c o n ^ k p b k mq r s r q t s u q u s q q v s q q w s r x t s yt s q w s q u w s r u w s y r w s u v z s q{ c | c b } c ~  ^ l ?
^ c _ ?
^ k l a c l i ?
?
k b e ` ?c b c ^ ?
~ ` ?
e k ?
~ ` ?
e k ?
~ ` ?
e k ?
~ ` ?
e k e ?
?Figure 4: Unknown-word detection resultsproach none, however, its averaged detected posi-tions per word is about three times lower.
There-fore to reduce the complexity during the unknown-word boundary identification process, one mightwant to consider using the merging approach of2-char.none 2?char 3?char 4?char 5?char all510152025303540Unknown?Segment Merging ApproachWord?BoundaryIdentificationAccuracy(%)longfreqfreq?morphFigure 5: Comparison between differentunknown-word boundary detection approaches.5.2 Evaluation of Unknown-Word BoundaryIdentificationThe unknown-word boundary identification isbased on string pattern-matching algorithm.
Thefollowing variations of string pattern-matchingtechnique are compared.?
Longest matching pattern (long): Select thelongest-matching unknown-word candidate?
Most-frequent matching pattern (freq): Se-lect the most-frequent-matching unknown-word candidate?
Most-frequent matching pattern with mor-phological analysis (freq-morph): Similarthe the approach freq but with additionalmorphological analysis to guarantee that theword boundaries are grammatically correct.The comparison among all variations of stringpattern-matching approaches are performed acrossall unknown-segment merging approach.
The re-sults are shown in Figure 5.
The performance met-ric is the word-boundary identification accuracywhich is equal to the number of unknown wordscorrectly extracted divided by the total numberof tested unknown segments.
It can be observedthat the selection of different merging approachesdoes not really effect the accuracy of the unknown-word boundary identification process.
But sincethe approach none generates approximately 6 po-sitions per unknown segment on average, it wouldbe more efficient to perform a merging approachwhich could reduce the number of positions downby at least 3 times.The plot also shows the comparison amongthree approaches of string pattern-matching.
Fig-ure 6 summarizes the accuracy results of eachstring pattern-matching approach by taking the av-erage on all different merging approaches.
The ap-proach long performed poorly with the averagedaccuracy of 8.68%.
This is not surprising becauseselection of the longest matching pattern does notmean that its boundary will be identified correctly.The approaches freq and freq-morph yield simi-lar accuracy of about 36%.
The freq-morph im-proves the performance of the approach freq byless than 1%.
The little improvement is due tothe fact that the matching strings are mostly gram-matically correct.
However, the error is caused bythe matching collocations of the unknown-wordcontext.
If an unknown word occurs together ad-jacent to another word very frequently, they willlikely be extracted by the algorithm.
Our solu-tion to this problem is by providing the users witha user-friendly interface so unknown-word candi-dates could be easily filtered and corrected.6 ConclusionWe proposed a framework for collecting Thai un-known words from the Web.
Our framework351?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
??
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
??
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?Figure 6: Unknown-word boundary identification resultsis composed of an information agent and anunknown-word analyzer.
The task of the infor-mation agent is to collect and extract textual datafrom Web pages of given URLs.
The unknown-word analyzer involves two processes: unknown-word detection and unknown-word boundaryidentification.
Due to the non-segmenting char-acteristic of Thai written language, the unknown-word detection is based on a word-segmentationalgorithm with a morphological analysis.
To takeadvantage of large available text resource from theWeb, the unknown-word boundary identificationis based on the statistical pattern-matching algo-rithm.We evaluate our proposed framework on a col-lection of Web Pages obtained from a Thai news-paper?s Web site.
The evaluation is divided to testeach of the two processes underlying the frame-work.
For the unknown-word detection, the detec-tion rate is found to be as high as 96%.
In addition,by merging a few characters into a segment, thenumber of required unknown-word extraction isreduced by at least 3 times, while the detection rateis relatively maintained.
For the unknown-wordboundary identification, considering the highestfrequent occurrence of string pattern is found tobe the most effective approach.
The identificationaccuracy was found to be as high as approximately36%.
The relatively low accuracy is not the majorconcern since the unknown-word candidates are tobe verified and corrected by users before they areactually added to the dictionary.ReferencesMasayuki Asahara and Yuji Matsumoto.
2004.Japanese unknown word identification by character-based chunking.
Proceedings of the 20th Inter-national Conference on Computational Linguistics(COLING-2004), 459?465.R.
Boyer and S. Moore.
1977.
A fast string searchingalgorithm.
Communications of the ACM, 20:762?772.Jing-Shin Chang and Keh-Yih Su.
1997.
An Unsu-pervised Iterative Method for Chinese New LexiconExtraction.
International Journal of ComputationalLinguistics & Chinese Language Processing, 2(2).Keh-Jianne Chen and Ming-Hong Bai.
1998.
Un-known Word Detection for Chinese by a Corpus-based Learning Method.
Computational Linguisticsand Chinese Language Processing, 3(1):27?44.Keh-Jianne Chen and Wei-Yun Ma.
2002.
UnknownWord Extraction for Chinese Documents.
Proceed-ings of the 19th International Conference on Com-putational Linguistics (COLING-2002), 169?175.Asanee Kawtrakul, Chalatip Thumkanon, Yuen Poovo-rawan, Patcharee Varasrai, and Mukda Suktarachan.1997.
Automatic Thai Unknown Word Recogni-tion.
Proceedings of the Natural Language Process-ing Pacific Rim Symposium, 341?348.Christopher S.G. Khoo and Teck Ee Loh.
2002.
Us-ing statistical and contextual information to iden-tify two-and three-character words in Chinese text.Journal of the American Society for Information Sci-ence and Technology, 53(5):365?377.Lexitron Version 2.1, Thai-English Dictionary.
Sourceavailable: http://lexitron.nectec.or.th, February2006.Tetsuji Nakagawa, Taku Kudoh and Yuji Matsumoto.2001.
Unknown Word Guessing and Part-of-SpeechTagging Using Support Vector Machines.
Proceed-ings of the Sixth Natural Language Processing Pa-cific Rim Symposium (NLPRS 2001), 325?331.Jian-Yun Nie, Marie-Louise Hannan and Wanying Jin.1995.
Unknown Word Detection and Segmentationof Chinese Using Statistical and Heuristic Knowl-edge.
Communications of COLIPS, 5(1&2):47?57.Giorgos S. Orphanos and Dimitris N. Christodoulakis.1999.
POS Disambiguation and Unknown WordGuessing with Decision Trees.
Proceedings of theEACL, 134?141.Yuen Poowarawan.
1986.
Dictionary-based Thai Syl-lable Separation.
Proceedings of the Ninth Electron-ics Engineering Conference.Thairath Newspaper.
Source available:http://www.thairath.com.Janine Toole.
2000.
Categorizing Unknown Words:Using Decision Trees to Identify Names and Mis-spellings.
Proceeding of the 6th Applied Natu-ral Language Processing Conference (ANLP 2000),173?179.352
