Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 133?138,Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational LinguisticsSubgroup Detector: A System for Detecting Subgroups in OnlineDiscussionsAmjad Abu-JbaraEECS DepartmentUniversity of MichiganAnn Arbor, MI, USAamjbara@umich.eduDragomir RadevEECS DepartmentUniversity of MichiganAnn Arbor, MI, USAradev@umich.eduAbstractWe present Subgroup Detector, a systemfor analyzing threaded discussions andidentifying the attitude of discussants towardsone another and towards the discussiontopic.
The system uses attitude predictions todetect the split of discussants into subgroupsof opposing views.
The system uses anunsupervised approach based on rule-basedopinion target detecting and unsupervisedclustering techniques.
The system is opensource and is freely available for download.An online demo of the system is available at:http://clair.eecs.umich.edu/SubgroupDetector/1 IntroductionOnline forums discussing ideological and politicaltopics are common1.
When people discuss a con-troversial topic, it is normal to see situations of bothagreement and disagreement among the discussants.It is even not uncommon that the big group of dis-cussants split into two or more smaller subgroups.The members of each subgroup have the same opin-ion toward the discission topic.
The member of asubgroup is more likely to show positive attitude tothe members of the same subgroup, and negative at-titude to the members of opposing subgroups.
Forexample, consider the following snippet taken froma debate about school uniform1www.politicalforum.com, www.createdebate.com,www.forandagainst.com, etc(1) Discussant 1: I believe that school uniform is agood idea because it improves student attendance.
(2) Discussant 2: I disagree with you.
School uniformis a bad idea because people cannot show their person-ality.In (1), the writer is expressing positive attituderegarding school uniform.
The writer of (2) is ex-pressing negative attitude (disagreement) towardsthe writer of (1) and negative attitude with respectto the idea of school uniform.
It is clear from thisshort dialog that the writer of (1) and the writer of(2) are members of two opposing subgroups.
Dis-cussant 1 supports school uniform, while Discussant2 is against it.In this demo, we present an unsupervised systemfor determining the subgroup membership of eachparticipant in a discussion.
We use linguistic tech-niques to identify attitude expressions, their polar-ities, and their targets.
We use sentiment analy-sis techniques to identify opinion expressions.
Weuse named entity recognition, noun phrase chunk-ing and coreference resolution to identify opiniontargets.
Opinion targets could be other discussantsor subtopics of the discussion topic.
Opinion-targetpairs are identified using a number of hand-craftedrules.
The functionality of this system is based onour previous work on attitude mining and subgroupdetection in online discussions.This work is related to previous work in the areasof sentiment analysis and online discussion mining.Many previous systems studied the problem of iden-133tifying the polarity of individual words (Hatzivas-siloglou and McKeown, 1997; Turney and Littman,2003).
Opinionfinder (Wilson et al, 2005) is a sys-tem for mining opinions from text.
SENTIWORD-NET (Esuli and Sebastiani, 2006) is a lexical re-source in which each WordNet synset is associatedto three numerical scores Obj(s), Pos(s) and Neg(s),describing how objective, positive, and negative theterms contained in the synset are.
Dr Sentiment (Dasand Bandyopadhyay, 2011) is an online interactivegaming technology used to crowd source humanknowledge to build an extension of SentiWordNet.Another research line focused on analyzing on-line discussions.
For example, Lin et al (2009)proposed a sparse coding-based model that simul-taneously models the semantics and the structureof threaded discussions.
Shen et al (2006) pro-posed a method for exploiting the temporal and lex-ical similarity information in discussion streams toidentify the reply structure of the dialog.
Many sys-tems addressed the problem of extracting social net-works from discussions (Elson et al, 2010; McCal-lum et al, 2007).
Other related sentiment analy-sis systems include MemeTube (Li et al, 2011), asentiment-based system for analyzing and display-ing microblog messages; and C-Feel-It (Joshi et al,2011), a sentiment analyzer for micro-blogs.In the rest of this paper, we describe the systemarchitecture, implementation, usage, and its evalua-tion.2 System OverviewFigure 1 shows a block diagram of the system com-ponents and the processing pipeline.
The first com-ponent is the thread parsing component which takesas input a discussion thread and parses it to iden-tify posts, participants, and the reply structure of thethread.
The second component in the pipeline pro-cesses the text of posts to identify polarized wordsand tag them with their polarity.
The list of polar-ity words that we use in this component has beentaken from the OpinionFinder system (Wilson et al,2005).The polarity of a word is usually affected by thecontext in which it appears.
For example, the wordfine is positive when used as an adjective and neg-ative when used as a noun.
For another example, apositive word that appears in a negated context be-comes negative.
To address this, we take the part-of-speech (POS) tag of the word into considerationwhen we assign word polarities.
We require that thePOS tag of a word matches the POS tag provided inthe list of polarized words that we use.
The negationissue is handled in the opinion-target pairing step aswe will explain later.The next step in the pipeline is to identify the can-didate targets of opinion in the discussion.
The tar-get of attitude could be another discussant, an entitymentioned in the discussion, or an aspect of the dis-cussion topic.
When the target of opinion is anotherdiscussant, either the discussant name is mentionedexplicitly or a second person pronoun (e.g you, your,yourself) is used to indicate that the opinion is tar-geting the recipient of the post.The target of opinion could also be a subtopic oran entity mentioned in the discussion.
We use twomethods to identify such targets.
The first methoddepends on identifying noun groups (NG).
We con-sider as an entity any noun group that is mentionedby at least two different discussants.
We only con-sider as entities noun groups that contain two wordsor more.
We impose this requirement because in-dividual nouns are very common and consideringall of them as candidate targets will introduce sig-nificant noise.
In addition to this shallow pars-ing method, we also use named entity recognition(NER) to identify more targets.
The named en-tity tool that we use recognizes three types of en-tities: person, location, and organization.
We im-pose no restrictions on the entities identified usingthis method.A challenge that always arises when perform-ing text mining tasks at this level of granularityis that entities are usually expressed by anaphori-cal pronouns.
Jakob and Gurevych (2010) showedexperimentally that resolving the anaphoric links134DiscussionThread?.??.?.??.?.?
?.Opinion Identification?
Identify polarized words?
Identify the contextualpolarity of each wordTarget Identification?
Anaphora resolution?
Identify named entities?
Identify Frequent nounphrases.?
Identify mentions ofother discussantsOpinion-Target Pairing?
Dependency RulesDiscussant AttitudeProfiles (DAPs)ClusteringSubgroupsThread Parsing?
Identify posts?
Identify discussants?
Identify the replystructure?
Tokenize text.?
Split posts into sentencesFigure 1: A block diagram illustrating the processing pipeline of the subgroup detection systemin text significantly improves opinion target extrac-tion.
Therefore, we use co-reference resolution tech-niques to resolve all the anaphoric links in the dis-cussion thread.At this point, we have all the opinion words andthe potential targets identified separately.
The nextstep is to determine which opinion word is target-ing which target.
We propose a rule based approachfor opinion-target pairing.
Our rules are based onthe dependency relations that connect the words ina sentence.
An opinion word and a target form apair if the dependency path between them satisfiesat least one of our dependency rules.
Table 1 illus-trates some of these rules.
The rules basically exam-ine the types of dependency relations on the shortestpath that connect the opinion word and the target inthe dependency parse tree.
It has been shown in pre-vious work on relation extraction that the shortestdependency path between any two entities capturesthe information required to assert a relationship be-tween them (Bunescu and Mooney, 2005).
If a sen-tence S in a post written by participant Pi containsan opinion word OPj and a target TRk, and if theopinion-target pair satisfies one of our dependencyrules, we say that Pi expresses an attitude towardsTRk.
The polarity of the attitude is determined bythe polarity of OPj .
We represent this as Pi+?
TRkif OPj is positive and Pi??
TRk if OPj is nega-tive.
Negation is handled in this step by reversingthe polarity if the polarized expression is part of aneg dependency relation.It is likely that the same participant Pi expressessentiment towards the same target TRk multipletimes in different sentences in different posts.
Wekeep track of the counts of all the instances of posi-tive/negative attitude Pi expresses toward TRk.
Werepresent this as Pim+??
?n?TRk where m (n) is thenumber of times Pi expressed positive (negative) at-titude toward TRk.Now, we have information about each discussantattitude.
We propose a representation of discus-santsa?ttitudes towards the identified targets in thediscussion thread.
As stated above, a target couldbe another discussant or an entity mentioned in thediscussion.
Our representation is a vector contain-ing numerical values.
The values correspond to thecounts of positive/negative attitudes expressed bythe discussant toward each of the targets.
We callthis vector the discussant attitude profile (DAP).
Weconstruct a DAP for every discussant.
Given a dis-cussion thread with d discussants and e entity tar-gets, each attitude profile vector has n = (d+ e) ?
3dimensions.
In other words, each target (discussantor entity) has three corresponding values in the DAP:1) the number of times the discussant expressed pos-itive attitude toward the target, 2) the number oftimes the discussant expressed a negative attitude to-wards the target, and 3) the number of times the thediscussant interacted with or mentioned the target.It has to be noted that these values are not symmet-135ID Rule In WordsR1 OP ?
nsubj ?
TR The target TR is the nominal subject of the opinion word OPR2 OP ?
dobj ?
TR The target T is a direct object of the opinion OPR3 OP ?
prep ?
?
TR The target TR is the object of a preposition that modifies the opinion word OPR4 TR?
amod?
OP The opinion is an adjectival modifier of the targetR5 OP ?
nsubjpass?
TR The target TR is the nominal subject of the passive opinion word OPR6 OP ?
prep ?
?
poss?
TR The opinion word OP connected through a prep ?
relation as in R2 to something pos-sessed by the target TRR7 OP ?
dobj ?
poss?
TR The target TR possesses something that is the direct object of the opinion word OPR8 OP ?
csubj ?
nsubj ?
TR The opinon word OP is a causal subject of a phrase that has the target TR as its nominalsubject.Table 1: Examples of the dependency rules used for opinion-target pairing.ric since the discussions explicitly denote the sourceand the target of each post.At this point, we have an attitude profile (or vec-tor) constructed for each discussant.
Our goal is touse these attitude profiles to determine the subgroupmembership of each discussant.
We can achieve thisgoal by noticing that the attitude profiles of discus-sants who share the same opinion are more likely tobe similar to each other than to the attitude profilesof discussants with opposing opinions.
This sug-gests that clustering the attitude vector space willachieve the goal and split the discussants into sub-groups based on their opinion.3 ImplementationThe system is fully implemented in Java.
Part-of-speech tagging, noun group identification, namedentity recognition, co-reference resolution, and de-pendency parsing are all computed using the Stan-ford Core NLP API.2 The clustering componentuses the JavaML library3 which provides implemen-tations to several clustering algorithms such as k-means, EM, FarthestFirst, and OPTICS.The system requires no installation.
It, however,requires that the Java Runtime Environment (JRE)be installed.
All the dependencies of the systemcome bundled with the system in the same package.The system works on all the standard platforms.The system has a command-line interface that2http://nlp.stanford.edu/software/corenlp.shtml3http://java-ml.sourceforge.net/provides full access to the system functionality.
Itcan be used to run the whole pipeline to detect sub-groups or any portion of the pipeline.
For example,it can be used to tag an input text with polarity or toidentify candidate targets of opinion in a given in-put.
The system behavior can be controlled by pass-ing arguments through the command line interface.For example, the user can specify which clusteringalgorithm should be used.To facilitate using the system for research pur-poses, the system comes with a clustering evaluationcomponent that uses the ClusterEvaluator package.4.If the input to the system contains subgroup labels,it can be run in the evaluation mode in which casethe system will output the scores of several differentclustering evaluation metrics such as purity, entropy,f-measure, Jaccard, and RandIndex.
The system alsohas a Java API that can be used by researchers to de-velop other systems using our code.The system can process any discussion thread thatis input to it in a specific format.
The format ofthe input and output is described in the accompa-nying documentation.
It is the user responsibilityto write a parser that converts an online discussionthread to the expected format.
However, the sys-tem package comes with two such parsers for twodifferent discussion sites: www.politicalforum.comand www.createdebate.com.The distribution also comes with three datasets4http://eniac.cs.qc.cuny.edu/andrew/v-measure/javadoc/index.html136Figure 2: A screenshot of the online demo(from three different sources) comprising a total of300 discussion threads.
The datasets are annotatedwith the subgroup labels of discussants.Finally, we created a web interface to demonstratethe system functionality.
The web interface is in-tended for demonstration purposes only.
No web-service is provided.
Figure 2 shows a screenshots ofthe web interface.
The online demo can be accessedat http://clair.eecs.umich.edu/SubgroupDetector/4 EvaluationIn this section, we give a brief summary of the sys-tem evaluation.
We evaluated the system on discus-sions comprising more than 10,000 posts in morethan 300 different topics.
Our experiments show thatthe system detects subgroups with promising accu-racy.
The average clustering purity of the detectedsubgroups in the dataset is 0.65.
The system signif-icantly outperforms baseline systems based on textclustering and discussant interaction frequency.
Ourexperiments also show that all the components in thesystem (such as co-reference resolution, noun phrasechunking, etc) contribute positively to the accuracy.5 ConclusionWe presented a demonstration of a discussion min-ing system that uses linguistic analysis techniques topredict the attitude the participants in online discus-sions forums towards one another and towards thedifferent aspects of the discussion topic.
The systemis capable of analyzing the text exchanged in dis-cussions and identifying positive and negative atti-tudes towards different targets.
Attitude predictionsare used to assign a subgroup membership to eachparticipant using clustering techniques.
The sys-tem predicts attitudes and identifies subgroups withpromising accuracy.ReferencesRazvan Bunescu and Raymond Mooney.
2005.
A short-est path dependency kernel for relation extraction.
InProceedings of Human Language Technology Confer-ence and Conference on Empirical Methods in Nat-ural Language Processing, pages 724?731, Vancou-ver, British Columbia, Canada, October.
Associationfor Computational Linguistics.Amitava Das and Sivaji Bandyopadhyay.
2011.
Dr sen-timent knows everything!
In Proceedings of the ACL-HLT 2011 System Demonstrations, pages 50?55, Port-land, Oregon, June.
Association for ComputationalLinguistics.137David Elson, Nicholas Dames, and Kathleen McKeown.2010.
Extracting social networks from literary fiction.In Proceedings of the 48th Annual Meeting of the Asso-ciation for Computational Linguistics, pages 138?147,Uppsala, Sweden, July.Andrea Esuli and Fabrizio Sebastiani.
2006.
Sentiword-net: A publicly available lexical resource for opinionmining.
In In Proceedings of the 5th Conference onLanguage Resources and Evaluation (LREC06, pages417?422.Vasileios Hatzivassiloglou and Kathleen R. McKeown.1997.
Predicting the semantic orientation of adjec-tives.
In EACL?97, pages 174?181.Niklas Jakob and Iryna Gurevych.
2010.
Using anaphoraresolution to improve opinion target identification inmovie reviews.
In Proceedings of the ACL 2010 Con-ference Short Papers, pages 263?268, Uppsala, Swe-den, July.
Association for Computational Linguistics.Aditya Joshi, Balamurali AR, Pushpak Bhattacharyya,and Rajat Mohanty.
2011.
C-feel-it: A sentiment ana-lyzer for micro-blogs.
In Proceedings of the ACL-HLT2011 System Demonstrations, pages 127?132, Port-land, Oregon, June.
Association for ComputationalLinguistics.Cheng-Te Li, Chien-Yuan Wang, Chien-Lin Tseng, andShou-De Lin.
2011.
Memetube: A sentiment-basedaudiovisual system for analyzing and displaying mi-croblog messages.
In Proceedings of the ACL-HLT2011 System Demonstrations, pages 32?37, Portland,Oregon, June.
Association for Computational Linguis-tics.Chen Lin, Jiang-Ming Yang, Rui Cai, Xin-Jing Wang,and Wei Wang.
2009.
Simultaneously modeling se-mantics and structure of threaded discussions: a sparsecoding approach and its applications.
In SIGIR ?09,pages 131?138.Andrew McCallum, Xuerui Wang, and Andre?s Corrada-Emmanuel.
2007.
Topic and role discovery in so-cial networks with experiments on enron and academicemail.
J. Artif.
Int.
Res., 30:249?272, October.Dou Shen, Qiang Yang, Jian-Tao Sun, and Zheng Chen.2006.
Thread detection in dynamic text messagestreams.
In SIGIR ?06, pages 35?42.Peter Turney and Michael Littman.
2003.
Measuringpraise and criticism: Inference of semantic orientationfrom association.
ACM Transactions on InformationSystems, 21:315?346.Theresa Wilson, Paul Hoffmann, Swapna Somasun-daran, Jason Kessler, Janyce Wiebe, Yejin Choi, ClaireCardie, Ellen Riloff, and Siddharth Patwardhan.
2005.Opinionfinder: a system for subjectivity analysis.
InHLT/EMNLP - Demo.138
