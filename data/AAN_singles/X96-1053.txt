MITRE: DESCRIPTION OF THE ALEMBIC SYSTEM AS USED IN METJohn Aberdeen, John Burger, David Day, Lynette Hirschman, David Palmer, Patricia Robinson, andMarc VilainThe MITRE Corporation202 Burlington Rd.Bedford, MA 01730{aberdeen, john, day, lynette, palmer, parann, mbv}@mitre.orgAlembic is a comprehensive information extractionsystem that has been applied to a range of tasks.These include the now-standard components of theformal MOC evaluations: name tagging (NE in MUC-6),name normalization (WE), and template generation(ST).
The system has also been exploited to helpsegment and index broadcast video and was used forearly experiments on variants of the co-referenceidentification task.
(For details, see \[1\].
)For MET, we were of course primarily concernedwith the foundational name-tagging task; manydownstream odules of the system were left unused.The punchline, as we see it, is that Alembic performedexceptionally well at all three of the MET languagesdespite having no native speakers for any of themamong its development team.
We were one of onlytwo sites that attempted all three languages, and werethe only group that exploited essentially the samebody of code for all three tasks.RULE SEQUENCESThe crux of our approach is the use of rulesequences, a processing strategy that was recentlypopularized by Eric Brill for part-of-speech tagging\[2\].
In a rule sequence processor, the object is tosequentially relabel a body of text according to anordered rule set.
The rules are evaluated in order,and each rule is allowed to run to completion onlyonce in the course of processing.
The result is aniteratively-improved labelling of the source text.
Inthe name-tagging task, for example, the processbegins with an approximate initial labelling, whosepurpose is simply to find the rough boundaries ofnames and other MET-relevant forms, such as money.This rough labelling is then improved by applying arule sequence.
Individual rules then refine the initialrough boundaries, determine the type of a phrase(person, location, etc.
), or merge fragmented phrasesinto larger units.
See Figure 1 below.The rules themselves are simple.
The two belowcome from the actual sequence for Spanish MET.
(def-phraeerlabel NONEI-word-1 lexeme " associaci6n" ...label-action ORGEX)(de'f-phraeerlabel ORGEXright-1 lexeme "de"right-2 phrase NONEbounds-action merge)Consider how these rules apply to the string"Associaci6n de Mutuales Israelitas Argentinas".First, the initial labelling breaks the string intocomponents on the basis of part-of-speech taggings:< none>Associaci6n</none> de< none>Mutuales Israelitas Argentinas</none>The first rule searches for organizational headnouns, e.g., "associaci6n" and others, and marks anymatching phrase as an organization (ORGEX in ourlocal MET dialec0.
This yields the partial relabelling:< orgex>Associaci6n<lorgex> de< none>Mutuales Israelitas Argentinas</none>The second rule applies to isolated organizationhead phrases, and merges in their complements:< orgex>Associaci6n deMutuales Israelitas Argentinas</orgex>MET-SPECIF IC  DEVELOPMENTIn the course of MET, we ported the Alembic nametagger to all three of the target languages.
We did sowith essentially no guidance from native speakers ofany of these languages.
For Spanish, two of uscollaborated to develop a rule sequence by hand; tothis task, one of us brought wo semesters of collegeSpanish, and the other brought fluency in French.With help from a good dictionary and atlas, we wereable to understand the training texts well enough tograsp their critical semantics, or as much of thesemantics as was needed for the purpose of nametagging.
For Japanese, one of us taught himself toread Kanji at a fifth-grade level, and developed aname-tagging sequence through repeated scrutiny of461?
rough boundaries ~ transformati?
f'~/rnerge boundariesJFigure 1: Brill's rule sequence architecture asapplied to phrase tagging.Final text )the training texts.
It is important o note that ourlone Japanese-MET developer had only passingunderstanding of the texts he was reading.
Thedevelopment process for him consisted largely ofKanji pattern-matching (as opposed to bona fidereading).
Finally, for Chinese, we had not even thelimited reading ability available for Japanese.
Asidefrom date and money patterns, the entirety of theChinese rule sequence was acquired through amachine learning process.Besides these rule sequences, several anguage-specific extensions were required to port Alembic toMET.
As we needed to segment Chinese and Japanesetexts into separate tokens we adapted the NEW-JUMANtagger/segmenter for Japanese, and the NMSUsegmenter for Chinese.
In addition, our Spanishsystem exploited a Spanish part-of-speech tagger thatwe had developed previously.RESULTSThe preliminary nature of the MET task precludesformulating a full assessment of our system'sperformance.
Nevertheless, we are pleased with ourearly results.
Alembic either exceeded or came nearmatching its performance on the English name-tagging task in MUC-6.
The chart in Fig.
2 shows therelative rankings of the four languages (solid barsindicate training, and shaded ones formal testing).These results show gaps between training andtesting performance, especially in the two Asianlanguages.
Part of these differences can be attributedto inconsistencies that were eventually detected in the,~pani~,h Enolieh Japaneee ChincecFigure 2: Name tagger ankings, by language.final test data.
This may account for much of theIo% training-to-testing gap in Chinese.
Indeed, on aheld-out development test set, Chinese performancewas virtually identical to that on the developmenttraining set; the learning procedure had thus acquireda very predictive model of the development dataoverall.
However, since the tagging conventions onthe formal test set were not wholly consistent withthose in the training set, the performance of themodel could only be expected to decrease in the finalevaluation.
For Japanese, a similar problem arosebecause refinements o the guidelines over the courseof MET development were not reflected in thedevelopment data set.
Since our Japanese developercould not actually read most of the Japanese material,he could only interpret changes to the guidelines inso far as they were incorporated in the training set.As the guidelines and training set drifted furtherapart, this led increasingly to the same inconsistencieswe experienced with Chinese.We should not let these error analyses obscureAlembic's achievements, however.
The systemgarnered commendable scores on all three languages,despite its developers having at best passing linguisticfluency--and in one case no language knowledge atall.
We think this success is due to several factors.First, the inherent speed of the system (25,000-30,000words per minute) enables a rapid-evaluationmethodology.
For manual engineering, this allowschanges in the model to be implemented and testedefficiently.
Second, Alembic supports the developerthrough a growing suite of tools, chief among themthe phrase rule learner.
Finally, we owe the bulk ofthe system's uccess to the underlying frameworkwith its emphasis on sequences of simple rules.REFERENCES\[1\] Aberdeen, J., Burger, J., Day, D., Hirschman, L.,Robinson, P., & Vilain, M. (I995) "MITRE: descrip-tion of the Alembic system used in MUC-6."
InSundheim, B.
(ed.
), Prcdgs.
of the Sixth Msg.Understanding Conference.
Columbia, MD.\[2\] Brill, E. 0993 ).
A corpus-based approach to languagelearning.
Doctoral Diss., Univ.
of Pennsylvania.462
