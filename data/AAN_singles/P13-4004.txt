Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 19?24,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsAnnoMarket: An Open Cloud Platform for NLPValentin Tablan, Kalina BontchevaIan Roberts, Hamish CunninghamUniversity of Sheffield,Department of Computer Science211 Portobello, Sheffield, UKInitial.Surname@dcs.shef.ac.ukMarin DimitrovOntotext AD47A Tsarigradsko Shosse, Sofia, Bulgariamarin.dimitrov@ontotext.comAbstractThis paper presents AnnoMarket, an opencloud-based platform which enables re-searchers to deploy, share, and use lan-guage processing components and re-sources, following the data-as-a-serviceand software-as-a-service paradigms.
Thefocus is on multilingual text analysis re-sources and services, based on an open-source infrastructure and compliant withrelevant NLP standards.
We demonstratehow the AnnoMarket platform can be usedto develop NLP applications with littleor no programming, to index the resultsfor enhanced browsing and search, andto evaluate performance.
Utilising Anno-Market is straightforward, since cloud in-frastructural issues are dealt with by theplatform, completely transparently to theuser: load balancing, efficient data uploadand storage, deployment on the virtual ma-chines, security, and fault tolerance.1 IntroductionFollowing the Software-as-a-Service (SaaS)paradigm from cloud computing (Dikaiakos et al2009), a number of text processing services havebeen developed, e.g.
OpenCalais1 and AlchemyAPI2.
These provide information extraction ser-vices, accessible programmatically and chargedper number of documents processed.However, they suffer from two key technicaldrawbacks.
Firstly, document-by-document pro-cessing over HTTP is inefficient on large datasetsand is also limited to within-document text pro-cessing algorithms.
Secondly, the text process-ing algorithms are pre-packaged: it is not pos-sible for researchers to extend the functional-1http://www.opencalais.com2http://www.alchemyapi.comity (e.g.
adapt such a service to recognise newkinds of entities).
Additionally, these text pro-cessing SaaS sites come with daily rate limits,in terms of number of API calls or documentsthat can be processed.
Consequently, using theseservices for research is not just limited in termsof text processing functionality offered, but alsoquickly becomes very expensive on large-scaledatasets.
A moderately-sized collection of tweets,for example, comprises small but numerous docu-ments, which can lead to unfeasibly high process-ing costs.Platform-as-a-Service (PaaS) (Dikaiakos et al2009) are a type of cloud computing service whichinsulates developers from the low-level issues ofutilising cloud infrastructures effectively, whileproviding facilities for efficient development, test-ing, and deployment of software over the Inter-net, following the SaaS model.
In the contextof traditional NLP research and development, andpre-dating cloud computing, similar needs wereaddressed through NLP infrastructures, such asGATE (Cunningham et al 2013) and UIMA (Fer-rucci and Lally, 2004).
These infrastructures ac-celerated significantly the pace of NLP research,through reusable algorithms (e.g.
rule-based pat-tern matching engines, machine learning algo-rithms), free tools for low-level NLP tasks, andsupport for multiple input and output documentformats (e.g.
XML, PDF, DOC, RDF, JSON).This demonstration introduces the AnnoMar-ket3 open, cloud-based platform, which hasbeen developed following the PaaS paradigm.It enables researchers to deploy, share, anduse language processing components and re-sources, following the Data-as-a-Service (DaaS)and Software-as-a-Service (SaaS) paradigms.
Itgives researchers access to an open, standard-compliant NLP infrastructure and enables them3At the time of writing, a beta version of AnnoMarket isavailable at http://annomarket.com19to carry out large-scale NLP experiments by har-nessing the vast, on-demand compute power ofthe Amazon cloud.
It supports not only NLP al-gorithm development and execution, but also on-demand collaborative corpus annotation and per-formance evaluation.
Important infrastructural is-sues are dealt with by the platform, completelytransparently for the researcher: load balancing,efficient data upload and storage, deployment onthe virtual machines, security, and fault tolerance.AnnoMarket differs from previous work (e.g.
(Zhou et al 2010; Ramakrishnan et al 2010))in that it requires no programming in order torun a GATE-compliant NLP application on a largedataset.
In that sense, it combines the ease ofuse of an NLP SaaS with the openness and com-prehensive facilities of the GATE NLP infras-tructure.
AnnoMarket offers a growing numberof pre-packaged services, in multiple languages.Additionally, as a specialised NLP PaaS, it alsosupports a bring-your-own-pipeline option, whichcan be built easily by reusing pre-existing GATE-compatible NLP components and adding somenew ones.
Moreover, in addition to offering entityextraction services like OpenCalais, our NLP PaaSalso supports manual corpus annotation, semanticindexing and search, and performance evaluation.The contributions of this paper are as follows:1.
A demonstration of running AnnoMarketmultilingual NLP services on large datasets,without programming.
The new servicedeployment facilities will also be shown,including how services can optionally beshared with others.2.
A demonstration on shared research corporavia the AnnoMarket platform, following thedata-as-a-service model (the sharer is respon-sible for ensuring no copyright violations).3.
A demonstration of the large-scale search andbrowsing interface, which uses the results ofthe NLP SaaS to offer enhanced, semantic-based functionality.2 The AnnoMarket NLP PaaSThis section first discusses the methodologyunderpinning the AnnoMarket platform, thenpresents its architecture and key components.2.1 Development and DeploymentMethodologyThe development of text analysis algorithms andpipelines typically follows a certain methodolog-ical pattern, or lifecycle.
A central problem isto define the NLP task, such that human anno-tators can perform it with a high level of agree-ment and to create high quality training and evalu-ation datasets.
It is common to use double or tripleannotation, where several people perform the an-notation task independently and we then measuretheir level of agreement (Inter-Annotator Agree-ment, or IAA) to quantify and control the qualityof this data (Hovy, 2010).The AnnoMarket platform was therefore de-signed to offer full methodological support for allstages of the text analysis development lifecycle:1.
Create an initial prototype of the NLPpipeline, testing on a small document collec-tion, using the desktop-based GATE user in-terface (Cunningham et al 2002);2.
If required, collect a gold-standard corpus forevaluation and/or training, using the GATETeamware collaborative corpus annotationservice (Bontcheva et al 2013), running inAnnoMarket;3.
Evaluate the performance of the automaticpipeline on the gold standard (either locallyin the GATE development environment or onthe cloud).
Return to step 1 for further devel-opment and evaluation cycles, as needed.4.
Upload the large datasets and deploy the NLPpipeline on the AnnoMarket PaaS;5.
Run the large-scale NLP experiment anddownload the results as XML or a standardlinguistic annotation format (Ide and Ro-mary, 2004).
AnnoMarket al offers scal-able semantic indexing and search over thelinguistic annotations and document content.6.
Analyse any errors, and if required, iterateagain over the earlier steps.AnnoMarket is fully compatible with the GATEopen-source architecture (Cunningham et al2002), in order to benefit from GATE?s numerousreusable and multilingual text processing compo-nents, and also from its infrastructural support forlinguistic standards and diverse input formats.2.2 ArchitectureThe architecture of the AnnoMarket PaaS com-prises of four layers (see Figure 1), combining20Figure 1: The AnnoMarket Architecturecomponents with related capabilities.
Addition-ally, we have identified three aspects, which spanacross multiple layers.The Data Layer is described in Section 2.3, thePlatform Layer ?
in Section 2.4, and the Annota-tion Services ?
in Section 2.5.The fourth, web user interface layer, contains anumber of UI components that allow researchersto use the AnnoMarket platform in various ways,e.g.
to run an already deployed text annotation ser-vice on a large dataset, to deploy and share a newservice on the platform, or to upload (and option-ally share) a document collection (i.e.
a corpus).There is also support for finding relevant services,deployed on the AnnoMarket platform.
Lastly,due to the platform running on the Amazon cloudinfrastructure, there are account management in-terfaces, including billing information, payments,and usage reports.The first vertical aspect is cloud deployment onAmazon.
This covers support for automatic up anddown-scaling of the allocated Amazon resources,detection of and recovery from Amazon infras-tructure failures and network failures, and databackup.Usage monitoring and billing is the secondkey vertical aspect, since fine-grained pay-as-you-go ability is essential.
Even in the case offreely-available annotations services, Amazon us-age charges are incurred and thus such function-ality is needed.
Various usage metrics are mon-itored and metered so that proper billing can beguaranteed, including: storage space required bylanguage resources and data sets; CPU utilisationof the annotation services; number and size of doc-uments processed.Security aspects also have impact on all the lay-ers of the AnnoMarket platform:?
Data Layer ?
data encryption and access con-trol;?
Platform Layer ?
data encryption, authentica-tion and access control;?
Service layer ?
authentication and transportlevel encryption;?
User Interface layer ?
authentication andtransport level encryption.In addition, we have implemented a REST pro-gramming API for AnnoMarket, so that data up-load and download and running of annotation ser-vices can all be done automatically, outside ofthe web interface.
This allows tighter integrationwithin other applications, as well as support forsynchronous (i.e.
document-by-document) callingof the annotation services.2.3 The Data LayerThe Data Layer stores various kinds of content,e.g.
crawled web content, users?
own corpora (pri-vate or shared with others), results from runningthe annotation services, etc.Input documents can be in all major formats(e.g., XML, HTML, JSON, PDF, DOC), basedon GATE?s comprehensive format support.
In allcases, when a document is being processed by An-noMarket, the format is analysed and convertedinto a single unified, graph-based model of an-notation: the one of the GATE NLP framework(Cunningham et al 2002).
Then this internal an-notation format is also used by the collaborativecorpus annotation web tool, and for annotation in-dexing and search.
Annotations produced can beexported as in-line or stand-off XML, includingXCES (Ide and Romary, 2004).In implementation terms, Amazon S3 is used tostore content on the platform.
S3 provides a RESTservice for content access, as well as direct HTTPaccess, which provides an easy way for AnnoMar-ket users to upload and download content.While stored on the cloud, data is protected byAmazon?s security procedures.
All transfers be-tween the cloud storage, the annotation services,and the user?s computer are done via an encryptedchannel, using SSL.2.4 The Platform LayerThe AnnoMarket platform provides an environ-ment where text processing applications can be de-ployed as annotation services on the cloud.
It al-lows processing pipelines that were produced on a21Figure 2: Web-based Job Editordeveloper?s stand-alone computer to be deployedseamlessly on distributed hardware resources (thecompute cloud) with the aim of processing largeamounts of data in a timely fashion.
This processneeds to be resilient in the face of failures at thelevel of the cloud infrastructure, the network com-munication, errors in the processing pipeline andin the input data.The platform layer determines the optimal num-ber of virtual machines for running a given NLPapplication, given the size of the document collec-tion to be processed and taking into account theoverhead in starting up new virtual machines ondemand.
The implementation is designed to be ro-bust in the face of hardware failures and process-ing errors.
For technical details on the way thiswas implemented on Amazon EC2 see (Tablan etal., 2013).The GATE plugin-based architecture (Cunning-ham et al 2002) is the basis for the platform en-vironment.
Users can upload any pipelines com-pliant with the GATE Processing Resource (PR)model and these are automatically deployed as an-notation services on the AnnoMarket platform.2.5 Annotation ServicesAs discussed above, the platform layer in An-noMarket addresses most of the technical andmethodological requirements towards the NLPPaaS, making the deployment, execution, andsharing of annotation services (i.e.
pipelines andalgorithms) a straightforward task.
From a re-searcher?s perspective, executing an annotationservice on a dataset involves a few simple steps:?
Upload the document collection to be pro-cessed or point the system to a shared dataseton the platform;?
Upload a GATE-based processing pipeline tobe used (or choose an already deployed anno-tation service);?
Set any required parameter values;?
Press the ?Start?
button.While the job is running, a regularly updatedexecution log is made available in the user?s dash-board.
Upon job completion, an email notificationis also sent.
Most of the implementation details arehidden away from the user, who interacts with thesystem through a web-based job editor, depictedin Figure 2, or through a REST API.The number of already deployed annotation ser-vices on the platform is growing continuously.Figure 3 shows a subset of them, as well as themetadata tags associated with these services, sothat users can quickly restrict which types of ser-vices they are after and then be shown only therelevant subset.
At the time of writing, there areservices of the following kinds:?
Part-of-Speech-Taggers for English, German,Dutch, and Hungarian.?
Chunking: the GATE NP and VP chunkersand the OpenNLP ones;?
Parsing: currently the Stanford Parser 4, butmore are under integration;?
Stemming in 15 languages, via the Snowballstemmer;?
Named Entity Recognition: in English, Ger-man, French, Arabic, Dutch, Romanian, andBulgarian;?
Biomedical taggers: the PennBio5 and theAbGene (Tanabe and Wilbur, 2002) taggers;?
Twitter-specific NLP: language detection, to-kenisation, normalisation, POS tagging, and4http://nlp.stanford.edu/software/lex-parser.shtml5http://www.seas.upenn.edu/?strctlrn/BioTagger/BioTagger.html22Figure 3: Pre-deployed Text Annotation ServicesFigure 4: Creating a New Annotation ServiceNER.The deployment of new annotation services isdone via a web interface (see Figure 4), where anadministrator needs to configure some basic de-tails related to the utilisation of the platform layerand provide a self-contained GATE-compatibleapplication.
Platform users can only publish theirown annotation services by contacting an adminis-trator, who can validate the provided pipeline be-fore making it publicly available to the other users.This step is intended to protect the users commu-nity from malicious or poor quality pipelines.3 Search and Browsing of AnnotatedCorporaThe AnnoMarket platform also includes a servicefor indexing and searching over a collection of se-mantically annotated documents.
The output of anannotation service (see Figure 2) can be fed di-rectly into a search index, which is created as theservice is run on the documents.
This provides fa-cilities for searching over different views of doc-ument text, for example one can search the docu-ment?s words, the part-of-speech of those words,or their morphological roots.
As well as searchingthe document text, we also support searches overthe documents?
semantic annotations, e.g.
namedentity types or semantic roles.Figure 5 shows a semantic search over 80,000news web pages from the BBC.
They havefirst been pre-processed with the POS tagging,morphological analysis, and NER services onthe platform and the output indexed automat-ically.
The search query is for documents,where entities of type Person are followed byany morphological form of the verb say, i.e.
{Person} root:say.4 ConclusionThis paper described a cloud-based open platformfor text mining, which aims to assist the develop-ment and deployment of robust, large-scale textprocessing applications.
By supporting the shar-ing of annotation pipelines, AnnoMarket al pro-23Figure 5: Example Semantic Search Resultsmotes reuse and repeatability of experiments.As the number of annotation services offered bythe platform has grown, we identified a need forservice search, so that users can locate useful NLPservices more effectively.
We are currently devel-oping a new UI, which offers search and brows-ing functionality, alongside various criteria, suchas functionality (e.g.
POS tagger, named entityrecogniser), user ratings, natural language sup-ported).
In the medium- to long-term we havealso planned to support UIMA-based pipelines,via GATE?s UIMA compatibility layer.A beta version is currently open to researchersfor experimentation.
Within the next six monthswe plan to to solicit more shared annotationpipelines to be deployed on the platform by otherresearchers.AcknowledgmentsThis work was supported by the European Unionunder grant agreement No.
296322 AnnoMarket,6and a UK EPSRC grant No.
EP/I004327/1.ReferencesKalina Bontcheva, Hamish Cunningham, Ian Roberts,Angus.
Roberts, Valentin.
Tablan, Niraj Aswani, andGenevieve Gorrell.
2013.
GATE Teamware: AWeb-based, Collaborative Text Annotation Frame-work.
Language Resources and Evaluation.Hamish Cunningham, Diana Maynard, KalinaBontcheva, and Valentin Tablan.
2002.
Gate: anarchitecture for development of robust hlt applica-tions.
In Proceedings of the 40th Annual Meetingon Association for Computational Linguistics, 7?12July 2002, ACL ?02, pages 168?175, Strouds-burg, PA, USA.
Association for ComputationalLinguistics.Hamish Cunningham, Valentin Tablan, Angus Roberts,and Kalina Bontcheva.
2013.
Getting more out ofbiomedical documents with gate?s full lifecycle open6See http://www.annomarket.eu/.source text analytics.
PLoS Computational Biology,9(2):e1002854, 02.Marios D Dikaiakos, Dimitrios Katsaros, PankajMehra, George Pallis, and Athena Vakali.
2009.Cloud computing: Distributed internet computingfor IT and scientific research.
IEEE Internet Com-puting, 13(5):10?13.David Ferrucci and Adam Lally.
2004.
UIMA: AnArchitectural Approach to Unstructured InformationProcessing in the Corporate Research Environment.Natural Language Engineering, 10(3-4):327?348.Eduard Hovy.
2010.
Annotation.
In Tutorial Abstractsof ACL.Nancy Ide and Laurent Romary.
2004.
Standards forlanguage resources.
Natural Language Engineer-ing, 10:211?225.C.
Ramakrishnan, W. A. Baumgartner, J.
A. Blake,G.
A. P. C. Burns, K. Bretonnel Cohen, H. Drabkin,J.
Eppig, E. Hovy, C. N. Hsu, L. E. Hunter, T. Ingulf-sen, H. R. Onda, S. Pokkunuri, E. Riloff, C. Roeder,and K. Verspoor.
2010.
Building the scientificknowledge mine (SciKnowMine): a community-driven framework for text mining tools in direct ser-vice to biocuration.
In New Challenges for NLPFrameworks (NLPFrameworks 2010), LREC 2010,pages 9?14, Valletta, Malta, May.
ELRA.Valentin Tablan, Ian Roberts, Hamish Cunningham,and Kalina Bontcheva.
2013.
GATECloud.net: aPlatform for Large-Scale, Open-Source Text Pro-cessing on the Cloud.
Philosophical Transactionsof the Royal Society A: Mathematical, Physical &Engineering Sciences, 371(1983):20120071.Lorraine Tanabe and W. John Wilbur.
2002.
Tag-ging Gene and Protein Names in Full Text Articles.In Proceedings of the ACL-02 workshop on NaturalLanguage Processing in the biomedical domain, 7?12 July 2002, volume 3, pages 9?13, Philadelphia,PA.
Association for Computational Linguistics.Bin Zhou, Yan Jia, Chunyang Liu, and Xu Zhang.2010.
A distributed text mining system for onlineweb textual data analysis.
In Cyber-Enabled Dis-tributed Computing and Knowledge Discovery (Cy-berC), 2010 International Conference on, pages 1?4, Los Alamitos, CA, USA, October.
IEEE Com-puter Society.24
