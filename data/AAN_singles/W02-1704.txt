XML/XSL in the Dictionary: The Case of Discourse MarkersDaniela Berger and David Reitter and Manfred StedeUniversity of PotsdamDept.
of Linguistics / Applied Computational LinguisticsP.O.
Box 601553 / D-14415 Potsdam / Germany{berger|reitter|stede}@ling.uni-potsdam.deAbstractWe describe our ongoing work on an applicationof XML/XSL technology to a dictionary, fromwhose source representation various views forthe human reader as well as for automatic textgeneration and understanding are derived.
Ourcase study is a dictionary of discourse markers,the words (often, but not always, conjunctions)that signal the presence of a disocurse relationbetween adjacent spans of text.1 OverviewElectronic dictionaries have made extensive useof SGML encoding in the past, but to ourknowledge, the advantages of contemporaryframeworks such as XML/XSL are only be-ginning to be explored.
We are applying thisframework to our work on a lexicon of ?dis-course markers?
and will outline the advantagesof deriving a variety of views from the commonunderlying lexical resource: different views fordifferent demands by the human eye, but alsoapplication-specific views that tailor the dictio-nary to either the parsing or the generation task(a third one would be machine translation butis not covered in this paper), and that respectthe conventions of the specific underlying pro-gramming language.
Using XSL style sheets forproducing the views automatically is especiallyuseful when the lexicon is still under develop-ment: the ramifications of particular modifica-tions or extensions can be made visible easilyby running the conversion and testing the ap-plications in question.Discourse markers are words (predominantlyconjunctions) that signal the kind of semantic orrhetorical relationship between adjacent spansof text.
In text generation, when given a rep-resentation of propositions and relations hold-ing between them, the task is to select an ap-propriate discourse marker in the context.
Intext understanding, discourse markers are themost important clues for inferring the ?rhetori-cal structure?
of the text, a task that has latelybeen called ?rhetorical parsing?.
While thesediscourse markers are a somewhat idiosyncraticclass of lexical items, we believe that our generalapproach to applying XML/XSL can be fruitfulto other branches of the dictionary as well (inparticular to the open-class ?content words?
).After reviewing some earlier work on XML-based dictionaries (Section 2) and discussing thenotion of discourse markers (Section 3), we pro-ceed to outline the particular requirements ona discourse marker lexicon from both the textgeneration and the text understanding perspec-tive (Section 4).
Then, Section 5 describes ourXML/XSL encoding of the source lexicon andthe views for the human eye, for automatic textgeneration, and for text understanding.
Finally,Section 6 draws some conclusions.2 Dictionaries and XML: RelatedworkRecent research in lexicology has been focusedon two different goals: the mark-up processfor existing print dictionaries, and the success-ful construction of machine-readable dictionar-ies from scratch.The first approach has received more at-tention in the past.
This is partly due tothe fact that the transformation of existingprint dictionaries into modules for NLP applica-tions promises to be less time-consuming thanthe construction of a new machine-readabledatabase.
Lexicologists agree on the fact that adictionary entry is inherently hierarchical, i.e.,it consists out of atomic elements grouped to-gether within non-atomic elements in a tree-likehierarchy.
Many approaches place orthograph-ical and phonological information together inone group, while grammatical information is putin a different group.
This hierarchical approachalso allows to denote scope by inserting informa-tion at different levels of the hierarchy.
Again,information about orthography and phonologygenerally applies to every facet of the headwordand are thus placed high in the hierarchy, whileother information might only apply to singledefinitions and thus ranks lower hierarchically(Amsler/Tompa, 1988; Ide, Ve?ronis, 1995; Ideet al, 2000).A common problem of lexicologists workingwith print dictionaries is the fact that there isa certain variation between entries in any twogiven dictionaries or even within the same dic-tionary.
This results in a neccessary trade-offbetween the descriptive power and the gener-ality of an approach, i.e.
to design a SGMLapplication that is both descriptive enough tobe of practical value and general enough to ac-comodate the variation.There has been, on the other hand, only littleresearch on machine-readable dictionaries thatare not based on print dictionaries.
To ourknowledge, only (Ide et al, 1993) deals withthis issue by reviewing several approaches to-wards encoding machine-readable dictionaries.One of these is the use of text models that ap-ply a rather flat hierarchy to mark up dictio-nary entries.
These text models might chieflyuse typographical or grammatical information.Another approach is using relational databases,in which the information contained in a dictio-nary entry is distributed over several databases.A third approach is based on feature structuresthat impose a rich hierarchical structure on thedata.
The authors finally describe an exampleapplication that uses feature structures encodedin SGML to set up a machine-readable dictio-nary.The papers mentioned above agree on us-ing SGML for the mark-up.
We found thattheir SGML code is, however, in general XML-compliant.3 Discourse markersSeveral contemporary discourse theories positthat important aspects of a text?s coherencecan be formally described (and represented) bymeans of discourse relations holding betweenadjacent spans of text (e.g.
Asher, 1993; Mann,Thompson, 1988).
We use the term discoursemarker for those lexical items that (in additionto non-lexical means such as punctuation, as-pectual and focus shifts, etc.)
can signal thepresence of such a relation at the linguistic sur-face.
Typically, a discourse relation is associ-ated with a wide range of such markers; con-sider, for instance, the following variety of Con-cessions, which all express the same underly-ing propositional content.
The words that wetreat as discourse markers are underlined.We were in SoHo; {nevertheless | nonetheless| however | still | yet}, we found a cheap bar.We were in SoHo, but we found a cheap baranyway.Despite the fact that we were in SoHo, wefound a cheap bar.Notwithstanding the fact that we were inSoHo, we found a cheap bar.Although we were in SoHo, we found a cheapbar.If one accepts these sentences as paraphrases,then the various discourse markers all need tobe associated with the information that theysignal a concessive relationship between the twopropositions involved.
Notice that the markersbelong to different syntactic categories and thusimpose quite different syntactic constraints ontheir environment in the sentence.
Discoursemarkers do not form a homogeneous class fromthe syntactican?s viewpoint, but from a func-tional perspective they should nonetheless betreated as alternatives in a paradigmatic choice.A detailled characterization of discoursemarkers, together with a test procedure foridentifying them in text, has been provided forEnglish by (Knott, 1996).
Recently, (Grote, toappear) adapted Knott?s procedure for the Ger-man language.
Very briefly, to identify a dis-course marker (e.g., because) in a text, isolatethe clause containing a candidate from the text,resolve any anaphors and make elided items ex-plicit; if the resulting text is incomplete (e.g.,because the woman bought a Macintosh), thenthe candidate is indeed a ?relational phrase?, orfor our purposes, a two-place discourse marker.In addition to the syntactic features, the dif-ferences in meaning and style between similarmarkers need to be discerned; one such differ-ence is the degree of specificity: for example,but can mark a general Contrast or a morespecific Concession.
Another one is the no-table difference in formality between, say but ...anyway and notwithstanding.From the perspective of text generation, notall paraphrases listed above are equally felici-tous in specific contexts.
In order to choosethe most appropriate variant, a generator needsknowledge about the fine-grained differences be-tween similar markers for the same relation.Furthermore, it needs to account for the interac-tions between marker choice and other genera-tion decisions and hence needs knowledge aboutthe syntagmatic constraints associated with dif-ferent markers.
We will discuss this perspectivein Section 4.1From the perspective of text understanding,discourse markers can be used as one source ofinformation for guessing the rhetorical structureof a text, or automatic rhetorical parsing.
Wewill characterize this application in Section 4.2.4 Requirements on a discoursemarker lexiconAs the following two subsections will show, textgeneration and understanding have quite dif-ferent preferences on the information coded ina discourse marker lexicon, or ?DiMLex?
forshort.
In addition, different systems employ dif-ferent programming languages, and the formatof the lexicon has to be adapted accordingly.Yet we want to avoid coding different lexiconsmanually and thus seek a common ?core rep-resentation?
for DiMLex from which the var-ious application-specific instantiations can bederived.
Before proposing such a representa-tion, though, we have to examine in more detailthe different requirements.4.1 The text generation perspectivePresent text generation systems are typicallynot very good at choosing discourse mark-ers.
Even though a few systems have incor-porated some more sophisticated mappings forspecific relations (e.g., in DRAFTER (Paris etal., 1995)), there is still a general tendency totreat discourse marker selection as a task tobe performed as a ?side effect?
by the gram-mar, much like for other function words such asprepositions.To improve this situation, we propose to viewdiscourse marker selection as one subtask of thegeneral lexical choice process, so that ?
to con-tinue the example given above ?
one or anotherform of Concession can be produced in thelight of the specific utterance parameters andthe context.
Obviously, marker selection alsoincludes the decision whether to use any markerat all or leave the relation implicit.
When thesedecisions can be systematically controlled, thetext can be tailored much better to the specificgoals of the generation process.The generation task imposes a particular viewof the information coded in DiMLex: the en-try point to the lexicon is the discourse relationto be realized, and the lookup yields the rangeof alternatives.
But many markers have moresemantic and pragmatic constraints associatedwith them, which have to be verified in the gen-erator?s input representation for the marker tobe a candidate.
Then, discourse markers place(predominantly syntactic) constraints on theirimmediate context, which affects the interac-tions between marker choice and other realiza-tion decisions.
And finally, markers that are stillequivalent after evaluating these constraints aresubject to a choice process that can utilize pref-erential (e.g.
stylistic or length-based) criteria.Therefore, under the generation view, the infor-mation in DiMLex is grouped into the followingthree classes:?
Applicability conditions: The necessaryconditions for using a discourse marker, i.e., thefeatures or structural configurations that needto be present in the input specification.?
Syntagmatic constraints: The constraintsregarding the combination of a marker and theneighbouring constituents; most of them aresyntactic and appear at the beginning of the listgiven above (part of speech, linear order, etc.).?
Paradigmatic features: Features that labelthe differences between similar markers sharingthe same applicability conditions, such as stylis-tic features and degrees of emphasis.Very briefly, we see discourse marker choiceas one aspect of the sentence planning task(e.g.
(Wanner, Hovy, 1996)).
In order toaccount for the intricate interactions betweenmarker choice and other generation decisions,the idea is to employ DiMLex as a declara-tive resource supporting the sentence planningprocess, which comprises determining sentenceboundaries and sentence structure, linear order-ing of constituents (e.g.
thematizations), andlexical choice.
All these decisions are heavilyinterdependent, and in order to produce trulyadequate text, the various realization optionsneed to be weighted against each other (in con-trast to a simple, fixed sequence of making thetypes of decisions), which presupposes a flexiblecomputational mechanism based on resourcesas declarative as possible.
This generation ap-proach is described in more detail in (Grote,Stede, 1998).4.2 The text understanding perspectiveIn text understanding, discourse markers serveas cues for inferring the rhetorical or semanticstructure of the text.
In the approach proposedin (Marcu, 1997), for example, the presence ofdiscourse markers is used to hypothesize indi-vidual textual units and relations holding be-tween them.
Then, the overall discourse struc-ture tree is built using constraint satisfactiontechniques.
Our analysis method uses the lexi-con for an initial identification and disambigua-tion of discourse markers.
They serve as oneof several other shallow features that determinethrough a statistical, learned language modelthe optimal rhetorical analysis.In contrast to the use of markers in genera-tion, the list of cues is significantly longer andincludes phrasal items like aus diesem Grund(for this reason) or genauer genommen (moreprecisely).5 Our XML/XSL solutionIn the following we show some sample represen-tations and style sheets that have been abridgedfor presentation purposes.5.1 Source representationIn our hierarchical XML structure, the<dictionary> root tag encloses the entire file,and every single entry rests in an <entry>tag, which unambigously identifies every entrywith its id attribute.
Within the <entry> tagthere are four subordinate tags: <form>, <syn>,<sem>, and <examples>.The <form> tag contains the orthographicform of the headword; at present this amountsto two slots for alternative orthographies.
The<syn> area contains the syntactic informationabout the headword.
In this shortened exam-ple, there is only the <init field> tag present,<?xml version="1.0" ?><?xml-stylesheet type="text/xsl"href="short_dictionary.xsl" ?><!DOCTYPE dictionary SYSTEM "DTD.dtd">5 <dictionary><entry id="05"><form><orth>denn</orth><alt_orth>none</alt_orth>10 <!-- .
.
.
--></form><syn><init_field>-</init_field><!-- .
.
.
-->15 </syn><sem><function>causal</function><!-- .
.
.
--></sem>20 <examples><example>Das Konzert muss ausfallen,*denn* die S&auml;ngerin ist erkrankt.</example><example>Die Blumen auf dem Balkon sind25 erfroren, *denn* es hat heute nachtFrost gegeben.</example></examples></entry><entry>30 <!-- more entries --></entry></dictionary>Figure 1: The XML structurewhich shows whether the headword can be usedin the initial field of a sentence.
Correspond-ingly, <sem> contains semantic features such asthe <function> tag, which contains the seman-tic/discourse relation expressed by the head-word.
Finally, <examples>, contains one ormore <example> tags that may each give an ex-ample sentence.We have shortened this presentation consider-ably; the full lexicon contains more fine-grainedfeatures for all three areas: within <form>, in-formation on pronounciation, syllable structure,and hyphenation; within <syn>, informationabout syntactic subcategorization and possiblepositions in the clause; within <sem>, for exam-ple the feature whether the information subor-dinated by the marker is presupposed or not.5.2 HTML viewsThe listing in Figure 4 shows a style sheet thatprovides an HTML by listing the XML data ina format that roughly resembles a print dictio-nary.
Figure 2 shows the output that resultsfrom applying this XSL file to the XML sourcein figure 1.05: dennOccurrences: middle field / NullstelleSemantics: kausalRelated markers: weil daExamples: Das Konzert muss ausfallen, *denn* dieSa?ngerin ist erkrankt.Die Blumen auf dem Balkon sind erfroren, *denn* es hatheute nacht Frost gegeben.Figure 2: One HTML view of the dataWe assume that the general structure of theformatting part of XSL is familiar to the reader.We would like to highlight some details.XLINK is used to ensure that the entry con-tains an HTML-anchor named after the head-word (ll.
14-20).
This way it is possible to linkto a certain entry from the <rel> tag of a dif-ferent entry (39-45).We also employ the XSL equivalent toan if/then/else construct (24-31).
The<xsl:choose> tag encloses the choices to bemade.
The <xsl:when> tag contains the con-dition match=".
[alt orth=?none?]"
that doesnothing if the <alt orth> tag contains thedata none.
Every other case is covered bythe <xsl:otherwise> tag that prints out the<alt orth> information if it is not no entry.Entry alt orth init field mid field .
.
.denn none - + .
.
.da none + + .
.
.zumal none - - .
.
.weil none - - .
.
.als none - - .
.
.Figure 3: Another possible HTML view of thedataFigure 3 shows another possible view for thedata.
In this case the data is presented in tableform, ordered by the value of the mid field tag.It would be easy to show that it is possible touse a <xsl:choose> construct as shown in theexample before to print out only those entriesthat satisfy a certain condition.5.3 The text generation viewFor the lexicon to be applied in our textgeneration system ?Polibox?
(Stede, 2002),we need a Lisp-based version of DiM-Lex.
Using the (defstruct <name> <slot1><?xml version="1.0"?><xsl:stylesheetxmlns:xsl="http://www.w3.org/1999/XSL/Transform">5 <xsl:template match="/"><FONT SIZE="-2"><xsl:apply-templates/></FONT></xsl:template>10 <xsl:template match="dictionary"><xsl:apply-templates/></xsl:template><xsl:template match="entry"><P><font size="2"><B><A>15 <xsl:attribute name="NAME"><xsl:value-of select="form/orth"/></xsl:attribute><xsl:value-of select="./@id"/>:<xsl:value-of select="form/orth"/>20 </A></b></font><xsl:apply-templates/></P></xsl:template><xsl:template match="form"><xsl:choose>25 <xsl:when match=".[alt_orth=?none?
]"></xsl:when><xsl:otherwise><BR/><B>Alternative orthography:</B><xsl:value-of select="alt_orth"/>30 </xsl:otherwise></xsl:choose></xsl:template><xsl:template match="sem"><BR/><B>Semantics:</B>35 <xsl:value-of select="ko_sub"/>/ <xsl:value-of select="function"/><br/><b>Related markers:</b><xsl:for-each select="rel"><A><xsl:attribute name="HREF">40 #<xsl:value-of select=".
"/></xsl:attribute><xsl:value-of select=".
"/></A></xsl:for-each></xsl:template>45 <xsl:template match="syn"><BR/><B>Occurrences:</B><xsl:choose><xsl:when match=".[init\_field=?-?
]"></xsl:when>50 <xsl:otherwise>initial field /</xsl:otherwise></xsl:choose></xsl:template>55 <xsl:template match="examples"><BR/><B>Examples:</B><xsl:for-each select="example"><xsl:value-of select=".
"/><BR/></xsl:for-each>60 </xsl:template></xsl:stylesheet>Figure 4: The XSL file for the HTML viewshown in Figure 2.. <slotn>) construct, we define a class of ob-jects for discourse markers, where the featuresneeded for generation are stored in the slots.Again, we abbreviate slightly:(defstruct DiscMarkerRelation N-Complexity S-ComplexityOrtho POS ...
Style)Now, a Lisp-object for each individual dis-course marker entry is created with the func-tion make-Discmarker, which provides the val-ues for the slots.
Figure 5 shows the shape of theentry for denn, whose XML-source was given infigure 1.Again, we aim at deriving these entries au-tomatically via an XSL sheet (which we do notshow here).
Notice that the mapping task isnow somewhat different from the HTML cases,since the transformation part of XSL (XSLT)comes into play here.
Instead of merely display-ing the data in a web browser as in the examplesbefore, an XSLT processor may transform datafor use in some XML based client application.As explained in Section 4.1, in the generationscenario we are given a tree fragment consist-ing of a discourse relation node and two daugh-ters representing the related material, the nu-cleus and the satellite of the relation.
In orderto decide whether a particular marker can beused, one important constraint is the ?size?
ofthe daughter material, which can be a singleproposition or an entire sub-tree.
The gener-ator needs to estimate whether it will fit intoa single phrase, clause, sentence, or into a se-quence of sentences; a subordinating conjunc-tion, for instance, can only be used if the ma-terial can be expressed within a clause.
Thus,the Lisp-entry contains slots N-Complexity andS-Complexity, which are highly application-specific and thus do not have a simple corre-sponding feature in the XML source represen-tation of the dictionary.
The XSL sheet thusinspects certain combinations of daughter at-tributes of <syn> and maps them to new namesfor the fillers of the two Complexity slots inthe Lisp structure.
(Similar mappings occur inother places as well, which we do not show here.
)5.4 The text understanding viewOur analysis method recasts rhetorical parsingas a set of classification decisions, where a pars-(make-Discmarker:Relation cause:N-Complexity sent:S-Complexity sent5 :Ortho denn:POS coordconj:Style unmarked)Figure 5: Lisp-version of generation-orienteddictionary entry for denn (abridged)ing framework builds a tree structured analy-sis.
Each of the decisions is based on a set offeatures.
Feature types range from syntacticalconfiguration to the presence of a certain dis-course marker.
The mapping from a pattern ofobserved features to a rhetorical relation may belearned automatically by a classification learn-ing algorithm.Learning and analysis applications use a pars-ing framework that gives us a set of text spanpairs.
Every two text spans are subject to aclassification learning algorithm (during train-ing) or the actual classifier.
So, a rhetorical rela-tion is assigned to these two spans of text alongwith a score so that the parsing framework maydecide which of several competing classificationsto accept.Learning and actual rhetorical analysis areaccomplished by a set of distinct tools that addspecific annotations to a given input text, be-fore resulting relations are learned or guessed.These tools include a data mining component, apart-of-speech tagger and a segmenter.
They allaccess data organized in an XML syntax.
Thecentral learning and parsing application makesuse of a Document Object Model (DOM) repre-sentation of the corpus.
This data structure iseffectively used for information interchange be-tween several components, because it allows usto easily visualize and modify the current dataat each processing step during development.With the present corpus data, the learning al-gorithm is theoretically able to identify rhetori-cal markers automatically and could thus com-pile a marker lexicon.
However, markers arehighly ambiguous.
Even though many of themcan be tagged as adverbials or conjunctions,markers often lack distinctive syntactic and/orpositional properties; some of them are phrasal,some are discontinuous.
To identify significantcue - relation correlations, a lot of annotateddata is necessary: more than is usually avail-able.
In a sparse data situation, we want toeasen the learning task for the rhetorical lan-guage model: It makes sense to use a discoursemarker lexicon.On the other hand, we do not expect a hand-crafted lexicon to contain all contextual con-straints that would enable us to assign a sin-gle rhetorical relation.
These constraints can bevery subtle; some of them should be representedas probabilistic scalar information.Thus, DiMLex contributes to initial dis-course marker disambiguation.
From each en-try, we interpret syntactic positioning informa-tion, morphosyntactic contextual informationand a scope class (sentential, phrasal, discourse-level) as a conjunction of constraints.
The pres-ence of a certain discourse marker in a specifiedconfiguration is one of the features to be ob-served in the text.Depending on the depth of the syntactic andsemantic analysis carried out by the text un-derstanding system, different features providedby DiMLex can be taken into account.
Certainstructural configurations can be tested with-out any deep understanding; for instance, theGerman marker wa?hrend is generally ambigu-ous between a Contrast and a Temporal-Cooccurrence reading, but when followed bya noun phrase, only the latter reading is avail-able (wa?hrend corresponds not only to the En-glish while but also to during).In the parsing client application, DiMLexserves as resource for the identification of cuephrases in specific structural configurations.Rhetorical information from the DiMLex entriesmay serve as one of several cues for the classi-fication engine.
The final linking from cue pat-terns to rhetorical relations is learned from acorpus annotated with rhetorical structures.6 SummaryWe have presented our ongoing work on con-structing an XML-based dictionary of discoursemarkers, from which a variety of views are de-rived by XSL sheets: For the dictionary de-signer or application developer, we present thedictionary in tabular form or in a form resem-bling print dictionaries, but with hyperlinks in-cluded for easy cross-referencing.
Similarly, textgeneration and understanding systems are onthe one hand written in different programminglanguages and thus expect different dictionaryformats; on the other hand, the informationneeded for generation and parsing is also notidentical, which is accounted for by the XSLsheets.
Evaluation of the approach will dependon the client applications.
Their implementa-tion will determine the final shape of DiMLex.ReferencesR.A.
Amsler and F.W.
Tompa, ?An SGML-Based Standard for English Monolingual Dic-tionaries.?
In: Information in Text: FourthAnnual Conference of the UW Center for theNew Oxford English Dictionary, University ofWaterloo Center for the New Oxford EnglishDictionary, Waterloo, Ontario, 1988, pp.
61-79.N.
Asher.
Reference to Abstract Objects in Dis-course.
Dordrecht: Kluwer, 1993.B.
Grote, M. Stede.
?Discourse marker choicein sentence planning.?
In: Proceedings ofthe Ninth International Workshop on NaturalLanguage Generation, Niagara-on-the-Lake,Canada, 1998.B.
Grote.
?Signalling coherence relations: tem-poral markers and their role in text genera-tion.?
Doctoral dissertation, Universita?t Bre-men, forthcoming.N.
M. Ide, J.
Le Maitre, and J.
Ve?ronis, ?Out-line of a Model for Lexical Databases.?
In-formation Processing and Management, 29, 2(1993), 159-186.N.
M. Ide and J.
Ve?ronis.
Encoding Dictionar-ies.Computers and the Humanities, 29:167-180, 1995N.
M. Ide, Kilgarriff, A., and Romary, L.A For-mal Model of Dictionary Structure and Con-tent.
In Proceedings of EURALEX 2000, pp.113-126, Stuttgart.A.
Knott.
?A data-driven methodology for mo-tivating a set of coherence relations.?
Doc-toral dissertation, University of Edinburgh,1996.W.
Mann, S. Thompson.
?Rhetorical structuretheory: Towards a functional theory of textorganization.?
In: TEXT, 8:243-281, 1988.D.
Marcu.
?The Rhetorical Parsing of Un-restricted Natural Language Texts.
?Proceedings of the Thirty-Fifth AnnualMeeting of the Association for Computa-tional Linguistics and Eighth Conference ofthe European Chapter of the Association forComputational Linguistics, Somerset, NewJersey, 1997.C.
Paris, K. Van der Linden, M. Fischer, A.Hartley, L. Pemberton, R. Power and D.R.Scott, ?Drafter: A Drafting Tool for Produc-ing Multilingual Instructions?, Proceedings ofthe 5th European Workshop on Natural Lan-guage Generation, pp.
239-242, Leiden, theNetherlands, 1995.M.
Stede.
?Polibox: Generating, descriptions,comparisons, and recommendations from adatabase.?
In Proceedings of COLING-2002.L.
Wanner, E. Hovy.
?The HealthDoc SentencePlanner.?
Proceedings of the 8th Interna-tional Workshop on Natural Language Gen-eration, Hearstmonceux Castle, 1996.Web ReferencesDomain Object ModelW3C Recommendation, 13 November 2000http://www.w3.org/TR/DOM-Level-2-CoreExtensible Stylesheet Language (XSL) 1.0W3C Recommendation, 15 October 2001http://www.w3.org/TR/xslXML BaseW3C Recommendation 27 June 2001http://www.w3.org/TR/xmlbaseXSL Transformations (XSLT) 1.0W3C Recommendation, 16 November 1999http://www.w3.org/TR/xslt
