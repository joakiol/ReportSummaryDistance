Coling 2008: Proceedings of the workshop on Knowledge and Reasoning for Answering Questions, pages 41?48Manchester, August 2008Creating and Querying a Domain dependent Know-How Knowledge Baseof Advices and WarningsLionel FontanIRIT - UPS,118 route de Narbonne,31062 Toulouse Cedex, France.antonin follet@hotmail.frPatrick Saint-DizierIRIT - CNRS,118 route de Narbonne,31062 Toulouse Cedex, France.stdizier@irit.frAbstractIn this paper, we present the explanation struc-ture of procedural texts, that supports and moti-vates the goal-instruction structure.
We focus inparticular on arguments, and show how argumentsof type warnings and advices can be extracted.
Fi-nally, we show how a domain dependent know-how textual knowledge base can be constructedand queried.1 IntroductionProcedural texts consist of a sequence of instruc-tions, designed with some accuracy in order toreach a goal (e.g.
assemble a computer).
Procedu-ral texts may also include subgoals.
These are mostof the time realized by means of titles and subti-tles.
The user must carefully follow step by stepthe given instructions in order to reach the goal.The main goal of our project is to analyse thestructure of procedural texts in order to efficientlyand accurately respond to How-to ?
questions.This means identifying titles (which convey themain goals of the text), sequences of instructionsserving these goals, and a number of additionalstructures such as prerequisites, warnings, advices,illustrations, etc.In our perspective, procedural texts rangefrom apparently simple cooking recipes to largemaintenance manuals.
They also include docu-ments as diverse as teaching texts, medical no-tices, social behavior recommendations, directionsfor use, assembly notices, do-it-yourself notices,itinerary guides, advice texts, savoir-faire guidesc?
2008.
Licensed under the Creative Commons= Attribution-Noncommercial-Share Alike 3.0 Unportedlicense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.etc.
(Aouladomar et al, 2005).
Procedural textsfollow a number of structural criteria, whose real-ization may depend on the author?s writing abili-ties, on the target user, and on traditions associatedwith a given domain.
Procedural texts can be regu-latory, procedural, programmatory, prescriptive orinjunctive.
The work we report here was carriedout on a development corpus of French texts takenfrom the Web from most of the various domainscited above.Argument extraction is not yet a very activearea, althought it has obvious uses in question an-swering, in decision theory, etc.
For example, ex-tracting arguments from legal texts (ICAIL 2005)or for answering opinion questions is a major chal-lenge of primary use.We have developed a quite detailed analysis ofprocedural texts, identifying their main basic com-ponents as well as their global structure.
For thatpurpose, we have defined two levels: a segmenta-tion level that basically tags structures consideredas terminal structures (titles, instructions, advices,prerequisites, etc.)
and a grammar level that bindsthese terminal structures to give a global structureto procedural texts (Delpech et al 2008).
Thisstructure is textual and dedicated only to elementsrelevant to procedurality.Procedural texts are complex structures, theyoften exhibit a quite complex rational (the instruc-tions) and ?irrational?
structure which is mainlycomposed of advices, conditions, preferences,evaluations, user stimulations, etc.
They formwhat is called the explanation structure, which mo-tivates and justifies the goal-instructions structure,which is the backbone of procedural texts.
A num-ber of these elements are forms of argumentation,they provide a strong and essential internal cohe-sion and coherence to procedural texts.41An important aspect of this project is the ac-curate identification of the explanation structureas found in procedural texts in order (1) to bet-ter understand explanation strategies deployed byhumans in precise, concrete and operational situ-ations and (2) to build a knowledge base of ad-vices and warnings related to an application do-main, that reflects several forms of know-how onthis domain.
Such repositories exist, but they havebeen build completely manually, by various users,often in a wiki fashion.
Our goal is then to allowusers not only to query procedural texts via Howto questions, but also to create and to access to arepository of advices and warnings (basically Whyquestions and some How-to questions to a lesserextent) about a certain task.We have already studied the instructional as-pects of procedural texts and implemented a quiteefficient prototype within the TextCoop project(Delpech et al 2008) that tags text with dedicatedXML tags.
In this paper, after a brief categoriza-tion of explanation structure as found in our corpusof procedural texts, we focus on the argumentationstructure via the recognition of warnings and ad-vices.
Then, we show how a textual knowledgebase of advices and warnings can be produced andhow it can be queried.2 The explanation structure inprocedural textsWe first present, in this section, the general orga-nization of the explanation structure as it emergedfrom corpus analysis.
Then we develop the majorcomponent of procedural texts: the instructionalcompound.2.1 A global view of the explanation struc-tureFrom our development corpus, we established aclassification of the different forms explanationsmay take.
Basically, the explanation structure ismeant to guide the user by making sure that hewill effectively realize actions as they are speci-fied, via e.g.
threats, rewards, evaluations, advicesand warnings.
The main structures are facilita-tion and argumentation structures; they are eitherglobal (they are adjoined to goals, and have scopeover the whole procedure) or local, included intoinstructional compounds, with a scope local to theinstructional compound.
This latter case is by farthe most frequently encountered.
These structuresare summarized as follows (the terms we use areeither borrowed from works on rhetorical relationsor are just ours if none exist):?
facilitation structures, which are rhetoricalin essence (Kosseim et al2000) (Van derLinden 1993), correspond to How to do X ?questions, these include two subcategories:(1) user help, with: hints, evaluations andencouragements and(2) controls on instruction realization, withtwo cases: (2.1) controls on actions: guid-ance, focusing, expected result and elabo-ration and (2.2) controls on user interpre-tations: definitions, reformulations, illustra-tions and also elaborations.?
argumentation structures, correspondingto why do X ?
questions.These have either:(1) a positive orientation with the author in-volvement (promises) or not (advices andjustifications) or(2) a negative orientation with the author in-volvement (threats) or not (warnings).In what follows, we will mainly concentrate on thissecond point, and in particular on warnings and ad-vices which are the most frequently encountered(since there are rarely involvements from the au-thor).
These will be used to construct the know-how knowledge base.
Argumentation structuresare relatively general to an applications domain,while facilitation structures are much more spe-cific to the text and the targeted audiences.
Thereare several ways of defining and approaching ar-gumentation.
Without entering any debate, weconsider here the approach where an argument iscomposed of one or more supports associated witha certain statement, as in the following warning:carefully plug in your mother card vertically, oth-erwise you will most likely damage its connec-tors.
where if the intruction (carefully plug in...)is not correctly realized, the user know the conse-quences.2.2 From instructions to instructionalcompoundsIn most types of texts, we do not find just se-quences of simple instructions but much more42complex compounds composed of clusters of in-structions, that exhibit a number of semantic de-pendencies between each other, that we call in-structional compounds.
These are organizedaround a few main instructions, to which a numberof subordinate instructions, warnings, arguments,and explanations of various sorts may possibly beadjoined.
All these elements are, in fact, essen-tial in a compound for a good understanding of theprocedure at stake.An instructional compound has a relativelywell organized discourse structure, composed ofseveral layers, which are:?
The goal and justification level, which haswider scope over the remainder of the com-pound, indicates motivations for doing ac-tions that follow in the compound (e.g.
inyour bedroom, you must clean regularly thecurtains..., which here motivates actions toundertake).
It gives the fundamental moti-vation of the compound.?
The instruction kernel structure, whichcontains the main instructions.
These can beorganized temporally or be just sets of ac-tions.
Actions are identified most frequentlyvia the presence of action verbs (in relationto the domain) in the imperative form, or inthe infinitive form introduced by a modal.We observed also a number of subordinatedinstructions forms adjoined to the main in-structions.
These are in general organizedwithin the compound by means of rhetoricalrelations, introduced below.?
The deontic and illocutionary force struc-tures: consist of marks that operate overinstructions, outlining different parameters.These linguistic structures play a major rolein argumentation:?
deontic: obligatory, optional, forbid-den or impossible, alternates (or),?
illocutionary and related aspects:stresses on actions: necessary, ad-vised, recommended, to be avoided,etc.
These marks are crucial to identifythe weight of an argument.?
a temporal structure that organizes se-quences of instructions (and, at a higherlevel, instructional compounds).
In general,the temporal structure is very simple, withsequences of actions to carry out.
In somecases, parallel actions are specified, whichpartially overlap.?
The conditional structure: introduces con-ditions over instructions within the com-pound or even over the whole instruc-tional compound.
We encounter quite a lotof structures organizing mutually exclusivecases.?
the causal structure that indicates the goalof an action.
We identify four types of causalrelations, following (Talmy 2001): intend-to(direct objective of an action: push the but-ton to start the engine), Instrumented (use a2 inch key to dismount the door), Facilitation(enlarge the hole to better empty the tank)and Continue (keep the liquid warm till itscolour changes).?
The rhetorical structure whose goal is toenrich the kernel structure by means of anumber of subordinated aspects (realized aspropositions, possibly instructions) amongwhich, most notably: enablement, motiva-tion, circumstance, elaboration, instrument,precaution, manner.
A group of relationsof particular interest in this paper are argu-ments, developed hereafter.Explanations and arguments help the user un-derstand why an instruction must be realized andwhat are the risks or the drawbacks if he does notdo it properly.
An example of an instructionalcompound is:[instructional compound[GoalTo clean leather armchairs,][argument:advice[instructionchoose specialized products dedicatedto furniture,[instructionand prefer them colourless ]],[supportthey will play a protection role, addbeauty, and repair some small damages.
]]]We have here an argument of type advicewhich is composed of 2 instructions (later calleda conclusion) and a conjunction of three supportswhich motivate the 2 instructions.433 Identifying arguments in proce-duresIn this section let us first give a quite informal def-inition of what an argument is, and how it interactswith the goal-instructions structure.
Let us thenfocus on warnings and advices which are, by far,the most frequently encountered structures.
Mostwarnings and advices are included into instruc-tional compounds.3.1 Argumentation and Action theoriesRoughly, argumentation is a process that allowsspeakers to construct statements for or against an-other statement called the conclusion.
These for-mer statements are called supports.
The generalform of an argument is : Conclusion ?because?Support (noted as C because S).
In natural lan-guage, conclusions often appear before the sup-port, but they may also appear after.
A conclusionmay receive several supports, possibly of differentnatures (advices and warnings).
Arguments maybe more or less strong, they bear in general a cer-tain weight, induced from the words they contain(Anscombre et al 1981), (Moeschler 1985), (Am-goud et al.
2001).
In natural contexts, this weightis somewhat vague, and only general classes canbe produced, e.g.
from light to strong.In the case of procedural texts, the represen-tation and the role of arguments in a text can bemodelled roughly as follows.
Let G be a goalwhich can be reached by the sequence of instruc-tions Ai, i ?
[1, n], whatever their exact tem-poral structure is.
A subset of those instructionsis interpreted as arguments where each instruction(Aj, viewed as a conclusion) is paired with a sup-port Sjthat stresses the importance of Aj(Care-fully plug in your mother card vertically, otherwiseyou will damage the connectors).
Their generalform is: Ajbecause Sj(we use here the term ?be-cause?
which is more vague than the implicationsymbol used in formal argumentation, because nat-ural language is not so radical).
Supports Skwhichare negatively oriented are warnings whereas thosewhich are positively oriented are advices.
Neutralsupports simply introduce basic explanations.Similarly to the principles of argument theory,but within the framework of action theory (e.g.Davidson 2003), if Ajis associated with a supportof type warning Sjthen if Ajis not realized cor-rectly, the warning Sjis ?active?
and attacks thegoal G, i.e.
it makes its realization more difficult,if not impossible.
Conversely, if Sjis an advice,it supports the goal G, making its full realizationeasier, or providing better results if Ajis executed.Note however that there is an implicit gradabil-ity in the realization of an action, which may bemore or less accurately and completely realized.In that case, negative or positive consequences onthe main goal evolve accordingly.Supports can themselves receive supports :don?t add natural fertilizer, this may attract in-sects, which will damage your young plants.
In thesame range of ideas, instructions Ajwhich are ad-vices or warnings have a different status than ?nor-mal?, unsupported instructions (although one cansay that most of them could be associated with animplicit support such as otherwise you will fail).Advices are often optional instructions: they area kind of invitation to do the associated action forbetter results, whereas warnings are an incitation tobe more careful.
Therefore, instructions in a proce-dure do not have all the same operational strengthand status.As can be noted, our definition includes termswhich are gradual: ?more difficult?, ?easier?, be-cause in practice, failing to realize an instructionproperly does not necessarily means that the goalcannot be reached, but the user will just be lesssuccessful, for various reasons.
In the natural lan-guage expressions of conclusions (the Aj) as wellas of supports, there are many modals or classesof verbs (like risk verbs) that modulate the conse-quences on G, contrast for example:use professional products to clean your leathers,they will give them a brighter aspect.
with:carefully plug in your mother card vertically, oth-erwise you will most likely damage its connectors.In the latter case, the goal ?mounting your own PC?is likely to fail, whereas in the former, the goal?cleaning your leathers?
will just be less success-ful.3.2 Processing argumentsFrom the above observations, we have defined aset of patterns that recognize instructions whichare conclusions and their related supports.
We de-fined those patterns from a development corpusof about 1700 texts from various domains (cook-ing, do it yourself, gardening, video games, so-cial advices, etc.).
The study is made on French,English glosses are given here for ease of read-44ing.
The recognition problem is twofold: identi-fying propositions as conclusions or supports bymeans of specific linguistic marks (sometimes wealso found a few typographic marks), and then de-limiting these elements.
In general, boundaries areeither sentences or, by default, instructional com-pound boundaries.
In procedural texts, roughly,the proportion of advices and warnings is almostequivalent.3.2.1 Processing warningsWarnings are basically organized around a uniquestructure composed of an ?avoid expression?
com-bined with a proposition.
The variations aroundthe ?avoid expressions?
capture the illocutionaryforce of the argument via several devices, orderedhere by increasing force :(1) ?prevention verbs like avoid?
NP / to VP (avoidhot water)(2) do not / never / ... VP(infinitive) ... (never putthis cloth in the sun)(3) it is essential, vital, ... to never VP(infinitive).In cases where the conclusion is relatively weak interms of consequences, it may not have any spe-cific mark, its recognition is then based on the ob-servation that it is the instruction that immediatelyprecedes an already identified support.Supports are propositions which are identifiedfrom various marks:(1) via connectors such as: sinon, car, sous peinede, au risque de (otherwise, under the risk of), etc.or via verbs expressing consequence,(2) via negative expressions of the form: in ordernot to, in order to avoid, etc.
(3) via specific verbs such as risk verbs introducingan event (you risk to break).
In general the embed-ded verb has a negative polarity.
(4) via the presence of very negative terms, suchas: nouns: death, disease, etc., adjectives, andsome verbs and adverbs.
We have a lexicon ofabout 200 negative terms found in our corpora.Some supports have a more neutral formula-tion: they may be a portion of a sentence wherea conclusion has been identified.
For example,a proposition in the future tense or conditionalfollowing a conclusion is identified as a support.However, as will be seen below, some supportsmay be empty, because they can easily be inferredby the reader.
In that case, the argument is said tobe truncated.Patterns are implemented in Perl and are in-cluded into the TextCoop software.
From theabove observations, with some generalizations andthe construction of lexicons of marks, we havesummarized the extraction process in only 8 pat-terns for supports and 3 patterns for conclusions.Pattrens are basically morpho-lexical, with theneed to recognize a few local structures, treated bymeans of local automata.
A pattern in Perl has thefollowing form:(PRO:PER--Modalite +)?--evit(ez|er)--(\w+ )*--##with modalite = devoir, veiller a, etre essentiel, etc.Some local automata are associated with most pat-terns in order to make them as generic as possible.In our programme, Perl scripts are treated one af-ter the other, in sequence.
We do not have any effi-cieny requirement since these treatments are real-ized in batch mode.
However, for the whole pro-cessing, we tag abouit 200 Mo of text per hour ona standard 3GhZ Pentium machine.3.2.2 EvaluationIn procedural texts, arguments are tagged by XMLtags.
We carried out an indicative evaluation (e.g.to get improvement directions) on a corpus of 66texts over various domains, containing 302 argu-ments, including 140 advices and 162 warnings.This test corpus was collected from a large collec-tion of texts from our study corpus.
Domains arein 2 categories: cooking, gardening and do it your-self, which are very prototypical, and 2 other do-mains, far less stable: social recommendations andvideo games solutions.
Arguments were manuallytagged in these texts, and a comparison was madewith the output of the system.
Therefore, we reportbelow the recall, the precision being almost 100%(very little noise).We get the following results for warnings:conclusion support (3) (4)recognition recognition88% 91% 95% 95%(3) conclusions well delimited (4) supportswell delimited, with respect to warnings correctlyidentified.As far as warnings are concerned, results arereally good.
Errors are very diverse, some of theminvolve uses of the verb pouvoir (to be able to) andthe auxiliary e?tre (to be).453.2.3 Processing AdvicesConclusions of type advice are identified essen-tially by means of two types of patterns (inFrench):(1) advice or preference expressions followed byan instruction.
The expressions may be a verb or amore complex expression: is advised to, prefer, itis better, preferable to, etc.,(2) expression of optionality or of preference fol-lowed by an instruction: our suggestions: ..., or ex-pression of optionality within the instruction (usepreferably a sharp knife).In addition, as for warnings, any instruction pre-ceding a support of type advice is a conclusion.The first pattern above is recogned by the fol-lowing script:ceci|cela|NOM|PRO:PER+--tre?--ADV?--Verb/advice exporession--(\w+ )*--##Supports of type advice are identified on thebasis of 3 distinct types of patterns:(1) Goal exp + (adverb) + positively oriented term.Goal expressions are e.g.
: in order to, for, whereasadverb includes: better (in French: mieux, plus,davantage), and positively oriented term includes:nouns (savings, perfection, gain, etc.
), adjectives(efficient, easy, useful, etc.
), or adverbs (well, sim-ply, etc.).
For this latter class of positively orientedterms we constructed a lexicon that contains about50 terms.
terms.
(2) goal expression with a positive consequenceverb (favour, encourage, save, etc.
), or a facilita-tion verb (improve, optimize, facilitate, embellish,help, contribute, etc.
),(3) the goal expression in (1) and (2) above can bereplaced by the verb ?to be?
in the future: it will beeasier to locate your keys.Similarly as above, we carried out an indica-tive evaluation on the same corpus as above, withthe same experimental conditions.
We get the fol-lowing results for advices:conclusion support (3) (4) (5)recognition recognition79% 84% 92% 91% 91%(3) conclusions well delimited, (4) supportswell delimited, both with respect to advices cor-rectly identified.
(5) support and conclusion cor-rectly related.A short example of an annotated text is givenin Fig.
1 below.4 Constructing and Querying aknow-how textual databaseBesides studying the textual structure of proce-dural texts and responding to How-to questions(Delpech et al 2007) from the analysis of thesetexts, a major application of this work is the con-struction of domain know-how knowledge base,which is probably quite basic, but which could besubject to interesting generalizations.
Obviously,to make this knowledge optimal, it would be usefulto associate with every statement a formal repre-sentation that supports inference, data fusion, etc.This domain know-how knowledge base of ad-vices, hints and warnings is of much importancefor different types of users who have a procedureto realize a task but who want to know more beforestarting.
Some psychological experiments have infact shown that, besides instructions given in pro-cedural texts, users are very much interested inwhat remains implicit in those texts: what you aresupposed to know or care about (but have no meansto ask).
This know-how textual database is aimedto fill in this kind of gap.The work presented hereafter is still ex-ploratory, since the task is quite complex.
Thedomain know-how textual database is planned tobe either directly consulted by users, or queriedby means of requests in natural language or key-words.4.1 Constructing a text database of do-main know-howThere are repositories of advices organized bysector of activity available on the Web (e.g.http://www.conseils-gratuit.com).
These are real-ized manually: most of these advices come fromhints sent by readers of these pages.
These repos-itories contain in general simple advices and alsosmall procedures which are hints to better realize acertain task.In our approach, the text units that we have ac-cess to are either (1) procedural texts decomposedinto subgoals when they are large (e.g.
the differ-ent phases of assembling a computer), or (2) in-structional compounds.
Compounds roughly cor-respond to the various advice forms found in man-46[procedure[titleHow to embellish your balcony[Prerequisites1 lattice, window boxes, etc.]....
[instructional?compoundIn order to train a plant to grow up a wall, select first a sunny area, clean the floor andmake sure it is flat......[Argument[Conclusion:AdviceYou should better let a 10 cm interval between the wall and the lattice.
][Support:AdviceThis space will allow the air to move around, which is beneficial for the health of yourplant.
]...... ]]]]Figure 1: An annotated procedureually realized repositories of advices.
Advices andwarnings mainly appear within these instructionalcompounds.
However, compounds being insertedinto a larger procedure may be somewhat ellipticalin some cases.
Therefore, the textual database weare constructing will contain titles (to settle con-text) and compounds.Let us now present the construction of the do-main know-how textual database of advices andwarnings.
At this stage, this is an experimental ten-tative that needs further improvements and evalu-ation.
We first process texts by domain, accordingto our corpus (about 8000 texts).
The main func-tions of this processing are:(1) cleaning web pages from irrelevant data (adds,forums, summaries, links, etc.
),(2) XML tagging the instructional aspects, withdedicated tags: tagging titles (and reconstructingthe numerous titles which are incomplete, withmissing verb or object, and tagging instructionalcompounds and prerequisites, and(3) tagging within instructional compounds ad-vices and warnings based on the patterns givenabove.In the textual database, the firstlevel of structure is domains: house,coocking, administration, health,garden, computer, do it yourself,animals, beauty, society.Next, below each of these domain top nodes,we have a list of items that correspond to proce-dures main titles (e.g.
boucher un trou avec duplatre (fill up a hole with plaster).
Since, for mostdomains we have several hundreds of documents,we need to organize those titles and abstract overthem.
This is being organized around two axis:(1) task oriented: where action verbs are groupedon the basis of closely related terms to form a sin-gle title (for that purpose we use our verb lexicalbase (Volem)).
A second level of generalizationis carried out by skipping adjuncts, therefore wehave items like: ?repairing walls?
independently ofthe material or the technique used, e.g.
with plas-ter.
mastic, cement.
(2) object oriented: where we only keep track ofthe objects, viewed as a theme: wall, wood, plas-ter, etc.
so that the user can access the differentoperations these objects may undergo.These revised titles form a second level in thestructure of the know-how textual knowledge base.Below these links, we have the list of relevantweb pages.
Each of these pages is associated withan index composed of the set of titles it containsand the list of supports identified (reconstructedsupports are not yet included).
Titles are used tomake the procedure context more precise so thatthe scope of supports is more clear, since somesupports are vague.
A short example is given inFig.
2 below.
Supports which are too vague to beof any use are filtered out.
At the moment we arestudying various forms of filters based on the typeof words they contain and their relevance.4.2 Querying the know-how textualdatabaseIn general, attempting to match queries directlywith supports in order to get the advice, i.e.
theassociated conclusion does not lead to the best re-sults because supports are often incomplete or theycontain a lot of pronominal references.
Our match-ing procedure therefore includes the taking into ac-count of the page title, or subtitles together withsupport contents.
It seems that this leads to betterresults in terms of accuracy and relevance.Related to Fig.
2, a query could be: how toget smooth plaster surfaces on a wall ?.
There isno procedural text that corresponds to this query,47domain: do-it-yourselftopic: repairing wallsrepairing your walls with plaster -[INDEX: Title, list of supports]-[TEXT]filling up holes in your walls ]-[INDEX: Title, list of supports]-[TEXT.....topic: painting walls.....Figure 2: A text database indexwhich is rather an advice request.
Answering thisquestion is realized by the following steps:(1) based on keywords which appear as objects inthe query, select a domain and a topic in the knowl-edge base.
(2) then, over the topics selected, match the querywith one or more supports.
Matching is obviouslynot direct and requires, as in most systems, someflexibility.
Of interest here are adjectives, whichabound in this type of question, for which we needto develop scales that capture the different lan-guage expressions of the properties they character-ize.
This type of scale, in (Cruse 1986), is callednon branching proportional series.
For example?smooth?
will appear on a scale of type ?surfacegranularity?
that includes other adjectives such asrough, grainy, etc.5 PerspectivesThe work presented here complements the taggingof titles and instructional compounds in proceduraltexts of various domains, as reported in (Delpechet al 2008).
We analyzed the forms arguments oftype advice and warning may take, and have imple-mented and tested a system that tags those struc-tures and attempts at reconstructing empty sup-ports.
At this level, there is still linguistic and for-mal work to be carried out, for example to evaluatethe illocutionary force of arguments and to bettersettle this work within action theory.
We believewe have a very useful corpus of examples of argu-ments, of much interest for research in argumenta-tion theory.In a second stage, we have now established afirst version of criteria to construct from these ar-guments a domain know-how textual database, thatusers can query to get additional information whenrealizing a task, often information which remainsimplicit in a procedure, but that users do need tooperate safely and efficiently.
The construction ofsuch a repository is a complex task that we willpursue, together with an analysis of how it can bequeried accurately.Credits We thank the French ANR-RNTL re-search programme for supporting this project.
Wealso thank very warmly Leila Amgoud for discus-sions on argumentation, Daniel Kayser for com-ments on this paper, and 3 anonymous reviewers.ReferencesAmgoud, L., Parsons, S., Maudet, N., 2001,Arguments, Dialogue, and Negotiation, in: 14thEuropean Conference on Artificial Intelligence,Berlin.Anscombre, J.-Cl.
Ducrot, O., 1981, Interro-gation et Argumentation, in Langue francaise, no52, L?interrogation, 5 - 22.Aouladomar, F., Saint-dizier, P., 2005, To-wards Answering Procedural Questions, Work-shop KRAQ05, IJCAI05, Edinburgh.Cruse, A., 1986, Lexical Semantics, Cam-bridge Univ.
Press.Davidson, D., 1963, Actions, Reasons, andCauses, Journal of Philosophy, 60.Delpech, E., Saint-Dizier, P., 2008, Investigat-ing the Structure of Procedural Texts for Answer-ing How-to Questions, LREC 2008, Marrakech.Kosseim, L., Lapalme, G., 2000, ChoosingRhetorical Structures to Plan Instructional Texts,Computational Intelligence, Blackwell, Boston.Moschler, J., 1985, Argumentation et Conver-sation, Ele?ments pour une Analyse Pragmatiquedu Discours, Hatier - Cre?dif.ICAIL, 2005, Automatic semantics extractionin law documents, proceedings, C. Biagili et al.
(ed), ACM ICAIL publications, Stanford.Vander Linden, K., 1993, Speaking of Ac-tions Choosing Rhetorical Status and Grammati-cal Form in Instructional Text Generation Thesis,University of Colorado.48
