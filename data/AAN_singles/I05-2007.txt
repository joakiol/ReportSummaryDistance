A resource-based Korean morphological annotation systemHyun-gue Huh ?ric LaporteLaboratoire d?informatique de l?Institut Gaspard-MongeUniversit?
de Marne-la-Vall?e/CNRS (UMR 8049)5, bd Descartes ?
F77454 Marne-la-Vall?e CEDEX 2 ?
Francehhuh@univ-mlv.fr eric.laporte@univ-mlv.frAbstractWe describe a resource-based methodof morphological annotation of writtenKorean text.
Korean is an agglutinativelanguage.
The output of our system is agraph of morphemes annotated withaccurate linguistic information.
Thelanguage resources used by the systemcan be easily updated, which allows us-ers to control the evolution of the per-formances of the system.
We show thatmorphological annotation of Koreantext can be performed directly with alexicon of words and without morpho-logical rules.1 IntroductionIn the first phase of the processing of a writtentext, words are annotated with basic informa-tion, such as part of speech (POS).
Two of thecriteria of quality of a system performing thistask are particularly relevant: the output of thisprocess must be accurate and informative; thelanguage resources used by the system must beable to undergo an evolution in a controlledway.
The objective of the work reported herewas to explore a method likely to enhance theperformances of state-of-the-art systems of Ko-rean morphological annotation in both regards.We decided to make language resources the cen-tral point of the problem.Korean is one of the most studied agglutina-tive languages in the world.
Korean words (eo-jeol) are delimited by spaces or other symbols,but a word usually consists of an undelimitedconcatenation of several morphemes: one orseveral stems, followed by zero, one or severalfunctional morphemes.
We will call stems alllexical morphemes, as opposed to functional orgrammatical ones.
The surface form of a mor-pheme occurring in a text may depend onneighbouring morphemes.
Thus, it may differfrom its base form or lexical form.
These varia-tions are termed as phonotactic, and the surfacevariants are called allomorphs.
The objective ofmorphological annotation is to identify mor-phemes and assign relevant information to them.The basic units of the Korean alphabet (han-gul) are graphical syllables.
These syllables canbe decomposed over the Korean alphabet ofsimple and complex letters (jamo): each ?letter?is either a cluster of 1 or 2 consonants, or a se-quence of 1, 2 or 3 vowels.
In addition, Chineseideograms are sometimes employed also to writeKorean stems.It has been claimed that morphological anno-tation of Korean text could only be performedby a morphological analysis module accessing alexicon of morphemes and using a set of rules.We show that it can also be performed directlywith a lexicon of words.
We describe an imple-mented system of morphological annotation thatuses an actual lexicon of words.
Our approachresorts to classical techniques of lexicon com-pression and lookup, but the application to anagglutinative language involved implementingnew software components, which have receivedan open-source status.In Section 2, we outline the state-of-the-artapproach to Korean morphological annotation.Section 3 describes the alphabets and tag setused by our system.
In Section 4, we explain ourmodel of morpheme combinatorics.
Section 5reports the construction and use of the word37lexicon.
A conclusion and perspectives are pre-sented in Section 6.2State of the artSeveral morphological annotators of Korean textare available.
The Hangul Analysis Module(HAM1) is one of the best Korean morphologi-cal analysers.
Other fairly representative exam-ples are described in (Shin et al, 1995; Park etal., 1998) and in (Lee et al, 1997a; Cha et al,1998; Lee et al, 2002).
The output for eachmorpheme is presented in two parts: the mor-pheme itself, and a grammatical tag.
Morphemesare usually presented in their base form if theyare stems, and in they surface form if they arefunctional morphemes.
Tags are represented bysymbols; they give the POS of stems, andgrammatical information about functional mor-phemes.
In output, 95% to 97% of mor-pheme/tag pairs are considered correct.Morphological annotation of Korean text isusually performed in two steps (Sproat, 1992).In the first step, morpheme segmentation is per-formed with the aid of a lexicon of morphemes.This generates all possible ways of segmentingthe input word.
The second step makes a selec-tion among the segmentations obtained andamong the tags attached to the morphemes.
Thesecond step involves frequency-based learningfrom a tagged corpus with statistical modelssuch as hidden Markov models, and sometimesalso with error-driven learning of symbolictransformation rules (Brill, 1995; Lee et al,1997a; Lee et al, 2002).
Morphemes not foundin the lexicon undergo a special treatment thatguesses at their properties.
A recent variant ofthis approach (Han and Palmer, 2005) swaps themain two steps: first, a sequence of tags is as-signed to each word on the basis of a statisticalmodel; then, morphological segmentation is per-formed with a lexicon of morphemes.
The otherapproaches are less popular among searchersand language engineering companies.
Some sys-tems are based on two-level models, such as(Kim et al, 1994) and the Klex system of HanNa-rae 2 .
(Choi, 1999) combines a lexicon ofstems with a lexicon of endings with the aid of aconnectivity table.1 http://nlp.kookmin.ac.kr/HAM/kor/ham-intr.html2 http://www.cis.upenn.edu/~nrh/klex.htmlThe delimitation of morphemes is provided,but some morpheme boundaries are usuallymodified so that they coincide with syllableboundaries.
For example, if two suffixes makeup a single syllable, like -?
:-sy?ss- which is acontraction of -??
:-eusi- (honorification to-wards sentence subject) and -?
:-?ss- (past),they are usually considered as one morpheme.Such simplifications make it possible to encodemorphemes on the Korean syllable-based alpha-bet, and are compatible with syllable-basedmodels (Kang and Kim, 1994).
However, theyare an approximation.We opted for the resource-based approach toobtain more accurate and more informative out-put.The language resources used in annotatorsare corpora, rules and lexicons.Corpus-based systems have an inherent lackof flexibility.
A morphological annotator is notstatic infrastructure, it has to evolve with time.Due to the evolution of language across time,and especially of technical language, regularupdates are necessary; a new application mayinvolve the selection of a domain-specificvocabulary.
The flexibility of a resource can bedefined as the ability to control its evolution.
Inorder to adapt a corpus-based system, one feedsa new corpus into the training process, since theoperation of the system is dependent on the na-ture of the training corpus.
A training processwith a tagged corpus gives much better perform-ance than unsupervised training (Merialdo,1994).
The extension of a system to input textsof new types or of a new period of time involvesthe costly task of tagging a corpus of new texts.Another type of evolution of a corpus-based sys-tem, a refinement of the tag set, such as the ad-dition of new features, involves a re-tagging ofexisting tagged corpora, a task which is seldomachieved.The situation is different with rules or lexi-cons.
The flexibility of a manually constructedand updated rule set or lexicon depends on itslevel of readability and of non-redundancy (seesection 4).In current practice, words are segmented by amorphological analysis module that accesses alexicon of morphemes and uses a set of rules.
Ithas been claimed that morphological annotationof Korean text could only be performed thisway, because a lexicon of words would be too38large (e.g.
Lee et al, 2002; Han and Palmer,2005).
We show that it can be performed di-rectly with a lexicon of words; this solution dis-penses with rules, thus simplifying and speedingup morphological annotation.
The evidencegiven by Han and Palmer (2005) in support oftheir claim is the fact that the number of differ-ent words in Korean is very large, which is un-disputed.
In fact, they implicitly assume that thelexicon would be obtained by sequentially gen-erating all words and associated information.Such a naive procedure would surely be imprac-tical.
Our system constructs a lexicon of wordswithout generating any list of words at any ofthe phases of its construction or maintenance.In our design, all morphological rules are ap-plied to all possible configurations during thecompilation of the resources and stored in alexicon of words, which is searched during textannotation.
No morphological rules are appliedthen.
The lexicon of words occupies less than600 Kb, and specifies 138,000,000 surfaceforms of words obtained from 39,130 base-formstems.
The size of the lexicon does not growwith the number of words, due to our adaptationto Korean of state-of-the-art technology for lexi-con management (Appel and Jacobson, 1988;Silberztein, 1991; Revuz, 1992; Lucchesi andKowaltowski, 1993).
Our approach could evenbe adapted further to allow for constructing alexicon with infinitely many words.3 Alphabets and tag setOur system uses three Unicode character sets:the Korean syllabic alphabet, the Korean alpha-bet of letters, and the Chinese ideograms.
Thelexicon of words is constructed from a set oflanguage resources that has been manually con-structed and is manually updated by Korean lin-guists (Nam, 1996).
In order to ensure that theseresources are readable, they are encoded in theKorean syllabic alphabet.
The only situationwhen this is impossible is when a morphemeboundary does not coincide with a syllableboundary.
In that case, the morpheme boundarydivides the syllable into two parts; one of theseparts has no vowel and cannot be encoded in thesyllabic alphabet: it is then encoded in the Ko-rean alphabet of letters, which is another zone ofthe Unicode character set.
This convention al-lows for an accurate delimitation of surfaceforms and base forms of all morphemes, includ-ing irregular ones.
Chinese ideograms are pro-vided in the information on Sino-Korean stems,which are sometimes spelled in Chinese ideo-grams in texts.In the lexicon of words itself, words are en-coded over the Korean alphabet of letters, formore efficient lexicon search.
During text anno-tation, words in the text are converted into let-ters before the lexicon is searched.Our tag set is more fine-grained than state-of-the-art: it comprises 173 tags for stems [to becompared to 18 in Lee et al (2002) and 14 inHan and Palmer (2005)], and 84 tags for func-tional morphemes [15 in Lee et al (2002) and inHan and Palmer (2005)].
Tags are more infor-mative.In addition, the tags are structured.
Theycombine a general tag taken in a list of 16 gen-eral tags, and 0 to 4 features specifying subcate-gories.
The list of general tags is displayed inTable 1.
There are 91 features with a total of 152values.A adjective Sfx derivational suffixADV adverb Morph pre-final verb/adj.
end-ingDET determiner Post postpositionN noun Sc conjunctive suffixNI boundnounSd determinative suffixPRO pronoun Sncomp nominalization suffixV verb St final endingINT interjection Suf pre-final nominal end-ingTable 1.
General tagsThis structure is in conformity with emerginginternational standards in representation of lexi-cal tags (Lee et al, 2004).
Tag sets in previousKorean morphological analysers were unstruc-tured or hierarchical (Lee et al, 2002), not fea-ture-based.4 Morphotactics and connectivityThe final part of some verbal and adjectivalstems undergoes phonotactic variations when asuffix is appended to them.
For example, thestem ?
:keu- ?big?
becomes ?
:k- before thesuffix -?
:-?ss- (past).
In order to reduce thelevel of redundancy of manually updated re-sources, lexicons of base-form stems were con-39structed.
Each stem was assigned a structuredtag.
Stem allomorphs are generated from base-form stems with 71 transducers of the same typeas those used to inflect words in inflectionallanguages (Silberztein, 2000).
The input part ofthe transducer specifies letters to remove or toadd in order to obtain the allomorph from thebase form.
The output part specifies the tag andcompatibility symbol (see below) to be assignedto the allomorph.
These transducers are viewedand edited in graphical form with the open-source Unitex system3 (Paumier, 2002).The combination of a stem with a sequenceof suffixes obeys a number of constraints.Checking these constraints is necessary to dis-card wrong segmentations.
We distinguish twotypes of suffixes: derivational and inflectional.Derivational suffixes are markers of verbali-zation, adjectivalization and adverbialization.They are appended by applying transducers ofthe same type as above.
In our current version, 8transducers append derivational suffixes.
Thesetransducers invoke 5 subgraphs, thus constitut-ing recursive transition networks (RTN).Inflectional suffixes comprise all other typesof suffixes.
A single (possibly derived) stem canbe combined with up to 5,500 different se-quences of inflectional suffixes.
Compatibilitybetween stems and inflectional suffixes is repre-sented by a set of 59 compatibility symbols(CS).
Each stem and stem allomorph is assigneda CS, which defines the set of suffix sequencesthat can be appended to it.
The CSs take intoaccount two types of constraints: grammaticaland phonotactic constraints.
CSs are comparablewith adjacency symbols, except that they in-clude the constraints between all the morphemesin a word, not only between adjacent mor-phemes.
They convey more information thanadjacency symbols, but they are less numerous:59 to be compared to 300 (Lee et al, 2002).
Thelexicon of stems assigns CSs to base stems.
CSsare automatically assigned to stem allomorphsduring the generation of allomorphs.Connectivity between suffixes obeys phono-tactic and grammatical constraints.
Phonotacticconstraints affect surface forms, whereas gram-matical constraints affect base form/tag pairs.The standard model for representing both typesof constraints is the finite-state model.
For ex-53 http://www-igm.univ-mlv.fr/~unitex/manuelunitex.pdfample, Lee et al (2002) use a table that encodesconnectivity between morphemes with the aid ofmorpheme tags and adjacency symbols.
Such atable can be viewed as a finite-state automatonin which the states are the adjacency symbolsand the transitions are labelled by the morphemetags.
In Kim et al (1994) and in the Klex systemof Han Na-rae, these constraints are representedin the two-level formalism, which is equivalentto regular expressions, which are in turn equiva-lent to finite-state automata.
All these forms arecomputationally relevant, but they are littlereadable: the inclusion of a new item or the cor-rection of an error is error-prone.
Two-levelrules have a very low level of redundancy, butthey are complex to read because they combinea morphological part and a logical part (thesymbols <=>, <=, =>).In our system, connectivity constraints be-tween suffixes are represented in finite-statetransducers, i.e.
finite-state automata with in-put/output labels.
These transducers describesequences of suffixes.
Their input representssurface forms and their output represents baseforms and tags.
We introduced two innovationsin order to enhance their readability.
Firstly,they are edited and viewed graphically.
Sec-ondly, since most of the transducers are largeand would not display conveniently on a singlescreen or page, they take the form of RTNs:transitions can be labelled by a call to a sub-transducer instead of an input/output pair.
The59 CSs correspond to 59 transducers.
Most ofthe sub-transducers that they call are shared,which reduces the level of redundancy of thesystem.
The total number of simple graphs mak-ing up the RTNs is 230.In the case of several of the RTNs, the graphof calls to sub-transducers admits cycles.
Due tothese cycles, these RTNs generate an infinite setof endings.
The lexicon compiler allows forkeeping the set of generated endings finite bybreaking all cycles.Word lexiconThe various readable resources described aboveare compiled into an operational lexicon ofwords whenever one of them is updated.
Thelexicon of words has an index for fast matching.This index is a finite-state transducer over theKorean alphabet of letters.
This is a transposi-40tion of the state-of-the-art technology of repre-sentation of lexicons of forms in inflectionallanguages (Appel and Jacobson, 1988; Silberz-tein, 1991; Revuz, 1992; Lucchesi and Kowal-towski, 1993).
Another index structure, the trie,has been tested with the same lexicon.
The sizeof the trie (930 Kb) is slightly larger than thesize of the transducer (560 Kb), due to the repre-sentation of endings which is repeated manytimes in the trie.The compilation of the lexicon of wordsfrom the readable resources follows several se-quential steps.
First, all resources are convertedfrom the Korean syllabic alphabet to the Koreanalphabet of letters.
In a second step, lexicons ofstem allomorphs and of derived stems are gener-ated from the base-form stem lexicons by apply-ing the transducers with Unitex.
In a third step,the resulting lexicons of stems are compiled bythe Unitex lexicon compiler.
Each compiledlexicon has an index, which is a finite-stateautomaton.
The final states of the automatongive access to the lexical information, and inparticular to the CSs of the stems.
In a fourthstep, each transducer of sequences of suffixes isconverted into a list by a path enumerator, andeach of these lists is processed by the lexiconcompiler.
The names of the compiled endinglexicons contain the corresponding CSs.
In thefinal step, the stem lexicons and the ending lexi-cons are merged into a word lexicon.
This op-eration links the final states of the stem lexiconsto the initial states of the corresponding endinglexicons.
The path enumerator and the lexiconlink editor have been implemented for this ex-periment and will receive an open-source status.The path enumerator allows for breaking cyclesin the graph of calls to sub-transducers, so thatthe enumeration remains finite.The current version of this compilation proc-ess generates a lexicon of one-stem words only.Multi-stem words will be represented in laterversions.These operations are independent of the textto be annotated; they are performed beforehand.They need to be repeated whenever one of thelanguage resources is updated.The operation of the morphological annotatoris simple.
The text is pre-processed for sentencesegmentation, and tokenised (words are tokens).In each word, Korean syllables are convertedinto Korean letters; then, the lexicon of words issearched for the word.
Lexicon search is effi-cient: it processes 41,222 words per second on aP4-400 Windows PC.
When Chinese ideogramsoccur in a stem, the lexicon search modulesearches directly the lexical information at-tached to stem entries.
We did not include anymodules for processing words not found in thelexicon.All analyses that are conform to phonotacticand grammatical in-word constraints are re-tained.
However, checking these constraintsdoes not suffice to remove all ambiguity fromKorean words.
A thorough removal of ambigu-ity requires a syntactic process (Voutilainen,1995; Laporte, 2001).
Our system presents itsoutput in an acyclic finite-state automaton (alsocalled a graph or a lattice) of morphemes, as inLee et al (1997b), but displayed graphically.The output for each morpheme is presented inthree parts: surface form, base form, and a struc-tured tag providing the general tag of Table 1and syntactic features.
Word separators such asspaces are also present in this automaton.The annotation of an evaluation sample bythe system presented 67 % recall and 46 % pre-cision.
The annotation of a morpheme was con-sidered wrong when any of the features waswrong.
Among these errors, 78 % are resourceerrors that can be corrected by updating the re-sources, whereas the correction of the remaining22 % would involve enhancing the compilationprocedure.6 ConclusionWe experimented with a method likely to en-hance the performances of state-of-the-art sys-tems of Korean morphological annotation.
Wemade language resources the central point of theproblem.
All complex operations were inte-grated among resource management operations.The output of our system is accurate and infor-mative; the language resources used by the sys-tem can be easily updated, which allows users tocontrol the evolution of the performances of thesystem.
Morphological annotation of Koreantext is performed directly with a lexicon ofwords and without morphological rules, whichsimplifies and speeds up the process.This work opens several perspectives.
Theresources will be extended by running the anno-tator and analysing output.
Existing approaches41to the analysis of unrecognised morphemescould be combined to our system: such ap-proaches are complementary to our resource-based approach, and would take advantage ofthe rich information provided on the neighbour-ing words.
Ambiguity resolution techniques canbe applied to the output of our annotator: thesyntactic approach would take advantage of therich linguistic information provided in output;classical statistical approaches and priority rules(Kang, 1999) are applicable as well.
Finally, aparallel system is under construction for Finnish,another agglutinative language with undelimitedmorphemes.ReferencesAppel, A.W., Jacobson, G.J.
: The world's fastestScrabble program, Comm.
ACM 31:5 (1988) 572-578 & 585Brill, E.: Transformation-based error-driven learningand natural language processing: a case study inpart-of-speech tagging, Computational Linguistics21:4 (1995) 543-565Cha J.W., Lee G.B, Lee J.H.
: Generalized UnknownMorpheme Guessing for Hybrid POS Tagging inKorean, Proc.
of Workshop on Very Large Cor-pora, Montr?al (1998) 85-93Choi S.W.
: Implantation de dictionnaires ?lectroni-ques du cor?en par automates finis, PhD thesis,University of Marne-la-Vall?e, France (1999)Han Ch.
H., Palmer, M.: A Morphological Tagger forKorean: Statistical Tagging Combined with Cor-pus-based Morphological Rule Application.
MTjournal, to appear (2005)Kang S.Sh.
: A Rule-Based Method for Morphologi-cal Disambiguation, 5th Natural Language Proc-essing Pacific Rim Symposium (NLPRS) (1999)Kang S.Sh., Kim Y.T.
: Syllable-Based Model ForThe Korean Morphology, COLING (1994) 221-226Kim D.B., Lee S.J., Choi K.S., Kim G.Ch.
:  A Two-Level Morphological Analysis of Korean,COLING,  vol.
1 (1994)Laporte, ?.
: Reduction of lexical ambiguity.
Lingvis-ticae Investigationes 24:1 (2001) 67-103Lee G.B., Cha J.W., Lee J.H.
: Hybrid POS taggingwith generalized unknown-word han-dling.
Inter-national workshop on information retrieval withAsian languages (IRAL), Tsukuba-City, Japan(1997a) 43-50Lee G.B., Cha J.W., Lee J.H.
: Syllable pattern-basedunknown morpheme estimation for hybrid part-of-speech tagging of Korean.
Computational Linguis-tics 28:1 (2002) 53-70Lee G.B., Lee J.H., Kim B.Ch., Lee Y.J.
: A Viterbi-based morphological anlaysis for speech and natu-ral language integration.
Proceedings of the 17thinternational conference on computer processingof Oriental languages (ICCPOL), Hong-Kong(1997b) 133-138Lee K.Y., Bunt, H., Bauman, S., Burnard L., Cl?-ment, L., Clergerie, ?.
de la, Declerck, Th.,Romary, L. , Roussanaly, A., Roux, C.: Towardsan international standard on feature struc-ture rep-resentation.
Proc.
of LREC (2004) 373-376Lucchesi, C., Kowaltowski, T.: Applications of finiteautomata representing large vocabularies.
Soft-ware - Practice and Experience 23:1, Wiley &Sons (1993) 15-30Merialdo, B.: Tagging English text with a probabilis-tic model.
Computational linguistics 20:2 (1994)155-171Nam J.S.
: "Construction of Korean electronic lexicalsystem DECO, in Papers in Computational Lexi-cography (COMPLEX), F. Kiefer, G. Kiss, andJ.Pajzs (eds), Budapest, Research Institute forLinguistics, Hungarian Academy of Sciences(1996)Park J.S., Kang J.G., Hur W., Choi K.S.
: MachineAided Error-Correction Environment for KoreanMorphological Analysis and Part-of-Speech Tag-ging, COLING-ACL (1998) 1015-1019Paumier, S.: 2002.
Unitex - manuel d'utilisation, re-search report, University of Marne-la-Vall?eRevuz, D.: Minimization of acyclic deterministicautomata in linear time.
Theoretical ComputerScience 92:1, Elsevier (1992) 181-189Shin J.H., Han Y.S., Park Y.C., Choi K.S.
: A HMMPart-of-Speech Tagger for Korean with Word-phrasal Relations, Recent Advances in NaturalLanguage Processing, Sofia (1995)Silberztein, M.: A new approach to tagging: the useof a large-coverage electronic dictionary, AppliedComputer Translation 1:4  (1991)Silberztein, M.: Intex: an FST toolbox.
TheoreticalComputer Science 231(1), Elsevier (2000) 33-46Sproat, R.: Morphology and Computation, MIT Press(1992)Voutilainen, A.: A Syntax-based part-of-speech ana-lyser, EACL (1995) 157-16442
