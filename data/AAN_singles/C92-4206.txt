Mult imodal  Database QueryNicho las  J .
Haddockt tewlet t -Packard  Laborator iesF i l ton  Road,  S toke  Gi f ford ,Br i s to l  BS12 6qZ,  U .K .n j  h?hpl ,  hp .
co .
ukAbstractThe paper proposes a multimodal interface for a realsales database application.
We show how natural lan-guage processing may be integrated with a visual, di-rect manipulation method of database query, to pro-duce a user interface which supports a flexible form ofquery specification, provides implicit guidance aboutthe coverage of the linguistic component, and allowsmore focused discourse reference.IntroductionRecently there has been a burgeoning of interest inthe combination of natural anguage processing withvisual and gestural forms of communication.
Therange of research includes the interpretation of com-bined linguistic and diagrammatic nput (e.g.
Kleinand Pineda, 1990), the generation of multimedia ex-planations (e.g.
Wahlster et al, 1991), the integra-tion of NLP with hypertext (Stock, 1991), and thecombination of natural language input with point-ing (e.g.
Kobsa et al, 1986), menus (Tennant cta l .
,1983), and forms (Cohen et al, 1989).
The rationalefor most of this work is that since the different modesare best suited to expressing different kinds of infor-mation, the expressiveness of the communication canbe increased by employing a combination of modesrather than one in isolation.
At one end of the spec-trum, this rationale has led to applications in whichthere is a clear dividing line between the function ofthe different modes; for example, in GRAFLOG (Kleinand Pineda, 1990), the function of linguistic utter-ances like This line is a wall is to provide real-worldinterpretations for the parts of a line drawing.
Ourown work lies at the other end of the spectrum.
Weare interested in exploring the power of combiningnatural anguage and direct manipulation when thefunction and expressive power of the two modes aresimilar.The present paper describes this dual approach inthe context of a specific, real database query appli-cation.
We have integrated NLP with a visual, di-rect manipulation method of database query, in sucha way that both query modes can express approx-imately the same range of queries.
Our objectivein this work is to explore the ways in wlfich the co-presence of a direct manipulation i terface improvesthe usability and flexibility of the natural anguageinterface.
The concern of this paper is in the natureof our computational proposals, rather than empiri-cal evidence about their utility.
So far we have per-formed a user trial on the direct manipulation i ter-face alone (Frohlich, 1991), and we intend to performsimilar experiments with the combined interface anda stand-alone version of the NL interface.We start with an overview of our application area,and then summarise the pertinent features of our di-rect manipulation interface.
The body of the pa-per illustrates how we have integrated NLP with thisinterface, with respect to the available vocabularly,the portrayal of user queries, and reference to pastqueries.Application DomainThe target of our application is a relational databaseused by a large UK company to summarise the valueof their product sales.
The main users of the data arcsales professionals and their secretarial ssistants.
~lbdate, these users have \[lad two routes of access to thcdata: they can retrieve fixed-format financial tablesusing a menu-based query system, or they can usea rather brittle natural anguage interface (suppliedby a third-party vendor).
The design of our systemstems partly from users' experience of these existinginterfaces.
Our user interface is geared to supportingtbe following user requirements: it should be simpleto use; it should support flexible-format views or "re-ports" on the data; and it should allow new queriesto be composed with reference to past queries.Although our user interface is a prototype, andis not yet in use, we have done nothing to changethe structure of the underlying relational database.The database summarises sales along three dimen-sions, or parameters: the product sold, the pur-chaser (in this case, retail outlets), and the time ofsale.
In conceptual terms, each dimension forms ahierarchy.
For example, tim leaves of the purchaseror "customer" hierarchy identify trading points (nu-meric identifiers corresponding to distinct physical re-tail stores); at the next level, these are grouped intoAcrEs OR COLING-92.
NANTES, 23-28 ho~r 1992 1 2 7 4 PRoc.
ol: COLING-92, NhgrEs.
AUG. 23-28, 1992trading concerns (corresponding to the familiar high-street names of retail chains); and at the top level thetrading concerns are grouped into corporate concerns(corresponding to the public limited company whichowns the chain).
Similarly, the time hierarchy rep-resents financial time periods from leaf "bookweeks"up to the financial year, and the product hierarchyrepresents specific product box sizes up to a generalclassification of market areas.Direct Manipulation InterfaceTbe direct manipulation interface represents eachsales dimension by a visual domain model.
For in-stance, the temporal domain model (see Figure 1)is depicted as a scrollable timeline, demarcated intohierarchical time periods.
The model presents boththe concepts (e.g.
"year", "quarter") and values (e.g.
"1990", "Q2-90") which are distinguished in the tem-poral dimension.
The product and customer domainmodels are similarly displayed as hierarelfica\[ "pick-lists".Figure 1: Temporal domain modelUsers pose qneries by constructing the format, orappearance, of tim report they want to see, using atechnique we have dubbed "Query by Format".
Thepresent system supports three types of query in thisfashion, providing: numeric summaries of sales withrespect o specific parameters (e.g.
the value of salesof Krunchy in June), lists of values related to thesales parameters (e.g.
all trading points which boughtKrunchy), and details on specific values (e.g.
tire tele-phone number of trading point 647).
To simplify theexposition, the remainder of this paper will discussonly the first kind of query, requesting summaries ofsales.Figure 2 shows a sales summary table which theuser has created and then evaluated as a queryagainst the database.
It represents the sales ofKrunchy for Oct-90 and for Nov-90, for the storesAmlrews and Walkers.
This talfie is created by firstselecting "Create a sales tat)le" from a menu, whichproduces a skeletal table structure without row or ?ol-mnn headings.
The nser then specifies the headingsby gesturally selecting value elements (at any level)from the domain models and dropping them into ap-propriate positions on the table.
Once the user is sat-istied with the format of the table, it is submitted tothe system where it is interpreted as a query againstthe database, and the derived results filled in.
TheFigure 2: Tabular sales querytable therefore has a standard "intersective" seman-tics, in which each cell represents tim summed totalof sales with respect to its corresponding row audcolumn constraints for examt)le , the top left-handcell in Figure 2 represents the total value of sales ofKrunchy in Oct-90 to Andrews.Each such report created by the user forms a dis-tinct window on the screen, and is therefore subjectto standard window management functions such asiconisation.
Importantly, the user can return to anexisting report at any stage and refine it to create anew view--by adding, expanding, deleting, or replac-ing report headings.Integrated Natural LanguageProcessingNatural language processing is based oil tile CoreLanguage Engine (CLE; Alshawi et at.
1989),wlfich performs application-indcpendent processingfrom string segmentation and morphological nalysisthrough to quantifier scopmg and discourse reference,and produces emantic logical forlYm as output.
TbeCLE contains "hooks" for al)plication-spceific mod-ules, and we have used these to augment he CLEwith an application-specific lexicm~, a set of rulesfor reference resolution in our domain, and a ,nodulefor evaluating the logical forms against he relationaldatabase.
The present coverage of the NL system issimilar to the gestural interface, in terms of the sub-ject of the query and the conceptual parameters ofthe query.
So we can ask questions about the valueof sales with respect o any of tbe three sales parame-ters (e.g.
Show the sales of Krunchy 250g for Q3-90)and questions about the sales parameters themselves(e.g.
What Andrews trading points are there?).
Itgoes beyond the graphics in supporting certain formsACRES DE COLING-92, NANTES, 23-28 AOU-r 1992 I 2 7 5 PROC.
OF COLING-92.
NANTES, AUG. 23-28.
1992of request which yield a simple textual response (suchas yes/no questions).
At present, natural anguagequeries and direct manipulation queries have separateroutes of access to the database, and we achieve theintegration described below by translating betweenthe two worlds at certain points in processing.The following sections present hree ways in whichwe have explored the integration of natural anguagewith the direct manipulation interface.
In each casewe argue that the integrated interface is superior tostand-alone, teletype-style natural anguage interac-tion.Vocabu laryA well-known problem with natural language inter-faces to databases i  that the user may be uncer-tain about the conceptual scope of the database andthe supported linguistic coverage (Hendrix, 1982).The graphical environment of our NL interface of-fers a partial solution to this problem, since the dis-played domain models remind the user of the linguis-tically available parameters of a sale.
In particular,each domain model communicates the range of sales-parameter concepts and values that can be referredto, and in doing so shows one way of expressing the re-lated content nominals in linguistic input.
For exam-ple, the temporal domain model indicates that the un-derlined forms in Get Krunchy sales for bweek 13-19May-90 are available as lexical expressions.
(We alsoallow for synonym~s in the NL, given the tendency torefer to "bweek', say, as "week".
)Note that the domain models are an appropri-ate site for lexical reference, since they abstractaway from the internal structure and content of thedatabase in order to provide a user-oriented "view"of the data.
For example, the temporal model depictsinformation from relational tables as a single hierar-chy, and combines distinct database fields to form sin-gle values within this hierarchy which are meaningfulto the end-user.Representat ion  o f  Quer iesThe user's natural anguage dialogue with the systemis displayed in a separate window in teletype form.Yes/no and "how many" questions elicit a simple tex-tual response, whereas the response to other queriesis a textual pointer (e.g.
See table 13) to a reportdisplayed elsewhere on the screen.
The decision onpresentation style is made by a set of rules indexedon the sentence form (e.g.
Wtl-question, imperative)and the requested class of data.Here we will consider those queries which requestsales figures.
Figure 3 shows a numeric summary ta-ble that has been produced in response to the inputShow all sales in Nov-90 to Andrews trading points.This linguistically created report is an "live" graphi-cal object which has exactly the same tabular seman-Figure 3: Tabular representation f Show all sales inNov-gO to Andrews trading pointstics as if it had been constructed by direct manipula-tion.
In fact, we can think of the table as a represen-tation of the natural anguage query in the languageof tabular queries.
The table readily expresses thelinguistic constraint in Nov-90 with the tabular la-bel "Nov-90".
The intensional expression Andrewstrading points cannot be represented irectly, sinceour tabular restrictions must be extensional valuesfrom the domain models and not intensional concepts.However, we can represent his intensional expres-sion indirectly in terms of its semantically equivalentextension--i.e, the set of all trading points related toAndrews.To display a natural anguage query and databaseresponse in this form, we must therefore not only re-trieve the correct values from the database, but alsogenerate row and/or column labels which correctlydefine the values in the table, x In general, this is anon-trivial task which ultimately requires ensitivityto the given/new information structure of the input;our approach uses information derived only from thelogical form of the query, and corresponding valuesfrom the database.
In the current version of our sys-tem, table labels are generated by the module whichevaluates CLE logical forms against he database, asit searches for sales values in accordance with the con-straints of the query.
For example, to find all sales inNov-90 to Andrews trading points, it searches for allsales values such that the following constraints hold: 2bmonth = nov - 90trading_concern -~ andrewstrading_point = tHere t is a free variable that will match any tradingpoint value.
Each time we find a matching sale value,we record, with this value, the corresponding valuesof the attributes bmonth, trading_concern, aud trad-ing_point.
This results in a set of tuples of the formIAn alternative approach is simply to generate the tabularconstraints, and rely on tabular query processing to producethe a~les totals.
We have not explored this approach.2Note that the notation here has been simplified for thepurposes of exposition.Acrl~s DE COLING-92, NANTES, 23-28 AOUT 1992 I 2 7 6 PROC.
OF COLING-92.
NANTEs.
AUG. 23-28, 1992<sale_value, bmonth, trading-concern, trading.point>,such as:< 333,nov-90,andrews, 181 >< "/03,now90,andrews, 36"/ >< 885,nov-90,andrews, 2717 >if 181, 367, and 2717 are the only Andrews tradingpoiuts to have bought goods in November 1990.
Sucha set of tuples can then be transformed into a treestructure which removes the repetition of values ap-parent in the set of tuples.
This tree structure corre-sponds to a correct labelliug of the table, where eachnode represents a label.This approach extends to the representation f aclass of more complex expressions involving negation,coordination and quantification.
For example, underthe wide-scope reading of sales to all trading concernsexcept Andrews and Walkers, we find all trading con-cerns such that there is a sale with the following con-straints:trading_concern = tt ~ andrewst :~ walkersIlere wc generate a setof tuples of the form <sale_value,trading.concern>,where trading_concern will vary over all concerns ex-cept the excluded stores.As an example of a reading which we cannot rep-resent in a tabular query, consider Total the sales forJan-90 and Feb-90.
ttere we can express the read-ing in which two totals are required, mapping to atable with one cell for each month.
But we cannotexpress the reading where the user would like to see asingle cell table, corresponding to the summed salesof January and February, because such a query can-not be specified in the tabular language.
Hence, thisreading is blocked, because the rules which transformthe set of tup|es {<sale_value,braonth>} intoa treestructure do not allow distinct values (i.e.
jan-90 andfeb-90) to be represented by a single node in the labeltree.Hence it is not possible to represent all naturallanguage queries in our simple intersective, tabularlanguage, because the former can be much more ex-pressive.
However, our interface approach alleviatesthis problem to a good extent, since tabular salessummaries are just one of a variety of gestural querydevices at our disposal (i.e.
those mentioned earlierin the paper) to express the communicative contentof a natural language query, and we can add others asthe need arises.
None of our gestural query methodshave the expressive power of a relational query lan-guage such as, say, QBE (Zloof, 1975); rather, we havecreated a set of graphical access methods tailored toour target users' needs, which strike a balance be-tween expressive power and ease of use.
We decidedon the range of our query devices by analysing thetranscripts of the users' real sessions with the exist-ing natural anguage front-end, in addition to otherforms of analysis, such as interviews with target users.Given that natural anguage and direct manipula-tion both yield the same tabular output, what is theadvantage of supporting two modes of query, ratherthan one?
First, the user can build-up a table us-ing whichever mode or combination of modes is mostproductive.
By combining the presentation of gestu-ral and linguistic queries, a linguistically generatedreport can be refined and extended by the direct ma-nipulation operations described earlier.
In the follow-ing section we will see how natural anguage querycan extend an existing table, completing the circleof mixed-mode dialogue.
Many of the distinguish-ing and productive features of natural language docu-mented by Walker (1989), such as coordination, ega-tion and quantification, can he beneficially appliedto ti~e present ask.
So a user may start a querytable with the request Find sales for the \]irst weekin every month, exploiting the rich quantificationalstructure of English to swiftly generate a set of labelsthat would take a good many point-and-click actions.The user may then wish to fitrther parameterise thisquery with certain products which are best selectedvisually (perhaps because their spelling is difficult toremember).Second, our user studies in this and other domainshave shown that there are differences in the prefer-ences of individual users.
Some users simply preferthe feel of, say, natural anguage interaction, for rea-sons which are difficult to explicate with thcoreticalfactors such as those above, llere the user may issueeven gesturally simple commands like Open front thelinguistic command line.Re ference  to  Past  Quer iesGiven the exposition so far, we call construct a newtable with either natural anguage or gestures, butcan only modify an existing table using direct manip-ulation.
To complete this picture of multimodal dia-logue, wc must also allow linguistic queries to refer topast tables and from them specify modified versions.In our application domain, we expect users to haveseveral reports open on their screen at any one time,and identifying an individual table solely in ter~rm ofthe content of a referring expression can be arduous,if not impossible.
One option is to name the reportusing its unique identifier.
In common with manyother systems (e.g.
Kobsa et al, 1986), we also allowthe user to refer to aJt object by pointing to it.
Ourpresent system only allows one such deictic referenceper sentence, and behaves &q follows.
At any point,the user can click on a button on a table to make it the"context" for the next linguistic query.
If this actionoccurs, an anaphoric referring expression, like $heseAndrews sales in Show these Andrews sales as a barchart, is then taken to refer directly to the contextualACIES DE COLING-92, NAN'IT.S, 23-28 AOU-V 1992 l 2 7 7 PROC.
OF COL1NG-92.
NANTES, AUG. 23-28, 1992table, assuming that the content of the expression(in this case, Andrews sales) does not contradict thecontent of the table.
However, if the context button ispressed and then followed by the use of a definite nounphrase, as in Show the sales for Jan-gO, then the tableis seen as providing the universe of reference (i.e.
theset of sales specified by the table) for the sales forJan-gO, rather than the referent itself.
In this case,then, the query will yield a new table which combinesthe constraints of the contextual table with the Jan-90 constraint provided by the definite NP.For completeness, the primary objects arising inthe discourse are tracked using the CLE's discoursemodel, which is based on a salience-ranking view ofdiscourse reference.
We track all tables that the userhas created and evaluated, whether through directmanipulation or natural anguage, rather than justthose arising from the linguistic dialogue.
If a salestable is uniquely salient (because, say, it was themost recently created) in the discourse model, thenan anaphoric expression such as these sales will betaken as referring to this table (without the need forpointing), and the query Which of these sales is forWalkers?
will accordingly produce a new table ex-tended with the label "Walkers" 3In the future we intend to experiment with schemeswhere more general gestural actions affect he salienceof objects in the discourse model.
For example, "low-ering" or iconising table windows on the screen couldreduce their salience rating, whereas "raising" themwould increase it.
Although this is an over-simplifiedview of how to track the user's focus of attention,such schemes would give the user the potential formore explicit control over the working set of objectsavailable for reference.
4 This scheme, and our imple-mented treatment of multimodal reference, thereforesupport a flexible form of discourse reference which ismore unnatural  to attain in teletype-style inguisticdialogue.ConclusionThe previous ections have explored the consequencesof a thorough integration of a gestural method ofquery and natural anguage query in the context ofa specific database application.
We considered thecase where the coverage of the two styles is similar,in terms of the range of expressible queries, and havedemonstrated that several benefits acrue from this in-tegration.
First, by translating a user's NL query intoa graphical query, we support a flexible approach tothe specification of the query, in which the user canSCurrently, lash'tinge can add but not alter table labels, aswould be required for the elliptical reading in which Walkexareplaces an exl-tinlg store name.t Cohen et al (1989) advocate a similar technique in whichthe user can direct manipulate the visually displayed tree struc-ture of the discotm,e.
However, in our proposal the discoursest~cture :- inherent in the visual ayout of the screen, withoutthe presentation /meta-\[evel information about he dialogue.employ whichever combination of modes is best suitedto the "micro" tasks involved in query specification.Second, the visual interface gives implicit guidanceto the user as to the coverage of the natural anguageinterface.
Third, the use of direct manipulation tofocus discourse reference offers a more flexible dia-logue structure than found in a pure NL interface.
Inthe future it would be profitable to empirically assessthese present implemented proposals, and investigatefurther computational issues, such as the generationof linguistic descriptions of gestural actions.AcknowledgementsMany of the ideas discussed in this paper were devel-oped through conversations with Andrew Nelson, whoalso implemented the algorithm for mapping relations intominimal-node trees.
The direct manipulation i terfacedescribed here was implemented by Andrew Nelson andSteve Loughran.
Thanks also to David Adger, Phil Stewton, David Frohlich and Lyn Walker.Re ferencesAlshawi, lI., Carter, D. M., van Eijck, J., Moore, R. C.,Moran, D. B., Pereira, F. C. N., Pulman, S. G. andSmith, A. G. \[1989\] Research Programme in Natu-ral Language Processing: Final Report.
SRI ProjectNo.
2989, SRI International Cambridge ComputerScience Research Centre, Cambridge, U.K.Cohen, P. R., Dalrymple, M., Moran, D. B., Pereira, F.C.
N., Sullivan, J. W., Gorgon, R. A., Schlossberg, J.L.
and Tyler, S. W. \[1989\] Synergistic Use of DirectManipulation and Natural Language.
In Procs.
ofCHI-89, Austin, Texas, May 1989.Frohlich, D. \[1991\] Evaluation of the SAMI System Pro-totype.
Technical Report No.
HPL-92-17, Hewlett-Packard Laboratories, Bristol, U.K.Hendrix, G. \[1982\] Natural Language Interface.
Compu-tational Linguistics, Vol.
8, No.
2.Klein, E. and Pineda, L. A.
\[1990\] Semantics and Graph-ical Information.
In Procs.
of INTERACT-90.Kobsa, A., Allgayer, J., Reddig, C., Reithinger, N.,Schmauks, D., Harbusch, K., and Wahlster, W.\[1986\] Combining Deictic Gestures and Natural Lan-guage for Referent Identification.
In Procs.
o\]COLING.86, Bonn, Germany.Stock, O.
\[1991\] Natural Language and the Explorationof an Information Space: the ALFresco InteractiveSystem.
In Procs.
of 1JCA1-91, Sydney, Australia.Tennant, H., Ross, K., Ssenz, R., Thompson, C., andMiller, J.
\[1983\] Menu-based Natural Language Un-derstanding.
In Procs.
of ?1st ACL, Cambridge,Mass., June 1983.Wahlster, W., Andre, E., Graf, W., and Rist, T. \[1991\]Designing Illustrated Texts.
In Procs.
o.f 5th EACL,Berlin, Germany, April 1991.Walker, L. \[1989\] Natural Language in a Desktop En-vironment.
In Procs.
o.?
HCI International '89,Boston, Mass.Zloof, M.. \[1975\] Query by Example.
In Procs.
of AFIPS44 NCC, 1975.ACRES DE COLING-92, NANTES, 23-28 Aofrr 1992 I 2 7 8 FROC.
OF COLING-92, NAlcrt/s, AlJo.
23-28.
1992
