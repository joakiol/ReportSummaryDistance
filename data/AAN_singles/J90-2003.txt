AN IMPLEMENTABLE SEMANTICS FOR COMPARATIVECONSTRUCTIONS 1Manny Rayner and Amelie Banks 2Swedish Institute of Compu~ter ScienceBox 1263S-164 28 KISTASwedenWe describe a comprehensive tr atment of the syntax and semantics of comparative constructions based ontheoretical work by Pinkham, which can be implemented in a relatively straightforward fashion within afeature-based phrase-structure grammar.
Comparatives are divided up into "clausal" and "phrasal"constructions; in contrast to most previous theories, however, phrasals are not regarded as reduced forms ofclausals.
We begin by defining a Montagovian semantics for phrasal comparatives that directly linksinterpretation rules to the surface syntactic structure; we 1then show how this solution can be madecomputationally more efficient by "factoring" the interpretation through an intermediate level of representa-tion, using a method similar to that used for dealing with scoping phenomena.
Detailed examples areprovided, showing how the method can correctly describe the semantics of a variety of superficially widelydifferent comparative constructions.
The ideas have all been implemented within a large-scale grammar forSwedish, a "toy" version of which is presented, along with examples of the output.1 INTRODUCTION1.1 OVERVIEWThis paper is written with two different, though to someextent overlapping, audiences in mind.
On the practicalside, we address ourselves to the natural language interfaceconstructor, who wants to expand the coverge of her systemso as to incorporate comparative constructions; the state ofthe art has now progressed tothe point where it is generallyacknowledged that this 4s a problem that a serious ystemmust attempt o deal with.
In the following, we will thusattempt o describe our ideas in a sufficiently concretefashion that they can be used as an implementation guide.Typical examples of comparatives according to the tradi-tional classification are the following:Clausal comparatives1) Mary was happier in New York than John was inLondon.2) John has more books than Mary has newspapers.3) The table is longer than it is wide.Comparative ellipsis4) John is taller than Mary.5) Few people run as fast as John.6) John bought more books than Mary.7) John was happier in New York than in London.8) Mary had more friends than John thought.9) John hit Mary harder than he meant o.10) \]More men than women bought he book.11) \]More people voted for the proposal than against.12) John likes Mary's house better than Mary John's.Unclear cases13) More than 50 people signed the petition.14) Mary needs a larger car than this Fiat.15) .John ran faster than the world record.16) John was born in the same city as Mary.17) John arrived before Mary.On tile theoretical side, we want to re-examine some funda-menta\]L questions about the nature of the comparativeconstruction, and in particular about he phenomenon gen-erally referred to as "comparative ellipsis"; by this, wemean comparative constructions like those listed above inwhich the element after the comparative marker is not aclause, and which traditionally have been explained interms of various kinds of deletion rules.
Here, we will arguethat, in most common cases, it is by no means necessary topostulate syntactic deletion operations.
We will claim,rather, that it is possible (and indeed simpler) to assign asyntactic representation to such constructions that closelyfollows the apparent surface constituent s ructure.
We willthen slhow how to define semantic interpretation rules forsuch s~ructures, which at no level reconstruct a representa-tion ,of' a syntactic lause, but rather operate on the princi-ple of directly comparing constituents of similar type.
Tohighli~,ht the difference between our approach and the86 Computational Linguistics Volume 16, Number 2, June 1990Mammy Rayner and Amelie Banks An lmplementable S mantics for Comparative Constructionstraditional one, we will refer to constructions handled bythis method as examples, not of comparative ellipsis, butrather of contrastive comparison.Our opinion is that the issues we are raising are probablyapplicable to most grammatical frameworks subsumed un-der the feature-based phrase structure grammar paradigm;this includes established formalisms like LFG, GPSG,HPSG, PATR-I I  etc., and a vast number of more or lessobscure formalisms in use around the world.
At risk ofoffending everybody and pleasing nobody, we will make noparticular attempt to align ourselves with any one of thesetheories; in Section 1.2, we will describe in general termsthe properties we will expect a framework to possess, if it isto be capable of supporting the type of operations we willneed.
Basically, we will demand istinct levels of represen-tation for constituent structure, function-argument struc-ture, and logical form, related in the normal way; we willalso require certain constructions tobe treated as syntacticconstituents.
Most of this will be quite uncontroversial.To clear the decks before moving into action, we nowspend a couple of paragraphs making clear which questionswe are not attempting to answer.
We regard the lexicalsemantics of comparatives a being outside the scope of thepaper; we are only interested in determining how thephrasal semantics can be derived from them.
We explainexactly what we mean by this statement in Section 1.2.
Wewill ignore complex comparative operators ("more thantwice as much as"; "at least two inches longer than threetimes as long as"); these are well dealt with in Ballard(1988), and in any case do not seem to pose fundamentaldifficulties.
For similar reasons, we refrain from discussingdeterminers with phrasal comparatives, like "more thantwo" or "at least half": here, the most comprehensivereference is perhaps Keenan and Stavi (1986).
We alsoignore certain idiosyncratic constructions ("as fast as ever";"as much as usual"), which do not seem to fit any patternknown to us.In our treatment of clausal comparatives, we will presenttwo slightly different variants of a solution.
The first issimple to implement, and appears capable of giving correctsemantics to most normal examples; however, it fails to giveboth readings for the notorious Russell example, "I  thoughtyour yacht was longer than it is."
The second solution, onthe other hand, is capable of dealing with this kind ofsentence, but needs a number of additional scoping rules.We say more about his in Section 4.With regard to cross-linguistic coverage, we will restrictourselves to English, Swedish, and a few other languages inwhich the comparative construction is syntactically similarin nature; this actually appears to include most Europeanlanguages.
Although we suspect that our results are proba-bly applicable to at least some languages outside thisgroup, 3 we shall not make any further attempt o lendcredibility to this claim.The organization of the rest of the paper is as follows.
InSection 2 we review previous work: in particular, we pointout what we regard as the main weaknesses of the deletionmethod, and summarize earlier attempts to describe phrasalcomparatives by direct interpretation methods.
The nexttwo sections contain the main results of the paper.In Section 3, we examine contrastive phrasal compara-tives.
We begin by defining a Montagovian semantics forthese, and then show how this can be improved by"factoring" it through an intermediate l vel of representa-tion, in which the "contrasting" relationship betweenphrases is left undefined.
We then go on to show how thismethodology can be used to provide a readily implement-ablesemantics for a wide variety of contrastive construc-tions, which also gives a simple explanation of the ambigu-ity of certain comparative s ntences.
Section 4 then goes onto describe our treatment of clausal comparatives, which islargely adapted from the work reported in Klein (1980)and Pinkham (1985).In Section 5 we briefly discuss noncoreference of com-pared objects; we also look at sentences containing thewords "before" and "after," pointing out some differencesbetween these and comparative s ntences.
A corpus analy-sis, which gives some indication of the relative frequenciesof the various constructions, is presented in Section 6.
InSection 7 we summarize our results.The theoretical ideas advocated here were first developedand tested in practice within the framework of the SNACK-85 project (Rayner and Banks 1986; 1989).
In Appendix 2we give the complete program code for a "scaled-down"version of the system, which handles all the constructionsdescribed in the main body of the paper, and in Appendix 3we show examples of the system's output.1.2 THEORETICAL ASSUMPTIONS1.2.1 GENERAL REMARKS ON THE THEORETICALFRAMEWORKIn this section, we attempt o summarize the theoreticalassumptions needed to support our arguments.
The mainbody of the paper is Section 3, which deals with phrasalcomparatives: here we present our theory in two separateforms.Version one is a Montague grammar, modified slightly toallow use of generalized quantifiers.
This has the advantageof theoretical elegance, but as we shall see is computation-ally unattractive.
We consequently recast it in a form moresuitable for implementation purposes, which draws its inspi-ration from the well-known treatment of scoping phenom-ena originally described in Woods et al (1972); laterelaborations and refinements have been implemented in anumber of systems, notably CHAT-80 (Pereira 1983),TEAM (Grosz et al 1986), and CLE (Moran 1988; Alshawiet al 1989).
We will continue to use this framework inSection 4, where we consider clausal comparatives, andnow describe it in more detail.Most importantly, we have three distinct levels of linguis-tic representation, which we refer to as syntax, quasi-logical form, 4 and logical form; we stress that these termsare merely used for convenience, and are not to be read asreferring to any specific linguistic theory, Chomskian orotherwise.
The levels will encode the following information:Computational Linguistics Volume 16, Number 2, June 1990 87Manny Rayner and Amelie Banks An Implementable S mantics for Comparative ConstructionsSyntax.
At this level, the structure of the sentence isrepresented as a phrase structure tree, where each node isassociated with a set of features.
We will make two assump-tions about the feature structure.
First, we distinguish aspecial feature, which encodes the quasi-logical form of aconstituent; not all nodes need possess this feature.
Second,there will be some mechanism that permits the definition oflong-range dependencies, by allowing features in differentconstituents oshare information.Quasi-logical form (QLF).
This level encodes the predi-cate-argument structure of the phrase; the only demand wewill make is that, like any other feature value, its value canbe derived entirely by phrase structure rules with featureunification.
(This is in spirit similar to a compositionalityrestriction, but is weaker.
)Logical form (LF).
At this level, the sentence is associ-ated with an expression i a (generally higher-order) predi-cate calculus; the logical form of a sentence will be deriv-able from its quasi-logical form by application of rewritingrules representing scoping and other transformations.
Sincethere is little agreement concerning the representation flogical forms, we now say a few words about the less usualfeatures of our system.First, we will find it convenient to treat events as objects,since this can often greatly simplify the semantics of adver-bial modification.
For example, we will represent GustavIII ruled for 21 years as something like3 e. event_type(e, rule)dlagent(e, cyastav_iii)/i dtu ation(e, 21 )We will also make extcnsive usc of gcneralized quantifiers(Barwise and Cooper 1981 ); these will play a kcy role in ourreprescntation of comparatives.
We will not, however, uscBarwise and Cooper's notation, which involves combining adeterminer and a set-descriptor to form a quantifier, butrather will take the equivalent approach of treating deter-miners as two-place higher-order predicates on sets.
Wewill use {N l~b(N)} for the determiner "A  number N suchthat qb(N)": thus we writeno(rose, hx.send(john, x,mary))for "John sent no roses to Mary,"{N IN<SKroso,M~.send(john,x, mary))for "John sent less than 5 roses to Mary," andINI 3 N'.N<N'&{N'\](rose, Xx.rose(x)ddn(x,garden))}(rose,hx.send(iohn,x, mary))for "John sent fewer roses to Mary than there were roses inthe garden."
Formulas like the third one above will occurfrequently in Section 3, and we advise the reader to spend aminute at this point making sure that she understands thenotation.1.2.2 SPECIFIC SYNTACTIC AND SEMANTICASSUMPTIONSThe basic scheme, or some not too distant relative, is theone used in many large-scale implemented systems; asexamples, we can quote TEAM (Grosz et al 1987), PUN-DIT (Dahl et al 1987), TACITUS (Hobbs et al 1988),MODL (McCord 1987), CLE (Alshawi et al 1989), andSNACK-85 (Rayner and Banks 1986).
It also has closelinks with theoretical work in situation semantics (Pollardand Sag 1988; Fenstad et al 1987).
We start by enumerat-ing tlhe basic syntactic onstituents S, NP, VP, DET, AP,ADVF', PP; as far as our ontological commitments go, weneed a set of THINGS, a set of EVENTS, and a set of DEGREES.We will assume that DEGREES are isomorphic to some kindof numbers.An NP will consist of a DET and a CN (we borrow thisnonstandard term for N-bar from Montague grammar).
ADET will semantically correspond to a generalized eter-miner, and a CN to a subset of THINGS.
An NP will thusbecome a generalized quantifier.A VP consists of a VERB, followed by a list of VERB-ARGs (or just ARGs), by which we mean its obligatoryand optional complements.
An ARG is represented atQLFlevel as a pair (arg-type, arg-value).
We will need at leastthe following kinds of complements: NP, PP, S-COMP (asuitab\]~e S), VP-COMP (a suitable VP), APs.
Semanti-cally, a verb will be associated with a subset of EVENTS,which we can think of as a type of event, state, or situation.The VALUE of each ARG will also be semantically repre-sented by a suitable object, and the ARG-TYPE willtranslate to a relation between the verb-object and therepresentation of the ARG-VALUE.
We will require aspecial kind of QLF node, called an abstraction, to repre-sent VPs, APs, and other constituents whose denotation isafunction from individuals to propositions; one component ofthe abstraction node will be the abstracted variable.A scalar adjective A translates to a two-place predicateA'(x, d) on OBJECTS ?
DEGREES, with the interpretation: theobject x is A' to degree d. Similarly, a scalar adverb Atranslates to a two-place predicate A'(x, d) on EVENTS XDEGREES, with the interpretation: the event x is A' to degreed.
We will assume that degree expressions like "more,""less,'" or "at least twice as much as much as" translate totwo-place predicates on DEGREES ?
DEGREES.
Since we areassuming that DEGREES are numbers, it will also makesense to use a generalized quantifier as the second argu-men't o an adjective: for example, A(x, {N IN <2}) will beinterpreted as "x is (less than 2) A.
"We will also need to be able to form "slash categories" orsomething similar.
In particular, the following will berequired (in each example the "gap" is represented as anunderscore):S /DET (e.g.
"John bought _ vases")S /NP  (e.g.
"John gave _ to Mary")S/S-COMP (e.g.
"John probably believed _ ")S/VP-COMP (e.g.
"John presumably meant o _ ")A rnore exact formulation of the basic question we areattacking is thus:In terms of the above framework, state rules by which wecan systematically calculate the denotation of a complexexpression involving a comparative construction in terms of88 Computational Linguistics Volume 16, Number 2, June 1990Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionsthe denotation of its scalar adjectives and adverbs, thedenotations of its degree expressions, and the denotations ofits other constituents.2 PREVIOUS WORK ON COMPARATIVESThis section will summarize relevant previous work oncomparatives; we begin by listing sources.
So far, there hasbeen a surprisingly small amount of work done in computa-tional frameworks: the only major attempts known to usthat integrate syntactic and semantic processing are thosereported in Ballard (1988) and Friedmann (1989).
Limitedsyntactic/semantic coverage has appeared in some othersystems (e.g.
DIALOGIC \[Robinson 1982\] and CLE\[Alshawi et al 1989\]), and the Linguistic String Project(Sager 1981) has an advanced syntactic overage.On the theoretical front, we have been considerablyinfluenced by Bresnan (1973), Hankamer (1973), Pinkham(1985), and Klein (1980), especially the last three; we werealso surprised to discover at a late stage of our research thatunpublished work by Heim (1985) and Krifka (1987) hadpursued a course almost parallel to our own.
We now go onto describe what we regard as relationships between thesetreatments and ours.We will start by looking at clausal comparatives, wherethe immediate problem is clearly to account for the appar-ent "missing material" in the comparative clause.
An earlyand still very influential study of comparative constructionsis that of Bresnan (1972; 1973; 1977), working within trans-formational grammar; the key concept is the introductionof the rule of Comparative Subdeletion, which will forexample derive sentences like la) and 2a) by deleting thebracketed material from the base forms 1 b) and 2b).1 a) John bought more books than Mary bought.1 b) John bought more books than Mary bought \[x manybooks\].2a) John bought more books than Mary bought records.2b) John bought more books than Mary bought \[x many\]records.Although Comparative Subdeletion explains many of thefacts, it makes a number of erroneous predictions.
A verylong and thorough criticism was advanced in Pinkham(1985), where reasons are given to believe that it is prefera-ble to adopt an analysis that represents the "missing"material as (in English) null proforms; these are bound tothe head of the comparison by a mechanism that Pinkhamcalls Quantifier Binding.
Pinkham's view of the clausalcomparative has many points in common with that pro-posed in Klein (1980), in the context ofa GPSG/Montaguegrammar framework, although Klein only really considerssentences ofthe type in example 2); our own treatment willin this respect be similar to Pinkham's and Klein's.Like Bresnan and Pinkham, but unlike Friedmann(1989), we will also regard the comparative clause as ingeneral modifying the comparative head in the main clause,as opposed to treating the two clauses as parallel; wediscuss further in Section 4 the reasons behind this deci-sion.Moving on to phrasal comparatives, there would appearto be two basic approaches.
The earlier and more commonone is to treat these as reduced forms of clausal compara-tives; for example, Hankamer (1971) introduces a rule of"C-ellipsis," which deletes material from the comparativeclause under identity with material in the main clause.Thus for example, 3a) and 4a) would be regarded asreduced forms of 3b) and 4b), where the bracketed mate-rial has been deleted:3a) John bought more books than Mary.3b) John bought more books than Mary \[bought x manybooks\].4a) John bought more books than Mary thought.4b) John bought more books than Mary thought \[that hebought x many books\].In a computational treatment, this means that the deletionrule has to be "reversed," so as to reconstruct the deletedmaterial from the phrasal remnant: this is the method usedin Sager (1981) and Friedmann (1989).However, a number of researchers have showed thatthere are drawbacks to the "C-ellipsis" account.
Althoughboth Hankamer and Pinkham use C-ellipsis in their theo-ries, they also provide strong evidence for the existence of atleast some comparatives that are not elliptic in nature(Hankamer 1973; Pinkham 1985).
Three examples areshown in 5)-7), where Pinkham in each case argues thatthere are severe difficulties involved in deriving a sentenceof this type from a clausal comparative; the natural choicein a transformational framework is to regard the italicizedportions as base-generated phrasal.5) I invited more men than women.6) John ran faster  than the world record.7) Mary looks taller than John when she wears highheels.Of particular interest here is Pinkham's treatment of exam-ples like 5), which are interpreted using a rule that she calls"distributive copying."
5) receives the logical form 5a),which after distributive copying becomes 5b).
Although thedetails of the solution are not fully worked out (in particu-lar, the notation is never given a formal semantics), theintuitive idea is clearly that of duplicating a "shared" or"matrix" predicate, substituting in the two compared ele-ments in a suitable way.5a) I INVITED (MORE \[ql (ql men), q2 (q2 women)\])5b) MORE \[ql (I INVITED ql  men), q2 (I INVITED q2women)\]Similar suggestions have also been made in a rather dif-ferent context by Keenan and Stavi (1986; 282-284); con-sidering the semantics of comparative adjectival construc-tions like that in 8a), they argue convincingly that these areto be regarded as directly interpreted, rather than as re-duced forms of sentences like 8b) or 8c):Computational Linguistics Volume 16, Number 2, June 1990 89Mammy Ra~er and AmeHe ~nks An Implement~ble S mantics for Comparative Cons~ucfiomus8a) More male than female students passed the exam.8b) More male students than female students passed theexam.8c) More male students passed the exam than femalestudents passed the exam.We should also mention the work of M cCord (1981; 1985;1987) on "focalizers"; the key notion we borrow is the useof rewriting rules on semantic representations, to produce alogical form in which contrasted items appear at the samelevel.
Although McCord does not attempt, as we do, tojustify his operations formally, the intuitions behind themclearly overlap to a large extent with ours.In our own treatment of phrasal comparatives, we takeall these ideas to their logical conclusion: we dispense withthe C-ellipsis rule altogether, and regard all nonclausalcomparatives a essentially phrasal, interpreting them by amethod analogous to Pinkham's distributive copying.
Theabstract scheme is concretely implemented in the form ofrewriting rules, which are applied to an intermediate quasi-logical form.
A solution along these lines, which builds onpreviously reported work (Banks 1986; Banks and Rayner1987; Rayner and Banks 1988), is described in Section 3.As we complete this article, we discover that a similarapproach for German comparatives has independently beensuggested by Krifka (1987); Krifka also proceeds by usingdirect interpretation rules involving contrasting of com-pared constituents, although the details of his analysis arein some respects fairly different.
The following is a typicalexample: 9a) is given the semantics represented by 9b),where pdO(d) is to be read as "the maximum d, for whichO(d) holds," and KOMP(x, y, f) is defined byKOMP(x, y, ~) ,~.
<I,(x) > ~y)9a) Ich babe ihr bessere ZahNrtzeI have him better dentistempfohlen als du.recommended than you-NOM.
(I have recommended him abetter dentist han you \[did\]).9b) KOMP(ich, du, hxpd\[x hat ihr d-gute Zah~irtzeempfohlen\]).3 PHRASAL COMPARATIVES3.1 BASIC IDEASAs we have already indicated, our strategy for handlingphrasal comparatives will be to provide direct interpreta-tion rules, rather than to assume the existence of deletionrules and attempt to reconstruct a clausal comparative.
Inthe preceding section, we referred to a number of authorswho have pointed out weaknesses in the C-ellipsis theory;using their arguments and some of our own, we nowdescribe our reasons for preferring our method to thetraditional one.Our fundamental rgument will be Occam's razor: espe-cially from the implementation viewpoint, assuming thatphrasals are derived from clausals has little real explana-tory power.
Since the authors quoted above give goodtheoretical arguments to show that at least some phrasalcompa:ratives are not the result of C-ellipsis, we are at anyrate \[going to have to provide direct interpretation rules forthese cases.
If it then turns out that these rules can besystematically extended so as to cover the other phrasalcomparatives a well, we can dispense with C-ellipsis alto-gether and arrive at a simpler system.
We claim that this isexactly what we have done.It is worth looking a little more closely at the case inwhich the comparative complement is of the form than NP;this is certainly the one that occurs most commonly inpractice.
The first point is well known, and was first de-scribed in detail in Hankamer (1971): in English (and infact a good many other languages), it is possible to extractout of contrastive NP complements, but not from clausalcomparative complements.
For example, compare 10a)with 10b):10a) ~Vho i does John run faster than tt?10b) *:Who i does John run faster than t,.
runs?The relevance of this observation is obvious: if contrastiveNP complements really are elliptic forms of clausal comple-ments, we would appear to need some mechanism by whichsomething originally an extraction island could cease to beone when a reduction is performed.
This would be a veryunusual phenomenon, which it would certainly be prefera-ble to ~Lvoid introducing into a syntactic theory; rather thando this, it seems much simpler to treat the two construc-tions a:~ fundamentally different, as we have done.Another fairly clear-cut piece of evidence can be found inSwedish, where a different possessive pronoun is used de-pending on whether the comparative is clausal or phrasal,as in 1 la) and 1 lb).
Here, the point is that sin refers backto the ~ubject of the clause, while hans refers to a nonsub-ject NP in the same clause, or an NP in a different clause.Once :again, this would be strange if the comparativecomplement in 11 a) were a clausal remnant.l la) Sven kSpte tier bScker ~in sin far.Sven bought more books than his father.1 lb) Sven kSpte tier b~Scker ~in hans far gjorde.Sven bought more books than his father did.However, in practice the biggest problem seems to be that itis not easy to provide a satisfactory definition of the C-ellipsis deletion operation; to be more exact, we need todefine the inverse of this operation, so as to reconstruct thecomparative clause from the reduced form.
A relativelysimp\]\[e example is 12a), which we quoted in Rayner andBanks (1988); the sentence is also discussed at length byFriedmann.
Here, a naive definition of "deletion of identi-cal material" will result in reconstructing 12b); what wewant is.
rather 12c), which requires an NP to be regarded as"identicar' to a pronoun bound by it.90 Computational ~ng~sf ics Volume 16, Num~r 2, June 1~0Manny Rayner and AmeHe Banks An lmplementable S mantics for Comparative Constructions12a) Every tourist spent more in London than in NewYork.12b) Every tourist spent more in London than every touristspent in New York.12c) Every tourist spent more in London than he spent inNew York.Friedmann's solution to the problem begins by reconstruct-ing a form like 12b), and then makes use of rewriting rulesthat "merge" the two occurrences of every tourist into asingle quantifier that has wide scope over the whole sentence;the final result is essentially 12c).
This idea is, however,open to several criticisms.
To begin with, it has littlelinguistic motivation; more important, it is difficult to seehow to extend it to handle harder cases without addingmore ad hoc rules.
For example, getting the normal("sloppy") reading of 13a) by Friedmann-like analysisseems to involve transforming it to something like 13b),which rather begs the question of how to account for thedifferent possessive pronouns in the two clauses.
On adirect-interpretation account, however, the intended read-ing for sentences like 13a) can be derived in a natural way;we describe how this can be done in Section 3.4.6.13a) Few men are as loyal to their country as George (is).13b) Few are as loyal to their country as George is loyal tohis country.The remainder of Section 3 will give a detailed escriptionof our version of the direct-interpretation method.
We startin Section 3.2 by showing how to construct a Montagoviansemantics for a fragment containing phrasal constructions;the basic trick is to have a phrase structure rule thatcombines a syntactic structure with a pronoun-like "slot," a"filler" for the "slot," and an element of the same semantictype as the "filler," against which it is contrasted.
This rulecan then be linked in the normal way with a correspondingsemantic rule, which defines the semantics of the compositestructure in terms of the semantics of its constituents.However, this has the same drawbacks as the originalMontague treatment of scoping phenomena, namely thatwe are introducing phrase structure rules that lack syntac-tic motivation.
Consequently, we introduce in Section 3.3 acomputational version of the theory; here we perform inter-pretation in two stages, with the intermediate QLF level ofstructure interposed between phrase structure and logicalform.
At QLF level, comparative phrases are linked to theassociated graded element, but not to the element they arecompared against.
A subsequent transformation of theQLF structure introduces links between compared ele-ments, resulting in a form that can be converted into an LF.At the penultimate stage, we will have a higher-orderfour-place predicate, which takes the following arguments:the two contrasted elements, the way in which they arecompared, and a parameterized "matrix" formula contain-ing two "slots," one for the degree, and one for the con-trasted element.In Section 3.4 we give examples showing how our frame-work can be used to define the semantics of a variety ofphrasal comparative complements, and also touch brieflyon the question of ambiguity in phrasal comparative eonostructions.
Finally, in Section 3.5 we say a few words abouthow the theoretical ideas presented above can be realizedconcretely within a unification-based grammar.3.2 MONTAGOVIAN SEMANTICS FOR PHRASALCOMPARATIVESWe now proceed to show how the intuitive picture sketchedout in Section 3.1 can be expressed formally in terms ofMontague grammar; the technical idea is essentially in-spired by the PTQ treatment ofscoping phenomena 5 (Mon-tague 1972; Dowty et al 1982, pp.
203-215).
There arethree slightly different variants of the method, one forconstituents of type t (clauses), and two for constituents oftype (e, t ) (VPs, APs).
Since we are treating adverbials asproperties of verb-objects, ADVPs will also fall into thissecond group.For each variant, we have a rule-schema, parameterizedby the syntactic type of the comparative complement; wecall this constituent COMPLEMENT, and we also assume theexistence of a "proform" that can stand for constituents oftype COMPLEMENT.
An example of such a proform will bewritten as c-proform i for some suitable i.
We will also needa set of proforms to stand for determiners; we will writethese as q-proform i.
Finally, we will assume a syntacticclass COMP-OPERATOR, which will include expressionslike more, less, at least twice as much, and so on.
Thedenotation of an expression in COMP-OPERATOR willbe a constant two-place relation between degrees.We then add syntactic rules, to say that a constituent oftype COMPLEMENT can be realized as c-proformi, and thatits denotation is a variable e i of the appropriate type;similarly, a determiner can be realized as q-proformi, andits denotation will be a variable qi of the type associatedwith degree expressions.
Since the semantic rules are alldefined relative to a variable-substitution g, it naturallyfollows that the truth conditions for a phrase containingany of these proforms depends on the values assigned by gto the associated variables.We are now in a position to define the syntactic rule-schema for composition of phrasal comparatives.
We firsttake the simpler case, where the phrase is of clausal type;the input to the rule will be the following:1) A phrase ?
of type S, containing occurrences ofc-proform i and q-proform i for some i and j.2) Two phrases A!
and A 2 of type COMPLEMENT.3) A phrase ~ of type COMP-OPERATOR.and produces as output the phrase Comp(~, Al, A2, ,It)constructed by doing the following:a) Replace c-proform i in ?
by the phrase A 1.b) Replace q-proform| in ~ with the comparative operatorxI,.c) Concatenate han or as (depending on '~') + A 2 to theend.d) Perform necessary morphological operations (e.g.
changemore big to bigger, less many to fewer, etc.
)Computational Linguistics Volume 16, Number 2, June 1990 91Manny Rayner and Amelie Banks An lmplementable S mantics for Comparative ConstructionsWe let ~' be the denotation ofO, ~' the denotation of~,  etc.Since 4, contains instances of the pronouns e-proform i andq-proforml, 4,' will contain corresponding free variables eland q|.
It will thus make sense to abstract over these: forconvenience's sake, we will refer to Xei~,qjO' as ~".
Theassociated semantic rule will then define the denotation ofComp(O, A l, A2, q)  to be the value of the expressionO"(AI', {N I ?
"(A2', {N' I ~"(N, N')})}) (*)This formula is both central to the paper, and sufficientlyobscure as to require some further explanation.
To under-stand what it means in intuitive terms, we focus first on 4>".This can be viewed in the usual way as a predicate with twoargument slots: the first filled by an object denoting aphrase of type COMPLEMENT, and the second by an objectdenoting adegree.We now work "from the inside out."
We thus begin withthe subformula {N'\[#'(N,N')}; remember that this is ageneralized determiner (see Section 1.2).
For example, ifhas the value more, it will be the determiner{N'I more(N,N') },or to express this in more usual terms (lessthan N).
Working outward to the next level, the subformulaO"(A2', {N'\[~"(N,N')}) is that formed by substituting thecomplement denotation A z' in the first argument place of 4,"and the determiner denotation {N'\[#'(N,N')} in the second.It is consequently a condition on N, which means that{N I ?
"(A~', {N'\[ ~'(N,N')}) }is also a generalized determiner.The final formula is now constructed by once again substi-tuting suitable values into the argument slots for $", thesenow being A l' and {N \[ ~"(A2',{N' \[g/(N,N') }) }.To summarize: what we have described here is a rule-schema that allows us to construct what could be called acomparative S, which contrasts two constituents of typeCOMPLEMENT.A small extension ow gives us corresponding schemasfor comparative constituents of type (e, t) (this includesVPs, APs, and relative clauses); it seems that there areactually two slightly different versions.
The most obviouscase is the one in which contrasting takes place, as previ-ously, between the comparative complement and someother constituent of similar type.
Here, we can use thesyntactic onditions for the rule above in unchanged form;since the type of ~' is (e, t) rather than t, the semantic partof the rule has to be rewritten slightly, as the old definitionwould no longer make the condition on N a truth-value.
Wesolve this problem by substituting in a value x in ~"(reducing it to a truth-value), and later abstract x awayagain at the outermost level.
The denotation ofComp(~, Al, Az, ~) will then behx.O"(A{,{N I O"(A2',IN' I~"(N, N')}, x)}, x) (**)An important special case, which we will make use of inSections 3.4.4 and 3.4.6, occurs when the comparativecomplement is an NP, and the "contrast" isbetween it andthe entity referred to by the abstracted variable in 4>.Sentences 14)-16) illustrate this.
In each, we claim thatcontrasting is occurring within the italicized portion.14) A man taller than John was chosen for the team.15) Most people don't expect o live as long as John (did).16) People who travel to London as often as John usuallyhave season tickets.One way to deal with these constructions would be to makethem all equivalent with the case represented by 16): forrelative clauses, it is reasonable to maintain that contrast-ing is between the complement, and a "gap" linked to therelative pronoun.
On this account, 14) and 15) are regardedas derived from something like 14a) and 15a).14a) A man (who is) taller than John was chosen for the'team.15a) Most people don't expect (that they will) live as longas John.Although this approach is certainly also feasible, it seemstechnically simpler to dispense with the null pronouns andinstead use the following semantic analogue of the idea,essentially a type-raising trick.
We let 4> be a constituent oftype < e, t), containing an occurrence of q-proforml, ?
aCOMP-OPERATOR,  and A z an NP; we defineCompl (~, A z, ~) to be the phrase formed by substitutingfor q-proformi, and concatenating than/as A 2 to the end,and now want to define its denotation.
We let e i be aparameter ranging over NP denotations, x be a parameterranging over individuals, and A1' be the function XQ.Q(x); ifwe now define ~" to be the formula hcihqi ?
e i (~ ' ) ,  thedenotation of Compl(O, A z, ~) is given by yet anothervariant on our basic formula, namelyXx.O"(A{,{N I O"(A2',IN' I~I,'(N, N')})}) (***)Readers who wish to see examples of derivations using thethree :interpretation schemas defined above may now wantto turn to Section 3.4; when they have returned, we willproceed to describe how our theoretical picture can beconverted into one that is more readily implementable.3.3 A COMPUTATIONAL VERSIONThe analysis we have just presented gives a simple andcompact formalization of our theory of phrasal compara-tives, but it is still not easily implementable as it stands.The reasons for this are exactly the same as those applyingto the original PTQ treatment of scoping phenomena;essentially, the rules have insufficient syntactic motivation.However, the solution (as far as scoping goes) is by nowstandard, and has been successfully implemented in anumber of well-known systems (e.g., Pereira 1983; Lesmo1985; Grosz et al 1986; Alshawi et al 1989); the methodol-ogy can originally be traced back to Woods (1978).
6Thetrick is to split interpretation i to two stages, the firstlinked to the syntax and the second to the semantics;mediating between these, we have an intermediate l vel ofrepresentation, the quasi-logical form.
This is producedcompositionally from the syntax, and then subjected torewriting rules before being converted into the final logicalform.
Normally, these rewriting rules formalize scopingtransformations; here, we will also use them to describe theinterpretation f nonclausal comparison.
In Section 1.1, we92 Computational Linguistics Volume 16, Number 2, June 1990Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionssummarized briefly the basic properties we demanded ofthe QLF level of formalism.
We now describe those fea-tures that are specially concerned with comparative con-structions.We start by defining the various kinds of nodes we willneed in the QLF.
These will be the following.Node name Representsc-complement Comparative complement.c-operator Comparative operator.c-degree Comparative degree; includes the com-parative complement and compara-tive operator as subnodes.q Placeholder; the q-proform of the Mon-tagovian analysis.c Placeholdcr; the c-proform of the Mon-tagovian analysis.comparison Corresponds to Comp(&, A l, A 2, ~I,) andCompl(~, Az, ~) of the Montagoviananalysis.
The part of the tree underthe node corresponds tocI,.
The sub-nodes are: the "contrasted material"(An), the comparative complement(A2), the comparative operator (~'),and pointers to the relevant q and cnodes (qi, ci)The fundamental idea should be fairly easy to grasp, if thereader has understood the previous section; the QLF issuccessively transformed through a number of stages, untilit is in a form consonant with the Montagovian analysis ofSection 3.2.
We go through the stages in turn, illustratingeach of them schematically; in Sections 3.4.1 and 3.4.2, wegive examples of their application.
(Stage 0) In the original QLF, the comparative comple-ment and comparative operator turn up as c-complementand c-operator nodes, modifying the c-degree node repre-senting the comparative d gree; the c-complement is not yetassociated with the constituent it is contrasted against (seeFigure 1).
(Stage 1) Rewriting rules replace the c-degree with a qplaceholder, and save the c-complement, c-operator, andassociated q in a separate location; we call this the "compar-ative store," by analogy with Cooper's "quantifier store"(Figure 2; Cooper 1983; Engdahl 1985).
(Stage 2) The contents of the "store" are moved upwardsin the tree; at each higher node N, attempt to do one of i),ii) or iii).
(The second and third alternatives are specialcases) (Figure 3).I c-degree I\[ c-operator I I c-complement \[Figure I Original QLFI H I Icomparativestorec-complement \]c-operator \[Figure 2An item is placed in the "store"i) Find a suitable constituent below N to contrast hec-complement against.
If such a constituent is found,replace it by a c placeholder, and insert a comparisonnode in the tree above N. The comparison node isconstructed from the following components: the c-com-plement, the contrasted constituent, he c-operator,and the q and c placeholders.ii) (This is to deal with the third schema from Section 3.2)If N is an abstraction node (representing a constituentof type (e, t)), insert a c node above N, a comparisonI  - om 'emeot IH comparisonIcontra$tc-complement\[ c-operator I\[ Habstracti?n H c?mparis?n ~abstracti?n ~~1 I ~ x ~Figure 3 (a) A node has been located, which canserve as a contrast to the comparativecomplement.
(b) The contrast node is replacedwith a c placeholder, and a comparison node isinserted.
(c) Special case for third schema in 3.2.Computational Linguistics Volume 16, Number 2, June 1990 93Manny Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionsnode above the c, and a further abstraction node abovethat.
The comparison ode is constructed from thec-complement, c-operator, c and q; the "contrast" com-ponent is that corresponding to a pronoun with associ-ated variable x, where x is the abstracted variable inthe new abstraction node.iii) (See Section 3.4.3) If  N is a constituent of type t or(e, t), and e-complement is an S-OPERATOR, insertan s-operator node above N, and a comparison odeabove that; the body of the s-operator node will be a cplaceholder.
The comparison ode has the same struc-ture as that in case i), except that the "contrastedmaterial" slot contains the special value it-is-true-that.
(Stage 3) The tree is now in a form where the Montagoviananalysis can be used directly; one of the formulas (*), (**),or (***) is applied to yield the logical form, the choicedepending on which alternative was chosen in the preced-ing step.
In the final stage, the portion of the QLF under thecomparison ode is duplicated twice, and the q and cplaceholders instantiated in each copy in an appropriatemanner (see Figure 4).3.4.
APPLICATIONS OF THE THEORY3.4.1 NP- AND PP-COMPARATIVESPhrasal comparative constructions in which the compara-tive clause is an NP or PP appear to have fundamentallythe same structure, and we shall consequently considerthem under one heading.
We will present a typical exam-ple, first using the Montagovian framework, and thenreworking it in the computational one.The following table represents a semantic derivation forthe sentence ach woman received more roses from torontothan from london; we will analyze this as being composed ofthe subject each woman, and the comparative VP receivedmore roses from toronto than from london.
We will use aninstance of the second schema from 3.2, with COMPLEMENTequal to PP, and accordingly write c-proform i as from-there I.
Received will be treated as a verb taking three argu-ments, with received'(x, y z) interpreted as "x received yfrom z."
For example, {16}(hr.rose'(r)& ted'(r), ~ r.received'(amelie', r, toronto')) will correspond to amelie received 16red roses from toronto, and (no'(rose', ~r.received'(amelie',r, graham')) will correspond to amelie received no roses fromgraham.
7 (see Table 1).H e?mpari'?n H s'?perat?r H I ,tistr',ethat ?I c-complementc-operatorWFigure 4 Special case for 3.4.3.Table 1.
Montagovian Analysis of Contrasted PPs1.
each woman2.
from toronto3.
from london4.
q-l)roform I roses5.
received6.
from-there~7.
received from-therei8.
received q-proform Iroses from-there 1.9. more10.
rec.eived more rosesfrom toronto than fromlondon11.
each woman receivedmore roses from torontothan from londonXP.each'(woman',P)hP.P(toronto')hP.P(london')hP.ql(rose',P)Xx~y~,z.received'(x,y,z)11Xx~y.ll (hz.received'(x,y,z));~x.ql(rose',hy.1 l(hz.received'(x,y,z)));~x~y.more'(x,y)Xx.
{N I {N' I more'(N,N')}(rose'Ay.received'(x,y,london')) }(rose',;~y.received'(x,y,toronto'))each'(woman'Ax.
{N I{N' I more'(N,N')}(rose',hy.received'(x,y,london') ) }(rose',Xy.received'(x,y,toronto')))*Remember that since q~ is a variable ranging over determinerdenotations it takes two arguments, which should both be of thetype (e,l~).
Similarly, 1~ (an NP denotation) takes a singleargument of the same type.Figure 5 presents in outline the analysis of the samesentence: in the computational framework of Section 3.3,and should be compared with Figs.
1-4.3.4.2 CN COMPARATIVESComparative constructions of the type illustrated in 17a)have been the object of considerable controversy.
TheorthodoJ~ position was that they were "parallel" construc-tions: 17a) would thus be a reduced form of 17b).17a) More women than men read "Playgirl.
"17b) More women read "Playgir l"  than men read"Playgirl.
"Pinkham, as we have already mentioned, gives good rea-sons for supposing that this is not the ease, and that theconstruction is in base generated phrasal (pp.
121-123).We now show how her analysis can be recast in ourframework: once again, we present our derivation first interms of Montague grammar and then in the computa-tional version.In Montague grammar, we instantiate the first schemafrom Section 3.2, this time with COMPLEMENT equal to CN;in the interests of readability we write c-proform t as of-that-kind i.
The derivation appears in Table 2.The corresponding treatment in the computational frame-work is another direct application of the method fromSection 13.3, and appears in Figure 6.3.4.3 "S-OPERATOR" AND "V-P-OPERATOR"COMPARATIVESOur next type of construction is illustrated in 18a), 18b)and 18c).18a) Mary had more friends than John had expected.94 Computational Linguistics Volume 16, Number 2, June 1990Mmnmy Rayner and Amelie Bank~ An Implementable S mantics for Comparative ConstructionsTree-rewriting analysla ofPP con~astingI "each woman" ~ f r o m  Toronto" ~Original QLFI Icomp .
vo Istore L ~comparative I"f~L?~, ?n" l ~' lstoreA suitable contrast is found for the comparative complement.
"from Toronto""from London"Figure 5 Tree-rewriting analysis of PP-cxmtrasting18b) Most people ate more biscuits than Mary said.18e) John's yacht was longer than I thought.To handle examples like these within our framework, weneed a syntactic representation that does not involve ellip-sis.
Our solution is to introduce a syntactic constituent thatwe call an S-OPERATOR: by this, we mean a constituentof the form S/S-COMP, that is to say, a clause with aTable 2.
Montagovian A alysis of CN Comparative1.
woman2.
mall3.
"Playgirl"4. read "Playgirl"5. q-proform~ of-that-kind16.
q-proforml of-that-kind !
read "Playgiri"7. more women than menread "Playgirl"woman'man'~,Q.Q(playgirl')kx.read(x,playgirl')~,Q.q~(I~,Q)ql(llAx.read(x,playgirl')){NI {N' I more'(N,N')}(man'Ax.read(x,playgirl'))}(woman',Xx.read(x,playgirl'))\[(reads(x,y) is to be understood as "x habitually reads y")\]Tree-rewriting analysis of CN contrastingOriginal QLFcomp tivol 17nstoreThe comparative complement and operator have been placed in the "store"comparatiVestore I ~  "Playgirr'A suitable contrast is found for the comparative complement.I "women""ll~n"Figure 6 Tree re-writing analysis ofCN-~ntrastingmissing sentential complement.
The italicized portions ofthe sentences above are accordingly deemed to be S-OPERATORs, and the contrast is with an implicit trivialS-OPERATOR that we can write as (it is true that).
Notethat there is an unbounded dependency here between the Sand its missing constituent; we say a little more about hisin Section 3.5.An example in the Montagovian framework is shownbelow; we use the second schema from Section 3.2, withCOMPLEMENT instantiated to S-OPERATOR, and writec-proform i as attitude l. There are in fact two tricky techni-cal points here, which we are forced by space limitations togloss over.First, we are assuming that it is possible when introduc-ing complex categories of the form A/B to derive theassociated semantic rule from those for the componentcategories A and B.
Since it is at any rate fairly obvious inthe present case that this is feasible (that is, that we canjustify the semantic value of the phrase mary said), we shallComputational Linguistics Volume 16, Number 2, June 1990 95Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructionsnot discuss the matter further.
Second, we allow applica-tion of the denotation of an S-OPERATOR to the denota-tion of a VP, which formally is of the wrong type.
Here, ourreasoning is that since an S-OPERATOR denotes a func-tion a from propositions to propositions, it will naturallyinduce a function a': Xx.P(x)---~ Xx.a(P(x)) from VP-denotations to VP-denotations; we will identify a and a'(see Table 3).It is interesting to see that Krifka independently arrivesat exactly the same conclusion; he writes our "it is truethat" as the operator FAKT, and for example analyses19a) below as 19b):19a) Anna ist reicher als Otto glaubt.Anna is richer than Otto thinks.19b) KOMP(FAKT,Otto glaubt,Xd.\[Anna istd-reich\]Analogously with the "S-OPERATOR" introduced above,we can also define a "VP-OPERATOR" to be a constituentof the syntactic category S/VP, i.e.
something that cancombine with a VP complement toyield an S; note that thisincludes subject NPs.
We can then give a similar accountfor sentences like those illustrated in 20a) to c):20a) Mary opened more bottles than John told her to.20b) Mary scored more points than I normally can.20c) Mary needs to get a better result than she's so farmanaged.We sketch a Montagovian derivation for the first of these:here we use the first schema from 3.2, this time withCOMPLEMENT instantiated to VP-OPERATOR.
Note thatwe give mary wide scope over the whole sentence, so as toget the pronoun bindings right (see Table 4).Readers who wish to understand the implementationdetails for the computational version are referred to therelevant program code in Appendix 2.
Parse-tree and logi-cal forms are given in example sentence 8 in Appendix 3.3.4.4 CONTRASTING INSIDE ADJECTIVAL ANDADVERBIAL PHRASESSo far, all the examples of contrastive comparatives that wehave shown have involved using one of our two schema toTable 3.
Montagovian Analysis of "S-OPERATOR"Comparative1.
most people2.
mary said3.
(it is true that)4. ate5.
ate so-many I biscuits6.
attitude~ ate so-many~biscuits7.
(it is true that) ate morebiscuits than Mary said8.
most people ate morebiscuits than Mary saidXQ.most'(person',Q)XQ.said'(mary',Q)XQ.QXxXy.ate'(x,y)hx.
(ql (biscuit',Xy.ate'(x,y)))a~ (Xx.
(q~ (biscuit',Xy.ate'(x,y))))Xx.
{N I said'(mary',{N' I more'(N,N')}(biscuit',Xy.ate'(x,y))}(biscuit',Xy.ate'(x,y)))most'(person',Xx.
{said'(mary',{N' I more'(N,N')}(biscuit',Xy.ate'(x,y)) }(biscuit',Xy.ate'(x,y))))Table 4.
Montagovian Analysis of "VP-OPERATOR"Comparative1.
nmry XQ.Q(mary')2. h e~ XQ.Q(x~)3. john told he I to kQ.told'(john',xl,Q(x0)4. opened so-many I bottles kx.(q~(bottle',Xy.opened'(x,y)))5.
vp-ap I opened so-many I cl(Xx.(ql(bottle',Xy.opened'(x,y))))bottles6.
he I opened more bottles {N I told'(john',xl,{N' I more'(N,N')}than john told he~ to (bottle',ky.opened'(Xl,y))))}(bottle',ky.opened'(x~,y))7. mary opened more hot- {N I told'(john',mary',{N' I more'ties than john told her to (N,N')}(bottle',Xy.opened'(mary,y))))}(bottle',Xy.opened'(mary,y))construct a phrase that is either an S or a VP.
In thissectior:, we will consider sentences where the contrastingoperation is used internally within adverbial and adjectivalphrases: Pinkham quotes constructions of this kind as someof the clearest instances of phrasal comparatives.
We startin 21)--23) by giving some typical examples; 21) and 22)are taken from Pinkham (1985).21) A man taller than John was chosen for the team.22) He ran faster than the world record.23) John needs a spanner bigger than the No.
4.In each of these sentences, contrasting appears to occurwithin the italicized phrase; in 21), John need not havebeen chosen for the team, in 22) the world record certainlycannol run, and in 23) John presumably does not need theNo.
,4.
We would, however, derive all these conclusions ifcontrasting were at VP or clausal evel, since we would thencopy t\]:e verb.In accordance with Pinkham's uggestions, our approachwill rather be to use a direct interpretation method basedon predicate copying; we will in fact use the third schemafrom Section 3.2, defined by formula (***).
This applies ina straightforward fashion to adjectival constructions likethose i.n 21) and 23).
Pinkham notes that a similar treat-ment is also possible for sentences like 22) if we take fast tobe a predicate applying to the "running" event, althoughwe imagine that some people may find this move unattrac-tive.In 'Fable 5, we present a sketch of a Montagoviananalysis for 21).
Note that "Q tall" will be represented asXx.tall(x, Q), where Q is a generalized determiner, and thatformula (***) is used when deriving 5 from 3 and 4.3.4.5 CONTRASTED PREPOSITIONSThe types of contrastive comparatives described in Sections3.4.1 1:o 3.4.4 appear to account for the vast majority ofthose that occur in practice) There are also a few rarecases, one of which we here touch on briefly.
As a finalexample, we consider the case of contrasted prepositions, asshown in 24) below.
924) There are more points for the proposal than against.96 Computational Linguistics Volume 16, Number 2, June 1990Manny Rayner and Amelie Banks An lmplementable S mantics for Comparative ConstructionsTable 5.
Montagovian Analysis of Contrasting in AP2.
player3.
john4.
q-proform I tall5.
taller than john1.
was chosen for the team was-chosen'player'XQ.Q(john')hx.tall'(x,ql)hx.tall'(x,{D I tall'( john,{D' I more'(D,D')})})6. player taller than john hx.player'(x)&tall'(x,{D I tall'( john,{O' l more'(D,D')})})7. a player taller than john XQ.a'(hx.player'(x)&tall'(x,{D I tall'( john,{D' I more'(D,D')})}),Q)8. a player taller than john a'(Xx.playcr'(x)&tall'(x,{D I tall'was chosen for the team ( john,{D' I more'(D,D')})}),was-chosen')These can be treated in a completely straightforward man-ner in the computational version from Section 3.3; the keystep will be the replacement of the ARG-TYPE field of asuitable NP denotation with a C-placeholder.
A Montagov-ian treatment of the construction is of course somewhatproblematic with the framework we have so far adopted,since there is no sensible way to quantify over ARG-TYPEof anything similar; some people may see in this fact anargument against Montagovian formalisms.
(Parse-treeand logical form in example sentence 12 in Appendix 3).3.4.6 AMBIGUITIES IN CONTRASTIVECONSTRUCTIONSIt is well known that phrasal comparative constructions caneasily give rise to ambiguities: entences 25)-27) illustratethree typical possibilities.
Here, we will discuss how oursystem fares when attempting to explain these.25) Nobody talked more to John about Carol than Mary.26) Few men give their wives more presents than George(does).27) John intends to buy more books than Mary.We claim that most speakers find all these sentences ambig-uous, the first in three ways, and the others in two.
Thesimplest case is 25), where we can paraphrase the variousreadings as 25a-c):25a) Nobody talked more to John about Carol than Marydid.
(Mary talks a lot to John about Carol.
)25b) Nobody talked more to John than to Mary aboutCarol.
(John is less popular than Mary when people want tohold conversations about Carol.
)25c) Nobody talked more to John about Carol than theydid about Mary.
(Everyone prefers discussing Carol to discussingMary when they talk with John.
)In terms of the discussion from Section 3.4.1, ambiguityarises naturally as a result of the uncertainty concerningthe identity of the element hat "Mary" is intended to becompared with.
By successively choosing the NPs"Nobody," John," or "Carol," the reader can easily sat-isfy herself that each of the readings above can be derived.Sentence 26) also appears to be fairly clear: here, thedistinction is essentially between the "strict" and "sloppy"readings, which can be represented as26a) and 26b).26a) Few men give their wives more presents than Georgegives them.26b) Few men give their wives more presents than Georgegives his own wife.On a Montagovian account, we will get 26a) if the pronountheir is still unbound in the denotation of the VP give theirwives q-proform I presents; if, on the other hand, it is boundto the variable representing the subject, we will get 26b).The hardest case definitely seems to be sentence 27).Here we have at least two readings, which we represent as27a) and 27b):27a) John intends to buy more books than Mary will buy.
(John's plan is that, no matter how many booksMary has, he will buy more.
)27b) John intends to buy more books than Mary intends tobuy.
(John and Mary both plan to buy specific numbers ofbooks, that number being in John's case greater.
)We can obtain the first of these using formula (***) fromSection 3.2, as can be seen from the schematic derivation inTable 6.Unfortunately, there is no very satisfactory way to derivethe wide scope reading 27b).
The problem is that thecomparative degree will end up in our account with lowerscope than the modal operatorwants, irrespective of thelevel at which we carry out the contrasting operation; toderive 27b), however, it needs to have scope over the wholeclause.
Although one can define an ad hoc rule that raisesthe scope of the comparative quantifier, this goes verymuch against he spirit of our treatment; a slightly moreattractive possibility may be to introduce alternative "wide-scope" versions of formulas (*), (**) and (***) from 3.2.For example, (*) would become3 N,N'.4?
'(A~,{N}) & ~" (A2',{N'}) & ~'(N,N')The problem is of course to find conditions defining whenthe wide-scope formulas are applicable.
One idea might beTable 6.
"Narrow Scope" Interpretation f Sentence 271. buy q-proform I books2.
buy more books thanmary3.
wants to buy morebooks than mary4.
john wants to buy morebooks than mary~x.ql (book',~y.buy'(x,y))?,x.
{N I {N' I more(N,N')}(book'),y.buy'(mary,y))}(book',Xy.buy'(x,y))~,x.want'(x,{N I {N' I more(N,N')}(book',Xy.buy'(mary,y))}(book'),y.buy'(x,y)))want'(john;{N \[ {N' \[ more(N,N')}(book', Xy.buy'(mary,y))}(book', hy.buy'(x,y)))Computational Linguistics Volume 16, Number 2, June 1990 97Mammy Rayner and AmeHe Banks An Implementable S mantics for Comparative Constructionsto allow their use when the comparative occurs in anembedded S or VP (as it does here), but the whole topicclearly needs more study.3.5 IMPLEMENTATION ISSUF~We first discuss the syntactic level; the main implementa-tion problems here are caused by various kinds of long-range dependencies.
Apart from normal "WH-movement"dependencies in questions and relative clauses, we have thefollowing:1.
Dependency between comparative head and compara-tive complement.
Normally, the head is separated fromits associated complement in surface syntax, even thoughit conceptually forms a constituent with it.2.
Dependencies a sociated with missing complements inS- and VP-operators, which can be arbitrarily deeplynested.
These appear to be very similar to WH-movement dependencies.3.
"Verb anaphora" dependencies: as is well known, cer-tain verbs (in English do, be, can, etc.)
can act anaphor-ically for verb phrases.
We treat a comparative comple-ment consisting of an NP together with one of theseverbs as essentially equivalent with the NP on its own,except hat it is forced to contrast against an NP whichis a subject in a clause whose main verb is a suitableantecedent.
The verbal antecedent relationship also ap-pears to lead to an unbounded dependency.4.
"Quantifier binding" in clausal comparatives; we dis-cuss this in Section 4.1.All these forms of long-range dependency are handled byapplication of"threading" (Pereira 1983; Kartunnen 1986).Properly speaking, each distinct ype of dependency oughtto be associated with a distinct feature, which will bepresent in relevant constituents; by unifying features indifferent constituents against each other, information ispropagated through the tree.
In the XG-grammar in Appen-dix 2, we have cheated a little, by using the "extrapositionlist" feature to handle all of 1, 2, and 4 above.
Although thiscan potentially ead to problems when dependencies "cross,"we felt that the gain in simplicity made this compromiseworthwhile.
It is a simple matter to reorganize the gram-mar using different features.The semantic part of the grammar follows very closelythe discussion in Section 3.3.
The syntax-tree is first trans-formed into QLF form by the predicate syn to qlt/2; theQLF is then searched to find potential comparisons.
Thatis, it first tries to extract a c-complement and store it, thentries to find a suitable contrast and finally constructs thecomparison node and inserts it.4.
CLAUSAL COMPARATIVESWe borrow most of the basic principles in our treatment ofclausal comparatives from Pinkham.
Firstly, just as withphrasals, we assume that the comparative clause is nor-mally a modifier to a degree xpression i  the main clause;this assumption is also shared by Bresnan, though not byFriedrnann, who places the two clauses at the same level.Secondly, we assume that the "missing material" in thecomparative clause is a null degree expression; this maypossibly occur together with a null copy of the materialmodified by the head degree, which can be an adjective(example 29), an adverb (30), or a CN (31, 32).
If the headdegree is modifying an adjective in nonpredicate position,then it is obligatory to copy the CN (32).
This idea is moreor less borrowed from the discussion in Pinkham (pp.33-40).
Adapting Pinkham's notation slightly, we write anull degree as Q, a null adjective or adverb as PRO^, and anull CN as PROcN.Our third principle is that the denotation of the COMP-OPERATOR is realized as a relation between the headdegree and the Q, and appears conjoined with the compara-tive clause; this means that the Q originally will have widescope over the clause it occurs in.
Examples 28)-32) illus-trate our analysis: in each, the first item is the sentence, thesecond a schematic representation f the QLF, and thethird a schematic representation f the logical form.
In theQLF,.
we enclose the comparative degree expression inparentheses.28) -lIohn bought more books than Mary bought records.28a) John bought (more than Mary bought Q records)books.28b) John bought {NIMary bought {N'} records & more(N,N')} books.29) .Irohn was happier in London than he was in New York.29a) John was (more than he was Q PRO A in New York)happy in London.29b) John was {Dlhe was {D'} happy in New York &more(D,D')} happy in London.30) John runs faster than Mary swims.30a) John runs (more than Mary swims Q PROA) fast.30b) John runs IDI Mary swims {D'} fast & more (D,D')}fast.31) John bought more books than Mary could carry.31a) John bought (more than Mary could carry Q PROcN )books.31b) John bought {NlMary bought {N'} books &more(N,N')} books.32) John bought a more expensive vase than Mary bought.32a) John bought a (more expensive than Mary bought QPRO A PROcN) vase.32b) John bought a {D I Mary bought a {D'} expensive vase& more(D,D')} expensive vase.It is fairly straightforward to implement a scheme of thiskind in a framework that can handle long-range dependen-cies; in Section 4.1, we describe in more detail how this canbe done.
Before doing so, however, we take a brief look atthe theoretical issues raised by our first and third assump-tions.With regard to the first assumption, suppose that wechose Friedmann's alternative and allowed the main and98 C~,mputational Linguistics Volume 16, Number 2, June 1990Manny Rayner and AmeHe Banks An Implementable S mantics for Comparative Constructionscomparative clauses to be parallel.
For instance, this Wouldgive example 28) above a logical form something like 28c):28c) 3 N,N'.
John bought N books & Mary bought N'records & more(N,N').At first glance, this looks simpler.
The problems arise whenwe introduce quantified NPs: thus if we replace John withsomething like no one, we are obliged to have more(N,N')within the scope of the quantifier representing the new NP.Of course, it is possible to require that such NPs always begiven wider scope than the whole sentence (which is whatFriedmann does), but to do so ignores the fact that an NPthat has higher scope than the NP in which the compara-tive degree occurs normally has higher scope than thecomparative degree as well.
Making the comparative clausea modifier to the degree is from this point of view a moreprincipled solution.We now consider our third assumption: what scope shouldthe "inner" degree receive, and where should the conditionlinking the two degrees appear?
Here, there are at least woreasonable choices.
Alternative A, which is the one we havechosen, is to give the inner degree wide scope over the wholecomparative clause, and conjoin the condition; alternativeB is to give the inner degree its "natural" scope in thecomparative clause, and make the relation between the twodegrees a condition on it.
This would give 28) the logicalform shown in 28d) below.
We marginally prefer A, but theissues involved are sufficiently unclear to merit furtherdiscussion.28d) "John bought {NIMary bought {N'lmore(N,N')}records} books.The drawback to A is, once again, that quantified NPs cancause problems: thus in a sentence like 33) we do not wantthe interpretation 33a) where most Swedes have traveledabroad the same number of times.33) Sven has visited Japan more times than most Swedeshave traveled abroad.33a) Sven has visited Japan {N\[(most Swedes have trav-eled abroad N' times) & more(N,N')} times.To get around this, we have to postulate a rule that givesmost Swedes wide scope over N'; this is not necessary if wechoose B, where the natural scoping is 33b):33b) Sven has visited Japan {NI (most Swedes have trav-eled abroad {N' \[ more(N,N')} times)} times.If we are only dealing with extensional sentences, exampleslike 33) would thus make it seem that B was preferable.However, serious problems arise with the well-known exam-ple 34), due to Russell:34) I thought your yacht was longer than it is.Here we are more or less forced to choose an interpretationthat gives the "inner" degree wide scope, i.e.
34a)34a) Your yacht is D' long & I thought hat your yachtwas {D \[more(D,D')} longIf we use alternative A, it is possible to define scoping rulesthat produce this interpretation.
However, this appears tobe out of the question with alternative B; if the comparativeclause is given wide scope, the degree comparisonmore(D,D') will be outside the scope of D. Although thisconclusion seems inescapable, we are still somewhat reluc-tant to recommend a solution that is motivated entirely by atype of example that essentially never occurs in normalapplications; readers interested inconcrete implementationmay well consider that the practical problems involved informulating suitable scoping rules for alternative A out-weigh the theoretical loss of generality.
It would appearthat there is room for further esearch ere: the reader iswarned that the issues at stake are far from simple, aswitness for example, Larson (1988).4.1 IMPLEMENTATION ISSUESOur proposed treatment of clausal comparatives can beimplemented fairly simply in a framework that contains amechanism for handling long-range dependencies; the ba-sic idea was first described in Klein (1980) in the context ofan early version of GPSG, although we have modified itconsiderably.
As already mentioned in Section 3.5, we willassume some kind of gap-threading idea.
Pinkham observes(p. 81) that Quantifier Binding respects i land constraints;the most obvious way to ensure this is to propagate it usingthe same mechanism as is used to handle WH-movement.A type of dependency we have already seen is thatbetween the head of the comparative and the associatedcomparative clause; in this case, the problem is to passrightward the information that a comparative clause isbeing looked for, which will end up as a modifier of acomparative degree xpression somewhere to its left.
Sincethe possible nature of the bound null proforms in thecomparative clause depends on the structure of the associ-ated head, the two types of dependency are interrelated;just how, we explain below.
We will call the feature associ-ated with the first kind of dependency the Q feature, andthat associated with the second the C_complement fea-ture.
The values of both of these will as usual be pairs of theform (Gaps.
in, Gaps_out>.Let us now examine in detail how the scheme works.
Acomparative degree xpression on a determiner, adjective,or adverb causes a non-null value of the C_complementfeature to move rightwards; that is, a non-null Gaps_outon the degree xpression successively gives rise to non-nullGaps_in values on other constituents to its right.
Thiscontinues until the C_complement feature is "absorbed"by a non-null comparative complement.
This will be acomparative complementizer, followed by a clause withsuitable C_gaps features.The difficult part of the business is getting the rightGaps__in value for the Q feature on the comparative clause;in other words, making sure that the type of null proformthat occurs in the comparative clause is one that matchesthe head of the comparison.
To begin with, this means thatthe C_complement feature must contain information aboutthe permissible values for the associated Q; the rules forComputational Linguistics Volume 16, Number 2, June 1990 99Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionscomparative degree constituents hen need to specify thisinformation i  a suitable way.
The following rules are thosewe have implemented: we write H for the head of thecomparison and B for the bound null proforms, and enumer-ate four separate cases.1.
If H is a determiner, then B is eithera) aQb) an NP whose determiner is a Q, and whose CN is a copyof the CN in the NP where H occurs.2.
If H is modifying an adjective A in predicate position,then B is a Q modifying acopy of A.3.
If H is modifying a verbal adverb A, then B is a Qmodifying a copy of A.4.
If H is modifying an adjective occurring in prenominalposition in an NP N, then B is a copy of N, where H hasbeen replaced by a Q.The rules above are a considerable simplification ofPinkham's, and there are in particular two major omis-sions.
First, we copy constituents, instead of introducingbound proforms of type PRO A and PROcN.
This usuallymakes no difference, but becomes ignificant in sentenceslike 35): if we copy, getting 35a), we do not guarantee thatthe two occurrences of them refer to the same set.35) John gave me more of them than I managed to eat.35a) John gave me more of them than I managed to eat (Qmany of them).Secondly, and more critically for practical purposes, wehave ignored the important distinction Pinkham drawsbetween "narrow-scope" and "wide-scope" clausals (p.86-91).
This was not done for any principled reason, butsimply for lack of time; implementing it in a satisfactoryway is an important part of the planned continuation of ourresearch.5 OTHER ISSUESThis concludes our analysis, with the exception of someminor points that we have postponed until now in theinterests of expositional c arity.
The first concerns noncoref-erence of compared objects, the second the question ofwhether "before" and "after" can be regarded as compara-tives.5.1 NONCOREFERENCE OF COMPARED OBJECTSAlthough speaker judgments tend not to be completelyunanimous, there is a strong tendency to assume thatcomparison is always between different objects.
This pointbecomes important when answering questions like 36).36) Has any king ruled as long as Gustav V?Most people find "Yes" meaning "Yes, Gustav V did" verymisleading.
To correct his, we make a slight adjustment inthe analysis we have so far been using, so that an appropri-ate inequality is added when the logical form is producedfrom the reshaped quant ree.
With this alteration 37) maybe judged true even if John is present, and 38) maycorrectly be said of one of Mary's articles.37) Nobody here has read as many books as John.38) Mary has never written an article that is as bad as thisone.5.2 "BEFORE" AND "AFTER"In English, the words before and after can display severalof the features associated with comparatives.
For example,sentences like 39) and 40) would appear to have interpreta-tions which could be represented as39a) and 40a):39) John arrived before me.39a) .John arrived at a time T, T such that I arrived at atime T', T before T'.40) Henry VIII married Anne Boleyn after Catherine ofAragon.40a) Henry VIII married Anne Boleyn at a time T, T suchthat he married Catherine of Aragon at a time T', Tafter T'.Given examples like these, it is tempting to conclude thatbefore and after are the "comparative forms" of adverbialsthat could be represented as"at-early-time" and "at-late-time."
(Indeed, we made exactly this proposal in an earlierpaper).
However, it must be noted that, even if this analysisis correct, these adverbials would appear to be subject ocertain :restrictions with regard to the comparative comple-ments they can take.
For example, examples 41 a)-42a) areat best dubious, and should be contrasted with the correct41b)-42b):41a) *John arrived before I expected.41 b) John arrived earlier than I expected.42a) ?lVlary left before she needed to.42b) Mary left earlier than she needed to.It thus seems uncertain whether these words should beregarded as a special sort of comparative, oras belonging toa separate class of their own.
The best way to resolve thisquestion might perhaps be to consider cross-linguistic data;if it turns out that there are other languages that allow afull range of comparative complements o the analoguouswords, it would presumably make sense to hypothesize thatthis was originally the ease for English, and that themissing constructions have simply fallen into disuse.
Lack-ing at: 'the moment any such evidence, we refrain fromfurthe, r speculation on this subject.6 DATA FROM CORPUS ANALYSESTo give our claims concerning relative frequencies of thevarious constructions some substance, we here give theresults of a small corpus analysis.
We took the texts of oneEnglish and one Swedish novel (Agatha Christie's.. .
AndThen There Were None; Selma LagerlSf's Kejsaren av100 Computational Linguistics Volume 16, Number 2, June 1990Manny Rayner and AmeUe Banks An lmplementable S mantics for Comparative ConstructionsTable 7.
Data from Corpus AnalysisType of No.
ofconstruction examples Frequency1.
Discourse comparative: 37 33.9 %2.
Clausal: 7 6.4 %3.
Contrastive: 45 41.3 %NP: 12 11.1%NP + " anaphoric verb": 4 3.7 %PP/Adverbial: I 0 9.1%S-operator: 5 '4.6 %VP-operator."
2 1.8 %Internal contrasting inAP: 11 10.1%Other: 1 0.9 %4.
Determiner/Phrasal*: 6 5.5 %5.
Verb of change + comparative*: 6 5.5%6.
lnte comparative in att...*: 4 3.7%7.
Other: 4 3.7 %Total: 109*Constructions like "more than two" or "less than half.
"*Constructions involving verbs like "grow" or "become" togetherwith a comparative, asin "The room grew more cheerful" or "Theroad became harder."
The problems involved in giving a correctsemantics to such sentences derive in our opinion primarily fromthe verbs, and not from the comparatives.
*A construction peculiar to Swedish, as in Det var inte tyngre i~nat__tt han kunde lyfta det.
(Lit: "It was not heavier than that hecould carry" it").Portugalien), and manually extracted all sentences contain-ing comparatives.
The results are summarized in Table 7.One striking fact is immediately apparent; the secondcommonest ype of construction (No.
1, "discoursecomparative") is actually one that we fail to cover!
In ourdefense, however, we can at any rate claim that none of theother authors we have quoted appear to do so either.
Bydiscourse comparatives, we mean here comparatives wherethe associated comparative complement (in English nor-mally introduced by "than" or "as") is completely absent,and must be inferred from the context.
Typical examples(taken from the Agatha Christie novel) follow below insentences 43)-45).43) The abandoned creature .
.
,  committed a still graversin.44) At eight o'clock the wind was blowing more strongly.45) I should be colder if I were dead.If the discourse comparatives are excluded, however, weare clearly capable of dealing with the vast majority ofthose left.
Thus we feel fairly well justified in claiming thatour treatment covers most of the common cases of compar-ison that occur in practice.7 SUMMARY AND FURTHER DIRECTIONSWe have presented a treatment of comparative construc-tions that can claim to cover most of the commonly occur-ring cases, and is also capable of being implemented in areasonably standard framework.
Several of the key ideasare adapted from the theoretical work of Pinkham.
Inparticular, we divide comparatives into two separate classes,clausals and phrasals.
Clausals are interpreted by a versionof Pinkham's "quantifier binding," which treats the miss-ing material in the comparative clause as null proformsbound by the comparative head (Section 4); phrasals areinterpreted irectly, using an adaption of Pinkham's "dis-tributive copying."
The semantics of phrasals are summa-rized in the key formulas (*), (**), and (***) from Section3.2.At the beginning of Section 1, we presented a selection ofcomparative constructions, classified according to a moreor less traditional approach.
Table 8 shows the same exam-pies, this time with our classification.Particularly in our analysis of contrastive phrasals, wehave gone to some lengths to describe how the ideas can beimplemented in a reasonably efficient way.
Here, the keyidea has been to use a level of representation intermediatebetween syntax and logical form, which we call quasi-logical form, or QLF.
At QLF level, phrasal comparativesare linked to their heads, but not to the constituent they arecontrasted against.
Rewriting rules then reshape the QLFuntil it is in a form where the comparative complements areat the same level as their "correlates."
We also make use offeatures for defining long-range dependencies.
These occurin several varieties: the bound null proforms in clausalcomparatives, the missing sentential and VP complementsin S- and VP-operators, and finally the comparative comple-ments, which in general are separated from their heads insurface syntax.Weighing up the strengths and weaknesses of our ap-proach, it is most natural to compare it with Friedmann's.Since Friedmann gives the comparative degree wide scopeby default, her system needs extra rewriting rules fordealing with quantified NPs, both in the main clause andthe comparative complement; we have argued that a "nar-row scope" default is in general preferable.
We have alsoclaimed that it is difficult in Friedmann's yntacticallyoriented approach to give a formulation of the comparativedeletion rule that will extend to the harder cases.However, we have also seen, in Section 3.4.6, that oursemantics runs into problems when attempting to derive the"wide-scope" reading for sentences like 27), where thecomparative head occurs within the scope of a modaloperator.
Rather than postulate more ad hoc rewritingrules, we tentatively suggested that there may be alternatewide-scope versions of the key formulas from Section 3.2;this fits in well with Pinkham's remarks on wide- andnarrow-scope clausals, which we refer to at the end ofSection 4.
Further investigation of these issues seems likeone of the most important items on our agenda for futureresearch.Another topic that urgently needs tudy is the interactionbetween comparatives and coordination; in certain cases,illustrated in sentences 46)-49), our first impression is thatproblems will occur.
Since these obviously depend on theComputational Linguistics Volume 16, Number 2, June 1990 101Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative ConstructionsTable 8.
Typical Examples of Comparatives: Our ClassificationClausal comparatives1) Mary was happier in New York than John was in London.2) John has more books than Mary has newspapers.3) The table is longer than it is wide.Contrastive phrasal comparatives4) John is taller than Mary.5) Few people run as fast as John.6) John bought more books than Mary.7) John was happier in New York than inLondon.8) Mary had more friends than John thought.9) John hit Mary harder than he meant o.10) More men than women bought he book.11) More people vote~l for the proposal thanagainst.12) Mary needs a larger car than this Fiat.13) John ran faster than the world record.NP contrasting, adjectiveNP contrasting, adverbialNP contrasting, determinerPP contrastingS-operator contrastingVP-operator contrastingCN contrastingPreposition contrastingInternal contrasting in APInternal contrasting in adverbialDeterminer/phrasal14) More than 50 people signed the petition.Unclear cases: possibly contrastive phrasals15) John was born in the same city as Mary.16) John arrived before Mary.17) John likes Mary's house better than Mary John's.way in which we intend to handle coordination, we post-pone discussion to a later paper.46) No one could have a safer and more promising futurethan John.47) Mary is more attractive than Jane and Sarah.48) John visits the U.S. more often than Mary, but lessfrequently than Carol.49) The results were better than John claimed, but worsethan we had hoped.Several other open questions also deserve mention.
Wehave not been very specific in giving rules about wherecomparative complements may occur, and our treatment ofphrasal contrastives also appear to allow more readingsthan really exist.
It would certainly be desirable to findrules to eliminate these, or at least heuristics to say whichreadings can be regarded as unlikely.
Another interestingquestion is whether it is possible to make the theory morecompact, by collapsing the three formulas (*), (**), and(***) into one; they are so similar that this seems intu-itively quite feasible.
We speculate that one may be able todo this in a framework like that described in Pereira andPollack (1988), which allows conditional interpretation.Finally, we say a few more words about the "discoursecomparatives" mentioned in Section 6.
A cursory examina-tion of the example sentences would suggest hat most ofthe missing comparative complements are of one of thefollowing: "than previously," "than the one just mentioned,"or "than is the case."
For example, taking another look atsentences 43)-45), we can postulate that the complement isas given below in italics.43) The abandoned creature .
.
.
committed a still graversin (than the one just mentioned).44) At eight o'clock the wind was blowing more strongly(than previously).45) I should be colder (than is the case) if I were dead.To fill in these missing complements, it as usual seems clearthat pragmatic information is needed; researchers workingin discourse theory may find these problems worth investi-gating:.ACICNOWLEDGMENTSWe would like to thank the following people: several nonymous referees,for insighl:ful criticism of earlier versions of this paper; James Allen, JerryHobbs, Fernando Pereira nd Remko Scha for useful comments andgeneral encouragement; and, last but not least, Rune Gustavsson andSiwert Sundstrtim for helpfulness and flexibility with regard to financingour research.REFERENCESAlshawi, H.; Carter, D. M.; van Eijck, J.; Moore, R. C.; Moran, D. B.;Pereira, F. N. C.; Puiman, S. G.; and Smith, A. G. 1989.
ResearchProgram in Natural Language Processing: Final Report, SRI Techni-cal Report.Ballard,, B.
1989.
A General Computational Treatment of Comparativesfor Natural Language Question Answering.
Prec.
26th ACL, 41-48.Banks, A 1986.
Modifiers in Natural Language.
B.A.
Thesis, UppsalaUniver,,~ity.Banks, A. and Rayner, M. 1987.
Comparatives in Logic Grammars--TwoViewpoints.
Proceedings ofthe 2nd International Workshop on Natu-ral l~nguage Understanding and Logic Programming.102 Computational Linguistics Volume 16, Number 2, June 1990Manny Rayner and AmeHe Banks An Implementable S mantics for Comparative ConstructionsBarwise, J. and Cooper, R. 1981.
Generalized Quantifiers and NaturalLanguage.
Linguistics and Philosophy.
4:159-219.Bowen, J. and Carvaiho, A.
1988.
A Logic Grammar Formalism forPronoun Endophora.
Unpublished manuscript.Bresnan, J.
1973.
Syntax of the Comparative Clause Construction iEnglish.
Linguistic Inquiry 4:275-343.Cooper, R. 1983.
Quantification and Syntactic Theory.
D. Reidel,Dordrecht, Holland.Dahl, D.; Dowding, J.; Hirschman, L.; Lang, F.; Linebarger, M.; Palmer,M.
; Passonneau, R.; and Riley, L. 1989.
Integrating Syntax, Seman-tics, and Discourse: DARPA Natural Language Understanding Pro-gram.
R&D Status Report, Paoli Research Center, Unisys DefenseSystems.Dowty, D.; Wall, R. E.; and Peters, S. 1982.
Introduction to MontagueSemantics.
D. Reidel, Dordrecht, Holland.Engdahl, E. 1985.
Constituent Questions.
D. Reidel.Fenstad, J. E.; Halvorsen, P. K.; Langholm, T.; and van Bentham, J.
1987.Situations, Language and Logic.
D. Reidel, Dordrecht, Holland.Friedmann, C. 1989.
A General Computational Treatment ofthe Compar-ative.
In Proc.
27th ACL.
161-168.Grosz, B.; Appelt, D. E.; Martin, P. A.; and Pereira, F. C N. 1987.TEAM: An Experiment in the Design of Transportable Natural-Language Inferfaces.
Artificial Intelligence 32(2):173-244.Hankamer, J.
1971.
Why There Are Two "than" 's in English.
CLS9:179-192.Heim, I.
1985.
Notes on Comparatives and Related Matters.
Unpub-lished manuscript.Hobbs, J.; Stickel, M.; Martin, P.; and Edwards, D. 1988.
Interpretationas Abduction.
Proc.
26th ACL, 95-103.Kartunnen, L. 1986.
D-PATR: A Development Environment for Unifica-tion-Based Grammars.
Proc.
11 th COL1NG, 74-80.Keenan, E. L. and Stavi J.
1986.
Natural Language Determiners.
Linguis-tics and Philosophy 9:253-325.Klein, E. 1980.
A Semantics for Positive and Comparative Adjectives.Linguistics and Philosophy 4:1-45.Klein, E. 1981.
The Interpretation f Adjectival, Nominal, and AdverbialComparatives.
In: Groenendijk, J.; Janssen, T.; and Stokhof, M.
(eds.
)Formal Methods in the Study of Language.
Mathematical CenterTracts, Amsterdam.Klein, E. 1982.
The Interpretation f Adjective Comparatives.
Journal ofLinguistics 18:113-136.Krifka, M. 1987.
Bemerkung zu Vergleichskonstruktioner.
Unpublishedmanuscript.
University of Tgbingen.Larson, R. 1988.
Scope and Comparatives.
Linguistics and Philosophy11:1-27.Lesmo, L. and Torasso, P. 1985.
Analysis of Conjunction i  a Rule-BasedParser.
Proc.
23rd ACL, 180-187.McCord, M. C. 1986.
Focalizers, the Scoping Problem, and SemanticInterpretation Rules in Logic Grammars.
In: van Carneghem, M. andWarren, D. H. D.
(eds.)
Logic Programming and its Applications.Ablex, Norwood, N.J.McCord, M. C. 1987.
Natural Language Processing inProlog.
In: Walker,A.
(ed.)
Knowledge Systems and Prolog.
Addison-Wesley, Reading,MA.Montague, R. 1974.
The Proper Treatment of Quantification i English.In: Thomason, R.
(ed.)
Formal Philosophy: Selected Papers of Rich-ard Montague.
Yale University Press, New Haven, CT.Moran D. B.
1988.
Quantifier Scoping in the SRI Core Language Engine.Proc.
26th ACI, 33-40.Pereira, F. N. C. 1983.
Logic for Natural Language Analysis.
SRITechnical Note No 275.Pereira, F. N. C. and Pollack, M. E. 1988.
An Integrated Framework forSemantic and Pragmatic Interpretation.
Proc.
26th ACL, 75-86.Pereira, F. N. C. and Shieber, S. 1985.
Prolog and Natural LanguageUnderstanding.
CSLI lecture notes.Pinkham, J.
1985.
The Formation of Comparative Clauses in French andEnglish.
Garland Publishing Inc., New York, NY.C.
Pollard and I.
Sag.
1988.
Information-Based Syntax and SemanticsCSLI, University of Chicago Press, Chicago, IL.Rayner, M. and Banks, A.
1986.
Temporal Relations and Logic Gram-mars.
Proc.
ECAI-86, 2:9-14.Rayner, M. and Banks, A.
1988.
Parsing and Interpreting Comparatives.Proc.
26th ACL, 49-60.Rayner, M. and Banks, A.
1989.
An Overview of the SNACK-85 NaturalLanguage System.
In Plander, V.
(ed.)
Proc.
5th Intl.
Conference on AIand Information-Control Systems of Robots, North-Holland.Woods, W. 1978.
Semantics and Quantification i  Natural-languageQuestion-Answering.
In: Yovits, M.
(ed.)
Advances in Computers,17:2-64.
Academic Press.
New York, NY.NOTES1.
Earlier versions of several of the results herein have already beenpublished in Banks (1986), Rayner and Banks (1986), Banks andRayner (1987), and Rayner and Banks (1988a; 1988b).
Since anumber of important changes have been made, this report is to betaken as superseding all five.2.
Current address: ZYX Sweden AB, Styrmansg.
6,114 54 Stockholm.3.
It appears, for example, that Japanese allows essentially the samerange of comparative complements, and assigns a parallel semanticsto them.4.
We borrow this useful term from the Core Language Engine project(Alshawi et al 1988; 1989).5.
Those familiar with Montague semantics will realize that the versionwe are using here is in several respects fairly different from that inPTQ.
Most important, we more or less completely dispense with themechanisms for dealing with intentionality; since this isn't our con-cern here, we feel that it would only confuse the issue.
Readers whodisapprove ofthese ideas should have no great difficulty in convertingout derivations into more conventional ones.6.
There is some disagreement between applied and theoretical linguistsconcerning the correct division of credit here.
Although Woods andhis colleagues were the first people to realize the idea in practice, theymade no attempt to justify their work in formal terms; this was laterachieved independently b Cooper (1983), working within the Mon-tague grammar school.
Our work has to some extent been influencedby both of these sources.7.
Mean bastard.8.
Excluding "discourse comparatives": ee Sections 6and 7.9.
We would like to thank Carol Friedmann for bringing this example toour attention.Computational Linguistics Volume 16, Number 2, June 1990 lO3Manny Rayner and Amelie Banks An Implementable S mantics for Comparative ConstructionsAPPENDIX 1 TERMINOLOGYComparative Complement: the constituent introduced by the comparison markerComparative Operator: expressions like more, less, twice as much.Comparison Marker: words like than, as.Contrasted Material: constituent in the main clause against which a phrasalcomparative complement is comparedHead of the Comparison: refers to the comparative degree or determiner in themain  dausePhrasal Comparative: a comparative complement which is not a comparativeclause.Q: a null quantifier which is extraposed in the interpretation of clausalcomparatives.APPENDIX 2 PROGRAM CODE% The syntact ic part  of the system, wr i t ten as an XG-grammar \[Pereira 83\]% Internal XG stuff, used for extraposing constituents.open_x_bracket ... c lose_x_bracket - ->  \[\].extrapose (s comp (S)) ... s_comp(S) --> \[ \] .extrapose (vp_comp (Vp)) .
.
.
vp comp (Vp) - -> (\] .extrapose (np (A, B) ) .
.
.
np (np (A,B)) --> \[ ) .extrapose (det (A)) .
.
.
det (det (A)) --> \[\] .extrapose (adv(A,B)) ... adv(adv(A,B) ) --> \[\] .% Clausesquest ion (y_n_q (S) ) -->ext raposed_verb,s (S).quest ion(wh q(s (subject (Subject) ,Vp) ) ) -->que st ion_np (Subject),vp 0rp).% Swedish is a verb-second language, so a fronted WHQ forces the% next th lng to be a verb.quest ion (wh_q (S) ) -->ext raposed que st lon_element,ext raposed_verb,s (S).ma ins (S)  --> s(S).ma ins  (S) -->ext raposed_adv,extraposed verb,s(S).S (S (subject (Subject) ,Vp) ) -->np (Subject),vp (Vp).extraposed_verb ... verb(Verb,Mood, voice, Frame_pattern) - ->verb (Verb, Mood, Voice, Frame pattern) .extraposed_quest lon_element ... np(Question_element) -->quest ion_np (Question_element) .extraposed_quest ion_element ... preposi t lon(Prep) ,np(Quest lon element) -->preposit ion (Prep),quest ion_np (Question_element) .extraposed_adv ... adv (Adv) -->adv (Adv) .% The XG-pre-processor  has been modi f ied sl ightly so as to give a simple% transparent treatment Of bound anaphora.
(This idea was borrowed from% \[Bowen & Carvalho 88\] ).
The foz~m with extra anaphor (Anaphor, Constltuents)% means that Const i tuents are to be parsed with Anaphor  avai lable as% an anaphor lc  referent.
This is used to treat verbs in comparat ive% complements l lke "do" and "is", which (we claim, at any rate), refer back% to some verbal  antecedent, e.g.% "Which kings re igned longer than Charles I d/d?
"vp (vp (re rh.
Mood, trace np (Controller), A/gs ) ) -->verb (Verb, Mood, Voice, Subcat_pattern),with_e Kt=ca_anaphor (verb (Verb,Voice),(verb_at ge (Subcat pattern, Axgs, Mods, t race_rip (Controller) ,Voice),verb roods (Mods, \[ \] ) ) ) .% NPs.
AS expla ined in the paper, NP's consist of a determiner + a CN.questioq_a:~tlcle (Article) :-member (krtlcle, \[which, whlch pl, what,who, how_many (_) \] ) .question_rq) (Np) -->np (Np),{Np = sp (det ( \[Article,_, \] ), cn (_, Mods) ),(quest iol~_ar t ic le (Article) ;member (::ole (_, np (det (\[Article_l,_,_) ), Cn) ), Mods ),quest io\]%_article (Article_l)) }.np (rip (det ( \[Art, Det, Num\] ),cn (Noun,M~de)) ) -->det (det ( \[Art, Det, Num\] ) ),cn (cn (Noun, Mods ), Det, Nmn),{ np_const taints (Art, Det, Num) },opt io~i l ly  s ignal_comparat ive (np (det ( \[Art, Det, N~n\] ),cn (Noun, Mods ) ) ),optional._comparand.np (name (Ne/~e)) --> name (Name) .det (det ( \[~.~, Det, Nt~n\] ) ) -->art icle (Art, Det, N~)  .det(det(\[ \[ \] ,_ ,_\]))  --> \[).cn (cn (Noun, Mods), Det, Num) -->optional .adJ (Mods),opt ional__noun (MOdS, Noun, Det, N~)  .% NO undetermined NP'S without art ic lesnp.
const l:aint s (Art, Det, Nt~n ) :-dlf (Art, I \] ) ?np_constraint  s ( \[ \], det, _) .% If there's an adjective, then we don't necessar i ly  need a noun.optional._noun (Mode, Noun, Det, Ntu,) -->noun (Noun, Det, Num).optional__noun(\[AdJ\],omitted_noun,_,_) --> \[\].% opt lonaL lys igna l_comparat lve  propagates  r ightward  a request  fo r  acomparat ive complement.opt iona l lys lgna l_comparat ive  (X) .
.
.cor~,rl  son_s ignal led (Comp_operator, X, Complement ) -->( contain,c:_degree (X, deg (comp ( Ccxnp_operator, complement ) ) ) } .opt ional ly  s ignal_comparat ive (x) -->{ \+conta~ ns_degree (X, deg (cc~p (_ , )  ) ) }.conta insdegree  (det ( \[art (_, Degree), _,_\] ), Degree) .contalns__degree (adJ (_, deg (Degree)), deg (Degree)) .contains.degree (adv (_, deg (Degree)), deq (Degree)) .contains_.degree (ap_cc~p (Ap), Degree ) :-contains_degree (Ap, Degree) .contains__de gree (cn (_, Mods), Degree ) :-member (Mc d, Mode ),conta insdegree  (Mod, Degree) .contains_degree (np (Det, Cn), Degree) : -contains_degree (Det, Degree) ;contalns degree (Cn, Degree) .% This is d lscussed at the end of section 4.% If we ~ulve art ic le cc~parlson ("more", "fewer"), then we can either% extrapose an art ic le ("I have more cars than he has motorcycles.
")% or a whole hip ("I have more fr iends in London than he has in New York.
")bound_nul l_pro forms (np (det ( \[art (Art, deg (cc~p (_, _) ) ),Det, Nu~\] ) ,_),det ( \[q (Q), Det, Num\] ),q (Q)).bound nul l_~roforms (np (det ( \[art (Art, deg (comp (_,_)) ),Det, Nun\] ),cn (Noun,Mods)) ,np (det ( \[q (Q), Det, Nmn\] ),cn (Noun, Mods ) ) ,q(Q) ) .% If we have prenc~inal  adject ive comparison, then we have to extrapose% a whole  b~P.
We forl, it by rep lac ing  the comparat ive ad ject ive  by a pos i t iveone.104 Computational Linguistics Volume 16, Number 2, June 1990Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionsbou~d__null pro forms (np (Det,cn (Noun, \[adJ (AdJ, deg (comp (_,_)) ) \] ) ),np (Det,cn (Noun, \[adJ (AdJ, deg (q (Q)) ) \] ) ),q (Q)).% If we have predicate adjective comparison, we extrapose a similar adjective.bound nul l_pro forms (ap_ccmp (adJ (AdJ, deg (ccmp (_,_)) ) ),ap_cc~p (adJ (AdJ, deg (q (Q)) ) ),q(Q) ) .% With an adverb, a similar adverb is extraposedbound__nul i pro forms (adv (Adv, deg (cc~p ( , ) ) ),adv (Adv, deg (q (Q)) ) ,q(Q) ).optional_adJ ( \[AdJ\] ) --> adJ (AdJ) .optlonal_adJ (\[\]) --> \[\] .adJ (adJ (AdJ, \[\] ) ) -->adjective (AdJ) .adJ (adJ (AdJ, deg (ccmp (Ccmp_eperator, Complement ) ) ) ) -->comparative_adjectlve (AdJ, Comp_operator) .%Verb args% Each member in the list of arguments to the verb is a term of the form% role(Arg_type, Arg_value).
See sectionl.2.2%Base case.
If we've parsed all the frame, we're finishedverb_args ( \[ \], Mods, Mods, , _ )  --> \[ \] .verb_args ( \[Subcat J Rest \], \[Argl Next_args\], Out_args, Controller, Voice) -->verb_arg (Subcat, Arg, Controller,voice),verb_args (Re st, Next_args, Out_args, Cont roller, Voice ) .verb args ( \[agent I Rest_subcat\], Next_args,Out args, Controller, passive) -->verb_args (Rest subcat ,Next_args, Out__args, Controller,Volce) .verb_arg(agent, role(agent,Controller),Controller, active) --> \[\].%With an active verb, we parse an object by parsing an NPverb arg (object, role (object, Np) ,_, active) -->np (Np).%But with a passive verb, the surface subject is the objectverb arg(obJect, role(obJect,Controller),Controller,passive) --> \[\].verb arg (prep__object (Prep), role (prep_obJect,Np) .... ) -->preposition (Prep),np (Np) .verb arg (relatlonal_object, role (Head, np (Det, cn (person, Mods) ) ), _, active ) -->np (np (Det, cn (Head, Mods) ) ) .verb_arg (s comp, role (s_cc~p, S) , ,  active) -->s comp(S).verb arg(ap_ccmp, role (ap__co~mp,Ap) ,_,active) -->ap comp (Ap) .verb arg (inf_comp, role (inf_comp,Vp) ,_,_) -->vp_comp (vp).s_comp (S) -->\[att\], s (S) .vp_ccmp (Vp) -->vp (Vp).ap_comp (ap_comp (AdJ) ) -->adJ (AdJ),optlonally_signal_comparative ( ap_comp (AdJ)),opt ional comparand.% A complement to a comparative.
This can only be parsed if we have% earlier detected a comparative marker, which has made its presence% known by putting a comparativesignalled element on the extraposition% llst.optional_cc~parand -->ccmparlson signal led ( Comp_oper ator, Associated_const it uent, Complement ),{ complementizer _for__comp__operator (Cc~p_eperator, Complementizer ) },complementizer (Cc~pl~mentizer),compazaund c(xnplelnent (Complementizer,Associated constituent, Complement ) .% First case: an NP or PP cc~parand, the simplest (and cormnonest)% kind of contrastive comparative: Section 3.4.1.
We may have an% "anaphoric verb" with an ~,  which is going to be available% frcm the "verb anaphor stack" (see cc~ments above).cc~parand_comple/Bent (Complementizer, _, subject (Np)) -->opt ional vad ( Complementl zer ),np (Np),anaphoric__verb.comparand_complement (_, ,Np) -->np (Np) .comparand complement (_,_,Role) -->pp (Role).% Second case: CN-ccmparison (section 3.4.2)comparand__cc~plement ( .... Cn) -->cn (Cn, Det, NUmB ) .% Third case: an "S-operator" or "VP-operator" comparand, (section 3.4.3)comparand_complement (Complementizer,_, S_operator) -->optional_vad (Complementl zer ),s_operator (S_operator) .comparand complement (Complementizer,_,vp_operator) -->optional_vad ( Complementi zer ),vp_operator (Vp_operator) .s_operator (s_operator (trace_s (Inner_s), S) ) -->open x__bracket,extrapose (s_cc~p (trace_s (Inner_s)) ),S(S),close__x_bracket.vp_operator (vp_operator (trace_vp (Inner_vp), S) ) -->open_x bracket,extrapose (vp ccmp (trace_vp (Inner_vp)) ),s (S),close_x_br acket.% Fourth case: contrasted prepositions (section 3.4.5)ccmparand_compl~ent (_,_, ro lemarker  (Prep)) -->preposition (Prep) .% Fifth case: clausal comparison (section 4)comparand_complement (Complementizer,Associated_constituent, Clausal) -->opt ional_vad ( CO~plementl zer ),clausal comparative (Clausal,Associated constituent) .clausal_comparative (clausal (Q, S) ,Associated_constituent) -->(bound_null proforms (Assoclated_constltuent, Null_pro forms, Q) ),open_x bracket,extrapose (Null~roforms),s (S),close x bracket.% Of course, the optional comparand will usually not be present!% However, if a comparison has been signalled we have to pick it up somewhere,% otherwise it will still be hanging around on the extrapositlon list% when we reach the end of the sentence.optional_c~nparand--> \[\].% In Swedish, some comparative complements, may be preceded by an optional% "vad" ("what").optlonal_vad(than) --> \[vad\].optlonal_vad(than) --> \[\].optional_vad (Other) -->{ dif (Other, than) }.% Getting an "anaphorlc verb" - see eon~nents above.anaphoric verb -->verb (Verb,_, , _ ) ,anaphor stack (Potentlal_referents),( verb_anaphora antecedent (Verb, Potentialreferents) }.verb anaphora_antecedent (Verb, Potential referents ) :-member (Ref, Potentialreferents),verb_anaphora_mateh (Verb, Re f) .verb_anaphora mat ch (Verb, verb (Re f_verb, active ) ) :-verb anaphora match 1 (Verb, Ref verb, active ) .verb anaphora match (Verb, verb (Ref_verb, passive ) ) :-verb anaphora match__l (Verb, Ref_verb,passive) .% Rules for verb anaphora (grossly oversimplified - this is not% the main subject of the paper!
)verb anaphora_mat ch_l (.
do ', _, active ) .verb_anaphora_match__l (have,have,active) .verb anaphora match I (.
bepass ive  ', _, pas sire ) .verb anaphora match 1 ( 'be ', 'be ', active) .Computational Linguistics Volume 16, Number 2, June 1990 105Mammy Rayner and Amelie Banks An Implementable S mantics for Comparative Constructions% Verb modsverb mods(Mods,Mods) --> \[\].verb_mods(\[ModlMods),Mods) -->verb mod(Mod),opt ional ly  signal_comparatlve(Mod),optional_comparand.verb mod(Pp) --> pp(Pp).verb_mod(Adv) --> adv(Adv).pp(role(Prep, Np)) -->preposit lon(Prep),np(Np).adv(adv(Adv, \[\])) -->adverb(Adv).adv(adv(Adv,deg(cc~np(Compoperator,Complement))))  -->comparative_adverb(Adv, Comp_operator).adJective(Adj) -->\[Word\] ,(word(Word,AdJ,adJect ive)}.adJect ive_modlf ler(Mod) -->\[Word), {word(Word, Mod, adject ive modif ier)}.adverb(Adverb) -->\[Word\],{word(Word, Adverb, adverb)).art icle (Art, Det, Num) -->\[Word\], {word(Word,Art, art ic le (Det, Num) ) }.art icle (art (Art, deg (comp (Comp_operator, Complement ) ) ),Det, Num) -->comparat lve_art ic le (Art, Comp_operator, Det, N~m) .comparat iveadverb  (Adverb, Comp_operator ) -->\[Word\], ( word (Word, Adverb, comparat ive_adverb (Comp_operator) ) ).comparat ive_adverb (Adv,Mod) -->adJect ive modif ier(Mod),\[Word\], (word(Word, Adv, adverb)}.comparat ive_adJect ive(AdJ ,more) -->\[Word\],(word(Word, AdJ ,cc~parat ive_adJect ive)) .comparative_adject ive(AdJ,Mod) -->adject ive_modif ier(Mod),\[Word\],{word(Word, AdJ ,adJect ive)}.comparat lve_ar t i c le (Ar t ,C~poperator ,Det ,Num)  -->\[Word\],{word(Word, Art ,art lc le(comparat ive,Comp_operator ,Det,Num))}.complementlzer(nul l)  --> \[\].comple/nentizer (C(xnp) -->\[Word\], \[word(Word, Comp, complementizer)).name(Name) - ->\[Word\],\[word(Word, Name, name)}.noun(Noun, Det ,N~)  -->\[Word),{word(Word, Noun, noun(Det ,N~)) ) .preposit ion(Prep) -->\[Word),{word(Word, Prep,preposit ion)}.pronoun(Pronoun) -->\[Word\],(word(Word, Fronoun,pronoun)}.verb(Verb,Mood,Voice,Frame_pattern) -->\[Word\],{word(Word, Verb, verb(Volce,Mood, Frame_pattern))}.% A note on representation:% evnt( lambda(x,P(X))  is to be read as: "An event E Occurred, such that P(E)% held.% quant(Q, lambda(X,R(X)) , lambda(Y,S(Y))) ,  where Q is a general ized quantif ier,% is to be taken as equivalent with% Q (lambda (x, R (X)), lan~bde (Y, S (Y)) ) .% When reading formulas, it wil l  often be helpful to think of X and Y as in% some sense be ing "the same variable"% q(N,P) is to be read as denot ing the genera l i zedquant i f ie r  {NIP}.% q(N,\[\]) represents the quant i f ier  {N}, i.e.
"exactly N"top_sem(y_n_q(S) ,y  n_q(Sem)) :- !,s_form (S, Sere) .top_sem(wh_q(S),wh_q(Sem) ) :- !,s_form ( S, Sere) .top_sere (S, sere) :-s_form (S, sem).s_form ( S, \].."orm) :-syn_to_ql f (S, Qlf),reduce (QI f, Form).% syn to qlf converts the syntact ic form to the quasi - logical  formsyn_to qlf ( \[ \], \[ \] ) .syn_to ql ~ ( \[ F irst  \] Rest \], \[First_ql f I Rest_ql f \] ) :-syn_to_ql  f (Fizst, First_qlf),syn_to_.ql f (Rest, Rest_qlf) .syn_to ql f \[s (Subject ,Vp), Qlf  ) :-ayn_to_ql f (Subject, Sub J_qlf),syn to_ql f  (Vp,Vp_qlf),rewrite..qlf0 (apply (SubJ_qlf, Vp_qlf  ), Qlf) .syn to qlf (vp(Head, ,trace np(X) ,Frame) ,vp(Head, X, Qlf) ) :-syn to qlf (Frame, Qlf  ) .syn_to_ql f (role (Role,~rg), role ( ro lemarker  (Role), Axg_qlf) ) : -syn_to_ql f (Arg,Arg_qlf) .syn to_~If (subject (Np), subject (Np_qlf)) : -syn_to_qlf  (Np, Np_ql f).syn to ql f  (np (Det, Cn), quant (Det_ql f, Cn qlf) ) : -syn_to ql f (Det, Det_qlf),syn to_ql f  (Cn, Cn qlf) .syn_to._q\]f(ap_cc~p(AdJ) ,Qlf) :-syn to_ql f (AdJ, Q1 f ) .syn_t o__ql f (trace_np (Vat), t race_np (Var)) .syn_to q2 f (det ( \[art (_, deg (Degree) ), _, _\] ), Degree_qlf) : -syn to_.qlf (Degree, Degree_qlf) .syn_to q) f (det ( \[q (Q), _, _I ), q (Q, \[ \] ) ) ?syn_to_.qlf (det (\[Det,D,N\]) , \[Det,D,N\] ) :-\+functor (Det, art,_),\+functor (Det, q,_) .syn_t o_.ql f (on ( Head, Mods ), cn ( Head, Mods_ql  f ) ) :-syn_to q l f  (Mods,~ds_q l f )  .syn_to_.qlf (Dame (Name), name (Name)) .syn_to ql f  (adJ (AdJ, deg (Degree)),abstract ion (X, re lat ion ( \[AdJ, X, Degree_ql f  \] ) ) ) :-syn to ~If  (Degree, Degree_ql  f ) .syn to_ql f (adv (Adv, deg (Degree)),abstract ion (X, relat ion ( \[Adv,X, Degree_qlf\] ) ) ) : -syn toq l f  (Degree, Degreeq l f  ) .syn_t o__ql f (comp (Comp_operat or, clausal (q(Ql), S) ),q (Q, conJ (relation ( \[Comp operator, Q, Q1 \] ),S_qlf) ) ) :-syn_to qlf (S, S qlf) .syn_t o__ql f (comp ( Comp_operator, Phrasal ),c degree \[Comp operator, Phrasal_ql  f ) ) :-\+funct or (Phrasal, clausal,_),syn to ql f (Phrasal, Phrasal_ql  f ) .syn to ql f (q (Q), q (Q, \[ \] ) ) .% This is.
for "S_operators"syn_to _ql f ( t races  (x), t race_s (X)) .% And this is for VP-operators.syn_to _q2 f (trace_vp (x), trace_vp (X)) .syn_to__ql f ( ro lemarker  (Prep), role m~ker  (Prep)) .syn_to ql f \[s_operator (trace_s (x), S), s_operator (X, S_operator_ql  f ) ) :-syn_to .ql f ( S, S_operat or_ql f ) .syn_to_.ql f (vp_operator (trace vp (X), S), vp_operator (X, S_ql f ) ) :-syn to_.qlf (S, S_qlf).rewrite_ql  f0 (Qlf0, Q1 f ) :-contaiF~s_functor (Qlf0, c degree/2 ), !,rewri te_ql f  (Qlf0, Qlf) .rewrite_(|lf0 (QI f, Qlf  ) .% comp~rrison nodes can be inserted in the fo l lowing places:%% i.
(>let a "role" node in a vp% 2.
(>ler a "vp" node106 Computational Linguistics Volume 16, Number 2, June 1990Mammy Rayner and AmeHe Banks An Implementable S mantics for Comparative Constructions% 3.
Over an "abstraction" node (really, this should be unified with 2.
)% 4.
Over an "apply" node%% rewrite qlf recursively goes down the qlf: when it finds a place where% a comparison could potentially occur, it checks to see if it can make one.% That is, it%% a. tries to extract a c complement and store it.% b. tries to find a suitable contrast.% c. constructs the comparison node and inserts it.rewrite_ql f (QI f0, Q1 f ) :-rewrite qlf on subtrees (Qlf0, Qlf ).rewrlte_ql f (QI f0, QI f ) :-comparison_inset tion_sit e (Qlf0),raise comparative (QI f0, Qlfl, Store),contrastand_insertcomparison (Qlfl, Store, Qlf) .comparison_insertion_site ( \[role (_,) I_\] ) ?comparison insertion_site (vp (_,_,) ) .comparison_insertion_site (abstraction (,_) ) .comparison_insertion_site (apply (_, _) ) .contrast and insert_comparison(Qlf0,Store,Qlf) :-Store = c_stored item(C_complement,_,Q),find contrast0 (C_complement, Qlf0, Qlfl, Contrast, C, Q),insert_normal_comparison (Qlfl, Store, Contrast, C, Qlf) .contrast and insert_comparison(Qlfl,Store,Qlf) :-insert_s operator_comparison (Qlfl, Store, Qlf) .contrast and insert ccmparison(Qlfl,Store,Qlf) :-insertabstracted_variable_comparison (Qlfl, Store, Qlf) .insert_normalcomparison (Qlf,c_stored_item (C_compl~ment, C_operator, Q),Contrast,C,comparison (Contrast,C complement,C operator,C,Q,Qlf) ).% This is the first special case from section 3.3.
The qlf% under the comparison must be an abstraction, and the C_complement% must be an NP denotation.insert_abstracted_variable_comparison (Qlf,cs tored i tem (C_complement, C operator, Q),abstraction (x1,comparison (trace_np (Xl),C_complement,C operator,C,Q,apply(C,Qlf) ) ) ) :-np_denot ation (C_complement),Qlf = abst ract ion( , ) .% This is the second special case from section 3.3.
The C_complement% must be an s operator, and the qlf under the comparison something% that an s_operator can be applied to - an S or VP denotation.% The second clause is to take care of a subtle problem that arises% if the s_operator's argtunent is a VP-denotation: see the remarks% before Table 4 in section 3.4.3.insert_s_operator_comparison (Qlf,c_stored_item (C_complement, C_operator, Q),comparison (s_operator (S, S) ,C_cc~plement,C_operator,C,Q,apply(C,Qlf) ) ) :-C_complement = s_operator (_,_),Qlf = apply (,_) .insert_s operator comparison (Qlf,c_storeditem (Ccomplement, C operator, Q),abstraction (x,comparison (s_operator (S, S),C_complement,C_operator,C,Q,apply (C, (apply (trace_np (X),Qlf)))))) :-C complement ~ s operator (_,_),Qlf - vp(_,_,_).% Raise_comparative lifts a c_degree out of a constituent, leaving a% Q behind.raise ccmparatlve (X, ,_) :- vat (X), !, fail.raise ccmparative (c_degree (C_operator, C ccmpl~nent),Q,c_stored_item (C complement, C_operator, Q) ) .raise_cc~paratlve (relation (List0),relatlon (List1),Store) :-~aise comparative (List0,Listl, Store) .raise_comparative ( (F0 \] R), IF1 i R), Store) : -raise comparative (F0, F1, Store ) .raise_comparative ( \[ F i R0 ), \[ F I Rl ), Store ) : -raise comparative (R0, RI, Store ) .ralsecomparative (apply (QIf0,X),apply (Qlfl, X),Store) :-raise_ccmparat ire (Qlf0, Qlfl, Store).raise cc~paratlve (apply (x, Qlf0 ),apply (X,Qlfl),Store) .-ralse comparatlve (QI f0, Q1 fl, Store ).r aise comparative (abstraction (X, Qlf0 ),abstraction (X, Qlfl ),Store) "-raise_comparative (Qlf0, Q1 fl, Store ) .raise_comparative (quant (Det0, Cn item),quant (Detl, Cn_it era),Store) - -ralse_ccmparative (Det 0, Detl, Store) .raise cc~paratlve (quant (Det, cn (Head, \[Mod0\] ) ),quant (Det, cn (Head, \[Modl\] ) ),Store) "-raise_comparative (Mod0,Modl, Store).raise_cc~paratlve (role (Role, Quant0 ),role (Role, Quantl ),Store) '-raise_cc~parative (Quant0, Quantl, Store) .raise_ccmparative (subject (Quant0),subject (Quant i },Store) ?
-raise_comparative (Quant 0, Quant I, Store).raise comparative (vp (Head, X, Qlf0 ),vp (Head, X, Qlfl ),Store) ?
-raise_comparative (Qlf0, Qlfl, Store) .rewrlte ql f_on sabtrees (apply (Np, Vp0), apply (Np, Vp) ) :-rewrite_q1 f (Vp0, Vp) .rewrite_q1 f_on_sabtrees (apply (Np0, Vp), apply (Np, V~) ) :-rewrite_qlf (Np0, Np) .rewrite ql f_on subtrees (vp (Head, X, Qlf0 ), vp (Head, X, Q1 f ) ) :-rewrite qlf (Qlf0, Qlf).rewrite qlf_on subtrees ( IF0 i R), (F J R\] ) : -rewrite qlf (F0, F) .rewrite_ql f_on_subtrees ( \[F I R0\], \[F I R) ) : -rewrite_qlf (R0, R) .rewrit e_ql f_on_subtrees ( role (Role, Quant 0 ), role (Role, Quant ) ) :-rewrite qlf (Quant O, Quant ).rewrite_ql f_on_sabtrees (sub Ject (Quant0), sub Ject (Quant) ) :-rewrite_q1 f (Quant 0, Quant ) .rewrite_qlf on_sabtrees (quant (Det, Cn0 ), quant (Det, Cn) ) :-rewrite_qlf (Cn0, Cn) .rewrite ql f_on_subtrees (cn (Head, Mods0 ), cn (Head, Mods ) ) :-rewrite_qlf (Mods0,Mods) .% find_contrast checks a Ccomplement against something that might% be a contrastable item (or contain one).
The last three arguments are: what% the thing is replaced by (either the C, or some thlng containing the C),% the extracted contrasted item, and a pointer to the C. Note that the% contrast cannot contain the Q - hence the following clause.Computational Linguistics Volume 16, Number 2, June 1990 107Manny Rayner and Amelie Banks An Implementable S mantics for Comparative Constructionsf indcont  rast 0 \[C_cccnple~nent, Q1 f 0, Q1 f, Contrast, C, Q) :-find_contrast (C_complement, Qlf0, Qlf, Contrast, C),\+contains_id(Contrast,Q).% There are a large n~m~ber of cases.
It would clearly be possible to collapse% at least some of these.% The first five are essentially slmilar:% i: we're looking at a role, and the C complement is also a role.% (John has more books in the bec~rocm than in the kitchen)flnd_contrast (role (Role,_),role (Role, Quant ),C, role (Role, Quant ), C) .% 2: we're looking at a role, and the C_complement is an NP.% (John has more books in the bedroc~ than the kitchen).find_contrast(C_ccmplement,role(~le,C~/ant),role(R~le, C),Quant,C) :-np_denotation(Ccc~nplement).% 3: we're looking at an NP, and the C_con~pleJnent is an NP.find_contrast (C cc~pl~ent,Contrast,C, Contrast,C) :-np_denot ation (Ccc~lement) ,np_denotation(Contrast).% 4: we're looking at a subject, and the C_cc~aplement is something% that can constrast against the subject's NP.% (John has more books in the kitchen than Mary).flnd_contrast (C complement,subject (Quant),subJect(Q~antl) ,Contrast,C) :-find_contrast (C_c~mplement, Quant, Quant I, Contrast, C) .% 5: we're looking at a subject, and the C_ccraplement is a subject.% (John has more books in the kitchen than Mary does).find_contrast(subject(_),subJect(Quant),subJect(C),Quant,C)?% 6: CN contrasting; we're looking at an NP, and the C_cc~nplement is a cn.% (More men have b(>Dks in the kitchen than wc~en).find contrast(cn(_,_),quant(Det,Cn),quant(Det,C),Cn, C).% 7: VP operator contrasting; we're looking at a subject, and the% C_cc~lement is a vp_operator.% (John has more h~oks in the kitchen than Mary is able to).find contrast(vp_operator( ,) ,subJect(Quant),subJect(C),Quant,c).% 8: Preposition contrasting; we're looking at a role, and the% C_complement is a role marker with a "contrastable" role.% ("more women voted for the pro~sa l  than against".
)find contrast(role_marker(Cc~p_role),role (role marker (Role),Quant),role(C, Quant),rolemarker(RDle),C) :-contrastable_roles(Comp_role,Role).contrastable_roles(X,Y) :-(contrastable_roles_l(X,Y);contrastable roles_l(Y,X)).% One example of a clause defining a contrastable role pair:contrastable_rolesl(for,agalnst).% 9: Recurslve cases:find contrast(C complement,vp(Head, X,Qlf),vp(Head, X,Qlfl),Contrasted, C) :-flnd_contrast(C_ccmplement,Qlf, Qlfl,Contrasted, C).find_contrast(C_ccmplement,apply(Qlf,X),apply(Qlfl,X),Contrasted, C) :-find_co~:rast(qcomplement,Qlf,Qlfl,Contrasted, C).find comlrast (C_complement,apply (X, Qlf ),apply (X, Q1 fl ),Contrasted, C) :-find_contrast (c complement, Qlf, Qlfl, Contrasted, C) .find_contrast (C_complement, IF I R\], \[F_I n R), Contrast, C) : -find_contrast (Ccomplement, F, F_I, Contrast, C) .f indcontrast (C cc~lement, \[F I R), \[F I R_I \], Contrast, C) : -find_contrast (C_cc(nplement, R, R1 ,  Contrast, C) .% Reduce tllrns the QLF into a logical fo~ by recursively going through it.reduce(X,X) :- vat(x),!.reduce(appLy(Fqlf ,~g_qlf) ,LF) :-reduce(Fqlf,  F),reduce(~:g_qlf,Arg),apply(F,1~rg,LF).reduce(~gstraction(X,Qlf),k(X, LF)) :-reduce (Qlf, LF).% We have to reduce possible degree arguments to a relation.reduce (rel~.tion (A/g_list 0 ), LF ) :-reduce .az g_llst (Arg_list0, A/g_llst ),LF =.. Azg_list.reduce (conJ(Qlfl,Qlf2),LF) :-reduce(Q~fl,LFl),reduce(Qlf2,LF2),conJoir~(\[LFl, LF2},LF).reduce(s~Ject(Qlf),LF) :- reduce(Qlf, LF).reduce (~lar,t (Det, Cn),l(V~_sem, quant (Det sem, Cn sem, vp_sem) ) ) :-reduce det (Det, Det_sem),reduce '~Cr~, Cn_sem) .% "substitute (x)" denotes the higher-order function IP.P (X).% Our sin~le-mlnded implementation of "apply" can't deal with anything more% complicated than simple substitutions, so this has to be treated as a% special case.reduce (trace_np (X), substitute (x)) .reduce(name(N),substitute(N)).reduce (vp_operator (x, Vp_op), k (X, Vp op_sem) ) :-reduce ( Vp _op, Vp_op_s em ) .reduce(cn(Head,\[)),k(X, Head rel)) :-Head_tel :=.. \[Head, X).reduce(cn(Head,\[AdJ_qlf\]),LF) :-Head rel =.. \[Head, X),reduce(KdJ_glf,AdJLF),conJoin(\[:%(X,Headrel),Adj_LF\],LF).reduce (vp (Head, X, Qlf ), k(X, LF) ) :-reduce vp (QI f, LF, Head, Props-Props) .reduce (trace ~p (X) ,X) .reduce (traces (x), X) .reduce(role_marker(Role),Bole).reduce(s operator (X, Qlf),k\[X, LF) ) :-reduce (~if, LF) .% This is the expression (*) in section 3.2reduce (camparlson (Contrast, C_complement, C_operator, c, Q, Psil ), LF) :-Nl_condition = relation(\[C_operator,N, Nl\]),PSI11 = k(Q,~(C, Psil) ) ,apply (Pslll, q(N1, Nl_condition ), N_condit lon0 ),apply (N condition0, C_complement, N_condition),apply (Psill, q (N, N_cond/tion), Qlf0 ),apply (Qlf0, Contrast, Qlf) ,reduce (QI:~ =, LF ) .108 Computational Linguistics Volume 16, Number 2, June 1990Manny Rayner and Amefie Banks An Implementable S mantics for Comparative Constructionsreduce(\[\],\[\]).% reduce_vp is a special form of reduce for reducing the llst of verb_args.% The arglu,ents are:% i: Qlf - a llst of verb_arg nodes% 2: Piece of LF produced by reducing it% 3: The head verb% 4: a d-llst of lambda abstractions, which will end up as properties of the% event associated with the head verb.reduce_vp(\[\],evnt(Property),Head, Event_properties-\[\]) :-Head tel =.. \[Head, X\],conJoin(\[k(X, Head rel)lEventproperties\],Property).reduce_vp(\[role(role_marker(Role),NP_qlf)IRest_args\],LF, Head, Event_propertles-\[k(E,Role_relation)~Rest_propertles\]) :-np_denotatlon(NP_qlf),Role_relation =.. \[Role,E,X\],reduce(NPqlf ,NPLF),reduce_vp(Rest_args,RestLF, Head, Eventproperties-Rest_properties),apply ( NP_LF, k (X, Rest_LF ) , LF) .reduce vp ( \[role (role_marker (Role), Qlf) I Rest_args \],LF, Head, Eventproperties- \[k (E, Role_relation) }Rest properties\] ) :-\+np_denotation(Qlf),Role_relation .. \[BoIe,E,Role_LF\],reduce(Qlf,Role_LF),reduce_vp(Restargs, LF, Head, Eventproperties-Rest_.properties).reduce_vp(\[ubstraction(X, Qlf) lRest\],LF, Head, Event_properties-\[k(X, Sem) IRest~roperties\]) :-reduce (Qlf, Sem),reduce_vp(Rest,LF, Head, Event properties-Rest~roperties).reduce arglist(\[\],\[\]).reduce arg_list (\[FOIR0\], \[FIR\]) :-reduce_arg(F0,F),reduce_arglist(R0,R).reduce_arg(x,x) :- var(x),!.reduce arg(q(N, Qlf), q(N, LF)) :- !,reduce(Qlf,LF).reduce_arg(x,x).reduce det (\[a,undet, sing\],ex) :- !.reduce_det (\['scme',undet, sing\],ex) :- !.reduce__det(\[many,undet,plur\],many) :- !.reduce det (\[\[\],undet, sing\],ex) :- E.reduce_det(\[\[\],det, sing\],the) :- !.reduce_clef ( \[which,_,_\] ,wh) :- !
.reduoe_det ( \[which~l, , \] ,whpl)  :- !
.reduce det(q(N, Qlf),q(N, LF)) :- !,reduce (QIf,LF).np_denotatlon(quant(_,_)).np_denotation(name(_)).np__denotation(trace_np(_)).APPENDIX 3 EXAMPLESi: \[vilka, kungar, regerade, l{ngre, {n, Gustav III\]which kings reigned longer than Gustav III?.......
Syntactic form .........wh_q(s(subJect(np(det(\[which_plundetplur\])on(king\[\])))vp(reignfinitetrace_np(A)\[role(agenttrace_np(A))adv(longdeg(comp(morensune(Gustav Ill))))\]))).......
Logical form .........wh_q(quant(wh_plk(A, king(A))k(B, evnt(k(C,\[andreign(c)agent(C,B)long (Cq(Dk (B, evnt (k (E, \[andreign(E)agent(E, Gustav III)long(Eq(Fmore(D,F)))\])))))\])))))2: \[hade,n}gon, kung, fler, slner, In, Gustav Wasa\]had any king more sons than Gustav Wasa?.......
Syntactic form .........y nq(s(subJect\]np(det(\[scmeundersing\])on(king\ [ ))))vp(havefinitetrace__np(A)\[role(agenttrace_np(A))role(sonnp(det(\[art(manydeg(comp(morename(Gustav Wasa))))underpl~r\])on(person\ [ \ ] ) ) ) \ ] ) ) ).......
Logical fom ......... 'y n_q(quant (exk(A, king (A))(B, quant (q (Ck(B, quant(q(Dmore(C,D))k(E,person(E))k(F, evnt(k(G,\[andhave (G)agent(G,Gustav Wasa)son(G,F)\]))))))k(H,person(H))k(I,evnt(k(J,\[andhave(J)agent(J,B)son(J,I)\])))))))3: \[dog, Gustav Wasa, f\[re,Gustav II Adolf\]died Gustav Wasa before Gustav II Adolf?.......
Syntactic form .........y_n_q(s (subject (name (Gustav Wasa) )vp (diefinitetrace_np \]A)\[role (agenttrace np (A))adv (at_timedeg (ocmp (beforename (Gustav II Adolf) ) ) ) \] ) ) ).......
Logical form .........y n_q(evnt (k(A, \[anddie (A)agent (A, Gustav Wasa)at_t ~/~e (Aq(Bk (C, evnt (k(D, \[anddie(D)agent (D,Gustav II Adolf)at_time (Dq(Ebefore (B,E))) ) ) ) ) ) ) \]) ) )4: \[vilka, kungar,var,mer,berlmda,{n,Karl xII\]which kings were more famous than Karl XII?Computational Linguistics Volume 16, Number 2, June 1990 109Manny Rayner and AmeHe Banks An Implementable S mantics for Comparative Constructions....... Syntactic form .........whq(s(subject(np(det(\[whlch_plundetplur\])cn(king\[\]))5vp(befinitetrace_np(A)\[role(agenttrace_np (A))role(ap_compap comp(adJ(famousdeg(comp(morename(Karl XII;)))))\]))).......
Logical form .........whq(quant (whp lk(A, king(A))k(B, evnt(k(C,\[andbe(C)agent(C, B5ap_comp(CI(D, famous(Dq(Efamous(Karl XlIq(F,more(E,F))))5))\])55))5: \[Kalle, kJpte, fler,blcker,{n,vad, Marie,kunde,b\[ra\]Charlie bought more books than (what) Mary could carry?.......
Syntactic form .........s(subJect(name(CharlieS)vp(buyfinitetrace_np(A)\[role(agenttrace_np(A))role(objectnp(det(\[art(manydeg(cc~p(moreclausal(q(B)s(subJect(name(Mary))vp(be able tofinitetrace np(C)\[role(agenttrace_np(C)5role(inf_compvp(carryinfinitetrace np(D)\[role(agenttrace np(D))role(objectnp(det(\[q(B)undetplur\]5cn\[book\[5)555))\]))))5)undetplur\]5cn(book\[\]5\])\]5).......
Logical form .........quant(q(A\[andmore(A,B)evnt(k(C,\[andbe able to(C)agent(C,Mary)in fcomp(CX(D, quant(q(B,\[\])k(E,bOOk(E))k(F, evnt(k(G,\[andcarry(G)agent (G,D)obJect(G, FS\]))))))\]))\[)k(H,book(H) 5k(I,evnt(k(J,\[andbuy(J)agent (J, Charlle)obJect(J,I)\]5)))6: \[~rie,klpte, en, dyrare,vas,\[n, vad, Kalle, klpte\]~mry bought a dearer vase than (what) Charlie bought,....... Syntactic form .........s(sul)Ject(name(Mary))vp~b~f~nitetzace_np(A)\[~ole(agenttrace_np(A))role(objectnp(det(\[aundetsing) 5cn(vase\[adJ(expensivedeg(comp(moreclausal(q(B5\]5))\]5)*)5)\]55)\])5s(subJect(name(Charlie)5vp(buyfinitetrace_np(C5\[role(agenttrace_np(C) 5role(objectnp(det(\[aundetsing\])cn(vase\[adJ(expenslvedeg(q(B))).......
Logical form .........quant(exk(A,\[andvase(A5expenslve(Aq(B\[andmore(B,C)quant(exk(D,\[andvase(D)expensive(D,q(C,\[\]))\])k(E, evnt(k(F,\[andbuy(F)agent(F,Charlie)obJect(F,E)\]))))\]))))k (G, evnt (k(H, \[andbuy (H5agent (H,Mary)object(H,G)\]))))7: \[m)nga, turister, spenderade,fler, kronor, i,London,(n,i,New York\]m~ny tourists spent more kronor in London than in New York....... Syntactic form .........S (subject (np (det ( \[manyunderplur\] )cn (touristC\]55)vp (~pendfinite?
srace np (A)\[role (agenttrace np (A))role (objectnp (det ( \[art (manydeg (comp (morerole(innam~ (New York) ) ) ) )undetplur\] )cn (krona\[\]))5role (inname(London) ) \] ) )110 Computational Linguistics Volume 16, Number 2, June 1990Maany Rayner and AmeUe Banks An lmplementable S mantics for Conlantive Comtn~tiom.......
Logical form .........quant(manyk(A, tourist (A))k(B,quant(q(Ck(B,quant(q(D,more(C,D))k(E, krona(E))k(F,evnt(k(G,\[andspend(G)agent(G,B)obJect(G,F)in(G,New York)\]))))))k(H, krona(H))A(l,evnt(k(J,\[andspend(J)agent(J,B)obJect(J,I)in (J, London) \] ) ) ) ) ) )8: \[Gustav Wasa, hade, fler,(iskarinnor,{n,Kalle,p)stod\]Gustav Wasa had more mistresses than Charlie claimed........ Syntactic form .........s(subJect(name(Gustav Wasa))vp(havefinitetrace_np(A)\[role(agenttrace_rip(A))role(mistressnp(det(\[art(manydeg(ccwp(mores_operator(trace_s(B)s(subJect(name(Charlie))vp(clalmfinitetrace np(C)\[role(agenttrace_np(C))ro le(scomptrace_s(B))\]))))))underplur\])cn(person\[\])))\])).......
Logical form .........quant(q(Aevnt(k(B,\[andclalm(B)agent(B, Charlle)s_comp(Bquant(q(C,more(A,C))k(D,person(D))k(E,evnt(k(F,\[andhave(F)agent(F, Gustav Wasa)mlstress(F,E)\])))))\])))k(G, person(G))k(H, evnt(l(I,\[andhave(I)agent(I,Gustav Wasa)mistress(I,H))))))9: \[fler, kvinnor,(n,m{n,l{ser, H{nt i Veckan\]more wc~en than men read 'News of the World'....... Syntactic form .........s (subject (np (det ( \[art (manydeg(cc~sp(morecn(man\[\]))))undetplur\])cn(wcman\[\])))vp(readfinitetrace_np(A)\[role(agenttrace_np(A))role(objectn~me(News of the World))\])).......
Logical form .........quant\[q(Aquant(q(Bmore(AB))~(C,man(C))k(D,evnt(k(E,\[andread(E)agent(E,D)obJeet(E, News of the World)\])))))k(F, wcman(F))k(D,evnt(k(G,\[andread(G)agent(G,D)obJect(G, News of the World)\]))))i0: \[Marie,verkar, l{ngre,{n, Kalle\]Mary looks taller than Charlie........ Syntactic fore .........s(subJect(na~e(~L--y))vp(appearfinitetrace_np(A)\[role(agenttrace_np(A))role(ap_compap_comp(adJ(talldeg(cGmp(morename(Charlle))))))\])).......
Logical form ........evnt (k(A, \[andappear (A)agent (A, Mary)ap_comp (A(B, tall (Bq(Ctall (Charlieq (D,more (C, D) ) ) ) ) ) ) \] ) )ii: \[Kalle, sprlnger, fortare, { n, vad, Marie, kan\]Charlle runs Easter than Mary can........ Syntactic form .........s (subject (came (Cha~lim))vp (runfinitetrace_np (A)\[role (agenttrace_rip (A))adv ( fastdeg (comp (morevp_operat or (t race_vp (B)s (subject \[name (Mary))vp (be able tofinitet race_np (C)\[role (agenttrace np (C))role ( inf_ec~trace_vp (B)) \] ) ) ) ) ) ) ) ) ).......
Logical form .........evnt (~.
(A, \[andrun (A)agent (A, Charlle)fast (Aq(Bevnt (A (C, \[andbe able to(C)agent (C, Mary)inf_comp (Ck(D, svnt (k(E, \[andrun(E)agent (E, D)fast (E, q(F,more (B, F)))\]))))\]))))\]))Computational Linguistics Volume 16, Number 2, June 1990 111Manny Rayner and AmeHe Banks An Implementable Semantics for Comparative Constructions12: \[fler, kvinnor,r~stade, fIr, f~rslaget, {n, emot\]more women voted for the-suggestion than against........ Syntactic form .........s (subject (np (det ( \[art (manydeg (ccmp (morero le_~rker  (against)) ) )undetplur\] )cn (womanC\])))vp (votefinitetrace np (A)\[role (agenttrace_np (A))role (fornp(det (\[ \[\]detsing\] )cn (suggestionC\])))\])).......
Logical form .........quant(q(Aq1~nt(q(B,more(A,B))k(C, wc~an(C))k(D, quant(thel(E, suggestion(E))A(F, evnt(k(G,\[andvote(G)agent(G,D)agalnst(G,F)\])))))))~(lt, w~man(S))k(1),(~/ant(thek(I, suggestion(1))X(J, evnt(l(K,\[andvote(K)agent (K,D)for(K,J)\]))))))112?
r ,  .~,..~ ~ .
.
.
.
~Conputatioual Linguistics Volume 16, Number 2, June 1990
