Proceedings of the SIGDIAL 2013 Conference, pages 223?232,Metz, France, 22-24 August 2013. c?2013 Association for Computational LinguisticsTraining and evaluation of an MDP model for social multi-userhuman-robot interactionSimon Keizer, Mary Ellen Foster,Oliver LemonInteraction LabHeriot-Watt UniversityEdinburgh (UK){s.keizer,m.e.foster,o.lemon}@hw.ac.ukAndre Gaschler, Manuel Giulianifortiss GmbHMunich (Germany){gaschler,giuliani}@fortiss.orgAbstractThis paper describes a new approach toautomatic learning of strategies for socialmulti-user human-robot interaction.
Us-ing the example of a robot bartender thattracks multiple customers, takes their or-ders, and serves drinks, we propose amodel consisting of a Social State Recog-niser (SSR) which processes audio-visualinput and maintains a model of the socialstate, together with a Social Skills Execu-tor (SSE) which takes social state updatesfrom the SSR as input and generates robotresponses as output.
The SSE is modelledas two connected Markov Decision Pro-cesses (MDPs) with action selection poli-cies that are jointly optimised in interactionwith a Multi-User Simulation Environment(MUSE).
The SSR and SSE have been in-tegrated in the robot bartender system andevaluated with human users in hand-codedand trained SSE policy variants.
The re-sults indicate that the trained policy out-performed the hand-coded policy in termsof both subjective (+18%) and objective(+10.5%) task success.1 IntroductionAs the use of robot technology in the home as wellas in public spaces is increasingly gaining attention,the need for effective and robust models for naturaland social human robot interaction becomes moreimportant.
Whether it involves robot companions(Vardoulakis et al 2012), game-playing robots(Klotz et al 2011; Brooks et al 2012; Cuaya?huitland Kruijff-Korbayova?, 2012), or robots that helppeople with exercising (Fasola and Mataric, 2013),human users should be able to interact with suchservice robots in an effective and natural way, us-ing speech as well as other modalities of commu-nication.
Furthermore, with the emergence of newapplication domains there is a particular need formethods that enable rapid development of mod-els for such new domains.
In this respect, data-driven approaches are appealing for their capabilityto automatically exploit empirical data to arrive atrealistic and effective models for interpreting userbehaviour, as well as to learn strategies for effectivesystem behaviour.In spoken dialogue systems research, statisti-cal methods for spoken language understanding,dialogue management, and natural language gen-eration have proven to be feasible for effectiveand robust interactive systems (Rieser and Lemon,2011; Lemon and Pietquin, 2012; Young et al2010; Young et al 2013).
Although such methodshave recently also been applied to (multi-modal)human-robot interaction (Stiefelhagen et al 2007;Cuaya?huitl et al 2012), work on multi-user human-robot interaction has been limited to non-statistical,hand-coded models (Klotz et al 2011).On the other hand, substantial work has beendone in the field of situated multi-party interactionin general, including data-driven approaches.
Inparticular, Bohus & Horvitz (2009) have addressedthe task of recognising engagement intentions usingonline learning in the setting of a screen-based em-bodied virtual receptionist, and have also workedon multi-party turn-taking in this context (Bohusand Horvitz, 2011).In this paper we describe a statistical approachto automatic learning of strategies for selecting ef-fective as well as socially appropriate robot actionsin a multi-user context.
The approach has been de-veloped using the example of a robot bartender (seeFigure 1) that tracks multiple customers, takes theirorders, and serves drinks.
We propose a model con-sisting of a Social State Recogniser (SSR) whichprocesses audio-visual input and maintains a modelof the social state, and a Social Skills Executor(SSE) which takes social state updates from theSSR as input and generates robot responses as out-223put.
The SSE is modelled as a hierarchy of two con-nected Markov Decision Processes (MDPs) withaction selection policies that are jointly optimisedin interaction with a Multi-User Simulation Envi-ronment (MUSE).Figure 1: The robot bartender with two customersIn the remainder of this paper we will describethe robot system in more detail (Section 2), fol-lowed by descriptions of the SSR (Section 3), theSSE (Section 4), and MUSE (Section 5).
In Sec-tion 6 we then discuss in more detail the MDPmodel for the SSE and the process of jointly opti-mising the policies, and present evaluation resultson simulated data.
Next, we present results of thefirst evaluation of the integrated SSE-MDP compo-nent with human users (Section 7).
The paper isconcluded in Section 8.2 Robot bartender systemThe robot system we used for evaluating the modelsis equipped with vision and speech input processingmodules, as well as modules controlling two robotarms and a talking head.
Based on observationsabout the users in the scene and their behaviour, thesystem must maintain a model of the social context,and decide on effective and socially appropriateresponses in that context.
Such a system must beable to engage in, maintain, and close interactionswith users, take a user?s order by means of a spokenconversation, and serve their drinks.
The overallaim is to generate interactive behaviour that is bothtask- effective and socially appropriate: in additionto efficiently taking orders and serving drinks, thesystem should, e.g., deal with customers on a first-come, first-served basis, and should manage thecustomers?
patience by asking them politely to waituntil the robot is done serving another customer.As shown in Figure 1, the robot hardware con-sists of a pair of manipulator arms with grippers,mounted to resemble human arms, along withan animatronic talking head capable of produc-ing facial expressions, rigid head motion, and lip-synchronised synthesised speech.
The input sen-sors include a vision system which tracks the loca-tion, facial expressions, gaze behaviour, and bodylanguage of all people in the scene in real time(Pateraki et al 2013), along with a linguistic pro-cessing system (Petrick et al 2012) combining aspeech recogniser with a natural-language parserto create symbolic representations of the speechproduced by all users.
More details of the architec-ture and components are provided in (Foster et al2012).
An alternative embodiment of the system isalso available on the NAO platform.3 Social State RecogniserThe primary role of the Social State Recogniser(SSR) is to turn the continuous stream of messagesproduced by the low-level input and output com-ponents of the system into a discrete representa-tion of the world, the robot, and all entities in thescene, integrating social, interaction-based, andtask-based properties.
The state is modelled as aset of relations such as facePos(A)=(x,y,z) orcloseToBar(A); see (Petrick and Foster, 2013)for details on the representation used.In addition to storing all of the low-level sensorinformation, the SSR also infers additional rela-tions that are not directly reported by the sensors.For example, it fuses information from vision andspeech to determine which user should be assignedto a recognised spoken contribution.
It also pro-vides a constant estimate of whether each customeris currently seeking attention from the bartender(seeksAttention(A)): the initial version of thisestimator used a hand-coded rule based on the ob-servation of human behaviour in real bars (Huthet al 2012), while a later version (Foster, 2013)makes use of a supervised learning classifier trainedon labelled recordings of humans interacting withthe first version of the robot bartender.The SSR provides a query interface to allowother system components access to the relationsstored in the state, and also publishes an updatedstate to the SSE every time there is a change whichmight require a system action in response (e.g.,a customer appears, begins seeking attention, ormakes a drink order).2244 Social Skills ExecutorThe Social Skills Executor (SSE) controls the be-haviour of the robot system, based on the socialstate updates it receives from the SSR.
The out-put of the SSE consists of a combination of non-communicative robot actions and/or communica-tive actions with descriptions of their multi-modalrealisations.
In the bartender domain, the non-communicative actions typically involve servinga specific drink to a specific user, whereas the com-municative actions have the form of dialogue acts(Bunt et al 2010), directed at a specific user, e.g.setQuestion(drink) (?What would you like todrink??)
or initialGreeting() (?Hello?
).In our design of the SSE, the decision makingprocess resulting in such outputs (including the ?noaction?
output) consists of three stages: 1) socialmulti-user coordination: managing the system?sengagement with the users present in the scene (e.g.,accept a user?s bid for attention, or proceed with anengaged user), 2) single-user interaction: if pro-ceeding with an engaged user, generating a high-level response to that user, in the form of a com-municative act or physical action (e.g., greeting theuser or serving him a drink), and 3) multi-modalfission: selecting a combination of modalities forrealising a chosen response (e.g., a greeting can berealised through speech and/or a nodding gesture).One advantage of such a hierarchical design is thatstrategies for the different stages can be developedindependently.
Another is that it makes automaticpolicy optimisation more scalable.5 Multi-User Simulated EnvironmentIn order to test and evaluate the SSE, as well as totrain SSE action selection policies, we developeda Multi-User Simulated Environment (MUSE).MUSE allows for rapidly exploring the large spaceof possible states in which the SSE must selectactions.
A reward function that incorporates in-dividual rewards from all simulated users in theenvironment is used to encode preferred systembehaviour in a principled way.
A simulated userassigns a reward if they are served the correct drink,and gives penalties associated with their waitingtime and various other forms of undesired systemresponses (see Section 6.1 for more details aboutthe reward function).
All of this provides a practi-cal platform for evaluating different strategies foreffective and socially appropriate behaviour.
It alsopaves the way for automatic optimisation of poli-cies, for example by using reinforcement learningtechniques, as we will discuss in Section 6.1.The simulated environment replaces the visionand speech processing modules in the actual robotbartender system, which means that it generates 1)vision signals in every time-frame, and 2) speechprocessing results, corresponding to sequences oftime-frames where a user spoke.
The vision obser-vations contain information about users that havebeen detected, where they are in the scene, whetherthey are speaking, and where their attention is di-rected to.
Speech processing results are representedsemantically, in the form of dialogue acts (e.g.,inform(drink=coke), ?I would like a coke?).
Asdescribed in Section 3, the SSR fuses the vision andspeech input, for example to associate an incomingdialogue act with a particular user.The simulated signals are the result of combin-ing the output from the simulated users in the en-vironment.
Each simulated user is initialised witha random goal (in our domain a type of drink theywant to order), enters the scene at some point, andstarts bidding for attention at some point.
Eachsimulated user also maintains a state and gener-ates responses given that state.
These responsesinclude communicative actions directed at the bar-tender, which are translated into a multi-channelvision input stream processed by the SSR, and, incase the user realises the action through speech,a speech processing event after the user has fin-ished speaking.
Additionally, the simulated usersstart with a given patience level, which is reducedin every frame that the user is bidding for atten-tion or being served by the system.
If a user?s pa-tience has reduced to zero, s/he gives up and leavesthe bar.
However, it is increased by a given fixedamount when the system politely asks the user towait, encoded as a pausing dialogue act.
The be-haviour of the simulated users is partly controlledby a set of probability distributions that allow fora certain degree of variation.
These distributionshave been informed by statistics derived from acorpus of human-human customer-bartender inter-actions (Huth et al 2012).In addition to information about the simulatedusers, MUSE also provides feedback about theexecution of robot actions to the SSR, in partic-ular the start and end of all robot speech and non-communicative robot actions.
This type of informa-tion simulates the feedback that is also provided inthe actual bartender system by the components thatdirectly control the robot head and arms.
Figure 2225Figure 2: Social state recognition and social skills execution in a multi-user simulated environment.shows the architecture of the system interactingwith the simulated environment.6 MDP model for multi-user interactionTo enable automatic optimisation of strategies formulti-user social interaction, the SSE model as de-scribed in Section 4 was cast as a hierarchy of twoMarkov Decision Processes (MDPs), correspond-ing to the social multi-user coordination and single-user interaction stages of decision making.
BothMDPs have their own state spaces S1 and S2, eachdefined by a set of state features, extracted fromthe estimated social state made available by theSSR?see Tables 1 and 3.
They also have their ownaction setsA1 andA2, corresponding to the rangeof decisions that can be made at the two stages (Ta-bles 2 and 4), and two policies pi1 : S1 ?
A1 andpi2 : S2 ?
A2, mapping states to actions.6.1 Policy optimisationUsing the MDP model as described above, wejointly optimise the two policies, based on the re-wards received through the SSR from the simulatedenvironment MUSE.
Since MUSE gives rewardson a frame-by-frame basis, they are accumulatedin the social state until the SSR publishes a stateupdate.
The SSE stores the accumulated rewardtogether with the last state encountered and actiontaken in that state, after which that reward is resetin the social state.
After each session (involvinginteractions with two users in our case), the setof encountered state-action pairs and associatedrewards is used to update the policies.The reward provided by MUSE in each frameis the sum of rewards Ri given by each individualsimulated user i, and a number of general penaltiesarising from the environment as a whole.
Userrewards consist of a fixed reward in case their goalis satisfied (i.e., when they have been served thedrink they wanted and ordered), a penalty in casethey are still waiting to be served, a penalty in casethey are engaged with the system but have not beenserved their drink yet, and additional penalties, forexample when the system turns his attention toanother user when the user is still talking to it, orwhen the system serves a drink before the user hasordered, or when the system serves another drinkwhen the user already has been served their drink.General penalties are given for example when thesystem is talking while no users are present.The policies are encoded as functions that assigna value to each state-action pair; these so-calledQ-values are estimates of the long-term discountedcumulative reward.
Given the current state, thepolicy selects the action with the highest Q-value:pi(s) = arg maxaQ(s, a) (1)Using a Monte-Carlo Control algorithm (Suttonand Barto, 1998), the policies are optimised byrunning the SSR and SSE against MUSE and usingthe received reward signal to update the Q-valuesafter each interaction sequence.
During training,the SSE uses an -greedy policy, i.e., it takes arandom exploration action with probability  = 0.2.226Index Feature Values4 ?
i Interaction status for user i + 1 nonEngaged/seeksAttention/engaged4 ?
i + 1 Location of user i + 1 notPresent/!closeToBar/closeToBar4 ?
i + 2 User i + 1 was served a drink no/yes4 ?
i + 3 User i + 1 asked to wait no/yesTable 1: State features for the social multi-user coordination policy.
For each user, 4 features are includedin the state space, resulting in 32 ?
22 = 36 states for interactions with up to 1 user, increasing to 1296states for interactions with up to 2 users and 46, 656 states for up to 3 users.Index Action0 No action3 ?
i + 1 Ask user i + 1 to wait3 ?
i + 2 Accept bid for attention from user i + 13 ?
i + 3 Proceed interaction with (engaged) user i + 1Table 2: Actions for the social multi-user coordination policy.In the policy update step, a discount factor ?
= 0.95is used, which controls the impact that rewardsreceived later in a session have on the value of state-action pairs encountered earlier in that session.Figure 3 shows the learning curve of a jointpolicy optimisation, showing average rewards ob-tained after running the SSE with trained policiesfor 500 runs, at several stages of the optimisationprocess (after every 2500 sessions/runs/iterations,the trained policy was saved for evaluation).
In thisparticular setup, simulated users gave a reward of550 upon goal completion but in the total score thisis reduced considerably due to waiting time (-2 perframe), task completion time (-1 per frame) andvarious other potential penalties.
Also indicatedare the performance levels of two hand-coded SSEpolicies, one of which uses a strategy of asking auser to wait when already engaged with anotheruser (labelled HDC), and one in which that seconduser is ignored until it is done with the engaged user(labelled HDCnp).
The settings for user patienceas discussed in Section 5 determine which of thesepolicies works best; ideally these settings should bederived from data if available.
Nevertheless, evenwith the hand-coded patience settings, the learningcurve indicates that both policies are outperformedin simulation after 10k iterations, suggesting thatthe best strategy for managing user patience can befound automatically.7 Human user evaluationThe SSE described above has been integrated inthe full robot bartender system and evaluated forthe first time with human users.
In the experiment,both a hand-coded version and a trained versionof the SSE component were tested; see Table 6 inAppendix A for the trajectory of state-action pairsof an example session.
The hand-coded versionuses the policy labelled HDC, not HDCnp (seeSection 6.1).
In each of the sessions carried out, onerecruited subject and one confederate (one of theexperimenters) approached the bartender togetheras clients and both tried to order a drink (coke orlemonade).
After each interaction, the subject filledout the short questionnaire shown in Figure 4.Q1: Did you successfully order a drink from the bartender?
[Y/N]Please state your opinion on the following statements:[ 1:strongly disagree; 2:disagree; 3:slightly disagree;4:slightly agree; 5:agree; 6:strongly agree ]Q2: It was easy to attract the bartender?s attention [1?6]Q3: The bartender understood me well [1?6]Q4: The interaction with the bartender felt natural [1?6]Q5: Overall, I was happy about the interaction [1?6]Figure 4: Questionnaire from the user study.37 subjects took part in this study, resulting in atotal of 58 recorded drink-ordering interactions:29 that used the hand-coded SSE for interactionmanagement, and 29 that used the trained SSE.The results from the experiment are summarisedin Table 5.
We analysed the results using a linearmixed model, treating the SSE policy as a fixed fac-tor and the subject ID as a random factor.
Overall,the pattern of the subjective scores suggests a slightpreference for the trained SSE version, although227Index Feature Values0 Reactive pressure none/thanking/greeting/goodbye/apology1 Status of user goal unknown/usrInf/sysExpConf/sysImpConf/grounded/drinkServed/sysAsked2 Own proc.
state none/badASRTable 3: State features for the single-user interaction policy.
In this case, there are 5 ?
7 ?
2 = 70 states.Index Action Example0 No action1 returnGreeting() ?Hello?2 autoPositive() ?Okay?3 acceptThanking() ?You?re welcome?4 autoNegative() ?What did you say?
?5 setQuestion(drink) ?What drink would you like?
?6 acceptRequest(drink=x) + serveDrink(x) ?Here?s your coke?Table 4: Actions for the single-user interaction policy, which correspond to possible dialogue acts, exceptfor ?no action?
and serving a drink.
The specific drink types required for two of the actions are extractedfrom the fully specified user goal in the social state maintained by the SSR.only the difference in perceived success was statis-tically significant at the p < 0.05 level.
The actualsuccess rate of the trained policy was also some-what higher, although not significantly so.
Also,the interactions with the trained SSE took slightlylonger than the ones with the hand-coded SSE interms of the number of system turns (i.e., the num-ber of times the SSE receives a state update andselects a response action, excluding the times whenit selects a non-action); however, this did not haveany overall effect on the users?
subjective ratings.The higher success rate for the trained SSE couldbe partly explained by the fact that fewer ASR prob-lems were encountered when using this version;however, since the SSE was not triggered when aturn was discarded due to low-confidence ASR, thiswould not have had an effect on the number of sys-tem turns.
There was another difference betweenthe hand-coded and trained policies that could haveaffected both the success rate and the number ofsystem turns: for interactions in which a user hasnot ordered yet, nor been asked for their order, thehand-coded strategy randomly chooses betweenasking the user for their order and doing nothing,letting the user take the initiative to place the order,whereas the trained policy always asks the user fortheir order (this action has the highest Q-value, al-though in fact the value for doing nothing in suchcases is also relatively high).We also carried out a stepwise multiple linearregression on the data from the user experimentto determine which of the objective measures hadthe largest effect, as suggested by the PARADISEevaluation framework (Walker et al 2000).
The re-sulting regression functions are shown in Figure 5.In summary, all of the subjective responses weresignificantly affected by the objective task success(i.e., the number of drinks served); the number oflow-ASR turns also affected most of the responses,while various measures of dialogue efficiency (suchas the system response time and the time taken toserve drinks) also had a significant impact.
In gen-eral, these regression functions explain between15?25% of the variance in the subjective measures.As an initial analysis of the validity of the sim-ulated environment, we compared the state distri-bution of the simulated data accumulated duringpolicy optimisation with that of the human userevaluation data.
In terms of coverage, we foundthat only 46% of all states encountered in the realdata were also encountered during training.
How-ever, many of these states do not occur very oftenand many of them do not require any action bythe robot (a trained policy can easily be set to takeno-action for unseen states).
If we only includestates that have been encountered at least 20 times,the coverage increases to over 70%.
For states en-countered at least 58 times, the coverage is 100%,though admittedly this covers only the 10 mostfrequently encountered states.
The similarity ofthe two distributions can be quantified by comput-ing the KL-divergence, but since such a number is228Figure 3: Learning curve for joint optimisation of SSE-MDP policies.System NS PSucc* PAtt PUnd PNat POv NDSrvd NST NBAsrSSE-TRA 29 97% 4.10 4.21 3.00 3.83 1.97 (98.5%) 7.38 3.14SSE-HDC 29 79% 4.14 3.83 2.93 3.83 1.76 (88.0%) 6.86 3.82TOTAL 58 88% 4.12 4.02 2.97 3.83 1.86 (93.0%) 7.12 3.48Table 5: Overview of system performance results from the experiment.
In the leftmost column SSE-TRAand SSE-HDC refer to the trained and hand-coded SSE versions; the column NS indicates the number ofsessions; the columns PSucc (perceived success), PAtt (perceived attention recognition), PUnd (perceivedunderstanding), PNat (perceived naturalness), and POv (perceived overall performance) give averagescores resulting from the 5 respective questionnaire questions; NDSrvd indicates the average number ofdrinks served per session (out of 2 maximum ?
the percentage is given in brackets); NST indicates theaverage number of system turns per session; while NBAsr indicates the average number of cases wherethe user speech was ignored because the ASR confidence was below a predefined threshold.
The markedcolumn indicates that the difference between the two SSE versions was significant at the p < 0.05 level.hard to interpret in itself, this will only be usefulif there were a state distribution from an alterna-tive simulator or an improved version of MUSE forcomparison.8 ConclusionIn this paper we presented a new approach to au-tomatic learning of strategies for social multi-userhuman-robot interaction, demonstrated using theexample of a robot bartender that tracks multiplecustomers, takes their orders, and serves drinks.We presented a model consisting of a Social StateRecogniser (SSR) which processes audio-visual in-put and maintains a model of the social state, anda Social Skills Executor (SSE) which takes socialstate updates from the SSR as input and generatesrobot responses as output.
The main contributionof this work has been a new MDP-based modelfor the SSE, incorporating two connected MDPswith action selection policies that are jointly op-timised in interaction with a Multi-User Simula-tion Environment (MUSE).
In addition to showingpromising evaluation results with simulated data,we also presented results from a first evaluation ofthe SSE component with human users.
The experi-ments showed that the integrated SSE componentworked quite well, and that the trained SSE-MDPachieved higher subjective and objective successrates (+18% and +10.5% respectively).Our model currently only utilises two policies,but in more complex scenarios the task could befurther modularised and extended by introducingmore MDPs, for example for multimodal fissionand natural language generation.
The approach ofusing a hierarchy of MDPs has some similarity withthe Hierarchical Reinforcement Learning (HRL)approach which uses a hierarchy of Semi-MarkovDecision Processes (SMDPs).
In (Cuaya?huitl et al229PSucc = 0.88 + 0.14 ?
N(NDSrvd) ?
0.07 ?
N(NBAsr) (r2 = 0.21)PAtt = 4.12 + 0.76 ?
N(NDSrvd) ?
0.46 ?
N(RTm) ?
0.38 ?
N(FDTm) (r2 = 0.22)PUnd = 4.02 + 0.41 ?
N(NDSrvd) ?
0.36 ?
N(NBAsr) ?
0.40 ?
N(NST) ?
0.41 ?
N(RTm) ?
0.39 ?
N(STm) (r2 = 0.24)PNat = 2.97 + 0.36 ?
N(NDSrvd) ?
0.29 ?
N(NBAsr) ?
0.31 ?
N(NST) ?
0.44 ?
N(RTm) (r2 = 0.16)POv = 3.83 + 0.65 ?
N(NDSrvd) ?
0.38 ?
N(NBAsr) ?
0.52 ?
N(RTm) (r2 = 0.24)Figure 5: PARADISE regression functions from the user study.
The labels are the same as those in Table 5,with the following additions: RTm is the mean system response time per user, STm is the mean servingtime per user, and FDTm is the mean time to serve the first drink; all times are measured in milliseconds.N represents a Z score normalisation function (Cohen, 1995).2012) for example, this hierarchy is motivated bythe identification of multiple tasks that the robotcan carry out and for which multiple SMDP agentsare defined.
In every step of the interaction, controllies with a single SMDP agent somewhere in thehierarchy; once it arrives at its final state it returnscontrol to its parent SMDP.
An additional transi-tion model is introduced to permit switching froman incomplete SMDP to another SMDP at the samelevel, making interactions more flexible.
In our ap-proach, control always starts at the top level MDPand lower level MDPs are triggered depending onthe action taken by their parent MDP.
For socialinteraction with multiple users, flexible switchingbetween interactions with different users is impor-tant, so an arguably more sophisticated HRL ap-proach to multi-user interaction will rely heavilyon the transition model.
Another approach to mod-ularising the task domain through multiple policiesis described in (Lison, 2011), where ?meta-control?of the policies relies on an activation vector.
As inthe HRL SMDP approach, this approach has notbeen applied in the context of multi-user interaction.In any case, a more thorough and possibly experi-mental analysis comparing our approach with theseother approaches would be worth investigating.In the future, we plan to extend our MDP modelto a POMDP (Partially Observable MDP) model,taking uncertainty about both speech and visualinput into account in the optimisation of SSE poli-cies by incorporating alternative hypotheses andconfidence scores provided by the input modulesinto the social state.
Since hand-coding strategiesbecomes more challenging in the face of increaseduncertainty due to noisy input, the appeal of auto-matic strategy learning in a POMDP frameworkbecomes even stronger.
In a previous offline ver-sion of our combined SSR and SSE, we have shownin preliminary simulation experiments that even inan MDP setting, an automatically trained SSE pol-icy outperforms a hand-coded policy when noise isadded to the speech channel (Keizer et al 2013).Another direction of research is to annotate thedata collected in the described experiment for fur-ther analysis and use it to improve the features ofthe simulated environment.
The improved modelsshould lead to trained policies that perform betterwhen evaluated again with human users.
We willalso make use of the findings of the PARADISEregression to fine-tune the reward function usedfor policy optimisation: note that two of the mainfeatures indicated by the PARADISE procedure?task success and dialogue efficiency?are alreadythose included in the current reward function, andwe will add a feature to account for the effects ofASR performance.
We are also considering usingcollected data for direct supervised or off-policyreinforcement learning of SSE strategies.Finally, we aim to extend our domain both interms of interactive capabilities (e.g., handling com-munication problems, social obligations manage-ment, turn-taking) and task domain (e.g., handlingmore than the current maximum of 2 users, grouporders, orders with multiple items).
In order tomake the (PO)MDP model more scalable and thuskeeping the learning algorithms tractable, we alsoaim to incorporate techniques such as value func-tion approximation into our model.AcknowledgmentsThe research leading to these results has receivedfunding from the European Union?s Seventh Frame-work Programme (FP7/2007?2013) under grantagreement no.
270435, JAMES: Joint Action forMultimodal Embodied Social Systems, http://james-project.eu/.
Thanks to Ingmar Kesslerfor help in running the user experiment.230ReferencesDan Bohus and Eric Horvitz.
2009.
Learning to pre-dict engagement with a spoken dialog system inopen-world settings.
In Proceedings SIGdial, Lon-don, UK.Dan Bohus and Eric Horvitz.
2011.
Multiparty turntaking in situated dialog: Study, lessons, and direc-tions.
In Proceedings SIGdial, Portland, OR.A.
Brooks, J.
Gray, G. Hoffman, A. Lockerd, H. Lee,and C. Breazeal.
2012.
Robot?s play: Interactivegames with sociable machines.
Computers in Enter-tainment, 2(3).H.
Bunt, J. Alexandersson, J. Carletta, J.-W. Choe, A.C.Fang, K. Hasida, K. Lee, V. Petukhova, A. Popescu-Belis, L. Romary, C. Soria, and D. Traum.
2010.Towards an ISO standard for dialogue act annotation.In Proceedings LREC, Valletta, Malta.Paul R. Cohen.
1995.
Empirical Methods for ArtificialIntelligence.
MIT Press, Boston.Heriberto Cuaya?huitl and Ivana Kruijff-Korbayova?.2012.
An interactive humanoid robot exhibiting flex-ible sub-dialogues.
In Proceedings NAACL HLT,Montreal, Canada.H.
Cuaya?huitl, I.
Kruijff-Korbayova?, and N. Dethlefs.2012.
Hierarchical dialogue policy learning usingflexible state transitions and linear function approxi-mation.
In Proceedings COLING, Mumbai, India.Juan Fasola and Maja J. Mataric.
2013.
A socially as-sistive robot exercise coach for the elderly.
Journalof Human Robot Interaction, 2(3).
To appear.Mary Ellen Foster, Andre Gaschler, Manuel Giuliani,Amy Isard, Maria Pateraki, and Ronald P. A. Pet-rick.
2012.
Two people walk into a bar: Dynamicmulti-party social interaction with a robot agent.
InProceedings ICMI, Santa Monica, CA.Mary Ellen Foster.
2013.
How can I help you?Comparing engagement classification strategies fora robot bartender.
Submitted.K.
Huth, S. Loth, and J.P. De Ruiter.
2012.
Insightsfrom the bar: A model of interaction.
In Proceedingsof Formal and Computational Approaches to Multi-modal Communication.Simon Keizer, Mary Ellen Foster, Zhuoran Wang, andOliver Lemon.
2013.
Machine learning of socialstates and skills for multi-party human-robot inter-action.
Submitted.David Klotz, Johannes Wienke, Julia Peltason, BrittaWrede, Sebastian Wrede, Vasil Khalidov, and Jean-Marc Odobez.
2011.
Engagement-based multi-party dialog with a humanoid robot.
In ProceedingsSIGdial, Portland, OR.Oliver Lemon and Olivier Pietquin, editors.
2012.Data-driven Methods for Adaptive Spoken DialogueSystems: Computational Learning for Conversa-tional Interfaces.
Springer.Pierre Lison.
2011.
Multi-policy dialogue manage-ment.
In Proceedings SIGdial, Portland, OR.Maria Pateraki, Markos Sigalas, Georgios Chliveros,and Panos Trahanias.
2013.
Visual human-robotcommunication in social settings.
In the Work-shop on Semantics, Identification and Control ofRobot-Human-Environment Interaction, held withinthe IEEE International Conference on Robotics andAutomation (ICRA).Ronald P. A. Petrick and Mary Ellen Foster.
2013.Planning for social interaction in a robot bartenderdomain.
In Proceedings ICAPS, Rome, Italy.Ronald P. A. Petrick, Mary Ellen Foster, and Amy Isard.2012.
Social state recognition and knowledge-levelplanning for human-robot interaction in a bartenderdomain.
In AAAI 2012 Workshop on Grounding Lan-guage for Physical Systems, Toronto, ON, Canada,July.Verena Rieser and Oliver Lemon.
2011.
Rein-forcement Learning for Adaptive Dialogue Systems.Springer.R.
Stiefelhagen, H. Ekenel, C. Fu?gen, P. Gieselmann,H.
Holzapfel, F. Kraft, K. Nickel, M. Voit, andA.
Waibel.
2007.
Enabling multimodal human-robot interaction for the Karlsruhe humanoid robot.IEEE Transactions on Robotics, 23(5):840?851.Richard S. Sutton and Andrew G. Barto.
1998.
Rein-forcement Learning: An Introduction.
MIT Press.L.
Pfeifer Vardoulakis, L. Ring, B. Barry, C. Sidner,and T. Bickmore.
2012.
Designing relational agentsas long term social companions for older adults.
InProceedings IVA, Santa Cruz, CA.Marilyn Walker, Candace Kamm, and Diane Litman.2000.
Towards developing general models of usabil-ity with PARADISE.
Natural Language Engineer-ing, 6(3?4):363?377.Steve Young, Milica Gas?ic?, Simon Keizer, Franc?oisMairesse, Blaise Thomson, and Kai Yu.
2010.
TheHidden Information State model: a practical frame-work for POMDP based spoken dialogue manage-ment.
Computer Speech and Language, 24(2):150?174.Steve Young, M.
Gas?ic?, B. Thomson, and J. Williams.2013.
POMDP-based statistical spoken dialoguesystems: a review.
Proceedings of the IEEE.
Toappear.231Appendix A: Example session with two guests ordering a drinkTimestamp Level 1 MDP Level 2 MDP DescriptionState features Action State features Action13:28:45:966 0 1 0 0 0 0 0 0 0 - - A1 visible, but not close to bar; no responsegenerated yet.13:28:48:029 1 2 0 0 0 0 0 0 2 - - A1 not close to bar and seeking attention: BTacknowledges this and engages with A1.13:28:53:680 3 2 0 0 1 2 0 0 4 - - A2 visible, close to the bar, and seeking atten-tion; BT is already engaged with A1 and there-fore asks A2 to wait.13:28:55:715 3 2 0 0 1 2 0 1 3 0 0 0 1 BT continues his interaction with A1 and asksfor their order.13:28:56:928 3 2 0 0 1 2 0 1 3 0 6 0 0 BT continues with A1 and waits for them toorder.13:28:56:928 3 2 0 0 1 2 0 1 3 0 6 0 0 Same as above: BT still waiting for A1?s order.. .
.
Due to repeated ASR failures, this state actionpair is encountered several times.13:29:52:066 3 2 0 0 1 2 0 1 3 0 1 0 2 A1?s has now been successfully recognised; BTserves the ordered drink to A1.13:30:12:013 3 2 1 0 1 2 0 1 5 - - A2 still seeking attention; BT can now acknowl-edge this and engage with A1.13:30:13:307 1 2 1 0 3 2 0 1 6 0 0 0 1 BT continues with A2 and asks for their order.13:30:14:475 1 2 1 0 3 2 0 0 6 0 6 0 0 BT continues with A2 and waits for them toorder13:30:17:737 1 2 1 0 3 2 0 0 6 0 1 0 2 A2?s recognised; BT serves ordered drink to A2.13:30:37:623 1 2 1 0 3 2 1 0 0 - - Both A1 and A2 have been served; BT doesnothing13:30:41:440 1 2 1 0 3 2 1 0 0 - - Same as above.. .
.Table 6: SSE-MDP trajectory for one session from the evaluation data, showing the states and responseactions taken for both MDPs.
The states are represented via their value indices, corresponding to Tables 1and 3; the action indices similarly correspond to the actions in Tables 2 and 4.
In the descriptions, A1 andA2 refer to the first and second user detected; BT refers to the bartender.232
