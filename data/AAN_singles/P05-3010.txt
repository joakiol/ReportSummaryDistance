Proceedings of the ACL Interactive Poster and Demonstration Sessions,pages 37?40, Ann Arbor, June 2005. c?2005 Association for Computational LinguisticsLearning Source-Target Surface Patterns forWeb-based Terminology TranslationJian-Cheng WuDepartment of Computer ScienceNational Tsing Hua University101, Kuangfu Road,Hsinchu, 300, TaiwanD928322@oz.nthu.edu.twTracy LinDep.
of Communication Eng.National Chiao Tung University1001, Ta Hsueh Road,Hsinchu, 300, Taiwantracylin@cm.nctu.edu.twJason S. ChangDepartment of Computer ScienceNational Tsing Hua University101, Kuangfu Road,Hsinchu, 300, Taiwanjschang@cs.nthu.edu.twAbstractThis paper introduces a method for learn-ing to find translation of a given sourceterm on the Web.
In the approach, thesource term is used as a query and part ofpatterns to retrieve and extract transla-tions in Web pages.
The method involvesusing a bilingual term list to learn source-target surface patterns.
At runtime, thegiven term is submitted to a search enginethen the candidate translations are ex-tracted from the returned summaries andsubsequently ranked based on the surfacepatterns, occurrence counts, and translit-eration knowledge.
We present a proto-type called TermMine that applies themethod to translate terms.
Evaluation on aset of encyclopedia terms shows that themethod significantly outperforms thestate-of-the-art online machine translationsystems.1 IntroductionTranslation of terms has long been recognized asthe bottleneck of translation by translators.
By re-using prior translations a significant time spent intranslating terms can be saved.
For many yearsnow, Computer-Aided Translation (CAT) toolshave been touted as very useful for productivityand quality gains for translators.
CAT tools such asTrados typically require up-front investment topopulate multilingual terminology and translationmemory.
However, such investment has provenprohibitive for many in-house translation depart-ments and freelancer translators and the actualproductivity gains realized have been insignificantexcept for a few, very repetitive types of content.Much more productivity gain could be achieved byproviding translation service of terminology.Consider the job of translating a textbook suchas ?Artificial Intelligence ?
A Modern Approach.
?The best practice is probably to start by translatingthe indexes (Figure 1).
It is not uncommon forthese repetitive terms to be translated once andapplied consistently throughout the book.
For ex-ample, A good translation F = "????"
for thegiven term E = "acoustic model," might be avail-able on the Web due to the common practice ofincluding the source terms (often in brackets,  seeFigure 2)  when   using  a   translated term (e.g."??????????
?Acoustic Model?
?????
?").
The surface patterns of co-occurring source and target terms (e.g., "F?E")can be learned by using the Web as corpus.
Intui-tively, we can submit E and F to a search engineFigure 1.
Some index entries in ?Artificial intelli-gence ?
A Modern Approach?
page 1045.academy award, 458accessible, 41accusative case, 806Acero, A., 580, 1010Acharya, A., 131, 994achieves, 389Ackley, D. H., 133, 987acoustic model, 568Figure 2.
Examples of web page summaries withrelevant translations returned by Google for somesource terms in Figure 1.1.
...
????
Academy Awards.
????
Berlin InternationalFilm Festival.
...2.
...
?????????
(inherent Case)???????
(accusative Case)????
...3.
...
??????????
(Alfred H. Ackley) ????????????????????..4.
..??????
??????????????????????????
?Acoustic Model?????
?...37and then extract the strings beginning with F andending with E (or vice versa) to obtain recurringsource-target patterns.
At runtime, we can submitE as query, request specifically for target-languageweb-pages.
With these surface patterns, we canthen extract translation candidates Fs from thesummaries returned by the search engine.
Addi-tional information of occurrence counts and trans-literation patterns can be taken into considerationto rank Fs.Table 1.
Translations by the machine translationsystem Google Translate and TermMine.Terms Google Translate TermMineacademy award *????
???
?accusative case *????
?
?Ackley - ??
?acoustic model *????
???
?For instance, among many candidate translations,we will pick the translations "????"
for "acous-tic model" and "???"
for "Ackley, " becausethey fit certain surface-target surface patterns andappears most often in the relevant webpage sum-maries.
Furthermore, the first morpheme "?"
in "???"
is consistent with prior transliterations of"A-" in "Ackley" (See Table 1).We present a prototype system called TermMine,that automatically extracts translation on the Web(Section 3.3) based on surface patterns of targettranslation and source term in Web pages auto-matically learned on bilingual terms (Section 3.1).Furthermore, we also draw on our previous workon machine transliteration (Section 3.2) to provideadditional evidence.
We evaluate TermMine on aset of encyclopedia terms and compare the qualityof translation of TermMine (Section 4) with aonline translation system.
The results seem to indi-cate the method produce significantly better resultsthan previous work.2 Related WorkThere is a resurgent of interested in data-intensiveapproach to machine translation, a research areastarted from 1950s.
Most work in the large body ofresearch on machine translation (Hutchins andSomers, 1992), involves production of sentence-by-sentence translation for a given source text.
Inour work, we consider a more restricted case wherethe given text is a short phrase of terminology orproper names (e.g., ?acoustic model?
or ?GeorgeBush?
).A number of systems aim to translate words andphrases out of the sentence context.
For example,Knight and Graehl (1998) describe and evaluate amulti-stage method for performing backwardstransliteration of Japanese names and technicalterms into English by the machine using a genera-tive model.
In addition, Koehn and Knight (2003)show that it is reasonable to define noun phrasetranslation without context as an independent MTsubtask and build a noun phrase translation subsys-tem that improves statistical machine translationmethods.Nagata, Saito, and Suzuki (2001) present a sys-tem for finding English translations for a givenJapanese technical term by searching for mixedJapanese-English texts on the Web.
The methodinvolves locating English phrases near the givenJapanese term and scoring them based on occur-rence counts and geometric probabilistic functionof byte distance between the source and targetterms.
Kwok also implemented a term translationsystem for CLIR along the same line.Cao and Li (2002) propose a new method totranslate base noun phrases.
The method involvesfirst using Web-based method by Nagata et al, andif no translations are found on the Web, backingoff to a hybrid method based on dictionary andWeb-based statistics on words and context vectors.They experimented with noun-noun NP report that910 out of 1,000 NPs can be translated with an av-erage precision rate of 63%.In contrast to the previous research, we present asystem that automatically learns surface patternsfor finding translations of a given term on the Webwithout using a dictionary.
We exploit the conven-tion of including the source term with the transla-tion in the form of recurring patterns to extracttranslations.
Additional evident of data redundancyand transliteration patterns is utilized to validatetranslations found on the Web.3 The TermMine SystemIn this section we describe a strategy for searchingthe Web pages containing translations of a giventerm (e.g., ?Bill Clinton?
or ?aircraft carrier?)
andextracting translations therein.
The proposedmethod involves learning the surface pattern38knowledge (Section 3.1) necessary for locatingtranslations.
A transliteration model automaticallytrained on a list of proper name and transliterations(Section 3.2) is also utilized to evaluate and selecttransliterations for proper-name terms.
Theseknowledge sources are used in concert to search,rank, and extract translations (Section 3.3).3.1 Source and Target Surface patternsWith a set of terms and translations, we can learnthe co-occurring patterns of a source term E and itstranslation F following the procedure below:(1) Submit a conjunctive query (i.e.
E AND F) foreach pair (E, F) in a bilingual term list to asearch engine.
(2) Tokenize the retrieved summaries into threetypes of tokens: I.
A punctuation II.
A sourceword, designated with the letter "w" III.
Amaximal block of target words (or characters inthe case of language without word delimiterssuch as Mandarin or Japanese).
(3) Replace the tokens for E?s instances with thesymbol ?E?
and the type-III token containingthe translation F with the symbol ?F?.
Note thetoken denoted as ?F?
is a maximal string cover-ing the given translation but containing nopunctuations or words in the source language.
(4) Calculate the distance between E and F bycounting the number of tokens in between.
(5) Extract the strings of tokens from E to F (or theother way around) within a maximum distanceof d (d is set to 3) to produce ranked surfacepatterns P.For instance, with the source-target pair ("Califor-nia," "??")
and a retrieved summary of "...????.
???
Northern California.
...," the surfacepattern "FwE" of distance 1 will be derived.3.2 Transliteration ModelTermMine also relies on a machine transliterationmodel (Lin, Wu and Chang 2004) to confirm thetransliteration of proper names.
We use a list ofnames and transliterations to estimate the translit-eration probability function P(?
| ?
), for any giventransliteration unit (TU) ?
and transliteration char-acter (TC) ?.
Based on the Expectation Maximiza-tion (EM) algorithm.
A TU for an English namecan be a syllable or consonants which correspondsto a character in the target transliteration.
Table 2shows some examples of sub-lexical alignmentbetween proper names and transliterations.Table 2.
Examples of aligned transliteration units.Name transliteration Viterbi alignmentSpagna ????
s-?
pag-?
n-?
a-?Kohn ??
Koh-?
n-?Nayyar ??
Nay-?
yar-?Rivard ???
ri-?
var-?
d-?Hall ??
ha-?
ll-?Kalam ??
ka-?
lam-?Figure 3.
Transliteration probability trained on1,800 bilingual names (?
denotes an empty string).?
?
P(?|?)
?
?
P(?|?)
?
?
P(?|?)?
.458 b ?
.700 ye ?
.667?
.271  ?
.133  ?
.333?
.059  ?
.033 z ?
.476a?
.051  ?
.033  ?
.286?
.923 an ?
.923  ?
.095 an?
.077  ?
.077  ?
.0483.3 Finding and locating translationsAt runtime, TermMine follows the following stepsto translate a given term E:(1) Webpage retrieval.
The term E is submitted toa Web search engine with the language optionset to the target language to obtain a set ofsummaries.
(2) Matching patterns against summaries.
Thesurface patterns P learned in the training phaseare applied to match E in the tokenized summa-ries, to extract a token that matches the F sym-bol in the pattern.
(3) Generating candidates.
We take the distinctsubstrings C of all matched Fs as the candidates.
(4) Ranking candidates.
We evaluate and selecttranslation candidates by using both data re-dundancy and the transliteration model.
Candi-dates with a count or transliteration probabilitylower than empirically determined thresholdsare discarded.I.
Data redundancy.
We rank translation candi-dates by numbers of instances it appeared in theretrieved summaries.II.
Transliteration Model.
For upper-case E, weassume E is a proper name and evaluate eachcandidate translation C by the likelihood of C asthe transliteration of E using the transliterationmodel described in (Lin, Wu and Chang 2004).39Figure 4.
The distribution of distances betweensource and target terms in Web pages.010002000300040005000DistanceCountCount 63 111 369 2182 4961 2252 718 91 34-4 -3 -2 -1 0 1 2 3 4Figure 5.
The distribution of distances betweensource and target terms in Web pages.Pattern Count Acc.
Percent Example distanceFE 3036 28.1% ????
ATLAS 0EF 1925 45.9% Elton John????
0E(F 1485 59.7% Austria(???
-1F?E 1251 71.2% ????
?Atlas 1F(E 361 74.6% ????
(Atlas 1F.E 203 76.5% Peter Pan.
???
1EwF 197 78.3% ??
Northern California -1E,F 153 79.7% Mexico, ???
-1F?
?E 137 81.0% ?????
?Titanic 2F?
?E 119 82.1% ?????
?Atlas 2(5) Expanding the tentative translation.
Basedon a heuristics proposed by Smadja (1991) toexpand bigrams to full collocations, we extendthe top-ranking candidate with count n on bothsides, while keeping the count greater than n/2(empirically determined).
Note that the con-stant n is set to 10 in the experiment describedin Section 4.
(6) Final ranking.
Rank the expanded versions ofcandidates by occurrence count and output theranked list.4 Experimental resultsWe took the answers of the first 215 questions on aquiz Website (www.quiz-zone.co.uk) and hand-translations as the training data to obtain a of sur-face patterns.
For all but 17 source terms, we areable to find at least 3 instances of co-occurring ofsource term and translation.
Figure 4 shows distri-bution of the distances between co-occurringsource and target terms.
The distances tend to con-centrate between - 3 and + 3 (10,680 out of 12,398instances, or 86%).
The 212 surface patterns ob-tained from these 10,860 instances, have a veryskew distribution with the ten most frequent sur-face patterns accounting for 82% of the cases (seeFigure 5).
In addition to source-target surface pat-terns, we also trained a transliteration model (seeFigure 3) on 1,800 bilingual proper names appear-ing in Taiwanese editions of Scientific Americanmagazine.Test results on a set of 300 randomly selectedproper names and technical terms from Encyclope-dia Britannica indicate that TermMine produces300 top-ranking answers, of which 263 is the exacttranslations (86%) and 293 contain the answer key(98%).
In comparison, the online machine transla-tion service, Google translate produces only 156translations in full, with 103 (34%) matching theanswer key exactly, and 145 (48%) containing theanswer key.5 ConclusionWe present a novel Web-based, data-intensive ap-proach to terminology translation from English toMandarin Chinese.
Experimental results and con-trastive evaluation indicate significant improve-ment over previous work and a state-of-satecommercial MT system.ReferencesY.
Cao and H. Li.
(2002).
Base Noun Phrase Translation Us-ing Web Data and the EM Algorithm, In Proc.
of COLING2002, pp.127-133.W.
Hutchins and H. Somers.
(1992).
An Introduction to Ma-chine Translation.
Academic Press.K.
Knight, J. Graehl.
(1998).
Machine Transliteration.
InJournal of Computational Linguistics 24(4), pp.599-612.P.
Koehn, K. Knight.
(2003).
Feature-Rich Statistical Transla-tion of Noun Phrases.
In Proc.
of ACL 2003, pp.311-318.K.
L. Kwok, The Chinet system.
(2004).
(personalcommunication).T.
Lin, J.C. Wu, J. S. Chang.
(2004).
Extraction of Name andTransliteration in Monolingual and Parallel Corpora.
InProc.
of AMTA 2004, pp.177-186.M.
Nagata, T. Saito, and K. Suzuki.
(2001).
Using the Web asa bilingual dictionary.
In Proc.
of ACL 2001 DD-MTWorkshop, pp.95-102.F.
A. Smadja.
(1991).
From N-Grams to Collocations: AnEvaluation of Xtract.
In Proc.
of ACL 1991,  pp.279-284.40
