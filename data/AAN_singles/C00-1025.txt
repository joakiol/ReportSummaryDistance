Mining Tables from Large Scale HTML TextsHsin-Hsi Chen, Shih-Chung Tsai and Jin-He TsaiDepartment o1' Computer Science and hfformation EngiueeringNational Taiwan UniversityTaipei, TAIWAN, R.O.C.E-mail: hh_chen @csie.ntu.edu.twAbstractTable is a very common presentation scheme,but few papers touch on table extraction in textdata mining.
This paper l'ocuscs on miningtables from large-scale HTML texts.
Tablefiltering, recognition, interpretation, andpresentation arc discussed.
Heuristic rules andcell similarities arc employed to identify tables.The F-measure ot' table recognition is 86.50%.We also propose an algorithm to captureattribute-value r lationships alnong table cells.Finally, more structured ata is extracted andpresented.IntroductionTables, which arc simple and easy to use,are very common presentation sclleme forwriters to describe schedules, organize statisticaldata, summarize cxpcrilnental results, and so on,in texts ol' different domains.
Because tablesprovide rich inlbrmation, table acquisition isuseful for many applications such as documenttmderstauding, question-and-answering, textretrieval, etc.
However, most of previousapproaches on text data mining focus on textparts, and only few touch on tabular ones(Appelt and Israel, 1997; Gaizauskas and Wilks,1998; Hurst, 1999a).
Of the papers on tableextractions (Douglas, Hurst and Quinn, 1995;Douglas and Hurst 1996; Hurst and Douglas,1997; Ng, Lim and Koo, 1999), plain texts arctheir targets.I11 plain text, writers often use specialsymbols, e.g., tabs, blanks, dashes, etc., to inaketables.
The following shows an example.
Itdepicts book titles, authors, and prices.title author priceStatistical Language Learning E.Chamiak $30Cross-Language Inforlnation P.elrieval G. Grefenstette $115NaturalLanguage Information Retrieval T.Slrzalkowski $144When detecting il' there is a table in free text, weshould disambiguatc tile uses of tile specialsymbols.
That is, the special symbol may be aseparator or content o1' cells.
Previous papersemploy grammars (Green and Krishuainoorthy,1995), string-based cohesion measures (Hurstand Douglas, 1997), and learning methods (Ng,Lim and Koo, 1999) to deal with tablerecognition.Because of the silnplicity of tableconstruction l ethods in free text, the expressivecapability is limited.
Comparatively, themarkup languages like HTML provide veryflexible constructs for writers to design tables.The flexibility also shows that table extraction iHTML texts is harder than that iu plain text.Because the HTML texts are huge on the web,and they arc important sources o1' knowledge, itis indispensable to deal with table mining onHTML texts.
Hurst (1999b) is the first attemptto collect a corpus froln HTML files, LAT~Xfiles and a small number o1' ASCII files for tableextraction.
This paper focuses on HTML texts.We will discuss not only how to recognize tablesfrom HTML texts, but also how to identify theroles of each cell (attribute and/or value), audhow to utilize the extracted tables.1 Tables in HTMLHTML table begins with au optionalcaption t'ollowcd one or more rows.
Each rowis formed by one or more cells, which areclassified into header and data cells.
Cellscan be merged across rows and colulnns.
Thefollowing tags arc used:(1) <table...> </table>(2) <tr ...> </tr>(3) <td...> </td>(4) <th ...> </th>(5) <caption ...> </caption>166Table 1.
All Example for a Tour Package ~................ T~;t,r i~o'iic ................... } ..... isi'gi;)XR()iAii .......... }' .
.
.
.
.
.
.
.
.
.
.
;diiii~i ............... i 1999iii;fiOJ-2iJO0103131 ii .
.
.
.
.
.
Ci,,,L0i.~x/o;\];\],,;i ............ {i,;ccgn\[;/,ii c (!izls Y ll.
;x{c;isii;ii iil i, Siligiei(i;t;ii; i, 35,450 I 2510 'i Adtilt i11 l)oublc Room .
.
.
.
:3:2;.5(J(J I i2)3i) Ii II.
( i i x i ; :{ \ [ iG i  i .
.
.
.
.
.
.
3i/556 ......... -7}6 i .
.
.
.
.
.
.
.
>\[ _ < , I' !d Occupatioll i 25800 i i430 iChild ii~l ExU'aBed i 23,850 i '7\]0" i. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.  '
i i t No Occt )a oi/I 22,900 360 iThey denote main wrapper, table row, table data,table header, and caption for a table.
Table 1shows an example that lists the prices for a tour.The interpretation of this table in terms ofaltribute-wdue relationships is shown as follows:Allribul?
VahtcTour Code I)P91,AX01AI{Valid 1999.04.01-2000.03.31Adult-l>ricc-Singlo Room-l~;conomic Class 35,450Adult-l'ricc-l)oublc l{oom-EconoMc Class 32,500Adult-l'ricc-Extra Ilcd-l:conomic Class 30,550Child-Pricc-OccutmtioiM :cononfic Class 25,800Child-t'rice-l';xlra Iled-l,;conomic Class 23,850Child-Price-No ()ccupalion-I.
;conomic Class 22,900Adult-l'ricc-Single Room-l.:xlension 2,510Adtdt-Price-l)ouble l~oouM:,xlension 1,430Adtilt-lMcc-Fxtra Ilcd-Fxtcnsion 720Child l'ricc-()CCUl)ation-Fxicnsion 1,430Child-l'ricc-l';xh'a Bed-l';xtension 720Child Price-No ()ccupaiiolM,;xtcnsion 360Cell may play the role o1' attribute and/or value.Several cells may be concatenated to denote analtribute.
For example, "AdulI-Price-Single\]),ecru-Economic Chlss" means the ;tdl.llt pricefor economic class and single room.
Therelationships may 13o read in column wise or inrow wise depending on the interpretation.
Forexample, the relationship for "TourCode:I)P9LAXOIAB" is in row wise.
Theprices for "Economic Class" are in column wise.The table wrapper (<table> ... </table>) isa useful cue lkw table recognition.
The H'FMI,text for the above example is shown as follows.The table tags are enclosed by a table wrapper.<lablc border><if><td COI~SIL,\N="3">Totu" Code</td><ld COI,SI'AN="2">I)I'91,AXO1AB</Id></tr><11><id COLS PAN="3">Valid</id><ld C, OLS PAN="2"> 1999.04.01-2000.03.31 </td></I r><lr>' This example is selected from http://www.china-airlincs.com/cdl~ks/los7.-4.htm<td COI,Sl'AN:"3">Class/I.~xlensic, </td><td>l':cononlic Class</td><td>l';xlcnsion</td></ir><I1><td ROW SPA N="3">Adult</td><ld ROW.q PA N="6"><I)> P</l)><l)>P,</p><p>l</p><p>C</p><p>l :</ td><ld>Single Rooni</td><ld>35,450</Id><1d>2,510</td></t r><tr><ld>l)oubl?
I~,oom</td><ld>32,500</Id><ld> 1 ,430</ td><t t r><h><td>l:;xlra Hcd</td><td>30,550</kl><td>720</td></tr><Jr><td>Chikl</id><td>()ccupation<</td><td>25,800</td><td> 1,430</td><It r><11><td>l ';xtra Ik'd</tcl><td>23,850</td><td>720</id><It r><11><td>No ()CCUlmtion</td><td>22,900</td><kl>360</td></It><:/lalq,_.>ltowever, ;l taMe does not always exist whentable wrapper al3pears in ft'I 'MI, text.
This isbecause writers often employ table tags toi'cpresent forlll or IllOlltl.
That allows users toinput queries or make selections.Another fx)int that shoukt be mentioned is:table designers usually employ COLSPAN(ROWSPAN) to specify how many cohunns(rows) a table cell should span.
In this example,the COI,SPAN of cell "Tour Code" is 3.
Thatmeans "Tour Code" spans 3 columns.Similarly, the P, OWSI~AN o1' cell "Adult" is 3.This cell spans 3 rows.
COLSPAN andROWSPAN provide flexibility for users todesign any kinds ot' tables, but they makeautomatic table interpretation morechallengeable.1672 Flow of Table MiningThe flow of table nfining is shown asFigure 1.
It is composed of five modules.Hypertext processing module analyses HTMLtext, and extracts the table tags.
Table filteringmodule filters out impossible cases by heuristicrules.
The remaining candidates are sent totable recognition module for further analyses.The table interpretation module differentiatesthe roles of cells in the tables.
The finalmodule tackles how to present and employ themining results.
The first two modules arediscussed in tile following paragraph, and thelast three modules will be dealt with in thefollowing sections in detail.tablerecognitionIttableinterpretationhypertextplocessin~Ittablefilteringpresentationof resultsFigure 1.
Flow of Table MiningAs specified above, table wrappers do notalways introduce tables.
Two filtering rules areemployed to disambiguate heir functions:(1) A table must contain at least two cellsto represent attribute and value.
In other words,the structure with only one cell is filtered out.
(2) If the content enclosed by tablewrappers contain too much hyperlinks, formsand figures, then it is not regarded as a table.To evaluate the performance of tablemining, we prepare the test data selected fromairline information in travelling category o1'Chinese Yahoo web site (http://www.yaboo.com.tw).
Table 2 shows the statistics of our testdata.AMinesNumber ofPages# ofWrappersNumber ofTablesTable 2.
Statistics o1' Test DataChinaAMine6942075751EvaAirline36656898Mandarin Singapore Fareast SumAMine AMine Ml'line142 110 60 1372184 163 228 3218(2.35)23 40 6 918(0.67)Table 3.
Pertbrmance of Filtering RulesChina Eva Mandarin Singapore Fareast SumAirline Airline AMine Airline Airline#of 2075 568 184 163 228 3218wrappersNumber of 751 98 23 40 6 918TablesNumber of 1324 470 161 123 222 2300\[Non-TablesTotal 973 455 158 78 213 1877FilterWrong 15 0 0 3 2 20FilterCorrect 98.46% 100% 100% 96.15% ~)9.06% )8.93%RateThese four rows list tile names of aMines, totalnumber of web pages, total number of tablewrappers, and total number of tables,respectively.
On the average, there are 2.35table wrappers, and 0.67 tables for each webpage.
The statistics hows that table tags areused quite often in HTML text, and only 28.53%are actual tables.
Table 3 shows the resultsafter we employ the filtering rules on the testdata.
Tile 5 th row shows how many non-tablecandidates are filtered out by the proposed rules,and tile 6 th row shows the nulnbcr of wrongfilters.
On the average, the correct rate is98.93%.
Total 423 of 2300 nou-tables areremained.3 Table RecognitionAfter simple analyses specified in theprevious sectiou, there are still 423 non-tablespassing the filtering criteria.
Now we considerthe content of the cells.
A cell is much shorterthan a senteuce in plain text.
In our study, thelength of 43,591 cells (of 61,770 cells) is smallerthan 10 characters 2.
Because of the spacelilnitation in a table, writers often use shorthandnotations to describe their intention.
Fora A Chinese character is represented by two bytes.That is, a cell contains 5 Chinese characters oil theaverage.168example, they may use a Chinese character (":~,\]",dao4) to represent a two-character word "~ j~"(dao4da2, arrive), and a character ("?~", 1i2) todenote the Chinese word ",~$ i~,~l" (li2kail, leave).They even employ special symbols like ?
andY to represent "increase" and "decrease".Thus it is hard to determine if a fragment ofttTML text is a table depending on a cell only.The context among cells is important.Value cells under the same attribute namesdemonstrate similar concepts.
WE employ thefollowing metrics to measure the cell similarity.
(1) String similarityWe measure how many characters arecommon in neighboring cells.
I1' thelmmber is above zt threshold, we calllhe two cells are similar.
(2) Named entity simihuilyThe metric considers emantics of cells.We adopt some named entityexpressions defined in MUG (1998)such as date/time expressions andmonetary and percentage xpressions.A role-based lnethod similar {o lhepaper (Chert, Ding, and Tsai, 1998) isemployed to tell if a cell is a specificnamed entity.
The neighboring cellsbelonging to the same llalned entitycategory are similar.
(3) Number category similarilyNumber characters (0-9) appear veryoften.
If total number characters in acell exceeds a threshold, we call tlaecell belongs to !.he number category.The neighboring cells in numbercategory are similar.We count how many neighboring cells aresimilar.
If the percentage is above a threshold,the table tags are interpreted as a table.
Thedata after table filtering (Section 2) is used toevaluate the strategies in table recognition.
'Fables 4-6 show the experimental results whenthe three metrics are applied incrementally.Precision rate (P), recall rate (R), andF-measure (F) defined below are adopted tomeasure the performance.p = NumberQ/Correct7?tl)lesSystemGeneratedTotalNumberO/TahlesSystem G n cratedR = NumberOJ'CorrectTahlexSystemGenerated7btalNumberOfCorrectT"ablesP+R2Table 4 shows that string similarity cannotcapture the similar concept between eighboringcells very well.
The F-measure is 55.50%.Table 5 tries to incorporate more semanticfeatures, i.e., categories of named entity.Unlbrtunately, the result does not meet ourexpectation.
The performance only increases alittle.
The major reason is that the keywords(pro/am, $, %, etc.)
for date/time expressionsand monetary and percentage xpressions areusually omitted in {able description.
Table 6shows that the F-measure achieves 86.50%when number category is used.
Compared wilhTables 4 and 5, the performance is improvedTable 4.
String SimilarityChina l';;'aAirline AirlineNumhcr o f  751 98TablesTables 150 4 IProposedCorrect 134 39l'rccision 89.33% 95.12%RalcRecall Ralc 17.8'l% 39.80%l:-mcasurc 53.57% 67.46%Mandarin Singapore l"areast NttmAMine AMine Airline23 4O 6 9187 17 5 2207 14 3 197lOOq~ 82.35% 6(Y/, 89.55c/~30.43% 35.00% 50% 21.46%65.22~A 58.68% 55% 55.50%Table 5.
String or Named Entity SimilarityChina l';wL Mandarin Singapore Farcasl SumAirline Airline AMine Airline AirlineNumber of 751 98 23 40 6 918TablesTables 151 42 7 17 5 222ProposedCorrect 135 40 7 14 3 199Precision 89.40% 95.24% 100% 82.35% 60% 89.64%RateRecall Rate 17.98% 40.82% 30.43% 35.00% 50% 21.68%F-measure 153.69% 68.03% 65.22% 58.68% 55% 55.66%Table 6.
String, Named Entity,or Nulnber Category SimilarityChina 10,,a Mandarin Singapore Fai'cast StllllAMine AMine Airline AMine AMineNmnbm" of 751 98 23 40 6 918TablesTables 668 60 16 41 6 791l'roposcdCorrect 627 58 14 32 4 735Precision 93.86% 96.67% 87.50% 78.05% 66.67% 92.92%RateP, ccall P, alc 83.49% 59.18% 60.87% 80.00% 66.67% 80.07%F-measure 88.88% 77.93(/,, 74.19% 79.03% 66.67% 86.50%169drastically.4 Tab le  In terpreta t ionAs specified in Section 1, theattribute-value r lationship may be interpreted incolunm wise or in row wise.
If the table tags inquestions do not contain COLSPAN(ROWSPAN), the problem is easier.
The firstrow and/or the first column consist of theattribute cells, and the others are value cells.Cell similarity guides us how to read a table.We define row (or column) similarity in terms ofcell similarity as follows.
Two rows (orcolumns) are similar il' most of thecorresponding cells between these two rows (orcolumns) are similar.A basic table interpretation algorithm isshown below.
Assume there are n rows and mLet % denote a cell in i m row and jth co lu lnns .col u mn.
(1 )  I1' there is only one row or column,then the problem is trivial.
We jnstread it in row wise or column wise.
(2) Otherwise, we start the similaritychecking froln the right-bottomposition, i.e., c,~,n.
That is, the n throw and the in th column arc regardedas base for comparisons.
(3) For each row i (1 _< i < n), computethe similarity of the two rows i and n.(4) Count how many pairs of rows aresimilar.
(5) If the count is larger than (n-2)/2, andthe similarity of row 1 and row n issmaller than the similarity of the otherrow pairs, then we say this table canbe read in column wise.
In otherwords, the first row contains attributecells.
(6) The interpretation from row wise isdone in the similar way.
We startchecking from in th coluInn, compare itwith each column j (1 < j < in), andcount how many pail's of columns aresimilar.
(7) If neither "row-wise" nor"column-wise" can be assigned, thenthe default is set to "row wise".Table 6 is an example.
The first columncontains attribute ceils.
The other cells arcstatistics of an expel'imel~tal result.
We read itin row wise.
ff COLSPAN (ROWSPAN) isused, the table iutet'pretation is more difficult.Table 1 is a typical example.
Five COLSPANsand two ROWSPANs are used to create a betterlayout.
The attributes are formedhierarchically.
The following is an example ofhierarchy.Adult  .
.
.
.
.
I ' r ice .
.
.
.
.
.
.
.
.
.
.
Double Room.
.
.
.
.
.
.
.
.
.
.
.
.
Single Room.
.
.
.
.
.
.
.
.
.
.
.
Extra BedHere, we extend the above algorithm todeal with table interpretation with COLSPAN(ROWSPAN).
At first, we drop COLSPANand ROWSPAN by duplicating several copies o1'cells in their proper positions.
For example,COLSPAN=3 for "Tour Code" in Table 1, thuswe duplicate "Tour Code" at colunms 2 and 3.Table 7 shows the final reformulation el' theexample in Table 1.
Then we employ theabove algorithln with slight inodification to l'indthe reading direction.The modification is that spanning cells aleboundaries for similarity checking.
Take Table7 as an example.
We start the similaritychecking from the i'ight-I~ottom cell, i.e., 360,and consider each row and column withinboundaries.
The cell "1999.04.01- 2000.03.31"is a spanning cell, so that 2 "a row is a boundary.
"Price" is a spanning cell, thus 2 '''1 column is aboundary.
In this case, we can interpret hetable tags in both row wise and column wise.Table 7.
Reformulation of Example in Table 1\] our  t Tot ' Co( e Code ~I'F?t "Co?
e I+DP9LAX0 AB DP9LAX01ABi, .
.
.
.
.
.
.
.
i 1999.04.01- 1999.04.01-  vmd { Vand 1 Vanu t' t ' ~ ' I 2000.03 .31  2000.03 .31......... "C5~7; ' )  " " U~i~{g21++f++~Si i~ i ;~U+ l++Eco; ;o ; i i i c++V2.
.
.
.
.
.
.
.
.
~ .............!
extenmon Extension {ExtensionlExtension t Class ! "
'.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: ........................................................................................................................... t " ~ \[ , S ingle Adult PIxICE I 35450 2,510f + !
~'?
?m !
'Double Adult PRICE I-" 32 500 1,430I ~ I Room | " '"...... ++el +++ +V+i++~ + ++(+i ~i o++ +`++++;i+++ + .
.
.
.
.
.
.
.
.
.
.
+++ ............ +++ i+++++ + ++a +<+++ ++ + ............ +++0 .........+ + |Child | I 'R ICE + , .
22 900 360170After that, a second cycle begins.
Thestarling points are moved lo new right-bottompositkms, i.e., (3, 5) and (9, 3).
In this cycle,boundaries are reset.
The cellsI)P9LAX01AIF' and "Adtll\[" ("(~.hild") itlCspalltlil\]g coils, so that I st row alld is| colun\]n {ll*C| l ow bou i ldar ios .
At this \ [ i l l le ,  " to \v - \v i se"  i:;selected.In final cycle, Ihc starting positions are (2,5)and (9, 2).
The boundaries arc  0 'l' rOW and ()u~column.
Those two siib-tables are road it\] rowwise.5 Presental ion of Table Extract ionThe results of table interprctatioll arc asequence of attributc-wfluc pairs.
Consider thetour example.
Table 8 shows the extractedpairs.
We can find ihe following twophenomena:( I )  A cell may be a vahle of lliOre \[h~tll ()ticattribute.
(2) A cell may ael as an attribute in onecase, and a value in another case.We can concatenate two attributes logelher byusing phenomenon (1).
l;or example, "35,450"is a value of "Single Room" and "EconomicClass", thus "Single Room-Econonfic Class" isformed.
Besides l\[lal, we  Call find attributehierarchy by using l)hcnomcnon (2).
Forexample, "Single 1),oom" is a value o1" "Price",and "Price" is a vahie of "Adult", so that we cancreate a hierarchy "Adult-Price-Single Room".Merging the results from these twophononlena, we can create the in/erl~rclationsthat we listed in Section 1.
For example, fromthe two facts:"35,450" is a wflue of "Single Room-L;conomicClass", and"Adult-Price-Single Room" is a hierarchicalattribute,we can infer that 35,450 is a vahie o1'"Adult-Price-Single Rooin-Economic Class".In this way, we can transform unstructureddata into more slrtictured representatioil forfttrther applications.
Consider an application inquest |O | \ ]  al\]d answer ing .
G iver  a query  l ike"how much is the piice of a double |oom for alladult", the keywoMs are "price", "doubleTable 8 Tim Extracted Attril)ute-Value Pairsl ~' cycle2 '"1 t ' ) ' t ' |e3 'a t'ydcAltribulc ValueSingle P, oonl 35?150Single I{cx:,nl 2,510I )Otlblc l (oo inI )Otlble P, oo ln32,5001,430No Occul)atioll 22,900No Occultation 360I'conomic Class 35,450Economic Class 32,500Ec~monfic Class 22,900I:xlcnsion 2,510I'xtension 1,430I-xtensionClass/I,;xtension360Economic ClassClass/l';xicnsion l:~xtensionValid 1999.04.01-2000.03.31Price Single RoomPrice Double ROOlllI'RICI:, No ()cctqmtionTour Code I)l'9t ,AX01ANB( ( (  Valid 199 ~.()4.01-2000.03.31Adul!
PriceChild Priceroom", and "adult".
After consulting thedatabase learning from HTMI.
lexls, two wflues,32,500 and 1,430 with attributes economic lassand extension, are reported.
With this tablemining technology, knowledge lhat can beemployed is beyond text level.Conclusionin this paper, we propose a systematic wayto mine tables from HTML texts.
Tablefiltering, table recognition, table interpretationand application of table extraction are discussed.The cues l'ron\] HTML lags and information intaMe cells are employed to recognize andinterpret tables.
The F-measure for table171recognition is 86.50%.There are still other spaces to improveperformance.
The cues from context of tablesand the traversal paths of HTML pages may bealso useful.
In the text surrounding tables,writers usually explain the meaning of tables.For example, which row (or column) denoteswhat kind ol' meanings.
From the description,we can know which cell may be an attribute, andalong the same row (column) we can find theirvalue cells.
Besides that, the text can alsoshow the selnantics ot' the cells.
For exalnple,the table cell may be a monetary expression thatdenotes the price of a tour package.
In thisway, even money marker is not present in thetable cell, we can still know it is a monetaryexpression.Note that HTML texts can be chainedthrough hyperlinks like "previous" and "next".The context can be expanded further.
Theireffects on table mining will be studied in thefuture.
Besides the possible extensions,another esearch line that can be considered is toset up a corpus for evaluation o1' attribute-valuerelationship.
Because the role of a cell(attribute or value) is relative to other cells, todevelop answering keys is indispensable fortable interpretation.ReferencesAppelt, D. and Israel, D. (1997) "Tutorial Notes onBuilding Information Extraction Syslems," Tutorialon Fifth Conference on Applied Natural LanguageProcessing, 1997.Chen, H.H.
; Ding Y.W.
; and Tsai, S.C. (1998)"Named Entity Extraction for InformationRetrieval," Computer Processing of OrientalLanguages, Special Issue on Information Retrievalon Oriental Languages, Vol.
12, No.
1, 1998,pp.75-85.Douglas, S.; Hurst, M. and Qui,m, D. (1995) "UsingNatural Language Processing for Identifying andInterpreting Tables in Plain Text," Proceedings ofFourth Annual Symposium on Document Analysisand Informatiotl Retrieval, 1995, pp.
535-545.Douglas, S. and Hurst, M. (1996) "Layout andLanguage: Lists and Tables in TechnicalDocuments," Proceedings of ACL SIGPARSEWorkshop on Punctuation in ComputationalLinguistics, 1996, pp.
19-24.Gaizauskas, R. and Wilks, Y.
(1998) " InfornmtionExtraction: Beyond Document Retriew~l,"Computational Linguistics and Chinese LanguageProcessing, Vol.
3, No.
2, 1998, pp.
17-59.Green, E. and Krishnanloorthy, M. (1995)"Recognition of Tables Using Grammars,"Proceedings of the Fourth Annual Symposium onDocument Analysis arm h{fom~ation Retrieval,1995, pp.
261-278.Hurst, M. and Douglas, S. (1997) "Layout andLanguage: Preliminary Experiments in AssigningLogical Structure to Table Cells," Proceedings ofthe Fifth Cot!ference on Applied Natural LattguageProcessing, 1997, pp.
217-220.Hurst, M. (1999a) "Layout and Language: BeyondSimple Text for Information Interaction - Modelingthe Table," Proceedings of the 2rid htternatiottalConference on Multimodal hlterJ?tces, Hong Kong,January 1999.Hurst, M. (1999b) "Layout and Language: A Corpusol' Documents Containing Tables," Proceedings ofAAAI Fall Symposium: Usillg Layout for theGeneration, Undelwtanding arm Retrieval oJDocumetttx, 1999.Mikheev, A. and Finch, S. (1995) "A Workbench lotAcquisition of Ontological Knowledge fromNatural Text," hvceedings of the 7th Conferenceo..\[ the European Chapter .
?br ComputationalLitlguistics, 1995, pp.
194-201.MUC (1998) Proceedittgs of 7 'h MessageUndelwtatMing Conferetlce, hltp://www.muc.saic.corn/proccedings/proceedil~gs ndex.html.Ng, H.T.
; Lira, C.Y.
and Koo, J.L.T.
(1999)"Learning Io Recognize Tables in Free Text,"Proceedings of the 37th Ammal Meeting of ACL,1999, pp.
443-450.172
