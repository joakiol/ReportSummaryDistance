TOWARDS A THEORY OF COMPREHENSION OF DECLARATIVE CONTEXTSFernando GomezDepartment of Computer ScienceUniversity of Central FloridaOrlando, Florida 32816ABSTRACTAn outline of a theory of comprehension ofdeclarative contexts is presented.
The main aspectof the theory being developed is based on Kant'sdistinction between concepts as rules (we havecalled them conceptual specialists) and conceptsas an abstract representation (schemata, frames).Comprehension is viewed as a process dependent onthe conceptual specialists (they contain the infe-rential knowledge), the schemata or frames (theycontain the declarative knowledge), and a parser.The function of the parser is to produce a segmen-tation of the sentences in a case frame structure,thus determininig the meaning of prepositions,polysemous verbs, noun group etc.
The function ofthis parser is not to produce an output to be in-terpreted by semantic routines or an interpreter~but to start the parsing process and proceed untila concept relevant to the theme of the text isrecognized.
Then the concept takes control of thecomprehension process overriding the lower levellinguistic process.
Hence comprehension is viewedas a process in which high level sources of know-ledge (concepts) override lower level linguisticprocesses.i.
IntroductionThis paper deals with a theory of computercomprehension of descriptive contexts.
By"descriptive contexts" I refer to the language ofscientific books, text books, this text, etc.. Inthe distinction performative vs. declarative,descriptive texts clearly fall in the declarativeside.
Recent work in natural language has dealtwith contexts in which the computer understandingdepends on the meaning of the action verbs and thehuman actions (plans, intentions, goals) indicatedby them (Schank and Abelson 1977; Grosz 1977;Wilensky 1978; Bruce and Newman 1978).
Also aconsiderable amount of work has been done in aplan-based theory of task oriented dialogues (Cohenand Perrault 1979; Perrault and Allen 1980; Hobbsand Evans 1980).
This work has had very littlebearing on a theory of ~omputer understanding ofdescriptive contexts.
One of the main tenets ofthe proposed research is that descriptive (ordeclarative as we prefer to call them) contextscall for different theoretical ideas comparedto those proposed for the understanding of humanactions, although~ naturally there are aspects thatare common.An important characteristic of these contextsis the predominance of descriptive predicates andverbs (verbs such as "contain," "refer," "consistof," etc.)
over action verbs.
A direct result ofthis is that the meaning of the sentence does notdepend as much on the main verb of the sentence ason the concepts that make it up.
Hence meaningrepresentations centered in the main verb of thesentence are futile for these contexts.
We haveapproached the problem of comprehension in thesecontexts by considering concepts both as activeagents that recognize themselves and as an abstractrepresentation of the properties of an object.
Thisaspect of the theory being developed is based onKant's distinction between concepts as rules (wehave called them conceptual specialists) and con-cepts as an abstract representation (frames, sche-mata).
Comprehension is viewed as a process depen-dent.on the conceptual specialists (they containthe inferential knowledge), the schemata (they con-tain structural knowledge), and a parser.
Thefunction of the parser is to produce a segmentationof the sentences in a case frame structure, thusdetermining the meaning of prepositions, polysemousverbs, noun group, etc..
But the function of thisparser is not to produce an output to be interpre-ted by semantic routines, but to start the parsingprocess and to proceed until a concept relevant tothe theme of the text is recognized.
Then theconcept (a cluster of production rules) takes con-trol of the comprehension process overriding thelower level linguistic processes.
The conceptcontinues supervising and guiding the parsing untilthe sentence has been understood, that is, themeaning of the sentence has been mapped into thefinal internal representation.
Thus a text isparsed directly into the final knowledge structures.Hence comprehension is viewed as a process in whichhigh level sources of knowledge (concepts) overridelower level linguistic processes.
We have usedthese ideas to build a system, called LLULL, tounde{stand programming problems taken verbatim fromintroductory books on programming.2.
Concepts, Schemata and InferencesIn Kant's Critique of Pure Reason one may findtwo views of a concept.
According to one view, aconcept is a system of rules governing the applica-tion of a predicate to an object.
The rule that36tells us whether the predicate "large" applies tothe concept Canada is a such rule.
The system ofrules that allows us to recognize any giveninstance of the concept Canada constitutes ourconcept of Canada.
According to a second view,Kant considers a concept as an abstract represen-tation (vorstellung) of the properties of anobject.
This second view of a concept is akin tothe notion of concept used in such knowledgerepresentation languages as FRL, KLONE and KIIL.Frames have played dual functions.
They havebeen used as a way to organize the inferences, andalso as a structural representation of what is re-membered of a given situation.
This has causedconfusion between two different cognitive aspects:memory and comprehension (see Ortony, 1978).
Wethink that one of the reasons for this confusionis due to the failure in distinguishing betweenthe two types of concepts (concepts as rules andconcepts as a structural representation).
We havebased our analysis on Kant's distinction in orderto separate clearly between the organization ofthe inferences and the memory aspect.
For anygiven text, a thematic frame contains structuralknowledge about what is remembered of a theme.One of the slots in this frame contains a list ofthe relevant concepts for that theme.
Each ofthese concepts in this list is separately organizedas a cluster of production rules.
They containthe inferential knowledge that allows the systemto interpret the information being presentlyprocessed, to anticipate incoming information, andto guide and supervise the parser (see below).
Insome instances, the conceptual specialists accessthe knowledge stored in the thematic frame to per-form some of these actions.3.
Linguistic Knowledge, Text Understandingand P arsin$In text understanding, there are two distinctissues.
One has to do with the mapping of individ-ual sentences into some internal representation(syntactic markers, some type of case grammar,Wilks' preference semantics, Schank's conceptualdependency etc.).
In designing this mapping,several approaches have been taken.
In Winograd(1972) and Marcus (1979), there is an interplaybetween syntax, and semantic markers (in thatorder), while in Wilks (1973) and Riesbeck (1975)the parser rely almost exclusively on semanticcategories.A separate issue has to do with the meaningof the internal representation in relation to theunderstanding of the text.
For instance, considerthe following text (it belongs to the secondexample):"A bank would like to produce recordsof the transactions during an account-ing period in connection with theirchecking accounts.
For each accountthe bank wants a list showing thebalance at the beginning of t1~eperiod, the number of deposits andwithdrawals, and the final balance.
"Assume that we parse these sentences into ourfavorite internal representation.
Now what we dowith the internal representation?
It is still fardistant from its textual meaning.
In fact, thefirst sentence is only introducing the topic of theprogramming problem.
The writer could haveachieved the same effect by saying: "The followingis a checking account problem".
The textual mean-ing of the second sentence is the description ofthe output for that problem.
The writer could haveachieved the same effect by saying that the outputfor the problem consists of the old-balance,deposits, withdrawals, etc.. One way to producethe textual meaning of the sentence is to interpretthe internal representation that has already beenbuilt.
Of course, that is equivalent to reparsingthe sentence.
Another way is to map the sentencedirectly into the final representation or thetextual meaning of the sentence.
That is theapproach we have taken.
DeJong (1979) and Schanketa l .
(1979) are two recent works that move inthat direction.
DeJong's system, called FRUMP, isa strong form of top down parser.
It skims thetext looking for those concepts in which it isinterested.
When it finds all of them, it ignoresthe remainder of the text.
In analogy to key-wordparsers, we may describe FRUMP as a key-conceptparser.
In Schank eta l .
(1979), words are markedin the dictionary as skippable or as having highrelevance for a given script.
When a relevant wordis found, some questions are formulated as requeststo the parser.
These requests guide the parser inthe understanding of the story.
In our opinion,the criteria by which words are marked as skippableor relevant are not clear.There are significant differences between ourideas and those in the aforementioned works.
Theleast signi?icant o~ them is that the internalrepresentation selected by us has been a type ofcase grammar, while in those works the sentencesare mapped into Schank's conceptual dependencynotation.
Due to the declarative nature of thetexts we have studied, we have not seen a need fora deeper representation of the action verbs.
Themost important difference lies in the incorporationin our model of Kant's distinction between conceptsas a system of rules and concepts as an abstractrepresentation (an epistemic notion that is absentin Schank and his collobarators' work).
The in-clusion of this distinction in our model makes therole and the organization of the different compo-nents that form part of comprehension differmarkedly from those in the aforementioned works.4.
Organization and Communication betweenthe System ComponentsThe organization that we have proposed appearsin Fig.
I.
Central to the organization are theconceptual specialists.
The other components aresubordinated to them.37I ACTIVE FRAMES IFJ.$ure 1 Sys=em Orsanizai::Lon?
"ne parser is essentially based on semantic markersand parses a sentence in to a case frame structure.The specialists contain contextual knowledge rele-vant to each ~pecific topic.
This knowledge is 6 finferential type.
What we have termed "passiveframes" contain what the system remembers of agiven topic.
At the beginning of the parsing pro-cess, the active frames contain nothing.
At theend of the process, the meaning of the text willbe recorded in them.
Everything in these frames,including the name of the slots, are built fromscratch by the conceptual specialists.The communication between these elements isas follows.
When a text is input to the system,the parser begins to parse the first sentence.
Inthe parser there are mechanisms to recognize thepassive frame associated with the text.
Once thisis done, mechanisms are set on to check if the mostrecent parsed conceptual constituent of the sen-tence is a relevant concept.
This is done slmplyby checking if the concept belongs to the list ofrelevant concepts in the passive frame.
If that isthe case the specialist (concept) override theparser.
What does this exactly mean?
It does notmean that the specialist will help the parser toproduce the segmentation of the sentence, in a waysimilar to Winograd's and Marcus' approaches inwhich semantic selections help the syntax componentof the parser to produce the right segmentation ofthe sentence.
In fact when the specialists takeover the segmentation of the sentence stops.
Thatis what "overriding lower linguistic processes"exactly means.
The specialist has knowledge tointerpret whatever structure the parser has builtas well as to make sense directly of the remainingconstituents in the rest of the sentence.
"To in-terpret" and "make sense directly" means that theconstituents of the sentence will be mapped direct-ly into the active frame that the conceptualspecialists are building.
However this does notmean that the parser will be turned off.
The par-ser continues functioning, not in order to continuewith the segmentation of the sentence but to returnthe remaining of the conceptual constituents of thesentence to the specialist in control when asked byit.
Thus what we have called "linguistic know-ledge" has been separated from the high level"inferential knowledge" that is dependent on thesubject matter of a given topic as well as fromthe knowledge that is recalled from a givensituation.
These three different cognitive aspectscorrespond to what we have called "parser," "con-ceptual specialists," and "passive frames"respectively.5.
The ParserIn this section we explain some of the compo-nents of the parser so that the reader can followthe discussion of the examples in the next section.We refer the reader to Gomez (1981) for a detaileddescription of these concepts.
Noun Group: Thefunction that parses the noun group is calledDESCRIPTION.
DESCR is a semantic marker used tomark all words that may form part of a noun group.An essential component of DESCRIPTION is a mecha-nism to identify the concept underlying the complexnominals (cf.
Levi, 1978).
See Finin (1980) fora recent work on complex nominals that concen-trates on concept modification.
This is of mostimportance because it is characteristic of declar-ative contexts that the same concept may bereferred to by different complex nominals.
For in-stance, it is not rare to find the following com-plex nominals in the same programming problem allof them referring to the same concept: "theprevious balance," "the starting balance," "theold balance" "the balance at the beginning of theperiod."
DESCRIPTION will return with the sametoken (old-bal) in all of these cases.
The readermay have realized that "the balance at the beginn-ing of the period" is not a compound noun.
Theyare related to compound nouns.
In fact many com-pound nouns have been formed by deletion of prepo-sitions.
We have called them prepositionalphrases completing a description, and we havetreated them as complex nominals.
Prepositions:For each preposition (also for each conjunction)there is a procedure.
The function of these pre-positional experts (cf.
Small, 1980) is =o deter-mine the meaning of the preposition.
We refer tothem as FOR-SP, ON-SP, AS-SP, etc.. Descri~tiueVerbs: (D-VERBS) are those used to describe.
Wehave categorized them in four classes.
There arethose that describe the constituents of an object.Among them are: consist of, show, include, be~iven by, contain, etc.. We refer to them asCONSIST-OF D-VERBS.
A second class are thoseused to indicate that something is representingsomething.
Represent, indicate, mean, describe,etc.. belong to this class.
We refer to them asREPRESENT D-VERBS.
A third class are those thatfall under the notion of appear.
To this classbelong appear, belong, be $iven on etc.. We referto them as APPEAR D-VERBS.
The fourth class areformed by those that express a spatial relation.Some of these are: follow, precede , be followedby any spatial verb.
We refer to them as SPATIALD-VERBS.
Action Verbs: We have used differentsemantic features, which indicate different levelsof abstraction, to tag action verbs.
Thus we haveused the marker SUPL to mark in the dictionary"supply", "provide", "furnish", but not "offer".From the highest level of abstraction all of themare tagged with the marker ATRANS.
The proceduresthat parse the action verbs and the descriptiveverbs are called ACTION-VERB and DESCRIPTIVE-VERBrespectively.6.
Recognition of C~ ~ptsThe concepts relevant to a programming topicare grouped in a passive frame.
We distinguishbetween those concepts which are relevant to a38specific programming task, like balance to check-ing-account programs, and those relevant to anykind of program, like output, inRut, end-of-data,etc..
The former can be only recognized when theprogramming topic has been identified.
A conceptlike output will not only be activated by the word"output" or by a noun group containing that word.The verb "print" will obviously activate that con-cept.
Any verb that has the feature REQUEST, asemantic feature associated with such verbs as"like," "want," "need," etc., will activate alsothe concept output.
Similarly nominal conceptslike card and verbal concepts like record, a se-mantic feature for verbs like "record," "punch,"etc.
are Just two examples of concepts that willactivate the input specialist.The recognition of concepts is as follows:Each time that a new sentence is going to be read,a global variable RECOG is initialized to NIL.Once a nominal or verbal concept in the sentencehas been parsed, the function RECOGNIZE-CONCEPT isinvoked (if the value of RECOG is NIL).
Thisfunction checks if the concept that has been parsedis relevant to the progran~ning task in general or(if the topic has been identified) is relevant tothe topic of the programming example.
If so,RECOGNIZE-CONCEPT sets RECOG to T and passes con-trol to the concept that takes control overridingthe parser.
Once a concept has been recognized,the specialist for that concept continues in con-trol until the entire sentence has been processed.The relevant concept may be the subject or anyother case of the sentence.
However if the rele-vant concept is in a prepositional phrase thatstarts a sentence, the relevant concept will nottake control.The following data structures are used duringparsing.
A global variable, STRUCT, holds the re-sult of the parsing.
STRUCT can be considered as aSTM (short term memory) for the low level linguis-tic processes.
A BLACKBOARD (Erman and Lesser,1975) is used for communication between the highlevel conceptual specialists and the low levellinguistic experts.
Because the information in theblackboard does not go beyond the sentential level,it may be considered as STM for the high levelsources of knowledge.
A global variable WORD holdsthe word being examined, and WORDSENSE holds thesemantic features of that word.7.
Example 1An instructor records the name and five testscores on a data card for each student.
The regis-trar also supplies data cards containing a studentname, identification number and number of coursespassed.The parser is invoked by activating SENTENCE.Because "an" has the marker DESCR, SENTENCE passescontrol to DECLARATIVE which handles sentencesstarting with a nominal phrase.
(There are otherfunctions that respectively handle sentences start-ing with a prepositional phrase, an adverbialclause, a co~nand, an -ing form, and sentencesintroduced by "to be" (there be, will be, etc.
)with the meaning of existence.)
DECLARATIVE in-vokes DESCRIPTION.
This parses "an instructor" ob-taining the concept instructor.
Before returningcontrol, DESCRIPTION activates the functions RECOG-NIZE-TOPIC and RECOGNIZE-CONCEPT.
The formerfunction checks in the dictionary if there is aframe associated with the concept parsed byDESCRIPTION.
The frame EXAM-SCORES is associatedwith instructor, then the variable TOPIC is instan-tiated to that frame.
The recognition of the frame,which may be a very hard problem, is very simplein the programming problems we have studied andnormally the first guess happens to be correct.Next, RECOGNIZE-CONCEPT is invoked.
Becauseinstructor does not belong to the relevant conceptsof the EXAM-SCORES frame, it returns control.Finally DESCRIPTION returns control to DECLARATIVE,along with a list containing the semantic featuresof instructor.
DECLARATIVE, after checking thatthe feature TIME does not belong to those features,inserts SUBJECT before "instructor" in STRUCT.
Be-fore storing the content of WORD, "records," intoSTRUCT, DECLARATIVE invokes RECOGNIZE-CONCEPT torecognize the verbal concept.
All verbs with thefeature record, as we said above, activate the in-put specialist, called INPUT-SP.
When INPUT-SPis activated, STRUCT looks like (SUBJ (INSTUCTOR)).As we said in the introduction, the INPUT special-ist is a collection of production rules.
One ofthose rules says:IF the marker RECORD belongs to WORDSENSEthen activate the function ACTION-VERB and pass the following reco-mmendations to it: l)activate theINPUT-SUPERVISOR each time you findan object 2) if a RECIPIENT case isfound then if it has the feature HVM_AN,parse and ignore it.
Otherwise awakenthe INPUT-SUPERVISOR 3) if a WHERE case(the object where something is recorded)is found, awaken the INPUT-SUPERVISOR.The INPUT-SUPERVISOR is a function that iscontrolling the input for each particular problem.ACTION-VERB parses the first object and passes itto the INPUT-SUPERVISOR.
This checks if the seman-tic feature IGENERIC (this is a semantic featureassociated with words that refer to generic infor-mation like "data," "information," etc.)
does notbelong to the object that has been parsed byACTION-VERB.
If that is not the case, the INPUT-SUPERVISOR, after checking in the PASSIVE-FRAMEthat name is normally associated with the inputfor EXAM-SCORES, inserts it in the CONSIST-OF slotof input.
The INPUT-SUPERVISOR returns control toACTION-VERB that parses the next object and theprocess explained above is repeated.When ACTION-VERB finds the preposition "on,"the routine ON-SP is activated.
This, after check-ing that the main verb of the sentence has beenparsed and that it takes a WHERE case, checks theBLACKBOARD to find out if there is a recommendationfor it.
Because that is the case, ON-SP tellsDESCRIPTION to parse the nominal phrase "on datacards".
This returns with the concept card.
ON-SP activates the INPUT-SUPERVISOR with card.
Thisroutine, after checking that cards is a type ofinput that the solver handles, inserts "card" in39the INPUT-TYPE slot of input and returns control.What if the sentence had said "... on a notebook"?Because notebook is not a form of input, the INPUT -~SUPERVISOR would have not inserted "book" into theINPUT-TYPE slot.
Another alternative is to let theINPUT-SUPERVISOR insert it in the INPUT-TYPE slotand let the problem solver make sense out of it.There is an interesting tradeoff between under-standing and problem solving in these contexts.The robuster the understander Is~ the weaker thesolver may bed and vice versa.
The prepositionalphrase "for each student" is parsed similarly.ACTION-VERB returns control to INPUT-SP that in-serts "instructor" in the SOURCE slot of input.Finally, it sets the variable QUIT to T to indi-cate to DECLARATIVE that the sentence has beenparsed and returns control to it.
DECLARATIVEafter checking that the variable QUIT has thevalue T, returns control to SENTENCE.
This resetsthe variables RECOG, QUIT and STRUCT to NIL andbegins to examine the next sentence.The calling sequence for the second sentenceis identical to that for the first sentence exceptthat the recognition of concepts is different.
Thepassive frame for EXAM-SCORES does not contain any-thing about "registrar" nor about "supplies".DECLARATIVE has called ACTION-VERB to parse theverbal phrase.
This has invoked DESCRIPTION toparse the object "data cards".
STRUCT looks like:(SUBJ (REGISTRAR) ADV (ALSO) AV (SUPPLIES) OBJ ).ACTION-VERB is waiting for DESCRIPTION to parse"data cards" to fill the slot of OBJ.
DESCRIPTIONcomes with card from "data cards," and invokesRECOGNIZE-CONCEPT.
The specialist INPUT-SP isconnected with card and it is again activated.This time the production rule that fires says:If what follows in the sentence is <univer-sal quatifier> + <D-VERB> or simplyD-VERB then activate the functionDESCRIPTIVE-VERB and pass it therecommendation of activating theINPUT-SUPERVISOR each time a complementis found.The pattern <universal quantifier> + <D-VERB>appears in the antecedent of the production rulebecause we want the system also to understand:"data cards each containing...".
The rest of thesentence is parsed in a similar way to the firstsentence.
The INPUT-SUPERVISOR returns control toINPUT-SP that stacks "registrar" in the source slotof input.
Finally the concept input for this prob-lem looks:INPUT CONSIST-OF (NAME (SCORES CARD (5)))SOURCE (INSTRUCTOR)(NAME ID-NUMBER P-COURSES)SOURCE (REGISTRAR)INPUT-TYPE (CARDS)If none of the concepts of a sentence are recog-nized - that is the sentence has been parsed andthe variable RECOG is NIL - the system prints thesentence followed by a question mark to indicatethat it could not make sense of it.
That willhappen if we take a sentence from a problem aboutchecking~accounts and insert it in the middle of aproblem about exam scores.
The INPUT-SP and theINPUT-SUPERVISOR are the same specialists.
Theformer overrides and guides the parser'when a con-cept is initially recognized, the latter plays thesame role after the concept has been recognized.The following example illustrates how the INPUT-SUPERVISOR may furthermore override and guide theparser.The registrar also provides cards.Each card contains data includingan identification number ...When processing the subject of the second sentence,INPUT-SP is activated.
This tells the functionDESCRIPTIVE-VERB to parse starting at "contains..." and to awaken the INPUT-SUPERVISOR when anobject is parsed.
The first object is "data" thathas the marker IGENERIC that tells the INPUT-SUPER-VISOR that "data" can not be the value for theinput.
The INPUT-SUPERVISOR will examine the nextconcept looking for a D-VERB.
Because that is thecase, it will ask the routine DESCRIPTIVE-VERB toparse starting at "including an identificationn~mber..."8.
Example 2We will comment briefly on the first sixsentences of the example in Fig.
2.
We will nameeach sentence by quoting its beginning and its end.There is a specialist that has grouped the know-ledge about checking-accounts.
This specialist,whose name is ACCOUNT-SP, will be invoked when theparser finds a concept that belongs to the slot ofrelevant concepts in the passive frame.
The firstsentence is: "A bank would like to produce...checking accounts".
The OUTPUT-SP is activated by"like".
When 0UTPUT-SP is activated by a verb withthe feature of REQUEST, there are only two produc-tion rules that follow.
One that considers thatthe next concept is an action verb, and anotherthat looks for the pattern <REPORT + CONSISTD-VERB> (where "REPORT" is a semantic feature for"report," "list," etc.).
In this case, the firstrule is fired.
Then ACTION-VERB is activated withthe recommendation of invoking the OUTPUT-SUPERVI-SOR each time that an object is parsed.
ACTION-VERB awakens the OUTPUT-SUPERVISOR with (RECORDSABOUT (TRANSACTION)), Because "record" has thefeature IGENERIC the OUTPUT-SUPERVISOR tries toredirect the parser by looking for a CONSISTD-VERB.
Because the next concept is not a D-VERB,OUTPUT-SUPERVISOR sets RECOG to NIL and returnscontrol to ACTION-VERB.
This parses the adverbialphrase introduced by "during" and the prepositionalphrase introduced by "with".
ACTION-VERB parsesthe entire sentence without recognizing any rele-vant concept, except the identification of theframe that was done while processing "a bank".The second sentence "For each account the bankwants ...
balance."
is parsed in the followingway.
Although "account" belongs to slot of rele-vant concepts for this problem, it is skipped be-cause it is in a prepositional phrase that startsa sentence.
The 0UTPUT-SP is activated by a40REQUEST type verb, "want".
STRUCT looks like:(RECIPIENT (ACCOUNT UQ (EACH)) SUBJECT (BANK)).The production rule whose antecedent is <RECORD +CONSIST D-VERB> is fired.
The DESCRIPTIVE-VERBfunction is asked to parse starting in "showing,"and activate the OUTPUT-SUPERVISOR each time anobject is parsed.
The OUTPUT-SUPERVISOR insertsall objects in the CONSIST-OF slot of output, andreturns control to the OUTPUT-SP that inserts theRECIPIENT, "account," in the CONSIST-OF slot ofoutput and returns control.The next sentence is "The accounts and trans-actions ... as follows:" DECLARATIVE asksDESCRIPTION to parse the subject.
Because accountbelongs to the relevant concepts of the passiveframe, the ACCOUNT-SP specialist is invoked.
Thereis nothing in STRUCT.
When a topic specialist isinvoked and the next word is a boolean conjunction,the specialist asks DESCRIPTION to get the nextconcept for it.
If the concept does not belong tothe llst of relevant concepts, the specialist setsRECOG to NIL and returns control.
Otherwlse itcontinues examining the sentence.
Because trans-action belongs to the slot of relevant concepts ofthe passive frame, ACCOUNT-SP continues in control.ACCOUNT-SP finds "for" and asks DESCRIPTION toparse the nominal phrase.
ACCOUNT-SP ignoresanything that has the marker HUMAN or TIME.Finally ACCOUNT-SP finds the verb, an APPEAR D-VERBand invokes the DESCRIPTIVE-VERB routine with therecommendation of invoking the ACCOUNT-SUPERVISOReach time a complement is found.
The ACCOUNT-SUPERVISOR is awakened with card.
This inserts"card" in the INPUT-TYPE slot of account andtransaction and returns control to the DESCRIPTIVE-VERB routine.
AS-SP (the routine for "as") isinvoked next.
This, after finding "follows"followed by ":," indicate to DESCRIPTIVE-VERB thatthe sentence has been parsed.
ACCOUNT-SP returnscontrol to DECLARATIVE and this, after checkingthat QUIT has the value T, returns control toSENTENCE.The next sentence is: "First will be asequence of cards ...
accounts."
The INPUT-SPspecialist is invoked.
STRUCT looks like: (ADV(FIRST) EXIST ).
"Sequence of cards" gives theconcept card activating the INPUT-SP specialist.The next concept is a REPRESENT D-VERB.
INPUT-SPactivates the DESCRIPTIVE-VERB routine and asks itto activate the INPUT-SUPERVISOR each time anobject is found.
The INPUT-SUPERVISOR checks ifthe object belongs to the relevant concepts forchecking accounts.
If not, the ACCOUNT-SUPERVISORwill complain.
That will be the case if the sen-tence is: "First will be a sequence of cardsdescribing the students".
Assume that the abovesentence says: "First will be a sequence of cardsconsisting of an account number and the oldbalance."
In that case, the INPUT-SP will activatealso the INPUT-SUPERVISOR but because the verbalconcept is a CONSIST D-VERB, the INPUT-SUPERVISORwill stack the complements in the slot for INPUT.Thus, what the supervisor specialists do dependon the verbal concept and what is coming after.The next sentence is: "Each account isdescribed by ..., in dollars and cents."
Again,the ACCOUNT-SP is activated.
The next concept isa CONSIST D-VERB.
ACCOUNT-SP assumes that it isthe input for accounts and activates theDESCRIPTIVE-VERB function, and passes to it therecommendation of activating the INPUT-SUPERVISOReach time an object is parsed.
The INPUT-SUPERVI-SOR is awakened with (NUMBERS CARDINAL (2)).
Be-cause number is not an individual concept (like,say, 0 is) the INPUT-SUPERVISOR reexamines the sen-tence and finds ":," it then again asks toDESCRIPTIVE-VERB to parse starting at "the accountnumber...".
The INPUT-SUPERVISOR stacks the com-plements in the input slot of the concept that isbeing described: account.The next sentence is: "The last account isfollowed by ... to indicate the end of the list.
"The ACCOUNT-SP is invoked again.
The followingproduction rule is fired: If the ordinal "last"is modifying "account" and the next concept is aSPATIAL D-VERB then activate the END-OF-DATAspecialist.
This assumes control and asksDESCRIPTIVE-VERB to parse starting at "followed by"with the usual recommendation of awakening the END-OF-DATA supervisor when a complement is found, andthe recommendation of ignoring a PURPOSE clause ifthe concept is end-of-list or end-of-account.
TheEND-OF-DATA is awakened with "dummy-account".Because "dtumny-account" is not an individual con-cept, the END-OF-DATA supervisor reexamines thesentence expecting that the next concept is aCONSIST D-VERB.
It finds it, and redirects theparser by asking the DESCRIPTIVE-VERB to parsestarting in "consisting of two zero values."
TheEND-OF-DATA is awakened with "(ZERO CARD (2))".Because this time the object is an individualconcept, the END-OF-DATA supervisor inserts it in-to the END-OF-DATA slot of the concept being des-cribed: account.9.
ConclusionLLULL was running in the Dec 20/20 under UCILisp in the Department of Computer Science of theOhio State University.
It has been able to under-stand ten programming problems taken verbatim fromtext books.
A representative example can be foundin Fig.
2.
After the necessary modifications, thesystem is presently running in a VAXlI/780 underFranz Lisp.
We are now in the planning stage ofextensively experimenting with the system.
Wepredict that the organization that we have proposedwill make relatively simple to add new problemareas.
Assume that we want LLULL to understandprogramming problems about roman numerals, say.We are going to find uses of verbs, prepositions,etc.
that our parser will not be able to handle.We will integrate those uses in the parser.
Ontop of that we will build some conceptual special-ists that will have inferential knowledge aboutroman numerals, and a thematic frame that will holdstructural knowledge about roman numerals.
We arepresently following this scheme in the extension ofLLULL.
In the next few months we expect to fullyevaluate our ideas.I0.
A Computer Run41The example below has been taken verbatimfrom Conway and GriPs (1975).
Some notes aboutthe output for this problem are in order.i) "SPEC" is a semantic feature that stands forspecification.
If it follows a concept,- it meansthat the concept is being further specified ordescribed.
The semantic feature "SPEC" is followedby a descriptive verb or adjective, and finally itcomes the complement of the specification in paren-theses.
In the only instance in which the descrip-tive predicate does not follow the word SPEC is inexpressions like "the old balance in dollars andcents".
Those expressions have been treated as aspecial construction.
2) All direct objectsconnected by the conjunction "or" appear enclosedin parentheses.
3) "REPRESENT" is a semanticmarker and stands for a REPRESENT D-VERB.4) Finally "(ZERO CARD (3))" means three zeros.
(A BANK WOULD LIKE TO PRODUCE RECORDS OF THETRANSACTIONS DURING AN ACCOUNTING PERIOD INCONNECTION WITH THEIR CHECKING ACCOUNTS.
FOR EACHACCOUNT THE BANK WANTS A LIST SHOWING THE BALANCEAT THE BEGINNING OF THE PERIOD, THE NUMBER OFDEPOSITS AND WITHDRAWALS, AND THE FINAL BALANCE.THE ACCOUNTS AND TRANSACTIONS FOR AN ACCOUNTINGPERIOD WILL BE GIVEN ON PUNCHED CARDS AS FOLLOWS:FIRST WILL BE A SEQUENCE OF CARDS DESCRIBING THEACCOUNTS.
EACH ACCOUNT IS DESCRIBED BY TWO NUM-BERS: THE ACCOUNT NUMBER (GREATER THAN 0), ANDTHE ACCOUNT BALANCE AT THE BEGINNING OF THE PERIOD,IN DOLLARS AND CENTS.
%~E LAST ACCOUNT IS FOLLOWEDBY A DUMMY ACCOUNT CONSISTING OF TWO ZERO VALUESTO INDICATE THE END OF THE LIST.
THERE WILL BE ATMOST 200 ACCOUNTS.
FOLLOWING THE ACCOUNTS ARE THETRANSACTIONS.
EACH TRANSACTION IS GIVEN BY THREENUMBERS: THE ACCOUNT NUMBER, A i OR -I (INDICATINGA DEPOSIT OR WITHDRAWAL, RESPECTIVELY), AND THETRANSACTION AMOUNT, IN DOLLARS AND CENTS.
THE LASTREAL TRANSACTION IS FOLLOWED BY A DUMMY TRANSACTIONCONSISTING OF THREE ZERO VALUES.
)Figure 2 A Programming ProblemOUTPUT CONSIST-OF (ACCOUNT OLD-BAL DEPOSITSWITHDRAWALS FINAL-BAL)ACCOUNT INPUT (ACCOUNT-NUMBER SPEC GREATER (0)OLD-BAL SPEC (DOLLAR-CENT))INPUT-TYPE (CARDS)END-OF-DATA ((ZERO CARD (2)))NUMBER-OF-ACCOUNTS (200)TRANSACTION INPUT (ACCOUNT-NUMBER (1 OR -i)REPRESENT(DEPOSIT OR WITHDRAWAL)TRANS-AMOUNT SPEC (DOLLAR-CENT))INPUT-TYPE (CARDS)END-OF-DATA ((ZERO CARD (3)))Figure 3 System Output for Problem in Figure 2ACKNOWLEDGEMENTSThis research was supported by the Air ForceOffice of Scientific Research under contractF49620-79-0152, and was done in part while theauthor was a member of the AI group at the OhioState University.I would llke to thank Amar Mukhopadhyay forreading and providing constructive comments ondrafts of this paper, and Mrs. Robin Cone for herwonderful work in typing it.REFERENCESBruce, B. and Newman D. Interacting Plans.
Cogni-tive Science.
v. 2, 1978.Cohen, P. and Perrault R. Elements of a Plan-BasedTheory of Speech Acts.
Cognitive Science, v. 3,n.
3, 1979.Conway, R. and GriPs, D. An Introduction to Pro-gramming.
Winthrop Publishers, Inc., Massachu-setts, 1975.DeJong, G. Prediction and Substantiation: A NewApproach to Natural Language Processing.
Cogni-tive Science, v. 3, n. 3, 1979.Erman, D. and Lesser V. A Multi-Level Organizationfor Problem-Solving Using Many Diverse Coopera-ting Sources of Knowledge.
IJCAI-75, UniversityMicrofilms International, PO BOX 1467, AnnArbor, Michigan 48106, 1975.Finin, T. The Semantic Interpretation of CompoundNominals.
Report T-96, Dept.
of ComputerScience, University of Illinois, 1980.Gomez, F. Understanding Programming ProblemsStated in Natural Language.
OSU-CISR-TR-81,Dept.
of Computer Science, The Ohio StateUniversity, 1981.Grosz, B.
The Representation and Use of Focus inDialogue Understanding.
SRI Technical Note 151,Menlo Park, Ca., 1977.Hobbs, J. and Evans D. Conversation as PlannedBehavior.
CQsnltlve Science.
v.4, no.
4, 1980.Levi, J. N. The Syntax and Semantics of ComplexNominals.
Academic Press, 1978.Marcus, M. ~ Theor 7 of Syntantic Recognition fo_._~rNatural Language.
MIT Press, 1979.Ortony~ ,~, a~membering, Understanding, and Repre-sentation.
Cognitive Science, v. 2, n. i, 1978.Perrault, R. and Allen F. A Plan-Based Analysis ofIndirect Speech Acts.
American Journal ofComputational Linguistics, v. 6, n. 3, 1980.42Riesbeck, C. K. Conceptual Analysis.
In R.
Schank(Ed.
), Conceptual Information P rocessin ~.
N.York, Elvesier-North Holland, 1975.Schank, R. and Abelson, R. Scripts, Plans, Goals,and Understanding.
Laurence Erlbaum Associates,Hillsdale N. J., 1977.Schank, R. C., Lebowitz, M., and Lawrence, B.Parsing Directly in Knowledge Structures.in IJCAI-79, Computer Science Department,Stanford University, stanford, CA 94305.Small, S. Word Expert Parsing: A Theory of Dis-tributed Word-Based Natural Language Under-standing.
Tech.
Report 954, Dept.
of ComputerScience, University of Maryland, 1980.Wilks, Y.
An Artificial Intelligence Approachto Machine Translation.
In Schank and Colby(eds.)
Computer Models of Thought andLanguage.
San Francisco, W. H. Freeman andCo., San Francisco, 1973.Wilensky, R. Understanding Goal-Based Stories.Dept.
of Computer Science, Yale University.Tech.
Report 140, 1978.Winograd, T. Understanding Natural Language.
N.York, Academic Press, 1972.43
