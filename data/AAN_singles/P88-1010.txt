An Integrated Framework for Semantic and PragmaticInterpretation 1Martha E. PollackArtificial Intelligence CenterSRI International333 Ravenswood AveMenlo Park, CA 94025, USAFernando C.N.
PereiraCambridge Computer Science Research CentreSRI InternationalSuite 23, Millers Yard, Mill LaneCambridge CB2 1RQ, EnglandAbstractWe report on a mechanism for semantic and prag-matic interpretation that has been designed totake advantage of the generally compositional na-ture of semantic analysis, without unduly con-straining the order in which pragmatic decisionsare made.
To achieve this goal, we introduce theidea of a conditional interpretation: one that de-pends upon a set of assumptions about subsequentpragmatic processing.
Conditional interpretationsare constructed compositionally according to a setof declaratively specified interpretation rules.
Themechanism can handle a wide range of pragmaticphenomena and their interactions.1 In t roduct ionCompositional systems of semantic interpretation,while logically and computationally very attrac-tive \[6,20,26\], seem unable to cope with the factthat the syntactic form of aa utterance is notthe only source of information about its mean-ing.
Contextual information--information aboutthe world and about the history of a discourse--influences not only an utterance's meaning, buteven its preferred syntactic analysis \[3,5,7,16\].
Ofcourse, context also influences the interpretation(or meaning in context) of the utterance, in which,for example, referring expressions have been re-solved.One possible solution is to move to an integratedsystem of semantic and pragmatic interpretation,defined recursively on syntactic analyses that are1 This research as been funded by DARPA under Con-tract N00039-84-C-0524, and by a gift from the SystemsDevelopment Foundation as part of a coordinated researcheffort with the Center for the Study of Language and In-formation, Stanford University.
We would like to thankDavid Israel, FLay Perrault, and Stuart Shieber for theirhelpful discussions regarding this work.neutral about those decisions that depend uponcontext.
In this approach, a least-commitmentgrammar may be used to produce neutral repre-sentations that can be reconfigured later.
Sucha grammar might, for example, leave quantifiersin place \[30\], attach all prepositional phrases lowand right \[22\], and bracket o the right all com-pound nominals.
2 These neutral analyses can thenserve as input to a system that produces inter-pretations (and not meanings) in a nearly com-positional manner, in that the interpretation of aphrase a is a function of the interpretations of itssyntactic onstituents ogether with its context ofutterance.This model of semantic interpretation assumesthat contextual information is available wheneverit is needed for deciding among alternative inter-pretations.
However, this is often not the case:questions about the interpretation of some con-stituent of an utterance might be answerable onlywhen information about the interpretation ofsyn-tactically distant constituents becomes available.Familiar examples of this can be found, for in-stance, in sentences with quantifier scoping ambi-guities and in sentences that include intrasenten-tial anaphora.
The so-called donkey sentences \[9\]exhibit both these phenomena.These difficulties do not necessitate a completeabandonment of compositionality.
To take advan-tage of the generally compositional nature of se-mantic analysis without constraining unduly theorder in which pragmatic decisions are made,we assign to phrases conditional interpretations,2Tllere are reasons to suspect hat ultinmtely syntacticanalysis hould be incorporated into the same stage of pro-cessing as semantic and pragnuLtic analysis; in particular, itis difficult to develop syntactically neutral representationsfor certain constructions such as conjunction.3For simplicity, we shall use the term "phrase" to referboth to an entire utterance and to a constituent of an ut-terance, distinguishing betweeal the two only when needed.75which represent the dependence of a phrase's inter-pretation on assumptions about subsequent prag-matic processing.
Conditional interpretations arebuilt compositionally according to declarativelyspecified interpretation rules.The interpretation mechanism we discuss herehas been implemented in Prolog as part of theCandide system, a multimodal tool for knowledgeacquisition.
Incorporating both a graphical inter-face and a processor for English discourse, Can-dide allows a user of the Procedural ReasoningSystem (PITS) \[10\] to build and maintain proce-dural networks in a natural way.
Procedural net-works, an essential part of PRS's knowledge base,encode the information about procedures that isused by PItS for reasoning about and performingtasks in any given domain.
The current version ofCandide has been used to construct networks formalfunction procedures for NASA's space shuttle.Further details of the Candide system will be pre-sented elsewhere \[24\].2 Condit ionalInterpretat ionsIn our approach to semantic and pragmatic in-terpretation, conditional interpretations separatethe context-independent aspects of an interpreta-tion from those that are context-dependent.
Eachconditional interpretation consists of a sense anda \[possibly empty\] set of assumptions.
As a firstapproximation, one might think of the sense of aphrase as representing purely semantic informa-tion, that is, information that can be adducedsolely from the linguistic ontent of the phrase, nomatter in which context he phrase has been ut-tered.
The assumptions then represent constraintsrelating the phrase's ense to its ultimate interpre-tation.
A complete interpretation has an emptyassumption set, indicating that all of its depen-dencies on context have been resolved.The present version of the theory allows for twokinds of assumptions.
A bind assumption intro-duces a new parameter in an interpretation andplaces constraints on the binding of the parameterto individuals in the context.
A restrict assump-tion does not introduce a new parameter, but in-stead further estricts the way in which an existingparameter can be bound.These concepts are illustrated by the followingconditional interpretation f the sentence "The jetfailed":\[\["The j t failed"\] =(fail(z), {bind(z, def, jet)}) (:)The first element of the interpretation is the sensefail(z), while the second is the set of assump-tions containing a single assumption whose infor-mal reading is that z should be bound to some-thing of the sort jet according to the constraintsof definite reference.3 The Interpretat ion Pro-cessThe process of semantic and pragmatic interpre-tation computes complete interpretations of sen-tences from least-commitment parse trees.
Twotypes of rules govern the interpretation pro-cess: semantic.interpretation rules and pragmatic-discharge, rules.Semantic-interpretation rules specify the con-ditional interpretation of a phrase in terms ofthe conditional interpretations of its constituents.Compositionality is enforced by making semantic-interpretation rules sensitive only to the syntac-tic types of a phrase and its constituents, as wellas to the types of assumptions in the conditionalinterpretations a sociated with the constituents;semantic-interpretation rules are not sensitive tothe senses of the constituents.Pragmatic-discharge rules change the condi-tional interpretation fa phrase by specifying howassumptions in the conditional interpretation maybe eliminated with respect o the context of utter-ance.
For example, one discharge rule applies toassumptions constraining a parameter to be boundas a definite reference.
This rule allows an assump-tion of the form bind(v, def, T) to be discharged,provided that there is a unique contextually avail-able entity of sort T. The effect of applying thedefinite discharge rule to an interpretation (S, A)is twofold: the bind assumption operated upon isremoved from the set of assumptions A; the senseS is changed to reflect the binding.
For instance,if the rule were applied to the interpretation i(1), and if the context of utterance C contained aunique available ntity j of sort jet, the resultinginterpretation would be~fail(j),q~) (2)As we shall see in the next section, assumption dis-charge will in general not only make use of but alsochange the discourse context.
Therefore, dischargerules should be viewed as four-place relations.
Forexample, the following would be an instance of the76discharge relation:discharge(C, (fail(z), {bind(z, def, jet)}),(/air(j), ~), C'),where C is the discourse context before the as-sumption is discharged, while C I is the resultingdiscourse context.Semantic-interpretation rules are obligatory inthat some semantic-interpretation rule associatedwith a given syntactic rule must be applied to anyphrase analyzed by the syntactic rule.
In contrast,the application of pragmatic-discharge rules is op-tional, although discharging a particular assump-tion too early or too late may lead to a dead endin the interpretation process.
Applying the samedischarge rule at different points in the interpreta-tion process for some utterance may lead to alter-native interpretations, as we shall illustrate withthe examples in Sections 6 and 7.Given a sentence and its syntactic analy-sis, the interpretation process applies semantic-interpretation and pragmatic-discharge rules, ac-cording to their applicability conditions, to con-struct the derivation of a complete interpretationof the sentence.
In Candide, this process resem-bles a syntax-directed translation system \[1\].
In-terpretation starts at the root node of the anal-ysis tree.
For each node of the tree, the inter-pretation process selects an appropriate semantic-interpretation rule and calls itself recursively foreach of the node's daughters.
Interpretations areconstructed on return from the recursion, andpragmatic-discharge rules are optionally appliedin a discharge cycle that follows each applicationto a node of a semantic-interpretation rule.Lexical ambiguity, multiple semantic-interpre-tation rules for a given syntactic onstruction, op-tional application of discharge rules, and alter-native ways of discharging a given assumption.are all sources of nondeterrninism in the interpre-tation process, which need to be somehow con-trolled.
In Candide, we adopted four simple con-trol tactics: overall depth-first search, early dis-charge of assumptions, breadth-first earch for al-ternative bindings of a discharged parameter, andbounds on assumption percolation wherever it canbe shown that an assumption would not be dis-chargeable outside a certain syntactic domain.
Forlack of space, a fuller discussion of these heuristicswill be conducted elsewhere \[24\].4 The  D iscourse  ContextPragmatic-discharge rules need access to a dis-course context hat encodes information about rel-evant world knowledge and the discourse history.Although our framework for semantic and prag-matic interpretation can accommodate alternativerepresentations of the discourse context, the spe-cific discharge rules we have written and incorpo-rated into the Candide system rely on a particularrepresentation comprising four parts: immediatecon~ez4, local contez~, global contezt, and a knowl-edge base.During the analysis of a sentence, the immediatecontext contains detailed information about theentities referred to in that sentence; it is used pri-marily for resolving intrasentential anaphora.
Thelocal context generally contains detailed informa-tion about the immediately preceding sentence, 4while the global context includes somewhat lessdetailed information about entities referred tothroughout longer stretches of the discourse.
Weuse the local context primarily for pronoun resolu-tion, following the theory of centering introducedby Grosz et aL\[12\].
The global context is employedprimarily for the resolution of definite anaphora,and is structured as a stack to make use of thetheory of focusing.
Each element of the global-context stack is itself a list of entries containinginformation about the entities referred to in a dis-course segment \[13\].
We refer to the top elementof the global context as the intermediate contezt.Individual discharge rules used in processing asentence can extend the immediate context forthat sentence.
For instance, the rule mentionedearlier that binds a parameter as a definite refer-ence acids to the irmnediate context an entry forthe entity to which the parameter isbound.
Whenthe assumption in (1) is discharged, resulting inthe interpretation i (2), an entry for j must beadded to the immediate context.
The entry willinclude the sort of j (jet) and the surface positionof that phrase in the sentence (subject).The discourse context must also be updated af-ter each sentence has been processed.
In the sim-plest case, tile update will be quite straightfor-ward, as illustrated in Figure 1: the current im-mediate context will become the new local con-text, while a subset of the information encoded inthe immediate context will be also added to theintermediate context (the topmost element of theglobal-context s ack).
The immediate context will4This will not be true when a "pop" of the global contexthas just  occurred \[13\].77Discourse contextImmediate context JLocal context JIntermediate contextLC I .
I~  LCI JDS.DS~-,~LC HDS.. .DS~Know e00e o I K8 Ii-1Figure 1: Updating the Discourse Contextbe cleared in preparation for the next sentence.For the moment, we shall assume that the knowl-edge base is static, although it will ultimately haveto be reorganizable dynamically so as to reflect alanguage user's current perspective.In fact, the update function can be rather morecomplex.
For example, if the current utterance isrecognized to be the start of a subordinate dis-course segment, a new, empty element can bepushed onto the global-context s ack after the lo-cal context has been merged into the previous topelement.
We shall discuss the discourse-contextupdate function further elsewhere \[24\].5 A Simple DiscourseThe following simple discourse will provide ourfirst illustration of the interpretation mechanismand, in particular, the treatment of reference andcoreference:The jet failed.
(3)Close the manifold.In the subsequent sections, we shall turn to morecomplex examples that provide further insight intothe way in which pragmatic processes can interactwith one another affecting syntactic and semanticdecisions.The three semantic-interpretation rules given inFigure 2 are needed in the example.
Recall thatthe interpretation process is driven by semantic-interpretation rules, which apply compositionaUyto phrases.
Each such rule has three parts: an ap-plicability condition (AC), a set of selection f~nc-tions (SF), and a condflionai-interpretation fu c.tion (CIF).
The applicability condition specifiesthe syntactic type of phrase to which the seman-tic interpretation rule applies; it is stated in termsof a predicate on trees.
5 The selection func-tions specify how to access the constituents of thephrase to which the rule is to he applied.
Fi-nally, the conditional-interpretation fu ction de-fines the conditional interpretation of the phraseas a function of the conditional interpretationsof its constituents.
A conditional-interpretationfunction will often depend separately on the senseand assumptions of a conditional interpretation I,for which we use the notations Is and IA, respec-tively.Figure 3 shows an annotated tree  represent-5The meanings of the predicates on trees used in thispaper should be clear from their names.eOur analysis trees are closer to the functional s t ruc -78r (fail0).
?
)1 (fai/(a), {bind(a, argl, device), restrict(argl,  fl})2 (fail(a).
{bind(a, argl, device)}> ?I failed 3 (b, {bind(b, def, jet)})4 the 5 qet, 0)ietFigure 3: Interpretation of "The jet failed"\ [ iv-c lause\] :AC: intrans-verb-clause(T )SF: pred(T) = V, argl(T) = ACIF: IT\] = (~VIs, \[VIA U \[A\]AU{restrict(argl, =, \[A\]s) })\[def-np\]:AC: def-np(T)SF: argl(T) = NCIF: \[~I = (z, \[N\]A U {bind(z, def,\[N\]s)})\[lex\]:AC: lex-ltem(T)SF: wordstem(T) = WCIF: I T \ ]=  IwFigure 2: Semantic-Interpretation Rules Iing the derivation of a complete interpretation ofthe first sentence in (3).
Conditional interpreta-tions of constituents of the complete sentence areshown above the root nodes of the correspondingsubtrees.Semantic-interpretation rule\[lex\] applies to lex-ical subtrees (Nodes 2 and 5 in Figure 3 ~) associ-tures of lexlcal-functional grammar \[4\] than to the usualsurface const ituent s t ruc ture .
The sample analyses havebeen extrsmely simplified for expesitory reasons; terminalnodes, in particular, appear in the trees simply as the corre-sponding word, but  their actual representation, asrequiredby interpretation rule \[lex\], has  two branches: wordstem forthe actual root form of the terminal, cat for its syntacticcategory.
Finally, tree nodes relevant o the discussion arenumbered for ease of reference.7Node 4 is also lexical, but defudte determiners con-tribute only to the interpretation of their mother  nounating with each wordstem W conditional interpre-tations Iw according to the lexicon.
The lexicalentries relevant o the current discussion are:/jet = (jet, ?
)/fail = (fail(z), {bind(z, argl, device)})In the conditional interpretation of a commonnoun, the sense is always a sort term.
The assump-tion set may be empty, as it is for ~jet" above, butfor a relational noun it will contain hind assump-tions for the relation's arguments, binding param-eters occurring in the sort term.The lexical entries for verbs and the structuralrules that combine a verb with its subject andcomplements must refer, through assumptions, tothe grammatical functions that provide the argu-ments of the predicates that represent the senses ofverbs (roughly the govcrnable grammatical func-tions of lexical-functional grammar \[4,27\]).
Sincewe are not defending any particular theory ofgrammar in this paper, we shall skirt a theoreticaland terminological minefield by naming the gram-matical functions relevant to our purposes argifor i = 1, .
.
.
,  n, and calling them simply "argu-ments."
Arguments are used as edge labels in ouranalyses, as well as in bind and restrict assump-tions, and their intended interpretation should beclear from the examples we are discussing.The encoding of selectional restrictions is illus-trated here in the conditional interpretation of theverb "fail," which is fail(z), under the assumptionthat z must be bound as first argument of theverb to something of the sort device.
This inter-phrase, by rule \[def-np\], rather than being given a sepa-rate interpretation.79pretation effectively encodes the information thatthings that fail are devices,Because the local tree rooted at Node 3 repre-sents a definite noun phrase, rule \[def-np\] appliesto it in a straightforward fashion, yielding the con-ditional interpretation(b, (bind(b, def, jet)}) (4)That is, "the jet" is interpreted as b under the as-sumption that b can be bound in accordance withthe constraints of definite reference to an entity ofsort jet.As mentioned earlier, a pragmatic-dischargerule may be used whenever it is applicable to someconditional interpretation i context.
In the cur-rent example, the rule for discharging the bind as-sumption is applicable to the conditional interpre-tation in (4), and it is actually used in the deriva-tion to determine a referent for the definite nounphrase.The process of resolving a definite reference isof course quite complex \[5,11,28,29\], and the rulethat discharges assumptions to bind a parameteras a definite reference must reflect this complex-ity.
For the moment, let us assume that there isonly one entity of the correct sort available for def-inite reference (perhaps introduced in a precedingportion of the discourse): the jet identified as j.The pragmatic discharge rule can thus bind theparameter b to j ,  extend the immediate contextaccordingly, and delete the bind assumption fromthe list of assumptions in the current conditionalinterpretation.
The resulting conditional interpre-tation of the string "the jet" is (j, ~b), shown inFigure 3 above Node 3 ~.Finally, consider the interpretation of the wholesentence.
Rule \[iv-clause\] applies to the parse treefor the sentence, specifying that its sense is thesense of the predicate (pred) constituent, namelyfail(a), and that its set of assumptions is theunion of (i) the assumptions from its predicateconstituent, (ii) the assumptions from its argu-ment (argl) constituent, and (iii) the new assump-tion restrict(argl, =, j), where j is the sense of theargument constituent.
The restrict assumption,which arises from the sentence's syntactic form,applies to whatever parameter is to be bound asthe first argument of the sense of the sentenc~ inSTile conditional interpretation shown above Node 2 inthe figure has a new parameter, Q, substituted for the vari-able z of the lexical entry because parameters introducedthrough bind assumptions in distinct appllcAtious of seman-tic interpretation-rules in a derivation must be themselvesdistinct.this case, a, as specified by the bind assumptioninherited from the predicate constituent.
The re-strict assumption further constrains the bindingof this parameter by requiring that it be equatedwith the entity j.The interpretation process is completed afterthe two remaining assumptions are discharged, asindicated at the top of Figure 3.
9 They can bedischarged successfully in parallel: binding a to jis legitimate because j is a jet, and jet is a subsortof device.
Before the next sentence is processedthe discourse context needs to be updated, as de-scribed earlier.The second sentence of our example is "Closethe manifold"; we shall be concerned primarilywith the way in which the reference resolutionproblem is handled.
The conditional interpreta-tion for the definite noun phrase "the manifold"is(c, {bind(c, def, manifold)}) (5)Discharging the bind assumption here requires theuse not only of world knowledge - -  namely, thateach jet is attached to one and only one manifold- -  but also of knowledge of the discourse history--namely that there is a single salient jet in context,the one identifed as j.
The latter information canbe derived from the discourse context, while theformer must be encoded in the knowledge base.This information is sufficient to resolve the ref-erence in the sentence under consideration: "themanifold" refers to the manifold that is attachedto j.
Hence the interpretation we derive from (5)is(,.,+,), CO)where m is the unique manifold attached to jet j.For use in constraining subsequent reference, thediscourse context must be updated with the infor-mation that m has the restricted sort : manifold IAz.attached-~o(z,j), where sip is the subsort of swhose elements atisfy property P.9In the Candide system as it currently exists, a bindassumption encoding a selectlonal restriction and a restrictassumption encoding the filler of an argument must be dis-charged as soon as the latter has been is introduced; oth-erwise an erroneous interpretation might he derived if therestrict asmarnption is mistakenly applied at a higher clausenode.
A better scheme would encode sufficient inforn~tionin these restrict assumptions to ensure that they could ap-ply only to the appropriate clause.806 Quant i f ie r  ScopeWe shall now turn to the kind of interactions inpragmatic processing that challenge compositionalsystems.
In this section we shall discuss an exam-ple of quantifier scope ambiguity; following that,we shall give an example of our analysis of donkeysentences, involving interactions between quanti-fier scoping and reference resolution.The following sentence illustrates the quantifierscoping problem in its simplest form:Every driver controls a jet.
(7)This sentence might be given either a wide-scopeexistential (3V) interpretation, in which all thedrivers control the same jet, or a narrow-scope ex-istential (V3) interpretation, in which each drivercontrols its own, possibly different, jet.\[tv-clause\]:AC: trans-verb-clause(T)SF: pred(T) = V, argl(T) = A1, arg2 = A2CIF: \[T\] = (IV\]s,\[vh u \[A~h u \[AZ\]AU{restrlct(argl,--, \[A1\]s),restrlct(arg2, = \[A2\]s)})\[gen-quant\]:AC: gen-quant(T)SF: pred(T) = Q, argl(T) = NClF: IT\] = (x, \[N\]Au{bind(z, \[Q\]s, \[NIs)})\[indef-np\]:AC: indef-np(T)SF: argl(T) = NCIF: \[T\] = (z, \[N\]AU{bind(z, indef, IN\]s)})Figure 4: Semantic-Interpretation Rules IIInterpreting (7) requires additional rules of se-mantic interpretation, shown in Figure 4, and thelexical entry/control =( co,,~rols( z, y ),{bind(z, argl, device),bind(y, arg2, device)})Derivations of the 3V and the V'~ interpretationsare shown in Figures 5 and 6, respectively.In both derivations, the general noun phrase"every driver" is interpreted at Node 2 by rule\[gen-quant\] and the indefinite noun phrase "a jet"is interpreted at Node 1 by rule \[indef-np\].
How-ever, the two derivations differ as to where theindefinite-reference assumption is discharged.
InFigure 5 the assumption isdischarged immediatelyafter its introduction.
The resulting sense is a newentity j of sort jet.
The same 3V reading couldalso be derived by allowing the indefinite-referenceassumption to percolate up to Node 3, but thendischarging it before the generalized quantifier as-sumption.
In either case, the immediate contextis updated at the time of the discharge with anentry for the new entity j.Somewhat more interesting is the derivation ofthe ~ reading, shown in Figure 6.
The indefinite-reference assumption is allowed to percolate toNode 3, where the generalized-quantifier assump-tion is discharged.
This discharge applies a quan-tifier to its scope, but it also selects some sub-set of the outstanding indefinite-reference assump-tions in the current conditional interpretation a ddischarges them, by existential quantification ofthe respective parameters, within the scope of thegeneralized quantifier.
In our example, the ruleconverts the conditional interpretation( con~rots( a, b ),{bind(a,V, driver), bind(b, indef, je0} )into the completed interpretation{Ya : driver 3b :jet controls(a, b), qb)?
7 A Donkey  SentenceWe can now discuss the more complicated inter-actions between assumptions occurring in donkeysentences.
Our example will be the sentence:Every driver controlling a jet closes it.
(8)Clearly, this sentence has an interpretation iwhich, for every driver controlling ajet, the drivercloses the jet.
However, it is difficult to see howthis interpretation can be derived compositionally.The weU-recognized problem is that, in the in-tended reading, the indefinite noun phrase % jet"has narrower scope than the determiner "every,"forcing its interpretation to be part of the sortterm translating the nominal "driver controllinga jet."
But this means that the interpretation ofthe pronoun "it" will be outside the scope of theindefinite "a jet.
"Our solution to the problem of interpreting don-key sentences involves two new mechanisms: cap-ture rules that allow the quantifier in a general81(mnuv/s(x, y),{bind(x, argl, d~/ce),bind(y, arg2, d~/ce)})controls(V~r.arriver ~mrols(~ D. ~)(controls(a, j), {bind(a, V, driver)})?32 (a, {bind(a, V, driver)l) I (b, {bind(b, indef, jet)})p r~arg l~ pred/argl~every driver a jetFigure 5: ~ Interpretation(mntro/s(x, y),{bind(x, argl, dev/ce),bind(y, arg2.
d~/m)})controls(Va~river 3b:jet controls(a, b), ~)(controls(a, b ), {bind(,*, V, driver), bind(b, indof, jet)})?31 (b, {bind(b, indef, jet)})a jet2 (a, {bind(a, V, driver)}) or./o\every driverFigure 6: V'~ Interpretationnoun phrase to discharge in a particular way bindassumptions derived from singular noun phrasesoccurring in the general noun phrase, and a pro-noun resolution rule that discharges a pronoun-introduced bind assumption by replacing the as-sumption's parameter with the parameter boundby the assumption for a possible antecedent of thepronoun.Figure 7 shows a simplified derivation of aninterpretation of sentence (8), with some of theless interesting assumptions discharged immedi-ately after their introduction rather than beinglisted explicitly.
Before discussing the main pointsof this example we need to explain our somewhatnonstandard representation of \[reduced\] relativeclauses, as in the compound nominal "driver con-trolling a jet" (Node 2).
A relative clause is rep-resented as a main clause but has one of its argu-ment positions filled by a nominal (the head nounmodified by tile relative clause) instead of a nounphrase.
The discharge rule discussed in Section 5that combines a verb argument with its filler thenhas two versions: one in which the filler sense isan entity, already described, and one in which thefiller sense is a sort.
In the latter case, the ruleproduces an interpretation whose sense is the fillersort restricted by the sense of the clause.
In theforegoing example, the sort-filler discharge rule isapplied to the interpretation( controis( z,  b ),?
{bind(z, argl, device),restrict(argl, --, driver),bind(b, indef', jet)})824'"  (Vb;jet 'Ca : (dr/verl Zx.conwols(x, b)) closes(a, b), ~b)?4"" CCa : (driver Ikx.conwols(x, b )) closes(a, b ), {bind(b, V, jet)I)4' (Va : (driver IZx.controls(x, b )) closes(a, c), {bind(b, V, jet),bind(c, pron, neuter)})?4 (closes(a, c), {bind(a, V, driver l~x.controlxOc, b), {bind(b, indef, jet)}),bind(c, pron.
neuter)})closes argl (c. {bind(c. pron.
neuter)})i t3 (a, {bind(a, V, driver I~.controls(x, b), {bind(b, Indef, jet)})})every 2 (driver I ~.x.contro ls(x, b ), {bind(b, indef, jet)I)controls driver 1 (b, {bind(b, indef, jet)})a jetFigure 7: Interpretat ion of a Donkey Sentenceto produce the restricted sort( driveflAx.controls( z, b ), {bind(b, indef, jet)})After these preliminaries, we can go on to themain point of the example.
The first observationto make is that the sentence has an alternative(albeit  unlikely) interpretat ion i which "a jet" istaken to refer to a specific jet  that every drivercontrols.
This interpretat ion would be derived bydischarging the corresponding indefinite-referenceassumption at Nodes 1 or 2 in the derivation.
1?We shall assume that this is not done, and that theindefinite-reference assumption is therefore avail-able at Node 3.So far bind assumptions have been given astriples of a parameter, a binding criterion (derivedfrom a determiner), and a sort restriction for theparameter.
In fact, a fourth component of depen-10 A third interpretation is also possible, in which "a jet"is interpreted asa narrow-scope (no nreferential) existential,and "it" is interpreted as having an extrasentential refer-ent.
Limitations in Candide's handling of nonreferentialindefinites preclude this reading, but a somew|mt differentrule system will generate all three readings correctly \[23\].dencies is in general required, a set of other as-sumptions that the given assumption may dependon.
11 An assumption a (the dependent assump-tion) depends on another assumption ~ (the inde-pendent assumption) whenever the parameter for\]~ occurs in the sort constraint of ~.
For the lan-guage fragment under discussion, a would be thebind assumption for a complex noun phrase andthe bind assumption for a noun phrase within apreposit ional phrase or relative clause in the com-plex noun phrase.
For correct binding of quanti-fied parameters, emantic interpretation and dis-charge rules must maintain the invariant hat as-sumptions on which a given assumption dependscan occur only in its set of dependencies.
Con-sequently, whenever a dependent assumption c~is introduced any other assumption on which itdepends must be moved into <~'s dependencies,thereby becoming inaccessible to discharge rules.If a is later discharged, the assumptions in its setof dependencies again become accessible to dis-11In the examples so far this set  has been empty andtherefore omitted for the sake of clarity.83charge rules.
Semantic interpretation must bemodified to fit this analysis.
For instance, rule\[gen-quant\], given earlier, should be instead\[gen-quant'\]:AC: gen-quant(T)SF: pred(T) -- Q, argl(T} -- NCIF: \[T\] = (z, {bind(z, \[Q\]s, \[N\]s, IN\]A)})In Figure 7, this rule is applied at Node 3.Capture may occur whenever a generalized-quantifier assumption with a nonempty set of de-pendencies D is discharged.
Any indefinite as-sumption in D may be captured by turning it intoa universal-quantification assumption and puttingit into the set of assumptions for the new con-ditional interpretation.
In our example, the in-definite assumption for "a jet" is captured in thedischarge of the universal assumption for "everydriver...", from Node 4 to Node 4' in the deriva-tion.
The resulting assumption is now Universal.If this assumption were discharged immediately,there would be no way of discharging the pronounassumption as an intrasentential naphoric refer-ence.
Instead the pronoun resolution rule is ap-plied to discharge the pronoun assumption, caus-ing identification of the pronoun parameter c withthe jet parameter b.
The resulting conditional in-terpretation is 4".
Finally, the remaining assump-tion can be discharged by quantification leadingto the complete interpretation at Node 4 ~a.The example shows how assumptions allow in-teractions between reference and quantification tobe left unresolved until all the necessary informa-tion becomes available.
Early discharge of theassumption for "a driver" blocks the desired in-terpretation for the pronoun "it"; capture makesavailable the attributive use of "a driver ~" at an ap-propriate point for its identification with the directobject of "close.
"8 Re la ted  ResearchStrictly compositional pproaches to semantic in-terpretation, such as Montague grammar \[19\],have so far proved inadequate for dealing withinteractions between meaning and context; rea-sons for this are noted in Section 1.
Our ap-proach can be thought of as a generalization ofthe compositional mechanism of Cooper storage\[6\], or of its computational nalogue developed byWoods \[30\].
Alternative approaches that attemptto address these interactions include discourse-representation theory (DRT) \[14,18\] and Barwise'spartial-valuation approach \[2\].In DRT, the interpretation of a sentence isderived in a compositional manner from anintermediate representation called a discourse-representation structure (DRS).
Itowever, therules that have been developed for constructingDRSs are not themselves compositional.
Accord-ing to the DRS-construction rules presented byKamp \[18\], the DRS for a phrase is found only asa by-product of finding the DRS for the embed-ding discourse.
In particular, DRS-constructionrules apply only after the relative scope of nounphrases and anaphoric bindings have been deter-mined.
It is conceivable that our notion of con-ditional interpretation might be reexpressible inDRT terms, leading to a compositional system forDRS construction.Barwise \[2\] uses the notion of partial valuation,that is, partial assignments of values to variables,to analyze the sorts of interactions exemplified bythe donkey sentences.
Similar comments apply toWebber's work \[29\].
In addition, none of the afore-mentioned accounts has been concerned with aswide a range of phenomena s is currently hawdied in Candide.
12 One of the motivations forour work has been to see how Barwise's direct-interpretation approach could be turned into atwo-stage one in which phrases are first "com-piled" into conditional interpretations, which arethen "executed" by applying pragmatic-dischargerules.Finally, several other computational systems de-veloped recently are concerned with interactionsbetween context and meaning, especially Pundit\[8,21\] and Tacitus \[17,16\].
Both these systemshave emphasized solutions to such difficult prag-matic problems as reference r solution.
In particu-lar, the Pundit project has made notable progresson the question of resolving missing arguments,while the Tacitus group has done the same forquestions involving the determination of implicitrelations.
In Candide, solutions to such prag-matic problems hould be encoded in the proce-dures that discharge assumptions; in future ver-sions of the system the discharge procedures mightbe improved applying some of the techniques de-veloped in this other work.
What neither Punditnor Tacitus has been concerned with is the ques-tion of how to build interpretations composition-12To date, we have included capabilitea for process-ing reference and coreference (definlte and indefinite nounphraaea, pronouns, poeatesaivea, and proper nouns), quan-tifier scope, compound nominals, prepmltional-phrase t-tachment, and certain types of underapecified relations(e.g., maln-verb "have").
We shall report on these mecha,nisms elsewhere \[24\].84ally.
Both systems first build partial interpreta-tions of sentences, and then attempt to solve acollection of associated pragmatic problems.
Pun-dit does the latter in an overly constrained way,with the result that it cannot handle systemati-cally the sort of interactions exemplified by thedonkey sentences.
Tacitus, on the other hand,casts all the pragmatic problems as theorems to beproved; the result is an underconstrained controlstrategy.
We believe that the generally composi-tional approach developed in Candide enables usto avoid both these extremes.9 Further WorkWe have developed a mechanism of semantic andpragmatic interpretation that relaxes the con-straints of compositional semantics just-enoughto allow pragmatic information to play its neces-sary role in the derivation of sentence interpreta-tions.
Central to the mechanism are conditionalinterpetations, which allow us to separate con-straints on interpretation that depend only on syn-tactic structure, represented by the sense compo-nent of the conditional interpretation, from thosethat depend on pragmatic hoices, representedby the assumption component.
The interpreta-tion process is carried out by a combination ofsemantic-interpretation rules, which build condi-tional interpretations of phrases on the basis oflexical and syntactic information, and pragmatic-discharge rules, which satisfy assumptions on thebasis of discourse and domain information.
Whilethe system we have implemented deals with a va-riety of semantic and pragmatic phenomena, ofwhich only a few were discussed in this paper, itcan only be seen as a first limited instantiationof a system architecure that requires much furtherwork.
We shall mention ow a few of the directionsthat might be pursued in developing the architec-ture further.At the most theoretical level, it is interestingto note the formal similarity of our interpretationrules to rules in "deductive ~ models of program-ruing language semantics \[25\].
It is also interest-ing to consider the connection between conditionalinterpretations and the relational theory of mean-ing from situation semantics \[3\].
These two simi-larities might be fruitful in developing a semanticjustification for our formal interpretation rules interms of constraints on interpretation relations.The applicability of discharge rules depends inmany cases on the compatibility of expected andsupplied sorts for relation arguments.
In gen-eral, these sorts may be parameterized by assump-tion parameters, and some semantic interpretationproblems not considered here suggest that higher-order parameterized types, instead of first-ordersorts, may be needed.
A suitable notion of typesubsumption for such higher-order parameterizedtypes \[15\] would be useful.
More generally, thewhole architecture would benefit from a semanti-cally grounded treatment of parameters and pa-rameterized objects.Other pragmatic processes associated with dis-charge rules, such as those for reference resolution,also must be able to reason with parameterizedobjects--for example in checking the uniqueness ofa dependent object relative to arbitrary parame-ter assignments.
Ultimately, the proper treatmentof singular noun phrases in context will require acloser connection between assumptions and \[pa-rameterized\] fragments of the discourse context.References\[1\] A. V. Aho, R. Sethi, and J. D. Ullman.
Compil-ers: Principles, Techniques and Tools.
Addison-Wesley, Reading, Massachusetts, 1985.\[2\] J. Barwise.
Noun phrases, generalized quanti-tiers and anaphora.
In P. G~xdenfors, editor,Generalized Quantifiers: Linguistic and LogicalApproaches, pages 1-29, D. Reidel, Dordrecht,Netherlands, 1987.\[3\] J. Barwise and J. Perry.
Situations and Attitudes.MIT Press, Cambridge, Massachusetts, 1983.\[4\] J. Bresnan and R. Kaplan.
Lexical-functional.grammar: a formal system for grammatical repre-sentation.
In J. Bresnan, editor, The Mental Rep-resentation of Grammatical R~lations, pages 173-281, MIT Press, Cambridge, Massachusetts,1982.\[5\] D. Caxter.
Interpreting Anaphors in Natural Lan.guage Tezts.
Ellis Horwood, Chichester, England,1987.\[6\] R. Cooper.
Quantification and Syntactic Theory.D.
Reidel, Dordrecht, Netherlands, 1983.\[7\] S. Crain and M. Steedman.
On not being led upthe garden path: the use of context by the psycho-logical syntax processor.
In D. Dowty, L. Kart-tunen, and A. Zwicky, editors, Natural LanguageParsing: Psychological, Computational, and The-oretical Perspectives, pages 320-358, CambridgeUniversity Press, Cambridge, England, 1985.\[8\] D. A. Dahl, M. S. Palmer, and R. J. Passonneau.Nominalizations in Pundit.
In Proceedings of the85~4th Annual Meeting of the Association for Com-putational Linguistics, pages 131-139, Stanford,California, 1987.\[9\] P. Geach.
Reference and Generality.
Cornell Uni-versity Press, Ithaca, New York, 1962.\[10\] M. P. Georgeff and A. L. Lansky.
Procedu-ral knowledge.
Proceedings of the IEEE, SpecialIssue on Knowledge Representation, 1383-1398,1986.\[11\] B. J. Grosz.
The Representation a d Use of Fo-cus in Dialogue Understanding.
Technical Re-port 151, SRI International, Menlo Park, Ca.,1977.\[12\] B. J. Grosz, A. K. Joshi, and S. Weiustein.
Pro-viding a unified account of definite noun phrasesin discourse.
In Proveedings o\] the 21st An-nual Meeting of the Association for Computa.tional Linguistics, pages 44-50, Cambridge, Mas-sachusetts, 1983.\[13\] B. J. Grosz and C. L. Sidner.
Attention, inten-tions, and the structure of discourse.
Computa-tional Linguistics, 12(3):175-204, 1986.\[14\] F. Guenthner, H. Lehmann, and W. Schonfeld.
Atheory for the representation f knowledge.
IBMJournal of Research and Development, 30(1):39-56, January 1986.\[15\] R. Harper, F. Honsel\], and G. Plotkin.
A frame-work for defining logics.
In Proceedings of the Sec-ond Symposium on Logic in Computer Science,Cornell University, IEEE, Ithaca, New York,1987.\[16\] J. R. Hobbs.
Interpretation azabduction.
In Pro-ceedings of the ?6th Annual Meeting of the As-sociation for Computational Linguistics, Buffalo,New York, 1988.\[17\] J. R. Hobbs.
Overview of the TACITUS project.Computational Linguistics, 12(3), 1986.\[18\] H. Kamp.
A theory of truth and seman-tic interpretation.
In J.
A. G. Groenendijk,T.
M. V. Janssen, and M. B. J. Stokhoi~ edi-tors, Formal Methods in the Study o\] Language,pages 277-322, Mathematisch Centrum, Amster-dam, Netherlands, 1981.\[19\] R. Montague.
The proper treatment of quantifi-cation in ordinary English.
In R. H. Thomason,editor, Formal Philosphy, Yale University Press,1973.\[20\] R. C. Moore.
Problems in logical form.
In Pro-ceedings o\] the 19th Meeting o\] the Association forComputational Linguistics, pages 117-124, Stan-ford, California, 1981.\[21\] M. S. Palmer, D. A. Dahl, R. J. Schiffman,L.
Hirschman, M. Linebarger, and J. Dowding.Recovering implicit information.
In Proceedingsof the ~.~th Annual Meeting of the Association, \ [22 \ ]for Computational Linguistics, pages 10-19, NewYork, 1986.F.
C. Pereira- Logic for Natural Language Anal-ysis.
Technical Report 275, SRI International,Menlo Park, California, 1983.\[23\] F.C.
Pereira- Towards a deductive theory of sen-tence interpretation.
Unpublished manuscript.\[24\] F.C.
Pereira and M. E. Pollack.
A compositional,declarative system for semaattic and pragmatic in-terpretation.
In preparation.\[25\] G. D. Plotkin.
A Structural Approach to Oper-ational Semantics.
Lecture notes DAIMI FN-19,Aarhus University, Aarhus, Denmark, September1981.\[26\] L. K. Schubert and F. 3.
Pelletier.
From Englishto logic: context-free computation of 'conven-tional' logical translation.
Computational Lin-guistics, 8(1):26-44, 1982.\[27\] P. Sells.
Lectures on Contemporary SyntacticTheories.
Volume 3 of CSLI Lecture Not~, Cen-ter for the Study of Language and Information,Stanford University, Stanford, California, 1985.Distributed by University of Chicago Press.\[28\] C. L. Sidner.
Focusing in the comprehensionof definite anaphora- In Computational Mod-els of Discourse, MIT Press, Cambridge, Mas-sachusetts, 1983.\[29\] B. L. Webber.
So what can we talk aboutnow?
In Computational Models of Discourse,MIT Press, Cambrige, Ms., 1983.\[30\] W. A.
Woods.
Semantics and quantificationin natural language question answering.
InM.
Yovits, editor, Advances in Computers, Vol.17, pages 2-64, Academic Press, New York, NewYork, 1978.86
