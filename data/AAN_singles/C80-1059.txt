PROCESSING OF SYNTAX AND SEMANTICS OF NATURAL LANGUAGEBY PREDICATE LOGICHiroyuki YamauchiInstitute of Space and Aeronautical Science,University of Tokyo4-6-1 Komaba, Meguro-ku, Tokyo 153, JapanSummaryThe syntax and semantic analyses of natural lan-guage are described from the standpoint of man-machine communication.
The knowledge based systemKAUS(Knowledge Acquisition and Utilization System)which has capabilities of deductive inference andautomatic program generation of database accessis utilized for that purpose.
We try to performsyntax and semantic analyses of English sentencesmore or less conccurently by defining the corre-spondence between the basic patterns of Englishand the extended atomic formula in the frameworkof KAUS.
Knowledge representation based on setsand logic, the sentence analysis utilizing thisknowledge are given with some examples.i.
IntroductionThis paper presents natural language understand-ing in man-machine invironments.
The syntax andsemantic analyses program is given almost inlogical forms of the knowledge based system KAUS(knowledge Acquisition and Utilization System).KAUS is a logic machine based on the axiomaticset theory and it has capabilities of deductiveinference and automatic program generation ofdatabase access.In natural language understanding, it should berequired that the syntax analysis is performedwith association of word semantics.
The descrip-tions of word semantics are fundamental as wellas syntax features in language analysis.
Whenusing natural language to communicate with a ma-chine, the understanding of meanings of sentencesis presupposed to the machine.We think of words as representing concept setsor property sets, and formalize them into astructure called SKELETON STRUCTURE using theirelement-set relationships.
In this, we can rep-resent semantic categories of words in hierar-chical order.
The correspondence between naturallanguage expressions and system's logical formu-las is given in the straightforward manner suchas"X give Y to Z" - - -  (GIVE X Z Y P)where the variables X, Y and I are usually bound-ed by their semantic categories.
We call thisset of representations ATOM FORMAT DEFINITIONSET.
Furthermore, causality relations of generalfacts and paraphrases of sentences are given asgeneral axioms.
Individual facts are also givenas axioms.
We call these sets of representationsAXIOM SET.
Conceptual schemas of databases canalso be given in the axiom set.
The KAUS'sknowledge base comprises the above three compo-nents.Utilizing this knowledge base, we try to performthe syntax and semantic analyses of naturallanguage more or less conccurently in the sensethat all these processes will be carried outthrough the deductive process in KAUS.
At thetime, the logic program of the analyses writtenin KAUS language is executed by the deductiveprocess.In the chapter 2, some considerations oh naturallanguage(NL) processing are given as prelimina-ries.
In the chapter 3, the outline of KAUS isdescribed, where the knowledge representation,the system language and the deductive inferencerule are presented.
In the chapter 4, a ratherintuitive and straightforward approach to theanalyses of English sentences is described withsome examples.
A part of the logic program ofthe analyses is also given there.2.
Some Considerations on NL ProcessingWhen we are going to construct a natural languageunderstanding system, the following four pointsmust be clarified:i).
the main motivation and goal for NLprocessing2).
knowledge representation suitable forNL processing3).
the aspect of programming language andmethodology by which the modification,updating and extension of the programof NL processing can be easily made.4).
the efficiency of processingIn the sequel, we will clarify our standpointabout the above matters.2.1 Motivation and GoalAt present, the details of the mechanism of hu-man language comprehension and knowledge memo-rization have not yet been clarified.
These arestill left uncertain.
Now, let us consider thehuman process of natural language understanding.- -389--When we read a sentence, we make an image (mean-ing) of each word and match the pattern of thesentence predicting what sorts of words will becoming to the next.
The imagination, predic-tion and pattern matching are usually made in-voluntarily.
Furthermore, if several sentencesare following, we settle the scene of the dis-course and extract the meaning of the currentsentence with relation to the discourse.
Thatis, the word meanings (semantics), the sentencepattern (syntax) and the world knowledge arefundamental components for the sentence compre-hension.Our main motivation and goal are to deal withthe NL processing from the standpoint of man-machine communication, and with the above con-sideration, to write a syntax and semantics anal-ysis program under the knowledge-based system~US which has capabilities of deductive infer-ence and automatic program generation of data-base access.2.2 Knowledge RepresentationIn natural language analysis, knowledge repre-sentation to parse the sentences and extracttheir meanings is most crucial.
The variouskinds of parsers have been revised by experts;among them, the ATN parser by W. Woods is wide-spread and used elsewhere.
It is essentiallya context-free grammar based one.
Further, torepresent the semantic structure of the sen-tences, the frame theory revised by M. Minskyis widespread.
The system using the ATN orATN-like parser and the frame or frame-likestructure, present them in semantic networks.On the other hand, predicate calculus orientedknowledge representation is also available tolanguage processing.
We will adopt predicatecalculus oriented representation of knowledgefor NL processing and database definitions.In database applications, predicate logic is ofgreate advantage to define intensional and ex-tensional data to which the deductive inferencerule can be applied.
Moreover, it has beenpointed out that there exist similarities be-tween natural language and predicate logic.
Butas the expressive power of first order logic israther restricted, we will extend the formalismof first order logic.
This formalism will begiven in the next chapter.2.3 Programming Langua$e and MethodologyTo make a computer understand natural language,we must program "the understanding mechanism"and give "the state of the world" to the machine.It should be noticed here that natural languagecontains ambiguous expressions in itself.
It isusually very difficult how to process ambigui-ties of sentences.
In general, "ambiguity" maybe a property of subjects but should not be aproperty of the processing mechan&sm; the solu-tion of the subject and the subject itself maybe given plausibly or uncertainly but not thesolution mechanism itself.With this consideration, we adopt the logic pro-gramming method which can be involved in KAUS'ssystem language.
By this method, we can designa sentence analysis program in the top-downstyle.
The logic programming with use of theKAUS's formal logic is perspicuous, by which themodification, updating and extension can be madeeasily.
In particular, the correspondences be-tween the form of natural language expressionsand the system's own formulas can be definedfairly in the straightforward manner, which arereferred to in turn by the deductive inferenceand retrieval mechanism to translate the formerinto the latter.2.4 Efficiency of ProcessingWith respect to the efficiency of processing,the program written in KAUS's logic programmingstyle may be slightly less comfortable than theprogram written altogether in the proceduralform becuase of the necessity of the executionof deductive retrieval program.
However, theefficiency would be slightly sacrificed at themoment for the sake of clarity of the program.3.
Outline of KAUSIn this chapter, we describe briefly about anknowledge based system called KAUS(KnowledgeAcquisition and Utilization System) which wasrealized in accordance with the design philoso-phy presented in the paper \[6\] and \[7\].
KAUS isconstructed on the basis of the axiomatic settheory which has capabilities of deductive in-ference and automatic program generation fordatabase access.
It can be also applied to thelogic programming of the semantic processing ofnatural language.
In the following, we focusour discussions to the characteristics of knowl-edge representation formalism, the deductiveinference rule and the system language features.3.1 Knowledge Representation FormalismWe think of words as representing concept orproperty sets of things, and organize them intoa structure on the basis of their set-theoreticimplications.
We will call such a structureSKELETON STRUCTURE.
Using this formalism, we canrepresent semantic categories of words in hier-archical order.
For example, the following setrelations are structurized into Figure i.
@PERSON- PERSON / \@MaN - -  MAN --- WOMAN - -  @W~MAN@BOY-- BOY GIRL @GIRLI I#JOHN #MARYpower set- -  element- -  d i s jo in tFiqure I .
An Example of Skeleton Structure--390PERSON D MAN , PERSON ~ WOMANMAN ~BOY , WOMAN ~GIRL  , MANn WOMAN =MAN ~ #JOHN , WOMAN ~ #MARY ( I )In the figure, the relation of set inclusion isuniformly represented as the element-set rela-tions by using the concept of power sets.
Thenthe power set of PERSON (we denote it by @PERSON)comprises all the subsets of PERSON:@PERSON = \[ MAN, WOMAN, BOY, GIRL .
.
.
.. .
.
.
#JOHN, #MARY .
.
.
.
\] (2)Hereupon, let us consider the ordinary firstorder predicate logic at a moment.
In the firstorder logic, domains of variables are describedby using predicates.
For example, "every manwalks" is represented by(Vx)\[MAN(x) .
.
.
.
.
.
> WALK(x)\] (3)where MAN(x) is used for the domain restrictionof the variable X.
Thus, this restriction can beinterpreted as "x is an element of MAN".
More-over, if it were required to answer the question"does every boy walks?
", the following axiomwould have to be given.
(Vx) \ [BOY(x)  .
.
.
.
.
-> MAN(x)\] (4)Then, using (3) and (4), the above question canbe evaluated by Resolution Principle.
But suchdescriptions as (3) and (4) are rather cumber-some.
In place of them, we give the following(5) and (6) which have the same interpretationas (3) and (4) respectively.
(Vx/MAN)\[WALK(x)\] (5)MAN ~ BOY (6)where the prefix (Vx/MAN) in (5) which can beincluded in our axiom set described later de-notes "for every x~ MAN" The set relation (6)can be also given in our skeleton structure.Using both (5) and (6), we can derive the answerof the above question faster than the ordinaryfirst order logic where such representations as(3) and (4) are used.
This is the merit of theskeleton structure and will be much more clari-fied in the section of Deductive Inference Rule.Atom Format Definition Set In the first orderlogic, constants, variables and functions arerecognized as terms.
Then, an atom is definedas P(t~, t2,..., t~) where P is a n-place pred-icate symbol and t~ (i = l,...,n) is a term.
Aformula is defined by using such atoms, logicalconnectives and quantifiers.
However, when wewish to translate a natural laguage expressioninto a predicate form in the above formalism; wecannot directly handle phrases and clauses bothof which are used as verb objects or verb com-plements.
Therefore, we extend the atom def-inition as follows:i).
a formula can be permitted as a termbesides constants, variables and func-tions2).
a function can be used as an atom ---we call this type of an atom PROCEDURALTYPE ATOM (PTA), while the other typeatom is called NONPROCEDURAL TYPE ATOM(NTA).
(note: because of permitting aPTA as an atom, we can perceive thatour logical formulas afford a sort oflogic programming facilities.
)The atom format definition set provide us with adefinition of a correspondence between some syn-tactic features bf natural language and our log-ical formulas.
In addition, PTA definitions arealso given in the set.
In the figure 2, someexamples are illustrated , where all of the usedatom formats conform to the following standardformat definitions:NTAI : (V S X, X2 P) (7)NTA2 : (A 0 V) (8)PTA ,: '(F Y , - - -  Y~; X~---  X~) (9)NTAI is usually used for representing a simplesentence, while NTA2 is used for representing anAdj.?
Noun phrase.
In the NTA\] definition, Vdenotes a predicate symbol.
S, XI, X~ and P areterms, of which S is usually used as the subjectof V, and P is a formula which denotes the modi-fiers concerning time, locus, goal, reason andmanner of V. Some of the terms may be omittedaccording to the syntactic feature of a sen-tence.
In the NTA2 definition, (A 0 V) de-notes "the Attribute of Object is Value".Finally, in the PTA definition, F denotes afunction name which takes input variables Xt ,...., X~ and output variables Yi ,..., Y~ ?
Itmust be remarked here that some of the variablesin (7), (8) and (9) may be bounded by their do-mains or semantic categories, but they wereomitted for the sake of simplicity.
"X give Y to Z .
.
.
.
.
(GIVE X Z Y P)"red X .
.
.
.
.
(COLOR X RED)"two X' .
.
.
.
(CARDINAL X 2)"X on Y" - - -  (ON X Y P)"X be fa ther  of Y" - - -  (FATHER Y X)"X + Y = Z" - - -  '(SUM Z; X Y)"X / Y : Z .
.
.
.
.
'(DIV Z; X Y)"s in (X)  = Y .
.
.
.
.  '
(S IN  Y; X)F igure  2.
Examples of  Atom Def in i t ionAxiom Set The axiom set comprises descriptionsof the world which specify general facts suchas causality relations of things and sentenceparaphrasing, and individual facts such as "Johngave a red car to Mary".
These facts are repre-sented by formulas in the standard formQ (~Fv  G ) ( I0)- -391-Where Q represents quantification of variables,taking the form (q, V~/d, )(qzvz/d~ )... (qKv,/dK),in which q~ denotes a quantifier symbol V or 3,vz is a variable name and dz indicates the do-main of the variable VZ.
F and G represent pre-mise and conclusion respectively in the formula;namely, F - -~  G. More clearly, F is consti-tuted from NTAs and PTAs by using logical con-nectives A , V ands ,  and also the same is Gexcept that no PTAs are permitted.
The inter-nal representation of a formula in KAUS is anAND-OR tree to whose root node the quantifica-tion part Q is attached (see Figure 3).Now, we have here several examples* ?Example I.
We can represent a causality rela-tion of "give" as follows:(Vx/PS)(Vy/PS)(Vz/PO)\[~(GIVE x y z (TIMEpast))v((HAVE y z (TIME present))A~(HAVE x z (TIME present)))\]This says that "if X ~ PerSon) gave Z ~ Physi-cal-Object) to y (~PerSon), then y has Z and Xhas not Z at the moment".Example 2.
We can paraphrase "x give z to y"to "y receive z from x" ?
(Vx/PS)(Vy/PS)(Vz/PO)(Vp/VMOD)\[--~(GIVE x y z p)v (RECEIVE y z x p)\]where p/VMOD specifies that p is any formulawhich qualifies the predicates.Example 3.
We can express the meaning of"float" as follows :(Vx/PO)(Vy/LQ)(Vu/RNUM)(Vv/RNUM)(Vp/VMOD)\[~((SPEC-GR x U)A (SPEC-GR y v)A'(LT u v))v (FLOAT x y p)\]This says that "if the specific gravity of ?
isU, the specific gravity of y is V and U is lessthan V , then X float on y".Example 4.
The fact, "John gave a red car toMary" is represented as follows :\[(GIVE #JOHN #MARY CAR (TIME PAST))A (COLOR CAR RED)^ (QF CAR A)\]Example 5.
The fact, "John drinks coffee afterJohn plays tennis" is represented as follows :(DRINK #JOHN COFFEE (TIME (AFTER (PLAY #JOHNTENNIS (TIME PRESENT)))))All of these general/individual facts can be putinto the axiom set and they will be referred tothrough the deductive retrieval mechanism inKAUS.*).
The real notation implemented by KAUS ispartly modified (see 3.3 System Language).
@W, \[~\] - - -  Q, @w3i / \  IW .
.
.
.
.
F G, , - - - -~  W3,-- W~2/W~,-- W~ ~ G a ~ W4,-- W4~-- W~Fiqure 3.
Interconnection betwe.e.llAxioms and Skeleton Structure3.2 Deductive Inference RuleIn the previous section, we have given the for-malism of knowledge representation, where theconcepts and properties of words can be partial-ly ordered according to their set-theoretic im-plications.
Moreover, we have defined the corre-spondence between the syntax features of naturallanguage and logical expressions somewhat in thestraightforward manner.
We have also describedhow to represent universal/individual facts inour axiom set.
However, it must be stressedhere that these three types of knowledge arenot independently presented in the knowledgebase but interrelated each other with respect todomains of variables of atoms; that is, the bi-directed access paths to each constituent of theknowledge base are mutually defined (see Figure3).
By making much use of these access paths,the knowledge only necessary for deduction canbe retrieved efficiently.
The deduction isperformed by the inference rule comprising thefollowing four components:i).
S R: Selection Rule for a literalresolved upon2).
TIC: Test for Implicative Condition3).
R R: Replacement Rule4).
T T: Test for Termination of deductionSR(Selection Rule) A literal resolved upon isselected from the query tree.
The selectioncriterions are as follows.
First, the left-to-right search for a non-evaluated NTA(non-proce-dural type atom) is made in the tree.
When itis found, it is checked whether a constant or3-variable is contained in the NTA.
If it doesthe case, this NTA is took as a candidate re-solved upon.
If no such a literal is presentedin the tree, certain counterplans are executed.The details would be omitted here.TIC(Test for Implicative Condition) After thecandidate literal to be resolved upon is decid-ed, axioms which contain the literals with thesame predicate symbol as the candidate literal'sbut with the opposite sign are retrieved in theknowledge base.
At that occasion, the searchdomain is narrowed to the subset of the axiomset by indexing the variable domains of the" 392-literal resolved upon.
The skeleton structureis referred to for this purpose.Now, let us denote P as such a literal searchedin the knowledge base and C as a candidate lit-eral resolved upon.
TIC checks the implicativeconditions of P ---> C. One of the conditionsto be checked is the set relation of the P'svariable domains to the corresponding C's vari-able domains.
The Table 1 shows this condition.Let us consider an example:P: (~y/GIRL) (Vx/MAN)(vp/VMOD)\[(LOVE x y p)\] ( l l )C: (Vu/BOY) (~v/WOMAN) (vq/VMOD)\[(LOVE u v q) \ ]  (12)P says that "a certain particular girl is lovedby every man".
On the other hand, C says that"every boy loves some woman" in the ordinarysense.
In this case, P ---> C can be establish-ed because all the corresponding variable pairs(X, U), (y, V) and (p, q) satisfy the conditionin Table i.
However, if P and C areP: (Vx/BOY)(~y/WOMAN)(vp/VMOD)\[(LOVE x y p)\] (13)C: (Iv/WOMAN) (Vu/BOY) (Vq/VMOD)\[(LOVE u v q)\] (14)then, P ---> C can never established in spite ofsatisfaction of Table i, because the most gener-al significant unifier does not exist, TICtests this condition, too.RR(Replacement Rule) Let F be an axiom contain-ing P and let G be the query clause containingC.
RR generates a new query clause R aftersubstitution o has been done.
That is, Co isreplaced with (Fo - Po), resulting inR: QR (G~ - C~) .
(Fo - P~) (15)where ?
denotes that (Fo - Po) should be attach-ed to the place where C was resided.
Substitu-tion o is defined in Table I.TT(Test for Termination) When all the nodes inthe query tree have been evaluated, deductionis terminated.
Though we have said that allNTA nodes in the query tree are evaluated bymeans of the above SR, TIC and RR, we have notsaid almost anything about PTAs.
We must nowmention about them.
PTAs in the query tree arein general, ready to be evaluated just at thetime when all its input variables have beenfilled up with their values.
Then, the evalua-tion is performed by calling the subroutinesattached to PTAs.3,3 System LanguageThe system language provide us with fucaltiesof constructing knowledge base and relationaldatabase.
Besides that, it can be used as sub-stitute for logic programming and query repre-Table i. Implicative ConditionQF~ Q~ QA~ XR~ CONDITIONV V V Xp~ n X~ X~ n X~ :~V 3 3 X~,.
X~: ~ Xz;3 V 3 X~ XP,.
~ XZ~- - -  V V X~ .
.
.
.
.
.
.
.
.- - -  3 3 X~ .
.
.
.
.
.
.
.
.V - - -  V X~ .
.
.
.
.
.
.
.
.3 - - -  3 Xr~ .
.
.
.
.
.
.
.
.3 3 (non- impl i ca t ive)P: Qp(Xp, Xr, ~ " -CT: negated form ofC: Q~ (X~, X~, X~ query CR: QR(X~, ~= ~ R: replaced form ofsentations.
The syntax of the system languagehas already been supposed in the section 3.1.At this section, we present the really imple-mented features of the language briefly.
De-tails are excluded because this is not the pur-pose of this paper.The syntax of the system language is based onthe tuple (V0, Vi,... , V n) where V 0 is either asystem command name, a predicate symbol or avariable whose domain is a PREDICATE; Vi(i ?0 )is a term as which a string and a numerical con-stant and a formula are permitted.
The systemlanguage has the following characteristics thatare not included in the first order logic:i).
Variables can be explicitly specified.For example, \[AX/MAN\]\[EY*/WOMAN\]where A and E denote the universal andexistential quantifier respectively,and the symbol * attached to Y denotesthat Y is a query variable.2).
A predicate symbol itself can be avariable.
For example,\[EX*/PRED\]($X, #JOHN, #MARY)?where the symbol $ attached to X denotesthat X is a variable and the symbol ?denotes that the expression is a query.3).
A recursive expression can be permitted.4).
A procedural type atom PTA --- a func-tion --- can be permitted as an atom.For this reason, an aspect of logicprogramming is obtained.4.
Syntax and Semantics AnalysesIn syntax and semantics analyses, word meanings,sentence patterns and world knowledge are fun-damental.
Characteristics of the sentence anal-ysis partly depend on knowledge representationused.
As described in the chapter 3, we repre-sent knowledge in the framework of sets andlogic in KAUS.
The characteristics of our sen-tence analysis program are that, during theanalysis, we use the rather direct correspond-ence between the basic sentence patterns (syn-tax) of natural language and the extended atomicformulas in KAUS, and that the pattern matchingmethod can be used together with the deductive- 393inference rule.
A more characteristic is thatwords in a clause are put into four groups pre-serving the word order, each of which containssubjects, the main verb, direct objects/comple-ments and indirect objects/complements respec-tively.
In this chapter we present the Englishsentence analysis program using the above method.4.1 Descriptive Presentation of the analysisThe analysis takes the following steps:i.
The parts of speech of each word in the in-put sentence and atom format definitions at-tached to each predicative/attributive wordsuch as verbs, adjectives, prepositions andthe others are fetched from the knowledgebase.2.
The input sentence is partitioned into a setof clauses by considering the positions ofconjunctions, relative pronouns and punctua-tion marks.3.
Words in a clause are put into four groupspreserving the word order in the clause, eachof which may contain subjects, the main verb,direct objects/complements respectively.
Forthis purpose, the correspondence relation be-tween the NL syntax and the atomic formulasyntax is utilized.4.
Each phrase in the four groups is decidedwhether it indicates qualification of nounsor of predicates.5.
If there are AND/OR conjunctions in a clauseit is decided whether they are in the scopeof a preposition or not.6.
After all of the words in a clause have beeninterrelated each other, the remainingclauses are processed by repeating 3 to 5.7.
After all of the clauses have been processed,substantiation of each personal and demon-strative pronoun is established.8.
In consequence, the extended formula deducedfrom the input sentence is obtained.To get comprehension of the above description,let us consider the next example:IN HIBIYA-PARK, JOHN MET JACK AND MARY.
(16)This is the case that the sentence comprisesonly one clause.
On this sentence, the basicsentence pattern of "meet", that is, "PERSON1meet PERSON2", is fetched from the atom formatdefinition set.
The atom format definition ofthe preposition, "in" is also fetched; that is,"THING in PLACE".
But this will not be used inthis case.
Then, grouping of words in the sen-tence is made according to the pattern "PERSON1meet PERSON2", resulting ingroup 1 :group 2 :group 3 :group 4 :\[ IN HIBIYA-PARK, JOHN* \]\[ MET \]\[ JACK* AND MARY* \]\[ ?
\] ; an empty groupwhere the words marked with the star symbol *denote the instances of PERSON1 and PERSON2.This can be established by using the skeletonstructure in which JOHN, JACK and MARY are de-fined as elements of PERSON.
In the next place,the phrase "IN HIBIYA-PARK" is decided as indi-cating qualification of the verb "MET".
Theconjunction "AND" is then determined as to be inthe scope of the conjunction of direct objectsof "MET".
As the final result, we obtain thefollowing formula:\[(MEET JOHN JACK (TIME PAST)~(PLACE (INHIBIYA-PARK)))A(MEET JOHN MARY (TIME PAST)A(PLACE (IN HIBIYA-PARK)))\] (17)Let us consider a more complex sentence whichcontains a relative clause and a personal pro-noun in it:JOHN GAVE A RED CAR TO MARY WHO HE LOVES.
(18a)JOHN GAVE A RED CAR TO MARY WHO LOVES HIM.
(18b)In this case, both of the sentence (18a) and(18b) are split into the two clauses respective-ly; among which, each nucleus clause of (18a)and (18b) is the same, that is, "John gave a redcar to Mary"; but the relative clause in (18a)means that "John loves Mary" while that in (18b)means that "Mary loves John".
On the nucleusclause, the basic sentence pattern "PERSON1 gaveTHING to PERSON2" for "give" and "red THING" forthe attributive adjective "red" are fetched fromthe knowledge base.
Then, grouping of words inthe clause is made according to the basic sen-tence pattern, resulting ingroup 1 : \[ JOHN* \]group 2 : \[ GAVE \]group 3 : \[ A RED CAR* \]group 4 : \[ TO MARY* \]In the next place, the pattern "red THING" isapplied to "RED CAR" in the group 3, and inconsequence, the formula (COLOR CAR RED) is de-rived, We translate the indefinite article "a"into the formula (QF CAR A) to denote that "car"is qualified by "a" in the clause.
Thus, allthe semantic relations among words in the nucle-us clause "John gave a red car to Mary" havebeen derived:(GIVE #JOHN #MARY CAR (TIME PAST))A(COLOR CAR RED)A(QF CAR A) (19)The relative clause in (18a), "who he loves",is transformed to (LOVE HE MARY (TIME PRESENT)),and "who loves him" in (18b) is transformed to(LOVE MARY HE (TIME PRESENT)).
This can beattained by making use of the basic sentencepattern, "PERSON1 love PERSON2".
In case of"who he loves", the following four word groupsare initially generated by using this pattern.- - -  (WHO) HE LOVES - - -group 1 : \[ (WHO) HE* \]group 2 : \[ LOVES \]- 394group 3 : \[ # \] ; an empty groupgroup 4 : \[ \] ; not to be usedThen, taking account of the state of the group 1and the group 2, the antecedent of "who" is de-cided to be the direct object of "love".
In thelast place, the personal pronoun "he" is sub-stantiated by"John".
The similar discussioncan be given to the case, "who loves him", andtherefore, it is omitted here.
The final resultsof the analysis of (18a) and (18b) are(GIVE #JOHN #MARY CAR (TIME PAST))A(COLOR CAR RED)^ (QF CAR A)^(LOVE #JOHN #MARY (TIME PRESENT)) (20a)(GIVE #JOHN #MARY CAR (TIME PAST))A (COLOR CAR RED) A (QF CAR A)A(LOVE #MARY #JOHN (TIME PRESENT)) (20b)So far, we have been concerned with declarativesentences.
With regard to interrogative andimperative sentences, we transform them to de-clarative sentences prior to the successiveanalysis of them.
Further, passive sentenceshave not been taken into account of hitherto.The passive voice is especially used in sentencesin which it is unnecessary or undesirable tomention the agent, though the agent may be ex-pressed by means of an adjunct with "by,'.
Theverbal meaning of the passive voice may also bebrought out by adjuncts expressing other adverb-ial relations, such as time, manner, cause orinstrument.
A passive sentence may be analyzedwith adaptation of the special treatment of theverb "be" followed by a past participle.
Forexample,JOHN IS LOVED BY MARY.---> \[JOHN\] IS \[LOVED\] \[BY MARY\].---> MARY LOVES JOHN.---> (LOVE #MARY #JOHN (TIME PRESENT)) (21)THE BOOK IS WRITTEN IN ENGLISH.---> \[THE BOOK\] IS \[WRITTEN\] \[IN ENGLISH\].---> \[$X\] WRITE THE BOOK IN ENGLISH.---> (3x/PS)\[(WRITE x BOOK (MANNER(IN ENGLISH))A(TIME PRESENT))A(QF BOOK THE)\] (22)where the \[ \] is used to denote special atten-tion to readings.
The special treatment of theverb "be" is not only introduced to passive sen-tences but also to the other fragments shown inTable 2.
For example, a sentence pattern withthe formal subject Of "be" is treated asIT IS EASY TO PLEASE JOHN,---> \[TO PLEASE JOHN\] IS \[EASY\].---> (GRADE-DIFFI (TOINF (TO PLEASE #JOHN))EASY) (23)IT IS SNOOPY THAT HAS STOLEN THE FISH.---> \[THAT HAS STOLEN THE FISH\] IS \[SNOOPY\].---> (STRESS-VAL (STEAL #SNOOPY FISH(TIME PRES.PERFECT)) #SNOOPY)A(QF FISH THE) (24)It should be denoted here that both of (23) and(24) have been transformed to a similar form interms of (A 0 V) atoms.Table 2.
Treatment of the Fragment of"X be Y "X be Y Atomic FormulaN be Adj.
(ATTR N Adj.
)N~ be Prep.
N~ (PREP N, N2)N, be ReI.N of N~ (REL.N N~ N,)ReI.N of N, be N~ (REL.N N, N~)N, be N~ (ATTR N, N~)THERE be N, Prep.
N~ (PREP Nf N~)IT be Adj.
TO-INF (ATTR TO-INF Adj.
)IT be Z THAT-CLAUSE (ATTR THAT-CLAUSE Z)N be P.P.
Adjunct (PRED S U V P)note.
N : NounAdj.
: AdjectivePrep.
: PrepositionReI.N : At t r ibut ive nounTO-INF: To- in f in i t iveP.P.
: Past Part ic iple4.2 Logic ProgramBy using a logic programming method, we canclearly show what should be done in the prog-ram depending on an approach taken for the sen-tence analysis, in which modification, updatingand extension can easily be made.
In the pre-vious section, we have shown our approach bywhich a sentence may be analyzed rather intui-tively and straightforwardly in the frameworkof KAUS.
According to this method, we present,in this section, a part of the program by whichan input clause is analyzed yielding an extendedformula in KAUS.
The execution of the programis undertaken by the deductive retrieval processwith use of the merits of our knowledge repre-sentation.
In the following representation ofthe program, we made convention that the topformula is concluded if all of the successiveformulas indented are evaluated (proofed).Program(LOGICAL-FORM EF S)'(GET-VINF VP MVERB ; S)'(GET-DON SDOM XDOM YDOM ; VP S)'(CREATE-GROUP SGP VGP XGP YGP ;SDOM VP XDOM YDOM S)(ARGUMENT SUBJ SDOM SGP)(ARGUMENT XOBJ XDOM XGP)(ARGUMENT YOBJ YDOM YGP)(NOD-ATOM SHOD SUBJ SGP)(NOD-ATOM XMOD XOBJ XGP)(NOD-ATOM YMOD YOBJ YGP)(VMOD-ATOM VMOD VGP SGP XGP YGP)(KERNEL-S KS VP MVERB SUBJ XOBJ YOBJ VMOD)'(CNCT-LOGICAL EF ; KS SHOD XMOD YMOD)'(ALL-MARKED ; S)395-(ARGUMENT EARG EDOM EGP)'(MARK EGP ; EDOM EGP)'(UNMARK-PREP-OBJ EGP ; EGP)'(MAKE-SET EARG ; EGP)(ARGUMENT EARG EDOM empty)'(SEARCH REL ; INPUT)'(NON-EQ REL WHERE)'(ANTEC X ; REL INPUT)'(PRE-W Z ; REL)'(SYN-CAT K ; Z)'(NON-ELM K PREP)'(PUT-ELM EARG ; X)(NOD-ATOM EMOD EARG EGP)'(DET-MOD DET ; EARG EGP)'(ADJ-MOD ADJ ; EARG EGP)'(NPREP-MOD NPREP ; EARG EGP)'(MAKE-EF EMOD ; DET ADJ NPREP)(VMOD-ATOM VMOD VGP SGP XGP YGP)(TENSE-NOD TENSE ; VGP)(AUX-MOD AUX ; VGP)(VPREP-MOD VPREP ; VGP SGP XGP YGP)(ADV-MOD ADV ; VGP SGP XGP YGP)(TO-INF-MOD INF VGP SGP XGP YGP)(MAKE-EF VMOD ; TENSE AUX VPREP ADV INF)_ _ =*********************************************GP DON/ \ J  EDOM VGP EGP VP / i \SDM~XDOM YDOM SGP XGP YGPARG" ARG MVERBI su J XO " OBJVMD~ EMOD J lSMOD XM~D~YMOD*********************************************IN HIBIYA-PARK, JOHN MET JACK AND MARY.VGP = \[MET\]SGP = \[IN HIBIYA-PARK, JOHN\]XGP = \[JACK AND MARY\]YGP = \[@\]  ; not usedVP = \[VPI\] cf.
VPI: Verb ?
Direct ObjectSDOM = \[PERSON\]XDOM = \[PERSON\]YDOM = not usedMVERB = \[MEET\]SUBJ = \[JOHN\]XOBJ = \[JACK, MARY\]YOBJ = not usedEF = \[(MEET #JOHN #JACK (TIME PAST)A(PLACE (IN HIBIYA-PARK)))A (MEET #JOHN #MARY .
.
.
.
.
.
.  )
) ) \ ]Figure 4.
A Sample Process by the ProgramThe first program denotes that an input clause Sis translated into an extended formula EP byevaluating the successive thirteen indented for-mulas, of which the ARGUMENT formulas are inturn to be replaced with the premises of thesecond or the third ARGUMENT program, or theother ARGUMENT programs that are not exhibitedhere, by the deductive inference rule.
Then,these premises are in turn to be evaluated.
Thethird ARGUMENT program exhibited above is con-cerned with a relative clause except where- andprep.-relative-noun clauses.
The other NTAs inthe first program may be evaluated in the simi-lar way.
The figure 4 shows a sample process ofthe program, where the main terms used in theprogram are also shown by categorizing themhierarchically in the skeleton structure.ConclusionWe have described the syntax and semantics anal-yses of natural language (English) within theframework of the intelligent man-machine systemKAUS.
The more the volume of data related tothe sentence analysis is enlarged in the knowl-edge base and the sentence analysis program it-self is extended, the more the class of accept-able sentences will be broadened.
This may beensured by the method described hitherto.AcknowledgementThe author is indebted to associate professorSetsuo Ohsuga of University of Tokyo, who gavethe author helpful suggestions in the presenta-tion.REFERENCE\[i\].
Bertram Bruce, Case Systems for NaturalLanguage, Artificial Intelligence 6, 1975.\[2\].
C.L.
Chang & R.C.To Lee, Symbolic Logicand Mechanical Theorem Proving, AcademicPress, 1973.\[3\].
Hendrix G.G.
et al, Developing a NaturalLanguage Interface to Complex Data, Proc.3rd VLDB, Part II, pp.37-58, 1977.\[4\].
Herve Gallaire & Jack Minker (edited),Logic and Databases, Plenum Press, NewYork, 1978.\[5\].
Robert F. Simmons, Some Relations betweenPredicate Calculus and Semantic Net Repre-sentations of Discourse, 2nd IJCAI, 1971.\[6\].
S. Ohsuga, Semantic Information Processingin Man-Machine Systems, Proc.
IEEE, 1977.\[7\].
S. Ohsuga, Toward Intelligent InteractiveSystems, Proc.
The IFIP W.G.
5.2 WorkshopSeilac II on Methodology of Interaction,North Holand, 1979.-396- -
