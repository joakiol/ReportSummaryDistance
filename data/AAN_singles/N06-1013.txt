Proceedings of the Human Language Technology Conference of the North American Chapter of the ACL, pages 96?103,New York, June 2006. c?2006 Association for Computational LinguisticsA Maximum Entropy Approach to Combining Word AlignmentsNecip Fazil Ayan and Bonnie J. DorrInstitute of Advanced Computer Studies (UMIACS)University of MarylandCollege Park, MD 20742{nfa,bonnie}@umiacs.umd.eduAbstractThis paper presents a new approach tocombining outputs of existing word align-ment systems.
Each alignment link is rep-resented with a set of feature functionsextracted from linguistic features and in-put alignments.
These features are usedas the basis of alignment decisions madeby a maximum entropy approach.
Thelearning method has been evaluated onthree language pairs, yielding significantimprovements over input alignments andthree heuristic combination methods.
Theimpact of word alignment on MT qualityis investigated, using a phrase-based MTsystem.1 IntroductionWord alignment?detection of corresponding wordsbetween two sentences that are translations of eachother?is usually an intermediate step of statisti-cal machine translation (MT) (Brown et al, 1993;Och and Ney, 2003; Koehn et al, 2003), but alsohas been shown useful for other applications suchas construction of bilingual lexicons, word-sensedisambiguation, projection of resources, and cross-language information retrieval.Maximum entropy (ME) models have been usedin bilingual sense disambiguation, word reordering,and sentence segmentation (Berger et al, 1996),parsing, POS tagging and PP attachment (Ratna-parkhi, 1998), machine translation (Och and Ney,2002), and FrameNet classification (Fleischman etal., 2003).
They have also been used to solve theword alignment problem (Garcia-Varea et al, 2002;Ittycheriah and Roukos, 2005; Liu et al, 2005), buta sentence-level approach to combining knowledgesources is used rather than a word-level approach.This paper describes an approach to combin-ing evidence from alignments generated by exist-ing systems to obtain an alignment that is closerto the true alignment than the individual align-ments.
The alignment-combination approach (calledACME) operates at the level of alignment links,rather than at the sentence level (as in previous MEapproaches).
ACME uses ME to decide whetherto include/exclude a particular alignment link basedon feature functions that are extracted from the in-put alignments and linguistic features of the words.Since alignment combination relies on evidencefrom existing alignments, we focus on alignmentlinks that exist in at least one input alignment.
Animportant challenge in this approach is the selectionof appropriate links when two aligners make differ-ent alignment choices.We show that ACME yields a significant relativeerror reduction over the input alignment systems andheuristic-based combinations on three different lan-guage pairs.
Using a higher number of input align-ments and partitioning the training data into disjointsubsets yield further error-rate reductions.The next section briefly overviews ME models.Section 3 presents a new ME approach to combin-ing existing word alignment systems.
Section 4 de-scribes the evaluation data, input alignments, andevaluation metrics.
Section 5 presents experimentson three language pairs, upper bounds for alignmenterror rate in alignment combination, and MT evalu-ation on English-Chinese and English-Arabic.
Sec-tion 6 describes previous work on alignment combi-nation and ME models on word alignment.2 Maximum Entropy (ME) ModelsIn a statistical classification problem, the goal is toestimate the probability of a class y in a given con-text x, i.e., p(y|x).
In an ideal scenario, if the train-ing data contain evidence for all pairs of (y, x), it is96trivial to compute the probability distribution p. Un-fortunately, due to training-data sparsity, p is gener-ally modeled using only the available evidence.Given a collection of facts, ME chooses a modelconsistent with all the facts, but otherwise as uni-form as possible (Berger et al, 1996).
Formally, theevidence is represented as feature functions, i.e., bi-nary valued functions that map a class y and a con-text x to either 0 or 1, i.e., hm : Y ?
X ?
{0, 1},where Y is the set of all classes and X is the set of allfacts.
The biggest advantage of maximum entropymodels is that they are able to focus on the selectionof feature functions rather than on how such func-tions are used.
Any context can be used to definefeature functions without concern for the indepen-dence of the feature functions from each other or therelevance of the feature functions to the final deci-sion (Ratnaparkhi, 1998).Each feature function hm is associated with amodel parameter ?m.
Given a set of M feature func-tions h1, .
.
.
, hM , the probability of class y given acontext x is equal to:p(y|x) = 1Zx exp( M?m=1?mhm(y, x))where Zx is a normalization constant.
The contri-bution of each feature function to the final decision,i.e., ?m, can be automatically computed using Gen-eralized Iterative Scaling (GIS) algorithm (Darrochand Ratcliff, 1972).
The final classification for agiven instance is the class y that maximizes p(y|x).3 Alignment Combination: ACMELet e = e1, .
.
.
, eI and f = f1, .
.
.
, fJ be twosentences in two different languages.
An align-ment link (i, j) corresponds to a translational equiv-alence between words ei and fj .
Let Ak be analignment between sentences e and f , where eachelement a ?
Ak is an alignment link (i, j).
LetA = {A1, .
.
.
, An} be a set of alignments betweene and f .
We refer to the true alignment as T , whereeach a ?
T is of the form (i, j).
The goal ofACME is to combine the information in A suchthat the combined alignment AC is closer to T .
Astraightforward solution is to take the intersection orunion of the individual alignments.
In this paper, anadditional model is learned to combine outputs ofA1, .
.
.
, An.In our combination framework, first, n differ-ent word-alignment systems, A1, .
.
.
, An, generateword alignments between a given English sentenceand a foreign-language (FL) sentence.
Then a Fea-ture Extractor takes the output of these alignmentsystems and the parallel corpus (which might be en-riched with linguistic features) and extracts a set offeature functions based on linguistic properties ofthe words and the input alignments.
Each featurefunction hm is associated with a model parameter?m.
Next, an Alignment Combiner decides whetherto include or exclude an alignment link based on theextracted feature functions and the model parame-ters associated with them.For each possible alignment link a set of featuresis extracted from the input alignments and linguisticproperties of words.
The features that are used forrepresenting an alignment link (i, j) are as follows:1.
Part-of-speech tags (posE, posF, prevposE,prevposF, nextpostE, nextposF): POS tags forthe previous, current, and the next English andFL words.2.
Outputs of input aligners (out): Whether(i, j) exists in a given input alignment Ak.3.
Neighbors (neigh): A neighborhood of analignment link (i, j)?denoted by N(i, j)?consists of 8 possible alignment links in a 3?3window with (i, j) in the center of the window.Each element of N(i, j) is called a neighbor-ing link of (i, j).
Neighbor features include:(1) Whether a particular neighbor of (i, j) ex-ists in a given input alignment Ak; and (2) To-tal number of neighbors of (i, j) in a given in-put alignment Ak.4.
Fertilities (fertE, fertF): The number ofwords that ei (or fj) is aligned to in a giveninput alignment Ak.5.
Monotonicity (mon): The absolute differencebetween i and j.Our combination approach employs feature func-tions derived from a subset of the features above.Assuming Y = {yes, no} represents the set ofclasses, where each class denotes the existence orabsence of a link in the combined alignment, andX is the set of features above, we generate variousfeature functions h(y, x), where y ?
Y and x areinstantiations of one or more features in X .
Table 1lists the feature sets with an example feature func-97Features Example Feature FunctionposE h(?yes?, i, j) = 1 if (i, j) ?
AC and pos(ei) = NounposF h(?no?, i, j) = 1 if (i, j) /?
AC and pos(fj) = V erbout h(?yes?, i, j, k) = 1 if (i, j) ?
AC and (i, j) ?
Akout, neigh h(?yes?, i, j, k) = 1 if (i, j) ?
AC and (i?
1, j + 1) ?
Akh(?yes?, i, j, k) = 1 if (i, j) ?
AC and |NC| = 2 where NC = {n|n ?
N(i, j), n ?
Ak}out, fertE h(?no?, i, j, k) = 1 if (i, j) /?
AC and |FT | = 0 where FT = {t|(i, t) ?
Ak}out, fertF h(?no?, i, j, k) = 1 if (i, j) /?
AC and |FT | = 1 where FT = {t|(t, j) ?
Ak}mon h(?yes?, i, j) = 1 if (i, j) ?
AC and |i?
j| = 2Table 1: Feature Functions.tion for each.1 For example, the feature function inthe fifth row has a value of 1 if there are 2 neighbor-ing links to (i, j) that exist in the input alignment Akand the alignment link (i, j) exists in AC .In combining evidence from different alignments,it is assumed that, when an alignment link is leftout by all aligners, that particular link should notbe included in the final output.
Since the majorityof all possible word pairs are unaligned in real data,the inclusion of all possible word pairs in the train-ing data leads to skewed results, where the learningalgorithm is biased toward labeling the links as in-valid.
To offset this problem, our training data in-cludes only alignment links that appear in at leastone input alignment.Once the feature functions are extracted, we learnthe model parameters using the YASMET ME pack-age (Och, 2002), which is an efficient implementa-tion of the GIS algorithm.4 Experiment Data, Alignment Inputs, andMetricsThe alignment combination techniques are evaluatedin this paper using data from three language pairs, asshown in Table 2.Lang # of # Words SourcePair Sent?s (en/fl)en-ch 491 13K/13K NIST MTEval ?022en-ar 450 11K/13K NIST MTEval ?033en-ro 248 5.5K/5.5K HLT Workshop ?034Table 2: Data Used for Combination Experiments.Input alignments are generated using two exist-ing word alignment systems: GIZA++ (Och, 2000)1In Table 1, NC corresponds to the set of (i, j)?s neighborsthat exist in the alignment Ak, and FT represents the set ofwords that ei (or fj) is aligned to.2From (Ayan et al, 2005).3From (Ittycheriah and Roukos, 2005).4From (Mihalcea and Pedersen, 2003).and SAHMM (Lopez and Resnik, 2005).
Both sys-tems are run in two different directions with defaultconfigurations.
We indicate the two directions usingthe notation Aligner(en ?
fl) and Aligner(fl ?en), where en is English, fl is either Chinese (ch),Arabic (ar), or Romanian (ro).To train both systems, additional data was usedfor the three language pairs: 107K English-Chinesesentence pairs (4.1M/3.3M English/Chinese words);44K English-Arabic sentence pairs (1.4M/1M En-glish/Arabic words); 48K English-Romanian sen-tence pairs (1M/1M English/Romanian words).5POS tags were generated using the MXPOST tag-ger (Ratnaparkhi, 1998).
POS tagger for Englishwas trained on Sections 0-18 of the Penn TreebankWall Street Journal corpus.
On the FL side, we usedPOS tagger for only Chinese and it was trained onSections 16-299 of Chinese Treebank.For comparison purposes, three additionalheuristically-induced alignments are generatedfor each system: (1) Intersection of both direc-tions (Aligner(int)); (2) Union of both directions(Aligner(union)); and (3) The previously best-known heuristic combination approach called grow-diag-final (Koehn et al, 2003) (Aligner(gdf)).In our evaluation, we take A to be the set of align-ment links for a set of sentences, S to be the setof sure alignment links, and P be the set of proba-ble alignment links (in the gold standard).
Precision(Pr), recall (Rc) and alignment error rate (AER)are defined as follows:6Pr = |A ?
P ||A| Rc =|A ?
S||S|AER = 1?
|A ?
S| + |A ?
P ||A| + |S|5Note that both GIZA++ and SAHMM are unsupervisedlearning systems.
Sentence-aligned parallel texts are the onlyrequired input.6Note that AER= 1 - F-score when there is no distinctionbetween probable and sure alignment links.98Our gold standard for each language pair is amanually aligned corpus.
English-Chinese annota-tions distinguish between sure and probable align-ment links (i.e., S ?
P ), but there is no such distinc-tion for the other two language pairs (i.e., P = S).Because of the availability of limited manuallyannotated data, evaluations are performed using 5-fold cross validation.
Once the alignments are gen-erated for each fold (using one as the test set and theother 4 folds as training set), the results are concate-nated to compute precision, recall and error rate onthe entire set of sentence pairs for each data set.75 Experiments and ResultsThis section presents several experiments and re-sults comparing AER of ACME to those of standardalignment approaches on English-Chinese data.
Wealso present experiments on additional languages,analyses based on precision and recall, an upper-bound oracle analysis, and MT evaluations.5.1 English-Chinese ExperimentsThe experiments below test the effects of inputalignments, feature set, data partitioning, number ofinputs, and size of training data on the performanceof ACME.2 Input alignments: Table 3 shows the AER forGIZA++ and SAHMM (in each direction), threeheuristic-based combinations and ACME using 2uni-directional alignments as input and all featuresdescribed in Section 3.8 (We use ?ACME[2]?
inthis section to refer to ACME applied to two inputalignments and ACME[4] in later sections to referto ACME applied to four input alignments.
)Using 2 GIZA++ uni-directional alignments as in-put, ACME yields a 22.0% AER?a relative error re-duction of 25.9% over GIZA++(gdf).
Similarly, us-ing 2 SAHMM uni-directional alignments as input,ACME produces a 20.6% AER?a relative error re-duction of 28.0% and 25.4% over SAHMM(gdf) andSAHMM(int), respectively.7Because the NIST MTEval data include sentences that maybe related (according to the document in which they appear), thetraining and test material could potentially be related; however,given the types of features used in our experiments, we do notbelieve this biases our results.8For ease of readability, in the rest of this paper, we willreport precision, recall, and AER in percentages.Alignments GIZA++ SAHMMAligner(en ?
fl) 30.7 26.5Aligner(fl ?
en) 32.2 31.3Aligner(int) 31.2 27.6Aligner(union) 31.6 29.8Aligner(gdf) 29.7 28.6ACME[2] 22.0 20.6Table 3: Comparison of GIZA++ and SAHMM toACME[2] (on English-Chinese).Feature Set: To examine the effects of each fea-ture on the performance of ACME, we compute theAER under a variety of conditions, removing eachfeature one at a time.
ACME is evaluated using2 uni-directional GIZA++ alignments as input onEnglish-Chinese data.
Using all features, the AERis 22.0%.
Our experiments show that there is no sig-nificant increase in AER for the removal of featurescorresponding to monotonicity (22.1%), neighbors(22.8%), POS on English side (22.9%), POS onforeign-language side (22.9%).
On the other hand,deleting POS tags on both sides yields an AER of25.2% and deleting the fertility features increasesthe AER to 25.9%.
This indicates that both POStags (or fertilities) contribute heavily toward the de-cision as to whether a particular alignment should beincluded/excluded.Partitioning Data: Previous work showed thatpartitioning the data into disjoint subsets and learn-ing a different model for each partition improvesthe performance of the alignment systems (Ayan etal., 2005).
To test whether this same principle ap-plies to alignment combination with maximum en-tropy modeling, the training data was partitioned us-ing POS tags for English and the FL, and differentweights were learned for each partition.Alignments GIZA++ SAHMMACME[2] 22.0 20.6ACME[2]-Part[posE] 19.8 18.0ACME[2]-Part[posF ] 20.0 18.1ACME[2]-Part[posE, posF ] 20.0 18.4Table 4: Application of ACME[2] on PartitionedData (on English-Chinese).Table 4 presents the AER for ACME[2], using ei-ther two GIZA++ alignments or two SAHMM align-ments, on English-Chinese data.
Without any parti-tioning, ACME achieves an AER of 22.0 (GIZA++)and 20.6 (SAHMM).
Using English POS tags fordata partitioning results in a significant reduction99in AER: 19.8% (GIZA++) and 18.0% (SAHMM).Interestingly, using foreign-language (FL) tags ontheir own or together with English POS tags does notprovide any improvement.
Overall when ACME[2]is applied to partitioned data (using posE for parti-tioning) a relative error reduction of 33?37% overGIZA++(gdf) and SAHMM(gdf) is achieved.Number of Input Alignments: Table 5 presentsthe English-Chinese AER for ACME[1] (using ei-ther GIZA++ or SAHMM in only one direction),ACME[2] (using either GIZA++ or SAHMM intwo directions) and ACME[4] (using GIZA++ andSAHMM, each in two directions).Regardless of the number of inputs, partitioningthe data (using English POS tags) yields lower AERthan no partitioning.
Using one GIZA++ alignmentas input, ACME[1] with partitioning improves theAER to 26.9% and 25.5% for each direction, respec-tively.
Similarly, using one SAHMM alignment asinput, ACME[1] with partitioning reduces the AERto 22.9% and 24.7%.
ACME[2] with partitioningreduces the AER to 19.8% and 18.0% for GIZA++and SAHMM, respectively.
Finally, using all fourinput alignments, ACME[4] with partitioning yieldsa 15.6% AER?a relative error reduction of 21.2%and 13.3% over each ACME[2] case.Alignments GIZA++ SAHMMACME[1](en ?
fl) 28.1 24.4ACME[1]-Part[posE](en ?
fl) 26.9 22.9ACME[1](fl ?
en) 26.6 26.9ACME[1]-Part[posE](fl ?
en) 25.5 24.7ACME[2] 22.0 20.6ACME[2]-Part[posE] 19.8 18.0ACME[4] 17.8ACME[4]-Part[posE] 15.6Table 5: Application of ACME to 1, 2 and 4 InputAlignments (on English-Chinese).Size of Training Data to Obtain Input Align-ments: In general, statistical alignment systemsimprove as the size of the training data increases.We present the AER for GIZA++ and ACME[2] us-ing GIZA++ alignments as input, where GIZA++ istrained on different sizes of data.
We started with20K sentence pairs of FBIS data and increased it toall available FBIS data (241K sentence pairs).Figure 1 compares the alignment performanceof: (1) uni-directional GIZA++ (each direction);(2) GIZA++(gdf); and (3) ACME[2] with all fea-Figure 1: Effects of Training Data Size Used for Ini-tial Alignments on the performance of GIZA++ andACME[2] (on English-Chinese).tures and English POS partitioning.
With only20K sentence pairs, ACME[2] achieves an AER of23.7% in contrast to 34.3% AER for GIZA++(gdf).With 241K sentence pairs, ACME[2] yields 18.3%AER in contrast to 27.7% AER for GIZA++(gdf).We should emphasize that ACME[2] on only 20Ksentence pairs yields a lower AER than those ofall GIZA++ alignments obtained on 241K sen-tence pairs.
Overall ACME[2] achieves a relativeerror reduction of 31?38% over the input align-ments, and a relative error reduction of 31?34% overGIZA++(gdf) for different sizes of training data.5.2 Expanding to Additional LanguagesWe also investigated the applicability of ACME toadditional language pairs.
Table 6 presents theAER for GIZA++ and SAHMM (in each direction),three combination heuristics (gdf, int and union),and ACME[2] and ACME[4] on English-Arabic andEnglish-Romanian data.
We should emphasize thatno POS tagger on the FL side was used for theseexperiments.On English-Arabic data, ACME[2] (with POSpartitioning and including all features) yields 21.4%(20.7%) AER?a relative error reduction of 24.6%(13.0%) over the best combination heuristic withGIZA++ (SAHMM) alignments.
ACME[4] re-duces the AER to 18.1%?a relative error reduc-tion of 36.3% and 23.9% over GIZA++(int) andSAHMM(int), respectively.On English-Romanian data, ACME[2] (with POSpartitioning and including all features) yields 24.7%(26.2%) AER?a relative error reduction of 14.3%(10.6%) over the best combination heuristic withGIZA++ (SAHMM) alignments.
ACME[4] re-100English-Arabic English-RomanianAlignments GIZA++ SAHMM GIZA++ SAHMMAligner(en ?
fl) 34.5 27.8 32.7 31.0Aligner(fl ?
en) 27.9 29.5 30.0 29.8Aligner(int) 28.4 23.8 32.7 29.3Aligner(union) 32.8 32.0 30.5 31.2Aligner(gdf) 30.2 30.4 28.8 30.3ACME[2] 23.2 21.9 25.2 27.0ACME[2]-Part[posE] 21.4 20.7 24.7 26.2ACME[4] 19.8 24.0ACME[4]-Part[posE] 18.1 22.3Table 6: AER for Input Alignments, Heuristic-based Alignments, and ACME Using 2 and 4 Input Align-ments (on English-Arabic and English-Romanian).duces the AER to 22.3%?a relative error reduc-tion of 22.6% and 23.9% over GIZA++(int) andSAHMM(int), respectively.5.3 Precision, Recall and Upper-BoundAnalysisWe now turn to a precision vs. recall analysis of dif-ferent alignments to elucidate the nature of the dif-ferences between two alignments.Figure 2 presents precision and recall valuesfor three combined alignments using GIZA++ (int,union, gdf) as well as results for ACME[2] andACME[4] on three different language pairs.
Forall three pairs, the ranking of the combined align-ments is the same with respect to precision andrecall.
GIZA++(int) yields the highest precision(nearly 95%) but the lowest recall (53?57%).
Bothunion and gdf methods achieve low precision (56?68%) but high recall (75?83%), and gdf is betterthan union.
By contrast, ACME[2] yields signifi-cantly higher precision (nearly 87%) but lower recall(67?75%) with respect to union and gdf.
ACME[4]has higher precision and recall than ACME[2]?anabsolute increase of 2?3% and 4%, respectively.Next we compute an oracle upper-bound in AERwhere mismatched input alignments are assumed tobe resolved perfectly within the alignment combina-tion framework (i.e., an oracle chooses the correctoutput in cases where the input aligners make differ-ent choices).9Table 7 presents the upper bounds using a genericalignment combiner (denoted Oracle) with 2 and 4input alignments on three language pairs, assuminga perfect resolution of mismatched input alignments.For English-Chinese, the upper bound is 9.4% (us-9If the input aligners agree on a particular link, that decisionis taken as the final output in computing the upper bound.Alignments GIZA++ SAHMMOracle[2] (en-ch) 9.4 8.4Oracle[4] (en-ch) 4.7Oracle[2] (en-ar) 9.8 11.1Oracle[4] (en-ar) 5.5Oracle[2] (en-ro) 15.4 17.7Oracle[4] (en-ro) 11.3Table 7: Oracle Upper Bounds on AER for Align-ment Combinationing Oracle[2]) and 4.7% (using Oracle[4]).
TheEnglish-Arabic data exhibits a slightly higher upperbound of 5.5% for Oracle[4].
The upper bounds forAER on English-Romanian data are even higher (upto 17.7%), which indicates that the input alignmentsare significantly worse than others.
This may beone of the main contributing factors to the lower im-provement of ACME on English-Romanian in com-parison to the other two language pairs.5.4 MT EvaluationTo determine the contribution of improved align-ment in an external application, we examined theimprovement in an off-the-shelf phrase-based MTsystem Pharaoh (Koehn, 2004) on both Chinese andArabic data.
In these experiments, all componentsof the MT system were kept the same except forthe component that generates a phrase table from agiven alignment.The input alignments were generated usingGIZA++ and SAHMM on 107K (44K) sentencepairs for Chinese (Arabic).
ACME (with EnglishPOS partitioning) combines alignments using modelparameters learned from the corresponding manu-ally aligned data.
MT output is evaluated using thestandard MT evaluation metric BLEU (Papineni etal., 2002).10 Table 8 presents the BLEU scores on10We used the NIST script (version 11a) with its default set-101Figure 2: Precision and Recall Scores for GIZA++ and ACME Using 2 and 4 Input Alignments.MTEval?03 data for 5 different Pharaoh runs, one foreach alignment.
The parameters of the MT systemwere optimized on MTEval?02 data using minimumerror rate training (Och, 2003).For the language model, the SRI Language Mod-eling Toolkit was used to train a trigram model withmodified Kneser-Ney smoothing on 155M words ofEnglish newswire text, mostly from the Xinhua por-tion of the Gigaword corpus.
During decoding, thenumber of English phrases per FL phrase was lim-ited to 100 and the distortion of phrases was lim-ited by 4.
Based on the observations in (Koehn etal., 2003), we also limited the phrase length to 3 forcomputational reasons.Alignment Chinese ArabicGIZA++(union) 22.66 41.72GIZA++(gdf) 23.79 43.82GIZA++(int) 23.97 42.76ACME[2] 25.20 44.94ACME[4] 25.59 45.54Table 8: Evaluation of Pharaoh with Different InitialAlignments using BLEU (in percentages)For both languages, ACME[2] and ACME[4]outperform the other three alignment combinationtechniques.
ACME[4], for instance, yields theBLEU scores of 25.59% for Chinese and 45.54% forArabic?an absolute 1.6-1.7% BLEU point increaseover the best of the other three alignment combina-tions.
The differences between the BLEU scores forACME and the other three BLEU scores are statisti-cally significant, using a significance test with boot-strap resampling (Zhang et al, 2004).6 Related WorkME models have been previously applied to severalNLP problems, including word alignments.
For in-tings: case-insensitive matching of n-grams up to n = 4, andthe shortest reference sentence for the brevity penalty.stance, the IBM models (Brown et al, 1993) can beimproved by adding more context dependencies intothe translation model using a ME framework ratherthan using only p(fj |ei) (Garcia-Varea et al, 2002).In a later study, Och and Ney (2003) present a log-linear combination of the HMM and IBM Model 4that produces better alignments than either of those.The major advantage of these two methods is thatthey do not require manually annotated data.The alignment process can be modeled as a prod-uct of a transition model and an observation model,where ME models the observations (Ittycheriah andRoukos, 2005).
Significant improvements are re-ported using this approach but the need for largemanually aligned data is a bottleneck.
An alterna-tive ME approach models alignment directly as alog-linear combination of feature functions (Liu etal., 2005).
Moore (2005) and Taskar et al (2005)represent alignments with several feature functionsthat are then combined in a weighted sum to modelword alignments.
Once a confidence score is as-signed to all links, a non-trivial search is invoked tofind the best alignment using the scores associatedwith the links.
The major difference between theseapproaches and that of ACME is that we use the MEmodel to predict the correct class for each align-ment link independently using outputs of existingalignment systems, instead of generating them fromscratch at the level of the whole sentence, thus elim-inating the need for an exhaustive search over allpossible alignments, i.e., previous approaches workglobally while ACME is a localized model.
A dis-cussion of these two contrasting approaches can befound in (Tillmann and Zhang, 2005).A recent attempt to combine outputs of differ-ent alignments views the combination problem as aclassifier ensemble in the neural network framework102(Ayan et al, 2005).
However, this method is subjectto the unpredictability of random network initializa-tion, whereas ACME is guaranteed to find the modelthat maximizes the likelihood of training data.7 ConclusionsWe presented a new approach, ACME, to combin-ing the outputs of different word alignment systemsby reducing the combination problem to the levelof alignment links and using a maximum entropymodel to learn whether a particular alignment linkis included in the final alignment.Our results indicate that ACME yields significantrelative error reduction over the input alignmentsand their heuristic-based combinations on three dif-ferent language pairs.
Moreover, ACME providessimilar relative improvements for different sizes oftraining data for the input alignment systems.
Wehave also shown that using a higher number of inputalignments, and partitioning the training data intodisjoint subsets and learning a different model foreach partition yield further improvements.We have tested impact of the reduced AER onMT and have shown that alignments generated byACME yield statistically significant improvementsin BLEU scores in two different languages, evenif we don?t employ a POS tagger on the FL side.However, additional studies are needed to investi-gate why huge improvements in AER result in rela-tively smaller improvements in BLEU scores.Because ACME is a supervised learning ap-proach, it requires annotated data; however, our ex-periments have shown that significant improvementscan be obtained using a small set of annotated data.Acknowledgments This work has been supported, inpart, under ONR MURI Contract FCPO.810548265 and theGALE program of the Defense Advanced Research ProjectsAgency, Contracts No.
HR0011-06-2-0001.
We also thankanonymous reviewers for their helpful comments.ReferencesNecip F. Ayan, Bonnie J. Dorr, and Christof Monz.
2005.
Neu-ralign: Combining word alignments using neural networks.In Proceedings of EMNLP?2005, pages 65?72.Adam L. Berger, Stephan A. Della-Pietra, and Vincent J. Della-Pietra.
1996.
A maximum entropy approach to natural lan-guage processing.
Computational Linguistics, 22(1).Peter F. Brown, Stephan A. Della Pietra, and Robert L. Mer-cer.
1993.
The mathematics of statistical machine trans-lation: Parameter estimation.
Computational Linguistics,19(2):263?311.J.
N. Darroch and D. Ratcliff.
1972.
Generalized iterative scal-ing for log-linear models.
Annals of Mathematical Statistics,43:1470?1480.Michael Fleischman, Namhee Kwon, and Eduard Hovy.
2003.Maximum entropy models for framenet classification.
InProceedings of EMNLP?2003.Ismael Garcia-Varea, Franz Josef Och, Hermann Ney, and Fran-cisco Casacuberta.
2002.
Improving alignment quality instatistical machine translation using context-dependent max-imum entropy models.
In Proceedings of COLING?2002.Abraham Ittycheriah and Salim Roukos.
2005.
A maximumentropy word aligner for arabic-english machine translation.In Proceedings of EMNLP?2005.Philipp Koehn, Franz J. Och, and Daniel Marcu.
2003.
Sta-tistical phrase-based translation.
In Proceedings of HLT-NAACL?2003.Philipp Koehn.
2004.
Pharaoh: A beam search decoder forphrase-based statistical machine translation.
In Proceedingsof AMTA?2004.Yang Liu, Qun Liu, and Shouxun Lin.
2005.
Log-linear modelsfor word alignment.
In Proceedings of ACL?2005.Adam Lopez and Philip Resnik.
2005.
Improved HMM align-ment models for languages with scarce resources.
In Pro-ceedings of the ACL?2005 Workshop on Building and UsingParallel Texts: Data Driven Machine Translation and Be-yond, pages 83?86.Rada Mihalcea and Ted Pedersen.
2003.
An evaluation ex-ercise for word alignment.
In Proceedings of the HLT-NAACL?2003 Workshop: Building and Using Parallel Texts:Data Driven Machine Translation and Beyond, pages 1?10.Robert C. Moore.
2005.
A discriminative framework for bilin-gual word alignment.
In Proceedings of EMNLP?2005.Franz J. Och and Hermann Ney.
2002.
Discriminative trainingand maximum entropy models for statistical machine trans-lation.
In Proceedings of ACL?2002, pages 295?302.Franz J. Och and Hermann Ney.
2003.
A systematic compari-son of various statistical alignment models.
ComputationalLinguistics, 29(1):9?51, March.Franz J. Och.
2000.
GIZA++: Training of statistical transla-tion models.
Technical report, RWTH Aachen, Universityof Technology.Franz J. Och.
2002.
Yet another maxent toolkit: YASMET.Available at http://www.fjoch.com/YASMET.html.Franz J. Och.
2003.
Minimum error rate training in statisti-cal machine translation.
In Proceedings of ACL?2003, pages160?167.Kishore Papineni, Salim Roukos, Todd Ward, and Wei-JingZhu.
2002.
BLEU: A method for automatic evaluation ofmachine translation.
In Proceedings of ACL?2002, pages311?318.Adwait Ratnaparkhi.
1998.
Maximum Entropy Models for Nat-ural Language Ambiguity Resolution.
Ph.D. thesis, Univer-sity of Pennsylvania, Philadelphia, PA.Ben Taskar, Simon Lacoste-Julien, and Dan Klein.
2005.
Adiscriminative matching approach to word alignment.
InProceedings of EMNLP?2005.Christoph Tillmann and Tong Zhang.
2005.
A localized predic-tion model for statistical machine translation.
In Proceed-ings of ACL?2005.Ying Zhang, Stephan Vogel, and Alex Waibel.
2004.
Inter-preting BLEU/NIST scores: How much improvement do weneed to have a better system?
In Proceedings of LREC?2004,pages 2051?2054.103
