I \\ -I Complements and Adjuncts in Dependency Grammar~arsing Emulated by aConstrained Context-Free Gramn~arTom B.Y.
LaiDept.
of Chinese, Translation andLinguisticsCity University ofHong KongTat Chee Avenue, KowloonHong KongDept.
of Computer Science andTechnologyTsinghua University, Beijingcttomlai@cityu.edu.hkChanguing HuangDept.
of Computer Science and TechnologyTsinghua University, BeijingBeijing 100084Chinahcn@mail.tsinghua.edu.cnAbst ractGeneralizing from efforts parsing naturallanguage sentences using the grammarformalism, Dependency Grammar (DG) hasbeen emulated by a context-free grammar (CFG)constrained by grammatical function annotation.Single-headedness andprojectivity are assumed.This approach as the benefit of making eneralconstraint-based context-free grammar parsingfacilities available to DG analysis.
This paperdescribes an experimental implementation fthis approach using unification to realizegrammatical function constraints imposed on adependency structure backbone mulated by acontext-flee grammar.
Treating complements ofa head word using subcategoHzation listsresiding in the head word makes it possible tokeep phrase-structure-rule-like m chanisms tothe minimum.
Adjuncts are treated with asyntactic mechanism that does not reside in thelexicon in this generally lexical approach togrammar.In t roduct ionThe mathematical properties of DependencyGrammar (Tesniere (1959)) are studied byGaifman (1965) and Hays (1964).
Following theirfootsteps, Robinson (1970) formulates fouraxioms to govern the weU-formedness ofdependency structures:(a) One and only one element is independent;(b) All others depend irectly on some element;(c) No element depends directly on more than oneother;,(d) If A depends directly on B and some element Cintervenes between them (in linear order ofs~ing),then C depends directly on A or on B or some otherintervening element.These axioms require that all words shoulddepend on only one word and that, arrangingwords in linear order, crossing of dependencylinks as in Fig.l should not be allowed.Yuyanxuelinguisticswo zhidao ta xihuanI know he likesFig.
!These are effectively the requirements of single-headedness and projectivity.While there are some schools of DG that donot follow Robinson's axioms in their entirety (e.g.Hudson (1984, 1990), Melcuk (1988)), manycomputational linguists working on DG-basedparsing have based their work on theseassumptions (e.g.
Hellwig (1986), Covington(1990)).
DG parsing of Chinese have usedstatistical corpus-based algorithms (Huang et al(1992), Yuan and Huang.
(1992)), rule-based102they may or may not take word order into defined by Robinson's axioms, does have aspectsconsideration; but they all observe Robinson's that cannot be modelled elegantly by PSG.axioms in their entirety.
They also labelI depedency relations with grammatical functions 1 Representation of Dependency like subject and object.Generalizing over DG-based parsing of The governor-dependent (head-modifier)I Chinese, Lai and Huang (1994) note that, taking relationship between words in an utterance can belinear word-order into consideration, this represented as for the Chinese sentence (fromapproach to DG can be emulated by a model YuanandHuang(1992) in Fig.
2:I having a context-free constituent component that / ' ~is constrained by a grammatical function /component, very much in the spirit of the U constituent and functional structures of Lexical Functional Grammar (LFG, Bresnan ed.
(1982)).The syntactic dependency structure in thisapproach to DG is however different fromcontext-free phrase structure in that non-lexicalphrasal nodes are not allowed.
As in LFG, thegrammatical function structure, which providesthe constraining mechanism, is mathematically agraph rather than a tree.
This relieves the syntacticdependency component of any need to bemultiple-headed and non-projective (Lai andHuang 1995).
Following this approach, Lai andHuang (in press) describes a unification-based(Shieber (1986)) experimental parser adaptedfrom the PATR parser in Gazdar and Mellish(1989).
Control and simple semantic analysis arehandled.The present paper discusses i sues of using aconstrained CFG to emulate DG.
Section 1explains the implications of Robinson's axiomsand describes Hays' CFG-like formulation ofdependency rules.
Section 2 formulates the"dependency rule with grammatical functionannotation" model and describes its emulationwith PATR.
Section 3 discusses how the lexicalorientation of DG motivates a proper distinctionbetween complements subeategorized for by thehead and adjuncts that are not, and describes howthis can be accomplished in a constrained CFGemulation using subcategorization lists in thelexicon.
A distinction between grammaticalinformation residing and not residing in thelexicon is noted.
Section 4 discusses the realnature of the constrained CFG emulation of DG.Though DG can be usefully emulated by aconstrained CFG model, the formalism, as least asNa ten zai gongyuan lithat person in park insideFig.
2The main (or central) element, using Hays' (1964)terminology, of the sentence is zaL Its immediatedependants are ten and !i, which, in turn, havedependants oftheir own.
This sentence can also berepresented as in Fig.
3 (Tesniere's stemma):zaiten ii /na gongyuanFig.
3If we do not mangle up word order in thedependency structure of Fig.
3, it can be seen thatit is equivalent to the tree structure in Fig.
2.Based on the work of Gaifman (1965), Hays(1964) proposes rules of the following form forthe generation ofdependency structures:(a) X(A,B,C ..... H, * ,Y .... ,Z)(I,) X(* )(c) * (X)Fig.
4In Fig.4, (a) states that the governing auxiliaryalphabet X has dependent A, B, C ..... H, Y ..... Zand that X itself (the governor) issituated between103II H and Y. Co) says that the terminal alphabet Xoccurs without any dependants.
(c) says that Xoccurs without any governor, i.e.
it is the main orI central element.
Gaifman (1965) establishes that aDependency Grammar obtained in this way isequivalent to a phrase structure grammar in theI sense that:- they have the same terminal lphabet;- for every string over that alphabet,I structure attributed by either everygrammar corresponds to a structureattributed by the other.I Robinson's (1970) four axioms (v. supra)license the same kinds of dependency structuresI as Hays' rules.
Unlike these rules, they do notcontain unnecessary stipulation involving linearword order.
It is easy to see that the third axiom isI a requirement of single-headedness.
A  for thefourth axiom, consider Fig.
5: B'!Fig.
5The axiom stipulates that the governor of C mustbe located between A and B (which arethemselves possible governors).
Seen in theBaysian cast, this effectively requires that the linkbetween C and its governor should not cross thelines AB' and BB'.
This is thus a requirement ofprojectivity.2 Dependency  Rules and Grammat ica lFunct ion Annotat ionGeneralizing over approaches adopted in DG-based parsing of Chinese, Lai and Huang (1994)noted that grammatical functions like subject andobject are generally used to label dependencylinks.
These labels are not found in Hays'dependency rules and Robinson's axioms.
In asense, they are entities on a second level.Borrowing the idea of functional annotation fromLFG, they proposed annotated ependency rulesof the following form:X(A(fa), B (~) , .
.
.
, *  .... Z(fz))For example, the following rules account for thetransitive verbs:(a) * (TV)Co) TVfS(subj), *(c) N(* ), N(obj))Fig.
6While this is not a phrase-structure grammar(PSG), Lai and Huang (in press) exploited theobvious affinity between Robinson-style DG andPSG and implemented a DG parser using thePATR of Gazdar and Mellish (1989).
In thisimplementation, the Chinese sentenceZhang San kanjian Li Siname saw name.is accounted for by the annotated rules (simplifiedand semantic analysis mechanisms stripped forbrevity) in Fig.
7:R ule TVP m> \[PNI, TV, PN2\] :-TVP:cat J "  tv,TV:cat ~ tv,PNi:cat ~ n ,PN2:cat ~ n ,TVP:ds ..... TV:ds,TVP:ds:subj - -~ PNl:ds,TVP:ds:obj " PN2:ds.W ord kanjian :-W:cat tv,W:ds:head .. kanjian.Word 'zhangsan' :-W:cat .
.
.
.
n,W:ds:head ~ 'zhangsan'.W ord 'lisi' :?W:cat n,W:ds:head ~ '\]isi'.Fig.
7104!I Besides outputting a grammatical function V:ds:obj:filler' : N:ds.structure, the following dependency structure is Word xiang3 :-produced: W:cat : v,i W:subcat:tran ~ tv,\[tv, \[\[n, \[zhangsan\]\], [tv, \[kanjian\]\], \[n, \[lisi\]\]\]\] W:subcat:c~'l I I  l subj,W:ds:head ~.
:  xiang.i PATR outputs a phrase-structure tree, but after Control sentences are one of the motivationsapplying a pruning operation on the two tv's, a for DG grammarians like Hudson (1994) to givestructure quivalent to Fig.
8 is obtained: up the single-headedness and non-projectivityI requirements, finding it difficult, for example, not TVkanjian to allow the controlled verb da to have both ZhangSan and xiang as its heads, violating single-I ~ headedness and projectivity at the same time as/ \ shown in Fig.
9:I Zhang San Li SiFig.
$I The more complicated sentence, involving asubject-control verb, Zhang San xiang da Li SiZhang San xiang da Li Si Fig.
9name want hit nameis accounted for the following rules (necessarydetails only, for brevity):Rule CVP ---> \[N, CV, VS\] :-CVP:slash:here =--~ no,CVP:slash:down ~ yes,CVP:cat - - -  CV:cat,CV:cat ~ v,CV:subcat:tran ~ tv,CV:subcat:ctrl =~ subj,N:cat .
.
.
.
n,VS:cat ?
v,VS:slash:her?
:= subj,CVP:ds === CV:ds,CV:ds:subj:fi\]l ~ N:ds,CV:ds:obj:fill ------ VS:ds,%Subject-control information followsCV:ds:subj:fil|::= CV:ds:obj:fill:subj:fill.R ule VS --> \[V, N\] :-sub j,tv,VS:slash:here -' "VS:cat V:cat,V:cat - -  v,V:subcat:tranN:cat " n,VS:ds V:ds,By introducing a level of grammatical function toaccommodate such complications, Lai and Huang(1995; in press) preserve single-headedness andprojectivity in the syntactic dependency structureas in Fig.
10:Zhang San xiang da Li SiFig.
10Other difficulties involving raising, extraction,tough-movement and extraposition (Hudson(1994)) can be dealt with similarly.This two-level approach to DO parsing isessentially a context-free PSG constrained bygrammatical function annotations.
A grammaticalfunction structure accompanies the dependency105structure of a legal sentence just as a functionalstructure is associated with a constituent s ructurein LFG.
Morphological and semantic onstraints(Melcuk (1988)) can also be dealt with onadditional levels.3 Complements  and AdjunctsThe constrained CFG emulation of DG describedin the previous section inevitably prompts thequestion whether it is still a DG.
In his forewordin Starosta (1988), Hudson mentioned threecharacteristics of DG.
First, DG should bemonostrata!
in the sense that there should be notransformations.
Second, dependency should bebasic, not derived.
Third, the rules of grammarshould not be formally distinct fromsubcategorization facts.
Lai and Huang's approachmeets the first two  criteria.
While the propertreatment of adjuncts will be discussed below, theclose coupling of the phrase-structure-rule-likedependency rules and subcategorization propertiesdiscussed in the previous section also gives theapproach the third characteristic.One may feel somewhat uncomfortable aboutphrase-structure rules or phrase-structure-rule likmechanisms playing an important role in anemulation of DG.
After all, although it is true thatHays' rules work like phrase structure rules,conformation to Robinson's axioms does notimply that the process of sentence recognition willnecessarily have an image in a PSG.
The situationis particularly critical in the treatment of adjunctsthat are not subcategorized for by a head word.We could quite easily deal with adjunct in themanner of the following annotated phrasestructure rule in LFG:VP --* V NP ZP(1'obj) = $ ('l'adjunct) =But we would then have to let a large number ofphrase st ructure  rules not related tosubcategorization facts slip into the grammar.This violates the third criterion mentioned aboveand is obviously undesirable.This being a critical problem of constrainedCFG emulation of DG, we adopt another approachby exploiting the fact that the categorical labels of106a head word and it's dominating nodes are thesame.
Using (simplified) PATR notations, the twogeneric rules:X_ ,XYY: fun = adjunctX_+YXY:fun = adjunctFig.
11will be able to cover all kinds of adjunct rules.The two X's on the two sides of the arrow areshort-hand for two different symbols, say XI andX2, constrained by the condition XI :cat = X2:cat.As subcategorization i formation has to beencoded in the lexical items anyway, there isnothing seriously wrong with phrase-structure-rule-like stipulations about complements.However, we should note that, in Chinese andEnglish, adjuncts generally do not come betweena head word and its "unmoved" non-subjectcomplements.
This could be taken care of byadding a bar-level feature to the rules in Fig.
l !
asin Generalized Phrase Structure Grammar (GPSG,Gazdar et al (1985)).
But then we would berelying more heavily on phrase-structure-rule-likemechanisms.
Instead o f  this, we find thealternative method of treatment in Head-DrivenPhrase Structure Grammar (HPSG, Pollard andSag (!
994)) convenient.First, lexical entries are as in Fig.
12:gei ('give')cat= vsubcat.left = \[n(subj)\]subcat.right = \[n(iobj),  n(obj)\]Fig.
12Rules like the following (necessary details only,for brevity) will take care of complementssubcategorized for by the head word:V _+ V X(cat(fun) = pop('V:subcat.right)}% fails if V:subcat = nX:cat = catX : fun  = funV ._~ X V{cat(fun) = pop(V:subcat.left)}% fails ifV:subcat = UX:cat = catX:fun = funFig.
13Adjuncts are kept from getting in between a headword and its unmoved non-subject complementsby adding constraints likeX: subcat.right = \[\]to rules in Fig.
11As shown in Fig.
12, a lexical entry has twosubcategorization lists, one for complements onits left and one for complements on its right, aninspiration from Yuan and Huang (1992).
Theelements in a subcategorization list is arranged sothat the one that occurs closest o the head word isat the head.
The rules in Fig.
13 are presented in aform that is easily understood by readers.
The popoperation, which is procedural in nature (hencethe braces), hands over to the caller the headelements of a the subcategorization list, removingit from the list at the same time.
It is actuallyimplemented in a PATR-compatible manner.This scheme works for Chinese and English,in which unmoved non-subject complementsfollow the verb.
Adjustments are required formoved complements.
Adjustments are alsorequired for other languages.It should be noted that the rules, in the spiritof Robinson's axioms, try not to meddle withword order as far as possible.
In this respect,PATR is inelegant in that it has to have twosymmetrical adjunct rules in Fig.
!I and twosymmetrical complement rules in Fig.
13.
Thisinelegance seems to be inherent in the PSG natureof PATR.4 Nature of the Emulation ModelAn examination of the real nature of ouremulation model is in order.
As a computationalemulation of a DG conforming to Robinson's fouraxioms and using grammatical functions to labeldependency links, it sanctions sentences withdependency structures that satisfy the single-headed and non-projective conditions.
Well-formed dependency structures are accompaniedby a grammatical function structures that, interalia, ensure that subcategorization properties oflexicai items are satisfied.
Grammatical functionstructures do not have to conform to the single-headed and projective conditions.
Morphologicaland semantic onstraints can be accommodatedsimilarly.Most grammatical mechanism in theemulation are triggered by lexical information.Hays-style dependency rules, which are emulatedby phrase-structure mechanisms in PATR.
Rulesfor complements of the head word derive theirreal power from lexical subcategorizationinformation.
They thus meet the criterion thatrules of grammar of a IX; should not be formallydistinct from subcategorization facts.Adjunct rules are not related to anysubcategorization facts.
We believe that theirexistence (in small numbers) is justified in ouremulation model.
Even in a DG formalism thatdoes not have phrase-structure-like rules, therehave to be some general facilities to take care ofsuch non-lexical grammatical mechanisms.
DG islexically orientated, but it has to cope with non-lexical grammatical mechanisms, where they exist,in language.The dependency rule cum functionalconstraint emulation in Lai and Huang (1994;1995; in press) has obviously been influenced byLFG.
With the introduction of mechanisms tohandle complements and adjuncts in the previoussection, the emulation model has moved towardsHPSG.
Grammatical function constraints, whichwork like functional annotations in LFG, providethe main facilities to resolve grammaticalproblems like control.
On the other hand,dependency rules, emulated by PATR phrase-structure rules, are kept to a minimum and dealswith subeategorization and adjoining with al-IPSG-like mechanism.The emulation model, however, remains anemulation.
The Chinese parsing experiments fromwhich the generalization has been made do not alluse (context-free) phrase structure rules (e.g.107IIIIIIIIIIIIIIIIIYuan et al (1992); Zhou and Huang (1994)).PATR rules are useful only in so far as they canproduce structures that can be transformed todependency structures.ConclusionWe have thus been committed in our efforts toemulate a Robinson-style Dependency Grammarwith a lexically oriented Context-Free Grammarconstrained by grammatical function annotations.Besides providing a formalism for valid andilluminating linguistic analysis, this emulation hasenabled us to implement a unification-basedparser in PATR.
We are however not necessarilycommitted to the claim that DependencyGrammar is a notational variant of PhraseStructure Grammar.
Robinson-style dependencystructures have great affinity with phrase structuretrees, but they do not have to be generated byphrase structure rules.
In fact, phrase structurerule-based emulation is inelegant in handlingsome phenomena that DG can deal with elegantly.AcknowledgementsOur thanks go to the National Science Foundationof China for supporting the research reported inthis paper.ReferencesBresnan J.W, ed.
(1982) The Mental Representation ofGrammatical Relations.
MIT Press, Cambridge, U.S.A.,874p.Covington M.A.
(I 990) Parsing Discontinuous Constituentsin Dependency Grammar.
Computational Linguistics, 16/4,pp.
234-236.Gaifman H. (1965) Dependency Systems and Phruse-Structure Systems.
Information and Control, 8, pp.
304-337.Gazdar G., Klein E., Pullum E. and Sag L (1985) GeneralizedPhrase Structure Grammar.
Blackwell, Oxford, 276p.Gazdar G. and Mellish C. (1989) Natural LanguageProcessing in Prolog.
Addision Wesley, Wokingham, 504p.Hays D.G.
(1964)Dependency Theory: A Formalism andSome Observations, Language, 40, pp.
511-525.Hellwig P. (1986) Dependency Unification Grammar.
Proc.COLING 86, pp.
195-199.Huang C.N., Yuan C.F.
and Pan S.M.
(1992) Yuliaoku.Zhishi Huoqu He Jura Fenxi (Corpora.
Knowledge108Acquisition and Syntacu'c Parsing).
Journal of ChineseInformation Processing, 6/3, pp.
I-6.Hudson R. (1984) Word Grammar.
Blackw?ll, Oxford, 267p.Hudson R. (1990) English Word Grammar.
Blackwell,Oxford, 445p.Hudson R. (1994) Discontinuous Phrases in DependencyGrammar.
University of London Working Papers inLinguistics, 6, pp.
89-124.Hudson R. (1995) Dependency Counta.
In "FunctionalDescription of Language", E. Hajicova, ed., Faculty ofMathematics and Physics, Charles University, Prague, pp.85-115.Lai B.Y.
and Huang C.N.
(1994) Dependency Grammar andthe Parsing of Chinese Sentences.
The Proceedings ofthe1994 Kyoto Conference (Joint ACLIC8 and FACFoCoL2),10-11 Aug. 1994, pp.
63-71.Lai B.Y.T.
and Huang C.N.
(!995) Single-Headedness andProjectivity for Syntactic Dependency.
The LinguisticsAssociation of Great Britain Spring Conference, Universityof New Castle, 10-12 August, 1995.Lai T.B.Y.
and Huang C.N.
(in press) An Approach toDependency Grammar for Chinese.
In '*TheoreticalExplorations in Chinese Linguistics", Y. Gu, ed., HangKong: Linguistic Society of Hang Kong, Hang Kung, inpress.Li J.K., Zhou M. and Huang C.N.
(1993) Tong\]i Yu GuizeJiehe De Hanyu Jufa Fenxi Yanjiu (Study on UsingStatistics and Rules at the Same Time in SyntacticAnalysis).
Proc.
JSCL93, Xiamen University, pp.
!
76-181.Maxwell D. (ms) Unification Dependency Grammar.Meicuk I.A.
(1988) Dependency S ntax: Theory and Practice.State University of New York Press, Albany, 428p.Pollard C. and Sag t. (1994) Head-Driven Phrase StructureGrammar.
University of Chicago Press, Chicago, 440p.Robinson J.J. (1970) Dependency Structures andTransformation Rules.
Language, 46, pp.
259-285.Shieber S.M.
(1986) An Introduction to Unification-BasedApproach to Grammar.
Chicago University Press, Chicago,105p.Starosta S.(1988) The Case for Lexicase.
Pinter, London.Tesniere L. (1959) Elementa de Syntaxe Structurale,Klincksieck, Pads.Yuan C.F.
and Huang C.N.
(1992) Knowledge Acquisitionand Chinese Parsing Based on Corpus.
Proc.
COLING 92,Nantes, France, pp.
13000-13004.Zhou M. and Huang C.N.
(1994) An Efficient SyntacticTagging Tool for Corpora.
Proc.
COLI~G 94, Kyoto, pp.949-955.
