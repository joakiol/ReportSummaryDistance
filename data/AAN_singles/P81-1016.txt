I~ IGAT ION OF PROCESSING STRATEGIES FORTHE STRUCTURAL ANALYSIS OF ARGOMF/TrsRobin CohenDepartment of Computer ScienceUniversity of TorontoToronto, Canada M5S IA72.
THE UNDERSTANDING PROCESSThis paper outlines research on processing strategiesbeing developed for a language understanding systerN,designed to interpret the structure of arguments.
Forthe system, arguments are viewed as trees, with claimsas fathers to their evidence.
Then understandingbecomes a problem of developing a representativeargtmlent tree, by locating each proposition of theargument at its appropriate place.
The processingstrategies we develop for the hearer are based onexpectations that the speaker will use particularcoherent transmission strategies and are designed tobe fairly efficient (work in linear time).
We alsocomment on the use by the speaker of linguistic cluesto indicate structure, illustrating how the hearer caninterpret the clues to limit his processing search andthus improve the co~lexity of the understandingprocess.2.1 PROCI.~ING S'I~AT~GIESTo prOcess an argument, each proposition is analyzedin turn.
It is convenient to think of therepresentation for an argument as a tree with claimsas fathers to their evidence.
The speaker thus has aparticular tree structure for the argument which hetranm~its in some order.
The hearer must take theincoming stream of propositions and re-construct thelogical structure tree.
Although the speaker hasavailable a wide variety of possible transmissionalgorithms, we claim that only a small n,~ber of thesewill be used.
We look for tranm~ission algorithmsthat have associated reception algorithms such thatboth S and H can process in a reasonable amount oftime.
Consider the following strategies=i.
BACKC4~DUNDThis paper focuses on one aspect of an argumentunderstanding system currently being designed.
Anoverview of the initial design for the system can befound in \[Cohen 88\].
In general, we are examiningone-sided arguments, where the speaker (S) tries toconvince the hearer (H) of a particular point of view.We then concentrate on the analysis problem ofdetermining the overall structure of the argtm~nt.Considering an argument as a series of propositions,the structure is indicated by isolating thosepropositions which serve as CLAIMS and those whichserve as EVIDENCE for a particular claim, and byindicating how each piece of evidence sup~orta itsassociated claim.
A proposition E is established asevidence for a proposition C if they fit appropriateslots in one of the system frames representing variouslogical rules of inference, such that E is a premiseto C's conclusion.
For example, E will be evidencefor C according to modus ponens if E-->C is true..Establishing evidence is a complex process, involvingfilling in missing premises and recognizing thelogical connection between propositions.
In any case,our research does focus on reconstructing this logicalform of the argument, aside from judgments ofcredibility.The initial design \[Cohen 8g\] adopts anunsophisticated processing strategy: each propositionis analyzed, in turn, and each is tested out aspossible evidence for every other proposition in theargument.
The current design seeks to imprOve thatbasic strate< !
to a selective process where theanalysis for a given proposition is performed withrespect to the interpretation for the overall argumentso far.
So, only particular propositions are judgedeligible to affect the interpretation of theproposition currently being analyzed.
Currently, weassume an "evidence oracle" which, given twopropositions, will decide (yes or no) whether one isevidence for the other.
With this "accepted"authority, a representation for the argument can bebuilt as the analysis proceeds.
(The design of theoracle is another research area altogether, notdiscussed in this paper).a) 9RE-ORDERThe most straightforward transmission for an argL~nentis to present a claim, followed by its evidence, whereany particular piece of evidence may, in turn, haveevidence for it, following it.
A sample tree (numbersindicate order of propositions in the transmittedstream) is:4 6/5~/In this kind of argtmlent, every claim precedes itsevidence.
Thus, w~en the hearer tries to find aninterpretation for a current proposition, he must onlysearch prior propositions for a father.
The receptionalgorithm we propose for H is as follows: tointerpret the current proposition, NE~, consider theproposition immediately prior to it (call it L forlast).
I) Try out NEW as evidence for L .
2) If thatfails, try NER as evidence for each of L's ancestors,in turn, up to the root of the tree.
(NEW's fathermust exist somewhere on this "right border" of thetree).
When the location for NEW is found, a node forit is added to the tree, at the appropriate place.b) 9OST-ORDKRHere, each claim is preceded by its evidence.
Thisis a little more complex for the hearer because he mayaccept a whole stream of propositions without knowinghow they relate to each other until the father for allof them is found.
Exa~le:.
9,-~The reception for H must now make use of the tree forthe argument built so far and must keep track ofpropositions whose interpretation is not yet known,9ending the appearance of their father.
The formalreception algorithm will thus make use of a stack.Consider L to be the top of the stack.
To interpretthe current proposition NEW do the following- I) See71if NEW ~ets evidence from L (i.e.
is claim for L).2al If L is evidence, keep popping off elements of thestack that are also sons and push the resulting treeonto the stack.
2b) Otherwise, push ~ onto thestack.
In short, search for sons: when one son isfound, all of them can be picked up.
Then the fathermust stack up to De evidence for same futureproposition.c) HYBRIDPre-order and post-order are two consistentstrategies which the hearer can recognize if heexpects the argument to conform to one or the othertransmission rules, throughout.
But an argumentessentially consists of a series of sub-arguments(i.e.
a claim plus its evidence).
And the Speakermay thus decide to transmit some of thesesum-arguments in pre-order, and others in post-order,yielding an overall h~r id  argument.
Therefore, thehearer must develop a more general processingstrategy, to recognize hybrid transmission.
Thereception algorithm now is a c~mDination of techniquesfrom a) and b) .Exam-ple: ,~...23  ,6~ (EX 3)45But there are additional complications to processingin this model - for example, transitive evidencerelations.
In KX 3, 4 and 5 are evidence for 1 (since4 and 5 are evidence for 6 and 6 is evidence for i),so they will De attached to I initially.
Then, toprocess 6, H must attach it to i and pick up 4 and 5as sons.
So, the hybrid algorithm involves recoveringdescendants that may alreaay De linked in the tree.Here is a more detailed description of the algorithm:We maintain a dummy node at the top of the tree, forwhich all nodes are evidence.
Consider L to De apointer into the tree, representing the lowestpossible node that can receive more evidence(initially set to dummy).
For every node NEN on theinput stream do the following:forever do(B0:) if NEW evidence for L then(Sl:) if no sons of L are evidence for NEW then/* just test lastson for evidence */(BII:) attach NEW below L(Bl2:) set L to NEWexit forever loop(B2:) else(B21:) attach all sons of L which areevidence for NEW below NE~/* attach lastson; bump ptr.
to lastson *//* back I and keep testing for evidence */(B22:) attach NE~ below Lexit forever loop(B3:) else set L to father(L)end forever loopThis hyt)rid model still accounts for only sc~e ofmany possible argtm~ent configurations.
But we claimthat it is a good first approximation to a realisticand efficient processing strategy for arguments isgeneral.
It captures the argument structure a hearermay expect from a speaker.
Some of the restrictionsof this model include: (i) importance of the lastproposition before NEW in the analysis of NEW; (2)preference for relations with propositions closer toNEW; (3) considering only the last brother in a setof evidence when NEW seeks to relate to priorpropositions.
Note then that we do not expect to addevidence for a brother or uncle of L - these nodes areclosed off, as only the last brother of any particularlevel is open for further expansion.
To determine theappropriateness of this algorithm as a generalstrategy, we are currently investigating thei~ l  ications of restricting expected argtnnentstructures to this class and the complexity inco~.re/~ension caused Dy other transmission me,hods.Now, the reception algorithms we develop for a), b),and c) can all be shown to ~ork in linear time (then~r  of evidence relations to be ~ested will beproportional to the numDer of nodes in the tree) \[seeAppendix\] but not in real time (can have aDritrarilylong c~ains in any suD-argtmlent).
Yet hearers processargt~nents well and this, we claim, is because thespeaker helps out, providing special clues to thestructure.2.2 LINGUISTIC CLUESSpecial words and phrases are often used Dy thespeaker to suggest the structure of the argument.
Onemain use of clues is to re-direct the hearer to aparticular proposition.
Phrases like "Let us nowreturn to..." followed Dy a specific indication of aprior topic are often used in this respect.
In EX l,if 8 is preceded Dy a clus suggesting its link to i,then the hearer is spared the long chain of trying 8as evidence for 7, 5 and 3.
So, linear timealgorithms can become real time with the aid of clues.But clues of re-direction may also occur to maintainpoorly structured arguments - i.e.
the speaker canre-direct the hearer to parts of the argument thatwere "closed off" in his processing.
In certaincases, expectations are then set up to addressintermediary propositions.
We are developing adetailed theory of how to process subsequent tore-direction.Another use of clues is to indicate boundaries.
InEX 3, if a phrase like "We now consider another set ofevidence for (i)...= preceded 4, it would be easierfor H to retrieve 4 and 5 as sons to 6 (withoutchecking 3 as well).Explicit ~rases  a~out relations between propositionsare only one type of clue.
There are, in ~ i t ion ,Special words and phrases with a function ofconnectir~ a proposition to some preceding statement.These clues aid in the processing of an arg~uent byrestricting the possible interpretation of theproposition containing the clue, and hencefacilitating the analysis for that proposition.
Asoutlined in section 2.1, the analysis of a propositioninvolves a constrained search through the list ofprior propositions.
With these clues, the search is(i) guaranteed to find ~ prior proposition wtlic~relates to the one with the clue (2) restricted evenfurther due to the semantics of the clue as to thedesired relation between the prior and currentproposition (e.g.
MUSt be son, etc.).
We develop ataxonomy of connectives ~ised on the "logicalconnectors" listed in (Quirk 721, and assign aninterpretation rule to each class.Notation: in the following discussion S representsthe proposition with the connective clue, and Prepresents the prior proposition ~nich "connects" to$.72Smeary:CATSGORY RELATICN:P to S EXAMPLEparallel brother  "Secondly"inference son "As a result"detail father "In particular"summary multiple sons "In conclusion"reformulation son A~D father "In other words"contrast Son OR brother "on the other hand"Remark: The examples in the following discussion areintended to illustrate the processing issues inargument analysis.
We are examining several real lifeexamples from various sources (e.g.
rhetoric books,letters to the editor, etc.)
but these introduceissues in the operation of the evidence oracle, and soare not shown here.i) Parallel: This category includes the most basicconnectors like "in addition" as well as lists ofclues (e.g.
"First, Secondly, Thirdly,..etc.").
Pmust be a brother to S. Since we only have an oraclewhich tests if A is SON of B, finding a brother mustinvolve locating the crayon father first.EX 4: l)The city is in serious trouble rl\2)There are sc~e dangerous fires going 2 43)Three separate blazes have broken out ~ 34)In addition, a tornado is passing throughThe parallel category has additional rules foranalysis in cases where lists of clues are present.Then, all propositions with clues from the same listmust relate.
But we note that it is not always abrother relation between these specific propositions.The relation is, in fact, that the brothers are thepropositions which serve as claims in eachsub-argtm~ent controlled by a list clue.EX 5: l)The city is awful 12)First, no one cleans the parks ~\3)So the parks are ugly 3 44)Then, the roads are ugly, too / \5)There's always garbage there 2 5Here, 2 and 4 contain the clues, but 3 and 4 arebrothers.2)Inference= Here, P will be son for S.EX 6: 2)Peoplel)The firearedeStroyedhomelesshalf the city 12/33)As a result, the streets are crow~ed 1Here, the interpretation for 3 only looks to be fatherto2.3)Detail: Here, P will be father to S.EX 7: l)Sharks are not likeable creatures I~2)They are unfriendly to human beings3)In particular, they eat people 3Here, 3 finds 2 as its father.4)Summary: We note that some phrases of summary areused in a reformulation sense and would be analyzedaccording to that category's rules.
These are caseswhere the summarizing is essentially a repeat of aproposition stated earlier.
A "summary" suggests thata set of sons are to be found.F~ 8: l)The benches are broken 42)The trails are choppy / \ [~3)The trees are dying 1 2 34) In stY, the park is a messBut sometimes, )=he "multiple" sons are not brothers ofeach other.EX 9: l)The town is in danger 42)Gangs have taken over the stores I3)The police are out on strike / i \4)In stm~, we need protection 2 3The interpretation rule for summary would follow thegeneral reception algorithm to pick up all sons at thesame level.5)Reformulation: When a clue indicates that S isessentially "equivalent" to some P, P must satisfy thetest for both son and father.
To represent t/~isrelation, we may need an extension to our current treemodel (see Section 3 - Future Work).EX 10: l)We need money2)In other words, we are broke6)Contrast: This category covers a lot of specialphrases with different uses in arguments, we have yetto decide how to optimally record contrastivepropositions.
For now, we'd say that a propositionwhich offers contrast to some evidence for a claim is(counter) evidence for that claim, and hence S is sonof P. And a proposition which contrasts anotherdirectly, without evidence being presented is a(counter) claim, and hence S is a brother to 9.EX II: l)The city's a disaster 12)The parks are full of uprooted trees \~3)But at least the playgrounds are safe 2 3Here, 3 is counter evidence for 1EX 12: 1)The city is dangerous ~5~2)The parks have muggings3)But the city is free of pollution 4 3 14)And there are great roads /5)So, I think the city's great 2Here 3 and 1 are brothersThere are a lot of issues surrounding contrast, someof which we mention briefly here to illustrate.
Onequestion is how to determine which proposition is"counter" to the rest of the argument.
In EX 12, theproposition with the clue was not the contrastivestatement of the argument.
So, it is notstraightforward to expand our simplified recording ofcontrast statements to add a "counter" label.
Anotherfeature is the expectations set for the future whencontrast appears.
Sometimes, more evidence isexpected, to weigh the argument in favour of oneposition over another.
If these expectations arecharacterized, future processing may be facilitated.This description of connective clues is intended toillustrate some of the aids available to the hearer torestrict the interpretation of propositions, we arestill working on complete descriptions for theinterpretation rules.
In addition, we intend eachclass to be distinct, but we are aware that someEnglish phrases have more than one meaning and maythus be used in more than one of  the taxonomy'scategories.
For these cases, the union of possiblerestrictions may have to be considered.2.3 IMPLICATIONS OF THIS ANALYSIS DESIC~Our description of various processing strategies andclue interpretations can be construed as a particular73theory of how to process arguments.
The hearerexpects the speaker to conform to certain tranmnissionstrategies - i.e.
does not expect a random stream ofpropositions.
But, H may be confronted withre-directions in the form of special clues, which heinterprets as he finds.
And he may limit hissearching and testing by interpreting clues suggestingeither the kind of relation to search for (evidencefor, claim for) or the specific propositions to check.The theory thus proposes a particular selectiveinterpretation process, the techniques are given aformal treatment to illustrate their complexity, andthe special markers confronted in analysis areassigned a functional interpretation - to improve theccm~)lexity of the understanding task.
A note here onthe "psychological validity" of our model: we havetried to develop processing strategies for argumentsthat are consistent with our intuitions on how ahearer would analyze and that  function with arealistic complexity.
But, we make no c la ims thatthis is the way all humans would process.3.
~ CONSIDERATIONSOne area we have not discussed in this paper is thatof establishing the evidence relation.
For now, theproblem is isolated into the "evidence oracle = whichperforms the necessary semantic processing.
In thefuture, we will give more details on the complexitiesof this module and its interaction with the generalprocess ing  strategy described here.There are, as well, several i~provements inprocessing techniques to consider.
Here are someongoing projects - i) Investigation of other possibleargument structures .
not included here.
The mostobvious case to consider is: a claim, both precededand followed by evidence for it.
This is a reasonabletran.maission to expect.
We are working on extensionsto the hybrid algorit~ to accept these configurationsas well.
One interesting issue is the necessity fo rlinguistic clues with argument structures of this type- to make sure the hearer can pick up additionalevidence and recognize where the next suJo-argumentbegins.2) Expanding the existing representation model tohandle other complications in arguments.
Inparticular, there a~e several different types ofmultiple roles for a proposition, which ~Jst all behandled by the theory.
These include: (i)Proposition is both claim and evidence.
(This isalready arx:x:uKxlated in our current tree design, wherea node can have father and sons).
(ii) Proposition isboth claim and evidence for the same proposition -i.e.
two "equivalent" propositions in the argument.
(iii) Proposition is claim to several otherpropositions.
(Again, currently acceptable as fa thercan have any number o f  sons).
( iv)  P ropos i t ion  (E) i sevidence fo r  more than one propos i t ion .
I f  a l l  thec la ims form an ancest ra l  chain - fa ther ,  g randfather ,g reat -grandfather ,  e tc .
then th i s  i s  jus t  thet rans i t i ve  evidence re la t ion  discussed prev ious ly  andhandled by the current strategy.
In other cases, (forexample, when the -..laims are brothers) the hearer maynot recognize the multiple cole in all possibletranmuissions.
For instance, a tranmuission ofclaiml, E, then claim/ seeus comprehensible.
But ifthe hearer received them in the order: claiml,claim/, then E - would he recover the role of E asevidence for claiml?3) Trying to characterize the ~,~lexity of variousargument configurations.
Certain combinations of preand poet order seem less taxing to the hearer.
We areexamining the cases where complexity problems ariseand linguistic clues become more prevalent.4.
NELATED WORKAlt~.,ugh our research area may be considered largelyunexplored (examining a specific kind of conversation(the argument), concentrating on structure, anddeveloping formal descriptions of processing), thereare some relevant references to other work.
In \[Ho~os8%\] Hotels states that "T~e proOl~m of AI is how tocontrol inferencing and oti~er search processes, sothat the best answer will be found within the resourcelimitations."
We share this oommittment to designingnatural language understanding systams w~ich perform aselective analysis of the input.
The actualrestrictions on processing differ in various existingsyste~ according to the language tasks and theunderlying representation scheme.In \[Grosz 77\] focus spaces are used to search forreferents to definite noun ~rases (and to solve otherlinguistic problems).
These spaces of objects arearranged to form a hierarchy with an associatedvisibility lattice, based on the underlying structureof the task of the dialogue.
O~r tree representationis also a-'~erarchical structure and the descriptionof propositions eligible to relate to the current onemay be viewed as a visibility requirement on thathierarchy.
So, the restrictions to processing in bothour systems can be described similarly, although thedetails of the design differ to accommodate ourdifferent research areas.In So.bank's work on  story understar~ing (e.g.\[Schank 75\]) snerentyped scripts are used to limitprocessing.
Here, a given proposition is analyzed bytryir~ to fit with expectations for content generatedby slota of the script not yet filled.
Witharguments, we cannot predict future content, so wedesign expectations that future propositions will havea particular structure with respect to the text sofar.
These are in fact expectations for coi~erenttransmission.
Schan~'s expectations for coherence, onthe other hand, are coincident with his expectationsfor content, driven by scripts.Our actual design for restricting analysis is similarin many respects to Hotels' work on coherence relations( \[HobbS 76\] ,  \[Ho~s78\]).
In this work, therepresentation for the text is also a tree, but theconnections between nodes are coherence relations -subordinating relations between father and son, andco-ordinating relations between brothers.
In C~?~,,onto both designs is the proposal to constructrestricted lists of propositions eligible to relate toa current proposition.
In our case, the relationsbetween nodes in the tree is quite different (claim,evidence) ,  al though the description for the restrictedset turns out to be the same - nawely, the rightborder of the tree.In ~__~Npbs_ ' system, the search for an interpretation isnarrowed by proceseing a "goal list" of desiredrelations to existing propositions.
We do not have agoal list to order our search, but merely a list ofeligible propositions and an ordering of these 5asedon proxi~ty to the current proposition.
But we alsofurnish some motivation for the construction of theeligible list - naDely, from the bearer's expectationsabout transmiseion strategies used by the speaker.In addition, Ho~ mentions that a few special wordsinitiate specific goals (for example, "and" suggeststemporal succession, parallel or  possibly cont ras t ) .In our system we also d iscuss  the restrictions toprocessing furnished by clues but i) we define thecorpus of clues more clearly, indicating several types74and their associated restrictions and 2) we make clearthe relation between restrictions from clues and thegeneral processing strategy - that analysis picks upclues first, and resorts to general techniquesotherwise.
Furthermore, we show that a) most classesof clues are simply a restriction on the list ofeligible propositions proposed for a generalprocessing strategy and b)certain types of clues mayoverride the general restrictions of the eligible list(e.g.
re-directing the hearer explicitly).I am gz ~teful to Ray Perrault andtheir suggestions for this paper.Alex Borgida forBIBLIOGRAPHY\[Cohen 80\] ; Cohen, R. ; "Understanding Arguments";Proceedings of CSCSI/SCEIO Conference 1988\[Grosz 77\] ; Grosz, B.: "The Representation and Useof Focus in Dialogue Understanding"; SRI TechnicalNote No.
151\[Hobbs 76\] ; Hobbs, J. ; "A Computational Approach toDiscourse Analysis"; Dept.
Computer Sciences, CUNYResearch Report NO.
76-2\[Hobbs 78\]; Ho~s,  J.; "Why is Discourse Coherent?
";SRI International Technical Note NO.
176\[Hobbs 8@\] ; Hobbs, J.
"Selective Inferencing";Proceedings of CSCSI/SCEIO Conference 198~\[Quirk 72\] ; Quirk, R. et  al; A Granmar ofContemporary English; Longmans Co. ; London\[Schank 75\] ; Schank, R. ; "SAM A StoryUnderstander"; Yale Research Report NO.
43APPENDIXComplexity arguments:PIIE and POST ORDER: Any node of the tree is tested tobe claim a ntm~er of times = #of its sons + 1 morefailing test.
Now, total tests for claim - "Sum overi" (#sons(i) +I) where i runs over all nodes of thetree, which = "Sum over i"(#sons(i)) + n. But total#sons < total #nodes of tree (no multiple fathers).So total < 2n = O(n).HYBRID: We measure the complexity of processing allthe nodes in the tree, by showing that the #times thealgorit/~n (see section 2.1 for notation) runs throughBI, B2 and B3 in total = O(n).Hypothesis: No node gets attached to another morethan twiceProof: Each NEW gets attached once initially, eitherat BII or B22.
Once attached, it can only be movedonce - in B21, if it is son to current NEN.
Once itis moved, it is no longer a son of the current L(since L doesn't change in B2) and can never be son ofL again (since L only goes down tree in BI2, so neverto a previously attached node).Conclusion: all attachments together are O(n)Now then, BII + B22 together are only executed O(n)times - they perform initial attachments.
And B12 +B21 must thus also be O(n) - i.e.
#times throughbranches B1, B2 together is  O(n).Now consider B3: here n goes up the t ree .
But n canonly go up as often as it goes down and #moves downtree is O(n) as per BI2, so B3 is O(n).
(Note: #tests performed in operations in the foreverloop is also O(n) tests in B@, B1 are just aconstant additive factor; #tests in B21 (see commentstatement) is < 2#attachments in B21).75
