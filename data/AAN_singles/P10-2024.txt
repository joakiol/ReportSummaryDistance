Proceedings of the ACL 2010 Conference Short Papers, pages 132?136,Uppsala, Sweden, 11-16 July 2010. c?2010 Association for Computational LinguisticsComplexity assumptions in ontology verbalisationRichard PowerDepartment of ComputingOpen University, UKr.power@open.ac.ukAbstractWe describe the strategy currently pur-sued for verbalising OWL ontologies bysentences in Controlled Natural Language(i.e., combining generic rules for realisinglogical patterns with ontology-specific lex-icons for realising atomic terms for indi-viduals, classes, and properties) and arguethat its success depends on assumptionsabout the complexity of terms and axiomsin the ontology.
We then show, throughanalysis of a corpus of ontologies, that al-though these assumptions could in princi-ple be violated, they are overwhelminglyrespected in practice by ontology develop-ers.1 IntroductionSince OWL (Web Ontology Language) wasadopted as a standard in 2004, researchers havesought ways of mediating between the (decidedlycumbersome) raw code and the human users whoaspire to view or edit it.
Among the solutionsthat have been proposed are more readable codingformats such as Manchester OWL Syntax (Hor-ridge et al, 2006), and graphical interfaces suchas Prote?ge?
(Knublauch et al, 2004); more specula-tively, several research groups have explored waysof mapping between OWL and controlled English,with the aim of presenting ontologies (both forviewing and editing) in natural language (Schwit-ter and Tilbrook, 2004; Sun and Mellish, 2006;Kaljurand and Fuchs, 2007; Hart et al, 2008).
Inthis paper we uncover and test some assumptionson which this latter approach is based.Historically, ontology verbalisation evolvedfrom a more general tradition (predating OWLand the Semantic Web) that aimed to supportknowledge formation by automatic interpretationof texts authored in Controlled Natural Languages(Fuchs and Schwitter, 1995).
The idea is to es-tablish a mapping from a formal language to anatural subset of English, so that any sentenceconforming to the Controlled Natural Language(CNL) can be assigned a single interpretation inthe formal language ?
and conversely, any well-formed statement in the formal language can berealised in the CNL.
With the advent of OWL,some of these CNLs were rapidly adapted to thenew opportunity: part of Attempto Controlled En-glish (ACE) was mapped to OWL (Kaljurand andFuchs, 2007), and Processable English (PENG)evolved to Sydney OWL Syntax (SOS) (Cregan etal., 2007).
In addition, new CNLs were developedspecifically for editing OWL ontologies, such asRabbit (Hart et al, 2008) and Controlled Lan-guage for Ontology Editing (CLOnE) (Funk et al,2007).In detail, these CNLs display some variations:thus an inclusion relationship between the classesAdmiral and Sailor would be expressed by thepattern ?Admirals are a type of sailor?
in CLOnE,?Every admiral is a kind of sailor?
in Rabbit, and?Every admiral is a sailor?
in ACE and SOS.
How-ever, at the level of general strategy, all the CNLsrely on the same set of assumptions concerning themapping from natural to formal language; for con-venience we will refer to these assumptions as theconsensus model.
In brief, the consensus modelassumes that when an ontology is verbalised innatural language, axioms are expressed by sen-tences, and atomic terms are expressed by en-tries from the lexicon.
Such a model may fail intwo ways: (1) an ontology might contain axiomsthat cannot be described transparently by a sen-tence (for instance, because they contain complexBoolean expressions that lead to structural ambi-guity); (2) it might contain atomic terms for whichno suitable lexical entry can be found.
In the re-mainder of this paper we first describe the consen-sus model in more detail, then show that although132Logic OWLC uD IntersectionOf(C D)?P.C SomeValuesFrom(P C)C v D SubClassOf(C D)a ?
C ClassAssertion(C a)[a, b] ?
P PropertyAssertion(P a b)Table 1: Common OWL expressionsin principle it is vulnerable to both the problemsjust mentioned, in practice these problems almostnever arise.2 Consensus modelAtomic terms in OWL (or any other language im-plementing description logic) are principally ofthree kinds, denoting either individuals, classesor properties1.
Individuals denote entities in thedomain, such as Horatio Nelson or the Battle ofTrafalgar; classes denote sets of entities, such aspeople or battles; and properties denote relationsbetween individuals, such as the relation victor ofbetween a person and a battle.From these basic terms, a wide range of com-plex expressions may be constructed for classes,properties and axioms, of which some commonexamples are shown in table 1.
The upper part ofthe table presents two class constructors (C andD denote any classes; P denotes any property);by combining them we could build the followingexpression denoting the class of persons that com-mand fleets2:Person u ?
CommanderOf.F leetThe lower half of the table presents three axiompatterns for making statements about classes andindividuals (a, b denote individuals); examples oftheir usage are as follows:1.
Admiral v ?
CommanderOf.F leet2.
Nelson ?
Admiral3.
[Nelson, Trafalgar] ?
VictorOfNote that since class expressions contain classesas constituents, they can become indefinitely com-plex.
For instance, given the intersection A u B1If data properties are used, there will also be terms fordata types and literals (e.g., numbers and strings), but for sim-plicity these are not considered here.2In description logic notation, the constructor C u Dforms the intersection of two classes and corresponds toBoolean conjunction, while the existential restriction ?P.Cforms the class of individuals having the relation P toone or more members of class C. Thus Person u ?CommanderOf.F leet denotes the set of individuals x suchthat x is a person and x commands one or more fleets.we could replace atomic class A by a constructedclass, thus obtaining perhaps (A1 u A2) u B, andso on ad infinitum.
Moreover, since most axiompatterns contain classes as constituents, they toocan become indefinitely complex.This sketch of knowledge representation inOWL illustrates the central distinction be-tween logical functors (e.g., IntersectionOf,SubClassOf), which belong to the W3C standard(Motik et al, 2010), and atomic terms for in-dividuals, classes and properties (e.g., Nelson,Admiral, VictorOf).
Perhaps the fundamental de-sign decision of the Semantic Web is that all do-main terms remain unstandardised, leaving ontol-ogy developers free to conceptualise the domainin any way they see fit.
In the consensus verbali-sation model, this distinction is reflected by divid-ing linguistic resources into a generic grammar forrealising logical patterns, and an ontology-specificlexicon for realising atomic terms.Consider for instance C v D, the axiom pat-tern for class inclusion.
This purely logical patterncan often be mapped (following ACE and SOS) tothe sentence pattern ?Every [C] is a [D]?, where Cand D will be realised by count nouns from thelexicon if they are atomic, or further grammaticalrules if they are complex.
The more specific pat-tern C v ?P.D can be expressed better by a sen-tence pattern based on a verb frame (?Every [C][P]s a [D]?).
All these mappings depend entirelyon the OWL logical functors, and will work withany lexicalisation of atomic terms that respects thesyntactic constraints of the grammar, to yield ver-balisations such as the following (for axioms 1-3above):1.
Every admiral commands a fleet.2.
Nelson is an admiral.3.
Nelson is the victor of Trafalgar.The CNLs we have cited are more sophisticatedthan this, allowing a wider range of linguistic pat-terns (e.g., adjectives for classes), but the basicassumptions are the same.
The model providessatisfactory verbalisations for the simple examplesconsidered so far, but what happens when the ax-ioms and atomic terms become more complex?3 Complex terms and axiomsThe distribution of content among axioms dependsto some extent on stylistic decisions by ontol-ogy developers, in particular with regard to ax-133iom size.
This freedom is possible because de-scription logics (including OWL) allow equiva-lent formulations using a large number of shortaxioms at one extreme, and a small number oflong ones at the other.
For many logical patterns,rules can be stated for amalgamating or splittingaxioms while leaving overall content unchanged(thus ensuring that exactly the same inferences aredrawn by a reasoning engine); such rules are oftenused in reasoning algorithms.
For instance, any setof SubClassOf axioms can be amalgamated intoa single ?metaconstraint?
(Horrocks, 1997) of theform > v M , where > is the class containingall individuals in the domain, and M is a classto which any individual respecting the axiom setmust belong3.
Applying this transformation evento only two axioms (verbalised by 1 and 2 below)will yield an outcome (verbalised by 3) that strainshuman comprehension:1.
Every admiral is a sailor.2.
Every admiral commands a fleet.3.
Everything is (a) either a non-admiral or a sailor, and(b) either a non-admiral or something that commands afleet.An example of axiom-splitting rules is found ina computational complexity proof for the descrip-tion logic EL+ (Baader et al, 2005), which re-quires class inclusion axioms to be rewritten to amaximally simple ?normal form?
permitting onlyfour patterns: A1 v A2, A1 u A2 v A3, A1 v?P.A2, and ?P.A1 v A2, where P and all ANare atomic terms.
However, this simplification ofaxiom structure can be achieved only by introduc-ing new atomic terms.
For example, to simplifyan axiom of the form A1 v ?P.
(A2 u A3), therewriting rules must introduce a new term A23 ?A2 uA3, through which the axiom may be rewrit-ten as A1 v ?P.A23 (along with some further ax-ioms expressing the definition of A23); dependingon the expressions that they replace, the content ofsuch terms may become indefinitely complex.A trade-off therefore results.
We can often findrules for refactoring an overcomplex axiom by anumber of simpler ones, but only at the cost of in-troducing atomic terms for which no satisfactorylexical realisation may exist.
In principle, there-fore, there is no guarantee that OWL ontologies3For an axiom set C1 v D1, C2 v D2 .
.
., M will be(?C1 unionsq D1) u (?C2 unionsq D2) .
.
., where the class construc-tors ?C (complement of C) and C unionsqD (union of C and D)correspond to Boolean negation and disjunction.Figure 1: Identifier contentcan be verbalised transparently within the assump-tions of the consensus model.4 Empirical studies of usageWe have shown that OWL syntax will permitatomic terms that cannot be lexicalised, and ax-ioms that cannot be expressed clearly in a sen-tence.
However, it remains possible that in prac-tice, ontology developers use OWL in a con-strained manner that favours verbalisation by theconsensus model.
This could happen either be-cause the relevant constraints are psychologicallyintuitive to developers, or because they are some-how built into the editing tools that they use(e.g., Prote?ge?).
To investigate this possibility,we have carried out an exploratory study using acorpus of 48 ontologies mostly downloaded fromthe University of Manchester TONES repository(TONES, 2010).
The corpus covers ontologies ofvarying expressivity and subject-matter, includingsome well-known tutorial examples (pets, pizzas)and topics of general interest (photography, travel,heraldry, wine), as well as some highly technicalscientific material (mosquito anatomy, worm on-togeny, periodic table).
Overall, our sample con-tains around 45,000 axioms and 25,000 atomicterms.Our first analysis concerns identifier length,which we measure simply by counting the num-ber of words in the identifying phrase.
The pro-gram recovers the phrase by the following steps:(1) read an identifier (or label if one is provided4);(2) strip off the namespace prefix; (3) segment theresulting string into words.
For the third step we4Some ontology developers use ?non-semantic?
identifierssuch as #000123, in which case the meaning of the identifieris indicated in an annotation assertion linking the identifier toa label.134Pattern Frequency PercentageCA v CA 18961 42.3%CA u CA v ?
8225 18.3%CA v ?PA.CA 6211 13.9%[I, I] ?
PA 4383 9.8%[I, L] ?
DA 1851 4.1%I ?
CA 1786 4.0%CA ?
CA u ?PA.CA 500 1.1%Other 2869 6.4%Total 44786 100%Table 2: Axiom pattern frequenciesassume that word boundaries are marked eitherby underline characters or by capital letters (e.g.,battle of trafalgar, BattleOfTrafalgar), arule that holds (in our corpus) almost without ex-ception.
The analysis (figure 1) reveals that phraselengths are typically between one and four words(this was true of over 95% of individuals, over90% of classes, and over 98% of properties), asin the following random selections:Individuals: beaujolais region, beringer, bluemountains, bondi beachClasses: abi graph plot, amps block format, abat-toir, abbey churchProperties: has activity, has address, has aminoacid, has aunt in lawOur second analysis concerns axiom patterns,which we obtain by replacing all atomic termswith a symbol meaning either individual, class,property, datatype or literal.
Thus for example theaxioms Admiral v Sailor and Dog v Animalare both reduced to the form CA v CA, wherethe symbol CA means ?any atomic class term?.
Inthis way we can count the frequencies of all thelogical patterns in the corpus, abstracting from thedomain-specific identifier names.
The results (ta-ble 2) show an overwhelming focus on a smallnumber of simple logical patterns5.
Concern-ing class constructors, the most common by farwere intersection (C u C) and existential restric-tion (?P.C); universal restriction (?P.C) was rel-atively rare, so that for example the pattern CA v?PA.CA occurred only 54 times (0.1%)6.5Most of these patterns have been explained already; theothers are disjoint classes (CAuCA v ?
), equivalent classes(CA ?
CA u ?PA.CA) and data property assertion ([I, L] ?DA).
In the latter pattern, DA denotes a data property, whichdiffers from an object property (PA) in that it ranges overliterals (L) rather than individuals (I).6If C v ?P.D means ?Every admiral commands a fleet?,C v ?P.D will mean ?Every admiral commands only fleets?
(this will remain true if some admirals do not command any-thing at all).The preference for simple patterns was con-firmed by an analysis of argument struc-ture for the OWL functors (e.g., SubClassOf,IntersectionOf) that take classes as arguments.Overall, 85% of arguments were atomic termsrather than complex class expressions.
Interest-ingly, there was also a clear effect of argument po-sition, with the first argument of a functor beingatomic rather than complex in as many as 99.4%of cases7.5 DiscussionOur results indicate that although in principle theconsensus model cannot guarantee transparent re-alisations, in practice these are almost always at-tainable, since ontology developers overwhelm-ingly favour terms and axioms with relatively sim-ple content.
In an analysis of around 50 ontologieswe have found that over 90% of axioms fit a mereseven patterns (table 2); the following examplesshow that each of these patterns can be verbalisedby a clear unambiguous sentence ?
provided, ofcourse, that no problems arise in lexicalising theatomic terms:1.
Every admiral is a sailor2.
No sailor is a landlubber3.
Every admiral commands a fleet4.
Nelson is the victor of Trafalgar5.
Trafalgar is dated 18056.
Nelson is an admiral7.
An admiral is defined as a person that com-mands a fleetHowever, since identifiers containing 3-4 wordsare fairly common (figure 1), we need to considerwhether these formulations will remain transpar-ent when combined with more complex lexical en-tries.
For instance, a travel ontology in our cor-pus contains an axiom (fitting pattern 4) which ourprototype verbalises as follows:4?.
West Yorkshire has as boundary the WestYorkshire Greater Manchester Boundary Frag-mentThe lexical entries here are far from ideal: ?hasas boundary?
is clumsy, and ?the West YorkshireGreater Manchester Boundary Fragment?
has as7One explanation for this result could be that develop-ers (or development tools) treat axioms as having a topic-comment structure, where the topic is usually the first ar-gument; we intend to investigate this possibility in a furtherstudy.135many as six content words (and would benefitfrom hyphens).
We assess the sentence as ugly butunderstandable, but to draw more definite conclu-sions one would need to perform a different kindof empirical study using human readers.6 ConclusionWe conclude (a) that existing ontologies can bemostly verbalised using the consensus model, and(b) that an editing tool based on relatively simplelinguistic patterns would not inconvenience on-tology developers, but merely enforce constraintsthat they almost always respect anyway.
Theseconclusions are based on analysis of identifier andaxiom patterns in a corpus of ontologies; they needto be complemented by studies showing that theresulting verbalisations are understood by ontol-ogy developers and other users.AcknowledgmentsThe research described in this paper was un-dertaken as part of the SWAT project (Seman-tic Web Authoring Tool), which is supported bythe UK Engineering and Physical Sciences Re-search Council (EPSRC) grants G033579/1 (OpenUniversity) and G032459/1 (University of Manch-ester).
Thanks are due to the anonymous ACL re-viewers and to colleagues on the SWAT project fortheir comments and suggestions.ReferencesF.
Baader, I. R. Horrocks, and U. Sattler.
2005.
De-scription logics as ontology languages for the se-mantic web.
Lecture Notes in Artificial Intelligence,2605:228?248.Anne Cregan, Rolf Schwitter, and Thomas Meyer.2007.
Sydney OWL Syntax - towards a ControlledNatural Language Syntax for OWL 1.1.
In OWLED.Norbert Fuchs and Rolf Schwitter.
1995.
Specifyinglogic programs in controlled natural language.
InCLNLP-95.Adam Funk, Valentin Tablan, Kalina Bontcheva,Hamish Cunningham, Brian Davis, and SiegfriedHandschuh.
2007.
CLOnE: Controlled Lan-guage for Ontology Editing.
In 6th Interna-tional and 2nd Asian Semantic Web Conference(ISWC2007+ASWC2007), pages 141?154, Novem-ber.Glen Hart, Martina Johnson, and Catherine Dolbear.2008.
Rabbit: Developing a control natural lan-guage for authoring ontologies.
In ESWC, pages348?360.Matthew Horridge, Nicholas Drummond, John Good-win, Alan Rector, Robert Stevens, and Hai Wang.2006.
The Manchester OWL syntax.
In OWL:Experiences and Directions (OWLED?06), Athens,Georgia.
CEUR.Ian Horrocks.
1997.
Optimising Tableaux DecisionProcedures for Description Logics.
Ph.D. thesis,University of Manchester.K.
Kaljurand and N. Fuchs.
2007.
Verbalizing OWLin Attempto Controlled English.
In Proceedings ofOWL: Experiences and Directions, Innsbruck, Aus-tria.Holger Knublauch, Ray W. Fergerson, Natalya Frid-man Noy, and Mark A. Musen.
2004.
The Prote?ge?OWL Plugin: An Open Development Environmentfor Semantic Web Applications.
In International Se-mantic Web Conference, pages 229?243.Boris Motik, Peter F. Patel-Schneider, and Bijan Par-sia.
2010.
OWL 2 web ontology language:Structural specification and functional-style syn-tax.
http://www.w3.org/TR/owl2-syntax/.
21stApril 2010.R.
Schwitter and M. Tilbrook.
2004.
Controlled nat-ural language meets the semantic web.
In Pro-ceedings of the Australasian Language TechnologyWorkshop, pages 55?62, Macquarie University.X.
Sun and C. Mellish.
2006.
Domain IndependentSentence Generation from RDF Representations forthe Semantic Web.
In Proceedings of the CombinedWorkshop on Language-Enabled Educational Tech-nology and Development and Evaluation of RobustSpoken Dialogue Systems (ECAI06), Riva del Garda,Italy.TONES.
2010.
The TONES ontology repository.http://owl.cs.manchester.ac.uk/repository/browser.Last accessed: 21st April 2010.136
