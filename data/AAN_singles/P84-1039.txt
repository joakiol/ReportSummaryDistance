PANELNATURAL LANGUAGE AND DATABASES, AGAINKaren Sparck JonesComputer Laboratory, University of CambridgeCorn Exchange Street, Cambridge CB2 3QG, EnglandINTRODUCTIONNatural Language and Databases has been acommon panel topic for some years, partly becauseit has been an active area of work, but moreimportantly, because it has been widely assumedthat database access is a good test environment forlanguage research.
I thought the time had come tolook again at this assumption, and that it would beuseful, for COLING 84, to do this.
I thereforeinvited the members of the Panel tospeak to the proposition (developed below) thatdatabase query is no longer a good, let alnethe best, test environment for languageprocessing research, because it isinsufficiently demanding in its linguisticaspects and too idiosyncratically demanding inits non-linguistic ones;and topropose better task environments for languageunderstanding research, without thedisadvantages of database query, but with itscrucial advantage of an independent evaluationtest.DATABASES:PROS, CONS, AND WHAT INSTEAD?Database query has a long and honourablehistory as a vehicle for natural language research.Its value for this purpose was restated, forexample, by Bonnie Webber at IJCAI-83 (Webber1983).
I nevertheless think it is now time toquestion the value of database query as acontinuing vehicle for language research.Database query has two major points in itsfavour.
The task is relatively restricted, sosuccess in building a front end does not depend onsolving all the problems of language and knowledgeprocessing at once.
More importantly, the taskprovides a hard, rather than soft, test environmentfor a language processor: the processor'sperformance is independently evaluated via itsoutput formal search query.Natural language research has profited inthe past from the restrictions on the databasetask: its limited linguistic functions and worldreferences have allowed concentration on, and henceprogress in dealing with, obvious problems oflanguage and knowledge processing.
But I believethat database query is reaching the end of itsutility for fundamental research on naturallanguage understanding, for two reasons.The first is that current database systemsare too impoverished to ca l l  for some importantlanguage-processing capabilities in their frontends, so work on these capabilities is discouraged.Obvious examples of the expressive poverty oftypical database systems include their lack ofresources for handling, at all properly, suchimportant components of text meaning as qualifyingconcepts like negat ion  and a variety ofquantifiers; intensional concepts including metadescription, modality, presupposition, differentsemantic relations, and constraints of all sorts;and the full range of linguistic functionssubsumable under the heading of speech acts.
Moregenerally, the nature of the task means that manytypical requirements of language understanding,e.g.
the determination of the domain of discourseand hence senses of words, and many typical formsof language use, e.g.
interactive dialogue, arenever investigated.
(Though attempts may be made,forced by the way natural language is actually usedin input, to handle some of these phenomena viasuperimposed knowledge bases, this does notundermine my general point: the additionalresources are merely devices for reducing therichness of natural language expressions to obtainsensible database mappings.
)The second reason for doubting thecontinuing utility of database query as a field fornatural language research, is that the autonomouscharacteristics of database systems imposeidiosyncratic constraints on the language processorthat are of no wider interest for natural languageunderstanding in general.
Most of the problemslisted by Robert Moore at ACL-82 (Moore 1982) fallinto this class, as do many of those identified by,for example, Templeton and Burger (1983).
Theexamples include database-specific quantifierinterpretation, quantity determination, proceduresfor mapping to compound attributes, techniques fordealing with open value word sets, and rippingapart complex queries.
Further, even more databaseoriented, problems include, for instance, pathoptimisation, parallel (coroutine based) queryevaluation, and null values.These problems can be very intractable forindividual data models or databases, and as thesolutions tend to be ad hoe and specialised, theissues are essentially diversions from research onmore pervasive language phenomena and functions,and hence on generally relevant languageunderstanding procedures.182This is of course not to deny that databaseaccess presents many perfectly 'ordinary' languageinterpretation problems.
The crux is whether thecentral interpretive process, mapping from languageconcepts onto database ones, is sufficiently likethe interpretation procedures required for othernatural language using functions, for it to be anappropriate study model for these.I believe that much of the attraction ofthe database case comes from the stimulus tologic-based meaning representation provided by theformal database query languages into which naturallanguage questions are usually ultimately mapped.The database application naturally appeals to thosewho believe that the meanings of natural languagetexts should be expressed in something like firstorder logic.But current data languages, howeverlogical, are very limited.
More importantly, theyare geared to data models expressing properties ofdatabases that are manifestly artificial, and arenot properties of the real worlds with whichnatural language is concerned.
Third normal formis a property of this kind.
I do not believe thatthird normal form has got anything to do with themeaning of natural language expressions.
But theultimate consequence of working with present datamodels is behaving as if it does.
This is clearlyunsatisfactory.
I am of course not attacking theidea of logical meaning representations.
What I amclaiming is that the database application is aninadequate test environment for natural languageunderstanding systems.One argument for continuing with databasequery processing must therefore be that thosemainstream language handling problems which doarise have not been fully resolved, so it islegitimate to concentrate on these, in what is aconvenient test environment, and defer an attack onother language processing tasks.
The second is thatthere are ill-understood knowledge handlingoperations triggered by and interacting withlanguage processing that are not specialised to onecontemporary computational task, but aresufficiently typical of a whole range of otherknowledge processing tasks to justify further studyin the exemplary database case.Without wishing to imply that the databasequery function is all wrapped up (or doubting theneed for much further system engineering), I do notthink these arguments are strong, simply because itis impossible to disentangle general languageproblems from database ones, and database problemsfrom current highly restricted data models andimplementations.
Moore's example of time and tenseillustrates this very well.
Time informationdetermination problems arise in database questions;but because of the database domain context, theyare typically only an arbitrary subset of thoseordinarily occurring, and require interpretiveresponses biassed to the particular time conceptsof the database.
It may be that finding anythingout about time interpretation, even in a limitedcontext, is of some use.
~t  it is surely betterto consider time interpretation in the moremotivated way allowed by a richer environmentinvolving a fuller range, or at least lessarbitrarily selected set, of temporal concepts thanthose of current databases.My point is that to make progress innatural language research in the next five to tenyears we need the stimulus of a new applicationcontext.
This must meet the following criteria: itmust be more 'central' to language understandingthan database query; it must be harder, withoutoverwhelming us with its difficulty; and we shouldpreferably be able to make a start on it byexploiting what we have learnt from the databaseapplication.
But most importantly, the new taskmust have built-in evaluation criteria for theperformance of language processors.
This is moredifficult to achieve with systems whose entirefunction is language processing, like translation,than with systems where natural language processingis required for the system's external worldinterface; but it is still possible to evaluatetranslation, for example, or summarising,reasonably objectively: the problem is the sheereffort involved.Some candidate applications meeting thesecriteria are:natural language interfaces to conventionalcomputing systems (e.g.
operating systems,numerical packages, etc.
)natural language interfaces to expert systemsnatural language interfaces to robotsnatural language interfaces to teachingsystemsAll of these meet the evaluation requirement; whatrequires examination is the extent to whichnon-trivial back end systems (e.g.
a robot moreinteresting than SHRDLU) would be too severe achallenge for language processing.
It is notnecessary, in this context of principle, to basechoices on potential market interest: expertsystems would score here, presumably.
However itis necessary to consider the expected'technological' plausibility for the requirementfor a natural language interface e.g.
to a robot.These candidates are for interface systems.Should we instead be renewing the attack onlanguage systems, e.g.
for translation orsummarising; or upgrading semi-linguistic systemslike those for document retrieval?REFERENCESWebber, B.L.
'Pragmatics and database questionanswering', IJCAI-83, Proceedings of the EighthInternational Joint Conference on ArtificialIntelligence, 198-3~ 204-205.Moore, R.C.
'Natural-language access to databases -theoretical~technical issues', Proceedings of the20th Annual Meeting of the---Association forComputational Linguistics ' 1982, ~4-45.Templeton, M. and Burger, J.
'Problems innatural-language interface to DBMS with examplesfrom EUFID', proceedings of the Conference onApplied Natural Language Processing, 1983, 3-16.183
