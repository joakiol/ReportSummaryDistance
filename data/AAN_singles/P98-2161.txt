Integration of Large-Scale Linguistic Resources in a NaturalLanguage Understanding SystemLewis M. Norton, Deborah A. Dahl, Li Li, and Katharine P. BealsUnisys Corporation2476 Swedesford RoadMalvern, PA USA 19355{ norton,dahl,lli.beals } @tr.unisys.comAbstractKnowledge acquisition is a serious bottleneckfor natural language understanding systems.For this reason, large-scale linguistic resourceshave been compiled and made available byorganizations such as the Linguistic DataConsortium (Comlex) and Princeton University(WordNet).
Systems making use of theseresources can greatly accelerate thedevelopment process by avoiding the need forthe developer to re-create this information.In this paper we describe how we integratedthese large scale linguistic resources into ournatural language understanding system.
Client-server architecture was used to make a largevolume of lexical information and a largeknowledge base available to the system atdevelopment and/or un time.
We discussissues of achieving compatibility between thesedisparate resources.1 NL EngineNatural anguage processing in the Unisys naturallanguage understanding (NLU) system (Dahl,Norton and Scholz (1998), Dahl (1992)) is done bya natural language (NL) engine with thearchitecture shown in Figure 1.
Processing stagesinclude lexicai lookup, syntactic parsing, semanticanalysis, and pragmatic analysis.
Each stage hasbeen designed to use linguistic data such as thelexicon and grammar, which are maintainedseparately from the engine, and can easily beadapted to specific applications.2 Linguistic ~;erversThe template NL Engine, on which all NL Engineapplications are based, contains lexical informationfor about 3000 English words.
This includesinformation on an exhaustive set of closed-classwords -- prepositions, pronouns, conjunctions, etc.It also includes information for a few hundred of themost frequently-used words in each of the open-class word classes, the nouns, verbs, adjectives andadverbs.
An NL Toolkit enables a developer toenter such information for additional wordsmanually.
Since the core vocabulary of 3000words is insufficient for any real application,manual development could be a substantial task.Our linguistic servers are provided to greatly reducethe magnitude of that task.
The servers contain thenecessary information for many more words thanthe base system.
This information can be extractedat development time, modified if appropriate (forinstance, an application may not need all senses of aword), and included in the NL Engine application.The linguistic servers may or may not be present atrun time of a fully-developed application (at thedeployer's choice).When information about a word is needed uringprocessing, the available lexical resources areaccessed in the following order:1. application-specific vocabulary supplied by thedeveloper (either manually or by extractionfrom the linguistic servers).2. the core 3000-word vocabulary.3.
the linguistic servers, if present.9804.
Finally, if the required information is not foundin any of the linguistic resources, there aredefault assumptions for all linguisticinformation, to be described later.There are four linguistic servers, corresponding tothe four major categories of lexical informationused in our system: lexicon, knowledge base,denotations, and semantics.2.1 Lexicon ServerThe lexicon server is based on Comlex, a machine-readable dictionary which was developed at NewYork University and distributed by the LinguisticData Consortium (Grishman, Macleod and Wolf(1993)).
Comlex contains detailed syntacticinformation for about 45,000 English words,including part of speech, morphological variations,lexical features, and subcategorizations.Relatively little effort was needed to convertComlex into a form usable by our system.
Asimple PERL program performed a conversionfrom the LISP syntax used for Comlex into Prolog,the language used for our system.
Second, thefeatures and subcategorizations represented inComlex are encoded in terms of grammaticalconcepts first developed at NYU in the 1970's byNaomi Sager (Sager (1981)).
The Unisys NLUsystem's yntactic omponent is based on Sager'swork.
As a result, little more than some namesubstitution was necessary to make the Comlexinformation usable by our system.2.2 Knowledge Base ServerThe knowledge base server is based on WordNet, amachine-readable hi rarchical network of conceptswhich was developed and distributed by PrincetonUniversity (Miller (1990)), and on work done at theInformation Sciences Institute (ISI) of theUniversity of Southern California.
Concepts inWordNet do not have names -- they are just sets ofwords (calledsynsets).
ISI has supplied mnemonicnames for the WordNet synsets and made themgenerally available to the WordNet community.
(Examples of some of the ISI concept names can beseen in Figure 2.)
The WordNet conceptscorrespond to real-world entities and phenomena interms of which people understand the meanings ofwords.
Our knowledge base server is currentlyconcerned with only the concepts corresponding tonouns, because our system makes little use ofhierarchical information about other parts ofspeech.'
There are about 60,000 of these nounconcepts in WordNet, including ancestor conceptswhich provide a taxonomy to the concept set.Conversion of the WordNet KB was alsostraightforward.
WordNet files in Prolog are partof the standard WordNet distribution.
Therefore,the bulk of the task involved routine reformattinginto the primitives of the Unisys NLU system.
Oursystem already made use of a semantic networkknowledge representation system known as M-PACK, a KL-ONE (Brachman and Schmolze(1985)) derivative which supports multipleinheritance.
Our core system has a small M-PACKknowledge base, which we wanted to retain both topreserve compatibility with old applications andbecause it contained useful concepts which were notpresent in WordNet.
To merge the two KBs, allwe needed to do was to make each of the 11 uniquebeginners for WordNet noun hierarchies immediatechildren of appropriate concepts in our knowledgebase.
Making use of multiple inheritance, we alsoprovided is-a links between selected WordNetsynsets and the appropriate concepts in our smallKB.
For example, while our original KB containeda concept city_C, WordNet has two disjointsubtrees of cities (roughly corresponding tocitieswhich are administrative c nters uch as capitals,and those which are not).
By making both of thesesubtrees children of city_C we achieved the neededgeneralization, asshown in Figure 2.2.3 Denotations ServerThe denotations server, also based on WordNet andthe ISI name list, provides the links between wordsand KB concepts, thereby integrating Comlex andWordNet.
Because many nouns have multiplesenses, the denotations server has over 100,000such links for English nouns.
A word is said todenote one or more concepts, according to these' Our knowledge base server does contain aspectinformation for verb senses; this information wascompiled at Unisys, not from WordNet.981links.
Figure 3 illustrates this many-to-manyrelationship.
In WordNet he senses of a word areordered by their frequency of use in English, andour denotations server preserves this ordering.
Thedenotations server supplies information to the NLEngine enabling it to extract from the knowledgebase server the concepts denoted by the wordsextracted from the lexicon server.
Also extractedare the ancestor concepts for the denoted concepts.Thus, for example, the NL Engine "knows" afterextraction that Boston and Philadelphia re bothcities.2.4 Semantics ServerThe semantics server, based on data compiled byour group at Unisys, supplies information about hesemantic structure of concepts associated withEnglish words, particularly verbs.
For example, theverb abridge has an associated case frameconsisting of an agent doing the abridging and anoptional theme that is being abridged.
Furthermore,in an English sentence using the verbabridge, theagent is typically found in the subject and the themein the object.
Words other than verbs can havesimilar information.
The semantics server containssuch information for about 4300 words, mostlyverbs; the verbs account for over 60% of the verbsin Comlex.There needs to be consistency between theinformation in the lexicon and semantics servers.For example, every verb which is declared to beditransitive in Comlex should have a semantic rulemapping both the object and indirect object odistinct roles such as theme and goal.
Wedeveloped a semi-automatic ool which examinedevery verb which had rules in the semantics server,and based on the lexical entry for that verb, addedadditional semantic rules to account for all of theverb's subcategorizations, or object options.
Theseautomatically fabricated rules were not alwayscorrect (the prepositionagainst does not alwaysimply an opposing force, for instance), but theywere a good start.
The most difficult manual taskin reviewing these rules had to do with the issue ofverb senses.
Because verb senses are not separatedin Comlex entries, the tool assumed that all thelexical subcategorizations of a verb applied to asingle verb sense.
When this was not the case, thesemantic rules had to be divided into subsets foreach individual sense, a process that we could notdo automatically.3 Default Linguistic InformationIf information about a word is not found in any ofour linguistic resources, the NL Engine can guessthe required information.
An unknown word will beassumed to be a proper noun, denoting adynamically-created concept in the application'sknowledge base, inserted as a child of our top-levelconcept "thing".
A verb with no semanticinformation will be assigned roles such as agent ortheme based on the syntax of the input utteranceand statistical information about usage of theseroles generally in other English verbs (Dahl(1993)).
The default guesses are frequentlysufficient for the NL Engine to make a usableinterpretation f an input utterance containing anunknown word.4 LAN OperationEach linguistic server can be used to respond tomultiple developers, or to multiple instances of arun-time NLU application.
The servers can be runon separate processors (running under eitherWindows NT or UNIX), connected by a LAN.This minimizes the cost of utilizing the servers,which although they are relative large processes,can support many clients efficiently.5 EvaluationWe analyzed a small corpus of 1330 sentences (onthe subject of our NLU system) in order to give aquantitative description of the contribution of ourlexicon and semantics servers.
Our corpuscontained forms of 526 distinct roots.
Over 60% ofthese roots had definitions in our core vocabulary.Definitions for an additional 25% were extractedfrom the lexicon server.
Analysis of the remaining71 roots showed that a developer would haveneeded to enter definitions for 20 common ouns, 2verbs, and 2 adjectives; the rest were truly propernouns as assigned by default.
The 24 roots not982covered were for the most part instances oftechnical jargon for our domain?For the 215 verbs in our corpus, again over 60%had semantic rules in our core NL Engine.
Oursemantics server contributed rules for an additional38%, leaving our developer with the need to writerules (or rely on guessed efault rules) for only 2verbs.
These results are summarized in Table 1.Thus, in this application the servers would haveenabled the developer to avoid creating 132 lexicalentries and 82 semantic rules.
In addition, thedefault mechanism would have eliminated the needfor manual entry of 47 more lexical entries.in corein servernot presenttotalLexiconServer323 (61.5%)132 (25%)71 (14.5%)526 (100%)SemanticsServer131 (61%)82 (38%)2(1%)215 (100%)Table 1ConclusionWe have successfully integrated diverse large-scalelinguistic resources, both externally and internallycompiled, using a client-server a chitecture, for usewith a general-purpose natural languageunderstanding system.
The conversion of resourcessuch as Comlex and WordNet into a format usableby our system was straightforward, and theresulting complex of resources executes withoutany performance problems in a multi-userenvironment.
The task of a developer of aparticular natural language application is greatlysimplified by the presence of these resources.In the future we plan to incorporate WordNetinformation for verbs into our KB server, and toadd semantics rules for the remaining Comlex verbsinto the semantics server.
We also expect oaugment the semantics server with semantic lassconstraints on the fillers of roles such as agent, andto create a fifth server, containing selectionconstraints.ReferencesBrachman R. J. and Schmolze I. G. (1985) Anoverview of the KL-ONE knowledge representationsystem.
Cognitive Science 9/2, pp.
171-216.DaM D.A.
(1992) .Pundit natural languageinterfaces.
In "Logic Programming in Action", G.Comyn, N.E.
Fuchs, and M.J. Ratcliffe, eds.,Springer-Verlag, Heidelberg, Germany, pp.
176-185.Dahl D.A.
(1993) Hypothesizing case frameinformation for new verbs.
In "Principles andPrediction: The Analysis of Natural Language", M.Eid and G. Iverson, eds., John Benjamin PublishingCo., Philadelphia, Pennsylvania, pp.
175-186.Dahl D.A., Norton L.M.
and Scholz, K.W.
(1998).Commercialization f Natural Language ProcessingTechnology.
Communications of the ACM, in press.Grishman R., Macleod C. and Wolf S. (1993) TheComlex syntax project.
Proceedings of the ARPAHuman Language Technology Workshop, MorganKaufman, pp.
300-302.Miller G. (1990) Five Papers on WordNet.International Journal of Lexicography.Sager N. (1981) Natural Language InformationProcessing.
Addison-Wesley, Reading,Massachusetts, 399 p.word conc~t wordgunpoint C~_muzzle<mouth--C ~ '~muzzle2 It is somewhat ironic that the words database andparser are not in Comlex!Figure 3.
The denotes relation is many-to-many983ringuistic serversrlexical processingnatural anguage processingflsemant ic  ~represenCa ih~nfinal-'semanticsI--1 processingmod alesdata supplied toprocessing modulesFigure 1.
Overall System ArchitectureI I- lo~,tion_property_C ~ ~ ~ -- ~ ~ --.f ~ -~"-~--- ~-- ~ - ~ " ~, city_C '~ \ / location~region C ~ TM \ \/ d i s t r i c t ~ r e g i ?
n > _  / thland C \ \ \ \ \ \  ~ ~ ~  \" \\!te r r i to r ia l~  / geographic_area C \ \ Ph,ladelphm_C ,\ \ /I seat\[city C mun ic ipa l i l y~a__C \ \\ II capital<seat__.C' I\ \ state-lapital--C\ Boston Curban_center.....C \I \' I Miami__(?
//WordNet.bas edKBFigure 2.
Integration of KB Server data with core KB(WordNet-based KB concept names from ISI -- see text)984
