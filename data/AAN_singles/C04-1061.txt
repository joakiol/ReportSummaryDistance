Machine-Assisted Rhetorical Structure AnnotationManfred Stede and Silvan HeintzeUniversity of PotsdamDept.
of LinguisticsApplied Computational LinguisticsD-14415 PotsdamGermanystede|heintze@ling.uni-potsdam.deAbstractManually annotating the rhetorical struc-ture of texts is very labour-intensive.
At thesame time, high-quality automatic analysisis currently out of reach.
We thus propose tosplit the manual annotation in two phases:the simpler marking of lexical connectivesand their relations, and the more difficultdecisions on overall tree structure.
To thisend, we developed an environment of twoanalysis tools and XML-based declarativeresources.
Our ConAno tool allows for effi-cient, interactive annotation of connectives,scopes and relations.
This intermediate re-sult is exported to O?Donnell?s ?RST Tool?,which facilitates completing the tree struc-ture.1 IntroductionA number of approaches tackling the difficultproblem of automatic discourse parsing havebeen proposed in recent years (e.g., (Sumitaet al, 1992) (Marcu, 1997), (Schilder, 2002)).They differ in their orientation toward sym-bolic or statistical information, but they all ?quite naturally ?
share the assumption thatthe lexical connectives or discourse markers arethe primary source of information for construct-ing a rhetorical tree automatically.
The den-sity of discourse markers in a text depends onits genre (e.g., commentaries tend to have morethan narratives), but in general, it is clear thatonly a portion of the relations holding in a textis lexically signalled.1 Furthermore, it is well-known that discourse markers are often ambigu-ous; for example, the English but can, in termsof (Mann, Thompson, 1988), signal any of therelations Antithesis, Contrast, and Concession.Accordingly, automatic discourse parsing focus-ing on connectives is bound to have its limita-tions.1In our corpus of newspaper commentaries (Stede,2004), we found that 35% of the coherence relations aresignalled by a connective.Our position is that progress in discourseparsing relies on the one hand on a more thor-ough understanding of the underlying issues,and on the other hand on the availability ofhuman-annotated corpora, which can serve asa resource for in-depth studies of discourse-structural phenomena, and also for trainingstatistical analysis programs.
Two examplesof such corpora are the RST Tree Corpus by(Marcu et al, 1999) for English and the Pots-dam Commentary Corpus (Stede, 2004) forGerman.
Producing such resources is a labour-intensive task that requires time, trained anno-tators, and clearly specified guidelines on whatrelation to choose under which circumstances.Nonetheless, rhetorical analysis remains to bein part a rather subjective process (see section2).
In order to eventually arrive at more objec-tive, comparable results, our proposal is to splitthe annotation process into two parts:1.
Annotation of connectives, their scopes(the two related textual units), and ?
op-tionally ?
the signalled relation2.
Annotation of the remaining (unsignalled)relations between larger segmentsStep 1 is inspired by work done for Englishin the Penn Discourse TreeBank2 (Miltsakakiet al, 2004).
In our two-step scenario, it is theeasier part of the whole task in that connectivescan be quite clearly identified, their scopes areoften (but not always, see below) transparent,and the coherence relation is often clear.
We seethe result of step 1 as a corpus resource in itsown right (it can be used for training statisticalclassifiers, for instance) and at the same timeas the input for step 2, which ?fills the gaps?
:now annotators have to decide how the set ofsmall trees produced in step 1 is best arrangedin one complete tree, which involves assigning2http://www.cis.upenn.edu/?pdtb/relations to instances without any lexical sig-nals and also making more complicated scopejudgements across larger spans of text ?
themore subjective and also more time-consumingstep.3Our approach is as follows.
To speed up theannotation process in step 1, we have devel-oped an XML format and a dedicated analysistool called ConAno, which will be introducedin Section 4.
ConAno can export the anno-tated text in the ?rs3?
format that serves as in-put to O?Donnell?s RST Tool (O?Donnell, 1997).His original idea was that manual annotation bedone completely with his tool; we opted howeverto use it only for step 2, and will motivate thereasons for this overall architecture in Section5.The net result is a modular, XML-basedannotation environment for machine-assistedrhetorical analysis, which we see as on the onehand less ambitious than fully-automatic dis-course parsing and on the other hand as moreefficient than completely ?manual?
analysis.2 Approaches to rhetorical analysisThere are two different perspectives on the taskof discourse parsing: an ?ideal?
one that aimsat modelling a systematic, incremental process;and an ?empirical?
one that takes the experi-ences of human annotators into account.
?Ide-ally?, discourse analysis proceeds incrementallyfrom left to right, where for each new segment,an attachment point and a relation (or morethan one of each, cf.
SDRT) are computed andthe discourse structure grows step by step.
Thisview is taken for instance in SDRT (Asher, Las-carides, 2003), which places emphasis on the no-tion of ?right frontier?
(also discussed recently by(Webber et al, 2003)).However, when we trained two (experienced)students to annotate the 171 newspaper com-mentaries of the Potsdam Commentary Corpus(Stede, 2004) and upon completion of the taskasked them about their experiences, a very dif-ferent picture emerged.
Both annotators agreedthat a strict left-to-right approach is highly im-practical, because the intended argumentativestructure of the text often becomes clear onlyin retrospect, after reflecting the possible con-tributions of the segments to the larger scheme.3This assessment of relative difficulty does not carryover to PDTB, where the annotations are more complexthan in our step 1 but do not go as far as building rhetor-ical structures.Thus they very soon settled on a bottom-up ap-proach: First, mark the transparent cases, inwhich a connective undoubtedly signals a rela-tion between two segments.4 Then, see how theresulting pieces fit together into a structure thatmirrors the argument presented.The annotators used RST Tool (O?Donnell,1997), which worked reasonably well for the pur-pose.
However, since we also have in our groupan XML-based lexicon of German connectivesat our disposal (Berger et al, 2002), why notuse this resource to speed up the first phase ofthe annotation?3 Annotating connectives and theirscopesIn our definition of ?connective?, we largely fol-low (Pasch et al, 2003) (a substantial catalogueand classification of German connectives), whorequire them to take two arguments that canpotentially be full clauses and that semanticallydenote two-place relations between eventualities(but they need not always be spelled out asclauses).
From the syntactic viewpoint, they area rather inhomogeneous group consisting of sub-ordinating and coordinating conjunctions, someprepositions, and a number of sententence ad-verbials.
We refer to the two related units asan ?internal?
and an ?external?
one, where the?internal?
one is the unit of which the connec-tive is actually a part.
For example, in Despitethe heavy rain we had a great time, the nounphrase the heavy rain is the internal unit, sinceit forms a syntactic phrase together with thepreposition.
Notice that this is a case wherethe eventuality (a state of weather) is not madeexplicit by a verb.As indicated, this step of annotating connec-tives and units is closely related to the ideaof the PDTB project, which seeks to developa large corpus annotated with information ondiscourse structure for English texts.
For thispurpose, annotators are provided with detailedannotation guidelines, which point out variouschallenges in the annotation process for explicitas well as empty connectives and their respec-tive arguments.
They include, among others,?
words/phrases that look like connectives,but prove not to take two propositional ar-guments4The clearest cases are subjunctors, which alwaysmark a relation between matrix clause and embeddedclause.?
words/phrases as preposed predicate com-plements?
pre- and post-modified connectives?
co-occurring connectives?
single and multiple clauses/sentences as ar-guments of connectives?
annotation of discontinuous connective ar-gumentsAnnotators have to also make syntactic judge-ments, which is not the case in our approach(where syntax would be done on a different an-notation layer, see (Stede, 2004)).In the following, we briefly explain the mostimportant problematic issues with annotatingGerman connectives and the way we deal withthem, using our annotation scheme for Con-Ano.3.1 Issues with German connectivesConnective or not: Some words can be usedas connective or in other functions, such as und(?and?
), which can for example conjoin clauses(connective) or items in a list (no connective).Which relation: Some connectives can sig-nal more than one relation, as the above-mentioned but and its German counterpart aber.Complex connectives: Connectives can bephrasal (e.g., aus diesem Grund, ?for this rea-son?)
or even discontinuous (e.g., entweder.
.
.
oder, ?either .
.
.
or?).
A fortiori, some maybe used in more than one order (wenn A, dannB / dann B, wenn A / dann, wenn A, B; ?if.
.
.
then .
.
.
?
).Multiple connectives/relations: Someconnectives can be joined to form a complexone, which might then signal more than onerelation (e.g., combinations with und and aber,such as aber dennoch, ?but still?
).Modified connectives: Some but not allconnectives are subject to modification (e.g.,nur dann, wenn, ?only then, if?
; besonders weil,?especially because?
).Embedded segments: The minimal unitslinked by the connective may be embeddedrather than adjacent: Wir mu?ssen, weil die Zeitdra?ngt, uns Montag treffen (?We have to, be-cause time is short, meet on Monday?
).3.2 A DTD and an ExampleAs the first step toward an annotation tool, wedefined an XML format for texts with connec-tives and their scopes.
Figure 1 shows the DTD,and Figure 2 a short sample annotation of asingle ?
yet complex ?
sentence: Auch Berlinkoennte, jedenfalls dann, wenn der Bund sicherkenntlich zeigt, um die Notlage seiner Haupt-stadt zu lindern, davon profitieren.
(?Berlin,too, could ?
at least if the federation showssome gratitude in order to alleviate the emer-gency of its capital ?
profit from it.?)
The DTDintroduces XML tags for each of the connec-tives (<connective>), their possible modifiers(<modifier>) and respective discourse units(<unit>, where the type can be filled by int orext), as well as the entire text (<discourse>).Henceforth, we will refer to the text unit con-taining the connective as the internal, ?int-unit?and to the other, external, one as ?ext-unit?.
Us-ing this DTD, it is possible to represent therange of problematic phenomena discussed inthe previous section.Connective or not: Only those words actu-ally used as connectives will be marked with the<connective> tag, while others such as the fre-quently occurring und (?and?)
or oder (?or?)
willremain unmarked, if they merely conjoin itemsin a list.Which relation: The <connective> tag in-cludes a rel attribute for optional specificationof the rhetorical relation that holds between theconnected clauses.Complex connectives: Using an XMLbased annotation scheme, we can easily markphrasal connectives such as aus diesem Grund(?for this reason?)
using the <connective> tag.In order for discontinuous connectives to be an-notated correctly, we introduce an id attributethat provides every connective with a distinctreference number.
This way connectives such asentweder .
.
.
oder, (?either .
.
.
or?)
can be repre-sented as belonging together.
(see <connectiveid="4" rel="condition"> tags in Figure 2)Multiple connectives/relations: In ourannotation scheme, complex connectives suchas aber dennoch, (?but still?)
are treated as twodistinct connectives that indicate different rela-tions holding between the same units.Modified connectives: Connective modi-fiers are marked with a special <modifier> tag,which is embedded inside the <connective>tag, as shown with jedenfalls modifying dann inour example.
Hence an additional id attributefor this tag is not necessary.Embedded segments: Discourse units aremarked using the <unit> tag, which also pro-vides an id attribute.
On the one hand, thisis used for assigning discourse units to their re-spective connectives, on the other hand it pro-vides a way of dealing with discountinuous dis-course units, as the example shows.<?xml version=?1.0?
encoding=?UTF-8?
?><!ELEMENT modifier (#PCDATA)><!ELEMENT connective (#PCDATA|modifier)><!ATTLIST connectiveid CDATA #IMPLIEDrel CDATA #IMPLIED><!ELEMENT unit(#PCDATA|connective|unit)*><!ATTLIST unitid CDATA #IMPLIEDtype CDATA #IMPLIED><!ELEMENT discourse (#PCDATA|unit)*>Figure 1: The DTD for texts-with-connectives<?xml version="1.0"?><!DOCTYPE discourse SYSTEM "discourse.dtd"><discourse><unit type="ext" id="4">Auch Berlin koennte,<connective id="4"relation="condition"><modifier>jedenfalls</modifier>dann</connective>,</unit><unit type="int" id="4"><connective id="4"relation="condition">wenn</connective>der Bund sich erkenntlich zeigt, umdie Notlage seiner Hauptstadt zulindern,</unit><unit type="ext" id="4">davon profitieren.</unit></discourse>Figure 2: Sample annotation in XML-format4 The ConAno annotation toolA range of relatively generic linguistic annota-tion tools are available today, but none of themturned out suitable for our purposes: We seek avery easy-to-use, platform-independent tool formouse-marking ranges of text and having themassociated with one another.
Consequently, wedecided to implement our own Java-based tool,ConAno, which is geared especially to connec-tive/scope annotation and thus can have a veryintuitive user interface.Just like discourse parsers do, ConAno ex-ploits the fact that connectives are the most re-liable source of information.
Rather than at-tempting an automatic disambiguation, how-ever, ConAno merely makes suggestions to thehuman analyst, which she might follow or dis-card.
In particular, ConAno loads a list of(potential) connectives, and when annotationof a text begins, highlights each candidate sothat the user can either confirm (by marking itsscope) or discard (by mouse-click) it if it notused as a connective.
Furthermore, the connec-tive list optionally may contain associated co-herence relations, which are then also offered tothe user for selection.
This annotation phaseis thus purely data-driven: Attention is paidonly to the connectives and their specific rela-tion candidates.To elaborate a little, the annotation processproceeds as follows.
The text is loaded into theannotation window, and the first potential con-nective is automatically highlighted.
Potentialpreposed or postposed modifiers, if any, of theconnective are also highlighted (in a differentcolor).
The user moves with the mouse fromone connective to the next and?
can with a mouseclick discard a highlighteditem (it is not a connective or not a modi-fier),?
can call up a help window explaining thesyntactic behavior and the relations of thisconnective,?
can call up a suggestion for the int-unit(i.e., text portion is highlighted),?
can analogously call up a suggestion for theext-unit,?
can choose from a menu of the relationsassociated with this connective.A screenshot is given in Figure 4.
The sugges-tions for int-unit and ext-unit are made by Co-nAno on the basis of the syntactic category ofFigure 3: Screenshot of ConAnothe connective; we use simple rules like ?searchup to the next comma?
to find the likely int-unit for a subjunctor, or ?search the precedingtwo full-stops?
to find the ext-unit for an adver-bial (the preceding sentence).
The suggestionsmay be wrong; then the user discards them andmarks them with the mouse herself.
The resultof this annotation phase is an XML file like the(very short) one shown in Figure 2.5 Overall annotation environmentA central design objective is to keep the envi-ronment neutral with respect to the languagesof the text, the connectives to be annotated, andthe coherence relations associated with them.Accordingly, the list of connectives is externaland read into ConAno upon startup.
In ourcase, we use an XSLT sheet to map our ?Dis-course Marker Lexicon?
(see below) to the inputformat of ConAno.
The text to be annotatedis expected in plain ASCII.
When annotation iscomplete, the result (or an intermediate result)can be saved in our XML-format introduced insection 3.2.
Optionally, it can be exported tothe ?rs3?
format developed by (O?Donnell, 1997)for his RSTTool.
This allows for a smooth tran-rs3ConAnoRSTToolDiMLexxslt raw texttext with connectives,scopes (and relations)rhetorical treetext with fullFigure 4: Overview of annotation environmentsition to a tool for constructing complete rhetor-ical trees.
Rather than starting from scratch,the RSTTool user can now open the file pro-duced by ConAno, which amounts to a partialrhetorical analysis of the text, and which theuser can now complete to a full tree.Our Discourse Marker Lexikon ?DiMLex?
(Berger et al, 2002) assembles information on140 German connectives, giving a range of syn-tactic, semantic, and pragmatic features, in-cluding the coherence relations along the lines of(Mann, Thompson, 1988).
They are encoded inan application-neutral XML format (see Figure5), which are mapped with XSLT sheets to vari-ous NLP applications.
Our new proposal here isto use it also for interactive connective annota-tion.
Hence, we wrote an XSLT sheet that mapsDiMLex to a reduced list, where each connectiveis associated with syntactic labels coordination,subordination or adverb and <coh-relation>entries for its potential relations ?
see Figure6 for DTD and 7 for an example.
The, forthese purposes quite simple, syn value has beenmapped from the more complex classification inDiMLex under kat (German for category).
Thisformat is the input to ConAno.As indicated above, we do not see the tran-sition to RSTTool as a necessary step.
Rather,the intermediate result of connective/scope an-notation is useful in its own right, as it encodesthose aspects of rhetorical structure that are in-dependent of the chosen set of coherence rela-tions and the conditions of assigning them.6 SummaryWith our work on German discourse connec-tives, the structure of their argument units,and the indicated rhetorical relations, we seeka better understanding of underlying linguisticissues on the one hand, and an easier way ofdeveloping rhetorical structure-annotated cor-pora for German texts on the other hand.
For<?xml version="1.0" ?><?xml-stylesheet type="text/xsl"href="short_dictionary.xsl" ?><!DOCTYPE dictionary SYSTEM "dimlex.dtd"><dictionary><entry id="41"><orth phrasal="0">denn</orth><syn><kat>konj</kat><position>vorvorfeld</position><!-- .
.
.
--></syn><semprag><relation>cause</relation><relation>explanation</relation><presupp>int-unit</presupp><!-- .
.
.
--></semprag><example>Das Konzert muss ausfallen,*denn* die Saengerin ist erkrankt.</example><example>Die Blumen auf dem Balkon sinderfroren, *denn* es hat heutenacht Frost gegeben.</example></entry></dictionary>Figure 5: DiMLex extractthis purpose, we present an annotation envi-ronment, including our ConAno tool, whichhelps human annotators to mark discourse con-nectives and their argument units by findingpossible connectives and making suggestions ontheir estimated argument structure.
We pointedout several challenges in the connective annota-tion process of German texts and introduced anXML based annotation scheme to handle thedifficulties.
For one thing, the results of thisstep provide elobarate information about thestructure of German texts with respect to dis-course connectives, but furthermore they can beused as input to O?Donnell?s RST Tool, in or-der to complete the annotation of the rhetoricaltree structure.
The overall scenario is then oneof machine-assisted rhetorical structure anno-tation.
Since ConAno is based on an externallist of connectives (with associated syntactic la-bels and relations), the tool is not dedicated toone particular theory of discourse structure, letalone to a specific set of relations.
Furthermore,it can in principle deal with texts in various lan-guages (it just relies on string matching between<?xml version=?1.0?
encoding=?UTF-8?
?><!ELEMENT example (#PCDATA)><!ELEMENT coh-relation (#PCDATA)><!ELEMENT sem (example|coh-relation)*><!ELEMENT syn (sem)*><!ATTLIST syntype CDATA #IMPLIED><!ELEMENT part (#PCDATA)><!ATTLIST parttype CDATA #IMPLIED><!ELEMENT orth (part)*><!ATTLIST orthtype CDATA #IMPLIED><!ELEMENT entry (syn|orth)*><!ATTLIST entryid CDATA #IMPLIED><!ELEMENT conanolex (entry)*>Figure 6: DTD for connectives in ConAno in-put format<entry id="116"><orth type="cont"><part type="single">wenn</part></orth><orth type="discont"><part type="single">wenn</part><part type="single">dann</part></orth><syn type="subordination"><sem><coh-relation>condition</coh-relation><example>*Wenn* man auf den Knopfdrueckt, oeffnet sich die Tuervon selbst.</example><example>*Wenn* du mich fragst,*dann* wuerde ich die Fingerdavon lassen.</example></sem></syn></entry>Figure 7: Connective information in ConAnoinput formatconnectives in the list and in the text), but wehave so far used it only for German.AcknowledgementsWe thank the anonymous reviewers for theirconstructive comments and suggestions for im-proving the paper.ReferencesAsher, N. and Lascarides, A.
2003.
Logics ofConversation.
Cambridge University Press.Berger, D.; Reitter, D. and Stede, M. 2002.XML/XSL in the Dictionary: The Case ofDiscourse Markers.
In: Proc.
of the ColingWorkshop ?NLPXML-2002?, Tapei.O?Donnell, M. 1997.
RST-Tool: An RST Analy-sis Tool.
Proc.
of the 6th European Workshopon Natural Language Generation, Duisburg.Mann, W. and Thompson, S. 1988.
RhetoricalStructure Theory: A Theory of Text Organi-zation.
TEXT 8(3), 243-281.Marcu, D. 1997.
The rhetorical parsing of nat-ural language texts.
Proc.
of the 35th AnnualConference of the ACL, 96-103.Marcu, D.; Amorrortu, E. and Romera, M.1999.
Experiments in Constructing a Corpusof Discourse Trees.
In: Proc.
of ACL Work-shop ?Towards Standards and Tools for Dis-course Tagging?, University of Maryland.Miltsakaki, E.; Prasad, R.; Joshi, A. and Web-ber, B.
2004.
Annotating Discourse Connec-tives and their Arguments.
In: Proc.
of theHLT/NAACL Workshop ?Frontiers in CorpusAnnotation?, Boston.Pasch, R; Brausse, U.; Breindl, E. and Wass-ner, H. 2003.
Handbuch der deutschen Kon-nektoren.
Berlin: deGruyter.Schilder, F. 2002.
Robust Discourse Parsing viaDiscourse Markers, Topicality and Position.Natural Language Engineering 8 (2/3).Stede, M. 2004.
The Potsdam CommentaryCorpus.
In: Proc.
of the ACL Workshop ?Dis-course Annotation?, Barcelona.Sumita, K.; Ono, K.; Chino, T.; Ukita, T.;Amano, S. 1992.
A discourse structure ana-lyzer for Japanese text.
Proc.
of the Interna-tional Conference on Fifth Generation Com-puter Systems, 1133-1140.Webber, B.; Knott, A.; Stone, M. and Joshi,2003.
A. Anaphora and Discourse Structure.Computational Linguistics 29(4), 545-588.
