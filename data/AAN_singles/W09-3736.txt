Proceedings of the 8th International Conference on Computational Semantics, pages 320?325,Tilburg, January 2009. c?2009 International Conference on Computational SemanticsWell-formed Default Unification inNon-deterministic Multiple Inheritance HierarchiesChristian Schulz, Jan Alexandersson and Tilman BeckerDFKI, Saarbru?cken1 IntroductionDefault unification represents a fundamental extension of the common uni-fication operation, where even in case of inconsistency between the infor-mation to be merged, there will always be a result.
As default unificationis no longer a commutative operation, a distinction is made between theargument containing default information, the background, and the other ar-gument consisting of non-default information, the cover.An elegant point of departure to formalizing default unification has beendelivered by Carpenter?s credulous default unification (CDU) (Carpenter,1993):F<?cG = {F ?
G?| G??
G is maximal such that F ?
G?is defined}Unlike previous strategies to replace conflicting parts by the non-defaultinformation (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter sug-gests in case of clashes to relax the specificity in the defeasible part toachieve consistency with the non-default structure.
Since the detection ofthe generalized default might not be deterministic, multiple results mayarise.[EntertainmentbeginTime...][BroadcastChannel...]
[PerformanceLocation...](1) User: I?d like to go to the moviestonight.
(2) SmartKom: Here (?)
are thefilms showing in Heidelberg.
(3) User: No, there is nothing inter-esting there,(4) User: what is showing on TV?Figure 1: An excerpt from the SmartKom ontology and the multi-modal interactionof a dialog between the user and the system.
?
denotes the pointing gesture by thepresentation agent.320A CDU formalization in (Alexandersson & Becker, 2007) is used in theSmartKom system (Wahlster, 2006) on the basis of typed feature structures(TFS) and CDU as the knowledge representation and inference mechanism,in order to monitor the discourse processing, where the user?s input, thecover, updates the internal dialogue state, the background, see figure 1.The second crucial point of departure is how Alexandersson and Beckerunderstand to exploit the information inherent to an inheritance hierarchyand henceforward to transfer Carpenter?s notion to a very effective andsound way to specify CDU, which stands in contrast to the formalization by(Grover, Brew, Manandhar, & Moens, 1994)1that suffers from theoreticaland computational drawbacks.This Work (Schulz, 2007) develops an extension to the CDU operationpresented in (Alexandersson & Becker, 2007) for which the CDU algorithmis adapted to deal with multiple inheritance type hierarchies omitting therequirement to be bounded complete.2 Efficient Computation of Well-formed DefaultUnificationThe core result of our work is a refinement of the characterization of CDUas described in (Carpenter, 1993) along with a revision of the algorithmpresented in (Alexandersson & Becker, 2007).
By identifying basic scenar-ios, see figure 2, we have gained insights into the limitations of Carpenteras described below and identified the resulting deficits of the algorithm inAlexandersson and Becker.
Crucial facets of our work include efficient lat-tice operations, for the calculation of maximal lower bound (mlb) and min-imal upper bound (mub).
During CDU we suggest that the well-formednesscondition on TFS formulated in (Copestake, 1992) is met.
The two-stageprocedural approach of the CDU mechanism is as the following:1 Assimilation is a preprocessing step that first computes the target types for thecover and background; the Type Preprocessing.
Next, the cover and the backgroundwill be translated to their appropriate target types by the operations Specializationand Generalization respectively.2 Overlay?
performs type assignment by combining the information from the twoTFSs returned by the assimilation and monitors the recursive invocation of Assim-ilation.21In Grover et al priority union is aimed to resolve parallelism dependent anaphora,in particular verb phrase ellipsis with a resolution mechanism based on the linguisticdiscourse model of (Pru?st, Scha, & Berg, 1994).2For a detailed description of Overlay?
see (Alexandersson & Becker, 2007).321t5tcot1t2t8t6t7tbgt3t4t3t1t2tcotbgt3Figure 2: A CDU scenario that is not entirely covered by Carpenter?s definition (left).Determination of the required search space of all relevant type configurations (right).A convenient concept is the definition of the type configuration, whichenables to describe the Type Preprocessing effectively:Definition 1 Type ConfigurationGiven tbg, the type of the background and tco, the type of the cover; a typeconfiguration tconf, ?t?bg, t?co?
is a pair of type identifiers where, t?bgis the abstractbackground type of tbgwith ?t(t?bg, tco) 6= ?
and t?bg?
tbg; t?cois the abstract covertype of tcowith t?co?
?t(t?bg, tco)At this point we would like to express subsumption ordering between two typeconfigurations t?conf= ?t?bg, t?co?
and t?
?conf= ?t?
?bg, t??co?
as follows.
We say t?conf?t?
?conf, if t?bg?
t?
?bgand t?co?
t??co.
Given some type t and ?
(qco) = tcowe additionallypropose a function, that returns the potential abstract background types locatedin the next level of the hierarchy T (t) = {t?| t??
t with t?is maximal and?t(t?, tco) 6= ?
}.The scenario in figure 2 (left) bears the type configuration ?t2, t3?
which iscovered by Carpenter?s definition, since t2corresponds to the relaxed struc-ture of the background which according to Carpenter should contain max-imal information.
However, ?t5, t4?
encloses the valid abstract backgroundtype t5that is more general than t2, which is caused by the non-deterministicinheritance behaviour among background?s supertypes; ?t(t5, tco) yields anon-empty set {t7, t4}.
This example reveals the limits of Carpenter?s defi-nition, that can be adjusted by the omission of the restriction on specificityimposed on the generalized background structure:Definition 2 Credulous Default Unification RevisedF<?cG = {F ?
G?| G??
G such that F ?
G?is defined and maximal}The definition says that the result of CDU between F and G are rep-resented by unifications between F and G?, that are defined, most specific322and G?subsumes G. For this purpose we motivate the task of Type Prepro-cessing to identify all type configurations that are relevant for subsequentprocedures in CDU.
The hierarchy in figure 2 (left) comprises the type con-figurations {?t2, t3?, ?t5, t4?, ?t5, t7?
}, though ?t2, t3?
makes ?t5, t7?
dispens-able, since ?t5, t7?
results into a TFS that subsumes the outcome stemmingfrom ?t2, t3?.
Type Preprocessing sorts out redundant type configurations bythe subsumption check and prevents them to be input for the Specializationand the Generalization process respectively.The algorithm of Alexandersson and Becker narrows down the search forabstract background types to the candidates that are situated exclusively onthe path between the background type and the least upper bound of coverand background.
The hierarchy in figure 2 (right), however, contains anabstract background type that is not located on any path towards elementsof mub, i. e., it is justified to state that in addition to t2also the type t1isan abstract background type.
In order to capture all potentially valid typeconfigurations the search may only terminate if the currently visited typesubsumes a mub element.Algorithm 1 AssimilationLet co and bg be two TFS such that co = ?Qco, qco, ?co, ?co?
and bg = ?Qbg, qbg, ?bg,?bg?.
Further we have tbg:= ?bg(q?bg) and tco:= ?co(q?co).
The assimilation of coand bg, A(bg, co) = ?, where ?
is a set of tuples of bg?and co?such that:(1) if tbg?
tcothenbg?= bg, co?= co?bg?, co??
?
?
(2) if tco?
tbgif ?
(co,MGsat (tbg)) 6= ?thenCO?= ?
(co,MGsat(tbg))bg?= bg{bg?}
?
CO??
?elsego to (3?)
with T (tbg),tmub= tco(3) elsefor each tmub?
?t(tbg, tco)go to (3?)
with T (tbg)(3?
)for each tbg??
T (t) go to (3.1)(3.1)if t?bg?
tmubthen exitelsefor each tmlb?
?t(t?bg, tco)go to (3.2)(3.2)if ?t?bg, tmlb?
6?
t?conf?
t?conf,with t?conf= ??(qbg?
), ?(qco?
)?and ?bg?, co??
?
?then go to (3.3)else go to (3?)
with T (t?bg)(3.3.
)if ?
(co,MGsat(tmlb)) 6= ?thenCO?= ?
(co,MGsat(tmlb))bg?= G(bg, t?bg){bg?}
?
CO??
?go to (3?)
with T (t?bg)else go to (3?)
with T (t?bg)Figure 3: Along the CDU procedure Overlay?
recursively assimilates the structures ofthe arguments one level deeper and combines the previously assimilated parts stemmingfrom background and cover resulting in an intermediate TFS.323During CDU well-formedness of TFS is guaranteed if exclusively Special-ization is well-formed, where its operational foundation refers to the ternaryunification operation in (Copestake, 1992).
In the algorithm specification 1we present the Assimilation algorithm concerning multiple inheritance hier-archies featuring non-determinism.3 Conclusion and Future WorkWe have motivated and demonstrated a formalism of CDU dealing with mul-tiple inheritance hierarchies featuring non-determinism.
Thereby we haveprovided a reformulation of Carpenter?s definition and a precisely formalizedcharacterization of the algorithm extending the work in (Alexandersson &Becker, 2007).
The non-deterministic behaviour increases considerably thedegree of difficulty regarding lattice operations in order to identify all pos-sible outcomes in CDU.
To this end, we were able to boil down the efficientimplementation of CDU to an efficient realization of mlb and mub compu-tation based on the detailed discussion in (Schulz, 2007).In this work we have gained insights considering coreferences, thoughwe postpone the theoretical and practical elaboration as a goal for futureresearch.
A crucial contribution in (Alexandersson, Becker, & Pfleger, 2004)is the usage of a scoring function that computes the best hypothesis amongthe multiple outcome of CDU.
The notion of informational distance appearsto be a reasonable device to restrain the production of multiple results inthe current context as well.ReferencesAlexandersson, J., & Becker, T. (2007).
Efficient Computation of Over-lay for Multiple Inheritance Hierarchies in Discourse Modeling.
InH.
Bunt & R. Muskens (Eds.
), (Vol.
3, pp.
423?455).
Dordrecht: Dor-drecht:Kluwer.Alexandersson, J., Becker, T., & Pfleger, N. (2004).
Scoring for overlaybased on informational distance.
In Proceedings of Konvens 2004 (pp.1?4).
Vienna, Austria.Bouma, G. (1990, 6?9 June).
Defaults in Unification Grammar.
In Pro-ceedings of the 28th annual meeting on Association for ComputationalLinguistics (pp.
165?172).
Morristown, NJ, USA: Association for Com-putational Linguistics.324Carpenter, B.
(1993).
Skeptical and Credulous Default Unification withApplications to Templates and Inheritance.
In T. Briscoe, V. de Paiva,& A. Copestake (Eds.
), Inheritance, Defaults, and the Lexicon (pp.13?37).
Cambridge, CA: Cambridge University Press.Copestake, A.
(1992).
The Representation of Lexical Semantic Information.Doctoral dissertation, University of Sussex.Grover, C., Brew, C., Manandhar, S., & Moens, M. (1994).
Priority Unionand Generalization in Discourse Grammars.
In 32nd.
Annual Meetingof the Association for Computational Linguistics (pp.
17 ?
24).
LasCruces, NM: Association for Computational Linguistics.Kaplan, R. M. (1987).
Three Seductions of Computational Psycholinguis-tics.
In P. Whitelock, H. Somers, P. Bennett, R. Johnson, & M. M.Wood (Eds.
), Linguistic Theory and Computer Applications (pp.
149?188).
London: Academic Press.Pru?st, H., Scha, R., & Berg, M. van den.
(1994).
Discourse Grammarand Verb Phrase Anaphora.
In Linguistics and Philosophy 17 (pp.261?327).
Amsterdam, Netherlands: Springer.Schulz, C. H. (2007).
Well-formed Default Unification in Multiple Inheri-tance Hierarchies.
Diploma thesis, Saarland University, Saarbru?cken,Germany.Shieber, S. M. (1986).
A Simple Reconstruction of GPSG.
In Proc.
of the11th COLING (pp.
211?215).
Morristown, NJ, USA: Association forComputational Linguistics.Wahlster, W. (2006).
Dialogue Systems Go Multimodal: The Smartkom Ex-perience.
In Smartkom - Foundations of Multimodal Dialogue Systems(pp.
3?27).
Heidelberg, Germany: Springer.325
