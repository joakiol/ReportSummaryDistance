Dealing with Cross-Sentential Anaphora Resolution in ALEPTh ier ry  Dec lerckIMS,  Un ivers i ty  of S tu t tgar tAzenbergst r .
12D-70174 Stut tgar tth ie r ry@ims.un i - s tu t tgar t .deAbst rac tThe experiments described here have beendone in connection with the LS-GRAMproject, which is concerned with the develop-ment of large scale grammars and thus fore-seen the coverage of "real life texts".
But inorder to deal with such texts, it is also nec-essary to process linguistic units which arelarger than sentences.
The resolution of cross-sentential anaphora is one of the problems wehave to deal with, when we switch towardsthe analysis of such larger linguistic units.In order to propose an analysis of the cross-sentential anaphora, one has to be able to re-fer back to an antecedent, which is to be foundin a preceding sentence.
This will be doneon the basis of an information-passing frame-work.
Using also the simple unification tech-nique a resolution of the pronoun can thenbe tried out: parts of the content informa-tion of the pronoun are going to be compared(unified) with specific parts of the content in-formation of the (possible) antecedent.1 In t roduct ionThe experiments described below have been donein connection with the LS-GRAM project 1, whichis concerned with the development of large scalegrammars.
The specifications of the project fore-seen the coverage of "real life texts", which havealso been processed by a corpus analysis.
The re-suits of the corpus analysis allowed us to determinea priority list of the linguistic phenonema to be de-scribed.
And in order to deal with "real fife texts",it is also necessary to consider the processing of lin-guistic units, which are larger than sentences.
Andas it is well known, the interpretation of sentencesembedded in larger units is often distinct from theone of sentences, which are standing on their own.1The LS-GRAM (Large-Scale GRAMmars for EClanguages) project is funded by the CEC under thenumber LRE 61029.
The examples and the grammardescriptions I am using are taken from the Germangrammar, see (Rieder & al.
IAI).The resolution of cross-sentential anaphora is one ofthe problems we have to deal with, when we switchtowards the analysis (or synthesis) of such largerlinguistic units.
In order to give a correct interpre-tation of the cross-sentential naphora, one has tobe able to refer back to an antecedent, which is tobe found in a preceding sentence, and I am usingthe term information-passing exactly in this sense:some information about a possible antecedent mustbe stored in order to be passed on to following sen-tences and to allow the anaphoric link, if some of thesubsequent sentences are containing an anaphoricpronoun.
Using the simple unification technique,as for the processing of other linguistic phenom-ena within ALEP, a resolution of the pronoun canthen be tried out: parts of the content informationof the pronoun are going to be compared (unified)with specific parts of the content information of the(possible) antecedent.In the next section I will first show how larger lin-guistic units can be processed within the ALEP sys-tem.
In a second section I will very briefly presenta semantic framework, which introduces the idea of"information-passing" in order to cope with cross-sentential anaphora: the Dynamic Predicate Logic(DPL).
In the last section I will show how a verypreliminary and tentative implementation of thisframework can be modelled within the ALEP for-realism.
Even if this first implementation is some-how primitive, this will permit us to formulate someremarks about the allowed degree of modularity ofgrammar descriptions within ALEP and also aboutthe way in which such descriptions can be extended.These are two important aspects if one considers thetask of developing large scale grammars.2 The  Text  Hand l ing  Sys tem andthe  ~Paragraph  un i t  ~Everyone who writes a grammar within the ALEPplatform has some 'contact' with its Text Handhng(TIt) system, which converts each input into aSGML tagged expression.
The TH component isthe first processing step provided for by the ALEPsystem.
In this tool, the sentence is defined as280tile default linguistic unit.
If larger units are tobe processed, this has to be explicitely defined bythe user.
lit our case, the linguistic unit is definedto be 'P '  (for 'Paragraph')  2.
The output of the THbeing for example:<p><s><W>aohn</W><W>sleops</W><PT>?
</PT></s></P>one can refer to the tag 'P '  in order to define thisstructure being the linguistic unit to be processed.As usual (and also obligatory) for tile developmentof grammars within ALEP, a so-called ts_ls_rule(a mapping between text structures and linguisticstructures) has to be defined:ts_is rule(id: {syn => syn:{constype => phrasal:{max => yes,constr => paragraph} } } },,p, ,  \[\] ).where a linguistic description ('ld') defining the'constr(uction)' type of a 'paragraph' is associ~ated with the tag 'P' ,  symbolizing the text type'paragraph'.
The distinguishing value here is 'para-graph', which has been added to the type .system asa possible value for the feature 'constr': the ALEPformalism being type based, every feature, with itsrange of possible values, has to be declared in thedeclaration component.The next step involves in the description of gran>mar rules whict, parse tile structure of a para-graph.
The phrase-structure ule responsible forthe building of the paragraph-structure is simple.The mother node simply allows a binary branchingof two sentential daughters.
A recnrsion is definedon the right daughter, the value of 'constr' beinga disjunction of 'punct_att' (describing a sentenceterminated by a fall stop) and 'paragraph' (describ-ing thus the recursion).
'l'he left daughter is con-sidered to be the head (structure-sharing of 'head'features), as one can see in the following (simplified)presentation of the rule:id:{syn => syn:{constype => phrasal:{constr => paragraph},~I would like to thank Gordon Cruickshank ((\]raySystems, Laxembourg) who gave me the initial idea touse this strategy in order to describe the interdepen-dency of information between sentences.category => head_cat:{head => HEAD => v head:{} } } } }<\ [id:{syn => syn:{constype => phrasal:{constr => punct_att},category => head_cat:{head => HEAD => v_head:{} } } } } ,Id:{syn => syn:{constype => phrasal:{constr => (punct_att ; paragraph) },category => head cat:{head => v_head} } } } \].where '< '  symbolizes the immediate dominance re-lation between the mother and the list of daughters.In principle , these are the steps which are neces-sary in order to extend the coverage of the gram-mar to larger linguistic units?
There is naturallysome more technical work to be done, but this willbe described in the third chapter, where i will gointo more details of the architecture of the gram-mar development.
At this stage, we are able toparse a paragraph and to get a syntactical analyseof this structure.
Sonic aspects which are specific totext linguistic should be considered.
The one I amconcentrating on is the cross-sententiM anaphoricrelation.
This has been postponed to the seman-tic which is treated within the re.finemenl compo-nent of the grammar.
But before explaining themotiwLtion of the grammar design on this pointand the reasons for postponing the semantic untilltile process of refinement, the semantic frameworkwhich has been choosen for the modelling of thecross-seutential naphora should be presented?3 DPL  as  Representat ion  Languagefo r  In fo rmat ion -Pass ingThe Dynamic Predicate Logic (DPL) results froman investigation of a dynamic semantic interpreta-tion of the language of first order predicate logicand is "intended as a first step toward a compo-sitional, non-representational theory of discoursesemantics ''3.
This approach is concerned amongother things with the cross-sentential naphora.The dynamic aspect resides in the fact that, forthis approach, the meaning of a sentence doesn'tlie in its truth conditions, but "rather in the wayit changes the ... information of the interpreter ' 'a.DPL considers only the information change whichconcerns %heir potential to 'pass-on' possible an-tecedents for subsequent anaphors"5.
The DynamicaI ant refering here to (Groenendijk91).
'J Ibid.
p. 43"~Ibid.
p. 44281Predicate Logic is based on the syntax of the stan-dard predicate logic, but proposes a new (dynamic)interpretation of the quantifiers and connectiveswhich allows the binding of variables within andoutside their scope, depending on the interpreta-tion of the corresponding expressions of the naturallanguage.Two (strong) assumptions, which are controversialin the discussion on this topic, are underlying theDPL approach: Indefinite NPs are considered tobe quantifiea~ional expressions and pronouns to actlike variables.
Not everyone agrees on those as-sumptions, as this can be seen in the DiscourseRepresentation Theory or in the work by IreneHelm 6.
But those assumptions are here importantif one wants to provide an uniform translation of in-definite NPs into existential quantifier (see below).And the desired compositional treatments requiresthat the information concerning the pronouns is tobe found in the sentences uttered so far, i.e.
asincluded within the scope of a logical quantifier orconnective.The particular expressions of the natural languageDPL is dealing with are the following:(1) A man walks in the park.
He whistles.
- cross-sentential anaphora(2) If a farmer owns a donkey, he beats it.
- donkeysentence(3) Every farmer who owns a donkey, beats it.
-donkey sentenceAnd the problem consists in providing an ad-equate semantic representation of the anaphoriclinks.
There are several ways of representing thesemantic interpretation of each of the utterancesand three of them (1 - 3) are discussed by Groe-nendijk & Stokhof:(A) In classical predicate logic:- ~x\[man(x)Awalk_in_the_park(x)Awhistle(x)\] (1)VxVy\[\[farmer(x) A donkey(y) A own(x, y)\] --~beat(x, y)\] (2) & (3)(B) In a compositional way:- ~x\[man(x)Awalk_in_the_pavk(x)\]Awhistle(x)(1)- -~x\[farmer(x) A 3y\[donkey(y) A own(z,y)\]\] -~be t( , y) (2)A  y\[donk y(y) A y)\]\]e t(x, y)\] (3)(C) In the Discourse Representation Theory:- Ix\]\[man(x), walk~n_the_park(x), whistle(x)\] (1)\[_\] [Ix, y\] \[farmer(x), donkey(y), own(x, y)\] --~y)\]\] (2) (3)What is missing in (A) is the compositional repre-sentation of the subparts of the utterances.
Anotherdisturbing point is the distinct translation of the6See (Kamp 1981) and (Heim 1982, p. 122)indefinite NPs into the representational l nguage,once as an existential quantifier (A,1) and once asan universal quantifier (A,2 & A,3).
The fact that(2) and (3) translate into the same semantic repre-sentation is also reflecting the non-compositionalityof the classical predicate logic in this case.The problems with the compositional representa-tion (B) are concerning the binding of the variables(the pronouns in the natural language).
In (B,1)the third occurence of the variable x is free and thusdoesn't allow the anaphoric reading.
The same re-marks are valid for x and y in (B,2) and for y in(B,3).
But the way (S) is representating the utter-ances allows the uniform translation of indefiniteNPs into an existential quantifier.The problems with the DRT representation aremore of methodological nature, since on the treat-ment of those cases, DPL and DRT are empiricallyequivalent.
In short: Groenendijk and Stokhof aremissing the compositional building of the seman-tic representation and also would prefer to use amore classical representational language, like theone of first order logic.
For this, they are 'merg-ing' together the representation (A) and (B), andconsidering now only the first case (1), the dynamicsemantic interpretation is going to be like (B,1):~z\[man(x) A walk_in_the_park(x)\] A whistle(x),but with the existential quantifier having scope overthe conjunction of the two sentences, this represen-tation is going to be equivalent o:-~x\[man(x) A walk_in_the_park(x) A whistle(x)\].This is possible because the interpretation of a sen-tence doesn't lie in a set of assignments, but ratherin a set of ordered pairs of assignments, where thosepairs represent the input-output s ates of a sentence.In our example, the first sentence has an outputwhich is as the same time the input of the secondone.
Since the existential quantifier is interpretedas being able to quantify outside its scope (also incombination with the conjunction and the sequenc-ing of sentences), the information concerning the(possible) antecedent is going to be passed-on tofollowing sentences, which could be subsequentlyuttered.
The fact that the existential quantifierin DPL is interpreted as a quantifier which canbind outside of its syntactic scope allows to saythat we provide a compositional treatment of theutterance, the second sentence being interpreted asit comes, without referring to some metalinguisticalrepresentation r process.
The existential quantifieris qualified as an externally dynamic quantifier.Not every quantifier (or connective) has the dy-namic property of binding outside of its scope; theuniversal quantifier, for example, can bind withinits scope, but not outside of it:(4) *Every man walks in the park.
He whistles282is ruled out.
The dynamic semantic interpretationof this quantifier blocks the passing of the informa-tion: the ouptut of the first sentence is empty (withrespect to the information concerning anaphoricbinding).
The input of the following sentence willtherefore contain no information allowing a resolu-tion of the pronoun.The way DPL is interpretating the distinct quanti-tiers and connectives i the following one:?
Existential quantification and conjunction aree;ctcrnally dynanfic.They can bind variables within and outsidetheir scope:\[A man\],/ walks in the park and hei whistles.IIe,i is happy?
Universal quantification and implication areinternally dynamic.They can bind variables only inside their scope:Every farmer who owns \[a donkey\]i, beats it,i?
\[Every man\],i walks in the park.
He/ whistlesIf \[a farnrerJ~ owns \[a donkey\]j, he~ hates itj?
If \[a farmer\]~ owns \[a donkey\]j, he beats it.He,: hates it i?
Negation and disjunction are static.They cannot bind .variables (at least, theydon't allow a anaphoric reading):?
\[No man\]~ walks in the park.
tte~ whistles?
\[A man\],i walks in the park or her whistlesThis is too simple and for sonre English examplesit seems to be wrong.
The authors arc consider-ing and discussing the cases which contradict heassumptions and give some hints in order to inte-grate those cases.
I will not discuss this point here,but just mention, that for the German grammarwe should have a look at a detailled analysis of themeaning of such expressions 7.
Once this has beendone, we can encode this information in the lexi-con (as will be seen in the next section).
But herewe can say that the DPL approach allows us, toa certain degree, to account for the resolution ofanaphora without having to leave the field of lin-guistic descriptions.
With the only means of thegrammar and the formalism we have, we are ableto provide a tirst and simple description of thosephenomena.
It is still to be investigated how so-phisticated such a treatment can be.4 A f i r s t  Imp lementat ion  o f  theDynamic  In terpretat ionAs we have seen, the 'paragraph' as been definedas the linguistic unit to be processed by the sys-teni.
To provide a (simple) syntax was so far nota problem.
But, as stated in the second section, if~As for example in (Bethkc 1990) or in (Vater 1979).a free pronoun occurs in a sentence, it is possiblethat this pronoun requires an anaphoric interpre-tation.
To achieve this interpretation, some infor-mation about the antecedent is necessary and thisinformation is to be found in a precedent sentence.DPL theory provides us with an elegant framework,describing the semantic of utterances as the way inwhich information is passed-on between sentencesand so controlling the possible binding of pronouns.4.1 The  Organ isat ion  of  the  L ingwareI have tried to model the DPL framework within theALEP platform.
This experiment is documented inthe following section.
In doing this, I followed theoverall strategy of the grammar development withinALEP.
The syntactic 'paragraph' rule has been de-scribed within the analysis component of the gram-mar.
The process of analysis is a process concernedwith the building of structure trees induced by theps-rules.
In our grammars, this process is associ-ated with a subpart of the lexicon, which is con-taining only the information relevant for that kindof process, i.e.
the building of a parse tree, which isonly dealing with morpho-syntactical information.One of the motivation of this organisation of the lex-icon (and also of the rules associated with it) liesin tile consideration of efficiency.
At least for oneof the parser of the system (the bottom-up head-out parser), the presence of nmltiple entries for oneitem and the description of more than one rule for aphenomenon has very negative consequences on therun-time behaviour of the system, backtracking be-ing very expensive.
But even if another parser (therecord parser, which is not so sensitive to this kindof problems) is used, the use of shallow linguisticdescriptions in the analysis component allows oneto formulate some generalizations.
Lexical and se-mantic ambiguities are than resolved or introducedat the following level, the refinement component,which corresponds to a process of decorating al-ready existing trees: feature structures are justadded to the trees.
The refinement process is a spe-cial feature of the ALEP formalism.
This processconsumes very little cpu-time.
For this process, spe-cific linguistic subcomponents are described.There is a relation between the sublexicons, thisrelation being one of subsumption.
Linguisitic de-scriptions contained in the distinct sublexicons haveall the same structure but the degree of specificationis different from one lexicon to another.
Thus wedon't have a stratificational model and the descrip-tions stay declarative and monotonic.
We are justdescribing what subparts of information of an entryis going to be accessed by a process.
Since this or-ganisation of the lexicon (and the associated rules)is done along the line of the processes provided byALEP, we call it the vertical organisation.The description of this vertical organisation is donewith the help of the 'specifier features' provided283by the ALEP  system, wich are configurable by theuser.
It is in such a way possible to determine whatsubparts of the grammar are going to be accessedby a particular process.4.2 The  Lex icon Ent r ies  and  the  Ru les  forthe  Reso lu t ion  of  AnaphoraThe rule building the paragraph structure intro-duced before produces just one tree.
The possi-ble distinct readings of it are described within therefinement conlponent.
Thus the cross-sententialanaphora relation (being essentially a semanticprocess) is fully described on this level (the morpho-syntactical aspects being described in the analysisconiponent of the grannnar).We will no see how the relevant items are describedin the ~'e\]inc lexicon.
I just consider here the entriesof substantives, pronouns and quantificational ex-pressions (determiners).
My goal is to provide theinformations that are necessary for the modellingof the dynamic treatment of the cross-sententialanaphora.
Here the way they arc coded in the Ger-lnan gralnlnar:?
Referential expressionsld:{content => ...restr =>\[inst_zero_psoa: {indxtel => tel:{rel_name => flugzeug },inst => A48 } \],=> A48 => ind_indx:{pets => p3,numb => sing,gend => neut }}}} .?
Pronominal expressionsid:{content => ...restr =>\[inst_zero psoa:{rel => tel:{rel name => PRO },inst => A48 } \],indx => A48 => ind indx:{petsnumbgend}}}}.?
Quantificational expressionsdot_d_das "mLDref_core \[det d das,das,mLA sem_funct_sem_det\[_\] \] .=> p3,=> sing,=> neut }det_ein"mLDref_core \[det_ein,ein,mLA_sem_funct_sem_det \[extern_dynamic\] \] .det_kein ~mLDref core \ [det_kein,kein,mLA_sem_funct sem_det \[static\] \] .det_d_jedes ~mLDref_core \[det_j edes,jedes,mLA_sem_funct_sem det \[intern_dynamic\] \] .I encoded the infornlation about semantic genderand number of the referential expressions and thepronouns (contained in the 'restr(iction)' attribute.The 'rehname' attribute represents the referentialproperty of the item: this a variable ( 'PRO')  inthe case of the pronouns, nlodelting in this way theDPL assumption that pronouns are acting as vari-ables.
The entries of quantifiers and determinersare presented here as macros.
The relevant in-formation for us is the one concerning the quan-tificational force of this entries (I don't considerhere binary conjunctives) which is lexically deter-mined.
In case of 'das' (the), the relevant informa-tion has been left unspecified, since where are notconsidering definite descriptions for the time being.The quantificational force of 'ein' (a, an) has beenspecified as 'extern_dynamic', the one of 'kein' (no,no one) as 'static' and the one of 'jedes' (every) as'intern_dynamic', nlodelling the classificiation pro-posed in the DPL framework.During the processing of the paragraph, if a freepronoun occurs in a sentence and if it can refer to anantecedent, he value of the 'quantificationahforce'of the antecedent should be 'extern_dynamic' andthe values of the attribute 'restr' of the antecedentand the pronoun must be unifiable.
In this case,the value of the 'rehname' of the pronoun is uni-fied with the value of the one of the antecedent,as one can see below, where in this case the val-ues of the 'restr' features are variable-shared.
Herea (simplified) rule accounting for resolution in thecontext of one-argument predicates (the other casesare described by rules disjunction):ld:{sem => sem:{content => lq_cont:{argl => lq_cont :{quants => \[quantifier :{q_force => QI } \],rd_cont => r indx:{restr => RESTR1 } } },284argl => lq_cont:.\[quants => \[quantifier:{q force => ~2 }\],rd cent => r_npro:{restr => RESTR2 } } } \]7}}}<\ [id:{ .
.
.
.sere => sore:{content => lq cent:{argl => lq_cont:{quants => \[quantifier:-\[q force => ~i } \],rd_con% => r npro : - \ [ros t r  => RESTRI } } } } } \] },id:{ ....som => som:{content => lq cent:{argl => ( lq cent:{quants => \[quantifier:{q_force => ~1 => extern dynamic} \] ,rd_cont => r ppro:{restr => RESTRI } }/ quants => \[quantifier:{q_force => Q2} \],rd_cont => r_npro:{restr => RESTR2 } } } } } } } \].With this simple technique, we are able to ac-cept "Ein Mann kommt.
Er singt" and to reject"Jeder Mann kommt.
Er singt .
.
.
.
the value of'quantifieational._force' of the entry 'jeder' (every)is 'intern_dynamic' and so disallows the unificationof the 'restr' wdnes.
The same with "Kein mankommt.
Er singt".
The negation is a static se-mantic phenomenon and the value of its attribute'quantifieational_forcc' is 'static'.
a If there is nopronoun in the second sentence, no unitication istried out: the values of the corresponding q'cstr'attributes arc not structure-shared.
The buildingof the paragraph structure just goes on.
The valuesof the.
attributes 'quantificational_foree' and 'restr'are then put together in a list.4.3 Modu lar i ty  and  Exteudab i l i tyThe short experinrent described in this paper is re-ally too primitive and doesn't allow any statementabout the possibility of providing a conrplete treate-ment of the cross-sentential naphora on the basisof the DPL framework.
But one goal of the exper-iment was also to gain some knowledge about thepossible extension of the coverage of the grammar.And heresome conclusions can be drawn.8Linguisitically speaking, this is too simple.
In Ger-m~m at least, negated NPs can often bind pronouns.And we should also allow generic readings.
Stone ex-periments have been done with respect o this.
But ac-tuMly, I just would like to show how information-passingcan be modelled in ALEP.First of all, the modular organisation of the gram-mar development within ALEP proved itself to bevery practical.
The 'tools' provided by ALEP (the'specifier features'), if they are reasonably config-urated during grammar development, allow a highdegree of modularity and pernlit, without difficul-ties, to define new grammar components.With the help of the text handling component, itwas also no problenr to extend the coverage of thegrammar to larger linguisitc units.
The descrip-tion of grammar colnponents for such units is wellsupported.It still remains the task of providing some prefer-ence descriptions for anaphora resolution.
This will1)e done Mong a more detailled linguistic analysisand considering corpus analysis.
ALEP providesalso for constraint solvers which allow to define suchpreferences in an elegant (propositional) way.Rc ferc I l ce8BIM/SEMA, ALEP System Docume'atatiou, CEC1993, l,uxembourg.Simpkins, N.K.
; Groenendijk, M. and CruickshankG.
(P-E International), ALEP 1 UseT, Guide, CEC1993, Luxembourg.Badia, '\['.
; Bredenkamp, A.; Declerck, T.; Itentze,R.
; Marimon, M.; Schmidt, P.; Theofilidis, A.
(1995), LS-GRAM Rule Coding Manual, Deliver-able D - WP7 Version 1, CEC, 1995, Luxcmbourg.Bethke, I. dc'r die das als Pronomen, 1990.J.
Groenendijk & M. Stokhof, Dynamic PredicateLogic, in Linguistics and Philo.sophy 14, p. 39-100,1991Ileim, Irene, The.
Sema.
'l~th:s of Definite.
and \]'a-definite Nou'a Ph.r'ases, dissertation, Uifiversity ofMassachussetts, Anrherst, 1982.Kamp, itans.
A Theory of Truth and Semantic Rep-resentation.
In 3.
Groenendijk, T. Janssen, and M.Stokhof (eds.
), Formal Methods in the Study of Lan-guage,, Mathematical Center Amsterdam: 277-322,1981 \[reprinted in .1.
Groenendijk, T. 3anssen, andM.
Stokhof (eds.
), Truth, I',,ter'prctation and furorranlion, Foris, Dordrecht, 1-41, 1984.Sibylle Rieder, Paul Schnfidt & Axcl Theofil-id is -  IAI, & Thien'y Declerck - IMS.
LS-GRAMLing'war('., Docmnentation, Deliverable C-D-WI?6e,1996, Luxcmbourg.Vater, Hein~.
Das System de'r Artikelforme'o.
img('.gcnwae.r~igen De'~Ltsc.h.. 2. edition, ~lhlebingen,1979.285
