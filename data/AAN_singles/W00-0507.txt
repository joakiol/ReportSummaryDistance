TransType: a Computer--Aided Translation Typing SystemPh i l ippe  Lang la i s  and George  Foster  and Guy  Lapa lmeRAL I /D IRO - -  Universit@ de Montr@alC.P.
6128, succursale Centre-villeH3C 3J7 Montr4al, CanadaPhone:: +1 (514) 343-2145Fax: +1 (514) 343-5834email: {felipe, foster, lapalme}?iro, umontreal, caAbst ractThis paper describes the embedding of a sta-tistical translation system within a text editorto produce TRANSTYPE, a system that watchesover the user as he or she types a translation andrepeatedly suggests completions for the text al-ready entered.
This innovative Embedded Ma-chine Translation system is thus a specializedmeans of helping produce high quality transla-tions.1 In t roduct ionTRANSTYPE is a project set up to explore anappealing solution to the problem of using In-teractive Machine Translation (IMT) as a toolfor professional or other highly-skilled transla-tors.
IMT first appeared as part of Kay's MINDsystem (Kay, 1973), where the user's role wasto help the computer analyze the source textby answering questions about word sense, el-lipsis, phrasal attachments, etc.
Most laterwork on IMT, eg (Blanchon, 1991; Brown andNirenburg, 1990; Maruyama and Watanabe,1990; Whitelock et al, 1986), has followed inthis vein, concentrating on improving the ques-tion/answer process by having less questions,more friendly ones, etc.
Despite progress inthese endeavors, systems of this sort are gen-erally unsuitable as tools for skilled trans\]\[atorsbecause the user serves only as an advisor, withthe MT components keeping overall control overthe translation process.TRANSTYPE originated from the convictionthat a better approach to IMT for competenttranslators would be to shift the focus of in-teraction from the meaning of the source textto the form of the target text.
This would re-lieve the translator of the burden of having toprovide explicit analyses of the source text andallow him to translate naturally, assisted by themachine whenever possible.In this approach, a translation emerges froma series of alternating contributions by humanand machine.
The machine's contributions arebasically proposals for parts of the target text,while the translator's can take many forms, in-cluding pieces of target text, corrections to aprevious machine contribution, hints about thenature of the desired translation, etc.
In allcases, the translator remains directly in controlof the process: the machine must respect heconstraints implicit in his contributions, and heor she is free to accept, modify, or completelyignore its proposals.So TRANSTYPE is a specialized text editorwith an embedded Machine translation engineas one of its components.
In this project wehad to address the following problems: how tointeract with the user and how to find appro-priate multi-word units for suggestions that canbe computed in real time.2 The  TransType  mode l2.1 User  V iewpo intOur interactive translation system is illustratedin figure 1 for an English to French translation.It works as follows: a translator selects a sen-tence and beg!ns typing its translation.
Aftereach character typed by the translator, the sys-tem displays a proposed completion, which mayeither be accepted using a special key or rejectedby continuing to type.
This interface is simpleand its performance may be measured by theproportion of characters or keystrokes aved intyping a translation.
Note that, throughout thisprocess, the translator emains in control, andthe machine must continually adapt its sugges-tions to the translator's input.
This differs fromthe usual machine translation set-ups where it isthe machine that produces the first draft which46?
.
?
.
: ,  ?
, ,  - - - - - - ~..... Fich:ier :::= ptions?
: ' .  "
- : . '
.
.
.
.  "
.
.
:  .
.
.
.  "
.11 .
.
.
I t "  I: am:pleased:to: akepart:m this debate today.Usingitoday'S technologies,it:is possiblefOrall ~ad iaqs  to.
.
.
.
.
a .
.
.
.
.
borrowing:.. .
.
.
.
?
.
.
.
.
.
.
.
.
.
:::i~ :d~batl..GraCel ~i~la t~chnOIogiemoderne, tousles Can adiehs peuVent seprononcer:sur:lesquestions de:depenses: et~:d em runts:de/EZraFigure 1: Example of an interaction in TRANSTYPE with the source text in the top half of thescreen.
The target text is typed in the bottom half with suggestions given by the menu at theinsertion point.then has to be corrected by the translator.The first version of TRANSTYPE (Foster etal., 1997) only proposed completions for the cur-rent word.
We are now working on predictionswhich extend to the next several words in thetext.
The potential gain from multiple-wordpredictions (Langlais et al, 2000) can be ap-preciated in the one-sentence translation taskreported in table 1, where a hypothetical usersaves over 60% of the keystrokes needed to pro-duce a translation in a word completion sce-nario, and about 75% in a "unit" completionscenario2.2 System V iewpo intThe core of TRANSTYPE is a completion enginewhich comprises two main parts: an evaluatorwhich assigns probabilistic scores to completion47This bill is very similar to its companion bill which we dealt with yesterdayin the house of commonsword-completion task.
unit-completion taskpref.
completions pref.
completionsC+ /loi ?
c/e pro jet de loi cepro jetdeIoiesttr~ssemblableaupro jetdeIoiquenousavonsexamin4hierlachambredescommunesce+ / lOi" C/'p+ /est p/rojetd+ /tr~s d/eI+ /tr~s I/oie+ /de e/stt+ /de ?
t / r~sse+ /de ?
s/esau+ /loi ?
a/vecp+ /loi p/rojetd+ /loi ?
d/eI+ /nous ?
I/oiqu+ /nous ?
q /u i  ?+ /nousav+ /nousex+ /hier+ /hierse/mblablequ/e?
v/ons?
e /n .
ex/amin~~+ /b ie r  ?
~/ la+ /chambrede+ / communes  ?
dle ?+ /communesde/se+t+se+a+/de e/st/de .
t/r~s/de ?
s/es se/mblable/loi ?
a/u projet de loi surqu+ /nous ?
q /u i  ?
qu/e+ /nousav+ /nous.
a/vec, av/onsexa+ /& la chambre des communese/n.
ex/istence, exa/min~h-F /& la chambre des communesh/let+ /& la chambre des communes106 char.
23 20 accept.
14 11 accept.
-t- 1 correc.43 keyst rokes  26 keyst rokesTable h A one-sentence s ssion illustrating the word- and unit- completion tasks.
The first col-umn indicates the target words the user is expected to produce.
The next two columns indicaterespectively the prefixes typed by the user and the completions made by the system under a word-completion task.
The last two columns provide the same information for the unit-completion task.The total number of keystrokes for both tasks is reported in the last line.
+ indicates the accep-tance key typed by the user.
A Completion is denoted by a/ f l  where a is the typed prefix and flthe completed part.
Completions for different prefixes are separated by ?
.hypotheses and a generator which uses the eval-uation function to select the best candidate forcompletion.2.2.1 The  eva luatorThe evaluator is a function p(t\[t', s) which as-signs to each target-text unit t an estimate ofits probability given a source text s and the to-kens t' which precede t in the current ranslationof s. Our approach to modeling this distribu-tion is based to a large extent on that of theIBM group (Brown et al, 1993), but it diflhrs inone significant aspect: whereas the IBM modelinvolves a "noisy channel" decomposition, weuse a linear combination of separate predictionsfrom a language model p(t\[t') and a transla-tion model p(t\[s).
Although the noisy channeltechnique is powerful, it has the disadvantagethat p(s\[t', t) is more expensive to compute thanp(t\[s) when using IBM-style translation models.Since speed is crucial for our application, wechose to forego it in the work described here.Our linear combination model is fully describedin (Langlais and Foster, 2000) but can be seenas follows:48p(tlt ' ,s ) = p(tlt' ) A(O(t',s)), (1)language+ p(tls)\[1-~(O(t',s))!translationwhere .~(O(t',s)) e \[0,1\] are context-dependent interpolation coefficients.
O(t~,s)stands for any function which maps t~,s into aset of equivalence classes.
Intuitively, ),(O(t r, s))should be high when s is more informative thant r and low otherwise.
For example, the trans-lation model could have a higher weight at thestart of sentence but the contribution of the lan-guage model can become more important in themiddle or the end of the sentence.2.2.2 The  language mode lWe experimented with various simple linearcombinations of four different French languagemodels: a cache model, similar to the cachecomponent in Kuhn's model (Kuhn and Mori,1990); a unigram model; a trielass model (Der-ouault and Merialdo, 1986); and an interpolatedtrigram (Jelinek, 1990).We opted for the trigram, which gave signifi-cantly better results than the other three mod-els.
The trigram was trained on the Hansardcorpus (about 50 million words), with 75% ofthe corpus used for relative-frequency parame-ter estimates, and 25% used to reestimate inter-polation coefficients.2.2.3 The  t rans la t ion  mode lOur translation model is based on the linear in-terpolation given in equation 2 which combinespredictions of two translation models - -  Ms andMu - -  both based on an IBM-like model 2 (seeequation 3).
Ms was trained on single wordsand Mu was trained on both words and units.p( tls) = Z pt( tls) ,+ (1 - Z).p2 ( (s ) )word unit(2)where Ps and Pu stand for the probabilitiesgiven respectively by Ms and M~.
~(s) repre-sents the new sequence of tokens obtained aftergrouping the tokens of s into units.Both models are based on IBM translationmodel 2 (Brown et al, 1993) which has the49property that it generates tokens independently.The total probability of the ith target-text to-ken ti is just the average of the probabilitieswith which it is generated by each source texttoken sj; this is a weighted average that takesthe distance from the generating token into ac-count:is1p(tils) = ~p( t i l s j )  a(jli, Is\[)j=O(3)where p(ti Is j) is a word-for-word translationprobability, Isl is the length (counted in tokens)o f the  source segment s under translation, anda(jli , Is\]) is the a priori alignment probabilitythat the target-text token at position i will begenerated by the source text token at positionj; this is equal to a constant value of 1~(Is I + 1)for model 1.
This formula follows the conven-tion of (Brown et al, 1993) in letting so des-ignate the null state.
We modified IBM model2 to account for invariant entities such as En-glish forms that almost invariably translate intoFrench either verbatim or after having under-gone a predictable transformation e.g.
numbersor dates.
These forms are very frequent in theHansard corpus.2.3 The GeneratorThe task of the generator is to identify unitsmatching the current prefix typed by the user,and pick the best candidate using the evalua-tion function.
Given the real time constraintsof an IMT system, we divided the French vocab-ulary into two parts: a small active componentwhose contents are always searched for a matchto the current prefix, and a much larger passivepart which comes into play only when no candi-dates are found in the active vocabulary.
Bothvocabularies are coded as tries.The passive vocabulary is a large dictionarycontaining over 380,000 word forms.
The ac-tive part is computed ynamically when a newsentence is selected by the translator.
It relieson the fact that a small number of words ac-count for most of the tokens in a text.
It iscomposed of a few entities (tokens and units)that are likely to appear in the translation.
Inpractice, we found that keeping 500 words and50 units yields good performance.3 Implementat ionFrom an implementation point of view, the coreof TransType relies on a flexible object ori-ented architecture, which facilitates the integra-tion of any model that can predict units (wordsor sequence of words) from what has been al-ready typed and the source text being trans-lated.
This part is written in C?+.
Statisti-cal translation and language models have beenintegrated among others into this architecture(Lapalme et al, 2000).The graphical user interface is implementedin Tcl/Tk, a multi-platform script language wellsuited to interfacing problems.
It offers all theclassical functions for text edition plus a pop-upmenu which contains the more probable wordsor sequences of words that may complete theongoing translation.
The proposed completionsare updated after each keystroke the translatorenters.4 EvaluationWe have conducted a theoretical evaluation ofTransType on a word completion task, whichassumes that a translator carefully observeseach completion proposed by the system, andaccepts it as soon as it is correct.
Underthese optimistic onditions, we have shown thatTransType allows for the production of a trans-lation typing less than a third of its characters.In order to better grasp the usefulness ofTRANSTYPE, we also performed a more prac-tical evaluation by asking ten translators touse the prototype for about one hour to trans-late isolated sentences.
We first asked them totranslate without any help from TRANSTYPEand then we compared their typing speed withTRANSTYPE suggestions turned on.
Overall,translators liked the concept and found it veryuseful; they all liked the suggestions althoughit seemed to induce a literal style of transla-tion.
We also asked them if they thought hatTRANSTYPE improved their typing speed andthe majority of them said so; unfortunately thefigures showed that none of them did so ... Thetyping rates are nevertheless quite good, giventhat the users were new to this environment andthis style of looking at suggestions while trans-lating.
But interestingly this practical ew~lua-tion confirmed our theoretical evaluation that a-translation can be produced with TRANSTYPEby typing less than 40% of the characters of atranslation.
Results of this evaluation and com-parisons with our theoretical figures are furtherdescribed in (Foster et al, 2000).This experiment made us realize that thisconcept of real-time suggestions depends verymuch on the usability of the prototype; we hadfirst developed a much simpler editor but itslimitations were such that the translators foundit unusable.
So we are convinced that the user-interface aspects of this prototype should bethoroughly studied.
But the TRANSTYPE ap-proach would be much more useful if it wascombined with other text editing tasks relatedto translation: for example TRANSTYPE couldformat the translation in the same way as thesource text, this would be especially useful fortitles and tables; it would also be possible tolocalize automatically specific entities such asdates, numbers and amounts of money.
It wouldalso be possible to check that some translationsgiven by the user are correct with respect withsome normative usage of words or terminologi-cal coherence; these facilities are already part ofTRANSCHECK, another computer aided transla-tion tool prototype developed in our laboratory(Jutras, 2000).5 Conc lus ionWe have presented an innovative way of em-bedding machine translation by means of a pro-totype which implements an appealing interac-tive machine translation scenario where the in-teraction is mediated via the target text underproduction.
Among other advantages, this ap-proach relieves the translator of the burden ofsource analyses, and gives him or her direct con-trol over the final translation without having toresort to post-edition.AcknowledgementsTRANSTYPE is a project funded by the Natu-ral Sciences and Engineering Research Councilof Canada.
We are greatly indebted to ElliottMacklovitch and Pierre Isabelle for the fruitfulorientations they gave to this work.ReferencesHerv6 Blanchon.
1991.
Probl~mes ded@sambigffisation i teractive et TAO per-sonnelle.
In L 'environnement Traductionnel,50Journ@es cientifiques du R@seau th@matiquede recherche "Lexicologie, terminologie,traduction", pages 31-48, Mons, April.Ralf D. Brown and Sergei Nirenburg.
1990.Human-computer interaction for semanticdisambiguation.
In Proceedings off the Inter-national Conference on Computational Lin-guistics (COLING), pages 42-47, Helsinki,Finland, August.Peter F. Brown, Stephen A. Della Pietra, Vin-cent Della J. Pietra, and Robert L. Mercer.1993.
The mathematics of machine transla-tion: Parameter estimation.
ComputationalLinguistics, 19(2):263-312, June.A.-M. Derouault and B. Merialdo.
1986.
Nat-ural language modeling for phoneme-to-texttranscription.
IEEE Transactions on PatternAnalysis and Machine Intelligence (PAMI),8 (6): 742-749, November.George Foster, Pierre Isabelle, and Pierre Pla-mondon.
1997.
Target-text Mediated Inter-active Machine Translation.
Machine Trans-lation, 12:175-194.George Foster, Philippe Langlais, GuyLapalme, Dominique Letarte, ElliottMacklovitch, and S@bastien Sauv@.
2000.Evaluation of transtype, a computer-aidedtranslation typing system: A comparison ofa theoretical- and a user- oriented evaluationprocedures.
In Conference on LanguageResources and Evaluation (LREC), page 8pages, Athens, Greece, June.Frederick Jelinek.
1990.
Self-organized lan-guage modeling for speech recognition.
InA.
Waibel and K. Lee, editors, Readings inSpeech Recognition, pages 450-506.
MorganKaufmann, San Mateo, California.Jean-Marc Jutras.
2000.
An automatic reviser:The TransCheck system.
In Applied Natu-ral Language Processing 2000, page 10 pages,Seattle, Washington, May.Martin Kay.
1973.
The MIND system.
InR.
Rustin, editor, Natural Language Process-ing, pages 155-188.
Algorithmics Press, NewYork.Roland Kuhn and Renato De Mori.
1990.A cache-based natural language model forspeech recognition.
IEEE Transactions onPattern Analysis and Machine Intelligence(PAMI), 12(6):570-583, June.Philippe Langlais and George Foster.
2000.
Us-ing context-dependent i terpolation to com-bine statistical language and translationmodels for interactive machine translation.In Computer-Assisted Information Retrieval,Paris, April.Philippe Langlais, George Foster, and GuyLapalme.
2000.
Unit completion for acomputer-aided translation typing system.
InApplied Natural Language Processing 2000,page 10 pages, Seattle, Washington, May.Guy Lapalme, George Foster, and PhilippeLanglais.
2000.
La programmation rient@e-objet pour le d~veloppement de modules delangages.
In Christophe Dony and Houari A.Sahraoui, editors, LMO'O0 - Langages etmodules ~ objets, pages 139-147, Mont St-Hilaire, Qu@bec, 27 Janvier.
Hermes Science.Conference invit@e.Hiroshi Maruyama nd Hideo Watanabe.
1990.An interactive Japanese parser for machinetranslation.
In Proceedings of the Interna-tional Conference on Computational Linguis-tics (COLING), pages 257-262, Helsinki, Fin-land, August.P.
J. Whitelock, M. McGee Wood, B. J. Chan-dler, N. Holden, and H. J. Horsfall.
1986.Strategies for interactive machine transla-tion: the experience and implications of theUMIST Japanese project.
In Proceedings ofthe International Conference on Computa-tional Linguistics (COLING), pages 329-334,Bonn, West Germany.51
