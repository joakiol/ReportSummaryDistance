PARADIGMATIC MORPHOLOGYJonathan CalderUniversity of  EdinburghCentre for Cognitive Science2 Buccleuch PlaceEdinburghScotlandEH8 9LWABSTRACTWe present a notation for the declarativestatement of morphological relationships and lexiealrules, based on the traditional notion of Word andParadigm (cf Hockett 1954).
The phenomenon ofblocking arises from a generalized version ofKiparsky's (1973) Elsewhere Condition, stated interms of ordering by subsumption over paradigms.Orthographic constraints on morphemic alternationare described by means of string equations (Siekmann1975).
We indicate some criticisms to be made of ourapproach from both linguistic and computationalperspectives and relate our approach to others uch asFinite-State Morphology (Koskenniemi 1983),DATR (Gazdar and Evans 1989) and object-orientedmorphophonemics (de Smedt 1984, Daelemans1988).
Finally, we discuss the questions of whether asystem involving string equations allows a reductionto finite-state techniques.I IntroductionA common assumption i linguistics is that thephonological, morphological and orthographicstatements are most appropriately phrased in afundamentally procedural way, (see for exampleHoeksma nd Janda 1988).
Morphological nalysisunder the rubric of finite-state morphology(Koskenniemi 1983) has arguably tended to supportthe view that morphological alternation is bestdescribed by stating procedures for the destructivealteration of orthographic units.
At the very least, itappears to have led to the view that morphologicaldescriptions should be restricted to those with animmediate interpretation in terms of the operations offinite-state transducers.In this paper, we present a notation for thedeclarative statement of morphological relationshipsand lexieal rules, based on the traditional notion ofWord and Paradigm (WP, Hockett 1954, see alsoAnderson 1982).
The phenomenon f blocking arisesfrom a generalized version of Kiparsky's (1973)Elsewhere Condition, stated in terms of ordering bysubsumption over paradigms.
Orthographicconstraints on morphemic alternation are described bymeans of string equations (Siekmann 1975).We will first give a brief introduction to stringequations and the other formal devices used in ourmodel, namely lexical entries and rules, grammaticalproperties and paradigms.
We give exampleparadigms and show how our interpretation ofparadigms leads to the phenomenon fblocking.
Wewill then indicate some criticisms to be made of ourapproach from both linguistic and computationalperspectives.
We discuss relations between ourproposals and the approaches of Finite-StateMorphology (FSM, Koskenniemi 1983), DATR(Gazdar and Evans 1989) and object-orientedmorphophonemies (de Smedt 1985, Daelemans1988).
One important question in the light of currentwork in morphology is whether a system involvingstring equations allows a reduction to finite-statetechniques.
We review some possible answers to thisquestion.2 Components of the Model2.1 S t r ing  Equat ions  and St r ingUni f icat ionThis introduction is based on Siekmann (1975).A string a is a sequence of elements drawn from afinite alphabet C combined by the associativeoperator +, representing the concatenation f strings.- 58 -A string specification or string form is a sequencepossibly containing variables drawn from the set ofvariables V, disjoint from C. Omission of theoperator + increases legibility as shown in the righthand column of (1) which gives examples of strings(a,b) and string specifications (c-e) and where lowercase alphabetics represent elements of C and uppercase alphabetics elements of V.(1) a. w+a+l+k+s walksb.
s+O+r sOrc.
A Ad.
W+s Wse.
k+V+t+V+b kVtVbString specifications are partial descriptions ofstrings.
As with the standard use of unification incomputational linguistics (Shieber et al1983, Pereim1987), we may take two partial descriptions todescribe the same object.
We use string equations torepresent this situation.
The examples in (2) showstring equations and the assignments of values tovariables which satisfy the equations.
(2) a. walks = Wsa'.
W/walkb.
sOrAk = XYZYWb'.
A/O, Y/O, X/s, Z/r, W/kc.
kVtWb = CiDaEc'.
V/i, W/a, C/k, D/t, E/bThe operation which determines the assignmentsof values to variables (equivalently, determines themost general unifying substitution for a givenproblem) is string unification.
While no complete,terminating algorithm for the general case of stringunification exists, the class of problems described bySiekmann (op.
cit., section 4.3.3.2) as P0.5, that iswhere repeated variables are only permitted on oneside of an equation, are decidable and have onlyfinitary substitutions (see also Siekmann 1984).Whether or not an equation falls within P0.5 is easilydetermined.
The examples in (2) and in the rest of thispaper all fall within this class.
We will refer to theresult of applying a unifying substitution to eitherside of a string equation as the unification of the twostring specifications in question.The relation of subsumption defines a partialordering on string specifications.
A stringspecification S subsumes another S' (S _ S') if allground instances (i.e.
instances that contain novariables) of S' are also instances of S. Equivaleafly,S E S' if the unification of S and S' is S' (S' LJ sS = S').
If S and S' are inconsistent, S U s S' isundefined.It is worth noting that the use of stringunification is widespread in the field of automatictheorem proving, as an extension of standardresolution techniques and typically as an instance ofwhat Plotkin (1972) terms "building in equationaltheories", that is the extension of standard unificationalgorithms by axioms such as associativity and thedevelopment of a normal form for the resulting theory(Plotldn op.cit, p74).2.2 Lexical  entr iesA lexical entry S:P associates a string S (i.e.
Scontains no variables) and a set of grammaticalproperties P. We will here treat grammaticalproperties as atomic.
(Their ultimate interpretation isintended to be similar to that of templates in PATR-II(Shieber et al1983)).
A lexical specification ~:?subsumes another ~' :? '
iff ~ _ ?Y' and ?
_< ?
'where < represents the partial ordering over setsdefined by the relation of set inclusion.
(In otherwords, c':~b ' contains at least as much orthographicand grammatical information as ~:~b).
The lexiconconsists of a finite set of lexical entries.2.3 Lexical  rulesA lexical rule is a triple <Name, IS:IP,OS:OP>, representing a mapping between a set of"input" properties IP and a set of "output" propertiesOP.
The interpretation of a rule with respect ogrammatical properties i as follows:(3) Given a lexical item S:P, and a lexical rule,<LR, IS: IP,  OS:OP>, as before, L Rrelates P to another set of properties P' (its"output") in the following way:P' = (P~IP) u OPwhere OP ~ P' and IP ~ P.\ is set complement.
Equivalently P = (P'\OP)- 59  -v IP 1.
The use of set complement allows a generalceteris paribus statement 2.
That is, properties notmentioned inthe rule are unchanged.
The relationshipbetween the string specifications IS and O S ismediated by a paradigm.2.4 ParadigmsA paradigm is a quadruple, <Name, ?~:~,\ [LR1 ... LRn\],  \[Sl ... Sn \ ]>,n  --- 1,whichrelates string forms ?~ and Si via the lexieal ruleLRi  under conditions 0 where the set of stringvariables in ?~ and Si are not disjoint.
Si is a derivedstring form.
Any variables in Si also occur within ?~(this restriction will be reformulated shortly).
Nameis the (unique) name of the paradigm.
?~:07 is thelexical specification of the paradigm.
(Alternatively,it is the underspecified word whose behaviour theparadigm describes).
The interpretation fa paradigmis given in (4).
(4) If a paradigm <Name, ?~:~, LR, S> isapplicable, lexical items S:P and Si:P' arerelated by lexical rule <LR i ,  IS:IP,OS:OP>, with P, P', as in (3).For a paradigm n <Name, ?~:~, LR, S> tobe applicable to a lexical item S:P, two conditionsmust hold:(5) a. a_S  and?~ <_P.b.
There is no paradigm ~' <Name ), ?~':~',LR', S'> such that?~ ~_?~?, ~ _<~',?~'S and ~) < P.(5a) requires that the lexical specification of theparadigm subsume the lexical item.
(5b) requires thatthere be no paradigm whose lexical specification ismore specific than that of ~ which is also applicableto the lexical item.
The effect of (5b) is to enforce ageneralized Elsewhere Condition (Kiparsky 1973),under which a morphological operation is onlyallowed if there is no more specific statement whichalso holds.
This also captures the notion of nested'lIn fact, for this relationship tohold, we have toadd the following restrictions over the propertiesmentioned in the rule and lexical item: P c~ OP <IP and symmetrically P' c~ IP < OP.
We thankMarc Moens for this observation.2Related proposals are made by Flickinger (1987,ch.
5).generalizations or stratification (Flickinger et al1985,Gazdar and Evans 1988).
Given a lexicon containing afinite number of lexical entries, paradigms and lexicalrules, the set of lexical items is defined as the closureof the lexicon under the application of lexical rulesmediated by the paradigms.
Nothing in the basicformalism we propose constrains this closure to befinite or requires that the set of lexical items containthe set of lexical entries.
Note that he restrictions wehave imposed on lexical entries and variables inderived strings imply that, in the lexical items thatresult from the application of paradigms, there will beno string variables.3 Abbreviatory conventionsWe introduce three abbreviatory conventions, thefirst two trivial, the third less so.
First, as lexicalrules always make reference toinput and output stringforms and these forms can be determined byreferenceto the paradigm that relates them, we do not need tostate string forms in lexical rules.
This leads to theconcrete syntax 0P, OP as before):(6) lexical_mle(Name, IP -~ OP)The second convention allows us to state morecomplex constraints on string forms.
In a paradigm<~, q:~, ... >, we allow arbitrary equations overstring forms to be included in ~, including negativeand disjunctive constraints 3, and a syntax forallowing the expression of character classes(effectively these arc just a special case of disjunctiveconstraint).
This allows statements of the followingkind, where + represents string concatenation,represents an inequality between strings and PROLOGconventions for marking variables are followed.
(7) Stem+Affix =Word,Stem = Prefix+C+V,V ?
vowels, C E consonants, V ~ y, Affix = d(7) might be taken to describe the behaviour ofvowel-final verbs under affixation of the past tensemorpheme.
Note that statements which do notconstrain the value of ~ do not take part in thecalculation of subsumption relations over paradigms.3We make the restriction that any suchconstraints do not contain variables.-60 -We also have to revise our restrictions on theoccurrences ofvariables in derived string forms givenin 2.4.
Any variable in a derived string form Simust either occur in the string specification orof theparadigm or must be equated, irectly or indirectly, tosome form consisting of variables drawn solely fromor and ground forms.The third convention is considerably morecomplex and effects a rapprochement between ourscheme and those of default logics for lexicaldescription (Gazdar and Evans 1988, Flickinger 1987)and object-oriented morphophonemics (Daelemans1988).
Given a paradigm <re, or:C, LR, S>, ifthere is only one directly subsuming paradigm <~ ',or':?
', LR', S'>, and for some i, LRi ffi LR' i  andor u or' --~ Si = S'i (i.e.
we would get the sameresult if we used either rc or rt'), we are allowed toomit the references to LRi  and Si in re.
In otherwords, we allow the inheritance of a string form andassociated lexical rule from the more generalparadigm.
In the case of n directly subsumingparadigms, the same convention applies if or u orl... u On --~ Si = S ' i ,1  .
.
.
.
S ' i ,n .
That is,multiple inheritance must be consistent.
In the casewhere this condition doesn't hold, we allow theequivalence of inheritance by delegation (Daelemansop.
cit.
), so enforcing orthogonality of inheritance(Touretzky 1986); corresponding to some LRi, weallow Si to be of the form paradigm(n"),  whereg"  is the name of a paradigm, such that n"  _ n,with the interpretation that the paradigm n"  relates oand Si via LRi.4 Example paradigms and lexical rulesWe are now in a position to give some exampleparadigms.
These llave the concrete syntax:(8) table(Name, String:Properties, LR, S)where Properties may also include stringequations and LR and S are fists of names of lexicalrules and of string forms respectively, subject o theconventions described above.In Table 1 below, (9) is the most generalparadigm for English verbs.
(10), (11), and (12) areinstances of that paradigm under (Sb) above.
(12) isalso an instance of (11).
(9) table(verb, Verb: \[verb, base, Past = Verb+ed\],\[base 3sg non3sg past..participle past passive\[Verb Verb+s Verb Past Past Past(10) table(verb_age, age:\[verb, base\],\[progressive\]\[ageing\] )(11)(12)progressive\]Verb+ing\] )table(verb_strong, S+in+C:\[verb, base,strong, Past=S+un+C, C= {g~k}\],\[past_.participle past passive\]\[Past S+an+C Past\] )table(verb_bring, bring: \[verb, base,strong, Past = brought\],\[past..participle past passive\]\[Past Past Past\] )Table 1: Example paradigms- 61 -The abbreviatory mechanisms allow us roughlythe same amount of compaction for these descriptionsas found in Daelemans' (1988) approach.
Lexical rulesthat might be associated with such paradigms are:(13) lexical_rule(3sg,\[verb, base\] ---> \[verb, finite, 3sg\])lexical rule(non3sg,\[verb, base\] ---> \[verb, finite, non3sg\])5 Criticisms of the frameworkThere is one major criticism of our approachfrom a linguistic point of view, namely that in casessuch as "ageing", there is no reason why the form ofthe participle nding "ing" should be the same in allverbal paradigms.
Likewise we cannot make thegeneralizations that passive and past participle formsare identical in every verbal paradigm and that theorthographic behaviour of the verbal singular affixand nominal plural affix is identical.
Definingsubsumption on the basis of lexical specifications ofparadigms alone leads to a very simple statement ofthe conditions of inheritance of derived string forms,but disallows the possibility of inheritance of partialderived string forms.
The restriction of inheritance bydelegation or stipulation to subsuming paradigms,while natural, is not motivated by more generalconsiderations.This problem becomes much more obvious andacute in analysing non-concatenative morphology, asin Semitic (McCarthy 1981).
It is not theintercalation of the consonantal roots and vocalicmelodies which leads to difficulties, as this is easilydescribed in our framework.
Rather, the problem liesin having to choose which of the root and melodyshould be expressed as the word with which aparadigm is associated.
On the one hand, traditionalgrammar would suggest that the consonantal root hassome claim to this status.
However, there are clearlyrelationships between the vocalic melodies whichindicate syntactic regularities on the basis of Ablaut(McCarthy 1981, p403), and these regularities cannotbe captured if we choose the consonantal root as theparadigmatic word and disallow inheritance of partialderived string forms.
In any case, such regularitiesshould presumably be stated independently of anyroots with which they happen to combine.The above criticism provides an interestingillumination of Matthews' (1974, p163) claim thatdifferent styles of morphological nalysis are requiredby different language types, word and paradigmmorphology being particularly suited to inflectingrather than isolating and agglutinating languages.Current work is investigating how we may alter someof the assumptions in the definitions in section 2, toallow for some degree of parametricity in thelanguages that such systems may describe.A second criticism is both computational andlinguistic.
String unification is a very powerfuloperation and, while it is arguable that strings in oursense and orthographic constructs are indeed the samekind of object, one may justifiably have reservationsabout introducing string equations into linguisticdescription.
The resolution of this point awaitsfurther work on the formal properties of finitarytheories.
We return to this point in our discussion ofphonological theory below.
The computationalaspects of this problem will have less force if we canshow that there is a reduction from descriptionsinvolving string unification to some less powerfulmechanism such as finite state transduction.
Thispoint is also discussed further below.6 Comparison with other frameworksThat our approach is more general than standardFSM is clear from the fact that string variables canrepresent an unbounded amount of orthographicmaterial.
In this way, we can, for example, modelunbounded reduplication.
The problematic cases ofFinnish ambifixation described by Karttunen (1983p181, citing Koskenniemi) are handledstraightforwardly, although this raises immediatequestions about the formalism's interpretation iterms of finite-state transduction, discussed shortly.G0rz and Paulus's (1988) algorithm for the locationof stem vowels in German which undergo Ablaut canreconstructed declaratively.
Our approach also solvesthe problem noted by Bear (1988) of theovergenerality of rules in an FSM system.
Heintroduces the mechanism of a negative rule feature toprevent he application of an epenthesis rule whichwould otherwise insert an "e" before the suffix "s" in- 62 -the case of words such as "banjo" and "tango".
Theneed for negative rule features and theirquasiprocedural implications are avoided in the systemwe propose.
The following paradigm correctly statesthe facts and will apply only in the case of thoseitems that violate the subgeneralization concerningnominal plurals in "o".
(14) table(piano,S:\[noun, singular,S = {piano, piccolo .... }\],\[singular, plural\]\[S, S+s\])Free variation, such as that between "o" and "oe"forms in words like "cargo", is treated analogously byallowing the derived string specification to beS+{e, O}+s in this case (where Et represents theempty string), although this obviously fails tocapture the fact that the alternants are precisely thosefound in the most closely related paradigms.
Finally,having the level of properties over which to stategeneralizations means that our lexical representationsof strings are not cluttered with non-realizablediacritic characters whose function is simply totrigger morphological processes (of Bear 1988).The main advance we would claim for oursystem is that we have provided a calculus fororthographic forms, bringing the treatment oforthography within the same kind of logicalframework now accorded to our treatment ofsemanticand syntactic objects.
The fully declarativeinterpretation of our system and the similarity ofstatements within it to work by Daelemans (1988)offer a way of giving a formal treatment of object-oriented morphophonemics.Finally, recent work by Gazdar and Evans (1988)may offer techniques for extending the formalism tomore complex grammatical descriptions, in line withmany current views on the nature of syntacticcategories as recursively structured objects.
Currentwork is examining this possibility.7 Reduct ion  to f in i te .state  t ransducersWhile the declarative nature of our system meansthat it is not tied to a particular computationalinterpretation, the fact that the closure of the lexiconmay be infinite argues in favour of an interpretationthat does not presuppose computation of that closure,and considerations of efficiency in favour of one interms of finite-state transduction (Koskenniemi1983) 4.
It is immediately clear that heavy restrictionshave to be placed on systems involving stringequations inorder to have any chance of a reduction tofinite-state transduction atall.
One difficulty will liein representing paradigm subsumption i duced bynon-orthographic properties.
The assumption thatthere is only a finite set of such properties wouldmake this problem easier.
(We assume thesubsumption relations engendered by orthographicproperties are readily handled by the standard notion ofpriority of transition in FSTs).
A much graverproblem lies in eliminating non-finite-stateconstructions.
Example (15) below exhibits (at least)context-frecness:(15) table(weak_verb,S+en:\[verb, weak, root\],\[ .... past_participle .... \]\[ .... ge+S+et .
.
.
.
\])Here any string may be substituted for S. If weallow pastparticiple to represent the null lexical rule,we may generate the string set (ge)nS(et) n which isclearly homomorphie to the context-free languageanb n. Similar demonstrations can be given ofcontext-sensitive 5 and even more powerful languages.In order for the reduction to go through in this case,we should have to demonstrate he finitariness ofsubstitutions for S. This is clearly impossible in thegeneral case.
The kinds of restriction to be imposedwould include at least he prohibition of copying overunbounded domains and of affixation at both margins.Under the optimistic assumption that appropriaterestrictions can be found, we might proceed bycomputing tree-structured lexicons on the basis oflexical entries and of affixes introduced underparadigms.
Continuation classes, and possibly further4This section and the following have benefitedgreatly from discussions with Mike Reape.5Such as the string specification WW, where Wranges over strings from some alphabet and whichclearly shows context-sensitivity (Aho and Ullman1972, p198).- 63  -partitions and duplications of the lexicons, could becomputed on the basis of the properties mentioned inparadigms and lexical rules.
Information from thedistribution of derived forms with respect to stringspecifications in paradigms could then be used toconstruct the FSMs that mediate surface and lexiealtapes.
Problematic cases might only be handled byindicating an ordering over paradigms where context-freeness i implicated, effectively indicating that hoseparadigms may only apply to non-derived forms andallowing incompleteness in the computation of theclosure of the lexicon.The above paragraphs are mostly speculation.
AsGazdar (1985) notes, it is not certain thatmorphological phenomena in natural anguage arebest characterized byf'mite-state devices.
Dependingon one's view of the data cited by Culy (1985) and theambifixation cases mentioned above, the formalpower of our framework might be interpreted as avirtue rather than a vice and future work should alsolook at introducing (at least) context-free d vices intoour computational interpretation of morphology.Unsurprisingly, this is an area for further research.8 ImplementationAll aspects of the system described above havebeen implemented, primarily by Mike Reape.
Theimplementation f lexical rules differs somewhatfrom the presentation given here, in that we allow theassociation of a PATR-II style lexical rules with thelexical rules we describe above and, as such, lexicalrules may perform arbitrary mappings over featurestructures.
The work considerably extended publishedstring unification algorithms to handle identity andarbitrary constraints over string forms.
The system isa subcomponent of a polytheoretic lexicon system(Calder and te Lindert 1987, cf.
also Zaenen 1988) andis currently being used to generate English lexicalentries for use with Unification Categorial Grammar(Zeevat et al1986, Calder et al1986).
The systemgenerates lexical entries off-line; the lexicons used todate have provably finite closures under theapplication of lexical rules.
Current work is focusedon the computational interpretation f paradigms andon descriptive work in languages other than English.ACKNOWLEDGEMENTSThis work is supported by ESPRIT projectP393: ACORD "The Construction and Interrogationof Knowledge Bases using Natural Language Text andGraphics".
Thanks are due in particular to MikeReape and also to Ewan Klein, Claire Gardent, Enricote Linden, Mare Moens, Antonio Sanfilippo andHenk Zeevat for discussions and criticism of previousproposals.
All errors are of course my own.ReferencesAho, A. V. and Ullman, J. D. (1972).The theory ofParsing, Translation, and Compiling.Volume 1: Parsing Englewood Cliffs:Prentice-Hall.Anderson, S. R. (1982)"Where's Morphology"Linguistic Inquiry 13.4 pp571-612Bear, J.
(1988) "Morphology and two-level rules andnegative rule features".
InProceedings ofthe12th International Conference onComputational Linguistics and the 24thAnnual Meeting of the Association forComputational Linguistics, Budapest,Hungary, 22-27 August, 1988, pp28-31Calder, J. and te Lindert, E. (1987) "TheProtolexicon: Towards a High-LevelLanguage for Lexical Description".
In Klein,E.
and Benthem, J.
(eds.)
Categories,Polymorphism and Unification, pp355-370.Edinburgh and Amsterdam: Centre forCognitive Science, University of Edinburghand Institute for Language, Logic andInformation, University of Amsterdam.Calder, J., Moens, M. and Zeevat, H. (1986) A UCGInterpreter.
ESPRIT PROJECT 393ACORD; Deliverable T2.6, Centre forCognitive Science, University of Edinburgh.Culy, C. (1985) "The complexity of the vocabularyof Bambara" Linguistics and Philosophy 8,pp345-351.Daelemans, W. (1988) A Model of DutchMorphophonology and its Applications.
AIMemo No.
88-8, Artificial IntelligenceLaboratory, Brussels, May, 1988.Flickinger, D., Pollard, C. and Wasow, T. (1985)Structure-Sharing  Lexical Representation.In Proceedings ofthe 23rd Annual Meetingof the Association for ComputationalLinguistics, University of Chicago,Chicago, Illinois, July, 1985, pp262-267.Fliekinger, D. (1987) Lexical Rules in theHierarchical Lexicon, PhD Thesis, StanfordUniversity.Gazdar, G. J. M. (1985) "Finite State Morphology"-64 -Linguistics 23.4. pp597-607Gazdar, G. J. M. and Evans, R. (1989) "Inference inDATR" in Proceedings of the FourthConference ofthe European Chapter of.
theAssociation For Computational Linguistics,UMIST, April 1989, Morristown, NJ: ACL.GOrz, G. and Paulus, D.(1988) "A finite stateapproach to German verb morphology" InProceedings of the 12th InternationalConference on Computational Linguisticsand the 24th Annual Meeting of theAssociation for Computational Linguistics,Budapest, Hungary, 22-27 August, 1988,pp212-215Hockett, C. F. (1954) Two Models of GrammaticalDescription.
Word, 10, pp210-311.
Also inJoos, M.
(ed.
), Readings in Linguistics I,University of Chicago Press, 1957, pp386-399.Hoeksma, J. and Janda, R.D.
(1988) Implications ofProcess-Morphology for CategorialGrammar, in R. Oehrle, E. Bach and D.Wheeler (eds.)
Categorial Grammars andNatural Language Structures, 199-247Studies in Linguistics and Philosophy, D.Reidel, Dordrecht.Karttunen, L. (1983) "KIMMO: A generalmorphological processor".
Texas LinguisticForum, 22, 165-186.Karttunen, L. and Wittenburg, K. (1983), " A two-level morphological nalysis of English",Texas Linguistic Forum, 22, 217-228Kiparsky, P. (1973) ""Elsewhere" in Phonology".
InAnderson, S. R. and Kiparsky, P.
(eds.)
AFestschrift for Morris Halle.
Holt, Rinehartand WinstonKoskenniemi, K. (1983) "Two-level morphology: Ageneral computational model for word-formrecognition and production".
Publication 11,Department of General Linguist ics,University of Helsinki, Helsinki, 1983.McCarthy, J.
(1981) "A Prosodic Theory ofNonconcatenative Morphology" LinguisticInquiry 12 373-418.Matthews, P. H. (1974) Morphology, Cambridge,Cambridge University Press.Pereira, F. C. N. (1987) "Grammars and Logics ofPartial Information" Proceedings of theInternational Conference on LogicProgramming, Melbourne, AustraliaPlotkin, G. D. (1972) "Building-in EquationalTheories" in D Michie and B Meltzer (eds.
)Machine Intelligence 7, EdinburghUniversity Press.Shieber, S., Uszkoreit, H., Pereira, F.C.N.,Robinson, J.J., and Tyson, M. (1983) "TheFormalism and Implementation of PATR-II"in B. Grosz and M. Stickel (eds.)
Researchon Interactive Acquisition and Use ofKnowledge SRI International, Menlo Parkpp39-79.Siekmann, J. H. (1975) String-unification, part I.Essex University ms.Siekmann, J. H. (1984) Universal Unification.
InShostak, R. H.
(ed.)
Proceedings of theSeventh International Conference onAutomated Deduction, Napa, California,May, 1984, ppi-42.
Lecture Notes inComputer Science, Springer-Verlag.de Smedt, K. (1984) "Using Object-OrientedKnowledge-Representation Techniques inMorphology and Syntax Programming", inO'Shea, T.
(ed.)
ECAI "84: Advances inArtificial Intelligence.
North Holland.Touretzky, D. (1986) The Mathematics of lnheritanceSystems, Morgan Kaufmann, Los AltosZaenen, A.
(1988) Lexical Information in LFG - anoverview.
Unpublished ms.Zeevat, H., Klein, E., and Calder, J.
(1987)"Introduction to Unification CategorialGrammar" in Haddock, N.J., Klein, E. andMorrill, G.
(eds.
)Categorial Grammar,Unification Grammar, and Parsing,Edinburgh Working Papers in CognitiveScience I, pp195-222-65 -
