Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and ComputationalNatural Language Learning, pp.
996?1004, Prague, June 2007. c?2007 Association for Computational LinguisticsLearning to Find English to Chinese Transliterations on the WebJian-Cheng WuDepartment of Computer ScienceNational Tsing Hua University101, Kuangfu Road, Hsinchu, Taiwand928322@oz.nthu.edu.twJason S. ChangDepartment of Computer ScienceNational Tsing Hua University101, Kuangfu Road, Hsinchu, Taiwanjschang@cs.nthu.edu.twAbstractWe present a method for learning to findEnglish to Chinese transliterations on theWeb.
In our approach, proper nouns areexpanded into new queries aimed at maxi-mizing the probability of retrieving trans-literations from existing search engines.The method involves learning the sublexi-cal relationships between names and theirtransliterations.
At run-time, a given nameis automatically extended into queries withrelevant morphemes, and transliterations inthe returned search snippets are extractedand ranked.
We present a new system,TermMine, that applies the method to findtransliterations of a given name.
Evaluationon a list of 500 proper names shows thatthe method achieves high precision and re-call, and outperforms commercial machinetranslation systems.1 IntroductionIncreasingly, short passages or web pages are be-ing translated by desktop machine translation soft-ware or are submitted to machine translation ser-vices on the Web every day.
These texts usuallycontain some proportion of proper names (e.g.,place and people names in ?The cities of Mesopo-tamia prospered under Parthian and Sassanianrule.?
), which may not be handled properly by amachine translation system.
Online machine trans-lation services such as Google Translate1 or Yahoo!Babelfish2 typically use a bilingual dictionary thatis either manually compiled or learned from a par-1 Google Translate: translate.google.com/translate_t2 Yahoo!
Babelfish: babelfish.yahoo.comallel corpus.
However, such dictionaries often haveinsufficient coverage of proper names and techni-cal terms, leading to poor translation performancedue to out of vocabulary (OOV) problem.Handling name transliteration is also importantfor cross language information retrieval (CLIR)and terminology translation (Quah 2006).
Thereare also services on the Web specifically targetingtransliteration aimed at improving CLIR, includingCHINET (Kwok et al 2005) and LiveTrans (Lu,Chien, and Lee 2004).The OOV problems of machine translation (MT)or CLIR can be handled more effectively by learn-ing to find transliteration on the Web.
Consider thesentence in Example (1), containing three propernames.
Google Translate produces the sentence inExample (2) and leaves ?Parthian?
and ?Sas-sanian?
not translated.
A good response might be atranslation like Example (3) with appropriatetransliterations (underlined).
(1) The cities of Mesopotamia prospered underParthian and Sassanian rule.
(2) ?????
parthian ???
?sassanian ???
(3) ??????3??????4???5???????
?These transliterations can be more effectivelyretrieved from mixed-code Web pages by extend-ing each of the proper names into a query.
Intui-tively, by requiring one of likely transliterationmorphemes (e.g., ???
(Ba) or ???
(Pa) for namesbeginning with the prefix ?par-?
), we can bias thesearch engine towards retrieving the correct trans-3 ??????
(Meisuobudamiya) is the transliteration of?Mesopotamia.
?4 ???
(Badiya) is the transliteration of ?Parthian.
?5 ??
(Sashan) is the transliteration of ?Sassanian.
?996Figure 1.
An example of TermMine search for transliterations of the name ?Parthian?literations (e.g., ????
?
(Badiya) and ?????
(Patiya)) in snippets of many top-ranked docu-ments.This approach to terminology translation bysearching is a strategy increasingly adopted byhuman translators.
Quah (2006) described a mod-ern day translator would search for the translationof a difficult technical term such as ?????????????
by expanding the query with theword ?film?
(back transliteration of the component??????
of the term in question).
This kind ofquery expansion (QE) indeed increases the chanceof finding the correct translation ?anisotropic con-ductive film?
in top-ranked snippets.
However, themanual process of expanding query, sendingsearch request, and extracting transliteration is te-dious and time consuming.
Furthermore, unless thequery expansion is done properly, snippets con-taining answers might not be ranked high enoughfor this strategy to be the most effective.We present a new system, TermMine, that auto-matically learns to extend a given name into aquery expected to retrieve and extract translitera-tions of the proper name.
An example of machinetransliteration of ?Parthian?
is shown in Figure 1.TermMine has determined the best 10 query ex-pansions (e.g., ?Parthian ?
,?
?Parthian ?
?
).TermMine learns these effective expansions auto-matically during training by analyzing a collectionof place names and their transliterations, and deriv-ing cross-language relationships of prefix and post-fix morphemes.
For instance, TermMine learns thata name that begins with the prefix ?par-?
is likelyto have a transliteration beginning with ???
or???).
We describe the learning process in Section3.This prototype demonstrates a novel method forlearning to find transliterations of proper nouns onthe Web based on query expansion aimed atmaximizing the probability of retrieving translit-erations from existing search engines.
Since themethod involves learning the morphological rela-tionships between names and their transliterations,we refer to this IR-based approach as morphologi-cal query expansion approach to machine translit-eration.
This novel approach is general in scopeand can also be applied to back transliteration andto translation with slight modifications, eventhough we focus on transliteration in this paper.The remainder of the paper is organized as fol-lows.
First, we give a formal statement for theproblem (Section 2).
Then, we present a solution tothe problem by proposing new transliteration prob-ability functions, describing the procedure for es-timating parameters for these functions (Section 3)and the run-time procedure for searching and ex-997tracting transliteration via a search engine (Section4).
As part of our evaluation, we carry out two setsof experiments, with or without query expansion,and compare the results.
We also evaluate the re-sults against two commercial machine translationonline services (Section 5).2 Problem StatementUsing online machine translation services for nametransliteration does not work very well.
Searchingin the vicinity of the name in mixed-code Webpages is a good strategy.
However, query expan-sion is needed for this strategy to be effective.Therefore, to find transliterations of a name, apromising approach is to automatically expand thegiven name into a query with the additional re-quirement of some morpheme expected to be partof relevant transliterations that might appear on theWeb.Table 1.
Sample name-transliteration pairs from thetraining collection.Name Transliteration Name TransliterationAabenraa ???
Aarberg ??
?Aabybro ????
Aarburg ??
?Aachen ??
Aardenburg ??
?Aalesund ???
Aargau ?
?Aaley ??
Aars ??
?Aalten ???
Aba ?
?Aarau ??
Abacaxis ????
?Now, we formally state the problem we are deal-ing with:While a proper name N is given.
Our goalis to search and extract the transliterationT of N from Web pages via a general-purpose search engine SE.
For that, weexpand N into a set of queries q1, q2, ?,qm, such that the top n document snippetsreturned by SE for the queries are likely tocontain some transliterations T of thegiven name N.In the next section, we propose using a probabil-ity function to model the relationships betweennames and transliterations and describe how theparameters in this function can be estimated.3 Learning Relationships for QEWe attempt to derive cross-language morpho-logical relationships between names and translit-erations and use them to expand a name into aneffective query for searching and extracting trans-literations.
For the purpose of expanding the givenname, N, into effective queries to search and ex-tract transliterations T, we define a probabilisticfunction for mapping prefix syllable from thesource to the target languages.
The prefix translit-eration function P(TP | NP) is the probability of Thas a prefix TP under the condition that the name Nhas a prefix NP.P (TP | NP) = Count (TP,NP) / Count (NP)       (1)where  Count (TP,NP) is the number of TP and NPco-occurring in the pairs of training set(see Table 1), and Count(NP) is the num-ber of NP occurring in training set.Similarly, we define the function P (TS | NS) forpostfixes TS and NS:P (TS | NS) = Count (TS,NS) / Count (NS)        (2)The prefixes and postfixes are intended as a syl-lable in the two languages involved, so the twoprefixes correspond to each other (See Table 2&3).Due to the differences in the sound inventory, theRoman prefix corresponding to a syllabic prefix inChinese may vary, ranging from a consonant, avowel, or a consonant followed by a vowel (but nota vowel followed by a consonant).
So, it is likelysuch a Roman prefix has from one to four letters.On the contrary, the prefix syllable for a namewritten in Chinese is readily identifiable.Table 2.
Sample cross-language morphological relation-ships between prefixes.NamePrefix (NP)TransliterationPrefix (TP)NPCountTPCountCo-occ.Counta- ?
(A) 1,456 854 854a- ?
(Ya) 1,456 267 264ab- ?
(A) 77 854 45ab- ?
(Ya) 77 267 32b- ?
(Bu) 2,319 574 566b- ?
(Ba) 2,319 539 521ba- ?
(Ba) 650 574 452bu- ?
(Bu) 299 539 182998Table 3.
Sample cross-language morphological relation-ships between postfixes.NamePostfix (Ns)TransliterationPostfix (Ts)NsCountTsCountCo-occ.Count-a ?
(La) 4,774 1,044 941-a ?
(Ya) 4,774 606 568-la ?
(La) 461 1,044 422-ra ?
(La) 534 1,044 516-ia ?
(Ya) 456 606 391-nia ?
(Ya) 81 606 77-burg ?
(Bao) 183 230 175We also observe that a preferred prefix (e.g.,???
(Ai)) is often used for a Roman prefix (e.g.,?a-?
or ?ir-?
), while occasionally other homo-phonic characters are used (e.g., ???(Ai)).
Theskew distribution creates problems for reliable es-timation of transliteration functions.
To cope withthis data sparseness problem, we use homophoneclasses and a function CL that maps homophoniccharacters to the same class number.
For instance,???
and ???
are homophonic, and both are as-signed the same class identifier(see Table 4 formore samples).Therefore, we haveCL (???)
= CL (???)
= 275.Table 4.
Some examples of classes of homophoniccharacters.
The class ID of each class is assigned arbi-trarily.ClassIDTransl.charPronun-ciationClassIDTransl.charPronun-ciation1 ?
Ba  2 ?
Bo1 ?
Ba 275 ?
Ai1 ?
Ba 275 ?
Ai1 ?
Ba 275 ?
Ai1 ?
Ba 276 ?
Ao1 ?
Ba 276 ?
Ao2 ?
Bo 276 ?
Ao2 ?
Bo ?
?
?With homophonic classes of transliteration mor-phemes, we define class-based transliteration prob-ability as followsPCL(C | NP) = Count(TP,NP) / Count(NP)       (3)where CL(TP) = CPCL(C | NS) = Count(TS,NS) / Count(NS)       (4)where CL(TS) = Cand then we rewrite P (TP | NP) and P (TS | NS) asP (TP | NP) = PCL(CL(TP ) | NP)                        (5)P (TS | NS) = PCL(CL(TS ) | NS)                        (6)With class-based transliteration probabilities, weare able to cope with difficulty in estimating pa-rameters for rare events which are under repre-sented in the training set.
Table 5 shows that ??
?belongs to a homophonic class co-occurring with?a-?
for 46 times, even when only one instance of(??
?, ?a-?
).After cross-language relationships for prefixesand postfixes are automatically trained, the prefixrelationships are stored as prioritized query expan-sion rules.
In addition to that, we also need a trans-literation probability function to rank candidatetransliterations at run-time (Section 4).
To copewith data sparseness, we consider names (or trans-literations) with the same prefix (or postfix) as aclass.
With that in mind, we use both prefix andpostfix to formulate an interpolation-based estima-tor for name transliteration probability:P(T | N)=max ?1P(TP | NP)+?2P(TS | NS)        (7)NP, NSwhere ?1 + ?2 = 1 and NP, NS, TP, and TS are theprefix and postfix of the given name Nand transliteration T.For instance, the probability of ???????
?
(Meisuobudamiya) as a transliteration of?Mesopotamia?
is estimated as followsP (??????
| ?Mesopotamia?
)= ?1P (???
| ?me-?
)+ ?2 P (???
| ?-a?
)(1) For each entry in the bilingual name list, pairup prefixes and postfixes in names and trans-literations.
(2) Calculate counts of these affixes and their co-occurrences.
(3) Estimate the prefix and postfix transliterationfunctions(4) Estimate class-based prefix and postfix trans-literation functionsFigure 2.
Outline of the process used to train theTermMine system.The system follows the procedure shown in Fig-ure 2 to estimate these probabilities.
In Step (1),999the system generates all possible prefix pairs foreach name-transliteration pair.
For instance, con-sider the pair, (?Aabenraa,?
?????
), the systemwill generate eight pairs:(a-, ?-), (aa-, ?-), (aab-, ?-), (aabe-, ?-),(-a, -?
), (-aa, -?
), (-raa, -?
), and (-nraa, -?
).Finally, the transliteration probabilities are esti-mated based on the counts of prefixes, postfixes,and their co-occurrences.
The derived probabilitiesembody a number of relationships:(a) Phoneme to syllable relationships (e.g., ?b?
vs.?
?
?
as in ?Brooklyn?
and ?
?
?
???
(Bulukelin)),(b) Syllable to syllable relationships (e.g., ?bu?
vs.???
),(c) Phonics rules  (e.g., ?br-?
vs.
???
and ???
vs.?cl-?).
The high probability of P(???
| ?cl-?
)amounts to the phonics rule that stipulates ?c?be pronounced with a ?k?
sound in the contextof ?l.
?4 Transliteration Search and ExtractionAt run-time, the system follows the procedure inFigure 3 to process the given name.
In Step (1), thesystem looks up in the prefix relationship table tofind the n best relationships (n = MaxExpQueries)for query expansion with preference for relation-ships with higher probabilistic value.
For instance,to search for transliterations of ?Acton,?
the systemlooks at all possible prefixes and postfixes of ?Ac-ton,?
including a-, ac-, act-, acto-, -n, -on, -ton,and -cton, and determines the best query expan-sions: ?Acton ?,?
?Acton ?,?
?Acton ?,?
?Ac-ton ?,?
?Acton ?,?
etc.
These effective expan-sions are automatically derived during the trainingstage described in Section 3 by analyzing a largecollection of name-transliteration pairs.In Step (2), the system sends off each of thesequeries to a search engine to retrieve up toMaxDocRetrieved document snippets.
In Step (3),the system discards snippets that have too littleproportion of target-language text.
See Example (4)for a snippet that has high portion of English textand therefore is less likely to contain a translitera-tion.
In Step (4), the system considers the sub-strings in the remaining snippets.
(1) Look up the table for top MaxExpQueriesprefix and posfix relationships relevant tothe given name and use the target mor-phemes in the relationship to form ex-panded queries(2) Search for Web pages with the queries andfilter out snippets containing at less thanMinTargetRate portion of target languagetext(3) Evaluate candidates based on class-basedtransliteration probability (Equation 5)(4) Output top one candidate for evaluationFigure 3.
Outline of the steps used to search, extract,and rank transliterations.Table 5.
Sample data for class-based morphologicaltransliteration probability of prefixes, where # of NPdenotes the number of the name prefix NP; # of C, NPdenotes the number of all TP belonging to the class Cco-occurring with the NP; # TP, NP denotes the numberof transliteration prefix TP co-occurs with the NP; P(C|NP)denotes the probability of all TP belonging to C co-occurring with the NP; P(TP|NP) denotes the probabilityof the Tp co-occurs with the NP.NP ClassIDTP # of NP # ofC,NP# ofTP,NPP(C|NP) P(TP|NP)a- 275 ?
1456 46 28 0.032 0.019a- 275 ?
1456 46 17 0.032 0.012a- 275 ?
1456 46 1 0.032 0.000a- 276 ?
1456 103 100 0.071 0.069a- 276 ?
1456 103 2 0.071 0.001a- 276 ?
1456 103 1 0.071 0.000ba- 2 ?
652 5 3 0.008 0.005ba- 2 ?
652 5 1 0.008 0.002ba- 2 ?
652 5 1 0.008 0.002Table 6.
Sample data for class-based morphologicaltransliteration probability of postfixes.
Notations aresimilar to those for Table 5.Ns ClassIDTs # of Ns # ofC,Ns# ofTs,NsP(C|Ns) P(Ts|Ns)-li 103 ?
142 140 85 0.986 0.599-li 103 ?
142 140 52 0.986 0.366-li 103 ?
142 140 2 0.986 0.014-li 103 ?
142 140 1 0.986 0.007-li 103 ?
142 140 0 0.986 0.000-raa 112 ?
4 1 1 0.250 0.250-raa 112 ?
4 1 0 0.250 0.000-raa 112 ?
4 1 0 0.250 0.000-raa 112 ?
4 1 0 0.250 0.0001000For instance, Examples (5-7) shows remainingsnippets that have high proportion of Chinese text.The strings ?????
(Akedun) is a transliterationfound in snippet shown in Example (5), a candi-date beginning with the prefix ???
and endingwith the postfix  ???
and is within the distance of1 of the instance ?Acton,?
separated by a punctua-tion token.
The string ?????
(Aikedun) foundin Example (6) is also a legitimate transliterationbeginning with a different prefix ??,?
while ?????
(Aiketeng) in Example (7) is a transliterationbeginning with yet another prefix ??.?
Translit-eration ?????
appears at a distance of 3 from?Acton,?
while two instances of ?????
appearat the distances of 1 and 20 from the nearest in-stances of ?Acton.?
(4) Acton moive feel pics!!
- ??????
: ???
> ????
> ??
> Actonmoive feel pics!!
Hop Hero - Acton moive feelpics!
!http://www.hkmassive.com/forum/viewthread.php?tid=2368&fpage=1 Watch the slide show!
...(5) New Home Alert - Sing Tao New HomesPlease select, Acton ??
?, Ajax ??
?, Allis-ton ???
?, Ancaster ???
?, Arthur ?
?,Aurora ??
?, Ayr ?
?, Barrie ?
?, Beamsville,Belleville ...(6) STS-51-F ?
Wikipedia?????????????????????
...
??????
(Karl Henize ????
STS-51-F ??)?????
; ??????
(Loren Acton????
STS-51-F??)???????
; ??-?????
(John-David F. ...(7) ????
?-00-Acton-Australia.htmActon Systems is a world leading manufacturersupplying stuctured cabling systems suited to theAustralian and New Zealand marketplace.
??????????????????
?, ????????????
Custom made leads are nowavailable ...The occurrence counts and average distancefrom instances of the given name are tallied foreach of these candidates.
Candidates with a lowoccurrence count and long average distance areexcluded from further consideration.
Finally, allcandidates are evaluated and ranked using Equa-tion (7) given in Section 3.5 EvaluationIn the experiment carried out to assess the feasibil-ity to the proposed method, a data set of 23,615names and transliterations was used.
This set ofplace name data is available from NICT, Taiwanfor training and testing.
There are 967 distinct Chi-nese characters presented in the data, and moredetails of training data are available in Table 7.The English part consists of Romanized versionsof names originated from many languages, includ-ing Western and Asian languages.
Most of the time,the names come with a Chinese counterpart basedsolely on transliteration.
But occasionally, the Chi-nese counterpart is part translation and part trans-literation.
For instance, the city of ?Southampton?has a Chinese counterpart consisting of ??
?
(translation of ?south?)
and ?????
(translitera-tion of ?ampton?
).Table 7.
Training data and statisticsType of Data Used in Experiment NumberName-transliteration pairs 23,615Training data 23,115Test data 500Distinct transliteration morphemes 967Distinct transliteration morphemes(80% coverage) 100Names with part translation andpart transliteration (estimated) 300Cross-language prefix relationships 21,016Cross-language postfix relationships 26,564We used the set of parameters shown in Table 8to train and run System TermMine.
A set of 500randomly selected were set aside for testing.
Wepaired up the prefixes and postfixes in the remain-ing 23,116 pairs, by taking one to four leading ortrailing letters of each Romanized place names andthe first and last Chinese transliteration characterto estimate P (TP | NP) and P (TS | NS).Table 8.
Parameters for training and testingParameter Value DescriptionMaxPrefixLetters 4 Max number of let-ters in a prefixMaxPostfixLetters 4 Max number of let-ters in a postfixMaxExpQueries 10 Max number of ex-panded queriesMaxDocRetrieved 1000 Max number of document retrieved1001MinTargetRate 0.5 Min rate of target text in a snippetMinOccCount 1Min number of co-occurrence of queryand transliterationcandidate in snippetsMaxAvgDistance 4 Max distance be-tween N and TWeightPrefixProb 0.5Weight of Prefixprobability (?1)WeightPostfixProb 0.5Weight of Postfixprobability (?2)We carried out two kinds of evaluation on Sys-tem TermMine, with and without query expansion.With QE option off, the name itself was sent off asa query to the search engine, while with QE optionturned on, up to 10 expanded queries were sent foreach name.
We also evaluated the system againstGoogle Translate and Yahoo!
Babelfish.
We dis-carded the results when the names are returned un-translated.
After that, we checked the correctnessof all remaining results by hand.
Table 9 shows asample of the results produced by the three systems.In Table 10, we show performance differencesof system TermMine in query expansion option.Without QE, the system returns transliterations(applicability) less than 50% of the time.
Neverthe-less, there are enough snippets for extracting andranking of transliterations.
The precision rate of thetop-ranking transliterations is 88%.
With QEturned on, the applicability rate increases signifi-cantly to 60%.
The precision rate also improvedslightly to 0.89.The performance evaluation of three systems isshown in Table 11.
For the test set of 500 placenames, Google Translate returned 146 translitera-tions and Yahoo!
Babelfish returned only 44, whileTermMine returned 300.
Of the returned translit-erations, Google Translate and Yahoo!
Babelfishachieved a precision rate around 50%, whileTermMine achieved a precision rate almost as highas 90%.
The results show that System TermMineoutperforms both commercial MT systems by awide margin, in the area of machine transliterationof proper names.Table 9.
Sample output by three systems evaluated.
Thestared transliterations are incorrect.Name TermMine Google TranslateYahoo!BabelfishArlington  ???
???
??
?Toledo  ???
???
-Palmerston  ????
????
-Cootamundra  ?????
?????
-Bangui  ??
??
-Australasia  ?????
*???
????
?Wilson  ???
???
??
?Mao *???
?
?Inverness  ????
*??
???
?Cyprus  ????
????
???
?Rostock  ????
????
???
?Bethel  ???
???
*?
?Arcade  ???
*??
*?
?Lomonosov  ?????
?????
-Oskaloosa  ?????
?????
-Table 10.
Performance evaluation of TermMineMethodEvaluationTermMineQE-TermMineQE+# of cases performed 238  300Applicability  0.48  0.60# Correct Answers    209    263Precision  0.88  0.89Recall  0.42  0.53F-measure 0.57 0.66Table 11.
Performance evaluation of three systemsMethodEvaluationTermMineQE+GoogleTranslateYahoo!Babelfish# of cases done  300  146  44# of correctanswers263  67  23Applicability  0.60  0.29  0.09Precision  0.89  0.46  0.52Recall  0.53  0.13 0.05F-measure 0.66    0.21 0.086 Comparison with Previous WorkMachine transliteration has been an area of activeresearch.
Most of the machine transliterationmethod attempts to model the transliteration proc-ess of mapping between graphemes and phonemes.Knight and Graehl (1998) proposed a multilayermodel and a generate-and-test approach to performback transliteration from Japanese to English basedon the model.
In our work we address an issue ofproducing transliteration by way of search.Goto et al (2003), and Li et al (2004) proposeda grapheme-based transliteration model.
Hybridtransliteration models were described by Al-Onaizan and Knight (2002), and Oh et al (2005).1002Recently, some of the machine transliteration studyhas begun to consider the problem of extractingnames and their transliterations from parallel cor-pora (Qu and Grefenstette 2004, Lin, Wu andChang 2004; Lee and Chang 2003, Li and Grefen-stette 2005).Cao and Li (2002) described a new method forbase noun phrase translation by using Web data.Kwok, et al (2001) described a system calledCHINET for cross language name search.
Nagataet al (2001) described how to exploit proximityand redundancy to extract translation for a giventerm.
Lu, Chien, and Lee (2002) describe a methodfor name translation based on mining of anchortexts.
More recently, Zhang, Huang, and Vogel(2005) proposed to use occurring words to expandqueries for searching and extracting transliterations.Oh and Isahara (2006) use phonetic-similarity torecognize transliteration pairs on the Web.In contrast to previous work, we propose a sim-ple method for extracting transliterations based ona statistical model trained automatically on a bilin-gual name list via unsupervised learning.
We alsocarried out experiments and evaluation of trainingand applying the proposed model to extract trans-literations by using web as corpus.7 Conclusion and Future WorkMorphological query expansion represents an in-novative way to capture cross-language relations inname transliteration.
The method is independent ofthe bilingual lexicon content making it easy toadopt to other proper names such person, product,or organization names.
This approach is useful in anumber of machine translation subtasks, includingname transliteration, back transliteration, namedentity translation, and terminology translation.Many opportunities exist for future research andimprovement of the proposed approach.
First, themethod explored here can be extended as an alter-ative way to support such MT subtasks as backtransliteration (Knight and Graehl 1998) and nounphrase translation (Koehn and Knight 2003).
Fi-nally, for more challenging MT tasks, such as han-dling sentences, the improvement of translationquality probably will also be achieved by combin-ing this IR-based approach and statistical machinetranslation.
For example, a pre-processing unit mayreplace the proper names in a sentence with trans-literations (e.g., mixed code text ?The cities of ??????
prospered under ???
and ??rule.?
before sending it off to MT for final transla-tion.ReferencesGW Bian, HH Chen.
Cross-language information accessto multilingual collections on the internet.
2000.Journal of American Society for Information Science& Technology (JASIST), Special Issue on Digital Li-braries, 51(3), pp.281-296, 2000.Y.
Cao and H. Li.
Base Noun Phrase Translation UsingWeb Data and the EM Algorithm.
2002.
In Proceed-ings of the 19th International Conference on Compu-tational Linguistics (COLING?02), pp.127-133, 2002.PJ.
Cheng, JW.
Teng, RC.
Chen, JH.
Wang, WH.
Lu,and LF.
Chien.
Translating unknown queries withweb corpora for cross-language information retrieval.2004.
In Proceedings of the 27th ACM InternationalConference on Research and Development in Infor-mation Retrieval (SIGIR04), pp.
146-153, 2004.I.
Goto, N. Kato, N. Uratani, and T. Ehara.
Translitera-tion considering context information based on themaximum entropy method.
In Proceedings of NinthMachine Translation Summit, pp.125-132, 2003.F.
Huang, S. Vogel, and A. Waibel.
Automatic extrac-tion of named entity translingual equivalence basedon multi-feature cost minimization.
In Proceeding ofthe 41st ACL, Workshop on Multilingual and Mixed-Language Named Entity Recognition, Sapporo, 2003.A.
Kilgarriff and Grefenstette, G. 2003.
Introduction tothe Special Issue on the Web as Corpus.
Computa-tional Linguistics 29(3), pp.
333-348, 2003.K.
Knight, J. Graehl.
Machine Transliteration.
1998.Computational Linguistics 24(4), pp.599-612, 1998.P.
Koehn, K. Knight.
2003.
Feature-Rich StatisticalTranslation of Noun Phrases.
In Proceedings of the41st Annual Meeting on Association for Computa-tional Linguistics, pp.
311-318, 2003.J.
Kupiec.
1993.
An Algorithm for Finding Noun PhraseCorrespondences in Bilingual Corpora.
In Proceed-ings of the 31st Annual Meeting of the Associationfor Computational Linguistics, pp.
17-22, 1993.KL Kwok.
2001.
NTCIR-2 Chinese, Cross LanguageRetrieval Experiments Using PIRCS.
In Proceedingsof NTCIR Workshop Meeting, pp.111-118, 2001.KL Kwok, P Deng, N Dinstl, HL Sun, W Xu, P Peng,and Doyon, J.
2005.
CHINET: a Chinese name findersystem for document triage.
In Proceedings of 20051003International Conference on Intelligence Analysis,2005.C.J.
Lee, and Jason S. Chang.
2003.
Acquisition of Eng-lish-Chinese Transliterated Word Pairs from Parallel-Aligned Texts using a Statistical Machine Translit-eration Model, In Proceedings of HLT-NAACL 2003Workshop, pp.
96-103, 2003.H.
Li, M. Zhang, and J. Su.
2004.
A joint source-channel model for machine transliteration.
In Pro-ceedings of the 42nd Annual Meeting on Associationfor Computational Linguistics, pp.159-166, 2004.Y.
Li, G. Grefenstette.
2005.
Translating Chinese Ro-manized name into Chinese idiographic charactersvia corpus and web validation.
In Proceedings ofCORIA 2005, pp.
323-338, 2005.T.
Lin, J.C. Wu, and J. S. Chang.
2004.
Extraction ofName and Transliteration in Monolingual and Paral-lel Corpora.
In Proceedings of AMTA 2004, pp.177-186, 2004.WH.
Lu, LF.
Chien, and HJ.
Lee.
2002.
Translation ofweb queries using anchor text mining.
ACM Transac-tions on Asian Language Information Processing,1(2):159?172, 2002.WH Lu, LF Chien, HJ Lee.
Anchor text mining fortranslation of Web queries: A transitive translationapproach.
ACM Transactions on Information Systems22(2), pp.
242-269, 2004.M.
Nagata, T. Saito, and K. Suzuki.
Using the Web as abilingual dictionary.
2001.
In Proceedings of 39th.ACL Workshop on Data-Driven Methods in MachineTranslation, pp.
95-102, 2001.J.-H Oh, and H. Isahara.
2006.
Mining the Web forTransliteration Lexicons: Joint-Validation Approach,In IEEE/WIC/ACM International Conference on WebIntelligence, pp.
254-261, 2006.J.-H. Oh and K.-S. Choi.
2005.
An ensemble of graph-eme and phoneme for machine transliteration.
In Pro-ceedings of IJCNLP05, pp.450?461, 2005.Y.
Qu, and G. Grefenstette.
2004.
Finding IdeographicRepresentations of Japanese Names Written in LatinScript via Language Identification and Corpus Vali-dation.
In Proceedings of the 42nd Annual Meeting ofthe Association for Computational Linguistics,pp.183-190, 2004.CK Quah.
2006.
Translation and Technology, PalgraveTextbooks in Translation and Interpretation, Pal-grave MacMillan.Y Zhang, F Huang, S Vogel.
2005.
Mining translationsof OOV terms from the web through cross-lingualquery expansion.
In Proceedings of the 28th AnnualInternational ACM SIGIR, pp.669-670, 2005.Y.
Zhang and P. Vines.
2004.
Detection and translationof oov terms prior to query time.
In Proceedings ofthe 27th annual international ACM SIGIR conferenceon Research and development in information re-trieval, pp.524-525, 2004.1004
