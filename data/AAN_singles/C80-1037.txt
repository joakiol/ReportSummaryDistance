AN ASSIGNMENT OF KEY-CODES FOR A JAPANESE CHARACTER KEYBOARDYuzuru Hiraga, Yoshihiko Ono, Yamada-HisaoDept, of Information ScienceFaculty of Science, University of Tokyo7-3-1 Hongo, Bunkyo-kuTokyo 113, JapanSummar zAn input method for ordinary Japanese text is proposed.
Aregular keyboard has been selected as the input device, as ameans to effect touch typing.
The primary objective of thedesign of the code system is to make the keying fast, leastfatiguing and error-free.
Modeling for performance simulationwas carried out, which showed the system to be better in itsefficiency in comparison with the Standard English keyboard.1.
IntroductionSince its first appearance some I00 years ago, the Englishkeyboard typewriter has come to be one of the mostindispensible tools of the Western society today.
This is notonly for the great role it plays in business offices, but also for itswidespread acceptance for everyday use by the majority of thepeople.
Indeed the typewriter caused a social revolution.
Themost remarkable of its influence is that it opened up an entirelynew career (especially for females), -- the typist.
And now, theinvention and rapid development of the computer has opened ayet new important role for the typewriter keyboard as aremarkably simple, though effective interface between machinesand human beings.While all this was going on in the Western hemisphere, nodevice in Japan (and China, and other non-alphabeticalcountries) had attained the high potential of the typewriterkeyboard throughout this period.
The introduction ofcomputers has not altered this situation, since the alphabeticalkeyboard was directly imported as the computer-input device.Why so?
The answer is quite simple - it is because of thehuge character set used for the Japanese writing system.
Thisaffects all aspects of Japanese text processing, such as how tocreate and store character fonts, how to output them to the enddevices, and most serious of them all, how to input the text.But eventually the rapid development of computers andperipheral devices is becoming to enable us to do what wasimpossible.
Complicated characters may be printed by means ofa fine dot matrix printer.
Memory units to store these characterfonts and processors to handle them are becoming reasonable insize and economy.
Still, the problem at the inputting endremains.Our intention in ibis note is to suggest an input methodthat would assume the position in Japanese text processing whatthe keyboard does in Western societies.
That is, we are layingemphasis on the efficiency of input, presupposing professionaluses.
We do not assume the use by untrained users.
Wefurther note that the current "QWERTY" English keyboard is byno means optimally designed, and we must not follow the paththat the Western society has followed and, as a consequence,suft~rs today from being stuck with the poorly constituteddevice.2.
A Brief SurveyThe Japanese language uses an extensive and complicatedcharacter system.
There are two types of phonetic symbols(kana's), hiragana and katakana.
They are in one to onerel0tion with each other, and about 150 in all.
Arabic numeralsand alphabets are also commonly used.
An indefinite set ofpunctuation marks is quite similar to that of English.
Finally,there is a huge set of ideograms called kanji.
There are about50,000 of them in all, though an average person would usesome 800 in daily life.
About 2000 are taught in the elementaryeducation to the ninth grade.With this complicated system, the usage is quite flexible,that is, it is legal to write texts in quite an arbitrary mixture ofthese character types.
So, it is possible to write down a Japanesesentence with onty the phonetic symbols, kana, but that woulddeter the readability of the present day text.
One reason thatkana-written texts are hard to read is because the Japaneselanguage contains numerous ets of homonyms, each of which iswritten the same in kana form.
So for ordinary text handling,we must take into account the kanji characters.
Thatimmediately means that we must deal with a character set of afew thousand.Several types of input devices have been proposed andrealized in the past.
They may be roughly categorized as infigure (2-1).
{,1) Direct Methods"Direct" means that all information necessary to select acorrect input character is provided by the typist.
(The term"typist" is used in a general sense as the person who handles theinput process.)
This type includes:1) One-to-one keying that uses one separate physical key foreach character.
Devices for this may be made without thehelp of electronics, and are relatively easy and inexpensiveto build.
Several types of these are already on thecommercial line.2) Multi-shift keying which uses 100 to 300 main keys, eachkey standing for some number of characters from which aselection is made by means of shift keys.
Thus, a characteris printed by pressing two keys at a time.This principle may be extended to:3) Chord keying, which uses a combination of keys hitsimultaneously to represent a character, or even a word ora phrase.
This type of keying is used mainly instenographs, and requires a high level of trained skill.4) Multi-stroke keying, on the other hand, is operated byhitting only one key at a time.
A character is expressed asa sequence of key strokes.
This may be implemented on akeyboard of a small size of 30 to 40 keys, and is amenableto touch-typing.
This type would require electronic devicesfor implementation.
(2) Interactive MethodsThese are methods to support multi-stroke methods.
Sincethe character codes for multi-stroke methods are (or seem tobe) hard on memory, the operator first types simple- -249--Table (2-i): Input Methodsqfor JapaneseText.'
(Adapted from Yamada ~)Direct MethodsOne-to-oneI Wabun typewr i te r  (p lanar ,d rum)TabletMulti-shiftI One-pageI Multiple-page (Hitachi)Chord (Stenotype style)Multi-strokeI Uniiorm length codeWith shift (Kantec, Taikei)Without shift (Rainputto,Yamura,Superwriter)Variable length codeKanji, coded -Kanji,synthesis from parts.Interactive Methods(Multi-stroke)By soundBy shap..eHybrid (Hitachi)Kana-kanji conversion (Toshiba)OthersHandwriting RecognitionVoice RecognitionTable (2-2): Two Types ~f Operations.
(Adapted from Yamada ~)methods Sight method Touch methodfeatures (Hunt & Peck) (Blind)EyesightDecisionsRhythm~peed Low3kill ac--2-ProductluisitionFatigueMental High, t,stressStrained by movingfrom manuscript tokeyboard to platen.Definitely cons-=ious, especiallyat character selec-tion at the keyboardLacking4ostly stationary at:he manuscript.Subconscious reflexof hands and fingers~uehOperator'morale &prideduct~6nw~ cancommence withoutmuch training.Highend to causerestlessness.LOwgeeds systematictraining; heavilydepends on trainingnethod.- -  LowI iLowHighassociatively recallable codes, and the machine answers backwith possible selections from which the operator picks theproper choice.
Among this type is the kana-kanji conversionmethod, in which the text is first input by its phoneticrepresentation, and the machine converts it into properideograms.Comparing these methods from the viewpoint of humanfactors, we see two extremes on the line.
One is the Sight (orHunt & Peck) method, which requires constant watching of theinput device, either because there are too many keys, or thekeys are not position oriented, like a dial lock.
The other is theTouch (or Blind) method, where the operator requirespractically no viewing of the input device.
This is the way ofprofessional (English) typists.
For touch typing, it is importantto keep the keyboard small enough so that all keys are withinthe reach of fingers.
We note that touch typing is done in thesubconscious level of mind, that is, the motion of the hands is aconditioned reflex, and not a result of some consciously madedecision.
The operation in interactive methods lies somewherebetween the two extremes.
They require constant interventionby the machine, and the subconscious flow of mind is keptinterrupted.
The merits and demerits of the two extremes arelisted in table (2-2).It is natural to conclude that when both methods areavailable, touch methods are far more effective than sightmethods for a trained typist.
One question is whether anenormous character set would ever be made touch-typable in thefirst place.
We will discuss this problem later in section 8.3.
Designing PrinciplesThe crucial point in the design of our code system is its"efficiency."
By this we mean a code system that embodies thefollowing features:(1) A high level of input speed is attainable.
A good Englishtypist easily types 80 to 100 words per minute.
A methodthat cannot outpace handwriting is not acceptable.
Hunt& peck devices \['or Japanese tend to be even slower thanhandwriting, so they would serve as a device of necessaryevil only for final printing.
(2) The typist suffers from less t~tigue.
Employing a trainedoperator as a user means that long hours of continuouswork are expected from her.
Thus attention must begiven to the work load on the typist, not to impair thehealth of the typist while maintaining the high rate ofinput.
(3) A high rate of accuracy may be maintained.
That is, thecodes should not be susceptible to errorneous fingermotions.These are of course not independent factors, but are ratherclosely correlated to each other.
Of them, speed is in a way themost decisive, and also the most appealing, factor.
It is also theeasiest to examine experimentally.
The other two involvecomplex human factors study, to measure and to analyze.From the discussions in the preceding section, we see thatthe best method to accomplish the above objectives is one thatallows touch typing.
Our objective would be met by amulti-stroke code system on a small keyboard.
Thisimmediately implies that the system is not usable by anuntrained user, for she must look up the code of each characterto input.- -250-There are several multi-stroke systems currentlyimplemented and put to use, most of which are provided withsome kind of mnemonic features for character codes.
They maybe in terms of the pronunciation of kanji in kana or alphabet, orbuilt around the constructs, or visual forms, of kanji.
Assume asituation that a practical number of codes are learned by heart,that is, they are not memorized by way of the conscious mind,but are attained as subconscious reflexive motions.
What countsthen is that the input operation is highly efficient.
Themnemonic odes are not likely to work in favor of efficiency, infact, often against it.
So, we basically dispense with allintentions for mnemonic assoeiativity, and pursue efficiency inthe main.
We will even make no distinctions among differentcharacter types, namely kanji, hiragana, katakana symbols, andthe punctuation marks.
This will make it still harder for theuntrained user.
Consequently, our code system is primarily forthe use of trained personnel, who are likely to be professionaltypists.Our measures for the efficiency of keyboards has lbeenobtained from the analysis of the current English keyboard.
Wefind from them that keeping a steady rhythm is the best strategyfor speed.
Alternate hand stroking is the best for this purpose.This suggests that a code should consist of an even number ofstrokes -- where a text character is entered by an alternate handsequence such as R(right), L(left), R, L .... then the next againby R, L, R, L..., and so on.
Of course, the total number ofstrokes per code must be held as small as possible.To meet these requirements, the code system for the entirecharacter set can not be of uniform length, but be a 2-levelledone.
We assign 2-stroke codes to the set of basic characters, andlonger codes (presumably 4 or 6 strokes) to the rest, calledoutside characters.
This partitioning has certain other merits.We may require only the codes for the basic characters to belearned completely (by hands).
The longer codes for outsidecharacters may have mnemonic features.
(This would not harmthe whole typing process if codes are constructed with care.Outside characters cover only a small fraction of the total text.
)The size of the basic character set will be about 900 on a 30-keykeyboard, and 1200 on a 40-key keyboard.
The latter does notuse all the possible 2-stroke combinations because there are keypairs which are not suitable for good touch typing.4.
The Determination of the Character SetThe selection of the basic character set is based upon thefrequencies of thud usage of characters in a sample text, takenfrom newspapers.
However, alphabets are excluded from thefist since it would be better to treat them in a different keyboardmode.
All Arabic numbers are among the 50 most frequentlyused characters, and they are included in the basic character set.As for punctuation marks, only the standard ones are included.Most of the kana characters are among the top 900, and it is ofno problem to include them in the set.
The rest of thecharacters are kanji.
Considering a statistical fact that about 500kanji and 150 kana characters are used by an average person forhis daily use, although the set may change gradually, ourselection of the basic character set seems reasonable.By exam!ning the cumulative frequency graph of Japanesecharacters given in figure (4-I), we see that 95% of all the usageis covered by the top 900 characters.
However, if thedistribution is looked at in jukugo units, that is, a charactercombination that lbrms a concept in.Japanese (as a "word" doesin English), then 87% of the whole text is covered by the topi00%\ \  9,.s  !
00 1 00.6.0\[ ' I , eharalcter s500 i000 1500Figure 4-iRelative Cumulative Frequencyof Japanese Characters900, so we might extend the size of the set to perhaps 1200 ormore, by using not 30 keys but 40 on the keyboard.
Even inthis case, it is not necessary to use all the available key pairs forthe reason of maintaining the quality for good touch typingperformance, and the top row will be used only in alternatehand stroking.
This extension is planned as a future work..5.
Coding of the Basic Character SetThe coding of the basic characters is based strictly on theefficiency of finger movements.
Our method maps characters,arranged in the order of the frequency of usage, to the key pairsarranged in a suitable ordering as defined below.
Second orderadjustments will be made afterwards.The ordering of key pairs is obtained by assigning certainweights to certain characteristics of hand motions and usingtheir linear sum for each key pair.
The characteristics that arethought to have a greater importance will be given a largerweight.
In this way, the ordering of 900 key pairs on a 30-keykeyboard was made.Though the key pairs have an ordering based on theirinherent features, this ordering is not immediately usable to fixthe assignment of characters directly.
This is because that thetyping process is not a collection of isolated key pairs, but theircontinuous equence.
For example, if key pair "d-k" is with ahigh score, then its reverse, "k-d" would also be with a highscore, but frequent appearances of these two key pairs wouldresult in the frequent tapping motion of key pairs "k-k" and"d-d" in the interval of consecutive "k-d"'s and "d-k"'s, or viceversa, which are known to be less preferred.
This would also beadverse to alternate hand stroking as well.Through such considerations, the desirable keyboardcharacteristics may be itemized as follows:(I) The whole typing procedure is to keep as much keyingrhythm as possible.
Fluent rhythm, as well as high averageof typing speed, is best realized by alternate stroking byboth hands.
Thus, it would be our principal objective to letthe code system be such that it would allow alternate handstroking as much as possible.
(2) Hands should not be moving up and down incessantly onkey rows, but stay in the same row as much.
Thus, strokeson the home row should be used as much as possible andexcursions to other rows should be held minimum.--251--Comp~tring between the upper and the bottom row, allevidences point out that bands are more fluent on theupper row, so the ranking of rows should be in thepreference order of the home, the upper, and the bottom.
(3) Fingers should be loaded in proportion to their dexterity.In typing motions, fingers are divided into the strongerones (index and middle fingers) and the weaker ones (ringand little fingers).
Index and middle fingers are not somuch different in their capacity and functions, However,we must keep in mind that each index finger must covertwo inner dolumns.
The difference between ring and littlefingers is also not so obvious.
Although a ring finger issuperior in its stroking force In typing motions, a littlefinger may have the advantage of the twisting motion ofthe wrist.
(Though in reality, this motion might lead tomore typing errors.)
In the present study, little fingers willbe given more emphasis than the ring.
Numbering the keycolumns 1 through 5 from the outer one inward, theirranking in the order of manipulative superiority will be 3,4, 1, 5, 2.
(4) The number of awkward keying sequences must bedecreased as much as possible.
Almost all awkward keypairs are of one-handed stroking, again attesting to theimportance of alternate hand stroking.
The major awkwardkey pair sequences, in the order of their disadvantages are:1) Hurdling: the stroking from the upper to the bottomrow or vice versa, jumping over the home row.2) Reaching: the stroking of different keys with the same.finger.3) Tapping: the stroking of the same key.4) Rocking: stroking with adjacent fingers, especially froman inner to an outer one.There are other minor considerations that should be made, oneof which is the load balancing between the two hands.
We haveloaded the right slightly heavier, but we do not consider thisfactor that important, and the roles of the right and the left handmay be reversed to obtain a code set 'with the mirror imageassignment to hands.The actual weighing process starts by accommodating forcondition (1) above.
The key pairs are divided into 4 blocks,namely RL, RR, LL, and LR blocks, where symbols L and Rstand for the hands that stroke the keys of the pair.
The blocksare given preference in the order given above, and key pairs ineach of the blocks are then ordered by taking further conditionsinto account.The above ordering of blocks comes from the distributionof the frequencies of the usage of Japanese characters.
Sincecharacter pairs have a frequency distribution proportional toeach of the individual character frequencies, charactersbelonging to blocks of lower rank would appear most of the timealone in a sequence of characters belonging to the top-rankedblock, forming a singular point.
If this character belongs toblock RR, then the sequence would look like:RLRLRRRL .....but if LR, then:RLRLLRRL  ....They would have the same effect on the average LR-sequencelength (described later), but the latter causes two singular pointsin the basic "R-L" sequence.
Alsoi in the R-L-R-Lenvironment, it is possible that they might be typed in thereverse order.
Thus, from the alternate stroking point of view,it is preferred to use block RR, not LR, next to RL.
(If acharacter pair is made of characters with nearly the samefrequencies, then the above statement is not true.
)Within individual blocks, conditions (2), (3) .
.
.
.
.
areevaluated and weighed accordingly, and the whole ordering isdecided.
Awkward sequences are deliberately given negativeweights in order to bring down their ranking, thus decreasingtheir occurrences when the codes are used.The above procedure takes into account only key pairs, or,from the viewpoint of the source text, the distribution ofindividual characters.
For the further improvement of keyingmotions, considerations on the distribution of charactersequences hould be made.
But tests on our code systemshowed that these secondary changes would not seriously affectthe overall rating of the system, so this line of modifications hasnot been fully carried out in the present status.
One exceptionis the introduction of entry codes into the outside character set.Codes "j-f" and "f-j" are used for this purpose.
The entire codetable for the basic characters is given in the appendix.
Thistable is yet subject o further changes.6.
Coding of the Outside CharactersAs tbr the outside characters, we do not insist on havingthe codes made free of mnemonics as for the basic characters.One reason for this is that the length of the codes are too longfor easy learning, and another is that there are too many ofthese characters.
But the main reason is that since they coveronly a small fraction (5% for a 30-key keyboard, 2% for a 40-keykeyboard) of an average text, those codes for seldom usedcharacters may be easily forgotten, therefore they should beconsciously constructible.
Since most of the outside charactersare kanji characters, (leaving out a few exceptions ofpunctuation marks,) we may code them mnemonically using thefeatures inherent in these characters, where the mnemoniccodes are the codes of the basic characters.
That is, the codesare constructed by a two-stroke ntry code that indicates that aninput sequence of an outside character has started, followed bythe codes of two basic characters that express some feature ofthe character in question, making the number of strokes 6 in all.
(By means of shift keys or t~fdware modifications, we might beable to omit the entry code, ) In this way, we have coded 2000of the outside characters as a start.The mnemonic i~atures of an outside character to representit must meet such requirements a :1) The mnemonics of the character can be easily recalled, oris recoverable from the character itself.2) The introduction of additional characters to the characterset will not require the modification of the whole codingsystem.There are various features of characters that we mightutilize for coding the outside kanji.
Various kanji dictionariesuse radicals (substructures of kanji), the number of strokes usedto draw the character, or the reading (in phonetics) to index acertain kanji.
Of them, the reading is not suitable, for acharacter may be read in several different ways, or severaldifferent characters may correspond to a reading.
In addition, asthe character to be typed becomes a less commonly used one, itwill be less probable that the typist would know how to read it.The number of strokes is not usable either as a means ofspecifying a character because its exact value is riot so readilyperceivable.
Most of the kanji characters are composed of twoor more radicals.
A radical may be a kanji itself, or be asubstructure of the whole and may appear in a good many otherkanji characters in common.
By inspecting a complex and lessused outside character, we can often agree upon a set of two- -252--radicals which embody the essential features of the character.This identification process is a subtle and very much a subjectivepsychological one, heavily dependent on the past experience ofindividuals.
Yet different individuals seem to have a nearlysame set of choices for each character.
We shall call thesechosen characters component characters.
When the choice isnot unique, we use a reasonable number of alternatives as well.All component characters we use for mnemonics are fromthe basic set.
The codes made of these pairs may be classifiedinto the four types given below, where W in (1) through (3)indicates that the whole of a component character isrepresenting a part of the outside character.
The P in (2)through (4) indicates that a part of a component character isrepresenting a part (the whole in (4) only) of the outsidecharacter.
"+" means a combination of components.
"P-W' in(4) means that a component character W is eliminated from theother component character P and the remaining is the outsidecharacter.
Alphabet letters below component characters are thecodes for the characters.Examples of codes for outside charactersOutside Components Other ComponentsChar.
and Codes and Codes(i) W+W NJ ~ iN" ~ iN (P+W)IT ;X JJ ;X(2) P+W ~ ~ ~ ~ ~ (p+W)MZ ,; ,; HX(3) P+P ~ ~6 '~  ~'~ ~ (P+P)DC /W VT ZN(4) p-w N ~ J~XP MNThis way of coding may cause some conflicts in rare caseswhere the code typed in is not for the character intended, butfor some other one.
For these cases, we are leaving it at presentto the typist to verify the character on a display, and correct it ifnecessary by trying another code.
There are still a lot ofpossible codes unused, and other outside characters beyond the2000th may be coded similarly.
The 6 strokes necessary to typein a character might seem too many, but as we have seen, theirappearance in text is not so often that the effect of the codelength is not that critical to the overall speed.
We place moreimportance on the good typing rhythm in 6-character codes, andthe ease of the recall or reconstruction of codes.7.
Evaluation of the Code System..The ultimate test of a code system would be to actuallymeasure its productivity on a real system, but we have not beenable to go that far yet.
In addition, those experiments wouldinvolve human factors problems not well understood even atpresent.
One example is the problem of an objectivemeasurement of mental fatigue.Hence, we chose to_show some statistical figures derivedfrom some sample text.
8 In the test, we considered the basic.character set only, and treated the outside characters as if eachconsists of 2 invalid strokes.
The QWERTY keyboard run on anEnglish text is also made for comparison.
Results are shown intable (7-l) and figure (7-2).
Our code is referred to as "T-code"in the table.
LR-sequence l ngth in table (7-1) means theexpected length of the alternate hand stroking starting from anarbitrarily chosen character of the text, counted by strokeintervals.
Such expected value for a random sequence is 1.00,sinceE\[length\] =(1 /2 ) '0+ (1/2)2'1 +... + (l/2) n* (n-l) +...= 1 .00From the table, we see for our code that:I) Hands are evenly loaded, slightly lighter for the weaker lefthand,2) Strokes are concentrated on the home row, so that themoving of hands from row to row is held minimum.
Notethat quite a different situation holds with the QWERTYkeyboard, where more than half of the strokes fall on theupper row.3) The loading of fingers is in a qualitative agreement with theconjectured strengths of the fingers.
We feel, however,that index fingers (covering two columns each) may beloaded a little too heavily.
It is possible to lighten theirburden by weighing the ring and the little fingers more, butthis is a trade-off problem, and we are unable to tell whichis better at this moment.
In any case, our code forJapanese gives much cleaner distributions than those ofQWERTY.
For example, the right ring finger on the latteris readily seen to be overloaded.
(This finger covers keys"o", 'T', and ".
")4) Our keyboard has attained a good low level of awkwardsequence rate, which is about the same as for the improved .English keyboard of Dvorak.5) A high rate of alternate hand stroking has been obtained,but the reason for this is obvious, since it was our primarydesign objective.
This may be further improved withkeyboards having more keys, but that would also raise therate of awkward sequences, as well as the use of the lesspreferred top row.The efficiency of our code system is qmte clear, incomparison with the QWERTY keyboard data.
The figuresattained even the level of the Dvorak Simpl~lied Keyboard (DSK),which is thought o be near optimal for English.
The results areespecially favorable in awkward sequence rate and LR-sequencelength.
The LR-sequence has far outlengthed even that ofDvorak.
We believe that a further significant reduction of theawkward sequence rate (through the secondary modifications ofthe codes) is hard, if at all possible.
Still, it may be beneficial totry to accommodate for the character pair distribution ofJapanese texts, because in fast typing, the transition of everysecond stroke between characters might have a nonneglibleeffect on speed.As an attempt o see the effect of such factors, a computersimulation of typing motion was made.
The aim of thesimulation was to find the coordination between handmovements and finger stretches for key stroking, in order tomodel the most adequate overall typing motion.
The designedmodel was intended to capture the significant features of realtyping procedures where the typist would look ahead a numberof characters (maybe taking words as units), and unconsciouslyhold the hands over a position that would require least finger--253--Table (7-I): Stroke Distributions.
(Space bar and top row excluded fromQWERTY data.
)Hand DistributionLeft:RightT-code QWERTY47.5% 57.2%52.5% 42.8%Row DistributionUpperHomeBottomT-code QWERTY21.9% 51.5%58.5% 31.8%19.6% 17,7%Finger DistributionT-code QWERTYLeft Right Left RightIndex 18,8% 20.8% 21.3% 19.4%Middle 13.4% 14.2% 19.9% 9.2%Ring 7.2% 8.1% 8.0% 11.8%Little 8.2% 9.4% 8.1% 2.4%Rate of Awkward Sequences (Total,(Left:right))T-code QWERTYHurdle 2.1% "(2.0%:2.2%) 9.6% (5.4%:15.3%)Reach 5.2% (4.1%:6.2%) 8.2% (7.5%:8.7%)LR-sequence Length (Expectation 1.00 for random.T-code QWERTY7.69 I .0921.9~ \[ \] top \[ --~\] 51.5%58.5Z \] \] bore \] \[ 3Z.8~19,6% L \] b .
.
.
.
.
\] \] i7.7%T-Code QWERTYF igure  (7-2)Finger and Row Distributionsmotions for the stroking sequence.
The outline of the model isas follows:A certain key is hit by the finger assigned to it, holding thehand over a certain position.
The hand positions werequantized into 4 locations, each of them being the mostconvenient position to hit keys in a certain row, namely, thetop, the upper, the home, or the bottom row.
A finger mayhit a key with no stretching effort by moving the hand overthe row the key is in, or, it may stretch over to bit a key inthe row right above, or right below, the row the hand positionstands fbr, without moving the hands.
The load of the wholeprocess is the sum of (1)the load on the finger to stretch over,(2)the force to hit the key, and (3)the load on bandmovement.
The load parameters were adjusted so as torealize (1)a case where no finger stretching would occur, or(2)a case where no hand movements would occur (using thelower three rows), or (3)other cases in between.
The handsmay either (4)return to the home position (that is, theposition over the home row) after a given blank period, or(2)stay in the position where the last key was hit.
Also amechanism to look ahead 1 to 6 characters was used, in orderto plan for an optimal movement.
Strokes continued on thesame hand, and also those continued on the same finger aregiven extra load factors.The results of simulations showed the effi~ctiveness of DSKagainst QWERTY for English.
QWERTY requires ome 20 to100% larger amount of hand motion when compared with DSK,depending on various parameter settings.
The worst caseoccurred when the parameters were such that no finger stretcheswere allowed, no load was assigned to the hitting of the keyitself, and the hand always returned to the home position aftereach stroke.
The difference between these two became smalleras finger stretches were brought into the picture, and the forceto hit a key was taken into account.
The difference was about20% at the least.
This fact indicates that with QWERTY, a goodtypist would mostly hold hands over the upper row, rather thanthe home, since more than 50% of the strokes are on the upperrow.
Our code for Japanese texts gave about the same figures asthose of DSK.The effect of lookahead did not show a significantdifference.
We also tried a modified model that has a built-inlookahead ability, by assuming additional hand positionsbetween adjacent rows, which serve as a transient position whenmoving from a row to another row, but this also gave resultssimilar to the original version.From these results, we may conclude that our code syslem,though it is still of an experimental status, would be able to leadto a good performance l vel in touch typing of Japanese texts..8..
Remarks on Implementation a d TrainingSo far, we have been deliberately ignoring the problem ofthe attainability of touch typing.
It may seem counter-intuitivethat codes for so many characters will ever be learned for typingwithin a reasonable period of training.
You might think this tobe analogous to the training for playing the piano.
So small anumber of people will ever obtain the level of skill necessary tobecome a professional pianist.
But this analogy is notappropriate, since there are millions of professional typists in theWestern societies.
This fact shows that the skill to touch typehas not so much in common with piano playing.But is this because the Western typewriter has a one-to-onemapping between l~he characters and codes -- namely, the keys?- -254  ---Again, the answer seems negative, as we see that the typisttreats characters not individually, but as key stroke sequences byunits of words.
We may find a better analogy in Morse codes.Morse codes are not too complicated for an average person tolearn.
The transmitting and the receiving skill of the code canbe learned by anyone in a reasonable amount of' time.
The trickfor the best learning procedure there is in that the codes belearned as a conditioned reflex.
It is an established fact that ifone first learns the Morse codes mnemonically, he has to giveup those mnemonics eventually in order to attain a good level ofcommunication skill.
The same holds for the touch typing ofJapanese in multi-stroke codes.One might be still bothered by the size of the code set.
Wehave set an upper limit of about 1000 for this.
Whether this is areasonable choice is not so obvious, and the best and only wayto see this is to actually test it.
We are yet to carry out thistraining experiment.There already exist some practical experiences by otherswith Japanese touch typing in almost mnemonic-freemulti-stroke codes.
Example learning curves are given in figure(8-1).
We see that the speed of stroking progressesapproximately at the same rate as that of English typewriting forthe same amount of training.Note that in Japanese, the unit of a concept that matchesthe English word consists of about two characters on theaverage, while the average length of an English word is about 5strokes.
Then with a 2-stroke code, about the same amount ofinformation may be represented by the same number of strokes.Thus we conclude that Japanese touch typing will be as powerfulas English typewriting in the handling of Japanese documents.One important ask is to develop an appropriate method oftraining.
The period necessary for training will be greatlyaffected by the quality of the teaching method.
We see that thisis still a problem for Western typewriters after }00 years ofhistory, This is not a trivial task, and if we are to organize ahorde of typists as a professional institution, a careful andextensive ffort must be addressed to this task.9.
Concluding RemarksWe have proposed an input method and an associatedcoding system for the input of Japanese texts.
The principalgoal has been to realize an input system that wouid allow a highdegree of touch typing.
Our code system may not be optimal asyet.
Nevertheless, we are convinced that it can attain a higherperformance level than any other method proposed up to thepresent.What we wish to emphasize is that if one wants to obtaingood productivity (in any field), one has to pay for it, and whenprovided with well designed mediums, one will certainly get hisinvestment for training amply paid back.
The majority of theinput methods for  Japanese that are now receiving attentionemphasize their easier accessability by beginners.
If only therealization of good sales is what matters, then that might be abetter marketing strategy.
But if the device is to take hold of afirm position in the society as a truly efficient tool ofproduction, then it should not stay as a beginner's toy.
Itshould be well worth several month's training to be able toprepare documents everal times faster than handwriting.With the advancement of technology, machines may go onevoluting without bound.
Then an efficient communication withmachines would become a critical problem.
It is high time werealize that one of the most difficult problems in technology isthe design of interface between human beings and machines,and that should aim at well trained operators.Acknowledgement:s: We would like to thank Dr. S. Kawai forhelpful suggestions and discussions on our work.
We aregrateful to Mr. M. Mogaki for the preparation of the conversiontable for Japanese character codes, which was of great help toour work.
We also thank Mr. J. Jan for helpful comments.150!i0050~eh/min,)DSK (US H gh school k~ i -  ~ I amur~QWERTY (US HiI I I J J i \[ I I .
50 ~ !CI(s tr./min~) ~30O~ i 0 0' ' ' flSb ' ' ' 'fOO(hours)Figure (8-1): Learning Curve.3 Japanese multi-stroke keyboards andUS high school students.--255--References\[1\] Hiraga, Yuzuru; Ono, Yoshihiko & Yamada, Hisao; "AnAnalysis of the Standard English Keyboard" (October 1980)Elsewhere in these Proceedings.\[2\] Yamada, Hisao & Tanaka, Jiro; "A Human Factors Studyof Input Keyboard for Japanese Text" (December 1977)Proceedings of International Computer Symposium 1977,National Taiwan University, Taipei, Republic of China\[3\] Yamada, Hisao; "An Ergonomic Comparison of KanziInput Methods" (in Japanese, March 1980) PrintingInformation, Japan Association of Graphic ArtsTechnology, 17 (March 1980), pp.4-12\[4\] Yamada, Hisao; "A Historical Study of Typewriters andTyping Methods: from the Position of Planning JapaneseParallels" (Feburary 1980) Journal of InformationProcessing, Vol.
2, No.
4, pp.175-202.\[5\] Dvorak, August; Merrick, Nellie L.; Dealy, William L. &Ford, Gertrude C.; "Typing Behavior, Psychology Appliedto Teaching and Learning Typewriting" (1936) AmericanBook Co., New York 521pp.\[6\] Dvorak, August & Dealy, William L.; "TypewriterKeyboard" (May 1936) U.S. Patent 2,040,248, 8pp.\[7\] Yamada, Hisao; "A Letter Selection Method by TypewriterKeyboard" (July 1979) Patent Application, No.
54-096033,19pp.
and 4 figs.\[8\] "Text Data from Three major Japanese Newspapers" (1966)The National Language Research Institute (1,500,000Characters)APPENDIXCODE TABLEEach of the 4 overall 3x5, and their component 3x5,blocks of characters represent key positions on onehalf of the keyboard.
The 4 large blocks stand forthe first stroke, and the small ones for the second.The headings of the large blocks indicate the handsequence of the key pair.
~ is the entry code forthe outside characters.R--LL -LL -R--256--
