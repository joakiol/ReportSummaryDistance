CHART PARSING ACCORDING TO THE SLOT AND FILLER PRINCIPLEPeter  HELLWIGUnivers i ty of HeidelbergP.O.
Box 105 760D-6900 Heidelberg, FRGAbst rac tA parser is an algorithm that assigns astructural descr ipt ion to a string accordingto a grammar.
It follows from this defini-t ion that there are three general issues inparser design: the structure to be assigned,the type of grammar, the recognit ion algo~rithm.
Common parsers employ phrase struc-ture descriptions, rule-based grammars, andder ivat ion or transit ion oriented recogni-tion.
The fol lowing choices result in a newparser: The structure to be assigned to theinput is a dependency tree with lexical,morpho-syntact ic  and funct ional-syntact icinformation associated with each node andcoded by complex categories which are sub-ject to unif icat ion.
The grammar is lexica-lized, i.e.
the syntactical relat ionshipsare stated as part of the lexical descrip-tions of the elements of the language.
Thealgorithm relies on the slot and fil lerprinciple in order to draw up complex struc-tures.
It ut i l izes a wel l - formed substringtable (chart) which allows for discont inuoussegments.1.
Dependency  S t ruc tureThe structuring principle of const i tuencytrees is concatenation and the part-whole-relationship.
The structuring principle ofdependency trees is the relat ionship betweenlexemes and their complements.
Note: It isnot correct (or at least misleading) to de-fine dependency as a relat ionship betweenwords, as it is often done.
The possibi l i tyand necessity of complements depend on thelexical meaning of words, i.e.
a word whichdenotes a relat ionship asks for entit ieswhich it relates, a word which denotes a mo-di f icat ion asks for an entity which it modi-fies etc.
While it is awkward to associatefunctions (deep cases, roles, grammaticalrelationships) with phrase structures, it isnot dif f icult  to paraphrase the functions ofcomplements on a lexical basis.
For example,the argument of the predicate "sleep" deno-tes the sleeper; the meaning of "persuade"includes the persuader, the persuaded personand the contents of the persuasion.
In anext step, one can abstract from the con-crete function of dependents and arrive atabstract functions like subject, object, ad-junct etc.Of course, the complements covering theseroles can be single words as well as largephrases; for example "John", "my father","the president of the United States" can allfill the role of the sleeper with respect tothe predicate "sleep".
However, phrases neednot be represented by separate nodes in de-pendency trees (as they do in phrase mar-kers) because their internal structure isagain a quest ion of dependency between lexe-mes and their complements.
In a dependencytree, phrases are represented direct ly bytheir internal structure, which results inan arc between the superodinated head andthe head within the complementary phrase.Nevertheless, the real pr inciple of depen-242dency is a relationship between words andstructures, or, formally, between singlenodes and trees.
Taking this into account,dependency trees are much more appeal ingthan has been recognized so far.In order to restrict l inguistic structuresaccording to syntactic and semantic require-ments, the use of complex categories isstate of the art.
Complex categories aresets of parameters (attributes) and values(features).
Agreement between entit ies canbe formulated in a general way in terms ofparameters; the assignment of actual featurevalues is achieved by the mechanism of uni-fication.
If dependency J.s the relat ionshipalong which the catagories are unified,functional=syntactic and mo~ho-syntact i cfeatures can be handeled completely in par-allel, as opposed to the two-phase mechanismwhich, for example, character izes LexicalFunctional Grammar.
Each element in the de-pendency tree carries three labels: a role(which applies to the (sub)tree of which theelement is the head), a lexeme, and a set ofgrammatical features.Const i tuency and dependency both have to berepresented somehow or other in the syntac-tic description.
As a consequence, recentdevelopments have led to a convergence offormalisms of both origins with respect totheir contents.
(A good example is the simi-larity between Head-Driven Phrase StructureGrammar /Pollard, Sag 1987/ and DependencyUni f icat ion Grammar /Hel lwig 1986/.)
Ifphrase structure trees are used, the differ-ence between governor and dependent must bedenoted by the categories that label thenodes, e.g.
by a x-bar notation.
If depen-dency trees are used, the concatenationrelat ionship must be denoted by posit ionalfeatures which are part of the complexmorpho-svntact ic  category.2.
Char t  pars ing  based  on a lexical izedgrammarThe structure to be associated with a well-formed string can be defined in two ways:either by a set of abstract rules whichdescribe the possible construct ions of the~language or by a descr ipt ion of the combi-.nation capabi l i t ies of the basic elements.The latter fits with the dependency ap-proach.
Given a lexical item and its morpho-syntactic properties, it is relat ively easyto give a precise descript ion of its possi-ble complements.
The main advantage of thislexical ist ic approach is the fact that aug-menting or changing the descript ion of anitem normal ly does not interfere with therest while any change in a rule-based gram-mar might produce unforeseen side effectswith regard to the whole.The prerequis i te for a lexical ized dependen-cy grammar are trees that comprise slots.
Aslot is a descr ipt ion of the head of a treethat fits into another tree.
Formally, aslot is a direct dependent of a head with arole associated to it, with a variable inthe lexeme posit ion,  and with a categor iza-t ion that covers  all of the morpho-syntact i cp roper t ies  of the apper ta in ing  complement.If cross categor i za t ion  does not a l low allof the p~ss ib le  proper t ies  of a complementw i th in  one category  to be stated, a d is junc-t ion of s lots is used to express the alter-nat ives.
The only mechan ism needed for draw--ing up complex s t ructures  is the un i f i ca t ionof s lots and potent ia l  f i l lers.The contro l  of the pars ing  process  isach ieved  by means of a we l l - fo rmed subst r ingtable ((\]hart).
It is w ide ly  accepted thatchart  pars ing  is super ior  to backt rack ing  orto para l le l  p rocess ing  of every path.
A com-mon vers ion  of a chart  can be v i zua l i zed  asa network  of ver t i ces  represent ing  po ints  inthe input, l inked by edges represent ing  seg-ments.
The edges are label led with the cate-gor ies that the parser  has ass igned to theconst i tuents  concerned.
A l ternat ive ly ,  eachedge is assoc ia ted  with a complete structur-al descrLpt ion,  inc lud ing  the in format ionwhich  is car r ied  by the covered edges.
Inthis case, a chart  is s imply a co l lec t \ ]on  oftrees ( implemented as lists) p ro jec ted  onthe var ious segments in the input.
The inno-vat ion  with regard to chart  pars ing  th~vt isp roposed  in this paper  is a label.ling ofedges by trees that compr ise slots.At the beginning,  an edge for each word isentered  into the chart.
Each edge is label\] o~ed wi th  a tree.
The head of this tree con-tains the lexeme that is assoc ia ted  with theword accord ing  to the \].exicon; it carr ies  amorpho-syntact i c  category  accord ing to themorpho log ica l  p roper t ies  of the word inquest ion:  it normal ly  conta ins  a variab\].e asa role l~arker, since the syntagmat ic  func-t ion of the cor respond ing  segment is sti l lunknown.
A slot is subord inated to the headfor each e lement  that is to be dependent  inthe resu l t ing  structure,  if any.
Slots areadded to a lexical  i tem accord ing to c~>mple-t ion  pat terns  refered to in the lexicon.
(Wecan not qo into deta i l s  here.
)Subsequent ly ,  each tree in the chart  looksfor a slot in a "tree that is assoc ia ted  withannother  edge.
If the head of the searchingtree fitn the descr ip t ion  in the slot then anew edge is drawn and label led wi th  the com-pound tree that resul ts  from inser t ing  thef i rst  tree into the second.
The categor iesof the ~ew tree are the result  of un i fy ingthe categor ies  of the slot tree and the fil-ler tree.
Specia l  features  state the posi-t ional re~/ i rements,  e.g.
whether  the seg-ment  cor respond ing  to the f i l ler  has to pre-ceed or to fo l low of the segment correspond-ing to the e lement dominat ing  the slot.
Thisp rocess  cont inues  unt i l  no new tree is pro-duced.
Pars ing  was successfu l  if at \].eastone edge covers  the whole  input.
The depen-dency  tr~e assoc ia ted  with this edge is thedes i red  st ructura l  descr ipt ion.The fo\].lowing example i l lust rates  the me-chan ism.
(I) Flyir,g p lanes  can be dangerous.The lex icon lookup leads to the in i t ia l i za-t ion of %he chart  in f igure i.I%?,-noun re)un---  I vu~b - f~n I veTb  in f  lad je )  lassert$on\[(ATr{._ I (~v_  I (eA_  I I - - ~ Iadje la)) I verb I ndje ra))l I verb Il~ f  ~~) I i I f in  ~a))\[Flying planes can be dangerousFig.
1 The chart at the end of the lexicon phase(The notat ion  is s impl i f ied  and we haveomit ted a deta i led  categor izat ion.
The de-pendency  structure is represented by thebracket ing.
Lexemes are under l ined;  rolesare in capita\]  letters; slots are marked bythe underscore  in the lexeme posit ion.
"re"means r ight adjacent, "la" means left adja-cent wi th respect  to the head.
)At the end of the slot fi\].\].ing process  thechart  looks like f igure 2.
(ILLOC assertion (ILLOC asser t ion(PRED c gl~verb fin (PRED .can verb fin(MV !
)f{ verb inf (MV be.
verb inf( \[~A (lal)gero~l_s adj e ) ) (PA daDqerous ad\] e ) )(SUBJ flying, noun (SUBJ planes noun(OBJ p\] anes noun) ) (ATR f~ffl~\[\[ adj e) ) ) ).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
mc~n verb fin (ca!
~ verb fin !
(MV be verb inf (MV be_verb inf I(PA dan~erotjs adje)) (PA _d.a!
)~erqu~ adje}) 1SUSJ flyilj~_ ~loUn ( SUBJ \]31anes noun \]OBJ \]/la~es \[loun)) (ATR f\]~in!\[ ddje)))) I(p_lanes noun ~(E~n verb -in(ATR fl~i\q ad je ) ) \ [  (MV \]pc verb ~l~f |(OBJ ~ lanes  noun re))  I If g~nq \[ | l(be verb inf Ino\]?n ~ ~(PA dan?ierous aci e ' '< .....
I .
.
.
.
.
.
.
I......... ,,\[ i t(fl~\[lq l(/~lanes \[(c n ~(be l(danqerous ILL C IaTi~e)-" \[,~-6un'- veTb f in  I,'Trrb lnf  la<\]}e\] ~asse~t~on II (A'r~ - (MY _ (PA.
I ~aEo- -~ i  I| ad\]e la) verb a.~ije re)) I verb I| inf re) I fin !a))i/ I (suBJ _.
/ I iFlying planes can be dangerousFig.
2 The ch~Lrt at the end of tbe pnrsl:~g process3.
A char t  for  d i scont inuous  segmentsIn f igure 2, the vert ices  represent  left andr ight marg ins  of segments.
Ad jacency  is theinherent  pos i t iona l  re la t ionsh ip  in this mo-del.
As a consequence,  this chart  does nota l low for d i scont inuous  const i tuents.
Thisis a ser ious de f i c iency  cons ider ing  the phe-nomena of unbound dependenc ies  which occurin many languages.
The representat ion  of po-s i t ion by categor ies j  however,  opens up theposs ib i l i ty  to state var ious  kinds of posi-t ional  re la t ionsh ips  between heads and de-pendents.
In order  to form d iscont inuoussegments, the contro l  of pos i t ions  in thechart  must  be altered.
The so lut ion which weadopt is to represent  the extens ions  of seg--ments  by bit  str ings cons is t ing  of one bit21,3for each  word that is part of the segmentand a zero bit for any word that is notwithin the segement (cf.
fig.
3, trai l ingzeros are omitted).
Discontinuous segementsare depicted by the alternation of ones and?
zeros in the bit string.
The intersect ion ofthe appertaining bit strings is formed be-fore a fi l ler is compared with a slot.
Thisintersect ion must be empty, because other-wise both segments contain overlapping por-tions and one can not be a dependent of theother.
After a f i l ler is inserted into aslot, the union of both bit strings is form-ed and associated with the new tree.
Thisamounts to island extension of the parsedsubstrings.
Other operations on the bitstrings allow for calculat ing the specificposit ional relat ionships stated within thecategories of slots.
The parser runs throughalternate cycles: It tries to bui ld continu-ous segments first.
Then it uses these seg-ments to form discont inuous segments.
Fromthe results it tries to bui ld continuoussegments again and so on.
The input is ac-cepted if a b i tstr ing can be obtained thatcontains as many bits as there are words inthe input.The example in figure 3 roughly i l lustratesthe device.
(Integers among the categoriesrepresent the sequence of dependents belong-ing to the same head.
Lines separate thecycles.
)(2) What does Gudrun feed to her cat ?The parser is ful ly implemented within thesystem PLAIN (Programs for Language Analysisand Inference), developed at the Univers i tyof Heidelberg.
So far, it is applied to Ger-man (Heidelberg, Kiel), French (Paris), andEngl ish (Surrey/UK, Pisa, Hawaii).ReferencesPeter Hellwig: "PLAIN - A Program System forDependency Analysis and for Simulating Na-tural Language Inference".
In: Leonard Bolc(ed.
): Representat ion and Processing of Na-tural Language.
Wien: Hanser; London, Bas-ingstoke: Macmil lan 1980, pp.
271-376.Peter Hellwig: "Dependency Unif icat ion Gram-mar".
In: llth International Conference onComputational  Linguistics.
Proceedings.Bonn, August, 25th to 29th, 1986, Universityof Bonn, pp.
195-198.Carl Pollard, Ivan A.
Sag: Information-BasedSyntax and Semantics.
Vol.
I. Fundamentals.CSLI Lecture Notes, No.
12., Stanford Uni-vers ity 1987.Position: Tree:(i) 1 (whatpron)(2) Ol (do verb f in(SUBJ - noun ra i)(MV _ verb inf 2))(3) 001 (Gudrun noun)(4) 0001 (feed verb inf(DOBJ - 15(IDOBJ _ to ra 2))(5) OOO01 (to(._ noun ra))(6) 000001 (her poss)(7) GO00001 (cat noun(DET _ poss la)5(85 00000001 ( I LLOC~uest ion(PRED _ do verb fin la))(95 Oll (d o verb fin(SUBJ Gudrun noun ra I)(MV _ verb inf 25)(I0) 0000011 (c~at(DET her poss la)5(ii) 0000111 (to(cat noun ra(DET her poss laS) )(12) OOOll l l  (feed verb inf(DOBJ - l)(IDOBJ t.~ora 2(cat noun(DET he rposs  I~55)).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
(13) I001111 (feed verb inf(DOBJ what i)(IDOBJ t__oora 2(cat noun(DET he_rrposs La))5).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
(I~ 5 lll l l l l (d~overb fin(SUBJ Gudrun noun ra I)(MV feed verb inf(DOBJ wha___t 15(IDOBJ t_~ora 2(cat noun(DET her poss Ia5)5) 5I15) II i i i i i i  ( I LLOC~n(PREDdoverb  fin(SUBJ Gudrun noun ra I)(MV feed verb inf(DOBJ what i)(IDOBJ to ra 2( c a-~--noun(DET her poss la)))5)Fig.
3 States of a chart including discontinuous segments244
