Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 22?30,Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational LinguisticsPrediction of Learning Curves in Machine TranslationPrasanth Kolachina?
Nicola Cancedda?
Marc Dymetman?
Sriram Venkatapathy??
LTRC, IIIT-Hyderabad, Hyderabad, India?
Xerox Research Centre Europe, 6 chemin de Maupertuis, 38240 Meylan, FranceAbstractParallel data in the domain of interest is thekey resource when training a statistical ma-chine translation (SMT) system for a specificpurpose.
Since ad-hoc manual translation canrepresent a significant investment in time andmoney, a prior assesment of the amount oftraining data required to achieve a satisfac-tory accuracy level can be very useful.
In thiswork, we show how to predict what the learn-ing curve would look like if we were to manu-ally translate increasing amounts of data.We consider two scenarios, 1) Monolingualsamples in the source and target languages areavailable and 2) An additional small amountof parallel corpus is also available.
We pro-pose methods for predicting learning curves inboth these scenarios.1 IntroductionParallel data in the domain of interest is the key re-source when training a statistical machine transla-tion (SMT) system for a specific business purpose.In many cases it is possible to allocate some budgetfor manually translating a limited sample of relevantdocuments, be it via professional translation servicesor through increasingly fashionable crowdsourcing.However, it is often difficult to predict how muchtraining data will be required to achieve satisfactorytranslation accuracy, preventing sound provisionalbudgetting.
This prediction, or more generally theprediction of the learning curve of an SMT systemas a function of available in-domain parallel data, isthe objective of this paper.We consider two scenarios, representative of real-istic situations.1.
In the first scenario (S1), the SMT developer isgiven only monolingual source and target sam-ples from the relevant domain, and a small testparallel corpus.
?This research was carried out during an internship at XeroxResearch Centre Europe.2.
In the second scenario (S2), an additional smallseed parallel corpus is given that can be usedto train small in-domain models and measure(with some variance) the evaluation score at afew points on the initial portion of the learningcurve.In both cases, the task consists in predicting an eval-uation score (BLEU, throughout this work) on thetest corpus as a function of the size of a subset ofthe source sample, assuming that we could have itmanually translated and use the resulting bilingualcorpus for training.In this paper we provide the following contribu-tions:1.
An extensive study across six parametric func-tion families, empirically establishing that acertain three-parameter power-law family iswell suited for modeling learning curves for theMoses SMT system when the evaluation scoreis BLEU.
Our methodology can be easily gen-eralized to other systems and evaluation scores(Section 3);2.
A method for inferring learning curves basedon features computed from the resources avail-able in scenario S1, suitable for both the sce-narios described above (S1) and (S2) (Section4);3.
A method for extrapolating the learning curvefrom a few measurements, suitable for scenarioS2 (Section 5);4.
A method for combining the two approachesabove, achieving on S2 better prediction accu-racy than either of the two in isolation (Section6).In this study we limit tuning to the mixing param-eters of the Moses log-linear model through MERT,keeping all meta-parameters (e.g.
maximum phraselength, maximum allowed distortion, etc.)
at theirdefault values.
One can expect further tweaking tolead to performance improvements, but this was a22necessary simplification in order to execute the testson a sufficiently large scale.Our experiments involve 30 distinct language pairand domain combinations and 96 different learningcurves.
They show that without any parallel datawe can predict the expected translation accuracy at75K segments within an error of 6 BLEU points (Ta-ble 4), while using a seed training corpus of 10Ksegments narrows this error to within 1.5 points (Ta-ble 6).2 Related WorkLearning curves are routinely used to illustrate howthe performance of experimental methods dependon the amount of training data used.
In the SMTarea, Koehn et al (2003) used learning curves tocompare performance for various meta-parametersettings such as maximum phrase length, whileTurchi et al (2008) extensively studied the be-haviour of learning curves under a number of testconditions on Spanish-English.
In Birch et al(2008), the authors examined corpus features thatcontribute most to the machine translation perfor-mance.
Their results showed that the most predic-tive features were the morphological complexity ofthe languages, their linguistic relatedness and theirword-order divergence; in our work, we make use ofthese features, among others, for predicting transla-tion accuracy (Section 4).In a Machine Learning context, Perlich et al(2003) used learning curves for predicting maximumperformance bounds of learning algorithms and tocompare them.
In Gu et al (2001), the learningcurves of two classification algorithms were mod-elled for eight different large data sets.
This workuses similar a priori knowledge for restricting theform of learning curves as ours (see Section 3), andalso similar empirical evaluation criteria for compar-ing curve families with one another.
While both ap-plication and performance metric in our work aredifferent, we arrive at a similar conclusion that apower law family of the form y = c ?
a x??
is agood model of the learning curves.Learning curves are also frequently used for de-termining empirically the number of iterations foran incremental learning procedure.The crucial difference in our work is that in theprevious cases, learning curves are plotted a poste-riori i.e.
once the labelled data has become avail-able and the training has been performed, whereasin our work the learning curve itself is the object ofthe prediction.
Our goal is to learn to predict whatthe learning curve will be a priori without having tolabel the data at all (S1), or through labelling only avery small amount of it (S2).In this respect, the academic field of Computa-tional Learning Theory has a similar goal, since itstrives to identify bounds to performance measures1,typically including a dependency on the trainingsample size.
We take a purely empirical approachin this work, and obtain useful estimations for a caselike SMT, where the complexity of the mapping be-tween the input and the output prevents tight theo-retical analysis.3 Selecting a parametric family of curvesThe first step in our approach consists in selectinga suitable family of shapes for the learning curvesthat we want to produce in the two scenarios beingconsidered.We formulate the problem as follows.
For a cer-tain bilingual test dataset d, we consider a set ofobservations Od = {(x1, y1), (x2, y2)...(xn, yn)},where yi is the performance on d (measured usingBLEU (Papineni et al, 2002)) of a translation modeltrained on a parallel corpus of size xi.
The corpussize xi is measured in terms of the number of seg-ments (sentences) present in the parallel corpus.We consider such observations to be generated bya regression model of the form:yi = F (xi; ?)
+ i 1 ?
i ?
n (1)where F is a function depending on a vector param-eter ?
which depends on d, and i is Gaussian noiseof constant variance.Based on our prior knowledge of the problem,we limit the search for a suitable F to families thatsatisfies the following conditions- monotonically in-creasing, concave and bounded.
The first conditionjust says that more training data is better.
The sec-ond condition expresses a notion of ?diminishingreturns?, namely that a given amount of additionaltraining data is more advantageous when added toa small rather than to a big amount of initial data.The last condition is related to our use of BLEU ?which is bounded by 1 ?
as a performance mea-sure; It should be noted that some growth patternswhich are sometimes proposed, such as a logarith-mic regime of the form y ' a + b log x, are not1More often to a loss, which is equivalent.23compatible with this constraint.We consider six possible families of functions sat-isfying these conditions, which are listed in Table 1.Preliminary experiments indicated that curves fromModel FormulaExp3 y = c?
e?ax+bExp4 y = c?
e?ax?+bExpP3 y = c?
e(x?b)?Pow3 y = c?
ax?
?Pow4 y = c?
(?ax+ b)?
?ILog2 y = c?
(a/ log x)Table 1: Curve families.the ?Power?
and ?Exp?
family with only two param-eters underfitted, while those with five or more pa-rameters led to overfitting and solution instability.We decided to only select families with three or fourparameters.Curve fitting technique Given a set of observa-tions {(x1, y1), (x2, y2)...(xn, yn)} and a curve fam-ily F (x; ?)
from Table 1, we compute a best fit ??where:??
= argmin?n?i=1[yi ?
F (xi; ?
)]2, (2)through use of the Levenberg-Marquardtmethod (More?, 1978) for non-linear regression.For selecting a learning curve family, and for allother experiments in this paper, we trained a largenumber of systems on multiple configurations oftraining sets and sample sizes, and tested each onmultiple test sets; these are listed in Table 2.
Allexperiments use Moses (Koehn et al, 2007).
2DomainSource Target # TestLanguage Language setsEuroparl (Koehn, 2005)Fr, De, Es En4En Fr, De, EsKFTT (Neubig, 2011) Jp, En En, Jp 2EMEA (Tiedemann, 2009) Da, De En 4News (Callison-Burch et al, 2011) Cz,En,Fr,De,Es Cz,En,Fr,De,Es 3Table 2: The translation systems used for the curve fit-ting experiments, comprising 30 language-pair and do-main combinations for a total of 96 learning curves.Language codes: Cz=Czech, Da=Danish, En=English,De=German, Fr=French, Jp=Japanese, Es=SpanishThe goodness of fit for each of the families is eval-2The settings used in training the systems are thosedescribed in http://www.statmt.org/wmt11/baseline.htmluated based on their ability to i) fit over the entire setof observations, ii) extrapolate to points beyond theobserved portion of the curve and iii) generalize wellover different datasets .We use a recursive fitting procedure where thecurve obtained from fitting the first i points is usedto predict the observations at two points: xi+1, i.e.the point to the immediate right of the currently ob-served xi and xn, i.e.
the largest point that has beenobserved.The following error measures quantify the good-ness of fit of the curve families:1.
Average root mean-squared error (RMSE):1N?c?S?t?Tc{1nn?i=1[yi ?
F (xi; ??
)]2}1/2ctwhere S is the set of training datasets, Tc is theset of test datasets for training configuration c,??
is as defined in Eq.
2, N is the total numberof combinations of training configurations andtest datasets, and i ranges on a grid of trainingsubset sizes.The expressions n, xi, yi, ??
are alllocal to the combination ct.2.
Average root mean squared residual at nextpoint X = xi+1 (NPR):1N?c?S?t?Tc{1n?
k ?
1n?1?i=k[yi+1 ?
F (xi+1; ?
?i)]2}1/2ctwhere ?
?i is obtained using only observationsup to xi in Eq.
2 and where k is the number ofparameters of the family.33.
Average root mean squared residual at the lastpoint X = xn (LPR):1N?c?S?t?Tc{1n?
k ?
1n?1?i=k[yn ?
F (xn; ?
?i)]2}1/2ctCurve fitting evaluation The evaluation of thegoodness of fit for the curve families is presentedin Table 3.
The average values of the root mean-squared error and the average residuals across all thelearning curves used in our experiments are shownin this table.
The values are on the same scale as theBLEU scores.
Figure 1 shows the curve fits obtained3We start the summation from i = k, because at least kpoints are required for computing ?
?i.24Figure 1: Curve fits using different curve families on atest datasetfor all the six families on a test dataset for English-German language pair.Curve Family RMSE NPR LPRExp3 0.0063 0.0094 0.0694Exp4 0.0030 0.0036 0.0072ExpP3 0.0040 0.0049 0.0145Pow3 0.0029 0.0037 0.0091Pow4 0.0026 0.0042 0.0102ILog2 0.0050 0.0067 0.0146Table 3: Evaluation of the goodness of fit for the six fam-ilies.Loooking at the values in Table 3, we decided touse the Pow3 family as the best overall compromise.While it is not systematically better than Exp4 andPow4, it is good overall and has the advantage ofrequiring only 3 parameters.4 Inferring a learning curve from mostlymonolingual dataIn this section we address scenario S1: we haveaccess to a source-language monolingual collec-tion (from which portions to be manually translatedcould be sampled) and a target-language in-domainmonolingual corpus, to supplement the target side ofa parallel corpus while training a language model.The only available parallel resource is a very smalltest corpus.
Our objective is to predict the evolutionof the BLEU score on the given test set as a functionof the size of a random subset of the training datathat we manually translate4.
The intuition behindthis is that the source-side and target-side mono-lingual data already convey significant informationabout the difficulty of the translation task.We proceed in the following way.
We first trainmodels to predict the BLEU score at m anchor sizess1, .
.
.
, sm, based on a set of features globally char-acterizing the configuration of interest.
We restrictour attention to linear models:?j = wj>?, j ?
{1 .
.
.m}where wj is a vector of feature weights specific topredicting at anchor size j, and ?
is a vector of size-independent configuration features, detailed below.We then perform inference using these models topredict the BLEU score at each anchor, for the testcase of interest.
We finally estimate the parametersof the learning curve by weighted least squares re-gression using the anchor predictions.Anchor sizes can be chosen rather arbitrarily, butmust satisfy the following two constraints:1.
They must be three or more in number in orderto allow fitting the tri-parameter curve.2.
They should be spread as much as possiblealong the range of sample size.For our experiments, we take m = 3, with anchorsat 10K, 75K and 500K segments.The feature vector?
consists of the following fea-tures:1.
General properties: number and average lengthof sentences in the (source) test set.2.
Average length of tokens in the (source) test setand in the monolingual source language corpus.3.
Lexical diversity features:(a) type-token ratios for n-grams of order 1 to5 in the monolingual corpus of both sourceand target languages(b) perplexity of language models of order 2to 5 derived from the monolingual sourcecorpus computed on the source side of thetest corpus.4We specify that it is a random sample as opposed to a subsetdeliberately chosen to maximize learning effectiveness.
Whilethere are clear ties between our present work and active learn-ing, we prefer to keep these two aspects distinct at this stage,and intend to explore this connection in future work.254.
Features capturing divergence between lan-guages in the pair:(a) average ratio of source/target sentencelengths in the test set.
(b) ratio of type-token ratios of orders 1 to 5in the monolingual corpus of both sourceand target languages.5.
Word-order divergence: The divergence in theword-order between the source and the targetlanguages can be captured using the part-of-speech (pos) tag sequences across languages.We use cross-entropy measure to capture sim-ilarity between the n-gram distributions of thepos tags in the monolingual corpora of the twolanguages.
The order of the n-grams ranges be-tween n = 2, 4 .
.
.
12 in order to account forlong distance reordering between languages.The pos tags for the languages are mapped toa reduced set of twelve pos tags (Petrov et al,2012) in order to account for differences intagsets used across languages.These features capture our intuition that translationis going to be harder if the language in the domainis highly variable and if the source and target lan-guages diverge more in terms of morphology andword-order.The weights wj are estimated from data.
Thetraining data for fitting these linear models is ob-tained in the following way.
For each configuration(combination of language pair and domain) c andtest set t in Table 2, a gold curve is fitted using theselected tri-parameter power-law family using a finegrid of corpus sizes.
This is available as a byproductof the experiments for comparing different paramet-ric families described in Section 3.
We then computethe value of the gold curves at the m anchor sizes:we thus have m ?gold?
vectors ?1, .
.
.
,?m with ac-curate estimates of BLEU at the anchor sizes5.
Weconstruct the design matrix ?
with one column foreach feature vector ?ct corresponding to each com-bination of training configuration c and test set t.We then estimate weights wj using Ridge regres-sion (L2 regularization):wj = argminw||?>w ?
?j ||2 + C||w||2 (3)5Computing these values from the gold curve rather than di-rectly from the observations has the advantage of smoothing theobserved values and also does not assume that observations atthe anchor sizes are always directly available.where the regularization parameter C is chosen bycross-validation.
We also run experiments usingLasso (L1) regularization (Tibshirani, 1994) insteadof Ridge.
As baseline, we take a constant meanmodel predicting, for each anchor size sj , the av-erage of all the ?jct.We do not assume the difficulty of predictingBLEU at all anchor points to be the same.
To allowfor this, we use (non-regularized) weighted least-squares to fit a curve from our parametric familythrough the m anchor points6.
Following (Croarkinand Tobias, 2006, Section 4.4.5.2), the anchor con-fidence is set to be the inverse of the cross-validatedmean square residuals:?j =(1N?c?S?t?Tc(?>ctw\cj ?
?jct)2)?1(4)where w\cj are the feature weights obtained by theregression above on all training configurations ex-cept c, ?jct is the gold value at anchor j for train-ing/test combination c, t, and N is the total numberof such combinations7.
In other words, we assign toeach anchor point a confidence inverse to the cross-validated mean squared error of the model used topredict it.For a new unseen configuration with feature vec-tor ?u, we determine the parameters ?u of the corre-sponding learning curve as:?u = argmin?
?j?j(F (sj ; ?)?
?>uwj)2(5)5 Extrapolating a learning curve fitted ona small parallel corpusGiven a small ?seed?
parallel corpus, the translationsystem can be used to train small in-domain modelsand the evaluation score can be measured at a fewinitial sample sizes {(x1, y1), (x2, y2)...(xp, yp)}.The performance of the system for these initialpoints provides evidence for predicting its perfor-mance for larger sample sizes.In order to do so, a learning curve from the fam-ily Pow3 is first fit through these initial points.
We6When the number of anchor points is the same as the num-ber of parameters in the parametric family, the curve can be fitexactly through all anchor points.
However the general discus-sion is relevant in case there are more anchor points than pa-rameters, and also in view of the combination of inference andextrapolation in Section 6.7Curves on different test data for the same training configu-ration are highly correlated and are therefore left out.26assume that p ?
3 for this operation to be well-defined.
The best fit ??
is computed using the samecurve fitting as in Eq.
2.At each individual anchor size sj , the accuracy ofprediction is measured using the root mean-squarederror between the prediction of extrapolated curvesand the gold values:(1N?c?S?t?Tc[F (sj ; ??ct)?
?ctj ]2)1/2(6)where ?
?ct are the parameters of the curve fit usingthe initial points for the combination ct.In general, we observed that the extrapolatedcurve tends to over-estimate BLEU for large sam-ples.6 Combining inference and extrapolationIn scenario S2, the models trained from the seed par-allel corpus and the features used for inference (Sec-tion 4) provide complementary information.
In thissection we combine the two to see if this yields moreaccurate learning curves.For the inference method of Section 4, predictionsof models at anchor points are weighted by the in-verse of the model empirical squared error (?j).
Weextend this approach to the extrapolated curves.
Letu be a new configuration with seed parallel corpus ofsize xu, and let xl be the largest point in our grid forwhich xl ?
xu.
We first train translation models andevaluate scores on samples of size x1, .
.
.
, xl, fit pa-rameters ?
?u through the scores, and then extrapolateBLEU at the anchors sj : F (sj ; ?
?u), j ?
{1, .
.
.
,m}.Using the models trained for the experiments in Sec-tion 3, we estimate the squared extrapolation error atthe anchors sj when using models trained on size upto xl, and set the confidence in the extrapolations8for u to its inverse:?<lj =(1N?c?S?t?Tc(F (sj ; ?<lct )?
?ctj)2)?1(7)where N , S, Tc and ?ctj have the same meaning asin Eq.
4, and ?<lct are parameters fitted for config-uration c and test t using only scores measured atx1, .
.
.
, xl.
We finally estimate the parameters ?u of8In some cases these can actually be interpolations.the combined curve as:?u = argmin?
?j?j(F (sj ; ?)?
?>uwj)2+ ?<lj (F (sj ; ?)?
F (sj ; ?
?u))2where ?u is the feature vector for u, and wj are theweights we obtained from the regression in Eq.
3.7 ExperimentsIn this section, we report the results of our experi-ments on predicting the learning curves.7.1 Inferred Learning CurvesRegression model 10K 75K 500KRidge 0.063 0.060 0.053Lasso 0.054 0.060 0.062Baseline 0.112 0.121 0.121Table 4: Root mean squared error of the linear regressionmodels for each anchor sizeIn the case of inference from mostly monolingualdata, the accuracy of the predictions at each of theanchor sizes is evaluated using root mean-squarederror over the predictions obtained in a leave-one-out manner over the set of configurations from Ta-ble 2.
Table 4 shows these results for Ridge andLasso regression models at the three anchor sizes.As an example, the model estimated using Lasso forthe 75K anchor size exhibits a root mean squarederror of 6 BLEU points.
The errors we obtain arelower than the error of the baseline consisting in tak-ing, for each anchor size sj , the average of all the?ctj .
The Lasso regression model selected four fea-tures from the entire feature set: i) Size of the testset (sentences & tokens) ii) Perplexity of languagemodel (order 5) on the test set iii) Type-token ratioof the target monolingual corpus .
Feature correla-tion measures such as Pearsons R showed that thefeatures corresponding to type-token ratios of bothsource and target languages and size of test set havea high correlation with the BLEU scores at the threeanchor sizes.Figure 2 shows an instance of the inferred learn-ing curves obtained using a weighted least squaresmethod on the predictions at the anchor sizes.
Ta-ble 7 presents the cumulative error of the inferredlearning curves with respect to the gold curves, mea-sured as the average distance between the curves inthe range x ?
[0.1K, 100K].27Figure 2: Inferred learning curve for English-Japanesetest set.
The error-bars show the anchor confidence forthe predictions.7.2 Extrapolated Learning CurvesAs explained in Section 5, we evaluate the accuracyof predictions from the extrapolated curve using theroot mean squared error (see Eq.
6) between the pre-dictions of this curve and the gold values at the an-chor points.We conducted experiments for three sets of initialpoints, 1) 1K-5K-10K, 2) 5K-10K-20K, and 3) 1K-5K-10K-20K.
For each of these sets, we show theprediction accuracy at the anchor sizes, 10K9, 75K,and 500K in Table 5.Initial Points 10K 75K 500K1K-5K-10K 0.005 0.017 0.0425K-10K-20K 0.002 0.015 0.0341K-5K-10K-20K 0.002 0.008 0.019Table 5: Root mean squared error of the extrapolatedcurves at the three anchor sizesThe root mean squared errors obtained by extrap-olating the learning curve are much lower than thoseobtained by prediction of translation accuracy usingthe monolingual corpus only (see Table 4), whichis expected given that more direct evidence is avail-able in the former case .
In Table 5, one can alsosee that the root mean squared error for the sets 1K-5K-10K and 5K-10K-20K are quite close for anchor9The 10K point is not an extrapolation point but lies withinthe range of the set of initial points.
However, it does give ameasure of the closeness of the curve fit using only the initialpoints with the gold fit using all the points; the value of this goldfit at 10K is not necessarily equal to the observation at 10K.sizes 75K and 500K.
However, when a configurationof four initial points is used for the same amount of?seed?
parallel data, it outperforms both the config-urations with three initial points.7.3 Combined Learning Curves and OverallComparisonIn Section 6, we presented a method for combin-ing the predicted learning curves from inference andextrapolation by using a weighted least squares ap-proach.
Table 6 reports the root mean squared errorat the three anchor sizes from the combined curves.Initial Points Model 10K 75K 500K1K-5K-10KRidge 0.005 0.015 0.038Lasso 0.005 0.014 0.0385K-10K-20KRidge 0.001 0.006 0.018Lasso 0.001 0.006 0.0181K-5K-10K-20KRidge 0.001 0.005 0.014Lasso 0.001 0.005 0.014Table 6: Root mean squared error of the combined curvesat the three anchor sizesWe also present an overall evaluation of all thepredicted learning curves.
The evaluation metric isthe average distance between the predicted curvesand the gold curves, within the range of sample sizesxmin=0.1K to xmax=500K segments; this metric isdefined as:1N?c?S?t?Tc?xmaxx=xmin |F (x; ??ct)?
F (x; ?
?ct)|xmax ?
xminwhere ?
?ct is the curve of interest, ?
?ct is the goldcurve, and x is in the range [xmin, xmax], with a stepsize of 1.
Table 7 presents the final evaluation.Initial Points IR IL EC CR CL1K-5K-10K 0.034 0.050 0.018 0.015 0.0145K-10K-20K 0.036 0.048 0.011 0.010 0.0091K-5K-10K-20K 0.032 0.049 0.008 0.007 0.007Table 7: Average distance of different predictedlearning curves relative to the gold curve.
Columns:IR=?Inference using Ridge model?, IL=?Inferenceusing Lasso model?, EC=?Extrapolated curve?,CR=?Combined curve using Ridge?, CL=?Combinedcurve using Lasso?We see that the combined curves (CR and CL)perform slightly better than the inferred curves (IR28and IL) and the extrapolated curves (EC).
The aver-age distance is on the same scale as the BLEU score,which suggests that our best curves can predict thegold curve within 1.5 BLEU points on average (thebest result being 0.7 BLEU points when the initialpoints are 1K-5K-10K-20K) which is a telling re-sult.
The distances between the predicted and thegold curves for all the learning curves in our experi-ments are shown in Figure 3.Figure 3: Distances between the predicted and the goldlearning curves in our experiments across the range ofsample sizes.
The dotted lines indicate the distance fromgold curve for each instance, while the bold line indi-cates the 95th quantile of the distance between the curves.IR=?Inference using Ridge model?, EC=?Extrapolatedcurve?, CR=?Combined curve using Ridge?.We also provide a comparison of the different pre-dicted curves with respect to the gold curve as shownin Figure 4.Figure 4: Predicted curves in the three scenarios forCzech-English test set using the Lasso model8 ConclusionThe ability to predict the amount of parallel datarequired to achieve a given level of quality is veryvaluable in planning business deployments of statis-tical machine translation; yet, we are not aware ofany rigorous proposal for addressing this need.Here, we proposed methods that can be directlyapplied to predicting learning curves in realistic sce-narios.
We identified a suitable parametric fam-ily for modeling learning curves via an extensiveempirical comparison.
We described an inferencemethod that requires a minimal initial investment inthe form of only a small parallel test dataset.
For thecases where a slightly larger in-domain ?seed?
par-allel corpus is available, we introduced an extrapola-tion method and a combined method yielding high-precision predictions: using models trained on up to20K sentence pairs we can predict performance on agiven test set with a root mean squared error in theorder of 1 BLEU point at 75K sentence pairs, andin the order of 2-4 BLEU points at 500K.
Consider-ing that variations in the order of 1 BLEU point ona same test dataset can be observed simply due tothe instability of the standard MERT parameter tun-ing algorithm (Foster and Kuhn, 2009; Clark et al,2011), we believe our results to be close to what canbe achieved in principle.
Note that by using goldcurves as labels instead of actual measures we im-plicitly average across many rounds of MERT (14for each curve), greatly attenuating the impact of theinstability in the optimization procedure due to ran-domness.For enabling this work we trained a multitudeof instances of the same phrase-based SMT sys-tem on 30 distinct combinations of language-pairand domain, each with fourteen distinct trainingsets of increasing size and tested these instances onmultiple in-domain datasets, generating 96 learningcurves.
BLEU measurements for all 96 learningcurves along with the gold curves and feature valuesused for inferring the learning curves are availableas additional material to this submission.We believe that it should be possible to use in-sights from this paper in an active learning setting,to select, from an available monolingual source, asubset of a given size for manual translation, in sucha way at to yield the highest performance, and weplan to extend our work in this direction.29ReferencesAlexandra Birch, Miles Osborne, and Philipp Koehn.2008.
Predicting Success in Machine Translation.In Proceedings of the 2008 Conference on EmpiricalMethods in Natural Language Processing, pages 745?754, Honolulu, Hawaii, October.
Association for Com-putational Linguistics.Chris Callison-Burch, Philipp Koehn, Christof Monz,and Omar Zaidan.
2011.
Findings of the 2011 Work-shop on Statistical Machine Translation.
In Proceed-ings of the Sixth Workshop on Statistical MachineTranslation, pages 22?64, Edinburgh, Scotland, July.Association for Computational Linguistics.Jonathan H. Clark, Chris Dyer, Alon Lavie, and Noah A.Smith.
2011.
Better Hypothesis Testing for Statis-tical Machine Translation: Controlling for OptimizerInstability.
In Proceedings of the 49th Annual Meet-ing of the Association for Computational Linguistics:Human Language Technologies, pages 176?181, Port-land, Oregon, USA, June.
Association for Computa-tional Linguistics.Carroll Croarkin and Paul Tobias.
2006.NIST/SEMATECH e-Handbook of Statistical Meth-ods.
NIST/SEMATECH, July.
Available online:http://www.itl.nist.gov/div898/handbook/.George Foster and Roland Kuhn.
2009.
StabilizingMinimum Error Rate Training.
In Proceedings of theFourth Workshop on Statistical Machine Translation,pages 242?249, Athens, Greece, March.
Associationfor Computational Linguistics.Baohua Gu, Feifang Hu, and Huan Liu.
2001.
Mod-elling Classification Performance for Large Data Sets.In Proceedings of the Second International Conferenceon Advances in Web-Age Information Management,WAIM ?01, pages 317?328, London, UK.
Springer-Verlag.Philipp Koehn, Franz J. Och, and Daniel Marcu.
2003.Statistical Phrase-Based Translation.
In Proceedingsof Human Language Technologies: The 2003 AnnualConference of the North American Chapter of the As-sociation for Computational Linguistics, pages 48?54,Edmonton, Canada, May.
Association for Computa-tional Linguistics.Philipp Koehn, Hieu Hoang, Alexandra Birch, ChrisCallison-Burch, Marcello Federico, Nicola Bertoldi,Brooke Cowan, Wade Shen, Christine Moran, RichardZens, Chris Dyer, Ondrej Bojar, Alexandra Con-stantin, and Evan Herbst.
2007.
Moses: Open SourceToolkit for Statistical Machine Translation.
In Pro-ceedings of the 45th Annual Meeting of the Associ-ation for Computational Linguistics Companion Vol-ume Proceedings of the Demo and Poster Sessions,pages 177?180, Prague, Czech Republic, June.
Asso-ciation for Computational Linguistics.Philipp Koehn.
2005.
Europarl: A Parallel Corpus forStatistical Machine Translation.
In Proceedings of the10th Machine Translation Summit, Phuket, Thailand,September.Jorge J.
More?.
1978.
The Levenberg-Marquardt Algo-rithm: Implementation and Theory.
Numerical Anal-ysis.
Proceedings Biennial Conference Dundee 1977,630:105?116.Graham Neubig.
2011.
The Kyoto Free TranslationTask.
http://www.phontron.com/kftt.Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu.
2002.
Bleu: a Method for Automatic Eval-uation of Machine Translation.
In Proceedings of 40thAnnual Meeting of the Association for ComputationalLinguistics, pages 311?318, Philadelphia, Pennsylva-nia, USA, July.
Association for Computational Lin-guistics.Claudia Perlich, Foster J. Provost, and Jeffrey S. Si-monoff.
2003.
Tree Induction vs. Logistic Regres-sion: A Learning-Curve Analysis.
Journal of MachineLearning Research, 4:211?255.Slav Petrov, Dipanjan Das, and Ryan McDonald.
2012.A Universal Part-of-Speech Tagset.
In Proceedingsof the Eighth conference on International LanguageResources and Evaluation (LREC?12), Istanbul, May.European Language Resources Association (ELRA).Robert Tibshirani.
1994.
Regression Shrinkage and Se-lection Via the Lasso.
Journal of the Royal StatisticalSociety, Series B, 58:267?288.Jo?rg Tiedemann.
2009.
News from OPUS - A Collectionof Multilingual Parallel Corpora with Tools and Inter-faces.
In Recent Advances in Natural Language Pro-cessing, volume V, pages 237?248.
John Benjamins,Amsterdam/Philadelphia, Borovets, Bulgaria.Marco Turchi, Tijl De Bie, and Nello Cristianini.
2008.Learning Performance of a Machine Translation Sys-tem: a Statistical and Computational Analysis.
In Pro-ceedings of the Third Workshop on Statistical MachineTranslation, pages 35?43, Columbus, Ohio, June.
As-sociation for Computational Linguistics.30
