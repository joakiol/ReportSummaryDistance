DEF IN ING NATURAL LANGUAGE GRAMMARS IN  GPSGEric Sven RistadMIT Artificial Intelligence Lab Thinking Machines Corporat ion545 Technology Square and 245 First StreetCambridge, MA 02139 Cambridge, MA 021421 Overv iewThree central goals of work in the generalized phrase struc-ture grammar  (GPSG) l inguistic framework, as stated in theleading book "Generalized Phrase Structure Grammar"  Gaz-dar et al(1985) (hereafter GKPS) ,  are: (1) to characterize alland only the natural  language grammars ,  (2) to algorithmicallydetermine membersh ip  and generative power consequences ofGPSGs,  and (3) to embody the universal ism of natural  lan-guage entirely in the formal system, rather than  by s tatementsmade in it.
1These pages formally consider whether GPSG's  weak context-free generative power (wcfgp) will allow it to achieve the threegoals.
The centerpiece of this paper is a proof that  it is unde-cidable whether an arbitrary GPSG generates the nonnatura llanguage ~ ' .
On the basis of this result, I argue that  GPSGfails to define the natura l  anguage grammars ,  and that  the gen-erative power consequences of the GPSG framework cannot bealgorithmical ly determined, contrary to goals one and two.
2 Inthe process, I examine the l inguistic universal ism of the GPSGformal system and argue that  GPSGs  can describe an infiniteclass of nonnatura l  context-free languages.
The paper concludeswith a brief diagnosis of the result and suggests that  the problemmight be met by abandoning the weak context-free generativepower framework and assuming substant ive constraints.1 .1  The  St ruc ture  o f  GPSG TheoryA generalized phrase structure grammar  contains five language-part icular components  ( immediate dominance (ID) rules, meta-rules, linear precedence (LP) s tatements ,  feature co-occurrenceIGKPS clearly outline their goals.
One, uto arrive at a constrained met-alanguage capable of defining the grammars of natural anguages, but notthe grammar of, say, the set of prime numbers2(p.4).
Two, to constructan explicit linguistic theory whose formal consequences are clearly and eas-ily determinable.
These 'formal consequences' include both the generativepower consequences demanded by the first goal and membership determi-nation: GPSG regards languages "as collections whose membership is def-initely and precisely specifiable.
"(p.1) Three, to define a linguistic theorywhere ~lhe universalism \[of natural anguage\] is, ultimately, intended to beentirely embodied in the formal system, not ezpressed by statements made init.
'(p.4, my emphasis)2The proof technique make use of invalid computations, and the actualGPSG constructed is so simple, so similar to the GPSGs proposed for actualnatural languages, and so flexible in its exact formulation that the method ofproof suggests there may be no simple reformulations of GPSG that avoidthis problem.
The proof also suggests that it is impossible in principleto algorithmically determine whether linguistic theories based on a wcfgpframework (e.g.
GPSG) actually define the natural anguage grammars.restrict ions (FCRs),  and feature specification defaults (FSDs))and four universal components:  a theory of syntactic features,principles of universal feature instant iat ion,  principles of seman-tic interpretat ion, and formal relat ionships among various com-ponents  of the grammar.
3The set of ID rules obtained by taking the finite closureof the metarules on the ID rules is mapped into local phrasestructure trees, subject o principles of universal feature instan-t iat ion, FSDs, FCRs,  and LP statements .
Finally, these localtrees are assembled to form phrase structure trees, which arete rmmated  by lexical elements.The essence of GPSG is the constrained mapping of ID rulesinto local trees.
The constraints of GPSG theory subdivideinto absolute constraints on local trees (due to FCRs and LP-s tatements)  and relative constraints on the rule to local treemapping (s temming from FSDs and universal feature instan-t iation).
The absolute constraints are all language-part icular,and consequently not inherent in the formal GPSG framework.Similarly, the relative constraints,  of which only universal in-stant iat ion is not explicitly language-part icular,  do not applyto fully specified ID rules and consequently are not strongly in-herent in the GPSG framework either.
4 In summary,  GPSGlocal trees are only as constrained as ID rules are: that is, notat all.The only constraint strongly inherent in GPSG theory (whencompared to context-free grammars  (CFGs)) is finite featureclosure, which l imits the number  of GPSG nonterminal  symbolsto be finite and bounded.
S1 .2  A Nonnatura l  GPSGConsider the exceedingly simple GPSG for the nonnatura l  lan-guage Z*, consisting solely of the two ID rulesSThis work is based on current GPSG theory as presented in GKPS.
Thereader is urged to consult hat work for a formal presentation a d thoroughexposition of current GPSG theory.4I use "strongly inherent" to mean ~unavoidable by virtue of the formalframework."
Note that the use of problematic feature specifications inuniversal feature instantiation means that this constraint is dependent onother, parochial, components (e.g.
FCRs).
Appropriate choice of FCRsor ID rules will abrogate universal feature inetantiation, thus rendering itimplicitly language particular too.5This formal constraint is extremely weak, however, since the theoryof syntactic features licenses more than 10 TM syntactic ategories.
SeeRistad, E.S.
(1986), ~Computational Complexity of Current GPSG Theory ~in these proceedings for a discussion.40S ---* {} ,H  I EThis G PSG generates local trees with all possible subcategoriza-tion specifications -- the SUBCAT feature may assume any valuein the non-head daughter of the first ID rule, and S generatesthe nonnatural language ~*.This exhibit is inconclusive, however.
We have only shownthat GKPS -- and not GPSG -- have failed to achieve the firstgoal of GPSG theory.
The exhibition leaves open the possibilityof trivially reformalizing GPSG or imposing ad-hoc constraintson the theory such that I will no longer be able to personallyconstruct a GPSG for Z*.2 Undecidabi l i ty  and Generat ive Powerin GPSGThat "= Z*?"
is undecidable for arbitrary context-free gram-mars is a well-known result in the formal language literature(see Hopcraft and Ullman(1979:201-203)).
The standard proofis to construct a PDA that accepts all invalid computations ofa TM M. From this PDA an equivalent CFG G is directly con-structible.
Thus, L(G) = ~'  if and only if all computations ofM are invalid, i.e.
L(M) = 0.
The latter problem is undecid-able, so the former must be also.No such reduction is possible for a proof that "-- ~*?"
isundecidable for arbitrary GPSGs.
In the above reduction, thenumber of nonterminals in G is a function of the size of thesimulated TM M. GPSGs, however, have a bounded numberof nonterminal symbols, and as discussed above, that is theessential difference between CFGs and GPSGs.Only weak generative power is of interest for the follow-ing proof, and the formal GPSG constraints on weak generativepower are trivially abrogated.
For example, exhaustive constantpartial ordering (ECPO) - -  which is a constraint on strong gen-erative capacity - -  can be done away with for all intents andpurposes by nonterminal renaming, and constraints arising fromprinciples of universal feature instantiation don't  apply to fullyinstantiated ID rules.First, a proof that "-- ~*?"
is undecidable for context-freegrammars with a very small number of terminal and nonter-minal symbols is sketched.
Following the proof for CFGs, theequivalent proof for GPSGs is outlined.2.1 Out l ine  o f  a P roo f  fo r  Smal l  CFGsLet L(z,~ ) be the class of context-free grammars with at leastx nonterminal and y terminal symbols.
I now sketch a proofthat it is undecidable of an arbitrary CFG G c L(~,v ) whetherL(G) = ~* for some x, y greater than fixed lower bounds.
Theactual construction details are of no obvious mathematical  orpedagogical interest, and will not be included.
The idea isto directly construct a CFG to generate the invalid computa-tions of the Universal Turing Machine (UTM).
This grammarwill be small if the UTM is small.
The "smallest UTM" ofMinsky(1967:276-281) has seven states and a four symbol tapealphabet, for a state-symbol product of 28 (!).
Hence, it is notsurprising that the "smallest GUT M" that generates the invalidcomputations of the UTM has seventeen onterminals and twoterminals.Observe that if a string w is an invalid computation of theuniversal Turing machine M = (Q,\]E, r ,  5, q0, B, F) on input x,then one of the following conditions must hold.1.
w has a "syntactic error," that is, w is not of the formXl~g2~' ' "  ~Xm~ , where each xi is an instantaneous de-scription (ID) of M. Therefore, some xl is not an ID ofM.2.
xl is not initial; that is, Xl ~ q0~*3. x,~ is not final; that is xm ~ r * fF*4. x~ F-.
M (X~+l) R is false for some odd i5.
(xi) R ~-*M Xi+l is false for some even iStraightforward construction of GVTM will result in a CFGcontaining on the order of twenty or thirty nonterminals andat least fifteen terminals (one for each UTM state and tapesymbol, one for the blank-tape symbol, and one for the instan-taneous description separator "~ ' ) .
Then the subgrammarswhich ensure that (xi) R ~-~'M xi+l is false for some even i andthat x~ ~--~M (xi+l) R is false for some odd i may be cleverlycombined so that nonterminals encode more information, andSO on.The final trick, due to Albert Meyer, reduces the terminalsto 2 at the cost of a lone nonterminal by encoding the n ter-minals as log n -- k-bit words over the new terminal alphabet{0, 1}, and adding some rules to ensure that the final grammarcould generate \]E* and not (~4)..
The productionsN4 --* OL41L4 I OOL4 I 01L~ I l l L4  I .
.
.are added to the converted CFG GtVTM, which generates alanguage of the formL4 --* oooo I OOOl \] OOlO I .
.
.
I E I L4L4Where L4 generates all symbols of length 4, and N4 gener-ates all strings not of length 0 rood k, where k = 4 (i.e.
allstrings of length 1,2,3 mod 4).
Deeper consideration of the ac-tual GUTM reveals that the N4 nonterminal is also eliminable.Note that all the preceding efforts to reduce the number ofnonterminals and terminals increase the number of context-freeproductions.
This symbol-production tradeoff becomes clearerwhen one actually constructs GUTM.Suppose the distinguished start symbol for GVTM is SUTM.Then we form a new CFG consisting Of all productions of theform41S ---* {Q - q0}{E p - (M}}{N4 U L4}and the one productionS ---* SUT Mwhere (M} is the length p encoding of an arbitrary TM M,and L4, N4 are as defined above.This ensures that strings whose prefix is "q0(M)" will begenerated starting from S if and only if they are generated start-ing from SVrM: that is, they are invalid computations of theUTM on M.2.2 Some Deta i l s  fo r  Lc~,v ) and  GPSGLet the nonterminal symbols F, Q, and E in the following CFGportion generate the obvious terminal symbols corresponding tothe equivalent UTM sets.
B is the terminal blank symbol.Then, the following sketched CF productions generate theIDs of M such that zi ~---~M (Xi+l) R is false for some odd i.The $4 and $5 nonterminals are used to locate the even andodd i IDs zi of w. Sok generates the language {F t_J #}*.s4 -~ rs4 I #s5 I #SoddSokS5 -~ rs5 I#s4  I #s,.,.Sok$odd -~ S l#Sl ~ rs~r  I s2 I s6l  s7Ss -~ rs~ \[ rs3s7 - ,  s r r  I ss r$2 --* EaESzFbFwhere a # b, both in Es~ - .
aqbSa{r s - pca} if 8(q, b) = (p, c, R)aqbSs{r s - cap} if 8(q,b) = (p,c,L)S2 --* aqB#B{r  s - pca} if 8(q, B) = (p,c, R)aqB#B{r  3 - cap} if 8(q, B) = (p, c, L)s3 - .
r s~r  I QB#Brr I ZB#Br$1 and $2 must generate a false transition for odd i, while Szneed not generate a false transition and is used to pad out theIDs of w. The nonterminals Se,S7 accept IDs with improperlydifferent ape lengths.
The first $2 production accepts transi-tions where the tape contents differ in a bad place, the second $2production accepts invalid transitions other than at the end ofthe tape, and the third $2 accepts invalid end of the tape transi-tions.
Note that the last two $2 productions are actually classesof productions, one for each string in F 3 -pca ,  F 3 - cap,....The GPSG for "= E*?"
is constructed in a virtually iden-tical fashion.
Recall that the GPSG formal framework does notbar us from constructing a grammar equivalent to the CFG justpresented.
The ID rules used in the construction will be fullyspecified so as to defeat universal feature instantiation, and theconstruction will use nonterminal renaming to avoid ECPO.Let the GPSG category C be fully specified for all features(the actual values don't matter) with the exception of, say, thebinary features GER, NEG.
NULL and POSS.
Arrange those fourfeatures in some canonical order, and let binary strings of lengthfour represent the values assigned to those features in a givencategory.
For example, C\[0100\] represents the category C withthe additional specifications (\[-GER\], \[+NEG\], \[-NULL\], \[-POSS\]).
We replace Soda by C\[0000\], S1 by C\[0001\], $2 byC\[0010\], $3 by C\[0011\], $6 by C\[0100\], and Sr by C\[0101\].
Thenonterminal r is replaced by three symbols of the form C\[1 l xx\],one for each linear precedence r conforms too.
Similarly, Y. isreplaced by two symbols of the form C\[100x\].
The ID rules, inthe same order as the CF productions above (with a portion ofthe necessary LP statements) are:c\[oooo\] -~ c \ [oool \ ]#C\[0001\] -* C\[llO0\]C\[O001\]C\[llO1\]{C\[O010\]\[C\[0100\]\]C\[OIO1\]C\[OIO0\]--* C\[llO0\]C\[OIO0\] I C\[llO0\]C\[O011 \]cIo lo l \ ]  -~ C\[OlOl\]C\[llOlltC\[oonlc\[llOl\]c\[oolo\] -~ C\[10001aC\[lOO1\]C\[OOn\]C\[XXO1\]bC\[U101where a ~ b, both in EC\[0010\] ~ aqbC\[00u\]{r  ~-  pca} if6(q,b) = (p,c,R)aqbC\[oon\]{r 3 - cap} if 8(q,b) = (p,c,L)C\[0010\] --* aqB#B{r  s -pca}  if 8(q, B) = (p, c, R)aqB#B{r  3 - cap} if 8(q,B) = (p,c,L)C\[0011\] -~ C\[1100\]C\[0011\]C\[1101\] \]QB#BC\[llO0\]C\[l l01\] IC \[1000\] B# BC \[1100\]C\[ll00\] < C\[O001\],C\[O011\],C\[OIO0\],C\[OIO1\] < C\[ll01\]C\[I000\] < a < C\[1001\] < C\[0011\] < C\[1110\]While the sketched ID rules are not valid GPSG rules, justas the sketched context-free productions were not the valid com-ponents of a context-free grammar, a valid GPSG can be con-structed in a straightforward and obvious manner from thesketched ID rules.
There would be no metarules, FCRs or FSDsin the actual grammar.The last comment o be made is that in the actual GUTM,only the number of productions is a function of the size of theUTM.
The UTM is used only as a convincing crutch - -  i.e.
notat all.
Only a small, fixed number of nonterminals are needed toconstruct a CFG for the invalid computations of any arbitraryTuring Machine.3 Interpret ing the ResultThe preceding pages have shown that the extremely simple non-natural language ~* is generated by a GPSG, as is the morecomplex language L lc  consisting of the invalid computations ofan arbitrary Turing machine on an arbitrary input.
Because42Llc  is a GPSG language, "= E '?"
is undecidable for GPSGs:there is no algorithmic way of knowing whether any given GPSGgenerates a natural language or an unnatural one.
So, for ex-ample, no algor ithm can tell us whether the English GPSG ofGKPS really generates English or ~*.The result suggests that  goals 1, 2, 3 and the context-freeframework conflict with each other.
Weak context-free gener-ative power allows both ~* and Lie,  yet by goal 1 we mustexclude nonnatura l  anguages.
Goal 2 demands it be possi-ble to algorithmically determine whether a given GPSG gener-ates a desired language or not, yet this cannot be done in thecontext-free framework.
Lastly, goal 3 requires that  all nonnat-ural languages be excluded on the basis of the formal systemalone, but  this looks to be impossible given the other two goals,the adopted framework, and the technical vagueness of "naturallanguage grammar.
"The problem can be met in part by abandoning the context-free framework.
Other authors have argued that  natural  lan-guage is not context-free, and here we argue that  the GPSGtheory of GKPS can characterize context-free languages thatare too simple or trivial to be natural ,  e.g.
any finite or reg-ular language.
6 The context-free framework is both too weakand too strong - -  it includes nonnatura l  languages and excludesnatural  ones.
Moreover, CFL 's  have the wrong formal proper-ties entirely: natural  language is surely not closed under union,concatenat ion,  Kleene closure, subst i tut ion,  or intersection withregular sets!
7 In short,  the context-free framework is the wrongidea completely, and this is to be expected: why should the ar-bitrary generative power classifications of mathemat ics  (formallanguage theory) be at all relevant o biology (human language)?Goal 2, that  the natura lness of g rammars  postulated byl inguistic theory be decidable, and to a lesser extent goal 3,are of dubious merit.
In my view, substant ive constraints aris-ing from psychology, biology or even physics may be freely in-voked, with a corresponding change in the meaning of "naturallanguage grammar"  from "mental ly-representable grammar"  tosomething like "easily learnable and speakable mental ly-representab\]?grammar."
There is no a priori reason or empirical evidence tosuggest that  the class of mental ly representable grammars  is notfantastical ly complex, maybe not even decidable, sOne promising restriction in this regard, which if properlyformulated would alleviate GPSG's  actual and formal inabilityto characterize only the natural  language grammars ,  is strongnat iv ism - -  the restrictive theory that  the class of natural  lan-eWhile 'natural language grammar' is not defined precisely, recent workhas demonstrated mpirically that natural language isnot context-free, andtherefore GPSG theory will not be able to characterize all the human lan-guage grammars.
See, for example, Higglnbotham(1984), Shieber(1985),and Culy(1985).
For counterarguments, seePullum(1985).
Nash(1980),chapter 5, discusses the impossibility of accounting for free word order lan-guages (e.g.
Warlplrl) using ID/LP grammars.
I focus on the goal ofcharacterizing only the natural anguage grammars in this paper.VThe finite, bounded number of nonterminals allowed in GPSG theoryplays a linguistic role in this regard, because the direct consequence of finitefeature closure is that GPSG languages are not truly closed under union,concatenation, or substitution.8See Chomsky(1980:120) for a discussion.guages is finite.
This restriction is well motivated both by theissues raised here and by other empirical considerations.
?
Therestriction, which may be substant ive or purely formal, is a for-mal  attack on the heart of the result: the theory of undecidabil-ity is concerned with the existence or nonexistence of algor ithmsfor solving problems with an infinity of instances.
Furthermore,the restriction may be empirically plausible, l?
'xlThe author  does not have a clear idea how GPSG might berestr icted in this manner,  and merely suggests trong nat iv ismas a well-motivated irection for future GPSG research.Acknowledgments .
The author  is indebted to Ed Barton,Robert  Berwick, Noam Chomsky, J im Higginbotham, RichardLarson, Albert  Meyer, and David Waltz for assistance in writ-ing this paper,  and to the MIT  Artificial Intelligence Lab andThinking Machines Corporation for support ing this research.4 ReferencesChomsky,  N. (1980) Rules and Representations.
New York:Columbia University Press.Gasdar ,  G., E. Klein, G. Pul lum, and I.
Sag (1985) General-ized Phrase Structure Grammar.
Oxford, England: BasilBlackwell.H igginbotham, J.
(1984) "English is not a Context-Free Lan-guage," Linguistic Inquiry 15: 119-126.~Note that invoking finiteness here is technically different from hidingintractability with finiteness.
Finiteness i  the correct generalization here,because we are interested in whether GPSG generates nonnatural languagesor not, and not in the computational cost of determining the generativecapacity of an arbitrary GPSG.
A finiteness restriction for the purposes ofcomputational complexity is invalid because it prevents us from properlyusing the tools of complexity theory to study the computational complexityof a problem.l?See Osherson et.
el.
(1984) for an exposition of strong nativism andrelated issues.
The theory of strong nativism can be derived in formallearning theory from three empirically motivated axioms: (1) the ability oflanguage l arners to learn in noisy environments, (2)language l arner mem-ory limitations (e.g.
inability to remember long-past utterances), and (3)the likelihood that language learners choose simple grammars over morecomplex, equivalent ones.
These formal results are weaker empiricallythan they might appear at first glance: the equivalence of Ulearned~ gram-mars is measured using only weak generative capacity, ignoring uniformityconsiderations.llAn alternate substantive constraint, suggested by Higginbotham (per-sonal communication) and not explored here, is to require natural languagegrammars to generate non-dense languages.
Let the density of a class of lan-guages be an upper bound (across all languages in the class) on the ratioof grammatical utterances to grammatical nd ungrammatical utterances,in terms of utterance l ngths.
If the density of natural languages was smallor even logarithmic in utterance l ngth, as one might expect, and a decid-able property of the reformulated GPSG's, then undecidability of "= \]~*?nwould no longer eflect on the decidability of whether the GPSG frameworkcharacterized all and only the natural language grammars.
The exact spec-ification of this density constraint is tricky because unit density decides"= IE'?"
, and therefore density measurements cannot be too accurate.Furthermore, ~* and Lic can be buried in other languages, i.e.
concate-nated onto the end of an arbitrary (finite or infinite) language, weakeningthe accuracy and relevance of density measurements.43Hopcroft, J.E., and J.D.
Ullman (1979) Introduction to Au-tomata Theory, Languages, and Computation.
Reading,M.A: Addiso~a- Wesley.Minsky, M. (1967) Computation: Finite and Infinite Machines.Englewood Cliffs, N.J: Prentice-Hall.Nash, D. (1980) "Topics in Warlpiri Grammars," M.I.T.
De-partment of Linguistics and Philosophy Ph.D dissertation,Cambridge.Osherson, D., M. Stob, and S. Weinstein (1984) "Learning The-ory and Natural Language," Cognition 17: 1-28.Pullum, G.K. (1985) "On Two Recent Attempts to Show thatEnglish is Not a CFL," Computational Linguistics 10: 182-186.Shieber, S.M.
(1985) "Evidence Against he Context-Freeness ofNatural Language," Linguistics and Philosophy 8: 333-344.44
