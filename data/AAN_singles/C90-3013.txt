Efficient Disjunctive Unificationfor Bottom-Up ParsingDav id  Car terSRI International Cambridge Research Centre23 Millers Yard, Mill Lane, Cambridge, CB2 1RQ, U.K.dmc@ai.sri.com, dmc@sri.co.ukAbstractThis paper describes two novel techniques which,when applied together, in practice significantly re-duce the time required for unifying disjunctive fea-ture structures.
The first is a safe but fast methodfor discarding irrelevant disjunctions from newly-created structures.
The second reduces the time re-quired to check the consistency of a structure fromexponential to polynomial in the number of disjunc-tions, except in cases that, it will be argued, shouldbe very unusual in practical systems.
The techniquesare implemented in an experimental Japanese anal-yser that uses a large, existing disjunctive Japanesegrammar and lexicon.
Observations of the time be-haviour of this analyser suggest hat a significantspeed gain is achieved.1 Introduct ionThis paper describes the approach taken to the uni-fication of disjunctive feature structures in an exper-imental bottom-up shift-reduce Japanese aaalysercalled Propane, for Prolog Parser using the NadineGrammar.
Nadine (Kogure, 1989; Kogure and Na-gata, 1990), which is inlplemented in Lisp, is theanalysis and translation component of SLoTRANS,the spoken language translation system under de-velopment at ATIt Interpreting Telephony ResearchLaboratories, and its large (12,000 line) grammarand lexicon make extensive use of disjunction.The general problem of unifying two disjunctivefeature structures is non-polynomial in the numberof disjunctions (Kasper, 1987).
That is, barring rev-olutionary developments in the theory of algorithms,the problem is NP-complete, and the time taken topertbrm such a unification can, in general, at best bean exponentially increasing function of the numberof disjunctions, tlowever, in writing large grammarsof natural anguages, it is often convenient to be ableto specify constraints in terms of disjunctions.
Thisseems especially to be the case for Japanese, becauseof its relatively free word order and widespread el-lipsis.
It is therefore important o develop unifica-tion algorithms that can in practice unify disjunctivefeature structures in a reasonable time, despite theinherent NP-completeness of the task.70Propane's unification method embodies two noveltechniques.
Firstly, when a new mother constituentis created by the application of a grammar ruleto daughter constituents during bottom-up arsing,disjunctions not relevant o the mother can safelybe removed, tIowever, deciding on relevance inless titan exponential time is a non-trivial problem.Propane's techniqne is rapid, and resuh.s in the re-moval of enough irrelevant disjunctions that con-stituents higher in a parse tree are not burdenedwith inordinately many of them.
Secondly, Propaneadopts a modification to Kasper's (I987) disjunctiveunification algorithm that "ahnost all the time" (ina sense of that phrase to be discussed), runs in bi-nomial time.Practical results, which will be presented through-out this paper, suggest hat these techniques havethe desired effect of allowing Propane to parse evenquite long sentences in a reasonable time.
Theseresults need, however, to be evaluated in the con-text of ATR's Japanese language processing researchprogramme in general and of Propane's approach toparsing in particular, which will therefore be pre-sented in the next section as a preliminary to themain body of the paper.2 Bot tom-up Pars ing  o f  Japanese'Pile Nadine system is geared towards the processingof Japanese sentences of the type encountered in tele-phone conversations.
At ATR, a substantial corpusof dialogues has been collected by simulating, bothby speech and by keyboard, telephone calls to theorganizing otfice of an international conference.
Attile time the research described here was carried out,Nadine's grammar and lexicon were being developedand tested mainly on a subcorpus of 100 sentencescomprising five of these dialogues.
The results pre-sented in this paper therefore all derive fl'om apply-ing Propane to this same sentence set.
Although thesize of the set is comparatively small, the sentencesin it were not in any sense "made up" to suit eitherthe Nadine or Propane parsers.
Rather, to the de-gree that a simulation can approach reality, they canbe taken as representatives of the kinds of sentencesto be handled in a realistic language processing ap-plication.Japanese has severM characteristics which suggestthat bottom-up arsing~approaehes might be partic-ular~ly fl'uitflfl..
The language is a head-finM, stronglyleft-branchirlg~ one..
This means that modifiers aleways attach to a head on.their ight, and that thereis a~prefet~ence for:attachment.to the nearest suchhead .that obe.ys:the constraints that syntax, seman~tics aud:~pragmatics ,place.. on possible combinations.
"l?his,prefe~rence~is: so, trong, as to suggest a parsingalger:it hm Ltrat~.,firgt- e6nstructs analyses that: obey iGbacl~urac, king: and ,pro&a:oing analyses with~ differentbraeketfn~gs only,if.the:initial !analysisor analyses arei udgeld ~un,aceeptable ,by,some.
outside process.Atgempt;s. traX, e b~en made, for example in Na-dine and \[iy Shi~tzu.i~nd Naito (1989); to use theleft-branchingpref~rence to s lect among alternativeaeti0ns;:in ~:c~art"parser.
However, the approachadopte'd' in  Propane-is to  implement the preferencedire'etly' into' the tnedianish~ Of a shift-reduce parser:In gener~l:, a stiiftxreduce parser uses a ~able ofparsd states and po~sibl~ adti0iis ttiat determine, ateach St'age, whether a shift or a reduction is appro-priate , ?h'd'in tile liit'ter case, what grammar rule~.,'hoU\]d'%~e us d. IIoweVer, When Japanese is formal-ized"6si'ng a'grammar i'n which every rule has ex-actlj, two rightxhiindiside elements - ms is the casein Nadine grammar - the left-br~mching preferencecorresp'6nds ~ t0 astl 'at~gy of reducing the top twocategorfes i ot~ tlie: st:ack ~vhdhever th:ere is a grammarrule ~thaf allows t, l iemt0 b'e ~ 'reduced.
and shiftingonly wti;en this cannot, b'e done.
No table is there-Ibre requiked ~.Nadihe'~ grammar ules include syn-tactic, s6~aniiC-afid;piiaglfiati?
information, so thatProp~i\]g'g:decisi'6n ~o redt/ce or not depends on theaecei~t'liSitf'ty '0fth:e ~'restflt ~at: all three of these lin-guisttd'16Vo.lg1" $/~cti.
'a'test; fakes advantage of themaXtmfim-dmotmg Of~vMlableinformation.
and ap-plies'it ~in ~ fai.rl 2' straightforward' and' efficicnt way.Aif~rni~t~vC lekicdlen~rfes'for Words, and alterna-tive grammar ules that 'can apply to the same pairof daiight6r categories, mean that each position onthe p~,rse'r~s:'stack is in fact occupied no~ by a singleeateg9i' ~ bii~ by a list of categories (each of which,of ebfirse, cbn~aifis a disjunctive structure that mayhave many realiZatiOns): The lengths of these listsdo not grow significantly as parsing progresses, be-cause just as the lexicon and the grammar can in-troduce al\[ernatives, so the application of grammarrules c~tii remove thern/The attempt o reduce eachof m ~qssiblehead' daughters with each of n possi-ble n0ii-hea,d' augliterg typically results in far fewerthan 'm,:)f. md~het ,structures , because not every ruleappli~at\]bn suecoeds.
.
.
.
.
.
.
.O~'c0mplicati0ti  hat arises in parsing writtenJapanese ~s that wor d born}danes a.re not mdmatedexplic~\[ly.
"I~lns fiaea~.ns that the lexicon imposes ala.ttice structure, not a simple sequence of tokens, onthe input, so that, when a shff ope~:atmn ~s neededthe t)o~at o ~l~fft, ffor~,~ s, not necessarily well-definedPropane deals with this situation in the follow-iug~ way.
When shifting, edges of all lengths areplaced onto the stack, and are allowed to partici-pate in any following sequence of reductions.
Beforethe next shift, however, Propane "prunes" the edgesthat constitute the top of the stack, removing allbut the longest.
This corresponds to the assump~lion that there is a preference for longer strings ofcharacters to correspond to lexical items where pos-sible, but that this preference should be overturnedwhen a shorter string, but not a longer one, allowsa reduction with what precedes it.A laa'ge proportion of the lO0-sentence subcorpustargeted by Nadine can be parsed correctly by thissimple approach of always preferring reductions toshifts and longer edges to shorter ones.
Nevertheless,on .many occasions the correct parse will involve atleast one violation of these pre\['erenees.
In general,some kind of intelligent backtracking and/or looka-head is required.
In Propane, only a limited formof \]ookahead exists.
Sometimes, an examination ofthe parts of speech (i.e.
category names only and notfeature values) in the grammar and those of the con-stituents in the stack and of t.he item that would beconsumed in a shift shows the following situation:a reduction is possible, but if it is performed, thenext shift cannot itself be followed by a reduction,whereas if a shift is performed next, two reductionsmay be possible.
That is,, there are two alterna-tives: reduce now and then be forced to shift twice,or shift now and, unless unification failure preventsit, reduce twice.
In such situations, Propane choosesthe second option.
This often allows sentences to beparsed which would not otherwise be, and does notprevent he parsing of any sentences in the subcor-pus.
Because only category names, and not features,are examined, the lookahead procedure is very quick.With this small amount of lookahead included,Propane was able to parse 75 of the 100 sentences inthe subcorpus.
No attempt was made to check thor-oughly the validity of these because of the presentauthor's limited farniliarity with Japanese and theNadine grarnmar; however, they were inspected in-formally, and none seemed to be obviously wrong.Of the 25 sentences for which no parse was found,ten involved an incorrect reduction.
Eight of thesemight: have been prevented had information corre-sponding to Gunji's (1988) treatment of "sentencelevels" for modification been present in the gram-mar.
Twelve sentences failed through incorrectlyfavouring longer edges over shorter; all of these fail-ures involved a lexical entry for the same particlesequence, and could have been prevented either byaltering the treatment of that sequence or by im-:plementing the same kind of lirnited lookahead for:the long-over-short preferel~ee as was clone for the =reduce-over-shift preference.
Of the other three fail-ures, two were sentences on which the Nadine parseralso failed, suggesting that they were outside gram-matical and/or lexical coverage, and one remainedunexplained.
'\]'hus in summary, up to 98% of the71subcorpus could have been assigned plausible anal-yses: by Propane given the improvements just,listed,3 '  P run ing  I r re levant  D is junctsIf"bottom-up arsing is to be effident, it is impe ltan(~liat disjunctions that are irrelevant to.
a newly-:er~eat:'ed  mother Coiisti~uent -~'that is ~ d~sj~nCtionswli~se values never affect the'reaiizat~ons Of the 'con;st:i:thefit, i.el tlle se't of tin'mS i~i its disjunctive' norm~i'form 2_ are:disC~ded WheneVer possib.lel Otherwise,the number of disjunCt'i0ns in a constihlent will beroug,hly.proportional t'6 themumber'~f'\[e~ical:'en{riesandlgralnmar:rules used, to construct, it~ land: ttie.
timeta.l~en, to unify two constituents~wil,1, ncrease at"l~astas;:fasV as' that number Jand, probably ra~herdaster.However, :i't i s  ,nov possibte si~mply' to-dlscard, dis-junctive' constraints t,t~at refer, 0nty' ~o t;he daugtrternod'~s,,' because feature, struct~ures are, grap'hs, not 'tree's~ ~he.sa~me substructure' frequen-tty appears ~;inmore ~ ~,h,a.n oue placei When a grammar ole' haside:n~ifl~d :par:t of,the,motl~er st, ~c'ture~with::p'arg ofa-d~ugh'tie~ one; ~he'n, any disjune~ions ~i~iV~lving~ thela.t,~m,~ m~tst*,be preserved.
Some: means mus~ ~there-fore be ~ou.nd, of.k~eping track of wllat pieces'of struc-tu, re' ateMm~ed?
or in~ other' wovd~s; w.hat pai.fs of!fea-tm~e, pat~hs, lead to  the~ same V~kues.
I~fqhds.qs; done; ~a:di~jn,~6tion that:.enpt:icitlyqn:vOlve~ ;Only daug:h~erconstituents, ~cau,, safely be di~carde'd :: if.. no feature'path ,tJhmugh,' the ~mother ?
l~ads, :to ~ i,t~ oe 't'o ~ ,any: o'fits, ~coinponents.
:'O~ course; t'he set of featu.re paths, t'hat 's'la:are' avalise will' di~ffer fo.v t~he different reM~z~tions ~Com-ple~e ch~ice~ 'of disjut~e~s)of a 'disjtlnetiVe' sti~ueture.It ~is) not even simpty' the Case ttra~ eacI\] disjun:Ctco~atvibut'es~:its own:s'et'.of',cm~iirtion p't~ths; naembe~sof:~.wc~,differ~nt, ,~i;sj:une~ions va~ii,ehu.~e t~V6; p'a:~hs' ~'6h~y~ t~t~,%~a~.~e ya:\[nai ir~ a xe~li~,ati0n i w,hich itt)eyar~ b,qt,t~ lec.t~d.
if'Mmy pl,a~e the (same vgF~i,~bl,ein ,t.go different ,positions Thus .to de~ide inNltibtyw!
!~ti~qr ' a,gi,vea d;isj,~met shg,~tldi,qr, shg~tg ng~.
b,,el gliifi,ca$.de~l, one would need to ~y.<l~ it.hr.ot}~t~ ?yery:~pg~tsi,blg~.~'e~Jiz~.t.i~n Qfthe whole str, u,c~;,ur~, l~'o~.gss,tS~,t/is ,eN?.o~mi~ti~ ig !he nI~mher of.disj~wta ,~nd,tb, er,.~rfoi'e ~pl:a?c~pt~,bl?
This rute%~ut, .~9~I~ p~rp.~gesia ~eptt?e,~gn,t~,tion Si!~l~',: to t, ha, t~,0f,Eis~le!~a~)GDbrre:p ~,@:io~: ;tp-!
g~,~i ,c l~.~t,!
:a ~ .?
: ire.f<r..c m~:,#\] ~o, ,t~, g ,~ff.~?gq4 rb.,y.elglhe, t ,~l~t,emg,t, iy~.,aflo,Bt efl,,i,n ~P l'~t?&g~, aft; qn?,~ h~t,,somethnes, keep;;~ di~j,u~ct,4~l~ ~b, aald,,ba ~hl~w~!to, gj,v,~ io,qo.r~ect,~!e,s~.
!~,bu~ me,.. 'el.~ ~toer~u:mber .th?~,I ,Each, disjunctive, stmct,ure, ~ie~m n~-A < hy~ a; lexi eon~72 3or grammar predicate, therefore, is assigned a setof "path groups!
!, which each correspond either to avariable that: .appears more than once in the originalNadine definition, or to  an explicit identity equa-tion between two:or more positions in the featurestructure: To some, extent,, a path group is anal-ogous to  a set .of Eisele, and:'rD.5rre pointers thatall, p,oint to:the,, same position..
However, the cru-cial,,poil~, is ,.tha~,i;n. Bropane,.,no:record is kept ofw,hieh, position: i~n,,the and/or, tree each path comesfrom.
This aneans,, two things.. ,Firstly when decidingwhether; ~to4hro,~caway,  disju.n~tior~ referring ~o ap articular~gositionSn-a:daugil~er, st uct ure, Propanecan check the,(m4ique,, disjunctiondndependent) seof patti,group, s,  .and ff n,0, p,ossib!e equivalence withpant of.the mo~,~mr, z~r,u?tu~?
is found, the: disjunc-tion c~n safei~ be pruned.
The.
p~'ice we pay for thisdisju,nctifm,i~gtep9 ~ndence is th~,t.the pathgroups cansp~ecify~sp, uriQu~.~,~va\[?nees.
It is possible for twop~hs .t9 be ~so~ia~ted wher*.
;th~y, arise from two~dif,ferent,, inc0mpatible di~jullcJ~s or to remain asso?i-a~ed after the d\[sjunct{s).from which they arose havebeen eliminated through later unificatmn.
Itoweve Lsn)ce path groups ~are used only for demdmg wtmtdigjunct{ons "to d~;eard, and not as part of the fea~- ?
?
% , ; ( ~ : ,  .ture structure representation itself a spurious pathgroup c~a.n only result in some inefficiency and notin an irtco 't', ct. result.This tec ~n'ique is.thus a compromise between onthe pge:!~nd,i ?~r,{-y,jagoBt.,possibly exhaustive com-pg;~i~;u t~p,,ach~ey  a perfect, result,, and on the oth,e.rhand ,not ~!
}5.e~r~ing ar~y:thiag.~t all.
It avoids anyexpone~)!
)i~):Sx.p,~,nsi~n: 0f, disjunctions at the cost,ofso,me sli.gb,!
.tt!~,~)eee, ss, a~?
proge~sir~g at a later sta ~.I~ prg.ct, ic%'t'~;'co}t invoive, qt seen~, quite accepta~,in,t~aat th~ 1.1,~m3'~r, qf di~juac~s in.
,~ constituent dQ~sno,~ iqcre~s.c~,~.~!y ith i~ heigt~t in the.
parse.tre~,:~M~q~her,<~?p~fl~le, nc .,of .keeping.
irrelevant dis,-jt!~,CSS {S~,t,l~i~:if  ~.t; t, bgend, of the parse, the set.of allfull re~\]iz~tions of a disjunctive .feature structure.isexhaustwely epume~ated then ,tl~e same realizationt t  ,~  G( :  ; , ' ,  ' , ' ;  ( ) l  ':' ~ ? '
:  ~',may'be  .encotlntered'.repeatedly However, experbenne suggests that for t!~e current Nadine gra~mnarli t ) l~ ' ,  ,~  ' !~  !.l I )  .
F , ! )
'~  , . "
' ; ,  ahzatmns (~enihcal or .d~fferertt) per parse of'the75 senten,c, es su?cess\[ully.parsed was exactly two,and, on!y one sentence received more than six real-i.z~{idiis .
.
.
.
"he l?runinz ot~e,~tion i fact resulted in, on av-e~e ~ ,~0,~ decre~e ~)a the,numbe~ of &sjunctionst . '
) 'g~")  " ) ) I I~) : l '~  03  , I ( !
f l  , : i  ~ , ~ , " :in.
a new\]yi created tnother constit,uent, over all "re-.I "~  O \[ .l~ IC* I \ [ ' )G  l i  "t'.,.'
' f  " ~. '
"dace"., operations t)erfgrmed in processing ~he cor-"U; ' ?
,e? )
l  "LAI  U I  ~;d I?
fU , ' ;  ~" V U ' " ' :  ' " ' ?
.  "
"pus Probal~lv for t,j.gS reaso$~ the number ofdisjunc-f ) \ [ \ [ l ' t  ~ ' \ [ " ) " f~)  .
(Y t \ [  f ) t~ i t f ;  ) " ,  V "" ~ "~ "" ' : ' .
"tmns fn a new mother constituent.only barely show.
sa positive cQrrelation to the size, in constituents, oft!m su )itr ~-~ l~a~'~t domg~ates ~nd from which tt has~\] ) " )~\ ]G~) \ ] I .~t t  | JOf l~. '
;~ '1 '  .
I ; ~ '  * 'b  " ' DeeD- o f f \ ] i t .
ton  the  o ther  nano ,  \] i  p run ing  were  not~'he correlation between subtree ~ize and  number of dis-jUnctmns, for d~e 406 tree nodes crea, ted, w,%s only just, slg-,?
~q t ?
, , :  , ,  , , .
?
. "
.
"n\]ti~e~fl~ ,)?t ,t~ff6 "'5%' lex,el: 'gfgell' the, mlll hypothems that thepertbrmed, each constituent eottld be expected toadd its quota of irrelevant disjm~cts to ~very ottmrconstituent that dominated it.
l)espite the relativelymodest figure of a 20% decrease over one reduction,the cumulative ffect of such decreases over a wholeparse is theretbre quite significant.In particular, it is worth noting that if', throughpruning, the number of disjunctions in a node doesnot increase with the number of nodes it dominates,{;hen disjunctive unification will have no ef\['ect on thetime complexity of parsing as a flmction of sentencelength.
There is reason to hope that this will oftenbe the case; while disjunction may be widespreadin grammar ules and texical entries, Kasper (1987)observes that in his implementation, "in the anal-ysis of a particular sentence most fieatures have aunique value, and some features are not present at,all.
\Vhen disjunction remains in the description ofa sentence after parsing, it usually represents ambi-guity or an underspecified part of the grammar."
itis tempting to interpolate between the extremes ofsingle words and whole sentences and to speculatethat, with thorough pruning, the number of disjunc-tions in a node should decrease with its height in thetree.4 Pairwise Consistency CheckingWhen a new mother constituent has been creal, edby rule application, it is essential to verify that it.does in fact have at least on~ cousistent realization.Although redundancy is not a major problenl for ouri)urposes, a representation that did not di:-stinguishbet.ween realizable and ~,nrealizable struc*ures (that5:< between success and failure i~l unification) wouldeseriously flawed.
Ilowever.
consistency checking is,in the general case: an N\['-complete problem.Kasper (1987) describes a teelmique which, lbr ev-ery set of ',~ conjoined disjt,p.ctions, checks the:, con-:;~stcncy first of single disjuncls against the delinitepart of the description.
:h<, ixhat of pairs, and so onu I0 to ~>tuples for full cca~sistency.
At each stage l,:,m~y disjunct that does not take part in any consis-t.ent /c'-tuple is eliminated.
2 If all the disjuncts in adisjunction are elhninated, the conjunction of whichI:l~at disjm~ction is a conjuncl is eliminated too; andif the ooter lY lOSt  c.onjm~ct.ion of the whole foaturc.~;tructure is ,qiminat.c-d, unifica.tiorl fails.
This tech-l~ique has the adwmtage that the pruning of nodesa~ stage/e will make stage /c' + 1 more eflicieJqt.
Nev-ertheless, since n can sometimes be quite large, thisexhaustive process be time~consunfiug, and indeedin the limit will take exponential time.Propane's attempted solution to this problem isbased on the hypothesis that the vast majority oflarge unrealiza.t~le di@mctive feature struct.ures thati:~mnber of dis junct ions is independcnl  o\[" subCree size.2 Smnewha.t confusingly, l (aspee uses the term "n-wise con-sb~tency" for I.he ched?ing of 'n q-- l - luples of (tis.itmcts.
\Veavoid |,his usage.will be created in the use o fa  practical natllt:al an-guage grannnar will be not o~tly unrca.lizable, \])utalso "pairwise ~mrealizable", in the sense that theywill Nil at or betb,'e the second stage of l(asper'sconsistency check, for k = 2.The reasotl we can expect most unrealizable struc-tures also to be pairwise unrealizable is that mostcomn rely, unrealizability will result from the con-tents of two nodes in the tree being incompatible,through assigning non-unifiable vah~es to the samepositiol~ in a feature structure.
Although there canclearly be exceptions, the hypothesis is that it isfairly unlikely, in a large disjunctive structure (whichis the case where exponen|.iality would be harmful)that there would be a non-pairwise inconsistency butno pairwise inconsistency.Following this hypothesis, when the Propane uni-tier has created a structure, it checks a~d prunes itfirst for pairwise consistency, and if this succeeds,risks trying for a single full realization (one choiceat each disjunct) straight away.
Thus it differs fromKasper's algorithm in two ways: no exhaustive leowise checks are made for k > 2. and when a flfllcheck is made, only one success is required, avoid-ing an exhaustive search through all combinations ofdisjuncts, a Of course, if the structure is pairwise re-alizable but not flflly realizable, the search for a sin-gle success will take exponential time; but., accord-lug to the hypothesis, such occurrences, for struc-ture.s with enough disjuncts for exponential time cobe unacceptably long, should be extremely rare.The effectiveness of this strategy can only bejudged by' observing its behaviour in practice.
Infact, 7~o instances were observed of the search for aflfll realizabition taking an inordinately long time ar-Iel' pairwise consistency checking and pruning havesucceeded.
Thus it can be tentatively concludedthat, wilh the current version of the Nadine gram-mar and with bottom-up parsing, the risk is worthtaking: that is, a full realization is virtually alwayspossible, in reasonable ~irne, tbr a pairwise consis-tent structure.
Maxwell and Kaplan's (1989) beliefthat %.. \[simple inconsistencies\] become less pre-dominant as grarnmars  are extended to cover moreand more linguistic phenomena" does not thereforeal ?ear to) be true of the Nadine grammar, in spite ofits coverage of a wide range of phenomena t manylinguisr, ie levels; or if it is true, it.
does not affect thesuccess of Propar~e's strategy'.
That is.
even if simpleineGnsistencies art less predominant, they are stillcommon enough that a large structure that is unre-alizable because of complex inconsistencies will also3According to M\[axwell and Kap lan (1989), "in practice,Kasper  noted that.
.
.once bad singleton disjuncts have beenel iminated, il is more efficient to switch to DNF \[disjunctivenormal form\] (hart to compnie  at\[ of tim higher degrees ofconsistency."
This variation of the algor i thm given in Kasper(1987) is closer t.o Propane's  strategy, b~H.
the expansion iofull \[)N\[," is it.self in general an exponeatia\] pt'ocess and will.when many disjunctions remain, l.,e far more expensive Ihanlooking for a single realizatiola.473be unrealizable because of simple ones.Of course, this does not alter the fact that ingeneral, i.e.
for an arbitrary input and for an ar-bitrary grammar written in the Nadine formalism,Propane's unification algorithm, like Kasper's, is ex-ponential in behaviour.
In the limit, an exponentialterm in the formula for the time behaviour of an al-gorithm will dominate, however small its associatedconstant factor.Unlike Nadine's unifier, Propane's strategy hasthe property that when a structure survives consis-tency checking, not every member of every disjunctin it can necessarily participate in a full realization;that is, ideally, it should have been pruned.
How-ever, this property is only undesirable to the extentthat, at the end of the parse, ii.
makes any exhaus-tive search for flfll realizations inefficient hrough ex-cessive backtracking.
Again, in practice, this seemsnot to be a problem; exhaustive full realizat~ion isextremely quick compared to parsing.An analysis of Propane's processing of its corpusreveals quite wide variation in the relationship be-tween the total number of disjunctions in a ruleapplication (in both daughters and the rule) andthe time taken to perform the unification.
How-ever, although, unsurprisingly, unification time in-creases with the number of (|isjunctions, it.
appearsfrom inspection to be perhaps linear with a smallbinomiM component, and not exponential.
This is,in fact, what an analysis of the algorithm predicts.The linear component derives from the check of eachdisjunct sepa.rately against the definite part., whilethe parabolic component derives from the pairwisecheck.
The relatively small size of the latter mayimply t.hat a majority of disjuncts are eliminatedduring the first phase, so the second has less workto do.5 Uni f i ca t ion  and  Pars ing  T imesThe al.~sence of any known exponential process(other than the final phase of unification, which ap-pears never to take very long) in Propane's parsingand unification algorithms gives grounds for expect-ing that in practice, the time taken to parse a. sen-teuce of 7~ lexical items should be polynomial in n.Because of the pruning of irrelevant disjuhctions, thevalue of n should be fairly small, leading to a signif-icant speed advantage over systems like the Nadineparser that do not, prune disjunctions and that usethe full (exponential) version of Kasper's algorithm.The results of a comparison between Nadine's andPropane's parsing times suggest hat such an advan-tage does exist.
However, the results are not sufl'i-ciently detailed to allow the verification of Propane'sexact time behaviour.As senCence lengt.h grows, Propane.
tends to per-form progressively faster in a stntistically significantway.
4 In particular, Nadiue's attempts to parse two'tI"or each of (:lie 31 sell.i, ences containing more than onefairly long sentences (12 and 18 lexical items respec-tively) in the corpus had to be aborted because of thetime they took, but both these sentences received aparse from Propane in ten to (;hirteeu minutes.
HadNadine not been aborted in these cases, two moredata points would be available that would increasethe significance further.The progressive speed advantage of Propane maybe dug partly to the fact that, a.s discussed above,it; follows only the single sequence of shifts and re-ductions specified by the algorithm described in sec-tion 2, and does not explore alternative bracketings.IIowever, Nadine is also, through numerical scoting, sensitive to the left branching preference, whichguides it to explore, and presumably to find, pre-ferred parses first; and the Nadine times used in 1hecomparison were those taken to find the first parse,not all parses.Another difference between the two parsers is thaiNadine, being chart-based, stores the edges it cre-ates so that later backtracking need not cause workto be rel)eated.
Propane does not backtrack in thisway.
However, because o\[" a mundane practical im-itation in the Prolog implementation used, Propaneis also forced to store (assert in the database) everyconstituent it.
creates, advancing the.
parse by suc-cessive storing, lhiling and backtracking rather thanby the simple recursion that would otherwise be per-formed.
The time taken to store constituents in factincreases faster than that used by or.her aspects ofprocessing, and :\['or the longest sentences parsed rep-resents 70 to 80 per cent of the total time.
It mightbe, therefor< tha.t if storage time were ignored forboth parsv,>, Propane's peed advantage would beeveI1 more  apparent.Such vague remarks are admittedly unsatis~qngand should, given time, be firmed up by the acqui-sition and analysis of more data., and by separateevaluations of the parsing and unification time be-haviours.
The latter would im~olve comparing thetwo pa.rsers framing with the same unifier and thenthe two unifiers rmming  under the same parsing al-gorithm.
Nevertheless, there are, as already men-tioned, a priori grounds for ex-pect.ing Propane's uni-tier to have an increasingly marked advantage, andthe data presented here are fully consistent with thatexpectation, showing as they do a statistically sig-nificant trend.A formal complexity analysis of a botton>upparser using the techniques described in this paperwould only be of limited interest.
Complexity anal-yses deal with worst cases, and in those terms, theessential hypothesis th at p airwise consistency check-ing will ':ahnost all the time" be suNcient is mean-ingless.
Likewise, to claim that disjmlction pruninglexicM i tem and succes~f,dly parsed t35' both  systems,  the cor-relation was mea.sured bt~tween the nmnber  of lexieM items inthe seatence and tile \ ]ogar i thm of the ratio of parsing times.
Itwas easily statist ical ly siglfificant at the 5% level, and its signindicated that the correlation is in the direction of Propaneperforming bett.er for longer sentences.574greatly reduces the number of disjunctions it, highertree nodes in the case of Propane and the Nadinegrammar, is to say nothing about its effectiveness inthe worst ease.
One could easily write a grammarin which every disjunction fi'om daughter nodes wasneeded by mothers, so that nothing would be prunedat all.
And thirdly, it is not claimed that the left-branching preference in aNpanese is anything morethan a preference, albeit quite a strong one.However, because the grammar, lexicon and sen-tence set dealt with here are in no sense toy oneswritten to test unification techniques but are thetools of a major effort to process natural languageus it ~ actually used, it is of interest to anal-yse Propane's overall time behaviour under theassumption that the relationships inferred a.bovethrough observation and statistical rnethods arevalid) There seems to be no a priori reason to doubtthat the same behaviour could be achieved by' othersystem,~ or.
for other languages (except, of course,that the left-branching characteristic is language-dependent).Thus in Propane, the number of unifications at-tempted (luring the successful parsing of a sentenceof length N is O(N) (this happy situation is, ofcourse, bought at the price of failure when the pref-erence heuristics fail).
Let us a.ssnme a strongly left-branching structure, which, being maximally unbal-anced, is the worst case.
Then the number k of nodesdominated by each new mother node the parser (at-tempts to) create will be uniformly distributed be-tween 0 and N. From observation, it seems thatthe number of disjunctions d involved in a unifica-tion that.
dominates k nodes will be proportional tok (This is the pessimistic option; as argued earlier,there are grounds for hoping that, with suNeientpruning, d will not increase with k at all, so thatdisjunctive unification time will made no contribu-tion to parsing time as a flmction of N).
Unificationtime for d disjunctions, under the pairwise consis-tency hypothesis, appears to be proportional to d 2.Compositional semantic interpretation will probablymean in the limit that the size of the non-disjunctivepart of a constituent will also be proportional to thenumber of constituents dominated.
Unification timehere is order n lo,q n in the sizes n of the input struc-tures (Kasper, 1987).
Thus a node dominating kothers will take order kalog k time to create.
Sum-ming over k fi'om 0 to N gives an order N41o.qNresult.
More generally, a parsing algorithm that onatomic categories h~s order f (N)  should, with dis-junction, have order f(N)N21ogN if the distributionof k over nodes created is also uniform.In conclusion, the assessnrents of the various as-pects of Propane's time behaviour are all consistentwith, and in some eases provide good evidence for,5StatisticM correlation tests, of course, cannot tell us whatrelationship, e.g.
linear or exponential, holds between twovariables; they can only tell us that sore  e relationship appearsto exist.
~J'he time anMysis can therefore only be tentative.the claim that the two novel techniques describedhere can signifieantly enhance the speed with whichsentences can be parsed using a large grammar con-taining disjunctions.
As long us the essential hypoth-esis about pairwise consistency holds \[br the partic-ular grammar and the sentences it will in practiceencounter, polynomial time behaviour can bc ex-pected, as compared to an exponential time for otherapproaches involving disjunctive unification.AcknowledgementsThis research was carried out while I was a visitingresearcher at A'FR Interpreting Telephony Hesearchl,aboratories, Kyoto, Japan.
I am grateful t.o DrAkira Knrematsu, Mr Kiyoshi Kogure and othersat ATR for thought-provoking discussions and tbrproviding a very pleasant research environment.ReferencesEisele, A., and DSrre, J.
(1988) "Unification of l)i:-,-junctive Feature Descriptions", Proceed~w/s of t/~e26th Annual Meeling of the As.~ociatio~ for Com-pulalional Lin.guistics.Gunji, T. (1989) "Synta.ctic Sketch 88: Japanese".In: Syntax: an International I andbook of ('or~tt:7~-porary Research, de Gruyter.Kasper, R. (\]987) '% Unification Method for Dis-junctive Feature Desc:riptions', Pr'oceedings o/ the2515 Annual Meeting of the AssocialioT~ for Com-putational Linguistics.Kogure, K. (1989) "Parsing Japanese Spoken Sen-tences based on HPSG", Proceedings of lhc: Interna-tional Workshop on Parsing9 Technologies, CarnegieMellon University, 132-\]41.Kogure, K., and Nagata, M. (1.990) "Parsing Spol.>nJapanese Sentences Bused on I-IPSG", Procccdin(.}s.
o/C'oling- 90.Maxwell, J.T., and Kaplan, R. (1989) "An Overviewof Disjunctive Constraint Satisfaction", Proccedi~gsof lhc International Workshop on Par~sing Tc.ch~zolo-ales, Carnegie Mellon University, 18-27.Shimazu, A., and Naito, S. (1989) "t'refi~rence R ad-ing Models of Japanese Sentences", Gengo Short loCommunication Kenky?ikai, 89:114 (in Japanese).675
