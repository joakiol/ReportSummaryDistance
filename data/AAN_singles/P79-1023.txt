EUFID: A FRIENDLY AND FLEXIBLE FRONT-END FOR DATA MANAGEMENT SYSTEMSMarjorie TempletonSystem Development Corporation, Santa Monica, CA.EUFID is a natural language frontend for data managementsystems.
It is modular and table driven so that it canbe interfaced to different applications and data manage-ment systems.
It allows a user to query his data basein natural English, including sloppy syntax and mis-spellings.
The tables contain a data management systemview of the data base, a semantic/syntactic view of theapplication, and a mapping from the second to the first.We are entering a new era in data base access.
Computersand terminals have come down in price while salarieshave risen.
We can no longer make users spend a week inclass to learn how to get at their data in a data base.Access to the data base must be easy, but also secure.In some aspects, ease and security go together because,when we move the user away from the physical character-istics of the data base, we also make it easier toscreen access.EUFID is a system that makes data base access easy foran untrained user, by accepting questions ?n naturalEnglish.
It can be used by anyone after a few minutesof coaching.
If the user gets stuck, he can ask EUFIDfor help.
EUFID is a friendly but firm interface whichincludes security features.
If the user goes too farin his questions and asks about areas outside of hisauthorized data base, EUFID will politely misunderstandthe question and quietly log the security violation.One beauty of EUFID is its flexibility.
It is writtenin FORTRAN for a PDP-II/70.
With minor modificationsit could run on other minl-computers or on a large com-puter.
It is completely table driven so ~hat it canhandle different data bases, different views of the samedata base, or the same view of a restructured data base.It can be interfaced with various data managementsystems--currently it can access a relational data basevia INGRES or a network data base via WWDMS.EUFID is an outgrowth of the SDC work on a conceptualprocessor which was started in 1973.
1 It is now demon-strable with a wide range of sentences questioning twodata bases.
It is still a growing system with newpower being added.In the following sections we will explore the featuresthat make EUFID so flexible and easy to use.
The mainfeatures are :?
natural English?
help?
semantic tables?
data base tabless mapping tabless intermediate language?
securityi.
NATURAL ENGLISHEUFID has a dictionary containing the words that theusers may use when querying the data base.
Thedictionary describes how words relate to each other andto the data base.
Unlike some other natural languagesystems, EUFID has the words in the sentence related tofields in the data base by the time the sentence is"understood."
More will be said about this process inthe section on semantic tables.EUFID is forgiving of spelling and grammar errors.
Ifi~ does not have a word in the dlctionary t but has aword that is close in spelling, it will ask the user ifa substitution can be made.
It also can "understand"a sentence even when all words are not present or ~omewords are not grammatically correct.
For example, anyof these queries are acceptable:"What companies ship goods?""Companies?"
(list all companies)"What company shop goods?
"("shop" will be corrected to "ship".
The plural"companies" will be assumed)Users are free to structure their input in any way thatis natural to them as long as the subject matter coverswhat is in the data base.
EUFID would interpret thesequestions in the same way:"Center shipped heavy freight to what warehouses in1976?
""What warehouses did Center ship heavy freight toin 1976?
"Each user may define personal synonyms if tile vocabularyin the dictionary is not rich enough for him.
Forexample, for efficiency a user might prefer to use "wh"for "warehouse" and "co" for "company".
Another user ofthe same data base might define "co" for "count".2.
HELPBasically, EUFID has only four commands.
These are"help", "synonym" (to define a synonym), "comment" (tocriticize EUFID), or "quit".
These four commands aredescribed in the help module as well as the generalguidelines for questions.If the user hits an error while using EUFID, he wlllreceive a sentence or two at his terminal which describesthe problem.
In some cases he will be asked for clari-fication or a new question as shown in these exchanges.User: "What are the names of female secretaries'children?
"EUFID: "Do you mean(i) female secretaries or(2) female children?
"User: "2"orUser: "What is the salary of the accountingdepar tment?
"EUFID: '~e are unable to understand your questionbecause "salary of department" is notmeaningful.
Please restate your question.
"If the description is not enough to clarify the problem,the user can ask for help.
First, HELP will give adeeper description of the problem.
If that is notenough, the user can ask for additional information whichmay include a llst of valid questions.3.
TABLESEUFID is application and data base independent.
Thlsindependence is achieved by having three sets of tables--the semantic dictionary tables, the data base tables,and the mapping tables which map from the semantic viewto the data base.
Conceivably, a single semantic viewcould map to two data bases that contain the same databut are accessed by different data management systems.913.1 SEMANTIC TABLESThe semantic view is defined by an application expertworking with a EUFID expert.
Together the 7 determine theways chat a user mlghc want to talk about the data.
Fromthis, a llsC of words is developed and the basic sentencestructures are defined.
Words are classed as:entitles (e.g., company)events (e.g., send)funcClons (after 1975)parrs of a phrase or idiom (map coordlnaCes)connectors (co)system words (the)anaphores (ic)two or more of the above (ship an enClCy plusship an event)An entity corresponds approximately co a noun and anevent co a verb.
Connectors are preposlClons which aredropped after the sentence is parsed.
System words areconjunctions, auxiliaries, and decermlners whloh partici-pate in determining meaning buc do noC relate co database fields.
Anaphores are words chac refer Co previouswords and are replaced by them while parsln 8.
Basicallythen, the only words chat relate co the items in thedata base are entities, events, and funcclons.Entities and events are defined using a case structurerepresentation which combines synCacclc and sm---clcinformation.
Lexlcal items which may co-occur with anentity to form noun phrases, or wlch a verb co formverb phrases, fill cases on the enClCy or event.
Casesare disclngulshed by the sac of possible fillers, thepossible connectors, and the syncactlc pos i t ion  of thecase relaclve co the antic 7 or event.
A case may bespecified as opclonal or obllgacory.A sense of an entlCy or event is defined by the sac ofcases which form a dlsCincC noun phrase or verb phrasetype.
Three senses of the word "ship" are illustratedin  F igure  i.~IPPING CC~ANY I IS~O~.
aT"SlIPI- - OJL/Ga~aY } 08~lcaT0aT ~,m,  I '~-  " , "  I "~.
0~3/~m, AFro.mI~rrCASK F C~Jl G CASE CIN =-Figure I.The flrsc sense of "ship" accounts for acClve voiceverb phrases wlch the pattern "Companies ship goodsCO companies in year.
*'Examples are: ..Whac companies ship to Ajax?In 1976, who shipped light freight co Colonial?This sense of "sh ip"  has ~wo obligatory cases, A and C,and ~ao opt iona l  cases  B and H. The face chac the"year"  case can be moved opclonally wichln the phraseis noC represented within the case structure, buc isrecoEnlzed by the Analyzer, which assigns a structureCo the phrase.The second sense of "ship" accounts for the passive con-8CrucClon of the type "Goods are shipped Co company bycompany.
"Examples are:Was llghc frelghc shipped Co Ajax in 19787What goods were sh ipped Co Ajax by Colonial?By whaC companies in 1975 was hesw/ freightshipped Co Colonial?Case O has the  same f i l l e r  as  case  B, but  p recedes"sh ip"  and i s  ob l igatory .
Case g has the  same f i l l e ras case A, buc follows "sh ip" ,  has a dlfferenc con-nector, and is optional.
That is, sense i of "ship"is daflned as the associaclon of "ship" with casesA,B,C.
Sense 2 is the associ&clon of "ship" with casesC,D,E.
Sense 3 of "ship" describes the nominallzedform "shlpmenc" and expliclCly captures the informaclonChac shlpmencs involve goods and reflect transacClonsbetween companies.An *~-mple is:'~taC is the cransacclon number for the shlpmancof bolts from Colonial co Ajax?
"3.2 DATA BASE TABLESThe data  base  cab les  descr ibe  the  data  base  as v iewedby the  data  management system.
S ince a l l  dace mamags-menC syscemn dea l  w i th  dace iCmma organ ized  in to  groupschac are  re la ted  through l inks ,  i c  i s  poss ib le  co havea co~n cab le  format  fo r  any dace management system.The dace bus  cab les  ac tua l ly  cons is t  of two cab les .The CAN tab le  conta ins  in fo rmat ion  about  groups anddace iC ~a.
A group (a l so  ca l led  ent i ty  or  record  inocher systems) is Idenclfled by the group name.
Adare Icam in che CAN cab le  consists of Che data  ices"mine, che grOUp CO which IC be longs ,  a uniC code,  anoutput Idenclflar, and some field type informaClon.Notably missing is anything about the byte wichln therecord  or the  number of bytes .
~UFID accesses  the dacebase  through s data  management sysCom.
There fore ,  thedace can be reorgan ized  ~rLChou?
chang ing  the EUFIDcab les  aa long as the  dace iCeml re ta in  the i r  names andcha i r  g roup ings .The second data  beam cab le  i s  the  P~L cab le  which conta insan encz 7 fo r  each group w i th  i t s  l inks  co ocher  g roups .For nscwork dace bases ,  cha l ink  i s  the  cha in  name fo rthe  pr imary  cha in  chac connects  master  and dera i lrecords .
For re la t iona l  dace bases ,  every  dace i tempa i r  in  the two groups chac can have the same va lue  i sa potent ia l  l i nk .3.3 MAPPING TABLESThe mapping cab lu  ce l l  the  program how to gec from thesemant ic  nods,  as found in  the  semant ic  d ic t ionary ,  cothe  dace base  f ie ld  names.
Each ent ry  in  the  mappingtab le  has a node name fo l lowed by two par ts .
Thef i r s t  par r  descr ibes  the pacCsrn of cases  and the i rf i l l e rs  fo r  chac node name.
The second par r  i s  ca l leda product ion  and i c  g ives  the  mapping fo r  each casef i l l e r .
A node may map co a node h igher  in  the  sentencet ree  be fore  iC maps co a dace bus  i tem.
For exa lp l s ,"company name" in  the  quest ion  '~at  companies a relocacnd in  Los Ange les?"
may map to a group conta in ingge~sra l  company ~n~ormacion.
However, "company name"in  the quest ion  "W~'mt companies sh ip  Co Los Ange les?
"may map to a group concain~ng sh ipp ing  company in fo rmat ion .92Therefore, it is necessary to first map "company name"up to a higher node that determines the meaning.
At thepoint where a unique node is determined, the mapping ismade to a data item name via the CAN table.
This dataitem name is used in the generatlon of the query to thedata management system.4.
INTERMEDIATE LANGUAGEEUFID is adaptable to most data management systems with-out changes to the central modules.
This is accomplishedby using an intermediate language (IL).
The main partsof EUFID analyze the question, map it to data items, andthen express the query in a standard language (IL).
Atranslator is written for each data management system inorder to rephrase the IL query into the language of thedata management system.
This is an extra step, but itgreatly enhances EUFID's flexibility and portability.The intermediate language looks like a relational re-trieval language.
Translating it into QUEL is straight-forward, but translating It to a procedural languagesuch as WWDMS is very difficult.
The example below showsa question with its QUEL and WWDMS equivalent.QUESTION: WHAT ARE THE NAMES AND ADDRESSES OF THEEXECUTIVE SECRETARIES IN R&D?INGRES IL:RETRIEVE \[JOB.EHFLOYEE,JOB.ADDRESS\]WHERE (DIV.NAHE = "R&D")AND (DIV.JOB = JOB.NAHE)AND (JOB.NAME = "SECRETARY")AND (JOB.CLASS = "EXECUTIVE")QUEL:range of div is dlvrange of Job is Jobre t r ieve  (Job.employee,Job.address)where dlv.name = "R&D")and dlv.
Job= Job.nameand Job.name = "secretary"and Job.class = "executive"W ~  IL:RETRIEVE \[JOB.EMPLOYEE,JOB.ADDRESS\]WHERE (DIV.DNAME - "R&D")AND (DIV.DIV JOB CH - JOB.DIV_JOBCH)AND (JOB.JNAME - "SECRETARY")AND (JOB.CLASS - "EXECUTIVE")WW'DMS QUERY:INVOKE 'WWDMS/PERSONNEL/ADF'REPORT EUFID-1 ON FILE 'USER/PASSWD/EUFID'FOR TTYQI.
LINE "EMPLOYEE NAME =",EMPLOYEEQ2.
LINE "ADDRESS "",ADDRESSE l .
RETRIEVE E-DIVWHERE DNAME " "R&D"WHEN R1.R2.
RETRIEVE E-JOBWHERE JNANE - "SECRETARY"AND CLASS - "EXECUTIVE"WHEN R2PRINT qlPRINT Q2END5.
SECURITYEUFID protects  the data base  by  removin B the user fromdirect access to  the data management system and database.
At the most general level, EUFID will only allowusers to ask questions within the semantics that aredefined and stored in the dictionary.
Some data itemsor views of the data could be omitted from the dlctlonazy.At a more specific level, EUFID controls access througha user profile table.
Before a user can use EUFID, a93system person must define the user profile.
This cablestates which applications or subsets of applications areavailable to the user.
One user may be allowed Co queryeverything that is covered by the semantic dictionary.Another user may be restricted in his access.The profile table is built by a concept graph editor.When a new login id is established for EUFID, the systemperson gives the application name of each applicationthat the user may access.
Associated with an applicatlonname is a set of file names of the tables for the appli-cation.
If access is to be restricted, a copy of theCAN and mapping function tables is made.
The copies arechanEed to delete the data items which the user is notto know about.
The names of the restricted tables arethen stored in the user's profile record.
EUFID willstill be able to find the words that are used co talkabout the data item, but when EUFID maps the word to aremoved data item it responds to the user as though thesentence could not be understood.6.
CONCLUSIONEUFID is a system that makes data base access easy anddirect for an end user so that he does not need to  gothrough a specialist or learn a language to query his owndata base, It is modular and table driven so that it canbe interfaced with different data management systems anddifferent applications.
It is written in hlgh-leveltransportable languages to run on a small computer formaximum transportability.
The case grammar that it usesallows flexibility in sentence syntax, ungrammaticalsyntaxj and fast, accurate parsing.If the reader wants more detail he is referred to  refer-ences 2-4.7.
RE F~E~CES1.
Burger, J., Leal, A., and Shoshanl, A.
"SemanticBased Parsing and a Natural-Language Interface forInteractive Data Management," AJCL Microfiche 32,1975, 58-71.2.
Burger, John F. "Data Base Semantics in the EUFIDSystem," presented at the Second Berkeley Workshopon Distributed Data Management and Computer Networks,May 25-27 1977, Berkeley, CA.3.
Walner, J. L. "Deriving Data Base Specificationsfrom User Queries," presented at the Second BerkeleyWorkshop on Distributed Data Management and ComputerNet-works, May 25-27, 1977, Berkeley, CA.4.
Kameny, I., Welner, J., Crilley, M., Burger, J.,Gates, R., and Brill, D. "EUFID: The End UserFriendly Interface to Data Management Systems," SDC,September 1978.
