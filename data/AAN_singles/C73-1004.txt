FRANK G. PAGANCONSTRUCTIBLE REPRESENTATIONSFOR TWO SEMANTIC RELATIONS1.
INTRODUCTIONThis paper is concerned with semantic (or lexical) structures ofthe type used in programs which involve natural language processing,such as question-answering systems.
These structures, which generallytake the form of graphs representing semantic relations defined onword senses, must satisfy some rather self-evident requirements re-lating to their linguistic significance and adequacy and to their suita-bility for computational implementation.
In addition, if the lexicalsubsets in question are to be nontrivial in size, the structures must beconstructible in some systematic, onsistent way, preferably with theaid of a computer.
The structures which have been used in existingexperim.ental systems, such as those reported in M. R. QUILLIAN (1969)and K. M. SCaWARCZ, J. F. BtraGrR, K. F. SIMMONS (1970), have gene-rally been very restricted, and it has been argued (S. Y. S~D~OW,1972) that it is their lack of constructibility which has precluded thepossibility of extending them.The aim of this paper is to describe two examples of the use ofconstructibility as a design criterion for semantic structures.
The se-mantic relations of hyponymy and compatibility are introduced in thefollowing section, and suitable representations for them are developedin sections 3 and 4, respectively.
Throughout the discussion, the con--structibility of a representation is to be interpreted as its amenabilityto the use of a computational discovery algorithm which would buildthe structure and have the properties of semi-automatic operation,simple input data, efficiency in the quantity of input, consistency main-tenance, and monotonic refinement of the growing structure.
Themeaning of this terminology will be made more clear in the courseof the discussion.30 FRANK G. PAGANIt is far beyond the scope of the paper tO consider the developmentand implementation f practical programs for building large semanticstructures.
It should also be emphasized that the aim is not the de-velopment of linguistic theories or the presentation f particular lexicalstructures.
While the linguistic positions adopted in the followingsection are consistent with much of the existing literature, they areprimarily intended to provide a sample context in which the role ofconstructibility may be illustrated.2.
HYPONYMY AND COMPATIBILITYThe term hyponymy has been used by J. LYoNs (1968) to denotethe common but somewhat vague notion of "semantic inclusion"A hyponymy p of a word sense q is a word sense whose meaning is a"subset " of the meaning of q; for example, scarlet is a hyponym ofred, and tulip is a hyponym of flower.
Intuitively, ifp is a hyponym ofq, then it makes sense to say that p is a kind of q. Synonymy of wordsenses may be defined in terms of hyponymy: p is a synonym of qif and only if p is a hyponym of q and q is a hyponym of p. Thehyponymy relation is evidently reflexive and transitive.The importance of hyponymy has been generally recognized byworkers in computational semantics (see, for example, M. 1~.
QuII.-I.IAN, 1969, and P,.. M. SCHWARCZ, J. F. BrinGeR, 1~.
F. SIMMONS, 1970).Quillian's ystem (M. R. QUILI.IAN, 1969) is a generalization f a schemefor representing lexical definitions of word senses in terms of supersetsand properties, where the superset relation is simply the inverse of hypo-nymy.
When the superset of some sense is modified by the relevantproperties, an expression is obtained which is a definition of paraphraseof the given sense.
As a highly simplified example, suppose that thesuperset of bachelor is man, with the corresponding property unmar-ried, and that the superset of youth is also man, with the correspondingproperty oung.
A simple calculation would then mark the expressionszoung bachelor and unmarried youth as paraphrases, since both are equiv-alent to the expression young unmarried man.
Although I have notmentioned many of the details and problems involved (such as thepossible forms properties may take), it seems clear that a representationfor hyponymy is necessary for such important semantic processes astransformation between equivalent linguistic expressions.CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 31Turning to the compatibility relation, the simplest case involvescombinations of adjective senses and noun senses to form expressionswhich may be either meaningful (hungry man) or meaningless (hungrytheory).
The two senses may be said to be compatible if their combina-tion is meaningful.
It turns out that little can be done with regard tothe representation of this relation unless its definition is extended asfollows: two adjective senses are compatible if and only if there arenoun senses compatible with both.
It is useful here to think of nounsenses as "atoms " or "constants " and adjective senses as "predicates "which take noun senses as arguments (this is similar to Fillmore'sapproach \[C.J.
FII.LMOI~, 1969\]).
The second definition of  compatibilitythen involves the intersections of the domains of predicates.
This re-lation, which is reflexive and symmetric, will be the more importantas far as constructibility is concerned.?
As for the use of compatibility, on the other hand, the first defini-tion is the important one.
First, in a linguistic or computational systeminvolving the generation or analysis of sentences, it would be usefulin excluding meaningless constructions of word senses, and it can beargued that this capability is a fundamental one for any such system.Secondly, the relation provides the ability to disambiguate words in thecontext of their combination with other words.
For example, supposethat hard-has two senses written as hard (difficult) and hard (not soft),and that ball has the two senses ball (round object) and ball (social event).Suppose further that hard (di~cult) is compatible with question andincompatible with both senses of ball, and that hard (not soft) is incom-patible with question and ball (social event) but compatible with ball(round object).
Then, in the expression?
hard question, hard must meanhard (diffcult).
Similarly, in the expression hard ball, hard must meanhard (not soft) and ball must mean ball (round object), since the otherthree combinations are all incompatible.3.
STRUCTURES.
FOR HYPONYMYTo illustrate some classes of structures for the hyponymy relation,a hypothetical set of seven word senses a, b .
.
.
.
, g will be used.
Theirhyponymy relationships are given in Fig.
1 in the form of a matrix:a sense x is a hyponym of a sense y if and only if there is a 1 in the po-sition whose row corresponds to x and whose column correspondsto y.32 FRANK G. PAGANa b c d e f g1 0 1 1 1 1 10 1 1 1 1 0 00 0 1 1 1 0 00 0 0 1 1 0 00 0 0 0 1 0 00 0 0 1 1 1 10 0 0 1 1 1 1F ig .
1.
Hyponymy matrix.The graph structure which directly corresponds to this matrix isgiven in Fig.
2.eb4 ?ct Io.F ig .
2.
F-graph.In an F-graph such as this, each node corresponds to a sense, andthe interpretation of the structure is that x is a hyponym of y if andonly if there is an arc from x's node to y's node (stricdy speaking,since hyponymy is reflexive, there should be a loop at each node,but these may be omitted without loss of information).CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 33An obvious simplification is otbained by making use of the transi-tivity of hyp0nymy in the interpretation of the structure.
In a G-graph(Fig.
3), then, the nodes are unchanged from the corresponding F-graph, but now x is a hyponym of/, if and only if there is a path fromx's node to /s  node.eI~ G ~ gFig.
3.
G-graph.An F-graph is the transitive closure of its corresponding G-graph,and the G-graph has no "redundant " arcs; i.e., arcs from x to y andfrom y to z imply that there is no arc from x to z.
This, together withthe fact that synonyms are represented by separate nodes, implies thatG-graphs are not necessarily unique; for example, the G-graph in Fig.
4is equivalent to that in Fig.
3.
@I -- fFig.
4.
An equivalent G-graph.34 FRANK G. PAGANThis non-uniqueness may be avoided by transforming the G-graphinto an H-graph, in which synonyms are associated with the same nodebut the interpretation is otherwise unchanged.
All H-graphs are acydic,since all the senses on a cycle would have identical hyponymy relation-ships with all other senses, i.e., they would be synonyms.
Thus thenodes form a partially ordered set, and/-/-graphs may be representedby lattice-like Hasse diagrams (D. E. P,.OTr~RrORD, 1965) where eachedge is assumed to be directed towards the top of the page, althoughthe arrows are not explicitly present (Fig.
5).eb af ,gFig.
5.
H-graph.It may easily be seen that H-graphs are in one-to-one correspond-ence with the set of all possible hyponymy matrices (transitive, square,Boolean matrices).
They are thus a fully general class of structures, andthe question arises as to whether the set of linguistically significantstructures i actually more restrictive than this.
Judging from the ex-sting literature in pure and applied linguistics, there would seem to bea consensus that hyponymy graphs should in fact be tree-structured.This is apparently the case in Quillian's system (M. P~.
QmLLIAN,1969), for example, and some experimental support for the psycholog-ical reality of this type of structure is given in A. M. CotuNs, M.1~.
QUttHAN (1969).
T. G. B~.W.R and P. S. R.OSSNRAU~ (1970) havealso argued for the adequacy of tree structures in this context.
Interms of H-graphs, the necessary restriction is obtained by requiringthat any word sense may be an immediate hyponym of at most oneother sense; i.e., it may not be a hyponym of two " disjoint" senses.CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 35The class of structures so obtained may be termed H-forests, since theyare a proper subset of the/-/-graphs.Although it has been generally adopted in existing models, therestriction to H-forests is not without its dit~iculties.
The H-graphin Fig.
6 represents an intuitively correct set of hyponymy relationshipswhich is inconsistent with the H-forests.ch i ldVOllllin~other faBherFig.
6.
Apparent inadequacy of H-forests.An interesting but open question is whether such examples can beconsidered tobe rare in natural language, occurring only in very specialcases such as kinship terminology.
A related question concerns thevalidity of the assumption that a given sense is necessarily an immediatehyponym of at most one other sense, so that hyponymy, defined onthis basis, must be tree-structured.
It is clear that with the present stateof our knowledge a linguistic ase can be made for both H-graphs and/-/-forests as the appropriate class of structures for the hyponymy re-lation.Turning now to the constructibility of the various possible classesof hyponymy structures, it is not necessary to consider F-graphs andG-graphs, since they m:iy be dismissed in favor of H-graphs purelyon the grounds of their mathematical properties and economy of rep-resentation.
Both H-graphs and H-forests are constructible insofaras one can devise semi-automatic discovery procedures which will,in principle, construct them from basic data obtained from an informant.36 FRANK G. PAGANThis "basic data " would consist of judgments of the relationshipsbetween particular pairs of senses: either the first is a hyponym of thesecond, the second is a hyponym of the first, they are synonyms, orthey are related in none of these ways.The H-graph or H-forest would be constructed by a process ofmonotonic refinement; i.e., after the incorporation of each additionalword sense, the new structure would be a recognizable generalizationof the previous tructure.
More specifically, suppose that Hi and Hi+lare the current structures after i and i + 1 senses, respectively, x andy are any two senses previously processed, and the distance betweentwo senses on the same path is the number of arcs separating them.Then the following statements would hold:a) If x and y are at the same node in H i, then they are at thesame node in Hi+l;b) x and y are not at the same node in H i iff they are not atthe same node in H~+I;c) x is above y in Hi iff x is above y in Hi+l;d) if x is a distance d above y in Hi, then x is a distance d ord q-1 above y in Hi+l.e) if x is a distance d above y in Hi+l, then x is a distance d ord-1 above y in Hi;f )  x and y are not on the same path in Hi iff they are not onthe same path in Hi+l.The remaining requirements for constructibility are those of inputefficiency and consistency maintenance.
An obvious point of referencefor efficiency is the maximum number of inputs which would be re-quired irrespective of the algorithm and the set of word senses used.1 N 2, where N is the number of senses, This is approximately given byand would be reached in cases where inputs must be obtained for allpairs of senses.
The transitivity of hyponymy would allow H-graphsto be constructed with better efficiency than this; for example, if asense z were found to be a hyponym of y, and y were known to bea hyponym of x, then it could be inferred or predicted that z is a hyponymof x with no additional input.
H-forests could be constructed withbetter efficiency than H-graphs ince they are a much more predictiveclass of structures; for example, if z were found to be " unrelated"at the root of a tree, then it would be predicted to be "unrelated"everywhere in the tree.Because the H-graphs are a fully general class of structures, incon-sistency of a set of inputs with respect o them could be due only toCONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS - 37a violation of transitivity, and the procedure could check for suchoccurences automatically.
In the case of H-forests, there is more scopefor inconsistency, since any valid H-graph which is not also an H-forest represents a set of information which is inconsistent with H-forests.
The procedure would have to obtain redundant inputs in orderto maintain a consistency check in this case.
The details of testing forand correcting inconsistencies would depend upon the properties ofthe particular discovery procedure used.To summarize this section, I have attempted to place in perspectivethe plausible classes of structures for hyponymy.
Both H-graphs andH-forests satisfy the basic requirement for constructibility.
The con-struction of the latter, however, would be more efficient, so that itwould be disadvantageous to use a discovery procedure for H-graphsin general if H-forests alone are linguistically adequate.4.
STRUCTURES FOR COMPATIBILITYThe variety of structure classes for the compatibility relation turnsout to be richer than in the case of hyponymy.
To illustrate some ofthese representations, suppose that the compatibility relationships amongthe seven-word senses a, b ..... g are as shown in the matrix of Fig.
7.a b c d e f g1 (symmetric)1 11 1 11 0 0 11 0 0 1 11 0 0 1 1 11 0 0 1 0 0Fig.
7.
Compatibility matrix.Since the relation is symmetric, it is quite natural to represent i  asan undirected graph (an A-graph) where the nodes correspond to sensesand the edges indicate compatibility.
The A-graph corresponding toFig.
7 is given in Fig.
8.38 FRANK G. PAGANbFig.
8.
A-graph.For large sets of senses, A-graphs would clearly be unwieldy anduneconomic, and a more compact representation would be highlydesirable.
One particularly interesting transformation of the matrixor A-graph is obtained by grouping senses with the same compatibilityproperties with respect o all the other senses and placing them at thesame node.
The interpretation of such a C-graph is that two senses arecompatible if and only if they are associated with the same or adja-cent nodes.
The C-graph for the present example is given in Fig.
9.It can be easily shown that every C-graph is unique and that this classof structures is fully general.b,cTe,f gtlFig.
9.
C-graph.CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 39Turning now to more restrictive structures, a more compact rep-resentation can sometimes be obtained by transforming the undi-rected C-graph into a directed D-graph with the same set of nodesbut with the interpretation that two senses are compatible if and onlyif either they are at the same node or there exists a path between theirnodes.
In analogy to the situation for/-/=graphs, the nodes of a D-graph are partially ordered.
Fig.
10 shows a D-graph for the examplein the form of a Hasse diagram.
The D-graphs are not a fully generalclass of structures; i.e., there are C-graphs with no correspondingD-graphs.
Neither are they necessarily unique: it can be shown thatsome C-graphs have more than one equivalent D-graph.? '
~" dbe,f gFig.
10.
D-graph.The linguistic significance of these structures lies in their strongsimilarity to systems of semantic markers or features (corresponding tonodes) related by redundancy rules (corresponding to edges) (J. J. KATZ,J.
A. FODOR, 1963).
In this case, a feature is defined as the set of senseswhich, in other formulations, would be said to have the feature.
Therelationships among features, and hence the compatibility properties ofword senses, have often been represented by structures imilar to/9=graphs; moreover, a survey of the relevant heoretical and computa-tional literature (e,g., tL.
C. SCHANK, 1969; F. SOMMF.RS, 1963) wouldreveal that tree-like structures have nearly always been considered tobe adequate for this purpose.
The graph of Fig.
10 is in fact such aD-forest.
A given set of compatibility relationships can be representedby at most one D-forest.The constructibility criterion also bears strongly on the relativemerits of these structure classes.
Considering the C-graphs first, it40 FRANK G. PAGANmay easily be shown that this class atisfies all the requirements of con-structibility except he crucial one of effciency.
Assuming the availa-bility of basic data in the form of yes-or-no judgments of the compati-bility of unordered pairs of word senses, a C-graph could be builtby a monotonic refinement process: at each stage the current sense wouldeither be added to an existing node or form a new node, possibly inconjunction with the "splitting " of other nodes.
Efficiency, however,is the worst possible because the class of structures i fully general, andthe judgements obtained for the compatibility of the current sense withsome subset of the previous enses have no predictive value for its com-patibility with any of the other senses in the graph.The lack of effciency in constructing C-graphs can be regarded asa corollary of the fact that inconsistencies are impossible2 They are pos-sible in the case of D-graphs, however, and thus the assumption thatthey would not arise would make some judgments unnecessary afterothers became known.
But D-graphs fail to be constructible becauseof their non-uniqueness.
The D-graphs shown in Fig.
11 and Fig.
12are equivalent,8.c gfeFig.
11.
A non-unique D-graph.and that shown in Fig.
13 represents the same information exceptthat it contains an additional word sense.CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 41&e cleFig.
12.
An equivalent D.-?raphla:re;Fig.
13.
A rcfineraent of Fig.
1L42 FRANK G. PAGANThe latter graph is a simple modification of Fig.
11 but not of Fig.12, and there is no graph equivalent to Fig.
13 which is easily obtainedfrom Fig.
12.
Since a given discovery procedure could construct eitherof the first two graphs depending upon the order in which the senseswere incorporated, the process would in general involve completereconstruction rather than monotonic refinement.The D-forests, finally, are constructible in all respects.
Monotonicrefinement is characterized in this case by the following statements,where x and y again are any two senses previously processed and D~and D~+ 1are the current forests after i and i q- 1 senses, respectively:a) if x and y are at the same node in D,., then they are at thesame or adjacent nodes in Di+l;b) if x is a distance d above y in Di, then x is a distance d ord -q- 1 above y in D~+I;c) if x is a distance d above y in Di+l, then x is a distance d ord - -  1 above y in D~;d) x and y are not on the same path in Di iff they are not onthe same path in Di+l.A D-forest is a highly predictive structure; i.e., a judgment involvingone of its word senses will in general predict the outcome of manyother judgments.
A detailed estimation of the efficiency of constructionwould involve the order of the senses, the configuration of the finalstructure, and the node-scanning strategy used in the discovery al-gorithm.
It is sufficient here to recall, however, that nodes correspondto linguistic features, and hence one would expect hat if the numberof senses processed were very large, then the number of nodes wouldbe much smaller.
Thus all the nodes would appear relatively earlyin the construction process, and this leads to the conclusion that thetotal number of judgments would be a nearly linear function of thenumber of senses.
In order to detect inconsistencies, however, someof this efficiency would have to be sacrificed and redundant judgmentstaken.To sum up this section, the series of structure classes considered forrepresenting compatibility has led to one class, the D-forests, which isconstructible.
These structures also have several important propertiesin common with other models in theoretical nd computational lin-guistics.CONSTRUCTIBLE REPRESENTATIONS FOR TWO SEMANTIC RELATIONS 435.
CONCLUSIONThis paper has presented two examples of the use of constructibilityas a design criterion for lexical or semantic structures of the type usedin natural language processing.
This criterion is essential if we everhope to implement computational systems with broad linguistic com-petence.
It is very encouraging that in the two cases considered theapproach as led to structures basically equivalent to those which haveactually been used.
Although these previous models have generallylacked the property of constructibility, then, it is suggested that thisis a fault of design which can be overcome.REFERENCEST.
G. BEvy, P. S. ILOSEN~AUM, SomeLexical Structures and their EmpiricalValidity, in tL.
A. JACOBS, P. S. tLO-S~NBAUM (eds.
), Readings in EnglishTransformational Grammar, Weltham/Mass), 1970.A.
M. COLLINS, M. IL.
QUILLIAN, Re-trieval Time from Semantic Memory, in?
J. Verb.
Learn.
Verb.
Behav.
J, VIII(1969), pp.
240-247.C.
J. Fmt.MOl~, Types of Lexical Infor-mation, in F. Kmm~ (ed.
), Studies inSyntax and Semantics, Dordrecht (Hogland), 1969.j.
j. KATz, J.
A. FoDo~, The Structure ofa Semantic Theory, in *Language~,XXXIX (1963), pp.
170-210.J.
LYONS, Introduction to Theoretical Lin-guistics, London, 1968.M.
IL.
QU~LIAN, The Teachable Lan-guage Comprehender, in ~ Communica-tions of the ACM,, XII (1969) 8,pp.
459--476.D.
E. I~I.."THERFORD, Introduction toLatticeTheory, Edinburgh, 1965.IL.
C. Scare,m, A Conceptual Parser forNatural Language, in Proc.
IJCAI,Washington, 1969, pp.
569-578.tL.
M. SCh'WARCZ, J. F. Bu~Gma, tZ.
F.SIMMONS, A Deductive Question-answererfor Natural Language Inference, in, Com-munications of the ACM ,, XIII (1970)3, pp.
167-183.S.
Y. S~D~OW, Language Analysis in theHumanities, in~ Communications oftheACM ~, XV (1972) 7, pp.
644-647.P.
SOMM~S, Types and Ontology, in, Phil.1Lev.
,, LXXII (1963), pp.
327-363.
