Prospects for Computer-Assisted Dialect AdaptationDavid J. WeberI ns t i tu to  L inguist ico  de VeranoCasi l la 2492Lima, 100 PERUWilliam C. MannI n fo rmat ion  Sc iences  Ins t i tu teUn ivers i ty  of  Southern  Ca l i fo rn iaMar ina  del Rey,  Ca l i forn ia  90291This paper describes a project which has explored the feasibility of using a computer toperform a significant portion of the changes required to adapt text from one dialect toseveral others.
This ongoing experiment has examined adaptation between various dialectsof Quechua, finding that a computer program may be an important tool for adaptation.
Anexperimental computer program was written and applied to text, and its output was fieldtested in five target dialects.
Preliminary results indicate that preprocessing text with acomputer may I) enable informants who are not bi-dialectical (in the source and targetdialects) to produce adequate adaptations without much coaching from thelinguist/translator; 2) improve the quality of the resulting text; and 3) reduce time andeffortmboth in adaptation and in manuscript preparation.1, IntroductionThis paper describes experiments in computer-assisted adaptation of text from one dialect to severalothers.
The principal purposes of the initial explora-tions reported here were:1.
To discover whether a computer programcould convert text in a dialect unintelligi-ble to an informant into easily read(possibly errorful) text in the informant'sown dialect.2.
To discover what kinds of dialect differ-ence information are needed to supportan effective dialect-adapting computerprogram.3.
To discover classes of dialect changes notaccounted for in a particular first-draftcomputer program, thereby to providedata for a detailed examination of wheth-er each class of changes is suitable forperformance by a computer program.In pursuit of these goals, an experimental computerprogram was written and applied to text, and its out-put was field tested.In this paper the nature of the language situation isdiscussed first, followed by a description of the com-puter program.
Then, procedures for checking thecomputer-adapted text are described, followed by adiscussion of the results of this checking.
Finally,conclusions are stated.2.
The Nature of the Language SituationThe practical difficulty of dialect adaptation is pri-marily determined by the language situation.2.1 The General Nature of the Language(s)This experiment was carried out in the subgroup ofQuechua called "central" Quechua by P. Landerman\[1\].
These languages/dialects have the following char-acteristics:1.
More of the structure of the language is inthe morphology than in the syntax.2.
Much of the discourse structure involvesthe manipulation of the so-called "topic"marker and the "evidential" suffixes (thereportative, the assertative .... ).Copyright 1981 by the Association for Computational Linguistics.
Permission to copy without fee all or part of this material is grantedprovided that the copies are not made for direct commercial dvantage and the Journal reference and this copyright notice are included onthe first page.
To copy otherwise, or to republish, requires afee and/or specific permission.0362-613X/81/030165-13501.00American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 165David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation.4.Theseof theThe category of each morphological unitstrongly constrains what suffix may imme-diately follow that unit.
For example, theintransitive verb root aywa- may not befollowed by the case marker -man, whichonly follows nouns.A significant amount of morphophonemicsis involved in getting from sequences ofmorphemes to the correct sequence ofphonemes.
The two such processes whichare most widely applied are first, morpho-phonemic lowering, whereby a high vowel(i.e., e i ther / i /  or /u / )  of certain suffixesbecomes /a /  when one of a certain smallclass of suffixes follows and second,foreshortening, whereby certain suffixes,the final vowel of which is otherwise long,appear with short, final vowels when fol-lowed directly by certain other suffixes.characteristics are mentioned because the designprogram responds to them.2.2 The Nature  of the Dia lect  D i f ferencesSix dialects were involved in this experiment.
Thesource dialect (abbreviated SD), i.e., the dialect fromwhich text was adapted, was Huallaga (Hu~muco)Quechua (abbreviated HgQ).The target dialects (abbreviated TD) are the follow-ing:Panao (Hu~nuco) Quechua (PaQ)Dos-de-Mayo (Hu~nuco) Quechua (DoQ)Llata (Hu~nuco) Quechua (LIQ)Yanahuanca (Pasco) Quechua (YaQ)Junin (Junin) Quechua (JuQ)The differences between these dialects are not triv-ial, as should become clear in the discussion below.Each of these would require separate reading materi-als, but it is expected that the material of one dialectof Huhnuco could be adapted to the other dialects ofthat department.To what extent these dialects are mutually intelligi-ble (pair-wise) is an open question.
To our knowledge,no formal tests have been made.
The first author hasasked several HgQ speakers if they can understand thePaQ speakers.
Answers indicate that communicationis difficult.
That HgQ speakers and JuQ speakerscannot communicate ffectively has been observedfirsthand.
A rough metric of difference is this: adap-tation between these dialects has required roughly 800changes per 1000 words.
Whatever the case, little orno significance is attached to whether the dialectsinvolved are mutually intelligible or not; it is sufficient'that separate materials need to be prepared for thedialects, as established by an overall consideration ofthe language.The dialect differences will now be discussed ingreater detail under three headings: the phonologicaldifferences, the lexical differences, and the grammati-cal differences.2.3 Phonological  D i f ferencesTable 1 indicates various regular sound changes(RSC's) which have affected these dialects.There are also some sound changes which are notso .regular.
For example, the change by which aVowel-Semivowel-Vowel  sequence becomes a longvowel (e.g.
compare HgQ chaya- with DoQ cha:-'arrive' and HgQ tiya- with DoQ ta:-) is not entirelyregular.
Some changes affect very few words (forexample, the change by which / s /  is lost intervocali-cally, e.g., HgQ wasi 'house' but DoQ wayi, HgQ usa' f lee' but DoQ uwa), and these are handled in theprogram as though they were simply lexical differ-ences.2.4 Lexical D i f fe rencesThe SD and TD may use very different roots toexpress the same concept.
For example, to express 'torecover (from an illness), to get well', in HgQ one usesallchaka:-, in L1Q one uses aliya:-, and in JuQ oneuses kachaka:-; 'to gather' is expressed by shunta- inHgQ and by qori- in LIQ; the pre-adjective meaning'very'  (used as in 'very big') is expressed by sumaq inHgQ and by sellama in L1Q; 'to lie (tell a falsehood)'is expressed by llulla- in HgQ and by kaski- in YaQand JuQ ... et cetera.
Sometimes the SD and TD pos-sess the same root, but its meanings differ.
Aru-means 'to work'  in HgQ but 'to cook' in dialects to thewest (Huaras, Ancash); yacha- means 'to know (howto) '  in HgQ, whereas the cognate in JuQ (yatra-)means 'to reside at'.2.5 Grammat ica l  D i f ferencesThe grammatical differences between dialects canbe divided into two general types, the morphologicaldifferences (i.e.
those which occur within a singleword) and the syntactic differences (i.e.
those whichinvolve more than one word).
Only the morphologicaldifferences will be discussed in this section.
They areof several sorts:First, in the central Quechua dialects, one of themost drastic morphological differences involves howthe plurality of the subject or object of a clause ismarked in the verb of that clause.
In L1Q there isonly one verbal plural marker, -ya:.
In HgQ there arefive suffixes which indicate plurality within the verb.There are conditions on the occurrence of these, e.g.,-rka occurs only preceding the continuative suffix-yka:.
L1Q has only -ya:, HgQ has all except -ya:, andthe other dialects have only -:ri, -pa:ku, and -rka.166 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation*~>?
*ff>~(ch >ts) (tr>ch)PaQ - -HgQ - +DoQ + +L1Q + +YaQ + -JuQ - -*'~>s *h>l *fi>n *q>h(ts>s) (//>1) (nn>n)  (q>h)- - t -  - t -  -+ + + - -- -  -t- -I- - -- -  - t -  - I -  - -Phonemic ChangeOrthographic FormTable 1.
Regular sound changes.Second, there are differences in the properties ofmorphemes.
For example, in HgQ the suffix -:riundergoes morphophonemic lowering, but in JuQ itdoes not.
In some dialects the durative suffix -ra:foreshortens while in others it does not.Third, a suffix in one dialect may simply be absentin another.
For example, LIQ has a verbal suffix -ski,a suffix which HgQ not only lacks, but for which theredoes not seem to be any corresponding suffix.
HgQhas a suffix -paq which is used with future verbs, whileYaQ has no such suffix.Fourth, a single suffix in one dialect may corre-spond to two different suffixes in another dialect.
Forexample, the relativizer -sha of HgQ corresponds toboth -sha and -nqa in JuQ, which has a temporal con-trast in the formation of relative clauses which is notpresent in HgQ.
A similar case arises in the tensesystems of these two dialects: JuQ has a distinctionbetween a recent and a remote past tense which HgQlacks.Fifth, a suffix in one dialect may be the collapse oftwo suffixes in another.
For example, in some dia-lects, the suffix -mi followed by the postposition arihas formed a single suffix -mari.Sixth, suffixes may occur in different orders indifferent dialects.
For example, in HgQ -rqu precedesthe object marker -ma: (e.g.
maqa-rqu-ma:-nki 'you h i tme (recent past)'; in Huaras (Ancash) Quechua, itfollows the object marker: maqa-ma:-rqu-nki.Seventh, the number of allomorphs of a suffix maydiffer.
For example, in HgQ the second person pos-sessive suffix has allomorphs -yki, -ki, and -niki.
JuQhas all of these forms as well as -y.Finally, a suffix may have different forms(spellings) in the different dialects.
For example, thesuffix which expresses imilarity is -naw in HgQ, -noqin LIQ and DoQ, and -nut in JuQ; the continuativesuffix is -yka: in HgQ and -ya: in JuQ; the first personplural conditional form is -shwan in HgQ and -chwanin JuQ.Not all of the morphological differences betweendialects have been mentioned in this section.
Thecomputer program handles all of the kinds mentioned,as well as others.3.
The Nature  of the Computer  ProgramAn early pencil-and-paper xperiment in adaptingfrom HgQ to the Quechua of Jacas Grande showedthat, of a set of changes suggested by certain JacasGrande speakers, approximately 95 percent were pho-nological, lexical or morphological, and a significantproportion of the residue were idiosyncratic ratherthan systematic.
This suggested that making the pro-gram responsive to features beyond word boundarieswould not make the task of final correction of anadapted text significantly easier.
Thus the decisionwas made to have the program treat one word at atime.The program is designed for Quechua, but not forany particular dialects.
In all of the experiments todate, the source dialect has been HgQ.tThe program has three distinct phases of operation:initialization, derivation of target-dialect root spellings,and text-processing, each to be discussed in the fol-lowing sections.3.1 Init ia l izat ionIn initialization, linguistic information about thedialects involved is made available to the computerprogram.
We will discuss the information provided fora source dialect, and then what is provided for a targetdialect.l After this paper was written in 1979, more experiments withthese dialects were performed.
Experiments were also carried outin other dialects, including some Bolivian dialects of Quechua whichwere very different from these.
There was also an independentseries of experiments with Mayan dialects of the Quichean group inGuatemala.
The program described here was modified to accom-modate the other Quechua dialects.
A new program was written forthe Mayan dialects, using the same general design.
All of theseexperiments met the same general goals as the experiments de-scribed here.
This paper is an abridgment of the 1979 version \[3\].American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 167David J. Weber and Wil l iam C. Mann Prospects for Computer-Assisted Dialect Adaptation3.1.1 Source  Dia lect  Init ial izationFor the SD, two major lists and several small listsare provided to the program.
The largest list is a dic-tionary of roots.For each root, the dictionary entry (DE) containsthe following information:1.
The spelling of the root, i.e.
the string ofcharacters by which the root is recog-nized.2.
The name of the root:a.
If the root is native to Quechua,the name is the proto-Quechuaform of that root.b.
If the root is a Spanish loan, thename is the Spanish (phonemic)form of that root.3.
An indication of whether the root is theresult of RSC's applied to the proto-Quechua form (negative for Spanishloans, names, ideophones, etc.).4.
Morphological category (e.g.
noun, intran-sitive verb, transitive verb, etc.).5.
An indication of whether its final vowel isshort or long.6.
An indication of whether its final vowelhas undergone the morphophonemic proc-ess of lowering ( f rom/ i /o r /u /  to /a / ) .Note that the dictionary will contain multiple DEsfor the various allomorphs of the same root (i.e., forthe various forms that the root may take).
For exam-ple, a DE corresponding to one of the allomorphs ofyayku- ' to enter'  has (1) yayku as the spelling, (2)*yayku as the proto-Quechua form; (3) it undergoesthe RSC's; (4) it is an intransitive verb; (5) its finalvowel is short; (6) it has not undergone morphopho-nemic lowering.
All of this information is exploited bythe program as described below.The second major list is the list of SD suffixes.Each suffix DE contains the following information:1.
The spelling of the suffix.2.
An arbitrary name for the suffix, thisname to be common to all the DE'scorresponding to various al lomorphs ofthat suffix and used uniformly for bothSD and TD suffixes.3.
The morphological category of the unit(root followed by zero or more suffixes)to which this suffix can be applied.4.
The morphological category which resultsfrom concatenating this suffix to anappropriate unit.5.
An indication of whether its final vowel isshort or long.6.
An indication of whether it disallows animmediately preceding long vowel.7.
An indication of whether its final vowelhas undergone the morphophonemicprocess of lowering.8.
An indication of whether it causes mor-phophonemic lowering.9.
A number which gives the "order class" ofthe suffix, used to constrain sequences ofsuffixes to occur in a monotonically non-decreasing order of their order class num-bers.For example, the suffix -ka: (1) with arbitraryname /pass ive /  (2) applies to transitive verbs (3) withthe result that the combination is an intransitive verb(4); the final vowel is long (5) and the suffix does notdisallow a preceding long vowel (6); the final vowelhas not undergone morphophonemic lowering (7) andit does not cause such lowering (8); the order class is600, placing it in the large class of "derivational" suf-fixes (not ordered with respect to other members ofthe class, but ordered with respect to other "orderclasses" of suffix).In addition to these two major lists, there are se-veral small lists:1.
The allomorphs which can only occur inword-final position following a short vow-el; one such DE has as its spelling m andarbitrary name /MI / ;  there is another DEin the suffix dictionary which has mi as itsspelling and the same arbitrary name.These two DE's  correspond to the twoallomorphs of the suffix -mi 'assertive'.2.
The categories of morphological  unitswhich are allowable in word-f inal posi-tion, i.e.
the categories of completewords.3.
The table of orthographic hanges, used toconvert the SD expression of vowel lengthto a single form, and to remove SD ortho-graphic reflections of low level phoneticprocesses.Source dialect initialization is independent of targetdialect information, and so is invariant with change oftarget dialect.3.1.2 Target Dialect InitializationFor a given TD, a dictionary of roots, a dictionaryof suffixes, and several other small lists, must be pro-vided the program.The small lists which must be made available are:1.
The non-cognate roots list: correspondingSD and TD roots where the SD root and168 American Journal of Computational Linguistics, Volume 7, Number 3, Ju ly -September  1981David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation2..the TD root are not cognate.
For exam-ple, the HgQ root lloqshi- ' to leave' corre-sponds to the YaQ root yarqu-.The plural suffix list: all verbal suffixes inthe SD which indicate that the verb somarked has a plural subject or object.The drop list: suffixes to be deleted inadapting from the SD to the TD.
For ex-ample, HgQ -paq is absent in YaQ andmust be dropped in adapting from HgQ toYaQ, since there is nothing in YaQ towhich -paq corresponds.
All of the SDpluralizers must be on this list.3.2" Target  Dia lect  Root Der ivat ionTD roots are derived from SD roots so that it is notnecessary to enter a dictionary for the target dialect.This eliminates the arduous task of collecting, organiz-ing, and entering such a dictionary, and second allowsone to begin adaptation on the assumption that thetarget dialect roots are related in some systematic wayto the source dialect roots.TD roots are derived from the SD roots as follows:The DE of each SD root includes the proto-Quechuaform of that root; the RSC's are applied to this form.For example, suppose that the SD root is chaki 'dry'.In the DE for that root the proto-Quechua form isgiven as *~aki.
Now if the TD is DoQ, the change~>~ from the table of RSC's for that dialect is appliedto the proto-Quechua form; the result (after ortho-graphic adjustment) is tsaki.
If, however, the TD wereL1Q, the changes ~>~ followed by ~>s would be ap-plied to the root with the resulting L1Q word saki.
(These changes could be made as one change, ~>s, butit is no less convenient to handle it as two steps, whichis clearly how the change came about historically).The process uses a simple substring substitution algor-ithm.After the RSC's have applied, a TD DE is made forthat root by substituting the derived spelling for theSD spelling.Three types of roots must not undergo the RSC's:(1) roots for which the TD root is simply not cognatewith the SD root, (2) native Quechua words which donot undergo the sound changes, such as names(personal, place .
.
.
.  )
and ideophones, and (3) wordsborrowed from Spanish.3.3 Text  ProcessingAfter initialization, a TD text may be producedfrom a SD text.
The text is treated word by word.Each word passes through 1) an analysis process, and2) a synthesis process, which are independent.3.3.1 Word  Analys isWord Analysis (WA) transforms a word to a set ofdistinct readings, each reading consisting of a sequenceof morpheme names and an indicator marking thepresence or absence of pluralization.The first step in WA is rewriting vowel length(which in the practical orthography is written withdouble vowels, e.g.
"aa") ,  as a vowel followed by acolon.
This is necessary because the vowel and itslength may not be parts of the same morpheme.
Forexample, aywaa 'I go' is composed of the morphemesaywa- 'to go' and -: 'first person'.
The change makesit possible to recognize all morphemes according totheir spellings.WA seeks to decompose a word into a sequence ofmorphemes.
It works from left to right, first seeking aroot whose spelling matches the beginning of theword, and if successful, then seeking a suffix whosespelling matches some immediately following sequenceof characters, repeating this process until all the char-acters of the word have been matched by the spellingsof DE's.
WA is organized in such a way that it con-siders all possible sequences of DE's  (root followed byany number of suffixes) whose spel l ings-- taken to-gether in sequence- -match t e characters of the word.The algorithm is a computational ly-straightforwardrecursive exhaustive search.However, this character-matching process is not asufficient basis for arriving at correct analyses; manysequences of morphemes whose spellings (taken to-gether) match the characters of the word will be unac-ceptable, because the language imposes constraints onthe allowable decompositions.
To eliminate spuriousanalyses, the program's ongoing analysis is corre-spondingly constrained.
For example, if charactermatching alone is used to analyze aywaykan, there are56 decompositions into morphemes.
If, however, theconstraints are imposed, then only one of these de-compositions i passed as legitimate.The constraints incorporated into WA are of twotypes.
The first type is invoked whenever there is amatch with some suffix; such constraints test the ac-ceptability of that suffix as the successor of the imme-diately preceding morpheme (be it root or suffix).
Forexample, one possible decomposition of chakiykan 'itis drying' is the root chaki ' foot '  ( from the proto-Quechua root */~aki/) followed by -yka 'continuative'and then by -n 'third person'.
At the stage where thesuffix -yka is matched, the constraints include a cate-gory check, which fails in this case because the root isa noun and the continuative suffix may only followverbs.
By contrast, when the match is to the rootchaki 'to dry' (from the proto-Quechua root */~aki/)and then -yka is matched, this same test does not failand this decomposition goes on to be the successfulAmerican Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 169David J. Weber  and Wil l iam C. Mann Prospects for Computer-Assisted Dialect Adaptationanalysis.
Such tests help reject bad decompositionsbefore a great deal of computation is spent on them.The second type of constraint is invoked when theword is completely decomposed into morphemes.
Forexample, the word aywaykaran 'he was going' can bedecomposed as aywa-yka-ra-n where -yka is taken tobe one of the allomorphs of the suffix / -YKU/ .
Thisdecomposition passes all of the constraints which ap-ply to adjacent morphemes, but not the overall const-raint that certain allomorphs (-yka as an allomorph of/ -YKU/  among them) are appropriate only if one of acertain small class of suffixes (-chi, -mu, etc).
followssomewhere in that word.
The correct analysis involvesthe same morpheme boundaries but with -yka as anal lomorph of the suffix / -YKA: /  'continuative':aywa-yka-ra-n (go-continuative-past-third:person).All morpheme decomposit ions of a word whichpass the tests are collected.
Any morpheme sequencecontaining a plural morpheme is marked as plural, andthe plural morpheme is deleted.
The resulting set ofmarked, depluralized readings is the final result ofWA.When WA does not yield any reading, the SD wordpasses unchanged through the remainder of the pro-gram and appears in brackets in the final text.
If theword fails to be analysed because its initial charactersdo not match any root in the dictionary, that word isentered on a list which is periodically reviewed to up-grade the dictionary of roots.3.3.2 Word SynthesisWord Synthesis (WS) derives a TD word for eachreading produced by WA.
What passes from WA toWS for each reading is a sequence of morpheme namesand the plurality tag of each sequence.
From thissequence are dropped any morpheme names which arelisted in the drop list, and substitutions of non-cognateTD roots are made.
For the remaining morphemes,each name is replaced by its entire TD DE (so that itsproperties are characteristic of the TD rather than theSD).
The next step is repluralization.Repluralization inserts a plural morpheme into themorpheme sequence according to the pluralizationscheme of the TD.
Repluralization is dialect specific,and requires different methods for different dialects.The method appeals to the order of various classes ofsuffixes to find the appropriate niche for the plural-izer.The next step is to select for each morpheme theal lomorph which is compatible with the other mor-phemes in the word.
The allomorphs of a morphemeare represented by DE's  which share the name of themorpheme.
This set of DE's  is reduced by successiveapplication of constraints until a single DE remains.When the choices have been made for all the mor-phemes of the sequence, the spellings of the chosenDE's  are concatenated to form the TD word.Then all of the separately developed renderings ofa word are collected, and any duplicates are eliminat-ed.
Ordinarily, this results in a single word.
If thereare multiple renderings, they are separated bys lashes( / / ) .
For example, HgQ kasha has two possi-ble analyses: 1) the root kasha ( ' thorn')  and 2) theroot ka ( 'be' )  followed by the suffix -sha, (past par-ticiple).
In going to LIQ, the first of these analyseswill yield kasha; the second will yield kashqa.
Thusthe resulting L1Q text will have kasha//kashqa corre-sponding to HgQ kasha.The final step is to convert the word(s) to the TDorthography, representing length by doubled vowelsand making any other necessary changes.3.4 The Program's  E f fects  on S ingle WordsThis section roughly characterizes how the programtreats certain actual words, il lustrating how certaindialect differences are handled.
The forms given be-low are only suggestive of how the program operates;they are not the actual form of the word in the com-puter, and possible alternative readings are not shown.
(Capital letters are used for the arbitrary names ofsuffixes; the asterisk preceding roots indicates that theform is a proto-Quechua form).
The pair of examplesin Table 2 illustrates the rather dramatic differencewhich arises in words containing pluralizers in adapt-ing from HgQ to LIQ.In (1), -rka is a pluralizer, whereas in (1') it is theallomorph of -RKU which has undergone morphopho-nemic lowering, in this case because it is followed by-:RI.
In the first example -rka is eventually droppedbecause it is a pluralizer; in the second it eventuallybecomes -rku because once -:RI is dropped there is nolonger any reason for the vowel to be lowered.
Notethat in the second example, the pluralizer which isinserted (-YA:) occupies the same position as the SDpluralizer (-:RI),  but in the first example the insertedpluralizer occupies a different posit ion than the SDpluralizer (in this case, -rka).
Further note that theallomorph selected for the pluralizer -YA: has lengthin the second example but not in the first; this is be-cause in the second example the following suffix(-NA) does not foreshorten, whereas in the first exam-ple the following suffix (-3) does.
A similar case in-volves -YKA: in the first example: in the SD the cor-rect al lomorph is -yka because it immediately precedes-n, which foreshortens, whereas in the TD the correctal lomorph is -yka: because it immediately precedes-YA:, which does not foreshorten.Four tables of examples will now be given (withfewer stages) which illustrate cases in which a TD rootreplaces an SD root which has different properties170 American Journal of Computat ional  Linguistics, Volume 7, Number 3, Ju ly -September  1981David J. Weber and Wil l iam C. Mann Prospects for Computer-Assisted Dialect AdaptationGiven:SD orthographic form:WA develops, in succession:length converted:segmentation:morphophonemic form:plurality handled:WS develops, in succession:re-pluralization:allomorph selection:TD orthographic form:(1) aywarkaykan (1') aywarkaarinanpaq(2) aywarkaykan(3) aywa-rka-yka-n(4) *aywa-RKA-YKA:-3(5) (*aywa-YKA:-3) +PL(2') aywarka:rinanpaq(3') aywa-rka-:ri-na-n-paq(4') * aywa-RKU-:RI-NA-3 P-PAQ(5') (*aywa-RKU-NA-3P-PAQ) +PL(6) *aywa-YKA:-YA:-3(7) aywa-yka:-ya-n(8) aywaykaayan'they are going'(6') *aywa-RKU-YA:-NA-3P-PAQ(7') aywa-rku-ya:-na-n-paq(8') aywarkuyaananpaq'in order that they go'Table 2.
The program's effects on two plural words.SD orthographic form:segmentation:WA output:re-pluralization:allomorph selection:TD orthographic form:warantinwara-ntin(*wara-NTIN)-notPL*wara-NTINwaray-nintinwaraynintin'day after tomorrow' (< wara(y) 'tomorrow')Table 3.
Consequences of root change.SD orthographic form:segmentation:morphophonemic form:re-pluralization:allomorph selection:TD orthographic form:chayaykunchaya-yku-n(*~aya-YKU-3)-notPL*~aya-YKU-3~a-yku-ntraykun'he arrives (directly)'chayamunchaya-mu-n(*~aya-MU-3)-notPL*~aya-MU-3~a:-mu-ntraamun'he arrives (here)'Table 4.
Selection ofroot allomorphs for length.than the TD root.
In the example of Table 3 the SDroot ends with a vowel, whereas the TD root ends in aconsonant.
The suffix -ntin has an allomorph -nintinwhich occurs following consonants and long vowels, sothis is the appropriate allomorph for the TD.In the examples of Table 4 the SD root (chaya-) hasbut one allomorph, but in the TD (YaQ) the corre-sponding root has both long and short allomorphs.
Inthe first example of this table the long form does notappear because the root immediately precedes -yka,which foreshortens.
In the second example the lengthoccurs because -mu does not foreshorten.In the examples of Table 5 the SD root (lloqshi-) isreplaced in the TD (YaQ) by a root which has twoallomorphs.
In the first example here the final vowelof that root is /a /  because of morphophonemic lower-ing caused by -mu; in the second it is /u /  because noAmerican Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 171David J. Weber and Will iam C. Mann Prospects for Computer-Assisted Dialect AdaptationSD orthographic form:segmentation:WA output:re-pluralization:allomorph selection:TD orthographic form:Table 5.lloqshimunlloqshi-mu-n(*lloqshi-MU-3)-notPL*yarqu-MU-3yarqa-mu-nyarqamun'he leaves(said from within)'lloqshikunlloqshi-ku-n(*lloqshi-KU-3)-notPL*yarqu-KU-3yarqu-ku-nyarqukun'he leaves(said from without)'Selection of root aUomorphs for lowering.SD orthographic form:segmentation:WA output:re-pluralization:allomorph selection:TD orthographic form:suwamannawsuwa-man-naw(*suwa-MAN-NAW)-notPL*suwa-MAN-NAWsuwa-man-noqsuwamannoqsuwa-ma-n-naw(*suwa-MA:-3-NAW)-notPL*suwa-MA:-3-NAWsuwa-ma-n-noqTable 6.
A single word form resulting from an ambiguous analysis.suffix follows in the word which causes morphopho-nemic lowering.In the example of Table 6 the SD word is ambigu-ous (between 'as though to a thief' and 'as though tosteal me').
It is seen that this ambiguity produces onlyone TD word, a word which is ambiguous in the TD inthe same way as it is ambiguous in the SD.3.5 Program Design Problems: Ambiguity and theControl of ComplexityThe problem of ambiguity strongly influenced thedesign and the allocation of development effort.
Wenow feel that ambiguity control is one of the majorconsiderations in designing an adaptor.
The work ofcoping with ambiguity and complexity is presentedbelow in a series of retrospective (non-chronological)design decisions.Given our previous decision that the programshould work on a word-by-word basis, one could (inprinciple only) design an adaptor which would workperfectly, without any internal linguistic knowledgeexcept a table of word correspondences.
The programwould, for each given word, look up the adapted word.The difficulty with this for Quechua is the practicalimpossibility of providing the word table.
Morphologi-cal productivity would yield a table of millions ofwords, simple in structure but of unmanageable size.Also, the process of building the word table wouldcontinue indefinitely, and much of the relevant, sys-tematic knowledge could not be used at all.This perception leads to the initial design decision:Decision 1: The basic linguistic unitwhich the program manipulates should bethe morpheme rather than the word.Since we would like to be able to adapt from manySD's to many TD's with minimal effort of change, thisleads to another decision on the particular morphemesto be used:Decision 2: The program should analyzetext into proto-Quechua morphemeswhere appropriate, and should synthesizetext from proto-Quechua morphemes byrecapitulating actual historical processes.Discovering words in text is trivial, but discoveringdistinct morphemes i not.
The decision to use mor-phemes as the basic unit makes it necessary for theprogram to contain an analyzer to reduce individualwords into sequences of morphemes.
This is the majorpart of the Word Analyzer above.One might hope that distinct morphemes wouldhave distinct spellings, and that they could be discov-ered effectively by seeking concatenations of mor-pheme spellings which would yield the word.
Unfortu-nately, as we have seen, spelling is a hopelessly inade-quate basis for morphological nalysis.
Use of spellingalone leads to truly amazing numbers of analyses, aswas demonstrated above with aywaykan.
This is sofrequent hat, for efficiency, the program must nevereven produce the set of spelling-based readings inter-172 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptationnally.
Rather, the analysis must be constrained byknowledge other than spelling.
This fact leads to an-other design decision:Decision 3: The program must incorpo-rate a strongly constraining morphology inits analysis.The morphology used \[2\] makes i t  possible to ex-ploit the characteristic of Quechua (mentioned in 2.1)that the category of a morphological unit stronglyconstrains what suffix may follow the unit.
On thebasis of the morpheme categories alone, the number ofdistinct analyses of aywaykan drops from 56 to 2.
Theprogram applies these morphological constraints as theanalysis of a word proceeds, so that an invalid analysiscan be rejected as soon as it is proposed if it contains aninvalid pair of adjacent morphemes, rather than delay-ing rejection until the word analysis is complete.The program also uses several other kinds of cri-teria for rejecting analyses, including a set of pro-grammed tests which apply to whole words, used assoon as an analysis is complete.
They eliminate ana-lyses containing defects such as incorrect lowering,improper ordering, and the improper use of certainspecial morphemes such as -paq 'future'.These methods eliminate nearly all of the potentialambiguity (well over 99 percent of it), but still leave asignificant residue.
In the experiment, about 25 per-cent of the words were still ambiguous under all ofthese constraints applied jointly, and this ambiguitycontributed about 1 excess reading for every 2 words.If this amount of ambiguity were to appear in the finaltext, it would be a significant impediment.
Fortunate-ly, as we will see, most of it goes away.In synthesizing words in the target dialect fromtheir morpheme definitions, the many allomorphs andassociated conditions must be treated properly.
A TDmorpheme may have multiple allomorphs in surfaceforms of the TD, only one of which is allowed by con-ditions in the remainder of the word.
There is a greatdiversity of conditions.
Composing TD words withoutreference to these conditions would yield incompre-hensible text.
This leads to the final design decision:Decision 4: The program must containlinguistically sound methods for selectingcorrect allomorphs in context.About one third of the words in our experimentaltext had possible allomorph variants when adapted toJuQ.
Virtually all of this variation is subject to condi-tioning, which can be represented computationally bysystematic environmental filtering rules.
Applicationof this elaborate collection of environmental filteringrules causes essentially all allomorph variation to beresolved during synthesis.The final ambiguity-resolution "method," the onewhich resolves about 93 percent of the residue, is notreally a method at all.
It turns out that when the vari-ous readings of an ambiguous SD word are synthesizedin the TD, they seldom differ.
The predominant caseis that only one spelling (rendering) arises from anambiguous word, so that the final text has only a sin-gle word form even though the analysis and synthesisof that word were ambiguous.
On a 576-word sampleof text adapted to JuQ, there were 151 ambiguouswords.
For these, WA produced 850 readings (1.47readings per word).
But the "collapsing effect" re-duced the number of readings to 587 (1.02 readingsper word), so that only 11 words were indicated asambiguous in the final text.In checking and correcting these texts, nativespeakers never had any difficulty in quickly selectingone of the alternative words as being correct, andagreed on all selections.
The number of alternatives inthe resulting TD text did not present difficulties forthe checker/editors.
The final level of ambiguity pres-ented no experimental difficulties of any kind.Given the necessary complexity and diversity of thesymbol processing required by the design decisionsabove, the programming language and related softwaresupport must provide:1.
Flexible facilities for manipulating charac-ter strings,2.
Easy representation f processes withelaborate functional decomposition,3.
Recursive processes,4.
Strong tools for defining, testing, revisingand combining processes.These requirements (among others) led to ourchoosing INTERLISP (a dialect of LISP) as the pro-gramming language.
LISP encourages functional de-composition of one's program; this has been vital tokeeping the whole enterprise comprehensible and con-trollable.
This paper's description of the program doesnot reflect the strong functional decomposition em-ployed.
There are actually 111 functions in the cur-rent version of the program, and a similar number ofother (tool) functions were defined for managing dic-tionaries, printing statistics and other activities.4.
Procedures for Check ing the ComputerAdapted  TextAll during the months-long development of theprogram there was an understanding that its effective-American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 173David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptationness would have to be examined in some sort of fieldtest.
Subsequent development and application woulddepend on the outcomes of the testing, i.e.
on howreadable and correctable the computer-produced textreally is.
In particular, we were prepared to embedthe present program in a more complex program whosescope was sentences or larger units if that had provednecessary.To test the program's adequacy, samples of varioustypes of text were selected for trial adaptation, and allsamples were adapted into five target dialects.
In thesummer of 1978 these texts were taken by the firstauthor to the areas where the target dialects are spo-ken.
They were presented to native speakers of thevarious dialects, and their reactions and suggestionsfor revision were noted.
This section presents the test-ing, and Section 5 describes the results.4.1 The Nature  of the Texts  Used in the Exper imentThe source texts used for this experiment consistedin the following: two folktales "Hombre  y Oso"(approximately 150 words) and "Moco y Mishi"(approximately 250 words), two passages from thetranslation of the Gospel of Mark 2:1-12 (The Healingof the Paralytic) and 14:12-15:41 (The Last Supperthrough The Death of Jesus), and a short personalnarrative about an accident.4.2 Procedure Used to Check  the TextsThe procedures used to check these texts variedfrom helper to helper as a function of his ability toread and to grasp what was expected of him by way ofediting or correcting.
The most knowledgeable helpertook pen in hand and proceeded to correct and editwith intervention (by the first author) only on certainmatters of spelling (where the official orthography - -which was not known to him - -  was in conflict withhis intuitions based on the writing of Spanish).
Thishelper fully grasped the task of editing: he wouldfrequently back up (as he proceeded through thetexts) to read several sentences before the one he wasfocusing on to see that the passage read smoothly.
Hemade a fair number of changes in word order andsome that were clearly intended to bring the discoursestructure of the text more into line with his conceptionof what it should be.
(This raised an interesting prob-lem, one which has no obvious solution, namely howcan one distinguish between those changes which areessential to the intelligibility and good style of the TDtext from those which make the text conform to apersonal style?
And how would one train achecker/editor  to distinguish between these?
).The most common situation was that the helperwas illiterate (or that he had rather minimal readingskills in Spanish).
In this case it was necessary to readthe text to him sentence by sentence, pausing andsoliciting corrections, suggestions, and impressions ifthese were not forthcoming, and monitoring his under-standing of the text.
The main drawback of this me-thod is that it was difficult (usually nearly impossible)to get good reactions as to the discourse features ofthe text.
(And on a second reading, the helpers wereunwilling to criticize the text which they had just cor-rected).Some text was checked merely by handing it to aperson (who in each case was a teacher at the second-ary or university level) with the instruction to correcti t - - to  make it good text for his dialect.
In these casesvery little was done; far fewer changes were madethan in any case where a linguist worked with thecorrector/editor.Despite these and other drawbacks, it was felt that,by and large, the checking and correcting did bring theTD texts extremely close to what would be adequateeven for Scripture translation.
(Of course, this is asubjective judgment).5.
Results of Check ing  the Computer  Adapted  TextChecking the computer-adapted text with nativespeakers of these dialects has revealed both the gener-al strength of the program an an interesting residue ofdisparities between computer-produced text and textafter subsequent corrective diting.5.1 General  Resu l tsThe results of testing the computer-adapted texts inthe areas where the various target dialects are spokenhas been very encouraging.First, thousands of changes were correctly made bythe program.
Samples of the text adapted to L1Q werecounted to estimate the program's quantitative ffects.It changed about 760 morphemes per 1000 words oftext.
The native helper suggested about 190 additionalchanges per 1000 words of text, and these changesinclude some which are editorial rather than dialect-related.
(This was an extreme; all helpers for otherdialects suggested far fewer changes of the same ma-terial).
So the program seems capable of doing be-tween 80 percent and 95 percent of the necessary oradvisable dialect-related changes.
These figures are ofless practical importance than the qualitative fact thatthe program made these texts fully comprehensible tothe native helpers.174 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect AdaptationOf the corrections which field testing brought tolight, a rough estimate suggests that well over 90 per-cent could also have been made (and eventually willbe made) by the program by simple modifications ofthe data lists made available to it.
(The bulk of thesechanges involve the spelling of Spanish loans, which inthe experimental tests were written as in Spanish butwhich will eventually be written according to Quechuaorthography).
This means that only a very small resi-due of changes will not be made by the program, thesechanges being left for the checker/editor.The computer-adapted text was - -  with very fewexceptions - -  completely intelligible to thechecker/editors,  and this would not have been thecase for material which had not been pre-adapted.Thus it seems safe to say that one consequence ofcomputer adaptation is that the resultant ext could bechecked by a person who knew only the target dialect,his task being to make the text sound more natural inhis dialect.
On the same basis, computer adaptationcan make an existing translation in a related languageor dialect accessible to a native translator.It has been our feeling that pre-adapting with acomputer would enable the checker/editor  to considermore significant changes because it relieved him of the(overwhelming number of) rather superficial and sys-tematic changes.
This experiment has not verified this(nor contradicted it) because those who helped werenot trained in the task of checking/editing, which-- i tis assumed--wi l l  be the case in the eventual applica-tions.
(Training checker/editors,  who will work frompre-adapted text, seems a reasonable task.
By con-trast, to train persons to make all the changes, workingdirectly from the SD text, would be a formidable if notimpossible task.
But by first preadapting the text, thatwhich must be done manually by the checker/editor,and consequently what he must be trained to do, isreduced to well within the feasible).One implication of the results of this experiment isthat the range of dialects for which there should be asingle primary translation has been considerably en-larged.
Mutual intelligibility is no longer an adequatebasis on which to make decisions about the allocationof linguistic or translation personnel.
Mutual intelligi-bility may be very low for some extremely trivial, su-perficial reason, and even if it is low because of agreat many, seemingly complex factors, so long as theyare systematic, computer adaptation may make other-wise unintelligible text quite intelligible to a speaker ofthe target dialect, intelligible enough that he can edit itwithout some other means of discovering its meaning.5.2 Disparit ies Between Computer -Adapted  andFinal TD TextsThis section lists kinds of text changes which werediscovered to be necessary to make the computer-adapted texts better conform to the TD's.
One pointseems inevitable: there will always be a non-trivialresidue of changes which cannot be done by thecomputer.
Thus, it will always be necessary that theTD texts be manually corrected or edited.
So ratherthan strive to make the program do all the changingpossible, it is wise to be content with a program whichdoes a significant amount of the changes- - those "low-level" changes which are systemat ic - -and not undulycomplicate the program by attempting to make it doan unrealistic amount.
The proportion of all of thedesired changes which is accomplished by the presentprogram seems entirely satisfactory; no further devel-opment is needed to change the balance between man-ual and programmed changes.It was gratifying to find that, although some ofthese residual kinds of changes (described below) weredifficult or impossible to program, they caused littledifficulty for the checkers in the field test.
The rawcomputer-adapted text was as good as a conventionalrough draft, and could have been used in the sameway.1.
Changes due to cultural differencesThe Quechua culture is not completely homogene-ous throughout he Andes; there are cultural differ-ences which give rise to certain problems in adaptingfrom one dialect to another.In HgQ, the expressions for the time of day aretied to the practice of chewing coca, e.g., chaqcha inti(coca:chewing sun) mid-morning coca break (roughlyat 10:30 AM) and mallway inti or mallway oora, whichrefers to the time of the mid-afternoon coca break.
Inother areasmJunin,  for example- -where the chewingof coca plays a lesser part in the culture, time is notindicated by reference to coca chewing, presumablybecause there are no "institutionalized" times forchewing.
In these areas time is told either by expres-sions borrowed from Spanish, e.g., las tres '3 o'clock'or by reference to the position of the sun, e.g., intiyarpunan oora (sun falling time) '5:00-6:00 PM'.2.
Different complementsIn HgQ, the complement of a phasal verb 2 is aninfinitive (object) complement;  e.g., miku-y-taqallaykusha (eat - INF -ACC he:began) 'He began toeat.'
But in LIQ, the complement to a phasal verb isan adverbial clause, e.g., miku-r qalaykusha (eat-ADVhe:began) 'He began to eat.
'American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 175David J. Weber and Wil l iam C. Mann Prospects for Computer-Assisted Dialect Adaptation3.
CaseIn HgQ forgiveness is expressed by the verbperduna- (borrowed from the Spanish perdonar) andthat of which one is forgiven is expressed by anaccusative noun phrase; e.g., noqa qam-ta huchayki-taperdunaami (I you-ACC your:sin-ACC I:forgive:you)'I forgive you your sin.'
In DoQ, it is expressed by anablative noun phrase: noqa qam-ta huchayki-pitaperdunaami (I you your:sin-ABLATIVE I:forgive:you)'I forgive you from your sin.
'34.
Spanish loansThe process of adaptation must deal with differ-ences in what elements of Spanish have been bor-rowed and how they have been assimilated.
So, adapt-ing from HgQ, we have:1.
A Spanish loan changed to a native Que-chua word, e.g., HgQ alberti- becomingLIQ yaasi- 'to advise'.2.
A Quechua word becoming a Spanish loan,e.g., HgQ pachaku- becoming L1Qposadaku- 'to take lodging'.3.
A Spanish loan becoming a different Span-ish loan, e.g., HgQ iwal becoming PaQpareehu ' together (with)', HgQ sabli(from Spanish sable 'saber') becomingYaQ macheti (from Spanish machete).4.
Spanish loans in different degrees of as-similation, e.g., HgQ ligi- (highly assimi-lated) becoming LIQ liyi- 'to read' fromSpanish leer ; HgQ rigi- (highly assimilat-ed) becoming DoQ kriyi- 'to believe' fromSpanish creer ; HgQ iskirbi- becomingDoQ iskribi- 'to read' from Spanishescribir ; HgQ pakillaa becoming DoQDyosolpaki 'thank you' from Spanish Diosse 1o pague 'May God repay you'.adequate merely to say fiyupa pununaptin'because they were really sleepy'.2.
In HgQ, 'to greet' is expressed by adyustaqo-, literally, 'to give an adios'.
In otherdialects this is expressed simply by theSpanish loan saluda- 'to greet'.3.
In HgQ, to say that someone began tosob, one says waqayman churakaran(to:cry he:was:placed).
In DoQ waqay-man chayarqan (to:cry he:arrived).4.
The HgQ expression, tapriypa tupaypa,which means roughly 'end for end, headover heels' is unknown in e.g., JuQ.5.
In HgQ, roosters are said to sing (kanta-),whereas in YaQ, to cry (waqa-).It was encouraging to note a case in which an idio-matic usage is preserved even though the verb root ischanged.
The case is HgQ wasi-ta hata-ra-chi- (house-ACC stand-RI-cause-) 'to raise a house' (literally, 'tocause a house to stand').
In the dialects to the east,the same idiom is used but with the local reflex of*shaya- 'to stand'; thus in DoQ, 'to raise a house' isexpressed wayita sharkatsi-.6.
Auxiliary constructionsHgQ has a construction which indicates that someaction or event is imminent.
Some dialects lack theimminent construction.
For such dialects it was neces-sary to change this to the periphrastic future.7.
Suffixes present in one dialect but absent in anotherIn LIQ there is a fairly common verbal suffix -skiwhich HgQ does not have.
In adapting from HgQ toLIQ it was left to the checker/edi tor  to insert -skiwhere appropriate.5.
IdiomsIdiomatic expressions vary from dialect to dialect(although very little).
For example,1.
HgQ nawinkuna fiyupa pununaptin(their:eyes really because:they:desire:sleep) 'because their eyes really wanted tosleep' is an idiomatic way to say that theywere extremely sleepy.
This idiom is notused in LIQ, DoQ, and YaQ, where it is2 A phasal verb is one which refers to the starting, stopping,continuing, et cetera of the action expressed by its complement,e.g., to start to eat, to stop talking, etc.3 This difference may be due to HgQ having assimilated theloan more highly than DoQ; the ablative would be used in Spanish:Yo te perdono de tus pecados 'I forgive you from your sins.'8.
PluralizationThe pluralization algorithm works perfectly, in thatwhenever there is a pluralizer in the SD, the verb isappropriately pluralized in the TD.
However,  thistreatment is deficient for the following reason: inHgQ (the SD for the present experiment) only about30 percent (a rough guess) of those verbs which havea plural subject or object are actually marked as beingplural in the verb.
In other dialects a much greaterpercentage of the verbs which have plural subjects orobjects are marked plural.
For LIQ, this might be ashigh as 90 percent.
In adapting from HgQ to LIQ, fartoo few pluralizers were inserted because there weretoo few pluralizers in the HgQ verbs to trigger theprocess which inserts them into the TD verbs.176 Amer ican Journal  of  Computat iona l  Linguist ics,  Vo lume 7, Number  3, Ju ly -September  1981David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation9.
Differences in subcategorizationIn one of the texts, the fox reports that the cat is"slaughtering" (pishta-) the lard jar.
Virtually all theQuechua checkers from other dialects wished tochange "slaughter" to "claw", this because only some-thing animate can be slaughtered, or to put it in lin-guistic parlance, because pishta- 'slaughter' is subcate-gorized as having an animate object in those TD's,whereas it seems to be not so subcategorized in HgQ.
410.
Tense differencesIn HgQ there is a simple past tense, marked by thesuffix -ra; there is also an aspectual marker -rqu,which means roughly 'suddenly, momentarily'.
Insome dialects this aspectual marker seems to havebecome a recent past tense marker giving rise to acontrast between recent and remote past.
This raisesa problem for adapting from HgQ to such a dialect,namely, determining when it is appropriate to use therecent past and when the remote past.5.3 Side Benefits of Using Computers in Adaptat ionMany unexpected side benefits of computer aidedadaptation have been recognized in the course of thisexperiment.
First, the process of  checking adapted textswill identify many improvements hat can be made in thesource text.Second, the translations of a particular source textused in neighboring dialects will differ principally onlyin being dialect variants.
More fundamental differ-ences could lead to disputes about which is the moreaccurate or appropriate rendering of the text; dialect-based differences in texts are not likely to do so.Third, the SD and TD texts will be more error-freethan would otherwise be the case, in several ways.Because WA usually succeeds in analyzing a word onlyif it is spelled exactly right, the program has the effectof identifying essentially all of the typographical errorsin the SD text.
And since the computer does an im-peccable job of fabricating the TD word, that word isspelled correctly, and consistently from instance toinstance.Fourth, the corrections required to convert thecomputer-adapted text into a final TD text are not sonumerous as to require retyping of the text.
This isnot the case for most manual adaptations.
The finaltext can be produced by on-line editing of thecomputer-produced text, with significant savings ofproof-reading effort.Fifth, the program leads to a greater understandingof 1) the structure of the SD, (since WA must containa fully explicit morphology), and 2) the dialect situa-tion.
It provides a medium in which to express theseinsights in a fully explicit manner.6.
ConclusionsThis project has explored the feasibility of using acomputer to assist in the adaptation of material fromone dialect to another, using central Quechua dialectsas its test-ground.
All the results suggest hat a com-puter can be programmed to do a significant amount ofadaptation, but this depends on incorporating a signifi-cant amount of knowledge about the source and targetdialects into the program in order that it be able toanalyze source dialect words, make changes, and re-construct a correct arget dialect word.References 51.
Landerman, P., "The Proto-Quechua First Person Marker andthe Classification ofQuechua Dialects," 1978.
Manuscript2.
Weber, D.J., Suffix-as-Operator Analysis and the Grammar ofSuccessive Encoding in Llac~n (Hu~nuco) Quechua.
SIL, Peru1976.3.
Weber, D.J., W.C. Mann, "Prospects for Computer-AssistedDialect Adaption," Notes on Linguistics Special Issue No.
1,1979.
(Available from SIL, 7500 West Camp Wisdom Road,Dallas, Texas 75236, cost: $.75)David J. Weber is a member of  the Peru branch ofthe Summer Institute of  Linguistics and is also a gradu-ate student at the University of  California at Los Angeles(UCLA).
He received the M.A.
degree in Linguisticsfrom UCLA in 19 78.William C. Mann is a member of  the research staf fo f  Information Sciences Institute at the University ofSouthern California.
He received the Ph.D. degree incomputer science f rom Carnegie-Mellon University in1973.4 This example is weak because probably pishta- is also sosubcategorized in HgQ, the violation in this case being tolerablebecause it is somewhat metaphorical.
Whatever the case, there willbe some minor subcategorization differences from dialect o dialect.5 We have searched for references in the literature or othersigns of comparable prior work on computer-aided dialect adapta-tion, and have found none.American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 177
