THE SEMANTIC L INKER-  A NEW FRAGMENT COMBININGMETHODDavid Stallard and Robert BobrowBBN Systems and Techno log ies ,  Inc.70 Fawcet t  St.Cambr idge ,  MA 02138ABSTRACTThis paper presents the Semantic Linker, the fallbaek componentused by the the DELPHI natural language component of the BBNspoken language system HARC.
The Semantic Linker is invokedwhen DELPHI's regular chart-based unification grammar parser isunable to parse an input; it attempts to come up with a semanticinterpretation by combining the fragmentary sub-parses left over inthe chart using a domain-independent method incorporating generalsearch algorithm driven by empirically determined probabilities andparameter weights.
It was used in the DARPA November 92 ATISevaluation, where it reduced DELPHI's Weighted Error on the NLtest by 30% (from 32% to 22%).1.
INTRODUCTIONAn important problem for natural anguage interfaces, aswell as for other NL applications such as message process-ing systems, is coping with input which cannot be handledby the system's grammar.
A system which depends on itsinput being grammatical (or on lying within the coverage ofits grammar) simply will not be robust and useful.
Some sortof"fallback" component is therefore necessary as a comple-ment to regular parsing.This paper presents the Semantic Linker, the fallback com-ponent used by the the DELPHI natural language componentof the BBN spoken language system HARC.
The SemanticLinker is invoked when DELPHI's regular chart-based unifi-cation grammar parser is unable to parse an input; it attemptsto come up with a semantic interpretation by combining thefragmentary sub-parses left over in the chart.
It was usedin the DARPA November 92 ATIS evaluation, where it re-duced DELPHI's Weighted Error on the NL test by 30%(from 32% to 22%).The Semantic Linker represents an important departure fromprevious proposals, both our own \[1\] and others \[2\], in thatit casts fragment combination as a general search problem,rather than as a problem of task model template matching (asin \[4\]) or as an extension to the existing parsing algorithm(as in \[3\]).
Rather than reconstruct a parse tree, the goalof the search is to combine all the fragments into the mostminimal and plausible connected graph, in which the linksare not syntactic descendancy, but logical binary relationsfrom the domain, such as "AIRLINE-OF", "ORIG-OF" etc.States in the search space are partial connections of the frag-ments: in other words, a set of links.
There a two types of"move" to reach a new state from an existing one.
One addsa new link between fragments, and the other "hallucinates"an object to bridge two fragments that could not otherwisebe linked (corresponding roughly to a notion of ellipsis).A success terminal state is one in which all the fragmentshave been linked.
States have features associated with theirconstituent links and a system of weights on the featuresdetermines a score that is used to guide the search.The advantages of this formulation are its domain-independence, flexiblity, extensibility, and ability to makeuse of statistical data.
In particular:?
No assumption eed be made about constraining taskmodels?
The state space can be searched in any order?
New features are straightforward to add?
Probabilities of relations determined from (parseable)corpora can be used?
Weights on features are potentially derivable by auto-marie trainingIn the next sections we turn to a more detailed descriptionof data structures and algorithms.
We first give some nece-sary background on semantic interpretation i the DELPHIsystem, and on the generation and interpretation f fragmen-tary sub-parses in it.
Next, we show bow this framework isused to generate all possible connections between pairs ofdifferent fragment objects, and bow probabilities and otherfeatures are assigned to these connections.
We then showhow we efficiently search the space of combinations of suchlinks in order to find the minimal and plausible set of con-nections, and bow such link combinations are turned intofinal interpretations.
Finally, we give quantitative results,and discuss our future plans.372.
SEMANTIC  INTERPRETAT ION OFFRAGMENTSThe cenual notion in DELPHI's syntactic-semantic interfaceis the "grammatical relation".
Grammatical relations includethe familar deep-structure complement relations of subject,direct-object e c., as well as other various adjunct relations,such as PP-COMP in the rule below:(NP etc.
)->HEAD (NP etc.
)PP -COMP (PP etc.
)The special grammatical relation "HEAD" denotes the headof the phrase.
All other grammatical relations are said to"bind" a constituent they label - their "argument" - to thishead to make a new object of the same category as the head.Here, a PP argument is bound to an NP head to make a newNP.Binding operates on the semantic interpretation a d subcat-egorization i formation of the head and on the semantic in-terpretation of the argument to produce the semantic inter-pretation of the new phrase.
In principle, the relationshipbetween inputs and output is completely arbitrary.
In prac-tice, however, it most often consists of an addition of a pair(RELATION, ARG-INTERP) to what are termed the "bind-ings" of the head input.
For example, in the case of "flighton Delta" the pair added would be(FL IGHT-AIRL INE-OF,  DELTA)In everything that follows, we will make this simplifyingassumption.We can then speak of a translation R ~ r from a grammaticalrelation to a semantic relation.
For the present example, thistranslation would be:PP-COMP(ON)  -> FL IGHT-A IRL INE-OFwhere the grammatical relation PP-COMP is further sub-divided by the preposition "ON" (and the requirementson semantic type are implicit from the relation FLIGHT-AIRLINE-OF).
We will term such a translation a "realizationrule" because it shows how the semantic relation FLIGHT-AIRLINE-OF can be syntactically realized in terms of anon-PP.
The set of all such realization rules (large in num-ber for a non-trivial domain) is stored in a knowledge baseseparate from the parser and interpreter code.The interpretation f any parse tree can now be representedas an isomorphic semantic tree, in which the nodes are thesemantic interpretation objects of open-class lexical itemsand the links are the semantic relations between them.
Sucha structure can obviously also be represented as a set ofn semantic objects and n-1 triples consisting of a semanticrelation and head and argument semantic objects.
For ex-ample, "Delta flies a 747 to Denver" would be representedin graph form as:/ "AIRCRAFT-OF -> 747FLY  .
.
.
.
A IRL INE-OF  -> DELTA\ .
.
.
.
.
DEST-OF  -> DENVER:TOwhere a PP such "to Denver" is represented asits NP objecttagged by the preposition.When a complete parse of an utterance cannot be performed,we are left with a set of fragmentary analyses in the chartwhich correspond to constituent analyses of portions of theinput string.
The Fragment Generator (essentially the sameas was reported on in \[1\]) extracts the most probable frag-ment sub-parses associated with the longest sub-strings ofthe input, using probabilities associated with the producinggrammar rules (as in \[5\].The semantic interpretations of the parse-fragments aretreated in the same way as those of a complete parse: asa set of objects and triples.
As a simple example, sup-pose we have the three fragments "to Boston", "Denver"and "Delta flights on Monday".
Then the three correspond-ing sub-graphs are:BOSTON:TODENVERFL IGHTS l  .
.
.
.
.
.
A IRL INE-OF  -> DELTA\ DAY-OF-WK -> MONDAY:  ONThe problem of connecting the N fragments is then reducedto finding a set of relation-links which will connect a pairof objects in N-1 different fragments.3.
COMPUTING THE L INKS AND THEIRPROBABIL IT IESThe Semantic Linker first computes the link database, whichis the set of all possible links between all pairs of objects inall pairs of different fragments.
These links are computedusing the same set of realization rules that drive the parserand semantic interpreter, and depend on the semantic typesof the two objects and on the preposition tag (ff any) of thesecond object.
For the set of fragments in our example thelink database is:38la.
FL IGHTS1- - -  DEST-O?lb.
FL IGHTS1- - -  OR IG-OF-> BOSTON:TO->BOSTON:TO2a.
FL IGHTS1- - -  DEST-O?
-> DENVER2b.
FL IGHTS1- - -  OR IG-OF  -> DENVER3a.
DENVER- - -  NEARBY-TO -> BOSTON: TOwhere the links are grouped together in a ordered list ac-cording to the fragment-pairs they connect.
Since there arethree fragments there are three pairs.Links have a set of features which are established whenthey are computed.
The most important is the relationalprobability of the link, or:P (r, Cl, C2)where r is the semantic relation of the link and C1 and C2are semantic lasses of the two argument positions, whereC2 may be tagged by a preposition.
This is the probabilitythat a pair of objects of type C 1 and C2 are linked by bythe relation r in an interpretation (as opposed to by somedifferent relation or by no relation at all).A corpus of interpretations generated by hand could be usedto determine these probabili!Jes, but in our work we havechosen to work with a set of sentences that can be correctlyparsed by the regular DELPHI parser.
Since the seman-tic interpretations of these parses are just sets of triples theprobabilities can be determined by counting.
Approximately3000 interpretations are currently used for our work in ATIS.From this corpus, we can determine that the link la hasa high (.89) probability of connecting a FLIGHT andCITY:TO object when these are present, whereas the link3a has a near zero probability, since the relation NEARBY-CITY-OF occurs very infrequently between two cities.We have found it convenient to use the log of these probabil-ities, scaled up and rounded to the lowest negative integer, asthe actual value of the link probability feature.
Additionally,maximum and minimum values of this number are imposed,so that even a highly likely link has a small negative score(-1), and a highly unlikely link has a finitely negative one(-70).Links can have other features depending on assumptionsmade in computing them.
For example, a link can be com-puted by ignonng the prepositional tag of the second ob-ject, in which case the link is given the feature "IGNORES-PREP".
An example would be lb above, which ignores thepreposition "to".
A link can also be computed by assuminga prepositional tag that is not present, giving the link thefeature "ASSUMES-PREP", as in 3a, where the preposition"near" is assumed.
As we shall see in the next section,these features are also assigned negative integers as penal-ties, balancing out any higher elational probability the linkmay have gained from the assumptions made by it.4.
SEARCHING THE SPACE OFCOMBINAT IONSThe problem of finding a connection between the N frag-ments is simply the problem of picking at most one linkfrom each of the link-groups in the link database, subject othe constraints that all N fragments must be linked and thatno links can be redundant.We can formalize these consU'aints as follows.
Let LINKEDbe defined as holding between two fragments if there is alink between them (in either direction), and let TC(LINKED)be the I~ausitive closure of this relation.
Then the first con-straint is equivalent to the requirement that TC(LINKED)hold between all different fragments F1 and F2.To formalize the non-redundancy onslraint, let LINKED-Lmean "linked except by link L".
Then the non-reduudancyconstraint holds ff there is no link L such that TC(LINKED)is the same as TC(LINKED-L).The problem as cast implies a search space in which eachstate is simply the set of links chosen so far, and a transi-tion between states is the addition of a new link.
We willfind it convenient, however, to include all of the followingcomponents in a sta~:1. suffix of the link-database list2.
chosen-links3.
combinational features4.
state score5.
fragments-linkedThe suffix of the link-database list consists of just the link-groups still available to be chosen.
The combinational fea-tures are those arising from the combination of particularlinks, rather than from individual inks themselves.
Thestate score is the judgement of how plausible the state is,based on its features and those of its links.
We want to findthe most plausible success state, where a success state isone which satisfies the constraints above, as recorded on thefragments-linked slot.Pre-success states reside on the state queue.
The state queueinitially consists of just the single state START.
START hasa pointer to the complete link-group list, an empty set ofcombinational features and links chosen and a score of zero.Search proceeds by selecting a state from the queue, andcalling the function EXPAND-STATE on it to produce zero39or more new states, adding these to the state queue and re-peating until suitable success tates are found or the queuebecomes empty.
Although this formulation allows the statespace to be searched in any order, our implementation nor-maUy uses a best-first order choice.
This simply means thatat selecti(m cycle, the best pre-success states are chosen forexpansion.The function EXPAND-STATE works by taking the firstlink-group from the link-group list suffix whose fragmentsare not already indirectly connected by the state and generat-ing a new state a new state for every link L in the link-group.The links-chosen of these new states are the links-chosen ofthe parent state plus L, and the link-group suffix is the re-mainder of the parent's link-group suffix.
EXPAND-STATEalso generates a single new state whose link-group list suf-fix is the remainder but whose links-chosen are just those ofthe parent.
This state represents he choice not to directlyconnect he two fragments of the link-group, and is giventhe feature "SKIP".In our example, the first call to EXPAND-STATE wouldgenerate three new states from START: state $1 having theset {la} as chosen-links, a state $2 having the set {lb} asits chosen-links and a state $3 having the empty set {} asits chosen-links, and the feature-list {SKIP}.The score of a state is determined by summing the weightedvalues of its features and the features, including the log-probabilities, of its chosen links.
Since the weights andlog-probabilities are always negative numbers, the score ofa state always decreases monotonically from the score of itsparent, even in the case of a SKIP state.At this point in our example, the state S1 has the best score,since its probability score is good (-2) and it has no "blem-ish" features, unlike the state $2, whose link lb has theIGNORES-PREP feature.
The SKIP state $3 is also not asgood as S 1, because the weight assigned to SKIP (-7) is se-lected so as to only be better than a link whose probabilityis lower than .50.Thus, the state S1 is selected for expansion, resulting in thestates SI-1, S1-2 and S1-3.
The feature "CLASH", whichresults when a link with single-valued R (R a b) is combinedwith a link (R a b'), is assigned to S 1-1, because it assignsthe link 2a on top of la.
The state S1-2 assigns the link2b, which does not involve a clash.
Both SI-1 and S1-2 aresucess tates, and are therefore not expanded further.Search then returns to the SKIP state $3.
Its children allhave lower scores than the success tate S 1-2, however, andgiven the guarantee that score decreases monotonically, anyeventual success tates resulting from them can never be asgood as S 1-2.
They are therefore pruned from the search.The same happens with the descendants of other expansioncandidates.
The queue then becomes empty, and the bestsuccess tate S 1-2 is chosen as the result of fragment com-bination.4.1.
HallucinationSuppose that instead of the example we have an utterancethat does not include the word "flights":Boston to Denver on Monday DeltaThis utterance generates the fragments "Boston", "to Den-ver", "on Monday" and "Delta".
Clearly, no complete set oflinks can be generated which would fully connect his set,without an object of semantic lass FLIGHT or FARE to actas a "hub" between them.To handle these situations, the Semantic Linker has a sec-ond type of state transition in which it is able to "hallu-cinate" an object of one of a pre-determined set of clases,and add link-groups between that hallucinated object and thefragment structures already present.
In the ATIS domain,only objects of the classes FLIGHT, FARE, and GROUND-TRANSPORTATION may be hallucinated.The hallucination operation is implemented by the func-tion EXTEND-STATE.
It is invoked when the functionEXPAND-STATE returns the empty set (as will happen wheninput state's link-group list is empty) and returns tates withthe new link-groups added on, one for each of the allowedhallucination classes.
These states are assigned a feature not-ing the hallucination, sub-categorized by the semantic lassof the hallucinated object.
Different penalty weights are as-sociated with each such sub-categorized feature, based on thedifferences between probability of oecurence of the classesin corpora.
In ATIS, FLIGHT hallucinations are penal-ized least of all, FARE hallucinations more, and GROUND-TRANSPORTATION hallucinations most of all.A state descended from one extended by hallucination cannotbe extended again, and if it runs out of link-groups beforeconnecting all fragments it is declared "dead" and removedfrom the queue.4.2.
Handling Corrections and Other FeaturesSeveral other combinational features influence the actions ofthe Semantic Linker with respect to such matters as handlingspeaker corrections and judging appropriate opology for thegraph being built.Speaker corrections are an important type of disfluency:40Tell me the flights to Denver uhh to Boston $.
AFTER COMBINAT IONThis will produce the fragments "Tell me the flights to Den-ver" and "to Boston".
Since a flight can have only oneDEST-OF the fragment "to Boston" can not be connectedas is.
One strategy might be to ignore the "to" preposi-tion and attempt to link "Boston" as an ORIG-OF with theIGNORE-PREP feature.This clearly would not produce the correct interpretation,however.
The Linker provides an alternative when the clash-ing value is to the right of the existing value in the string.In this case, the link receives the combinational feature RE-PLACEMENT, which is not penalized strongly.
If the rela-tional probability of the DEST-OF link is good, it will defeatits IGNORE-PREP rival, as it should.Related to correction is the operation of merging, in whichtwo nodes of a common semantic type are merged into one,and the appropriate adjustments made in the link-databaseand links-chosen for the state.
This is appropriate for certainsemantic lasses where it is unlikely that separate descrip-tions (unless they are combined in a conjunction) will appearin an interpretation for the utterance:Show me flights to Boston flights to Boston at 3 pmAnother feature influences the topology of the graph theLinker constructs.
Nothing in the algorithm so far requiresthat graph structure of connections ultimately produced re-main a tree, even though the input fragment interpretationsthemselves are trees.
It is perfectly possible, in other words,for there to be two links (R a b) and (R' a' b) in which thesame node is shared by two different parents.Since we are not trying to produce a syntactic structure, buta semantic one in which the direction of relations is oftenirrelevant, we do not forbid this.
It is discouraged, however,since it sometimes indicates an inapproriate interpretation.The combinational feature MULTI-ROLE is assigned to astate with such a combination of links, and is penalized.Finally, we point out that the log-probability perspective isuseful for assigning penalties to features.
If one has a link L1that has a high relational probability but also has a penaltyfeature, and another link L2 with a lower relational proba-bility but which does not have the penalty, one can decidehow far apart in probability they would have to be for thetwo alternatives to balance - that is, to be equally plausible.The difference in log-probabilities is the appropriate valueof the penalty feature.After the combination phase is complete, we have zero ormore success states from which to generate the utteranceinterpretation.
If there are zero success tates, an interpre-tation may still be generated through the mechanisms of"scavenging" and "back-off'.The Linker will find no success tates either because it hassearched the state-space exhaustively and not found one, orbecause pre-set bounds on the size of the space have beenexceeded, or because the scores of all extensible frontierstates have fallen below a pre-established pruning score forplausibility.
In this case, the state-space which has beenbuilt up by the previous search is treated as an ordinarytree which the Linker scans recursively to find the optimumpartial connection set, both in terms of fragment-percentagecovered and in state score.
This technique is termed "scav-enging".In some instances there may not even be partial connectionstates in the space.
In this case, the system looks for thelongest fragment to "back off" to as the interpretation.In formal evaluation of the DELPHI system conducted un-der DARPA auspices\[6\], both scavenging and back-off wereaborted in cases where there were obviously important frag-ments that could not be included in interpretation.
This wasdone because of the signiligant penalty attached to a wronganswer in this evaluation.If there is more than one success state, the Linker picksthe the subset of them with the highest score.
If there aremore than a certain pre-set number of these (currently 2),the Linker concludes that it none of them are likely to bevalid and aborts processing.Once a suitable set of objects and triples has been produced,whether through combination, scavenging or back-off, theLinker must still decide which of the objects are to be dis-played - the "topic" of the utterance.
The topic-choice mod-ule for the Semantic Linker is fairly similar to the topic-choice module of the Frame Combiner eported on in \[1\],and so we do not go into much detail on it here.
Basically,there are a number of heuristics, including whether the de-terminer of a nominal object is WH, whether the sort ofthe the nominal is a "priority" domain (in ATIS, GROUND-TRANSPORTATION is such a domain), and whether thenominal occurs only has the second argument of the triplesin which it occurs (making it an unconstrained nominal).The important new feature of the Semantic Linker's topicchoice module is its ability to make of use of links betweena nominal object and a verb like "show" as evidence fortopic choice.416.
RESULTS AND DISCUSSIONResults from the November 1992 DARPA evaluation[6]show that the Semantic Linker reduced DELPHI's WeightedError rate on the NL-only portion of the test by 30% (from32% to 22%).
This was achieved mostly by dramaticalylowering the No Answer rate (from 21% to 8%).It should be noted that these results were achieved with anearlier w~rsion of the Semantic Linker than that reportedhere.
In particular, this earlier version did not make use ofempirically determined probabilities, but rather used a moread hoe system of heuristically determined weights and fea-tures.
Nevertheless, these preliminary results give us someconfidence in our approach.Several areas of future work are seen.
One is the use ofautomatic training methods to determine feature weights.
Acorpus pairing sentences and sets of connecting links couldbe used in supervised training to adjust initial values of theseweights up or down.Another area, one in which we are already engaged, is usingthe Semantic Linker in ellipsis processing by treating thepreceding utterance as a fragment-structure into which tolink the present, elliptical one.A third area of future work is the use of relational probabil-ities and search in the generation of fragments themselves.Currently, the fragment generator component is entirely sep-arate from the rest of the Linker, which makes it diflicdt forcombination search to recover from fragment generation.
In-stead of trying to combine fragments, the Linker could seekto combine the semantic objects internal to them, in a pro-cess where inter-object links found by the fragment generatorwould have a strong but not insurmountable advantagesA last area of future work is to more fully integrate theSemantic Linker into the regular parsing mechanism itself,and to investigate ways in which parsing can be viewed assimilar to the linking process.References1.
Stallard, D. and Bobrow, R.Fragment Processing in the DELPHI SystemProceedings Speech and Natural Language Workshop Febru-ary 19922.
Seneff, StephanieA Relaxation Method for Understanding Spontaneous SpeechUtterancesProceedings Speech and Natural Language WorkshopFebruary 19923.
Linebarger, Marcia C., Norton, Lewis M., and Dahl, DeborahA.A Portable Approach to Last Resort Parsing and Interpretation(this volume)4.
Jackson, E., Appelt D., Bear J., Moore, R. and Podlozny, A.A Template Marcher for Robust NL InterpretationProceedings Speech and Natural Language WorkshopFebruary 19915.
Bobrow, RobertStatistical Agenda ParsingProceedings Speech and Natural Language WorkshopFebruary 19916.
Pallet, D., Fiscus, L, Fisher, W. and Garofolo, LBenchmark Tests for the Spoken Language Program(this volume)42
