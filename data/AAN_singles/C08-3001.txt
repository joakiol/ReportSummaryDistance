Coling 2008: Companion volume ?
Posters and Demonstrations, pages 145?148Manchester, August 2008Online-Monitoring of Security-Related EventsMartin Atkinson, Jakub Piskorski, Bruno PouliquenRalf Steinberger, Hristo Tanev, Vanni ZavarellaJoint Research Centre of the European CommissionInstitute for the Protection and Security of the CitizenVia Fermi 2749, 21027 Ispra (VA), Italyfirstname.lastname@jrc.itAbstractThis paper presents a fully operationalreal-time event extraction system which iscapable of accurately and efficiently ex-tracting violent and natural disaster eventsfrom vast amount of online news articlesper day in different languages.
Due to therequirement that the system must be mul-tilingual and easily extendable, it is basedon a shallow linguistic analysis.
The eventextraction results can be viewed on a pub-licly accessible website.1 IntroductionGathering information about violent and naturaldisaster events from online news is of paramountimportance to better understand conflicts and todevelop global monitoring systems for the auto-matic detection of precursors for threats in thefields of conflict and health.
This paper reportson a fully operational live event extraction systemto detect information on violent events and naturaldisasters in large multilingual collections of onlinenews articles collected by the news aggregationsystem Europe Media Monitor (Best et al, 2005),http://press.jrc.it/overview.html.Although a considerable amount of work on theautomatic extraction of events has been reported,it still appears to be a lesser studied area in com-parison to the somewhat easier tasks of named-entity and relation extraction.
Two comprehensiveexamples of the current functionality and capabil-ities of event extraction technology dealing withc?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.the identification of disease outbreaks and con-flict incidents are given in (Grishman et al, 2002)and (King and Lowe, 2003) respectively.
The mostrecent trends and developments in this area are re-ported in (Ashish et al, 2006)In order to be capable of processing vastamounts of textual data in real time (as in the caseof EMM)we follow a linguistically lightweight ap-proach and exploit clustered news at various pro-cessing stages (pattern learning, information fu-sion, geo-tagging, etc.).
Consequently, only a tinyfraction of each text is analysed.
In a nutshell, oursystem deploys simple 1 and 2-slot extraction pat-terns to identify event-relevant entities.
These pat-terns are semi-automatically acquired in a boot-strapping manner by using clustered news data.Next, information about events scattered over dif-ferent documents is integrated by applying votingheuristics.
The results of the core event extractionsystem are integrated into a real-world global mon-itoring system.
Although we mainly cover the se-curity domain, the techniques deployed in our sys-tem can be applied to other domains, such as forinstance tracking business-related events for riskassessment.In the remaining part of this paper we give abrief overview of the real-time event extractionprocessing chain and describe the particularities ofselected subcomponents.
Finally, the online appli-cation is presented.2 Real-time Event Extraction ProcessThe real-time event extraction processing chain isdepicted in Figure 1.
First, news articles are gath-ered by dedicated software for electronic mediamonitoring, namely the EMM system (Best et al,2005).
EMM receives an average of 50,000 newsarticles per day from about 1,500 news sources in145over 40 languages, and regularly checks for up-dates of news.
Secondly, the input data is groupedinto news clusters ideally including documentson one topic or event.
Then, clusters describingsecurity-related events are selected using keyword-based heuristics.
For each such cluster, the systemtries to detect and extract only the main event byanalysing all documents in the cluster.EMMNewsClustering /Geo TagText Pre-ProcessingPatternMatchingInformationAggregationEventsNEXUSFigure 1: Real-time processing chain.Next, each cluster is processed by our core eventextraction engine.
For each detected violent event,it produces a frame, whose main slots are: date andlocation, number of killed, injured or kidnappedpeople, actors, type of event, weapons used, etc.In an initial step, each document in the clusteris linguistically pre-processed in order to producea more abstract representation of the texts.
Thisencompasses: fine-grained tokenisation, sentencesplitting, matching of known named entities, la-belling of key terms and phrases like action words(e.g.
kill, shoot) and person groups.Once texts are grouped into clusters and lin-guistically pre-processed, the pattern engine ap-plies a cascade of extraction grammars (consistingof 1 and 2-slot extraction patterns) on each docu-ment within a cluster.
For creating extraction pat-terns, we apply a blend of machine learning andknowledge-based techniques.
The extraction pat-terns are matched against the first sentence and thetitle of each article from the cluster.
By processingonly the top sentence and the title, the system ismore likely to capture facts about the most impor-tant event in the cluster.
Even if we fail to detecta single piece of information in one document in acluster, the same information is likely to be foundin another document of the cluster, where it maybe expressed in a different way.Finally, since information about events is scat-tered over different articles, the last step con-sists of cross-document cluster-level informationfusion, i.e., we aggregate and validate informationextracted locally from each single article in thesame cluster.
For this purpose, simple voting-likeheuristics are deployed.Every ten minutes, EMM clusters the articlesfound during the last four hours.
The event extrac-tion engine analyses each of these clusters.
Theevent information is thus always up-to-date.
Theoutput of the event extraction engine constitutesthe input for a global monitoring system.3 Geo-tagging ClustersChallenges for geo-tagging clusters are that placenames can be homographic with person names andwith other place names.
We solve the former am-biguity by first identifying person names foundin our automatically populated database of knownpeople and organisations.
For the latter ambiguity,we adopted a cluster-centric approach by weight-ing all place names found in a cluster and by select-ing the one with the highest score.
For each cluster,we thus first establish all possible candidate loca-tions by looking up in the texts all place, province,region and country names found in a multilingualgazetteer (including name variants).
The weightsof the locations are then based on the place namesignificance (e.g., a capital city scores higher thana village) and on the place name hierarchy (i.e.
ifthe province or region to which the place belongsare also mentioned in the text, it scores higher).4 Pattern AcquisitionFor pattern acquisition, we deploy a weakly super-vised bootstrapping algorithm (Tanev and Oezden-Wennerberg, 2008) similar in spirit to the one de-scribed in (Yangarber, 2003), which involves somemanual validation.
Contrary to other approaches,the learning phase exploits the knowledge to whichcluster the news items belong.
Intuitively, thisguarantees better precision of the learned patterns.In particular, for each event-specific semantic role(e.g.
killed), a separate cycle of learning iterationsis executed (usually up to three) in order to learn1-slot extraction patterns.
Each cluster includes ar-ticles from different sources about the same newsstory.
Therefore, we assume that each entity ap-pears in the same semantic role (actor, victim, in-jured) in the context of one cluster.
An auto-matic procedure for syntactic expansion comple-ments the learning.
This procedure accepts a man-ually provided list of words which have identical(or similar) syntactic usage patterns (e.g.
killed,assassinated, murdered, etc.).
It then generatesnew patterns from the old ones by substituting foreach other the words in the list.
After 1-slot pat-terns are acquired, some of them are used to man-ually create 2-slot patterns like X shot Y.1465 Pattern matching engineIn order to guarantee that massive amounts of tex-tual data can be processed in real time, we havedeveloped ExPRESS (Piskorski, 2007), an effi-cient extraction pattern engine, which is capable ofmatching thousands of patterns against MB-sizedtexts within seconds.
The pattern specification lan-guage is a blend of two previously introduced IE-oriented grammar formalisms, namely JAPE usedin GATE (Cunningham et al, 2000) and XTDL,used in SPROUT (Dro?zd?zy?nski et al, 2004).A single pattern is a regular expression over flatfeature structures (FS), i.e., non-recursive typedfeature structures without structure sharing, wherefeatures are string-valued and ?
unlike in XTDLtypes ?
are not organised in a hierarchy.
Each suchregular expression is associated with a list of FSswhich constitute the output specification.
Like inXTDL, we deploy variables and functional oper-ators for forming slot values and for establishingcontact with the ?outer world?.
Further, we adaptedJAPEs feature of associating patterns with mul-tiple actions, i.e., producing multiple annotations(possibly nested).
An empirical comparison of therun-time behaviour of the new formalism againstthe other 2 revealed that significant speed-ups canbe achieved (at least 30 times faster).
ExPRESScomes with a pool of highly efficient core linguis-tic processing resources (Piskorski, 2008).6 Information AggregationOnce single pieces of information are extracted bythe pattern engine, they are merged into event de-scriptions by applying an information aggregationalgorithm.
This algorithm assumes that each clus-ter reports at most one main event of interest.
Ittakes as input the text entities extracted from onenews cluster with their semantic roles and consid-ers the sentences from which these entities are ex-tracted.
If one and the same entity has two roles as-signed, a preference is given to the role assigned bythe most reliable group of patterns (e.g., 2-slot pat-terns are more reliable).
Another ambiguity whichhas to be resolved arises from the contradictory in-formation which news sources give about the num-ber of victims.
We use an ad-hoc heuristic forcomputing the most probable estimation for thesenumbers, i.e., firstly the largest group of numberswhich are close to each other is selected and sec-ondly the number closest to the average in thatgroup is chosen.
After this estimation is com-puted, the system discards from each news clus-ter all the articles whose reported victim numberssignificantly differ from the estimated numbers forthe whole cluster.
Additionally, some victim arith-metic is applied, i.e., a small taxonomy of personclasses is used to sum victim numbers (e.g., gun-men and terrorists belong to the same class ofNon-GovernmentalArmedGroup).7 Event ClassificationAfter the single pieces of information are assem-bled into the event description, an event classifica-tion is performed.
Some of the most used eventclasses are Terrorist Attack, Bombing, Shooting,Air Attack, etc.
The classification algorithm usesa blend of keyword matching and domain spe-cific rules.
As an example, consider the followingdomain-specific rule: if the event description in-cludes named entities, which are assigned the se-mantic role kidnapped, as well as entities whichare assigned the semantic role released, then thetype of the event is Hostage Release, rather thanKidnapping.
If the event refers to kidnapped peo-ple and at the same time the news articles containwords like video or videotape, then the event typeis Hostage Video Release.
The second rule has ahigher priority, therefore it impedes the HostageRelease rule to fire erroneously, when the releaseof a hostage video is reported.8 Monitoring EventsThe core event extraction engine for English isfully operational since December 2007.
There aretwo online applications running on top of it whichallow monitoring events.
The first one is a dedi-cated webpage using the Google Maps JavaScriptAPI (see Figure 2).
It is publicly accessible at:http://press.jrc.it/geo?type=event&format=html&language=en and providesan instant overview of what is occurring where inthe world.
A small problem with this applicationis that it overlays and hides events that are close toeach other.The second application shows the same eventsusing the Google Earth client application.
Thegeo-located data is transmitted via the KeyholeMarkup Language (KML) format1supported di-rectly by Google Earth.2The application is re-1http://code.google.com/apis/kml/documentation/2In order to run it, start Google Earth with KML:http://press.jrc.it/geo?type=event&format=kml&language=en147Figure 2: Event visualisation with Google Mapsstricted to displaying at most half the globe, butit allows expanding overlaid events.Since it is important for stakeholders to bequickly and efficiently informed about the type andgravity of the event, various icons are used to rep-resent the type or group of events visually (see Fig-ure 3).
We use general forms of icons for violentevents and specific forms of icons for natural andman-made disasters.
For violent events, the gen-eral form represents the major consequence of theevent, except for kidnappings, where specific iconsare used.
Independently of the type of event, allicons are sized according to the damage caused,i.e.
it is dependent on the number of victims in-volved in the event.
Also, to highlight the eventswith a more significant damage, a border is drawnaround the icon to indicate that a threshold of peo-ple involved has been passed.The online demo is available for English, Italianand French.
We are currently working on adapt-ing the event extraction engine to other languages,including Russian, Spanish, Polish, German andArabic.
A more thorough description of the sys-tem can be found in (Tanev et al, 2008; Piskorskiet al, 2008).ReferencesAshish, N., D. Appelt, D. Freitag, and D. Zelenko.
2006.Proceedings of the workshop on Event Extraction and Syn-thesis, held in conjunction with the AAAI 2006 conference.Menlo Park, California, USA.Best, C., E. van der Goot, K. Blackler, T. Garcia, andD.
Horby.
2005.
Europe Media Monitor.
Technical Re-port EUR 22173 EN, European Commission.Cunningham, H., D. Maynard, and V. Tablan.
2000.
JAPE: aJava Annotation Patterns Engine (Second Edition).
Tech-nical Report, CS?00?10, University of Sheffield, Depart-ment of Computer Science.
?KidnapKAArrestRReleaseVVideoVManMade?Violent EventUndefined Violent EventKilled Violent EventInjured Violent EventKindnapped Violent EventArrest Hostage Release VideoRelease Violent EventNo ConsequnecesMan MadeDisasterMan MadeFireMan MadeExplosionND!NaturalDisterVolcanicEruptionTsunami Earthquake Landslide?Avalanche TropicalStormLightningStrikeStormSnowStormFlood Wild FireHeatwaveKey to SymbolsConsequence Significance (number of people involved)No Circle  = up to 10 Red Circle = More than 100Yellow Circle= between 10 and 100HumanitarianCrisisTrialUnclassifiedFigure 3: Key to event type icons and magnitudeindicatorsDro?zd?zy?nski, W., H.-U.
Krieger, J. Piskorski, U. Sch?afer,and F. Xu.
2004.
Shallow Processing with Unificationand Typed Feature Structures ?
Foundations and Appli-cations.
K?unstliche Intelligenz, 2004(1):17?23.Grishman, R., S. Huttunen, and R. Yangarber.
2002.
Real-time Event Extraction for Infectious Disease Outbreaks.Proceedings of the Human Language Technology Confer-ence (HLT) 2002.King, G. and W. Lowe.
2003.
An Automated InformationExtraction Tool for International Conflict Data with Per-formance as Good as Human Coders: A Rare Events Eval-uation Design.
International Organization, 57:617?642.Piskorski, J., H. Tanev, M. Atkinson, and E. Van der Goot.2008.
Cluster-centric Approach to News Event Extraction.In Proceedings of MISSI 2008, Wroclaw, Poland.Piskorski, J.
2007.
ExPRESS Extraction Pattern Recogni-tion Engine and Specification Suite.
In Proceedings of theInternational Workshop Finite-State Methods and Natu-ral language Processing 2007 (FSMNLP?2007), Potsdam,Germany.Piskorski, J.
2008.
CORLEONE ?
Core Linguistic EntityOnline Extraction.
Technical report 23393 EN, Joint Re-search Centre of the European Commission, Ispra, Italy.Tanev, H. and P. Oezden-Wennerberg.
2008.
Learning toPopulate an Ontology of Violent Events (in print).
InFogelman-Soulie, F. and Perrotta, D. and Piskorski, J. andSteinberger, R., editor, NATO Security through Science Se-ries: Information and Communication Security.
IOS Press.Tanev, H., J. Piskorski, and M. Atkinson.
2008.
Real-Time News Event Extraction for Global Crisis Monitor-ing.
In Proceedings of the 13thInternational Conferenceon Applications of Natural Language to Information Sys-tems (NLDB 2008, Lecture Notes in Computer Science Vol.5039), pages 207?218.
Springer-Verlag Berlin Heidelberg.Yangarber, R. 2003.
Counter-Training in Discovery of Se-mantic Patterns.
In Proceedings of the 41stAnnual Meet-ing of the ACL.148
