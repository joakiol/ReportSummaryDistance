TELEGRAM:A GRAMMAR FORMALISMFOR LANGUAGE PLANNINGDouglas E. AppeltArtificial Intelligence CenterSRI InternationalMenlo Park, CaliforniaO.
Abst ractPlanning provides the basis for a theory of languagegeneration that considers the communicative goals of thespeaker when producing utterances.
One central problemin designing a system based on such a theory is specifyingthe requisite linguistic knowledge in a form that interfaceswell with a planning system and allows for the encodingof discourse information.
The TELEGRAM (TELEologicalGRAMmar'} system described in this paper solves this prob-lem by annotating a unification grammar with assertionsabout how grammatical choices are used to achieve variousgoals, and by enabling the planner to augment he func-tional description of an utterance as it is being unified.The control structures of the planner and the grammarunifier are then merged in a manner that makes it possiblefor general planning to be guided by unification of a par-ticular functional description.1.
In t roduct ionBy viewing language generation as a planning process,one can not only account for the way people use languageto satisfy different goals they have in mind, but also modelthe broad interaction between a speaker's physical andlinguistic actions.
Formal models of planing can providethe basis for a theory of language generation in whichcommunicative goals play a central role.
Recent researchin natural-language neration \[1\]\[2\] has established thefeasibility of regarding planning as the basis for the genera-tion of utterances.
This paper examines ome of the prob-lems involved in devising a grammar formalism for such ageneration system that produces utterances and describesa particular implementation of a unification grammar, re-ferred to as TELEGRAM, that solves some of these prob-lems.The KAMP system \[1\] was designed with the problemsof multiple-goal satisfaction and the integration of physi-cal and linguistic ~etions in mind.
KAMP is a multiagentplanning system that can be given a high-level descriptionThis research was suppor ted  by the Nat ional  Science Foundat ionunder  Grant  MCS-8115105.
The author  is grateful  to Barbara  Groszfor helpful comments  on earl ier d~'afts of this paper.of an agent's goals, and then produce a plan that includesthe performance of both physical and linguistic actionsby several agents that will achieve the agent's goals.
Inthe development of KAMP it was recognized that syntactic,semanlic and pragmatic knowledge sources are necessaryfor the planning of utterances.
These sources of knowledgewere stored independently inside the system: a grammarwas provided in addition to the axioms that constitutethe agent's knowledge of the pragxnatics of communica-tion.
However, rather than have one process that decideswhat to say, drawing on knowledge about the world andabout communication, plus another independant processthat decides how to encode that knowledge into English,KA,XlP employs a single process that uses both sources ofknowledge to produce plans.The primary focus of the research on KAMP was therepresentation and integration of the knowledge neededto make plans involving utterances.
One area thatwas neglected was the representation of grammaticalknowledge.
KAMP relies on a very simple grammar com-posed of context-free rules that enable it to generate simplesentences.
Such phenomena s gapping are totally outsideof its capSbility.
Because of the ad hoc nature of the rep-resentation, modifications and extensions of its linguisticcoverage are very difficult.Another criticism of KAMP's approach was that therewas no obvious way to control the planning process.Instead of formulaLing a plan quickly.
KAMP would searcha large space of linguistic alternatives until it found an"(,primal" solution.
As some critics have pointed out, (e.g.,\[51) such exhaustive planning is often not needed in prac-tical ~ituations - -  and is certainly not how people produceutterances in real time.
KAMP would never produce anungrammatical sentence, because it could always do un-limited backtracking after making an incorrect decision.
"Flit' remainder of this paper describes how to use aunification grammar* to address these two problems ofr,,pr4.s~,ntation a d control.2.
Un i f i ca t ion  GrammarA unification grammar characterizes linguistic entities* ( .
ln i f ic~t ion gramma.r  has o f ten  been re fer red  to as Junctional gram-mar in the f i terature,  e.g., \[7\], J i l l .
It is re lated to and shares manyideas with systemic grammar  \[6\].74by collections of features called a functional description(FDs).
Each of the features in an FD has a value thatcan be either atomic or another functional description.
Aunification grammar is a large FD that characterizes thefeatures of every possible sentence in the language.
In thispaper, the FD that characterizes the intended utterance iscalled the teat FD and the FD that constitutes the gram-mar is called the grammar FD.The most salient feature of unification grammar thatdistinguishes it from other grammatical formalisms is itsemphasis on linguistic function.
All of the features usedby the grammar have equal status, with functional anddiscourse-related features like topic and focus sharing equalstatus with grammatical roles like subject and predicate,and with syntactic ategories like NP and VP.Unification grammars are particularly well suited forlanguage generation because they allow the encoding ofdiscourse features in the grammar.
A functional descrip-tion can be constructed incorporating these features, andthe syntactic details of the final utterance can then bespecified through unification with the grammar FD.
Theprocess that constructs the text FD can treat it as a high-level blueprint fleshed out by unification, thereby reliev-ing the high-level process of the need to consider low-levelgrammatical details.
This strategy was used by McKeown{111.Two functional descriptions can be unified by an algo-rithm that is similar to set union.
Suppose FI and F2 arefunctional descriptions.
To compute the unification, Fa, ofF, and Fz, written F3 = FI ~ Fz, the following algorithmis used:If (A,v,) is a feature-value pair, and ()'l,v,) E Fl andVz (fl, z) ~ Fz, or (f,, vl) E F2 and Vx(ft, z) ?~ Ft, then(:,, v, ) ~ &.If (fl, v,) E F, and (fl, vz) E Fz, then (fl, va) E/'3, wherethe following conditions apply:If v, -~ NIL then v3 = vz, and similarly for vz.If vl = ANY and v2 ~ NONE, then t,a = vz,and-similarly for vz.If v, ~ v~, then v3 = vl.If v, and v2 are functional descriptions, then v37)I ~ U2.If any one of the above conditions fails, then the unificationitself fails and the value of F1 ~ F2 is undefined.Functional descriptions can optionally contain a distin-guished feature called PATTERN that is used to specify thesurface order of constituents in the FD.
The unificationof two patterns is different in that it is based on decidingwhether or not the orderings represented by the two pat-terns are consistent.In spite of its advantages, there are some serious prob-lems with unification grammar if it is employed straightfor-wardly in a language planning system.
One of the mostserious problems is the inefficiency of the unificat;,,- !go-rithm as described above.
A straightforward applicationof that algorithm is very expensive, consuming an order-of-magnitude more time in the unification process than inthe entire planning process leading up to the constructionof the text FD \[11\].
The problem is not simply one ofefficiency, of implementation.
It is inherent in any algo-rithm that searches alternatives blindly and thereby doeswork that is exponentially related to the number of alter-natives in the grammar.
Any solution to the problem mustbe a conceptual one that minimizes the number of alter-natives that ever have to be considered.Another problem is that the text FD is not as high-levela blueprint as is really needed because very feature relatedto the speaker's intention to communicate must be part ofthe text FD when unification takes place.
This implies,for example, that every descriptor that is part of a refer-ring expression must be specified in advance.
This maybe unnecessary because for certain grammatical choices,the referring expression may be eliminated entirely.
Forexample, in the by-phrase in a passive sentence, referencemay be made pronominally {or not at all), in which casedescriptors are unnecessary.
Since the planner must knowthe linguistic context when planning descriptors, a noun-phrase FD is best constructed initially with a REFERENTfeature, and later expanded by adding features that cor-respond to the descriptors.While it is conceivable that the grammar could bedesigned to expand a REFERENT feature into a set ofdescriptors, that would amount to encoding in the gram-mar what is essentially a planning problem.
This is un-desirable because the grammar, being a repository of syn-tactic knowledge, should be separated from pragmaticknowledge.
Conversely, it is also desireable to separatedetailed syntactic knowledge from the planner, and thefailure to do so was a major shortcoming with KAMP.The next section describes how unification and plan-ning can be combined to allow syntactic knowledge to beseparated from the planner, but still allow the requiredflexibility of interaction between the planner and the gram-mar.3.
Combinat ion of Unification and PlanningThe TELEGRAM system solves the problems ofefficiency and modularity through a close coupling be-tween the processes of unification and planning.
(Thename TELEGRAM stands for TELEological GRAMmar be-cause planning and goal satisfaction are integreated intothe unification process.
)K.AMP divided its actions into an abstraction hierarchy.The action hierarchy, as it pertains to linguistic actions,75|IIIocutionary Actsu?
i IIISurface Speech ActsAskI I IConcept ActivationPropodUo~ ActsUtterance Acts \]Figure 3,1KAMP's Hierarchy of Linguistic Actionsis shown in Figure 3.1.
Actions called illocutionary actsare at the top of the hierarchy, with surface speech actsand concept activation actions falling below, while the ac-tua l  performance of the utterance is at the lowest level.lllocutionary acts are easily described at an abstract levelthat.
is best reasoned about by a conventional planning sys-tem, as was done in K.AMP \[|1 and by Cohen \[2 I. However,as one progresses down the hierarchy, the planning be-comes more and more dependent on the constraints of thegrammar, although goal satisfaction is still very much apart of the reasoning that takes place.
It is at the levelof surface speech act and concept activation actions thatthe planning and unification processes can be most advan-tageously merged.The means of combining planning and unificationworks as follows.
At the time the planner plans to per-form a surface speech act, enough information has beenspecified so that it knows the general syntactic structureof the sentence (declarative, interrogative, or imperative}.A functional description of the utterance is created andthen ~mified with the grammar.This functional description is very general and doesnot contain suMcient information to specify a unique sen-tence.
The functional description is elaborated uring theprocess of unification so that it adds features incrementallyto the functional description.
The planner is called uponby the unification algorithm at the appropriate time to addthe appropriate features.
The end result is a functionaldescription that is the same as if a complete functionaldescription of the intended utterance had been unified withthe grammar by means of a conventional unification algo-rithm that does not invoke planning.The planner is invoked by the unifier when either oftwo situations arises:The unifier detects a feature in the text FD thathas no corresponding feature in the grammarFD.
Such features are a signal that elaborationmust be performed.
The feature is annotatedwith a goal wff that the planner plans to achieve,and the resulting actions specify additions to thefunctional description being unified.
The unifi-cation process then continues in the normal man-ner.?
The unifier detects a choice in the grammarfunctional description that cannot be resolvedthrough the unification of atomic features.
Eachchoice in the grammar is annotated with a wffthat describes to the planner what the effectsof making the choice will be.
The plannerthen decides which alternative is most consis-tent with its plans, making an arbitrary choiceif insufficient information is available for a deci-sion.The combination of planning and unification thatresults has a number of benefits resulting from annotatinga grammar with information useful to the planner, ratherthan trying to work linguistic knowledge into the plannerin an ad hoc manner.The ability to perform action subsumption, the op-portunistic "piggybacking" of related goal~ as describedin Ill, is enhanced.
Whether or not one can incorporateadditional nonreferring descriptors into a noun phraseis governed by the structure and function of the nounphrase being planned.
For example, a pronominal refer-ence cannot incorporate any additional descriptors at all.Therefore, if a planner were to decide whether or not toperform action subsumption, it would have to know in ad-vance how a referent was going to be realized.
If this wereto be performed before unification, the planner would haveto have the detailed lin~-uistic knowledge to know that itwas possible.
With a simple grammar like KAMP'S thiswas possible, but with a larger grammar it is clearly un-desirable.The ability to do multiple-utterance and discourseplanning is also enhanced.
Since the grammar and plan-ner are closely coupled, information can be easily fed backfrom the ~rammar to the planner.
This feedback is one ofthe features that distinguish a language planning systemfrom a system that first decides what to say, then howto say it.
When an alternative is chosen, the planner hasinformation about the goal that is to be achieved throughthe selection of that alternative.
If unification based onthat selection fails, the planner, instead of blindly tryingother alternatives, can revise the entire plan - -  including76the incorporation of multiple utterances where only onewas planned originally.4.
Example.This example illustrates how a language system can usean annotated unification gramar like TELEGRAM.
Supposethat there are two agents operating in an equipment as-sembly domain, and that the planning agent decides thatthe other agent should know that the location of a screw-driver S I is in a particular toolbox, TB1.
He then plansthe illocutionary act*"Do(AGT1, Inform(AGT2, Location(S1) = TB1)).The planner then plans a surface speech act consist-ing of a declarative sentence with the same propositionalcontent as the illocutionary act.
However, instead of con-structing a syntactic-structure tr e by using context-freerules, as in K.AMP would do in this example, the TELEGRAMplanner will create a high-level functional description ofthe intended utterance.
For this example, the functionaldescription would look like the following.
"""CAT ----- S\[CAT = NP \]SUBJ = \[REFERENT = S1\[CAT = V \]VERB = \[LEX BE= \[PREP = \[LEX = IN\]p CAT --~ NPC, OMP \[ OB J=\ [REFERENT=TB1At this point., the planner is no longer directly in controlof the planning process.
The planner invokes the unifierwith the above text functional description and the gram-mar fimctional description, and relinquishes control to theunifical ion process.The unification process follows the algorithm describedin Section 2, until there is either an alternative in thegrammar that needs to be selected or some feature in thetext FD does not unify with any feature in the grammarFD.In this example, the second of these situations ariseswhen the noun phrase FDCAT=NP TBI\]REFERENT =** The precise meanings the elements of this representation aredescribed in \[1\], but  their intuitive meaning-J are adequate for under-s tand ing this paper.
*** Using the notat ion of Kay 17\]\[8\].is unified with the functional description of a noun phrasefrom the grammar:CAT --  NP \]PATTERN - -  (DET MODS HEAD QUAL)DET-  \[.. ,\]HEAD = \[CAT = N\]MODS -~ \[...1qUAL  = \[...1The FD for the noun phrase tells what the structure ofthe constituent is, but it does not contain a REFERENTfeature.
The straightforward application of the unificationalgorithm of Section 2 would simply yield the grammar FDalong with the feature "REFERENT ~ TBI," which isnot particularly useful.
However, the feature REFERENThas an annotation that tells the unifier that the plannershould be invoked with the goal of activating the conceptTBI  for AGT2.
The planner then plans a concept activa-tion action, using its knowledge about AGT I  and AGT2'smutual knowledge, perhaps inserts a pointing action intothe plan, and augments the text FD to resemble the fol-lowing:CAT = NP 1DESC = (Toolbox(TBl), Under(TBl, TABLEU)JThe new augmented functional description still doesnot unify with the grammar FD, but the annotation forthe DESC feature is written to insert FDs correspondingto each of the descriptors into the text FD.
This nextexpansion results in the following FD:"CAT = NPfNB  = J DET = \[SUBCAT = DEFHEAD = \[LEX = TOOLBO:qPREP = \[LEX ~ UNDER\]QUAL\ [CAT -- NPPOBJ  \ [REFERENT = TABLE1This FD can be unified directly with the grammar FD,using the algorithm described in section 2.
It is identicalto the one that would have been planned had the entireFD been specified at the start of the unification process.However, by postponing some of the planning, and plac-ing it under control of the unification process, the systempreserves the ability to plan hierarchically while enhancingits ability to coordinate physical and linguistic actions.5.
Comparison with Related Systems.There are several significant differences between TELE-GRAM and other natural-language-generation systems that77have been developed using unification grammar or systemicgrammar.The TEXT system developed by McKeown \[11\] uses aunification grammar to generate coherent multisententialtext and employs a straightforward unification algorithm.The unifier does not draw upon the system's pragmaticknowledge to decide among alternatives in the grammar,and being reduced to blind search, it requires a great dealof time to unify a single text functional description.
TheTEXT system does all its planning during the constructionof the text FD and uses the unification process to fill inthe grammatical details essential for producing the finalutterance.The NIGEL grammar designed by Mann \[10\] is a sys-temic grammar, but the.
philosophies underlying systemicand unification grammar are so similar that a comparisonof the systems is warranted.
The system "choosers" ofNIGEL play a role similar to the annotations on the al-ternatives in TELEGRAM, and many other parallels canbe drawn.
The most fundamental difference between thetwo systems is in the assmptions underlying their design.NIGEL is intended to be completely independent of anyparticular application system or knowledge representation,an intention that has influenced all aspects of its design.A consequence of this decision is a complete separation ofthe grammatical processes from the other processes in thesystem, permitting communication ly through a narrowchannel.
TELEGRAM, on the other hand closely couplesreasoning about syntactic hoices with the other planningdone by the system, thereby enabling the reasoning aboutcombined physical and linguistic actions.
However, TEL-EGRAM sacrifices some of the simplicity of the interfacebetween the grammar and the rest of the system.6.
Summary  and Conclusion.The TELEGRAM system described in this paper is anat, lempt to incorporate a large grammar into a language-planning system.
This particular approach to representingknowledge in an annotated unification grammar and com-bining the processes of planning and unification results inthe following advantages:?
Greater efficiency in the lower levels of the plan-ning process, because the planner can be invokedto decide among alternatives, thus avoiding thereliance upon blind search.?
A simple method of resource allocation to theplanning process by limiting the amount of back-tracking the unifier is allowed to do.?
The ability to combine reasoning about physi-cal and linguistic actions with a grammar thatprovides ignificantly wide coverage of the lan-guage.Although the development of TELEGRAM is still inprogress, early experience suggests that the TELEGRAMformalism has sufficient power to represent the syntacticknowledge of a language-planning system that efficientlyencompasses a significant portion of English.
A smallgrammar has been written that already has more powerthan the grammar of KAMP.
Research is being conductedin discovering those discourse-related features that have tobe included in a unification grammar.
Although writing a~reversible ~ grammar does not appear to be feasible at thistime, we hope this research will lead to the specificationof a set of features that can be shared between unificationgrammars for parsing and for generation.\[11{21131141{01\[71tslREFERENCES\[01\[1olIlllAppelt, Douglas E., Planning Natural Language Utter-ances to Satisfy Multiple Goals, SRI International Arti-ficial Intelligence Center Technical Note No.
259, 1982.Cohen, Philip and C. R. Perrault, Elements of a Plan-Based Theory of Speech Acts, Cognitive Science, vol.3, pp.
177-212, 1979.Cohen, Philip, The Need for Mentificaion as a PlannedAction, Proceedings of the Seventh International JointConference on Artificial Intelligence, 1981.Cohen, Philip, S. Fertig and K. Start, Dependenciesof Discourse Slructure on the Modalily of Commun-ication: Telephone vs. Teletype, Proceedings of theTwentieth Annual Meeting of the Association for Com-putational Linguistics, 1982.Conklin, E. deffery, and D. McDonald, Salience: TheKey to the Selection Prob&m in Natural Language Gen-eration.
Proceedings of the Twentieth Annual Meetingof the .Association for Computational Linguistics, 1982.Italliday, M. A. K., System and Function in Lan-guage, Oxford University Press, London, 1976Kay, Martin, Functional Grammar, Proceedings of theAnnual Meeting of the Linguistic Society of .America,1979.Kay.
Martin, Unification Grammar, Xerox P.~RC techreportKay, M.~rtin, An Algorithm for Compiling Parsing Tablesfrom a GrammarMann, William C., and Christian Matthiessen, Nigel:A Systemic Grammar for Text Generation, Universityof Southern California Information Sciences InstituteTechnical Report ISI/RR-83-105, February, 1983.McKeown, Kathleen, Generatin 9 Natural Language Textin Response to Questions about Database Structure,Ph.D.
dissertation, University of Pennsylvania, 1982.78
