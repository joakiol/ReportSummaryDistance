Proceedings of the 8th Workshop on Asian Language Resources, pages 161?168,Beijing, China, 21-22 August 2010. c?2010 Asian Federation for Natural Language ProcessingA Current Status of Thai Categorial Grammars andTheir ApplicationsTaneth Ruangrajitpakorn and Thepchai SupnithiHuman Language Technology LaboratoryNational Electronics and Computer Technology Center{taneth.ruangrajitpakorn,thepchai.supnithi}@nec-tec.or.thAbstractThis  paper presents a current  status ofThai resources and tools for CG  devel-opment.
We also  proposed  a  Thai  cat-egorial dependency grammar (CDG), anextended version of CG which includesdependency  analysis  into  CG notation.Beside, an idea of how to group a wordthat has the same functions are presen-ted to gain a certain type of category perword.
We also discuss about a difficultyof  building  treebank  and  mention  atoolkit for assisting on a Thai CGs treebuilding  and  a  tree  format  representa-tions.
In this paper, we also give a sum-mary  of  applications  related  to  ThaiCGs.1 IntroductionRecently, CG formalism was applied to severalThai NLP applications such as syntactic inform-ation  for  Thai  to  English  RBMT (Ruangrajit-pakorn et al, 2007), a CG treebank (Ruangrajit-pakorn et al, 2009), and an automatic CG tag-ger (Supnithi et al, 2010).
CG shows promisesto handle Thai syntax expeditiously since it canwidely  control  utilisations  of  function  wordswhich are the main grammatical expression ofThai.In the previous research, CG was employedas a feature for an English to Thai SMT and itresulted better accuracy in term of BLEU scorefor  1.05% (Porkaew and  Supnithi,  2009).
CGwas  also  used  in  a  research  of  translation  ofnoun phrase from English to Thai using phrase-based SMT with CG reordering rules, and it re-turned 75% of better and smoother translationfrom human evaluation (Porkaew et al, 2009).Though CG has a high potential in immediateconstituency analysis for Thai, it sill lacks of adependency analysis which is also important insyntactical parsing.
In this paper, we propose acategory dependency grammar which is an up-graded version of CG to express a dependencyrelation  alongside  an  immediate  constituencybracketing.
Moreover,  some  Thai  dependencybanks  such  as  NAIST  dependency  bank(Satayamas and Kawtrakul, 2004) have been de-veloped.
It  is  better  to  be  able  to interchangedata between a Thai CG treebank and a Thai de-pendency bank in order to increase an amountof data since building treebank from scratch hashigh cost.In  the  point  of  resources  and  applications,Thai CG and CDG still have a few number ofsupported tools.
Our CG treebank still containsinsufficient  data  and  they  are  syntacticallysimple and do not reflect a natural Thai usage.To add complex Thai tree, we found that Thaipractical usage such as news domain contains anumber of word and very complex.An example of  natural  Thai text from news,which contains 25 words including nine under-lined function words, is instanced with transla-tion in Figure 1.??
????|???|???|??
???|???|??|?????|??
?| |???|??|???|???|????????|???|???????|?????
?| |???|???
???|??
?| |???????|???|??????|??|???????|????|???
?lit: The red-shirts have put bunkers around the as-sembly area and poured oil and worn-out tires.Figure 1.
An example of Thai usage in naturallanguage161We parsed the example in  Figure 1 with CGand our parser returned 1,469 trees.
The result isin a large number because many Thai structuralissues in a syntactic level cause ambiguity.The first issue is many Thai words can havemultiple  functions  including  employing  gram-matical usage and representing a meaning.
Forinstance, a word ?????
/tee/ can be a noun, a relat-ive clause marker, a classifier, a preposition, andan  adjective  marker.
A word  ????
/kon/  canrefer  to a person,  a  classifier  of  human beingand  it  can  denote  an  action.
A word  ???
???
?/kumlung/ can serve as an auxiliary verb to ex-press progressive aspect and also refers a mean-ing as a noun.
A function word is a main gram-matical representation and it hints an analyser toclarify an overall context structure.
Regretfully,it is difficult for system to instantly indicate theThai function words by focusing on the lexicalsurface and their surrounding lexicons.
This cir-cumstance is  stimulates  an over  generation  ofmany improper trees.The second issue is a problem of Thai verbutilisations.
Thai ordinarily allows to omit eithera  subject  or  an  object  of  a  verb.
Moreover,  aThai  intransitive  verb  is  occasionally  attachedits  indirect  object  without  a  preposition.
Fur-thermore, Thai adjective allows to perform as apredicate without a marker.
With an allowanceof verb serialisation, these complexify linguiststo design a category into well-crafted categoryset for verb.
Therefore, many Thai verbs containseveral syntactic categories to serve their manyfunctions.The last issues is a lack of an explicit bound-ary for a word, a phrase and a sentence in Thai.A Thai  word  and  phrase  boundary  is  implicitand  a  space  is  not  significantly  signified  aboundary  in  the  context.
In  addition,  most  ofmodifiers are attached after a core element.
Thisleads  to  ambiguity  of  finding  an  ending  of  asubject with an attached adjective and relativeclause since the verbs in attachment can be seri-alised and consequently placed with followingmain verb phrase (which is likely to be serial-ised either) without a signified indicator.With these issues, a parser with only syntacticinformation merely returns a large number of allpossible  trees.
It  becomes  difficulty  and  timeconsuming for linguists to select the correct oneamong them.
Moreover, with many lexical ele-ments, using a statistical parser has a very lowchance to generate a correct tree and a  manualtree  construction  is  also  required as  a  goldstandard.
Thus, we recently implemented an as-sistant toolkit for tree construction and tree rep-resentation  to  reduce  linguists'  work  load  andtime consumption.This paper aims to explain the current statusof resource and tool for CG and CDG develop-ment  for  Thai  language.
We  also  listed  opentools and applications that relate to CGs in thispaper.The rest of the paper is organised as follows.Section  2  presents  a  Thai  categorial  grammarand  its  related  formalism.
Section  3  explainsstatus of CGs resources including syntactic dic-tionary and treebank.
Section 4 shows details ofa toolkit  which assists  linguist  to manage andconstruct CGs derivation tree and tree represent-ations.
Section 5 provides information of applic-ations that involve Thai CGs.
Lastly, Section 6concludes this paper and lists future works.2 Thai Categorial Grammars2.1 Categorial GrammarCategorial  grammar  (Aka.
CG  or  classicalcategorial  grammar)  (Ajdukiewicz,  1935;Carpenter,  1992;  Buszkowski,  1998)  is  aformalism in natural language syntax motivatedby  the  principle  of  constitutionality  andorganised according  to the  syntactic  elements.The syntactic elements are categorised in termsof their ability to combine with one another toform  larger  constituents  as  functions  oraccording to a function-argument relationship.CG captures the same information by associ-ating  a  functional  type  or  category  with  allgrammatical  entities.
Each  word  is  assignedwith at least one syntactic category, denoted byan argument symbol (such as np and num) or afunctional  symbol  X/Y and  X\Y that  require  Yfrom the right and the left respectively to formX.The basic concept is to find the core of thecombination and replace the grammatical modi-fier  and  complement  with  set  of  categoriesbased on the same concept of the rule of frac-tion cancellation as follow:162Upon applying to Thai, we have modified ar-gument set and designed eight arguments shownin Table 1.From the last  version,  two arguments  wereadditionally designed.
?ut?
argument was addedto denote utterance that is followed after a word?????.
The word ?????
has a special function to letthe word after it perform as an exemplified ut-terance and ignore its appropriate category as itis signified an example in context.
Comparingto ?ws?
argument, the word ??
???
is functionedin a different sense which is used to denote a be-ginner of subordinate clause.For ?X?
category, it is used for punctuation orsymbol  which  takes  the same categories  fromthe left  or  right  sides  and produces  the  takencategory.
For instance, ???
is a marker to denoteafter many types of content word.
In details, thissymbol signifies plurality while it is after nounbut it intensifies a degree of meaning while it isplaced after adjective.Upon  CG  design,  we  allowed  only  binarybracketing  of  two  immediate  constituents.
Tohandle serial construction in Thai including seri-al  verb construction,  we permitted the exactlysame  categories  which  are  consequent  to  becombined.
For  example,  Thai  noun  phrase'???(np)|???????????
(np)' (lit: a consensus of thegovernment)  contains  two  consequent  nounswithout a joint word to form a noun phrase.
Un-fortunately, there still remain limits of syntacticparsing in CG that can not handle long depend-ency and word omission in this state.2.2 Categorial Dependency GrammarCategorial  dependency  grammar  (CDG)  is  anextension of CG.
CDG differs from CG in that adependency  direction  motivated  by  Collins(1999)  is  additionally  annotated  to  each  slashnotation  in  syntactic  category.
The  derivationrules of CDG are listed as follow:X/<Y : d1 Y : d2 => X : h(d1) ?
h(d2)X/>Y : d1 Y : d2 => X : h(d1) ?
h(d2)Y : d1 X\<Y : d2 => X : h(d1) ?
h(d2)Y : d1 X\>Y : d2 => X : h(d1) ?
h(d2)where the notations h(d1)  ?
h(d2) and h(d1)  ?h(d2) mean a dependency linking from the headof the dependency structure d1 to the head of d2,and that linking from the head of d2 to the headof d1, respectively.
Throughout this paper, a con-stituent type of the syntactic category c and thedependency structure d is represented by c:d.Let us exemplify a dependency driven deriva-tion  of  CDG  of  sentence  'Mary  drinks  freshmilk'  in  Figure 2.
In  Figure 2(a),  each pair ofconstituents is combined to form a larger con-stituent with its head word.
Figure 2(b) shows adependency structure equivalent  to the deriva-tion in Figure 2(a).Comparing  to  PF-CCG  (Koller  and  Kuhl-mann, 2009), there is different in that their PF-CCG dependency markers are fixed to the direc-tion of slashes while CDG dependency markersare  customised  based  on  behaviour  of  a  con-stituent.CDG offers an efficient way to represent de-pendency structures alongside syntactic deriva-tions.
Apart from immediate constituency ana-lysis,  we  can  also  investigate  the  correspond-ence between the syntactic derivations and thedependency  structures.
It  benefits  linguists  indetails  a  grammar for  a specific  language be-argu-mentcategorydefinition examplenp a noun phrase ????
(elephant), ??
(I, me)num a digit and a spelled-out number?????
(one),2 (two)spnum a number which is suc-ceeding to classifier???
(one), ?????
(one)pp a prepositional phrase ????
(in car),??????
(on table)s a sentence????????????
(an elephant eatsa banana)wsa specific category forThai which is assigned toa sentence or a phrase thatbegins with Thai word ???
(that : sub-ordinate clausemarker).
* ?????????????
'that he willcome late'* ??????????
'that (he) willcome late'utan utterance using to ex-emplify a specific wordafter a word ?????
???
?
?
'the word ?good?
'Xan undefined category thattakes the same categoriesfrom the left or right sidesand produces the takencategory.????
?
(plural marker)?????
?
(intensifier)Table 1.
A list of Thai CDG arguments163cause  we  can  restrain  the  grammar  in  lexicallevel.In  this  paper,  our  Thai  CG was  applied  toCDG.
For the case of serial construction, we setthe  left  word  as  a  head  of  dependency  sinceThai modifiers and dependents are ordinarily at-tached on right side.2.3 Categorial SetA categorial set is a group of lexicons that ex-actly contains the same function(s) in terms oftheir  category amount and all  their  same syn-tactic categories.
With a specific surface, eachword certainly is in one categorial set.
For ex-ample,  suppose that  we have following wordsand categories:word category POS?????????,????,???,????
?
np noun???,????,????,???,????
?
s\np/np verb???,????,???
?
np\np/num classifierWe can group the given words into five groupsbased on the concept of categorial set shown inTable 2.Set-index Category member Word member1 np ????????
?2 s\np/np ???,???
?3 nps\np/np ????4nps\np/npnp\np/num???,???
?5 np\np/num ??
?Table 2.
An example of categorial setFor  current  status,  we  attain  183 categorialsets  in total and the maximum amount of cat-egory member in a categorial set is 22 categor-ies.3 Categorial Grammars ResourcesTo apply categorial grammars to Thai NLP, syn-tactic dictionary and treebank are a mandatory.3.1 Categorial Grammars DictionaryFor using in other work and researches, we col-lected  all  CGs  information  into  one  syntacticdictionary.
An  example  of  CGs  dictionary  isshown in Table 3.
In a summary, our Thai CGsdictionary  currently  contain  70,193  lexicalentries with 82 categories for both CG and CDGand 183 categorial sets.Lexicon CG CDG Cset no.????
np np 0????
np,s\np/np,np\np/numnp,s\<np/>np,np\>np/<num15???
s\np/np,s\np s\<np/>np,s\<np 13???
s\s/s,s/s/s s\<s/>s,s/>s/>s 43???
s\np/pp,s\np,s\np/wss\<np/>pp,s\<np,s\<np/>ws19?????
np\np,s\np np\>np,s\<np 3????
s\np s\<np 1???????
np\np,s\np np\>np,s\<np 3???
s\np s\<np 1???
s\np/np,s\np s\<np/>np,s\<np 13?????
np np 0???
s\np/np,s\np/ws,np\np/uts\<np/>np,s\<np/>ws,np\>np/>ut136?????
s\s/s,s/s/s s\<s/>s,s/>s/>s 43Table 3.
An example of Thai CGs dictionary3.2 Thai CDGTreebankOur CG treebank was recently transformed intodependency-driven  derivation  tree  with  CDG.An example of derivation tree of sentence |??
?|Figure 2.
Syntactic derivation of ?Mary drinks fresh milk?
based on CDG164???|????|????|???|?????
?| 'lit: Tiger hunting is anadventure' comparing between CG and CDG isillustrated in Figure 3.s(np(np/(s\np)[???]s\np((s\np)/np[???]np[????]))s\np((s\np)/np[????]np(np/(s\np)[???]s\np[??????
])))(a) CG derivation trees(np(np/>(s\<np)[???]s\<np((s\<np)/>np[???]np[????]))s\<np((s\<np)/>np[????]np(np/>(s\<np)[???]s\<np[??????
])))(b) CDG derivation treeFigure 3.
An example of a derivation tree intreebank comparing between CG and CDGA status  of  transformed  CDG  treebank  is30,340  text  lines  which  include  14,744  sen-tences,  9,651  verb  phrases  or  subject-omittedsentences and 5,945 noun phrases.
However, theaverage word amount of  this  treebank is  3.41words per tree which is obviously short.Upon  an  attempt  to  increase  a  number  oftrees, we considered that the existing trees aresimple and not signify all utilisations of naturalThai  text.
Therefore,  news  domain  of  BEST(Kosawat et al, 2009) corpus was chosen to ful-fil  such  issues  because  of  its  practical  usage.From our  observation,  we  found that  most  ofdata are  ranged from 25 to 68 words  and thelongest  line  contains  415  words  which  is  ex-tremely long for parser to handle it efficiently.After a prior experiment, we found that  ourGLR  parser  with  CDG  information  resulted514.62  tree  alternatives  in  average  from  therange  of  three  to  fifteen  words  per  sentencefrom  news  domain  in  BEST.
With  problemsfrom ambiguous syntax of Thai, to automatic-ally select  a correct  tree is extremely difficultsince  several  resulted  trees  are  grammaticallycorrect and semantically sound but they are notproper  for  their  context.
It  becomes  difficultyfor linguists to select an appropriate one amongthem.
In order to solve that problem, we imple-mented a toolkit to assist linguists on construct-ing treebank with such a long and complicatedsentence.
The  manual  annotated  tree  will  beused as a gold standard and confidentially applyfor statistical parser development.4 CGs Tree Supported ToolBuilding  a  resource  is  a  laboured  work  espe-cially  a  treebank  construction.
For  Thai  lan-guage which uses several function words to ex-press grammatical function in context, an imme-diate  constituency  analysis  and  a  dependencyanalysis become difficult since many word paircan  cause  ambiguity  and  complexity  amongthem.
Additionally, a representation of a deriva-tion tree in textual format is excessively com-plex to be  analysed or approved.
To reduce aburden of linguists,  we developed a toolkit  tohelp a linguists with graphical user-interface inmanual tree construction.4.1 CGs ToolkitThe proposed toolkit supports multi-tasks whichare annotating CG tag to a word, bracketing in-termediate constituents, generating dependency-driven derivation tree in multiple formats, andvisualising graphical tree.4.1.1 Category AnnotatorCategory annotator supports users to select  anappropriate CDG category for each word.
Thesystem  takes  word-segmented  input  text.
Itstarts with checking possible categories with thegiven CDG dictionary and lists  all  of them toeach word.
Users only select a correct categoryfor each.
Unless the word is known or the re-quired category for the word is present, user hasto add a new category for the word and the sys-tem  contiguously  updates  the  dictionary  withthe given data for further usage.4.1.2 Dependency-driven  Derivation  TreeGeneratorThis system is implemented for manual annotat-ing tree information and dependency relation toa text that is difficult for parser to generate treesuch as a text with multiple serial verb construc-tions, a complex head-dependent relation wordpairs,  etc.
A captured picture  of  user-interface165working  on  immediate  constituency  and  de-pendency annotation is illustrated in Figure 4.We provide a user-interface for linguists andexperts  to  easily  annotate  brackets  covering.Users  begin  a  process  by  selecting  a  pair  ofwords that are a terminal of leaf node.
The sys-tem  apparently  shows  only  categories  of  theword that can be possibly combined within thebracket for selecting.
After choosing categoriesof those two constituents, the system automatic-ally generates a result category.
Next, users willcontinue the process for other constituents untilone top result category is left.After users finish the bracketing process, de-pendency relation will be generated from annot-ated  dependency  marker  within  categorieswithout manual assignment.4.1.3 Tree VisualiserThe  system  includes  a  function  to  create  agraphical tree from a file in textual formats.
Itprovides a function to modify a tree by editing aword  spelling  and  its  syntactic  category  andshifting a branch of syntactic tree to another.4.2 Tree RepresentationThe CGs  toolkit  allows users  to export  a  treeoutput in two representations; traditional textualtree format and XML format.Throughout all tree format examples, we ex-emplify a Thai sentence '?
???
??????
????
???????
???????'
(lit: an expert discovers corona vir-us.)
with the following categories:Word CDG category??????????
(expert)?????
(virus)???????
(corona) ?
np????
(diagnose) ?
s\<np??
(discover) ?
s\<np/>np4.2.1 Traditional Textual Tree FormatA traditional textual tree format represents a ter-minal (w) with its category (c) in form of c[w].The brackets are enclosed two constituents splitby  space  with  parentheses  and  the  result  cat-egory (cr) is placed before the open parenthesisin format  cr(c[w] c[w]).
Figure 5 shows an ex-ample of a traditional textual tree format.s(np[??????????]
s\<np(s\<np[????]s\<np(s\<np(s\<np/>np[??]
np(np[?????]
np[???????
])))Figure 5.
An example of a traditional textualtree format of '??????????
????
??
?????
???????
'4.2.2 XML Tree FormatFor XML tree format, we design three tag sets,i.e., word tag,  tree tag and input tag.
The wordFigure 4.
A snapshot of dependency-driven derivation tree generator166tag bounds a terminal to mark a word.
In a start-tag of  word tag, there are two attributes whichare  cat to assign a category in a value and textto assign a given text in a value.
For tree tag, itmarks a combination of either word tags or treetags to form another result category.
It containstwo previous attributes with an additional attrib-ute, i.e., a head attribute to fill in a notation thatwhich word has a head-outward relation valuewhere '0' value indicates head from left constitu-ent and '1' value indicates head from right con-stituent.
The input tag shows a boundary of allinput and it has attributes to show line number,raw input text and status of tree building pro-cess.
Figure 6 illustrates an XML tree represent-ation.5 Thai CGs Related ApplicationsSeveral applications related to Thai CGs or usedThai  CGs  as  their  syntactic  information  havebeen  implemented  recently.
Below  is  a  sum-mary of their methodology and result.5.1 CG AutoTagger for ThaiTo reduce an amount of trees generated from aparser with all possible categories, an automaticsyntactic category tagger (Supnithi et al, 2010)was developed to disambiguate  unappropriatedcombinations of impossible categories.
The sys-tem was developed based on CRF and Statistic-al Alignment Model based on information the-ory (SAM) algorithm.
The accuracy 89.25% inword level was acquired.
This system also has afunction to predict  a  syntactic category for anunknown word and 79.67% of unknown wordare predicted correctly.5.2 ChunkerWith  a  problem  of  a  long  sentence  in  Thai,chunker  was  implemented  to  group  a  con-sequent of words to larger unit in order to re-duce  a  difficulty  on  parsing  too  many  lexicalelements.
CRD method with syntactic informa-tion from CG and categorial set was applied inthe  system to  chunk a  text  into  noun phrase,verb phrase, prepositional phrase, and adverbialphrase.
Moreover,  the system also  attempts tohandle a compound word that has a form likesentence.
The  result  was  impressive  as  it  im-proved  74.17% of  accuracy  on  sentence  levelchunking  and  58.65%  on  sentence-form  likecompound noun.5.3 GLR parser for Thai CG and CDGOur implemented LALR parser (Aho and John-son,  1974)  was  improved  to  GLR  parser  forsyntactically  parse  Thai  text.
This  parser  wasdeveloped to return all possible trees form inputto show a baseline that covers all syntactic pos-sibilities.
For our GLR parser, a grammar rule isnot manually determined, but it is automaticallyproduced  by  any  given  syntactic  notationsaligned  with  lexicons  in  a  dictionary.
Hence,this  GLR parser has a  coverage including CGand CDG formalism parsing.
Furthermore, ourGLR parser accepts a sentence, a noun phrase, averb phrase and prepositional phrase.
However,the parser does not only return the best first tree,but also all  parsable trees to gather all ambigu-ous trees since Thai language tends to be  am-biguous because  of  lacking  explicit  sentence,phrase and word boundary.
This parser includesa  pre-process to handle named-entities,  numer-ical expression and time expression.Figure 6.
An example of XML tree format of '??????????
????
??
?????
???????
'1676 Conclusion and Future WorkIn this paper, we update our Thai CG informa-tion and a status of its resources.
We also pro-pose CDG for Thai, an extended version of CG.CDG offers  an  efficient  way  to  represent  de-pendency structures with syntactic derivations.It benefits linguists in terms of they can restrainThai  grammar in lexical  level.
With CDG de-pendency-driven  derivation  tree,  both bracket-ing information and dependency relation are an-notated  to  every  lexical  units.
In  the  currentstate, we transformed our CG dictionary and CGtreebank into CDG formalism.With an attempt to increase an amount of ourtreebank with a complex text, CDG tree toolkitwas developed for linguists to manual managinga derivation tree.
This toolkit  includes a CDGcategory tagger tool, dependency-driven deriva-tion  tree  generator,  and  tree  visualiser.
Thistoolkit  can generate  an  output  in  two formatswhich are traditional textual tree and XML tree.The XML tree format is an option for standard-ised format  or  further  usage such as  applyingtree for ontology.We also summarised CGs related works andtheir accuracy.
They included an automatic CGtagger and a Thai phrase chunker.In the future, we plan to increase an amountof  CGs  derivation  trees  of  complex  sentenceand practical language.
Moreover, we will im-plement a system to transform an existing Thaidependency bank to CDG format to gain morenumber  of  trees.
We  also  plan  to  include  se-mantic meaning into derivation tree and repres-ent  such trees  in an RDF format.
In addition,statistical parser will be implemented based onthe CDG derivation trees.ReferencesAjdukiewicz  Kazimierz.
1935.
Die  SyntaktischeKonnexitat, Polish Logic.Aho Alfred, and Johnson Stephen.
1974.
LR Parsing,Proceedings of Computing Surveys, Vol.
6, No.
2.Bar-Hillel  Yehoshua.
1953.
A  quasi-arithmeticalnotation for syntactic description.
29(1): 47-58.Carpenter Bob.
1992.
Categorial Grammars, LexicalRules,and the English Predicative, In R.
Levine,ed.,  Formal  Grammar:  Theory  and  Implementa-tion.
OUP.Collins Micheal.
1999.
Head-Driven Statistical Mod-els for  Natural  Language Parsing.
Ph.D. Thesis,University of Pennsylvania.Koller Alexander, and Kuhlmann Marco.
2009.
De-pendency trees and the strong generative capacityof ccg, Proceedings of the 12th Conference of theEuropean Chapter of the Association for Compu-tational Linguistics: 460-468.Kosawat  Krit,  Boriboon  Monthika,  ChootrakoolPatcharika,  Chotimongkol  Ananlada,  KlaithinSupon, Kongyoung Sarawoot,  Kriengket  Kanya-nut,  Phaholphinyo  Sitthaa,  PurodakanandaSumonmas,  Thanakulwarapas  Tipraporn,  andWutiwiwatchai  Chai.
2009.
BEST  2009:  ThaiWord Segmentation Software Contest.
The 8th In-ternational Symposium on Natural Language Pro-cessing: 83-88.Porkaew Peerachet, Ruangrajitpakorn Taneth, Trak-ultaweekoon Kanokorn,  and  Supnithi  Thepchai..2009.
Translation of Noun Phrase from English toThai using Phrase-based SMT with CCG Reorder-ing Rules, Proceedings of the 11th conference ofthe  Pacific  Association  for  Computational  Lin-guistics (PACLING).Porkaew  Peerachet,  and  Supnithi  Thepchai.
2009.Factored  Translation  Model  in  English-to-ThaiTranslation, Proceedings of  the 8th InternationalSymposium on Natural Language Processing.Ruangrajitpakorn Taneth, Na Chai Wasan , Boonk-wan Prachya, Boriboon Monthika, Supnithi Thep-chai.
2007.
The Design of Lexical Information forThai to English MT, Proceedings of the 7th Inter-national  Symposium  on  Natural  Language  Pro-cessing.Ruangrajitpakorn  Taneth,  Trakultaweekoon  Kan-okorn, and Supnithi Thepchai.
2009.
A SyntacticResource for Thai: CG Treebank, Proceedings ofthe 7th Workshop on Asian Language Resources,(ACL-IJCNLP): 96?102.Satayamas Vee, and Kawtrakul Asanee .
2004.
Wide-Coverage  Grammar  Extraction  from Thai  Tree-bank.
Proceedings of Papillon 2004 Workshops onMultilingual Lexical Databases, Grenoble, France.Supnithi  Thepchai,  Ruangrajitpakorn  Taneth,  Trak-ultaweekoon Kanokorn,  and Porkaew Peerachet.2010.
AutoTagTCG : A Framework for AutomaticThai CG Tagging, Proceedings of the 7th interna-tional  conference  on  Language  Resources  andEvaluation (LREC).168
