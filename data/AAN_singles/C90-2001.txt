A Grammar  Combin ing  Phrase  St ructure  and F ie ld  S t ructureLars  AhrenbergDepar tment  of Computer  and  In fo rmat ion  Sc ienceL inkgp ing  Un ivers i tyS-58t  83 L inkgp ing ,  Swedenemaih  lah@ida .
l iu .
seAbst ractA graanmar tbrmalism, Field and Category Gram-.mar (FCG), is described, which beside constituentstructure and functional structure recognizes a levelof field structure.
It is argued that the formalismoffers descriptive and computational advantages forthe analysis of Scandinavian and other languagesthat distinguish clause types topologically.
It is alsoargued that the clear distinction between fields andconstituents makes FCGs theoretically sounder thanother proposed field grammars.
A comparison ismade of the word order rules and assumptions ofFCGs with the partial orderip, gs employed by G PSGand other models.1 Mot ivat ions  for f ield struc-tureDescriptive grammatical works on Germanic lan-guages often refer to notions such as field and.schema, some early, major works being \[Dider46\] and\[Drach373.
Recently, \[H.ue87\] and \['Ibgeby88\] haveargued that field grammars in Diderichsen's tradi-tion are useful for the computational nalysis of Dan-.ish.
If they are right, the same is obviously true forthe other Scandinavian languages and possibly otherGermanic languages as well.A major motivation for field structure in the Scan-dinavian languages is the correlation between the po-sition era  constituent and grammatical f mction.
Forinstance, a NP occuring after the finite verb butbefore: the sentence adverbs, i.e.
in the field thatDiderichsen termed Ncksusfclt, is a subject, whileNPs appearing after the sentence adverbs, in the In-dholdsfelt (content field) are objects.
As main clauseshave no surface VP-node consisting solely of the verband its complements, a configurational definition ofsubject,; and objects is less appealing.There is a correlation also between positionsand thematic functions, the classical example be-ing Diderichsen's l'~undament (foundation), the po--sition before the finite verb which holds thematicallyprominent constituents of various kinds.A second motivation is that the word order regu-larities of' clause types are better described if we haw:access to field structure.
In a phrase st, ruct, m'e gram-mar we either have to write a separate rt~le, or ruleschema, for each clause type, or else introduce pew-erflfl rules such as transforn-mtions or recta-rules to,capture differences and similarities.
Field st.rtact.urecan be used to express the common traits directly:the schema in figure 1 apply to virtually all Swedishclause types.
* Moreover, variation can be accountedfor in terms of constraints on what may occur i',~the fields and such constraints may be expressed Lyregular expressions.
'Fhvs, the il~corporation of fieldstructure to a formalism does not add to its co~Hpu-tational complexity.2 F ie ld  s t ruc ture  vs. phrases t ruc tureIt is obvious that schemas uch as that of figure 1 canbe defined by context-free rewrite rules each of whichspecifies a number of subfield-relations and a sequ~ a~-tial order for the subfields.
~l'he rules below togelherdefine the schema in figu,'e l, which we name ?.
(1) }2 - ,  F NexF ContFNexF --+ v nexContF ~ v' ObjF advObjF --+ obj pobj compThe simplest way of formalizing a field grammaris to define an appropriate set of' rules of this kindand, if we want to derive a functional structure, as-sociate the rules and lexical er, tries with l'uncLio~.lalinformation.
This is essentially the approach takenby \[RueS7\] and by \[Togeby88\].
As a resulL the fieldnotion is merged with the notion of constituerlt.
II.is indeed often said that an advantage of l)idcrich-sen's analysis is that it offers a 10ett.er coJ~stituem.analysis of Danish than, say, traditio~ml TC,.
Tlds isnot so, however.
On the contrary, it.
is one of theweaknesses of Diderichsen's work that the notionsof fiehls and constituents are regularly confused (cf.1The schema in f igure 1 is a revised version of l )k lcr ichsea'sclassical  schema.
For instance,  the nexus  field h~Lq been givel~two pos i t ions  instead of three for reasons expl~tined in sectiol l3.1.3.3_ 1Foundat ion  (F)  Nexus  f ield (NexF)  Content_ f ie ld  (ContF )V ~JagIv nexhann intemanaged uotatt jag intethat I notharmmanagedObjF- -  trgffa honom- -  see him- -  trgffa honom- -  see  himFigure 1: A schema for the Swedish clause with two analysed examples.advtOag itoday!idagtoday\[Telem72,Braunm86\]).
Instead field structure is bet-ter conceived of as a level that accounts for the lin-earization of independently defined constituents.While such a conception of field structure is morerestricted, it is more motivated and equally amenableto formalization.
The formalism must deal with twotypes of information for a constituent, however, itscategory and the field(s) it occurs in.
Also, we needto distinguish carefully the dominance relations forfields (supe,field) and categories (dominates) as theydiffer in their logical properties, ttere only two im-portant differences will be noted: \[1\] Fields transmitexpressions, categories don't.
Given an expression, e,that is situated in a field, f, it will also be situated inevery field that is a super field of f. Conversely, fieldsgenerally allow multiple occurrences of constituents(incl.
none; cf.
figure 1), while categories categorizeexactly one constituent at a time.
\[2\] The supetfield-relation is non-recursive, which means that schemashave a finite number of elements.
The dominates-rel-:~tion, on the other hand, allows recursiou in theusual way.3 F ie ld -and-Category  Gram-marsField-and-Category Grammars  (henceforth FCG)may, with fimctional schemas included, be regardedas a generalization of Lexical-Functional Grammars\[LFG82\].
There is then the usual division betweentwo structural  evels, but as the surface level includesinformation about the position of a constituent in arelevant schema, and not just category, we refer toit as a topological structure, or t-structu,~.
For tirepurposes of this paper the f-structure may be takenas in LI?G.A t-structure for a simple sentence is il lustrated infigure 2.
The rules necessary for the generation oft-structures form a Basic FCG.A schema is defined as a maximal field.
A positionis a terminal field.
An identifier position is a positionthat admits an identifier of a phrase, such as a lexicalhead.Categories are ordered by a subsumption relation.An actual category is a category that does not sub-sume any other category; an abstract category is oneV@vHarm du intePolSNPEnex SAEnex InfSEcompI / " \ProNEn VEv'  N iEob  jPNEn Itriiffa PeterFigure 2: A topological structure for the sentencetIann du inte traffa Peter?
(Didn't  you manage tosee Peter?).
Nodes are labelled CEp, where (3 indi-cates the category and p the position of the domi-nated string.that does.
Abstract categories express what is com-mon to a class of actual categories.A configuration is a triple \[D, C, p\] where I) is anactual category, C is an actual category or a word,and p is a position.
A configuration corresponds toa branch of a local tree of a t-structure.
D is the cat-egory of the dominating node, C the category of ~tdominated node and p the position of the latter inthe schema associated with the former.
Conversely,a local tree can be represented as a multiset of con-figurations that have a common first element.
Forinstance, the top local tree of figure 2 correspondsto the set {\[PolS, V, v\], \[PolS, NP, nex\], \[PolS, SeX,nex\], \[PolS, InfS, comp\]}.
Multisets are required inthe general case as there may be several daughter.~with the same category and position.3 .1  Ru le  types3.1.1 F ie ld  s t ruc ture  ru lesField structure rules define the internal structure offields in terms of subfields.
In addition, they assigneach position an occurrence index, stating the max-imum number of fillers it takes.
I will write p* toindicate a position with any number of fillers, pn fora position with a max imum of n fillers, (p) for a po-sition with one optional filler, and ~imply p for aposition with one obligatory filler.
The rules in (1)may be expanded as below, where a simplified rulefor the noun phrase schema is also stated.2 2Notat ion  Mean ingxGpeGpAGpwGp(A)Gp(w)epA'Cpp nmst not be emptyp must be emptyp must conttdn an Ap must, contain word wp may only contain an Ap may only contain word wp must; not contain an ATable 1: Basic topological constraints of a FCG.
(2) E ---, (F) NexF ContFNexF + (v) nex*ContF ---, (v') ObjF adv*ObjF --~ obj 2 pobj* (comp)(3) H --+ (det) mod* n rel*3.1.2 Category  def in i t ionsCategory definitions define necessary properties ofcategories.
They may be written as 4-tuples (C, C','\].
', F) where C is defined as a subcategory of C' meet-ing the topological constraints 'F, and the functionalconstraints F.Basic topological constraints tate what must ormay o?co_r in a specific position.
A list of basictopological constraints is found in table 1.
The el-ement rl' is a conjunction of such b~sic constraints,or a schema symbol.
In the latter case the defini-tion includes a category-schema association, whichsays that the category, and, by implication, all itssubcategories, are linearized by the named schema.The other constraints give information about whatoccurs in specific positions of that schema.
'I'he functional constraints are written as conjunc-tions of attribute-wdue assignlnents and value con-straint,< A single attribute name indicates that thisattribut.c" must have a value at Lstruct.ure.Some examples of category definitions are givenbelow. '
lbgether they define an inheritance hierar-chy of constituent categories, where properties of acategory high up in the hierarchy are shared by cate-gories below it.
Topological properties that are com-mon to a set of actual categories are expressed attheir common ancesto,'s, and, in particular, by tilecommon schema they inherit.csal: (S , - ,  E, Sul)jAPredAVform)csa2: (NP, - - , I I ,  NumbAGend)defl :deP2:def3:def4:detS:def6:deft:(MainS, S, VEv, )(V2S, MainS, xGF,---)(V1S, MainS, eCI", )(PolS, V1S, NPOlex, Vform=Fin)(hnpS, V1S, NP-Gnex, Vfonn=hnp)(SubS, S, (Comp)~_vAVcv', ~-)(lntS, SubS, eG\["A(all)Cv ANP~(Enex,Vfornr=lnf)For instance, in (def4) a polar interrogative clauses(I'olS) is detined as a verb-first clause (V1S), whichin (def3) is deiined as a main clause (MainS), whichin turn is defined as a clause (S).
Being a clause it.
islinearized by E according to (csal) and its f-structuremust have a subject, a sernantic form and a verbalproperty.
Being a main clause it has a verb in po-sition v (defl).
Being a verb-first clause it has anempty foundation.
In distinction to other verb-first.clauses it has a finite verb form, and an expressedsubject in position nex.3.1.3 Conf igurat ion  rulesWhile category definitions state what nmst hold oFa given category, configuration rules state what mayhold of any category.
Each configuration of the lan-guage is defined by some configuration rule.
A con-figuration rule may be written as a list of the form(CS, F, i) where CS is a description of a set of COllIig-urations, F is a conjunction of functional constraintsand i is an occurrence index.
We take advantage ofthe category hierarchy and use abstract categorizes illthe description of configuration sets.
Three illust ra-tions are given below:confl: (\[S, Nl', l"\], ISUBJ=I, l)conf2: (IS, NI', nex\], \ [SI IB.\]=I,  1)confa: (Is, SA, nex\], 1=t, *)The arrows, I anil .L are used ms in I, FC;: 'l'lJ(:up-arrow identifies the f-structure of the donlinatingnode of the configuration, whereas the down-arrowidentifies the f-structure of the dominated aode.The first two rules state the possible sub.\]ect con-figurations of Swedish.
They apply t.o aI!
su\]~categories S and NP, unless this is contradicting ~h,'definitions of these categories.
For instance, (conf!
)does not apply to a V1S as defined in (de\["/).The last two rules both define fillers of position'nex' without ordering them.
The third rule detilJesan iterative configuration, as indicated by its occur-rence index.
Thus, the subject is allowed to take., diLferent relative positions w r t the sentence adw~'rbsin agreement with the facts illustrated in (,,I)-((3).
ll!this way fields serve to define bol'ders %r l<)ca\] wordor(le,' variation.
(4) I natt var katten hog inte ute.lasl-nighl was lhe-cal hog nol o~tl"Probably, the cat wasn't outdoors last night"(5) I natt var hog katten inte utelast-night was nog the-cat 7~.ol o~lt(6) I natt var nog inte katteu ute.lasl-7~ight was hog ~ol llle-cal oul3 33.1.4 Lexica l  ru lesA lexicM rule may be written on the form (w, C, T,F) where the lexical item w is assigned a category, a(usually null) topological constraint and some time-tional information.
Three illustrations are given in(7)-(9).
(7) (hann, V , - - ,  P red='manage<(Subj ) (Xcomp)>'AXcomp:Subj=SubjAVform= FinATense= Pret)(8) (inte, SA , - - ,  Pol=Neg)(9) (Peter, N , - - ,  Pred='Peter 'ANumb=SgAGend= Utr)3.1.5 Wel l - fo rmedness  cond i t ionsIn order to be well-formed an expression of a FCGmust have both a well-formed t-structure and a well-formed Lstructure.
We omit the requirements ofwell-formed Lstructures as they can be taken to co-incide with those of a LFG.A topological structure, T, is welt-formed accord-ing to a FCG, G, ifr the following condition holds:(i) Each node of T is assigned an actual categoryand every node apart, from the top-node is assigneda position; (ii) Any local tree, L, of T, with top-node category, C, satisfies the following conditions:(a) for each branch of L there is a configuration rule,or a lexical rule, in G that licenses it; (b) if C isnon-terminal, there is a schema, ~r, associated withC, such that the sequential order of the branches isin agreement with the sequential order of their posi-tions in c~; (c) all restrictions on o- imposed by C inits definition are satisfied by L.4 Propert ies of Basic FCGsBy removing all functional information from a FCGwe obtain a Basic FCG.
It is the Basic FCG thatis responsible for the expression of dominance andprecedence relations in the grammar, i.e.
it has thesame role as the phrase-structure ules of a LFG.This section is concerned with some interesting prop-erties of Basic FCGs.
First I show that a Basic FCGis weakly equivalent o a context-fi'ee grammar.Let G be a Basic FCG.
Let A he the set of ac-tual categories, Z the set of schemas, and P the setof positions, all finite sets.
For any CEA let L(C)denote the set of strings dominated by C. The lan-guage of G, L(G) is defined as a union of such setsfor some suitable subset A' C A, e.g.
by the set ofsubcategories of S.Let W be the set of words that occur in configura-tion rules and category definitions.
Let K be the setAUW.For any a ES we may, by expansion of the relevantfield structure rules, derive a positional structure forc,.
Call this structure %.
For instance, from (2) wemay derive a positional structure e>2:(F) (v) nex* (v') obj 2 pobj* (comp) adv*A positional structure can be given the form of aregular expression over P. This is guaranteed, sincefields are non-recursive objects.Let D he any actual category that is linearized by~, and let p be a position that occurs in co. Thecategory definitions associate with D and p a con-junction of topological conditions, Dp,r, where eachconjunct has one of the forms in table 1.For given D and p the configuration rules allow usto derive the constituent strings that may occur in punder D. There is only a finite number of applicableconfiguration rules.
Each rule gives a disjunction ofactual categories and an occurrence index for thatdisjunction.
If all occurrence indices are finite, or ifthe occurrence index of p is finite, the constituentstrings may be represented by a finite language overK.
If some occurrence indices are '*', and p itselfhe, s occurrence index '*', we may first form a finitesublanguage over K that represents all strings ofnol>iterative constituent categories, and then extend itby introducing the iterative constituents.
In eithercase, the result is a regular language over K. We callthis language Lu,p.For instance, assuming that (confl) and (conf2)are the only rules pertaining to position nex, andthat NP has three actual subcategories, CNP, PNPand ProNP, we have Lpots,n~ = Ls,n~ = SA*(CNP+ PNP + ProNP)SA*.Given LD,v we want to derive the sublanguage ofconstituent strings that satisfy Dp,~.
Call this lan-guage LD,v,r.
Consider first the primitive cases:1.
If Dp,r = eEp then Lu,p,r = {el.2.
If Dp,T = xEp then Lu,v,T = Lu,p-{e}.3.
If Dp,r = ACp where A is actual,then LD,p,r ---- LD,pNK*AK*.4.
If Dp,r = AEp where A is abstract,then LD,v,r = LD,pN(K*A1K*t..J... UK*AnK*)where A1, ..., A,~ are actual subcategories of A.5.
If Dp,, = (A)Ep where A is actual,then LD,p,~ = Lu,vM(K*AK*U{e}).6.
If Dp,~ = (A)Ep where A is abstract,then LD,p,r = LD,/~(K*A1K*U'" UK*A,,K*U{e}),where A1, ..., A,, are actual subcategories of A.7.
If Dv,~ = A 'Ep  then Lu ,p ,  r =Lu , / I (K* -K*AK*)8.
If Dv,~ = wEp then LD,p,~ = LD,pV1K*wK*.9.
If g , , ,  = (w)epthen LD,v,r = LD,pN(K*wK*U{e}).In all cases LD,p,r is a regular set.
As Dp,r inthe general case is a conjunction of such primitiveconstraints, it follows that LD,p,~, will always be aregular set over K.Let LD be the totality of constituent strings that Dmay dominate.
Then LD is obtained by substitution4 4of L.o,p,~ for p in e(,.
As the class of regular sets isclosed under substitution, LI) will also be a regularset over K. As D itself may occur in I,D, we mayhave recursive categories in I,(D), however.
In anycase, L(D), and by implication, L(G), is a context-free language.It is interesting to note that many simple context-free languages cannot be given a simple Basic FCG.l"or example, if a certain ca.tegory, C, takes one oblig-atory daughter, II, and two optional daughters A, B,according to the the Cl"-grantmar G1, there is noBasic FOG for L(G1) that has C as an actual cate-gory.
(c:~) c - - .uC-~I I  AC .... B liC --, A t1 131t" there is such a I'~CC,, it.
must employ at least/hree positions, since otherwise alternative ordersmust be allowed.
Ttms it takes three conliguratiol~rules pertaining to three diffc.rent positions to ac-count for lhe string \[A 1I B\].
But as these are in-dependent he strings \[A tl\] and \[11 B\] ca,, also begenerated, contradicting the assun~ption.In a Basic I"CG a category I)ehaving as (2: in C,Imust be abstract and its diff(.
'rei~t realizations mustbe divided among a i~tlHlt)er o f  actual sul~cv.teg(;ries.A Basic FCG weakly eq~livaleut t.o G1 is (i;2:(C2) (fsrl) .
--, (pi)p2.
(p:t)(csa:l) (C , - ,o ,  )(cderl)  (C, , nc-p~, )(crier:.))
(Cl ,  (:, eC:-pli(A)C-ip3, )(cdef3) (C2, C, l~Cl;1Ae~p\[~, )(cdef,l) ((1:3, C, AEplAI \ ]d I / I ,  )(co,~fl) (\[(:, 11, p2\], , 1)(co. fe)  (\[c,  A, pl\], .
1)(eo.f3) (\[(:, ~, ~1\], , l)(conIq) (\[C,, A, p3\], , 1)(co,~ra) (\[c,  J~, i,:q, , l)What languages can FCGs describe well', e Intu-itively it.
seems that complex coJlstituents that sharea set of potential (lat~ghters hould obey the sameconstraints as regards their relative order and occur-rence.
In particular, the occurrence of one daugh-ter should be independent of the occurrence of otherdaughters.
Where there isa difference in these prol)-ertie.s, there must be a categorial distinction in thegrammar,  as the example abow?
illustrales.
We maycall this property catcgo'ry-dcpendeT~l fi:ccd emoting.it, see.ms, however, that thi'~ property is significant fornatural languages, al leasl \[or those, like the Ger-manic languages, t.hat distinguish clause t.ypes ontopological grounds.5 F ie ld  s t ruc ture  and  par t ia lo rder ingsIf the (surface) syntactic structures of'a natural lan-guage are specified by means of a context-free gl'all>mar a.s in LI,'G, there is no chance of expressing a~lygeneralizations pertaining to word order.
I,I;'G ad-mits a number of notational devices to facilitate thewriting of c-structure rules, but has made few claimsabout possible word order restrictions.
\[GPSG85\], onthe other hand, makes the strong claim that naturallanguages obey Exhaustive Constant Partial Order-ing (ECPO),  i.e.
that the possible linearizations ofa set.
of sister constituents are the same in any localtree irrespective of the categories of the mother audother sisters.
Such linearizations are expressed bymeans of partial orderings, or LP-rules, of the fern\A<B,It is obvious that this assumption is more nat urallymade in a framework that works with local trees Ihathave only two or three branches than in a frame-work which employs fiat structures, t:'or instance,the existence of unmarked and inverted clauses isnot contradicting the FCPO-hypothesis,  if the sub-ject is regarded ~Ls a sister of the finite verb oulyin the inverted case.
llowever, there are construc-tions that speak against it.
as a universal, such as t.heorder of object and verb in German main and subofdirlateclauses: Ich kauflc ein Auto (I bm,ght a cat')vs. lc\]~ babe ei~..4,~to flckaufl (i have a car bough1 :--1 have I)ought a cat'), and the order of verb partici-.pies and their complements in Swedish predicativeand attributive constructions: Rapporlen dr" bcatdlhlav Bor.q ('Fhe report is ordered by Borg) vs. De~ avBorg beslMlda rapporten (The by Borg ordered re-port = The report that Borg ordered).
These con-structions are not problematic for FCGs, however,although they necessitate a categorial split.Although the number of categorial spli{s can bcmany in a FCC;, one would not like tim numberof schemas t.o 1oe very high.
For a language likeSwedish it seems possible to limit tl,e descriptioJ, tofive schemas, one for each type ot' pvojectiotl (V, N,A, t )) and one for coordinated structures \[Ahrenb89\].LP-rules are used also in franteworks which donot subscribe to the ECPO-property,  such as IIPSG\[PolSag87\].
llowever, they need to be colnplementedby something, as they miss an important aspect ofword order.
As they apply to sister constituents,they fail to give any information on the position ofa daughter relative to the phonological span of themother.
For instance, as a speaker of English I kt,owthat the definile article appears at the very begin-ning of an N1 ) and that relative clauses appear at theend.
Given a set of IA~-rules ordering detcrmilLers,relative clauses and other NP-constituents we maypossibly infer this information, but this is a round-about way of doing it.. To express such facts dire.ctlywe need a device that will impose a sequential strut-5 5ture on phonological spans, and it is tbr this purposethat the topological schema is useful.On the other hand partial orderings seem bet-ter suited to describe category-independent word or-der regularities.
Consider the case of complementsto a head.
In the Germanic languages the nor-real order would be the one expressed in (10): NP-complements precede PP-complements which pre-cede verbal complements whatever the category ofthe head \[GPSG85, p.
110\].
(10) NP-~ PP-~ VPThe rule in (2) defining the complement field(ObjF), repeated here for convenience, specifies threepositions, one for bare objects, one for prepositionalobjects and one for verbal and adjectival comple-ments.ObjF --+ obj 2 pobj* (comp)Even if we could appeal to the same or a similarfield structure rule in the case of complements o thea.djective, it seems natural in this case to explain theordering in terms of the difference in category be-tween different complements.
Thus, with the intro-duction of (1O) ObjF could be regarded as at position,i.e.
as a ternfinal of the schema in figure 1.Note however that in a FCG LP-rules receive aslightly different interpretation.
They apply to posi-tions rather than to local trees.6 Concluding remarksCurrent work on FCG includes the implementationof a head-driven, bidirectional chart-parsing algo-rithm.
The basic idea is to use fillers of identifier po-sitions to trigger bottom-up redictions.
FCGs havethe advantage that the search for topologically differ-ent, alternative projections of a head or other iden-tifier, can be accomplished by a single active edge.On the other hand the category of an edge is oftenabstract, and has to be determined on the basis ofcategory definitions and the content of the edges thatcombined to introduce it.Finally it should be stressed that while FCG is avariant of a LFG, the idea of regarding the schemasof traditional field grammars as structures of par-tim information can of course be exploited in anyunification-based formalism.\[Bresn82\] J. Bresnan (ed.
): The Mental Repre-sentation of Grammatical l~elalions, TheMIT Press: Cambridge Mass.\[Braumn86\] K. Braunmtiller: Ilvor moderne erP.
Diderichsens smtningsanMyse?
1\[II&A 86\] pp.
77-98.\[Dider46\] P. Diderichsen: Elementazr DaT*skGrammatik.
Third edition.
Copenhagen,Gyldendal.\[Drach37\] E. Drach: Grundgedanken der DeulschenSatzlehre.
Frankfurt/M, Diesterweg;reprint Darmstadt, Wiss.Buchgesellschaft, 1963.\[GPscss\] G. Gazdar, E. Klein, G. Pullum andI.
Sag: Generalized Phrase .5'lr~zc&reGrammar.
Oxford, Basil Blackwell, t985.\[US A SS\] L. tleltoft and a. E. Andersson (eds.
):Scetningsskemaet og dets stilliny - 50 drcrier.
Nydanske studier &~ ahnen komm, lL-nikalionsteori 16-17.
Akademisk Forlag.1986.\[LrGS2\] R. M. Kaplan and J. Bresnan: Lexical-Functional Grammar: A Formal Sys-tem for Grammatical Representation,.
\[a\[Bresn82\], pp.
173-281.\[PolSag87\] C. Pollard and I.
A.
Sag: \[nforwalio~-Based Syntaz aT~d Semantics.
Volum.e i:Fundamentals.
CSLI Lecture Notes, No.13.
Stanford.\[RueSr\] It.
Rue: Danish field grammar in typedI~I~.OLOG.
Proceedings of the Th.ird Cot>ference of the European Chapter of theACL, Copenhagen, April 1-3, 1987: lt37-172.\[Telem72\] U. Telenaan: Om Paul Diderichsens sw>taktiska modell.
1 Teleman, Ulf, 7're ztpl;-satser om grammalik.
Studentlitteratur,Lund, 33-57.\[Togeby88\] O. Togeby: Parsing Danish Text ill F;u-rotra.
Nordic Journal of Linyui,;tics, Vol.11, Nos.
1-2, p. 175-191.References\[Ahrenb89\] L. Ahrenberg: A formal field gram-mar.
Research report LiTtI-IDA-89-46,Link6ping university, department ofComputer Science.6 6
