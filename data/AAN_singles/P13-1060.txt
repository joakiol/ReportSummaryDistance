Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615?621,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsDecipherment Complexity in 1:1 Substitution CiphersMalte Nuhn and Hermann NeyHuman Language Technology and Pattern RecognitionComputer Science Department, RWTH Aachen University, Aachen, Germany<surname>@cs.rwth-aachen.deAbstractIn this paper we show that even for thecase of 1:1 substitution ciphers?whichencipher plaintext symbols by exchang-ing them with a unique substitute?findingthe optimal decipherment with respect to abigram language model is NP-hard.
Weshow that in this case the deciphermentproblem is equivalent to the quadratic as-signment problem (QAP).
To the best ofour knowledge, this connection betweenthe QAP and the decipherment problemhas not been known in the literature be-fore.1 IntroductionThe decipherment approach for MT has recentlygained popularity for training and adapting trans-lation models using only monolingual data.
Thegeneral idea is to find those translation modelparameters that maximize the probability of thetranslations of a given source text in a given lan-guage model of the target language.In general, the process of translation has a widerange of phenomena like substitution and reorder-ing of words and phrases.
In this paper we onlystudy models that substitute tokens?i.e.
wordsor letters?with a unique substitute.
It thereforeserves as a very basic case for decipherment andmachine translation.Multiple techniques like integer linear program-ming (ILP), A?
search, genetic algorithms, andBayesian inference have been used to tackle thedecipherment problem for 1:1 substitution ciphers.The existence of such a variety of different ap-proaches for solving the same problem alreadyshows that there is no obvious way to solve theproblem optimally.In this paper we show that decipherment of 1:1substitution ciphers is indeed NP-hard and thus ex-plain why there is no single best approach to theproblem.
The literature on decipherment providessurprisingly little on the analysis of the complexityof the decipherment problem.
This might be re-lated to the fact that a statistical formulation of thedecipherment problem has not been analyzed withrespect to n-gram language models: This papershows the close relationship of the deciphermentproblem to the quadratic assignment problem.
Tothe best of our knowledge the connection betweenthe decipherment problem and the quadratic as-signment problem was not known.The remainder of this paper is structured asfollows: In Section 2 we review related work.Section 3 introduces the decipherment problemand describes the notation and definitions usedthroughout this paper.
In Section 4 we show thatdecipherment using a unigram language modelcorresponds to solving a linear sum assignmentproblem (LSAP).
Section 5 shows the connectionbetween the quadratic assignment problem and de-cipherment using a bigram language model.
Herewe also give a reduction of the traveling sales-man problem (TSP) to the decipherment problemto highlight the additional complexity in the deci-pherment problem.2 Related WorkIn recent years a large number of publicationson the automatic decipherment of substitution ci-phers has been published.
These publications weremostly dominated by rather heuristic methods anddid not provide a theoretical analysis of the com-plexity of the decipherment problem: (Knight andYamada, 1999) and (Knight et al, 2006) use theEM algorithm for various decipherment problems,like e.g.
word substitution ciphers.
(Ravi andKnight, 2008) and (Corlett and Penn, 2010) areable to obtain optimal (i.e.
without search errors)decipherments of short cryptograms given an n-615gram language model.
(Ravi and Knight, 2011),(Nuhn et al, 2012), and (Dou and Knight, 2012)treat natural language translation as a decipheringproblem including phenomena like reordering, in-sertion, and deletion and are able to train transla-tion models using only monolingual data.In this paper we will show the connection be-tween the decipherment problem and the linearsum assignment problem as well as the quadraticassignment problem: Regarding the linear sum as-signment problem we will make use of definitionspresented in (Burkard and ela, 1999).
Concern-ing the quadratic assignment problem we will usebasic definitions from (Beckmann and Koopmans,1957).
Further (Burkard et al, 1998) gives a goodoverview over the quadratic assignment problem,including different formulations, solution meth-ods, and an analysis of computational complexity.The paper also references a vast amount of fur-ther literature that might be interesting for futureresearch.3 DefinitionsIn the following we will use the machine trans-lation notation and denote the ciphertext withfN1 = f1 .
.
.
fj .
.
.
fN which consists of ciphertokens fj ?
Vf .
We denote the plaintext witheN1 = e1 .
.
.
ei .
.
.
eN (and its vocabulary Ve re-spectively).
We definee0 = f0 = eN+1 = fN+1 = $ (1)with ?$?
being a special sentence boundary token.We use the abbreviations V e = Ve ?
{$} and V frespectively.A general substitution cipher uses a tables(e|f) which contains for each cipher token f aprobability that the token f is substituted with theplaintext token e. Such a table for substitutingcipher tokens {A,B,C,D} with plaintext tokens{a, b, c, d} could for example look likea b c dA 0.1 0.2 0.3 0.4B 0.4 0.2 0.1 0.3C 0.4 0.1 0.2 0.3D 0.3 0.4 0.2 0.1The 1:1 substitution cipher encrypts a givenplaintext into a ciphertext by replacing each plain-text token with a unique substitute: This meansthat the table s(e|f) contains all zeroes, except forone ?1.0?
per f ?
Vf and one ?1.0?
per e ?
Ve.For example the textabadcabwould be enciphered toBCBADBCwhen using the substitutiona b c dA 0 0 0 1B 1 0 0 0C 0 1 0 0D 0 0 1 0We formalize the 1:1 substitutions with a bijectivefunction ?
: Vf ?
Ve.
The general decipher-ment goal is to obtain a mapping ?
such that theprobability of the deciphered text is maximal:??
= argmax?p(?(f1)?(f2)?(f3)...?
(fN )) (2)Here p(.
.
. )
denotes the language model.
De-pending on the structure of the language modelEquation 2 can be further simplified.Given a ciphertext fN1 , we define the unigramcount Nf of f ?
V f as1Nf =N+1?i=0?
(f, fi) (3)This implies that Nf are integer counts > 0.
Wesimilarly define the bigram count Nff ?
of f, f ?
?V f asNff ?
=N+1?i=1?
(f, fi?1) ?
?
(f ?, fi) (4)This definition implies that(a) Nff ?
are integer counts > 0 of bigrams foundin the ciphertext fN1 .
(b) Given the first and last token of the cipher f1and fN , the bigram counts involving the sen-tence boundary token $ need to fulfillN$f = ?
(f, f1) (5)Nf$ = ?
(f, fN ) (6)(c) For all f ?
Vf?f ?
?VfNff ?
=?f ?
?VfNf ?f (7)must hold.1Here ?
denotes the Kronecker delta.616Similarly, we define language model matrices Sfor the unigram and the bigram case.
The uni-gram language model Sf is defined asSf = log p(f) (8)which implies that(a) Sf are real numbers withSf ?
[?
?, 0] (9)(b) The following normalization constraint holds:?f?Vfexp(Sf ) = 1 (10)Similarly for the bigram language model matrixSff ?
, we defineSff ?
= log p(f ?|f) (11)This definition implies that(a) Sff ?
are real numbers withSff ?
?
[?
?, 0] (12)(b) For the sentence boundary symbol, it holdsthatS$$ = ??
(13)(c) For all f ?
Vf the following normalizationconstraint holds:?f ?
?Vfexp(Sff ?)
= 1 (14)4 Decipherment Using Unigram LMs4.1 Problem DefinitionWhen using a unigram language model, Equa-tion 2 simplifies to finding??
= argmax?N?i=1p(?
(fi)) (15)which can be rewritten as??
= argmax??f?VfNfS?
(f) (16)When defining cff ?
= Nf log p(f ?
), for f, f ?
?Vf , Equation 16 can be brought into the form of??
= argmax??f?Vfcf?
(f) (17)Figure 1 shows an illustration of this problem.ABCabcVe Vfcij A B Ca NA log p(a) NB log p(a) NC log p(a)b NA log p(b) NB log p(b) NC log p(b)c NA log p(c) NB log p(c) NC log p(c)Figure 1: Linear sum assignment problem for acipher with Ve = {a, b, c}, Vf = {A,B,C}, uni-gram counts Nf , and unigram probabilities p(e).4.2 The Linear Sum Assignment ProblemThe practical problem behind the linear sumassignment problem can be described as fol-lows: Given jobs {j1, .
.
.
, jn} and workers{w1, .
.
.
, wn}, the task is to assign each job ji to aworker wj .
Each assignment incurs a cost cij andthe total cost for assigning all jobs and workers isto be minimized.This can be formalized as finding the assign-ment??
= argmin?n?i=1ci?
(i) (18)The general LSAP can be solved in polynomialtime using the Hungarian algorithm (Kuhn, 1955).However, since the matrix cij occurring for the de-cipherment using a unigram language model canbe represented as the product cij = ai ?
bj thedecipherment problem can be solved more easily:In the Section ?Optimal Matching?, (Bauer, 2010)shows that in this case the optimal assignment isfound by sorting the jobs ji by ai and workers wjby bj and then assigning the jobs ji to workers wjthat have the same rank in the respective sortedlists.
Sorting and then assigning the elements canbe done in O(n log n).5 Decipherment Using Bigram LMs5.1 Problem DefinitionWhen using a 2-gram language model, Equation 2simplifies to??
= argmax????N+1?j=1p(?(fj)|?(fj?1))???
(19)617xyl1l2l3 l4Assignmentsl1 l2 l3 l4(a) f1 f2 f3 f4(b) f1 f4 f3 f2Flowsf1 f2 f3 f4f1 1f2 1f3 1f4 1Figure 2: Hypothetical quadratic assignment prob-lem with locations l1 .
.
.
l4 and facilities f1 .
.
.
f4with all flows being zero except f1 ?
f2 andf3 ?
f4.
The distance between locations l1 .
.
.
l4is implicitly given by the locations in the plane,implying a euclidean metric.
Two example assign-ments (a) and (b) are shown, with (b) having thelower overall costs.Using the definitions from Section 3, Equation 19can be rewritten as??
= argmax????
?f?Vf?f ?
?VfNff ?S?(f)?
(f ?)???
(20)(Bauer, 2010) arrives at a similar optimizationproblem for the ?combined method of frequencymatching?
using bigrams and mentions that it canbe seen as a combinatorial problem for which anefficient way of solving is not known.
However,he does not mention the close connection to thequadratic assignment problem.5.2 The Quadratic Assignment ProblemThe quadratic assignment problem was introducedby (Beckmann and Koopmans, 1957) for the fol-lowing real-life problem:Given a set of facilities {f1, .
.
.
, fn} and a setof locations {l1, .
.
.
, ln} with distances for eachpair of locations, and flows for each pair of facili-ties (e.g.
the amount of supplies to be transportedbetween a pair of facilities) the problem is to as-sign the facilities to locations such that the sumof the distances multiplied by the correspondingflows (which can be interpreted as total transporta-tion costs) is minimized.
This is visualized in Fig-ure 2.Following (Beckmann and Koopmans, 1957)we can express the quadratic assignment problemas finding??
= argmin????n?i=1n?j=1aijb?(i)?
(j) +n?i=1ci?(i)???
(21)where A = (aij), B = (bij), C = (cij) ?
Nn?nand ?
a permutation?
: {1, .
.
.
, n} ?
{1, .
.
.
, n}.
(22)This formulation is often referred to as Koopman-Beckman QAP and often abbreviated asQAP (A,B,C).
The so-called pure or ho-mogeneous QAP??
= argmin????n?i=1n?j=1aijb?(i)?(j)???
(23)is obtained by setting cij = 0, and is often denotedas QAP (A,B).In terms of the real-life problem presented in(Beckmann and Koopmans, 1957) the matrix Acan be interpreted as distance matrix for loca-tions {l1 .
.
.
ln} and B as flow matrix for facilities{f1 .
.
.
fn}.
(Sahni and Gonzalez, 1976) show that thequadratic assignment problem is strongly NP-hard.We will now show the relation between thequadratic assignment problem and the decipher-ment problem.5.3 Decipherment Problem  QuadraticAssignment ProblemEvery decipherment problem is directly aquadratic assignment problem, since the ma-trices Nff ?
and Sff ?
are just special cases ofthe general matrices A and B required for thequadratic assignment problem.
Thus a reductionfrom the decipherment problem to the quadraticassignment problem is trivial.
This means that allalgorithms capable of solving QAPs can directlybe used to solve the decipherment problem.5.4 Quadratic Assignment Problem Decipherment ProblemGiven QAP (A,B) with integer matrices A =(aij), B = (bij) i, j ?
{1, .
.
.
, n} we constructthe count matrix Nff ?
and language model ma-trix Sff ?
in such a way that the solution for thedecipherment problem implies the solution to the618quadratic assignment problem, and vice versa.
Wewill use the vocabularies V e = V f = {1, .
.
.
, n+3}, with n + 3 being the special sentence bound-ary token ?$?.
The construction of Nff ?
and Sff ?is shown in Figure 3.To show the validity of our construction, we will1.
Show that Nff ?
is a valid count matrix.2.
Show that Sff ?
is a valid bigram languagemodel matrix.3.
Show that the decipherment problem andthe newly constructed quadratic assignmentproblem are equivalent.We start by showing that Nff ?
is a valid countmatrix:(a) By construction, Nff ?
has integer counts thatare greater or equal to 0.
(b) By construction, Nff ?
at boundaries is:?
N$f = ?
(f, 1)?
Nf$ = ?
(f, n+ 2)(c) Regarding the properties ?f ?Nff ?
=?f ?Nf ?f :?
For all f ?
{1, .
.
.
, n} the count proper-ties are equivalent toa?f?
+?f ?a?ff ?
= a?
?f +?f ?a?f ?f + ?
(f, 1)(24)which holds by construction of a?
?f anda?f?.?
For f = n+1 the count property is equiv-alent to1 +?f ?a?f ??
= 2 +?f ?a?
?f ?
(25)which follows from Equation (24) bysumming over all f ?
{1, .
.
.
, n}.?
For f = n+2 and f = n+3, the condi-tion is fulfilled by construction.We now show that Sff ?
is a valid bigram lan-guage model matrix:(a) By construction, Sff ?
?
[?
?, 0] holds.
(b) By construction, S$$ = ??
holds.
(c) By the construction of b?f?, the values Sff ?
ful-fill ?f ?
exp(Sff ?)
= 1 for all f .
This workssince all entries b?ff ?
are chosen to be smallerthan ?log(n+ 2).We now show the equivalence of the quadraticassignment problem and the newly constructed de-cipherment problem.
For this we will use the defi-nitionsA?
= {1, .
.
.
, n} (26)B?
= {n+ 1, n+ 2, n+ 3} (27)We first show that solutions of the constructeddecipherment problem with score > ??
fulfill?
(f) = f for f ?
B?.All mappings ?, with ?
(f) = f ?
for any f ?A?
and f ?
?
B?
will induce a score of ??
sincefor f ?
A?
all Nff > 0 and Sf ?f ?
= ??
forf ?
?
B?.
Thus any ?
with score > ??
will fulfill?
(f) ?
B?
for f ?
B?.
Further, by enumerating allsix possible permutations, it can be seen that onlythe ?
with ?
(f) = f for f ?
B?
induces a score of> ??.
Thus we can rewriten+3?f=1n+3?f ?=1Nff ?S?(f)?
(f ?)
(28)to?f?A?
?f?A?Nff ?S?(f)?
(f ?)?
??
?(AA)+?f?A?
?f ?
?B?Nff ?S?
(f)f ??
??
?(AB)+?f?B?
?f ?
?A?Nff ?Sf?
(f ?)?
??
?(BA)+?f?B?
?f ?
?B?Nff ?Sff ??
??
?(BB)Here?
(AB) is independent of ?
since?f ?
A?, f ?
?
{n+ 1, n+ 3} : Sff ?
= S1f ?
(29)and?f ?
A?
: Nf,n+2 = 0 (30)?
(BA) is independent of ?
since?f ?
?
A?, f ?
B?
: Sff ?
= Sf1 (31)?
(BB) is independent of ?.619Nff ?
=??????????
?a?11 a?12 ?
?
?
a?1n a?1?
0 0a?21 a?22 ?
?
?
a?2n a?2?
0 0... ... .
.
.
... ... ... ...a?n1 a?n2 ?
?
?
a?nn a?n?
0 0a?
?1 a?
?2 ?
?
?
a?
?n 0 2 00 0 ?
?
?
0 1 0 11 0 ?
?
?
0 0 0 0??????????
?Sff ?
=???????????
?b?11 b?12 ?
?
?
b?1n ?2 b?1?
?2b?21 b?22 ?
?
?
b?2n ?2 b?2?
?2... ... .
.
.
... ... ... ...b?n1 b?n2 ?
?
?
b?nn ?2 b?n?
?2?1 ?1 ?
?
?
?1 ??
?1 ??
?2 ?2 ?
?
?
?2 ?2 ??
?2?0 ?0 ?
?
?
?0 ??
??
?????????????
?a?ff ?
= aff ?
?minf?
f?
?{af?
f?
?
}+ 1 b?ff ?
= bff ?
?maxf?
f?
?{bf?
f?
?}
?
log(n+ 2)a?f?
= max??
?n?f ?=1af ?f ?
aff ?
, 0??
?+ ?
(f, 1) b?f?
= log?
?1?n?f ?=1exp(b?ff ?
)?2n+ 2??a?
?f ?
= max??
?n?f=1aff ?
?
af ?f , 0???
?i = ?
log(n+ i)Figure 3: Construction of matrices Nff ?
and Sff ?
of the decipherment problem from matrices A = (aij)and B = (bij) of the quadratic assignment problem QAP (A,B).Thus, with some constant c, we can finally rewriteEquation 28 asc+n?f=1n?f ?=1Nff ?S?(f)?
(f ?)
(32)Inserting the definition of Nff ?
and Sff ?
(simpli-fied using constants c?, and c??)
we obtainc+n?f=1n?f ?=1(aff ?
+ c?)(b?(f)?
(f ?)
+ c??)
(33)which is equivalent to the original quadratic as-signment problemargmax??
?n?f=1n?f ?=1aff ?b?(f)?
(f ?)???
(34)Thus we have shown that a solution to thequadratic assignment problem in Equation 34 isa solution to the decipherment problem in Equa-tion 20 and vice versa.
Assuming that calculat-ing elementary functions can be done inO(1), set-ting up Nff ?
and Sff ?
can be done in polynomialtime.2 Thus we have given a polynomial time re-duction from the quadratic assignment problem to2This is the case if we only require a fixed number of dig-its precision for the log and exp operations.the decipherment problem: Since the quadratic as-signment problem is NP-hard, it follows that thedecipherment problem is NP-hard, too.5.5 Traveling Salesman Problem Decipherment ProblemUsing the above construction we can immediatelyconstruct a decipherment problem that is equiva-lent to the traveling salesman problem by usingthe quadratic assignment problem formulation ofthe traveling salesman problem.Without loss of generality3 we assume that theTSP?s distance matrix fulfills the constraints of abigram language model matrix Sff ?
.
Then thecount matrix Nff ?
needs to be chosen asNff ?
=??????????
?0 1 0 ?
?
?
0 0 00 0 1 ?
?
?
0 0 00 0 0 ?
?
?
0 0 0... ... ... .
.
.
... ... ...0 0 0 ?
?
?
0 1 00 0 0 ?
?
?
0 0 11 0 0 ?
?
?
0 0 0???????????
(35)which fulfills the constraints of a bigram countmatrix.3The general case can be covered using the reductionshown in Section 5.620This matrix corresponds to a ciphertext of theform$abcd$ (36)and represents the tour of the traveling salesman inan intuitive way.
The mapping ?
then only decidesin which order the cities are visited, and only costsbetween two successive cities are counted.This shows that the TSP is only a special caseof the decipherment problem.6 ConclusionWe have shown the correspondence between solv-ing 1:1 substitution ciphers and the linear sum as-signment problem and the quadratic assignmentproblem: When using unigram language models,the decipherment problem is equivalent to the lin-ear sum assignment problem and solvable in poly-nomial time.
For a bigram language model, the de-cipherment problem is equivalent to the quadraticassignment problem and is NP-hard.We also pointed out that all available algorithmsfor the quadratic assignment problem can be di-rectly used to solve the decipherment problem.To the best of our knowledge, this correspon-dence between the decipherment problem and thequadratic assignment problem has not been knownprevious to our work.AcknowledgementsThis work was partly realized as part of theQuaero Programme, funded by OSEO, FrenchState agency for innovation.ReferencesFriedrich L. Bauer.
2010.
Decrypted Secrets: Methodsand Maxims of Cryptology.
Springer, 4th edition.Martin J. Beckmann and Tjalling C. Koopmans.
1957.Assignment problems and the location of economicactivities.
Econometrica, 25(4):53?76.Rainer E. Burkard and Eranda ela.
1999.
Linear as-signment problems and extensions.
In Handbookof Combinatorial Optimization - Supplement VolumeA, pages 75?149.
Kluwer Academic Publishers.Rainer E. Burkard, Eranda ela, Panos M. Pardalos, andLeonidas S. Pitsoulis.
1998.
The quadratic assign-ment problem.
In Handbook of Combinatorial Op-timization, pages 241?338.
Kluwer Academic Pub-lishers.Eric Corlett and Gerald Penn.
2010.
An exact A*method for deciphering letter-substitution ciphers.In Proceedings of the 48th Annual Meeting of theAssociation for Computational Linguistics (ACL),pages 1040?1047, Uppsala, Sweden, July.
The As-sociation for Computer Linguistics.Qing Dou and Kevin Knight.
2012.
Large scale deci-pherment for out-of-domain machine translation.
InConference on Empirical Methods in Natural Lan-guage Processing and Computational Natural Lan-guage Learning (EMNLP-CoNLL), pages 266?275,Jeju Island, Korea, July.
Association for Computa-tional Linguistics.Kevin Knight and Kenji Yamada.
1999.
A computa-tional approach to deciphering unknown scripts.
InProceedings of the ACL Workshop on UnsupervisedLearning in Natural Language Processing, num-ber 1, pages 37?44.
Association for ComputationalLinguistics.Kevin Knight, Anish Nair, Nishit Rathod, and KenjiYamada.
2006.
Unsupervised analysis for deci-pherment problems.
In Proceedings of the Confer-ence on Computational Linguistics and Associationof Computation Linguistics (COLING/ACL) MainConference Poster Sessions, pages 499?506, Syd-ney, Australia, July.
Association for ComputationalLinguistics.Harold W. Kuhn.
1955.
The Hungarian method forthe assignment problem.
Naval Research LogisticQuarterly, 2(1-2):83?97.Malte Nuhn, Arne Mauser, and Hermann Ney.
2012.Deciphering foreign language by combining lan-guage models and context vectors.
In Proceedingsof the 50th Annual Meeting of the Association forComputational Linguistics (ACL), pages 156?164,Jeju, Republic of Korea, July.
Association for Com-putational Linguistics.Sujith Ravi and Kevin Knight.
2008.
Attacking de-cipherment problems optimally with low-order n-gram models.
In Proceedings of the Conference onEmpirical Methods in Natural Language Processing(EMNLP), pages 812?819, Honolulu, Hawaii.
Asso-ciation for Computational Linguistics.Sujith Ravi and Kevin Knight.
2011.
Decipheringforeign language.
In Proceedings of the 49th An-nual Meeting of the Association for ComputationalLinguistics: Human Language Technologies (ACL-HLT), pages 12?21, Portland, Oregon, USA, June.Association for Computational Linguistics.Sartaj Sahni and Teofilo Gonzalez.
1976.
P-completeapproximation problems.
Journal of the Associationfor Computing Machinery (JACM), 23(3):555?565,July.621
