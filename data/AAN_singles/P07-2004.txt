Proceedings of the ACL 2007 Demo and Poster Sessions, pages 13?16,Prague, June 2007. c?2007 Association for Computational LinguisticsSemTAG: a platform for specifying Tree Adjoining Grammars andperforming TAG-based Semantic ConstructionClaire GardentCNRS / LORIACampus scientifique - BP 25954 506 Vand?uvre-Le`s-Nancy CEDEXFranceClaire.Gardent@loria.frYannick ParmentierINRIA / LORIA - Nancy Universite?Campus scientifique - BP 25954 506 Vand?uvre-Le`s-Nancy CEDEXFranceYannick.Parmentier@loria.frAbstractIn this paper, we introduce SEMTAG, a freeand open software architecture for the de-velopment of Tree Adjoining Grammars in-tegrating a compositional semantics.
SEM-TAG differs from XTAG in two main ways.First, it provides an expressive grammarformalism and compiler for factorising andspecifying TAGs.
Second, it supports se-mantic construction.1 IntroductionOver the last decade, many of the main grammaticalframeworks used in computational linguistics wereextended to support semantic construction (i.e., thecomputation of a meaning representation from syn-tax and word meanings).
Thus, the HPSG ERGgrammar for English was extended to output mini-mal recursive structures as semantic representationsfor sentences (Copestake and Flickinger, 2000); theLFG (Lexical Functional Grammar) grammars tooutput lambda terms (Dalrymple, 1999); and Clarkand Curran?s CCG (Combinatory Categorial Gram-mar) based statistical parser was linked to a seman-tic construction module allowing for the derivationof Discourse Representation Structures (Bos et al,2004).For Tree Adjoining Grammar (TAG) on the otherhand, there exists to date no computational frame-work which supports semantic construction.
In thisdemo, we present SEMTAG, a free and open soft-ware architecture that supports TAG based semanticconstruction.The structure of the paper is as follows.
First,we briefly introduce the syntactic and semantic for-malisms that are being handled (section 2).
Second,we situate our approach with respect to other possi-ble ways of doing TAG based semantic construction(section 3).
Third, we show how XMG, the linguisticformalism used to specify the grammar (section 4)differs from existing computational frameworks forspecifying a TAG and in particular, how it supportsthe integration of semantic information.
Finally, sec-tion 5 focuses on the semantic construction moduleand reports on the coverage of SEMFRAG, a coreTAG for French including both syntactic and seman-tic information.2 Linguistic formalismsWe start by briefly introducing the syntactic and se-mantic formalisms assumed by SEMTAG namely,Feature-Based Lexicalised Tree Adjoining Gram-mar and LU .Tree Adjoining Grammars (TAG) TAG is a treerewriting system (Joshi and Schabes, 1997).
A TAGis composed of (i) two tree sets (a set of initial treesand a set of auxiliary trees) and (ii) two rewriting op-erations (substitution and adjunction).
Furthermore,in a Lexicalised TAG, each tree has at least one leafwhich is a terminal.Initial trees are trees where leaf-nodes are labelledeither by a terminal symbol or by a non-terminalsymbol marked for substitution (?).
Auxiliary treesare trees where a leaf-node has the same label as theroot node and is marked for adjunction (?).
Thisleaf-node is called a foot node.13Further, substitution corresponds to the insertionof an elementary tree t1 into a tree t2 at a frontiernode having the same label as the root node of t1.Adjunction corresponds to the insertion of an auxil-iary tree t1 into a tree t2 at an inner node having thesame label as the root and foot nodes of t1.In a Feature-Based TAG, the nodes of the trees arelabelled with two feature structures called top andbot.
Derivation leads to unification on these nodes asfollows.
Given a substitution, the top feature struc-tures of the merged nodes are unified.
Given anadjunction, (i) the top feature structure of the innernode receiving the adjunction and of the root node ofthe inserted tree are unified, and (ii) the bot featurestructures of the inner node receiving the adjunctionand of the foot node of the inserted tree are unified.At the end of a derivation, the top and bot featurestructures of each node in a derived tree are unified.Semantics (LU ).
The semantic representation lan-guage we use is a unification-based extension of thePLU language (Bos, 1995).
LU is defined as fol-lows.
Let H be a set of hole constants, Lc the setof label constants, and Lv the set of label variables.Let Ic (resp.
Iv) be the set of individual constants(resp.
variables), let R be a set of n-ary relationsover Ic?
Iv?H , and let ?
be a relation over H ?Lccalled the scope-over relation.
Given l ?
Lc ?
Lv,h ?
H , i1, .
.
.
, in ?
Iv ?
Ic ?H , and Rn ?
R, wehave:1. l : Rn(i1, .
.
.
, in) is a LU formula.2.
h ?
l is a LU formula.3.
?,?
is LU formula iff both ?
and ?
are LUformulas.4.
Nothing else is a LU formula.In short, LU is a flat (i.e., non recursive) versionof first-order predicate logic in which scope may beunderspecified and variables can be unification vari-ables1.3 TAG based semantic constructionSemantic construction can be performed either dur-ing or after derivation of a sentence syntactic struc-ture.
In the first approach, syntactic structure andsemantic representations are built simultaneously.This is the approach sketched by Montague and1For mode details on LU , see (Gardent and Kallmeyer,2003).adopted e.g., in the HPSG ERG and in synchronousTAG (Nesson and Shieber, 2006).
In the secondapproach, semantic construction proceeds from thesyntactic structure of a complete sentence, from alexicon associating each word with a semantic rep-resentation and from a set of semantic rules speci-fying how syntactic combinations relate to seman-tic composition.
This is the approach adopted forinstance, in the LFG glue semantic framework, inthe CCG approach and in the approaches to TAG-based semantic construction that are based on theTAG derivation tree.SEMTAG implements a hybrid approach to se-mantic construction where (i) semantic constructionproceeds after derivation and (ii) the semantic lexi-con is extracted from a TAG which simultaneouslyspecifies syntax and semantics.
In this approach(Gardent and Kallmeyer, 2003), the TAG used in-tegrates syntactic and semantic information as fol-lows.
Each elementary tree is associated with a for-mula of LU representing its meaning.
Importantly,the meaning representations of semantic functors in-clude unification variables that are shared with spe-cific feature values occurring in the associated ele-mentary trees.
For instance in figure 1, the variablesx and y appear both in the semantic representationassociated with the tree for aime (love) and in thetree itself.Given such a TAG, the semantics of a treet derived from combining the elementary treest1, .
.
.
, tn is the union of the semantics of t1, .
.
.
, tnmodulo the unifications that results from derivingthat tree.
For instance, given the sentence Jean aimevraiment Marie (John really loves Mary) whoseTAG derivation is given in figure 1, the union of thesemantics of the elementary trees used to derived thesentence tree is:l0 : jean(j), l1 : aime(x, y), l2 : vraiment(h0),ls ?
h0, l3 : marie(m)The unifications imposed by the derivations are:{x?
j, y ?
m, ls ?
l1}Hence the final semantics of the sentence Jean aimevraiment Marie is:l0 : jean(j), l1 : aime(j,m), l2 : vraiment(h0),l1 ?
h0, l3 : marie(m)14S[lab:l1]NP[idx:j] NP[idx:x,lab:l1] V[lab:l1] NP[idx:y,lab:l1] V[lab:l2] NP[idx:m]Jean aime V[lab:ls]?
Adv Marievraimentl0 : jean(j) l1 : aimer(x, y) l2 : vraiment(h0), l3 : marie(m)ls ?
h0Figure 1: Derivation of ?Jean aime vraiment Marie?As shown in (Gardent and Parmentier, 2005), se-mantic construction can be performed either dur-ing or after derivation.
However, performing se-mantic construction after derivation preserves mod-ularity (changes to the semantics do not affect syn-tactic parsing) and allows the grammar used to re-main within TAG (the grammar need contain nei-ther an infinite set of variables nor recursive featurestructures).
Moreover, it means that standard TAGparsers can be used (if semantic construction wasdone during derivation, the parser would have to beadapted to handle the association of each elemen-tary tree with a semantic representation).
Hence inSEMTAG, semantic construction is performed afterderivation.
Section 5 gives more detail about thisprocess.4 The XMG formalism and compilerSEMTAG makes available to the linguist a formalism(XMG) designed to facilitate the specification of treebased grammars integrating a semantic dimension.XMG differs from similar proposals (Xia et al, 1998)in three main ways (Duchier et al, 2004).
First itsupports the description of both syntax and seman-tics.
Specifically, it permits associating each ele-mentary tree with an LU formula.
Second, XMG pro-vides an expressive formalism in which to factoriseand combine the recurring tree fragments shared byseveral TAG elementary trees.
Third, XMG pro-vides a sophisticated treatment of variables whichinter alia, supports variable sharing between seman-tic representation and syntactic tree.
This sharing isimplemented by means of so-called interfaces i.e.,feature structures that are associated with a given(syntactic or semantic) fragment and whose scopeis global to several fragments of the grammar speci-fication.To specify the syntax / semantics interfacesketched in section 5, XMG is used as follows :1.
The elementary tree of a semantic functor isdefined as the conjunction of its spine (the projec-tion of its syntactic head) with the tree fragmentsdescribing each of its arguments.
For instance, infigure 2, the tree for an intransitive verb is definedas the conjunction of the tree fragment for its spine(Active) with the tree fragment for (a canonical re-alisation of) its subject argument (Subject).2.
In the tree fragments representing the differentsyntactic realizations (canonical, extracted, etc.)
ofa given grammatical function, the node representingthe argument (e.g., the subject) is labelled with anidx feature whose value is shared with a GFidx fea-ture in the interface (where GF is the grammaticalfunction).3.
Semantic representations are encapsulated asfragments where the semantic arguments are vari-ables shared with the interface.
For instance, the ithargument of a semantic relation is associated withthe argI interface feature.4.
Finally, the mapping between grammaticalfunctions and thematic roles is specified when con-joining an elementary tree fragment with a semanticrepresentation.
For instance, in figure 22, the inter-face unifies the value of arg1 (the thematic role) withthat of subjIdx (a grammatical function) therebyspecifying that the subject argument provides thevalue of the first semantic argument.5 Semantic constructionAs mentioned above, SEMTAG performs semanticconstruction after derivation.
More specifically, se-mantic construction is supported by the following 3-step process:2The interfaces are represented using gray boxes.15Intransitive: Subject: Active: 1-ary relation:SNP?
[idx=X] VPl0:Rel(X)arg0=XsubjIdx=X?SNP?
[idx=I] VPsubjIdx=I?SVP ?
l0:Rel(A)arg0=AFigure 2: Syntax / semantics interface within the metagrammar.1.
First, we extract from the TAG generated byXMG (i) a purely syntactic TAG G?, and (ii) a purelysemantic TAG G??
3 A purely syntactic (resp.
seman-tic) Tag is a TAG whose features are purely syntactic(resp.
semantic) ?
in other words, G??
is a TAG withno semantic features whilst G??
is a TAG with onlysemantic features.
Entries of G?
and G??
are indexedusing the same key.2.
We generate a tabular syntactic parser for G?using the DyALog system of (de la Clergerie, 2005).This parser is then used to compute the derivationforest for the input sentence.3.
A semantic construction algorithm is applied tothe derivation forest.
In essence, this algorithm re-trieves from the semantic TAG G??
the semantic treesinvolved in the derivation(s) and performs on thesethe unifications prescribed by the derivation.SEMTAG has been used to specify a core TAG forFrench, called SemFRag.
This grammar is currentlyunder evaluation on the Test Suite for Natural Lan-guage Processing in terms of syntactic coverage, se-mantic coverage and semantic ambiguity.
For a test-suite containing 1495 sentences, 62.88 % of the sen-tences are syntactically parsed, 61.27 % of the sen-tences are semantically parsed (i.e., at least one se-mantic representation is computed), and the averagesemantic ambiguity (number of semantic represen-tation per sentence) is 2.46.SEMTAG is freely available at http://trac.loria.fr/?semtag.3As (Nesson and Shieber, 2006) indicates, this extraction infact makes the resulting system a special case of synchronousTAG where the semantic trees are isomorphic to the syntactictrees and unification variables across the syntactic and semanticcomponents are interpreted as synchronous links.ReferencesJ.
Bos, S. Clark, M. Steedman, J. R. Curran, and J. Hock-enmaier.
2004.
Wide-coverage semantic representa-tions from a ccg parser.
In Proceedings of the 20thCOLING, Geneva, Switzerland.J.
Bos.
1995.
Predicate Logic Unplugged.
In Proceed-ings of the tenth Amsterdam Colloquium, Amsterdam.A.
Copestake and D. Flickinger.
2000.
An open-source grammar development environment and broad-coverage english grammar using hpsg.
In Proceedingsof LREC, Athens, Greece.Mary Dalrymple, editor.
1999.
Semantics and Syntax inLexical Functional Grammar.
MIT Press.E.
de la Clergerie.
2005.
DyALog: a tabular logic pro-gramming based environment for NLP.
In Proceed-ings of CSLP?05, Barcelona.D.
Duchier, J.
Le Roux, and Y. Parmentier.
2004.
TheMetagrammar Compiler: An NLP Application witha Multi-paradigm Architecture.
In Proceedings ofMOZ?2004, Charleroi.C.
Gardent and L. Kallmeyer.
2003.
Semantic construc-tion in FTAG.
In Proceedings of EACL?03, Budapest.C.
Gardent and Y. Parmentier.
2005.
Large scale se-mantic construction for tree adjoining grammars.
InProceedings of LACL05, Bordeaux, France.A.
Joshi and Y. Schabes.
1997.
Tree-adjoining gram-mars.
In G. Rozenberg and A. Salomaa, editors,Handbook of Formal Languages, volume 3, pages 69?
124.
Springer, Berlin, New York.Rebecca Nesson and Stuart M. Shieber.
2006.
Sim-pler TAG semantics through synchronization.
In Pro-ceedings of the 11th Conference on Formal Grammar,Malaga, Spain, 29?30 July.F.
Xia, M. Palmer, K. Vijay-Shanker, and J. Rosenzweig.1998.
Consistent grammar development using partial-tree descriptions for lexicalized tree adjoining gram-mar.
Proceedings of TAG+4.16
