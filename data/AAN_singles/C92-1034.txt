Structure Sharing in Lexicalized Tree-Adjoining Graulmars*K. V i jay -ShankerDept.
of Computer & Information ScienceUniversity of DelawareNewark, DE 19716, USAvii ayqOudel, eduYves SchabesDept.
of Computer & Information ScienceUniversity of PennsylvaniaPhiladelphia, PA 19104-6389, USAschabesQuaagi, c s .
upena, eduAbstractWe present a scheme for efficiently representing a lexi-caiized tree-adjoining grammar (LTAG).
The propcoedrepresentational scheme allows for structure-sharingbetween lexical entries and the trees associated withthe lexical items.
A compact organization is achievedby organizing the lexicon in a hierarchical fashion andusing inheritance as well as by using lexical and syn-tactic rules.While different organizations (Flickinger, 1987; Pol-lard and Sag, 1987; Shieber, 1986) of the lexicon havebeen proposed, in the scheme we propose, the inheri-tance hierarchy not only provides tructure-sharing oflexical information but also of the associated elemen-tary trees of extended omain of locality.
Furthermore,the lexical and syntactic rules can be used to derive newelementary trees from the default structures pecifiedin the hierarchical lexicon.In the envisaged scheme, tbe use of a hierarchicallexicon and of lexical and syntactic rules for lexical-ized tree-adjoining grammars will capture importantlinguistic generalizations and also allows for a spaceefficient representation f the grammar.
This will al-low for easy maintenance and facilitate updates to thegrammar.1 MotivationsLexicalized tree-adjoining grammar (LTAG) (Schabeset al, 1988; Schabes, 1990) is a tree-rewriting formal-ism used for specifying the syntax of natural anguages.It combines elementary lexical trees with two opera-tions, adjoining and substitution.
In a LTAG, lexicalitenm are associated with complex syntactic structures(in the form of trees) that define the various phrasestructures they can participate in.
LTAG allows forunique syntactic and semantic properties:?
The domain of locality in LTAG is larger than forother formalisms, and?
Most syntactic dependencies ( uch as filler-gap,verb-subject, verb-objects) and some semantic*The first author is partially supported by NSF Grant IRI90-16591.
The second author in partially supported by DARPAGr i t  N0014-90-31863, ARO Grant DAAL03-89-C-0031 andNSF Grant IRI90-16592.dependencies ( uch as predicate-argument) havebeen localized within the elementary trees statedin the lexicon.These unique properties of LTAGs have been shownto be linguistically very useful (Kroch and Jo~hi,1985; Kroch, 1987; Kroch, 1989; Abeill6, 1988; Shieberand Schabes, 1990).
However these same aspects cancause many practical problems.
This is because thereis considerable redundancy of information among theelementary trees that provide the enlarged omain oflocality.
~o far, the lexicon of a LTAG has been orga-nized in a completely flat manner, not allowing for anysharing of syntactic or semantic properties of the \[exi-cal items.
Also, in the current organization there is nostructure sharing among the different rees associatedwith the different lexical items as they are stated inde-pendently of each other.
For example, Figure 1 showssome of the trees associated with the lexical item 'eat'.In Figure 1, the tree ~1 corresponds to a declar-ative sentence, a2 to a WII-question on its subjectand aa to a relative clause in which the subject hasbeen relativized.
This example illustrates the redun-dancy among the elementary trees found in the lexi-con.
For example, the effect of the rule S ---+ NP  VPis found in all trees associated with a verb.
Similarly,VP --* V NP  is found in all trees associated with atransitive verb.
The current implementation of theLTAG for English (Abeilld et al, 1990) comprises over800 sentential tree frames (trees without lexicaI items).Each one of these frames includes a part that corre-spond to the rule S --4 NP  VP.
This problem of repli-cation of information has reached an acute stage andany practical natural language processing system basedon LTAG must address this issue.An equally serious problem is one of maintainingand updating such a grammar.
It arises due to thelack of structure-sharing and of statements of variousindependent principles that make up the elementarytrees.
Any small change to some aspect of the designof the grammar could necessitate making changes topossibly hundreds of trees manually.
For instance, anaddition of a constraint equation associated with therule S ---* NP  VP  would affect the description of ev-ery tree associated with a verb; a change to the waywh-questions are formed must be propagated to everytree for wh-question.
Furthermore, one can only man-ually verify that such an update does not conflict withACTES DE COLING-92, NAtCr~s, 23-28 ^Or3T 1992 2 0 5 PROC.
Or COLING-92, NA~CrEs, AU~.
23-28, 1992/s Nr~ SNPoI- VP NPo VPeat eat(,~)NPNP* /~NP~ SNP0 VP IAei i N'PI$tatFigure 1: Sample of Elementary Trees in a LTAGany other principle already instantiated.
Given the sizeof the grammar, this is not a feasible task.2 Goa ls  o f  the Proposed WorkThe problems mentioned above indicate an urgent needfor addressing the issue of organization of a LTAG.
Fora LTAG, much of this effort would have to deal with theorganizatiou of the lexicon and the elementary trees.Proposals for a compact representation f the lex-icon and grammars have been suggested.
For exam~pie, Flickinger (1987) and Pollard and Sag (1987) usea hierarchical lexicon aud rules for implementing Head-driven Phrase Structure Grammars.
Shieber (1986)proposed the use of default inheritance combined withtemplates and of transformation rules in the PATR-II system for organizing a unification based grammar.Lexical redundancy rules have been used in LFG (Bres-nan and Kaplan, 1983) to capture relations amonglexicai items.
Gazdar et al (1985) proposed the useof meta-rules for expressing transformational relation-ships.There has been suggestions for compacting the sizeof a tree-adjoining rammar lexicons (Becker, 1990;ttabert, 1991).
However, they only partially solve theproblem since they fail to combine in a uniform way acompact representation f the lexicon and, at the sametime, of their associated elementary trees.In this paper, we present a scheme to efficiently rep-resent a LTAG and illustrate this scheme by examples.We examine the information that needs to be associ-ated with the classes in our hierarchical organizationin order that we can represent the elementary trees ofa LTAG.
Our main concern in this paper is the pro-posal for organizing a LTAG.
In order to be concrete,we consider the representation f a particular grammarfor English (Abeill$ et al, 1990).
While the elegance(and the correctness) of the mechanisms used to cap-ture linguistic generalizations is an important issue insuch an enterprise, these linguistic oncerns are beyondthe scope of this work.
We give no linguistic motiva-tions for the grammar that is being represented, norfor some of the methods used to represent i .
The lin-guistic aspects of the work presented in this paper aremeant to be suggestive.
Also, while our scheme bor-rows heavily from Fliekinger (1987), it is differentiatedfrom similar enterprises in that we consider the repre-sentation of syntactic structures (in the form of trees)associated with lexical items.
For this reason, we con-centrate on the representation f the tree structures.The representation we propose allows for structuressharing between lexical entries and for syntactic andlexical rules while being lexically sensitive.
Lexicalitems as well as the elementary trees found in a lex-icalized tree-adjoining grammar are organized in a hi-erarchical lexicon using inheritance.
Furthermore, thelexical rules relate the information associated with lex-ical entries together.
In particular, they derive new el-ementary trees of extended omain of locality from theone found in the hierarchical lexicon.
Lexical idiosyn-crazies are specified in the particular lexical entries.3 Lexical OrganizationThe lexical entries (LEs) are organized in hierarchicalfashion.
The value of an attribute of lexical entry inthe lexicon is either obtained by inheritance or by lo-cal specification.
We allow for overwriting inheritedattributes by assuming that the local specification hasa higher precedence.
Figure 2 shows a fragment of thehierarchy for verbs.
The lexicon associates lexicaJ itemswith a set of classes.Entries specify relationships and properties of setsof nodes in trees which will be associated with thelexical items.
The framework for describing the treethat will be associated with the lexicai item is verysimilar to unification based tree-adjoining rammar(Vijay-Shanker, 1992) in which the trees are describedwith partial descriptions of their topology (Rogers andVijay-Shanker, 1992) using statements of dominationAcres DE COLING-92, NANTES, 23-28 Ao~r 1992 2 0 6 Paoc.
OF COLING-92, NANTES, AUO.
23-28, 1992give d~at~ ~tFigure 2: 1,?agment of the Lexiconand linear precedence.
We do not discuss tile descrip-tion language in which these trees are stated.
Instead,we will pictorially represent these partial descriptionsof trees.For the purposes of this paper, in our representationscheme, we will focus on the descriptions of associatedelementary trees.Each class comprises of tile following attributes(among others):* superclasses, tile set of imnlediate ancestor classesfrom which the current class inherits.?
nodes, the set of entities involved in the lexicalentry.?
description, a partial description of a tree.
Thisdescription consists of partial statements of dom-ination, immediate domination and linear prece-dence over the set of nodes given in the previous at-tribute.
In tile following, we will ignore tile linearprecedence r lationship.
The immediate domina-tion relationship will be illustrated by a plain lineand the domination relationship by a dotted line.The language of this description and its semanticis given by Rogers and Vijay-Shanker (1992).
Thedashed line between tree nodes does not mean theyare necessarily different nodes.
It is used to indi-cate the two nodes in question could he the sameor if they are ditferent then one.
of them dominatesthe other in the manner indicated.o constraint equations are unification equations thathold between the set of nodes.
These equationsspecify feature structnres associated with the setof nodes.
Attritmtes uch as agreemeut (agr) orcase (ease) are found in these equations.?
completion; y = completion(x) specifies that y isthe lowest node in the tree which does not requireany argument of the predicative lement x. Thiswill be used, for example, in defining how the treefor wh-question is obtained.?
head-daughter; x = head-daughter(y).
This will bensed in propagation of features by asl implicit as-sumption of head-feature convention.
* argument node ; arft specifies the node for the ar-gnment being introduced by the entry.
This willbe used to identify nodes that are mentioned indifferent classes e.g.
in NP-IOBJ or used in tilesyntactic rides such as for Wll-movement.?
linear precedence (LP) statements which defineprecedence an'long nodes within the framework ofID/LP TAG proposed by Jo~hi (1987).?
anchm; anchor --- xspecifies that the node x is tileaalchor node of the tree being described.For each entity in the hierarchy, attributes (such asarg) of some its aalcestors can be referred to for furtherspecifying the description while inheriting the descrip-tion of its ancestors.We can now consider an example.
The following en-try can be associated with the class VERB: 1 In thisentry, as well ,a.q in the following entries, we do not givethe full specification but specify only that part whichis relevant to the discussion.mnodes :  s~ np ,  Vl) p vsnp vpdescription:s .<cat>=Sup.
< agr >= vp.
< ayr >constraints equations: up.
<: cast: >= noraarg : nps = completion(v)vp-= head-daughter(s)uT lehor  ~ Vup < vpThis entry specifies partially the tree structure forevery verb, indicating that (by default) each verb musthave a subject.
It is important o note that despitethe pictorial representation used, s,np, vp, v are usedto refer to node and not to their labels.The following entry is associated with the class oftransitive verbs (TIL~NSITIVE): 21Tire tree described below could have been predicted fromgeneral principles nuch an HPSG'a rule atated on Page 149 inPollard and Sag (1987).2Similarly, tile tree described below could have been predictedfrom HPSG's rule atated on page 151 in Pollard and Sag (1987).AcrEs DE COLING-92, NANTES, 23-28 Aol~rr 1992 2 0 7 I'ROC.
OF COLING-92, NANTr:S, AUG. 23-28.
1992TRANSIT IVEsuperelasses: VERBnodes: vp, v, lipviadescription:v npconstraints equations:...ar t  : nps : completion(v)v = head-daughier(vp)ailehor ~The following entry is associated with the class ofverbs taking an NP as indirect objects(IOBJ) whichmay be possibly found within a prepositional phrase ornot:IOB Jsuperclasses: VERBnodes: vp, v, npconstraints equations:...arg:  npvpdescription: / \ \v i~panchor = vPP-IOBJsuperclasaes: IOBJnodes: vp, v, pp, p, npconstraints equations:...art  : ppvpAdescription: v Ap npnp : a rg ( IOB J )anchor = vThe following entry is associated with the class ofditransitive verbs taking a noun phrase as direct ob-ject and a prepositional phrase as an indirect object.The entry only specifies that the NP direct object mustprecede the NP introduced by the prepositional phrase.DITRANS1 -Isuperclaeses: TRANSITIVE, PP-IOBJLP  : a rg (TRANSTIVE)  < arg(PP- IOBJ )The following entry is associated with the class ofverbs taking an NP as indirect objects (NP-IOBJ):NP-IOBJsuperclaases: IOBJnodes: vp, v, npconstraints equations:...arg:  npdescription: Av npnp= arg( IOB J )anchor = vThe equality np= arg( IOB J )  used in the aboveframe forces the NP argument introduced in IOB J  (asuperclass of NP- IOBJ )  to be immediately dominatedby the VP node, thus disallowing it being embedded ina prepositional phrase.However, the following entry is associated with theclass of verbs taking a prepositional phrase (PP-IOBJ):The description of the default tree for DITRANS1is inherited from VERB, TRANSIT IVE ,  10B J, PP-IOBJ.
From the descriptions given in VERB and inTRANSIT IVE  we obtain the following structures:Anp vpl ivp2AV npNote that the VP node in VERB dominateS theverb node whereas the one introduced in TRANSI -T IVE  immediately dominates the verb node.
This re-sults in the VP node introduced in verbs dominating(hence the dashed line) the VP node introduced inthe TRANSIT IVE  frame.
This kind of reasoning thatleads to the formation of complex tree structures igiven by Rogers and Vijay-Shanker (1992).
Proceed-ing with the description of the tree structure inheritedfrom IOB J  and PP - IOB J  we get:AcTES DE COLING-92, NANTES, 23-28 AOI3T 1992 2 0 8 PROC.
OF COLING-92, NANTEs, AUG. 23-28, 1992np vplvexv np ppp npwhich is used as default structnre for verbs that be-long to DITRANS1.
aIn general this method for building a tree to be asso-ciated with a lexical item can be described as follows.First the nodes described in each superclass of the lex~ical entry are collected along with the statements ofrelationships specified between the nodes.
This mayrequire renaming of nodes in case nodes in differentclasses are given the same name.
For instance, whenwe collect the nodes specified in VERB and TRAN-S\[7'IVE, the VP nodes specified in them must be renamed (say as vpl and vp~) as must the NP nodes (say,the node for the subject hat is specified in VERB getsrenamed as up1 and the object specified in TRANS1-TIVF gets renamed as np2).
Next we must add anextra statement to explicitly equate tile anchor nodesspecified.
Now if we additionally inherit the descrip-tions from 10B,\] aud PP-IOBJ the two NP  nodesintroduced get renamed but identified as a result ofthe identification suggested in PP-IOBJ.
Notice thatthe identification of the VP nodes in TRANSITIVI';,IOBJ, and PP-IOBJ does not get occur at this point.Such an identification gets done when we pass the treedescriptions collected to the machinery described byRogers anti Vijay-Shanker (1992).
Since the anchorsspecified in these three classes get identified, the threeVP nodes specified (in TRANSITIVE, IOBJ, and PP-IGBJ) as the parents of these anchor nodes must alsoget identified.
Using this type of reasoning about thestructural properties of trees, the structure given abovegets created.
To complete the discu~qion of the inher-itance of the tree descriptions, the head-daughter re-lations are noted in order that they can be used forfeature sharing.
Also the set of arg nodes are also col-lected and called the aTys of the lexical entry.
For ex-ample, the args in the case above would be up1 (fromVERB), np2 (from TRANSITIVE),  npa (from IOBJ),and pp (from PP-IOB~.
Later, in the syntactic rule,Wh-QUESTION, we use the a~ys of a lexieal entry toindicate tbe set of possible nodes that can be moved.In TAG the structure we derived above for DI-TRANS1 is represented in the form of the followingtree:3If needed, the value of the preposition can be specified byaddltlona\] information at the lexical entry.np vpv np ppp npwith two feature structures (toll and bottom) a.,~o-elated with the VP node to indicate the collapsing oftwo VP nodes linked by domination.
Tiffs process isalso described in (Rogers and Vijay-Shanker, 1992).4 Lexical and Syntact ic  RulesThe second mechanism we adopt for structure-sharingis the use of lcxical and syntactic rules to capture in-flectional and derivational relationships among lexicalentries.
The mechanism is very similar than the oneproposed by Flickinger (1987), however it ditfers fromit since we derive elementary trees of extended omainof locality.
Lexical and syntactic rules relate an inputlexical entry to an output lexical entry.
The output lex-ical entry gets its information from the input lexical en-try, lexical and syntactic rules, and possibly additionalidiosyncratic information specified in the lexicon.We illustrate the use of lexical and syntactic rules byexamples.
In the following, we will focus our attentionto the derivational relationships and also to the outputtree description.
Consider the rule for wh-question.-W~ QUES'r IONinput : LEioutput : LEox E args(LEi)x' = copy(x)y = completiou(LEi)LEo.tree,-description ::sAx' sIiIWe treat formation of structure for wb-question asrelation between two lexical entries specified here asLEI and LEo.
The tree description ill LEo indicatesthat an argument node (x) ill tile tree described in LEican be moved leaving a trace.
Ilere tile relationshipbetween x and y is obtained from the description inLEI.
Copy(x) indicates that a copy of the descriptionof entire sub-tree rooted at node x needs to recordedin output description.
In the resulting description, thefiller is shown to C-command the gap.ACRES DE COL1NG-92, NANTES, 23-28 AOI~'I' 1992 2 0 9 Plloc.
OF C()I.IN(;-92, NAI, rrI';S, Auo.
23-28, 1992Thus, if LEI stood for DITRANSI and say we con-sider x to be the node NP direct object, the trees de-scribed in LEi and LEo are:SNIP SnpV NP PPv np ppp np e P NIPBefore il lustrating the passive rule, we need to in-troduce the so-called CHANGE ARITY relation in-troduced by Fiickinger (1987).
We say that C~ =CItANGE-ARITY(C1) if CI is the immediate super-class of C1 distinct from TRANSITIVE.
We can nowstate the passive rule:PASSIVEinput : LEIoutput : LEopassive E LEo.CLASSESCHANGE-AR1TY(LEi.CLASS) E LEo.CLASSESLE~.CLASS E LEo.CLASSES*I)v (pp)p npE LEo.tree-descriptionbySuppose we let LEi.class to be DITRANS1.
Thusfrom the definition CHANGE-ARITY(DITRANS1) isPP-IOBJ.
The tree description inherited from PP.IOBJ differs from that of DITRANS1 only in that wedo not postulate the presence of the node for NP di-rect object.
Thus the tree description we arrive at is:up vpvp1"7; v pp p npp np byand by equating the two V nodes and by col-lapsing the two VP nodes as before, we get:?
|up vp np vpv pp (pp) v (pp)A Ap ~ p np p npI oFb7 byppp npFrom the tree description and constraint equations ofthe passive class, we will inherit information to placethe two feature structures on the VP nodes on topform:passive and on the bottomfevm:pparl.
Since thesefeature structures cannot be unified, the auxiliary verb"be" is required to adjoin on the VP node.As in any similar enterprise, we have to providemeans to handle exceptions.
For example, we will haveto provide such mechanisms to handle verbs that areexceptions to the use of PASSIVE or DATIVE rule.Like in (Flickinger, 1987) we allow overwriting andstate explicitly that certain rules are not applicable inthe entries of some lexieal items.
However, consider-able more machinery would need to be added to cap-ture semantic onstraints on the application of suchrules.
At present, little work has been done to incorpo-rate specification of semantic onstraints in conjunctionwith TAG.5 Conc lus ionWhile a number of proposals (Flickinger, 1987; Pollardand Sag, 1987; Shieber, 1986) have been made for ahierarchical organization of a lexicon and grammar, inour approach the hierarchical lexicon, the syntactic andlexical rules additionally specify partial descriptions oftrees of extended omain of locality which capture syn-tactic mid semantic dependencies.
The description ofelementary trees has been obtained by collecting par-Acrv.s DE COLING-92, NAMES, 23-28 AOt~n" 1992 2 1 0 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992tim description of trees and then realizing tile least treesatisfying these constraints.
Tile syntactic and lexicalrules enable us to derive new entries from existing ones.Overwriting allows us to be sensitive to lexical idiosyn-er asies.As mentioned earlier, tile linguistic exaraples givenhere were meant only to indicate the potential of ourapproach.
In general, we anvisage tile use of a hierar-chical lexicon, of syntactic and lexical rules for lexical-ized tree-adjoining grammars that capture importaaltlinguistic generalizations and provide for a space effi-cient representation f tile grammar.
Equany impor-tant, such a scheme would facilitate the automation ofthe process of updating and maintaining the grammar,an urgent need felt during the development of a largelexica\[ized tree-adjoining grammar.We are currently investigating the possibility ofdefining parsing strategies that take advantage of thetype of hierarchical representation we proposed ill thispaper.
Many other related topics will be explored illthe future.
A much more elaborate organization will beconsidered, which in turn may suggest the need for ad-ditional machinery.
We will implement the inheritancemachinery described above and the process of buildingtrees from these descriptions.
We would also like toconsider the treatment of idioms and tile integration ofsyntactic and semantic specifications in the context ofLTAG.ReferencesAnne Abeill~, Kathleen M. Bishop, Sharon Cote, andYves Sehabes.
1990.
A lexicalized trec adjoininggrammar for English.
Technical Report MS-CLS-90-24, Department of Computer and Information Sci-ence, University of Pennsylvania.Anne Abeill& 1988.
Parsing french with tree adjoininggrammar: some linguistic accounts.
In Pwceedingsof the 12 ~h lnter~alional Conference on Compnta-tional Linguistics (COLING'88), Budapest, August.T.
Becker.
1990.
Meta-ru\[es on tree adjoining gram-mars.
In Proceedings of the 1st International Work~shop on "1bee Adjoining GTvJmmars, Dagstuhl Castle,FRG, August.J.
Bresnan and R. Kaplan.
1983.
Lexieal-functionalgrammar: A formal system for gramraatica\[ repre-sentation.
In The Menial Representation f Gram-ma$ical Relations.
M.I.T.
Press, Cambridge, MA.Daniel Paul Flickinger.
1987.
Lexieal Rules in the Hi-erarchical Lexicon.
Ph.D. thesis, Stanford Univer-sity.G.
Gazdar, E. Klein, G. K. Pullum, and 1.
A.
Sag.
1985.Generalized Phrose S'trueture Grammars.
BlackwellPublishing, Oxford.
Also published by llarvard Uni-versity Press, Cambridge, MA.Benoit llabcrt.
1991.
Using inheritance in object-oriented programming to combine syntactic rulesand lexical idiosyncrasies.
Ill Proceedings of the sec-ond laieT~alioual Workshop on Parsing Technolo-\[lies, Cancun, Mexico, February.Aravind K. 3oshi.
1987.
Word-order variation ill natu-ral language generation.
Ill AAA\[ ill Sixth NationalCon\]erencc on Arlificial Intelligence, pages 550 555,Seattle, Washington, ,I uly.Antho~y Kroch and Aravind K. Joshi.
1985. l,inguis-tit: relevance of tree adjoining grammars.
Techni-old Report MS-CIS-85-18, 1)epartment of Computerand Information Science, University of Pennsylvania,April.Anthony Kroch.
1987.
Unbounded dependenciesand subjacency in a tree adjoining grannnar.
IllA.
Manastcr~ltnmer, editor, Mathematics of Lan~guage.
John Benjamins, Amsterdam,Anthony Kroch.
1989.
Asynunetries ill long distanceextraction in a tag gratnmar.
In M. i\]altin andA.
Kroeh, editors, Alle,native Conceptions of PhraseStruclure, pages 66-98.
University of Chicago Prerm.Carl Pollard and Ivan A.
Sag.
1987. lnformation-ltasedSyntaz and Semantics.
Vol 1: Fuudamenlals.
CSLI.J im Rogers and K. Vijay-Shanker.
1992. l~easoningwith descriptions of trees.
In 30 lh Meeting of the As..sociation for Computational Linyuistics (ACL'921.Yves Schabes, Anne Abeillfi, and Aravind K. Joshi.1988.
Parsing strategies with 'lexicalized' grammars:Application to tree adjoining rammars, in Proceed-ings of the 12 ~'~ Internalional Conference on C'ompu~rational Linguistics (COLING'88), Budapest, |lull-gary, August.Yves Schabes.
1990.
Mathematical nd ComputalioaalAspects of Le~:icahzed G~u,umars.
Ph.D. thesis, Uni-versity of Pennsylvania, Philadelphia, PA, August.Available as technical report (MS-C1S-90-48, LINCLAI1179) frolo the Department ofComputer Science.Stuart Shieber and Yves Schahes.
1990.
Synchronoustree adjoining rammars, lli Proceedings of the 13 chInternational ConfeTence on Computational Linguis-tics (COLING'90), llelsinki.Stuart M. Shieber, 1986.
An lntroduclion to Unlit-cation-Based Approaches to Grammar.
Canter fortile Study of I,anguage and Information, Stanford,CA.K.
Vijay-Shanker.
1992.
Using description of trees ina tree adjoining grammar, qb appear in Computa-tional Linguistics.ACTES DE COLlNG-92, NAmf;,S, 23-28 AO~JT 1992 2 1 1 PRO(:, OF COl,IN(;-92, NANTES, AUG. 23 28, 1992
