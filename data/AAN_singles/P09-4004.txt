Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 13?16,Suntec, Singapore, 3 August 2009.c?2009 ACL and AFNLPProLiV - a Tool for Teaching by Viewing Computational LinguisticsMonica GavrilaHamburg University, NATSVogt-K?olln Str 30, 20251, Germanygavrila@informatik.uni-hamburg.deCristina VertanHamburg University, NATSVogt-K?olln Str 30, 20251, Germanyvertan@informatik.uni-hamburg.deAbstractProLiV - Animated Process-modeler ofComplex (Computational) LinguisticMethods and Theories - is a fully modular,flexible, XML-based stand-alone Javaapplication, used for computer-assistedlearning in Natural Language Processing(NLP) or Computational Linguistics (CL).Having a flexible and extendible architec-ture, the system presents the students, bymeans of text, of visual elements (such aspictures and animations) and of interactiveparameter set-up, the following topics:Latent Semantics Analysis (LSA), (com-putational) lexicons, question modeling,Hidden-Markov-Models (HMM), andTopic-Focus.
These topics are addressedto first-year students in computer scienceand/or linguistics.1 IntroductionThe role of multimedia in teaching NaturalLanguage Processing (NLP) is demonstratedby constant development of software packagessuch as GATE (http://gate.ac.uk) andNLTK (http://nltk.sourceforge.net/index.html).
Detailed information about vi-sual tools for NLP, in particular about GATE, isto be found in (Gaizauskas et al 2001).ProLiV is a Java application framework, devel-oped in a three-year project (2005-2008) at theUniversity of Hamburg.
It helps first-year stu-dents to understand and learn, in an easier man-ner, either complex linguistic theories used in NLP(e.g.
question modeling) or statistical approachesfor computational linguistics (e.g.
LSA, HMM).The learning process is supported by modulesintegrating text, visual and interactive elements.
Inits first released version, ProLiV contains the fol-lowing modules:?
the Latent Semantic Analysis (LSA) moduleand the computational lexicons module - forlinguists,?
the question modeling module - for computerscientists,?
the Hidden-Markov-Models (HMM) moduleand Topic-Focus module - for both computerscientists and linguists.2 The Learning PathFor each module, the learning path is guided bylessons, a terminology dictionary and interactiveactivities.
Exercises and small tests can also beintegrated.The lessons include text, pictures and ani-mations.
Hyperlinks between lessons ensure aconcept-oriented navigation through the learningcontent.
Additionally key terms within the contentare linked with dictionary entries.Three central issues guided the development ofthe ProLiV software:1. choosing the most adequate means (text / pic-ture / animation) to represent lessons content,2.
designing the layout (quantity and size oftext, colors) in order to increase the learningsuccess,3.
in case of the animations, defining its com-ponents and parameters (speed, animationsteps, and graphical elements) to maximizetheir impact on users.Regarding the second issue above-mentioned,the layout of the modules follows part of theguidelines found in (Orr et al, 1994) and (Thi-bodeau, 1997).Considering the current multimedia develop-ment, the trend is using animations to improve thelearning process.
Animations are assumed to be13a promising educational tool, although their effi-ciency is not fully proved.
Researchers, such as(Morrison, 2000), showed that animations canconvey more information and be helpful whenshowing details in intermediate steps of a process,but when building an animation it is very impor-tant to consider the background of the student (e.g.linguistics, natural sciences) and his/her psycho-logical functioning.
The educational effectivenessof the animations depends on how they interactwith the learner.
Depending on the student?s back-ground, in order to have a helpful material, onehas to carefully decide what information the ani-mation contains.
As our experiment showed (seeSection 2.1), depending on the student and his/herbackground, an animation can improve the learn-ing process, or bring nothing to it.
We found nocases when the animation slowed down the learn-ing process.The system was experimentally used in semi-nars at the University of Hamburg.
Part of thelessons content was adapted following the user?sfeedback.2.1 Animations in ProLiVAnimations are not integrated in all modules ofthe ProLiV system, but only in the LSA, computa-tional lexicons and question modeling modules.In order to decide how to organize the informa-tion in an animation, we evaluated the animationsfor the matrix multiplication in the LSA moduleby asking 11 high-school pupils (between 16 and19 years old) to choose between the several repre-sentations.We showed the pupils three animations that de-scribe the multiplication of matrices, a static pic-ture and the text representation of the definition.The animations differ in the way the process ispresented (abstract vs. concrete) and in user in-teraction authorization.The pupils were asked to evaluate all the rep-resentations.
The question they had to answerwas: ?Which of the following representationshelps more, when learning about matrix multipli-cation??.
The scale given was from 1 = very help-ful to 5 = not helpful at all.Analyzing the results, we could not concludethat one representation is a ?real winner?.
Thebest representation was considered the most flex-ible animation, that allows the student go back-wards and forwards whenever the user needs it,Representation Average ResultDefinition (formula) 3.5Picture 2.91Animation 1 3.64Animation 2 2.09Animation 3 2.45Table 1: Evaluation of the animations in the ma-trix multiplication (Animations 1 and 3 have nouser interaction; Animations 1 and 2 are more ab-stract)the learning process being adapted to the user?srhythm.
All the evaluation results can be seen inTable 1.
In order to better see the influence of theserepresentations in the learning process, statisticaltests should be run.3 System ArchitectureIn Figure 1 we present the ProLiV System archi-tecture, consisting of:?
a file repository (lessons, dictionary, tests,and exercises),?
a tool repository,?
an aggregating module combining elementsfrom file and tool repository (Main Unit),?
the graphical user interface (G.U.I.
)For each topic a stand-alone module is con-nected with the G.U.I module via the Main Unit.Modules related to new topics can be inserted anytime with no particular changes of the system.The ProLiV architecture follows the guidelineconsiderations found in (Galitz, 1997).Figure 1: The ProLiV Architecture14The flexibility of the system is also given by thefact that the G.U.I.1is generated according to anXML2description, developed within the project(see DTD Description).The XML description contains the informationin the lessons (definitions, theory, examples, etc.
)and the G.U.I.
specifications (colors, fonts, links,arrangement in the interface, etc.).
Having anXML file as input, the system generates automat-ically the G.U.I.
presented to the student.
The in-formation shown to the user can be extended ormodified with almost no implementation effort.New lessons or modules can be integrated, by ex-tending or adding XML files.
Due to the same fact,also the content adaptation of the system to otherlanguages3is very easy.The DTD Description:<?xml version=??1.0??
?><DOCTYPE LESSONS[<!ELEMENT LESSONS (LESSON+)><!ELEMENT LESSON (TITLE+, (TEXT|FORMULA|INDEXI|INDEX|BOLD|ITALIC|TERM|LINK|DEF|EXM|OBS|T|OTHER)+><!ELEMENT TITLE (#PCDATA)><!ELEMENT TEXT (#PCDATA)><!ELEMENT FORMULA (#PCDATA)><!ELEMENT INDEX (#PCDATA)><!ELEMENT INDEXI (#PCDATA)><!ELEMENT BOLD (#PCDATA)><!ELEMENT ITALIC (#PCDATA)><!ELEMENT TERM (#PCDATA)>........................<!ELEMENT T (#PCDATA)><!ELEMENT OTHER (#PCDATA)><!ATTLIST LESSON NO CDATA #REQUIRED><!ATTLIST DEF NO CDATA #REQUIRED><!ATTLIST EXM NO CDATA #REQUIRED><!ATTLIST OBS NO CDATA #REQUIRED><!ATTLIST QUIZZ NO CDATA #REQUIRED><!ATTLIST EX NO CDATA #REQUIRED><!ATTLIST T NO CDATA #REQUIRED><!ATTLIST OTHER STYLE CDATA #REQUIRED>The G.U.I.
follows the same design rules in allmodules and the layout and format decisions areconsistent.
A color and a font style are associatedto only one kind of information (e.g.
color red as-sociated to definitions, etc.
).1The G.U.I.
is automatically generated not only for thelessons, but also for the term dictionary associated to eachmodule.2XML = Extensible Markup Language.
More details tobe found on http://en.wikipedia.org/wiki/XML3For the moment ProLiV contains lessons in German andEnglish3.1 Integrated external software packagesThe learning process is also sustained by in-teractive elements, such as the possibility ofchanging parameters for the LSA algorithmand visualizing the results, or as the inte-grated programs for the computational lexiconstool: ManageLex (http://nats-www.informatik.uni-hamburg.de/view/Main/ManageLex) and G.E.R.L.
(http://nats-www.informatik.uni-hamburg.de/view/Main/GerLexicon).
This waythe students have the possibility, not only to readthe theory, but also to see the impact of theirmodifications in an algorithm that is described inthe lessons.Due to its architecture, other such external pro-grams can be easily integrated within ProLiV.4 LSA Module in ProLiVIn order to have a better overview of what a mod-ule contains and how it is organized, this sectionpresents some aspects of the LSA module.The LSA module makes an introduction to thetopic.
It gives an overview of the LSA algo-rithm, principles, application areas, and of themain mathematical notions used in the algorithm.Initially thought for being used mostly by studentsfrom linguistics (or linguists) - due to the mathe-matical algorithms -, the tool can be exploited byanybody who wants to have an introductory courseon LSA.The content is organized in four Units:1.
LSA: General Knowledge - It gives the LSAdefinition, a short overview of the history, itssemantics, and how LSA can be used in thestudy of cognitive processes.2.
Mathematical Fundamentals - It describes theLSA algorithm3.
LSA Applications - It presents the applica-tion areas for the LSA, LSA limitations andcritics.
Also a comparison with other similaralgorithms is made.4.
Compendium of Mathematics - It gives theuser the mathematical background: defini-tions, theorems, etc.The course has also an introduction, a motivation,conclusion and references.15The LSA module is offering not only a textualrepresentation of the information, but also sev-eral visualization methods (as images and anima-tions4).
Beside the lessons, there are implementeda term dictionary and an environment for testingLSA parameters.4.1 The LSA Test EnvironmentProbably the most interesting part of the LSAmodule is the test environment.
After learningabout LSA, in this environment the user has thepossibility to actually see how LSA is working,and what results can be obtained when compar-ing the meaning of two words.
The user can setseveral parameters of the algorithm - e.g.
theanalysis mode (simple/frequency based vs. ad-vanced/entropy based), the minimum word occur-rences, the analysis dimension, the similarity mea-sure (Cosine, Euclidean, Pearson, Dot-Product),etc.
- and decide which words are not consideredin the analysis.
The analyzed text, the initial co-occurrence matrix and the one obtained after ap-plying the Singular Value Decomposition (SVD)algorithm are shown in the G.U.I.
The similaritymeasure, when comparing two words, is calcu-lated in both unreduced and reduced cases.5 ConclusionsThe paper presents a course-ware software, Pro-LiV.
It is a collection of (interactive) multimediatools used mainly for the consolidation of first-years courses in computational linguistics and lit-erary computing.
Its goal is to help the humanistscientists to make use of complex formal methods,and the computer specialists to understand human-ist facts and interpretations.The main feature of the system, in the contextof the conference, is not the content of the lessons,but the system?s extendible and adaptable architec-ture.
Another important aspect is the way in whichthe information is presented to the student.The system runs on any platform supportingJava 1.5 or newer.
It was developed on Linux andtested on Windows and Mac OS X.Being Java-based and having as input Unicodefiles (XML encoded information), the system canbe embedded in the future in a Web environment.More about ProLiV can be found in (Gavrilaet al 2006) or in (Gavrila et al TBA) and on4The animations integrated are for the LSA algorithmtested on an example and for matrix multiplicationthe ProLiV homepage: http://nats-www.informatik.uni-hamburg.de/view/PROLIV/WebHome.AcknowledgmentsWe would like to thank all people that helped inthe development of our software: Project Coor-dinator Prof. Dr. Walther v. Hahn (ComputerScience Department, Natural Language SystemsGroup), Prof. Dr. Angelika Redder (Depart-ment of Language, Linguistics and Media Stud-ies, Institute for German Studies I), Dr. ShinichiKameyama (Department of Language, Linguisticsand Media Studies, Institute for German Stud-ies I), Christina von Bremen (Computer ScienceDepartment, Natural Language Systems Group),Olga Szczepanska (Computer Science Depart-ment, Natural Language Systems Group), IrinaAleksenko (Computer Science Department, Nat-ural Language Systems Group), Svetla Boytcheva(Academy of Sciences Sofia).ReferencesWilbert O. Galitz.
1997 The Essential Guide to UserInterface Design: an Introduction to GUI Designprinciples and Techniques, Wiley Computer Pub-lishing, New York.Robert J. Gaizauskas, Peter J. Rodgers, and KevinHumphreys.
2001 Visual Tools for Natural Lan-guage Processing, Journal of Visual Languages andComputing, Vol.
12, Number 4, p. 375-411, Aca-demic PressMonica Gavrila, Cristina Vertan.
2006 Visualizationof Complex Linguistic Theories, in the Proceed-ings of the ICDML 2006 Conference, p. 158-163,Bangkok, Thailand, March 13-14Monica Gavrila, Cristina Vertan, and Walther vonHahn.
To be published during 2009 ProLiV - Learn-ing Terminology with animated Models for Visualiz-ing Complex Linguistics Theories, in the Proceed-ings of the LSP 2007 Conference, Hamburg, Ger-many, August,Julie Bauer Morrison, Barbara Twersky, and MireilleBetrancourt.
2000 Animation: Does It FacilitateLearning?, in the Proc.
of the Workshop on SmartGraphics, AAAI Press, Menlo Park, CA.Kay L .Orr, Katharine C. Golas, and Katy Yao.
1994Storyboard Development for Interactive MultimediaTraining, Journal of Interactive Instruction Devel-opment, Volume 6, Number 3, p. 18-31Pete Thibodeau.
1997 Design Standards for VisualElements and Interactivity for Courseware, T.H.E.Journal, Volume 24, Number 7, p. 84-8616
