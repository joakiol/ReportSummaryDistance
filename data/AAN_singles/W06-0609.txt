Proceedings of the Workshop on Frontiers in Linguistically Annotated Corpora 2006, pages 70?77,Sydney, July 2006. c?2006 Association for Computational LinguisticsIssues in Synchronizing the English Treebank and PropBankOlga Babko-Malayaa, Ann Biesa, Ann Taylorb, Szuting Yia, Martha Palmerc,Mitch Marcusa, Seth Kulicka and Libin ShenaaUniversity of Pennsylvania, bUniversity of York, cUniversity of Colorado{malayao,bies}@ldc.upenn.edu, {szuting,mitch,skulick,libin}@linc.cis.upenn.edu,at9@york.ac.uk, Martha.Palmer@colorado.eduAbstractThe PropBank primarily adds semanticrole labels to the syntactic constituents inthe parsed trees of the Treebank.
Thegoal is for automatic semantic role label-ing to be able to use the domain of local-ity of a predicate in order to find its ar-guments.
In principle, this is exactly whatis wanted, but in practice the PropBankannotators often make choices that do notactually conform to the Treebank parses.As a result, the syntactic features ex-tracted by automatic semantic role label-ing systems are often inconsistent andcontradictory.
This paper discusses in de-tail the types of mismatches between thesyntactic bracketing and the semanticrole labeling that can be found, and ourplans for reconciling them.1 IntroductionThe PropBank corpus annotates the entire PennTreebank with predicate argument structures byadding semantic role labels to the syntacticconstituents of the Penn Treebank.Theoretically, it is straightforward for PropBankannotators to locate possible arguments based onthe syntactic structure given by a parse tree, andmark the located constituent with its argumentlabel.
We would expect a one-to-one mappingbetween syntactic constituents and semanticarguments.
However, in practice, PropBankannotators often make choices that do notactually conform to the Penn Treebank parses.The discrepancies between the PropBank andthe Penn Treebank obstruct the study of the syn-tax and semantics interface and pose an immedi-ate problem to an automatic semantic role label-ing system.
A semantic role labeling system istrained on many syntactic features extracted fromthe parse trees, and the discrepancies make thetraining data inconsistent and contradictory.
Inthis paper we discuss in detail the types of mis-matches between the syntactic bracketing and thesemantic role labeling that can be found, and ourplans for reconciling them.
We also investigatethe sources of the disagreements, which types ofdisagreements can be resolved automatically,which types require manual adjudication, and forwhich types an agreement between syntactic andsemantic representations cannot be reached.1.1 TreebankThe Penn Treebank annotates text for syntacticstructure, including syntactic argument structureand rough semantic information.
Treebank anno-tation involves two tasks: part-of-speech taggingand syntactic annotation.The first task is to provide a part-of-speech tagfor every token.
Particularly relevant for Prop-Bank work, verbs in any form (active, passive,gerund, infinitive, etc.)
are marked with a verbalpart of speech (VBP, VBN, VBG, VB, etc.).
(Marcus, et al 1993; Santorini 1990)The syntactic annotation task consists ofmarking constituent boundaries, inserting emptycategories (traces of movement, PRO, pro),showing the relationships between constituents(argument/adjunct structures), and specifying aparticular subset of adverbial roles.
(Marcus, etal.
1994; Bies, et al 1995)Constituent boundaries are shown throughsyntactic node labels in the trees.
In the simplestcase, a node will contain an entire constituent,complete with any associated arguments ormodifiers.
However, in structures involving syn-tactic movement, sub-constituents may be dis-placed.
In these cases, Treebank annotationrepresents the original position with a trace andshows the relationship as co-indexing.
In (1) be-low, for example, the direct object of entail isshown with the trace *T*, which is coindexed tothe WHNP node of the question word what.
(1) (SBARQ (WHNP-1 (WP What ))(SQ (VBZ does )(NP-SBJ (JJ industrial )(NN emigration ))(VP (VB entail)(NP *T*-1)))(.
?
))70In (2), the relative clause modifying a journal-ist has been separated from that NP by the prepo-sitional phrase to al Riyadh, which is an argu-ment of the verb sent.
The position where therelative clause originated or ?belongs?
is shownby the trace *ICH*, which is coindexed to theSBAR node containing the relative clause con-stituent.
(2)(S (NP-SBJ You)(VP sent(NP (NP a journalist)(SBAR *ICH*-2))(PP-DIR to(NP al Riyadh))(SBAR-2(WHNP-3 who)(S (NP-SBJ *T*-3)(VP served(NP (NP the name)(PP of(NP Lebanon)))(ADVP-MNRmagnificently))))))Empty subjects which are not traces of move-ment, such as PRO and pro, are shown as * (seethe null subject of the infinite clause in (4) be-low).
These null subjects are coindexed with agoverning NP if the syntax allows.
The null sub-ject of an infinitive clause complement to a nounis, however, not coindexed with another node inthe tree in the syntax.
This coindexing is shownas a semantic coindexing in the PropBank anno-tation.The distinction between syntactic argumentsand adjuncts of the verb or verb phrase is madethrough the use of functional dashtags rather thanwith a structural difference.
Both arguments andadjuncts are children of the VP node.
No distinc-tion is made between VP-level modification andS-level modification.
All constituents that appearbefore the verb are children of S and sisters ofVP; all constituents that appear after the verb arechildren of VP.Syntactic arguments of the verb are NP-SBJ,NP (no dashtag), SBAR (either ?NOM-SBJ or nodashtag), S (either ?NOM-SBJ or no dashtag),-DTV, -CLR (closely/clearly related), -DIR withdirectional verbs.Adjuncts or modifiers of the verb or sentenceare any constituent with any other adverbialdashtag, PP (no dashtag), ADVP (no dashtag).Adverbial constituents are marked with a morespecific functional dashtag if they belong to oneof the more specific types in the annotation sys-tem (temporal ?TMP, locative ?LOC, manner?MNR, purpose ?PRP, etc.
).Inside NPs, the argument/adjunct distinction isshown structurally.
Argument constituents (S andSBAR only) are children of NP, sister to the headnoun.
Adjunct constituents are sister to the NPthat contains the head noun, child of the NP thatcontains both:(NP (NP head)(PP adjunct))1.2 PropBankPropBank is an annotation of predicate-argumentstructures on top of syntactically parsed, or Tree-banked, structures.
(Palmer, et al 2005; Babko-Malaya, 2005).
More specifically, PropBankannotation involves three tasks: argumentlabeling, annotation of modifiers, and creatingco-reference chains for empty categories.The first goal is to provide consistent argu-ment labels across different syntactic realizationsof the same verb, as in(3) [ARG0 John] broke [ARG1 the window][ARG1 The window] broke.As this example shows, semantic argumentsare tagged with numbered argument labels, suchas Arg0, Arg1, Arg2, where these labels are de-fined on a verb by verb basis.The second task of the PropBank annotationinvolves assigning functional tags to all modifi-ers of the verb, such as MNR (manner), LOC(locative), TMP (temporal), DIS (discourse con-nectives), PRP (purpose) or DIR (direction) andothers.And, finally, PropBank annotation involvesfinding antecedents for ?empty?
arguments of theverbs, as in (4).
The subject of the verb leave inthis example is represented as an empty category[*] in Treebank.
In PropBank, all empty catego-ries which could be co-referred with a NP withinthe same sentence are linked in ?co-reference?chains:(4) I made a decision [*] to leaveRel:    leave,Arg0: [*] -> IAs the following sections show, all three tasksof PropBank annotation result in structureswhich differ in certain respects from the corre-sponding Treebank structures.
Section 2 presents71our approach to reconciling the differences be-tween Treebank and PropBank with respect tothe third task, which links empty categories withtheir antecedents.
Section 3 introduces mis-matches between syntactic constituency in Tree-bank and PropBank.
Mismatches between modi-fier labels are not addressed in this paper and areleft for future work.2 Coreference and syntactic chainsPropBank chains include all syntactic chains(represented in the Treebank) plus other cases ofnominal semantic coreference, including thosein which the coreferring NP is not a syntacticantecedent.
For example, according to PropBankguidelines, if a trace is coindexed with a NP inTreebank, then the chain should be reconstructed:(5) What-1 do you like [*T*-1]?Original PropBank annotation:Rel: likeArg0: youArg1: [*T*] -> WhatSuch chains usually include traces of A and A?movement and PRO for subject and object con-trol.
On the other hand, not all instances of PROshave syntactic antecedents.
As the following ex-ample illustrates, subjects of infinitival verbs andgerunds might have antecedents within the samesentence, which cannot be linked as a syntacticchain.
(6) On the issue of abortion , Marshall Colemanwants  to take away your right  [*] to chooseand give it to the politicians .ARG0:          [*] -> yourREL:           chooseGiven that the goal of PropBank is to find allsemantic arguments of the verbs, the links be-tween empty categories and their coreferring NPsare important, independent of whether they aresyntactically coindexed or not.
In order to recon-cile the differences between Treebank and Prop-Bank annotations, we decided to revise Prop-Bank annotation and view it as a 3 stage process.First, PropBank annotators should not recon-struct syntactic chains, but rather tag empty cate-gories as arguments.
For example, under the newapproach annotators would simply tag the traceas the Arg1 argument in (7):(7) What-1 do you like [*T*-1]?Revised PropBank annotation:Rel: likeArg0: youArg1: [*T*]As the second stage, syntactic chains will be re-constructed automatically, based on thecoindexation provided by Treebank (note that thetrace is coindexed with the NP What in (7)).
And,finally, coreference annotation will be done ontop of the resulting resource, with the goal offinding antecedents for the remaining emptycategories, including empty subjects of infinitivalverbs and gerunds.One of the advantages of this approach is thatit allows us to distinguish different types ofchains, such as syntactic chains (i.e., chainswhich are derived as the result of syntacticmovement, or control coreference), directcoreference chains (as illustrated by the examplein (6)), and semantic type links for other ?indi-rect?
types of links between an empty categoryand its antecedent.Syntactic chains are annotated in Treebank,and are reconstructed automatically in PropBank.The annotation of direct coreference chains isdone manually on top of Treebank, and is re-stricted to empty categories that are notcoindexed with any NP in Treebank.
And, finally,as we show next, a semantic type link is used forrelative clauses and a coindex link for verbs ofsaying.A semantic type link is used when the antece-dent and the empty category do not refer to thesame entity, but do have a certain kind of rela-tionship.
For example, consider the relativeclause in (8):(8) Answers that we?d like to haveTreebank annotation:(NP (NP answers)(SBAR (WHNP-6 which)(S (NP-SBJ-3 we)(VP 'd(VP like(S (NP-SBJ *-3)(VP to(VP have(NP *T*-6)))))))))In Treebank, the object of the verb have is a trace,which is coindexed with the relative pronoun.
In72the original PropBank annotation, a further linkis provided, which specifies the relative pronounas being of ?semantic type?
answers.
(9) Original PropBank annotation:Arg1:    [NP *T*-6] -> which -> answersrel:         haveArg0:     [NP-SBJ *-3] -> weThis additional link between which and answersis important for many applications that make useof preferences for semantic types of verb argu-ments, such as Word Sense Disambiguation(Chen & Palmer 2005).
In the new annotationscheme, annotators will first label traces as ar-guments:(10) Revised PropBank annotation (stage 1):Rel:  haveArg1: [*T*-6]Arg0: [NP-SBJ *-3]As the next stage, the trace [*T*-6] will belinked to the relative pronoun automatically (inaddition to the chain [NP-SBJ *-3] -> we beingautomatically reconstructed).
As the third stage,PropBank annotators will link which to answers.However, this chain will be labeled as a ?seman-tic type?
to distinguish it from direct coreferencechains and to indicate that there is no identityrelation between the coindexed elements.Verbs of saying illustrate another case of linksrather than coreference chains.
In many sen-tences with direct speech, the clause which intro-duces a verb of saying is ?embedded?
into theutterance.
Syntactically this presents a problemfor both Treebank and Propbank annotation.
InTreebank, the original annotation style required atrace coindexed to the highest S node as the ar-gument of the verb of saying, indicating syntacticmovement.
(11) Among other things, they said  [*T*-1] , Mr.Azoff would develop musical acts for a newrecord label .Treebank annotation:(S-1 (PP Among(NP other things))(PRN ,(S (NP-SBJ they)(VP said(SBAR 0(S *T*-1)))),)(NP-SBJ Mr. Azoff)(VP would(VP develop(NP (NP musical acts)(PP for(NP a new recordlabel))))).
)In PropBank, the different pieces of the utterance,including the trace under the verb said, wereconcatenated(12) Original PropBank annotation:ARG1:      [ Among other things] [ Mr.Azoff] [ would develop musical acts for anew record label] [ [*T*-1]]ARG0:       theyrel:        saidUnder the new approach, in stage one, Tree-bank annotation will introduce not a trace of theS clause, but rather *?
*, an empty category indi-cating ellipsis.
In stage three, PropBank annota-tors will link this null element to the S node, butthe resulting chain will not be viewed as  ?direct?coreference.
A special tag will be used for thislink, in order to distinguish it from other types ofchains.
(13) Revised PropBank  annotation:ARG1:      [*?
*] (-> S)ARG0:       theyrel:        said3 Differences in syntactic constituency3.1 Extractions of mismatches betweenPropBank and TreebankIn order to make the necessary changes to boththe Treebank and the PropBank, we have to firstfind all instances of mismatches.
We have usedtwo methods to do this: 1) examining the argu-ment locations; 2) examining the discontinuousarguments.Argument Locations  In a parse tree which ex-presses the syntactic structure of a sentence, asemantic argument occupies specific syntacticlocations: it appears in a subject position, a verbcomplement location or an adjunct location.Relative to the predicate, its argument is either asister node, or a sister node of the predicate?sancestor.
We extracted cases of PropBank argu-ments which do not attach to the predicate spine,and filtered out VP coordination cases.
For ex-ample, the following case is a problematic onebecause the argument PP node is embedded too73deeply in an NP node and hence it cannot find aconnection with the main predicate verb lifted.This is an example of a PropBank annotationerror.
(14) (VP (VBD[rel] lifted)(NP us) )(NP-EXT(NP a good 12-inches)(PP-LOC[ARGM-LOC] above(NP the water level))))However, the following case is not problem-atic because we consider the ArgM PP to be asister node of the predicate verb given the VPcoordination structure:(15) (VP (VP (VB[rel] buy)(NP the basket of ?
)(PP in whichever market ?
))(CC and)(VP (VBP sell)(NP them)(PP[ARGM] in the moreexpensive market)))Discontinuous Arguments happen when Prop-Bank annotators need to concatenate severalTreebank constituents to form an argument.
Dis-continuous arguments often represent differentopinions between PropBank and Treebank anno-tators regarding the interpretations of the sen-tence structure.For example, in the following case, the Prop-Bank concatenates the NP and the PP to be theArg1.
In this case, the disagreement on PP at-tachment is simply a Treebank annotation error.
(16) The region lacks necessary mechanisms forhandling the aid and accounting items.Treebank annotation:(VP lacks(NP necessary mechanisms)(PP for(NP handing the aid?
)))PropBank annotation:REL: lacksArg1: [NP necessary mechanisms][PP forhandling the aid and accounting items]All of these examples have been classified intothe following categories: (1) attachment ambi-guities, (2) different policy decisions, and (3)cases where one-to-one mapping cannot be pre-served.3.2 Attachment ambiguitiesMany cases of mismatches between Treebankand PropBank constituents are the result of am-biguous interpretations.
The most common ex-amples are cases of modifier attachment ambi-guities, including PP attachment.
In cases of am-biguous interpretations, we are trying to separatecases which can be resolved automatically fromthose which require manual adjudication.PP-Attachment  The most typical case of PPattachment annotation disagreement is shown in(17).
(17) She wrote a letter for Mary.Treebank annotation:(VP wrote(NP (NP a letter)(PP for(NP Mary))))PropBank annotation:REL: writeArg1: a letterArg2: for MaryIn (17), the PP ?for Mary?
is attached to theverb in PropBank and to the NP in Treebank.This disagreement may have been influenced bythe set of roles of the verb ?write?, which in-cludes a beneficiary as its argument.
(18) Frameset write:  Arg0: writerArg1: thing writtenArg2: beneficiaryExamples of this type cannot be automaticallyresolved and require manual adjudication.Adverb Attachment  Some cases of modifierattachment ambiguities, on the other hand, couldbe automatically resolved.
Many cases of mis-matches are of the type shown in (19), where adirectional adverbial follows the verb.
In Tree-bank, this adverbial is analyzed as part of anADVP which is the argument of the verb inquestion.
However, in PropBank, it is annotatedas a separate ArgM-DIR.
(19) Everything is going back to Korea or Japan.74Treebank annotation:(S (NP-SBJ (NN Everything) )(VP (VBZ is)(VP (VBG[rel] going)(ADVP-DIR(RB[ARGM-DIR] back)(PP[ARG2] (TO to)(NP (NNP Korea)(CC and)(NNP Japan)))))) (.
.
))Original PropBank annotation:Rel: goingArgM-DIR: backArg2: to Korea or JapanFor examples of this type, we have decided toautomatically reconcile PropBank annotations tobe consistent with Treebank, as shown in (20).
(20) Revised PropBank annotation:Rel:  goingArg2: back to Korea or Japan3.3 Sentential complementsAnother area of significant mismatch betweenTreebank and PropBank annotation involves sen-tential complements, both infinitival clauses andsmall clauses.
In general, Treebank annotationallows many more verbs to take sentential com-plements than PropBank annotation.For example, the Treebank annotation of thesentence in (21) gives the verb keep a sententialcomplement which has their markets active un-der the S as the subject of the complement clause.PropBank annotation, on the other hand, does notmark the clause but rather labels each subcon-stituent as a separate argument.
(21)  ?keep their markets activeTreebank annotation:(VP keep(S (NP-SBJ their markets)(ADJP-PRD active)))PropBank annotation:REL: keepArg1: their marketsArg2: activeIn Propbank, an important criterion for decid-ing whether a verb takes an S argument, or de-composes it into two arguments (usually taggedas Arg1 and Arg2) is based on the semantic in-terpretation of the argument, e.g.
whether theargument can be interpreted as an event or pro-position.For example, causative verbs (e.g.
make, get),verbs of perception (see, hear), and intensionalverbs (want, need, believe), among others, areanalyzed as taking an S clause, which is inter-preted as an event in the case of causative verbsand verbs of perception, and as a proposition inthe case of intensional verbs.
On the other hand,?label?
verbs (name, call, entitle, label, etc.
), donot select for an event or proposition and areanalyzed as having 3 arguments: Arg0, Arg1,and Arg2.Treebank criteria for distinguishing arguments,on the other hand, were based on syntacticconsiderations, which did not always match withPropbank.
For example, in Treebank, evidence ofthe syntactic category of argument that a verbcan take is used as part of the decision processabout whether to allow the verb to take a smallclause.
Verbs that take finite or non-finite (verbal)clausal arguments, are also treated as takingsmall clauses.
The verb find takes a finite clausalcomplement as in We found that the book wasimportant and also a non-finite clausal comple-ment as in We found the book to be important.Therefore, find is also treated as taking a smallclause complement as in We found the bookimportant.
(22) (S (NP-SBJ We)(VP found(S (NP-SBJ the book)(ADJP-PRD important))))The obligatory nature of the secondary predi-cate in this construction also informed the deci-sion to use a small clause with a verb like find.
In(22), for example, important is an obligatory partof the sentence, and removing it makes the sen-tence ungrammatical with this sense of find (?Wefound the book?
can only be grammatical with adifferent sense of find, essentially ?We locatedthe book?
).With verbs that take infinitival clausal com-plements, however, the distinction between asingle S argument and an NP object togetherwith an S argument is more difficult to make.The original Treebank policy was to follow thecriteria and the list of verbs taking both an NPobject and an infinitival S argument given inQuirk, et al (1985).Resultative constructions are frequently asource of mismatch between Treebank annota-75tion as a small clause and PropBank annotationwith Arg1 and Arg2.
Treebank treated a numberof resultative as small clauses, although certainverbs received resultative structure annotation,such as the one in (23).
(23) (S (NP-SBJ They)(VP painted(NP-1 the apartment)(S-CLR (NP-SBJ *-1)(ADJP-PRD orange))))In all the mismatches in the area of sententialcomplementation, Treebank policy tends toovergeneralize S-clauses, whereas Propbankleans toward breaking down clauses into separatearguments.This type of mismatch is being resolved on averb-by-verb basis.
Propbank will reanalyzesome of the verbs (like consider and find), whichhave been analyzed as having 3 arguments, astaking an S argument.
Treebank, on the otherhand, will change the analysis of label verbs likecall, from a small clause analysis to a structurewith two complements.Our proposed structure for label verbs, for ex-ample, is in (24).
(24) (S (NP-SBJ[Arg0] his parents)(VP (VBD called)(NP-1[Arg1] him)(S-CLR[Arg2](NP-SBJ *-1)(NP-PRD John))))This structure will accommodate both Treebankand PropBank requirements for label verbs.4 Where Syntax and Semantics do notmatchFinally, there are some examples where the dif-ferences seem to be impossible to resolve with-out sacrificing some important features of Prop-Bank or Treebank annotation.4.1 Phrasal verbsPropBank has around 550 phrasal verbs likekeep up, touch on, used to and others, which areanalyzed as separate predicates in PropBank.These verbs have their own set of semantic roles,which is different from the set of roles of the cor-responding ?non-phrasal?
verbs, and thereforethey require a separate PropBank entry.
In Tree-bank, on the other hand, phrasal verbs are notdistinguished.
If the second part of the phrasalverb is labeled as a verb+particle combination inthe Treebank, the PropBank annotators concate-nate it with the verb as the REL.
If Treebank la-bels the second part of the ?phrasal verb?
as partof a prepositional phrase, there is no way to re-solve the inconsistency.
(25) But Japanese institutional investors are usedto quarterly or semiannual payments on their in-vestments, so ?Treebank annotation:(VBN used)(PP (TO to)(NP quarterly or ?on their investments))PropBank annotation:Arg1: quarterly or ?
on their investmentsRel: used to (?used to?
is a separate predi-cate in PropBank)4.2 ConjunctionIn PropBank, conjoined NPs and clauses areusually analyzed as one argument, parallel toTreebank.
For example, in John and Mary came,the NP John and Mary is a constituent in Tree-bank and it is also marked as Arg0 in PropBank.However, there are a few cases where one of theconjuncts is modified, and PropBank policy is tomark these modifiers as ArgMs.
For example, inthe following NP, the temporal ArgM now modi-fies a verb, but it only applies to the second con-junct.
(26)(NP (NNP Richard)(NNP Thornburgh) )(, ,)(SBAR(WHNP-164 (WP who))(S(NP-SBJ-1 (-NONE- *T*-164))(VP(VBD went)(PRT (RP on) )(S(NP-SBJ (-NONE- *-1))(VP (TO to)(VP (VB[rel] become)(NP-PRD(NP[ARG2](NP (NN governor))(PP (IN of)(NP(NNPPennsylvania))))76(CC and)(PRN (, ,)(ADVP-TMP (RB now))(, ,) )(NP[ARG2] (NNP U.S.)(NNP Attorney)(NNP General)))))))))In PropBank, cases like this can be decom-posed into two propositions:(27) Prop1:      rel: becomeArg1: attorney generalArg0: [-NONE- *-1]Prop2: rel:  becomeArgM-TMP: nowArg0: [-NONE- *-1]Arg1: a governorIn Treebank, the conjoined NP is necessarilyanalyzed as one constituent.
In order to maintainthe one-to-one mapping between PropBank andTreebank, PropBank annotation would have tobe revised in order to allow the sentence to haveone proposition with a conjoined phrase as anargument.
Fortunately, these types of cases donot occur frequently in the corpus.4.3 GappingAnother place where the one-to-one mappingis difficult to preserve is with gapping construc-tions.
Treebank annotation does not annotate thegap, given that gaps might correspond to differ-ent syntactic categories or may not even be aconstituent.
The policy of Treebank, therefore, issimply to provide a coindexation link betweenthe corresponding constituents:(28) Mary-1 likes chocolates-2 andJane=1 ?
flowers=2This policy obviously presents a problem forone-to-one mapping, since Propbank annotatorstag Jane and flowers as the arguments of an im-plied second likes relation, which is not presentin the sentence.5 SummaryIn this paper we have considered several typesof mismatches between the annotations of theEnglish Treebank and the PropBank: coreferenceand syntactic chains, differences in syntacticconstituency, and cases in which syntax and se-mantics do not match.
We have found that for themost part, such mismatches arise because Tree-bank decisions are based primarily  on syntacticconsiderations while PropBank decisions givemore weight  to semantic representation..In order to reconcile these differences we haverevised the annotation policies of both the Prop-Bank and Treebank in appropriate ways.
Afourth source of mismatches is simply annotationerror in either the Treebank or PropBank.
Look-ing at the mismatches in general has allowed usto find these errors, and will facilitate their cor-rection.ReferencesOlga Babko-Malaya.
2005.
PropBank AnnotationGuidelines.
http://www.cis.upenn.edu/~mpalmer/project_pages/PBguidelines.pdfAnn Bies, Mark Ferguson, Karen Katz, Robert Mac-Intyre.
1995.
Bracketing Guidelines for TreebankII Style.
Penn Treebank Project, University ofPennsylvania, Department of Computer and Infor-mation Science Technical Report MS-CIS-95-06.Jinying Chen and Martha Palmer.
2005.
Towards Ro-bust High Performance Word Sense Disambigua-tion of English Verbs Using Rich Linguistic Fea-tures.
In Proceedings of the 2nd International JointConference on Natural Language Processing,IJCNLP2005, pp.
933-944.
Oct. 11-13, Jeju Island,Republic of Korea.M.
Marcus, G. Kim, M. Marcinkiewicz, R. MacIn-tyre, A. Bies, M. Ferguson, K. Katz & B. Schas-berger, 1994.
The Penn Treebank: Annotatingpredicate argument structure.
Proceedings of theHuman Language Technology Workshop, SanFrancisco.M.
Marcus, B. Santorini and M.A.
Marcinkiewicz,1993.
Building a large annotated corpus of English:the Penn Treebank.
Computational Linguistics.Martha Palmer, Dan Gildea, and Paul Kingsbury.2005.
The proposition bank: An annotated corpusof semantic roles.
Computational Linguistics,31(1).R.
Quirk, S. Greenbaum, G. Leech and J. Svartvik.1985.
A Comprehensive Grammar of the EnglishLanguage.
Longman, London.B.
Santorini.
1990.
Part-of-speech tagging guidelinesfor the Penn Treebank Project.
University of Penn-sylvania, Department of Computer and InformationScience Technical Report MS-CIS-90-47.77
