FAME: a Functional Annotation Meta-scheme for mult i -modaland multi- l ingual Parsing EvaluationAlessandro  Lenci,  S imonet ta  Montemagn i ,  V i to  Pirrel l i ,  C laudia  SoriaIs t i tuto di L inguist ica Computaz ionale  - CNRvia della Faggiola 32Pisa, 56126, ITALY(lenci,simo,vito,soria}@ilc.pi.cnr.
itAbst rac tThe paper describes FAME, a functional annota-tion meta-scheme for comparison and evaluation ofexisting syntactic annotation schemes, intended tobe used as a flexible yardstick in multi-lingual andmulti-modal parser evaluation campaigns.
We showthat FAME complies with a variety of non-trivialmethodological requirements, and has the potentialfor being effectively used as an "interlingua" betweendifferent syntactic representation formats.1 In t roduct ionBroad coverage parsing evaluation has receivedgrowing attention i  the NLP community.
In partic-ular, comparative, quantitative evaluation of pars-ing systems has acquired a crucial role in technol-ogy assessment.
In this context, it is importantthat evaluation be relatively independent of, or eas-ily parametrizable relative to the following three di-mensions of variation among parsing systems:?
theoretical assumptions: compared systemsmay be based on different heoretical frame-works;?
multi-linguality: parsers are often optimallydesigned to deal with a particular language orfamily of languages;?
multi-modality: systems tend to be special-ized for dealing with a specific type of input, i.e.written or spoken language.As to the first point, it is important that alterna-tive annotation schemes be evaluated (i) on the ba-sis of the linguistic information they are intended toprovide, and (ii) in terms of the utility of this infor-mation with respect o a particular task.
Moreover,multi-linguality and multi-modality are crucial pa-rameters for evaluating the robustness and portabil-ity of a given parser, with a view to the growing needfor embedding NLP systems into multi-modal andmulti-medial pplications.An essential aspect of every evaluation campaignis the specification of an annotation scheme intowhich the output of the participant systems is con-verted and on whose basis the system performance iseventually evaluated.
A suitable annotation schememust satisfy some requirements.
First of all, itshould be able to represent the information relevantto a certain evaluation task in a way which is natu-rally conducive to quantitative evaluation.
Secondly,it should easily be mappable onto different systemoutputs, and flexible enough to deal with multilin-gual phenomena and with the specific nature of bothwritten and spoken language.The aim of this paper is to illustrate FAME, aFunctional Annotation Meta-scheme for Evaluation.We will show that it complies with the above men-tioned requirements, and lends itself to effectivelybeing used in comparative evaluation campaigns ofparsing systems.
There are two main features ofFAME that will receive particular emphasis here: itis functional and it is a meta-seheme.
We claimthat these two features are essential for meeting thespecific requirements of comparative parsing evalu-ation, while tackling issues of multi-linguality andmulti-modality in a principled fashion.2 FAME:  Bas icsWhat we intend to offer here is not yet another off-the-shelf annotation scheme, but rather a formalframework for comparison and evaluation of existingannotation practices at the level of linguistic anal-ysis traditionally known as "functional".
Hereafter,this framework will be referred to as an annotation"meta-scheme".2.1 Why functional evaluationThe choice of evaluating parsing systems at the func-tional level is largely motivated on the basis of anumber of practical concerns.
We contend that in-formation about how functional relations are actu-ally instantiated in a text is important for the fol-lowing reasons:?
it is linguistically valuable, both as an end in it-self and as an intermediate linguistic resource;in fact, it is sufficiently close to semantic repre-sentations to be used as an intermediate stageof analysis in systems requiring full text under-standing capabilities;39?
it is likely to become a more and more heavilyused information asset in its own right for NLPapplications: a shift of emphasis from purelypattern matching methods operating on n-wordwindows to functional information about wordpairs has recently been witnessed both in thecontext of information retrieval/filtering sys-tems (Grefenstette, 1994) and for the purposesof word sense disambiguation (see the last SEN-SEVAL and ROMANSEVAL evaluation cam-paigns);?
it is comparatively easy and "fair" to evalu-ate since it overcomes some of the shortcom-ings of constituency-based evaluation (Carrolland Briscoe, 1996; Carroll et al, 1998; Samp-son, 1998; Lin, 1998);?
it represents a very informative "lowest com-mon ground" of a variety of different syntacticannotation schemes (Lin, 1998);?
it is naturally multi-lingual, as functional re-lations probably represent he most signifi-cant level of syntactic analysis at which cross-language comparability makes ense;?
it permits joint evaluation of systems dealingwith both spoken and written language.
Spo-ken data are typically fraught with cases of dis-fluency, anacoluthon, syntactic incompletenessand any sort of non-canonical syntactic struc-ture (Antoine, 1995): the level of functionalanalysis naturally reflects a somewhat stan-dardized representation, which abstracts awayfrom the surface realization of syntactic unitsin a sentence, thus being relatively independentof, and unconcerned with disfluency phenomenaand phrase partials (Klein et al, 1998);?
it is "lexical" enough in character to make pro-vision for partial and focused annotation: sincea functional relation always involves two lexicalheads at a time, as opposed to complex hierar-chies of embedded constituents, it is compara-tively easy to evaluate an annotated text onlyrelative to a subset of the actually occurringheadwords, e.g.
those carrying a critical infor-mation weight for the intended task and/or spe-cific domain.2.2 Why an?
annotation meta-schemeFAME is designed to meet the following desiderata:?
provide not only a measure of coverage but alsoof the utility of the covered information as op-posed to missing information;?
make explicit, through annotation, informa-tion which is otherwise only indirectly derivablefrom the parsed text;?
factor out linguistically independent (but pos-sibly correlated) primitive dimensions of func-tional information.All these requirements serve the main purposeof making evaluation open to both annotation-dependent and task-dependent parameterization.This is felt important since the definition of close-ness to a standard, and the utility of an analysisthat is less-than-perfect along some dimension canvary from task to task, and, perhaps more crucially,from annotation scheme to annotation scheme.The basic idea underpinning the design of the an-notation meta-scheme is that information about howfunctional relations are actually instantiated in con-text can be factored out into linguistically indepen-dent levels.
In many cases, this can in fact be re-dundant, as information at one level can be logicallypresupposed by a piece of information encoded atanother level: for example, "nominative case" is of-ten (but not always) a unique indicator of "subject-hood", and the same holds for grammatical gree-ment.
Yet, there is a general consensus that redun-dancy should not be a primary concern in the designof a standard representation, as syntactic schemesoften differ from each other in the way levels of infor-mation are mutually implied, rather than in the in-trinsic nature of these levels (Sanfilippo et al, 1996).By assuming that all levels are, in a sense, primitive,rather than some of them being derivative of others,one provides considerable l eway for radically differ-ent definitions of functional relations to be cast intoa common, albeit redundant, core of required infor-?
mation.
We will return to this point in section 3 ofthe paper.To be more concrete, a binary functional relation-ship can be represented formally as consisting of thefollowing types of information:i. the unordered terms of the relationship (i.e.
thelinguistic units in text which enter a given func-tional relationship): example (give, Mary);ii.
the order relationship between the terms con-sidered, conveying information about the headand the dependent: example <give, Mary>;iii.
the type of relationship involved: example, thefunctional relation of the pair (give, Mary) inthe sentence John gave the book to Mary is "in-direct object";iv.
morpho-syntactic features associated with thedependent and the head; e.g.
the dependent inthe pair (give, Mary) is "non-clausal";v. the predicate-argument status of the terms in-volved: for example give(John, book, Mary)in John gave the book to Mary.Most available tag taxonomies for functional an-notation (such as those provided by, e.g., Karls-40son's Constraint Grammar (Karlsson et al, 1995),or the SPARKLE annotation scheme (Carroll et al,1996), to mention but two of them) typically col-lapse the levels above into one level only, for rea-sons ranging from a theoretical bias towards a max-imally economic description of the phenomena inquestion or a particular view of the way syntac-tic phenomena are mutually implied from a logi-cal standpoint, o choices chiefly motivated by theintended application.
A typical example of this isthe tag xcomp in the SPARKLE scheme, which (fol-lowing LFG) covers all subcategorized open predi-cates: namely, traditional predicative complements(whether subject or object predicative), and unsat-urated clausal complements, such as embedded in-finitival and participial clauses (as opposed to, e.g.,that-clauses).
In Constraint Grammar, predicativenominal and adjectival phrases are tagged as "sub-ject complement" or "object complement", while,say, controlled infinitive clauses, as in Mary wantsto read, are marked functionally as an "object" ofthe main verb.
Any context-free attempt o mapSPARKLE xcomp onto a Constraint Grammar tag,would inevitably be one-to-many and not necessar-ily information-preserving.
Clearly, both these as-pects make it very hard to provide any sort of fairbaseline for comparing a SPARKLE annotated textagainst the same text tagged with Constraint Gram-mar labels.The design of a meta-scheme is intended to tacklethese difficulties by spelling out the levels of infor-mation commonly collapsed into each tag.
Moreconcretely, SPARKLE xcomp (want, leave), for thesentence She wants to leave, appears to convey twosorts of information: (a) that leave is a comple-ment of want, (b) that leave is an open predicate.Both pieces of information can be evaluated inde-pendently against levels i, ii, iii and v above.Surely, a translation into FAME is not guaxan-?
teed to always be information preserving.
For ex-ample, xcomp(want,leave) can also be interpretedas conveying information about the intended func-tional control of leave, given some (lexical) informa-tion about the main verb want, and some (contex-tual) information concerning the absence of a directobject in the sentence considered.
However, this sortof context-sensitive translation would involve a moreor less complete reprocessing of the entire outputrepresentation.!
In our view, a partial context-freetranslation i to FAME represents a sort of realisticcompromise between a fairly uninformative one-to-many mapping and the complete translation of theinformation conveyed by one scheme into another1In fact, the SPARKLE annotation scheme annotates con-trol information explicitly, as illustrated later in the paper:the point here is simply that this information cannot be de~rived directly from xcomp(want,leave).format.2.3 Information layers in FAMETo date, FAME covers levels i-iv only.
The build-ing blocks of the proposed annotation scheme arefunctional relations, where a functional relation isan asymmetric binary relation between a word calledHEAD and another word called DEPENDENT.
We as-sume only relations holding between lexical or fullwords.
Therefore, we exclude functional relations in-volving grammatical e ements uch as determiners,auxiliaries, complementizers, prepositions, etc.
Theinformation concerning these elements is conveyedthrough features, as described below in section 2.3.3.Each functional relation is expressed as follows:dep_type (lex_head.<head_features>,dependent.<dep_features>)Dep_type specifies the relationship holding be-tween the lexical head (lex__head) and its depen-dent (dependent).
The head and the dependent ofthe relation are further specified through a (pos-sibly empty) list of valued features (respectivelyhead_features and dep..features), which comple-ment functional information.2.3.1 The hierarchy of functionsDep_types are hierarchically structured to make pro-vision for underspecified representations of highlyambiguous functional analyses (see further below).The hierarchy of relations is given in figure 1 below.In the hierarchy, the function subj (for "subject")deppFeddobj iobj oblobjFigure 1: Hierarchy of functional relationsis opposed to other grammatical relations by beingassigned a higher prominence in the taxonomy, ascustomary in contemporary grammar theories (e.g.HPSG, GB).
Moreover, modifiers and arguments aresubsumed under the same comp node (mnemonic forcomplement), allowing for the possibility of leavingunderspecified the distinction between an adjunctand a subcategorised argument in those cases wherethe distinction is difficult to draw in practice.
Inturn, the node arg (for argument) is split into pred,subsuming all and only classical predicative comple-ments, and non-pred, further specified into dobj41(for direct objects), iobj (for indirect objects) andoblobj (for oblique arguments).The hierarchy of figure 2.3.1 is a revision ofthe SPARKLE functional hierarchy (Carroll et al,1996), in the light of the methodological pointsraised in section 2.2.
The main point of depar-ture can be found under the node comp, which, inSPARKLE, dominates the nodes obj and clausal,thus reflecting a view of predicative complements asmall clauses, to be assimilated with other unsat-urated clausal constructions such as infinitival andparticipial clauses.
This is in clear conflict with an-other grammatical tradition that marks clausal com-plements with the functional relations also assignedto non clausal complements, when the latter appearto be in a parallel distribution with the former, asin I accept his position and I accept that he leaves,where both his position and that he leaves are taggedas objects (Karlsson et al, 1995).
This is a typicalexample of how functions may differ due to a differ-ence in the levels of the linguistic information takento be criterial for tag assignment.
As we will seein more detail in section 2.3.2, the FAME hierar-chy circumvents he problem by assigning all non-subject clausal complements the tag arg, which sub-sumes both traditional predicatives (pred) and nonclausal arguments (non-pred), thus granting senten-tial complements a kind of ambivalent (underspeci-fled) functional status.2.3.2 The typology of functionsIn what follows we sketchily define each functionalrelation; examples are provided for non genericnodes of the hierarchy only.dep(head,dependent) is he most generic relationbetween a head and a dependent, subsuming the dis-tinction between a subject and a complement,subj(head,dependent) is the relation between averb predicate and its subject:subj (arrive, John) John arrived in Parissubj (employ,IBM) IBM employed 10 C programmerssubj (employ,Paul) Paul was employed by IBMSubj refers to the superficial subject of a verb, re-gardless of the latter being used in the active or pas-sive voice.
Moreover, it can also be used to marksubject control relations and, possibly, raising to ob-ject/subject Phenomena, s exemplified below:sabj (leave, John) John promised Mary to leavesubj (leave,Mary) John ordered Mary to leavesubj (be,her) John believes her to be intelligentsubj (be, John) John seems to be intelligentAlso clausal subjects are marked as sub j:subj (mean,leave) that Mary left meant she was sicksubj (require,win) to win the America's Cup requires42heaps of cashcomp (bead, dependent) is the most generic relationbetween a head and a complement, whether a mod-ifier or a subcategorized argument.rood(head, ependent) holds between a head and itsmodifier, whether clausal or non-clausal; e.g.rood(flag,red) a red flagrood(walk,slowly) walk slowlyrood(walk,John) walk with Johnmod(Picasso,painter) Picasso the paintermod(valk,talk) walk while talkingMod is also used to encode the relation between anevent noun (including deverbal nouns) and its par-ticipants, and the relation between a head and asemantic argument which is syntactically realised asa modifier (as in the passive construction), e.g.
:mod(destruction,city) the destruction of the cityrood(kill,Brutus) he was killed by Brutusarg(head,dependent) is he most generic relationbetween a head and a subcategorized argument; be-sides functional underspecification, it is used to tagthe syntactic relation between a verbal head anda non-subject clausal argument (see section 2.3.1above):arg(say,accept) He said that he will accept he jobpred(bead,dependent) is he relation which holdsbetween a head and a predicative complement, be itsubject or object predicative, .g.pred(be,intelligent) John is intelligentpred(consider,genius) John considers Mary a ge-niusnonpred(head,dependent) is he relation whichholds between a head and a non predicative com-plement.dobj(head,dependent) is the relation between apredicate and its direct object (always non-clausal),e.g.
:dobj (read,book) John read many booksiobj (head,dependent) is the relation between apredicate and the indirect object, i.e.
the comple-ment expressing the recipient or beneficiary of theaction expressed by the verb, e.g.iobj (speak,Mary) John speaks to Maryiobj (give,Mary) John gave Mary the contractiobj (give,Mary) John gave the contract to Maryoblobj (bead,dependent) is the relation between apredicate and a non-direct non clausal complement,e.g.oblobj (live,Rome) John lives in Romeoblobj (inforra,ruu) John informed me of his runIn order to represent conjunctions and disjunctions,FAME avails itself of the two symmetric relationsconj and d is  j ,  lying outside the dependency hier-archy.
Consider, for instance, the FAME representa-tion of the following sentence, containing a conjoinedsubject:John and Mary arrived"subj (arrive, John)subj (arrive ,Mary)conj (John,Mary)The FAME representation f the sentence John orMary arrived differs from the previous one only inthe type of relation linking John and Mary: namely,d i s j  ( John,Mary).2.3.3 Feature  specificationIn FAME, a crucial role is played by the featuresassociated with both elements of the relation.Dep(endent)_ features  areas follows:?
In t ro (ducer ) :  it refers to the grammaticalword (a preposition, a conjunction etc.)
whichpossibly introduces the dependent in a givenfunctional relation, e.g.iobj (give, Mary.<intro=' ' to '  '>) give toMaryarg(say,accept.<intro=' ' that '  '>) Paul saidthat he accepts his offer$ Case: it encodes the case of the dependent, e.g.iobj (dare, gli.<case=DAT>) dargli 'give tohim'* Synt__real: it refers to a broad classification ofthe syntactic realization of a given dependent,with respect o its being clausal or non-clausal,or with respect o the type of clausal structure(i.e.
whether it is an open function or a closedfunction).
Possible values of this feature are:- x: a subcategorized argument or modi-fier containing an empty argument positionwhich must be controlled by a constituentoutside it, e.g.arg (decide, leave.
<synt_real=x>) Johndecided to leavec: a subcategorized argument or modifierwhich requires no control by a constituentoutside it, e.g.arg(say, leave.<synt_real=c>) John saidhe left- nc: a non-clausal argument or modifier,e.g.dobj (eat,pizza.
<synt_real=nc>) John atea pizzaHead_features are as follows:?
Diath: it specifies the diathesis of a verbal head,e.g.subj (employ.<diath=passive>, Paul) Paul wasemployed by IBMsubj (employ.<diath=active>, IBM) IBM em-ployed Paul?
Person: it specifies the person of a verbal head,e.g.subj (eat.
<person=3>, he) he eats a pizza?
Number: it specifies the number of a verbal head.e.g.subj (eat.<number=sing>, he) he eats a pizza?
Gender: it specifies the gender of a head, e.g.subj (arrivare.<gender=fem>, Maria) Mariaarrivata 'Maria has come'3 FAME at  workTheory -neut ra l i ty  Theory-neutrality is an oftenemphasised requirement for reference annotationschemata to be used in evaluation campaigns (seeGRACE, (Adda et al, 1998)).
The problem withtheory neutrality in this context is that, althoughsome agreement can be found on a set of basic la-bels, problems arise as soon as the definition of theselabels comes in.
For example, the definition of "sub-ject" as a noun constituent marked with nominativecase is not entirely satisfactory, since a system mightwant to analyse the accusative pronoun in John be-lieves her to be intelligent as the subject of the verbheading the embedded infinitival clause (as custom-ary in some linguistic analyses of this type of comple-ments).
Even agreement, often invoked as a criterialproperty for subject identification, may be equallytricky and too theory-loaded for purposes of parsercomparison and evaluation.The approach of FAME to this bunch of issues isto separate the repertoire of functional relation types(labels), from the set of morpho-syntactic featuresassociated with the head and dependent, as shownin the examples below:subj (be, she.
<case=accusat ive>)  John believes herto be intelligent43subj (be,she.<case=nominative>) She seems to beintelligentBy doing this way, emphasis is shifted fromtheory-neutrality (an almost unattainable goal) tomodularity of representation: a functional represen-tation is articulated into different information lev-els, each factoring out different but possibly inter-related linguistic facets of functional annotation.Intertranslatabi l i ty A comparative valuationcampaign has to take into account that partici-pant systems may include parsers based on ratherdifferent approaches to syntax (e.g.
dependency-based, constituency-based, HPSG-Iike, LFG-like,etc.)
and applied to different languages and testcorpora.
For a comparative evaluation to be possi-ble, it is therefore necessary to take into account thespecificity of a system, while at the same time guar-anteeing the feasibility and effectiveness of a map-ping of the system output format onto the referenceannotation scheme.
It is important to bear in mindat this stage that:?
most broad-coverage parsers are constituency-based;?
the largest syntactic databases (treebanks) useconstituency-based r presentations.It is then crucial to make it sure that constituency-based representations, or any other variants thereof,be mappable onto the functional reference annota-tion recta-scheme.
The same point is convincinglyargued for by Lin (1998), who also provides an algo-rithm for mapping a constituency-based r presenta-tion onto a dependency-based format.
To show thatthe requirement of intertranslatability is satisfied byFAME, we consider here four different analyses forthe sentence John tried to open the window togetherwith their translation equivalent in the FAME for-mat:1.
ANLT Parser (Briscoe & Carroll, 1995) - traditionalPSG representation:(Tp(V2 (N2 (Ni (NO John_NPl)))(VI (VO tried_VVD)(VI (YO to_T0)(Vl (VO open_VV0)(N2 (DT the_AT)(NI (NO window_NNl)))))))).FAME equivalent:subj ( t ry ,  John)arg (try, open.
<introducer="to">)dobj (open, window)2.
Fast Partial Parser (Grefenstette, 1994):SUBJ ( t ry ,  John)DOBJ (open, window)SUBJ (open, John)MODIF (open, try).FAME equivalent:subj (try, John)dobj (open, window)subj (open, John)mod (open, try)3.
Finite State Constraint Grammar Parser (Karlssonet al, 1995):John N SUBJtried V MVMAINC"to INFMARK open V_INF MV OBJ"the DET window NOBJ.FAME equivalent:subj (try, John)ar E (try, open.
<introducer="to",synt_real--x>)dobj (open, window)4.
PENN Predicate Argument structure (Marcus etal., 1994):want ( t ry  (John, open (John, window) ).FAME equivalent:subj (try, John)arg (try, open)subj (open, John)dobj (open, window)Let us suppose now that the reference analysis forthe evaluation of the same sentence in FAME is asfollows:subj (try, John)arg (try, open.
<introducer="to", synt_real=x>)subj (open, John)dobj (open, window)Notice that this representation differs from theoutput of the ANLT Parser and of the Finite StateConstraint Grammar Parser mainly because theyboth give no explicit indication of the control re-lationship between the verb in the infinitive clauseand the matrix subject.
This information is markedin the output of both the Fast Partial Parser andthe PENN predicate-argument tagging.
Note fur-ther that the Fast Partial Parser gives a differentinterpretation of the infinitival complement, whichis marked as being modified by try, rather than be-ing interpreted as a direct object of try.FAME does justice to these subtle differences asfollows.
First, it should be reminded that the FAMEequivalents given above are in fact shorthand repre-sentations.
Full representations are distributed overfour levels, and precision and recall are to be gaugedjointly relative to all such levels.
To be concrete, letus first show a full version of the FAME standardrepresentation for the sentence John tried to openthe window (cf.
Section 2.2):i.
( t ry ,  John)44i i .
<try,John>i i i .
subji.
(try,open)ii.
<try,open>iii.
argiv.
open.<introducer="to',synt_real=x>i.
(open,John)ii.
<open,John>?ii.
subji.
(open,window)ii.
<open,window>?ii.
dobjNote first that information about the unsaturatedclausal complement to open is separately encoded assynt_real=x in the standard representation.
Thefailure to explicitly annotate this piece of informa-tion incurred by ANLT and the Constraint Gram-mar Parser will then be penalised in terms of re-call, but would eventually not affect precision.
Bythe same token, the subject control relation betweenJohn and open is recalled only by the Fast PartialParser and PENN, and left untagged in the remain-ing schemes, thus lowering recall.
The somewhatunorthodox functional dependency between try andopen proposed by the Fast Partial Parser will receivethe following full-blown FAME translation:mod(try,open)<open,try>When compared with the standard representa-tion, this translation is a hit at the level ofidentification of the unordered ependency pair(try,open),  although both the order of elementsin the pair (<open,try>) and their functional de-pendency (rood) fail to match the standard.
On thisspecific dependency, thus, recall will be ?.
As amore charitable alternative to this evaluation, it canbe suggested that the difference between the FAMEstandard and the Fast Partial Parser output is theconsequence of theory internal assumptions concern-ing the analysis of subject-control structures, andthat this difference should eventually be leveled outin the translation i to FAME.
This may yield a fairerevaluation, but has the drawback, in our view, ofobscuring an important difference between the tworepresentations.Evaluation of dialogue systems Dialogue man-agement systems have to be able to deal with bothsyntactic and semantic information at the sametime.
These two levels of information are usuallydealt with separately for reasons of higher ease ofrepresentation, and ease of change, updating andadaptation to different domains and different lan-guages.
Nonetheless, the formalisms used for syntaxand semantics must have a certain degree of similar-ity and some additional knowledge about the rela-tionships between syntax and semantics i  necessary.An example isprovided by what has been done in theESPRIT SUNDIAL project (Peckam, 1991), whereSyntax is defined using a dependency grammar aug-mented with morphological greement rules; Seman-tics is declared through case frames (Fillmore, 1968;Fillmore, 1985) using a conceptual graph formalism.An additional bulk of knowledge, called mappingknowledge, specifies possible links between the sym-bols of the dependency grammar and the conceptsof case frames.
In this way syntactic and semanticcontrols are performed at the same time, avoidingthe generation of parse trees that must afterwardsbe validated semantically.
The FAME meta-schemefits in comparatively well with this approach to pars-ing, as (a) functional annotation is readily translat-able into dependency-like tags, and (b) the schememakes provision for integration of syntactic and se-mantic information.Furthermore, the lexical character of FAME func-tional analysis as a dependency between specificheadwords, makes annotation at the functional levelcompatible with score driven, middle-out parsing al-gorithms, whereby parsing may "jump" from oneplace to another of the sentence, beginning, forexample, with the best-scored word, expanding itwith adjacent words in accordance with the lan-guage model (Giachin, 1997).
Scoring can be a func-tion of the reliability of speech recognition in theword lattice, so that the parser can start off fromthe most-reliably recognized word(s).
Alternatively,higher scores can be assigned to the most relevantcontent words in the dialogue, given a specific do-main/task at hand, thus reducing the complexityspace of parses.Use of underspecif ication FAME hierarchicalorganization of functional relations makes it possi-ble to resort to underspecified tags for notoriouslyhard cases of functional disambiguation.
For ex-ample, both Gianni and Mario can be subject orobject in the Italian sentence Mario, non l'ha an-cora visto, Gianni, which can mean both 'Mario hasnot seen Gianni yet' and 'Gianni has not seen Marioyet'.
In this case, the parser could leave the ambi-guity unresolved by using the underspecified func-tional relation dep, e.g.
dep(vedere,Mario) anddep (vedere, Gianni).
Similarly, the underspecifiedrelation comp comes in handy for those cases whereit is difficult to draw a line between adjuncts andsubcategorized lements.
This is a crucial issue ifone considers the wide range of variability in thesubcategorization nformation contained by the lex-ical resources used by participant systems.
Given45the sentence John pushed the cart to the station, forexample, a comp relation is compatible both with ananalysis where to the station is tagged as a modi-fier, and with an analysis which considers it an ar-gument.
We already considered (section 2.3.1) theissue of tagging sentential complements as arg, as away to circumvent the theoretical issue of whetherthe functional relations of clauses hould be definedon the basis of their predicative status, or, alterna-tively, of their syntactic distribution.To sum up, underspecification thus guarantees amore flexible and balanced evaluation of the systemoutputs, especially relative to those constructionswhose syntactic analysis is controversial.4 Conc lus ion  and  deve lopmentsThe suggestion of using a functional meta-scheme asa fair basis for parsing evaluation rests on the ideathat parsing systems must be assessed for what theyare intended to provide, not for how well they meetthe requisites of other annotation schemes.
Still; itmakes a lot of sense to compare the amount of infor-mation provided by different parsers by casting thisinformation into a common format.
The distributedinformation structure of FAME is conducive to an in-cremental evaluation procedure, which ranges froma base evaluation level (involving sheer identificationof the terms of a syntactic relationship and/or theirorder), to more refined levels, including morpho-syntactic information, dependency type, and ulti-mately predicate--argument structure.
The evalua-tion of a text annotated for functional informationcan then be conceived of as a function of estimatingprecision and recall for each of the independent eval-uation levels envisaged.
Evaluation results obtainedfor the different levels can eventually be combinedtogether or, for particular purposes, assessed in theirown right (e.g.
for IR applications the basic evalu-ation level could be sufficient).
We are consideringthe possibility of extending FAME through additionof still further levels of lingustic information.Re ferencesAdda, G., Mariani, J., Lecomte, J., Paroubek, P. and M.Rajman.
1998.
The GRACE French Part-of-speechtagging evaluation task.
In Proceedings of the FirstInternational Conference on Language Resources andEvaluation, pages 443-441, Granada, Spain.Antoine, J. Y.
1995.
Conception de Dessin et CHM.In K. Zreik et J. Caelen.
Le communicationnel pourconcevoir, pages 161-184.
Europia, Paris, France.Briscoe, Ted and John Carroll.
1995.
Developing andevaluating a probabilistic LR parser of part-of-speechand punctuation labels.
In Proceedings of the FourthACL/SIGPARSE International Workshop on parsingtechnologies, pages 48-58, Prague, Czech Republic.Carroll, John, Briscoe, Ted, Calzolari, Nicoletta, Fed-erici, Stefano, Montemagni, Simonetta, Pirrelli, Vito,Grefenstette, Gregory, Sanfilippo, Antonio, Carroll,Glenn and Mats Rooth.
1996.
Specification ofPhrasalParsing.
SPARKLE Deliverable 1.Carroll, John and Ted Briscoe.
1996.
Apportion-ing development effort in a probabilistic LR pars-ing system through evaluation.
In Proceedings of theACL/SIGDAT Conference on Empirical Methods inNatural Language Processing, pages 92-100.Carroll, John, Briscoe, Ted and Antonio Sanfilippo.1998.
Parser evaluation: a survey and a new proposal.In Proceedings of the First International Conferenceon Language Resources and Evaluation, pages 447-454, Granada, Spain.Fillmore, C. J.. 1968.
The case for case.
In E. Bachand R. Harms (Eds.
), Universals in Linguistic Theory,pages 1-88, Holt, Rinehart & Winston, New York,USA.Fillmore, C. J.. 1985.
Frames and the semantics of un-derstanding.
Quaderni di Semantica, 6:222-255.Giachin, E. and S. McGlashan .
1997.
Spoken Lan-guage Dial6gue Systems.
In Steve Young and GerritBloothooft (Eds.
)Corpus-Based Methods in Languageand Speech Processing, pages 69-117, Kluwer, Dor-drecht, The Netherlands.Grefenstette, Greg.
1994.
Explorations in Auto-matic Thesaurus Discovery.
Kluwer, Dordrecht, TheNetherlands.Hudson, Richard.
1984.
Word Grammar.
Blackwell,Oxford, England.Karlsson, Fred, Voutilalnen, Atro, Heikkil~i, Juhaand Arto Anttila.
1995.
Constraint Grammar:A Language-Independent System for Parsing Unre-stricted Text.
de Gruyter, Berlin, Germany.Klein, M., Bernsen, N. O., Davies, S. , Dybkjaer, L. ,Garrido, J. , Kasch, H.,  Mengel, A., PirreUi, V., Poe-sio, M., Quazza, S. and C. Soria.
1998.
SupportedCoding Schemes.
MATE Technical Report DI.1.Lin, Dekang.
1998.
A dependency based method forevaluating broad-coverage parsers.
Natural LanguageEngineering, 4(2):97-114.Marcus, Mitchell, Kim, Grace, Marcinkiewicz, MaryAnn, MacIntyre, Robert, Bies, Ann, Ferguson, Mark,Katz, Karen and Britta Schasberger.
1994.
The PennTreebank: annotating predicate argument structure.Proceedings of DARPA 1994.Peckam, J.. 1991.
Speech understanding and dialogueover the telephone, An overview of the ESPRIT SUN-DIAL project.
In Proceedings DARPA Speech andNatural Language Workshop.Sampson, Geoffrey.
1998.
A proposal for improvingthe measurement of parse accuracy.
Unpublishedmanuscript.Sanfilippo, A., Barnett, R., Calzolari, N., Flores, S.,Hellwig, P., Kahrel, P., Leech, G., Melero, M.,Montemagni, S., Odijk, J., Pirrelli, V., Teufel, S.,Villegas, M. and Zaysser, L. 1996.
Subcatego-rization Standards.
Report of the EAGLES Lexi-con/Syntax Group.
SHARP Laboratories of Europe,Oxford (Regno Unito).46
