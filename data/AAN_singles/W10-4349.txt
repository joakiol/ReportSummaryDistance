Proceedings of SIGDIAL 2010: the 11th Annual Meeting of the Special Interest Group on Discourse and Dialogue, pages 261?264,The University of Tokyo, September 24-25, 2010. c?2010 Association for Computational LinguisticsAdvances in the Witchcraft Workbench ProjectAlexander Schmitt, Wolfgang MinkerInstitute for Information TechnologyUniversity of Ulm, Germanyalexander.schmitt,wolfgang.minker@uni-ulm.deNada Ahmed Hamed SharafGerman University in Cairo, Egyptnada.sharaf@student.guc.edu.egAbstractThe Workbench for Intelligent exploraTionof Human ComputeR conversaTions isa new platform-independent open-sourceworkbench designed for the analysis, min-ing and management of large spoken di-alogue system corpora.
What makesWitchcraft unique is its ability to visual-ize the effect of classification and predic-tion models on ongoing system-user inter-actions.
Witchcraft is now able to handlepredictions from binary and multi-classdiscriminative classifiers as well as regres-sion models.
The new XML interface al-lows a visualization of predictions stem-ming from any kind of Machine Learning(ML) framework.
We adapted the wide-spread CMU Let?s Go corpus to demon-strate Witchcraft.1 IntroductionSubstantial effort has been invested in the pastyears in exploring ways to render Spoken Di-alogue Systems (SDS) more adaptive, naturaland user friendly.
Recent studies investigatedthe recognition of and adaption to specific usergroups, e.g.
the novices and expert users, orthe elderly (Bocklet et al, 2008).
Further, thereis a massive effort on recognizing angry users,differentiate between genders (Burkhardt et al,2007), spotting dialects, estimating the coopera-tiveness of users or user satisfaction (Engelbrechtet al, 2009) and finally, predicting task comple-tion (Walker et al, 2002).
When applied online,i.e.
during the interaction between user and sys-tem, these models can add valuable informationto the dialogue system which would allow for anadaption of the dialogue strategy, see Figure 1.Until now we can report that these models11please note that we use the expression recognizer, classi-Speech Recognition ParsingDialogue ManagerText Generation and SynthesisApplicationUser Prediction ModelFigure 1: Enhanced SDS: The prediction modelthat is used to render the dialogue system moreuser-friendly delivers additional information to thedialogue manager.work more or less well in batch-test scenarios of-fline.
An anger classifier might deliver 74% accu-racy when evaluated on utterance level.
But whichimpact would the deployment of this recognizerhave on specific dialogues when being employedin a real system?
Would it fail or would it suc-ceed?
Similarly, at what point in time would mod-els predicting gender, speaker age, and expert sta-tus deliver a reliable statement that can indeed beused for adapting the dialogue?
What we needprior to deployment is an evaluation of the mod-els and a statement on how well the models wouldwork when being shifted on dialogue level.
At thispoint, the Witchcraft Workbench enters the stage.2 The Role of WitchcraftFor a more detailed introduction on the WitchcraftWorkbench please refer to (Schmitt et al, 2010a).In a nutshell, Witchcraft allows managing, miningand analyzing large dialogue corpora.
It bringslogged conversations back to life in such that itsimulates the interaction between user and sys-tem based on system logs and audio recordings.Witchcraft is first of all not an annotation or tran-scription tool in contrast to other workbenchessuch as NITE (Bernsen et al, 2002), Transcriber2fier and prediction model interchanging in this context2http://trans.sourceforge.net261or DialogueView3.
Although we also employ itfor annotation, its central purpose is a differentone:Witchcraft contrasts dialogue flows of spe-cific dialogues which are obtained from a dialoguecorpus with the estimations of arbitrary predic-tion and classification models.
By that it is in-stantly visible which knowledge the dialogue sys-tem would have at what point in time in the dia-logue.
Imagine a dialogue system would be en-dowed with an anger recognizer, a gender recog-nizer and a recognizer that should predict the out-come of a dialogue, i.e.
task completion.
Each ofthe three recognizers would be designed to deliveran estimation at each point in the dialogue.
Howlikely is the user angry?
How likely is he male orfemale and how likely will the task be completedbased on what we have seen so far in the dialogue.To which extent the recognizers deliver a correctresult can be verified within Witchcraft.3 Handling Models in WitchcraftWitchcraft had several shortcomings when we firstreported on it in (Schmitt et al, 2010a).
It wasonly working with a proprietary industrial corpusand was heavily tailored to our needs.
It workedonly with specific models from binary discrimina-tive classifiers.
Since then we have put substantialeffort to generalize the functionality and to makeit available to the community.To allow an analysis of other recognizers thesystem has been extended to further handle pre-dictions from multiclass discriminative classifica-tion and regression tasks.
Witchcraft does not con-tain ?intelligence?
on its own but makes use ofand manages the predictions of recognizers.
Weassume that a recognizer is implemented eitheras stand-alone recognizer or with help of a Ma-chine Learning (ML) framework.
We emphasizethat Witchcraft itself does neither perform fea-ture extraction nor classification.
Witchcraft op-erates on turn level requesting the recognizer todeliver a prediction based on information avail-able at the currently processed dialogue turn ofa specific dialogue.
Where and how the recog-nizer accomplishes this is not part of the archi-tecture.
The ML framework of our choice thatwas originally supported natively, i.e.
directly ac-cessed by Witchcraft (Schmitt et al, 2010a) wasRapidMiner4, an ML framework that covers a vast3http://cslu.cse.ogi.edu/DialogueView/4www.rapid-i.netmajority of supervised and unsupervised machinelearning techniques.
The initial plan to interfaceother ML frameworks natively (such as MatLab,the R framework, BoosTexter, Ripper, HTK thatare frequently used in research) turned out not tobe practical.
In order to still be able to cover thebroadest possible range of ML tools we introduceda new generic XML interface.
For simplicity weremoved the RapidMiner interface.
An overviewof the dependency between Witchcraft and a rec-ognizer is depicted in Figure 2.ML Framework RecognizerWitchcraftreadsDialogueID78743DisplaysdiscourseChartViewsDialogueViewDialogueID93123????
????
????
????
??
?.Dialogue FlowUser Satisfactionreads...DatabaseLog Data&AcousticFeaturesDialogueID67343GetpredictionXML PredictionsPerturn&dialoguePrediction andClassificationModelsPreprocessingClassificationFeatureRetrievalDialogue CorpusInteraction LogsAudio FilesAudio FeaturesWitchcraftDisplaysEstimationsDisplaysDialogue FlowgeneratesreadsFigure 2: Dependency of Witchcraft and relatedrecognizers that are implemented within an MLframework.Witchcraft has been extended to support an ar-bitrary number of models, see Figure 3.
They cannow be one of the types ?discriminative bin ry?,?discriminative multiclass classification?
and ?re-gression?.Figure 3: Definition of a model within Witchcraft.External recognizers have to deliver predictionsfor the defined models as XML documents.A recognizer implemented in an ML frameworkhas to be defined in such a way that it deliversXML documents that fit the model definition inWitchcraft.
Each XML document represents theprediction of the recognizer for a specific dialogueturn of a specific dialogue.
It contains for discrimi-native classification tasks, such as gender, or emo-tion the number of the turn that has been classified,262the actual class label and the confidence scores ofthe classifier.<xml><turn><number>1</number><label>anger</label><prediction>non-anger</prediction><confidence class=?anger?>0.08</confidence><confidence class=?no-ang?>0.92</confidence></turn></xml>In regression tasks, such as the prediction ofuser satisfaction, retrieving cooperativeness scoresetc., the returned result contains the turn number,the actual label and the prediction of the classifier:<xml><turn><number>1</number><label>5</label><prediction>3.4</prediction></turn></xml>After performing recognition on a number of di-alogues with the recognizer Witchcraft reads in theXML files and creates statistics based on the pre-dictions and calculates dialogue-wise accuracy,f-score, precision and recall values, root meansquared error etc.
The values give some indica-tion of how precisely the classifier worked on dia-logue level.
That followed it allows to search fordialogues with a low overall prediction accuracy,or e.g.
dialogues with high true positive rates, highor low class-wise f-scores etc.
via SQL.
Now a de-tailed analysis of the recognizer?s performance ondialogue level and possible reasons for the failurecan be spotted.4 Evaluating ModelsIn Figure 4 we see prediction series of two rec-ognizers that have been applied on a specific dia-logue: a gender recognizer that predicts the gen-der on turn basis and an emotion recognizer thatpredicts the user?s emotional state (angry vs. non-angry) at the current turn.
The red line symbol-izes the confidence of the recognizers for each ofthe predicted classes.
For example, in the emotionmodel the blue line is the confidence for a non-angry utterance (0-100%), the red line for an an-gry one.
Exemplary for the two models we takea closer look at the gender model.
It predicts thegender on turn basis, i.e.
it takes the current speechsample and delivers estimations on the speaker?sgender.
As we can see, there are a number ofmisrecognitions in this call.
It stems from a fe-male speaker but the recognizer frequently esti-Figure 4: Screenshot of charts in Witchcraft basedon turn-wise predictions an anger and a genderrecognizer.mated a male speaker.
The call could be spot-ted by searching within Witchcraft for calls thatyield a low accuracy for gender.
It turned out thatthe misrecognized turns originate from the factthat the user performed off-talk with other personsin the background which caused the misrecogni-tion.
This finding suggests training the genderrecognizer with non-speech and cross-talk sam-ples in order to broaden the recognition from two(male, female) to three (male, female, non-speech)classes.
Further it appears sensitive, to create arecognizer that would base its recognition on sev-eral speech samples instead of one, which woulddeliver a more robust result.5 Portability towards other CorporaWitchcraft has now been extended to cope withan unlimited number of corpora.
An integrationof new corpora is straight-forward.
Witchcraftrequires an SQL database containing two tables.The dialogues table hosts information on the over-all dialogues (such as the dialogue ID, the cat-egory, filename of complete recording) and theexchanges table containing the turn-wise interac-tions (dialogue ID, turn number, system prompt,ASR parse, ASR confidence, semantic interpreta-tion, hand transcription, utterance recording file,barged in, etc.).
Both tables are linked through a1 : n relationship, i.e.
one entry in the dialoguestable relates to n entries in the interactions table,cf.
Figure 5.
To demonstrate portability and inorder to create a sample corpus that is deployedwith Witchcraft, we included the CMU Let?s Gobus information system from 2006 as demo cor-pus (Raux et al, 2006).
It contains 328 dialoguesincluding full recordings.
The Witchcraft projectincludes a parser that allows to transform raw logdata from the Let?s Go system into the Witchcrafttable structure.263dialoguesPK, FK1 CallerIDCategoryGenderAgeAudioFile...exchangesCallerIDSystemPromptASRTranscriptASRConfidenceSemanticInterpretationHandTranscriptRecognitionStatusBargedInAudioFile...Figure 5: Dialogue and exchanges table with 1:nrelationship.
Bold database columns are required,others are optional.6 Conclusion and DiscussionWitchcraft turned out to be a valuable frameworkin our everyday work when dealing with large di-alogue corpora.
At the current stage several stu-dents are working with it in multi-user mode tolisten, analyze and annotate dialogues from threedifferent corpora consisting of up to 100,000 di-alogues each.
Witchcraft allows them to searchfor dialogues relevant to the current task.
TheSQL-based access allows a powerful and standard-ized querying and retrieval of dialogues from thedatabase.
Witchcraft provides an overview andpresents decisive information about the dialogue atone glance and allows to sort and group differenttypes of dialogue for further research.
Moreover,Witchcraft allows us to test arbitrary recognizersthat provide additional information to the dialoguemanager.
Witchcraft tells us at which point in timea dialogue system would possess which knowl-edge.
Further it allows us to conclude the relia-bility of this knowledge for further employmentin the dialogue.
For an evaluation of recognizerswithin Witchcraft please refer to (Schmitt et al,2010b) where the deployment of an anger recog-nizer is simulated.Witchcraft is now freely and publically avail-able to the community.
It is hosted underGNU General Public License at Sourceforge un-der witchcraftwb.sourceforge.org.
The employedcomponent architecture allows for the develop-ment of third-party plug-ins and components forWitchcraft without the need for getting into detailof the existing code.
This facilitates the extensionof the workbench by other developers.
We hopethat Witchcraft will help to foster research on fu-ture dialogue systems and we encourage the com-munity to contribute.AcknowledgementsThe research leading to these results has re-ceived funding from the Transregional Collabora-tive Research Centre SFB/TRR 62 ?Companion-Technology for Cognitive Technical Systems?funded by the German Research Foundation(DFG).
The authors would like to thank the CMULet?s Go Lab from Carnegie Mellon Universityin Pittsburgh for their permission to deploy theLet?s Go Bus Information Corpus jointly withWitchcraft.ReferencesNiels Ole Bernsen, Laila Dybkjaer, and Mykola Kolod-nytsky.
2002.
The nite workbench - a tool for anno-tation of natural interactivity and multimodal data.In Proc.
of LREC, pages 43?49, Las Palmas, Spain.Tobias Bocklet, Andreas Maier, Josef Bauer, FelixBurkhardt, and Elmar No?th.
2008.
Age and gen-der recognition for telephone applications based ongmm supervectors and support vector machines.
InProc.
of ICASSP, volume 1, pages 1605?1608.Felix Burkhardt, Florian Metze, and JoachimStegmann, 2007.
Speaker Classification forNext Generation Voice Dialog Systems.
Advancesin Digital Speech Transmission.
Wiley.Klaus-Peter Engelbrecht, Florian Go?dde, Felix Har-tard, Hamed Ketabdar, and Sebastian Mo?ller.
2009.Modeling user satisfaction with hidden markovmodel.
In Proc.
of SIGDIAL 2009, pages 170?177.Antoine Raux, Dan Bohus, Brian Langner, Alan W.Black, and Maxine Eskenazi.
2006.
Doing researchon a deployed spoken dialogue system: One yearof lets go!
experience.
In Proc.
of Interspeech,September.Alexander Schmitt, Gregor Bertrand, Tobias Heinroth,and Jackson Liscombe.
2010a.
Witchcraft: A work-bench for intelligent exploration of human computerconversations.
In Proc.
of LREC, Valetta, Malta,May.Alexander Schmitt, Tim Polzehl, and WolfgangMinker.
2010b.
Facing reality: Simulating deploy-ment of anger recognition in ivr systems.
In Proc.
ofIWSDS, September.Marilyn Walker, I Langkilde-Geary, H W Hastie,J Wright, and A Gorin.
2002.
Automatically train-ing a problematic dialogue predictor for a spokendialogue system.
Journal of Artificial IntelligenceResearch, (16):293?319.264
