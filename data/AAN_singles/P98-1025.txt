Deriving the Predicate-Argument Structure for a Free Word OrderLanguage *Cern BozsahinDepartment of Computer EngineeringMiddle East Technical University06531 Ankara, Turkeybozsahin@ceng, metu.
edu.
trAbstractIn relatively free word order languages, grammat-ical functions are intricately related to case mark-ing.
Assuming an ordered representation of thepredicate-argument structure, this work proposes aCombinatory Categorial Grammar formulation ofrelating surface case cues to categories and typesfor correctly placing the arguments in the predicate-argument structure.
This is achieved by treat-ing case markers as type shifters.
Unlike otherCG formulations, type shifting does not prolifer-ate or cause spurious ambiguity.
Categories ofall argument-encoding grammatical functions fol-low from the same principle of category assignment.Normal order evaluation of the combinatory formreveals the predicate-argument structure.
The appli-cation of the method to Turkish is shown.1 IntroductionRecent heorizing in linguistics brought forth a levelof representation called the Predicate-ArgumentStructure (PAS).
PAS acts as the interface be-tween lexical semantics and d-structure in GB(Grimshaw, 1990), functional structure in LFG(Alsina, 1996), and complement s ructure in HPSG(Wechsler, 1995).
PAS is the sole level of rep-resentation in Combinatory Categorial Grammar(CCG) (Steedman, 1996).
All formulations as-sume a prominence-based structured representationfor PAS, although they differ in the terms usedfor defining prominence.
For instance, Grimshaw(1990) defines the thematic hierarchy as:Agent > Experiencer > Goal / Location / Source> Theme" Thanks to Mark Steedman for discussion and material, andto the anonymous reviewer of an extended version whose com-ments led to significant revisions.
This research is supportedby TUBITAK (EEEAG-90) and NATO Science Division (TU-LANGUAGE).whereas LFG accounts make use of the following(Bresnan and Kanerva, 1989):Agent > Beneficiary > Goal / Experiencer > Inst> Patient/Theme > Locative.As an illustration, the predicate-argument struc-tures of the agentive verb murder and the psycho-logical verb fear are (Grimshaw, 1990, p.8):murder (x (y))Agent Themefear (x (y))Exp ThemeTo abstract away from language-particular casesystems and mapping of thematic roles to grammati-cal functions, I assume the Applicative Hierarchy ofShaumyan (1987) for the definition of prominence:Primary Term > Secondary Term >Tertiary Term > Oblique Term.Primacy of a term over another is defined by the for-mer having a wider range of syntactic features thanthe latter.
In an accusative language, subjects areless marked (hence primary) than objects; all verbstake subjects but only transitive verbs take objects.Terms (=arguments) can be denoted by the genotypeindices on NPs, such as NP1, NP2 for primary andsecondary termsJ An NP2 would be a direct object(NPacc) in an accusative language, or an ergative-marked NP (NPerg) in an ergative language.
Thislevel of description also simplifies the formulationof grammatical function changing; the primary termof a passivized predicate (PASS p) is the secondaryterm of the active p. I follow Shaumyan and Steed-man (1996) also in the ordered representation f thePAS (1).
The reader is referred to (Shaumyan, 1987)for linguistic justification of this ordering.
(1) Pred... <Sec.
Term> <Primary Term>Given this representation, the surface order oft Shaumyan uses T 1 , T 2, but we prefer NPI, NP2 for easierexposition in later formulations.167constituents is often in conflict with the order in thePAS.
For instance, English as a configurational SVOlanguage has the mapping:(2) SS: S ~ OPAS: ~ NP2~"" .
.~P1However, in a non-configurational language, per-mutations of word order are possible, and grammat-ical functions are often indicated not by configura-tions but by case marking.
For instance, in Turkish,all six permutations of the basic SOV order are pos-sible, and Japanese allows two verb-final permuta-tions of underlying SOV.
The relationship betweencase marking and scrambling is crucial in languageswith flexible word order.
A computational solutionto the problem must rely on some principles of par-simony for representing categories and types of ar-guments and predicates, and efficiency of process-ing.In a categorial formulation, grammaticalfunctions of preverbal and postverbal NPs in(2) can be made explicit by type shifting 2the subject to S/(S\NP1) and the object to(S\NP1)\((S\NP1)/NP2).
These categories followfrom the order-preserving type shifting scheme(Dowty, 1988):(3) NP ~ T/(T~NP) or TVT/NP)To resolve the opposition between surface orderand the PAS in a free word order language, one canlet the type shifted categories ofterms proliferate,or reformulate CCG in such a way that arguments ofthe verbs are sets, rather than lists whose argumentsare made available one at a time.
The former alter-native makes the spurious ambiguity problem of CGparsing (Karttunen, 1989) even more severe.
Multi-set CCG (Hoffman, 1995) is an example of the set-oriented approach.
It is known to be computation-ally tractable but less efficient than the polynomialtime CCG algorithm of Vijay-Shanker and Weir(1993).
I try to show in this paper that he tradi-tional curried notation of CG with type shifting canbe maintained toaccount for Surface Form+-~PASmapping without leading to proliferation of argu-ment categories orto spurious ambiguity.Categorial framework is particularly suited forthis mapping due to its lexicalism.
Grammaticalfunctions of the nouns in the lexicon are assigned2aka.
type raising, lifting, or type changeby case markers, which are also in the lexicon.Thus, grammatical function marking follows nat-urally from the general CCG schema comprisingrules of application (A) and composition (B).
Thefunctor-argument distinction in CG helps to modelprominence relations without extra levels of repre-sentation.
CCG schema (Steedman (1988; 1990))is summarized in (4).
Combinator notation is pre-ferred here because they are the formal primitivesoperating on the PAS (cf.
(Curry and Feys, 1958)for Combinatory Logic).
Application is the onlyprimitive of the combinatory system; it is indicatedby juxtaposition i the examples and denoted by ?
inthe normal order evaluator (?4).
B has the reductionrule B f ga>_f (ga).
(4) X/Y: f Y: a =~A> X: faY: a X\ Y: f ==?
'A< X: f ax/Y: f r/z: g :----.8> x/z: BfgY z:a x r:.f x z: Bfgx/Y: y rxz:9 x\z: Bigv/z: g XkV: y  Sx< x/z: Byg2 Grammatical Functions, Type Shifting,and CompositionIn order to derive all permutations of a ditransi-tive construction i  Turkish using (3), the dative-marked indirect object (NP3) must be type shiftedin 48 (4!2) different ways so that coordination withthe left-adjacent and the right-adjacent constituentis possible.
This is due to the fact that the resultcategory T is always a conjoinable type, and the ar-gument category T/NP3 (and T~NP3) must be al-lowed to compose with the result category of theadjacent functor.
However, categories of argumentscan be made more informative about grammaticalfunctions and word order.
The basic principle is asfollows: The category assigned for argument n mustcontain all and only the term information about NPifor all i < n. An NP2 type must contain in its cat-egory word order information about NP1 and NP2but not NP3.
This can be generalized as in (5):(5) Category assignment for argument n:S Tr/Ta or Tr\TaC(n) !
NPn168Ta = Lexical category of an NPn-governing element (e.g., a verb) in the lan-guage whose highest genotype argument isNPn.Tr = The category obtained from Ta by re-moving NPn.Case markers in Turkish are suffixes attached tonoun groups.
3 The types of case markers in the lex-icon can be defined as:(6) Lexical type assignment for the casemarker (-case) encoding argument n:-case: = C(n): T(C(n) x\N: xwhere T(C) denotes the semantic type for cate-gory C:(7) a. T(NPn) = I (lower type for NPn)b. T(C) = T (if C is a type shifted categoryas in (3))c. T(C) = BBT (if C is a type shifted andcomposed category)(5) and (6) are schemas that yield three lexicalcategories per -case: one for lower type, and two forhigher types which differ only in the directionalityof the main function due to (5).
For instance, for theaccusative case suffix encoding NP2, we have:-ACC := NP2:Ix\N:x:= ((SINP1)/(SINPIlNP2)):Tx\N:x:= ((SINP1)\(SINPIlNP2)):Tx\N:xType shifting alone is too constraining if the verbstake their arguments in an order different from theApplicative Hierarchy (?
1).
For instance, the cat-egory of Turkish ditransitives i  SINPIlNP31NP2.Thus the verb has the wrapping semantics Cv'where C is the permutator with the reductionrule Cfga>fag.
Type shifting an NP3 yields(SINP1 INP2)/(SINP1 \]NP~ INP3) in which the argu-ment category is not lexically licensed.
(5) is order-preserving in a language-particular way; the resultcategory always corresponds to a lexical categoryin the language if the argument category does too.For arguments requiring a non-canonical order,we need type shifting and composition (hence thethird clause in (7)):3As suggested in (Bozsahin and Gocmen, 1995), morpho-logical and syntactic omposition can be distinguished by asso-ciating several attachment calculi with functors and arguments(e.g., affixation, concatenation, clitics, etc,)NP3:x T=~ (SINP1)/(SINPIlNP3):Tx ~(SINP, INP2)/(SINP, INP31NP2): B(Tx) = BBTxOnce syntactic ategory of the argument is fixed,its semantics i uniquely determined by (7).The combinatory primitives operating on the PASare I (7a), T (7b--c), and B (7c).
T has the reductionrule Tar>f a, and If>f.
The use ofT or B signifiesthat the term's category is a functor; its correct placein the PAS is yet to be determined.
I indicates thatthe term is in the right place in the partially derivedPAS.According to (5), there is a unique result-argument combination for a higher type NP3, com-pared to 24 using (3).
(5) differs from (3) in anothersignificant aspect: Tr and Ta may contain direction-ally underspecified categories if licensed by the lex-icon.
Directional underspecification s eeded whenarguments of a verb can scramble to either side ofthe verb.
It is necessary in Turkish and Warlpiribut not in Japanese or Korean.
The neutral slash Iis a lexical operator; it is instantiated to either \ or/ during parsing.
A crucial use of underspecifica-tion is shown in (8).
SV composition could not fol-low through if the verbs had backward-looking cat-egories; composition of the type shifted subject andthe verb in this case would only yield a backward-looking S\NP2 by the schema (4).
(8) Adam kurmu?
ama ~.ocuk topladt masa-ytman.NOM set but chlld.NOMgather table-ACCB>S/(SINPD SINP11NP2 S/NP2 NP2-8>S/NP2.AS/NP2.A>S'The man had set the table but the child is cleaning it.
'The schema in (5) makes the arguments availablein higher types, and allows lower (NPn) types onlyif higher types fail (as in NP2 in (8)).
There aretwo reasons for this: Higher types carry more in-formation about surface order of the language, andthey are sufficient to cover bounded phenomena.
?3shows how higher types correctly derive the PAS invarious word orders.
Lower types are indispensablefor unbounded constructions such as relativizationand coordination.
The choice is due to a concernfor economy.
If lower types were allowed freely,they would yield the correct PAS as well:169(9) S IO DO VNPI: Ig NP3: lit NP2: Id DV: Cv ISINPzlNP3: (Cv') (IoA3A<SINPI: (Cv')(Io' )(1i' )A<s:  (cv')( Io' )(,i' )(Is' )>_v' i' o' s'(10) a. Mehmet kitab-t oku-duM.NOM book-ACC read-PASTS/IV: Tin' IV/W: TU TV: r'-A>IV: TU r I-A>S: Tm t (Tb' r I ) >r' Um''Mehmet read tee book.
'In parsing this is achieved as follows: An NPkcan only be the argument in a rule of application,and schema (5) is the only way to obtain NPk froma noun group.
Thus it suffices to check in the ap-plication rules that if the argument category is NPk,then the functor's result category (e.g., X in X/Y)has none of the terms with genotype indices lowerthan k. NP2 in (8) is licensed because the adjacentfunctor is S/NP2.
NP2 in (9) is not licensed becausethe adjacent functor has NP1.For noun-governed grammatical functions suchas the genitive (NPs), (5) licenses result categoriesthat are underspecified with respect o the geno-type index.
This is indeed necessary because theresulting NP can be further inflected on case andassume a genotype index.
For Turkish, the typeshifted category is C(5) =NPagr/(NPagr\NPs).Hence the genitive suffix bears the categoryC(5)\N.
Agreement features enforce the possessor-possessed agreement on person and number via uni-fication (as in UCG (Calder et al, 1988)):kalem -in uc -upencil -GEN.3s tip -POSS.3sN.'
--ff C(5)\N: T N:t ---~ (Ne=g~\NPs>\N:p.ossANPag~/(NP~g~\NPs):~p 5 NP~,~\NPs:posst'A>NPo:: :rp' Cposst' )>_(posst' )p''The tip of the pencil'3 Word Order and ScramblingDue to space limitations, the following abbre-viated categories are employed in derivations:IV = SINPzTV = SINPIINP 2DV = SINPIINP3INP2The categories licensed by (5) can then be writtenas IV/TV and IV~TV for NP2, TV/DV and TV~DVfor NP3, etc.
(10a-b) show the verb-final variationsin the word order.
The bracketings in the PAS andjuxtaposition are left-associative; (fa)b is same aslab.b.
kitab-t Mehmet oku-duIV/TV: Tb' S\IV: Tm ~ TV: r I"Bx<S/TV: B(Tm' )(Tb' )S: B(Tm' )(Tb' )r' >r'  b' m A~"(10a) exhibits spurious ambiguity.
Forward com-position of S/IV and IV/TV is possible, yieldingexactly the same PAS.
This problem is resolvedby grammar ewriting in the sense proposed byEisner 4 (1996).
Grammar rewriting can be doneusing predictive combinators (Wittenburg, 1987),but they cannot handle crossing compositions thatare essential to our method.
Other normal formparsers, e.g.
that of Hepple and Morrill (1989),have the same problem.
All grammar ules in (4)in fact check the labels of the constituent cate-gories, which show how the category is derived.The labels are as in (Eisner, 1996).
-FC: Outputof forward composition, of which forward cross-ing composition is a special case.
-BC: Output ofbackward composition, of which backward cross-ing composition is a special case.
-OT: Lexicalor type shifted category.
The goal is to blocke.g., X/Y-FC Y/Z-{FC, BC, OT} =~B> X/Z andX/Y-FC Y-{FC, BC, OT} =~A> X in (10a).
S/TVcomposition would have the label -FC, which can-not be an input to forward application.
In (10b),the backward composition follows through since ithas the category-label S/TV-BC, which the forwardapplication rule does not block.
We use Eisner'smethod to rewrite all rules in (4).
( l l ab)  show the normal form parses for post-verbal scrambling, and ( l lc -d)  for verb-medialcases.4Eisner (1996, p.81) in fact suggested that he labeling sys-tem can be implemented in the grammar by templates, or in theprocessor by labeling the chart entries.17001) a. oku-du Mehmet kitab-tread-PAST M.NOM book-ACCIV: r' S/IV: Tm' IV~TV: Tb'B?>S\TV: B(Tm' )(Tb' )A<b.C.d.S: B(Tm' )(Tb' )r' >r '  b' m''Mehmet read the book.
'oku-du kitab-i MehmetTV: r' IV~TV: Tb' S\IV: Tm'A<IV : Tb' r'-A<S :Tm' (Tb' r' )>r' Um'kitab-z oku-du MehmetIV/IV: Tb' IV: r' S\IV: Trn'A>IV : Tb' r'A<S :Tin' (Tb' r' )>r '  b' m'Mehmet oku-du kitab-tS/IV: Tm' TV: r' IV~TV: Tb'A<IV : Tb' r'A>S : Tin' (Tb' r' ) >r '  b' m'Controlled lexical redundancy of higher types,e.g., having both (and only) IV/TV and IV~TV li-censed by the lexicon for an NP2, does not lead toalternative derivations in (10-11).
Assume that A/BB\ C, where A /B and B\ C are categories producedby (5), gives a successful parse using the outputA\C.
A\B B\C and A\B B/C are not composabletypes according to (4).
The other possible configu-ration, A/B B/C, yields an A/C which looks for Cin the other direction.
Multiple derivations appearto be possible if there is an order-changing com-position over C, such as C/C (e.g., a VP modifierIV/IV).
(12) shows two possible configurations witha C on the right.
(12b) is blocked by label check be-cause A/C-FC C =~A> A is not licensed by thegrammar.
If C were to the left, only (12a) wouldsucceed.
Similar reasoning can be used to show theuniqueness of derivation in other patterns of direc-tions.
(12) a. C/C A/B B\C C~Bx>A\C-FCBx <A/C-BC.A>A-OTb.
C/CA/B B/C C-B>A/C-FC* * * ~A >Constrained type shifting avoids the problemwith freely available categories in Eisner's normalform parsing scheme.
However, some surface char-acteristics of the language, such as lack of casemarking in certain constructions, puts the burdenof type shifting on the processor (Bozsahin, 1997).Lower type arguments such as NP2 pose a differentkind of ambiguity problem.
Although they are re-quired in unbounded constructions, they may yieldalternative derivations of local scrambling cases in alabelled CCG.
For instance, when NP2 is peripheralin a ditransitive construction and the verb can forma constituent with all the other arguments (S\NP2 orS/NP2), the parser allows NP2.
This is unavoidableunless the parser is made aware of the local and non-local context.
In other words, this method solves thespurious ambiguity problem between higher types,but not among higher and lower types.
One can tryto remedy this problem by making the availability oftypes dependent on some measures of prominence,e.g., allowing subjects only in higher types to ac-count for subject-complement asymmetries.
But, aspointed out by Eisner (1996, p.85), this is not spu-rious ambiguity in the technical sense, just multi-ple derivations due to alternative lexical categoryassignments.
Eliminating ambiguity in such casesremains to be solved.4 Revealing the PASThe output of the parser is a combinatory form.
Thecombinators in this form may arise from the CCGschema, i.e., the compositor B, and the substitutorS (Steedman, 1987).
They may also be projectedfrom the PAS of a lexical item, such as the dupli-cator W (with the reduction rule Wfa>faa) for re-n+l flexives, and B C for predicate composition withthe causative suffix.
For instance, the combinatoryform for (13a) is the expression (13b).
(13) a. Adam Cocu~,-a kitab-tman.NOM child-DAT book-ACC:m t :c' :Uoku-t-turead-CAUS-PAST:B3CAUSCr ''The man had the child read the book.'b.
T.m'-(B.
(T.b' ).
(T.c' ).
(B3.CAUSE.C.r ' )) --171~m IA AB T c'T tB~'~"c  AUs EAlthough B works in a binary manner in CCGto achieve abstraction, it requires 3 arguments forfull evaluation (its order is 3).
Revealing the PASamounts to stripping off all combinators from thecombinatory form by evaluating the reducible x-pressions (redexes).
Bfg is not a redex but Bfga is.In other words, the derivations by the parser mustsaturate the combinators in order to reveal the PAS,which should contain no combinators.
PAS is thesemantic normal form of a derivation.The sequence of evaluation is the normal or-der, which corresponds to reducing the leftmost-outermost redex first (Peyton Jones, 1987).
In tree-theoretic terms, this is depth-first reduction of thecombinator t ee in which the rearrangement is con-trolled by the reduction rule of the leftmost com-binator, e.g., Tin' X>_Xm' where X is the paren-thesized subexpression i (13b).
Reduction by Tyields:AB T c' O/ "~,  B~CAUSE TFurther eductions eventually reveal the PAS:B.
(T.b' )-(T-d ).
(Ba-CAUSE.C.r ' ).m' >_T.b' .
(T.d .
(Ba.CAUSE'C'r ' )).m' >_T-d. (B 3"CAUSE'G'r' )'b' -rrfl >_(1)(2)(3)Ba.CAUSE.C.r ' "d .b' .m' >_ (4)CAUSE.
(C.r' .d .b' ).m' > (5)CAUSE-(r' .b' .d ).m' (6)By the second Church-Rosser theorem, normalorder evaluation will terminate if the combinatoryform has a normal form.
But Combinatory Logichas the same power as A-calculus, and suffersfrom the same undecidability results.
For instance,WWW has no normal form because the reductionswill never terminate.
Some terminating reductions,such as Glib>N, has no normal form either.
It isan open question as to whether such forms can beprojected from a natural language lexicon.
In an ex-pression X.Y where X is not a redex, the evalua-tor recursively evaluates to reduce as much as pos-sible because X may contain other edexes, as in (5)above.
Recursion is terminated either by obtainingthe normal form, as in (6) above, or by equivalencecheck.
For instance, (G.(I.a).b).Y recurses on theleft subexpression to obtain (G,a-b) then gives upon this subexpression since the evaluator returns thesame expression without further evaluation.5 Conc lus ionIf an ordered representation f the PAS is assumedas many theories do nowadays, its derivation fromthe surface string requires that the category assign-ment for case cues be rich enough in word orderand grammatical function information to correctlyplace the arguments in the PAS.
This work showsthat these categories and their types can be uniquelycharacterized in the lexicon and tightly controlled inparsing.
Spurious ambiguity problem is kept undercontrol by normal form parsing on the syntactic sidewith the use of labelled categories in the grammar.Thus, the PAS of a derivation can be determineduniquely even in the presence of type shifting.
Thesame strategy can account for deriving the PAS inunbounded constructions and non-constituent coor-dination (Bozsahin, 1997).Parser's output (the combinatory form) is reducedto a PAS by normal order evaluation.
Model-theoretic interpretation can proceed in parallel withderivations, or as a post-evaluation stage whichtakes the PAS as input.
Quantification and scram-bling in free word order languages interact in manyways, and future work will concentrate on this as-pect of semantics.172ReferencesAlex Alsina.
1996.
The Role of Argument Structurein Grammar.
CSLI, Stanford, CA.Cem Bozsahin and Elvan Gocmen.
1995.
A cate-gorial framework for composition i multiple lin-guistic domains.
In Proceedings ofthe Fourth In-ternational Conference on Cognitive Science ofNLP, Dublin.Cem Bozsahin.
1997.
Grammatical functions andword order in Combinatory Grammar.
ms.Joan Bresnan and Jonni M. Kanerva.
1989.
Loca-tive inversion in Chichewa: A case study of fac-torization in grammar.
Linguistic Inquiry, 20:1-50.Jonathan Calder, Ewan Klein, and Henk Zeevat.1988.
Unification categorial grammar.
In Pro-ceedings of the 12th International Conference onComputational Linguistics, Budapest.Haskell B. Curry and Robert Feys.
1958.
Combina-tory Logic L North-Holland, Amsterdam.David Dowty.
1988.
Type raising, functional com-position, and non-constituent conjunction.
InRichard T. Oehrle, Emmon Bach, and DeirdreWheeler, editors, Categorial Grammars and Nat-ural Language Structures.
D Reidel, Dordrecht.Jason Eisner.
1996.
Efficient normal-form pars-ing for combinatory categorial grammar.
In Pro-ceedings of the 34th Annual Meeting of the ACL,pages 79-86.Jane Grimshaw.
1990.
Argument Structure.
MITPress, Cambridge, MA.Mark Hepple and Glyn Morrill.
1989.
Parsing andderivational equivalence.
In Proceedings of the4th EACL, Manchester.Beryl Hoffman.
1995.
The Computational Anal-ysis of the Syntax and Interpretation f "Free"Word Order in Turkish.
Ph.D. thesis, Universityof Pennsylvania.Lauri Karttunen.
1989.
Radical lexicalism.
InMark Baltin and Anthony Kroch, editors, Alter-native Conceptions ofPhrase Structure.
ChicagoUniversity Press.Simon L. Peyton Jones.
1987.
The Implementationof Functional Programing Languages.
Prentice-Hall, New York.Sebastian Shaumyan.
1987.
A Semiotic Theory ofLanguage.
Indiana University Press.Mark Steedman.
1987.
Combinatory grammarsand parasitic gaps.
Natural Language and Lin-guistic Theory, 5:403-439.Mark Steedman.
1988.
Combinators and gram-mars.
In Richard T. Oehrle, Emmon Bach, andDeirdre Wheeler, editors, Categorial Grammarsand Natural Language Structures.
D. Reidel,Dordrecht.Mark Steedman.
1990.
Gapping as constituent co-ordination.
Linguistics and Philosophy, 13:207-263.Mark Steedman.
1996.
Surface Structure and In-terpretation.
MIT Press, Cambridge, MA.K.
Vijay-Shanker and David J. Weir.
1993.
Parsingsome constrained grammar formalisms.
Compu-tational Linguistics, 19:591--636.Stephen Wechsler.
1995.
The Semantic Basis of Ar-gument Structure.
CSLI, Stanford, CA.Kent Wittenburg.
1987.
Predictive combinators.
InProceedings of the 25th Annual Meeting of theACL, pages 73-79.173
