Proceedings of the Workshop on BioNLP: Shared Task, pages 107?110,Boulder, Colorado, June 2009. c?2009 Association for Computational LinguisticsA Multi-Phase Approach to Biomedical Event ExtractionHyoung-Gyu Lee, Han-Cheol Cho, Min-Jeong KimJoo-Young Lee, Gumwon Hong, Hae-Chang RimDepartment of Computer and Radio Communications EngineeringKorea UniversitySeoul, South Korea{hglee,hccho,mjkim,jylee,gwhong,rim}@nlp.korea.ac.krAbstractIn this paper, we propose a system for biomed-ical event extraction using multi-phase ap-proach.
It consists of event trigger detector,event type classifier, and relation recognizerand event compositor.
The system firstly iden-tifies triggers in a given sentence.
Then, itclassifies the triggers into one of nine pre-defined classes.
Lastly, the system examineseach trigger whether it has a relation withparticipant candidates, and composites eventswith the extracted relations.
The official scoreof the proposed system recorded 61.65 preci-sion, 9.40 recall and 16.31 f-score in approxi-mate span matching.
However, we found thatthe threshold tuning for the third phase hadnegative effect.
Without the threshold tuning,the system showed 55.32 precision, 16.18 re-call and 25.04 f-score.1 IntroductionAs the volume of biomedical literature grows expo-nentially, new biomedical terms and their relationsare also generated.
However, it is still not easy forresearchers to access necessary information quicklysince it is lost within large volumes of text.
This isthe reason that the study of information extractionis receiving the attention of biomedical and naturallanguage processing (NLP) researchers today.In the shared task, the organizers provide partic-ipants with raw biomedical text, tagged biomedicalterms (proteins), and the analyzed data with variousNLP techniques such as tokenization, POS-tagging,phrase structure and dependency parsing and so on.The expected results are the events, which exist inthe given text, consisting of a trigger and its partici-pant(s) (Kim et al, 2009).The proposed system consists of three phases;event trigger detection phase(TD phase), event typeclassification phase(TC phase), relation recognitionand event composition phase(RE phase).
It works inthe following manner.
Firstly, it identifies triggers ofa given biomedical sentence.
Then, it classifies trig-gers into nine pre-defined classes.
Lastly, the sys-tem finds the relations between triggers and partic-ipant candidates by examining each trigger whetherit has relations with participant candidates, and com-posites events with the extracted relations.
In thelast phase, multiple relations of the same triggercan be combined into an event for Binding eventtype.
In addition, multiple relations can be com-bined and their participant types can be classifiedinto not only theme but also cause for three Regu-lation event types.In this paper, we mainly use dependency pars-ing information of the analyzed data because sev-eral previous studies for SRL have improved theirperformance by using features extracted from thisinformation (Hacioglu, 2004; Tsai et al, 2006).In the experimental results, the proposed systemshowed 68.46 f-score in TD phase, 85.20 accuracyin TC phase, 89.91 f-score in the initial step of REphase and 81.24 f-score in the iterative step of REphase, but officially achieved 61.65 precision, 9.40recall and 16.31 f-score in approximate span match-ing.
These figures were the lowest among twenty-four shared-task participants.
However, we foundthat the threshold tuning for RE phase had causeda negative effect.
It deteriorates the f-score of the107Event Trigger DetectorEvent Type ClassifierRelation Recognizer &Event CompositorInitial StepIterative StepSource DataAnalyzed DataResult of Event ExtractionFigure 1: System Architectureproposed system by enlarging the gap between pre-cision and recall.
With the default threshold, the sys-tem showed better result in the final test data, 55.32precision, 16.18 recall and 25.04 f-score with therank 17th among 24 teams.2 System DescriptionFigure 1 shows our bio-event extraction systemwhich consists of Event Trigger Detector, EventType Classifier and Relation Recognizer & EventCompositor.
Each component includes single ormultiple Maximum Entropy models trained by goldannotation data.
The inputs of the system are sourcedata and analyzed data.
The former is raw text withentity annotation, and the latter is tokenized, POStagged and parsed data of the raw text.1Because the event type is useful to recognize therelation, we perform TC phase before RE phase.One of important characteristics of bio-event isthat one event as well as a protein may participatein another event.
Considering this, we designed thesystem in which the Relation Recognizer be per-formed through two steps.
In the initial step, the sys-tems examines each trigger whether it has the rela-tions with only proteins, and composites events withrecognized relations.
In the iterative step, it repeat-edly examines remained triggers in the same man-1We used the GDep result provided by organizers of theshared task as analyzed data.ner.
This step allows the system to extract chain-style events, which means that one event participatesin another one and the other participates in the for-mer.To increase the f-score, we tuned a threshold forRE phase which is a binary classification task; de-ciding whether a given relation candidate is correctone or not.
When the output probability of a maxi-mum entropy model is lower than the threshold, wediscard a relation candidate.2.1 Event Trigger DetectionWe assume that an event trigger is a single word.In other words, we do not consider the multi-wordtrigger detection.
Because the trigger statistic inthe training data showed that about 93% of triggersare single word, we concentrated on the single wordtrigger detection.This phase is simply defined as the task that clas-sify whether each token is a trigger or not in a doc-ument.
It is necessary to select targets to classifyamong all tokens, because a set of all tokens includestoo many negative examples.
For this, the follow-ing filtering rules are applied to each token.
Thoughthese rules filtered out 69.5% of tokens, the triggerrecall was 94.8%.?
Filter out tokens whose POS tag is not matchedto anything among NN, NNS, VB, VBD, VBG,VBN, VBP, VBZ, JJ and JJR.?
Filter out tokens that are a biomedical namedentity.?
Filter out sentences that do not have any pro-teins.Proposed features for the binary classification oftokens include both features similar to those used in(Hacioglu, 2004; Tsai et al, 2006; Ahn, 2006) andnovel ones.
The selected feature set is showed inTable 1.2.2 Event Type ClassificationIn TC phase, tokens recognized as trigger are clas-sified into nine pre-defined classes.
Although morethan a dozen features had been tested, the featuresexcept word and lemma features hardly contributedto the performance improvement.
The tuned featureset is showed in Table 2.108Word level features- Token word- Token lemma- Token POS- POSs of previous two tokens- Distance, word and POS of the nearest protein- Positional independence: Whether a noun or averb is adjacent to the current tokenDependency level features- Dependency label path of the nearest protein- The existence of protein in family: This feature ismotivated by the study in (Hacioglu, 2004)- A boolean feature which is true if token?s child isa proposition and the chunk of the child include aprotein- A boolean feature which is true if token?s child isa protein and its dependency label is OBJTable 1: Features for event trigger detectionFeatures for the event type classification- Trigger word- Trigger lemma- A boolean feature which is true if a protein existswithin left and right two wordsTable 2: Features for event type classificationWe found that TC phase showed relatively highprecision and recall with simple lexical features inthe experiment.
However, it was quite difficult tofind additional features that could improve the per-formance.2.3 Relation Recognition and EventCompositionIn the last phase, the system examines each triggerwhether it has relations with participant candidates,and composites events with the extracted relations.
(A relation consists of one trigger and one partici-pant)We devised a two-step process, consisting of ini-tial and iterative steps, because a participant candi-date can be a protein or an event.
In the initial step,the system finds relations between triggers and pro-tein participant candidates.
Features are explainedin Table 3.
Then, it generates one event with onerelation for event types that have only one partici-pant.
For Binding event type, the system combinesat most three relations of the same trigger into oneWord level features- Trigger word- Trigger lemma- Trigger type (I-1)- Entity word- Entity type (I-2)- Word sequence between T&P (I-1)- Word distance- Existence of another trigger between T&P- The number of triggers of above feature- Existence of another participant candidate- The number of participants of above featureDependency level features- Trigger dependency label (I-1)- Entity dependency label- Lemma of trigger?s head word (I-1)- POS of trigger?s head word- Lemma of entity?s head word (I-1)- POS of entity?s head word- Lemma of trigger?s head word + Lemma of en-tity?s head word- Right lemma of trigger?s head word- 2nd right lemma of trigger?s head word (I-1)- Right lemma of entity?s head word- 2nd right lemma of entity?s head word (I-1)- Dependency path between T&P- Dependency distance between T&P- Direct descendant: a participant candidate is a di-rect descendant of a given triggerTable 3: Features for relation recognition between a trig-ger and a participant (T&P)event.
For Regulation event types, we trained a bi-nary classifier to classify participants of a Regulationevent into theme or cause.
Features for participanttype classification is explained in Table 4.
Amongmultiple participants of a Regulation event, only twoparticipants having highest probabilities for themeand cause constitute one event.In the iterative step, the system finds relations be-tween triggers and event participant candidates thatwere extracted in the previous step, and generatesevents in the same manner.
The system performs it-erative steps three times to find chain events.Features are basically common in the initial (I-1)step and the iterative (I-2) step, but some featuresimprove the performance only in one step.
In orderto represent the difference in Table 3, we indicate (I-1) when a feature is used in the initial step only, andindicate (I-2) when it used in the iterative step only.109Word level features- Trigger word- Trigger lemma- Participant words - event?s trigger words if a par-ticipant is an event- Left lemma of a participant- Right lemma of a participant- Trigger word + Participant words- Trigger lemma + Participant lemmas- Participant lemmas- Right lemma of a trigger- 2nd right lemma of a trigger- Right lemma of a participant- 2nd left lemma of a participantDependency level features- Dependency path- Dependency relation to trigger?s head- Dependency relation to participant?s head- POS pattern of common head chunk of a triggerand a participant- POS pattern of common head chunk of a triggerand a participant + The presence of an object wordin dependency pathTable 4: Features of the participant type classifier forRegulation events3 Experimental ResultTable 5 shows the official results of the final testdata.
After the feature selection, we have performedthe experiments with the development data to tunethe threshold to be used in RE phase.
The work im-proved the performance slightly.
The new thresh-old discovered by the work was 0.65 rather thanthe default value, 0.5.
However, we found that thetuned threshold was over-fitted to development data.When we tested without any threshold change, theproposed system showed better f-score by reducingthe gap between precision and recall.
Table 6 showsthe performance in this case.Nevertheless, recall is still quite lower than preci-sion in Table 6.
The reason is that many triggers arenot detected in TD phase.
The recall of the triggerdetector was 63% with the development data.
An-alyzing errors of TD phase, we found that the sys-tem missed terms such as role, prevent while it easilydetected bio-terms such as phosphorylation, regula-tion.
It implies that the word feature causes not onlyhigh precision but also low recall in TD phase.Event equality recall precision f-scoreStrict 8.99 58.97 15.60Approximate Span 9.40 61.65 16.31Table 5: The official results with threshold tuningEvent equality recall precision f-scoreStrict 15.46 52.85 23.92Approximate Span 16.18 55.32 25.04Table 6: The results without threshold tuning4 ConclusionIn this paper, we have presented a biomedicalevent extraction system consisting of trigger detec-tor, event type classifier and two-step participant rec-ognizer.
The system uses dependency parsing andpredicate argument information as main sources forfeature extraction.For future work, we would like to increase theperformance of TD phase by adopting two-stepmethod similar to RE phase.
We also will exploitmore analyzed data such as phrase structure parsinginformation to improve the performance.ReferencesKadri Hacioglu.
2004.
Semantic Role Labeling UsingDependency Trees.
In Proceedings of COLING-2004,Geneva, Switzerland.Richard Tzong-Han Tsai, Wen-Chi Chou, Yu-Chun Lin,Cheng-Lung Sung, Wei Ku, Ying-shan Su, Ting-YiSung and Wen-Lian Hsu.
2006.
BIOSMILE: Adapt-ing Semantic Role Labeling for Biomedical Verbs: AnExponential Model Coupled with Automatically Gen-erated Template Features.
In Proceedings of BioNLP-2006.Mihai Surdeanu, Sanda Harabagiu, John Williams andPaul Aarseth.
2003.
Using Predicate-Argument Struc-tures for Information Extraction.
In Proceedings ofACL-2003, Sapporo, Japan.David Ahn.
2006.
The stages of event extraction.
In Pro-ceedings of Workshop On Annotating And ReasoningAbout Time And Events.Jin-Dong Kim, Tomoko Ohta, Sampo Pyysalo, Yoshi-nobu Kano and Jun?ichi Tsujii.
2009.
Overviewof BioNLP?09 Shared Task on Event Extraction.In Proceedings of Natural Language Processing inBiomedicine (BioNLP) NAACL 2009 Workshop.110
