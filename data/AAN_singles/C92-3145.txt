A Freely Available Wide Coverage Morphological Analyzer for English*Daniel Karp 1, Yves Schabes, Martin Zaidel, and Dania EgediDepar tment  of  Computer  and  In format ion  Sc ienceUn ivers i ty  of  Pennsy lvan iaPh i lade lph ia  PA  19104-6389 USAdkarp/schabes/zaidel/egedi?cis, upenn, eduAbstractThis paper presents a morphological lexicon for Englishthat handle more than 317000 inflected forms derivedfrom over 90000 stems.
The lexicon is available in twoformats.
The first can be used by an implementation fa two-level processor for morphological nalysis (Kart-tunen and Wittenhurg, 1983; Antworth, 1990).
Thesecond, derived from the first one for efficiency rea-sons, consists of a disk-based atabase using a UNIXhash table facility (Seltzer and Yigit, 1991).
We alsobuilt an X Window tool to facilitate the maintenanceand browsing of the lexicon.
The package is ready tobe integrated into an natural anguage application suchas a parser through hooks written in Lisp and C.To our knowledge, this package is the only availablefree English morphological nalyzer with very wide cov-erage.attributes.
To improve performance, we used PC-KIMMO as a generator on our lexicons to build a disk-based hashed database with a UNIX database facility(Seltzer and Yigit, 1991).
Both formats, PC-KIMMOand database, are now available for distribution.
Wealso provide an X Window tool for the database to fa-cilitate maintenance and access.
Each format containsthe morphological information for over 317000 Englishwords.
The morphological database for English runsunder UNIX; PC-KIMMO runs under UNIX and on aPC.This package can be easily embedded into a naturallanguage parser; hooks for accessing the morphologicaldatabase from a parser are provided for both LucidCommon Lisp and C. This morphological database iscurrently being used in a graphical workbench (XTAG)for the development of tree-adjoining rammars andtheir parsers (Paroubek et al, 1992).1 IntroductionMorphological analysis has experienced great suc-cess since the introduction of two-level morphology(Koskenniemi, 1983; Karttunen, 1983).
Two-level mor-phology and its implementation are now well under-stood both linguistically and eomputationany (Kart-tunen, 1983; Karttunen and Wittenburg, 1983; Kosken-niemi, 1985; Barton et al, 1987; Koskenniemi andChurch, 1988).
This computational model has provedto be well suited for many languages.
Although thereare some proprietary wide coverage morphological n-alyzers for English, to our knowledge those that arefreely available provide only very small coverage.Working from the 1979 edition of the Collins Dic-tionary of the English Language available throughACL-DCI (Liberman, 1989), we constructed lexiconsfor PC-KIMMO (Antworth, 1990), a public domainimplementation of a two-level processor.
Using themorphological rules for English inflections providedby Karttunen and Wittenburg (1983) and our lexicons,PC-KIMMO outputs all possible analyses of each in-put word, giving its root form and its inflectional*This work was partially supported by DARPA Grant N0014-90-31863, ARO Grant DAAL03-89-C-0031, and NSF GrantIPd90-16592.
We thank Aravind Joshl for his support for thiswork.
We also thank Evan Antworth, Mark Fo~ter, Laur~ Kart-tunen, Mark Liberman, and Annie Zaenen for their help andsuggestions.
?Visiting from Stanford University.2 Lexicons for PC-K IMMOWe used the set of morphological rules for Englishdescribed by Karttunen and Wittenburg (1983).
Therules handle the following phenomena ( mong others1):epenthesis, y to i correspondences, s-deletion, elision, ito y correspondences, gemination, and hyphenation.
Inaddition to the set of rules, PC-KIMMO requires lexi-cons.
We derived PC-KIMMO-style lexicons from the1979 edition of the Collins Dictionary of the EnglishLanguage.
The 90000-odd roots ~ in the lexicon yieldover 317000 inflected forms.The lexicons use the following parts of speech: verbs(V), pronoun (Pron), preposition (Prep), noun (N), de-terminer (D), conjunction (Conj), adverb (Adv), andadjective (A).
Figure 1 shows the distribution of theseparts of speech ill the two formats: The first column isthe distribution of the root forms in the PC-KIMMOlexicon files, and the second column is tile distribu-tion for the inflected forms derived from the lexiconsand stored in the database.
For each word, the lexiconlists its lexical form, a continuation class, and a parse.The continuation class specifies which inflections thelexical form can undergo.
At most, a noun root engen-ders four inflections (singular, plural, singular genitive,plural genitive); an adjective root, three (base, com-lWe refer the render to Karttunen and Wittenburg (1983) orAntworth (1990) for more details on the morphological rule~.2Proper nouns were not included in the tables.AcrEs DE COLING-92.
NANTES.
23-28 AOt)r 1992 9 5 0 Paoc.
oF COLING-92.
NArcr~s.
AUG. 23-28.
1992parative, superlative); and a verb root, five (infinitive,third-person singular present, simple past, past partici-ple, progressive).
The exact number generated by anygiven root depends on its continuation class.PronounPrepositionDeterminerConjunctionAdverbNounAdjectiveVerb# Root Forms9214810O646992503702055011880TOTAL 90196# Inflected Forms931501006471761993036514645445317477Figure 1: Size of the PC-KIMMO Lexicons.2.1 Ad jec t ivesTtle continuation classes for adjective specify that theword can undergo the rules of comparative and superla-tive.
For example, the lexicon entry for the adjective'funky' is:funky A-Root2 "A (~unky)"The entry consists of a word ~unky, followed by thecontinuation class hA~oot2, and a parse "A(fuaky)".The continuation class specifies that the word can un-dergo the normal rules of comparative and superlative,and the parse states that the word is an adjective withroot 'funky'.
The following is a sample run of PC-KIMMO's recognizer:recognizer>>funkyfunky A(funky)recognizer>>funkierfunky+er A(funky) COMPrecognizer>>funkiestfunky+est A(funky) SUPERThe output line contains the root tbrm and any af-fixes, separated by '+'s.
Thus, a '+ '  in the output indi-cates a morphological rule was used; its absence meansno rule was used, and the parse was returned as foundin the lexicon.
PC-KIMMO will antomatically add at-tributes uch as COKP and SUPER to the parse, depend-ing on the morphological rule matched by the surfaceform.
But for irregularly inflected forms, special con-tinuation classes indicate that tbc complete parse (viz.,part of speech, root, mid attributes) should be taken'as is' from the lexicon entry.
For example:better A-Root I " l (good)  COMP"beat A..Root; 1 "A (good) SUPFAt"good A-Root I "A(good)"Tile class A-Root1 tells PC-KIMMO not to applythe morphological rules to 'better', 'best', and 'good'.Thus, 'gooder' is not recognized as 'goodTcr'.recognizeC;~bestbest N(best) SGbest A(good) SUPERbest Adv(beet)recognizer>>goodgood N(good) SGgood A(good)recognizer>>betterbetter N(better) SGbetter A(good) COMPbetter V(better) INFbetter Adv(better)recognizer>>gooder*** NONE ***recognizer>>goodest*** NONE ***The attributes (such as COl,~') can later be translatedinto feature structures with the help of templates as inPATR (Shieber, 1986).
The list of attributes is foundin Appendix A.2 .2  NounsInflections of nouns, such as the formation of plural andgenitive, are handled by morphological rules (unless theformation is idiosyncratic).
In the lexicon for nouns,the continuation class I i~oot t  indicates that the for-mation of genitive applies regularly and that no otherinflection applies.
The continuation class IIAtoot2 in-dicates that the formation of the plural and of the gen-itive apply regularly.mice N-Root 1 "N (mouse) PL"mouse W_Root t "N(mouae) SG"ambassador ~-Root2 "I (ambassador)"" Thus, the above lexicon entries are recognized as be-low:recognizer>>micemice N(mouse) PLrecognizer>>mousemouse N(mouse) S(;V(mouse) INF mouserecognlzer>>mousesmouse+s V(mouse) 3SG PRESrecogmzer>>mice'smice+'s N(mouse) PL GENrecognlzer>>mouses'*** NONE ***recognlzer~:~mouse'srnouse+'s N(mouse) SG GENrecognizer>>a mbassadorsambassador+s N(arnbassador) PLr ecognlzer>>ambassador'sambassador+'s N(ambassador) SG GENr ecognizer>>ambassadors'ambassador+s+'s N(ambassador) PL GEN2.3  VerbsGiven the infinitive form of a verb, the formation ofthe third person singular (+s), its past tense (+ed), itspast participle (+ed), and its progressive form (+ing) isAcrEs DE COLING-92.
NANIES, 23-28 Aotrr 1992 9 $ l PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992handled by morphological rules unless lexical idiosyn-crasies apply.
In order to encode all possible idiosyn-crasies over the three verb endings, eight continuationclasses are defined (see Figure 2).
Each continuationclass specifies the inflectional rules which can apply tothe given lexical item.Continuation classV_RootlV.Root2V_Root3V_Root4V_Root5V_Root6V_Root7V_Root8Applicable rulesnone+ed+s+s, +ed+ing+ing, +ed+ing, +s+in~, +s, +edFigure 2: Continuation classes for verbsExamples of lexical entries for verbs follow:admire V~oot8 "V(admire)"dyeing V_Roo1:1 "V(dye) PROG"dye V_~oot4 "V(dye)"zigza~ing V-Root I "V(zigzag) PROG"z igzagged V-Root1 "V(zigzag) PAST WE"zigzagged V_Rootl "V(zigzag) PPART WE"z igzag V_Root3 "V(zigzag)"tangoes V_P.oot;1 "V(tango) 3SG PRES"t;amgo V_Root6 "V(tango)"taught V_Rootl "V(teaeh) PAST STR ?
'taught  V..Rootl "V(taach) PPART STR"teach V-Root7 "V(teach)"Examples of runs follow:recognizer>>admiresadmireTs V(admire) 3SG PRESrecognizer>>admiredadmire+ed V(admire) PAST WKadmire-Fed V(admire) PPART WKrecognizeC;~admiringadrnire+ing V(admire) PROGrecognizer>admireadmire V(admire) INFrecognizer>>dyeddyeTed V(dye) PAST WKdye+ed V(dye) PPART WKrecognizer>>dyesdye+s N(dye) PLdyeTs V(dye) 3SG PRESrecognlzer>>teachesteach+s V(teach) 3SG PRESrecognizer>>teached*** NONE ***recoguizer>>taughttaught V(teach) PAST STRtaught V(teach) PPART STRrecognizer:;~tangoedtango+ed V(tango) PAST WKtangoTed V(tango) PPART WKrecognizer~tangoingtango+ing V(tango) PROGrecognizer~tangoestangoes V(tango) 3SG PRESThe attributes WE (for "weak") and STR (for"strong") mark whether the verb forms its past tenseregularly or irregularly, respectively.
The distinctionenables unambiguous reference to homographs--wordsspelled identically but with different semantic and syn-tactic properties.
For example, the verb 'lie' with themeaning 'to make an untrue statement' and the verb'lie' with the meaning 'to be prostrate' have differentsyntactic and morphological behavior: the first one isregular, while the second one is irregular:He has lain on the floor.He has lied about; everything.Usually, it suffices to index the syntactic properties ofeach verb by its root form alone.
However, homographsrequire addition information.
In English, the attributesWE and STR are sufficient to distinguish omographswith different morphological behavior.recognizer>>liedlied N(lied) SGlie+ed V(lie) PAST WKlie+ed V(lie) PPART WKrecognizer>lainlain V(lie) PPART STRrecognizer>>laylay V(lay) INFlay V(lie) PAST STR2.4 Other  Par ts  o f  SpeechPronouns, prepositions, determiners, conjunctions, andadverbs are given continuation classes that inhibit theapplication of morphological rules.
All of the morpho-logical informatiou is stored in tile parse in the lexiconentry:herself Pron "Pron(herself) REFL FEN 3SG"i t  Pron "Pron(it) NEUT 3SG NOMACC"behind Prep "Prep(behind)"coolly Adv "Adv (coolly)"PC-KIMMO recognizes them as follows:recognlzer>>herselfherself Pron(herself) REFL FEM 3SGrecognizer>itit NOt ) 5Git Pron(it) NEUT 3SG NOMACCrecognizer>>behindbehind N(behind) SGbehind Adv(behind)behind Prep(behind)recognlzer>>coollycoolly Adv(coolly)3 Lex icons  as  a DatabasePC-KIMMO builds in memory a data structure fromthe complete lexicon.
Consequently, our large lexiconsoccupy more than 19 Mbytes of process memory.
Fur-ther, the large size of the structure implies long searchtimes as PC-KIMMO swaps pages in and out.Thus, to solve both the time and space problemssimultaneously, we compiled all inflectional forms intoAUtT.S DE COI.\]NG-92, NANTES, 23-28 AOt~" 1992 9 5 2 PRoc.
OF COLING-92, NANTES, AUG. 23-28, 1992a disk-based atabase using a UNIX hash table facility(Seltzer and Yigit, 1991).To compile the database, we used PC-K1MMO asa generator, inputting each root form and all the end-ings that it could take, as indicated by the continuationclass.
The resulting inflected form became thc key, andthe associated morphological information was then in-serted into the database.For example, the PC-KIMMO lexicon file containsthe entry:sa,~ if_Root 2 "II (saw)"The class LRoot2 indicates that tire noun 'saw' formsits plural, singular genitive, and plural genitive reg-ularly.
Thus, we send to the generator three lexiealforms and the three suffixes for each infleetiou, extract-ing three inflected surface forms:Lexical ea~+s sav+'s  sav+s+'sSur face  saws  saw ~ s saws  JThe root form of a noun is identical with the sin-gular iuflection, so we have a total of four inflectedforn~s.
Since we know which suffix we added to tberoot, we also know the attributes for that inflection.The inflected form becomes the key, while tile part ofspeech, root, and attributes are stored as the contentin tire database.
Hence, the lexicon entry for the noun'saw' produces four key-content pairs in tbe database:Csaw, saw N SG), (saws, saw II PL), (saw's, sawl\[ SG GEl\[), (saws ~ , saw l\[ PL GEN).Likewise, the verb lexicon contains the entries:salt V_Root 8 "V(saw)"saw V_Roo~l "vCsee) PAST STR"The continuation class VAtoot8 indicates fonr inflec-tions besides the infinitive: third-person singular (+s),past (+ed), weak past participle (Ted), and presentparticiple (+ing).
Hence, the generator produces:Lexical sal~+s saw+ed saw+ingSur face  saws sawed sawingThe class V_Rootl allows no irdlections, butbuilds tire inflection-feature pair directly: (sav,  seaV PAST STR).Ilence, morphological aualysis is rednced to sendingthe surface forms to the database as keys arid retriev-ing thc returned strings.
Figure 3 lists the databasekeys and content strings produced by the three lexiconlines given above.
Note that distinct entries are sep-arated by '#'.
Since multiple lexical forms can mapto the same surface form, the actual number of keys(ca.
292000) is less than the number of lexical forms(ca.
317000).
Also, with the database residing on thedisk, access times average fi to I0 milliseconds, whichgreatly improves upon PC-K IMMO.3.1  Imp lementat ion  Cons iderat ionsThc large number of keys implies a very large diskfile.
"Ib reduce the size of the file, we take advantageof tire morphological similarity in English between aninflected form and its lexical root form.
Indeed, theroot is often contained intact within the inflected form.Kcy~ontentssaw N SG#saw V INF#see V PAST STRsaw N PL#saw V 3SG PRESsaw N SG GENsaw V PROGsaw V PAST WK#saw V PPART WKsaw N PL GENFigure 3: Database pairsllence, instead of storing the root, we store the numberof shared characters along with any differing charac-ters, and reassemble tile root front the inflected formon each database query.
Further, despite tire large setof attributes, relatively few combinations (ca.
80) aremeaningful, and can be encoded in a single byte.
Sincea large proportion of roots are wholly contained withintire surface form, and since 92% of the keys llave onelexical entry, the average content string is only threebytes long.
Consequently, the total disk file is under9Mbytes.
We anticipate further compaction i the nearfuture.3.2 Accompanying UtilitiesBesides the PC-KIMMO lexicons, we currently main-tain the database file and an ASCII-character "flat"version for on-line database browsing.
One programconverts the lexicons into the database format, whileothers dump the database into the flat file or recon-struct tl~e database from the flat file.
We have alsobuilt a X Windows tool to perform maintenance onthe database file (see Figure 4).
This tool automat-ically maintains the consistency between the flat fileand the database file.
We have built hooks in C andLisp (Lucid 4.0) to access either the database or PC-K1MMO from within a running process.~:  I~  I I v.,~Re~: ~ Pre.ounV PI~T STRkamer V P l~r  SIR I~aJum.U~r -  IFigure 4: Morphological Database X Window qbol4 Obtaining the AnalyzerThe PCoKIMMO lexicons, the database files, ttle LISPmtd C access functions, programs for converting be-tween formats, and the X Window maintenance tool areACl .T~s DE COLING-92, NAntEs, 23-28 AOt~l" 1992 9 5 3 l'aoc.
Ol: COLING-92, NANTES, AUG. 23-28, 1992available without charge for research purposes.
Pleasesend e-mall to za ide l l | c ia .npann,  adn or write to ei-ther Yves Sehabas, Martin Zaidel, or Dania Egedi.5 Conc lus ionWe have presented freely available morphological ta-bles and a morphological nalyzer to handle Englishinflections.
The tables handle approximately 317000inflected forms corresponding to 90000 steins.These tables can be used by an implementation f atwo-level processor for morphological nalysis uch asPC-KIMMO.However, these large tables degrade the performanceof PC-KIMMO's current implementation, requiringabout 18 Mbytes of RAM while slowing the access time.To overcome these shortcomings, we created a mor-phological analyzer consisting of a disk-based atabaseusing a UNIX hash table facility.
With this database,access times average 6 to 10 milliseconds while movingall of the data to the disk.
We also provide an X Win-dow tool for facilitating the maintenance and access tothe database.The package is ready to be integrated into an appli-cation such as a parser.
Hooks written in Lisp and Cfor accessing these tables are provided.To our knowledge, this package is the only availablefree English morphological nalyzer with very wide cov-erage.BibliographyEvan L. Antworth.
1990.
PC-KIMMO: a two-levelpro-cessor for morphological nalysis.
Summer Instituteof Linguistics.G.
Edward Barton, Robert C. Berwick, and Eric SvenRistad.
1987.
Computational Complexity and Natu-ral Language.
MIT Press.Lanri Karttunen and Kent Wittenburg.
1983.
A two-level morphological nalysis of English.
Texas Lin-guistic Forum, 22:217-228.Lauri Karttunen.
1983.
KIMMO: A two-level morpho-logical analyzer.
Texas Linguistic Forum, 22:165-186.Kirmno Koskenniemi.
1983.
Two-level morphology: ageneral computational model for word-form recogni-tion and production.
Technical report, University ofHelsinki, Itelsinki, Finland.Kimmo Koskenniemi.
1985.
An application of the two-level model to Finnish.
In Fred Karlsson, editor,Computational Morphosyntax: Report on Research1981-1984.
University of Belsiuki.Kiramo Koskenniemi and Kenneth W. Church.
1988.Complexity, two-level morphology and Finnish.
InProceedings of the 12 th International Conference onComputational Linguistics (COLING'88).Mark Liberman.
1989.
Text on tap: the ACL data col-lection initiative.
In Proceedings of DARPA Work-shop on Speech and Natural Language Processing,pages 173-188.
Morgan Kaufman.Patrick Paroubek, Yves Schabes, and Aravind K. Joshi.1992.
XTAG - a graphical workbench for developingtree-adjoining grammars.
In Third Conference onApplied Natural Language Processing, Trento, Italy.Margot Seltzer and Ozan Yigit.
Winter 1991.
A newhashing package for UNIX.
In USENIX.Stuart M. Shieber, 1986.
An Introduction to Unifi-cation-Based Approaches to Grammar.
Center forthe Study of Language and Information, Stanford,CA.A List o f  Attributes1SG 1st person singular2SG 2nd person singular3SG 3rd person singular1PL 1st person plural2PL 2nd person plural3PL 3rd person singular2ND 2nd person3RD 3rd personSG singularPL pluralPROG progressivePAST past tensePPART past participleINF infinitive or present (not 3rd person)PRES presentSTR strongly inflected verbWK weakly inflected verbGEN genitive (+ 's)NOM nominative caseACC accusative caseNOMACC nominative or accusative caseNEG negationPASSIVE passive form (for "born")to contracted form verb + toCOMP comparativeSUPER superlativeMASC masculineFEM feminineNEUT neuterWH wh-wordREFL reflexiveREF1SG 1st person singular referentREF2ND 2nd person referentREF2SG 2nd person singular referentREF2PL 2nd person plural referentREF3SG 3rd person singular referentREF3PL 3rd person plural referentREFMASC masculine referentREFFEM feminine referentACRES DE COLING-92, NANTES, 23-28 AOt~r t992 9 5 4 PROC.
OF COLING-92, NANTES.
AUG. 23-28, 1992Un Analyseur Morphologique de l'AnglaisRSsum~ du papierA b)~cely Available Wide Coverage Morphological Analyzer for EnglishDanie l  Karp,  Yves Schabes,  Mar t in  Zaidel ,  et Dan ia  Egedi .Nous prdsentous un mmlyseur morphologique del'Anglais.
Les tables morphologiques incluent plus de317000 formes fldchies, d~rivdes de 90000 racines.Les tables ont dtd construites ?
l'aide de dietionairesdlectroniques (en particulier "Collins Dictionary of theEnglish Language, 1979 edition") distribu6es par ACLDCI (Liberman, 1989).Les tables sont disponibles dans deux formats.
Lepremier format peut 6tre utilisd avec un analyseurmorphologique ?
deux niveaux tel que PC-KIMMO(Antworth, 1990).
Dans le deuxi~me format, toutesles formes fldchies ont ~td insdrSes dans une base dedonn~e sur disque h l'aide d'un utilitaire sur UNIX(Seltzer et Yigit, 1991).
Un outil pour X Window per-met d'accdder et de modifier cette base de donn~es estanssi disponible.L'analyseur peut 6tre utilisd par un autre programmetel qu'un analysenr syntaxique.
Lee tables peuvent 6treaccedes en Lisp et C.Tables pour  PC-K IMMONous avons utilis~ les rdgles morphologiques del'anglaisdcrites par Karttunen et Wittenburg (1983).
A l'aidede ces rdgles et de dictionaires, nous avons crdd deslexiques quit peuvent 6tre utilisd par PC-KIMMO (uneimplementation d'un analyseur morphologique ?
deuxniveaux (Antworth, 1990)).
La Table 1 comporte lenombres de racines ainsi que le nombres de formesfl6chies qui peuvent 6tre reconnues.Categories ~ Formes fl~chiesPronom (Pron) ~ 93Preposition (Prep) ~ 150Determinant (D) 100Conjonction (Conj) 64Adverbe (Adv) 7176Nora (N) 199303Adjectif (A) 65146Verbe (V) 45445TOTAL ~ 317477Figure 1: Nombre de Racines et de Formes Fl6chies.Base de Donn6esPC-KIMMO charge la totalit~ du lexique en mdmoiresous la forme d'une structure de donnges qui permetde factoriser les prefixes communs des mots.
Avee noslexiques charges, PC-KIMMO oecupe environ 19 megaoctets.
L'espace mdmoite st trop important et de plusle temps d'accds n'est pas satisfaisant.Nous avons done compil,~ toutes les formes fi,~chiessous forme de base de donnde sur disque avee l'aide d'unutilitaire UNIX (Seltzer eL Yigit, 1991).
Cette utili-taire permet d'dliminer PC-K1MMO t})ut en rdduisantI'espace m(imoire (200 kilo octects) et le temps d'accds(entre 6 et l0 millidme de secondes).Ces tables sont maiutenues sous forme de base dedonng-es et aussi sous forme de texte.
Des programmespermettent la transformation de ces tables d'uue formb.
l'autre.
Nous avons ~crit un outil pour X Window(Figure 2) qui permet d'accdder et de modifier cettebase de donndes est aussi disponible.
'xtmu: .
, , t t~.,B II I I I in\[,-,a,t,,- I I c~- .~ I ~ I ~ J,,~,~ I I  m , - , -  I I  E r ta  " r ~- - ,  117"~'PP~q" ~YIRFigure 2: Utilitaire pour la Base de Donndes Mor-phologiquesDist r ibut ionNous distribuons ces tablesainsi que les utilitaires ans frais avec un contrat denon-commercialisation.
Veuillez contacter par courier,ilectronique zaidel@?is .upenn.edu ou dcrire h I'unedes personnes suivantes: Yves Schabes, Martin Zaidelou Dania Egedi.ACTES DE COLING-92, NAlqI'ES, 23-28 Ao~rr 1992 9 5 5 PROC.
or COLING-92, NAN'r~S.
AUG. 23-28.
1992
