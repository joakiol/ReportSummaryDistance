Outline of the International Standard Linguistic AnnotationFrameworkNancy IdeDept.
of Computer ScienceVassar CollegePoughkeepsie,New York 12604-0520USAide@cs.vassar.eduLaurent RomaryEquipe Langue et DialogueLORIA/INRIAVandoeuvre-l?s-NancyFRANCEromary@loria.frAbstractThis paper describes the outline of a lin-guistic annotation framework under de-velopment by ISO TC37 SC WG1-1.
Thisinternational standard provides an archi-tecture for the creation, annotation, andmanipulation of linguistic resources andprocessing software.
The goal is to pro-vide maximum flexibility for encodersand annotators, while at the same timeenabling interchange and re-use of anno-tated linguistic resources.
We describehere the outline of the standard for thepurposes of enabling annotators to beginto explore how their schemes may mapinto the framework.1 IntroductionOver the past 15-20 years, increasingly large bod-ies of language resources have been created andannotated by the language engineering community.Certain fundamental representation principles havebeen widely adopted, such as the use of stand-offannotation, use of XML, etc., and several attemptsto provide generalized annotation mechanisms andformats have been developed (e.g., XCES, annota-tion graphs).
However, it remains the case that an-notation formats often vary considerably fromresource to resource, often to satisfy constraintsimposed by particular processing software.
Thelanguage processing community has recognizedthat commonality and interoperability are increas-ingly imperative to enable sharing, merging, andcomparison of language resources.To provide an infra-structure and framework forlanguage resource development and use, the Inter-national Organization for Standardization (ISO)has formed a sub-committee (SC4) under Techni-cal Committee 37 (TC37, Terminology and OtherLanguage Resources) devoted to Language Re-source Management.
The objective of ISO/TC37/SC 4 is to prepare international standards andguidelines for effective language resource man-agement in applications in the multilingual infor-mation society.
To this end, the committee isdeveloping principles and methods for creating,coding, processing and managing language re-sources, such as written corpora, lexical corpora,speech corpora, and dictionary compiling and clas-sification schemes.
The focus of the work is ondata modeling, markup, data exchange and theevaluation of language resources other than termi-nologies (which have already been treated inISO/TC 37).
The worldwide use of ISO/TC 37/SC4 standards should improve information manage-ment within industrial, technical and scientific en-vironments, and increase efficiency in computer-supported language communication.Within ISO/TC 37/SC 4, a working group (WG1-1) has been established to develop a Linguistic An-notation Framework (LAF) that can serve as a ba-sis for harmonizing existing language resources aswell as developing new ones.
The overall design ofthe architecture and the data model that it will in-stantiate have been described in Ide et al, 2003.
Inthis paper we provide a description of the datamodel and its instantiations in LAF, in order toenable annotators to begin to explore how theirschemes will map into the framework.2 Terms and definitionsThe following terms and definitions are used in thediscussion that follows:Annotation: The process of adding linguistic in-formation to language data (?annotation of a cor-pus?)
or the linguistic information itself (?anannotation?
), independent of its representation.
Forexample, one may annotate a document for syntaxusing a LISP-like representation, an XML repre-sentation, etc.Representation: The format in which the annota-tion is rendered, e.g.
XML, LISP, etc.
independentof its content.
For example, a phrase structure syn-tactic annotation and a dependency-based annota-tion may both be represented using XML, eventhough the annotation information itself is verydifferent.Types of Annotation: We distinguish two funda-mental types of annotation activity:1.
Segmentation: delimits linguistic elements thatappear in the primary data.
Includingo  continuous segments (appear contiguouslyin the primary data)o  super- and sub-segments, where groups ofsegments will comprise the parts of alarger segment (e.g., a contiguous wordsegments typically comprise a sentencesegment)o  discontinuous segments (linked continuoussegments)o  landmarks (e.g.
time stamps) that note apoint in the primary dataIn current practice, segmental information mayor may not appear in the document containingthe primary data itself.
Documents consideredto be read-only, for example, might be seg-mented by specifying byte offsets into theprimary document where a given segment be-gins and ends.2.
Linguistic annotation: provides linguistic in-formation about the segments in the primarydata, e.g., a morpho-syntactic annotation inwhich a part of speech and lemma are associ-ated with each segment in the data.
Note thatthe identification of a segment as a word, sen-tence, noun phrase, etc.
also constitutes lin-guistic annotation.
In current practice, when itis possible to do so, segmentation and identifi-cation of the linguistic role or properties of thatsegment are often combined (e.g., syntacticbracketing, or delimiting each word in thedocument with an XML tag that identifies thesegment as a word, sentence, etc.
).Stand-off annotation: Annotations layered over agiven primary document and instantiated in adocument separate from that containing the pri-mary data.
Stand-off annotations refer to specificlocations in the primary data, by addressing byteoffsets, elements, etc.
to which the annotation ap-plies.
Multiple stand-off annotation documents fora given type of annotation can refer to the sameprimary document (e.g., two different part ofspeech annotations for a given text).
There is norequirement that a single XML-compliant docu-ment may be created by merging stand-off annota-tion documents with the primary data; that is, twoannotation documents may specify trees over theprimary data that contain overlapping hierarchies.3 LAF overviewLAF development has proceeded by first identify-ing an abstract data model that can formally de-scribe linguistic annotations, distinct from anyparticular representation (as defined in the previoussection).
Development of this model has been dis-cussed extensively within the language engineeringcommunity and tested on a variety of annotationtypes (see Ide and Romary, 2001a, 2001b, 2002).The data model forms the core of the frameworkby serving as the reference point for all annotationrepresentation schemes.The overall design of LAF is illustrated in Figure1.
The fundamental principle is that the user con-trols the representation format for linguistic anno-tations, which is mappable to the data model.
Thismapping is accomplished via a rigid ?dump?
for-mat, isomorphic to the data model and intendedprimarily for machine rather than human use.Figure 1.
Overall LAF architecture4 Dump format specificationThe data model is built around a clear separation ofthe structure of annotations and their content, thatis, the linguistic information the annotation pro-vides.
The model therefore combines a structuralmeta-model, that is, an abstract structure shared byall documents of a given type (e.g.
syntactic anno-tation), and a set of data categories associated withthe various components of the structural meta-model.The structural component of the data model is afeature structure graph capable of referencing n-dimensional regions of primary data as well asother annotations.
The choice of this model is indi-cated by its almost universal use in defining gen-eral-purpose annotation formats, including theGeneric Modeling Tool (GMT) (Ide and Romary,2001, 2002) and Annotation Graphs (Bird andLiberman, 2001).
A small inventory of logical op-erations over annotation structures is specified,which define the model?s abstract semantics.
Theseoperations allow for expressing the following rela-tions among annotation fragments:?
Parallelism: two or more annotations refer tothe same data object;?
Alternatives: two or more annotations com-prise a set of mutually exclusive alternatives(e.g., two possible part-of-speech assignments,before disambiguation);?
Aggregation: two or more annotations com-prise a list (ordered) or set (unordered) thatshould be taken as a unit.The feature structure graph is a graph of elemen-tary structural nodes to which one or more datacategory/value pairs are attached, providing thesemantics of the annotation.
LAF does not providedefinitions for data categories.
Rather, to ensuresemantic coherence we specify a mechanism forthe formal definition of categories and relations,and provide a Data Category Registry of pre-defined categories that can be used directly in an-notations.
Alternatively, users may define theirown data categories or establish variants of catego-ries in the registry; in such cases, the newly defineddata categories will be formalized using the sameformat as definitions available in the registry.5 Implementation5.1 Dump formatThe dump format is instantiated in XML.
Struc-tural nodes are represented as XML elements.
TheXML-based GMT will serve as a starting point fordefining the dump format.
Its applicability to di-verse annotation types, including terminology, dic-tionaries and other lexical data (Ide, et al, 2000),morphological annotation (Ide and Romary, 2002)and syntactic annotation (Ide and Romary, 2001b,2003) demonstrates its generality.As specified by the LAF architecture, the GMTimplements a feature structure graph.
Structuralnodes in the graph are represented with the XMLelement <struct>.
<brack> and <alt> elementsUser-definedrepresentationformatUser-definedrepresentationformatUser-definedrepresentationformat DUMPFORMAT DATAMODELMappingspecifica-tionare provided as grouping tags to handle aggrega-tion (grouping) and alternatives (disjunction), asdescribed above.
A <feat> element is used to ex-press category/value pairs.
All of these elementsare recursively nestable.
Therefore, hierarchicalrelations among annotations and annotation com-ponents can be expressed via XML syntax via ele-ment nesting.
Other relations, including thoseamong discontiguous elements, rely on XML?spowerful inter- and intra-document pointing andlinkage mechanisms.
Because all annotations arestand-off (i.e., in documents separate from the pri-mary data and other annotations), the same mecha-nisms are used to associate annotations with both?raw?
and XML-tagged primary data and withother annotations.The final XML implementation of the dump formatmay differ slightly from the GMT, in particularwhere processing concerns (e.g.
ease of processingelements vs. attributes vs. content) and concisenessare applied.
However, in its general form the aboveare sufficient to express the information required inLAF.
For examples of morphological and syntacticannotation in GMT format, see Ide and Romary,2001a; 2003; and Ide and Romary, 2001b.5.2 Data CategoriesTo make them maximally interoperable and con-sistent with existing standards, RDF schemas canbe used to formalize the properties and relationsassociated with data categories.
Instances of thecategories themselves will be represented in RDF.The RDF schema ensures that each instantiation ofthe described objects is recognized as a sub-classof more general classes and inherits the appropriateproperties.
Annotations will reference the datacategories via a URL identifying their instantia-tions in the Data Category Registry itself.
The classand sub-class mechanisms provided in RDFS andits extensions in OWL will also enable creation ofan ontology of annotation classes and types.For example, the syntactic feature defined in theISLE/MILE format for lexical entries (Calzolari, etal.
2003) can be represented in RDF as follows1:1For brevity, this representation does not include the full i n-formation necessary for the RDF representation.<rdf:RDF><Phrase rdf:ID="Vauxhave"><hasSynFeature><SynFeature><hasSynFeatureName rdf:value="aux"/><hasSynFeatureValue rdf:value="have"/></SynFeature></hasSynFeature></Phrase></rdf:RDF>Once declared in the Data Category registry, an-notations or lexicons can reference this object di-rectly, for example:<Self rdf:ID="eat1Self"><headedByrdf:resource="http://www.DCR /Vauxhave"/></Self>For a full example of the use of RDF-instantiateddata categories, see Ide, et al, in this volume.Note that RDF descriptions function much likeclass definitions in an object-oriented program-ming language: they provide, effectively, templatesthat describe how objects may be instantiated, butdo not constitute the objects themselves.
Thus, in adocument containing an actual annotation, severalobjects with the same type may be instantiated,each with a different value.
The RDF schema en-sures that each instantiation is recognized as a sub-class of more general classes and inherits the ap-propriate properties.A formally defined set of categories will have sev-eral functions: (1) it will provide a precise seman-tics for annotation categories that can be eitherused ?off the shelf?
by annotators or modified toserve specific needs; (2) it will provide a set of ref-erence categories onto which scheme-specificnames can be mapped; and (3) it will provide apoint of departure for definition of variant or moreprecise categories.
Thus the overall goal of theData Category Registry is not to impose a specificset of categories, but rather to ensure that the se-mantics of data categories included in annotations(whether they exist in the Registry or not) are well-defined and understood.6 ConclusionIn this paper we describe the Linguistic AnnotationFramework under development by ISO TC37/SC 4WG1-1.
Its design is intended to allow for, on theone hand, maximum flexibility for annotators, and.on the other, processing efficiency and reusability.This is accomplished by separating user annotationformats from the exchange/processing format.
Thisseparation ensures that pre-existing annotations arecompatible with LAF, and that users have the free-dom to design specific schemes to meet theirneeds, while still conforming to LAF requirements.LAF provides for the use of any annotation formatconsistent with the feature structure-based datamodel that will be used to define the pivot format.This suggests a future scenario in which annotatorsmay create and edit annotations in a proprietaryformat, transduce the annotations using availabletools to the pivot format for interchange and/orprocessing, and if desired, transduce the pivot formof the annotations (and/or additional annotationintroduced by processing) back into the proprietaryformat.
We anticipate the future development ofannotation tools that provide a user-oriented inter-face for specifying annotation information, andwhich then generate annotations in the pivot formatdirectly.
Thus the pivot format is intended to func-tion in the same way as, for example, Java bytecode functions for programmers, as a universal?machine language?
that is interpreted by process-ing software into an internal representation suitedto its particular requirements.
As with Java bytecode, users need never see or manipulate the pivotformat; it is solely for machine consumption.Part of the work of SC4 WG1-1 is to provide de-velopment resources, including schemas, designpatterns, and stylesheets, which will enable anno-tators and software developers to immediatelyadapt to LAF.
Example mappings, e.g., for XCES-encoded annotations, will also be provided.
In thisway, we hope to realize the goal of harmonized andreusable resources in the near future.ReferencesBird, S. and Liberman, M. (2001).
A formalframework for linguistic annotation.
Speech Com-munication, 33:1-2, 23-60.Bunt.
H. and Romary, L. (2002).
Towards Multi-modal Content Representation.
Proceedings of theWorkshop on International Standards for Termi-nology and Language Resource Management, LasPalmas.Calzolari, N., Bertagna, F., Lenci, A., Monachini,M., 2003.
Standards and best Practice for Multi-lingual Computational Lexicons and MILE (Multi-lingual ISLE Lexical Entry), ISLE ComputationalLexicon Working Group deliverables D2.2 ?
D3.2,Pisa.Ide, N. and Romary, L. (2001a).
Standards forLanguage Resources, IRCS Workshop on Linguis-tic Databases, Philadelphia, 141-49.Ide, N. and Romary, L. (2001b).
A CommonFramework for Syntactic Annotation.
Proceedingsof ACL'2001, Toulouse, 298-305.Ide, N. and Romary, L. (2002).
Standards for Lan-guage Resources.
Proceedings of the Third Lan-guage Resources and Evaluation Conference(LREC), Las Palmas, Canary Islands, Spain, 839-44.Ide, N. and Romary, L. (2003).
Encoding SyntacticAnnotation.
In Abeill?, A.
(ed.).
Treebanks:Building and Using Syntactically Annotated Cor-pora.
Dordrecht: Kluwer Academic Publishers (inpress).Ide, N., Kilgarriff, A., and Romary, L. (2000).
AFormal Model of Dictionary Structure and Content.Proceedings of Euralex 2000, Stuttgart, 113-126.Ide, N., Lenci, A., And Calzolari, N. (2003).
RDFInstantiation of ISLE/MILE Lexical Entries.
Thisvolume.Ide, N., Romary, L, and De la Clergerie, E. (2003).International Standard for a Linguistic AnnotationFramework.
Proceedings of NAACL?03 Workshopon Software Engineering and Architecture of Lan-guage Technology Systems (to appear).
