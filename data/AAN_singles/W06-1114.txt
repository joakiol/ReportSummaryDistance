Proceedings of the Workshop on Linguistic Distances, pages 109?116,Sydney, July 2006. c?2006 Association for Computational LinguisticsTotal rank distance and scaled total rank distance:two alternative metrics in computational linguisticsAnca DinuUniversity of Bucharest,Faculty of Foreign Languages/Edgar Quinet 17,Bucharest, Romaniaanca d dinu@yahoo.comLiviu P. DinuUniversity of Bucharest, Faculty ofMathematics and Computer Science/Academiei 14, 010014,Bucharest, Romanialdinu@funinf.cs.unibuc.roAbstractIn this paper we propose two metrics to beused in various fields of computational lin-guistics area.
Our construction is based onthe supposition that in most of the naturallanguages the most important informationis carried by the first part of the unit.
Weintroduce total rank distance and scaled to-tal rank distance, we prove that they aremetrics and investigate their max and ex-pected values.
Finally, a short applicationis presented: we investigate the similarityof Romance languages by computing thescaled total rank distance between the di-gram rankings of each language.1 IntroductionDecision taking processes are common and fre-quent tasks for most of us in our daily life.The ideal case would be that when the decisionscan be taken deterministically, based on someclear, quantifiable and unambiguous parametersand classifiers.
However, there are many caseswhen we decide based on subjective or sensor-ial criteria (e.g.
perceptions), but which prove tofunction well.
The domains in which decisions aretaken based on perceptions vary a lot: the quali-tative evaluation of services, management, finan-cial predictions, sociology, information/intelligentsystems, etc (Zadeh and Kacprzyk, 1999).When people are asked to approximate theheight of some individual, they prefer to use termslike: very tall, rather tall, tall enough, short, etc.We can expect the same linguistic variable to havea different metrical correspondence according tothe community to which the individual belongs(i.e.
an individual of 170 cm can be consideredshort by the Australian soldiers and tall by the Es-kimos).
Similar situations also arise when peopleare asked to hierarchically order a list of objects.For example, we find it easy to make the top ofthe best five novels that we read, since number oneis the novel that we like best and so on, rather thanto say that we liked in the proportion of 40% thenovel on the first position, 20 % the novel on thesecond place and so on.
The same thing is happen-ing when we try to talk about the style of a certainauthor: it is easier to say that the author x is closerto y than z, then to quantify the distance betweentheir styles.
In both cases we operate with a ?hid-den variable?
and a ?hidden metric?.Especially when working with perceptions, butnot only, we face the situation to operate withstrings of objects where the essential informationis not given by the numerical value of some para-meter of each object, but by the position the objectoccupies in the strings (according to a natural hier-archical order, in which on the first place we findthe most important element, on the second placethe next one and on the last position the least im-portant element).As in the case of perceptions calculus, in mostof the natural languages, the most important infor-mation is also carried by the first part of the unit(Marcus, 1974).
Cf.
M. Dinu (1997), it is advis-able that the essential elements of a message to besituated in the first part of the utterance, thus hav-ing the best chances to be memorized1 (see Table1).Based on the remark that in most of the natural1On the contrary, M. Dinu notices that at the other end, wefind the wooden language from the communist period, textthat was not meant to inform, but to confuse the receiver withan incantation empty of content, and that used the reversedprocess: to place the important information at the end of verylong phrases that started with irrelevant information109The length Memorized words (%)of the phrase all first half second half12 100 % 100 % 100 %13 90 % 95 % 85 %17 70 % 90% 50%24 50 % 70 % 30 %40 30 % 50 % 10 %Table 1: The percentage of memorized words fromphraseslanguages the most important information is car-ried out by the first part of the unit, in this paperwe introduce two metrics: total rank distance andscaled total rank distance.Some preliminary and motivations are given inSection 2.
In Section 3 we introduce total rank dis-tance; we prove that it is a metric (Section 3.1), weinvestigate its max and expected values (Section3.2) and its behavior regarding the median rankingproblem (Section 3.3).
An extension for strings isproposed in Section 4.
Scaled total rank distanceis introduced in Section 4, where we prove that itis a metric and we investigate its max and expectedvalues.
In Section 6 a short application is pre-sented: we investigate the similarity of Romancelanguages by computing the scaled total rank dis-tance between the digram rankings of each lan-guage.
Section 7 is reserved to conclusions, whilein Section 8 we give a mathematically addendumwhere we present the proofs of the statements.2 Rank distanceBy analogy to computing with words, natural lan-guage and genomics, we can say that if the differ-ences between two strings are at the top (i.e., inessential points), the distance has to have a biggervalue then when the differences are at the bottomof the strings.On the other hand, many of the similarity mea-sures used today (edit distance, Hamming distanceetc.)
do not take into account the natural tendencyof the objects to place the most important informa-tion in the first part of the message.This was the motivation we had in mind whenwe proposed Rank distance (Dinu, 2003) as an al-ternative similarity measure in computational lin-guistics.
This distance had already been suc-cessfully used in computational linguistics, insuch problems as the similarity of Romance lan-guages (Dinu and Dinu, 2005), or in bioinformat-ics (in DNA sequence comparision problem, Dinuand Sgarro).2.1 Preliminaries and definitionsTo measure the distance between two strings, weuse the following strategy: we scan (from left toright) both strings and for each letter from the firststring we count the number of elements betweenits position in first string and the position of itsfirst occurrence in the second string.
We sum thesescores for all elements and obtain the rank dis-tance.
Clearly, the rank distance gives a score zeroonly to letters which are in the same position inboth strings, as Hamming distance does (we recallthat Hamming distance is the number of positionswhere two strings of the same length differ).On the other hand, the reduced sensitivity ofthe rank distance w.r.t.
deletions and insertionsis of paramount importance, since it allows us tomake use of ad hoc extensions to arbitrary strings,such as its low computational complexity is notaffected.
This is not the case for the extensionsof the Hamming distance, mathematically optimalbut computationally heavy, which lead to the edit-distance, or Levenshtein distance, and which are atthe base of the standard alignment principle.
So,rank distance sides with Hamming distance ratherthan Levenshtein distance as far as computationalcomplexity is concerned: the fact that in the Ham-ming and in the rank case the median string prob-lem is tractable (Dinu and Manea), while in theedit case it is is NP-hard (Higuera and Casacu-berta, 2000), is a very significant indicator.The rank distance is an ordinal distance tightlyrelated to the so-called Spearman?s footrule (Di-aconis and Graham, 1977) 2, which has long beenused in non-parametric statistics.
Unlike other or-dinal distances, the Spearman?s footrule is linearin n, and so very easy to compute.
Its averagevalue is at two-thirds of the way to the maximumvalue (both are quadratics in n); this is because,in a way, the Spearman footrule becomes rather?undiscriminating?
for highly different orderings.Rank distance has the same drawbacks and thesame advantages of Spearman?s foootrule.
As for?classical?
ordinal distances for integers, with av-erages values, maximal values, etc., the reader is2Both Spearman?s footrules and binary Hamming dis-tances are a special case of a well-known metric distancecalled sometimes taxi distance, which is known to be equiv-alent to the usual Euclidian distance.
Computationally, taxidistance is obviously linear.110referred to the basic work (Diaconis and Graham,1977).Let us go back to strings.
Let us choose a fi-nite alphabet, say {N,V,A,O} (Noun, Verb, Ad-jective, Object) and two strings on that alphabet,which for the moment will be constrained to be apermutation of each other.
E.g.
take two stringsof length 6: NNV AOO and V OANON ; putindexes for the occurrences of repeated letters inincreasing order to obtain N1N2V1A1O1O2 andV1O1A1N1O2N2.
Now, proceed as follows: inthe first sequence N1 is in position 1, while it is inposition 4 in the second sequence, and so the dif-ference is 3; compute the difference in positionsfor all letters and sum them.
In this case the dif-ferences are 3, 4, 2, 1, 3, 1 and so the distance is14.
Even if the computation of the rank distanceas based directly on its definition may appear tobe quadratic, in (Dinu and Sgarro) two algorithmswhich take it back to linear complexity are exhibit.In computational linguistics the rank distancefor strings without repetitions had been enough.
Ina way, indexing converts a sequence with repeti-tions into a sequence without repetitions, in whichthe k occurrence of a letter a are replaced by sin-gle occurrences of the k indexed letters a1, a2, .
.
.,ak.
Let u = x1x2 .
.
.
xn and v = y1y2 .
.
.
ym betwo strings of lengths n and m, respectively.
Foran element xi ?
u we define its order or rank byord(xi|u) = n+1?i: we stress that the rank of xiis its position in the string, counted from the rightto the left, after indexing, so that for example thesecond O in the string V OANON has rank 2.Note that some (indexed) occurrences appear inboth strings, while some other are unmatched, i.e.they appear only in one of the two strings.
In de-finition (1) the last two summations refer to theseunmatched occurrences.
More precisely, the firstsummation on x ?
u ?
v refers to occurrences xwhich are common to both strings u and v, the sec-ond summation on x ?
u \ v refers to occurrencesx which appear in u but not in v, while the thirdsummation on x ?
v \ u refers to occurrences xwhich appear in v but not in u.Definition 1 The rank distance between twostrings without repetitions u and v is given by:?
(u, v) = ?x?u?v|ord(x|u)?
ord(x|v)|++ ?x?u\vord(x|u) + ?x?v\uord(x|v) (1)Example 1 1.
Let u = abcde and v = beaf betwo strings without repetitions.
?
(u, v) =|ord(a|u) ?
ord(a|v)| + |ord(b|u) ?ord(b|v)| + |ord(e|u) ?
ord(e|v)| +ord(c|u) + ord(d|u) + ord(f |v) =3 + 0 + 2 + 3 + 2 + 1 = 11.2.
Let w1 = abbab and w2 = abbbac be twostrings with repetitions.
Their correspondingindexed strings will be: w1 = a1b1b2a2b3and w2 = a1b1b2b3a2c1, respectively.
So,?
(w1, w2) = ?
(w1, w2) = 8.Remark 1 The ad hoc nature of the rank distanceresides in the last two summations in (1), whereone compensates for unmatched letters, i.e.
in-dexed letters which appear only in one of the twostrings.Deletions and insertions are less worrying in therank case rather than in the Hamming case: if oneincorrectly moves a symbol by, say, one position,the Hamming distance loses any track of it, butrank distance does not, and the mistake is quitelight.
So, generalizations in the spirit of the editdistance are unavoidable in the Hamming case,even if they are computationally very demanding,while in the rank case we may think of ad hocways-out, which are computationally convenient.3 Total Rank DistanceWe remind that one of the goals of introducingrank distance was to obtain a tool for measuringthe distance between two strings which is moresensitive to the differences encountered in the be-ginning of the strings than in the ending.Rank distance satisfies in a good measure theupper requirement (for example it penalizes moreheavily unmatched letters in the initial part ofstrings), but some black points are yet remaining.One of them is that rank distance is invariant to thetranspositions on a given length.The following example is eloquent:Example 2 1.
Let a = (1, 2, 3, 4, 5), b =(2, 1, 3, 4, 5), c = (1, 2, 4, 3, 5) and d =(1, 2, 3, 5, 4) be four permutations.
Rank dis-tance between a and each of b, c or d is thesame, 2.2.
The same is happening witha = (1, 2, 3, 4, 5, 6, 7, 8) andb = (3, 2, 1, 4, 5, 6, 7, 8), c =(1, 4, 3, 2, 5, 6, 7, 8), or d =(1, 2, 3, 4, 5, 8, 7, 6) (here rank distanceis equal to 4).111In the following we will repair this inconve-nient, by introducing the Total Rank Distance, ameasure which gives us a more comprehensive in-formation (compared to rank distance) about thetwo strings which we compare.Since in many situations occurred in computa-tional linguistics, the similarity for strings with-out repetitions had been enough, in the followingwe introduce first a metric between rankings3 andthen we generalize it to strings.3.1 Total rank distance on permutationsLet A and B be two rankings over the same uni-verse U , having the same length, n. Without lossof generality, we suppose that U = {1, 2, .
.
.
,m}.For each 1 ?
i ?
n we define the function ?
by:?
(i) def= ?
(Ai, Bi).
(2)where Ai and Bi are the partial rankings of lengthi obtained from the initial rankings by deleting theelements below position i (i.e.
the top i rankings).Definition 2 Let A and B be two rankings withthe same length over the same universe, U .
TheTotal Rank Distance between A and B is given by:D(A,B) =n?i=1?
(i) =n?i=1?
(Ai, Bi).Example 3 1.
Let a, b, c and d be the four per-mutations from Example 2, item 1.
The totalrank distance between a and each of b, c, dis: D(a, b) = 10, D(a, c) = 6, D(a, d) = 4.2.
The visible differences are also in the item 2of the upper example if we apply total rankdistance: D(a, b) = 30, D(a, c) = 28,D(a, d) = 10.3A ranking is an ordered list of objects.
Every rankingcan be considered as being produced by applying an order-ing criterion to a given set of objects.
More formally, let Ube a finite set of objects, called the universe of objects.
Weassume, without loss of generality, that U = {1, 2, .
.
.
, |U |}(where by |U | we denote the cardinality of U ).
A rankingover U is an ordered list: ?
= (x1 > x2 > .
.
.
> xd),where {x1, .
.
.
, xd} ?
U , and > is a strict ordering rela-tion on {x1, .
.
.
, xd}, (an ordering criterion.
It is importantto point the fact that xi 6= xj if i 6= j.
For a given objecti ?
U present in ?
, ?
(i) represents the position (or rank) of iin ?
.
If the ranking ?
contains all the elements of U , than it iscalled a full ranking.
It is obvious that all full rankings repre-sent all total orderings of U (the same as the permutations ofU ).
However, there are situations when some objects cannotbe ranked by a given criterion: the ranking ?
contains onlya subset of elements from the unverse U .
Then, ?
is calledpartial ranking.
We denote the set of elements in the list ?with the same symbol as the list.The following theorem states that our terminol-ogy total rank distance is an adequate one:Theorem 1 Total rank distance is a metric.Proof:It is easy to see that D(A,B) = D(B,A).We prove that D(A,B) = 0 iff A = B. IfD(A,B) = 0, then ?
(Ai, Bi) = 0 for each1 ?
i ?
n (since ?
is a metric, so a nonnega-tive number), so ?
(An, Bn) = ?
(A,B) = 0, soA = B.For the triangle inequality we have: D(A,B)+D(B,C) =n?i=1?
(Ai, Bi) +n?i=1?
(Bi, Ci)=n?i=1(?
(Ai, Bi) + ?
(Bi, Ci))?n?i=1?
(Ai, Ci) = D(A,C).
uunionsq3.2 Expected and max values of the totalrank distanceLet Sn be the group of all permutations of lengthn and let A, B be two permutations from Sn.
Weinvestigate the max total rank distance between Aand B and the average total rank distance betweenA and B.Proposition 1 Under the upper hypothesis, theexpected value of the total rank distance betweenA and B is:E(D) = (n2 ?
1)(n+ 2)6 .Proposition 2 Under the same hypothesis as inthe previous proposition, the max total rank dis-tance between two permutations from Sn is:maxA,B?SnD(A,B) = n2(n+ 2)4and it is achieved when a permutation is the re-verse of the other one.3.3 On the aggregation problem via totalrank distanceRank aggregation is the problem of combiningseveral ranked lists of objects in a robust way toproduce a single ranking of objects.One of the most natural way to solve the aggre-gation problem is to determine the median (some-times called geometric median) of ranked lists viaa particular measure.Given a multiset T of ranked lists, a median ofT is a list L such that112d(L, T ) = minXd(X,T ),where d is a metric and X is a ranked list overthe universe of T .Depending on the choice of measure d, the up-per problem may contain many unpleasant sur-prises.
One of them is that computing the medianset is NP-complete for some usual measure (in-cluding edit-distance or Kendal distance) even forbinary universe.We will show in the following that the medianaggregation problem via Total rank distance canbe computed in polynomial time.Theorem 2 Given a multiset T of full ranked listsover the same universe, the median of T via totalrank distance can be computed in polynomial time,namely proportional to the time to find a minimumcost perfect matching in a bipartite graph.Proof: Without loss of generality, we supposethat the universe of lists is U = {1, 2, .
.
.
, n}.We define a weighted complete bipartite graphG = (N,P,W ) as follows.
The first set of nodesN = {1, 2, .
.
.
, n} denotes the set of elements tobe ranked in a full list.
The second set of nodesP = {1, 2, .
.
.
, n} denotes the n available posi-tions.
The weight W (i, j) is the contribution, viatotal rank distance, of node i to be ranked on placej in a certain ranking.We can give a close formula for computing theweights W (i, j) and this ends the proof, becausewe reduced the problem to the solving of the mini-mum cost maximum matching problem on the up-per bipartite graph ((Fukuda and Matsui, 1994),(Fukuda and Matsui, 1992), (Dinu and Manea)).uunionsq4 An extension to strings of total rankdistanceWe can extend total rank distance to strings.Similar to the extensions of rank distance tostrings, we index each letter in a word with thenumber of its previous occurrences.First, we extent the total rank distance to rank-ings with unequal lengths as it follows:Definition 3 Let u and v be two rankings of length|u| and |v|, respectively.
We can assume that |u| <|v|.
The total rank distance between u and v isdefined by:D(u, v) =|u|?i=1?
(vi, ui) +|v|?i=|u|+1?
(vi, u).Theorem 3 The total rank distance between tworankings with unequal lengths is a metric.To extent the total rank distance to strings,firstly we index both strings and than we applythe upper definition to the newly obtained strings(which are now rankings).Example 4 Let u = aabca, v = aab and w =bca be three strings.
We obtained the followingresults:1.
Rank distance: ?
(u, v) =?
(a1a2b1c1a3, a1a2b1) = 9 and?
(u,w) = ?
(a1a2b1c1a3, b1c2a1) = 9;2.
Total rank distance: D(u, v) =D(a1a2b1c1a3, a1a2b1) = 13 andD(u,w) = D(a1a2b1c1a3, b1c2a1) = 33.What happens in item 1 is a consequence of ageneral property of rank distance which states that?
(uv, u) = ?
(uv, v), for any nonempty strings uand v.Total rank distance repairs this fact, as we cansee from item 2; we observe that the total rankdistance is more sensitive than rank distance to thedifferences from the first part of strings.5 Scaled Total Rank DistanceWe use the same ideas from Total rank distance,but we normalize each partial distance.
To do this,we divide each rank distance between two partialrankings of length i by i(i+1), which is the max-imal distance between two rankings of length i(it corresponds to the case when the two rankingshave no common elements).Definition 4 The Scaled Total Rank distance be-tween two rankings A and B of length n is:S(A,B) =n?i=1?
(Ai, Bi)i(i+ 1) .Theorem 4 Scaled total rank distance is a metric.Proof: The proof is similar to the one from thetotal rank distance.
uunionsqRemark 2 It is easy to see that S(A,B) ?H(A,B), where H(A,B) is the Hamming dis-tance.113Example 5 Let A = (a, b, c, d, e), B =(b, a, c, d, e) and C = (a, b, d, e, c) be three per-mutations.
We have the following values for ?, Dand S, respectively:1.
Rank distance: ?
(A,B) = 2, ?
(A,C) = 4, so?
(A,B) < ?(A,C).2.
Total Rank Distance: D(A,B) = 2 + 2 + 2 +2 + 2 = 10, D(A,C) = 0 + 0 + 2 + 4 + 4 = 10,so D(A,B) = D(A,C).3.
Scaled Total Rank Distance: S(A,B) = 22+ 26+212 + 220 + 230 = 53 , S(A,C) = 02 + 06 + 212 + 420 +430 = 12 , so S(A,B) > S(A,C).It is not hard to see that S(A,B) ?
n, so we cannormalize scaled total rank distance by dividing itto n.We obtained the following two values for maxand average values of scaled total rank distance:Proposition 31.
If n ?
?, then maxA,B?Sn1nS(A,B) = 72 ?
4 ln 2.2.
The average value of scaled total rank distanceis: E(S) = 2(n?1)3 .
When n ?
?, E(S)n ?
23 .Remark 3 It is a nice exercise to show that 72 ?4 ln 2 ?
1.Proof: 72 ?
4 ln 2 ?
1 iff 1 ?
4(ln 4 ?
1).But 4(ln 4 ?
1) > 4(ln 4 ?
ln 3).
From La-grange Theorem, there is 3 < ?
< 4 such thatln 4 ?
ln 3 = 1?
, so 4(ln 4 ?
ln 3) = 4?
> 1, so4(ln 4?
1) > 4(ln 4?
ln 3) > 1. uunionsq6 ApplicationWe present here a short experiment regarding thesimilarity of Romance languages.
The work cor-pus is formed by the representative vocabularies ofthe following six Romance languages: Romanian,Italian, Spanish, Catalan, French and Portugueselanguages (Sala, 1988).
We extracted the digramsfrom each vocabularies and then we constructed aranking of digrams for each language: on the firstposition we put the most frequent digram of thevocabulary, on the second position the next fre-quent digram, and so on.We apply the scaled total rank distance betweenall pairs of such classifications and we obtain a se-ries of results which are presented in Table 2.Some remarks are immediate:?
If we analyze the Table 2, we observethat every time Romanian finds itself at thebiggest distance from the other languages.Table 2: Scaled total rank distances in RomancelanguagesRo It Sp Ca Po FrRo 0 0.36 0.37 0.39 0.41 0.36It 0.36 0 0.21 0.24 0.26 0.30Sp 0.37 0.21 0 0.20 0.18 0.27Ca 0.39 0.24 0.20 0 0.20 0.28Po 0.41 0.26 0.18 0.20 0 0.30Fr 0.36 0.30 0.27 0.28 0.30 0This fact proves that the evolution of Ro-manian in a distanced space from the Latinnucleus has lead to bigger differences be-tween Romanian and the rest of the Romancelanguages, then the differences between anyother two Romance languages.?
The closest two languages are Portugueseand Spanish.?
It is also remarkable that Catalan is equallydistanced from Portuguese and Spanish.The upper remarks are in concordance with theconclusions of (Dinu and Dinu, 2005) obtainedfrom the analise of the syllabic similarity of theRomance languages, where the rank distance wasused to compare the rankings of syllables, basedon the frequency of syllables for each language.During the time, different comparing methodsfor natural languages were proposed.
We mentionhere the work of Hoppenbrouwers and Hoppen-brouwers (2001).
Their approach was the follow-ing: using the letter frequency method for eachlanguage variety the unigram frequencies of let-ters are found on the basis of a corpus.
The dis-tance between two languages is equal to the sumof the differences between the corresponding letterfrequencies.
They verify that this approach cor-rectly shows that the distance between Afrikaansand Dutch is smaller than the distance betweenAfrikaans and the Samoan language.7 ConclusionsIn this paper we provided some low-complexitymetrics to be used in various subfields of computa-tional linguistics: total rank distance and scaled to-tal rank distance.
These metrics are inspired fromthe natural tendency of objects to put the main in-formation in the first part of the units.
Our ana-lyze was especially concentrated on the mathemat-114ical and computational properties of these metrics:we showed that total rank distance and scaled to-tal rank distance are metrics, computed their ex-pected and max values on the permutations groupand showed that total rank distance can be used inclassification problem via a polynomial algorithm.8 Mathematical addendumThis addendum may be skipped by readers whoare not interested in mathematical technicalities;below some statements are sketched and other areunproved, but then the proofs are quite straightfor-ward.Proposition 1:Proof: It is not hard to see that D(A,Sn) =D(B,Sn) for any two permutation A,B ?
Sn.So, the expected value can be computed by com-puting first D(A,Sn) for a convenable permuta-tion and then by dividing the upper sum to n!.
Ifwe choose A = en (i.e.
the identical permutationof the group Sn), then the expected value is:E(D) = 1n!??
?SnD(en, ?
).The upper sum can be easily computed if we takeinto account the fact that each number 1, 2, .
.
.
, nappears the same number of times (i.e.
(n-1)!)
onthe ranks 1, 2, .
.
.
n. So, we obtain that the ex-pected value is equal to:E(D) = (n2 ?
1)(n+ 2)6 .uunionsqProposition 2:Proof: W.l.g.
we can suppose that first permu-tation is the identical one, i.e.
en (otherwise wewill relabelled it).
To compute the max value, thefollowing preliminary results must be proven (weskipped the proofs).We say that an integer from ?
is low if its posi-tion is ?
n2 and it is high if its position is > n2 .Let ?
?
Sn be a permutation.
We construct theset ??
as following:??
= {?
?
Sn | ?x ?
{1 .
.
.
n}, x is low in ?iff x is high in ?
and viceversa}Result 1 For each ?
?
Sn and every two permu-tation ?, pi in ??
we have: D(?, ?)
= D(?, pi).Result 2 For each ?
?
Sn and every two permu-tation ?, pi such that pi ?
??
and ?
/?
?
?, wehave: D(?, ?)
< D(?, pi).To prove Result 2 we use the following Lemma:Lemma 1 (Dinu, 2003) If a > b, then the func-tion f(x) = |x ?
b| ?
|x ?
a| is an increasingone.Result 3 Let ?
?
Sn be a permutation.
The max-imum total rank distance is reached by the per-mutation ?
where ord(x|?)
= n + 1 ?
ord(x|?
),?x ?
V (Pn).
Under this conditions the maximumtotal rank distance is:maxA,B?SnD(A,B) = n2(n+ 2)4 (3)In other words, we obtained a more general re-sult:Theorem 5 For a given permutation ?, the maxi-mum rank distance is achieved by all permutationsfrom ??
and it is equal to (3).uunionsqProposition 3:Proof:1.
Similar to Proposition 2, given a permutation?
?
Sn, the max value is reached by its in-vert.
So, to give a close formula for the maxvalue it is enough to compute S(en, e?1n ).
Tomake easier our life, we can suppose thatn = 2k.S(en, e?1n ) = k +?ki=12i2+(k?i)(k?i+1)(k+i)(k+i+1) =.
.
.
= 4k ?
2k22k+1 ?
2(4k + 1)(?ki=11k+i ?k2k+1);When k ?
?, ?ki=1 1k+i ?
ln 2, soS(en,e?1n )n = 72 ?
4 ln 2 uunionsq2.
To compute the expected value we use thesame motivation as in expected total rank dis-tance.
The rest is obvious.Acknowledgements 1 We want to thank to re-viewers for their comments and suggestions.
Re-search supported by CNR-NATO and MEdC-ANCS.ReferencesP.
Diaconis, R.L.
Graham, 1977.
Spearman footrule asa Measure of Disarray, Journal of Royal StatisticalSociety.
Series B (Methodological), Vol.
39, No.
2,262-268.115L.
P. Dinu, 2003.
On the classification and aggregationof hierarchies with different constitutive elements,Fundamenta Informaticae, 55(1), 39-50.A.
Dinu, L.P. Dinu, 2005.
On the Syllabic Similari-ties of Romance Languages.
In Proc.
CICLing 2005,Lecture Notes in Computer Science, Volume 3406,pp.
785-789.L.P.
Dinu, F. Manea.
An efficient approach for the rankaggregation problem.
Theoretical Computer Science(to appear).L.P.
Dinu, A. Sgarro.
A low-complexity distance forDNA strings, Fundamenta Informaticae (to appear).M.
Dinu, 1997.
Comunicarea (in Romanian).
Ed.S?tiint?ifica?, Bucures?ti.K.
Fukuda, T. Matsui, 1992.
Finding all minimum costperfect matchings in bipartite graphs, Networks, 22,461-468.K.
Fukuda, T. Matsui, 1994.
Finding all the perfectmatchings in bipartite graphs, Appl.
Math.
Lett.,7(1), 15-18.C.
de la Higuera, F. Casacuberta, 2000.
Topology ofstrings: Median string is NP- complete, TheoreticalComputer Science, 230:39-48.C.
Hoppenbrouwers, G. Hoppenbrouwers, 2001.
Deindeling van de Nederlandse streektalen.
Dialectenvan 156 steden en dorpen geklasseerdvolgens deFFM.
Koninklijke Van Gorcum, Assen.S.
Marcus, 1974.
Linguistic structures and generativedevices in molecular genetics.
Cahiers Ling.
Theor.Appl., 11, 77-104.M.
Sala, (coord.)
1982.
Vocabularul reprezentativ allimbilor romanice, Bucures?ti.L.A.
Zadeh, J. Kacprzyk, 1999.
Computing with wordsin information/intelligent systems 1: Foundations, 2:Application.
Physica-Verlag, Heidelberg and NewYork.116
