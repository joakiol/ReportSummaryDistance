JON-TIN WANGON LOGICAL FORMULATION OF THE COMPUTATIONPROCESS IN SEMANTICAL SYSTEMSIn the recent years there is an intensive search for a rigorous andexplicit semantics in the theory of natural languages (and in the fieldof computer languages).
In this paper we want to present a generalframework in which all these ideas and results can be stated and re-lated in a unified and systematic way, and at the same time, by theusing of the language of predicate logic, eventually of higher order,to reformulate and improve the different semantical systems: the systemdiscussed by Scott and Strachey in their development of the theoryof mathematical semantics for computer languages, the set-theoreticsemantics for context-free fragments of natural languages proposed bySuppes and, finally, Lewis's iutensional semantics for a categorial gram-mar.
In ~ 1, mainly by the example of context-free grammar, we showthat the language of predicate logic of first-order can be used to describethe syntax of an object language.
We obtain then in ~ 2 a logical char-acterization of structural descriptions associated with each reformu-lated syntactic rule.
This leads to the development of the recursivemechanism in the form of definition of semantic functions by cases.This general principle will be then applied in ~ 3-5 to treat he concretesemantical systems mentioned above.1.
GRAMMAR (SYNTAX) AND FIRST-ORDER THEORYLet us begin with the study of the representation f a grammaras a first-order theory, namely as a theory formalized in the languageof predicate logic of first-order.
We consider especially the context-free grammar, since it builds up on the one hand the basis for the de-velopment of the transformation grammar, on the other hand all theThis work is supported by Deutsche Forschungsgemeinschaft.88 flJN-TIN WANGsemantical systems to be discussed below are referred essentially tocontext-free languages.In general, a context-free grammar consists of a set of rewritingrules each of which is of the form(1.1) A - .at a, l& ' at.... &a , .where A, Ai,, .... At,, stand for nonterminal symbols (category symbols)and a?,, ..., ain for terminal symbols and some of A i and at may benull.
We can describe this form of context-free rule by the followinglogical formula (here and in the sequel we omit the universal quanti-fications) :(1:2) At, (xl)^ A,, (x=)^ ...^ A,,, (x,,) = A (x'i'aFx~'aF...-x~'at,,),where we take A, Ai,, .
.
.
,  Ain as unary predicate symbols and at1, ...,at, as individual constants; the symbols "^"  and "~ " are the conjunc-tion and implication sign and the function symbol .
.
.
.
.
stands forconcatenation.
The set of logical formulae thus obtained are called thenonlogical axioms of the first-order theory corresponding to the givencontext-free grammar.
?As an example, we consider the following context-free grammargiven?by P. SUVVES (1971):S -~ NP  VPVP -+ TV  NP  .
'"NP  -* PNPN -*JohnTV-+ hitPN  -* MaryThe nonterminal symbols are S, NP, VP, TV  and PN; the terminalsymbols are John, hit and Mary.Corresponding to this set of context-free rules we can state thefollowing nonlogical axioms:NP(x)  ^  VPOt ) ~ S(x-y)TV(x)  ^  NP(r) = vp(x-r)PN(x) = NP(x)PN(lohn)TV(hit).. PN(Mary).ON LOGICAL FORMULATION OF THE COMPUTATION PROCESS 89It is obvious that a context-free grammar and its corresponding first-order theory enumerate the same set of terminal strings.
More preci-sely, for each K-derivation of a terminal string w in a given context-free grammar in the sense of Chomsky, where K stands for any non-terminal symbol in this grammar, the formal sentenceK(w)is in the corresponding first-order theory logically derivable (J. T.WANe, 1973).With this result we can state even the principle to formulateeach grammatical transformation, which according to Chomsky isa mapping of phrase-markers into phrase-markers, as a nonlogicalaxiom in the following way: we describe both the applied phrase-mark-ers and the resulting phrase-markers, or parts of them, with formulaein the language of predicate logic of first-order which occur then respec-tively as premises and conclusion of an implication formula.
This veryimplication formula can be.
then taken as the representation f thegrammatical transformation i  question.
As an example, for the pas-sive transformation, which has been specified by Chomsky as follows:structural description: NP, Aux, V~, NPstructural change: x~-xa-xa-x4 ~ x4-x~-be-x3-en-by-xlwe might state then the following nonlogical axiom:S(xlx2x3x4) A NP(xl)^ Aux(x2)A Vt(xa)^ NP(x,) ,D S(x~'x~'be-x~'en-by'~x~)^ Ve(x~'be-x~en-br-Xx ).It seems evident, that the same principle stated above can be appliedto the logical formulation of other grammatical transformations awell.2.
SYNTACTIC RULE AND STRUCTURAL DESCRIPTIONThe results obtained abo~ce indicate that, in general, syntactic rulescan be described in the language of predicate logic of first-order inthe formp~/X90 JUN-TIN WANGwhere P stands for a conjunction of formulae as premises and A fora conjunction of formulae as conclusion of the rule (nonlogical xiom)corresponding to the given syntactic rule.
This suggests, however, thatwe may take the formulaP^Aas a characterization of the structural description of the strings generatedby the reformulated syntactic rule in question.
For example, we cantake the formulaA,, (xl)^ Aq (x~)^ ... ^  A,, (xn)^ A (x~ a~x~'a~.
.
.
-x~aJas a characterization f the structural description of the strings of theform x~'a~x~'...-x~ai,,, which could be enumerated by the refor-mulated context-free rule, namely the logical formula (1.2) in ?
1.The set of formulae of structural descriptions thus obtained, onefor each reformulated syntactic rule, specify therefore xhaustly anddisjoin@ the syntactic onditions, with respect to which the semanticevaluation function, which assigns a denotation or meaning to eachgenerated terminal string, can be defined recursively.
This is the kindof the definition of the (semantic) functions by cases in the usual mathe-matical sense.
With this general characterization f our approach weare going now to treat the concrete semantical systems.3.
SEMANTICAL SYSTEM FOR THE LANGUAGE OF NUMERALSOur general idea of using the language of predicate logic, eventually.of higher order, to give a recursive definition of the semantical functionscan be well illustrated by reformulating the simple semantical systemfor the language of numerals, whicl'/has been given by D. SCOTT andC.
STI~AClIEY (1971) as an example in their development for a theoryof mathematical semantics for computer languages.
In the following,we give just our reformulation and do not repeat heir specificationof syntax and semantics for this simple language.The numerals are expressions in a certain familiar language; whilethe numbers are mathematical objects (abstract objects) which providethe intended interpretations of the expressions.
Based on the explicitsyntax given by Scott and Strachey in the form of context-free gram-mar, we can describe this syntax for binary numerals by the followinglogical formulae:ON LOGICAL FORMULATION OF THE' COMPUTATION PROCESSNumeral (~Numeml (1)Numeml (~Numeml (~Numeral (x-0)Numeral (xA1),91f :  Nml ~ N.Thus, for each x ~ Nml, the function value f(x) is the number deno-ted by the numeral x.Based on the idea of the semantical equations given by Scott andStrachey and using our general principles described in ~ 2, we canuse the language of predicate logic to state the following semanticrules which define precisely this evaluation function:(3.1)(3.2)(3.3)(3.4)Numeral (0) ~ f(O) = O,Numeral (1) D f(1) = 1,Numeral (x),, Numeral (x-O) = f(x~O) = I f (x ) ,Numeral (x),, Numeral (xA1) = f(xA1) = 2f (x)  + 1.This set of logical formulae forms a recursive definition of thesemantic evaluation function f with the help of the auxiliary number-theoretic functions of addition and multiplication.
It is a definition offunction by cases in the usual mathematical sense.
Furthermore, thisformulation corresponds to the intuitive idea in the linguistic theory,that on the basis of the grammatical properties and the meaning of thebasic expressions of the languages the semantic rules enable one to deter-mine the meaning of any well-formed expression i  terms of its syntacticstructure.
In the terminology ofJ.
J. KaTz, J.
A. FODOR (1963), (3.1)and (3.2) can be considered as the dictionary component, and (3.3)and (3.4) as the projection rules.
However, it is essential to note, thatis this kind of logical formulation of syntactic and semantic rules thereis no need of any existence of phrase-marker for the semantical systemwhere the symbol Numeral is a predicate symbol and the symbols" 0"  and " 1"  are individual constants.
Thus, a numeral is either oneof the digits " 0 " or " 1 " or is the result of suffixing one of these digitsto a previously obtained numeral.
Let the set of all numerals be calledNml.
Semantically speaking each of the numerals is meant o denotea unique number.
Let N be the set of numbers.
The obvious principleof interpretation provides a function f, the evaluation mapping, whichhas the functional character:92 JON-~N WANGto compute the denotation or meaning of the expressions.
The structur-al description of a string generated by a syntactic rule is used just as thepremises of the semantic rule corresponding to this very syntactic rule.In this way, we can treat the other complicated semantical systemsfor computer languages discussed by Scott and Strachey.
However,with this simple illustration of our general approach to semantics, welike to continue our study of the semantics for natural anguages.4.
EXTENSIONAL SEMANTICS OF CONTEXT-FREE FRAGMENTS OF NATURALLANGUAGESWithin our general framework described in ~ 1-2 and illustrated in3 we want now to treat the semantical system proposed by P. SUVVES(1973).
We indicate informally at first his approach and give thenour reformulation and improvement of his system.In his study of the semantics of context-free fragments of naturallanguages, Suppes intends to give a set-theoretical account of the mean-ing of a sentence.
To do this, a set-theoretical object will be assignedto each basic expression (word).
In the case of a noun like men the classof men will be assigned; in the case of a proper noun like John theclass consisting of a certain single member will be assigned; in thecase of a transitive verb like hit the class consisting of pairs of individ-uals x and y such that x hit y will be assigned.
In this kihd of approach,we assume thus, that over the individual words an assignment functionv be defined, which assigns a denotation to each word.
(We leaveaside the discussion about syncategorematic expressions).
To give anaccount of meanings (or denotations) of the various parts of a sentenceand their relationships, Suppes introduces set-theoretical functions, justlike we have used number-theoretic functions in the semantical systemfor the language of numerals.
With each syntactic rule of the gram-mar there is associated a semantic set-theoretical function, For examplesyntactic ruleS --> NP VPVP -+ TV  NPNP --> PNNP-+ Adj NPN ---> JohnPN ~ MaryTV--> hitsemantic functiontruth functionimage under the converse relationidentityintersectionidentityidentityidentityON LOGICAL FORMULATION OF THE COMPUTATION PROCESS 93Using the assignment function v which assigns denotations to basicexpressions only and using these semantic set-theoretical functionsassociated with each syntactic rule, the denotation of each labelednode of phrase-marker of the sentence will be then calculated.
In Sup-pes's explicit formulation, the nodes of the phrase-marker will be num-bered, so that the denotation function f is actually defined for pairs(n, s), where n is the number assigned to a node of the phrase-markerand s is a terminal or nonternfinal symbol.
For example, a numberedphrase-marker looks like this1; sJ2, NPI /4, PN 5, TVI I7, John 8, hit3, VP6, NPI9, PNI10, Mary- Let I be the identity function, .4 the converse of the binary relationA, i.e..~ = { <x, y> I <y, x> ~A },and g"B the range of the function g restricted to the domain B, andlet T be truth and F falsity.
Then the denotation of each labeled nodeof the phrase-marker is calculated by working from the bottom up:f (10, Mary)-~ v(Mary),f (9, PN) = I(v(Mary)),f (8, hit) = v(hit),f (7, John) = v(John),f (6, NP) = I(v(Mary)),f (5, TV) -= I(v(hit)),f (4, PN) =- I(v(.John)),f (3 ,  VP)f (2, NP)f0 ,  s)= ~(v(h~t))"~O,(Mary)),= X ~(v(John)),r =g(f(2, NP), f(3, VP)) =IF if f(2, NP) of(3, VP) otherwise.94.
JON-TIN WANGThe calculation of the denotations of expressions will be thus in-directly achieved by the way of the calculation of the denotations ofthe nodes of the numbered phrase-marker.
This unnecessary compli-cation with the whole matter of numbered phrase-marker, whichcan be traced back to the specification of context-free grammar in formof rewriting rules, would not arise at all, if the context-free grammarhad been formulated in the language of predicate logic since the verybeginning of the development of theory of grammar by Chomsky.In fact, the process to compute the denotation of an expression canbe specified by the following set of logical formulae directly and pre-cisely:(4.1)(4.2)(4.3)(4.4)(4.5)(4.6)(4.7)PN(Uarr)  = f (Varr )  = v(Varr),PN(John) = f(John) = v(John),TV(hit) = f(hit) = v(hit),VN(x)  ^  NP(x) =.
NP(x) = f(x) = z +--+ PN(x) = f(x) = z,Adj(x) ^  N(y) ^  NP(x-y)  -,.
f (x -y)  = gl (f(x), f(y)),TV(x)  ^  NP(y) ^  VP(x-y) =.
f (x-y)  = g2(f(x), f(y)),NP(x)  ^  VP(y) ^  S(x-y) =.
f (x -y)  = g3(\[(x), f(y)).The functions gl, g2 and g3 being used to specify the denotation functionf are defined as follows:g,(A, B )={ x l x ~ .~,,,c ~ B }e,(A,  B)= { ,?
I Vr (<~, r> ~ A^ r ~ B) }T i fA~Bg3(A, /3)= F otherwise,or, formulated in the language of predicate logic:g~(A, 13)= C ~-.+ Ax(x e A^ x e B ,,.-.+ x e C),g,(A, B )~-C~-+Ax(Vy(<x,  y)  e A^y e B+-.+x e C),Ax(~ ~ A = x ~ B) =.
g~(A, B )= r .
, , .
-q  ^ x(x ~ A =,~ ~ B)~.
g,(A, B) = F.By the set of the semantic rules which use these set-theoretic oper-ations, the denotation of any well-formed expressions in this definedlanguage can be then directly calculated.
Thus, the denotation of thecomposed expression hit Mary is the set of individuals who hit Mary;the sentence John hit Mary is true if and only if the set consisting of thesingle individual John is properly contained in the set of individualsON LOGICAL FORMULATION OF THE COMPUTATION PROCESS 95who hit Mary.
This set of logical formulae forms with respect o thegiven assignment function v a recursive definition of the denotationfunctionf which assigns to each well-formed expression of the languagea set-theoretical object.
This function has namely the functional char-acter:f :  Expressions-+ Set-theoretical Objects.It is just what Suppes intends to have.Again, (4.1)-(4.3) can be considered as the dictionary component,and (4.4)-(4.7) as projection rules.
The whole set of formulae consti-tutes a definition of function by cases.
The premise of each rule statesthe syntactic ondition, with respect o which the function value isthen specified.
At the same time, we do not need even the notion ofphrase-marker which has played the central role in the concept forma-tion in the theory of generative grammars.Note there is no general principle to guide us in choosing for eachsyntactic rule the corresponding semantic set-theoretical function.
Itmay be even possible that no set-theoretical operation can be found fora given syntactic rule at all.
It seems likely that in our usual understand-ing of natural anguages we do not use any set-theoretical operation.Anyway, from the standpoint of theory of meaning, the semanticstreated by Suppes is only the extensional part of the semantics of alanguage (A.
CHURCH, 1951).
With these remarks in mind, let us nowconsider the intensional semantics discussed by Lewis in his theory ofcategorial grammar.5.
INTENSIONAL SEMANTICS FOR CATEGORIAL GRAMMARD.
LEWIS (1970) treats a categorial grammar in the sense of Ajdu-kiewicz as a context-flee grammar of the following sort.First, we have a finite number of basic categories like the categoriesof name (N), common noun (C) or sentence (S).
Second, we haveinfinitely many derived categories like the categories of intransitiveverb (S/N), adjective (G/C) or article ((S/(S/N))/C).
In general, when-ever c, q, ..., c,, for n ~ 1, are any categories, either basic or derived,we have a derived category c/q ... c,.
Third, we have context-freerule of the form(5.1) c~c/cx ... c.+q +... +c.96 JON-TIN WANGcorresponding to each derived category, where " - t - "  stands for theconcatenation.One of the main ideas behind the theory of categorial grammaris that the phrases of a derived category are phrases which combinephrases of basic or derived categories to form other phrases of certaincategory, which may be basic like the category of sentence or derived.Such phrases are called functors by H. B. CURRY (1961).
Every functorcombines one or more phrases, called its arguments, to form a newphrase called its value.
This syntactic property shall be reflected instating the semantic projection rule.
We note here that the context-free rule of the form (5.1) can be described, as before, by the followinglogical formula as a direct translation:(52.)
clq ... c. (y),, c, (xl),, ...,, c, (xo) (y-x , - .
.
.
x,,),where we take c/q ... q, cl ..... cn and c again as unary predicate sym-bols.
The word order as specified in the context-free rule (5.1) issometimes too odd; the phrase of a derived category takes always theleft-most position in its combined phrase.
To take into account thenatural word order, we should actually describe it.by the followinglogical formula:(5.3) clcl ... c,~ (y )^q (x l )^  .. .^ c,~ (Xln) :3 C (X~'...--X'~'y~xi+L~...--X,).With these remarks about the syntactic rules in a categorial gram-mar, we are prepared to treat Lewis's intensional semantics withinour general framework.Let us denote the sets of phrases of name, common noun, adjeCtive,intransitive verb, article etc.
by Names, Common-Nouns, Adjectives,Intransitive Verbs and Articles respectively.
Let Things denote the setof things and Sets the set of sets of things.
And let T denote the setof truth values, and let I denote the set of indices, each of which is,roughly speaking, a package of the various factors like possible world,time, place and speaker on which the extension of an expression maydepend.
As used before, given any two domains D1 and Da, we write\[D~ ~ D~\] for the set of all functions from D1 into D2.
We writeh: D1 ~ D2to indicate that h is just such a function.ON LOGICAL FORMULATION OF THE COMPUTATION PROCESS 97According to Lewis's theory, an appropriate intension for a nameis any function from indices to things; an appropriate intension fora common oun is any function from indices to sets of things; an ap-propriate intension for an adjective is any function from common-noun intensions to common-noun i tensions, etc.
In adapting thispoint of view, we shall consider in the sequel assignment functions, eachof which assigns an appropriate meaning to a word of certain category,with the following functional charact.ers:vx : Names-+ \[I ~ Things\]v2: Common-Nouns ~ \[!-+ Sets\]vs: Adjectives-~ \[\[I-+ Sets\]--> \[I---> Sets\]\]v,: Intransitive Verbs-+ \[\[I-+ Things\] ~ \[I---~ T\]\]vs: Articles ~ \[\[I ~ Sets\] ~ \[\[\[I ~ Things\] ~ \[I ~ T\]\] ~ \[I ~ 7"\]\]\]Thus, for man: E Common-Nouns, the function value(man)is the assigned meaning of the word man, where this meaning itselis a kind of function from indices to sets of things (individuals).
Inwhat follows, we assume that such assignment functions pecifyingan appropriate meaning for each word of certain category are alreadygiven or known to us, for example by learning or ostensive definition,In other words, we assume we know the meaning of each individualword.
The problem is just how we can know the meaning of anywell-formed expression i this language.
We ask namely for a semanticevaluation function, which can compute the meaning of any well-formed expression on the basis of its syntactic structure and the meaningof its constituting words.
This evaluation function f shall have namelythe following functional character:f :  Expressions -+ Meanings.To define this function, .we begin with the specification of its val-ue for the individual words or basic expressions, based on the givenassignment functions.
As before, we state thus the following semanticrules, here formulated in the language of predicate logic of higher-order due to the functional characters of the assignment functions:98 JUN-TIN WANG(5.4)(5.5)(5.6)(5.7)(5.8)N (John) ~ f (John) = v~ (John),C (man)=f  (man)= v, (man),C/C (young) ~ f (young) = v~ (young),SIN (sleeps)~ f (sleeps)= v4 (sleeps),(S/(SIN))/C (the) ~ f (the) = v5 (the),where we take again the symbols N, C, C/C, S/N, (S/(S/N))/C etc.as unary predicate symbols.
For the computation of the meaning ofcomposed well-formed phrases, we shall state, corresponding to eachsyntactic rule, the semantic projection rule.
For the syntactic rule ofthe form (5.2), the semantic projection rule will, in general, be of theform4c~ ... c, (Y) ^  ~1 (x,)^ ... ^  ~, (x,) ^ ~ (y-xrx; .
.
.
-x , )~.
f (y-x7x-f ...-x,) = g(f(y), f (x 0 ..... f(x,)),based on the assumption, that the meaning of an expression dependson the meanings of its parts; it is a function of the meanings of its parts.This function g, which uses the meanings of these parts as argumentsto compute the meaning of the composed phrase as its value, mustbe, first of all, specified.
In general, as we have seen in the case of Sup-pes's system, there is no uniform principle to do it.
In his semantictheory for categorial grammar, Lewis holds, however, the view thatthe result of concatenating a phrase of the category c/q ... c~ with in-tension i0, a phrase of the category c1 with intension/1, ..., and a phraseof the category q with intension i, is a phrase of the category e withintension;0(il .
.
.
.
.
i.
).In accordance with this conception, we can state then, correspond-ing to each syntactic rule of the form (5.2), the following semanticprojection rule:(5.9} c/c1 ... c,~ (y) ^  q (x~)^ c~ (xz} ^ ... ^  c, (x,)^ c (y-x~'xT...-x,)~.
f (y-x~'x~...-x~) =f  (y) (f(xl), ..., f(x~)),or, taking into account he proper word order:(5.~o) ~/q.
.
.~ (y)^q (xO,, .
.
.^~ (~,)^~(~7.. .
-~'y-~,?,- .
.
.
-x , )?
f (~ i ' .
.
.~r~,+,~.
.
.~) - - f  (y) ( f  (~0, ..., f (~,)).ON LOGICAL FORMULATION OF THE COMPUTATION PROCESS 99Thus, we may have semantic projection rule likeSIN (3)^ N (x) =.f (x-y)=f (3) ( f  (x)).One of its instances i  as follows:s/N ( 1 ep4,, n (John) =.
f  (John-steees)=f (sleees) 0 r (john)).In combination with the logical formulae (5.4)-(5.8), such rulesenable one to derive logically the meaning of the sentence like Johnsteeps, which can be represented as v, (sleefs) (vx (John)).
And this rep-resentation would correspond to the usual so-called logical form:SLEEP(j).
The set of projection rules thus obtained specifies in con-nection with those semantic rules like (5.4)-(5.8), which constitute thedictionary component, the evaluation function f recursively.
Thiskind of formulation of semantic rules stands very near to our intuition,that on the basis of the syntactic structure and on the knowledge ofthe meanings of the constituting words we can understand the meaningof an expression.The semantic projection rule stated above has a nice homogeneousfeature in specifying semantic evaluation function.
This holds actuallyfor all grammars using the notion of functor which combines one ormore phrases as its arguments oform a new phrase.
The meaning ofthe composed phrase can be then always considered as the result of theoperation of the meaning of the functor with the meanings of its ar-guments.
According to H. B. CURRY (1961), what Harris and Chomskycall transformations are also functors.
From this point of view, we canthen state the semantic projection rule for a given transformation rulein the same way as described above.REFERENCESA.
CHURCH, The need for abstract entitiesin semantic analysis, in ,Proc.
Amer.
~Academy of arts and sci.~ LXXX(1951).H.
B. CURRY, Some logical aspects of gram-matical structure, in IL.
J~.KoBsoN (ed.
),Structure of language and its mathematicalaspects, Providence, 1961.J.
J .
KATZ, J.
A. FODOR, The structure ofa semantic theory, in ~ Language ~,XXXIX (1963), pp.
170-210.D.
LEwis, General semantic, in~ Synthese ~,XXU (1970).D.
SCOTX, C. STRAC~, Toward a math-ematical semantics for computer languages,in Proc.
of the syrup, on computers andautomata, 1971.P.
Stn,l,r.s, Semantics of context-free flag-ments of natural languages, in K. J. J.HINTmKdi, et al (eds.
), Approaches tonatural anguage, Dordrecht, 1973.J.
T. W~a~G, Zum rekursiven Mechanismusim semantischen System, in A. P. T~CATE, P. JOlmENS (eds.
), LinguistischePerspektiven, Tiibingen, 1973, pp.
205-219.j.
T. WANG, On tl~e representation f gen-erative grammars as first.order theories,in IL.
J. BOGDAN, L NIINILUOTO (eds.
),Logic, language and probability, Dor-drecht, 1973.
