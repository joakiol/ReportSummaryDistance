An At t r ibute -Grammar  Imp lementat ion  of  Government -b ind lng  TheoryNelson  CorreaDepartment  of Electrical and Computer  EngineeringSyracuse University111 Link HallSyracuse, NY 13244ABSTRACTThe syntactic analysis of languages with respect toGovernment-binding (GB) grammar is a problemthat has received relatively little attention untilrecently.
This paper describes an attribute grammarspecification of the Government-binding theory.
Thepaper focuses on the description of the attributionrules responsible for determining antecedent-tracerelations in phrase-structure trees, and on sometheoretical implications of those rules for the GBmodel.
The specification relies on atransformation-lem variant of Government-bindingtheory, briefly discussed by Chomsky (1981), inwhich the rule move-a is replaced by an interpretiverule.
Here the interpretive rule is specified by meansof attribution rules.
The attribute grammar iscurrently being used to write an English parserwhich embodies the principles of GB theory.
Theparsing strategy and attribute evaluation schemeare cursorily described at the end of the paper.Int roduct ionIn this paper we consider the use of attribute gram-mars (Knuth, 1968; Waite and Goos, 1984) to pro-vide a computational definition of the Government-binding theory layed out by Chomsky (1981, 1982).This research thus constitutes a move in the direc-tion of seeking specific mechanisms and realizationsof universal grammar.
The attribute grammar pro-vides a specification at a level intermediate betweenthe abstract principles of GB theory and the partic-ular automatons that may be used for parsing orgeneration of the language described by the theory.Almost by necessity and the nature of the goal setout, there will be several arbitrary decisions anddetails of realization that are not dictated by anyparticular linguistic or psychological facts, butperhaps only by matters of style and possible com-putational efficiency considerations in the final pro-duct.
It is therefore safe to assume that the partic-ular attribute grammar that will be arrived atadmits of a large number of non-isomorphic vari-ants, none of which is to be preferred over the oth-ers a priori.
The specification given here is forEnglish.
Similar specifications of the parametrizedgrammars of typologically different languages mayeventually lead to substantive generalizations aboutthe computational mechanisms employed in naturallanguages.The purpose of this research is twofold: First,to provide a precise computational definition ofGovernment-binding theory, as its core ideas aregenerally understood.
We thus begin to provide ananswer to criticisms that have recently been leveledagainst the theory regarding its lack of formal expli-citness (Gazdar et aI., 1985; PuUum, 1985).
Unlikeearlier computational models of GB theory, such asthat of Berwick and Weinberg (1984), whichassumes Marcus' (1980) parsing automaton, theattribute grammar specification is more abstractand neutral regarding the choice of parsing'auto-mata.
Attribute grammar offers a languagespecification frsxnework whose formal properties aregenerally well-understood and explored.
A secondand more important purpose of the present researchis to provide an alternate and mechanistic charac-terization of the principles of universal grammar.To the extent that the implementation is correct,the principles may be shown to follow from the sys-tem of attributes in the grammar and the attribu-tion rules that define their values.The current version of the attribute grammaris presently being used to implement an Englishparser written in Prolog.
Although the parser is notyet complete, we expect that its breath of coverageof the language will be substantially larger thanthat of other Government-binding parsers recentlyreported in the literature (Kashket (1986), Kuhns(1986), Sharp (1985), and Wehrli (1984)).
Since theparser is firmly based on Government-bindingtheory, we expect its ability to handle naturallanguage phenomena to be limited only by the accu-racy and correctness of the underlying theory.In the development below I will assume thatthe reader is familiar with the basic concepts andterminology of Government-binding theory, as wellas with attribute grammars.
The reader is referredto Sells (1985) for a good introduction to the45relevant concepts of GB theory, and to Waite andGoos (1984) for a concise presentation on attributegrammars.The  Grammat ica l  Mode l  Ass tunedFor the attribute grammar specification we assumea transformation-less variant of Government-binding theory, briefly discussed by Chomsky (1981,p.89-92), in which rule move-a is eliminated in favorof a system Ma of interpretive rules which deter-mines antecedent-trace r lations.
A more explicitpropceal of a similar nature is also made by Koster(1978).
We assume a context-free base, satisfyingthe principles of X'-theory, which generates directlystructure trees at a surface structure level ofrepresentation.
S-structure may be derived fromsurface structure by application of Ma.
The rest ofthe theory remains as in standard Government-binding (except for some obvious reformulation ofprinciples that refer to Grammatical Functions atD-Structure).The grammatical model that obtains is thatof (1).
The base generates urface structures, withphrases in their surface places along with emptycategories where appropriate.
Surface structure isidentical to S-structure, except for the fact that theassociation between moved phrases and their tracesis not present; chain indices that reveal history ofmovement in the transformational ccount are notpresent.
The interpretive system Ma, here definedby attribution rules, then applies to construct heabsent chains and thus establish the linking rela-tions between arguments and positions in the argu-ment structures of their predicates, yielding the S-structure level.
In this manner the operations form-erly carried out by transformations reduce to attri-bute computations on phrase-structure trees.
(1)Context-free baseISurface structure\ ]MaS-Structure/ \PF LFIn terpret ive  Ru leI sketch briefly how the interpretive system M~ isdefined.
Two attributes node and Chain are associ-ated with NP, and a method for functionally classi-fying empty categories in structure trees isdeveloped (relying on conditions of Government andCase-marking).
In addition, two attributes A-Chainand A-Chain are defined for every syntacticcategory which may be found in the c-commanddomain of NP.
In particular, A-Chain and A'-Chain are defined for C, COMP', S, INFL', VP, andV' (assuming Chomsky's (1986) two-level X'-system).
The meanings attached to these attributesare as follows.
Node defines a preorder enumerationof tree nodes; Chain is an integer that representsthe syntactic chain to which an NP belongs;A -Chain (A-Chain)  determines whether an argu-ment (non-argument) chain propagates across agiven node of a tree, and gives the number of thatchain, if any.Somewhat arbitrarily, and for the sake ofconcreteness, we assume that a chain is identified bythe node number of the phrase that heads the chain.For the root node, the attribution rules dic-tate A-Chain ~- X-Chain -~ O.
The two attri-butes are then essentially percolated downwards.However, whenever a lexical NP or PRO is found ina 8-position, an argument chain is started, settingthe value of A-Chain to the node number of theNP found, which is used to identify the new chain.Thus NP traces in the c-command omain of theNP are able to identify their antecedent.
Similarly,when a Wh-phrase is found in COMP specifier posi-tion, the value of A-Chain is set to the chainnumber of that phrase, and lower Wh-traces maypick up their antecedent in a similar fashion.Downwards propagation of the attributesA-Chain and A-Chain explains in a simple waythe observed c-command constraint between a traceand its antecedent.The precise statement of the attribution rulesthat implement the interpretive rule described isgiven in Appendix A.
In the formulation of theattribution rules, it is assumed that certain othercomponents of Government-binding theory havealready been implemented, in particular parts ofGovernment and Case theories, which contribute tothe functional determination of empty categories.The implementation of the relevant parts of thesesubtheories is described elsewhere (Correa, inpreparation).
We assume that all empty categoriesare base-generated, as instances of the same EC\[#p e \].
Their types are then determined structur-ally, in manner similar to the proposal made byKoster (1978).
The attributes empty, pronominal,and anaphoric used by the interpretive systemachieve a full functional partitioning of NP types(van Riemsdijk and Williams (1986), p.278); their46values are defined by attribution rules in AppendixB, relying on the values of the attributes Governorand Caees.
The values of these attributes are inturn determined by the Government and Casetheories, respectively, and indicate the relevantgovernor of the NP and grammatical Case assignedto it.The claim associated with the interpretiverule, as it is implemented in Appendix A, is thatgiven a eur\]'aee tr~eture in the sense defined above,it will derive the correct antecedent-trace relationsafter it applies.
An illustrative sample of its opera-tion is provided in (3), where the (simplified) struc-ture tree of sentence (2) is shown.
The annotationssuperscripted to the C, COMP', S, INFL', VP, andV' nodes are the A-Cha in  and A-Cha in  attri-butes, respectively.
Thus, for the root node, thevalue of both attributes is zero.
Similarly, thesuperscripts on the NP nodes represent he nodeand Chain attributes of the NP.
The last NP inthe tree, complement of 'love', thus bears nodenumber 5 and belongs to Chain 1.Some Theoret i ca l  Imp l i ca t ions :  Bound ingNodes  and  Sub jaeencyIn Government-binding theory it is assumed thatthe set of bounding nodes that a language mayselect is not fixed across human languages, but isopen to parametric variation.
Rizzi (1978) observedthat in Italian the Subjacency condition is systemat-ically violated by double Wh-extraction construc-tions, as in (4.a), if one assumes for Italian the sameset of bounding nodes as for English.
The analogousconstruction (4.b) is also possible in Spanish.
Asolution, considered by Rizzi to explain the gram-maticality of (4), is to assume that in Italian andSpanish, COMP specifier position may be "doublyfilled" in the course of a transformational deriva-tion, while requiring that it be not doubly filled (bynon-empty phrases) at S-Structure.
Thus bothmoved phrases 'a cui' and 'the storie' can move tothe lowest COMP position in the first transforma-tional cycle, while in the second cycle 'a cui' maymove to the next higher COMP and 'che storie'stays in the first COMP.
(2) Who~ did Johny seem \[ e, \[ ej to love e,\](3) c(e,o)Np(m) COMP1 (o,1)Who, COMP S (~1)did Np(~=) INFL I (2,1)John2 INFL VP (2'1)IV ~ (2,1)V C (2'1){seem Np(~n COMP~ (znCOMP S (zl) ell',I:, ('-,2) INFL Iie2(0,1)INFL VP (?
'1)I Ito V I (o,1)V NP (6'1)I Ilove el47A second solution, which is the one adoptedby Rizzi and constitutes the currently acceptedexplanation of the (apparent) Subiacency violation,is to assume that Italian and Spanish select C andNP as bounding nodes, a set different from that ofEnglish.
The first phrase 'che storie' may thenmove to the lowest COMP position in the firsttransformational cycle, while the second, 'a cui',moves in the next cycle in one step to the nexthigher position, crossing two S nodes but, crucially,only one C node.
Thus Subjaceney is satisfied if C,not S, is taken as a bounding node.
(4) a. Tuo fratello, \[a eui\]i mi domando \[chestorie\]~ abbiano raccontato ei el, era moltopreoccupato.Your brother, to whom I wonder what storiesthey have told, was very worried.b.
Tu hermano, \[a quien\]i me pregunto \[quehistorias\]i le habran contado ej el, estabamuy preocupado.The empirical data that arguably distin-guishes between the two proposed solutions is (5.a).While the "doubly filled" COMP hypothesis allowsindefinitely long Wh-chains with doubly filledCOMPs, making it possible for a wh-chain elementand its successor to skip more than one COMP posi-tion that already contains some wh-phrase, the"bounding node" hypothesis tates that at most onefilled COMP position may be skipped.
Thus, thesecond hypothesis, but not the first, correctlypredicts the ungrammaticality of (5.a).
(5) a.
* Juan, \[a quien\]i no me imagino \[cuantagente\]i ej sabe donde~ han mandado el ek,desaparecio ayer.Juan, whom I can't imagine how many peopleknow where they have sent, disappeared yes-terday.b.
La Gorgona, \[a donde\]i no me imagino\[cuanta gente\]j ej sabe \[a quienes\], hanmandado et el, es una bella isla.La Gorgona, to where I can't imagine howmany people know whom they have sent, is abeautiful island.One mi~t  observe, however, that (5.a), evenif it satisfies subjacency, violates Peseteky's (1982)Path Containment Condition (PCC).
Thus, on thesegrounds, (5.a) does not decide between the twohypotheses.
The grammaticality of (5.b), on theother hand, which is structurally similar to (5.a) butsatisfies the PCC, argues in favor of the "doublyfilled" COMP hypothesis.
The wh-phrase 'a donde'moves from its D-Structure position to the surfaceposition, skipping two intermediate COMP posi-tions.
This is possible if we assume the doubly filledCOMP hypothesis, and would violate Subjacencyunder the alternate hypothesis, even if C is taken asthe bounding node.
We expect a similar pattern(5.b) to be also valid in Italian.Movement across doubly filled COMP nodes,satisfying Pesetsky's (1982) Path Containment Con-dition, may be explained computationally if weassume that the type of the A -Chain attribute onchain nodes is a last-in/first, out (lifo) stack ofintegers, into which the integers identifying ,~-chainheads are pushed as they are first encountered, andfrom which chain identifiers are dropped as thechains are terminated.
If we further assume thatthe type of the attribute is universal, we mayexplain the typological difference between Italianand English, as it refers to the Subjacency condi-tion, by assuming the presence of an A-Chainatack depth bound, which is parametrized by univer-sal grammar, and has the values 1 for English, and2 (or possibly more) for Italian and Spanish.To conclude this section, it is worth to reviewthe manner in which the subjacency facts areexplained by the present attribute grammar imple-mentation.
Notice first that there is no particularset of categories in the theory that have beendeclared as Bounding categories.
There is no specialprocedure that checks that the Subjacency condi-tion is actually satisfied by, say, traversing pathsbetween adjacent chain elements in a tree andcounting bounding nodes.
Instead, the facts followfrom the attribution rules that determine the valuesof the attributes A-Chain and X-Chain.
Thiscan be verified by inspection of the possible cases ofmovement.Thus, NP-movement is from object or INFLspecifier position to the nearest INFL specifier whichc-commands the extraction site.
Similarly, Wh-movement is from object, INFL specifier, or COMPspecifier position to the nearest c-commandingCOMP specifier.
If the bound on the depth of theA-Chain stack is 1, either S or COMP' (but notboth) may be taken as bounding node, and Wh-island phenomena re observable.
If the bound is 2or greater, then C is the closest approximation to abounding node (although cf.
(5.b)), and Wh-islandviolations which satisfy the PCC are possible.
NPis a bounding node as a consequence of the strongcondition that no chain spans across an NP node,which in turn is a consequence of the rules (ii.e) inAppendix A.48Parser  Imp lementat ionA prototype of the English parser is currently beingdeveloped using the Prolog logic programminglanguage.
As mentioned in the introduction, theattribute grammar specification is neutral regardingthe choice of parsing automaton.
Thus, severalsuitable parser construction techniques (Aho andUllman, 1972) may be used to derive a parser.
Thecontext-free base used by the attribute grammar isan X'-grammar, essentially as in Jackendoff (1977),although some modifications have been made.
Inparticular, following Chomsky (1986) we assumethat maximal projections have uniformly bar-level 2and that S is a projection of INFL, not V, as Jack-endoff assumes.
The base, due to left-recursion inseveral productions, is not LR(k), for any k.We have developed a parser which is essen-tially LL(1), and incorporates a stack depth boundwhich is linearly related to the length of the inputstring.
Prolog's backtracking mechanism providesthe means for obtaining alternate parses of syntacti-cally ambiguous sentences.
The parser performs rea-sonably well with a good number of constructionsand, due to the stack bound, avoids potentiallyinfinite derivations which could arise due to theapplication of mutually recursive rules.
Attributesare implemented by logical variables which are asso-ciated with tree nodes (cf.
Arbab, 1986).
Most attri-butes can be evaluated in a preorder traversal of theparse tree, and thus attribute evaluation may becombined with LL(1) parser actions.
Notable excep-tions to this evaluation order are the attributesGovernor, Cases, and Os associated with the NP  inINFL specifier position.
The value of these attri-butes cannot be determined until the main verb ofthe relevant clause is found.Conc lus ionsWe have presented a computational specification ofa fragment of Government-binding theory withpotentially far-reaching theoretical and practicalimplications.
From a theoretical point of view, thepresent attribute grammar specification offers afairly concrete framework which may be used tostudy the development and stable state of humanlinguistic competence.
From a more practical pointof view, the attribute grammar serves as a Startingpoint for the development of high quality parsers fornatural languages.
To the extent that thespecification is explanatorily adequate, the languagedescribed by the grammar (recognized by theparser) may be changed by altering the values ofthe universal parameters in the grammar andchanging the underlying lexicon.AcknowledgementsI would like to thank my dissertation advisor, JaklinKornfilt, for helpful and timely advise at all stagesof this research.
Also, I wish to thank ananonymous ACL reviewer who pointed out the simi-laxity of the grammatical model I assume to thatproposed by Koster (1978), Mary Laughren andBeth Levin for their discussion and commentary onrelated aspects of this research, Ed Barton, whokindly made available some of the early literatureon GB parsing, Mike Kashket for some critical com-ments, and Ed Stabler for his continued support ofthis project.
Support for this research has been pro-vided in part by the CASE Center at SyracuseUniversity.ReferencesAho, A.V., and J.D.
Ullman.
1972.
The Theory ofParsing, Translation and Compiling.Prentice-Hall, Englewood Cliffs, NJArbab, Bijan.
1986.
"Compiling Circular AttributeGrammars into Prolog."
IBM Journal ofResearch and Development, Vol.
30, No.
3,May 1986Berwick, Robert and Amy Weinberg.
1984.
TheGrammatical Basis of Linguistic Perfor-mance.
The MIT Press.
Cambridge, MAChomsky, Noam.
1981.
Lectures on Governmentand Binding.
Foris Publications.
DordreehtChomsky, Noam.
1982.
Some Concepts and Conse-quences of the Theory of Government andBinding.
The MIT Press.
Cambridge, MAChomsky, Noam.
1986.
Barriers.
The MIT Press.Cambridge, MACorrea, Nelson.
In preparation.
Syntactic Analysisof English with respect to Government-binding Grammar.
Ph.D. Dissertation, Syra-cuse UniversityGazdar, Gerald, Ewin Klein, Geoffrey Pullum, andIvan Sag.
1985.
Generalized Phrase StructureGrammar.
Harvard University Press.
Cam-bridge, MAJaekendoff, Ray.
1977.
X Syntaz: A Study o/Phrase Structure.
The MIT Press.
Cambridge,MAKashket, Michael.
1986.
"Parsing a Free-wordOrder Language: Walpiri."
Proceedings of the24th Annual Meeting o/ the Association /or49Computational Linguistics, p.60-66.Knut:h, Donald E. 1968.
"Semantics of Context-freeLanguages."
In Mathematical Systems Theory,Vol.
2, No.
2, 1968Koster, Jan. 1978.
"Conditions, Empty Nodes, andMarkedness."
Linguistic Inquiry, Vol.
9, No.4.Kuhns, Robert.
1986.
"A PROLOG Implementationof Government-binding Theory."
Proceedingeof the Annual Conference of the EuropeanChapter of the Association for ComputationalLinguistics, p.546-550.Marcus, Mitchell.
1980.
A Theory of SyntacticRecognition for Natural Language.
The MITPress.
Cambridge, MAPesetsky, D. 1982.
Paths and Categories.
Ph.D.Dissertation, MITPullum, Geoffrey.
1985.
"Assuming Some Vemionof the X-bar Theory."
Syntax ResearchCenter, University of California, Santa CruzRizzi, Luigi.
1978.
"Violations of the Wh-lslandConstraint in Italian and the SubjacencyCondition."
Montreal Working Papers inLinguistics 11Sells, Peter.
1985.
Lectures on Contemporary S n-tactic Theories.
Chicago University Press.Chicago, IllinoisSharp, Randall M. 1985.
A Model of GrammarBaaed on Principles of Government and Bind-ing.
M.Sc Thesis, Department of ComputerScience, University of British Columbia.October, 1985Van Riemsdijk, Honk and Edwin Williams.
1986.
AnIntroduction to the Theory of Grammar.
TheMIT Press.
Cambridge, MAWaite, Will iam M. and Gerhard Coos.
1984.
Com-piler Construction.
Springer-Verlag.
NewYorkWehrli, Erie.
1984.
"A Government-binding Parserfor French."
Institut pour les Etudes Seman-tiques et Cognitives, Universite de Geneve.Working Paper No.
48Append ix  A:  The Cha in  Ru lei.
Genera l  rule and condi t ionattributior~:NP.Chain .-- if NP.empty ---- '-' then NP.nodeelse if NP.pronominal - -  '+ 'then NP.nodeelse if NP.anaphoric = '+'then NP.A-Chainelse N'P.A- Chaincondition:NP.Chain # 0ii.
P roduct ionsa.
Start productionZ -*Cattribution:C.A-Chain *-- 0C.X-Chain ,-- 0b.
COMP productionsC --, COMP'attribution:COMP'.x ~ C.x, for x = A-Chain, X-Chaincondition:C.A-Chain = 0 "C~NP COMP'ottribution:NP.x *- C.x, for x ~ A-Chain, ~-Cha inCOMP'.A-Chain ,-- C.A-ChainCOMP' .A-Chain  ~- NP.Chaincondition:NP.Wh = '+ 'COMP' --* COMP Sattribution:S.x *-- COMF'.x, for x ---- A-Chain, A -Chaine.
INFL productionsS ~ NP INFL'attribution:NP.x ~- S.x, for x = A-Chain, A-ChainINFL'.A-Chainif NP.as = 'nil'then NP.Chain else 0INFL'A -Chain *--if NP.Chain = S.X-Chainthen 0 else S.A-Chain50INFL'  --* INFL  VPattribution:VP.x *- INFL' .x,  for x =- A-Chain,A -Chaind.
V productionsVP-- .
V'attribution:V'.x *-- VP.x, for x ----- A-Chain,  A -Cha inV'--* V NPattribution:NP.x *-- V'.x, for x -~ A-Chain,  .W.-ChainV'---, V Cattribution:C.x *-- V'.x, for x ---- A-Chain,  A -ChainV'--* V NP  Cattribution:NP.x *-- V'.x, for x ---- A-Chain,  A -Cha inC.A-Chain *-- 0C7 ,  -Chainif NP.Chain = V'.A -Chainthen 0 else V' .
 -Chaine.NN I : '~N '~productions(/VP ~) N'attribution:NP~-A-Chain  ~- 0NP2.~-Cha in  *- 0N (PP) (C)attribution:PP-A-Cha in  *-- 0PP .
/T -Cha in  *-- 0C-A-Chain ~ 0C .A ' -Cha in  *- 0Append ix  B :  Funct iona l  determinat ion  o fNPi.
General  RulesatCrib ution:NP.pronominalif NP .empty  = '-' then N'.pronominalelse if NP.Governor = <0,'nil'> then '+'else '-'NP.anaphoricif NP .empty  = '-' then N'.anaphoricelse if NP.
Whs ~- '+' then '-'else if NP.Governor = <0,'nil'>then '+'else if NP.
Cases ~ 'nil' then '+'else '-'ii.
Product ionsNP-*~attributionNP.empty  *-- '+ 'NP --* (Spec) N'attributionNP.empty  4--- '-'51
