A Unicode based Adaptive SegmentorQ.
Lu, S. T. Chan, R. F. Xu, T. S. ChiuDept.
Of Computing,The Hong Kong Polytechnic University,Hung Hom, Hong Kong{csluqin,csrfxu}@comp.polyu.edu.hkB.
L. Li, S. W. YuThe Institute of Computational Linguistics,Peking University,Beijing, China{libi,yusw}@pku.edu.cnAbstractThis paper presents a Unicode basedChinese word segmentor.
It can handleChinese text in Simplified, Traditional, ormixed mode.
The system uses the strategyof divide-and-conquer to handle therecognition of personal names, numbers,time and numerical values, etc in the pre-processing stage.
The segmentor furtheruses tagging information to work ondisambiguation.
Adopting a modulardesign approach, different functional partsare separately implemented usingdifferent modules and each moduletackles one problem at a time providingmore flexibility and extensibility.
Resultsshow that with added pre-processingmodules and accessorial modules, theaccuracy of the segmentor is increasedand the system is easily adaptive todifferent applications.1 IntroductionThe most difficult problem in Chinese wordsegmentation is due to overlapping ambiguities [1-2].
The recognition of names, foreign names, andorganizations are quite unique for Chinese.
Somesystems can already achieve very high accuracy [3],but they heavily rely on manual work in getting thesystem to be trained to work certain languageenvironment.
However, for many applications, weneed to look at the cost to achieve high accuracy.In a competitive environment, we also need tohave systems that are quickly adaptive to newrequirements with limited resources available.In this paper, we report a Unicode based Chineseword segmentor.
The segmentor can handleChinese text in Simplified, Traditional, or mixedmode where internally only one dictionary isneeded.
The system uses the strategy of divide-and-conquer to handle the recognition of personalnames, numbers, time and numerical values.
Thesystem has a built-in new word extractor that canextract new words from running text, thus savetime on training and getting the system quicklyadaptive to new language environment.
TheBakeoff results in the open text for our system inall categories have shown that it works reasonablygood for all different corpora.The rest of the paper is organized as follows.Section 2 presents our system design objectivesand components.
Section 3 discusses moreimplementation details.
Section 4 gives someperformance evaluations.
Section 5 is theconclusion.2 Design Objectives and ComponentsWith the wide use of Unicode based operatingsystems such as Window 2000 and Window XP,we now see more and more text data written inboth the Simplified form and the Traditional formto co-exist on the same system.
It is also likely thattext written in mixed mode.
Because of this reality,the first design objective of this system is its abilityto handle the segmentation of Chinese text writtenin either Simplified Chinese, Traditional Chinese,or mixed mode.
As an example, we should be ableto segment the same sentence in different formssuch as the example given below:The second design objective is to adopt themodular design approach where differentfunctional parts are separately implemented usingindependent modules and each module tackles oneproblem at a time.
Using this modular approach,we can isolate problems and fine tune each modulewith minimal effect on other modules in the system.Special features like adding new rules or newdictionary can be easily done without affectingother modules.
Consequently, the system is moreflexible and can be easily extended.The third design objective of the system is to makethe segmentor adaptive to different applicationdomains.
We consider it having more practicalvalue if the segmentor can be easily trained usingsome semi-automatic process to work in differentdomains and work well for text with differentregional variations.
We consider it essential thatthe segmentor has tools to help it to obtain regionalrelated information quickly even if annotatedcorpora are not available.
For instance, when itruns text from Hong Kong, it must be able torecognize the personal names such as  ifsuch a name(quadra-gram) appears in the text often.Figure 1.
System componentsFigure 1 shows the two major components, thesegmentor and data manager.
The segmentor is thecore component of the system.
It has a pre-processor, the kernel, and a post-processor.
As thesystem has to maintain a number of tables such asthe dictionaries, family name list, etc., a separatecomponent called data manager is responsible inhandling the maintenance of these data.
The pre-processor has separate modules to handleparagraphs, ASCII code, numbers, time, andproper names including personal names, place andorganizational names, and foreign names.
Thekernel supports different segmentation algorithms.It is the application or user?s choice to invoke thepreferred segmentation algorithms that at currenttime include the basic maximum matching andminimum matching in both forward and backwardmode.
These can also be used to build morecomplicated algorithms later on.
In addition, thesystem provides segmentation using part-of-speechtagging information to help resolve ambiguity.
Thepost-processor applies morphological rules whichcannot be easily applied using a dictionary.The data manager helps to maintain the knowledgebase in the system.
It also has an accessorysoftware called the new word extractor which cancollect statistical information based on characterbi-grams, tri-grams and quadra-grams to semi-automatically extract words and names so that theycan be used by the segmentor to improveperformance especially when switching to a newdomain.
Another characteristic of this segmentor isthat it provides tagging information for segmentedtext.
The tagging information can be optionallyomitted if not needed by an application.3 Implementation DetailsThe basic dictionary of this system was providedby Peking University [4] and we also used thetagging data from [4].
The data structure for ourdictionaries are very similar to that discussed in [5].As our program needs to handle both Simplifiedand Traditional Chinese characters, Unicode is theonly solution for dealing with more than one scriptat the same time.Even though it is our design objective to supportboth Simplified and Traditional Chinese, we do notwant to keep two different sets of dictionaries forSimplified and Traditional Chinese.
Even if twoversions are kept, it would not serve well for textin mixed mode.
For example, Traditional Chineseword of ?the day after tomorrow?
should be ,and for Simplified Chinese, it should be .However sometimes we can see the wordappears in a Traditional Chinese text.
We cannotsay that it is wrong because the sentence is stillsemantically correct especially in Unicodeenvironment.
Therefore the segmentor should beable to segment those words correctly such as inthe examples: ?
?, and in ??.
We must also deal with dictionarymaintenance related to Chinese variants.
Forexample, characters  are variants, so are.Data manager SegmentorPre-ProcessorKernelPostProcessorNew WordExtractorKnowledge-baseIn order to keep the dictionary maintenance simple,our system uses a single dictionary which onlykeeps the so called canonical form of a word.
Inour system, the canonical form of a word is its?simplified form?.
We quoted the word?simplified?
because only certain characters havesimplified forms such as  to , but for, there is no simplified form.
In the case ofvariants, we simply choose one of them as thecanonical character.
The canonical characters aremaintained in the traditional-simplified characterconversion table as well as in a variant table.Whenever a new word, item, is added into thedictionary, it must be added using a functionCanonicalConversion(), which takes item as aninput.
During segmentation, the correspondingdictionary look up function will first convert thetoken to its canonical form before looking up in thedictionary.The personal name recognizers (separate forChinese names and foreign names) use themaximum-likelihood algorithm with considerationof commonly used Chinese family names, givennames, and foreign name characters.
It works forChinese names of length up to 5 characters.
In thefollowing examples you can see that our systemsuccessfully recognized the name .
Thisis done using our algorithm, not by putting hername in our dictionary:Organization names and place names arerecognized mainly using special purposedictionaries.
The segmentor uses tagginginformation to help resolve ambiguity.
Thedisambiguation is mostly based on rules such asp + (n + f) -> p + n + fwhich would word to correctFor efficiency reasons, our system uses only about20 rules.
The system is flexible enough for newrules to be added to improve performance.The new word extractor is an accessory program toextract new words from running text based onstatistical data which can either be grabbed fromthe internet or collected from other sources.
Thebasic statistical data include bi-gram frequency, tri-gram frequency, and quadra-gram frequencies.
Inorder to further example whether a bi-gram, say, is indeed a word, we further collect forwardconditional frequency of  , andthe back-ward conditional frequency of ,.
For an i-gram token, we alsouse the (i+1)-gram statistics to eliminate those i-grams that are only a part of (i+1) ?
gram word.For instance, if the frequency of bi-gram  isvery close to the frequency of tri-gram , itis less likely that  is a word.
Of course,whether  is a word depends on quadra-gramresults.
Using the statistical result, a set of ruleswas applied to these i-grams to eliminate entriesthat are not considered new words.
Minimalmanual work is required to identify whether theremaining candidates are new words.
Before wordsare added into the dictionary, part-of-speechinformation are added manually (although notnecessary) before using the canonical function.The following table shows examples of bi-gramswhich are found by the new word extractor usingone year Hong Kong Commercial Daily News data.4 Performance EvaluationThe valuation metrics used in [6] were adoptedhere.13NNrecall =     (1)23NNpresicion =     (2)precisionrecallprecisionrecallrecallprecisionF +?
?= 2),(1   (3)where N  1  denotes the number of words in theannotated corpus, N 2 denotes the number of wordsidentified by the segmentation algorithm , and N 3 isthe number of words correctly identified.We participated in the open tests for all fourcorpora.
The results are shown in the followingtable.The worst performance in the 4 tests were for theCTB(UPenn) data.
From the observation from thetesting data, we found that the main problem withhave with CTB data is the difference in wordgranularity.
To confirm our observation, we havedone an analysis of combining errors andoverlapping errors.
The results show that the ratiosof combining errors in all the error types are0.8425(AS), 0.87684(CTB), 0.82085(HK), and0.77102(PK).
The biggest problem we have withAS data, on the other hand is due to out ofvocabulary mistakes.
Even though our new wordextractor can help us to reduce this problem, butwe have not trained our system using data fromTaiwan.
Our best performance was on PK databecause we used a very similar dictionary.
Theadditional training of data for HK was done usingone year Commercial Daily( ).The following table summarizes the executionspeed of our program for the 4 differentsources:Data No.
ofcharsProcessing Time(sec.
)Processing Rate(char/sec)Segmentation Rate(char/sec)AS 18,743 4.703 3,985 7,641CTB 62,332 10.110 6,165 7,930HK 57,432 10.329 5,560 7,109PK 28,458 4.829 5,893 10,970The program initialization needs around 2.25seconds mainly to load the dictionaries and otherdata into the memory before the segmentation canstart.
If we only count the segmentation time, therate of segmentation on the average is around7,500 characters for the first three corpora.
Itseems that the processing speed for Peking U. datais faster.
This may be because the dictionaries weused are closer to the PK system, thus it wouldtake less time to work on disambiguation.5 ConclusionIn this paper, design and algorithms of a general-purposed Unicode based segmentor is proposed.
Itis able to process Simplified and TraditionalChinese appear in the same text.
Sophisticated pre-processing and other auxiliary modules helpsegmenting text more accurately.
User interactionsand modules can be easily added with the help ofits modular design.
A built-in new word extractoris also implemented for extracting new words fromrunning text.
It saves much time on training andthus it can be quickly adapted to new environments.AcknowledgementWe thank the PI of ITF Grant by ITC ofHKSARG (ITS/024/01) entitled: Towards Cost-Effective E-business in the News Media &Publishing Industry for the use of HK CommercialDaily.References[1] Automatic Segmentation and Tagging for ChineseText ( ) , K.Y.
Liu,Commercial Press, 2000[2] Segmentation Issues in Chinese InformationProcessing,  (C.N.
Huang Issue No.1, 1997)[3] The design and Implementation of a Modern GeneralPurpose Segmentation System (B. Lou,  R. Song, W.L.Li, and Z.Y.
Luo, Journal of Chinese InformationProcessing, Issue No.
5, 2001)[4] (Institute ofComputational Linguistics, Peking Univ., 2002)[5]Journal of Chinese informationprocessing vol.
14, no.
1, 2001)[6] Chinese Word Segmentation and InformationRetrieval, Palmer D., and Burger J., In AAAISymposium Cross-Language Text and SpeechRetrieval 1997
