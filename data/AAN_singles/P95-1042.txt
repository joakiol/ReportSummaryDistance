CONSTRAINT-BASED EVENT RECOGNIT ION FORINFORMATION EXTRACTIONJeremy Crowe*Department of Artificial IntelligenceEdinburgh UniversityEdinburgh, EH1 1HNUKj.crowe@ed.ac.ukAbstract Event recognitionWe present a program for segmenting texts ac-cording to the separate vents they describe.A modular architecture is described that al-lows us to examine the contributions made byparticular aspects of natural language to eventstructuring.
This is applied in the context ofterrorist news articles, and a technique is sug-gested for evaluating the resulting segmenta-tions.
We also examine the usefulness of vari-ous heuristics in forming these segmentations.IntroductionOne of the issues to emerge from recent evaluations ofinformation extraction systems (Sundheim, 1992) is theimportance ofdiscourse processing (Iwafiska et al, 1991)and, in particular, the ability to recognise multiple ventsin a text.
It is this task that we address here.We are developing a program that assigns message-level event structures to newswire texts.
Although theneed to recognise vents has been widely acknowledged,most approaches to information extraction (IE) performthis task either as a part of template merging late inthe IE process (Grishman and Sterling, 1993) or, in afew cases, as an integral part of some deeper easoningmechanism (e.g.
(Hobbs et al, 1991)).Our approach is based on the assumption that dis-course processing should be done early in the informa-tion extraction process.
This is by no means a new idea.The arguments in favour of an early discourse segmen-tation are well known - easier coreference of entities, areduced volume of text to be subjected to necessarilydeeper analysis, and so on.Because of this early position in the IE process, anevent recognition program is faced with a necessarilyshallow textual representation.
The purpose of our workis, therefore, to investigate the quality of text segmenta-tion that is possible given such a surface form.
*I would like to thank Chris Mellish and the anony-mous referees for their helpful comments.
Supported bya grant from the ESRC.What  is an  event?If we are to distinguish between events, it is importantthat we know what they look like.
This is harder thanit might at first seem.
A closely related (though notidentical) problem is found in recognising boundaries indiscourse, and there seems to be little agreement in theliterature as to the properties and functions they pos-sess (Morris and Hirst, 1991), (Grosz and Sidner, 1986).Our system is aimed at documents typified by thosein the MUC-4 corpus (Sundheim, 1992).
These dealwith Latin American terrorist incidents, and vary widelyin terms of origin, medium and purpose.
In the taskdescription for the MUC-4 evaluation, two events aredeemed to be distinct if they describe either multipletypes of incident or multiple instances of a particulartype of incident, where instances are distinguished byhaving different locations, dates, categories or perpetra-tors.
(NRaD, 1992)Although this definition suffers from a certain amountof circularity, it nonetheless points to an interesting fea-ture of events at least in so far as physical incidents areconcerned.
It is generally the case that such incidents dopossess only one location, date, category or description.Perhaps we can make use of this information i  assigningan event-segmentation o a text?Cur rent  approachesAs an IE system processes a document, it typically cre-ates a template for each sentence (Hobbs, 1993), a frame-like data structure that contains a maximally explicitand regularised representation f the information thesystem is designed to extract.
Templates are mergedwith earlier ones unless they contain incompatible slot-fills.Although more exotic forms of event recognition existat varying levels of analysis (such as within the abductivereasoning mechanism of SRI's TACITUS system (Hobbset al, 1991), in a thesaurus-based l xical cohesion algo-rithm (Morris and Hirst, 1991) and in a semantic net-work (Kozima, 1993)), template merging is the mostused method.296Modular  const ra int -based eventrecognit ionThe system described here consists of (currently) threeana lys i s  modu les  and  an event  manager  (see figure 1).Two of the analysis modules perform a certain amountof island-driven parsing (one extracts time-related infor-mation, and the other location-related information), andthe third is simply a pattern marcher.
They are designedto run in parallel on the same text.\[ PREPRO ', IF)  I ANAL  YSIS ))i)i)E)\[ ANAL YSIS I)E)i)E)( ANAL YSIS I~::i): .
: .
: .
: .
: .
: .
: .
: .
: .
: .
: .
: .
: .
: .
: , : , : .
: .
: .
: .
: .
: .
: , : , : .
: .
: .
: .
: .
: .
: .
: .
: .
:.:.:.:..:...:.:.
: .:.-.:.:.
:.-.- , , .
, .
.
.ti!i!iiiiiiii!
!iiiiiiiiiiiiiiiiiiiiiiiiiUiiMiiiiiiiill  VE.T  iiiiil)))i)))i)ii)i)))i)ii\] MAN~ER ~ ~ i !
i iEEEEEEE~E~i~E\]EEEiIE\]E!EEEEEEEEEEEE!EEi6iiiii 6 6iiiii~ CLAUSE \[EEEI ) IE SYSTEM m?
.
.
.
.
.
.
IFigure 1: System architectureEvent  managerThe role of the event manager is to propose an eventsegmentation f the text.
To do this, it makes use of theconstraints it receives from the analysis modules com-bined with a number of document-structuring heuristics.Many clauses ("qulet clauses") are free from constraintrelationships, and it is in these cases that the heuristicsare used to determine how clauses hould be clustered.A text segmentation can be represented asa grid withclauses down one side, and events along the other.
Fig-ure 2 contains a representation f a sample news text,and shows how this maps onto a clause/event grid.
Thephrases overtly referring to time and location have beenunderlined.A klvdP $ Iool nil~N h dovmlallTldo ~ oh0, ~ lnwldma 3 de,asaMno wgm~ e iK~Wem -'aJloa~ Rs  dnn,nl~d.
'1"~ v,jhldo~D ~ -t-- doanw0od.V,.cwWlaf',m ~ w~ ocedw, we4 ~cigl~telo, InaCAma, ~npJ o,o~a~id0~ll Im?
I~Itoe,daNhmt,Eventsim..'tS'F'"F~ .
.
.
.
J t  I *~* .
., 0 , , t TTI - .
_t i !
!
imL .FT TI...'/~y--y..~.
.
.
.
?oWm~ll~fL.~PiY .*.
'"..": .
.
.
.
.
: .
.
.
.~ .
.
.
.
j \ [~ba-Blnaty  eb 'Mg:  0011100011100111000011011110Figure 2: Example text segmentationAnalysis modulesThe fragments of natural anguage that represent timeand location are by no means trivial to recognise, letalone interpret.
Consequently, and in keeping with thefast and shallow approach we have adopted, the range ofspatio-temporal concepts the program handles has beenrestricted.?
For example, the semantic omponents of both mod-ules know about points in time/space only, and notabout durations.
There are practical and theoreticalreasons for this policy decision - the aim of the systemis only to distinguish between events, and though theability to represent durations is in a very few situationsuseful for this task, the engineering overheads in incor-porating a more complex reasoning mechanism ake itdifficult to do so within such a shallow paradigm.The first two analysis modules independently assignexplicit, regularised PATR-like representations to thetime- and location-phrases they find.
Graph unificationis then used to build a set of constraints determiningwhich clauses 1 in a text can refer to the same event.
Eachmodule then passes its constraints o the event manager.The third module identifies sentences containing asubset of cue phrases.
The presence of a cue phrase ina sentence is used to signal the start of a (totally) newevent.IA clause in this case is delimited in much the sameway as in Hobbs et als terminal substring parser (Hobbset al, 1991), i.e.
by commas, relative pronouns, someconjunctions and some forms of that .Structuring strategiesAlthough the legal event assignments for a particularclause may be restricted by constraints, there may stillbe multiple events to which that clause can he assigned.Three structuring strategies are being investigated.The first dictates that clauses hould be assigned to thelowest non-conflicting event value; the second favoursnon-confllcting event values of the most recently assignedclauses.
The third strategy involves a mix of the above,favouring the event value of the previous clause, followedby the lowest non-conflicting event values.HeuristicsVarious heuristics are used to gel together quietclauses in the document.
The first heuristic operatesat the paragraph level.
If a sentence-iuitial clause ap-pears in a sentence that is not paragraph-initial, thenit is assigned to the same event as the first clause inthe previous sentence.
We are therefore making someassumptions about the way reporters tructure their ar-ticles, and part of our work will be to see whether suchassumptions are valid ones.The second heuristic operates in much the same wayas the first, but at the level of sentences.
It is based onthe reasoning that quiet clauses hould be assigned to thesame event as previous clauses within the sentence.
Assuch, it only operates on clauses that are not sentence-initial.Finally, a third heuristic is used which identifies im-ilarities between sentences based on n-gram frequen-cies (Salton and Buckley, 1992).
Areas to investigateare the optimum value for n, the effect of normalization297on term vector calculation, and the potential advantagesof using a threshold.This heuristic also interacts with the text structuringstrategies described above; when it is activated, it canbe used to override the default strategy.Experiments and evaluationWhilst the issue of evaluation of information extractionin general has been well addressed, the evaluation ofevent recognition in particular has not.
We have deviseda method of evaluating segmentation grids that seems toclosely match our intuitions about the "goodness" of agrid when compared to a model.The system is being tested on a corpus of 400 messages(average length 350 words).
Each message is processedby the system in each of 192 different configurations (i.e.wlth/without paragraph euristic, varying the cluster-ing strategy etc.
), and the resulting grids are convertedinto binary strings.
Essentially, each clause is comparedasymmetrically with each other, with a "1" denoting adifference in events, and a "0" denoting same events.Figure 2 Shows an example of a binary string corre-sponding to the grid in the same figure.
Figure 3 shows aparticular 4-clause grid scored against all other possible4-clause grids, where the grid at the top is the intendedcorrect one, and the scores reflect degrees of similaritybetween relevant binary strings.100%I i?1 -Figure 3: Comparison of scores for a 4-clause gridIn order to evaluate these computer generated grids,a set of manually derived grids is needed.
For the finalevaluation, these will be supplied by naive subjects o asto minimise the possibility of any knowledge of the pro-gram's techniques influencing the manual segmentation.Conc lus ions  and  fu ture  workWe have manually segmented 100 texts and have com-pared them against computer-generated grids.
Scoringhas yielded some interesting results, as well as suggestingfurther areas to investigate.The results show that fragments of time-oriented lan-guage play an important role in signalling shifts inevent structure.
Less important is location information- in fact, the use of such information actually resultsin a slight overall degradation of system performance.Whether this is because of problems in some aspect ofthe location analysis module, or simply a result of theway we use location descriptions, is an area currentlyunder investigation.The paragraph and clause heuristics also seem to beuseful, with the omission of the clause heuristic ausing aconsiderable degradation i  performance.
The contribu-tions of n-gram frequencies and the cue phrase analysismodule are yet to be fully evaluated, although early re-sults axe encouraging.It therefore seems that, despite both the shallow levelof analysis required to have been performed (the programdoesn't know what the events actually are) and our sim-plification of the nature of events (we don't know whatthey really are either), a modular constraint-based ventrecognition system is a useful tool for exploring the useof particular aspects of language in structuring multipleevents, and for studying the applicability of these aspectsfor automatic event recognition.Re ferencesRalph Grishm~n and John Sterling.
1993.
Descriptionof the Proteus system as used for MUC-5.
In Proc.MUC-5.
ARPA, Morgan Kaufmann.Barbara Grosz and Candy Sidner.
1986.
Attention,intensions and the structure of discourse.
Computa-tional Linguistics, 12(3).Jerry R Hobbs, Douglas E Appelt, John S Bear, MabryTyson, and David Magerman.
1991.
The TACITUSsystem.
Technical Report 511, SRI.Jerry R Hobbs.
1993.
The generic information extrac-tion system.
In Proc.
MUC-5.
ARPA, Morgan Kauf-mann.Lucia lwadska, Douglas Appelt, Damarls Ayuso, KathyDahlgren, Bonnie Glover Stalls, Ralph Grishman,George Krupka, Christine Montgomery, and EllenPdloff.
1991.
Computational aspects of discourse inthe context of MUC-3.
In Proc.
MUC-3, pages 256-282.
DARPA, Morgan Kanfmann.Hideki Kozima.
1993.
Text segmentation based on sim-ilarity between words.
In Proc.
A CL, student session.Jane Morris and Graeme Hirst.
1991.
Lexical cohe-sion computed by thesaural relations as an indicatorof the structure of text.
Computational Linguistics,17(1):21-42.NRaD.
1992.
MUC-4 task documentation.
NRaD (pre-viously Naval Ocean Systems Center) On-line docu-ment.Gerald Salton and Chris Buckley.
1992.
Automatic textstructuring experiments.
In Paul S Jacobs, editor,Tezt-Based Intelligent Systems, chapter 10, pages 199-210.
Lawrence Erlbaum Associates.Beth M Sundheim.
1992.
Overview of the fourthmessage understanding conference.
In Proc.
MUC-4,pages 3-21.
DARPA, Morgan Kaufmann.298
