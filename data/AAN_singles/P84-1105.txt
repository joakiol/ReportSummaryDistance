LANGUAGE GENERATION FROM CONCEPTUAL STRUCTURE:SYNTHESIS OF GERMAN IN A JAPANESE/GERMAN MT PROJECTJ.
Laubsch, D. Roesner, K. Hanakata, A. LesniewskiProjekt SEMSYN, Institut fuer Informatik, Universitaet StuttgartHerdweg 51, D-7000 Stuttgart i, West GermanyThis paper idescribes the current state of theS~/~gYN project , whose goal is be develop a modulefor generation of German from a semanticrepresentation.
The first application of thismodule is within the framework of a Japanese/Germanmachine translation project.
The generation processis organized into three stages that use distinctknowledge sources.
~ne first stage is conceptuallyoriented and language independent, and exploitscase and concept schemata.
The second stage e~ploysrealization schemata which specify choices to mapfrom meaning structures into German linguisticconstructs.
The last stage constructs the surfacestring using knowledge about syntax, morphology,and style.
This paper describes the first twostages.INTRO\[X~TION~ ' s  generation module is developed within aGerman/Japanese MT project.
FUjitsu Research Labs.provide semantic representations that are producedas an interim data structure of their Ja-panese/English MT system ATLAS/II (Uchida &Sugiyama, 1980).
~ne feasibility of the approach ofusing a semantic representation as an interlinguain a practical application will be investigated anddemonstrated by translating titles of Japanesepapers from the field of "Information Technology".This material comes from Japanese documentationdata  bases and contains in addition to titles alsotheir respective abstracts.
Our design of thegeneration component is not limited to titles, buttakes extensibility to abstracts and full textsinto account.
The envisioned future application ofa Japanese/German translation system is to providenatural language access to Japanese documentationdata bases.OVERALL DESIGN CFFig.
1 shows the stages of generation.
TheJapanese text is processed by the analysis part ofFtUI"TS~'s ATLAS/II system.
Its output is a semanticnet which serves as the input for our system.1 ~ is an acronym for semantic synthesis.
Theproject is funded by the "Informationslinguistik"program of the Ministry for Research and Technology(BM~T), FRG, and is carried out in cooc~ration with~JJITSU Research Laboratories, Japan.II .gem antic netstage 1 ~rATLAS/II analysis stage- ~ generation stagesKnowledge base relatingsemantic symbols to case-schemata for verb concept~and amuept-schemata for #~n ~ IInstantiatedKnowledge Base, Schema (l\]~)stage 2 1InstantiatedRealizationSchema (IRS)I Generator front end:stage 3 I style, syntax, and{ sociologyRules for selectingrealization-schemata,specifying syntacticcategories and functionalrolesFig.
1 Stages of Generation491CONCEPTUAL STRUCTUREATLAS/II's semantic networks (see Fig.2)are directed graphs with named nodes andlabelled arcs.
The names of the node arecalled "semantic symbols" and are associatedwith Japanese and English dictionary entries.The labelled arcs are used in two ways:a) Binary arcs either express case relationsbetween connected symbols or combine sub-structuresb) Unary arcs serve as modifying tags ofvarious kinds (logical junctors, syntacticfeatures, stylistics, ...)The first stage of generation is con-ceptually oriented and should be targetlanguage independent, we use frame structuresin a KRL-like notation.
Our representationdistinguishes between case scb~.mta (used tocarry the meaning of actions), and conceptscho-~_ta (used to represent "things" or "qua-lities").
Each semantic symbol points to sucha schema.
These schemata have three parts:(I) roles: For action schemata, these are theusual cases of Fillmore (e.g.
AGENT, OBJECT,...); for concept schemata roles describe howthe concept may be further specified by otherconcepts.
(2) transformation rules: These are condition-action pairs that specify which schema is tobe applied, and how its roles are to be filledfrom the ATLAS/II net.
(3) choices describe possible syntacticpatterns for realization.Examples:Case schema for the semantic symbol ACHIEVE:(ACHIEVE (super= goal-oriented-act)(roles(Agent (class animate))(Goal)(Method (class abstract-object))(Instrument (class concrete-object)))(transformation-rules ...)(choices ...)))The concept schema for SPEAKER is:(SPEAKER (superc animate)( roles(Performs-act-for (class organization)).o.
)(transformation-rules ...)(choices ...))).i) Retrieval of the lexical entry of a Germanverb and its associated case frame cor-responding to the IKBS.ii) Selection of lexical entries for the othersemantic symbols.iii) Selection of a realization schema (RS),mapping of IKBS roles to RS functionalroles, and inferring syntactic features.In i) a simple retrieval may not suffice.In order to choose the most adequate Germanverb, it will e.g.
be necessary to check thefillers of an IKBS.
For example, the semanticsymbol REALISE may translate to "realisieren","implementieren" etc..
If the Instrument roleof REALISE were filled with an instance of thePROGRAM concept, we would choose the moreadequate word sense "implementieren".In ii) sometimes similar problems arise.For example, the semantic symbol ACCIDENT maytranslate to the German equivalent of"accident", "error", "failure" or "bug".
Theactual choice depends here on the filler ofACCIDENT's semantic role for "where itoccurred".iii) The choices aspect o~ a schemadescribes different possibilities how aninstance may be realized and specifies theconditions for selection.
(This idea is due toMcDonald (iq83) and his MUMBLE system).
Thefactors determining the choice include:(a) Which roles are filled?
(b) What are their respective fillers?
(c) Which type of text are we going togenerate?For example if the Agent-role of a caseframe is unfilled, we may choose eitherpassivation or selection of a German verbwhich maps the semantic object into thesyntactic subject.
If neither agent nor objectare filled, nominalization is forced.A realization schema (RS) is a structurewhich identifies a syntactic category (e.g.CLAUSE, NP) and describes its functional roles(e.g.
HEAD, MODIFIER, ...).
We employWinograd's terminology for functional gran~nar(Winograd, 1983).
In general, case schematawill be mapped into CLAUSE-RS and conceptschemata are mapped into NP-R~.
A CLAUSE-RShas a features description and slots for verb,subject, direct object, and indirect obiects.A features description may include informationabout voice, modality, idiomatic realization,etc..
There are realization schemata fordiscourse as well as titles.
The latter arespecial cases of the former, forcingnominalized constructions.FROM CONCEPTS TO LANGUAGEIn the target language oriented stage 2,the following decisions have to be made:REFERENCING AND FOCUSSINGFor referencing and other phenomena likefocussing, the simple approach of onlyallowing a schema instance as a filler is notsufficient.
We therefore included in our492knowledge representation a way to have de-scriptors as fillers.
Such descriptors arereferences to parts of a schema.
In thefollowing example the filler of USE'S Object-slot is a reference descriptor to SYNTHESIZE'sObject-slot:X = (a USE with(Object(the Object from(a SYNTHESIZE with(Object \[FUNCTION\])(Method \[DYNAMIC-PROGRAMMING\])))(Purpose (an ACCESS with(Object \[DATA-BASEl))))X could be realized as:"Using functions, that are synthesized bydynamic programming for data-base access.
"In general, descriptors have the form:(the <path> from <IKBS>)<path> = <slot>...A description can be realized by a relativeclause.The same technique of referring to a sub-structure may as well be used for focussing.For example, embedding X into(the Purpose from X)expresses that the focus is on X's Purposeslot, which would yield the realization:"Database access using functions that aresynthesized by dynamic progra,ming.
"A WALK WITH SEMSYNLet us look at the first sentence from anabstract.
Figure 2 contains the Japanese inputand the semantic net corresponding toATLAS/II's analysis.In stage i, we first examine those semanticsymbols which have an attached case schema andinstantiate them according to their trans-formation rules.In this example the WANT and ACHIEVE nodes(flagged by a FRED arc) are case schemata.Applying their tranformation rules results inthe following IKBS:(a WANT with(Object(an ACHIEVE with(Agent \[SPF2~KER\])(Object \[PURPOSE (Number \[PLURAL\])\])(Method \[U'~'I'ERANCE (Number \[SINGLE\])\])))In stage 2, we will derive a description ofhow this structure will be realized as Germantext.First, consider the outer WANT act.
Therej apanese  input  for FUJITSUs RTLRS/ I I - sys teRTop o,I" obicctSEMSYHs in ter face  to  RTLRS/ I I((UTTERANCE --HUMBER-> ONE) (PURPOSE ~ R - >  PLURAL)(MRNT --OBJ-> RCHIE~)(~T-"PRE~-> =NIL)(ZNIL --ST-> gRNT)(ACHIEVE --OBJ-> PURPOSE)(RCHIEUE --PRED-> ?NIL)(ACHIEVE --IIETHOD-> UTTERANCE)(RCHIEVE ~RGENT-> SPERKER)),~otto.t o f  object;EMRHTIC NETTop oy objectGERMAN EQUIVALENT TO JAPANESE INPUTES WIRD GEWUENSCHT DASS EINSPRECHER MEHRERE ZWECKE MITEINER E INZELNEN AEUSSERUNGERREICHT#o#~m o,f objectFigure 2.
From Japanese to Germanis no Agent, so we choose to build a clause inpassive voice.
Next, we observe that WANT'sobject is itself an act with several filledroles and could be realized as a clause.
Oneof the choices of WANT fits this situation.Its condition is that there is no Agent andthe Object will be realized as a clause.
Itsrealization schema is an idiomatic phrasenamed *Es-Part*:"Es ist erwuenscht, dass <CLAUSE>"("It is wanted that <CLAUSE>")Now consider the embedded <CLAUSE>.
AnACHIEVE act can be realized in German as aclause by the following realization schema:493(a CLAUSE with(Subject <NP-realization of Agent-role>(Verb "erreich "(DirObj <NP-re~lization of Object-role>(IndObjs(a PP with(Prep (One-of \["durch" "mit" "mittels"\]))(PObj <N-P-realization of Method-role>))))This schema is not particular to ACHIEVE.It is shared by other verbs and will thereforebe found via general choices which ACHIEVEinherits.The Agent of ACHIEVE's IKBS maps to theSubject and the Method is realized as anindirect object.
Within the scope of thechosen German verb "erreichen" (for"achieve"), a Method role maps into a PP withone of the prepositions "dutch", "mit","mittels" (corresponding to "by means of").This leads to the following IRS:(a CLAUSE with(Features (Voice PassiveIdiom *Es-Part*)(Verb "wuensch_") ;want(DirObj(a CLAUSE with(Subject (a NP with(Head "Sprecher")));speaker(Verb "erreich")(DirObj(aNP with(Features (Numerus= Plural))(Head \["Ziel", "Zweck"\]) ; purpose(Adj "mehrere")) ; multiple(IndObjs((a PP with(Prep \["durch", "mit", "mittels"\])(PObj(aNPwi th(Features (Numerus Singular))(Head "Aeusserung") ;utterance(Adj "einzeln") ; single )))))Such an instantiated realization schema(IRS) will be the input of the generationfront end that takes care of a syntacticallyand morphologically correct German surfacestructure (see Fig.
2).EXPERIMENTS WITH OTHER GENERATION MODULESWe recently studied three generationmodules (running in Lisp on our SYMBOLICS3600) with the objective to find out, whetherthey could serve as a generation front end forSEMSYN: SUTRA (Busemann, 1983), the Germanversion of IPG (Kempen & Hoenkamp, 1982), andMUMBLE (McDonald, 1983).Our IRS is a functional grammar descrip-tion.
The input of SUTRA, the "preterminalstructure", already makes assumptions aboutword order within the noun group.
To useSUTRA, additional transformation rules wouldhave to be written.IPG's input is a conceptual structure.Parts of it are fully realized before othersare considered.
The motivation for IPG'sincremental control structure is psycho-logical.
In contrast, the derivation of ourIRS and its subsequent rendering is notcommitted to such a control structure.
Never-theless, the procedural grarmnar of IPG couldbe used to produce surface strings from IKBSby providing it with additional syntacticfeatures (which are contained in IRS).Both MUMBLE and IPG are conceptuallyoriented and incremental.
MUMBLE's input is onthe level of our IKBS.
MUMBLE produces func-tional descriptions of sentences "on the fly".These descriptions are contained in aconstituent structure tree, which is traversedto produce surface text.
Our approach is tomake the functional description explicit.ACKNOWLEDG~4ENTSWe have to thank many colleagues in thegeneration field that helped SEMSYN with theirexperience.
We are especially thankful to DaveMcDonald (Amherst), and Eduard Hoenkamp(Nijmegen) whose support - personally andthrough their software - is still going on.
Wealso thank the members of the ATLAS/IIresearch group (Fujitsu Laboratories) fortheir support.REFERENCESUchida,H.
& Sugiyama: A machine translationsystem from Japanese into English based onconceptual structure, Proc.
of COLING-80,Tokyo, 1980, pp.455-462Winograd, T.: Language as a cognitive process,Addison-Wesley, 1983McDonald, D.D.
: Natural language generation asa computational problem: An Introduction; in:Brady & Berwick (Eds.)
Computational model ofdiscourse, NIT-Press, 1983, pp.209-265Kempen, G. & Hoenkamp,E.
: Incremental sentencegeneration: Implication for the structure of asyntactic processor; in Proc.
COLING-82,Prague, 1982, pp.151-156Busemann,B.
: Oberflaechentransformationen beider Generierung geschriebener deutscherSprache; in: Neumann, B.
(Ed. )
GWAI-83,Springer, 1983, pp.90-99494
