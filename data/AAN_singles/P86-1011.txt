D.J.
Weir K.Vijay-Shanker A.K.
JoshiDepartment of Computer and Information ScienceUniversity of PennsylvaniaPhiladelphia, PA 19104Abst ract67We examine the relationship between the two grammaticalformalisms: Tree Adjoining Grammars and Head Gram-mars.
We briefly investigate the weak equivalence of thetwo formalisms.
We then turn to a discussion comparingthe linguistic expressiveness of the two formalisms.1 In t roduct ionRecent work \[9,3\] has revealed a very close formal rela-tionship between the grammatical formalisms of Tree Ad-joining Grammars (TAG's) and Head Grammars (HG's).In this paper we examine whether they have the samepower of linguistic description.
TAG's were first intro-duced in 1975 by Joshi, Levy and Takahashi\[1\] and inves-tigated further in \[2,4,8\].
HG's were first introduced byPollard\[5\].
TAG's and HG's were introduced to capturecertain structural properties of natural languages.
Theseformalisms were developed independently and are nota-tionally quite different.
TAG's deal with a set of elemen-tary trees composed by means of an operation called ad-jo in ing.
HG's maintain the essential character of context-free string rewriting rules, except for the fact that besidesconcatenation of strings, string wrapp ing  operations arepermitted.
Observations of similarities between proper-ties of the two formalisms led us to study the formal rela-tionship between these two formalisms and the results ofthis investigation are presented in detail in \[9,3\].
We willbriefly describe the formal relationship established in \[9,3\],showing TAG's to be equivalent to a variant of HG's.
Weargue that the relationship between HG's and this variantof HG's called Modified Head Grammars (MHG's) is veryclose.Having discussed the question of the weak equivalenceof TAG's and HG's, we explore, in Sections 4 and 5, whatmight be loosely described as their strong equivalence.
Sec-tion 4 discusses consequences of the substantial notationaldifferences between the two formalisms.
In Section 5, withthe use of several examples of analyses (that can not bet This work was partially supported by the NSF grantsMCS-82-19116-CER, MCS-82-07294 and DCR-84-10413.We are grateful to Tony Kroch and Carl Pollard, bothof whom have made valuable contributions to this work.given by CFG's), we attempt o give cases in which theyhave the ability to make similar analyses as well as situa-tions in which they differ in their descriptive power.1 .1  Def in i t ionsIn this section, we shall briefly define the three formalisms:TAG's, HG's, and MHG's.1.1.1 Tree Adjoining GrammarsTree Adjoining Grammars differs from string rewriting sys-tems such as Context Free Grammars in that they generatetrees.
These trees are generated from a finite set of so-called e lementary  trees using the operation of t ree  ad-junct ion .
There are two types of elementary trees: in i t ia land aux i l i a ry .
Linguistically, initial trees correspond tophrase structure trees for basic sentential forms, whereasauxiliary trees correspond to modifying structures.The nodes in the frontier of elementary trees are la-belled by terminal symbols except for one node in the fron-tier of each auxiliary tree, the foot  node,  which is labelledby the same nonterminal symbol as the root.
Since initialtrees are sentential, their root is always labelled by thenonterminal S.We now describe the adjoining operation.
Suppose weadjoin an auxiliary tree ~ into a sentential tree 7.
Thelabel of the node at which the adjoining operation takesplace must be the same as the label of the root (and foot)of ~.
The subtree under this node is excised from 7, theauxiliary tree ~ is inserted in its place and the excisedsubtree replaces the foot of 8- Thus the tree obtainedafter adjoining j3 is as shown below.5 /3:x sv?
IThe Re la t ionsh ip  Between Tree Ad jo in ing  Grammars  And Head GrammarstThe definition of adjunction allows for more complexconstraints to be placed on adjoining.
Associated witheach node is a select ive ad jo in ing  (SA) constraint spec-ifying that subset of the auxiliary tree which can be ad-joined at this node.
If the SA constraint specifies an emptysubset of trees, then we call this constraint the Nu l l  Ad-jo in ing  (NA) constraint, ff the SA constraint specifiesthe entire set of auxiliary tree whose root is labelled withthe appropriate nonterminal, then by convention we willnot specify the SA constraint.
We also allow ob l igatoryad jo ln ing(OA)  constraints at nodes, to ensure that an ad-junction is obligatorily performed at these nodes.
Whenwe adjoin an auxiliary tree f~ in a tree ~ those nodes in theresulting tree that do not correspond to nodes of fl, retainthose constraints appearing in "1.
The remaining nodeshave the same constraints as those for the correspondingnodes of ft.1.1.2 Head GrammarsHead Grammars are string rewriting systems like CFG's,but differ in that each string has a distinguished symbolcorresponding to the head of the string.
These are there-fore called headed str ings.
The formalism allows not onlyconcatenation of headed strings but also so-called headwrapp ing  operations which split a string on one side ofthe head and place another string between the two sub-strings.
We use one of two notations to denote headedstrings: when we wish to explicitly mention the head weuse the representation w~-Sw~; alternatively, we simply de-note a headed string by ~.
Productions in a HG are of theform A -* f (a l  .
.
.
.
.
a , )  or A ~ ax where: A is a nonter-minal; a~ is either a nonterminal or a headed string; andf is either a concatenation or a head wrapping operation.Roach\[6\] has shown that there is a normal form for HeadGrammars which uses only the following operations.LCl(ul-d71u2, vx-d-~2v2)LC2(Ul"d~lu2, ~ 1~-2 ?.
)2 )LLl(ul'd-\[u2, u1~22 ~2)LL2(uxh'71u2, vlh-~2v2)LR1(ul-d71u2, vx-d-iv2)LR2 (ux~'lu2, vx'4-~v2)= tt 1~1"1 t/2 t~la2 U 2: ~1~1~/,2~)1~)2: tt l~l lU1a2u2u 2: tt 10,1u1~22 ~)2 u 2: t t l l ) l a2U2~lU,  2: Ul ~)1~2 t12 QI ~/, 21.1.3 Mod i f ied  Head GrammarsPollard's definition of headed strings includes the headedempty string (~).
However the term fi(~-~,... ,~-~,... ,W--~n)is undefined when ~-~ = ~.
This nonuniformity has led todifficulties in proving certain formal properties of HG's\[6\].MHG's were considered to overcome these problems.
Laterin this paper we shall argue that MHG's are not only closeto HG's formally, but also that they can be given a linguis-tic interpretation which retains the essential characteristicsof HG's.
It is worth noting that the definition of MHG'sgiven here coincides with the definition of HG's given inInstead of headed strings, MHG's use so-called spl i ts t r ings.
Unlike a headed string which has a distinguishedsymbol, a split string has a distinguished position aboutwhich it may be split.
In MHG's, there are 3 operationson split strings: W, C1, and C2.
The operations C1 andC2 correspond to the operations LC1 and LC2 in HG's.They are defined as follows:CI( to ITW2,  UlTU2 ) = t01TW2UlU 2C2(WlTW2, u1Tu2) : t/)lt/)2UlTU2Since the split point is not a symbol (which can be spliteither to its left or right) but a position between strings,separate left and right wrapping operations are not needed.The wrapping operation, W, in MHG is defined as follows:W(UAll-W2, Ul~'U2) = t/\]lUlTU2W2We could have defined two operations W1 and W2 as inHG.
But since W1 can very easily be simulated with otheroperations, we require only W2, renamed simply W.2 MHG's  and TAG'sIn this section, we discuss the weak equivalence of TAG'sand MHG's.
We will first consider the relationship betweenthe wrapping operation W of MHG's and the adjoiningoperation of TAG's.2.1 Wrapping and AdjoiningThe weak equivalence of MHG's and TAG's is a conse-quence of the similarities between the operations of wrap-ping and adjoining.
It is the roles played by the split pointand the foot node that underlies this relationship.
When atree is used for adjunction, its foot node determines wherethe excised subtree is reinserted.
The strings in the fron-tier to the left and right of the foot node appear on theleft and right of the frontier of the excised subtree.
Asshown in the figure below, the foot node can be thoughtof as a position in the frontier of a tree, determining howthe string in the frontier is split.~?o~ v ,~vz~'oot68Adjoining in this case, corresponds to wrapping to,Tw 2around the split string v,tv2.
Thus, the split point andthe foot node perform the same role.
The proofs show-ing the equivalence of TAG's and MHG's is based on thiscorrespondence.2.2 Inc lus ion of TAL in MHLWe shall now briefly present a scheme for transforming agiven TAG to an equivalent MHG.
We associate with eachauxiliary tree a set of productions uch that each tree gen-erated from this elementary tree with frontier wiXw2 has.an associated erivation in the MHG, using these produc-tions, of the split string WlTW2.
The use of this tree foradjunction at some node labelled X can be mimicked witha single additonal production which uses the wrapping op-eration.For each elementary tre~ we return a sequence of pro-ductions capturing the structure of the tree in the followingway.
We use nonterminals that are named by the nodes ofelementary trees rather than the labels of the nodes.
Foreach node ~/in an elementary tree, we have two nontermi-nal X. and I".
: X. derives the strings appearing on thefrontier of trees derived from the subtree rooted at r/; Y,derives the concatenation f the strings derived under eachdaughter of 7.
If ~/has daughters rh , .
.
.
,~k then we havethe production:Y, --, Ci (X .~,  .
.
.
, X .
Jwhere the node T/i dominates the foot node (by convention,we let i = 1 if r/does not dominate the foot node).
Adjunc-tion at ~/, is simulated by use of the following production:X.
-~ W(X~, r.)where # is the root of some auxiliary tree which can beadjoined at ~/.
If adjunction is optional at y/then we includethe production:X,-~ Y,.Notice that when T/has an NA or OA constraint we omitthe second or third of the above productions, respectively.Rather than present the full details (which can be foundin \[9,3\]) we illustrate the construction with an exampleshowing a single auxiliary tree and the corresponding MHGproductions.CI\Xr/l ~ Y~I )Y,~ ~ c2(~,x.,),X.
,  -~ W(X~,,,Y..),x, .
--.
w(x~, r,.
).x , .
- - .
Y,..r , ,  --, c2(b, x.,~)x.,-~ Y..Y.. -, Awhere #1, .
.
.
,  # ,  are the roots of the auxiliary trees adjoin-able at ~=.2.3 Inc lus ion  of  MHL in TALIn this construction we use elementary trees to directlysimulate the use of productions in MHG to rewrite nonter-minals.
Generation of a derivation tree in string-rewritingsystems involves the substitution of nonterminal nodes, ap-pearing in the frontier of the unfinished erivation tree, bytrees corresponding to productions for that no nterminal.From the point of view of the string languages obtained,tree adjunction can be used to simulate substitution, asil lustrated in the following example.XNotice that although the node where adjoining occurs does 'not appear in the frontier of the tree, the presence of thenode labelled by the empty string does not effect the stringlanguage.For each production in the MHG we have an auxiliarytree.
A production in an MHG can use one of the threeoperations: C1, C2, and W. Correspondingly we havethree types of trees, shown below.ASA~ f A#5~ C~ I 6 ~ Co~I I c oA I Ii ~, A#69Drawing the analogy with string-rewriting systems: NAconstraints at each root have the effect of ensuring that anonterminal is rewritten only once; NA constraints at thefoot node ensures that, like the nodes labelled by A, theydo not contribute to the strings derived; OA constraintsare used to ensure that every nonterminal introduced isrewritten at least once.The two trees mimicking the concatenation operationsdiffer only in the position of their foot node.
This nodeis positioned in order to satisfy the following requirement:for every derivation in the MHG there must be a derivedtree in the TAG for the same string, in which the foot ispositioned at the split point.The tree associated with the wrapping operation isquite different.
The foot node appears below the two nodesto be expanded because the wrapping operation of MHG'scorresponds to the LL2 operation of HG's in which thehead (split point) of the second argument becomes the newhead (split point).
Placement of the nonterminal, which isto be wrapped, above the other nonterminal achieves thedesired effect as described earlier.While straightforward, this construction does not cap-ture the linguistic motivation underlying TAG's.
The aux-iliary trees directly reflect the use of the concatenationand the wrapping operations.
As we discuss in more detailin Section 4, elementary trees for natural anguages TAG'sare constrained to capture meaningful linguistic structures.In the TAG's generated in the above construction, the el-ementary trees are incomplete in this respect: as reflectedby the extensive use of the OA constraints.
Since HG'sand MHG's do not explicitly give minimal inguistic struc-tures, it is not surprising that such a direct mapping fromMHG's to TAG's does not recover this information.3 HG's  and MHG'sIn this section, we will discuss the relationship betweenHG's and MHG's.
First, we outline a construction show-ing that HL's are included in MHL's.
Problems arise inshowing the inclusion in the other direction because of thenonuniform way in which HG's treat the empty headedstring.
In the final part of this section, we argue thatMHG's can be given a meaningful linguistic interpretation,and may be considered essentially the same as HG's.3 .1  HL 's  and  MHL 'sThe inclusion of HL's in MHL's can be shown by con-structing for every HG, G, an equivalent MHG, G'.
Wenow present a short description of how this constructionproceeds.Suppose a nonterminal X derives the headed stringwlhw2.
Depending on whether the left or right wrappingoperation is used, this headed string can be split on ei-ther side of the head.
In fact, a headed string can be splitfirst to the right of its head and then the resulting stringcan be split to the left of the same head.
Since in MHG'swe can only split a string in one place, we introduce non-terminals X ~h, that derive split strings of the form wi~w2whenever X derives wl-hw2 in the HG.
The missing headcan be reintroduced with the following productions:x' -~ w(x '~, hT) and X" -~ W(X '~,,h)Thus, the two nonterminals, X t and X r derive WlhTW 2 andwlThw2 respectively.
Complete details of this proof aregiven in \[3\].We are unable to give a general proof showing the in-clnsion of MHL's in HL's.
Although Pollard\[5\] allows theuse of the empty headed string, mathematically, it does nothave the same status as other headed strings.
For exam-pie, LC I (~,E)  is undefined.
Although we have not foundany way of getting around this in a systematic manner,we feel that the problem of the empty headed string in theHG formalism does not result from an important differencebetween the formalisms.For any particular natural language, Head Grammarsfor that language appear to use either only the left wrap-ping operations LLi, or only the right wrapping operationsLRi.
Based on this observation, we suggest hat for anyHG for a natural anguage, there will be a correspondingMHG which can be given a linguistic interpretation.
Sinceheaded strings will always be split on the same side of thehead, we can think of the split point in a split string asdetermining the head position.
For example, split stringsgenerated by a MHG for a natural anguage that uses onlythe left wrapping operations have their split points imme-diately to the right of the actual head.
Thus a split pointin a phrase not only defines where the phrase can be split,but also the head of the string.4 Notat iona l  D i f ferences betweenTAG's  and HG'sTAG's and HG's are notationally very different, and thishas a number of consequences that influence the way inwhich the formalisms can be used to express various as-pects of language structure.
The principal differences de-rive from the fact that TAG's are a tree-rewriting systemunlike HG's which manipulate strings.The elementary trees in a TAG, in order to be linguisti-cally meaningful, must conform to certain constraints thatare not explicitly specified in the definition of the formal-70ism.
In particular, each elementary tree must constitutea minimal linguistic structure.
Initial trees have essen-tially the structure of simple sentences; auxiliary trees cor-respond to minimal recursive constructions and generallyconstitute structures that act as modifiers of the categoryappearing at their root and foot nodes.A hypothesis that underlies the linguistic intuitions ofTAG's is that all dependencies are captured within elemen-tary trees.
This is based on the assumption that elemen-tary trees are the appropriate domain upon which to definedependencies, rather than, for example, productions in aContext-free Grammar.
Since in string-rewriting systems,dependent lexical items can not always appear in the sameproduction, the formalism does not prevent he possibilitythat it may be necessary to perform an unbounded amountof computation in order to check that two dependent lex-ical items agree in certain features.
However, since inTAG's dependencies are captured by bounded structures,we expect that the complexity of this computation doesnot depend on the derivation.
Features uch as agreementmay be checked within the elementary trees (instantiatedup to lexical items) without need to percolate informationup the derivation tree in an unbounded way.
Some check-ing is necessary between an elementary tree and an auxil-iary tree adjoined to it at some node, but this checking isstill local and unbounded.
Similarly, elementary trees, be-ing minimal inguistic structures, should capture all of thesub-categorization information, simplifying the processingrequired during parsing.
Further work (especially empiri-cal) is necessary to confirm the above hypothesis before wecan conclude that elementary trees can in fact capture allthe necessary information or whether we must draw uponmore complex machinery.
These issues will be discussed indetail in a later paper.Another important feature of TAG's that differentiatesthem from HG's is that TAG's generate phrase-structuretrees.
As a result, the elementary trees must conform tocertain constraints uch as left-to-right ordering and lin-guistically meaningful dominance relations.
Unlike otherstring-rewriting systems that use only the operation of con-catenation, HG's do not associate a phrase-structure treewith a derivation: wrapping, unlike concatenation, doesnot preserve the word order of its arguments.
In the Sec-tion 5, we will present an example illustrating the impor-tance of this difference between the two formalisms.It is still possible to associate a phrase-structure witha derivation in HG's that indicates the constituents andwe use this structure when comparing the analyses madeby the two systems.
These trees are not really phrase-structure trees but rather trees with annotations whichindicate how the constituents will be wrapped (or concate-nated).
It is thus a derivation structure, recording the his-tory of the derivation.
With an example we now illustratehow a constituent analysis is produced by a derivation ina HG.NPlNVP gl~l/ \V S L (:::,~I / \~o~ NP VPI iIv V1 i5 Towards "Strong" equivalenceIn Section 2 we considered the weak equivalence of the twoformalisms.
In this section, we will consider three exam-ples in order to compare the linguistic analyses that canbe given by the two formalisms.
We begin with an ex-ample (Example 1) which illustrates that the constructiongiven in Section 2 for converting a TAG into an MHG givessimilar structures.
We then consider an example (Exam-ple 2) which demonstrates that the construction does notalways preserve the structure.
However, there is an al-ternate way of viewing the relationship between wrappingand adjoining, which, for the same example, does preservethe structure.Although the usual notion of strong equivalence (i.e.,equivalence under identity of structural descriptions) cannot be used in comparing TAG and HG (as we have alreadyindicated in Section 4), we will describe informally whatthe notion of "strong" equivalence should be in this case.We then illustrate by means of an example (Example 3),how the two systems differ in this respect.5 .1  Example  1Pollard\[5\] has suggested that HG can be used to providean appropriate analysis for easy problems to solve.
He doesnot provide a detailed analysis but it is roughly as follows.NP LL2J AP NP/ \  I71This analysis can not be provided by CFG's since in de-riving easy to solve we can not obtain easy to solve andproblems as intermediate phrases.
The appropriate le-mentary tree for a TAG giving the same analysis wouldbe:  /NPAP ICP 5I \ 't,o sol~ HINote that the phrase easy to solve wraps around problemsby splitting about the head and the foot node in boththe grammars.
Since the conversion of this TAG wouldresult in the HG given above, this example shows that theconstruction captures the correct correspondence b tweenthe two formalisms.5 .2  Example  2We now present an example demonstrating that the con-struction does not always preserve the details of the lin-guistic analysis.
This example concerns cross-serial depen-dencies, for example, dependencies between NP's and V'sin subordinate clauses in Dutch (cited frequently as anexample of a non-context-free construction).
For example,the Dutch equivalent of John saw Mary swim is John Marysaw swim.
Although these dependencies can involve an ar-bitrary number of verbs, for our purposes it is sufficient oconsider this simple case.
The elementary trees used in aTAG, GTAa, generating this sentence are given below.SVP 5 VP/5 \  I / \ IIVP VP ,V HP V'P Vi i / I .
I / \  IN V.--" ,~u,~n ,sawThe HG given in \[5\] (GHa) assigns the following deriva-tion structure (an annotated phrase-structure cordingthe history of the derivation) for this sentence.N~IWIS / ~-C2~VP ~al / \V 3 ~c2I / \saw NP V PI IN VI iIf we use the construction in Section 2 on the elemen-tary trees for the TAG shown above, we would generatean HG, G~a , that produces the following analysis of thissentence./ ?
\  INP ?X~cz VI IH NP VP ~o~ki,j N v.I IThis does not give the same analysis as G~za: both G~aand GrAa give intermediate structures in which the predi-cate help(Mary swim) is formed.
This then combines withthe noun phrase John giving the resulting sentence.
In theHG G~a John is first combined with Mary swim: this isnot an acceptable linguistic structure.
G~a correspondsin this sense to the following unacceptable TAG, GITAG./3~ /S \NP vP NP VPW , 6 '/ H ,  S V\I : / \  ,'1 I t / \  ~,"NP VP \[ e, f,l,~ \~'r vP e.~ ~a~ jb" J / \ ,  I ., ?
S V'1 f5W~ ,~aW72Not only does the ~onstruction map the  acceptableTAG to the unacceptable HG; hut it can also be shownthat the unacceptable TAG is converted into the accept-able HG.
This suggests that our construction does not al-ways preserve linguistic analyses.
This arises because theuse of wrapping operation does not correspond to the wayin which the foot node splits the auxiliary tree in this case.However, there is an alternate way of viewing the mannerin which wrapping and adjoining can be related.
Considerthe following tree.IIIIIIT'X~, : , , : : .
/\\u.,Instead of wrapping WlW 2 around Ul and then concate-nating us; while deriving the string wxulw2u2 we couldderive the string by wrapping UlU2 around w2 and thenconcatenating wl.
This can not be done in the generalcase (for example, when the string u is nonempty).The two grammars GHa and GTA a can be related inthis manner since GTAG satisfies the required conditions.This approach may be interpreted as combining the phraseulu2 with w~ to form the phrase UlW2U~.
Relating theabove tree to Example 2, ux and us correspond to Maryand swim respectively and w2 corresponds to saw.
Thus,Mary swim wraps around saw to produce the verb phraseMary saw swim as in the TAG GTAC and the HG GHG.As the previous two examples illustrate, there are twoways of drawing a correspondence b tween wrapping andadjoining,both of which can be applicable.
However, onlyone of them is general enough to cover all situations, andis the one used in Sections 2 and 3 in discussing the weakequivalence.5.3 Example 3The normal notion of strong equivalence can not be used todiscuss the relationship between the two formalisms, sinceHG's do not generate the standard phrase structure trees(from the derivation structure).
However, it is possible torelate the analyses given by the two systems.
This can bedone in terms of the intermediate constituent structures.So far, in Examples 1and 2 considered above we showedthat the same analyses can be given in both the formalisms.We now present an example suggesting that this is not al-ways the case.
There are certain constraints placed on ele-mentary trees: that they use meaningful elementary treescorresponding to minimal linguistic structures (for exam-ple, the verb and all its complements, including the subjectcomplement are in the same elementary tree); and thatthe final tree must be a phrase-structure tr e. As a result,TAG's can not give certain analyses which the HG's canprovide, as evidenced in the following example.The example we use concerns analyses of John per-suaded Bill to leau,.
We will discuss two analyses bothof which have been proposed in the literature and havebeen independently justified.
First, we present an analysisthat can be expressed in both formalisms.
The TAG hasthe following two elementary trees.$ J i S \AlP v P h/ I ~ V PJ I / \V NP 5 froI I JJol,,, f~ '~ NIb'~The derivation structure corresponding to this analysisthat HG's can give is as follows.5 LC2A/P VP ~_ctN V AlP 5However, Pollard\[5\] gives another analysis which has thefollowing derivation structure.73LC~NP VP z.l-II J \N VP Lcl t,/P1 / \  I\[oha g 5 flI / \  IIn this analysis the predicate persuade to leave is formed asan intermediate phrase.
Wrapping is then used to derivethe phrase persuade Bill to leave.
To provide such an anal-ysis with TAG's, the phrase persuade to leave must appearin the same elementary tree.
Bill must either appear inan another elementary tree or must be above the phrasepersuade to leave if it appears in the same elementary tree(so that the phrase persuade to leave is formed first).
Itcan not appear above the phrase persuade to leave sincethen the word order will not be correct.
Alternatively, itcan not appear in a separate lementary tree since no mat-ter which correspondence w  make between wrapp!ng andadjoining, we can not get a TAG which has meaningful el-ementary trees providing the same analysis.
Thus the onlyappropriate TAG for this example is as shown above.The significance of this constraint hat TAG's appearto have (il lustrated by Example 3) can not be assessed untila wider range of examples are evaluated from this point ofview.6 Conc lus ionThis paper focusses on the linguistic aspects of the re-lationship between Head Grammars and Tree AdjoiningGrammars.
With the use of examples, we not only illus-trate cases where the two formalisms make similar analy-ses, but also discuss differences in their descriptive power.Further empirical study is required before we can deter-mine the significance of these differences.
We have alsobriefly studied the consequences of the notational differ-ences between the formalisms.
A more detailed analysisof the linguistic and computational spects of these differ-ences is currently being pursued.References\[1\] Joshi, A. K., Levy, L. S., and Takahashi, M. TreeAdjunct Grammars.
Journal of Computer and SystemSciences 10(1), March, 1975.\[2\] Joshi, A. K. How Much Context-Sensitivity is Neces-sary for Characterizing Structural descriptions - TreeAdjoining Grammars.
In D. Dowty, L. Karttunen andZwicky, A.
(editors), Natural Language Processing -Theoretical, Computational nd Psychological Perspec-tive.
Cambridge University Press, New York, 1985.originally presented in 1983.\[3\] Joshi, A. K., Vijay-Shanker, K., and Weir, D.J.
TreeAdjoining Grammars and Head Grammars.
Techni-cal Report MS-CIS-86-1, Department of Computerand Information Science, University of Pennsylvania,Philadelphia, January, 1986.\[4\] Kroch, A. and Joshi, A. K. Linguistic Relevance of TreeAdjoining Grammars.
Technical Report MS-CIS-85-18, Department of Computer and Information Science,University of Pennsylvania, Philadelphia, April, 1985.also to appear in Linguistics and Philosophy, 1986.\[5\] Pollard, C. Generalized Phrase Structure Grammars,Head Grammars and Natural Language.
PhD thesis,Stanford University, August, 1984.\[6\] Roach, K. Formal Properties of Head Grammars.1985.
Presented at Mathematics of Language workshopat the University of Michigan, Ann Arbor.\[7\] Rounds, W. C. LFP: A Logic for Linguistic Descrip-tions and an Analysis of its Complexity.
September,1985.
University of Michigan.\[8\] Vijay-Shanker, K. and Joshi, A. K. Some Compu-tational Properties of Tree Adjoining Grammars.
In23 rd meeting of Assoc.
of Computational Linguistics,pages 82-93.
July, 1985.\[9\] Vijay-Shanker, K., Weir, D. J., and Joshi, A. K. TreeAdjoining and Head Wrapping.
In 11 th InternationalConference on Computational Linguistics.
August,1986.74
