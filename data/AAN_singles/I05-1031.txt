Analysis of an Iterative Algorithm forTerm-Based Ontology AlignmentShisanu Tongchim, Canasai Kruengkrai, Virach Sornlertlamvanich,Prapass Srichaivattana, and Hitoshi IsaharaThai Computational Linguistics Laboratory,National Institute of Information and Communications Technology,112,Paholyothin Road, Klong 1, Klong Luang, Pathumthani 12120, Thailand{shisanu, canasai, virach, prapass}@tcllab.org, isahara@nict.go.jpAbstract.
This paper analyzes the results of automatic concept align-ment between two ontologies.
We use an iterative algorithm to performconcept alignment.
The algorithm uses the similarity of shared terms inorder to find the most appropriate target concept for a particular sourceconcept.
The results show that the proposed algorithm not only findsthe relation between the target concepts and the source concepts, butthe algorithm also shows some flaws in the ontologies.
These results canbe used to improve the correctness of the ontologies.1 IntroductionTo date, several linguistic ontologies in different languages have been developedindependently.
The integration of these existing ontologies is useful for manyapplications.
Aligning concepts between ontologies is often done by humans,which is an expensive and time-consuming process.
This motivates us to find anautomatic method to perform such task.
However, the hierarchical structures ofontologies are quite different.
The structural inconsistency is a common problem[1].
Developing a practical algorithm that is able to deal with this problem is achallenging issue.The objective of this research is to investigate an automated technique forontology alignment.
The proposed algorithm links concepts between two ontolo-gies, namely the MMT semantic hierarchy and the EDR concept dictionary.
Thealgorithm finds the most appropriate target concept for a given source conceptin the top-down manner.
The experimental results show that the algorithm canfind reasonable concept mapping between these ontologies.
Moreover, the resultsalso suggest that this algorithm is able to detect flaws and inconsistency in theontologies.
These results can be used for developing and improving the ontologiesby lexicographers.The rest of this paper is organized as follows: Section 2 discusses relatedwork.
Section 3 provides the description of the proposed algorithm.
Section4 presents experimental results and discussion.
Finally, Section 5 concludesour work.R.
Dale et al (Eds.
): IJCNLP 2005, LNAI 3651, pp.
346?356, 2005.c?
Springer-Verlag Berlin Heidelberg 2005Analysis of an Iterative Algorithm for Term-Based Ontology Alignment 3472 Related WorkDaude?
et al [2] used a relaxation labeling algorithm ?
a constraint satisfactionalgorithm ?
to map the verbal, adjectival and adverbial parts between two dif-ferent WordNet versions, namely WordNet 1.5 and WordNet 1.6.
The structuralconstraints are used by the algorithm to adjust the weights for the connectionsbetween WN1.5 and WN1.6.
Later, some non-structural constraints are includedin order to improve the performance [3].Asanoma [4] presented an alignment technique between the noun part ofWordNet and Goi-Taikei ?s Ontology.
The proposed technique utilizes sets ofJapanese and/or English words and semantic classes from dictionaries in an MTsystem, namely ALT-J/E.Chen and Fung [5] proposed an automatic technique to associate the EnglishFrameNet lexical entries to the appropriate Chinese word senses.
Each FrameNetlexical entry is linked to Chinese word senses of a Chinese ontology databasecalled HowNet.
In the beginning, each FrameNet lexical entry is associated withChinese word senses whose part-of-speech is the same and Chinese word/phraseis one of the translations.
In the second stage of the algorithm, some links arepruned out by analyzing contextual lexical entries from the same semantic frame.In the last stage, some pruned links are recovered if their scores are greater thanthe calculated threshold value.Ngai et al [6] also conducted some experiments by using HowNet.
Theypresented a method for performing alignment between HowNet and WordNet.They used a word-vector based method which was adopted from techniquesused in machine translation and information retrieval.
Recently, Yeh et al [7]constructed a bilingual ontology by aligning Chinese words in HowNet withcorresponding synsets defined in WordNet.
Their alignment approach utilizedthe co-occurrence of words in a parallel bilingual corpus.Khan and Hovy [8] presented an algorithm to combine an Arabic-Englishdictionary with WordNet.
Their algorithm also tries to find links from Arabicwords to WordNet first.
Then, the algorithm prunes out some links by trying tofind a generalization concept.Doan et al [9] proposed a three steps approach for mapping between ontologieson the semantic web.
The first step used machine learning techniques to determinethe joint distribution of any concept pair.
Then, a user-supplied similarity functionis used to compute similarity of concept pairs based on the joint distribution fromthe first step.
In the final step, a relaxation labeling algorithm is used to find themapping configuration based on the similarity from the previous step.3 Proposed AlgorithmIn this section, we describe an approach for ontology alignment based on termdistribution.
To alleviate the structural computation problem, we assume thatthe considered ontology structure has only the hierarchical (or taxonomic) rela-tion.
One may simply think of this ontology structure as a general tree, whereeach node of the tree is equivalent to a concept.348 S. Tongchim et alGiven two ontologies called the source ontology Ts and the target ontologyTt, our objective is to align all concepts (or semantic classes) between thesetwo ontologies.
Each ontology consists of the concepts, denoted by C1, .
.
.
, Ck.
Ingeneral, the concepts and their corresponding relations of each ontology can besignificantly different due to the theoretical background used in the constructionprocess.
However, for the lexical ontologies such as the MMT semantic hierarchyand the EDR concept dictionary, it is possible that the concepts may containshared members in terms of English words.
Thus, we can match the conceptsbetween two ontologies using the similarity of the shared words.In order to compute the similarity between two concepts, we must also con-sider their related child concepts.
Given a root concept Ci, if we flatten thehierarchy starting from Ci, we obtain a nested cluster, whose largest clusterdominates all sub-clusters.
As a result, we can represent the nested cluster witha feature vector ci = (w1, .
.
.
, w|V|)T , where features are the set of unique En-glish words V extracted from both ontologies, and wj is the number of the wordj occurring the nested cluster i.
We note that a word can occur more than once,since it may be placed in several concepts on the lexical ontology according toits sense.After concepts are represented with the feature vectors, the similarity be-tween any two concepts can be easily computed.
A variety of standard similaritymeasures exists, such as the Dice coefficient, the Jaccard coefficient, and the co-sine similarity [10].
In our work, we require a similarity measure that can reflectthe degree of the overlap between two concepts.
Thus, the Jaccard coefficient issuitable for our task.
Recently, Strehl and Ghosh [11] have proposed a versionof the Jaccard coefficient called the extended Jaccard similarity that can workwith continuous or discrete non-negative features.
Let ?xi?
be the L2 norm of agiven vector xi.
The extended Jaccard similarity can be calculated as follows:JaccardSim(xi,xj) =xTi xj?xi?2 + ?xj?2 ?
xTi xj.
(1)We now describe an iterative algorithm for term-based ontology alignment.As mentioned earlier, we formulate that the ontology structure is in the form ofthe general tree.
Our algorithm aligns the concepts on the source ontology Ts tothe concepts on the target ontology Tt by performing search and comparison inthe top-down manner.Given a concept Ci ?
Ts, the algorithm attempts to find the most appro-priate concept B?
?
Tt, which is located on an arbitrary level of the hierar-chy.
The algorithm starts by constructing the feature vectors for the currentroot concept on the level l and its child concepts on the level l + 1.
It thencalculates the similarity scores between a given source concept and candidatetarget concepts.
If the similarity scores of the child concepts are not greaterthan the root concept, then the algorithm terminates.
Otherwise, it selects achild concept having the maximum score to be the new root concept, and it-erates the same searching procedure.
Algorithms 1 and 2 outline our ontologyalignment process.Analysis of an Iterative Algorithm for Term-Based Ontology Alignment 349Algorithm 1.
OntologyAlignmentinput : The source ontology Ts and the target ontology Tt.output : The set of the aligned concepts A.beginSet the starting level, l ?
0;while Ts?l?
?
Ts?max?
doFind all child concepts on this level, {Ci}ki=1 ?
Ts?l?
;Flatten {Ci}ki=1 and build their corresponding feature vectors, {ci}ki=1;For each ci, find the best matched concepts on Tt,B ?
FindBestMatched(ci);A ?
A ?
{B, Ci};Set l ?
l + 1;endendAlgorithm 2.
FindBestMatched(ci)beginSet the starting level, l ?
0;BestConcept ?
Tt(root concept);repeatstmp ?
JaccardSim(ci, BestConcept);if Tt?l?
> Tt?max?
thenreturn BestConcept;Find all child concepts on this level, {B}hj=1 ?
Tt?l?
;Flatten {Bj}hj=1 and build corresponding feature vectors, {bj}hi=1;sj?
?
argmaxjJaccardSim(ci, {bj}hj=1);if sj?
> stmp thenBestConcept ?
Bj?
;Set l ?
l + 1;until BestConcept does not change;return BestConcept;endFigure 1 shows a simple example that describes how the algorithm works.It begins with finding the most appropriate concept on Tt for the root concept1 ?
Ts.
By flattening the hierarchy starting from given concepts (?1?
on Ts,and ?a?, ?a-b?, ?a-c?
for Tt), we can represent them with the feature vectors andmeasure their similarities.
On the first iteration, the child concept ?a-c?
obtainsthe maximum score, so it becomes the new root concept.
Since the algorithmcannot find improvement on any child concepts in the second iteration, it stopsthe loop and the target concept ?a-c?
is aligned with the source concept ?1?.
Thealgorithm proceeds with the same steps by finding the most appropriate conceptson Tt for the concepts ?1-1?
and ?1-2?.
It finally obtains the resulting concepts?a-c-f?
and ?a-c-g?, respectively.350 S. Tongchim et alFig.
1.
An example of finding the most appropriate concept on Tt for the root concept1 ?
Ts4 Experiments and Evaluation4.1 Data SetsTwo dictionaries are used in our experiments.
The first one is the EDR Elec-tronic Dictionary [12].
The second one is the electronic dictionary of MultilingualMachine Translation (MMT) project [13].The EDR Electronic Dictionary consists of lexical knowledge of Japaneseand English divided into several sub-dictionaries (e.g., the word dictionary, thebilingual dictionary, the concept dictionary, and the co-occurrence dictionary)and the EDR corpus.
In the revised version (version 1.5), the Japanese worddictionary contains 250,000 words, while the English word dictionary contains190,000 words.
The concept dictionary holds information on the 400,000 conceptsthat are listed in the word dictionary.
Each concept is marked with a uniquehexadecimal number.For the MMT dictionary, we use the Thai-English Bilingual Dictionary thatcontains around 60,000 lexical entries.
The Thai-English Bilingual Dictionaryalso contains semantic information about the case relations and the word con-cepts.
The word concepts are organized in a manner of semantic hierarchy.
Eachword concept is a group of lexical entries classified and ordered in a hierarchicallevel of meanings.
The MMT semantic hierarchy is composed of 160 concepts.Analysis of an Iterative Algorithm for Term-Based Ontology Alignment 351In our experiments, we used a portion of the MMT semantic hierarchy and theEDR concept dictionary as the source and the target ontologies, respectively.
Weconsidered the ?animal?
concept as the root concepts and extracted its related con-cepts.
In the EDR concept dictionary, however, the relations among concepts arevery complex and organized in the form of the semantic network.
Thus, we prunedsome links to transform the network to a tree structure.
Starting from the ?animal?concept, there are more than 200 sub-concepts (containing about 7,600 words) inthe EDR concept dictionary, and 14 sub-concepts (containing about 400 words) inthe MMT semantic hierarchy.
It is important to note that these two ontologies areconsiderably different in terms of the number of concepts and words.4.2 Experimental ResultsThe proposed algorithm is used to find appropriate EDR concepts for each one of14 MMT concepts.
The results are shown in Table 1.
From the table, there are 6 re-lations (marked with the symbol ?*?)
that aremanually classified as exact mapping.This classification is done by inspecting the structures of both ontologies by hand.If the definition of a given MMT concept appears in the EDR concept and the algo-rithm seems to correctly match the most suitable EDR concept, this mapping willbe classified as exact mapping.
The remaining 8 MMT concepts, e.g.
?cold-blood?and ?amphibian?, are mapped to closely related EDR concepts, although they arenot considered to be exact mapping.
The EDR concepts found by our algorithm forthese 8 MMT concepts are considered to be only the subset of the source concepts.For example, the ?amphibian?
concept of the MMT is mapped to the ?toad?
conceptof the EDR.
The analysis in the later section will explain why some MMT conceptsare mapped to specific sub-concepts.Our algorithm works by flattening the hierarchy starting from the consid-ered concept in order to construct a word list represented that concept.
Theword lists are then compared to match the concepts.
In practice, only a por-tion of word list is intersected.
Figure 2 illustrates what happens in general.Note that the EDR concept dictionary is much larger than the MMT semanticMMT321EDRFig.
2.
A schematic of aligned concepts352 S. Tongchim et alTable 1.
Results of aligned concepts between the MMT and the EDRMMT concept EDR conceptvertebrate vertebrate ?| ?
warm-blood mammal| | ?
mammal mammal ?| | ?
bird bird ?|| ?
cold-blood reptile| ?
fish fish ?| ?
amphibian toad| ?
reptile reptile ?| ?
snake snake ?invertebrate squid| ?
worm leech| ?
insect hornet| ?
shellfish crab| ?
other sea creature squid?
These concepts are manually classified as exact mapping.hierarchy.
Thus, it always has EDR words that are not matched with any MMTwords.
These words are located in the section 3 of the figure 2.
The wordsin the section 1 are more important since they affects the performance of thealgorithm.
We assume that the EDR is much larger than the MMT.
There-fore, most MMT words should be found in the EDR.
The MMT words thatcannot found any related EDR words may be results of incorrect spellings, spe-cific words (i.e.
only found in Thai language).
In case of incorrect spelling andother similar problems, the results of the algorithm can be used to improve theMMT ontology.By analyzing the results, we can classify the MMT words that cannot findany associated EDR words into 4 categories.1.
Incorrect spelling or wrong grammar : Some English words in the MMTsemantic hierarchy are simply incorrect spelling, or they are written withwrong grammar.
For example, one description of a tiger species is written as?KIND A TIGER?.
Actually, this instance should be ?KIND OF A TIGER?.The algorithm can be used to find words that possible have such a problem.Then, the words can be corrected by lexicographers.2.
Inconsistency : The English translation of Thai words in the MMT semantichierarchy was performed by several lexicographers.
When dealing with Thaiwords that do not have exact English words, lexicographers usually enterphrases as descriptions of these words.
Since there is no standard of writingthe descriptions, these is incompatibility between descriptions that explainthe same concept.
For example, the following phrases are used to describefishes that their English names are not known.Analysis of an Iterative Algorithm for Term-Based Ontology Alignment 353?
Species of fish?
A kind of fish?
Species of fresh water fish3.
Thai specific words : The words that we used in our experiments are animals.Several animals are region specific species.
Therefore, they may not have anyassociated English words.
In this case, some words are translated by usingshort phrases as English descriptions of these Thai words.
Another way totranslate these words is to use scientific names of species.The problems mentioned earlier make it more difficult to match concepts bythe algorithm.
However, we can use the algorithm to identify where the problemsoccur.
Then, we can use these results to improve the MMT ontology.The proposed algorithm works in the top-down manner.
That is, the algo-rithm attempts to find the most appropriate concept from the top level, andit will move down if the lower concepts yield better scores.
In order to analyzethe algorithm, we trace the algorithm during moving through the EDR concepts.The first example of the bird concept alignment is shown in Table 2.
The conceptalignment of this example is considered to be exact mapping.
The first columnindicates the level of EDR concepts.
The second and third columns indicate thenumber of MMT words and the number of EDR words after flattening respec-tively.
The fourth column shows the number of intersected words between theMMT and the EDR.
From the table, the algorithm moves through the EDR con-cepts in order to find the most specific concept that still maintains shared terms.This example shows that the algorithm passes through 3 concepts until it stopsat the ?bird?
concept of the EDR.
At the final step, the algorithm decides to tradefew shared terms for a more specific EDR concept.
Note that the MMT is notcompletely cleaned.
When moving down to the EDR bird concept, three sharedterms are lost.
Our analysis shows that these terms are bat species.
They areall wrongly classified to the MMT bird concept by some lexicographers.
Thus,these shared terms will not intersect with any words in the EDR bird conceptwhen the algorithm proceeds to the lower step.
This result suggests that ouralgorithm is quite robust.
The algorithm still finds an appropriate concept eventhe MMT ontology has some flaws.Another analysis of exact mapping is shown in Table 3.
The algorithm movesthrough 4 concepts until matching the EDR snake concept with the MMT snakeconcept.
In this example, the number of members in the MMT snake concept isquite small.
However, the number of shared terms is sufficient to correctly locatethe EDR snake concept.Table 2.
Concept alignment for the ?bird?
conceptLevel MMT words EDR words Intersected words1 67 2112 262 67 1288 263 67 373 23354 S. Tongchim et alTable 3.
Concept alignment for the ?snake?
conceptLevel MMT words EDR words Intersected words1 17 2112 82 17 1288 83 17 71 84 17 26 8The third example shown in Table 4 illustrates the case that is considered tobe subset mapping.
That is, the EDR concept selected by the algorithm is sub-concept of the MMT concept.
This case happens several times since the EDRis more fine-grained than the MMT.
If the members of MMT concept do notcover enough, the algorithm tends to return only sub-concepts.
From the table,the MMT amphibian concept covers only toad and frog species (3 members).Thus, the algorithm moves down to a very specific concept, namely the EDRtoad concept.
Another example of subset mapping is shown in Table 5.
Thisexample also shows that the members of MMT concept do not cover enough.These results can be used to improve the MMT ontology.
If the MMT con-cepts are extended enough, we expect that the correctness of alignment shouldbe improved.Table 4.
Concept alignment for the ?amphibian?
conceptLevel MMT words EDR words Intersected words1 3 2112 22 3 1288 23 3 23 24 3 16 25 3 2 1Table 5.
Concept alignment for the ?other sea creature?
conceptLevel MMT words EDR words Intersected words1 17 2112 52 17 746 53 17 78 34 17 3 25 ConclusionWe have proposed an iterative algorithm to deal with the problem of automatedontology alignment.
This algorithm works in the top-down manner by using thesimilarity of the terms from each ontology.
We use two dictionaries in our exper-iment, namely the MMT semantic hierarchy and the EDR concept dictionary.Analysis of an Iterative Algorithm for Term-Based Ontology Alignment 355The results show that the algorithm can find reasonable EDR concepts for givenMMT concepts.
Moreover, the results also suggest that the algorithm can beused as a tool to locate flaws in the MMT ontology.
These results can be usedto improve the ontology.There are several possible extensions to this study.
The first one is to examinethis algorithm with larger data sets or other ontologies.
The second one is toimprove and correct the ontologies by using the results from the algorithm.Then, we plan to apply this algorithm to the corrected ontologies, and examinethe correctness of the results.
The third one is to use structural information ofontologies in order to improve the correctness.References1.
Ide, N. and Ve?ronis, J.: Machine Readable Dictionaries: What have we learned,where do we go?.
Proceedings of the International Workshop on the Future ofLexical Research, Beijing, China (1994) 137?1462.
Daude?, J., Padro?, L. and Rigau, G.: Mapping WordNets Using Structural Informa-tion.
Proceedings of the 38th Annual Meeting of the Association for ComputationalLinguistics, Hong Kong, (2000)3.
Daude?, J., Padro?, L. and Rigau, G.: A Complete WN1.5 to WN1.6 Mapping.Proceedings of NAACL Workshop ?WordNet and Other Lexical Resources: Appli-cations, Extensions and Customizations?, Pittsburg, PA, United States, (2001)4.
Asanoma, N.: Alignment of Ontologies: WordNet and Goi-Taikei.
Proceedings ofNAACL Workshop ?WordNet and Other Lexical Resources: Applications, Exten-sions and Customizations?, Pittsburg, PA, United States, (2001) 89?945.
Chen, B. and Fung, P.: Automatic Construction of an English-Chinese BilingualFrameNet.
Proceedings of Human Language Technology conference, Boston, MA(2004) 29?326.
Ngai, G., Carpuat , M. and Fung, P.: Identifying Concepts Across Languages: AFirst Step towards a Corpus-based Approach to Automatic Ontology Alignment.Proceedings of the 19th International Conference on Computational Linguistics,Taipei, Taiwan (2002)7.
Yeh, J.-F., Wu, C.-H., Chen, M.-J.
and Yu, L.-C.: Automated Alignment andExtraction of a Bilingual Ontology for Cross-Language Domain-Specific Applica-tions.
International Journal of Computational Linguistics and Chinese LanguageProcessing.
10 (2005) 35?528.
Khan, L. and Hovy, E.: Improving the Precision of Lexicon-to-Ontology AlignmentAlgorithms.
Proceedings of AMTA/SIG-IL First Workshop on Interlinguas, SanDiego, CA (1997)9.
Doan, A., Madhavan, J., Domingos, P., and Halevy, A.: Learning to Map BetweenOntologies on the Semantic Web.
Proceedings of the 11th international conferenceon World Wide Web, ACM Press (2002) 662?67310.
Manning, C. D., and Schu?tze, H.: Foundations of Statistical Natural LanguageProcessing.
MIT Press.
Cambridge, MA (1999)356 S. Tongchim et al11.
Strehl, A., Ghosh, J., and Mooney, R. J.: Impact of Similarity Measures on Web-page Clustering.
Proceedings of AAAI Workshop on AI for Web Search (2000)58?6412.
Miyoshi, H., Sugiyama, K., Kobayashi, M. and Ogino, T.: An Overview of the EDRElectronic Dictionary and the Current Status of Its Utilization.
Proceedings of the16th International Conference on Computational Linguistics (1996) 1090?109313.
CICC: Thai Basic Dictionary.
Center of the International Cooperation for Com-puterization, Technical Report 6-CICC-MT55 (1995)
