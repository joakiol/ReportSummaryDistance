Proceedings of the Linguistic Annotation Workshop, pages 113?116,Prague, June 2007. c?2007 Association for Computational LinguisticsXARA: An XML- and rule-based semantic role labelerGerwert StevensUniversity of Utrecht, the Netherlandsgerwert.stevens@let.uu.nlAbstractXARA is a rule-based PropBank labeler forAlpino XML files, written in Java.
I usedXARA in my research on semantic role la-beling in a Dutch corpus to bootstrap adependency treebank with semantic roles.Rules in XARA are based on XPath expres-sions, which makes it a versatile tool that isapplicable to other treebanks as well.In addition to automatic role annotation,XARA is able to extract training instances(sets of features) from an XML based tree-bank.
Such an instance base can be used totrain machine learning algorithms for auto-matic semantic role labeling (SRL).
In mysemantic role labeling research, I used theTilburg Memory Learner (TiMBL) for thispurpose.1 IntroductionEver since the pioneering article of Gildea and Ju-rafsky (2002), there has been an increasing interestin automatic semantic role labeling (SRL).
In gen-eral, classification algorithms (a supervised machinelearning strategy) are used for this purpose.
Manualannotated corpora provide a gold standard for suchclassifiers.Starting manual annotation from scratch is verytime consuming and therefore expensive.
A possiblesolution is to start from a (partially) automaticallyannotated corpus.
In fact, this reduces the manualannotation task to a manual correction task.
Initialautomatic annotation of a corpus is often referred toas bootstrapping or unsupervised SRL.In recent years relatively little effort has gone intothe development of unsupervised SRL systems.
Thisis partly because semantically annotated Englishcorpora, such as PropBank (Kingsbury et al, 2002)and FrameNet (Johnson et al, 2002), currently con-tain enough data to develop and test SRL systemsbased on machine learning.
Therefore, bootstrap-ping large collections of English texts has no prior-ity anymore.
For languages other than English how-ever, annotated corpora are rare and still very muchneeded.
Therefore, the development of bootstrap-ping techniques is very relevant.One of the languages for which the creation ofsemantically annotated corpora has lagged dramat-ically behind, is Dutch.
Within the project DutchLanguage Corpus Initiative (D-Coi)1, the first stepshave been taken towards the development of a largesemantically annotated Dutch corpus.
The D-Coiproject is a preparatory project which will delivera blueprint and the tools needed for the construc-tion of a 500-million-word reference corpus of con-temporary written Dutch.
The corpus will be an-notated with several layers of annotation, amongstothers with semantic roles.In the context of this project, I developed XARA:(XML-based Automatic Role-labeler for Alpino-trees).
In my research, XARA was used for two pur-poses:?
Bootstrap a dependency treebank with seman-tic roles1http://lands.let.ru.nl/projects/d-coi/113?
Extract an instance base for the training of asemantic role classifier.2 Rule-based role labeling2.1 The Alpino XML-formatThe input for the semantic role tagger is a set ofsentences annotated by the Dutch dependency parserAlpino (Bouma et al, 2000) 2.
Alpino is based ona hand-crafted Head-driven Phrase Structure Gram-mar (HPSG).The annotation scheme of Alpino dependencytrees is based on the Spoken Dutch Corpus (CGN)(Oostdijk, 2002) annotation format.
In Alpino treesthe same labels are used as in their CGN counter-parts and nodes are structured in the same way.
TheXML-format used to store dependency trees how-ever differs.
In the CGN, sentences are stored inthe TIGER-XML format (Lezius, 2002) 3, Alpinouses its own XML format to store parsed sentences(Bouma and Kloosterman, 2002).
In our treebank,every sentence was encoded in a separate XML file.An example of an Alpino dependency tree annotatedwith semantic roles is shown in figure 1.
Below, thecorresponding XML output is shown:<node rel="top"><node cat="top" rel="top"><node cat="smain" rel="--"><node cat="np" rel="su"><node pos="det" rel="det" word="de"/><node pos="noun" rel="hd" word="jongen"/></node><node pos="verb" rel="hd" word="aait"/><node cat="np" rel="obj1"><node pos="det" rel="det" word="de"/><node pos="adj" rel="mod" word="zwarte"/><node pos="noun" rel="hd" word="hond"/></node></node></node>The structure of Alpino XML documents directlycorresponds to the structure of the dependency tree:dependency nodes are represented by NODE ele-ments, attributes of the node elements are the c-label, d-label, pos-tag, etc.
The format is designedto support a range of linguistic queries on the depen-dency trees in XPath directly (Bouma and Klooster-2A demonstration of the Alpino parser can be foundon the following website: http://ziu.let.rug.nl/vannoord_bin/alpino3see also http://www.ims.uni-stuttgart.de/projekte/TIGER/TIGERSearch/index.shtmlFigure 1: Example CGN dependency graph (?Theboy pets the black dog?
)SMAINSUnpde jongenHDverbaaitOBJ1DETdetdeMODadjzwarteHDnounhondman, 2002).
XPath (Clark and DeRose, 1999) is apowerful query language for the XML format and itis the cornerstone of XARA?s rule-based approach.I would like to stress that although our SRL re-search focused on Alpino structures, XARA can beused with any XML-based treebank, thanks to thefact that XPath and XML are widely accepted stan-dards.
This property satisfies one of the major de-sign criteria of the system: reusability.2.2 The annotation processThe input for the tagger is set of directories con-taining Alpino XML files, called a treebank.
Eachsentence is annotated separately by applying a setof rules.
Rules are applied to local dependency do-mains (subtrees of the complete dependency tree).The local dependency domain to which a rule is ap-plied, is called the rule?s context.
A context is sim-ply defined by an XPath expression which selects agroup of nodes.Suppose for example that we want to apply a cer-tain rule to nodes that are part of a passive partici-ple, i.e the context of our rule are passive participles.Passive participles in Alpino trees are local depen-dency domains with a root node with c-label PPART.An example is shown in figure 2.The dark colored nodes are the ones we are inter-ested in.
To select these nodes, the following XPathexpression can be used:114Figure 2: Example PropBank annotation on a De-pendency tree (?She is never seen?)SMAINSU1:pronArg1zeHDverbwordtVCppartOBJ11?MODadvnooitHDverbRELgezien//node[@cat=?ppart?][preceding-sibling::node[@rel=?hd?
and (@root=?word?
)]]which says that we are looking for nodes with the c-label PPART and the auxiliary verb indicating passivetense (word) as preceding sibling.Once a context is defined, rules can be appliedto nodes in this context.
Rules consist of an XPathexpression which specifies a relative path from thecontext?s root node to the target node and an outputlabel.
Upon application of the rule, the target nodewill be labeled with output label.The output label can have three kinds of values:?
A positive number n, to label a node withARGn.?
The value -1, to label the node with the firstavailable numbered argument.?
A string value, to label the node with an arbi-trary label, for example an ARGM.Notice that because the label can be specified asa string value, the set of possible labels is not re-stricted.
In my work, I used PropBank labels, butother labels - such as generic thematic roles - can beused just as well.Formally, a rule in XARA can be defined as a(path, label) pair.
Suppose for example that wewant to select direct object nodes in the previouslydefined context and assign them the label ARG1.This can be formulated as:(./node[@rel=?obj1?
],1)The first element of this pair is an XPath expres-sion that selects direct object daughters, the secondelement is a number that specifies which label wewant to assign to these target nodes.
In this case thelabel is a positive integer 1, which means the targetnode will receive the label ARG1.
Upon applicationof a rule, an attribute (?pb?)
is added to the targetnode element in the XML file.
This attribute con-tains the PropBank label.3 Feature extractionBesides bootstrapping an unannotated corpus, train-ing a SRL classifier was another important part ofmy automatic SRL strategy.
The learning tool Iused for this purpose was TiMBL (Tilburg MemoryBased Learner) (Daelemans et al, 2004).In order to be able to train a TiMBL classifier, afile with training data is needed.
Training data isrepresented as a text file containing instances.
Eachline in the text file represents a single instance.
Aninstance consists of a set of features separated bycommas and a target class.
XARA is able to createsuch an instance base from a set of XML files auto-matically.3.1 The automatic feature extraction processThe target instance base consists of predi-cate/argument pairs encoded in training instances.Each instance contains features of a predicate andits candidate argument.
Candidate arguments arenodes (constituents) in the dependency tree.
Thispair-wise approach is analogous to earlier work byvan den Bosch et al (2004) and Tjong Kim Sanget al (2005) in which instances were built fromverb/phrase pairs from which the phrase parent is anancestor of the verb.Once it is clear how instances will be encoded, aninstance base can be extracted from the annotatedcorpus.
For example, the following instances can beextracted from the tree in figure 2:115zie,passive,mod,adv,#zie,passive,su,pron,ARG1These two example instances consist of 4 featuresand a target class each.
In this example, the predi-cate lemma (stem) and voice, and the candidate ar-gument c-label, d-label are used.
For null valuesthe hash symbol (#) is specified.
The first instancerepresents the predicate/argument pair (zie, nooit)(?see,never?
), the second instance represents the pair(zie, ze) (?see, she?
).The extraction of instances from the annotatedcorpus can be done fully automatically by XARAfrom the command line.
The resulting feature basecan be directly used in training a TiMBL classifier.4 PerformanceIn order to evaluate the labeling of XARA, the out-put of XARA?s semantic role tagger was comparedwith the manual corrected annotation of 2,395 sen-tences.
The results are shown in table 1.Table 1: Overall performancePrecision Recall F?=165,11% 45,83% 53,80Since current rules in XARA cover only a sub-set of PropBank labels, recall is notably lower thanprecision.
However, current overall performance ofXARA is encouraging.
Our expectation is that, es-pecially if the current rule set is improved and/or ex-tended, XARA can be a very useful tool in currentand future SRL research.ReferencesG.
Bouma and G. Kloosterman.
2002.
Querying depen-dency treebanks in xml.
In Proceedings of the Thirdinternational conference on Language Resources andEvaluation (LREC).
Gran Canaria.G.
Bouma, G. van Noord, and R. Malouf.
2000.
Alpino:wide-coverage computational analysis of dutch.J.
Clark and S. DeRose.
1999.
Xml path language(xpath).
W3C Recommendation 16 November 1999.URL: http://www.w3.org/TR/xpath.D.
Daelemans, D. Zavrel, K. van der Sloot, andA.
van den Bosch.
2004.
Timbl: Tilburg memorybased learner, version 5.1, reference guide.
ILK Tech-nical Report Series 04-02, Tilburg University.D.
Gildea and D. Jurafsky.
2002.
Automatic labeling ofsemantic roles.
Comput.
Linguist., 28(3):245?288.C.
R. Johnson, C. J. Fillmore, M. R. L. Petruck, C. F.Baker, M. J. Ellsworth, J. Ruppenhofer, and E. J.Wood.
2002.
FrameNet:Theory and Practice.P.
Kingsbury, M. Palmer, and M. Marcus.
2002.
Addingsemantic annotation to the penn treebank.
In Proceed-ings of the Human Language Technology Conference(HLT?02).W Lezius.
2002.
Ein Suchwerkzeug fu?r syntaktischannotierte Textkorpora.
Ph.D. thesis, University ofStuttgart.N.
Oostdijk.
2002.
The design of the spoken dutch cor-pus.
In P. Peters, P. Collins, and A. Smith, editors, NewFrontiers of Corpus Research, pages 105?112.
Ams-terdam: Rodopi.E.
Tjong Kim Sang, S. Canisius, A. van den Bosch, andT.
Bogers.
2005.
Applying spelling error correctiontechniques for improving semantic role labeling.
InProceedings of the Ninth Conference on Natural Lan-guage Learning (CoNLL-2005).
AnnArbor, MI, USA.A.
van den Bosch, S. Canisius, W. Daelemans, I. Hen-drickx, and E. Tjong Kim Sang.
2004.
Memory-based semantic role labeling: Optimizing features, al-gorithm, and output.
In H.T.
Ng and E. Riloff, edi-tors, Proceedings of the Eighth Conference on Compu-tational Natural Language Learning (CoNLL-2004).Boston, MA, USA.116
