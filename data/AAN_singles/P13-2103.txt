Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 578?584,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsA Unified Morpho-Syntactic Scheme of Stanford DependenciesReut TsarfatyUppsala University, Swedentsarfaty@stp.lingfil.uu.seAbstractStanford Dependencies (SD) provide afunctional characterization of the gram-matical relations in syntactic parse-trees.The SD representation is useful for parserevaluation, for downstream applications,and, ultimately, for natural language un-derstanding, however, the design of SD fo-cuses on structurally-marked relations andunder-represents morphosyntactic realiza-tion patterns observed in MorphologicallyRich Languages (MRLs).
We present anovel extension of SD, called Unified-SD(U-SD), which unifies the annotation ofstructurally- and morphologically-markedrelations via an inheritance hierarchy.
Wecreate a new resource composed of U-SD-annotated constituency and dependencytreebanks for the MRL Modern Hebrew,and present two systems that can automat-ically predict U-SD annotations, for goldsegmented input as well as raw texts, withhigh baseline accuracy.1 IntroductionStanford Dependencies (SD) provide a functionalcharacterization of the grammatical relations insyntactic trees, capturing the predicate-argumentstructure of natural language sentences (de Marn-effe et al, 2006).
The SD representation proveduseful in a range of downstream tasks, includ-ing Textual Entailments (Dagan et al, 2006) andBioNLP (Fundel and Zimmer., 2007), and in re-cent years SD structures have also become a de-facto standard for parser evaluation in English (deMarneffe and Manning, 2008a; Cer et al, 2010;Nivre et al, 2010).
Efforts now commence to-wards extending SD for cross-lingual annotationand evaluation (McDonald et al, 2013; Che et al,2012; Haverinen et al, 2011).
By and large, theseefforts aim to remain as close as possible to theoriginal SD scheme.
However, the original SD de-sign emphasizes word-tokens and configurationalstructures, and consequently, these schemes over-look properties and realization patterns observedin a range of languages known as MorphologicallyRich Languages (MRLs) (Tsarfaty et al, 2010).MRLs use word-level affixes to express gram-matical relations that are typically indicated bystructural positions in English.
By virtue ofword-level morphological marking, word-order inMRLs may be flexible.
MRLs have been a fo-cal point for the parsing community due to thechallenges that these phenomena pose for systemsoriginally developed for English.1 Here we arguethat the SD hierarchy and design principles simi-larly emphasize English-like structures and under-represent morphosyntactic argument-marking al-ternatives.
We define an extension of SD, calledUnified-SD (U-SD), which unifies the annotationof structurally and morphologically marked rela-tions via an inheritance hierarchy.
We extend SDwith a functional branch, and provide a principledtreatment of morpho-syntactic argument marking.Based on the U-SD scheme we create a newparallel resource for the MRL Modern Hebrew,whereby aligned constituency and dependencytrees reflect equivalent U-SD annotations (cf.Rambow (2010)) for the same set of sentences.
Wepresent two systems that can automatically learnU-SD annotations, from the dependency and theconstituency versions respectively, delivering highbaseline accuracy on the prediction task.1See also the SPMRL line of workshops https://sites.google.com/site/spsemmrl2012/ and theMT-MRL workshop http://cl.haifa.ac.il/MT/.5782 The Challenge: SD for MRLsStanford Dependencies (SD) (de Marneffe et al,2006; de Marneffe and Manning, 2008b) deliver afunctional representation of natural language sen-tences, inspired by theoretical linguistic work suchas studies on Relational Grammars (Postal andPerlmutter, 1977), Lexical Functional Grammars(LFG) (Bresnan, 2000) and the PARC dependencyscheme (King et al, 2003).
At the same time, thescheme is designed with end-users in mind, allow-ing them to utilize parser output in a form whichis intuitively interpretable and easily processed.SD basic trees represent sentences as binaryrelations between word tokens.
These relationsare labeled using traditional grammatical concepts(subject, object, modifier) that are arranged into aninheritance hierarchy (de Marneffe and Manning,2008a, Sec.
3).
There are different versions of SDannotations: the basic SD scheme, which anno-tates surface dependency relations as a tree span-ning all word tokens in the sentence, and the col-lapsed SD version, in which function words (suchas prepositions) are collapsed and used for speci-fying a direct relation between content words.The SD scheme defines a core set of labelsand principles which are assumed to be usefulfor different languages.
However, a close exam-ination of the SD label-set and inheritance hier-archy reveals that some of its design principlesare geared towards English-like (that is, configu-rational) phenomena, and conflict with basic prop-erties of MRLs.
Let us list three such design prin-ciples and outline the challenges that they pose.2.1.
SD relate input-tokens.
In MRLs, substan-tial information is expressed as word affixes.
Oneor more morphemes may be appended to a contentword, and several morphemes may be contained ina single space-delimited token.
For example, theHebrew token wkfraiti2 in (1) includes the mor-phemes w (and), kf (when) and raiti (saw); the lat-ter segment is a content word, and the former twoare functional morphemes.
(1) wkfraitiand-when-saw.1st.Singularatacchsrjthe-moviehifnthe-oldw/and-1.1 kf/when-1.2 raiti/saw-1.3at/acc-2 h/the-3.1 srj/movie-3.2 h/the-4.1ifn/old-4.22We use the transliteration of Sima?an et al (2001).
(a) SNP-sbj?John?VPV-prd?loves?NP-obj?Mary?
(b) SNP-sbj?dan?DanV-prd?ohev?lovesNP-obj?et-dana?ACC-DanaFigure 1: English (a) and Hebrew (b) PS trees dec-orated with function labels as dash features.Na?
?vely taking input tokens as words fails to cap-ture meaningful relations between morphologicalsegments internal to space-delimited tokens.2.2.
SD label structurally-marked relations.Configurational languages like English use func-tion words such as prepositions and auxiliariesto indicate relations between content words andto mark properties of complete structures.
InMRLs, such relations and properties may be indi-cated by word-level morphological marking suchas case (Blake, 1994) and agreement (Corbett,2006).
In (1), for instance, the case marker at indi-cates an accusative object relation between ?see?and ?movie?, to be distinguished from, e.g, a da-tive object.
Moreover, the agreement in (1) onthe definite morpheme signals that ?old?
modifies?movie?.
While the original SD scheme label-setcovers function words (e.g.
auxpass, expl, prep),it misses labels for bound morphemes that markgrammatical relations across languages (such asaccusative, dative or genitive).
Explicit labeling ofsuch relational morphemes will allow us to benefitfrom the information that they provide.2.3.
SD relations may be inferred using struc-tural cues.
SD relations are extracted from dif-ferent types of trees for the purpose of, e.g., cross-framework evaluation (Cer et al, 2010).
Inso-far, recovering SD relations from phrase-structure(PS) trees have used a range of structural cuessuch as positions and phrase-labels (see, for in-stance, the software of de Marneffe and Manning(2008a)).
In MRLs, positions and phrase typesmay not suffice for recovering SD relations: anNP under S in Hebrew, for instance, may be asubject or an object, as shown in Figure 1, andmorphological information then determines thefunction of these constituents.
Automatically in-ferring predicate-argument structures across tree-banks thus must rely on both structural and mor-phological marking, calling for a single annotationscheme that inter-relate the marking alternatives.579gfroot hdprdexist nhdghd depargsbj obj comp mod conjfuncmarkerprep caseacc gen detdefauxpassaux cop subrel complmn ccpunctFigure 3: The Unified SD (U-SD) Ontology.
The architectural changes from the original SD scheme: (i)added a hd branch, for implicit head labels; (ii) added a func branch where all functional elements (prep,aux, cc, rel) as well as morphological markers are moved under; (iii) there is a clear separation betweenopen-class categories (which fall under hd, dep), closed class elements (under func) and non-words (rootand punct).
Boldface elements are new to U-SD.
Italic branches spell out further as in the original SD.
(a) ROOTS-rootV-prd?raiti?NP-objACC-acc?at?NP-hdNP-hdH-def?h?NN-hd?srj?ADJP-modH-def?h?ADJ-hd?ifn?
(b) ROOTroot?raiti?/Vobj?at?/ACChd?srj?/NNdefh/Hmod?ifn?/ADJdefh/H(c) ROOTroot?raiti?/VACC-obj?srj?/NN.DEFmod?ifn?/ADJ.DEFFigure 2: Sample U-SD Trees for sentence (1).
(a) a phrase-structure tree decorated with U-SD la-bels, (b) a basic U-SD tree, and (c) a collapsed U-SD tree, where functional nodes are consumed.3 The Proposal: Unified-SD (U-SD)To address these challenges, we propose an exten-sion of SD called Unified-SD (U-SD) which an-notates relations between morphological segmentsand reflects different types of argument-markingpatterns.
The SD ontology is re-organized and ex-tended to allow us to annotate morphologically-and structurally-marked relations alike.Preliminaries.
We assume that M(w1...wn) =s1....sm is a morphological analysis function thatidentifies all morphological segments of a sen-tence S = w1...wn.
The U-SD scheme providesthe syntactic representation of S by means of a setof triplets (l, si, sj) consisting of a label l, a headsi and a dependent sj (i 6= j).
The segments areassumed to be numbered x.y where x is the posi-tion of the input token, and y is the position of thesegment inside the token.
The segmentation num-bering is demonstrated in Example (1).The U-SD Hierarchy.
Figure 3 shows our pro-posed U-SD hierarchy.
Everything in the ontol-ogy is of type gf (grammatical function).
Wedefine five ontological sub-types: root, hd, dep,func, punct.
The root marks a special root de-pendency.
The dep branch is used for depen-dent types, and it retains much of the structure inthe original SD scheme (separating sbj types, objtypes, mod types, etc.).
The new func branch con-tains argument-marking elements, that is, functionwords and morphemes that play a role in indicat-ing properties or grammatical relations in the syn-tactic representation.
These functional elementsmay be of types marker (prepositions and case),aux (auxiliary verbs and copular elements) and sub(subordination/conjunction markers).
All inher-ited func elements may be consumed (henceforth,collapsed) in order to infer grammatical proper-ties and relations between content words.
Headtypes are implicit in dependency triplets, however,when decorating PS trees with dependency labelsas dash features or edge features (as in TigerXMLformats (Brants et al, 2002) or via unification-based formalisms) both heads and dependents arelabeled with their grammatical types (see Fig-ure 2(a)).
The hd branch extends the scheme withan inventory of argument-taking elements, to beused when employing SD inside constituency tree-banks.
The punct branch is reserved for punctu-ation, prosody and other non-verbal speech acts.The complete ontology is given in the appendix.Annotation Guidelines.
Anderson (1992) de-lineates three kinds of properties that are realizedby morphology: structural, inherent, and agree-ment properties.
Structural properties (e.g., case)are marked on a content word to indicate its rela-580Gold:Segments FunctionsDEP 1.00 0.8475RR 1.00 0.8984 Predicted:Segments FunctionsDEP 1.00 0.8349RR 1.00 0.8559 Raw:Segments FunctionsDEP 0.9506 0.7817RR 0.9603 0.8130Table 1: Inferring U-SD trees using different frameworks.
All numbers report labeled TedEval accuracy.tion to other parts of the sentence.
Inherent prop-erties (gender, number, etc.)
indicate inherent se-mantic properties of nominals.
Agreement prop-erties indicate the semantic properties of nominalson top of other elements (verbs, adjectives, etc.
),in order to indicate their relation to the nominals.We define annotation guidelines that reflectthese different properties.
Structural morphemes(case) connect words in the arc-structure, linkinga head to its semantic dependent, like the casemarker ?at?-ACC in Figure 2(b).
Inherent / agree-ment properties are annotated as dependents of thecontent word they add properties to, for instance,the prefixes def in Figure 2(b) hang under the mod-ified noun and adjective.Collapsed U-SD structures interpret func ele-ments in order to refine the representation of re-lations between content words.
Case markers canbe used for refining the relation between the con-tent words they connect by labeling their direct re-lation, much like prep in the original SD scheme(see, e.g., the ACC-obj in Figure 2c).
Inher-ent/agreement features are in fact features of theirrespective head word (as the X.DEF nodes in Fig-ure 2c).3 Auxiliaries may further be used to addtense/aspect to the main predicate, and subordina-tors may propagate information inside the struc-ture (much like conjunction is propagated in SD).Universal Aspects of U-SD.
The revised U-SD ontology provides a typological inventoryof labels that describe different types of argu-ments (dep), argument-taking elements (hd), andargument-marking elements (func) in the grammarof different languages.
Abstract (universal) con-cepts reside high in the hierarchy, and more spe-cific distinctions, e.g., morphological markers ofparticular types, are daughters within more spe-cific branches.
Using U-SD for evaluating mono-lingual parsers is best done with the complete labelset relevant for that language.
For cross-languageevaluation, we can limit the depth of the hierar-chy, and convert the more specific notions to theirmost-specific ancestor in the evaluation set.3Technically, this is done by deleting a line adding a prop-erty to the morphology column in the CoNLL format.4 Automatic Annotation of U-SD TreesCan U-SD structures be automatically predicted?For MRLs, this requires disambiguating both mor-phological and syntactic information.
Here weemploy the U-SD scheme for annotating mor-phosyntactic structures in Modern Hebrew, anduse these resources to train two systems that pre-dict U-SD annotations for raw texts.4Data.
We use the Modern Hebrew treebank(Sima?an et al, 2001), a corpus of 6220 sentencesmorphologically segmented and syntactically an-alyzed as PS trees.
We infer the function labelof each node in the PS trees based on the mor-phological features, syntactic environment, anddash-feature (if exist), using deterministic gram-mar rules (Glinert, 1989).
Specifically, we com-pare each edge with a set of templates, and, oncefinding a template that fits the morphological andsyntactic profile of an edge, we assign functionsto all daughters.
This delivers PS trees where eachnode is annotated with a U-SD label (Figure 2a).At a second stage we project the inferred labelsonto the arcs of the unlabeled dependency trees ofGoldberg (2011), using the tree unification opera-tion of Tsarfaty et al (2012a).
The result is a de-pendency tree aligned with the constituency treewhere dependency arcs are labeled with the samefunction as the respective span in the PS tree.5Systems.
We present two systems that predictU-SD labels along with morphological and syn-tactic information, using [DEP], a dependencyparser (Nivre et al, 2007), and [RR], a Relational-Realizational (RR) constituency parser (Tsarfatyand Sima?an, 2008).
DEP is trained directly on thedependency version of the U-SD resource.
Sinceit cannot predict its own segmentation, automaticsegments and tags are predicted using the systemof Adler and Elhadad (2006).
The constituency-4Despite significant advances in parsing Hebrew, as of yetthere has been no functional evaluation of Hebrew parsers.E.g., Goldberg and Elhadad (2010) evaluate on unlabeled de-pendencies, Tsarfaty (2010) evaluate on constituents.
This islargely due to the lack of standard resources and guidelinesfor annotating functional structures in such a language.5The resources can be downloaded at http://www.tsarfaty.com/heb-sd/.581based model is trained on U-SD-labeled RR treesusing Petrov et al (2006).
We use the lattice-basedextension of Goldberg and Elhadad (2011) to per-form joint segmentation and parsing.
We evalu-ate three input scenarios: [Gold] gold segmen-tation and gold tags, [Predicted] gold segments,and [Raw] raw words.
We evaluate parsing resultswith respect to basic U-SD trees, for 42 labels.
Weuse TedEval for joint segmentation-tree evaluation(Tsarfaty et al, 2012b) and follow the cross-parserevaluation protocol of Tsarfaty et al (2012a).Results.
Since this work focuses on creating anew resource, we report results on the standarddevset (Table 1).
The gold input scenarios ob-tain higher accuracy on function labels in all cases,since gold morphological analysis delivers disam-biguated functions almost for free.
Constituency-based RR structures obtain better accuracy on U-SD annotations than the respective dependencyparser.
All in all, the U-SD seed we created allowsus to infer rich interpretable annotations automati-cally for raw text, using either a dependency parseror a constituency parser, in good accuracy.5 ConclusionThe contribution of this paper is three-fold.
We of-fer a principled treatment of annotating MRLs viaa Unified-SD scheme, which we design to be ap-plicable to many languages.
We deliver new U-SDannotated resources for the MRL Modern Hebrew,in different formal types.
We finally present twosystems that automatically predict U-SD annota-tions for raw texts.
These structures are intendedto serve semantic applications.
We further intendto use this scheme and computational frameworksto serve a wide cross-parser investigation on infer-ring functional structures across languages.Appendix: The U-SD OntologyThe list in (2) presents the complete U-SD ontol-ogy.
The hierarchy employs and extends the SDlabel set of de Marneffe et al (2006).
For read-ability, we omit here various compound types un-der mod, including nn, mwe, predet and preconj.AcknowledgementsWe thank Joakim Nivre, Yoav Goldberg, Djame?Seddah and anonymous reviewers for commentsand discussion.
This research was partially fundedby the Swedish Research Council.
The author isnow a researcher at the Weizmann Institute.
(2) gf root - roothd - head (governor, argument-taking)prd - verbal predicateexist - head of an existential phrasenhd - head of a nominal phraseghd - genitive head of a nominal phrasedep - dependent (governed, or an argument)arg - argumentagent - agentcomp - complementacomp - adjectival complementccomp - comp clause with internal sbjxcomp - comp clause with external sbjpcomp - comp clause of a prepositionobj - objectdobj - direct objectgobj - genitive objectiobj - indirect objectpobj - object of a prepositionsubj - subjectexpl - expletive subjectnsubj - nominal subject?
nsubjpass - passive nominal sbjcsubj - clausal subject?
csubjpass - passive clausal sbjmod - modifierappos - apposition/parentheticalabbrev - abbreviationamod - adjectival modifieradvmod - adverbial modifier?
neg - negative modifierprepmod - prepositional modifier?
possmod - possession modifier?
tmod - temporal modifierrcmod - relative clause modifierinfmod - infinitival modifiernummod - numerical modifierparataxis - ?side-by-side?, interjectionconj - conjuctfunc - functional (argument marking)marker - nominal-marking elementsprep - prepositioncase - case marker?
acc - accusative case?
dat - dative case?
gen - genitive case?
nom - nominative casedet - determiner?
def - definite marker?
dem - demonstrativesub - phrase-marking elementscomplm - introducing comp phraserel - introducing relative phrasecc - introducing conjunctionmark - introducing an advb phraseaux - auxiliary verb or a feature-bundleauxpass - passive auxiliarycop - copular elementmodal - modal verbqaux - question auxiliarypunct - punctuation582ReferencesMeni Adler and Michael Elhadad.
2006.
Anunsupervised morpheme-based HMM for Hebrewmorphological disambiguation.
In Proceedings ofCOLING-ACL.Stephen R. Anderson.
1992.
A-Morphous Morphol-ogy.
Cambridge University Press.Barry J. Blake.
1994.
Case.
Cambridge UniversityPress, Cambridge.Sabine Brants, Stefanie Dipper, Silvia Hansen, Wolf-gang Lezius, and George Smith.
2002.
The TIGERtreebank.
In Proceedings of TLT.Joan Bresnan.
2000.
Lexical-Functional Syntax.Blackwell.Daniel Cer, Marie-Catherine de Marneffe, Daniel Ju-rafsky, and Christopher D. Manning.
2010.
Parsingto stanford dependencies: Trade-offs between speedand accuracy.
In Proceedings of LREC.Wanxiang Che, Valentin I. Spitkovsky, and Ting Liu.2012.
A comparison of chinese parsers for stanforddependencies.
In Proceedings of ACL, pages 11?16.Greville G. Corbett.
2006.
Agreement.
Cam-bridge Textbooks in Linguistics.
Cambridge Univer-sity Press.Ido Dagan, Oren Glickman, and Bernardo Magnini.2006.
The PASCAL recognising textual entailmentchallenge.
In MLCW 2005, LNAI Volume.Marie-Catherine de Marneffe and Christopher D. Man-ning.
2008a.
Stanford dependencies manual.
Tech-nical Report.Marie-Catherine de Marneffe and Christopher D. Man-ning.
2008b.
The stanford typed dependenciesrepresentation.
In Proceedings of the workshop onCross-Framework and Cross-Domain Parser Evalu-ation.Marie-Catherine de Marneffe, Bill MacCartney, andChristopher D. Manning.
2006.
Generating typeddependency parses from phrase structure parses.
InProceedings of LREC, pages 449?454.Robert Kuffner Fundel, Katrin and Ralf Zimmer.
2007.RelEx relation extraction using dependency parsetrees.
Bioinformatics, (23).Lewis Glinert.
1989.
The Grammar of Modern He-brew.
Cambridge University Press.Yoav Goldberg and Michael Elhadad.
2010.
Easy-firstdependency parsing of Modern Hebrew.
In Proceed-ings of NAACL/HLT workshop on Statistical Parsingof Morphologically Rich Languages.Yoav Goldberg and Michael Elhadad.
2011.
Joint He-brew segmentation and parsing using a PCFGLA lat-tice parser.
In Proceedings of ACL.Yoav Goldberg.
2011.
Automatic syntactic processingof Modern Hebrew.
Ph.D. thesis, Ben Gurion Uni-versity of the Negev.Katri Haverinen, Filip Ginter, Samuel Kohonen, TimoViljanen, Jenna Nyblom, and Tapio Salakoski.2011.
A dependency-based analysis of treebank an-notation errors.
In Proceedings of DepLing.Tracy H. King, Richard Crouch, Stefan Riezler, MaryDalrymple, and Ronald Kaplan.
2003.
The PARC700 dependency bank.
In The 4th InternationalWorkshop on Linguistically Interpreted Corpora.Ryan McDonald, Joakim Nivre, Yvonne Quirmbach-Brundage, Yoav Goldberg, Dipanjan Das, KuzmanGanchev, Keith Hall, Slav Petrov, Hao Zhang, Os-car Ta?ckstro?m, Claudia Bedini, Nu?ria BertomeuCastello?, and Jungmee Lee.
2013.
Universal depen-dency annotation for multilingual parsing.
In Pro-ceedings of ACL.Joakim Nivre, Jens Nilsson, Johan Hall, AtanasChanev, Gu?lsen Eryigit, Sandra Ku?bler, SvetoslavMarinov, and Erwin Marsi.
2007.
Maltparser:A language-independent system for data-driven de-pendency parsing.
Natural Language Engineering,13(1):1?41.Joakim Nivre, Laura Rimell, Ryan McDonald, and Car-los Go?mez-Rodr??guez.
2010.
Evaluation of depen-dency parsers on unbounded dependencies.
In Pro-ceedings of COLING, pages 813?821.Slav Petrov, Leon Barrett, Romain Thibaux, and DanKlein.
2006.
Learning accurate, compact, and inter-pretable tree annotation.
In Proceedings of ACL.Paul M. Postal and David M. Perlmutter.
1977.
Towarda universal characterization of passivization.
In BLS3.Owen Rambow.
2010.
The Simple Truth about De-pendency and Phrase Structure Representations: AnOpinion Piece.
In Proceedings of HLT-ACL.Khalil Sima?an, Alon Itai, Yoad Winter, Alon Altman,and Noa Nativ.
2001.
Building a Tree-Bank forModern Hebrew Text.
In Traitement Automatiquedes Langues.Reut Tsarfaty and Khalil Sima?an.
2008.
Relational-realizational parsing.
In Proceedings of CoLing.Reut Tsarfaty, Djame Seddah, Yoav Goldberg, SandraKuebler, Marie Candito, Jennifer Foster, YannickVersley, Ines Rehbein, and Lamia Tounsi.
2010.Statistical parsing for morphologically rich language(SPMRL): What, how and whither.
In Proceedingsof the first workshop on Statistical Parsing of Mor-phologically Rich Languages (SPMRL) at NA-ACL.Reut Tsarfaty, Joakim Nivre, and Evelina Andersson.2012a.
Cross-framework evaluation for statisticalparsing.
In Proceeding of EACL.583Reut Tsarfaty, Joakim Nivre, and Evelina Andersson.2012b.
Joint evaluation for segmentation and pars-ing.
In Proceedings of ACL.Reut Tsarfaty.
2010.
Relational-Realizational Pars-ing.
Ph.D. thesis, University of Amsterdam.584
