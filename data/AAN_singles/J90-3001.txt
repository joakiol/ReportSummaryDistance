RESOLVING QUASI LOGICAL FORMSHiyan AlshawiSRI InternationalCambridge Research Centre23 Millers YardCambridge CB2 1RQU.K.The paper describes intermediate and resolved logical form representations of sentences involving referringexpressions and a reference resolution process for mapping between these representations.
The intermediaterepresentation, Quasi Logical Form (or QLF), may contain unresolved terms corresponding to anaphoricnoun phrases covering bound variable anaphora, reflexives, and definite descriptions.
Implict relations arisingin constructs uch as compound nominals appear in QLF as unresolved formulae.
The QLF representation isalso neutral with respect to ambiguities corresponding to quantifier scope and the collective/distributivedistinction, the latter being treated as quantifier resolution.
Reference candidates are proposed according toan ordered set of "reference resolution rules" producing possible resolved logical forms to which linguisticand pragmatic onstraints are then applied.1 INTRODUCTIONThis paper is concerned with the relationship between thelinguistic analysis of sentences and their interpretation icontext.
Our model is described as implemented in the CoreLanguage Engine (CLE), a domain-independent system fortranslating natural language sentences into logical formrepresentations.
One of the characteristics of this system isthat it embodies an extreme form of a staged naturallanguage processing architecture whereby modular process-ing components have the function of mapping betweendifferent levels of sentence representation.
Representationsat the level of quasi logical form (QLF) are the result ofapplying declarative rules for morphological, syntactic, andsemantic analysis.
These QLF representations have subex-pressions corresponding to unresolved referring construc-tions.
The QLF level can be regarded as the natural evel ofsentence r presentation resulting from compositional seman-tic analysis independently of the influence of context:Sentence-LINGUISTIC ANALYSIS ----~QLFs-QLF RESOLUTION IN CONTEXT---~LF.QLFs are also neutral with respect o quantifier scope, andthe distributive/collective and referential/attributive dis-tinctions.
Collective and attributive readings are viewed asresolution to suitable quantifiers in a manner explained inthe paper.
We will not be discussing the process of quanti-fier scoping here: a scoping mechanism for the CLE hasalready been described by Moran (1988), and a laterversion is described by Pereira in Alshawi et al (1988).Formally, it may be possible to regard the resolutionprocess as defining a function from (QLF,context) pairs toLFs.
In practice, however, since the contextual informationexploited by the CLE resolution process is incomplete, aparticular QLF expression may correspond to several LFexpressions.2 DERIVING LFs  FROM QLFs2.1 QLF CONSTRUCTSThe QLF language is a superset of the LF (logical form)language used in the CLE (Alshawi and van Eijck 1989).LF is itself an extension of first order logic, includinggeneralized quantifiers and some higher order operatorsand relations.
The additional QLF constructs relevant oreference resolution are a_terms (anaphoric terms),q_terms (quantified terms), and a_forms (anaphoric for-mulae).
In general, the first two arise from anaphoric andquantified noun phrases, while a_forms arise from linguis-tic expressions that embody implicit relations or ellipsis.a_terms, q_terms and a_forms include linguistic informa-tion represented asa 'reference category,' a variable, and arestriction (a QLF formula):a-term(Category, Entity bar, Restriction)q_term(Category, Entity Var, Restriction)a._~\[orm(Category, Predicate Var, Restriction).In a_terms and q_terms the variable stands for a referent,or is simply the variable of an LF quantification, and theformula is a restriction on that variable.
In a_forms thevariable appears in predicate position in the restriction.
WeComputational Linguistics Volume 16, Number 3, September 1990 133Hiyan Alshawi Resolving Quasi Logical Formswill show categories as a list of feature-value pairs:(Feature I = Value 1 .
.
.
.
.
Feature N = Value N>(In fact the CLE uses a different, but equivalent, notationfor categories.
)All three QLF constructs are introduced explicitly by thesemantic analysis rules.
For example, the sentence She meta friend of John has the following QLF representation inwhich the a_term is the semantic analysis for she, theq_term is the analysis of the quantified noun phrase afriend of John, and the a_form is the analysis of friend ofJohn: 1\[meet,a_term((  t = ref,p = pro,l = she,n = sing, a = ( ) ),Y,\[female,Y\]),q_ term(  ( t = quant, n = sing, 1 = a ),X,a_{orm((t  =prod ,  p = genii ),R,\[and,\[friend, X\],\[R,john,X\]\])\])\]).The QLF expressions corresponding to various linguisticphenomena are described in Section 4.2.2 QLF RESOLUTIONBasically, the process of QLF resolution involves determin-ing possible LF terms to replace each QLF a___term ordefinite description, possible quantifiers to replace the deter-miners for q_terms, and possible formulae to replace achQLF a_form.
The quantifier seeping phase determines thescope, or body, for each q_term producing seeped expres-sions that employ a four part generalized quantifier nota-tion (Woods 1978):quant (Quantifier, Variable, Restriction, Body).?
In the example above, QLF resolution leads to the follow-ing LF in which the a_term is replaced by an intersenten-tial referent mary, the noun phrase determiner is replacedby the quantifier exists, and the a_form is simply replacedby a formula involving the relational noun predicatefriend__of taken from the lexicon:quant (exists, X,\[and,\[friend,X\],\[{riend--of,john, X\]\],\[meet,mary, X\]).Proposing resolutions for a QLF is followed by theapplication of plausibility constraints, both linguistic andnonlinguistic (Section 6).
The constraints are applied to aversion of the QLF that includes proposed resolutions ofreferring expressions.
This 'resolved quasi logical form,' orRQLF, thus implicitly represents a QLF, an LF, and thecorrespondence b tween them.
If the proposed RQLF failsto obey these constraints, then reference resolution willgenerate other possibilities for resolving the QLF; if allsuch proposed RQLFs fail the tests, other QLFs for thesentence wilt be considered.
Once an RQLF is accepted,the CLE updates its model of currently salient discourseentities used for resolving intersentential references (Sec-tion 5).
The LF implicit in the RQLF is then extracted tobecome the final output of the reference resolution andplausibility phases.
To summarize, we can view a QLF asgiving a semantic analysis for an utterance, an RQLF as arepresentation f its interpretation i context, and an LF asa representation f its truth conditions.
The process of QLFresolution can be viewed schematically as follows:QLF-scoPING AND REFERENCE ----~RQLFs-CONSTRAINTS AND PLAUSIBILITY--*LF.A general property of RQLFs is that they are formed byadding information to the QLFs from which they werederived; intuitively, this corresponds to fleshing out theQLFs in context.
Thus referents are shown in-place in anRQLF, that is, the variables for resolved a_terms anddefinite descriptions are unified with their referents, andre,;olved a__form relations are instantiated in the a_formre,;triction, q_terms also remain in the RQLF, so theinformation about quantified noun phrases from the origi-nal (unscoped) QLF is preserved.
This does mean that anRQLF can contain redundancies, but these will be removedwhen the final LF is extracted from it (though, for brevity,we will usually not show q_terms in seeped expressions).The RQLF interpretation leading to the LF shown above isquant(exists, Xa__form((t =pred, p =genit ),friend_of,\[and,\[friend, X\],\[friend--of, john,X\]\],\[meet,a_term((t = rel,p = pro,l = she, n = sing, a = ( ) ),mary,\[{creels,mary\]),q_term( ( t = quant,n = sing,l = a),X,a__form(.., friend._ol...))\]\].In addition to the CLE procedures for proposing refer-ents, checking constraints, and updating the salience model,the CLE provides an interface in terms of a set of applica-tion definable procedures (Section 5.2) for performingthese functions.
This interface allows the context imposedby a natural anguage processing application to influencereference resolution and plausibility checking, while keep-ing the CLE itself application independent.3 REFERENCE RESOLUTION RULESThe motivation for having a set of rules for referenceresolution is that this allows the basic resolution algorithmto be independent of the details of how anaphoric expres-sions are categorized and how different approaches to theirresolution are ordered.
This is in contrast o approaches(e.g., Hobbs 1976; Carter 1987) in which these details areencoded in the algorithm, leading to different success ratesfor different algorithms depending on the type of text134 Computational Linguistics Volume 16, Number 3, September 1990Hiyan Alshawi Resolving Quasi Logical Forms(Walker 1989 compares the performance of two such algo-rithms).
Our approach should make it possible to writedifferent sets of resolution rules for different natural an-guages, or sublanguages, without changing the mechanismapplying these rules.In the CLE, an ordered set of "reference resolutionrules" determines the order in which proposed resolved LFsare derived from a QLF.
Unresolved QLF expressions canbe nested, so before the rules are applied to an unresolvedexpression, they are applied recursively to its restriction.Each rule specifies a "resolution method" that can be usedto suggest a referent for an unresolved expression thatmatches a QLF expression specified in the rule:refrule( OLF_expression, Method).The resolution method corresponds toa relation betweenQLF expressions, contexts, and referents.
In the CLEimplementation, a method is the name ofa Prolog predicatethat takes an unresolved expression and returns candidatereferents in a preference order by backtracking, so themethod may succeed zero, one, or several times.
The contex-tual information handed to the resolution method is in theform of an ordered list of discourse ntities (Section 5.1)together with the whole QLF for the sentence being pro-cessed.Resolution rules are ordered, with each rule being triedin this order against each unresolved expression in thesentence QLF.
The QLF expression appearing in a rule is aterm that can unify with either an a_term, a q_term or ana_form.
A rule is taken to be applicable to the resolution ofa QLF-expression if the expression unifies with the lefthand side of the rule.
In general, it is the category inunresolved QLF expressions that plays the major role inselecting resolution methods to be applied.
The informationrepresented in these categories i in principle open-ended inthe same sense that holds for categories appearing in rulesin unification grammar formalisms.As well as the main reference resolution rules just de-scribed, the resolution process makes use of lexical declara-tions specifying, for example, the predicate correspondingto relational nouns or the quantifier cardinality predicatecorresponding todeterminers:reflex( WordSense, Category, Predicate).Examples of these "lexical reference declarations" will begiven in Section 4.The implementation f our QLF resolution model in theCLE uses a set of rules covering a range of referencephenomena that occur in English, including pronouns (Sec-tions 4.1, 4.2, 4.3, 4.8), definite descriptions (Sections 4.4and 4.9), quantifiers and collective readings (Sections 4.5and 4.6), one-anaphora (Section 4.14), and implicit rela-tions (Sections 4.11 and 4.12).
The set of CLE resolutionrules can, of course, be extended or changed, and we hopeto develop a theory of ellipsis resolution based on thisframework.The possibilities available for resolving QLF expressionsare governed by the set of reference rules and the contextfrom which they propose referents.
Choosing between thesepossibilities to arrive at a final LF depends on the con-straints applied during the plausibility phase and on heuris-tic factors such as rule ordering and the salience weightsassociated with discourse ntities.
We will not be discussingthese heuristic factors much, but instead will focus prima-rily on illustrating how a wide range of semantic andpragmatic phenomena can be viewed as QLF resolution(Section 4), and secondarily on the application of con-straints on resolution to resulting RQLF interpretations(Section 6).One way of viewing a QLF expression is as a conditionalinterpretation i  the sense of Pollack and Pereira (1988).To take the simplest case, we can regard an Ltermrepresenting a pronoun in a QLF as an assumption that thevariable for the a_term can be resolved by a matchingreference rule.
Our framework for QLF resolution can thenbe seen as a modular approach to representing and discharg-ing such assumptions in a way that does not require theirinteractions, or the constraints on resolution, to be specifiedin the semantic interpretation rules of the system.
It may bea consequence of the resulting simplicity of description thatwe have been able to cover a wide range of English construc-tions in the CLE implementation.
We now turn to discuss-ing these particular cases.4 REFERRING EXPRESSIONSVarious anaphoric phenomena handled by the CLE areconsidered in separate sections for expository purposes, butthis does not correspond to a disjoint classification; boundvariable anaphora, for example, overlap with both refexiveand nonreflexive pronouns.
The particular features in thereference categories in this section are t, specifying the typeof anaphoric expression (e.g.
ref for noun phrase refer-ence); p, for the phrase type (e.g.
pro for pronoun); 1, forlexical information; n, for number; and a, for specifyingintra-sentential antecedents.4.1 PRONOUNSThe QLF representation f a pronoun is an a_term.
Forexample, the translation of him in Mary expected him tointroduce himself is as follows:a__term( t = re~,p = pro,1 = him, n = sing, a = ( mary ) ), X,\[male, X\])The reference category states that the a_term is for anonreflexive pronoun, with surface form him, expecting asingular eferent, and that mary is a possible referent fromwithin the sentence.
The logical form restriction on thevariable X constrains the referent to be male in this case.
Inthe case of there and then it ensures that the referent is aplace or time, respectively, this information being specifiedin the sense entries for the pronoun.Inter-sentential reference possibilities are not includedon the list of antecedents, ince this list is built by thesentence-level semantic analysis rules.
The list containsComputat ional  L inguist ics Volume 16, Number 3, September 1990 135Hiyan Alshawi Resolving Quasi Logical Formsindices to the denotations of other noun phrases in thesentence.
In our current semantic rules, the list is built upby unification by accumulating it in a pair of features thatare "threaded" through the daughters of each constituentin a manner similar to the threading of long distancedependency gaps (Pereira 1981).
Consequently, a pronouncannot co-refer with a nonpronomial noun phrase followingit in the order in which antecedents are threaded, unlessthis co-reference is made through an inter-sentential refer-ence of the pronoun.The threading order can be varied for different semanticrules, but tends to correspond to a recursive traversal of thenodes in the syntax tree in the order: mother, left-daughter,right-daughter.
For semantic analysis rules covering topi-calization, however, indices of noun phrases in the preposedconstituent are threaded as though there was no topicaliza-tion, allowing a treatment of a common type of cataphoricreference.
For example, in both of the sentences:Mary heard a dog behind herBehind her, Mary heard a dogmary is on the antecedents li t for her because in the secondcase Behind her is analyzed as preposed.Several CLE reference rules cover pronouns, includingthe following:re f ru le (a - .
te rm(( t  = re f ,p  = pro ,1  = i ) .
.
.
.
),hearer_speaker_ref)refrule(a--term((t = ref, p = pro ) , _ , _ ) ,intra_sentential)refrule(a_.term((t =ref ,  p= pro)  .
.
.
.
),inter-sentential).The ordering of the rules shown above means that prece-dence is given to the method hearer_speaker__xef whenthe pronoun is " I ,"  and that intra-sentential pronoun refer-ents (taken from antecedents lists) are proposed beforeinter-sentential ones (discourse ntities from the contextmodel).4.2 REFLEXIVE  PRONOUNSReflexive pronouns are also translated into a_terms inQLF, the only difference being that the phrase type featureis refl instead of pro, the main reference rule beingre f ru le (a__ term(( t  = re:\[ ,p = re f l )  .
.
.
.
),intra_sentential).Again taking the sentence Mary expected him to introducehimself the a_term for himself isa__ term(( t  =re f ,p  = ref l ,1 = h im,n  = s ing ,a= ( -X ,mary) ) ,Y , \ [ma le ,Y \ ] ) .The antecedents list for this reflexive pronoun includesmary as well as the variable from the other pronouna_term; i.e.
the variable that will eventually be unified withthe referent of him.
"\]File QLF level of representation does not take account ofthe linguistic constraints on co-reference for reflexive andnonreflexive pronouns.
Instead, these constraints are han-dled separately (Section 6), so the antecedent lists forreflexive and nonreflexive pronouns are the same.
Anotherpossible approach is for the semantic rules to maintain twolists, one for reflexive and one for nonreflexive pronouns,but 1:here are disadvantages to this: it adds considerablecomplexity to the semantic analysis rules, it is difficult toimplement by unification (since it can involve moving itemsbetween the two lists), and it is also arguable that theconsl:raints on reflexives are not purely linguistic (Section6).4.3 BOUND VARIABLE  ANAPHORAIn ~.he reference category of the example a_term just givenin the previous ection, we saw that the antecedent list for apronoun may contain variables.
Resolving one pronoun tothe variable corresponding toanother one ensures that theyco-refer.
In the case of Mary expected him to introducehimself this means that both a_terms will be replaced bythe same constant from outside the sentence.
Bound vari-able anaphora, on the other hand, involves replacement ofthe a_term by a variable bound by a logical form quantifier(Partee 1978).
A simple example is Every bishop admireshimself which has the following seeped QLF:quant( ( t = quant, p= dot,1 = every, n= sing ), X,\[bishop, X\],\[admire,X,a - te rm ( ( t = ref, p = refl,1 = him, n = sing, a = ( -X ) ),Y,male,Y\])\]).In the resolved LF, the a_term will have been replaced bythe variable X giving \[admire, X, X\] as the scope of thequar.,tification over X.
Further examples of resolving pro-nouns to variables are given in Sections 4.4, 4.10, and 4.13.In the antecedents list, the item -X  indicates that thevariable X comes from a singular noun phrase antecedent(it would have been +X for a plural antecedent).
Thisinformation is included in the reference category of thea_term rather than in its restriction, because it is relevant,for intra-sentential reference, to syntactic agreement asopposed to constraining what the logical form variable canbe bound to.
This can be seen by comparing the sentencesEvery bishop admires himself and All bishops admirethemselves.
In both cases the logical variable ranges overindividual bishops, while there is number agreement be-tween the the pronoun and the singular and plural subjectnoun phrases respectively.
24.4 DEF IN ITE  DESCRIPT IONSDefinite descriptions are represented as q_terms in QLF,and as such are seeped by the CLE quantifier scopingmechanism in the same way as other quantified nounphrases.
The seeping of definite descriptions is motivatedby the possibility of their resolution to quantifiers (Section136 Computat iona l  L ingu is t i cs  Vo lume 16, Number  3,  September  1990Hiyan  A lshawi  Reso lv ing Quas i  Log ica l  Forms4.7).
The scoped QLF and unscoped QLFs for the smalldog slept are therefore, respectively:\ [ s leep,q_ term((  t = re f ,p  = def,1 = the ,n  = s ing ,a  = ( ) ),X,\[and, \[dog, X\],\[small, X\]\])\].quant((t =re\[,p = del,l=the, n = sing,a = ( > },X,\[and,\[dog,X\],\[small,X\]\],\[sleep,X\]).If the referent of the definite description here is fide, say,then the resolution of the description is effected by replac-ing the above quant formula by its body after replacingoccurrences of the variable X in the body with fide.
Insimple cases such as this, the same effect could have beenachieved by representing the definite description by ana_term to be replaced by fide in the resolved LF.The rules for handling such referential readings of defi-nite descriptions include methods for proposing referentsfrom the external application context as well as the CLEcontext model:re f ru le (q_ term(  ( t = ref, p = de~,l = the ,n  = s ing  ) .
.
.
.
),salient--satisfying--restriction)re f ru le (q - te rm(  ( t = ref, p = def,1 = the ,n  = s ing  ) .
.
.
.
),re fe rence_eand idate_app l i c ) .In the second rule, the resolution method is an applicationdependent method for singular definite descriptions.
Typi-cally, such a method will attempt to check that candidatesit proposes atisfy the restriction (though not necessarilythe body) of the definite quantifier by simple databaselookup or inference from a knowledge base.
For example, itmight propose a salient entity john as the referent for thesailor that Mary loves if it managed to prove that the LF\[and, \[sailor, john\], [loves, mary, john\]\]holds in the knowledge base.
We will return to definitedescriptions when discussing plurals and attributive read-ings in the following sections.4.5 DETERMINERS AND QUANTIF IERSResolving QLFs covers phenomena that are often handledby the semantic analysis and quantifier scoping compo-nents of language processing systems (including earlierversions of the CLE).
Some of these, such as the correspon-dence between determiners and quantifiers and the deriva-tion of collective and attributive readings of noun phrases,are handled as "quantifier resolution."
The basic idea willbe given in this section; other cases are discussed in Sec-tions 4.6 and 4.7.As mentioned earlier, the QLF representation f a quan-tified noun phrase or definite description is a q_term forwhich the scoping algorithm proposes possible scopes (bodyexpressions).
This process takes into account scoping pref-erences, in particular those associated with the determinerappearing in the category of the q_term.
In the resultingscoped QLF, there will be a quant formula for each q_termas follows:q_term( Category, Variable, Restriction)quant( Category, Variable, Restriction,Body)In earlier versions of the CLE scoping algorithm, theq_termwas replaced with its variable.
Currently this infor-mation is only removed from the body when a final LF isextracted from an RQLF, so that it can be taken intoaccount by the constraints applied to RQLF interpreta-tions.After scoping, reference resolution fixes the interpreta-tion of determiner categories as quantifiers, yieldingquant  ( Ouantifi'er, Variable, Restriction, Body).The mapping of determiner categories to quantifiers de-pends on lexical reference declarations.
For example, thefollowing two declarations allow resolution of the determin-ers in some dog and all dogs to exists and retell, respec-tively:re f lex(  some,  ( t = quant ,  p = det,  n = s ing ,  1 = some ), ex is ts )re f lex(a l l ,  ( t = quant ,  p = det,1 = all ), foral l )Quantifiers (in the distributive case) are taken to bepredicates on two cardinalities, the number of entities, R,satisfying the restriction, and the number of entities, I,satisfying the conjunction of the restriction and the body.Abbreviations for these predicates are used for commoncases, so, for example, forall abbreviates XrXi.r = i, which^ Ain our notation is R I \[eq, R,I\].
Other examples of thedeclarations for distributive quantifiers arere f lex (severa l ,  (t = quant ,p  = det ,n  = p lur , lex  = severa l  ),- ^R I \ [geq, I ,3 \ ] ) )re f lex (N ,  ( t = quant ,  p = det,  n = number (N) , lex  = N ), R ^ I ~ \ [geq,  I, N\]) )re f lex (bare ,  ( t = quant ,  n = plur,1 = bare  ), foral l )A Are f lex (bare , ( t=quant ,n=plur ,  l=bare) ,R  I \[geq, I,2\])re f lex (bare ,  ( t = quant ,n  = p lur ,  1 = bare  ), most) .The first of these is for numeral determiners, o this decla-ration treats 3 as at least 3 (geq is the >__ relation).3 The lastthree declarations allow "empty determiners" for bareplurals like dogs to be resolved as a universal, as in dogs areanimals, or some number greater than one, as in she couldhear dogs barking, or most as in dogs eat meat.4.6 COLLECTIVE READINGSOur treatment of quantifier esolution covers distributive/collective distinctions.
In the LF language, quantifiers canbe of the form set(Q), where again Q is a predicate on twonumbers.
For example, the LF representation f the collec-tive reading of Two boys carried John is 4quant (set (R"  I ^ \[geq,I,2\]),B,\[boy,B\],quant(exists,E,\[event,E\],\[carry,E,B,john\]))Computat iona l  L ingu is t i cs  Vo lume 16 ,  Number  3,  September  1990 137Hiyan Alshawi Resolving Quasi Logical FormsThe interpretation of a collective set quantification is asfollows.
Set quantification variables range over sets ofindividuals.
For such a quantificatien to be true, Q musthold of the cardinality of the union of sets satisfying therestriction, and the cardinality of the maximal subset ofthis union that satisfies the body)The QLF for the sentence, before seeping, is\[carry,q_term(( t  = quant ,n= sing,1 =ex),E,\[event,E\]) ,q_term( ( t = quant,  p = det, n = number(2),  1= 2 ), B,\[boy, B\[),john\],in which the determiner is resolved to the set quantifieraccording to the first of the following declarations:reflex(N, (t = quant,p = det,n = number(N), l  = N ),set(R ^  I ^ \[geq, I N\]))ref lex(several,  ( t = quant, p = det, n = plur, 1 = several  ),set(R" I A \[geq,I,3\])).The interaction of seeping alternatives with the collective/distributive readings allowed by the declarations matchingseveral and 2 gives several possible LFs for a sentence like2 girls met  several boys, of which the following involves two(or more) girls, a meeting event for each girl, each eventinvolving three or more boys:quant(R ^ I" \[geq, l,2\],G,\[girl, G\],quant(exists,E,\[event,E\],quant(set(R" I A \[geq, I 3\]),B,\[boy,B\],\[meet,E,G,B\]))).4.7 ATTRIBUTIVE DESCRIPTIONSAs well as the referential readings of definite descriptionsdiscussed in Section 4.4, attributive readings expressed asquantified LF expressions are also proposed uring QLFresolution.
Since definite descriptions are represented inQLF as q_terms, the analysis of Mary  met  the ministerf rom France is\[meet,mary,q_term( ( t = ref, p = dM,1 = the, n :  sing, a = ( mary ) ),M,\[and,\[minister,M\],\[from,M, france\]\])\].After seeping, determiner esolution (Section 4.5) takesplace according to a lexical declaration:reflex(the, (t = tel, p = def,1 = the, n = sing ), exists),producing the following LF:quant(exists,M,\[and,\[minister,M\],\[from, M,france\]\],\[meet, mary,M\]).If uniqueness of the description referent is required, forexample, if presuppositions are being derived from thesentence, a more appropriate l xical declaration might be^ ^one giving the quantifier predicate R I \[eq, I 1\] (exactlyone).In the case of parametrized efinite descriptions, onlyattributive readings are allowed.
An example of a descrip-tion parameterized by a free variable can arise in theresolution of a sentence such as Every dog buried the bonethat it found  for which the QLF, shown here after seeping,isqu ant( ( t = quant, p = det,1 = every ),X,\[dog,X\],quant(  t = rel,p = def,l = the,n = sing,a = ( - X) ) , Y ,\[and,\[bone, Y\],\[find,a._term( ( t= ref, p = pro,1 = it,n=s ing ,a=( -  Y , -  X ) ) ,W,\[impersonal,W\]),Y\]\],\[bury,X,Y\]).One of the possibilities for resolving the pronoun it in thissentence is to treat it as a bound variable anaphor, i.e., toreplace the a_term with X, the variable ranging over dogs.
(This resolution is proposed because X is on the a_termantecedents li t; see Section 4.1.
Y is also proposed, but thispossibility is eventually ruled out by sortal constraints).
I fthis resolution is made, then the definite description vari-able:, Y, cannot be resolved to a constant because thevariable X is free in its restriction.
This constraint ischecked along with other binding constraints on resolution(Section 6).
After resolution of the pronoun, determinerresolution takes place, givingquant(forall,X,\[dog,X\],quant(exists,Y,\[and,\[bone, Y\],\[find,X,Y\]\],\[bury,X,Y\])).4.8 PLURAL PRONOUNSPlural pronouns that are bound variable anaphora aretreated in the CLE in the same way as singular cases, buttaking number agreement into account, as was illustratedin Section 4.3 above with the example Al l  bishops admirethemselves.
This gives us a collective or distributive read-ing depending on whether the variable replacing the a_termis bound by a set quantifier or a normal quantifier (Section4.6).Plural pronouns, including plural reflexives, can also beresolved to collections (i.e.
sets of entities) taken from theantecedents li t in reference categories or from the contextmodel (Section 5.1).
These referents may be proposed byeither intra-sentential or inter-sentential resolution meth-ods, including application specific methods.
At the QLFlevel, a plural pronoun such as they is represented as aq__term for quantifying over subsets S of a collectioncorresponding toan a_term:q._term((t =quant,1 =all ),S,\[subset,S,a._term( ( t= ref, p = pro,1 =they, n = plur ),X,\[entity,X\])\]).138 Computat iona l  L ingu is t i cs  Vo lume 16, Number  3, September  1990Hiyan Alshawi Resolving Quasi Logical FormsThis QLF representation covers the possibilities of a distrib-utive or collective interpretation depending on whether theq_term is resolved to a normal or set quantifier.
In otherwords, the use of the two QLF  constructs in the pronounanalysis factors out the distributivity and reference aspectsof its interpretation.As an example, the QLF  representation for John andMary met after they graduated is\[and,\[meet,q_term((t=quant,n=sing,l=ex),E,\[event, E\]),\[john,mary}\],\[after, E\[graduate,q_term( ( t = quant, n= sing,1 = ex ), F,\[event, F\]),q_term( ( t = quant,1 =all ), S,\[subset,S,a__term( ( t= ref,p = pro,1 = they, n = plur,a= ({john,mary\],mary, john) ),X,\[entity,X\])\])\]\]\].In this example, the collection {john,mary} is the subject ofthe (collective) meeting event, and it also appears on theantecedents li t for they.
I f  the pronoun a_term is resolvedto this collection and its q_ term is resolved to the normal(distributive) forall, we get the following LF:quant(exists,E,\[event,E\],\[and,\[meet,E,~ohn,mary\]\],\[after,E,quant(forall,S,\[subset,S,\[john,mary\]\],quant(exists,F,\[event,F\],\[graduate,F,S\]))\]\]).Since the variable S is interpreted istributively, the restric-tion will bind it to singleton subsets of {john,mary}, ensuringthat there are graduation events for each of John andMary.4.9 PLURAL DEFINITE DESCRIPTIONSPlural definite descriptions are handled in a parallel fashionto their singular counterparts, except that the restrictionemploys subset in a similar way to plural pronouns.
TheQLF  representation for a noun phrase like the three dogs isthusq_term( ( t = quant, n= plur,l = all ),S,\[subset,S,q_term( ( t = ref, p = def,1 = the, n = number(3) ,X,\[dog,X\])\]).I f  the lower q_term is resolved to an explicit set, this givesa referential reading.
Otherwise the determiner can beresolved to a quantifier with the declaration:reflex(the, ( t = ref, p = def, n = number(N)),set(R "I ^  \[eq, I,N\]))giving an attributive reading.
The distribution/collectivedistinction arises from the resolution of the quantifier for Sto forall or set(forall), as explained in the case of pluralpronouns (Section 4.8).The formation of discourse ntities for plural referents isa major problem for language processing systems.
This isreflected in the CLE in that the current coverage of Englishplural reference is far from complete.
In particular, none ofthe current built-in resolution methods in the CLE pro-duces new collections from the set of entities present in thecontext model, which is required for handling discoursessuch as John left; Bill left; they were angry.
However, theCLE external context interface (Section 5.2) allows collec-tions, such as the set of answers to a database query, to beincluded in the model.4.10 UNBOUND ANAPHORIC TERMSWhen an argument position in a QLF  predication mustco-refer with a pronoun or definite description, this isindicated as a_index(X), where X is the variable for theantecedent.
For example, because want is a subject controlverb, we have the following QLF  for He wanted to swim:\[want,a--term((t =ref,p = pro,1 =he,n= sing,a= ( ) ),X,\[male,X\]),\[apply,Y A \[swim,Y\],a_index(X)\]\].
(The unreduced lambda application comes from the infini-tive; Section 6.4.)
If the a_ index  variable is subsequentlyresolved to a quantified variable or a constant, then thea_ index  operator becomes redundant and is not includedin the final LF.
However, in special cases, such as theso-called "donkey sentences" (Geach 1962; Kamp 1981),an anaphoric term may be resolved to a quantified variableV outside the scope of the quantifier that binds V. Anexample is one reading of Every farmer who owns a dogloves it, in which the "unbound dependency" is indicatedby retaining the a_ index  operator in the final structure:quant(forall,X,\[and,\[~armer, X\]quant(exists,Y,\[dog,Y\],\[own,X,Y\]),\[love,X,a__index(Y)\]).Such structures, which in some sense are not fully resolvedLFs, cannot be given an interpretation using normal vari-able binding.
However, an interpretation model similar tothe one advocated by Groenendijk and Stokhof (1987) fortheir "dynamic logic" may be appropriate.
The more imme-diate question of how we recognize that the out-of-scopereference is permitted is treated in our framework as aconstraint on binding (Section 6).Computational Linguistics Volume 16, Number 3, September 1990 139Hiyan Alshawi Resolving Quasi Logical Forms4.11 IMPLICIT RELATI\[ONSEnglish constructions like possessives, genitives, and com-pound nouns are translated into QLF expressions contain-ing uninstantiated relations introduced by the a_formrelation binder.
This binder is used in the translation ofJohn's house, which says that a relation, R, introducedimplicitly by a possessive phrase, holds between John andthe house.
Since possessive constructions are treated asdefinite descriptions, the seeped QLF for John's houseleaks is as follows:quant( ( t = ref, p = def,... ),X,a_form( ( t = pred, p = poss ), R,\[and,\[house,X\],\[R,john,X\]\]),\[leak, X\]).The implicit relation R can then be determined by thereference resolver and instantiated, to owns or l ives_insay, in the resolved LF.
(The plausibility phase would thenbe expected to rule out incorrect candidates giving differentrelations in the two sentences Where was John's car hiredfrom?
and John's car broke down three days after hebought it.
)Relations implicit in (nonlexicalized) compound nouns,possessives, and have constructions can often only be deter-mined from detailed knowledge of the domain of discourse(Alshawi 1987).
Since this knowledge is not available tothe CLE, the CLE depends on application-specific rulessuch as:refrule(a_..form( ( t =pred,p = nn ) .
.
.
.
),re la t ion_cand idate_app l i c )for proposing resolutions for these constructions.4.12 LEXICALIZED RELATIONSThese are treated as a special case of implicit relations andare applicable to relational nouns and lexicalized com-pound nouns with rules such as:refrule(a__forra( ( t = pred,p = poss ) .
.
.
.
),re lat iona l_sense)refrule(a__form((t = pred, p = nn) .
.
.
.
),lexiealized._compound).At the QLF level, the representation f John's mother hasan a_form that is exactly parallel to the one for John'shouse:a__form( (t= pred,p = poss ),R,\[and,\[mother,X\],\[R,john,X\]\]).Lexical reference declarations associated with noun sensesin the CLE lexicon can specify a relation to be used toresolve the a_form analysis of a noun phrase with a rela-tional noun head.
The declarations give the phrase type(e.g.
poss for possessive constructions and genii for thegenitive of construction) for which resolution to the rela-tional sense is applicable.
Given such a declaration,reflex(mother, (p  = poss  ) ,mother_of) ,the resolution method relationaL_sense will propose aresolution of the above a_form in which R is instantiated tothe predicate mother_of:\[and.,\[mother, X\],\[mother_of,john,X\]\].Lexicalized compound nominals like boat train are treatedsimilarly in that the method lexicalized__compound i  theresolution rule given above proposes predicates specified inlexical declarations for the relevant noun senses.4.13 POSSESS IVE  PRONOUNSNoun phrases with possessive pronouns acting as determin-ers are covered by the rules for pronouns, implicit relations,and definite descriptions.
For example, the noun phrase hismother is analyzed in QLF using a combination of ana__term for the pronoun, a definite description quantifierfor the whole noun phrase, and an a_form for the relationbetween the noun phrase referent and the pronoun.
Theseeped QLF representation for John met his mother isquant( ( t = ref,p = def, l = the, n = sing, a = ( john ) ), X,a_form( ( t = pred, p = poss ), R,\[and,\[mother,X\],\[R,a_term( ( t = ref, p = pro, 1 = he, n = sing,  a = ( john ) ),Y,\[male, Y\]),X\]\]),\[meet,john, X\]).Since resolution proceeds recursively, the a_term is re-solved first, to john say, then the a form to the relationalnoun predicate mother_of, and finally the definite descrip-tion is resolved to janet, say, giving \[meet,john,janet\].
I f  noappropriate referent corresponding to John's mother isproposed, then an attributive reading will be produced byresolving the definite description to an existential quantifi-cation (Section 4.7) giving the following LF:qaant(exists,X,\[and,\[mother,X\],\[mother_of, jo n,X\]\],\[meet,john,X\]).4.14 ONE-ANAPHORAThe so-called "one-anaphora" (Webber 1979), which canbe complete noun phrases, as in Mary knitted one, ormodified nominals, as in John knitted a grey one, are takento refer to restrictions from a preceding noun phrase, forexample X A \[jumper,X\] (i.e.
Xx.Jumper(x)) from the sen-tence Is it easy to knit a jumper?
It is therefore appropriateto :represent such an anaphor in QLF with an a__formrather than an a_term, so that it matches the rule:ferrule(a-.form( ( t = pred, p = one  ) .
.
.
.
),previous_description).Unlike the relation variables used in the representation fimplicit relations, the variable bound by the a_form hasthe type of a one-place predicate.
For example, the seeped140 Comp~tat iona l  L ingu is t i cs  Vo lume 16,  Number  3,  September  1990Hiyan Aishawi Resolving Quasi Logical FormsQLF for John knitted a grey one isquant( (t = quant, p = dot,1 = a, n = sing ), X,\[and,a-:\[orm(( t = pred, p = one),P,\[P,X\]),\[grey,X\]\],\[knit,john,X\]).The resolution process involves replacing the body of thea_form with a resolved conjunct, in this case the oneobtained by instantiating P to jumper, giving the followingLF for the sentence:quant(exists,X,\[and,\[jumper,X\],\[grey, X\]\],\[knit,john,X\]).In the more general case, the resolution must be made tosome but not all conjuncts of the preceding noun phraserestriction.
For example, after a sentence like John found afemale cat, the resolved restriction in Mary wanted a maleone cannot include the contradictory conjunct \[female,X\].The resolution method previous_description proposes eachof the predicates X \[and,\[cat,X\],\[female, X\]\], X \[cat, X\],and X ^ \[female, X\] as resolution candidates, but only thesecond of these results in an LF satisfying sortal con-straints.The current CLE one-anaphora esolution method onlyproposes restrictions present in the context model that werederived from noun phrases in previous entences.
However,it would be possible to extend the treatment to handlingintra-sentential cases by including another method thatproposed restrictions of noun phrases whose variables arethreaded as possible pronoun antecedents.5 CONTEXT MODEL5.1 DISCOURSE ENTITIES AND SALIENCEThe CLE maintains a simple model of context, consistingof a set of entities with associated salience weights.
Theseentities, ordered by salience, are then passed to any refer-ence resolution methods called; methods may or may notmake use of this information when proposing referents.Entities in the salience model are represented asLF expres-sions.
They are typically constants corresponding to individ-uals or collections, but they also include descriptions (pred-icates on one argument represented asa lambda bstraction)that are used in one-anaphora resolution.
RQLFs corre-sponding to the interpretation f previous entences are alsoincluded in the context model for the purpose of ellipsisresolution.Updating the context model involves changing the set ofitems in the model and updating their salience weights.New items enter the model when an RQLF expression thatis taken to be the correct interpretation of a sentence isderived.
The addition of items to the context model inresponse to producing an RQLF interpretation is in manyrespects a simplification of Webber's approach to the intro-duction of discourse ntities (Webber 1979), so we will notdiscuss it further here.
One difference is that our treatmentof bound variable anaphora operates directly on QLFs, sowe avoid the need to generate temporary descriptions ofentities for resolving such anaphora.Updating salience weights is very simple in the CLE,weights being decremented asnew sentences are processed.It is possible to extend the salience weight mechanism sothat it can take into account the influence of syntactic,semantic, and nonlinguistic factors contributing to contex-tual salience as shown in Alshawi (1987), where it is alsoargued that notions of global and local focus (Grosz 1977;Sidner 1979) can be viewed as corresponding to saliencethresholds.5.2 EXTERNAL CONTEXT INTERFACEWhen the CLE is used as an interface to applicationsoftware, the application becomes part of the context withinwhich the interpretation of user utterances takes place.
Inorder that the application may influence the interpretationprocess, the CLE provides facilities for interfacing theapplication to CLE processing during the pragmatics phases;that is, reference resolution and plausibility checking.
Thisis done through sortal restrictions (Section 6.2) and throughthe use of "interface procedures.
"CLE interface procedures relevant o reference resolu-tion and plausibility are concerned with proposing referentsfor noun phrase anaphora nd implicit relations and forchecking the plausibility of interpretations in the applica-tion context.
It is easy to add reference rules with applica-tion-specific methods.
For example, a rule could be addedmatching the a__term for the deictic pronoun here, themethod in the rule being a procedure that returned thecoordinates of a pointing device.
This approach allowssimpler or more comprehensive interfaces to CLE pragmat-ics, according to the effort available for application develop-ment.The CLE external context interface also allows applica-tions to send back constants, such as answers or sets ofanswers to database queries, for inclusion in the modelafter logical form evaluation has taken place.
This makes itpossible for the user to refer to such entities with anaphoricexpressions in later exchanges.
Sortal information for thenew constants can also be provided through this interface.6 CONSTRAINTS ON RESOLVED LFs6.1 APPLYING THE CONSTRAINTSResolved logical forms proposed by the reference resolutioncomponent are passed to the plausibility checking compo-nent.
The main role of this component is to apply pragmaticconstraints on plausibility in the form of sortal restrictions,and any application-specific constraints defined throughthe external context interface.
Linguistic constraints onreference are also applied during this phase, because theyalso act as filters on the output of the reference resolutioncomponent.Computational Linguistics Volume 16, Number 3, September 1990 141Hiyan Alshawi Resolving Quasi Logical FormsLinguistically motivated preferences, encoded implicitlyin the CLE by ordering lexical entries and rules, andexplicitly as quantifier scoping rules, are reflected in theorder in which logical forms are passed to the plausibilitycomponent.
The normal mode of operation of the CLE istherefore to assume that the first proposed logical form topass the plausibility constraints i the intended interpreta-tion.
In future developments of our model, we hope that theplausibility component will produce numerical (e.g.
proba-bilistic) estimates of plausibility.
In the meantime, theinterface between the plausibility component and an appli-cation system is such that it is possible for the application tocompare the first five candidate interpretations, say, againsteach other, selecting one of them.As explained in Section 2.2, the RQLF passed to theplausibility phase includes the set of resolutions made,enabling the plausibility of these resolutions to be evalu-ated, rather than simply the plausibility of the correspond-ing final LF.
This is particularly relevant o applying thelinguistic onstraints on pronoun reference, but it also givesthe application a chance to veto resolutions proposed by theCLE.
In general, the reason for passing the RQLF to theplausibility component is that plausibility, as we view it, isreally a function of the interpretation of an utterance incontext rather than simply a function of its truth condi-tions, as illustrated in the rest of this section.6.2 SORTAL CONSTRAINTSThe sortal restriction mechanism used in the CLE associ-ates sorts with objects, properties, and relations accordingto a declaratively specified sort hierarchy (Atshawi et al1988) that can be extended or redefined in order to reflectconstraints that are specific to a particular domain ofdiscourse.
Sorts are coded into terms that unify if and onlyif they do not violate the restrictions (cf.
Mellish 1988),giving an efficient way of applying plausibility constraintson domain predicates.
The coding technique used is by nowwell known, so we will not discuss it further.
In the CLE,checking the sortal constraints involves unifying logicalform variables with sorted variables of the form V;S, whereS is a coded sort term.It should be possible to extend the sortal restrictionmechanism to cover constraints on whether predicates cor-responding to word senses take individuals or collections astheir arguments in order to rule out distributive or collec-tive readings proposed uring QLF resolution, but this hasnot yet been tried in the context of the CLE.As with the other constraints, sortal constraints areapplied to the RQLF rather than the final LF.
This isnecessary because QLF subexpressions that do not appearin the final LF, such as expressions for relative clauses inreferential definite descriptions, need to be taken into ac-count, and also because reference resolution introduces newpredicates and arguments as referents.
Applying the sortalcheck to the RQLF ensures that the constraints arisingfrom the QLF expressions and the resolutions are checkedfor compatibility.6.3 BINDING CONSTRAINTSVar!iable binding constraints on resolved logical forms havealready been mentioned in the discussion of definite descrip-tions and unbound anaphoric terms.
Three constraints onvariable binding are applied:1.
All variables, other than a index variables, must occurvdthin the scope of their binders.2.
A definite description whose restriction includes a vari-able bound outside the restriction must be resolved as aquantified expression.3.
An a_index variable must be "accessible" from a QLFq__term for the variable.The first of these is the familiar constraint that disallowsfree variables (Montague 1973; May 1985) and coversvariables bound by lambda abstraction as well as quanti-tiers.
The second constraint was discussed with an examplein Section 4.7.
Clearly this constraint must be applied to anRQLF before its conversion i to an LF, as the restriction ofthe definite description may not appear in the final LFrepresentation.
"\['he third constraint is the one relevant to unboundanaphoric terms (Section 4.10).
Various characterizationsof the required accessibility conditions relevant to thisconstraint have been studied, especially in terms of subordi-natio:a of discourse representation structures inDRT (Kamp1981).
The accessibility condition in the CLE is rathersimplistic and is currently restricted to making variablesfrom an indefinite noun phrase in the restriction of aquantification accessible from its body (or one in the ante-cedent of an implication accessible in its consequent).
Thispredicts the following for the acceptability of resolving thepronoun in the examples below to the dog variable (assum-ing narrow scoping of this variable):Every farmer who owns a dog loves it*Every farmer who owns no dog loves it*Every farmer who owns it loves a dogIf a farmer owns a dog then s/he loves its6.4 CONFIGURATIONAL CONSTRAINTSThe eonfigurational constraints we consider here are basi-cally linguistic constraints on the co-reference of reflexiveand aonreflexive pronouns with other noun phrases in asentence.
In the CLE, the constraints are expressed at theRQL, F level in contrast o some approaches in the linguis-tics literature (Lasnik 1976; Reinhart 1983), where theyare expressed at the level of syntax trees.Some constraints are implicit in the way semantic analy-sis rules thread items on the antecedents li t for pronouns(Section 4.1).
In this section we will describe the constraintthat applies to the distribution of reflexive and nonreflexivepronouns.
A simplified version of the constraint isexplainedfirst: a reflexive pronoun whose a_term is an argument to alogical form predicate must co-refer with another argu-ment of that predicate, whereas a nonreflexive pronouncannot co-refer with such an argument.
This rules out the142 Computational Linguistics Volume 16, Number 3, September 1990Hiyan Alshawi Resolving Quasi Logical Formsstarred sentences below, under the resolutions hown inparentheses, while accepting the others:Mary shot her (Janet)Mary shot her (Mary)*Mary shot herself (Janet)*Mary shot herself (Mary)Every bishop admires him (John)Every bishop admires him (that same bishop)*John's father loves himself (John)*Bill said that he (Bill) had shot him (John)Bill said that he (John) had shot himself (John)Bill said that he (John) had shot himself (Bill)*Other possible resolutions of these sentences are alsoaccepted or rejected by the constraint as expected.
Whenapplying the constraint, only the RQLF needs to be exam-ined, since this will include the predicate-argument struc-ture, the reference category for k terms showing p=proor p=ref l ,  and the proposed resolutions.
In the first andlast of the above sentences, the constraint applies to theargument sets of the predicates shoot, and say and shootrespectively:\[shoot,mary,a_term( ( t = ref, p = pro,1 = her, n = sing, a = ( mary ) ), janet,\[female,janet\])\]\[say,bill,\[shoot,a_term( ( t = ref, p = pro,1 = he, n = sing, a = ( bi l l  ) ),john,\[male,john\]),a_term( ( t = ref, p = refl,1 = him,n=s ing ,  a= ( - john,b i l l )  ),biU,\[male, bill\])\]\].The constraint gives also the expected behavior for com-paratives uch as:John is taller than him (Bill)John is as tall as him (John)*because it applies to the arguments of a predicate moreused in the LF representation f comparative constructions(Alshawi and van Eijck 1989), the final LF for the first ofthe examples above being\[more, E" F" \[tall--degree,E,FLjohn,bill\].The actual constraint hat is applied is slightly morecomplicated than the one stated above because it takes intoaccount (and was part of the motivation for) propositionalarguments that are unreduced lambda applications.
Theseare used in the representation f infinitival complements,so, for example, John expected him (Bill) to shoot himself(Bill) has the following resolved LF:\[expect,john,\[apply,X "lshoot, X,bill\],bill\]\].The full constraint is as stated before except hat it de-mands that when a predicate P has a lambda applicationargument\[P ..... \[apply, X A Body, AL...\],then the argument A for the application is treated asthough it were also an argument of P, and furthermore, theconstraint is enforced on the lambda body after performingthe reduction with a resolved argument.
Informally then,the full constraint says how the simpler one should beapplied at both clause levels.
It accepts or rejects resolu-tions as shown for the following sentences:John expected to shoot himself (John)John expected to shoot himself (Bill)*John believed him (Bill) to be niceJohn expected him (Bill) to shoot himself (Bill)John expected him (John) to shoot himself (Bill)*John expected him (Bill) to shoot himself (John)*John expected him (Bill) to shoot him (Bill)*John expected him (Bill) to shoot him (John)Since the constraint isapplied at the level of logical form,it can cover sentences with "picture nouns" to giveJohn saw a picture of himself (John)John saw a friend of himself (John)*The implementation requires declarations specifying thatrelations uch as picture_of are "representational," andthen treats the meaning of the noun phrase a picture ofhimself as though it were co-referential with John for thepurposes of checking the reflexive constraint.One weakness in the way the constraint on reflexives iscurrently applied in the CLE is that it is sensitive towhether prepositional phrase modifiers have been subcate-gorized for or whether they are optional.
Optional argu-ments do not appear in the predication for the verb, butrather as additional predications involving the event vari-able.
This means that John spoke to himself for example,will be rejected by the constraint as implemented unless theto prepositional phrase is subcategorized for.
Fortunately,for cases like Mary wrapped ajumper ound herself thereis a strong argument that the prepositional phrase is notoptional: Mary wrapped ajumper means something quitedifferent.7 FURTHER RESEARCHWe are currently developing our model for QLF resolutionwithin the framework of a combined language processingand contextual reasoning system called CLARE, of whichthe CLE is the language component.
This includes work onthe treatment of ellipsis as QLF resolution.
Some simplecases are already handled, such as the representation f anutterance consisting solely of a noun phrase as a fo rm(...,P,\[P,NP\]) and resolving it by substituting the nounphrase meaning into the RQLF for a preceding sentence.We hope to extend this treatment to comparatives andComputat iona l  L ingu is t i cs  Vo lume 16, Number  3, September  1990 143Hiyan Alshawi Resolving Quasi Logical Formsother el l iptical expressions whose resolutions are part ia l lygoverned by syntax.
Another  signif .cant aspect of  QLFresolution that we have not yet addressed is determin ingthe temporal  indices impl ic i t  in QLF  tense and aspectoperators.Perhaps the most chal lenging problem in automat ic  lan-guage processing, that  of s imulat ing the role of plausibi l i tyin understanding,  remains the most difficult part  of  QLFresolution.
Our  f ramework  isolates this problem into themore concrete one of assigning plausibi l i ty rat ings to RQLFinterpretat ions.
We will be looking at ways of exploit inginferent ia l  and probabi l ist ic reasoning with domain  knowl-edge in developing solutions to this problem.ACKNOWLEDGMENTSThe research reported in this paper was carried out as part of the CLEdevelopment effort to which the following people have also contributed:David Carter, Jan van Eijck, Bob Moore, Doug Moran, Barney Pell,Fernando Pereira, Steve Pulman, and Arnold Smith.
Development of theCLE was funded by an Alvey grant and by members of the NATTIEconsortium (British Aerospace, British Telecom, Hewlett Packard, ICL,Olivetti, Philips, Shell Research, and SRI International).
Steve Pulman,David Carter, and Jan van Eijck provided helpful comments on drafts ofthe text.REFERENCESAlshawi, H. 1987 Memory and Context for Language Interpretation.Cambridge University Press, Cambridge, England.Alshawi, H. and van Eijck, J.
1989 Logical Forms in the Core LanguageEngine.
27th Annual Meeting of the Association for ComputationalLinguistics, Vancouver, British Columbia.Alshawi, H., Carter, D. M., van Eijck, J., Moore, R. C., Moran, D. B.,Pereira, F. C. N., Pulman, S. G. and Smith, A. G. 1988 Interim Reporton the SRI Core Language Engine.
Technical Report CCSRC-5, SRIInternational, Cambridge Research Centre, Cambridge, England.Carter, D. M. 1987 Interpreting Anaphors in Natural Language Texts.Ellis Horwood, Chichester, England.Geach, P. 1962 Reference and Generality.
Cornell University Press,Ithaca, NY.Groenendijk, J. and Stokhof, M. 1987 Dynamic Predicate Logic.
Facult-eit der Wijsbegeerte, University of Amsterdam, Amsterdam, The Neth-erlands.Grosz, B. J.
1977 The Representation a d Use of Focus in DialogueUnderstanding.
(Ph.D. thesis), Technical Note No.
151, SRI Interna-tional, Menlo Park, CA.Hobbs, J. R. 1976 Pronoun Resolution.
Technical Report 76-1, Depart-ment of Computer Science, City College, City University of New York,NY.Kamp, H. 1981 A Theory of Truth and Semantic Representation.
I :Groenendijk, J.
A. G., Janssen, T. M. V., and Stokhof, M. B. J., eds.,Formal Methods in the Study of Language.
Mathematisch Centrum,Amsterdam, The Netherlands.Lasnik, H. 1976 Remarks on Coreference.
Linguistic Analysis 2:1-22.McDonald, D. B.
1982 Understanding Noun Compounds.
Ph.D. thesis,Carnegie-Mellon University, PA.May, R. 1985 Logical Form.
Linguistic Inquiry Monographs, MIT Press,Cambridge, MA.Melli,;h, C. S. 1988 Implementing Systemic Classification by Unification.Computational Linguistics 14:40-51.Montague, R. 1984 The Proper Treatment of Quantification i OrdinaryEnglish.
In: Thomason, R., ed., Formal Philosophy: Selected Papers ofRichard Montague.
Yale University Press, New Haven, CT.Moore, R. C. 1981 Problems in Logical Form.
19th Annual Meeting ofthe Association for Computational Linguistics.
117-124.Moran, D. B.
1988 Quantifier Scoping in the SRI Core Language Engine.26th Annual Meeting of the Association for Computational Linguis-tics.
3340.Partee, B.
1978 Bound Variables and Other Anaphors.
In: Waltz, D., ed.,Proceedings of TINLAP-2.
University of Illinois-Urbana.
79-83.Pereira, F. C. N. 1981 Extraposition Grammars.
Computational Linguis-tics 7:243-256.Pollack, M. E. and Pereira, F. C. N. 1988 An Integrated Framework forSeraantic and Pragmatic Interpretation.
26th Annual Meeting of theAssociation for Computational Linguistics.
75-86.Reinhart, T. 1983 Anaphora nd Semantic Interpretation.
Croom Helm,London, U.K.Scha, R. J. H. 1981 Distributive, Collective and Cumulative Quantifica-tion.
In: Groenendijk, J.
A. G., Janssen, T. M. V., and Stokhof, M. B.
J.,eds., Formal Methods in the Study of Language.
Mathematisch Cen-trum, Amsterdam, The Netherlands.Sidner, C. L. 1979 Towards a Computational Theory of Definite Ana-phora Comprehension in English Discourse.
(Ph.D. thesis), TechnicalReport AI-TR-537, Artificial Intelligence Laboratory, MIT, Cam-bridge, MA.Walker, M. A.
1989 Evaluating Discourse Processing Algorithms.
27thAnnual Meeting of the Association for Computational Linguistics,251-261.Webber, B.
1979 A Formal Approach to Discourse Anaphora.
Garland,New York, NY.Woods, W. A.
1978 Semantics and Quantification i Natural LanguageQuestion Answering.
In: Yovits, M. C., ed., Advances in Computers.Academic Press, New York, NY.NOTES1.
C.LE logical forms use square brackets for the application of predi-cates and operators to their arguments.
For expository purposes, mostformulae are shown simplified in this paper.
In particular, we willoften omit the tense operators and Davidsonian style event variablesthat appear in CLE sentence r presentations.2.
It would perhaps be more consistent with our overall framework not torepresent this agreement information on antecedents li ts, but toapply an agreement constraint together with the other constraints onpronomial reference to be discussed later.3.
Another possibility is to treat 3 as exactly 3.
We take the contextualdependence of the plausibility of these interpretation possibilities tosupport he "quantifier resolution" approach.4.
In discussing collective and distributive readings, we explicitly showthe quantification over event variables to make clear the number ofevents involved.5.
Strictly speaking, all LF variables are interpreted as ranging oversets, with those for normal quantifiers ranging over individuals whichare singleton sets.
(cf.
Scha 1981).144 Computational Linguistics Volume 16, Number 3, September 1990
