Proceedings of the ACL Workshop on Building and Using Parallel Texts, pages 57?64,Ann Arbor, June 2005. c?Association for Computational Linguistics, 2005A hybrid approach to align sentences and wordsin English-Hindi parallel corporaNiraj Aswani Robert GaizauskasDepartment of Computer Science Department of Computer ScienceUniversity of Sheffield University of SheffieldRegent Court 211, Portobello Street Regent Court 211, Portobello StreetSheffield S1 4DP, UK Sheffield S1 4DP, UKN.Aswani@dcs.shef.ac.uk R.Gaizauskas@dcs.shef.ac.ukAbstractIn this paper we describe an alignmentsystem that aligns English-Hindi textsat the sentence and word level inparallel corpora.
We describe a simplesentence length approach to sentencealignment and a hybrid, multi-featureapproach to perform word alignment.We use regression techniques in orderto learn parameters which characterisethe relationship between the lengths oftwo sentences in parallel text.
We usea multi-feature approach withdictionary lookup as a primarytechnique and other methods such aslocal word grouping, transliterationsimilarity (edit-distance) and a nearestaligned neighbours approach to dealwith many-to-many word alignment.Our experiments are based on theEMILLE (Enabling Minority LanguageEngineering) corpus.
We obtained99.09% accuracy for many-to-manysentence alignment and 77% precisionand 67.79% recall for many-to-manyword alignment.1 IntroductionText alignment is not only used for the tasks suchas bilingual lexicography or machine translationbut also in other language processing applicationssuch as multilingual information retrieval and wordsense disambiguation.
Whilst resources likebilingual dictionaries and parallel grammars helpto improve Machine Translation (MT) quality, textalignment, by aligning two texts at various levels(i.e.
documents, sections, paragraphs, sentencesand words), helps in the creation of such lexicalresources (Manning & Sch?tze, 2003).In this paper, we describe a system that alignsEnglish-Hindi texts at the sentence and word level.Our system is motivated by the desire to developfor the research community an alignment systemfor the English and Hindi languages.
Building onthis, alignment results can be used in the creationof other Hindi language processing resources (e.g.part-of-speech taggers).
We present a simplesentence length approach to align English-Hindisentences and a hybrid approach with local wordgrouping and dictionary lookup as the primarytechniques to align words.2 Sentence AlignmentSentence alignment techniques vary from simplecharacter-length or word-length techniques to moresophisticated techniques which involve lexicalconstraints and correlations or even cognates (Wu2000).
Examples of such alignment techniques areBrown et al (1991), Kay and Roscheisen (1993),Warwick et al (1989), and the ?align?
programmeby Gale and Church (1993).2.1 Length-based methodsLength-based approaches are computationallybetter, while lexical methods are more resource57hungry.
Brown et al (1991) and Gale and Church(1993) are amongst the most cited works in textalignment work.
Purely length-based techniqueshave no concern with word identity or meaningand as such are considered knowledge-poorapproaches.
The method used by Brown et al(1991) measures sentence length in number ofwords.
Their approach is based on matchingsentences with the nearest length.
Gale and Church(1993) used a similar algorithm, but measuredsentence length in number of characters.
Theirmethod performed well on the Union Bank ofSwitzerland (UBS) corpus giving a 2% error ratefor 1:1 alignment.2.2 Lexical methodsMoving towards knowledge-rich methods, lexicalinformation can be vital in cases where a stringwith the same length appears in two languages.Kay and Roscheisen (1993) tried lexical methodsfor sentence alignment.
In their algorithm, theyconsider the most reliable pair of source and targetsentences, i.e.
those that contain many possiblelexical correspondences.
They achieved 96%coverage on Scientific American articles after fourpasses of the algorithm.
Other examples of lexicalmethods are Warwick et al (1989), Mayers et al(1998), Chen (1993) and Haruno and Yamazaki(1996).Warwick et al (1989) calculate the probability ofword pairings on the basis of frequency of sourceword and the number of possible translationsappearing in target segments.
They suggest usinga bilingual dictionary to build word-pairs.
Mayerset al (1998) propose a method that is based on amachine readable dictionary.
Since bilingualdictionaries contain base forms, they pre-processthe text to find the base form for each word.
Theytried this method in an English-Japanese alignmentsystem and got accuracy of about 89.5% for 1-to-1and 42.9% for 2-to-1 sentence alignments.
Chen(1993) constructs a simple word-to-wordtranslation model and then takes the alignment thatmaximizes the likelihood of generating the corpusgiven the translation model.
Haruno and Yamazaki(1996) use a POS tagger for source and targetlanguages and use an online dictionary to findmatching word pairs.
Haruno and Yamazaki(1996) pointed out that though dictionaries cannotcapture context dependent keywords in the corpus,they can be very useful to obtain information aboutwords that appear only once in the corpus.
Lexicalmethods for sentence alignment may also result inpartial word alignment.
Given that lexical methodscan be computationally expensive, our idea was totry a simple length-based approach similar to thatof Brown et al (1991) for sentence alignment andthen use lexical methods to align words withinaligned sentences.2.3 AlgorithmWe use English-Hindi parallel data from theEMILLE corpus for our experiments.
EMILLE isa 63 Million word electronic corpus of South Asianlanguages, especially those spoken as minoritylanguages in UK.
It has around 120,000 words ofparallel data in each of English, Hindi, Urdu,Punjabi, Bengali, Gujarati, Sinhala and Tamil(Baker et al, 2004).Figure 2.1 Sentence Alignment ParameterLearning algorithm58Table 2.1 Rules for the Sentence Alignment AlgorithmRule If Hindi:English AlignmentH1 |hi| - (|ej| + |ej+1|) < 0.17 * |hi| 1-To-2H2 |hi| - ( |ej| + |ej+1| + |ej+2| ) < 0.17 * |hi| 1-To-3E1 |ej| - ( |hi| + |hi+1| ) < 0.17 * |ej | 2-To-1E2 |ej| - ( |hi| + |hi+1| + |hi+2| ) < 0.14 * |ej| 3-To-1Default ( |ej| = |hi| )  ||  (Rule H1 and E1 Fails) 1-To-1Examining the data, we observe that it is possibleto align one English sentence with one or moreHindi sentences or vice-versa.
In the methoddescribed below, sentence length is calculated innumber of words.
We define our task as that oflearning rules that characterise the relationshipbetween the lengths of two sentences in paralleltexts.
We used 60 manually aligned paragraphsfrom the EMILLE corpus, each with an average of3 sentences, as a dataset for our learning task.Initially we derived minimum and maximumlength differences in percentages for each of theone-to-one, one-to-two and one-to-three parallelsentence pairs.
Later we used these values as inputto our algorithm to learn new rules that maximizethe probability of aligning sentences.Learning: Let T = [1:1, 1:2, 1:3, 2:1, 3:1], a set ofpossible alignment types between the English andHindi sentences.
For each alignment type t ?
T,minimum and maximum length differences innumber of words, normalized to percentages, canbe described as mint and maxt.
For each alignmenttype t ?
T, a constant parameter ?t, where ?t ?
[mint , mint + 0.01, mint + 0.02, ?, maxt ] waslearned using an algorithm described in figure 2.1.?t is a value that describes the length relationshipbetween the sentences of a pair of type t. Forexample, given a pair of one Hindi and twoEnglish sentences and a value ?t, where t = 1:2, itis possible to check if these sentences can bealigned with each other.
Suppose for a given pairof parallel sentences that consist of hi (Hindisentence at ith position) and ej and ej+1 (Englishsentences at jth and j+1th positions), let |hi|, |ej| and|ej+1| be the lengths of Hindi and English sentences.hi, ej and ej+1 are said to have 1:2 alignment if |hi| -(|ej| + |ej+1|) < 0.17 * |hi|, i.e.
the differencebetween the length of the Hindi sentence and thelength of the two consecutive English sentences isless than (?t=1:2 = 0.17) times the length of theHindi sentence.
Table 2.1 lists rules for differentpossible alignments.
Before we decide on the finalalignment, we check each possibility of one Hindisentence being aligned with one, two or threeconsecutive English sentences and vice-versa.
Weuse rules H1 and H2 to check the possibility of oneHindi sentence being aligned with two or threeconsecutive English sentences.
Similarly, rules E1and E2 are used to check the possibility of oneEnglish sentence being aligned with two or threeconsecutive Hindi sentences.
If none of the rulesfrom H1, H2, E1 and E2 return true, we considerthe default alignment (1-To-1) between the Englishand Hindi sentences.
We give preference to thehigher alignment over the possible loweralignments, i.e.
given 1-To-2 and 1-To-3 possiblealignment mappings, we consider 1-To-3 mapping.We tested our algorithm on parallel texts with totalof 3441 English-Hindi sentence pairs and obtainedan accuracy of 99.09%; i.e., the correctly alignedpairs were 3410.3 Word AlignmentExtending sentence alignment to word alignment isa process of locating corresponding word pairs intwo languages.
In some cases, a word is nottranslated, or is translated by several words.
Aword can also be a part of an expression that istranslated as a whole, and therefore the entireexpression must be translated as a whole (Manning& Sch?tze, 2003).
We present a hybrid method formany-to-many word alignment.
Hindi is a partialfree order language where the order of wordgroups in a Hindi sentence is not fixed, but theorder of words within groups is fixed (Ray et al,2003).
According to Ray et al (2003), fixed orderword group extraction is essential for decreasingthe load on the free word order parser.
The wordalignment algorithm takes as input a pair of alignedsentences and groups words in sentences of bothlanguages.
We have observed a few facts aboutthe Hindi language.
For example, there are no59articles in Hindi (Bal Anand, 2001).
Since thereare no articles in Hindi, articles are aligned to null.3.1 Local word groupingA separate group is created for each token in theEnglish text.
Every English word has one propertyassociated with it: the lemma of the word.
This isnecessary because a dictionary lookup approach isat the heart of our word alignment algorithm.Verbs are used in different inflected forms indifferent sentences.
For a verb, it is common notto find all inflected forms listed in a dictionary, i.e.most dictionaries contain verbs only in their baseforms.
Therefore we use a morphological analyzerto find the lemma of each English word.Word groups in Hindi are created using tworesources: a Hindi gazetteer list that contains alarge set of named entities (NE) and a rule file thatcontains more than 250 rules.
The gazetteer list isavailable as a part of Hindi Gazetteer ProcessingResource in GATE (Maynard et al, 2003).
Foreach rule in the rule file, it contains the followinginformation:1.
Hindi Regular Expression (RE) for a wordor phrase.
This must match one or morewords in the Hindi sentence.2.
Group name or a part-of-speech category.3.
Expected English word(s) (EEW) that thisHindi word group may align to.4.
Expected Number of English words (NW)that the Hindi group may align to.5.
In case a group of one or more Englishwords aligns with a group of one or moreHindi words, information about the keywords (KW) in both groups.
Key wordsmust match each other in order to alignEnglish-Hindi groups.6.
A rule to convert the Hindi word into itsbase form (BF).Rules in the rule file identify verbs, postpositions,noun phrases and also a set of words, whosetranslation is expected to occur in the same orderas the English words in the English sentence.
Thelocal word grouping algorithm considers one ruleat a time and tries to match the regular expressionin the Hindi sentence.
If the expression ismatched, a separate group for each found pattern iscreated.
When a Hindi group is created, based onits pattern type, one of the following categories isassigned to that group:proper-noun city job-title locationcountry number day-unit date-unitmonth-unit verb auxiliary pronounpost-position otherThese rules have been obtained mainly throughconsulting Hindi grammar material (Bal Anand,2001 and Ta, 2002) and by observing the EMILLEcorpus.
For example, consider the following rules:No RE Cat EEW NW KW BF1 ????
num fifty two 22 (.
)+ ???
verb   13 (.
)+ ?
???
verb   1 1,??
= ?
?4 (.
)+ ??
????
prep for (.
)+ 2 1-25 ???
???
other different 1i) ????
?, ????
?, ?????
are used to indicate the progressive tense.
Theycan be seen as analogous to the English (-ing) ending.ii) ???
?, ???
?, and ????
are used as verb endings to indicate the habitualtense.
They must agree with subject number and gender.iii) ????
is a past tense conjunction of the verb ?????
?.In the first rule, if we find a word ??????
(bavan)in Hindi, we mark it as a ?Number?
and search forthe English string with two words that is equal tothe expected string ?fifty two?.
In the second rule,we locate a string where the second word is ?????(raha).
?1?
in the fifth column specifies that the firstword is the keyword.
We use the dictionary tolocate the word in the English sentence thatmatches with the key word.
If the English word islocated, we align ?(.
)+ ????
with the English wordfound.
In the third rule, if we find a Hindi stringwith two words where the first word ends with ????
(te) and the second word is ????
(the), we group themas a verb.
As specified in the sixth column, wereplace the characters ????
with ????
(na) to convertthe first word into its base form (e.g.
??????
(gaate)into ??????
(gaana)).
In the fourth rule, we align ?X??
?????
with ?For X?, where ?For?
= ???
?????.
Asspecified in the fifth column, we align the firstword in Hindi with the second word in English.
Inthe final example, we group two words that areidentical to each other.
For example: "???
???
"(alag alag) which means ?different?
in English.Such bigrams are used to stress the importance of aword/activity in a sentence.60Figure 3.1 Dictionary Lookup Approachexample, in rule 3 and 4 if the word ends witheither of ?
?, ?
?or ??
followed by (PH), it is assumedthat the word is a verb.
The formula for findingthe lemma of any Hindi verb is: infinitive = rootverb + ????.
Sometimes it is possible to predictthe corresponding English translation.
Forexample, for the postposition ???
?????
?, one islikely to find the preposition ?in front of?
in theEnglish sentence.
We store this information as anexpected English word(s) in Hindi Word Groups(HWGs) and search for it in the English sentence.In the case of rules 4 and 5, though the HWGcontains more than one word, only one is the actualverb (key word) that is expected to be available ina dictionary.
We specify the index of this keyword in the HWG, so as to consider only the wordat the specified index to compare with key word inEnglish word group.
If they match, the full HWGis aligned to the word in English sentence.3.2 Alignment AlgorithmAfter applying the local word grouping rules to theHindi sentence(s), based on their categories ofHWGs, we use four methods to process and alignHWGs with their respective English Word Groups.1.
Dictionary lookup approach (DL)2.
Transliteration similarity approach (TS)3.
Expected English words approach (EEW)4.
Nearest aligned neighbour approachWhilst the verbs and other groups are processedwith DL approach, HWGs with categories such asproper nouns, city, job-title, location, and countryare processed with TS approach.
HWGs such asnumber, day-unit, date-unit, month-unit, auxiliary,pronoun and postpositions, where the expectedEnglish words are specified, are processed withEEW approach.
Sometimes the combination ofDL and TS is also used to identify the properalignment.
At the end, nearest aligned neighbourapproach is used to align the unaligned HWGs.Dictionary LookupThe corpus we used in our experiments is encodedin Unicode and therefore the word matchingprocess requires dictionary entries to be in Unicodeencoding.
The only English-Hindi dictionary wefound is called, ?shabdakoSha?
and is freelyavailable from (WWW2).
In this dictionary, theITRANS transliteration system is followed, i.e.Hindi entries are not written in the Devanagariscript, but in the Roman script.
This dictionary hasaround 15,000 English words, each with anaverage of 4 relevant Hindi words.
Following61Figure 3.2 Nearest Aligned Neighbours ApproachITRANS conventions, a parser was developed toconvert all these entries into Unicode.
Given a setof English and Hindi words, the algorithmpresented in figure 3.1 is executed to search for thebest translation among the English words.Transliteration SimilarityA transliteration system maintains a consistentcorrespondence between the alphabets of twolanguages, irrespective of sound (Manning &Sch?tze, 2003).
Given two words, each from adifferent language, we define ?transliterationsimilarity?
as the measure of likeness betweenthem.
This could exist due to the word in onelanguage being inherited or adopted by the otherlanguage, or because the word is a proper noun.Named entities such as city, job-title, location,country and proper nouns, all recognized by thelocal word grouping algorithm are compared usinga transliteration similarity approach.
This likenessis counted using a table that lists lettercorrespondences between the alphabets of twolanguages.
For the English and Hindi languages, itis possible to come up with a table that definesletter correspondence between the alphabets of twolanguages.
For example,A  ?, B  ?, Bh  ?, Ch  ?,D  ?,  Dh  ?
and so on?A bidirectional mapping is established betweeneach character in the English and Hindi alphabets.When DL is not able to find any specific Englishword in dictionary, this approach is used to find thetransliteration similarity between the unalignedwords.
Sometimes because the words in a Hindisentence are not spelled correctly, when DL issuesa query to dictionary, none of the Hindi wordsappearing in a Hindi sentence match with thewords returned from dictionary.
We use adynamic programming algorithm ?edit-distance?
tocalculate similarity between these words(WWW3).
According to WWW3, ?The editdistance of two strings, s1 and s2, is defined as theminimum number of point mutations required tochange s1 into s2, where a point mutation is oneof:  change a letter, insert a letter or delete aletter.?
The lower the distance, the greater thesimilarity.
From our experiments of 100 propernoun pairs, we found that if the similarity is greaterthan 75%, the words can be reliably aligned witheach other.
We consider a pair with the highestsimilarity.
E.g.
: Aswani  ???????.
Here weremove vowels in both strings, except those thatappear at the start of words.
After the removal ofvowels from the English and Hindi texts, theresulting text would be: Aswn  ????.
TheHindi text is then converted into English text usingthe transliteration table:  Aswn  Aswn.
The twotexts are then compared using an ?edit-distance?algorithm.Expected English word(s)For HWGs which are categorised as numbers, job-titles or postpositions, it is possible to specify theexpected English word or words that can be foundin the parallel English text.
The algorithm retrievesexpected English word(s) from the HWGs and triesto locate them in the English sentence.
Thisapproach can be useful to locate one or moreEnglish words that align with one or more Hindiwords.
For example, the number ????????
whoseequivalent translation in English is ?forty two?
hastwo words in English, and the postposition ????????
?, whose equivalent translation in English is?in front of?, has three words in English.
Theseare examples of many-to-many word alignment.62Nearest Aligned NeighboursAt the end of the first three stages of the wordalignment process, many words remain unaligned.Here we introduce a new approach, called the?Nearest Aligned Neighbours approach?.
Incertain cases, words in English-Hindi phrasesfollow a similar order.
The Nearest AlignedNeighbours approach works on this principle andaligns one or more words with one of the Englishwords.
A local word grouping algorithm, explainedin section 3.1, groups such phrases and tags themas ?group?.
Considering one HWG at a time, wefind the nearest Hindi word that is already alignedwith one or more English word(s).
We assume thatthe words in English-Hindi phrases follow asimilar order and align the rest words in that groupaccordingly.
An example of alignment using theNearest Aligned Neighbours approach is given inFigure 3.2.
Word H4 is already aligned with E5,and H3, H5, H6 and H7 are yet to be aligned.
Thelocal word grouping algorithm has tagged asequence of H4, H5, H6 and H7 as a single group.At the same time, H6 and H7 are also grouped as asingle group.
The algorithm searches for thealigned Hindi word, which, in this case, is H4 andaligns H5 with E6 and the group of H6 and H7with E7.4 ResultsFigure 4.1 Word Alignment ResultsWe performed manual evaluation of our wordalignment algorithm on a set of parallel dataaligned at the sentence level.
The parallel textsconsist of 3954 English and 5361 Hindi wordstaken from the EMILLE Corpus.
We calculate ourresults in terms of the number of aligned Englishword groups.
The precision is calculated as theratio of the number of correctly aligned Englishword groups to the total number of English wordgroups aligned by the system, and recall iscalculated as the ratio of the number of correctlyaligned English word groups to the total number ofEnglish word groups created by the system.
Weobtained 77% precision and 67.79% recall formany-to-many word alignment.
Figure 4.1 showsan example of the word alignment results.5 Future worksIt would be useful to evaluate separate stages (i.e.DL, TS, EEW and Nearest Aligned Neighboursapproach) in the word alignment algorithmseparately.
We aim to do this as part of a failureanalysis of the algorithm in future.
We also aim toimprove our alignment results by using Part-of-Speech information for the English texts.
We aimto implement or use local word grouping rules forthe English text and improve our existing wordgrouping rules for the Hindi texts.
The NearestAligned Neighbours approach suggests possiblealignments, but we are trying to integrate somestatistical ranking algorithms in order to suggestmore reliable pairs of alignment.
Yarowsky et al(2001) introduced a new method for developing aPart-of-Speech tagger by projecting tags acrossaligned corpora.
They used this technique tosupply data for a supervised learning technique toacquire a French part-of-speech tagger.
We aim touse our English-Hindi word alignment results tobootstrap a Part-of-Speech tagger for the Hindilanguage.ReferencesBal Anand, 2001, Hindi Grammar Books forstandard 5 to standard 10, Navneet Press, India.Baker P., Bontcheva K., Cunningham H.,Gaizauskas R., Hamza O., Hardie A., JayaramB.D., Leisher M., McEnery A.M., Maynard D.,Tablan V., Ursu C., Xiao Z., 2004, Corpuslinguistics and South Asian languages: Corpuscreation and tool development, Literary andLinguistic Computing, 19(4), pp.
509-524.63Brown, P., Lai, J. C., and Mercer, R., 1991,Aligning Sentences in Parallel Corpora,In Proceedings of ACL-91, Berkeley CA.Chen S., 1993, Aligning sentences in bilingualcorpora using lexical information, Proceedingsof the 31st conference on Association forComputational Linguistics, pp.
9 ?
16,Columbus, Ohio.Gale W., and Church K., 1993, A program foraligning sentences in bilingual corpora,Proceedings of the 29th conference of theAssociation for Computational Linguistics,pp.177-184, June 18-21, 1991, Berkeley,California.Haruno M. and Yamazaki T., 1996, High-performance bilingual text alignment usingstatistical and dictionary information,Proceedings of the 34th conference of theAssociation for Computational Linguistics, pp.131 ?
138, Santa Cruz, California.Kay M. and Roscheisen M., 1993, Text translationalignment, Computational Linguistics, 19(1):75--102.Manning C. and Sch?tze H., 2003, Foundations ofStatistical Natural Language Processing, MITPress, Cambridge, Massachusetts.Mark D., 2004, Technical Report on UnicodeStandard Annex #29 - Text Boundaries, Version4.0.1, Unicode Inc.,http://www.unicode.org/reports/tr29/ [22/11/04].Mayers A., Grishman R., Kosaka M., 1998, AMultilingual Procedure for Dictionary-BasedSentence Alignment, Proceedings of the ThirdConference of the Association for MachineTranslation in the Americas on MachineTranslation and the Information Soup.Maynard D., Tablan V., Bontcheva K.,Cunningham H., 2003, Rapid customisation ofan Information Extraction system for surpriselanguages, ACM Transactions on AsianLanguage Information Processing, Special issueon Rapid Development of LanguageCapabilities: The Surprise Languages.Ray, P, Harish V., Sarkar, S., and Basu, A., 2003,Part of Speech Tagging and Local WordGrouping Techniques for Natural LanguageParsing in Hindi, Proceedings of the 1stInternational Conference on Natural LanguageProcessing (ICON 2003); Mysore.Simard M. and Pierre P., 1996, Bilingual SentenceAlignment: Balancing Robustness and Accuracy,Proceedings of the First Conference of theAssociation for Machine Translation in theAmericas (AMTA-96), pp.
135-144, Montreal,Quebec, Canada.Ta A., 2002, A Door into Hindi, NC StateUniversity,http://www.ncsu.edu/project/hindi_lessons/lessons.html [22/11/04]Warwick S., Catizone, R., and Graham R., 1989,Deriving Translation Data from Bilingual Texts,in Proceedings of the First International LexicalAcquisition Workshop, Detroit.WU D., Jul 2000, Alignment, In Robert DALE,Hermann MOISL, and Harold SOMERS(editors), Handbook of Natural LanguageProcessing.
pp.
415-458.
New York: MarcelDekker.
ISBN 0-8247-9000-6.WWW1, Devanagari Unicode Chart, the UnicodeStandard, Version 4.0, UnicodeInc.,http://www.unicode.org/charts/PDF/U0900.pdf [22/03/05].WWW2, English-Hindi dictionary source,http://sanskrit.gde.to/hindi/dict/eng-hin_guj.itx[22/03/05].WWW3, Dynamic Programming Algorithm (DPA)for Edit-Distance,http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Dynamic/Edit/ [22/03/05]Yarowsky, D., G. Ngai and R. Wicentowski, 2001,Inducing Multilingual Text Analysis Tools viaRobust Projection across Aligned Corpora, InProceedings of HLT 2001, First InternationalConference on Human Language TechnologyResearch.64
