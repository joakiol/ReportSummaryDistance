Lex iea l -Funct iona l  T rans fer :  A T rans fer  F rameworkin  a Mach ine  Trans la t ion  System Based  on  LFGIkuo KUDOCSK Research Institute3-22-17 Higashi-Ikebukuro, Toshima-ku,Tokyo, 170, JapanAbstractThis paper presents a transfer framework called LFT(Lexical-functional Transfer) for a machine translationsystem based on LFG (Lexical-functional Grammar).
Thetranslation process consists of subprocesses of analysis,transfer and generation.
We adopt the so called f-structures of LFG as the intermediate r presentations orinterfaces between those subprocesses, thus the transferprocess converts a source f-structure into a target f-structure.
Since LFG is a grammatical framework forsentence structure analysis of one language, for thepurpose, we propose a new framework for specifyingtransfer rules with LFG schemata, which incorporatescorresponding lexical functions of two different languagesinto an equational representation.
The transfer process,therefore, is to solve equations called target f-descriptionsderived from the transfer rules applied to the source f-structure and then to produce a target f-structure.1.
Int roduct ionA grammatical theory called LFG (Lexical-functionalGrammar)I l l  is a framework for sentence structureanalysis and has a simple framework for representinglexical and grammatical information.
It analyzes asentence in two steps, a phrase structure analysis and afunctional structure analysis.
The former is a syntacticanalysis and produces constituent structures (c-structures).
The latter consists of several procedures,attaching lexical functions to components in the c-structure, deriving flmctional equations called functionaldescriptions (f-descriptions) from them with preservingconfigurational relationships, and solving these equationsto produce a functional structure (f-structure).
Thoselexical functions are represented by a representativeframework called LFG schema.We adopt such LFG schema to a representativeframework for a dictionary and rules which definefunctional correspondences between components of twolanguages.
With them the transfer process can bedesigned as a simple procedure such that its task is only tosolve functional equations of the target language and thenproduce an f-structure of the target language.
We proposesuch a framework called LFT (Lexical-functionalTransfer).
It consists of both a representative frameworkfor a two-way dictionary and transfer rules and aprocessing mechanism of transferring an f-structure ofsource language into an f-structure of target language.The representative framework is declarative and theneasy to manipulate.
The procedure is a mathematicalprocessing and thus enough simple and clear in its natureand executable easily.112Hirosato NOMURANTT Basic Research LaboratoriesMusashino-shi, Tokyo, 180, Japan2.
Overal l  construct ion of t rans lat ion  systemFigure I shows the global construction of thetranslation system.
The whole process is divided intothree subprocesses, analysis, transfer and generation asusual translation systems.
The analysis process is nothingbut LFG analysis.LFG ana|ysis~" ~" two- way dictiona r y--~ /GenerationF .
.
.
.
.
.
.
.
.
.
.
7 7- --F .
.
.
.
.
.
.
.
.
.
.
.
7 Source , ~ ~ , Target( Lexical-functional Transfer ) 1) Dictionary looking-up,2) Conditioning, 3) lnstantiation, 4) Solving target equationsFig.
1 Translation model based on Lexical-functional TransferThe transfer process, LFT converts an f-structure of asource language into a corresponding f-structure of atarget language.
At first, a transfer dictionary is looked-up and transfer ules are selected.
Next, the conditions inthe rule are checked.
If they are satisfied, the schemata oftarget language in the transfer ule are instantiated.
Andthen the functional descriptions of target language areobtained.
They are called the target functional descrip-tions (target f-descriptions).
After setting up the target f-descriptions, the task of the transfer process is reduced tosolve them and then produce an f-structure of the targetlanguage.
The processes of instantiation and solvingtarget f-descriptions are the same mechanism within LFG.Implementation a d execution of these processes are veryclear and thus there is no need for further explanation.The generation process is tentatively defined as alinearization process of the structured relationships in thetarget f-structure and a insertion process of inflectedwords.
However its explanation isbeyond the scope of thispaper.3.
LFTrepresentat ive  f ramework3.1 Transfer  rulesA transfer ule makes two schemata of two languagescorrespond each other and its general representativeframework is as follows:J\[ (LFG) schemata \] < = = = > E\[ (LFG) schemata\].In the expression, to show what language the schematabelong to, a initial letter of each language is put in front ofeach square bracket.
In this paper, Japanese is signifiedwith 'J', English with 'E'.
Examples of the transfer ulesare as follows:J\[(1' SUBJ)=I \]<===>E\[( I"SUBJ)= I \],L .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
JJ\[( L~'PRED)::'t'z"I<===>E\[(~ PRED)='Tom'\].A metavariablc ~'in the right hand side nmst correspondto that in the left hand side, and also a metavariable ~ inthe right hand side must correspond to that in the lefthand side.
A symbol < = = = > designates that both sidesare strictly corresponding.
When a rule is referred in thetransfier process, if it is, for example, transferring fromJapanese into English, the side having 'J' plays like acondition part in a 'IF...THEN...' rule, and vice versa.Therefore the description of the transfer rules arebidirectional since both sides can be a condition partdepending on the direction of transferring.The number of schemata in both sides are not alwaysequal and such an example appears in the rules 3 in thetable 3.
It can be divided into next three rules.
Theisolated type is used in a dictionary since it is compact.- ( tSV  CASE-NAME)=SUBJJl'~ \ [ ( tOBJ)= ~ \ ]<===>J  F i t  on,l)= J. qL(~ OBJ CASE-NAME)=OBJ -~\[:( ~' PRED)='PI,AY -\[ < = = = >J  r-( T PREl))='suru "7E <( t SUBJX ~ OBJ)>' I l <( ~" SUBJ)( 1' OBJ)>' lL i (  ~ SUBJ CASE-MARKEItl='ba'J J m ( I' OBJ CASE-MARKER)='we' JIn a f-structure, its structure is represented withhierarchy and function names.
Even if the structuresbetween two corresponding f-structures are different, atransfer process must prove well-formed syntacticrelationships in the target f-structure.
Even theserelationships can be represented with the LFG schema.For example, the rule (2.c) makes different structurescorrespond; hierarchy and function ames in the rule aredifferent.
English side is 'ACOMP SCOMP' but Japaneseside is <XCOMP'.
Therefore LFT rule can make twodifferent structures correspond.Furthermore, there is often nothing correspondingbetween two languages.
For example, a infinitive 'to'exists in English, but there is nothing in Japanese.
Twoschemata in the rule (2.b),E\[( 1" ACOMP SCOMP to) = + \],El( 1' ACOMP SCOMP INF)= + \],represent infinitive 'to'.
As another example, there is nogender in Japanese and English noun, but there aregenders in French and German.
But it is easy to treat heproblem because you have only to add the gender's schemato the rule.
For example, 'a book' in English corresponds to'ein Buch' in German.E \]' NUM)=SG < = = = >G NUMI =SGSPEC) = A SPEC) = E1NGENDER)= NEUTER3.2 Two-way dict ionaryThe LFT utilizes a two-way dictionary which hasentries for both languages.
Each entry consists of pairs of(1) a des ignator  and (2) some pointers.
The designator isa medium to instantiate the schemata in the conditionside.
The pointer refers a transfer ule.
The rule isreferred by both languages through each pointer.A rule is registered to the ~value' entry of the headschemata, '( ~ PRED)=value'.
When a rule has many headschemata, it is assigned to all the 'value' entriesredundantly.
For example, the idiom 'be eager to' has twohead schemata; ( t PRED) - < BE <... >', ( ~" ACOMP PRED ) =<F, AGER <... >' in the rule (2b).
So it is assigned to the 'be'English-Japanese dictionary Japanese-English dictionaryE:entryl / ~ J:entryl -7designator .
.
.
.
.
.
.
,7- L__  ...... , .
.
.
.
.
.
.
.
designator\]poin~ers lransmr rums pointers \[E:entry2 E\[Schemata\]< .
.
.
.
>J\[Schemata\] J'entry2des ignator  ElSehemata\]< = .
.
.
.
>J\[Sehemata\] " des ignator \ [po in ters  E\[Schemata\]< = .
.
.
.
>J\[Scbmnata\] po in ters  JFig.2 example of a two-way dictionaryTable I The English-Japanese dictionary (Ex.
from sentence(1) to sentence {2))" Eilglieh entrybeeagerTomplaybaseballdesinator(~ ACOMP)= J,t=$t= lpointersrule2 a,b,c,drule2 a,b,c,drule1rule3rule4Table 2 The Japanese-El~glish dictionary (Ex.
from sentence(2) tosentence (1 })Japanese ntry pointerstngarutolnil8uruyakyuudesinatort--~t=J,rule2 a,b,c,drulelrule3rule4.
.
.
.
.
.
.
.
T. _~ l_~ a_ _ '_P,:.,~,._ ,.21t~ ( ~ .
j>2 tw_t~, 2 t h 3 ~e.,tea_?~ (J) a._a J 22 ) .
.
.
.
.
.
.
(Rulel)~( ~ PRED)="ram' 7 F( ~" PltED)='Tomu'E \ [ (TNUM)=SG J < .
.
.
.
>J  \ [ (  \]' NUM)=SGL( 1' PERSON ) = 3 L ( 1' PERSON ) = 3 (R~.a)L 1 V( l SUBa>= * -E \ [ (  i' 8UBJ) = I < .
.
.
.
>J  l (  ~ SUBJ CASE-MARKER)='ba'L( 1' SUBJ CASE-NAME)=8UBJ(Ruh~2.b)( ~ ACOMP SUBJ)=( t SUBJ) \[-( t ACOMP 8COMP 8UUJ) V t XCOMP SUB J) =( t  ACOMPSUSJ) \[ =(~SUBJ)E ( ~ ACOMPSCOMP to)= + < .
.
.
.
.
> J  J ( t PRED)='tagaru( T ACOMP SCOMP INF)= + J<(  t SUBJ}( ~ XCOMP)>'{ T ACOMP PRED)='EAGER<( t sunJ)( tSCOMP)>'( ~" PRED)='BEL <( ?
SUnJ)( tACOMP)> _(Rt e2.e)iR "(tACOMPSC()MP)= t \] < .
.
.
.
>Z \[ (~XCOMP)= ~ \]t ~2.d)" -( i TENSE--)- PRESENT ~< .
.
.
.
.
> J \ [ l  ' TENSE) = PRE NT '  ASPEC'r)='iru'(Rt f3 D(tSUBd)= ~ - sun,))= ~ 7SUB,\] CASE-MARKER)='he'ISUBJ CASE-NAME)= SUBJIE (t  OBJ)= ~, \[ 'OSJ)= ~, \[I < ..... >J < OS,l CASE-MARKER)='wo'I ( I" PRED) = 'I'LAY J OBJ CASE-NAME) = OBJ J.
<( t SUBJ)( i' OBJ)>~\] ' PRED)= 'etli'tl J<( ~' SUBJ)( ~" OBJ)>' A (Rule4) \] < = = = >J  ' PRED)='yakyuu' E r ( t  PRED)='bsseball'L( t CAT) = SPORT \[ I  \] .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
: CA_'?)
--:~y()Ry .
.
.
.
.
.
.
.
.
.
.
.
.entry and the 'eager' entry in the table 1.
But the desig-nators are different.
The 'be' designator is '  ~ = 1 ' and the'eager' designator is '( ?
ACOMP )= I ', as shown in table 1.4.
LFT processing mechanismLFT processing is divided into four phases as shown inFigure 3.
Each phase is described briefly as follows:(phase1) Loohing:uup the dictionary_ Collect all the head fdescriptions whose type is '(fn PRED)-value',  from asource f-structure.
Look-up 'value' in the dictionary oneby one and go to the phase (2).
(phase2) Cond i t i~  Check whether the conditions inthe rule are satisfied with the source f-structure.
If so, goto the phase (3).
If not, check the other ules.
When a ruleis applied ( from English to Japanese ),English side in therule works the conditions, Japanese side works the result.E \ [condi t ions\ ]  < = = = > J \ [ resu l t s  \](phase3) Instantia.fion: Instantiate the schemata in theresult side with the table of correspondence,  whichyields target f-descriptions.
When actual variables (fl,f2 .....
etc.)
are assigned to the metavariables ~,~ in theresults, the table is looked up.
The table shows that actual113var iab les  in  the  cond i t ion  s ide  cor respond to that  in  theresu l t  s ide .
For  example ,  tab le  5 in  the  F igure  3.
(fl_ILase4) So lv ingLLar~t ions :_  Af ter  the  phase  (1),(2) and  (3), co l lec t  a l l  the  ta rget  f -descr ip t ions  and  so lvethem by  the  LFG a lgor i thm,  ' f rom f -descr ip t ions  to an  f--s t ruc ture ' .
So a ta rget  f - s t ruc ture  i s  obta ined .F-structureof the source textdictionaryentry disignatorpointertransfer ules \[ Rules E\[conditions\] <===}> J\[resultsl\[ Rules E\[schemata\] , (===> J\[schematalF-descriptions lof~m target ext I(phase1) r~_-~i;,,c-t5,:;-II~ooking-up ' ?
,' ' , m 1' tg.4a dictionary .
.
.
.
.
-f ~ .~ .
.
.
.Table 4 I, ent ry / I  entr ' designator ~,eager \[( t ACOMP)= ,~ \] (fl ACOMP)=f3 \]Ton; / I = $ I f2=f2 ;, p lay  / \] = $ f4=f4  )(obaso >Conditioning ' ) ~  ',lf~ I g2 l',f4 I g3 ',If5 I g4 11 nstantiationl .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
l\] Target f-descriptions 1, (1)__(18) in the table6t .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
J(phase4) ~Solving targe~ r- .
.
.
.
.
.
.
.
.
.
-1 *F-structure ' f-descriptions , .
~.
,, m l' tg .5  k .
.
.
.
.
.
.
.
.
.
.
uFig.3 Mechanism of I,FT (l,exical-functional Transfer)1luring phases of 1, 2 and 3, metavariables are assigned to actualvariables as follows:(phasel) The metavariables t or ~, in the designator:The ' ~ -variable in the designator in the dictionary' is unified withthe actual variable !
fn ' in the schema ' (fn PItEI))= value' which ish)oked up.
If designator i s '  ~' -- ,\[ ', assign the same variable ' fn ' to'1"-variable in the designater'.
If not,, assign the actual variableunified with the source f-structure.
If it is noL found, the conditionsare not satisfied.iphase2) The metavariables ~ or ~ in the condition side:Assign 'actual variable whicb is assigned ~-variable in thedesignator during (phase 1)' to ' 1' -variable in the conditions'.
Findthe actual variables unified with the source f-structure.
Assign itunified with the source f-structure to the ~ -variable.
If it  is not fotmd,the conditions are not satisfied.
(phase3) The metavariables ~ or ~ in the result side:Find the actual variables in the condition side by correspondingrelations ( i' to T, ~ to ~ ) which the rule define.
Look up the variablein the table of correspondence.
Assign the variable to themetavariable.
If there is no variable, assign a new actual variable tothe metavariable.5.
ExampleAn  Eng l i sh  example  sentence  and  i t s  Japaneseequ iva lent  sentence  are  as  fo l lows :(1).
Tom is eager to play baseball.(2).
t ,A  t~ ~ ~- I. f : .
\ ] /oT~,~otomu ha yakyuu we si(suru) tagatteiru(tagaru.
).The f - s t ruc ture  of  the  Eng l i sh  sentence  i s  shown in  F igure4, and  the  f - s t ruc ture  of  the  Japanese  sentence  i s  shown inF igure  5.
(1) Collect al l  the f-descriptions 'fin PREI))= value's fi'om a source i:structure (Figure 4).
"11 4-SUBJ -PRED "rein' -\] -~'NUM SG \]PEP,~SON 3 .lf2 ~_ACOMP SUBJ  P2|SUBJ 12/OBJ \[- PRED 'baseball' iI\[_CAT SPORTP5|PRED 'PLAY < ( ~ SUB J)( ~ OBJ) >' EAGER<(  1' SUBJ)( ~ SCOMP) >'PREDTENSEPREDf3'BE<( ~ SUBJ)( ~" ACOMP)>'PRESENTfAFig.
4 F-structure of the English sentence (1)-suBJXCOMPPREDTENSEASPECT)RED 'Tomu' l UM SG~RSONASE-MARKER 'ha'ASE-NAME SUBJg2SoUBJ 2 BJ -~)RE D 'yakyuu'CAT SPORTI CASE-MARKER 'we'g4 ~CASE-NAME OBJ\]_PREI) 'sara<( t SUBJ)( ~ OBJ)>'g3'tagaru <( ~ SUBJ)( ~ XCOMP)>'PRESENT'iru'Fig.
5 F-structure of the Japanese sentence (2)(a)(fl PREI)) = 'BE <... > ' (d)(f4 PRED) = 'PLAY < ... >'(b)(f2 PREI)) = 'Tom' (el(f5 PRED) = 'baseball'(el(f3 PRED) = 'EAGEI{ <... > ''be': Look up 'be' ; (f| PRED )--'BE <... >'.
The designator in thedictionary (table 1) is '  ~ = $ '.
So 1' = $ = ' fl '.
Select the rule (2 a, b,c, d) in table 1.
(2) Check the conditions .
Assigo actual variable fl to themetavariable ~'.
Unify the schemata of conditions with the f-structure (Figure 4).
Then actual variables ~ f2 ' and ~ f4'  are assignedto the motavariables ~ and the following f-descriptions are obtained.E \ [ ( f lSUBJ )=f2 \ ]  E \ [ (h  ACOMP SCOMP)= f4\]All the conditions of the ( rule 2) are satisfied.
Write ' f2 ' and ' f4 ' inthe table 5 in Figure 4.
(3) Instant iate the schemata in the result  side.
For rule (2.a), look upin the table 5.
There is no actual variable corresponding to ' fl ' .
Soassign a new actual vm'iable ' gl ' to the metavariable ~.
Write actualvar iable '  gl ' corresponding to'  f l '  in the table 5.E \ [ ( f  ISUBJ )= f2\] < .
.
.
.
> J \ [ (g lPRE I ) )  =g2 \] ...(1)lAkewise,we get the other f-descriptions (2) (3) from rule (2.a), the f-descriptions (4), (5) from rule (2.b), the f-descriptions (6) from rule(2.el and the f-descriptions (7), (8) from rule (2.d).
'Tom': the f-descriptions (9), (10), (11) are obtained.
'eager' : the same f-descriptions (1)...(8) are obtained.
'play': the f-descriptions (12)..(18) are obtained.
'baseball '  : the \['-descriptions (19),(20) are obtained.
(4) Solve the f-descriptions (1)...(20) below.
So the target f-structure(Figure 5) is obtained.Table 6(1 J (gl SUB,\]) = g21 (11)J \[ (g2 PERSON) = 31(2) I \[ (g\] SUBJ CASE-MARKER) = 'ha' (12)J (g3 SUBJ) = g2\]3)J (gl SUBJ CASE-NAME ) = SUBJ \] (13)J \[ (g3 SUBJ CASE-MARKI~R)='ha'\](4)J \[ (gl PRED) = 'tagaru<...>q (14)J \[ (g3 SUBJ CASE-NAME) = SUBJ\](5)J \[ (gl XCOMP SUBJ) = (gl SUBJ) (15)1 (g30BJ ) =g4\](6)1 (gl XCOMP) = g3\] (16hi \[ (g30SJ CASE-MARKER) =: 'we'\](7)J (gl TENSE) = PRESENT (17)J \[ (g30BJ CASE-NAME) ~ ()BJJ(8)1 \[ (gi ASPECT) := 'ira' (18)J \[ (g3 PRED) = 'sara <... >' \]\] (9)J \[ (g2 PRED) =: 'tomu'\] (19)1 \[ (g4 PREI)) = 'yakyuu' \](1~ l (_3~.t!M!
= S(~ ... .
.
.
.
.
.
.
.
.
.
.
.
.
{2o!J t(g4 c a'j'j.2:s3,,,~'~L .
.
.
.
.
.
.
.
.
.
.
.
.Acknowledgmel~tThe author would l ike to thank Prof. Nar i ta of WasedaUniversity, Mr. Ookawa, chairman of CRI (CSK Research Institute)and Mr.Yada, president of CRI for their constant encouragement.Reference~\[1\].R.M.Kaplan and J.Bresnan, 'The Mental of GrammaticalRelations', MIT Press, 1982.
