Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and ComputationalNatural Language Learning, pp.
161?170, Prague, June 2007. c?2007 Association for Computational LinguisticsLEDIR: An Unsupervised Algorithm for Learning Directionality of Inference RulesRahul Bhagat, Patrick Pantel, Eduard Hovy Information Sciences Institute University of Southern California Marina del Rey, CA {rahul,pantel,hovy}@isi.edu   Abstract Semantic inference is a core component of many natural language applications.
In re-sponse, several researchers have developed algorithms for automatically learning infer-ence rules from textual corpora.
However, these rules are often either imprecise or un-derspecified in directionality.
In this paper we propose an algorithm called LEDIR that filters incorrect inference rules and identi-fies the directionality of correct ones.
Based on an extension to Harris?s distribu-tional hypothesis, we use selectional pref-erences to gather evidence of inference di-rectionality and plausibility.
Experiments show empirical evidence that our approach can classify inference rules significantly better than several baselines.
1 Introduction Paraphrases are textual expressions that convey the same meaning using different surface forms.
Tex-tual entailment is a similar phenomenon, in which the presence of one expression licenses the validity of another.
Paraphrases and inference rules are known to improve performance in various NLP applications like Question Answering (Harabagiu and Hickl 2006), summarization (Barzilay et al 1999) and Information Retrieval (Anick and Tipir-neni 1999).
Paraphrase and entailment involve inference rules that license a conclusion when a premise is given.
Deciding whether a proposed inference rule is fully valid is difficult, however, and most NL systems instead focus on plausible inference.
In this case, one statement has some likelihood ofbeing identical in meaning to, or derivable from, the other.
In the rest of this paper we discuss plau-sible inference only.
Given the importance of inference, several re-searchers have developed inference rule collec-tions.
While manually built resources like Word-Net (Fellbaum 1998) and Cyc (Lenat 1995) have been around for years, for coverage and domain adaptability reasons many recent approaches have focused on automatic acquisition of paraphrases (Barzilay and McKeown 2001) and inference rules (Lin and Pantel 2001; Szpektor et al 2004).
The downside of these approaches is that they often result in incorrect inference rules or in inference rules that are underspecified in directionality (i.e.
asymmetric but are wrongly considered symmet-ric).
For example, consider an inference rule from DIRT (Lin and Pantel 2001): X eats Y ?
X likes Y  (1)   All rules in DIRT are considered symmetric.
Though here, one is most likely to infer that ?X eats Y?
?
?X likes Y?, because if someone eats something, he most probably likes it1, but if he likes something he might not necessarily be able to eat it.
So for example, given the sentence ?I eat spicy food?, one is mostly likely to infer that ?I like spicy food?.
On the other hand, given the sentence ?I like rollerblading?, one cannot infer that ?I eat rollerblading?.
In this paper, we propose an algorithm called LEDIR (pronounced ?leader?)
for LEarning Di-rectionality of Inference Rules.
Our algorithm fil-ters incorrect inference rules and identifies the di-rectionality of the correct ones.
Our algorithm                                                 1 There could be certain usages of ?X eats Y?
where, one might not be able to infer ?X likes Y?
(for example meta-phorical).
But, in most cases, this inference holds.161works with any resource that produces inference rules of the form shown in example (1).
We use both the distributional hypothesis and selectional preferences as the basis for our algorithm.
We pro-vide empirical evidence to validate the following main contribution:  Claim: Relational selectional preferences can be used to automatically determine the plausibility and directionality of an inference rule.
2 Related Work In this section, we describe applications that can benefit by using inference rules and their direc-tionality.
We then talk about some previous work in this area.
2.1 Applications Open domain question answering approaches often cast QA as the problem of finding some kind of semantic inference between a question and its an-swer(s) (Moldovan et al 2003; Echiabi and Marcu 2003).
Harabagiu and Hickl (2006) recently dem-onstrated that textual entailment inference informa-tion, which in this system is a set of directional inference relations, improves the performance of a QA system significantly even without using any other form of semantic inference.
This evidence supports the idea that learning the directionality of other sets of inference rules may improve QA per-formance.
In Multi-Document Summarization (MDS), paraphrasing is useful for determining sentences that have similar meanings (Barzilay et al 1999).
Knowing the directionality between the inference rules here could allow the MDS system to choose either the more specific or general sentence de-pending on the purpose of the summary.
In IR, paraphrases have been used for query ex-pansion, which is known to promote effective re-trieval (Anick and Tipirneni 1999).
Knowing the directionality of rules here could help in making a query more general or specific depending on the user needs.
2.2 Learning Inference Rules Automatically learning paraphrases and inference rules from text is a topic that has received much attention lately.
Barzilay and McKeown (2001) for paraphrases, DIRT (Lin and Pantel 2001) and TEASE (Szpektor et al 2004) for inference rules,are recent approaches that have achieved promis-ing results.
While all these approaches produce collections of inference rules that have good recall, they suffer from the complementary problem of low precision.
They also make no attempt to dis-tinguish between symmetric and asymmetric infer-ence rules.
Given the potential positive impact shown in Section 2.1 of learning the directionality of inference rules, there is a need for methods, such as the one we present, to improve existing automatically created resources.
2.3 Learning Directionality There have been a few approaches at learning the directionality of restricted sets of semantic rela-tions, mostly between verbs.
Chklovski and Pantel (2004) used lexico-syntactic patterns over the Web to detect certain types of symmetric and asymmet-ric relations between verbs.
They manually exam-ined and obtained lexico-syntactic patterns that help identify the types of relations they considered and used these lexico-syntactic patterns over the Web to detect these relations among a set of candi-date verb pairs.
Their approach however is limited only to verbs and to specific types of verb-verb relations.
Zanzotto et al (2006) explored a selectional preference-based approach to learn asymmetric inference rules between verbs.
They used the selec-tional preferences of a single verb, i.e.
the semantic types of a verb?s arguments, to infer an asymmetric inference between the verb and the verb form of its argument type.
Their approach however applies also only to verbs and is limited to some specific types of verb-argument pairs.
Torisawa (2006) presented a method to acquire inference rules with temporal constraints, between verbs.
They used co-occurrences between verbs in Japanese coordinated sentences and co-occurrences between verbs and nouns to learn the verb-verb inference rules.
Like the previous two methods, their approach too deals only with verbs and is lim-ited to learning inference rules that are temporal in nature.
Geffet and Dagan (2005) proposed an extension to the distributional hypothesis to discover entail-ment relation between words.
They model the con-text of a word using its syntactic features and com-pare the contexts of two words for strict inclusion to infer lexical entailment.
In principle, their work is the most similar to ours.
Their method however162is limited to lexical entailment and they show its effectiveness for nouns.
Our method on the other hand deals with inference rules between binary relations and includes inference rules between ver-bal relations, non-verbal relations and multi-word relations.
Our definition of context and the meth-odology for obtaining context similarity and over-lap is also much different from theirs.
3 Learning Directionality of Inference Rules The aim of this paper is to filter out incorrect infer-ence rules and to identify the directionality of the correct ones.
Let pi ?
pj be an inference rule where each p is a binary semantic relation between two entities x and y.
Let <x, p, y> be an instance of relation p. Formal problem definition: Given the inference rule pi ?
pj, we want to conclude which one of the following is more appropriate: 1. pi ?
pj 2. pi ?
pj 3. pi ?
pj 4.
No plausible inference Consider the example (1) from section 1.
There, it is most plausible to conclude  ?X eats Y?
?
?X likes Y?.
Our algorithm LEDIR uses selectional prefer-ences along the lines of Resnik (1996) and Pantel et al (2007) to determine the plausibility and di-rectionality of inference rules.
3.1 Underlying Assumption Many approaches to modeling lexical semantics have relied on the distributional hypothesis (Harris 1954), which states that words that appear in the same contexts tend to have similar meanings.
The idea is that context is a good indicator of a word meaning.
Lin and Pantel (2001) proposed an exten-sion to the distributional hypothesis and applied it to paths in dependency trees, where if two paths tend to occur in similar contexts it is hypothesized that the meanings of the paths tend to be similar.
In this paper, we assume and propose a further extension to the distributional hypothesis and call it the ?Directionality Hypothesis?.
Directionality Hypothesis: If two binary semantic relations tend to occur in similar contexts and the first one occurs in significantly more contexts thanthe second, then the second most likely implies the first and not vice versa.
The intuition here is that of generality.
The more general a relation, more the types (and number) of contexts in which it is likely to appear.
Consider the example (1) from section 1.
The fact is that there are many more things that someone might like than those that someone might eat.
Hence, by applying the directionality hypothesis, one can in-fer that ?X eats Y?
?
?X likes Y?.
The key to applying the distributional hypothe-sis to the problem at hand is to model the contexts appropriately and to introduce a measure for calcu-lating context similarity.
Concepts in semantic space, due to their abstractive power, are much richer for reasoning about inferences than simple surface words.
Hence, we model the context of a relation p of the form <x, p, y> by using the seman-tic classes C(x) and C(y) of words that can be in-stantiated for x and y respectively.
To measure context similarity of two relations, we calculate the overlap coefficient (Manning and Sch?tze, 1999) between their contexts.
3.2 Selectional Preferences The selectional preferences of a predicate is the set of semantic classes that its arguments can belong to (Wilks 1975).
Resnik (1996) gave an informa-tion theoretical formulation of the idea.
Pantel et al (2007) extended this idea to non-verbal rela-tions by defining the relational selectional prefer-ences (RSPs) of a binary relation p as the set of semantic classes C(x) and C(y) of words that can occur in positions x and y respectively.
The set of semantic classes C(x) and C(y) can be obtained either from a manually created taxonomy like WordNet as proposed in the above previous approaches or by using automatically generated classes from the output of a word clustering algo-rithm as proposed in Pantel et al (2007).
For ex-ample given a relation like ?X likes Y?, its RSPs from WordNet could be {individual, so-cial_group?}
for X and {individual, food, activ-ity?}
for Y.
In this paper, we deployed both the Joint Rela-tional Model (JRM) and Independent Relational Model (IRM) proposed by Pantel et al (2007) to obtain the selectional preferences for a relation p.163Model 1: Joint Relational Model (JRM) The JRM uses a large corpus to learn the selec-tional preferences of a binary semantic relation by considering its arguments jointly.
Given a relation p and large corpus of English text, we first find all occurrences of relation p in the corpus.
For every instance <x, p, y> in the cor-pus, we obtain the sets C(x) and C(y) of the seman-tic classes that x and y belong to.
We then accumu-late the frequencies of the triples <c(x), p, c(y)> by assuming that every c(x) ?
C(x) can co-occur with every  c(y) ?
C(y) and vice versa.
Every triple <c(x), p, c(y)> obtained in this manner is a candi-date selectional preference for p. Following Pantel et al (2007), we rank these candidates using Pointwise mutual information (Cover and Thomas 1991).
The ranking function is defined as the strength of association between two semantic classes, cx and cy2, given the relation p:?pmi cxp; cyp( )= logP cx,cyp( )P cxp( )P cyp( )(3.1)Let |cx, p, cy| denote the frequency of observing the instance <c(x), p, c(y)>.
We estimate the prob-abilities of Equation 3.1 using maximum likeli-hood estimates over our corpus:?P cxp( )=cx, p,?
?, p,?P cyp( )=?, p,cy?, p,?P cx,cyp( )=cx, p,cy?, p,?
(3.2)We estimate the above frequencies using:?cx, p,?
=w, p,?C w( )w?cx?
?, p,cy=?, p,wC w( )w?cy?cx, p,cy=w1, p,w2C w1( )?
C w2( )w1?cx,w2?cy?
(3.3)where |x, p, y| denotes the frequency of observing the instance <x, p, y> and |C(w)| denotes the num-ber of classes to which word w belongs.
|C(w)| dis-tributes w?s mass equally among all of its senses C(w).
Model 2: Independent Relational Model (IRM) Due to sparse data, the JRM is likely to miss some pair(s) of valid relational selectional preferences.
Hence we use the IRM, which models the argu-ments of a binary semantic relation independently.
2 cx and cy are shorthand for c(x) and c(y) in our equations.Similar to JRM, we find all instances of the form <x, p, y> for a relation p. We then find the sets C(x) and C(y) of the semantic classes that x and y belong to and accumulate the frequencies of the triples <c(x), p, *> and <*, p, c(y)> where c(x) ?
C(x) and  c(y) ?
C(y).
All the tuples <c(x), p, *> and <*, p, c(y)> are the independent candidate RSPs for a relation p and we rank them according to equation 3.3.
Once we have the independently learnt RSPs, we need to convert them into a joint representation for use by the inference plausibility and direction-ality model.
To do this, we obtain the Cartesian product between the sets <C(x), p, *>  and <*, p, C(y)> for a relation p. The Cartesian product be-tween two sets A and B is given by:?A ?
B = a,b( ):?a?
A and ?b?
B{ }(3.4) Similarly we obtain:?Cx, p,?
?
?, p,Cy=cx, p,cy: ?
cx, p,?
?
Cx, p,?
and?
?, p,cy?
?, p,Cy??????????
(3.5)The Cartesian product in equation 3.5 gives the joint representation of the RSPs of the relation p learnt using IRM.
In the joint representation, the IRM RSPs have the form <c(x), p, c(y)>  which is the same form as the JRM RSPs.
3.3 Inference plausibility and directionality model Our model for determining inference plausibility and directionality is based on the intuition that for an inference to hold between two semantic rela-tions there must exist sufficient overlap between their contexts and the directionality of the infer-ence depends on the quantitative comparison be-tween their contexts.
Here we model the context of a relation by the selectional preferences of that relation.
We deter-mine the plausibility of an inference based on the overlap coefficient (Manning and Sch?tze, 1999) between the selectional preferences of the two paths.
We determine the directionality based on the difference in the number of selectional preferences of the relations when the inference seems plausi-ble.
Given a candidate inference rule pi ?
pj, we first obtain the RSPs <C(x), pi, C(y)>  for pi and <C(x), pj, C(y)> for pj.
We then calculate the over-lap coefficient between their respective RSPs.
Overlap coefficient is one of the many distribu-164tional similarity measures used to calculate the similarity between two vectors A and B:?sim A,B( )=A?
Bmin A , B( )(3.6)The overlap coefficient between the selectional preferences of pi and pj is calculated as:?sim pi, pj( )=Cx, pi,Cy?
Cx, pj,Cymin Cx, pi,Cy,Cx, pj,Cy( )(3.7)If sim(pi,pj) is above a certain empirically de-termined threshold ?
(?1), we conclude that the inference is plausible, i.e.
: If?sim pi,pj( )??
we conclude the inference is plausible else  we conclude the inference is not plausible For a plausible inference, we then compute the ratio between the number of selectional prefer-ences |C(x), pi, C(y)|  for pi and |C(x), pj, C(y)| for pj and compare it against an empirically determined threshold ?
(?1) to determine the direction of in-ference.
So the algorithm is: If?Cx, pi,CyCx, pj,Cy?
?
we conclude pi ?
pjelse if?Cx, pi,CyCx, pj,Cy?1?
we conclude pi ?
pj else                 we conclude pi ?
pj 4 Experimental Setup In this section, we describe our experimental setup to validate our claim that LEDIR can be used to determine plausibility and directionality of an in-ference rule.
Given an inference rule of the form pi ?
pj, we want to use automatically learned relational selec-tional preferences to determine whether the infer-ence rule is valid and if it is valid then what its di-rectionality is.
4.1 Inference Rules LEDIR can work with any set of binary semantic inference rules.
For the purpose of this paper, we chose the inference rules from the DIRT resource (Lin and Pantel 2001).
DIRT consists of 12 million rules extracted from 1GB of newspaper text (AP Newswire, San Jose Mercury and Wall StreetJournal).
For example, ?X eats Y?
?
?X likes Y?
is an inference rule from DIRT.
4.2 Semantic Classes Appropriate choice of semantic classes is crucial for learning relational selectional preferences.
The ideal set should have semantic classes that have the right balance between abstraction and discrimina-tion, the two important characteristics that are of-ten conflicting.
A very general class has limited discriminative power, while a very specific class has limited abstractive power.
Finding the right balance here is a separate research problem of its own.
Since the ideal set of universally acceptable se-mantic classes in unavailable, we decided to use the Pantel et al (2007) approach of using two sets of semantic classes.
This approach gave us the ad-vantage of being able to experiment with sets of classes that vary a lot in the way they are generated but try to maintain the granularity by obtaining approximately the same number of classes.
The first set of semantic classes was obtained by running the CBC clustering algorithm (Pantel and Lin, 2002) on TREC-9 and TREC-2002 newswire collections consisting of over 600 million words.
This resulted in 1628 clusters, each representing a semantic class.
The second set of semantic classes was obtained by using WordNet 2.1 (Fellbaum 1998).
We ob-tained a cut in the WordNet noun hierarchy3 by manual inspection and used all the synsets below a cut point as the semantic class at that node.
Our inspection showed that the synsets at depth four formed the most natural semantic classes4.
A cut at depth four resulted in a set of 1287 semantic classes, a set that is much coarser grained than WordNet which has an average depth of 12.
This seems to be a depth that gives a reasonable abstrac-tion while maintaining good discriminative power.
It would however be interesting to experiment with more sophisticated algorithms for extracting se-mantic classes from WordNet and see their effect3 Since we are dealing with only noun binary relations, we use only WordNet noun Hierarchy.
4 By natural, here, we simply mean that a manual inspection by the authors showed that, at depth four, the resulting clus-ters had struck a better granularity balance than other cutoff points.
We acknowledge that this is a very coarse way of ex-tracting concepts from WordNet.165on the relational selectional preferences, something we do not address this in this paper.
4.3 Implementation We implemented LEDIR with both the JRM and IRM models using inference rules from DIRT and semantic classes from both CBC and WordNet.
We parsed the 1999 AP newswire collection consisting of 31 million words with Minipar (Lin 1993) and used this to obtain the probability statistics for the models (as described in section 3.2).
We performed both system-wide evaluations and intrinsic evaluations with different values of ?
and ?
parameters.
Section 5 presents these results and our error analysis.
4.4 Gold Standard Construction In order to evaluate the performance of the differ-ent systems, we compare their outputs against a manually annotated gold standard.
To create this gold standard, we randomly sampled 160 inference rules of the form pi ?
pj from DIRT.
We discarded three rules since they contained nominalizations5.
For every inference rule of the form pi ?
pj, the annotation guideline asked annotators (in this pa-per we used two annotators) to choose the most appropriate of the four options: 1. pi ?
pj 2. pi ?
pj 3. pi ?
pj 4.
No plausible inference To help the annotators with their decisions, the annotators were provided with 10 randomly chosen instances for each inference rule.
These instances, extracted from DIRT, provided the annotators with context where the inference could hold.
So for ex-ample, for the inference rule ?X eats Y?
?
?X likes Y?, an example instance would be ?I eat spicy food?
?
?I like spicy food?.
The annotation guide-line however gave the annotators the freedom to think of examples other than the ones provided to make their decisions.
The annotators found that while some decisions were quite easy to make, the more complex ones                                                 5 For the purpose of simplicity, we in our experiments did not use DIRT rules containing nominalizations.
The algo-rithm however can be applied without change to inference rules containing nominalization.
In fact, in the resource that we plan to release soon, we have applied the algorithm without change to DIRT rules containing nominalizations.often involved the choice between bi-directionality and one of the directions.
To minimize disagree-ments and to get a better understanding of the task, the annotators trained themselves by annotating several samples together.
We divided the set of 157 inference rules, into a development set of 57 inference rules and a blind test set of 100 inference rules.
Our two annotators annotated the development test set together to train themselves.
The blind test set was then annotated individually to test whether the task is well de-fined.
We used the kappa statistic (Siegel and Castellan Jr. 1988) to calculate the inter-annotator agreement, resulting in ?=0.63.
The annotators then looked at the disagreements together to build the final gold standard.
All this resulted in a final gold standard of 100 annotated DIRT rules.
4.5 Baselines To get an objective assessment of the quality of the results obtained by using our models, we compared the output of our systems against three baselines: B-random: Randomly assigns one of the four pos-sible tags to each candidate inference rule.
B-frequent: Assigns the most frequently occurring tag in the gold standard to each candidate infer-ence rule.
B-DIRT: Assumes each inference rule is bidirec-tional and assigns the bidirectional tag to each candidate inference rule.
5 Experimental Results In this section, we provide empirical evidence to validate our claim that the plausibility and direc-tionality of an inference rule can be determined using LEDIR.
5.1 Evaluation Criterion We want to measure the effectiveness of LEDIR for the task of determining the validity and direc-tionality of a set of inference rules.
We follow the standard approach of reporting system accuracy by comparing system outputs on a test set with a manually created gold standard.
Using the gold standard described in Section 4.4, we measure the accuracy of our systems using the following for-mula:166erencesinputerencestaggedcorrectlyAccuracyinfinf=5.2 Result Summary We ran all our algorithms with different parameter combinations on the development set (the 57 DIRT rules described in Section 4.4).
This resulted in a total of 420 experiments on the development set.
Based on these experiments, we used the accuracy statistic to obtain the best parameter combination for each of our four systems.
We then used these parameter values to obtain the corresponding per-centage accuracies on the test set for each of the four systems.
Model ?
?
Accuracy (%) B-random - - 25 B-frequent - - 34 B-DIRT - - 25 CBC 0.15 2 38 JRM WN 0.55 2 38 CBC 0.15 3 48 IRM WN 0.45 2 43 Table 1: Summary of results on the test set Table 1 summarizes the results obtained on the test set for the three baselines and for each of the four systems using the best parameter combina-tions obtained as described above.
The overall best performing system uses the IRM algorithm with RSPs form CBC.
Its performance is found to be significantly better than all the three baselines us-ing the Student?s paired t-test (Manning and Sch?tze, 1999) at p<0.05.
However, this system is not statistically significant when compared with the other LEDIR implementations (JRM and IRM with WordNet).
5.3 Performance and Error Analysis The best performing system selected using the de-velopment set is the IRM system using CBC with the parameters ?=0.15 and ?=3.
In general, the results obtained on the test set show that the IRM tends to perform better than the JRM.
This obser-vation points at the sparseness of data available for learning RSPs for the more restrictive JRM, the reason why we introduced the IRM in the first place.
A much larger corpus would be needed to obtain good enough coverage for the JRM.GOLD STANDARD  ?
?
?
NO ?
16 1 3 7 ?
0 3 1 3 ?
7 4 22 15 SYSTEMNO 2 3 4 9 Table 2: Confusion Matrix for the best performing system, IRM using CBC with ?=0.15 and ?=3.
Table 2 shows the confusion matrix for the overall best performing system as selected using the development set (results are taken from the test set).
The confusion matrix indicates that the system does a very good job of identifying the directional-ity of the correct inference rules, but gets a big per-formance hit from its inability to identify the incor-rect inference rules accurately.
We will analyze this observation in more detail below.
Figure 1 plots the variation in accuracy of IRM with different RSPs and different values of ?
and ?.
The figure shows a very interesting trend.
It is clear that for all values of ?, systems for IRM us-ing CBC tend to reach their peak in the range 0.15 ?
?
?
0.25, whereas the systems for IRM using WordNet (WN), tend to reach their peak in the range 0.4 ?
?
?
0.6.
This variation indicates the kind of impact the selection of semantic classes could have on the overall performance of the sys-tem.
This is not hard evidence, but it does suggest that finding the right set of semantic classes could be one big step towards improving system accu-racy.Figure 1: Accuracy variation for IRM with differ-ent values of ?
and ?.
Two other factors that have a big impact on the performance of our systems are the values of the system parameters ?
and ?, which decide the plau-167sibility and directionality of an inference rule, re-spectively.
To better study their effect on the sys-tem performances, we studied the two parameters independently.Figure 2: Accuracy variation in predicting correct versus incorrect inference rules for different values of ?.Figure 3: Accuracy variation in predicting direc-tionality of correct inference rules for different values of ?.
Figure 2 shows the variation in the accuracy for the task of predicting the correct and incorrect in-ference rules for the different systems when vary-ing the value of ?.
To obtain this graph, we classi-fied the inference rules in the test set only as cor-rect and incorrect without further classification based on directionality.
All of our four systems obtained accuracy scores in the range of 68-70% showing a good performance on the task of deter-mining plausibility.
This however is only a small improvement over the baseline score of 66% ob-tained by assuming every inference to be plausible (as will be shown below, our system has most im-pact not on determining plausibility but on deter-mining directionality).
Manual inspection of some system errors showed that the most common errors were due to the well-known ?problem of an-tonymy?
when applying the distributional hypothe-sis.
In DIRT, one can learn rules like ?X loves Y?
?
?X hates Y?.
Since the plausibility of inference rules is determined by applying the distributional hypothesis and the antonym paths tend to take the same set of classes for X and Y, our models find it difficult to filter out the incorrect inference rules which DIRT ends up learning for this very same reason.
To improve our system, one avenue of re-search is to focus specifically on filtering incorrect inference rules involving antonyms (perhaps using methods similar to (Lin et al 2003)).
Figure 3 shows the variation in the accuracy for the task of predicting the directionality of the cor-rect inference rules for the different systems when varying the value of ?.
To obtain this graph, we separated the correct inference rules form the in-correct ones and ran all the systems on only the correct ones, predicting only the directionality of each rule for different values of ?.
Too low a value of ?
means that the algorithms tend to predict most things as unidirectional and too high a value means that the algorithms tend to predict everything as bidirectional.
It is clear from the figure that the performance of all the systems reach their peak performance in the range 2 ?
?
?
4, which agrees with our intuition of obtaining the best system ac-curacy in a medium range.
It is also seen that the best accuracy for each of the models goes up as compared to the corresponding values obtained in the general framework.
The best performing sys-tem, IRM using CBC RSPs, reaches a peak accu-racy of 63.64%, a much higher score than its accu-racy score of 48% under the general framework and also a significant improvement over the base-line score of 48.48% for this task.
Paired t-test shows that the difference is statistically significant at p<0.05.
The baseline score for this task is ob-tained by assigning the most frequently occurring direction to all the correct inference rules.
This paints a very encouraging picture about the ability of the algorithm to identify the directionality much more accurately if it can be provided with a cleaner set of inference rules.1686 Conclusion Semantic inferences are fundamental to under-standing natural language and are an integral part of many natural language applications such as question answering, summarization and textual entailment.
Given the availability of large amounts of text and with the increase in computation power, learning them automatically from large text cor-pora has become increasingly feasible and popular.
We introduced the Directionality Hypothesis, which states that if two paths share a significant number of relational selectional preferences (RSPs) and if the first has many more RSPs than the second, then the second path implies the first.
Our experiments show empirical evidence that the Directionality Hypothesis with RSPs can indeed be used to filter incorrect inference rules and find the directionality of correct ones.
We believe that this result is one step in the direction of solving the basic problem of semantic inference.
Several questions must still be addressed.
The models need to be improved in order to address the problem of incorrect inference rules.
The distribu-tional hypothesis does not provide a framework to address the issue with antonymy relations like ?X loves Y?
?
?X hates Y?
and hence other ideas need to be investigated.
Ultimately, our goal is to improve the perform-ance of NLP applications with better inferencing capabilities.
Several recent data points, such as  (Harabagiu and Hickl 2006), and others discussed in Section 2.1, give promise that refined inference rules for directionality may indeed improve ques-tion answering, textual entailment and multi-document summarization accuracies.
It is our hope that methods such as the one proposed in this paper may one day be used to harness the richness of automatically created inference rule resources within large-scale NLP applications.
References Anick, P.G.
and Tipirneni, S. 1999.
The Paraphrase Search Assistant: Terminology Feedback for Iterative Information Seeking.
In Proceedings of SIGIR 1999. pp.
53-159.
Berkeley, CA Barzilay, R. and McKeown, K.R.
2001.Extracting Para-phrases from a Parallel Corpus.
In Proceedings of ACL 2001. pp.
50?57.
Toulose, France.Barzilay, R.; McKeown, K.R.
and Elhadad, M. 1999.
Information Fusion in the Context of Multi-Document Summarization.
In Proceedings of ACL 1999.
College Park, Maryland.
Chklovski, T. and Pantel, P. 2004.
VerbOCEAN: Min-ing the Web for Fine-Grained Semantic Verb Rela-tions.
In Proceedings of EMNLP 2004.
Barcellona Spain.
Cover, T.M.
and Thomas, J.A.
1991.
Elements of Infor-mation Theory.
John Wiley & Sons.
Echihabi, A. and Marcu.
D. 2003.
A Noisy-Channel Approach to Question Answering.
In Proceedings of ACL 2003.
Sapporo, Japan.
Fellbaum, C. 1998.
WordNet: An Electronic Lexical Database.
MIT Press.
Geffet, M.; Dagan, I.
2005.
The Distributional Inclusion Hypothesis and Lexical Entailment.
In Proceedings of ACL 2005. pp.
107-114.
Ann Arbor, Michigan.
Harabagiu, S.; and Hickl, A.
2006.
Methods for Using Textual Entailment in Open-Domain Question An-swering.
In Proceedings of ACL 2006.  pp.
905-912.
Sydney, Australia.
Harris, Z.
1954.
Distributional structure.
Word.
10(23): 146-162.
Lenat, D. 1995.
CYC: A large-scale investment in knowledge infrastructure.
Communications of the ACM, 38(11):33?38.
Lin, D. 1993.
Parsing Without OverGeneration.
In Pro-ceedings of  ACL 1993. pp.
112-120.
Columbus, OH.
Lin, D. and Pantel, P. 2001.
Discovery of Inference Rules for Question Answering.
Natural Language Engineering 7(4):343-360.
Lin, D.; Zhao, S.; Qin, L. and Zhou, M. 2003.
Identify-ing Synonyms among Distributionally Similar Words.
In Proceedings of IJCAI 2003, pp.
1492-1493.
Acapulco, Mexico.
Manning, C.D.
and Sch?tze, H. 1999.
Foundations of Statistical Natural Language Processing.
The MIT Press, Cambridge, MA.
Moldovan, D.; Clark, C.; Harabagiu, S. and Maiorano S.  2003.
COGEX: A Logic Prover for Question An-swering.
In Proceedings of HLT/NAACL 2003.
Ed-monton, Canada.
Pantel, P.; Bhagat, R.; Coppola, B.; Chklovski, T. and Hovy, E. 2007.
ISP: Learning Inferential Selectional Preferences.
In Proceedings of HLT/NAACL 2007.
Rochester, NY.169Pantel, P. and Lin, D. 2002.
Discovering Word Senses from Text.
In Proceedings of KDD 2002. pp.
613-619.
Edmonton, Canada.
Resnik, P. 1996.
Selectional Constraints: An Informa-tion-Theoretic Model and its Computational Realiza-tion.
Cognition, 61:127?159.
Siegel, S. and Castellan Jr., N. J.
1988.
Nonparametric Statistics for the Behavioral Sciences.
McGraw-Hill.
Szpektor, I.; Tanev, H.; Dagan, I.; and Coppola, B.
2004.
Scaling web-based acquisition of entailment relations.
In Proceedings of EMNLP 2004. pp.
41-48.
Barce-lona, Spain.
Torisawa, K. 2006.
Acquiring Inference Rules with Temporal Constraints by Using Japanese Coordi-nated Sentences and Noun-Verb Co-occurances.
In Proceedings of HLT/NAACL 2006. pp.
57-64.
New York, New York.
Wilks, Y.
1975.
Preference Semantics.
In E.L. Keenan (ed.
), Formal Semantics of Natural Language.
Cam-bridge: Cambridge University Press.
Zanzotto, F.M.
; Pennacchiotti, M.; Pazienza, M.T.
2006.
Discovering Asymmetric Entailment Relations between Verbs using Selectional Preferences.
In Pro-ceedings of COLING/ACL 2006. pp.
849-856.
Syd-ney, Australia.170
