A MODEL OF REVISION IN NATURAL LANGUAGE GENERATIONMarie M. VaughanDavid D. McDonaldDepartment of Computer and Information ScienceUniversity of MassachusettsAmherst, Massachusetts 01003ABSTRACTWe outline a model of generation withrevision, focusing on improving textual coherence.We argue that high quality text is more easilyproduced by iteratively revising and regenerating, aspeople do, rather than by using an architecturallymore complex single pass generator.
As a generalarea of study, the revision process presentsinteresting problems: Recognition of flaws in textrequires a descriptive theory of what constituteswell written prose and a parser which can build arepresentation i those terms.
Improving textrequires associating flaws with strategies forimprovement.
The strategies, in turn, need to knowwhat adjustments o the decisions made during theinitial generation will produce appropriatemodifications tothe text.
We compare our treatmentof revision with those of Mann and Moore (1981),Gabriel (1984), and Mann (1983).1.
INTRODUCTION/Revision is a large part of the writing processfor people.
This is one respect in which writingdiffers from speech.
In ordinary conversation we donot rehearse what we are going to say; however,when writing a text which may be used more thanonce by an audience which is not present, we use amultipass ystem of writing and rewriting to produceoptimal text.
By reading what we write, we seembetter able to detect flaws in the text and see newoptions for improvement.Why most people are not able to produceoptimal text in one pass is an open and interestingquestion.
Flower and Hayes (1980) and Collins andGentner (1980) suggest hat writers are unable tojuggle the excessive number of simultaneousdemands and constraints which arise in producingwell written text.
Writers must concentrate not onlyon expressing content and purpose, but also on thediscourse conventions of written prose: theconstraints on sentence, paragraph, and textstructure which are designed to make texts morereadable.
Successive iterations of writing andrevising may allow the writer to reduce the numberof considerations demanding attention at a giventime.The developers ofnatural anguage generationsystems must also address the problem of how toproduce high quality text.
Most systems todayconcentrate on the production of dialogs orcommentaries, where the texts are generally shortand the coherence is strengthened by nonlinguisticcontext.
However, in written documents coherencemust be maintained by the text alone.
In addition,written text must anticipate the questions of itsreaders.
The text must be clear and well organizedso that the reader may follow the points easily, andit must be concise and interesting so as to hold thereader's attention.
These considerations placegreater demands on a generation system.Most natural language generation systemsgenerate in a single pass with no revision.
Adrawback of this approach is that the informationnecessary for decision making must be structured sothat at any given point the generator has enoughinformation to make an optimal decision.
Whilemany decisions require only local information,decisions involving long range dependencies, such asmaintaining coherence, may require not only ahistory of the decisions made so far, but alsopredictions of what future decisions might be madeand the interactions between those decisions.An alternative approach is a single passsystem which incorporates provisions for revision ofits internal representations at specific points in thegeneration process (Mann & Moore, 1981; Gabriel,1984).
Evaluating the result of a set of decisionsafter they have been made allows a moreparsimonious distribution of knowledge since specific90types of improvements may be evaluated atdifferent stages.
Interactions among the decisionsmade so far may also be evaluated rather thanpredicted.
The problem remains, however, of notbeing able to take into account he interaction withfuture decisions.A third approach, and the one described inthis paper, is to use the writing process as a modeland to improve the text in successive passes.
Ageneration/revision system would include agenerator, a parser, and an evaluation componentwhich would assess the parse of what the generatorhad produced and determine strategies forimprovement.
Such a system would be able to tailorthe degree of refinement to the particular contextand audience.
In an interactive situation the systemmay make no refinements at all, as in "off the cuff"speech; when writing a final report, where thequality of the text is more important han the speedof production, it may generate several drafts.While single pass approaches may beengineered to give them the ability to produce highquality text, the parser-mediated revision approachhas several advantages.
Using revision can reducethe structural demands on the generator'srepresentations, and thus reduce the overallcomplexity of the system.
Since the revisioncomponent is analyzing actual text with a parser, itcan assess long range dependencies naturallywithout needing to keep a history within thegenerator or having it predict what decisions it mightmake later.Revision also creates an interesting researchcontext for examining both computational andpsychological issues.
In a closed loop system, thegenerator and parser must interact closely.
Thisprovides an opportunity to examine how theseprocesses differ and what knowledge may be sharedbetween them.
In a similar vein, we may use acomputational model of the revision task to assessthe computational implications of proposedpsychological theories of the writing process.2.
DEFINING THE PROBLEMIn order to make research into the problem ofrevision tractable, we need to first delimit thecriteria by which to evaluate the text.
They need tobe broad enough to make a significant improvementin the readability of the text, narrow enough to bedefined in terms of a representation a parser couldbuild today, and have associated strategies forimprovement that are definable in terms understoodby the text planner and generator.
In addition, wewould like to delegate to the revision componentthose decisions which would be difficult for agenerator to make when initially producing the text.As textual coherence often requires awareness oflong range dependencies, we will begin byconsidering it an appropriate category of evaluationfor a revision component.Coherence in text comes from a number ofdifferent sources.
One is simply the reference madeto earlier words and phrases in the text throughanaphoric and cataphoric pronominal references;nominal, verbal and clausal substitution of phraseswith elements uch as 'one', 'do', and 'so'; ellipsis; andthe selection of the same item twice or two itemsthat are closely related.
Coreferences create textualcohesion since the interpretation of one element inthe text is dependent on another (Halliday andHansan, 1976).Scinto (1983) describes a narrower type ofcohesion which operates between successivepredicational units of meaning (roughly clauses).These units can be described in terms of their"theme" (what is being talked about) and "rheme"(what is being said about it).
Thematic progression isthe organization of given and new information intotheme-rheme patterns in successive sentences.Preliminary studies have shown (Glatt, 1982) thatthematic progressions in which the theme of asentence is coreferential with the theme or thetheme of the immediately preceding sentence areeasier to comprehend than those with other thematicprogressions.
This ease of comprehension can beattributed to the fact that the connection of thesentence with previous text comes early in thesentence.
It would appear that the longer the readermust wait for the connection, the more difficult theintegration with previous information will be.Another source of coherence is lexicalconnectives, uch as sentential adjuncts ('first', 'forexample', 'however'), adverbials ('subsequently','accordingly', 'actually'), and subordinate andcoordinate conjunctions ('while', 'because', "but').These connectives are used to express the abstractrelation between two propositions explicitly, ratherthan leaving it to the reader to infer.
Other ways ofcombining sentences can function to increasecoherence as well.
Chafe (1984) enumerates thedevices used to combine "idea units" in written tex)including turning predications into modificatir91with attributive adjectives, preposed and postposedparticiples, and combining sentences usingcomplement and relative clauses, appositives, andparticiple clauses.
These structures function toincrease connectivity by making the text moreconcise.Paragraph structure also contributes to thecoherence of a text.
"Paragraph" in this sense(Longacre, 1979) refers to a structural unit whichdoes not necessarily correspond to the orthographicunit indicated by an indentation of the text.Paragraphs are characterized by closure (a beginningand end) and internal unity.
They may be markedprosodically by intonation in speech ororthographically by indentation in writing, andstructurally, such as by initial sentence adjuncts.Paragraphs are recursive structures, and thus maybe composed of embedded paragraphs.
In thisrespect they are similar to Mann's rhetoricaldiscourse structures (Mann, 1984).3- A MODEL OF GENERATION AND REVISIONIn this section we will outline a model ofgeneration with revision, focusing on improvingtextual coherence.
First we estabLish a division oflabor within the generation/revision process.
Thenwe look at the phases of revision and consider thecapabilities necessary for recognizing deficiencies incohesion and how they may be repaired.
In thefourth section, we apply this model to the revision ofan example summary paragraph.The initial generation of a text involvesmaking decisions of various kinds.
Some areconceptually based, such as what information toinclude and what perspectives to take.
Others aregrammatically based, such as what grammatical forma concept may take in the particular syntacticcontext in which it is being realized, or howstructures may be combined.
Still others areessentially stylistic and have many degrees offreedom, such as choosing a variant of a clause orwhether to pied pipe in a relative clause.The decisions that revision affects are at thestylistic level; only stylistic decisions are free of fixedconstraints and may therefore be changed.
Changesto conceptually dictated decisions would shift themeanin~ of the text.
During initial generation,euristics for maintaining local cohesion are used,~wing on the representations of simple local~denctes.
By "local", we mean speciftcally that92we restrict the scope of information available to thegenerator to the sentence before, so that it can usethematic progression heuristics, letting revision takecare of longer range coherence considerations.The revision process can be modeled in terms ofthree phases:I) recognition, which determines where thereare potential problems in the text;2) editing, which determines what strategiesfor revision are appropriate and chooses which, ifany, to employ;3) re-generation, which employs the chosenstrategy by directing the decision making in thegeneration of the text at appropriate moments.This division reflects an essential difference in thetypes of decisions being made and the character ofrepresentations being used in each phase.The recognition phase is responsible forparsing the text and building a representation richenough to be evaluated in terms of how well the textcoheres.
Since in this model the system is evaluatingits own output, it need not rely only on the outputtext in making its judgements; the original messageinput to the generator is available as a basis forcomparing what was intended with what wasactually said.
The goal is to notice the relationshipsamong the things mentioned in the text and thedegree to which the relationships appear explicitly.For example, the representation must capturewhether a noun phrase is the first reference to anobject or a subsequent reference, and if it is asubsequent reference, where and how it waspreviously mentioned.
The recognition phaseanalyzes the text as it proceeds using a set ofevaluation criteria.
Some of these criteria lookthrough the representation for specific flaws, such asambiguous referents, while others simply flag placeswhere optimizations may be possible, such aspredicate nominal or other simple sentencestructures which might be combined with othersentences.
Other criteria compare the representationwith the original plan in order to flag potential placesfor revision such as parallel sub-plans not realized inparallel text structure, or relations included in theplan which are expressed implicitly, rather thanexplicitly, in the text.Once a potential problem has been noted, theediting phase takes over.
For each problem there isa set of one or more strategies for correcting it.
Forexample, if there is no previous referent for thesubject of a sentence, but there is a previousreference to the object, the sentence might bechanged from active to passive; or if the subject hasa relation to previous referent which is not explicitlymentioned in the text, more information may beadded through modification to make that implicitconnection explicit.
The task of the editing phase isto determine which, if any, of these strategies toemploy.
(It may, for example decide not to take anyaction until further text has been analyzed.
)However, what constitutes an improvement is notalways clear.
While using the passive maystrengthen the coherency, active sentences aregenerally preferred over passives.
And while addingmore information may strengthen a referent, it mayalso make the noun phrase too heavy if there arealready modifications.
The criteria that choosebetween strategies must take into account the factthat the various dimensions along which the textmay be evaluated are often in conflict.
Simpleevaluation functions will not suffice.The final step is actually making the changeonce the strategy has been chosen.
This essentiallyinvolves "marking" the input to the generator, so thatit will query the revision component at appropriatedecision points.
For example, if the goal is to put twosentences into parallel structure, the input planwhich produces the structure to be changed wouldbe marked.
Then, when the generator reached thatunit, it would query the revision component as towhere the unit should be put in the text (e.g.
a mainclause or a subordinate one) and how it should berealized (e.g.
active or passive).Note that as the revision process proceeds, it iscontinually dealing with a new text and plan, andmust update its representations accordingly.
Newopportunities for changes will be created andprevious ones blocked.
We have left open thequestion of how the system decides when it is done.With a limited set of evaluation criteria, the systemmay simply run out of strategies for improvemenLThe question will be more easily answeredempirically when the system is implemented.An important architectural point of the designis that the system is not able to look ahead toconsider later repercussions of a change; it isconstrained to decide upon a course of actionconsidering only the current state of the textualanalysis and the original plan.
While this constraintobviates the problems of the combinatorial explosionOf potential versions and indefinite lookahead, wemust guard against he possibility of a choice causingunforeseen problems in later steps of the revisionprocess.
One way to avoid this problem is to keep aversion of the text for each change made and allowthe system to return to a previous draft if none ofthe strategies available could sufficiently improvethe text.4.
PARAGRAPH ANALYSISIn this section we use the model outlinedabove to describe how the revision component couldimprove a generated text.
What follows is anexample of the incremental revision of a summaryparagraph.
The discussion at each step gives anindication of the character of information neededand the types of decisions made in the recognition,editing, and regeneration phases.The example is from the UMass COUNSELORProject, which is developing a natural languagediscourse system based on the HYPO legal reasoningsystem (Rissland, Valcarce, & Ashley, 1984).
Theimmediate context is a dialog between a lawyer andthe COUNSELOR system.
Based on information fromthe lawyer, the system has determined that thelawyer's case might be argued along the dimension"common employee transferred products or tools".The system summarizes a similar case that has beenargued along the same dimension as an example.The information to be included in the summary ischosen from the set of factual predicates that mustbe satisfied in order for the particular dimension toapply.In the initial generation of the summary, theoverall organization is guided by a default paragraphorganization for a case summary.
The first sentencefunctions to introduce the case and place it as anexample of the dimension in question.
The bodypresents the facts of the case organized according toa partial ordering based on the chronology of theevents.
The final sentence summarizes the case bygiving the action and decision.
The choice of textstructure is guided by simple heuristics whichcombine sentences when possible and choose astructure for a new sentence based on thematicprogression, so that the subject of the new sentenceis related to the theme or rheme of the previoussentence.93(1) The case Telex vs. IBM was argued alongthe dimension "common employee transferredproducts or tools".
IBM developed the productMerlin, which is a disk storage system.
Merlincompetes with the T-6830.
which was developedby Telex.
The manager on the Merlindevelopment project was Clemens.
He left IBM in1972 to work for Telex and took with him a copyof the Merlin code.
IBM sued Telex formisappropriation f trade secret information andwon the case.The recognition phase analyzes the text,looking for both flaws in the text and missedopportunities.
The repetition of the word "develop"in the second and third sentences alerts the editingphase to consider whether a different word shouldbe chosen to avoid repetition, or the repetitionshould be capitalized on to create parallel structure.By examining the input message, it determines thatthese clauses were realized from parallel plans, so itchooses to realize them in parallel structure.In the regeneration phase, the message ismarked so that the revision component can bequeried at the appropriate moments to control whenand how the information unit for "Telex developedthe T-6830" will be realized.
After generation of thesecond sentence, the generator has the choice ofattaching either <develop Telex T-6830> or <competeMerlin T-6830> as the next sentence.
As one of thesehas been marked, the revision component is queried.Its goal is to make this sentence parallel to theprevious one, so it indicates that the marked unit,<develop ...>, should be the next main clause andshould be realized in the active voice.
Once that hasbeen accomplished, the default generation heuristicstake over to attach <competes with...> as a relativeclause:(2) The case Telexvs.
IBM was argued alongthe dimension "common employee transferredproducts or tools".
IBM developed the productMerlin.
which is a disk storage system.
Telexdeveloped the T-6830, which competeswith Merlin.
The menager on the Merlindevelopment project was Clemens.
He left IBM in1972 to work for Telex end took with him a copyof the Merlin code.
IBM sued Telex formisappropriation f trade secret information andwon the case.Once the change is completed, the recognitionphase takes over once again.
It notices that sentencefour no longer follows a preferred thematicprogression as "Merlin" is no longer a theme ortheme of the previous sentence.
It considers thefollowing possibilities:-- Create a theme-theme progression bymoving sentence five before sentence four andbeginning it with "Telex", as in: "Telex was whoClemens worked for after he left IBM in 1972.
"(Note there are no other possibilities for preferredthematic progressions without changing previoussentences.)
-- Reject the previous change which createdthe parallel structure and go back to the originaldraft.-- Leave the sentence as it is.
Although thereis no preferred thematic progression, cohesion iscreated by the repetition of "Merlin" in the twosentences.-- Create an internal paragraph break by using"in 1972" as an initial adjunct.
This signals to thereader that there is a change of focus and reducesthe expectation of a strong connection with theprevious sentences.The editor chooses the fourth strategy, sincenot only does it allow the previous change to beretained, but it imposes additional structure on theparagraph.
Again during the regeneration phase theeditor marks the information unit in the messagewhich is to be realized differently in the new draft.Default generation heuristics choose to realize"Clemens" as a name, rather than a pronoun as it hadbeen, and to attach "the manager..." as an appositive.
(3) The case Telex vs. IBM was argued alongthe dimension "common employee transferredproducts or tools".
IBM developed the productMerlin, which is a disk storage system.
Telexdeveloped the T-5830, which competes withMerlin.
In 1972.
Clemens.
the tanager  onthe Merlin development project, left  IBMto work for Telex ud  took with him ?copy of the Merlin code.
IBM sued Telex formisappropriation f trade secret information endwon the case.5.
OTHER REVISION SYSTEMSFew generation systems address the questionof using successive refinement to improve theiroutput.
Some notable exceptions are KDS (Mann &Moore, 1981), Yh (Gabriel, 1982), and Penman(Mann, 1983).
KDS and ?h use a top down approachwhere intermediate representations are evaluatedand improved before any text is actually generated;Penman uses a cyclic approach similar to thatdescribed here.94KDS uses a hill climbing module to improvetext.
Once a set of protosentences has been producedand grossly organized, the hill climber attempts tocompose complex protosentences from simple onesby applying a set of aggregation rules, whichcorrespond roughly to English clause combiningrules.
Next, the hill climber uses a set of preferencerules to judge the relative quality of the resultingunits and repeatedly improves the set ofprotosentences on the basis of those judgements.Finally, a simple linguistic component realizes theunits as sentences.There are two main differences between thissystem and the one described in this paper.
First,KDS uses a quantitative measure of evaluation in theform of preference rules which are statedindependently of any linguistic context.
The scoreassigned to a particular construction or combinationof units does not consider which rules have beenapplied in nearby sentences.
Consequently,intersentential relations cannot be used to evaluatethe text for more global considerations.
Secondly,KDS evaluates an intermediate structure, rather thanthe final text.
Therefore, realization decisions, suchas those made by KDS's Referring Phrase Generator,have not yet been made.
This makes evaluating thestrength of coherence difficult, since it is not possibleto determine whether a connection will be madethrough modification.Yh also uses a top down improvementalgorithm, however rather than having a singleimprovement module which applies one time, itevaluates and improves throughout he generationprocess.
The program consists of a set of expertswhich do such things as construct phrases, constructsentences, and supply words and idioms.
The"planner" tries to find a sequence of experts that willtransform the initial situation (initially aspecification to be generated) to a goal situation(ultimately text).
First, experts which group theinformation into paragraph size sets are applied;then other experts divide those sets into sentencesize chunks; next, sentence schemata expertsdetermine sentence structure; and finally expertswhich choose lexical items and generate text apply.After each expert applies, critics evaluate the resultand may call an expert to improve it.
Like KDS, thistype of approach makes editing of global coherenceconsiderations difficult since structural decisions aremade before lexical choices.The Penman System is the most similar to theone described in this paper.
The principle data flowand division of labor into modules are the same:planning, sentence generation, improvement.However, an important difference is that Penmandoes not parse the text in order to revise it.
Rather ituses quantitative measures, such as sentence lengthand level of clause embeddings to flag potentialtrouble spots.
While this approach may improve textalong some dimensions, it will not be capable ofimproving relations such as coherence, which dependon understanding the text.
A similarity betweenPenman's revision module and the model describedin this paper is that neither has been implemented.As the two systems mature, a more completecomparison may be made.6.
CONCLUSIONUsing the writing process as a model forgeneration is effective as a means of improving thequality of the text generated, especially whenconsidering intersentential relations such ascoherence.
Decisions which increase coherence aredifficult for a generator to make on a first passwithout keeping an elaborate history of its previousdecisions and being able to predict future decisions.Once the text has been generated however, revisioncan take advantage of the global informationavailable to evaluate and improve coherence.The next steps in the development of thesystem proposed in this paper are clear: For therecognition phase, a more comprehensive set ofevaluation criteria need to be enumerated and therequirements hey place on a parser specified.
Forthe editing phase, the relationships betweenstrategies for improving text, and changes ingeneration decisions and variation in output textneed to be explored.
Finally, a prototypical model ofthe system needs, to be implemented so that theactual behavior of the system may be studied.7.
ACKNOWLEDGEMENTSWe would like to thank John Brolio and PhilipWerner for their helpful commentary in thepreparation of this paper.958.
REFERENCESChafe, Wallace L. (1985) "Linguistic DifferencesProduced by Differences Between Speaking andWriting", in Olson, David K., Nancy Torrance, &Angela Hildyard, eds.
Literacy, Language andLearning: The nature and consequences ofreading and writing, Cambridge UniversityPress, pp.
I05-123.Clippinger, John, & David D. McDonald (1983) "Whatmakes Good Writing Easier to Understand", IJCAIProceedings, pp.730-732.Collins, Allan & Dedre Gentner (1980) "A Frameworkfor a Cognitive Theory of Writing", in Gregg &Steinburg, eds, pp.
51-72.Flower, Linda & John Hayes (1980) "The Dynamics ofComposing: Making Plans and JugglingConstraints", inGregg & Steinberg, eds, pp.
31-50.Gabriel, Richard (1984) "Deliberate Writing", toappear in McDonald & Bolc, eds.
Papers onNatural Language Generation, Springer-Verlag, 1987.Glatt, Barabara S. (I 982) "Defining ThematicProgressions and Their Relationships to ReaderComprehension", in Nystrand, Martin, ed.
WhatWriters Know."
the language, process, andstructure of written discourse, New York, NY:Academic Press, pp.
87-104.Gregg, L. & E.R.
Steinberg, eds.
(1980) CognitiveProcesses in Writing, Hilldale, N J: LawrenceErlbaum Associates.Halliday, M.A.K., & Ruqaiya Hasan (1976) Cohesionin English, London: Longman Group Ltd.Hayes, John, & Linda Fower (1980) "Identifying theOrganization of Writing Processes", in Gregg &Steinberg (Eds), pp.
3-30.Longacre, R.E.
(1979) "The Paragraph as aGrammatical Unit", in Syntax and Semantics,Vol 12: Discourse and Syntax, AcademicPress, pp.
115-134.Mann, William C. & James Moore (1981) "ComputerGeneration of Multiparagraph English TeIt",American Journal of ComputationalLinguistics, Vol.7, No.I, Jan-Mar, pp.17-29.Mann, William C. (1983) An Overview of thePenman Text Generation System, USCIISITechnical Report RR-83- I 14.Mann, William C. (1984) Discourse Structures forText GenerationISI Technical Report ISIIRR-84-127.McDonald, David D. (1985) "Recovering the Speaker'sDecisions during Mechanical Translation",Proceedings of the Conference onTheoretical and Methodological Issues inMachine Translation of Natural Languages,Colgate University, pp.
183-199.McDonald, David D. & James Pustejovsky (1985)"Description-directed Natural LanguageGeneration".
IJCA I Proceedings, pp.799-805.Rissland E., E. Valearce, & K. Ashley (1984)"Explaining and Arguing with Examples",Proceedings of A A A 1-84.Scinto, Leonard, F.M.
(1983)"Functional Connectivityand the Communicative Structure of Text", inPetofi, Janos S. & Emel Sozer, eds.
(1983) Microand Macro Connexity of Texts, Hamburg:Buske, pp.73- I 15.96
