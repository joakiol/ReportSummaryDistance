Constraints over Lambda-Structures in SemanticUnderspecif icat ionMarkus  Egg  and Joach im N iehren*  and Peter  Ruhrberg  and Fe iyu  XuDepartment of Computational Linguistics / *Programming Systems LabUniversit/it des Saarlandes, Saarbriicken, Germany{egg, peru, feiyu}~coli, uni-sb, deniehren~ps, uni-sb, deAbst rac tWe introduce a first-order language for seman-tic underspecification that we call ConstraintLanguage for Lambda-Structures (CLLS).
A A-structure can be considered as a A-term upto consistent renaming of bound variables (a-equality); a constraint of CLLS is an underspec-ified description of a A-structure.
CLLS solvesa capturing problem omnipresent in underspec-ified scope representations.
CLLS features con-straints for dominance, lambda binding, paral-lelism, and anaphoric links.
Based on CLLS wepresent a simple, integrated, and underspecifiedtreatment of scope, parallelism, and anaphora.1 In t roduct ionA central concern of semantic underspecifica-tion (van Deemter and Peters, 1996) is the un-derspecification f the scope of variable bind-ing operators uch as quantifiers (Hobbs andShieber, 1987; Alshawi, 1990; Reyle, 1993).This immediately raises the conceptual problemof how to avoid variable-capturing when instan-tiating underspecified scope representations.
Inprinciple, capturing may occur in all formalismsfor structural underspecification which repre-sent binding relations by the coordination ofvariables (Reyle, 1995; Pinkal, 1996; Bos, 1996;Niehren et al, 1997a).
Consider for instance theverb phrase in(1) Manfred \[vF knows every student\]An underspecified description of the composi-tional semantics of the VP in (1) might be givenalong the lines of (2):(2) X--Cl(Vx(student(x)-+C2(know(Z, x))))The meta-variable X in (2) denotes ome treerepresenting a predicate logic formula which isunderspecified for quantifier scope by means oftwo place holders C1 and C2 where a subject-quantifier can be filled in, and a place holderZ for the subject-variable.
The binding of theobject-variable x by the object-quantifier Vx iscoordinated through the name of the object-variable, namely 'x'.
Capturing occurs whena new quantifier like 3x is filled in C2 wherebythe binding between x and Vx is accidentallyundone, and is replaced with a binding of x by3x.Capturing problems raised by variable coordi-nation may be circumvented in simple caseswhere all quantifiers in underspecified descrip-tions can be assumed to be named by distinctvariables.
However, this assumption becomesproblematic in the light of parallelism betweenthe interpretations of two clauses.
Consider forinstance the correction of (1) in (3):(3) No, Hans \[vP knows every student\]The description of the semantics of the VP in(3) is given in (4):(4) Y=C3(Vy(student(y)-+C4(know( Z', y) ) ) )But a full understanding of the combinedclauses (1) and (3) requires a grasp of the se-mantic identity of the two VP interpretations.Now, the VP interpretations (2) and (4) lookvery much Mike but for the different object-variable, namely 'y' instead of 'x'.
This illus-trates that in cases of parallelism, like in cor-rections, different variables in parallel quanti-fied structures have to be matched against eachother, which requires some form of renamingto be done on them.
While this is unprob-lematic for fully specified structures, it presentsserious problems with underspecified structureslike (2) and (4), as there the names of the vari-353ables are crucial for insuring the right bindings.Any attempt o integrate parallelism with scopeunderspecification thus has to cope with con-flicting requirements on the choice of variablenames.
Avoiding capturing requires variablesto be renamed apart but parallelism needs par-allel bound variables to be named alike.We avoid all capturing and renaming prob-lems by introducing the notion of A-structures,which represent binding relations without nam-ing variables.
A A-structure is a standard pred-icate logic tree structure which can be con-sidered as a A-term or some other logical for-mula up-to consistent renaming of bound vari-ables (a-equality).
Instead of variable names,a A-structure provides a partial function ontree-nodes for expressing variable binding.
Angraphical illustration of the A-structure corre-sponding to the A-term Ax.like(x,x) is given (5).
(5) ( ', Axlike(x,x)Formally, the binding relation of the A-structurein (5) is expressed through the partial functionA (5) defined by A(5)(v2) = v0 and A(5)(v3) = v0.We propose a first-order constraint language forA-structures called CLLS which solves the cap-turing problem of underspecified scope repre-sentations in a simple and elegant way.
CLLSsubsumes dominance constraints (Backofen etal., 1995) as known from syntactic processing(Marcus et al, 1983) with tree-adjoining gram-mars (Vijay-Shanker, 1992; Rogers and Vijay-Shanker, 1994).
Most importantly, CLLS con-straints can describe the binding relation of a A-structure in an underspecified manner (in con-trast to A-structures like (5), which are alwaysfully specified).
The idea is that A-binding be-haves like a kind of rubber band that can bearbitraryly enlarged but never broken.
E.g., (6)is an underspecified CLLS-description of the A-structure (5).Xo,~*X~ AA(X~)=X4A .~ .?
XoXl:lam(X2)A // lain I X1(6) X2,~*X3A ' * X2I Z3:,ke(X ,Xs)^ ,X4:var A X5:var var,,~.~X4 vat ~ X5The constraint (6) does not determine a uniqueA-structure since it leaves e.g.
the space be-tween the nodes X2 and X3 underspecified.Thus, (6) may eventually be extended, say, toa constraint that fully specifies the A-structurefor the A-term in (7).
(7) Ay.Az.and(person(y), like(y, z) )Az intervenes between Ay and an occurrence ofy when extending (6) to a representation f (7)without the danger of undoing their binding.CLLS is sufficiently expressive for an integratedtreatment of semantic underspecification, par-allelism, and anaphora.
To this purpose itprovides parallelism constraints (Niehren andKoller, 1998) of the form X/X', ,~Y/Y I reminis-cent to equality up-to constraints (Niehren etal., 1997a), and anaphoric bindings constraintsof the form ante(X)=X'.As proved in (Niehren and Koller, 1998), CLLSextends the expressiveness of context unifica-tion (Niehren et al, 1997a).
It also extendsits linguistic coverage (Niehren et al, 1997b)by integrating an analysis of VP ellipses withanaphora s in (Kehler, 1995).
Thus, the cov-erage of CLLS is comparable to Crouch (1995)and Shieber et al (1996).
We illustrate CLLSat a benchmark case for the interaction of scope,anaphora, and ellipsis (8).
(8) Mary read a book she liked before Sue did.The paper is organized as follows.
First, weintroduce CLLS in detail and define its syntaxand semantics.
We illustrate CLLS in sec.
3 byapplying it to the example (8) and compare itto related work in the last section.2 A Const ra in t  Language forA -St ructures  (CLLS)CLLS is an ordinary first-order language inter-preted over A-structures.
A-structures are par-ticular predicate logic tree structures we will in-troduce.
We first exemplify the expressivenessof CLLS.2.1 E lements  of CLLSA A-structure is a tree structure xtended bytwo additional relations (the binding and thelinking relation).
We represent A-structuresas graphs.
Every A-structure characterizes aunique A-term or a logical formula up to consis-tent renaming of bound variables (a-equality).E.g., the A-structure (10) characterizes thehigher-order logic (HOL) formula (9).354(9) (many(language))(Ax.speak(x)(jolm))(10)many ~Two things are important here: the label '~'represents explicitly the operation of functionapplication, and the binding of the variable x bythe A-operator Ax is represented by an explicitbinding relation A between two nodes, labelledas var and lain.
As the binding relation is ex-plicit, the variable and the binder need not begiven a name or index such as x.We can fully describe the above A-structureby means of the constraints for immediatedominance and labeling X:f (X1, .
.
.
,  Xn), (e.g.X1:@(X2,)(3) and X3:lam(X4) etc.)
and bind-ing constraints A(X)=Y.
It is convenient to dis-play such constraints graphically, in the style of(6).
The difference of graphs as constraints andgraphs as A-structures i important since under-specified structures are always seen as descrip-tions of the A-structures that satisfy them?Dominance .
As a means to underspecify A-structures, CLLS employs constraints for domi-nance X~*Y. Dominance is defined as the tran-sitive and reflexive closure of immediate dom-inance.
We represent dominance constraintsgraphically as dotted lines.
E.g., in (11) we havethe typical case of undetermined scope.
It isanalysed by constraint (12), where two nodesX1 and X2, lie between an upper bound Xoand a lower bound X3.
The graph can be lin-earized by adding either a constraint XI~*X2or X2~*X1, resulting in the two possible scop-ing readings for the sentence (11).
(11) Every linguist speaks two Asianlanguages.
(12) .....
".X.o.? "
~ X' 2e_ l  t_a_ l,' .x4| " ' " '  ..-" l | " .. .. ?
,,~ var~-~speakParal le l ism.
(11) may be continued by an el-liptical sentence, as in (13).
(13) Two European ones too.We analyse lliptical constructions by means ofa parallelism constraint of the form(14) X, /Xp~YdY pwhich has the intuitive meaning that the seman-tics Xs of the source clause (12) is parallel tothe semantics Yt of the elliptical target clause,up-to the exceptions Xp and Yp, which are thesemantic representations of the so called paral-lel elements in source and target clause.
In thiscase the parallel elements are the two subjectNPs.
(11) and (13) together give us a 'Hirschbiihlersentence' (Hirschbiihler, 1982), and our treat-ment in this case is descriptively equivalent tothat of (Niehren et al, 1997b).
Our paral-lelism constraints and their equality up-to con-straints have been shown to be (non-trivially)intertranslatable (Niehren and Koller, 1998) ifbinding and linking relations in A-structures areignored.For the interaction of binding with parallelismwe follow the basic idea that binding relationsshould be isomorphic between two similar sub-structures.
The cases where anaphora interactwith ellipsis are discussed below.Anaphor ic  links.
We represent anaphoricdependencies in A-structures by another explicitrelation between odes, the linking relation.
Ananaphor (i.e.
a node labelled as ana) may belinked to an antecedent ode, which may be la-belled by a name or var, or even be anotheranaphor.
Thus, links can form chains as in (15),where a constraint such as ante(X3)=X2 is rep-resented by a dashed line from X3 to X2.The constraint (15) analyzes (16), where thesecond pronoun is regarded as to be linked tothe first, rather than linked to the proper name:(15)like ?
~ ~ ~ i  ~2rnother_of ~ ana ~ X3(16) John i said he~ liked hisj mother355In a semantic interpretation of A-structures,analoguously to a semantics for lambda terms, 1linked nodes get identical denotations.
Intu-itively, this means they are interpreted as ifnames, or variables with their binding relations,would be copied down the link chain.
It is cru-cial though not to use such copied structuresright away: the link relation gives precise con-trol over strict and sloppy interpretations whenanaphors interact with parallelism.E.g., (16) is the source clause of the many-pronouns-puzzle, a problematic ase of interac-tion of ellipsis and anaphora.
(Xu, 1998), whereour treatment of ellipsis and anaphora was de-veloped, argues that link chains yield the bestexplanation for the distribution of strict/sloppyreadings involving many pronouns.The basic idea is that an elided pronoun caneither be linked to its parallel pronoun in thesource clause (referential parallelism) or belinked in a structurally parallel way (structuralparallelism).
This analysis agrees with the pro-posal made in (Kehler, 1993; Kehler, 1995).
Itcovers a series of problematic ases in the lit-erature such as the many-pronouns-puzzle, cas-caded ellipsis, or the five-reading sentence (17):(17) John revised his paper before the teacherdid, and so did BillThe precise interaction of parallelism with bind-ing and linking relations is spelled out in sec.2.2.2.2 Syntax  and  Semant ics  of  CLLSWe start with a set of labels E={@2, lam I ' var  0 ' ana 0 ' before 2, maryO, readO, , ,  .
},ranged over by \]ji, with arity i which may beomitted.
The syntax of CLLS is given by:::= XJ (X l , .
.
.
,X , )  ( \ ] J "ES)I X<*YI A(x)=YI ante(X)=YI X/X'~Y/Y'\[ ~ A~'The semantics of CLLS is given in termsof first order structures L, obtained fromunderlying tree structures, by adding rela-tions eL for each CLLS relation symbol ?
E{~*, A(.
)= ", ante(.
)=., /.~-/-, :@, :lam, :vat,...}.1We abstain from giving such a semantics here, as wewould have to introduce types, which are of no concernhere, to keep the semantics imple.A (finite) tree structure, underlying L, is givenby a set of nodes u, u', ... connected by paths~r, ~ff, ... (possibly empty words over positive in-tegers), and a labelling \]junction I from nodesto labels.
The number of daughters of a nodematches the arity of its label.
The relationshipY:fL(Vl, ..., Yn) holds iff l(v)=\]j and v.i = vi fori = 1..n, where v.~r stands for the node that isreached from v by following the path 7r (if de-fined).
To express that a path lr is defined ona node v in L we write v.rSL.
We write ~r<r'for ~r being an initial segment of 7d.
The domi-nance relation v<~v' holds if 37r v.Tr = v'.
If ~ris non-empty we have proper dominance v<+v '.A A-structure L is a tree structure with two(partially functional) binary relations AL(')= ",for binding, and anteL(')=', for anaphor-to-antecedent linking.
We assume that the follow-ing conditions hold: (1) binding only holds be-tween variables (nodes labelled var) to A-binders(nodes labelled lain); (2) every variable has ex-actly one binder; (3) variables are dominatedby their binders; (4) only anaphors (nodel la-belled ana) are linked to antecendents; (2) ev-ery anaphor has exactly one antecendent; (5)antecedents are terminal nodes; (6) there areno cyclic link chains; (7) if a link chain ends ata variable then each anaphor in the chain mustbe dominated by the binder of that variable.The not so straight forward part of the seman-tics of CLLS is the notion of parallelism, whichwe define for any given A-structure L as follows:iff there is a path ~r0 such that:1. rr0 is the "exception path" from the topnode of the parallel structures the the twoexception positions: v{=Vl.~ro A v~=v2.~ro2.
the two contexts, which are the trees be-low Vl and v2 up-to the trees below the ex-ception positions v{ and v~, must have thesame structure and labels:Vr  -~0<r  ~ ((v, .~$L ~ v2 .
rSL)A(Vl.Tr.~L =:~ l(Vl.Tr ) ---- l(v2.Tr))))3. there are no 'hanging' binders from the con-texts to variables outside them:VvVv' * + ' * ' AL (v ' )=v)  ~(Vl<~LV<~ L Vl <~LV A4.
binding is structurally isomorphic withinthe two contexts:356V rr V rr' -~ir o < ~r A v l  .
Tr.L L A -~'tr o <_Tr' A v l  .
lr '  J~ L :=~5.
two variables in identical positions withintheir context and bound outside their con- ~_.~.:y,.
"text must be bound by the same binder: ,--~'~.
I~-~ v,,w-(,,o>,, / - '% :;*-1 x.,(AL(Vl.rr)=v ?~ AL(v2.~r)=v) ~'ana ?
X,2~ ~ :.6. two anaphors in identical positions within ~x ..their context must have isomorphic links x ".resents the semantics of the elided part of thetarget clause.
)(18) ..X9" .
.
.
.
'b ~ x  t? "
, xTg o:::within their context, or the target sentenceanaphor is linked to the source sentenceanaphor:VvVTr -mr0_<Tr A Vl.Tr,~L A anteL(Vl.Tr)=v =:>(37r'(v=vl.~r'A-=rr0<rr'AanteL (v=.rr)----v2nr')V anteL(u2.r)=Ul.rr)3 In teract ion  o f  quant i f ie rs ,anaphora ,  and  el l ips isIn this section, we will illustrate our analysisof a complex case of the interaction of scope,anaphora, and ellipsis.
In the case (8), bothanaphora nd quantification i teract with ellip-sis.
(8) Mary read a book she liked before Sue did.
(8) has three readings (see (Crouch, 1995) fora discussion of a similar example).
In the first,the indefinite NP a book she liked takes widescope over both clauses (a particular book likedby Mary is read by both Mary and Sue).
In thetwo others, the operator before outscopes the in-definite NP.
The two options result from the twopossibilities of reconstructing the pronoun shein the ellipsis interpretation, viz., 'strict' (bothread some book that Mary liked) and 'sloppy'(each read some book she liked herself).The constraint for (8), displayed in (18), is anunderspecified representation f the above threereadings.
It can be derived in a compositionalfashion along the lines described in (Niehren etal., 1997b).
Xs and Xt represent the semanticsof the source and the target clause, while X16and X21 stand for the semantics of the paral-lel elements (Mary and Sue) respectively.
Forreadability, we represent the semantics of thecomplex NP a book she liked by a triangle dom-inated by X2, which only makes the anaphoriccontent 212 of the pronoun she within the NPexplicit.
The anaphoric relationship betweenthe pronoun she and Mary is represented by thelinking relation between X12 and X16.
(X20 rep-?
read ~~7~1 ~Xz6Xs/XI6~X~/X21The first reading, with the NP taking widescope, results when the relative scope betweenXI and XI5 is resolved such that XI dominatesX15.
The corresponding solution of the con-straint is visualized in (19).
(19)za,  x=,read ~'~ var~-.X"z~ read ~ var~'~ jThe parallelism constraint Xs/Xl6,,~Xt/X21 issatisfied in the solution because the node Xtdominates a tree that is a copy of the tree dom-inated by Xs.
In particular, it contains a nodelabelled by var, which has to be parallel to Xlr,and therefore must be A-linked to X3 too.The other possible scoping is for XlS to domi-nate X1.
The two solutions this gives rise to aredrawn in (20) and (21).
Here X1 and the in-terpretation of the indefinite NP directly belowenter into the parallelism as a whole, as thesenodes lie below the source node Xs.
Thus, thereare two anaphoric nodes: X12 in the source andits 'copy' II12 in the target semantics.
For thecopy to be parallel to XI2 it can either havea link to X12 to have a same referential value(strict reading, see (20)) or a link to X21 thatis structurally parallel to the link from X12 toX16, and hence leads to the node of the parallelelement Sue (sloppy reading, see (21)).357(20) ~ x ,I"" ~"r, ary.,, X~6"~. '
~/sue * _X4 Re la ted  WorkCLLS allows a uniform and yet internally struc-tured approach to semantic ambiguity.
We usea single constraint formalism in which to de-scribe different kinds of information about themeaning of an utterance.
This avoids the prob-lems of order dependence of processing that forexample Shieber et al (1996) get by inter-leaving two formalisms (for scope and for el-lipsis resolution).
Our approach follows Crouch(1995) in this respect, who also includes par-allelism constraints in the form of substitutionexpressions directly into an underspecified se-mantic formalism (in his case the formalism ofQuasi Logical Forms QLF).
We believe that thetwo approaches are roughly equivalent empiri-cally.
But in contrast o CLLS, QLF is not for-malised as a general constraint language overtree-like representations of meaning.
QLF hasthe advantage of giving a more direct handleon meanings themselves - at the price of its rel-atively complicated model theoretic semantics.It seems harder though to come up with solu-tions within QLF that have an easy portabilityacross different semantic frameworks.We believe that the ideas from CLLS tie in quiteeasily with various other semantic formalisms,such as UDRT (Reyle, 1993) and MRS (Copes-take et al, 1997), which use dominance relationssimilar to ours, and also with theories of LogicalForm associated with GB style grammars, suchas (May, 1977).
In all these frameworks onetends to use variable-coordination (or coindex-ing) rather than the explicit binding and linkingrelations we have presented here.
We hope thatthese approaches can potentially benefit fromthe presented idea of rubber bands for bindingand linking, without having to make any dra-matic changes.Our definition of parallelism implements someideas from Hobbs and Kehler (1997) on the be-havior of anaphoric links.
In contrast o theirproposal, our definition of parallelism is notbased on an abstract notion of similarity.
Fur-thermore, CLLS is not integrated into a generaltheory of abduction.
We pursue a more modestaim at this stage, as CLLS needs to be con-nected to "material" deduction calculi for rea-soning with such underspecified semantic rep-resentation in order to make progress on thisfront.
We hope that some of the more ad hocfeatures of our definition of parallelism (e.g.
ax-iom 5) may receive a justification or improve-ment in the light of such a deeper understand-ing.Context  Uni f icat ion.
CLLS extends theexpressiveness of context unification (CU)(Niehren et al, 1997a), but it leads to a moredirect and more structured encoding of seman-tic constraints than CU could offer.
There arethree main differences between CU and CLLS.1) In CLLS variables are interpreted over nodesrather than whole trees.
This gives us a di-rect handle on occurrences of semantic material,where CU could handle occurrences only indi-rectly and less efficiently.
2) CLLS avoids thecapturing problem.
3) CLLS provides explicitanaphoric links, which could not be adequatelymodeled in CU.The insights of the CU-analysis in (Niehrenet al, 1997b) carry over to CLLS, but theawkward second-order quations for expressingdominance in CU can be omitted (Niehren andKoller, 1998).
This omission yields an enormoussimplification and efficiency gain for processing.Tractabi l i ty .
The distinguishing feature ofour approach is that we aim to develop ef-ficiently treatable constraint languages ratherthan to apply maximally general but intractableformalisms.
We are confident that CLLS can beimplemented in a simple and efficient manner.First experiments which are based on high-levelconcurrent constraint programming have shownpromising results.3585 Conc lus ionIn this paper, we presented CLLS, a first-orderlanguage for semantic underspecification.
Itrepresents ambiguities in simple underspecifiedstructures that are transparent and suitable forprocessing.
The application of CLLS to somedifficult cases of ambiguity has shown that it iswell suited for the task of representing ambigu-ous expressions in terms of underspecification.AcknowledgementsThis work was supported by the SFB 378(project CHORUS) at the Universit~t des Saar-landes.
The authors wish to thank ManfredPinkal, Gert Smolka, the commentators andparticipants at the Bad Teinach workshop onunderspecification, and our anonymous review-ers.Re ferencesHiyan Alshawi.
1990.
Resolving quasi logicalform.
Computational Linguistics, 16:133-144.R.
Backofen, J. Rogers, and K. Vijay-Shanker.1995.
A first-order axiomatization of the theoryof finite trees.
J.
Logic, Language, and Informa-tion, 4:5-39.Johan Bos.
1996.
Predicate logic unplugged.
InProceedings lOth Amsterdam Colloquium, pages133-143.Ann Copestake, Dan Flickinger, and IvanSag.
1997.
Minimal Recursion Seman-tics.
An Introduction.
Manuscript, avail-able at ftp ://csli-ftp.
stanford, edu/linguist ic s/sag/mrs, ps.
gz.Richard Crouch.
1995.
Ellipsis and quantifica-tion: A substitutional pproach.
In ProceedingsEACL'95, pages 229-236, Dublin.Paul Hirschbiihler.
1982.
VP deletion andacross the board quantifier scope.
In J. Puste-jovsky and P. Sells, editors, NELS 12, Univ.
ofMassachusetts.Jerry R Hobbs and Andrew Kehler.
1997.
Atheory of parallelism and the case of VP-ellipsis.In Proceedings A CL '97, pages 394-401, Madrid.J.R.
Hobbs and S. Shieber.
1987.
An algo-rithm for generating quantifier scoping.
Com-putational Linguistics, 13:47-63.Andrew Kehler.
1993.
A discourse copying al-gorithm for ellipsis and anaphora resolution.
InProceedings of EA CL.Andrew Kehler.
1995.
Interpreting CohesiveForms in the Context of Discourse Inference.Ph.D.
thesis, Harvard University.M.
Marcus, D. Hindle, and M. Fleck.
1983.
D-theory: Talking about talking about trees.
InProceedings of the 21st ACL, pages 129-136.Robert May.
1977.
The Grammar of Quantifi-cation.
Doctoral dissertation, MIT, CambridgeMass.Joachim Niehren and Alexander Keller.
1998.Dominance Constraints in Context Unification,January.
http: / /w~w, ps.
un?- sb.
de/Papers /abst ract  s/Dominance, html.J.
Niehren, M. Pinkal, and P. Ruhrberg.
1997a.On equality up-to constraints over finite trees,context unification, and one-step rewriting.In Proceedings 14th CADE.
Springer-Verlag,Townsville.J.
Niehren, M. Pinkal, and P. Ruhrberg.
1997b.A uniform approach to underspecification a dparallelism.
In Proceedings A CL '97, pages 410-417, Madrid.Manfred Pinkal.
1996.
Radical underspecifica-tion.
In Proceed.
lOth Amsterdam Colloquium,pages 587-606.Uwe Reyle.
1993.
Dealing with ambiguitiesby underspecification: construction, represen-tation, and deduction.
Journal of Semantics,10:123-179.Uwe Reyle.
1995.
Co-indexing labelled DRSsto represent and reason with ambiguities.
InS.
Peters and K. van Deemter, editors, SemanticAmbiguity and Underspecification.
CSLI Publi-cations, Stanford.J.
Rogers and K. Vijay-Shanker.
1994.
Extract-ing trees from their descriptions: an applicationto tree-adjoining grammars.
Computational In-telligence, 10:401-421.Stuart Shieber, Fernando Pereira, and MaryDalrymple.
1996.
Interaction of scope and el-lipsis.
Linguistics and Philosophy, 19:527-552.Kees van Deemter and Stanley Peters.
1996.Semantic Ambiguity and Underspecification.CSLI, Stanford.K.
Vijay-Shanker.
1992.
Using description oftrees in tree adjoining grammar framework.Computational Linguistics, 18.Feiyu Xu.
1998.
Underspecified representa-tion and resolution of ellipsis.
Master's thesis,Universit~it des Saarlandes.
h t tp  ://www.
col?.uni- sb.
de/'feiyu/thesis, html.359
