Proceedings of the ACL-IJCNLP 2009 Student Research Workshop, pages 36?44,Suntec, Singapore, 4 August 2009.c?2009 ACL and AFNLPA System for Semantic Analysis of Chemical Compound NamesHenriette EngelkenEML Research gGmbHSchloss-Wolfsbrunnenweg 3369118 Heidelberg, Germany;Institute for Natural Language ProcessingUniversity of StuttgartAzenbergstr.
1270174 Stuttgart, Germanyengelken@eml-research.deAbstractMapping and classification of chemicalcompound names are important aspects ofthe tasks of BioNLP.
This paper introducesthe architecture of a system for the syntac-tic and semantic analysis of such names.Our system aims at yielding both the de-noted chemical structure and a classifica-tion of a given name.
We employ a novelapproach to the task which promises anelegant and efficient way of solving theproblem.
The proposed system differs sig-nificantly from existing systems, in that itis also able to deal with underspecifyingnames and class names.1 IntroductionBioNLP is the branch of computational linguisticsdeveloping tools and algorithms tailored to the lifesciences domain.
Scientific and patent literaturein this domain are growing at an enormous pace.This results in a valuable resource for researchers,but at the same time it poses the problem that it canhardly be processed manually by humans.
Thus, amajor goal of BioNLP is to automatically supporthumans by means of research in the area of infor-mation retrieval, data mining and information ex-traction.
Term identification is of great importancein these tasks.
Krauthammer and Nenadic (2004)divide the identification task into the subtasks ofterm recognition (marking the interesting wordsin a text), term classification (classifying them ac-cording to a taxonomy or an ontology) and termmapping1(identifying a term with respect to a ref-erent data source).1Term mapping is also called term grounding, amongstothers by Kim and Park (2004).Chemical compound names, i. e. names ofmolecules, are terms which prominently occur inscientific publications, patents and in biochemi-cal databases.
Any chemical compound can beunambiguously denoted by its molecular struc-ture, either graphically or by certain representa-tion standards.
Established representation formatsare SMILES strings (Simplified Molecular InputLine Entry System (Weininger, 1988)) and In-ChIs2.
For example, a SMILES string such asCC(OH)CCC unambiguously describes a chain offive carbon (C) atoms connected by single bondshaving an oxygen (O) and a hydrogen (H) atomconnected to the second carbon atom by anothersingle bond (Figure 1).C C CC COHFigure 1: SMILES = CC(OH)CCC,Name = pentan-2-olHowever, for communication purposes, e. g. inscientific publications and even in databases, it iscommon to use names for chemical compoundsinstead of a structural representation.
Contrary tothe structural representations, these names are nei-ther always unique nor unambiguous.
Biochem-ical terminology is a subset of natural languagewhich appears to be highly regulated and system-atic.
The International Union of Pure and AppliedChemistry (IUPAC) (1979; 1993) has developed anomenclature for chemical compounds.
It spec-ifies how to name a molecule systematically, as2Cf.
http://www.iupac.org/inchi/ (accessed May 17,2009).36well as by use of certain trivial names.The morphemes constituting a name determinethe chemical structure it denotes by specifyingthe type and number of the present atoms andbonds.
Morphemes also interact with each otheron this structural level.
Typically, morphemes de-scribe the atoms and bonds by introducing actionsconcerning so-called functional groups.
About50 different functional groups can be identifiedto be the most common ones in organic chem-istry.3Functional groups are certain groups ofatoms which determine the characteristic proper-ties of a molecule, especially its chemical reac-tions.
Hence, the presence or absence of certainfunctional groups plays a crucial role in classifi-cation of chemical compounds.
For example, hy-droxy, used as a prefix of a name, specifies thepresence of an OH-group (consisting of an oxygenatom and a hydrogen atom).
A molecular struc-ture containing an OH-group can be classified tobe an alcohol.
The morpheme dehydroxy in con-trast causes deletion of such an OH-group.
Thus,it presupposes the existence of some OH-group,which consequently needs to be introduced by an-other morpheme of the given name.
In case thereis no additional OH-group left in this molecule af-ter deletion, it does not belong to the class alcohol.Apart from addition and deletion, another frequentoperation on functional groups, specified by thename?s morphemes, is substitution.
In this case, apresupposed functional group is replaced by a dif-ferent functional group.
Again, this may changethe classes this chemical compound belongs to.Despite the IUPAC nomenclature, name varia-tions are still in use.
On the one hand this is dueto competing rules in different editions of the IU-PAC nomenclature and on the other hand to theactual usage by chemists who can hardly know ev-ery single nomenclature rule.
Thus, there can be anumber of different names and name types for onechemical compound, namely several systematic,semi-systematic, trivial and trade names.
For ex-ample, pentan-2-ol is the recommended name forthe compound in Figure 1, but the same compoundcan be called 2-pentanol or 2-hydroxypentane aswell.Besides synonymy, names allow the omissionof specific information about the structure of thecompound they denote.
This results in not only3Cf.
(Ertl, 2003) and Wikipedia, Functional group,http://en.wikipedia.org/wiki/Functional group (accessedMay 17, 2009).having a single compound as their reference but awhole set of compounds.
Class names like alcoholor alkene are obvious cases.
So-called underspeci-fying or underspecified4names (Reyle, 2006) likepentanol, butene or 3-chloropropenylidyne alsolack some structural information necessary to fullyspecify one compound, even though except forthis, their names are built according to system-atic naming rules.
Pentanol, for instance, is miss-ing the locant number and could hence stand forpentan-1-ol, pentan-2-ol, as well as pentan-3-ol.We distinguish underspecification from ambiguity,in that underspecifying names do not need to be re-solved but denote a set of compounds, analogousto class names.The particularities of chemical compoundnames mentioned above, namely synonymy, classnames, underspecifying names and interaction be-tween morpheme?s meanings, complicate auto-matic classification and mapping of the names.To achieve mapping of synonymous chemicalcompound names, name normalization is a possi-ble approach.
Rules can be set up to transformsyntactic as well as morphological variations ofnames into a normalized name form.
Basic trans-formations can be achieved via pattern match-ing (regular expressions) while for more com-plex transformations a linguistic parser, yielding asyntactic analysis, would be needed.
For exam-ple, the names glyceraldehyde-3-phosphate and3-phospho-Glyceraldehyde could both be normal-ized to the form 3-phosphoglyceraldehyde by suchrules since the prefix phospho is synonymous withthe suffix phosphate.
This way, a synonym rela-tion can be established between any two nameswhich resulted in the same normalized name form.By using this method together with large referencedatabases5providing many synonymous namesfor their entries, the task of name mapping can besuccessfully solved in many cases.However, there are limits to this string based ap-proach.
First, it relies on the quality of the refer-ent data source and the quantity of synonyms pro-vided by it.
Currently available databases whichcould be used as a reference lack either qualityor quantity.
But whether a molecular structurefor a term can be determined, or a term classi-4Hereafter we will call these names underspecifyingnames because we consider them to underspecify a chemicalstructure rather than being underspecified.5E.
g. PubChem: http://pubchem.ncbi.nlm.nih.gov/ (ac-cessed May 17, 2009).37fication can be achieved, depends only on thisreferent data source.
Second, it is hardly possi-ble to include every morphosyntactic name varia-tion in the set of transformation rules.
2-hydroxy-3-oxopropyl dihydrogen phosphate, for example,is the IUPAC name recommended for the chemi-cal compound glyceraldehyde-3-phosphate, men-tioned above.
Obviously, a synonym relation cannot be discovered by morphosyntactic name trans-formations in this case.
Finally, this method is notable to deal with class names or underspecifyingnames.These observations result in the need to take themeaning of a name?s morphemes, i. e. the chem-ical structure, into account as well.
A number ofsystems for name-to-structure conversion are be-ing developed.
The best known commercial sys-tems are Name=Struct6, ACD/Name7and Lexi-chem8.
Being commercial, detailed documenta-tion about their methods and evaluation results isnot available.
Academic approaches are OPSIN(Corbett and Murray-Rust, 2006) and ChemNom-Parse9.
The greatest shortcoming of all these ap-proaches is that they are not able to deal with un-derspecifying names.
Instead, they either guessthe missing information, in order to determine onespecific structure for a given name, or simply fail.But for really underspecifying names and classnames, to the best of our knowledge no chemi-cal representation format, like a SMILES string,is provided.
In addition, these approaches do notyield any classification of the processed names, re-gardless of whether these are underspecifying ornot.To overcome these limitations, CHEMorph(Kremer et al, 2006) has been developed.
It con-tains a morphological parser, built according tothe IUPAC nomenclature rules.
The parser yieldsa syntactic analysis of a given name and alsoprovides a semantic representation.
This seman-tic representation can be used as a basis for fur-ther processing, namely for structure generationor classification.
In the CHEMorph project, ruleshave been set up to achieve these two tasks, butthere are limits in the number and correctness of6Cf.
http://www.cambridgesoft.com/databases/details/?db=16(accessed May 17, 2009).7Cf.
http://www.acdlabs.com/products/name lab/rename/batch.html (accessed May 17, 2009).8Cf.
http://demo.eyesopen.com/products/toolkits/lexichem-tk ogham-tk.html (accessed May 17, 2009).9Cf.
http://chemnomparse.sourceforge.net/ (accessedMay 17, 2009).structures and classes retrieved.
These limits arepartly due to the lack of a comprehensive valenceand numbering model for the chemical structures.Also, classification should be based on the struc-tural level rather than on the semantic represen-tation, to ensure that not only the numbering butalso default knowledge about chemical structuresis included correctly.The objectives of our own name-to-structuresystem are the following: Naturally, it should yielda chemical compound structure, in some represen-tation format, as well as a classification for a givenname.
In case the name does not fully specifyone compound, but refers to a set of structures,the system should still allow for structure compar-ison (mapping) and classification.
Several defaultrules about the names and the chemical structureshave to be taken into account.
By including de-fault knowledge, a structure can be specified fur-ther even if the name itself has left it underspec-ified.
Similarly, a comprehensive way of dealingwith valences of atoms has to be included, sincethe valences restrict the way a chemical structurecan be composed.Our approach to achieve these goals is to useconstraint logic programming (CLP).
CLP overgraph domains is ideal for modeling each name-to-structure task as a so-called constraint satisfac-tion problem (CSP) and thereby accomplish map-ping and classification.
We will describe our sys-tem, CLP(name2structure), in more detail in thefollowing section.In this introduction we described the particular-ities of biochemical terminology.
Related work inthe area of processing these terms was overviewedand we gave the motivation for our own approach.After presenting our system in Section 2 we willconclude this paper with Section 3, indicating di-rections for future research.2 Our ApproachFollowing Reyle (2006), we observed that anychemical compound name can be seen as a de-scription of a chemical structure ?
in other wordsit contains constraints on how the structure iscomposed.
Even if a partial name or a classname does not specify the structure completelybut leaves a certain part underspecified, therewill at least be some constraints about the struc-ture.
On account of this, our proposed system ?CLP(name2structure) ?
employs constraint logic38programming (CLP) to automatically model so-called constraint satisfaction problems (CSPs) ac-cording to given names.
Such a CSP captures aname?s meaning in that it represents the problemof finding the chemical structure(s) denoted by thename.
The solutions to a CSP are determined bya constraint solver.
It will find all the structureswhich satisfy every constraint given by the name.In the case of a fully specified chemical structure,the solution is exactly one structure.
This struc-ture is then mapped and classified.
For underspec-ified structures or class names, we distinguish twomethods: Either all the structures can be enumer-ated or the CSP itself can be used for mapping andclassification.Figure 2 shows an overview of the system?s ar-chitecture.
Its component details will be describedin the following subsections.2.1 Parsing and Semantic RepresentationWe decided to use the CHEMorph parser whichis implemented in Prolog.
It provides a morpho-semantic grammar which was built accordingto IUPAC nomenclature rules.
The lexicon ofthis grammar contains the morphemes which canconstitute systematic chemical compound names.Also, the lexicon contains a number of trivial andclass names.
In addition to a syntactic analy-sis, the CHEMorph parser also yields a seman-tic representation of the input name.
This repre-sentation is a term which describes the meaningof the given chemical name in a kind of functor-arguments logic.10Example (1), (2) and (3) eachshow a compound name and its semantic represen-tation generated by CHEMorph:(1) compound name: pentan-2,3-diolsemantic representation: compd(ane(5*?C?
),pref([]), suff([2*[2, 3]-ol]))(2) compound name: 2,3-dihydroxy-pentanesemantic representation: compd(ane(5*?C?
),pref([2*[2, 3]-hydroxy]), suff([]))(3) compound name: propyn-1-iminesemantic representation: compd(yne(??*[??
], ane(3*?C?
)), pref([]), suff([??
*[1]-imine]))The general compd functor of each semanticrepresentation has three arguments, namely the10Kremer et al (2006) define the language of the semanticrepresentation in Extended Backus-Naur Form.parent, prefix and suffix representation.
The parentargument represents the basic molecular structure,denoted by the parent term of the name.
In Exam-ple (1) and (2), the parent structure consists of fivecarbon (C) atoms.
This semantic information isencoded with the morpheme pent in CHEMorph?slexicon.
The parent structure is modified by thefunctor ane, which denotes single bond connec-tions.
Prefix and suffix operators, if present, spec-ify further modifications of the basic parent struc-ture.
In the case of underspecifying names, as inexample (3), the missing pieces of information arerepresented as ?
?.This way, the semantic representation providesall the information about the chemical structurethat is given by the name.
Thus, it is an idealbasis for further processing.
The next section ex-plains how our system models constraint satisfac-tion problems on the basis of CHEMorph?s seman-tic representations.2.2 CSP ModelingA chemical compound structure can be describedas a labeled graph, where the vertices are la-beled as atoms and the edges are labeled as bonds.Hence, a chemical compound name can be seen asdescribing such a graph in that it gives constraintswhich the graph has to satisfy.
In other words,it picks out some specific graph(s) out of the un-limited number of possible graphs in the universeby constraining the possibilities.
This observa-tion serves us as a basis for modeling the name-to-structure task as a constraint satisfaction problem(CSP).A CSP represents a problem as a collection ofconstraints over a collection of variables.
Each ofthe variables has a domain, which is the set of pos-sible values the variable can take.
For the reasonsnamed above, we are working with graph variablesand graph domains.
The number of chemical com-pounds, i. e. graphs, could possibly be infinite butwe decided it was reasonable and safe to use fi-nite domains.
We hence limit the number of pos-sible atoms and bonds for each compound in someway, e. g. on 500 vertices and the correspondingedges or another number estimated according tothe semantic representation of the name being pro-cessed.We implement the CSP in ECLiPSe11, an open-source constraint logic programming (CLP) sys-11Cf.
http://eclipse-clp.org/ (accessed May 17, 2009).39nameclassesmatchesSMILESgraphsolution(s)CSPsemanticrepresen-tationconstraintsolverSMILESgenerationCSPmodellingCHEMorphmappingclassifi-cationFigure 2: system architecture of CLP(name2structure)tem, which contains a high-level modeling lan-guage, as well as several constraint solver librariesand interfaces for third-party solvers.To model a CSP for a given input name, severalsteps have to be taken.
First, the semantic repre-sentation term provided by CHEMorph has to beparsed.
According to its functors and their argu-ments, the respective constraints have to be called.For this, we are developing a comprehensive set offunctions which call the constraints with the cor-rect parameters for the given input name.
In thesefunctions, it is determined which constraints overthe graph variables a specific functor and argumentof the semantic representation is imposing.
Thus,in the form of constraints, the functions containthe actions concerning specific functional groupsof the denoted molecule, which were describedby the name?s morphemes.
As mentioned in Sec-tion 1, these actions include addition, deletion andsubstitution of certain groups of atoms.In any case, default rules have to be includedwhile modeling the CSP.
Default rules provideconstraints about the chemical structures whichare not mentioned by any morpheme of the name.For our system they are collected from IUPACrules as well as from expert knowledge.
For ex-ample, H-saturation is a default which applies toevery chemical compound.
This means that ev-ery atom of a structure, whose valences are not alloccupied by other atoms, has as many H-atoms at-tached to it as there were free valences.
This is oneof the reasons why the valences of all the differenttypes of atoms need to be taken into account.
Wedecided to include them as axioms for our mod-els.
Knowledge about valences also proves usefulfor the resolution of underspecification in the caseof partial names.
Consider a name like propyn-1-imine (cf.
example (3) in Section 2.1) where itis not specified where the triple bond (denoted byyn) is located.
However, there are only three C-atoms (introduced by prop) to consider, the firstof which is connected to an N-atom with a dou-ble bond (introduced by 1-imine).
The valence ax-ioms included in our CSPs determine that C-atomsalways have a valence of 4, so the first C-atomhas only two free valences left until now, sincethe =N occupies two of them.
Consequently, therecannot be a triple bond connected to the same C-atom, as this would use three valences.
Hence,the only possibility left is that the triple bond mustbe located between the second and third C-atom.With the given constraints and axioms, the sys-40tem is thus able to infer the fully specified com-pound structure of what would correctly have tobe named prop-2-yn-1-imine (Figure 3).CH N H HCCFigure 3: prop-2-yn-1-imineAfter modeling a CSP according to the semanticrepresenation of the input name, the next step inprocessing is to run a constraint solver.
This willbe described in the following section.2.3 Constraint SolverA constraint solver is a library of tests and oper-ations on constraints.
Its purpose is to decide forevery conjunction of constraints whether there isa model, i. e. a variable assignment, that satis-fies these constraints.
This is achieved by consis-tency checking as well as search techniques, tak-ing the respective variable domains, i. e. the pos-sible values, into account.
Besides just decidingwhether there is a model for a given CSP, a con-straint solver is also able to yield the successfulvariable assignment(s).In CLP(name2structure) we use GRASPER12(Viegas and Azevedo, 2007), a graph constraintsolver based on set constraints.
GRASPER en-ables us to model CSPs using graph variables.
InGRASPER, a graph is defined by its set of ver-tices and its set of edges.
Therefore, the domain ofa graph consists of a set of possible vertices, in ourcase for the atoms, and possible edges, in our casefor the bonds.
The constraints can then narrowthese two sets in several ways.
For example, cer-tain vertices can be defined to be included as wellas the cardinality of a set can be constrained.
Also,subgraphs can be defined independently which arethen constrained to be part of the final graph solu-tion.The constraint solver finds one graph solutionfor graphs which are fully specified by the con-straints our system models according to a name.For underspecified graphs, for which the con-straints are gathered from underspecifying or classnames, the constraint solver could find and enu-12GRASPER is distributed with recent builds of theECLiPSe CLP system.merate all possible graph solutions if this is de-sired.
This outcome would be the set of all chem-ical graphs which satisfy the constraints knownso far.
For example, chlorohexane would lead tothe set of graphs representing 1-chlorohexane, 2-chlorohexane and 3-chlorohexane.In general, a chemical name-to-structure systemaims at providing the chemical structures in a stan-dard representation format, rather than in a graphnotation.
In our system, the SMILES generationcomponent carries out this step.2.4 Generation of a StructuralRepresentation FormatOnce a graph is derived from the input nameas a solution to its CSP, it specifies the chem-ical structure completely.
It contains the exis-tent vertices and the edges between them, togetherwith labels indicating their respective types andother information like the numbering of atoms.Thus, no additional information has to be con-sidered to generate a chemical representation for-mat from the graph.
We focus on generatingSMILES strings, rather than some other format,because SMILES themselves use the concept ofa graph for representing the molecular structures(Weininger, 1988).
For example, the graph so-lution determined for pentan-2,3-diol as well asfor 2,3-dihydroxy-pentane (cf.
example (1) and (2)in Section 2.1) can be translated into the SMILESstring CC(OH)C(OH)CC.
In case more than onegraph is determined as solution to the CSP (for un-derspecifying and class names), all the respectiveSMILES strings could be generated.Once a SMILES string has successfully beengenerated, the name-to-structure task is fulfilledand the SMILES string can then be used for taskssuch as mapping, classification, picture generationand the like.
The next section will describe howclassification ?
one of our main objectives ?
is ac-complished in our approach.2.5 ClassificationOur system offers three different procedures forcompound classification.
Selection of the appro-priate procedure depends on the starting pointwhich could either be a SMILES string, a graph(or a set of graphs) or a CSP.First, a given SMILES string can be classifiedbased on the functional groups it is comprised of.We use the SMILES classification tool describedby Wittig et al (2004).41Second, a graph which is found as solution toa CSP representing an input name can be classi-fied according to a given set of class names.
Thiscould for example be some taxonomy which isfreely available (like ChEBI (Degtyarenko et al,2008)).
Those class names first have to be trans-formed into CSPs by use of the parsing and mod-eling modules of the CLP(name2structure) sys-tem.
Subsequently, the constraint solver checkswhether the graph, or even a set of graphs in thecase of an underspecified compound, is a solu-tion to a CSP representing one of the given classnames.
If the graph or the set of graphs are so-lutions to one of these CSPs, the compound be-longs to the class which provided that CSP.
Theconstraints for the class name alcohol for instance,include (amonst others) the presence of an OH-group.
Consequently, pentanol can be determinedto be an alcohol, since its three graph solutions,representing pentan-1-ol, pentan-2-ol and pentan-3-ol, each satisfy the constraints given by alcohol.Third, for some underspecifying names and forclass names, it would not be reasonable to gener-ate and classify all the graph solutions or all theSMILES strings ?
it could simply be too many oreven infinitely many.
That would slow down per-formance significantly.
Therefore, the system alsoaims at classifying CSPs themselves, by compar-ing them directly.
If the constraints of CSP-1 are asubset of the constraints of CSP-2, the name whichprovided CSP-2 is classified to be a hyponym ofthe more general name which provided CSP-1.Besides classification, our system aims at map-ping chemical compounds.
The last module of oursystem therefore provides algorithms to fulfill thistask.2.6 MappingMapping is needed to fulfill the identification taskand to resolve coreference of synonyms.
Given areferent data source of chemical compounds, anidentity relation should be established if the cur-rently processed compound can successfully bemapped to one of the entries.
Again, the proceduredepends on whether there is a SMILES string, a setof graph solutions or a CSP to be mapped.First, matching a SMILES string can be doneby simple string comparison.
An identity rela-tion between any two compounds holds if theirunique SMILES strings (Weininger et al, 1989)match exactly.
For example, this is the case forpentan-2,3-diol and 2,3-dihydroxy-pentane sincethey both yield the same SMILES string (cf.
Sec-tions 2.1 and 2.4).Second, if an underspecifying input name leadsto an enumerable number of graph solutions, theset of all the corresponding SMILES strings can begenerated.
Subsequently, it can be compared to thesets of SMILES strings having been determinedfor the underspecifying names of the referent datasource.
If it equals one of the reference SMILESsets, the input name and the respective referencename are successfully identified and thus detectedto be synonyms.Third, mapping of CSPs becomes necessaryfor class names and underspecifying names withtoo many graph solutions to enumerate.
Thisworks analogously to CSP classification describedin Section 2.5 above.
The only difference is thata synonym relation between two names, leadingto CSP-1 and CSP-2 respectively, is established ifthe constraints of CSP-1 equal the constraints ofCSP-2.3 Conclusions and Future WorkIn this paper we presented the architecture ofCLP(name2structure), a system for semanticand syntactic processing of chemical compoundnames.
In the introductory section, we describedthe characteristic phenomena of biochemical ter-minology which challenge any such system.
Ourapproach is composed of several modules, carry-ing out the defined tasks of structure generation,classification and mapping.
By employing a mor-phological parser and constraint logic program-ming over graph variables, our approach is ableto handle the particularities of the chemical com-pound names.However, the proposed systemCLP(name2structure) still requires work onseveral of its components.
The central taskto be completed is to enrich the repository offunctions which call the appropriate constraintscorresponding to CHEMorph?s semantic repre-sentation output.
This is not a trivial task since itrequires to formalize the IUPAC rules of syntaxand semantics of the relevant morphemes.
Thisformalization needs to result in an abstract de-scription of the respective constraints over graphvariables.
Thereby, phenomena like interaction ofmorphemes?
meanings play an important role.Before we can accomplish the implementation42of the complete system according to the proposedarchitecture, we need to answer a couple of re-maining open questions.
For example, the exactmethod on how to compare two CSPs has to beelaborated.
Gennari (2002) describes algorithmsfor normalizing CSPs to enable subsequent equiv-alence checking.
However, these methods can notbe applied to our case as they stand but will haveto be substantially adapted.
Another problem weneed to deal with is that labeled graphs, which arerequired by our system, are not directly supportedby the constraint solver GRASPER.
Therefore weare currently working on a way to handle the labelsindirectly.Another important task we plan tocarry out in the future is the evaluation ofCLP(name2structure).
Since no gold standardfor name-to-structure generation or classificationis available yet, such a gold standard or datasetneeds to be created first.
We propose to use assuch a dataset a subset of the entries of an existingcurated database, such as ChEBI, which containsnames, chemical structures and a classificationfor currently 17842 compounds.
Unless the mor-phological parser and the repository of constraintfunctions is further enriched, we suppose oursystem will yield a high precision rather than ahigh coverage.
To evaluate underspecificationhandling of our system, underspecifying namesfrom general reaction descriptions13could becollected.
For this kind of evaluation, determiningthe correctness of the analysis would require thehelp of domain experts.AcknowledgmentsThe author is funded by the Klaus Tschira Foun-dation gGmbH, Heidelberg, Germany.
Thanks toUwe Reyle and Fritz Hamm from the Universityof Stuttgart, Germany, for contributing to the mainideas and for in-depth discussions.
Thanks to theScientific Databases and Visualization group ofEML Research, Heidelberg, Germany, for theirsupport.
Thanks to Ruben Viegas for commentson graph constraint solving.
Thanks to BerenikeLitz and the anonymous reviewers for commentson this paper.13As listet by the Enzyme Nomenclature Recommen-dations: http://www.chem.qmul.ac.uk/iubmb/enzyme/ (ac-cessed May 17, 2009).ReferencesIUPAC.
Commission on the Nomenclature of OrganicChemistry.
1993.
A Guide to IUPAC Nomenclatureof Organic Compounds (Recommendations 1993).Blackwell Scientific Publications, Oxford.Peter Corbett and Peter Murray-Rust.
2006.
High-Throughput Identification of Chemistry in Life Sci-ence Texts.
CompLife, pages 107?118.Kirill Degtyarenko, Paula de Matos, Marcus Ennis,Janna Hastings, Martin Zbinden, Alan McNaught,Rafael Alc?antara, Michael Darsow, Micka?el Guedj,and Michael Ashburner.
2008.
ChEBI: a databaseand ontology for chemical entities of biologicalinterest.
Nucleic Acids Research, 36(Database-Issue):344?350.Peter Ertl.
2003.
Cheminformatics Analysis of Or-ganic Substituents: Identification of the Most Com-mon Substituents, Calculation of Substituent Prop-erties, and Automatic Identification of Drug-likeBioisosteric Groups.
Journal of Chemical Informa-tion and Computer Science, 43:374?380.Rosella Gennari.
2002.
Mapping Inferences.Constraint Propagation and Diamond Satisfaction.Ph.D.
thesis, Universiteit van Amsterdam.Jung-jae Kim and Jong C. Park.
2004.
BioAR:Anaphora Resolution for Relating Protein Names toProteome Database Entries.
In Proceedings of theReference Resolution and its Applications Workshopin Conjunction with ACL 2004, pages 79?86.Michael Krauthammer and Goran Nenadic.
2004.Term Identification in the Biomedical Literature.Journal of Biomedical Informatics, 37(6):512?526.Gerhard Kremer, Stefanie Anstein, and Uwe Reyle.2006.
Analysing and Classifying Names of Chemi-cal Compounds with CHEMorph.
In Sophia Anani-adou and Juliane Fluck, editors, Proceedings of theSecond International Symposium on Semantic Min-ing in Biomedicine, Friedrich-Schiller-Universit?atJena, Germany, 2006, pages 37?43.IUPAC.
Commission on the Nomenclature of Or-ganic Chemistry.
1979.
Nomenclature of OrganicChemistry, Sections A, B, C, D, E, F and H. Perga-mon Press, Oxford.Uwe Reyle.
2006.
Understanding Chemical Terminol-ogy.
Terminology, 12(1):111?136.Ruben Viegas and Francisco Azevedo.
2007.GRASPER: A Framework for Graph CSPs.
InJimmy Lee and Peter Stuckey, editors, Proceedingsof the Sixth International Workshop on ConstraintModelling and Reformulation (ModRef?07), Provi-dence, Rhode Island, USA.David Weininger, Arthur Weininger, and Joseph L.Weininger.
1989.
SMILES 2.
Algorithm for43Generation of Unique SMILES Notation.
Jour-nal of Chemical Information and Computer Science,29(2):97?101.David Weininger.
1988.
SMILES, a chemical lan-guage and information system.
1.
Introduction tomethodology and encoding rules.
Journal of Chem-ical Information and Computer Sciences, 28(1):31?36.Ulrike Wittig, Andreas Weidemann, Renate Kania,Christian Peiss, and Isabel Rojas.
2004.
Classifi-cation of chemical compounds to support complexqueries in a pathway database.
Comparative andFunctional Genomics, 5:156?162.44
