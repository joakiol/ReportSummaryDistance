COLING 82, Y. Horeclc) (ed.
)North.Holland Publishing Company?
Academia, 1982ON A SEMANTIC MODEL FOR MULTI-LINGUAL PARAPHRASINGKazunori MurakiC & C Systems Res., Labs., Nippon Electric Co., Ltd.l-I Miyazaki, Yon-chome) Takatsu-kuKawasaki 213, 3APANThe aim of the present paper is to formalize semantic-directed lexical selection byvirtue of frame-based semantic inference capability built in the CFL representationlanguage.
The DG model of paraphrasing semantic descriptions can explicate logical processof knowledge-based sentence generation excluding any particular procedures for lexicalselection or syntax structure generation.
In addition this paper emphasises that this modelis basically not dependent on target languages.1.
IntroductionThis paper introduces a newly developed semantic-directed paraphrasing model, calledDG (Declarative Generation) Model and also reports preliminary linguistic generationexperiments done on system 3ASS (Japanese Synthesis System) developed under the DGframework.While there already have been a few generation systems, such as BABEI~3(N. M.Goldman), MUMBLE~(D. D. McDonald) etc.
which intend to resolve lexical selection usingspecial procedures or descrimination networks, the DG model can paraphrase semanticinformation written in the CFL frame language into target sentences using its built-insemantic inference capability.
Conceptually, the model is divided into two logical phases,MU, which is the syntax generation phase, including lexicaI selection and syntax selection,and TLG, surface structure generation phase, including transformation and morphologicalgeneration.
The model utilizes a semantic dictionary and a Iexical dictionary both writtenin CFL for lexical selection, in which the functional requirements are limited to thosesemantic inference capabilities found in CFL.
It is of great importance that thesecapabilities have already been used in the contextual understanding of languages.The main DG model characteristics are as follow.1) It presents a new way for semantic-directe~d lexical selection and syntax selection usingframe inference capability.
2) Because of the modularity of all knowledge required forparaphrasing, this model greatly reduces knowledge base management costs.
3) It isgenerally independent of target languages, since the contents written in CFL and the built-in inference capability are thoroughly independent of languages.
Accordingly, the DG logicfunctions are easily adaptable to the paraphrasing function for any natural languageunderstanding systems or semantic-directed mechanical translation systems.2.
DG generation model basisThe main purpose behind proposin~ the DG paraphrasing model lies in formally bridgingthe qualitative gap between interli~4"~t~nd surface structures.
The inputs are a sentencestyle indicator, a generation control, and a set of,instance semantic depictions.
In the firstphase MU, input semantic depictions are transformed into a syntax structure utilizing asemantic dictionary, a lexical dictionary and sjntax generation rules under the control ofthe sentence style indicator and the generation control.
In the second phase TLG, thesyntax structure is transformed into a sur~\[ace string structure by a series of surfacestructure generation rules.239\240 K. MURAKI~ Contextually Factored Frame representation Language : CFLCFL  is a f rame-based representation schema, with representation units called depic-t ions  correspond to both a dictionary entry and a semantic description.
It has embeddedsemantic-directed inference capabilities, which function to transform input semanticdescriptions'to a structure with morphological nd syntactic information.Depictions describe sentential  semantics based on Fillmore's case theory.
Figure Ishows the simplest examples of depictions.
Here in the examples, depictions are classifiedinto two categories~ schema in Figure la and instance in Figure lb.
A schema isdistinguished from an instance by the fact that all instance depictees (depiction names))except for distinct names, are postfixed by a distinct nun~ber.
From a pragmatic viewpoint,schema compose a semantic dictionary in the long-term memory, while instances describeconcrete vents and descriptions in the short- term memory.
(*TRA~;S)(DTYPE V CLASS)(INS D-(*TRANS 001)(*TRANS 002))(ako (a *LOCSTATECHANGE) with(ACTOR C (*PERSON))(TOPLACE C (*PLACE))(FROMPLAC~ C (*PLACE))(INSTR C (*VEHICLE) }) )( (*TRANS 001)(DTYPE V IND)(INS )(ako (a *TRANS) with(ACTOR _ V (*PETER ))(INSTR " V (*CAR 001))(TOPLACE C (*PLACE ) )(FROMPLACE C (*PLACE ))))a bFic\[.l Examples of semantic depictionsFig.la describes spacla~Ltransportation (~TRAN5) abstract where attribute descrip-tions are corresponding to case frame descriptions.
Filling up ACTOR and INSTR with~PETER and ~CAR .001, respectively, instantiates 9c~gma A and then produces the instanceFig.lb "Peter drives".In CFL) two kinds of inference functions forr~he basis for logico-semantic lexicalselection.Type 1.
An implication test function acting on a combination of either an attribute yalueand an attribute condition, or one attribute condition and another attribute condition.Type 2.
An association test function between depictions.Here, attribute condition is written by Boolean formula for semantic depictions.
Type 2function, which are realized by integrating Type I functions, can play a role in determiningwhether a semantic depiction is semantically identical to another or not.
In naturallanguage understanding) this faci l i ty is frequently used to determine referents.Functional Description : FDThe FD schema) which is an n-ary tree structure, is used to describe syntax structures,syntax generation rules) and surface structure generation rules.
Figure 7 shows a l ist-formrepresentation of a FD structure, where the root node is DISCOURSE.
The intermediatenodes in this framework are labeled with grammatical markers or case markers.
The mainmerit of this kind of tree structure is that any value in leaf or substructure can be identifiedby its distinct path from the root node.
Leaves are segregated into three kinds of values~string values, depictees and numerals.The following two sections exphcate the inherent mechanism along the line of thel inguistic paraphrasing process.3.
Syntax Generation - its knowledge and processin~The MU mechanism is formalized by iterative invocation of two primitive operations)Match and Unify.
The Match function adds morphological nd local syntact ic information tosemantic depictions using a lexical dictionary and a semantic dictionary.
After Matching)the Unify function is employed to modify and extend the given sentence style indicatorA SEMANTIC MODEL FOR MULTI-LINGUAL PARAPHRASING 241(called intermediate syntax structure), by applying syntax generation rules to the structureobtained by Match.
In the initial stage, Match is applied to the semantic depiction specifiedby a depictee in the FD sentence style indicator leaf (see Figure 4).Match operationLexlcal depictions, the lexical dictionary entries themselves, feature a S-prefixeddepictee, and play a primal role in the mapping of a semantic depiction into a morphologicaland syntactic structure.
The lexical depiction format is basically equal to that of asemantic depiction, with some extensions.
As shown in Figure 2, the attribute names in alexical depiction have such forms as SUB (=ACTOR), TOLOC (=TOPLACE), VEP, B=LEX etc.,which are divided into two categories: I. X (=Y), 2.
U=ZThe following must necessarily hold for a successful Match of lexical and semanticdepictions.i) Y must exist as an attribute name in a semantic depiction.if) X=Y (transformed in Match), and U=Z must be partial paths in a final syntax structure.Now, assume semantic depiction ~A (for example ~TRANS.001 in Fig.l) is given.
Theprocess f irst tries to find the lexical depiction SB (for example SDRIVE in Fig.2), one oLwhose ancestors has a depiction name (depictee) identical, except for their prefixes, to oneof the ancestors for the given semantic depiction.
(($DRIVE) (($DRIVE)(INS) (INS)(ako (a SLOCSTATECHANGE) with (ako (a SLOCSTATECHANGE) with(SUB (=ACTOR ) C (*PERSON)) (SUB (=ACTOR ) ?
(*PETER))(TOLOC (=TOPLACE ) C (~PLACE)) (TOLOC (=TOPLACE ) C (*PLACE))(FROMLOC(=FROMPLACE) C (~PLACE)) (FROMLOC(=FROMPLACE) C (*PLACE))(BY (=INSTR ) C (* CAR)) ( BY (=INSTR ) ?
(*CAR 001))(VERB=LEX M Drive) (VERB= LEX M Drive )(VERB=VOICE M Active) (VERB= VOICE M Active)(VERB=REFL M (drive drove driven)) (VERB= REFL M (drive drove driven))) ))F_j=q.2 A lexical depiction Fi9.3 A Match resultIf nosuch lexical depictions are found, MU will terminate.
If the depictions are found,the following steps will be taken.First, for each X~.
(=Y,i.)
attribute hal-he, the attribute value or condition for attributename Y4.
in the semantic depiction is tested to determine whether it implies the attributecondition of X 4.
(=Y?).
If Y 4, does not exist in the semantic depiction, or i f  the test fails,Match tries to find the next lexical depiction.Each Y i. value or condition is set as the X?
(=Y4.)
value or condition i f  and only i f  allX~.
(=Y4.)
attributes satisfy the above test, as well as the tests for all Y?
case markers inthe semantic depiction are completed.
Otherwise, Match continues to search for a suitablelexical depiction.Second, for attribute Y i in the semantic depiction, which is not tested by the above,Match adds newly MOD=Y4.
attribute with the value or condition of Y'~...Consequently, the result appears simultaneously into the selected iexical depiction.The lexical depiction $DRIVE in Fig.3 is an example of Match results, which comes from asemantic depiction *TRANS 00l in Fig.lb and a lexical depiction $ DRIVE in Fig.2.
Thus,the Match result has morphological information about DRIVE and local information aboutthe surface and semantic case structure induced by $ DRIVE.Unify OperationIn general) a depictee under a path in a sentence style indicator or intermediate syntaxstructure) must be transformed to one comforming to legitimate syntax structures.
A242 K. MURAKIsyntax structure generation rule determines such legitimate structures according to thecondition along the path.
Such permissable structures are plural, so Unify must select theone appropriate to the lexical depiction obtained by Match.Figure ~ shows a simple sentence style indicator which specifies that an instancedepictee *TRAN5.00I must be transformed to the syntax structure appropriate to the path< DISCOURSE=SEG=EVENT>.DISCOURSE = "CAT=D 1SEG=EVENT?
(* TRANS 001 jFig.4 A sentence style Indicator((EVENT=}--~ (((CAT=S) ((SUB=?)}
(DOB=?))
((IOB=?))((LOC=?))
(TIMEP=?))
({VERB=?)
) ) )a((IGR=ISR (- ICASE) =)-~(({CAT=PP))((CASE=) (((CAT=POSP)) ((LEX=ICASE))))((POB=) ( ((CAT=NP)) ((MOO=?))
((HEAD=?))
)((CAT=S) ((COMLEX=KOTO)) ((ACT=?))
) ) )bFiq.5 Examples of syntax Generation rulesThe FD syntax generation rule is shown in Figure 5a.
The rule specifies that aninstance semantic depictee just below the partial path < EVENT > is able to have the syntaxstructure specified by the right hand side of the rule.
Figure 5b is a slightly extended formalthough it has basically the same function as the former.
This includes variables !GR, !SRand \[CASE, each of which has a distinct domain.
For example, !GR (Grammatical Roles) canbind an element of a set { SUB) DOB) IOB etc .}
.
!SR (Semantic Roles) can bind that of\[ ACTOR, OB3ECT, INSTR etc. }
.
!CA5E has a domain of 3apanese postpositions { GA(surface CASE for SUB)) WO (surface CASE for OB3ECT etc.
~ .The FD syntax generation rule means that an instance depictee specified by a partialpath which is an instance of <IGR=ISR> can be transformed to the structure indicated bythe right hand side of the rule, as long as the depictee is prefixed by (-!CASE).
Such avariable !CASE, as on ~he right) is replaced by the value i f  the rule is successfully applied.Now, assume a lexical depictee A obtained by Match under a path < a= =a= .
.
.
.
.
a~> .Generally) generation rules {R;.~ exist with path .
\[ .
> specifications <aj .
.
.
.
.
an  ,1~ j~ n. Unify fails i f  any R~.
is not found.
Here, each R {.
candidate generation ruleis to be unified with depiction A in turn, starting from the rule with the longest pathspecification until a sound generation rule is found.
Successful Unify is defined as follows.Let the attribute name set for depiction A be B= \ [<b,  =b= .
.
.
.
.
b~> ~ , and the setfor all partial paths in R~.
rule be C= {<c I =c~ .
.
.
.
.
cx>} ?i) For each <b~ .
.
.
.
.
b j> , thereex ls tsa  <c~ =c 2 .... b~ .
.
.
.
.
b~EC , l -  k~.~ j .
Eachattribute value of ?b  I .
.
.
.
.
bj > is set to the value of extended path <c~ =c 2 =.... b t .
.
.
.
.
bj > (or equal to <c,  =c~ .
.
.
.
.
c x =b=,~ .
.
.
.
.
b i > ).ii) All attribute values in depiction A must be assigned to the appropriate paths.If an R rule is verified unsatisfiable, a new one is tried.
If no other candidate isfound, the generation process fails and terminates.Thus, given a sentence style indicator (or an intermediate syntax structure), Match isapplied to a semantic depictee and Unify to the lexlcal depiction resulting from Match.After this one primitive cyle, a new intermediate syntax structure is produced, which hasmorphological and syntactic information in greater detail than the previous one.
Applica-tion of these two primitive operations continues until instance semantic depictees disappearfrom intermediate syntax structure.A SEMANTIC MODEL FOR MULTI-LINGUAL PARAPHRASING 243t+.
Surface Structure Generation - its knowledge and processingThe TLG model for surface structure generati~ is defined on a set of pattern-directedproduction rules written in extended FD structures) each of which specifies a sourcestructure on the left hand side and target structure on the right.The transformations required for surface structure generation can be roughly classi-fied into two sub-classes.
One is for global transformations, such as voice-transformation,nominalization) adjectivation etc.
Another is mainly for morphological generation concern-ing tense) inflexion, gender etc..
In general, these two sub-classes have inherent applicationordering.
This holds not only between the above -two sub-classes, but also holds among themembers of the former.
To support flexible rule application controllability) the TLG modelis defined on an adaptive production system, in which rules are categorized and ruleapplication order is determined by tags of rules and categories.Figure 6 exemplifies a voice-transformation rule.
Any rule has a rule number, amatching pattern including variables) a Boolean formula, a pattern-program and a tag.Variables prefixed with $ or # in a FD matching pattern can bind a substructure or a path)respectively.
The Boolean formula is the LISP S-expression with these variables in amatching pattern) with a value T signifying that the rule application conditions have beensatisfied.
A pattern program is basically an FD structure with embedded functions such as(FUNC ENT ($Z)).
In this example9 FUN indicates that ENT is one place function with SZ asan argument.
The last part of any rule is a tag which is a pointer to subsequent targetcategories.Additionally) there are also tags in each category.
A rule tag will specify that thecontrol jump to the category specified by the tag) if the rule is applied.
Control goes to thenext rule in the same category if a tag is nil or the rule fails.
On the other hand) a categorytag will specify that control jump to the category specified if none of rules in the categorycan be applied.
If a control tag is nil and none of the rules in the category can be applied)control goes back to the caller.I s~x  / I suB=~y(No3) .I DOB=_$Y |.T e l  DOB=$X ?
( (CAT NOi)\]VERB- fVOICEF=A-P T~S31 IVERB- eVOICE=PASSIVE 1\ ]  / |voic  =ACTIVE II / /,.,o e,,,:b,L L~x =~z JJ l t. tPP=c~.c ~c~z)Fig,6 A voice-transformation rule5.
Sentence Style 5electionSentence style selection is a most difficult problem in linguistic generation.
In the DGmodel) input sentence style indicator) generation control and surface structure generationrules directly contribute to sentence style selection.Sentence style indicator roughly guides the style into which input depictions are par-aphrased by placing the instance semantic depictees in the FD structure values.
Valuesother than instance semantic depictees also determine how these depictees are paraphrasedby application of surface structure generation rules) because the values can influenceinvocation of these generation rules.
Consequently) sentence style selection must be"accomplished while satisfying the contextual requirement in paraphrasing.Generation controls have several kinds of information, which in reality can beconsulted by Boolean formulas) and embedded functions in surface" structure generationrules.
Accordingly, generation control) more precisely) surface structure generation rules,can play a great role in determining which sentence style will be selected.
The 3apaneseSynthesis System selects sentence styles) for example) polite, rude, abbreviated style etc.5uch indication is held in generation control, so rules appropriate to those destinations areeasily selected in TLG phase.6.
Experiments with 3A55 (Japanese Synthesis System)3A55 has been developed in LISP, in which all dictionaries and rules are stored in asecondary storage.
At present, knowledge which describes news regarding accident in244 K. MURAKI(DISC(>JSE =)( (CAT =)((D)( (SEG =)( (EVENT =)( ( (CAT =)((s)))( (VERB =)( ( (LEX M UBA))( (INFLT M GODAN))( (INFL M D-SHUSHI))))( (SUB =)((ACTOR)( ( (CAT =)((PP))  )( (CASE =)( ( (CAT =)((POSP)))( (LEX =)((GA)))  ))newspapers is composed of about 160semantic depictions and 130 lexicaldepictions, Rules are composed of #0syntax generation rules and 50 surfacestructure generation rules.
The latterare classified into 6 categories, whichare GLOBal,  CON3unctive, CORE,PHRASE,  LOCAL and MORPHological.In addition, seven kinds of embeddedfunction for surface structure generationrules are utilized, mainly for morpho-logical generation.In Figure 7, a portion of a simpleexample of a FD syntax structure ob-tained by the MU process of 3AS5generation system is given, and is trans-formed from the event wherein 34 SAINO TAKUSHI UNTENSHU GA KUROIKURAUN WO NUSUMU is described, us-ing an input description set.
It means 34year old taxi driver X steals a largeblack luxury car.
)Fig.7 A portion of a syntax structurefor an example sentence7.
ConclusionDG verif ication has been successfully accomplished through experiments using 3A55.The DG succeeded in constructing a knowledge-oriented as well as semantic-orientedparaphrasing model from semantic descriptions, free from syntactic and morphologicalinformation.
A very important factor is that such functions as inference capability for CFL,as well as the adaptive production system are not thoroughly differentiated from thecommon functions in the AI field, but are extended slightly.
These functions proposed inDG, are used in different forms, especially in the fields of natural language understandingresearch.
In this sense, the DG paraphrasing method has a great effect on future semantic-directed paraphrasing systems and multi-lingual translation systems.AcknowledgementThe author thanks research managers Dr. T. Mikami and Dr. K. Hakozaki for theirsupport for this research, and research leader Mr. T. Makino for fruit ful  discussions.References1 Goldman, N. M., Sentence paraphrasing from a Conceptual base, CACM.
2 18 (1975)96-166.2 McDonald, D., Preliminary Report on a program for generating natural Language,I3CAI# (1975) 401-005.3 Nagao, M. et.
al., On English generation for a 3apanese-English translation system,Technical Report on Natural language processing of Information Processing of 3apan25 (1981).4 Bobrow, D. G. et.
al., An overview of KRL, a knowledge representation language,Studies in Cognitive Science I 1 (1977) 3-46.5 5chank, R. C. and Abelson, R., Scripts, Plans, Goals, and Understanding (LawreneErlbaum Associates, Hillsdale, New 3ersey, 1977).6 Ramelhart, D. E. and Norman, D. E., Active Semantic Networks as a Model of HumanMemory, I3CAI3 (1973) 450-#57.
