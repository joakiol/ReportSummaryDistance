Coling 2010: Demonstration Volume, pages 5?8,Beijing, August 2010PyCWN: a Python Module for Chinese WordnetYueh-Cheng WuInstitute of LinguisticsAcademia Sinica, Taiwanwyc.juju@gmail.comShu-Kai HsiehNational Taiwan Normal University /Academia Sinica, Taiwanshukai@gmail.comAbstractThis presentation introduces a Python module (PyCWN) for accessing and processingChinese lexical resources.
In particular, our focus is put on the Chinese Wordnet (CWN) thathas been developed and released by CWN group at Academia Sinica.
PyCWN provides theaccess to Chinese Wordnet (sense and relation data) under the Python environment.
Thepresenation further demonstrates how this module applies to a variety of lexical processingtasks as well as the potentials for multilingual lexical processing.1         IntroductionIn the presentation, we demonstrate a useful python module for the processing of Chinese lexicalsemantic resources, viz Chinese Wordnet (CWN).
This tool is one of a series of computationalprocessing modules that we have been developing, for a variety of Chinese computational lexicalsemantic tasks, such as Word sense disambiguation (WSD), Word sense induction (WSI), Automaticrelations discovery, etc.Based on the OOP paradigm, this module enables a programmer to handle CWN synsets andlexical relations in a more efficient way.
Written in the python language, it can be run on a broadrange of platforms and with the advantages of being able to be imported into other large-scale freelyavailable NLP modules (e.g.
Natural Language Processing Toolkits (NLTK)) for advanced surveys.2         Python Modules for WordNet ProcessingInspired by psycholinguistic theories of human lexical memory, WordNet (Miller et al 1993) hasbeen considered to be an important lexical resource for both theoretical and computational linguistics.It is organized as a lexical network which centers on synsets (synonymous sets), and the lexicalsemantic relations (hyponymy, meronymy, etc) are intertwined with the synsets.The growing amount of studies and applications carried out on wordnets has led to the worldwideefforts in constructing wordnets of different languages, with the envisioned framework of GlobalWordnet Grid.
[1] To make good use of these wordnet data, an amount of browsers have beenproposed.
However, it is soon realized that WordNet browsers are not suitable for scaledcomputational experiments.
And ad-hoc processing scripts developed separately without anycollaboration and shared architecture did not ease the tasks in the research community.Later on, an open source python library called the Natural Language Toolkits (NLTK) (Bird et al2009) has been implemented and distributed.
NLTK is designed with many rationales in mind, suchas extensibility, modularity, etc.
In NLTK, a WordNetCorpusReader, which contains classes andmethods for retrieval of sense and relation data, and the calculation of semantic similarity, isdesigned for accessing Princeton wordnet or its variantsDespite the fact that these tremendous works do help much in accessing wordnet data, in applyingto Chinese Wordnet, we found that an extended re-implementation of the module is necessary due tothe particularity of the CWN architecture, which will be elaborated on later.3         PyCWN: Python Modules for Chinese Lexical Ontology53.1      Chinese WordnetThe construction of Chinese Wordnet developed by Academia Sinica follows two lines of thought: (i)multilingual wordnets bootstrapping approach (cf.
Sinica BOW[2]), and (ii) linguistically orientedanalysis from scratch (cf.
CWN[3]).
Both of them can be merged organically.
In this paper, we focusonly on the CWN part.Generally speaking, NLTK WordnetCorpusReader cannot be seamlessly applied to CWN withthe following reasons:z Distinction of Sense and Meaning Facet: CWN proposed that lexical polysemy can bedistinguished into two levels: senses and meaning facets (Ahrens et al 1998).
These two levelsof polysemies result in a special design for synset.z Labeling of Paronymy: CWN defines paronymy as the relation between any two lexical itemsbelonging to the same semantic classification.
(Huang et al 2007), and label the relation amongsenses instead of synsets.z Distinction of Synonyms and Chinese Written Variants: CWN regards synonyms and variantsdifferently.
Variants are the corresponding words/characters that have different written formsbut the same meaning and the identical pronunciation as the target word.
In PyCWN, thevariants are integrated into the synset of the target word.
No new category is created.z Homographic Variants: Homographic variants are the words with same graph but unrelatedmeanings.
CWN defines them as different lemmas.
For instance, ?
(lian2) has three lemmas.
InPyCWN, there is no Lemma class, but the lemma information is retained in the identifier of asynset/sense/meaning facet.3.2      Architecture of PyCWNFigure 1: Main structure of PyCWNClasses in PyCWN follow the main structure of the Chinese Wordnet.
Therefore, paronyms aredefined between two lexical items while other semantic relations are shared within the same synset.Every member within a synset is a sense or a meaning facet.
The Facet class has all the properties asSense class, and hence is not shown above.
The identifier form in CWN is word(reference_id), butfor the incorporation to other wordnets, the identifier form in PyCWN is adjusted to beword.pos.reference_id.3.3      DemoFor the reusability of the information extracted, all information is extracted as a string or a list.
Andbecause of the coding, Chinese words are not readable in lists.
In order to read the result, 'print' isneeded.
The following figure is an example of the Synset and the Sense class.
The Facet class has thesame properties as Sense class.6Figure 2: The illustrations of Class methods and Sense properties.3.4      Cross-linguistic Lexical Studies with NLTK Wordnet ModulesSince the synsets in CWN are already mapped to those in Princeton WordNet via lexical relations, itis easy to perform cross-linguistic lexical comparative studies given the fact that Princeton WordNetis also connected with other wordnets such as EuroWordnet.
For example, the following figure showsthat ?
(da2) has a hyponym -- ?
(dao4), and that the WordNet synset reach.01369399V is ahypernym(???)
of ?(da2).
Thus it is inferred that reach.01369399V should be a hypernym of ?
(dao4) as well.
And the information extracted has confirmed this point of view.7Figure 3: Mapping between CWN and Princeton WordNet3.5      AvailabilityThe demos will be available as both locally based and remotely accessible fromhttp://lope.eng.ntnu.edu.tw/pycwn/4         ConclusionIn this presentation, we have demonstrated a python module called PyCWN for the processing of thedata in Chinese Wordnet.
Now we are also working on the incorporation of NLTK, and extension ofthe module to a larger Chinese NLP framework, which includes word segmentation and the access ofhanzi data, the Gigaword corpus, and the bilingual ontology, etc.
We believe that the whole projectwill be an important infrastructure of Chinese NLP.ReferencesAhrens, K., Chang, L., Chen, K., and Huang, C., 1998, Meaning Representation and Meaning Instantiationfor Chinese Nominals.
Computational Linguistics and Chinese Language Processing, 3, 45-60.Bird, Steven, Ewan Klein and Edward Loper.
2009.
Natural Language Processing with Python.
O?Reilly.Huang, Chu-Ren, Shu-Kai Hsieh, Jia-Fei Hong, et al 2010.
Chinese Wordnet: Design, Implementation, andApplication of an Infrastructure for Cross-lingual Knowledge Processing.
Zhong Guo YuWen, 24(2).
[inChinese].Huang, Chu-Ren, I-Li Su, Pei-Yi Hsiao, and Xiu-Ling Ke.
2007.
Paranyms, Co-Hyponyms and Antonyms:Representing Semantic Fields with Lexical Semantic Relations.
Chinese Lexical Semantics Workshop.
2007.May 20-23.
Hong Kong: Hong Kong Polytechnic University.
[1] http://www.globalwordnet.org/gwa/gwa_grid.htm[2] http://bow.sinica.edu.tw/[3] http://cwn.ling.sinica.edu.tw/8
