Book ReviewDesign Patterns in Fluid Construction GrammarLuc Steels (editor)Universitat Pompeu Fabra and Sony Computer Science Laboratory, ParisAmsterdam: John Benjamins Publishing Company (Constructional Approaches toLanguage series, edited by Mirjam Fried and Jan-Ola O?stman, volume 11), 2012,xi+332 pp; hardbound, ISBN 978-90-272-0433-2, e99.00, $149.00Reviewed byNathan Schneider, Carnegie Mellon Universityand Reut Tsarfaty, Uppsala UniversityIn computational modeling of natural language phenomena, there are at least threemodes of research.
The currently dominant statistical paradigm typically prioritizesinstance coverage: Data-driven methods seek to use as much information observed indata as possible in order to generalize linguistic analyses to unseen instances.
A secondapproach prioritizes detailed description of grammatical phenomena, that is, formingand defending theories with a focus on a small number of instances.
A third approachmight be called integrative: Rather than addressing phenomena in isolation, differentapproaches are brought together to address multiple challenges in a unified framework,and the behavior of the system is demonstrated with a small number of instances.
DesignPatterns in Fluid Construction Grammar (DPFCG) exemplifies the third approach, intro-ducing a linguistic formalism called Fluid Construction Grammar (FCG) that addressesparsing, production, and learning in a single computational framework.The book emphasizes grammar-engineering, following broad-coverage descrip-tive paradigms that can be traced back to Generalized Phrase Structure Grammar(GPSG) (Gazdar et al1985), Lexical Functional Grammar (LFG) (Bresnan 2000), Head-Driven Phrase-Structure Grammar (HPSG) (Sag and Wasow 1999), and CombinatoryCategorial Grammar (CCG) (Steedman 1996).
In all of these cases, a formal meta-framework allows computational linguists to formalize their hypotheses and intuitionsabout a language?s grammatical behavior and then explore how these representationalchoices affect the processing of natural language utterances.
Many of the aforemen-tioned approaches have engendered large-scale platforms that can be used and reusedto provide formal description of grammars for different languages, such as Par-Gramfor LFG (Butt et al2002) and the LinGO Grammar Matrix for HPSG (Bender, Flickinger,and Oepen 2002).?
2013 Association for Computational LinguisticsFCG offers a similar grammar engineering framework that follows the principlesof Construction Grammar (CxG) (Goldberg 2003; Hoffmann and Trousdale 2013).
CxGtreats constructions as the basic units of grammatical organization in language.
The con-structions are viewed as learned associations between form (e.g., sounds, morphemes,syntactic phrases) and function (semantics, pragmatics, discourse meaning, etc.).
CxGdoes not impose a strict separation between lexicon and grammar?indeed, it is per-haps best known as treating semi-productive idioms like ?the X-er, the Y-er?
and?X let ale Y?
on equal footing with lexemes and ?core?
syntactic patterns (Fillmore,doi:10.1162/COLI r 00154Computational Linguistics Volume 39, Number 2Kay, and O?Connor 1988; Kay and Fillmore 1999).
FCG, like other CxG formalisms?namely, Embodied Construction Grammar (Bergen and Chang 2005; Feldman, Dodge,and Bryant 2009) and Sign-Based Construction Grammar (Boas and Sag 2012)?isunification-based.1 The studies in this book describe constructions and how they canbe combined in order to model natural language interpretation or generation as featurestructure unification in a general search procedure.The book has five parts, covering the groundwork, basic linguistic applications,processing matters, advanced case studies, and, finally, features of FCG that make itfluid and robust.
Each chapter identifies general strategies (design patterns) that mightmerit reuse in new FCG grammars, or perhaps in other computational frameworks.Part I: Introduction lays the groundwork for the rest of the book.
?Introducing FluidConstruction Grammar?
(by Luc Steels) presents the aims of the FCG formalism.
FCGwas designed as a framework for describing linguistic units (constructions?their formand meaning), with an emphasis on language variation and evolution (?fluidity?).
Theconstructionist approach to language is described and the argument for applying it tostudy language variation and change is defended.
Psychological validity is explicitlyruled out as a modeling goal (?The emphasis is on getting working systems, and thisis difficult enough?
; page 4).
The architects of FCG set out to include both sides ofthe processing coin, however?parsing (interpretation) and production (generation).The concept of search in processing is emphasized, though some of the explanationsof processing steps are too abstract for the reader to comprehend at this point.
Afurther desideratum?robustness to noisy input containing disfluencies, fragments, anderrors?is given as motivating a constructionist approach.The next chapter, ?A First Encounter with Fluid Construction Grammar?
(by Steels), describes the mechanisms of FCG in detail.
In FCG, a working analysishypothesized in processing is known as transient structure; the transduction of form tomeaning (and vice versa) selects a sequence of constructions that apply to the transientstructure to gradually expand it until reaching a final analysis.
Identifying construc-tions that may apply to a transient structure presents a non-trivial search problem,also addressed by the architects of FCG.
The sheer number of technical details makethis chapter somewhat overwhelming.
Most of the chapter is devoted to the low-levelfeature structures and the operations manipulating them.
Templates?a practical meansof avoiding boilerplate code when defining constructions?are then introduced, and domost of the heavy lifting in the rest of the book.In Part II: Grammatical Structures, we begin to see how constructions are defined inpractice.
?A Design Pattern for Phrasal Constructions?
(by Steels) illustrates how con-structions are used to describe the combination of multiple units into higher-level, typedphrases.
Skeletal constructions compose with smaller units to form hierarchical struc-tures (essentially similar to the Immediate Constituents Analysis of Bloomfield [1933]and follow-up work in structuralist linguistics [Harris 1946]), and a range of additionalconstructions impose form (e.g., ordering) constraints and add new meaning to thenewly created phrases.
This chapter is of a tutorial nature, illustrating the step-by-stepapplication of four kinds of noun phrase constructions to expand transient structuresin processing.
Over twenty templates are introduced in this chapter; they encapsulatedesign patterns dealing with hierarchical structure, agreement, and feature percolation.1 Less formal members of the Construction Grammar family include cognitive approaches in theBerkeley tradition (Lakoff 1987; Goldberg 1995, 2006), Cognitive Grammar (Langacker 1987),and Radical Construction Grammar (Croft 2001).448Book ReviewAn aspect of phrasal constructions that is not yet dealt with is the complex linking of se-mantic arguments and the morphosyntactic categorizations of the composed elements.
?A Design Pattern for Argument Structure Constructions?
(by Remi van Trijp)then builds on the formal machinery presented in the previous chapter to explicitlyaddress the complex mappings between semantic arguments (agent, patient, etc.)
andsyntactic arguments (subject, object, etc.).
This mapping is a complex matter due tolanguage-specific conceptualization of semantic arguments and different means ofmorphosyntactic realization used by different languages.
In FCG, each lexical itemintroduces its linking potential in terms of the different types of semantic and syntacticarguments that it may take, with no particular mapping between them.
Each argumentstructure construction imposes a partial mapping between the syntactic and semanticarguments to yield a particular argument structure instantiation, one of the multiplealternatives that may be available for a single lexical item.
This account stands in sharpcontrast to the lexicalist view of argument-structure (the view taken in LFG, HPSG, andCCG) whereby each lexical entry dictates all the necessary linking information.
Theconstruction-based approach is defended for its ability to deal with unknown words2and constructional coercion3 (Goldberg 1995).
The argument structure design patternallows FCG to crudely recover a partial specification of the form-meaning mapping ofthese elements, which is important for robust processing (see subsequent discussion).Part III: Managing Processing addresses how FCG transduces between a linguisticstring and a meaning representation, where the two directions (parsing and production)share a common declarative representation of linguistic knowledge (the grammar).
Thisentails assembling an analysis incrementally on the basis of the grammar, the input, andany partial analysis that has already been created.
With FCG (and unification grammarsmore broadly) this search is nontrivial, and streamlining search (i.e., minimizing non-determinism and avoiding dead ends) is a key motivator of many of the grammardesign patterns suggested in the book.
?Search in Linguistic Processing?
(by Joris Bleys, Kevin Stadler, and Joachim DeBeule) deals mainly with the problem of choosing which of multiple compatible con-structions to apply next.
Whereas the default heuristic search in FCG is a greedy, depth-first search (which can backtrack if the user-defined end-goal has not yet been achieved)the FCG framework allows for a guided search through scores that reflect the relativetendency of a construction to apply next.
The authors suggest that such scoring can beinformed by general principles, for instance: (i) specific constructions are preferred tomore general ones, and (ii) previously co-applied constructions are preferred.
Choosingappropriate constructions to apply early on dramatically reduces the time needed forprocessing the utterance.
?Organizing Constructions in Networks?
(by Pieter Wellens) takes this idea tothe next level, and proposes to organize the different constructions in networks ofconditional dependencies.
A conditional dependency links two constructions whereone provides necessary information for the application of the other.
These dependencynetworks can be updated whenever an input is processed so that the system learnsto search more efficiently when the same constructions are encountered in the future.Using these networks to guide the search thus significantly reduces the search forcompatible constructions.
An empirical effort to quantify this effect indeed shows a2 For example, ?He blicked the napkin off the table?
?a reasonable inference is that the subject caused thenapkin to leave the table.3 ?He sneezed the napkin off the table?
?note that sneeze is not normally transitive.449Computational Linguistics Volume 39, Number 2sharp reduction in search time; unlike the held-out experimental paradigm accepted instatistical NLP, however, the parsed/produced sentence is assumed to have been seenalready by the system.Part IV: Case Studies addresses three challenging linguistic phenomena in FCG.
?Feature Matrices and Agreement?
(by van Trijp) on German case offers a newunification-based solution to the problem of feature indeterminacy.
For instance, in thesentence Er findet und hilft Frauen ?He finds and helps women?, the first verb requiresan accusative object, whereas the second requires a dative object; the coordinationis allowed only because Frauen can be either accusative or dative.
Kindern ?children?,which can only be dative, is not licensed here.
Encoding case in a single feature onthe Frauen construction wouldn?t work because the feature would have to unify withcontradictory values (from the verbs?
inflectional features).
Instead, case restrictionsspecified lexically for a noun or verb can be expressed with a distinctive feature matrix,with each matrix slot holding a variable or the value + or -.
Unification then doesthe right thing?allowing Frauen and forbidding Kindern?without resorting to typehierarchies or disjunctive features.
?Construction Sets and Unmarked Forms?
(by Katrien Beuls) on Hungarian verbalagreement models a phenomenon whereby morphosyntactic, semantic, and phono-logical factors affect the choice between poly- and mono-personal agreement?that is,the decision whether a Hungarian transitive verb should agree with its object or justwith its subject.
The case and definiteness of the object and the person hierarchy rela-tionship between subject and object determine which kind of agreement obtains, andphonological constraints determine its form.
To make the different levels of structureinteract properly, constructions are grouped into sets (lexical, morphological, etc.)
andthose sets are considered in a fixed order during processing.
Construction sets also allowfor efficient handling of unmarked forms (null affixes)?they are considered only afterthe overt affixes have had the opportunity to apply, thereby functioning as defaults.
?Syntactic Indeterminacy and Semantic Ambiguity?
(by Michael Spranger andMartin Loetzsch) on German spatial phrases models the German spatial terms for front,back, left, and right.
To model spatial language in situated interaction with robots, twoproblems must be overcome.
The first is syntactic indeterminacy: Any of these spatialrelations may be realized as an adjective, an adverb, or a preposition.
The second issemantic ambiguity, specifically when the perspective (e.g., whose ?left??)
is implicit.Both are forms of underspecification which could cause early splits in the search spaceif handled na??vely.
Much in the spirit of the argument structure constructions (seeabove), the solutions (which are too technical to explain here) involve (a) disjunctiverepresentations of potential values of a feature, and (b) deferring decisions until a moreopportune stage.Part V: Robustness and Fluidity (by Steels and van Trijp) surveys the differentfeatures of the system that ensure robustness in the face of variation, disfluencies,and noise.
Natural language is fluid and open-ended.
There is variation betweenspeakers, there are disfluencies and speech errors, and noise may corrupt the speechsignal.
All of these may jeopardize the interpretability of the signal, but humanlisteners are adept at processing such input.
In the spirit of usage-based grammar(Tomasello 2003), FCG emphasizes the attainment of a communicative goal, rather thanensuring grammaticality of parsed/produced utterances.
This is accomplished witha diagnostic-repair process that runs in parallel to parsing/production.
Diagnosticscan test for unknown words, unfamiliar meanings, missing constructions, and so on.Diagnostic tests are implemented by reversing the direction of the transduction process:a speaker may assume the hearer?s point of view to analyze what she has produced450Book Reviewin order to see whether communicative success has been attained.
Likewise, a hearermay produce a phrase according to his own interpretation of the speaker?s form, andcheck for a match.
If a test fails, repair strategies such as proposing new constructions,relaxing the matching process for construction application, and coercing constructionsto adapt to novel language use are considered.Fluidity and robustness are the hallmarks of FCG, and the computationalframework has been used in experiments that assume embedded communication inrobotic agents.
This research program is developed at length by Steels (2012b).Discussion.
Like the legacy of the GPSG book (Gazdar et al1985), this book?s main meritis not necessarily in its technical details or computational choices, but in demonstratingthe feasibility of implementing the constructional approach in a full-fledged computa-tional framework.
We suggest that the CxG perspective presents a formidable challengeto the computational linguistics/natural language processing community.
It posits adifferent notion of modularity than is observed by most NLP systems: Rather thantreat different levels of linguistic structure independently, CxG recognizes that multipleformal components (phonological, lexical, morphological, syntactic) may be tied byconvention to a specific meaning or function.
Systematically describing these ?cross-cutting?
constructions and their processing, especially in a way that scales to large dataencompassing both form and meaning and accommodates both parsing and generation,would in our view make for a more comprehensive account of language processing thanour field is able to offer today.
Thus, we hope this book will be provocative even outsideof the grammar engineering community.This book is not without its weaknesses.
In parts the writing is quite technical andterse, which can be daunting for readers new to FCG.
Contextualization with respect toother strands of computational linguistics and AI research is, for the most part, lacking,though a second FCG book (Steels 2012a) picks up some of the slack on this front.4DPFCG does not address the feasibility of learning constructions directly from data,5 nordoes it discuss the expressive power of the formalism in relation to learnability results(such as that of Gold [1967]).
As admitted by the authors, much more work would beneeded to build life-size grammars.
Still, we hope that readers of DPFCG will appreciatethe authors?
vision for a model of linguistic form and function that is at once formal,computational, fluid, and robust.ReferencesBender, Emily M., Dan Flickinger, andStephan Oepen.
2002.
The grammarmatrix: An open-source starter-kit for therapid development of cross-linguisticallyconsistent broad-coverage precisiongrammars.
In Proceedings of the Workshopon Grammar Engineering and Evaluationat the 19th International Conference onComputational Linguistics, pages 8?14,Taipei.Bergen, Benjamin K. and Nancy Chang.2005.
Embodied Construction Grammar insimulation-based language understanding.4 In particular, the Embodied Construction Grammar formalism noted earlier offers a similarcomputational framework, though it reflects different research goals.
The most important difference isthat FCG was designed to study language evolution, and ECG to study language acquisition and usefrom a cognitive perspective.
FCG is largely about processing (support for production as well as parsingis considered essential); ECG places a greater premium on the meaning representation, formalizing anumber of theoretical constructs from cognitive semantics.
Chang, De Beule, and Micelli (2012) compareand contrast the two approaches in detail.5 Ideas that may be of relevance here are discussed in the Data-Oriented Parsing literature (Scha 1990; Bod2003) and the statistical learning of Stochastic Tree Substitution Grammars (O?Donnell 2011).451Computational Linguistics Volume 39, Number 2In Jan-Ola O?stman and Mirjam Fried,editors, Construction Grammars: CognitiveGrounding and Theoretical Extensions.
JohnBenjamins, Amsterdam, pages 147?190.Bloomfield, Leonard.
1933.
Language.
Holt,Rinehart and Winston Inc.Boas, Hans C. and Ivan A.
Sag, editors.2012.
Sign-Based Construction Grammar.Number 193 in CSLI Lecture Notes.CSLI Publications, Stanford, CA.Bod, Rens.
2003.
An efficient implementationof a new DOP model.
In Proceedings of the10th Conference of the European Chapter of theAssociation for Computational Linguistics,pages 19?26, Budapest.Bresnan, Joan.
2000.
Lexical-Functional Syntax.Blackwell.Butt, Miriam, Helge Dyvik, Tracy HollowayKing, Hiroshi Masuichi, and ChristianRohrer.
2002.
The parallel grammarproject.
In Proceedings of COLING 2002,Workshop on Grammar Engineering andEvaluation, Taipei.Chang, Nancy, Joachim De Beule, andVanessa Micelli.
2012.
Computationalconstruction grammar: ComparingECG and FCG.
In Luc Steels, editor,Computational Issues in Fluid ConstructionGrammar.
Springer Verlag, Berlin,pages 259?288.Croft, William.
2001.
Radical ConstructionGrammar: Syntactic Theory in TypologicalPerspective.
Oxford University Press,Oxford.Feldman, Jerome A., Ellen Dodge,and John Bryant.
2009.
EmbodiedConstruction Grammar.
In Bernd Heineand Heiko Narrog, editors, TheOxford Handbook of Linguistic Analysis.Oxford University Press, Oxford,pages 111?138.Fillmore, Charles J., Paul Kay, andMary Catherine O?Connor.
1988.Regularity and idiomaticity ingrammatical constructions:The case of ?let ale.?
Language,64(3):501?538.Gazdar, Gerald, Ewan Klein, Geoffrey K.Pullum, and Ivan A.
Sag.
1985.
GeneralisedPhrase Structure Grammar.
Blackwell,Oxford, England.Gold, E. Mark.
1967.
Language identicationin the limit.
Information and Control,10(5):447?474.Goldberg, Adele E. 1995.
Constructions:A construction grammar approach toargument structure.
University ofChicago Press, Chicago.Goldberg, Adele E. 2003.
Constructions:A new theoretical approach to language.Trends in Cognitive Sciences, 7(5):219?224.Goldberg, Adele E. 2006.
Constructions atwork: the nature of generalization in language.Oxford University Press, Oxford.Harris, Zellig S. 1946.
From morpheme toutterance.
Language, 22(3):161?183.Hoffmann, Thomas and Graeme Trousdale,editors.
2013.
The Oxford Handbookof Construction Grammar.
OxfordUniversity Press, Oxford.Kay, Paul and Charles J. Fillmore.
1999.Grammatical constructions and linguisticgeneralizations: The What?s X doing Y?construction.
Language, 75(1):1?33.Lakoff, George.
1987.
Women, Fire, andDangerous Things: What Categories RevealAbout the Mind.
University of ChicagoPress, Chicago.Langacker, Ronald W. 1987.
Foundations ofCognitive Grammar, volume 1.
StanfordUniversity Press, Stanford, CA.O?Donnell, Timothy J.
2011.
Productivityand reuse in language.
Ph.D. dissertation,Harvard University, Cambridge, MA.Sag, Ivan A. and Thomas Wasow.
1999.Syntactic Theory: A Formal Introduction.CSLI Publications, Stanford, CA.Scha, Remko.
1990.
Language theory andlanguage technology: Competence andperformance.
In R. de Kort and G. L. J.Leerdam, editors, Computertoepassingenin de Neerlandistiek.
Almere, pages 7?22.Schneider, Nathan.
2010.
Computationalcognitive morphosemantics: Modelingmorphological compositionalityin Hebrew verbs with EmbodiedConstruction Grammar.
In Proceedingsof the 36th Annual Meeting of the BerkeleyLinguistics Society, Berkeley, CA.Steedman, Mark.
1996.
Surface Structuresand Interpretation.
Number 30 inLinguistic Inquiry Monographs.The MIT Press, Cambridge, MA.Steels, Luc, editor.
2012a.
ComputationalIssues in Fluid Construction Grammar.Number 7249 in Lecture Notes inComputer Science.
Springer, Berlin.Steels, Luc, editor.
2012b.
Experiments inCultural Language Evolution.
Number 3in Advances in Interaction Studies.John Benjamins Publishing, Amsterdam.Tomasello, Michael.
2003.
Constructing aLanguage: A Usage-Based Theory of LanguageAcquisition.
Harvard University Press,Cambridge, MA.Tsarfaty, Reut.
2010.
Relational-RealizationParsing.
PhD thesis, University ofAmsterdam.452Book ReviewNathan Schneider is a doctoral student at Carnegie Mellon University.
His research has touchedseveral areas of computational semantics, including an account of Semitic morphology inEmbodied Construction Grammar (Schneider 2010).
E-mail: nschneid@cs.cmu.edu.
Reut Tsarfatyis a postdoctoral researcher at Uppsala University.
In her research she developed the Relational-Realization framework for statistical modeling of flexible form-function correspondence patterns(Tsarfaty 2010).
Tsarfaty is a guest editor of the recent Computational Linguistics special issue onParsing Morphologically Rich Languages (PMRL) and she is the author of a book on the topic tobe published by Morgan & Claypool Publishers.
E-mail: tsarfaty@stp.lingfil.uu.se.453
