A KNOWLEDGE ENGINEERING APPROACHTO NATURAL LANGUAGE UNDERSTANDINGStuart C. Shapiro & Jeannette G. NealDepartment of Computer ScienceState University of New York at BuffaloAmherst, New York 14226ABSTRACTThis paper descr ibes  the resul ts  of apre l iminary study of a Knowledge Engineeringapproach to Natural Language Understanding.
Acomputer system is being developed to handle theacquisition, representation, and use of linguisticknowledge.
The computer system is rule-based andutilizes a semantic network for knowledge storageand representation.
In order to facilitate theinteraction between user and system, input oflinguistic knowledge and computer responses are innatural language.
Knowledge of various types canbe entered and utilized: syntactic and semantic;assertions and rules.
The inference tracingfacility is also being developed as a part of therule-based system with output in natural language.A detailed example is presented to illustrate thecurrent capabilities and features of the system.I INTRODUCTIONThis paper descr ibes  the results  of a?
preliminary study of a Knowledge Engineering (KE)approach to Natural Language Understanding (NLU).The KE approach to an Artificial Intelligence taskinvolves a close association with an expert in thetask domain.
This requires making it easy for theexpert to add new knowledge to the computersystem, to understand what knowledge is in thesystem, and to understand how the system isaccomplishing the task so that needed changes andcorrections are easy to recognize and to make.
Itshould be noted that our task domain is NLU.
Thatis, the knowledge in the system is knowledge aboutNLU and the intended expert is an expert in NLU.The KE system we are using is the SNePSsemantic network processing system \[ii\].
Thissystem inci~ ~es a semantic network system in which** This work was supported in part by the NationalScience Foundation under Grants MCS80-06314 andSPI-8019895.all knowledge, including rules, is represented asnodes in a semantic network, an inference systemthat performs reasoning according to the rulesstored in the network, and a tracing package thatallows the user to follow the system's reasoning.A major portion of this study involves the designand implementation of a SNePS-based system, calledthe NL-system, to enable the NLU expert to enterlinguistic knowledge into the network in naturallanguage, to have this knowledge available toquery and reason about, and to use this knowledgefor processing text including additional NLUknowledge.
These features distinguish our systemfrom other rule-based natural language processingsystems such as that of Pereira and Warren \[9\] andRobinson \[i0\].One of the major concerns of our study is theacquisition of knowledge, both factual assertionsand rules of inference.
Since both types ofknowledge are stored in similar form in thesemantic network, our NL-system is being developedwith the ability to handle the input of both typesof knowledge, with this new knowledge immediatelyava i lab le  for use.
Our concern with theacquisition of both types of knowledge differ~from the approach of Haas and Hendrix \[i\], who a~epursu ing  on ly  the acqu is i t ion  of la rgeaggregations of individual facts.The benefit of our KE approach may be seen byconsidering the work of Lehnert \[5\].
She compiledan extens ive  list of rules concern ing  howquestions should he answered.
For example, whenasked, "Do you know what time it is?
", one shouldinstead answer the question "What time is it?
".Lehnert only implemented and tested some of herrules, and those required a programming effort.If a system like the one being proposed here hadbeen available to her, Lehnert could have testedall her rules with relative ease.Our ultimate goal is a KE system with all itslinguistic knowledge as available to the languageexpert as domain knowledge is in other expertsystems.
In this preliminary study we explore thefeasibility of our approach as implemented in ourrepresentations and N-L-system.136II OVERVIEW OF THE NL-SYSTEM III PRELIMINARIES FOR ENTERING RULESA major goal of this study is the design andimplementat ion  of a user-friendly system forexperimentation in KE applied to Natural LanguageUnderstanding.The NL-system consists of two logical components:a) A fac i l i ty  for the input of l inguist icknowledge into the semantic network in naturallanguage., This linguistic knowledge primarilyconsists of rules about NLU and a lexicon.
TheNL-system contains a core of network ruleswhich parse a user's natural language rule andbuild the corresponding structure in the formof a network rule.
This NL-system faci l i tyenables the user to man ipu la te  both thesyntactic and semantic aspects of surfacestrings.b) A facility for phrase/sentence generation andquestion answering via rules in the network.The user can pose a limited number of types ofqueries to the system in natural language, andthe system utilizes rules to parse the queryand generate a reply.
An inference tracingfacility is also being developed which usesthis phrase/sentence generation capability.This wi l l  enable the user to trace the ~inference processes, which result from theactivation of his rules, in natural language.When a person uses this NL -sys tem forexperimentation, there are two task domains co-resident in the semantic network.
These domainsare: (I) The NLU-domain which consists of thecollection of propositions and rules concerningNatural Language Understanding, including both theN'L-system core rules and assertions and the user-specified rules and assertions; and (2) the domainof knowledge which the user enters and interactswith via the NLU domain.
For this study, a limited'~Bottle Domain" is used as the domain of type (2).This domain was chosen to let us experiment withthe use of semantic knowledge to clarify, duringparsing, the way one noun madifies another in anoun-noun construction, viz.
"milk bottle" vs."glass bottle".In a sense, the task domain (2) is a sub-domain of the NLU-domain since task domain (2) isbuilt and used via the NLU-domain.
However, thetwo domains interact when, for example, knowledgefrom both domains is used in understanding asentence being "read" by the system.The system is dynamic and new knowledge,relevant to either or both domains, can be addedat any time.The basic tools that the language expert willneed to enter into the system are a lexicon ofwords and a set of processing rules.
This systemenables them to be input in natural language.The system initially uses five "undefinedterms": L-CAT, S-CAT, L-REL, S-REL, and VARIABLE.L-CAT is a term which represents the category ofall lexical categories such as VERB and NOUN.
S-CAT represents  the category  of all str ingcategories such as NOUN PHRASE or VERB PHRASE.
L-REL is a term which represents the category ofrelations between a string and its lexicalconstituents.
Examples of L-RELs might be MODNOUN and HEAD NOUN (of a NOUN NOUN PHRASE).
S-RELrepresents the category of relations between astring and its sub-string constituents, such asFIRST NP and SECOND NP (to distinguish between twoNPs within one sentence).
VARIABLE is a termwhich represents the class of identifiers whichthe user will use as variables in his naturallanguage rules.Before entering his rules into the system,the user must inform the system of all members ofthe L-CAT and VARIABLE categories which he wil luse.
Words  in the S-CAT, L -REL and S-RELcategories are introduced by the context of theiruse in user-specified rules.
The choice of alllinguistic names is totally at the discretion ofthe user.A list of the initial entries for the exampleof this paper are given below.
The single quotemark  indicates that the fo l low ing  word ismentioned rather than used.
Throughout thispaper, lines beginning with the symbol ** areentered by the user and the following line(s) arethe computer  response.
In response to adeclarative input statement, if the system hasbeen able to parse the statement and build astructure in the semantic network to represent theinput statement, then the computer replies withan echo of the user's statement prefaced by thephrase "I UNDERSTAND THAT".
In other words, thebuilding of a network structure is the system's"representation" of understanding.
** 'NOUN IS AN L-CAT.I UNDERSTAND THAT ' NOUN IS AN L-CAT** 'G-DETERMINER IS AN L-CAT.
(NOTE: Computer responses are omitted forthese input s ta tements  due to spaceconstraints of this paper.
Responses are allsimilar to the one shown above?
)** 'RELATION IS AN L-CAT.
** I E IS A VARIABLE.
** 'X IS A VARIABLE.137** 'Y IS A VARIABLE.
** 'ON IS A RELATION.
** 'A IS A G-DETERMINER.
** 'BOTTLE IS A NOUN.
** 'CONTAINER IS A NOUN.
** 'TABLE IS A NOUN.
** 'DESK IS A NOUN.
** 'BAR IS A NOUN.
*~ 'FLUID IS A MASS-NOUN.
** 'MATERIAL IS A MASS-NOUN.
** 'MILK IS A MASS-NOUN.
** 'WATER IS A MASS-NOUN.
** 'GLASS IS A MASS-NOUN.IV THE CORE OF THE NL-SYSTEMThe core  o f  the  NL -sys tem conta ins  aco l lec t ion  of  ru les  which accepts  the languagede f ined  by the grammar l i s ted  in  the Appendix.The core  i s  respons ib le  fo r  pars ing  the user ' snatura l  language input statements  and bu i ld ing thecorresponding network s t ruc ture .It is also necessary to start with a set ofsemantic network structures representing the basicre lat ions  the system can use for knowledgerepresentation.
Currently these relations are:a) Word W is preceded by "connector point" P ina surface string; e.g.
node M3 of figure Irepresents  that word IS is preceded byconnector point M2 in the string;b9 Lexeme L is a member of category C; e.g.
thisis used to represent the concept that 'BOTTLEIS A NOUN, which was input in Section 3;c) The string beginning at point Pl and endingat point P2 in a surface str ing is incategory C; e.g.
node M53 of figure 3 repre-sents the concept that '~ bottle" is a GNP;d) Item X has the relation R to item Y; e.g.node M75 of figure 1 represents the conceptthat the class of bottles is a subset of theclass of containers;e) A class is characterized by its membersparticipating in some relation; e.g.
theclass of glass bottles is characterized byits members being made of glass;f) The rule structures of SNePS.V SENTENTIAL COMPONENT REPRESENTATIONThe representat ion  of a sur face str ingutilized in this study consists of a networkversion of the list structure used by Pereira andWarren  \[I0\] wh ich  e l iminates  the exp l ic i t"connecting" tags or markers of their alternaterepresentation.
This representat ion  is alsosimilar to Kay's charts \[4\] in that severalstructures may be built as alternative analyses ofa single substring.
The network structure builtup by our top-level "reading" function, withoutany of the additional structure that would beadded as a result of processing via rules of thenetwork, is illustrated in figure I.As each word of an input string is read bythe system, the network representation of thestring is extended and relevant rules stored inthe SNePS network are triggered.
All applicablerules are started in parallel by Processes of ourMULTI package \[8\], are suspended if not all theirantecedents are satisfied, and are resumed if moreantecedents are satisfied as the string proceeds.The SNePS bidirectional inference capabil ity \[6\]focuses attention towards the active parsingprocesses and cuts down the fan out of pureforward or backward chaining.
The system has manyof the at t r ibutes  and benef i ts  of Kaplan'sproducer-consumer model \[3\] which influenced thedesign of the inference system.
The two SNePSsubsystems, the MULTI inference system and theMATCH subsystem, provide the user with the patternmatching and parse suspension and cont inuat ioncapability enjoyed by the Flexible Parser of Hayes& Mouradian \[2\].VI INPUT AND PROCESSING OF THE USER'S RULESAfter having entered a lexicon into thesystem as described above, the user will enter hisnatural language rules.
These rules must be inthe IF-THEN conditional form.
A sample rule thatthe user might enter is:IF A STRING CONSISTS OF A G-DETERMINER FOLLOWED BYA NOUN CALLED THE MOD-NOUN FOLLOWED BY ANOTHERNOUN CALLED THE HEAD-NOUNTHEN THE STRING IS AN NNP.PRED PRED PRED ?<o\PRED/~o~ <PREDFigure i.
Network representation of a sentence.138The words which  are under l ined in the aboverule are terms selected by the user for certa inl inguist ic  entit ies.
The lexical category namessuch as G-DETERMINER and NOUN must be enteredpreviously as discussed above.
The words MOD-NOUNand HEAD-NOUN specify lexical const i tuents  of astr ing and therefore the.system adds them to theL-REL category.
The str ing name NNP is added tothe S-CAT category by the system.The user's ru le -s ta tement  is read by thesys tem and processed  by ex is t ing  ru les  asdescr ibed above.
When it has been complete lyanalyzed, a translation of the rule-statement isasserted in the form of a network rule structure.This rule is then avai lable to analyze furtheruser inputs.The form of these user rules is determined bythe design of our init ial  core of rules.
Wecould, of course, have written rules which acceptuser rules of the formNNP ---> G-DETERMINER NOUN NOUN.Notice, however,  that most of the user rules ofthis sect ion conta in more in fo rmat ion  than suchsimple phrase-structure rules.F igure  2 conta ins  the l is t  of the usernatural language rules which are used as input tothe NL-system in the example developed for thispaper.
These rules i l lustrate the types of ruleswhich the system can handle.By add ing  the ru les  of f igure  2 to thesystem, we have enhanced the abi l i ty  of the NL-i.
** IF A STRING CONSISTS OF AMASS-NOUN* THEN THE STRING IS A GNP* AND THE GNP EXPRESSES THE CONCEPT NAMED BY THE MASS-NOUN.I UNDERSTAND THAT IF A STRING CONSISTS OF A MASS-NOUN THEN THE STRINGIS A GNP AND THE GNP EXPRESSES THE CONCEPT NAMED BY THE MASS-NOUN2.
** IF A STRING CONSISTS OF A G-DETERMINER FOLLOWED BY A NOUN* THEN THE STRING IS A GNP* AND THE GNP EXPRESSES THE CONCEPT NAMED BY THE NOUN.
(NOTE: Computer  responses omi t ted  for these rules due to space constra ints  ofthis paper.
Responses are exemplified by the response to first rule above.)3.
** IF A STRING CONSISTS OF A G-DETERMINER FOLLOWED BY A NOUN CALLED* THE MOD-NOUN FOLLOWED BY ANOTHER NOUN CALLED THE HEAD-NOUN* THEN THE STRING IS AN NNP.4.
** IF A STRING CONSISTS OF AN NNP* THEN THERE EXISTS A CLASS E SUCH THAT* THE CLASS E IS A SUBSET OF THE CLASS NAMED BY THE HEAD-NOUN* AND THE NNP EXPRESSES THE CLASS E.5.
** IF A STRING CONSISTS OF AN NNP* AND THE NNP EXPRESSES THE CLASS E* AND THE CLASS NAMED BY THE MOD-NOUN IS A SUBSET OF MATERIAL* AND THE CLASS NAMED BY THE HEAD-NOUN IS A SUBSET OF CONTAINER* THEN THE CHARACTERISTIC OF E IS TO BE MADE-OF THE ITEM NAMED* BY THE MOD-NOUN.6.
** IF A STRING CONSISTS OF AN NNP* AND THE NNP EXPRESSES THE CLASS E* AND THE CLASS NAMED BY THE MOD-NOUN IS A SUBSET OF FLUID* AND THE CLASS NAMED BY THE HEAD-NOUN IS A SUBSET OF CONTAINER* THEN THE FUNCTION OF E IS TO BE CONTAINING THE ITEM NAMED BY THE* MOD-NOUN.7.
** IF A STRING CONSISTS OF A GNP CALLED THE F IRST-GNP FOLLOWED BY* THE WORD 'IS FOLLOWED BY A GNP CALLED THE SECOND-GNP* THEN THE STRING IS A DGNP-SNTC.8.
** IF A STRING CONSISTS OF A DGNP-SNTC* THEN THE CLASS NAMED BY THE FIRST-GNP IS A SUBSET OF THE CLASS* NAMED BY THE SECOND-GNP* AND THE DGNP-SNTC EXPRESSES THIS LAST PROPOSITION.9.
** IF A STRING CONSISTS OF AN NNP FOLLOWED BY THE WORD 'IS* FOLLOWED BY A RELATION FOLLOWED BY A GNP* THEN THE STRING IS A SENTENCE* AND THERE EXISTS AN ITEM X AND THERE EXISTS AN ITEM Y* SUCH THAT THE ITEM X IS A MEMBER OF THE CLASS NAMED BY THE NNP* AND THE ITEM Y IS A MEMBER OF THE CLASS NAMED BY THE GNP* AND THE ITEM X HAS THE RELATION TO THE ITEM Y* AND THE SENTENCE EXPRESSES THIS LAST PROPOSITION.I0.
** IF THE FUNCTION OF E IS TO BE CONTAINING THE ITEM X* AND Y IS A MEMBER OF E* THEN THE FUNCTION OF Y IS TO BE CONTAINING THE ITEM X.ii.
** IF THE CHARACTERISTIC OF E IS TO BE MADE OF THE ITEM X* AND Y IS A MEMBER OF E* THEN THE CHARACTERISTIC OF Y IS TO BE MADE OF THE ITEM X.Figure 2.
The rules used as input to the system.139system to '%nderstand" surface strings when '~ead"into the network.
If we examine rules 1 and 2,for example, we find they define a GNP (a genericnoun phrase).
Rules 4, 8, and 9 stipulate that arelationship exists between a surface string andthe concept or proposition which is its intension.This relationship we denoted by "expresses".
Whenthese rules are  triggered, they will not onlybuild syntactic information into the networkcategorizing the particular string that is being"read" in, but will also build a semantic noderepresenting the relationship '~xpresses" betweenthe str ing and the node represent ing  itsintension.
Thus, both semantic and syntacticconcepts are built and linked in the network.In contrast to rules i - 9, rules I0 and IIare purely semantic, not syntactic.
The user'srules may deal with syntax alone, semantics alone,or a combination of both.All knowledge possessed by the system residesin the same semantic network and, therefore, boththe  rules of the NL-system core and the user'srules can be triggered if their antecedents aresatisfied.
Thus the user's rules can be used not"only for the input of surface strings concerningthe task domain (2) discussed in Section 2, butalso for enhancing the NL-system's capability of'%nderstanding" input information relative to theNLU domain.VII PROCESSING ILLUSTRATIONAssuming that we have entered the lexicon viathe statements shown in Section 3 and have enteredthe rules listed in Section 6, we can input asentence such as "A bott le  is a container".Figure 3 illustrates the network representation ofthe surface string "A bottle is a container" afterhaving been processed by the user's rules listedin Section 6.
Rule 2 would be triggered and wouldidentify "a bottle" and "a container" as GNPs,building nodes M53, M55, M61, and M63 of figure 3.Then the antecedent of rule 7 would be satisfiedby the sentence, since it consists of a GNP,namely "a bottle", fol lowed by the word "is",fo l lowed by a GNP, namely  "a container".Therefore the node Mg0 of figure 3 would be builtidentifying the sentence as a DGNP-SNTC.
Theaddition of this knowledge would trigger rule 8and node M75 of figure 3 would be built assertingthat the class named "bottle" is a subset of theclass named "container".
Furthermore, node M91wou ld  be built asser t ing  that the sentenceEXPRESSES the above stated subset proposition.Let us now input additional statements to thesystem.
As each sentence is added, nodestructures are built in the network concerningboth the syntactic properties of the sentence andthe underlying semantics of the sentence.
Each ofthese structures is built into the system only,however ,  if it is the consequence  of thetriggering of one of the expert's rules.We now add three sentences (preceded by the**) and the program response is shown for each.
**A BOTTLE IS A CONTAINER.I UNDERSTAND THAT A BOTTLE IS A CONTAINERCAT CATARG2Figure 3.
Network representation of processed surface string.140**MILK IS A FLUID.I UNDERSTAND THAT MILK IS A FLUID**GLASS IS A MATERIAL.I UNDERSTAND THAT GLASS IS A MATERIALEach of the above input sentences is parsedby the rules of Section 6 identifying the variousnoun phrases and sentence structures, and aparticular semantic subset relationship is builtcorresponding to each sentence.We can now query the system concerning theinformation just added and the core rules willprocess the query.
The query is parsed, an answeris deduced from the information now stored in thesemantic network, and a reply is generated fromthe network  s t ructure  wh ich  represents theasser t ion  of the subset re la t ionsh ip  bui ltcor respond ing  to each of the above inputstatements.
The next sect ion d iscusses  thequestion-answering/generation facility in moredetail.
** WHAT IS A BOTTLE?A BOTTLE IS A CONTAINERNow we input the sentence "A milk bottle ison a table".
The rules involved are rules 2, 3,4, 6, 9, and 10.
The phrase "a milk bottle"triggers rule 3 which identifies it as a NNP(noun-noun phrase).
Then since the string hasbeen identified as an NNP, rule 4 is triggered anda new class is created and the new class is asubset of the class representing bottles.
Rule 6is also triggered by the addition of the instancesof the consequents of rules 3 and 4 and by ourprevious input sentences asserting that "A bottleis a container" and "Milk is a fluid".
As aresult, additional knowledge is built into thenetwork concerning the new sub-class of bottles:the function of this new class is to contain milk.Then since "a table" satisfies the conditions forrule 2, it is identified as a GNP, rule 9 isfinally triggered, and a structure is built intothe network representing the concept that a memberof the set of bottles for containing milk is on amember of the set of tables.
The antecedents ofrule i0 are satisfied by this member of the set ofbottles for containing milk, and an assertion isadded to the effect that the function of thismember is also to contain milk.
The computerresponds "I UNDERSTAND THAT .
.
."
only when asructure has been built  wh ich  the sentenceEXPRESSES.
** A MILK BOTTLE IS ON A TABLE.I UNDERSTAND THAT A MILK BOTTLE IS ON A TABLEIn order to further ascertain whether thesystem has understood the input sentence, we canquery the system as follows.
The system's corerules again parse the query, deduce the answer,and generate a phrase to express the answer.
** WHAT IS ON A TABLE?A BOTTLE FOR CONTAINING MILKWe now input the sentence '~ glass bottle ison a desk" to be parsed and processed by the rulesof Section 6.
Processing of this sentence issimilar to that of the previous sentence, exceptthat rule 5 will be triggered instead of rule 6since the system has been informed that glass is amaterial.
Since the string "a glass bott le" is  anoun-noun phrase, glass is a subset of material,and bottle is a subset of container, a new classis created which is a subset of bottles and thecharacteristic of this class is to be made ofglass.
The remainder of the sentence is processedin the same way as the previous input sentence,until finally a structure is built to representthe proposition that a member of the set ofbottles made of glass is on a member of the set ofdesks.
Again, this proposition is linked to theinput sentence by an EXPRESSES relation.When we input the sentence (again preceded bythe **) to the system, it responds with itsconclusion as shown here.
** A GLASS BOTTLE IS ON A DESK.I UNDERSTAND THAT A GLASS BOTTLE IS ON A DESKTo make sure that the system understands thedifference between "glass bot t le"  and "mi lkbottle", we query the system relative to the itemon the desk:** WHAT IS ON A DESK?A BOTTLE MADE OF GLASSWe now try "A water bottle is on a bar", butthe system cannot fully understand this sentencesince it has no knowledge about water.
We havenot t01d the system whether water is a fluid or amaterial.
Therefore, rules 3 and 4 are triggeredand a node is built to represent this new class ofbottles, but no assertion is built concerning theproperties of these bottles.
Since only three ofthe four antecedents of rule 6 are satisfied,processing of this rule is suspended.
Rule 9 istriggered, however, since all of its antecedentsare satisfied, and therefore an assertion is builtinto the network representing the proposition thata member of a subset of bottles is on a member ofthe class of bars.
Thus the system replies thatit has understood the input sentence, but reallyhas not fully understood the phrase "a waterbottle" as we can see when we query the system.It does not respond that it is "a bottle forcontaining water".141** A WATER BOTTLE IS ON A BAR.I UNDERSTAND THAT A WATER BOTTLE IS ON A BAR**WHAT IS ON A BAR?A BOTTLEEssentially, the phrase "water bottle" isambiguous for the system.
It might mean '%ottlefor containing water", 'bottle made of water", orsomething else.
The system's '~epresentation" ofthis ambiguity is the suspended rule processing.Meanwhi le the parts of the sentence which are"comprehensible" to the system have been processedand stored.
After we tell the system '~ater is afluid", the system resumes its processing of rule6 and an assertion is established in the networkrepresenting the concept that the function of thislatest class of bottles is to contain water.
Theambiguity is resolved by rule processing beingcompleted in one of the ways which were previouslypossible.
We can then query the system to showits understanding of what type of bottle is on thebar.
** WATER IS A FLUID.I UNDERSTAND THAT WATER IS A FLUID**WHAT IS ON A BAR?A BOTTLE FOR CONTAINING WATERThis example demonstrates two features of thesystem: I) The combined use of syntactic andsemantic information in the processing of surfacestrings.
This feature is one of the primarybenef i ts  of having not only syntact ic  andsemantic, but also hybrid rules.
2) The use ofbi-directional inference to use later informationto process or disambiguate earlier strings, evenacross sentence boundaries.Vlll QUESTION-ANSWERING/GENERATIONThe question-answering/generation facility ofthe NL-system, mentioned briefly in Section 2, iscompletely rule-based.
When a query such as 'Whatis a bottle?"
is entered into the system, thesentence is parsed by rules of the core inconjunction with user-defined rules.
That is,rule 2 of Section 6 would identify "a bottle" as aGNP, but the top level parse of the input stringis accomplished by a core rule.
The syntax andcorresponding semantics designated by rules 7 and8 of Section 6 form the basis of the core rule.Our current system does not enable the user tospecify the syntax and semantics of questions, sothe core  rules wh ich  def ine the syntax andconsequents of a question were coded specificallyfor the example of this paper, we intend topursue this issue in the future.
Currently, thetwo types of questions that our system can processare:WHAT IS <NP> ?WHAT IS <RELATION> <NP> ?Upon successful parse of the query, the systemengages in a deduction process to determine whichset is a superset of the set of bottles.
Thisprocess can either find an assertion in thenetwork answering the query or, if necessary, theprocess can utilize bi-directional inference,initiated in backword-chaining mode, to deduce ananswer.
In this instance, the network structuredominated by node M75 of figure 3 is found as theanswer to the query.
This structure asserts thatthe set of bottles is a subset of the set ofcontainers.Another deduction process is now initiated togenerate  a surface str ing to express  thisstructure.
For the purpose of generation, we havedeliberately not used the input strings whichcaused the semantic network structures to bebuilt.
If we had deduced a string which EXPRESSESnode M75, the system would simply have found andrepeated the sentence represented by node M90 offigure 3.
We plan to make use of these surfacestrings in future work, but for this study, wehave employed a second "expresses" relation, whichwe call EXPRESS-2, and rules of the core to><lXi)< JFigure 4.
Network representation of a generated surface string.142generate surface strings to express, semanticstructures.F igure  4 i l l us t ra tes  the networkrepresentation of the surface string generated fornode M75.
The string "A bottle", dominated bynode M221, is generated for node M54 of figure 3,expressing an arbitrary member of the set ofbottles.
The string "a container", dominated bynode M223, is generated to express the set ofcontainers, represented by node M62 of figure 3.F inal ly,  the surface str ing "A bott le  is acontainer",  represented  by node M226, isestablished to express node M75 and the answer tothe query.
In general, a surface sentence isgenerated to EXPRESS-2 a given semantic structureby first generating strings to EXPRESS-2 the sub-structures of the semantic structure and byassembling these strings into a network version ofa list.
Thus the semantic structure is processedin a bottom-up fashion.The structure of the generated string is aphrase-structured representation util izing FIRSTand REST pointers to the sub-phrases of a string.This representation reflects the subordinaterelation of a phrase to its "parent"phrase.
Thestructures pointed to by the FIRST and REST arcscan be a) another list structure with FIRST andREST pointers; b) a string represented by a nodesuch as Mg0 of figure 3 with BEG, END, and CATarcs; or c) a node with WORD arc to a word and anoptional PRED arc to another node with PRED andWORD arcs.
After the structure representing thesurface string has been generated, the resultinglist or tree is traversed and the leaf nodesprinted as response.IX CONCLUSIONSOur goal is to design a NLU system for al ingu is t ic  theor ist  to use for languageprocessing.
The system's linguistic knowledgeshould be available to the theorist as domainknowledge.
As a result of our preliminary studyof a KE approach  to Natura l  LanguageUnderstanding, we have gained valuable experiencewith the basic tools and concepts of such asystem.
All aspects of our NL-system have, ofcourse, undergone many revisions and refinementsduring development and will most likely continueto do so.During the course of our study, we havea) developed two representations of a surfacestring: I) a linear representation appropriatefor input strings as shown in figure i; and 2)a phrase-structured representation appropriatefor generation, shown in figure 4;b) designed a set of SNePS rules which are capableof analyzing the user's natural language inputrules and building the corresponding networkrules;c )  ident i f ied  basic concepts  essent ia l  forlinguistic analysis: lexical category, phrasecategory, relation between a string and lexicalconstituent, relation between a string and sub-strimg, the expresses re lat ions  betweensyntactic structures and a semantic structures,and the concept of a variable that the user maywish to use in input rules;d) designed a set of SNePS rules which can analyzesome simple queries and generate a response.X FUTURE DIRECTIONAs our system has evolved, we have striven toreduce the amount of core knowledge which isessential for the system to function.
We want toenable the user to define the language processingcapabilities of the system~ but a basic core ofrules is essential to process the user's initiallexicon entries and rules.
One of our highpriority items for the immediate future is topursue this issue.
Our objective is to developthe NL-system into a boot-strap system to thegreatest degree possible.
That is, with a minimalcore of pre-programmed knowledge, the user willinput rules and assertions to enhance the system'scapability to acquire both linguistic and non-linguistic knowledge.
In other words, the userwill define his own input language for enteringknowledge into the system and conversing with thesystem.Another topic of future investigation will bethe feasibility of extending the user's controlover the system's basic tools by enabling the userto define the network Case frames for syntacticand semantic knowledge representation.We also intend to extend the capability ofthe system so as to enable the user to define thesyntax of questions and the nature of response.XI SUMMARYThis study explores the realm of a KnowledgeEng ineer ing  approach to Natura l  LanguageUnderstanding.
A basic core of NL rules enablethe NLU expert to input his natural language rulesand his lexicon into the semant ic  networkknowledge base in natural lan~uame.
In thissystem, the rules and assertions concerning bothsemantic and syntactic knowledge are stored in thenetwork  and undergo in teract ion  dur ing thededuction processes.An example was presented to illustrate:entry of the user's lexicon into the system; entryof the user's natural language rule statements143into the system; the types of rule statementswhich the user can utilize; how rules buildconceptual structures from surface strings; theuse of knowledge for disambiguating surfacestructure; the use of later information fordisamhiguating an earlier, partially understoodsentence; the question-answering~generationfacility of the NL-system.REFERENCESI.
Haas,N.
& Hendrix,G.G., "An Approach  toAcquiring and Applying Knowledge", Proceedingsof the AliA%, pp.
235-239, 1980.2.
Hayes, P. & Mouradian, G., "Flexible Parsing",Proceedings of the iSth Annual Meetin~ of theAssociation for Computational Linguistics , pp.97-103, 1980.3.
Kaplan, R.M., "A Mult i -processing Approach toNatural Language", Proceedings of the NationalComputer Conference, AFIPS Press, Montvale, NJ)pp.
435-440,1973..4.
Kay, M., "The Mind System", In R. Rustin, ed.Natural Language Processing, A lgor i thmicsPress, New York, pp.
153-188, 1973.5.
Lehnert ,  W. G., The process of Quest ionAnswering, Lawrence Erlbaum, Hillsdale, NJ,1978.6.
Martins, J., McKay, D.P., & Shapiro, S.C., Bi-directional Inference, Technical Report No.174, Department of Computer Science, SUNY atBuffalo, 1981.7.
McCord, M.C., Usin K Slots and Modifiers inLogic Grammars for Natural LanKuaKe , TechnicalReport No.
69A-80, Univ.
of Kentucky, rev.October, 1980,8.
McKay, D.P.
& Shapiro, S.Co, "MULTI - A LISPBased Mult iprocessing System", ConferenceRecord of the 1980 LISP Conference, StanfordUniv., pp.
29-37, 1980.9.
Pereira, F.C.N.
& Warren, D.H.D., "DefiniteClause Grammars for Language Analysis -ASurvey of the Formalism and a Comparison withAugmented Transition Networks", ArtificialIntelliKence) pp.
231-278, 1980.10.Robinson) J.J., "DIAGRAM, A Grammar  forDialogues", CACM, pp.
27-47, January, 1982.ll.Shapiro, S.C., "The SNePS Semantic NetworkP rocess ing  System".
In N. F indler,  ed.Associative Networks - The Representation andUse of Knowledge by Computers, Academic Press,New York, pp.
179a-203, 1979.12 .Shap i ro ,  S.C., "Genera l i zed  AugmentedTransition Network Grammars for Generation ~,~pu~Semantic Networks", Proceedings of the 17thAnnual  Meet iy_~ of the Assoc ia t ion  forComputational Linguistics, pp.
25-29, 1979.Xll APPENDIX - NL CORE GRAMMARThe  following grammar is a definitive descriptionof the language in which the user can enterlinguistic statements into the semantic network.The Backus-Naur Form (BNF) grammar is used in thislanguage definition.Notational conventions:- Phrase in lower case letters explains the wordrequired by the user- Standard grammar metasymbols:<> enclose nonterminal items| for alternation\[\] enclose optional items() for groupingSpace represents concatenation- Concatenation has priority over alternation<LEX-STMT> : :='<WORD> IS (AJAN) (L-CAT|<L-CAT-MEMBER>)<RULE> ::= IF <ANT-STMT> THEN <CQ-STMT><ANT-STMT> : := <ANT-STMT> AND <ANT-STMT>I A STRING CONSISTS OF <STR-DESCRIPTION>I <STMT ><CQ-STMT> : := <CQ-STMT> AND <CQ-STMT>| THE STRING IS <G-DET> <STRING-NAME>I THERE EXISTS A <CONCEPT-WORD> <VAR>I <STMT><STMT> : := <CL-REF> <REL-REF> <CL-REF>!
THE <STRING-NAME> EXPRESSES <CL-REF>I THE <STRING-NAME> EXPRESSES THIS LASTPROPOS ITIONI THE <FUN-CHAR-WORD> OF <CL-REF> IS TOBE <FUN-CHAR-VERB> <CL-REF><STR-DESCRIPTION> : :=<STR-DESCRIPTION> FOLLOWED BY <STR-DESCRIPTION>| <G-DET> <LEX-NAME> \[<LABEL-PHRASE>\]| THE WORD ' <LITERAL><LABEL-PHRASE> ::-- CALLED <DET> <LABEL><LEX-NAME> ::= any lexical category name<LABEL> ::= any name or label<STRING-NAME> ::= any string category name<REL-REF> ::= IS A (SUBSET|MEMBER) OF| HAS THE <REL-WORD> TO<CL-REF> ::= THE <CONCEPT-WORD> <VAR>| THE CLASS NAMED BY THE <NAME>I a member of an L-CAT category<FUN-CHAR-WORD> : := (FUNCTION |CHARACTERISTIC)<FUN-CHAR-VERB> : := any verb<NAME> ::= name of a st r ing phrase or theconstituent of a string phrase<VAR> ::= any member of the category VARIABLE<G-DET> : :-- A I AN l ANOTHER<DET> : := <G-DET> I THE<REL-WORD> ::~ a member of L-CAT which shoulddenote "relation"<WORD> ::= any word144
