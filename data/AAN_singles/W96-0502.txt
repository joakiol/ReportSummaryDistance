SPLAT: A sentence-plan authoring toolBruce  Jakeway and  Chrysanne D iMarco  ttDepartment  of Computer  ScienceUniversity of WaterlooWaterloo, Ontario N2L 3G1, Canadacd?maxco@logos, uwater loo ,  caVoice: +1 519 888 4443Fax: +1 519 885 1208ABSTRACTSPLAT (Sentence Plan Language Author-ing Tool) is an authoring tool intended tofacilitate the creation of sentence-plan spec-ifications for the Penman natural languagegeneration system.
SPLAT uses an example-based approach in the form of sentence.plantemplates to aid the user in creating andmaintaining sentence plans.
SPLAT also con-tains a sentence bank, a user-extensible col-lection of sentence plans annotated in variousways.
The sentence bank can be searched forcandidate plans that can then be used in thecreation of new sentence plans specific to thedomain of interest.
SPLAT's graphical envi-ronment provides additional support to theuser in the form of menu-driven access toPenman's linguistic resources and manage-ment of partially built sentence plans.1 In t roduct ionAs natural anguage generation systems be-come more complex and sophisticated, themode of input to these systems is becom-ing correspondingly more difficult to specifyand manage.
Currently, sentence plans mustbe created by experts who are very knowl-edgeable about both linguistic theory andthe characteristics of the particular genera-tion system.
In order to facilitate the growthof natural anguage generation research, sys-tems should be able to handle more complexinput, but at the same time should be moreaccessible to non-experts.
To accomplishthese goals requires a facility that aids theuser in creating and maintaining the desiredinput specifications in a principled and con-venient way.
Such a facility, should have boththeoretical knowledge of the allowable formand content of the input specifications, andthe practical ability to ensure that only syn-tactically correct specifications are entered.Ideally, it should also maintain a library ofsample input specifications so that the userneed not reconstruct existing specifications,but can construct new ones from an existingset.
As well, such a facility should provideaccess to a range of resources, such as gram-mars and other linguistic resources that canaid the user in input development.
SPLAT isa first attempt to provide such a facility forthe Penman generation system in the formof an authoring tool for Sentence Plan Lan-guage (SPL).2 The  Penman system: The  needfor author ing2.1 The  input to Penman:  SentencePlan LanguageThe Penman generation system \[Penman,1989\] is one of the most comprehensive natu-ral language generation systems in the world.It contains a very large systemic functionalgrammar of English, the Nigel grammar,and an extensive semantic ontology, the up-per model.
Input to the Penman systemis defined by the Sentence Plan Language\[Penman, 1991\] and given in the form ofSPL plans.
The system processes the SPLinput by querying different knowledge re-sources, including the Nigel grammar, theupper model, and a domain model, eventu-ally producing a realization of the SPL planin the form of an English sentence.Each SPL plan contains one or more headconcepts from the upper model and a vari-able that enables the plan to be referred toby other SPL plans.
The head concept canbe modified by a number of keywords, sig-naUing the underlying rammar to generatedifferent sentence "patterns.
For example, onecommon type of keyword is a relation, whosevalue may be another SPL plan, or a refer-ence to such a plan.2.2 Why using SPL is hardOne of the major difficulties in learning touse Penman has been acquiring the expertiseto construct SPL plans.
The vast number ofpossible keywords and values, coupled withthe absence of any facility for storing andsearching these items, made the task of build-ing SPL plans very frustrating for the novicePenman user.
In contrast, the experiencedSPL developer would often draw on knowl-edge of previously constructed SPL plans inorder to recycle bits of partial SPL plans, buthad no convenient way to store and accessthis information.
Various resources, the up-per model, for instance, play an essential rolein providing knowledge to guide the develop-ment of the SPL plan, but were virtually in-accessible to all but the Penman expert.
Sup-port for managing the construction of SPLplans and accessing the necessary resourcesin a systematic and user-friendly manner wasalmost completely lacking.3 An  author ing  too l  for SPLSPLAT is a Sentence Plan Language Author-ing Tool that has been developed as part ofthe HealthDoc project \[Jakeway, 1995, Di-Marco et al, 1995\] and aims to address manyof the earlier difficulties in building the in-put SPL specifications for Penman.
SPLATallows the user to create SPL plans in asupportive on-line environment: a graphical,menu-driven interface provides guidance onthe allowable structure of SPL plans and ac-cess to the various Penman resources, suchas the upper model and the generator it-self.
As well, SPLAT provides an extensiblebank of representative s ntences and theirSPL structures, from which the user can cre-ate new sentence plans.
An important fea-ture of SPLAT is that it provides a new viewof the upper model.3.1 The modelling approachSPLAT draws on some aspects of modellingtheory in helping the user build SPL plans,specifically, by giving examples of SPL-plantemplates and prefabricated SPL plans.
Thetemplates supply most of the format specificto a particular kind of SPL plan, thus re-ducing the need for the user to memorizeSPL-plan syntax.
This feature also helps re-duce the possibility of syntactic errors in planbuilding.
In addition, having a template dis-play the allowable components ofa particulartype of SPL plan guides the user in exploringthe Penman system and in learning how thedifferent parts of an SPL plan interact.Previously constructed SPL plans providemodels that may be modified or incorporatedinto the new plan.
This extensible xampleset, the sentence bank, provides positive ex-amples of how to construct SPL-plan tem-plates.
The user can retrieve the plan fora particular token in the sentence bank andmodify it, or use it to aid in the constructionof a new plan.3.2 Remodell ing the upper modelThe Penman upper model, a classification ofvarious semantic oncepts, has traditionallybeen divided into three disjoint concept hier-archies, a high-level split between the ma-jor semantic abstractions of English: pro-cesses, objects, and qualities.
Processes canbe thought of as verbs and other relationalconcepts, objects as nouns, and qualities asmodifiers of processes and objects, i.e., ad-verbs and adjectives.
However, early in theconstruction of SPLAT, it was noted that pro-cesses hould be divided into two categories,those which modify the ideational content ofa sentence and those which dictate the tex-tual structure of a sentence.
The former cat-egory describes most of the process hierarchy(i.e., verbs and most relations), whereas thelatter describes the logical and rhetorical re-lations.
Adding this category to SPLAT takesthe upper model closer to the semantic las-sification described by \[Matthiessen, 1991\],with textual functions being separated fromideational functions.3.3 Bui lding SPL templatesSPLAT provides te.mplate forms for each typeof SPL plan: relations, processes, objects,and qualities.
The user need only frill inappropriate values on the selected template.As well, for processes, the template is not astatic structure, but changes for each type ofprocess according to its roles, which are re-trieved from the underlying knowledge base.For example, the template for a verbal pro-cess will display the roles relevant to this typeof process: sayer, addressee, and saying.
Foreach kind of template, SPLAT provides mostof the roles necessary to construct this typeof SPL plan.Each template also provides a facility toadd keywords and values that are not presenton the form.
The template also gives the useraccess to a number of different ools and re-sources, including the actual SPL that getsconstructed, and the generator's output fromthe constructed SPL.
At any point in the de-velopment process, the user can choose toproduce the partially built SPL plan or gen-erate (through Penman) the English realiza-tion of the current structure.3.4 The sentence bankSPLAT stores the pre-built SPL plans for a setof sample sentences in a sentence bank.
Eachtoken of a sentence in the sentence bank isconnected back to the SPL-plan template as-sociated with it; i.e., the templates for a par-ticular sentence and for its components aredirectly accessible from the sentence bank.Users can search the sentence bank to findexamples of a particular sentence or partialsentence pattern.
The corresponding SPL-plan template can then be used as the modelor component of the new SPL plan beingbuilt.
As users develop their own SPL plans,they can add them to the sentence bank bychoosing the annotation feature on the cur-rent template.3.4.1 The  purpose  o f  annotat ionsEach word in the sentence bank is an-notated with up to five levels of annota-tion: spelling, lexical item, part of speech,grammatical function, and upper-model con-cept.
The spelling corresponds to the actualspelling of the word in the sentence and is re-trieved from the generator output.
The lex-ical item is the lexical unit used by Penmanto generate the word, derived from the SPLinput.
The  part-of-speech annotation for aparticular word is derived from Brill's \[1994\]part-of-speech tagger.
Before a sentence isentered into the sentence bank, it is passed tothe tagger to determine the part of speech ofeach word in the sentence.
The grammaticalfunction of a word is derived from the outputof the Penman generator.
1 The upper-modelconcept attributed to the word is retrievedfrom the SPL input.
Not all words of a sen-tence will be annotated at each level, as someannotation levels might not apply to a par-ticular word.Table I shows how SPLAT would annotatea sample sentence.
Notice that the semanti-cally more important words have full annota-tions, whereas the support words do not havelexical or conceptual information.
These sup-port words are grouped with their associ-ated semantically meaningful words into to-kens.
These tokens correspond to SPL plans.For example, the word were is an auxil-iary to the word produced from the conceptCREA TI  VE-MA TERIAL -A  CTIO N becauseof tense requirements.
(The cryptic syntacticpart-of-speech tags are from the Penn Tree-bank tagset.)
In the sentence bank, each to-ken is presented as a unit that is linked tothe underlying SPL-plan template, so thatthe template can be edited.3.4.2 Searching the sentence bankThe sentence bank contains a numberof sample sentences which illustrate varioustypes of SPL plans and constructions.
Theuser may want to make use of existing plans,either using them to guide the constructionof new plans, or modifying them to createnew ones.
To determine which sentence planto use, the user searches the sentence bankwith a pattern indicating the desired settingsISPLAT uses KPML \[Bateman, 1995\] version 0.8or later to retrieve these values, a.s the KPML gener-ator can easily return the full structure output of asentence,  whereas this information is much harder toretrieve from the standaxd Penman generator .spelling lezical item part-of-speech grammatical semanticThose ?
DT DEICTICpeople PERSON NNS THING PERSONwere VBD TEMPO 1making MAKE VBG VOICE CREATIVE- MATERIAL-ACTIG Na DT DEICTICnew NEW JJ QUALITY NEWship SHIP NN THING SHIPTable 1: Sentence  bank  annotat ions .
Example of annotations for the sentences Thosepeople were making a new ship.for the annotation levels.
SPLAT will retrieveall the sentences in the sentence bank whichmatch the pattern.
For example, if the sen-tenc,~ in Table 1 was in the sentence bank,and if the pattern specified that a word witha syntactic part-of-speech DT (determiner)was to be followed by a word whose lexi-cal item was PERSON, then it would be re-trieved.
If, however, the pattern was theword those, followed by any number of words,followed by a word with a concept matchingBELIEVE, then the sentence would not beretrieved.4 Conc lus ionSP'LAT provides a graphical environmentwhere users can enter the SPL-plan specifi-cations for the Penman generation system.This environment, including its SPL-plantemplates and sentence bank, provides aneasy way for Penman users, even novices, tocreate and maintain SPL plans.
The SPL-plan templates display the necessary key-words for the particular type of plan, andSPLAT automatically enforces correct SPLsyntax.
The sentence bank provides theuser with a convenient method for savingSPL plans and indexing them for later reuse.Currently, a graphical upper-model brows-ing tool has been implemented and other re-sources are being developed.References\[Bateman, 1995\] John A. Bateman.
KPML:The KOMET-Penman multifingual re-source development environment.
In Pro-ceedings off the Fifth European Workshopon Natural Language Generation, pages219-222, Leiden, May 1995.
Social and Be-havioural Sciences, University of Leiden.\[BriU, 1994\] Eric Brill.
Some advances intransformation-based part of speech tag-ging.
In Proceedings of the 12th NationalConference on Artificial Intelligence, pages722-727, Seattle, 1994.\[DiMarco et al, 1995\] Chrysanne DiMarco,Gra~eme Hirst, Leo Wanner, and JohnWilkinson.
HealthDoc: Customizing pa-tient information and health education bymedical condition and personal character-istics.
In Workshop on Artificial Intelli-gence in Patient Education, pages 59-71,Glasgow, August 1995.\[Jakeway, 1995\] Philip Bruce Jakeway.SPLAT: A sentence plan authoring tool fornatural anguage generation.
Master's the-sis, University of Waterloo, 1995.\[Matthiessen 1991\] Christian Matthiessen.Lexico(grammatical) choice in text gener-ation.
In CEcile Paris; William R. Swart-out; and William C. Mann, editors, Nat-ural Language Generation in Artificial In-telligence and Computational Linguistics,pages 249-292.
Kluwer Academic Pubfish-ers, Norwell, Massachusetts, 1991.\[Penman, 1989\] Penman Natural LanguageGeneration Group.
The Penman Primer,The Penman User Guide, and The Pen-man Reference Manual.
Information Sci-ences Institute, 1989.\[Penman, 1991\] Penman Natural LanguageGroup.
The Penman SPL Guide.
Infor-mation Sciences Institute.
Unpubfishedmanuscript, 1991.
