Proceedings of the 2012 Workshop on Biomedical Natural Language Processing (BioNLP 2012), pages 202?205,Montre?al, Canada, June 8, 2012. c?2012 Association for Computational LinguisticsPubAnnotation - a persistent and sharable corpus and annotation repositoryJin-Dong Kim and Yue WangDatabase Center for Life Science (DBCLS),Research Organization of Information and Systems (ROIS),2-11-16, Yayoi, Bunkyo-ku, Tokyo, 113-0032, Japan{jdkim|wang}@dbcls.rois.ac.jpAbstractThere has been an active development of cor-pora and annotations in the BioNLP commu-nity.
As those resources accumulate, a newissue arises about the reusability.
As a solu-tion to improve the reusability of corpora andannotations, we present PubAnnotation, a per-sistent and sharable repository, where variouscorpora and annotations can be stored togetherin a stable and comparable way.
As a positionpaper, it explains the motivation and the coreconcepts of the repository and presents a pro-totype repository as a proof-of-concept.1 IntroductionCorpora with high-quality annotation is regarded in-dispensable for the development of language pro-cessing technology (LT), e.g.
natural language pro-cessing (NLP) or textmining.
Biology is one of thefields which have strong needs for LT, due to thehigh productivity of new information, most of whichis published in literature.
There have been thus anactive development of corpora and annotations forthe NLP for biology (BioNLP).
Those resources arecertainly an invaluable asset of the community.As those resources accumulate, however, a newissue arises about the reusability: the corpora andannotations need to be sharable and comparable.
Forexample, there are a number of corpora that claim tohave annotations for protein or gene names, e.g, Ge-nia (Kim et al, 2003), Aimed (Bunescu et al, 2004),and Yapex (Franze?n et al, 2002).
To reuse them, auser needs to be able to compare them so that theycan devise a strategy on how to use them.
It is how-ever known that often the annotations in differentcorpora are incompatible to each other (Wang et al,2010): while one is considered as a protein name ina corpus, it may not be the case in another.A comparison of annotations in different corporacould be made directly or indirectly.
If there is anoverlap between two corpora, a direct comparisonof them would be possible.
For example, there areone1, two2 and three3 PubMed abstracts overlappedbetween Genia - Yapex, Genia - Aimed, and Yapex- Aimed corpora, respectively.
When there is no orinsufficient overlap, an indirect comparison could betried (Wang et al, 2010).
In any case, there are anumber of problems that make it costly and trouble-some, though not impossible, e.g.
different formats,different ways of character encoding, and so on.While there have been a few discussions aboutthe reusability of corpora and annotations (Cohen etal., 2005; Johnson et al, 2007; Wang et al, 2010;Campos et al, 2012), as a new approach, we presentPubAnnotation, a persistent and sharable storage orrepository, where various corpora and annotationscan be stored together in a stable and comparableway.
In this position paper, after the motivation andbackground are explained in section 1, the initial de-sign and a prototype implementation of the storageare presented in section 2 and 3, respectively and fu-ture works are discussed in section 4.2 DesignFigure 1 illustrates the current situation of cor-pus annotation in the BioNLP community, whichwe consider problematic.
In the community, there1PMID-103578182PMID-8493578, PMID-89103983PMID-9144171, PMID-10318834, PMID-10713102202Figure 1: Usual setup of PubMed text annotationare several central sources of texts, e.g.
PubMed,PubMed Central (PMC), and so on.
In this work,we consider only PubMed as the source of texts forbrevity, but the same concept should be applicableto other sources.
Texts from PubMed are mostly thetitle and abstract of literature indexed in PubMed.For an annotation project, text pieces from a sourcedatabase (DB) are often copied in a local storage andannotations are attached to them.Among others, the problem we focus on in thissituation is the variations that are made to the texts.Suppose that there are two groups who happen toproduce annotations to a same PubMed abstract.The abstract will be copied to the local storages ofthe two groups (illustrated as the local storage 1 and2 in the figure).
There are however at least two rea-sons that may cause the local copies to be differentfrom the abstract in PubMed, and also to be differentfrom each other even though they are copies of thesame PubMed abstract:Versioning This variation is made by PubMed.
Thetext in PubMed is changed from time to timefor correction, change of policy, and so on.
Forexample, Greek letters, e.g., ?, are spelled out,e.g., alpha, in old entries, but in recent entriesthey are encoded as they are in Unicode.
Forthe reason, there is a chance that copies of thesame entry made at different times (snapshots,hereafter) may be different from each other.Conversion This variation is made by individualgroups.
The texts in a local storage are some-times changed for local processing.
For exam-ple, most of the currently available NLP tools(for English), e.g., POS taggers and parsers thatFigure 2: Persistent text/annotation repositoryFigure 3: Text/annotation alignment for integrationare developed based on Penn Treebank, can-not treat Unicode characters appropriately.
Forsuch NLP tools to be used, all the Unicodecharacters need to be converted to ASCII char-acter sequences in local copies.
Sometimes, theresult of some pre-processing, e.g.
tokeniza-tion, also remains in local copies.The problem of text variation may not be such aproblem that makes the reuse of corpora and anno-tations extremely difficult, but a problem that makesit troublesome, raising the cost of the entire commu-nity substantially.To remedy the problem, we present, a persistentand sharable storage of corpora and annotations,which we call PubAnnotation.
Figure 2 illustratesan improved situation we aim at with PubAnnota-tion.
The key idea is to maintain all the texts inPubAnnotation in their canonical form, to which allthe corresponding annotations are to be aligned.
Fortexts from PubMed, the canonical form is defined tobe exactly the same as in PubMed.
With the defini-tion, a text entry in PubAnnotation needs to be up-dated (uptodate in the figure) as the correspondingtext in PubMed changes (versioning).
Accordingly,the annotations belonging to the entry also need tobe re-aligned (alignment).There also would be a situation where a variationof a text entry is required for some reason, e.g.
for203Figure 4: Text/annotation alignment exampleapplication of an NLP tool that cannot handle Uni-code characters.
Figure 3 illustrates a required pro-cess to cope with such a situation: first, the text isexported in a desired form (conversion in the fig-ure); second, annotations are made to the text; andthird, the annotations are aligned back to the text inits canonical form in the repository.Figure 4 shows an example of text conversionand annotation alignment that are required when theEnju parser (Miyao and Tsujii, 2008) needs to beused for the annotation of protein names.
The ex-ample text includes a Greek letter, ?, which Enjucannot properly handle.
As Enju expects Greekletters to be spelled out with double equal signson both sides, the example text is converted as sowhen it is exported into a local storage.
Basedon the pre-processing by Enju, the two text spans,CD==epsilon== and CD4, are annotated as pro-tein names.
When they are imported back to PubAn-notation, the annotations are re-aligned to the canon-ical text in the repository.
In this way, the textsand annotations can be maintained in their canon-ical form and in alignment respectively in PubAn-notation.
In the same way, existing annotations, e.g.Genia, Aimed, Yapex, may be imported in the repos-itory, as far as their base texts are sufficiently similarto the canonical entries so that they can be alignedreliably.
In this way, various existing annotationsmay be integrated in the repository,To enable all the processes described so far, anytwo versions of the same text need to be aligned, sothat the places of change can be detected.
Text align-ment is therefore a key technology of PubAnnota-tion.
In our implementation of the prototype repos-itory, the Hunt-McIlroy?s longest common subse-quence (LCS) algorithm (Hunt and McIlroy, 1976),as implemented in the diff-lcs ruby gem pack-age, is used for the alignment.Figure 5: DB schema of persistent annotation repository3 Prototype implementationAs a proof-of-concept, a prototype repository hasbeen implemented.
One aspect considered seriouslyis the scalability, as repository is intended to be ?per-sistent?.
Therefore it is implemented on a relationaldatabase (Ruby on Rails with PostgreSQL 9.1.3), in-stead of relying on a plain file system.Figure 5 shows the database schema of the reposi-tory.4 Three tables are created for documents, anno-tations, and (annotation) contexts, respectively.
Theannotations are stored in a stand-off style, each ofwhich belongs to a document and also to an anno-tation context (context, hereafter).
A context rep-resents a set of annotations sharing the same set ofmeta-data, e.g., the type of annotation and the an-notator.
For brevity, we only considered PubMed asthe source DB, and named entity recognition (NER)-type annotations, which may be simply representedby the attributes, begin, end, and label.The prototype repository provides a RESTful in-terface.
Table 1 shows some example which can beaccessed with the standard HTTP GET method.
Anew entry can be created in the repository using aHTTP POST method with data in JSON format.
Fig-ure 6 shows an example of JSON data for the cre-ation of annotations in the repository.
Note that, thebase text of the annotations needs to be passed to-gether with the annotations, so that the text can becompared to the canonical one in the repository.
If adifference is detected, the repository will try to alignthe annotations to the text in the repository.4Although not shown in the figure, all the records are storedwith the date of creation.204http://server url/pmid/8493578to retrieve the document record of a specific PMIDhttp://server url/pmid/8493578.asciisame as above, but in US-ASCII encoding (Unicode characters are converted to HTML entities).http://server url/pmid/8493578/annotationsto retrieve all the annotations to the specific document.http://server url/pmid/8493578/contextsto retrieve all the annotation contexts created to the specific document.http://server url/pmid/8493578/annotations?context=genia-proteinto retrieve all the annotations that belong to genia-protein context.http://server url/pmid/8493578/annotations.json?context=genia-proteinthe same as above, but in JSON format.Table 1: Examples of RESTful interface of the prototype repository{"document":{"pmid":"8493578","text":"Regulation ..."},"context":{"name":"genia-protein"},"annotations":[{"begin":51,"end":56,"label":"Protein",{"begin":75,"end":97,"label":"Protein",]}Figure 6: The JSON-encoded data for the creation of twoprotein annotations to the document of PMID:8493578.4 Discussions and conclusionsThe current state of the design and the prototypeimplementation are largely incomplete, and there isa much room for improvement.
For example, thedatabase schema has to be further developed to storetexts from various source DBs, e.g., PMC, and torepresent various types of annotations, e.g., relationsand events.
The issue of governance is yet to bediscussed.
We, however, hope the core conceptspresented in this position paper to facilitate discus-sions and collaborations of the community and theremaining issues to be addressed in near future.AcknowledgmentsThis work was supported by the ?IntegratedDatabase Project?
funded by the Ministry of Edu-cation, Culture, Sports, Science and Technology ofJapan.ReferencesRazvan Bunescu, Ruifang Ge, Rohit J. Kate, Edward M.Marcotte, Raymond J. Mooney, Arun K. Ramani, andYuk Wah Wong.
2004.
Comparative experimentson learning information extractors for proteins andtheir interactions.
Artificial Intelligence in Medicine,33(2):139?155.David Campos, Srgio Matos, Ian Lewin, Jos Lus Oliveira,and Dietrich Rebholz-Schuhmann.
2012.
Harmoniza-tion of gene/protein annotations: towards a gold stan-dard medline.
Bioinformatics, 28(9):1253?1261.K.
Bretonnel Cohen, Philip V Ogren, Lynne Fox, andLawrence Hunter.
2005.
Empirical data on corpus de-sign and usage in biomedical natural language process-ing.
In AMIA annual symposium proceedings, pages156?160.Kristofer Franze?n, Gunnar Eriksson, Fredrik Olsson, LarsAsker, Per Lide?n, and Joakim Co?ster.
2002.
Proteinnames and how to find them.
International Journal ofMedical Informatics, 67(13):49 ?
61.James W. Hunt and M. Douglas McIlroy.
1976.
An Al-gorithm for Differential File Comparison.
TechnicalReport 41, Bell Laboratories Computing Science, July.Helen Johnson, William Baumgartner, Martin Krallinger,K Bretonnel Cohen, and Lawrence Hunter.
2007.Corpus refactoring: a feasibility study.
Journal ofBiomedical Discovery and Collaboration, 2(1):4.Jin-Dong Kim, Tomoko Ohta, Yuka Tateisi, and Jun?ichiTsujii.
2003.
GENIA corpus - a semantically an-notated corpus for bio-textmining.
Bioinformatics,19(suppl.
1):i180?i182.Yusuke Miyao and Jun?ichi Tsujii.
2008.
Feature forestmodels for probabilistic hpsg parsing.
ComputationalLinguistics, 34(1):35?80, March.Yue Wang, Jin-Dong Kim, Rune S?tre, Sampo Pyysalo,Tomoko Ohta, and Jun?ichi Tsujii.
2010.
Improvingthe inter-corpora compatibility for protein annotations.Journal of Bioinformatics and Computational Biology,8(5):901?916.205
