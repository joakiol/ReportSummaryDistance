A News Analysis SystemRobert J. KUHNSArtificial Intelligence CenterArthur D. Little, Inc.Cambridge, MA 02140 USAAbstractThis paper describes a prototype news analysissystem Which classifies and indexes news stories inreal time.
The system extracts stories from anewswire, parses the sentences of the story, andthen maps the syntactic structures into a conceptbase.
This process results in an index containingboth ger~eral categories and specific details.Central to this system is a Government-Bindingparser which processes each sentence of a newsitem.
The system is completely modular and can beinterfaced with different news feeds or conceptbases.1,0 IntroductionThis paper reports on a prototype newsanalysis system (NAS) which classifies and indexesnews stories in real time.
That is, the systemreceiving reports from a newswire is capable ofclassifying the reports and constructing an indexof them.
Once a news item is classified, it canthen be routed to users for whom the story ispertinent.
This system, which runs as anindependent background process, is automatic andgreatly reduces the amount of irrelevantinformation users must cope with.From a theoretical view, one significantaspect of the system is that its parser is adeterministic princlple-based Government-Binding(GB) system.
Basing NAS on such a processordemonstrates capabilities of a syntax-orientednatural %anguage parser and how linguistic andworld knowledge (primarily financial) can beinterfaced to provide a useful application.
Whilea pre-prototype of NAS was written in ZetaLisp onSymbolics and later ported to the TI Explorer andExplorer II, the current version is implemented inSymbolics Cool,on Lisp.~ r o u n dMuch of the text processing work has focusedon methods for obtaining information or retrievingtexts from large databases.
Approaches are wideand inc\]ude key wording, statistical analysis,pattern matching, and a method using lexical,syntactic, and semantic filters.
However, thereare other applications for which these techniquesseem inadequate.
(/Hayes et al 1988/ doesdescribe a strictly pattern matching approach tonews categorization.)
For instance, consider thenews and financial industries where those whogather and report news or trade stocks and bondsmust read, analyze, and react to current electronicinformation from many different sources almostinstantly.
This need to process information withinseconds, coupled with the fact that there isalready ~t overwhelming amount of information thatindividuals must sort through in order to findrelevant news, clearly shows the need for rapid andaccurate indexing and routing systems.It was in this context that NAS was developed.The goal was to build a system with the capabilityof processing news stories received from activenewswires, i.e., to be able to categorize eachstory against a set of general topics and moredetailed subtopics in a matter of seconds.
Thesestories and their associated indexes can then berouted to those interested individuals, therebyhelping to reduce the load of irrelevantinformation that they must see in order to find theitems which are pertinent to them.Having identified this need, a pre-prototypewas built around an existing parser based closelyon the work of Marcus /Marcus 1980/.
Stories inthe pro-prototype were manually entered and werechosen so that the concepts do not directly appearin the story.
The system was not using key wordsor phrases and was characterizing stories at acertain level of abstraction.
While there wereonly about 12 different concepts from which thissystem could process, it was able to classify astory as a merger/acquisition, for example, andprovide the companies involved, including the buyerand the acquired company, and tell whether themerger was successful or not.The present version incorporates a morepowerful parser than the one in the previousversion, and it can identify over 200 conceptsranging from specific (a name of a company orcurrency) to abstract (marketing reports vs.analysis for some industry).
Since NAS processesunrestricted sets of stories, concepts can beeither explicit (specific ones) or in, licit(abstract ones) and NAS will select those which areappropriate for each story.The remaining sections will discuss the majorcomponents of NAS, the way it handles errors, andfuture directions.
Several example stories andtheir indexes are also provided.3,0 The Architecture of NASNAS consists of four major subsystems, viz., astream filter, a lexical scanner, a parser, and asemantic processor or filter working sequentiallyas listed.
The stream filter is the componentwhich scans the news stream received via asatellite dish and selects only the textual newsreports.
Once a story is identified, it enters alexieal scanner resulting in sequences of wordsthat are distinguished as sentences of the incomingreport.
These sentences are passed to the parserwhich constructs syntactic structures which arethen used by the semantic processor in mappingthese structures onto representations of theconcepts.
The story and index can then he directedto interested users and/or entered into a databasefor future consultations.The underlying design consideration of thisarchitecture was to modularlze stream, linguistic,and application-specific semantic processing.
Inthis way, new interfaces to different newswlres,enhancements to the parser, or changes ofapplication or a different concept base can becompleted without impacting the other components,thereby enabling easy modification to NAS.3513,1 ~h~ Stream FilterNAS is currently interfaeed with a news feedwhich transmits news related to financial andcommodity markets.
Since the textual reports areinterspersed with various quotations which are notinput to NAS, the stream filter screens thenon-textual items and directs only the storiescontaining text to NAS.
When a quote is prefacedwith several lines of text, the stream filter willsend the item for proeesslng of the text while thenumerical quotes are ignored.The stream filter can be deactivated andstories that have been stored on text files arethen used as the corpus.
The effect of changes tothe system can now be traced when using staticinput.3,2 The Lexical sca~ne~The lexical scanner receives the news reportsfrom the stream filter and provides the parser withprocesslble input.
It decomposes the incomingstream into words, numbers, distinguishedcharacters, e.g., $ (dollar sign) and % (percentsign), punctuation, and sentences, and it alsoequates abbreviations with its unabbreviated form.The scanner has access to the lexicon and when itrecognizes a word, it associates all the lexlcalinformation with that word.As the scanner is analyzing the stream ofcharacters, it is also determining the presence ofsentences, i.e., sentence delimiters.
Sentencesending in question or  exclamation marks are easilydetectable.
Although news services differ,algorithms which rely on the formatting scheme ofthe news source have been developed which finddeclarative sentences even in the cases where theycontain perlod-final abbreviations.
The beginningand end of a news story are characterized bydistinguishing features, so story identification istrivial.3,$ The ParserCentral to NAS is the parser which providessyntactic structures that are eventually mappedonto concepts resulting in an index for a story.The parser is a prlnclple-based GB parser and is asubstantially revised "version of /Kuhns 1986/.
(See /Abney 1986/,/Berwlck 1987/, /Kashket 1987/,/Thiersch 1987/, and /Wehrll 1987/ for descriptionsof prlnclple-based parsers.)
The parsing strategyis deterministic in  that no temporary Structuresare built or information deleted during the courseof a parse (/Berwlek 1987/ and /Marcus 1980/).
Itsh6uld be noted that in connection with this typeof application, speed is crucial and although adeterministic parser is strict in that it cannotbacktrack or produce alternate parses in ambiguoussentences, its speed of approximately 100words/second in linear time is essential.The parser has two main subsystems, vlz., theset of inthractlng GB-modules and the lexicon.These modules include principles and constraintsfrom Case and bounding theories and, especially ,X-bar, thematic or 0, trace, binding, and controltheories.
These latter subsystems have aparticularly prominent role for the parser.Predlcate-argument relations or 8-role assignmentsto arguments of predicates are determined by0-theory.
In the ease where movement has occurred,trace theory will relate an .argument which now mustreside in a position which cannot receive a 0-rolewith its empty category or trace in a 8-markedposition from which the constituent has moved.352This enables the 0-role of the argument to bedetermined.
Possible eoreferentlal relations forpronomlnals and anaphors are identified withprinciples of binding and control theory.Moreover, the Extended Projection Principle,8-Criterlon, and Case filter are observed by theparser.
(For a full discussion of these modulesand principles see /Chomsky 1981/.
)The primary output of the parser is a set oflicensing relations.
"Licensing" is a cover term~for any of a number of possible relatlons b@tween_projections.
Nonmaximal projections are licensedby maximal projections via X-bar theory and thesemaximal projections are licensed by an argument.ora trace of an argument, a predicate, or anoperator.
Specifically, a predicate licenses itsinternal arguments or complements and its externalargument or its subject.
(Again for a moredetailed discussion of these aspects of GB theorysee /Chomsky 1986/.
)In that the goal of the parser is to licenseprojections of each element of a sentence, it canperform two basic operations.
It can construct aprojection of a lexical item in direct use of X-bartheory or it can establish or assert a licensingrelation between two maximal projections withrespect to other constraints of GB Theory.
Theparser proceeds by first building a maximalprojection and then attempts to license it toanother maximal projection or vice versa, i.e.,another projection to it.Upon encountering a lexical item, the parsercreates a maximal projection consisting of a set offeatures.
Each node receives a type in terms ofX-bar primitives (?N,  +_V), an index, and itslexleal item from which it has projected.Relevant GB systems are invoked during the parse todetermine binding relations and 8-role assignments.The proper index to encode binding or eoreferen~ewill be incorporated in the projection andco-lndexed projections share all of their features.However, it is not always possible to assign anindex or 0-role at the inception of a projectionbecause of inadequate information.
The parser willnot commit itself and will only include thesyntactie structure that it can derive at thatstage of the parse.
When the relevant informationis available, the parser will incorporate it in theincomplete node which preserves the monotonicity ofparsing information.
This process is constrainedto the current cyclic node which is the leftbounded context of  the parser.
(/Knhns inpreparation/ will discuss the specifics of thisparser.)
The parser produces a llst of lleenslngrelations for each sentence of a news story.
Inturn it outputs an ordered llst of the relationscorresponding to the sentences of a news report.This set is then passed to the semantic processor.The other component of the linguisticprocessor of NAS is the lexicon whi__ceh containswords and distinguished strings, together withtheir syntactic and subcategorlzatlon featuresincluding X-bar primitives (?~, iV), number, nameor referential expressions, complement types,control features (for interpreting empty subjects(PRO) of infinitival complements), and @-grids or8-role assignments for predicates.
An ambiguouslexleal entry has features for all of its potentialtypes associated wlth that item and lexlcalambiguity resolution procedures choose theappropriate features during the parse(/Milne 1983/and /Milne 1986/) .Morphology is minlmal~ reflecting :onlyr~at lon s bet,@on roots and th~i~.
~r i~a~ona lforms and associations between words and affixes.Lexical redundancy rules for specifyingcorrespol~dences between sets of features have beenimplemented.
Since news reports frequently haveabbreviations, lexlcal entries which have anabbreviated form will be marked as such, and whenthe abbreviation appears in a story, the lexicalscanner ):etrieves the lexlcal information of theunabbreviated form.
Relationships between lexicalitems and their extragrammatical features will bediscussed below (Section 3.4).The lexicon consists of less than 15,000members and in building the lexicon the emphasishas been on the inclusion of verbs, adjectives, andprepositions.
Names, espeelally of individuals,corporations, and geographical locations, notpresent In the lexicon are found in news reportsregularly.
While many familiar names are in thelexicon, unfamiliar nouns are handled by the errorhandling routines (Section 5.0).While the lexicon is updated as needed, theway it was originally constructed was to collectdistinct "words" from stories received from asatellite feed.
Numbers were disregarded but namesand abbreviations were included.
During severalnon-continuous weeks of scanning the stream for newwords, the task of assigning syntactic features toeach valid item began.
While this is a laboriousand time.consuming process, it was aided by amenu-drlw~n facility for feature assignment wheretyping wa!~ minimized and much time saved.Also~ during the time that previously unknownwords were being "collected," a counter wasindicatin~ the number of current words inincrements of I00.
When the llst was slightly over7,000, the nu,~er of new words being added to itslowed.
Fur~,ermore, a point of convergenceseemed to occur under 9,500 items.
At this stageof lexicon development, a comparison of theexisting words against a sample of over 50 words(mainly verbs and adjectives) taken from anothernews service suggested that the present llst wassufficient in that it contained every word takenfrom the news stories.
This is significant becausea system which is to parse sentences within a storymust have the capability of recognizing each word.Since it appears that the vocabulary of reports isbounded (~ith the exception of names), rapidlinguistic processing of news is realizable withrespect to \].exical recognition.~_~/,.
Tbe_j_e!,m_D_~c processorThe semantic processor is an automatic patternmarcher which incorporates world knowledge that isused to determine the "meaning" of its linguisticinput with respect to a set of topics anddesignators in its concept base.
The term conceptrefers to a general notion such as merger/acquisition, terrorism, currency report, orstrikes and lockouts.
Designators are subtopicswhich provide detail to an index.
A storycategorized as a merger/acqulsltlon could befurther characterized by designators indicatingspecific tentacles involved or by the industriesimpacted.
The existing system has the capabilityof processing over 200 concepts and designators.~e  output of this processor (and NAS) is aclassification or index of a story consisting ofone or mor~) general concepts and their designators.%f no general concept is found, the system maystill assign designators.
In other words, a storymay be ~,out Air France while the generalclassification is unknown.Structurally, the processor can be viewed ashaving a concept base and a #-relation interpreterwhich takes as input the predicate-argumentstructures denoted by #-relations and attempts tofind matches with elements in the concept base.The concept base itself possesses an internalstructure consisting of several levels ofabstraction.
The most concrete level consists ofnames which enter into an index whenever present ina story.
This level primarily contains names ofcorporations, industries, corporate executives,government officials, and geographical locations.In order to keep linguistic and the applicationdependent concepts independent, pointers betweenthe lowest level of the concept base and thelexicon are used.
A change to the concept base orsubstitution of a new one will not affect thelinguistic component.Representations at the next level reflectcon~onality which the elements at the first levelshare and together they provlde des i~ators  for astory.
The objects at this more abstract level arecalled entity types and they further characterizethe members of the first level.
Two common entitytypes are industry type and company.
The semanticprocessor can assign an industry designator to astory if either the industry is explicitlymentioned in the story or if companies orindividuals mentioned in the story are related to aparticular industry.
So a news item about SwissAir will have both the name Swiss Air and itsassociated industry, viz., Airline Industry,assigned to its index.The last and most abstract level is that of ageneral concept such as merger/acquisition,currency report, strikes and lockouts, andterrorism.
These are represented by frames wherethere is one action slot and at least one entitytype slot (determined from the previous level).Moreover, one concept may have several differentrepresentations.
1~e action slot is a list of oneor more synonomous words or phrases that denote anaction or the "doing" component of a concept.
Themembers of the action slot are not semanticprimitives but are actual words.
Furthermore, theyare word stems and not all of their morphologicalvariants.
The entity type slots contain types ofentities which are found in the previouslydiscussed level of the concept base.
For example,a partial representation for merger/acquisition is:(i) Merger/AcquisitionAction: buy, take overAgent: companyObject: companywhere b~ or take over is the action and the entitytype slots are labeled agent and object and theirmembers must be of the type company.
Details ofthis formalism are discussed below in connectionwith the #-relation interpreter.The other module of the semantic processor isa #-relation interpreter which maps #-relations ofeach sentence of a news story into the conceptbase, or, in other words, onto specific conceptsand designators.
This mapping is executed asfollows.
First, recall that the parser returns aset of licens'ing relations including #?relationsfor each story.
Each member of this set is a llstof the relations for a sentence of the story.
Inexamining the #-relations for a sentence, theinterpreter attempts to establish general conceptsby pairing the predicate and arbalests of a353#-relation with the action and entity type slots ofa concept, respectively.
For example, consider amerger/acquisition frame (i) and a g-relation whichhas boh~h_~t as a predicate with its agent being AcmeCo_~.
and its object as Software Inc.The 0-relatlon interpreter first determines thatis related to ~ and that ~ is a memberof the action slot.
Since this comparison issuccessful, the interpreter then derives the entitytypes of Acme ~ and Software Inc from theabbreviations ~ and ~ Both have an entitytype of company, and the interpreter can match theargument structure of the #-relation with theentity type slots of (I), resulting in a merger/acquisition classification being assigned to thestory.In attempting to determine a generalcategorization, the interpreter is encounteringspecific company names and, perhaps, theirassociated industry names.
If these are containedin the concept base, they are also entered into theindex.
In this hypothetical example, if SoftwareInc.
was listed in the concept base and related tothe computer industry, then independent of thegeneral classification, the final index wou\]dcontain both the name of the company and itsindustry.
In this way, a user can specify aparticular company and receive all storiesmentioning it, although there may not be anyfurther index.Since the mapping of the interpreter betweenthe #-relations of the parser and the concepts inthe concept base is structure preserving, the itemswithin indexes can also exhibit certainrelationships.
Arg~llents which are either an agentor object in a @-relation will correspond toentity slots marked agent and object in a concept,respectively.
Thus, the index will reflect theroles in which the participants are engaged, e.g.,in a merger/acqulsitlon the buyer and the acquiredcould be distinguished.The next section provides several examples.4.0 Examp__~This section illustrates the type of indexeswhich NAS produces.
The stories are from Reutersand the results are actual outputs from NAS.Story__!lMontreal, Nov 3 Air Canada's 8,500groundworkers plan rotating strikes in the next fewdays following a collapse in contract talks withthe government-owned airline earlier today, a unionspokesman said.Chief union negotiator Ron Fontaine said theworkers will give 24 hours notice of a walkout butonly two hours notice of which airports ormaintenance centres they will strike.The airline has warned that it will lock outany workers participating in rotating strikes untila new contract  agreement is reached.
The unionlast went on strike in 1978, shutting down theairline for two weeks.Indexes:Strikes and LockoutsIndustry - AirlinesThe system has the concepts of strikes andlockouts and airlines industry in its concept base.The designator Airlines Industry is arrived at by arelation between Air Canada and its industry.
Themore general notion of Strikes and Lockouts appearsas a frame in the concept base of the form:(2) Strikes and LockoutsAction: plan, participateAgent: employeeObject: strikewhere the action slot consists of Rlan andi ~  and the agent slot is of type employeeof which Kroundworkers is so marked.
The wordstrike is simply marked as strike.
The parserreturns a #-relation for the first sentence withas a predicate, grQundworkers as the agent,and strikes as the object.
The g-interpreteroperates as described in the previous section andthe Strikes and Lockouts frame is satisfied.
Othertypical results of processing by NAS are stories 2and 3.
Only the first sentence of each areprovided since the remaining sentences of thesenews reports did not add any new information to theindex.StorM_/2Valley Forge, Pa, November 3 o Alco StandardCorp.
said it sold two of its gift and glasswarecompanies for an undisclosed amount of cash tomanagement groups in leveraged huyouts.Indexes:DivestmentIndustry - GiftwareTrade - GlassStory.3Kuwait, November 3 - A booby-trapped car bombexploded in Kuwait City on Tuesday morning, theofficial Kuwait news agency Knna report.Indexes:TerrorismLocation - KuwaitInstrument - BombingsSince the details of indexing are identical tothose above, they will be omitted here.
However,it is noteworthy to  indieat@ that the worddivestment does not appear anywhere in Story 2.
(Clearly, the verb sold alone could not trigger adivestment.)
Similarly, in Story 3 terrorism isnever used, yet NAS correctly indexes the story andalso identifies the location and the weapon orinstrument used.354,9.
1_,~~:~ ~ U<~,~t(:!
i n~.~')?h~.,:e ~!.re ,qevera!
ways in which NAS ca~ failto  p~_~:i,~?m an  a~ta\].ysi.'.~.
%f the  seamier  i.?
::~ds ano.~tkuown word ,  it wi l l  tl'Igger procedures i n  anattempt to ~nfer its category.
For I.astanee~ it~.~i\]% look ahead for abbreviat ions such as i_~!nq,~ozp.,  o:\[ co. and if any  of the striugs are preseut,the sca~m.er wil l  a~:sign name features with thehmned~ ately preceding unident i f ied words,(%deal.ly, in a ful ly deployed applieatJou, NASwould h:.ve interfaces to special ized databa~:es ofnames, ~;ay, of compsnies. )
Also, the lexleal~.
;canner, in fail:Lug to f ind a word In the lexicon~l!~d ~-~ t.\]~ a}~su\[tce of t:ertain triggeft\] (e.g., iloe),~.y~\[\].\] \]o\[el the unknown word a noun and pass theword to the parser  in the sentence.
This methodfor hand.ilng unknown words works well only ifverbs, z~dj natives, and preposit ions used in newsreports are near ly  exhaust ively contained in thelexicen~ and NAS has been extremely successful  byusing Eh is technique.Another  potent : ia l  p rob lem for  NAS i s  an~ l leomple i :e  o r  incorrect parse.
Both eases oftenindicat:e insuff ic ient info 13nat ion of a lexica\]item.
}~owever, during execut ion of NAS, if theparser c~nnot final a l icensing relat ionship for aprojeat i lm of an item in its input ~,;tream, it will\[move t:o the next word.
This pro ject ion wi l l  remaintmlieen.,:ed o~.
uninterpreted.
\]:f the word has asemantic mark that may tr igger a designator, thesemantic processor  wil l  use it for construct ing anindex, \].
'or example, Yen is a low-level designatorword and it is also semantical ly marked ascurrency ..
If the parser cannot l icense aproject ion c~entaining this word to a verb or apreposi t ion o~', perhaps, misassign~; a relation, theindex wJT.\], sti l l  contain ~9\[~ and currency report.What may be miss ing i s  a general, cat~.gorization,In add.iticn to ext:end\]ng and enhancing theeomponenL~ o i  the se~llalltic processor and parser,~he lleaY t~erm ni lerrs wil l  focus on establ ishingquantitat ive benchma~lks for both speed and accuracyt~sing stories from an active newswire.
While apre-protatype o_~ NAS with a dif ferent and\]ess- .qoph \[stlcated scanner and less-developedparsei?
a~d semantic processor rel ied on storiesf\[:om flol,py disks or manual entry, the currentversioll \[s l inked te a live feed.
A roughperformance measure of the  pre~prototype on a very.~al\[l sample of less than 50 sterles showed that it<,~as eompletel  2 correct for over 70% of the stories.The pres~nt semantic processor operates on amuch i_a~ get conceptual  base and while it ispremattzz',~ to make assessments, the system hasindexed (~le day of news stor.le.~ front Reuters andthe results were independent ly  examined by a groupof p~efe~slonal  indexers.
The indexers who hadmanual ly  l~dexed the stories snppl ied over 400topics for inclusion in the concept base of NAS,some of which were OOt re lewmt  to any of the~'4to~':i.e:~.
The:re was no communicat ion with theseindexers before or during tile process and whilethere ,:;ei:e "no formal cr i ter ia previously specified,the inde~;:e ~s found the results very promising.Gui'y.
'ent\].y, a precise evaluat ion Iaetrie for NAS I sbc~ing formulated with these indexers.Long- term work  w i l l  i nc lude  ~nha~lceme.nt to  thesemant ic  p roeessor  and  a re f inement  o f  i t sclass l f ic~t ion scheme.
Inferencing acrossc lass i f ied  s to r ies  i s  a l so  an  opt ion  as  we\] \ ] .
as  theeapabl l ity of a l lowing the user to query thoseprocessed s tor i~s  (using the  same p~r s;or) ?Automatin s tumnar i za t ion  of stories is also a fut:ur~possibi l ity.J\] ,0 Acknowledgf~\[mp~t~sSteve Gushing made va\]uabl.~ ~;omments o~ a~earl ier draft of this p~per.
Oa~ Su!\].ivau was ~co-developer and implementer of th?~ pre-prototype.On the present version of NAS, Steve Gander ha;;made signif icant contr ibut ions to its des:\[gll andimplementation._SLQ..I.
(9~f!~/<e n c_e_sAbney, S. , (1986) , "Lieen~qing and Pad:sing, "(personal conmlunication) .Berwick, R.C.
, (1987) , Princ:Ipilc~: BA~.q-d .
~f._q.~.s~J3g,Technical  Report  972, MIT Art~f le~al  Intei\] igeneeLaboratory, Cambridge, MAChomsky, N. , (\].981), I,ectur(!.k _ee (~o~qrDlit!~!
;t c~LldBinding, Foris Publications, Dordrecht, Holland.Chomsky, N. , (1986) , Knowledyg~; q f  _ ~.~\[~!~u~!ge,Praager, New York, N.Y.Hayes, P.J., L.E.
Knecht, and M.J. Cel\]io, (1988),"A News Story Categor izat ion System," PcL, c.~dj, ng~%of the Second Conference on A\[?
!2 \],!eLl .
N@_!Lu r.@j_L~!ngua_~q_ Processing, Aust:ie, Texas .Kashket, M,B, , (\].987) , A Gow~linme/~Lt~t\[~,Dil~Dg__ji~\[~@Technical Report: q93, bllT Artifie.Jal Intel l igenceI,aboratory, Cambridge, MA.Kuhns, R.J., (1986), "A Proiog \]hnplementatiou ofGovernment- Binding Theory, " Proceedings; ..... c!.fC_OLING'86, Bonn, West Germany.Kuhns, R.J., (in preparation), "A Tree-leas (;~Parser, " (tentative title).Marcus, M.P.
, (1980), A Theory.~ _ !~f  _ Sy_!~taq_t ~j~Recognit ion for Natural  Langu_age, 'File NIT Fress,Cambridge, MA.Milne, R., (1983), Resolvi!iog Lexical Amb~=g~iLyjn_.aDeterministJ  a Parser D. Phi\].
Dissertation,Univers i ty  of Edinburgh,Milne, R., (1986), "Resolving Lexieal Ambiguity ina Determinist ic  Parser," C opiputat~ona\] I,ingu~j~(.\[cs,Vol, 12, No, i.Thiersch, C. , and H.P.
Ko\].b, (1987) , "Parsing withPr inciples & Parameters: Prolegomena t:o a UniversalParser," (personal communication).Wehrli, E. ,  (1987), P ar~s~_~!~__.wi~t_~A__.~l!..:.gr.p3,_k_f~X.
(personal communication).355
