Perspectives of DBMT for monolingual authorson the basis of LIDIA-1, an implemented mock-upHerv6 BLANCHONGETA, Institut IMAG (UJF & CNRS)BP 53, 38041 Grenoble Cedex 9, Francee-mail : Herve.Blanchon @ imag.frAbstractDBMT is researched lm,'e in the context of future systemsfor the general public, where :t monolingual author wantsto translate into several anguages.
We have produced acomplete mock-up, IADIA-1, which demonslrales how ;|French IlyperCard TM stack could lie translated intoGerman, Russian and English.
We present Ihecontputational, linguistic and crgononlic aspects of tilemock-tip, and discuss them in the perspective of buiklingan operalional prototype in the future.KeywordsInteractive MT, DBMT for monolit/gtlal all lhor,Interactive disambiguation, lhoduetion of disamhigualiondialogues, I)isaibuted ,'uehiteeture, Whitebo'ud appro:tehIntroductionOur LIDIA project aims at studying the concept of'Personal Machine Translalion', or more precisely, I)BMTfor monolingual authors \[Boitet & Blanchon 19931, in amultilinguql setting.We have now completed the first imlflemcutalion of itmock-up, I,I1)IA-1.
Working on a inock-t\]p first, and notoq a prototype, has made it possible to tackle all aspecls ofsuch future systems, comlmtational, linguistic andergonomic.
Even if we could not solve all problems, wefell they m'e put in perspective.
Almost all other attemptsin the direction of 1)BMT have consklered only someaspects of the paradigm, leading to tmbalanced andsomethnes inadequate architectures.Ileforc a demonstration which shows the principles of theIralislalioli process, we present au overview of the COlt{ex\[of the iltock-tlp.
Then, we give some more details aboutthe mock-up ilsell, Ihe implemcnt:ttion techniques usedand the principles of Ihe interactive dis:tmbigualionprocess.
Finally, we discuss some important poitlls(interface, implementation techniques and tools, anddisambiguation process) of tile mock-up in the perspectiveof building an operational prototype in the filture.1.
Framework1.1.
The DBMTInteractive MT was first proposed in the sixties by M. Kaylot the MINI) system \[Kay 19731, iuld several projectsexpe,'imenled with variations of this design, notably therl'S project \[Melby 1981\] at Pmvo (75 - gl) ,  the Alvey N-tran project IWood 1989\] at Manchester (85 - 87), theDLT project \[Sadler 1989\] at Utrecht (82 - 88), Ihe I.MTprqicct \[P, imon, et al 1991\] from 1989 at seve,al IBMresearch centers, and the JETS project \[Tsutsumi, et al1993\] font 1989 at IBM Tokyo l~abs.Ill KBMT-89 \[Goodmau & Nirenburg 1991\] :It CMU-CCI,, queslions were also asked by the "augmentor" ifambiguities could not bc solved by the ontology.Among those projects where an interactive disambigtmtioncomponent was \[nlegraled, we were inspired by:- Ihe interface proposed in KBMT-g9,-- Ihe pattern-lmsed disambiguation process used forseveral ,~urflfiguities in t.MT,- the distriblfled "trchiteclure of JF.TS.1.2.
The LIDIA-I mock-upWe have chosen a well-define(l silualion as regard to Iheprofile of Ihe task Imd the profile of the user.
We haveintegrated the use of an interactive disambiguation processat the very beginning of the design.
This means Ihat thewhole set of ctmslraints was well established before westarled the implement:ilion.
The tr:mslatiou processorganization is described in \[Boitel & I\]lanchon 199311.In the scctlario we propose, a m(~tlolitigtl,lll \]:renchengineer creates technical documentation, i  the form of?
m I lypc,'(;ard stack, on a middle-range Macintosh, andhelps the system translate it into l:nglish, German andl;',ussian.
We have opted for a dislribuled architecture(author wt}rkstation on a m/leitllosh arid MT server on amini--IBM-4361).We have l~roduced a demonstration stack id)olit tilelinguistics ambiguily we have chosen to cope wilh inFrench.1.3.
The demonstation stackOur denlouslrali(m stack, called 'I,II)IA les histoires' ismade of story cards (Fig.
2) and treatment cards (Fig.
1).l,'igure I: a card and its objects115A story card is a collection of two or three stories sharingan ambiguous entence.
The author is supposed to solvethe mnbiguities through his understanding of the stories.Ilere is m~ example of a story em'd (see translations t ).Z~ c#.,q't~'nc_a r~t.,t_,ozld ua_z~e..de.~.
'N~e.,_ \]Le eapit',dt,,e antpl~rt6 tm ~ls~.
deChltle.
Ce ~se estanglMs.~uTf fm,  hls tn l re  \]---Le eapitalr~ ar'al>IX:~"~ 'tin x,-a..~ deCllhlo,.
Sorl navire esttt~s d~fi'aqchi.Figure 2: a story cardFor the puqmse of the demonstration, each story ispresented in a treatment card, where the context of theambiguous entence may be shown or hidden, l lere is thecard Ik)r tile story on the right.I.T\[a foment do .!
'.h!s!o!re .the sie.J( 12~cher le con leute  )Figure 3: a treatment cardTo have the story translated, the user will ask for thetranslation of dm fields of the treatment stack.
Note thattile user is never interrupted by a question.
Ol~jecls showthey are waiting for answers, and tile user decides whenand which question to answer.2.
DemonstrationThe user can choose the seleclion tool (v" )  and select Iheobject to be translated (Fig.
4).?
ILe eapitaine it rupl)ort6 un vitse de Chine.Figure 4: the selection rf an objectThe button of treatment state then appears.
When clickingon it (lig 5), a windoid or pop-up window appears (Fig.
7).Le eapititine a rapport6 un vase de Chine.
\]/...................................................................................................................................... %Figure 5: the user asks for the treatment s ate1 I.eft story : 'From China, the captaht has bring hack a vase.This vase is English'.
Right story: 'The c:q)tain has bring h;icka Chlnese vase.
llis boat is soiled.
''file task in progress is displayed in bold, tile previous onesin plain, and the following ones in italic.
'lChus, in figure 7the system is currently mmlyzing the text fragment.
:,:f5~;:: 6vanoernent: des traiterr lents ~,~::!
!~:0rthographe &Termi nologieTermes fig6sTtJpage textuelA nal UsePde~mb/~u~?,atianTrader~anAWmtr,~do~do# ~- 95Figure 6: windoid for the treatment stateIf the sentence has to be disambiguated, the author isasked to answer some questions.
The aulhor is advised anew question is ready by a new ilem in the menuMessage and by a button which appears over theconcerned object as in figure 7.
The user can choose tointeract at once or laterl ee ea l ) i ta ine  a rap l )o r t6  un  vase  tie Ch ine .
\] I .
.
.
.
m.IFigure 7: the object have a question of terminologySuppose the user clicks on the ~ button.
A firstqueslion appears (Fig.
8).11 y e plusleurs tnterpr~tatton,~ pour le phrase :Le capitaine a rapport6 un vase de chine.Cl~qlsissoZ 18 bonll~.0 de Chine, le capitaine a rapport6 un vase,Le capitaine a rapporte (un vase de chine).Figure 8: attachement disamhiguation (story 2)With the dialogue (Fig.
8), the author select theattachement of  'de Chine'  (Chinese).
Then, a seconddialogue appears (Fig.
9) where tile author chooses Ihesense of 'capitainc'.
The senses are l'oul~d in \])atax, amultilingual lexical database mock-up \[Sdrasset 19931.I1 q o I) l l lMeur3 ~?n~ ~?
?ept~bl?$ pour le mot :capitaineC~izis~z le ben.00fficier qui commande une compagnie d'infanterie, unescadron de cavalerie, une batterie d'artillerieOfficier qui commande un navire de commerce0 Chef d'une 6quipe sportiveFigure 9: word sense disambiguation (story 2)Once the dis,'unbigualion step h:cs been performed, tile usercan ask for the mmotated form of the text (Fig.
10) whichcontains the syntactic class 0f each occurrence and thesyntactic ftmction of each phrase.116(ke.&ort capltalnei&p,).&~uj:(o.&v F~pport{:,&v).&nv ~I(un,&art vase.&n'(de.~s Chine:&n'):&comP),&obJ ( ..&ponct)~ol Ml,'igure lO: annotated formThese annotations should help tile user understatLd tilestructure produced by the analyser.
We lhink thatexperienced users wou ld  like to shortcut some dialoguesby inserting some disambiguation marks flmmselves.To check the translalion produced in each target language,tile user can ask for the "reverse translation".
FromGerman and for the second interpretalion of tile example,he get :champs : Phrase du Corpus i~:;;i~:;:'; i~; ; ; ;~eTarapport6 un vase chinois.
~Il,'igure 11: reverse translation 2Finally, tile system produces a translated story card.Erste Geschichte ~-~Der l lauptmann hateine Vase  arts Chinamitgebrael~t.
Die Vaseist englisch.Zweite Geschichte j - -- ,Der  Kapi l f in trot einechinesL,;che Vavemi lgebracht ,  gem \[Jootis| sehr vert)lasst( I lehandhnlq ) ( l l ehand lunq)Figure 12: translation qf the two stories into German3.
Other aspectsAs it delnonslratiOLL Call llot show all cxlernal aspects (iftile inock-up, let us now give more details aboul lhcinterface, the implementation techtLiqtlcs, anLl Ihemclh(xlology for disambiguatitm.3.1.
Interaction tools,idRTrailer la s,~lec'tionTraitement sp~eial...Voir l'6tat du IrMtementVoir la r~trotraductionVoir les annolation~PMe{te LidiaPr6f~renees...Construirepiles e ib lesl,'igure 13: the menuOnce tile preferences have beendefined, tile author uses a ltlClltland a palette to inlcracl withl ,II)IA.The inleraclion wilh the atHhoris ma(le through tile LIDIA mentl(Fig.
13), the Messages IIlelltl,a palette (Fig.
14), feedbackbuttons (Fig.
1) and windoids(Fig.
\[).The nLenu shown hew.
offers 8choices: process the selectedobject according to tile set of preferences, process omeobject with a particular preference set, show tile2 'The captain has brought back a Chinese vase.
'trealillcnts' progress, show the reverse translatiOll, showtile annolations, how the palelte, modil3t ile preferencesand build tile target stacks.Figure 14: the paletteThe user can also askfor tile f requentl rca lmenls  with itpalette.
In the first lineare displayed the 1.1DIAIools (process lheselected ohject, show Ihe \[reiltinellt progress, show theannotations and show tile reverse trallS\]aliOll).
Ill tilesecond lille are Ihe browsing tools.The translation process is divided into two steps: lhesland;udisalion and tile clarification.
Wc lrwe seen tileclarification pr(Ecss during 1he (lelllOllStration, let us havea l(?lk on tile standardization step.3.2.
ImplementationThe implememati(m is cha,aclerizcd by Ihe use of adistributed archilccltlre, a whilelmard apluO;~ch , andobject-orienled techniques.a.
D is t r ibuted  architectureThree machines (Fig.
15) are involvc(l in the IiallslaliOllprocess.On die aulhor's workstation tile HyperCard Kernel sendsand receives nlessages lronl the LIDIA kernel whichorganists the translation process for each object.
The LIDIAKernel sends transladotl jobs to lhe Translation server vialhe Communication serve/'.
The LIDIA Kernel also asks 1oprepare the disambigualion questions.b.
Whi teboard  approachIgor each object to be hanslated, the LJDIA Kernel creates amirror object (it text file) in which arc sto,ed allinformation required by lhe lranslalion process amlnecessary for Ihe construction of tile target stack.
Wedistinguish Ix~twccn static trod dynamic id/brmation.
Staticinlormalion is whal is altache(I by llyperCard to eachobject.
It is necessary to construcl target slacks.
I)ynamicinlormation is any information used by l ADIA to translalethe COlltcnt of all object.These files can be cons|tiered as whiteboard.v as defined in\[Scliyman & Be|let 19941.
Unlike Ihc blackboard, tilewhiteboard is accessed only by a coordinator (the IJDIAKernel), nnd nol by tile componcnls (Disambiguation kerneland RemoteMacMain-Frame).
'|'he main advaulage of thisarchitecture is 1o allow easy integral|tin of existing newcontlXme,lls without h;tving to modify them.c.
Object oriented techniquesExcepI tile lingware, all coInpOllCnlS list ol:tjccl-oricnlc(Iprogramming.
The module for tile Terminology , Ihe idioms;tn(l the Typage as tile kernel of tile Communication serverare written in l iyperTalk the l lyperCard scriptinj;language.The LIDIA serveur is writlen with CI.
()S (MCI.).
Althoughencapsulated within tile Sallle cnvironmenl, tile LIDIAKernel and Ihe Disambiguation Kernel communicate byexchanging messages anti can thell be distributed.117-Author 's  workstationiHyperCard .
.
.
.r'?++?0y-l r+ +me ql-Serveur LIDIA - -  I ' t  --' -3i LIDIA Kernel-Serveur de d~sambiguYsation'--~\[ gisam blguatlon Kernel ..... q\ ]Operatorsq  rPattern Matcher -~-Communication serverrscriptsr upLoadSc ript - - \ ]  \[downL-oadSeript qR e mot e M a c Main Fra m;~""~ ~.~.~.~ 1 r"C'erno',+F+---\]( ?
,  .... \]Figure 15: the architecture ofLIDIA-IThe use of messages and olject-oriented programufiugtechniques i close to the actor model used in the contextof distributed cooperative systems.3.3.
disambiguation'phvb'- -  i )hvb +dgn' - -'tlg'n' - -  gn 'gl ?gn - -  oh j l  gitsuj ~ arg l  otto,l,qe' 'capitaine' 'a' 'rapport6' 'un' 'vase' 'de.'
'Chine'1?
'capitaine' 'avoir'  ' rappal ler '  'mr 'vast '  'de' 'Chiut 'd 11 g V d I1 S II(1~ gov  aUX gov  c:t~ gov  reg gov'phvb'g'd--n' ph vb - -  - -  - -  'dgn' 'dgn'gll --- gn gn.'
' ob j l  citeg l  -.......T unde, / \le '  'capitaint '  'a' 'rapportS' 'un' 'vast '  'tlt' 'Chine'\]e,' 'capitaine' 'avoir'  'ral',potler' 'un' 'vase' 'de' 'Chim;'(\[ II g V d U S II( l~ gov  aUX gov  dt~ gov  l~3g gc*vFigure 16: multisohaion, multileveland concrete structureX:PHVB.v++Patron 12X:PHVBy:SUJ <!NV~I  , V:CIRCAA2  "/ \/ x / \Patron 13Figure 17:2 pattermr12 is:The disambiguati0n process isorganized around a pattern marcher\[Blanchon 199211.
For five out of theeight c lasses of ambigui tyconsidered ill tile mock-up, we use amechanism of pattern matching withunif ication of variables whichallows to recognize tile ambiguityand produce tile disambiguationdialogue.
A dialogue constructionmethod is associated with eachpattern.
These melheds rely on a setof thirteen operators.Figure 16 shows the trees producedfor the sentence 'Le capitaine arapport6 un vase de Chine.
'The p'ttterns (Patron "i2 & Patron13 ) used to recognize the ambiguityin our example are shown in Fig.
17.The method associated with imttern'\]ke<te(Y) rll-~tQ(Z) l<trc\]-It:h%qe('\[bxte('\['), qt~t-o(V) )which produces the lolIowing text:Le eapitaine a rapport6 tun vase de chine.
)The method associated wid\] pattern 13 is:"\[t~:e(V) , ffbxte (Y) ~Ibxtc,(Z) 'l~:,xte (T)which produces tim following text:de Chine, le capitaine a rapport6 un vase .4.
Towards an operational prototype4.1.
InterfaceFor a prototype, tim modules for tile terminology and tileidioms should use, at least, a lemmalizer, and with the textcategorization module they shouM not rely on llyperCardany more (Fig.
17).Our implementation f the 'guided kmguages' idea is stillvery primilive.
We hope to develop working techniquesfrolii our stu(lies on 'utlerence slyles' and 'lexl genres'.The inlerfaces of the standardization modtfles are only afirst sketch.
The iconic buttons used to ask for Ihe userintervention hgtve to be redesigned (we haven't fotmd agood solution yet).
On Ihe olher hand, the etu'sors for tileI31)IA tools and (he feed-back bultons arc homogenousand could be kept (l:ig.
1 & 7).Ill a future work, it will be necessary to adapt he dialoguetype to the skills of tile audmr.
The kind of dialogue wehave developed allows only the user t(t select the rightan'dysis.
A new dialogue type could allow the user to getinformation and examples about lhe ambiguity currenllysolved.
The user could then change its text or insertdisambiguating marks.4.2.
Implementation techniquesThe current iml)lementalion i  terms of software antihardware may be characlerizL:d ,as integrated, distributedand extensible.118Using four servers (LIDIA, I)isambiguation, Communication,aud Translation) collaborating through messages and tcxlfiles as made it relatively easy to integrate tools running indifferent hardware attd/or sof(w,'ue nvironments.For using DBMT at home, a simple cmnmunication servercould pilote a modem to request services from a LII)IAserver, exactly as a mail utility.
With such au architecture,a low-cost personal computer would be usable formtthoring and translating.Using object-oriented programming techuklues makes thesystem easy to custo,nize.4.3.
Implementation toolsThe dictionaries used by the Ariane-G5 lingwarc arc buildfrom Parax \[S6rasset & Blanc 1993\].
For a prototype weneed a more powerfull and flexible tool, as also describediu \[SOrasset & Blanc 19931.For developing (he lingware, we have used Ariane-G5,designed for heuristic programming in the context ofsnblanguages.
We plan to develop some new SpecializedLanguages for l,ingnistic Programming, thereby workiugiq the direction of 'ambiguous programming' IBoilc(1993\].4.4.
Disambiguation processIt has bceu clear from the begiuning that we would not beable to find, for each class of ambiguity we have chosen tosolve, a uuique resolution method.
Keeping in mind thekind of dialogues we wanted, we have cxamiued a largequanlity of ambiguity configurations and have arrived al 9problem patterns.The use of at strategy, organizing the disaml)igualkmprocess, the use of patterns and methods implemented witha set of basic operators makc the process highlycustomizable.
That's why we think about an etwi,'onmentfor the description of disambiguation pr(mess.This environment integrates three modules: a ntodule forthe pa(lerns definition, a module for the defiuition of thedialogue produclion methods, ;rod finally a module for thedescriptiou of the disambiguation shategy.ConclusionThe implementation of our mock-up I , IDIA-I ,  firs(concrete xperiment towards the I)BMT 'fo," cveryNxly',has been done 'in breadth' at first, and 'in dcplh' o11cerlaiu points.
It was very important o tackle all theaspects.
Previous experiments have showll Ihe necessity ofa broad conception for a MT system to succeed, l)uringot,r work we have seen that tile ergonomics goals cautrigger compulational nd linguistic choices.
The situalionis the same for (he compulati(mal or linguistic goals.The idea of the interactive clarilication approach in thecontext of natural language processing seems now tointerest a real cotmnunity.
For MT, the current work of\[Wehrli 1993\], \[Yamaguchi, et al 1993\], atul lhc ongoingwork on JETS \[Tsutsumi, et al 199311 arc some goodexamples.
For speech systems, tile interactive clarificationapproach is also a solution as shown iu \[Fraukish, et aL1992\] and proposed in \[Ainsworth & Pratt 1992\] and\[Saito 1992\].As far as 1he l'tlture is concerned, we have begun to studymultimodal interactive disambiguation with ATR-ITL in amore general framework than 1,1DIA-1.
We hope to geladequate support R}r developing a more larger-scaleprototype in the next few years.ReferencesAlnswor(h, W. A.
& Pratt, S. R. (1992).
Feedback strategiesfor error correction in speech recognition systems, inInternational Journal of Man-Machine Studies.
w)l. 36(6) : pp.833 842.lllanchon, 1I.
(1992).
A Solutimz to the l'roblem of hlteractivel)ismtlbiguation.
Prec.
(/cling-92.
Nantes, lZrance.
23-28 juillet1992, w~l.
4/4 : pp.
1233-1238.lloitet, C. (1993).
Crucial Open Problems in MachineTranslation and blterpretation.
Prec.
Symposium tm Naturall.anguage Prc, cessing in Thailand.
Bangkok.
17-21 March 1993,vol.
: pp.
l-- 29.lhfitet, C. & l|lanchon, I1.
(1993).
Dialogue-based MTformonolingual attthors attd the LII)IA project.
Prec.
NI.PRS'93.Fukuoka.
Jalum.
6-7 d6ccntbre 1993, w~l.
l/t : pp.
2(18-222.Franklsh, C., Jones, I).
& llapeshl, K. (1992).
l)ecline inaccuracy of automatic aTwech recognition as re ftttlcliotl of timeon task: flttigue or voice drift?
in Intcrmdiomd Jourlml t~l Man-Machine Studies.
wfl.
36(6) : pp.
797-8(6.Goodman, K. & Nirenlmr!a, S. (eds), (1991).
771e KBMT"l'roject: A case study in knowledge-based machine translation.Morgan Kaufiv*atm.
San Mateo, (~alifornia.
331 p.Kay, M. (1973).
77te MINI) system, in C'ourant ContputerScience Symposium 8: Natural Language Pl'ocessil+g.Algorithmics Press, Inc. New York.
pp.
155-188.Melby, A. K. (1981).
Translatotw a,d Machines - Can theycooperate ?
in MIi'I+A.
vol.
26(1) : pp.
23-34.R immt, M. & al.
(1991).
Advances in Machine TranslationResearch in 1BM.
l'roc.
Machine "I'ranslatiml Summit Ill.Washington, D.C. l-,l juillet 1991, w~l.
1/1 :pp.
11-18.Sudler, V. (1989).
Working with analogical semantics :l)isambiguation techniques in 1)LT. Floris Publicatimls.I)ordrecht, I lolhmd.
256 p.,qaito, !1.
(1992).
lnteractiw~ Speech Understanding.
Prec.Coling-92.
Nantes, France.
23-2g juillet 1992, vol.
3/4 : pp.1053-1057.Neligman, M. & B~itet, C. (1994).
A "whiteboard" architectureJor automatic ,qwech translatio,.
Prec.
Inler,udiona\] Symposiumon Sf, okcn l)ialoguc.
Wascda University, "('l~kyo.
(-12 novembre1993, w;I. :pp.
4.N~r.asset, (;.
& Bl'anc, E. (1993).
Utw apl,'oche par acceptionpour les bases lexlcales multilingues.
Prec.
T-:I'A-TAO 93.Montrdal, Canada.
30 semptembre-2 oclobre 1993, wfl.
: pp.
}kpar~6tre.Tsu(sumi, T. & al.
(1993).
E.vample-Based Approach toMachine Translation.
Prec.
Prcmig:res journdes fi'anco-japonaisestir la traductimtassist6e par ordimLteur.
Amlmssade tie France allJa\[lt)ll, Tokyo.
Japon.
15-16 mars 1993, w~l.
1/1 : pp.
161-169.Wehrli, 17',.
(1993).
Vers un syst6,ne de truduction intcractif, inI.a traductique, l.es presses de l'l(niversit6 de Montrdal,AUPF.I.F/I II(F.F.
pp.
423-432.Wood, IVl.
M. (1999).
Japanese for speaketw of lgnglish: ThetlMIST/ShefJ'ield Machine Translation l'roject, in RecentDevelopments and Applicatim~s of Natm'al l:mguage P,'ocessing.Kogan Page Limited.
l.ondon, pp.
56-64.Yamaguchl, M. & ul.
(1993).
An Interactive Method forSemantic Disambiguation i Sentences by Selecting l,.'xamples.Prec.
NLI~RS'93.
Fukuoka, Japon.
6-7 ddcembre 1993, vol.
: pp.208-222.119
