Proceedings of the Linguistic Annotation Workshop, pages 117?120,Prague, June 2007. c?2007 Association for Computational LinguisticsITU Treebank Annotation ToolGu?ls?en Eryig?itDepartment of Computer EngineeringIstanbul Technical UniversityIstanbul, 34469, Turkeygulsen.cebiroglu@itu.edu.trAbstractIn this paper, we present a treebank anno-tation tool developed for processing Turk-ish sentences.
The tool consists of threedifferent annotation stages; morphologicalanalysis, morphological disambiguation andsyntax analysis.
Each of these stages areintegrated with existing analyzers in orderto guide human annotators.
Our semi-automatic treebank annotation tool is cur-rently used both for creating new data setsand correcting the existing Turkish treebank.1 IntroductionAnnotated corpora is essential for most of the nat-ural language processing tasks.
Developing newannotated corpora becomes crucial especially forlesser studied languages where we encounter manydifficulties for finding such data.
Turkish is oneof the languages which still suffer from scarcityof annotated resources.
The most reliable data setfor Turkish is the Metu-Sabanc?
Turkish Treebank(Oflazer et al, 2003) consisting of 5635 sentencesannotated with dependency structures.
Unfortu-nately, the data size of this treebank remained un-changed during recent years.
There exist also someother small data sets manually pos-tagged by differ-ent research groups.In this study, we introduce our treebank annota-tion tool developed in order to improve the size ofthe existing data sets for Turkish (particularly thetreebank).
Our main motivation for developing anew tool is the inability of the existing tools (e.g.Atalay et al (2003) and DepAnn (Kakkonen, 2006)which seems to be the most suitable tools for ourtask) in either reflecting the peculiar morphologi-cal and dependency structure of Turkish or provid-ing suitable automatic analyses for guidance.
Wealso aim to speed up the annotation process by usinggraphical user-friendly interfaces and transformingthe annotation process from a manual (starting fromscratch) procedure into a controlling and correctingprocedure.
In the rest of this paper, we first intro-duce the framework of the tool and then the detailsof its different annotation stages.
We then close withconclusions and future work.2 Framework<automatic>MorphologicalAnalysis<manual>MorphologicalDisambiguation<manual>DependencyAnalysisPlugin 1:MorphologicalAnalyzerPlugin 2:POS taggerPlugin 3:ParserinputoutputStage 1Stage 2Stage 3Figure 1: Data FlowITU treebank annotation tool takes raw sentencesas input and produces results in both the Turk-ish treebank original XML format (Atalay et al,2003) and Conll treebank data format (Buchholz and117Figure 2: Morphological Analysis and Disambiguation ScreenMarsi, 2006) which is now recognized by many ofthe state of the art dependency parsers.The tool consists of three levels of annotationand can be used to produce results for each ofthem; these are morphological analysis, morpho-logical disambiguation and syntax analysis stages.Each of these stages uses plugins in order to guidethe human annotators (referred as annotators in theremaining part).
Figure 1 gives the data flow be-tween the annotation stages and the plugins whichwill be explained in detail in the following sections.3 Morphological AnalysisThe most important characteristic of Turkish whichdistinguishes it from most of the well-studied lan-guages is its very rich morphological structure.Turkish which is an agglutinative language has avery productive derivational and inflectional mor-phology.
This rich structure of the language hasbeen represented in the literature (Oflazer et al,2003; Hakkani-Tu?r et al, 2002; Eryig?it and Oflazer,2006) by splitting the words into inflectional groups(IGs) which are separated from each other by deriva-tional boundaries.
Each IG is then annotated with itsown part-of-speech and inflectional features.We are using the morphological analyzer ofOflazer (1994) which provides all the possible mor-phological analyses together with the IG structure.The output provided by the morphological analyzerfor each word in the example sentence ?S?imdi eskiodanday?m.?
(I?m now in your old room.)
can beseen from Figure 2 (the listed items under eachword with radio buttons in front).
We can see fromthe figure that the derived word ?odanday?m?
(I?min your room) is composed of two IGs:(1,?oda+Noun+A3sg+P2sg+Loc?)?
??
?IG1(2,?Verb+Zero+Pres+A1sg?)?
??
?IG2The first IG is the noun ?oda?
(room) whichtakes the meaning of ?in your room?
after takingthe 3rd singular number-person agreement (+A3sg) ,2nd person possessive agreement (+P2sg) and loca-tive case (+Loc) inflectional features.
The sec-ond IG is the derived verb ?being in your room?in present tense (+Pres), with 1st singular number-person agreement (+A1sg) inflectional features1.The morphological analysis stage is totally auto-matic except that the user can enter other analysesto the text boxes under each word if the correct oneis not within the above listed items or the analyzercouldn?t suggest any analysis.
This latter case gen-erally occurs for numerical values (e.g., numbers,1+Zero means no additional suffix is used for the derivation.118dates) and unknown words.
For numerical values,we use a preprocessor to produce the analysis, butfor unknown words, the annotators are asked to en-ter the appropriate analysis.4 Morphological DisambiguationThe second stage is the morphological disambigua-tion where the annotator is asked to choose one ofthe possible analyses for each word.
The annota-tor may consult to an automatic analyzer by clickingthe checkbox at the top of the screen in Figure 2.In this case we activate the part-of-speech tagger ofYu?ret and Tu?re (2006) which uses some rules auto-matically derived from a training corpus.
The resultsof this tagger is reflected to the screen by selectingautomatically the appropriate radio button for eachword.
After finishing the disambiguation, the anno-tator saves the results in XML format (shown at thebottom panel of Figure 2) and proceeds trough thesyntax analysis.5 Syntax AnalysisThe syntactic annotation scheme used in the Turk-ish treebank is the dependency grammar represen-tation.
The aim of the dependency analysis is tofind the binary relationships between dependent andhead units.
The dependency structure of Turkishhas been mentioned in many studies (Oflazer et al,2003; Oflazer, 2003; Eryig?it et al, 2006) and it isargued that for Turkish, it is not just enough to de-termine the relationships between words and oneshould also determine the relationships between in-flectional groups.
Figure 3 gives an example of thisstructure2.
In this screen, the annotator first selectsa dependent unit by selecting the check box under itand then a head unit and the appropriate dependencyrelation from the combo box appearing under theconstructed dependency.
In this figure, we see thatthe adjective ?eski?
(old) is connected to the first IGof the word ?odanday?m?
since it is the word ?oda?
(room) which is modified by the adjective, not thederived verb form ?odanday?m?
(I?m in your room).On the other hand, the adverb ?s?imdi?
(now) is con-nected to the second IG of this word and modifies theverb ?being in the room?.
The graphical interface isdesigned so that the annotator can easily determinethe correct head word and its correct IG.2The arrows in the figure indicates the dependencies ema-nating from the dependent unit towards the head unit.In each step of the syntactic annotation, the par-tially built dependency tree is shown to the anno-tators in order to reduce the number of mistakescaused by the inattentiveness of the annotators (suchas the errors encountered in the original Turkishtreebank; cycled dependencies, erroneous crossingdependencies, unconnected items, dependencies tononexistent items).
Extra cautions are taken withsimilar reasons in order to force the annotators toonly make valid annotations:?
Only the check boxes under final IGs of thewords become active when the annotator isabout to select a dependent since the dependen-cies can only emanate from the last IGs of thedependents.?
The dependents may only be connected to theIGs of other words, thus the check boxes of theIGs within the dependent word become passivewhen selecting a head unit.Similar to the morphological disambiguationstage, the annotator may want to consult to an auto-matic analyzer.
We use the data-driven dependencyparser of Nivre et al (2006) as an external parsingguide which is shown to give the highest accuracyfor Turkish and for many other languages.
The out-put of the parser (pre-trained on the Turkish tree-bank) is reflected to the screen by automatically con-structing the dependency tree.
The annotator maythen change the dependencies which he/she finds in-correct.6 Conclusions and Future WorkITU treebank annotation tool is a semi-automaticannotation tool tailored for the particular morpho-logical structure of Turkish where we need to an-notate units smaller than words.
It has three an-notation levels and uses pluggable analyzers in or-der to automate these levels.
These are a rule-basedmorphological analyzer, and machine learning basedpart-of-speech tagger and dependency parser.
Thetool which aims to provide a user-friendly platformfor the human annotators, also tries to minimize thenumber of errors due to the complexity of the anno-tation process of Turkish.
The tool is designed andused only for Turkish in its current state, howeverit can be used for other languages with similar mor-phological structure (particularly other Turkic lan-119Figure 3: Dependency Analysis Screenguages) by replacing the external analyzers.
By us-ing this tool, we observed significant accelerationboth in correcting the existing treebank and devel-oping new data sets.
However education of new hu-man annotators still remains as a difficult point andrequires a lot of time.
Hence in the future, we aim todevelop online education tools which teach the an-notators and tests their performance.
We also aim tocarry the platform to the web and supply an environ-ment which can be reached from different places byvolunteer researchers and collect the data in a singleplace.AcknowledgmentThe author wants to thank Kemal Oflazer for hisvaluable comments, Engin Tas?k?n and Cihat Eryig?itfor their help during the development of the tool.ReferencesNart B. Atalay, Kemal Oflazer, and Bilge Say.
2003.
Theannotation process in the Turkish treebank.
In Proc.
ofthe 4th International Workshop on Linguistically In-terpreteted Corpora, Budapest.Sabine Buchholz and Erwin Marsi.
2006.
Conll-Xshared task on multilingual dependency parsing.
InProc.
of the 10th CoNLL, pages 149?164, New York,NY.Gu?ls?en Eryig?it and Kemal Oflazer.
2006.
Statistical de-pendency parsing of Turkish.
In Proc.
of the EACL,pages 89?96, Trento.Gu?ls?en Eryig?it, Joakim Nivre, and Kemal Oflazer.
2006.The incremental use of morphological information andlexicalization in data-driven dependency parsing.
InProc.
of the ICCPOL, pages 498?507, Singapore.Dilek Hakkani-Tu?r, Kemal Oflazer, and Go?khan Tu?r.2002.
Statistical morphological disambiguation foragglutinative languages.
Journal of Computers andHumanities, 36(4):381?410.Tuomo Kakkonen.
2006.
Depann - an annotation toolfor dependency treebanks.
In Proc.
of the 11th ESSLLIStudent Session, pages 214?225, Malaga.Joakim Nivre, Johan Hall, Jens Nilsson, Gu?ls?en Eryig?it,and Stetoslav Marinov.
2006.
Labeled pseudo-projective dependency parsing with support vector ma-chines.
In Proc.
of the CoNLL-X, pages 221?225, NewYork, NY.Kemal Oflazer, Bilge Say, Dilek Z. Hakkani-Tu?r, andGo?khan Tu?r.
2003.
Building a Turkish treebank.In A.
Abeille?, editor, Treebanks: Building and Us-ing Parsed Corpora, pages 261?277.
Kluwer, Dor-drecht/Boston/London.Kemal Oflazer.
1994.
Two-level description of Turk-ish morphology.
Literary and Linguistic Computing,9(2):137?148.Kemal Oflazer.
2003.
Dependency parsing with an ex-tended finite-state approach.
Computational Linguis-tics, 29(4):515?544.Deniz Yu?ret and Ferhan Tu?re.
2006.
Learning morpho-logical disambiguation rules for Turkish.
In Proc.
ofthe HLT-NAACL, pages 328?334, New York, NY.120
