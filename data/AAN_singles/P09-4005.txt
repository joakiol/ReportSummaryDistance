Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 17?20,Suntec, Singapore, 3 August 2009.c?2009 ACL and AFNLPA Web-Based Interactive Computer Aided Translation ToolPhilipp KoehnSchool of InformaticsUniversity of Edinburghpkoehn@inf.ed.ac.ukAbstractWe developed caitra, a novel tool that aidshuman translators by (a) making sugges-tions for sentence completion in an inter-active machine translation setting, (b) pro-viding alternative word and phrase trans-lations, and (c) allowing them to post-edit machine translation output.
The tooluses the Moses decoder, is implemented inRuby on Rails and C++ and delivered overthe web.1 IntroductionToday?s machine translation systems are mostlyused for inbound translation (also called assim-ilation), where the reader accepts lower qualitytranslation for instant access to foreign languagetext.
The standards are much higher for outboundtranslation (also called dissemination), where thereader is typically an unsuspecting customer or cit-izen who is seeking information about products orservices, and human translators are required forhigh-quality publication-ready translation.While machine translation has made tremen-dous progress over the last years, this progress hasmade little inroads into tools for human transla-tors.
Although it has become common practice inthe industry to provide human translators with ma-chine translation output that they have to post-edit,typically no deeper integration of machine transla-tion and human translation is found in translationagencies.An interesting approach was pioneered by theTransType project (Langlais et al, 2000).
The ma-chine translation system makes sentence comple-tion predictions in an interactive machine trans-lation setting.
The users may accept them oroverride them by typing in their own translations,which triggers new suggestions by the tool (Bar-rachina et al, 2009).But also other information that is generated dur-ing the machine translation process may be usefulfor the human translator, such as alternative trans-lations for the input words and phrases.We are at the beginning of a research programto explore the benefits of these different types ofaid to human translators, analyze user interactionbehavior, and develop novel types of assistance.To have a testbed for this research, we developedan online, web-based tool for translators.2 OverviewCaitra is implemented in Ruby on Rails (Thomasand Hansson, 2008) as a web-based client-serverarchitecture, using Ajax-style Web 2.0 technolo-gies (Raymond, 2007) connected to a MySQLdatabase-driven back-end.
The machine trans-lation back-end is powered by the open sourceMoses decoder (Koehn et al, 2007).
The inter-active machine translation prediction code is im-plemented in C++ for speed.
The tool is deliveredover the web to allow for easier user studies withremote users, but also to expose the tool to a widercommunity to gather additional feedback.
You canfind caitra online at http://www.caitra.org/Caitra allows the uploading of documents us-ing a simple text box.
This text is then processedby a back-end job to pre-compute all the neces-sary data (machine translation output, translationoptions, search graphs).
This process takes a fewminutes.Finally, the user is presented with an interfacethat includes all the different types of assistance.Each may be turned off, if the user finds it distract-ing.
The user translates one sentence at a time,while the context (both input and user transla-tion, including the proceeding and following para-graph) is displayed for reference.In the next three sections, we will describe eachtype of assistance in detail.3 Interactive Machine TranslationThe idea of interactive machine translation hasbeen greatly advanced by work carried out in theTransType project (Langlais et al, 2000), with thefocus on a sentence-completion paradigm.
Whilethe human translator is still in charge of creating17Figure 1: Interactive Machine Translation.Caitra uses the search graph of the machine trans-lation decoder to suggest words and phrases tocontinue the translation.the translation word by word, she is aided by a ma-chine translation system that interactively makessuggestions for completing the sentence, and up-dates these suggestions based on user input.
Thescenario is very similar to the auto-completionfunction for words, search terms, email addresses,etc.
in modern office applications.See Figure 1 for a screenshot of the incarnationof this method in our translation tool.
The user isgiven an input sentence and a standard web textbox to type in her translation.
In addition, caitramakes suggestions about the next word (or phrase)to be added to the translation.
The user may acceptthis (by pressing the TAB key), or type in her owntranslation.
The tool updates the prediction basedon the user input.The predictions are based on a statistical ma-chine translation system.
Given the input and thepartial translation of the user (called the prefix),the machine translation system computes the opti-mal translation of the input sentence, constrainedby matching the user input.
This translation is pro-vided to the user in form of short phrases (mirror-ing the underlying phrase-based statistical transla-tion model).In contrast to traditional work on interactive ma-chine translation, the displayed suggestions con-sist of only very few words to not overload thereading capacity of the user.
We have not yet car-ried out studies to explore the optimal length ofsuggestions, or even when not to provide sugges-tions at all, in cases when they will be most likelyuseless and distractive.We store the search graph produced by the ma-chine translation decoder in a database.
Duringthe user interaction, we quickly match user inputagainst the graph using a string edit distance mea-sure.
The prediction is the optimal completionpath that matches the user input with (a) minimalFigure 2: Translation Options.
The most likelyword and phrase translation are displayed along-side the input words, ranked and color-coded bytheir probability.string edit distance and (b) highest sentence trans-lation probability.
This computation takes place atthe server and is implemented in C++.While caitra only displays one phrase predic-tion at a time, the entire completion path is trans-mitted to the client.
Acceptance of a system sug-gestion will instantly lead to another suggestion,while typed-in user translations require the com-putation of a new sentence completion path.
Thistypically takes less than a second.Preliminary studies suggest that users accept upto 50-80% of system predictions, but obviouslythis number depends highly on language pair anddifficulty of the text.4 Options from the Translation TablePhrase-based statistical machine translation meth-ods acquire their translation knowledge in form oflarge phrase translation tables automatically fromlarge amounts of translated texts (Koehn et al,2003).
For each input word or input word se-quence, this translation table is consulted for themost likely translation options.
A heuristic beamsearch algorithm explores these options and theirordering to find the most likely sentence trans-lation (which takes into account various scoringfunctions, such as the use of an n-gram languagemodel).These translation options may also be of interestto the user, so we display them in our translationtool caitra.
See Figure 2 for an example.
For in-stance, the tool suggests for the translation of theFrench magnifique the English options wonderful,beautiful, magnificent, and great, among others.The user may click on any of these phrases and18Figure 3: Post-Editing Machine Translation.
Starting with the sentence translation of the machinetranslation system, the user post-edits and the tool indicates changes.they are added into the text box.
The user mayalso just glance at these suggestions and then typein the translations herself.The options are color-coded and ranked basedon their score.
Note that since these options are ex-tracted from a translated corpus using various au-tomatic methods, often inappropriate translationsare included, such as the translation of Newmaninto Committee.For each translation option a score is computedto assess its utility.
This score is the (i) future costestimates of the phrases (ii) plus the outside costestimates for the remaining sentence (iii) minusthe future cost estimate for the full sentence.
Thisnumber allows the ranking of words vs. phrases ofdifferent length.
The ranking of the phrases neverplaces a lower scoring option above a higher scor-ing option.
The absolute score is used to colorcode the options.
Up to ten table rows are filledwith options.Since the user may click on the options, or maysimply type in translations inspired by the options,it is not straight-forward to evaluate their useful-ness.
We plan to assess this by measuring trans-lation speed and quality.
Experience so far hasshown that the options help novice users with un-known words and advanced users with suggestionsthat are not part of their active vocabulary.
It maybe possible that these options even allow users thatdo not know the source language to create a trans-lation, as in work done by Albrecht et al (2009).5 Post-Editing Machine TranslationThe addition of full sentence translation of the ma-chine translation system is trivial compared to theother types of assistance.
When a user starts a newsentence using this aid, the text box already con-tains the machine translation output and the useronly makes changes to correct errors.See Figure 3 for an example.
Caitra also com-pares the user?s translation in form of string editdistance against the original machine translation.This is illustrated above the text box, to possiblyalert the user to mistakenly dropped or added con-tent.6 Key Stroke LoggingCaitra tracks every key stroke and mouse click ofthe user, which then allows for a detailed anal-ysis of the user?s interaction with the tool.
SeeFigure 4 for a graphical representation of the useractivity during the translation of a sentence.
Thegraph plots sentence length (in characters) againstthe progression of time.
Bars indicate the sentencelength at each point in time when a user actiontakes place (acceptance of predictions are red, DELkey strokes purple, key strokes for cursor move-ment grey, and key strokes that add characters areblack.
)In the example sentence, the user first slowlyaccepted the interactive machine translation pre-dictions (second 0-12), then more rapidly (second12-20), followed by a period of deletions and typ-ing that did not make the translation longer (sec-ond 20-30).
After a short pause, predictions wereaccepted again (second 33-40), followed by dele-tions and typing (second 40-57).We are currently carrying out user studies tonot only compare the productivity improvementsgained by the different types of help offered tothe user, but also to identify, categorize and ana-lyze the types of activities (such as long pauses,19Input: ?Un ?echange de coups de feus?est produit, et la moiti?e des ravisseursont ?et?e tu?es, les autres s?enfuyant?, a ditce responsable qui a requis l?anonymat.MT: ?A exchange of fire occurred, andhalf of the kidnappers were killed, theother is enfuyant,?
said this official whohas requested anonymity.User: ?An exchange of fire occurred,and half of the kidnappers were killed,the others running away?, said thesource who has requested anonymity.Figure 4: User Activity.
The graph plots the time spent on translation (in seconds, x-axis) against thelength of the sentence (y-axis) with color-coded activities (bars).
For instance, at the interval second 2?3,three interactive machine translations predictions were accepted.slow typing, fast typing, clicks on options, accep-tance of predictions) to gain insight into the typeof problems in (computer aided) human transla-tion and the time spent to solve these problems.7 ConclusionsWe described the new computer aided translationtool caitra that allows us to compare industry-standard post-editing, the interactive sentencecompletion paradigm, and other help for trans-lators.
The tool is available online at the URLhttp://www.caitra.org/.We will report on user studies in future papers.8 AcknowledgmentsThis work was supported by the EuroMatrix-Plus project funded by the Europea Commission(7th Framework Programme).
Thanks to JoshSchroeder for help with Ruby on Rails.ReferencesAlbrecht, J., Hwa, R., and Marai, G. E. (2009).Correcting automatic translations through col-laborations between mt and monolingual target-language users.
In Proceedings of the 12th Con-ference of the European Chapter of the Associ-ation for Computational Linguistics.Barrachina, S., Bender, O., Casacuberta, F.,Civera, J., Cubel, E., Khadivi, S., Lagarda, A.,Ney, H., Tom?as, J., Vidal, E., and Vilar, J.-M. (2009).
Statistical approaches to computer-assisted translation.
Computational Linguistics,35(1):3?28.Koehn, P., Hoang, H., Birch, A., Callison-Burch,C., Federico, M., Bertoldi, N., Cowan, B., Shen,W., Moran, C., Zens, R., Dyer, C. J., Bo-jar, O., Constantin, A., and Herbst, E. (2007).Moses: Open source toolkit for statistical ma-chine translation.
In Proceedings of the 45thAnnual Meeting of the Association for Com-putational Linguistics Companion Volume Pro-ceedings of the Demo and Poster Sessions,pages 177?180, Prague, Czech Republic.
Asso-ciation for Computational Linguistics.Koehn, P., Och, F. J., and Marcu, D. (2003).
Statis-tical phrase based translation.
In Proceedings ofthe Joint Conference on Human Language Tech-nologies and the Annual Meeting of the NorthAmerican Chapter of the Association of Com-putational Linguistics (HLT-NAACL).Langlais, P., Foster, G., and Lapalme, G. (2000).Transtype: a computer-aided translation typingsystem.
In Proceedings of the ANLP-NAACL2000 Workshop on Embedded Machine Trans-lation Systems.Raymond, S. (2007).
Ajax on Rails.
O?Reilly.Thomas, D. and Hansson, D. H. (2008).
Agile WebDevelopment with Rails: Second Edition, 2ndEdition.
The Pragmatic Programmers, LLC.20
