Tact ica l  Generat ion  in a Free Const i tuent  Order  LanguageDi lek  Zeynep Hakkan i ,  Kemal  Of lazer ,  and  I l yas  C icek l iDepartment of Computer Engineering and Information ScienceFaculty of Engineering, Bilkent University, 06533 Bflkent, Ankara, Turkey{ hakkani,ko,ilyas } @cs.bilkent.edu.t rAbst rac tThis paper describes tactical generation inTurkish, a free con~stituent order language, inwhich the order of the constituents may changeaccording to the information structure of thesentences to be generated.
In the absenceof any information regarding the informationstructure of a sentence (i.e., topic, focus, back-ground, etc.
), the constituents of the sentenceobey a default order, but the order is almostfreely changeable, depending on the constraintsof the text flow or discourse.
We have useda recursively structured finite state machinefor handling the changes in constituent or-der, implemented as a right-linear grammarbackbone.
Our implementation environmentis the GenKit system, developed at CarnegieMellon University-Center for Machine Transla-tion.
Morphological realization has been imple-mented using an external morpholggical naly-sis/generation component which performs con-crete morpheme selection and handles mor-phographemic processes.In t roduct ionNatural Language Generation is the operationof producing natural language sentences us-ing specified communicative goals.
This pro-cess consists of three main kinds of activities(McDonald, 1987):?
the goals the utterance is to obtain must bedetermined,?
the way the goals may be obtained must beplanned,?
the plans should be realized as text.Tactical generation is the realization, as lin-ear text, of the contents pecified usually usingsome kind of a feature structure that is gener-ated by a higher level process uch as text plan-ning, or transfer in machine translation appli-cations.
In this process, a generation grammarand a generation lexicon are used.As a component of a large scale projecton natural anguage processing for Turkish, wehave undertaken the development of a gener-ator for Turkish sentences.
In order to im-plement the variations in the constituent or-der dictated by various information structureconstraints, we have used a recursively struc-tured finite state machine instead of enumerat-ing grammar ules for all possible word orders.A second reason for this approach is that manyconstituents, especially the arguments of verbsare typically optional and dealing with suchoptionality within rules proved to be ratherproblematic.
Our implementation is based onthe GenKit environment developed at CarnegieMellon University-Center for Machine Trans-lation.
GenKit provides writing a context-freebackbone grammar along with feature struc-ture constraints on the non-terminals.The paper is organized as follows: Thenext section presents relevant aspects of con-stituent order in Turkish sentences and fac-tors that determine it.
We then present anoverview of the feature structures for represent-ing the contents and the information structureof these sentences, along with the recursive fi-nite state machine that generates the properorder required by the grammatical and infor-mation structure constraints.
Later, we givethe highlights of the generation grammar ar-chitecture along with some example rules andsample outputs.
We then present a discussioncomparing our approach with similar work, onTurkish generation and conclude with some fi-nal comments.81Turk ishIn terms of word order, Turkish can be char-acterized as a subject-object-verb (SOV) lan-guage in which constituents at certain phraselevels can change order rather freely, depend-ing on the constraints of text flow or discourse.The morphology of Turkish enables morpho-logical markings on the constituents to sig-nal their grammatical roles without relying ontheir order.
This, however, does not mean thatword order is immaterial.
Sentences with dif-ferent word orders reflect different pragmaticconditions, in that, topic, focus and back-ground information conveyed by such sentencesdiffer, t Information conveyed through intona-tion, stress and/or clefting in fixed word orderlanguages such as English, is expressed in Turk-ish by changing the order of the constituents.Obviously, there are certain constraints on con-stituent order, especially, inside noun and post-positional phrases.
There are also certain con-straints at sentence level when explicit casemarking is not used (e.g., with indefinite directobjects).In Turkish, the information which links thesentence to the previous context, the topic, isin the first position.
The information which isnew or emphasized, the focus, is in the imme-diately preverbal position, and the extra infor-mation which may be given to help the hearerunderstand the sentence, the background, isin the post verbal position (Erguvanh, 1979).The topic, focus and background information,when available, alter the order of constituentsof Turkish sentences.
In the absence of anysuch control information, the constituents ofTurkish sentences have the default order:subject, ezpression of time, ezpression ofplace, direct object, beneficiary, source,goal, location, instrument, value designa-tor, path, duration, expression of manner,verb.All of these constituents except the verb areoptional unless the verb obligatorily subcate-gorizes for a specific lexical item as an objectin order to convey a certain (usually idiomatic)sense.
The definiteness of the direct objectadds a minor twist to the default order.
If thedirect object is an indefinite noun phrase, it hasto be immediately preverbal.
This is due to thefact that, both the subject and the indefinite1See Erguvanh (1979) for a discussion of thefunction of word order in Turkish grammar.direct object have no surface case-marking thatdistinguishes them, so word order constraintscome into play to force this distinction.In order to present he flavor of word ordervariations in Turkish, we provide the followingexamples.
These two sentences are used to de-scribe the same event (i.e., have the same log-ical form), but they are used in different dis-course situations.
The first sentence presentsconstituents in a neutral default order, whilein the second sentence 'bugiin' (today) is thetopic and 'Ahmet'  is the focus: 2(1)a.Ahmet bug{in evden okulaAhmet today home+ABL school+DAT"Ahmet went from home to schoolotob{isle 3 dakikada git~i.bus+WITH 3 minute+LOC go+PAST+aSGby bus in 3 minutes today.
'b.Bug{in evden okula otobiisletoday home+ABL school+DAT bus+WITH'It was Ahmet who went from home to3 dakikada Ahmet gitti.3 minute+LOC Ahmet go+PAST+3SGschool in 3 minutes by bus today.
'Although, sentences (b) and (c), in the follow-ing example, are both grammatical, (c) is notacceptable as a response to the question (a):(2)a.b.C.All nereye gitti?All where+DAT go+PAST+3SG'Where did All go?
'All okula gitti.All school+DAT go+PAST+3SG'All went to school.
'* Okula All gitti.school+DAT All go+PAST+3SG'It was All who went to school.
'2In the glosses, 3SG denotes third person singu-lar verbal agreement, P1PL and P3SG denote firstperson plural and third person singular posses-sive agreement, WITH denotes aderivational markermaking adjectives from nouns, L0C, ABL, DAT,GEtl denote locative, ablative, dative, and genitivecase markers, PAST denotes past tense, and INF de-notes a marker that derives an infinitive form froma verb .82The word order variations exemplified by (2)are very common in Turkish, especially in dis-course.Generat ion  o f  F ree  Word  OrderSentencesThe generation process gets as input a featurestructure representing the content of the sen-tence where all the lexical choices have beenmade, then produces as output he surface formof the sentence.
The feature structures for sen-tences are represented using a case-frame rep-resentation.
Sentential arguments of verbs ad-here to the same morphosyntactic constraintsas the nominal arguments (e.g., the participleof, say, a clause that acts as a direct objectis case-marked accusative, just as the nomi-nal one would be).
This enables a nice recur-sire embedding of case-frames of similar gen-eral structure to be used to represent sententialarguments.In the next sections, we will highlight rel-evant aspects of our feature structures for sen-tences and their constituents.S imple  SentencesWe use the case-frame f ature structure in Fig-ure 1 to encode the contents of a sentence.
3We use the information given in the CONTROLfeature to guide our grammar in generatingthe appropriate sentential constituent order.This information is exploited by a right lineargrammar (recursively structured nevertheless)to generate the proper order of constituentsat every sentential level (including embeddedsentential clauses with their own informationstructure).
The simplified outline of this rightlinear grammar is given as a finite state ma-chine in Figure 2.
Here, transitions are labeledby constraints and constituents ( hown in boldface along a transition arc) which are gener-ated when those constraints are satisfied.
Ifany transition has a NIL label, then no surfaceform is generated for that transition.The recursive behavior of this finite statemachine comes from the fact that the individ-ual argument or adjunct constituents can alsoembed sentential clauses.
Sentential clauses3Here, c-name denotes a feature structure forrepresenting noun phrases or case-frames repre-senting embedded sentential forms which can beused as nominal or adverbial constituents.
"S-FORMCLAUSE-TYPEVOICESPEECH-ACTQUESVERBARGSADJNCONTROLinfinitive/adverbial/participle/finiteexistential/attributive/predicativeactive/reflexive/reciprocal/passive/causativeimperative/opt ative/necessit ative/wish/interrogative/declarativeTYPE yes-no/wh \]CONST l i s t -o f ( sub jec t /d i r -ob j /e t?
, ) JROOT verbPOLARITY negative/positiveTENSE present/past/futureASPECT progressive/habitual/etc.MODALITY potentialityDIR-OBJ c -nameSOURCE c .nameGOAL c -nameLOCATION c .nameBENEFICIARY c -narneINSTRUMENT c -narneVALUE c -nameTIME c -name-PLACE e-nameMANNER c -namePATH c -narneDURATION c -name"TOPIC constituent"FOCUS constituentBACKGR constituentFigure 1: The case-frame for Turkish sentences.correspond to either full sentences with non-finite or participle verb forms which act as nounphrases in either argument or adjunct roles,or gapped sentences with participle verb formswhich function as modifiers of noun phrases(the filler of the gap).
The former non-gappedforms can in Turkish be further classified intothose representing acts, facts and adverbials.The latter (gapped form) is linked to the fillernoun phrase by the ROLES feature in the struc-ture for noun phrase (which will be presented inthe following sections): this feature ncodes the(semantic) role filled by the filler noun phraseand the case-frame of the sentential clause.
Thedetails of the feature structures for sententialclauses are very similar to the structure for thecase-frame.
Thus, when an argument or ad-junct, which is a sentential clause, is to be re-alized, the clause is recursively generated byusing the same set of transitions.
For example,the verb 'g6r' (see) takes a direct object whichcan be a sentential clause:83(3)Ay?e'nin geli?iniAy~e+GEN come+INF+P3SG'I did not see Ay~e's coming.
'g6rmedim.see+NEG+PAST+ISGSimilarly, the subject or any other constituentof a sentence can also be a sentential clause:(4)Ali'nin buraya gelmesiAIi+GEN here come+INF+P3SG'Ali 's coming here made usbizim i~i bitirmemiziwe+GEN the_job finish+INF+P1PL+ACCfinish the job easier.
'kolayl~tlr&.make_easy+PAST+3SGIn all these cases, the main sentence gener-ator also generates the sentential subjects andobjects, in addition to generating the main sen-tence.Complex  SentencesComplex sentences are combinations of simplesentences (or complex sentences themselves)which are linked by either conjoining or vari-ous relationships like conditional dependence,cause-result, etc.
The generator works on afeature structure representing a complex sen-tence which may be in one of the followingforms:?
a s imple  sentence.
In this case the sentencehas the case-frame as its argument featurestructure.TYPE simple \]ARG case- frame\]?
a ser ies  o f  s imple  or complex sentences con-nected by coordinating or bracketing con-junctions.
Such sentences have feature struc-tures which have the individual case-framesas the values of their ELEMENTS features:eonj \[TYPE and/or/etc.
\] \[CONJ\]..ELEMENTS list-of(compl .. .
.
entence)J?
sentences  l inked with a certa in relat ionship.Such sentences have the feature structure:TYPE linkedLINK-RELATION \[elARG 1 complex-sentenceARG2 complex-sentenceIssues in Representing Noun PhrasesIn this section we will briefly touch on relevantaspects of the representation of noun phrases.We use the following feature structure (sim-plified by leaving out irrelevant details) to de-scribe the structure of a noun phrase:\[ARO ba ......... 1\] REF CONTROL \[DROP +/- (default -)CLASS classifierROLES role-typelist-off mod.
relatzon) 1 MOD-REL\[POSITION pos.\]ORDINAL \[INTENSIFIER +/-JMODF \[QUANT-MOD quant2fierQUALY-MOD list-of\[strnple-property) ILCONTROL t/EMPHASIS n TMquant/\]/\]jDEFINITE +/-DET REFERENTIAL +/-SPEC \[.SPECIFIC +/-|SET-SPEC list-of(c-name)|SPEC-REL list-of(spec, relation')LDEMONS demonst ra t iveL/ARGUMENT c-name \]\]POSS ICONTROL \[DROP +/-/MOVE +/-The order of constituents in noun phrasesis rather strict at a gross level, i.e., speficiersalmost always precede modifiers and modifiersalmost always precede classifiers, 4 which pre-cede the head noun, although there are numer-ous exceptions.
Also, within each group, wordorder variation is possible due to a number ofreasons:?
The order of quantitative and qualitativemodifiers may change: the aspect that is em-phasized is closer to the head noun.
The in-definite singular determiner may also follow4A classifier in Turkish is a nominal modifierwhich forms a noun-noun noun phrase, essentiallythe equivalent of book in forms fike book cover inEngfish.84z ~z ~)~ ,e ~.'
~ ~ ~- :~ ~.
,~ ~2.~?
N ,, ~ i \ ]()?ii~,Figure 2: The finite state machine for generating the proper order of constituents in Turkish sentences.85any qualitative modifier and immediatelyprecede any classifier and/or head noun.?
Depending on the determiner used, the po-sition of the demonstrative specifier may bedifferent.
This is a strictly lexical issue andnot explicitly controlled by the feature struc-ture, but by the information (stored in thelexicon) about the determiner used.?
The order of lexieal and phrasal modi-fiers (e.g., corresponding to a postpositionalphrase on the surface) may change, if po-sitioning the lexical modifier before thephrasal one causes unnecessary ambiguity(i.e.. the lexical modifier in that case canalso be interpreted as a modifier of some in-ternal constituent of the phrasal modifier).So, phrasal modifiers always precede lexicalmodifiers and phrasal specifiers precede lex-ical specifiers, unless otherwise specified, inwhich case punctuation eeds to be used.?
Tile possessor may scramble to a positionpast the head or even outside the phrase (toa background position), or allow some adver-bial adjunct intervene between it and the restof the noun phrase, causing a discontinuousconstituent.
Although we have included con-trol information for scrambling the possessorto post head position, we have opted not todeal with either discontinuous constituentsor long(er) distance scrambling as these aremainly used in spoken discourse.Furthermore, since the possessor informa-tion is explicitly marked on the head noun,if the discourse does not require an overtpossessor 5 it may be dropped by suitable set-ting of the DROP feature.In ter fac ing  w i th  Morpho logyAs Turkish has complex agglutinative wordforms with productive inflectional and deriva-tional morphological processes, we handle mor-phology outside our system using the gener-ation component of a full-scale morphologicalSFor example, (c) cannot be used as an answerto (a) in the following discourse, where the ownerof the book should be emphasized:a. Kimin kitabl kahn?whose book+P3SG thick"Whose book is thick?'b.
Benim kitablm kahn.I+GEN book+P1SG thick'My book is thick.'c.
* Kitablm kahn.book+P1SG thickanalyzer of Turkish (Oflazer, 1993).
WithinGenKit, we generate relevant abstract mor-phological features uch as agreement and pos-sessive markers and case marker for nominalsand voice, polarity, tense, aspect, mood andagreement markers for verbal forms.
This in-formation is properly ordered at the interfaceand sent to the morphological generator, whichthen:1. performs concrete morpheme selection, dic-tated by the morphotactic onstraints andmorphophonological ontext,2.
handles morphographemic phenomena suchas vowel harmony, and vowel and consonantellipsis, and3.
produces an agglutinative surface form.Grammar  Arch i tec ture  andOutputOur generation grammar is written in a formal-ism called Pseudo Unification Grammar im-plemented by the GenKit generation system(Tomita and Nyberg, 1988).
Each rule consistsof a context-free phrase structure descriptionand a set of feature constraint equations, whichare used to express constraints on feature val-ues.
Non-terminals in the phrase structure partof a rule are referenced as x0 .
.
.
.
.
xn in theequations, where x0 corresponds to the non-terminal in the left hand side, and xn is then th non-terminal in the right hand side.
Sincethe context-free rules are directly compiled intotables, the performance of the system is es-sentially independent of the number of rules,but depends on the complexity of the featureconstraint equations (which are compiled intoLISP code).
Currently, our grammar has 273rules each with very simple constraint checks.Of these 273 rules, 133 are for sentences and107 are for noun phrases.To implement he sentence level genera-tor (described by the finite state machine pre-sented earlier), we use rules of the form:Si ----~ XP Sjwhere the Si and Sj denote some state in thefinite state machine and the XP denotes the con-stituent to be realized while taking this tran-sition.
If this XP corresponds to a sententialclause, the same set of rules are reeursively ap-plied.
This is a variation of the method sug-gested by Takeda et al (1991).86Tile following are rule examples that im-plement some of the transitions from state 0 tostate 1:(<S> <==> (<Sl>)(( (x0  cont ro l  top ic )  =c *undef ined*)(x l  = x0)))(<S> <==> (<Sub ject> <Sl>)(( (x0  cont ro l  top ic )  =c sub jec t )(x2 = x0)( (x2  arguments sub jec t )  = *remove*)(x l  = (x0 arguments sub jec t ) )))(<S> <==> (<Time> <Sl>)(((xO control topic) =c time)(x2 = x0)( (x2  ad juncts  t ime)  = * remove*)(x l  = (x0 ad juncts  t ime) )))The grammar also has rules for realizing aconst i tuent  l ike <Sub ject> or <Time> (whichmay eventually call the same rules if the ar-gument is sentential) and rules like above fort ravers ing the finite state machine from state 1on.ExamplesIn this section, we provide feature structurestbr three example sentences which only differin their information structures.
Although thefollowing feature structures seem very similar,they correspond to different surface formsJ(5)Ahmet diin kitabl  masadaAhmet yesterday book+ACC table+LOC'Ahmet  left the book on the tablebtraktl .l eave+PAST+3SGyesterday.
'"S- FO RMCLAUSE-TYPEVOICESPEECH-ACTVERBARGUMENTSADJUNCTSfinitepredicativeactivedeclarative"ROOT #birak \]SENSE positive\[TENSE past \[ASPECT perfect JSUBJECT { Ahmet}\]Dm-OBJ {ki~ap} |LOCATION {masa} J\[TIME { di.in }\](6)Dfin kitabl masada Ahmetyesterday book+ACC table+LOC Ahmet' It was Ahmet  who left the book onblrakU.leave+PAST+3SGthe table yesterday.
'"S-FORM finiteCLAUSE-TYPE predicativeVOICESPEECH-ACTVERBARGUMENTSADJUNCTSCONTROLactivedeclarative"ROOTSENSETENSEASPECT"SUBJECTDIR-OBJ~blrak -positivepastperfect{Ahmet}"{kitap}LOCATION {m~a}TIME {dUn}\['TOPIC time \]FOCUS subject(7)Diin kitabl Ahmetyesterday book+ACC Ahmet' It was Ahmet  who left the book6The feature values in curly brackets indicatethat, that feature has as value a c -name structurefor the noun phrase inside the curly brackets.blraktl  masada.Ieave+PAST+3SG table+LOCyesterday on the table.
'87"S-FORMCLAUSE-TYPEVOICESPELCH-ACT"VERBARGUMENTSADJUNCTSCONTROLfinitepredicativeactivedeclarative"ROOT #blrakSENSE positiveTENSE pastASPECT perfectI SUBJECT {Ahmet}" Om-OBJ {k,tap} LOCATION {m~a}\ [~,~ {~0n}\]TOPIC time \]FOCUS subject |BACKGROUND IocationJFigure 3 shows the path the generator fol-lows while generating sentence 7.
The solidlines show the transitions that the generatormakes in its right linear backbone.Compar i son  w i th  Re la ted  WorkDick (1993) has worked on a classificationbased language generator for Turkish.
His goalwas to generate Turkish sentences of varyingcomplexity, from input semantic representa-tions in Penman's Sentence Planning Language(SPL).
However, his generator is not complete,in that, noun phrase structures in their en-tirety, postpositional phrases, word order vari-ations, and many morphological phenomenaare not implemented.
Our generator differsfrom his in various aspects: We use a case-frame based input representation which we feelis more suitable for languages with free con-stituent order.
Our coverage of the grammaris substantially higher than the coverage pre-sented in his thesis and we also use a full-scaleexternal morphological generator to deal withcomplex morphological phenomena of aggluti-native lexical forms of Turkish, which he hasattempted embedding into the sentence gener-ator itself.Hoffman, in her thesis (Hoffman, 1995a,Hoffman, 1995b), has used the Multiset-Combinatory Categorial Grammar formalism(Hoffman, 1992), an extension of CombinatoryCategorial Grammar to handle free word or-der languages, to develop a generator for Turk-ish.
Her generator also uses relevant features ofthe information structure of the input and canhandle word order variations within embeddedclauses.
She can also deal with scrambling outof a clause dictated by information structureconstraints, as her formalism allows this in avery convenient manner.
The word order in-formation is lexically kept as multisets associ-ated with each verb.
She has demonstrated thecapabilities of her system as a component ofa prototype database query system.
We havebeen influenced by her approach to incorporateinformation structure in generation, but, sinceour aim is to build a wide-coverage generatorfor Turkish for use in a machine translation ap-plication, we have opted to use a simpler for-malism and a very robust implementation en-vironment.Conc lus ionsWe have presented the highlights of our workon tactical generation in Turkish - a freeconstituent order language with agglutinativeword structures.
In addition to the content in-formation, our generator takes as input the in-formation structure of the sentence (topic, fo-cus and background) and uses these to selectthe appropriate word order.
Our grammar usesa right-linear ule backbone which implementsa (recursive) finite state machine for dealingwith alternative word orders.
We have also pro-vided for constituent order and stylistic varia-tions within noun phrases based on certain em-phasis and formality features.
We plan to usethis generator in a prototype transfer-based hu-man assisted machine translation system fromEnglish to Turkish.AcknowledgmentsWe would like to thank Carnegie MellonUniversity-Center for Machine Translation forproviding us the GenKit environment.
Thiswork was supported by a NATO Science forStability Project Grant TU-LANGUAGE.References\[Dick, 1993\] Colin Dick.
1993.
Classificationbased language generation in Turkish.
Mas-ter's thesis, University of Edinburgh.\[Erguvanh, 1979\] Eser Emine Erguvanh.
1979.The Function of Word Order in TurkishGrammar.
Ph.D. thesis, University of Cali-fornia, Los Angeles.\[Hoffman, 1995a\] Beryl Hoffman.
1995a.
TheComputational Analysis of the Syntax andInterpretation of "Free" Word Order in88,' ~.~.~ ~- -  _ _~,, ~:~~.~ ~ ~~,' ~:~ ,', ,  ~ ~ ~,2,~a~,, ~-, /.= .
-=~ .
,, ,, ,.~, .. .
.
- .
- .~ ' - .
.
._,,'~.
.~,,~ ~ ~ " ~, ~, .j ~ .= .~,~ ,~ ~=,~ ~,,~.
,~~,,~, = ~ ~ ?
,~ "u ~ ~ .~ =,,, .~  u '~ .~, ~',"~.
',~ ~, ~,,~ ~, ~ ~ ~ ~,'~ ,~ ,~ =,'.~ ~,~.
>,~' ~=~ ~ a = 'm ~ , '~  ' , .~  'i... , '~',, ,, ' ,,a,~ o ~ ' '~ ' ,  , '  , "~ . '
"  .
"u~_~.- ,'~ ,~, -~ ,,'-~ ~',, 3",, ~,, ~, !
.  '
-~~, ,~ ~.
; _,= >,~ ~ =,= ~.= z,-=~, =','2 ~'~ , ~,.~ '~  ,Z  =,'~ ,,~ '-: ,, ~ =~ "~ ?
~ , '2 '~  ,zZ 'Z  , '~' i  .'
~ ,~, '~ .  "
~," .~~',, ~, ~ ~~'- .
\ ,.
,, .,, , ,~ ,  ,, , , .. .X ~.Figure 3: The transitions followed for generating sentence 7.89Turkish.
Ph.D. thesis, Computer and Infor-mation Science, University of Pennsylvania.\[Hoffman, 1995b\] Beryl Hoffman.
1995b..Inte-grating "free" word order syntax and infor-mation structure.
In Proceedings of the Sev-enth Conference of the European Chapter ofthe Association for Computational Linguis-tics, Dublin, Ireland.\[Hoffman, 1992\] Beryl Hoffman.
1992.
A CCGapproach to free word order languages.
InProceedings of the 30 th Annual Meeting ofthe Association for Computational Linguis-tics.\[McDonald, 1987\] David D. McDonald.
1987.Natural language generation.
In S C (ed)Shapiro, editor, Encyclopedia of ArtificialIntelligence, pages 642-655.
Chicester: JohnWiley and Sons.\[Oflazer, 1993\] Kemal Oflazer.
1993.
Two-leveldescription of Turkish morphology.
In Pro-ceedings of the Sixth Conference of the Eu-ropean Chapter of the Association for Com-putational Linguistics, April.
A full versionappears in Literary and Linguistic Comput-ing, Vol.9 No.2, 1994.\[Takeda et al, 1991\] Koichi Takeda, NaohikoUramoto, Tetsuya Nasukawa, and TaijiroTsutsumi, 1991.
Shalt2- A SymmetricMachine Translation System with Concep-tual Transfer.
IBM Research, Tokyo Re-search Laboratory, 5-19 Sanbacho, Chiyoda-ku, Tokyo 102, Japan, November.\[Tomita nd Nyberg, I988\] Masaru Tomitaand Eric H. Nyberg.
\[988.
Generation kitand transformation kit, version 3.2, user'smanual.
Carnegie Mellon University-Centerfor Machine Translation, October.90
