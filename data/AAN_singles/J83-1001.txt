Paraphrasing Questions UsingGiven and New Information 1Kath leen  R. McKeownComputer  Science Depar tmentColumbia Univers i tyNew York,  NY  10027The design and implementation of a paraphrase component for a natural languagequestion-answering system (CO-OP) is presented.
The component is used to produce aparaphrase of a user's question to the system, which is presented to the user before thequestion is evaluated and answered.
A major point made is the role of given and newinformation in formulating a paraphrase that differs in a meaningful way from the user'squestion.
A description is also given of the transformational grammar that is used by theparaphraser.1.
IntroductionIn a natural language interface to a data base querysystem, a paraphraser can be used to ensure that thesystem has correctly understood the user.
Such a par-aphraser has been developed as part of the CO-OPsystem (Kaplan 1979).
In CO-OP, an internal repre-sentation of the user's question is passed to the para-phraser, which then generates a new version of thequestion for the user.
Upon seeing the paraphrase, theuser has the option of rephrasing her/h is  questionbefore the system attempts to answer it.
Thus, if thequestion was not interpreted correctly, the error canbe caught before a possibly lengthy search of the database is initiated.
Furthermore, the user is assured thatthe answer she/he receives is an answer to the ques-tion asked and not to a deviant version of it.The idea of using a paraphraser in the above way isnot new.
To date, other systems have used cannedtemplates to form paraphrases, filling in empty slots inthe pattern with information from the user's question(Waltz 1978, Codd 1978).
In CO-OP, a transforma-tional grammar is used to generate the paraphrasefrom an internal representation of the question.Moreover, the CO-OP paraphraser generates a questionthat differs in a meaningful way from the originalquestion.
It makes use of a distinction between given1 This work was carried out in the Department of Computerand Information Science, The University of Pennsylvania.
It waspartially supported by an IBM Fellowship, and by NSF grants MCS78-08401 and MCS 79-19171.and new information to indicate to the user the exis-tential presuppositions made in her/his question.2.
Overview of the CO-OP SystemThe CO-OP system is aimed at infrequent users of database query systems.
These casual users are likely tobe unfamiliar with computer systems and unwilling toinvest the time needed to learn a formal query lan-guage.
Being able to converse naturally in Englishenables such persons to tap the information availablein a data base.In order to allow the question-answering process toproceed naturally, CO-OP follows some of the "co-operative principles" of conversation (Grice 1975).
Inparticular, the system attempts to find meaningfulanswers to failed questions by addressing any incorrectassumptions the questioner may have made in her/hisquestion.
When the direct response to a questionwould be simply "no"  or "none",  CO-OP gives a moreinformative response by correcting the questioner'smistaken assumptions.The false assumptions that CO-OP corrects are theexistential presupposit ions of the questions.
2 Sincethese presuppositions can be computed from the sur-face structure of the question, a large store of seman-tic knowledge for inferencing purposes is not needed.2 For example, in the question "Which users work on projectssponsored by NASA?
",  the speaker makes the existential presuppo-sition that there are projects sponsored by NASA.Copyright 1983 by the Association for Computational Linguistics.
Permission to copy without fee all or part of this material is grantedprovided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included onthe first page.
To copy otherwise, or to republish, requires a fee and/or  specific permission.0362-613X/83/010001 - 0503.00American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 1Kathleen R. McKeown Paraphrasing Questions Using Given and New InformationIn fact, a lexicon and data base schema are the onlyitems that contain domain-specific nformation.
Con-sequently, the CO-OP system is a portable one; achange of data base requires that only these twoknowledge sources be modified.3.
The CO-OP ParaphraserCO-OP's paraphraser provides the only means of errorchecking for the casual user.
If the user is familiarwith the system, she/he can ask to have the intermedi-ate results printed, in which case the parser's outputand the formal data base query will be shown.
Thenaive user, however, is unlikely to understand theseresults.
It is for this reason that the paraphraser wasdesigned to respond in English.The use of English to paraphrase queries createsseveral problems.
The first is that natural language isinherently ambiguous.
A paraphrase must clarify thesystem's interpretation of possible ambiguous phrasesin the user's question without introducing additionalambiguity.One particular type of ambiguity that a paraphrasermust clarify and avoid re-introducing is caused by thelinear nature of sentences.
A modifying relativeclause, for example, frequently cannot be placed di-rectly after the noun phrase it modifies.
In such cases,the semantics of the sentence may indicate the correctchoice of modified noun phrase, but occasionally thesentence may be genuinely ambiguous.
For example,question (A) below has two interpretations, bothequally plausible.
The speaker could be referring tobooks dating from the '60s or to computers datingfrom the '60s.
(A) Which students read books on computers datingfrom the '60s?A second problem in paraphrasing English queriesis the possibility of generating the exact question thatwas originally asked.
If a grammar were developed tosimply generate English from an underlying represent-ation of the question, this possibility could be realized.Instead, a method must be devised that can determinehow the phrasing should differ from the original.The CO-OP paraphraser addresses both the problemof ambiguity and the rephrasing of the question.
Itmakes the system's interpretation of the question ex-plicit by breaking down the clauses of the questionand reordering them depending upon their function inthe sentence.
Thus, question (A) above will result ineither paraphrase (B) or (C), reflecting the interpreta-tion the system has chosen.
(B) Assuming that there are books on computers(those computers date from the '60s), whichstudents read those books?
(C) Assuming that there are books on computers(those books date from the '60s), which stu-dents read those books?The method adopted generates a paraphrase thatdiffers from the original except in cases where no rela-tive clauses or prepositional phrases were used.
It wasformulated on the basis of a distinction between givenand new information and indicates to the user thepresuppositions she/he has made in the question (inthe "assuming that" clause), while focusing her/hisattention on the attributes of the class she/he is inter-ested in.4.
Linguistic BackgroundAs mentioned earlier, the lexicon and the data baseare the sole sources of world knowledge for CO-OP.While this design increases CO-OP's portability, itmeans that little semantic information is available forthe paraphraser's use.
Contextual information is alsolimited since no running history or context is main-tained for a user session in the current version.
Theinput the paraphraser received from the parser is asyntactic parse tree of the question.
Using this infor-mation, the paraphraser must construct a question thatdiffers in phrasing from the original.
The followingquestion must therefore be addressed:What reasons are there for choosing one syntac-tic form of expression over another?Some linguists maintain that word order is affectedby functional roles elements play within the sentence.
3Terminology used to describe the types of roles thatcan occur varies widely.
Some of the distinctions thathave been described include given/new, topic /com-ment, theme/rheme, and presupposition/focus.
Defini-tions of these terms, however, are not consistent.
4Nevertheless, one influence on expression doesappear to be the interaction of sentence content andthe beliefs of the speaker concerning the knowledge ofthe listener.
Some elements in the sentence functionin conveying information the speaker assumes is pres-ent in the "consciousness" of the listener (Chafe1976).
This information is said to be contextuallydependent, either by virtue of its presence in the pre-ceding discourse or because it is part of the sharedworld knowledge of the dialog participants.
In aquestion-answering system, shared world-knowledge3 Some other influences on syntactic expression are discussedin Morgan and Green 1973.
They suggest hat stylistic reasons, inaddition to some of the functions discussed here, determine whendifferent syntactic onstructions are to be used.
They point out, forexample, that the passive tense is often used in academic prose toavoid identification of agent and to lend a scientific flavor to thetext.4 For example, see Prince 1979 for a discussion of varioususages of "g iven/new".2 American Journal of Computational Linguistics, Vo lume9,  Number 1, January-March 1983Kathleen R. McKeown Paraphrasing Questions Using Given and New Informationrefers to information the speaker assumes is present inthe data base.
Information functioning in the role justdescribed has been termed "given".
"New" labels all information in the sentence that ispresented as not retrievable from context.
In the dec-larative, elements functioning in asserting informationthat the listener is presumed not to know are callednew.
In the question, elements functioning in convey-ing what the speaker wants to know (i.e., what she/hedoesn't know) represent information the speaker pre-sumes the listener is not already aware of.
Firbas1974 identifies additional functions in the question.Of these, (ii) is used here to augment he interpreta-tion of new information.
He says (p. 31):(i) it indicates the want of knowledge on the partof the inquirer and appeals to the informant tosatisfy this want.
(ii) \[a\] it imparts knowledge to the informant in thatit informs him what the inquirer is interested in(what is on her/his mind) and \[b\] from whatparticular angle the intimated want of knowl-edge is to be satisfied.Although word order vis-a-vis these and relateddistinctions has been discussed in light of the declara-tive sentence, less has been said about the interroga-tive form.
Halliday 1967 and Krizkova s are amongthe few to have analyzed the question.
Despite thefact that they arrive at different conclusions, 6 the twofollow similar lines of reasoning.
Krizkova argues thatboth the wh-item of the wh-question and the finiteverb (e.g., "do"  or "be")  of the yes /no question pointto the new information to be disclosed in the response.These elements, she claims, are the only unknowns tothe questioner.
Halliday, in discussing the yes /noquestion, also argues that the finite verb is the onlyunknown.
The polarity of the text is in question andthe finite element indicates this.In this paper the interpretation of the unknownelements in the question as dfined by Krizkova andHalliday is followed.
The wh-items, in defining thequestioner's lack of knowledge, act as new informa-tion.
Firbas's analysis of the functions in questions isused to further elucidate the role of new informationin questions.
The remaining elements are given infor-mation.
They represent information assumed by thequestioner to be true of the data base domain.
This5 Summary by Firbas 1974 of the untranslated article "TheInterrogative Sentence and Some problems of the So-called Func-tional Sentence Perspective (Contextual Organization of the Sen-tence)," NASA Rec.
4, 1968.6 It should be noted that Halliday and Krizkova discuss theunknowns in the question in order to define the theme and rhemeof a question.
Although they agree about the unknowns for thequestioner, they disagree about which elements function as themeand which function as rheme.
A full discussion of their analysisand conclusions is given in McKeown 1979.labeling of information within the question will allowthe construction of a natural paraphrase, avoidingambiguity.5.
FormulationFollowing the analysis described above, the CO-OPparaphraser breaks down questions into given and newinformation.
More specifically, an input question isdivided into three parts, of which (2) and (3) form thenew information.1.
given information2.
lack of knowledge (ii\[a\] from Firbas above)3. angle (ii\[b\] from Firbas above)In terms of the question components, part (2) isindicated by the question with no subclauses 7 as itdefines the lack of knowledge of the hearer.
Part (3)is indicated by the direct and indirect modifiers of theinterrogative words as they define the angle fromwhich the question was asked.
They identify the at-tributes of the missing information for the hearer.Part (1) is formed from the remaining clauses.As an example, consider question (D):(D) Which division of the computing facility workson projects using oceanography research?Following the outline above, part (2) of the para-phrase will be the question minus the subclauses:"Which division works on projects?"
Part (3), themodifiers of the interrogative words, will be "of thecomputing facility", which modifies "which division".8The remaining clause "projects using oceanographyresearch" is considered given information.
The threeparts can then be assembled into a natural sequence:(E) Assuming that there are projects using oceanog-raphy research, which division works on thoseprojects?
Look for a division of the computingfacility.
9Information belonging to each of the three categor-ies occurred in question (D).
If one of these types ofinformation is missing, the question will be presentedminus the initial or concluding clauses.
Only part (2)of the paraphrase will invariably occur.
Note that thismeans that if there are no clauses in the original ques-tion corresponding to parts (1) and (2) (i.e., the ques-tion contains no relative clauses, prepositional phrases,7 Here, subclauses are defined as relative clauses, preposition-al phrases, and adjectival phrases.8 Note that this phrase also identifies a presupposition of thequestioner.
For the paraphrase, however, its function to preciselyspecify what the questioner is interested in (which is new informa-tion for the hearer) is of greater importance.9 This example, as well as sample questions and paraphrasesthat follow, were taken from actual sessions with the paraphraser.Question (A) and its possible paraphrases (B) and (C) were not runon the system.American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 3Kathleen R. McKeown Paraphrasing Questions Using Given and New Informationor adjectival phrases), the paraphrase may be the sameas the original question.If more than one clause occurs in a particular cate-gory, the question will be further splintered.
Addi-tional given information is parenthesized following the"assuming that .
.
."
clause.
Example (F) below illus-trates the paraphrase for a question containing severalclauses of given information and no clauses definingspecific attributes of the missing information.
Clausescontaining information characterized by category (3)will be presented as separate sentences following thestr ipped-down question.
(G) below demonstrates aparaphrase containing more than one clause of thistype of information.
(F) Q: Which users work on projects in ocean-ography that are sponsored by NASA?P: Assuming that there are projects in ocean-ography (those projects are sponsoredby NASA), which users work on thoseprojects?
(G) Q: Which programmers in superdivision 5000from the ASD group are advised byThomas Wirth?P: Which programmers are advised by ThomasWirth?
Look for programmers in superdivi-sion 5000.
The programmers must be fromthe ASD group.6.
Implementation OverviewThe paraphraser's first step in processing is to reformthe parse tree it is given so that the main verb occursas the root of the new tree.
This is done to simplifythe identification of given and new information in theparse.
The tree is then divided into three separatetrees reflecting the division of given and new informa-tion in the question.
The design of the tree allows fora simple set of rules that flatten the tree.
The finalstage of processing in the paraphraser is translation.In the translation phase, labels in the parser's repre-sentation are translated into their correspondingwords.
During this process, necessary transformationsof the grammar are performed upon the string.6.1 The phrase structure treeIn its initial processing, the paraphraser t ansforms theparser's representation i to one that is more conven-ient for generation purposes.
The resultant structureis a tree that highlights certain syntactic features ofthe question.
This initial processing gives the para-phraser some independence from the CO-OP system.Were the parser's representation changed or the com-ponent moved to a new system, only the initial proc-essing phase would need to be modified.The paraphraser 's  phrase structure tree uses themain verb of the question as the root node of the tree.The subject of the main verb is the root node of theleft subtree, the object (if there is one) the root nodeof the right subtree.
In the current system, the use ofbinary relations in the parser's representation 10 createsthe illusion that every verb or preposition has a sub-ject and object.
The paraphraser's tree does allow forthe representat ion of other constructions hould theincoming language use them.Note that the use of binary relations in the incom-ing parse tree to represent he verbs and prepositionsof a sentence means that modifiers of verbs are repre-sented as modifiers of their objects (and thus hang offthe object in the paraphraser's reformed tree).
Whilethis is not the usual interpretation of questions usingsuch constructions, it functions adequately for bothCO-OP and the paraphraser as illustrated by a hypoth-etical paraphrase for such a question, shown below in(H):(H) Q: Which programmers worked on ocean-ography projects in 1972?P: Assuming that there were oceanographyprojects in 1972, which programmersworked on those projects?Each of the paraphrase subtrees represents otherclauses in the question.
Both the subject and the ob-ject of the main verb will have a subtree for each oth-er clause it participates in.
If a noun in one of theseclauses also participates in another clause in the sen-tence, it too will have subtrees.As an example, consider the question: "Which ac-tive users advised by Thomas Wirth work on projectsin area 3?"
The phrase structure tree used in the par-aphraser is shown in Figure 1.
Since "work on" isidentified as the main verb of the question by the par-ser, it will be the root node of the tree.
"users" isroot of the left subtree, "projects"  of the right.
Eachnoun participates in one other clause and therefore hasone subtree.
Modifiers are closely bound to the nounthey modify and are treated as properties of the noun(i.e., each node in the tree that is modified has a prop-erty called "modif iers" whose value is any adjectivalor noun modifier).
In Figure 1, modifiers are shownas part of the node label for clarity.
Subtree nodes(the leaves of Figure 1) have three pieces of informa-tion associated with them:?
the relation between the node and its parent,?
the noun phrase the node represents, and?
an indication of whether the node functions assubject or object in the clause.10 See Kaplan 1979 for a description of Meta Query Lan-guage, or MQL.4 Amer ican Journal  of Computational Linguist ics,  Vo lume 9, Number  1, January-March 1983Kathleen R. McKeown Paraphrasing auestions Using Given and New Informationwork on /active users /advised byThomas Wirthobject\projects \inarea 3objectFigure 1.6.2  Dividing the treeThe constructed tree is computationally suited for thethree-part paraphrase.
The tree is f lattened after ithas been divided into subtrees containing given infor-mation and the two types of new information.
Thesplitting of the tree is accomplished by first extractingthe topmost smallest portion of the tree containing thewh-item.
At the very least, this will include the rootnode plus the left and right subtree root nodes.
Thisportion of the tree is the str ipped-down question.
Theclauses that define the particular aspect from whichthe question is asked are found by searching the leftand right subtrees for the wh-item or questioned noun.The subtree whose root node is the wh-item containsthese clauses.
Note that this may be the entire left orright subtree or may only be a subtree of one of these.The remainder of the tree represents given informa-tion.
Figure 2 illustrates this division for the previousexample.Q:P:Pt.
3(new)Which active users advised by Thomas Wirth work on projects in area 3?Assuming that there are projects in area 3, which active users work on these projects?advised by Thomas Wirth.Pt.
2 information(new)Pt.
1 information(given)Look for usersFigure 2.6.3 FlatteningIf the structure of the phrase structure tree isTree: Subtree:R R' /\ /\A B A' B'Figure 3.with A the left subtree and B the right, then the fol-lowing rules define the flattening process:TREE ~ A R BSUBTREE ~ R w A v B vIn other words, the top level of the tree (shown on theleft in Figure 3) is linearized by an in-order traversalwhile each of its subtrees (shown on the right in Fig-ure 3) is linearized by a pre-order traversal.
In theexample shown in Figure 2, part (2) of the tree corre-sponds to the top level of the tree and will undergoin-order linearization, and parts (1) and (3) are thesubtrees, which will be linearized by a pre-order trav-ersal.
The use of two traversals to linearize the treestems from the fact that different types of informationare stored at nodes at different levels in the tree.
As anode in a subtree has three pieces of information asso-ciated with it, one more rule is required to expand anode.
A node consists of:?
arc-label?
set-label?
subject/objectwhere arc-label is the label of a binary relation in theinput parse tree (i.e., a verb or preposition) and set-label is the label of a set in the input parse (i.e., nounphrase).
The input parse is in MQL representation,which consists of sets and binary relations betweenthem.
Subject/object  indicates whether the sub-nodenoun phrase functions as subject or object in theclause; it is used by the subject-aux transformationand does not apply to the expansion rule.
In Figure 2,the leaves of the tree carry these three pieces of infor-mation.
For example, the leftmost leave has arc-labeladvised by, set-label Thomas Wirth, and is labeled asAmerican Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 5Kathleen R. McKeown Paraphras ing  Quest ions  Us ing  G iven  and  New In format ionthe object of the relation.
The following rule expandsa subtree node:NODE -~ ARC-LABEL  SET-LABELThe tree of given information is f lattened first.
Itis part of the left or right subtree of the phrase struc-ture tree and therefore is f lattened by a pre-ordertraversal.
It is during the flattening stage that thewords "Assuming that there \[be\] .
.
."
are inserted tointroduce the clause of given information.
"be"  willagree with the subject of the clause.
Following theserules, the tree of given information in Figure 2 wouldbe flattened by a pre-order traversal yielding "projectsin area #6" (R'  A t arc-label set-label).
After the"Assuming that" clause is inserted, this portion of theparaphrase is "Assuming that there be projects in area#6".
If there is more than one clause, parentheses areinserted around the additional ones.The tree representing the stripped-down question isf lattened next, using the in-order traversal.
Applyingthis process to Part (2) of the tree in Figure 2 yieldsthe phrase "wh active users work on projects" (A RB).
(In final processing stages, the correct demonstra-tive (" those" or " that")  is selected to modify nounsalready mentioned in the first part of the paraphrase.
)The tree that represents modifiers of the questionsnoun is l inearized to follow these phrases.
A pre-order traversal of this portion of the tree in Figure 2yields "users advised by Thomas Wirth" (R t A T arc-label set-label).
Any modifiers of a noun (here,"act ive")  are omitted in this part of the paraphrase ifthey have already been mentioned.
The phrase "Lookfor" is inserted before the first clause of modifiers.Two transformations are applied during the flatten-ing process.
They are wh-fronting and subject-auxinversion.
Other transformations are applied followingthe flattening process to produce sentences in finalgrammatical form.6.4 Transformat ionsThe grammar used in the paraphrase is a transforma-tional one.
In addition to the basic flattening rulesdescribed above, the following transformations areused:~ wh-fronting negation do-support subject-aux inversiontense-placementcontractionhas-deletionThe curved lines indicate the ordering restrictions.There are two connected groups of transformations.
Ifwh-fronting applies, then so will do-support, subject-aux inversion, and tense-placement.
The second groupSD: X -1SC: 2+1Input to rule:of transformations i invoked through the applicationof negation.
It includes do-support, contraction, andtense-placement.
Has-deletion is not affected by theabsence or presence of other transformations.
A de-scription of the transformation rules follows.
Therules used here are based on analyses described byAkmajian and Heny (1975) and by Cullicover (1976).The rule for wh-fronting is specified as follows,where SD stands for structural description and SC,structural changes.
Each rule is followed by an exam-ple input string and the string after it has undergonethe transformation.
The full tree for the string is notshown, but the string is labeled by markers in the SD.NP - Y2 30 31 2i I I Iprogrammers in division 5 past plur work on wh projects?Transformed input:2 1i I I twh projects programmers in division 5 past plur work on?The first step in the implementation of wh-frontingis a search of the tree for the wh-item.
A slightlydifferent approach is used for paraphrasing than wouldbe used if simply generating a question from the inputparse.
The difference occurs because in the originalquestion the NP to be fronted may be the head nounof some relative clauses or prepositional phrases.
Ifgenerating, these clauses would be fronted along withthe head noun.
Since the clauses of the original ques-tion are broken down for the paraphrase, it will neverbe the case when paraphrasing that the NP to be front-ed also dominates relative clauses or preposit ionalphrases.
For this reason, the applicabil ity of wh-fronting is testing for and is applied in the flatteningprocess of the str ipped-down question.
Note that thephrase markers (or categories) of each word are re-tained as the tree is f lattened and thus the SD's can bematched against both the tree and its linearized ver-sion.
If wh-fronting applies, only one word need bemoved to the initial position.The paraphraser is capable of generating Englishfrom the input as well as paraphrasing (see Section 7).When generation is being done, the applicabil ity ofwh-fronting is tested for immediately before flattening.If the transformation applies, the tree is split.
Thesubtree of which the wh-item is the root is f lattenedseparately from the remainder of the tree and is atta-ched in fronted position to the string resulting fromflattening the other part.After wh-fronting has been applied, do-support isinvoked.
In CO-OP, the underlying representation of6 Amer ican Journal  of Computat iona l  L ingu is t i cs ,  Volume 9, Number  1, January-March 1983Kath leen  R. McKeown Paraphras ing  Quest ions  Us ing  G iven  and New In format ion1SC: 1condition:Input to rule:1t !wh projectsthe question does not contain modals of auxiliaryverbs?
Thus, fronting the wh-item necessitates supply-ing an auxiliary?
The following rule is used for do-support:SD: NP - NP - tense - num - V - X1 2 3 4SC: 1 2+do 3 4condition: 1 dominates whIn_nput o rule:1 2?
l I 5 I 'wh projects programmers in division3'past plur work on?
'Transformed input:1 2+do, , ,wh projects programmers in division 5 do3I Ipast plur work on?Subject-aux inversion is activated immediately af-terwards.
Again, if wh-fronting is applied, subject-auxinversion will apply also.
The rule is:SD: NP - NP - AUX - X2 3 43+2 0 41 dominates whIprogrammers in division 53do'past plur work on~Transformed input:1 3 2f \] ~ Iwh projects do programmers in division 54past plur work on?Tense-placement follows subject-aux inversion?Tense, number, and negation (if present) are attributesof all verbs in the parser's representation?
When anauxiliary is generated, the tense, number, and negationare moved from the verb to the auxiliary?
Formally:SD: X - AUX - Y - tense-num ( -no - )  V - Z1 2 3 4 5 6SC: 1 2+4 3 0 5 6Input to rule:1 2 3? '
programmers in division 5 IWh projects r~o ~4 5'past plur ~ 1work on?
'Transformed input:1 2 4, , f ' -" l  , ,Wh projects do past plur3 5t , I Iprogrammers in division 5 work on?Some transformational  nalyses propose that wh-fronting and subject-aux inversion apply to the relativeclause as well as the question.
In the CO-OP para-phraser, the head-noun is properly positioned by theflattening process and wh-fronting need not be used.Subject-aux inversion, however, may be applicable.
Incases where the head noun of the clause is not its sub-ject, subject-aux inversion results in the proper order?The rule for negation is tested during the transla-tion phase of execution.
It has been formalized as:SD: X - tense-num-V - NP - Y2 3 42+no 3 44 marked as negative1SC: 1condition:Input to rule:1'wh students'2 3I I I  Ipres plur have advisors?
(advisors has property "neg")Transformed input:1 2 + no 3'wh students' 'pres plur hav~ ' no ' fadvisors?lIn the CO-OP representation, an indication of negationis carried on the object of a binary relation (see Ka-plan 1979)?
When generating an English representa-tion of the question, it is possible in some cases toexpress negation as modif ication of the noun (seequestion (H) below)?
In all cases, however, negationcan be indicated as part of the verb (see version (I) ofquestion (H)).
Therefore, when the object is markedas negative, the paraphraser moves the negation tobecome part of the verbal element?
(H) Which students have no advisors?
(I) Which students don't  have advisors?In English, the negative marker is attached to theauxiliary of the verbal element and, therefore, as wasthe case for questions, an auxiliary must be generated?Do-support  is used.
The rule for do-support  afterAmer ican  Journa l  o f  Computat iona l  L ingu is t i cs ,  Vo lume 9, Number  1, January -March  1983 7Kathleen R. McKeown Paraphrasing Questions Using Given and New In format ionnegation differs from the one used after wh-fronting.They are presented this way for clarity, but could havebeen combined into one rule.SD: X - tense-num-V-no  - Y1 2 3SC: 1 do+2 3Input to rule:1 2 3i I !
I '  Iwh students pres plur have no advisors?Transformed input:1 do + 2 3I I I'wh students" do "pres  plur have no advisors?Tense-placement,  as described above, moves thetense, number, and negation from the verb to the aux-iliary verb.
The cycle of transformations invokedthrough application of negation is completed with thecontraction transformation.
The statement of thecontraction transformation is:SD: X - do+tense-num-V -no  - Y1 2 3 4 5SC: 1 #2+n' t# 3 0 5Input to rule:1 2 3 4 5I i I I I I  I I I'wh students do pres plur have no advisors?Transformed rules:1 #2+n'+# 3 0 5, i , I I , I Iwh students #do+pres+plur+n ' t# have advisors?where # indicates that the result must be treated as aunit for further transformations.
The morphologyroutines will combine the result to produce "don' t" .corrective response that could be generated by theparaphraser if (J) were asked:(J) Which programmers in division 3 work on pro-jects in oceanography?
(K) I don't  know of any projects in oceanography.Alternative suggestions are also used by the CO-OPsystem when the direct response to the user's questionis negative.
If an incorrect presupposition is removedfrom a question, the resulting question may no longerhave a negative response.
11 In such cases, CO-OPsuggests the wider class question to the user as a pos-sible interest.
CO-OP passes the MQL representingthis question to the paraphraser, which generates theEnglish for the suggestion.
A sequence like (J), (K)above might be followed by the alternative suggestion(L):(L) But you might be interested in programmers indivision 3 that work on any projects.For both types of responses, the paraphraser gener-ates the response using the paraphrase functions withminor differences.
The flattening process for genera-tion differs from that used for paraphrases in that thetree is not divided into subtrees representing iven andnew information and, therefore, the tree is f lattened asa whole.
The transformational grammar also appliesto the generation process, with the one differencebeing the point at which the applicabil ity of wh-fronting is tested for (described in Section 6.4).
Otherthan these changes and the use of different leadingphrases (e.g., "But you might be interested in .
.
. "
) ,the generation process is the same as the paraphraserprocess.
The generation function is general enoughthat it could be used for other types of responses incases when something other than a direct response isneeded.8.
Related Research7.
Other Features of the ParaphraserThe paraphraser is used for a second purpose in addi-tion to paraphrasing.
It can generate an English ver-sion of the parser's representat ion as well as para-phrase in the three-part form.
This function uses thesame procedures and grammar as the three-part para-phraser, but the tree is not split into three separatetrees before being flattened.In CO-OP, generation is used to produce alternativesuggestions and corrective responses.
A correctiveresponse is used to correct the user's false presupposi-tions.
When an existential presupposition encoded inthe question is incorrect, the portion of MQL repre-senting the failed presupposition (this is determined byCO-OP) is passed to the paraphraser, which generatesthe corrective response.
For example, (K) below is aAt the time of the CO-OP paraphraser implementation,two main other paraphrasers had been developed andimplemented for data base quest ion-answering sys-tems:?
PLANES, Waltz et al 1978;?
RENDEZVOUS Version 1, Codd 1978.Both systems used templates to form the paraphrases.Templates are canned English phrases (or sentences)containing slots that may be filled with different wordsto produce a variety of full English phrases.The PLANES system generates the paraphrase fromthe formal data base query using templates.
The proc-ess involves three specific actions.
English words aresubstituted for any abbreviations or code names in thel l  See Kap lan  1979 fo r  deta i l s  on  determin ing  the  most  ap-p ropr ia te  a l te rnat ive  suggest ion .8 Amer ican Journal  of Computational Linguistics, Volume 9, Number  1, January-March 1983Kathleen R. McKeown Paraphrasing Questions Using Given and New Informationdata base query, using a table look-up.
A single ap-propriate paraphrase template is selected for use basedon the query, and the slots in the template are thenfilled with words and phrases from the query.
Themajor effort in designing this kind of system is in theformation, by hand, of templates uitable for the par-ticular data base and for the types of questions thatcan be asked.
An example of an English question andthe PLANES paraphrase for it are shown below in (M):(M) Q: How many flights did plane 3 make inJan 73?P: PLANES searches the MONTHLY FLIGHTand MAINTENANCE SUMMARIES andreturns: The value of TOTAL FLIGHTSfor plane SERIAL #3 during January 1973.The RENDEZVOUS system also generates the para-phrase from the formal query using templates, al-though it is slightly more sophisticated than Waltz's.There are three parts to generation, and two types oftemplates are used.
A header template correspondingto the type of query is chosen first.
There are threetypes of queries in the system (FIND, EXIST, COUNT),of which FIND occurs most frequently.
The header forFIND is PRINT THE ... EVERY .... where the dotsmust be filled in.
The second part to the paraphrase isthe target list.
It specifies the attributes requested bythe user and is supplied by doing a table look-up onthe attribute.
The third part of the paraphrase iscalled the body.
It is formed by extracting templatesfrom tables, associated with particular items in thequery, that specify restrictions on the requested values.An example of a query and the paraphrase generatedby RENDEZVOUS is shown in (N) below.
(N) Q: I want to find certain projects.
Pipes weresent to them in Feb. 1975.P: Print the name of every project to which ashipment of a part named pipe was sentduring February 1975.The goals of the RENDEZVOUS generation compo-nent are important ones.
The generated English mustbe unambiguous, easy to understand, discriminating,and not misleading (Codd 1978).
Instead of develop-ing a general solution to achieve these goals, however,the research seems to be concentrated on particularexamples which don't meet these criteria.
This resultsin part from the use of templates.
The templates mustbe constructed beforehand for a particular data base,and great care must be taken to choose phrases thatcan be easily patched together with a variety of otherphrases.
Unforeseen interaction between juxtaposedphrases is a problem that frequently arises.
Such anapproach necessitates looking at particular examples,instead of the general framework.In both of these systems, the use of templatesmeans that the major effort in developing the systemmust be done by hand in formatting the English phras-es.
All questions that will be asked must be anticipat-ed ahead of time, and although the systems can beextended by adding new templates, undesirable inter-actions between new and old templates must be specif-ically avoided, and each new required addition doesnot ease the addition of subsequent templates.
Notethat this means coverage in a template system is alsodifficult to specify.The use of a grammar in the CO-OP paraphrasermakes it more flexible than these earlier paraphrasers:?
less work must be done by hand in formulating thesystem,?
interactions between templates are not a problemsince the grammar determines how to combinewords and phrases in an acceptable way, and?
the system is capable of handling new questions forwhich it has not been explicitly prepared, as long asthey fall within the syntactic range of the system.The paraphraser 's  ability to perform the generationtask described in the previous section nicely illustratesits flexibility.
Note furthermore that the CO-OP para-phraser specifically addresses the problems of disam-biguating relative clause modification in a general wayand of generating a paraphrase that differs from theoriginal question on a theoretical basis, issues not ad-dressed by either the PLANES or the RENDEZVOUSparaphraser.9.
Conc lus ionsThe paraphraser described here is a syntactic one.While this work has examined the reasons for differentforms of expression, additions must be made in thearea of semantics.
The substitution of synonyms,phrases, or idioms for portions or all of the questionrequires an examination of the effect of context onword meaning and of the intentions of the speaker onword or phrase choice.
The lack of a rich semanticbase and contextual information dictated the syntacticapproach used here, but the paraphraser can be ex-tended once a wider range of information becomesavailable.When testing the implementation of the CO-OPsystem and extending its linguistic coverage, the para-phraser proved particularly helpful in debugging incor-rect parses.
It provided fast, easy-to-recognize notifi-cation when an incorrect interpretation had beenmade.
This leads us to believe that the paraphrasewould also prove helpful to actual users of the systemwere CO-OP to interpret a question differently than itwas intended.
Testing of this facility with a largenumber of actual users remains a topic for futurework.The CO-OP paraphraser has been designed to bedomain- independent,  and thus a change of the database requires no change in the paraphraser.
Paraphra-American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 9Kathleen R. McKeown Paraphrasing Questions Using Given and New Informationsers that use the template form, however, will requiresuch changes.
This is because the templates or pat-terns, which constitute the type of question that canbe asked, are necessarily dependent on the domain.Different sets of templates must be used for differentdata bases.The CO-OP paraphraser also differs from othersystems in that it generates the question using a trans-formation grammar of questions.
It addresses twospecific problems involved in generating paraphrases:1. ambiguity in determining which noun phrases arelative clause modifies;2. the production of a question that differs from theuser's.These goals have been achieved for questions usingrelative clauses through the application of a theory ofgiven and new information to the generation process.AcknowledgmentsThis work was partially supported by an IBM fellow-ship and NSF grant MC78-08401.
I would like to thankDr.
Aravind K. Joshi and Dr. Bonnie Webber for theirinvaluable comments on the style and content of thispaper.ReferencesAkmajian, A. and Heny, F. 1975 An Introduction to the Principles ofTransformational Syntax.
Academic Press, New York, New York.Chafe, W.L.
1977 Givennness, Contrastiveness, Definiteness,Subjects, Topics, and Points of View.
In Li, C.N., Ed., Subjectand Topic.
Academic Press, New York, New York.Codd, E.F. et al 1978 Rendezvous Version 1: An ExperimentalEnglish-Language Query Formulation System for Casual Usersof Relational Data Bases.
IBM Research Report RJ2144, IBMResearch Laboratory, San Jose, California.Cullicover, P.W.
1976.
Syntax.
Academic Press, New York, NewYork.Danes, F., Ed.
1974 Papers on Functional Sentence Perspective.Academia, Prague.Firbas, Jan. 1966 On Defining the Theme in Functional SentenceAnalysis.
In Travaux Linguistiques de Prague 1.
University ofAlabama Press.Fibras, Jan. 1974 Some Aspects of the Czechoslovak Approach toProblems of Functional Sentence Perspective.
Papers on Func-tional Sentence Perspective.
Academia, Prague.Goldman, N. 1975 Conceptual Generation.
In Schank, R.C., Ed.,Conceptual Information Processing.
North-Holland PublishingCo., Amsterdam.Grice, H.P.
1975 Logic and Conversation.
In Cole, P. and Mor-gan, J.L., Ed., Syntax and Semantics: Speech Acts, Vol.
3.
Aca-demic Press, New York, New York.Halliday, M.A.K.
1967 Notes on Transitivity and Theme in Eng-lish.
Journal of Linguisticsx 3.Heidorn, G. 1975 Augmented Phrase Structure Grammar.
InTINLAP-1 Proceedings.Joshi, A.K.
1979 Centered Logic: The Role of Entity CenteredSentence Representation in Natural Language Inferencing.
inIJCAI Proceedings.Kaplan, S.J.
1979 Cooperative Responses from a Portable NaturalLanguage Data Base Query System.
Ph.D. dissertation.
Univer-sity of Pennsylvania, Philadelphia, Pennsylvania.McDonald, D.D.
1978 Subsequent Reference: Syntactic and Rhet-orical Constraints.
In TINLAP-2 Proceedings.McKeown, K. 1979 Paraphrasing Using Given and New Informa-tion in a Question-answering System.
Master's thesis.
Univer-sity of Pennsylvania, Philadelphia, Pennsylvania.Morgan, J.L.
and Green, G.M.
1977 Pragmatics and ReadingComprehension.
University of Illinois.Prince, E. 1979 On the Given/New Distinction, CLS 15.Simmons, R. and Slocum, J.
1972 Generating English Discoursefrom Semantic Networks, Communications of the A CM 5 (10).Waltz, D.L.
1978 An English Language Question Answering Sys-tem for a Large Relational Data Base, CACM 21(7).10 American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983
