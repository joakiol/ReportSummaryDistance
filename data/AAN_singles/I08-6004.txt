Some Experiments in Mining Named Entity Transliteration Pairs fromComparable CorporaK SaravananMicrosoft Research IndiaBangalore, Indiav-sarak@microsoft.comA KumaranMicrosoft Research IndiaBangalore, Indiakumarana@microsoft.comAbstractParallel Named Entity pairs are importantresources in several NLP tasks, such as,CLIR and MT systems.
Further, such pairsmay also be used for training transliterationsystems, if they are transliterations of eachother.
In this paper, we profile the perfor-mance of a mining methodology in miningparallel named entity transliteration pairs inEnglish and an Indian language, Tamil,leveraging linguistic tools in English, andarticle-aligned comparable corpora in  thetwo languages.
We adopt a methodologyparallel to that of [Klementiev and Roth,2006], but we focus instead on miningparallel named entity transliteration pairs,using a well-trained linear classifier toidentify transliteration pairs.
We profilethe performance at several operating para-meters of our algorithm and present theresults that show the potential of theapproach in mining transliterations pairs; inaddition, we uncover a host of issues thatneed to be resolved, for effective mining ofparallel named entity transliteration pairs.1 Introduction & MotivationParallel Named Entity (NE) pairs are importantresources in several NLP tasks, from supportingCross-Lingual Information Retrieval (CLIR)systems, to improving Machine Translation (MT)systems.
In addition, such pairs may also be usedfor developing transliteration systems, if they aretransliterations of each other.
Transliteration of aname, for the purpose of this work, is defined as itstranscription in a different language, preserving thephonetics, perhaps in a different orthography[Knight and Graehl, 1997] 1 .
While traditionaltransliteration systems have relied on hand-craftedlinguistic rules, more recently, statistical machinelearning techniques have been shown to be effec-tive in transliteration tasks [Jung et al, 2000] [Ab-dulJaleel and Larkey, 2003] [Virga  and Kudhan-pur , 2003] [Haizhou et al, 2004].
However, suchdata-driven approaches require significant amountsof training data, namely pairs of names in two dif-ferent languages, possibly in different orthography,referred to as transliteration pairs, which are notreadily available in many resource-poor languages.It is important to note at this point, that NEs arefound typically in news corpora in any givenlanguage.
In addition, news articles covering thesame event in two different languages may reason-ably be expected to contain the same NEs in therespective languages.
The perpetual availability ofnews corpora in the world?s languages, points tothe promise of  mining transliteration pairsendlessly, provided an effective identification ofsuch NEs in specific languages and pairing themappropriately, could be devised.Recently, [Klementiev and Roth, 2006] outlined anapproach by leveraging the availability of article-aligned news corpora between English and Rus-sian, and tools in English, for discovering translite-ration pairs between the two languages, and pro-gressively refining the discovery process.
In thispaper, we adopt their basic methodology, but wefocus on 3 different issues:1 London rewritten as ??????
in Tamil, or ????
in Arabic (bothpronounced as London), are considered as transliterations, butnot the rewriting of New Delhi as ????
??????
(puthu thilli) inTamil.1.
mining comparable corpora for NE pairs, leve-raging a well trained classifier,2.
calibrating the performance of this miningframework, systematically under different pa-rameters for mining, and,3.
uncovering further research issues in mining NEpairs between English and an Indian language,Tamil.While our analysis points to a promising approachfor mining transliteration pairs, it also uncoversseveral issues that may need to be resolved, tomake this process highly effective.
As in [Klemen-tiev and Roth, 2006] no language specific know-ledge was used to refine our mining process, mak-ing the approach broadly applicable.2 Transliteration Pairs DiscoveryIn this section, we outline briefly the methodologypresented in [Klementiev and Roth, 2006], andrefer interested readers to the source for details.They present a methodology to automaticallydiscover parallel NE transliteration pairs betweenEnglish and Russian, leveraging the availability ofa good-quality Named Entity Recognizer (NER) inEnglish, and article-aligned bilingual comparablecorpora, in English and Russian.
The key idea oftheir approach is to extract all NEs in English, andidentify a set of potential transliteration pairs inRussian for these NEs using a simple classifiertrained on a small seed corpus, and re-ranking theidentified pairs using the similarity between thefrequency distributions of the NEs in thecomparable corpora.
Once re-ranked, thecandidate pairs, whose scores are above a thresholdare used to re-train the classifier, and the process isrepeated to make the discovery process moreeffective.To discriminate transliteration pairs from othercontent words, a simple perceptron-based linearclassifier, which is trained on n-gram featuresextracted from a small seed list of NE pairs, isemployed leveraging the fact that transliterationrelies on approximately monotonic alignmentbetween the names in two languages.
Thepotential transliteration pairs identified by thisclassifier are subsequently re-ranked using aDiscrete Fourier Transform based similaritymetric, computed based on the frequency of wordsof the candidate pair, found in the article-alignedcomparable corpora.
For the frequency analysis,equivalence classes of the words are formed, usinga common prefix of 5 characters, to account for therich morphology of Russian language.
Therepresentative prefix of each of the classes are usedfor classification.Finally, the high scoring pairs of words are used tore-train the perceptron-based linear classifier, toimprove the quality of the subsequent rounds.
Thequality of the extracted NE pairs is shown toimprove, demonstrating viability of such anapproach for successful discovery of NE pairsbetween English and Russian.3 Adoption for Transliteration PairsMiningWe adopt the basic methodology presented in[Klementiev and Roth, 2006], but we focus onthree specific issues described in the introduction.3.1 Mining of Transliteration PairsWe start with comparable corpora in English andTamil, similar in size to that used in [Klementievand Roth, 2006], and using the English side of thiscorpora, first, we extract all the NEs that occurmore than a given threshold parameter, FE, using astandard NER tool.
The higher the threshold is,the more will be the evidence for legitimate transli-teration pairs, in the comparable corpora, whichmay be captured by the mining methodology.
Theextracted list of NEs provides the set of NEs inEnglish, for which we mine for transliteration pairsfrom the Tamil side of the comparable corpora.We need to identify all NEs in the Tamil side ofthe corpora, in order to appropriately pair-up withEnglish NEs.
However, given that there is no pub-licly available NER tool in Tamil (as the case maybe in many resource-poor languages) we start withan assumption that all words found in the Tamilcorpus are potentially NEs.
However, since Tamilis a highly morphologically inflected language, thesame NE may occur in its various inflected formsin the Tamil side of the corpora; hence, we collectthose words with the same prefix (of fixed size)into a single bucket, called equivalence class, andconsider a representative prefix, referred to as sig-nature of the collection for comparison.
Theassumption here is that the common prefix wouldstand for a Tamil NE, and all the members of theequivalence class are the various inflected forms ofthe NE.
We use such a signature to classify a Ta-mil word as potential transliteration of an Englishword.
Again, we consider only those signaturesthat have occurred more than a threshold parame-ter, FT, in the Tamil side of the comparable corpora,in order to strengthen support for a meaningfulsimilarity in their frequency of occurrence.We used a linear Support Vector Machine classifi-er (details given in a later section) trained on asizable seed corpus of transliterations betweenEnglish and Tamil, and use it to identify potentialTamil signatures with any of the NEs extractedfrom the English side.
We try to match each of theNEs extracted from the English side, to every sig-nature from the Tamil side, and produce an orderedlist of Tamil signatures that may be potential trans-literations for a given English NE.
Every Tamilsignature, thus, would get a score, which is used torank the signatures in the decreasing order of simi-larity.
Subsequently, we consider only those abovea certain threshold for analysis, and in addition,consider only the top-n candidates.3.2 Quality RefinementSince a number of such transliteration candidatesare culled from the Tamil corpus for a given NE inEnglish, we further cull out unlikely candidates, byre-ranking them using frequency cues from thealigned comparable corpora.
For this, we startwith the hypothesis, that the NEs will have similarnormalized frequency distributions with respect totime, in the two corpora.
Given that the news cor-pora are expected to contain same names in similartime periods in the two different languages, thefrequency distribution of words in the twolanguages provides a strong clue about possibletransliteration pairs; however, such potential pairsmight also include other content words, such as,?
????????
(soshaliSt), ??????
(kavanamaa-ka), ???????
(keetpathu), etc., which are commonnouns, adjectives or even adverbs and verbs.
Onthe other hand, function words are expected to beuniformly distributed in the corpus, and hence maynot have high variability like content words.
Notethat the NEs in English are not usually inflected.Since Tamil NEs usually have inflections, thefrequency of occurrence of a NE in Tamil must benormalized across all forms, to make it reasonablycomparable to the frequency of the correspondingEnglish NE.
This was taken care of by consideringthe signature and its equivalence class.
Hence thefrequency of occurrence of a NE (i.e., its signature)in Tamil is the sum of frequencies of all membersin its equivalence class.For identifying the names between the languages,we first create a frequency distribution of everyword in English and Tamil, by creating temporalbins of specific duration, covering the entire time-line of the corpus.
The frequency is calculated asthe number of occurrences of each signature in thebin interval.
Once the frequency distributions areformed, they are normalized for every signature.Given the normalized frequencies, two words areconsidered to have same (or, similar) pattern ofoccurrence in the corpus, if the normalizedfrequency vectors of the two words are the same(or, close within a threshold).
Figure 1 shows thefrequency of the word Abishek, and its Tamil ver-sion, ???????
(apishek) as a frequency plot,where a high correlation between the frequenciescan be observed.Figure 1: Names Frequency Plot in Comparable CorporaHence, to refine the quality of the classifier output,we re-rank the list of candidates, using the distancebetween the frequency vectors of the English NE,and the Tamil candidate signature.
This stepmoves up those signatures that have similar pat-terns of occurrence, and moves down those that donot.
It is likely that such frequency cues from thecomparable corpora will make the quality ofmatched transliteration pairs better, yielding bettermined data.4 Experimental Setup & ResultsIn this section, we present the experimental setupand the data that we used for mining transliterationpairs from comparable corpora in two languages:English and the Indian language, Tamil.
We eva-luate and present the effectiveness of the metho-dology in extracting NE pairs, between these lan-guages, under various parameters.4.1 Comparable CorporaWe used a set of news articles from the NewIndian Express (in English) and Dinamani (inTamil) roughly covering similar events in Englishand Tamil respective, and covering a period ofabout 8 months, between January and August of2007.
The articles were verified to contain similarset of NEs, though only a fraction of them areexpected to be legitimate transliteration pairs.Others related NEs could be translations,  forexample, chief minister in English vs ????????
(muthalvar) in Tamil, abbreviation which are notusually transliterated but spelled out , for example,ICC in English, and ?
?
?
(aicici) in Tamil, orco-references , for example, New Delhi in English,and ??????????
(puthu thilli) in Tamil.
While thenumber of      articles used were roughly the same(~2,400), the number of words in Tamil were onlyabout 70% of that in English.
This is partially dueto the fact Tamil is a highly agglutinative lan-guage, where various affixes (prefixes and suffixesof other content words) stand for function wordsand prepositions in English, thus do not contributeto the word count.
Further, since our focus is onmining names, we expect the same NEs to be cov-ered in both the corpora, and hence we do notexpect a severe impact on mining.Corpus TimePeriodSizeArticles WordsNew IndianExpress(English)2007.01.01 to2007.08.312,359 347,050Dinamani(Tamil)2007.01.01 to2007.08.312,359 256,456Table 1: Statistics on Comparable CorporaFrom the above corpora, we first extracted all theNEs from the English side, using the StanfordNER tool [Finkel et al 2005].
No multiwordexpressions were considered for this experiment.Also, only those NEs that have a frequency countof more than a threshold value of FE were consi-dered, in order to avoid unusual names that arehard to identify in the comparable corpora.
Thus,we extracted from the above corpora, only a subsetof NEs found in the English side to be matchedwith their potential transliteration pairs; for exam-ple, for a parameter setting of FE to 10, we extractonly 274 legitimate NEs.From the Tamil side of the corpora, we extractedall words, and grouped them in to equivalenceclasses, by considering a prefix of 5 characters.That is, all words that share the same 5 characterswere considered to be morphological variations ofthe same root word or NE in Tamil.
After theywere grouped, the longest common prefix of thegroup is extracted, and is used as the signature ofthe equivalence class.
It should be noted here thatthough the number of unique words in the corpusis about 46,503, the number of equivalence classesto be considered changes depending on the filter-ing threshold that we use in the Tamil side.
Forexample, at a threshold (FT) value of 1, the numberof equivalence classes is 14,101.
It changes to4,612 at a threshold (FT) value of 5, to 2,888 at athreshold (FT) value of 10 and to 1779 at a thre-shold (FT) value of 20.
However, their signature(i.e., longest common prefix) sizes ranged from 5to 13 characters.
Thus, we had about 14,101 equi-valence classes, covering all the words from theTamil corpus.
The equivalence classes thusformed were as shown in Figure 2:TamilSignatureTamilEquiv.
Class????????(aiSvaryaa)????????
(aiSvaryaa),????????????
(aiSvaryaavin),??????????????
(aiSvaryaavukku),??????????
(aiSvaryaavai),????????????????
(aiSvaryaaviRkum),?????????????
(aiSvaryaavutan)?????(piram)??????????????
(pirammapuththiraa),?????????????
(pirammaaNdamaana),???????
(pirampu), ???????
(pirammaa)??????(kaaveeri)??????
(kaaveeri)?
?
?(aicici)?
?
?
(aicici), ?
?
?????
(aicicyin),?
?
????
(aicici kku), ?
?
?????
(aicicithaan),?
?
??????
(aiciciyidam)Figure 2: Signatures and Equivalence ClassesAs can be seen in the table, all elements of anequivalence class share the same signature (bydefinition).
However, some signatures, such as????????
(aiSvaryaa), correspond to an equiva-lence class in which every element is a morpholog-ical variation of the signature.
Such equivalenceclasses, we name them pure.
Some signaturesrepresent only a subset of the members, as this setincludes some members unrelated to this stem; forexample, the signature ?????
(piram), correctlycorresponds to ???????
(pirammaa), and incorrect-ly to the noun ???????
(pirambu), as well as incor-rectly to the adjective ?????????????
(piram-maandamaana).
We name such equivalenceclasses fuzzy.
Some are well formed, but may notultimately contribute to our mining, being an ab-breviation, such as ICC (in Tamil, ?
?
?
), eventhough they are used similar to any NE in Tamil.While most equivalence classes contained inflec-tions of single stems, we also found morphologicalvariations of several compound names in the sameequivalence class such as, ?????????
(akamath?a-kar), ?????????
(akamathaapaath), with ?????
(akamath).4.2 Classifier for Transliteration Pair Identi-ficationWe used SVM-light [Joachims, 1999], a Support-vector Machine (SVM) from Cornell University, toidentify near transliterations between English andTamil.
We used a seed corpus consisting of 5000transliteration pair samples collected from a differ-ent resource, unrelated to the experimental compa-rable corpora.
In addition to the 5000 positiveexamples from this seed corpus, 5000 negativeexamples were extracted randomly, but incorrectly,aligned names from this same seed corpus andused for the classifier.The features used for the classification are binaryfeatures based on the length of the pair of stringsand all aligned unigram and bigram pairs, in eachdirection, between the two strings in the seed cor-pus in English and Tamil.
The length features in-clude the difference in lengths between them (up to3), and a separate binary feature if they differ bymore than 3.
For unigram pairs, the ith character ina language string is matched to (i-1)st,  ith and(i+1)st characters of the other language string.Each string is padded with special characters at thebeginning and the end, for appropriately formingthe unigrams for the first and the last characters ofthe string.
In the same manner, for binary features,every bigram extracted with a sliding window ofsize 2 from a language string, is matched withthose extracted from the other language string.After the classifier is trained on the seed corpus ofhand crafted transliteration pairs, during the min-ing phase, it compares every English NE extractedfrom the English corpus, to every signature fromthe Tamil corpus.While classifier provided ranked list of all the sig-natures from Tamil side, we consider only the top-30 signatures (and the words in the equivalenceclasses) for subsequent steps of our methodology.We hand-verified a random sample of about 100NEs from English side, and report in Table 5, thefraction of the English NEs for which we found atleast one legitimate transliteration in the top-30candidates (for example, the  recall of the classifieris 0.56, in identifying a right signature in the top-30 candidates, when the threshold FE is 10 & FT is1).It is interesting to note that as the two thresholdfactors are increased, the number of NEs extractedfrom the English side decreases (as expected), andthe average number of positive classifications perEnglish NE reduces (as shown in Table 2), consi-dering all NEs.
This makes sense as the classifierfor identifying potential transliterations is trainedwith sizable corpora and is hence accurate; but, asthe thresholds increase, it has less data to workwith, and possibly a fraction of legitimate translite-rations also gets filtered with noise.Parameters ExtractedEnglish NEsAve.
PositiveClassifications/English NEFE: 10, FT: 1 274 79.34FE: 5, FT: 5 588 29.50FE: 10, FT: 10 274 17.49FE: 20, FT: 20 125 10.55Table 2: Threshold Parameters vs Mining QuantityTable 3 shows some sample results after the classi-fication step with parameter values as (FE: 10, FT: 1).Right signature for Aishwarya (corresponding toall correct transliterations) has been ranked 10 andGandhi (with only a subset of the equivalence classcorresponding to the right transliterations) has beenranked at 8.
Three different variations of Argenti-na can be found, ranked 2nd, 3rd and 13th.
While, ingeneral no abbreviations are found (usually theirTamil equivalents are spelled out), a rare case ofabbreviation (SAARC) and its right transliteration isranked 1st.EnglishNamed EntityTamil Equivalence ClassSignaturePrecision Rankaishwarya ????????
(aiSvaryaa) 1 10argentina ?????????????
(arjantinaavila)1 2argentina ?????????????
(aarjantinaavi)1 3argentina ??????????????
(aarjantinaavil)1 13gandhi ?????
(kaa?tha) 0.2121 8saarc  ?????
(saark) 1 1Table 3: Ranked List after Classification Step4.3 Enhancing the Quality of Transliteration-PairsFor the frequency analysis, we use the frequencydistribution of the words in English and Tamil sideof the comparable corpora, counting the number ofoccurrences of NEs in English and the Tamilsignatures in each temporal bin spanning the entirecorpus.
We consider one temporal bin to be equalto two successive days.
Thus, each of the EnglishNEs and the Tamil signatures is represented by avector of dimension approximately 120.
We com-pute the distance between the two vectors, andhypothesize that they may represent the same (or,similar) name, if the difference between them iszero (or, small).
Note that, as mentioned earlier,the frequency vector of the Tamil signature willcontain the sum of individual frequencies of theelements in the equivalence class corresponding toit.
Given that the classifier step outputs a list ofEnglish NEs, and associated with each entry, aranked list of Tamil signatures that are identified aspotential transliteration by the classifier, we com-pute the distance between the frequency vector ofevery English NE, with each of the top-30 signa-tures in the ranked list.
We re-rank the top-30candidate strings, using this distance measure.
Theoutput is similar to that shown in Table 4, but withpossibly a different rank order.EnglishNamed EntityTamil Equivalence ClassSignaturePrecision Rankaishwarya ????????
(aiSvaryaa) 1 1argentina ?????????????
(arjantinaavila)1 1argentina ?????????????
(aarjantinaavi)1 3argentina ??????????????
(aarjantinaavil)1 14gandhi ?????
(kaa?tha) 0.2121 16saarc  ?????
(saark) 1 1Table 4: Ranked List after Frequency Analysis StepOn comparing Table 3 and 4, we observe that someof the ranks have moved for the better, and someof them for the worse.
It is interesting to note thatthe ranking of different stems corresponding toArgentina has moved differently.
It is quite likelythat merging these three equivalence classes cor-responding to the English NE Argentina might re-sult in a frequency profile that is more closelyaligned to that of the English NE.4.4 Overall Performance of TransliterationPairs MiningTo find the effectiveness of each step of the miningprocess in identifying the right signatures (andhence, the equivalence classes) for a given EnglishNE, we computed the Mean Reciprocal Rank(MRR) of the random sample of 100 transliterationpairs mined, in two different ways:  First, we com-puted MRRpure, which corresponded to the first oc-currence of a pure equivalence class, and MRRfuzzy,which corresponded to the first occurrence of afuzzy equivalence class in the random samples.MRRfuzzy captures how successful the mining wasin identifying one possible transliteration, MRRpure,captures how successful we were in identifying anequivalence class that contains only right translite-rations2.
In addition, these metrics were computed,corresponding to different frequency thresholds forthe occurrence of a English NE (FE) and a Tamilsignature (FT).
The overall quality profile of themining framework in mining the NE transliterationpairs in English and Tamil is shown in Table 5.Additionally, we also report the recall metric (thefraction of English NEs, for which at least one le-2 However, it should be noted that the current metricsneither capture how pure an equivalence class is (frac-tion of the set that are correct transliterations), nor thesize of the equivalence class.
We hope to specify theseas part of quality of mining, in our subsequent work.gitimate Tamil signature was identified) computedon a randomly chosen 100 entity pairs.ParametersClassificationStepFrequencyAnalysis Step Re-call MRRfuzzyMRRpureMRRfuzzyMRRpureFE: 10, FT: 1 0.3579 0.2831 0.3990 0.3145 0.56FE: 5, FT: 5 0.4490 0.3305 0.5064 0.3529 0.61FE: 10, FT: 10 0.4081 0.2731 0.4930 0.3494 0.57FE: 20, FT: 20 0.3489 0.2381 0.4190 0.2779 0.47Table 5: Quality Profile of NE Pairs ExtractionFirst, it should be noted that the recalls are thesame for both the steps, since Frequency Analysisstep merely re-arranges the output of the Classifi-cation step.
Second, the recall figures drop, asmore filtering is applied to the NEs on both sides.This trend makes sense, since the classifier getsless data to work with, as more legitimate wordsare filtered out with noise.
Third, as can be ex-pected, MRRpure is less than the MRRfuzzy at everystep of the mining process.
Fourth, we see that theMRRpure and the MRRfuzzy improve between the twomining steps, indicating that the time-series analy-sis has, in general, made the output better.Finally, we find that the MRRpure and the MRRfuzzykeep dropping with increased filtering of EnglishNEs and Tamil signatures based on their frequen-cy, in both the classification and frequency analy-sis steps.
The fall of the MRRs after the classifica-tion steps is due to the fact that the classifier hasless and less data with the increasing threshold,and hence some legitimate transliterations may befiltered out as noise.
However, the frequencyanalysis step critically depends on availability ofsufficient words from the Tamil side for similaritytesting.
In frequency analysis step, the fall ofMRRs from threshold 5 to 10 is 0.0134 on MRRfuzzyand 0.0035 on MRRpure.
This fall is comparativelyless to the fall of MRRs from threshold 10 to 20which is 0.074 on MRRfuzzy and 0.0715 on MRRpure.This may be due to the fact that the number of legi-timate transliterations filtered out from threshold 5to 10 is less when compared to the number of legi-timate transliterations filtered out from threshold10 to 20.
These results show that with less numberof words filtered, it can get reasonable recall andMRR values.
More profiling experiments may beneeded to  validate this claim.5 Open Issues in NE pair MiningIn this paper, we outline our experience in miningparallel NEs between English and Tamil, in anapproach similar to the one discussed in [Klemen-tiev and Roth, 2006].
Over and above, we madeparameter choices, and some procedural modifica-tions to bridge the underspecified methodologygiven in the above work.
While the results arepromising, we find several issues that need furtherresearch.
We outline some of them below:5.1 Indistinguishable SignaturesTable 7 shows a signature that offers little help indistinguishing a set of words.
Both the words,?
????
(cennai) and morphological variations of?
??
(cen), share the same 5-character signature,namely, ?
???
(cenna), affecting the frequencydistribution of the signature adversely.EnglishNamedEntityTamilNamedEntityTamilEquivalent Classchennai?
????(cennai)?
????
(cennai), ?
????????
(cennaiyil),?
??????????????
(cennaiyilirunthu),?
??????
(cennin), ?
????????
(cen-nukku),?
??????
(cennaiyai)Table 7: Multiple-Entity Equivalence Class5.2 AbbreviationsTable 8 shows a set of abbreviations, that are notidentified well in our NE pair mining.
Between thetwo languages, the abbreviations may be eitherexpanded, as BJP expanded to (the equivalenttranslation for Bharatiya Janatha Party in Tamil),or spelled out, as in BSNL referred to as???????????
(pieSenel).
The last example is veryinteresting, as each W in English is written out as???????
(tapiLyuu).
All these are hard to captureby a simple classifier that is trained on well-formedtransliteration pairs.EnglishNamedEntityTamilNamed EntityBJP????
(paajaka), ??.?.?.
(paa.
ja.
ka.
), ??????????
???
?
(paarathiiya janathaa katci)BSNL???????????
(pieSenel), ???????????????
(pieSenellin), ?????????????
(piesenellai)WWW?????????????????????
(tapiLyuutapiLyuutapiLyuu)Table 8: Multiple-Entity Equivalence Class5.3 Multiword ExpressionsThis methodology is currently designed for miningonly single word expressions.
It may be an inter-esting line of research to mine multiword expres-sions automatically.6 Related WorkOur work essentially follows a similar procedureas reported in [Klementiev and Roth, 2006] paper,but applied to English-Tamil language pair.
Earli-er works, such as [Cucerzan and Yarowsky, 1999]and [Collins and Singer, 1999] addressed identifi-cation of NEs from untagged corpora.
They reliedon significant contextual and morphological clues.
[Hetland, 2004] outlined methodologies based ontime distribution of terms in a corpus to identifyNEs, but only in English.
While a large body ofliterature exists on transliteration, we merely pointout that the focus of this work (based on [Klemen-tiev and Roth, 2006]) is not on transliteration, butmining transliteration pairs, which may be used fordeveloping a transliteration system.7 ConclusionsIn this paper, we focused on mining NE transliterationpairs in two different languages, namely English and anIndian language, Tamil.
While we adopted a methodol-ogy similar to that in [Klementiev and Roth, 2006], ourfocus was on mining parallel NE transliteration pairs,leveraging the availability of comparable corpora and awell-trained linear classifier to identify transliterationpairs.
We profiled the performance of our miningframework on several parameters, and presented theresults.
Our experiment results are inline with thosereported by [Klementiev and Roth, 2006].
Given thatthe NE pairs are an important resource for several NLPtasks, we hope that such a methodology to mine thecomparable corpora may be fruitful, as comparablecorpora may be freely available in perpetuity in severalof the world?s languages.8 AcknowledgementsWe would like to thank Raghavendra Udupa,Chris Quirk, Aasish Pappu, Baskaran Sankaran,Jagadeesh Jagarlamudi and Debapratim De fortheir help.ReferencesNasreen AbdulJaleel and Leah S. Larkey.
2003.
Statisticaltransliteration for English-Arabic cross language informa-tion retrieval.
In Proceedings of CIKM, pages 139?146,New York, NY, USA.Jenny Rose Finkel, Trond Grenager, and ChristopherManning.
2005.
Incorporating Non-local Information intoInformation Extraction Systems by Gibbs Sampling.
InProceedings of the 43nd Annual Meeting of the Associationfor Computational Linguistics (ACL 2005), pp.
363-370.L Haizhou, Z Min and S Jian.
2004.
A Joint Source-ChannelModel for Machine Transliteration.
In Proceedings of 42ndMeeting of Assoc.
of Computational Linguistics.Magnus Lie Hetland.
2004.
Data Mining in Time Series Data-bases, a chapter in A Survey of Recent Methods for Effi-cient Retrieval of Similar Time Sequences.
World Scientif-ic.T.
Joachims.
1999.
11 in: Making large-Scale SVMLearning Practical.
Advances in Kernel Methods -Support Vector Learning, B. Sch?lkopf and C. Burgesand A. Smola (ed.
), MIT Press.Sung Young Jung, SungLim Hong, and Eunok Paek.
2000.
AnEnglish to Korean transliteration model of extended mar-kov window.
In Proceedings of the International Confe-rence on Computational Linguistics (COLING), pages383?389.Alexandre Klementiev and Dan Roth.
2006.
Named EntityTransliteration and Discovery from Multilingual Compara-ble Corpora.
In Proceedings of the Human LanguageTechnology Conference of the North American Chapter ofthe ACL, pages 82?88.Kevin Knight and Jonathan Graehl.
1997.
Machine translite-ration.
In Proceedings of the Meeting of the European As-sociation of Computational Linguistics, pages 128?135.Yusuke Shinyama and Satoshi Sekine.
2004.
Named entitydiscovery using comparable news articles.
In Proceedingsthe International Conference on Computational Linguistics(COLING), pages 848?853.Richard Sproat, Tao Tao, ChengXiang Zhai.
2006.
NamedEntity Transliteration with Comparable Corpora.
In Pro-ceedings of the 21st International Conference on Computa-tional Linguistics and 44th Annual Meeting of the ACL,pages 73?80, Sydney.Tao Tao and ChengXiang Zhai.
2005.
Mining comparablebilingual text corpora for cross-language information inte-gration.
In KDD?05, pages 691?696.Tao Tao, Su-Youn Yoon, Andrew Fister, Richard Sproat, andChengXiang Zhai.
2006.
Unsupervised named entity transli-teration using temporal and phonetic correlation.
In EMNLP2006, Sydney, July.Paula Virga and Sanjeev Khudanpur.
2003.
Transliteration ofProper Names in Cross-Lingual Information Retrieval.
InProceedings of Workshop on Multilingual and Mixed-Language Named Entity Recognition.
