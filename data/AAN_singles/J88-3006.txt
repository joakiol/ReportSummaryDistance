TAILORING OBJECT DESCRIPT IONS TO A USER'S  LEVEL  OF  EXPERT ISEC~ci le  L .
Par i sDepar tment  of  Computer  ScienceCo lumbia  Univers i tyNew York ,  NY  10027A question answering program providing access to a large amount of data will be most useful if it cantailor its answers to each individual user.
In particular, a user's level of knowledge about the domain ofdiscourse is an important factor in this tailoring if the answer provided is to be both informative andunderstandable to the user.
In this research, we address the issue of how the user's domain knowledgecan affect an answer.
By studying texts, we found that the user's level of domain knowledge affected thekind of information provided and not just the amount of information, as was previously assumed.Depending on the user's assumed domain knowledge, a description can be either parts-oriented orprocess-oriented.
Thus the user's level of expertise in a domain can guide a system in choosing theappropriate facts from the knowledge base to include in an answer.
We propose two distinct descriptivestrategies that can be used in a question answering program, and show how they can be mixed to includethe appropriate information from the knowledge base, given the user's domain knowledge.
We haveimplemented these strategies in TAILOR, a computer system that generates descriptions of devices.TAILOR uses one of the two discourse strategies identified in texts to construct a description for eithera novice or an expert.
It can merge the strategies automatically to produce a wide range of differentdescriptions to users who fall between the extremes of novice or expert, without requiring an a priori setof user stereotypes.1 INTRODUCTIONThe tailoring of answers according to a person' s domainknowledge frequently occurs in human communication.For example, an explanation aimed at a child of how acar engine works will be different han one aimed at anadult, and an explanation adequate for a music studentis probably too superficial for one in mechanical engi-neering.
We have found further evidence of this phe-nomenon in naturally occurring texts (Collier 1962,Britannica 1984, Britannica-Junior 1963, New Book ofKnowledge 1967, Encyclopedia of Science 1982, Chev-rolet 1978, Weissler 1973), where the information pre-sented to readers varies with their assumed level ofgeneral knowledge.Likewise, a question answering program that pro-vides access to a large amount of data to many differentusers could be more effective if it could customize itsanswers to each user, retrieving from its knowledgebase the facts that are most appropriate and useful for agiven user.
Much research to date has focused ontailoring an answer depending on a user's goals, butcustomizing an answer depending on what the userknows about the domain of the question has beenoverlooked.
This is an important factor in tailoring ananswer if the answer provided is to be both informativeand understandable to the user.
The answer should notprovide information that is obvious to the user (Grice1975).
However, if the answer assumes knowledge thatthe user does not have, it may be very hard (if notimpossible) for the user to understand the answer (Wilsonand Anderson 1986).
In this paper we show the feasibilityof incorporating the user's domain knowledge, or level ofexpertise, into a generation system and address the issueof how this factor might affect an answer.Through an analysis of texts, we found that twodistinct discourse strategies were used in describingtexts.
We postulate that the writers' choice of strategymight be based on the assumed domain knowledge ofthe expected readers.
If so, then the reader's level ofknowledge about the domain affects the kind of infor-mation provided as opposed to just the amount ofinformation.
In previous generation systems, the user'sCopyright 1988 by the Association for Computational Linguistics.
Permission to copy without fee all or part of this material isgranted providedthat the copies are not made for direct commercial dvantage and the CL reference and this copyright notice are included on the first page.
Tocopy otherwise, or to republish, requires afee and/or specific permission.0362-613X/88/0100o-o$03.0064 Computational Linguistics, Volume 14, Number 3, September 1988C~ile L. Paris Tailoring Object Descriptions to a User's Level of Expertisedomain knowledge affected only the amount of detailprovided in the text (Wallis and Shortliffe 1982).In this work, we show how the two discourse strat-egies found in texts can be used to provide answers tousers whose domain knowledge falls anywhere along aknowledge spectrum, from naive to expert.
We haveimplemented them in TAILOR, a computer system thatgenerates descriptions of physical objects.TAILOR uses one of the two discourse strategiesidentified in texts to construct a description for either anovice or an expert.
It can merge the strategies auto-matically in a systematic way to produce a wide varietyof different descriptions for users who fall between theextremes of novice and expert.
This means TAILOR isable to generate descriptions to a whole range of users,rather that just for an a priori set of user stereotypes.1.1 PREVIOUS WORK ON USER MODELING IN QUESTIONANSWERING PROGRAMSIn studying the factors involved in tailoring the content ofan answer to a user, research to date has focused mainlyon the problems of inferring and using user goals, plans,and beliefs (Appelt 1982, 1985; Carberry 1983, and thisissue; McKeown et al 1985), recognizing and dealing withmisconceptions (Kaplan 1982; McCoy 1983; McCoy 1986,and this issue; Quilici et al, this issue), and superposingvarious tereotypes (Rich 1979).
The issue addressed herediffers from these because we are not concerned with theusers' goals in asking the question, nor with correctingtheir view of the domain, but rather with providing ananswer that is optimally informative (without being over-whelming) given how much the user knows about thedomain.
We are not interested in building a user modelusing stereotypes (as was Rich), but in determining ananswer based on a user model involving user types.
As inMcCoy (1986, and this issue), we are more concernedabout using information from the user model to generatean answer than building the model itself.While the need for a model of the user's domainknowledge in question answering systems has beennoted by various researchers (Lehnert 1977; McKeown1985), few programs have actually had one.
The HAM-ANS system (Hoeppner et al 1984) has a model of theuser's knowledge, but this knowledge is mainly used foranaphora resolution and production.
In our work, weare more interested in studying how a user's knowledgeaffects the content of an answer as opposed to itsphrasing.
Wallis and Shortliffe (1982), who have usedthe naive/expert distinction in providing an answer (orexplanation), did so mainly by giving more or lessdetail, without addressing the issue of whether the levelof detail was the only important factor to vary.
Theissue we confront in this work is identifying the roleplayed by a user's level of knowledge in determining thecontent of an answer.
The UNIX Consultant (UC) (Chin1986) uses a user's knowledge level about the UNIXsystem to provide help to its users.
UC, however, usesstereotypes for both the user and the knowledge base(set of UNIX commands).
Stereotypes for the knowl-edge base include "simple", "mundane", and"complex".
UC matches the user type against thecommand type to decide on the answer.
In this work,we are looking at a different kind of domain, the domainof complex physical objects, in which this categoriza-tion of the knowledge base is not possible.
Further-more, we would like to be able to tailor answers to userswhose domain knowledge level falls anywhere along aknowledge spectrum without necessarily having to clas-sify users in several different stereotypes.1.2 THE DOMAINIn our work, we are mainly concerned with describingcomplex devices such as telescopes, telephones, anddisk drives to users with different levels of expertise.Our choice of domain has been motivated by RE-SEARCHER, a program being developed at ColumbiaUniversity.
RESEARCHER reads, remembers, andgeneralizes from patent abstracts written in English(Lebowitz 1983, 1985, 1986).
The resulting knowledgebase is organized in a generalization hierarchy.
Theabstracts describe complex physical objects in whichspatial and functional relations are important.
In thisdomain, the amount of information contained in theknowledge base is very large and the information can bevery detailed.
Moreover, the knowledge base containsseveral different kinds of information: spatial, func-tional, and attributive (properties attached to objects).A program can choose from among facts representingdifferent kinds of information about an object, and factsat different levels of detail in the knowledge base,rendering the decision process a complicated one.A request for the description of an object cannot betranslated into a simple database query and thus cannotbe answered by a straightforward etrieval from theknowledge base.
This type of question has been termedhigh level questions.
(Tennant 1978, McKeown 1985).There are no clear constraints on what informationshould be included in the answer.
Since the amount ofinformation contained in the knowledge base is verylarge and the information very detailed, a programcannot just state all the facts contained inthe knowledgebase about the object as there will typically be toomany.
Rather, it needs to select a subset of facts topresent to the user.
As the answer will be composed ofseveral facts, a generation program needs to organizethese facts in order to construct from them a coherenttext (McKeown 1985).
When a generation system canchoose among many facts, a user model representingwhat the user presumably knows about the domain canguide the system in choosing information that the userunderstands and does not already know (and cannoteasily infer), thereby improving the resulting answer.Descriptions are important because they can be usedto answer other types of high level questions.
Forexample, to compare two objects, it may be necessaryto describe ach of them.
Furthermore, with a knowl-Computational Linguistics, Volume 14, Number 3, September 1988 65C~cile L. Paris Tailoring Object Descriptions to a User's Level of Expertiseedge base of physical objects, users are likely to asksuch questions.
In order to focus on how the level ofexpertise affects a description, we have not consideredhow the goal of the questioner could affect he descrip-tion.
It is clear that in a sophisticated question answer-ing program the user's goal should also play an impor-tant part.
An answer for a user whose goal is to buy anobject should include different kinds of information thanan answer for a user who wants to repair this object.Detecting and using the user's goal to provide anappropriate response has been the focus of extensiveresearch (Appelt 1985, Carberry 1983, McKeown et al1985).
In this work, being more concerned with the roleplayed by the user's domain knowledge, we simply as-sume that users want to find some information about anobject.
A description should provide meaningful informa-tion about an object and allow the user to build a mentalfunctional model of the object.
Therefore, we assume thatthe goal of a description is to help the user construct amental functional model of the object under consideration.2 IDENTIFYING WHAT NEEDS TO BE IN THE USERMODELOur goal is to provide a characterization f the role ofthe user's domain knowledge in generating descriptionsthat is computationally usable by a generation system.Even though we will not be addressing the problem ofhow to determine how much the user knows about hedomain, we still have to ask what kinds of knowledge auser can possess about a domain that can affect gener-ation and that can be explicitly represented in a usermodel.
Instances of these kinds of knowledge Will be theinformation contained in our user model.
Having iden-tified what needs to be in the user model, we will takethe user model as given, and study how a system canuse the information about a user's domain knowledgecontained in the user model to tailor the answer.Analysis of natural language texts suggests the exist-ence of at least two kinds of domain knowledge thataffect the type of descriptions that can be provided inour domain:?
knowledge about specific items in the knowledgebase.
We define "knowing" about an object o meanknowing about he existence of the object, its purposeand how this purpose is achieved (that is, how thevarious subparts of the object work together toachieve it).
Knowing about an object thus meansunderstanding the functionality of the object and themechanical processes associated with it.?
knowledge about various basic underlying concepts.In a domain of complex physical objects, such con-cepts might include electricity and voltages.We define an expert user as one whose knowledge aboutthe domain includes functionality ofobjects and mechan-ical processes.
An expert user knows all the underlyingbasic concepts and the majority of the generalized objectscontained in the knowledge base for a particular domain.Given an object hat is new but similar to a known one,such a user has enough domain knowledge to infer howthe palls of this new object work together to perform afunction.
A naive user is one who does not know aboutspecific objects in the knowledge base, and does notnecessarily understand the underlying basic concepts.A user is not necessarily naive or expert, however.
Forexample, a user may.
know about several objects in theknowledge base.
In this work, instead of rating the user ashaving some intermediate level of domain knowledge, weuse explicit parameters to indicate the user's knowledge.These parameters are a list of items in the knowledge basewhich are known to the user and information aboutwhether the user understands the underlying basic con-cepts.
So, for example, a user model in our system maycontain aparameter indicating that the user only has localexpertise with respect to disk drives.
We retain theterminology naive and expert only for users at the twoends of the knowledge spectrum.
Thus our emphasis onstudying how object descriptions can be varied whenthese parameters vary.
We will not try to categorize auser's domain knowledge, or attempt to determine whatlevels exist between the two extremes.3 Two DESCRIPTIONS STRATEGIES FOUND IN TEXTS:CONSTITUENCY SCHEMA AND PROCESS TRACE3.1 THE TEXTUAL ANALYSISTo develop effective strategies for tailoring a descriptionto a particular level of expertise, we began by studyingdescriptions in a variety of texts: adult encyclopedias(Britannica 1984, Collier 1962) and junior encyclopedias(Britannica-Junior 1963, New Book of Knowledge 1967,Encyclopedia of Science 1982), manuals (Chevrolet 1978,Weissler 1973), and high school textbooks.
This range oftexts was chosen because it provided a good source ofdescriptions ~ and because these texts seem to addressaudiences at the two ends of the knowledge spectrum:naive and expert.
Texts from adult encyclopedias aredirected at an audience much more knowledgeable ingeneral than the audience addressed by high school text-books and junior encyclopedias.
Likewise, the Chevroletmanual is aimed at knowledgeable users (i.e., professionalmechanics), while the other manual claims to be directedtowards novices.
We studied descriptions of devices,taking the description of the same object in all sourceswhenever possible.
The descriptions we have studied aregenerally several paragraphs in length.Besides providing us with examples of descriptions,encyclopedias have the added advantage (for our study)that people read them for a variety of reasons.
Yet, theyall obtain the same texts (and therefore the sameinformation).
An encyclopedia is thus providing itsreaders with information about an object without akingthe reader's goals into account.We analyzed the different texts using methods devel-66 Computational Linguistics, Volume 14, Number 3, September 1988C~eile L. Paris Tailoring Object Descriptions to a User's Level of Expertise{Identification (description of an object in terms of itssuperordinate)} 2Attributive* (associating properties with an entity)/Cause-effect*Constituency (description of subparts or subtypes){Depth-identification / Depth-attributive{Particular Illustration / Evidence}{Comparison ; Analogy} }+{Attributive / Explanation/Analogy}Figure 1.
The Constituency Schema.oped by other researchers (Hobbs 1978a, 1980; Mann1984, McKeown 1985), decomposing paragraphs in termsof their primitive rhetorical structure in an attempt to findconsistent s ructures in the texts.
We found that the textsfell into two groups: most of the descriptions in the adultencyclopedia entries and in the car manual for mechanicswere organized around object subparts and their proper-ties, while the descriptions in the junior entries and in thecar manual for novices traced process information.3.2 TEXTS ORGANIZED AROUND SUBPARTSThe texts from the adult encyclopedias nd the Chev-rolet manual can be characterized in terms of thediscourse strategy the constituency schema, one of thetextual structures posited in McKeown (1985).
In herwork on natural language generation, McKeown studiedthe problems of what to say when there are many factsto choose from and how to organize a text coherently.To this end, she examined texts and transcripts inorderto determine whether there were standard patterns ofdiscourse structure used in naturally occurring texts.Where patterns of discourse structure could be identi-fied for various discourse goals, these patterns could beused to guide a generation system in choosing andorganizing facts to construct a text.McKeown analyzed the texts by classifying eachsentence as one of a set of rhetorical predicates.
Rhe-torical predicates characterize the structural purpose ofsentences and have been discussed by a variety oflinguists (Shepherd 1926, Grimes 1975, Hobbs 1978b).Some examples are constituency (description of sub-parts or subtypes), attributive (providing detail about anentity or event), and analogy.
McKeown found that inthe texts she studied, some combinations ofpredicateswere more likely to occur than others, and that for eachdiscourse situation (such as providing a definition),some combination was the most frequent.
McKeownencoded these standard combinations as schemas thatare associated with a particular discourse situation.
Oneof these schemas is the constituency schema, which isused to describe an object (or concept) in terms of itssubparts and their properties.
The constituency schemais shown in Figure 1.The descriptions from the adult encyclopedias ndthe car manual for mechanics followed the patternThe following text illustrates the decomposition of adescription using the Constituency Schema.1) The hand-sets introduced in 1947 2) consist of areceiver and a transmitter in a single housing avail-able in black or colored plastic.3) The transmitter diaphragm is clamped rigidly at itsedges 4) to improve the high frequency response.
5)The diaphragm is coupled to a doubly resonantsystem 6) -a cavity and an air chamber- 7) whichbroadens the response.
8) The carbon chamber con-tains carbon granules, 9) the contact resistance ofwhich is varied by the diaphragm's vibration.10) The receiver includes a ring-shaped magnet sys-tem around a coil and a ring shaped armature ofanadium Permendur.
11) Current in the coil makesthe armature vibrate in the air gap.
12) An attachedphenolic-impregnated fabric diaphragm, shaped likea dome, 13) vibrates and sets the air in the canal ofthe ear in motion.Using rhetorical predicates, we can classify the sen-tences of the above description in the following way:I. Attributive2.
ConstituencyDepth-attributive for the Depth-attributive for thetransmitter (Description of the receiver (Description of thetransmitter) receiver)3.
Depth-Attributive 10.
Depth-Attributive4.
Cause-effect 11.
Cause-effect5.
Depth-Attributive 12.
Attributive6.
Depth-identification 13.
Cause-effect7.
Cause-effect8.
Depth-Attributive9.
Cause-effectFigure 2.
Constituency Schema Example.shown in this schema: the descriptions are organizedaround the parts of the object.
An example of such adescription is shown in Figure 23 .
This entry, describingthe telephone, is taken from Collier (1962).
In the firstparagraph, the parts (constituents) of the telephone aregiven.
Then, each main part is described in turn: firstthe transmitter, then the receiver.
In the descriptionsfrom this set of texts, the parts are also described withtheir subparts and their properties (depth-attributive).3.3 TEXTS FROM JUNIOR ENCYCLOPEDIAS AND FROM THECAR MANUAL FOR NOVICESThe texts from junior encyclopedias, high school text-books, and the car manual for novices are organized ina significantly different manner.
No known schema orother organizing structure consistently accounted forthe descriptions in the junior encyclopedia texts.
Inlooking for other types of organizing strategies, wediscovered that the main strategy used in these descrip-tions is to trace through the process that allows theobject o perform its function, that is, to mainly describeComputational Linguistics, Volume 14, Number 3, September 1988 67C~cile L. Paris Tniloring Object Descriptions to a User's Level of ExpertiseI.
1) When one speaks into the transmitter of a moderntelephone, these sound waves strike against an alumi-nium disk or diaphragm and cause it to vibrate back andforth in just the same way the molecules of air arevibrating.II.
2) The center of this diaphragm is connected withthe carbon button originally invented by Thomas A.Edison.
3) This is a little brass box filled with granulesof carbon composed of especially selected and treatedcoal.
4) The front and back of the button areinsulated.III.
5) The talking current is passed through this box sothat the electricity must find its way from granule togranule inside the box.
6) When the diaphragm ovesinward under the pressure from the sound waves thecarbon grains are pushed together and the electricityfinds an easier path.
7) Thus a strong current flowsthrough the line.
8) When a thin portion of the soundwave comes along, the diaphragm springs back, allow-ing the carbon particles to be more loosely packed, andconsequently less current can find its way through.
9)So a varying or undulating current is sent over the linewhose vibrations exactly correspond to the vibrationscaused by the speaker's voice.
10) This current henflows through the line to the coils of an electromagnet inthe receiver.IV.
11) Very near to the poles of this magnet is a thiniron disc.V.
12) When the current becomes tronger it pulls thedisc toward it.
13) As a weaker current flows throughthe magnet, it is not strong enough to attract he diskand it springs back.
14) Thus the diaphragm in thereceiver is made to vibrate in and out .
.
.Figure 3.
Description from a junior entry.processes associated with the operation of the object.We characterize these descriptions as process descrip-tions.
An example of such a description, from Britanni-ca-Junior (1963), is presented in Figure 34.We see that the organizing principle of this text is themechanical process description.
The process descrip-tion gets interrupted when descriptive information canbe included concerning a subpart hat was just men-tioned as part of the process description.
(Such infor-mation is shown indented in the example).
Further-more, in this text, not only is the description mademainly through aprocess trace, but this process trace isgiven in great detail and substeps are explained if thereare any.The information contained in this group of descrip-tions corresponds to the causal inks that connect hevarious processes contained in the knowledge base.
Togenerate such a description, it is then necessary tofollow these links, giving rise to a process trace that(For each object, given a chain of causal inks)(1) Follow the next causal ink(2) {Mention an important side link}(3) {Give attributive information about a part justintroduced}(4) {Follow the substeps if there are any.
(These sub-steps can be omitted for brevity.
)}(5) Go back to (1).
(This process can be repeated for each subpart of theobject.
)Figure 4.
The Process Trace.describes how the object functions.
The algorithm usedfor the process trace, summarized in Figure 4, is asfollows: given the chain of causal inks that constitutesthe functional information of the object, the first link istaken.
If there is an important side effect at this point, itis mentioned.
If a new part was introduced when thecausal link was mentioned, attributive informationabout the part may be included.
If the step just ex-plained can be subdivided into substeps, the trace maycontinue at the substeps level.
Finally, the next causallink is taken and the algorithm repeats.
(This strategy isdescribed in detail in Paris and McKeown (1987) andParis (1987).
)Substeps happen, for example, in the following case:" .
.
.
causes the diaphragm to vibrate".
This step canbe divided into the two substeps: "the diaphragmmoves inward" and "the diaphragm oves outward".Substeps can also arise when a complex object is madeof several other complex parts.
The strategy first de-scribes how the parts work together to achieve theobject's function.
If a long description is desired, it ispossible to step through each of the parts, describinghow it achieves its own function.
This is similar to theschema recursion for the constituency schema men-tioned by McKeown (1985).3.4 TAILORING DESCRIPTIONSGiven that the two types of descriptions occur in texts,a system that generates device descriptions should alsobe able to provide the two kinds of descriptions.
Wehave thus implemented both strategies inour generationsystem.We use the constituency schema when a user hasexpertise about he domain of discourse, giving rise to aparts-oriented description.
Recall that we assumed thatthe goal of a description is to allow the user to form amental model of the functionality of the object.
Re-search in psychology indicates that expert users havemore knowledge not only about individual components,but also about the causal models involved and theinterconnections among parts (Lancaster and Kolodner1987; Chi et al 1981).
Expert users, then, are likely tohave functional knowledge about the domain and toknow how parts might interact with each other.
As they68 Computational Linguistics, Volume 14, Number 3, September 1988C6cile L. Paris Tailoring Object Descriptions to a User's Level of Expertisecan use this knowledge when reading the description 5,they should be able to pull all the parts provided in thedescription together in order to "understand" the de-scription as a whole.
That is, they should be able tofigure out how the parts fit together to form an objectcapable of performing a function.
Since the reader isable to construct a mental model, it is unnecessary toinclude the process information in the description.Actually, assuming that the reader will be able to inferthe processes involved, providing such useless informa-tion would contradict he principles of cooperativebehavior (Grice 1975).On the other hand, a user who does not have enoughknowledge to infer the processes linking the parts wouldbe unlikely to understand a mostly structural descrip-tion of an object and to be able to construct a functionalmental model of the object from such a description.
Forthis sort of naive user, if the description is to beinformative and understandable, it must describe howthe parts perform the function of the object.
The de-scription must therefore include process information.Previous research in reading comprehension strength-ens our belief that a user who does not have knowledgeabout the functions of the various parts will not be ableto make sense of a description centered around parts.Wilson and Anderson (1986) demonstrate the impor-tance of prior knowledge in comprehending ew texts,and show how readers can fail to understand a textmainly because the text contains implicit knowledgethat the readers do not have.
We thus propose to use theprocess trace when providing a description to a naiveuser.To summarize, we suggest hat the user's domainknowledge affects the content of a description withrespect to the kind of information i cluded, and not justto the level of detail, and postulate that the choice ofstrategy might be based on the assumed level of exper-tise of reader/user.
Namely, the process trace can beused when the expected readers are relatively naiveabout the domain of discourse, while the constituencyschema can be used when the expected readers haveexpertise about he domain.
We will show how a user'slevel of expertise can be incorporated in a generationsystem and how it can guide the system in choosing adiscourse strategy.4 MLXlNG THE STRATEGIESThe two strategies presented account for the maindifferences found between the adult and junior encyclo-pedia entries and we proposed to use them to describeobjects to naive or expert users.
Users are not neces-sarily either naive or expert in a domain however.
Theymay have local expertise, knowing about some objectsin the domain and not others (Paris 1984).
Such userswould not be considered naive users, but, as there aremany objects they do not know in the domain, theywould not be considered expert users either.
The usermodels for such users would indicate for which objectsof the knowledge base they have local expertise.
Webelieve that, to describe objects to users with interme-diate levels of expertise, a combination of the twostrategies presented for naive and expert users is appro-priate.
Based on the user model, a generation programcan decide which strategy to use for which object.As an example, suppose we are providing a descrip-tion of an elevator to a user who knows the function ofa motor and how this function is achieved, but not howthe elevator itself works.
In describing the elevator tothis user it is necessary to first describe how the parts ofthe elevator work together, using the process tracestrategy, since the user model would indicate localexpertise about the "motor" only.
This local expertiseis too narrow to allow the user to understand how all theparts of the elevator work together to perform theirrequired function.
A process explanation is thus neces-sary.
In describing the individual parts in turn, it shouldnot be necessary to fully explain what the motor does,as the user already knows about it.
The constituencyschema strategy can thus be used to describe the motor.For the other parts, however, the process strategy isstill appropriate in order to explain their mechanisms.Such combinations were actually also found in natu-rally occurring texts.
Figure 5 presents an example of atext that uses a combination of the constituency schemaand the process trace to generate a description aimed atusers with intermediate l vels of domain knowledge.This text is taken from the Encyclopedia of ChemicalTechnology (Chemical 1978).
The description startswith the constituency schema strategy but ends with aprocess trace: the "IR (Infra-Red) spectrometer" is firstdescribed in terms of its parts; each part is then de-scribed in turn (depth-attributive); finally, the authorsrevert o a process trace to describe the "thermocoupledetector", assuming it is unknown to the reader.
Tofully understand this text, the reader must already know(or be able to infer information) about the IR spectrom-eter's purpose, the "IR radiation" and the "monochro-mator".
In Figure 5, the text corresponding to theprocess trace is shown in italics.4,1 DECISION POINTS WITHIN THE STRATEGIESSince we want to be able to combine the two strategiesto generate a description aimed at users with interme-diate levels of expertise, we must specify under whichconditions one strategy would be preferable to the otherand how to switch from one strategy to the other.
Thedecision of which strategy to use at any point is basedon information about the user's domain knowledgecontained in the user model.
Notice that it would behard without a thorough psychological study to specifythe exact conditions necessary to choose one strategyover the other and to switch from one strategy to theother.
However, we have identified some heuristics thatdetermine when to mix the strategies.
(Should data frompsychological experiments later become available, weComputational Linguistics, Volume 14, Number 3, September 1988 69C~,cile L. Paris Tailoring Object Descriptions to a User's Level of Expertise(I) The IR spectrometer consists of three essentialfeatures: a source of IR radiation, a monochromator anda detector.
(2) The primary sources of IR radiation arethe Globar and Nernst glower.
(3) The Globar is asilicon carbide rod heated to 1200 degrees C. (4)TheNernst glower is a rod containing a mixture of yttrium,zirconium, and erbium oxides that is heated electricallyto 1500 degrees C. (5) Earlier IR spectrometers con-tained prism monochromators but today gratings areused almost exclusively.
(6) Most detectors in modernspectrometers operate on the thermocouple principle.
(7) Two dissimilar metal wires are connected to form ajunction.
(8) Incident radiation causes a temperaturerise at the junction and the difference in the tempera-ture between head and tail causes a flow of current inthe wires which is proportional to the intensity of theradiation.Text Decomposition1.
Constituency2-4.
Depth identification for the IR radiation5,6.
Depth identification for the monochromators7.
Depth identification for the thermocouplespectrometer8.
Process trace for the thermocouple principle.Figure 5.
Text from the Encyclopedia of ChemicalTechnology.Constituency Schema (with decision points)Identification (introduction of the superordinate)I f  there is no local expertise for the superordinatedo a Process Trace (for the superordinate) beforeproceeding.Constituency (description of the subparts)For each part, do:If there is local expertise on this part (or itssuperordinate), do Depth-identificationElse do a Process Trace (for the part)AttributiveFigure 6.
The Constituency Schema strategy and its decisionpoints.after the identification predicate: once the superor-dinate of an object has been introduced, we couldprovide a process trace for this superordinate.After the constituency predicate: after mentioningthe parts of an object, the constituency schemadictates to fill the depth identification predicate foreach subpart.
Instead, we could provide a func-tional description of one or more of the parts.
Thishas been done in the Encyclopedia of ChemicalTechnology text presented in Figure 5, forexample.could use the results as our heuristics to generateappropriate texts given the user's domain knowledge.
)To decide on the strategy to use, the program looks inthe user model to check whether the user is an "expert"or has a local expertise about he object o be describedor about its superordinate in the generalization hierar-chy.
In either case, the constituency schema is used;otherwise, the process trace is chosen.
This process isrepeated when the program has to decide on whichstrategy to employ to describe the subparts.If the user knows about most of the parts that play animportant role in the mechanical process of the object 6,it is possible to describe the object with the constitu-ency schema instead of explicitly describing the processinformation that Connects these parts.
Note howeverthat, in this case, providing a process trace for thetop-level description, thus indicating how the partswork together, might still provide an adequate descrip-tion.
Currently, "most" is set to be at least half of thefunctionally important parts 7.To mix the strategies, we must specify when it mightbe possible to switch.
Whenever an object is introducedand needs to be described, the system must decidewhether to provide chiefly structural information (withthe constituency schema) or functional information(with the process trace).
This gives us some cleardecision points in the strategies:?
Within the constituency schema:?
Within the process trace:?
When a part is introduced while traversing thecausal links, the process trategy dictates to includeattributes of this part (to describe it).
Here, wecould also choose to describe the part more fullywith the constituency schema.?
When the subparts have to be described, the con-stituency schema can be used to provide structuralinformation about them instead of including func-tional information.Figure 6 and 7 summarizes the two strategies in theirsimplest form with the decision points.Process Trace (with decision points)Next causal linkProperties of a part mentioned uring the process traceI f  a fuller description of the part is desired, doConstituency Schema (for the part)SubstepsBack to next causal linkRepeat for each of the subparts:I f  there is local expertise on this part (or its super-ordinate), do Constituency SchemaElse do a Process TraceFigure 7.
The Process Trace strategy and its decisionpoints.70 Computational Linguistics, Volume 14, Number 3, September 1988C6cile L. Paris Tailoring Object Descriptions to a User's Level of ExpertiseThe decision to switch strategy is based on the usermodel: the program looks into the user model andchecks the local expertise of the user.
If there is no localexpertise about the object, the program decides tofollow the process trace; otherwise, the constituencyschema is used.
The user model is also examined todecide whether substeps hould be traced: if the sub-steps involve any basic underlying concepts and theuser model indicates that the user knows these con-cepts, the substeps are traced.
Otherwise, the programdoes not trace through the substeps, as they mightconfuse the user.
In that case, after the description hasbeen generated, the user is asked whether he or shewould like to see the substeps, although they mightinvolve unknown concepts.Figure 8 shows an example of a text generated byTAILOR by combining the two strategies.
More exam-ples can be found in Paris (1987).)
Based on the usermodel that indicates local expertise about loudspeaker,TAILOR chooses the constituency schema.
It firstidentifies the telephone by providing its purpose andthen introduces its parts.
Structural information is thenprovided about each of the parts, except for the trans-mitter, because the transmitter plays an important rolein the function of a telephone and the user model showsno local expertise about it, or about he microphone, itssuperordinate in the generalization hierarchy.
ThusTAILOR chooses to provide process information forthe transmitter, switching momentarily to the processtrace strategy.
The process trace is shown underlined inthe figure.5 TAILOR5.1 OVERVIEW OF THE SYSTEMDescription of the telephone, given a user modelUser Model: Local Expertise: Loudspeaker (apointer to the concept of a loudspeaker in the knowl-edge base); Basic concepts: electricityThe telephone has two main functional parts: the trans-mitter (an instance of a microphone) and the receiver(an instance of a loudspeaker).
Because the user knowsone of the two parts of the telephone, the systemdecides on the constituency schema strategy at first.However, before providing structural information abouteach subpart, the system consults the user model anddecides to switch strategy to describe the transmittersince the user has no local expertise about it.TAILOR output:The telephone is a device that transmits soundwaves.The telephone has a housing that has various hapes andvarious colors, a transmitter that changes oundwavesinto current, a curly-shaped cord, a line, a receiver tochange current into soundwaves and a dialing_me-chanism.
The transmitter is a microphone with a smalldiaphragm.
A person speaking into the microphonecauses the soundwaves to hit the diaphragm of themicrophone.
The soundwaves hitting the diaphragmcauses the diaphragm to vibrate.
The vibration of thediaphragm causes the current to vary.
The currentvaries, like the intensity varies.
The receiver is aloudspeaker with a small aluminium diaphragm.
Thehousing contains the transmitter and it contains thereceiver.
The housing is connected to the dialing__mechanism by the cord.
The line connects the dialing_.mechanism to the wall.Figure 8.
A description generated by TAILOR combiningthe two strategies.We have implemented the discourse strategies pre-sented above in TAILOR, a program that generatesdescriptions tailored to a user's level of expertise.
Thediscourse strategies guide the program to choose theappropriate information from the knowledge base, un-der the constraint of the user model.
TAILOR generatesdescriptions aimed at users anywhere along the knowl-edge spectrum.
TAILOR uses the knowledge base builtby RESEARCHER, as depicted in Figure 9, and looksat the information contained in the user model to decideon the strategy to employ.
After generating a descrip-tion, TAILOR updates the user model based on theobjects that were included in the description provided tothe user.
At this point, no parsing of the questions isdone (the input consists of a request for a description).In the ideal system, RESEARCHER would parse thequestion using the same parser as that used in readingpatent abstracts, produce the request, and hand it toTAILOR.
The question (along with other factors) couldalso be used to determine to the level of expertise.
Theuser model includes the parameters that TAILOR usesto constrain its decision process during generation.
Theuser model is not determined by the program but isgiven as input.RESEARCHER's knowledge base contains detaileddescriptions of complex devices, including both struc-tural and functional information about the objects.
Weuse a frame-based knowledge representation (Was-serman and Lebowitz 1983, Wasserman 1985) in whichthe basic frames represent objects.
The knowledge basecontains about 120 object frames and 150 frames ofother types.
Objects are organized in a generalizationhierarchy.
In addition to the generalization links, orinstance-of links, there exist two additional kinds oflinks joining entities: part-of links, which indicate thatan entity is a part in a larger structure, and relations,which convey information about spatial or functionalrelationships.
Functional relations corresponds to thevarious events (or processes) that occur.
Finally, thereare links between relations, that is links betweenevents.
These links include cause-effect relations, tem-poral relations (such as "X happens at the same time asComputational Linguistics, Volume 14, Number 3, September 1988 71C6cile L. Paris Tailoring Object Descriptions to a User's Level of Expertise( :=:  ,,..+,,,,,,, ,,+.,?., o,,,,,. )
( ,.,.+,..,.
?-,*?
".,?, o..?,,,**?.,:,')(organ?zod in a/general izat ion |h?arazch?
).,, .
JRIBSIhM~WI1(permelandgenera l i zes )~ntern&~ ?o~1USgR NODZL(Parameters r4escr?bLng the llevel  of expert i se l J+lTAILORDescr ~pttonsFigure 9.
RESEARCHER and the TA ILOR System.Y"), and analogical relations (such as "X correspondsto Y").A top-level diagram of TAILOR is shown in FigureI0.
Input to TAILOR includes: I. a request for thedefinition of an object, and 2. the level of expertise ofthe user, that is, either one of the two stereotypes naiveor expert, or, for users with intermediate l vels ofexpertise, the set of parameters that describe the user'slevel of knowledge about the domain, including:?
A list of basic underlying concepts that are importantin the domain of the knowledge base and that the userunderstands.?
The specific objects the user knows in the domain,that is the user's local expertise (a list of pointers intothe knowledge base).The textual component of the system decides what toinclude in the description.
It looks into the knowledgebase and, based on the user model and the discoursestrategies, chooses appropriate facts.
The output of thetextual component is a conceptual representation f thecontent of the description.
This representation is passedthrough an interface, which makes lexical choices forthe various concepts included in the description.
Theinterface uses the focus of a proposition and the pastdiscourse to guide its decision process.
(However, asour emphasis in this work is on the content of adescription as opposed to its phrasing, we have notstudied in depth the complexity and subtleties of lexicalchoice.)
Finally, a surface generator constructs Englishsentences.
The surface generator is based on the oneused by McKeown (1985) in the TEXT system.
Thisgenerator unifies the input with a functional grammar(Kay 1979) to produce English sentences.
We haveextended and improved the performance of this pro-gram, and augmented the functional grammar it uses(Paris and Kwee 1985; McKeown and Paris 1987).Request for anobject  desczipt~onOSm NO~I~ Ir ~-~ ~ ~r  - - t -  - +Az~_  .
.I N I~?
concepts?l  I , - -,, l ,.
"J ,..,o., L II 1o e l content  o fI LLst of ob~ects l  I the_descr ip t ion  1 L - ~2*~- ; -~ j  !
iI i D ic t?ona~ In ter face  I (wh i r l  l ex ica l  cho?
?e ~l  ude)I lI content  o f | the  de lc :~pt~onI v i~  l ex?ca l  cho ice  ude!ob\]ee~ ~n Enql?shFigure 10.
The TA ILOR System.5.2 IMPLEMENTATION OF THE STRATEGIESThe constituency schema nd the process trace strate-gies are implemented using an augmented transitionnetwork (ATN) (Woods 1973).
The arcs joining thevarious nodes in the network specify what informationis to be retrieved from the knowledge base, under whatconditions (the arcs contain a test), and which node togo to next.
Figures 11 and 13 present he nets used forthe strategies.I"13mUTIVlS aJl.rklP Ctlt,~iit ~I~ICYC4\[/,!~t w ~AT'ntmU1W!~111x4AI"nuBuTIYEFigure 11.
The Constituency Schema.In the constituency schema, shown in Figure 11, thearcs correspond to the predicates from the schema.
(SeeMcKeown (1985) for details of a similar system.)
These72 Computational Linguistics, Volume 14, Number 3, September 1988C~cile L. Paris Tailoring Object Descriptions to a User's Level of Expertise /predicates define the type of information to be takenfrom the data base.
They are:?
identification, presenting the more general concept ofwhich the present object is an instance;?
constituency, giving the components of an entity, ifthere are any;?
attributive, providing different attributes of an object(such as its shape or material); and?
cause-effect, providing some causal relations be-tween entities or relations.The process of filling the ATN for the constituencyschema strategy to describe a microphone is shown inFigure 12.
The constituency schema would be chosenby TAILOR if the user model exhibits local expertiseabout the microphone (or if the user is classified as anexpert).
In this example, the identification predicate isfirst applied to the microphone.
The identification pred-icate provides the superordinate of the object togetherwith the function of the object.
The constituency pred-icate is then applied, providing the subparts of themicrophone, together with their properties or purposes.Finally, the depth-identification predicate is applied toeach subpart, the doubly-resonant system and the dia-;Stepping through the Constituency Schema to describe; a MICROPHONE.
(English noun-phrases are usedhere for clarity sake.
)Applying the predicates to MICROPHONE:Identificationpredicate:Constituencypredicate:DEVICE; (used-for:change soundwaves into current)DIAPHRAGM(shape disc, material aluminium),DOUBLY-RESONANT-SYSTEM(used-for: broaden response)Depth-constituency for DOUBLY-RESONANT-SYS-TEM:CARBON-CHAMBER, AIR-CHAMBERDepth-attributive forDIAPHRAGM:(edges clamped)TAILOR output:The microphone is a device that changes oundwavesinto current.
It has a disc-shaped aluminium diaphragmand a doubly-resonant system to broaden the response.The system has a carbon chamber and an air chamber.The diaphragm is clamped at its edges.Figure 12.
Stepping through the Constituency Schema.NEXT-MAIN-L I~ SIDE LINK?JUMP~~/~~ ATTRIBUTIVE OR(NO SUBSTEPS) I SWITCH?SUBSTEPS/HEXT-HAXN-LINKSUBSTEPSI SIDE LINK?~ A T T R I B U T I V ZORSWITCH?Figure 13.
The Process Trace.phragm.
The English output shown in the figure (and inthe following figures) is the actual output from TAI-LOR.The network for the process trace is shown in Figure13.
An example of following the process trace strategyis presented in Figure 14.
In this network, the arcsdictate how to trace the knowledge base to form ananswer, but they are not linguistic predicates as in thenetwork corresponding to the constituency schema.They mainly dictate how to follow the causal links in theknowledge base.
(Details about he process trace can befound in Paris and McKeown (1987) and Paris (1984)).The arcs are:Next-main-link: this arc dictates to follow the nextlink on the main path.
The main path is the sequenceof events that is performed in order for an object toachieve its function.Side-link?
: A side-link is a link that is not part of themain path, but that comes off an event on the mainpath.
This arc tests to see whether there is a side linkcaused by an event at this point.
The decision tomention the side link is based on the importance ofthat link.
sAttributive: This arc is similar to the attributivepredicate in the constituency schema.
If informationabout a part just introduced is available in the knowl-edge base, this arc will be taken.Substeps?
: If an event consists of several substeps,the substeps are traced first.
To traverse the substeps,the subroutine substep is called for each substep.
Thissubroutine is very similar to the main graph, but doesnot allow for a further decomposition f events.In Figure 14, the link "the diaphragm vibrates" canbe divided into substeps, namely "the diaphragmgoes forward" and "the diaphragm goes backward".Computational Linguistics, Volume 14, Number 3, September 1988 73C~cile L. Paris Tailoring Object Descriptions to a User's Level of Expertise;The program traces the process information for a naive userCausal link(l): {M-CAUSES} relates the two relations:\[ONE\] P-SPEAKS.-INTO \[MICROPHONE\]\[SOUNDWA VES\] P-HITS \[DIAPHRAGM1Attributive Information about DIAPHRAGM: \[material: aluminium\]\[shape: d:isc\]Causal link(2): {M-CAUSES} relates the two relations:\[SOUNDWAVES\] P-HITS \[DIAPHRAGM\]\[DIAPHRAGM\] P..VIBRATES;Substeps: "Soundwaves increasing" and "soundwaves decreasing"Substepl {M-CAUSES} relates the two relations:\[SOUNDWA VES\] P-INCREASES \[DIAPHRAGM\]\[DIAPHRAGM\] P-SPRING \[Direction; forward\]{M-CAUSES} relates the two relations:\[DIAPHRAGM\] P-SPRING \[Direction: forward\]\[GRANULES\] P-COMPRESS{M-CAUSES} relates the two relations:\[GRANULES\] P-COMPRESSES\[RESISTANCE\] P-DECREASES{M-CAUSES} relates the two relations:\[RESISTANCE\] P-DECREASES\[CURRENT\] P-INCREASESubstep2 {M-CAUSES} relates the two relations:\[SOUNDWA VES\] P-DECREASES \[DIAPHRAGM\]\[DIAPHRAGM\] P-SPRING \[Direction: backward\]; \[The remainder of the trace is omitted here for brevity.\]TAILOR output:A person speaking into the microphone causes the soundwaves to hit the diaphragm of the microphone.
Thediaphragm is aluminium and disc-shaped.
The soundwaves hitting the diaphragm causes the diaphragm to vibrate.When the intensity of the soundwaves increases, the diaphragm springs forward.
This causes the granules of thebutton to be compressed.
The compression of the granules causes the resistance of the granules to decrease.
Thiscauses the current o increase.
Then, when the intensity decreases, the diaphragm springs backward.
This causesthe granules to be decompressed?
The decompression f the granules causes the resistance to increase .This causesthe current o decrease?
The vibration of the diaphragm causes the current o vary.
The current varies like theintensity varies?Figure 14.
Tracing the process information for a naive user.The process trace can be continued at the substeplevel?
Then, once the substeps have been tracedthrough, the trace returns to the top-level description?
(Only one substep is fully shown in Figure 14 forbrevity.
See (Paris 1985) for details.)
We can alsochoose to not follow the substeps in order to generatea shorter description.
This factor is incorporated intothe arc test.By representing the two strategies in this formalism, weimmediately obtain the control structure necessary toswitch strategies, since it is possible to jump from anode in one part of the network to a node in a differentpart.
The decision points are thus marked as specialtests on the arcs joining nodes.As a general test for deciding which strategy to use todescribe a part, TAILOR looks into the user model tocheck if a superordinate of the part (or the part itself) isknown to the user.
If the part is known, the constitu-ency schema is used.
Otherwise, the process trace ischosen.
This test is invoked before beginning enerationand at any point in the schema where it is possible toswitch strategies.
The test also checks on the length ofthe discourse planned so far and the number of parts toavoid generating overwhelmingly long texts.
The proc-ess of stepping through the ATN and switching strategyis shown in Figure 15.
(The corresponding generatedtext was shown in Figure 8.)
Note that to avoid gener-ating very long texts, substeps are omitted when theprocess trace is chosen to describe a subpart.
After the74 Computational Linguistics, Volume 14, Number 3, September 1988C6cile L. Paris Tailoring Object Descriptions to a User's Level of ExpertiseUser Model: Local Expertise: Loudspeaker; Stepping through the Constituency Schema to describe a TELEPHONE.
; Switching to the Process Trace to describe the TRANSMITTER.Applying the predicates to TELEPHONE:Identification predicate: DEVICE; (used-for:change soundwaves into soundwaves)Constituency predicate: DIALING MECHANISMTRANSMITTER(used-for: change soundwaves into current)LINECORDRECEIVER(used-for: change current into soundwaves)HOUSING(properties: color: various, shape: various)Need to switch to process trace for the TRANSMITTERIntroduction:Identification predicate: MICROPHONECausal ink (1):{M-CAUSES}relates the two relations:\[ONE\] P-SPEAKS-INTO \[TRANSMITTER\]\[SOUNDWAVES\] P-HITS \[DIAPHRAGM\]Causal ink (2): {M-CAUSES}relates the two relations:\[SOUNDWAVES\] P-HITS \[DIAPHRAGM\]\[DIAPHRAGM\] P-VIBRATES\[Substeps omitted\]Causal ink (3): {M-CAUSES}relates the two relations:\[DIAPHRAGM\] P-VIBRATES\[CURRENT\] P-VARIESSide Link (4): {M-EQUIVALENT-TO}relates the two relations:\[CURRENT\] P-VARIES\[SOUNDWAVE-INTENSITY\] P-VARIESReturning to the Constituency Schema:Applying the predicates to RECEIVER:Identification: RECEIVER is a LOUDSPEAKER(difference: small aluminium diaphragm)Applying the predicates to HOUSING:Attributive: HOUSING r-contains TRANSMITTERHOUSING r-contains RECEIVERHOUSING r-connected-to DIALING MECHANISMby CORDApplying the predicates to LINE:Attributive: DIALING MECHANISM r-connected-to WALLby LINEFigure 15.
Switching strategy.initial description isgenerated, a mechanism allows theuser to request he information that was omitted forbrevity sake (see Paris 1987).For each object of the knowledge base, TAILOR cangenerate descriptions aimed at expert and naive users,and texts that combine the two strategies for users whoare along the knowledge spectrum and only know a fewobjects.
The ability to combine strategies allows TAI-LOR to generate a greater variety of texts than wouldotherwise be possible.
For example, starting with theconstituency schema s the initial strategy for describ-ing the pulse-telephone, which has one superordinateComputational Linguistics, Volume 14, Number 3, September 1988 75C~cile L. Paris Tailoring Object Descriptions to a User's Level of Expertiseand three functionally important parts, TAILOR cangenerate ight different descriptions depending on.
var-ious user models.
This ability also allows TAILOR togenerate a description tailored to any individual usermodel.6 FURTHER WORK AND RELATED ISSUESWe are extending our work by examining the recursiveuse of both strategies.
Currently, TAILOR can call thestrategies recursively for each subpart of the top levelobject being described, but not for the components ofthese subparts.
Similarly, the process is only traced onelevel down, that is only the top-level relations arebroken into substeps.
This kind of recursion couldoccur as deeply as the knowledge base allows for.
Wethink that such a level of detail is appropriate only if theuser asks for a longer description.
We plan to implementa mechanism that would allow the user to request sucha description, either initially or after a description hasalready been provided by the system and the user wantsadditional information.
As we already mentioned, wethink that the user's domain knowledge, in particularknowledge of basic concepts, plays a role in determin-ing the depth needed.
The depth of the knowledge baseitself may also affect the depth of the description, asparts or processes may be considered too minor to bementioned beyond a certain threshold.6.1 DETERMINING THE LEVEL OF EXPERTISEIn this work, we have not addressed the issue ofdetermining the level of expertise of the user.
This isobviously an important question that needs to be stud-ied.
We believe that it is possible to infer the user's levelof expertise.
Some relevant factors are:?
The user type.
Some classes of users may be likely tobe naive while others may be likely to be expert.Identifying a user as part of these classes can giveinsight into how much that user might know, andprovide a starting point.
This is similar to usingstereotypes to model the user (Rich 1979; Chin 1986).The question type.
The kind of question asked("What is a tape recoder?"
as opposed to "Does thisdisk drive have three bearings?")
can give furtherinformation about how much the user knows.?
The depth in the knowledge base (both in the compo-nents tree and the generalization hierarchy) of theobject of the question ("Describe a disc drive" asopposed to "Describe the track assembly in a diskdrive")(Paris 1984).?
The previous discourse.
If a user asks the samequestion twice, it is indicative that the answer was notunderstood, perhaps because it assumed knowledgethe user did not have.It would be necessary to study how the user's domainknowledge can be inferred from these factors and howthese factors affect each other.
This seems to be a hardproblem.Finally, our user model at this point is coarsegrained, in that it contains a list of objects and conceptsthat the user knows.
A more detailed model mightinclude exactly which facts the user knows about ob-jects, and specifically which basic concepts are under-stood.
We have shown that a system benefits from auser model that indicates a user's knowledge about thedomain, even when the model is not a detailed one.While we feel that a detailed user model would be muchharder to obtain, it would be interesting to see whethersuch a model would allow a system to provide moreappropriate answers.6.2 INCORPORATING THE USER'S GOALIt is clear that the goal of the user also influences thecontent of an answer, or of a description.
It would beinteresting to examine how the goal and the level ofexpertise combined can help a program in choosingappropriate facts from the knowledge base.
In thisresearch, we found that the level of expertise affects thekind of information to include in a description.
This isalso clearly true for a user's goal: the informationprovided in the description should help the user inpursuing his/her goal.
Thus, depending on a user's goal,the information i cluded would vary.
The interaction ofthese two factors can become quite complex.
However,until both factors are fully understood individually, wefeel that it will be very hard to determine xactly howthey interact.6.3 FEASIBILITY AND EXTENSIBILITY OF THIS APPROACHIn this work, we make the assumption that a system thattailors its answer to its users will be most useful.
This istrue only provided that this tailoring does not hinder thesystem's performance or increase its complexity signif-icantly.
We argue that tailoring a description to a user'slevel of expertise using the method escribed above willnot add to the cost of generation and yet might providebetter answers.
Whether a generation system tailors itsanswers to users or not, it needs to employ a discoursestrategy to guide its decision process lest the resultingtext be incoherent.
The two discourse strategies used byTAILOR are of comparable complexities, and there isnot much cost added to combine them.While this work was done only with respect togenerating descriptions of complex devices, we thinkthis approach will be useful in any information seekingenvironment to which users with different backgroundand knowledge levels have access.
Such environmentcould be a large knowledge base of facts (of the kind ofan encyclopedia), or a help system.
Providing differentinformation i  an answer might also be done in explain-ing the behavior of an expert system that is used both asa teaching tool and as a problem solving engine.76 Computational Linguistics, Volume 14, Number 3, September 1988C~cile L. Paris Tailoring Object Descriptions to a User's Level of Expertise7 CONCLUSIONSIn this paper we have demonstrated that the user'sdomain knowledge can be used as a factor in tailoring ananswer.
In particular, we have shown how the descrip-tion of a complex physical object might be tailored to auser's level of expertise.
We presented different kindsof knowledge users can have, explaining how a systemcan take them into consideration in order to generate adescription.
From our studies of texts, we have foundtwo distinct discourse strategies that are used in de-scribing complex devices.
We postulated that the levelof expertise of the user affects the kind of informationgiven as opposed to just the amount of detail provided.Even though we conducted this study in the domain ofcomplex physical objects, we believe this result canextend to other domains.
We thus propose that a usermodel containing information about the user's domainknowledge can be used in a question answering systemto guide the decision process.
We presented the twodistinct descriptive strategies that can be used in aquestion answering program and showed how they canbe mixed to include the appropriate information fromthe knowledge base, based on the information containedin user model.Finally, we presented TAILOR, a program that gen-erates descriptions tailored to users with various levelsof expertise.
TAILOR employs one of the two discoursestrategies described to generate a text for a novice or anexpert.
TAILOR is also able to automatically mix thestrategies to provide device descriptions tailored tousers whose domain knowledge fall anywhere along theknowledge spectrum.
By representing explicitly theuser's domain knowledge in terms of parameters, TAI-LOR does not require an a priori set of stereotypes butcan provide wide variety of descriptions for a wholerange of users.ACKNOWLEDGMENTSMany thanks go to Kathleen McKeown and Michael Lebowitz fortheir help in both the research and the writing of this paper, and toTjoeLiong Kwee for his work on the functional grammar.
We alsothank the anonymous reviewer for his/her useful comments.This research was supported in part by the Defense AdvancedResearch Projects Agency under contract N00039-84-C-0165, and theNational Science Foundation grant ISI-84-51438.REFERENCESAnderson, R.C.
; Spiro, R.J.; and Anderson, M.C.
1977 Schemata sscaffolding for the representation of information in connecteddiscourse.
Technical Report 24, Center for the Study of Reading,Urbana, IL.Appelt, D.E.
1982 Planning Natural Language Utterances.
In Pro-ceedings of the Second National Conference on Artificial Intelli-gence, Pittsburgh, PA: 59-62.Appelt, D.E.
1985 Planning English Sentences.
Cambridge Univer-sity Press, Cambridge, England.The New Encyclopedia Britannica 1984 Encyclopedia BritannicaIncorporation.Britannica Junior Encyclopedia 1963 Encyclopedia Britannica Incor-poration, William Benton Publisher.Carberry, S. 1983 Tracking User Goals in an Information-SeekingEnvironment.
In Proceedings of the American Association ofArtificial Intelligence.Carberry, S. (this issue) Plan Recognition and User Modeling.
Com-putational Linguistics.
Computation on User Modeling, 1988.Kirk and Othmer, (eds.)
1978 Encyclopedia of Chemical Techology.John Wiley & Sons, New York, NY.Chevrolet Service Manual 1978 General Motors Corporation.Chi, M.T.H.
; Glaser, R.; and Rees, E. 1981 Expertise in ProblemSolving.
Advances in the Psychology of Human Intelligence.Lawrence Erlbaum, Hillsdale, NJ.Chin, D.N.
1986 User Modeling in UC, the UNIX Consultant.
InProceedings of Computer Human Interactions.William Halsey (ed.)
1962 Collier's Encyclopedia The Crowell-CollierPublishing Company.The New Encyclopedia of Science 1982 Raintree Publishers.Grice, H.P.
1975 Logic and Conversation.
In Cole P. and Morgan J.L.(eds.
), Syntax and Semantics.
Academic Press, New York, NY.Grimes, J.E.
1975 The Thread of Discourse.
Mouton, The Hague,Paris, France.Hobbs, J.
1978 Why is a Discourse Coherent?
Technical Report 176,SRI International, Menlo Park, CA.Hobbs, J.
1978 Coherence and Coreference.
Technical Note 168, SRIInternational, Menlo Park, CA.Hobbs, J. and Evans, D. 1980 Conversation as Planned Behavior.Cognitive Science, 4(4): 34%377.Hoeppner, W.; Morik, K.; and Marburger, H. 1984 Talking it Over:The Natural Dialog System HAM-ANS.
Technical Report ANS-26, Research Unit for Information Science and Artificial Intelli-gence, University of Hamburg, W. Germany.Kaplan, S.J.
1982 Cooperative Responses from a Portable NaturalLanguage Query System.
Artificial Intelligence 2(19).Kay, Martin 1979 Functional Grammar.
In Proceedings of the 5thmeeting of the Berkeley Linguistics Society, Berkeley, CA.Lancaster, J.S., and Kolodner, J.L.
1987 Problem Solving in aNatural Task as a Function of Experience.
Technical Report,School of Information and Computer Science, Georgia Institute ofTechnology, Atlanta, GA.Lebowitz, M. 1983 RESEARCHER: An Overview.
In Proceedings ofthe Third National Conference on Artificial Intelligence.
Ameri-can Association of Artificial Intelligence, Washington, DC.Lebowitz, M. 1985 RESEARCHER: An experimental intelligentinformation system.
In Proceedings of the Ninth InternationalJoint Conference on Artificial Intelligence, Los Angeles, CA: 858-862.Lebowitz, M. 1986 An experiment in intelligent information systems:RESEARCHER.
Intelligent Library and Information Systems,Ellis Horwood, London, England.Lehnert, W. 1977 A Conceptual Theory of Question Answering.
InProceedings of the International Joint Conferences of ArtificialIntelligence, Cambridge, MA.Mann, W.C. 1984 Discourse Structure for Text Generation.
TechnicalReport ISI/RR-84-127, Information Sciences Institute, Marina delRey, CA.McCoy, K.F.
1983 Correcting Misconceptions: What to say When theUser is Mistaken.
In Proceedings of the Conference on HumanFactors in Computing Systems.
Human Factors, Boston, MA.McCoy, K.F.
1986 The ROMPER System: Responding to Object-Related Misconceptions Using Perspective.
In Proceedings of the24th Annual Meeting of the Association of Computational Linguis-tics, New York, NY.McCoy, K.F.
(this issue) Reasoning on a Highlighted User Model toRespond to Misconceptions.
Computational Linguistics 1988.McKeown, K.R.
1985 Text Generation: Using Discourse Strategiesand Focus Constraints to Generate Natural Language Text.Cambridge University Press, Cambridge, England.Computational Linguistics, Volume 14, Number 3, September 1988 77C~cile L. Paris Tailoring Object Descriptions to a User's Level of ExpertiseMcKeown, K.R.
; Wish, M.; and Matthews, K. 1985 Tailoring Expla-nations for the User.
In Proceedings of the Ninth InternationalJoint Conferences on Artificial Intelligence, Los Angeles, CA.McKeown, K.R.
and pads, C.L.
1987 Functional Unification Gram-mar Revisited.
In Proceedings of the 25th Annual Meeting of theAssociation of Computational Linguistics, Palo Alto, CA.The New Book of Knowledge-The Children's Encyclopedia 1967Grolier Incorporation, New York, NY.Pads, C.L.
1984 Determining the Level of Expertise.
In Proceedingsof the First Annual Workshop on Theoretical Issues in ConceptualInformation Processing.
Atlanta, GA.Pads, C.L.
1985 Description Strategies for Naive and Expert Users.In Proceedings of the 23rd Annual Meeting of the Association forComputational Linguistics.
Chicago, IL.Pads, C.L.
and Kwee, T.L.
1985 Guide to the Unification Processand its Implementation; Progress Report on Extending the Gram-mar.
Technical Report, Computer Science Department, ColumbiaUniversity, New York, NY.Pads, C.L.
and McKeown, K.R.
1986 Discourse Strategies forDescribing Complex Physical Objects.
Paper presented at theThird International Workshop on Natural Language Generation,Nijmegen, The Netherlands.
In G. Kemper (ed.
), Natural Lan-guage Generation: Recent Advances in Artificial Intelligence,Psychology, and Linguistics.
Kluwer Academic Publishers, Bos-ton, MA/Dordrecht, Holland.Pads, C.L.
1987 The Use of Explicit User Models in Text Generation:Tailoring to a User's Level of Expertise.
Ph.D. thesis.
ColumbiaUniversity, Department of Computer Science, New York.Quilici, A.; Dyer, M.; and Flowers M. (this issue) Providing Explan-atory Responses to Plan-Oriented Misconceptions.
ComputationalLinguistics 1988.Rich, E.A.
1979 User Modeling Via Stereotypes.
Cognitive Science 3:329-354.Shepherd, H.R.
1926 The Fine Art of Writing.
Macmillian Co., NewYork, NY.Tennant, H. 1978 The Evaluation of Natural Language QuestionAnswerers.
Technical Report, University of Illinois at Urbana/Champaign Ph.D. proposal, Department of Computer Science,Advanced Automation Group, Coordinated Science Laboratory.Wallis, J.W.
and Shortliffe, E.H. 1982 Explanatory Power for MedicalExpert Systems: Studies in the Representation fCausal Relation-ships for Clinical Consultation.
Technical Report STAN-CS-82-923, Heuristics programming Project, Department ofMedicine andComputer Science, Stanford University, Stanford, CA.Wasserman, K. 1985 Unifying Representation and Generalization:Understanding Hierarchically Structured Objects.
Department ofComputer Science, Ph.D. thesis, Columbia University, NewYork, NY.Wassernmn, K. and Lebowitz, M. 1983 Representing Complex Phys-ical Objects.
Cognition and Brain Theory 6(3): 333-352.Weissler, A. and Weissler, P. 1973 A woman's guide to fixing the car.Walker ~md Company, New York, NY.Wilson, P.q.
and Anderson, R.C.
1986 What They Don't Know WillHurt Them: The Role of Prior Knowledge in Comprehension.Reading Comprehension: From Research to Practice.
Erlbaum,Hillsd~de, NJ.Woods, W. 1973 An Experimental Parsing System for TransitionNetwork Grammars.
In Rustin, R.
(ed.
), Natural Language Proc-essing.
Algorithmics Press, New York, NY.NOTES1.
We hope that by choosing several sources, stylistic differences onour results are minimized.
We studied about 15 examples fromeach encyclopedia and textbook and a few from the manuals.2.
We are using McKeown's notation: "{}" indicate optionality, " / "alternatives, "+"  that the item may appear 1 or more times, and"*"  that the item may appear 0 or more times.
Finally, " ; "  isused to indicate that the propositions could not be clearlyclassified as corresponding to one predicate.
We changedMcKeown's schema slightly, by adding the identification predi-cate as an option for the first predicate of the schema.3.
The original entry was in one paragraph only.
We divided it intothree paragraphs for clarity.
More details about this analysis aregiven in Paris (1985).4.
The original entry contained two paragraphs.
The second one hasbeen divided for clarity.5.
Research in reading comprehension indicates that readers indeeduse their previous knowledge in order to understand new texts(Anderson et al 1977; Wilson and Anderson 1986).6.
Some parts do not play an important part on the mechanicalprocess associated with the object.
For example, the housing ofthe telephone does not have an important role in the functionalityof the telephone.
Such a part would not be involved in one of thecausal inks contained in the knowledge base.7.
We do not claim that this is the optimal value for the thresholdindicating at which point the constituency schema should be used.This threshold cannot be set with certitude without furtherexperimentation.
Also note that, while these heuristics allow thesystem to generate reasonable descriptions given the user'sdomain knowledge, there is no clear "best"  descriptions.8.
We have mentioned that there are different kinds of links betweenevents.
The types of links are ranked in order of importance, andthe most important ones are mentioned.
There are actuallydifferent ypes of side-links.
These are not indicated in the figurefor simplicity.
The reader is referred to Pads (1987) for details.78 Computational Linguistics, Volume 14, Number 3, September 1988
