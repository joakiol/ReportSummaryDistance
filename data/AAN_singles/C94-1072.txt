andDISCO - -  An  HPSG-based  NLP  Systemits Application for Appointment Scheduling- -  P ro jec t  Note  - -Hans  Uszkore i t ,  Ro l l  Backofen ,  S tephan Busemann,  Abde l  Kader  D iagne ,E l i zabeth  A .
H inke lman,  Wa l te r  Kasper ,  Bernd  K ie fe r ,  Hans -U l r i ch  Kr ieger ,K laus  Net ter ,  G f in ter  Neumann,  S tephan Oepen,  S tephen P.  SpackmanGerman Research  Center  for Art i f ic ia l  In te l l igence (DF I ( I )S tuh lsatzenhausweg 3, 66123 Saarbrf icken,  Germany(name}~dfki,.
un i - sb ,  deAbstractThe natural language system DISC() is described.
Itcombinesa powerful and flexible grammar development system;?
linguistic competence for German including morphol-ogy, syntax and semantics;?
new metlmds for linguistic performance modelling onthe basis of high-level competence grammars;?
new methods for modelling multi-agent dialogue com-petence;?
an interesting sample application for appointmentscheduling and calendar management.1 IntroductionWe will describe results of a project in natural lan-guage research carried out during the last four years at,the German Research Center for Artiticial Intelligencein Saarbrficken.
All system l)uilding took place dur-ing the last three years.
The special approach of thisproject is a combination of linguistically sound high-levcl grammatical description and specialized methodsfor linguistic performance modelling.During the last decade it has become obvious to themajority of researchers in our field that the linguis-tically designed elegant and transparent grammarswritten in high-level representation languages uch asHPSG or LFG could not be employed for elficient androbust processing in a straightforward way.Many researchers have therefore resorted to well-known older methods uch as ATNs or other augment-ed finite-state methods, to statistical or connectionistmethods, or to combinations of these.
Several projectsparticipating in the demanding ARPA competitionsfall in this category.Many others have decided to settle for a com-promise between high-level description and efficientprocessing by strongly constraining their formalisms.The resulting formalisms are usually much closer toPROLOG and do not contain a powerful multiple-inheritance type system; e.g.
the Core Language En-gine (CLE) of SRI Cambridge \[1\], its derNative tileGEMINI system of SRI International in Menlo Park,the LKP of SIEMENS in Munich \[3\].
As a conse-quence of their design philosophy, these systems usu-ally do not feature a powerthl development platlbrm.Only a few groups have continued to work ill high-level formalisms driven by the expectation that betterprocessing methods for these formalisms can be de-veloped.
Our work belongs in this category, tIowever,we have decided to allow for combinations of high-level grammatical description and low-level processingmethods by strictly distinguishing between a gener-al linguistic competence model and very applic~tion-specific performance models.Our decision was based on some fundamental crite-ria:?
It, is necessary to build general, reusable compe-tence systems that can be the basis lbr differentapplications, since the development of liuguisticeoml)etenee is too costly to redo for each new ap-plication.?
In the foreseeable future, NL applications willhave very limited linguistic competence, wherethe limitations depend on the task to be per-formed.
They determine coverage and depth ofanalysis.?
The general competence system as such will notbe used for iudividnal allplications because eachapplication type imposes pecific requirements onthe perlbrmauee model.
Depending on the taskthere are quite different constraints on robust-ness, accuracy, and processing speed.On the basis of these assumptions, we took a ratheruncompromising stand.
We decided to utilize themost suitable and most advanced methods for the de-velopment of linguistic ompetence.
Our developmentplatlbrm is based on a powerful typed feature unifica-tion formalism, and the grammar follows the IIPSCth('ory.
':these choices were made since we wantedon tile one hand to facilitate the difficult and time-consnllling process of grammar development, and onthe other to save our grammar from the fate of sev-eral older large-coverage grammars which eannol~ bereused or extended today because of their idiosyncrat-ic representations.Since research on systems with multiple cooperatingagents constitutes one of the focal areas of our insti-tute, we tried to develop the system ill such a way thatit would support dialogue among such agents.
At thesame time, we undertook serious efforts in research onmethods that would allow us to derive adequate per-formance models from tile core competence system.We also built a sample application (COSMA) for ap-pointment scheduling and rnanagement based on tileCOml)etence model, ill order to test tile grammar ofGerman, methods for dialogue modelling, and eerl;ainnew n)ethods for deriving a performance model fromthe competence system.In the remainder of this paper we will present all436overview of the following comt)onents and methods:?
development l)latform including shell, formalism,morphology, parser, gm,erator, semantics;?
German competence including morphology, syn-tax, semantics;?
methods for providing multi-agent dialogue com-petence;?
methods tbr linguistic performance modelling;?
tile NL flmctionality of the sample applicationCOSMA.Some individual components and methods havebeen described in more detail in previous imblications.llowever, this paper is the first attempt to l)resentan overview of the integrated system and to describeits parts from the perspective of our overall researchstrategy.2 Formal i smFor the grammar, tile lexicon and parts of tile roofphology a powerfld typed unification lbrmalism 7"/)?
(Type Description Language) has been developed.Reasoning is performed by two specialized inferenceengines, viz.
the TD1; type engine and the l~atureconstraint-solver llDi.Afe.
The modnles are connect-ed via a flexible interface to allow for mutual control.Type  System 7"191; is a powerfifl typed feature-b~ed language and inference system, spceilicalty suit-ed for highly lexiealized grammars \[81 (in this vohl,ne).Type definitions in "I'19?
consist of type constraintsand feature constraints over the standard boolean con-nectives A, V, and -1.
The operators are generalized illthat they can connect feature descril)tions, coreferencetags (logical variables) and types.
7"/)1; distinguishesbetween arm types (open-world remsoning), sort types(closed-world reasoning), bl*ilt-in types, and atoms.Recursive types are explicitly allowed and handled bya sophisticated lazy type expavsiot, mechanism.7/;)?
allows the definition of partitions and the dec-laration of sets of types as incompatible, meaning thatthe conjunction of them yields L. Working with par-tially as well ~s with fully exl)anded types is possi-ble through the use of a sophisticated type expansionmechanism, both at definition and at run time.
7-791;is fid\[y incremental in that it allows the redelinitionof types and the use of undelined types.
7'/9?
allowsa grammarian to define and use parameterized tem-plates (macros).
Input given to 7"D1; is parsed by aLAMI.
(1) parser to allow for all intuitive, high-lew;linput syntax.Eilicient reasoning in the system is accomplishedthrough specialized modules: (i) bit vector encodingof the type subsumption hierarchy; (it) f~ust symbolicsimplification for complex type expressions; (iii) mem-oization to cache precomputed results; and (iv) typeexpansion to make constraints explicit, to determinethe global satisfiability of a description, and to workwith partially expanded types during processing.Const ra in t  So lver  NDiAfe is a feature constraintsolver capable of dealing with distributed isiunctionsover arbitrary structures, negative coreferences, fullnegation, and functional and relational constraints.It is the first (and to our knowledge t},e only) imple-mented feature constraint solver that integrates bothfull negation and distributed isjunctions \[2\].
NDYq'edoes l,ot use distributed isjunction only as a tool forefficient processing.
It also forms part of the inputsyntax, which allows for very compact representationof tire input data.
In controls( with other systems us-ing distributed disjunctions, we do not restrict dis-junctions to length two, thus reducing tire size of thefeature structure representations massively.~l'he functionality of N1)iAfe is completed by severalauxiliary functimls.
It is possible to remove incon-sistent alternatives, to si,nplify structures, to extractsubterms or to evaluate functional constraints.
Onecall also construct disjunctive normal form if desired.Semant ic  Representat ion  A specialized meaningrepresentation formalism, Aft;t, developed at llewlcttPackard \[9\], is used for semantic reasoning and as aflexible interface to various application systems.
H?1;is a linguistically motivated extension of sorted \[irst-order predicate logic, integrating also eonccl)ts fromSituation Semantics and l)l{'|'.
It provides a largerange of rei)resentational mechanisms for natural lan-guage phenomena.3 L ingu is t i c  ResourcesTile core of tile linguistic resources consists of a two-level morphology with feature constraints, all Ill)S(\]oriented grammar of German with integrated syntaxand semantics, and a module for surface speech actrecognition, all implemented ill 7"D/2.Mor l )ho logy The component X2MorP, analyzingand generating word forms, is based on at two-levelmorphology which is extended by a word-lbrmationgralnnrar (described in 7"l)1;) lbr handling the con-catenative llarts of morl)hosyntax \[15\].Grammar  The style of the grammar closely tbllowstile spirit of HPSG, but also incorporates insights fi'omother grammar frameworks (e.g.
catcgorial grammar)and further extensions to the theory \[12\].The grammar distingnishes various types of linguis-tic objects, such as lexical entries, phrase structureschmnata, lexical rules, multi-word lexemes etc., all ofwhich are sl)e<:ified as tyl)ed \[~ature stru<:tures.
Lexi-caI rules are defined as unary ruh!s ;tnd al)plied at run-ti,ne.
Multi-word lexelnes are eoml)lex lexelnes with anon-compositional semantics, such as tixed idiomaticexpressions, lIPS(', I~rincil)les and constraints are rel)-resented by inheritance links ill tile type lattit:e. Thegrammar covers :t fair nmnber of the standard con-structions of German, and exhibits a more detailedcoverage ill some sl)ecilic application oriented are~.Semant ics  Feature strncture descriptions of the se.-mantic contribution of linguistic items arc represent-ed in "I"1)1; and are fully integrated into tile gram-mar.
Additionally, the T'D?
type system is used toencode and check sortal constraints as they occur inselcctional restrictions.
For furl.her 1)rocessing such asscope normalization and anaphora resolution, infer-ences and al)plication dependent interpretation, the(initial) TD?
semantic descriptions arc translated in-to A/'1;1; fornndae.Sl)eech Act  Recogn i t ion  and Dia logue Thegrammar provides a typed interface to a speech act437recognition module based on IIPSG representationsof utterances.
T im assignments of illocutionary forcetake into account syntactic features, a marking of per-formative verbs and assignments offixed illoeutionaryforce to relevant idiomatic expressions.Recently inference-based dialogue facilities using aquasi-modal logic for multiagent belief and goal attri-bution \[5\] have been added to the system, incomingsurface speech act structures are subjected to anapho-ra and reference resolution, translated into a frame-based action representation, and disambignated usinginferential context.
The effects, including communi-cated beliefs and goals, of the first acceptable speechact interpretation are then asserted.4 P rocess ing  componentsParser and generator provide the basic processingflmctionality needed for grammar development andsample applications.
In addition to the separate mod-ules for parsing and generation, we also experimentwith a uniform reversible processing module based ongeneralized Earley deduction.Parser  The parser is a bidirectional bottom-upchart parser which operates on a context-free back-bone implicitly contained in the grammar \[6\].
Theparser can be parameterized according to various pro-cessing strategies (e.g.
breadth first, preference of cer-tain rules etc.).
Moreover, it is possible to specify theprocessing order for the daughters of individual rules.An elaborate statistics component supports the gram-mar developer in tuning these control strategies.In addition, the parser provides the facility to filterout useless t~ks, i.e.
tasks where a rule applicationcan be predicted to fail by a cheaper mechanism thannnification.
There is a facility to precompute a filterautomatically by determining the possible and impos-sible combinations of rules; some additional filteringinformation is hand-coded.The parser is implemented in an object-orientedmanner to allow for different parser classes using dif-ferent constraint solving mechanisms or different, pars-er instances using different parsing strategies in thesame system.
With differing parameter settings in-stances of the parser module are used in the X2MorFand surface speech act recognition modules ,-us well.Generator  Surface generation in DISCO iS per-formed with the SeReal (Sentence Realization) sys-tem \[4\], which is t)ased on the semantie-head-drivellalgorithm by Shieber et al SeReal takes a TD?
se-mantic sentence representation ms its input and candeliver all derivations for the input admitted by thegrammar.
Efficient lexieal access is achieved by havingthe lexicon indexed according to semantic predicates.Each index is associated with a small set of lemma-ta containing the semantic predicate.
Using the sameindexing scheme at run-time for lexical access allowsus  to restrict unification tests to a few lexical items.Subsumption-based methods for lexieal access wereconsidered too expensive for dealing with distribut-ed disjunctions.
The grammar nsed for generation isthe sanre as the one used for parsing except for somecompilation steps performed by SeReal that, amongother things, introduce suitable information wherever'semantically empty' items are referred to.
Rule ap-plication is restricted by rule accessibility tables whichare computed off-line.5 Per fo rmance  Mode l l inghr our search for nrethods that gel; us from the trans-parent and extensible competence grammar to el\[i-cient and robust performance systems we have beenfollowing several leads in paralM, We assume thatmethods for compilation, control and learning need tobe investigated.
The best combination of these meth-ods will depend ou the specific application, hr thefollowing some initial results of our efforts are sum-marized.Acqu is i t ion  of  Sub languages  by EBL  it is amatter of common experience that different domainsmake different demands on the grammar.
This ob-servation has given rise to the notion of sublangnage;efficient processing is achieved by the exploitation ofrestricted language use in well specified domains.In the DISCO system we have integrated such an ap-proach based on Explanation-Based Learning (1~;13I,)\[14\].
The idea is to generalize the derivations of train-ing instances created by normal parsing automaticallyand to use these generalized erivations (called teln-plates) in the n,n-time mode of the system.
If a tem-plate can be instantiated for a new input, no furthergrammatical analysis is necessary.
The approach isnot restricted to the senl;ential level but can also beapplied to arbitrary subsentential phrases, allowing itto interleave with normal processing.Inte l l igent  Backt rac ldng  in P rocess ing  Dis junc-t ions In \[16\] a method is outlined lbr controllingthe order in which eonjnnets and disjmmts are to beprocessed.
The ordering of disimmts is useful whenthe syste.m is supposed to find only the best result(s),which is the case for any reasonably practical NLapplication.
An extension of NDi,/V'e has been im-plemented that exploits distributed disjunctions forpreference-based backtracking.Compi la t ion  of I I PSG into Lexica l lzed TAG\[7\] describes an approach for compiling fIPSG intolexicalized feature-based TAG.
Besides our hope toachieve more efficient processing, we want to gaina better understanding of the correlation between1 \[PSG and TAG.
The compilation algorithm has l)eenintplelneute(\[ and (:overs almost all constrtlctions con-taine(\] ill our IIPS(\] granltnar.6 Env i ronmentThe DISCO I)EVELOPMI~NT SIIELI, serves as the basicarchitectural platform for the integration of naturallanguage components in the DISCO core system, aswell as for the CosMA application system \[13\].
Follow-ing an object oriented architectural model we followeda two-step approach, where in the first; step the archi-tecture is developed independently of specific compo-nents to be used and of a partienlar flow of control.In tim second phase tl,e resulting 'frame system' is in-stantiated by the iutegration of e.xisting componentsand by defining the particular llow of control betweenthese components.
Using an object-oriented design to-gether with multiple inheritance has been shown fruit-438ful for ttle system's modifiability, extensibility and in-cremental usability .
.
.
.
.
.
.
.Several editing and visualization tools greatly fa-cilitate the work of the grammar developer.
Themost prominent of them, FEGRAMEDj provides the us-er with a fully interactive feature editor and viewer.There are many possibilities to customize tile view on-to a feature strncture, such ,as hiding certain featuresor parts of a structure, specifying the feature orderand many more.
The large feature structures emerg-ing in the process of constraint based formalisms makesuch a tool absolutely indispensable for grammar de.-bugging.
Main goals of the development ofFI~GltAMI.
'Dwere high portability and interfacing to different sys-tems.
Written in ANSI-C, it exists in Macintosh andOSF/Moti f  versions and is already used at several ex-ternal sites.There exists a graphical chart display with mouse-sensitive chart nodes and edges directly linked to thefeature viewer, thus making del)ugging much sinq)ler.It also provides a view of the running parser and en-ables you to inspect the effects of the chosen parsingstrategy visually.
A browser for the 7"DE type sys-tem permits navigation through a type lattice andis coupled with tl,e feature editor.
There are oth-er tools ms well, e.g., a 77)?2I#TEXutility, an EMACSTD?
mode, global switches which affect tile I)ehaviourof the whole system etc.The diagnostics tool (DiTo) \[11\] containing close to1500 annotated iagnostic sentences of German fimili-tates consistency maintenance and measuring of con>petenee.
The tool ha.s been lmrted to several sites thatparticipate in extending the test-sentence database.7 Put t ing  it to the TestCooperat ive  Schedu le  Mauagement  In build-ing the COSMA prototype the DISCO core system hasbeen successrully integrated into an application do-main with both scientific interest and practical plau-sibility, viz.
multi-agent appointment scheduling (seeFigure 1).
Understanding and sending messages innatural language is crucial for tl,is application sinceit cannot be expected that all participants will haw~a COSMA system.
Tile use of natural hmguage alsomakes it easier for the owner of the system to Inon-itor the progress of an appointment scheduling pro-cess.
Each COSMA instance functions as a personalsecretarial assistant providing the following services:(i) storage and organization of a personal aplmint -ment date-book; (ii) graphical display and manil)ula-tion of appointment data; and (iii) natural languageunderstanding and generation in communication withother agents via electronic mail.
The current schedul-ing flmctionality includes the arrangement of multi-participant meetings (possibly with vague or taMer-specified details) as well a~s the modification and can-cellation of appointments hat are under arrangementor have already been committed to.Accordingly, the current COSMA architecture h~usthree major components: a prototype appoiutmentplanner (developed by the DFKI project AKA-MOI))that keeps the calendar database, provides temporalresolution and drives the communication with otheragel,ts; a graphical user interface (developed insidethe DISCO project) monitoring tile Calendar state andAPPOINTMENT PLANNER I,~:VEL.
er internal repreeentation_ ( .
IR )~P,I A NAGEMENTMACIIINEItY SCANNER5AR 5NL (standardized) natural angoage NLE-~a.,dL E-MAa WRAPPER AND SCANNERINTEI(FACE1 1 Tf igure  1: l{ongh sketch of the DISCO sys tem in its ap-plication to the COSMA scenario.
Ti le entire COSMAprototylm has been Imilt on top of I,he DISCO DIgVEL-OPMENT SIIEI,L its a nlollotol|ic extension to the coresystem.supporting the nlotlse- and menu-driven arrangement,of new appointments and, finally, the DISCO core sys-tem (enriched with a set of application specilic mod-ules) that provides the natural anguage and linguisticdialogue capabilities.Intm'faee to the.
Core Eng ine  The communica-tion \])etween tile DISCO system and the appointmentplanner is modelled in it ,-estricted appointment tmskinl.erface language aim roughly nleets the illterHal l'el)-resental.ion of the al)pointment planner.
'tk) connectthe two components, DISCO is em'iehed with a dedicat-ed interface nm(lule that l,ranslates l)etween the DIS(:()internal semantics representation language Af?~.
andthe appointment planner representation.
The trans-lation process (maintaining the substantial differencein expressive power between A/'??
and the restrictedplanner language) builds on ideas from current com-piler technology with a limited set of domain- andapplication-specific inference rules \[10\].On its opposite end DISCO is hooked up to plainelectrmfic mail facilities through a general mrpose e-mail i~,terfaee that allows it to receive and send e-mail (and in case of processing Nilures to 'respool'messages to the user mailbox).8 D iscuss ion  and  Out lookWe have presented an overview of the DISCO sysl.mnthat illustrates our general research strategy.
The sys-439tem is implemented in Common Lisp and runs onSun and l iP workstations.
Some tools and periph-eral components are coded in C. A port of the sys-tem to another hardware platform (Apple Macintosh)is currently being carried out.
The total size of thesystem is about 100,000 lines of code.
Parts of thesystem were demonstrated at several conferences, attrade fairs and on other occasions.The work will be continued in two smaller projects.First of all we plan to extend the system's linguis-tic competence of German.
The diagnostic tool Di-To will be expanded in joint work with other groupsto provide an instrument for measuring progress andfor comparing rammars.
We will also continue workon building up dialogue competence.
The applicationdemonstrator will be further developed in collabora-tion with other projects at the DFKI.In the area of performance modelling, we will con-tinue exploring different approaches for control, com-pilation, and competence-based learning in parallel.At this point nobody can really foresee which strat-egy or combination of strategies will yield the bestpractical results.
As we pointed out in the introduc-tion, different application types will require differentperformance models.
IIigh priority is given to theintegration of statistical methods in all pursued ap-proaches, since in contrast to competence modelling,statistical data are essential for developing adequateperformance models.AcknowledgementsWe acknowledge the invaluable input of our formercolleagues, viz., John Nerbonne who substantiallycontributed to the design and success of the DISCOproject, ttarald Trost and Jan Alexandersson.As in many academic environments, major parts ofthe daily system building have been carried out by ourwonderfid research assistants, especially Sabine Buch-holz, Stephan Diehl, Thomas Fettig, Stefan IIaas, Ju-dith Klein, Karsten Konrad, Ingo Neis, Ilannes Pirk-er, Ulrich Sch~ifer, Oliver Scherf, Jgrg Steffen, andChristoph Weyers.This work ha~s been supported by research grantITW 9002 0 from the German Bundesministerinm fiirForschung und Technologic to the DISCO project.Re ferences\[1\] Hiyan Alshawi, editor.
The Core Language Engine.ACL-MIT Press Series in Natural Language Process-int.
MIT Press, Cambridge MA., 1992.\[2\] Roll Backofen and Christoph Weyers.
llDihfe--AFeature Constraint Solver with Distributed Disjunc-tion and ClassieM Negation.
Technical report, DFI(I,Saarbrficken, Germany, 1994.
Forthcoming.\[3\] ttans-UMch Block.
Compiling Trace $z UnificationGrammar.
In Tomek Stl~alkowski, editor, ReversibleGrammar in Natural anguage Processing, pages 155-174.
Kluwer Academic Press, London, 1994.\[4\] Stephan Busemann.
The SeReal System: pattingsemantic-head-driven g eration to tim limits.
Tech-nical document, DFKI, Saarbrlicken, Germany, 199,1.Forthcoming.\[5\] Elizabeth A. tlinkelman and Stephen P. Spack-man.
Abductive Speech Act Recognition, CorporateAgents and the COSMh System.
In W.J.
Black et al,editor, Abduction, Beliefs and Context: Proceedingsof the Second ESPI?IT PLUS Workshop in Compu.rational Pragmatics.
Academic Press, 1992.\[6\] Bernd Kiefer and Olivet' Scherf.
Gimme More IIQParsers.
'File Qeneric Parser Class of DISCO.
Tech-nical report, DFKI, Saarbrllcken, Qerrnauy, 1994.Forthcoming.\[7\] Bernd Kiefer, Klaus Nel, ter, and I(.
Vijay-Slmnker.Compilation or ttPSG to "FAG.
Research report, I)F-I(I, Saarbrilcken, Germany, 1994.
Forthcoming.\[8\] Ilaus-Ulrich Krieger and UMch Sch?fer.
TD?
--A Type Description Language for Constraint-BasedGrammars.
In Proceedings of COLING-94,199,1.\[9\] Joachim Laubsch and John Nerbonne.
An Overviewof.A/'/2/2.
Technical report, Itewlett-Packard Labora-tories, Polo Alto, July 1991.\[10\] John Nerbonne, Joachim Lanbsdl, Abdel Kader Di-agne, and Stephan Oepen.
Software for Applied Se-mantics.
In Chu-Ren throng et al, editor, l'rocecding.~of Pacific Asia Confcreace on Formal and Computa-tional Linguistics, pages 35-56, Talpei, 1993.
Aca-demica Sinica.
(Also available as DFKI Research Re-port RR-92-55).\[ll\] John Nerbomm, I(laus Netter, I(ader 1)iagne, Lud-wig Dickmann, and Judith Klein.
A Diagnostic Toolfor German Syntax.
Machine 7)'anslation:8, 85-107,1993.\[12\] Klaus Netter.
Arclfitectnre and Coverage of tim DIs-co C, rammm'.
In S?.el~han Bnsemann and I(arinHarl)usela, editors, Workshop on Natural LanguageSystems: Re-usability and Modularity.
Proceedings,pages 1-10.
DFKI, Saarbr\[icken, Germany, 199.
'1.\[13\] G(inter Nenmmm.
Design Prilrciples of the Disco Sys-tem.
In Proceedings of the TWLT 5, Twente, Nether-lands, 1993.\[14\] Gfinter Nenmann.
Application of Explanation-basedLearning for Efficient Processing of Constraint-basedGrammars.
In Proceedings of the Tenth IEEE Co~,fer-ence of A rlifical Intelligence for Application, MarriottRiverwalk, San Antonio, Texas, March 1994.\[15\] tlarald Trost.
The Application of Two-Level Mor-phology to Non-eoncatenative G rman Morphology.In Proceedings of COLING.90, 1990.\[16\] IIans Uszkoreit.
Adding Control Information to1)eclarative Grammars.
In Proceedings of the 291hAnmml Meeting of the Associ~tion of ComputatiormlLinguislics in Berkeley, 1991.440
