GRAFON: A GRAPHEME-TO-PHONEME CONVERSION SYSTEMFOR DUTCHWalter DaolemansAI-I,AB, Vrije Universiteit BrusselPleiulaau 2 K, 1050 Brussels, BelgiumE-math walterd@ar ti.
vub.uucpAbstvactWe (k;~,.c,ibe a set of rt,o(lttle.,i that together tuake up agrapheme-to phoneme conversion system for Dutch.
Modulesinclude a syflabificatiou program, a fast morphological parser, alexical database, a phonological knowledg*: base, transliterationrules, and phonological rnles.
Knowledge and procedures wereintlflenmnted object-orientedly.
We contrast GRAFON to recentp .
tern recognitkm and rule.
compiler approaches mid t i t  to showthat the first fails for languages with concatenative comlmtmding(like Dutch, Get,nan, and Scandinavian languages) while thesecond lack.,; the flexibility to model different phonologicaltheories.
It is claimed that sylhtbles (and notgraphemes/phonemes or ulorphemes) should be central units in artde-based phonemisatkm algorithm.
Furthermore, the architec-tnre of GRA!
:"ON and its nser interface make it ideally suited asa rule testing tool fol phonologists.1.
INTROI)~CI'I(1lklSpeech :;ynthesis ystems cousist of a linguistic and anacoustic part The linguistic part converts an orthographicrepresentation of a text into a phonetic representation flexibleand detailed enough to serve as input to the acoustic part.The acoustic t)art is a speech synthesiser which may be basedon the production of allophones or diphones.
This paper isconcerned with file linguistic part of speech synthesis forDutch (a process we will call phonamisation).
The problemof phonemi~;ation has beett approached in different ways.Recently, covnectionist approaches (NETtalk: Sejnowski andRosenberg, 1987) mid memory-based reasoning approaches(MBRtalk: Slanfill and Waltz, 1986) have been proposed asalternatives tt) the traditional symbol-manipttlation approach.Within the latter (rule-based) approach, several systems havebexm built for English (the rnost comprehensive of which isprobably Ml\]'alk; Allen, Hunnicutt and Klatt, 1987), and sys-tems for othm" European hmguages are beginning to appear.Text-to-,;peech systems tbr Dutch are still in an experi-mental stage, and two different designs can be distinguished.Some researchers adopt an 'expert system' pattern matchingapproach /Boot, 1984/, others a 'rule compiler' approach/Kerkhoff, Wester and Bores, 1984; Berendsen, Langewegattd van Leer,wen, 1986/ in which the rules are mostly in anSPE-inspired format.
Both approaches take thegrapheme/phoneme as a central nnit.
We will argue thatwithin the symbol manipulation approach, a modular architec-ture with rite syllable as a central tmit is to be preferred.The research described in this paper was supported partly by theEuropean Community under ESPRIT project OS 82.
The paper isbased on an hiternal memo (Daelemans, 1985) and on part of adissertation (l)aelemans, 1987b).
The system described here is notto be eonfilsed with the GRAPHON system developed at the Tech-aisehe Oniversitiit Wien (Pounder and Kommcnda, 1986) which isa text-to-speech syatenl for German.
I am grateful to my forraerand present c(lleagtms in Nijmegen and Brtmsels for providing asthnulating wo,'kiag environment.
Erik Wybouw developed C-codefor constructing an indexed-sequential version of the lexical data-base.The architecture of GRAFON as it is currently imple-mented is shown in Figure l.MORPHOLOGICAL ANALYSIS IJ :::::::::::::::::::::  ,~#het##gieren##van~#de##herfst #sto m# ~:,:,:.:.:.
: :,>:.:.::i!i2!?
!~iiiiiiij2~ii I::::::::::::::::::::: I:~ ~?EX~:;~r:/: SYLLABI FICATION ::::::::::::::::::::::!
::: tTA~A::: : : :  ##het ~,~gie$ren#~van##de#~,herfst #storm# ~:::::::::::::::::::::q>~~' : '  ~_het  ##+gieSren##+van#~de##++herfsU,+storm ~,#ETRANSLITERATION MAPPINGSPHONOLOGICAL  RULESat 'Xi:ro'van do 'heraf.storamFigure I.
Architecture o?
GRAFON.
Dark boxes indicate knox4edge sources,white boxes processing modules, After computing morphological e~dsyllable boundaries, the system retrieves word accent information andapplies tre.~sliteration mappings and phonological rules to the input.~esultit~g t 'epresentanons are s\]aowr~ within the boxesAn input string of orthographic symbols is first analysedmorphologically.
Then, syllable bonndaries are computed,taking into account the morphological boundaries.
Morpho-logical analysis uses a lexical database, which is also used toretrieve word stress of monomorphematic word forms.
Theactual transcription takes the syllable as a basic unit andproceeds in two stages: tirst, parts of spelling syllables aretransliterated into (strings of) phoneme symbols by a numberof transliteration mappings.
To this representation, context-sensitive phonological rules are applied, modifying parts ofthe syllables in the process.
Any level of phonetic detail(between a broad and a narrow transcription) can be obtainedby adding or blocking rules.In the remainder of this paper, we will describe thedifferent modules playing a role in GRAFON in some detail,go into some language-specific requirements, and discuss theadvantages of our architectnre to alternative designs.1332.
SYLLABIFICATIONInformation about the position of syllable boundaries inspelling input strings is needed for several reasons.
The mostimportant of these is that most phonological rules in Dutchhave the syllable as their domain.
E.g.
Dutch has a schwa-insertion rule inserting a schwa-like sound between a liquidand a nasal or non-coronal consonant if both consonantsbelong to the same syllable.
Compare melk (milk): /mel0k/to melSken (to milk): /melk0/ ($ indicates a syllable boun-dary).
Without syllable structure this problem can only beresolved in an ad hoc way.
Furthermore, stress assignmentrules should be described in terms of syllable structure/Berendsen and Don, 1987/.Other rules which are often described as having themorpheme as their domain (such as devoicing of voicedobstruents at morpheme-final position and progressive andregressive assimih~tion), shonld really be described as operat-ing on the syllable level.
E.g.
hetSze (/hets0/: smear cam-paign; devoicing of voiced fricative at syllable~final position)and asSbest (/azbest/: asbestos; regressive assimilation).
Thesemono-morphematic words show the effects of the phonologi-cal rules at their syllable boundaries.
Furthermore, the propertarget of these rules is not one phoneme, bnt the completecoda or onset of the syllable, which may consist of morethan one phoneme.Although these examples how convincingly that syllablestructure is necessary, they do not prove that it is central.However, the following observations eem to suggest he cen-trality of the syllable in Dutch phonemisation:- The combination of syllable structure and information aboutword stress seems enough to transform all spelling vowelscorrectly into phonemes, including Dutch grapheme <e>,which is a traditional stumbling block in Dutch phonemisa-lion.
Usually, many rules or patterns are needed to transcribethis grapheme adequately.-A l l  phonological rules traditionally discussed in the litera-ture in terms of morpheme structure can be defined straight-forwardly in terms of syllable structure without generatinger ro l s .These facts led us to incorporate a level of syllabledecomposition i to the algorithm.
This module takes spellingstrings as input.
Automatic syllabification (or hyphenation) isa notorionsly thorny problem for Dutch language technology.Dutch syllabification is generally guided by a phonologicalmaximal onset principle a principle which states that betweentwo vowels, as many conso~,ants belong to the second syll-able as can be pronounced together.
This results insyllabifications like groe-nig (greenish), I-na (a name) andbad-stof (terry cloth): However, this principle is sometimesoverruled by a morphological principle.
Internal word boun-daries (to be found after prefixes, between parts of a com-pound and before some suffixes) always coincide with syllableboundaries.
This contradicts the syllable boundary positionpredicted by the maximal onset principle.
E.g.
groen-achtig(greenish, groe-nachtig expected), in-enten (inoculate, i-nentenexpected) and stads-tuin (city garden, stad-stuin expected).
InDutch (and German and Scandinavian languages), unlike inEnglish and French, compounding happens through concate-nation of word forms (e.g.
compare Dutch spelfout or Ger-man Rechtschreibungsfehler to French faute d'orthographe orEnglish spelling error).
Because of this, the default phono-logical principle fails in many cases (we calculated thisnumber to be on the average 6% of word forms for Dutch).We theretbre need a morphological nalysis program to detectinternal word boundaries.
By incorporating a morphologicalparser, the syllabification module of GRAFON is able (inprinciple) to find the correct syllable boundaries in the com-plete vocabulary of Dutch (i.e.
all existing and all possiblewords).
Difficulties remain, however, with foreign wordsand a pathological class of word forms with more than onepossible syllabification, e.g.
balletic may be hyphenated ba/-let-je (small ballet) and bal-le-tje (small ball).
Syllabificationin languages with concatenative compounding is discussed in\]_34more detail in Daelemans (1988, forthcoming).3.
LEXICAL DATABASEWe use a word tbrm dictionary instead of a morphemedictionary.
At present, some 10,000 citation forms with theirassociated inflected forms (computed algoritlmlically) arelisted in the lexical database.
The entries were collected bythe university of Nijmegen from different sonrceso Thechoice for a word form lexical database was motivated by thefollowing considerations: First, morphological analysis if;reduced to dictionary looknp sometimes combined with com-pound and affix analysis.
Complex word fonaas (i.e.
freqneutcompounds and word tbrms with affixes) ale stored wifl~ theirinternal word boundaries.
These boundaries can therefore beretrieved instead of computed.
Only the structure of complexwords not yet listed in the dictionary must be computed.This makes morphological decomposition computatioually essexpensive.Second, the number of errors in morphological parsingowing to overacceptance and nonsense analyses is consider-ably reduced.
Traditional erroneous analyses of systemsvsing a morpheme-based lexicon like comput+er andunder+stand, or for Dutch kwart+el (quainter yard instead ofquail) and li+epen (plural past tense of lopen, to run;analysed as 'epics about the Chinese measure li') are avoidedthis way.
Finally, current and forthcoming storage andsearch technology reduce the overhead involved in using largelexical databases considerably.Notice that the presence of a lexical database suggests asimpler solution to the phonemisation problem: we could simply store the transcription with each entl2?
(This lexicon-basedapproach is pursued for Dutch by Lammens, 1987).
How-ever, we need the algoritlun to compute these transcriptionsantomatically, and to compute transcriptions of (new) wordsnot listed in the lexical database.
Furthermore, the absenceof a detailed rule set makes a lexicon-based approach lessattractive from a linguistic point of view.
Also, from a technological point of view it is a shortcoming that the phoneticdetail of the transcription can not be varied for differentapplications.Our lexical database system can be functionally interpreted as existing of two layers: a static storage level inwhich word forms are represented as records with fieldspointing to other records and fields containing various kindsof information, and a dynamic knowledge level in whichword forms are instances of linguistic objects grouped ininheritance hierarchies, and have available to them (throughinheritance) various kinds of linguistic knowledge andprocesses.
This way new entries and new information associ-ated with existing entries can be dynamically created, and(after checking by the user) stored in the lexical database.This lexical database architecture is described in more detailin Daelemans (1987a).4.
MORPHOLOGICAL ANALYSISMorphological analysis consists of two stages: segmenta-tion and parsing.
The segmentation routine finds possibleways in which the input string can be partitioned into diction-ary entries (working from right to left).
In the present appli-cation, segmentation stops with the 'longest' solution.
Con-tinuing to look for analyses with smaller dictionary entriesleads to a considerable loss in processing efficiency and anincreased risk at nonsense-analyses.
The loss in accuracy isminimal (recall that the internal structure of word formslisted in the lexical database can be retrieved).Some features were incorporated to constrain the numberof dictionary lookups necessaly: the most efficient of theseare a phonotactic heck (strings which do not conform to themorpheme st,'uctnre conditions of Dutch are not lool~ed up),and a speciai memory buffer (snbstrings already looked upare cached with the result of their lookup; during segmenta-tion, the sable substrings arc often looked up more thanonce).
'l'h(~ par:Sng part of morphological analysis uses a com-pound grammar and a chat1 parser formalism to accept orreject combinations of dictionary entries.
It works from leftto right, It also takes into account spelling changes whichmay occur at the boundary of two pa~s of a compound(these are called linking graphemes, e.g.
hemelSblauw; sky-blue, eiERdooier; egg-yolk).During dictionaryqookup, word stress is retrieved forthe dictionar/ entries (tiffs part of the process could bereplaced by additional rides, but as word stress was awfil-able in the Icxieal database, we only had to define the rulesfor stress ass,gument in new compouuds).5.
\]?I\]tOl'qOl ,OG~CAL KNOWLEDGEKnowledge about Dutch phonemes is implemented bynleans of a tT/pe hiel'archy, by inheritance and by associatingfeatures to objects, in a standard object-oriented way.
Infor-mation about a particular phonological object can be availablethrough feature inheritance, by computing a method or byreturning the stored value of a feature.
However, the exactway informai:iou fl'om the phonological knowledge base isretrieved, is hidden fi'om the user.
An independent interfaceto the knowl,xlgc base is defined consisting of simple LISP-like predicates and (transformation) fhnctions in a uniformformat, bJ..g. (obstruent?
x), (syllabic?
x), (make-voiced x)etc.
The arl~:wer call b~3 true, false, a numerical value whena gradation is used a special message (undefined), or in thecase of tran:~tbrmation f netions, a phoneme or string ofphonemes.
'fhese functions and predicates, combined withBoolean OlYerators AND, OR and NOT are used to write theconditions and actions of the phonological rules.
The inter-face allows us to model different heoretical formalisms usingrite same knowledge base.
E.g.
the generative phonology for-malism can lye modelled at the level of the interface flmc-tions.The morphological aualysis and syllabification stages inthe algorithm output a list of syllables in which internal andexternal word boundaries ,and word stress are marked.
Eachsyllable be.comes an instance of the object type syllable,which has a set of features associated with it: Figure 2 liststhese feature~, and their value for one particular syllable.~#het~'#++gie$ren-~#~+van##de#~'++herfst#+storm<syl \[5467>spoiling herfstclosed?
truestressed?
1previous-syllable <syl 5466>next-syll~ble <syl 5468>ext ernt~l-word-boundary?
falseinternel-werd-boundary?
truestructure h e r r s tonset /h/nucleus Islcoda Irafltranscription lhereflFigure 2.
Examt,le instance of the object ype SYLLABLE and its associatedfeature values after transcription.The vahye of some of these features is set by means of' infor-mation in the input: spelling, closed?
(true if tile syllable endsin a consonant), stressed?
(1 if the syllable carries primarystress, 2 if it carries secondary stress), previous-syllable andnext-syllable (pointers to the neighbouring syllables),external-word-boundary?
(true if' an external word boundaryfollows), internal-word-boundary?
(true if an internal wordboundary follows).
The wdues of' these features are nscd bythe transliteration and phonological rules.
Of other features,the value must be computed: structure is computed on thebasis of the spelling feature.
The value of this feature reflectsthe internal structure of the spelling syllable in terms of'onset, nucleus and coda.
Tile features onset, nucleus andcoda (this time referring to the phonological syllabl~) arecomputed by means of the transliteration and phonolopicalrules.
Their initial values are the spelling, their final vah~esare file transcription.
The rules have access to the wdue ofthese features and may change it.
The feature ~r~msc~'iF&~,stands lbr the concatenation of ttle final or intermediate valuesof onset, mtcleus and coda.Transliteration rules are mappings from elements of syll.able structure to their phonological counterpart.
E.g, fi~e sytl-able onset <sch> is mapped to /sX/, nucleus <:ie> to /i/,and coda <x> to /ks/.
Conditions can be added to make themapping context-sensitive: onset <c> is mapped to /s/ if afront vowel follows, and to /k/ if a back w)wel folk)ws.There are about forty transliteration mappings.Tbe phonological rnles apply to the output of tbe tra,sli-teration mappings (which may be regarded as some kind oftwoad transcription).
They are sequentially ordered.
Eachrule is an instance of the object type phonologic~d-ruh'., whichhas six features: active-p, domain, application, conditi~nJs,actions and examples.
A rtde cau tye made active or inactivedepending on the value of active-p.
If it is true, sendiny anapplication message to the rule results in checking the co~di.dons on a part of the input string constrained by domai~(which at present can be syllable, morpheme, word or sentence).
If the conditions return trne, the actions; expression i,;executed.
Actions may also involve the triggering of otherrules.
E.g.
shwa-insevtion triggers re-syllabification.
Coudilions and actions are written in.
a l~mguage consisting of thephonological functions and predicates mentioned earlier (theyaccess the phonological knowledge base and fi:atures of syll-ables), Boolean connectors, and simple string-manipulationfunctions (first, last etc.).
After successful application of arule, the input string to which it was applied is stored in theexamples featm'e.
This way, interesting data about the operalion of the rule is available from the rnle itself'.
In Figtlrc 3some examples of rules are shown, l)ill'erent no~ations forthis rule are possible, e.g.
the similarity betwet~u both rul~-scould be exploited to merge them into one rule.6.
RELATED RESEARCHIn the pattern recognition approach advocated by MartinBoot (1984), it is argued that affix-stripping rule~; (withoutusing a dictionary) and a set of context-sensitive patternmatching rules suffice to phonemise spelling input.
Bc~ot ,;tatesthat 'there is no linguistic motivation for a phouenli,;atio,model in which syllabification plays a significant role'.
WeREGRESSIVE ASS IMILAT IONActive7 TrueDomain?
Sy l lab leConditions(let ((coda-1 (lost (coda SYL)))(onset-Z (r;rst (onset (next SYL)))))(and(stop?
onset-2)(voiced?
onset-2)(obstruent ?
code- l )(nO~ (voicod?
coda-l))))Actions(meke=voiced (coda SYL))PROGRESSIVE  ASSIMILAT IONActive?
T rueDomain?
Sy l lab leConditions(let ((coda-I (lost (codaSYL)))(onset-2 (first (onset (next SYL)))))(~d(obstruent?
coda- \[ )(not (voiced ?
coda- 1 ))(fricative?
onset-2)(voiced?
onset=2)))Actions(mske-voiceloss (onset (next SYL)))Figure 3.
A possible detinition of voice assimilation rules in Dutch.
TheLET syntax is used for local variable binding, but is not stTietly needed.SYL is bound to the curt'cut syllable.In a rule compiler approach (e.g.
Kerkhoff, Wester andBoves, 1984; Berendsen, Langeweg and van Leeuwen, 1986),rules in a particular format (most often generative phonology)are compiled into a program, thereby making a strict distinc-tion between the linguistic and computational parts of the sys-tem.
None of the existing systems incorporates a full mor-phological analysis.
The importance of morphological boun-daries is acknowledged, but actual analysis is restricted to anumber of (overgenerating) pattern matching rules.
Anotherserious disadvantage is that the user (the linguist) is restrictedin a compiler approach to the particular formalism the com-piler knows.
I would be impossible, for instance, to incor-porate theoretical insights from autosegmental nd metricalphonology in a straightforward way into existing prototypes.In GRAFON, on the other hand, the phonological knowledgebase can be easily extended with new objects and relationsbetween objects, and even at the level of the fimction andpredicate interface, some theoretical modelling can be done.This flexibility is paid, however, by higher demands on thelinguist working with the system, as he should be able towrite rules in a LISP-like applicative language.
However, wehope to have shown fl'om examples of rules in Figure 3 thatthe complexity is not insurmountable.7.
APPLICATIONSApart from its evident role as the linguistic part in atexture-speech system, GRAFON has also been used in otherapplications.7.1.
Linguistic ToolOne advantage of computer models of linguisticphenomena is the framework they present for developing,testing and evaluating linguistic theories.
To be used as alinguistic tool, a natural anguage processing system should atleast come up to the following requirements: easymodification of rules should be possible, and traces of ruleapplication should be made visible.In GRAFON, rules can be easily modified both at themacro level (reordering, removing and adding rules) and themicro level (reordering, removing and adding conditions andactions).
The scope (domain) of a rule can be varied aswell.
Possible domains at present are the syllable, the mor-pheme, the word and the sentence.
Furthermore, the applica-tion of various rules to an input string is automatically tracedand this derivation can be made visible.
For each phonologi-136cal rule, GRAFON keeps a list of all input strings to whichthe rule applies.
This is advantageous when complex ~'aleinteractions must be studied.
Figure 4 shows the user interface with some output by the program.
Apm~t from thechanging of rules, the derivation, and the example list foreach different rule, the system also offers menu-based facili-ties for manipulating various parameters used in the hyphena-tion, parsing and conversion algorithms, and for compilingand showing statistical information on the distribution of allo.phones and diphones in a corpus.7.2.
Dietionm2?
ConstructionOutput of GRAFON was used (after manual checking)by a Dutch lexicographic firm for tile construction of thepronunciation representation of Dutch entries in a DutchFrench translation dictionary.
The program tarried out to I~easily adaptable to the requirements by blocking rules whichwould lead to too much phonetic detail, and by changing thedomain of others (e.g.
the.
scope of assimilation rules wasrestricted to internal word boundaries).
The accuracy of' theprogram on the 100,000 word corpus was more than 99%,disregarding loan words.
The phonemisation system alsoplays a central role in die dynamical part of the lexicaldatabase architecture we have described elsewhere /Daele-marts, 1987a/.7.3.
Spelling Error CorrectionA spelling error correction algorithm based on the ideathat people write what they heat' if they do not know thespelling of a word has teen developed by Van Berkel /VanBerkel and De Smedt, 1988/.
A dictionary is used in whichthe word forms have been transformed into phonemerepresentations with a simplified and adapted version ofGRAFON.
A possible error is transformed with the samealgorithm and matched to the dictionary entries.
Combinedwith a trigram (or rather triphone) method, this system cancorrect both spelling and typing errors at a reasonable speed.8.
IMPLEMENTATION AND ACCURACYGRAFON was written in ZetaLisp and Flavors and runson a Symbolics Lisp Machine.
The lexical database is storedon a SUN Workstation and organised indexed-sequentially.Accuracy measures (on randomly chosen Dutch text) areencouraging: in a recent est on a I000 word text, 99.26% ofphonemes and 97.62% of transcribed word tokens generatedby GRAFON were judged correct by an independent linguist.The main source of errors by the program was the presenceof foreign words in the text (mostly of English and Frenchorigin).
Only a marginal number of errors was caused bymorphological analysis, syllabification or phonological ruleapplication.There is at present one serious restriction on the system:no syntactic analysis is available and therefore, no sophisti-cated intonation patterns and sentence accent can be corn-puted.
Moreover, it is impossible to experiment with the Phi(the phonological phrase, which may restrict sandhi processesin Dutch) as a domain for phonological rules.
However,recently a theory has been put forward by Kager and Qnen6(1987) in which it is claimed that sentence accent, Phi bonn-daries and I (intonational phrase) boundaries can be computeAwithout exhaustive syntactic analysis.
The information eededis restricted to the difference between function and contentwords, the category of fimction words, and the differencebetween verbs and other content words.
All this informationis accessible in the current implementation of GRAFONthrough dictionary-lookup.Gt a fent lvpher~at lon 0Ol, lons  f 'honemlse  Input ,  Phonemlse  Fi lel 'a, ~e," ( lo t ions  I l yphenare  lr lpul, 6 ra fon  LoopI~amples  Opt ions  Parse Illptl~ 5ho lv  RulesUandah+ 3obIll ~lforl eannant l :  f}t 'o f tm Loop~> l i n t  9 ieren  van tle her fs l ;~tarn(E l  =: ' '  \ [ l IE nel l  == *+ Vil l i  == lie == +* IIER|:SI = +* SIORH);*I 'KL:Ia 'V?,111 dO +NEFOF+sLi)I'~III G ive  Oxa l r l~  ~ 1 o ~ 1  01:I!
t---'If,IF f I/it- t}\[gOli \]Ri; - - -  + t P~ {'9' ess lv+ R~s lnE la t  ~on)!)
l 1!
(~ 6'ot,el I l i l tong isat ion  1)t t'l~f J  It I , l~ le t fon)ht !
t  f t~t(';.
C I t , s t+,  F?oduct ion)<~ I )~9~la fnat ion)' i 141 I" rl, :" Sch la  rnser t lo ,Oi l l af,), /  coranatl(l: Show l#ule~l)r .3for) col~r1+~n(}: Ea{~DII)Z~5 l\]f)t,l~r~sFxaI'q) l (~  fo r  ru le  ~<SClIHfI-INSEItI ION 2110116!+el l  in  ( , "  E CttO = IT, E * I JE \ [F )l a ,n  +n ~C gO g '1ht?lp it+ ( ,  E?R 51E = *"  ttZILP = gER * Z \ [  IIItlG)FINN -OEVOICIN6Pl OS/VE- fO FRith riVER-+BEI l \[fINP/~Lhl,qL ISh 110NIllhlU541tklR~IN\[\[~UOC~I\]U UOi\[IW,UfJIVEL O WII IlIONGI5tl f ItJN- lgOt~f\[ -OlPlllllON61ShI ION 2PRI)GRESSlVE-FISSINII ~FI\[)NRfGI~ES5 IUf .-hSS IHIt.,q 1 \]\[\]NNhSN.-hfSItllt ~t 10NfLUS/FR-PEIJIJf \[ 10N\[It OEt4II,ih l l ON\ [}er ivat ionD ia lec ts  Ex i tS ta t i s t i cs#h_otm.\[_og\[?al Ppl_e.~ _.
~e_~ n'POg, l~ES~tqE f lSSn l l L f l f l f l l l  \ [ \ ]  t~?EeREsSI~OE r lSS lml .
f l l  1011 \ [ \ ]  Et i l l  I Ink  I\]E/lOl C l liE, \[7~~l OSIU\[~-I O "FRt Cfll IUE 1~'1118111 f l~ iS l f l l l f l l l l a l  .
.
.
.
.
.
.
.
1~ ~,)\[ f lEl l l  IIR\[ \[ fJIl \ [ \ ]  t~: l l f f l \ [  l)\[:tdfJ\[Cllffl \ [ \ ]  \[~I "I)EI.EI IUIt ~ E'111 f l l f l l  I sn i  lo l l  \[_\]i iR ius  FIL I .
IIIG 1~ 1~3CIIIIll- IflSEP, I IOH \ [ \ ]  \[~!1USIEI4 I#EIIIICl \ [ l l l l  \ [ \ ]\[ lIT \[{Pl)OI;RI.
1 e COl CI II{~ 1~ \[I n i t ia l i seIHIIEI " 11 \[ PlI/llOllG I Slql I {Ill I El,'9,.++?
tnrygto,!uLsm m+!
2 _ ~+ EDo I t  \ [ \ ]  fiber t \[2\]UJ0e'-'~jm),: 5 J" P b t q k 9:),~, t ul,;0o,~ .,,,111 ,,,IIJ, lllls z \[ vx ~,,,t,OI J wh a"e~'kl e i acra e I o o II y aFigure 4.
Snapshot f the user interface to GRAFON.
Top lelt, the system hascomputed an internal representation and transcription f a seuteucefragment.
A derivation is also printed.
In the centre of the display, a menulisting all phonological rules is shown.
By clicking on a rule, the usergets a list of input phrases to which the rule has been applied (middleleft).
The same list of rules is also given in the top right mmm.
Thistime, the application of individual rules can be blocked, and the result ofthis can be studied.
The chart bottom right shows the fi'equency distributionof  phonemes for the current sess ion ,9.
CONCLUSIONS\]{t seems that high quality phonemisation for Dutch canbe achieved otdy by incorporating enough linguisticknowledge (about syllable boundaries, internal word boun-daries etc.).
GRAFON is a first step in this direction.Although it lacks some sources of knowledge (notably aboutsentence accent and syntactic structure), a transcription ofhigh quality and accuracy can already be obtained, and thesystem was successfully applied in practical tasks like ruletesting, dictionary constrnction and spelling error correction.At present, we are working on the integration of a syn-tactic parser into GRAFON.
This would make available thephonological phrase as a domaitt, and would make the com-putation of natural intonation patterns possible (vsing e.g.
thealgoritlun developed in Van Wijk and Kempen, 1987).
Thealternatiw~ approach to the comptttation of phonologicalphrase boundaries /Kager and Quen6, 1987/ is also beingexplored.Another (more trivial) extension is the addition ofpreprocessors for the verbal expansion of abbreviations andnumbers, 'rite specifications of a lexical attalyser providingthis functionality were provided in Daelemans (1987b).
Anoverview of the system including the modules we arepresently working on is given in Figure 5,10.
REFERENCESAllen, J., M.S.
Hnnnicutt and D. Khttt.
From 7~xt toSpeech.
Cambridge, UK: C.U.P., 1987.Berendsen, E., S. \[,angeweg and H. van Leeuwen.
'Compu-tational Phonology: Merged, not Mixed.'
Proceedings ofCOLING-86, 1986.Berendsen, E. and J.
Don.
'Morphology attd stress in arule based grapheme-to-phonente conversion system forDutch.'
Proceedings European Conference on SpeechTechnology, Edinburgh 1987.Berkel, B.
Van and K. De Smedt.
'Triphone attalysis: ACombined Method for the Correction of Orthographicaland Typographical Errors.'
Proceedings 2nd ACt,Applied Conference, 1988.Boot.
M., ?Iml, tekst, computer.
Katwijk: Servire, 1984.Daelemans, W. 'GRAFON: An Object-oriented System forAutomatic Grapheme to Phoneme Transliteration andPhonological Rule Testing.'
Memo, University ofNijmegen, 1985.Daelemans, W. 'A Tool for the Automatic Creation, Exten-sion and Updating of Lexical Knowledge Bases.
'Proceedings of the Third ACL European ChapterConference, 1987a.Daelemans, W. Studies in Language J'e&nology: An Object-Oriented Computer Model of Morpho-phonologicalAspects of Dutch.
Doctoral Dissertation, University ofLeuven, 1987b.Daelemans, W. 'Automatic Hyphenation: Linguistics w~'rsusEngineering.'
In: F. Stems and F.J. Heyvaert (Eds.
),Worlds behind Words, forthcoming 1988.137LEXICAL ANALYSIS )SYNTACTIC ANALYSIS - -1((her gieren)(van de herfst~torm))_MORPHOLOGICAL ANALYSIS~#het##gieren##lvan~#de##herfst#st?rm##SYLLABIFICATION 1##het~*~gieSren## I ven##de~*#herfst#storrn ~*#t  oRD STRESS ASSIGNMENT ..\]#~'het ##+gie$ren##1+van##de~*#+?herf st#+st?rm JTRANSLITERATION MAPPINGS IPHONOLOGICAL RULESat 'Xi:ro'vo, n de 'hsraf,storemI .SENTENCE ACCENT ASSIGNMENTJ INTONATION CONTOUR COMPUTATION at 'X i~r a'v&n do 'h~ref,storamFigure 5.
Processing modules inan extended version of GRAFON.Kager, R. and H. Quen6.
'Deriving prosodic sentence struc-ture without exhaustive syntactic analysis.'
ProceedingsEuropean Conference on Speech Technology, Edinburgh1987.Kerkhoff, J., J. Wester and L. Boves, 'A compiler for imple-menting the linguistic phase of a text-to-speech onver-sion system'.
In: Bennis and Van Lessen Kloeke (eds),Lh~guistics in the Netherlands, p. 111-117, 1984.Lammens, J.M.G.
'A Lexicon-based Grapheme-to-phonemeConversion System.'
Proceedings European Conferenceon Speech Technology, Edinburgh 1987.Pounder, A. and M. Kommenda.
'Morphological Analysisfor a German Text-to-speech system.'
COLING '86,1986.Sejnowski, TA.
and C.R.
Rosenberg.
'Parallel Networks thatLearn to Pronounce English Text.'
Complex Systems 1,1987, 145-168.Stanfill, C. and D. Waltz.
'Toward Memory-based Reason-ing.'
Communications of the ACM, 29 (12), 1986,1213-1228.Wijk, C. van and G. Kempen, 'From sentence structure tointonation contour'.
In: B. Muller (Ed.
), Sprachsyn-these.
Hidesheim: Georg Olms Verlag, 1985, p. 157-182.138
