Proc.
EACL 2012 Workshop on Applications of Tree Automata Techniques in Natural Language Processing, pages 31?41,Avignon, France, April 24 2012. c?2012 Association for Computational LinguisticsSecond position clitics and monadic second-order transductionNeil Ashton203 Morrill HallCornell UniversityIthaca, NY 14853-4701nma38@cornell.eduAbstractThe simultaneously phonological and syn-tactic grammar of second position clitics isan instance of the broader problem of ap-plying constraints across multiple levels oflinguistic analysis.
Syntax frameworks ex-tended with simple tree transductions canmake efficient use of these necessary ad-ditional forms of structure.
An analysisof Sahidic Coptic second position cliticsin a context-free grammar extended by amonadic second-order transduction exem-plifies this approach.1 IntroductionSecond position (2P) clitics are ubiquitous in theworld?s languages, found in genetically and typo-logically diverse languages (e.g.
Serbo-Croatian,Warlpiri, O?odham) from all documented periods(e.g.
Hittite, spoken ca.
1600?1300 BC).
Theypresent a persistent challenge for syntactic anal-ysis, inducing a peculiar form of crossing depen-dency which is not easily expressed in any stan-dard restrictive grammar framework.2P clitics are emblematic of a wider class ofproblematic phenomena which existing frame-works can address by incorporating a notion ofprosodic constituency.
The transductive perspec-tive on mildly context-sensitive grammar for-malisms, which treats them as monadic second-order transductions of regular tree languages,suggests how this can be done: by transduc-ing prosodic constituency from syntactic phrasestructure.The prosodic conditioning of 2P clisis is partic-ularly salient in Sahidic Coptic (Reintges, 2004).11?Coptic?
refers to the latest form of the Egyptian lan-A context-free phrase structure grammar ex-tended by a monadic second-order transductionis able to make use of the phonological structurenecessary to give a linguistically plausible analy-sis to a fragment of Coptic clitic syntax.2 Second position clitics and prosodicconstituency2.1 Second positionAn intuitive account of the syntax of 2P clitics2has been known since Wackernagel (1892).
The2P clitic, which is an immediate functional de-pendent of a clause, e.g.
a sentential adverb, dis-course particle, pronominal argument, etc., ap-pears after the first word of that clause, poten-tially interrupting whatever constituent containsthat word as its leftmost member, as the chainof 2P clitics interrupts the NP in the followingSerbo-Croatian sentence.3(1) [Tajthat=joj=ga=je=her=it=AUXc?ovek]NPmanpoklonio.presented?That man presented her with it.?
(Bo?gel etal., 2010)guage.
Sahidic Coptic, the major literary dialect of Copticfrom the 4th to the 10th centuries AD, is survived by a richcorpus of Greek-alphabet texts.
The only extant computa-tional model of Sahidic Coptic grammar is apparently thatof Orlandi (2004).
This work is unfortunately not availableto the author, and so no comparison of approaches has beenpossible.2A ?clitic?
is, descriptively, a word-like element withaffix-like phonological dependence (?clisis?)
on other words.Proclitics and enclitics are dependent on right- and left-adjacent words, respectively, and 2P clitics are a special caseof enclitics.
For more on clitics, see Zwicky (1977), Aikhen-vald (2003), and Anderson (2005).3Clitic boundaries are marked with an equals sign, afterthe Leipzig glossing conventions.31This constituency-breaking word order patternalone poses a descriptive challenge.
The difficultyis exacerbated by the fact that the ?word?
targetedby the 2P clitic is not in general syntactically char-acterizable.
It is rather a phonological constituentthat may include incorporated clitics (Inkelas andZec, 1990; Zec, 2005).
The alternation in the po-sition of the 2P clitic de in the Coptic sentences(2) and (3) illustrates this well.
(2) a=t=ef=soneAUX.PF=the=3SG=sister=de=andolgatheren=n=ef=keesACC=the=3SG=bones?and his sister gathered his bones?
(Mena,Martyrd.
4a:1-2)(3) a=w=tamioAUX.PF=3PL=make=de=anden=u=taiveACC=a=coffin?and they made a coffin?
(Mena, Martyrd.5a:27-28)In both sentences, de functions as a clausal con-junction.
But its position varies, appearing be-tween the main verb and its subject in (2) and be-tween the verb and its object in (3).
This alterna-tion is most plausibly phonological.
The 2P cliticappears after the first independently pronounce-able word, including its attached clitics, such asthe pronominal subject w- in (3) and the tenseauxiliary a- in both sentences.
The behavior of2P clitics when the verb itself or its direct objectare clitics is consistent with this analysis.Phonological properties alone, however, do notsuffice to describe the syntax of 2P clitics.
Theyare constrained to appear within a syntacticallydetermined subpart of their host clause, typicallyignoring topicalized or otherwise left-dislocatedelements and thus appearing quite far from strictphonological second position.
Describing 2P cli-sis thus requires reference to both syntactic andphonological structure.2.2 Prosodic constituency via treetransductionThe notion of prosodic constituency (Nespor andVogel, 1986; Selkirk, 1986) provides the keyto a perspicuous account of the multiple factorsat play in the grammar of 2P clitics.
Prosodicconstituency is a tree structure that defines the?words?
and ?phrases?
relevant to phonology,C?SWordClitic 7?CS?CliticWordFigure 1: Lowering 2P clitics.which are in general distinct from yet closely re-lated to their syntactic equivalents.Both the distinctness of and the relationship be-tween syntactic and prosodic constituency can becaptured by transducing the latter from the for-mer.
This transduction in effect interprets syn-tactic trees as terms over a signature of phono-logical operations and normalizes the result.
Theyield function is a prosodically naive example ofsuch a transduction.Once this independently necessary transduc-tion has been taken into account, the syntax of2P clitics is straightforward.
The 2P clitic sim-ply has a non-concatenative mode of phonologi-cal combination.
The clitic and its host clause aresiblings in syntactic constituency, and their parentnode is interpreted as an operation that wraps thelatter around the former?alternatively, lowers theformer into the latter.This analysis, which captures in essence boththe ?wrapping?
(Bach, 1987) and ?prosodic inver-sion?
(Halpern, 1995) analyses of 2P clitics, canbe schematized as in Figure 1, where ?Word?
isconstrained to be the leftmost node with that labelin S.This transduction is not direction-preserving inthe sense of Bloem and Engelfriet (2000): as-suming that the clitic crosses unboundedly manynodes on the way to its host word, a crossing de-pendency is induced in the paths of the target tree.This rules out the possibility of formalizing thisanalysis by means of popular automaton modelssuch as multi bottom-up tree transducers (Fu?lo?pet al, 2004) or their extended variant (Engelfrietet al, 2009), which cannot describe such depen-32dencies (Maletti, 2011).The more powerful automata that can be spec-ified using monadic second-order logic (MSO),which include syntactically restricted classes ofmacro tree transducers (Engelfriet and Maneth,1999) and deterministic tree-walking transducers(Bloem and Engelfriet, 2000), can perform thistransduction.
Section 3 defines the transduction inMSO, and Section 4 reflects briefly on its imple-mentation.3 Sahidic Coptic 2P clitics viaCFG+MSTThe following context-free grammar and se-quence of MSO transductions formalizes, for afragment of Sahidic Coptic, the analysis of 2P cli-sis sketched in Section 2.2.Section 3 breaks the interpretation of a syntac-tic parse tree as a phonological term into a series(f1?f7) of simple composed MSO transductions.A ?redex?
phonological term is derived (Section3.3), and its reducible subterms are then evaluatedseparately (Section 3.4).
An algorithmic imple-mentation of the transduction is sketched in Sec-tion 3.5.3.1 Formal preliminariesThe following definitions and assertions rehearsematerial from Courcelle and Engelfriet (2012),which should be consulted for full details.3.1.1 Relational structures and tree graphsA relational signature is a finite set R of rela-tion symbols with associated arity ?
(r) ?
N?
foreach r ?
R. A relational structure over R is atuple R = ?DR , (rR)r?R?, where DR is a finitedomain of entities and rR , for each r ?
R, is a?
(r)-ary relation on DR .A bijection exists between binary relationalstructures and labelled graphs, with unary and bi-nary relations corresponding to node and edge la-bels, respectively.
Ordered binary trees can berepresented as labelled directed graphs, and henceas relational structures, in the obvious way.3.1.2 Monadic second-order logicThe monadic second-order (MSO) formulasover a relational signature R are as first-orderpredicate logic, with the addition of monadicsecond-order variables X,Y,X ?, .
.
.
denotingsets of entities, second-order quantification, anda primitive operator for set membership.
The sub-stitution of n free variables in a formula ?
by en-tities d1, .
.
.
, dn is written ?
(d1, .
.
.
, dn).An MSO formula over R is interpreted in a re-lational signature over R. A formula with no freevariables is called a sentence.
If a sentence ?
istrue in a relational structure R, we write R |= ?,pronounced ?R models ?
?.3.1.3 MSO transductionAn MSO transduction defines a relationalstructure in terms of another by taking a finitenumber of copies of nodes from the source do-main, keeping those that satisfy particular formu-las in the source structure, and defining the rela-tions that hold in the target structure by means offormulas modeled by the source structure.
Thegeneralization of MSO transduction to k-copyingMSO transduction (Courcelle, 1991) allows thetarget domain to be larger than its source.
MSOtransductions whose formulas do not refer to pa-rameters define deterministic functions.A (parameterless, k-copying) MSO transduc-tion over a relational signature R is specified by atriple ?k,?,?
?, where k ?
N and ?
= {?i | 0 ?i ?
k} and ?
= {?w | w ?
W} are sets of MSOformulas with free variables, and W is the set ofall tuples (r, i1, .
.
.
, i?
(r)) for r ?
R. This tripleis called a definition scheme.A definition scheme specifies a target relationalstructure T with respect to a source relationalstructure S as follows.
The domain DT of T isthe set (D0 ?
{0}) ?
.
.
.
?
(Dk ?
{k}), whereeach Di = {d ?
DS | S |= ?i(d)}.
For each n-ary relation r in the relational signature of T , ann-ary relation on DT is defined as:?i0,...,in?
[k]{((d0, i0), .
.
.
, (dn, in)) |d0 ?
Di0 , .
.
.
, dn ?
Din ,S |= ?r,i0,...,in(d0, .
.
.
, dn)}Intuitively, a formula ?i specifies conditions onthe existence of the ith copy of a node in the targetstructure.
A formula ?(r,i0,...,j?
(r)) specifies condi-tions on the relation r holding between copies ofnodes indexed i, .
.
.
, j in the target structure.3.2 Definitions and abbreviations3.2.1 Base CFGThe phrase structure grammar which serves asthe basis of the analysis of Coptic is presented in33S?
Cl S?
NPpro?
ProS?
?
Aux VP NPN ?
Detsgfem N?sgfemVP?
NPN V?
NPN ?
Detindef NsgfemVP?
NPpro V?
NPN ?
Detpl N?plV?
?
V AccP N?sgfem ?
NPpro NsgfemCl?
de N?pl ?
NPpro NplAux?
a AccP?
AccN NPNV ?
ol | tamio AccP?
Accpro NPproNsgfem ?
sone | taive Detsgfem ?
tNpl ?
kees Detpl ?
nAccN ?
en Detindef ?
uAccpro?
mmo Pro?
w | efFigure 2: Base CFG fragment of Coptic.Figure 2.
Its parse trees define a recognizable lan-guage of binary trees, members of which can berepresented as relational structures, as explainedin Section 3.1.1.
This CFG fragment, in combi-nation with the transductions detailed below, suf-fices to generate sentences (2) and (3) from Sec-tion 2.1.This grammar encodes several claims, alreadyalluded to in Section 2.1, about the syntacticstructure of Coptic.
Syntactic dependencies arerepresented by constituency in the usual way.
Theimmediate dependence of the 2P clitic de on ahost clause is expressed by the siblinghood of Cland S?
under S.Features of lexical items relevant for agree-ment and allomorphy are encoded as diacritics onnonterminals, allowing determiners to agree withnouns in gender and the accusative case prepo-sition to covary with the nominal or pronominalstatus of its complement.3.2.2 Encoding of nodes with unboundedbranchingSyntactic trees are interpreted into prosodictrees, which may contain prosodic word con-stituents that branch unboundedly wide.
To fixa binary encoding for such constituents, a ?conscell?-like variant of the extension operator encod-ing (Comon et al, 2007, p. 210) is adopted, inwhich a term of the form @(x, y) is interpreted asextending the interpretation of y by adding x toits root as its leftmost child.
An example of thisencoding is given in Figure 3.Only the fragment of prosodic constituency rel-evant to the alternation shown in sentences (2)??3?2?1'@@@?
?3?2?1Figure 3: Encoding of n-ary trees._ concatenation?p proclisis?e enclisis?2p 2P clisis?id identity?
prosodic word@ extension operatorTable 1: Interpretation of labels.and (3) is derived.
The output tree thereforecontains operator-encoded prosodic constituentsas subtrees of unencoded trees containing unan-alyzed phonological combination operators.3.2.3 Relational signature and abbreviationsAll MSO transductions presented below are de-fined over a binary relational signature R = R1 ?R2.
The set of node labels R1 is given by theunion of the set of all non-terminal and terminalnode names in the grammar of Figure 2 and theset {_, ?p, ?e, ?2p, ?id, ?,@}.
The interpretationof these predicates is given in Table 1.
The set ofbinary predicates R2 is simply {0,1}, the leftand right child relations, written as infix operatorsas a notational convenience.It will be useful to define several new binarypredicates as syntactic abbreviations.
I assume re-flexive and irreflexive transitive closures r?
andr+ of relations r ?
R2, as well as immediatedomination and precedence ,?, as abbrevia-tions of MSO formulas over primitive predicates.4Recurring structural properties of lexical itemsin the base CFG are given by the unary syntacticabbreviations defined below.5 These include pro-4On the MSO-definability of these, see Courcelle and En-gelfriet (2012).5??
:= ??
is to be read ??
is an abbreviation for ?
?.34clitic and 2P clitic status (Pc(x), 2P(x)), indepen-dent pronounceability (Str(x)), and the propertyof being a leaf (Leaf(x)).Pc(x) := a(x) ?
en(x) ?
t(x) ?
n(x)2P(x) := de(x)Str(x) := ol(x) ?
sone(x)?
kees(x) ?mmo(x)Leaf(x) := de(x) ?
a(x) ?
.
.
.MSO transductions are given by transductionschemes, as defined in Section 3.1.3.
In the casethat k = 0, irrelevant subscripts are omitted.
Un-less otherwise specified, all formulas ?i can be as-sumed to be the constant True.3.3 Transducing a reducible termA syntactic constituency tree can be interpretedas a term in a phonological algebra, with non-leafnodes interpreted as operations effecting phono-logical combination in various modes.
Pro-nounceable utterances, which consist of concate-nations of prosodic constituents (i.e.
terms overleaves from the base CFG, @, ?, and _), are nor-mal forms.This complex interpretation is broken intosmaller transductions, the first set of which laysthe foundation for the reduction of the ?clitic?modes of combination.
Non-leaf nodes are firstreplaced by appropriate combination operators(Section 3.3.1).
Unary nodes are then eliminated(Section 3.3.2).
Finally, the prosodic structurenecessary for the next phase of interpretation isgenerated (Section 3.3.3).3.3.1 RelabelingNon-terminal leaves in the syntactic tree are re-placed by operators indicating modes of phono-logical combination, as presented in Table 1.The transduction to unreduced phonologicalterms is sensitive to the structure of the syntac-tic tree.
Some leaves, e.g.
clitic pronouns, are notstrictly proclitic or enclitic but vary by context:the pronominal subject of a verb or possessor ofa noun is proclitic, whereas the pronominal com-plement of an accusative preposition or pronoun-selecting verb is enclitic.
The relevant syntacticcontext is the child status of NPpro nodes.
Hencethe parent of an NPpro node is replaced by ?p ifNPpro is its left child, by ?e if NPpro its rightchild.All non-pronominal clitics are phonologicallycombined with the sibling of their phonologicallyvacuous unary parent node.
Thus the grandpar-ents of all such clitic leaves are replaced by the ap-propriate clitic combination operator, ?p for pro-clitics and ?2p for 2P clitics.
Unary nodes are re-placed by ?id, and all other non-leaf nodes are re-placed by_.
Leaf node labels are left unchanged.The definition scheme f1 = ?0,?,?
?, where?
is defined as the union of the formulas given be-low, specifies this transduction.
The body of the?_ formula, which consists largely of the disjunc-tion of the negations of the preceding formulas, isomitted, as signaled by [etc]; and the ?w formulawhich reasserts leaf labels is omitted altogether.?
?e(x) = ?x?(NPpro(x?)
?
x1 x?)?
?p(x) = ?x?(NPpro(x?)
?
x0 x?)?
?x?, x??
(x0 x?
?
x?
0 x??
?
Pc(x??))?
?2p(x) = ?x?, x??
(x0 x?
?
x?
0 x??
?
2P (x??))?
?id(x) = ?x?
(x0 x?)
?
??x??
(x1 x??
)?_(x) = [etc]3.3.2 Eliminating unary nodesBefore any further interpretation takes place,unary ?id nodes, which are phonologically vac-uous, can be eliminated.The definition scheme f2 = ?0,?,?
?, with ?defined as the union of the following formulas (fori ?
{0, 1}), eliminates unary nodes by connectinga non-?id node dominated by a path of ?id nodesto the parent of the topmost ?id in the path.
Again,[etc] stands for the omitted ?elsewhere condition?,which here reasserts edges from the source.
?i(x, y) = ?
?id (x) ?
?
?id (y)?
?x?
(xi x?
?
x?
+ y?
?y?(x?
?
y?
?
y?
+ y?
?id(y?)))
?
[etc]An example of the composed transduction f2 ?f1 is given in Figure 4.3.3.3 Base prosodic wordsBefore reducing the remaining reducible modesof combination, it is necessary to create prosodicword constituents, notated ?, that cover the in-dependently pronounceable ?strong?
leaves of thetree, allowing the word-sensitive clitic modes ofcombination to be interpreted correctly.
Prosodic35VPV?AccPNPproProwAccprommoVolNPproProw7?
?p_?ewmmoolwFigure 4: Relabeling and ?id-elimination.words are encoded by the scheme given in Sec-tion 3.2.The definition scheme f3 = ?2,?,?
?, with ?and ?
the union of the ?
and ?
formulas below,specifies a transduction that takes two additionalcopies of all nodes, relabels the copies of strongleaf nodes as @ and ?, and draws edges as appro-priate.
?1(x) = ?2(x) =?
(@,1)(x) = ?
(?,2)(x) = Str(x)?
(1,0,0)(x, y) = ?Str(y) ?
x1 y?
(1,0,1)(x, y) = Str(y) ?
x1 y?
(0,1,0)(x, y) =?
(1,1,2)(x, y) = Str(x) ?
x = y?
(0,0,0)(x, y) = TrueAn example of the tree transduction given byf3 is shown in Figure 5, with identity of copiesindicated by subscript letters and the number ofthe copy by superscript numerals.3.4 Interpreting clitic combination modesThe composed transduction f3 ?
f2 ?
f1 pro-duces reducible phonological terms in which theprosodic structure necessary to interpret the cliticmodes of combination (?p, ?e, and ?2p) is present.The interpretation of the clitic modes proceedsin three steps.
?Local?
clitics, siblings of prosodicwords, are amalgamated into their hosts (Section3.4.1).
?Long-distance?
clitics, which are not?p?psone?eft 7??p?p@1?
?2?sone0?eftFigure 5: Prosodic word insertion.thus locally attached, are lowered to their hosts(Section 3.4.2) and then attached as local clitics.Second-position clitics are finally lowered and at-tached by the same means, as a special case (Sec-tion 3.4.3).3.4.1 Local clisisLocally connected clitics can be directly in-corporated into their hosts.
The word con-stituent so derived is the recursive structure (e.g.
[?clitic [?host]]) generally assumed for cliticizedwords (cf.
Inkelas and Zec, 1990; Zec, 2005).Proclitics and enclitics can be interpreted sepa-rately.
For proclitics, the relevant notion of ?local-ity?
can be expressed by a predicate ?p(x), whichidentifies ?p nodes connected to @ nodes by a pathof ?p nodes.
?p(x) := ?p (x) ?
?y(@(y)?
x+1 y ?
?z(x?
z?
z + y ?
?p(x)))The 2-copying MS transduction specified bythe definition scheme f4 = ?2,?,?
?, with ?and ?
given by the union of the ?
and ?
formu-las below, produces the appropriate bracketing byprojecting a new word above each proclitic andrelocating each proclitic?s sibling to the new wordconstituent.
?1(x) = ?2(x) = ?
(@,0)(x) =?
(@,1)(x) = ?
(?,2)(x) = ?p (x)?
(1,0,1)(x, y) = ?
(1,1,2)(x, y) = ?p (x) ?
x = y?
(0,1,0)(x, y) = ?p (x) ?
x1 y?
(0,0,0)(x, y) = ?
(1,0,0)(x, y) = [etc]36?p??p?
@?soneeft 7?@0?@1??2?@0?@1??2?
@?soneeftFigure 6: Local proclisis.Figure 6 gives an example of a tree transfor-mation effected by f4, again with subscripts andsuperscripts indicating copies.The interpretation of local enclitics proceedssimilarly.
A predicate ?e(x) defines the relevantnotion of locality.
?e(x) := ?e (x) ?
?y(@(y)?
x+0 y ?
?z(x?
z?
z + y ?
?e(x)))The transduction f5 = ?2,?,?
?, with ?
and?
given by the union of the ?
and ?
formulas be-low, produces the appropriate bracketing.
Thistransduction is more complicated than the pro-clitic transformation in that enclitics, right chil-dren in the source tree, must be relocated to leftbranches of @ nodes.
?1(x) = ?2(x) =?
(@,0)(x) = ?
(@,1)(x) =?
(?,2)(x) = ?e (x)?
(0,1,0)(x, y) = ?e (x) ?
x0 y?
(1,1,0)(x, y) =?
(1,0,2)(x, y) = ?e (x) ?
x = y?
(0,0,0)(x, y) = ?e (x) ?
x1 y ?
[etc]?
(1,0,0)(x, y) = [etc]Figure 7 gives an example of the tree transduc-tion specified by f5.?e?w@?mmo7?@1?@0?
?2?w@?mmoFigure 7: Local enclisis.3.4.2 Long-distance proclisisLong-distance clitics, which are not locallycombined with their hosts, incorporate into themin the same manner as local clitics (i.e.
by trans-ductions f4 and f5) but must be lowered to themto do so.Only long-distance proclisis is relevant to thegrammar fragment under consideration.
A long-distance proclitic is a non-local proclitic (see Sec-tion 3.4.1 for the notion of ?locality?)
adjacentto a word in the yield, ignoring other proclitics.Pronouns count as proclitics for this purpose, soa predicate Pc?
(x) including pronouns is defined.The predicate Adj(x, y) expresses adjacency of xand y, and the predicate Lp(x), which identifiesthe parents of long-distance proclitics, is definedin terms of Adj(x, y).Pc?
(x) := Pc(x) ?
w(x) ?
ef(x)Adj(x, y) := x ?
y ?
?x?
(x ?
x??
x?
?
y ?
Leaf(x?)?
Pc?(x?
))Lp(x) := ?p (x) ?
?x?, y(@(y)?
x0 x?
?Adj(x?, y))The parents of long-distance proclitics get at-tached to ?goal?
nodes?that is, @ nodes or otherparents of long-distance proclitics?by the rightchild relation.
The predicate G(x) identifiesgoals, and NG(x, y) identifies node x?s nearestgoal y.G(x) := ?p (x) ?
@(x)NG(x, y) := x+ y ?
G(y) ?
?y?
(x+ y??
G(y?)?
y ?
y?
)The parent of the topmost in a path of ?p nodesmust get attached, by whatever child relation con-37nects that parent node to that path, to the rightchild of the lowest node in the path.
The higher-order syntactic abbreviation PC[i;x, y] specifiesthe relevant relation, whereby a path of ?p nodesbegins with the ith child of x and leads to y.PC[i;x, y] := ?
?p (x) ?
?
?p (y)?
?x?(?p(x?)
?
xi x??
x?
+1 y ?
?y?(x?
?
y??
y?
+1 y ?
?p(y?
)))The parent of a @ node targeted by a set oflong-distance clitics gets attached to the highestparent of a clitic in that set.
The predicate Hip(x)identifies such highest proclitic parents.
Only?maximal?
@ nodes, those that are highest in theright-recursive path of @ nodes leading to an ?,are relevant; these are identified by the predicateMax@p(x).
The abbreviation WC[i;x, y] identi-fies a highest ?p node y adjacent to a maximal @node that is the ith child of x.Hip(x) := Lp(x) ?
?x?
(x0 x??
?y(y ?
x?
?
?Pc?
(y)))Max@p(x) := @(x) ?
?
?y(y 1 x ?@(y))?
?z(x+1 z ?
?
(z))WC[i;x, y] := ?x?, y?(Max@p(x?)?
xi x?
?
y 0 y?
?Adj(y?, x?)
?
Hip(y))Once these auxiliary predicates are defined, asimple MSO transduction f6 = ?0,?,?
?meetingthe specifications given above can be defined bythe union of the following formulas.
?1(x, y) = ?p (x) ?
NG(x, y)?
PC[1;x, y] ?WC[1;x, y] ?
[etc]?0(x, y) = PC[0;x, y] ?WC[0;x, y] ?
[etc]Figure 8 gives an example of the transductionspecified by f6.
The transduction f4 can be com-posed with f6 to produce the appropriate con-stituency for the lowered proclitics.3.4.3 Second-position clisisThere is little substantive difference betweenlong-distance proclitics and 2P clitics?both ar-rive in their position by a ?lowering?
transfor-mation that targets @ nodes.
The transductions?2p?p??p?_?.
.
.@?tamiowade7??2p_?.
.
.?p??p?
@?tamiowadeFigure 8: Long-distance proclisis, part 1: lowering.already defined can be recycled, essentially un-changed, to derive 2P clisis.Assume a lowering transduction f ?6 identical tof6 except operating on ?2p nodes.
The resultinglowered 2P clitics, which are in a ?proclitic?
con-figuration, can then be ?rotated?
and relabeled asenclitics.
The MSO transduction f7 = ?0,?,?
?given by the union of the following formulas pro-duces this transformation.?
?e(x) = ?2p (x)?0(x, y) = ?
?2p (x) ?
x0 y?
?2p(x) ?
x1 y?1(x, y) = ?
?2p (x) ?
x1 y?
?2p(x) ?
x0 yThe local enclisis transduction f5 is then ap-plied to incorporate the 2P clitics into their hosts.An example transformation effected by the trans-duction f5 ?
f7 ?
f ?6 is shown in Figure 3.4.3.3.5 Algorithmic implementationNo automaton compiler for MSO transductionsexists, and the non-elementary complexity of theMSO-to-automaton translation procedure ensuresthat the development of a practical compiler willbe a difficult undertaking.
The most convenientalgorithmic implementation of the above analy-sis is therefore an indirect one: an extension-ally equivalent algorithm constructed in an ex-pressively equivalent transduction framework.38?2p?_?.
.
.?a=w=tamiode7?_?.
.
.@1?@0?
?2?de?a=w=tamioFigure 9: Second position clisis.Second-order Abstract Categorial Grammar(Kanazawa, 2009b) is one such framework,equivalent to MSO in tree-transforming power(Kanazawa, 2009a).
ACG tree transductions,which are expressed as linear ?-term homo-morphisms and thus have the same complexityas linear ?-term normalization, can be imple-mented in Haskell in the manner of Kiselyov andShan (2010).
A function extensionally equivalentto that defined logically above can be defined ina simple ACG consisting of a composed pair ofhomomorphisms and implemented in Haskell in apair of type classes.4 Discussion and conclusionThe analysis of Sahidic Coptic 2P clitics in termsof prosodic constituency and tree transformationgiven above successfully accounts for the alterna-tion shown in sentences (2) and (3).
It promises toscale to a larger fragment of Coptic grammar, ac-commodating the addition of clitic main verbs anddirect objects without further ado.
The general ap-proach also promises to extend straightforwardlyto other languages with 2P clitics, such as Russianand Hittite.
Since the general technique of MSOtransduction underlying the analysis applies to alltree-deriving grammar formalisms, richer gram-matical backbones than CFG can be deployed asnecessary.This transductive analysis is in line with anascent convergence in perspectives on restrictiveformal syntax.
The mildly context-sensitive lan-guages, polynomially parseable languages con-taining limited cross-serial dependencies such asthose induced by 2P clitics, have received anew logical characterization in light of the pastdecade?s surge of interest in disentangling deriva-tions from their interpretations.6 Mildly context-sensitive languages are the images of recogniz-able tree languages under monadic second-ordertransductions.7 This generalizes not only string-generating formalisms like linear context-freerewriting systems (Vijay-Shanker et al, 1987;Weir, 1992) but also context-free languages ofgraphs (Engelfriet and Maneth, 2000) and linear?-terms (Kanazawa, 2009a; Kanazawa, 2010).8This perspective suggests a modular approachto framework revision in the face of problematicnatural language phenomena.
Transductive inter-pretations are an integral, if not universally recog-nized, component of restrictive grammar frame-works.
Hence, to meet new descriptive challengessuch as those posed by 2P clitics, it is naturalto extend those frameworks?
interpretive compo-nents by means of MSO rather than rebuildingthem from scratch.No software toolkit for MSO transduction com-parable to the XFST toolkit for regular ex-pressions (Beesley and Karttunen, 2003) or theMONA toolkit for MSO (Henriksen et al, 1995)presently exists, however.
Nevertheless, MSO isan excellent candidate for a high-level specifica-tion language for tree transformations, promisingto play the same role for tree transduction that lan-guages such as XFST play for string transduction.MSO meanwhile serves the useful purpose of pro-viding a denotational check on the complexity oftree transformation algorithms.AcknowledgmentsMany thanks to John Hale, Sarah Murray,Michael Weiss, and three anonymous reviewersfor their valuable comments.
Thanks also toChung-chieh Shan, Chris Barker, Greg Kobele,Makoto Kanazawa, and Zolta?n Varju?
for theirconversation and inspiration.
This research wassupported by the Social Sciences and HumanitiesResearch Council.6See for instance Michaelis et al (2000), de Groote(2001), Ranta (2002), Morawietz (2003), Muskens (2003),and Pollard (2008), among many others.7See Kolb et al (2003) for an application of this perspec-tive to the purely syntactic crossing dependencies of Dutchand Swiss German noted by a reviewer.8Closely related perspectives can be found in the frame-works of second-order Abstract Categorial Grammar andKoller & Kuhlmann (2011)?s ?interpreted regular tree gram-mar?
paradigm.39ReferencesAlexandra Y. Aikhenvald.
2003.
Typological parame-ters for the study of clitics, with special reference toTariana.
In Robert M. W. Dixon and Alexandra Y.Aikhenvald, editors, Word: a Cross-Linguistic Ty-pology, pages 42?78.
Cambridge University Press,Cambridge.Stephen R. Anderson.
2005.
Aspects of the Theory ofClitics.
Oxford University Press, Oxford.Emmon Bach.
1987.
Some generalizations of cat-egorial grammars.
In Walter J. Savitch, EmmonBach, William Marsh, and Gila Safran-Naveh, ed-itors, The Formal Complexity of Natural Language,pages 251?279.
D. Reidel, Dordrecht.Kenneth R. Beesley and Lauri Karttunen.
2003.
FiniteState Morphology.
CSLI Publications, Stanford.Roderick Bloem and Joost Engelfriet.
2000.
A com-parison of tree transductions defined by monadicsecond order logic and by attribute grammars.
Jour-nal of Computer and System Sciences, 6(1):1?50.Tina Bo?gel, Miriam Butt, Ronald M. Kaplan,Tracy Holloway King, and John T. Maxwell.
2010.Second position and the prosody-syntax interface.In Miriam Butt and Tracy Holloway King, editors,Proceedings of the LFG10 Conference, pages 107?126.Hubert Comon, Max Dauchet, Remi Gilleron, ChristofLo?ding, Florent Jacquemard, Denis Lugiez, So-phie Tison, and Marc Tommasi.
2007.
Tree au-tomata techniques and applications.
Available at:http://www.grappa.univ-lille3.fr/tata.Bruno Courcelle and Joost Engelfriet.
2012.
Graphstructure and monadic second-order logic: a lan-guage theoretic approach.
In press.Bruno Courcelle.
1991.
The monadic second-orderlogic of graphs V: on closing the gap between defin-ability and recognizability.
Theoretical ComputerScience, 80:153?202.Philippe de Groote.
2001.
Towards abstract categorialgrammars.
In Association for Computational Lin-guistics, 39th Annual Meeting, pages 148?155.Joost Engelfriet and Sebastian Maneth.
1999.
Macrotree transducers, attribute grammars, and MSO de-finable tree translations.
Information and Computa-tion, 154:34?91.Joost Engelfriet and Sebastian Maneth.
2000.
Treelanguages generated by context-free graph gram-mars.
In Hartmut Ehrig, editor, Graph Transforma-tion, pages 15?29, Berlin and Heidelberg.
SpringerVerlag.Joost Engelfriet, Eric Lilin, and Andreas Maletti.2009.
Extended multi bottom-up tree transducers:Composition and decomposition.
Acta Informatica,46:561?590.Zolta?n Fu?lo?p, Armin Ku?hnemann, and Heiko Vogler.2004.
A bottom-up characterization of determin-istic top-down tree transducers with regular look-ahead.
Information Processing Letters, 91:57?67.Aaron Halpern.
1995.
On the Placement and Mor-phology of Clitics.
CSLI Publications, Stanford.Jesper G. Henriksen, Jakob Jensen, MichaelJ?rgensen, Nils Klarlund, Robert Paige, TheisRauhe, and Anders Sandholm.
1995.
MONA:Monadic second-order logic in practice.
LectureNotes in Computer Science, 1019:89?110.Sharon Inkelas and Draga Zec.
1990.
Prosodi-cally constrained syntax.
In Sharon Inkelas andDraga Zec, editors, The phonology?syntax connec-tion, pages 365?378.
University of Chicago Press,Chicago.Makoto Kanazawa.
2009a.
A lambda calculus char-acterization of MSO definable tree transductions.Talk given at the 10th Asian Logic Conference.Makoto Kanazawa.
2009b.
Second-order abstract cat-egorial grammars.
Manuscript.Makoto Kanazawa.
2010.
Second-order abstract cat-egorial grammars as hyperedge replacement gram-mars.
Journal of Language, Logic, and Informa-tion, 19(2):137?161.Oleg Kiselyov and Chung-chieh Shan.
2010.Lambda: the ultimate syntax-semantics interface.NASSLLI 2010 course notes.Hans-Peter Kolb, Jens Michaelis, Uwe Mo?nnich, andFrank Morawietz.
2003.
An operational and deno-tational approach to non-context-freeness.
Theoret-ical Computer Science, 293:261?289.Alexander Koller and Marco Kuhlmann.
2011.
A gen-eralized view on parsing and translation.
In Pro-ceedings of the 12th International Conference onParsing Technologies, pages 2?11.Andreas Maletti.
2011.
Tree transformations and de-pendencies.
Lecture Notes in Computer Science,6878:1?20.Jens Michaelis, Uwe Mo?nnich, and Frank Morawietz.2000.
Derivational minimalism in two regular andlogical steps.
In Proceedings of TAG+ 5.Frank Morawietz.
2003.
Two-Step Approaches to Nat-ural Language Formalisms.
Mouton de Gruyter,Berlin and New York.Reinhard Muskens.
2003.
Language, lambdas, andlogic.
In Richard T. Oehrle and Geert-Jan Krui-jff, editors, Resource sensitivity in binding andanaphora, pages 23?54.
Kluwer, Dordrecht.Marina Nespor and Irene Vogel.
1986.
ProsodicPhonology.
Foris, Dordrecht.Tito Orlandi.
2004.
Towards a computational gram-mar of Sahidic Coptic.
In Jacques van der Vlietand Mat Immerzeel, editors, Coptic studies on thethreshold of a new millennium, pages 125?130,Leuven.
Peeters.Carl Pollard.
2008.
An introduction to convergentgrammar.
Manuscript.40Aarne Ranta.
2002.
Grammatical Framework.
Jour-nal of Functional Programming, 14:145?189.Chris Reintges.
2004.
Coptic Egyptian (Sahidic Di-alect).
Ru?diger Ko?ppe Verlag, Ko?ln.Elisabeth Selkirk.
1986.
On derived domains in sen-tence phonology.
Phonology Yearbook, 3:371?405.K.
Vijay-Shanker, David J. Weir, and Aravind K. Joshi.1987.
Characterizing structural descriptions pro-duced by various grammatical formalisms.
In Pro-ceedings of the 25th annual meeting on Associationfor Computational Linguistics.Jacob Wackernagel.
1892.
U?ber ein Gesetz derindogermanischen Wortstellung.
IndogermanischeForschungen, 1:333?436.David J. Weir.
1992.
Linear context-free rewritingsystems and deterministic tree-walking transducers.In Proceedings of the 30th annual meeting on Asso-ciation for Computational Linguistics.Draga Zec.
2005.
Prosodic differences among func-tion words.
Phonology, 22:77?112.Arnold M. Zwicky.
1977.
On clitics.
Manuscript.41
