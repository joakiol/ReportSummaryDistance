Aggressive Morphology for Robust Lexical CoverageWill iam A. WoodsSun Microsystems Laborator ies1 Network DriveBur l ington,  MA 01803Wi l l iam.Woods@east .sun.cornAbstractThis paper describes an approach to providing lex-ical information for natural anguage processing inunrestricted domains.
A system of approximately1200 morphological rules is used to extend acore lex-icon of 39,000 words to provide lexical coverage thatexceeds that of a lexicon of 80,000 words or 150,000word forms.
The morphological system is described,and lexical coverage is evaluated for random wordschosen from a previously unanalyzed corpus.1 MotivationMany applications of natural language processinghave a need for a large vocabulary lexicon.
How-ever, no matter how large a lexicon one starts with,most applications will encounter terms that are notcovered.
This paper describes an approach to thelexicon problem that emphasizes recognition of mor-phological structure in unknown words in order toextend a relatively small core lexicon to allow ro-bust natural language processing in unrestricted do-mains.
This technique, which extends functionalityoriginally developed for the Lunar system (Woods etal., 1972), has been most recently applied in a con-ceptual indexing and retrieval system (Woods, 1997;Ambroziak and Woods, 1998; Woods et ai., 2000).The system described here uses a collection ofapproximately 1200 knowledge-based morphologi-cal rules to extend a core lexicon of approximately39,000 words to give coverage that exceeds that of anEnglish lexicon of more than 80,000 base forms (or150,000 base plus inflected forms).
To illustrate theneed for a robust extensible l xicon, a random sam-ple of 100 words from the vocabulary of the million-word Brown corpus (Kucera and Francis, 1967), con-tained 24 words that were not included in a 300,000-word list of English word forms.
This suggests thatapproximately 25% of the words in the Brown cor-pus would not be covered by an independent lexiconof even 300,000 words.In a recent experiment, 54% of approximately34,000 word types (numbers and hyphenated wordsexcluded) from a 3.1-million-word corpus of techni-cal literature would not be covered by our hypothet-ical 300,O00-word lexicon.
Many of these are specialforms (e.g., Nb203 and Ti/tin), and some are ap-parent misspellings (e.g., auniprocessor and sychro-nized), but the following are a sampling of fairly nor-mal words that were not in the 300,O00-word list:busmastercopylinehereabovepreprocessinguniprocessorsunreacted2 Integrated, Preferential, HeuristicMorpho logyThere are a number of systems that have been usedto describe natural language morphology for compu-tational use.
The most popular of these is perhapsthe finite-state Kimmo system (Koskenniemi, 1983).Other approaches are described in (Sproat, 1992).The system described here differs from other systemsin a number of dimensions.
First, it is integratedwith an extensive lexicon, a semantic ontology, anda syntactic analysis ystem, which it both consultsand augments.
For example, subsumption relation-ships in the semantic ontology enable the system todetermine whether a proposed root is a container ora mental attitude, so that cupful is interpreted as aunit of measure (a kind of noun), while hopeful isinterpreted as an adjective.Second, it uses ordered preferential rules that at-tempt to choose a small number of correct analy-ses of a word (usually 1-3) from the many potentialanalyses that might be found.
Finally, it uses rulesthat are heuristic in that they are not guaranteed togive correct analyses, but rather are designed to dealwith various tates of lack of knowledge and to makeplausible inferences in the face of uncertainty.
Thefocus is to use what it knows (or can infer) to de-termine a usable set of part-of-speech lassificationsfor the word and to determine any root-plus-affixor internal compound structure that is apparent.
Ifpossible, it also assigns a semantic ategorization tothe word.
It deals with unknown as well as known218roots, and it indicates relative confidences in its clas-sifications when its rules indicate uncertainty in theresult.The role of the morphological nalysis componentin this system is to construct lexical entries for wordsthat do not already have entries, so that subsequentencounters with the same word will find an alreadyexisting lexical entry.
Thus, morphological nalysishappens only once for each encountered word typethat is not already in the core lexicon.
The resultinglexical entries can be saved in a supplementary lex-icon that is constructed as a side-effect of analyzingtext.
The rules of the morphological analysis sys-tem can ask syntactic and semantic questions aboutpotential base forms.
The system handles prefixes,suffixes, and lexical compounds (e.g., bitmap and re-plybuffer).
It also handles multiword lexical itemsand many special forms, including Roman numer-als, dates, and apparent phone numbers.2.1 Morpho log ica l  rules and the  lexiconThe morphological nalysis system makes use of anumber of different kinds of morphological rules, ap-plied in the following preferential order to words thatare not already in the lexicon:1.
Morph-precheck for special forms2.
Phase one pass with suffix rules (allow only"known" roots in phase one)3.
Prefix rules4.
Lexical compound rules5.
Check of name lists and city lists for words notyet recognized6.
Phase two pass with suffix rules (allow unknownroots and default rules)Generally, the rules are ordered in decreasing or-der of specificity, confidence and likelihood.
Veryspecific tests are applied in Step 1 to identify anddeal with "words" that are not ordinary sequencesof alphabetic haracters.
These include numbers,alphanumeric sequences, and expressions involvingspecial characters.
Falling this, an ordered sequenceof suffix rules is applied in Step 2 in a first pass thatwill allow a match only if the proposed root word is"known."
The same list of rules will be applied laterin a second pass without this known-root conditionif an earlier analysis does not succeed.
This issue of"known" roots is a subtle one that can involve con-sulting external lists of known words as well as wordsalready in the lexicon, and can also consider certainderived forms of known roots to be "known," evenwhen they have not been previously encountered.For example, if.fish is a known word, then fishing isas good as known, so is considered a "known" rootfor this purpose.
In general, suffix rules applied to"known" roots are more reliable than applications ofrules to unknown roots or to words with no identifi-able root.If no phase-one suffix rules apply, prefix rules aretried in Step 3 to see if an interpretation of this wordas a prefix combined with some other "known" wordis possible.
Falling this, a set of lexical compoundrules is tried, in Step 4, to see if the word is inter-pretable as a compound of two or more words, andfailing that, lists of first and last names of peopleand names of cities are checked in Step 5.
All ofsteps 3-5 are considered more reliable if they suc-ceed than the phase-two pass of the suffix rules thatcomes in Step 6.
This ordering allows prefixes andcompounding to be tried before less confident suffixanalyses are attempted, and avoids applying weaksuffix analyses to known names.
Various other waysto order these rules have been tried, but this orderhas been found to be the most effective.2.2 Special  fo rm testsBefore trying pattern-based rules for suffixes, pre-fixes, and lexical compounds, the morphological n-alyzer makes a number of tests for special forms thatrequire idiosyncratic treatment.
These tests includethe following:?
number (including integer, floating, and expo-nential notations, including numbers too largeto be represented internally as numbers in themachine),?
Roman numeral (vii, mcm),?
ordinal (1st, 2nd, twenty-third),?
alphanum (Al203, 79D),?
letter (b, x),?
initial (B.),?
phone number (123-4567),?
hyphenated adjective (all-volunteer),?
ra t io  (s/S, V/R),?
multiword lexical item (snake_in_the_grass),?
special proper nouns (gls@mit.edu, /usr/bin,http://www.sun.com, C+ + )2.3 Pat tern -act ion  rulesSuffix rules in this system are pattern-action rulesthat specify:1. a pattern of characters to match at the end ofthe word to be analyzed,2.
possibly a number of characters to removeand/or a sequence of characters to add to forma root (or base form),3. a sequence of tests and action clauses indicatingpossible interpretations of a word matching thispattern.
'21_q 219These rules are organized into blocks that are typi-cally indexed by a shared final letter, and are appliedin order within a block until a rule is encounteredthat generates one or more interpretations.
At thatpoint, no further rules are tried, and the interpreta-tions generated by that rule are used to construct alexical entry for the analyzed word.The following is an example of a fairly specific,but productive, knowledge-rich morphological suffixrule:((f i s h) (kill 4)(test (plausible-root root))(cat nmsp(is-root-of-cat root '(adj n))eval (progu (mark-dict lex(mark-dict(mark-dict(mark-d ict' -es)))'false-rootroot t t)lex'kindof'fish t t )lex'has-prefixroot t t )l ex'root'fish t t)This rule matches a word that ends in fish andremoves four letters from the end (the fish part) toproduce a root word which it then tests to see if itis a plausible root (e.g., does it at least have a vowelin it?).
If it gets this fax, the rule will constructa category nmsp interpretation (a kind of noun), ifthe condition ( i s - root -o f -cat  root  ' (adj n))  istrue (i.e., if the root is a known adjective or noun).This rule deals with words like hagfish and goatfishand comes before the rules that handle words withish as a suffix, like doltish and oafish.
Incidentally,this rule doesn't apply to oafish because the hypoth-esized root on, which would result from removingfour letters, is not known to be an adjective or noun.When this rule succeeds, it specifies that the wordwill be assigned the category nmsp, a category indi-cating a word that has a mass sense, a singular countsense, and can also be used as a plural (e.g., Goatfishare 1%nny-looking.).
(The category nmsp comes froma collection of 91 syntactic ategories, organized ina hierarchy based on generality, so that, for exam-ple, nm subsumes nmsp.)
The action part of this rulespecifies that (contrary to the usual case) the "root"obtained by removing characters from the end of theword (e.g., goat) is in this case a false root.
The realroot is fish, and the false root (goat) is actually aprefix.
The rule also specifies that the word refersto a kind of fish and that the inflectional paradigmfor this word is -es (thus allowing goatfishes as analternative plural).The rules within a block are ordered in decreasingorder of confidence and specificity.
Thus, rules withconditions that check explicit inflectional paradigmsof known roots are ordered before rules that guessthe inflectional paradigm from the spelling of theroot, and rules with more specific conditions are or-dered before rules with less specific conditions sothat the latter can assume that the former will al-ready have been tested and rejected.
The ruleswithin a block of suffix rules will typically try forinterpretations in roughly the following order:1. inflected form of a known root satisfying anamed inflectional paradigm (paradigmatic)2. inflected form of a known word in right categorywith unknown inflectional paradigm3.
apparent inflected form of a known word ofsome other category4.
apparent inflected form of an unknown word5.
apparent derived form of a known root of theright category6.
apparent derived form of a known root regard-less of category7.
apparent derived form of an unknown root8.
word with apparent syntactic ategory and per-haps suffix, without identifiable root9.
guessed noun (and perhaps verb also, if corevocabulary is not comprehensive)The last rule in this sequence is a default guess-ing rule that depends on a flag that tells it whetherit is running with a core lexicon that is believed tocontain most nonobvious verbs.
If so, then only thenoun part-of-speech is assigned, but with a smallercore lexicon, the guessing rules would also assign aless likely interpretation as a verb, in order to pro-vide a way for unknown verbs to be parsed correctlyin sentences.Prefix rules are similar in structure to suffix rules,except hat the pattern is matched at the beginningof the word, and the rule blocks are indexed by theinitial letter of the word.
Lexical compound ruleshave a slightly different format and are called by aspecialized interpreter that looks for places to dividea word into two pieces of sufficient size.
The pointsof potential decomposition are searched from rightto left, and the first such point that has an interpre-tation is taken, with the following exception: Themorph compound analyzer checks for special caseswhere, for example, the first word is plural and endsin an s, but there is an alternative segmentation iwhich the singular of the first word is followed by a220 220word starting with the s. In such cases, the decom-position using the singular first word is preferredover the one using the plural.
For example, theword minesweeper will be analyzed as mine+sweeperrather than mines+weeper.
This preference heuris-tic is specific to English and might be different forother languages.2.4 Recurs ive  app l icat ion  of  rulesWhen attempting to apply a rule to a word, themorphological analyzer can be applied recursivelyto analyze the hypothesized root.
A simple cachingtechnique is used to control the potential for com-binatoric explosion and to block looping.
This issufficiently effective that the time required for mor-phological analysis is a negligible part of the timerequired for processing large amounts of natural an-guage text.
Protection against looping is especiallyimportant for a kind of morphological rule that de-rives one word from another without either of thembeing a root of the other in the usual sense (e.g., de-riving communist from communism or external frominternal).
Operating in a loop-safe nvironment al-lows rules like these to identify the relationship be-tween a new word and a known word in either di-rection, whichever of the two forms is encounteredfirst.3 Eva luat ionSince analyzing a word is done once per unknownword type and consumes a negligible fraction of theoverall text-processing time, speed of operation isnot considered a factor for evaluation.
The inter-esting dimension of evaluation deals with the cov-erage of the rules and the kinds of errors that aremade.
This was tested by applying the system totwo word lists randomly selected from the Browncorpus and provided to me by Philip Resnik, usingsome sampling tools that he developed.
The first ofthese (the token sample) consists of 100 word tokensselected randomly, without eliminating duplicates,and the second (the type sample) consists of 100distinct word types selected randomly from the vo-cabulary of the Brown corpus.
Prior to a single testrun on each of these samples, neither the lexicon northe morphological rule system had any exposure tothe Brown corpus, nor had either of these word listsbeen looked at by the experimenter.
Consequently,the results are a fair evaluation of the expected per-formance of this system on an unknown domain.3.1 Grad ing  ru le  per fo rmanceSince different syntactic category errors have dif-ferent consequences for parsing text, it is useful tograde the syntactic ategory assignments of the ana-lyzer on an A-B-C-D-F scale according to the sever-ity of any mistakes.
Grades are assigned to a lexicalentry as follows:A if all appropriate syntactic ategories are assignedand no incorrect categories are assignedB if all categories are correct, allowing for catego-rizing an adjective or a name as a noun or anoun as a nameC if an entry has at least one correct category andis correct except for missing a noun category orhaving a single extra categoryD if there is more than one extra category or if thereis a missing category other than one of the abovecases, provided that there is at least one correctcategoryF if there are no correct categoriesBoth A and B grades are considered acceptableassignments for the sake of evaluation, since cate-gory B errors would allow a reasonable parse to befound.
This is because the grammar used for pars-ing sentences and phrases allows a noun to be usedas an adjective modifier and a proper noun to beused in place of a noun.
One parser/grammar thatuses this lexicon also allows any other categoo; to beused as a noun, at the expense of a penalty, so thata C grade will still enable a parse, although with apenalty and a substantial likelihood that other falseparses might score better.
Similarly, a D grade in-creases the likelihood that a false parse might scorebetter.Separately, we measure whether count/mass dis-tinctions are made correctly (for nouns only),and whether roots of derived and inflected formsare identified correctly.
We are interested inthe count/mass distinction because, like the com-mon/proper noun distinction, it affects the gram-maticality and likelihood of a noun phrase interpre-tation for a singular noun in absence of an explicitdeterminer.3.2 Sampl ing  rule per fo rmanceThe morphological nalyzer has been applied to thewords from the two sample word lists that were notalready in its core lexicon.
There were 17 suchwords from the token sample and 72 such wordsfrom the type sample.
Of the 17 unknown token-sample words, 100% were graded B or better (88%A and 12% B); 85% of the roots were identified cor-rectly (all but one); 85% of the count noun senseswere found (all but one); and 100% of the mass nounsenses were found.
Token-sample performance is nota very challenging test for a morphological nalyzerbecause it is biased toward a relatively small numberof frequently occurring word types.
Token-sampleperformance is used to assess the per-token error ratethat one would expect in analyzing large amounts ofrunning text.
In contrast, type-sample performance@@1 221Table 1: Syntactic ate ;ory performance of the analyzer.Category Grade A B C D F B or betterNumber 62 8 1 0 1 70Percent 86% 11% 1.5% 0% 1.5% 97%Table 2: Count/mass distinction performance of the analyzer.Count/mass Good count Extra count Good mass Missing massNumber 39 1 14 1Percent 100% 2.6% 93% 6.7%Table 3: Root identification performance of the analyzer.Detect root Good Wrong Debatable Missing ExtraNumber 57 1 1 0 1Percent 95% 1.7% 1.7% 0 1.7%gives a measure of the expected performance on newwords the analyzer is likely to encounter.For the 72 words in the type sample that are notcovered by the lexicon, Tables 1-3 show the syntacticcategory performance of the analyzer and its abilitiesto make count/mass distinctions and identify roots.Notes on incorrect or debatable analyses:1.
One N (noun) for a probable name (Tonio),counted as B.2.
Two NPR(proper name) for abbreviations;(A. V. may be ADJ, W.B.
is correct), countedas one B and one A.3.
One wrong root when suffix ism was identifiedas root of hooliganism in a hypothesized com-pound hooligan+ism (arguably justifiable as akind of ism, which is known in the lexicon, butcounted as an error anyway).
Reanalyzing thisword after hooligan is a known word gets thecorrect interpretation.4.
One debatable root in the hyphenated phrasereference-points whose root was listed as pointsrather than reference-point.
This is due to abug that caused the hyphenated word rules toincorrectly identify this as a verb, rather thana noun (counted as F for syntax).5.
One extra root for embouchure from embouche(but a correct form of the French root?).6.
One missing category N for bobbles, which wasgiven category V but not N because the corelexicon incorrectly listed bobble only as a verb(counted as C for syntax).
This is corrected byadding the missing category to the lexical entryfor bobble.4 Conclus ionsWe have described an approach to robust lexical cov-erage for unrestricted text applications that makesuse of an aggressive set of morphological rules tosupplement a core lexicon of approximately 39,000words to give lexical coverage that exceeds that of amuch larger lexicon.
This morphological nalyzeris integrated with an extensive lexicon, an ontol-ogy, and a syntactic analysis ystem, which it bothconsults and augments.
It uses ordered preferentialrules that attempt to choose a small number of cor-rect analyses of a word and are designed to deal withvarious states of lack of knowledge.
When appliedto 72 unknown words from a random sample of 100distinct word types from the Brown corpus, its syn-tactic category assignments received a grade of B orbetter (using a grading system explained herein) for97% of the words, and it correctly identified 95%of the root words.
This performance demonstratesthat one can obtain robust lexical coverage for natu-ral language processing applications in unrestricteddomains, using a relatively small core lexicon and anaggressive collection of morphological rules.ReferencesJacek Ambroziak and William A.
Woods.
1998.Natural anguage technology in precision contentretrieval.
In International Conference on NaturalLanguage Processing and Industrial Applications,Moncton, New Brunswick, Canada, August.www.sun.com/research/techrep/1998/abstract-69.html.Kimmo Koskenniemi.
1983.
Two-level model formorphological nalysis.
In Proceedings of the In-ternational Joint Conference on Artificial Intelli-gence, pages 683-685, Los Angelos, CA.
MorganKauffmann.H.
Kucera and W. Francis.
1967.
Computa-tional Analysis of Present-Day American English.Brown University Press.222Richard Sproat.
1992.
Morphology and Computa-tion.
MIT Press, Cambridge, MA.William A.
Woods, Ronald M. Kaplan, and Bon-nie L. Nash-Webber.
1972.
The lunar sciencesnatural anguage information system: Final re-port.
Technical Report BBN Report No.
2378,Bolt Beranek and Newman Inc, Cambridge, MA,June.
(available from NTIS as N72-28984).William A.
Woods, Lawrence A. Bookman, Ann C.Houston, Robert J. Kuhns, Paul A. Martin, andStephen Green.
2000.
Linguistic knowledge canimprove information retrieval.
In (these proceed-ings).William A.
Woods.
1997.
Conceptual indexing:A better way to organize knowledge.
TechnicalReport SMLI TR-97-61, Sun MicrosystemsLaboratories, Mountain View, CA, April.www.sun.com/research/techrep/1997/abstract-61.html.223 223
