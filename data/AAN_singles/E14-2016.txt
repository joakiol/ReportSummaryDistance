Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 61?64,Gothenburg, Sweden, April 26-30 2014.c?2014 Association for Computational LinguisticsDKIE: Open Source Information Extraction for DanishLeon DerczynskiUniversity of Sheffieldleon@dcs.shef.ac.ukCamilla Vilhelmsen FieldUniversity of Southern Denmarkcafie13@student.sdu.dkKenneth S. B?ghAarhus Universityksb@cs.au.dkAbstractDanish is a major Scandinavian languagespoken daily by around six million peo-ple.
However, it lacks a unified, open setof NLP tools.
This demonstration will in-troduce DKIE, an extensible open-sourcetoolkit for processing Danish text.
We im-plement an information extraction archi-tecture for Danish within GATE, includingintegrated third-party tools.
This imple-mentation includes the creation of a sub-stantial set of corpus annotations for data-intensive named entity recognition.
Thefinal application and dataset is made areopenly available, and the part-of-speechtagger and NER model also operate in-dependently or with the Stanford NLPtoolkit.1 IntroductionDanish is primarily spoken in the northern hemi-sphere: in Denmark, on the Faroe islands, and onGreenland.
Having roots in Old Norse, Danishbears similarities to other Scandinavian languages,and shares features with English and German.Previous tools and language resources for Dan-ish have suffered from license restrictions, or fromusing small or non-reusable datasets.
As a result,it is often difficult to use Danish language tech-nologies, if anything is available at all.
In caseswhere quality tools are available, they often havedisparate APIs and input/output formats, makingintegration time-consuming and prone to error.To remedy this, this paper presents an open-source information extraction toolkit for Danish,using the established and flexible GATE text pro-cessing platform (Cunningham et al., 2013).
Tothis end, there are three main goals:Adaptation: The application adapts to collo-quial and formal Danish.Interoperability: DKIE is internally consistentand adopts unified, well-grounded solutions to theproblems of processing Danish.
Where possible,DKIE re-uses existing components, and strives forcompatibility with major text processing architec-tures.Portability: It is preferable for developed com-ponents to be readily movable within the chosenarchitecture, GATE, and without, usable indepen-dently.Openness: The resultant application, and cor-pora and annotations developed in its creation, areas freely-available as possible.The remainder of this paper first discusses con-siderations specific to the language and priorwork, then introduces the information extractionpipeline, followed by an evaluation of the toolsprovided.2 Processing DanishThere are a few representational issues for Danishthat are not solved in a unified fashion across exist-ing technological issues.
DKIE builds upon majorstandards in general linguistic annotation and inDanish to unify these solutions.Danish is written using the Latin alphabet, withthe addition of three vowels: ?, ?
and ?a, whichmay be transliterated as ae, oe and aa respectively.It is similar to English in terms of capitalisationrules and character set.Over time, the orthography of Danish hasshifted.
Among other things, a spelling reformin 1948 removed the capitalisation of nouns, andintroduced the three vowel characters to repre-sent existing vowel digraphs.
There were alsospelling shifts in this reform (e.g.
kj?rlighed tok?rlighed).
In addition, some towns and mu-nicipalities have changed the spelling of theirname.
For example, Denmarks second-largest cityAarhus changed its name to?Arhus with the 194861Figure 1: The ANNIE-based information extraction pipeline for Danishreform, although Aalborg and Aabenraa did not.Later, in 2011, the city reverted from?Arhus toAarhus.
The city?s university retained the Aarhusspelling throughout this period.The effect of these relatively recent changes isthat there exist digitised texts using a variety of or-thographies not only to represent the same sound,as also in English, but also the same actual word.A language processing toolkit for Danish must ex-hibit sensitivity to these variances.In addition, Danish has some word bound-ary considerations.
Compound nouns are com-mon (e.g.
kvindeh?andboldlandsholdet for ?thewomen?s national handball team?
), as are hyphen-ated constructions (fugle-fotografering for ?birdphotography?)
which are often treated as single to-kens.Finally, abbreviations are common in Danish,and its acronyms can be difficult to disambiguatewithout the right context and language resource(e.g.
OB for Odense Boldklub, a football club).3 BackgroundThe state of the art in Danish information extrac-tion is not very interoperable or open compared tothat for e.g.
English.
Previous work, while high-performance, is not available freely (Bick, 2004),or domain-restricted.1This makes results diffi-cult to reproduce (Fokkens et al., 2013), and leadsto sub-optimal interoperability (Lee et al., 2010).Even recent books focusing on the topic are heav-ily licensed and difficult for the average academicto access.
Further, prior tools are often in the formof discrete components, hard to extend or to inte-grate with other systems.Some good corpus resources are available, mostrecently the Copenhagen Dependency Treebank1E.g.
CST?s non-commercial-only anonymisation tool, athttp://cst.dk/online/navnegenkender/(CDT) (Buch-Kromann and Korzen, 2010), whichbuilt on and included previously-released corporafor Danish.
This 200K-token corpus is takenfrom news articles and editorials, and includesdocument structure, tokenisation, lemma, part-of-speech and dependency relation information.The application demonstrated, DKIE, drawsonly on open corpus resources for annotation, andthe annotations over these corpora are releasedopenly.
Further, the application is also made open-source, with each component having similar orbetter performance when compared with the state-of-the-art.4 Information Extraction PipelineThis section details each step in the DKIEpipeline.
A screenshot of the tool is shown in Fig-ure 1.4.1 TokeniserWe adopt the PAROLE tokenisation scheme (Ke-son and Norling-Christensen, 1998).
This makesdifferent decisions from Penn Treebank in somecases, concatenating particular expressions as sin-gle tokens.
For example, the two word phrase i alt?
meaning in total ?
is converted to the single to-ken i alt.
A set list of these group formations isgiven in the Danish PAROLE guidelines.Another key difference is in the treatment ofquoted phrases and hyphenation.
Phrases con-nected in this way are often treated as single to-kens.
For example, the phrase ?Se og h?r?-l?serne (readers of ?See and Hear?, a magazine)is treated as a single token under this scheme.4.2 Part-of-Speech taggerWe use a machine-learning based tag-ger (Toutanova et al., 2003) for Danish part-of-speech labelling.
The original PAROLE62Tagger Token accuracy % Sentence acc.
%DKIE 95.3 49.1TnT 96.2 39.1Table 1: Part-of-speech labelling accuracy inDKIEscheme introduces a set of around 120 tags, manyof which are used only rarely.
The scheme com-prises tags built up of up to nine features.
Thesefeatures are used to describe information suchas case, degree, gender, number, possessivity,reflexivity, mood, tense and so on (Keson andNorling-Christensen, 1998).The PAROLE data includes morphological en-coding in tags.
We separate this data out inour corpus, adding morphological features distinctfrom part-of-speech data.
This data may then beused by later work to train a morphological anal-yser, or by other tools that rely on morphologicalinformation.We combine PAROLE annotations with the re-duced tagset employed by the Danish DependencyTreebank (DDT) (Kromann, 2003).
This has 25tags.
We adapted the tagger to Danish by in-cluding internal automatic mapping of ?, ?
and?a to two-letter diphthongs when both training andlabelling, by adding extra sets of features forhandling words and adjusting our unknown wordthreshold to compensate for the small corpus (asin Derczynski et al.
(2013)), and by specifying theclosed-class tags for this set and language.
Wealso prefer a CRF-based classifier in order to getbetter whole-sequence accuracy, providing greateropportunities for later-stage tools such as depen-dency parsers to accurately process more of thecorpus.Results are given in Table 1, comparing token-and sentence-level accuracy to other work usingthe DDT and the TnT tagger (Brants, 2000).
State-of-the-art performance is achieved, with whole-sentence tagging accuracy comparable to that ofleading English taggers.4.3 GazetteersHigh precision entity recognition can be achievedwith gazetteer-based named entity recognition.This is a low-cost way of quickly getting decentperformance out of existing toolkits.
We includetwo special kinds of gazetteer for Danish.
Firstly,it is important to annotation the names of enti-ties specific to Denmark (e.g.
Danish towns).id expression interpretation-- ---------- --------------3 igaa ADD(DCT,day,-1)13 Num._jul ADD(DATE_MONTH_DAY(DCT, 12, 24),day, TOKEN(0))Figure 2: Example normalisation rules in TIMEN.?DCT?
refers to the document creation time.Secondly, entities outside of Denmark sometimeshave different names specific to the Danish lan-guage (e.g.
Lissabon for Lisboa / Lisbon).As well as a standard strict-matching gazetteer,we include a ?fuzzy?
gazetteer specific to Dan-ish that tolerates vowel orthography variation andthe other changes introduced in the 1948 spellingreform.
For locations, we extracted data fornames of Danish towns from DBpedia and a lo-cal gazetteer, and from Wikipedia the Danish-language versions of the world?s 1 000 most popu-lous cities.
For organisations, we used Wikipediacross-language links to map the international or-ganisations deemed notable in Wikipedia to theirDanish translation and acroynm (e.g.
the UnitedNations is referred to as FN).
The major Danishpolitical parties were also added to this gazetteer.For person names, we build lists of both notablepeople,2and also populated GATE?s first and lastname lists with common choices in Denmark.4.4 Temporal Expression AnnotationWe include temporal annotation for Danish in thispipeline, making DKIE the first temporal anno-tation tool for Danish.
We follow the TimeMLtemporal annotation standard (Pustejovsky et al.,2004), completing just the TIMEX3 part.Danish is interesting in that it permits flexibletemporal anchors outside of reference time (Re-ichenbach, 1947) and the default structure of a cal-endar.
For example, while in English one may usenumbers to express a distance in days (two daysfrom now) or into a month (the second of March),Danish permits these offsets from any agreed time.As a result, it is common to see expressions of theform 2. juledag, which in this case is the secondchristmas day and refers to 26thDecember.For this pipeline, we use finite state transducersto define how Danish timexes may be recognised.We then use the general-purpose TIMEN (Llorenset al., 2012) timex normalisation tool to providecalendar or TIMEX3 values for these expressions.Example rules are shown in Figure 2.2See https://en.wikipedia.org/wiki/List of Danes, minusmusicians due to stage names634.5 Named entitiesIn addition to gazetteers, we present a machinelearning-based approach to entity recognition andclassification in Danish.
We annotated the Copen-hagen Dependency Treebank for person, locationand organisation entities, according to the ACEguidelines (or as close as possible).
This ledto a total of 100 000 extra tokens annotated forNEs in Danish, doubling the previously-availableamount.
We used three annotators, achievinginter-annotator agreement of 0.89 on the first100 000 tokens; annotation is an ongoing effort.The data was used to learn a model tuned toDanish with an existing NER tool (Finkel et al.,2005).
We removed word shape conjunctions fea-tures from the default configuration in an effort toreduced sensitivities introduced by the group nountokenisation issue.
This model, and the StanfordNER tool, were then wrapped as a GATE process-ing resource, contributing general-purpose DanishNER to the toolkit.5 ConclusionWe will demonstrate a modern, interoperable,open-source NLP toolkit for information extrac-tion in Danish.
The released resources are: aGATE pipeline for Danish; tools for temporal ex-pression recognition and normalisation for Dan-ish; part-of-speech and named entity recognitionmodels for Danish, that also work in the StanfordNLP architecture; and named entity corpus an-notations over the Copenhagen Dependency Tree-bank.AcknowledgmentsThis work was supported by EU funding un-der grant FP7-ICT-2013-10-611233, Pheme, andgrant agreement No.
296322, AnnoMarket.
Weare grateful to Anders S?gaard of CopenhagenUniversity for comments on an earlier draft andkind help with gazetteers.
The first author wouldalso like to thank Aarhus University for their kindprovision of research facilities.ReferencesE.
Bick.
2004.
A named entity recognizer for Danish.In Proceedings of LREC.T.
Brants.
2000.
TnT: a statistical part-of-speech tag-ger.
In Proceedings of the sixth conference on Ap-plied natural language processing, pages 224?231.ACL.M.
Buch-Kromann and I. Korzen.
2010.
The unifiedannotation of syntax and discourse in the Copen-hagen Dependency Treebanks.
In Proceedings ofthe Fourth Linguistic Annotation Workshop, pages127?131.
ACL.H.
Cunningham, V. Tablan, A. Roberts, andK.
Bontcheva.
2013.
Getting More Out ofBiomedical Documents with GATE?s Full LifecycleOpen Source Text Analytics.
PLoS computationalbiology, 9(2):e1002854.L.
Derczynski, A. Ritter, S. Clark, and K. Bontcheva.2013.
Twitter Part-of-Speech Tagging for All: Over-coming Sparse and Noisy Data.
In Proceedings ofRecent Advances in Natural Language Processing.Association for Computational Linguistics.J.
R. Finkel, T. Grenager, and C. Manning.
2005.
In-corporating non-local information into informationextraction systems by Gibbs sampling.
In Proceed-ings of the 43rd Annual Meeting on Association forComputational Linguistics, pages 363?370.
ACL.A.
Fokkens, M. van Erp, M. Postma, T. Pedersen,P.
Vossen, and N. Freire.
2013.
Offspring fromreproduction problems: What replication failureteaches us.
In Proceedings of the 51st Annual Meet-ing of the Association for Computational Linguis-tics, pages 1691?1701.
Association for Computa-tional Linguistics.B.
Keson and O. Norling-Christensen.
1998.PAROLE-DK.
The Danish Society for Languageand Literature.M.
T. Kromann.
2003.
The Danish Dependency Tree-bank and the DTAG treebank tool.
In Proceedingsof the Second Workshop on Treebanks and LinguisticTheories, page 217.K.
Lee, L. Romary, et al.
2010.
Towards interoperabil-ity of ISO standards for Language Resource Man-agement.
Proc.
ICGL 2010.H.
Llorens, L. Derczynski, R. J. Gaizauskas, and E. Sa-quete.
2012.
TIMEN: An Open Temporal Ex-pression Normalisation Resource.
In LREC, pages3044?3051.J.
Pustejovsky, B. Ingria, R. Sauri, J. Castano,J.
Littman, and R. Gaizauskas.
2004.
The Specifica-tion Language TimeML.
In The Language of Time:A Reader, pages 545?557.
Oxford University Press.H.
Reichenbach.
1947.
The tenses of verbs.
In Ele-ments of Symbolic Logic.
Macmillan.K.
Toutanova, D. Klein, C. D. Manning, and Y. Singer.2003.
Feature-rich part-of-speech tagging with acyclic dependency network.
In Proceedings of the2003 Conference of the North American Chapterof the Association for Computational Linguistics,pages 173?180.
ACL.64
