Interpretation and Generation in a Knowledge-Based Tutorial SystemMyroslava O. Dzikovska, Charles B. Callaway, Elaine FarrowHuman Communication Research Centre, University of Edinburgh2 Buccleuch Place, Edinburgh, EH8 9LW,United Kingdom,{mdzikovs,ccallawa,efarrow}@inf.ed.ac.ukAbstractWe discuss how deep interpretation andgeneration can be integrated with a know-ledge representation designed for questionanswering to build a tutorial dialogue sys-tem.
We use a knowledge representa-tion known to perform well in answeringexam-type questions and show that to sup-port tutorial dialogue it needs additionalfeatures, in particular, compositional rep-resentations for interpretation and struc-tured explanation representations.1 IntroductionHuman tutoring is known to help students learncompared with reading textbooks, producing up totwo standard deviations in learning gain (Bloom,1984).
Tutorial systems, in particular cognitivetutors which model the inner state of a student?sknowledge, help learning but result in only up to 1standard deviation learning gain (Anderson et al,1995).
One current research hypothesis is that thisdifference is accounted for by interactive dialogue,which allows students to ask questions freely, andtutors to adapt their direct feedback and presenta-tion style to the individual student?s needs.Adding natural language dialogue to a tutorialsystem is a complex task.
Many existing tuto-rial dialogue systems rely on pre-authored curricu-lum scripts (Person et al, 2000) or finite-state ma-chines (Rose?
et al, 2001) without detailed knowl-edge representations.
These systems are easy todesign for curriculum providers, but offer limitedflexibility because the writer has to predict all pos-sible student questions and answers.We argue that the ability to interpret novel,context-dependent student questions and answers,and offer tailored feedback and explanations isimportant in tutorial dialogue, and that a domainknowledge representation and reasoning engine isnecessary to support these applications.
We dis-cuss our knowledge representation, and the issuesof integrating it with state-of-the-art interpretationand generation components to build a knowledge-based tutorial dialogue system.Our application domain is in basic electricityand electronics, specifically teaching a studenthow to predict the behavior and interpret measure-ments in series and parallel circuits.
This is a con-ceptual domain - that is, students are primarily fo-cused on learning concepts such as voltage andcurrent, and their relationships with the real world.The students use a circuit simulator to build cir-cuits, and their questions and answers depend onthe current context.There are various sources of context-dependency in our domain.
Students andtutors refer to specific items in the simulation(e.g., ?Which lightbulbs will be lit in thesecircuits??
), and may phrase their answers in anunexpected way, for example, by saying ?thelightbulbs in 2 and 4 will be out?
instead ofnaming the lit lightbulbs.
Moreover, studentsmay build arbitrary circuits not included in thequestion, either because they make mistakes, orbecause a tutor instructs them to do so as part ofremediation.
Thus it would be difficult to produceand maintain a finite-state machine to predict allpossible situations, both for interpreting the inputand for generating feedback based on the stateof the environment and the previous dialoguecontext: a domain reasoner is necessary to handlesuch unanticipated situations correctly.We describe a tutorial system which uses a de-scription logic-based knowledge representation to4 KRAQ06generate intelligent explanations and answers toa student?s questions, as well as to interpret thestudent?s language at all stages of the dialogue.Our approach relies on using an existing wide-coverage parser for domain-independent syntacticparsing and semantic interpretation, as well as awide-coverage deep generation system.
We dis-cuss the issues which arise in connecting such re-sources to a domain knowledge representation in apractical system.2 MotivationA good teaching method for basic electricityand electronics is eliciting cognitive dissonance(Schaffer and McDermott, 1992; Arnold andMillar, 1987) which we are implementing as a?predict-verify-evaluate?
(PVE) cycle.
The stu-dents are asked to make predictions about the be-havior of a schematic circuit and then build it in asimulation environment.
If the observed results donot match their predictions, a discussion ensues,where the computer tutor helps a student learn therelevant concepts.
The PVE exercises are comple-mented with exercises asking the students to iden-tify properties of circuits in diagrams and to inter-pret a circuit?s behavior.Thus, the system has to answer questions aboutcircuits which students build and manipulate dy-namically in a simulation environment, and pro-duce explanations and feedback tailored to that in-dividual context.
This relies on the following sys-tem capabilities:?
Understanding and giving explanations.Since the system relies on inducing cognitivedissonance, it should be able to explain to thestudent why their prediction for a specific cir-cuit was incorrect, and also verify explana-tions given by a student.?
Unrestricted language input with referenceresolution.
Similar to other conceptual do-mains (VanLehn et al, 2002) the languageobserved in corpus studies is varied and syn-tactically complex.
Additionally, in our do-main students refer to items on screen, e.g.
?the lightbulb in 5?, which requires the sys-tem to make the connection between the lan-guage descriptions and the actual objects inthe environment.?
Tailored generation.
The level of detail inthe explanations offered should be sensitiveto student knowledge of the domain.
Tutorialutterances should be natural and use correctterminology even if a student doesn?t.To support answering questions and giving ex-planations, we chose the KM knowledge represen-tation environment (Clark and Porter, 1999) as abasis for our implementation.
KM is a description-logic based language which has been used to rep-resent facts and rules in a HALO system for APchemistry tests (Barker et al, 2004).
It supportsthe generation of explanations and obtained thehighest explanation scores in an independent eval-uation based on an AP chemistry exam (Friedlandet al, 2004).
Thus it is a good choice to providereasoning support for explanations and answeringnovel questions in a tutorial system.
However, KMhas not been used previously in connection withnatural language input for question answering, andwe discuss how the limitations of KM representa-tions affect the interpretation process in Section 4.We use a deep domain-independent parser andgrammar to support language interpretation, anda deep generator to provide natural sounding andcontext-dependent text.
Both deep parsing andgeneration provide the context adaptivity we need,but they are time-consuming to build for a spe-cific domain.
Now that a number of deep domain-independent parsing and generation systems areavailable in the community, our research goal is toinvestigate the issues in integrating them with theknowledge representation for question answeringto support the requirements of a tutorial dialoguesystem.
We focus on context-dependent explana-tion understanding and generation as a primary tu-toring task in our domain.
Section 3 discussesour representations, Section 4 presents the issuesarising in knowledge representation to support in-terpretation, and Section 5 discusses the require-ments for appropriate explanation generation andhow it can be integrated into the system.3 RepresentationsFrom the point of view of tutoring, the most im-portant requirement on the knowledge representa-tion is that system reasoning should closely matchhuman reasoning, so that it can be explained tostudents in meaningful terms.
Thus, for exam-ple, a numerical circuit simulator is well suited fordynamically displaying circuit behaviors, but notfor conceptually tutoring basic circuits, because it5 KRAQ06hides physics principles behind complex mathe-matical equations that are not suitable for learners.To design our knowledge representation westarted with a set of lessons for our domain de-signed by psychologists experienced in designingtraining courses for physics and simulated envi-ronments.
The lessons were used in a data col-lection environment with experienced tutors con-ducting tutoring sessions over a text chat interface.Each student and tutor were required to go throughthe materials presented as a set of slides and solvepre-defined exercises, but the students asked ques-tions to get help with problem-solving.
The tutorhad complete freedom to choose how to answerstudent questions and how to remediate when stu-dents made mistakes.
We are using this data setto study the types of errors that students make aswell as the language used by both students and tu-tors.
The latter serves as a guide to developing ourinterpretation and generation components.In addition to the set of materials, the coursedesigners provided a ?glossary?
of concepts andfacts that students need to learn and use in expla-nations, containing approximately 200 conceptsand rules in a form which should be used in modelexplanations.
We then developed our knowledgerepresentation so that concepts listed in the glos-sary were represented as KM concepts, and factsare represented as rules for computing slots.An example KM representation for our domainis shown in Figure 1.
It represents the fact that alightbulb will be on if it is in a complete path (i.e.
aclosed path containing a battery).
The explanationis generated using the comment structure [light-bulbstate] shown in Figure 2 (slightly simplifiedfor readability).
Explanations are generated sepa-rately from reasoning in the KM system becausereasoning in general contains too many low-leveldetails.
For example, our rule for computing alightbulb state includes two facts: that the light-bulb has to be in a complete path with a battery,and that a lightbulb is always in one state only (i.e.it cannot be broken and on at the same time).
Thelatter is required for proof completeness, but is tootrivial to be mentioned to students.
KM thereforerequires knowledge engineers to explicitly desig-nate the facts to be used in explanations.This representation allows KM to generate de-tailed explanations by using a template string andthen explaining the supporting facts.
An exampleof a full explanation, together with the adjustmentsneeded to use it in dialogue rather than as a com-plete answer, is given in Section 5.Currently, KM only supports generating expla-nations, but not verifying them.
The explanationmechanism produces explanations as text directlyfrom the knowledge representation, as shown inFigure 2(a).
This generation method is not wellsuited for a tutorial dialogue system, because itdoes not take context into account, as discussedin Section 5.
Therefore, we are designing a struc-tured representation for explanations to be pro-duced by the KM explanation mechanism insteadof using English sentences, shown in Figure 2(b).This will allow us to generate more flexible ex-planations (Section 5) and also to interpret studentexplanations (Section 4).4 InterpretationThe interpretation process consists of parsing,reference resolution, dialogue act recognitionand diagnosing student answers.
We discussreference resolution and diagnosis here as theseare the two steps impacted by the knowledgerepresentation issues.
As a basic example we willuse the student answer from the following pair:1Problem: For each circuit, which lightbulbs willbe lit?
Explain.Student: the bulbs in 1 and 3 are lit because theyare in a closed path with a batteryTo respond to this answer properly, the systemmust complete at least the following tasks.
First, itmust resolve ?the bulbs in 1 and 3?
to correspond-ing object IDs in the knowledge base, for exam-ple, LB-13-1-1 and LB-13-3-1.
Then, it must ver-ify that the student statement is factually correct.This includes verifying that the lightbulbs in 1 and3 will be lit, and that each of them is in a closedpath with a battery.
Finally, it must verify thatthe student explanation is correct.
This is sepa-rate from verifying factual correctness.
For exam-ple, a statement ?because they are in a closed path?is true for both of those lightbulbs, but it is not acomplete explanation, because a lightbulb may bein a closed path which does not contain a battery,where it won?t be lit.1These utterances come from our corpus, though most ofthe student answers are not as easy to parse.
We are workingon robust parsing methods to address the issues in parsingless coherent utterances.6 KRAQ06(every LightBulb has(state ((must-be-a Electrical-Usage-State) (exactly 1 Electrical-Usage-State)(if (the is-damaged of Self) then *Broken-Usage-Stateelse (if (has-value (oneof ?batt in (the powered-by of Self)))where ((the state of ?batt) = *Charged-Power-State)))then *On-Usage-State else *Off-Usage-State) [lightbulbstate])))Figure 1: The representation of a lightbulb in our KM database(a)(comment [lightbulbstate](:sentence (?a working lightbulb is on if it is in a complete path with a charged battery?
))(:supporting-facts (:triple Self powered-by *) (forall (the powered-by of Self) (:triple It state *)))(b)(comment [lightbulbstate](:rule :object LightBulb :fact (?lb state *On-Usage-State):requires ((?lb powered-by ?v1) (?v1 instance-of Battery) (?v1 state *Charged-Power-State)):bindings ((?lb ?
Self ?)
(?v1 ?
the powered-by of Self ?))
)Figure 2: A sample comment structure to generate an explanation for a lit lightbulb (a) The KM texttemplate (b) a new structured representation.
Items in angle brackets are computed dynamically4.1 Interpreting Factual StatementsWe use the TRIPS dialogue parser (Dzikovska,2004) for interpretation.
The TRIPS parser pro-vides a two-layer architecture where the utter-ance meaning is represented using a domain-independent semantic ontology and syntax.
Thedomain-independent representation is used for dis-course processing tasks such as reference reso-lution, but it is connected to the domain-specificknowledge representation by mapping betweenthe domain-independent and domain-specific on-tologies (Dzikovska et al, 2003; Dzikovska,2004).
This architecture allows us to separate lin-guistic and domain-specific knowledge and easilyspecialize to new domains.When applied in our domain, the TRIPS inter-pretation architecture was helpful in getting theinterpretation started quickly, because we onlyneeded to extend the lexicon with specific termsrelated to basic electricity and electronics (e.g.,?multimeter?
), while other lexical items and syn-tactic constructions were provided in the domain-independent part.The reference resolution module operates onTRIPS domain-independent representations send-ing queries to KM as necessary, because theTRIPS representations offer linguistic features toguide reference resolution not available in the rep-resentations used for reasoning.
We use a recur-sive reference resolution algorithm similar to By-ron (2002) which first resolves ?1 and 3?
are re-solved as names for Circuit-13-1 and Circuit-13-3,2 and then queries KM to find all lightbulbs inthose circuits.
Dialogue context is used to inter-pret the reference resolution results.
In this case,the context does not matter because the questionsets up all lightbulbs on screen as contextually rel-evant.
But if the student had said ?the ones in 1and 3?, the query would be for all components incircuits 1 and 3, and then our algorithm will filterthe query results based on the question context toretain only lightbulbs.Once the references are resolved, the whole sen-tence is converted to a KM statement which repre-sents the student utterance, in our case (the stateof LB13-1-1) = *On-Usage-State, where LB13-1-1 is the lightbulb obtained by reference resolution.This statement is sent to the KM system, whichverifies that it is correct.
This procedure allows usto use dialogue context in understanding, and alsoto check correctness of answers easily, even if theyare phrased in an unanticipated way.However, even with the layer of separation oflinguistic and domain knowledge provided by theTRIPS architecture, we found that the need to sup-port interpretation in a compositional way influ-ences the interaction with knowledge representa-tion.
There are many ways to express the samequery to KM, which differ in efficiency.
Two ex-2This step is not trivial, because on other slides the label?1?
refers to terminals or other components rather than wholecircuits, and therefore there is no 1-to-1 correspondence be-tween names and objects in the environment.7 KRAQ06(a) (allof ?x in (the all-instances of LightBulb) where ((the components of Circuit-13-1) include ?x))(allof ?x (LightBulb ?x) and (components Circuit-13-1 ?x))(b) (allof ?comp in (the components of Circuit-13-1) where (?comp isa LightBulb))(allof ?x (components Circuit-13-1 ?x) and (LightBulb ?x) )Figure 3: KM Queries to to retrieve all lightbulbs in a circuit with corresponding first-order logic glosses.ample queries to ask the same question are given inFigure 3.
While their first order logic semantics isequivalent except for the order of conjuncts, theyare expressed in a very different way in the KMsyntax.
Version (b) is more efficient to ask, be-cause it retrieves the components of circuit 1 first,a smaller set than the set of all lightbulbs.This asymmetry presents a challenge to bothlanguage interpretation and knowledge engineer-ing.
Existing reference resolution algorithms (By-ron, 2002; Bos, 2004) expect the queries for ?thelightbulb?
and ?the lightbulb in 1?
to be strictlycompositional in the sense that the phrase ?thelightbulb?
will be represented identically in bothcases, and ?in 1?
is represented as an additionalconstraint on the lightbulbs.
This corresponds tothe query variant (a) in the system.
Otherwisea large amount of query-specific transformationsmay be required to produce queries for complexnoun phrase descriptions, diminishing the scala-bility of the approach.We had to spend a significant portion of timein the project developing an efficient and com-positional knowledge representation.
Our cur-rent solution is to prefer compositionality over ef-ficiency, even though it impacts performance insome cases, but we are working on a more gen-eral solution.
Instead of converting directly toKM from domain-independent language represen-tations, we will convert all queries in a FOL-likesyntax shown in Figure 3 which uses conceptsfrom the KM representation, but where all con-juncts are treated identically in the syntax.
Theproblem of converting this representation to theoptimal KM form can then be seen as an instanceof query optimization.
For example, we can re-order the conjuncts putting the relations which in-clude an instance constant (e.g., (the componentsof Circuit-13-1)) first in the query, because theyare more likely to limit the search to small setsof objects.
This representation can be easily con-verted in the KM syntax, and is also useful forexplanation understanding and generation as dis-cussed below.4.2 Explanation UnderstandingWhile KM has facilities for generating explana-tions, it does not have support for reading in a stu-dent explanation and verifying it.
We devised amethod to support this functionality with the aid ofKM explanation generation mechanism.
Any timea student offers an explanation, the KM reasonerwill be called to generate its own explanation forthe same fact, in the structured format shown inFigure 2(b).
Then the student explanation (con-verted into the same intermediate syntax) can bematched against the KM-generated explanation toverify that it is complete, or else that certain partsare missing.In our example, the student explanation ?be-cause they are in a closed path with a battery?
willbe represented as (?pa instance-of Path) (?pa is-closed t) (?b instance-of Battery) (?pa contains?b) (?pa contains LB-13-1-1).3 This explanationdoes not directly match into the explanation struc-ture from Figure 2(b), because it uses the morespecific term ?in closed path with a battery?
ratherthan the more general term ?in complete path?
(represented by the powered-by slot).
However,as part of generating the explanation, an explana-tion structure for the powered-by will be gener-ated, and it will include the facts (?pa is-closedt) (?pa contains ?b).
This will match the studentexplanation.
It will be up to the tutorial module todecide whether to accept the explanation ?as is?,or lead the student to use the more precise termi-nology, as discussed in Section 5.This method can address student explanationsas long as they correspond to parts of typical ex-planations, and identify missing parts.
The biggestopen problem we face is equivalent inferences.For example, a student may say ?A lightbulb isnot on?
instead of ?a lightbulb is off?.
KM rea-soning handles those differences when verifyingfactual correctness, but KM does not support sim-ilar reasoning for matching explanations (which3Here ?they?
would be resolved first to a set of lightbulbs,and each instance will be treated separately to verify that theexplanation applies.8 KRAQ06would correspond to verifying full proofs ratherthan individual facts).
We are considering bring-ing a theorem prover to reason over intermediaterepresentations together with KM axioms to helpinterpret explanations, as done in (Makatchev etal., 2004; Bos, 2005).5 GenerationThe task of the utterance generation component isto produce tutorial dialogue, such as asking newquestions of the student, conveying the correctnessof their answers, and giving explanations.
Expla-nations may be given in response to a student?s di-rect ?why?
question or when a student has erredand the pedagogical reasoner has decided that anexplanation is the best remediation strategy.
Ineach case, the utterance generator must not onlyprovide a correct, thorough and coherent explana-tion, but must tailor it so that the student doesn?treceive too much or too little information.
Tobe tailorable, explanations must be derived fromthe represented domain knowledge and from whatthe tutoring system knows about the student (e.g.,their recent performance).Directly producing explanations by appendingtogether pieces of hand-written strings as in Fig-ure 2(a) usually results in long explanations thatcontain little detail of interest to the student.
Fig-ure 4 contains one such example explanation gen-erated by the KM system in our domain and de-rived from a query based on the production rule inFigure 1.
This explanation makes sense in answer-ing an exam question, as intended in the KM sys-tem, but it is not necessarily helpful in dialogue.As an example, suppose the student had incor-rectly answered the question in Section 4, and thetutoring system decides to correctly explain whythe lightbulbs are lit.
Usually, a full explanationis not necessary in these cases.
In the case wherea student gave an incomplete explanation, namelyleaving out the necessary mention of the battery,a simple response of the form ?Yes, but don?t for-get the battery?
will be infinitely more helpful thanthe full explanation.
If the student?s explanation iscompletely correct, but they have failed to noticea change in the environment, the more appropriateexplanation is ?The lightbulb is in a closed path,as well as the battery, but the battery is not oper-ational?.
Furthermore, if a student has shown thatthey are knowledgeable about certain fundamen-tal facts, such as what states a lightbulb may bein, statements like ?A lightbulb can be on, off orbroken?
should be removed.Adding this reasoning directly to the knowledgebase would make it unwieldy and unmodifiable,and the string-based generation in KM commentsdoes not allow for adapting explanations based onexternal knowledge such as a student model.
Toadapt the KM explanation mechanism to supportsuch context-dependent generation, instead of cre-ating explanations via template strings, we havedevised the representation presented in Figure 2(b)that is based on semantics and allows us to mod-ify an explanation after it has been produced bythe KM reasoning process but before it has beenconverted into a string representation.Based on this semantic representation, explana-tion content can be selected more appropriately.
Ifthe interpreter discussed in Section 4.2 determinesthat parts of the explanation from the :requiresfield are missing, the generation can focus only onthat part of the explanation.
The requirements listwould also be used to determine if the student isnot aware of environment properties, such as that abattery is damaged.
Finally, the facts known to thestudent can be removed if the corresponding se-mantic forms were used in previous explanations.In addition to selecting the explanation contentproperly, it is important that the responses given tothe student sound fluid and are easy to understand.In dialogue, in particular, it is important that pro-nouns can be generated based on references im-portant for the student, and avoid repetitiveness insyntax.
Knowledge of linguistic features such asnumber and gender, and also knowledge of whatwas previously mentioned in the discourse, is nec-essary to support such natural text generation.Deep generation utilizes this representedknowledge along with grammatical and lexicalknowledge of a language, rather than hand-writtenstrings, to produce utterances.
Our current im-plementation uses a custom utterance generationcomponent and the STORYBOOK (Callaway andLester, 2002) deep text generator modified towork in a dialogue context.
Once the explanationcontent is selected, it is passed to the STORYBOOKsystem to produce the actual utterance text.6 Discussion and Related WorkExisting tutorial dialogue systems most often relyon one of two approaches for interpretation: theyeither use wide coverage but shallow language9 KRAQ06A lightbulb can be on, off or broken.A working lightbulb is on if it is in a complete path with a charged battery.The complete paths of a component are those which are valid, closed, and complete.A path is complete if it is a closed path with at least one battery and at least...A path is closed if it is a valid path, a sequence of more than two terminals, ...A path is valid if it is a single sequence with more than one terminal, all ...The path (:seq t1-13-1-3 t1-13-1-2 t1-13-1-1 t1-13-1-4) is valid.The path (:seq t1-13-1-3 t1-13-1-2 t1-13-1-1 t1-13-1-4) is closed.... 6 lines showing that the path contains both L1-13-1-1 and B1-13-1-1 ...The path (:seq t1-13-1-3 t1-13-1-2 t1-13-1-1 t1-13-1-4) is complete.L1-13-1-1 is in a complete path with B1-13-1-1.A battery is charged unless it is damaged.B1-13-1-1 is charged.L1-13-1-1 is on.Figure 4: Untailored text produced by appending strings from production rules.interpretation techniques (e.g.
LSA (Person etal., 2000), finite-state parsing (Glass, 2001)) incombination with shallow knowledge represen-tations (tutorial scripts or FSA-based knowledgeconstruction dialogues), or they use deep KR&Rsystems but with highly domain-specific parsingand semantic interpretation (e.g.
ATLAS-ANDES(Rose?
et al, 2001), PACT (Aleven et al, 2002)).The Why2-Atlas system (VanLehn et al, 2002)makes progress on combining wide coverage in-terpretation with deep knowledge representationby utilizing a wide-coverage syntactic grammar(Rose?, 2000) and a theorem prover to interpret stu-dent essays (Makatchev et al, 2004).
However,once the misconceptions are diagnosed, the reme-diation is done via KCDs, with very limited lan-guage input and pre-authored responses, and with-out allowing students to ask questions.
Our ap-proach attempts to address issues which arise inmaking remediation more flexible and dependenton context, while still relying on wide-coveragelanguage interpretation and generation.The issues we encountered in integrating com-positional interpretation and reference resolutionwith efficient knowledge representation is simi-lar to a known problem in natural language inter-faces to databases which may contain slots withcomplex meanings.
(Stallard, 1986) solves thisproblem by providing inference schemas linkingcomplex-valued slots with compositional repre-sentations.
Our solution in mapping domain-independent to domain-specific representation issimilar, but stricter compositionality is needed forreference resolution support, placing additionalconstraints on knowledge engineering as we dis-cussed in Section 4.We glossed over the interpretation issues relatedto metonymy and other imprecise formulations inquestions (Aleven et al, 2002).
A taxonomy ofimprecise manual question encodings by domainexperts is presented in (Fan and Porter, 2004).They also propose an algorithm to address looselyencoded questions using ontological knowledge.This algorithm in effect performs question inter-pretation, and we are planning to incorporate itinto our interpretation mechanism to help inter-pret question representations obtained automati-cally during language interpretation.Text generation of the type that can handle thenecessary linguistic phenomena needed have notbeen implemented in tutoring systems that use di-alogue.
The DIAG-NLP tutorial dialogue sys-tem (Eugenio et al, 2005) shows that structuredexplanations from deep generation supported byknowledge representation and reasoning improvelearning.
However, it does not engage in a dia-logue with the user, and in this paper we showedthat explanations need to be further adjusted in di-alogue based on previous student responses andknowledge.
Deep generation using context hasbeen used in some other types of dialogue sys-tems such as collaborative problem solving (Stent,2001), and we expect that the approaches used incontent selection and planning in those systemswill also transfer to our deep generation system.7 ConclusionsWe discussed the implementation of a tutorial di-alogue system which relies on a domain knowl-edge representation to verify student answers andoffer appropriate explanations.
Integration withdomain-independent interpretation and generationcomponents places additional requirements onknowledge representation, and we showed howan existing knowledge representation mechanismsused in answering exam questions can be adaptedto the more complex task of tutoring, including in-terpreting student explanations and generating ap-10 KRAQ06propriate feedback.AcknowledgmentsThis material is based upon work supported by agrant from The Office of Naval Research numberN000149910165.ReferencesV.
Aleven, O. Popescu, and K. Koedinger.
2002.
Pilot-testing a tutorial dialogue system that supports self-explanation.
Lecture Notes in Computer Science,2363.J.
R. Anderson, A. T. Corbett, K. R. Koedinger, andR.
Pelletier.
1995.
Cognitive tutors: Lessonslearned.
The Journal of the Learning Sciences,4(2):167?207.M.
Arnold and R. Millar.
1987.
Being constructive:An alternative approach to the teaching of introduc-tory ideas in electricity.
International Journal ofScience Education, 9:553?563.K.
Barker, V. K. Chaudhri, S. Y. Chaw, P. Clark, J. Fan,D.
Israel, S. Mishra, B. W. Porter, P. Romero, D.Tecuci, and P. Z. Yeh.
2004.
A question-answeringsystem for AP chemistry: Assessing KR&R tech-nologies.
In KR, pages 488?497.B.
S. Bloom.
1984.
The two sigma problem: Thesearch for methods of group instruction as effec-tive as one-to-one tutoring.
Educational Researcher,13:3?16.Johan Bos.
2004.
Computational semantics in dis-course: Underspecification, resolution, and infer-ence.
Journal of Logic, Language and Information,13(2):139?157.Johan Bos.
2005.
Towards wide-coverage semanticinterpretation.
In Proceedings of Sixth InternationalWorkshop on Computational Semantics (IWCS-6).Donna K. Byron.
2002.
Resolving Pronominal Refer-ence to Abstract Entities.
Ph.D. thesis, University ofRochester.Charles B. Callaway and James C. Lester.
2002.Narrative prose generation.
Artificial Intelligence,139(2):213?252, August.P.
Clark and B. Porter, 1999.
KM (1.4): Users Manual.http://www.cs.utexas.edu/users/mfkb/km.M.
O. Dzikovska, M. D. Swift, and J. F. Allen.
2003.Integrating linguistic and domain knowledge forspoken dialogue systems in multiple domains.
InProceedings of IJCAI-03 Workshop on Knowledgeand Reasoning in Practical Dialogue Systems.M.
O. Dzikovska.
2004.
A Practical Semantic Rep-resentation For Natural Language Parsing.
Ph.D.thesis, University of Rochester.B.
Di Eugenio, D. Fossati, D. Yu, S. Haller, andM.
Glass.
2005.
Natural language generation for in-telligent tutoring systems: A case study.
In 12th In-ternational Conference on Artificial Intelligence inEducation, pages 217?224.J.
Fan and B. W. Porter.
2004.
Interpreting loosely en-coded questions.
In Proceedings of the NineteenthNational Conference on Artificial Intelligence, Six-teenth Conference on Innovative Applications of Ar-tificial Intelligence, pages 399?405.N.
S. Friedland, P. G. Allen, M. J. Witbrock, G.Matthews, N. Salay, P. Miraglia, J. Angele, S.Staab, D. Israel, V. K. Chaudhri, B. W. Porter, K.Barker, and P. Clark.
2004.
Towards a quanti-tative, platform-independent analysis of knowledgesystems.
In KR, pages 507?515.M.
Glass.
2001.
Processing language input in theCIRCSIM-tutor intelligent tutoring system.
In J.Moore, C. L. Redfield, and W. L. Johnson, editors,Artificial Intelligence in Education.
IOS press.M.
Makatchev, P. W. Jordan, and K. VanLehn.
2004.Abductive theorem proving for analyzing studentexplanations to guide feedback in intelligent tutor-ing systems.
J. Autom.
Reasoning, 32(3):187?226.N.
Person, A.C. Graesser, D. Harter, and E. Math-ews.
2000.
Dialog move generation and conversa-tion management in autotutor.
In Workshop Notes ofthe AAAI ?00 Fall Symposium on Building DialogueSystems for Tutorial Applications.C.
Rose?, P. Jordan, M. Ringenberg, S. Siler, K. Van-Lehn, and A. Weinstein.
2001.
Interactive concep-tual tutoring in atlas-andes.
In Proceedings of AI inEducation 2001 Conference.C.
Rose?.
2000.
A framework for robust semantic inter-pretation.
In Proceedings 1st Meeting of the NorthAmerican Chapter of the Association for Computa-tional Linguistics.P.
S. Schaffer and L. C. McDermott.
1992.
Researchas a guide for curriculum development: An examplefrom introductory electricity.
part ii: Design of in-structional strategies.
American Journal of Physics,60(11):1003?1013.D.
G. Stallard.
1986.
A terminological simplifica-tion transformation for natural language question-answering systems.
In ACL Proceedings, 24th An-nual Meeting, pages 241?246.A.
Stent.
2001.
Dialogue Systems as ConversationalPartners: Applying conversation acts theory to nat-ural language generation for task-oriented mixed-initiative spoken dialogue.
Ph.D. thesis, Universityof Rochester, Rochester, NY, August.K.
VanLehn, P. Jordan, C. P.
Rose?, and The NaturalLanguage Tutoring Group.
2002.
The architectureof why2-atlas: a coach for qualitative physics essaywriting.
In Proceedings of Intelligent Tutoring Sys-tems Conference.11 KRAQ06
