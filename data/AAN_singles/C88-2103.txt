Parshlg with look-ahead in real-time on-line translation systemttiroyasu NOGAMI, Yumiko YOSHIMURA and Shin-ya AMANOResearch and Development CenterToshiba Corporation1, Komukai Toshihacho, Saiwai-ku,Kawasaki-City, Kanagawa, 210 JapanAbst rac tIn order to increase parsing efficiency in a real-time on-line translation system interfaced with a keyboardconversation program, we have developed a version of theATN formalism with a look-ahead function.
By permittingfuture input to be scanned, arcs can be reordered orsuppressed.
Various mechanisms utilizing this capabilityare presented.1.
IntroductionA real-time on-line communication system includingautomatic translation was realized by combining akeyboard conversation function with an English-Japanesebi-directional machine translation system implemented ona workstation \[Amano 1986, 1987\].
Using a satelliteconnection, bilingual conversations were held betweenmembers of this laboratory in Japan and visitors to the 5thWorld Telecommunications Exhibition Telecom 87,organized by the International Telecommunication Union,held in Geneva from 20th to 27th October in 1987 \[Amano1988a, 1988b\] \[Miike 1988\] \[Takeda 1988\] \[Asahioka 1988\].The general set-up, the screen display and the systemconfiguration are illustrated in Appendix.
The systemoperates as follows: an operator in Switzerland typeshis/her message in English which is displayed in the upperwindow and is transmitted via standardtelecommunications devices to Japan, where it isimmediately translated into Japanese.
The operator inJapan receives the message in Japanese in the lowerwindow and types his/her response in Japanese.
This istranslated and then txansmitted to Switzerland.
Thesystem is like UNIX's* 'talk', except that contributions tothe dialogue appear in the appropriate language.An important feature of such a real-time translationsystem is that translation time must be reduced to anabsolute minimum so that the conversation can proceednaturally.
To reduce the parsing time, this system uses aversion of the ATN formalism with a look-ahead function,based on the concept of a parsing method using globalinformation.
This parsing method proved to be veryeffective during this experiment, so that we couldcommunicate with visitors very naturally irrespective oftime taken for satellite communication and time required intyping his/her messages.
*UNIX is a Trademark ofAT&T Bell LaboratoriesFocusing on the parsing of English, the paper discussesthe concept of parsing using global information in Section 2,the realization of the parsing method as an ATN in Section3 and the conclusion in Section 4.2.
The  concept  of  pars ing  us ing g lobalin fo rmat ionIn parsing natural languages using large-sizedictionaries and grammars, there are usually nmltiplecategorial and syntactic possibilities for the current word,when using only the information associated with this word.The parsing methods in \[Woods 1970\]\[Pereira 1980\] useonly the information of the current word, so that thesemethods waste much time trying a lot of possibilities whicheventually prove to be failure.Such possibilities, however, can be suppressed orreordered even at the current word position by using globalsurface information from the input without really parsing it.This notion is especially usefld, given the followingfeatures of English syntax:i) constituents consist of at 'least one obligatory element,e.g.
a sentence requires a verb, a noun phrase requires anoun, etc.ii) many structures involve discontinuities, e.g.
as --- as,riot --- but, the more --- the more, both --- and, etc.In order to suppress or reorder the possibilities, thesefeatures are used in real parsing as follows.
Thesefeatures uggest hat each rule of a CF grammar equiresat least one obligatory terminal element, as well asoptional terminal and non-terminal elements.
By lookingfor the obligatory elements in the global input as the firststep in applying a given rule, the rule can be rejected orreordered dynamically at the eun'ent word position.
Thissearch is of great significance, especially if there are manyintelwening optional elements and/or these are themselvesrather complex.This function fm~ther has the additional advantage ofprovisionally partitioning file input into approximateconstituents delineated by the obligatory elements whichact as "stepping stones" through the input "stream".
Thismight be useful for parsing with parallel processors, andmay have implications for cognitive psychologyapplications of parsing.
However, we have not pursuedthese particular aspects.3o Rea l i za t ion  o f  pars ing  us ing  g loba liu ib r l~af ion  as an  ATN3olo Look  ahead mechan ismsWe have realized the "Parsing using global informatioff'method as an ATN, which uses the topdown depth-firstsearch method, reinforced with a "look ahead" condition.This condition cheeks the specified obligatory elementswhich each syntactic or categorial lXoSsibilities (denoted asarcs of ATN) require in the future input, from the currentword position m the number specified or to the end ofsentence: as default.The ATN with "look ahead" conditions works veryeffectiw;ly for (1) rejection of syntactic possibilities, (2)reordering of them, (3) rejection of categorial possibilities,and (4) reordering of them.
These am best shown withsome examples of linguistic phenomena.
(1) re jec t ion  of  syntact i c  poss ib i l i t iesa) re jec t ion  of  one  syntact i c  poss ib i l i tyThe general description for rejection is shown in Figure 1with an example at the right-hand side.
The generalnetwork of Figure 1 has the following meaning:- At mc 'A' ,  if the obligatory condition 'c' which arc 'A'requires at arc 'D' is not satisfied in the future input, thenarc 'A'  is rejected without really parsing from arc 'A' to arc'D'.
(i.e.
useless parsing from arc 'A' to arc 'D' can beavoided.
)in parsing the example (a) without looking-ahead, "thelecture" can be analyzed as the subject of "that-clause".Eventually, this interpretation is rejected since there is noverb aher "lecture" in (a).
In this case, control returns tothe previous backtrack point in the sub-network for "nounphrase", and then wastes still more time trying all theremaining possibilities which will eventually lead tofailure.
On the other hand, by looking-ahead for a "verb" inthe future input, parsing "the lecture" as the subject of"that-chmse" can be avoided.In realistic, large-size ATN, states have a lot of arcs.For example, the first state of a sub-network for a nounphrase has a lot of arcs for determiner, pronoun, noun ,adjective, present-participle, past-participle, adverb,possessive, prefix, negative, numeral, quantifier, intensive,interrogative, ---, and also for certain paiticulm" wordssuch as "that", "so", "both", "such", "from" (ex.
from 2 to 5inch), etc.
The number of arcs from this state alone isgenerally greater than the number of words in the averageinput sentence.
And what's the next state also has lots ofarcs.
Therefore, even in parsing a noun phrase we mustcheck an enormous number of arcs compared with the look-ahead checks (see 3.2).The look-ahead function works more effectively as thelength and the complexity of input sentences increase.
Forexample, the look-ahead is very useful if "lecture" hasmany coordinands and is modified by many optionalelements such as a prepositional phrase, a participlephrase, etc.
It is also useful for long-distancediscontinuities, e.g.
identification of phrasal verbs, orconstructions such as "so adj.
--- that", "it\[formal subj\] --- that\[logical subj\]", "not --- but", "the more .... theillOl"e 'l, "either---or", etc.Compare the sentence "I heard the lecture and then hadlunch."
to the sentences of Figure 1.
Looking-ahead for"verb" beyond "and" in the future input is of no effect since"had" isn't an element within "that-clause".
Therefore, aboundary condition which can terminate the look-aheadsearch of "verb" at "and" can be considered.However, it is very difficult to give such conditionswithout real parsing, and such conditions might be rathercomplex and time-consuming.
For this reason, we useonly simple look-ahead conditions without consideringsearch boundary.
Therefore, these conditions generallycheck categories or words of the future input to the end ofthe sentence (cf.
(2)(4)).
Note that such a simple check ofa word in the future input takes about the same time as thetraversal of one arc (see 3.2), and only conditions whichnever cause any mistakes beyond the search boundarymust be written.
Fortunately it is not difficult, becausealmost of all look-aheads work as an existential check ofword or word sequence, which assures fail safe property.For example, the look-ahead condition shown in Figure 1never causes any mistakes.3 A \[look-ahead c !~,~c-C2~4~?)
I) \[el 0:I< \[\]  : eomlltion?~ PUSII TIIAT-C___I,AUSt',' \[look-ahead verb\] .PUSII NPx , .
_  PUStt I NI"P(a) I heard tile leetare.
(b) I heard the lecture was Interesting.Figure I Rejection of one syntactic possibilityO- verL~o "',489b)  re jec t ion  (if al l  poss ib i l i t ies  wh ich  requhoethe  same ob l igatory  e lementin this case, a "fail arc" is very useful, as shown inFigure 2.
The general network of Figure 2 has thefollowing meaning:-- At fail arc 'D', if the condition 'c' is satisfied in thefuture input, then sister arcs 'E ' ,  'F', --- are pruned (i.e.the current backtrack point is released), control returns tothe previous backtrack point and arc 'B' is tried, in thisway, useless parsing of sister arcs can be avoided.In practice, fail arcs oftcn have negation of conditionswhich apply to sister arcs.
In the example (a), parsing"repairs" as the subject of a coordinated S can be avoided.This alternative is useful, especially when there are manyares at a state: rather thmi check repeatedly the conditionon each, a fail arc with the negatiou of the condition leadsus back to the previous tate.c) re jec t ion  o f  all  but  one  poss ib i l i tyIn this case, an "anchor arc" is very useful, as shown inFigure 3.
The general network of Figure 3 has the followingmeaning:At anchor arc 'C',  if the condition 'c' is satisfied in thefuture input, arc 'F'  is tried and sister arcs 'D ' ,  'E' ,  ---are pruned, irrespective of the ultimate success or failure ofparsing after arc 'F'.
Otherwise the next arc 'D' is tried.Anchor arcs, like fail arcs, often have negative conditions.Consider the text segment in the example (a): if there isnot another candidate imperative verb in the input, analysisof "turn on the power" as a coordinand of "start themachine" can be rejected (of.
example (b)).Also consider parsing "if NP1 vt NP2, NP3 vt NP4."
Bylooldng-ahead, parsing NP3 as a coordinated NP of NP2,and parsing "NP3 vt NP4" as a coordinated S of "NP1 vtNP2" can be avoided.
Note that all possibilities of a nounphrase must be checked in both cases before the success.d) re jec t io~ o f  the  input  sentenceIn this case, a "stop arc" is used, as shown in Figure 4,which has the following meaning:.- )kt stop arc 'A',  if the condition 'c' is satisfied in theflmtre inpat, the parsing of the whole sentence is stoppedia'espective of the midst, because this sentence has nopossibilities of success.In the example, useless parsing of ungrammaticalsentence wlfich has no verbs after relative pronoun bytyping errors can be avoided.
This is used forungrammatical sentences including undefined words, typingm~ors, etc.
It is particular useful when false paths wouldotherwise be a cosily detour._ ^ / flaiL I) \[look-ah~ad c~~e : negation e fcFigure 2S O-~USI!-7~O CAT ee-conj ;0  IdU~-Ii-:S;OS ~- I~'^IL \[look-ahead ~vorb J\~,.____ pus, p i ,  -\~-~.
PUgH I NPP _~(a) Tile iaehlno requires laintonanee and repairs,(b) The machine requl res lalntenance and repairs areexpensive.I~ejection el' all possibilities of one statef ~?__  A ~101~ C \[iook-alloadhl~CilOii\[eat celia fl / -~"O_P.USll VP ___ loo k-ahea__ d ~ce-cionJ.~Y '~'~ D  co~lla (~/PUSII VPo  OM' co-conj.
(a) To start the machine, turn on the pover,(b) To start the ltachine, turn on the power,or test the circuit, suitctk on at the ~aln.Figure ffeJeetlon of all but one ~ss ib i l l tytl'(iP A\[I ook.-atlead c~.
.
.
.
.STOP \[cat tel-pron.
&oc^y ~_~ou~,~ look-ahead -~ver~Lo(a) $\]hls Is Information uhlch he recleved by this ~achtne.Figure 4 ffejee\[Io~ of the ungrammatical Input sentence490(2) reordedng of  syntact i c  poss ib i l i t i es  (3) re jec t ion  o f  ca tegor ia l  poss ib i l i t i esIn the, traditional parsing methods, arcs with higher-possibility at the state are written at upper side of arcswith lowe~-possibility.
Therefore, the application order ofarcs can be dynamically reordered only by infomaation ofthe current word, not by the future input.
But by lookingahead the future input, arcs can be dynamically xeorde~edto select the arc  with highest possibility.
This functionreduces the time for finding a successful parse.A "jump arc" used for change of application order isshown in _~'igure 5.
The general network of Figure 5 hasthe following meaning:- If the condition 'e' is satisfied in the future input, arc 'A'and 'l~V a~e tried in this order; otherwise, arc 'B'  and 'A'are tried ia this order.
In either case, both interpretationsare possible at the current word position: only the orderingis affected.In the example (a), parsing "restaurants and cafeterias"as the subject is preferred, and in the example (b), parsingas the obje,zt of "in" is preferre4.Also, we can specify in conditions the number of wordsto be searched.
This condition works as a heuristic forreordering arcs in order to reduce time required for success(see (4)).
It is difficult to use this number in order to rejectarcs, beca~se the~e may be intervening optional elementsand so this number may cause mistakes (see (1)).There are many words which have categorial ambiguitiesin English.
In parsing English, categorial ambiguity is a bigproblem, especially in the case of very commonly usedwords.
Examples are "as" (preposition, adverb,conjunction, relative pronoun), "after" (preposition,subordinate conjunction, adverb), and "that"(demonstrative pronoun, relative pronoun, conjunction).How the look-ahead fimction works effectively forcategorial disambiguation is as follows, and reordering ofcategorial possibilities is presented in (4).The use of ares is the same as (1).
Here the exampleshown in Figure 6 is the rejection of "as" as an adverb, if asecond "as" is not found, and the rejection of "as" as aconjunction, if a verb is not found.
In the example (e),parsing "as" as adverb and conjunction can be avoided bylinear search.Such categorial ambiguity is also common in Japanese,for example, "no", "de", etc.
These categorial ambiguitiesin Japanese can be also avoided by look-ahead.
(4) reorder ing  o f  eategor ia l  poss ib i l i t i esHow look-ahead works effectively for reordering ofcategorial possibilities is presented.The use of arcs is the same as (2).
An example isJU;\[~UHPUMPC,?k-ahoa,IFigure 5JUMP Ecat comma &\(a) In department-stores, reataurants and cafeteriasare sometimes found.
(b) In department-stores?
restaurants and cafeterias,no smokh~ Is allowS.ffcorderlng of syntactic possibil it ies,3 WI~D as JUfl._P Elook-ahja_d as J_ ~_  pus{{ ADJI__~ ~ _ ~ I)IJSH S \[look-ahead v e r b \ ] ~x~.
PUSII N l) ~-  (a) I used tills machine as recently as yesterday._~.PUStl PP -a- (b) l use tills machine as the old cite Is broken.~.
(c) I bought tills machine as a present for my friend.Figure 6 lCejectlon of eategorlal possslbll lt lesANCIIOR \[(cat sub-conj.
& prep.)
&C~ l~k-'~icad.
(comma ~ ~tvcrbs > l) \] PUSII SUB-CLttUSE_~..
I'USII PffE-PIII~ASE ~.
k PUS I /  PI~E-PIIRASE .~(a) After the conversation we will have lunch.x....~ FUSII SUB-CI,AUSE --.--- (b) After the conversation finishes,: we will have lunch.Figure ?
Reordering of categorlal Possibilities491shown in Figure 7.
This network applies for a word like"after" which has multiple category ambiguity.
At thebeginning of a sentence, if there is comma and more thanone verb in the future input, the subordinate conjunctioninterpretation is preferred (i.e.
tried first), otherwise, thepreposition interpretation is preferred.
In the example (a),parsing "after" as preposition is prefen'ed, and in theexample (b), parsing "after" as conjunction is prefen'ed.3.2.
Parsing with vs without look aheadDespite of its advantages, mentioned earlier, a questionmay arise in using look-ahead conditions:Is look-ahead rather time-consuming?The top-down depth-first search like ATN takes klCntime\[Aho 1972\], where C is a constant, n is the number ofinput words, and k 1 is a coefficient which is determined bytime taken for the traversal of one arc.
The look-aheadsearch presented here however, takes k2n t ime, where k 2is a coefficient which is determined by time taken for oneword check of a look-ahead condition.If a look-ahead condition is satisfied, klCn can bereduced to k2n.
If not, time taken for look-ahead iswasted.
Therefore, the effect of look-ahead is determinedby these trade off.
This increases as n and C increase (i.e.the length of sentences and the size of the grammarincrease) and as k 2 decreases.In our ATN, k 1 is nearly equal to k2, since one check oflook-ahead conditions which we use take about the stonetime as the traversal of one arc, as discussed in (1).Therefore, the effect of look-ahead is generally determinedby the difference of the number of checks between arctraverses and looking-ahead.
Since the number of arcsfrom one state often is greater than the number of the inputwords, as discussed in (1), and the number of checks forlooking ahead is less than the number of input words, extratime needed in look-ahead is not too significant.
Of course,look-ahead conditions are attached to arcs only when it iseffective.For the above reasons, the number of arcs with effectivelook-ahead increases in realistic, large-size grammarssuch as our ATN.4.
ConclusionWe have shown how a parsing method using globalinformation as well as information about the current word,is very effective for increasing the efficiency in the face ofnatural language phenomena such as categorial andsyntactic alternatives.This is especially significant in a real-time translationsystem using large-size dictionaries and realisticgrammars for natural language.
In such a system,enormous numbers of ride applications, which are causedby categorial and syntactic alternatives and which492evevtually lead to failure, can be rejected or put off by thelinear search of an input sentence.In this paper, we have focussed on the parsing ofEnglish, but this method is also ve~ T effective for Japanese,inasmuch as it has similar features to English.
Forexample, a Japanese sentence also requires a verb, a nounphrase requires a noun, etc, and many structttres involvediscontinuities uch as "shika -- nai", "kara ..... made","to --- to --- to", etc.In our system, look-ahead conditions are writtenmanually.
A compiler which can automatically attach look-ahead conditions at source ATN is being considered for afuture system.The look-ahead parsing also works very effectively forscientific and technical documents ince these docuntentsare more complicated and longer than communicationdialogues (see 3.2)\[Nogami 1987\].AcknowledgementsWe would like to thank Harold Somers (the Centre forComputational Linguistics, University of ManchesterInstitute of Science and Technology, England) for hiscomments on an earlier version of this paper.References\[Aho 1972\] Aho, A. V. and Ullman, J. D.: The Theory of Parsing,Translation, and Compiling, Volume 1: Parsing.
Prentice-Hall, lnc,Englewood Cliffs, N. J., 1972.\[Amano 1986\] AMANO shin-ya (1986).
'fhe Toshiba MachineTranslation system.
Japan Computer Quarterly 64 "MachineTranslation - Threat or Tool" (Japan Information ProcessingDevelopment Center, Tokyo), 32-35\[Amano 1987\] AMANO Shin-ya, Hideki H1RAKAWA & YoshinaoTSUTSUMI (1987).
TAURAS: The Toshiba Machine TranslationSystem.
Machine Translation Summit, Manuscripts & Program,Tokyo: Japan Electric Industry Development Association (JEIDA), 15-23.\[Amano 1988a\] AMANO shin-ya, Kimihito TAKEDA, KoichiHASEBE & Hideki HIRAKAWA (1988).
Experiment of AutomaticTranslation Typing Phone (in Japanese).
Information ProcessingSociety of Japan (1988.3.16-18)\[Amano 1988b\] AMANO Shin-ya, Hiroyasu NOGAMI & SeijiMIIKE (1988).
A step towards Telecommunication with MachineInterpreter.
Second International Conference on Theoretical andMethodological Issues in Machine Translation of Natural Languages,June 12-14, 1988 (CMU)\[Asahioka 1988\] ASAHIOKA Yoshimi, Yumiko YOSHIMURA, SeijiMIIKE & Hiroyasu NOGAMI (1988).
Analysis of the TranslatedDialogue by Automatic Translation Typing Phone (in Japanese).Information Processing Society of Japan (1988.3.
16-18)\[Marcus 1980\] Marcus, M.: A Theory of Syntactic Recognition forNatural Language, MIT Press, 1980\[Miike 1988\] MIIKE Seiji, Koichi HASEBE, Harold SOMERS & Shin-ya AMANO (1988).
Experiences with an on-line translatingdialngu,~ system.
26th Ammal Meeting of the ACLINoganfi 1987\] NOGAMI Hiroy'asu, Yumiko SUGIURA, HidekiII1RAKAWA & Shin-ya AMANO.
English Analysis in an English-Japanes,: Machine Translation System (in Japanese).
InformationPcocessing Society of Japau 61-4 (1987.
5.22)\[Pereira 1980\] Pereira, F. C. N. and Warren, H. D.: Definite ClauseGl'amm;~s /or I_.anguage Analysis, A Survey of the Formalism and aComparison with Augmented Transition Networks.
Artificialintelligence, 13, 1980r/'akeda 1988\] TAKEDA Kimihito, Koiehi HASEBE & Shin-yaAMANO (1988).
System Configuration of Automatic TranslationTyping Phone (in Japanese), Information Processing Society of Japan(1988.3.
16..18)\[Woods 1970\] Woods, W, A.: Transition Network Grammars forNatural Language Analysis, CACM Vol.
13, pp.
591-606, 1970AppendixOIALOGUEUSING REYBOARDSSWITZERLANO JAPANGeneral set-up- . "
: "  ~ .
, .
, , ~ _ .lello.
Takeda.
I~ nalre is ~zarlEe.\[ live in geneva, her I come from Califorlia.
(e~, ~t ~ l  I ~S 12 ~,~ars old.tery intel~sti~o, ~tlick, and u~ful !lu~ mnv la~uaoes do va~ speak, Takc~a ?~t is ok.t~ p~ is TaV~da.PI~SO 'tell m ~r  r~..Where do ~ live?Ha~ ~ visited JaPan?Please tell m the i~or~ssion of this mchirThank you,\[ cao speak oflly JaPa0~.!
iSwitzerlandl i ; ,~ I .
.~a- -~ .
.
.
.
.
.
.
; I J}~t l i~ , ; ,~- , i ,~ ,  i .IIB~IIIIJ::II~M~I|II~mi IlJJl Jllll I IIIL LLThat is ok.J apanScreen displayr ~- - -  ASJO00 - -~  El i i El , hS3000I !
I , J2 .E2~-~ I ~omaun~i~t  ~- -~- I~- -1  \[ i K\ [ -~-- -~--~ eommunlcat lon~-{-~2a~ \ ]~~j2 ,E I , J Il i l  "S------\]-~L \[ func t i  o11 J y - -kTo l  ep_~'" i  ....... i ' " \ [ ~  \[ fu l ler  ,or, J-~ s~'stell I ~ \ ] , - J2\]2,E2 J2 ,E2................................ }iii "\['n Put i  ii S~i t zer i a i i i i  j i i  t ra.
'siat i o6Oi" i iT \ [ j  2 i i i i p i t i i i J  A PAN\[ E2 i t  raasi at i o, ioi" j  2Swi  t zoeta~ld  JapanSystem configuration493
