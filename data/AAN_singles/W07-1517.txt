Proceedings of the Linguistic Annotation Workshop, pages 109?112,Prague, June 2007. c?2007 Association for Computational LinguisticsCombining Independent Syntactic and Semantic Annotation SchemesMarc Verhagen, Amber Stubbs and James PustejovskyComputer Science DepartmentBrandeis University, Waltham, USA{marc,astubbs,jamesp}@cs.brandeis.eduAbstractWe present MAIS, a UIMA-based environ-ment for combining information from var-ious annotated resources.
Each resourcecontains one mode of linguistic annotationand remains independent from the other re-sources.
Interactions between annotationsare defined based on use cases.1 IntroductionMAIS is designed to allow easy access to a set oflinguistic annotations.
It embodies a methodologyto define interactions between separate annotationschemes where each interaction is based on a usecase.
With MAIS, we adopt the following require-ments for the interoperability of syntactic and se-mantic annotations:1.
Each annotation scheme has its own philosophyand is independent from the other annotations.Simple and generally available interfaces pro-vide access to the content of each annotationscheme.2.
Interactions between annotations are not de-fined a priori, but based on use cases.3.
Simple tree-based and one-directional merg-ing of annotations is useful for visualization ofoverlap between schemes.The annotation schemes currently embedded inMAIS are the Proposition Bank (Palmer et al,2005), NomBank (Meyers et al, 2004) and Time-Bank (Pustejovsky et al, 2003).
Other linguis-tics annotation schemes like the opinion annotation(Wiebe et al, 2005), named entity annotation, anddiscourse annotation (Miltsakaki et al, 2004) willbe added in the future.In the next section, we elaborate on the firsttwo requirements mentioned above and present theMAIS methodology to achieve interoperability ofannotations.
In section 3, we present the XBankBrowser, a unified browser that allows researchersto inspect overlap between annotation schemes.2 Interoperability of AnnotationsOur goal is not to define a static merger of all anno-tation schemes.
Rather, we avoid defining a poten-tially complex interlingua and instead focus on howinformation from different sources can be combinedpragmatically.
A high-level schematic representa-tion of the system architecture is given in figure 1.PropBank NomBank TimeBankPropBank NomBank TimeBankannotation     initializersinterface interface interfacecase-basedinteractioncase-basedinteractionGUI GUIFigure 1: Architecture of MAIS109The simple and extensible interoperability ofMAIS can be put in place using three components: aunified environment that stores the annotations andimplements some common functionality, a set of an-notation interfaces, and a set of case-based interac-tions.2.1 Unified EnvironmentAll annotations are embedded as stand-off annota-tions in a unified environment in which each annota-tion has its own namespace.
This unified environ-ment takes care of some basic functionality.
Forexample, given a tag from one annotation scheme,there is a method that returns tags from other anno-tation schemes that have the same text extent or tagsthat have an overlap in text extent.
The unified envi-ronment chosen for MAIS is UIMA, the open plat-form for unstructured information analysis createdby IBM.1UIMA implements a common data representationnamed CAS (Common Analysis Structure) that pro-vides read and write access to the documents beinganalyzed.
Existing annotations can be imported intoa CAS using CAS Initializers.
UIMA also providesa framework for Analysis Engines: modules that canread from and write to a CAS and that can be com-bined into a complex work flow.2.2 Annotation InterfacesIn the unified environment, the individual annota-tions are independent from each other and they areconsidered immutable.
Each annotation defines aninterface through which salient details of the anno-tations can be retrieved.
For example, annotationschemes that encodes predicate-argument structure,that is, PropBank and NomBank, define methodslikeargs-of-relation(pred)arg-of-relation(pred, arg)relation-of-argument(arg)Similarly, the interface for TimeBank includesmethods likerel-between(eventi, eventj)events-before(event)event-anchorings(event)1http://www.research.ibm.com/UIMA/The arguments to these methods are not stringsbut text positions, where each text position containsan offset and a document identifier.
Return valuesare also text positions.
All interfaces are required toinclude a method that returns the tuples that match agiven string:get-locations(string, type)This method returns a set of text positions.
Eachtext position points to a location where the inputstring occurs as being of the given type.
For Time-Bank, the type could be event or time, for Prop-Bank and NomBank, more appropriate values arerel or arg0.2.3 Case-based InteractionsMost of the integration work occurs in the interac-tion components.
Specific interactions can be builtusing the unified environment and the specified in-terfaces of each annotation scheme.Take for example, the use case of an entity chron-icle (Pustejovsky and Verhagen, 2007).
An entitychronicle follows an entity through time, display-ing what events an entity was engaged in, how theseevents are anchored to time expressions, and how theevents are ordered relative to each other.
Such anapplication depends on three kinds of information:identification of named entities, predicate-argumentstructure, and temporal relations.
Each of these de-rive from a separate annotation scheme.
A use casecan be built using the interfaces for each annotation:?
the named entity annotation returns the textextents of the named entity, using the gen-eral method get-locations(string,type)?
the predicate-argument annotation (accessedthrough the PropBank and NomBank inter-faces) returns the predicates that go with anamed-entity argument, repeatedly using themethod relation-of-argument(arg)?
finally, the temporal annotation returns the tem-poral relations between all those predicates,calling rel-between(eventi, eventj)on all pairs of predicates110Note that named entity annotation is not inte-grated into the current system.
As a stopgap mea-sure we use a pre-compiled list of named entitiesand feed elements of this list into the PropBankand NomBank interfaces, asking for those text po-sitions where the entity is expressed as an argu-ment.
This shows the utility of a general methodlike get-locations(string, type).Each case-based interaction is implemented usingone or more UIMA analysis engines.
It should benoted that the analysis engines used for the entitychronicler do not add data to the common data repre-sentation.
This is not a principled choice: if addingnew data to the CAS is useful then it can be part ofthe case-based interaction, but these added data arenot integrated into existing annotations, rather, theyare added as a separate secondary resource.2The point of this approach is that applications canbe built pragmatically, using only those resourcesthat are needed.
It does not depend on fully mergedsyntactic and semantic representations.
The entitychronicle, for example, does not require discourseannotation, opinion annotation or any other resourceexcept for the three discussed before.
An a priorirequirement to have a unified representation intro-duces complexities that go beyond what?s needed forindividual applications.This is not to say that a unified representation isnot useful on its own, there is obvious theoreticalinterest in thoroughly exploring how annotations re-late to each other.
But we feel that the unified repre-sentation is not needed for most, if not all, practicalapplications.3 The XBank BrowserThe unified browser, named the XBank Browser, isintended as a convenience for researchers.
It showsthe overlap between different annotations.
Annota-tions from different schemes are merged into oneXML representation and a set of cascading stylesheets is used to display the information.2In fact, for the entity chronicle it would be useful to haveextra data available.
The current implementation uses what?sprovided by the basic resources plus a few heuristics to super-ficially merge data from separate documents.
But a more in-formative chronicle along the lines of (Pustejovsky and Verha-gen, 2007) would require more temporal links than available inTimeBank.
These can be pre-compiled and added using a dedi-cated analysis engine.The XBank Browser does not adhere to the MAISphilosophy that all resources are independent.
In-stead, it designates one syntactic annotation to pro-vide the basic shape of the XML tree and requirestags from other annotations to find landing spots inthe basic tree.The Penn Treebank annotation (Marcus et al,1993) was chosen to be the first among equals: itis the starting point for the merger and data fromother annotations are attached at tree nodes.
Cur-rently, only one heuristic is used to merge in datafrom other sources: go up the tree to find a Treebankconstituent that contains the entire extent of the tagthat is merged in, then select the head of this con-stituent.
A more sophisticated approach would con-sist of two steps:?
first try to find an exact match of the importedtag with a Treebank constituent,?
if that fails, find the constituent that containsthe entire tag that is merged in, and select thisconstituentIn the latter case, there can be an option to selectthe head rather than the whole constituent.
In anycase, the attached node will be marked if its originalextent does not line up with the extent at the treenode.It should be noted that this merging is one-directional since no attempt is made to change theshape of the tree defined by the Treebank annota-tion.The unified browser currently displays markupsfrom the Proposition Bank, NomBank, TimeBankand the Discourse Treebank.
Tags from individualschemes can be hidden as desired.
The main prob-lem with the XBank Browser is that there is only alimited amount of visual clues that can be used todistinguish individual components from each otherand cognitive overload restricts how many annota-tion schemes can be viewed at the same time.
Nev-ertheless, the browser does show how a limited num-ber of annotation schemes relate to each other.All functionality of the browser can be accessed athttp://timeml.org/ula/.
An idea of whatit looks like can be gleaned from the screenshot dis-played in figure 2.
In this figure, boxes representrelations from PropBank or NomBank and shaded111Figure 2: A glimpse of the XBank Browserbackgrounds represent arguments.
Superscripts areindexes that identify relations, subscripts identifywhat relation an argument belongs to.
Red fontsindicate events from TimeBank.
Note that the realbrowser is barely done justice by this picture be-cause the browser?s use of color is not visible.4 ConclusionWe described MAIS, an environment that imple-ments interoperability between syntactic and seman-tic annotation schemes.
The kind of interoperabil-ity proposed herein does not require an elaboraterepresentational structure that allows the interaction.Rather, it relies on independent annotation schemeswith interfaces to the outside world that interactgiven a specific use case.
The more annotationsthere are, the more interactions can be defined.
Thecomplexity of the methodology is not bound by thenumber of annotation schemes integrated but by thecomplexity of the use cases.5 AcknowledgmentsThe work reported in this paper was performed aspart of the project ?Towards a Comprehensive Lin-guistic Annotation of Language?, and supported un-der award CNS-0551615 of the National ScienceFoundation.ReferencesMitchell Marcus, Beatrice Santorini, and Mary AnnMarcinkiewicz.
1993.
Building a Large AnnotatedCorpus of English: The Penn Treeb.
ComputationalLinguistics, 19(2):313?330.A.
Meyers, R. Reeves, C. Macleod, R. Szekely, V. Zielin-ska, B.
Young, and R. Grishman.
2004.
The nombankproject: An interim report.
In A. Meyers, editor, HLT-NAACL 2004 Workshop: Frontiers in Corpus Annota-tion, pages 24?31, Boston, Massachusetts, USA, May2 - May 7.
Association for Computational Linguistics.Eleni Miltsakaki, Rashmi Prasad, Aravind Joshi, andBonnie Webber.
2004.
The penn discourse treebank.In Proceedings of the Language Resources and Evalu-ation Conference, Lisbon, Portugal.Martha Palmer, Paul Kingsbury, and Daniel Gildea.2005.
The Proposition Bank: An Annotated Cor-pus of Semantic Roles.
Computational Linguistics,31(1):71?106.James Pustejovsky and Marc Verhagen.
2007.
Con-structing event-based entity chronicles.
In Proceed-ings of the IWCS-7, Tilburg, The Netherlands.James Pustejovsky, Patrick Hanks, Roser Saur?
?, AndrewSee, Robert Gaizauskas, Andrea Setzer, DragomirRadev, Beth Sundheim, David Day, Lisa Ferro, andMarcia Lazo.
2003.
The timebank corpus.
In Pro-ceedings of Corpus Linguistics, pages 647?656.Janyce Wiebe, Theresa Wilson, and Claire Cardie.
2005.Annotating expressions of opinions and emotions inlanguage.
Language Resources and Evaluation, 39(2-3):165?210.112
