RULE-BASED INFLEXIONAL ANALYSISZbigniew JurkiewlczUniversity of Warsaw, Institute of InformaticsPalac kultury i naukl, 00-901 Warszawa, P.O.Box 1210, PolandThis paper presents a system for representation and useof inflexlonal knowledge for Polish language.
By inflexlonalknowledge we mean information about rules of inflection/de-flection for regu l~ words together with a llst of exceptions,Such knowledge can be successfully manipulated by a rule-basedsys tem.
The research  i s  a par t  o f  b ig  under tak in~,  a imed atconst ruct ion  of  a sys tem ab le  to  converse  in  Po l i sh  w i thcasual user.The problem we are concerned with may be stated asfollows.
For each word in input sentence the system shouldfind its basic form and dictionary i~ ormatlon connected withIt.The simplest approach to this problem is to store allforms of words in the forms dictionary, which associates themwith their bsslc forms.
This method is acceptable for smallsets of words.
It places too big strain on system resourcesfor bigger dictionaries.
T~e way to minimize resource usageis to exploit regularities in the inflection.Each isn6uage possesses some regnllarltes in its IDflex-ion.
The extent of these regularities is different in differ-ent languages.
Also the number of different inflectional formsmay be different, e.g.
an average polish verb can have about100 forms.
This forced us to think seriously about using re-gularltles even in lexlcal components for small subsets of~' - 146 -of lan~ageo We view the inflectionsl analysis system ascomposed out of %~o parts~- a n  exception dictionary wi~h all forms taken as it-- a mechanism e~9~oiti ~ ~e@~lax~ties for getting neoess-ax-y efficiency in ses~ch and ~v ing  resources.We based our mechanism on the analysis of endings.
Theending is defined as a ps~t of word which is changed whilereducing the word to its b~sic (d~Ictionax~) form.
Polishlanguage is characterized by many rules of deflection, whichmay be applicable to a given ending?
A single word may beinterpreted in as many w~s as many endings we can disting-uish in it, multiplied by a number o f  applicable rules foreach ending.
Therefore such candidate ending must be confirm-ed by checking result in the d ic t ion~ of basic forms afterapplying proposed deflection rule.The described knowledge was written down in rule-basedsystem "FORS".
"PORS" is rather classical forwax~-driven rulesystem with some degree of extensibility.
I% is written inprogramming language LISP and is composed out of three parts:- facts, represented as list structures stored in afully indexed data base8- rules of the formcondition =~ aotlon action ...- control mechanism for choosing and applying rules.Eaoh condition is a sequence of patterns of faots,which must be asserted in a database for rule to be applicab-le.Patterns may contain typed variables.
The type Of avariable is identified by one-letter long prefix.
Prefix mustbe a non~alphanumex~Ical character.
Variable type may be defin-ed by providing matching functions for this type.147 -I n f lex iona l  knowledge i s  represented  in  "YORS" as fo l lows .Each d ic t ionary  ent ry  is represented  as fac t  of the fo l low ingforms(ENTRY (BASIC-PORU) (CATEGORY) (OTHER PARAMETERS))The word cur rent ly  processed i s  saved asz(~C~WD(W0~))The exceptions are represented as rules 'of the fore(~ED~D (WO~-FO~))  (E~TR?
(BASlC-FO~)...)C~SWEa...)The" ru les  fo r  de f lec t ion  by endings replacement are s tored  as(~C~IVED *VAa-(~DINGI)) (E~TR~ ~Wa-(E~DI~) ...)(~S~R...)The prefix ~ is used for variables typed "suffixed"?
Allvariables in "FORS" get valuss by matohlng to fact elements?For su f f i xed  var iab le  without va lue ,  the va lue  i s  ass igneda f te r  cut t ing  a g iven  ending from i tem element ( i f  poss ib le ,otherwise the matching fa i l s ) ?
While matoh?ng su f f i xed  var iab -le  which already7 has some va luer  F ina l  va lue  i s  obta ined  byconcatenat ing  ~iven guf ix  to i t sThere may ex is t  msn~ oompeti~E ru les  fo r  recogn izedending.
Also,  fo r  a g iven word a coup le  of a l lowed endingsmay be lndent i f ied  (e ?g ?
one le t te r  long,  two le t te rs  longe tc . )
.
The cont ro l  component in  "PORe-.
a l lows to spec i fy  thesequencing between such complet ing ru les .
In  a cur rent  vers ion ,the set  of ru les  fo r  regu lar  endings i s  d iv ided  in to  ~oupsaccord ing to the ending in(RECEIVED, ?
?
)pattern.
We amocla~e a node with each such group.
The nodesform a directed graph, called control graph.
We associate anode with  except ion  ru les  group too.
One node i s  se lec ted  asa staz~__ing node.
The ares in this ~aph specify (partial)- 148  -order  between nodeeo ~hus de f in ing  eoquen@L~ between groupsof ru les .
AI?
nodes must be aocese4blo from s tar t inK  node (4 .o ther  terms,  @cat.el  graph must be a dLreoted aoyol?o oonno@t-The .system works in  cyc les .
At each cyc le  I t  roads thenex~ word from input  sentence and t r~e8 to f ind  a ru le  app l i~-ab le  to thee word.
Rules 8~re t r~ed a@coz~LnK to the orderde f ined  by a cont ro l  graph, 8 tar t inK  from the e tar t~ node.For each node, the ru les  ansoo la ted  with i t  are  @hsoked,unt i l  one i s  found wi th  sat i s f ied  cond i t ions  This ru le  i s  thenrun  and the next  cyc le  beg ins .
I f  no ru le  wan app\]~Loable,system goes to one of successor  nodes,  guided by analysed word~he advantages of represent inK  in f lec t ione?
knowledge insuch a form are mango The system i s  modular,  because each ru leis independent  from all others .
Therefore ru les  may be addedo~ de le ted  at  will, a l lowing add i t iona l  sources of knowledgeto  be t r ied .The beha~our  of the 8yatem Is  eas i ly  observable  by non-proKraumer ( in  linguistic terms such as ru les ,  end?nKs e to .
)oThe set  of ru les  may be ad jus ted  to a g iven  app l i ca t ion ,espeo ie l l y  fo r  smal l  systems with spec ia l i sed  d io t ionar ieseThe independent  cont ro l  component a l lows to exper2mentwi th  d i f fe rent  ru le  groupings in  the search of min imizat ionof resource usage.
The grouping ac@ord~ to the oonoludad' syntact i c  category  may e l low to exp lo i t  syntact i c  expectat ions ,prowlded from parser .
As fo r  .now, we succeeded in  incorporat -in  K only  most popular  de f lec t ion  ru les  (about 600 of them)e Weare go i~ to  inoorporat~e some add i t ione l  phonet ic  ru les  totake care ~f a l te ra t ions .
This could hopefu l ly  dimin:l.sh thenumber of de f lec t ion  r~ les .- 149 -
