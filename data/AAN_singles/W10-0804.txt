Proceedings of the NAACL HLT Workshop on Extracting and Using Constructions in Computational Linguistics, pages 25?31,Los Angeles, California, June 2010. c?2010 Association for Computational LinguisticsStringNet as a Computational Resource for Discoveringand Investigating Linguistic ConstructionsDavid Wible Nai-Lung TsaoNational Central UniversityNo.300, Jhongda Rd.Jhongli City, Taoyuan County 32001, Taiwanwible@stringnet.org beaktsao@stringnet.orgAbstractWe describe and motivate the design of alexico-grammatical knowledgebase calledStringNet and illustrate its significance for re-search into constructional phenomena in Eng-lish.
StringNet consists of a massive archiveof what we call hybrid n-grams.
Unlike tradi-tional n-grams, hybrid n-grams can consist ofany co-occurring combination of POS tags,lexemes, and specific word forms.
Further, wedetect and represent superordinate and subor-dinate relations among hybrid n-grams bycross-indexing, allowing the navigation ofStringNet through these hierarchies, from spe-cific fixed expressions (?It?s the thought thatcounts?)
up to their hosting proto-constructions (e.g.
the It Cleft construction:?it?s the [noun] that [verb]?).
StringNet sup-ports discovery of grammatical dependencies(e.g., subject-verb agreement) in non-canonical configurations as well as lexical de-pendencies (e.g., adjective/noun collocationsspecific to families of constructions).1 IntroductionConstructions have posed persistent challenges tothe field of computational linguistics (Baldwin etal 2004; Sag et al2002; Zhang et al2006).
Chal-lenges to both statistical and symbolic approachesarise, for example, from the meager degree of pro-ductivity and non-canonical structures of manyconstructions and, as a loosely defined family oflinguistic phenomena, their varied mix of regular-ity and idiomicity (Fillmore, Kay, and O?Connor1988).
It has been argued for decades that con-structions are central rather than peripheral to anyadequate account of linguistic knowledge and thatthey pose substantial challenges to mainstreamaccounts of language (Bolinger, 1977, 1985; Fill-more, Kay, and O?Connor, 1988; Goldberg, 1995;inter alia).
But the recent attention they have beenreceiving in computational research is perhaps duemore to their status as troublemakers (or a ?pain inthe neck?, Sag et al2002).
Baldwin et al(2004)found, for example, that 39% of parse failures onclean data (BNC) occurred on constructions.
(SeeZhang et al(2006) for other such findings.)
Thus,it is becoming urgent to ?deal with?
constructionsfor the sake of NLP.
In this paper, however, wewould like to shift perspective a bit to explore in-stead the application of computational resourcesfor the sake of constructions.
Our longer term aimis to broaden and deepen research on constructionsin order to support the learning and teaching ofconstructions in second language education.
Twobasic challenges we address are: (1) the varied mixof regularity and idiomicity to be found within thewide range of constructions in a language (Fill-more, Kay, and O?Connor, 1988; Jackendoff, 2008inter alia), and (2) the inheritance-like hierarchicalrelations holding between and among differentconstructions as instances of more general con-structions or proto-constructions subsuming otherconstructions as sub-cases (Goldberg 1995 interalia).
To address these, we introduce a lexico-grammatical knowledgebase called StringNet anddescribe some ways that it can support the investi-gation of constructions.Within the broad range of definitions for con-structions, one widely shared premise is that thetraditional division between lexical knowledge onthe one hand and grammatical rules on the other isan artificial one.
There are huge tracts of linguisticterritory lying between the lexical and the gram-matical which usage-attuned linguists have seen asnot simply a residue of undiscovered deeper gen-eral principles but as the actual lay of the linguisticland (Bolinger 1977).
We have taken this lexico-grammatical territory as a core target of the workwe report here.
StringNet has been designed to25provide traction on some of this intermediate ter-rain.The paper is organized as follows.
Section 2 de-scribes and motivates the basic approach we havetaken in designing StringNet.
Section 3 describesthe design of StringNet itself.
In Section 4, we il-lustrate the significance of StringNet for construc-tion research with some extended examples.Section 5 is the conclusion.2 Background and ApproachThe specific approach we take to designingStringNet is motivated by the varied mixture ofidiomicity and regularity exhibited by construc-tions mentioned above and the problems this posesboth for symbolic and statistical approaches incomputational linguistics.
To frame the propertiesof constructions that we hope StringNet can helpaddress, we make use of Fillmore, Kay, andO?Connor?s distinction between substantive andformal idioms (1988), the latter of which theycategorize eventually under ?grammatical con-structions?
(p. 506).
Substantive (or ?lexicallyfilled?)
idioms are those fixed at the lexical level,that is, lexical strings relatively frozen except per-haps for inflectional variation.
Among examplesthey site are pull a fast one, all of a sudden, kickthe bucket.
Others, extracted by StringNet, wouldinclude as a matter of fact, at a moment?s notice,just to be on the safe side, and a massive inventoryof other fixed strings.
In contrast to substantiveidioms, formal (or ?lexically open?)
idioms ?
?aresyntactic patterns dedicated to semantic and prag-matic purposes not knowable from their formalone?
(p. 505) These would include such expres-sions detected with StringNet as ?bring [pnp1] to[dps] senses,?
?stop [pnp] in [dps] tracks,?
?It issafe to [verb] that?
(e.g., It is safe to as-sume/say/predict that),?
?There is a tendency for[noun] to [verb],?
?
[verb][dps] socks off?
(e.g.,knock your socks off).
As mentioned above, onFillmore et als analysis, it is the latter type, theformal idioms, which are eventually ?absorbed intothe category of grammatical constructions?
(p.506).
Crucially for us, however, they point out thepotential significance of substantive (lexically1 The glosses for the POS tags appearing in the paper, takenfrom CLAWS 5 tagset is are follows: pnp = pronoun, dps =possessive determiner, nn1 = singular noun, nn2 = plural noun,vvz = present 3rd person singular verb; vm0 = modal verb.filled) idioms for construction research.
A substan-tive or frozen idiom may be a sub-case of a formalor lexically open idiom.
Our example of this is thelexically filled idiom ?It?s the thought that counts?with its idiosyncratic interpretation that must belearned as a listeme; it presupposes something sub-standard about a gift or an effort as well as for-giveness of this in light of the good intentions ofthe giver.
Yet much of its meaning derives from itsstatus as an instance of the more general ?It cleft?construction; the focus slot hosts one member of acontrasting pair or set, and that member is assumedto be new information, etc.
).Considering the challenges of extracting andrepresenting these two sorts of expressions, sub-stantive idioms have been the far more tractable ofthe two.
Specifically, substantive, lexically filledidioms are readily susceptible to detection and rep-resentation by traditional n-grams.
It is formal(lexically open) idioms, however, which have beenidentified more closely with constructions, yet theyhave proven much more resistant to extraction bycomputational means; for example, approachesusing n-grams have so far shown little progress inhandling this category of expression.
And parsersfamously have difficulties with their non-canonicalstructures (Baldwin et al2004; Zhang et al2006;inter alia).The design of StringNet is aimed at addressingthree long-recognized qualities of constructions:(1) the non-canonical structures of many of them;(2) their syntagmatic mixing of fixed and substitut-able slots, making them resistant to representationby traditional n-grams; and (3) the hierarchical re-lations holding among them, as, for example, ?it?sthe thought that counts?
instantiates the general ItCleft construction while each arguably warrantsindependent status as a construction.3 Design and Construction of StringNet3.1 OverviewIn this section we describe the design of StringNet.In light of the well-documented problems that con-structions pose for parsers, we eschew parsing atthis stage to see what we can achieve without itfirst.2 StringNet is a corpus-derived knowledge-2 StringNet will provide some natural spaces where shallowparsing could play a well-motivated role, but we leave that forfuture work.26base, automatically extracted from the British Na-tional Corpus (BNC).
The structure of StringNetcan be described in two parts: (1) a special type ofn-grams that we refer to as hybrid n-grams, consti-tuting the core content of StringNet and (2) theinter-relations among these hybrid n-grams, repre-sented by cross-indexing.
We describe and moti-vate these two aspects in turn.3.2 Hybrid n-gramsUnlike traditional n-grams, hybrid n-grams canconsist of co-occurring grams from different levelsof analysis, more specifically, a combination oflexemes, word forms, and parts of speech (POSs)potentially side by side within the same string.
Forexample, ?from my point of view?
is a traditionaln-gram attested in BNC, where the grams are alllexical.
However, our hybrid n-gram extraction, inaddition, detects the substitutability of the secondslot in this string and indicates this substitutabilityby a POS in that position: ?from [dps] point ofview?.
By including POS categories, hybrid n-grams can encode the paradigmatic dimension inaddition to the syntagmatic one represented by tra-ditional n-grams.The hybrid n-grams that constitute StringNet?scontent are derived from BNC.
Specifically, weinclude any contiguous combination of gram typesranging from bi-grams to 8-grams.
Two criteriamust be met for each hybrid n-gram.
(1) It mustinclude at least one lexical gram in the string (thatis, either a lexeme or a specific word form).
Thismeans that all of the hybrid n-grams are ?lexicallyanchored?
to some extent.
And (2) it must be at-tested in BNC at a minimum frequency of five to-kens.There are four categories of grams that can oc-cur in the hybrid n-grams of StringNet.
From spe-cific to general, these categories are: (1) word form(thus, ran, run, and running are three distinct wordforms); (2) lexeme (run, including all its differentinflectional forms: run, ran, running); these areindicated in bold to distinguish them from wordforms; (3) detailed POS category, taken from thelarge CLAWS set of 46 tags ([nn1] for singularnoun); these are marked off in brackets; (4) roughPOS category, taken from abbreviated tagset of 12POS tags ([noun], including plural and singularnouns); indicated with brackets as well to avoidflooding users with too many distinctions in therepresentations.
Further, each hybrid n-gram isindexed to all tokens instantiating it in BNC.
Thus,every token of ?saw the light?
occurring in BNC isindexed to all hybrid n-grams that it satisfies, forexample, indexed to ?
[verb] the light?, ?see [det]light?, ?
[verb] [det] light?, ?saw the [noun]?, andso on.
As mentioned above, only hybrid n-gramsattested by at least five tokens occurring in BNCare kept in StringNet.3.3 Structure of StringNet: Cross-indexing ofHybrid n-gramsSince the inventory of gram types consists of fourcategories and these can stand in subordinate andsuperordinate relation to each other, it becomespossible to find relations of inclusion or subsump-tion between hybrid n-grams.
For the sake of sim-plicity in the user interface, we label these asparent/child relations.Take the tri-gram ?paying attention to?
as an ex-ample.
As a string of word forms, this hybrid n-gram can be considered a child of the hybrid n-grams: pay attention to (where pay indicates thelexeme and includes forms pay, paid, paying).Non-monotonically, then, ?paying attention to?
can(and does) have more than one parent, for exam-ple: pay [noun] to; pay attention [prep]; amongseveral others.
StringNet exhaustively cross-indexes all of these thus-related hybrid n-grams.
(Note that hybrid n-grams can have more compli-cated relations with each other, but these are notindexed in the current StringNet.)
As a massiveinventory of hybrid n-grams and the cross-indexingamong them, StringNet is very large.
For compari-son, the size of our POS-tagged BNC is 4.4 GB.StringNet, which we extracted from BNC, is over aterabyte (over 1,000 GB), about 250 times the sizeof BNC.The hybrid n-grams making up StringNet wereextracted from BNC on the simple criterion of fre-quency (minimum frequency of 5 tokens in BNC),making no use of statistical techniques such asword association measures in the extraction proc-ess.
However, to support queries of StringNet wemust have some criteria for ranking the hybrid n-grams returned in a query result.
For this, we useMI as our default hybrid n-gram association meas-urement.
The MI equation is as follows:27,whereThis equation is well-known as an associationmeasure for collocations consisting of word pairs.However it is not appropriate directly used inmeasuring hybrid n-grams or n-grams in Lex-Checker because it cannot compare n-grams ofdifferent length, i.e with different values of n. Itwould typically be biased toward longer n-grams.Therefore we use a version which normalizes, asfollows:,where hn is the target hybrid n-gram, q is userquery, MI( ) is the traditional MI equation men-tioned above and maxMIn is the maximum MIscore achieved among all of the n-grams of anygiven length n and retrieved for query q.For example, a hybrid tri-gram T=?pay attentionto?
and a hybrid 4-gram Q=?pay attention to the?will be shown in the results of the queryq=?attention?.
Assume MI(T)=5, MI(Q)=7, max-MI3 (?attention?)
=15 and maxMI4  (?attention?)
=20.
Then the Normalized MI(T,q) = 5/15 = 0.334and Normalized MI(Q,q) = 7/20 = 0.35.
So we canrank Q higher than T. MI(hn) will never be greaterthan maxMIn(q) because by stipulation, maxMIn(q)represents the highest MI score of all n-grams at agiven value of n and a query q.
So Normalized MIwill always fall between 0 and 1.
This creates acommon specified range within which MI scoresfor hybrid n-grams of different lengths can beranked.
It is important to note that this rankingmeasure is not incorporated into StringNet itself(e.g., as a criterion for hybrid n-grams to be in-cluded in StringNet).
Rather it is a post hoc meansof ranking search results.
StringNet is compatiblewith other methods of ranking and contains all sta-tistical information needed to run such alternativemeasures.3.4 PruningAs we mention above, hybrid n-grams in StringNetconsist of all possible combinations of word form,lexeme and two types of POS in strings from 2 to 8grams in length.
Thus for every single traditionaln-gram consisting of a string of word forms, thereare numerous hybrid n-grams that also describethat same string.
For a traditional 8-gram, for ex-ample, we create 47!2=32768 different hybrid n-grams (taking into account our criterion that atleast one token has to be a word form or lexeme).Such a large amount of information will cause lowperformance of the StringNet applications.
In or-der to decrease the search space while still keepingmost of the useful information, we introduce prun-ing.
Specifically, pruning is intended to eliminateredundant hybrid n-grams from searches or appli-cations of StringNet.
There are two types of prun-ing we use in StringNet currently: Vertical pruningand Horizontal pruning.Vertical pruning:Vertical pruning considers pairs of hybrid n-gramsthat are identical in length and differ in the identityof some gram in the sequence.
Consider the fol-lowing such pair.a.
hybrid n-gram 1: my point [prep] viewb.
hybrid n-gram 2: my point  of  viewThese 4-grams are identical except for the thirdgram; moreover, the counterpart grams occupyingthat third slot (?of?
and [prep]) stand in an inclu-sion relation, ?of?
being a member of the POScategory [prep].
Recalling our cross-indexing, thisparenthood relation between such hybrid n-gramscan be readily detected.
Pruning of the parent oc-curs in cases where a threshold proportion of theinstances attested in BNC of that parent are alsoinstances of the child.
Consider (a) and (b) above.Here the parent (a) ?my point [prep] view?
wouldbe pruned since all cases of [prep] in this pattern inBNC are indeed cases of the preposition ?of?.Consider now (c), another parent hybrid n-gram of(b) that, in contrast, would not be pruned.c.
hybrid n-gram 3: [dps] point of viewThis parent is retained because ?my?
accountsfor fewer than 80% of the instances of the [dps] inthis pattern.
The retention of ?
[dps] point of view?indicates that more than one possessive pronoun isattested in the [dps] slot of this string in a thresholdproportion of its cases and thus the slot shows sub-28stitutability.
In a word, vertical pruning eliminateshybrid n-grams containing POS grams which donot represent attested substitutability.
Currently,for our StringNet search interface (LexChecker)we prune parents with children that represent over80% of the BNC tokens also described by that par-ent.Horizontal pruning:The main idea of Horizontal pruning is the same asVertical pruning.
The only difference is the axis ofcomparison: For horizontal pruning, two hybrid n-grams for comparison differ only by value of n (ie.,by length).
For example, comparing the hybrid n-gram ?
[dps] point of?
and ?
[dps] point of view,?the shorter one is parent and is pruned if a thresh-old proportion of its instantiations in BNC are alsoinstances of the longer child ?
[dps] point of view.
?In horizontal pruning, the shorter of the two com-pared hybrid n-grams is the potentially redundantone and thus the candidate for pruning.
As with ourMI measure, both vertical and horizontal pruningrate are set post hoc, applied by post-processing,and so are adjustable.4 Illustrating with ExamplesAlthough StringNet can support a wide range ofapplications (such as error detection and correction(Tsao and Wible 2009); document similarity meas-urement, etc.
), for ease of exposition in what fol-lows, we take a search query as our access point toillustrate StringNet content.
Taking eye as ourquery term, StringNet yields a ranked list of 3,765hybrid n-grams containing either this lexeme orone of its inflected forms.
The following are sam-ples from the top 50 (i.e., the first page of results):visible [prep] the naked eyeturning a blind eye toout of the corner of [dps] eye[dps] eyes filled with tearskeeping an eye on the [noun][adv] see eye to eyelook [pers prn] straight in the eyecast a [adj] eye [prep] (e.g., cast a critical eyeover, cast a cold eye on)Each hybrid n-gram listed in a search result isaccompanied by links to examples and parent andchild icons that link to its parent and children hy-brid n-grams.
(See Fig 1 and 2.)
Consider one ofthe hybrid n-grams listed in the results for eye:?keep a close eye on.?
Recalling Fillmore et alsdistinction between substantive and formal idioms,in the case of ?keep a close eye on?
we are at thelevel of the formal (lexically filled) idiom.
Notethat since it is a string of lexical items, as are allsubstantive idioms by definition, this sort can justas easily be extracted and represented using tradi-tional flat n-grams.
StringNet?s hybrid n-grams andtheir cross-indexing, however, allow us to seewhether this is a one-off lexically filled idiom oran instance of a lexically open formal idiom (i.e.,of a construction).
Without hybrid n-grams, thenext step up in abstraction to determine this wouldbe pure POS n-grams (strings of POS categoriesonly) used in the literature (Feldman et al2009;Florian et al2003; Gamon et al2009).
In the caseof ?keep a close eye on?
the corresponding POS n-gram would be ?[verb][det][adj][noun][prep].
?This, however, could describe strings as far afieldas ?buy a new car with?
or ?sequester the entirejury until.?
Our hybrid n-grams are intended toaddress this Goldilocks problem where construc-tional phenomena fall between these two sorts oftraditional n-gram representations evading detec-tion by both.Figure 1: StringNet search interface:?keep a [adj] eye on?Figure 2: Children of ?keep a [adj] eye on?29Navigating from ?keep a close eye on?
upwardthrough the pruned StringNet network using theparent and child links, we find the parent ?keep a[adj] eye on?
instantiated by attested examples?keep a close/watchful/wary/keen eye on.?
An-other parent of ?keep a close eye on?
is ?keep aclose [noun] on?.Tellingly there are only two nouns attested morethan once in the noun slot in this frame: ?keep aclose eye/watch on.?
Both of these parents in turnshare the common parent ?keep a [adj][nn1] on.
?This parent is attested by 268 tokens in BNC.Among these, there are 80 distinct [adj][nn1] pair-ings filling those two POS slots in this hybrid n-gram (e.g., close eye, firm grip, tight rein, closewatch, etc.).
StringNet alows the extraction of thisset of 80 [adj][nn1] pairs and indexes this set tothis specific hybrid n-gram.
This enables a range ofinvestigations.
One direction from here is to ex-plore this particular set of 80 [adj][noun] pairs.
Forexample, we could take this set of pairs as a poten-tial identifying feature set of this construction andsearch StringNet for other hybrid n-grams with thesubstring [adj][noun] to identify those that show alarge overlap with the 80 pairs from ?keep a[adj][noun] on.?
This would constitute an approachto detecting similar constructions or family resem-blances between and among constructions.
Anotherdirection is to see whether ?keep?
is an anchoringlexical element of this construction or substitutablemuch like the [adj] and [noun] slots.
This could beinvestigated in a number of ways in StringNet.
Forexample, by comparing ?keep a [adj][noun] on?with minimally distinct hybrid n-grams with verbsother than ?keep,?
conditional or relative probabil-ity measures could indicate whether that set of 80[adj][noun] pairs from ?keep a [adj][noun] on?
isconditioned by ?keep?
or independent of the par-ticular verb in this string.It?s the thought that counts:For this example, we query StringNet for ?count?and get 436 distinct, unpruned hybrid n-grams forthe verb.
The eight listed below include the top-ranked 5 with 3 others sampled from the top 12,rank order retained:stand up and be countedcount the number of [nn2]count [dps] blessingsit be the [noun] that count[vm0][adv] be counted as[pnp] [vm0] not count onwhat counts as [nn1]count [pronoun reflx] luckyRanked 4th among these is ?it be the [noun] thatcount,?
attested with 21 tokens in BNC.
In 9 ofthese tokens, the [noun] is thought, so of course,navigating down we find ?it?s the thought thatcounts?
as a descendant hybrid n-gram.
Numerousaspects suggest themselves.
First is the relationbetween lexically filled substantive idioms andmore abstract formal idioms that host them.
Start-ing with the lexically filled ?it?s the thought thatcounts?
and navigating upward we note that countremains specified but can host a range of nouns inthe focus position, as indicated by our 4th ranked?it be the [noun] that count.?
The nouns attested inthis slot are: hunt, perception, topic, message, fu-ture, critic, change, books, feelings, character,voter, sport.
Upward from here to a proto ancestor,we reach ?it be the [noun] that [verb],?
a bare-bones frame of the It Cleft construction and host tothe generations of instantiations below it.Dependency DiscoveryIn addition to relations among constructions thatStringNet encodes, it also yields up internal de-pendencies between co-occurring grams within aconstruction.
A grand-daughter of the proto ?ItCleft?
string is telling in this respect: ?it be the[nn1] that [vvz]?.
In other words, StringNet hereindicates morphological agreement in the ?It Cleft?construction.
Statistical work on the tokens ofthese hybrid n-grams can detect such dependenciesautomatically.
Crucially, StringNet provides trac-tion on the grammatical features of quirky aspectsof constructions, that terrain between regularityand idiomicity that poses such persistent problemsfor NLP.5 ConclusionStringNet has been created as a resource for inves-tigating constructions and a range of multiple wordexpressions and for supporting NLP applicationsthat traffic in constructions.
While StringNet hasbeen extracted from BNC, we hope that in turnStringNet can provide a richer setting for investi-gating a range of linguistic phenomena.
For exam-ple, while computational techniques for extractingcollocations have been run on traditional corpora,30deeper and more finely nuanced collocationknowledge can be discovered when the larger con-text of a framing construction is taken into ac-count.
Thus not just extracting [adj][noun]collocations, but ones particular to a framing con-struction or family of constructions.
StringNet alorenders up grammatical dependencies otherwisehard to detect since they are within the non-canonical structures of constructions.
It is hopedthat further cross-indexings of StringNet in the fu-ture can support increasingly nuanced research onconstructions.AcknowledgmentsThe work described in this paper was partiallysupported by the grants from the National ScienceCouncil, Taiwan (Project Nos.
96-2524-S-008-003- and 98-2511-S-008-002-MY2).ReferencesTimothy Baldwin, Emily M. Bender, Dan Flickinger,Ara Kim and Stephan Oepen.
2004.
Road-testing theEnglish Resource Grammar over the British NationalCorpus.
In Proceedings of the Fourth InternationalConference on Language Resources and Evaluation(LREC 2004), Lisbon, Portugal, pp.
2047-2050.Dwight Bolinger.
1977.
Idioms Have Relations.
ForumLinguisticum 2:157-69.Dwight Bolinger.
1985.
Defining the Indefinable.
InRobert Ilson (ed.)
Dictionaries, Lexicography, andLanguage Learning, ELT Documents 120.
Oxford:Pergamon Press, pp.
69-73.Gosse Bouma and Begona Villada.2002.
Corpus-basedacquisition of collocational prepositional phrases.
InProceedings of Computational Linguistics in theNetherlands (CLIN) 2001, University of Twente.Sergey Feldman, Marius Marin, Julie Medero and MariOstendorf.
2009.
Classifying Factored Genres withPart-of-Speech Histograms.
In Proceedings of Hu-man Language Technologies: The 2009 Annual Con-ference of the North American Chapter of theAssociation for Computational Linguistics, Boulder,Colorado, pp.
173-176.Charles J. Fillmore, Paul Kay, and Mary KatherineO?Connor.
1988.
Regularity and Idiomaticity inGrammatical Constructions: the Case of Let Alone.Language 64: 501?538.Radu Florian, Abe Ittycheriah, Hongyan Jing and TongZhang.
2003.
Named Entity Recognition throughClassifier Combination.
In Proceedings of the Sev-enth Conference on Natural Language Learning atHLT-NAACL 2003.Michael Gamon, Claudia Leacock, Chris Brockett, Wil-liam B. Dolan, Jianfeng Gao, Dmitriy Belenko, andAlexandre Klementiev.
2009.
Using Statistical Tech-niques and Web Search to Correct ESL Errors.CALICO Journal, 26(3), pp 491-511.Adele Goldberg, 1995.
Constructions: A ConstructionGrammar Approach to Argument Structure.
Chicago:University of Chicago Press.Ray Jackendoff 1997.
The Boundaries of the Lexicon.in M. Everaert, E.-J.
van der Linden, A. Schenk, andR.
Schreuder, eds., Idioms: Structural and Psycho-logical Perspectives, 133-165.
Hillsdale, NJ: Erl-baum.Ivan Sag, Timothy Baldwin, Francis Bond, AnnCopestake, Dan Flickinger.
2002.
Multiword expres-sions: A pain in the neck for NLP.
In Proceedings ofthe 3rd International Conference on Intelligent TextProcessing and Computational Linguistics (CICLing-2002), Mexico City, Mexico, pp.
1-15.Nai-Lung Tsao and David Wible.
2009.
A Method forUnsupervised Lexical Error Detection and Correction.The NAACL Workshop on Innovative Use of NLP forBuilding Educational Applications, Boulder, Colo-rado, pp.
51-54.Yi Zhang, Valia Kordoni, Aline Villavicencio, MarcoIdiart.
2006.
Automated Multiword Expression Pre-diction for Grammar Engineering.
In Proceedings ofthe Workshop on Multiword Expressions: Identifyingand Exploiting Underlying Properties.
COLING-ACL2006.
Sydney.
Australia.31
