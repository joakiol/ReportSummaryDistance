SYNTACTIC- I\]~EAD- DRIVEN (zlENERA'I'IONEsther K6nig*Institute for Computational Linguistics, Azenbergstr.12, 70174 Stuttgart,Germany, esther@ims.uni-stuttgart.deAbstractThe previously proposed semanl ic -head-dr iw ' .n  Ken -eration methods run into problems if none of thedaughter eonstituents in the syntact.o-semantic ruleschemata of a grammar fits the definition of a semantichead given in \[Shieber et al, 1990\].
This is the casefor the semantic analysis rnles of certain constraint-based semantic representations, e.g.
UnderspecifiedDiscourse R,epresentation Structures (UI)RSs) \[l!
'rankand R.eyle, 1992\].Since head-driven generation in general has its me>its, we simply return to a syntactic definition ofqmad' and demonstrate the feasibility of synlac l ic -head-clriveu generation.
In addition to its generality,a syntactic-head-driven algorithm provides a basis fora logically well-defined treatment of the nmvement of(syntactic) heads, for which only ad-hoc solutions ex-isted, so far.1 IntroductionIIead-driven generation methods combine both, top-clown search and bottom-np combination, in an idealway.
\[Shieber el al., 1990\] proposed to define the'head' constituent I of phrase with category a~ on se-mant ic  grounds: the semantic representations of hand z are identical.
This puts a strong restrictionon the shape of semantic analysis rules: one of theleaves must share its semantic form with the.
rootnode.
IIowever, there are composition rules for seman-tic representations which violate this restriction, e.g.tim schemata for the construction of UnderspecifiedDiscourse It,epresentatim, Structures (UI)ILSs) \[l"rankand Reyle, 1992\] where, in general, the root of a treeis associated with a strictly larger semantic structure(,hal, a,ly of I, he leaves.
Ill order to make at generationmethod available for grammars wl,ich do not followthe striet notion of a semantic head, a syntact ic -head-driven generation algorithm is presented, which canbe specialized to generate from UDRSs.
In a secondstep, the method will be extended in order to han-dle the movement of (syntactic) heads in a logicallywell-defined manner .The (tactical) generation proble.m is tim task togenerate a string from a semantic representation ac-cording to the syntax-semantics-relation defined in agiven grammar.
Let's assume that the latter relation*The research reported here has been funded by the Sonder-forsclmngsbereidt 340 "Sprachtheorctische GrmMlagen ffir dieComputerl lngulst ik",  a project of the German National ScienceFoundation I)I,'G.is stated by pairs of trees.
The left tree stages a lo-cal syntactic dependeacy, i.e.
the dominance relationbetween a root node and a set of leaf nodes and thelinear precedence relation among the leaves.
The righttree defines the relation among the semantic represen-tation of the root and the semantic representations ofthe leaves.
We assume that there is a one-to-one mapfrom the nonterminal leaf nodes of the (local) syntaxtree on the le.af nodes of the.
(locM) semantic deriw~tiontree.
Example:np vp NP VPi i t I,_ _ _ 5_-55, .
.
.
.If one assumes a pairwise linking from M't to rightthen the links between the two trees can be on,itted.Although such pairs of trees are reminiscent of syn-chronons trees in TAG's \[Shieber and Schabes, 1991\],they are simpler in wtrious ways, in particular be-cause we will nol make use of the adjunction operM.ionlater on.
In essence, pairs of trees are just a graph-ical notation for what has been put forward as the'rule-to-rule'-hypothesis, el'.
\[Gazdar el al., 1985\], thefact that in the grammar each syntax rule is relatedwith a semantic analysis rule.
However, on the longrun, the tree notation suggests a more general relation,e.g.
more internal structure or additional, terminal leafnodes in the local syntax tree.An obvkms way to implement a generation proce-dure (see Fig.l) is to relate the inlmt semantics withthe start symbol of the gramnuu" and then to try to ex-l}and this node in a top-down manner accordiug to therules specitied in tl,e grammar.
This node expansioncorresponds to an application of the (predic l ) - rule inthe following abstract specification of a Lop-down gen-erator.
Generation terminates uccessfully if all theleaf nodes are labeled with terminals (s.ucccss).
Thequestion is which method is used to nmke two, possiblycomplex symbols equal, l'~or the sake of simplicity, weassume that the open leaves at0 resp.
X0 are matchedby (feature) term unification with the correspondingmother nodes in the grammar ule.
llowever, for thesemantic form Xo,  a decidable variant of higher orderunification might be used instead, in order Lo inch, dethe reduction of .\-expressions.
Of course, the.
neces-sary precautions have to be taken in order to avoid theconfusion between object- and meta-level wtriables, cf.\[Shieber el al., 1990\].A clepth-first realization of this abstract op-downalgorithm would work line as long ms tl,e semantic rep-4Z5all leaves of the syntax tree are labeled with terminals (success)Xo XoFigure 1: Top-Down Generation (G grammar description; xl syntactic ategory; Xi semantic representation)resentations of the leaves are always strictly smaller insize as the semantic form of the root node.
But, if theactual semantic decomposition takes place in the lexi-con, the semantic representations of ome subgoals willbe variables, which stand for semantic representationsof any size:Xnp vp, lambda ?
\[Y\]sere walk(Y)walks(2)A strict left-to-right, depth-first expansion of subgoalsmight run into problems with the grammar fragmentin (2) if a left..reeursive up-rule exists, because the se-mantics of the np is only instantiated once the 'scman-tic head' of the vp has been looked up in the lexicon.2 Prev ious  workA top-down, semantic-structure-driven generation al-gorithm has been defined by \[Wedekind, 1988\] whichgives a basis for dynamic subgoal-reordering guided bythe semantic input.
Some proposals have been madefor subgoal reordering at compile-time, .g.
\[Minnenet al, 1993\] elaborating on the work by \[Strzalkowski,1990\].
But there will be no helpful st, bgoal reorderingfor rules with semantic head recnrsion:f l ambda : A "~Obviously, a bottom-up component is required.
Onesolution is to keep to a top-down strategy hut to doa breadth-first search, ef.
\[Kohl, 1992\], which will befair and not delay the access to the lexicon forever,as a pure depth-first strategy does.
Alternatively, onecould adopt a pure bottom-up strategy like the onewhich has been proposed in \[Shieber, 1988\] and whichis presented in Fig.2 in a lfighly schematic manner.
Alexical entry qualifies as a potential leaf node if its se-mantic form is a non-trivial substructure of the inputsemantics (rule (lex)).
The derivation trees are builtup by the (complete}-rule.
Generation finally succeedsif the root node of I, he current syntax tree is labeledwith the start symbol of the grammar and the root ofthe semantic analysis trec with the input semantics.Due to tile exclusion of phr~es with 'empty' seman-tics (which would be trivial substructures of the inputsemantics), tile method always terminates, lIowever,tile lack of top-down guidance will lead, in general,to a lot of non-determinism.
The strong substructurecondition means that the algorithm will be incompletefor grammars which cover semantically void phrmseslike expletive xpressions, particles, and sul)phrascs ofidioms.The head-corner generator in \[van Noord, 1993\] isan illustrative instance of a sophisticated combina-tion of top-down prediction and bottom-up structurebuilding, see Fig.3.
The rule (lez) restricts the selec-tion of lexical entries to those which can be 'linked'to the local goal category (visualized by a dottedline).
According to van Noord, two syntax-semanticspairs are liukable if their semantic forms are identical,i.e.
llnk((x, X), (z;, X)).
The rule (hc-co,aptete) per-forms a 'head-corner' completion step for a (linked)phrase zh, which leads to the prediction of the head'ssisters.
A link marking can be removed if the linkedcategories resp.
the linked semantic forms are identical(rule (local-success)).
Generation succeeds if all theleaves of the syntax tree are labeled with terminalsand if no link markings exist (rule (global-success)).In order to obtain completeness in the general c~e,the inference schemata of the head-corner generatormust be executed by a breadth-first interpreter, sincea depth-first interpreter will loop if the semantic anal-ysis rules admit that subtrees are associated with se-mantic forms which are not proper substructures ofthe input semantics, and if these subtrees can be com-posed recursively.
Such an extreme case would be a re-cursive rule for semantically empty particles: ('empty'semantics i represented by the empty list symbol El):/~  /~  _ \[\] (~)part part X1 X2 xIlowcver, if we a.ssume that structures of that kind donot occur, a depth-first interpreter will be sufficient,e.g.
the inference rules of the algorithm can be encodedand interpreted irectly in Prolog.
Note that van No~ord's method is restricted to grammars where phraseshave always a lexical semantic head.
The algorithm in\[Shleber et al, 1990\] relaxes this condition.476(?Z~/Wl,  ?
?
?
~ tt)r  (~)  if V i, 1 <<_ i <_ r, Xi ~.
G and Xi substructure of Xxo Xoxo Xo \GFigure 2: Bottom-Up Generation (G grammar description; s start symbol; X input semantics; xl syntacticcategory; X," semantic representatiou)all leaves are labeled with terminals and the tree does not contain any dotted lines(+; +)~, ~' (+ +1@tol,.l-success)( / z  / z  ) ~ ( z~, / z  ) ,, ( ,!,, x,)~i !
"E G ~,.1 ti,,k((~, x),  (~;, x;))Xh xo Xoi f  E GFigure 3: IIead-Corner Generator (G grammar description; xi syntactic ategory; Xi semantic representation)477everydref : Xros  : ~F~C8scope  : Scopedre~ : Xros  : J~esscope  : ScopeSeN.
:womaxt sere woman(X)  loves  sere : l ove(X ,Y )Figure 4: A grammar with UDRS-eonstruction rules - lexicon3 Underspec i f ied DiscourseRepresentat ion  StructureIn the following, we will present shortly a semanLicrepresentation formalism and a corresponding set, ofanalysis rules wlfich resist to the definition of 'se-mantic head' as it is required in van Noord's bead-corner algorithm.
\[Reyle, 1993\] developed an infer-ence system for Underspecified Discourse Represen-tation Structures (UDRS's), i.e.
Discourse Represen-tation Structures \[Kamp and Reyle, 1993\] which areunderspecified with respect to scope.
The followingUDll.S represents imultaneously the two readings ofthe sentence 'every  woman loves a man' by leav-ing the exact structural embedding of the quantifiedphrases underspecified.\[ lovo(~, v) \](~)An arrow pointing from X2 to XI is called a subor-dination constraint and means that the formula X2must not have wider scope than Xa.
\[Frank and 1Zeyle,1992\] proposed rules for the construction of UDRS'sin an ItPSG-style syntax, of.
\[Pollard and Sag, 1993\],which are shown in Fig.4 and 5 in a somewhat adaptedmanner.
Semantic composition is performed by thecoindexing of the features dre:f, res,  subj, etc.
whichserve as an interface to the value of the sore feature,the actual semantic representation.
For the phrase-structure tree rooted with s, there is no leaf whichwould fulfill the definition of a semantic head givenin \[Shieber et al, 1990\] or \[van Noord, 1993\].
IIence,the head-corner generator of Fig.3 with a link relationbased on semantic beads will not be applicable.4 Syntact ic -head-dr iven gener-at ion4.1 A new l ink  re la t ionOne could define a weak notion of o semantic headwhich requires that tile semantic form of the semantichead is a (possibly empty) substructure of the rootsemantics.
But this is rather meaningless, incc nowevery leaf will qualify ms a semantic head.
As a wayout, there is still tile notion of a syntactic bead, whichcan serve as the pivot of the generation process.Assmne that Lhe syntactic head leaf for each localsyntax trec has been defined by the grammar writer.We get the following preliminary version of a syntax-based link relation:N,~k( ~,, X), (x,, Xd ) (6)1.  if either x = xi2.
0r x d is a possible syntactic head of xand link( ('~j, Xj), 0", X,) )This is the kind of link relation which is used for pars-ing.
In general, it works line there, because with eachlexlcal lookup a part of the input structure, i.e.
of theinl)ut string, is consumed.
In order to reduce the num-ber of non-termhiating cases for generation, a similarprecantlon t l~ to be added, i.e.
tile hipu~ structureh~ to be taken into account.
The final version of asyntax-based link relation incorporates a test for theweak notion of a semantic bead:li,,k((~,,X), (x; ,Xd) g (7)1. either x = x; andX; is a (possibly empty) substructure of X2.
or zj is a possible syntactic head of xand link((xj, X), (x;, Xd)The substructure check makes only sense if the seman-tics X of the current goal is instautiated.
This might478<Z,dro:\[ : X )scope : Scopesem : Quantres : J ( . )
;  Xscope  : S pe sere .
Rcssere : Quant /8v2  nps elll :scope  : SA'c subj  : X dre f  :sere : Subj obj  : Y scope  :sere : Verb  sere  :Y)OScObjFigure 5: A grammar with UDl(S-construction rules - syntax rules>not be the case, when the proper semantic head andthe syntactic head differ, and a sister goal of the se-mantic head is to be expanded before the head itself.IIence, in general, the sister goals must be reorderedaccording to the degree of instantiation of their se-mantic representations.
In addition to the improvedtermination properties, the condition on the seman-tic representation helps to filter out useless candidatesfrom the lexicon, i.e.
lexical entries which will neverbecome part of the final derivation because their se-mantic representations do not tit.4.2 Grammars  wi th  head movementIn order to simplify the representation i  the following,we assume that each syntax tree in a grammar is iso-morphic to the corresponding semantic analysis tree.This means that both trees can merged into one treeby labeling the nodes with syntax-semantics-pairs:(xo, Xo)(~,x,) (~, x2)(s)In \[Shieber el al., 1990\] an ad-hoc solutiori was pro-posed to enforce termination when the semantic headhas been moved.
By adopting a syntactic-head-drivenstrategy, head-movement does not canse a problem ifthe landing site of the head is the 'syntactic bead' (orrather: the main fiinctor category of the chmse, incategorial grammar terminology) of a superordinateclause.
This is postulated by syntactic descriptionslike(cPS ,X0) cp~e ~  spcc~~I (vp, Xo)lr(v~,X,)\] I ~Ps/E.~ps\](~, X1) vp s(9)where vp/r,.1 means that the deriwttion of the vp- * uv l Jnode ll~s to include all empty v-leaf.
Ill the exampleill Fig.6, the syntactic head (the c-position) of the cpfwill be visited before the vp is to be derived, hence theexact information of the verb trace will be availablein time.
Similarly for the movement to the 'vorfehl'.l\[owever, if verb second coufign,'ations are describedby a single structure(cp,, Xo)(cp I , Xo)spe e c_..----------'--- ~~ ( 10 )I(xs'~,x~) I ~v/D s , (xI-~,x~)\]vjthe algorithm runs into a de.i~dlock: the vp-node can-not be processed completely, because the semantics ofthe XP-trace is unknown, and the expansion of theXP-filler position wile be delayed for tile same reason.If this syntactic description had to be preferred overthe one in (9), the link relation should be further mod-ified.
The substructure test wrt.
the semantics of thecurrent goal should be replaced by a substructure test479specIvplv dpI IBananen gegesseneatencpscp\]vpcI vp~2I ,lp I vpl v2 hatPeter  I I hasFigure 6: Movement of a complex non-headwrt.
the global input semantics, which leads to a lossof tlexibility, as it has been discussed in connectionwith the pure bottom-up approach.4 .3  Imp lementat ionSince the algorithm has been implemented in the CUFlanguage t, which includes a wa?t-mechanism, the re-odcring of subgoMs can be delegated to CUF.Instead of a full-blown substructure test whichmight be quite complicated on graphs like UDI~S's,only the predicate names (and other essential 'seman-tic' keywords) of the lexical entry are mapped on thecurrent goal semantics.
If such a map is not feasible,this lexical entry is dropped.We restrict the grammars to lexicalized ones.
Agrammar is lexiealized if for every local syntax treethere is at least one preterminal leaf, cf.
\[Sehabes andWaters, 1993\].
Note that lexicalization does not affectthe expressibility of the grammar \[Bar-llillcl el al.,1960\], \[Schabes and Waters, 1993\].
Ilowever, the gen-eration algorithm turns much simpler and hence moreefficient.
There is no need for a transitive link relation,since a goal can match immediately the mother nodeof a preterminal.
The lexicon access and the head-corner completion step can be merged into one ruleschema 2.A version of the Non-Local-Feature principle ofIIPSG has been integrated into the algorithm.
Everynon-head nontcrminM leaf of a local tree must comewith a (possibly empty) multiset of syntax-semanticspairs as the value of its to_b ind:s lash- feature  (f a-ture abbreviated as / ) ,  cf.
example (9).
From thesestatic values, the dynamic inher i ted :s lash-va luesIThe CUF-system is an implementation of a theorem proverfor a Horn clause logic with typed feature terms \[Dt;rre andDorna, 1993\].2An instance of our head-corner generator (without an inte-grated treatment ofmovement) is the UCG-generator by Calderet al \[Calder et al, 1989\] (modulo the use of unary categorytransformation rules) which relies, in addition, on the symme-try of syntactic and semantic head.
A syntactic-head-drlvengenerator for a kind of lexlcallzed grammars has been proposedindependently b \[Kay, 1993\].
Another variant of a lexlcMizedgrammar by \[Dymetman ctal., 1990\] does not make use of thehead-corner idea but rather corresponds to the top-down gen-eration schema presented in Fig.1.
(feature abbreviated ms //) can be calculated duringgeneration, see rule (lex) in Fig.7.
( la )  Choose a lexical entry as the head Xh of thecurrent goal x0.
Then the substructure condition musthold for the corresponding semantic forms Xh and Xo.The/ / -va lue Th mnst be empty.
( lb )  Or choose an element of the //-value 7b ofthe current head z0.
Then the //-value Th becomes\[(xh, Xh) l .
The associated string wh is empty.
(2) There must be a lexicalized tree which connectsthe goal z0 and the chosen head xh.
The/ / -va lue To issplit into disjoint sets 7'1, .
.
.
,  7',, The// -values of thenew subgoals xl, .
.
.
,  :Co are the disjoint set unionsT~ ~ 7~ where 7~  is the /-value of zi in the local treegiven in the grammar.Note that this version of the Non-LocM-Featureprinciple corresponds to the hypothetical reasoningmechanism which is provided by the Lambek eatego-rim grammars \[Lambek, 1958\], \[KSnig, 1994\].
This isil lustrated by the fact that e.g.
the left tree in example(9) can be rendered in categorial grammar notation ascpl / (vp/v ).
IIeuce, the algorithm in Fig.7 has a clearlogical basis.5 Conc lus ionThis paper gives a syntactic-bead-driven generationalgorithm which includes a well-defined treatment ofmoved constituents.
Since it relies on tile notion ofa syntactic head instead of a semantic head it worksalso for grammars where semantic heads are not avail-able in general, like for a grammar which includes se-mantic decomposition rules of (scopally) Underspec-itied Discourse Representation Structures.
By usingthe same notion of head both for parsing and for gen-eration, both techniques become even closer.
In ef-fect, the abstract specifications of the generation algo-r ithms which we gave above, could be read as parsingalgorithms, modulo a few changes (of the success con-dition and the link relation).Generation from Underspecified DI/,S's means thatsentences can be generated from meaning represen-tations which have not been disambiguated with re-gard to quantifier scope.
This is of particular impor-tance for applications in machine translatiou, where480all leaves are labeled with terminals(zh, Xh)1. if IWh(Sll ccegs)~el ,x~) / /7 '~ w'q ('~h, Xh)//7;, (~,.,X.
)//Tt;, .
.
.
.
.
.
uJT",,IWhC= G and Xh substructure of Xo and 7), := I\]or q (~,,, X,,) e 7; .
, ,a 7;, := \[(~,,, Xh)\] ,,,,d .
),, := c(~o, Xo)2. and ~ _ _ ~  G G and "I}~ := 7'I U...U'\[~Figure 7: IIead-Corner Generator for lexicalized grammars (G grammar description; xl syntactic category sym-bol; Xi semantic representation; 7} zlash-values)one wants to avoid the resolution of scope relations aslong as the underspeeified meaning can be rendered inthe source and in the target language.
Future workshould consider more the strategic part of the genera-tion problem, e.g.
try to find heuristics and strategieswhich handle situations of 'scope mismatch' where onel anguage has  to be more  prec ise w i th  regard  to scopethan the other.References\[Bar-llillel et al~ 1960\] Yehonhua Bar-llillel, Chaim GMfman,and E. Sb.amir.
On categorial and phrt~e structure grammars.Bull.
Rea.
Council Israel, Sec.
F., 9:1-16, 1960.\[Calder el al., 1989\] Jonathan Calder, Mike Reape, and HenkZeevat.
An algorithm for generation in Unification CategorlalGrammars.
EACL, 1989.\[D~irre and Dorna, 1993\] Jochen DSrre and Michael Dorua.CUF - a formalism for linguistic knowledge representathm, l)e-liverable R.1.2A, I)YANA 2, August 1993.\[Dymetman et aL, 1990\] l )ymetman, Isabelle, and Perrault.
Asymmetrical pproach to parsing and generation.
COLING,1990.\[I'?ank and Reyle, 1992\] Anette Frank and Uwe Heyle.
flow tocope with scrambling and scope.
KONVENS, 1992.\[Gazdar et al, 1985\] Gerald Gazdar, Ewan Klein, G.I(.
Pul-lure, anti Ivan Sag.
Generalized Phrase Structure G'rammar.Blackwell, Oxford t UI(~ 1985.\[l(amp and Reyle, 1993\] l iana Kamp and Uwe l/eyle, l'?omDiscourse to Logic.
Introduction to Modeltheoretlc Semantlc~oJ Natural Language, Formal Logic and Discourse Representa-tion Theory.
Studies in Linguistics and 1)hilosophy 42.
KluwerAcademic Publishers, Dordrecht, The Netherlands, 1993.\[Kay, 1993\] Martin Kay.
Machine translation.
Lecture Notes,lnst i tut  flir Masdfinelle Spracllvcrea'l)eitut~g, June 1993.\[l(ohl, 1992\] Dieter Kohl.
Generation front under- and over-specified structures.
COLING, 1992.\[K3nig, 199,1\] Esther KSnig.
A hypothetical reasoning algo-r i thm for linguistic analysis.
Journal o\] Logic and Computallon,,l(i), 1994.\[l~aml)ek, 1958\] Joachim Lam|)ck.
The mathemaLics of sentencestructure.
American Mathematical Monthly, 65:15,1-170, 1958.\[Minnen et al, 1993\] Guido Minnen, Dale Cerdemann, and Er-hard liinrichs.
Direct automated inversion of logic grammars.In Yuji Matsumoto~ editor~ Proceedings of the Fourth Inter-national Workshop on Natural Language Understanding andLogic Programming, pages 17-38, Nora, Japan, 1993.
Nara In-stitute of Science and Technology.\[Pollard and Sag, 1993\] Carl Pollard and Iwm A.
Sag.
HeadDriven l'hrase Structure Grammar.
University of Chlcag~)Press, Chicago, 1993,\[Reyle, 1993\] Uwe l~-eyle, l)ealing with ambiguities t)y un-derspeclfication: Construction, representation, and deduction.Journal of Semantics, 10(2), 1993.\[Schabes and W~ters, 1993\] Yves Schahes and lt.ichard Waters.Lexicalized context-free grammars.
ACL, 1993.\[Shieber and Schabes, 1991\] Stuart M. Shiel)er and Yves Sch-abes.
(\]eueration a d synchronous Tree-Adjoining Grall\[tnlal'S.Computational Intelligence, 7(,I):220-228,199l,\[Shleher et al, 1990\] Stuart M. Shiel)er, Gertjan van Noord,l{obert C. Moore, and Fernando C.N.
Pereira.
Semantlc-head-driven gencratlon.
Computational Linguistics, 16(1):30-12p1990.\[Shicber, 1988\] Stuart M. Shleber.
A mfiform architecture forparsing and generation.
COLIN(I, 1988.\[Strzalkowski, 1990\] Tomek Strzalkowski.
llow to invert a nat-urM language parser into an elliclent generator: An all?oritlunfiw logic grammars.
COLING, 1990.\[van Noord, 1993\] Gertjan van Noord.
Reversibility in Natu-ral Language Processgng.
Phi) thesis, University of Utrecht,Utrecht, Netherlands, 1993.\[Wedeklnd, 1988\] J\[irgen Wedeklud.
Generation as structuredriven derivation.
COL1NQ, 1988.481
