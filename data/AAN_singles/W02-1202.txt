AnnCorra : Building Tree-banks in  Indian LanguagesAkshar BharatiRajeev SangalVineet ChaitanyaAmba KulkarniDipti Misra SharmaInternational Institute of Information TechnologyHyderabad, india{sangal, vc, amba, dipti}@iiit.netK.V.
RamakrishnamacharyuluRashtirya Sanskrit Vidyapeetha, Tirupati, Indiakvrk@sansknet.orgABSTRACTThis paper describes a dependency basedtagging scheme  for creating tree banks forIndian languages.
The scheme has been sodesigned that  it is comprehensive,  easy to usewith linear notation and economical in typingeffort.
It is based on Paninian grammaticalmodel.1.BACKGROUNDThe name AnnCorra, shortened for"Annotated Corpora", is for an electroniclexical resource of annotated corpora.
Thepurpose behind this effort is to fill thelacuna in such resources for Indianlanguages.
It will be an important resourcefor the development of Indian languageparsers, machine learning of grammars,lakshancharts (discrimination nets forsense disambiguation) and a host of othersuch tools.2.
AIMS AND OBJECTIVEThe aim of the project is to :- develop a generalised linearsyntacto- semantic tag scheme  forall Indian  languages- annotate training corpus for allIndian  languages-     develop parallel tree-banks for allIndian languagesTo fulfill the above aim - a marathon task-  a collaborative model has beenconcieved.
Any collaborative modelimplies involvement of several peoplewith varying levels of expertise.
This case,becomes further complicated as the tagscheme to be designed has to be equallyefficient for all the Indian languages.These languages, though quite similar,are not identical in their syntacticstructures.
Thus the tag scheme demandsthe following properties  :--  comprehensive enough to capturevarious sysntactic relations acrosslanguages.-  simple enough for anyone, with somebackground in linguistics,  to use.-  economical  in typing effort (thecorpus has to be manuallyannotated).3.
AN ILLUSTRATIONThe task can be better understood with thehelp of an  illustration.
Look at thefollowing sentence  from Hindi0:: rAma  ne            moHana   ko'Rama'  'ErgPostP'  'Mohan'   'PostP'nIlI kitAba dI'blue' 'book'  'gave''Rama gave the blue book to Mohan.
'Tree-1 is a representation of the aboveverb, argument relationship within thevarious constituents of sentence  0 -dI-------------------------|            |                   |k1 |        k4|               k2||            |                   |rAma_ne  moHana_ko   kitAba||nmod|nIlITree-1Since the input for tagging is a text corpusand the marking has to be done manually,the tagging scheme is linearly designed.Therefore, Sentence 0 will be marked asfollows -rAma_ne/k1 moHana_ko/k4  [nIlI'Ram postp'    Mohan postp'    'blue 'kitAba]/k2 dI::v?book?
'gave'The markings here represent-     'di' (?give?)
is the verb node- ?rAma_ne' is  the 'karta' or  'agent'(k1)of the verb 'dI',- 'moHana_ko' is 'sampraadana' or'beneficiary' (k4) of verb 'dI' (?give?
)- '[nIlI kitAba]' ?
(blue book) a nounphrase - is the  'karma' or 'object' (k2)of  the verb.The elements joined by an underscorerepresent one unit.
Postpositions whichare separated by white space in the writtentexts are actually the inflections of thepreceding noun or verb units.
Therefore,they are conjoined.The modifier-modified elements areparanthesised within square brackets.Tags showing the name of the ARC (orbranch) are marked by '/'   immediatelyafter the constituent they relate to.
'/' isfollowed by the appropriate tagname.Thus '/' specifies a relationship of a wordor constituent with another word orconstituent.
In this case it is therelationship of verb 'dI' with the otherelements in the sentence.Tags denoting a type of node are  markedby '::'.
'::v' indicates that 'dI' is a verbalnode.The idea here is to mark only the specificgrammatical information.
CertainDEFAULT CONVENTIONS are leftunmarked.
For example, the adjective 'nIlI'(?blue?)
of  'kitAba' (?book) has been leftunmarked in the above example sincenormally noun modifiers precede the nounthey modify (adjectives precede nouns).Such DEFAULT CONVENTIONS saveunnecessary typing effort.4.
GRAMMATICAL MODELIt was quite natural to use Paniniangrammatical model for sentence analysis( hence the tagnames) because :-1) Paninian grammatical model is basedon the analysis of an Indian  language(Sanskrit) it can deal better with thetype of  constructions Indian languageshave.2) The model not only offers amechanism  for SYNTACTIC analysisbut also incorporates the SEMANTICinformation (nowadays calleddependency analysis).
Thus makingthe   relationships more transparent.
(For  details refer Bharati (1995).
)Following tags (most of which are  basedon Paninian grammatical model) havebeen used in the above example.k1 : kartaa (subject or agent)k2 : karma (object)k4 : sampradaana (beneficiary)v  : kriyaa (verb)Obviously the task is not an easy one.Standardization of these tags will takesome time.
Issues, while deciding the tags,are many.
Some examples are illustratedbelow to show the kind of structureswhich the linear tagging scheme will haveto deal with.4.1.
Multiple Verb SentencesTo mark the nouns-verb relations with theabove tags in single verb sentences is asimple task.
However, consider thefollowing sentence with two verbs :-1:   rAma ne   khAnA  khAkaraam' 'postp' 'food'    'having_eaten'pAnI    pIyA'water'  'drank'`Ram drank water after eating thefood.`Sentence 1 has more than two verbs - onenon-finite (khAkara) and one finite(piyA).
The finite verb is the main verb.Noun 'khAnA' is the object of verb'khAkara', whereas noun 'pAnI' is theobject of verb 'piyA'.
'k2' is the tag forobject relation in our tagging scheme.
Co-indexing becomes the obvious solution forsuch multiple relations.
Since there aretwo verbs the tagging scheme allows themto be named as   'i' and 'j' (using notation 'i'and 'j').
By default 'i' refers to the mainverb and any successive verb by othercharacters ('j' in the present case):rAma_ne      khAnA   khAkara::vkr:j'Ram_postp'  'food'      'having_eaten:j'pAnI   piyA::v:i'water' 'drank:i'This provides the facility to mark everynoun verb relationship.rAma_ne/k1>i   khAnA/k2>jkhAkara::vkr:j   pAnI/k2>i piyA::v:iFortunately, there is no need to mark it so"heavily".
A number of notations can beleft out, and the DEFAULT rules tell ushow to interpret such "abbreviated'annotation.
Thus, for the above sentence,the following annotation is sufficient andis completely equivalent to the above :rAma_ne/k1   khAnA/k2khAkara::vkr:j   pAnI/k2   piyA::vEven though there are two verbs, there isno need to name the verbs and refer tothem.
Two default rules help us achievesuch brevity (without any ambiguity) :(1) karta or k1 kaaraka always attaches tothe last verb in a  sentence (Thus'rAma_ne/k1' attaches to the verb atthe   end).
(2) all other kaarakas except k1, attach tothe nearest verb on the right.
Thus'khAnA/k2' attaches to 'khAkara' and'pAnI/k2' attaches to 'piyA', theirrespective nearest verbs on the right.4.2.
Compound UnitsSometimes two words combine together toform a unit which has its own demandsand modifiers, not derivable from its parts.For example, a noun and verb jointogether to operate as a single unit,namely as a verb.
In the sentence 'rAma(Rama) ne (postp) snAna(bath) kiyA(did)',  'snAna'   and 'kiyA' together standfor a verb 'snAna+kiyA' (bathed).
Suchverbal compounds are like any other verbhaving their own kaarakas.This sentencewould be marked as follows :rAma_ne/k1   snAna::v+ kiyA::v-'Ram_postp'   'bath+'       'did-'`Ram took a bath`A 'v+' or a 'v-' indicates that the word'snAna' or 'kiyA' are parts of a whole  (averb in this case).
Taken together theyfunction as a single verb unit.
Such adevice which may appear to be morepowerful was needed to mark the 'singleunitness' of parts which may appearseparately in a sentence.
Thus, the abovenotation  allows even distant words to betreated as a  single compound.
Suchoccurrences are fairly common in allIndian languages as illustrated in thefollowing example from Hindi :snAna::v+ to        mEMne/k1'bath'      'emph'    'I_erg'subaHa_HI           kara_liyA_thA::v-'morning_emph'     'had_done'I had bathed (taken a bath) in the morningitself.
'+'and ' - ' help in marking this relationexplicitly.
(a more detail description of thenotation in 5.1)4.3.
Embedded SentenceTags are also designed to mark therelations within  a complex sentence.Consider the example below where acomplete sentence (having verb  'piyA'(drank)) is a kaaraka of the main verb'kaHA' (said).moHana    ne        kaHA  ki      {rAma'Mohan'  'postp' 'said'  'that ' {'Rama'ne         pAnI     khAnA    khAkara'postp' 'water' 'food'    'having eaten'piyA}.
'drank}(Mohan said that Ram drank waterafter having eaten the food)The embedded sentence can be firstmarked as follows ---------- {rAma_ne/k1 pAnI/k2>jkhAnA/k2 khAkara::vkr piyA::v:j}::s.The whole embedded sentence is the'karma'  (object) or k2 of 'piyA' (drank):The  relation  of the embedded sentencerelation as the object of the main verb isco-indexed in the following way :-moHana_ne        kaHA::v:i      ki'Mohan_postp'   'said'             'that'rAma_ne/k1     pAnI/k2>j    khAnA/k2'Rama_postp'         'water'      'food'khAkara::vkr     piyA::v:j::s/k2>i'having_eaten'    'drank'Thus the device of naming the elementsand co-indexing them with their respectivearguments can be used most effectively.5.
TAGGING SCHEMEThe tagging scheme contains : notations,defaults, and  tagsets.5.1.
NOTATIONCertain special symbols such as doublecolon,underscore, paranthesis etc.
areintroduced first.
Two sets of tags havebeen provided (to mark the crucial ARCand node information).
However,  apartfrom these symbols and tags, some specialnotation is required to explicitly markcertain disjointed, scattered and missingelements in a sentence.
Followingnotation is adopted for marking theseelements :-5.1.
1.
X+ ... X- : disjointed elementsAs shown above (4.2),  when a singlelexical unit composed of more  than oneelements is  separated by other interveninglexical units, its 'oneness' is expressed byusing '+' on the first element in the linearorder and '-' on the second element.
'+'indicates to look ahead for the other parttill you find an element with '-'.
'-'suggests, 'an element marked '+' is leftbehind, to which it should get itselfattached'.Example - Verb 'snAna_karanA' (tobathe) in Hindi can occur  disjointedlysnAna   to         mEMne kiyA_thA'bath'     'emph'   'I'          'did'para    phira     gaMdA   Ho_gayA'but'    'again'    'dirty'       'became'`Bathe I did , but got dirty again.
''snAna_karanA' is one verb unit in Hindi.But its two components 'snAna' and'karanA' can occur separately.
Notation'X+....X-' can capture the 'oneness' of thesetwo elements.
So 'snAna.karanA'(?bathe?)
in the above sentence would bemarked as follows :snAna::v+   to         mEMne'bath'        'emph'   'I'kiyA_thA::v-    para   phira    gaMdA'did'                  but'    'again'    'dirty'Ho_gayA'became'Another  example of  'scattered elements'is  'agara .... to' construction of  Hindi.agara   tuma    kaHate   to         mEM'if'       'you'     'said'      'then'     'I'A_ jAtA'would_have_come'`Had you asked I would have come'?agara' and 'to' together give the'conditionality' sense.
Though they neveroccur linearly together they have a'oneness' of meaning.
Their dependencyon each other can also be expressedthrough 'X+....X-' notation.agara::yo+  tuma  kaHto::yo-  mEM A_jAtA    (tag 'yo' is for conjuncts)5.1.2.
>i ....:i   : explicitly markeddependency (:i is the head)(a)  Example -- The sentence 1a below hasthe dependency  structure given in T-21a.
phala    rAma     ne'fruit'     'Rama' 'Ergpostp'naHA_ kara        khAyA'having_bathed'    'ate'' Rama ate the fruit after taking a bath'khAyA||----------|-----------------|k1 |       naHA_kara::vkr    |k2|                                     |rAma_ne                     phalaT.2Default (5.2.5) states that all kaarakasattach themselves to the nearest availableverb on the right.
In (1a) above, thenearest verb available to 'phala' (fruit) is'naHA_kara'.
However, 'phala' (fruit) isnot the 'k2' of 'naHA_kara'.
It is the 'k2' ofthe main verb 'khA'.
Therefore, an explicitmarking is required to show thisrelationship.
The notation '>i...:i' makesthis explicit.
Therefore,phala/k2>i   rAma_ne   naHA_karakhAyA::v:iWhere 'khAyA' is the 'head', thus marked':i' and 'phala' is the dependent element,thus marked '>i'.
An element marked '>i'always looks for another element marked':i'.
(b)  Another example of such attachmentswhich need to be marked explicitly isgiven below -2a.
rAma,     moHana  Ora    shyAma'Rama',  'Mohan'    'and'    'Shyama'Ae'came'Ora||----------|---------------||             |                   |rAma      moHana    shyAmaT-3To show their attachment to 'Ora' (and) thethree elements 'rAma','moHana', 'shyAma'have to be marked (as in 2b.)
thefollowing way in our linear taggingscheme.rAma>i,   moHana>i   Ora::yo:ishyAma>iThe justification to treat 'Ora' as the headand show the 'wholeness' of   all theelements joined by '>i' to ':i' is madeexplicit by the following examples-rAma,   Ora Haz,       moHana   Ora'Rama'  'and''yeah',     'Mohana'  'and'shyAma   Ae_ the'Shyama'  'had_come'In this case there is an intervening element'Ora HAz' (?and_yeah) between 'rAma' and'moHana' etc.
So paranthesis alone willnot resolve the issue of grouping theconstituents of a whole.
(Byparanthesising, elements which are notpart of the whole will also be included.
)To avoid this the 'Ora' (and) has to betreated as a head.5.1.3.
0    : explicit marking of an elliptedelement (missing  elements).
Example -rAma      bAjZAra   gayA,    moHana'Rama'     'market'      'went'     'Mohana'ghara     Ora   Hari    skUla'home'     'and'  'Hari'    'school'?Rama went to the market, Mohana homeand Hari to the school.
?The sentence above has two elliptedelements.
The second and third occurrenceof the verb 'gayA'(?went?).
To draw acomplete tree the information of themissing elements is crucial here.Arguments 'moHana', 'ghara', 'Hari', and'skUla' are left without a head, and theirdependency cannot be shown unless wemark the 'ellipted' element.rAma     bAjZAra   gayA,   moHana'Rama' 'market'    'went', 'Mohana'ghara   0  Ora    Hari     skUla 0'home'      'and'     'Hari'    'school'In cases where this information can beretrieved from some other source(DEFAULT ) it need not be marked.
In theabove case it need not be marked.However, there may be cases wheremarking of the missing element is crucialto show various relationships.
In suchcases it has to be marked.
Look at thefollowing example -eka       Ora       sajjana'one'      'more'   'gentleman'kaHate_HEM   bacce        baDZe'says'                'children'    'big'Ho_gaye_ HEM      kisI'become'                   'nobody'kI       bAta     naHIM  mAnate'gen'  'saying'   'not'        'agree'' One more gentleman says that the kidshave grown older and do not listen toanybody.
'The above sentence does not have anyexplicit 'yojaka(conjunct)', between twosentences,a) bacce baDZe Ho gaye HEM and`kids have grown older'b) kisI kI bAta naHIM mAnate`do not listen to anybody'Both these sentences together form the'vAkyakarma(sentential object)' of theverb 'kaHate HEM' (?say?
).So the analysis would be -[eka Ora sajjana]/k1 kaHate_HEM::v:i?one?
?more?
?gentleman?
?says?
{{bacce/k1ud    baDZe/k1vid?children?
?big?Ho_gaye_HEM::v}::s {kisI_kI/6?become?
?nobody?_s?bAta]/k2 naHIM::neg?words?
?not?mAnate::v}::s}/k2>I?listen?It appears to be a neatly tagged sentence.However, some crucial information ismissing from this analysis.
In the sentencethe relationship between the two sentenceswithin the larger sentential object is notexpressed.
The problem now is how to doit.
Use of '>i...:i' notation can help expressthis.
However, it needs the ':i' informationand since there is no explicit 'yojaka'(conjunct) element between the twosentences it will not be possible to mark it.The information of the presence of a'yojaka' (conjunct) which is the head of aco-ordinate structure is CRUCIAL here.Without its presence its dependency treecannot be drawn.
The notation '0' can beof help in such situations.
'0' can bemarked in the appropriate place.
This willallow the tagging of the dependentelements.
Therefore, the revised taggingwould be -[eka Ora sajjana]/k1 kaHate_HEM::v:i{{bacce/k1ud baDZe/k1vidho_gaye_HEM::v}::s>j 0::yo:j{kisI_kI/6  bAta]/k2 naHIM::negmAnate::v}::s>j}/k2>iHere the information of missing conjuncthas been marked by a '0'.5.2.
DEFAULTSApart from tagsets and special notationsthe scheme also relies on certain defaults.Defaults have been specified to savetyping by the human annotator.
Forexample, no sentence has to be marked baa sentence tag till it is crucial for thedependency analysis.
For example :rAma      ne        yaHa    socA         ki'Rama' 'postp' 'this'     'thought'   'that'moHana      AegA'Mohana' 'would_come'`Rama thought that Mohana would come'This is a complex sentence where thesubordinate sentence is the objectcomplement of the verb 'socA'(?thought?)
.To indicate the relation of the subordinateclause with the main verb, it has tomarked.Similarly,  within the square paranthesis,right most element is the Head.
So there isno need to mark it.
Postpositions'sattachment to the previous noun is alsocovered by the default rule.
There areother defaults which take care of modifier-modified relationships.
In short, thegeneral rules have been accounted for bydefaults and only the specific relationshave to be marked.
Elements precedingthe head within paranthesis are to beaccepted as modifiers of the head.However, In case the number of elementswithin paranthesis is more than two (Headplus two) and one or more of them do notmodify the head then it should be marked.Example -   [HalkI    nIlI   kitAba],'light'  'blue'  'book'Here, 'halkI'(?light?)
can qualify both'nIlI'(?blue?)
and 'kitAba'(?book?).
In caseit is modifying 'kitAba'(?book?
), say, interms of light weight, then it should be leftunmarked.
But if it modifies 'nIlI'(?blue?
),in terms of light shade, then it SHOULDbe marked by adding '>' on the right of themodifying element.
'halkI'  [HalkI> nIlI  kitAba].?light?
[?light?> ?blue?
?book?
]Let us look at another  case where thedependency has to be explicitly marked.Participle form 'tA_HuA', in Hindi, canmodify either a noun or a verb.
Forexample take the Hindi sentence -mEMne/k1  dODZate_Hue::vkr'I_erg'          'running'ghoDZe_ko/k2  dekhA::v'horse'                'saw'This ambiguous sentence may mean eitherthe following  :-a) mEMne dODZate_Hue::vkr>ighoDZe_ko:i/k2 dekhA ;'I saw the horse while the horse wasrunning'Orb) mEMne dODZate_Hue::vkr>ighoDZe_ko/k2 dekhA::v:I'While I was running I saw the horse'There is no need to mark ':i' in sentence(a).
However (b)  will need  explicitmarking.5.3.TAGSETSThe tagsets used here have been dividedinto two categories -1) TAGSET-1 - Tags which expressrelationships are marked by  a preceding '/'.
For example kaarakas are grammaticalrelationships, thus they are marked '/k1','/k2', '/k3' etc.2) TAGSET-2 - Tags expressingnodes are marked by  a preceding '::' verbsetc.
are nodes, so they will be marked '::v',Certain conventions regarding the namingof the tags are ;k = kaaraka, --  all the kaaraka tagswill begin with k-,Therefore, k1, k2, k3 etc.n = nounv = verb  -- eg.
v, vkr etc.6.
CONCLUSIONSA tagging scheme has been designed toannotate corpora for various Indianlanguages.
The objective has been to useuniform tags for all the Indian languagesthereby evolving a standard which can befollowed for various syntactic analysis formachine processing.
The scheme is yet tobe yet implemented on corpora fromvarious languages.
Some trial workshopshave been conducted to see itsapplicability in other Indian languages.However, once the actual task of taggingbegins one may come across cases whichare not covered by the present scheme.The idea is to provide a basic schemewhich can later be improved and revised.7.
REFERENCESBharati, Akshar, Vineet Chaitanya andRajeev Sangal, "Natural  LanguageProcessing: A Paninian Perspective",Prentice-Hall of India,New Delhi, 1995.Bharati, Akshar, Dipti M Sharma, VineetChaitanya, Amba P Kulkarni,Rajeev Sangal, Durgesh D Rao, LERIL :Collaborative Effort for CreatingLexical Resources, In Proc.
of Workshopon Language Resources inAsian Languages, together with 6th NLPPacific Rim Symposium, Tokyo.
