Proceedings of the 1st Workshop on South and Southeast Asian Natural Language Processing (WSSANLP), pages 43?50,the 23rd International Conference on Computational Linguistics (COLING), Beijing, August 2010A Word Segmentation System for Handling Space Omission Problemin Urdu ScriptGurpreet Singh LehalDepartment of Computer SciencePunjabi University, Patialagslehal@gmail.comAbstractWord Segmentation is the foremostobligatory task in almost all the NLPapplications, where the initial phase requirestokenization of input into words.
Like otherAsian languages such as Chinese, Thai andMyanmar, Urdu also faces wordsegmentation challenges.
Though the Urduword segmentation problem is not as severeas the other Asian language, since space isused for word delimitation, but the space isnot consistently used, which gives rise toboth space omission and space insertionerrors in Urdu.
In this paper we present aword segmentation system for handlingspace omission problem in Urdu script withapplication to Urdu-Devnagri Transliterationsystem.
Instead of using manuallysegmented monolingual corpora to trainsegmenters, we make use of bilingualcorpora and statistical word disambiguationtechniques.
Though our approach is adaptedfor the specific transliteration task at hand bytaking the corresponding target (Hindi)language into account, the techniquessuggested can  be adapted to  independentlysolve the space omission Urdu wordsegmentation problems.
The two majorcomponents of our system are :identification of merged words forsegmentation and proper segmentation of themerged words.
The system was tested on1.61 million word Urdu test data.
The recalland precision for the merged wordrecognition component were found to be99.29% and 99.38% respectively.
Thewords are correctly segmented with 99.15%accuracy.1 IntroductionWord segmentation is the foremost obligatorytask in all NLP application, where the initialphase requires tokenization of input into words.For languages like English, French and Spanishetc.
tokenization is considered trivial because thewhite space or punctuation marks betweenwords is a good approximation of where a wordboundary is.
Whilst in various Asian languagessuch as Chinese, Thai and Myanmar, whitespaces is rarely or never used to determine theword boundaries, so one must resort to higherlevels of information such as: information ofmorphology, syntax and statistical analysis toreconstruct the word boundary information(Papageorgiou, 1994; Nie et al  1995;  Wang etal,  2000;  Xu et al 2005).Though the Urdu word segmentation problem isnot as severe as some of the  other Asianlanguage, since space is used for worddelimitation, but the space is not consistentlyused, which gives rise to both space omissionand space insertion errors in Urdu.Durrani(2007) and Durrani and Hussain(2010)have discussed in detail the various Urdu wordsegmentation issues while Jawaid andAhmed(2009) and Abbas et al2009) havediscussed the Hindi-Urdu transliteration issues.A word segmentation system for handling spaceinsertion problem in Urdu script has beenpresented by Lehal(2009).Hindi and Urdu are variants of the samelanguage characterized by extreme digraphia:Hindi is written in the Devanagari script fromleft to right, Urdu in a script derived from aPersian modification of Arabic script writtenfrom right to left.
Hindi and Urdu sharegrammar, morphology, vocabulary, history,classical literature etc.
Because of their identicalgrammar and nearly identical core vocabularies,43most linguists do not distinguish between Urduand Hindi as separate languages.
The differencein the two scripts has created a script wedge asmajority of Urdu speaking people in Pakistancannot read Devnagri, and similarly the majorityof Hindi speaking people in India cannotcomprehend Urdu script.
To break this scriptbarrier an Urdu-Devnagri transliteration systemhas been developed.
The transliteration systemfaced many problems related to wordsegmentation of Urdu script as discussed above.In this paper we present a word segmentationsystem for handling space omission problem inUrdu script with application to Urdu-DevnagriTransliteration system.
Instead of usingmanually segmented monolingual corpora totrain segmenters, we make use of bilingualcorpora and statistical word disambiguationtechniques.
Though our approach is adapted forthe specific transliteration task at hand by takingthe corresponding target (Hindi) language intoaccount, the techniques suggested can beadapted to independently solve the spaceomission Urdu word segmentation problems.2 Urdu script: a brief overviewUrdu is a Central Indo-Aryan language of theIndo-Iranian branch, belonging to the Indo-European family of languages.
It is the nationallanguage of Pakistan.
It is also one of the 22scheduled languages of India and is an officiallanguage of five Indian states.Urdu script has 35 simple consonants, 15aspirated consonants, one character for nasalsound and 15 diacritical marks.
Urdu characterschange their shapes depending upon neighboringcontext.
But generally they acquire one of thesefour shapes, namely isolated, initial, medial andfinal.
Urdu characters can be divided into twogroups, non-joiners and joiners.
The non-joinerscan acquire only isolated and final shape and donot join with the next character.
On contraryjoiners can acquire all the four shapes and getmerged with the following character.
A group ofjoiners and/or non-joiner joined  together form aligature.
A word in Urdu is a collection of one ormore ligatures.
The isolated form of joiners andnon-joiners is shown in figures 1-2.?
?
?
?
?
?
?
?
?
?
?Figure 1.
Non-Joiners in Urdu?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
??
?
?
?
?
?
?Figure 2.
Joiners in UrduThe space character is used in Urdu both togenerate correct shaping and also to separatewords.
Though for words ending with non-joiners correct shaping is generated even whenspace is not typed and thus, many times a useromits the space.
The sequence of Urdu wordswritten together without space is still readablebecause of the character joining property inUrdu.
As for example, consider the word cluster????????????
, which is composed of four words???
, ??
,?????
and ??.
The Urdu readers can veryeasily segment and read the four wordsseparately, but the computer will read them as asingle word since there is no space in between.Similarly, the word cluster ?????????????
iscomposed of five words(???
,???
,???
,??
and ??
),which can be easily read as five separate wordsby Urdu readers but will be considered as asingle word by the computer.Another unique feature of Urdu is that theUrdu words are usually written without shortvowels or diacritic symbols.
Any machinetransliteration or text to speech synthesis systemhas to automatically guess and insert thesemissing symbols.
This is a non-trivial problemand requires an in-depth statistical analysis.An Urdu word is a combination of ligatures(characters which join together) and isolatedcharacters.
For example ?????
is composed ofisolated characters ?
and ?
and ligature  ???
.
Aligature or isolated character will be called asUrdu character cluster (UCC) in this paper.
AUrdu word is thus a combination of UCCs .
Asfor example, the word ?????
is composed of threeUCCs ???
, ?
and ?
.
We borrow the term,Orthographic Word used by Durrani andHussain(2010) to define our segmentationprocess.
An Orthographic Word (OW) is acombination of  UCCs separated by spaces orpunctuation marks.
An OW may contain singleor multiple Urdu words.
Our task is to identify ifan OW contains multiple words and in that caseproperly segment the words.As for example, consider the sentence:??????
???
??
????
??
???
????
??
????????????????
?44It contains nine OWs1.
??????2.
???3.
??4.
????5.
??6.
???7.
????8.
??9.
????????????????
?The first eight OWs contain single Urduwords, while the last OW contains 5 Urduwords(???
,?????
,??
,????
and ???
)3 Segmentation Model for UrduThere are three major issues in the automaticUrdu word segmentation.
The first problem is todecide if the orthographic word represents asingle word or a multiple word cluster.
Thesecond is the ambiguity issue.
Since a wordcluster can be segmented into words in multipleways, the correct word boundary detectionbecomes a challenge.
As for example the OW???????
can be segmented as ???
+ ????
or ??
+ ??
?+ ??.
The third problem is the segmentation ofunknown word.
Unknown word refers to wordthat does not exist in the dictionary or corpus.Unknown words can be categorized into thedifferent types such as error words, abbreviation,proper names, derived words, foreign words,compounds etc.
The unknown word causessegmentation error since the word does not existin the dictionary, it could be incorrectlysegmented into shorter words.
For example, theword, ??????????
, which is a foreign word, getssegmented into four words (??
, ????
, ??
and ??
)after dictionary look-up as the word ??????????
isnot present in the corpus.The input is an Urdu Orthographic Word andthe system first makes the decision if the OWcontains single or multiple Urdu words.
In casethe OW contains multiple words, the individualUrdu words are extracted from the OW.
Thesedifferent stages are discussed in detail infollowing sections.
As can be seen from thefigure, at each stage we make use of lexicalresources both from Urdu and Hindi languages.The details of the resources used are in Table 1.The system architecture is shown in Fig.
3.Figure 3.
System ArchitectureTable 1.
Lexical resources used in systemResource CountUrdu Word FrequencyList121,367 wordsHindi Word FrequencyList159,426 wordsHindi Word Bigram List  2,382,511bigrams4 Decision StageIn the decision stage, the system decides if theOW contains single or multiple Urdu words.
Itcould so happen that the OW contains singleword only and we may break up into smallerwords.
The decision is based on Urdu and Hindi,word frequency lists analysis as well asUrdu/English/Hindi Morphological rules.
Todecide if the word cluster is containing multiplewords, we first search for OW in the Urdu wordlist.
If it is found then it means that the OW is avalid Urdu word and does not need any furthersegmentation and quit over there.It could happen that the OW could be aninflection, whose root form maybe present in the45Urdu word list.
Even though the Urdu word listcontains inflected forms, but for many words allthe inflections may not be present.
This problemis more pronounced for English terms, whichhave become part of Urdu language.
For suchwords, the inflections could follow both rules ofEnglish and Urdu.
For example plural of?????????
(university) could be both universitiyon??????????????
as well as universities ?????????
?.The first form follows the Urdu infection ruleswhile the second form follows the Englishinflection rules.
Similarly we found both theUrdu and English inflections for the Englishword secretary in Urdu  text (?????????
and????????)
.
Thus if the OW is not found in theUrdu word list, we use both Urdu and Englishmorphological rules to generate its root form andsearch for the root form in the Urdu word list.
Ifthe root form is found, we assume the word to bea valid Urdu word and quit there.It is widely reported in word segmentationpapers, that the greatest barrier to accurate wordSegmentation is in recognizing words that arenot in the lexicon of the segmenter.
Thus if aword or its root form is not present in the Urduword list it will be wrongly presumed to be amulti word cluster.
To alleviate this problem, theUrdu corpus has been supplemented with Hindicorpus, which has helped in increasing the wordsegmentation as well as multi-word recognitionaccuracy.
It was found many times that the Urduword may be a proper noun, foreign word orsome valid out of vocabulary word, which is notpresent in Urdu corpus but present in the Hindiword list.
Another advantage of checking in theHindi corpus is that many of the Hindi words,which are written as single word are usuallywritten as two words in Urdu.
For example,?????
(?????
), ??????
(????
)?, ?????????(????????
), ???????
(???????)
etc.
These Urduwords are many times written as a single wordand in that case if passed to Hindi word listwould still report as correct.
For checking theOW in Hindi word list, we first transliterate it toHindi and then search for it in the Hindiwordlist.
If the transliterated word is found, thenthe OW is not considered for segmentation.
LikeUrdu, it may also happen that the root word ofOW may be present in the Hindi word list.
Solike Urdu, we use both Urdu and Englishmorphological rules to generate its root form andsearch for the root form in the Hindi word list.
Ifthe root form is found, we assume the word to bea valid Urdu word and quit there.
If the OWpasses all the above stages, then it is considereda candidate for segmentation.The steps in brief are :?
Search for OW in Urdu List.
If OW ispresent in the list then quit.
example :??????
Determine the root form of OW usingUrdu Morphological rules and search forthe root form in Urdu List.
If found thenquit.
example : ??????????
Determine the root form of OW usingEnglish Morphological rules and searchfor the root form in Urdu List.
If foundthen quit.
example : ??????????
Let HW = Transliteration of OW inHindi.
Search for HW in the Hindi WordList.
If HW is present in the list thenquit.
example : ??????????
Determine the root form of HW usingHindi Morphological rules and searchfor the root form in the Hindi List.
Iffound then quit.
example : ??????????
Determine the root form of HW usingEnglish Morphological rules and searchfor the root form in the Hindi List.
Iffound then quit.
example : ???????
Go to the segmentation stage.
example :????
?5 Segmenting the Orthographic WordThe Urdu orthographic word is next broken intoUrdu Character Combinations (UCC) usingUrdu orthographic rules.
Unlike wordsegmentation that is a difficult task, segmentinga text into UCCs is easily achieved by applyingthe set of rules.
These adjacent UCCs are thencombined to form a sequence of Urdu words.We need to list all possible segmentations anddesign a strategy to select the most probablecorrect segmentation from them.As for example, consider the OW ??????
: It issegmented into four UCCs : ?
.??
,??
and ?
.
Theadjacent clusters can be combined to form 6word segmentations:?
????
+ ???
??
+ ????46?
?
+ ??????
??
+ ??
+ ???
?
+ ?
+  ?????
?
+ ?
+ ??
+ ?
?5.1 Longest MatchingThe method scans an input sentence from left toright, and select the longest match with adictionary entry at each point.
In case that theselected match cannot lead the algorithm to findthe rest of the words in the sentence, thealgorithm will backtrack to find the next longestone and continue finding the rest and so on.
Thisalgorithm fails to find the correct segmentationin many cases because of its greedycharacteristic.5.2 Maximum MatchingThis method first generates all possiblesegmentations for a sentence and then selects theone that contain the fewest words, which can bedone efficiently by using dynamic programmingtechnique.
When the alternatives have the samenumber of words, the algorithm cannotdetermine the best candidate and some otherheuristics have to be applied.We tried both longest matching and maximummatching and the smallest unit taken forcombining is UCC.
But we found shortcomingsin both the matchings.
For example the OW????????
gets segmented as ??+??
+????
usinglongest matching, while it should be ??+???+???
.Similarly the OW ?????????????
gets segmentedas ????+?????+????
using maximum matchingwhile it should be ??+??+?????+???
?.Thus we see that both longest string match andsmallest words fail sometimes.
If thesealgorithms are supplemented by statisticalinformation such as frequency analysis and n-grams then these failures can be avoided.
So inour present work, we apply maximal matchingalgorithm along with these statistics.
Initially weused unigram frequency of occurrence fordeciding the best word combination.
Each Urduword in the combination is formed by joiningadjacent UCCs.
In each of the combination, wefirst convert each of the Urdu word to Hindi.The combination with highest combined productof the unigram frequency of occurrences isfinally selected.
Thus in the above example, theOW ??????
: will be segmented as ????
+ ?
?, asshown in Table 2.Table 2.
Product of Frequency of OccurrenceUrduCombinationHindiCombination(Frequencyofoccurrence)FrequencyProduct????????(0.005161)????(0.00026)1.34221E-06??????????(4.16E-07)??(0.001623)6.75557E-10???????????
(0)?
(4.48E-05)0????????(0.005161)??(0.002602)??(0.001623)2.18028E-08??????????(4.16E-07)?
(3.6E-05)?
(4.48E-05)6.69866E-16????????(0.005161)??(0.002602)?
(3.6E-05)?
(4.48E-05)2.16191E-14It is interesting to see that for segmentation ofUrdu words, we used Hindi language statisticalanalysis instead of Urdu language statisticalanalysis.
Since the current system is part of47Urdu-Hindi transliteration system, we prefer theoutput to be segmented according to Hindi rules.There are many words which are otherwisejoined in Hindi but written as separate words inUrdu.
So if we use the Urdu language modelingfor segmentation, the word gets broken.
Some ofthe examples are:???????
is written as combination of two words???
+????
in Urdu but its equivalent Hindi word???????
is written as a single word.
Similarly,in Hindi text the verbs are concatenated with thefuture auxiliaries ?gaa?, ?gii?
and ?ge?, whilethey are written separately in Urdu.
Thus ????+??
are written separately, but their equivalentHindi form ?????
is written as single word.
Sothe advantage of using Hindi training data is thatthe words get segmented according to thedesired Hindi rules.
Another problem with Urdutraining data was that  the Urdu training itselfcontains merged words.
So the words had to bemanually separated, though fortunately the Urducorpus compiled by CRULP (www.crulp.org)has been quite clean, but many words weremissing particularly English ones.
Anotherproblem is that the words are broken even in thecleaned Urdu corpus.
On the other hand whenwe used the Hindi training data for wordsegmentation, the problems of merged or brokenwords in the training text were not encountered.Also the Hindi corpus compiled by us had muchlarger vocabulary coverage, while the Urducorpus we used for training purpose had manycommon words such as  ??????
, ????
,??????,?????
etc.
missing.
Thus the word segmentationalgorithm which used the Hindi training set hadmuch better segmentation accuracy as comparedto the Urdu training set.We observed that though the above schemeworked fine in majority of the cases, but in a fewcases it failed to segment properly as it did nottake care of the context or adjacent words.
Asfor example consider the OW : ?????????.
Itcontains six CCs: ?
,??
,??
,?
,??
and ?.
The wordcombination selected by above methodology is :????
+ ???
+ ??
, though the correctcombination is ????
+ ??
+ ???.
It was observedthat as we did not take care about adjacentwords, thus wrong combination was selected.
Ifthe bigram information is added, then suchproblems were reduced.We thus use both unigram and bigramfrequency analysis for deciding the best wordcombination.
Each Urdu word in thecombination is formed by joining adjacentUCCs.
In each of the combination, we firstconvert each of the Urdu word to Hindi.
Next wefind the unigram and bigram frequency ofoccurrence of each Hindi word and Hindi wordpair in the combination.
The bigram frequenciesare normalized to avoid multiplication by zero.The combination with highest combined productof the unigram and bigram frequencies ofoccurrences is finally selected.
Using thismethodology we were able to generate thesequence combination is ????
+ ??
+ ???
inabove example.As we are using Hindi training data, it wasobserved that sometimes we had merged wordswhich did not had equivalent transliteratedwords in our Hindi frequency list.
As example,the OW ?????????
had to be segmented as ????
+????
?, but the equivalent transliterated Hinditerms of ????
and ????
?, were not found in theHindi frequency list.
As a result, the OW is notsegmented.
To take care of such situations, if wecannot segment using the Hindi frequency list,our system then goes for maximal matchingusing the Urdu training data.
Thus in aboveexample, after search fails in Hindi training set,the system searches for the minimum wordcombination and on finding the above two wordsin the Urdu training set segments the OW intothese words.6 Over SegmentationFor wrongly spelled or OOV (out of vocabulary)Urdu words, the system may forcibly break theword into smaller words.
As for example, oursystem forcibly broke the OW ??????
into ??
+ ??+??
.
This problem proved difficult to tackle,though we were able to partially solve it.
It wasfound that usually the OOV words were brokeninto small unrelated words.
So we put thecondition on the system to accept only thoseword segments which contained at least oneword of length greater than three or at least onebigram pair was present in the Hindi bigram list.The presence of at least one bigram pair ensuredthat all the words were not unrelated.
Thus in the48above example, the OW gets split into threewords, all of length two.
These words whentransliterated to Hindi get converted to ???
+ ?
?+ ??.
On searching the bigram list, it was foundthat neither of the bigram pair < ??
?, ??
>  and <??
, ??
> was present and thus this wordsegmentation was rejected.7 ExperimentsWe tested our system on a test data of 1,613,991Urdu words.
In the decision stage, it was foundthat 116,078  words, which make  7.19%  oforiginal text were not found in the Urdu corpusand were considered candidates forsegmentation.
After morphological analysis ofthese words, 2851 Urdu words were found to bevalid Uru words and were removed from thesegmentation candidate list.
After converting theremaining Urdu words to Hindi and checkingthem in Hindi corpus, only 35,226 words wereleft which were not present in Hindi corpus.Therefore from original 16,13,991 only 35,226(2.19%)  were passed onto segmentation stagefor checking for merged words.In the segmentation stage it was found that outof 35,226 words, 24,001 words (68.13%) hadmerged words.
The number of merged wordsvaried from 2 to 6.
Table 3 show the frequencyof number of merged words found in wordclusters.
As can be seen from the table 96.71%of merged word clusters had two merged words.Table 3.
Frequency of Merged WordsNumber of mergedwordsFrequencyPercentage2 96.71%3 2.99%4 0.25%5 0.037%6 0.004%The recall and precision for the decisionstage, which decides if the OW needs to besegmented, were found to be  99.29% and99.38% respectively.The word segmentation algorithm was able tocorrectly segment the words with 99.15%accuracy.8 ConclusionsIn this paper, we have presented a system forsolving the space omission problem in Urdu text.This system is part of the larger system designedfor transliteration of Urdu text to Hindi.
Wehave combined statistical language modeling ofboth Urdu and Hindi languages in developmentof the system.
We have presented a new schemeof using Hindi for segmenting Urdu text aftertransliteration, because Hindi uses spacesconsistently versus Urdu which has both spaceomission and insertion problems.
This is the firsttime such a segmentation scheme for handlingUrdu space omission problem has beenpresented.
The word segmentation algorithmwas able to correctly segment the words with99.15% accuracy.AcknowledgementsThe author will like to acknowledge the supportprovided by ISIF grants for carrying out thisresearch.ReferencesDurrani N. 2007.
Typology of Word and AutomaticWord Segmentation in Urdu Text Corpus.
NationalUniversity of Computer and Emerging Sciences,Lahore, Pakistan.Durrani N. and Hussain Sarmad.
2010.
Urdu WordSegmentation.http://www.crulp.org/Publication/papers/2010/Urdu Word Segmentation NAACL.pdf(accessed on 5th July 2010).Jawaid Bushra and Ahmed Tafseer.
2009.
Hindi toUrdu Conversion: Beyond Simple Transliteration.Proceedings of the Conference on Language &Technology, Lahore,.Pakistan, 24-31.Lehal G. S. 2009.
A Two Stage Word SegmentationSystem For Handling Space Insertion Problem InUrdu Script.
Proceedings of World Academy ofScience, Engineering and Technology, Bangkok,Thailand,  60: 321-324.Malik Abbas, Besacier Laurent, Boitet Christian andBhattacharyya Pushpak.
2009.
A hybrid Model forUrdu Hindi Transliteration.
Proceedings of the492009 Named Entities Workshop, ACL-IJCNLP2009, Singapore, 177-185.Nie, J.Y., Hannan, M.L.
& Jin, W. 1995.
Combiningdictionary, rules and statistical information insegmentation of Chinese.
Computer Processing ofChinese and Oriental Languages, 9(2): 125-143.Papageorgiou Constantine P. 1994.
Japanese wordsegmentation by hidden Markov model.
Proc.
ofthe HLT Workshop, 283?288.Wang Xiaolong, , Fu Guohong, Yeung Danial S., LiuJames N.K., and Luk Robert.
2000.
Models andalgorithms of Chinese word segmentation.Proceedings of the International Conference onArtificial Intelligence (IC-AI?2000), Las Vegas,Nevada, USA, 1279-1284.Xu Jia, Matusov Evgeny, Zens Richard, and Ney.2005.
Hermann.Integrated Chinese wordsegmentation in statistical machine translation.Proceedings of the International Workshop onSpoken Language Translation, Pittsburgh, PA,141-147.50
