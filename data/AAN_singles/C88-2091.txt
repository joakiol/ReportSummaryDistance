PANELLanguage Engineering : The Real Bottle Neckof Natural Language ProcessingPanel Organizer, Makoto NagaoDepartment of Electrical EngineeringKyoto University, Sakyo, Kyoto, JapanThe bottle neck in building a practical naturallanguage processing system is not those problems whichhave been often discussed in research papers, but inilandling much more dirty, exceptional (for theoreticians,but we frequently encounter) expressions.
This panelwill focus on the problem which has been rarely writtenbut has been argued informally among researchers whohave tried to build a practical natural language process-ing system at least once.Theory is important and valuable for the explana-tion and understanding, but is essentially the firstorder approximation of a target object.
As for language~current theories are Just for the basic part of thelanguage structure.
Real language usage is quite differ-ent from the basic language structure and a supposedmechanism of interpretation.
Natural language process-ing system must cover real language usage as much aspossible.
The system model must be designed in such away that it is clearly understandable by the support ofa powerful linguistic theory, and still can acceptvarieties of exceptional linguistic phenomena which thetheory is difficult to treat.
How we can design such asystem is a major problem in natural language process-ing, especially for machine translation between thelanguages of different linguistic families.
We have tobe concerned with both linguistic and non-llngulstlcworld.
While we have to study these difficult problems,we must not forget about the realizability of a usefulsystem from the standpoint of engineering.I received valuable comments from Dr. Karen Jensenwho cannot participate in our panel, and kindly offeredme to use her comments freely in our panel.
I want tocite her comments in the followings.Why Computational Grammarians Can BeSkeptical About Existing Linguistic TheoriesKaren .lensenIBM TJ Watson Research CenterYorktown Heights, NY10598, U.S.Ai.
We need to deal with huge amounts of data (number of 5.
We are not interested in using the most constrained/sentences, paragraphs, etc.).
Existing linguistic restricted formalism.
LTs generally are, because oftheories (LTs) play with small amounts of data.2.
The data involve many (and messy) details.
LTs areprematurely fond of simplicity.
For example: punctua-tion is very important for processing real text, butLTs have nothing to say about it.
(This is actuallystrange, since punctuation represents -- to someextent -- intonational contours, and these arecertainly linguistically significant.)3.
There is no accepted criterion for when to abandon anLT; one can always modify theory to fit counterexam-ples.
We have fairly clear criteria: if a computa-tional system cannot do its Job in real time, then itfails.4.
We need to use complex attribute-value strnctures,which cannot be manipulated on paper or on a black-board.
"Trees" are only superficially involved.This means we are absolutely committed to computation.LTs have various degrees of commitment.Existing linguistic theories ate of limited usefulness tobroad-coverage, r al-world computational grammars, perhapslargely because xisting theorists focus on limited notions of"grammaticality," rather than on the goal of dealing, in somefashion, with any piece of input text.
Therefore, existing the-ories play the game of ruling out many strings of a language,rather than the game of trying to assign plausible structuresto all strings.
We suggest that the proper goal of  a workingcomputational grammar is not to accept or reject strings, but toassign the most reasonable structure to every input string, andto comment on it, when necessary.
(This goal does not seemto be psychologically implausible for human beings, either.
)For years it has seemed theoretically sound to assumethat the proper business of  a grammar is to describe all of thegrammatical structures of its language, and only those stmc-trees that ate granlmatical:The grammar of L will thus be a device thatgenerates all of the grammatical sequences of L andnone of rhe ungrammatical ones.
(Chomsky 1957,p.
13)448supposed claims about language processing mechanisms?6.
We are interested in uniqueness as much as in gener-ality.
ITs usually are not.7.
We are more interested in coverage of the gran~arthan in completenesslof the grammar.
LTs generallypursue completeness.8.
We aim for "all," but not "only" the grammaticalconstructions of n natural language.
Defining un-grammatical structures is, by and large, a futiletask (Alexis Manaster-Ramer~ Wlodzimierz Zadrozny).9.
Existing LTs give at bes ta  high-level specificationof the structure of natural language.
Writing acomputational granmmr is llke writing a real programgiven very abstract specs (Nelson Uorrea).i0.
We are not skeptical of theory, Just of existingtheories.At first blush, it seems unnecessary to conjure up anyjustification for titis claim.
Almost by definition, the properbusiness of a grammar should be grammaticality.
However, ithas been notoriously difficult to draw a line between "gram.maticai" sequences and "ungnmunalicai" sequences, for anynatural human language.
It may even be provably impossi-ble to define precisely rhe notion of grammaticality for anylanguage.
Nalural language deals with vague predicatus, andmight itself be called a vague predicator.This being tree, it still seems worthwhile to ~ at parsingALL of the gr,'unmalical strings of a language, but parsingONLY the grammatical strings becomes a dubious enteq~riseat best.
Arguments for doing so reduce ither to dogma, or tosome general notion of proptiety.
Argmnenis against, however,arc easy to come by.
Leaving theoretical considerations a idefor the moment, consider these praguratic ones:(a) The diachronic argumeut.
The creativity of humanuse of language is great, and language systems are alwayschanging.
A construction that was once unacceptable b comesacceptable over time, and vice versa.
Even if a grammar could
