SYNTACTIC APPROACHES TO AUTOMATIC BOOK INDEXINGGerard SaltonDepartment of Computer ScienceCornell UniversityIthaca, NY 14853ABSTRACTAutomatic book indexing systems arebased on the generation of phrase struc-tures capable of reflecting text content.?
Some approaches are given for theautomatic construction of back-of-bookindexes using a syntactic analysis of theavailable texts, followed by the identifica-tion of nominal constructions, the assign-ment of importance weights to the termphrases, and the choice of phrases as index-ing units.INTRODUCTIONBook indexing is of wide practicalinterest o authors, publishers, and readersof printed materials.
For present purposes,a standard entry in a book index may beassumed to be a nominal construction listedin normal phrase order, or appearing insome permuted form with the.
principalterm as phrase head, Cross-references("see" or "see also" entries) between indexentries are also normally used in the index.Excerpts from two typical book indexesappear in Fig.
1.Attempts have been made over theyears to mechanize the book indexing task,based in part on the occurrence characteris-tics of certain content words in the docu-ment texts \[Borko, 1970\], and in part onmore ambitious syntactic methodologies.\[Dillon, 1983\] However, as of now, com-pletely viable automatic book indexingmethods are not available.
Two mainThis study was supported in part by a grant fromOCLC Inc.. and in part by the National Science Foun-dation under grant \[R\[-87-02735.research advances may, however, lead tothe development of improved automaticbook indexing procedures.
These includethe generation of advanced syntacticanalysis procedures, capable of analyzingunrestricted English texts, as well as theconstruction of powerful automatic indexingsystems using sophisticated term weightingsystems to assess the importance of theindexing units.
\[Salton 1975a, 1975b\] Byjoining the available linguistic procedureswith the available know-how in automaticindexing, satisfactory book indexing sys-tems may be developed.AUTOMATIC PHRASE CONSTRUCTIONBook indexing systems differ fromstandard automatic text indexing systemsbecause complex, multi-word phrases arenormally used for indexing purposes ratherthan the single term entries that are pre-ferred in conventional automatic indexingsystems.
The phrase generation systemdescribed in this note is based on anautomatic syntactic analysis of the avail-able texts followed by a noun-phrase iden-tification process using parse trees as inputand producing lists of nominal construc-tions.
The parsing system used in thisstudy is based on an augmented phrasestructure grammar, and was originallydesigned for use in the EPISTLE text-critiquing system.
I (Heidorn, 1982, Jensen,1983)A typical document abstract is shown1 The writer is indebted tothe IBM Corporation a d toDr.
George Heidorn for making available the PLNLPparsing system for use at Cornell University.204in Fig.
2, and the output produced by thesyntactic analysis program for sentence 2 ofthe document is shown in Fig.
3.
It may benoted that the syntactic output appears inthe form of a standard phrase marker, thevarious levels of the syntax tree being listedin a column format from left to right.
Dur-ing the analysis, a head is identified foreach syntactic onstituent, identified by anasterisk (*) in the output.
Thus in Fig.
3,the VERB is the main head of the sentence;the head of the noun phrase preceding themain verb is the NOUN representing theterm "oPerations", etc.The phrase formation system used inthis study builds two-term phrases by com-bining the head of a constituent with thehead of each constituent that modifies it.
(Fagan 1987a, 1987b) For the sample sen-tence of Fig.
3, such a strategy produces thephrasesdevelopment - exceptiondictionary - developmentnegative - dictionarysystem operationsIn the phrase output, the dependent term islisted first in each case, followed by thegoverning term.
Note that the phrase gen-eration system identifies apparently reason-able constructions such as "dictionarydevelopment" and "system operations", butnot the unwanted phrases "exception opera-tions" or "exception systems".AUTOMATIC PHRASE ASSIGNMENTAn automatic phrase construction sys-tem generates a large number of phrases fora given text item.
Fig.
4 lists all thephrases produced for the abstract of Fig.
2.Phrases occurring in the document title areidentified by the letter T, and phrasesobtained more than once for a given docu-ment are identified by a frequency marker(2) in Fig.
4.
The output of Fig.
4 could beused directly in a semi-automatic indexingenvironment by letting the user chooseappropriate index entries from the availablelist.
The standard entries from the figuremight then be manually chosen for indexingpurposes by the document author, or by atrained indexer.In a fully automatic indexing system,additional criteria must be used, leading tothe choice of some of the proposed phraseconstructions, and the rejection of some oth-ers.
The following criteria, among others,may be useful:For sentences that produce more thanone acceptable syntactic analysis out-put, all analyses except the first onemay be eliminated; (in the Heidorn-Jensen analyzer multiple analyses arearranged in decreasing order ofpresumed correctness).Phrases consisting of identical juxta-posed words ("computations-computation" in Fig.
4) may be elim-inated.Phrases consisting of more than twowords (e.g.
"document-retrieval-system") may be given preference inthe phrase assignment process.Phrases occurring in document titles,and/or section headings may be givenpreference.Noun-noun constructions might begiven preference over adjective-nounconstruction.A further choice of phrases, as well asa phrase ordering system in decreasingorder of apparent desirability, can be imple-mented by assigning a phrase weight oeach phrase and listing the phrases indecreasing weight order.
Two different fre-quency criteria are important in phraseweighting:The frequency of occurrence of a con-struct in a given document, or docu-ment section, known as the term fre-quency (tf)The number of documents, or docu-ment sections, in which a given con-struct occurs, known as the documentfrequency (df).
22 For book indexing purposes, a book can be brokendown into sections, or paragraphs; the term frequencyand document frequency factors are then computed forthe individual book components205The best constructs for indexing purposesare those exhibiting a high term frequency,and a relatively low overall document fre.quency.
Such constructs will distinguishthe documents, or document sections, towhich they are assigned from the remainderof the collection.
The corresponding termweighting system, known as tf.idf is com-puted by multiplying the term frequencyfactor by an inverse document frequencyfactor.Fig.
5 shows selected phrase outputbased in part on the use of automaticallyderived term weights.
The top part of thefigure contains the automatically derivedconstructs containing more than two terms.These might be used for indexing purposesregardless of term weight.
In addition, thetwo-term phrases whose term frequencyexceeds 1 in the document might also beused for indexing purposes.
This would addthe 9 phrases listed in the center portion ofFig.
5.Some of the phrases with ff > 1 haveeither a very high document frequency (125for "retrieval system") or a very low docu-ment frequency of 1, meaning that thephrase occurs only in the single document659.
In practice, a reasonable indexing pol-icy consists in choosing phrases for which tf> k 1 and k 2 < df < k3 for suitableparameters kl ,k2,  and k 3.
When theseparameters are set equal to 1, 1 and 100,respectively, the 5 phrases identified byasterisks in Fig.
5 are chosen as indexingunits.The bottom part of Fig.
5 shows aranked phrase list in decreasing orderaccording to a composite (tf ?
idf) phraseweight.
Using such an ordered list, a typi-cal indexing policy consists in choosing thetop n entries from the list, or choosingentries whose weight exceeds a given thres-hold T. When T is chosen as 0.1, the 12phrases listed at the bottom of Fig.
5 areproduced.
It may be noted that most of theterms listed in Fig.
5 appear to be reason-able indexing units.In a practical book indexing system, aphrase classification system capable ofdetermining relationships between similar,or identical, phrases becomes useful.
Sucha phrase classification then leads to thechoice of canonical representations for eachgroup of equivalent phrases, and to theassignment of "see" and "see also" refer-ences.
Phrase relationships can be deter-mined by using synonym dictionaries andvarious kinds of phrase lists.
In addition,attempts have also been made to use theterm definitions contained in machine-readable dictionaries to construct hierar-chies of word meanings.
(Walker, 1987;Kucera, 1985; Chodorow, 1985) Theautomatic onstruction of phrase classifica-tion systems remains to be pursued infuture work.REFERENCESBorko, H., 1970, Experiments in BookIndexing by Computer, Information Storageand Retrieval, 6:1, 5-16.Chodorow, M.W., Byrd, R.J., and Heidorn,G.E., 1985, Extracting Semantic Hierar-chies from a Large On-Line Dictionary,Proceedings of 23rd Annual Meeting of theAssociations for Computational Linguistics,Chicago, IL.Dillon, M. and McDonald, L.K.
1983, FullyAutomatic Book Indexing, Journal of Docu-mentation, 39:3, 135-154.Fagan, J.L., 1987a, Experiments inAutomatic Phrase Indexing for DocumentRetrieval: A Comparison of Syntactic andNon-Syntactic Methods, Doctoral Disserta-tion, Cornell University, Technical Report87-868, Department of Computer Science,Cornell University, Ithaca, NY.Fagan, J.L., 1987b, Automatic PhraseIndexing for Document Retrieval: AnExamination of Syntactic and Non-Syntactic Methods, Tenth A n n ualACM/SIGIR Conference on Research andDevelopment in Information Retrieval, NewOrleans, LA, ACM, NY, 1987.Heidorn, G.E., Jensen, K., Miller, L.A.,Byrd, R.J., and Chodorow, M.S., 1982, TheEPISTLE Text Critiquing System, IBM Sys-tems Journal, 21:3, 305-326.Jensen, K., Heidorn, G.E., Miller, L.A., andRavin, Y., 1983, Parse Fitting and ProseFixing: Getting Hold on Ill-Formedness,American Journal of Computational206Linguistics, 9:3-4, 147-160.Kucera, H., 1985, Uses of On-Line Lexicons,Proceedings First Conference of the U.W.Centre for the New Oxford English Diction-ary: Information in Data, University ofWaterloo, 7-10.Salton, G., 1975a, A Theory of Indexing,Regional Conference Series in AppliedMathematics, No.
18, Society of Industrialand Applied Mathematics, Philadelphia,PA.Salton, G., Yang, C.S., and Yu, C., 1975b, ATheory of Term Importance in AutomaticText Analysis, Journal of the ASIS, 26:1,33-44.Wa!
}:er, D.E., 1987, Knowledge ResourceTools for Analyzing Large Text Files, inMachine Translation: Theoretical andMethodological Issues, Sorgei Nirenburg,editor, Cambridge University Press, Cam-bridge, England, 247-261.207Game tree, 259-270Garbage collection, 169-178Go to statement, 11Graphs, 282-334activity networks, 310-324adjacency matrix, 287-288adjacency lists, 288-290adjacency multi lists, 290-292bipartite, 329bridge, 334definitions, 283-287Eulerian walk, 282incidence matrix, 331inverse adjacency lists, 290orthogonal lists, 291representations, 287-292shortest paths, 301-308spanning trees, 292-301transitive closure, 296, 308-309Data security, 360, 390-394DBTG (Data Base Task Group), 377-380Deadlock prevention, 395-396Decision support system, 7, 9, 358-359Decomposition ofrelations, 394Deductive system, 259, 356, 420Deep indexing, 55Deep structure of language, 275Default exit, 343Delay cost (see Cost analysis)Density(see Document space density)Dependency (see Functional dependency; Term dependency model)Depth-first search, 223Descriptive cataloging, 53Deterioration, 225-226, 233DIALOG system, 30-34, 38, 46-48Dice coefficient, 203Dictionary, 56-57,101-103, 259-263, 285-286Dictionary format, 57in STAIRS, 36Figure 1.
Typical Book Index EntriesDocument 659.TA Highly Associative Document Retrieval System.WThis paper describes a document retrieval system implemented with a subset of the medi-cal literature.
With the exception of the development of a negative dictionary, all systemoperations are completely automatic.
Introduced are methods for computation of term-termassociation factors, indexing, assignment of term-document relevance values, and computa-tions for recall and relevance.
High weights are provided for low-frequency terms, andretrieval is performed irectly from highly connected term-document files without elaboration.Recall and relevance are based on quantitative internal system computations, and results arecompared with user evaluations.Figure 2.
Typical Document Abstract208DECL PP PREPDETNOUN*PP"with"AI~*"exception"PREPDETNOUN*PPNP  QUANT ADJ*NP  NOUN*NOUN* "operations"VERB*  "are"A JP  AVP  ADV*ADJ* "automatic"PUNC """the""or'ADJ* "the""development"PREP "of'DET ADJ*AJP ADJ*NOUN* "dictionary"PUNC " ""all""system""completely""a""negative"Figure 3.
Typical Output of Syntactic Analysis Program for One Sentenceassignment computationassociation assignmentassociation computationsassociation factorsassociation i dexingassociative r trieval (T)*associative system (T)computations computationcomputation methodsconnected filedevelopment exceptiondictionary developmentdocument retrieval (T,2)*document retrieval system (2)document system (T,2)elaboration filesfactors computationindexing computationinternal computationliterature subsetlow-frequency termsmedical literaturenegative dictionaryquantitative computationsrecall computations*relevance values*retrieval system (T)subset implementedsystem computationssystem implementedsystem operationsterm-document filesterm-document relevanceterm-document relevance valuesterm-document values *term-term-assingmentterm-term association *term-term association factorsterm-term computationterm-term factorsterm-term indexinguser evaluation *values assignmentFigure 4.
Phrases generated for Document 659(T -- title; 2-- occurrence frequency of 2; * -- manually selected)2091.
Three-Term Phrases document retrieval systemterm-term assocaition factorterm-term relevance values2.
Two-Term Phrases (with Term Frequency greater than I)Phrase Frequency inDocument (tf)Number of Documents forPhrase (out of 1460) (dr)retrieval system 2*document system 2term-term computation 2term-document 2term-term factors 2*term-term indexing 2*document retrieval 2*term-term association 2*term-term assignment 212525III528223.
Two-Term Phrases in Normalized (tf x idf) Weight Order (df > 1)Phrase Weight Phrase Weightterm-term assignmentterm-term associationterm-term indexingdocument systemdocument retrievalindexing computation.2128.2128.1832.1313.1276.1064association factorsassociative systemlow frequency termsassociative retrievalliterature subsetterm-document files.1064.1064.1064.1064.1064.1064Figure 5.
Automatic Phrase Indexing for Document 659210
