Feature Graphs and Abstract Data Types:A Unifying ApproachChristoph BEIERLE and Udo PLETATIBM Deutschland GmbHScience and Technology - LILOGP.O.
Box 80 08 807000 Stuttgart 80, West Germany(electronic mail on EARN/BITNET:BEIERLE at DS#LILOG, PLETAT at DS#LILOG)Abstract :Feature graphs appearing in unification--based grammar formalisms andalgebraic specif icat ions of abstract data types (ADTs) are both usedfor def in ing a col lect ion of objects together with functions betweenthese object sets.
Start ing from this observat ion we define analgebraic semantics for feature graphs by assigning an algebraicspeci f icat ion to each feature graph.
This opens the rich world ofsemantical foundations for abstract data types to the area offeature graphs and thus to uni f icat ion grammar formalisms.
Usingresults from ADT theory we define a sim~le and fast syntacticdecis ion procedure test ing the usual consistency condit ions onfeature graphs like constant consistency, constant/complexconsistency and acycl ic i ty on the algebraic speci f icat ion assignedto a feature graph.
With this machinery at hand feature graphuni f icat ion becomes union of feature graph specif icat ions fol lowedby the consistency test.1.
IntroductionUni f icat ion-based grammar formalisms havebecome a popular f ield o'f research.
Thesubject has attracted the interest not onlyof (computer) l inguists but also of computerscientists, especial ly in the area of logicprogramming, see e.g.
\[Pe 87\].
Due to theformality of grammars we also observeactivit ies developing foundations for theformal semantics of var ious approaches onuni f icat ion grammars, e.g.
\[PS 84\], \[KR 86\],\[RK 86\], \[Pe 87\], \[Jo 87\].In this paper we invest igate the relat ionshipbetween feature graphs on the one hand andalgebraic speci f icat ions of abstract datatypes (ADTs) on the other hand.
There is anatural correlat ion between both these areassince a feature graph as well as an abstractdata type def ines a col lect ion of objectstogether with functions relat ing the objects.We present a formal semantics for featuregraphs by assigning to each feature graph Gan equational ADT speci f icat ion ~(G), cal ledfg--specification.
This opens the rich wor ldof ma'thematical foundations of ADTspecif icat ions (e.g \[GTW 78\], \[EM 85\]) inorder to obtain a better - not only - formalunderstanding of the nature of featuregraphs.In particular, we provide a model - theoret iccharacter izat ion of various consistencycondit ions for feature graph speci f icat ionsref lect ing the consistency concepts usual lyimposed on feature graphs such asc lash-freeness and acyclicity.
These40model- theoret ic  character izat ions haveproof- theoret ic  counterparts  in terms ofsyntactic condit ions on the deduct ive closureof the set of equations of r(G)oAl though the proof- theoret ic  consistencycharacter izat ions are of syntactic nature, atest of their val id i ty  requires to examinethe deductive closure of the set of equationsof a fg-specif ication.
Our object ive is torestr ict consistency checks to equationsexpl ic i t ly  ment ioned in a fg-specif icationoIn the ADT-wor ld  there is a wel l -known toolfor such tasks: the Knuth-Bendix algorithm(\[KB 70\]).
We present a Knuth-Bendix likecomplet ion procedure t ransforming anyfg-speci f icat ion into a reduced normal form.We show that the model - theoret ic  consistencycharacter izat ions for G are equivalent to thepresence resp.
absence of certain types ofequations in this reduced normal form.These results are used for def in ing thesemantics of the uni f icat ion of two featuregraphs GI and G2 as the (set-theoreticcomponentwise) union of ~(GI) and x(G2 )fol lowed by the normal izat ion process us ingthe complet ion algor ithm and the consistencycheck on the result ing set of equations?2.
FeaturegraphsA feature graph is a d i rected graph with ad ist inguished root node.
The edges of thegraph are cal led features.
An atomic graph isjust a symbol; it contains no features.
Acomplex graph is a set of feature-value pairswhere each va lue is e i ther  an atomic graph oragain a complex  one.
Two paths  s ta r t ing  atthe root and end ing  at the same node are saidto co-.refer.
Feature  graph un i f i ca t ion  is ab inary  eperat ion  tak ing  two graphs  andreturning\[ a graph conta in ing  exact ly  thein format  J.on of both  graphs  if they areunifiabl~.
~, and fa i ls  otherwise.
An atomicgraph is un i f iab le  only  wi th  i tse l f  and theempty graph.
A complex  graph G~ is un i f iab lewi th  the, empty graph, and G~ is un i f iab lewi th  a complex  graph G2 if for all featuresin both  G: and G2 the respect ive  vah les  areunifiab\](~?Several  notat ions  for feature  graphs  havebeen  suggested?
The graph ica l  representat ionofNPcou ld  a l~o be  represented  in  matr ix  fo rm:~Cat I: VPAgrI Agr  < 1 >in the matr ix  notat ion  core ference  isind icated  by numbers  enc losed  i n  brackets .Another  notat ion,  wh ich  for ins tance  isemployed  in PATR, uses specia l  equat ionsindicati\[Lg core ference  of paths  and atomicva lues  aL the end of of paths,  respect ive ly :< Cat > == VP< Subj Cat > == NPSubj Agr  > : < Agr >In the fo l low ing  we wi l l  d i scuss  anequat Jon~l  representat ion  of feature graphsin greater  detai l .
Th is  representat ion  wi l lbe o r iented  towards  the equat iona lspec i f i ca t ion  of abst ract  data  types, thusmak ing  ~.vai lable the power fu l  mach inerydeve loped  for such spec i f i cat ions?Above we d id not make a c lear  d i s t inc t ionbetween the syntax for descr ib ing  featuregraphs and feature graphs as semant ica lobjects.
In fact, such a d i s t inc t ion  has beenomi t ted  to a large extent  in the l i terature.The s i tuat ion  changed w i th  approaches  thatfo rmal i ze  the concepts  of feature graphss ince such a d i s t inc t ion  is essent ia l  for aformal  t reatment  (see e.g.
\[KR 86\], \[Jo 87\]).In the area of ADT spec i f i ca t ions  the str ictseparat ion  of the syntact ic  and the semant iclevel has u lways beet* a centra l  aspect.
OurADT-.based approach  to feature  graphs adoptsthis  two- leve l  v iew in a natura l  way: Featuregraph spec i f i ca t ions  are the syntact i ca lmeans to descr ibe  feature  graphs  wh ich  arethe mode ls  (or s t ructures)  of suchspec i f icat ions .3._Equational Specifications3oi ADT Specifications: Syntax and SemanticsWe int roduce the bas ic  not ions  of abst ractdata type spec i f icat ions .
More deta i ledin fo rmat ion  can be gathered  in \[GTW 78\] or\[EM 85\ ] .A s .~gt_ure  is a pai r  Z = <S, O> where  S is aset of sorts and O = <O >a fami ly  of sets of ~erators  w.r.t.
S. Wewr i te  op: s~ ...s~ -> s for an operator  whosei - th argument  is of sort s~ and wh ichde l ivers  a resu l t  of sort s. The we l l - fe rmedterms w.r.t.
Z and S -sor ted  var iab les  V forman S - indexed fami ly  Tz (V), and an equat ionover ~ and V is of the form i = r where  1 andr are terms of the same sort.
An a l~@hra ic~gcifiqation is a pa i r  SP = <Z, E> where Zis a s ignature  and E is a set of equat ionsover Z and some fami ly  of var iab les  V.Bes ides  these syntact i ca l  concepts  of ADTspec i f i ca t ions  we prov ide  the basicsemant ica l  concepts  of heterogenous  algebras:G iven  a s ignature  ~ = <S, O>, a ~-a lgebra  Acons is ts  of a fami ly  of sets A = < A, > .
.
.
.and for each operator  op e O .... there is afunct ion  opA : A, ---> A~ .
A sat is f ies  anequat ion  1 = r if for each ass ignment  ofva lues  from A to the var iab les  of 1 and r theeva luat ion  of 1 and r in A y ie lds  the samee lement  of A.
A is a <Z,E>-a lgebra  if Asat is f ies  every e ~ E.We say that E semant ica l ly  impl ies  anequat ion  e if every <~,E>-a lgebra  sat is f iese.
It is we l l -known that  this mode l - theoret i cnot ion  of sa t i s fac t ion  co inc ides  wi th  theproo f - theoret i c  not ion  of deduct ion  (B i rkhof ftheorem) where  e can be proved  from E iff ecan be deduced from E us ing  the rules of theequat iona l  ca lcu lus  (e.g.
\[EM 85\]).
We let E edenote the deduct ive  c losure  of E.The fo l low ing  theorem is one of the centra lresul ts  of ADT theory  and forms the bas is  fo\]:"de f in ing  the semant ics  of a spec i f icat ion.Theorem:For each a lgebra ic  spec i f i ca t ionSP = <~, E> there is an in i t ia l  a lgebraTsp sat i s fy ing  the equat ions  in E.T~, is the so -ca l led  ~uot ient  term a lqebr  ~cons is t ing  of congruence  c lasses  - obta inedby fac tor i za t ion  accord ing  to the equat ionsin E - of constant  terms over Z.
The in i t ia la lgebra  Tsp is 'the ADT spec i f ied  by SP.
Itcan be character i zed  in fo rmal ly  by twocondit ions:  all its e lements  are denoted  bysome ground term ("no junk"), and itsat is f ies  a ground equat ion  e iff every  other<Z,E>-a lgebra  also sat i s f ies  e ("noconfusion").3,2 Feature Graph SpecificationsFeature  graphs can be seen as par t i cu la ra lgebra ic  spec i f i ca t ions  (see also \[Pe 87\]):41There are only  constants  ( represent ing  atomicvalues)  and unary  funct ions  ( represent ing  thefeatures)  in the s ignature.
We assume thatATOMS is the set of all atomic va lues  andFEATURES is set of all features  occur ing  inthe feature  graphs; both  sets may be in f in i tein general .
An equat ion  s = t is g iven forpaths  hav ing  the same f inal  node, or forpaths  end ing  at an atomic value.For instance,  cons ider  the feature  graph%/Fo l low ing  e.g.
Pere i ra  and Sh ieber  (\[PS 84})this feature graph can be descr ibed  by theequat ions< f g > = < h >< g > = aleav ing  the root symbol  of the feature  graphimpl ic i t  and us ing  the order  for thea t t r ibutes  as in the examples  of Sect ion  2.However,  in equat iona l  ADT spec i f i ca t ions  itis essent ia l  to state exp l i c i t l y  to wh ichob jects  an equat ion  can be appl ied.For s impl ic i t ly ,  we f i rs t  assume that we haveonly  one sort wh ich  we cal l  "universe",  andthat we have a var iab le  x of sort "universe' .By us ing  a funct iona l  notat ion  for thea t t r ibutes  and thus the reverse order  of thea t t r ibutes  as compared  to e.g.
\[PS 84\], wewou ld  arr ive at the spec i f i ca t ionsorts un iversefunct ions  a: -> un iversef,g,h: un iverse  -> un iverseequat ions  g(f (x))  = h(x)g(x)  = aHowever,  by s imply  in t roduc ing  a un iversa l lyquant i f ied  var iab le  x of sort  "universe" werun into problems:  FromI, g( f (x))  = h(x)2. g(x) = awe can deduceh(x)  = aby us ing  the usua l  ru les of the equat iona lca lcu lus  and subst i tu t ing  f(x) for x inequat ion  (2).
The prob lem is that  x shou ld  bequant i f ied  on ly  over  all  ob jects  descr ibed  bythe or ig ina l  feature  graph.
But f(x) is notneccessar i l y  in th is  set, so we must  f ind away of avo id ing  such a subst i tut ion.
A s impleway of ach iev ing  this  is to swi tch  to anothers ignature  wi th  an add i t iona l  sort, say "soi',denot ing  the "sort of interest"  andcompr is ing  all ob jects  descr ibed  by a featuregraph.The sort  "sol" is then a subsort  of sort"universe' .
Th is  cou ld  be expressed  byextend ing  the a lgebra ic  spec i f i ca t ions  toinc lude also subsort  re lat ionsh ips ,  thusmov ing  f rom many-sor ted  spec i f i ca t ions  (asdescr ibed  in Sect ion  3.1) to so -ca l ledorder -sor ted  spec i f i ca t ions  (e.g.
\[GM 87\]).Here, we want  to st ick  to the s impler  case ofmany-sor ted  spec i f i cat ions .A subsort  re la t ionsh ip  in a many-sor tedset t ing  is expressed  by an inc lus ion  funct ion42wh ich  we will.
denote  byi: soi -> un iversein our case.
In order  to avo id  prob lems w i thempty  sorts (\[GM 87\], \[EM 85\]) we assume thatthere is a constant  "const" of sort  "sol'.For the rest  of this paper  we also assumethat x is a var iab le  of sort  "seA'.
Thus~ thefeature graph above g i~es r ise to the featuregraph spec i f i ca t ionsorts sol, un iversefunct ions  a: -> un iversef,g,h: un iverse  ~> uz~iverseconst: .-> soii :  soi ~> un iverseequat ions  g( f ( i (x ) ) )  = h( i (x) )g(k(x ) )  = amot ivat ing  the fo l low ing  def in i t ion:A feature  graph s ignature  ( fg -s ignature)Z = <S,OP> is a s ignature  wi thS : {sol, ~lniverse}OP : Atoms(Z)  u Features(X)u {const :  -.> soi}U {i: SOJ -> un iverse}where  :Atoms(E)  c {a: -> un iverse  Ia s ATOMS\]Features(Z)  c {f: un iverse  -> un iverse  \[f s FEATURES}A feature  graph  spec i f i ca t ion(fg-.specif ication) SP ~ <Z,E> has afg -s ignature  Z and a set of equat ions  overZ and {x}.Wi th  the de f in i t ions  above it shoud beobv ious  how to t rans form any feature graph Ginto a fg -spec i f i ca t ion  ~(G): The s ignatureof ~(G) conta ins  all atoms and featuresoccur ing  in G as constants  resp.
unaryfunct ions,  and for any co-referring paths  orany path  end ing  w i th  an atomic  va lue  there isan equat ion  in ~(G).
Thus, we have awe l l -de f ined  funct ion~: Feature  graphs -> fg -spec i f i ca t ionsmak ing  ava i lab le  the mach inery  that  has beendeve loped  for a lgebra ic  spec i f i cat ions .4.
Consistency_In \[PS 84\] the on ly  incons is tency  cons ideredis an equat ion  of the form a ~ b where  a andb are d i s t inc t  constants .
Such a s i tuat ion  Jsca l led  constant  c lash  in \[Pe 87\] whereadd i t iona l ly  a constant L_cpmP!exf~ lash  iscons idered.
Such a c lash  is "any set of twoequat ions  e~ and e2 in wh ich  e~ equates  somepath  p to some other  path  or atomic va lue  ande2 equates  a str ict  p re f ix  of p to aconstant"  \[Pe 87\].Whereas  \[PS 84\] also cons ider  cyc l ic  featuregraphs, Kasper  and Rounds  (\[KR 86\]), ~omePATR- I I  imp lementat ions ,  and also the STUFfo rmal i sm descr ibed  in \[Us 86\], on ly  a l lowfor 99~fclic feature  graphs.
We wi l l  show thatthe absence of cyc les  in a feature  graph car~also be expressed  as a cons is tency  cond i t ionon the cor respond ing  fg -spec i f i cat ion .Be low we use the mach inery  of abs t rac t  datatypes in order  to def ine  several  not ions  ofsemantical, cons is tency  for a feature grap\[b.Finest W(-: i n t roduce  a r io_ ta t : io r%A tex fa: ; , , ( .
.
.
( f~( t ) )~ . )
~ 'r~(\[x\])witht ~ T, (\[X\]),,,i ..... .
.... fl ~ Features(Y,),and n k 0 wi l l  be writ'ten asp( t )where  p := : , !
.o~of~ e Features (} : ) *oNote  that  the  notat ion  f .
( .
.
.
( f~  ( t ) )  .
.
.
)re f lec ts  -the usua l  mathemat ica l  notat ion  forfunct ion  compos i t ion ,  whei'eas the ~)athnotat ion  amp Loyed for feature  graphs  assketched : i( l  Sect ion  2 uses  the reverse  orderLet  S~' == -<}:~ \]!
',> be cl .fg-;~pe<:ificatien.A <}\]~ E>-al.gebra A is~ cpn\ [~tt~.g 'h  ~ g0ns is te~c J f ffor all a,  b ~.
Atoms(Z)  with  a ~: b wehave  :u cons tagt/<'.omp.\].ex cons.isten t i f ffor  al l  a~ b ~ Atoms(Z)  and a\]\] pl, p2,q ~ Feature~;(Z): tlhere ex is ts  ral e lemento ~ A, , ,~ ,,?
:iti~:7p\]~ (i~ (o ) )  : :  a,,:: >p2,,(p\]., (i, (o))) + q^( i~(o) )&) / ,2a(p l~ ( i .
(o ) ) )  ~- b^ac yc l'i,/ i f ffo r  all  p~ q ~ Features (Z)  ?
there  ex is tsan e lement  o ~ A,o?
with:p~(q~(i^(o))) + q^(i^(o))SP is .g_grn}i ta l r t  cons :Ls te .
l - t t  , cor~staL~t/gpmplgx -co l l s i s te_ l J t  or" .gcycliq i f f  there  is at leastone mode\], of SP hav ing  the respect iveproper t?
.The above  de f in i t ion  of\[  cens Js tency  of afg -spec i f i~at ion  SP suggests  that  one has tosearch  through the ent i re  (:lass of  mode ls  ofSP in or, let to determJ ne whether  SP :i scons is tent  or net.
The fol ).owing theoremshows the power  ef  in i t ia l  mode ls  in thesense of shr ink ing  the search  space: only thein i t ia l  mode l  has  to be cons idered.Theorem :The fg- speei  ficaT-ion SP is constantcons is tent ,  constant /complex  cons is tent ,or acyc l i c  i f f  the in it ia l  a lgebra  Ts~, hasthe respect ive  proper ty .The above pz:opert:ies can be proven for  thein i t ia l  mode l  by us ing  the deduct ive  c losureE* of  a set of  equat ions  E.Theoz'em :The i n i t ia l  a lgeb lTa  \[I,',3 ~ of thefg -spec \ [ f i ca t ion  SP isu constant  cons is tent  i f ffor all a, b ~ Atoms(Z)  w i th  a + bWe have:  a :: 'b ~/ E*~i coiL.~tar~t/complex cons is tent  i f ffo r  a l l  a~ b ?
Atom:3(} ; )  and  a l lt ) \ [~  t :)2 , q ~ Features(Z)"%'?,~ have :pl(' i(const)) = ;~.
~ E';,"i t~p\ ] .
iesp2(p l ( i ( const ) ) )  ::: q( i (const ) )  / E*andp2(p l ( i ( const ) ) )  = b / E* Iacyc l ic  i f ffor al l  p, q e Features (Z)  ~we have  :p(q( i (const ) ) )  --: q ( i ( const ) )  / E*The equ iva lences  es tab l i shed  by  these twotheorems show us that  the cons is tency  of afg -spec i f i ca t ion  <Z, E> can  be tes ted  byinspect ing  tile deduct ive  c losure  E* for theabsence  of  cer ta in  equat ions,  depend ing  onwh ich  cons is tency  aspects  one is in teres tedill.
S ince E* may be too large for per fo rmingthese tests  e f f i c ient ly  it  wou ld  be des i rab leto be able to per fo rm the cons is tency  testson E only.
ill the next  sect ion  we deve lop  acomplet ion  procedure  for the set of  equat ionsE wh ich  t rans forms E into a normal i zed  set E"such that  it  Js su f f i c ient  to check  E'.
Thecomplet.io~), p rocedure  thus prov ides  a s impleand fast  dec is ion  procedure  for ourcons is tency  const ra ints .5o _Ti)9 completion pr~cedureOur complet ion  procedure  is a var iant  of theKnuth -Bend ix  a lgor i thm (\[KB 70\]) wh ich  J.s awe l l -known method for tes t ing  proper t ies  ofrewr i te  ru le systems and for t rans formingequat ions  into a set of rewr i te  rules, wh ichthen const i tu te  a dec is ion  procedure  for theequal i ty ,  in general ,  there  are someprob lems w i th  the Knuth -Bend ix  a lgor i thm: \]itmay not  terminate,  or it may terminate  w i thfa i lure.
However ,  we csn show that due tothe res t r i c ted  form of equat ions  theseprob lems do not  occur  when dea l ing  w i thfg -spec i f i ca t ions .We f i rs t  de f ine  an order  re la t ion  ~ on theset T~ ({x}) of terms over  an fg -s ignature  Z.We assume that  ATOMS (resp.
FEATURES)  isl inear ly  o rdered  by  ~^To~ (resp.
~ .... u~:~).Then we order  T~ ({x}) us ing  the lex icograph ico rder ing  induced by NA~oMs and N~^TunE~ :Let  a, b ~ ATOMS, f~, g~ e FEATURES,  and tT~ ({x}).a <,r b i f  a <^'roM~ b" a <T f, (t)t <~ f~ (t)f~,(...(f~ (t)) .
.
. )
<.r g, (...(g~ (t)) .
.
.
)-<-T is the re f lex ive  and t rans i t ive  c losureof <.~.Let  SP : <Z,E> be a fg -spec i f i ca t ion .
Weassume that  E does not  conta in  any t r iv ia \ ]equat ions  of the form t :: t (o therwise  we canjust  e l iminate  such equat ions  f rom E).Le~na:For  all 1 = r ~ E we have  e i ther  1 <~ r orr <.~ \]..Thus, w i thout  loss of genera l i ty ,  we assumethat  r <T 1 for all 1.
= r s E (o therwise  wecan just  exchange the le f thand and ther ighthand s ide of the equat ion) .
We ca l l  E ad i rected  set of equat ions  and we may wr i te1 -> r ins tead  of 1 = r.43C~let ion  a lgor i thm CPTrans form E into a d i rec ted  set ofequat ions  and app ly  success ive ly  any ofthe two fo l low ing  ru les unt i l  none isapp l i cab le  any more:\[\] LHS reduct ion:If there are two d i f fe rent  equat ions(I) p(1) -> r(2) 1 -> r'in E then:De lete  equat ion  (I) f rom EIf r <T p(r ')then add p(r ')  -> r to E- I f  p ( r ' )  <~ rthen add r -> p(r ')  to E\[Note: Noth ing  is added if p(r ' )  and rare ident ica l !
\ ]?
RHS__!
'9_d" u c t ion !_If there are two d i f fe rent  equat ions(I) 1 -> p(l ')(2)  1" -> rin E then:- De le te  equat ion  (I) f rom EIf 1 <~ p(r)then add p(r) -> 1 to EIf p(r) <T 1then add 1 -> p(r) to E\[Note: Noth ing  is added if p(r) and 1are ident ica l !
\ ]where: r, r', i, i" ~ T~ ({x}), andp ~ Features (Z)*Theorem :For every  fg -spec i f i ca t ioncomplet ion  procedure  CPSP the?
te rminates  on input  SP = <Z, E>de l ivers  as output  a fg -spec i f i ca t ionSP" = <Z, E'>and SP and SP 'are  equ iva lent  in thesense ofE*  = (E')*,i. e. E and E" have the same deduct ivec losure.This  theorem assures  that the complet ionprocedure  per fo rms only  syntact ica lmod i f i ca t ions  on the fg -spec i f i cat ions ,  butdoes not change the i r  meaning.
So we can useSP" in order  to test  the cons is tencyconst ra in ts  of SP.
The next  theorem showsthat s tepp ing  from SP to SP" s impl i f ies  th istask: ins tead of inspect ing  the deduct ivec losure  E* it su f f i ces  to inspect  the set ofequat ions  E'.Theorem:Let SP = <Z, E> be a fg -spec i f i ca t ion  andSP" = <Z, E'> be the resu l t  of runn ing  thecomplet ion  procedure  CP on SP.
SP isConstant  cons is tent  iffE" does not conta in  an equat ion  whosele f thand side is an atom a ~ Atoms(Z)constant /complex  cons is tent  i f fE" does not  conta in  an equat ion  inwh ich  a term f(a) occurs  wheref ~ Features(Z)  and a ~ Atoms(Z)acyc l ic  i f fE" does not  conta in  an equat ionp(t) -> t where  p ~ Features (Z)*44The proof  of th is  theorem is based  on thefact that  E" is a conf luent  and te rminat ingset of rewr i te  rules.
S ince the atoms aresmal ler  than any non-atomic  term wi th  respectto the term order <~, for any equat ion  a --> tin E" w i th  an atom a, t must  also be an atom~Therefore,  any equat ion  ho ld ing  between atomsmust  be conta ined  d i rec t ly  in E', imp ly ingthe constant  cons is tency  proper ty  of thetheorem.
The other  par ts  of ' the theoremfo l low f rom s imi la r  observat ions .6.
UnificationIn Sect ion  2 we presented  three d i f fe rentnotat ions  for feature  graphs, and in 3.2~ wein t roduced  a t rans la t ion  ~ f rom featuregraphs to fg -spec i f i ca t ions .
On the otherhand, it is s t ra ight fo rward  to t rans form afg -spec i f i ca t ion  SP into a feature graph C:The atoms and features  of G are thoseoccur ing  in the s ignature  of SP and ?heequat ions  of E re f lect  the core fer r ing  pathsresp.
paths  end ing  w i th  an atomic va lue in G?We denote  this t rans format ion  by~-~ : fg -spec i f i ca t ions  -> feature graphsA l though ~-I (SP) and ~-i (CP(SP)) may besyntact i ca l l y  d i f fe rent  s ince CP(SP))conta ins  equat ions  in a reduced normal  form,the two graphs  are equ iva lent  in the sense offeature graph un i f i cat ion :  they are unifiab\].ewi th  exact ly  the same feature  graphs.Bes ides  g iv ing  a bas is  for a s implecons is tency  test  and prov id ing  a normal  formpresentat ion  for fg -spec i f i ca t ions  thecomplet ion  procedure  CP also prov ides  thebas is  for a p rec i se  mathemat ica l  de f in i t ionof feature  graph un i f i cat ion .
This  is t rueregard less  wh ich  cons is tency  concept  forfeature graphs one wants  to apply, e.g.
J.fone wants  to a l low cyc l ic  graphs or on lyacycl ic  ones.
Thus, let X -cons is tent  bee i ther  "constant  cons is tent" ,"constant /complex  cons is tent" ,  "acycl ic" ,  orany combinat ion  thereof .
Let GI and G2 befeature graphs.g raph-un i fy (G~,G~)  =let (Zi,Ei) = ~(Gt) inlet (Z,E) = CP(Z~ u Z,, El u E2) in~-I (Z,E) if (Z,E) is X -cons is tentfai l  if (Z,E) is not X -cons is tent7.
ConclusionsWe have presented  a mathemat ica l  semant ics  offeature graphs and feature  graph un i f i ca t ionin terms of ADT spec i f i cat ions .
It suppor tsvar ious  cons is tency  concepts  used  for featuregraphs.
The impor tant  not ion  of par t ia l i ty(\[Pe 87\]) in the sense that  a rb i t ra ry  newfeatures  may be un i f ied  into a feature graphis suppor ted  s ince any feature  graphspec i f i ca t ion  can be extended by arb i t ra ryfeatures,  atoms, and equat ions;  there ex istsno "largest" feature  graph spec i f i ca t ion(unless of course, one adds an ar t i f i c ia l" largest" element,  e.g.
as the$F$-spec i f i ca t ion  in the STUF fo rmal i sm asdescr ibed  in \[BPU 88\]).Another approach br inging together initialADT spec, i f ications and feature graphs isgiven ill \[SA 87\].
~t uses an order-sortedapproach:, where the set of atoms and featuresmust be f ixed in advance, and where everyelement of a supersort must be in one of itssubsor ts  Compared to the order- sorte%lapproach of \[SA 87\] a drawback of the workpresented here is the asymetric treatment ofthe tool; of a feature graph (giving rise tothe "se,i" sort) and the other nodes (beingmapped t ;o  thE; "un iverse"  sort ) .
We arecurrent ly extending out work in order toovercome this d isadvantage (\[BP 88\]).
Othera:?eas of future work are the treatment ofdisjunctJ ons and of functional uncertainty(\[KR 86\], \[Jo 86\] ) .Refefr~nc~,s\[Ai e#\] Ait.-Kaci, H. : A Lattice TheoreticApproach to Computai;ion based on aCalculus of Part ia l ly Ordered TypeStructures.
\]?hD thesis, Univers i tyof Pennsylw~nia, 1984\[BP ss\] Beierle, C., Pietat, U. :  %'heAlgebra of Feature GraphSpecif ications.
(in preparat:ion)\[BPu 88\] Beierle, C., Pletat, U., Uszkoreit,If.
: An Algebraic Character izat ionof STUF.
Proc.
Symposium"Computer l inguist ik  und ihretheoret ischen Grundlagen",Saarbr~cken 1988.\[EM 88\] Ehrig, H. and Mahr, B.: Foundationsof Algebraic Speci f icat ion I.Springer Verlag, Berl in 1985.Goguell, J. G. and Meseguer, J.:Order-Sorted Algebra i: Partial andOverloaded Operators, Errors andInheritance?
Computer Science Lab.,SRI International, 1987.\[OTW 78\] Goguen, J.
A. and Thatcher, J. W.and Wagner, E.: An Initial AlgebraApproach to The Specif ication,Correctness and Implementat ion ofAbstract  Data Types.
In: CurrentTrends in Programming Methodology,R.
T. Yeh, (ed)~ Prentice-Hall,1978.\[Jo 86\] Johnson, M.: Comput ing with regularpath formulas.
Draft, 1986.\[Jo 87\] Johnson, M. : Attr ibute-Value Logicand Theory of Grammar.
PhD Thesis,Stanford University, 1987.\[KB 70\] Knuth, D.E.~ Bendix, P.B.
: SimpleWord _Problems in Universal Algebra.in: J. Leech (Ed.
): Computat ionalproblems in Universal  Algebra.Pergamon Press, 1970.\[Ka a6\] Kasper, R.T., Rounds, W.C.: Alogical semantics for featurestructures.
Proc.
24th AnnualMeeting, ACL, 1986.\[Pe 87\] Pereira, Fo : Grammars and Logics ofPartial Information.
Proc.
4thInt.
Conf on f, ogic Programming, May1987.\[Ps 84\]\[RK 86\]\[SA 87\]\[Us 86\]Pereira, F., Shieber, S.M.
: Thesemantics of grammar formalismsseen as computer languages.
Proc.COLING-84, ACL, 1984.Rounds, W.C., Kasper, R.: Acomplete logical calculus forrecord structures represent ingl inguistic information.
IEEESymposium on Logic in ComputerScience, 1986.Smolka, G., Ait-Kaci, H.:Inheritance Hierarchies: Semanticsand Unif ication.
MCC TechnicalReport AI-057-87, 1987.Uszkoreit, H.: Syntakt ische andsemantische General is ierungen imstruktur ierten Lexikon.
Proc.GWAI-86, (eds.
C.R.
Roll inger, W.Horn), Springer Verlag 1986.45
