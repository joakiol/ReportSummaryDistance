Coling 2008: Proceedings of the workshop on Grammar Engineering Across Frameworks, pages 25?32Manchester, August 2008Multilingual Grammar Resources in Multilingual ApplicationDevelopmentMarianne SantaholmaGeneva University, ETI/TIM/ISSCO40, bvd du Pont-d?Arve1211 Geneva 4, SwitzerlandMarianne.Santaholma@eti.unige.chAbstractGrammar development makes up a largepart of the multilingual rule-based appli-cation development cycle.
One way todecrease the required grammar develop-ment efforts is to base the systems onmultilingual grammar resources.
This pa-per presents a detailed description of aparametrization mechanism used for build-ing multilingual grammar rules.
We showhow these rules, which had originally beendesigned and developed for typologicallydifferent languages (English, Japanese andFinnish) are applied to a new language(Greek).
The developed shared grammarsystem has been implemented for a do-main specific speech-to-speech translationapplication.
A majority of these rules(54%) are shared amongst the four lan-guages, 75% of the rules are shared for atleast two languages.
The main benefit ofthe described approach is shorter develop-ment cycles for new system languages.1 IntroductionMost of grammar based applications are built onmonolingual grammars.
However, it is not unusualthat the same application is deployed for morethan one language.
For these types of systems themonolingual grammar approach is clearly not thebest choice, since similar grammar rules are writ-ten several times, which increases overall develop-ment efforts and makes maintenance laborious.c?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.One way to decrease these efforts is to share al-ready developed linguistic resources between sys-tem languages.
Common approaches for shar-ing information include grammar adaptation andgrammar sharing.
Grammar adaptation is the tech-nique of modifying an already existing grammar tocover a new language as implemented among oth-ers by Alshawi et al 1992; Kim et al 2003; andSantaholma, 2005.In grammar sharing, existing grammar rules aredirectly shared between languages rather than justbeing recycled as they are in grammar adapta-tion.
Compared to both the monolingual grammarapproach and the grammar adaptation approach,grammar sharing reduces the amount of code thatneeds to be written as the central rules are writ-ten only once.
This automatically leads to coher-ence between language descriptions for differentlanguages, which improves grammar maintainabil-ity, and eliminates the duplication effort that other-wise occurs when monolingual grammars are used.Multilingual grammars can share resources be-tween languages in various ways.
Ranta (2007)has developed an abstract syntax that defines acommon semantic representation in a multilingualgrammar.Another type of approach is implemented inthe LinGO Grammar Matrix project (Bender et al2005; Bender, 2007).
The Grammar Matrix con-sists of a core grammar that contains the types andconstraints that are regarded as cross-linguisticallyuseful.
This core is further linked to phenomenon-specific libraries.
These consist of rule reperto-ries based on typological categories.
The neces-sary modules are put together like building blocksaccording to language characteristics to form thefinal grammar of a language.The work described in this paper implements25a grammar sharing approach that is based onlanguage-independent parameterized rules that arecomplemented with necessary language-specificrules and features.
These shared rules have beenimplemented for MedSLT, a multilingual spokenlanguage translation system (Bouillon et al, 2005).All of the central language processing compo-nents of MedSLT, including the speech recog-nizer, parser and generator, are derived from hand-crafted general grammars of a language.
Thebiggest effort in adding a new language to the ex-isting spoken language translation framework isthe grammar development cycle.
As more lan-guages are added to the existing spoken languagetranslation framework, the necessity for multilin-gual grammar rules grows.
(Bouillon et al, 2006) first developed sharedMedSLT grammar rules for the Romance lan-guages French, Spanish and Catalan.
Comparedto the monolingual grammar system, the sharedgrammar-based system facilitated application de-velopment without degrading the performance ofany of its components (speech recognition, trans-lation) on these languages.We took this approach further and implementedparameterized grammar rules for typologically dif-ferent languages - English, Finnish and Japanese.Experiments have shown that these shared rulesperform equally well on all three languages (San-taholma, 2007).
As these grammars had been de-veloped in parallel, it was not clear how flexi-ble the parameterized grammar approach wouldbe for new a language, which was not includedin the original development process.
We thus ex-tended the grammar to cover Modern Greek as anew language.
The paper describes the methodol-ogy of adding this new language and evaluates theparametrization mechanism.The rest of the paper is structured as follows.Section 2 describes the Regulus toolkit (Rayneret al, 2006) and MedSLT, which form the devel-opment environment and application frameworkon which this work is based.
Section 3 de-scribes the parameterized multilingual grammarand parametrization mechanism.
Section 4 sum-marizes techniques used to adding Modern Greekto the shared grammar system.
Section 5 con-cludes.2 Regulus Development environment andMedSLT application2.1 Regulus featuresThe Regulus grammar framework has been de-signed for spoken language grammars, and thusdiffers from popular grammar frameworks likeLexical Functional Grammar (LFG) (Bresnan andKaplan, 1985) and Head-driven Phrase StructureGrammar (HSPG) (Pollard and Sag, 1994).
Reg-ulus grammars are written with a feature-grammarformalism that can easily be compiled into contextfree grammars (CFG).
These are required for com-pilation of grammar-based language models usedin speech recognition.
Characteristic for Regulusgrammars are finite valued features and exclusionof complex feature-value structures.
Consequentlythe resulting rule-sets are perhaps more repeti-tive and less elegant than the equivalent LFGs orHPSGs.
This design, however, enables compila-tion of non-trivial feature-grammars to CFG.Another Regulus feature that enables CFG com-pilation is grammar specialization that reduces theextent of the grammar.
Grammar specializationis performed by explanation-based learning (EBL)1.
Multilingual grammar development can profitfrom grammar specialization in various ways.
Thegeneral grammar of a language can be specializedto specific domains based on domain specific in-formation2.
Thus the specialization serves as away to limit the ambiguities typical for generalgrammars.
Furthermore, the procedure is used tospecialize the grammars for different tasks.
Ideallya grammar should recognize variant forms but gen-erate only one.
This variation can be controlled byspecializing the Regulus grammars for these tasks.Finally the multilingual Regulus grammar can bespecialized for specific languages by automaticallyremoving the unnecessary rules.2.2 MedSLTMost large-scale machine translation systems arecurrently based on statistical language processing.MedSLT, however, has been implemented with lin-guistically motivated grammars mainly for the fol-lowing reasons: (1) necessary data for inducingthe grammars and training the statistical language1The method is described in detail in (Rayner et al, 2006),Chapter 10.2These include domain specific corpus, lexica and oper-ationality criteria that control the granularity of specializedgrammar.
Details provided by (Rayner et al, 2006).26models were not available for the required domainand languages.
(2) the medical domain demandsaccurate translation performance, which can bemore easily guaranteed with rule based systems.MedSLT is an unidirectional3 speech-to-speechtranslation system that has been designed to helpin emergency situations where a common lan-guage between the physician and the patient doesnot exist.
In addition to influencing the systemarchitecture, this communication goal also sig-nificantly influences system coverage, and con-sequently the grammars.
The typical utterancesMedSLT translates consist of physician?s questionsabout the intensity, location, duration and qual-ity of pain, factors that increase and decrease thepain, therapeutic processes and the family historyof the patient.
These include yes-no questions like?Does it hurt in the morning?
?, ?Is the pain stub-bing??
and ?Do you have fever when you havethe headaches??.
Other frequent type of questionsinclude wh-questions followed by elliptical utter-ance, like ?Where is the pain?
?, ?In the front of thehead?
?, ?On both sides of the head??.
CurrentlyMedSLT translates between Arabic, Catalan, En-glish, Finnish, French, Japanese, and Spanish.
Thetranslation is interlingua based.The following sections describe the implemen-tation of the shared parameterized grammar rulesfor this specific application using the Regulus plat-form.3 Parameterized grammar rulesThe parameterized grammar rules assemble thecommon foundations of linguistic phenomena indifferent languages.
The framework for thelanguage-independent rules presented here was de-veloped and tested with English, Japanese andFinnish.
These languages represent different typesof languages and hence express the same linguisticphenomena in different ways.
Consequently theyprovided a good starting point for framework de-sign.The Regulus multilingual grammar is modularand organized hierarchically.
Parameterized rulesare stored in the ?language-independent core?module.
This is the most generic level and as suchis shared between all languages.
The ?lower lev-els?
include the language-family specific modules3Bidirectional MedSLT exists currently for English-Spanish language pair.
Details are provided in (Bouillon etal., 2007).and the language-specific modules.
The modulesfor related languages decrease redundancy as re-lated languages commonly share characteristics atleast to some extent.
4 The information in thismodular structure is inherited top-down from themost generic to language specific.The first language to which we applied the pa-rameterized rules and which had not been part ofthe original shared grammar framework develop-ment is Modern Greek.In the following we first describe the parameter-ized grammar rules.
Then we focus on how theserules are applied for Greek.3.1 CoverageThe parameterized grammar currently covers basiclinguistic phenomena by focusing on the structuresrequired to process MedSLT system coverage.
Thecurrent coverage is summarized in Table 1.Phenomena ConstructionSentence types declarative, yn-question,wh-question, ellipsissubordinate when clauseTense present, past(imperfect)Voice active, passiveAspect continuous,present perfect,past perfectVerb transitive, intransitive,subcategorization predicative (be+adj),existential (there+be+np)Determiners article, number,quantifierAdpositional prepositional,modifiers postpositionalAdverbial modifiers verb and sentencemodifying adverbs,comparison adverbsPronouns personal, possessive,dummy pronounsAdjective modifiers predicative, attributive,comparisonTable 1: Linguistic phenomena covered by theshared grammar.The general difficulty of spoken language forgrammar development is frequent ungrammatical4However, as identical constructions and features also ex-ist in unrelated languages the advantage of language familymodules is finally not so significant.27and non-standard use of language.
This includesfor example incorrect use of case inflections inFinnish and missing particles in spoken Japanese.3.2 Parametrization - abstracting away fromlanguage specific detailsThe parametrization aims to generalize the cross-linguistic variation in grammar rules.
Englishyes-no questions require an auxiliary and in-verted word order, in Finnish yes-no questions thesubject-verb inversion is combined with a certainform of the main verb; in Finnish noun heads andthe modifying adjective agree in case and number,in Greek they additionally agree in gender, and soforth.
The way of expressing the same linguisticphenomena or constructions varies from one lan-guage to another.
Hence, shared grammar rulesneed to abstract away from these kinds of details.The multilingual Regulus rules are parameter-ized using macro declarations.
Macros are a stan-dard tool in many development environments.
InRegulus grammars they are extensively used tocatch generalizations in the rules, and in partic-ular in lexica.
In multilingual grammar rules themacros serve as ?links?
towards language-specificinformation.The shared rules have a language-neutral sur-face representation where macros invoke the re-quired language-specific information.
The macroreference of a language-independent rule is re-placed by the information contained in the macrodefinition.
The context of the macro reference de-termines how the macro definition combines withother parts of the description.
The mechanism issimilar to LFG ?templates?, which encode linguis-tic generalizations in a language description (Dal-rymple et al, 2004).The macro mechanism itself is rather simple.The crucial is that the macros are defined in a trans-parent and coherent way.
Otherwise the grammardeveloper will spend more time learning to howto use the parameterized rule set than she wouldspend to develop a new grammar from scratch.When the macros are well defined, sharing therules for a new language is just a matter of definingthe language-specific macro definitions.In the following we present some concrete ex-amples of how cross-linguistic variation can be pa-rameterized in a multilingual Regulus grammar us-ing macros.3.2.1 Parameterizing featuresThe following example shows how we param-eterize the previously mentioned agreement fea-tures required in different languages.
In Regu-lus grammars, like in other constraint-based gram-mars, this fine-grained information is encoded infeature-value pairs.
We encode a basic declara-tive sentence rule (s) that consists of a noun phrase(np) and a verb phrase (vp):s:[sem=concat(Np, Vp)] -->np:[sem=Np, sem_np_type=T,@noun_head_features(Head)],vp:[sem=Vp, subj_sem_np_type=T,@verb_head_features(Head)].In Finnish sentences the subject and the mainverb agree in person and number.
Japanese doesn?tmake use of these agreement features in this con-text.
Consequently, the common rules have to ex-press the agreement in a parameterized way.
Forthis reason in the np we introduce a macro callednoun_head_features(Head) and in the vpthe macro verb_head_features(Head).
5These macro declarations unify but don?t say any-thing explicit about the unifying features them-selves at this common level.
The macros thus?neutralize?
the language-specific variation andonly point further down to language-specific infor-mation.In Finnish, the noun_head_features andverb_head_featuresmacros invoke the lan-guage specific features ?number?
and ?person?
:macro(noun_head_features([P, N]),[person=P, number=N]).macro(verb_head_features(([P, N]),[person=P, number=N]).The macro references are replaced by these fea-tures in the final Finnish declarative sentence rulewhich takes the form:s:[sem=concat(Np, Vp)] -->np:[sem=Np, sem_np_type=T,person=P, number=N],vp:[sem=Vp, subj_sem_np_type=T,person=P, number=N].5The Regulus macro declaration is preceded by ?
@?.28As Japanese does not apply either ?number?
or?person?
features the macro definition consists ofan empty value:macro(noun_head_features([]),[]).The final Japanese sentence rule takes after themacro replacement the form:s:[sem=concat(Np, Vp)] -->np:[sem=Np, sem_np_type=T],vp:[sem=Vp, subj_sem_np_type=T].Similarly we can parameterize the value ofa specific feature.
A vp could include averb_form feature that in English could take asits value ?gerundive?
and in Finnish ?infinite?
inthat particular context.
We can parameterize thevp rule with a macro vform which invokes thelanguage-specific macro definition and replaces itwith the corresponding language-specific feature-value pairs:vp:[sem=concat(Aux, Vp)] -->aux:[sem=Aux,@aux_features(Head)],vp:[sem=Vp,@vform(Vform),@verb_head_features(Head)].The English macro definition would be:macro(vform(Vform),[verb_form=gerund,verb_form=Vform]).The Finnish equivalent:macro(vform(Vform),[verb_form=finite,verb_form=Vform]).Macros can furthermore refer to other macrodefinitions and in this way represent inclu-sion relations between different features.
Thisforms a multilevel macro hierarchy.
The macronoun_head_features(Head) included innp rule (1) could contain a macro arg (2), thatwould further be defined by (3):1)np:[sem=Np, sem_np_type=SemType,@noun_head_features(Head)].2)macro(noun_head_features([Agr,Case]),[@agr(Agr), case=Case]).3)macro(agr([Case, Number]),[case=Case, number=Number]).3.2.2 Parameterizing the constituent orderThe constituent order is defined by concate-nation of linguistic categories in the wanted or-der (vp:[sem=concat(Verb, NP)]).
Thisorder can, similarly to features, also be parameter-ized by using macros.
We show here as an exampleof how the order of a transitive main verb (verb)and direct object (np) is parameterized in a verbphrase:vp:[sem=concat(Verb, NP)] -->verb:[sem=Verb, subcat=transitive,obj_sem_np_type=ObjType],np:[sem=NP, sem_np_type=ObjType]).In English the direct object follows the verb,whereas in Japanese it precedes the verb.
Theorder of these constituents can be parame-terized by introducing into the rule a macrothat in the example rule is represented by?verb_transitive_np?
:vp:[sem=concat(Verb, NP)] -->@verb_transitive_np(verb:[sem=Verb, subcat=transitive,obj_sem_np_type=ObjType],np:[sem=NP, sem_np_type=ObjType]).This macro invokes the language-specific rules thatdefine the order of the semantic values of cate-gories required in a specific language.
The seman-tic value of the category verb is sem=Verb andof noun sem=Noun.
Consequently the English-specific macro definition would be:macro(verb_transitive_np(Verb, Noun),(Verb, Noun)).This rule specifies that when there is a seman-tic value ?Verb?
followed by a semantic value?Noun?
these should be processed in the order?Verb?, ?Noun?.
The order of constituents re-mains unchanged.The equivalent Japanese macro definition wouldbe:macro(verb_transitive_np(Verb, Noun),(Noun, Verb)).29Contrary to the English rule this rule specifies thatwhen there is a semantic value ?Verb?
followedby a semantic value ?Noun?
these should be pro-cessed in the order ?Noun?, ?Verb?.
This changesthe order the of constituents.
Details of Regulussemantic processing are available in Rayner et al,2006.3.2.3 Ignoring rules/features and using emptyvaluesThere exist several ways to ignore rules andfeatures or to introduce empty values in Regulusgrammars.
These have proven practical in ruleparametrization.
In the following we present somefrequent examples.Features that are irrelevant for a particular lan-guage (in a particular context) can take ?empty?
([]) as their value.
This can be encoded in sev-eral ways.?
Macro takes an empty value.
This is encodedby ?[]?Example:macro(noun_head_features([]),[]).?
Feature takes an empty value.
This is encodedby ?_?
:Example:macro(premod_case(Case),[case=_]).Rules that are applied to only one language areorganized in the language-specific modules.
How-ever most of the rules are necessary for two ormore languages.
The rules that are used for groupsof specific languages can be ?tagged?
using macrodeclarations.
For example a rule or feature thatis valid for English and Japanese could be simplytagged with an identifier macro ?eng jap?:@eng_jap(?rule_body_here?
).The English and Japanese rules would call the rulebody by macro definition:macro(eng_jap(Body), (Body).The Finnish language-specific macro definitionwould call an empty category that we call here?dummy cat?
and the rule would be ignored:macro(eng_jap(Body),(dummy_cat:[] --> dummy)).Specialization of a grammar for a specific lan-guage and into domain-specific form checks whichrules are necessary for processing the domainspecific-coverage in that particular language.
Con-sequently empty features of the general grammarare automatically ignored and the language pro-cessing remains efficient.4 Processing Modern Greek with sharedparameterized grammar rulesCross-linguistic comparison shows that the Greekthat belongs to the Indo-European language familydoes not only share some features with English butalso with Japanese and Finnish.
Common with En-glish is, for example, the use of prepositions andarticles, and with Finnish and Japanese the pro-drop.The development of Greek grammar cover-age equivalent to those of English, Japanese andFinnish coverage in MedSLT took about twoweeks.
For most part only the language-specificmacro definitions needed to be specified.
Five newrules were developed from scratch.
The most sig-nificant part of the development consisted of build-ing the Greek lexicon and verifying that the anal-yses produced by the shared grammar rules werecorrect.In the following we summarize Greek-specificrules, features and macros.4.1 Greek rules and featuresIn general, Greek word order is flexible, es-pecially in spoken language.
All permutationsof ordering of subject, object, and verb can befound, though the language shows a preferencefor Subject-Verb-Object ordering in neutral con-texts.
New parametrized constituent orders werethe most significant additions to the multilingualgrammar.
These are listed below.1.
Yes-no questions, which are a central part ofthe MedSLT application?s coverage, can beexpressed by both direct and indirect con-stituent order in Greek.
As these are bothcommon in spoken language, the Japanesequestion rule (direct constituent order + ques-tion particle ?ka?)
was parameterized forGreek.302.
The order of possessive pronoun and headnoun required parametrization.
Until nowthe shared grammar contained only the orderwhere a head noun is preceded by the pos-sessive.
In Greek the opposite order is used,with the possessive following the head noun.The existing rule was parameterized by a newmacro.3.
Similar parameterization was performed forverb phrases including an indirect object.
TheGreek constituent order is reversed relative toEnglish order.
That is, the pronoun goes be-fore the verb.
A new macro was introduced toparameterize the rule.One main area of difference compared to En-glish/Finnish/Japanese, is in the placement ofweak pronouns, generally referred to as ?clitics?.Their position in Greek is relative to the verb.In standard language they are placed before finiteverbs and after infinite verbs.
Thus these weak pro-nouns can occur in sentence-initial position.
Newrules were developed to process these clitics aswell as the Greek genitive post-modifier structure.Greek could mainly use the existing grammarfeatures.
The difference, compared to the origi-nal three languages, was in the extensive use of the?gender?
feature (possible values: feminine, mas-culine and neuter).
For example, Greek articlesagree with the head noun in gender, number, andcase.
Furthermore, prepositions agree with the fol-lowing nouns in gender, number and case.4.2 Summary of multilingual rulesTable 2 summarizes current use of the multilingualrules.
The grammar includes a total of 80 rulesfor English, Finnish, Japanese and Greek.
54%of the rules are shared between all four languagesand 75% of the rules are shared between two ormore languages.
Not everything can be parameter-ized, and some language-specific rules are neces-sary.
The language-specific rules cover 25% of allrules.5 ConclusionsWe have described a shared grammar approachfor multilingual application development.
The de-scribed approach is based on parametrization ofRegulus grammar rules using macros.
We haveshown that these parameterized rules can withcomparably little effort be used for a new systemLanguages N. of rules % of totalEng + Fin + Jap + Gre 43 54%Eng + Fin + Jap 0Eng + Fin + Gre 4Eng + Jap + Gre 0Fin + Jap + Gre 6TOTAL 10 12.5%Fin + Jap 3Eng + Fin 1Eng + Jap 1Gre + Eng 1Gre + Jap 1Gre + Fin 0TOTAL 7 8.75%Eng 9Fin 0Jap 6Gre 5TOTAL 20 25%TOTAL 80 100%Table 2: Grammar rules in totallanguage in a multilingual limited-domain appli-cation.
A majority of rules were shared betweenall implemented languages and 75% of rules by atleast two languages.
The deployment of a new lan-guage was mainly based on already existing rules.The shared grammar approach promotes consis-tency across all system languages, effectively in-creasing maintainability.AcknowledgementI would like to thank Pierrette Bouillon and MannyRayner for their advise, and Agnes Lisowska andNikos Chatzichrisafis for their suggestions and En-glish corrections.ReferencesBender, Emily and Dan Flickinger.
2005.
Rapid Pro-totyping of Scalable Grammars: Towards Modular-ity in Extensions to a Language-Independent Core.In: Proceedings of the 2nd International Joint Con-ference on Natural Language Processing IJCNLP-05(Posters/Demos), Jeju Island, Korea.Bender, Emily.
2007.
Combining Research andPedagogy in the Development of a Crosslinguis-tic Grammar Resource.
In: Proceedings of theworkshop Grammar Engineering across Frameworks2007, Stanford University.31Bouillon, Pierrette, Manny Rayner, NikosChatzichrisafis, Beth Ann Hockey, MarianneSantaholma, Marianne Starlander, Yukie Nakao,Kyoko Kanzaki, Hitoshi Isahara.
2005.
A genericmultilingual open source platform for limited-domain medical speech translation.
In: Proceedingsof the 10th Conference of the European Associa-tion for Machine Translation, EAMT, Budapest,Hungary.Bouillon, Pierrette, Manny Rayner, Bruna NovellasVall, Marianne Starlander, Marianne Santaholma,Nikos Chatzichrisafis.
2007.
Une grammairepartage multi-tache pour le traitement de la parole: application aux langues romanes.
TAL (TraitementAutomatique des Langues), Volume 47, 2006/3.Bouillon, Pierrette, Glenn Flores, Marianne Starlan-der, Nikos Chatzichrisafis, Marianne Santaholma,Nikos Tsourakis, Manny Rayner, Beth Ann Hockey.2007.
A Bidirectional Grammar-Based MedicalSpeech Translator.
In: Proceedings of workshop onGrammar-based approaches to spoken language pro-cessing, ACL 2007, June 29, Prague, Czech Repub-lic.Bresnan, Joan and Ronald Kaplan.
1985.
The mentalrepresentation of grammatical relations.
MIT Press,Cambridge, MA.Butt, Miriam , Helge Dyvik, Tracy Holloway King, Hi-roshi Masuichi, and Christian Rohrer.
2002.
TheParallel Grammar Project.
In: Proceedings ofCOLING-2002 Workshop on Grammar Engineeringand Evaluation.Dalrymple, Mary, Ron Kaplan, and Tracy HollowayKing.
2004.
Linguistics Generalizations over De-scriptions.
In M. Butt and T.H.
King (ed.)
Proceed-ings of the LFG04 Conference.Kim, Roger, Mary Dalrymple, Ronald M. Kaplan,Tracy Holloway King, Hiroshi Masuichi, TomokoOhkuma.
2003.
Language Multilingual GrammarDevelopment via Grammar Porting.
In: Proceedingsof the ESSLLI Workshop on Ideas and Strategies forMultilingual Grammar Development, Vienna, Aus-tria.Pollard, Carl and Ivan Sag.
1994.
Head Driven PhraseStructure Grammar.
University of Chicago Press,Chicago.Ranta, Aarne.
2007.
Modular Grammar Engineering inGF.
Research on Language and Computation, Vol-ume 5, 2/2007, 133?158.Rayner, Manny, Beth Ann Hockey, Pierrette Bouillon.2006.
Regulus-Putting linguistics into speech recog-nition.
CSLI publications, California, USA.Santaholma, Marianne.
2005.
Linguistic representa-tion of Finnish in a limited domain speech-to-speechtranslation system.
In: Proceedings of the 10th Con-ference on European Association of Machine Trans-lation, Budapest, Hungary.Santaholma, Marianne.
2007.
Grammar sharing tech-niques for rule-based multilingual NLP systems.
In:Proceedings of NODALIDA 2007, the 16th NordicConference of Computational Linguistics, Tartu, Es-tonia.32
