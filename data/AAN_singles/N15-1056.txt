Human Language Technologies: The 2015 Annual Conference of the North American Chapter of the ACL, pages 537?545,Denver, Colorado, May 31 ?
June 5, 2015.c?2015 Association for Computational LinguisticsEnglish orthography is not ?close to optimal?Garrett Nicolai and Grzegorz KondrakDepartment of Computing ScienceUniversity of Alberta{nicolai,gkondrak}@ualberta.caAbstractIn spite of the apparent irregularity of theEnglish spelling system, Chomsky and Halle(1968) characterize it as ?near optimal?.
Weinvestigate this assertion using computationaltechniques and resources.
We design an al-gorithm to generate word spellings that max-imize both phonemic transparency and mor-phological consistency.
Experimental resultsdemonstrate that the constructed system ismuch closer to optimality than the traditionalEnglish orthography.1 IntroductionEnglish spelling is notorious for its irregularity.Kominek and Black (2006) estimate that it is about3 times more complex than German, and 40 timesmore complex than Spanish.
This is confirmed bylower accuracy of letter-to-phoneme systems on En-glish (Bisani and Ney, 2008).
A survey of Englishspelling (Carney, 1994) devotes 120 pages to de-scribe phoneme-to-letter correspondences, and lists226 letter-to-phoneme rules, almost all of which ad-mit exceptions.
Numerous proposals have been putforward for spelling reforms over the years, rang-ing from small changes affecting a limited set ofwords to complete overhauls based on novel writingscripts (Venezky, 1970).In spite of the perceived irregularity of Englishspellings, Chomsky and Halle (1968) assert that theyremarkably well reflect abstract underlying forms,from which the surface pronunciations are generatedwith ?rules of great generality and wide applicabil-ity?.
They postulate two principles of an optimalorthographic system: (1) it should have ?one repre-sentation for each lexical entry?
(consistency); and,(2) ?phonetic variation is not indicated where it ispredictable by a general rule?
(predictability).
Theyconclude that ?conventional orthography is [.
.
. ]
anear optimal system for the lexical representation ofEnglish words?
(page 49), which we refer to as theoptimality claim.Chomsky and Halle?s account of English orthog-raphy is not without its detractors.
Steinberg (1973)argues against the idea that speakers store abstractunderlying forms of separate morphemes and applysequences of phonological rules during composi-tion.
Sampson (1985) cites the work of Yule (1978)in asserting that many common English word-formsprovide counter-evidence to their vowel alternationobservations.
Derwing (1992) maintains that the ob-servations only hold for five vowel alternations thatcan be predicted with simple spelling rules.
Ac-cording to Nunn (2006), the idea that spelling repre-sents an abstract phonological level has been aban-doned by most linguists.
Sproat (2000) notes thatfew scholars of writing systems would agree withChomsky and Halle, concluding that the evidencefor a consistent morphological representation in En-glish orthography is equivocal.It is not our goal to formulate yet another pro-posal for reforming English orthography, nor evento argue that there is a need for such a reform.Furthermore, we refrain from taking into accountother potential advantages of the traditional orthog-raphy, such as reflecting archaic pronunciation ofnative words, preserving the original spelling ofloanwords, or maintaining orthographic similarity tocognates in other languages.
Although these maybe valid concerns, they are not considered as suchby Chomsky and Halle.
Instead, our primary ob-jective is a deeper understanding of how the phono-537logical and morphological characteristics of Englishare reflected in its traditional orthography, which iscurrently the dominant medium of information ex-change in the world.In this paper, we investigate the issue of ortho-graphic optimality from the computational perspec-tive.
We define metrics to quantify the degree of op-timality of a spelling system in terms of phonemictransparency and morphological consistency.
Wedesign an algorithm to generate an orthography thatmaximizes both types of optimality, and implementit using computational tools and resources.
We showexperimentally that the traditional orthography ismuch further from optimality than our constructedsystem, which contradicts the claim of Chomsky andHalle.2 OptimalityIn this section, we define the notions of phone-mic and morphemic optimality, and our general ap-proach to quantifying them.
We propose two theo-retical orthographies that are phonemically and mor-phologically optimal, respectively.
We argue that noorthographic system for English can be simultane-ously optimal according to both criteria.2.1 Phonemic optimalityA purely phonemic system would have a per-fect one-to-one relationship between graphemes andphonemes.
Rogers (2005) states that no standardwriting system completely satisfies this property,although Finnish orthography comes remarkablyclose.
For our purposes, we assume the InternationalPhonetic Alphabet (IPA) transcription to be such anideal system.
For example, the IPA transcription ofthe word viscosity is [vIskAs@ti].
We obtain the tran-scriptions from a digital dictionary that representsthe General American pronunciation of English.Phonemic transparency can be considered in twodirections: from letters to phonemes, and vice versa.The pronunciation of Spanish words is recover-able from the spelling by applying a limited set ofrules (Kominek and Black, 2006).
However, thereis some ambiguity in the opposite direction; for ex-ample, the phoneme [b] can be expressed with ei-ther ?b?
or ?v?.
As a result, it is not unusual for na-tive Spanish speakers to make spelling mistakes.
Onthe other hand, the orthography of Serbo-Croatianwas originally created according to the rule ?writeas you speak?, so that the spelling can be unam-biguously produced from pronunciation.
This doesnot mean that the pronunciation is completely pre-dictable from spelling; for example, lexical stress isnot marked (Sproat, 2000).In this paper, we measure phonemic trans-parency by computing average perplexity betweengraphemes and phonemes.
Roughly speaking,phonemic perplexity indicates how many differ-ent graphemes on average correspond to a singlephoneme, while graphemic perplexity reflects thecorresponding ambiguity of graphemes.
We providea formal definition in Section 5.2.2 Morphological optimalityA purely morphemic writing system would havea unique graphemic representation for each mor-pheme.
Chinese is usually given as an example ofa near-morphemic writing system.
In this paper,we construct an abstract morphemic spelling sys-tem for English by selecting a single alphabetic formfor each morpheme, and simply concatenating themto make up words.
For example, the morphemicspelling of viscosity could be ?viscous?ity?.1We define morphemic optimality to correspondto the consistency principle of Chomsky and Halle.The rationale is that a unique spelling for each mor-pheme should allow related words to be readily iden-tified in the mental lexicon.
Sproat (2000) dis-tinguishes between morpheme-oriented ?deep?
or-thographies, like Russian, and phoneme-oriented?shallow?
orthographies, like Serbo-Croatian.We propose to measure morphemic consistencyby computing the average edit distance betweenmorpheme representations in different word-forms.The less variation morpheme spellings exhibit in awriting system, the higher the corresponding valueof the morphemic transparency will be.
We definethe measure in Section 5.It is impossible to achieve complete phonemicand morphemic optimality within one system de-signed for English spelling.
For example, the stemmorpheme of verb forms hearing and heard is1Non-traditional spellings are written within single quotes.Morphemes may be explicitly separated by the centered dotcharacter.538spelled identically but pronounced differently.
Ifwe changed the spellings to indicate the differencein pronunciation, we would move towards phone-mic optimality, but away from morphemic optimal-ity.
Apart from purely phonographic or logographicvariants, any English spelling system must be a com-promise between phonemic and morphemic trans-parency.
In this paper, we attempt to algorithmi-cally create an orthography that simultaneously ap-proaches the optimality along both dimensions.3 AlgorithmIn this section, we describe our algorithm for gener-ating English spellings (Figure 1), which serves as aconstructive proof that the traditional orthography isnot optimal.
Our objective is to find the best com-promise between phonemic transparency and mor-phemic consistency.
Section 3.1 explains how wederive a unique representation for each morpheme.Section 3.2 shows how the morpheme representa-tions are combined into word spellings.
Without aloss of generality, the generated spellings are com-posed of IPA symbols.3.1 Morpheme representationsWe start by identifying all morphemes in the lexicon,and associating each morpheme with sets of wordsthat contain it (lines 1?3 in Figure 1).
An exampleword set that corresponds to the morpheme atom isshown in Table 1.
Words may belong to more thanone set.
For example, the word atomic will also beincluded in the word set that corresponds to the mor-pheme -ic.
We make no distinction between boundand free morphemes.As can be seen in Table 1, English morphemes of-ten have multiple phonemic realizations.
The objec-tive of the second step (lines 4?11) is to follow theconsistency principle by establishing a single repre-sentation of each morpheme.
They suggest that or-thographic representations should reflect the under-lying forms of morphemes as much as possible.
Un-fortunately, underlying forms are not attested, andthere is no commonly accepted algorithm to con-struct them.
Instead, our algorithm attempts to es-tablish a sequence of phonemes that is maximallysimilar to the attested surface allomorphs.Table 1 shows an example of generating the com-// Create word sets1: for each word w in lexicon L do2: for each morpheme m in w do3: add w to word set Sm// Generate morpheme representations4: for each word set Smdo5: m0:= longest representation of m6: for each word w in Smdo7: aw:= alignment of m0and w8: add awto multi-alignment A9: for each position i in A do10: select representative phoneme r[i]11: rm:= r[1..|m0|]// Adopt a surface phoneme predictor12: Pronounce := Predictor (L)// Generate word representations13: for each word w = m1.
.
.mkdo14: r := rm1?
.
.
.
?
rmk15: for each phoneme r[i] in r do16: if Pronounce(r[i]) 6= w[i] then17: r[i] := w[i]18: rw:= r[1..|w|]Figure 1: Spelling generation algorithm.
All representa-tions consists of phonemes.mon representation for a morpheme.
We extract thephonemic representation of each allomorph in theword set, and perform a multi-alignment of the rep-resentations by pivoting on the longest representa-tion of the morpheme (lines 5?8).
For each posi-tion in the multi-alignment, we identify the set ofphonemes corresponding to that position.
If thereis no variation within a position, we simply adoptthe common phoneme.
Otherwise, we choose thephoneme that is most preferred in a fixed hierarchyof phonemes.
In this case, since [?]
and [A] are pre-ferred to [@], the resulting morpheme representationis ?
?tAm?.For selecting between variant phonemes, we fol-low a manually-constructed hierarchy of phonemes(Table 2), which roughly follows the principle ofleast effort.
The assumption is that the phonemes re-quiring more articulatory effort to produce are morelikely to represent the underlying phoneme.
Withina single row, phonemes are listed in the order ofpreference.
For example, alveolar fricatives like [s]539?
t @ m atom?
t @ m z atoms@ t A m I k atomic@ t A m I k l i atomicallys 2 b @ t A m I k subatomic?
t A mTable 1: Extracting the common morphemic representa-tion .are preferred to post-alveolar ones like [S], in orderto account for palatalization.
Since our representa-tions are not intended to represent actual underly-ing forms, the choice of a particular phoneme hier-archy affects only the shape of the generated wordspellings.3.2 Word representationsIdeally, polymorphemic words should be repre-sented by a simple concatenation of the correspond-ing morpheme representations.
However, for lan-guages that are not purely concatenative, this ap-proach may produce forms that are far from thephonemic realizations.
For example, assuming thatthe words deceive and deception share a morpheme,a spelling ?deceive?ion?
would fail to convey the ac-tual pronunciation [d@sEpS@n].
The predictabilityprinciple of Chomsky and Halle implies that pho-netic variation should only be indicated where it isnot predictable by general rules.
Unfortunately, thetask of establishing such a set of general rules, whichwe discuss in Section 7, is not at all straightforward.Instead, we assume the existence of an oracle (line12 in Figure 1) which predicts the surface pronunci-ation of each phoneme found in the concatenation ofthe morphemic forms.In our algorithm (lines 13?18), the defaultspelling of the word is composed of the represen-tations of its constituent morphemes conjoined witha separator character.
If the predicted pronunciationmatches the actual surface phoneme, the ?underly-ing?
phoneme is preserved; otherwise, it is substi-tuted by the surface phoneme.
This modificationhelps to maintain the resulting word spellings rea-sonably close to the surface pronunciation.For example, consider the word sincerity.
Sup-pose that our algorithm derives the representationsof the two underlying morphemes as ?sInsir?
andStops b d g p t kAffricates dZ tSFricatives D v z Z T f s S hNasals m n NLiquids l rGlides j wDiphthongs aI OI aUTense vowels i e o u ALax vowels ?
E O U 2Reduced vowels I @deletionTable 2: Hierarchy of phonemes.?Iti?.
If, given the input ?sInsir?Iti?, the predic-tor correctly generates the surface pronunciation[sInsEr@ti], we adopt the input as our final spelling.However, if the prediction is [sInsir@ti] instead, ourfinal spelling becomes ?sInsEr?Iti?, in order to avoida potentially misleading spelling.
Since the secondvowel was incorrectly predicted, we determine it tobe unpredictable, and thus represent it with the sur-face phoneme, rather than the underlying one.
Thechoice of the predictor affects only the details of thegenerated spellings.4 ImplementationIn this section, we describe the specific data andtools that we use in our implementation of the al-gorithm described in the previous section.4.1 DataFor the implementation of our spelling generationalgorithm, we require a lexicon that contains mor-phological segmentation of phonemic representa-tions of words.
Since we have been been unsuc-cessful in finding such a lexicon, we extract thenecessary information from two different resources:the CELEX lexical database (Baayen et al, 1995),which includes morphological analysis of words,and the Combilex speech lexicon (Richmond et al,2009), which contains high-quality phonemic tran-scriptions.
After intersecting the lexicons, and prun-ing it of proper nouns, function words, duplicateforms, and multi-word entries, we are left with ap-proximately 51,000 word-forms that are annotatedboth morphologically and phonemically.540In order to segment phonemic representations intoconstituent morphemes, we apply a high-precisionphonetic aligner (Kondrak, 2000) to link letters andphonemes using the procedure described in (Dwyerand Kondrak, 2009).
In rare cases where the pho-netic aligner fails to produce an alignment, we back-off to alignment generated with m2m-aligner (Ji-ampojamarn et al, 2007), an unsupervised EM-based algorithm.
We found that this approachworked better for our purposes than relying on thealignments provided in Combilex.
We use the sameapproach to align variant phonemic representationsof morphemes as described in Section 3.1.The morphological information contained inCELEX is incomplete for our purposes, and requiresfurther processing.
For example, the word amputateis listed as monomorphemic, but in fact contains thesuffix -ate.
However, amputee is analyzed asamputee = amputate?
ate + ee.This allows us to identify the stem as amput,which in turn implies the segmentations amput?ee,amput?ate, and amput?at?ion.Another issue that requires special handling inCELEX involves recovering reduced geminate con-sonants.
For example, the word interrelate is pro-nounced with a single [r] phoneme at the morphemeboundary.
However, when segmenting the phonemesequence, we need to include [r] both at the end ofinter- and at the beginning of relate.4.2 PredictorThe role of the predictor mentioned in Section 3.2is performed by DIRECTL+ (Jiampojamarn et al,2010), a publicly available discriminative stringtransducer.
It takes as input a sequence of com-mon morpheme representations, determined usingthe method described above, and produces the pre-dicted word pronunciation.
Since DIRECTL+ tendsto make mistakes related to the unstressed vowel re-duction phenomenon in English, we refrain from re-placing the ?underlying?
phonemes with either [@]or [I].An example derivation is shown in Table 3, wherethe Underlying string represents the input to DI-RECTL+, Predicted is its output, Surface is the ac-tual pronunciation, and Respelling is the spellinggenerated according to the algorithm in Figure 1.Underlying: foto + gr?f + @r + zPredicted: fot@ gr?f @r zSurface: f@tA gr@f @r zRespelling: fotA ?
gr?f ?
@r ?
zTable 3: Deriving the spelling of the word photographers.Since DIRECTL+ requires a training set, we splitthe lexicon into two equal-size parts with no mor-pheme overlap, and induce two separate models oneach set.
Then we apply each model as the predictoron the other half of the lexicon.
This approach simu-lates the human ability to guess pronunciation fromthe spelling.
Jiampojamarn et al (2010) report thatDIRECTL+ achieves approximately 90% word ac-curacy on the letter-to-phoneme conversion task onthe CELEX data.5 Evaluation measuresIn this section, we define our measures of phonemictransparency and morphemic consistency.5.1 Phonemic transparencyKominek and Black (2006) measure the complexityof spelling systems by calculating the average per-plexity of phoneme emissions for each letter.
Thetotal perplexity is the sum of each letter?s perplex-ity weighted by its unigram probability.
Since theirfocus is on the task of inducing text-to-speech rules,they also incorporate letter context into this defini-tion.
Thus, a system that is completely explained bya set of rules has a perplexity of 1.The way we compute perplexity differs in severalaspects.
Whereas Kominek and Black (2006) calcu-late the perplexity of single letters, we take as unitssubstrings derived from many-to-many alignment,with the length limited to two characters.
Some let-ter bigrams, such as ph, th, and ch, are typicallypronounced as a single phoneme, while the letter xoften corresponds to the phoneme bigram [ks].
Byconsidering substrings we obtain a more realistic es-timate of spelling perplexity.We calculate the average orthographic perplexityusing the standard formulation:Pave=?cPce?
?iPilogPi(1)541System viscous viscosityT.O.
viscous viscosityIPA vIsk@s vIskAs@tiM-CAT viscous viscous?ityALG vIskAs vIskAs?ItiSR viscous viscositySS viscus viscosityTable 4: Example spellings according to various systems.where Pcis the probability of a grapheme substringin the dictionary, and Piis the probability that thegrapheme substring is pronounced as the phonemesubstring i.
Note that this formulation is not contin-gent on any set of rules.In a similar way, we compute the phonemic per-plexity in the opposite direction, from phonemes toletters.
The orthographic and the phonemic perplex-ity values quantify the transparency of a spellingsystem with respect to reading and writing, respec-tively.5.2 Morphemic consistencyLittle (2001) proposes to calculate the morphemicoptimality of English spellings by computing theaverage percentage of ?undisturbed letters?
in thepolymorphemic words with respect to the base form.For example, four of five letters of the base formvoice are present in voicing, which translates into80% optimal.
The examples given in the paper al-low us to interpret this measure as a function of editdistance normalized by the length of the base form.We make three modifications to the originalmethod.
First, we compute the average over allwords in the lexicon rather than over word sets,which would give disproportionate weight to wordsin smaller word sets.
Second, we normalize edit dis-tance by the number of phonemes in a word, ratherthan by the number of letters in a spelling, in order toavoid penalizing systems that use shorter spellings.Finally, we consider edit operations to apply to sub-strings aligned to substrings of phonemes, ratherthan to individual symbols.
In this way, the maxi-mum number of edit operations is equal to the num-ber of phonemes.
The modified measure yields ascore between 0 and 100%, with the latter value rep-resenting morphemic optimality.System Orth Phon MorphT.O.
2.32 2.10 96.11IPA 1.00 1.00 93.94M-CAT 2.51 2.36 100.00ALG 1.33 1.72 98.90SR 2.27 2.15 96.57SS 1.60 1.72 94.72Table 5: Orthographic, phonemic and morphemic opti-mality of spelling systems.As an example, consider the word set consistingof six word-forms: snip, snips, snipped, snipping,snippet, and snippets.
The first two words, whichrepresent the base morpheme as snip, receive a per-fect score of 1 for morphemic consistency.
The re-maining four words, which have the morpheme assnipp, obtain the score of 75% because one of thefour phonemes is spelled differently from the baseform.
For free morphemes, the base form is simplythe spelling of the morpheme, but for bound mor-phemes, we take the majority spelling of the mor-pheme.6 Quantitative comparisonWe compare the traditional English orthography(T.O.)
to three hypothetical systems: phonemictranscription (IPA), morpheme concatenation (M-CAT), and the orthography generated by the algo-rithm described in Section 3 (ALG).
In addition,we consider two proposals submitted to the En-glish Spelling Society: a minimalist spelling reform(SR) of Gibbs (1984), and the more comprehensiveSoundSpel (SS) of Rondthaler and Edward (1986).Table 4 lists the spellings of the words viscous andviscosity in various orthographies.Table 5 shows the values of orthographic andphonemic transparency, as well as morphemic con-sistency for the evaluated spelling systems.
By def-inition, phonemic transcription obtains the optimaltransparency scores of 1, while simple morphologi-cal concatenation receives a perfect 100% in termsof morphemic consistency.The results in Table 5 indicate that traditional or-thography scores poorly according to all three mea-sures.
Its low orthographic and phonemic trans-parency is to be expected, but its low morphemic542Rule Input Outpute-deletion voice?ing voicingy-replacement industry?al industrialk-insertion panic?ing panickinge-insertion church?s churchesconsonant doubling get?ing gettingf-voicing knife?s knivesTable 6: Common English spelling rules with examples.consistency is striking.
Traditional orthography isnot only far from optimality, but overall seems nomore optimal than any other of the evaluated sys-tems.Searching for the explanation of this surprising re-sult, we find that much of the morphemic score de-duction can be attributed to small changes like drop-ping of the silent e, as in ?make?
+ ?ing?
= ?mak-ing?.
These types of inconsistencies counter-weighthe high marks that traditional orthography gets formaintaining consistent spelling in spite of unstressedvowel reductions.The prevalence of silent e?s in traditional orthog-raphy undeniably diminishes its morphemic con-sistency.
Nor is the device necessary to representthe pronunciation of the preceding vowel; for ex-ample, SoundSpel has those words as ?maek?
and?maeking?.
However, one can argue that such mi-nor alterations should not be penalized because En-glish speakers subconsciously take them into ac-count while reading.
In the next section, we describean experiment in which we pre-process words withsuch orthographic rules, in order to determine howmuch they influence the optimality picture.7 Spelling rulesTable 6 lists six common English spelling rules thataffect letters at morpheme boundaries, of which thefirst five are included in the textbook account of Ju-rafsky and Martin (2009, page 63).
We conductedan experiment to determine the applicability of theserules by computing how often they fired when trig-gered by the correct environment.2We tested therules in both directions, with respect to both writing2The conditioning environments of the rules wereimplemented according to the guidelines provided athttp://www.phonicslessons.co.uk/englishspellingrules.html.Rule Writing Readinge-deletion 98.8 67.1y-replacement 93.5 95.8k-insertion 100.0 1.0e-insertion 100.0 98.7consonant doubling 96.3 36.3f-voicing 33.3 14.7Table 7: Applicability of common spelling rules.and reading applicability.
Writing rules are appliedto morphemes when they are in the correct environ-ment.
For example, the k-insertion rule fires if themorpheme ends in a c and the next morpheme beginswith e or i, as in panic?ing.
On the other hand, read-ing may involve recovering the morphemes from thesurface forms.
For example, if the stem ends ina tt and the affix begins with an i, the consonantdoubling rule implies that the free form of the mor-pheme ends in a single t, as in getting.The results in Table 7 show that the rules, with theexception of the f-voicing rule, have high applicabil-ity in writing.
Most rules, however, cannot be trustedto recover the morpheme spellings from the surfaceform.
For example, following the consonant dou-bling rule would cause the reader to incorrectly in-fer from the word butted that the spelling of the verbis but.
This is significant considering that Chomskyand Halle define orthography as a system for readers(page 49).Notwithstanding the unreliability of the spellingrules, we incorporate them into the computation ofthe morphemic consistency of the traditional orthog-raphy.
We apply the rules from a reading perspec-tive, but assume some morphemic knowledge of areader.
Whereas we consider a rule to misfire if itdoes not apply in the correct environment when cal-culating applicability, as in Table 7, when calculat-ing morphemic consistency, we allow the rules to bemore flexible.
We consider a morpheme to matchthe prototype if either the observed form or the formmodified by the spelling rule matches the prototype.8 DiscussionFigure 2 shows a two-dimensional plot of ortho-graphic perplexity vs. morphemic consistency.
The(unattainable) optimality is represented by the lower543left corner of the plot.
The effect of accommodat-ing the spelling rules within the traditional orthog-raphy is illustrated by an arrow, which indicates anincrease in morphemic consistency from 96.11 to98.90.The ALG(L) system represents a version of theALG system in which the IPA symbols are respelledusing combinations of the 26 letters of the Romanalphabet, with the morpheme boundary symbol re-moved.
This change, which is intended to make thecomparison with the traditional orthography moreinterpretable, increases the orthographic perplexityfrom 1.33 to 1.58.
Furthermore, we ensure thatALG(L) contains no homographs (which consitute2.6% of the lexicon in ALG) by reverting to a tradi-tional spelling of a morpheme if necessary.
Since therespelling applies to all instances of that morpheme,it has no effect on the morphemic consistency, butresults in a small increase of the orthographic per-plexity to 1.61.The plot in Figure 2 shows that, even after ac-counting for the orthographic rules, traditional or-thography does not surpass the level of morphemicconsistency of ALG.
With the same writing scriptand no homographs, ALG(L) is less than half thedistance from the orthographic optimality.
On theother hand, neither of the spelling reform proposalsis substantially better overall than the traditional or-thography.Inspection of the spellings generated by our algo-rithm reveals that it generally maintains consistentspellings of morphemes.
In fact, it only makes achange from the underlying form in 3660 cases, or7.2% of the words in the dictionary.
Consider themorpheme transcribe, which is traditionally spelledas ?transcrip?
in transcription.
Even if we disre-gard the final ?e?
by invoking the e-deletion spellingrule, the morphemic consistency in the traditionalorthography is still violated by the ?b?/?p?
alterna-tion.
Our predictor, however, considers this a pre-dictable devoicing assimilation change, which oc-curs in a number of words, including subscriptionand absorption.
Consequently, the spellings gen-erated by the algorithm preserve the morpheme?s?b?
ending in all words that contain it.
In addition,the algorithm avoids spurious idiosyncrasies such asfour/forty, which abound in traditional orthography.The spellings generated by the algorithm are also939495969798991001 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6MORPHEMIC OPTIMALITYORTHOGRAPHIC PERPLEXITYT.O Alg SS SR IPA Morph +Rules Alg(L)Figure 2: Morphemic and orthographic optimality of var-ious spelling systems.much more phonemically transparent, particularlyfor vowels.
Phonemically, ALG(L) improves onthe traditional orthography mostly by making thespelling more predictable, For example, ?a?
repre-sents the phoneme [?]
in 91.7% of the cases in thegenerated spellings, as opposed to only 36.5% in tra-ditional orthography.9 ConclusionWe have analyzed English orthography in terms ofmorphemic consistency and phonemic transparency.According to the strict interpretation of morphemicconsistency, traditional orthography is closer to thelevel of a phonemic transcription than to that ofa morphemic concatenation.
Even if orthographicrules are assumed to operate cost-free as a pre-processing step, the orthographic perplexity of tra-ditional orthography remains high.While phonemic transparency and morphemicconsistency are at odds with each other, we have pro-vided a constructive proof that it is possible to createa spelling system for English that it is substantiallycloser to theoretical optimality than the traditionalorthography, even when it is constrained by the tra-ditional character set.
This contradicts the claim thatEnglish orthography is near optimal.544AcknowledgmentsThis research was supported by the Natural Sciencesand Engineering Research Council of Canada, andthe Alberta Innovates ?
Technology Futures.ReferencesHarald R. Baayen, Richard Piepenbrock, and Leon Gu-likers.
1995.
The CELEX Lexical Database.
Release2 (CD-ROM).
Linguistic Data Consortium, Universityof Pennsylvania, Philadelphia, Pennsylvania.Maximilian Bisani and Hermann Ney.
2008.
Joint-sequence models for grapheme-to-phoneme conver-sion.
Speech Communication, 50(5):434?451.Edward Carney.
1994.
A Survey of English Spelling.Routledge.Noam Chomsky and Morris Halle.
1968.
The sound pat-tern of English.Bruce L Derwing.
1992.
Orthographic aspects of lin-guistic competence.
The linguistics of literacy, pages193?210.Kenneth Dwyer and Grzegorz Kondrak.
2009.
Reducingthe annotation effort for letter-to-phoneme conversion.In Proceedings of ACL-IJCNLP, pages 127?135.Stanley Gibbs.
1984.
The Simplified Spelling Society?s1984 proposals.
Journal of the Simplified Spelling So-ciety, 2:32.Sittichai Jiampojamarn, Grzegorz Kondrak, and TarekSherif.
2007.
Applying many-to-many alignmentsand hidden markov models to letter-to-phoneme con-version.
In Human Language Technologies 2007: TheConference of the North American Chapter of the As-sociation for Computational Linguistics; Proceedingsof the Main Conference, pages 372?379, Rochester,New York, April.
Association for Computational Lin-guistics.Sitichai Jiampojamarn, Colin Cherry, and Grzegorz Kon-drak.
2010.
Integrating Joint n-gram Features into aDiscriminative Training Framework.
In Proceedingsof NAACL-2010, Los Angeles, CA, June.
Associationfor Computational Linguistics.Dan Jurafsky and James H Martin.
2009.
Speech & lan-guage processing.
Pearson Education India, 2nd edi-tion.John Kominek and Alan W. Black.
2006.
Learningpronunciation dictionaries: Language complexity andword selection strategies.
In HLT-NAACL, pages 232?239.Grzegorz Kondrak.
2000.
A new algorithm for thealignment of phonetic sequences.
In Proceedings ofNAACL 2000: 1st Meeting of the North AmericanChapter of the Association for Computational Linguis-tics, pages 288?295.Joseph R Little.
2001.
The optimality of Englishspelling.Anneke Marijke Nunn.
2006.
Dutch orthography: Asystematic investigation of the spelling of Dutch words.The Hague: Holland Academic Graphics.Korin Richmond, Robert AJ Clark, and Susan Fitt.
2009.Robust LTS rules with the Combilex speech technol-ogy lexicon.
pages 1295?1298, September.Henry Rogers.
2005.
Writing Systems.
Blackwell.Edward Rondthaler and J LIAS Edward.
1986.
Dictio-nary of simplified American Spelling.Geoffrey Sampson.
1985.
Writing systems: A linguisticintroduction.
Stanford University Press.Richard Sproat.
2000.
A computational Theory of Writ-ing Systems.
Cambridge.Danny D Steinberg.
1973.
Phonology, reading, andChomsky and Halle?s optimal orthography.
Journalof Psycholinguistic Research, 2(3):239?258.Richard L Venezky.
1970.
The structure of English or-thography, volume 82.
Walter de Gruyter.Valerie Yule.
1978.
Is there evidence for Chomsky?s in-terpretation of English spelling?
Spelling ProgressBulletin, 18(4):10?12.545
