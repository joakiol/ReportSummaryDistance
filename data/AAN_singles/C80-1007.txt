A CONTEXT-FREE GRAMMAR OF FRENCH*Morris SalkoffUniversit& de Paris 7, L.A.D.L.2 Place Jussieu, Paris 5, FRANCESummarx.
I present here a method that allows one to construct a CF grammar of a natural lan-guage that correctly accounts for verbal selection rules.
This goes contrary to the prevail-ing opinion, following Chomsky 5, that such a construction is impossible.
My method consistsessentially in separating the semantic function of a selection rule, namely, the exclusionof certain noun sub-classes, from the syntactic relation between the elements (verb, sub-ject, object:) linked by this relation of selection.
When the verb and object (subject) areseparated by intervening levels of complement construction, the selection can still be sat-isfied by a double classification of verbs: according to the kind of subject they take, andalso according to the type of verb that can follow them (in the complement construction).Conjunctions and sentences with respectively can also be treated within the framework of theCF approximation proposed here.like the latter, is recursively extendable to?O.
Introduction sentences of theoretically unbounded length.It is now quite generally supposed that anatural language cannot be adequately describedby a CF grammar.
This opinion was first advancedby Chomsky 5 who discussed this problem from thepoint of view of phrase structure grammars.
Hepresents there a fragment of a CF phrase struc-ture grammar in terms of noun phrases NP, verbphrases, VP, etc., which are familiar from im-mediate constituent analysis.
These rules cannottreat verbal selection rules properly; Chomsky ~(ch.
8) had already tried himself to correctthis defect within the framework of a CF phrasestructure grammar, but the difficulties he en-countered seem to have persuaded him that only atransformational grammar could handle such aproblem.Harman 13 proposed another solution to theproblem of treating verbal selection rules in aCF grammar; he added a set of subscripts to theCF rules used in Chomsky 5, which were chosen sothat only those subjects and objects which sat-isfied the selection rules could appear with agiven type of verb.
Chomsky 8 showed that thismethod would not suffice if the sentences sub-scripted as Harman had suggested were themselvesembedded in complement constructions.
Thus,where Harman's system will not generate such ab-errant sentences as *Bill elapsed, it will notbe able to exclude the generation of such a se-quence when it is embedded in a complement con-struction, as in *John persuaded Bill to elapse.Further arguments for the inadequacy of aCF grammar were adduced from the fact that sen-tences containing respectively cannot be assign-ed an appropriate structure in the framework ofa CF grammar.
This was noted by Chomsky 5 (?4.2)in his discussion of the algebraic language w w;the relation between this language and sentencescontaining respectively was discussed by Bar-Hillel & Shamir I, and then taken up again byChomsky 8 together with examples taken from thecomparative construction in English.
Later, Pos-tal 22 exhibited a construction in Mohawk whichis similar to the one with respectively, andAs a result of these considerations, Chom-sky 8 concluded that a coherent description ofrecursively embedded sentences or of verbal sel-ection rules could not be obtained in a naturalway by any CF grammar, and that consequently noCF grammar could adequately describe a naturallanguage.
However, it turns out that this ques-tion is not so easily disposed of as it wouldappear, and recent work by Joshi & Levy 18 showsthat a CS grammar containing rich context-depen-dent rules can be used to analyze trees that de-scribe a CF language.
They did this by an exten-sion of a theorem of Peters & Ritchie 21 , whoshowed that CS rules of a certain type can beused not to generate sentences, i.e., not tocharacterize them, but only to verify theirwell-formedness, by applying the context-depen-dent parts of these rules as constraints on theset of trees that schematize these sentences.
Inthis case, the language described by these treesis a CF language.Joshi & Levy generalized the kinds of CSrules that can be used for this result and de-fined CS rules that can describe conditions onthe context whose action is close to that ofcertain transformations.
These rules are expres-sed as Boolean combinations of predicates thatdescr ibe  the left and/or right context of anode, or the upper and/or lower contexts (thenodes above and below a given node).
Roughlyspeaking, a tree is said to be analyzable withrespect to a grammar containing such rules ifone of the rules is satisfied at each node ofthe tree.
In that case, the language which con-sists of the terminal strings of all the treesanalyzed by the grammar is a CF language, eventhough the rules take the context into account ~.Hence these terminal strings can be described by?Note that the formalism used by Joshi & Levyfor displaying conditions on trees is close tothe notation used for rewrite rules, and canlead to some confusion, lit need only be remem-bered that these context-dependent rules are notused to generate structures.38some CF language.Now the string grammar proposed by Harris 15and which analyzes English (Sager 23) and French(Salkoff 2~'25) can be shown to be of just theform described by Joshi & Levy.
It contains CSrules of the type described by them, and is usedto analyze a tree, rather than to generate it.It would thus appear that English or French canbe described by some CF language, although thestring grammar gives no clear clue as to whatits form would be.
I shall show here that such aCF grammar can be written for French, and thatit can treat, in a linguistically appropriatefashion, the problem of the expression of verbalselection rules in nested complement construct-ions.
I have chosen French because systematicdata giving a wide coverage of the French lexi-con are available (Gross 12, Boons et al3); how-ever, the very nature of this construction makesquite plausible its extension to other naturallanguages.
Only the method used will be outlinedin this brief article, and an example of its ap-plication to embedded complement constructions;for more details, consult Salkoff 25 (chap.
3)I now construct CF rules that correctly de-scribe sentences in which related pairs likeverb-subject, verb-object, etc., that are linkedby a relation of selection, may be separated byconstructions of unbounded length.
Each such CFrule is the expansion of a sentence schema S.The verbal selection rules are accounted for inthis method by separating the semantic functionof a selection rule, namely, the exclusion ofcertain noun sub-classes, from the syntactic re-lation between the pairs carrying this function(generally, a verb and a noun phrase).
Each sel-ection rule is decomposed into two independentparts: one part is the choice of a noun not cla-ssified in certain noun sub-classes, in such away as to express the semantics of that selec-tion rule; the second part is the use of thenoun phrase containing this N for the subject orobject of a given verb in ~ rule schema, whichamounts to satisfying the complete verbal selec-tion rule.Conjunctional sequences, including senten-ces containing respectivement can be handled bythis method, but not within the strict mathemat-ical framework of a CF language.
The resultingCF grammar of French can be compared with a tra-nsformational grammar, and it is seen that thetwo are more similar than has been thought.?|.
The base rulesIn order to set forth the selection rulesas clearly as possible, I shall begin by usingin the rules developing S, noun phrases bearingthree subscripts, i.e., complex symbols:(I) NP ; where x is a function F: sub-x,y,z ject s, object ~, or i~directobject io; y is the morphology M: singular, plu-ral,...; and z is a semantic su~-class S~ thesesets have no elements in common.With this notation, typical rules for Swill have the following form:(2)a S ?
NP t V. NPs~y,z  i o ,y ,zb S + NP t V. P NP.s ,y~z  J i o ,y , zc S + NPs,y,z t V k NPo,y~z P NPio,y,z, etc.The verb is subscripted according to the comple-ments it takes.In this notation, the CF rules no longerconstitute a strict constituent grammar of thetype discussed by Chomsky 5'8.
My notation bringsout the grammatical relations between the elem-ents of the sentence schemata, which is not pos-sible?in a direct way in a phrase structure gra-mmar.
The complex symbols are useful in order toexplain clearly the process of sentence embed-ding; they will be eliminated in a second stepand replaced by the noun phrases without sub-scripts used in the verbal selection rules.Main rule schema.For clarity, I shall use only the subscriptF (s, o, or i o) in the rules for S. Only an ab-breviated list of these rules can be given here;for a complete list, cf.
Salkoff 25.
A first sub-group of rules contains non-sentential objects:(3) S ~ NP t V 1 (Max dort)SS ?
NP t V 2 NP (Max signe le traitS)S 0S ?
NP s t V3 Pi NPio (Paul d@pend de Max)S + NP t V~ NP P. NP.
(Paul base saS O 1 iOth~orie sur ce8 fait8); etc.There are about ten such rules in French.
A sec-ond group of rules contain a sentential comple-ment clause:S + NP t V20 que S (Max sait que Paul as fait cela) ;?
NP s t V22 NP ?
que S (J'~nforme Maxque Paul est venu)A third group of rules yield embedded sent-ences.
One example will be treated here, as itoccurs in independent sentences and in relativeclauses, to illustrate the method.
(4)a S + NP t V30 S 1 (Max convainc ...SS 1 + NP de Vl ... Paul de dormir)0 S* NP de V 2 NP .
.Paul d'oter cela)0 S 0The new notation oNPs denotes a noun phrase hav-ing a double function F: it must be an accept-?To do so, one has, for example, to reinter-pret the tree structure of the sentence (cfoChomsky7).39able object of the verb V30 which precedes ?
, andalso an acceptable subject of the main verb ofS I.
The sentence schema for S 1 is a sentence de-formation (in Harris '17 terminology); there areabout ten such deformations in French.
Anotherone is the following:(5) S + NP t V32 S 3 (Max apprend ...sS 3 ?
~ .
NP ~ V1 ... ?
Paul ~ dormir) 1o s... etc.Each such schema S i contains as many rules as Sitself.With the schemata S l, I can account for therecursive embedding of sentences, like Luc con-vainc Paul d'apprendre ?
Max ~ dire aux dl~vesque...; other schemata are needed to account forsentence embedding in relat ive clauses:(6)a NP rl ?
NP que NP t V30 S I (l'homne o s s proque Max convainc...b S 1 ?
o(t) s de V 1 .. de dormir) pro?
o(O)  s de V 2 NP ?
.
.
d'oter cela).
.
.
etc.Here, the symbol o(@)s is a dummy element stand-ing for the noun phrase, carrying the same sub-scripts, at the head of NP rl.
It is marked bythe same select ional features as oNPs and wil lbe used to 'transmit' this se lect ion through em-bedded sentences.
Such dummy elements come closeto certain pronouns found in relat ive clauseswithout antecedent, like ce in: J'ai achet$ ceque Max a sculpt@.A second type of relat ive clause is this:(7) NP r2 ?
NP que S (le livre que...o proSpr ?
?
NP s t V 2 (~)o ... Paul lit)+ NP s t VL~ (~)o P NPio .Paul fair de.
.
.
ces articles)?
NP s t V30 S I'I .. Max convainc... proS I'I ?
NP de V2 (0)o .. Paul depro o s lire)?
NP de V 4 (@)o P NP.0 S iO..Paul de faire de tee articles)?
NP s t V32 S 3"I .. Max apprend... proS 3.1 + d ?
NP d V 2 (~)o "" ~ Paul pro io s?
.
.
~ life).
e tc .With these rules, it is possible to descr ibe re-curs ively embedded sentences inside relat iveclauses, although the complex symbols give us no?Sentences like Max emp$che que la table netombe ?
Max emp$che la table de tomber, in whi-ch the raised object (table) does not have to becompatible with the verb emp@oher, are accountedfor by di f ferent rules?indicat ion yet as to how the verbal select ionrules are to be satisfied.?2.
Select ion RulesAccord ing to the kind of noun al lowed assubject, or as direct or indirect object, a verbis said to select for that sub-class?
The major-ity of the select ion rules thus concern the fol-lowing three rules for S:(8)a S ?
NP s t V 2 NP ?
(Luc porte un chapeau)b S + NP t V 3 P. NP, (Max d~pend de Luc) S 1 iOc S ?
NP t V 4 NP P. NP, (Max attribueS O i iOla m~daille d S~c)The select ion rules vary with the prepos i t ion Pifor verbs V 3 and V~.
In the sentence analyzerbased on the str ing grammar, these select ionrules are contained in a system of contextualrules attached to each lexical entry for a verbthat can appear in (8)?
Exper ience shows thatfive noun sub-classes are needed for such a sys-tem of select ion rules: N t, 'time'; Ns, senten-tial; Nh, 'human'; Nc, concrete; and Nnom, nom-inal izations.
These sub-classes are used in theverbal entries to indicate the unacceptable con-texts for a verb c lass i f ied in V2, V3, or V~.The analyzer then uses these contextual  rules tod isal low an unacceptable decomposi t ion in a sen-tence analysis.These contextual  rules can be replaced byCF rules in the fol lowing way.
Let(9) N \ {N. + N. + ...} = N" i \]denote any noun except one belonging to sub-class Ni, or to N~, etc.
; the bar \ means 'min-us'.
If N" is subst i tuted for the noun N in anyNP, and carr ied over into every rule developingNP, the terminal rule for the noun in NP wil l  be(\]0) N" ?
N d , where N d is a lexical entry.Each choice for N d is compared with the list ofsub-classes Ni,N., ..., attached to N'.
If N dbelongs to any ~f these sub-classes, it is dis-carded; if N d doesn't belong to these sub-class-es the condit ions expressed in (9) are satisf ied.Now, if the select ion rule of a given verb isthat sub-classes N., N~, , are unacceptable as i d "'"subject (object), then the noun phrase contain-ing N d satisf ies that select ion rule, and wil lbe the only noun phrase permitted in that syn-tactic posit ion.I now define noun phrases GN containing allthe combinations of excluded noun classes fromthe five named above (there are 31 such GN):(l|)a GN + N, if no sub-classes are excluded;b GNi ?
N\{Nt}; GN2 ?
N\{Ns}; ... ;GN 5 ?
N\{Nno m} ;c GNi, 2 ?
N\{N t + Ns};GNi, 3 ?
N\{N t + N h}?
..GNI,5 + N\{N t + Nnom};40GN2,z ?
N\{N + Nh}; ...SInserting the noun phrases GN~ { into (8), andreplacing the subscripts i an~J\]_ ' by the singlesubscript ~, I obtain the following rule schema-ta:(12) S ?
(GNj) s t Vj,j, (GNj,) ?
; I_<j,j'_<31S ?
(GNj) s t V.,j,,j Pi (GNj,,)io I~j,j"_<31S ?
(GNj) s t Vj, m (GNj,) ?
Pi (GNj")io1_<ms (j 'xj"xk)The subscripts are not independent; in general,a verb accepts a certain GNj, (GN:,,) only for?
.
?
J .
certain values of GNj.
This is captured in thedouble verb classification: V~ ~,(Vj,~,,) is thatverb sub-class which requiresJ'JGNi Jfor sub-ject, when the direct (indirect) object is GN i,(GN i ).
Lexicographlcal work shows that thereare'about 40 different prepositions appearing inthe objects P N and N P N. Since the double verbclassification must be carried out for each va-lue of Pi' this amounts to a triple classifica-tion of verbs.?3.
Elimination of the complex symbolsThe schema (12) generates only acceptablesentences; each verb in the lexicon is classifi-ed according to which of the sub-classes definedby (12) it belongs to; hence no verb will everappear in a schema of type (12) unless it is ac-ceptable there.
Then, since the process definedby (I0) is such that only acceptable nouns canbe chosen for the noun phrases GN (= N') inthese schemata, each schema must in fact giverise to an acceptable sentence?The situation is quite different, however,for the rules containing oNPs, NP o or NPio.These cannot be developed as written, for tworeasons: (1) only noun phrases of the type N"are available, so that verbal selection rulescan be satisfied; (2) the syntactic functionsexpressed by the subscripts on these noun phra-ses can be obtained only by a sub-classificationof the verbs appearing with them.
Thus, in orderfor oNPs (in 4) to be an acceptable object ofthe verb V a that precedes, and also an accept-able subject for the verb V b of the embeddedsentence containing it, the verb V b must be sub-classified according to type of subject, and V ahas to be sub-classified according to the typeof V b that may follow.An even more complex classification is nee-ded to handle relative clauses like (7), whichbegin with NP o.
This noun phrase must be an acc-eptable object for the last verb, say Vc, in theS which follows; however, S can contain an pro prounbounded number of embedded verbs before V c ap-pears.
Hence, V c is not known at the moment whenthe lexical entry is chosen for the N" which re-presents NP o.
The problem, then, is to 'transmit'the selectional characteristics of the noun inNP o to the rule that will later develop Ve, byusing the embedded verbs as carriers for the se-lectional information?
This transmission of sel-ectional information necessitates a sub-classi-fication both of embedded verbs and of the sche-mata of the type S pro"?31 Elimination of oNPsI subdivide the sets S \ ]S  2, S 3, ... (cf.4and 5) into S~ subsets, where i runs through the31 possible values of the subject N" (which re-places oNPs).
These subsets then constitute aclassif ication of the schemata S I, .., accordingto the type of subjectthe verb of the schema:(13) S~ ?
N\]?
N\]?
N\]?
N\]I subdivide thesame way:(14) S 1 pro,lde V 1de V 2 NP ode V30 S. 1ide v31 s 2.Jsets S 1 prothat is acceptable forS~ ?
N~ de V I?
N~ de V 2 NP o...etc.sit ?
N~i de vl(6b) ,  S 2 in  the+ (~)I de V\], where ~I is a dummycarrying the selec-?
(4) I de V2 NP o tional featuresof N~;?
(~)1'd~ V3o s~ pro,j?
etc.This new way of ordering the rules is thebasis for the sub-classification of verbs V30,which take the object S I.
A verb V30 acceptsonly the sub-sets S~ whose subject N~ is an ac-ceptable object forlthat verb?
This is a selec-tion rule between verbs: the verb V30 selects anobject having a verb of a certain type t.The generation of reeursively embedded sen-tences which satisfy verbal selection rules isnow obtained as follows.
First, let us choose arule developing the matrix sentence , for example(15) N \ ] t  V30 S~INow the verbs in the sub-class V30 have been sub-classified in the lexicon according to the typeof acceptable subject, N i, and also according tothe type of acceptable complement S~.
By choos-ing in (15) a verb in the sub-class (Nj,Si) , Iobtain an acceptable sentence.%The selection between verbs mentioned herehas already been suggested by Z. Harris 16 in theframework of a system of sentence generation ba-sed on the concept of the verb as an operatoracting on its arguments (approximately, its sub-ject and object)?
Selection between verbs wasalso used by M. Gross I0 in order to account forconstructions like Je coul~s manger un g~teau,??
Je co~2~s d~tester Max; here, the first verb(of movement) selects for the type of verb thatcan follow it.411 Next, S i is developed, using the schema(13), by one of two tynes of rules:(16)a S~l + N\]z de V31 S~; b S~l ?
N~ de V 2 NP oIf rule a is chosen, another sentence is embed-ded, anda  verb V31 in the sub-class (N\[,S\]) ischosen from the lexicon.
But if rule b is chosensentence embedding terminates with that rule.The same method can be used for generatingacceptable relative clauses NP rl (in 6).
As anexample, I rewrite one of the NP rl in terms ofthe noun phrases N':(17)a NP rl ?
N~ que N\ ] t  V30 S l pro,ib S~ro,i ?
(@)i de V 1i) By choosing a verb V30 in the subclass (N\],Sp,i.e., one taking N'.. as its subject and as sec-ond verb (in S!ro )J one whose subject is N\[, Iguarantee that the N i in a is both an acceptableobject of V30 and an acceptable subject of theverb in S1 pro?32 Elimination of N_P_oThe development sketched in ?31 will not dofor relative clauses like NP r2 (in 7), whichhave the form NP o que Spr o.
This can be schema-tized roughly as NP o que.
?
V i .
.
.
.
V~ V c ,where Vi, Vj, .. are embedded verbs o~ the typeV30, V31, ..., and V c is the last verb of 'qpro'the one for which NP o must be an acceptable ob-j ect.In order to transmit the selectional char-acteristics of NP o to the rule that develops Vc,and this within the framework of a CF grammar, Ican proceed as follows.
I subscript Spro in (7)by k, which is also the subscript on the nounphrase N~ that replaces NP o (just as S I, S 2, ....were subscripted for the type of subject); thenthe schema S I~ for embedded sentences will havetwo subscripts: one for ~, and a second one forthe type of subject the verb takes.
This yieldsthe following kind of development:(18) NP r2 ?
'N~ que Spro, kSpro, k ?
N~ t V 2 (~)k+ N~ t V 4 (~)k Pn NPio+ N~ t V~0 sl'l, k pro, 131 N~ t V30 pro,2 ?
sl.l,ksche- <mata \[ S l ' l ' k?
N~ t V30 pro,31s2.l,k ?
N\ [ t  V31 pro,l-~ N: t V31 S 2"l,k l pro, 2s2.l,k ?
N.~ t V31 pro, 31sl.l(@)k pro:~ ?
N\] de V2?
N\] de V4 (~)k Pn NPio?
N\] de V30 SI.i,~ pro,3?
N i de v31 s2"l,, k pro,j(31 times, as above, once eachfor the subjects N~ ..... Nil)The typical rule for NP r2 is the following:sl.l,k (19) NP r2 ~ N~ @ue N~ t V30 pro,jOnce more, acceptability is guaranteed by choos-ing a verb V30 in the sub-class (N~, S\]).
Next,the symbol SI.i, I~ representing a possibly em- " pro,j 'bedded sentence, can be developed by the rules:?
s3.l,k (20)a sl'l'kpro,J ?
N:j de V32 pro,j'b SI'I,.
k ?
N: de V 2 (~)k pro,j jIf rule b is chosen, sentence embedding termin-ates; then, choosing a V 2 in the sub-class takingan object of type N~ (as indicated by @k ) guaran-tees that N~ in (18) is an acceptable object forthat V 2.
If-rule a is chosen, sentence embeddingcontinues; a verb V32 is chosen, in the sub-class(hi, S\],), until a rule of type _b is chosen.The reader will notice two features of thismethod of using the selection rules to generaterelative clauses?
(I) The subdivision of S I into a set of S~ ruleschemata does not increase the number of rules inS.
The same number of rules would be obtained byinserting the noun phrases Nk into S (or SI), andthis must be done in any case in order to expressthe verbal selection rules (in whatever fashion)?In the decompositions of SI,..., used above, thepoint was only to present the original schemataso as to make the subject or object of the verbin the schema stand out, for further reference.
(2) The two kinds of selection made explicit inthese schemata, the one between verbs, and theother (better known) between verb and object (orsubject), appear only once in the grammar.
Bothtypes of selection are used in each step of sen-tence embedding, but in no case does this entailrewriting the two kinds of selection in the gram-mar each time a deeper level of embedding is at-tained.?4.
Conjunction; respectivelyIt has been shown by Chomsky 5 that conjunc-tions can be described in a CF grammar only byusing an infinite number of rules, represented byrule schemata; if one restricts oneself to strictCF grammar, one introduces an excessive structu-ring of the conjoined forms?
An approximate sol--ution can nevertheless be given to this problem,in the framework of a finite CF grammar, in thefollowing way.
I construct a sequence of conjoin-ed noun phrases:(21)a GN 1 + N" ; b GN 2 ?
N" et N" ;c GN 3 ?
N" et N" et N"d GN I ?
N" et N" ... et N" (!
times)k 42iDenoting by Gcf the CF grammar containing therules GN i, GN i-I, ..., GN I, I can.
set up the se-ries of grammars G~f, G 2 l cf' "''' Gcf' each repre-senting a better approximation to the infiniteG~f, which contains a noun phrase of un- grammarbounded c length.For any practical purpose, such as genera-tion (or analysSs) of sentences, it is cleari that one of the Gcf will be large enough to yie-ld the desired precision.
However, another app-roximation is available which is less costly,from the viewpoint of the number of rules requi-red, and which yields the same result for G~f.This is the rule schema proposed by Chomsky &Sch5tzenberger 9 for handling conjunction in a CFgrammar.
For the case of noun phrase conjunc-tion, this schema is as follows:(22)a GN ?
N'; b GN + N" (et N')*The star indicates that the group (et N') can beiterated as many times as is necessary.
Thisschema is therefore an abbreviation for an infi-nite number of rules.With such a rule schema in it, my grammaris no longer strictly CF; however, it is clearlyf~ithful to the spirit of the approximation forl outlined above, since the language described Gcfby my grammar is the same as that reached asymp-totically by the series of grammars G~f, 2 Gcf,..,G~f obtained with (21).
The rule schema (22) canbe compared to an alggrithm for generating anyl by choosing the number one of the grammars Gcfof iterations.There exists a set of structures in naturallanguage which cannot be described by the meth-ods developed until now, namely those containingeither respectivement, or the distributives quior selon que:(23)a Les rats des groupes Aet  B rSussissentet $chouent dans les labyrinthes L aetLb, respectivement.b Les reporteurs ont parle qui aux minis-tres, qui aux d~l$gu~s, qui aux d~put~a.c Selon que tu es pauvre, bourgeois ouaristocrate, tu seras ouvrier, commer-gant ou patron.Although these strings cannot be generated by aCF grammar?
, a procedure is nevertheless avail-?--The applicability-~f this argument to thelinguistic case is not quite as simple as thisbrief formulation of the argument might lead oneto suppose, in the way it is generally used indiscussing sentences with respectivement.
It isonly the language containing just the sentences(23), and only those, that cannot be generatedby a CF grammar.
However, in order for this con-clusion to apply to the generation of the entireFrench language by a CF grammar, it must beshown that there exists no sublanguage of Frenchcontaining these sentences in respectivement asa subset that can be generated by a CF grammar.Cf.
Gross II (?8.1) for this argument.able for including this type of sentence in theCF approximation under discussion here.I add Kleene rules to the grammar, and acondition on these rules, as follows:(24)a N s (et Ns)* V N o (et No)*b N s (et N )* V (et V)* N (et No)* s oThese rules contain all common conjunctions ofsubject, verbs and direct object.
Moreover, theycover the sequences of classes observed in sen-tences containing respectivement.
They don't havethe structure one would like to associate withsuch sentences.
In order to describe the respec-tivement sentences, I add the following conditionto the starred parentheses: the number of itera-tions of each occurrence of the star is the same;and a structure, or rule of interpretation, isimposed on the starred groups, as follows:1 I , No (etINo), (25) N s (et Ns)* V (et V)This grouping pairs the N s and the N o that are tobe associated with each other via respectivement;(25) is equivalent to:(26) N 1 et N 2 .. V 1 et V 2 .. N 1 et N 2S S 0 0Thus, I am interpreting (25) as a sentence con-junction: N 1V  1N 1 ~ ~2 ~2 M2 ~ requir- O ~ L~S v ~0 ~ " " " ~ ased by the adverb respeetivement.?5.
ConclusionsThe methods I have sketched here can certa-inly be applied to other natural languages andwill account in a natural way for the generalphenomena of verbal selection rules in embeddedsentences.
One may wonder why this work has notbeen carried out before.Historically, attacks against the adequacyof CF grammar for describing natural languagearose at a moment when it was necessary to ex-plore the nature of the transformational grammarjust proposed.
This new style of grammar seemedso much better adapted than CF phrase structuregrammars to explaining sentence relations thatany more effort towards developing a detailed CFgrammar seemed fruitless.
To discourage such ef-forts, Chomsky 5 (chap.
5) declared that "any gra-mmar that can be constructed in terms of thistheory \[CF phrase structure grammar\] will be ex-tremely complex, ad hoc and 'unrevealing'".
Theseremarks were reaffirmed (Chomsky 8) and bolsteredby an argumentation based on the inherent inade-quacy of CF grammar for describing verbal selec-tion rules.A second criticism arose from the analysisof constructions, like respectivement, whose de-scription could not be obtained within the strictframework of a CF grammar.
We have seen abovethat such a statement is at best unclear.
It maybe correct that a mathematically rigorous descr-iption of this construction is not possible in a43 ...strict CF grammar; even so, we are under no obli-gation to transfer this observation bodily to thedomain of linguistics.
The type of descriptionthat I elaborated above, in which a rule of in-terpretation is added to a rule generating theform of sentences containing respectivement, isnow used in recent work in generative semantics.Moreover, it can be seen that the CF gramm-ar presented here is but a short step removedfrom a transformational grammar.
In all trans-formational theories, a transformation includes(among other things) a relation between senten-ces.
Most authors also include operations thatdeform one sentence into another, or which modifyan abstract structure so as to derive sentencesfrom it.
The CF grammar I have proposed containsthe information that establishes relationshipsbetween sentences, but it does not contain theoperations or the metalinguistic assertions thatmake the transformation explicit.
By a small ex-tension of the CF framework I can also obtain theequivalent of a transformation, as follows.
As anexample, I consider the passive transformation.The passive transformation consists in mat-ching an active phrase with its passive counter-part.
The statement of the transformation canstop there, as does Harris 'I~, or one can add thespecification of the computer operations neededto create the active and passive trees, as ingenerative grammar.
In the CF grammar presentedhere, I have two independent rules, one for theactive form, and another for the passive of thefirst:(27)a Sac t ?
NP s t V 2 NP ob Spa s ?
NP o t ~tre V2~ (par NP s)Each of these rules has an independent set of se-lection rules that are expressed in the choice ofthe N" for the NP.
Adding these selection rules,(27) becomes:(28)a Sac t ~ NP s t V 2 NP o ; NP s ?
N~; NP o ?
N ib Spa s ?
NP o t ~tre Vi~ (par NPs) ;NP o ?
N i ; NP s ?
N~This is of course a wasteful repetition ofidentical selection rules.
It was just to avoidthis kind of useless duplication that justifiedthe introduction of transformations.
Suppose nowthat I factor ize the selection rules from a setof forms that constitute an equivalence class,for example, from the 'active' and the 'passive'forms; I place a separator p between the formsof the equivalence class:(29) S ?
NP s t V 2 NPo/p/ NP o t ~tre V2~ (parNPs)/p/ I1 t ~tre V2e NP o (par NPs);+ N~ " NP o + N\] NP sIn this formulation, the selection rules are nolonger duplicated; moreover, we can interpret theseparator p between the members of the equival-ence class as indicating a relation between thesentence schemas so separated.
The factorizationof the selection rules, together with the intro-duction of the separator can be read as the def-inition of a transformational rule between thesentence schemata.Of course, rule (29) is no longer CF, but itrepresents a rather natural extension of the CFframework which makes the latter much more simi-lar to a transformational grammar than one mighthave thought possible up til now.
However, thereader will note that the concept of a transfor-mation is indispensable as a tool for the const-ruction of this CF grammar, and then for its ex-tension towards a transformational grammar bymeans of the factorization of selection rules.Furthermore, this CF grammar does not generatethe sentences of the language 'weakly', in themeaning given this word by Chomsky; in fact, itprovides them an 'adequate' grammatical structureas well as a linguistically justifiable relation-ship to other sentences of the language.Finally, let us note that although the en-tire set of rules of the CF grammar proposed hereis large (of the order of 109 rules), it is none-theless finite.
Furthermore, the size of the gra-mmar is of no theoretical consequence, since itcould be stored quite handily, not in some staticmemory (e.g., a pile of discs), but in a dynamicform (that is, in the form of schemata) whereeach rule is generated at the moment when theprogram of syntactic analysis (or generation) re-quires it.
In this way, the set of rules would bereduced to a series of sub-programs that can ge-nerate either one rule, or a sub-set of rules, orall the rules.
During analysis or generation, acall for rules would activate their synthesis bythe appropriate sub-program.Such a program of analysis by synthesis re-duces the number of rules to a smaller number ofsub-programs, but a string grammar reduces themstill more, down to a set of about 150 strings(the rewrite rules) together with about 200 re-strictions (the CS portions attached to the CFrules).The size of the CF grammar required to de-scribe selection rules adequately also explainswhy all attempts at automatic syntactic analysisby means of strictly CF grammars undertaken untilnow have failed.
The authors of these CF grammarslimited their effort to including some rudiment-ary linguistic facts; the average size of thissort of CF grammar was of the order of severalthousand rules (cf.
Kunolg,20).
Under these con-ditions, there was no question of providing onlylinguistically acceptable analyses.
However, inthe last few years, other CS variants of a CFgrammar have been proposed, and partly workedout.
In particular, the augmented transition net-work grammar of Bobrow & Fraser 2, especially inthe form given it by Woods 28, has predicates as-sociated with the transitions, predicates thatare so many context-sensitive tests.
This kind of44-grammar is then quite similar to string grammar,i.e., to a CF grammar together with CS condi-tions on the rules.
Unfortunately, none of thegrammars based on the ideas of Bobrow and Woodshas been worked out in sufficient detail to makea linguistic comparison with string grammar pos-sible.BIBLIOGRAPHYI.
Bar-Hillel & Shamir,E., 1960.
Finite-StateLanguages, in Language & Information, New York,Addison-Wesley, (1964).2.
Bobrow, D. & Fraser, B., 1969.
An augmentedstate transition network analysis procedure,Proc.
of the International Joint Conference onArtificial Intelligence.3.
Boons, J.-P., Guillet, A.
& Leclere, C.,1976.
Classes de constructions transitives, Rap-port de Recherche N ?
6, L.A.D.L., Univ, de Paris7, Place Jussieu, Paris4.
Chomsky, N., 1955.
The logical structure oflinguistic theory, New York, Plenum (1975).5.
- -  1957.
Syntactic Structures, The HagueMouton6.
- -  1963.
Formal properties of grammars,in Handbook of Mathematical Psychology, Vol.
2,New York, John Wiley7.
- -  1965.
Aspects of the theory of syntax,Boston, MIT Press8.
- -  1966.
Topics in the theory of genera-tive grammar, in Current ~ends in Linguistics,Vol.
3, The Hague, Mouton9.
Chomsky, N. & Sch~tzenberger, M., 1963.
Thealgebraic theory of context-free languages, inComputer Progra~ning and Formal Systems, Amster-dam, North-Holland10.
Gross, M., 1968.
Grammaire transformation-nelle du frangais: le verbe, Paris, LarousseII.
- -  1972.
Mathematical Models in Linguis-tics, New Jersey, Prentice-Hall12.
- -  1975.
M~thodes en Syntaxe, Paris, Her-mann13.
Harman, G., 1963.
Generative grammars with-out transformation rules: a defense of phrasestructure, Language, Vol.
39, N ?
4.14.
Harris, Z.
1952.
Discourse analysis, Langu-age, Vol.
28, N ?
1J5.
- -  \]962.
String analysis of sentence str-ucture, The Hague, MoutonJ6.
- -  1964.
The elementary transformations,in Harris, 1970, Papers in structural and trans-formational linguistics, Dordrecht, Reidel17.
1968.
Mathematical structures of lan-guage, New York, John Wiley18.
Joshi & Levy, \]977.
Constraints on structur-al descriptions: local transformations, SIAM J.of Computing, Vol.
6, N o 219.
Kuno, S., 1963.
The multiple-path syntacticanalyzer for English, Report N ?
NSF-9, Computa-tion laboratory, Harvard, Boston.20.
- -  1965.
The predictive analyzer and apath elimination technique, Comm.
of the Assn.for Comp.
Mach., Vol 8, p. 45321.
Peters, S. & Ritchie, R., 1969.
Context-Sen-sitive immediate constituent analysis, Proc.
ofthe ACMSymposium on 'Theory of Computing', NewYork, ACM22.
Postal, P., 1964.
Limitations of phrase str-ucture grammars, in The structure of language,ed.
by Fodor & Katz, New Jersey, Prentice-Hall.23.
Sager, N., 1973.
The string parser for sci-entific literature, in Natural Language Proc-essing, ed.
by R. Rustin, New York, AlgorithmicsPress.24.
Salkoff, M., 1973.
Une grammaire en cha~nedu frangais, Paris, Dunod25.
- -  1979.
Analyse syntaxique du frangais:grammaire en cha~ne, Amsterdam, J. Benjamins26.
Woods, W., 1970.
Transition network grammarsfor natural language analysis, Comm.
of the Assn.for Comp.
Mach., Vol.
13, p. 591*I should like to thank M. Gross for manyhelpful comments, and myself for an excellenttyping job.45 ?
