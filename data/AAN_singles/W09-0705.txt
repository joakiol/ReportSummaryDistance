Proceedings of the EACL 2009 Workshop on Language Technologies for African Languages ?
AfLaT 2009, pages 32?37,Athens, Greece, 31 March 2009. c?2009 Association for Computational LinguisticsUsing Technology Transfer to Advance Automatic Lemmatisation forSetswanaHendrik J. GroenewaldCentre for Text Technology (CTexT)North-West UniversityPotchefstroom 2531, South Africahandre.groenewald@nwu.ac.zaAbstractSouth  African languages  (and  indigenousAfrican languages in general) lag behind otherlanguages  in terms of  the availability of  lin-guistic  resources.
Efforts  to  improve or  fast-track the development of linguistic resourcesare required to bridge this ever-increasing gap.In this paper we emphasize the advantages oftechnology transfer between two languages toadvance  an  existing  linguistic  technology/re-source.
The advantages of technology transferare  illustrated  by  showing  how  an  existinglemmatiser for Setswana can be improved byapplying a methodology that was first used inthe  development  of  a  lemmatiser  forAfrikaans.1 IntroductionSouth  Africa  has  eleven  official  languages.
Ofthese eleven languages, English is the only lan-guage for which ample HLT resources exist.
Therest  of  the  languages  can  be  classified  as  so-called  ?resource  scarce  languages?,  i.e.
lan-guages  for  which  few  digital  resources  exist.However,  this  situation  is  changing,  since  re-search in the field of Human Language Techno-logy (HLT) has enjoyed rapid growth in the pastfew years, with the support of the South AfricanGovernment.
Part of this development is a strongfocus on the development of core linguistic re-sources  and  technologies.
One  such  a  techno-logy/resource is a lemmatiser.The focus of this article is on how technologytransfer between two languages can help to im-prove and fast track the development of an exist-ing linguistic resource.
This is illustrated in theway that an existing lemmatiser for Setswana isimproved by applying the method that was firstused  in  the  development  of  a  lemmatiser  forAfrikaans.The rest of this paper is organised as follows:The  next  section  provides  general  introductoryinformation  about  lemmatisation.
Section  3provides  specific  information  about  lemmatisa-tion  and  the  concept  of  a  lemma  in  Setswana.Section 4 describes previous work on lemmatisa-tion in Afrikaans.
Section 5 gives an overview ofmemory  based  learning  (the  machine  learningtechniques used in this study) and the generic ar-chitecture developed for machine learning basedlemmatisation.
Data  requirements  and  the  datapreparation process  are  discussed in  Section 6.The implementation of a machine learning basedlemmatiser for Setswana is explained in Section7, while some concluding remarks and future dir-ections are provided in Section 8.2 LemmatisationAutomatic  Lemmatisation  is  an  important  pro-cess  for  many  applications  of  text  mining  andnatural language processing (NLP) (Plisson et al2004).
Within the context of this research, lem-matisation is defined as a simplified process ofmorphological  analysis  (Daelemans  and  Strik,2002),  through which  the  inflected  forms  of  aword are converted/normalised under the lemmaor base-form.For  example,  the  grouping  of  the  inflectedforms 'swim',  'swimming'  and 'swam'  under thebase-form 'swim' is seen as an instance of lem-matisation.
The last part of this definition appliesto this research, as the emphasis is on recoveringthe  base-form  from  the  inflected  form  of  theword.
The base-form or  lemma  is  the  simplestform of a word as it would appear as headwordin a dictionary (Erjavec and D?eroski, 2004).Lemmatisation should, however, not be con-fused with stemming.
Stemming  is  the  processwhereby a word is reduced to its stem by the re-moval  of  both  inflectional  and  derivationalmorphemes (Plisson et al 2004).
Stemming canthus be viewed as a "greedier" process than lem-matisation,  because a  larger  number  of  morph-32emes are removed by stemming than lemmatisa-tion.
Given  this  general  background,  it  wouldtherefore  be  necessary  to  have  a  clear  under-standing of the inflectional affixes to be removedduring the process of lemmatisation for a particu-lar language.There are essentially two approaches that canbe followed in the development of lemmatisers,namely a rule-based approach (Porter, 1980) or astatistically/data-driven  approach  (Chrupala,2006).
The rule-based approach is  a traditionalmethod  for  stemming/lemmatisation  (i.e.
affixstripping)  (Porter  1980;  Gaustad  and  Bouma,2002)  and  entails  the  use  of  language-specificrules to identify the base-forms (i.e.
lemmas) ofword forms.3 Lemmatisation in SetswanaThe first automatic lemmatiser for Setswana wasdeveloped by Brits (2006).
As previously men-tioned, one of the most important aspects of de-veloping  a  lemmatiser  in  any  language  is  todefine the inflectional affixes that need to be re-moved during the  transformation from the sur-face form to the lemma of a particular word.
Inresponse to this question, Brits (2006) found thatonly stems (and not roots) can act independentlyas words and therefore suggests that only stemsshould be accepted as lemmas in the context ofautomatic lemmatisation for Setswana.Setswana has seven different parts of speech.Brits  (2006)  indicated  that  five  of  these  sevenclasses cannot be extended by means of regularmorphological  processes.
The  remaining  twoclasses, namely nouns and verbs, require the im-plementation of alternation rules to determine thelemma.
Brits (2006) formalized rules for the al-terations and implemented these rules as regularexpressions in FSA 6 (Van Noord, 2002), to cre-ate  finite  state  transducers.
These  finite  statetransducers generated C++ code that was used toimplement  the  Setswana lemmatiser.
This  lem-matiser achieved a linguistic accuracy figure of62,17%, when evaluated on an evaluation subsetof 295 randomly selected Setswana words.
Lin-guistic accuracy is defined as the percentage ofwords  in  the  evaluation  set  that  was  correctlylemmatised.4 Lia: Lemmatiser for AfrikaansIn 2003,  a rule-based lemmatiser  for  Afrikaans(called  Ragel  ?
?Re?lgebaseerde  AfrikaanseGrondwoord- en Lemma-identifiseerder?)
[Rule-Based Root and Lemma Identifier for Afrikaans]was  developed  at  the  North-West  University(RAGEL, 2003).
Ragel  was developed by usingtraditional methods for stemming/lemmatisation(i.e.
affix  stripping)  (Porter,  1980;  Kraaij  andPohlmann, 1994) and consists of  language-spe-cific rules for identifying lemmas.
Although noformal evaluation of  Ragel  was done, it ob-tained  a  disappointing  linguistic  accuracyfigure of only 67% in an evaluation on a ran-dom 1,000 word data set of complex words.This  disappointing  result  motivated  the  de-velopment  of  another  lemmatiser  forAfrikaans.This ?new?
lemmatiser (named Lia ?
?Lemma-identifiseerder  vir  Afrikaans?
[Lemmatiser  forAfrikaans])  was  developed  by  Groenewald(2006).
The difference between Ragel and Lia isthat Lia was developed by using a so-called datadriven machine learning method.
Machine learn-ing requires large amounts of annotated data.
Forthis  purpose,  a  data  set  consisting  of  73,000lemma-annotated  words  were  developed.
Liaachieves  a  linguistic  accuracy figure  of  92,8%when trained on this  data  set.
This  result  con-firms that the machine learning based approachoutperforms the rule-based approach for lemmat-isation in Afrikaans.The increased linguistic accuracy figure ob-tained with the machine learning based approachmotivated  the  research  presented  in  this  paper.Since  Ragel and  the  rule-based  Setswana  lem-matiser obtained comparable linguistic accuracyfigures, the question arises whether the applica-tion  of  machine  learning  techniques,  togetherwith the methodology and architecture developedfor  Lia,  can also be utilised to improve on thelinguistic  accuracy figure  obtained  by  the  Set-swana rule-based lemmatiser.5 Methodology5.1 Memory Based LearningMemory  based  learning  (Aha  et  al,  1991)  isbased  on  the  classical  k-NN  classification  al-gorithm.
k-NN has become known as a powerfulpattern classification algorithm (Daelemans et al2007), and is considered the most basic instance-based algorithm.
The assumption here is that allinstances  of  a  certain  problem  correspond  topoints  in  the  n-dimensional  space  (Aha  et  al,1991).
The  nearest  neighbours  of  a  certain  in-stance are computed using some form of distancemetric (X,Y).
This is done by assigning the mostfrequent  category within the found set  of  most33similar example(s) (the  k-nearest neighbours) asthe category of the new test example.
In case of atie amongst categories, a tie-breaking resolutionmethod is used.The memory based learning system on whichLia is based, is called TiMBL (Tilburg Memory-Based  Learner).
TiMBL  was  specifically  de-veloped with NLP tasks in mind,  but it can beused successfully for classification tasks in otherdomains as well (Daelemans et al 2007).5.2 ArchitectureStartChooseAlgorithmComputeStatistics onTraining DataStore Data inMemoryClassifyEvaluationDataGenerateLemmaLemmaEvaluationDataTrainingDataProcessDecisionDataKeyFigure 1.
Generic Architecture of the MachineLearning Based Lemmatiser.The architecture presented in this subsection wasfirst developed and implemented for Lia, the ma-chine learning based lemmatiser  for  Afrikaans.This same architecture was used for the develop-ment of the machine learning based lemmatiserfor Setswana.
The first step in this ?generic?
ar-chitecture  consists  of  training  the  system withdata.
During this phase, the training data is ex-amined  and  various  statistical  calculations  arecomputed that aid the system during classifica-tion.
This training data is then stored in memoryas sets of data points.
The evaluation instance(s)are then presented to the system and their class iscomputed  by  interpolation  to  the  stored  datapoints according to the selected algorithm and al-gorithm parameters.
The last step in the processconsists of generating the correct lemma(s) of theevaluation instance(s), according to the class thatwas  awarded  during  the  classification  process.The generic architecture of the machine learningbased lemmatiser is illustrated in Figure 1.6 Data6.1 Data SizeA  negative  aspect  of  the  Machine  Learningmethod  for  developing  a  lemmatiser  is  that  alarge amount of lemma-annotated training data isrequired.
Currently, there is  a data set availablethat  contains  only  2,947  lemma-annotated  Set-swana words.
This is the evaluation data set con-structed by Brits (2006) to evaluate the perform-ance of the rule-based Setswana lemmatiser.
Adata set of 2,947 words is considered to be verysmall in machine learning terms.6.2 Data PreparationMemory based learning requires that lemmatisa-tion be performed  as  a  classification task.
Thetraining data should therefore consist of featurevectors  with  assigned  class  labels  (Chrupala,2006).
The feature vectors for each instance con-sist of the letters of the inflected word.
The classlabels contain the information required to trans-form the involved word form from the inflectedform to the lemma.The class labels are automatically derived bydetermining the character string (and the positionthereof) to be removed and the possible replace-ment string during the transformation from word-form to lemma.
This is determined by firstly ob-taining  the  longest  common  substring  betweenthe  inflected  word  and  the  manually  identifiedlemma.
Once  the  longest  common  substring  isknown, a comparison of the remaining strings inthe inflected word form and the lemma indicatesthe strings that need to be removed (as well asthe  possible  replacement  strings)  during  thetransformation  from word form to lemma.
Thepositions of  the character string to be removedare annotated as L (left) or R (right).If a word-form and its lemma are identical, theclass  awarded  will  be  ?0?,  denoting  that  theword should be left in the same form.
This an-notation  scheme  yields  classes  like  in  columnfour of Table 1.34Inflected Word-Form Manually IdentifiedLemmaLongest CommonSubstringAutomaticallyDerived Classmatlhwao letlhwao hwao Lma>lemenoganya menoga menoga Rya>itebatsa lebala ba Lit>lRtsa>laTable 1.
Data Preparation and Classes.For  example,  Table  1  shows  that  the  class  of?matlhwao?
is  Lma>le.
This  means  that  thestring ?ma?
needs to  be replaced by the string?le?
(at the left hand side of the word) during thetransformation  from the inflected form ?matlh-wao?
to the lemma  ?letlhwao?.
Accordingly, theclass of the word ?menoganya?
is  Rya>, denot-ing  the  string  ?ya?
should  be  removed  at  theright-hand side of the inflected form during lem-matisation.
In this particular case, there is no re-placement string.
Some words like ?itebatsa?
un-dergo  alterations  to  both  sides  of  the  inflectedform  during  lemmatisation.
The  classLit>lRtsa>la indicates that  the string ?it?
mustbe replaced at the left-hand side of the word withthe letter ?l?, while the string ?tsa?
should be re-placed with the string ?la?
at the right-hand sideof the word.An example of the training of data of the lem-matiser is shown in Figure 2.
The data is presen-ted  in  C4.5  format  (Quinlan,  1993)  to  thememory  based  learning  algorithm,  where  eachfeature is separated by a comma.
The algorithmrequires that every instance must have the samenumber  of  features.
In order to achieve this,  itwas decided that each instance should contain 20features.
20 features were chosen, since less than1% of the words in the data contained more than20 letters.
All instances were formatted to con-tain  20  features  by  adding  underscores  to  thewords that contained less than 20 features.
Theresult of this process is displayed in Figure 2._,_,_,_,_,_,_,_,_,_,t,s,o,g,a,t,s,o,g,a,0_,_,_,_,_,_,_,_,_,_,e,d,i,m,o,l,a,n,y,a,Rnya>_,_,_,_,_,_,_,_,_,_,_,_,_,d,i,n,y,e,p,o,Ldi>_,_,_,_,_,_,_,_,_,_,t,s,i,s,e,d,i,t,s,e,Ltsisedi>Rse>laFigure 2.
Training Data in C4.5 Format.7 ImplementationEach of the 2,947 lemma-annotated words in theevaluation data of the rule-based Setswana lem-matiser was formatted in C4.5 format.
The datawas then split up further into a training data set,consisting of 90% of all the data, with an evalu-ation set consisting of 10% of all the data.
A ma-chine learning based lemmatiser was trained (byutilising  default  parameter  settings)  and  evalu-ated with these two datasets.
This lemmatiser ob-tained an accuracy figure of  46.25%.
This is  adisappointing result  when compared to  the lin-guistic accuracy figure of 62.71% obtained withthe rule-based Setswana lemmatiser when  evalu-ated on the same data set.
Algorithmic parameteroptimisation  with  PSearch (Groenewald,  2008)resulted  in  an  improved  accuracy  figure  of58.98%.
This represents an increase of 12.73%,but is still less than the accuracy figure obtainedby the rule-based lemmatiser.Error analysis indicated that in some cases theclass  predicted  by  TiMBL  is  conspicuouslywrong.
This is evident from instances shown inTable  2,  where  the  assigned  classes  containstrings  that  need  to  be  removed  that  is  notpresent in the inflected forms.InflectedWordCorrect Class Assigned Classtlamparele Re>a Lmm>bRele>aphologileng Rileng>a Regileng>aTable 2.
Instances with Incorrectly AssignedClasses.InflectedWordAssigned Class Class Distributiontlamparele Lmm>bRele>a0 0.934098Re>a 1.82317Rele>a 0.914829Lmm>bRele>a1.96103phologilengRegileng>a Rileng>a 3.00014 Relang>a 1.24030Regileng>a 4.20346Table 3.
Instances Containing Additional ClassDistribution Information.For example, the class assigned to the second in-stance in Table 2, is Regileng>a.
This means thatthe  string ?egileng?
must  be  replaced with the35character ?a?
at the right-hand side of the word.However, the inflected word ?phologileng?
doesnot  contain  the  string  ?egileng?,  which  meansthat  the  assigned  class  is  sure  to  be  incorrect.This  problem  was  overcome  by  utilizing  theTiMBL option (+v db) that adds class distribu-tion  in  the  nearest  neighbour  set  to  the  outputfile.
The result of this is an additional output thatcontains the class distribution information shownin  Table  3.
The  class  distribution  informationcontains the nearest classes with their associateddistances from the involved evaluation instance.A post-processing script that automatically re-cognises  this  type  of  incorrectly assigned classand replaces the incorrect class with the secondmost likely class (according to the class distribu-tion) was developed.
The result of this was a fur-ther increase in accuracy to 64.06%.
A summaryof the obtained results is displayed in Table 4.Method LinguisticAccuracyRule-based 62.17%Machine Learning with de-fault parameter settings46.25%Machine Learning with op-timised parameter settings58.9%Machine Learning with op-timised parameter settingsand class distributions64.06%.Table 4.
Summary of Results.8 ConclusionThe best results obtained by the machine learn-ing based Setswana lemmatiser was a linguisticaccuracy figure of 64.06%.
This represents an in-crease of 1.9% on the accuracy figure obtainedby the rule-based lemmatiser.
This seems to be asmall  increase  in  accuracy  compared  to  the25.8% increase obtained when using a machinelearning based method for Afrikaans lemmatisa-tion.
The  significance  of  this  result  becomesevident when considering the fact that it was ob-tained  by  training  the  machine  learning  basedSetswana  lemmatiser  with  a  training  data  setconsisting of only 2,652 instances.
This data setis very small in comparison with the 73,000 in-stances contained in the training data of Lia.The linguistic accuracy figure of 64.06% further-more  indicates  that  a  machine  learning  basedlemmatiser for Setswana that yields better resultsthan a rule-based lemmatiser  can be developedwith a relatively small data set.
We are confidentthat  further increases in the linguistic accuracyfigure will be obtained by enlarging the trainingdata  set.
Future  work  will  therefore  entail  theemployment  of  bootstrapping techniques to an-notate more training data for improving the lin-guistic accuracy of the machine learning basedSetswana lemmatiser.The  most  important  result  of  the  researchpresented in this paper is, however, that existingmethodologies  and  research  can  be  applied  tofast-track the development of linguistic resourcesor  improve  existing linguistic  resources  for  re-source-scarce  languages,  a  result  that  is  espe-cially significant in the African context.AcknowledgmentsThe author wishes to acknowledge the work ofJeanetta H. Brits,  performed under the supervi-sion  of  Rigardt  Pretorius  and  Gerhard  B.  vanHuyssteen,  on  developing  the  first  automaticlemmatiser for Setswana.ReferencesDavid W. Aha,  Dennis  Kibler  and Marc  K. Albert.1991.
Instance-Based  Learning  Algorithms.
Ma-chine Learning,  6:37-66.Jeanetta  H.  Brits.
2006.
Outomatiese  SetswanaLemma-identifisering  ?Automatic  Setswana  Lem-matisation?.
Master?s  Thesis.
North-West  Uni-versity, Potchefstroom, South Africa.Gregorz Chrupala.
2006.
Simple  Data-Driven  Con-text-Sensitive  Lemmatization.
Proceedings  ofSEPLN 2006.Walter  Daelemans,  Antal  Van  den  Bosch,  JakubZavrel  and  Ko  Van  der  Sloot.
2007.
TiMBL:Tilburg MemoryBased Learner.
Version 6.1, Ref-erence Guide.
ILK Technical Report 07-03.Walter Daelemans and Helmer Strik.
2002.
ActieplanVoor Het Nederlands in de Taal- en Spraaktechno-logie:  Prioriteiten  Voor  Basisvoorzieningen.Report for the Nederlandse Taalunie.
NederlandseTaalunie.Toma?
Erjavec  and  Saso  D?eroski.
2004.
MachineLearning  of  Morphosyntactic  Structure:  Lemmat-ising Unknown Slovene Words.
Applied ArtificialIntelligence, 18(1):17-40.Tanja  Gaustad  and  Gosse  Bouma.
2002.
AccurateStemming  of  Dutch  for  Text  Classification.Language and Computers, 45 (1):104-117.Hendrik J. Groenewald.
2007.
Automatic Lemmatisa-tion  for  Afrikaans.
Master?s  Thesis.
North-WestUniversity, Potchefstroom, South Africa.36Hendrik J. Groenewald.
2008.
PSearch 1.0.0.
North-West University, Potchefstroom, South Africa.Wessel  Kraaij  and  Renee  Pohlmann.
1994.
Porter?sStemming  Algorithm  for  Dutch.Informatiewetenschap  1994:  Wetenschaplikebijdraen  aan  de  derde  STINFON  Conferentie.1(1):167-180.Joel Plisson, Nada Lavrac and Dunja Mladeni?.
2004.A Rule-based Approach to Word Lemmatization.Proceedings C of the 7th International Multi-Con-ference Information Society IS 2004, 1(1):83-86.Martin Porter.
1980.
An Algorithm for Suffix Strip-ping.
Program, 14 (3):130-137.John R. Quinlan.
1993.
C4.5: Programs for MachineLearning.
Morgan Kaufmann, San Mateo, USA.RAGEL.
2003.
Re?lgebaseerde  AfrikaanseGrondwoord-  En  Lemma-identifiseerder  'Rule-based  Afrikaans  Stemmer  and  Lemmatiser.http://www.puk.ac.za/opencms/export/PUK/html/fakulteite/lettere/ctext/ragel.html.>  11  January2009.Gertjan Van Noord.
2002.
Finite State Utilities.< http://www.let.rug.nl/~vannoord/Fsa/>.12 January 2009.37
