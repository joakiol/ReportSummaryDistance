Two Sources  o f  Cont ro l  over  the  Generat ion  o f  So f twareIns t ruct ions*Anthony  Hart leyLanguage Cent reUn ivers i ty  of Br ighton ,  Fa lmerBr ighton  BN1 9PH,  UKafh@it ri.
bton.
ac .
ukC6ci le  Par i s  tIn fo rmat ion  Techno logy  Research  Ins t i tu teUn ivers i ty  of  Br ighton ,  Lewes RoadBr ighton  BN2 4AT,  UKclp@itri, brighton, ac.
uk1 I n t roduct ionOur work addresses the generation of software manu-als in French and English, starting from a semanticmodel of the task to be documented (Paris et al,1995).
Our prime concern is to be able to exercisecontrol over the mapping from the task model to thegenerated text.
We set out to establish whether thetask model Mone is sufficient o control the linguis-tic output of a text generation system, or whetheradditional control is required.
In this event, an ob-vious source to explore is the communicative pur-pose of the author, which is not necessarily constantthroughout a manuM.
Indeed, in a typical softwaremanual, it is possible to distinguish at least threesections, each with a different purpose: a tutorialcontaining exercises for new users, a series of step-by-step instructions for the major tasks to be ac-complished, and a ready-reference summary of thecommands.We need, therefore, to characterise the linguis-tic expressions of the different elements of the taskmodel, and to establish whether these expressionsare sensitive or not to their context, that is, thefunctional section in which they appear.
This pa-per presents the results of an analysis we conductedto this end on a corpus of software instructions inFrench.2 Methodo logyThe methodology we employed is similar to that en-dorsed by (Biber, 1995).
It is summarised as follows:1.
Collect the texts and note their situational char-acteristics.
We consider two such character-* This work is partially supported by the Engineeringand Physical Sciences Research Council (EPSRC) GrantJ19221, by BC/DAAD ARC Project 293, by the Commis-sion of the European Union Grant LRE-62009, and bythe Office of Naval Research Grant N00014-96-1-0465.t Starting this fall, Dr. Paris' address will be CSIRO,Division of Information Technology, Sydney Laboratory,Building E6B, Macquarie University Campus, NorthRyde, Sydney, NSW 2113, Australia.istics: task structure and communicative pur-pose.2.
Identify the range of linguistic features to beincluded in the analysis;3.
Code the corpus in terms of the selected fea-tures;4.
Compute the frequency count of each linguisticfeature;5.
Identify co-occurrences between linguistic fea-tures and the situational characteristics underconsideration.We first carried out a classical sublanguage analy-sis on our corpus as a whole, without differentiatingbetween any of the situational characteristics (Hart-ley and Paris, 1995).
This initial description wasnecessary to give us a clear statement of the lin-guistic potentiM required of our text generator, towhich we could relate any restrictions on languageimposed by situational variables.
Thus we can ac-count for language restrictions by appealing to gen-eral discourse principles, in keeping with the recom-mendations of (Kittredge, 1995) and (Biber, 1995)for the definition of sublanguages.We then correlated task elements with grammati-cM features.
Finally, where linguistic realisation wasunder-determined by task structure alone, we estab-lished whether the communicative purpose providedmore discriminating control over the linguistic re-sources available.3 L ingu is t i c  F ramework :  SystemicFunct iona l  L ingu is t i csOur analysis was carried out within the frameworkof Systemic-Functional Linguistics (SFL) (Halliday,1978; Halliday, 1985) which views language as a re-source for the creation of meaning.
SFL stratifiesmeaning into context and language.
The strata ofthe linguistic resources are organised into networksof choices, each choice resulting in a different mean-ing realised (i.e., expressed) by appropriate struc-tures.
The emphasis is on paradigmatic choices, asopposed to syntagma~ic structures.
Choices made in192each stratum constrain the choices available in thestratum beneath.
Context hus constrains language.This framework was chosen for several reasons.First, the organisation of linguistic resources accord-ing to this principle is well-suited to natural lan-guage generation, where the starting point is nec-essarily a communicative goal, and the task is tofind the most appropriate xpression for the in-tended meaning (Matthiessen and Bateman, 1991).Second, a functional perspective offers an advan-tage for multilingual text generation, because of itsability to achieve a level of linguistic descriptionwhich holds across languages more effectively thando structurally-based accounts.
The approach asbeen shown capable of supporting the sharing of lin-guistic resources between languages as structurallydistinct as English and Japanese (Bateman et al,1991a; Bateman et at., 1991b).
It is therefore rea-sonable to expect that at least the same degree ofcommonality of description is achievable betweenEnglish and French within this framework.
Finally,KPML (Bateman, 1994), the tactical generator weemploy, is based on SFL, and it is thus appropriatefor us to characterise the corpus in terms immedi-ately applicable to our generator.4 Cod ing  featuresOur lexico-grammatical coding was done using thenetworks and features of the Nigel grammar (Hal-liday, 1985).
We focused on four main concerns,guided by previous work on instructional texts, e.g.,(Lehrberger, 1986; Plum et at., 1990; Ghadessy,1993; Kosseim and Lapalme, 1994).?
Relations between processes: to determinewhether textual cohesion was achievedthrough conjunctives or through relationsimplicit in the task structure elements.Among the features considered were clausedependency and conjunction type.?
Agency: to see whether the actor perform-ing or enabling a particular action is clearlyidentified, and whether the reader is explic-itly addressed.
We coded here for featuressuch as voice and agent types.?
Mood, modality and polarity: to find outthe extent to which actions are presentedto the reader as being desirable, possible,mandatory, or prohibited.
We coded forboth true and implicit negatives, and forboth personal and impersonal expressionsof modality.?
Process types: to see how the domain isconstrued in terms of actions on the partof the user and the software.
We coded forsub-categories of material, mental, verbaland relational processes.5 The  CorpusThe analysis was conducted on the French versionof the Macintosh MacWrite manual (Kaehler, 1983).The manual is derived from an English source by aprocess of adaptive translation (Sager, 1993), i.e.,one which loealises the text to the expectations ofthe target readership.
The fact that the translationis adaptive rather than literal gives us confidence inusing this manual for our analysis.
1 Furthermore,we know that Macintosh documentation undergoesthorough local quality control.
It certainly conformsto the principles of good documentation establishedby current research on technical documentation a don the needs of end-users, e.g., (Carroll, 1994; Ham-mond, 1994), in that it supplies clear and conciseinformation for the task at hand.
Finally, we havebeen assured by French users of the software thatthey consider this particular manual to be well writ-ten and to bear no unnatural trace of its origins.Technical manuals within a specific domain con-stitute a sublanguage, .g., (Kittredge, 1982; Sageret al, 1980).
An important defining property of asublanguage is that of closure, both lexieal and syn-tactic.
Lexical closure has been demonstrated by, forexample, (Kittredge, 1987), who shows that after asfew as the first 2000 words of a sublanguage text,the number of new word types increases little if atall.
Other work, e.g., (Biber, 1988; Biber, 1989) and(Grishman and Kittredge, 1986) illustrates the prop-erty of syntactic losure, which means that generallyavailable constructions just do not occur in this orthat sublanguage.
In the light of these results, weconsidered a corpus of 15000 words to be adequatefor our purposes, at least for an initial analysis.The MacWrite manual is organised into threechapters, corresponding to the three different sec-tions identified earlier: a tutorial, a series of step-by-step instructions for the major word-processingtasks, and a ready-reference summary of the com-mands.
We omitted the tutorial because the gen-eration of such text is not our concern, retainingthe other two chapters which provide the user withgeneric instructions for performing relevant tasks,and descriptions of the commands available withinMacWrite.
The overlap in information between thetwo chapters offers opportunities to observe differ-ences in the linguistic expressions of the same taskstructure lements in different contexts.1We would have preferred to use a manual which orig-inated in French to exclude all possibility of interfer-ence from a source language, but this proved impossi-ble.
Surprisingly, it appears that large French compa-nies often have their documents authored in English byfrancophones and subsequently translated into French.One large French software house that we contacted oesauthor its documentation in French, but had registeredconsiderable customer dissatisfaction with its quality.We decided, therefore, that their material would be un-suitable for our purposes.193Goals:Functions:Constraints:Results:Substeps:La s~lectionGloss: SelectionPour sdlectionner un mot, (faites un double-clic sur le mot)Gloss: To select a word, (do a double-click on the word)(Fermer -) Cet article permet de fermer une fen~tre activ~eGloss: (Close -)  This command enables you to close the active windowSi vous donnez ~ votre document le titre d'un document ddj~ existant, (une zone dedialogue apparait)Gloss: If you give your document the title of an existing document, (a dialog boxappears)(Choisissez Coller dans le menu Edition - ) Une copie du contenu du presse-papiers apparaitGloss: (Choose Paste from the Edit menu -) A copy of the content of the clipboard appearsFerrnez la fen@tre RechercherGloss: Close the Find windowEnsuite, on ouvre le document de destinationGloss: Next, one opens the target documentFigure 1: Examples of task element expressions6 Task  S t ructureTask structure is constituted by five types of taskelements, which we define below.
We used the no-tion of task structure lement both as a contextualfeature for the analysis and to determine the seg-mentation of the text into units.
Each unit is takento be the expression of a single task element.Our definition of the task elements i based on theconcepts and relations commonly chosen to repre-sent a task structure (a goal and its associated plan),e.g., (Fikes and Nilsson, 1971; Sacerdoti, 1977), andon related research, e.g., (Kosseim and Lapalme,1994).
Our generator produces instructions from anunderlying semantic knowledge base which uses thisrepresentation (Paris et al, 1995).
To generate aninstruction for performing a task is to chose sometask elements to be expressed and linearise them sothat they form a coherent set for a given goal theuser might have.
We distinguish the following ele-ments, and provide examples of them in Figure 1:2goals: actions that users will adopt as goals andwhich motivate the use of a plan.functions: actions that represent the functionalityof an interface object (such as a menu item).
A2The text in parentheses in the Figure is part of thelinguistic context of the task element rather than theelement i self.function is closely related to a goal, in that it isalso an action that the user may want to per-form.
However, the function is accessed throughthe interface object, and not through a plan.constraints and preconditions:states which must hold before a plan can beemployed successfully.
The domain model dis-tinguishes constraints (states which cannot beachieved through planning) and preconditions(states which can be achieved through plan-ning).
We do not make this distinction inthe linguistic analysis and regroup these relatedtask structure elements under one label.
Wedecided to proceed in this way to determine atfirst how constraints in general are expressed.Moreover, it is not always clear from the textwhich type of constraint is expressed.
Drawingtoo fine distinctions in the corpus analysis atthis point, in the absence of a test for assigninga unit to one of these constraint ypes, wouldhave rendered the results of the analysis moresubjective and thus less reliable.results:  states which arise as planned or unplannedeffects of carrying out a plan.
While it mightbe important to separate planned and un-planned effects in the underlying representa-tion, we again abstract over them in the lexico-grammatical coding.194sub-steps:  actions which contribute to the execu-tion of the plan.
If the sub-steps are not prim-itive, they can themselves be achieved throughother plans.7 The  Cod ing  ProcedureNo tools exist to automate a functional analysis oftext, which makes coding a large body of text a time-consuming task.
We first performed a detailed cod-ing of units of texts on approximately 25% of thecorpus, or about 400 units, 3 using the WAG coder(O'Donnell, 1995), a tool designed to facilitate afunctional analysis.We then used a public-domain concordance pro-gram, MonoConc (Barlow, 1994), to verify the rep-resentativeness of the results.
We enumerated therealisations of those features that the first analysishad shown as marked, and produced KWIC 4 list-ings for each set of realisations.
We found that thesecond analysis corroborated the results of the first,consistent with the nature of sublanguages.8 D is t r ibut ion  o f  Grammat ica lFeatures  over  Task  S t ructure  andCommunicat ive  PurposeWe examined the correlations between lexico-grammatical realisations and task elements and com-municative purpose.
The results are best expressedusing tables generated by WAG: given any system,WAG splits the codings into a number of sets, one foreach feature in that system.
Percentages and meansare computed, and the sets are compared statisti-cally, using the standard T-test.
WAG displays theresults with an indicator of how statistically signifi-cant a value is compared to the combined means inthe other sets.
The counts were all done using thelocal mean, that is, the feature count is divided bythe total number of codings which select that fea-ture's system.
Full definitions of the features can befound in (Halliday, 1985; Bateman et al, 1990).In some cases, the type of task element is on itsown sufficient o determine, or at least strongly con-strain, its linguistic realisation.
The limited spaceavailable here allows us to provide only a small num-ber of examples, shown in Figure 2.
We see that theuse of modals is excluded in the expression of func-tion, result and constraint, whereas goal and sub-step do admit modals.
As far as the polarity sys-tem is concerned, negation is effectively ruled outfor function, goal and substep.
Finally, with respectto the mood system, only substep can be realisedthrough imperatives.3The authors followed guidelines for identifying taskelement units which had yielded consistent results whenused by students coding other corpora.4Key Word In ContextIn other cases, however, we observe a diversity ofrealisations.
We highlight here three cases: modalityin goal, polarity in constraint, and mood in substep.In such cases, we must appeal to another source ofcontrol over the apparently available choices.
Wehave looked to the construct of genre (Martin, 1992)to provide this additional control, on two grounds:(1) since genres are distinguished by their commu-nicative purposes, we can view each of the functionalsections already identified as a distinct genre; (2)genre is presented as controlling text structure andrealisation.
In Martin's view, genre is defined as astaged, goal-oriented social process realised throughregister, the context of situation, which in turn isrealised in language to achieve the goals of a text.Genre is responsible for the selection of a text struc-ture in terms of task elements.
As part of the re-alisation process, generic choices preselect a registerassociated with particular elements of text structure,which in turn preselect lexico-grammatical features.The coding of our text in terms genre and task el-ements thus allows us to establish the role playedby genre in the realisations of the task elements.
Itwill also allow us to determine the text structuresappropriate in each genre, a study we are currentlyundertaking.
This is consistent with other accountsof text structure for text generation in technical do-mains, e.g., (McKeown, 1985; Paris, 1993; Kittredgeet al, 1991).For those cases where the realisation remainsunder-determined by the task element ype, we con-ducted a finer-grained analysis, by overlaying a genrepartition on the undifferentiated data.
We distin-guished earlier two genres with which we are con-cerned: ready-reference and step-by-step.
In themanual analysed, we recognised two more specificcommunicative purposes in the step-by-step section:to enable the reader to perform a task, and to in-crease the reader's knowledge about the task, theway to achieve it, or the properties of the systemas a whole.
Because of their distinct communica-tive purposes, we again feel justified in calling thesegenres.
We label them respectively procedure andelaboration.
The intention that the reader shouldrecognise the differences in function of each sectionis underscored by the use of distinctive typographi-cal devices, such as fonts and lay-out.
5The first step at this stage of the analysis was toestablish whether there was an effective overlap intask elements among the three genres under consid-eration.
The results of this step is shown in Figure 3.Sub-step and goal are found in all three genres, whileconstraint, result and function occur in both ready-reference and elaboration but are absent from pro-cedure.The next step was to undertake a comparative5See (Hartley and Paris, 1995) for examples extractedfrom the manuals.195Function Result Constraint Goal SubstepModal-Systemmodal 0% 1% 0% 24% 16%non-modal 100% 99% 100% 76% 84%polaritypositive 100% 90% 68% 97% 97%negative 0% 10% 32% 3% 3%mood-systemdeclarative 100% 100% 100% 100% 24%imperative 0% 0% 0% 0% 76%Figure 2: Selective realisations of task elementsReady-Reference Procedure ElaborationSub-step 37% 77% 42%Goal 11% 23% 14%Constraint 10% 0% 14%Result 23% 0% 27%Function 11% 0% 3%Figure 3: Distribution of task structure lements over genresanalysis of the lexico-grammatical features found inthe three genres.
This analysis indicated that thelanguage mployed in these different sections of thetext varies greatly.
We summarise here the twogenres that are strongly contrasted: procedure andready-reference.
Elaboration shares features withboth of these.procedure: The top-level goM of the user is ex-pressed as a nominMisation.
Actions to beachieved by the reader are almost exclusivelyreMised by imperatives, directly addressing thereader.
These actions are mostly materiM di-rected actions, and there are no causatives.
Fewmodals are employed, and, when they are, it isto express obligation impersonally.
The polar-ity of processes is always positive.
Procedureemploys mostly independent clauses, and, whenclause complexes are used, the conjunctions aremostly purpose (linking a user goal and an ac-tion) and alternative (linking two user actionsor two goals).ready-reference: In this genre, M1 task elementsare always realised through clauses.
The declar-ative mood predominates, with few impera-tives addressing the reader.
Virtually all thecausatives occur here.
On the dimension ofmodality, the emphasis is on personal possi-bility, rather than obligation, and on inclina-tion.
We find in this genre most of the ver-bM processes, entirely absent from procedure.Ready-reference is more weighted than proce-dure towards dependent clauses, and is partic-ularly marked by the presence of temporal con-junctions.The analysis o far demonstrates that genre, liketask structure, provides some measure of controlover the linguistic resources but that neither of thesealone is sufficient to drive a generation system.
ThefinM step was therefore to look at the realisationsof the task elements differentiated bygenre, in caseswhere the realisation was not strongly determinedby the task element.We refer the reader back to Figure 2, and theunder-constrained cases of modality in goal, polar-ity in constraint, and mood in substep.
Figure 4shows the realisations the task element goal with re-spect to the modal system, which brings into sharprelief the absence of modality from procedure.
Fig-ure 5 presents the reaiisations by genre of the po-larity system for constraint.
We observe that onlypositive polarity occurs in ready-reference.
Finally,we note from Figure 6 that the realisation of sub-steps is heavily loaded in favour of imperatives inprocedure.These figures show that genre does indeed provideuseful additional control over the expression of taskelements, which can be exploited by a text genera-tion system.
Neither task structure nor genre aloneis sufficient o provide this control, but, taken to-gether, they offer a real prospect of adequate controlover the output of a text generator.196Non-modalModalProcedure Ready-Reference Elaboration100.0% 75.0% 72.6%0.0% 25.0% 28.4%Figure 4: Genre-related differences in the modal system for goalNegativePositiveReady-Reference Elaboration0.0% 41.7%100% 58.3%Figure 5: Genre-related differences in the polarity system for constraintImperativeDeclarativeProcedure Ready-Reference Elaboration97.3% 44.4% 77.6%2.7% 55.6% 22.4%Figure 6: Genre-related differences in the mood system for substep9 Re la ted  WorkThe results from our linguistic analysis are con-sistent with other research on sublanguages in theinstructions domain, in both French and English,e.g., (Kosseim and Lapalme, 1994; Paris and Scott,1994).
Our analysis goes beyond previous work byidentifying within the discourse context he meansfor exercising explicit control over a text generator.An interesting difference with respect o previousdescriptions i the use of the true (or direct) imper-ative to express an action in the procedure genre,as results from (Paris and Scott, 1994) seem to in-dicate that the infinitive-form of the imperative ispreferred in French.
These results, however, wereobtained from a corpus of instructions mostly fordomestic appliances as opposed to software manuals.Furthermore the use of the infinitive-form in instruc-tions in general as observed by (Kocourek, 1982) isdeclining, as some of the conventions already com-mon in English technical writing are being adoptedby French technical writers, e.g., (Timbal-Duclaux,1990).We also note that the patterns of realisations un-covered in our analysis follow the principle of goodtechnical writing practice known as the minimal-ist approach, e.g., (Carroll, 1994; Hammond, 1994).Moreover, we observe that our corpus does not ex-hibit shortcomings identified in a Systemic Func-tional analysis of English software manuals (Plumet al, 1990), such as a high incidence of agentlesspassive and a failure to distinguish the function ofinforming from that of instructing.Other work has focused on the cross-linguistic re-alisations of two specific semantic relations (gener-ation and enablement) (Delin et al, 1994; Delia etal., 1996), in a more general corpus of instructionsfor household appliances.
Our work focuses on thesingle application domain of software instructions.However, it takes into consideration the whole taskstructure and looks at the realisation of semantic el-ements as found in the knowledge base, instead oftwo semantic relations not explicitly present in theunderlying semantic model.10 Conc lus ionIn this paper we have shown how genre and taskstructure provide two essential sources of controlover the text generation process.
Genre does soby constraining the selection of the task elementsand the range of their expressions.
These elements,which are the procedural representation f the user'stasks, constitute a layer of control which mediatesbetween genre and text, but which, without genre,cannot control the grammar adequately.The work presented here is informing the devel-opment of our text generator by specifying the nec-essary coverage of the French grammar to be imple-mented, the required discourse structures, and themechanisms needed to control them.
We continueto explore further situational nd contextual factorswhich might allow a system to fully control its avail-able linguistic resources.ReferencesMichael Barlow.
1994.
A Guide to MonoConc.Athelston, Houston, TX.John A. Bateman, Robert T. Kasper, Johanna D.Moore, and Richard Whitney.
1990.
A general or-197ganization of knowledge for natural Language pro-cessing: The Penman Upper Model.
Technicalreport, USC/ISI, March.John A. Bateman, Christian M.I.M.
Matthiessen,Keizo Nanri, and Licheng Zeng.
1991a.
The re-useof linguistic resources across languages in multilin-gual generation components.
In Proceedings of the1991 International Join~ Conference on ArtificialIntelligence, Volume 2, Sydney, Australia, pages966 - 971.
Morgan Kaufmann Publishers.John A. Bateman, Christian M.I.M.
Matthiessen,Keizo Nanri, and Licheng Zeng.
1991b.
Multi-Lingual text generation: an architecture based onfunctional typology.
In International Conferenceon Current Issues in Computational Linguistics,Penang, Malaysia.John A. Bateman.
1994.
KPML: The KOMET-Penman (Multilingual) Development Environ-ment.
Technical report, Institut fiir IntegriertePublikations- und Informationssysteme (IPSI),GMD, Darmstadt, September.
Release 0.6.Douglas Biber.
1988.
Variation Across Speech andWriting.
Cambridge University Press, CambridgeUK.Douglas Biber.
1989.
A typology of English texts.Linguistics, 27:3-43.Douglas Biber.
1995.
Dimensions of Register Vari-ation: A Cross-linguistic omparison.
CambridgeUniversity Press, Cambridge UK.John Carroll.
1994.
Techniques for minimalist doc-umentation and user interface design.
In Qualityof Technical Documentation, pages 67-75.
Rodopi,Amsterdam.Judy Delin, Anthony Hartley, C@cile Paris, DoniaScott, and Keith Vander Linden.
1994.
Ex-pressing procedural relationships in multilingualinstructions.
In Proceedings of the Seventh In-ternational Workshop on Natural Language Gen-eration, Kennebunkport, MN, 21-24 June 1994,pages 61-70.Judy Delin, Donia Scott, and Anthony Hartley.1996.
Language-specific mappings from seman-tics to syntax.
In Proceedings of the 16th Interna-tional Conference on Computational Linguistics(COLING-96), Copenhagen, Denmark, August.R.
E. Fikes and Nils Nilsson.
1971.
STRIPS: a newapproach to the application of theorem provingto problem solving.
Artificial Intelligence, 2:189-208.Mohsen Ghadessy, editor.
1993.
Register Analysis:Theory and Practice.
Frances Pinter, London.Ralph Grishman and Richard Kittredge, editors.1986.
Analyzing Language in Restricted Domains.Lawrence Erlbaum Associates, Hillsdale, New Jer-sey.Michael A. K. Halliday.
1978.
Language as a SocialSemiotic: The Social Interpretation of Languageand Meaning.
Edward Arnold, London.Michael A. K. Halliday.
1985.
An Introduction toFunctional Grammar.
Edward Arnold, London.Nick Hammond.
1994.
Less is More: The Mini-malist Approach.
Usability Now!
A Guide to Us-ability.
Published by the Open University and theDepartment of Trade and Industry.Anthony Hartley and C@cile Paris.
1995.
French cor-pus analysis and grammatical description.
Techni-cal Report Project IED/4/1/5827, ITRI, Novem-ber.Carol Ka~hler.
1983.
Macintosh MacWrite.
AppleSeedrin, Les Ulis, France.Richard Kittredge, Tanya Korelsky, and Owen Ram-bow.
1991.
On the Need for Domain Commu-nication Knowledge.
Computational Intelligence,7(4):305-314, November.Richard Kittredge.
1982.
Variation and Homogene-ity of Sublanguages.
In Richard Kittredge andJ.
Lehrberger, editors, Sublanguage: Studies oflanguage in restricted semantic domains, pages107-137.
de Gruyter, Berlin and New York.Richard Kittredge.
1987.
The significance of sub-language for automatic translation.
In SergeiNirenburg, editor, Machine Translation: Theoret-ical and methodological issues, pages 59-67.
Cam-bridge University Press, London.Richard Kittredge.
1995.
Efficiency vs. Generalityin InterlinguaL Design: Some Linguistic Consid-erations.
In the Working notes of the IJCAI-95Workshop on Multilingual Text Generation, Au-gust 20-21, Montr@M, Canada.Rostislav Kocourek.
1982.
La langue frangaise dela technique t de la science.
Brandstetter Verlag,Wiesbaden, Germany.Leila Kosseim and Guy Lapalme.
1994.
Content andrhetorical status selection in instructional texts.In Proceedings of the Seventh International Work-shop on Natural Language Generation, Kenneb-unkport, MN, 21-24 June 1994, pages 53-60.John Lehrberger.
1986.
Sublanguage Analysis.
InRMph Grishman and Richard Kittredge, editors,Analyzing Language in Restricted Domains, pages19-38.
Lawrence Erlbaum Associates, Hillsdale,New Jersey.James R. Martin.
1992.
English text: systems andstructure.
Benjamins, Amsterdam.Christian M.I.M.
Matthiessen and John A. Bate-man.
1991.
Text generation and systemic-functional inguistics: experiences from Englishand Japanese.
Frances Pinter Publishers and St.Martin's Press, London and New York.198Kathleen 1%.
McKeown.
1985.
Text Generation.Cambridge University Press, New York.Michael O'Donnell.
1995.
From Corpus to Cod-ings: Semi-Automating the Acquisition of Lin-guistic Features.
Proceedings of the AAAI SpringSymposium on Empirical Methods in DiscourseInterpretation and Generation, Stanford Univer-sity, California, March 27 - 29, March.C~cile Paris and Donia Scott.
1994.
Stylistic vari-ation in multilingual instructions.
In Proceedingsof the Seventh International Workshop on Nat-ural Language Generation, Kennebunkport, MN,21-24 June 1994, pages 45 - 52.C@cile Paris, Keith Vander Linden, Markus Fischer,Anthony Hartley, Lyn Pemberton, Richard Power,and Donia Scott.
1995.
A support ool for writ-ing multilingual instructions.
In Proceedings ofthe Fourteenth International Joint Conference onArtificial Intelligence, August 20-25, Montr@al,Canada, pages 1398-1404.C~cile L. Paris.
1993.
User Modelling in Text Gen-eration.
Frances Pinter, London.Guenter A.
Plum, Christian M.I.M.
Matthiessen,Michael A.K.
Halliday, and Natalie Shea.
1990.The Electronic Discourse Analyzer Project: Re-port on Textual Analysis of FJ Manuals.
Techni-cal report, Fujitsu Australia Limited, Documen-tation Engineering Division.
EDA Project Deliv-erables; Output 7.Earl D. Sacerdoti.
1977.
A Structure for Plans andBehavior.
Elsevier, New York.Juan C. Sager, David Dungworth, and Peter F. Mc-Donald.
1980.
English Special Languages.
Brand-stetter Verlag, Wiesbaden, Germany.Juan C. Sager.
1993.
Language Engineering andTranslation: Consequences of Automation.
JohnBenjamins Publishing Company, Amsterdam.Louis Timbal-Duclaux.
1990.
La communica-tion dcrite seientifique t technique.
ESF, Paris,France.199
