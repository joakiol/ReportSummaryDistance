Building Underlying Structures for Multiparagraph TextsRobert GranvilleBBN1.
IntroductionOur experience with MACH-III \[Kurland et al1992\]showed us that there is more to multiparagraph textthan stringing together isolated well-formedparagraphs, not surprising since the same is true ofmultisentential paragraphs and multiwordsentences.
The underlying structure of the entiretext, depicting interparagraph relationships andemphases, must also be determined for successfulgeneration.
Th~ of course implies that we need aformalism for representing interparagraph structure.Fortunately, RST \[Mann & Thompson 1987\] iscapable of representing the needed interparagraphstructure as well as intraparagraph structure, givingus the framework for exploring how paragraphstructure and total text structure interact and howthese structures affect the surface text.
However,RST does not specify how to build large structuresrepresenting multiparagraph text, or even smallerstructures retYresenting sentences.
This paperpresents an algorithm to construct suchmultiparagraph structures in the context of a critiqueby the MACH-III system of a student's performancein troubleshooting the HAWK radar.
This critique isbased on the functional hierarchy tree (FH tree),which is the heart of the expert system component ofMACH-III \[Kurland et aI 1989\].
First we describefunctional hierarchy as a paradigm for organizingexpert system knowledge.
Then the algorithm forgenerating text structures based on this functionalhierarchy organization is presented intwo parts.
Thefirst describes how the higher level RST structuredefining the overall organization of the paragraphsand their contents i built.
This is an elaboration ofthe algorithm first presented in \[Granville 1993\].
Thesecond part describes how the individual paragraphRST structures are filled out, resulting in a completerepresentation f the desired text.
This algorithmwas developed as part of the George system, on-going work extending MACH-III to improveexplanation capabilities.
The first part of thealgorithm, that which builds the high-level RSTstructures, has been implemented.
The second partis the current subject of the George ffort.2.
Functional Hierarchy and ExplanationsSince our algorithm relies heavily upon thefunctional hierarchy tree structured organization ofthe MACH-III expert system, we should begin witha brief description.
Functional hierarchy (FH) is anew paradigm for organizing expert systemknowledge bases, based on the proceduralabstraction principles of Liskov and Guttag \[Liskov& Guttag 1986\].
Functional hierarchy differs greatlyfrom production rules (the customary basis for anexpert system) in that functional hierarchy rulesdefine the actions a system can take, rather than theconditions under which actions may take place.
Theconcept of "action" is expanded to include all actionsthe system takes, including control decisions, ratherthan just changes to the database, therebyeliminating the need for a separate control structure.These rules are arranged in a hierarchy, where theaction of a rule is defined as a combination ofotheractions.
A complete description of the FH paradigmcan be found in \[Kurland et a11992\].A student action is deemed either to be GOOD, whenthe action continues in the current branch of the FHtree, SKIPPING, when an action jumps to anotherbranch of the tree before the current branch iscompleted, OUT OF TREE, when the action hasnothing to do with the problem at hand, andtherefore isn't represented in the tree, orREDUNDANT, when an action had already beentaken by the student, since none of the variousactions in this domain ought to be repeated in onesession.
There is also RETURN for when a studentreturns to a branch he skipped from, which is theequivalent of GOOD, and SKIPPING-RETURN, whichis a return to a skipped branch at the price of leavingthe current branch unfinished, equivalent oSKIPPING.
MACH-III includes navigationalmilestones in its output.
These milestones do notrepresent direct actions the student has taken, butmark the entering, returning to, and completion ofbranches in the FH tree by the actions the studentdoes take.In writing any text, the intended audience must beidentified and assumptions of backgroundknowledge be made.
The intended audience for theMACH-III critiques consists of students who havealready had several weeks of training introubleshooting HAWK radar systems.
We canassume they are basically familiar with thetroubleshooting task and the components hat makeup HAWK radars.
The chief goal of the MACH-IIIsystem is to help the students organize theirtroubleshooting knowledge with simulated hands-on experience to make them more efficient at therequired task.217th International Generation Workshop ?
Kennebunkport, Maine * June 21-24, 1994A common component of generation systems is adatabase containing assumptions of the reader'sknowledge known as the reader model (or listenermodel for systems that simulate participants inspoken dialogue).
In our system, the required text isnot a model of interactive dialogue, but rather awritten monologue.
This means that our readermodel does not have to be subject o testing andcorrecting, since such testing and correcting are bynature interactive.
Therefore, the system doesn'thave to be careful about maintaining a history ofhow the RST was built, and which assumptions werebrought into play when decisions in building theRST were made.This is in direct contrast with Moore's system\[Moore 1989\].
In her work, Moore addressed theproblem of a listener not understanding a computergenerated response in an interactive dialogue,usually due to a mistaken assumption in thesystem's listener model.
It was imperative forMoore's system to be able to identify where in itsplan the system failed to make itself understood andthe assumptions that caused it to make theerroneous decisions that resulted in the faulty plan.This way it could correct he assumptions and revisethe plan, resulting in clearer text for the listener.
Inorder to do this, Moore's system must build its planto achieve identified goals, and keep careful recordsof how the plan was built, what decisions weremade, and the factors that went into those decisions.The George system does not need an elaboratecomponent to build a plan for two reasons.
The first,as mentioned above, is that the desired output textof George is a non-interactive monologue of writtentext, rather than text that models interactivedialogue, and therefore doesn't need information forrevising its text in reaction to a l istener'smisunderstanding.
The second is that the databasefrom which George has to generate text is theMACH-III functional hierarchy trees.
These FH treesare structured purposely to explicitly reflect he veryorganization we want George to explain.
Because ofthese FH trees, we don't have to build plans todetermine text structure, and the job of organizingthe text, that is, building RST structures, is greatlysimplified.An observant reader will note that a great deal ofstructure is being imposed on the knowledge base,significantly more than is usual.
This raises thequestion, can we reasonably expect expert systemsto have such carefully structured knowledge bases?Clearly, there has to be an intrinsic organization toexpert knowledge;  there have to be basicrelationships about how pieces of informationcombine to form larger pieces.
Knowing you need totest the local oscillator subsystem of a radar unit, butnot knowing the subcomponents that make up thelocal oscillator subsystem will not be sufficient oaccomplish the task.
Even if you know how to testeach basic component in the radar, not knowinghow they combine to form larger subsystems wouldpreclude testing these larger subsystems.If there has to be an organization to knowledge, thenext question is when should that organizing bedone.
Traditionally, no organizational structure forthe facts has been required of the expert system.Responsibility for the structure is usually placed onthe generation system.
Either the generation systembuilds the structure to produce a coherent text (e.g.\[Hovy 1988\]), or plausible structures (such asMcKeown's schemas \[McKeown 1982\]) are builtahead of time, and the system selects one thatdefines the desired structure.But we have agreed that to be useful, knowledge hasto be organized.
Obviously, the expert system ismaking use of that knowledge, so there has to besome organization to it.
And, if the experts ystemdesires to explain its knowledge,  and theorganization is an integral part of that knowledge,then the expert system must  explain thisorganization, too.
But a system cannot explainsomething it doesn't explicitly represent (\[Swartout1983\] \[Clancey 1983\]), so we must somehowexplicitly represent the organization of the system.The traditional expert system paradigm of aproduction rule knowledge base doesn't representthis organization well, as many researchers havepointed out over the years (\[Clancey, Shortliffe,Buchanan 1979\], \[Swartout 1983\], \[Clancey 1983\],\[Kurland et al1992\] to name a few.
The chiefproblem is that the independent production rulesare the result of a careful organization of theknowledge on the part of the human designers, butthese rules don't  explicit ly represent thatorganization.
All the organization is lost to thesystem.Functional hierarchy is a paradigm that explicitlyorganizes the knowledge to reflect he structure ofthe knowledge used by actual experts.
Since thisorganization is explicitly represented, it is readily227th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994available for explanation purposes.
This knowledgestructure is itself something that differentiatesexperts from novices.
Therefore, rather than being anicety, such organization should be explicitlyrepresented and available in any expert system as afundamental part of the knowledge base.Finally, a few words should be said about our use ofRST in George.
As was discussed above, mostgeneration systems impose little or no organizationalrequirements on the facts they take as input, andinstead build the  text structure or select the textstructure from a pool of schemas.
Those that buildtheir structures, and use RST as the representation fthat resulting structure, have extended RST from itsoriginal concept o include the mechanisms for theconstruction of text structure as well as therepresentation of text structure (see e.g.
\[Hovy1988\]).
George uses only the representation riginallyintroduced in \[Mann & Thompson 1987\], withoutany of the mechanisms used for building structurethat are commonly thought of as part of RST.3.
High-Level Text OrganizationAn examination of the desired text may yield somehints about the underlying structure.
As we statedabove, the purpose of the this text is to describestudent actions in the course of a troubleshootingsession, and how these actions relate to theorganization in the FH trees.
The only relationshipsbetween these actions are how they combine inorder to contribute to or detract from an orderlyattempt to isolate a problem in the HAWK radar.
Inthemselves, they are completely independent.Testing one component has nothing to do withtest ing another  outs ide  the context  oftroubleshooting the entire radar.
The way RSTorganizes events, such as student actions, that haveno relationship between them other than theyoccurred in a specific order is with the SEQUENCErelation.Because we're assuming our audience is conversantwith troubleshooting HAWK radars, we don't haveto explain the function of components or how thebasic actions are performed.
Instead, we must tellthe student he system's judgment on each specfficaction, and how that judgment was made.
When anaction is deemed good, we must explain why it wasgood; when it is deemed a mistake, we must explainwhy it was a mistake.
In MACH-III, an action isdetermined to be good or bad based on how itmaneuvers the student through the FH tree.Therefore the navigational milestones generated byMACH-III can serve to help explain the critique ofeach action.
Since the text isn't interactive and wedon't have to verify and modify our reader model,we can assume that once we explain the validity of abranch in the FH tree or why a problem violates theFH tree organization, the student understands theconcept, and it doesn't have to be explained again.Th~ leaves the problem of the higher organization ofthe text, that is, where to break paragraphs in theRST structure.
It was argued in \[Granville 1990\] thatthe structural organization of a text is as importantto the message to be conveyed as is its factualcontent.
Therefore any artificial metric forparagraphs, such as limiting them to a specificnumber of sentences, must be unsatisfactory.However, the problem is not so daunting when weconsider the purpose of the paragraph, which is todescribe one idea or topic.
One obvious topiccategory for our text consists of problems andnavigational milestones that must be explainedbecause they are being encountered for the first time.The problem or milestone being explained isobviously the topic of the explanation, and thereforedeserves its own paragraph.
Since problems andmilestones that have already been explained o notget full explanations with subsequent encounters,these further references don't merit paragraphtreatment.This does not completely solve the problem,however.
Depending on how the FH tree is set upand previous tudent actions, we may be presentedwith a set of actions without problems or milestonesto explain, and therefore apparently no naturalpoints to break paragraphs.
Nevertheless, the set ofactions may be too large to describe in a singleparagraph.Once again, a natural solution appears when weconsider the purpose of our text, which is to describethe student's actions and how they relate to properlynavigating through FH trees, ultimately to helpteach the student the organization of these trees.Since teaching this organization is a high-level goal,structuring the text to reflect this organizationwhenever possible would be beneficial.
By placingactions that are directly related in the FH tree in thesame paragraph and putting paragraph breaksbetween actions that aren't related because they're indifferent branches, our text will reflect the FH treeorganization.
However,  this criterion may beoverridden if the paragraph would consist of only23.. 7th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994I RCVR Noise Lamp I?
I soaoDr,ver I LRF'Figure 1.
FH Tree for Receviver Noiseone action item that doesn't require elaboration.Otherwise, we could generate a paragraphconsisting of one simple sentence.Finally, there may be circumstances where we don'twant a paragraph break, even though we have theconditions we've described.
When an FH node has tobe explained, we've observed that this requires acentral topic and thus its own paragraph.
However,we can have two consecutive actions, each requiringexplanations on topics that are closely related.
Forinstance, if a student skips to a new branch whenneither the skipping problem nor the new branchhas yet been explained, we'd have to explain boththe milestone of entering the new branch and theskipping problem, and since they both relate to thesame action, we want them in the same paragraph.Another example is an action requiring explanationbecause of a milestone followed immediately by aredundant occurrence of the same action.
In boththese cases, the central topic is the action, and thetwo explanations should be in the same paragraph.From these observations, building a multiparagraphRST structure is straightforward.
Let's look at aconcrete xample.
The following is a portion of theoutput of an actual MACH-III session (run by theauthor).
The test indications (which are not part ofthe critique output) had indicated a fault withReceiver Noise.
A possible text description of theseactions is the following.
(Phrases are numbered fordiscussion purposes to correspond with laterdiagrams.
)(1) The next action you took was tocheck the W4, (2) one of the RFinput cables.
(3) If these cables arefaulty, feedthrough nulling won'toccur properly, (4) resulting in noisein the Receiver, so checking the W4is certainly a val id step.
(5)However, an organized approach totroubleshooting the Receiver iss t rongly  recommended,  andchecking the W4 at this point leftyour investigation of whether noiseis being introduced unfinished.
(6)(You hadn't yet checked the ScanDriver Assembly, which can alsointroduce noise if not workingproperly.
)(7) You followed the W4 check byreplacing the Scan Driver, (8) furtherskipping around.
(9) By executing aBITE Test, you demonstrated thatthe fault wasn't  with the ScanDriver, (10) and the problem wasn'tnoise being introduced.Figure I gives the relevant portion of the FH tree forReceiver Noise to assist in following the example.
(The complete tree for Receiver Noise, as well as allthe other FH trees for HAWK receiver problems, canbe found in \[Kurland et al1989\].
)247th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994(5-6) EXPLAIN (SKIPPING SCAN-DRIVER-ASSEMBLY)(1) (GOOD ( T E S T ~ I ~ I  ~W4) :CONTINUITY))(2) EXPLAIN (RF INPUTS) (3-4) EXPLAIN (FEEDTHROUGH NOTNULLED) (RECEIVER NOISE)Figure 2.
Generated RST Structure (Part 1)The actual MACH-III output is(START #< NODE FEEDTHROUGHNOT HULLED >)(START #< NODE RF INPUTS>)(SKIPPING (TEST-THING (THE W4):CONTINUITY) (#<NODE NOISEINTRODUCED>))(RETURNING #<NODE NOISEINTRODUCED>)(SKIPPING-RETURN (REPLACE-THING (THE SCAN-DRIVER-ASSEMBLY))(#<NODE RF INPUTS>#<NODE FEEDTHROUGH NOTHULLED>))(GOOD (PUSH BITE-TEST-AFTER-REPLACE #<DEVICE SCAN-DRIVER -ASS EMBLY >))(FINISHED #<NODE NOISEINTRODUCED>)Recall that MACH-II I  critiques are basicallyconcerned with student  actions.
Thereforenavigational milestones (outputs that begin withSTART, FINISHED, or RETURNING) are put asideuntil we have an action with which they can beassociated.
In our example, the first student action isthe testing of the W4, which left the investigation ofwhether noise is being introduced unfinished.
Westart a new paragraph with a node for the W4 (thenode labeled 1 in Figure 2 below, corresponding toclause 1 in the above sample text).
Now we canassociate the two START milestones by making RSTsatellite nodes of the W4 node nucleus (nodes 2 and3-4 in the diagram).
Since neither the concept offeedthrough not being hulled nor that of RF inputshas been described yet, we mark these nodes asneeding explanation.
However,  we also have aSKIPPING problem, and this concept hasn't beendescribed yet, either.
Since the problem is with theaction we've just explained, we want it in the sameparagraph, so we add a contrasting satellite to thecomplex W4 node to explain skipping (node 5-6).The next item on the input list is a milestone notrelated to the W4 test.
This is followed by an actionitem, stating that the Scan Driver Assembly wasreplaced.
With this action, the student has returnedto investigating whether noise is being introduced,but leaves the feedthrough not being nulledinvestigation incomplete.
A new paragraph isstarted since the previous action had been markedfor explanation, and this action is not topicallyrelated.
This paragraph has a node for the ScanDriver Assembly (node 7 of Figure 3) and one for thelatest occurrence of a skipping mistake (node 8).Since the skipping problem has been explained (bynode 5-6), we don't have to fully explain the problemagain, and node 8 is marked as merely requiringmention.
Also, we can presume that the concept ofnoise being introduced has already been explainedwhen we first entered that branch of the FH tree.
(We know it had to have been entered because thestudent left it unfinished when the W4 was tested.
)Therefore we don't need to discuss the introductionof noise here.
If we assume for the sake of ourexample that BITE Tests have already beenexplained (because this is a prevalent action thatshould be taken after each component replacement),we can simply add a node for this item inSEQUENCE to the current paragraph without fullexplanation as node 9.
Finally we encounter amilestone item showing that the branch for noise257th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994W4J~"  "~ INTRODUCED)(7) (REPAIR-THING (THE SCAN- (8) MENTION (SKIPPING)DRIVER-ASSEMBLY)Figure 3.
Generated RST Structure (Part 2)being introduced has been exhausted.
Since theconcept has been fully described, it doesn't needfurther explanation here, and node 10 is marked asmerely requiring mention.3.
Low-Level Text OrganizationWe now have a general outline of the paragraphstructure in an RST representation, but our workisn't finished yet.
We've liberally created a fairnumber of nodes marked as either MENTION orEXPLAIN, without any discussion about how to acton these marked nodes, or whether they'll have animpact on the final RST structure.
It's time to turnour attention to these intraparagraph concerns.We'll first look at the easiest problem, how to handlenodes marked for MENTION.
Recall that these arenodes for problems or milestones that have alreadybeen discussed in the generated text, and we'reassuming they don't require further elaboration.Each such node can be realiTed as a simple sentence,or even a phrase.
Therefore, they have no impact onthe RST structure because the single nodes thatrepresent them are sufficient.Let's look at an example.
Figure 4 is an RST structurethat might be generated.At this point of the RST construction, mixer crystalpairs and the Receiver Assembly have beendiscussed.
A plausible surface realization for thisRST might be, "You tested the Reference Mixer Pair,one of the Mixer Crystal Pairs of the ReceiverAssembly.
"While the realization of this RST pattern is simpleenough, the pattern itself deserves a closer look.
Allthe milestone nodes are arranged in the generalstructure shown in Figure 5.
We call this structurethe expository chain.
It represents a statement, A, witha second statement, B, in elaboration of A. Thenstatement B is elaborated on by statement C. Thischain is continued as long as is necessary.The expository chain is a standard method ofpresenting arguments, ince it represents building acase step by step.
As an experiment, he first sectionof \[Bateman 1992\] was analyzed.
Of the twelveparagraphs in it, all but three are straight expositorychains., and those proved to be conjunctions orsequences of expository chains.4.
ConclusionWe have presented an algorithm for constructingmultiparagraph structures, both the interparagraphstructure defining how paragraphs relate to oneanother, and the intraparagraph structure defininghow each paragraph is organized within itself.
Thisalgorithm is dependent on the expert system'sknowledge base being organized into a functionalhierarchy, and we have argued that rather thanbeing an undue limitation of the generality of thealgorithm, such an organization should be anintegral part of every expert system's knowledgebase.267th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994(REPAIR-THING (THE REFERENCE-CHANNEL-MIXER-PAIR))MENTION (MIXER XTAL PAIRS) MENTION (RCVR ASSEMBLY)Figure 4.
Sample RST Structure for Reference Channel Mixer PairsB C...Figure 5.
Expository Chain5.
ReferencesBateman 1992: Bateman, john A., "TowardsMeaning-Based Machine Translation: UsingAbstractions from Text Generation for PreservingMeaning," in Machine Translation, Vol.
7, 1992Clancey 1983: Clancey, Will iam J., "TheEpistemology of a Rule-Based Expert System --- aFramework for Explanation," in Artificial Intelligence,No.
20, 1983Clancey, Shortliffe, Buchanan 1979: Clancey, WilliamJ., Edward H. Shortliffe, and Bruce G. Buchanan,"Intelligent Computer-Aided Instruction for MedicalDiagnosis," in Proceedings of the Third AnnualSymposium on Computer Applications in MedicalComputing, 1979Granville 1990: Granville, Robert A., "The Role ofUnderlying Structure in Text Generation," inProceedings of the Fifth International Workshop onNatural Language Generation, 1990Granville 1993: Granville, Robert, "An Algorithm forHigh-Level Organization of Multi-Paragraph Texts,"in Intentionality and Structure in Discourse Relations,Proceedings of a Workshop Sponsored by the SpecialInterest Group on Generation of the Association forComputational Linguistics, 1993Hovy 1988: Hovy, Eduard H., "Planning CoherentMultisentential Text," in Proceedings of the 26th ACLConference, Buffalo, New York 1988Kurland et al1989: Kurland, Laura C., RobertGranville, Dawn MacLaughlin, HAWK MACH-IIIExplanations of the Receiver Troubleshooting Tree,Technical Report, BBN Systems and Technologies,Cambridge, Massachusetts, 1989Kurland et al1992: Kurland, Laura C., Robert AlanGranville, and Dawn MacLaughlin, "Design,Development and Implementation f an IntelligentTutoring System (ITS) for Training Radar Mechanicsto Troubleshoot," in Intelligent Instruction byComputer, edited by Marshall J. Farr and JosephPsotka, Taylor & Francis, Washington, DC, 1992Liskov & Guttag 1986: Liskov, Barbara, and JohnGuttag, Abstraction and Specification in ProgramDevelopment, MIT Press, Cambridge, Massachusetts,1986Mann & Thompson 1987: Mann, William C., andSandra A. Thompson, Rhetorical Structure Theory: ATheory of Text Organization, IS I /RS-87-190,Information Sciences Institute, Marina del Rey,California, 1987McKeown 1982: McKeown, Kathleen R., GeneratingNatural Language Responses to Questions aboutDatabase Structure, PhD thesis, University ofPennsylvania, Philadelphia, Pennsylvania, 1982Moore 1989: Moore, Johanna Doris, A ReactiveApproach to Explanation in Expert and Advice-GivingSystems, PhDthesis, University of California, Los Angeles,California, 1989Swartout 1983: Swartout, William R., "XPLAIN: ASystem for Creating and Explaining ExpertConsulting Programs," in Artificial Intelligence, No.21, 1983277th International Generation Workshop * Kennebunkport, Maine ?
June 21-24, 199428
