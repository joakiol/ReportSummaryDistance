Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT, pages 34?43,Dublin, Ireland, August 23rd 2014.The Language Application Grid Web Service Exchange VocabularyNancy IdeDepartment of Computer ScienceVassar CollegePoughkeepsie, New York USAide@cs.vassar.eduJames PustejovskyDepartment of Computer ScienceBrandeis UniversityWaltham, Massachusetts USAjamesp@cs.brandeis.eduKeith SudermanDepartment of Computer ScienceVassar CollegePoughkeepsie, New York USAsuderman@anc.orgMarc VerhagenDepartment of Computer ScienceBrandeis UniversityWaltham, Massachusetts USAmarc@cs.brandeis.eduAbstractIn the context of the Linguistic Applications (LAPPS) Grid project, we have undertaken the def-inition of a Web Service Exchange Vocabulary (WS-EV) specifying a terminology for a coreof linguistic objects and features exchanged among NLP tools that consume and produce lin-guistically annotated data.
The goal is not to define a new set of terms, but rather to provide asingle web location where terms relevant for exchange among NLP tools are defined and pro-vide a ?sameAs?
link to all known web-based definitions that correspond to them.
The WS-EVis intended to be used by a federation of six grids currently being formed but is usable by anyweb service platform.
Ultimately, the WS-EV could be used for data exchange among tools ingeneral, in addition to web services.1 IntroductionThere is clearly a demand within the community for some sort of standard for exchanging annotated lan-guage data among tools.1This has become particularly urgent with the emergence of web services, whichhas enabled the availability of language processing tools that can and should interact with one another,in particular, by forming pipelines that can branch off in multiple directions to accomplish application-specific processing.
While some progress has been made toward enabling syntactic interoperability viathe development of standard representation formats (e.g., ISO LAF/GrAF (Ide and Suderman, 2014;ISO-24612, 2012), NLP Interchange Format (NIF) (Hellmann et al., 2013), UIMA2Common AnalysisSystem (CAS)) which, if not identical, can be trivially mapped to one another, semantic interoperabilityamong NLP tools remains problematic (Ide and Pustejovsky, 2010).
A few efforts to create repositories,type systems, and ontologies of linguistic terms (e.g., ISOCat3, OLiA4, various repositories for UIMAtype systems5, GOLD6, NIF Core Ontology7) have been undertaken to enable (or provide) a mappingamong linguistic terms, but none has yet proven to include all requisite terms and relations or be easyto use and reference.
General repositories such as Dublin Core8, schema.org, and the Friend of a FriendThis work is licensed under a Creative Commons Attribution 4.0 International License.
Page numbers and proceedings footerare added by the organizers.
License details: http://creativecommons.org/licenses/by/4.0/1See, for example, proceedings of the recent LREC workshop on ?Language Technology Service Platforms: Synergies,Standards, Sharing?
(http://www.ilc.cnr.it/ltsp2014/).2https://uima.apache.org/3http://www.isocat.org4http://nachhalt.sfb632.uni-potsdam.de/owl/5E.g., http://www.julielab.de/Resources/Software/UIMA+type+system-p-91.html6http://linguistics-ontology.org7http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core8http://dublincore.org34project9include some relevant terms, but they are obviously not designed to fully cover the kinds ofinformation found in linguistically annotated data.In the context of the Linguistic Applications (LAPPS) Grid project (Ide et al., 2014), we have under-taken the definition of a Web Service Exchange Vocabulary (WS-EV) specifying a terminology for a coreof linguistic objects and features exchanged among NLP tools that consume and produce linguisticallyannotated data.
The work is being done in collaboration with ISO TC37 SC4 WG1 in order to ensurefull community engagement and input.
The goal is not to define a new set of terms, but rather to providea single web location where terms relevant for exchange among NLP tools are defined and provide a?sameAs?
link to all known web-based definitions that correspond to them.
A second goal is to definerelations among the terms that can be used when linguistic data are exchanged.
The WS-EV is intendedto be used by a federation of grids currently being formed, including the Kyoto Language Grid10, theLanguage Grid Jakarta Operation Center11, the Xinjiang Language Grid, the Language Grid BangkokOperation Center12, LinguaGrid13, MetaNET/Panacea14, and LAPPS, but is usable by any web serviceplatform.
Ultimately, the WS-EV could be used for data exchange among tools in general, in addition toweb services.This paper describes the LAPPS WS-EV, which is currently under construction.
We first describe theLAPPS project and then overview the motivations and principles for developing the WS-EV.
Becauseour goal is to coordinate with as many similar projects and efforts as possible to avoid duplication, wealso describe existing collaborations and invite other interested groups to provide input.2 The Language Application Grid ProjectThe Language Application (LAPPS) Grid project is in the process of establishing a framework thatenables language service discovery, composition, and reuse, in order to promote sustainability, manage-ability, usability, and interoperability of natural language Processing (NLP) components.
It is based onthe service-oriented architecture (SOA), a more recent, web- oriented version of the pipeline architecturethat has long been used in NLP for sequencing loosely-coupled linguistic analyses.
The LAPPS Gridprovides a critical missing layer of functionality for NLP: although existing frameworks such as UIMAand GATE provide the capability to wrap, integrate, and deploy language services, they do not providegeneral support for service discovery, composition, and reuse.The LAPPS Grid is a collaborative effort among US partners Brandeis University, Vassar College,Carnegie-Mellon University, and the Linguistic Data Consortium at the University of Pennsylvania, andis funded by the US National Science Foundation (NSF).
The project builds on the foundation laid inthe NSF-funded project SILT (Ide et al., 2009), which established a set of needs for interoperabilityand developed standards and best practice guidelines to implement them.
LAPPS is similar in its scopeand goals to ongoing projects such as The Language Grid15, PANACEA/MetaNET16, LinguaGrid17, andCLARIN18, which also provide web service access to basic NLP processing tools and resources andenable pipelining these tools to create custom NLP applications and composite services such as questionanswering and machine translation, as well as access to language resources such as mono- and multi-lingual corpora and lexicons that support NLP.
The transformative aspect of the LAPPS Grid is thereforenot the provision of a suite of web services, but rather that it orchestrates access to and deployment oflanguage resources and processing functions available from servers around the globe, and enables usersto easily add their own language resources, services, and even service grids to satisfy their particularneeds.9http://www.foaf-project.org10http://langrid.nict11http://langrid.portal.cs.ui.ac.id/langrid/12http://langrid.servicegrid-bangkok.org13http://www.linguagrid.org/14http://www.panacea-lr.eu15http://langrid.nict16http://panacea-lr.eu/17http://www.linguagrid.org/18http://www.clarin.eu/35The most distinctive innovation in the LAPPS Grid that is not included in other projects is the provisionof an open advancement (OA) framework (Ferrucci et al., 2009a) for component- and application-basedevaluation of NLP tools and pipelines.
The availability of this type of evaluation service will provide anunprecedented tool for NLP development that could, in itself, take the field to a new level of productivity.OA involves evaluating multiple possible solutions to a problem, consisting of different configurationsof component tools, resources, and evaluation data, to find the optimal solution among them, and en-abling rapid identification of frequent error categories, together with an indication of which module(s)and error type(s) have the greatest impact on overall performance.
On this basis, enhancements and/ormodifications can be introduced with an eye toward achieving the largest possible reduction in error rate(Ferrucci et al., 2009; Yang et al., 2013).
OA was used in the development of IBM?s Watson to achievesteady performance gains over the four years of its development (Ferrucci et al., 2010); more recently,the open-source OAQA project has released software frameworks which provide general support foropen advancement (Garduno et al., 2013; Yang et al., 2013), which has been used to rapidly developinformation retrieval and question answering systems for bioinformatics (Yang et al., 2013; Patel et al.,2013).The fundamental system architecture of the LAPPS Grid is based on the Open Service Grid Initiative?sService Grid Server Software19developed by the National Institute of Information and CommunicationsTechnology (NICT) in Japan and used to implement Kyoto University?s Language Grid, a service gridthat supports multilingual communication and collaboration.
Like the Language Grid, the LAPPS Gridprovides three main functions: language service registration and deployment, language service search,and language service composition and execution.
As noted above, the LAPPS Grid is instrumentedto provide relevant component-level measures for standard metrics, given gold-standard test data; newapplications automatically include instrumentation for component-level and end-to-end measurement,and intermediate (component-level) I/O is logged to support effective error analysis.20The LAPPSGrid also implements a dynamic licensing system for handling license agreements on the fly21, providesthe option to run services locally with high-security technology to protect sensitive information whererequired, and enables access to grids other than those based on the Service Grid technology.We have adopted the JSON-based serialization for Linked Data (JSON-LD) to represent linguisticallyannotated data for the purposes of web service exchange.
The JavaScript Object Notation (JSON) is alightweight, text-based, language-independent data interchange format that defines a small set of format-ting rules for the portable representation of structured data.
Because it is based on the W3C ResourceDefinition Framework (RDF), JSON-LD is trivially mappable to and from other graph-based formatssuch as ISO LAF/GrAF and UIMA CAS, as well as a growing number of formats implementing thesame data model.
Most importantly, JSON- LD enables services to reference categories and definitionsin web-based repositories and ontologies or any suitably defined concept at a given URI.The LAPPS Grid currently supports SOAP services, with plans to support REST services in thenear future.
We provide two APIs: org.lappsgrid.api.DataSource, which provides datato other services, and org.lappsgrid.api.WebService, for tools that annotate, transform, orotherwise manipulate data from a datasource or another web service.
All LAPPS services exchangeorg.lappsgrid.api.Data objects consisting of a discriminator (type) that indicates how to inter-pret the payload, and a payload (typically a utf-8 string) that consists of the JSON-LD representation.Data converters included in the LAPPS Grid Service Engines map from commonly used formats to theJSON-LD interchange format; converters are automatically invoked as needed to meet the I/O require-ments of pipelined services.
Some LAPPS services are pre-wrapped to produce and consume JSON-LD.Thus, JSON-LD provides syntactic interoperability among services in the LAPPS Grid; semantic inter-19http://servicegrid.net20Our current user interface provides easy (re-)configuration of single pipelines; we are currently extending the interfaceto allow the user to specify an entire range of pipeline configurations using configuration descriptors (ECD; (Yang et al.,2013) to define a space of possible pipelines, where each step might be achieved by multiple components or services and eachcomponent or service may have configuration parameters with more than one possible value to be tested.
The system will thenautomatically generate metrics measurements plus variance and statistical significance calculations for each possible pipeline,using a service-oriented version of the Configuration Space Exploration (CSE) algorithm (Yang et al., 2013).21See (Cieri et al., 2014) for a description of how licensing issues are handled in the LAPPS Grid.36operability is provided by the LAPPS Web Service Exchange Vocabulary, described in the next section.3 LAPPS Web Service Exchange Vocabulary3.1 MotivationThe WS-EV addresses a relatively small but critical piece of the overall LAPPS architecture: it allowsweb services to communicate about the content they deliver, such that the meaning?i.e., exactly whatto do with and/or how to process the data?is understood by the receiver.
As such it performs the samefunction as a UIMA type system performs for tools in a UIMA pipeline that utilize that type system,or the common annotation labels (e.g., ?Token?, ?Sentence?, etc.)
required for communication amongpipelined tools in GATE: these mechanisms provide semantic interoperability among tools as long as oneremains in either the UIMA or GATE world.
To pipeline a tool whose output follows GATE conventionswith a tool that expects input that complies with a given UIMA type system, some mapping of terms andstructures is likely to be required.22This is what the WS-EV is intended to enable; effectively, it is ameta-type-system for mapping labels assigned to linguistically annotated data so that they are understoodand treated consistently by tools that exchange them in the course of executing a pipeline or workflow.Since web services included in LAPPS and federated grids may use any i/o semantic conventions, theWS-EV allows for communication among any of them?including, for example, between GATE andUIMA services23The ability to pipeline components from diverse sources is critical to the implementation of the OAdevelopment approach described in the previous section, it must be possible for the developer to ?plugand play?
individual tools, modules, and resources in order to rapidly re-configure and evaluate newpipelines.
These components may exist on any server across the globe, consist of modules developedwithin frameworks such as UIMA and GATE, and or be user-defined services existing on a local machine.3.2 WS-EV DesignThe WS-EV was built around the following design principles, which were compiled based on input fromthe community:1.
The WS-EV will not reinvent the wheel.
Objects and features defined in the WS-EV will be linkedto definitions in existing repositories and ontologies wherever possible.2.
The WS-EV will be designed so as to allow for easy, one-to-one mapping from terms designatinglinguistic objects and features commonly produced and consumed by NLP tools that are wrappedas web services.
It is not necessary for the mapping to be object-to-object or feature-to-feature.3.
The WS-EV will provide a core set of objects and features, on the principle that ?simpler is better?,and provide for (principled) definition of additional objects and features beyond the core to representmore specialized tool input and output.4.
The WS-EV is not LAPPS-specific; it will not be governed by the processing requirements orpreferences of particular tools, systems, or frameworks.5.
The WS-EV is intended to be used only for interchange among web services performing NLP tasks.As such it can serve as a ?pivot?
format to which user and tool-specific formats can be mapped.6.
The web service provider is responsible for providing wrappers that perform the mapping frominternally-used formats to and/or from the WS-EV.7.
The WS-EV format should be compact to facilitate the transfer of large datasets.22Within UIMA, the output of tools conforming to different type systems may themselves require conversion in order to beused together.23Figure 5 shows a pipeline in which both GATE and UIMA services are called; GATE-to-GATE and UIMA-to-UIMAcommunication does not use the WS-EV, but it is used for communication between GATE and UIMA services, as well as otherservices.378.
The WS-EV format will be chosen to take advantage, to the extent possible, of existing technologi-cal infrastructures and standards.As noted in the first principle, where possible the objects and features in the WS-EV are drawn fromexisting repositories such as ISOCat and the NIF Core Ontology and linked to them via the owl:sameAsproperty24or, where appropriate, rdfs:subClassOf25.
However, many repositories do not include somecategories and objects relevant for web service exchange (e.g., ?token?
and other segment descriptors),do include multiple (often very similar) definitions for the same concept, and/or do not specify relationsamong terms.
We therefore attempted to identify a set of (more or less) ?universal?
concepts by surveyingexisting type systems and schemas ?
for example, the Julie Lab and DARPA GALE UIMA type systemsand the GATE schemas for linguistic phenomena ?
together with the I/O requirements of commonlyused NLP software (e.g., the Stanford NLP tools, OpenNLP, etc.).
Results of the survey for token andsentence identification and part-of-speech labeling26showed that even for these basic categories, noexisting repository provides a suitable set of categories and relations.Perhaps more problematically, sources that do specify relations among concepts, such as the variousUIMA type systems and GATE?s schemas, vary widely in their choices of what is an object and whatis a feature; for example, some treat ?token?
as an object (label) and ?lemma?
and ?POStag?
as asso-ciated features, while others regard ?lemma?
and/or ?POStag?
as objects in their own right.
Decisionsconcerning what is an object and what is a feature are for the most part arbitrary; no one scheme is rightor wrong, but a consistent organization is required for effective web service interchange.
The WS-EVtherefore defines an organization of objects and features for the purposes of interchange only.
Wherepossible, the choices are principled, but they are otherwise arbitrary.
The WS-EV includes sameAs andsimilarTo mappings that link to like concepts in other repositories where possible, thus serving primar-ily to group the terms and impose a structure of relations required for web service exchange in oneweb-based location.In addition to the principles above, the WS-EV is built on the principle of orthogonal design, such thatthere is one and only one definition for each concept.
It is also designed to be very lightweight and easyto find and reference on the web.
To that end we have established a straightforward web site (the WebService Exchange Vocabulary Repository27), similar to schema.org, in order to provide web-addressableterms and definitions for reference from annotations exchanged among web services.
Our approach isbottom-up: we have adopted a minimalist strategy of adding objects and features to the repository onlyas they are needed as services are added to the LAPPS Grid.
Terms are organized in a shallow ontology,with inheritance of properties, as shown in Figure 1.4 WS-EV and JSON-LDReferences in the JSON-LD representation used for interchange among LAPPS Grid web services pointto URIs providing definitions for specific linguistic categories in the WS-EV.
They also reference doc-umentation for processing software and rules for processes such as tokenization, entity recognition, etc.used to produce a set of annotations, which are often left unspecified in annotated resources (see forexample (Fokkens et al., 2013)).
While not required for web service exchange in the LAPPS Grid, theinclusion of such references can contribute to the better replication and evaluation of results in the field.Figure 3 shows the information for Token, which defines the concept, identifies application types thatproduce objects of this type, cross-references a similar concept in ISOCat, and provides the URI for usein the JSON-LD representation.
It also specifies the common properties that can be specified for a setof Token objects, and the individual properties that can be associated with a Token object.
There is norequirement to use any or all of the properties in the JSON-LD representation, and we foresee that manyweb services will require definition of objects and properties not included in the WS-EVR or elsewhere.24http://www.w3.org/TR/2004/REC-owl-semantics-20040210/#owl sameAs25http://www.w3.org/TR/owl-ref/#subClassOf-def26Available at http://www.anc.org/LAPPS/EP/Meeting-2013-09-26-Pisa/ep-draft.pdf27http://vocab.lappsgrid.org38Figure 1: Fragment of the WS-EV ontology (associated properties in gray)We therefore provide mechanisms for (principled) definition of objects and features beyond the WS-EVR.
Two options exist: users can provide a URI where a new term or other documentation is defined,or users may add a definition to the WS-EVR.
In the latter case, service providers use the name spaceautomatically assigned to them at the time of registration, thereby avoiding name clashes and providinga distinction between general categories used across services and more idiosyncratic categories.Figure 2 shows a fragment of the JSON-LD representation that references terms in the WS-EV.
The context statement at the top identifies the URI that is to be prefixed to any unknownname in order to identify the location of its definition.
For the purposes of the example, thetext to be processed is given inline.
Our current implementation includes results from each stepin a pipeline, where applicable, together with metadata describing the service applied in each step(here, org.anc.lapps.stanford.SATokenizer:1.4.0) and identified by an internally-defined type (stan-ford).
The annotations include references to the objects defined in the WS-EV, in this example, To-ken (defined at http://vocab.lappsgrid.org/Token) with (inherited) features id, start, end and specificfeature string, defined at http://vocab.lappsgrid.org/Token#id, http://vocab.lappsgrid.org/Token#start,http://vocab.lappsgrid.org/Token#end, and http://vocab.lappsgrid.orgToken/#string, respectively.
Theweb page defining these terms is shown in Figure 3.
"@context" : "http://vocab.lappsgrid.org/","metadata" : { },"text" : {"@value" : "Some of the strongest critics of our welfare system..." }"steps" : [ {"metadata" : {"contains" : {"Token" : {"producer" : "org.anc.lapps.stanford.SATokenizer:1.4.0","type" : "stanford"}}},"annotations" : [ {"@type" : "Token","id" : "tok0","start" : 18,"end" : 22,"features" : {string" : "Some" }},Figure 2: JSON-LD fragment referencing the LAPPS Grid WS-EV39Figure 3: Token definition in the LAPPS WS-EVR4.1 Mapping to JSON-LDAs noted above in Section 1, existing schemes and systems for organizing linguistic information ex-changed by NLP tools vary considerably.
Figure 4 shows some variants for a few commonly used NLPtools, which differ in terminology, structure, and physical format.
To be used in the LAPPS Grid, toolssuch as those in the list are wrapped so that their output is in JSON-LD format, which provides syntacticinteroperability, terms are mapped to corresponding objects in the WS-EV, and the object-feature rela-tions reflect those defined in the WS-EV.
Correspondingly, wrappers transduce the JSON-LD/WS-EVrepresentation to the format used internally by the tool on input.
This way, the tools use their internalformat as usual and map to JSON-LD/WS-EV for exchange only.40Name Input Form Output Form ExampleStanford tagger pt n/a word pos opl box NN1XML n/a XML inline <word id=?0?
pos=?VB?>Let</word>NaCTeM tagger pt n/a word/pos inline box/NN1CLAWS (1) pt n/a word pos inline box NN1CLAWS (2) pt n/a XML inline <w id=?2?
pos=?NN1?>Type</w>CST Copenhagen pt n/a word/pos inline box/NN1TreeTagger pt?
n/a word pos lem opl The DT theTnT token opl word pos opl der ARTword (pos pr)+ opl Falkenstein NE 8.00 NN 1.99Twitter NLP pt opl word pos conf opl smh G 0.9406NLTK pt s, bls [(?word?, ?pos?)]
inline [(?At?, ?IN?
), (?eight?, ?CD?
),]OpenNLP splitter pt n/a sentences ospl I can?t tell you if he?s here.OpenNLP tokenizer sent ospl tokens wss, ospl I can ?t tell you if he ?s here .OpenNLP tagger token wss, ospl word pos ospl At IN eight CD o?clock JJ on INpt = plain text opl = one per line wss = white space separatedospl = one sentence per line bps = blank line separatedFigure 4: I/O variants for common splitters, tokenizers, and POS taggersFor example, the Stanford POS tagger XML output format produces output like this:<word id="0" pos="VB">Let</word>This maps to the following JSON-LD/WS-EV representation:{"@type" : "Token","id" : 0","start" : 18,"end" : 21,"features" : {"string" : "Let","pos" : "VB"}}The Stanford representation uses the term ?word?
as an XML element name, gives an id and posas attribute-value pairs, and includes the string being annotated as element content.
For conversion toJSON-LD/WS-EV, ?word?
is mapped to ?Token?, the attributes id and pos map to features of the Tokenobject with the same names, and the element content becomes the value of the string feature.
Becausethe JSON-LD representation uses standoff annotation, the attributes start and end are added in order toprovide the offset location of the string in the original data.Services that share a format other than JSON-LD need not map into and out of JSON-LD/WS-EVwhen pipelined in the LAPPS Grid.
For example, two GATE services would exchange GATE XMLdocuments, and two UIMA services would exchange UIMA CAS, as usual.
This avoids unnecessaryconversion and at the same time allows including services (consisting of individual tools or compositeworkflows) from other frameworks.
Figure 5 gives an example of the logical flow in the LAPPS Grid,showing conversions into and out of JSON-LD/WS-EV where needed.Each service in the LAPPS Grid is required to provide metadata that specifies what kind of input isrequired and what kind of output is produced.
For example, any service as depicted in the flow diagramin Figure 5 can require input of a particular format (gate, uima, json-ld) with specific content (tokens,sentences, etc.).
The LAPPS Grid uses the notion of discriminators to encode these requirements, andthe pipeline composer can use these discriminators to determine if conversions are needed and/or inputrequirements are met.
The discriminators refer to elements of the vocabulary.5 CollaborationsThe LAPPS Grid project is collaborating with several other projects in an attempt to harmonize thedevelopment of web service platforms, and ultimately to participate in a federation of grids and ser-vice platforms throughout the world.
Existing and potential projects across the globe are beginning to41Figure 5: Logical flow through the LAPPS Grid (client-server communication not represented)converge on common data models, best practices, and standards, and the vision of a comprehensive in-frastructure supporting discovery and deployment of web services that deliver language resources andprocessing components is an increasingly achievable goal.
Our vision is therefore not for a monolithicgrid, but rather a heterogeneous configuration of federated grids that implement common strategies formanaging and inter-changing linguistic information, so that services on all of these grids are mutuallyaccessible.To this end, the LAPPS Grid project has established a multi-way international collaboration among theUS partners and institutions in Asia, Australia, and Europe.
The basis is a formal federation among theLAPPS Grid, the Language Grid (Kyoto University, Japan), NECTEC (Thailand), grids operated by theUniversity of Indonesia and Xinjiang University (China), and LinguaGrid28, scheduled for implementa-tion in January 2015.
The connection of these six grids into a single federated entity will enable accessto all services and resources on any of these grids by users of any one of them and, perhaps most impor-tantly, facilitate adding additional grids and service platforms to the federation.
Currently, the EuropeanMETA-NET initiative is committed to joining the federation in the near future.In addition to the projects listed above, we are also collaborating with several groups on technicalsolutions to achieve interoperability and in particular, on development of the WS-EV, the JSON-LDformat, and a corollary development of an ontology of web service types.
These collaborators includethe Alveo Project (Macquarie University, Australia) (Cassidy et al., 2014), the Language Grid project,and the Lider project29.
We actively seek collaboration with others in order to move closer to achievinga ?global laboratory?
for language applications.6 ConclusionIn this paper, we have given a brief overview of the LAPPS Web Service Exchange Vocabulary (WS-EV), which provides a terminology for a core of linguistic objects and features exchanged among NLPtools that consume and produce linguistically annotated data.
The goal is to bring the field closer toachieving semantic interoperability among NLP data, tools, and services.
We are actively working to bothengage with existing projects and teams and leverage available resources to move toward convergenceof terminology in the field for the purposes of exchange, as well as promote an environment (the LAPPSGrid) within which the WS-EV can help achieve these goals.28http://www.linguagrid.org/29http://www.lider-project.eu42AcknowledgementsThis work was supported by National Science Foundation grants NSF-ACI 1147944 and NSF-ACI1147912.ReferencesSteve Cassidy, Dominique Estival, Timothy Jones, Denis Burnham, and Jared Burghold.
2014.
The Alveo VirtualLaboratory: A Web based Repository API.
In Proceedings of the Ninth International Conference on LanguageResources and Evaluation (LREC?14), Reykjavik, Iceland, may.
European Language Resources Association(ELRA).Christopher Cieri, Denise DiPersio, , and Jonathan Wright.
2014.
Intellectual property rights management withweb services.
In Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT,Dublin, Ireland, August.David Ferrucci, Eric Nyberg, James Allan, Ken Barker, Eric Brown, Jennifer Chu-Carroll, Arthur Ciccolo, PabloDuboue, James Fan, David Gondek, Eduard Hovy, Boris Katz, Adam Lally, Michael McCord, Paul Morarescu,Bill Murdock, Bruce Porter, John Prager, Tomek Strzalkowski, Chris Welty, and Wlodek Zadrozny.
2009.Towards the Open Advancement of Question Answering Systems.
Technical report, IBM Research, Armonk,New York.David A. Ferrucci, Eric W. Brown, Jennifer Chu-Carroll, James Fan, David Gondek, Aditya Kalyanpur, AdamLally, J. William Murdock, Eric Nyberg, John M. Prager, Nico Schlaefer, and Christopher A. Welty.
2010.Building Watson: An overview of the DeepQA project.
AI Magazine, 31(3):59?79.Antske Fokkens, Marieke van Erp, Marten Postma, Ted Pedersen, Piek Vossen, and Nuno Freire.
2013.
Offspringfrom reproduction problems: What replication failure teaches us.
In Proceedings of the 51st Annual Meetingof the Association for Computational Linguistics (Volume 1: Long Papers), pages 1691?1701, Sofia, Bulgaria,August.
Association for Computational Linguistics.Elmer Garduno, Zi Yang, Avner Maiberg, Collin McCormack, Yan Fang, and Eric Nyberg.
2013.
CSE Frame-work: A UIMA-based Distributed System for Configuration Space Exploration Unstructured Information Man-agement Architecture.
In Peter Klgl, Richard Eckart de Castilho, and Katrin Tomanek, editors, UIMA@GSCL,CEUR Workshop Proceedings, pages 14?17.
CEUR-WS.org.Sebastian Hellmann, Jens Lehmann, S?oren Auer, and Martin Br?ummer.
2013.
Integrating nlp using linked data.In 12th International Semantic Web Conference, 21-25 October 2013, Sydney, Australia.Nancy Ide and James Pustejovsky.
2010.
What Does Interoperability Mean, Anyway?
Toward an OperationalDefinition of Interoperability.
In Proceedings of the Second International Conference on Global Interoperabilityfor Language Resources.
ICGL.Nancy Ide and Keith Suderman.
2014.
The Linguistic Annotation Framework: A Standard for Annotation Inter-change and Merging.
Language Resources and Evaluation.Nancy Ide, James Pustejovsky, Nicoletta Calzolari, and Claudia Soria.
2009.
The SILT and FlaReNet internationalcollaboration for interoperability.
In Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP,August.Nancy Ide, James Pustejovsky, Christopher Cieri, Eric Nyberg, Di Wang, Keith Suderman, Marc Verhagen, andJonathan Wright.
2014.
The language application grid.
In Proceedings of the Ninth International Conferenceon Language Resources and Evaluation (LREC?14), Reykjavik, Iceland, may.
European Language ResourcesAssociation (ELRA).ISO-24612.
2012.
Language Resource Management - Linguistic Annotation Framework.
ISO 24612.Alkesh Patel, Zi Yang, Eric Nyberg, and Teruko Mitamura.
2013.
Building an optimal QA system automaticallyusing configuration space exploration for QA4MRE?13 tasks.
In Proceedings of CLEF 2013.Zi Yang, Elmer Garduno, Yan Fang, Avner Maiberg, Collin McCormack, and Eric Nyberg.
2013.
Building optimalinformation systems automatically: Configuration space exploration for biomedical information systems.
InProceedings of the CIKM?13.43
