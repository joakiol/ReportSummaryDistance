Coling 2008: Companion volume ?
Posters and Demonstrations, pages 189?192Manchester, August 2008Temporal Processing with the TARSQI ToolkitMarc VerhagenBrandeis UniversityComputer Science Dept.Waltham, MA 02454-9110marc@cs.brandeis.eduJames PustejovskyBrandeis UniversityComputer Science Dept.Waltham, MA 02454-9110jamesp@cs.brandeis.eduAbstractWe present the TARSQI Toolkit (TTK),a modular system for automatic temporaland event annotation of natural languagetexts.
TTK identifies temporal expressionsand events in natural language texts, andparses the document to order events and toanchor them to temporal expressions.1 IntroductionA keyword-based search is not sufficient to answertemporally loaded questions like ?did Brazil winthe soccer world championship in 1970??
sincea boolean keyword search cannot distinguish be-tween those documents where the event win is ac-tually anchored to the year 1970 versus those thatare not.
The TARSQI Project (Temporal Aware-ness and Reasoning Systems for Question Inter-pretation) focused on enhancing natural languagequestion answering systems so that temporally-based questions about the events and entities innews articles can be addressed.
To explicitly markthe needed temporal relations the project deliv-ered a series of tools for extracting time expres-sions, events, subordination relations and tempo-ral relations (Verhagen et al, 2005; Mani et al,2006; Saur??
et al, 2005; Saur??
et al, 2006a).
Butalthough those tools performed reasonably well,they were not integrated in a principled way.This paper describes the TARSQI Toolkit(TTK), which takes the TARSQI components andintegrates them into a temporal parsing framework.The toolkit is different from the system describedin (Verhagen et al, 2005) in several major aspects:c?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.1.
the components were integrated in a toolkitwhich, amongst others, split the parsing ofproperties typical for a particular documenttype from the temporal parsing of the text2.
a component was added that takes the re-sults from the various components that gen-erate temporal relations and merges them intoa consistent temporal graph3.
a new way of visualizing the results was usedIn addition, some components were updated andtest suites with unit tests and regression tests wereadded.
In this paper, we focus on the merging oftemporal links and the visualization of temporal re-lations.There has been a fair amount of recent re-search on extraction of temporal relations, includ-ing (Chambers et al, 2007; Lapata and Lascarides,2006; Bramsen et al, 2006; Bethard and Martin,2007; Min et al, 2007; Pus?cas?u, 2007).
However,we are not aware of approaches that integrate tem-poral relations from various sources in one consis-tent whole.All TTK components use the TimeML anno-tation language (Pustejovsky et al, 2003; Puste-jovsky et al, 2005).
TimeML is an annotationscheme for markup of events, times, and theirtemporal relations in news articles.
The TimeMLscheme flags tensed verbs, adjectives, and nomi-nals with EVENT tags with various attributes, in-cluding the class of event, tense, grammatical as-pect, polarity (negative or positive), and any modaloperators which govern the event being tagged.Time expressions are flagged with TIMEX3 tags,an extension of the ACE 2004 TIMEX2 annotationscheme (tern.mitre.org).189Subordination relations between events, as forexample between reporting events and the em-bedded event reported on, are annotated with theSLINK tag.
For temporal relations, TimeML de-fines a TLINK tag that links tagged events to otherevents and/or times.In section 2, we will give a short overview of thetoolkit.
In section 3, we focus on the componentthat merges TLINKs, and in section 4 we will dwellon the visualization of temporal relations.2 Overview of the toolkitThe overall architecture of TTK is illustrated infigure 1 below.
Input text is first processed by theDocumentModel, which takes care of document-level properties like encoding and meta tags.
TheDocumentModel hands clean text to the othercomponents which are allowed to be more generic.DocumentModelPreProcessingTextGUTime EvitaSlinketTemporal ProcessingTemporal ParseFigure 1: TTK ArchitectureThe preprocessor uses standard approaches totokenization, part-of-speech tagging and chunk-ing.
GUTime is a temporal expression tagger thatrecognizes the extents and normalized values oftime expressions.
Evita is a domain-independentevent recognition tool that performs two maintasks: robust event identification and analysis ofgrammatical features such as tense and aspect.Slinket is an application developed to automat-ically introduce SLINKs, which in TimeML spec-ify subordinating relations between pairs of events,and classify them into factive, counterfactive, evi-dential, negative evidential, and modal, based onthe modal force of the subordinating event (Saur?
?et al, 2006b).
SLINKs are introduced by a well-delimited subgroup of verbal and nominal predi-cates (such as regret, say, promise and attempt),and in most cases clearly signaled by a subordina-tion context.
Slinket thus relies on a combinationof lexical and syntactic knowledge.The temporal processing stage includes threemodules that generate TLINKs: Blinker, S2T andthe TLink Classifier.Blinker is a rule-based component that appliesto certain configurations of events and timexes.
Itcontains rule sets for the following cases: (i) eventand timex in the same noun phrase, (ii) eventsand the document creation time, (iii) events withtheir syntactically subordinated events, (iv) eventsin conjunctions, (v) two main events in consecu-tive sentences, and (vi) timexes with other timexes.Each of these rule sets has a different flavor.
Forexample, the rules in (vi) simply calculate differ-ences in the normalized ISO value of the timextag while the rules in (v) refer to the tense andaspect values of the two events.
Blinker is a re-implementation and extension of GutenLink (Ver-hagen et al, 2005).S2T takes the output of Slinket and uses about adozen syntactic rules to map SLINKs onto TLINKs.For example, one S2T rule encodes that in SLINKswith reporting verbs where both events are in pasttense, the reporting event occurred after the eventreported on.The TLink Classifier is a MaxEnt classifierthat identifies temporal relations between identi-fied events in text.
The classifier accepts its inputfor each pair of events under consideration as a setof features.
It is trained on the TimeBank corpus(see www.timeml.org).Of the three TLINK generating components, S2Tderives a relatively small number of TLINKs, butBlinker and the classifier are quite prolific.
Inmany cases the TLINKs derived by Blinker and theclassifier are inconsistent with each other.
The sys-tem in (Verhagen et al, 2005) used a simple votingmechanism that favors TLINKs from componentsthat exhibit higher precision.
In addition, if con-fidence measures are available then these can beused by the voting mechanism.
However, this ap-proach does not factor in consistency of temporalrelations: choosing the TLINKs with the highestprobability may result in TLINKs that are incon-sistent.
For example, say we have two TLINKs:BEFORE(x,y) and BEFORE(y,z).
And say we have190two competing TLINKs, derived by Blinker andthe classifier respectively: BEFORE(x,z) and BE-FORE(z,x).
If the second of these two has a higherconfidence, then we will end up with an inconsis-tent annotation.
In the following section we de-scribe how in TTK this problem is avoided.3 Link MergerThe link merger, together with the three TLINK-generating components, is part of the temporalprocessing module of TTK, as shown in the dia-gram in figure 2 below.BlinkerClassifierS2TEventsandTimesALinksSLinksLink MergingSputLinkFigure 2: TTK Temporal ProcessingThe link merging component uses a greedy al-gorithm to merge TLinks into a consistent whole.First all links are ordered on their confidence score.Currently these scores are either global or local.Global confidence scores are derived from the ob-served precision of the component that generatedthe links.
For example, links generated by S2T areconsidered high precision and are always deemedmore reliable than links generated by the classifier.Links generated by the classifier come with a con-fidence score assigned by the classifier and thesescores are used to order all classifier links.Merging proceeds by first creating a graph thatcontains all events and time expressions as nodes,but that has no constraints expressed on the edges.Those constraints are added by the temporal links.Links are ordered on confidence score and areadded one by one.
Each time a link is added a con-straint propagation component named Sputlink,based on Allen?s interval algebra (Allen, 1983;Verhagen, 2005), is applied.
If a link cannot beadded because it is inconsistent with the constraintalready on the edge, then the link is skipped.
Theresult is a consistent annotation where high preci-sion links are prefered over lower precision links.4 VisualizationProviding a good visualization of a temporal graphcan be tricky.
A table of temporal relations isonly useful for relations inside sentences.
Fullgraphs, like the ones generated by GraphViz(http://www.graphviz.org/), do not make it thatmuch easier for the reader to quickly obtain a pic-ture of the temporal structure of the document.Timelines can be misleading because so manyevents in a document cannot be ordered with re-spect to a time stamp.TTK uses a visualization scheme named TBox(Verhagen, 2007).
It uses left-to-right arrows,box inclusion and stacking to encode temporalprecedence, inclusion, and simultaneity respec-tively (see figure 3).Figure 3: The TBox RepresentationThis visualization makes it easier to convey thetemporal content of a document since temporal re-lations are strictly and unambiguously mapped tospecific ways of drawing them.
And vice versa, aparticular way of positioning two events always in-dicates the same temporal relation.
Note that ver-tical positioning does not imply any temporal rela-tion.5 Conclusion and Future WorkWe have described TTK, a toolkit that integratesseveral components that generate tags to markup events and time expressions, as well as non-consuming tags that encode relations betweenevents and times.
TTK includes a module thatcombines potentially conflicting temporal rela-tions into a consistent temporal graph of a docu-ment, which can be succinctly displayed using theTBox representation.In current work, we are exploring how to split upthe task of temporal relation extraction into moresubtasks and write specialized components, bothrule-based and machine learning based, to extracttemporal relations for that task.
The link mergingwould then have many more input streams, eachwith their own reported reliability.The TARSQI Toolkit can be downloaded fromhttp://timeml.org/site/tarsqi/toolkit/.191AcknowledgmentsThe work reported in the paper was carriedout in the context of the AQUAINT programand was funded under ARDA/DoD/IARPA grantNBCHC040027.ReferencesAllen, James.
1983.
Maintaining Knowledge aboutTemporal Intervals.
Communications of the ACM,26(11):832?843.Bethard, Steven and James H. Martin.
2007.
CU-TMP: Temporal relation classification using syntac-tic and semantic features.
In Proceedings of theFourth International Workshop on Semantic Eval-uations (SemEval-2007), pages 129?132, Prague,Czech Republic, June.
Association for Computa-tional Linguistics.Bramsen, Philip, Pawan Deshpande, Yoong Keok Lee-and, and Regina Barzilay.
2006.
Finding tempo-ral order in discharge summaries.
In Proceedings ofEMNLP.Chambers, Nathanael, Shan Wang, and Dan Juraf-sky.
2007.
Classifying temporal relations betweenevents.
In Proceedings of the 45th Annual Meet-ing of the Association for Computational Linguis-tics Companion Volume Proceedings of the Demoand Poster Sessions, pages 173?176, Prague, CzechRepublic, June.
Association for Computational Lin-guistics.Lapata, Mirella and Alex Lascarides.
2006.
Learningsentence-internal temporal relations.
Journal of Ar-tificial Intelligence Research, 27:85?117.Mani, Inderjeet, Ben Wellner, Marc Verhagen,Chong Min Lee, and James Pustejovsky.
2006.
Ma-chine learning of temporal relations.
In Proceedingsof the 44th Annual Meeting of the Association forComputational Linguistics, Sydney.
ACL.Min, Congmin, Munirathnam Srikanth, and AbrahamFowler.
2007.
LCC-TE: A hybrid approach to tem-poral relation identification in news text.
In Pro-ceedings of the Fourth International Workshop onSemantic Evaluations (SemEval-2007), pages 219?222, Prague, Czech Republic, June.
Association forComputational Linguistics.Pus?cas?u, Georgiana.
2007.
WVALI: Temporal re-lation identification by syntactico-semantic analy-sis.
In Proceedings of the Fourth InternationalWorkshop on Semantic Evaluations (SemEval-2007),pages 484?487, Prague, Czech Republic, June.
As-sociation for Computational Linguistics.Pustejovsky, James, Jos?e Casta?no, Robert Ingria, RoserSaur?
?, Robert Gaizauskas, Andrea Setzer, and Gra-ham Katz.
2003.
TimeML: Robust Specification ofEvent and Temporal Expressions in Text.
In IWCS-5Fifth International Workshop on Computational Se-mantics.Pustejovsky, James, Robert Knippen, Jessica Littman,and Roser Saur??.
2005.
Temporal and event in-formation in natural language text.
Language Re-sources and Evaluation, 39:123?164, May.Saur?
?, Roser, Robert Knippen, Marc Verhagen, andJames Pustejovsky.
2005.
Evita: A robust eventrecognizer for qa systems.
In Proceedings of theHLT/EMNLP 2005, pages 700?707.Saur?
?, Roser, Marc Verhagen, and James Pustejovsky.2006a.
Annotating and recognizing event modal-ity in text.
In Proceedings of of the 19th Inter-national FLAIRS Conference, FLAIRS 2006, Mel-bourne Beach, Florida, USA.Saur?
?, Roser, Marc Verhagen, and James Pustejovsky.2006b.
SlinkET: A partial modal parser for events.In Proceedings of LREC 2006, Genoa, Italy.Verhagen, Marc, Inderjeet Mani, Roser Sauri, Jes-sica Littman, Robert Knippen, Seok Bae Jang,Anna Rumshisky, John Phillips, and James Puste-jovsky.
2005.
Automating temporal annotation withTARSQI.
In Proceedings of the 43th Annual Meet-ing of the Association for Computational Linguistics,Ann Arbor, USA.
Demo session.Verhagen, Marc.
2005.
Temporal closure in an annota-tion environment.
Language Resources and Evalua-tion, 39:211?241, May.Verhagen, Marc.
2007.
Drawing TimeML relationswith TBox.
In Katz, Graham, James Pustejovsky,and Frank Schilder, editors, Annotating, Extractingand Reasoning about Time and Events, volume 4795of Lecture Notes in Computer Science, pages 7?28.Springer.192
