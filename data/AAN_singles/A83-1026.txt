iNVESTIGATING THE POSSIBILITY OF A HICROPROCESSOR-BASEDMACIIINE TRANSLATTON SYSTEMHaro ld  L. SomersCentre fo r  Computat iona l  L ingu is t i csUn ivers i ty  of  Hanchester  Ins t i tu te  o f  Sc ience and TechnologyPO Box RR, Manchester  H60 tqO, EnglandABSTRACTThis  paper descr ibes  an on-go in~ researchpro jec t  be ing car r ied  out  by s ta f f  and s tudents  acthe Centre fo r  Computat iona l  L ingu is t i cs  coexamine the feas ib i l i ty  o f  Hachine Trans la t ion(~T) in a mic roprocessor  env i ronment .
The systemincorporates  as fa r  as ~oss ih le  ~eacures of  large-sca le  HT systems ~hac have proved des i rab le  o re f fec t ive :  i t  is mutC i l inRua l ,  a lgor i thms andda~a are s t r i c t ly  separated ,  and the system ish i=h ly  modu lar .
Problems of  te rmino log ica lpolysemy and syntact i c  complex i ty  are reduced v iathe not ions  of  cont ro l led  vocabu lary  andres t r i c ted  syntax .
~ iven  these const ra in ts ,  iEseems feas ib le  Co ach ieve  t ranstac ion  v ia  an' i n ter t tngua ' ,  avo id in~ any language-pa i r  o r iented' t rans fer '  scare .
The paper concent ra tes  on adescr ip t ion  of the separate  modules in thet rans la~ion  process as they  are cur rent lyenv isaged,  and decat ts  some of the problemsspec i f i c  to  the microprocessor -based  approach to~ chac have So ~ar come tO t ight .I.
BACKC2OU:'D ;'-':D '.
'V?2VI':"This paper describes preliminary research inthe design of Bede, a limited-syntax control led-vocabu lary  ~achine Trans la t ion  system co run on amicroprocessor ,  t rans lac ine  between Eng l i sh ,~rench,  Cerman and Dutch.
Our exper imenta l  corpusis a car - rad io  manual.
Bede (named a f ter  the 7thCencury Eng l i sh  t in~u is t ) ,  is essent ia l l y  aresearch project: we are noc immediately concerned~v~ch commercial  apo l i cac ions ,  though such arec lear ly  possible if the research proves f ru i t fu l .
":ork on Bede ac th i s  stage thouRh is p r imar i lyexperimentnl.
The aim at the moment \[s coinvest igate  the extent  to which a microprocessor -based ~ system of advanced des i2n is Poss ib le ,and the l im i ta t ions  that  have to be imposed inorder co achieve .~ ~or;<in~ system.
This paper'Je~crihes the overall system design snec i f~c~Ciont) .~n?cn we are currently working.~n cite bas ic  des ign of the system we at tempt  toincorporate  as much as poss ib le  Features  of  fa r ,e -scale ~ systems ~hac have proved to be des i rab leor ef fect ive.
Thus.
Bede is mul~ilinBual by,~csi(zn.
alqorithms and l inRuistic data arestriccl~ separated, and the system \[s desiRned in~ore o- less independent modules.T~n ~\[cron'occssor environment means that~:r~r~l ~I" s iz~ ~ro ~{~norE,l~E: '4~ta ~cruccures169both  dynamic (c reated  by and man iputated  dur ingthe t rans la t ion  process) and static (d ic t ionar iesand l ingu is t i c  ru le  packages) are const ra ined  cobe as economical  in terms of  s?oraBe space andaccess procedures  as poss ib le .
L imi ta t ions  on ~n-core and per iohera \ [  s to rage  are impor tantcons iderat ions  in  the system des ign .In  la rge  genera\[ purpose ,HT systems,  i= isnecessary  to assume that  fa i tu re  to t rans la te  theg iven  input  cor rect ty  is genera l ly  not due toincorrectly ~ormed input ,  bu~ to \ [nsu f f i c ient Jye laborated  ~rans lac ion  a lgor i thms.
Th is  ispar t i cu la r ly  due to =wo prob lems:  the lex ica lproblem o f  cho ice  of  appropr ia te  t rans la t ionequ iva lents ,  and the s t ra teg ic  problem ofe~fec~ive  ana lys i s  of the wide range of syntact i cpat terns  Eound in nacura l  language.
The reduct iono f  these problems v ia  ~he not ions  of" cont ro l ledvocabu\[ary and restricted syntax seemspar t i cu la r ly  appropr ia te  in the microprocessorenv i ronment ,  s ince the a l te rnat ive  of makin~ asystem |n~tnitely extendable \[s probably no~feasible,Given these const ra /n ts ,  i t  seems feas ib le  toach ieve  c ranstac ion  v ia  an InCer l tngua .
~n ~h ichthe canon icat  s t ructures  from the source lan=ua~eare mapped d i rec t ly  onto those of  the ta rgetlanguage(s ) ,  avo id in  R any l anguage-pa i r  o r iented' t rans fer '  s ta~e.
T rans la t ion  thus cakes p lace in~wu puase~= ana iys l s  ot  source ~ext an~ synthes iso f  ta rget  text .A.
Incorporat ion  of  recent  desL~n or tnc io \ [es~odern ~ system des ign  can be char~cterLsed  hvthree  pr inc ip les  thac have proved Co be des i rab leand e f fec t ive  (Lehmann eta \ [ ,  tg~}o: I - \ ] ) :  each ofthese is adhered co in the desiRn oF Rede.Bede Es mutt\[l ingual by design: early "!Tsystems were designed with specific lan~uaBe-oatrsin mind, and t rans la t ion  a lgor i thms weree laborated  on th i s  bas is .
The main conseouence ofthis was that source lan~uaRe analysis ~?asef fec ted  w i th in  the perspect ive  of  the B~ventarget  \[anguaRe, and was there fore  o f ten  of  l i t t leor  no use on the add i t ion  in to  the system of  afurther language (of.
~in~, IORI:12; ~:in~Perschke, 1982:28).In Bede, there  is a s t r i c t  separat ion  ofa lgor i thms and \ [ ingu isc ic  data :  oar lv  "T ~y~ccms'~ere qu i te  sin~n\[y ' t rans la t ion  nrc~ra :~s ' ,  tnd ~nvunderlying linguistic theory which might have beenpresent was inextricably bound up with the programitself.
This clearly entailed the disadvantagethat any modification of the system had to be doneby a skilled programmer (of.
Johnson, IgRO:IAO).Furthermore, the side-effects of apparently quiteinnocent modifications were often quite far-reaching and difficult to trace (see for exampleBoscad, lq82:130) ,  Although th i s  has onlyrecent ly  become an issue in HT (e .g .
Vauquois,1979: I .3 ;  1981=10), i t  has of course for  a longtime been standard pract i ce  in other  areas ofknowledge-based programming (Newel l ,  1973; Davis &King, 1977) .The third principle now current in MT and to beincorporated in Bede is that the translationprocess should be modular.
This approach was afeature of the earliest 'second generation'systems (o f .
Vauquois, 1975:33), and ischaracter i sed  by the general not ion  that  anycompl icated computat ional  task is  best tack led bydividing it up into smaller more or lessindependent sub-casks which communicate only bymeans of a strictly defined interface protocol(Aho et al 1974).
This is typically achieved inthe bit environment by a gross division of thetranslation process into  analysis of sourcelanguage and synthesis of target language,possibly with an intermediate transfer sca~e (see!.D below), with these phases in turn sub-divided,for example into morphological, lexical andsyntactico-semantlc modules.
This modularity maybe reflected both in the linguistic organisationof the translation process and in the provision ofsoftware devices specifically tailored to there levant  sub-task (Vauquois, 1975:33).
This isthe case in Bede, where for each sub-task agrammar interpreter is provided which has theproperty of being no more powerful than necessaryfor the task in question.
This contrasts with theapproach taken in TAt~-H~c~o (TAUM, Ig73), where asingle general-purpose device (Colmerauer's (1970)'O-Systems') is orovided,  w i th  the associateddisadvantage that for  some 's imple '  tasks thesuperfluous power of the device means thatprocesses are seriously uneconomical.
Bedeincorporates five such 'grammar types'  withassociated individual formalisms and processors:these are described in detail in the second halfof this paper.B.
The microproce,ssor environment!t is in the microprocessor basis that theprinciple interest in this system lies, and, asmentioned above, the main concern is the effectsof the res t r i c t ions  that  the environment imposes.Development of the Bede prototype is present lycaking place on ZRO-based machines which provide6Ak bytes of in-core memory and 72Ok bytes ofperipheral store on two 5-I/~" double-sideddouble-density floppy disks.
The intention isthat any commercial version of Bede would run onmore powerful processors with larger addressspace, since we feel  chat such machines w i l l  soonrival the nopularity of the less powerful ZRO's asthe standard desk-cop hardware.
Pro~rarzninR sofar  has been in Pascal -"  (Sorcim, 197q), a Pascald ia lec t  c lose ly  resembling UCSD Pascal,  but we areconscious of the fact that both C (Kernighan &Ritchie, 1978) and BCPL (Richards & Whitby-Strevens, Ig7g) may be more suitable for some ofthe software elements, and do not rule outcompleting the prototype in a number of languages.This adds the burden of designing compatible data-structures and interfaces, and we are currentlyinvestigating the relative merits of theselanguages.
Portability and efficiency seem to bein conflict here.Microprocessor-based MT cont ras ts  sharply wi ththe mainframe-based activity, where thesignificance of problems of economy of storage andefficiency of programs has decreased in recentyears.
The possibility of introducing an elementof human interaction with the system (of.
Kay,Ig80; Melby, 1981) is also highlighted in thisenvironment.
Contrast systems like SYSTRAN (Toma,1977) and GETA (Vauquois, 1975, lq7g; Boiler &Nedobejkine, IggO) which work on the principle oflarge-scale processing in batch mode.Our experience so far is chat the economy andefficiency in data-structure design and in theelaboration of interactions between programs anddata and between different modules is of paramountimportance.
While it is relatively evident thacl a rge -sca le  HT can be s imulated in themicroprocessor  environment, the cost in rea l  timeis tremendous: entirely new design ~ndimplementation strategies seem co be called for.The ancient skills of the programmer that havebecome eroded by the generosity afforded by modernmainframe configurations become highly valued inthis microprocessor application.C.
Cont ro l led  vocabulary and res t r i c ted  sync@xThe state of the art of language processing issuch chat the analysis of a significant range ofsyntactic patterns has been shown to be possible,and by means of a number of different approaches.Research in this area nowadays is concentrated onthe treatment of more problematic constructions(e.g.
Harcus, lqgO).
This observation has led ustO believe that a degree of success in a smallscale MT project can be achieved via the notion ofres t r i c t ing  the complex i ty  of acceptable input ,  sothat only constructions that are sure tc neCorrectly analysed are permitted.
This notion ofres t r i c ted  syntax  ~ has been t r ied  wi th  somesuccess in larger systems (c f .
Elliston, IGYn:Lawson, 107q:81f; Somers & HcNaught, I9~O:ao~,resu l t ing  both in more accurate t rans la t ion ,  andin increased legibility from t~e human point ofview.
AS Elliston points  out, the development efstrict guidelines for writers leads not only t :the use of simpler constructions, but also to =heavoidance of potentially ambiguous text.
Ineither case, the benefits for ~ are obvious.Less obvious however is the acceptability of suchconstraints; yet 'restricted syntax' need nocimply 'baby ta lk ' ,  and a reasonably extensiverange of constructions can be included.Just as problems of syntact i c  analys is  ca~: e(.alleviated by imposing some degree of contrn~ over150the syntact i c  complexity of the input ,  so thecorresponding problem of  lex ica l  disambiguationchat la rge-sca le  HT systems are faced with can beeased by the not ion of cont ro l led  vocabulary.
Amajor problem for  PIT is the choice of appropr iatet rans la t ion  equiva lents  at the lex ica l  leve l ,  achoice o f ten determined by a var ie ty  of fac tors  ata l l  l i ngu is t i c  leve ls  (syntax,  semantics,pragmatics) .
In the f ie ld  of mulCi l ingua lterminology,  th is  problem has been tackled v ia  theconcept of te rmino log ica l  equivalence (WUster,1971): for  a given concept in one l anguage,  at rans la t ion  in another language is es tab l i shed ,these being considered by de f in i t ion  to be in one-to-one correspondence.
In the case of Beds, wherethe sub jec t -mat ter  of the texts  to be t rans la tedis f i xed ,  such an approach for  the ' techn ica lterms' in the corpus is c lear ly  feas ib le ;  thenot ion is extended as far  as poss ib le  to generalvocabulary as we l l .
For each concept a s ing leterm only i s  permit ted,  and although the resu l t ings ty le  may appear less mature (s ince the use ofnear synonyms for  the sake of var ie ty  is notpermi t ted) ,  the problems described above aresomewhat a l lev ia ted .
Polysemy is noC ent i re lyavo idab le ,  but i f  reduced co a bare  minimum, andpermi t ted  only in spec i f i c  and acknowledgedcircumstances, the problem becomes more eas i lymanageable.D.
In ter l in~uaA s ign i f i cant  dichotomy in PIT is between the' t rans fer '  and ' tn ter l ingua '  approaches.
Theformer can be character i sed  by the use ofb i l ingua l  t rans fer  modules which convert theresu l t s  of the analys is  of the source languageinto a representat ion  appropr iate  for  a spec i f i cta rget  language.
This contrasts  wlth thein ter l ingua  avproach in which the resu l t  ofanalys is  is passed d i rec t ly  co the appropr iatesynthesis module.I t  is beyond the scope of the present paper todiscuss in deta i l  the re la t ive  mer i ts  of the twoapproaches (see Vauquois, i975 : l&2f f ;  Hutchins,lq78).
I~ should however consider soma of themajor obstacles inherent in the incer l inguaapproach.The development of an In ter l ingua  for  var iouspurposes (noc only t rans la t ion)  has been thesubject of ph i losoph ica l  debate for  some years,and proposals for  ~T have included the use offormal ized natural  language (e.g.
Hel'~uk, Ig7&;Andreev, lg67), ar t i f i c ia l  languages (like~soeranco), or various symbolic representat ions ,~hecher linear (e.~.
BUlcins, I061) or otherwise(e.~.
"~ilks, 1073).
Host of chess approaches areproblematic however ( fo r  a thorough discussion ofthe lncer l ingua approach co ~,  see Often & Pacak(1071) and Barnes (ig83)).
Nevertheless, someincer l ingua-based HT systems have been developedco a considerable degree: for  example, the~renohle team's first attempts at wT cook thisapproach (Ve i l l on ,  106R), whi le the TITUS systems t i l l  in use ac the ?nscicut Text i le  de France(Ducroc.
Ig72; Zinge\[, 1~78~ is claimed to be(ncerl in~u,l-based.151I t  seems that  i t  can be assumed a pr io r i  thacan ent i re ly  language-independent theoret i ca lrepresentat ion  of a given text  is for  allpract i ca l  purposes impossible.
A more rea l i s t i cta rget  seems to be a representat ion  in whichs ign i f i cant  syntact i c  d i f fe rences  between thelanguages in quest ion are neut ra l i zed  so chat thebest one can aim fo r  is a languages-spec i f ic  ( s i c )representat ion .
This approach impl ies thede f in i t ion  of an In ter l ingua  which cakes advantageof  anything the languages in the system have incommon, whi le  accomodating the i r  id iosyncras ies .This mains chat for  ?
system which involvesseveral  fairly c lose ly  re la ted  languages thein ter l insua  approach is at least  feas ib le ,  on theunderstanding that the in t roduct ion  of as ign i f i cant ly  d i f fe rent  type of language mayinvolve the complete redef in i t ion  of theIncer l ingua  (Barnes, 1983).
~rom the point  ofview of Beds, then, the common base of thelanguages involved can be used to great advantage.The not ion of  res t r i c ted  syntax described abovecan be employed to f i l te r  out const ruct ions  chaccause par t i cu la r  problems for  the chosenIn ter l ingua  representat ion .There remains however the problem of ~herepresentat ion  of lex ica l  items in theIn ter l ingua .
Theoret ica l  approaches co th i sproblem (e .g .
Andreev, 1967) seem qui teunsat i s fac tory .
BuC the not ion of cont ro l ledvocabulary" seems to o f fe r  a so lu t ion .
If a one-co-one equivalence of ' techn ica l '  terms can beachieved, th i s  leaves only a re la t ive ly  small areaof  vocabulary for which an incer l ingua lrepresentat ion  must be devised.
I t  seemsreasonable, on a small scale,  co t reat  generalvocaOuiary tn an enelagous way co techn ica lvocabulary,  in par t i cu la r  c reat ing  lex ica l  itemsin one language that  are ambiguous with respect coany of the ocher languages as 'homographs'.
Their'd isambiguat ion '  must cake place in Analys is  asthere is no b i l tgua l  'T rans fer '  phase, andSynthesis is purely deterministic.
While thisapproach would be quite unsuitable for  a larRe-scale general purpose HT system, in the presentcontext  - where the problem can be minimised - ~cseems Co be a reasonable approach.Our own model for  the Bede tnCerl ingua has nocyet been f ina l i sed .
We bel ieve th is  co be an areafor  research and exper imentat ion once the systemsoftware has been more fu l ly  developed.
~urcurrent  hypothesis is chat the In ter l inRua w i l lcake the form of a canonical representation of thetext in which valency-houndness and (deep) ~ewi l l  play a s ign i f i cant  ro le .
Sentent ia l  featuressuch as tense and aspect wi l l  be capcured by' un iversa l '  system of values for  the languagesinvolved.
This concepcion of an In ter l inguac lear ly  fa l l s  short of the language-independentp ivot  representat ion  typ ica l ly  envisaged Ccf.Boitet & NedobeJklne, 1980:2), but we hope :odemonstrate chac i t  is su f f i c ient  for  thelanguages in our system, and chat i t  could beadapted wi thout  s ign i f i cant  d i f f i cu l t ies  to caterfor  the in t roduct ion  of other ( re la ted)  WesternEuropean languages.
We feel  chat research in chLsarea will, when the time comes, be a siEniflcancand valuable by-product of the pro jec t  as a whole.II.
DESCRIPTION OF THE SYSTEM DESIGNIn this second half of the paper we present adescription of the translation process in Bede, asit is currently envisaged.
The process is dividedbroadly into two parts, analysis and synthesis,the interface between the two being provided bythe Interlingua.
The analysis module uses aChar t - l i ke  s t ruc ture  (c f .
Kaplan, 1973) and aseries of grammars to produce from the source textthe Incerlingua tree structure which serves asinput to synthesis, where it is rearranged into ava l id  surface s t ruc ture  for  the ta rget  language.The ' t rans la t ion  un i t '  (TU) is taken co be thesentence, or equ iva lent  (e .g .
sect ion heading,title, figure caption).
Full details of the ruleformalisms are given in Somers (Ig81).A.
Strln~ segmentationThe TU is first subjected to a two-stagestring-segmentation and 'lemmatlsation' analysis.In the first stage it is compared word by wordwith a 'stop-list' of frequently occurring words(mostly funct ion  words); words not found in thestop-list undergo str ing-segmentatlon analysis,again on a word by word basis.
String-segmentation rules form a f inite-state grammar ofaff ix-str ipping ru les  ('A-rules') which handlemostly inflectional morphology.
The output is aChart with labelled arcs indicating lexical unit(LU) and possible interpretatio n o?
the s t r ippedaffixes, this 'hypothesis' to be confirmed bydictionary look-up.
By way of example, consider(I~, a possible French rule, which takes any wordending in -issons (e.g.
finissons or h4rissons)and constructs an arc on the Chart recording thehypothesis that the word is an inflected form ofan '-it' verb (i.e.
finir or *h4rir).
(I) V + "-ISSONS" ~ V ~ "-IR"\[PERS=I & NUM=PLUR & TENSE=PRES & HOOD=INDIC\]At the end of d ic t ionary  l ook -up ,  a temporary'sentence d ic t ionary '  is created,  cons is t ing  ofcopies of the d ic t ionary  ent r ies  for  (on ly)  thoseLUs found in the current TU.
This is purely aneff iciency measure.
The sentence dictionary mayof course include entries for  homographs whichwill later be re jec ted .B.
S t ruc tura l  ana lys i sI .  '
P - ru les 'The chart then undergoes a two-stage structuralana lysts .
In the f i r s t  stage, context -sens i t i veaugmented phrase-s t ruc ture  ru les ( 'P - ru les ' )  worktowards c reat ing  a s ingle arc spanning the ent i reTU.
Arcs are labelled with appropriate syntacticclass and syncact ico-semant ic  feature  informationand a trace of the lower arcs which have beensubsumed from which the parse tree can be simplyextracted.
The trivial P-rule (2) iS provided asan examnle.
(2) <NUM(DET)=NUM(N) & GDR(DET) .
INT .GDR(N~ r.. ~ >DET + N -~ NP<GDR(NP):=GDR(N) & NUM(NP 3:=NLvM(N) ?P-ru les  consist of ' cond i t ion  s t ipu la t ions ' ,  a'geometry ' ,  and 'assignment s t ipu la t ions ' .
Thenodes of the Chart are by de fau l t  ident i f ied  bythe value of the assoc iated var iab le  CLASS, thoughi t  is also poss ib le  to re fe r  to a node by a loca lvar iab le  name and tes t  for  or assign the value ofCLASS in the s t ipu la t ions .
Our ru le  formal ismsare qu i te  de l iberate ly  designed to re f lec t  theformalisms of traditional l inguist ics .This formalism allows experimentation with alarge number of different context-free parsinga lgor i thms.
We are in fac t  s t i l l  exper iment ing inth i s  area.
For a s imi la r  invest igat ion ,  though ona machine with signif icantly different time andspace const ra in ts ,  see Slocum (1981) .2.
'T-rules'In the second stage of s t ruc tura l  ana lys i s ,  thet ree s t ruc ture  impl ied by the labels  and traces onthese arcs is d i s jo ined  from the Char~ andundergoes general t ree -Co-c ree- t ransduct ions  asdescr ibed by 'T - ru les ' ,  resu l t ing  in a s ing le  treestructure representing the canonical form of theTU.?
The formalism for the T-rules is similar cothat for  the P-rules, except in the geometry part,where tree structures rather than arc sequencesare defined.
Consider the necessari ly morecomplex (though still simplified) example (3~.which regularises a simple English passive.
(3) < LU(AUX)="BE" & PART(V)=PASTPART &LU(PREP)="BY" & CASE(NP{2})=ACE?
;T >S(NP{I} * AUX - V ?
NP{2}(PREP .
~)s (~P(2}(s )  ~ v + ~p{ l})<DSF(NP{2}):=DSUJ & VOICE(V):=PASSV &DSF(NP{I}:=DOBJ ?Notice the necessity to 'disamb?Ruate' the twoNPs via curly-bracketted disamblRuators; thepossibi l ity of defining a partial geometry via the'dummy' symbol ($~; and how the AUX and PREP areeliminated in the resulting tree structure.Labell ings for nodes are copied over by defaultunless specif ically suppressed.With source-language LUs replaced by uniquemul t i i i ngua l -d ic t ionary  addresses, th is  canonicalrepresentat ion  is the In ter l ingua  which is passedfor  synthesis  in to  the target  language(s~.C.
SynthesisAssuming the analys is  has been cor rec t lyper formed,  synthesis  is a relatively straight-forward determin is t i c  process.
Synthesiscommences with the application of further T-ruleswhich assign new order and structure ~o sheInterlingua as appropriate.
The synthesis T-rulesfor a given language can be viewed as analogues ~fthe T-rules that are used for analysis of thatlanguage, though it is unlikely that for syntbes~s152the ana lys i s  ru les  could be simpLy reversed,Once the des i red  s t ruc ture  has been ar r ived  a t ,the trees undergo a ser ies  of  context -sens i t iverules used to assign mainly syntactic features cothe leaves ( ' L - ru les ' ) ,  fo r  example fo r  thepurpose of  ass ign ing  number and gender concord(e tc . )
.
The formal ism for the L - ru les  is ag l ins imi la r  to that  fo r  the p - ru les  and T - ru les ,  thegeOmett'y per t  th i s  time def inYng a s ing le  t rees t ruc ture  with no s t ructura l  modificationimpl ied .
A simple example fo r  German is p rov idedhere (4 ) .
(4) <SF(NP)=SUBJ>NP(Drr + N)<CASE(DET):=NOH & CASE(N):=NOH &NI~H(DET):=NUH(NP) & GDR(DET):-GDR(N)>The llst of  labe l led  leaves resu l t ing  from theapp l i ca t ion  of  L - ru les  is  passed to morpho log ica lsynthesis (the superior branches are no longerneeded), where a f in i te -s ta te  grammar ofmorpbographemic and a f f txat ion  ru les  ( 'H - ru les ' )is app l ied  to produce the ta rget  s t r ing .
Theformal ism for  H- ru les  is much less complex thanthe A - ru le  fomel i sm,  the grammar being agains t ra ight fo rward ly  deterministic.
The only tax ingrequirement of  the M-ru le  formal ism (which,  at the~ime of  wr i t ing ,  has not been f ina l i sed)  is  thati t  must permit  a wide var ie ty  of  s t r ingmanipu la t ions  to be descr ibed,  and that  it mustde f ine  a t ransaparent  in ter face  with thed ic t ionary .
A typ ica l  ru le  fo r  French fo r  examplemight consist of  s t ipu la t ions  concerningi n fo rmat ion  found both on the lea f  in quest ion  andin the d ic t ionary ,  as in (5 ) .
(5) lea f  in fo .
:  CLASS.V; TENSE.PRES; NUH.SING;PEgs-3; HOOD=INDICdict.
info.
: CONJ(V)=IRREGassign: Af f ix  "-T" to STEHI(V)D. General comments on system designThe general modular i ty  of the system wi l l  havebeen qu i te  ev ident .
A key fac tor ,  as mentionedabove, is that each of these grammars is j us tpowerful enough for the cask required of It: thusno computing power is 'wasted'  at any of  thein termediate  stages.At each interface between grammars on ly  a smallpart  of  the data s t ruc tures  used by the donat ingmodule is requ i red  by the rece iv ing  module.
The'unwanted' data s t ruc tures  are wr i t ten  toperipheral store co enable recovery of partials~ructures in the case of fa i lure ormistranslation, though automatic backtracking toprevious modules by the system as such is notenvisaged as a major component.The ' s ta t i c '  data used by the system consist ofthe d i f fe rent  sets of  l~nguistic ru le  packages,plus ~he d ic t ionary .
The system essent ia l l y  hasone large mu\[ti l ingual d ic t ionary  from whichnumerous software packages generate varioussubd icc ionar ies  as required either in the:rans\[acion process itself, or for lexicographers153working on the system.
Alphabetical or otherstructured language-specific listings can beproduced, while of course dictionary updating andediting packages are a lso  prov ided .The system as a whole can be viewed as aco l lec t ion  o f  Product ion  Systems (PSs) (Newel l ,1973; Davis & King, 1977; see a lso  Ashman (1982)on the use of  PSs in HT) in the way that  the ru lepackages (which,  inc identa l ly ,  as an e f f i c ient7i I~a lute ,  undergo separate syntax ver i f i ca t ion  and' compi la t ion '  in to  in terpretab le  ' code ' )  operateon the data s t ruc ture .
The system d i f fe rs  fromthe c lass ica l  PS setup in d i s t r ibut ing  i t s  s ta t i cdata over two databases:  the ru le  packages and thed ic t ionary .
The combinat ion of the ru le  packagesand the d ic t ionary ,  the sof tware  in ter fac ingthese,  end the ru le  in terpreter  can however becons idered as analgous to the rule i n te rpreter  ofa c lass ica l  P$.IIl.
CONCLUSIONAs an experimental research project, Bedeprovides us with an extremely varied range ofcomputational linguistics problems, ranging fromthe pr inc ipa l ly  l ingu is t i c  task of  ru le -wr i t ing ,to the essent ia l l y  computat iona l  work of sof twaretmplen~lncatton, wi th  lex icography  and termino logyp lay ing  the i r  par t  along the way.gut we hope too that  Bade is more than anacademic exerc i se ,  and that  we are making as ign i f i cant  cont r ibut ion  to app l ied  Computat ionall ingu is t i cs  research.IV.
ACKNOWLEDCHENTSI present  th i s  paper on ly  as spokesman fo r  alarge group o?
people who have worked, arework ing,  or w i l l  work on Bede.
There fore  I wouldl i ke  to thank co l leagues  and students  at C .C.L .
,past ,  present ,  and future for their work on thepro jec t ,  and in par t i cu la r  Rod Johnson, JockHcNeughc,  Pete White lock,  K ieran ~ i lby ,  TonzBarnes, Paul Bennett and Rever ley Ashman fo r  he\[~with ~his wr i te -up .
I of course acceptrespons ib i l i ty  fo r  any er rors  thac s l ipped  throughthat  t ight  net .V.
REFERENCESAho, A l f red  V.,  John E. Hopcrofc & Je f f rey  B.Utlman.
The design and ana lys i s  of  computera lgor i thms.
Reading, Hass.
:  Addison- : ;es lev .Ig74.Andreev, N.D.
The in termed iary  language as thefoca l  po int  of  machine t rans la t ion .
In A.D.Booth (ed) ,  Hachine Trans la t ion ,  Amsterdam:Nor th -Ho l land ,  1967, 1-27.Ashman, Bever ley  D. Product ion Systems and the i rapp l i ca t ion  to Hachine Transl#,t ion~ Trans ferReport (CCL/UHIST Report No.
~2/01.
~fanchester:Centre fo r  Computat ional  L ingu is t i cs ,  Un ivers i tyof  Hanchester Ins t i tu te  of  Science andTechnology, 1982.Barnes, Antonia M.N.
An investigation into thesyntactic structures of abstracts, and thedefinition of an 'interlingua' for theirtranslation by machine.
MSc thesis.
Centre forComputational Linguistics, University ofManchester Institute of Science and Technology,1983.Boiler, C. & N. NedobeJkine.
Russian-French atGETA: Outline of the method and derailed example(Rapport de Recherche No.
219).
Grenoble: GETA,1980.B~Iting, Rudolph.
A double  in termediate  languagefor Machine Translation.
In Allen Kent (ed),Information Retrieval and Machine Translation,Part 2 (Advances in Documentation and LibraryScience, Volume III), New York: Interscience,1961, I139-I144.Boscad, Dale A.
Quality control procedures inmodification of the Air Force Russian-English MTsystem.
In Veronica Lawson (ed), PracticalExperience of Machine Translation, Amsterdam:North-Holland, 1982, 129-133.Colmerauer, Alain.
Les syst~mes-Q: ou unformalisme pour anal~ser et s~nthdciser desphrases sur ordinateur.
(Publication interne no.43).
Moncr4al: Projet de Traduction Automatiquede l'Universitd de Montr4al, 1970.Davis, Randall & Jonathan King.
An overview ofProduction Systems.
In E.W.
Elcock & D. Michie(eds), Machine Intelligence Volume 81 Machinerepresentation of knowledBe, New York: Halated,1977, 300-332.Ducroc, J .M.
Research for an automatictranslation s~stem for the diffusion ofscientific and technical textile documentationin English speaking countries: F ina l  report.Boulogne-Billancourt: Insticut Textile deFrance, I972.Kernighan, Brian W. & Dennis ~I.
Ritchi~.
~he Cprogrammin K language.
Eng|ewood Cli~fs, ~:J:Prentice-Hall, 1978.King, M. EUROTRA - a European system for machinetranslation.
Lebende Sprachen 1981, 26:12-1&.King, M. & S. Perschke.
EUROTRA and its object-ives.
Multilin~ua, 1982, 1127-32.Lawson, Veronica.
Tigers and polar bears, or:translating and the computer.
The IncorpnratedLinguist, 1979, 18181-85.Lehmann, Winfred P., Winfield S. Bennett.
JonathanSlocum, Howard Smith, Solveig M.V.
Pfluger &Sandra A. Eveland.
The METAL system (RADC-TR-80-37&).
Austin, TX: Linguistics ResearchCenter, University of Texas, 1080.Marcus, Mitchell P. A theory of syntacticrecognition for natural language, Cambridge, MA:MIT Press, 1980.Melby, Alan K. Translators and machines - canthey cooperate?
META, 1981, 26:23-34.Mel'~uk, I.A.
Grammatical meanings ininterlinguas for automatic translation and theconcept of grammatical meaning.
In V. Ju.Rozencvejg (ed), Machine Translation and AppliedLinguistics, Volume I, Frankfurt am Main:Athenaion Verlag, 1974, 95-113.Newell, A.
Production systems: Models of controlstructures.
In William G. Chase (ed) - Visualinformation processing, New York: AcademicPress, 1973, ~63-526.Otten, Hichael & Milos G. Pacak.
Intermediatelanguages for automatic language processina.
InJulius T. Tou (edi, Software Engineering: CO~:~I l l ,  Volume 2, New York: Academic Press, i c - I ,105-118.Ellis(on, John S.C. Computer aided translation: abusiness viewpoint.
In Barbara M. Snell (ed) -Translatin~ and the computer, Amsterdam: North-Holland, 197g, I~0-158.Johnson, Rod.
Contemporary perspectives inmachine translation.
In Suzanne Hanon & ViggeHj~rneger Pedersen (edsl, Human translationmachine translation (Noter og Kommentarer 39).Odensel Romansk Inst i tut ,  Odense Universitet,lOgO, 13~-1~7.Hutchins, W.j.
Machine translation and machineaided translation.
Journal of Documentation,1978, 34:119-159.Kaplan, Ronald N. A general syntactic processor.In Randall Rustin (ed), Natural LanguageProcessin~ (Courant Computer Symposium Q~, NewYork: Algnrithmics Press, 1073, 103-2&I.Kay, "larcin.
The proper place of men and machinesin language transla\[ion (Report in.
CSL-80-ll).Pa lo  .\~Co, CA: Xerox, l g~O.Richards, Martin & Colin Whitby-Screvens.
BCPL -the language and its compiler.
Camhridze:Cambridge University Press, I QTQ .S\[ocum, Jonathan.
A practical comparison ~fparsin R strategies for Machine Translation andother Natural Language Processing Purposes.
PhFdissertation.
University of Texas at Austin,I981.
\[ = Technical Report NL-41, Department ofComputer Sciences, The University of Texas,Austin, TX.\]Somers, H.L.
Bede - the CCL,/I~IIST MachineTranslation system: Rule-writinE formalism '3rdrevision) (CCL/~IIST Report Xo.
81 '5 ' .Manchester :  Cent re  fo r  Computat iona lLinguistics, University of Manchester ?nst~cuteof Science and Technology, 1981.Somers ,  H .L .
& d. HcNaught .
The t rans la tor  ascomputer user.
The incorporated Lin~.uist, IO~,1Q:&g-53.154Sorcim.
Pa__~sca_I/H u____se.r.
'.sr~.fere.ns.e manua.\[ _. :'alnur.Creek, C.%: Digic.~l '.lar!<ecing, 1?79.TA\[/~.
Le  sysr~me de craduction aucoma~que del'Universit~ de Montreal (TA(Df).
HETA0 1q73,la :227-2~O.Toma, P,P.
SYSTRAN as a mul t i l i ngua l  ~achtneTrans la t ion  system.
In Commission of theEuropean Communities, Thi rd ~uropean ConRress onInformation Systems and Plecwor~s=..Overcomtn~ thetan~uaRe bar r ie r ,  Volume 1, HUnchen: Ver\[agDokumencac~on, 1977, 569-581.Vauquois, Bernard.
La craduct ion automaclqueGrenoble (Documents de L/nguisc ique Quant i ta t ive2~), Par is :  Dunod, 1975.Vauquots, B.
Aspects of mechanical t rans la t ion  in1079 (Conference for Japan I~  Sc ient i f i cProgram).
Grenoble: Groupe d'Ecudes pour laTraduct ion Aucomatique, 1979oVauquois, Bernard.
L ' tn format ique au service dela ?raduccion.
~ETA, 1981.
26:8-17.VeiZZon, C. Descr ip t ion  du Iangage p ivot  dusysCEme de craduct ion automatique du C.E.T.A.?.A.
\ [nformat ions,  1068, 1:B-17.WtIks, Yor ick.
An Ar t i f i c ia l  In te l l igenceapproach co Machine Trans la t ion .
In Ro~er C.Schank & ~enneth ~ark Colby (eds),  Computermodels of chou~ht and language, San Francisco:Freeman, lq73, 114-151.~?Oscer, ~uRen.
Begr i f f s -  und ThemakIasst f ik-acionen: Uncerschiede in threm ~esen und inthrer  Anwendung.
~achrtchcen fur Dokumenc-aclon, t971, 22:qR-IO~.Zin~e\[, Hermann-losef.
Experiences with TITUS II.Tn~ernatinna\[ Classlfication, Ig7a, 5:33-37.\[55
