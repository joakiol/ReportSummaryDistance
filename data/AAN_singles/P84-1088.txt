A Response  to  the  Need fo r  Summary  ResponsesJ.K.
Kalita, M.J. Colbourn + and G.I.
McCallaDepartment of Computational ScienceUniversity of SaskatchewanSaskatoon, Saskatchewan, STN 0W0CANADAAbstractIn this paper we argue that natural language inter-faces to databases should be able to produce summaryresponses as well as listing actual data.
We describe asystem (incorporating a number of heuristics and aknowledge base built on top of the database) that hasbeen developed to generate such summary responses.
Itis largely domain-independent, has been tested onmany examples, and handles a wide variety of situa-tions where summary responses would be useful.1.
IntroductionFor over a decade research has been ongoing intothe diverse and complex issues involved in developingsmart natural language interfaces to database systems.Pioneering front-end systems such as PLANES \[15\],REQUEST \[121, TORUS \[11\] and RENDEZVOUS \[1\]experimented with, among other things, various parsingformalisms (e.g.
semantic grammars, transformationalgrammars and auglmented transition networks); theneed for knowledge representation (e.g.
using produc-tion systems or semantic networks); and the usefulnessof clarification dialogue in disambiguating a user'squery.Recent research has addressed various dialogueissues in order to enhance the elegance of the databaseinteractions.
Such research includes attempts to resolveanaphoric references in queries \[2,4,14,18\], to track theuser's focus of attention \[2,4,14,18\], and to generatecooperative responses.
In particular, the CO-OP sys-tem \[7\] is able to analyze presumptions of the user inorder to generate appropriate xplanations for answersthat may mislead the user.
Janas \[5\] takes a similarapproach to generate indirect answers instead of pro-viding direct inappropriate ones.
Mays \[8\] hasdeveloped techniques to monitor changes in the data-base and provide relevant information on these changesto the user.
McCoy \[9\] and McKeown \[10\] attempt oprovide answers to questions about the structure of thedatabase rather than extensional information as to itscontents.
We investigate herein, one particularapproach to generating "non-extensional" responses - inparticular the generation of "summary" responses.Generating abstract "summary" responses to users'queries is often preferable to providing enumerativereplies.
This follows from an important convention ofhuman dialogue that no participant should monopolizethe discourse (i.e.
"be brief" \[3\]).
Furthermore, exten-sional responses can occasionally mislead the user wheresummary responses would not.
Consider the followingexample \[13\]:QI: Which department managers earn over $40kper year?SI-I: Abel, Baker, Charles, Doug.SI-2: All of them.By enumerating managers who earn over $40k, the fizstresponse implies that there are managers who do notearn that much.
In linguistic pragmatics, this is called ascalar implicature \[3\].
In circumstances where the useris liable to infer an invalid scalar implicature, the sys-tem should be able to produce an appropriate responseto block the generation of such an inference as is doneby the response $1-2.2.
Overview of  the SystemWe describe herein a system which has beendeveloped for the generation of summary responses touser's queries (fully detailed in \[6\]).
The system arrivesat concise responses by employing a search of therelevant data for the existence of "interesting" pat-terns.
It uses heuristics to guide this search and aknowledge base to enhance efficiency and help deter-mine "interestinguess".The database used to test the system is a simple+ Now, at the Department of Computer Science, University of Waterloo, Waterloo,Ontario, N2L 3G1, CANADA432relational database of student records, although themethods developed are largely domain-independent.
Inorder to concentrate on the response generation issues,the input/output for the system is in an internal form -an actual parser and surface language generation capa-bilities will be incorporated in future versions of thesystem.The flow of control in the system is simple.
Theformal representation f the query is used to access thedatabase and obtain the tuples which satisfy the user'squery {which we will call T~; the other tuples will becalled Tu,~,~).
After the data is accessed, the system, inconsultation with its knowledge base, calls upon itsheuristics to find interesting non-enumerative patterns.The heuristics are tried in order, until one succeeds orall fail.
When a heuristic detects an appropriate pat-tern, the system terminates the search and producesthe response as dictated by the successful heuristic.
Ifall heuristics fail, the system reports its inability toproduce a descriptive response.
In any event, the usermay ask the system to produce an extensional answerby listing the data if he/she so desires.3.
The Heur ist icsThe heuristics employed in the system are pro-cedural in nature.
They guide the system to search forvarious patterns that may exist in the data.
The heuris-ties are linearly ordered; they range from simple tocomplex.
The ordering of the heuristics assumes that ifmore than one descriptive answer can be obtained for aquery, it is sensible to produce the "simplest" one.The equality heuristic determines if all data valuesappearing for a particular attribute A in T~ are thesame (say, c~).
If so, and if no tuple in T,~u.~ has thesame value for the attribute A, the general formulationof the response is:"All tuples having the value ~ for attribute A.
"The particular value under consideration must be oneof the designated "distinguishing values" for the attri-bute.
Response $1-2 (above) is an example of what thisheuristic would do.The dual of the equality heuristic is the inequalityheuristic where instead of looking for equalities, thesystem searches for inequalities.
The inequality heuris-tic enables the system to produce responses such as:Q2: Which students are taking makeup courses?$2: All students with non-Computer Scienceundergradus~te background.Here, the value "Computer Science" for the attributeUi~T~rERSITY-DEPARTMENT in the database underconsideration may be considered a distinguishing value.If the equality or inequality heuristics are not appli-cable in their pure form and there are a "few" ("few"depends on the relative number of tuples in T~ andrun~ and some other factors) tuples in Tu~, which donot satisfy the requirement of the heuristic, amodification of the response produced by the heuristicmay be presented to the user.
An example of such amodification is seen in the following:Q3: Which students are receiving Universityscholarships?$3: All but one foreign students.
In addition,two Canadian students are also receivingUniversity scholarships.Another set of heuristics, the range heuristics,determine if the data values for an attribute in thetuples in T~ are within a particular well-defined range.There are two main types of range heuristics - one isconcerned with maximum values and the other withminimum values.
We will discuss only the maximumrange heuristic here.The maximum heuristic determines if the values ofan attribute for all tuples in T~., are below a particularlimit while the values of the attribute in all tuples inT,,~, are not.
An example response produced by themaximum heuristic is:Q4: Which students have been advised to dis-continue studies at the University?$4: All students with a cumulative GPA of 2.0or less.In some cases, the max imum and minimum heuris-tics may be used together to define the end-points of arange of values (for some attribute) which the tuplcs inTq~ satisfy.
This results in a range specification.
If a isthe min imum value and ~ is the max imum value of theattribute A in T~, then the corresponding response is:"All tuples with the value of attribute A rangingfrom ~ to ~"An example of an answer with range specification is:Q5: Which students are in section 1 of CMPTII0.3?$5: All students with surnames tarting with 'A'through 'F'.There are several heuristic rules which the systemfollows in producing answers with range specification.For example, one of these rules limits the actual rangespecified in an answer to 75% or less of the potentialrange of the attribute values.
This limitation of 759~ isnot sacrosanct; it is an arbitrary decision by the imple-mentor of the knowledge base.
In the current imple-mentation it is believed that if the actual range is morethan 75~o of the potential range, no special meaning433can be attributed to the occurrence of this range inTrj~.Another rule requires that the actual range specifiedin an answer must not be so small as to identify theactual tuples which constitute the answer.
For example,we should not produce a response such as:"All students with student-id-no between 821661and 821663"In fact, such answers are not brief when compared tothe size of the set of tuples which they qualify.A more complex heuristic is the conjunction heuris-tic.
If all values of an attribute A in To., satisfy a rela-tion R {in the mathematical sense) and there are sometuples in Tu,~., in which the values of the attribute Asatisfy this relation R, the system attempts to deter-mine via the above heuristics if there is/are some"interesting" distinguishing characteristic(s) which theset T~ satisfies, but the set of tuples in 2"u,~., satisfy-ing the relation R do not.
Let us call the distinguishingcharacteristic(s} D. The general formulation of theresponse is"All tuples which satisfy the relation R for attri-bute A and have the characteristic(s) D."An example is:Q6: Which students are working as T.A.
andR.A.
?$6: Students who have completed at least twoyears at the University and who are notemployed outside the University.If none of the above heuristics can be applied suc-cessfully, the disjunction heuristic attempts to dividethe tuples in T~ into a number of subsets and deter-mine whether the above heuristics are appropriate forall of these subsets.
The number of such subsetsshould be "small"; if too many subsets are identified, itis no more elegant han listing the data, which we aretrying to avoid.
The number of allowable subsets par-tially depends upon the number of tuples in T~ Anexample showing three partitions based on the values ofthree different attributes is:QT: Which graduate students are not receivingUniversity scholarships?$7: Students who are receiving NSERC scholar-ships or have cumulative GPA less than 6.0or have completed at least two years at theUniversity.If none of the above heuristics produces a satisfac-tory response, the foreign-key heuristic searches other"related" relations.
A related relation is one with whichthe relation under consideration has some common orjoin attribute(s).
The names of such related relationsand the attributes via which such a relation can bejoined with the original target relation can be obtainedfrom the knowledge base to be discussed later.
Anexample of such a dialogue is:Q8: Which students are taking 880-level courses?$8: All second year students.
In addition, twofirst year students are also taking 880-levelCOUrses.While attempting to answer Q8, the system findsthat the question pertains to the relation COURSE-REGISTRATIONS.
However, it fails to obtain anyinteresting descriptive pattern about the tuples in T~by considering this relation alone.
Hence, the systemconsults the knowledge base and finds that the relationCOURSE-REGISTRATIONS can be joined with therelation STUDENTS.
It takes the join of all the tuplesconstituting T~., with the relation STUDENTS andprojects the resulting relation on the attributes of therelation STUDENTS.
Let us call these tuples T,,,_o~.Next, it attempts to discover the existence of some pat-tern in the tuples in T,e~-~.
It succeeds in producingthe response given in $8 by employing modified equal-ity heuristic.4.
The Knowledge BaseThe knowledge base incorporates subjective percep-tions of the user as to the nature and contents of thedatabase.
It consists of two types of frames - the rela-tion and the attribute frames.
These frames may beconsidered to be an extension of the database schema.The frames are created by the interface builder, andditterent sets of frames must be provided for ditterenttypes of users and/or different databases.Each relation frame corresponds to an actual rela-tion in the database; it provides the possible links withall other relations in the database.
In other words,these frames define all permissible joins of two rela-tions.
If a direct join is not possible between twospecific relations, the frame contains the name of athird relation which must be included in the join.
Theinformation in the relation frames is useful in the appli-cation of the foreign-key heuristic.The attribute frames play a role in our system simi-lar to that played by McCoy's axioms \[9\].
Each attri-bute frame corresponds to an attribute in the relationsin the database.
In addition to a description of theattributes, these frames indicate the nature and rangeof the attribute's potential values.
The expected rangeof values that an attribute may assume is helpful to therange heuristics.
Information regarding the relativepreferability of the various attributes is also included.434Each attribute frame also contains a slot for "dis-tinguishing values" which the attribute might take.This slot provides information for distinguishing a sub-class of an entity from other sub-classes.
The contentsof this field are useful in producing descriptiveresponses to users' queries.
This slot contains one ormore clauses, each of the following format C\[ \]' meansoptionality; '...' means arbitrary number of repetitionsof the immediately preceding clause):(list-of-distingnishing-values-1(applicable-operator-l-1 \[denomination-l-l\])\[(applicable-operator-l-2 \[denomination-l-2\])\]..o)If all the values of the attribute in T~ satisfy"applicable-operator-l-l" with respect to the contentsof the list "list-of-distinguishing-values-l", the actualvalues may be termed as "denomination-l-l" for pro-ducing responses.
If the value of "denomination-l-l" isnull, no names can be attached to the actual values ofthe attribute.The Distinguishing Values slot enables the imple-mentor to specify classifications that he would a priorilike to appear meaningfully in descriptive responses.This information enables the system to faithfully reflectthe implementor perceived notions regarding how adatabase ntity class may be appropriately partitionedinto subclasses for generating summary responses.It is often useful to provide descriptive answers onthe basis of certain preferred attributes.
For example,for the STUDENTS relation, it is more "meaningful"to provide answers on the basis of the attributeNATIONALITY or UG-MAJOR, rather thanSTUDENT-ID-NO or AMOUNT-OF-FINANCIAL-AID.However, it is impossible to give a concrete weightregarding each attribute's preferability.
Therefore, wehave classified the attributes into several groups; allattributes in a group are considered equally useful inproducing meaningful qualitative answers to queries.This classification means that it is preferable andmore useful to produce descriptive responses using theattributes in preference category 1 than the attributesin category 2, 3 or 4.
This categorization is based onone's familiarity with the data.
The decision is subjec-tive, and hence it is bound to vary according to thejudgement of the person building the interface.
In thePreference Category slot, we have an entry correspond-ing to each relation the attribute occurs in.
The infor-mation in this slot ensures that the system chooses adescription based on the most salient attribute(s) forproducing a response.A simple example of an attribute frame is givenbelow:Name:- (NATIONALITY, STUDENTS)Nature-of-Attribute:- String of charactersDistingnishing-Values:-{((Canadian)(-----)(~ foreign))((U.K.U.S.A.
Australia ...)( member-of English-speaking countries))((U.K. France ...)(member-of Europe))Potential-Range:- Any member from a given list ofcountriesRounding-off-to-be-done?
:- Not applicablePreference-Category:- 1The example shows the frame for the attributeNATIONALITY belonging to the STUDENTS relation.It assumes character values.
To be valid, the valuesmust be members of a previously compiled list of coun-tries.
It belongs to the preference category 1 discussedabove.
Let us consider the clause ((Canadian)(=)(~foreign)) in the Distinguishing Value slot.
The value"Canadian" is a distinguishing value in the domain ofvalues which the attribute may take.
The term " (=)"indicates that it is possible to identify a class of stu-dents using the descriptive xpression "NATIONALITY---- Canadian".
If NATIONALITY ~ "Canadian", thestudent may be referred to as a "FOREIGN" student.Similarly, if the value for a student under the attributeNATIONALITY is a member of the set (U.K.U.S.A.Australia ...), he may be designated as coming from anEnglish-speaking country.
This information may behelpful in answering a query such as:Qg: Which students are taking the "IntensiveEnglish" course in the Fall term?$9: Most entering foreign students fromnon-English speaking countries.5.
Concluding RemarksA system incorporating the details explained abovehas been implemented and extensive xperiments havebeen performed using a simple student database.Every heuristic has demonstrated its usefulness in pro-ducing summary responses by being successful in thisenvironment.
The heuristics are domain-independent,and the knowledge base is easily modifiable to adapt tothe requirements of a new user or database domain.For performance nhancement, the knowledge basemay be augmented with an additional component forstoring away the results of the preceding databaseinteractions to obviate the need to search the databasefor every query.
The extended knowledge base may beutilized for improved modelling of the user's beliefs andperceptions about the data by providing a mechanism435to introduce the user's own definitions and descriptiveterminologies.
Further research is necessary in order toobtain an acceptable structure for this additional com-ponent of the knowledge base.
In addition, the factors -linguistic or otherwise, that influence the appropriate-hess of the generation of a summary response for a givequestion at a particular point in the interaction are alsoto be investigated.Generation of summary responses has importantimplications if the interactions with a databasemanagement system are to have the properties andconstraints normally associated with human dialogue.Interactions with traditional database management sys-tems lack the "intelligence" and elegance which weascribe to human behaviour.
We feel that providingsummary responses will be an important tool to be usedin achieving database interfaces that behave intelli-gently and co-operatively.AcknowledgementsWe would like to thank the National Science andEngineering Research Council of Canada {NSERC) andthe University of Saskatchewan for supporting thisresearch both flnaneially and through the provision ofcomputing facilities.
We would also like to express ourgratitude to Paul Sorensen and Robin Cohen for theirmany helpful comments during the course of theresearch.References\[1\] Codd E.F., R.S.
Arnold, J.M.
Cadious, C.L.Chang, N. Roussopoulos, RENDEZVOUS VersionI: An Ezperimental English Language Query For-m'~lation System for Casual Users of RelationalDatabases, Research Report No.
RJ2144 {294071,IBM Research Laboratory, San Jose, California,1978.12\] Davidson J., "Natural Language Access to Data-base: User Modelling and Focus", Proceedings ofCanadian Society for Computational Studies ofIntelligence, Saskatoon, May, 1982, 204-211.\[3\] Grice H.P., "Logic and Conversation", in P. Coleand J.L.
Morgan (eds.
), Syntaz and Semantics:Speech Acts, Vol.
3, Academic Press, New York,1975, 41-58.I4\] Grosz B.J., "The Representation a d the Use ofFocus in a System for Understanding Dialogues",Proe.
5th IJCAI, Cambridge, 1977, 67-76.\[5\] Janas J.M., "How to not Say "NIL" - Improvinganswers to Failing Queries in Data Base Sys-tems", Proe.
6th IJCAI, 1979, Tokyo, 429-434.\[6\] Kalita J.K., Generating Summary Responses toNatural Language Database Queries, M.Sc.Thesis; also available as TR-9, University ofSaskatchewan, Saskatoon, 1984.\[7\] Kaplan S.J., "Cooperative Responses from a Port-able Natural Language Query System", ArtificialIntelligence, Vol.
19, No.
2, Oct. 1982, 165-187.\[8\] Maya E., S. Lanka, A.K.
Joshi and B.L.
Webber,"Natural Language Interaction with DynamicKnowledge Bases: Monitoring as Response",Proc.
7th IJCAI, Vancouver, 1981, 61-63.\[9\] McCoy K.F., "Augmenting a DatabaseKnowledge Representation for Natural LanguageGeneration", Proc.
?Oth Annual Conference ofthe ACL, Toronto, Ontario, June, 1982, 121-128.\[10\] MeKeown K.R., "The TEXT system for NaturalLanguage Generation: An Overview", Proc.
?OthAnnual Conference of the ACL, Toronto, Ontario,June 1982, 113-120.\[11\] Mylopoulos J., A. Borgida, P. Cohen, N. Rousso-poulos, J. Tsotsos, H. Wing, "TORUS : A Steptowards Bridging the Gap between Databases andCasual User", Information Systems, Vol.
2, 1976,49-64.\[12\] Plath W.J., "REQUEST : A Natural LanguageQuestion Answering System", IBM Journal ofResearch and Development, Vol.
20, July 1976,326-335.\[13\] Reiter R., H. Gallaire, J.J. King, J. Mylopoulosand B.L.
Webber, "A Panel on AI and Data-bases", Proc.
8th IJCAI, 1983, Karlsruhe, WestGermany, 1199-1208.\[14\] Sidner C.L., Towards A Computational Theory ofDefinite Anaphora Comprehension in EnglishDiscourse", TR-537, AI Laboratory, MIT, Cam-bridge, Massaehussets, 1979.\[15\] Waltz D.L., An English Language QuestionAnswering System for a Large Relational Data-base, CACM, Vol.
21, July, 1978, 526-539.\[16\] Webber B. and R. Reiter, "Anaphora nd LogicalForm: On Formal Meaning Representations forNatural Language", Proc.
5th IJCAI, Cambridge,Massaehussets, 1977, 121-131.436
