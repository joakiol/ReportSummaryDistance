Proceedings of the 53rd Annual Meeting of the Association for Computational Linguisticsand the 7th International Joint Conference on Natural Language Processing, pages 53?62,Beijing, China, July 26-31, 2015.c?2015 Association for Computational LinguisticsText to 3D Scene Generation with Rich Lexical GroundingAngel Chang?, Will Monroe?, Manolis Savva,Christopher Potts and Christopher D. ManningStanford University, Stanford, CA 94305{angelx,wmonroe4,msavva}@cs.stanford.edu,{cgpotts,manning}@stanford.eduAbstractThe ability to map descriptions of scenesto 3D geometric representations has manyapplications in areas such as art, educa-tion, and robotics.
However, prior workon the text to 3D scene generation taskhas used manually specified object cate-gories and language that identifies them.We introduce a dataset of 3D scenes an-notated with natural language descriptionsand learn from this data how to ground tex-tual descriptions to physical objects.
Ourmethod successfully grounds a variety oflexical terms to concrete referents, and weshow quantitatively that our method im-proves 3D scene generation over previ-ous work using purely rule-based meth-ods.
We evaluate the fidelity and plau-sibility of 3D scenes generated with ourgrounding approach through human judg-ments.
To ease evaluation on this task,we also introduce an automated metric thatstrongly correlates with human judgments.1 IntroductionWe examine the task of text to 3D scene gener-ation.
The ability to map descriptions of scenesto 3D geometric representations has a wide vari-ety of applications; many creative industries use3D scenes.
Robotics applications need to interpretcommands referring to real-world environments,and the ability to visualize scenarios given high-level descriptions is of great practical use in educa-tional tools.
Unfortunately, 3D scene design userinterfaces are prohibitively complex for noviceusers.
Prior work has shown the task remains chal-lenging and time intensive for non-experts, evenwith simplified interfaces (Savva et al, 2014).
?The first two authors are listed in alphabetical order.
{...L-shaped room with walls that have 2 tones of gray...,A dark room with a pool table...}{...a multicolored table in the middle of the room ,...four red and white chairs and a colorful table, ...}Figure 1: We learn how to ground references suchas ?L-shaped room?
to 3D models in a paired cor-pus of 3D scenes and natural language descrip-tions.
Sentence fragments in bold were identifiedas high-weighted references to the shown objects.Language offers a convenient way for designersto express their creative goals.
Systems that caninterpret natural descriptions to build a visual rep-resentation allow non-experts to visually expresstheir thoughts with language, as was demonstratedby WordsEye, a pioneering work in text to 3Dscene generation (Coyne and Sproat, 2001).WordsEye and other prior work in thisarea (Seversky and Yin, 2006; Chang et al, 2014)used manually chosen mappings between lan-guage and objects in scenes.
To our knowledge,we present the first 3D scene generation approachthat learns from data how to map textual terms toobjects.
First, we collect a dataset of 3D scenesalong with textual descriptions by people, whichwe contribute to the community.
We then traina classifier on a scene discrimination task andextract high-weight features that ground lexicalterms to 3D models.
We integrate our learnedlexical groundings with a rule-based scene gener-ation approach, and we show through a human-judgment evaluation that the combination outper-forms both approaches in isolation.
Finally, weintroduce a scene similarity metric that correlateswith human judgments.53There is a desk and there is a notepad on the desk.
There is a pen next to the notepad.Scene TemplateInput Texton(o0,o1)3D Sceneo0roomon(o1,o2)Parsingo0 ?category:room, modelId:420o1 ?category:desk, modelId:132o2 ?category:notepad, modelId:343o3 ?category:pen, modelId:144on(o1,o3) next_to(o3,o2)o1desko3peno2notepadGenerationFigure 2: Illustration of the text to 3D scene generation pipeline.
The input is text describing a scene(left), which we parse into an abstract scene template representation capturing objects and relations (mid-dle).
The scene template is then used to generate a concrete 3D scene visualizing the input description(right).
The 3D scene is constructed by retrieving and arranging appropriate 3D models.2 Task DescriptionIn the text to 3D scene generation task, the inputis a natural language description, and the output isa 3D representation of a plausible scene that fitsthe description and can be viewed and renderedfrom multiple perspectives.
More precisely, givenan utterance x as input, the output is a scene y: anarrangement of 3D models representing objects atspecified positions and orientations in space.In this paper, we focus on the subproblem oflexical grounding of textual terms to 3Dmodel ref-erents (i.e., choosing 3D models that represent ob-jects referred to by terms in the input utterance x).We employ an intermediate scene template repre-sentation parsed from the input text to capture thephysical objects present in a scene and constraintsbetween them.
This representation is then used togenerate a 3D scene (Figure 2).A na?
?ve approach to scene generation mightuse keyword search to retrieve 3D models.
How-ever, such an approach is unlikely to generalizewell in that it fails to capture important object at-tributes and spatial relations.
In order for the gen-erated scene to accurately reflect the input descrip-tion, a deep understanding of language describ-ing environments is necessary.
Many challengingsubproblems need to be tackled: physical objectmention detection, estimation of object attributessuch as size, extraction of spatial constraints, andplacement of objects at appropriate relative posi-tions and orientations.
The subproblem of lexicalgrounding to 3D models has a larged impact onthe quality of generated scenes, as later stages ofscene generation rely on having a correctly chosenset of objects to arrange.Another challenge is that much common knowl-edge about the physical properties of objects andthe structure of environments is rarely mentionedin natural language (e.g., that most tables are sup-ported on the floor and in an upright orienta-tion).
Unfortunately, common 3D representationsof objects and scenes used in computer graph-ics specify only geometry and appearance, andrarely include such information.
Prior work intext to 3D scene generation focused on collectingmanual annotations of object properties and rela-tions (Rouhizadeh et al, 2011; Coyne et al, 2012),which are used to drive rule-based generation sys-tems.
Regrettably, the task of scene generation hasnot yet benefited from recent related work in NLP.3 Related WorkThere is much prior work in image retrieval giventextual queries; a recent overview is providedby Siddiquie et al (2011).
The image retrievaltask bears some similarity to our task insofar as3D scene retrieval is an approach that can approx-imate 3D scene generation.However, there are fundamental differences be-tween 2D images and 3D scenes.
Generation inimage space has predominantly focused on com-position of simple 2D clip art elements, as exem-plified recently by Zitnick et al (2013).
The taskof composing 3D scenes presents a much higher-dimensional search space of scene configurationswhere finding plausible and desirable configura-tions is difficult.
Unlike prior work in clip art gen-eration which uses a small pre-specified set of ob-jects, we ground to a large database of objects thatcan occur in various indoor environments: 124903D models from roughly 270 categories.54There is a table and there are four chairs .
There are four plates and there are four sandwiches.There is a chair and a table .There is a bed and there is anightstand next to the bed .?
dinning room with four plates, four chairs, and four sandwiches?
dark room with two small windows .
A rectangular table seating four is in the middle of the room with plates set.
There is a set of two gray double doors on another wall.?
i see a rectangular table in the center of the room.
There are 4 chairs around the table and 4 plates on the table?
There is a chair and a circular table in the middle of a floral print room.?
a corner widow room with a a table and chair sitting to the east side.?
There ' s a dresser in the corner of the room, and a yellow table with a brown wooden chair.?
There is a bed with three pillows and a bedside table next to it .?
The room appears to be a bedroom .
A blue bed and white nightstand are pushed against the furthest wall.
A window is on the left side.?
A dark bedroom with a queen bed with blue comforter and three pillows.
There is a night stand.
One wall is decorated with a large design and another wall has three large windows.Figure 3: Scenes created by participants from seed description sentences (top).
Additional descriptionsprovided by other participants from the created scene (bottom).
Our dataset contains around 19 scenesper seed sentence, for a total of 1129 scenes.
Scenes exhibit variation in the specific objects chosen andtheir placement.
Each scene is described by 3 or 4 other people, for a total of 4358 descriptions.3.1 Text to Scene SystemsPioneering work on the SHRDLU system (Wino-grad, 1972) demonstrated linguistic manipulationof objects in 3D scenes.
However, the dis-course domain was restricted to a micro-worldwith simple geometric shapes to simplify parsingand grounding of natural language input.
More re-cently, prototype text to 3D scene generation sys-tems have been built for broader domains, mostnotably the WordsEye system (Coyne and Sproat,2001) and later work by Seversky and Yin (2006).Chang et al (2014) showed it is possible to learnspatial priors for objects and relations directlyfrom 3D scene data.These systems use manually defined mappingsbetween language and their representation of thephysical world.
This prevents generalization tomore complex object descriptions, variations inword choice and spelling, and other languages.
Italso forces users to use unnatural language to ex-press their intent (e.g., the table is two feet to thesouth of the window).We propose reducing reliance on manual lex-icons by learning to map descriptions to objectsfrom a corpus of 3D scenes and associated textualdescriptions.
While we find that lexical knowledgealone is not sufficient to generate high-qualityscenes, a learned approach to lexical groundingcan be used in combination with a rule-based sys-tem for handling compositional knowledge, result-ing in better scenes than either component alone.3.2 Related TasksPrior work has generated sentences that describe2D images (Farhadi et al, 2010; Kulkarni et al,2011; Karpathy et al, 2014) and referring expres-sions for specific objects in images (FitzGeraldet al, 2013; Kazemzadeh et al, 2014).
How-ever, generating scenes is currently out of reachfor purely image-based approaches.
3D scene rep-resentations serve as an intermediate level of struc-ture between raw image pixels and simpler micro-cosms (e.g., grid and block worlds).
This level ofstructure is amenable to the generation task butstill realistic enough to present a variety of chal-lenges associated with natural scenes.A related line of work focuses on groundingreferring expressions to referents in 3D worldswith simple colored geometric shapes (Gorniakand Roy, 2004; Gorniak and Roy, 2005).
More re-cent work grounds text to object attributes such ascolor and shape in images (Matuszek et al, 2012;Krishnamurthy and Kollar, 2013).
Golland et al(2010) ground spatial relationship language in 3Dscenes (e.g., to the left of, behind) by learningfrom pairwise object relations provided by crowd-workers.
In contrast, we ground general descrip-tions to a wide variety of possible objects.
Theobjects in our scenes represent a broader space ofpossible referents than the first two lines of work.Unlike the latter work, our descriptions are pro-vided as unrestricted free-form text, rather thanfilling in specific templates of object referencesand fixed spatial relationships.554 DatasetWe introduce a new dataset of 1128 scenes and4284 free-form natural language descriptions ofthese scenes.1To create this training set, weused a simple online scene design interface thatallows users to assemble scenes using available3D models of common household objects (eachmodel is annotated with a category label and hasa unique ID).
We used a set of 60 seed sentencesdescribing simple configurations of interior scenesas prompts and asked workers on the AmazonMechanical Turk crowdsourcing platform to cre-ate scenes corresponding to these seed descrip-tions.
To obtain more varied descriptions for eachscene, we asked other workers to describe eachscene.
Figure 3 shows examples of seed descrip-tion sentences, 3D scenes created by people giventhose descriptions, and new descriptions providedby others viewing the created scenes.We manually examined a random subset ofthe descriptions (approximately 10%) to elimi-nate spam and unacceptably poor descriptions.When we identified an unacceptable description,we also examined all other descriptions by thesame worker, as most poor descriptions came froma small number of workers.
From our sample, weestimate that less than 3% of descriptions werespam or unacceptably incoherent.
To reflect nat-ural use, we retained minor typographical andgrammatical errors.Despite the small set of seed sentences, theTurker-provided scenes exhibit much variety in thespecific objects used and their placements withinthe scene.
Over 600 distinct 3D models appearin at least one scene, and more than 40% of non-room objects are rotated from their default orienta-tion, despite the fact that this requires an extra ma-nipulation in the scene-building interface.
The de-scriptions collected for these scenes are similarlydiverse and usually differ substantially in lengthand content from the seed sentences.25 ModelTo create a model for generating scene templatesfrom text, we train a classifier to learn lexical1Available at http://nlp.stanford.edu/data/text2scene.shtml.2Mean 26.2 words, SD 17.4; versus mean 16.6, SD 7.2for the seed sentences.
If one considers seed sentences to bethe ?reference,?
the macro-averaged BLEU score (Papineniet al, 2002) of the Turker descriptions is 12.0.groundings.
We then combine our learned lexi-cal groundings with a rule-based scene generationmodel.
The learned groundings allow us to selectbetter models, while the rule-based model offerssimple compositionality for handling coreferenceand relationships between objects.5.1 Learning lexical groundingsTo learn lexical mappings from examples, we traina classifier on a related grounding task and ex-tract the weights of lexical features for use in scenegeneration.
This classifier learns from a ?discrim-ination?
version of our scene dataset, in whichthe scene in each scene?description pair is hid-den among four other distractor scenes sampleduniformly at random.
The training objective isto maximize the L2-regularized log likelihood ofthis scene discrimination dataset under a one-vs.-all logistic regression model, using each true sceneand each distractor scene as one example (withtrue/distractor as the output label).The learned model uses binary-valued fea-tures indicating the co-occurrence of a unigramor bigram and an object category or modelID.
For example, features extracted from thescene-description pair shown in Figure 2 wouldinclude the tuples (desk,modelId:132) and(the notepad,category:notepad).To evaluate our learned model?s performance atdiscriminating scenes, independently of its use inscene generation, we split our scene and descrip-tion corpus (augmented with distractor scenes)randomly into train, development, and test por-tions 70%-15%-15% by scene.
Using only modelID features, the classifier achieves a discrimina-tion accuracy of 0.715 on the test set; adding fea-tures that use object categories as well as modelIDs improves accuracy to 0.833.5.2 Rule-based ModelWe use the rule-based parsing component de-scribed in Chang et al (2014).
This system in-corporates knowledge that is important for scenegeneration and not addressed by our learned model(e.g., spatial relationships and coreference).
InSection 5.3, we describe how we use our learnedmodel to augment this model.This rule-based approach is a three-stage pro-cess using established NLP systems: 1) The inputtext is split into multiple sentences and parsed us-ing the Stanford CoreNLP pipeline (Manning et56red cup round yellow table green room black top tan love seat black bed open windowFigure 4: Some examples extracted from the top 20 highest-weight features in our learned model: lexicalterms from the descriptions in our scene corpus are grounded to 3D models within the scene corpus.al., 2014).
Head words of noun phrases are iden-tified as candidate object categories, filtered usingWordNet (Miller, 1995) to only include physicalobjects.
2) References to the same object are col-lapsed using the Stanford coreference system.
3)Properties are attached to each object by extract-ing other adjectives and nouns in the noun phrase.These properties are later used to query the 3Dmodel database.We use the same model database as Chang et al(2014) and also extract spatial relations betweenobjects using the same set of dependency patterns.5.3 Combined ModelThe rule-based parsing model is limited in its abil-ity to choose appropriate 3D models.
We integrateour learned lexical groundings with this model tobuild an improved scene generation system.Identifying object categories Using the rule-based model, we extract all noun phrases as po-tential objects.
For each noun phrase p, we extractfeatures {?i} and compute the score of a categoryc being described by the noun phrase as the sumof the feature weights from the learned model inSection 5.1:Score(c | p) =??i??(p)?
(i,c),where ?
(i,c)is the weight for associating feature?iwith category c. From categories with a scorehigher than Tc= 0.5, we select the best-scoringcategory as the representative for the noun phrase.If no category?s score exceeds Tc, we use the headof the noun phrase for the object category.3D model selection For each object mentiondetected in the description, we use the featureweights from the learned model to select a specificobject to add to the scene.
After using dependencyrules to extract spatial relationships and descrip-tive terms associated with the object, we computethe score of a 3Dmodelm given the category c andtext category text categorychair Chair round RoundTablelamp Lamp laptop Laptopcouch Couch fruit Bowlvase Vase round table RoundTablesofa Couch laptop Computerbed Bed bookshelf BookcaseTable 1: Top groundings of lexical terms in ourdataset to categories of 3D models in the scenes.a set of descriptive terms d using a similar sum offeature weights.
As the rule-based system may notaccurately identify the correct set of terms d, weaugment the score with a sum of feature weightsover the entire input description x:m = argmaxm?{c}?d??i??(d)?
(i,m)+ ?x??i??(x)?
(i,m)For the results shown here, ?d= 0.75 and ?x=0.25.
We select the best-scoring 3D model withpositive score.
If no model has positive score, weassume the object mention was spurious and omitthe object.6 Learned lexical groundingsBy extracting high-weight features from ourlearned model, we can visualize specific modelsto which lexical terms are grounded (see Figure 4).These features correspond to high frequency text?3D model pairs within the scene corpus.
Table 1shows some of the top learned lexical ground-ings to model database categories.
We are ableto recover many simple identity mappings with-out using lexical similarity features, and we cap-ture several lexical variants (e.g., sofa for Couch).A few erroneous mappings reflect common co-occurrences; for example, fruit is mapped to Bowldue to fruit typically being observed in bowls inour dataset.57DescriptionIn between the doors and the window , there is a black couch with red c ushions , two white pillows , and one black pillow .
In front of the couch , there is a wooden coffee table with a glass top and two newspapers .
Next to the table , facing the couch , is a wooden folding chair .random rulelearned comboA round table is in the center of the room with four chairs around the table .
There is a double window facing west .
A door is on the east side of the room .There is a desk and a computer .Seed sentence :MTurk sentences :Figure 5: Qualitative comparison of generated scenes for three input descriptions (one Seed and twoMTurk), using the four different methods: random, learned, rule, combo.7 Experimental ResultsWe conduct a human judgment experiment tocompare the quality of generated scenes using theapproaches we presented and baseline methods.To evaluate whether lexical grounding improvesscene generation, we need a method to arrange thechosen models into 3D scenes.
Since 3D scenelayout is not a focus of our work, we use an ap-proach based on prior work in 3D scene synthesisand text to scene generation (Fisher et al, 2012;Chang et al, 2014), simplified by using samplingrather than a hill climbing strategy.Conditions We compare five conditions:{random, learned, rule, combo, human}.
Therandom condition represents a baseline whichsynthesizes a scene with randomly-selectedmodels, while human represents scenes created bypeople.
The learned condition takes our learnedlexical groundings, picks the four3most likelyobjects, and generates a scene based on them.
Therule and combo conditions use scenes generatedby the rule-based approach and the combinedmodel, respectively.Descriptions We consider two sets of input de-scriptions: {Seeds, MTurk}.
The Seeds descrip-tions are 50 of the initial seed sentences fromwhich workers were asked to create scenes.
Theseseed sentences were simple (e.g., There is a desk3The average number of objects in a scene in our human-built dataset was 3.9.and a chair, There is a plate on a table) and didnot have modifiers describing the objects.
TheMTurk descriptions are much more descriptive andexhibit a wider variety in language (including mis-spellings and ungrammatical constructs).
Our hy-pothesis was that the rule-based system would per-form well on the simple Seeds descriptions, but itwould be insufficient for handling the complexi-ties of the more varied MTurk descriptions.
Forthese more natural descriptions, we expected ourcombination model to perform better.
Our experi-mental results confirm this hypothesis.7.1 Qualitative EvaluationFigure 5 shows a qualitative comparison of 3Dscenes generated from example input descriptionsusing each of the four methods.
In the top row,the rule-based approach selects a CPU chassis forcomputer, while combo and learned select a moreiconic monitor.
In the bottom row, the rule-basedapproach selects two newspapers and places themon the floor, while the combined approach cor-rectly selects a coffee table with two newspaperson it.
The learned model is limited to four objectsand does not have a notion of object identity, so itoften duplicates objects.7.2 Human EvaluationWe performed an experiment in which peoplerated the degree to which scenes match the tex-tual descriptions from which they were generated.58Figure 6: Screenshot of the UI for rating scene-description match.Such ratings are a natural way to evaluate howwell our approach can generate scenes from text:in practical use, a person would provide an inputdescription and then judge the suitability of the re-sulting scenes.
For the MTurk descriptions, werandomly sampled 100 descriptions from the de-velopment split of our dataset.Procedure During the experiment, each partici-pant was shown 30 pairs of scene descriptions andgenerated 3D scenes drawn randomly from all fiveconditions.
All participants provided 30 responseseach for a total of 5040 scene-description ratings.Participants were asked to rate how well the gen-erated scene matched the input description on a 7-point Likert scale, with 1 indicating a poor matchand 7 a very good one (see Figure 6).
In a sep-arate task with the same experimental procedure,we asked other participants to rate the overall plau-sibility of each generated scene without a refer-ence description.
This plausibility rating measureswhether a method can generate plausible scenesirrespective of the degree to which the input de-scription is matched.
We used Amazon Mechan-ical Turk to recruit 168 participants for rating thematch of scenes to descriptions and 63 participantsfor rating scene plausibility.Design The experiment followed a within-subjects factorial design.
The dependent measurewas the Likert rating.
Since per-participant andper-scene variance on the rating is not accountedfor by a standard ANOVA, we use a mixed effectsmodel which can account for both fixed effects andrandom effects to determine the statistical signifi-method Seeds MTurkrandom 2.03 (1.88 ?
2.18) 1.68 (1.57 ?
1.79)learned 3.51 (3.23 ?
3.77) 2.61 (2.40 ?
2.84)rule 5.44 (5.26 ?
5.61) 3.15 (2.91 ?
3.40)combo 5.23 (4.96 ?
5.44) 3.73 (3.48 ?
3.95)human 6.06 (5.90 ?
6.19) 5.87 (5.74 ?
6.00)Table 2: Average scene-description match ratingsacross sentence types and methods (95% C.I.
).cance of our results.4We treat the participant andthe specific scene as random effects of varying in-tercept, and the method condition as the fixed ef-fect.Results There was a significant effect of themethod condition on the scene-description matchrating: ?2(4, N = 5040) = 1378.2, p < 0.001.Table 2 summarizes the average scene-descriptionmatch ratings and 95% confidence intervals forall sentence type?condition pairs.
All pairwisedifferences between ratings were significant un-der Wilcoxon rank-sum tests with the Bonferroni-Holm correction (p< 0.05).
The scene plausibilityratings, which were obtained independent of de-scriptions, indicated that the only significant dif-ference in plausibility was between scenes cre-ated by people (human) and all the other condi-tions.
We see that for the simple seed sentencesboth the rule-based and combined model approachthe quality of human-created scenes.
However,all methods have significantly lower ratings forthe more complex MTurk sentences.
In this morechallenging scenario, the combined model is clos-est to the manually created scenes and signifi-cantly outperforms both rule-based and learnedmodels in isolation.7.3 Error AnalysisFigure 7 shows some common error cases in oursystem.
The top left scene was generated with therule-based method, the top right with the learnedmethod, and the bottom two with the combinedapproach.
At the top left, there is an erroneousselection of concrete object category (wood logs)for the four wood chairs reference in the inputdescription, due to an incorrect head identifica-tion.
At top right, the learned model identifies the4We used the lme4 R package and optimized fit withmaximum log-likelihood (Baayen et al, 2008).
We reportsignificance results using the likelihood-ratio (LR) test.59Figure 7: Common scene generation errors.
Fromtop left clockwise: Wood table and four woodchairs in the center of the room; There is a blackand brown desk with a table lamp and flowers;There is a white desk, a black chair, and a lampin the corner of the room; There in the middle is atable, on the table is a cup.presence of brown desk and lamp but erroneouslypicks two desks and two lamps (since we alwayspick the top four objects).
The scene on the bot-tom right does not obey the expressed spatial con-straints (in the corner of the room) since our sys-tem does not understand the grounding of roomcorner and that the top right side is not a good fitdue to the door.
In the bottom left, incorrect coref-erence resolution results in two tables for There inthe middle is a table, on the table is a cup.7.4 Scene Similarity MetricWe introduce an automated metric for scoringscenes given a scene template representation, thealigned scene template similarity (ASTS).
Givena one-to-one alignment A between the nodes of ascene template and the objects in a scene, let thealignment penalty J(A) be the sum of the numberof unaligned nodes in the scene template and thenumber of unaligned objects in the scene.
For thealigned nodes, we compute a similarity score S pernode pair (n, n?)
where S(n, n?)
= 1 if the modelID matches, S(n, n?)
= 0.5 if only the categorymatches and 0 otherwise.We define the ASTS of a scene with respect toa scene template to be the maximum alignmentmethod Human ASTSrandom 1.68 0.08learned 2.61 0.23rule 3.15 0.32combo 3.73 0.44Table 3: Average human ratings (out of 7) andaligned scene template similarity scores.score over all such alignments:ASTS(s, z) = maxA?(n,n?
)?AS(n, n?
)J(A) + |A|.With this definition, we compare average ASTSscores for each method against average human rat-ings (Table 3).
We test the correlation of the ASTSmetric against human ratings using Pearson?s rand Kendall?s rank correlation coefficient r?.
Wefind that ASTS and human ratings are strongly cor-related (r = 0.70, r?= 0.49, p < 0.001).
Thissuggests ASTS scores could be used to train andalgorithmically evaluate scene generation systemsthat map descriptions to scene templates.8 Future WorkMany error cases in our generated scenes resultedfrom not interpreting spatial relations.
An obvi-ous improvement would be to expand our learnedlexical grounding approach to include spatial rela-tions.
This would help with spatial language thatis not handled by the rule-based system?s depen-dency patterns (e.g., around, between, on the eastside).
One approach would be to add spatial con-straints to the definition of our scene similarityscore and use this improved metric in training asemantic parser to generate scene templates.To choose objects, our current system usesinformation obtained from language?object co-occurrences and sparse manually-annotated cate-gory labels; another promising avenue for achiev-ing better lexical grounding is to propagate cate-gory labels using geometric and image features tolearn the categories of unlabeled objects.
Novelcategories can also be extracted from Turker de-scriptions.
These new labels could be used to im-prove the annotations in our 3D model database,enabling a wider range of object types to be usedin scene generation.60Our approach learns object references withoutusing lexical similarity features or a manually-assembled lexicon.
Thus, we expect that ourmethod for lexical grounding can facilitate de-velopment of text-to-scene systems in other lan-guages.
However, additional data collection andexperiments are necessary to confirm this andidentify challenges specific to other languages.The necessity of handling omitted informationsuggests that a model incorporating a more so-phisticated theory of pragmatic inference could bebeneficial.
Another important problem not ad-dressed here is the role of context and discoursein interpreting scene descriptions.
For example,several of our collected descriptions include lan-guage imagining embodied presence in the scene(e.g., The wooden table is to your right, if you?reentering the room from the doors).9 ConclusionPrior work in 3D scene generation relies on purelyrule-based methods to map object references toconcrete 3D objects.
We introduce a dataset of 3Dscenes annotated with natural language descrip-tions which we believe will be of great interestto the research community.
Using this corpus ofscenes and descriptions, we present an approachthat learns from data how to ground textual de-scriptions to objects.To evaluate how our grounding approach im-pacts generated scene quality, we collect humanjudgments of generated scenes.
In addition, wepresent a metric for automatically comparing gen-erated scene templates to scenes, and we show thatit correlates strongly with human judgments.We demonstrate that rich lexical grounding canbe learned directly from an unaligned corpus of3D scenes and natural language descriptions, andthat our model can successfully ground lexicalterms to concrete referents, improving scene gen-eration over baselines adapted from prior work.AcknowledgmentsWe thank Katherine Breeden for valuable feed-back.
The authors gratefully acknowledge the sup-port of the Defense Advanced Research ProjectsAgency (DARPA) Deep Exploration and Filter-ing of Text (DEFT) Program under Air Force Re-search Laboratory (AFRL) contract no.
FA8750-13-2-0040, the National Science Foundation un-der grant no.
IIS 1159679, the Department ofthe Navy, Office of Naval Research, under grantno.
N00014-10-1-0109, and the Stanford Grad-uate Fellowship fund.
Any opinions, findings,and conclusions or recommendations expressed inthis material are those of the authors and do notnecessarily reflect the views of the National Sci-ence Foundation, the Office of Naval Research,DARPA, AFRL, or the US government.ReferencesR.H.
Baayen, D.J.
Davidson, and D.M.
Bates.
2008.Mixed-effects modeling with crossed random effectsfor subjects and items.
Journal of Memory and Lan-guage, 59(4):390?412.Angel X. Chang, Manolis Savva, and Christopher D.Manning.
2014.
Learning spatial knowledge fortext to 3D scene generation.
In Proceedings ofEmpirical Methods in Natural Language Processing(EMNLP).Bob Coyne and Richard Sproat.
2001.
WordsEye: anautomatic text-to-scene conversion system.
In Pro-ceedings of the 28th Annual Conference on Com-puter Graphics and Interactive Techniques.Bob Coyne, Alexander Klapheke, MasoudRouhizadeh, Richard Sproat, and Daniel Bauer.2012.
Annotation tools and knowledge represen-tation for a text-to-scene system.
Proceedings ofCOLING 2012: Technical Papers.Ali Farhadi, Mohsen Hejrati, Mohammad AminSadeghi, Peter Young, Cyrus Rashtchian, JuliaHockenmaier, and David Forsyth.
2010.
Every pic-ture tells a story: Generating sentences from images.In Computer Vision?ECCV 2010.Matthew Fisher, Daniel Ritchie, Manolis Savva,Thomas Funkhouser, and Pat Hanrahan.
2012.Example-based synthesis of 3D object arrange-ments.
ACM Transactions on Graphics (TOG),31(6):135.Nicholas FitzGerald, Yoav Artzi, and Luke Zettle-moyer.
2013.
Learning distributions over logicalforms for referring expression generation.
In Pro-ceedings of Empirical Methods in Natural LanguageProcessing (EMNLP).Dave Golland, Percy Liang, and Dan Klein.
2010.A game-theoretic approach to generating spatial de-scriptions.
In Proceedings of Empirical Methods inNatural Language Processing (EMNLP).Peter Gorniak and Deb Roy.
2004.
Grounded semanticcomposition for visual scenes.
Journal of ArtificialIntelligence Research (JAIR), 21(1):429?470.Peter Gorniak and Deb Roy.
2005.
Probabilisticgrounding of situated speech using plan recognitionand reference resolution.
In Proceedings of the 7thInternational Conference on Multimodal Interfaces.61Andrej Karpathy, Armand Joulin, and Li Fei-Fei.
2014.Deep fragment embeddings for bidirectional imagesentence mapping.
In Advances in Neural Informa-tion Processing Systems.Sahar Kazemzadeh, Vicente Ordonez, Mark Matten,and Tamara L. Berg.
2014.
ReferItGame: Refer-ring to objects in photographs of natural scenes.
InProceedings of Empirical Methods in Natural Lan-guage Processing (EMNLP).Jayant Krishnamurthy and Thomas Kollar.
2013.Jointly learning to parse and perceive: Connectingnatural language to the physical world.
Transac-tions of the Association for Computational Linguis-tics, 1:193?206.Girish Kulkarni, Visruth Premraj, Sagnik Dhar, SimingLi, Yejin Choi, Alexander C. Berg, and Tamara L.Berg.
2011.
Baby talk: Understanding and gener-ating simple image descriptions.
In IEEE Confer-ence on Computer Vision and Pattern Recognition(CVPR).Christopher D. Manning, Mihai Surdeanu, John Bauer,Jenny Finkel, Steven J. Bethard, and David Mc-Closky.
2014.
The Stanford CoreNLP natural lan-guage processing toolkit.
In Proceedings of the52nd Annual Meeting of the Association for Com-putational Linguistics: System Demonstrations.Cynthia Matuszek, Nicholas FitzGerald, Luke Zettle-moyer, Liefeng Bo, and Dieter Fox.
2012.
A jointmodel of language and perception for grounded at-tribute learning.
In International Conference onMa-chine Learning (ICML).George A. Miller.
1995.
WordNet: A lexicaldatabase for English.
Communications of the ACM,38(11):39?41.Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu.
2002.
BLEU: A method for automaticevaluation of machine translation.
In Proceedingsof the 40th Annual Meeting of the Association forComputational Linguistics.Masoud Rouhizadeh, Margit Bowler, Richard Sproat,and Bob Coyne.
2011.
Collecting semantic data byMechanical Turk for the lexical knowledge resourceof a text-to-picture generating system.
In Proceed-ings of the Ninth International Conference on Com-putational Semantics.Manolis Savva, Angel X. Chang, Gilbert Bernstein,Christopher D. Manning, and Pat Hanrahan.
2014.On being the right scale: Sizing large collections of3D models.
In SIGGRAPH Asia 2014 Workshopon Indoor Scene Understanding: Where Graphicsmeets Vision.Lee M. Seversky and Lijun Yin.
2006.
Real-time au-tomatic 3D scene generation from natural languagevoice and text descriptions.
In Proceedings of the14th Annual ACM International Conference on Mul-timedia.Behjat Siddiquie, Rog?erio Schmidt Feris, and Larry S.Davis.
2011.
Image ranking and retrieval basedon multi-attribute queries.
In IEEE Conference onComputer Vision and Pattern Recognition (CVPR).Terry Winograd.
1972.
Understanding natural lan-guage.
Cognitive Psychology, 3(1):1?191.C.
Lawrence Zitnick, Devi Parikh, and Lucy Vander-wende.
2013.
Learning the visual interpretationof sentences.
In IEEE International Conference onComputer Vision (ICCV).62
