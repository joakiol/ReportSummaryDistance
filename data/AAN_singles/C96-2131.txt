An Agreement Corrector for RussianLeonid MitjnshinInstitute for Information Transmission ProblemsRussian Academy of SciencesBolshoj Karetnyj Per.
19101447 GSP-4 Moscow, Russiamit@ippi.ac.msk.suAbstractThe paper describes an application-orientedsystem that corrects agreement errors.
In orderto correct a sentence with such errors, an ex-tended morphological structure is createdwhich contains various grammatical forms ofthe words used in the sentence.
For this struc-ture the bottom-up arsing is performed, andsyntactic structures are found that containminimal number of changes in comparisonwith the original sentence.
Experiments withreal sentences have shown promising results.i IntroductionCorrection of agreement errors in Russian texts is aproblem of real practical interest.
Being a languageof the inflectional type, Russian has a rich system ofword changing.
The paradigm of a typical verbcontains 30 finite forms and 190 participles, as wellas infinitives and certain other forms.
The completeadjectival paradigm contains 57 forms, and theparadigm of a noun - 12 forms.
Although the num-ber of different graphic words in a paradigm is usu-ally less than the total number of forms, it is alsorather large.
For that reason, agreement errors give ahigh proportion of all grammatical errors in Russiantexts (here and below the expression *agreementerrors' means the use of words in incorrect forms).In this paper we describe an application-orientedsystem that corrects uch errors.
The system, calledbelow 'corrector', uses a formal description of theRussian syntax in terms of dependency structures.In our case, these structures are directed trees whosenodes represent the words of a sentence, and whosearcs are labelled with names of syntactic relations(see Mel'~uk 1974; Mel'~uk and Pertsov 1987;Apresjan et al 1992).
The corrector is based on thegeneral idea widely used in this kind of systems: ifan input sentence is syntactically ill-formed, i.e.
itcannot be assigned a syntactic structure (SyntS),the system considers minimal changes that enable itto construct a SyntS, and presents them as possiblecorrections (see, for example, Carbonell and Hayes1983; Jensen et al 1983; Weiscbedel and Sond-heimer 1983; Mellish 1989; Bolioli et al 1992).A segment of a sentence is called 'syntacticallyconnected' if a well-formed ependency tree can beconstructed on it.
(In terms of constituents, con-nectedness of a segment would mean that it can beparsed as a single constituent.)
The 'degree of syn-tactic disconnectedness' of a sentence is defined asthe least number C of connected segments intowhich the sentence can be partitioned.
Hence,C = 1 if and only if the sentence can be assigned aSyntS; for an "absolutely disconnected" sentence Cwould be equal to the number of words.
The generalidea of correction can be expressed in these terms asfollows: for an input sentence, which has C > l,minimal changes are considered that produce sen-tences with C = I.
A more "indulgent" strategy isalso possible which only requires that the value ofC for new sentences should be less than the initialvalue, and not necessarily equal to 1.In the case of correcting agreement crrorschanges concern only word forms, while the lexicalcontent and word order of the sentence do not vary.At first, the corrector tries to improve the sentenceby changing a single word; in case of failure, ittries to change a pair of words, then a triple ofwords and so on.
Actually, particular subsets ofwords to be changed are not considered, but insteadthe bottom-up parsing is performed which con-structs syntactic subtrees that contain no more thanR modified words; here R is a parameter which issuccesively assigned values l, 2 .. .
.At present, the linguistic information used by thecorrector is not complete.
The morphological andsyntactic dictionaries, which describe respectivelythe paradigms and syntactic properties of words,cover about 15 thousand words; the grammar doesnot cover a number of less frequent syntactic on-structions.
Nevertheless, experiments show that, ifsupplied with a large morphological dictionary, thecorrector even in its current state could effectivelyprocess real texts.Incompleteness of the syntactic dictionary isovercome by assigning 'standard' entries to thewords absent from it (but present in the morpho-logical dictionary).
A standard entry describes yn-tactic properties typical of the words with a par-ticular type of paradigm.
Due to incompleteness ofthe grammar, tile corrector fails to construct SyntSsfor certain well-formed sentences.
(Here and belowa sentence is called 'well-formed' if it has one ormore SyntSs which are correct with respect o the(hypothetical) complete grammar; otherwise a sen-tence is called 'ill-formed'.)
For that reason, allsentences whose degree of disconnectedness i  lessthan that of the input sentence (C) are regarded as776'improvements'.
If C = 1, the input sentence is('onsidered correct, and if C > 1 and improve-ments have not been found, it is considered 'quasi-correct'.The corrector was tested on sentences chosen atrandom from the Russian journal Computer ScienceAbstracts.
The experiments are described in detailin Section 5; here we present only the main results.Of 100 sentences chosen, 95 were evaluated as cor-rect or quasi-correct; 3 gave 'false alarms', i.e.wrong corrections were proposed; 2 cases gave sys-tem failure (exhaustion of time or memory quotas).The same 100 sentences with single random distor-tions gave the following results: 14 turned out to bcwell-formed and were evaluated by the system ascorrect or quasi-correct; in 79 cases the initial sen-tences were reconstructed; in 5 cases wrong correc-tions were proposed; 2 cases gave system failure.The repeated experiment with distorted sentencesgenerated by a different series of pseudo-randomnumbers gave respectively the figures 10, 84, 5,and I.It can be said that in these experiments the dif-ference in performance between the system de-scribed and the "ideal" corrector was 5% for correctsentences and 6 - 7% for sentences with single dis-tortions.
For more than 90% of ill-formed sentencesthe right corrections were found.A natural application of an agreement correctoris to process texts in computer editors.
Anotherpossibility is to combine it with a scanner forreading printed texts.
Applying this system to prob-lems with "high noise", such as reading handwrittentexts or speech recognition, seems more question-able: observations show that when the density oferrors increases, the quality of correction becomesrather low.Further development of the corrcctor includes asthe first step incorporation of a large morphologicaldictionary (in the experiments he entries of wordsabsent from the morphological dictionary wereadded to it before running the corrector, i.e.
a"complete" dictionary was simulated).
Then thesyntactic dictionary and the grammar should beextended, and further debugging on real textsshould be carried out.2 Parsing the Input SentenceThe corrector begins its work with ordinary mor-phological analysis and parsing of the input sen-tence.As a result of morphological analysis, for eachword all its possible morphological interpretations(called 'homonyms') are constructed.
A homonymconsists of a lcxcme name, a part-of-speech marker,and a list of values of morphological features, suchas number, case, gender, tense, voice, and so on.The set of all homonyms built for a sentence iscalled its morphological structure (MorphS).Tile MorphS is regarded as input information forthe parser, which is based on the bottom-up rinci-ple.
The bottom-up method for dependency struc-tures was proposed by Lejkina and Tsejtin (1975).Let 'fragment' be a dependency tree constructed ona certain segment of a sentence.
Precisely speaking,a fragment is a set of homonyms occupying one ormore successive positions in the sentence (onehomonym in each position) together with a directedtree defined on these homonyms as nodes, the arcsof the tree being labelled with names of syntacticrelations (such arcs are called 'syntactic links').
Aseparate homonym and a SyntS are "extreme" in-stances of fragments.If two fragments are adjacent in the sentence,then drawing a syntactic link from a certain nodeof one fragment o the root of the other creates anew fragment on the union of segments occupied bythe initial fragments (this is similar to constructinga new constituent from two adjacent constituents).By such operations, starting from separate homo-nyms, we can construct a SyntS of the sentenceprovided it does not contain 'tangles' (Mitjushin1999); though SyntSs with tangles may occur, theyare very infrequent and "pathological".Correctness of links between fragments is deter-mined by grammar ubs which have access to allinformation about the fragments to be linked, in-cluding the syntactic entries for homonyms in theirnodes.In the course of parsing, only the most preferredof all fragments are built (see Section 4).
Besidesthat, many fragments are excluded at certain inter-mediate points.
As a result, the amount of comput-ing is substantially reduced, and though the ex-pected total number of fragments remains exponen-tial with respect o the length of the sentence, thecases of "combinatorial explosion" are fairly infre-quent (2% in our experiments).For the set of fragments constructed, the degreeof disconnectedness C is counted as the least num-ber of fragments covering all words of the sentence.This value of C will be denoted by C(0).
If at leastone complete SyntS has been built, then C(0) = l;otherwise C(0) > I.
In case C(0) = l the sen-tence is regarded as correct and the process termi-nates, in case C(0) > l an attempt is made toimprove the sentence.3 Search for CorrectionsThe process used to find corrections i quite similarto the ordinary parsing described in the previoussection.
The main difference is that the parser getsas the input not the initial MorphS but the 'ex-tended' one, which is constructed by adding newhomonyms to the initial MorphS.
The new homo-nyms arise as the result of varying the forms of thewords of the input sentence.
The process of varyingconcerns only semantically empty morphologicalfeatures, such as the case of a noun, the number,777gender and person of a finite verb, the number,gender and case of an adjective or participle, andthe like.
Transforming finite verbs into infinitivesand vice versa is also regarded as semanticallyempty.As a result, for each homonym of the initialMorphS a 'set of variants' is built, i.e.
a certain setof homonyms of the same lexeme that contains thegiven homonym.
For unchangeable words and incertain other cases no real variation takes place,and the set of variants contains a single element,namely the given homonym.
The precise rules forconstructing variants may be found in (Mitjushin1993).
The extended MorphS is the union of thesets of variants built for all homonyms of the initialMorphS.
On average, the extended MorphS is muchlarger than the initial: for 100 sentences from theComputer Science Abstracts the mean number ofhomonyms in the initial MorphS was 2.4n, while inthe extended one it was 12.2n, where n is the num-ber of words in the sentence.The extended MorphS is processed by the parserfor various values of the parameter R which limitsthe number of changed words in the sentence.
R issuccesively assigned values !, 2 .
.
.
.
, Rma x (whereRma x is set by the user), and for each R parsing isrepeated from the beginning.
Let d he the numberof homonyms of a certain fragment which do notbelong to the initial MorphS, i.e.
the graphic wordsof which are different from the words of the inputsentence.
In a sense, d is the distance between thefragment and the input sentence.
In the course ofparsing only those fragments are considered forwhich d < R; one can imagine that the parsingalgorithm remains unchanged, but creation of frag-ments with d > R is blocked in the grammarrules.For each value of R, the degree of disconnected-ness C = C(R) is calculated for the results ofparsing.
It shonld be noted that if we put R = 0,then parsing on the extended MorphS is actuallyreduced to that on the initial MorphS, which justi-fies the notation C(0) introduced in the previoussection.
Function C(R) does not increase forR > 0.
Behaviour of the corrector may in differentways depend on the values of C(R), which wouldresult in different modes of operation.If parsing is highly reliable, i.e.
the probabilityto construct at least one SyntS for a well-formedsentence is close to l, and the same probability foran ill-formed sentence is close to 0, then it is rea-sonable to regard all sentences with C(0) > 1 asincorrect and carry out parsing on the extendedMorphS until C(R) = 1 is achieved for some R,i.e.
at least one SyntS is constructed.
Then, replac-ing the homonyms of each SyntS by their graphicrepresentations (that is, transforming tbem intoordinary words), we obtain hypothetical correctedsentences; ome of them may be identical, as differ-ent homonyms may be represented by the samegraphic words.
Each of the created sentences con-rains exactly R words changed in comparison withthe input sentence.If C(R) > 1 for all R < Rmax, correctionscannot be constructed within this mode.
Itowever,the corrector can inform the user that the inputsentence is syntactically ill-formed, and indicate thegaps in the SyntS, i.e.
the boundaries of the frag-ments which providc the minimal covering of thesentence for R = 0.In our case, due to incompleteness of the gram-mar, many well-formed sentences would haveC(0) > I.
However, the majority of the missingrules describe links which do not require agreement,and so for ahnost all well-formed sentencesC(R)=C(O) for all R>0,  i.e.
they turn out tobe 'unimprovable'.
Taking this fact into account, weadopted the following strategy: the least R1 isfound for which C(R) = C(R 1) for all R,RI < R _< Rmax.
In other words, R 1 is the leastvalue of R for which the situation becomes 'unim-provable' (within the extended MorphS constructedfor the input sentence).
If Rl > 0, i.e.C(R l) < C(0), then for R = R1 the minimal setsof fragments covering all words of thc sentcnec areconsidered.
Replacing the homonyms of those frag-ments by their graphic representations, we obtainhypothetical corrected sentences.
In case of over-lapping fragments, the problem of choosing amongseveral homonyms could arise, but actually over-lapping does not occur.Experiments with the corrector showed from thevery beginning that the process described oftengenerated redundant hypothetical corrections.
So anadditional pruning step was introduced, which willbe described for tile case of SyntS (for fragmentseverything is quite similar).
The arcs of a SyntS areassigned certain weights which express relative"strength" or "priority" of the corresponding syn-tactic relations; the weight of the SyntS is equal tothe sum of the weights of its arcs.
The maximumweight over all constructed SyntSs is counted, andonly SyntSs with that weight are retained.Though this method is simple, it proved to bequite effective and reliable: in most cases tl\]e cor-rector generates a single hypothetical correction,while the probability of losing the right correctionis rather small.4 ImplementationThe system described is based on tile "Meaning -Text" linguistic model (Mel'~uk 1974; see alsoMel'6uk and Pertsov 1987) and its coinputer im-plementation - a multi-purpose linguistic processordeveloped at the Institute for Information Trans-mission Problems of the Russian Academy of Sci-ences (Apresjan et al 1992).The corrector employs the morphological andsyntactic dictionaries of Russian which are part ofthe processor.
As regards its linguistic content, thegrammar of the corrector is similar to the Russian778grammar used in tim processor, as they describe thesame corresixmdence b tween Russian sentences andtheir syntactic structures, ltowever, the eorrectoruses a different formalism to represent rules, whichpartly stems from the difference in parsing methods:in the processor an algorithm of the so-called 'filter-ing' type is implemented, while the corrector usesan algorithm of the 'bottom-ut?
variety.It shouhl be noted dmt, in contrast o certainother systems (for example, Jensen et al 1983;Weischedel and Sondheimer 1983; V&onis 1988;Chanod et at.
1992), the present corrcvtor does notcontain any 'negative' information intended specifi-cally for correcting errors.
It contains only 'positive'rules that describe correct SyntSs and their partsand are assumed to be used in ordinary parsing.Correction of errors is reduced to parsiug on theextended MorphS, as described in ~ction 3.In comparison with the experimental version ofthe system (Mitjushin 1993), in the present w~'rsionthe grammar is augmented, and it is made possibleto process words absent from the syntactic diction-ary and to consider quasi-correct sentences.
Now, tomake the corrector applicable to real texts, it issufficient to supply it with a large morphologicaldictionary.Such a dictionary containing about 90 thousandwords has recently been compiled at IITP byVladimir Sannikov.
It is rather close by its lexicalcontent to the Grammatical Dictionary by Zaliz-njak (1980), but is based on the model of Russianmorphology used in the linguistic processor.Compilation of a large syntactic dictionary is amore labour-consuming task, as its entries containmore complex information.
For each word theremust be specified a set of relevant syntactic features(from the full list of 240 features), a set of seman-tic categories (from the list of 50 categories), and agovernment pattern which expresses the require-ments that must be fulfilled by the elements repre-senting in the SyntS the semantic actants of theword (Mei'~.uk 1974; Mel'~uk and Pertsov 1987;Apresjan et al 1992).Verbs, nouns, adjectives, and adverbs which arepresent in the morphological dictionary but absentfrom the syntactic one are assigned one of the fol-lowing standard entries:transitive verb,intransitive verb,inanimate masculine noun,animate masculine noun,inanimate feminine noun,animate feminine nolnl,neuter noun~adj ectiw~',adverv.Words of other parts of speech constitute closedclasses and nmst be present in the syntactic diction-ary.
The standard entries contain "generalized" in:formation which is typical of words of the specifiedcategories.
A verb is assumed to be transitive if itsparadigm contains passive forms.
The gender andanimacy of a noun are explicitly indicated in itsparadigm.Although this method is rather approximate byits nature, it works quite well: in most cases stan-dard entries do not prevent he parser from buildingcorrect or "ahnost correct" SyntSs (the latter differ-ing from the former in nalnes of relations on certainarcs).
The reason of this is, on the one hand, thatthe majority of words with highly idiosyncraticbehaviour are present in the 15-thousand dictionaryof the linguistic processor, and, on the other hand,that syntactic peculiarities of words are often ir-relevant to specific constructions in which theyoccur (for instance, consider the first two oc-curences of the verb be in the sentence 7"o be, or notto be: that is the question).Tim algorithms by which the corrc~tor constructsthe initial and extended MorphSs are similar to thealgorithms of morphological nalysis and synthesisused in the linguistic processor.Due to space limitations, we cannot describe theparsing algorithm in detail and give only a sketch.The parsing, i.e.
constructing fragments by thebottom-up rocedure, is performed in three stages,in the order of decreasing predictability of syntacticlinks.
The parser intensively exploits the idea ofsyntactic preference used in a wide range of systemsbased on various principles (see, for example,Tsejtin 1975; Kulagina 1987, 1990; Tsujii et al1988; llobbs and Bear 1990).At the first stage the parser constructs fragmentscontaining 'high-l)rnbability' links; as a result, onaverage 70 - 80% of all syntactic links of a sentenceare established (for details see Mitjushin 1992).
Atthe second stage the fragments are connected with"weaker" and more ainbiguous links, like those be-tween a verb or noun and a modifying prepositionalphrase.
At the third stage "rare" and/or  "far" linksare established, such as coordination of independentclauses.
At the second and third stage attempts arealso made t() establish links of previous stages, asthey could be not established at their "own" stagebecause of missing intermediate links of tile laterstages.At each stage the sentence is looked throughfrom left to right, and attempts are made to linkeach fragment with its left neighbours.
A strongsystem of preferences i  used which substautiallyreduces the number of arising fragments.
Its mainpoints are: longer fragments are preferred to shorterones; links of earlier stages are preferred to those oflater stages; shorter links are preferred to longerones.
The general rule requires that only the mostpreferred of all lX~ssible actions should be consid ~ered.
Only if they all fail, the actions of the nextpriority h;vel are considered, and so on.After each stage only 'maximal' fragments areretained (a fragment is maximal if its segment isnot a proper part of the segment of any other frag-Inent).
The process terminates after the stage atwhich complete SyntSs have arisen; otherwise the779Tab le  t .
Results  for d is tor ted sentences wh ich  are not  correct  or quas i -correct(P  is the set of correct ions proposed) .Rightcorrection:P containsthe initialsentenceWrongcorrection:P does not con-tain the initialsentenceNumber ofsentencesin PNumber of cases1 st series74505002nd series7010500System failure 2 186 Total: 90fragments left after the third stage are regarded asthe final result of parsing.It should be noted that grammar rules, by meansof special operations, can change priorities of linksand fragments in order to widen the search if thereis a danger to "lose" correct fragments.
They canalso mark the fragments which must be retainedafter the stage even if they are not maximal.
As therules have access to all information about the frag-ments they consider, this makes it possible to con-trol the parsing process effectively enough depend-ing on the specific situation in the sentence.5 P re l iminary  Exper imentsIn order to evaluate performance of the corrector,100 sentences were chosen at random from the jour-nal Computer Science Abstracts ('referativnyj zhur-nal Vychislitel'nye Nauki', in Russian).
The sen-tences had to have no more than 50 words and tocontain no formulas or words in Latin alphabet.The words absent from the morphological diction-ary were added to it before the experiments (suchwords covered about 5% of all word occurences inthose sentences),The chosen 100 sentences were processed by thecorrector.
Then a single random distortion wasmade in each sentence, and the 100 distorted sen-tences were processed (this was made twice, withdifferent series of pseudo-random numbers used togenerate distortions).
As only single distortionswere considered, it was fixed Rma x = 2.The 100 initial sentences gave the following re-suits.
In 75 cases SyntSs were built; 20 sentenceswere evaluated as quasi-correct, i.e.
they had1 < C(0) = C(1) = C(2); for 3 sentences wrong"corrections" were proposed; in one case the timelimit (120 seconds) was exceeded; one case gave anoverflow of working arrays.
Thus, the corrector'sreaction was right for 95 sentences.Distortions were generated as follows.
A word ofthe sentence was chosen at random for which thenumber of homonym s in the extended MorphS wasgreater than that in the initial one (the mean num-ber of such "changeable" words in a sentence was14.3, while the mean length of a sentence was 17.6words).
A list of different graphic words corre-sponding to those homonyms was built (on average,it contained 7.7 words), and one of the words dif-ferent from the initial word was chosen at random.All random choices were made with equal prob-abilities for the results.
An additional conditionwas imposed that the initial word should belong tothe set of variants of the new one (sometimes itmay not hold).
If this was not fulfilled, generationof a distorted sentence was repeated.Some of distorted sentences turn out to be well-formed (for the distortions described, the probabil-ity of this is about 10 - 15%).
In most cases suchsentences are semantically and/or  pragmaticallyabnormal.
However, it cannot be established on thesyntactic level, just as a spelling corrector is help-less if a word is transformed by an error into an-other existent word.There were 14 well-formed sentences in the first780series of distorted sentences, and 10 in the secondseries.
The corrector evaluated all those sentences ascorrect or quasi-correct.
The results for the otherdistorted sentences are shown in Table 1.
On thewhole, for the first series of distorted sentences thecorrector's reaction was right in 93 cases, and forthe second in 94 cases.No regular experiments were carried out for sen-tences containing more than one distortion.
Ourexperience suggests that if the number of distortedwords is small and they are syntactically isolated,i.e.
the corresponding nodes are not too close toeach other in the SyntS of the original sentence,then the system corrects each distortion independ-ently of the others, as if it were the only one in thesentence.
On the other hand, for massively dis-torted (and not too short) sentences probability ofgood results is rather low.The mean processing time on the MicroVAX3100 computer was 11.2 seconds for an initial sen-tence (0.64 seconds per word) and 11.4 seconds fora distorted one.
Faster performance may be ex-pected when the granunar is enlarged, because theproportion of sentences with SyntSs in comparisonwith quasi-correct ones will become higher.
Forquasi-correct sentences parsing must be performedfor all R _< Rmax, while for sentences with SyntSsit must be done only for R = 0 (if a correct sen-tence is to be checked) or for R -< K (if K distor-tions are to be corrected).
In our experiments, forinitial sentences with SyntSs the mean processingtime was 2.6 seconds (0.17 seconds per word, themean length of such sentences being 15.5 words),and the mean time of parsing was 0.6 seconds.AcknowledgementsThis work was supported by 1NTAS grant 94-3509.I am grateful to the anonymous referees for com-ments on the preliminary version of the paper.ReferencesApresjan, Ju.D., Boguslavskij, I.M., Ioindin,L.L., Lazurskij, A.V., Mitjushin, L.G., Sannikov,V.Z., and Tsinman, L.L.
1992.
LingvistlcheskijProtsessor dlja Slozhnykh lnformatsionnykhSistem.
Nauka, Moscow.
('A linguistic processor forcomplex information systems', in Russian)Bolioli, A., l)ini, L., and Malnati, G. 1992.JDIh Parsing Italian with a robust constraintgramnmr.
In Proceedings of COLING-92, Vol.
3,Nantes, pp.
1003 - 1007.Carbonell, J.G.
and Ilayes, P.J.
1983.
Recoverystrategies for parsing extragrammatical language.American Journal of Computational Linguistics,Vol.
9, No.
3 - 4, pp.
123 - 146.Chanod, J.-P., El~Bbze, M., and Guillemin~Lanne, S. 1992.
Coupling an automatic dictationsystem with a grammar checker.
In Proceedings ofCOLING-92, Vol.
3, Nantes, pp.
940 - 944.Hobbs, J.R. and Bear, J.
1990.
Two principles ofparse preference.
In Proceedings of COLING-90,Vol.
3, Helsinki, pp.
162 - 167.Jensen, K., Heidorn, G.E., Miller, L.A., andRavin, Y.
1983.
Parse fitting and prose fixing: get-ring a hold on ill-formedness.
American Journal ofComputational Linguistics, Vol.
9, No.
3 - 4, pp.147- 160.Kulagina, O.S.
1987.
Ob Avtomaticheskom Sin-taksicheskom Analize Russkikh Tekstov.
PreprintNo.
205, Institute for Applied Mathematics, Mos-cow.
( 'On automatic parsing of Russian texts', inRussian)Kulagina, O.S.
1990.
O Sintaksicheskom Analizena Osnove Predpochteni\].
Preprint No.
3, Institutefor Applied Mathematics, Moscow.
( 'On preference-based parsing', in Russian)Lejkina, B.M.
and Tsejtin, G.S.
1975.
Sintaksi-cheskaja model' s dopushchenijem ogranichennojneprojektivnosti.
In Mezhdunarodnyj Seminar poMashinnomu Perevodu, Moscow, pp.
72 - 74.
('Asyntactic model allowing limited non-projectivity',ill Russian)Mel'~uk, I.A.
1974.
Opyt Teorii L ingvis-ticheskikh Modele/ "Smysl ~ Tekst".
Nauka, Mos-cow.
('Toward a theory of Meaning ~-~ Text lin-guistic models', ill Russian)Mel'~uk, I.A.
and Pertsov, N.V. 1987.
SurfaceSyntax of EnglLsh: A Formal Model within theMeaning - Text Framework.
John Benjainins, Am-sterdam.Mellish, C.S.
1989.
Some chart-based techniquesfor parsing ill-formed input.
In Proceedings of the27th Annual Meeting of ACL, Vancouver, pp.
102 -109.Mitjushin, L.G.
1992. tligh-probability syntacticlinks.
In Proceedings of COLING-92, Vol.
3, Nan-tes, pp.
930 - 934.Mitjushin, L.G.
1993.
O korrektsii oshibok so-glasovanija v russkikh tekstakh.
Nauchno-Tekhnicheskaja lnformatsija, series 2, No.
10, pp.28 - 32.
( 'On correction of agreement errors inRussian texts', in Russian)Tsejtin, G.S.
1975.
Metody sintaksicheskogoanaliza, ispol'zujushchije predpochtenije jazykovykhkonstruktsij: modeti eksperimenty.
In Mezhduna-rodny\] Seminar po Mashinnomu Pereoodu, Mos-cow, pp.
131 - 133.
('Parsing methods based onpreference of the language constructions: modelsand experiments', in Russian)Tsujii, J., Muto, Y., \]keda, Y., and Nagao, M.1988.
How to get preferred readings in natural an-guage analysis.
In Proceedings of COLING 88,Vol.
2, Budapest, pp.
683 - 687.Vdronis, J.
1988.
Morphosyntactic correction innatural language interfaces.
In Proceedings ofCOLING-88, Vol.
2, Budapest, pp.
708 - 713.Weischedel, R.M.
and Sondheimer, N.K.
1983.Meta-rules as a basis for processing ill-formed in-put.
American Journal of Computational LinguLs-tics, Vol.
9, No.
3 - 4, pp.
161 - 177.Zaliznjak, A.A. 1980.
Grammaticheskij Slovar'Russkogo Jazyka.
Slovoizmenenije.
Nauka, Mos-cow.
('Grammatical dictionary of the Russian lan-guage.
Word changing.
', in Russian)781
