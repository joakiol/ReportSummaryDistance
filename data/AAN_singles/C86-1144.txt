COMPFI'A'rlONAL PHONOLOGY: MERGED, NOT MIXEDEgon Berendsen, Department of Phonetics, Un:iversity of Utrecht, The NetherlandsSimone Langeweg, Phonetics Laboratory, University of Leyden, The NetherlandsIIugo van Leeuwen, Institute of Perception Research, Eindhoven, The NetherlandsO.
IntroductionResearch into text-to-speech systems has become arather important topic in the areas of linguisticsand phonetics.
Particularly for English, severaltext-to-speech systems have been established (cf.
for'example llertz (1982), Klatt (1976)).
For Dutch,text-to-speech systems are being developed at theUniversity of Nijmegen (cf.
Wester (1984)) and at theUniversities of Utrecht and Leyden and the Instituteof Perception Research (IPO) Eindhoven as we\]\].
Inthis paper we will be concerned with thegrapheme-to-phoneme conversion component as part ofthe Dutch text-to-speech system which is being de-veloped in Utrecht, Leyden and Eindhoven.One of our primary interests is that thegrapheme-to-phoneme system not only has to generatethe input for speech synthesis, either in allophoneor diphone form, but that it had to be used for other~ urposes as well.
Thus, the system has to satisfy the -ollowing demands:- its output must form a proper and flexibleinput for diphone as well as allophone synthesis;- it must be possible to easily generatephonematized lists on the basis of orthographicinput;- it must be possib\].e to automatically obtaininformation regarding the relation betweengraphemes and phonemes in texts;- the system has to be user-friendly, so that itcan be addressed by linguists without computertraining (for example to test their phonologicalrules).In our view, there are two aspects to agrapheme-to-phoneme conversion system: a linguisticand a computational one.
The linguist, in fact, pro-vides the grammar necessary for the conversion andthe engineer implements this grammar into a computersystem.
Thus, knowledge about spelling and linguis-tics are separated from the technical implementation:the linguist provides the rules and the system exe-cutes them.
The two components will also constitutethe main sections of this paper.I.
LinguisticsFor grapheme-to-phoneme conversion it is expedient toassume several modules.
In the first module,'difficult' elements like numbers, acronyms and ab-breviations, have to be changed into their cor-responding full graphemic notation.
Next, one has torecover units from the spelling which influence gra-pheme-to-phoneme conversion: for example, words form-lag compounds are written as one uninterrupted stringin Dutch, but have to be recovered because they in-fluence graphemic conversion and stress assignment.The third and most important module concerns therules which assign phonemes to graphemes.
We thenhave phoneme information, and can establish furtherrelevant units on the basis of this information.
Fi-nally, phonological processes have to be accountedfor in modules for stress assignment and segmentalphenomena.I.i.
Phoneme-to-grapheme assignmentOur starting point for the development of the gra-pheme-to-phoneme system is that graphemes andphonemes are different entities, which should berepresented at separate levels.
As graphemes form theinput for the conversion, the grapheme level isfilled from the start.
The derivation of phonemes isperformed in the following way: to each grapheme orgroup of graphemes a corresponding phoneme is as-signed at the phoneme level.
This is represented in(i), where lower case letters indicate graphemes andcapitals indicate phonemes.612( \ ] )  grapheme leve l :  a b c d e f gphonemelovel: fNotice that the assumption of two levels, one forgraphemes and one for phonemes, makes it possible toobtain information about the relation between gra-phemes and phonemes.
As we will see below this as-sumption has some other attractive consequences.Notice furthermore, that to each grapheme or se-quence of graphemes a phoneme has to be assigned, ex-cept in cases where there is no correspondingphoneme.
For the non-linguist, it may come as a sur-prise that a great number of regularties and subregu-larities in correspondance between graphemes an(\[phonemes can be found.
The assignment of phonemes tographemes is therefore (lone by rule.
Of course, thereare always words that cannot be captured by therules: these will have to be enumerated.
The order ofapplication will then be enumeration, sub-rules andrules.
The string of graphemes J s scanned sequential-ly: first a phoneme is assigned to the initial gra-pheme, then this is repented for the second graphemeand so on.
This procedure works very quickly since,if the grapheme under consideration is all a, only therules assigning phonemes to a will have to be consi-dered.
The rule format used here, is very similar tothe well-known format of Chomsky and Halle (1968)(=SPE).
Some further mechanisms are added to theirrule format:- it is possible to negate elements or groups ofelements in the environment of the rule;- one can use so-called global rules, referringhack to information avail.able earlier in thederivation because we use a two-level approach;- it is possible to use definitions instead otrepeatedly used sequences, in the ruleenvironment, such as sequences indicatingsyllable boundaries.Below, we will demonstrate how our linguisticknowledge can be expressed in rules and sub-rules.These rules will not cover all eases, but they willserve as an illustration, h rule completely writtenin the standard SPE format may be as follows.
(2) c,h -> SJ / i,n,{<-cons>}- {c }This rule assigns the phoneme SJ/\[~\] to the lettersch, if the latter is followed by the letters in fol-lowed by either a vowel or c, thus accounting forchinchilla (chinchilla) and China (China).
As one cansee from (2) no "long" braces are used to indicateseveral alternatives, but each alternative is sur-rounded by short braces, since it is impossible touse "long" braces in the computer.
Furthermore, pho-nological features are surrounded by angled brackets.The possibility of negating an element is illus-trated in (3).
(3) e,h -> SJ / i e,'lThe grapheme preceded by a quote in (3) is negated.This means that every sequence consisting of ch pre-ceded by i and followed by e which in turn may not hefollowed by i, is assigned the phoneme SJ.
Thus weaccount for the alternation in ch-pronunciation iafiche (chip) where ch is SJ and richel (sill) wherech is X/\[x\].As a last example, a rule is given in which onlyphoneme information has a triggering effect.
(4) au -> O0 / SJTo the graphemic sequence au the phoneme 00/ \ [o : \ ]  i sass igned  i f  i t  i s  preceded by the phoneme SJ as i sthe case in  chauv in isme (chauv in ism)  where ch i s  SJ.Not ice  fu r thermore ,  that  one can only use phoneme in -fo rmat ion  in  the lefthand env:i.ronmenl: of ru les  as -s ign ing  phonemes to graphemos, s ince  the s t r ing  i sscanned from le f t  to r ight  and grapheme I/y gral)heme.k fu r ther  addJ l i eu  to the SPE format which hasbeen developed i s  the poss ib i l i ty  to requ i re  twoth:ings at the same t:i.lne Jn the environment of rules:so -ca l led  coord inat ions .
The ueed for such ai1 opt ioni s  .
i \ ] .
\ ] t ls t rated by the fo l low ing  example.
Using scan-dard SPE ru les ,  we have to postu la te  l;ho two d i s junc -t i ve ly  ordered ru les  in  (5) p lus  t i le ru le  Jn (6) t:oaecot, I , t  fo r  the w l r ia t - ion  in  pronuac ia t Jn l l  of 17:illal ein  Bete l  (e=E/\[~.\]) ( t rade  mark) aad ade\] (e=@/\[3\])(nob i l i ty ) .
Rul.e (6) i s  independent ly  mot ivated  bycases  such as berg (mounta in) .
Rule (5a)  takes  pre -cedence over ru le  (Sb) an(l (Sb) over (6) .
Th is  meansthat  i f  (5a) has been app l ied  both (5b) and (6) w i l lnot be app l ied ,  a l though the:Jr requ i rements  are met.Not ice  that  Jn (6) the poss ib i l i ty  to use def~n: i t ions:ks i l l us t ra ted .
(5 )a  e -> E / c \].,<-segm>l} e ~> @ / vet,CONS _ 71 ,<-segin>(6) e -> \],: / s(~where SG ~onstitutes t i le dolki .nit ion \[ora sequence of consonants  whiich fo l low avowel Ja a c losed  sy l l .ab \ ]eThe der ivat ion  of the examples n,entioned al)ove i s  asfo l lows .t\];E A g(Sb)(6)However, Jf we have the poss ib i l i ty  to rise coord i i ,a -t ious ,  we only have to s ta te  ru le  (8) which takesprecedence over ru le  (6 ) .
The + symbols p lacedbeneath each other  ind icate  COol(hi.nat:ion.
(8) e -> @ / VOC,+CONS 1, <-segm>.k~c --The der ivat ion  (7) now turns  in to  (9 ) .IA; l(6 )  ';1..2.
Other modulesUnt i l  th i s  po in t  in  the paper,  we have concent ra tedso le ly  on grapheme-to-phoneme convers ion  proper ,  butas we al .ready s ta ted  above, the b lock of ru les  as -s ign ing  phonemes to graphemes i s  surrounded by o therrule modules with different: functions.
We will\] deal.with some of these modules here, disregarding abbre-viations, acronyms, numbers, and phonologJ ca\].processes above the word level.Since Dutch is a stress languag, e, one aspect ofthe grapheme-to-phoneme convers ion  mast be the as -signment: of  word s t ress .
The quest ion  i s  then howword s t ress  mnst be ass igned .
Dntch word s t ress  i snot fixed, i.e.
always assigned to the same syllableposition, but lexical, i.e.
the position may vac.i\]-late Icf.
k~lium (potassiunO, kabofter (imp),kapiteln (captain)).
The rules then must refer to mor-phological and/or syllable structure.Syllable weight is decisive in stress assigamentin monomorphemic words.
For compounds, however, mor-phological structure has to be recognized.
By makingreference to sequences of vowels and consonants, thesyllable weight call be defined.
As is well-known fromSPE, stress rules in monomorphemic words are disjunc-tively ordered (cf.
(i0)).
For our system, tile impli-cation is that the whole input string (for thesestress rules) has to be scanned for each sub-stressruleo Furthermore, <-st(less)> has to be present as afeature of the vowels in tile righthaud environment ofthe rule.
in most cases, compouud stress is assignedto the first word of the compound.
Within theSPE-format, compound s t ress  ass ignment  leads  tos t ress  lower ing  of the s t resses  that  have a l readybeen assigned.
Our rule system, however, ass:ignssecondary stress :iu monomorphemJc words which :is thenraised to primary stress I)y an additional rule isboth monon~orphemic word~ and the \]Jrst part of a com-pound (Of.
( \ ]1 ) ) .
\]'he number fo l low: lag a featare  in -d ica tes  that th:is item n)ust be \[)resent at :\[east thatnumber of t:imes.
(\]0) VC =+<+voc> !
So @ cannot be stressed+'@a) <+voc,+long> -> <2st> / CONS,#VC -> <2st> / CONS2,# -VC -> <2st> / ~:',CONSO CONSO,#l/) VC -> <2st> / .
.
.... _ CONSO,+II ,CONSO,+<+voc,-st>,CONSO,#-I-<--s t> -I-' \] I-I-t@c) VC -> <2st> / ...... {<-st:>} ,tORSO _ CONSO,<+voc,-st>,CONSO,#{# }(1 \ ] )  <2st> -> <lst> / #,#,<4-segm>0 _r i 'herelore,  be fore  ass ign i .ng  phonenles to graphemes,the gral)heme s i r : lag  has to be changed fin such a wayas to mark Lhose aff:ixations and compoandings thatin f luence  th:is ass:ignment and the subsequent  phsno-log::ca\]  operat : ions .
\]'he operat io im Jl, th i s  nlodulo area l so  app l ied  by ru le ,  i l l  the format a l ready  dea l tw i th .
This  approach i s  not obv ious from the outset .However, the a f f i xes  in f luenc ing  the ( :onvers ion andthe phonology are  l i .mited and as such,  they can berecogn ized  by ru le .
Furthermore,  many compounds have\ ]n ter l la l  grapbeme seqaences  which do ilot occur i l lmonomorphemic words.
On ti le bas is  o f  these sequences,boundar ies  can be inser ted .
Of course ,  1;his leaves  uswith compounds which do not have c lus ters  which areh , lpermiss ib lo  Jn monomorphenles.
An except ion  \ ]ex iconwi\]\]  then be necessary .Cons ider  the fo l low:h i ;  examlIle.
In  Dutch, a se -quence of an obst ruenk  fo\].\]owed by a voiced ebst ruenthard ly  ever occurs  Jn monomorphemic words (c f .
Zon-nevel.d (1983) ) .
ThJ s charact:er: i .skic i s  a l sorepresented  in  the  spe l l ing .
Thus, a ru le  of Om form'in  (12) separates  parks  of compounds.
(12)  ?
-> # / <-son>i  <-son,+voice>j,CONSO,VOCwhere i. and j : ind icate  d i f fe reut  segmentsAf ter  app l i ca t ion  of ru le  (12) hu isdeur  ( f ront  door):is represented  as tmis#deur .
In  fac t ,  th i s  ru le  i ssomewhat more compl i ca ted  b7 usJn~ coord inat ions ,s ince  we a l so  have to exc lude  eve(genera l i za t ionssuch as hu is#den ( l i ved) .
.
The graphemes and boundaryin  hu is#deur  are  ass igned  phonemes by convers ionra les  in  t i le next  modtlle, fu r thermore  the s t ressru les  dea/_t w i th  above, ass ign  s t ress  and f ina l l .
y  thephonolog:tcat ru le  of regress ive  vo ic ing  ass imi la t ionapp l ies ,  conver t ing  S in to  Z.
The separate  s tages  ofthe der ivat ion  of hu lsdenr  are Mmwn in (13) .
(13) input :  It u ~ s d e n rboundar ies :  # # h u i s # d e u r # #convers ion :  # # tI \[JI S # D EUR # itsec.
stress : # # II "UI S # D "Ell R # #prim.
s t ress  : # # H 'UI S # D "EU R # #phono\]ogy: # # fl ' I l I  Z # D "EU R # #2.
\ ] \ ]np lementat ionNow that tile l i ngu is t  has provided the rules it isnecessary to consider these from a technical point ofview.
In these linguistic rules one is able to des-cribe the phoneme-to-grapheme assignment J.n terms ofgraphemes, phonemes and the i r  context .
In p r inc ip le ,there are two basic poss ib :k l :k t ies  to do so.
Eitherone refers directly to a basic entity (e.g.
graphemeor phoneme, in which case the structure has a fixedlength) or one uses a larger structure that describesthee context ill a more complex manner.
A basic entitycan be referred to explicitly, by stating the gra-I)heme or phoneme involved, but also implicitly, byspecifying some features to define a set of phonemesor graphemes for which the context is valid.
As totile structures, several are availaM.e.
The first one613is alternative validity: one of the specified struc-tures must be valid to produce a match (cf.
rule(2)).
The opposite structure is simultaneousvalidity: all of the specified structures must bevalid to produce a match (cf.
(5)).
A third possibil-ity is negated validity: when the structure is valid,no match will result and vice versa (cf.
(3)).
Afourth (commonly used) structure is optionalvalidity: the specified structure may or may not bepresent (cf.
(12)).It will be clear that the system gains consider-ably in power by allowing combinations of thesestructures.
For the implementation this has some nontrivial consequences.
First of all, a suitable datarepresentation must be found to store the linguisticknowledge.
It is desirable to have this representa-tion in a compact and efficient form, as it will beconsulted 'on-line' during the transcription process.Because there are no restrictions on the use of thesestructures, the use of a dynamic data structure torepresent the knowledge seems appropriate in order toprevent too much a waste of memory seems obvious.This dynamic data structure consists of a variablenumber of linked units.
Each unit consists of anumber of ~fields' to represent the different typesof information one needs.
This is illustrated below.In the field type an indication is given of the typeof information and its location.
Next, there are fourfields, one of which contains the linguistic informa-tion formulated in the rules.
If the unit is a gra-pheme, the grapheme concerned is stored in tile fieldgraph.
As a phoneme is seen as a different entity, aphoneme will be represented in the next :field, denot-ed by phon.
Then it is possible to use features toindicate a set of phonemes or graphemes.
These are oftwo different types but are stored in the same fie:ldfeat.
This actually is a pointer to a list offeatures, containing the value (+ or -) and thefeature concerned.
The final information field con-tains a list of other units.
This is needed torepresent the alternative or simultaneous validity.Both of these structures are stored in this list, andin combination with the first field containing thetype, the system knows how to interpret this list.The optional validity can be seen as an alternativevalidity: either the structure is present or not, andthis is therefore represented as an alternative vali-dity.
Finally certain types do not contain any infor-mation, but are used as markers, i.e.
negation andend negation which denote the beginning and end of anegated structure.
Following these informationfields, a last field next will refer to a followingunit, which describes tile next part in the linguisticrule.
As an example of how this data structurerepresents linguistic rules, the lefthand context ofrule (8) is shown in (15).
Since the focus is thestarting point, the data structure is constructedfrom right to left.
( I5)An input string will now be transcribed by comparingit with the appropriate units.
While consulting this614data structure an unexpected problem arises.
Becauseof the freedom the user has to combine differentstructures, it is possible to build a structure whichhas different lengths (number of units) :\[or differentpaths.
The unit or structure following this variablelength structure no longer has a fixed position withregard to the starting point.
This may especiallycreate problems when this first structure is negatedas well.
This can be explained best with an examplewhich is hypothetical.
The structure, however, couldeasily be used by a linguist and thus the systemshould be able to handle it correctly.
Suppose theright context of a linguistic rule looks as follows.
(16) '{a ),t- {o,u)The rule states that it is not permfltted that eitheran a, or an o fo\].lowed by an u, is present before at.
The question is what exactly js meanL with thisnegatfion.
A negation is only meaningful within aclosed set, and therefore the set is defined impli-cit\].y by the unit or structure being negated.
'a (not:a) means: all graphemes except a.
'\[o,u\] means: allsequences of two graphemes except the sequence ou.The sequence at will therefore belong to this secondset.
If the input string now consists of att, thefirst path will reject the string, but the secondpath will approve of it.
As both paths must approveof the string to produce a match, this string will berejected.
However, it is insufficient only to look atthe negated part (and then when no match is detected,consult the positive part).
An input string art wouldthen be rejected on account of the leading a, whichwould be incorrect.
As there is not t directly foi-l.owing the a, the first path can give no verdict onthe string and should pass it to the second pathwhich would approve Jr.
It is therefore necessary toconsider all paths in combination with all followingunits.
For further discussion of this particul.arproblem, we refer to Van Leeuwen et al (1986).3.
Concluding Remarksin th i s  paper we have deal t  with the system for  gra-pheme-to-phoneme conversion in Dutch as it is beingdeveloped at the Universities of Utrecht and Leydenand IPO, Eindhoven.
We have shown that knowledgeabout spelling and phonology provides a proper gram-mar :\[or automatic phoneme-to-grapheme assignment andthat linguistic rules can be implemented without adhoc mechanisms.
Speed was considered an importantperformance feature in constructing the database aswell as in consulting it.
Typical values are: 20seconds to (re)construct a new database (for instancefor testing new rules or new versions of rules), andsame 25 graphelne-to phoneme canversions per second.This phoneme-to-grapheme assignment system has beenlinked to the diphone speech synthesis system thathas been developed at IPO.
At the moment, the systemis being tested on a lexicon of about 4000 monomor-phemie words.ReferencesCHOMSKY, N. AND N. HALLE (1968), The Sound Pat tern  ofEng l i sh .
Harper and Row, New York.HERTZ, S.R.
(1982), From text to speech with SRS.
In:JASA 74, pp.
1155-1170.KLATT, D.II.
(1976), Structure of a phonological rulecomponent for a synthesis-by-rule program.
In:IE.EE Transactions on Acoustics, Speech, SignalProcessing ASSP-24, pp.
291-298.LEEUWEN H. VAN, S. LANGEWEG AND E. BERENDSEN (1986),'Linguistics as an Input for a FlexibleGrapheme-to-Phoneme Conversion System in Dutch'.In: Proceedings of the IEE Conference on SpeechInput/Output; techniques and applications, pp.200-206.WESTER, J.
(1984), SF: Contouren van een toegepastefonologie.
In: De Nienwe Taalgids 77, pp.
30-43.ZONNEVELD, W. (1.983), Lexical and Phonological Pro-~ er ties of Dutch Voicing Assimilation.
In : .
v.d.Broecke, V.v.Heuven, W.Zonneveld (eds.
),Sound Structures; studies for Antonie Cohen.Foris, Dordrecht.
