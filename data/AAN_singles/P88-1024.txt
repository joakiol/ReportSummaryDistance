ATOMIZATION IN GRAMMAR SHARINGM~umi Kamey-m~,Micrneleclmnim and Compui~" Technology Coopomtion (MCC)3500 West Balcones C.enm" Drive, Austin, Tcxas 78759megumi@mcc~omABSTRACT new insights with which to account for certain linguisticWe describe a prototype SK~RED CmAt~eAR for thesyntax of simple nominal expressions in Arabic, E~IL~lx,French, German, and Japanese implemented atMCC.
Inthis Oamm~', a complex inheritance ian/cc of sharedgr~mmAtlcal templates provides pans that each languagecan put together to form lansuug~specific gramm-ti~tltemplates.
We conclude that grammar shsrin 8 is not onlypossible but also desirable.
It forces us to reveal cross-liuguistically invm'iant grammatie~ primitives that mayotherwise rem~ conflamd with other primitives if we dealonly with a single ~.nousge or l-n~uuge type.
We call thisthe process of OaA~O~AT~CAL ^TOI~aZAT~ON.
The specificimplementation reported here uses catcgorial tmifr, ationgrammar.
The topics include the mono-lcvel nominalcategory N, the functional distinction betweenARGUMENT and NON-ARGUMENT of nominals,grammatical agreement, and word order types.Is grammar sharing possible?The multill.eual pmjec~ of MCC a~mpts to build agrammatical system hierarchic~tily shared by multiplelanguages (Slucum & Justos 1985).
~ ~ asproposed should have an advantage over a system withseparate grammars for different languages: It should reducethe ~ of a mnllflinsual rule base, and fecilltat~ theaddition of new languages.
Bef~e Inesenting evidence forsuch advantages, however, there is the basic question m beanswered: Is grammar sharing at all possible?
Although itis well known that languages possess similarities based ongenetic, typological, of areal grounds, the question remainswhether and how these ~imilarities translate intocomputational techniques.In this paper, we will describe a prototype sharedfor simple nominal expressions in Arabic,English, French, German~ and Japanese.
x We conclude thatgrammar sharing is not only possible but also desirable.
Itforces us to reveal crces-liuguiatic~y invariantgrRmmAtiCal primitives that may otherwiseconfiated with other primitives if we deal only with a singlelanguage of language type.
We call this the process of~T l f .~ .
ATOMmA~ON 2 forced by grammar sharing.Each language or language type is then characterized byparticular combinations of such primitives, often providingXpreliminary investigations have also been made onSpanish, Russian, and Chinese.2The verb atom/ze means "to separate of be separatedinto free atoms" (The Collins English Dictionary, 2ndedition, 1986).problems.
Before we go into more derail, the following isour view of what general components and mechanismsCOllStiUlle 8shared gr~nt le~l  SyStem-Bask mechanisms In a shared grammar:.
Theprocess of buildiug a shared grammaT, in our view, requires(i) linguistic description of a set of languages in a commontheoretical framework, (ii) a mechanism for E~1~ACr1~O acommon grammatical asse~on from two or moreassertions, and (fii) a mechanism for MEROINO grammaticalasse~ous.
The linguistic description should define certainstring-combination operations (defined on siring I"YI~)associated with information structures.
Then what we do isidentify shamble packages of common string-types andinformation slmctures among independently motivatedlanguuge-spccific grammatical assertaions.
Thesepackages are then put into the shared part of the grammnr Dand the remaining language-specifics arepotential sourcesfor mofe sharing.
This extraction is essential in what wecall ATOMIZATION, which is basically "breaking up ofgrammatical ~gions into mailer independeot parts" (Le.decomposition).
If we assume that all grammaticalaase~iem ~e expressed in terms of FEAI"ORE ST~UCTtn~ES(Shieber 1986), the atomi.Jtlon process would be definedmound the notion of <~2q~.,,H~TION (i.e.
reverse ofUt~C.A~ON) as follows:basic at~s/za~a..
Given two featurestructures, Xa for category X in language A endXb for category X in language B, the sharedm'ucture X~t for category X is the~ ' n O N  of Xa and Xb (i.e., the mustspecific feature slmcmm in commnn with bothXa and Xb).
Xa is separated out of eithar Xa orXb, and placed into the shared space.Consequently, a ~ ofdering is establishedwlm~fin Xa sue~ Xa and Xb, respectively.There is an underlying assumption that two language-specific de~uitiom of a commn~ grammatical camgonyshare something in comn~a no matter how small it is.
Thismeans that the linguis~ descriptive basis is questionable ifthe content of Xa above is nulL Conversely, if clo~lycommon information structures appear under language-specific definitions of distinct grammatical categories, wemay suspect a basis for a new common grammaticalcategory.Once the shared and iauguage-spucific pm'ts areseparated out, a mechanism for merging them is necessaryfor successfully incorporating the shared assertion i to thelanguage-specific assertion.
~m~c.ATIO~ by n~rr~.~c~is such a merging mechanism that we employ in our system(see below).
The shared space is a complex inheritancelattice that provides various predefined grammaticalassertions that can be freely merged to create language-specific ones.194/ / I 1"~6 "~-/.
\ \ ~A,~"~~T ?,TYT?WIqi..nun qi..t~ neko cats cat Katzen Katze c~ ~ij ~ieCrSerwhich welcher que!F i lm 1.
A simplified shared httt/?eShared inheritance lattice: Let us now take ?
look ata grossly simplified shared inheritance lattice that resultsfrom the process described above.
See Figure 1.
Them is ?universal notion N(ominal) in all five languages underconsideration.
This common notion is part of the Ndefinition of each language by inheritance.
There ~e somenominals that am 'complete' in the ~mse that they can beused as subjects or objects (e.g.
I saw ?~s/?~ cat.).
Someothers am 'incomplete' in that they cmnot be used as such(e. 8.
I saw scat.).
General notions Complete andIncomplete are thauby defined for characterizing relevantnominal classes of each language (see the diacmufion onARG vs. NON-ARG below).
Since Determiners inEnglish, German, and ~ch make such incompletenominals complete, the Determiner definition inherits (i.e.includes) the definition of Complete.
Lexical items in theselanguages are defined by multiply inheriting relevantassertions:In what follows, we will f'n'st describe the specificlinguistic and computational approaches that we employedto build our first shared grammar.
We will then discuss thegrammatiCul primitives for chm'ac~rizing scne~dnominals, ednommal modifiers, agreem~t, and word ordertypes, illustrating solutions to specific cross-linguisticproblems.
We will end with prospects for further work.FrameworkGrammatical framework: We use a cutogorialunification grammar (CUG) OVittenbur8 1986a; Karmmea1986; Uzkoreit 1986b).
The one described here is a non-directional categorial system (e.g.
Montague 1974;Schmerling 1983; van Benthem 1986:Ch.7) with a non-directed functional application rule as the only reductionrule (i.e., a functor XIY may combine with adjacent Y ineither direction to build X).
Non-directionality allows fordesired flexibility in the shared part of the grammsr.
Asepm-ate compommt constrains the linear ord~ of elementsin each lmguage (see Arislar 1988 for motivation).Unification and template inheritance: CUG's lexicalorlentafioo end unification arc employed.
In the t.e~coN ofeach kngusgu, lexical itema are defined to be theunification of language-specific ?mAMMA~C.~ T~S(Shinber 1984, 1986; Ftickeoger et al 1985; Pollmd & Sag1987).
These language-specific templates, prefixed withAR(abic), EN(glish), FR(ench), OE(rman), and JA(panese),In  fesm~ slzuctun= composed by multiplc inheritancefrom sluu'ed gra~atle~!
templates prefixed with SO (for"Shm~d Grammar").
SG-templates are tbemsclvescomposed by multiple iulm'imnce in a complexINHI~rrANCZ LATI'/CE, whose holXom-end feeds intolanguage-specific templmes.
Tbe CUG parser (MCC'sAstm, Wittenberg 1986b) applies reduction rules to thefeature struclan~ of words in the input slring.
3Arabic and:Japanese strings are currently represented in RomAn letters(augmanted for Arabic) with spaces between 'words'.
43Tho parser is linked m an independently developedmorphology analyzer (Slocum 1988).
This enables eachword to undergo a morphological nalysis including adictionary look-up of the root morpheme, and to output alist (or altel'llative \]JsLq) of ~mmatiCal ~m~la~ llsm~that, when their contents ere unified, produce a singlefealme s~rucmre (or more than one if the word isambiguous) for that particular token word.4If we were to process Japanese texts directly, the systemwould have to perform morphological end syntacticanalyses imultaneously since there is no explicit wordboundaries.
(Thh is one of the strong motivations for ourrecent movement oward building a new CUG-basedmorphology s stem.
)195Present linguistic coverageSimple nominals: The present linguistic overage isthe syntax of ~ NOMINALS: nouns and nominalexpressions with lexical or phrasal modifiers such asattributive adjectives (e.g.
long), demonstratives ( .g.
th/s),articles (e.g.
the), quanth"ters (e.g.
a//), nmnera~ (e.g.three), genitives (e.g.
of the Sun), and pp-modifiers (e.g./nthe ocean).
Complex nominals including conjunctions,derived nominals, gerunds, nominal compound& andrelative clause modification have not been handled yet.Data ualys is :  We first analyzed a data chart of simplenominals in each language.
The chart focused on thesyntactic well-formedness of nominal expression& inparticular, the order and dispensability of elements whenthe nominal expression acts as an argument (e.g.
subject,object) to a verb or an adposition (Le.
preposition orpostposition).Shared templates overviewBy design, the SG-LATHCE captures shared grammaticalfealmcs in the given set of languages, whether they me dueto universal, typological, genetic, or meal bases.
As ourresearch proceeded, we observed an atomization processwhereby more and more grammatical properties weredistinguished.
This was because certain grammaticalcharacterizations that seemed most natural for somelanguage(s) were only partially relevant o others, whichforced us to break them down into smaller parts so thatother languages can use only the relevant parts.Modules in the SG-iattke: As the shared templatesunderwent atomization, we created sublatticescorresponding to independent grammatical modules o thata grammar writer can make a langnage-specificcombination of shared templates by consciously selectingone or more from each group.
The existing subgroups me:(i) categorial grammar categories (the theory-dependentaspect of the shared grammar), (ii) common syntacticcategories (theory-independent li guistic notions), (iii)grammatical agreement (to handle grammatical greementwithin nominals), (iv) reference types (semantic features ofthe nominals, e.g.
definite, indef'mite, specific), (v)determiner types (to handle co-occurrence and orderrestrictions among determiners), and (vi) atlributivemodifier types (to handle order restrictions amongattributive modifiers).
We will focus on (i)-(iii) in thispaper.Kinds of SG-templates: SG-templatns as they existfall under the following types.
The most general distinctioncan be made between ATOMIC and COM~rrE templates.Atomic templates inherit from no other template.
Theyresult from the atomization process, and are primitive partsthat a grammar writer can put together to create merecomplex templates.
A composite template inherits from atleast one other, to which a partial slructure defined foritself may be added.
We may also distinguish betweenUTn.r~ and sUeSTA~rnve templates.
Utility templatescontribute integral parts of categodal grammar categoriessuch as how many arguments hey need to combine withinnone for a BASIC CATEGORY, ~ one or more for aPUNCIDR CA'EBGORYo Substantive templates supplygrammatical categndes and features expressed in terms ofvarious linguistic notions.
Specific examples are discussedbelow.Highlights of shared grammatical atomsThe basic graph structureEach word must be associated with a complete CUGfeature structure.
The current implementation uses amalx~ notation for ACYCLIC DIRP.~-I-~ GRAPH.
~ Figure2:\[result: \[cat: \[ \]index: \[ \]agr: \[ \]feats: \[ ltype: \[ \]elements: \[ \]order: \[ \]arguments: \[ \]\]<- the syntactic type of (~<- relative linear position of (~<- grammatical agreement features of o<(optional)<- pragmatic agreement features of ~-,<- the functional type of ?x (see below)<- elements within c~<- order of elements (see below)<- arguments sought (see below)l~lure2.
Tae notation for a word whose resulting structure is otA ca~gnry is either SATURXT~D (looking for noargumen0 or UNSATU~TED (needing to combine with oneor more arguments).
It is saturated when the value ofARGUMENTS is 'closed' with symbol #.
An unsaturatedcategory may seek one or more arguments, each of whichis either unspecified (\[ \]) or typed (e.g.
\[cat: N\]).
Overall?
saturation is sought in parsing.
The parser assigns indexnumbers to words in the input string from left to right, andcoindexes corresponding subsWactares under ELEMENTS.The ELEMENTS component currently has A for the wordfor which this structure is defined, B for the first argument,and C for the second argument.
These labels simply flagPATHS for accessing particular elements.
There can be anynumber of order-relevant labels corresponding to anelement.
These labels, with coindices with respectiveelements, are in the ORDER component, which is subjectto the Word Order ConsU'alnt (discussed later).
TYPE isthe slot for assigning the pseudo-functional c tegory ARGor NON-ARG that we found significant in the presentcross-linguistic treatment of nominals (see below).AGR(eement) and FEATS subgraphs contain grammaticaland pragmatic agreement features, respectively (discussedlater).196atomic templates%SG-NO--ARGUMEN'I~: \[arguments: #\] <- saturates the category$SG-LEX: \[result: \[elements: \[a: \[lex: \[ \]\]\]\]\] <- has a slot foe the word form%SG-WORD-FEATS-ARF~TOP-FEATS: <- passes the word's own features to the top\[result: \[feats: <1>elements: \[a: \[feats: 1\[ \]1111inheritance of composite templates%SG-WO RD- FEATS-ARE-TOP-FEATS $SG-LEX ",, , /JA-N EN-N FR-N GEoN AR-NFISUm 3.
C~nerai NA few more remarks about the notation follow.
Avalue can be either atomic (e.g N), a disjunction of atomic:values enclosed in curly brackets (e. 8.
{N P\]), or acomplex feature structure.
It can also be umi~ff ied (\[ D.The identity of two or more values is fo~.~d by reenmmtstructmm indicated by coindexing (e.g.
I\[ \] and <I>).Such coreferring value slots automatically point to a sin81edata structure ntered through any one of the slots.Universal mono-level category NCategory N: We posit the universal categmy N fornominals.
Nominals here are those that realize A R ~such as subjects and objects.
Nominals are morecommonly labeled NP, a phrase typically built axound N orCN (comm*~ noun), as in phrase structure NP->DET N aswell as in the categorlal grammar characterization f DETas a functor NPICN (Le.
combines with CN and builds NP)(e.g.
Ades & Steedm~n 1982; Wittenberg 1986a).
ThisBI.LEV\]~ View of nominals is motivated by facts in westernEuropean languages.
In English, for instance, while cat orwide cat cannot f'dl a subject position, a cat and thLv ca:can.
In comrast, while he can be a subject, it cannot bemodified as ~ he or srange h~.
This motivates thefollowing category-assJguments wi h a constraint that onlyNPs can be arguments: ca: is CN, he is NP, a and #~s areNP/CN, and white and sWange are CN/CN.
This, bewevef,requires that plurals and mass nouns be CN and NP at thesanlc time since ca~, gold, white cats, white gold, thesecms, and this gold can all be arguments.
The count/nmssdistinction is also often blurred since a singular count nounllke ca: may be used as a mass noun referring to the meatof the cat, and a mass noun like gold may be used as asingular count noun referring to a UNIT of gold or a KIND ofgold (see e.g.
Bach 1986).
The boundmT between NP andCN is at best Ftr22Y.When we ~ to othm" languages, the basis for thebi-level view vmisbes.
In Japanese, for instance, neko 'cat'can be an argument on its own, and pronoun kam 'he' canbe modified as in ano kate 'that he' and okas/na kate'strange he'.
In short, there is no basic syntactic diff~iew.eamong count nouns, pronouns, and mass nouns (and nosingular/plural distinction on a 'count' noun).
All of thembehave i J~ plural and mass nouns in English.
Thissupports a mono-level view of nominals, which we intendto captm~ with category N. Figure 3 shows the SG-templates relevant to the most general characterization of Nin each language.
SG-templates in the followingillustrations are marked as follows: atomic templates SG-x(boldface), utility templates 9~SG-x, and substantivetemplates $SG-x.At the moat general evel, the basic llomlnall illGezman (OE-N) and Arabic (AR-N) must be unsaturatedbecause gcnitivc-inflectod Ns may take arguments.
Thebasic nominals in Japanese (JA-N), English (EN-N), mdFrench fiR-N), on the other hand, are basic categories thatare salmated?
In *_d,\]ition, all but JA-N inherit relevantAGR(eemant) templates (see below).
Crucially, note thatwhat 1oo~ like a reasonable characterization f N in eachlanguage actually consists of a particular selection from thecommon set of primitives.ARGUMENT and NON-ARGUMENT: We posit apseudc~functiomd level of description in terms ofARG(ument) and NON-ARG for category N instead of thecategozy=level distinction between NP and CN.
ARG mayfunction as an ~ t  alone, and NON-ARG cannot.5Note that English possessive marker's is not treated asan inflection here.197NON-ARG becomes ARG only by being combined with acertain modifier or by undergoing a semantic hange (e.gmassifying).
In this view, the ARG/NON-ARG distinctionis 'grounded on a complex intcraction of morphology,semantics, and syntax.In English and Germa~ singular count nouns (e.g.
wee,Baum) are NON-ARG while plurals, mass (~ngu~)nouns, proper names, and pronouns are ARG.
The NON-ARG nouns become 'complete' ARG nominals either bybeing modified with deteTmin~'s of by chmsing int~ massnouns (typically changing an object reference into aproperty/substance mfe~nce, e.g., i uaed app/, /n myp/e.).?
In French, all forms of commo~ nouns (i.e.
singul&,plural, and mass) me NON-ARG, in need of delcrminers tobecome ARC; (e.g~ $ 'a /~ *ar~ arbrea 'I saw tn~J';*AmourlL' omour e~ delica~ 'Love is delkate').In Japanese, them ~e few NON-ARG nouns (e.g., kam'person' (HONORIFIC)), which can become ARG withany modifier such as a relative clause or an adjective (e.g.~mana tam 'free person (HON.
)'3 In Arabic, themorphological distinction of nouns between a~rexzo vs.UNA~VeXED corresponds to NON-ARG md ARG statues,respectively, s For instance, the unmlnexed form q~.ma.~CAT-DUAL NOM-UNANNEX 'tWO Ca~' may occur u mbjectalone whereas the mnexed form q'.~a: CAT .DU~Mce~not.
The latter must be modified with a noun-basedmodifier such as a genitive phrase, and this modifier mustbe unsnncxod (e.g.
with rajulin MAN-ffeN.UNANNIDG q't~a:raju//n 'mAn's two cats').
These facts in Japanese mulArabic show that the proposed fun~onal distinction fornominals is motivated independently from the syntaodcrole of determiuen since ueithcr language has modifiers ofcategmy DET that we find in Engl_i~h; French, and Gennm(more discussed later).We realize that the ARG/NON-ARG distinction itselfis not a final solution until fine-grained syntactic-romanticinterdependence is fleshed out.
For now, we simply positpseudo-functional types ARG md NON-ARG, which meeither changed or passed up within the nominal slructure: 9$SG-ARG: \[result" \[type: erg\]\]$SG-NON-ARG:\[result: \[ ype: non-&g\]\]Category NIN: Adnominal modif'~m (N-MODs) arenow universally NIN (Le.
a functor that combines with Nand builds N).
This includes both determiners andaUribulive modif'u:rs.
Figure 4 shows the SG-templates forthe basic N-MOD.
Different kinds of N-MOD must thendistinguish whether it takes one or two arguments andwhether the resulting nominal with modification isARG orNON-ARG.
Each distinction isbriefly illustrated below.Two kinds of Igenltlve: Genitive N-MOD functorsmay take different numbers of arguments cross-linsuist/cally.
An inf~ted genitive nominal (e.g.
GE:Marias, AR: rajulln 'man's') takes one, while a genitive8dposition (e.g.
EN: o)) takes two.
The former is capturedwith SG- I~ONAI .~ENrr IVE-CASE-MOD,  andthe latter, with SG-PARTICLE-GENITIVE-CASE-MOD.see ~,ur ,  s.Non-universal determiner category: In the present~roach,  DET(enniner) is a modifim- type (including&ticks, demonstratives, quantifiers, numerals, andpossessives) such that at least one of its members i neededfor making an ARG nominal out of a NON-ARG.
The factthat a nominal with a del~rmln~r is always ARG Iranslatesinto SG-DET inheriting from SG-ARG among others.DET is present in English, German, and French, but not inJapmese or Arabic (or Russian o~ Chinese).Demommnfive~ quanlifiers, numerals, and possessives inthe latter lansuagea do not sham the syntactic function ofDET.
We suspect that the presence of DET is an arealproperty of western Eeropean lmgeaSes.The sublatticc in Figure 6 highlights two aspects ofDET.
One is the diff~,~.,ce between DET and ADJ(ective)in Engfish, German, and French with respect to the ARGstatus of the resulting nominal.
DET always builds ARGcancelling whatever the type of the incoming nominalwhereas ADJ passes the type of the incoming nominal tothe top.
The other is the place of demonslralives in relationto DET.
Eve~ language has demonstratives encoding twoor tluue degre~ of speaker proximity (e.g.
JAPANESE:kono (close to the speaker), sow (close to the addressee),61n implementation, this latter process may be triggeredby a unary rule COUNT->MASS.7They are assigned a NON-ARG category MN (for'modified noun') separate from the ARG category N. Anymodifier changes it into ARG.SA/mEX~ here means 'needing to be mmexed to a noun-based modifier', and U N ~  means 'completed'.Th~ arc also called NONNUNATED ~ NUNATED fOl'l~,respectively, in Semitic linguistics (Aristar, personalcommunication).9An intnging direction is shown in Kritka's (1987)categorial grammar t~ttmenL He assigns the singularcount noun in English (i.e.
our NON-ARG) m unsatnmtednominal category looking for its numerical value both insyntax and semantics.
The sJSnificance of determiners ihere as suppliers of numerical values.
How this approachcan be extended to cover the NON-ARG nominals inArabic and JapAnese (which ale not in need of numericalvalues per se) remRin~ to be seen.
Although it ma~s senseto see NON-ARG as a functor looking for more semanticdeterminaeon, implemeneng it would require a reductionrule for TWO FONc'roRs U30~O FOR EAC~ oTtm~ Thecurrent system would cause an infinite regression with sucha rule.198atomic templates%SG-HF.AD-FF.ATS-ARE-TOP-FEATS: <- passes the features of the second(result: \[feats: <1> element to the topelements: \[b: \[feats: 1\[ \])\]\]\]%SG.-FIRST-ARGUMENT: <- slot for the first argument\[result: \[elements: \[b: <1>\]\]arguments: \[first: \[result: 1\[ \]\]\]\]\]%SG-GET.-ORDER: <- passes the ORDER content of the first argument to the top\[result: \]order: \[\[<1>\]\]arguments: \[first: \[result: \[order: 1\[ \]\]\]\]\]$SG-MOD: <- for ?
category-constant functor MOD (see below)\[result: \[eat: 4\[ \]elements: \[s: \[index: <1>\]b: <3>\]order: l imed: 1\[ \]\] \[head: 2\[ \] \]\]arguments: \[f'h'St: \[result: 3\[cat: <4>index: <2>\]\]\]inheritance of composite templates$SG-N (above) %SC,-HEAD.-FEAT~ARF_,-TOP.FEATS%SG-F I1L~-ARG~iG-G~SG-MOD$SG-N-MOD<- for the general sdnominal modifierFigure 4.
Genecal N-MODatomic templates%SG-ARGUMENTS-REST-SATURATED:\[arguments: \[rest: #\]\]%SG-ONLY-TWO-ARGUMEN~:\[arguments: \[rest: \[first: \[arguments: #\]rest: #\]\]\]<- saturates the second argumen<- no more than two arguments soughl$SG.
.
.GENrnv~ <- assigns the genitive case featun\[result: \[elements: \[a: \[feats: \[case: genitive\]\]\]\]\]inheritance of composite templates$SG-N-MOD (above)$SG-CASE-MOD: <- for the general case-mod\[result: \[elements: \]a: \[cat: {'P N') <- P or Nfeats: \[mod-t'ype: case-meal\]\]\]\]\]~S G-INI~..EC'MON~.-Ca~E-M OD $SG-GENF~VE S SC~-PAR'n CLE-C~-q E-M O Dcategory ~ ~ (chooses / ~ (chooses category P)~SG-INFLECTIO NAL-GEN rSl~tE-CASE-MOD $SG-PARTICLE-GENITIVE-CASE-MOI:GE-N (above)GE: MarJas AR: rsjulin 'man's' EN: of JA: noFlgu~ $.
Genitive Case MOD199and ano (away from either)), but they belong to the class ofdeterminers only ff the language has DET.Grammatical agreement (AGR)Two kinds of features are distinguished, linguisticfeatures relevant to GRAMMATICAL A ~ ' r  (e.g.
Frenc~grammatical gender i~l~*~ table ?a table' f.), and refexentfealm~s relevant to ~AC~ATXC A~Rmgdm~r (e.g.
using s~to refer to a female person; using appropriate numendclassifiers fur counting objects in Japanese).
The former isunder aUribute AGR, and the latter is under FEATS.
TheN-internal gramma,~c~l agn:emunt (AGR) requires thatcertain features of the HEAD Nominal must agree withthose of MOD.
For instance, English has numberagreement (e.g.
th/s book, *tho~ book, *th/,v boo~).Among the five languages under consideration, all butJapanese have AGR.Although them is c~oss-linguistic variation in AGRfeatures, it is not random (Moravcsik 1978).
Table I sumsup the N-intemai AGR features in the four languages.
AllAGR features go under atlribute AGR so that its presencesimply corresponds to the inescoce of grmmnaticalagreement in a language.
EN-N, for instance, inherits theshared template for number agreement, and FR-Nthose for number and gender agreements.
See below:.$SG-NBR-AGR:\[result" \[agr:.
\[nbr:.
<I>\]elements: \[a: \[feats: \[nbr: IN\]\]\]\]\]$SG-GDR-AGR:\[result: \[ag~.
\ [g~ <1>\]etemmts: \[~ \[feats: \ [g~ 11"I\]\]\]\]\]Seperating AGR end FEATS enables us to cte.a~ SO-templates that impose the most general agreementconslraint ~-g~miless of the precise content of agreementfea~.
Three agreement templates produce the combinedeffect of N-intenml agreement conslrsint, SG-AGR, SG-AGR-ARGUMENTS,  and the composite of the two, SG-AGR-WITH-ARGUMEN'I~.
See Figure 7.The reenlrancies impose the strict identity of AGRfeatures: (0 $SG-AGR--betwem the topmost structureand the dcmmt that the graph is defined for, (fi)$SG-AGR-ARGUMENTS---between the topmoststructure and the first argument, and (iii) $SG-AGR-WITH-ARGUMENTS--among all the three.
(0 goes intoALL NOMINALS, pussing the Dominql's AGR featams to thetop level This is because the AGR features must always beavailable at the top level of a nominal so that they can beused when the nominal is further modified.
(ii) goes intoADNO~AL MODn~mRS, passing the head nominai'sAGR realtors to the top leveL (ih~ goes into ONLY THOSEADNOMINAL MODwle.gS SUBJECT TO THB AG~ CONS'IRAINI**for instance, demomtratives (e.g.
these) but not attributiveadjectives (e.g.
sma//) in English, and both demonstrativesand adjectives in French (see this d i f f~ce  in the aboveinberitance).This is an example where a better language-specifictreatment is obtained from the gnunmar-sharingperspective.
If only English is handled, one may simplyforce the identity of NBR features amidst all kinds of otherfeatmes, but in the light of eruss-linguistic variation andinvsrisnts, it lends itself naturally to separating out twokinds of features that correspond to d i f f~t  semanticintcqnetation processes.Category  constancy  and  word  ordertypo logyIn connecting word order typology and categoriaigrnmm~r~ we have benefited from work of Grcenberg(1966), Lelmumn (1973), Vennemann (1974, 1976, 1981),Kecnma (1979), Flynn (1982), and Hawkins (1984).Amon 8 these, we have a f'h-st-cut implementation ofVamemmm's (1981) and Plyun's (1982) view that thefunctor types based on CATEOORY CONSTANCY have asignificant relation to the default word order of a language.A functor is c^Teoo~Y.COm-T~aCr ff it builds the samecatego~ as its argum~t(s).
It is CATEGORY.NON-CONSTANTif it builds a different category from its m-gument(s).
Thesenotions ~e also called m~xJrt, mc md ~x~c,respectively, by Ber-Hillel (1953), and are crucially used inlqyma's high-level word order convention s ~ .
Thedefinitiom of the notions MOD (modifier), HEAD (head),FN  (run.ion), and ARG (argument) follow:.?
MOD is a categm'y-comtant functor (XIX) thatcombines with HEAD (X).
(see above for SG-MOB)?
FN is a category-non-comtant fu ctor (YIX)that combines with ARG (X).eatm~oz~, aat~oz~,cmast~ant non-oonst.ant~X YI \  I \XlX X YIX XI I I I~ PM &\]RG@.g.BIN W PPIM WadJ  noun pzmp nounred roof for MaxThem is crms-linguis~ evidenc~ that MOD-I-IEADmid FN-ARG urdcn tend to go in opposite directions.
Thisremounts o two basic word order types in languages:?~R T'~PE 1: \]tRG < FNMOD ~?L~DEIt TXW2 2:  i 'N<~IDLED ~ MOD(wlmL-e < ~-qutdB as  ' pz .cmdas ' )The N-level default word order in a language isdeterminedas follows: Every language has ~posrnoN-s (prepositionsand postpositions), universally a category-non-constantfunctor PPIN.
A postpositionai l aguage (i.e.
a languagethat uses only or predominantly postpositions) then belongsto TYPE 1 (ARG < FN), and a prepositional languagebelongs to TYPE 2 (FN < ARG).
in the present case, EN,G~ ~ and AR are propositional while JA ispostpositiuneLThe default MOD order is most faithfully observed in200inheritance ofcomposite t mplates~ $SG-ARG (see above), %SG-ARGUMENTS-REST-SATURATED (see above)$S~-DET ~ G - N ~  (see above){various templatesfor cons~aimngthe cooccurrenceand order inside DET) $SG-DEM(onstrative) $SG-ATI'RIBUTIVE-ADJECTIVE$SG-HEAD-TYPE-IS-TOP-TYPE:~ / ' " ~  / ~ : \ [ r e s u l t :  \t~:>e leme~l:> \[b: 1\[ \]\]\]\]\] iENoATTIRB-ADJ GE-ATTRIB-ADJ FR-ATTRIB-ADJ AR-ATTRIB-ADJ JA-A3"rRIB-ADJbig gross grand .
kablyr ookUFigure 6.
DEM 8rid ATrRIB-ADJ in relation to DETARABIC:GERMAN:FRENCH:F.NGLISH:NUMBER: GENDER: CASE: DEFINrrE: ANNEXEDSG DU PL3 M F NOM ACC GEN ?- + -SG PL M F N NOM ACC GEN DATSG PL M FSG PLTtble I. N-inmul Agmemmt Featureatomic tamplat~%SG-AGR: \[result: \[agr: <I>elements: \[a: \[agr: I\[ ll\]\]\]:$SG-AGR-ARGUMENTS: \[result: \[agr: <1>\]arguments: \[first: \[result: \ [AO~ I\[ \]\]\]\]\]inheritance of composite templates(~ "~SG-GDR-AGR (above) ~ J~.~a N MOD FIR N MOD 1 ' '  I~" ~etc.
~ .
.
.
.
.
.
.
.
.
.
r .
.
.
.
.
.
.inu dogs chiens these stall ces petitsFigure 7.
AGREEMENT201Arabic (HEAD < MOD) and Japanese (MOD < HEAD),with few exceptions.
The three European languages,however, observe the default order only with 'heavier' (iJ:.phrasal or clausal) modifiers, namely, genitives, pp-modifiers, and relative clauses.
Lex/cal modifiers,including numerals, demonslratives, and adjectives (moreor less), go in the opposite ordering.
The exceptionallyordered MODs of the five languages revealed enimplk:ational chain amnng modifiers: Numerals <Demonstratives < Adjectives < Genitives .
:Relative clauses.
Exceptional order was found with thoseMODs s~arting from the left-end of this hierarchy: JA:marked use of Numerals, AR: enmarked use of Numeralsand Demonslratives, FR: Numerals, Demonstratives, andused of Adjectlve~ EN&GE: Numerals,Demomlrafives, and Adjectives.
The generalization is thata non-default order for a modifier type x implies the nowdefault order for other types located to the LeFr of x in thegiven chain.
WI~ we found mppo~ the generalimplicational hierm~hy that Hawkin~ (1984) found in hiscross-linguistic study.
We can ~ maintain, therefin'e, thatthere is such a thing as the default .
o ~  with aqualification that it maybe oven'idden by non-random,subclaasea.
In our current implementation, we simplyassign another category MOD2 on those 'exceptional'modifiers in order to free them from the general orderconslraint on MOD, which we hope to improve in thefuture.
10Potential problems and solutionsThere are two potential problems in m effort todevelop a shared grammar as described be~ One is theneed for serious cooperation amang the developers.
Asmall change in shared templates can always affectlanguage-specific templmns that someoue else is workln~on.
The other problem is the sheer complexity of theinheritance lattice.
Both problems can be most cffcctivelyreduc~_d by a sophisticated i ts  tooLConclusions and future prospectsWe have shown a specific implementation f grammarsharin8 using graph unification by inheritance.
Althoughthe case discussed covers only simple nominals in fivelanguages, we believe that the fundamental process that weGRAMMATICAL ATOMIZATION will remain crucial indeveloping a shared grammar of any sU'uctural complexitya~l linguistic overage.
The specif~ merits of this processis that (a) it tends to prevent he grammar writer fromimplementing treatments that work only for a language or alanguage type, and that (b) it pmvidas insights as to howcertain conflated properties in a languase actually mnsistof smaller independent pros.
In the end, when a prototypeshared grammar anains a reasonable scale, we hope toverify the prediction that it will facilitate adding coveragefor new languages.The purpose of this wo~ at MCC was to demonstratethe feasibility of a shared syn~ rule base for dissimilarlanguages.
We only assumed that languages are used to.
convey information contents that can be represented inacommon knowledge base.
As the next step, therefore, wehave chosen to connect syntax with 'deeper' levels ofinformation pmces~in~ (i.e.
sern*.tlcs, discourse, andknowledge base) rather them continuing to increase thesyntactic coverage alone.
Our current effort is ondeveloping a blackboard-like system for controlling variousknowledge sources (i.e.
morphology, syntax, semantics,discourse, and a commmutense knowledge base (MCC'sCYC, Lanat and Feigenhaum 1987)).
In the future, wehope to see a shared grammar integrated in a full-blowninterface tool for man-machine commuuical/on.AcknowledgmentsThis shared grammar work is a collaborative effort of ateam at MCC.
I am especially indebted to my fellowlinguis~ Anthony Arists~ and Carol Juatus, for theirinsights into multilingual facts and numerous discussions.I would also like.
to tl~nk Rich Cohen, Martha Morgan,Elaine Rich, Jonathan Slecum, Ksystyna Wachowicz, andKent Wittenburg for valuable comments and discussions atvarious phases of the work.
Thank~ also go to AI Mendalland Michael O'Leary for implementing the interface tool,e~l to anonymous ACL reviewers for helpful comments.
Iam responsible, however, for this particular exposition ofthe work and remaining shortcomings.I?We envision using a data structure of type inheritancelattice defined for each lanouage to express word orderconstraints in order to handle non-default orde~m 8.
Thebasic idea is that an order constraint s ated on a d_,~'__~-ndant(e.g.
DEM < head) ovearides that stated on its anc~tont(e.g.
head < MOD).
This differs from GPSG's LP rules(Gazdar & Pullum 1981; Gazd& et al 1985; Uzlmreit1986) in that the order conslraints apply to items locatedanywhen" in the derivational Iree struclrue, not limited tosister constituents, and the pieces of an item can bescattered in the tree.
It is in spirit ~imilar to LFG'sfunctional precedence conslraints (Kaplun 1988;Kameyama forthcoming).ReferencesAries, Anthony and Mark Steedman.
1982.
On the order ofwords.
Lingusitics and Philosophy, 4, 517-558.Aristar, Anthony.
1988.
Word-order constraints in an~0tilingeal categorial grammar.
To appear in theProceedings for the 12th International Conference onComputational Linguistics, Bedapest.Bach, ~mmon.
1986.
The algebra of events.
Linguisticsand Philosophy, 9, 5-16.Bar-Hillel, Y.
1953.
A quas/-arithmetical notation for202syntactic description.
Language, 29(1), 47-58?van Benthem, Johan.
1986.
Categorial grammar.
Essays inLogical Semantics (Chapter 7).
DonkechC Reidel,123-150.Flickengcr, Daniel, Cad Pollard, and Thomas Wasow.1985.
Structure-sharing in lexical rcprcsentation.The Pruccedings for the 24th Annual Meeting of theAssociation for Computational Linguistics.Flynn, Michael 1982.
A categorial theory of stricturebuilding.
In G. Gazdar, G. Pollum, and E. Klein(eds), Order, Concord, and Constituency.
Dordrecht:Foris.Gazdsr, Gerald and Geoffrey K. Pullum.
1981.Subcategorizat/on, constituent order, and the notion'head'.
In Moongat, M., H. v.d.
Huist, andT.
Hoekstra (eds), The Scope of Lexical Rules.Dordrecht, Holland: Foris, 107-123.; Ewen Klcin; Geoffrey K. pollum; and Ivan A. Sag.1985?
Generalized Phrase Slnumm~ Grammar.Oxford, England: Blackwell Publishing andCambridge, Mass.
: Harvard University Press.Greenberg, Joseph.
1966.
Some universals of grammarwith particular eference to the order of meaningfulelements.
In J. Greenberg (ed.
), Universals ofLanguage (2nd edition).
Cambridge, Mass.
: The MITPress, 73-113.Hawkins, Jolm.
1984.
Modifier-head or function-argumentrelations in phrase slructure?
The evidence of someword order universals.
Lingua, 63, 107-138.Kameyam* Megumi.
forthcoming.
Functional precedenceconditions on overt and zero pmnominals.Manuscript.Kapian, Ronald M. 1988.
Three seductions ofcomputational psycholinguistics.
In Whitelock,Peter;, Harold Somen, Paul Bennett, Rod Johnson,and Mary McGee Wood (eds), Linguistic Theory andComputer Applications.
Academic Press.Karttunen, LaurL 1986?
Radical lexicalism.
Paperpresented at the Workshop on AlternativeConceptions of Phrase Slntcture at the SummerLinguistic Institute, New York.
\[To appear inKroch, Anthony et aL (eds), Alternative Conceptionsof Phrase Structure.\]Keemn, Edward.
1979.
On surface form and logical form.Studies in the Linguistic Sciences (special issue),8(2).Krifka, Manfred.
1987?
Nominal ref~uce and tempm-alconstitution: towards a semantics of quantity.
InJ.
Gmenendijk, M. Stokhof, and F. VelUnan (eds),Proceedings of the Sixth Amsterdam Colloquium,University of Amsterdam, Institu~ for Language,Logic, and Information, 153-173.I.ab,~mn; Winfred P. 1973.
A structural principle oflanguage and its implications.
Language, 49, 47-66.Lenat, Douglas B. and Edward A. Feigenbanm.
1987.
Onthe thresholds of knowledge.
Paper presented at theWorkshop on Foundations of AI, MIT, June.
Also inthe Proceedings for the International JointConference on Artificial Intelligence, Milan.Montague, Richard.
1974.
The proper Ireatment ofquanlffication i  English?
In Rich Thomason (ed?
),Formal Philosophy:.
Selected Papers of RichardMontague.
New Haven: Yale, 247-279.Moravcsik, Edith.
1978.
AgreemanL In J. H. Greenberg etal.
(eds), Universals of Human Language, VoL 3.Stanford: Stanford University Press.Pollard, Cad and Ivan Sag.
1987.
Head-driven PhraseSU'UCUI.-'~ Grammar~ The ?oursc ~ for \[heLinguistic Institute at Stanford University.Schmerlin 8.
Susan.
1983.
Two theories of syntacticcategories.
Linguistics and Philosophy, 6, 393.421.Shicher, Stuart.
1984.
The design of a computer languagefor linguiStiC informaliolL The Pr~__J~yl_ |n~s for the10th International Conference on ComputationalLinguistics, 362-366.1986?
An Introduction to Unification-basedApproaches to Grammar?
CSLI Lecutre Notes 4.Stanford: CSLL (available from the University ofChicago P~s)Slocum, Jonathan.
1988.
Morphological processing in theNabu system.
In the ProceeA_ings for the 2ridConfezence on Applied Natural LanguagePmcessh\]8.
ACL.and Carol Juatus?
1985?
Transprtability to otherlanguages: the natm~ language processing project inthe AI program at MCC.
ACM Transactions onOffke Information Systems, 3(2), 204-230.Uzkm~t, Ham.
1986a.
Comtraints on order.
Stanford, CA:CSLI Repog No.
CSLI-86-46.?
1986b.
Categorial unification gramman.
The~ g s  for the 1 lth International Conference onComputational Linguistics, 187-194.Venuemann, Then.
1974.
Topics, subjects and word one-'r:From SXV tu SVX via TVX.
In J. M. Andsrson ~ndC.
Jones (eds), Historical Linguistics, I?
Amsterdam:North-Holland, 339-376.?
1976.
Categorial grammar and the order ofmeaningful elements.
In A. Jnilland (ed.
), IAnguisticstudies offered to Joseph Greenberg on the occasionof his sixtieth birthday.
California: Saratoga,615-634.?
1981.
Typology, universals and change of language.Paper prmentad at the International Conference onHistorical Syntax, Poman.and Ray H&low.
1977.
Categorial grammar mdconsistent basic VX ~iafizafion.
Theoreticallinguistics, <3), 227-254.Wittenhorg, Kent.
1986a.
Natural anguage processing withcombinat~ry categorial grammar in a graph-imificafion-based formalkuk Doctoral Dissertation,University of Texas at Austin.?
1986b.
A parsor for portable NL interfaces usinggraph-unification-based ~mmnrS.
The ~ g Sfor the 5th National Conference on ArtificialIntelLigence, 1053-1058.203
