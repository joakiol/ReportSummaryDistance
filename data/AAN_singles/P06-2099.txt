Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 771?778,Sydney, July 2006. c?2006 Association for Computational LinguisticsCompiling a Lexicon of Cooking Actions for Animation GenerationKiyoaki Shirai Hiroshi OokawaJapan Advanced Institute of Science and Technology1-1, Asahidai, Nomi, 923-1292, Ishikawa, Japan{kshirai,h-ookawa}@jaist.ac.jpAbstractThis paper describes a system which gen-erates animations for cooking actions inrecipes, to help people understand recipeswritten in Japanese.
The major goal of thisresearch is to increase the scalability of thesystem, i.e., to develop a system which canhandle various kinds of cooking actions.We designed and compiled the lexicon ofcooking actions required for the animationgeneration system.
The lexicon includesthe action plan used for animation genera-tion, and the information about ingredientsupon which the cooking action is taken.Preliminary evaluation shows that our lex-icon contains most of the cooking actionsthat appear in Japanese recipes.
We alsodiscuss how to handle linguistic expres-sions in recipes, which are not includedin the lexicon, in order to generate anima-tions for them.1 IntroductionThe ability to visualize procedures or instruc-tions is important for understanding documentsthat guide or instruct us, such as computer manualsor cooking recipes.
We can understand such docu-ments more easily by seeing corresponding figuresor animations.
Several researchers have studiedthe visualization of documents (Coyne and Sproat,2001), including the generation of animation (An-dre and Rist, 1996; Towns et al, 1998).
Such ani-mation systems help people to understand instruc-tions in documents.
Among the various types ofdocuments, this research focuses on the visualiza-tion of cooking recipes.Many studies related to the analysis or genera-tion of cooking recipes have been done (Adachi,1997; Webber and Eugenio, 1990; Hayashi et al,2003; Shibata et al, 2003).
Especially, severalresearchers have proposed animation generationsystems in the cooking domain.
Karlin, for exam-ple, developed SEAFACT (Semantic Analysis Forthe Animation of Cooking Tasks), which analyzedverbal modifiers to determine several features ofan action, such as the aspectual category of anevent, the number of repetitions, duration, speed,and so on (Karlin, 1988).
Uematsu developed?Captain Cook,?
which generated animations fromcooking recipes written in Japanese (Uematsu etal., 2001).
However, these previous works didnot mention the scalability of the systems.
Thereare many linguistic expressions in the cooking do-main, but it is uncertain to what extent these sys-tems can convert them to animations.This paper also aims at developing a system togenerate animations from cooking recipes writtenin Japanese.
We especially focused on increasingthe variety of recipes that could be accepted.
Afterpresenting an overview of our proposed system inSubsections 2.1 and 2.2, the more concrete goalsof this paper will be described in Subsection 2.3.2 Proposed System2.1 OverviewThe overview of our animation generation sys-tem is as follows.
The system displays a cookingrecipe in a browser.
As in a typical recipe, cookinginstructions are displayed step by step, and sen-tences or phrases representing a cooking action inthe recipe are highlighted.
When a user does notunderstand a certain cooking action, he/she canclick the highlighted sentence/phrase.
Then thesystem will show the corresponding animation tohelp the user understand the cooking instruction.Note that the system does not show all proce-dures in a recipe like a movie, but generates ananimation of a single action on demand.
Further-more, we do not aim at the reproduction of recipesentences in detail.
Especially, we will not prepareobject data for many different kinds of ingredients.For example, suppose that the system has objectdata for a mackerel, but not for a sardine.
Whena user clicks the sentence ?fillet a sardine?
to seethe animation, the system will show how to fillet a?mackerel?
instead of ?sardine?, with a note indi-cating that the ingredient is different.
We believe771AnimationGeneratorAction PlanAnimationLexicon of Cooking Actions(ex.
chop an onion finely)Input sentenceAction Matcher Basic Action 1``fry''Basic Action 2``chop finely''action planaction planFigure 1: System Architecturethat the user will be more interested in ?how to fil-let?
than in the specific ingredient to be filleted.In other words, the animation of the action will beequally helpful as long as the ingredients are simi-lar.
Thus we will not make a great effort to prepareanimations for many kinds of ingredients.
Instead,we will focus on producing the various kinds ofcooking actions, to support users in understandingcooking instructions in recipes.2.2 System ArchitectureFigure 1 illustrates the architecture of the proposedsystem.
First, we prepare the lexicon of cookingactions.
This is the collection of cooking actionssuch as ?fry?, ?chop finely?, etc.
The lexicon hasenough knowledge to generate an animation foreach cooking action.
Figure 2 shows an exam-ple of an entry in the lexicon.
In the figure, ?ex-pression?
is a linguistic expression for the action;?action plan?
is a sequence of action primitives,which are the minimum action units for animationgeneration.
Roughly speaking, the action plan inFigure 2 represents a series of primitive actions,such as cutting and rotating an ingredient, for thebasic action ?chop finely?.
The system will gen-erate an animation according to the action plan inthe lexicon.
Other features, ?ingredient examples?and ?ingredient requirement?, will be explainedlater.The process of generating an animation is asfollows.
First, as shown in Figure 1, the systemcompares an input sentence and expression of theentries in the lexicon of cooking actions, and findsthe appropriate cooking action.
This is done by themodule ?Action Matcher?.
Then, the system ex-tracts an action plan from the lexicon and passes itto the ?Animation Generator?
module.
Finally An-imation Generator interprets the action plan andproduces the animation.2.3 GoalThe major goals of this paper are summarized asfollows:G1.
Construct a large-scale lexicon of cooking ac-tionsIn order to generate animations for variouskinds of cooking actions, we must prepare alexicon containing many basic actions.G2.
Handle a variety of linguistic expressionsVarious linguistic expressions for cooking ac-tions may occur in recipes.
It is not realisticto include all possible expressions in the lex-icon.
Therefore, when a linguistic expressionin an input sentence is not included in the lex-icon, the system should calculate the similar-ity between it and the basic action in the lex-icon, and find an equivalent or almost similaraction.G3.
Include information about acceptable ingre-dients in the lexiconEven though linguistic expressions are thesame, cooking actions may be different ac-cording to the ingredient upon which the ac-tion is taken.
For example, ?cut into finestrips?
may stand for several different cook-ing actions.
That is, the action of ?cutcucumber into fine strips?
may be differ-ent than ?cut cabbage into fine strips?, be-cause the shapes of cucumber and cabbageare rather different.
Therefore, each entry inthe lexicon should include information aboutwhat kinds of ingredients are acceptable for acertain cooking action.As mentioned earlier, the main goal of this re-search is to increase the scalability of the system,i.e., to develop an animation generation systemthat can handle various cooking actions.
We hopethat this can be accomplished through goals G1and G2.In the rest of this paper, Section 3 describeshow to define the set of actions to be compiledinto the lexicon of cooking actions.
This concernsgoal G1.
Section 4 explains two major featuresin the lexicon, ?action plan?
and ?ingredient re-quirement?.
The feature ingredient requirement is772Basic Action 2expression ????????
(chop finely)action plan cut(ingredient,utensil,location, 2)rotate(ingredient,location, x, 90)cut(ingredient,utensil,location,20)rotate(ingredient,location, z, 90)cut2(ingredient,utensil,location, 10)cut(ingredient,utensil,location, 20)ingredient examples ???
(okra),????
(shiitake mushroom)ingredient requirement kind=vegetable|mushroomFigure 2: Example of an Entry in the Lexicon of Cooking Actionsrelated to goal G3.
Section 5 reports a preliminarysurvey to construct the module Action Matcher inFigure 1, which is related to goal G2.
Finally, Sec-tion 6 concludes the paper.3 Defining the Set of Basic ActionsIn this and the following sections, we will explainhow to construct the lexicon of cooking actions.The first step in constructing the lexicon is to de-fine the set of basic actions.
As mentioned earlier(goal G1 in Subsection 2.3), a large-scale lexiconis required for our system.
Therefore, the set of ba-sic actions should include various kinds of cook-ing actions.3.1 ProcedureWe referred to three cooking textbooks or man-uals (Atsuta, 2004; Fujino, 2003; Takashiro andKenmizaki, 2004) in Japanese to define the set ofbasic actions.
These books explain the fundamen-tal cooking operations with pictures, e.g., how tocut, roast, or remove skins/seeds for various kindsof ingredients.
We extracted the cooking opera-tions explained in these three textbooks, and de-fined them as the basic actions for the lexicon.
Inother words, we defined the basic actions accord-ing to the cooking textbooks.
The reasons why weused the cooking manuals as the standard for thebasic actions are summarized as follows:1.
The aim of cooking manuals used here is tocomprehensively explain basic cooking oper-ations.
Therefore, we expect that we can col-lect an exhaustive set of basic actions in thecooking domain.2.
Cooking manuals are for beginners.
Theaim of animation generation system is tohelp people, especially novices, to under-stand cooking actions in recipes.
The lexiconof cooking actions based on the cooking text-books includes many cooking operations thatnovices may not know well.3.
The definition of basic actions does not de-pend on the module Animation Generator.One of the standards for the definition of ba-sic actions is animations generated by thesystem.
That is, we can define basic cook-ing actions so that each cooking action cor-responds to an unique animation.
This ap-proach seems to be reasonable for an anima-tion generation system; however, it dependson the module Animation Generator in Fig-ure 1.
Many kinds of rendering engines arenow available to generate animations.
There-fore, Animation Generator can be imple-mented in various ways.
When changing therendering engine used in Animation Genera-tor, the lexicon of cooking actions must alsobe changed.
So we decided that it would notbe desirable to define the set of basic actionsaccording to their corresponding animations.In our framework, the definition of basic ac-tions in the lexicon does not depend on Ani-mation Generator.
This enables us to use anykind of rendering engine to produce an ani-mation.
For example, when we use a poor en-gine and want to design the system so that itgenerates the same animation for two or morebasic actions, we just describe the same ac-tion plan for these actions.We manually excerpted 267 basic actions fromthree cooking textbooks.
Although it is just a col-lection of basic actions, we refer it as the initial773Table 1: Examples of Basic Actionsexpression ingredient examples??????
(fillet) ??
(mackerel)????
(boil)??
(boil)????????
(cut into a comb shape)???
(tomato),?????
(potato)????????
(cut into a comb shape)????
(pumpkin)????????
(cut into a comb shape)??
(turnip)lexicon of cooking actions.
Table 1 illustrates sev-eral examples of basic actions in the initial lexi-con.
In the cooking manuals, every cooking op-eration is illustrated with pictures.
?Ingredient ex-amples?
indicates ingredients in pictures used toexplain cooking actions.3.2 Preliminary EvaluationA preliminary experiment was conducted to eval-uate the scalability of our initial lexicon of ba-sic actions.
The aim of this experiment was tocheck how many cooking actions appearing in realrecipes are included in the initial lexicon.First, we collected 200 recipes which are avail-able on web pages 1.
We refer to this recipe corpusas Rahereafter.
Next, we analyzed the sentencesin Raand automatically extracted verbal phrasesrepresenting cooking actions.
We used JUMAN 2for word segmentation and part-of-speech tagging,and KNP 3 for syntactic analysis.
Finally, wemanually checked whether each extracted verbalphrase could be matched to one of the basic ac-tions in the initial lexicon.Table 2 (A) shows the result of our survey.
Thenumber of basic actions was 267 (a).
Among theseactions, 145 (54.3%) actions occurred in Ra(a1).About half of the actions in the initial lexicon didnot occur in the recipe corpus.
We guessed thatthis was because the size of the recipe corpus wasnot very large.The number of verbal phrases in Rawas 3977(b).
We classified them into the following fivecases: (b1) the verbal phrase corresponded withone of the basic actions in the initial lexicon, and1http://www.bob-an.com/2http://www.kc.t.u-tokyo.ac.jp/nl-resource/juman.html3http://www.kc.t.u-tokyo.ac.jp/nl-resource/knp.htmlits linguistic expression was the same as one in thelexicon; (b2) the verbal phrase corresponded witha basic action, but its linguistic expression differedfrom one in the lexicon; (b3) no corresponding ba-sic action was found in the initial lexicon, (b4) theextracted phrase was not a verbal phrase, causedby error in analysis, (b5) the verbal phrase did notstand for a cooking action.
Note that the cases inwhich verbal phrases should be converted to ani-mations were (b1), (b2) and (b3).
The numbers inparentheses (...) indicate the ratio of each case tothe total number of verbal phrases, while numbersin square brackets [...] indicate a ratio of each caseto the total number of (b1), (b2) and (b3).We expected that the verbal phrases in (b1) and(b2) could be handled by our animation generationsystem because the initial lexicon contained thecorresponding basic actions.
On the other hand,our system cannot generate animations for verbalphrases in (b3), which was 42.3% of the verbalphrases our system should handle.
Thus the appli-cability of the initial lexicon was poor.3.3 Adding Basic Actions from RecipeCorpusWe have examined what kinds of verbal phraseswere in (b3).
We found that there were many gen-eral verbs, such as ????
(add)?, ????
(putin)?, ????
(heat)?, ????
(attach)?, ????
(put on)?, etc.
Such general actions were notincluded in the initial lexicon, because we con-structed it by extracting basic actions from cook-ing textbooks, and such general actions are not ex-plained in these books.In order to increase the scalability of the lexiconof cooking actions, we selected verbs satisfyingthe following conditions: (1) no corresponding ba-sic action was found in the lexicon for a verb; (2)a verb occurred more than 10 times in Ra.
In all,31 verbs were found and added to the lexicon asnew basic actions.
It is undesirable to define basicactions in this way, because the lexicon may thendepend on a particular recipe corpus.
However, webelieve that the new basic actions are very general,and can be regarded as almost independent of withthe corpus from which they were extracted.In order to evaluate the new lexicon, we pre-pared another 50 cooking recipes (Rbhereafter).Then we classified the verbal phrases in Rbinthe same way as in Subsection 3.2.
The resultsare shown in Table 2 (B).
Notice that the ratio774Table 2: Result of Preliminary Evaluation(A) Survey on Ra(a) # of basic actions 267(a1) basic actions occurred in Ra145 (54.3%)(b) # of verbal phrases 3977(b1) basic action(same) 974 (24.5%) [28.0%](b2) basic action(dif.)
1031 (25.9%) [29.7%](b3) not basic action 1469 (36.9%) [42.3%](b4) analysis error 180 ( 4.5%)(b5) not cooking action 323 ( 8.1%)(B) Survey on Rb(a) 298(a1) 106 (35.6%)(b) 959(b1) 521 (54.3%) [62.2%](b2) 262 (27.3%) [31.3%](b3) 55 ( 5.7%) [6.6%](b4) 45 ( 4.7%)(b5) 76 ( 7.9%)of the number of verbal phrases contained in thelexicon to the total number of target verb phraseswas 94.5% ((b1)62.2% + (b2)31.3%).
This ismuch greater than the ratio in Table 2 (A) (57.7%).Therefore, although the size of test corpus is small,we hope that the scalability of our lexicon is largeenough to generate animations for most of the ver-bal phrases in cooking recipes.4 Compilation of the Lexicon of BasicActionsAfter defining the set of basic actions for the lexi-con, the information of each basic action must bedescribed.
As shown in Figure 2, the main fea-tures in our lexicon are expression, action plan,ingredient examples and ingredient requirement.The term expression stands for linguistic expres-sions of basic actions, while ingredient examplesstands for examples of ingredients described in thecooking manuals we referred to when defining theset of basic actions.
As shown in Table 1, thesetwo features have already been included in the ini-tial lexicon created by the procedure in Section 3.This section describes the compilation of the restof the features: action plan in Subsection 4.1 andingredient requirement in Subsection 4.2.4.1 Action PlanFor each basic action in the lexicon, the actionplan to generate the corresponding animation isdescribed.
Action plan is the sequence of actionprimitives as shown in Figure 2.
Of the 298 basicactions in the lexicon, we have currently describedaction plans for only 80 actions.
Most of them areactions to cut something.We have also started to develop Animation Gen-erator (see Figure 1), which is the module that in-terprets action plans and generates animations.
WeFigure 3: Snapshot of Generated Animationused VRML for animation generation.
Figure 3is a snapshot of the animation for the basic ac-tion ?????????
(chop finely)?
generatedby our system.Our current focus has been on the design anddevelopment of the lexicon of cooking actions,rather than on animation generation.
Implementa-tion of the complete Animation Generator as wellas a description of the action plans for all basicactions in the lexicon are important future works.4.2 Ingredient RequirementSeveral basic actions have the same expression inour lexicon.
For instance, in Figure 1, there arethree basic actions represented by the same lin-guistic expression ?????????
(cut intoa comb shape)?.
These three actions stand for dif-ferent cooking actions.
The first one stands for theaction used to cut something like a ?tomato?
or?potato?
into a comb shape.
The second stands forthe following sequence of actions: first cut some-thing in half, remove its core or seeds, and cut itinto a comb shape.
This action is taken on pump-kin, for instance.
The third action represents thecooking action for ?turnip?
: remove the leaves ofthe turnip and cut it into a comb shape.
In otherwords, there are different ways to cut different in-775gredients into a comb shape.
Differences amongthese actions depend on what kinds of ingredientsare to be cut.As described in Section 2.2, the module ActionMatcher accepts a sentence or phrase for which auser wants to see the animation, then finds a cor-responding basic action from the lexicon.
In or-der to find an appropriate basic action for a recipesentence, the lexicon of cooking actions should in-clude information about what kinds of ingredientsare acceptable for each basic action.
Note that thejudgment as to whether an ingredient is suitableor not highly depends on its features such as kind,shape, and components (seed, peel etc.)
of the in-gredient.
Therefore, the lexicon should include in-formation about what features of the ingredientsmust be operated upon by the basic actions.For the above reason, ingredient requirementwas introduced in the lexicon of cooking actions.In this field, we manually describe the requiredfeatures of ingredients for each basic action.
Fig-ure 4 illustrates the three basic actions of ????????
(chop into a comb shape) in thelexicon 4.
The basic action a1, ?kind=vegetable,shape=sphere?
in ingredient requirement, meansthat only a vegetable whose shape is spherical isacceptable as an ingredient for this cooking action.On the other hand, for the basic action a2, only avegetable whose shape is spherical and contain-ing seeds is acceptable.
For a3, ?instance=??(turnip)?
means that only a turnip is suitable forthis action.
In our lexicon, such specific cookingactions are also included when the reference cook-books illustrate special cooking actions for certainingredients.
In this case, a cookbook illustratescutting a turnip into a comb shape in a differentway than for other ingredients.4.2.1 Feature Set of Ingredient RequirementHere are all the attributes and possible valuesprepared for the ingredient requirement field:?
kindThis attribute specifies kinds of ingredients.The possible values are:vegetable, mushroom, fruit, meat,fish, shellfish, seafood, condiment?Seafood?
means seafood other than fish orshellfish, such as ??
(squid), ???
(codroe) and so on.4action plan is omitted in Figure 4.?
vegThis attribute specifies subtypes of veg-etables.
Possible values for this attributeare ?green?, ?root?
and ?layer?.
?Green?stands for green vegetables such as ?????
(spinach) and ??
(Chinese cabbage).?Root?
stands for root vegetables such as?????
(potato) and ???
(burdock).?Layer?
stands for vegetables consisting oflayers of edible leaves such as ???
(let-tuce) and????
(cabbage).?
shapeThis attribute specifies shapes of ingredients.The possible values are:sphere, stick, cube, oval, plate, filiform?
peel, seed, coreThese attributes specify various componentsof ingredients.
Values are always 1.
For ex-ample, ?peel=1?
stands for ingredients withpeel.?
instanceThis specifies a certain ingredient, as shownin basic action a3 in Figure 4.The information about ingredient requirementswas added for 186 basic actions out of the 298 ac-tions in the lexicon.
No requirement was neededfor the other actions, i.e., these actions accept anykind of ingredients.4.2.2 Lexicon of IngredientsIn addition to the lexicon of cooking actions, thelexicon of ingredients is also required for our sys-tem.
It includes ingredients and their features suchas kind, shape and components.
We believe thatthis is domain-specific knowledge for the cookingdomain.
Thesauri or other general-purpose lan-guage resources would not provide such informa-tion.
Therefore, we newly compiled the lexiconof ingredients, which consists of only those ingre-dients appearing in the ingredients example in thelexicon of cooking actions.
The number of ingre-dients included in the lexicon is 93.
For each entry,features of the ingredient are described.
The fea-ture set used for this lexicon is the same as thatfor the ingredient requirement described in 4.2.1,except for the ?instance?
attribute.776Basic Action a1expression ????????
(cut into a comb shape)ingredient examples ???
(tomato),?????
(potato)ingredient requirement kind=vegetable, shape=sphereBasic Action a2expression ????????
(cut into a comb shape)ingredient examples ????
(pumpkin)ingredient requirement kind=vegetable, shape=sphere, seed=1Basic Action a3expression ????????
(cut into a comb shape)ingredient examples ??
(turnip)ingredient requirement instance=??
(turnip)Figure 4: Three Basic Actions of ?????????
(cut into a comb shape)?The current lexicon of ingredients is too small.Only 93 ingredients are included.
A larger lexiconis required to handle various recipe sentences.
Inorder to enlarge the lexicon of ingredients, we willinvestigate a method for the automatically acqui-sition of new ingredients with their features froma collection of recipe documents.5 Matching between Actions in a Recipeand the LexiconAction Matcher in Figure 1 is the module whichaccepts a recipe sentence and finds a basic actioncorresponding to it from the lexicon.
One of thebiggest difficulties in developing this module isthat linguistic expressions in a recipe may differfrom those in the lexicon.
So we have to considera flexible matching algorithm between them.To construct Action Matcher, we refer to theverbal phrases classified in (b2) in Table 2.
Notethat the linguistic expressions of these verbalphrases are inconsistent with the expressions in thelexicon.
We examined the major causes of incon-sistency for these verbal phrases.
In this paper, wewill report the result of our analysis, and suggestsome possible ways to find the equivalent actioneven when the linguistic expressions in a recipeand the lexicon are different.
The realization ofAction Matcher still remains as future work.Figure 5 shows some examples of observed in-consistency in linguistic expressions.
In Figure 5,the left hand side represents verbal phrases inrecipes, while the right hand side represents ex-pressions in the lexicon of cooking actions.
Aslash indicates word segmentation.
Causes of in-consistency in linguistic expressions are classifiedas follows:?
Inconsistency in word segmentationWord segmentation of verbal phrases inrecipes, as automatically given by a morpho-logical analyzer, is different from one of thebasic actions in the lexicon, as shown in Fig-ure 5 (a).In order to succeed in matching, we need anoperation to concatenate two or more mor-phemes in a phrase or to divide a morphemeinto to two or more, then try to check theequivalence of both expressions.?
Inconsistency in case fillersVerbs in a recipe and the lexicon agree, buttheir case fillers are different.
For instance,in Figure 5 (b), the verb ???
(sprinkle)?
isthe same, but the accusative case fillers ????
(chili)?
and ??
(salt)?
are different.
In thiscase, we can regard both as representing thesame action: to sprinkle a kind of condiment.In this case, the lexicon of ingredients (see4.2.2) would be helpful for matching.
Thatis, if both ???
(chili) and ?
(salt) havethe same feature ?kind=condiment?
in thelexicon of ingredients, we can judge thatthe phrase ????/?/??
(sprinkle chili)?corresponds to the basic action ??/?/??
(sprinkle salt)?.?
Inconsistency in verbsDisagreement between verbs in a recipe andthe lexicon is one of the major causes of in-consistency.
See Figure 5 (c), for instance.777Expressions in Recipes Expressions in Lexicon(a) ??(divide)/???(loosen)?
?
?break (egg) ?????(break)?
?
?break (egg)(b) ???
(chili)/ ?
(ACC)/ ??(sprinkle)?
?
?sprinkle chili ?
(salt)/ ?
(ACC)/ ??(sprinkle)?
?
?sprinkle salt(c) ???
(Spewing sand)/ ?(ACC)/??(do)?
?
?make (shellfish)spew out sand??
(salt water)/ ?(LOC)/???(dip)?
?
?dip it intosalt waterFigure 5: Inconsistency in Linguistic ExpressionsThese two phrases represent the same ac-tion 5, but the linguistic expressions are to-tally different.In this case, the matching between them israther difficult.
One solution would be to de-scribe all equivalent expressions for each ac-tion in the lexicon.
Since it is not realistic tolist equivalent expressions exhaustively, how-ever, we want to automatically collect pairsof equivalent expressions from a large recipecorpus.6 ConclusionIn this paper, we have described the basic idea fora system to generate animations for cooking ac-tions in recipes.
Although the system is not yetcomplete and much work still remains to be done,the main contribution of this paper is to show thedirection for improving the scalability of the sys-tem.
First, we designed a lexicon of cooking ac-tions including information about action plans andingredient requirements, which are needed to gen-erate the appropriate cooking animations.
We alsoshowed that our lexicon covers most of the cook-ing actions appearing in recipes.
Furthermore, weanalyzed the recipe corpus and investigated howto match actions in a recipe to the correspondingbasic action in the lexicon, even when they havedifferent linguistic expressions.
Such a flexiblematching method would also increase the scala-bility of the system.ReferencesHisahiro Adachi.
1997.
GCD: A generation methodof cooking definitions based on similarity betweena couple of recipes.
In Proceedings of the NaturalLanguage Processing Pacific Rim Symposium, pages135?140.5Note that it is required to dip shellfish into salt water inorder to make it spew out sand.Elisabeth Andre and Thomas Rist.
1996.
Copingwith temporal constraints in multimedia presenta-tion planning.
In Proceedings of the National Con-ference on Artificial Intelligence, pages 142?147.Yoko Atsuta.
2004.
How to cut vegetables (inJapanese).
Syu?eisha.Bob Coyne and Richard Sproat.
2001.
WordsEye: Anautomatic text-to-scene conversion system.
In Pro-ceedings of the SIGGRAPH, pages 487?496.Yoshiko Fujino.
2003.
New Fundamental Cooking (inJapanese).
SS Communications.Eri Hayashi, Suguru Yoshioka, and Satoshi Tojo.
2003.Automatic generation of event structure for Japanesecooking recipes (in Japanese).
Journal of NaturalLanguage Processing, 10(2):3?17.Robin F. Karlin.
1988.
Defining the semantics of ver-bal modifiers in the domain of cooking tasks.
InProceedings of the Annual Meeting of the Associ-ation for Computational Linguistics, pages 61?67.Tomohide Shibata, Daisuke Kawahara, MasashiOkamoto, Sadao Kurohashi, and Toyoaki Nishida.2003.
Structural analysis of instruction utterances.In Proceedings of the Seventh International Con-ference on Knowledge-Based Intelligent Informationand Engineering Systems (KES2003), pages 1054?1061.Junko Takashiro and Satomi Kenmizaki.
2004.Standard Cooking: Fundamentals of Cooking (inJapanese).
Sho?gakukan.Stuart G. Towns, Charles B. Callaway, and James C.Lester.
1998.
Generating coordinated natural lan-guage and 3D animations for complex spatial expla-nations.
In Proceedings of the National Conferenceon Artificial Intelligence, pages 112?119.Hideki Uematsu, Akira Shimazu, and Manabu Oku-mura.
2001.
Generation of 3D CG animationsfrom recipe sentences.
In Proceedings of the Nat-ural Language Processing Pacific Rim Symposium,pages 461?466.Bonnie Lynn Webber and Barbara Di Eugenio.
1990.Free adjuncts in natural language instructions.
InProceedings of the International Conference onComputational Linguistics, pages 395?400.778
