Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics, pages 1288?1297,Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational LinguisticsEnhancing Language Models in Statistical Machine Translationwith Backward N-grams and Mutual Information TriggersDeyi Xiong, Min Zhang, Haizhou LiHuman Language TechnologyInstitute for Infocomm Research1 Fusionopolis Way, #21-01 Connexis, Singapore 138632{dyxiong, mzhang, hli}@i2r.a-star.edu.sgAbstractIn this paper, with a belief that a languagemodel that embraces a larger context providesbetter prediction ability, we present two ex-tensions to standard n-gram language mod-els in statistical machine translation: a back-ward language model that augments the con-ventional forward language model, and a mu-tual information trigger model which captureslong-distance dependencies that go beyondthe scope of standard n-gram language mod-els.
We integrate the two proposed modelsinto phrase-based statistical machine transla-tion and conduct experiments on large-scaletraining data to investigate their effectiveness.Our experimental results show that both mod-els are able to significantly improve transla-tion quality and collectively achieve up to 1BLEU point over a competitive baseline.1 IntroductionLanguage model is one of the most importantknowledge sources for statistical machine transla-tion (SMT) (Brown et al, 1993).
The standardn-gram language model (Goodman, 2001) assignsprobabilities to hypotheses in the target languageconditioning on a context history of the precedingn ?
1 words.
Along with the efforts that advancetranslation models from word-based paradigm tosyntax-based philosophy, in recent years we havealso witnessed increasing efforts dedicated to ex-tend standard n-gram language models for SMT.
Weroughly categorize these efforts into two directions:data-volume-oriented and data-depth-oriented.In the first direction, more data is better.
In or-der to benefit from monolingual corpora (LDC newsdata or news data collected from web pages) thatconsist of billions or even trillions of English words,huge language models are built in a distributed man-ner (Zhang et al, 2006; Brants et al, 2007).
Suchlanguage models yield better translation results butat the cost of huge storage and high computation.The second direction digs deeply into monolin-gual data to build linguistically-informed languagemodels.
For example, Charniak et al (2003) presenta syntax-based language model for machine transla-tion which is trained on syntactic parse trees.
Again,Shen et al (2008) explore a dependency languagemodel to improve translation quality.
To some ex-tent, these syntactically-informed language modelsare consistent with syntax-based translation modelsin capturing long-distance dependencies.In this paper, we pursue the second direction with-out resorting to any linguistic resources such as asyntactic parser.
With a belief that a language modelthat embraces a larger context provides better pre-diction ability, we learn additional information fromtraining data to enhance conventional n-gram lan-guage models and extend their ability to capturericher contexts and long-distance dependencies.
Inparticular, we integrate backward n-grams and mu-tual information (MI) triggers into language modelsin SMT.In conventional n-gram language models, we lookat the preceding n ?
1 words when calculating theprobability of the current word.
We henceforth callthe previous n ?
1 words plus the current wordas forward n-grams and a language model built1288on forward n-grams as forward n-gram languagemodel.
Similarly, backward n-grams refer to thesucceeding n ?
1 words plus the current word.
Wetrain a backward n-gram language model on back-ward n-grams and integrate the forward and back-ward language models together into the decoder.
Indoing so, we attempt to capture both the precedingand succeeding contexts of the current word.Different from the backward n-gram languagemodel, the MI trigger model still looks at previouscontexts, which however go beyond the scope of for-ward n-grams.
If the current word is indexed as wi,the farthest word that the forward n-gram includesis wi?n+1.
However, the MI triggers are capable ofdetecting dependencies between wi and words fromw1 to wi?n.
By these triggers ({wk ?
wi}, 1 ?k ?
i?n), we can capture long-distance dependen-cies that are outside the scope of forward n-grams.We integrate the proposed backward languagemodel and the MI trigger model into a state-of-the-art phrase-based SMT system.
We evaluatethe effectiveness of both models on Chinese-to-English translation tasks with large-scale trainingdata.
Compared with the baseline which only usesthe forward language model, our experimental re-sults show that the additional backward languagemodel is able to gain about 0.5 BLEU points, whilethe MI trigger model gains about 0.4 BLEU points.When both models are integrated into the decoder,they collectively improve the performance by up to1 BLEU point.The paper is structured as follows.
In Section 2,we will briefly introduce related work and show howour models differ from previous work.
Section 3 and4 will elaborate the backward language model andthe MI trigger model respectively in more detail, de-scribe the training procedures and explain how themodels are integrated into the phrase-based decoder.Section 5 will empirically evaluate the effectivenessof these two models.
Section 6 will conduct an in-depth analysis.
In the end, we conclude in Section7.2 Related WorkPrevious work devoted to improving language mod-els in SMT mostly focus on two categories as wementioned before1: large language models (Zhanget al, 2006; Emami et al, 2007; Brants et al, 2007;Talbot and Osborne, 2007) and syntax-based lan-guage models (Charniak et al, 2003; Shen et al,2008; Post and Gildea, 2008).
Since our philoso-phy is fundamentally different from them in that webuild contextually-informed language models by us-ing backward n-grams and MI triggers, we discussprevious work that explore these two techniques(backward n-grams and MI triggers) in this section.Since the context ?history?
in the backward lan-guage model (BLM) is actually the future wordsto be generated, BLM is normally used in a post-processing where all words have already been gener-ated or in a scenario where sentences are proceededfrom the ending to the beginning.
Duchateau et al(2002) use the BLM score as a confidence measureto detect wrongly recognized words in speech recog-nition.
Finch and Sumita (2009) use the BLM intheir reverse translation decoder where source sen-tences are proceeded from the ending to the begin-ning.
Our BLM is different from theirs in that we ac-cess the BLM during decoding (rather than after de-coding) where source sentences are still proceededfrom the beginning to the ending.Rosenfeld et al (1994) introduce trigger pairsinto a maximum entropy based language model asfeatures.
The trigger pairs are selected accord-ing to their mutual information.
Zhou (2004) alsopropose an enhanced language model (MI-Ngram)which consists of a standard forward n-gram lan-guage model and an MI trigger model.
The lattermodel measures the mutual information of distance-dependent trigger pairs.
Our MI trigger model ismostly inspired by the work of these two papers, es-pecially by Zhou?s MI-Ngram model (2004).
Thedifference is that our model is distance-independentand, of course, we are interested in an SMT problemrather than a speech recognition one.Raybaud et al (2009) useMI triggers in their con-fidence measures to assess the quality of translationresults after decoding.
Our method is different fromtheirs in the MI calculation and trigger pair selec-tion.
Mauser et al (2009) propose bilingual triggerswhere two source words trigger one target word to1Language model adaptation is not very related to our workso we ignore it.1289improve lexical choice of target words.
Our analysis(Section 6) show that our monolingual triggers canalso help in the selection of target words.3 Backward Language ModelGiven a sequence of words wm1 = (w1...wm), astandard forward n-gram language model assigns aprobability Pf (wm1 ) to wm1 as follows.Pf (wm1 ) =m?i=1P (wi|wi?11 ) ?m?i=1P (wi|wi?1i?n+1) (1)where the approximation is based on the nth orderMarkov assumption.
In other words, when we pre-dict the current word wi, we only consider the pre-ceding n ?
1 words wi?n+1...wi?1 instead of thewhole context history w1...wi?1.Different from the forward n-gram languagemodel, the backward n-gram language model as-signs a probability Pb(wm1 ) to wm1 by looking at thesucceeding context according toPb(wm1 ) =m?i=1P (wi|wmi+1) ?m?i=1P (wi|wi+n?1i+1 ) (2)3.1 TrainingFor the convenience of training, we invert the or-der in each sentence in the training data, i.e., fromthe original order (w1...wm) to the reverse order(wm...w1).
In this way, we can use the same toolkitthat we use to train a forward n-gram languagemodel to train a backward n-gram language modelwithout any other changes.
To be consistent withtraining, we also need to reverse the order of trans-lation hypotheses when we access the trained back-ward language model2.
Note that the Markov con-text history of Eq.
(2) is wi+n?1...wi+1 instead ofwi+1...wi+n?1 after we invert the order.
The wordsare the same but the order is completely reversed.3.2 DecodingIn this section, we will present two algorithmsto integrate the backward n-gram language modelinto two kinds of phrase-based decoders respec-tively: 1) a CKY-style decoder that adopts bracket-ing transduction grammar (BTG) (Wu, 1997; Xiong2This is different from the reverse decoding in (Finch andSumita, 2009) where source sentences are reversed in the order.et al, 2006) and 2) a standard phrase-based decoder(Koehn et al, 2003).
Both decoders translate sourcesentences from the beginning of a sentence to theending.
Wu (1996) introduce a dynamic program-ming algorithm to integrate a forward bigram lan-guage model with inversion transduction grammar.His algorithm is then adapted and extended for inte-grating forward n-gram language models into syn-chronous CFGs by Chiang (2007).
Our algorithmsare different from theirs in two major aspects1.
The string input to the algorithms is in a reverseorder.2.
We adopt a different way to calculate languagemodel probabilities for partial hypotheses sothat we can utilize incomplete n-grams.Before we introduce the integration algorithms,we define three functions P , L, and R on strings (ina reverse order) over the English terminal alphabetT .
The function P is defined as follows.P(wk...w1) =P (wk)...P (wk?n+2|wk...wk?n+3)?
??
?a?
?1?i?k?n+1P (wi|wi+n?1...wi+1)?
??
?b(3)This function consists of two parts:?
The first part (a) calculates incomplete n-gramlanguage model probabilities for word wk towk?n+2.
That means, we calculate the uni-gram probability for wk (P (wk)), bigram prob-ability for wk?1 (P (wk?1|wk)) and so on un-til we take n ?
1-gram probability for wk?n+2(P (wk?n+2|wk...wk?n+3)).
This resemblesthe way in which the forward language modelprobability in the future cost is computed inthe standard phrase-based SMT (Koehn et al,2003).?
The second part (b) calculates complete n-gram backward language model probabilitiesfor word wk?n+1 to w1.The function is different from Chiang?s p func-tion in that his function p only calculates languagemodel probabilities for the complete n-grams.
Since1290we calculate backward language model probabilitiesduring a beginning-to-ending (left-to-right) decod-ing process, the succeeding context for the currentword is either yet to be generated or incomplete interms of n-grams.
The P function enables us toutilize incomplete succeeding contexts to approxi-mately predict words.
Once the succeeding con-texts are complete, we can quickly update languagemodel probabilities in an efficient way in our algo-rithms.The other two functions L and R are defined asfollowsL(wk...w1) ={wk...wk?n+2, if k ?
nwk...w1, otherwise(4)R(wk...w1) ={wn?1...w1, if k ?
nwk...w1, otherwise(5)The L and R function return the leftmost and right-most n ?
1 words from a string in a reverse orderrespectively.Following Chiang (2007), we describe our algo-rithms in a deductive system.
We firstly show thealgorithm3 that integrates the backward languagemodel into a BTG-style decoder (Xiong et al, 2006)in Figure 1.
The item [A, i, j; l|r] indicates that aBTG node A has been constructed spanning from ito j on the source side with the leftmost|rightmostn?
1 words l|r on the target side.
As mentioned be-fore, all target strings assessed by the defined func-tions (P , L, and R) are in an inverted order (de-noted by e).
We only display the backward lan-guage model probability for each item, ignoring allother scores such as phrase translation probabilities.The Eq.
(8) in Figure 1 shows how we calculatethe backward language model probability for the ax-iom which applies a BTG lexicon rule to translatea source phrase c into a target phrase e. The Eq.
(9) and (10) show how we update the backward lan-guage model probabilities for two inference ruleswhich combine two neighboring blocks in a straightand inverted order respectively.
The fundamentaltheories behind this update areP(e1e2) = P(e1)P(e2)P(R(e2)L(e1))P(R(e2))P(L(e1))(6)3It can also be easily adapted to integrate the forward n-gram language model.Function Valuee1 a1a2a3e2 b1b2b3R(e2) b2b1L(e1) a3a2P(R(e2)) P (b2)P (b1|b2)P(L(e1)) P (a3)P (a2|a3)P(e1) P (a3)P (a2|a3)P (a1|a3a2)P(e2) P (b3)P (b2|b3)P (b1|b3b2)P(R(e2)L(e1))P (b2)P (b1|b2)P (a3|b2b1)P (a2|b1a3)P(e1e2)P (b3)P (b2|b3)P (b1|b3b2)P (a3|b2b1)P (a2|b1a3)P (a1|a3a2)Table 1: Values of P , L, and R in a 3-gram example .P(e2e1) = P(e1)P(e2)P(R(e1)L(e2))P(R(e1))P(L(e2))(7)Whenever two strings e1 and e2 are concatenatedin a straight or inverted order, we can reuse theirP values (P(e1) and P(e2)) in terms of dynamicprogramming.
Only the probabilities of boundarywords (e.g., R(e2)L(e1) in Eq.
(6)) need to be re-calculated since they have complete n-grams afterthe concatenation.
Table 1 shows values of P , L,and R in a 3-gram example which helps to verifyEq.
(6).
These two equations guarantee that ouralgorithm can correctly compute the backward lan-guage model probability of a sentence stepwise in adynamic programming framework.4The theoretical time complexity of this algorithmis O(m3|T |4(n?1)) because in the update parts inEq.
(6) and (7) both the numerator and denomina-tor have up to 2(n?1) terminal symbols.
This is thesame as the time complexity of Chiang?s languagemodel integration (Chiang, 2007).Figure 2 shows the algorithm that integrates thebackward language model into a standard phrase-based SMT (Koehn et al, 2003).
V denotes a cover-age vector which records source words translated sofar.
The Eq.
(11) shows how we update the back-ward language model probability for a partial hy-pothesis when it is extended into a longer hypothesisby a target phrase translating an uncovered source4The start-of-sentence symbol ?s?
and end-of-sentence sym-bol ?/s?
can be easily added to update the final language modelprobability when a translation hypothesis covering the wholesource sentence is completed.1291A ?
c/e[A, i, j;L(e)|R(e)] : P(e)(8)A ?
[A1, A2] [A1, i, k;L(e1)|R(e1)] : P(e1) [A2, k + 1, j;L(e2)|R(e2)] : P(e2)[A, i, j;L(e1e2)|R(e1e2)] : P(e1)P(e2) P(R(e2)L(e1))P(R(e2))P(L(e1))(9)A ?
?A1, A2?
[A1, i, k;L(e1)|R(e1)] : P(e1) [A2, k + 1, j;L(e2)|R(e2)] : P(e2)[A, i, j;L(e2e1)|R(e2e1)] : P(e1)P(e2) P(R(e1)L(e2))P(R(e1))P(L(e2))(10)Figure 1: Integrating the backward language model into a BTG-style decoder.
[V;L(e1)] : P(e1) c/e2 : P(e2)[V ?
;L(e1e2)] : P(e1)P(e2) P(R(e2)L(e1))P(R(e2))P(L(e1))(11)Figure 2: Integrating the backward language model intoa standard phrase-based decoder.segment.
This extension on the target side is simi-lar to the monotone combination of Eq.
(9) in that anewly translated phrase is concatenated to an earlytranslated sequence.4 MI Trigger ModelIt is well-known that long-distance dependencies be-tween words are very important for statistical lan-guage modeling.
However, n-gram language modelscan only capture short-distance dependencies withinan n-word window.
In order to model long-distancedependencies, previous work such as (Rosenfeld etal., 1994) and (Zhou, 2004) exploit trigger pairs.
Atrigger pair is defined as an ordered 2-tuple (x, y)where word x occurs in the preceding context ofword y.
It can also be denoted in a more visual man-ner as x ?
y with x being the trigger and y thetriggered word5.We use pointwise mutual information (PMI)(Church and Hanks, 1990) to measure the strengthof the association between x and y, which is definedas followsPMI(x, y) = log( P (x, y)P (x)P (y)) (12)5In this paper, we require that word x and y occur in thesame sentence.Zhou (2004) proposes a new language model en-hanced with MI trigger pairs.
In his model, the prob-ability of a given sentence wm1 is approximated asP (wm1 ) ?
(m?i=1P (wi|wi?1i?n+1))?m?i=n+1i?n?k=1exp(PMI(wk, wi, i?
k ?
1))(13)There are two components in his model.
The firstcomponent is still the standard n-gram languagemodel.
The second one is the MI trigger modelwhich multiples all exponential PMI values for trig-ger pairs where the current word is the triggeredword and all preceding words outside the n-gramwindow of the current word are triggers.
Note thathis MI trigger model is distance-dependent sincetrigger pairs (wk, wi) are sensitive to their distancei?
k?
1 (zero distance for adjacent words).
There-fore the distance between word x and word y shouldbe taken into account when calculating their PMI.In this paper, for simplicity, we adopt a distance-independent MI trigger model as followsMI(wm1 ) =m?i=n+1i?n?k=1exp(PMI(wk, wi)) (14)We integrate the MI trigger model into the log-linear model of machine translation as an additionalknowledge source which complements the standardn-gram language model in capturing long-distancedependencies.
By MERT (Och, 2003), we are evenable to tune the weight of the MI trigger modelagainst the weight of the standard n-gram languagemodel while Zhou (2004) sets equal weights for bothmodels.12924.1 TrainingWe can use the maximum likelihood estimationmethod to calculate PMI for each trigger pair by tak-ing counts from training data.
Let C(x, y) be theco-occurrence count of the trigger pair (x, y) in thetraining data.
The joint probability of (x, y) is cal-culated asP (x, y) = C(x, y)?x,y C(x, y)(15)The marginal probabilities of x and y can be de-duced from the joint probability as followsP (x) =?yP (x, y) (16)P (y) =?xP (x, y) (17)Since the number of distinct trigger pairs isO(|T |2), the question is how to select valuable trig-ger pairs.
We select trigger pairs according to thefollowing three steps1.
The distance between x and y must not be lessthan n?
1.
Suppose we use a 5-gram languagemodel and y = wi , then x ?
{w1...wi?5}.2.
C(x, y) > c. In all our experiments we set c =10.3.
Finally, we only keep trigger pairs whose PMIvalue is larger than 0.
Trigger pairs whose PMIvalue is less than 0 often contain stop words,such as ?the?, ?a?.
These stop words have verylarge marginal probabilities due to their highfrequencies.4.2 DecodingThe MI trigger model of Eq.
(14) can be directlyintegrated into the decoder.
For the standard phrase-based decoder (Koehn et al, 2003), whenever a par-tial hypothesis is extended by a new target phrase,we can quickly retrieve the pre-computed PMI valuefor each trigger pair where the triggered word lo-cates in the newly translated target phrase and thetrigger is outside the n-word window of the trig-gered word.
It?s a little more complicated to in-tegrate the MI trigger model into the CKY-stylephrase-based decoder.
But we still can handle it bydynamic programming as followsMI(e1e2) = MI(e1)MI(e2)MI(e1 ?
e2) (18)where MI(e1 ?
e2) represents the PMI values inwhich a word in e1 triggers a word in e2.
It is definedas followsMI(e1 ?
e2) =?wi?e2?wk?e1i?k?nexp(PMI(wk, wi))(19)5 ExperimentsIn this section, we conduct large-scale experimentson NIST Chinese-to-English translation tasks toevaluate the effectiveness of the proposed backwardlanguage model and MI trigger model in SMT.
Ourexperiments focus on the following two issues:1.
How much improvements can we achieve byseparately integrating the backward languagemodel and the MI trigger model into ourphrase-based SMT system?2.
Can we obtain a further improvement if wejointly apply both models?5.1 System OverviewWithout loss of generality6, we evaluate our modelsin a phrase-based SMT system which adapts brack-eting transduction grammars to phrasal translation(Xiong et al, 2006).
The log-linear model of thissystem can be formulated asw(D) =MT (rl1..nl) ?MR(rm1..nm)?R?
PfL(e)?fL ?
exp(|e|)?w(20)where D denotes a derivation, rl1..nl are the BTGlexicon rules which translate source phrases to tar-get phrases, and rm1..nm are the merging rules whichcombine two neighboring blocks into a larger blockin a straight or inverted order.
The translationmodel MT consists of widely used phrase and lex-ical translation probabilities (Koehn et al, 2003).6We have discussed how to integrate the backward languagemodel and the MI trigger model into the standard phrase-basedSMT system (Koehn et al, 2003) in Section 3.2 and 4.2 respec-tively.1293The reordering model MR predicts the merging or-der (straight or inverted) by using discriminativecontextual features (Xiong et al, 2006).
PfL is thestandard forward n-gram language model.If we simultaneously integrate both the backwardlanguage model PbL and the MI trigger model MIinto the system, the new log-linear model will beformulated asw(D) =MT (rl1..nl) ?MR(rm1..nm)?R ?
PfL(e)?fL?
PbL(e)?bL ?MI(e)?MI ?
exp(|e|)?w(21)5.2 Experimental SetupOur training corpora7 consist of 96.9M Chinesewords and 109.5M English words in 3.8M sentencepairs.
We used all corpora to train our translationmodel and smaller corpora without the United Na-tions corpus to build a maximum entropy based re-ordering model (Xiong et al, 2006).To train our language models and MI triggermodel, we used the Xinhua section of the En-glish Gigaword corpus (306 million words).
Firstly,we built a forward 5-gram language model usingthe SRILM toolkit (Stolcke, 2002) with modifiedKneser-Ney smoothing.
Then we trained a back-ward 5-gram language model on the same monolin-gual corpus in the way described in Section 3.1.
Fi-nally, we trained our MI trigger model still on thiscorpus according to the method in Section 4.1.
Thetrained MI trigger model consists of 2.88M triggerpairs.We used the NIST MT03 evaluation test data asthe development set, and the NIST MT04, MT05 asthe test sets.
We adopted the case-insensitive BLEU-4 (Papineni et al, 2002) as the evaluation metric,which uses the shortest reference sentence length forthe brevity penalty.
Statistical significance in BLEUdifferences is tested by paired bootstrap re-sampling(Koehn, 2004).5.3 Experimental ResultsThe experimental results on the two NIST test setsare shown in Table 2.
When we combine the back-ward language model with the forward language7LDC2004E12, LDC2004T08, LDC2005T10,LDC2003E14, LDC2002E18, LDC2005T06, LDC2003E07and LDC2004T07.Model MT-04 MT-05Forward (Baseline) 35.67 34.41Forward+Backward 36.16+ 34.97+Forward+MI 36.00+ 34.85+Forward+Backward+MI 36.76+ 35.12+Table 2: BLEU-4 scores (%) on the two test sets for dif-ferent language models and their combinations.
+: betterthan the baseline (p < 0.01).model, we obtain 0.49 and 0.56 BLEU points overthe baseline on theMT-04 andMT-05 test set respec-tively.
Both improvements are statistically signifi-cant (p < 0.01).
The MI trigger model also achievesstatistically significant improvements of 0.33 and0.44 BLEU points over the baseline on the MT-04and MT-05 respectively.When we integrate both the backward languagemodel and the MI trigger model into our system,we obtain improvements of 1.09 and 0.71 BLEUpoints over the single forward language model onthe MT-04 and MT-05 respectively.
These improve-ments are larger than those achieved by using onlyone model (the backward language model or the MItrigger model).6 AnalysisIn this section, we will study more details of the twomodels by looking at the differences that they makeon translation hypotheses.
These differences willhelp us gain some insights into how the presentedmodels improve translation quality.Table 3 shows an example from our test set.
Theitalic words in the hypothesis generated by using thebackward language model (F+B) exactly match thereference.
However, the italic words in the base-line hypothesis fail to match the reference due tothe incorrect position of the word ?decree?
(??
).We calculate the forward/backward language modelscore (the logarithm of language model probability)for the italic words in both the baseline and F+B hy-pothesis according to the trained language models.The difference in the forward language model scoreis only 1.58, which may be offset by differences inother features in the log-linear translation model.
Onthe other hand, the difference in the backward lan-guage model score is 3.52.
This larger differencemay guarantee that the hypothesis generated by F+B1294Source ???????
,???????????????????
?Baseline Beijing Youth Daily reported thatBeijing Agricultural decree recentlyissued a series of control and super-visionF+B Beijing Youth Daily reported thatBeijing Bureau of Agriculture re-cently issued a series of preventionand control lawsReference Beijing Youth Daily reported thatBeijing Bureau of Agriculture re-cently issued a series of preventativeand monitoring ordinancesTable 3: Translation example from the MT-04 test set,comparing the baseline with the backward languagemodel.
F+B: forward+backward language model .is better enough to be selected as the best hypothe-sis by the decoder.
This suggests that the backwardlanguage model is able to provide useful and dis-criminative information which is complementary tothat given by the forward language model.In Table 4, we present another example to showhow the MI trigger model improves translation qual-ity.
The major difference in hypotheses of this ex-ample is the word choice between ?is?
and ?was?.The new system enhanced with the MI trigger model(F+M) selects the former while the baseline selectsthe latter.
The forward language model score for thebaseline hypothesis is -26.41, which is higher thanthe score of the F+M hypothesis -26.67.
This couldbe the reason why the baseline selects the word?was?
instead of ?is?.
As can be seen, there is an-other ?is?
in the preceding context of the word ?was?in the baseline hypothesis.
Unfortunately, this word?is?
is located just outside the scope of the preceding5-gram context of ?was?.
The forward 5-gram lan-guage model is hence not able to take it into accountwhen calculating the probability of ?was?.
However,this is not a problem for the MI trigger model.
Since?is?
and ?was?
rarely co-occur in the same sentence,the PMI value of the trigger pair (is, was)8 is -1.038Since we remove all trigger pairs whose PMI value is neg-ative, the PMI value of this pair (is, was) is set 0 in practice inthe decoder.Source ????????????
,??????????????
?Baseline Self-Defense Force ?s trip is remark-able , because it was not an isolatedincident .F+M Self-Defense Force ?s trip is remark-able , because it is not an isolated in-cident .Reference The Self-Defense Forces?
triparouses attention because it is not anisolated incident.Table 4: Translation example from the MT-04 test set,comparing the baseline with the MI trigger model.
Bothsystem outputs are not detokenized so that we can seehow language model scores are calculated.
The un-derlined words highlight the difference between the en-hanced models and the baseline.
F+M: forward languagemodel + MI trigger model.while the PMI value of the trigger pair (is, is) is ashigh as 0.32.
Therefore our MI trigger model selects?is?
rather than ?was?.9 This example illustrates thatthe MI trigger model is capable of selecting correctwords by using long-distance trigger pairs.7 ConclusionWe have presented two models to enhance the abil-ity of standard n-gram language models in captur-ing richer contexts and long-distance dependenciesthat go beyond the scope of forward n-gram win-dows.
The two models have been integrated intothe decoder and have shown to improve a state-of-the-art phrase-based SMT system.
The first modelis the backward language model which uses back-ward n-grams to predict the current word.
We in-troduced algorithms that directly integrate the back-ward language model into a CKY-style and a stan-dard phrase-based decoder respectively.
The sec-ond model is the MI trigger model that incorporateslong-distance trigger pairs into language modeling.Overall improvements are up to 1 BLEU point onthe NIST Chinese-to-English translation tasks withlarge-scale training data.
Further study of the two9The overall MI trigger model scores (the logarithm of Eq.
(14)) of the baseline hypothesis and the F+M hypothesis are2.09 and 2.25 respectively.1295models indicates that backward n-grams and long-distance triggers provide useful information to im-prove translation quality.In future work, we would like to integrate thebackward language model into a syntax-based sys-tem in a way that is similar to the proposed algo-rithm shown in Figure 1.
We are also interested inexploring more morphologically- or syntactically-informed triggers.
For example, a verb in the pasttense triggers another verb also in the past tenserather than the present tense.ReferencesThorsten Brants, Ashok C. Popat, Peng Xu, Franz J.Och, and Jeffrey Dean.
2007.
Large language mod-els in machine translation.
In Proceedings of the2007 Joint Conference on Empirical Methods in Nat-ural Language Processing and Computational Natu-ral Language Learning (EMNLP-CoNLL), pages 858?867, Prague, Czech Republic, June.
Association forComputational Linguistics.P.
F. Brown, S. A. Della Pietra, V. J. Della Pietra, andR.
L. Mercer.
1993.
The mathematics of statisticalmachine translation: Parameter estimation.
Computa-tional Linguistics, 19(2):263?311.Eugene Charniak, Kevin Knight, and Kenji Yamada.2003.
Syntax-based language models for statisticalmachine translation.
In Proceedings of MT Summit IX.Intl.
Assoc.
for Machine Translation.David Chiang.
2007.
Hierarchical phrase-based transla-tion.
Computational Linguistics, 33(2):201?228.Kenneth Ward Church and Patrick Hanks.
1990.
Wordassociation norms, mutual information, and lexicogra-phy.
Computational Linguistics, 16(1):22?29.Jacques Duchateau, Kris Demuynck, and PatrickWambacq.
2002.
Confidence scoring based on back-ward language models.
In Proceedings of ICASSP,pages 221?224, Orlando, FL, April.Ahmad Emami, Kishore Papineni, and Jeffrey Sorensen.2007.
Large-scale distributed language modeling.
InProceedings of ICASSP, pages 37?40, Honolulu, HI,April.Andrew Finch and Eiichiro Sumita.
2009.
Bidirectionalphrase-based statistical machine translation.
In Pro-ceedings of the 2009 Conference on Empirical Meth-ods in Natural Language Processing, pages 1124?1132, Singapore, August.
Association for Computa-tional Linguistics.Joshua T. Goodman.
2001.
A bit of progress in lan-guage modeling extended version.
Technical report,Microsoft Research.Philipp Koehn, Franz Joseph Och, and Daniel Marcu.2003.
Statistical phrase-based translation.
In Proceed-ings of the 2003 Human Language Technology Confer-ence of the North American Chapter of the Associationfor Computational Linguistics, pages 58?54, Edmon-ton, Canada, May-June.Philipp Koehn.
2004.
Statistical significance tests formachine translation evaluation.
In Proceedings ofEMNLP 2004, pages 388?395, Barcelona, Spain, July.Arne Mauser, Sas?a Hasan, and Hermann Ney.
2009.
Ex-tending statistical machine translation with discrimi-native and trigger-based lexicon models.
In Proceed-ings of the 2009 Conference on Empirical Methods inNatural Language Processing, pages 210?218, Singa-pore, August.
Association for Computational Linguis-tics.Franz Josef Och.
2003.
Minimum error rate training instatistical machine translation.
In Proceedings of the41st Annual Meeting of the Association for Compu-tational Linguistics, pages 160?167, Sapporo, Japan,July.Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu.
2002.
Bleu: a method for automatic eval-uation of machine translation.
In Proceedings of 40thAnnual Meeting of the Association for ComputationalLinguistics, pages 311?318, Philadelphia, Pennsylva-nia, USA, July.Matt Post and Daniel Gildea.
2008.
Parsers as languagemodels for statistical machine translation.
In Proceed-ings of AMTA.Sylvain Raybaud, Caroline Lavecchia, David Langlois,and Kamel Sma??li.
2009.
New confidence measuresfor statistical machine translation.
In Proceedings ofthe International Conference on Agents and ArtificialIntelligence, pages 61?68, Porto, Portugal, January.Roni Rosenfeld, Jaime Carbonell, and Alexander Rud-nicky.
1994.
Adaptive statistical language model-ing: A maximum entropy approach.
Technical report,Carnegie Mellon University.Libin Shen, Jinxi Xu, and Ralph Weischedel.
2008.
Anew string-to-dependency machine translation algo-rithm with a target dependency language model.
InProceedings of ACL-08: HLT, pages 577?585, Colum-bus, Ohio, June.
Association for Computational Lin-guistics.Andreas Stolcke.
2002.
Srilm?an extensible languagemodeling toolkit.
In Proceedings of the 7th Inter-national Conference on Spoken Language Processing,pages 901?904, Denver, Colorado, USA, September.David Talbot and Miles Osborne.
2007.
Randomisedlanguage modelling for statistical machine translation.In Proceedings of the 45th Annual Meeting of the Asso-ciation of Computational Linguistics, pages 512?519,1296Prague, Czech Republic, June.
Association for Com-putational Linguistics.Dekai Wu.
1996.
A polynomial-time algorithm for sta-tistical machine translation.
In Proceedings of the 34thAnnual Meeting of the Association for ComputationalLinguistics, pages 152?158, Santa Cruz, California,USA, June.Dekai Wu.
1997.
Stochastic inversion transductiongrammars and bilingual parsing of parallel corpora.Computational Linguistics, 23(3):377?403.Deyi Xiong, Qun Liu, and Shouxun Lin.
2006.
Maxi-mum entropy based phrase reordering model for sta-tistical machine translation.
In Proceedings of the 21stInternational Conference on Computational Linguis-tics and 44th Annual Meeting of the Association forComputational Linguistics, pages 521?528, Sydney,Australia, July.
Association for Computational Lin-guistics.Ying Zhang, Almut Silja Hildebrand, and Stephan Vogel.2006.
Distributed language modeling for n-best listre-ranking.
In Proceedings of the 2006 Conference onEmpirical Methods in Natural Language Processing,pages 216?223, Sydney, Australia, July.
Associationfor Computational Linguistics.GuoDong Zhou.
2004.
Modeling of long distance con-text dependency.
In Proceedings of Coling, pages 92?98, Geneva, Switzerland, Aug 23?Aug 27.
COLING.1297
