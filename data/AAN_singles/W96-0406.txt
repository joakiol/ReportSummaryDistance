?
PostGraphe: a system for the generationof statistical graphics and textMassimo Fasciano <fasc iano@IRO.UMontrea l .CA>Guy Lapalme <lapa lme,~IRO.UMontrea l .CA>D~partement d' informatique t de recherche op~rationnelleUniversit~ de Montrfial, CP 6128, Succ Centre-Vi l leMontreal QuEbec Canada, H3C 3J7April 21, 1996AbstractGraphics and text have to be well integrated inorder to achieve their full potential.
A pictureshows but a text describes.
In a statistical re-port, graphics show the data that is analyzed inthe text.
This paper describes a system, calledPostGraphe, which generates a report integratinggraphics and text from a single set of writer's in-tentions.
The system is given the data in tabularform as might be found in a spreadsheet; also in-put is a declaration of the types of values in thecolumns of the table.
The user chooses the inten-tions to be conveyed in the graphics (e.g.
com-pare two variables, show the evolution of a set ofvariables ...) and the system generates a reportin IgTEX with the appropriate PostScript graphicfiles.1 Introduct ionGraphics and text are very different media.
For-tunately, when their integration is successful, theycomplement each other very well: a picture showswhereas a text describes.
In this research, weare studying the interaction between the text ofa statistical report and its figures.
Reports arean organized synthesis of data that span a wholearray of forms going from tables of numbers to atext summarizing the findings.
Statistical reportsare particularly interesting because the reader caneasily be overwhelmed by the raw data.
Withoutan appropriate preliminary statistical analysis tomake the important points stand out and, with-out an effi,2ent organization and presentation, thereader might be lost.
In this paper, we presentthe important factors in the generation processas well as its important steps.
We then give anoverview of a statistical report generator calledPostGraphe.2 Impor tant  factors in the gen-erat ion processA number of factors have to be considered in or-der to produce a statistical report containing textand graphics.
These factors include the writer'sgoals, the types and values of the variables to bepresented, and the relations between these vari-ables.The writer's goals have a major role in the gen-eration process.
As we can see in figures 1 and '2.the same data can be expressed in very differentways according to the message the writer wishesto transmit.
The example presents the same setof data - -  profits during the years 1971-1976 - -according to two different perspectives which re-flect the writer's goals or intentions.
In figure 1,the goal is to present the evolution of the prof-its during the relevant time period.
In figure 2,the message is totally different, and correspondsto a different goal: to compare the profits for the6 years of the data set.
Because of its tempo-51ral nature, the usual way of presenting this datais the message of evolution.
The difference canbe seen in the organization of the graphs and in profitsthe wording of the text.
In figure 1, the evolu-tion is emphasized by using the horizontal axis 18for the years \[20, 3\].
This is the accepted way ofpresenting temporal data.
The years are sortedin ascending order, also to give the impression ofevolution.
The associated text describes the over- 12all evolution and points out an interesting irreg-ularity.
On the other hand, the writer's intentionfor figure 2 is totally different.
In order to showa comparison, a few structural changes have to 6be made.
First of all, the years are presented onthe vertical axis, thus eliminating the impressionof evolution \[20\].
This change is important othe perception of the graph because it makes its 0message clearer by eliminating a false inference.Second, the years are treated as a nominal vari-able instead of an ordinal one, and thus sortedaccording to the profit values.
This reorderinghas two positive effects: it further destroys theimpression of evolution by making the years non-sequential and it allows a better comparison ofthe profits \[9\].
The text is also different fromthe one in figure 1: instead of describing how theprofits evolved, it merely points out the best andannde the worst years for profits.
This difference in per-spective is important for a writer, especially when 1974trying to convey more subjective messages \[10\].1973 If the communicative goals aren't well identi-fied, it is very easy to convey the wrong impres- 1972sion to the reader.
This problem is often compli-cated by the fact that a single graph or text can 1976convey many messages at once, some more directthan others.
For example, figures 3 and 4 show 197~2 graphs that share a subset of intentions.
Themain message is one of evolution in figure 3 graph tgv5and correlation in figure 4, but both graphs also0 transmit, with lower efficiency, the main messageof the other graph.
Correlation is perceptible inthe line graph because the two sets of data can befollowed together and evolution can be perceivedin the point graph because significant year clus-ters are marked by different shapes.
Thus, de-termining which types of graphs or text best sat-isfy single goals is not sufficient; one also has toit97: 1972 I973 1974 1975 1976anneeGlobally, the profits have gone down despite astrong rise from 1974 to 1975.Figure 1: single communicative goal: evolution6 12\]\]18profitsThe profits were at their highest in 1975 and1971.
They were at their lowest in 1974, withabout half their 1975 value.Figure 2: single communicative goal: comparison52take into account the cumulative influence of thesecondary messages conveyed by all parts of the profitsreport.
10010080604020//profitsd6penses1984 1986 1988 1990 1992 1994ann6eFigure 3: combined communicative goals: evolu-tion and correlationAs might be expected, the types of variablesgive a lot of information about the structure ofthe elements of the report \[2, 12, 13\].
For ex-ample, although a continuous variable is betterrepresented by a line graph, the nature of a dis-crete variable will become more apparent usinga column graph.
Graphics-only systems can getaway with a simple type-system as presented in\[12, 13\].
This type system classifies the visual andorganizational properties of data variables usingsuch categories as nominal, ordinal, and quanti-tative.
A more complex classification is helpful ingeneral as it allows the classification of other use-ful properties, e.g.
temporal, but in the case oftext generation, it becomes necessary in order toexpress the units of the variables.
For example,knowing that "May" and "July" are months al-lows a generator to produce temporal expressionssuch as "two months later" \[11\].To further refine the selection process, we haveto take into account not only the types, but alsothe specific values of the data samples.
The hum-908070605020 30 40 50depensesFigure 4: combined communicative goals: corre-lation and evolution199 I- 1994.1989-19901986-19881985bet of values sometimes has a lot of influence onthe choice of an expression schema.
For example,a discrete variable with 200 values will often betreated as continuous, thus overriding the influ-ence of its natural type.
In other cases, the rangeof values has a strong influence.
Indeed, as can beseen in figure 5, a seemingly good choice can beinvalidated when the range of values is extreme.These factors influence the structure and con-tents of a statistical report and have to be lookedat simultaneously in order to be effective.
Manysystems based on APT \[12, 13\] use types to de-termine structure, but specific values are oftenoverlooked and the simultaneous use of types andgoals is rare.
To further illustrate the importanceof simultaneous application of these factors, let'slook at figure 5 again.
In this graph the smallvalues are not readable because of the scale.
Ingeneral, this is considered a problem av.d can becorrected by using a different scale (logarithmicor split).
However, if the intention of the writeris to illustrate the enormous difference betweencompany D and the others, the graph is very ef-ficient as it is.Our research extends the work of Bertin \[2\] and53compagnieEDCBA0 20 40 60Figure 5: Extreme ranges cause low readabilityMacKinlay \[12, 13\] on the types and organizationof variables, the work of Zelazny on messages andgoals \[20\] and integrates it with other theories onthe use of tables \[19, 9\] and graphs \[5, 6, 8, 16,17, 18\]3 A report generator: the Post-Graphe systemOur prototype, the PostGraphe system is a com-promise between keeping the implementation sim-ple and obtaining satisfactory results.
After ex-amining a number of reports, we noticed that textand graphics were often used together to transmitthe same message.
Since one of our goals was thestudy of the integration of text and graphics, wedecided to always generate a text/graphics pairfor every message.Unfortunately, we could not simplify the real-ization level.
We would have prefered to use areadily available graphical tool for realization andspend more time on higher-level aspects uch asthe medium selection.
A few attempts were madeusing tools such as X-Lisp-Stat for point and linegraphs and LATEX for tables.
Unfortunately, toomany high-level choices depend on simple low-level details such as the number of available col-ors or the positioning of textual abels in a graph.By designing our own graphical realizer in Prolog,the same language as the rest of the system, wewere able to precisely integrate it in the decisionprocess, thus allowing more accurate heuristicsand a backtracking approach for more complexcases ..ks for the text realization tool, we chose toadapt a systemic-based text generator calledPr~Texte \[11\].
This system was well-suited toour needs for two reasons: first, it was developedin Prolog, making it easy to integrate into Post-Graphe.
Second, it specializes in the generationof temporal expressions.
Since evolution is one ofprofits the most frequent goals in a statistical report, thetemporal knowledge built into Pr~Texte provedvery useful.We will now describe the major steps followedby the system in the generation of a report.The input of PostGraphe, consists of 3 specialannotations followed by the raw data.
These an-notations indicate the types of the variables, howto determine the relational keys for the data anda series of predicates describing the writer's in-tentions.
The justification for these annotationsand their Prolog syntax are presented in detail in\[10\].
See figure 6 for an example of their use.3.1 TypesThe type system's role is to associate to everyvariable of the input a set of properties and a unit.The properties are organised as a multiple inheri-tance graph divided into a number of sub-graphs,each corresponding to a specific feature \[10\].
Themost important sub-graphs describe the followingfeatures: organization (nominal, ordinal, quan-t i tat ive, .
.
. )
\[2, 12, 13\], domain (enumeration,range, .
.
.
), temporal (month, year , .
.
.
), format(integer, real, ... ), mesurements (distance, dura-tion, .
.
. )
,  and specific objects (countries, .
.
. )
.The properties have a variable number of param-eters which can be used to further specify theirfunction.
For example, for an enumerated type(domain sub-graph), a single parameter specifies54the list of values for the enumeration.In the input, the main type (or class) of eachvariable is specified; as  well as a list of auxiliarytypes.
The auxiliary properties override the onesthat are inherited from the class, thus allowingthe tailoring of built-in types in the input.
Also,a number of automatic type definitions are addedaccording to the nature of the data (integers, la-bels, .
.
. )
.Units are organized in a parallel inheritancegraph.
The inheritance mecanism is much sim-pler than the one used for types.
A unit can beassociated with every type (e.g.
percentage%).
If a unit cannot be found using single inher-itance, the name of the type is used as a unit.This process is described in more detail in \[10\].3.2 Re la t iona l  keysRelational keys are similar to the notion of thesame name in relational databases \[7\] and helpdetermine which variables depend on which oth-ers.
They are also used for ordering variables insome graphics so that the more important ones(usually the keys) are given the more visible po-sitions.One of the design goals of 9ostGraphe was tobe able to function as a front-end to a spread-sheet.
It was thus important o keep the data asclose as possible to a format compatible with thattype of software.
Although a representation atthe level of an entity relationship diagram wouldhave been quite useful, especially for long reportsand global relationships between sets of data, wechose to limit the input to a table-like structurewhich is easily obtainable from a spreadsheet.Consequently, PostGraphe must be able to au-tomatically compute the relational keys it needsfrom the data.Sometimes, automatic alculation of keys cangive strange results which do not fit with the se-mantics of the variables.
For example, a variablesuch as profits can wind up as a key if its val-ues are all different but it is rarely desirable toexpress a set of variables uch as years and com-pany names as a function of profits.
It is usuallythe other way around.To solve this problem, 2 optional informationsare specified in the input: a list of variables thatcan be used as keys and a list of variables thatcannot be used as keys.
1his method is easy toimplement in a spreadsheet, and some control ismaintained without having to abandon automaticcalculation of keys (useful for large partially un-known data sets).3.3 Wr i te r ' s  in tent ions  and  p lann ingThe writers' intentions describe what to say andup to a certain point, how to say it.
Intentionsare constraints on the expressivity of the chosentext and graphics.
Postfiraphe tries to find thesmallest set of schemas that covers the writer'sintentions.The following basic intentions are covered inour model: the presentation of a variable, thecomparison of variables or sets of variables, theevolution of a variable along another one, the cor-relation of variables and the distribution of a vari-able over another one.
Some of these intentionsare further divided into more specific subtypes.The study of intentions is a major topic of ourresearch.
More details about the organization ofour goal system can be found in \[10\].PostGraphe uses the same planning mechanismto generate text and graphics.
The planner usesthe types and values of the data as well as therelational keys but it is mainly goal-driven.
Itbuilds on the ideas of Mackinlay \[12, 13\] but ex-tends them in important ways.MacKinlay's algorithm, as used in APT, takesas input a set of typed variables and determinesthe most efficient graphical encoding (position,length, color, .
.
. )
for each of them.
There aremany ways of expressing each variable and thesystem tries to find a way of expressing them allgraphically in the same figure, if possible, or in aset of related figures.
APT works by allocating thebest possible graphical encoding to each variableand then checking if the result is feasible.
If it isnot, it backtracks on the last allocation and triesthe next best encoding for it.
The feasability of aset of choices depends on the output medium (2Dvs 3D, color vs greyscale).
Since the variables are55allocated sequentially, their ordering is importantand determines which variables will get the bestencodings in problem situations.
The algorithmdoesn't ry to maximize the overall efficiency ofa result but assumes that important variables arelisted first and gives them the best encodings.This method has a few shortcomings: it isbased on a very limited set of types (quantitative,ordinal, nominal), it works on individual variablesinstead of global relations and it is not easily ap-plicable to text.
Working with individual vari-ables is an interesting approach to the problem ofgraphics generation as it allows the system to rea-son on the low level components of graphics andit makes it more efficient.
On the other hand.it creates 2 major problems: it is ambiguous atthe realization phase and it ignores inter-variablephenomena.
The ambiguity stems from the factthat a number of structurally different graphs canexpress the same variables using the same encod-ings.
For example, line, bar, column and pointgraphs can all be used to present 2 variables us-ing positional encoding.
However, there are im-portant differences between these 4 graphs.
Thelines in a line graph, the rectangles and their ori-entation in bar and column graphs all play an im-portant role in the perception of the data.
Thesedifferences play a major role in the expressionof inter-variable phenomena such as comparisonand correlation.
For example, correlation is betterpreceived on a point graph than on a line graph.PostGraphe does not use a list of variables as itsmain input.
Instead, it uses a set of inter-variableor intra-variable goals.
The result of our planningalgorithm is a schema for each group of compat-ible goals.
These schemas are used for text aswell as graphics.
No ordering of goals or vari-ables is assumed because all choices axe weightedand a global quality function allow the system tomaximize the overall efficiency of each graph.
Bydefault, the system assumes that all user goals areequivalent but the user can choose to change theirrelative weights in the input to assure that someof them are better expressed by the system.
Thismaximization complicates the exploration of thesolutions as it becomes impossible to return thefirst feasible solution.
Theoretically, one shouldlook at all possible groups of goals to see if theycan coexist in the same graph and evaluate howefficient each group is both globally and in re-gards to constraints placed on individual goals bythe user.
This is obviously impossible as it leadsto massively exponential behaviour.
Heuristicsare used by PostGraphe to trim the number ofsolutions down to a usable level.The user has the option of manually limiting?
the scope of the grouping process by building setsof related goals.
The system will respect theseboundaries and never try to group goals from dif-ferent sets.
The normal algorithm is applied togoals inside each set.
If only a single set if goals isspecified, the system does all the work of group-ing and ordering the information.
This manualpartitioning of goals is useful to organize goalsaccording to themes (e.g.
a set of goals to presentthe data, a set of goals to illustrate a trend, ... ).Inside a set of goals, the planning process isdivided in 4 steps: we first find the intentionsthat are "compatible" so that each schema takesinto account as many intentions as possible whilekeeping each one "readable".
The compatibilityof intentions is determined using simple heuris-tics.Then we check if each group is feasible and de-termine the best schema to express it.
This stepis based on a lookup table, much like MacKinlay'salgorithm \[12, 13\] which uses an association be-tween the type of a variable and the most efficientgraphical methods to express it.
Our table is goal-oriented instead of type-oriented: it associateseach possible user goal with the schemas that canexpress it.
The table entries are weighted, andthe result of this phase is a list of candidatessorted from the most to the least efficient for thecurrent goals.The next step is the low-level generation ofgraphic primitives and text.
It can be determinedat this stage that a figure cannot be generatedbecause of physical reasons: it is too big to fit,not enough grey levels are available, ...
This lowlevel work is quite involved because it has to takeinto account he 2-D constraints and the limita-tions of the media.
For this we had to developa Postscript generation system in Prolog in or-56der to determine the exact position of each ele-ment (character, line, axis, etc...) of a generatedgraph.
If a candidate is rejected, the next one onthe sorted list is tried.
The surface text genera-tion is handled by a modified version of Pr4Texte\[11\].Finally, a post-optimization phase eliminatesredundancies which can occur because the heuris-tics sometimes miss a compatible grouping of in-tentions.An important aspect of PostGraphe is that ituses no high-level reasoning on intentions.
In-stead, all of its knowledge is encoded in the linksand weights of the table, which was first createdusing a set of graphical rules and conventions.This approach is more similar to neural nets thanMacKinlay's graphical anguage.
The advantageof such an approach is that the table could be au-tomatically modified by the system in response touser satisfaction or dissatisfaction with a result.The obvious problem, as with neural nets, is thatthe system's knowledge is not easily expressibleas a set of human-readable rules.3.4 An  automat ica l ly  generated  repor tIn this section, we present a simple example of in-put and output from the PostGraphe system.
TheProlog input can be seen in figure 6; lines startingwith 7, are comments.
The output was generatedby the system, but the information was manu-ally re-ordered and formatted in order to bettersatisfy the space requirements of this article.
Inparticular, the graphs are presented at roughly60% of their actual size and the structure of thereport was flattened by removing section titles.The captions of the figures were translated fromthe French output of PostGraphe, but the internallabels and the text produced by Pr4Texte (fig-ure 11) were left in French.
The captions showthe name of the ?,~bema and the intentions used togenerate ach figure, with a quality factor (0-100)for each intention.data(~ names of the variables\[~nnee,compagnie,profits,depenses\],types of the variables(/ with aux.
properties)annee,etiquette,dollar/\[pluriel(profit)\],dollar/\[pluriel(depense)\]\],variables that can be partof a relational key\[a/inee,compa~nie\],variables that can't be partof a relational key\[profits,depenses\],writer's intentions\[~ section 1\[presentation(an/lee),presentation(compa~nie),presentation(profits),presentation(depenses)\],section 2\[comparaison(\[reduce(moyen/le,profits)\],\[compagnie\])>90,comparaison(\[reduce(moyenne,profits),reduce(moyenne,depenses)\],\[compa~nie\]),correlation(profits,depenses),repartition(reduce(moyen/le,depenses),\[compagnie\]),proportion(\[compagnie\]),evolution(reduce(moyenne,profits),annee)*2\]\],the data\[\[1987,'A',30,80\],\[1988,'A',35,90\],\[1989,'A',40,ii0\],\[1990,'A',35,Ii0\],\[1991,'A',30,I00\],\[1991,'E',40,36\],\[1992,'E',120,I05\]\]).Figure 6: The input as a Prolog term57ornpagnieDE1987 1988 1989 1990 1991 1992depenses depenses depenses depenses depenses depenses?
80 90 110 I10 I00 120\[250 275 250 280 290 300~97 120 1.40 170 190 230i120 120 125 160 170 17027 60 70 90 36 1051987 1988 1989 1990 1991 1992profits profits profits profits profits profits30 35 40 35 30 40160 165 140 155 160 16050 55 60 95 100 11060 65 60 75 80 7010 40 62 85 40 120Figure 7: \[Schema: tableau1\], presentation of the variables: years (100), companies (100).
spending(100) and profits (100).?
moyeIw~ profits\ [ \ ]  rnoyelme dcpcnscs3002011 "---'\]A B C D E?
(impagmcFigure 8: \[Schema: colonnes3\], comparison ofthe profit average and the spending average ofthe companies (80).compagnieL__E \]JJ\]I ,30 60 90 120 150 180moycnne profitsFigure 9: \[Schema: barresl\], comparison of theprofits average between companies (100).moyenne profits1009080701987 1988 1989 1990 199lmII~2~.nn?cFigure 10: \[Schema: colonnesl\], evolution of theprofit average along the years (94).De 1987 /~ 1990 la moyenne des profits a aug-ment~ de 625 & 895.Pendant 1 ann6e elle a diminu6 de 75.Jusqu'en 1992 elle a augment6 de 825 & 1005.Figure 11: \[Schema: evolution1\], evolution of ~heprofit average along the years (99).58moyenne depenses (% par ctasse) j250-300 ~20}150-200 (20) 'Figure 12: \[Schema: tarte3\], proportion of com-panies (100) in the distribution of the spendingaverage of the companies (90).depenses300200100?
l i b0 60 120 180profitsFigure 13: \[Schema: points1\], correlation be-tween profits and spending (100).4 ConclusionThe focus of our research is the integrated gen-eration of text and graphics in statistical reports.In order to achieve our objectives, we have con-sidered the writer's goals, the types and values ofthe variables to be presented, and the relationsbetween these variables..-ks we have shown in this paper, all of these fac-tors must be taken into account simultaneouslyin order to produce an efficient report.
Someresearch has focused on these problems sepa-rately, such as MacKinlay's APT system \[12, 13\]which focuses mainly on type-based graph gen-eration, Zelazny's work on graphs and messages\[20\], and Casner's tudy of tasks/goals \[4\].
Gooddesign rules also have to be considered whenchoosing and generating tables \[19, 9\] and graphs\[6, 8, 16, 17, 18, 5\], as these have a direct influenceon the reader's perception of a report.
Thus.
onehas to consider the writer's goals, the data itselfand the reader's interpretation.Other related works include Mittal et als ex-tension \[14\] to the SAGE system \[15\] which usestext to explain the structure of graphs and charts- unlike o,,r system, which uses it to present andexplain the data itself-  and wIP \[1\], a well-knownmultimedia generator which has the same goals asour system, but works on a different ype of data(structured representations vs tables of numbers).wIP is more concerned with content and media se-lection according to the user's goals, whereas withPostGraphe, the content is almost directly deter-mined by the writer's intentions, but the structureis totally flexible, as the system must build its in-ternal representations and output from raw data.AcknowledgementsThis work was made possible in part through agrant by the Canadian Natural Sciences and Engi-neering Research Council (NSERC).
Scholarshipswere also given by NSERC and the Fonds pourla formation de chercheurs et l'alde ?
la recherche(FCAR).
We wish to thank Michel Gagnon for hishelp in adapting Pr~texte.
We also wish to thankthe reviewers for their very helpful comments.References\[1\] E. Andr6, W. Finkler, W. Graf, T. Rist,A.
Schauder, and W. Wahlster.
WIP: theautomatic synthesis of multimodal presenta-tions.
In M. Maybury, editor, Intelligent59Multimedia Interfaces.
AIII Press, Cam- \[12\]bridge, MA, 1993.\[2\] Jacques Bertin.'
Semiology of Graphics.
TheUniversity of Wisconsin Press, 1983.
Trans-lated by William J. Berg.
\[13\]\[3\] Jacques Bojin and Marcel Dunand.
Docu-ments et exposds efficaces: messages.structure du raisonnement, illustrationsgraphiques.
\]~ditions d'Organisation, Paris.
\[14\]1982.\[4\] S. M. Casner.
A Task-analytic Approachto the Automated Design of Graphic Pre-sentations.
ACM Transactions on Graphics.10(2):111-151, April 1991.\[5\] W. S. Cleveland and R. McGiI1.
Graph-ical Perception: Theory, Experimentation.
\[15\]and Application to the Developments ofGraphical Methods.
Journal of the Ameri-can Statistical Association, 79(387):531-554,September 1984.\[6\] H. M. Culbertson and R. D. Powers.
Astudy of graph comprehension difficulties.
\[16\]AV Comm.
Review, 2(7):97-100, 1959..L\[7\] C. J.
Date.
An Introductzon to Database Sys-tems, volume I. Addison-Wesley, 4 edition, \[17\]1988.\[8\] G. DeSanctis and S. L. Jarvenpaa.
An inves-tigation of the "tables versus graphs" contro- \[18\]versy in a learning environment.
In L. Gal-legos, R. Welke, and J. Wetherbe, editors,Proceedings of the 6 th international confer- \[19\]ence on information systems, pages 134-144,December 1985.\[9\] A.S.C.
Ehrenberg.
Rudiments of Numer-acy.
Journal of the Royal Statistical Society, \[20\]140(Part 3):277-297, 1977.\[10\] Massimo Fasciano.
Gdndration int~gr~e deteztes et de graphiques tatistiques.
PhD the-sis, Universitd e Montrdal, 1996.\[11\] M. Gagnon and G. Lapalme.
From concep-tual time to linguistic time.
ComputationalLinguistics, 22(1):91-127, January 1996.Jock D. Mackinlay.
Automatic Design ofGraphical Presentations.
PhD thesis, Com-puter Science Department, Stanford Univer-sity, 1986.Jock D. Mackinlay.
Automating the Designof Graphical Presentations of Relational In-formation.
A CM Transactions on Graphics,5(2):110-141, April 1986.V.
Mittal, S. Roth, J. Moore.
J. Mattis,and G. Carenini.
Generating ExplanatoryCaptions for Information Graphics.
In Pro-ceedings of the 14 th International Joint con-ference on Artificial Intelligence (IJCAI-95), volume 2, pages 1276-1283.
Montreal.Canada~ August 1995.Steven F. Roth, Joe Mattis, and Xavier Mes-nard.
Graphics and natural language ascomponents of automatic explanation.
In,Joseph W. Sullivan and Sherman W. Tyler.editors, Intelligent User Interfaces, FrontierSeries, chapter 10.
ACM Press, 1991.Howard.
Schutz.
An Evaluation of Formatsfor Graphic Trend Displays - -  ExperimentII.
Human Factors, 3:99-107, 1961.Edward R. Tuffe.
TheQuantitative Information.1983.Visual Display ofGraphics Press,Edward R. Tufte.
Envisioning Information?Graphics Press, 1990.P.
Wright.
The comprehension f tabulatedinformation: some similarities between read-ing prose and reading tables.
NSPI Journal,XIX~ 8:25-29, 1980.Gene Zelazny.
Dites-le avec des graphiques.Intert~ditions, 1989.60
