MODULARITY~ PARALLEL ISM~ AND L ICENSINGIN A PRINCIPLE 'BASED PARSER FOR GERMANSEBASTIAN M1LLIESSaarbriieken UniversityDept.
of Computational LinguisticsD-6600 SaarbriickenGermanye-mail: millies@coli.uni-sb.deAbstractThis paper presents a direct implementationof Government-Binding theory in a parser forGerman, which faithfully models the modularstructure of the theory.
The modular designyields a flexible environment, in which it ispossible to define and test various versions ofprinciples and parameters.
The several modulesof linguistic theory and the parser proper areinterleaved in parallel fashion for earlyelimination of ungrammatical structures.Efficient processing of global constraints ismade possible by the concept of licensing, andthe use of tree indexing techniques.1 In t roduct ionGovernment-Binding theory 1(henceforth"GB") seeks to describe human knowledge oflanguage by positing a small number of highlygeneral principles, which interact o producehighly specific effects.
Most of these principlesare regarded as universal principles.
Specificconstruction types in different human languagesresult from applying language-particularversions of the universal principles, derivedfrom them by parametrizafion.
GB tries to avoidlanguage-particular and construction specificrules.
Only recently has the idea of "principle-By that term 1 will mean not only the particularversion of the theory set forth in \[ChomSl\], butrather the entire tamily of theories of the principles-and-parameters ype inspired by Chomsky's work.based" parsers, which derive structures bydeduction from an explicit representation f theprinciples, come into the focus of attention.Importantly, however, GB does not specify anyparticular relation between the principles and aparser which is supposed to use them.
As aconsequence, xtant GB-parsers reflect theinternal organization of GB-theory to varyingdegrees.
This paper reports on an implemen~tation of a GB-parser for German, which faith-fully mirrors the modular structure of (mucb of)GB-theory in the way it represents linguisticknowledge.
In discussing the parser, l willpresuppose a basic familiarity with GB-theory.
2According to Mark Johnson (cf.
\[John88,John89\]), the most direct relation between aparser and linguistic theory can be observed in a"parsing-as-deduction" approach.
Johnson'sproject is to forntalize linguistics in somesuitable subset of first-order logic, arid use thisformalization as inpnt for an antomatic theoremprover, such as Prolog, without any interveningrecoding.
This proposal, however, suffers fromsome well-known difficulties, such asundecidability, left-recursion (in Prolog), and atendency to produce generate-and-test algo-2 The reader is referred to \[Se185\] for a shortintroduction.
For a detailed i~ussion, see one of thestandard texu% e.g.
\[LIJ881.AcrEs Dr. COL1NG-92.
NANTF~S.
23-28 AOm' 1992 I 6 3 PROC.
OF COLING-92.
N^~rES, Auu.
23-28, 1992rithms (with modules such as X'-theory andmove-c~ as generators, and other parts ofgrammar as filters).
Furthermore, there is noplace in the model for those aspects of languageprocessing which do not have to do withknowledge of grammar, but rather withprocedural considerations (resolution ofambiguities in PP-attachment and the like).Johnson proposes to cope with the difficultyabout indeterminacy by using the f reeze-construct (known, e.g.
from Prolog-II) toachieve pseudo-parallel execution of generatorsand tests.
The freeze control structure suspendsthe execution of goals depending on theinstantiation of specified variables.
This relaxessome of the procedural constraints on theformulation of logic programs, and brings outthe logical structure of a program moreforcefully.
The current approach is similar toJohnson's in that it also uses a formalization oflinguistic principles in Horn logic, and executesthis formalization in a parallel fashion usingfreeze.
It differs from that approach, in that theprinciples do not themselves constitute theparser, but rather work in tandem with aspecialized module, which implements theprocedural aspects of parsing.
Indeterminacy inthe linguistic component is further educed byhaving lexical information constrain X'-theoryfrom being fully productive, and using anextension to the concept of "licensing"(\[Abn86\]) to guide the introduction of emptycategories.
The total effect is to allow theformalization of the theory to be maximallydeclarative, and at the same time to ensuredecidability of the parsing problem for allpossible input.
Another key idea is to use cleverindexing techniques on trees for the efficientenforcement of conditions on potentiallyarbitrarily large parts of the parse-tree (e.g.,subjacency, or the ECP).2 Implementat ion  of a GB-ParserFigure 1 is a (slightly simplified) schema ofthe system architecture.
The entire system hasbeen programmed on an IBM RT in Quintus-Prolog 2.4 under Unix/AIX.
As Quintus doesnot have a freeze predicate, a recta-interpreterhas been implemented to provide one.
Theinterpreter is fully transparent to the grammardesigner; in particular, it handles the cut, andknows about Quintus' module concept.
Theschema makes the modular organization of thesystem very clear.This kind of modularity makes for a greatdeal of flexibility.
The aim of this work is notjust to "hardwire" some particular version ofGB into a parser, but rather to provide anenvironment, where different versions of GB-theoretical grammars can be tested andevaluated.
In the program, this aim has beenapproached closely, as the definitions of theprinciples are not spread out over severalcomponents of the grammar, but are textuallylocalized, and procedurally independent fromeach other and the parsing module.
As aconsequence, they can be updated or playedaround with quite easily.
The environment alsoprovides tools for facil itating grammardevelopment, such as functions for installingnew sets of parameters, a customizable prettyprinter, or a small tracing facility.
We will nowin turn discuss some of the components shownin Figure 1.AcrEs DE COLING-92, NANTES, 23-28 ^OI)T 1992 l 6 4 PROC.
OF COLING-92.
NANTES, AUG. 23-28, 19922.1 The Parsing ModuleThe parsing module is independent from therest of the system, and can be exchanged for adifferent module, implementing a differentparsing strategy.
In this way, it is possible tomodel performance aspects of human sentenceprocessing without having to change thedeclarative representation f lingnistie know-ledge as such.
The language- and grammar?independence of the parsing module ismanifested by its making use of very generalstructure-building instructions, which do notmention grammatical notions at all, except on avery high level and in an extremely unspecificmanner.
All the details of the representation flinguistic knowledge are hidden from theparsing module.
Typical instructions are:read the next input wordinsert a partial tree into the structure that isbeing builthave a maxim~d projection madeinsert an empty categorycheck local/global grammatical constraintsI .
.
.
.
.
i I~ inL~Uan I ~ gillputlunKt~ge- ~1~ grB~m.?.
I= ,  ........aT,,o, ,2Z',~.,~nd outerIlnsulltic lnodulo|Interpreter for prolog with p~ud~paraJlel m~ecutionFigure 1The parser directly reconstructs S-structure.There is no need to view D-structure as a levelof representation distinct from S-structure,because D-structural representations aredetermined on the level of S-structure by theco-indexing of moved constituents with theirtraces.
At present, the parser uses a simplehead-driven method of structure building: Itproceeds from left to right through the inputstring, projects every word to the phrasal level,and pushes all projections into a queue until itfinds the head of the substructure that is beinganalyzed, it then inserts this substructure intothe analysis tree and tries to empty the queue.E.g., while parsing the sentence daft HansMaria liebt (literally, "that John Mary loves"),the parser will first project daft to CP, pushtwo liPs onto the queue, project liebt to 1P, andthen empty the queue.
The parser can handlehead-complement structures of German.
Itcannot handle adjunction, which is a seriousrestriction, to be lifted in later versions of theparser.
The types of phenomena currentlycovered are: Main and subordinate clauses (bothV2 and verb-final) nested to arbitrary depth,wh-movement (both direct and indirectquestions), inf init ives (ECM, Raising,Control), passive, prenominal genitives andadjectival modification, and agreement betweendeterminers, adjectives, nouns, and verbs.2 .2 i , inguist ic KnowledgeThe following modules of GB-theory havebeen implenmnted: X'-theory, move-o~, casetheory, 0-theory, the projection principle,bounding theory, government  theory(specifically, a notion of "barrier" (cf.\[Chom86\]) is included in the definition of theECP), spec-head-agreement, and spec-head-licensing.
X'-theory is constrained to projectACTE, S DE COLING-92, NANTES, 23-28 AOb'T 1992 1 6 5 PROC.
OF COLING-92, NANTES, AIrG.
23-28, 1992only nodes licensed by lexical properties of thehead (specifically, subcategorization a d 0-marking license the projection of argumentnodes in a structure).
3 Linguistic constraints areclassified according to their potential domain ofapplication into local constraints (which applyinternal to a phrase) and global constraints(which have a potentially unlimited omain ofapplication).
Currently, the ECP and thesubjacency principle are implemented asexamples of global constraints.
As for localconstraints, there are the Head Feature Principle(similar to GPSG's Head Feature Convention),case-marking, the first half of the 0-criterion(guaranteeing that every argument gets at leastone 0-role),  L-marking, and spec-head-agreement/licensing.
All local constraints areenforced immediately after lexical projection hastaken place.
This is true also for spec-head-li-censing relations: These conditions can belocally activated even before anything is knownabout the actual content of the specifier position.They will be explicitly consulted only once:Using the freeze mechanism, they will after-wards be active in the background, parallelfashion, and will prevent the parser frombuilding any unlicensed structure.ParametersThe following parameters can be set: Thepositions of heads and specifiers relative to thecomplements, the number and categorial identityof  bounding nodes (for subjacency), thenumber and categorial identity of potentialbarriers, tile categorial identity of  L-markingThis is not as ad hoc a solution as it may seem.
Inlinguistic lilerature, it has been suggested severaltimes that phrase-structure is in some way derivativefrom other notions, such as case- or 0-marking.There is no good reason for viewing X'-theory as anunconstrained generator.heads and lexical heads, and the possibility ofV-to-I (I-to-C) movement.
4Chain formation and enforcement ofglobal constraintsCase is assigned to chains, so that everychain gets exactly one case.
Similarly, everychain is assigned exactly one 0-role.
Theserequirements are known as the "case filter" andthe "0-criterion" resp.
- Chains, however, canbe arbitrarily long, so that these requirementscannot be locally enforced.
The same is true ofthe subjacency principle and the ECP, whichconstrain the relation between traces and theirantecedents.
So there are three differentquestions to answer:1.
Under what circumstancesmay traces be introduced?2.
How are chains formed?
Howare the case filter and 0-criterion enforced on chains?3.
How are subjacency and ECPenforced?As a first step towards answering thesequestions, let us accept he following condition(taken from \[Abn86\]): A structure is well-formed only if every element in it is licensed.Abney takes licensing relations to be unique(i.e., every element is l icensed by a uniquerelation), lexical, and local (i.e., valid undersisterhood).
As we observed, the localityrequirement obviously will not do.
We willrelax it by positing principle (L):(L) Every element in a structure islicensed either locally (in Abney'sThis is just stipulated by means of a "parameter".There is no explanation of head-movement i  theparser.AcrEs DE COL1NG-92, NAN-rES, 23-28 AOr~T 1992 1 6 6 PROC.
OF COLING-92.
NArCrES, Auo.
23-28, 1992H,\[c am 01 C s\[ l k?~nnt IPblndM'4~ ~0" -  -Figure 2Illtlrksense), or by locally binding anelement which in turn is l icensedaccording to principle (L).This gives us a way to answer questions 1.
and2.
: A rguments  and their traces may beintroduced into a structure as long as there is achance that they will end up as local antecedentsof some independently icensed trace.
Take thecase of 0-assignment: In Figure 2, the trace inSpeclP is l icensed by virtue of being a localbinder of a trace which is l icensed by 0-marking, and Hans is l icensed by binding tiletrace in SpeclP.
This is implemented by putting"requests" for 0-roles in a set associated witheach element (requests are noted as superscriptsin Figure 2).
A 0-request in a chain is satisfiedby an element that is 0-m~uked.
The first half ofthe 0-criterion, which requires every chain tohave at least one 0-role, is thus automaticallyenforced, by positing:(S) Every request must be satisfied.Tile second half  of  the criterion can beenforced by our putting "offers" for 0-roles ona list as well (subscripts in Figure 2).
The offersassociated with a chain are determined by multi-set union over the offers associated with thechain elements.
We then posit that there may beat most one offer per chain.
Now, what aboutcase-marking?
Obviously, the case filter is sosimilar to the 0-criterion as to be amenable totile same treatment.
However, note that treatingcase-assigmnent as a licensing relation in thisway is tantamount to giving up Abney's unique~ness condition as well.
In Figure 2, Hans willbe l icensed by two relations.
A linguist mighteven want to posit still other licensing relations.So let us imt forward the condition of  "relativetnliqucness";(RI l l  Every l icensing relationmust he offm'ed in a chain at mostonce.Taken together, (L), (S), and (RU) answerquestions 1. and 2. from above.
-5 The solutionhas  been imp lemented .
The  actualimplenmntation, however, does not follow theinefficient strategy of constructing chains afterwaiting for locally licensed traces to appear, butl'ather everses tile process: The parsing modulefollows a first-fit strategy, inserting elementstop-down in the highest possible position,hypothesiz ing that these e lements  will bel icensed according to principle (L).
Thesehypotheses (i.e., the presence of  unsatisf iedrequests) license the fnrflmr appearance of tracesin a chain.
This mettlt~ even eliminates the needtbr explicit chain conslruction.
Instead, requestsarc simply inherited fl'om tile local antecedentdown the tree until they are cancelled.
6Let us tmn to question 3.
Ill doing so, let usalso consider how expensive it is to check for sub-5 R. Frank (IFra90\]) has independently arrived at asimilar solution within tim framework of TAGs.6 The IllOdlllC \]~'Of chaill COtlSttllCliOrl call b13 seen as aninterpreter exploiting the principles of grammar,which are in this case not used directly in parsing, cf.M.
Crocker's discussion of this point in \[Cro911.ACTES DF.
COLING-92.
NA~n~S, 23-28 AO{;'r 1992 1 6 7 PROC.
Ol; C()LING-92, NANrI~s.
AUG. 23-28, 1992JDp~,  2, 3}IWenCpI1, 2}~{1, 2}g laubt  ipl~, 2, 4}Hans  Cp{2, 41Peten  ~2,  41l iebt ipI2, 4, 51t~ DP~ 4' 5,~1ItFigure 3jacency and antecedent government.
We shallsee that with an indexing scheme on trees thecheck can be done in log(n) time, where n isthe size of  the tree.
7Let us take subjacency asan example.
The idea is to label tire root of thetree with a set of k+l indices, where k is themaximal number of bounding nodes that may becrossed by move-~.
Indices are inherited ownthe tree, such that at every bounding node anew, unique index is added, and the oldestindex is not passed downwards.
Figure 3illustrates this.
The following is then true:(Sub jacency)  ~ is  subjacent toiff the index sets on a and ,/are notdisjoint, where 7is the lowestcotumon ancestor of ct and \[LNodes in the tree have identifiers that specify apath from the root to the node (as there are onlybinary trees, these paths are given by sequencesIndexing ~hemes were originally developed by L.Latecki for the analysis of scope ambiguities andcommand relations (\[Lat91\]).of l 's and O's).
Thus, f inding the h)westcommon ancestor of two nodes is no harderthan selecting the higher of the nodes.
Since thecardinality of the index sets is bounded by k+2,the set comparison can be done in constant time.A similar test has been used to implementantecedent government.
The freeze -mechanismallows us to uniformly state the instruction forconstructing tire correct index sets on everynode right after that node has been projected,although the actual property of being a barriercan only be established after the node has foundits definitive place in the parse-tree.
Antecedentgovernment can be tested even before all globalproperties of the tree are known.
The followingpiece of code implements antecedent govern-mcnt (apart from co-indexing).
It demonstratesthe elegance of our modular approach:antecedent govern(Nodel, Node2) :-node info(IndBl, Nodel),node info(IndB2, Node2),freeze(IndBl,freeze(IndB2,\+disjoint(IndBl, IndB2))).ACTt~ DE COLING-92, NANT~:S, 23-28 AOl~r 1992 1 6 8 PROC.
OF COLING-92, NA~rv.s, Aua.
23-28.
19923 Conc lus ionA modular implementation f a government- \[John89\]binding parser for a considerable fragment ofGerman has been outlined.
A new concept oflicensing, the use of indexing techniques, andthe pseudo-parallel interleaving of a parsing \[LU88\],strategy with a faithful, direct, and declarativerepresentation f GB-flleory have led to a proto -typical, tool-box like system for the \[Lat91ldevelopment of GB-based grammars.
Ttlesystem has been fidly implemented in Quintus-Prolog.
It is hoped that principle-based \[Mi190\]approaches to parsing will help to elucidate thehuman language faculty, as well as provide anovel focus for the approaches of boththeoretical nd computatioual linguists.
\[Se185\]4 Re ferences\[Abn861I Cilom 81 \]\[Chom86\]\[Coh85\]\[Cro91\]\[Fra90l\[John88\]Abney, S. (1986) Liceming andPars ing ,  North EasternLinguistic Society 17, 1--15.Chomsky, N. (1981), Lectureson Government and Binding,Foris, Dordrecht.Chomsky, N. (1986), Barriers,MIT Press, Cambridge, Ma.Cohen, J.
(1985), DescribingProlog by its Interpretation andCompilation, Communicationsof the ACM, Vol.
28, No.
12.Crocker, M. W. (199l),Multiple Interpreters in in aPrinciple-Based Model ofSentence Processing, EACLProceedings 5,Berlin.Frank, R. (1990), Licensing andTree Adjoining Grammar inGovernment Binding Parsing,Ms., GB-Parsing Workshop,Universit6 de Genevd.Johnson, M. (1988), DeductiveParsing with Multiple Levels ofRepresentat ions ,  ACLProceedings 26, Buffalo, NY.Johnson, M. (1989), Parsing asDeduction: The Use ofKnowledge of Language,Journal of PsycholinguisticResearch, Vol.
18, No.
1.Lasnik, H., Uriagereka, J.
(1988), A Course in GB Syntax,MIT Press, Cambridge, Ma.Latecki, L. (1991), An IndexingTechnique for hnplementingCommand Relations, EACLProceedings 5,Berlin.Mil l ies, S. (1990), E inmodularer Ansatz farprinzipienbasiertes Parsing,IWBS~Report 139, IBM Ger-many Ltd., Stuttgart.Sells, P. (1985), Lectures onContemporary SyntacticTheories, CSLI Lecture NotesNo.
3, CSLI, Stanford, Ca.ACRES DE COLING-92, NANn~S, 23-28 no~r 1992 1 6 9 PROC.
O1: COL1NG-92, NANrEs, Ano.
23-28.
1992
