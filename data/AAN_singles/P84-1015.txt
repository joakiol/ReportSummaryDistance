USES OF C-GP.APHS lil A PROTOTYPE FOR ALrFC~ATIC TRNLSLATION,Marco A. CLEMENTE-SALAZARCentro de Graduados e Invest igac i6n,Ins t l tu to  Tecnol6gico de Chihuahua,Av.
Tecnol6gico No.
2909,31310 Chihuahua, Chih.,  MEXICO.ABSTRACTThis paper presents a prototype, not com-pletely operational, that is intended to usec-graphs in the translation of assemblers.
Firstly,the formalization of the structure and its princi-pal notions (substructures, classes of substruc-tures, order, etc.)
are presented.
Next section de-scribes the prototype which is based on a Transfor-mational System as well as on a rewriting system ofc-graphs which constitutes the nodes of the Trans-formational System.
The following part discusses aset of operations on the structure.
Finally, theimplementation in its present state is shown.1.
INTRODUCTION.In the past \ [10,11\] ,  several kinds of repre-sentat ion have been used (s t r ings ,  label led trees,trees wi th  "decorat ions" ,  graphs of  s t r ings  and(semantic) networks).
C-graphs had i t s  o r ig in  asan a l te rnat ive  in the representat ion and in thetreatment of  ambiguit ies in Automatic Trans lat ion.In ear l ie r  papers \[4,5\]  th is  s t ructure  is namedE-graph but c-graph is bet ter  suited since i t  is ageneral ized "grafo  de cadenas" (graph of s t r ings) .This s t ructure  combines some advantages ofthe Q-systems \[7\] and of the trees of ARIANE-78\ [1 ,2 ,11\ ] ,  in par t i cu la r ,  the use of  only one st ruc-ture for  a l l  the t rans la t ion  process (as ln  theformer) and foreseeable dec idab i l i ty  and para l le l -ism (as in the la t te r ) .
This paper presents a pro-totype, not completely operat iona l ,  that usesc-graphs and is intended to t rans la te  assemblersto ref ine the adequacy of th is  kind of  s t ructurein the t rans la t ion  of natural  languages.2.
DEFINITIONSC-graph.
A c-graph G is a cycle f ree , labe l ledgraph \[1,9\] wi thout  i so lated nodes and wi th  exact lyone entry node and one ex i t  node.
I t  is completelydetermined by a 7- tupie:  G=(A,S,p, I ,O,E,?)
,  whereA is a set of arcs, S a set of  nodes, p a mappingof A into SxS, I the input node, 0 the output node,E a set of labels (c - t rees ,  c-graphs) and E a map-ping of A into E. For the sake of s imp l i c i ty ,  arcsand labels w i l l  be merged in the representat ion ofG (cf.
Fig.1 .
In terest ing c-graphs are sequentialc-graphs (cf .
Fig.2a) and bundles (cf .
F ig .2b) .G= 1 ~ 7h~.
.
.~  e - -  v kA={1 .
.
.
.
.
12} ; S={1 .
.
.
.
.
7} ; I={1} ; 0={7}p={ (1 ,1 ,2) ,  (2 ,2 ,4) ,  (3 ,4 ,5) ,  (4,5,7), (5,5,6),(6 ,6 ,7) ,  (7 ,6 ,7) ,  (8 ,2 ,3) ,  (9 ,3 ,4) ,  (10,3,5) ,(11,1,2) ,  (12,1,2)}E={a,b ,c ,d ,e , f ,g ,h , i  , j , k}E={ (I ,a), (2,b), (3,f), (4,g), (5, i), (6,j),(7 ,k) ,  (8 ,c) ,  (9 ,d) ,  ( lO ,e) ,  (11,b) ,  (12,h) }F ig.1.
A c-graph.GI= ~ i :c J ~o(a) (b)Fig.2.
A seq.
c-graph (a) and a bundle (b).C-trees.
A c - t ree  or a t ree wi th  decorationsis an ordered t ree,  wi th  nodes labe l led by a labeland a decorat ion that is i t se l f  a decorated t ree,poss ib ly empty.Classes of c-graphs.
There are three majorclasses: (1) recursive c-graphs (cf .
Fig.3a) whereeach arc is labe l led by a c-graph; (2) simplec-graphs (cf .
F ig .
l )  where each arc is labe l led bya c - t ree  and (3) regular  c-graphs, a proper sub-class of the second that is obtained by concatena-t ion  and a l te rnat ion  of simple arcs (cf .
F ig .3b) .By denoting concatenation by " . "
and a l te rnat ionby "+", we have an evident l inear  representat ion.For example, G4=g+i.
( j+k).
Note that not everyc-graph may be obtained by these operat ions,  e.g.G.Substructures.
For the sake of homogeneity,the only substructures al lowed are those that arethemselves c-graphs.
They w i l l  be ca l led sub-61-c-graphs or  seg's.
For example, G1 and G2 areseg's of  G.G2a) A recursive c-graph.b) A regu lar  c-graph.
G4=F ig .3 .
Two classes o f  c-graphs.I so la tab i l i ty .
I t  is a feature  that  deter -mines, fo r  each c-graph G, several  classes o f  seg'sAn i so la ted  seg G' is in tu i t i ve ly  a seg that  has noarcs that  "enter"  or  that  " leave"  G'.
Depending onthe re la t ion  that  each i so la ted  seg keeps w i th  therest  o f  the c-graph,  several  classes o f  i so la tab i l -i ty  can be def ined.a) Weak i so la tab i l i ty .
A seg G' of  G is weaklyi so la tab le  ( seg i f )  i f  and on ly  i f  fo r  everynode x o f  G' (except I '  and 0 ' ) ,  a l l  o f  thearcs that  leave or enter  x are in G ~.
E .g.
:G5=i is a seg i f  o f  G.b) Normal i so la tab i l i ty .
A seg G' of  G is normalyi so la tab le  (segmi) i f  and on ly  i f  i t  is aseg i f  and there is a path, not in G', suchthat  i t  leaves I '  and enters  0 ' .
Example: G6=kis a segmi of  G.c) Strong i so la tab i l i ty .
A seg G' of  G iss t rong ly  i so la tab le  ( segf i )  i f  and only  i f  theon ly  node that  has enter ing  arcs not in G' isI '  and the on ly  node that  has leaving arcs notin G' is 0 ' .
When G' is not an arc and thereis no segf i  contained s t r i c t ly  in G',  then G'is an "e lementary segf i " ;  i f  G conta ins nosegf i ,  then G. is e lementary.
E.g.
G4 is asegfi  of  G.Order and roads.
Two order  re la t ions  are con-sidered: (l) a "vertical" order or linear order ofthe arcs having the same initial node and (2) a"horizontal" order or partial order between twoarcs on the same path.
A road is a path from I to 0Vertical order induces a linear order on roads.3.
DEFINITION OF THE PROTOTYPE.The prototype consists of a model and a datastructure.
The model is essentially a generaliza-tion of a Transformational System (TS) analogousto ROBRA \[2\] and whose grammars are rewriting sys-tems of c-graphs (RSC) \[4,5,6\].
Regarding datastructure, we use c-graphs,3.1A Transformational ~stem.This TS is a c-graph-~c-graph transducer.
Itis a "control" graph whose nodes are RSC and thearcs are labelled by conditions.A TS is a cycle free oriented graph, withonly one input and such that,CI) Each node is labelled with a RSC or &nul.
(2) &nul has no successor.
(3) Each grammar of the RSC has a transitionscheme S or c (empty scheme).~4) Arcs of the same in i t ia l  node are ordered.TS works heuristical ly.
G~ven a c-graph gn asan input, i t  searches for the f i r s t  path endin~ in&nul.
This fac t  impl ies that  a l l  of  the t rans i t ionschemes on the path were sat i s f ied .
Any scheme notsa t i s f ied  provokes a search of  a new path.
Forexample, i f  $1 is sa t i s f ied ,  TS produces Gl(gn)=g 1and i t  proceeds to calculate G2(G1(go))=g ~.
IY S 4'is satisfied the system stops and produce~ g~.Otherwise, i t  backtracks to GI and tests S2.-If i tis satisfied g\] is produced.
Otherwise, i t  testsS3, etc.?
SnulS 4~- &nulF ig .4 .
A Transformat ional  System.3.2 A REWRITING SYSTEM.Let us consider a simple example: let GR bethe following grar~mar for syntactic analysis (with-out intending an example of l inguist ic value).R1:(g1+e1+g2)(g3+~2+g4)* I(g1+gZ)(g3+~2+g4)?61 IR2:(g1+~1+gZ)(g3+eZ+g4)(gl+g2)(g3+~2+g4)+81R3:~I(gl+~Z+g2)~1(g1+g2)+B1R4:~l(g1+~2+g2)g1+g2+81R5:(g1+~1+g2)(g3+~2+g4)(g1+g2)(g3+~2+g4)+B1R6:(g1+~1+g2)(g3+~2+g4)(g1+g2)(g3+~2+g4)+61~I=GN, ~2=GV / ==81:=PHRA(~I,~2) / ./ ~I=VB, ~2=GN / ==/ BI:=PRED(~I,~2) /./ ~I=NP, ~2=AD / ==/ BI:=GN(~I,~2) / ./ ~I=NP, ~2=PRED / ==/ 61:=PHRA(~I,~2) /./ ~I=PRON, ~2=VB / ==/ 61:=GV(~I,~2) /./ ~I=ART, ~2=NM / ==/ BI:=GN(~I,~2) /.As we can see, each rule has: a name (RI,R2,.
.
. )
,  a lef t  side and a right side.The left  side defines the geometricaI Form62and the cond i t ion  that  an actual  seg must meet inorder to be transformed.
I t  is a c-graph schemecomposed of two parts :  the s t ruc tura l  descr ip torthat  def ines the geometr ical  form and the cond i t ion(between slashes) that  tests  label in format ion .
Thef i r s t  part  use "*"  as an "element of s t ruc tura l  de-sc r ip t ion"  in the f i r s t  ru le .
I t  denotes the factthat  no seg must be r ight -concatenated to g3+~2+g4.The r ight  side def ines the t rans format ion  tobe done.
I t  consists  of  a s t ruc tura l  descr ip tor ,s imi la r  to the one on the le f t  s ide and a l l s t  oflabel assignments (also between slashes) where foreach new iabe\] we precise the values i t  takes; andfor  each old one, i t s  poss ib le  mod i f i ca t ions .
Apo int  ends the ru le .
Note the proper t ies  of  anempty g: i f  g' is any c-graph, then g.g '=g andg+g'=g' .Let us analyze the phrase: "Ana l i s ta  la t i -ra" .
The representat ion  in our formalism is G7.Morphological  ana lys is  produces G8.
Note that  a11ambigu i t ies  are kept in the same s t ruc ture  in theform of  para \ ] \ ]e \ ]  arcs.
The app l i ca t ion  of  GR to G8resu l t s  in Gg, where each arc w i l l  be labe l led  w i tha c - t ree  wi th  a possib\]e in terpreta t ion  of  G8 ingrammar GR.
The sequence of  app l i ca t ions  is R3, R6,RS, RI, R2, R4.
The system stops when.
no more rulesare app l i cab \ ]e .G7= e Ana ^ .
.
.
.
.
l i s ta  _ la _^ t i ra  :oGS= Ana Cnpel1 i s to  \adt i tarlopron, whereAI=PHRA(GN(NP(Ana), AD( l i s to ) ) ,  GV(PRON(Io),VB( t i ra r ) ) )A2=PHRA(NP(Ana), PRED(VB(IIstar, GN(ART(eI),NM(t i ra ) ) ) )Operations are d iv ided in two classes:  (1)those where the s t ruc ture  is taken as a whole (g lo~a\ ] )  and (2) those that  t ransform substructures( local) ,I.
Global Operations.Concatenation and al ternat ion have been de-fined above.
These operations produce sequentlaIc-graphs and bundles respectively, as well as thepolynomia\] wr i t ing of regular c-graphs.Expansion.
This operation produces a bundleexp(G) from a l l  the roads of a c-graph G. For exam-ple, expansion of GIO produces exp(G10)=(b.f)+(c.d.
f )+(c.e) .GIO= ~ fexp(G10)=fF ig .6 .
Expansion of  a c-graph.Factor i za t ion .
There are two kinds and the i rresu l ts  may d i f fe r .
Consider G11=a.b+a.c+d.e+d.f+g .
f+h.e .
Lef t  fac tor l za t ion  produces G12=a.
(b+c)+d .
(e+f )+g.
f+h.e ,  and r ight  fac tor i za t ion  G13=a.b+a.
c+ (d+h).
e+ (d+g).
f .A rbor i za t ion .
This operat ion  constructs ac - t ree  from a c-graph.
There may be several  kindsof  c - t rees  that  can be constructed but we searchfo r  a t ree  that  keeps ver t i ca l  and hor i zonta l  o r -ders,  i .e .
one that  codes the s t ruc ture  of  thec-graph.
An "and-or"  (y-o) t ree  is wel l  su i ted forth i s  purpose.
The resu l t  o f  the operat ion  w i l l  bea c-graph wi th  one and on ly  one arc labe l led  bythe and-or t ree .
For example, arb(G)=G14 (cf .
Fig.7).
Note that  the non-regular  seg has ~ as a root .Regular seg's have o.G14= C ~ :O , whereA= y (o (y (a) ,y (b) ,y (h)) ,a (y (b , f )  ,y (c ,d,  f ) ,y (c ,e ) ) ,o (g ,y  (i ,o ( j  , k ) ) )F ig .7 .
Arbor i za t ion  of  G.F ig .5.
Example of  sentence ana lys i s .3.3 Operat ions.2.
Local Operat ions.Replacement.
Given two c-graphs G and G" , th i soperat ion  subst i tu tes  a seg G' in G for  G", e.g.i f  G=G4, G"=m+n and G'=i ,  then the resu l t  w i l l  be63G 15=g+ (re+n) : (j+k).Addition.
This operation inserts a c-graph G'into another, G, by merging two dist inct nodes (x,y) of G with the input and output of G'.
Additionrequires only that insertion does not produce cy-cles.
Note that i f  (I,0) are taken as a couple ofnodes, we have alternation.
Example, let (2,3) bea couple of nodes of G16 and take G'=G17=s+u.
Theresulting c-graph is G18.cG16=c ---ci 2 3 5cGI8= c i 2F ig .8 .
Add i t ion  of  a c-graph.Erasing.
This eliminates a substructure G'of a c-graph G. Erasing may destroy the structureeven i f  we work with isolated seg's.
Consequently,i t  is only defined on particular classes of seg's,namely segfi's and segmi's.
For any other substruc-ture, we eliminate the smaller segmi that containsi t .
A special case constitutes a segfi G' suchthat I and 0 do not belong to G'.
Eliminating G' insuch a case produces two non-connecting nodes inthe c-graph that we have chosen to merge to pre-serve homogeneity.
Example: let us take G and G'=GIO, then the result of erasing GIO from G is G19=G2.G4.4.
IMPLEMENTATION.A small system has been programmed in PROLOG\[4\] (mainly operations) and in PASCAL (TS and RSC).For the first approach, we chose regular c-graphsto work with, since there is always a string torepresent a c-graph of this class.In its present state, the system has twoparts: (1) the Transformational System includingthe rewriting system and (2) the set of local andglobal operations.The TS is interactive.
It consists of an ana-lyzer that verifies the structure of the TS givenas a console input and of the TS proper.
As datawe have the console input and a segment composed oftransit ion schemes.
There are no finer controls fordifferent modes of grammar execution.Regarding operations and from a methodologicalpoint of vlew, algorithms for c-graph treatment canbe divided in two classes: (I) the one where wesearch for substructures and (2) the one where thissearch is not needed.
Obviously, local operationsbelong to the f i r s t  class, but among global opera-tions, only concatenation, alternation and expan-sion belong to the second one.
Detailed descriptionof algorithms of this part Of ~he system can befound in \[4\].5.
CONCLUSION.Once we have an operational version of theprototype, i t  is intended as a f i r s t  approach toproceed to the translation of assemblers of themicroprocessors available in our laboratory suchas INTEL's 8085 or 8080 and MOTOROLA's 6800.6.
REFERENCES.I .
\ [ I \ ]  Boitet, Ch.
UN ESSAI DE REPONSE A QUELQUESQUESTIONS THEORIQUES ET PRATIQUES LIEES A LA TRA-DUCTION AUTOMATIQUE.
DEFINITION D'UN SYSTEME PROTO-TYPE.
Th~se d'Etat.
Grenoble.
Avr i l .
1976.2.\[2\] Boitet, Ch.
AUTOMATIC PRODUCTION OF CF AND CSANALYSERS USING A GENERAL TREE TRANSDUCER.
Rapportde recherche de l ' Ins t i tu t  de Math~matiques Appli-qu~es N?218.
Grenoble.
Novembre.
1979.3.\[4\] Clemente-Salazar, M. ETUDES ET ALGORITHMESLIES A UNE NOUVELLE STRUCTURE DE DONNEES EN T.A.
:LES E-GRAPHES.
Th~se Dr-lng.
Grenoble.
Mai.
1982.4.\[5\] Clemente-Salazar, M. E-GRAPHS: AN INTERESTINGDATA STRUCTURE FOR M.T.
Paper presented in COLING-82.
Prague.
July.
1982.5.\[6\] Clemente-Salazar, M. C-GRAPHS: A DATA STRUC-TURE FOR AUTOMATED TRANSLATION.
Paper presented inthe 26th International Midwest Symposium on Clr-cuits and Systems.
Puebla.
Mexico.
August.
1983.6.\[7\] Colmerauer, A. LES SYSTEMES-Q.
Universit~ deMontreal.Publication I terne N?43.
Septembre.
1970.7.\[9\] Kuntzmann, J. THEORIE DES RESEAUX (GRAPHES).Dunod.
Paris.
1972.8 .
\ [10\ ]  Vauquois, B.
LA TRADUCTION AUTOMATIQUE AGRENOBLE.
Document de L ingu is t ique  Quant i ta t iveN?24.
Dunod.
Par is .
1975.9.\[11\] Vauquois, B.
ASPECTS OF MECHANICAL TRANSLA-TION IN 1979.
Conference for Japan IBM ScientificProgram.
Document du Groupe d'Etudes pour la Tra-duction Automatique.
Grenoble.
July.
1979.64
