Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 1199?1209,Baltimore, Maryland, USA, June 23-25 2014.c?2014 Association for Computational LinguisticsLearning Semantic Hierarchies via Word EmbeddingsRuiji Fu?, Jiang Guo?, Bing Qin?, Wanxiang Che?, Haifeng Wang?, Ting Liu??
?Research Center for Social Computing and Information RetrievalHarbin Institute of Technology, China?Baidu Inc., Beijing, China{rjfu, jguo, bqin, car, tliu}@ir.hit.edu.cnwanghaifeng@baidu.comAbstractSemantic hierarchy construction aims tobuild structures of concepts linked byhypernym?hyponym (?is-a?)
relations.
Amajor challenge for this task is theautomatic discovery of such relations.This paper proposes a novel and effec-tive method for the construction of se-mantic hierarchies based on word em-beddings, which can be used to mea-sure the semantic relationship betweenwords.
We identify whether a candidateword pair has hypernym?hyponym rela-tion by using the word-embedding-basedsemantic projections between words andtheir hypernyms.
Our result, an F-scoreof 73.74%, outperforms the state-of-the-art methods on a manually labeled testdataset.
Moreover, combining our methodwith a previous manually-built hierarchyextension method can further improve F-score to 80.29%.1 IntroductionSemantic hierarchies are natural ways to orga-nize knowledge.
They are the main componentsof ontologies or semantic thesauri (Miller, 1995;Suchanek et al, 2008).
In the WordNet hierar-chy, senses are organized according to the ?is-a?relations.
For example, ?dog?
and ?canine?
areconnected by a directed edge.
Here, ?canine?
iscalled a hypernym of ?dog.?
Conversely, ?dog?is a hyponym of ?canine.?
As key sourcesof knowledge, semantic thesauri and ontologiescan support many natural language processingapplications.
However, these semantic resourcesare limited in its scope and domain, and theirmanual construction is knowledge intensive andtime consuming.
Therefore, many researchers?Email correspondence.??organism??plant???Ranunculaceae???Aconitum?
?aconite ??
?medicinal plant??medicine??organism??plant???Ranunculaceae???Aconitum??aconite??
?medicinal plant?
?medicineFigure 1: An example of semantic hierarchy con-struction.have attempted to automatically extract semanticrelations or to construct taxonomies.A major challenge for this task is the auto-matic discovery of hypernym-hyponym relations.Fu et al (2013) propose a distant supervisionmethod to extract hypernyms for entities frommultiple sources.
The output of their model isa list of hypernyms for a given enity (left pan-el, Figure 1).
However, there usually also existshypernym?hyponym relations among these hy-pernyms.
For instance, ???
(plant)?
and????
(Ranunculaceae)?
are both hyper-nyms of the entity ???
(aconit),?
and ???
(plant)?
is also a hypernym of ????(Ranunculaceae).?
Given a list of hypernymsof an entity, our goal in the present work is toconstruct a semantic hierarchy of these hypernyms(right panel, Figure 1).1Some previous works extend and refinemanually-built semantic hierarchies by using otherresources (e.g., Wikipedia) (Suchanek et al,2008).
However, the coverage is limited by thescope of the resources.
Several other works reliedheavily on lexical patterns, which would sufferfrom deficiency because such patterns can onlycover a small proportion of complex linguistic cir-cumstances (Hearst, 1992; Snow et al, 2005).1In this study, we focus on Chinese semantic hierarchyconstruction.
The proposed method can be easily adapted toother languages.1199Besides, distributional similarity methods (Kotler-man et al, 2010; Lenci and Benotto, 2012) arebased on the assumption that a term can only beused in contexts where its hypernyms can be usedand that a term might be used in any contextswhere its hyponyms are used.
However, it is notalways rational.
Our previous method based onweb mining (Fu et al, 2013) works well for hy-pernym extraction of entity names, but it is unsuit-able for semantic hierarchy construction which in-volves many words with broad semantics.
More-over, all of these methods do not use the wordsemantics effectively.This paper proposes a novel approach for se-mantic hierarchy construction based on word em-beddings.
Word embeddings, also known as dis-tributed word representations, typically representwords with dense, low-dimensional and real-valued vectors.
Word embeddings have beenempirically shown to preserve linguistic regular-ities, such as the semantic relationship betweenwords (Mikolov et al, 2013b).
For example,v(king) ?
v(queen) ?
v(man) ?
v(woman),where v(w) is the embedding of the word w. Weobserve that a similar property also applies to thehypernym?hyponym relationship (Section 3.3),which is the main inspiration of the present study.However, we further observe that hypernym?hyponym relations are more complicated than asingle offset can represent.
To address this chal-lenge, we propose a more sophisticated and gen-eral method ?
learning a linear projection whichmaps words to their hypernyms (Section 3.3.1).Furthermore, we propose a piecewise linear pro-jection method based on relation clustering tobetter model hypernym?hyponym relations (Sec-tion 3.3.2).
Subsequently, we identify whether anunknown word pair is a hypernym?hyponym re-lation using the projections (Section 3.4).
To thebest of our knowledge, we are the first to applyword embeddings to this task.For evaluation, we manually annotate a datasetcontaining 418 Chinese entities and their hyper-nym hierarchies, which is the first dataset for thistask as far as we know.
The experimental resultsshow that our method achieves an F-score of73.74% which significantly outperforms the pre-vious state-of-the-art methods.
Moreover, com-bining our method with the manually-built hier-archy extension method proposed by Suchanek etal.
(2008) can further improve F-score to 80.29%.2 BackgroundAs main components of ontologies, semantic hi-erarchies have been studied by many researchers.Some have established concept hierarchies basedon manually-built semantic resources such asWordNet (Miller, 1995).
Such hierarchies havegood structures and high accuracy, but their cov-erage is limited to fine-grained concepts (e.g.,?Ranunculaceae?
is not included in Word-Net.).
We have made similar obsevation that abouta half of hypernym?hyponym relations are absentin a Chinese semantic thesaurus.
Therefore, abroader range of resources is needed to supple-ment the manually built resources.
In the construc-tion of the famous ontology YAGO, Suchanek etal.
(2008) link the categories in Wikipedia ontoWordNet.
However, the coverage is still limitedby the scope of Wikipedia.Several other methods are based on lexicalpatterns.
They use manually or automaticallyconstructed lexical patterns to mine hypernym?hyponym relations from text corpora.
A hierarchycan then be built based on these pairwise relations.The pioneer work by Hearst (1992) has foundout that linking two noun phrases (NPs) via cer-tain lexical constructions often implies hypernymrelations.
For example, NP1is a hypernym of NP2in the lexical pattern ?such NP1as NP2.?
Snow etal.
(2005) propose to automatically extract largenumbers of lexico-syntactic patterns and subse-quently detect hypernym relations from a largenewswire corpus.
Their method relies on accuratesyntactic parsers, and the quality of the automat-ically extracted patterns is difficult to guarantee.Generally speaking, these pattern-based methodsoften suffer from low recall or precision becauseof the coverage or the quality of the patterns.The distributional methods assume that the con-texts of hypernyms are broader than the ones oftheir hyponyms.
For distributional similarity com-puting, each word is represented as a semanticvector composed of the pointwise mutual infor-mation (PMI) with its contexts.
Kotlerman et al(2010) design a directional distributional measureto infer hypernym?hyponym relations based onthe standard IR Average Precision evaluation mea-sure.
Lenci and Benotto (2012) propose anoth-er measure focusing on the contexts that hyper-nyms do not share with their hyponyms.
However,broader semantics may not always infer broadercontexts.
For example, for terms ?Obama?
and1200?American people?, it is hard to say whosecontexts are broader.Our previous work (Fu et al, 2013) applies aweb mining method to discover the hypernyms ofChinese entities from multiple sources.
We as-sume that the hypernyms of an entity co-occurwith it frequently.
It works well for named enti-ties.
But for class names (e.g., singers in HongKong, tropical fruits) with wider range of mean-ings, this assumption may fail.In this paper, we aim to identify hypernym?hyponym relations using word embeddings, whichhave been shown to preserve good properties forcapturing semantic relationship between words.3 MethodIn this section, we first define the task formally.Then we elaborate on our proposed method com-posed of three major steps, namely, word embed-ding training, projection learning, and hypernym?hyponym relation identification.3.1 Task DefinitionGiven a list of hypernyms of an entity, our goal isto construct a semantic hierarchy on it (Figure 1).We represent the hierarchy as a directed graphG, in which the nodes denote the words, and theedges denote the hypernym?hyponym relations.Hypernym-hyponym relations are asymmetric andtransitive when words are unambiguous:?
?x, y ?
L : xH?
?y ?
?(yH??x)?
?x, y, z ?
L : (xH?
?z ?
zH??y)?
xH?
?yHere, L denotes the list of hypernyms.
x, y andz denote the hypernyms in L. We useH??
torepresent a hypernym?hyponym relation in thispaper.
Actually, x, y and z are unambiguous asthe hypernyms of a certain entity.
Therefore, Gshould be a directed acyclic graph (DAG).3.2 Word Embedding TrainingVarious models for learning word embeddingshave been proposed, including neural net lan-guage models (Bengio et al, 2003; Mnih andHinton, 2008; Mikolov et al, 2013b) and spec-tral models (Dhillon et al, 2011).
More recent-ly, Mikolov et al (2013a) propose two log-linearmodels, namely the Skip-gram and CBOW model,to efficiently induce word embeddings.
These twomodels can be trained very efficiently on a large-scale corpus because of their low time complexity.No.
Examples1v(?)?
v(??)
?
v(?)?
v(??)v(shrimp)?
v(prawn) ?
v(fish)?
v(gold fish)2v(??)?
v(??)
?
v(??)?
v(??)v(laborer)?
v(carpenter) ?
v(actor)?
v(clown)3v(??)?
v(??)
6?
v(?)?
v(??)v(laborer)?
v(carpenter) 6?
v(fish)?
v(gold fish)Table 1: Embedding offsets on a sample ofhypernym?hyponym word pairs.Additionally, their experiment results have shownthat the Skip-gram model performs best in identi-fying semantic relationship among words.
There-fore, we employ the Skip-gram model for estimat-ing word embeddings in this study.The Skip-gram model adopts log-linear classi-fiers to predict context words given the currentword w(t) as input.
First, w(t) is projected to itsembedding.
Then, log-linear classifiers are em-ployed, taking the embedding as input and pre-dict w(t)?s context words within a certain range,e.g.
k words in the left and k words in theright.
After maximizing the log-likelihood overthe entire dataset using stochastic gradient descent(SGD), the embeddings are learned.3.3 Projection LearningMikolov et al (2013b) observe that word em-beddings preserve interesting linguistic regulari-ties, capturing a considerable amount of syntac-tic/semantic relations.
Looking at the well-knownexample: v(king) ?
v(queen) ?
v(man) ?v(woman), it indicates that the embedding offsetsindeed represent the shared semantic relation be-tween the two word pairs.We observe that the same property also ap-plies to some hypernym?hyponym relations.
Asa preliminary experiment, we compute the em-bedding offsets between some randomly sampledhypernym?hyponym word pairs and measure theirsimilarities.
The results are shown in Table 1.The first two examples imply that a word canalso be mapped to its hypernym by utilizing wordembedding offsets.
However, the offset from?carpenter?
to ?laborer?
is distant fromthe one from ?gold fish?
to ?fish,?
indicat-ing that hypernym?hyponym relations should bemore complicated than a single vector offset canrepresent.
To verify this hypothesis, we com-pute the embedding offsets over all hypernym?1201???-???
?sportsman - footballer ??-??
?staff - civil servant??-?
?laborer - gardener??-??
?seaman - navigator??-?
?actor - singer ??-?
?actor - protagonist??-?
?actor - clown??-?
?position - headmaster??-??
?actor - matador??-??
?laborer - temporary worker ??-?
?laborer - carpenter ??-??
?position ?
consul general??-?
?staff - airline hostess??-??
?staff - salesclerk??-??
?staff - conductor?-?
?chicken - cock?-???
?sheep - small-tail Han sheep?-?
?sheep - ram ?-?
?equus - zebra ?-?
?shrimp - prawn?-?
?dog - police dog?-??
?rabbit - wool rabbit??-??
?dolphin - white-flag dolphin ?-?
?fish - shark ?-??
?fish - tropical fish?-?
?fish - gold fish?-?
?crab - sea crab?-?
?donkey - wild assFigure 2: Clusters of the vector offsets in training data.
The figure shows that the vector offsets distributein some clusters.
The left cluster shows some hypernym?hyponym relations about animals.
The rightone shows some relations about people?s occupations.hyponym word pairs in our training data and vi-sualize them.2Figure 2 shows that the relationsare adequately distributed in the clusters, whichimplies that hypernym?hyponym relations in-deed can be decomposed into more fine-grainedrelations.
Moreover, the relations about animalsare spatially close, but separate from the relationsabout people?s occupations.To address this challenge, we propose to learnthe hypernym?hyponym relations using projectionmatrices.3.3.1 A Uniform Linear ProjectionIntuitively, we assume that all words can be pro-jected to their hypernyms based on a uniform tran-sition matrix.
That is, given a word x and its hy-pernym y, there exists a matrix ?
so that y = ?x.For simplicity, we use the same symbols as thewords to represent the embedding vectors.
Ob-taining a consistent exact ?
for the projection ofall hypernym?hyponym pairs is difficult.
Instead,we can learn an approximate ?
using Equation 1on the training data, which minimizes the mean-squared error:?
?= arg min?1N?(x,y)?
?x?
y ?2(1)where N is the number of (x, y) word pairs inthe training data.
This is a typical linear regres-sion problem.
The only difference is that our pre-dictions are multi-dimensional vectors instead ofscalar values.
We use SGD for optimization.2Principal Component Analysis (PCA) is applied for di-mensionality reduction.3.3.2 Piecewise Linear ProjectionsA uniform linear projection may still be under-representative for fitting all of the hypernym?hyponym word pairs, because the relations arerather diverse, as shown in Figure 2.
To bettermodel the various kinds of hypernym?hyponymrelations, we apply the idea of piecewise linear re-gression (Ritzema, 1994) in this study.Specifically, the input space is first segmentedinto several regions.
That is, all word pairs (x, y)in the training data are first clustered into sever-al groups, where word pairs in each group areexpected to exhibit similar hypernym?hyponymrelations.
Each word pair (x, y) is representedwith their vector offsets: y ?
x for clustering.The reasons are twofold: (1) Mikolov?s work hasshown that the vector offsets imply a certain lev-el of semantic relationship.
(2) The vector off-sets distribute in clusters well, and the word pairswhich are close indeed represent similar relations,as shown in Figure 2.Then we learn a separate projection for eachcluster, respectively (Equation 2).?
?k= arg min?k1Nk?(x,y)?Ck?
?kx?
y ?2(2)where Nkis the amount of word pairs in the kthcluster Ck.We use the k-means algorithm for clustering,where k is tuned on a development dataset.3.3.3 Training DataTo learn the projection matrices, we extract train-ing data from a Chinese semantic thesaurus,Tongyi Cilin (Extended) (CilinE for short) which1202????
?RootL ev el 1L ev el 2L ev el 3L ev el 4L ev el 5?
ob j ect??
animal??
insect- -??
dragonf lyBi18A06@??
: ??
( dragonf ly  :  animal)??
: ??
( dragonf ly  :  insect)C ilinEh y perny m-h y pony m pairsS ense C ode:  B i1 8 A0 6 @S ense C ode:  B i1 8 AS ense C ode:  B i1 8S ense C ode:  B iS ense C ode:  B??
: ??
( insect :  animal)Figure 3: Hierarchy of CilinE and an Example ofTraining Data Generationcontains 100,093 words (Che et al, 2010).3CilinEis organized as a hierarchy of five levels, in whichthe words are linked by hypernym?hyponymrelations (right panel, Figure 3).
Each word inCilinE has one or more sense codes (some wordsare polysemous) that indicate its position in the hi-erarchy.The senses of words in the first level, such as??
(object)?
and ???
(time),?
are very gen-eral.
The fourth level only has sense codes withoutreal words.
Therefore, we extract words in the sec-ond, third and fifth levels to constitute hypernym?hyponym pairs (left panel, Figure 3).Note that mapping one hyponym to multi-ple hypernyms with the same projection (?x isunique) is difficult.
Therefore, the pairs with thesame hyponym but different hypernyms are ex-pected to be clustered into separate groups.
Fig-ure 3 shows that the word ?dragonfly?
in thefifth level has two hypernyms: ?insect?
in thethird level and ?animal?
in the second level.Hence the relations dragonflyH??
insect anddragonflyH??
animal should fall into differ-ent clusters.In our implementation, we apply this constraintby simply dividing the training data into two cat-egories, namely, direct and indirect.
Hypernym-hyponym word pair (x, y) is classified into the di-rect category, only if there doesn?t exist anotherword z in the training data, which is a hypernym ofx and a hyponym of y.
Otherwise, (x, y) is classi-fied into the indirect category.
Then, data in thesetwo categories are clustered separately.3www.ltp-cloud.com/download/xy?k?x'?lFigure 4: In this example, ?kx is located in thecircle with center y and radius ?.
So y is consid-ered as a hypernym of x. Conversely, y is not ahypernym of x?.xyzxy(a) (b)zxyFigure 5: (a) If d(?jy, x) > d(?kx, y), we re-move the path from y to x; (b) if d(?jy, x) >d(?kx, z) and d(?jy, x) > d(?iz, y), we reversethe path from y to x.3.4 Hypernym-hyponym RelationIdentificationUpon obtaining the clusters of training data andthe corresponding projections, we can identifywhether two words have a hypernym?hyponym re-lation.
Given two words x and y, we find clusterCkwhose center is closest to the offset y ?
x, andobtain the corresponding projection ?k.
For y tobe considered a hypernym of x, one of the twoconditions below must hold.Condition 1: The projection ?kputs ?kx closeenough to y (Figure 4).
Formally, the euclideandistance between ?kx and y: d(?kx, y) must beless than a threshold ?.d(?kx, y) =?
?kx?
y ?2< ?
(3)Condition 2: There exists another word z sat-isfying xH?
?z and zH??y.
In this case, we use thetransitivity of hypernym?hyponym relations.Besides, the final hierarchy should be a DAGas discussed in Section 3.1.
However, the pro-jection method cannot guarantee that theoretical-ly, because the projections are learned from pair-wise hypernym?hyponym relations without the w-hole hierarchy structure.
All pairwise hypernym?hyponym relation identification methods wouldsuffer from this problem actually.
It is an inter-esting problem how to construct a globally opti-1203mal semantic hierarchy conforming to the formof a DAG.
But this is not the focus of this paper.So if some conflicts occur, that is, a relation cir-cle exists, we remove or reverse the weakest pathheuristically (Figure 5).
If a circle has only twonodes, we remove the weakest path.
If a circle hasmore than two nodes, we reverse the weakest pathto form an indirect hypernym?hyponym relation.4 Experimental Setup4.1 Experimental DataIn this work, we learn word embeddings from aChinese encyclopedia corpus named Baidubaike4,which contains about 30 million sentences (about780 million words).
The Chinese segmentationis provided by the open-source Chinese languageprocessing platform LTP5(Che et al, 2010).Then, we employ the Skip-gram method (Section3.2) to train word embeddings.
Finally we obtainthe embedding vectors of 0.56 million words.The training data for projection learning iscollected from CilinE (Section 3.3.3).
We ob-tain 15,247 word pairs of hypernym?hyponymrelations (9,288 for direct relations and 5,959 forindirect relations).For evaluation, we collect the hypernyms for418 entities, which are selected randomly fromBaidubaike, following Fu et al (2013).
We thenask two annotators to manually label the seman-tic hierarchies of the correct hypernyms.
The finaldata set contains 655 unique hypernyms and 1,391hypernym?hyponym relations among them.
Werandomly split the labeled data into 1/5 for de-velopment and 4/5 for testing (Table 2).
The hi-erarchies are represented as relations of pairwisewords.
We measure the inter-annotator agreementusing the kappa coefficient (Siegel and Castel-lan Jr, 1988).
The kappa value is 0.96, which indi-cates a good strength of agreement.4.2 Evaluation MetricsWe use precision, recall, and F-score as our met-rics to evaluate the performances of the methods.Since hypernym?hyponym relations and its re-verse (hyponym?hypernym) have one-to-one cor-respondence, their performances are equal.
For4Baidubaike (baike.baidu.com) is one of the largestChinese encyclopedias containing more than 7.05 million en-tries as of September, 2013.5www.ltp-cloud.com/demo/Relation# of word pairsDev.
Testhypernym?hyponym 312 1,079hyponym?hypernym?312 1,079unrelated 1,044 3,250Total 1,668 5,408Table 2: The evaluation data.
?Since hypernym?hyponym relations and hyponym?hypernymrelations have one-to-one correspondence, theirnumbers are the same.1 510 15200.450.50.550.60.650.70.750.81 10 20 30 40 50 60 IndirectF1-ScoreDirectFigure 6: Performance on development data w.r.t.cluster size.simplicity, we only report the performance of theformer in the experiments.5 Results and Analysis5.1 Varying the Amount of ClustersWe first evaluate the effect of different number ofclusters based on the development data.
We varythe numbers of the clusters both for the direct andindirect training word pairs.As shown in Figure 6, the performance of clus-tering is better than non-clustering (when the clus-ter number is 1), thus providing evidences thatlearning piecewise projections based on clusteringis reasonable.
We finally set the numbers of theclusters of direct and indirect to 20 and 5, respec-tively, where the best performances are achievedon the development data.5.2 Comparison with Previous WorkIn this section, we compare the proposed methodwith previous methods, including manually-builthierarchy extension, pairwise relation extraction1204P(%) R(%) F(%)MWiki+CilinE92.41 60.61 73.20MPattern97.47 21.41 35.11MSnow60.88 25.67 36.11MbalApinc54.96 53.38 54.16MinvCL49.63 62.84 55.46MFu87.40 48.19 62.13MEmb80.54 67.99 73.74MEmb+CilinE80.59 72.42 76.29MEmb+Wiki+CilinE79.78 80.81 80.29Table 3: Comparison of the proposed method withexisting methods in the test set.Pattern Translationw?[??|??]
h w is a [a kind of] hw [?]?
h w[,] and other hh [?]?[?]
w h[,] called wh [?]
[?]?
w h[,] such as wh [?]???
w h[,] especially wTable 4: Chinese Hearst-style lexical patterns.
Thecontents in square brackets are omissible.based on patterns, word distributions, and webmining (Section 2).
Results are shown in Table 3.5.2.1 Overall ComparisonMWiki+CilinErefers to the manually-built hierar-chy extension method of Suchanek et al (2008).In our experiment, we use the category taxonomyof Chinese Wikipedia6to extend CilinE.
Table 3shows that this method achieves a high precisionbut also a low recall, mainly because of the limit-ed scope of Wikipedia.MPatternrefers to the pattern-based method ofHearst (1992).
We extract hypernym?hyponymrelations in the Baidubaike corpus, which is al-so used to train word embeddings (Section 4.1).We use the Chinese Hearst-style patterns (Table4) proposed by Fu et al (2013), in which w rep-resents a word, and h represents one of its hy-pernyms.
The result shows that only a small partof the hypernyms can be extracted based on thesepatterns because only a few hypernym relationsare expressed in these fixed patterns, and many areexpressed in highly flexible manners.In the same corpus, we apply the methodMSnoworiginally proposed by Snow et al (2005).The same training data for projections learn-6dumps.wikimedia.org/zhwiki/20131205/ing from CilinE (Section 3.3.3) is used asseed hypernym?hyponym pairs.
Lexico-syntacticpatterns are extracted from the Baidubaike corpusby using the seeds.
We then develop a logistic re-gression classifier based on the patterns to recog-nize hypernym?hyponym relations.
This methodrelies on an accurate syntactic parser, and the qual-ity of the automatically extracted patterns is diffi-cult to guarantee.We re-implement two previous distribution-al methods MbalApinc(Kotlerman et al, 2010)and MinvCL(Lenci and Benotto, 2012) in theBaidubaike corpus.
Each word is represented as afeature vector in which each dimension is the PMIvalue of the word and its context words.
We com-pute a score for each word pair and apply a thresh-old to identify whether it is a hypernym?hyponymrelation.MFurefers to our previous web miningmethod (Fu et al, 2013).
This method mines hy-pernyms of a given word w from multiple sourcesand returns a ranked list of the hypernyms.
Weselect the hypernyms with scores over a thresholdof each word in the test set for evaluation.
Thismethod assumes that frequent co-occurrence of anoun or noun phrase n in multiple sources with windicate possibility of n being a hypernym of w.The results presented in Fu et al (2013) show thatthe method works well when w is an entity, butnot when w is a word with a common semanticconcept.
The main reason may be that there arerelatively more introductory pages about entitiesthan about common words in the Web.MEmbis the proposed method based on wordembeddings.
Table 3 shows that the proposedmethod achieves a better recall and F-score thanall of the previous methods do.
It can significantly(p < 0.01) improve the F-score over the state-of-the-art method MWiki+CilinE.MEmband MCilinEcan also be combined.
Thecombination strategy is to simply merge all pos-itive results from the two methods together, andthen to infer new relations based on the transitiv-ity of hypernym?hyponym relations.
The F-scoreis further improved from 73.74% to 76.29%.
Notethat, the combined method achieves a 4.43% re-call improvement over MEmb, but the precision isalmost unchanged.
The reason is that the infer-ence based on the relations identified automatical-ly may lead to error propagation.
For example, therelation xH?
?y is incorrectly identified by MEmb.1205P(%) R(%) F(%)MWiki+CilinE80.39 19.29 31.12MEmb+CilinE71.16 52.80 60.62MEmb+Wiki+CilinE69.13 61.65 65.17Table 5: Performance on the out-of-CilinE data inthe test set.0.0 0.2 0.4 0.6 0.8 1.00.00.20.40.60.81.0RecallPrecisionl l llllllllll lll MEmb+Wiki+Ci l inEMEmb+Ci l inEMWiki+Ci l inEFigure 7: Precision-Recall curves on the out-of-CilinE data in the test set.When the relation yH?
?z from MCilinEis added, itwill cause a new incorrect relation xH?
?z.Combining MEmbwith MWiki+CilinEachievesa 7% F-score improvement over the best baselineMWiki+CilinE.
Therefore, the proposed methodis complementary to the manually-built hierarchyextension method (Suchanek et al, 2008).5.2.2 Comparison on the Out-of-CilinE DataWe are greatly interested in the practical perfor-mance of the proposed method on the hypernym?hyponym relations outside of CilinE.
We say aword pair is outside of CilinE, as long as thereis one word in the pair not existing in CilinE.
Inour test data, about 62% word pairs are outsideof CilinE.
Table 5 shows the performances of thebest baseline method and our method on the out-of-CilinE data.
The method exploiting the tax-onomy in Wikipedia, MWiki+CilinE, achieves thehighest precision but has a low recall.
By con-trast, our method can discover more hypernym?hyponym relations with some loss of precision,thereby achieving a more than 29% F-score im-provement.
The combination of these two meth-ods achieves a further 4.5% F-score improvementover MEmb+CilinE.
Generally speaking, the pro-posed method greatly improves the recall but dam-ages the precision.Actually, we can get different precisions and re-??organism??plant???Ranunculaceae???Aconitum??aconite??
?medicinal plant?
?medicine( a)  C ilinE??organism??plant???Ranunculaceae???Aconitum??aconite??
?medicinal plant?
?medicine( b )  W ik ipedia+ C ilinE??organism??plant???Ranunculaceae???Aconitum??aconite??
?medicinal plant?
?medicine( c)  E mb edding??organism??plant???Ranunculaceae???Aconitum??aconite??
?medicinal plant?
?medicine( d)  E mb edding+ W ik ipedia+ C ilinEFigure 8: An example for error analysis.
Thered paths refer to the relations between the namedentity and its hypernyms extracted using the webmining method (Fu et al, 2013).
The black pathswith hollow arrows denote the relations identifiedby the different methods.
The boxes with dottedborders refer to the concepts which are not linkedto correct positions.calls by adjusting the threshold ?
(Equation 3).Figure 7 shows that MEmb+CilinEachieves a high-er precision than MWiki+CilinEwhen their recallsare the same.
When they achieve the same preci-sion, the recall of MEmb+CilinEis higher.5.3 Error Analysis and DiscussionWe analyze error cases after experiments.
Somecases are shown in Figure 8.
We can see thatthere is only one general relation ???
(plant)?H??
???
(organism)?
existing in CilinE.
Somefine-grained relations exist in Wikipedia, but thecoverage is limited.
Our method based onword embeddings can discover more hypernym?hyponym relations than the previous methods can.When we combine the methods together, we getthe correct hierarchy.Figure 8 shows that our method loses therelation ????
(Aconitum)?
H??
????(Ranunculaceae).?
It is because they arevery semantically similar (their cosine similarityis 0.9038).
Their representations are so close toeach other in the embedding space that we havenot find projections suitable for these pairs.
The1206error statistics show that when the cosine similari-ties of word pairs are greater than 0.8, the recall isonly 9.5%.
This kind of error accounted for about10.9% among all the errors in our test set.
Onepossible solution may be adding more data of thiskind to the training set.6 Related WorkIn addition to the works mentioned in Section 2,we introduce another set of related studies in thissection.Evans (2004), Ortega-Mendoza et al (2007),and Sang (2007) consider web data as a large cor-pus and use search engines to identify hypernymsbased on the lexical patterns of Hearst (1992).However, the low quality of the sentences in thesearch results negatively influence the precision ofhypernym extraction.Following the method for discovering patternsautomatically (Snow et al, 2005), McNamee etal.
(2008) apply the same method to extract hy-pernyms of entities in order to improve the perfor-mance of a question answering system.
Ritter et al(2009) propose a method based on patterns to findhypernyms on arbitrary noun phrases.
They usea support vector machine classifier to identify thecorrect hypernyms from the candidates that matchthe patterns.
As our experiments show, pattern-based methods suffer from low recall because ofthe low coverage of patterns.Besides Kotlerman et al (2010) and Lenci andBenotto (2012), other researchers also propose di-rectional distributional similarity methods (Weedset al, 2004; Geffet and Dagan, 2005; Bhagat et al,2007; Szpektor et al, 2007; Clarke, 2009).
How-ever, their basic assumption that a hyponym canonly be used in contexts where its hypernyms canbe used and that a hypernym might be used in allof the contexts where its hyponyms are used maynot always rational.Snow et al (2006) provides a global optimiza-tion scheme for extending WordNet, which is d-ifferent from the above-mentioned pairwise rela-tionships identification methods.Word embeddings have been successfully ap-plied in many applications, such as in sentimentanalysis (Socher et al, 2011b), paraphrase detec-tion (Socher et al, 2011a), chunking, and namedentity recognition (Turian et al, 2010; Collobertet al, 2011).
These applications mainly utilizethe representing power of word embeddings to al-leviate the problem of data sparsity.
Mikolov etal.
(2013a) and Mikolov et al (2013b) further ob-serve that the semantic relationship of words canbe induced by performing simple algebraic oper-ations with word vectors.
Their work indicatesthat word embeddings preserve some interestinglinguistic regularities, which might provide sup-port for many applications.
In this paper, weimprove on their work by learning multiple lin-ear projections in the embedding space, to modelhypernym?hyponym relationships within differentclusters.7 Conclusion and Future WorkThis paper proposes a novel method for seman-tic hierarchy construction based on word em-beddings, which are trained using a large-scalecorpus.
Using the word embeddings, we learnthe hypernym?hyponym relationship by estimat-ing projection matrices which map words to theirhypernyms.
Further improvements are made us-ing a cluster-based approach in order to modelthe more fine-grained relations.
Then we proposea few simple criteria to identity whether a newword pair is a hypernym?hyponym relation.
Basedon the pairwise hypernym?hyponym relations, webuild semantic hierarchies automatically.In our experiments, the proposed method signif-icantly outperforms state-of-the-art methods andachieves the best F1-score of 73.74% on a manual-ly labeled test dataset.
Further experiments showthat our method is complementary to the previousmanually-built hierarchy extension methods.For future work, we aim to improve wordembedding learning under the guidance ofhypernym?hyponym relations.
By including thehypernym?hyponym relation constraints whiletraining word embeddings, we expect to improvethe embeddings such that they become more suit-able for this task.AcknowledgmentsThis work was supported by National Natu-ral Science Foundation of China (NSFC) viagrant 61133012, 61273321 and the National 863Leading Technology Research Project via grant2012AA011102.
Special thanks to Shiqi Zhao,Zhenghua Li, Wei Song and the anonymous re-viewers for insightful comments and suggestions.We also thank Xinwei Geng and Hongbo Cai fortheir help in the experiments.1207ReferencesYoshua Bengio, R?ejean Ducharme, Pascal Vincent, andChristian Janvin.
2003.
A neural probabilistic lan-guage model.
The Journal of Machine Learning Re-search, 3:1137?1155.Rahul Bhagat, Patrick Pantel, Eduard H Hovy, and Ma-rina Rey.
2007.
Ledir: An unsupervised algorith-m for learning directionality of inference rules.
InEMNLP-CoNLL, pages 161?170.Wanxiang Che, Zhenghua Li, and Ting Liu.
2010.
Ltp:A chinese language technology platform.
In Coling2010: Demonstrations, pages 13?16, Beijing, Chi-na, August.Daoud Clarke.
2009.
Context-theoretic semantics fornatural language: an overview.
In Proceedings ofthe Workshop on Geometrical Models of NaturalLanguage Semantics, pages 112?119.
Associationfor Computational Linguistics.Ronan Collobert, Jason Weston, L?eon Bottou, MichaelKarlen, Koray Kavukcuoglu, and Pavel Kuksa.2011.
Natural language processing (almost) fromscratch.
The Journal of Machine Learning Re-search, 12:2493?2537.Paramveer Dhillon, Dean P Foster, and Lyle H Ungar.2011.
Multi-view learning of word embeddings viacca.
In Advances in Neural Information ProcessingSystems, pages 199?207.Richard Evans.
2004.
A framework for named entityrecognition in the open domain.
Recent Advances inNatural Language Processing III: Selected Papersfrom RANLP 2003, 260:267?274.Ruiji Fu, Bing Qin, and Ting Liu.
2013.
Exploitingmultiple sources for open-domain hypernym discov-ery.
In EMNLP, pages 1224?1234.Maayan Geffet and Ido Dagan.
2005.
The distribution-al inclusion hypotheses and lexical entailment.
InProceedings of the 43rd Annual Meeting on Associa-tion for Computational Linguistics, pages 107?114.Association for Computational Linguistics.Marti A Hearst.
1992.
Automatic acquisition of hy-ponyms from large text corpora.
In Proceedings ofthe 14th conference on Computational linguistics-Volume 2, pages 539?545.
Association for Compu-tational Linguistics.Lili Kotlerman, Ido Dagan, Idan Szpektor, and MaayanZhitomirsky-Geffet.
2010.
Directional distribution-al similarity for lexical inference.
Natural LanguageEngineering, 16(4):359?389.Alessandro Lenci and Giulia Benotto.
2012.
Identify-ing hypernyms in distributional semantic spaces.
InProceedings of the Sixth International Workshop onSemantic Evaluation, pages 75?79.
Association forComputational Linguistics.Paul McNamee, Rion Snow, Patrick Schone, and JamesMayfield.
2008.
Learning named entity hyponymsfor question answering.
In Proceedings of theThird International Joint Conference on NaturalLanguage Processing, pages 799?804.Tomas Mikolov, Kai Chen, Greg Corrado, and JeffreyDean.
2013a.
Efficient estimation of word rep-resentations in vector space.
arXiv preprint arX-iv:1301.3781.Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig.2013b.
Linguistic regularities in continuous spaceword representations.
In Proceedings of NAACL-HLT, pages 746?751.George A Miller.
1995.
Wordnet: a lexicaldatabase for english.
Communications of the ACM,38(11):39?41.Andriy Mnih and Geoffrey E Hinton.
2008.
A s-calable hierarchical distributed language model.
InAdvances in neural information processing systems,pages 1081?1088.Rosa M Ortega-Mendoza, Luis Villase?nor-Pineda, andManuel Montes-y G?omez.
2007.
Using lexicalpatterns for extracting hyponyms from the web.
InMICAI 2007: Advances in Artificial Intelligence,pages 904?911.
Springer.Alan Ritter, Stephen Soderland, and Oren Etzioni.2009.
What is this, anyway: Automatic hypernymdiscovery.
In Proceedings of the 2009 AAAI SpringSymposium on Learning by Reading and Learningto Read, pages 88?93.HP Ritzema.
1994.
Drainage principles andapplications.Erik Tjong Kim Sang.
2007.
Extracting hypernympairs from the web.
In Proceedings of the 45th An-nual Meeting of the ACL on Interactive Poster andDemonstration Sessions, pages 165?168.
Associa-tion for Computational Linguistics.Sidney Siegel and N John Castellan Jr. 1988.
Non-parametric statistics for the behavioral sciences.McGraw-Hill, New York.Rion Snow, Daniel Jurafsky, and Andrew Y. Ng.
2005.Learning syntactic patterns for automatic hypernymdiscovery.
In Lawrence K. Saul, Yair Weiss, andL?eon Bottou, editors, Advances in Neural Informa-tion Processing Systems 17, pages 1297?1304.
MITPress, Cambridge, MA.Rion Snow, Daniel Jurafsky, and Andrew Y. Ng.
2006.Semantic taxonomy induction from heterogenousevidence.
In Proceedings of the 21st InternationalConference on Computational Linguistics and 44thAnnual Meeting of the Association for Computation-al Linguistics, pages 801?808, Sydney, Australia,July.
Association for Computational Linguistics.1208Richard Socher, Eric H Huang, Jeffrey Pennin, Christo-pher D Manning, and Andrew Ng.
2011a.
Dynam-ic pooling and unfolding recursive autoencoders forparaphrase detection.
In Advances in Neural Infor-mation Processing Systems, pages 801?809.Richard Socher, Jeffrey Pennington, Eric H Huang,Andrew Y Ng, and Christopher D Manning.
2011b.Semi-supervised recursive autoencoders for predict-ing sentiment distributions.
In Proceedings of theConference on Empirical Methods in Natural Lan-guage Processing, pages 151?161.
Association forComputational Linguistics.Fabian M Suchanek, Gjergji Kasneci, and GerhardWeikum.
2008.
Yago: A large ontology fromwikipedia and wordnet.
Web Semantics: Sci-ence, Services and Agents on the World Wide Web,6(3):203?217.Idan Szpektor, Eyal Shnarch, and Ido Dagan.
2007.Instance-based evaluation of entailment rule acqui-sition.
In Proceedings of the 45th Annual Meeting ofthe Association of Computational Linguistics, pages456?463, Prague, Czech Republic, June.
Associa-tion for Computational Linguistics.Joseph Turian, Lev Ratinov, and Yoshua Bengio.
2010.Word representations: a simple and general methodfor semi-supervised learning.
In Proceedings of the48th Annual Meeting of the Association for Compu-tational Linguistics, pages 384?394.
Association forComputational Linguistics.Julie Weeds, David Weir, and Diana McCarthy.
2004.Characterising measures of lexical distributionalsimilarity.
In Proceedings of the 20th internation-al conference on Computational Linguistics, page1015.
Association for Computational Linguistics.1209
