Squibs and DiscussionsA Delayed Syntactic-Encoding-based LFGParsing Strategy for an IndianLanguage BanglaProba l  Sengupta*Indian Statistical InstituteB.
B. Chaudhur i *Indian Statistical Institute1.
IntroductionIn this squib, we propose a technique aimed at efficient computer implementation ofLFG-based parsers for Indian languages in general and Bangla (Bengali) in particular.
(For the LFG formalism, see Kaplan and Bresnan \[1982\].)
The technique may also beuseful for other languages having similar properties.Indian languages are mostly nonconfigurational nd highly inflectional.
Gram-matical functions (GF's) are predicted by case inflections (markers) on the head nounsof noun phrases (NPs) and postpositional particles in postpositional phrases (PPs).However, in many cases the mapping from case marker to GF is not one-to-one.The classical technique for non-configurational syntactic encoding of GF's (Bresnan1982b) therefore requires a number of alternations to be thrown in to handle thisphenomenon.
The resulting nondeterminism in the parser implementation leads to anon-efficient unification component.
The problem here, however, is not of unboundedfunctional uncertainty (described, with proposed solutions, in Kaplan, Maxwell, andZaenen \[1987\], Kaplan and Maxwell \[1988\], and Kaplan and Zaenan \[1990\]), but rather,one of disjunctive constraint satisfaction bounded within the matrix.
Disjunctive con-straint satisfaction leads to a degradation of efficiency of the unification componentof LFG, as has been pointed out in Knight (1989) and Maxwell and Kaplan (1991).
1Acloser look at the languages reveals that most disjunctions do not exist if an a prioriknowledge of the verb (which is generally at the end of the sentence, since Indianlanguages are mostly verb final and the verb is the last lexeme encountered in a left-to-right scan of the parser) is available.
Here we propose a technique that uses thisfact to reduce alternations in syntactic encoding.
Our method is based on a delayedevaluation of syntactic encoding schema.
We treat the points of syntactic encodingof noun phrases as forward references that are temporarily maintained in a symboltable for later binding.
A new metavariable, augmentation of the scope of the Locateoperator, and a special type of schema (called m-structure) to be projected by the verbare some of the salient features of our technique.2.
Delayed Syntactic EncodingAs suggested in Bresnan (1982a, 1982b) and Mohanan (1982), a fiat constituent struc-ture for a Bangla sentence S is given by the rule in (1), where constituent NPs and/or* Computer Vision and Pattern Recognition Unit, Indian Statistical Institute, 203 B. T. Road, Calcutta 700035.
India.
E-mail: sprobal@isical.ernet.in; bbc@isical.ernet.in1 Maxwell and Kaplan (1991) also propose a method to minimize unification overhead.
(~) 1997 Association for Computational LinguisticsComputational Linguistics Volume 23, Number 2Table 1Case markers and their possible grammatical functions.
TheGEN case marker normally marks a genitive qualifier of a noun.However, for certain verb forms (for example, ones inpseudopassive oice), it also marks the subject.Marker Name SUBJ OBJ IOBJ ADJUNCTNone NULL ?
?
?
?+ke, +re DATive ?
?
?+e, +te OBLique ?
?
?
?+er GENitive ?PPs may freely permute among themselves.
2S ~ NP* V(T (l CASE))=l ('~(T (l CASE))=lNP*(~ CASE))=~ (1)(2)In (1), syntactic encoding of GF's is carried out using the simplified encodingschemata (2) annotating the NPs (Bresnan 1982b, 297-299).
In the implementationdomain, schemata (2) works quite well if the mapping from case marker to function isnearly one-to-one.
Unfortunately, as shown in Table 1, many modern Indian languageslack this property--almost every marker has many-to-one mapping.
The classical wayof handling such situations is to use alternation or disjunction.
However, in the contextof an a priori lexical knowledge of the verb, the alternations cease to exist in mostcases.
To express this more formally, let G = {gl,g2 .
.
.
.  }
be the set of relevant GF's, C ={cl, c2,...} be the set of NP case markers, and cToG be a mapping from case markersto GF's, such that cToG(c), c E C is (are) the grammatical function(s) predictable fromc.
In our case, cToG(c) is actually a finite disjunction gil V gi2 V ... of functions.
If fNis the f-structure of an NP of a sentence S with f-structure fs and the case markeron the head noun of the NP is c, the semantics of schemata (2) annotating the NPis (fs cToG\[c\]) =fN, where "=" denotes unification.
Since cToG\[c\] is a disjunction, in aparser implementation, it effectively multiplies out to IcToG(c)l nondeterministic choicesfor the functional role played by the fN in fs.
If, in the ultimate analysis, the NP isfound to play the functional role g in fs, the constraints et in (3), projected by theverb, must have been satisfied:(Is g CASE) = c (3)Ai (fs g qi) = viwhere qi are different normal agreement features (like NUMBer, PERSon, etc.)
and/orother semantic agreement features (like ANIMacy, etc.).
We shall call the schema (3)the agreement schema for the function g projected by the verb.
Observations showthat in most well-formed sentences, the agreement schema of the verb for any functiong is satisfied by at most one constituent NP of the sentences, provided some order ofprocessing the agreement schema of different GF's is maintained.
The mapping cToG istherefore nearly one-to-one in the context of the agreement schema of the verb and the2 The PPs have been kept out of the present discussion.346Sengupta nd Chaudhuri Delayed Syntactic Encodingagreement schema may serve as test criteria for selecting rammatical functions frominternal properties of NPs.
The parser must ensure evaluation of an encoding schemataof a constituent NP in the context of the agreement schema of the verb, somewhat likehandling a forward reference (where an item referred to is defined later than the placeswhere it has been referred to).
The trick is to delay the evaluation of encoding schemaof constituent NPs till an appropriate moment, while maintaining a persistent datastructure, such as a symbol table, to keep track of the points of forward reference(at which actual function names get instantiated) and their local environments (theinternal f-structure of the constituent NPs).3.
The Proposed Solution TechniqueIn this section, we provide the basic solution technique for simple sentences (i.e.,consisting of a single verb only) in two parts.3.1 Solution Part I: Initiation of Forward ReferenceA forward reference discussed in the previous ection is encountered during Locate-ing the left-hand side of a schemata like (2) while processing an NP.
In our delayedencoding proposal, the (modified) Locate operation should leave the "name" of thefunctional role played by the NP as "underspecified."
To force the Locate operator tobehave in this manner, we propose:,2.The introduction of a new type of underspecification metavariable: ?The modification of encoding schemata (2) to schemata (4):(T ?)
=~ (4)The ?
metavariables generate placeholders for hitherto anonymous grammaticalfunctions, which we shall call nameholders, and denote them by actual name variablesnl, n2,.... Locate-ing of schemata (4) creates uch a nameholder (n, say) in the scopeof the functional placeholder (f, say) for the T metavariable and simultaneously storesthe pair (f, n) in the symbol table.
Locate-ing a construct like (f n) where both f andn are already defined placeholder and nameholder, espectively, returns (a pointer to)the "value" part of the pair in the f-structure (pointed at by)f,  whose name is (pointedat by) n. The extended semantics of Locate is therefore:Locate\[d\], where d has the form (x y).
Let f be the reference to an f-structureLocate\[x\].
If y is a ?
metavariable, let n be a new nameholder for the metavariable.An anonymous lot is created in the scope off ,  and n is made to point to it.
Simul-taneously, the pair (f, n) is entered as a new entry of the symbol table.
If, however, yis a nameholder n, Locate returns the value field of the pair in f  whose name field isheld by n.With this, the semantics of Locate with reJspect o the form in (5), which is theleft-hand side of schemata (4), may be pictorially represented as in Figure 1.
(T ?)
(5)3.2 Solution Part II: Name Binding of Forward ReferencesThe next point to be considered is binding actual function names to nameholders.We assume that the agreement schema for a function g may select he structure thatsatisfies the constraints.
For this, the agreement schema must be handled in a different347Computational Linguistics Volume 23, Number 2fFigure 1Semantics of Locate with respect to (5).Symbol Tablemanner than normal projection schema.
We choose the notation (# g ql) --- vl forone agreement schemata for the function g. We shall call the forms (# g qi) -= v iametastructure or m-structure.
M-structure schema are projected by the main verb ofa sentence.
A symbol table entry (f, n) satisfies an m-structure schemata (# g qi) = viprojected by the verb V of a sentence S, i f f  is the f-structure of S, and the structure (f n),where n is treated as an atom, contains the pair \[qi vi\].
If a symbol table entry satisfiesall m-structure schema for a function g, by our proposed scheme, the nameholder nthat points to the entry is bound to the function name g. Also, the satisfying symboltable entry is deleted.Testing of symbol table entries with m-structure schema and resulting binding ofnameholders to actual function names are carried out by a newly introduced operatorSearch.
The operator Search takes the entire set m-structure schema for a particularGF and carries out the process described in the previous paragraph.
If more than onesymbol table entry satisfies the m-structure schema for a particular function g, the oneearlier in order of occurrence is chosen.
The relative evaluation (by operating withSearch) order for the sets of m-structure schema for different functions is motivatedby the default ordering of phrases in a sentence in the target language.
In Bangla forexample, the default ordering is SUBJ-IOBJ-OBJ.
Thus, the test for SUBJ is carried outfirst, followed by IOBJ, and OBJ, if any.The final solution technique therefore involves first evaluating all f-structureschema, including those with underspecification metavariables annotating the childrennodes of an S-dominated c-structure tree.
This would generate symbol table entriescorresponding to NPs annotated with the ?
schema.
Next, the m-structure schema ofthe main verb are operated on with the Search operator in the default phrasal orderfor the language.
A sentence is well formed if and only if all the m-structure schemafor the verb are satisfied and all nameholders in the scope of the sentence are boundto names (i.e., at the end, the symbol table is empty).
The evaluation process naturallysatisfies the uniqueness property for sentence-level grammatical functions.Regarding the relative evaluation order of f- and m-structure schema, the generalprinciple is "all f-structure schema are evaluated before any m-structure schemata isevaluated (i.e., fed to the Search operator).
"Example 1Let us consider the Bangla simple sentence below, in which the NPs have been under-lined.a'pni a'ma'ke ekt'a' bai dilenYou(honored)-NULL I-DAT one-DEF book-NULL give-3p-hon-PASTYou (honored) will give me a book348Sengupta nd Chaudhuri Delayed Syntactic Encodingc) bai Na) a'pni N (T PERS) = 3,( T HON) = 1,( T ANIM) ---- +,(T PRED) = 'you',(T CASE) = NULLd) dilen(T PERS) = O,(T HON) = 0,(T ANIM)=-(T PRED) = 'book',(T CASE) = NULLFigure 2Lexical entries of head nouns and verbs inb) a'ma'ke N (T PERS) = 1,(T HON) = O,( T ANIM) = +(T PRED) = 'I',(T CASE) = DATV (T TENSE) = PAST(;f PERS) = 2(T nON) = 1(T PRED) = ' give((SUBl), (OBJ), (IOBJ))'(# SUBI PERS) = 2(# SUBI HON) = 1(# SUBI ANIM) = +(# SUBJ CASE) = NULL(# IOBJ ANIM) = +(# IOBI CASE) = DAT(# OBJ ANIM) ---- -(# OBJ CASE) = NULLBangla sentence a'pni a" make ekt'a" bai dilen.fsFigure 3H 1n 2n~fafbANIM +CASE NULLPERS 2HON 1PRED 'You IANIM + 1 CASE DATPERS 1PRED 'I'I ANIM - \]DEF YESCASE NULLPERS 3PRED 'book'TENSE PASTPRED 'give(.. "1'F-structure of Bangla sentence a'pni a'ma'ke kt'a' bai dilen.Symbol Tablefs I n, fs n2fs n3Any permutation of the underlined phrases and the verb should give identicalresults.
The lexical entries of the head nouns and the verb are given in Figure 2.
Thefeature HON is a three-valued scalar, 1 for honored, 0 for casual, and -1  for intimate.Since Bangla has no subject-verb agreement based on number, the NUM feature hasbeen omitted.
3The f-structure fs  of the sentence before processing the m-structure of the verbappears as in Figure 3 and the final solution is as given in Figure 4.
The f-structuresfa, fb, and fc are for the NPs in order.3 Alternately, since Bangla verbs are not marked for number, the NUM feature is omitted in agreement.349Computational Linguistics Volume 23, Number 2SUBJANIMCASEPERSHONPRED+NULL21'You'IOBIANIMCASEPERSPRED+DAT1firOB\]ANIM -DEF YESCASE NULLPERS 3PRED '~ok'TENSE PASTPRED 'give((SUBJ), (OBJ)(IOBJ))'IsFigure 4Final solution for Bangla sentence a'pni a'ma'ke kt'a" bai dilen.4.
DiscussionA comparison of our technique and other feature-based parsing mechanisms may bein order.
We provide brief comparisons with two such formalisms.
In Rambow (1994),a V-TAG parser (a Tree Adjoint Grammar extended to handle scrambling and otheraspects) is implemented through the { }-BEPDA, 4 which uses sets of auxiliary trees asunfulfilled nominal subcategorization.
More recently, Johnson and Dorre (1995) havepresented a framework for constraint coroutining to deal with linguistic constraintsthat cannot be effectively resolved during parsing at the location in which they aremost naturally introduced.A properly designed NLP platform for Indian languages must come with an effi-cient morphosyntactic unit for parsing words into their constituent morphemes wherelexical projections of words can be obtained from projections of individual morphemes.At present, we have a fully implemented morphosyntactic lexical subsystem for Banglabased on a formalism suitable for an LFG-based NLP platform, as proposed in Sen-gupta and Chaudhuri (1993) and Sengupta (1994).
We have implemented the operatorsLocate (modified as suggested in the text), Merge (as an object-oriented unificationmethod), Include, and Search, and are in the process of creating an effective object-oriented parser for c-structure generation.We tested our formalism on a sample of about 250 simple and complex sentencespicked from newspaper clippings.
Though phrasal orderings were quite random, al-most all simple sentences in active voice (constituting about 57% of the samples) werecorrectly parsed.
The method has been extended to take care of a class of complex sen-tences (with dependent clause "embedded" within the matrix) and "chained" clausesas described in the results (not LFG based) in Sengupta (1994).4 A multiset version of Bottom-up Embedded Push-down Automata.350Sengupta nd Chaudhuri Delayed Syntactic EncodingReferencesBresnan, J.
1982a.
Passive in lexical theory.In J. Bresnan, editor, The MentalRepresentation f Grammatical Relations.
MITPress, Cambridge, MA, pages 3-86.Bresnan, J.
1982b.
Control andComplementation.
In J. Bresnan, editors,The Mental Representation f GrammaticalRelations.
MIT Press, Cambridge, MA,pages 282-390.Johnson, M. and J. Dorre.
1995.Memorization of Coroutined Constraints.In Proceedings ofthe 33rd Annual Meeting,pages 100-107, Cambridge.
Associationfor Computational Linguistics.Kaplan, R. M. and J. Bresnan.
1982.
LexicalFunctional Grammar: A Formal Systemfor Grammatical Representation.
IJ.
Bresnan, editor, The MentalRepresentation f Grammatical Relations.
MITPress, Cambridge, MA, pages 173-281.Kaplan, R. M., J. T. Maxwell, andA.
Zaenen.
1987.
Functional Uncertainty.In The CSLI Monthly, Center for the Studyof Language and Information, StanfordUniversity.Kaplan, R. M. and J. Maxwell.
1988.
AnAlgorithm for Functional Uncertainty.Technical Paper No.
P88-00084, SystemsSciences Laboratory, XEROX PARC.
(Alsoin Proceedings ofCOLING-88, Budapest,pages 297-302.
)Kaplan, R. M. and A. Zaenen.
1990.Long-distance Dependencies, ConstraintStructure and Functional Uncertainty InM.
Baltin and A. Kroch, editors, AlternateConceptions ofPhrase Structure.
ChicagoUniversity Press, Chicago.Knight, K. 1989.
Unification:A Multidisciplinary Survey.
ACMComputing Surveys 21(1):93-124.Maxwell, J. T. and R. M. Kaplan.
1991.
AMethod for Disjunctive ConstraintSatisfaction.
In M. Tomita, editor, CurrentIssues in Parsing Technology.
KluwerAcademic Publishers, pages 173-190.Mohanan, K. P. 1982.
Grammatical Relationsand Clause Structure in Malayalam.
InJ.
Bresnan, editor, The MentalRepresentation f Grammatical Relations.
MITPress, Cambridge, MA, pages 504-589.Rainbow, O.
1994.
Formal and ComputationalAspects of Natural Language Syntax.
Ph.D.dissertation, University of Pennsylvania.Sengupta, P. and B.
B. Chaudhuri.
1993.
AMorpho-Syntactic Analysis Based LexicalSub-System.
International Journal of PatternRecognition and Artificial Intelligence7(3):595--619.Sengupta, E 1994.
On Lexical and SyntacticProcessing of Bangla Language by Computer.Ph.D.
thesis, Indian Statistical Institute.351
