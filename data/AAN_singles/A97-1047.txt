An English to Turkish Machine Translation SystemUsing Structural MappingCigdem Keyder  TurhanDept .
of Computer  Eng ineer ingMidd le  East  Techn ica l  Un ivers i tyAnkara  06531, Turkeyc igdem@ceng,  metu .
edu .
t rAbst rac tThis paper describes the design and imple-mentation of an English-Turkish machinetranslation (MT) system developed as apart of the TU-Language project supportedby a NATO Science for Stability Projectgrant.
The system uses a structural trans-fer approach in translating the domain ofIBM computer manuals.
The general de-sign of the translation system and a de-tailed description of the transfer compo-nent is presented in this paper.1 In t roduct ionThe TU-Language project sponsored by the NATOScience for Stability Programme was started in 1994to establish computational foundations for the natu-ral language processing research on the Turkish lan-guage with the collaboration of the Computer Engi-neering Department of Middle East Technical Uni-versity, the Computer Science Department of BilkentUniversity and ttalici Computing, Inc.
The projectattempts to perform extensive research on Turkishwhich will eventually lead to the development ofan English to Turkish machine translation system,Turkish language tutorial system, a Turkish dictio-nary and other software tools to be used in furtherresearch.In this paper, some issues in translating from En-glish to Turkish languages, the translation domain,the outline of the machine translation system un-der development, and a detailed description of thetransfer component will be presented.2 Turk i sh  LanguageMorphology and syntax of Turkish are very differ-ent from English, therefore, the formalism used torepresent English texts has to be altered signifi-cantly for Turkish text representation.
The Turk-ish language is characterized as a head final lan-guage where the modifier/specifier always precedesthe modified/specified.
This characteristic also af-fects the word order of the sentences which can bedescribed as SOV where the verb is positioned at theend.Also, when compared to other languages, Turkishrelies more on overt case markings which mark therole of the argument in a sentence.
The case mark-ings enables Turkish to have a relatively free word-order property where every variation in the wordorder in a sentence results in a different meaning.In the MT system being developed, these andother different characteristics of the Turkish lan-guage are handled in the transfer and generationcomponents.3 T rans la t ion  DomainAs more and more computer companies enter theTurkish market, a growing demand for Englishto Turkish translation of computer manuals hasemerged.
Other machine translation systems havealso chosen the domain of computer manuals fortheir translation systems because of the relativelyunambiguous and narrow sublanguage used (Tsut-sumi, 1986).
Also, in his research, Nasukawa (Na-sukawa, 1993) concluded that the statistical anal-ysis of the text in IBM computer manuals showedthat 92.6 percent of the words in a computer man-ual are used in the same word sense which wouldsignificantly reduce the problem of lexical ambiguityresolution.
Another advantage is that the materialin a computer manual is observed to be written asclearly as possible in a relatively narrow area whichwill hopefully ease the difficult job of understandingand representing the input sentence.As a result of these observations, the TU-Language project team has chosen the IBM com-puter manuals as their translation domain..4 Mach ine  Trans la t ion  SystemThe English to Turkish MT system under develop-ment uses a structural transfer approach which hasthe following components.
First, the English sen-tence retrieved from the IBM manual is analyzed320by the CLE parser (Alshawi and Moore.
1992) togenerate an intermediate representat.ion.
This rep-resentation is mapped onto a recursively embeddedcase frame which is then input to the transfer mod-ule.
The transfer module maps the input case fi'ameinto the target case frame which is then filtered tobe transformed into the required input format ofthe target language generator.
Lastly, the gener-ator maps the Turkish case frame into the Turkishsentence which is then post-edited by a human trans-lator to get.
an intelligible and accurate translation.4.1 Analys is  PhaseFor analyzing the English input, the (:;ore LanguageEngine developed by the SRI Cambridge ComputerScience Research (:entre was used (Alshawi andMoore: 1992).
The CLE system has been trainedto meet the lexical, syntactic and semantic demandsof the IBM corpus.
In CLE, explicit intermediatelevels of linguistic representation are used in the dif-ferent phases of the analysis.
Following the syntac-tic and semantic analysis/synthesis which uses theunification-based approach, the quasi logical form(QLF) is developed.
QLF can be described as a con-textually seT~silive logical form.
Since the CLE sys-t.em produces various parses for an input sentence,the best parse is filtered by the system which con-veys the intended meaning of the sentence.
Then thechosen representation is mapped into a case frame.4.2 T rans fer  PhaseExperience with previous ystems using the interlin-gua technique showed the significant complexity ofextracting and representing deep meaning of a natu-ral language text (Goodman and Nirenburg, 1991).Another major difficulty encountered with this ap-proach is that the language specific attributes nee-essary to define the translation equivalents in thelexical and structural evels are neutralized in theinterlingual representation thereby complicating thetask of generation considerably.A similar problem occurred with systems using thetransfer approach with deep semantic analysis suchas the EUROTRA project (Johnson et al, 1985).Such systems were observed to be difficult to developa.nd maintain.
To avoid these problems, the MTsystems developed recently generally chose to usethe straightforward transfer approach which relieson various types of lexical, syntactic information anda limited use of semantic analysis (Tsntsumi, 1986).The system being developed as a part of the TU-Language project also chose the structural .ransferapproach with a minimal amount of semantic anal-ysis.
T'he transfer phase of our MT systeln per-forms structural transfer between the respective caseframes of the analysed English sentence and target-ted Turkish output.
In a top-down manner, thetransfer lnodule tra.nsfbrms the English case frameor adds new infbrmatioll to the 'turkish case framein order to generate the equivalent Turkish nounphrase, clause or sentence with the aid of a trans-fer dictionary, and the transfer ules.The English and Turkish case frames forclauses/sentences are generally similar to each otherwith differences seen in the sentence's mood and theverb's aspect and modality.
Some information otextracted in the analysis phase such as the sentenceform, clause type.
role, etc.
have to be determinedin the beginning of the transfer phase and added tothe Turkish case frame.
An example sentence andparts of the corresponding English and Turkish caseframes can be seen below:(1) John must show the program works.John goster+tns program+gen calis+t.ns'John progralnin calistigini gostermeli'.English Case Frame:-mood declarativevoice activerootverb nlodsuhjargsobjshow\]mustJ110111-moodvoiceverba,rgsTurkish Case Frame:"sform finitectype predmood necessvoice activeroot.verb \[tellssubja.rgsobjgoster\]pres j\[John\]"rolesforn\]ctypenloodvoicew?rba.rgsJohn\]declarativeactiveroot work\]tense pres j\[subj \[nom p o r m\]\]factpartpreddeclactiveroot ca\]is\]tens pres /asp aor _1The case frames representing tile noun phrases ofthe English and Turkish sentences vary from each321other in a number of ways because the generatorrequires additional information to form an equiv-alent Turkish representation.
For example, in thesentences below,(2) That man writes programs.O adam yaz+pres program'O adam program yazar.
'(3) Programs were written for the project.Program+pl yaz+pass+pst icin proje'Proje icin progralnlar yazildi.
'Even though the word program is used in the plu-ral form in both of the English sentences, the trans-fer module needs to determine the specificity of thenoun phrase in question and send it to the generatorwhich will accordingly output either the singular orplural form of the noun.Some of the complex transfer issues presented byLindop and Tsujii (Lindop and Tsujii, 1991) alsoarise in our machine translation system.
These is-sues are handled with special transfer rules andtransfer lexicon entries.
In the beginning of thetransfer phase, the exception rules are tested andeventually a checklist containing the problematiccomponents of the input is generated.
Some ex-amples of these components are verbs which changemeaning when used with different attributes, pas-sive, existential or conditional sentences, relativeclauses, idiomatic use of prepositional phrases, etc.As the transfer process continues, the checklist isreferenced in order to block the default translationand handle the exceptions.
The rest of the mappingproceeds in a straightforward fashion until all of theinformation in the source case frame is mapped ontothe target case frame.Some of the complex transfer issues handled in thetransfer phase will be presented in this section.First,a significant amount of head-switching is performedto resolve the lexical and structural differences inthe English and Turkish languages.
In the examplebelow,(4) attempted executiontesebbus calistirma'calistirma tesebbusu : execution attempt'execution is the head noun of the English phrasewhereas tesebbus (attempt) becomes the head nounin the target phrase.Another problem encountered in the transfer mod-ule is complex lexical transfer with category changessuch as the example given below:(5) John gave a weak cough.John oksur+pst hafifce'John hafifce oksurdu.
:John coughed weakly.
'The adjective weak has to be mapped onto an ad-verb hafifce and the verb give's default translationinto the verb ver has to be blocked when it is usedwith the dependent noun cough.
Consequently, thefitting target verb is found to be oksurmek.Also, dependent on the verb, an object of anEnglish sentence may be mapped to different casemarkings in Turkish.
(6) I hit the man.vur+pst+pers adam+dat'Adama vurdum'(7) I shot the man.vur+pst+pers adanl+acc'Adami vurdum'As seen above,the object of the sentence *be man.
ismapped either to a.n accusative marked object adamior a dative marked indirect object adama in the tar-get sentence.There are also some complex structural changesencountered uring transfer.
An English clausemight be mapped into a Turkish gerund:(8) While he was working+ken calis+tns'Calisirken'Another example of a structural transforlnationencountered can be seen in active/passive forms ofsentences.
In the English passive tbrm, the surfacesubject can correspond to both the direct object orthe indirect object of the active form.
Yet in Turk-ish, the surface subject of a passive sentence can onlybe the direct object of the active form.
The differ-ence between the two sentences i  distinguished bythe order of the phrases in the target sentence asseen in the example below:(9) This program was given to the user.Bu program ver+pas+pst kullanici+dat'Bu program kullaniciya verildi.
'(10)The user was given the program.Kullanici+dat ver+pas+pst program'Kullaniciya program verildi'In both of the Turkish translations, the sur-face subject is program whereas the surface subjectchanges in the English inputs.The order of the words in the output sentences aredetermined by the topic and focus features of the tar-get case frame which are mapped during the transferphase.
In the first sentence, the topic is found to beprogram, and the focus is kullanici, whereas in thesecond sentence the topic and the focus are kullaniciand program., respectively.The transfer module also attacks problelns relatedto sentential transformation such as the ones re-quired in the example below:(11)There are programs in the disk.var program+pl disk+loc'Diskte progralnlar var'322Parts of the case frames for the sentences aboveare as follows:English Case Frame:-mood declvoice active\[ verb root tensargsadjsTurkish-sformctypenloodvoiceverbsubjarg2placepresnolll ent i ty \ ] \ ]det there J /\[nora program\]j\[nom disk\]\]argsCase Frame:finiteexist.declactiveroottensaspsubjto -bepresaorl ro r ,q\[disk\]\] adjs placeOther problems encountered in the transfer phaseare the lexical gaps, idiomatic uses of phrases, andlexical disambiguation by syntactic or semantic on-tent.With all the complex transfer issues resolved inthe transfer phase, the corresponding Turkish caseframe is generated which is then translated froln itsProlog notation into the Lisp notation required bythe generation module.4.3 Generat ion  ModuleThe generation component of the system is based onthe GenKit environment developed at the CarnegieMellon University - Center for Machine Transla-tion which provides facilities for a unification-basedgeneration grammar environment (Hakkani et al,1996).As input, the generator receives a recursively em-bedded target case frame representation where allthe lexica.1 choices have been made, and producesthe Turkish sentence conveying the same meaning.Since Turkish has complex agglutinative wordforms, a separate morphological generator handlesthe proper morpheme selection, vowel harmony, etc.to produce the surface form of the generated words.The Turkish sentence output by the generator ispost-edited by a. human translator to ensure accu-racy and intelligibility of the target sentence.5 Conc lus ionIn this paper, an English to Turkish MT system us-ing the structural transfer approach with a limitedamount of semantic analysis has been described.The structural transfer method which uses the re-cursively embedded case frames as intermediate r p-resentation proved to be very suitable in the applica-tion of English to Turkish machine translation.
Thegreatest difficulty encountered with this approach ishandling the complex transfer issues that arise dueto the differences between the two languages.Hopefully, the introduction of the English to Turk-ish MT software into the Turkish market will meetthe growing demands for accurate, fast and high-quality translations in the field of computer manu-als.
Depending on the success of the system, thelexicons and the transfer module might be modifiedto tackle other translation domains in the future.6 AcknowledgementsHelpful comments of Asst.Prof Cem Bozsahin andAssoc.Prof.Mehmet R.Tolun are gratefully acknowl-edged.
This work has been supported by the NATOScience for Stability Project TU-LANGUAGE.ReferencesHiyan Alshawi and Robert C. Moore.
1992.
In-troduction to the CLE.
In Hiyan Alshawi, editor,The Core Language Engine.
The MIT Press, Cam-bridge, Massachusetts.Kenneth Goodman and Sergei Nirenburg ed.
1991.The KBMT Project: A Case Study in Knowledge-Based Machine Translation.
Morgan Kaufmann,San Ma.teo, C, alifornia.Dilek Z. Hakkani, Kemal Oflazer and Ilyas Cicekli.1996.
Tactical Generation in a Free ConstituentOrder Language.
Ill Proceedings of 8th Inter-national Workshop on Natural Language Gener-ation, Sussex, UK, June.Rod Johnson, Maghi King and Lois Tombe.
1985.EUROTRA: A Multilingual System Under Devel-opment.
In Computational Linguistics, 11:155-169.Jeremy Lindop and Jun-ichi Tsujii.
1991.
Com-plex Transfer in MT: A Survey of Examples.CCL/UMIST Report No:91/5.Tetsuya Nasukawa.
1993.
Discourse Constraint inC, omputer Manuals.
In Proceedings of the TMI1993, pages 183-193.Taijiro Tsutsumi.
1986.
A Prototype'  English-Japanese Machine Translation System for Trans-lating IBM C, olnputer Manuals.
In Proceedings ofColing 1986, pages 646-648.323
