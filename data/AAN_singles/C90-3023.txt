Causal and Temporal Text Analysis:The Role of the Domain ModelRalph GrishrnanComputer Science DepartmentNew York UniversityNew York, NY 10003, USAgrishman@nyu.eduTomasz Kslezyk*Human Interface LabMicroelectronics and Computer Technology Corp.Austin, TX 78759, USAksiezyk@ mcc.comOverviewIt is generally recognized that interpretingnatural language input may require access todetailed knowledge of the domain involved.
Thisis particularly tree for multi-sentence discourse,where we must not only analyze the individualsentences but also establish the connectionsbetween them.
Simple semantic onstraints - -  anobject classification hierarchy, a catalog of mean-ingful semantic relations - -  are not sufficient.However, the appropriate structure for integratinga language analyzer with a complex dynamic(time-dependent) model --- one which can scale upbeyond 'toy' domains - -  is not yet well under-stood.To explore these design issues, we havedeveloped a system which uses a rich model of areal, nontrivial piece of equipment in order toanalyze, in depth, reports of the failure of thisequipment.
This system has been fully imple-mented and demonstrated on actual failure reports.In outlining this system over the next few pages,we focus particularly on the language analysiscomponents which require detailed domainknowledge, and how these requirements haveaffected the design of the domain model.The DomainThe texts we are analyzing are CASREPs:reports of equipment failure on board U.S.Navyships.
We have restricted ourselves to one subsys-tem, the starting air system, which generatescompressed air for starting gas turbines.
Withnearly 200 functional components, it is complex* Work performed while at the Computer Science Dept.,New York Universityenough to raise many of the problems of real sys-tems, yet still remain within the range of explora-tory model-building efforts.
We have collected 36reports concerning this subsystem.
A typicalreport isWhile diesel was operating with SAC\[starting air compressor\] disengaged, theSAC LO \[lubricating off\] alarm sounded.Believe the coupling from diesel to SAClube oil pump to be sheared.
Pump willnot turn when engine jacks over.A central task of text analysis is to determine(as best one can fl'om the report) the cause-effectrelation between events.
This infonnation is rarelystated explicitly; rather, it is assumed that it can beinferred from a reader's background knowledge.We can illustrate this with a simple example froma more familiar domain - -  car repair.
If we com-pare the reportsBattery low.Engine won't start.andBattery low.Generator won't start.we recognize that, although the texts are very simi-lar, in the first case "Battery low" causes "Enginewon't start.
", whereas in file second, "Battery low"is the result of "Generator won't start."
We makethese inferences quite naturally based on ourknowledge of how cars work.
The challenge is toorganize our system so that it can effectively makesimilar inferences using complex domain models.Analyzing these causal relations helps us inturn to understand the temporal structure of thetext.
This is important because the narrative orderin these reports typically reflects the order in whichevents were discovered rather than the order in126which they occurred.The Language AnalyzerThe language analyzer has three top-level comoponents: syntactic analysis, semantic analysis, anddiscourse analysis.
Syntactic and semanticanalysis are applied to each sentence in turn;discouese analysis is applied to the entire report atthe end of processing.Syntax analysis is pertbrmed using an aug-mented context-fi'ee grammar based on linguisticstring theory.
Tim parse tree is regularized (pri-marily transforming "all clause structures into astandard torm) by a set of translation rules associ-ated with the grammar productions and appliedcompositionally.Semantic analysis is split into predicate seman-tics (which handles clauses and nominalizations)and noun phrase semantics (for references todomain objects).
Predicate semantics performs amapping from verbs and syntactic relations todomain-.specific predicates and relations.
Nounphrase semantics maps noun phrases into refer-ences to components of the domain model.Noun phrase semantics has to cope with thelong compound nominals which occur frequentlyin this and other technical text.
Our reports con-tain phrases uch asstarting air temperature regulating valveSAC \[starting air compressor\] spline input drive shaftSyntactic constraints offer ahnost no help inresolving the ambiguity of such phrases, ~mdsemantic onstraints, as described by Finin \[2\], arein many cases not suflicient.
We instead adopt atwo-stage approach to analyzing these phrases,described in more detail in \[3\], \[4\], and \[5\].
Thenoun phrase is first parsed with a grammar basedon broad semantic categories appropriate to thedomain; this may produce several alternateanalysis trees.
These analyses are then submittedto a compositional procedure which determines foreach subtree, and finally the whole tree, thereferents in the model.
By eliminating analyseswhich yield troll referents, we resolve much of theambiguity in these noun phrases.When semantic analysis is complete, it willhave transformed the report into a set of proposi-tions (predicate-argument structures).
Discourseanalysis now has the task of interrelating these pro-positions.Discourse AnalysisThe central data structure of the discourseanalyzer is the time graph.
The time graph con-tains a set of directed edges which correspond totime intervals over which a certain state holds or acertain activity is taking place (we call such statesand activities elementary facts).
In addition, thetime graph has directed edges which represent therelative time ordering of the elementary facts andthe causal relationships between them.
This graphis created in throe phrases: creation of elementaryfacts; analysis of explicit temporal relations; andcausal analysis.
Our approach to temporalanalysis, which is described in more fully in \[31\]and \[4\], has been influenced by earlier work byDowty \[ 1\] ,'rod Passonneau \[6\].The first phase creates the elementary factsfrom the propositions generated by semanticanalysis.
For propositions representing a continu-ing state or activity, the mapping is, in general,one-to-one.
For propositions representing achange of state, however, we generate severalfacts: in general, one for the prior state, one tbr thetransition interval, and one lbr the final state.Higher-order predicates (those which take one ormore propositional arguments, such as "began to", "unable to .
.
.
.  ")
do not map directly intoelementary facts; rather, they modify or augmentthe constellation of elementary facts crealed fortheir arguments.For example, for the (shnplified) reportStarting air temperature regulating valve failed.Was unable to start nr.
1 A turbine.we would create the elementary facts shown in Fig.1.
valve-14 is the internal name for the 'startingair temperature gulating valve', while lurbine-1is the internal name of the 'nr.
1A turbine' (theseretcrences are identified by the noun phraseanalyze0.
The failure predication in the first sen-tence is translated into three elementary facts: thestate when the valve was OK (between time points1 and 2), the process of failing (between 2 and 3),and the failed state (between 3 and 4).
A predica-tion of 'starting' by itself would be similarlytranslated into three elementary facts.
The adjec-tive 'unable to' introduces an additional elemen-tary fact EF5 - -  the operator perRmning the start-ing action--- and modilies the facts representingthe change of state of the turbine (EF4, EF6, EF7)so that the turbine is not running in the final stale(EF7).The second phase introduces edges correspond-ing to temporal relations explicitly mentioned inthe text.
For example, for the text "While diesel2 127(a) O-- EF, *,q)-- EFe,,rrl- E~3.?
(b)ell: (S ta t i c -SLate  equip-unit: va lve -14  aspect:FUNCTIONAL CONDITION vaZue: OK)el2: (Transltlon-State equgp-un~t: va lve -14  asoect:FDHCTIOHAL CONDITION u~Zue: BECOAIXG NDLFUACTIOHIHOtransition-type: UNDESIRED)e l3 :  (S ta t i c -S ta te  equip-~nit: va|ve -14  a~pact:FUHCTIOHAL CONOITIOH value: BROKEN)e f4 :  (Dynamic-State equgp-un~t :  tu rb ine - I  aspect: OPERATIONveZue: STANDSTILL ~ode: ROUTINE)efS: (Oct ion  actor :  OPERATOR aspect: ROUTINE v~lue: STARTINGequip-unit: tuPbine-\[ type: IHITIHTION)efG: (T ran~i t lon -Sta te  equ ip -un i t :  to rb ina - I  aspect= OPERATIONv~lu#: 5TRRTINO tran~itlon-type: IHITIATEO)efT:  (Oynae lc -Stete  equ ip -un i t :  tu rb ine - |  aspect: OPERDTIOHv~Zue: NOT RUNNING ~ode: ROUTINE)Figure 1.
Discourse analysis: creation of elementary facts.
(a) Starting air temperature regulating valve failed.
(b) Was unable to start nr.
1A turbine.
(b)(~--EF!-I~(~'-EF24D,~ E!3  " - - -~(~?- ~ ~ Er ,  - - - - - - - - - - *~?--  EF6*  ,(9--" E ~)Figure 2.
Discourse analysis: causal analysis of a failure report.
(a) Situations S 1 and $2.
(b) Adding causal and temporal inks between situations.128 3was operating, alarm sounded."
we would indicatethat the transition interval when the alarm began tosound is contained in tile interval in which thediesel was operating.
For the simple example justabove, no edges would be added.The third phase uses causal inference to deter-mine the causal relation between elementary facts,and to obtain therefrom additional temporal rela-tions.
When this phase begins, the time graph con-sists of several connected subgraphs, which we callsituations.
In essence, we consider each pair ofsituations, <situationp situation2>, and use themodel to determine wheti~er situation I is a plausi-ble cause of situation 2.
We take the domain modelwithout the conditions of situation 1 and testwhether situation 2 is true or false; we then alter thestate of the model to reflect he conditions of situa-tion~ and again test whether situation 2 is true orfalse.
If it is false in the first case and true in thesecond, we record a plausible causal link fromsituation 1 to situation, z. In/',act, we need not test allpairs of situations; we can restt5ct ourselves toabnormal situations (those which are not true inthe case o1' normal operation of the equipment).The example above consists of two situations,S1 and $2 (Fig.
2(a)), both of which are abnormal,so we perform the tests just described.
We deter-mine that S1 is a plausible cause of $2.
We there-:fore establish a causal link (shown as the dottedline from EF3 to EF6), and deduce l.herefrom atemporal link from the start of EF3 to tbe start ofEF6.
These are shown in Figure 2(b).The Domain ModelThe detailed equipment model is required pri-marily at two points in our analysis: for nounphrase semantics and for causal reasoning as a partof discourse analysis.
Each imposes particularrequirements on the model.Noun phrase analysis requires astatic hierarchi-cal model of the equipment which captures theproperties and relations which are used in nounphrases to identify particular components: contain-tnent, adjacency, function, parameter values ("highspeed").
* In addition, the entire system, and particularly seman-tic analysis, make use of more conventional domain informa-tion structures: a hierarchical classification of objects andpredicates, attd a map from verbs and nominalizations topredicates.There arc two conventional approaches tocause-effect reasoning: a "shallow" approach inwhich causally related events are recorded irectly,typically in a production system, and a "deeper"model-based approach in which effects are pro-pagated through components as they would be inthe actual equipment.
We have elected to use amodel-based simulation, in part because a staticmodel (which provides the framework for thesimulation model) was reequired for semanticanalysis, and in part because it offers a more sys-tematic approach to assuring adequate coverage ofthe cause-effect relations.
We have found that aqualitative simulation, in which parameters take ononly a few values, was adequate for verifying tilecausal relations mentioned in the reports; correctunderstanding rarely depended on knowing thecorrect numerical values of parameters.Certain cause-effect relations, such as thoseinvolving a single system component (e.g., thatcorrosion of an element might lead to its malfunc-tioning), cannot be directly captured by the simula-tion model; we use production roles to express therelation in such cases.In order to isolate the language analyzer fromthe particular choices of representation made in thedomain model, we have introduced a Model QueryProcessor as an interface between the analyzer andmodel.
The resulting system structure is shown inFigure 3.
The Model Query Processor acceptsqueries about the static model, either testing aparameter of a component or a relation (adjacency,containment, etc.)
between two components.
Italso accepts queries about he interaction of events,stated in terms of asserting or testing particular ele-mentary facts; these are translated into simulationoperations.DiscussionWe have demonstrated a feasible approach toutilizing a complex, dynamic domain model forthe analysis of technical text.
The hierarchicalnature of the model and the simple interfacebetween the model and the language analyzershould allow this approach to scale up to substan-tially larger domains.
The simulation-basedapproach is suitable primarily for domains wherebehavior is largely predictable, but this includes asubstantial variety of applications.The chief hurdle to applying this approach isthe large amount of domain information which isrequired.
At present, each new piece of equipmentrequires a new model.
We have begun to exploretools, such as graphical editors, to ease the acquisiotion of new models.
In addition, we believe it will4 129domainmodelmodelqueryprocessortextsyntactic \]analyzerregularizedsyntactic structurepredicatesemanticssemantic representation(with domain predicates)I noun qphrase Isemantics., jsemantic representation(with domain predicatesand entity identifiers)discourseanalysissemantic representationwith causal and time relationsFigure 3.
The principal components and data flow of the system.130 5be necessary to incorporate more general models,which will cover whole classes of equipment.AcknowledgementThis research was supported by the DefenseAdvazlced Research Projects Agency under Con-tract N00014-85-K-0163 from the Office of NavalResearch.References\[1\] D.R.
Dowry.
The effects of aspectual classon the temporal structure of discourse:semantics or pragmatics?
Linguistics andPhilosophy, 37-61, 1986.\[2\] T. Finin.
The semantic interpretation ofcompound nominals.
In Proc.
First Nat'lConf.
on AI, 1980.\[3\] T. Ksiezyk.
Simulation-based understandingof texts about equipment.
PhD Thesis, Com-puter Science Department, New YorkUniversity, 1988.
Reprinted as PROTEUSProject Memorandum #17, Computer Sci-ence Dept., New York University.\[4\] T. Ksiezyk and R. Grishman.
Equipmentsimulation for language understanding.
Int'lJ.
Expert Systems, 2 (1) 33-78, 1989.\[5\] T. Ksiezyk, R. Grishman, and J.
Sterling.
Anequipment model and its role in the interpre-tation of noun phrases.
Proc.
Tenth lnt'lConf.
Artificial Intelligence, 692-695, 1987.\[6\] R. F'assonneau.
A computational model ofthe semantics of tense and aspect.
Computa-tional Linguistics, 14 (2) 44-60, 1988.6 131
