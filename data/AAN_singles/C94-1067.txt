An HPSG Parser  Based on Descr ipt ion l ,ogies*J. Joachim QuantzTechnische Universit~it Berlin, \]'rojekt KHZVM11, FR 5-d 2,Franklinstr.
28/29, D-10587 Berlin, Germany, e-mail: jjq @cs.tu-berlin.deAbstractIra this paper I present a parser based on De-scription Logics (I)I.)
for a German lll'SG-slylefragment.
The specilied parser relies mainlyon the inferential capabilities of the nnderlyingDL system.
Given a preferential default ex-tension for DL disamhiguation is achieved bychoosing the parse containing a qualitativelyminimal number of exceptions.1 IntroductionIra tiffs paper I present a parser for IIP'SO based on De-scription Logics (1)1.).
"l)m main mntiwrtion for specifyingsuch it parser relies on considerations concerning the dis-ambiguation of NL expressions.
In ISchmitz, Quantz 931it is shown how different ypes of ambigtfity can be han-dled will) a homogeneous approach based on lhe notionof preference rules lJackendoff 83\].
A major reqnirementfor such a t,nified approach is that information usually rep-resented rather differently (e.g.
syntactic, semantic, andencyclopedic information) is homogeneously representedin it tin;fern1 and declarative formalism in order to expressand evaluate the complex l)references stemming from thedifferent kinds of information.Description Imgics have been developed ira thefield of Knowledge Representation (see, for example,\[Brachman et al 91\]).
qtrey have already been used for therepresentation f semantic and encyclopedic information,e.g.
IAllgayer et al 89, Stock 91, Preuss el al.
921.
Due 1(5their similarity to typcd feature formalisms \[Carpenler 921,syntactic infonnation is in principle also expressible in DI,,as already sketched in \[Quanlz 93, Quantz, Sehmilz 941.Furlhermore, Preferential Defaull Description Logics(H)DL) based on weighted efaults \[Quuntz, Ryan 931 canbe used to represent the preference rules in a declarativeand formally well-founded way.ht the following I will mainly show how IIl,'SG-slylesyntactic information can be represented in 1)I., atrld bow asimple parser can be build by using tim inference capabil-ities of a DL system.
Note that when specifying the parserI will kee t) the presentation as simple as possible, therebydeliberately ignoring efficiency aspects.
I will also refrainfrom model;riga//aspccts of relevant knowledge in DL, i.e.there are still pieces of information which are not explic-itly encoded in the DL modeling, but tire rather ;nil;licitlycnntained in lhe parser (e.g.
information related to linearprecedence and to traces}.The main objective of this paper it thus neilher to con-tribute to research in efficient parsing tectmology, nor to"The project KIT-VM11 is suppo21ed by lhe German leedcralMinister of Research and Technology (BMFF) under conh'ac101IV 101Q8.develop a declarative formalism ira which all aspects rele-vant for NI.P can be represented.
It is rather to prnvide theb'ilsis for an implementation of the exception minimiza-lion aplsroach to interpretation proposed in IQuantz 931.In Section 6 I will hriefly sketch how the l)L-based parserl)resenled in Section 5 can be exleuded to realize this ap-proach.2 i l as ie  IdeasAn important distinction made in DI., but missing in tradi-tionaI fealure formafisms, is the one between objects ;rod/)7)es.
I)I. formulae eilher express that a type 1~ is morespecific than (or subsumed by) a type t2 (tl :< t2) or that anobject o is an instance of a type or, using I)I, terminology,a conce U (o :: c).Applying Ibis schema to the task (5t" NI,P, we can say thatthe objects in this donaain are wnrds or phrases, and thatthe types are syntactic categories.
I:urthermore, givena phrase el we have addiliomll relations between lhisl)hrase and its constitnents 02, 03, .
.
.
,  nsually expressedas "02 is a daughter of ol".
In DL this ix modeled as'(or, 02):: dtrs', or equivalently as '01 :: dlrs:02'.
'dtrs'llltlS acts as a binary predicate or, using I)l. terminology,as a role.
Ni le  thai roles can have more Ihan one valuein contrast I(i fealures, which are funclional.
We can thuswrite 'el  :: dlrs:02 & dtrs:03'.Note further Ih;lt the objects stand for occtJrrences ofwords or phrases, and thal different occtwrenees nf theslime word will be represenled by different objects.
Thisis represented by writing 'o2 :: 15hen:or ', for example, It)express thai 02 is tin ocetlrrenee of Ihe form 'er'.This is all rather similar R) standard Ill ,.~(; nil;ilion, andthe main difference is Ihat in addition to the feature struc-tures used in IIIHG, we add ;ill additional evel of objects,which we see as instances nf the feature strueha'es.
Fea-Itlre structures Ihus correspond Io types or more preciselyIo l)I. concepts.
In a way, IJle objects ill 1)L are used tomake the lIPS(\] feature slr(lchu'es\]~cr, v\[slcnt, i.e.
1(5 havepointers or names to refer to them.The additional evel of objects allows a slraighlforwarddescription of the parsing task.
We start with a nttmberof objects, namely words, whose phonological value amdposition ix known.
We want to end up with a single objectcontaining till these words as (not necessarily immediate)consthuents.
Now the immediate dominance schematain ill/ IIPSG loll us how 1(5 eonstHlct phrases from wordsor other phrases.
Thus the main operation for building aphrase is to create a new object being an instance of an IDschema (note thilt it) schemata re feature slrtlctures andtherefore concepts) and I(5 fill in the required daughtersby us; W the objects available as building mate,'ial.
Thisis achiewxt by choosing the 'functor'-daughter' and fillingthe required argumenls.412Three p(lints are i inporlani in the following sot)ions:1.
Obviously, 0bjeels cannot be combined in a ran-dom way.
In III'SG lhe ID schemata nd Ihe lexiealonlrios eoniahl information concerning c()mbinationwiih olher ptlrases.
T wi l l  model lhis infornialion inDL tiiid rise standard I)1, itfferoneos lo cheek consis-leilcy of eombinalions.
Thus lho l)l, sysiom is usedIo perform Ihe unifleaiion ilisk underlying Ill>S(} andsimilar {Jnification Grainmars+2.
All  objecl can only be used )is building nlalorial \[+or aphrase if il has ilol yel been used iis building maiorialfor sortie olher phrase.
I,'tlrlherinore, when looking,for dlitighlers o\[' li now l)hraso, we hay(:.
Io fill lhosodaughiers for which a filler is required, but not yetspecified, l will use tile cpi, vtemic o\]scr(t/or k Ill'()+posed in IDonini el al.
921 Io formalize these inlu-)lit)f is aud lhon use slandard Ill, rehieval for chockingthese eonstrainls.3+ lq)r synlaclically ambiguous expressions thereis IIIoro ihan one possibility io coml/ino thewords/phrases.
Since the objects and especiallyltiO rohitions between them fire viewed from di f fereli( porspeclive,,i in lhe alloirlalivc' hlterprelali()ns, \volieed a nioehanisnt {ii Dl, to reproscnl lhose diffefonlviews, i will i1sc xiluateU de.s'cri\]~tionx 'o :: c in s'in Iho followin,~ lo formalize lhis notion of differ-ell( porsl)eClives+ Thert~ {s a l+O(ll~h corfespofldeiiceboD.voon the silualiOllS iisod Io capture the specificin)eli)re(aliens and )he charls eroaled in charl pars.-iBg.3 The IhidcHylnl; Description i ,oEic\])eset'iptlon Logics Val y wit the lernl-buildhig operalor:lthey contain+ In this set)ion 1 wil l  pfesenl lhe ~yillaxof file 1)1, which is u;ied hi ttio e?ainples given in Ihenext lwo seclions, l)ue to space lhnilali(ms I wil l  li(tlspecify lhe formal seinanlics for this 1)1.
(see, for exaliloph', \[ I \[oppe et al 93, Quanlz, Schlnilz 9<!1 for a model-Iheorelio SelliailliCS):t - ~ e,r, l v , t i&t2 ,k ( i )e - > Ilte(r,c) , aOIlle(l') > lie(f) , exaclly(u,f)i';() i i I :: 1'2r ' > fua i ,  do i ' i l a i i l (C )  , r i l l l l , e (c )  : t i l l 2  , i i i \ ' ( r )"y " ~" I1 :'Q 12 , I1 : : I2 , el  : .
"- e2,:) :: /Y ill S , o>:lt;ild.
Sil(51 ,.
"gO)When specifying file fralgmerlt and the pars;el + in the no?l,';(+clion.+ I will  use a ilolall l l i l  based Oil Ilie PROI.
()G inler-face pl.,')vide,:t lly the BACK sysIetn ll l .
l)pe et al 931. hiBACK a dislinclion is lllade belween lerm il~ti'oduclion,'-; ordofinilions, and conslritlnl,.liko rlllCS.
A lernl ilaino can Doinlroduccd cii}ler ilS/~/'/,'lli{il,t" (1, :< l), i,e.
()lily lleCeSSilfy(:ondilions are t~,ivon, or as (Iothlod (l, :: : t), i+e.
necessaryarid sufficient condil{oils f i re  ( , i ron .
A i 'u l c  Cl  > (?2 iliCatlSlhal each objocl being at) instal)co of el {s a\],~;o {ill insl;ili('eof  (;2.
"lhe foraulhl 'extend sil(sl,s;0' exprc.sses lhe (act thaisiltlali(m se is ~lri ex tens icm o f  siltiali(in sl.
This mean:-;Iha\[ 'o :: C in sl '  implies 'o :: c in ~;7.'
for all objeels tl andcolicopls e.It(1 order to dislitiguish belwcen tcllilly, and quelyingitfformaiioli I wi l l  llSO 'o ~: (; i l l  s '  l :or tolls and 'o '?
: ill s'for qilOi+\[e~.
I ftirlhoHnore aSstlnie lhlit ii toll only suceedsi f  it is cons i s tent  w i th  lhe  prev ious ly  en le red  in fo rmal )on ;otherwise it ill)Is.
When the object used in a query is avariable, the syslem will relrieve all known instances of aconcel)l, i.e.
'Object +?
: in s' will reltirrl the objects knownlo be inslances of 'e' in 's' by backtracking.Note |ha| the epislemie operator k will ()lily be usedin queries.
It can thereR)re be straightforwardly integratedinto exisling I)1. syslems.
Since this is also true for situateddescripliorls, lhe parse," presented in Seelion 5 is largelyb~lsed Oil stil\[ldilrd inference capabilities of DI, systems.4 A Snlall l:ragmentll'~ lhis section }\[ will present examples from an In .
'S(;-slylefragment for German modeled in DL.
Due to space lim-ilalions I will nol specify all the information containedill Ihis modeling but only lhe one needed 1o illustrale themain characterislies of file formalization and lhe examplesentence 'Die sch6ne l:rau sieht sic' discussed in Ihe nexlseclion.The fragment is based on Ihe presenlalion in\[PcJlhtrd, Sag871 and ils applicalion to German in\[llill191L A main difference between lny I)I. modelillgand slandard Ill>S(} modeling is lh;l| \]\[ ;IVOi(l fealure imtheswhich would inlroduce st;i)erfluous ITll+ objects.
There isthus tit) feature 'head' in my modeling since it would yieldthe im,+oduelion of head objects whose ontological sta-tus seems controversial.
Consequently, my IIead Fea-lure Principle specifies cqtdwdence not for a shigle fealure'head', but rather for each head feature separately.The fragmenl eotl I i l i i /s f ive main categories, llamelytie(m, ,'lfl, i,e,'D, de/, and tu//.
For ilhlslrallon, the definili(ms()i II()llll and ,qt'J afe j;iven l)elow:II(l{lll : -- lll~lj:ll & lex:  I""p : : maj:u & lex:Phrase slrtlcltlre is represented by roles as Ihe I'ollowiIig:till.
'-: :-< dom{lln(si/~il) t~ rallll~o(sl~l,tl)COOli)_ dlts :<5 dll.
';COlllp dh'\[ :<5 coinp dim & foal)lead dlr :< dh~ & tealfuncior_dir :< dim & featThe fealut'e ' funcior, dl r' wil l  be used by lhe parser it) st)co-ify Iho sib, n aclin{ ~, as funelor of a now phrase, lls wihlewi l l  be idenlical to Iho vahio of 'head.
dlr', 'adj.dh", ()t'fi l ler dh", dependilit; I)ll Ihe p',lrlietllar/##tnlc'(l/{lle Z,)on/-/)la,'sc(: (It)) sehemli ilSOd.
Nolo lhtil Iho daughlors which;ire modehxl as feilltlres ltzt2 funcliomil, i.e.
no phrase canhave lwo fillcr:~ for 'heild dh".
(;orfest)ondinl_; {o these dau{,Jiler roles and foal(ires wehave art, umonl roles :lnd fealuros a.<; 'comp_argl'  elc, lIhen dislint!,tiish Ill(; R)llowinF~ types of phrase slri lCttlros:corllp.
:flttlCttlre :: : sonle01ead dh') (~ftiilclor_dh.
:\[ioad lr &ilO(ildj dill & lio(liller_dlr)adj +'4htlCllll'O : :: sOiile(adj+dh) & seine(head.dill &ftilllClOr dh" :adj dll" l~no(coinp.dli.
';) & no(filler.dillfillcf.shuclute : : sonw,(fillef dlr) tt~ sonic(head dh\] &\[:unclor_dh filler dlr &no(comp_dll:q) l~ no(adj_dlr)Thus hi a 'colnp_sll 't lCItlrt; '  Ihe 'head dlr' ,'lOiS as a fililClOr.Nolo lhal il has It) be cxpliei l ly slalod wholher a eerlain\['eahlre is enlply, e.g.
'lie(adj..all()' for 'comp_slrueliiro'.Ill, syslcms ilSS(llile all ()pell world aild \[like all descrit)iions413as being partial, i.e.
the fact Ihat there is cutxently no knownfiller for a role at an object does not imply thai there willnever be one.
"Ilm fragment contains ix ID schemata, namely threefor noun phrases, one for verb phrases, one for adjtmets,and one for topicalization.idl := eomp~slructure &the(headxltr, np & nfo~rn:comm) &some(comp_dlrl) & no(compmrgs)id2 := eomp~struelt,re &the(headxhr, noun& nfom~:comm) &no(comp-dtrs) & some(compmrgl)k13 := comp~slmctum & lhe(headxlt~.verb) &no(eomp-args) & mc:-k14 := adj-slrueture & the(adj_dtr, adjunct)id5 := tiller_structure &lhe(head.dlr, maj:v & no(compmrgs)) &me:+ & the(liller_dlr, lop:+)id6 := eomp~stmeture &the(head~ltr, noun & nform:pro) &no(eompxlt~s) & no(comp_a,gs)For tile lexieal entries I will use three moq)ho-symtactiefeatures (n form, case, gen) to illustrate agreement betweennouns, adjectives, and determiners.
Agreement concern-ins ease and gender between nouns and detenniners imodeled by specifying that tbe value of tile feature 'case'at a common noun is Iho same as the vahle of Iho featnre'ease' at the object f i l ing the feature 'eomp_argl' (whichis the determiner).Below are lexical entries for 'frau' and 'sic':noun & nfotrn:comm => exactly(1 ,eomp_args) &lhe(comp_m'gl ,det) &case=eomp_argl .case &gen=compmrgl.gen)noun & nfoml:pro => no(comp_args)lexeme:frau :=> noun & nform:comm & gen:fphon:frau => lexeme:fraulexeme:er~sie => notnl & nfol'm:prophon:sie => lexeme:er_sie & gen:fNote the bierardfieal nature of the model ing--the sub-categorization i formation is specified for common nounsand pronouns in general, and is then inherited by eachspecific common noun and pror~oun.
Information sharedby all forms of a lexeme is specified as a property of Ihelexeme, whereas information specilic to a parlicuhw formis specified for Ibis form only.Adjectives require non-saturated noun phrases as argu-ments and agree with them wrt ease .
'rod gender:adj => adjunct & case=rood-rag.case &gen=mod-mg.gen &the(mod_mg,np & some(comp.mgs))lexeme:schoen => adjphon:sehoene => lexeme:schoenFinally, the lexieal enlry for 'sieht':verb -----> lhe(eomp_argl,np & case:nora)lexeme:sehen => verb & exaclly(2,eomp.m'gs)lhe(eomp_arg2,np & case:aec)phon:sieht -----> lexeme:sehenNote that for verbs taking more than two arguments weneed addilional features 'comp_arg3' and 'comp_arg4'.In addition to tile information modeled so far we need aformalization of the principles underlying the combinationof signs in flING.
Some of these principles hold only forph,'ases and not for signs in general.
A ph,'ase is definedas follows:phrase := some(du.s)phrase => lex:-lex:- => phrase"llle llead Fealure Pri, cit;le is then delined as:phrase => maj=headxhr.maj &gen=head~ht:gen &case=head.dt~;ease"l'\]m parsing process presented in the next section is essen-tially triggered by signs which can act as functors, namelysigns wilh unsaturated subeat \[isis, signs wilh slashes, andpronouns:some(args) => funetorsome(slash) = > funetornotre & nfmm:pro =2> funclor5 I ) L -Based  Pars ingIn Ibis section 1 will present he basic structure of a l)L-based parser for tile above fragment.
The parser is realizedby five main predicates.
I assume that tile initial informa-lion given In the parser consisls of descriptions of thewords occurring in tile expression to be parsed.
Considerthe ambiguous sentence(1) Die sch/3ne Frau sieht sie.
(2) "llle pretty woman sees her.
(3) Tlm pretty woman she sees.
"llm initial DI.
representation f this sentence is:wt :: phon:die & star1:0 & end:l in stw5 :: phon:sle & star1:4 & end:5 in stGiven Ibis information the parser builds phrases from tilelive words.
This is done by creating new phntses untilno more combim~tions of signs are possible.
"l\]m parsingsucceeds if the words have been all used up and a singlephrase results:paine_sign(Sit,Sit) :-findall(Sign,Sign ?
: sign & no(k(inv(dtts))) in Sit,\[_\]),pm.
's e_s ign (Sit,FinS it) :-new_phrase(Sit,NewSit),pai~e_sign (NcwSit,FinSil).Note that tile epistemic.
?
'oncepl 'no(k(inv(dtrs)))' is usedto determine whether a sign is still available for phrasebuiMing.
An object is an instance of this concept if it isnol a liller of some 'dtrs' role at any other object.Tim basic idea of building a new phrase is to look fora sign which can act as a funelor, to choose an ID schemain which lifts sign is a functor, and to find the required;trguments of tile functor.
Finally, the linear precedencerules are checked and, if necessary, traces are introduced.
1new@hrase(SiI.FinSit) :-Sign ?
: funelor & no(k(inv(dl~,'s))) in Sit,selecLid_schem a (Sign,S it,Piu-ase,NewS it),eomplete~lrguments (S i gn,NewS it,Nextgit),check J ps_and_continuity (Phrase,Sit,NextSit,FinSit).Seleetkm of an II) schema is realized in a rather naive andsimple way---we just take an ID schema nd try to create anew phrase its an instance of lit is schema, where the feature'ft,nctorxllr' is filled by tile funclor.IDue to space limitations I do not specify Ihe predieale'checkdps_and_continuily' in this paper414S (p14, id5)NP (p8, idl)die (wl) N (p/, id4) j ',<,sch~ne (w2) N (p6, id2)Hlrau (w3)S/NP (p13, idS)sieht (w4) S/NP/V (pl 2, id3)//(t l  1, NP) NP (p9, idS) I!
(tl0, V)t lsic (w5)Figure l: Phrase structure of tile sentence 'Die sdffme Frau sieht sic' ('l\]rm pretty wonmn sees her)+ '\]\[ '  stands for'head_dtr', C' for 'comp_dtr', A' for 'adj_dlr', and 'F'  for 'liller_dtr'.select_id_schema(Sign,Sit,Phrase,NewSit) :-id_schema(ID),extend~sit (Sit,NewS\]l),Phrase :: ID & ftmetor_tllr:Sign i Newgil.Information about existing II) schem;fla thus has to beencoded as facts of the form 'kt_sclmma(idl)', elc.
Tilepredicate 'extend_sit(Sit,NewS\]t)' ix used to tell tile DI+system to create a new situation which is an extension oftile current situation.Note that no further knowledge al)out tile ,'tctual rood-cling of It) schemata is uscxl in tile parser except for tilefact that each ID schema has a 'funclor_dtr'.
Note furlherthat the DL tell will fail if tile information known about theftmetor cannot be unilied wilh the information required bytile ID schema for the filler of 'funetc, r_dtr'.In order to complete tile arguments of the functor, tileparser cheeks for each argument feature ArgFeat whclhcran argument is required (somc(ArgFeat)) but not yet spec-ified (no(k(ArgFeat))).
If so, 'lind_arg' looks for such anargument and enters it as filler for ArgFeal.
Then tileremaining arguments are completed.complete.argumenls (Functc, r S il,FinS i1) :-arg_feature (AtgFeat),Functor ?
: some(ArgFeat) & no(k(ArgFeal)) in Sil,!,tind_mg(Functoe; Sit,ArgFeal,NewSil),complete_arguments(l:unctonNewSiI,HnSil).complete_argumenls (_,S it,Sit).Again we need to introduce facts sl)ecifying tile arglnnentsused in tile fragment, e.g.
'arg_fealu re(comp_arg I ) '.If an argument is rc*qt, ired it has lo be filled, thereforetile Cut, Thus tile recurs\]on lean\]nares successfully onlywhen all required arguments are actually tilled.
Nol0 thaithe only information about argument structure needed t)ythe parser are facts of tim form 'arg_feature(comp_argl)'for all argument features.To find an argument the parse," looks for a sign whichhas not yet been used for phrase building and ,asserts it asfiller for Ihe argument feature.
Again, if unification is notpossible due to conflicting constraints (e.g.
agreemenl),the DL tell will fail.tind_arg (Functor, Sit,A~gFeat,FinS it) :-Atg '?
: sign & no(k(inv(dm-;))) in Sit,extend_sit (S it,FinS\]t),Funclor :: ArgFeal:Arg in l:inSit.tind_arg(Funclot;Sil,Argl:eat,FinSit) :..new_ ph rase(Sit.NewSi,),find_a~g(l"unctcw,Sil.ArI,Feat,lqnSil).The second clause is needed Io create a required ,'lrgumentwhich has not yet been build Ul).
Ill this case 'new.
phrase'is called It) Creale a new potential ;,rgumellt.For the sentence 'Die sch6nc Frau sieht sic' we obtaintwo different parses, since bolh 'die schoene frau' and'sic' are ambiguotls between nolni/lalive ;ilia accusativeease.
"llle reading according t() which 'die schoene frm,'is subject is shown in Figure I as a t)hrase slructure tree.Some of the eorresporvJing infomullion conlained in IheI)I. situation represenling this reading is given below:wt :: phon:die & case:nora & stinl:O ,e?
end:lps :: idl & head~ltr:p7 & comp~ltrl :wl &slarl:O & end:3p9 :: id6 & head_dtr:w5 & sla0.
:4 & end:5IlO :: trilee & tracing:w4 & comp_argl:tu &comp.~rg2:p,~ & star1:5 & end:5tit :: trace & Iracing:pt~ & slart:4 & end:,lI)12 :: id3 &.
head dtr:tl0 &comp dh'\] :Itt& comp dtr2:p~) &slash:w4 & shlsh:pg & slarl:,'l & end:5pl~ :: id5 & head dlr:plz & tiller_dlr:w4 & slash:lh{ &sI;lll:3 ~ end:5p14 :: id5 & heada:ltr:pRs & tiller_dtr:pa &stall:0 & end:5In the second purse t i t  and P9 swap places, i.e.
l)9 is the'comp.dtr l '  of \])12 and Ill is the 'comp.Atr2'.The rest,It of the parsing process illustrates tile object-centeredness of D\].
representations.
The constituents oftile ulterance are explicitly modeled and can be usedfor extracting or specifying further information.
Thuswe can choose to introduce at feature 'subject' andadd tile fact '1)1.1 :: subjecl:ps', or we can retrieve alltile salurated noun l)hrases (Phrase 2: n t> & no(args)).
"It,is object-cenleredness i  useful fo," disambigualion,for example for a,laphor\[i resolution, as ilhtshated in\[Quantz, Schmitz 941.4156 Interpretation as Exception Minimization, L ?I will now briefly sketch how ihe parser presented inthe previous section can be extended to perform dis-ambiguation by exception minimization as proposed in\[Quantz 93\].
In case of ambiguous expressions tile parserwill return more than one situation.
Tile basic idea of inter-pretation as exception minimization is to model additionalpreference rules nee, ded for disambignalion asDL defaults,and to choose the inteqlretation violating a qualilativelyminimal set of defaults.A Preferential Default Description Logic (PDDL)based on weigthed defaults has been developed in\[Quantz, Ryan 93\].
A weigthed default /5 has the formcl "-*,~ ca, where cl is called the premise of/5 (/51,), c2 theconclusions of 8 (~5~) and n the weight of/5 (w(8))--thehigher the weight, the more relevant tire default.
For lhisPDI)L a formally well-behaved preferential entailment re-lation o ~>2 is presented, which is based on an orderingon DL models ?\[5~:.
The basic idea of this preferentialsemantics i  to compute ascore far each model by sum-ming up the exceptions to the defaults.
Models with lowerscore are then preferred because they qualilatively mini-mize the exceptions.
It is straighlforward tocarry the ideaof scoring and ordering over from models to situation.
Todo so, we compute for each situation s and each default 6tile exceptions--those objects for which 'Object ?
: 6~, ins' sncceeds and 'Object ?
: /5~ in s' fails.If there are several possible interprelations for an ex-pression we choose the interpretation given by lhe situa-tion with the lowest score.
(Note that there may be Iruelyambiguous expressions which yield situations with iden-tical scores.)
Thus taking the above example, we mightuse a preference for topical ization of subjects to prefer Iheparse shown in Figure 1.
This can be achieved by simplyintroducing a defat, ltnp& top:+ ~5 case:noraObviously, this default is a rather weak one and can beoverwritten by information stemming from selectional re-strictions \[Schmitz, Quantz 93\].In principle, it is possible to use preferences stemmingfrom weighted efaults already in tile parsing process---situations whose score is higher than a specilied thresholdare not processed any further.
Thus instead of producingall parses in tile first step and ordering them in a secondstep, the parser would Ihen only produce tire preferredreading.7 ConclusionI have presented a DL-bnsed parser for a small Ill,(l-stylefragment of German.
Most aspects of tile grammar andthe parser have been modeled in a highly declarative way.Since the main motivalion for my tlresentation has been inshow how an III"SG parser can be implemented in principleby using the inference functionality of a DE system, I havedeliberately ignored any efficiency issues.
It should beobvious, however, thai the parser can be further optimizedto increase its perfornmnce, for example by integratingchart parsing techniques.
We are currently testing tileperformance of alternative implememalions of both theparser and the underlying DL system.One advantage of using DL as underlying formiflism isthat in addition to the syntactic information modeled illthis paper, semantic and encyclopedic nformalion can beeasily integrated inlo tile presenled framework.
Furlher-more, Preferential Default Description Logics can be usedto model preference rules as weighted efaults, therebyobtaining intcq)relation as exception minimization.
Thel)arser presented in this llaper thus provides lhe basis foran homogeneous and formally well-founded approach todisambiguatltm based on Preferential Default DescriptionLogics.Re ferencesIAllgayerct al.
89\] J. Allgayer, R. Jansen-Winkehl,C.
Reddig, N. Reithinger, "l~,idirectional Use of Km)wl-edge in The Multi-Modal NL Access System XTRA",in 1JCAI'6'9, 1492-1497\[I3,-achman et al 911 R. t3rachman, I).L.
McGuiness,P.F.
Patel-Sclmeidcr, L. Alperin Resnick, A.
13orgida,"Living with CLASSIC: When and How lo Use a KI.-ONE-like Language", in J.
Sow) ted.
), Principles of Se-mantic Networks: l;:vplorations hi the Representatkm<(Knowledge, San Male(l: Morgan Kaufmann, 1991,401-456\[Carpenler 92\] B. Carpenter, 7'he Logic of "l),ped l,'eatureStructures, Cambridge: Canlb,idge Unive,'sity Press,1992\[Donini et al 921 F.M.
Donini, M. Lenzerini, D. Nardi,A.
Schaerf, W. Null, "Adding Epistemic Operators toCnucept Languages", KR-92, 342-353\[Ililt1911 W. Hiltl, Ein HPSG-Enlwutf f fr &ts Deutscheund sehle hnplementierung,, Diplomarheit l.JniversiliitKoblenz-Landau, 1991IHoppe el al.
931 T. Hoppe, C. Kinclermann, J J .
Quantz,A.
Schmiedel, M. Fischer, I~ACK V5 Tutor#zl,~ Manual,KIT Report 100, Techniscllc Universitiit Berlin, 1993\[Jaekendoff 831 R. 3ackendoff, Semantics and Cognition,Cambridge: MIT Press, 1983\[Pollard, Sag 87\[ C. Polhlrd, I.A.
Sag, An InformatkmBaxed Syntax and Semantics, Vol.
I Fundamentals,Stanford: CSLI Lecture Noles 13, 1987\[Preuss et al 921 S. PreuB, B. Schmilz, C. llauenschild,C.
Umbach Anapkora Resohttion in Machine 7)')as-#1I\[o11, KIT Report 104, Technlsche Universiliit I3erlin,1992\[Quantz93\] J3.
Quanlz, "lntcrprelalion as ExceptionMinimization", IJCA\[-93, 1310 1315IQuanlz, Ryan 931 J3.
Quantz, M. l~yan, PmferenlktIDe-Jhult Description LoL, ics, KIT-Report 110, TechnischeUnivcrsitiit Herlin, 1993\[Quanlz, Schmilz941 J.J. Quantz, FL Sctunitz, "Know-ledge-Based l) isamlliguat ion for Machine Translation",Mhtds and Machhles 4, 39 -.57, \] 994\[Schmitz, Qt,antz 93\] 1;.
Schmitz, 33.
Quanlz, De, lullsht Machine 7kanslation, KIT Report 106, TechnischeUniversitiit Berlin, 1993\[Stock 91\] O.
Stock, "Natu,'al Language and Explorationof an Inform)lion Space: tile AI .Fresco lnleraclive Sys-lem', in IJCAI'91,972 978416
