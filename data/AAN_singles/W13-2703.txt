Proceedings of the 7th Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities, pages 20?28,Sofia, Bulgaria, August 8 2013. c?2013 Association for Computational LinguisticsComparison between historical population archivesand decentralized databasesMarijn Schraagen and Dionysius HuijsmansLeiden Institute of Advanced Computer Science (LIACS)Leiden University, The Netherlands{schraage,huijsman}@liacs.nlAbstractDifferences between large-scale historicalpopulation archives and small decentral-ized databases can be used to improve dataquality and record connectedness in bothtypes of databases.
A parser is developedto account for differences in syntax anddata representation models.
A matchingprocedure is described to discover recordsfrom different databases referring to thesame historical event.
The problem of ver-ification without reliable benchmark datais addressed by matching on a subset ofrecord attributes and measuring supportfor the match using a different subset ofattributes.
An application of the matchingprocedure for comparison of family treesis discussed.
A visualization tool is de-scribed to present an interactive overviewof comparison results.1 IntroductionIn the historical demographics and genealogy do-main, research data can be collected from cen-tralized databases such as a historical census orcivil registry.
Alternatively, decentralized data canbe collected from, e.g., personal archives or lo-cal organizations.
Complementary and conflictinginformation between these sources can be valu-able for research if the overlap, i.e., matchingrecords, is correctly identified.
This paper de-scribes a method to discover matching records incentralized and decentralized data for the prob-lem of family reconstruction.
An overview of re-lated work is presented in Section 2.
Section 3describes the two different data formats.
Section 4provides a mapping procedure between the differ-ent data formats.
In Section 5 the matching proce-dure is explained at the conceptual and technicallevel.
Section 6 provides a verification procedureand results for a test database.
An application ofthe matching in a family tree visualization tool isprovided in Section 7.
A conclusion and directionsfor future research are provided in Section 8.The most important concepts used throughoutthis paper are defined as follows:Record.
Unit of matching and linkage.
A recordrefers to a Genlias certificate (Section 3) or aGedcom certificate reconstruction (Sections 3 and4), unless stated otherwise.Record match.
A pair of records that refer to thesame event (birth, marriage, or death).Record link.
A pair of records that refer to relatedevents (e.g., birth and death of the same person).Field similarity measure.
Similarity betweenfield values, e.g., number of days between dates.Record similarity measure.
Similarity require-ments for selected fields and relations between therequirements.Edit distance.
Minimum number of characterinsertions, deletions and/or substitutions neededto transform one string into another (Levenshteindistance).Name sequence.
Concatenation of person namesfrom a record.Person name.
Single name, i.e., given name orfamily name.2 Related workAutomatic matching and linkage of historicalrecords has been researched for several decades.An early example can be found in (Winchester,1970), using Soundex as field similarity measureto compare census data.
An approach from theFrench-speaking Canadian province of Quebec,using a custom phonetic code, is described in(Bouchard and Pouyez, 1980).
In this approachdifferent types of data are merged together.
Theresearchers state that ?the most fundamental ruleis that we never try to link individuals, but rather20pairs of individuals; that is: couples [.
.
. ]
It canbe demonstrated easily that individual linkage isliable to result in uncertain, false, or missed links,whereas the result of the linkage of couples is veryreliable?.
The approach is implemented as fol-lows: ?we accept as candidates for linkage thosepairs which have at least two exactly identical el-ements?.
Experience with the dataset used in thecurrent research has resulted in a similar approach(see Section 5).
Linkage on the Quebec dataset hasbeen developed by the same authors (Bouchard,1992).
The 1992 paper discusses the use of fieldvalues: ?the various fields can serve as identi-fiers (linkage), controls (validation), or variables(analysis).?
The notion of internal validation isdiscussed further in Section 6.
Later approachesto record linkage have focussed on scalability oflinkage methods for large amounts of data, see,e.g., (Christen and Gayler, 2008).A detailed overview of elements from genealo-gical records and the application of each elementfor linkage is provided in (Wilson, 2011).
Besideshistorical and/or genealogical data, various othertypes of data have been used for development andtesting of algorithms, such as hospital records,phone book records, customer records, etc.
How-ever, algorithms generally assume a certain levelof uniformity in data representation, both at a tech-nical and at a conceptual level.
This means thatgenerally pedigrees are linked to other pedigreesbut not to civil certificates, and vice versa.
Eventsand individuals (actors) have been modelled to-gether using NLP techniques (Segers et al 2011),however these approaches are mostly not applica-ble for genealogical data both because of the lackof natural language resources to identify and linkinstances of actors and events, as well as the differ-ence in scope of the model (participants of histor-ically significant events vs. every person that ex-isted during a certain time period).
Some attemptshave been made to facilitate data exchange andaccessability in the genealogical domain, eitherby presenting a standardized format (the Gedcomstandard (GEDCOM Team, 1996) being the mostsuccesful example), by conversion into a standard-ized format (Kay, 2006; Kay, 2004), by enforcinga Semantic Web ontology (Zandhuis, 2005), orby defining a framework that accepts custom datamodels as metadata to be provided upon exchangeof the genealogical data itself (Woodfield, 2012).Algorithmic solutions for merging of pedigreeshave been proposed (Wilson, 2001) that take intoaccount matches between individuals and match-ing links between individuals.
More elaboratelinkage of pedigree data is described in (Quass andStarkey, 2003), using feature weights and thresh-olds to increase linkage performance.Using various definitions of record, such as asingle individual, multiple individuals, families(i.e., multiple individuals in a family relation), orevents (i.e., multiple individuals in a certain rela-tion at a specific point in time), most research inrecord linkage is either directed towards matchingof records, i.e., asserting equal reference, or link-age of related (but not equal) records using match-ing of record elements (e.g., a birth record linkedto a marriage record based on a match betweenthe child and the bridegroom).
In social networksresearch a different type of linkage is common,where records are linked but not matched (e.g.,two people sharing common interests).
Occasion-ally this type of link is used in historical recordlinkage as well (Smith and Giraud-Carrier, 2006).Test corpora have been developed (Schone etal., 2012), (Bouchard, 1992), however these are in-trinsically domain- and language-specific.
More-over, these corpora are generally not readily avail-able for research.3 Data formatsThe centralized data used in the experiments is ex-tracted from the Dutch Genlias1 database.
Genliascontains civil certificates (around 15 million in to-tal) from the Netherlands, for the events of birth,marriage and death.
Most documents originatefrom the 19th and early 20th century.
A record(see Figure 1 for an example) consists of the typeof event, a serial number, date and place, and par-ticipant details.
The parents are also listed for themain subject(s) of the document, i.e., the newbornchild, bride and groom, and deceased person forbirth, marriage and death certificates, respectively.The documents do not contain identifiers for indi-viduals.
No links are provided between documentsor individuals.The decentralized data is extracted from a fam-ily tree database in the Gedcom (GenealogicalData Communication) format.
In this format ge-nealogical data is stored based on individuals andnuclear (immediate) families, instead of events as1The Genlias data is currently maintained byWieWasWie,see http://www.wiewaswie.nl (in Dutch)21Type: birth certificateSerial number: 176Date: 16 - 05 - 1883Place: WonseradeelChild: Sierk RolsmaFather: Sjoerd RolsmaMother: Agnes WeldringFigure 1: Genlias birth certificate.in Genlias.
Every individual or family in Gedcomis assigned a unique identifier.
Records for indi-viduals usually contain personal information likenames, birth and death date, etc.
The families inwhich the individual participates, either as childor as parent, are also indicated.
A family recordlists the individuals and their roles.
Marriage in-formation (date, place) can also be present in afamily record.
Using the record identifiers, a linknetwork between individuals and families can beconstructed.Gedcom is a text-based free entry format.
Thestandard (GEDCOM Team, 1996) states that ?Arecord is represented as a sequence of tagged,variable-length lines, arranged in a hierarchy.
Aline always contains a hierarchical level number, atag, and an optional value.
A line may also con-tain a cross-reference identifier or a pointer.?
(seeFigure 2 for an example).
The Gedcom standardis used by a wide variety of genealogical appli-cations, ranging from full-featured commerciallyavailable software to small scripts.
The imple-mentation of the standard can differ between ap-plications, as well as the content format entered byusers.
The next section describes a parsing proce-dure designed to process this kind of data.4 ParsingPrior to the actual record matching, a mapping be-tween the data formats must be performed.
Thisrequires either a reconstruction of events fromthe Gedcom file, or vice versa a reconstructionof individuals and nuclear families from Genlias.The first option requires links between Gedcomrecords, for example to construct a birth recordfrom the three individual records of the childand parents using the intermediate family record.The second option requires links between Gen-lias certificates, for example to construct a familyrecord from the birth certificates of several chil-dren.
Record links are available in Gedcom only,and therefore reconstruction of events from Ged-0 @F294@ FAM1 HUSB @I840@1 WIFE @I787@1 MARR2 DATE 30 MAY 18742 PLAC Wonseradeel1 CHIL @I847@1 CHIL @I848@1 CHIL @I849@0 @I840@ INDI1 NAME Sjoerd/Rolsma/1 BIRT2 DATE 13 FEB 18491 DEAT2 DATE 17 JAN 19361 FAMS @F294@0 @I787@ INDI1 NAME Agnes/Welderink/1 SEX F1 BIRT2 DATE ca 18501 FAMS @F294@0 @I849@ INDI1 NAME Sierk/Rolsma/1 BIRT2 DATE 16 MAY 18832 PLAC Wonseradeel2 SOUR3 REFN 1761 FAMC @F294@Figure 2: Gedcom database fragment, showing aselection of fields from a FAM record (family)and three INDI records (individual).com is the preferred option.There are various tools available to perform therequired data transformation.
Many genealogyprograms can export Gedcom data to, e.g., XMLor SQL databases which can be queried to con-struct events.
Alternatively, dedicated Gedcomparsers exist for a number of programming lan-guages (such as Perl (Johnson, 2013), C (Verthez,2004), Python (Ball, 2012), XSLT (Kay, 2004))that provide data structures to manipulate the Ged-com data from within code.
However, the datastructures are still centered around individuals andfamilies and the performance of the tools is to agreater or lesser degree sensitive to violations of(some version of) the Gedcom standard.
The restof this section describes a more general parsingalgorithm that can be applied to any kind of level-numbered textual data.The parser (see Figure 3) uses a Prolog DCG-style grammar to specify the elements of targetrecords (see Figure 4 for an example).
Tags foundin lines from the database file are pushed on astack one by one.
Before a tag is pushed, all cur-22S ?
?while L?
readline(database) doif(L.level = 0) thenid?
L.valuewhile(S.top.level ?
L.level) doS.pop()S.push(L.tag)foreach terminalList ?
grammar doif(S = terminalList) thenindex(id,terminalList)?
L.valueforeach id ?
index doforeach target ?
grammar doif(pointerList ?
target) thenduplicate(target,id,pointerList)foreach protoRecord ?
({target} ?
duplicates) doforeach terminalList ?
protoRecord dooutput ?
index(id,terminalList)output ?
record separatorFigure 3: Parser algorithm.birthcertificate ?
?> [@],[fam,chil(+)]:birthbasic,[fam,husb]:personname, [fam,wife]:personname.birthbasic ?
?> birthdate, birthplace, birthref, personname.birthdate ?
?> [indi,birt,date].birthplace ?
?> [indi,birt,plac].birthref ?
?> [indi,birt,sour,refn].personname ?
?> [@],[indi,name].target ?
?> birthcertificate.Figure 4: Grammar fragment.
Special characters:?@?
level 0-value (record id), ?+?
pointer list,?:?
pointer dereference.rent elements with an equal or higher level num-ber are popped, which makes the stack correspondto the current branch in the database hierarchy.
Ifthe stack corresponds to a list of terminal symbolsin the grammar, then the current line is indexedfor later use by the value at level 0.
All grammarrules are expanded to terminal symbols and subse-quently dereferenced for each of the index valuesin the previous step.
If an expanded rule contains apointer list (indicated by a + symbol) then the ruleis duplicated for each element of the pointer listassociated to the current index value before dere-ferencing.
As an example the algorithm in Fig-ure 3 applied to the database in Figure 2 using thegrammar in Figure 4 on the index value @F294@will produce three duplicate protorecords whichcan be dereferenced to certificates.
Figure 5 pro-vides an example that matches the Genlias certifi-cate in Figure 1.
Note that the family name of themother differs between the databases.The use of a domain-independent grammar pro-vides a flexible parser for Gedcom or structurallyProtorecord[@], [fam,chil(2)]:[indi,birt,date],[fam,chil(2)]:[indi,birt,plac],[fam,chil(2)]:[indi,birt,sour,refn], [fam,chil(2)]:[@],[fam,chil(2)]:[indi,name], [fam,husb]:[@],[fam,husb]:[indi,name], [fam,wife]:[@],[fam,wife]:[indi,name]Certificate@F294@, 16 MAY 1883, Wonseradeel, 176,@I849@, Sierk/Rolsma/, @I840@, Sjoerd/Rolsma/,@I787@, Agnes/Welderink/Figure 5: Parsing example for index value@F294@ using the pointer [@F294@,CHIL(2)],which is @I849@.similar data formats.
Additionally, only informa-tion that corresponds to an element of a targetrecord is indexed, resulting in a light-weight pro-cedure.
The output of the parser can be directlyused for record matching, which is described inthe next section.5 MatchingAfter parsing, both databases are represented inthe same data format.
This enables a definitionof similarity between records based on the val-ues of corresponding fields.
In the current exper-iments a partial similarity measure is used, mean-ing that any sufficiently large subset of the corre-sponding fields must be similar whereas the com-plement set remains unchecked.
This approach as-sumes sparseness of high-dimensional data, whichimplies that the set of field values of each record isunique and moreover any large subset of field val-ues is also unique.
This property can easily be ver-ified on a given database and if it holds, the simi-larity measure can be simplified accordingly.
Forthe current experiments this allows for name vari-ation in civil certificates which is hard to detectautomatically by similarity measures.
A certifi-cate, as discussed in Section 3, generally containsat least three individuals, which amounts to sixnames in total (given names and family names).If one of the names is subject to large variation intwo matching records (for example Elizabeth vs.Lisa), this match might be undetected when us-ing all names in the record comparison.
However,by ignoring this field in a partial comparison thematch will be discovered.A partial record similarity measure can be de-23fined by stating similarity requirements for eachof the fields used in the measure and relations be-tween the requirements.
As an example, considerthe matching between marriage certificates basedon the year of marriage and the names of the brideand bridegroom (four names in total) which is usedin the current experiments, as stated in Figure 6.Note that the first clause in this definition requiresan exact match on person names.
This has the con-ceptual advantage that exact matching is more re-liable than similarity matching based on, e.g., editdistance.
Additionally, exact matching allows forstraightforward string indexing and efficient look-up.
Memory consumption is less efficient, the ex-ample index of two names out of four requires(42)= 6 entries per record.
Therefore it might benecessary to adjust the similarity measure to meetcomputational resources.At least two out of four names are exactlyequal, andthe year of marriage is equal or differentby a small margin, orthe year of marriage is different by alarger margin and the edit distance be-tween name sequences is below a smallthreshold, orthe year of marriage in a record is spec-ified as a range and the year of marriagein another record is within this range,and the edit distance between name se-quences is below a small threshold.Figure 6: Record similarity measurefor marriage certificates.6 Results and verificationThe record similarity measure in Figure 6 is ap-plied to the Genlias database and a sample Ged-com database containing 1327 individuals and 423families.
As preprocessing, given names are re-duced to the first token (for example: QuentinJerome Tarantino ?
Quentin Tarantino).
Sepa-rate family name prefixes, which are common inDutch, are stripped using a stop list (for example:Vincent van Gogh ?
Vincent Gogh).
The edit dis-tance threshold and year margins required by thesimilarity measure are set according to empiricalEdit distance threshold 5Large year margin 10Small year marginmarriage 2birth, death 0Marriage match 153no match 23Birth match 335no match 276Death match 100no match 239Table 1: Matching parameters and results.knowledge of the domain.
A subset of the Gedcomrecords is used to match the timeframe of the Gen-lias database (1796?1920).
Settings and match-ing results are displayed in Table 1.
The match-ing is performed for the three main types of civilcertificates: birth, marriage and death.
For birthand death certificates the marriage record similar-ity measure (Figure 6) is used replacing the rolesof bride and bridegroom by mother and father ofthe child or deceased person for birth and deathcertificates respectively (i.e., the name of the childor deceased person itself is not used).
To avoidconfusion with other siblings, the small year mar-gin for birth and death certificates is set to zero.If multiple matching candidates are found usingthe record similarity measure, the match with thesmallest edit distance between name sequences isused.
The large amount of missed matches forbirth and death certificates is expected, becausethe Genlias database is still under active develop-ment and a significant number of birth and deathcertificates are not yet digitized.
Moreover, Ged-com databases generally contain many peripheralindividuals for which no parents are listed (usu-ally inlaws of the family of interest), prohibitingthe reconstruction of birth and death certificates.Verification of record matches should ideally beperformed using a test set of known matches (agold standard).
However, for this particular com-bination of databases such a test set is not avail-able.
The lack of test sets extends to the majorityof decentralized historical data, as well as Genliasitself (which does not have any kind of internallinks or verification sets).
This is a quite unde-sirable situation given the large variation in dataquality and coverage between databases in the his-torical domain.
Because the characteristics of any24two databases regarding the contents can differ toa large degree, the performance of a matching al-gorithm obtained on one database is not indicativefor other databases.
Put differently: every appli-cation of a matching algorithm has to perform itsown verification, which is difficult in the absenceof test sets.6.1 Internal verificationA possible solution for the verification problemis to re-use the sparseness assumption to obtaina measure of support for a match.
The matchesreturned by the similarity measure are based on asubset of fields.
If other field values are equal orsimilar as well, they provide additional support forthe match independent of the similarity measure.Note that this solution is only applicable if thereare fields available which are not used in the recordsimilarity measure.
Moreover these fields shouldhave a certain discriminative power, which rulesout categorical variables like gender or religion.For many linkage tasks extra fields are not avail-able, for example linking a marriage certificate ofa person to the marriage certificate of this person?sparents, in which case the only available informa-tion about the parents are the person names.
How-ever, in the current experiments a certificate fromone database is being matched to the same certifi-cate in another database, therefore the amount ofavailable information is much larger.A candidate field for verification is the serialnumber, which has been recorded since the startof the civil registry in the Netherlands.
The num-bers are assigned per year by the municipalityissuing the certificate, meaning that the combi-nation of municipality, year and serial numberuniquely references a certificate (also known asa persistent identifier or PID).
A shared PID be-tween two records in a match therefore providesstrong support for this match.
However, in a Ged-com database serial numbers are not necessarilyincluded.
The source of the data can be somethingdifferent than the civil registry, such as churchrecords, or the database author might just haveomitted the serial number.
Moreover, if the sourceof the Gedcom record is the civil registry, then thematch is not very indicative of the performanceof the similarity measure in combining differentdata sources.
Therefore, the serial number is oflimited use only for verification purposes.
Othercandidate fields are dates and toponyms (locationnames).
The year is used in the similarity measure,but the day and month can be used for support.
Forthe current experiments three levels of support aredefined: exact date match, a difference of 1 to 7days, or a difference of more than 7 days.In case of limited support from the verificationfields, edit distance (or any other string similaritymeasure) can be used as an indication of the cor-rectness of a match.6.2 Toponym mappingToponyms cannot always be compared directly,because of the difference in use between Genliasand most Gedcom databases.
In Genlias the to-ponym that denotes the location of the event is al-ways the municipality that has issued the certifi-cate.
In a Gedcom database often the actual lo-cation of the event is used, which can be a townthat is part of a larger municipality.
A comparisonbetween toponyms is therefore more informativeafter mapping each toponym to the correspondingmunicipality.
In the current experiments a refer-ence database of Dutch toponyms is used to per-form the mapping.
Because the municipal organi-zation in the Netherlands changes over time, theyear of the event is required for a correct map-ping.
Ambiguity for toponyms (i.e., multiple lo-cations with the same name) can generally be re-solved using the province of the event.
In case thatthe province is not recorded the toponym can bedisambiguated by choosing the location with themost inhabitants by default.6.3 Interpretation of support figuresTable 2 shows the results of verification using se-rial numbers, dates and mapped toponyms as sup-port fields.
The support figures should be inter-preted with the distribution of data values in mind.The first two rows of Table 2 represent matcheswith equal serial numbers.
Most of these matcheshave equal PIDs (toponym and year equal as well).Given that each PID is unique these matches arecorrect.
Differences in toponym are usually smallfor matches with equal serial numbers, thereforea PID match can be assumed (although supportis higher for true PID matches).
The third rowrepresents matches with the same toponym anddate, and also two names equal (by definition ofthe similarity measure).
Note again that the matchwas selected using the names and the year only,and verified using the toponym and the full date.These matches could be incorrect, because it is25possible that different couples with (partially) thesame name got married on the same day in thesame place, for example.
In the Genlias databasethis is the case for around 0.3% of all marriagecertificates.
Therefore, the sparseness assump-tion largely holds for this set of fields and thesematches can also be considered correct.
Similarly,other verification field values can be interpreted interms of confidence in a match (based on the va-lidity of the sparseness assumption) or counterev-idence against a match (in case of large differ-ences in field values).
For the current experiments,the last row of matches should be considered in-correct.
The relatively large number of incorrectmatches for birth and death certificates can be at-tributed to the lack of coverage in Genlias.
Thebest match is returned, however this assumes truematches to be present in the data set.
The recordsimilarity match can be adjusted using the verifi-cation fields, however it is preferred to keep simi-larity computation and verification separated.7 ApplicationThe previous sections have discussed matchingrecords from different databases that refer to thesame event.
However, most research in histori-cal record linkage is focussed on links betweenevents, such as a birth and the marriage of theparents listed in the birth certificate.
These linkscan be added to a database by manual annota-tion or using automatic linkage methods.
Differ-ent databases in the same population domain arelikely to contain complementary and conflictinglinks, which can be used to increase the qualityand quantity of links in both databases.
To com-pare links between databases the records need tobe matched first, which can be achieved using therecord matching method from the current research.field marriage birth deaths t d e+ + + 69 170 9+ - + 2 30 0?
+ + 41 20 1?
+ ?
0 33 6?
+ ?
2 1 0?
?
+ 10 2 7?
?
?
2 5 10?
?
?
?
3 11 2 3?
?
?
> 3 16 72 64total 153 335 100Table 2: Verification results.Columns: (s)erial number, (t)oponym, (d)ate,(e)dit distance.
Support level: + equal,?
1?7 days difference,?
not equal (s,t) or> 7 days difference (d).
Edit distance is onlyused for the matches without support from theverification fields (final two rows).To demonstrate the application of the method, acomparison is performed on links between mar-riage certificates in Genlias and correspondinglinks in the sample Gedcom database used in thematching experiments.
A marriage certificate con-tains the marriage couple and the parents of bothbride and bridegroom.
A link can be defined be-tween a marriage and the marriage of one of theparent couples (see Figure 7).
For the Genliasdatabase links have been constructed by select-ing all record pairs with a maximum Levenshteinedit distance of 3 between name sequences.
Ad-ditional record links are computed by convertingeach name to a base form and selecting recordpairs with matching base name sequences.
Thedetails of the link computation are beyond thescope of this paper, for the current experimentsMarriage coupleEwout KapteinGeertrui DekkerParents groomJacob KapteinDirksje van den BroekParents brideArij DekkerKniertje VerschoorMarriage coupleJacob KapteinLijntje SmitsParents groomEwoud KapteinGeertrui DekkerParents brideSouverein SmitsLijntje DelgensCertificate 09914931Municipality: MijnsheerenlandDate: August 29, 1895Municipality: MijnsheerenlandCertificate 09915109Date: September 18, 1868Serial number: 9 Serial number: 13Figure 7: Example of a link between two Genlias marriage certificates,containing a small spelling variation: Ewout vs. Ewoud.26@F171@13-05-1848Sjoerd Riemerts RiemersmaJohanna Sikkes van der Zee@F100@01-05-1824Sikke Sasses van der ZeeAafke Klazes de BoerAfke de Boer@F15@09-05-1857Jan Johannes AltenaKlaaske Sikkes van der Zee@F16@02-07-1892Johannes AltenaElisabeth Vonk@F17@16-11-1889Eke FoekemaAaltje Altena@F18@09-01-1896Sikke AltenaCornelia VerkooyenCornelia Verkooijen@F13@13-06-1896Ruurd AltenaAnna Jans Rolsma@F19@~1900H WesselingAgatha Altena979799808-05-1895Hendrikus WesselingAgatha Altena@F122@~1920Sikkes ?IJbeltje Altena@F123@~1925Bartolomeus Mathias van OerleKlaaske Altena@F124@18-05-1923Sikke AltenaTrijntje HommingaFigure 8: Visualization of link comparison.only the resulting set of links between Genliasmarriage certificates is of interest.
In the Ged-com database links between marriages are alreadypresent.
The link comparison procedure is as fol-lows: first, marriage certificates are matched us-ing the method described in Section 5.
For everymatched certificate the marriages of the childrenare identified using the links from Genlias and theGedcom database (cf.
Figure 7).
These two sets ofmarriages are aligned using a slightly more strictversion of the record similarity measure in Fig-ure 6, to accomodate for the inherent similarity innames and timeframe of sibling marriages.
Us-ing the alignment, the links can be divided intothree categories: present in both databases, presentin the Gedcom database only, or present in Gen-lias only.
A visualization tool is developed thatshows the results of the comparison in a link tree(see Figure 8), which can be browsed by expand-ing or collapsing record links.
Colours indicatedifferences between databases (red and blue forthe Gedcom database and Genlias, respectively).Records @F19@ and 9797998 are an example ofa false negative.
The lower row is found in theGedcom database only because these records areoutside of the Genlias timeframe.
The tool enablesusers to provide their own Gedcom database andidentify differences with the nation-wide Genliasdatabase.
Due to data licensing issues the tool hasnot yet been released, however it could be inte-grated in the Genlias website in the future.8 Conclusion and future workIn this paper a method is described to comparea dataset based on events (Genlias) to a datasetbased on individuals (the Gedcom model).
Thismethod is complementary to most current ap-proaches in record linkage, in which only datasetswith the same conceptual structure are compared.The parser (Section 4) facilitates the transforma-tion of data formats.
A combination of multi-ple string indexing and field similarity measuresprovides a computationally efficient and flexiblerecord matching method, as described in Sec-tion 5.
The problem of verification without goldstandard test data is addressed in Section 6.
Anapplication of the method in a visualization tool ispresented in Section 7.In future research, other Gedcom databasescan be presented to the matching procedure.
Acrowdsourcing set-up can be envisioned to per-form large-scale data collection and evaluation ofthe approach.
The matching procedure itself canbe refined by improving the record similarity mea-sure or by incorporating a network approach inwhich record links can contribute to matching.
Fi-nally, functionality can be added to the visualiza-tion tool, preferably resulting in a public release.AcknowledgmentThis work is part of the research programmeLINKS, which is financed by the Netherlands Or-ganisation for Scientific Research (NWO), grant640.004.804.
The authors would like to thank TomAltena for the use of his Gedcom database.27ReferencesMadeleine Ball.
2012. python-gedcom: Pythonmodule for parsing, analyzing, and manipulat-ing GEDCOM files.
https://github.com/madprime/python-gedcom/.Ge?rard Bouchard and Christian Pouyez.
1980.
Namevariations and computerized record linkage.
Histor-ical Methods: A Journal of Quantitative and Inter-disciplinary History, 13(2):119?125.Ge?rard Bouchard.
1992.
Current issues and newprospects for computerized record linkage in theprovince of Que?bec.
Historical Methods: A Jour-nal of Quantitative and Interdisciplinary History,25(2):67?73.Peter Christen and Ross Gayler.
2008.
Towards scal-able real-time entity resolution using a similarity-aware inverted index approach.
In Seventh Aus-tralasian Data Mining Conference (AusDM 2008),volume 87, pages 51?60.
ACS.GEDCOM Team.
1996.
The GEDCOM standardrelease 5.5.
Technical report, Family and ChurchHistory Department, The Church of Jesus Christ ofLatter-day Saints, Salt Lake City.Paul Johnson.
2013.
Gedcom ?
a module to manip-ulate Gedcom genealogy files.
http://search.cpan.org/?pjcj/Gedcom-1.18/.Michael Kay.
2004.
Up-conversion using XSLT 2.0.In Proceedings of XML: From Syntax to Solutions.IDEAlliance.Michael H. Kay.
2006.
Positional grouping in XQuery.In Proceedings of the 3rd International Workshop onXQuery Implementation, Experience and Perspec-tives (XIME-P).Dallan Quass and Paul Starkey.
2003.
Record linkagefor genealogical databases.
In KDD-2003 Workshopon Data Cleaning, Record Linkage, and Object Con-solidation, pages 40?42.Patrick Schone, Chris Cummings, Stuart Davey,Michael Jones, Barry Nay, and Mark Ward.
2012.Comprehensive evaluation of name matching acrosshistoric and linguistic boundaries.
In Proceedings ofthe 12th Annual Family History Technology Work-shop.
FamilySearch.Roxane Segers, Marieke van Erp, and Lourens van derMeij.
2011.
Hacking history via event extraction.In Proceedings of the sixth international conferenceon Knowledge capture, K-CAP ?11, pages 161?162.ACM.Matthew Smith and Christophe Giraud-Carrier.
2006.Genealogical implicit affinity network.
In Proceed-ings of the 6th Annual Family History TechnologyWorkshop.
FamilySearch.Peter Verthez.
2004.
The Gedcom parser library.http://gedcom-parse.sourceforge.net/.D.
Randall Wilson.
2001.
Graph-based remerging ofgenealogical databases.
In Proceedings of the 1stAnnual Family History Technology Workshop.
Fam-ilySearch.D.
Randall Wilson.
2011.
Genealogical record link-age: Features for automated person matching.
InProceedings of RootsTech 2011, pages 331?340.FamilySearch.Ian Winchester.
1970.
The linkage of historicalrecords by man and computer: Techniques and prob-lems.
The Journal of Interdisciplinary History,1(1):107?124.Scott Woodfield.
2012.
Effective sharing of familyhistory information.
In Proceedings of the 12th An-nual Family History Technology Workshop.
Family-Search.Ivo Zandhuis.
2005.
Towards a genealogical ontol-ogy for the semantic web.
In Humanities, Comput-ers and Cultural Heritage: Proceedings of the XVIinternational conference of the Association for His-tory and Computing, pages 296?300.28
