HUMOR-BASED APPL ICAT IONSG~ibor Pr6sz6ky 1,21 MORPHOLOGICF6 u.
56-58.
I/3H-1011 Budapest, HungaryE-mail: h6109pro@ella.huMik i6s  Pill 120PKM Comp.
CentreHonvdd u, 19.H-1055 Budapest ,HungaryE-mail: h6109pro@ella.huI~fiszl6 T ihany i  1,33 INSTITUTE FOR LINGUISTICSSzinh,qz u.
5-9.H- 10 l4 Budapest, HungaryE-mail: h1243tih@ella.huINTRODUCTIONThere are several linguistic phenomena that canbe processed by morphological tools of aggluti-native and other highly inflectional anguages,while processing of the same features need syn-tactic parsers in case of other languages, likeEnglish.
There are, however, only a few morpho-logical systems that are both fast enough andlinguistically sound.
I-lum0r, a reversible, string-based, unification approach is introduced in thepaper that has been used for creating a variety oflingware applications, like spell-checking, hy-phenation, lemmatization, and of course, fullmorphological analysis and synthesis.
Havingdiscussed the philosophical and design decisionswe show the above mentioned systems and thensurvey some competing approaches.DESIGN PHILOSOPHY OF HUMORSeveral philosophical commitments regarding theNLP systems are summarized in Slocum (1988).ttumor has been designed according to the Slocumrequirements.
It is language independent, that is,it allows multilingual applications.
Besides ag-glutinative languages (e.g.
Hungarian, Turkish)and highly inflectional anguages (e.g.
Polish,Latin) it has been applied to languages of majoreconomic and demographic significance (e.g.English, German, French), H,mor overcomessimple orthographic errors and mis-typings, thusit is a fault-tolerant system, The morphologicalanalyzer version, for example, is able to analyzeHungarian texts from the 19th century when theorthographic system was not as uniform asnowadays.
Word-forms are first "autocorrected"into the standard orthography and then analyzedproperly.Example 1 : fault-tolerance in Humor>> h iv6h iv  => h iv \ [V \ ]  q <3\[PART\](ca l l ing)>> galyakga ly  => gai ly \ [N\ ]  F ak\[}?L\](.f e1~ c'e s )Humor descriptions are reversible.
It means thatthere is an oppo1Iunity to input a stem and sev-eral suffixes and the system generates every pos-sible word-form satisfying the requestExample 2: reversibilityAnalysis:>> hAzadda l  (~ith your  house)hAz\[N\]  + ad\ [PERS-SG-2 \ ]+da I \ [ \ ]NS \ ](yon say)+ sz \ [PERS-SG-2  \](you say)asz \ [PERS-SG-2 \ ]>> mends  zmend \[V\]>> mondas  zmolld IV\]Synthesis:>> hAz\[N\]  + \ [PERS-SG-2\]  I \[INS\]hfizadda\] (with your  house)>> trend\[V\] + \ [PERS-SG-2\]raondsz, ll~ondasz (you say)The basic strategy of Humor is inherently suited toparallel execution.
Search in tire main dictionary,secondary dictionaries and affix dictionaries canhappen at the same time.
What is more, a simul-taneous processing level (higher than morphol-ogy) based on the same strategy is under devel-opment.7270In real-world applications, number of linguisticrules is an important source of grammatical com-plexity.
In the Humor strategy there is a single ruleonly that checks unifiability of feature graphs ofsubsequent substrmgs in the actual word-form.
It isvery simple and clear, based on surface-onlyanalyses, no transformations are used; all thecomplexity of the system is hidden in the graphsdescribing morpho-graphemic behavior.Humor is ri.~orously tested on "real" end-users.Root dictionaries of the above mentioned la,-guagcs contain 25.000 -100.000 eutries.
The Hun-garian version (90.000 stems) has been tested inevery-day work since 1991 both by researdmrs ofthe Institute of" Linguistics of the Hungarian Acad-emy of Sciences (Prdszdky and Tihanyi 1992) andusers of word-processors and Drl'p systems (Humor-based proofing tools have been licensed by Micro-solt.
Lotus and other software developers).MORPI IOLOGICAI ,  PRO(:ESSESSUI'I 'ORTI<D BY HUMORThe morphological nalyzer is the kernel moduleof the system: ahnost all of the applications derivedFrom Humor based on it.
Humor has a guessing strat-egy that is based on orthographic, moqJho-phonological, morphological and lexical propertiesoF the words.
It operates after the analysis module,mostly used in the sl)ellmg checkers based on Hu-mor and m the above mentioned 19th centmaj cor-pus application.5)?nthesis i based on analysis, that is, all the pos-sible moq3hemic ombinations built by the coresynthesis module are filtered by the analyzer.Examlfle 3: synthesis teps>> mond\[VI ~ \[\]?P,E'3-,~ZF-2\](I) Concrete morphemes insteadof abstract morphs:(2) String concatenation:mort.de\] ,mondo\ ]  , i~o~d6\ ] ,  mo~ds  z,111()I\] (~;-t,~l Z t i'tt()~Id<~ ,~1 Z(3) Analysis, one by olle:%monde\ ]  , %mon( io \ ] ,  %mond61,monds  z, mondas  z, %laoIld c~ s z(4) Filtering:~fLC)/ld?~ ZICL()IIdL~ ~; ZFor internal use we have developed a defaultingsubsystem that is able to propose the most likelyinflectional paradigm(s) for a base word.
There areonly a few moq)hologically open word classes inthe languages we have studied Paradigms that aredifficult to classify are generally closed; no newwords of the language follow their morpho-graphemic patterns.
The behavior of existing, pro-ductive paradigms is rather easy to describe algo-rithmically.The coding subsystem of Slocum (1988) is repre-sented by the so-called paradigm matrix of Humorsystems.
It is defined Ibr every possible allomorph:it gives infornmtion about the potential behavior ofthe stem allomotph before moqJhologically rele-vant affix families.COMI'ARISON WITII ()'FilERMETIIOI)SThere are only a few general, reversible morpho-logical systems that can be used for more than asingle language.
Besides the well-known two-levelmorphology (Koskenniemi 1983) and its modifica-tions (Katlttmen 1985, 1993) we mention theNabu system (Slocum 1988).
Molphological de-scription systems without lmge implementations(like the paradigmatic morphology of Calder(1989), or Paradigm Description Language ofAnick and Artemieff(1992) are not listed here, be-cause their importance is mainly theoretical (atleast, for the time being).
Two-level morphology isa reversible, orthography-based system that hasseveral advantages from a linguist's point of view.Namely, the morpho-phonenfic/graphemic rulescan be tbrmalized in a general and very elegantway.
It also has computational dvantages, but thelexicons must contain entries with diacritics andother sophistications in order to produce the neededsurface Yorms.
Non-linguist users need an easy-to-extend dictionary rote which words can be inserted(ahnost) automatically.
The lexical basis oF Humorcontain surface characters only and no transforma-tions are applied.Compile time of a large Humor dictionary (o\[90.000 entries) is 1 2 minutes on an average PC,that is another advantage (at least, for the linguist)if comparing it with the two-level systems' compil-ers.
The result of the compilation is a compressedstructure that can be used by any applications de-rived from Humor.
The compression ratio is lessthan 20%.
The size of the dictionary does not in-fluence the speed of the run-time system, because aspecial paging algorithm of our own is used.1271Example 4: Helyette, the monolingual thesaurus with morphological knowledgevlorphoLogic- Hclyette \ [ \ ]1MenuInput Output\[h,~zad~val \[n~z~te\[ed~vel \]R__oots Synonymsh~zMeaningsh~zExample 5: MoBiDie, tile bilingual dictionary with morphological knowledgeAorphoLogic- MoBiDi~_Language Dictionary Entry _Clipboard _User Help\[nput-English Headwords foundI d?tie  llduMeaning~:Hunflafian Headword li~?tillet(.~k durables~ durationvfim dutiableb ictio_nafesduty a~sessmentduty~lreeEuro Commercial Paners7272HUMOR-BASED IMPLEMENTATIONSHumor systems have been implemented (at variousdepth) for English, German, French, Italian, Latin,Ancient Greek, Polish, Turkish, and it is fiflly im-plemented for Hungarian.
The whole softwarepackage is written in standard C using C4-1 likeobjects.
It runs on any platforms where C compilercan be found ~ .
The Hungarian morphological na-lyzer which is the lalgest and most precise imple-mentation eeds 900 Kbytes disk space and around100 Kbytes of core memory.
The stem dictionarycontains more than 90.000 stems which cover all(approx.
70.000) lexemes of the Concise Explana-tol~v Dictionary of the Itungarian Language.
Suf-lix dictionaries contain all the inflectional suffixesand the productive derivational nmrphemes ofpres-ent-day Hungarian.
With the help of these dictionar-ies Humor is able to analyze and/or generate around2.000.000.000 well-formed Hungarian word-forms.Its speed is between 50 and 100 words/s on an av-erage 40 MHz 386 machine.
The whole system canbe tuned 2 according to the speed requirements: theneeded RAM size can be between 50 and 900Kbytes.There are several Hum0r subsystems with simplifiedoutput: lemmatizers, hyphenators, pelling checkersand correctors.
They (called Hdys~Lsm, HslyessI andHsly~s-e?, respectively) have been built into severalword-processing and full-text retrieval systems'Hungarian versions (Word, Excel, AmiPro, Word-Perfect, Topic, etc.).
~Besides the above well-known applications there aretwo new tools based on the same strategy, the re-flectional thesaurus called Hdy#t8 (Prdsz6ky andTihanyi 1992) and the series ofintdligent bi-lingualdictionaries called NoBi0i0.
Both are dictionarieswith morphological knowledge: Hdysff0 is monolin-gual, while NoBil)i0 - as its name suggests - -  bi-lingual.
Having analyzed the input word the bothsystems look for the found stem in the main diction-ary.
The inflectional thesaurus tores the reforma-tion encoded m the analyzed affixes and adds to thesynonym word chosen by the user.
The synthesismodule of Humor starts to work now, and providesthe user with the adequate inflected form of timword in question.
This procedure has a great impor-tance in case of highly inflectional languages.The synonym system of Hslysff8 contains 40.000headwords.
The first version of the inflectional the-saums HdysH8 needs 1.6 Mbytes disk space andruns under MS-Windows.
The size of the MoBiDicdictionary packages vary depending on the appliedterminological collection.
E.g.
the Hungarian--English Business Dictionary (Example 4) needs 1.8Mbytes space.
4Besides the above mentioned products, aHungariangrammar checker (called HsIy6~6bb) and other syn-tax-based (and higher level ) mono- and multilin-gual applications derived also from the basic Hum0ralgorithm are under development.REFERENCESAnick, P. and S. Artemieff (1992).
A High-levelMorphological Description Language Exploitinginflectional Paradigms.
Proceedings ofCOLING-92, p. 67 -73.Calder, J.
(1989).
Paradiglnatic Morphology.
Pro-ceedings of 4th Conference of EACL, p. 58-65.Karp, D., Y. Schabes, M. Zaidel, and D. Egedi(1992).
A Freely Available Wide CoverageMorphological Analyzer for English.
Proceed-ings ofCOLING-92, Vol.
III.
p. 950- 954.Koskenniemi, K. (1983).
Two-level Morphology.
"A General Computational Model for Word-form Recognition and Production.
Univ.
ofHelsinki, Dept.
of Gen. Ling,, PublicationsNo.
11.Pr6sz6ky, G. and L. Tihanyi (1992).
A Fast Mor-phological Analyzer for Lemmatizing Corporaof Agglutinative Languages.
In: Kiefer, F., G.Kiss, and J. Pajzs (Eds.)
Papers in Computa-tional Lexicography -- COMPLEX !92, Lin-guistics Institute, Budapest, p. 265-278.Pr6sz6ky, G. and L. Tihanyi (1993).
Helyette: In-flectional Thesaurus for Agglutinative Lan-guages.
In: Proceedings of the 6th Conferenceof the EACL, p. 173.Slocum, J.
(1983).
Morphological Processing in theNabu System.
Proceedings of the 2nd AppliedNatural Language Processing, p. 228-234.t /Jp to now, DOg, Windows, 0S/2, I hfix ~md M:ldl lW~ctwironlnCldS \]lave bccll tested.2 I ivcn by Ihc cnd-uscrs.3 For O\] '~M DulncIs flmrc is a wall-defined API to It.r~0t.MoBil)i~'s hu~guage ~mdlic aid not aH)lication ~mdlicpatisneed not lm multiplied because vocabttlall.cs oft}le .
'-;~urtc lallgtlages use a single conllnon tn,.phologicaI knowledge base.1273
