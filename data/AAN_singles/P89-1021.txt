THE LEX ICAL  SEMANTICS  OF  COMPARATIVEEXPRESS IONS IN A MULT I -LEVEL  SEMANTICPROCESSORDuane E. O lawskyComputer  Science Dept.University of Minnesota4-192 EE /CSc i  Building200 Un ion  Street SEMinneapol is ,  MN 55455\ [o lawsky~umn-cs .es .umn.edu\]ABSTRACTComparative xpressions (CEs) such as "big-ger than" and "more oranges than" are highlyambiguous, and their meaning is context depen-dent.
Thus, they pose problems for the semanticinterpretation algorithms typically used in nat-ural language database interfaces.
We focus onthe comparison attribute ambiguities that occurwith CEs.
To resolve these ambiguities our nat-ural language interface interacts with the user,finding out which of the possible interpretationswas intended.
Our multi-level semantic processorfacilitates this interaction by recognizing the oc-currence of comparison attribute ambiguity andthen calculating and presenting a list of candi-date comparison attributes from which the usermay choc6e.I I PROBLEM DESCRIPT ION.Although there has been considerable work on thedevelopment of natural language database inter-faces, many difficult language interpretation prob-lems remain.
One of these is the semantic inter-pretation of comparative expressions such as thoseshown in sentences (1) through (3).
(1) Does ACME construct bet ter  buildings thanACE?
(2) Does ACME construct buildings faster thanACE?
(3) Are more  oranges than apples exported byMexico?To interpret a comparative xpression (CE) a'natural language processor must determine (1)the entities to he compared, and (2) the at-tribute(s) of those entities to consider in per-forming the comparison.
The selection of com-parison attributes is made difficult by the highlevel of lexical ambiguity exhibited by compara-tive predicates.
For example, what pieces of datashould be compared to answer query (1)?
If thedatabase contains information about foundationtype, structural characteristics, wiring, and in-sulation, any of these attributes could be used.Similarly, when comparing orange and apple ex-ports as in query (3), we might compare numericquantity, weight, volume, or monetary value.
Tofurther complicate matters, the plausible compar-ison attributes for a comparative predicate changewith the arguments to which that predicate is ap-plied.
Table 1 shows several examples of likelycomparison attributes to use with the predicate"bigger" depending on the types of entity thatare being compared.
Since the system must de-termine for a comparative predicate the lexicaldefinition intended by the user, this problem is,at heart, one of lexical ambiguity resolution.The problems discussed so far are similar to thewell known vagueness and context sensitivity ofadjectives (although they occur here even in sen-tences without adjectives such as (3)).
Any pro-posed method of CE interpretation should alsotreat several other phenomena that are uniqueto comparatives.
These are bipredicational com-parisons, cross-class comparisons, and pairabilityconstraints.
Bipredlcational comparisons in-volve two predicates, as shown in example (4) (the169Table 1: Examples of argument sensitivity in themeaning of ~bigger".Argument ypehotels number of roomshospitMs number of bedshouses square feetnumber of rooms, ornumber of bedroomswheat farms number of acresd~iry farms number of cowscountries number of people,or  land ~reacars length,curb weight,passenger space, orpassenger limitpredicates are in boldface), and they use a differ-ent comparison attribute for each argument of thecomparative.
(4) John's car is wider than Mary's car is long.Bipredicational CEs have strong pa i rab i l l tyconst rn ;n ts  (Hale 1970).
That  is, there are re-strictions on the pairing of predicates in s bipred-icational CE.
Example (5) gives a sentencethat is semantically anomalous because it violatespalrability constraints.
(5) ?
Bob's car is wider than it is heavy.A crc~s-class comparison involves arguments ofradically different ypes as shown in (6).
(6) Is the Metrodome bigger than Rona ldReagan?
IInterpreting this comparison requires that we finda stadium attribute and a person attribute whichare in some sense comparable ( .g.
stadium-heightand person-height).
Pairability constraints alsoapply indirectly to cross-class comparisons as canbe seen in the oddness of (7).I Although this is am unusual comparison to request, it isperfectly un~ble ,  and the literal interpretation iseasily answered.
As pointed out to me by Karen Rysn,temce (6) has several po~ible metaphoric nterpretations(e.g.
"Does the Metrodome get more news coverage thanIRonaid Reapn?").
In this paper we will generally ignoremetaphm-ic intcrpretatiom.
HoweveF, using the approachwe describe below, they could be handled in much the sameway as the more liter, d ones.
(7) ?
The party was longer than my car.
~-Although we have only one predicate ("longer") inthis sentence, it is difficult to find a comparablepair of attributes.
The attribute describing thelength of a party is not comparable to any of theattributes describing the length of a car.When faced with ambiguous input a naturallanguage interface has two options.
In the firstone, it guesses at what the user wants and pro-rides the answer corresponding to that guess.
Inthe second, it interacts with the user to obtain amore completely specified query.
Although Op-tion 1 is easier to implement, it is also inflexibleand can lead to miscommunication between theuser and the interface.
With Option 2, the systemlets the user select the desired interpretation, re-suiting in greater flexibility and less chance of mis-understanding.
It is the second option that we areexploring.
To carry out Option 2 for CE interpre-tation the system must present o the user a list ofthe permissible comparison attribute pairs for thegiven CE.
In Section 3 we will see how pairabil-ity constraints can be used to delimit these pairs.Comparatives add significant expressive power toan interface (Ballard 1988), and it is therefore im-portant that reliable techniques be developed toresolve the lexical ambiguities that occur in CEs.2 PRIOR WORK.For purposes of discnssion we will divide compara-tive expressions into the following commonly usedclasses: adject iva l ,  adverb ia l ,  and adnomlna l ,where the comparative element is based on an ad-jective, an adverb, or a noun, respectively.
See(1)--(3) for an example of each type.
Withinlinguistics, adjectival comparatives are the moststudied of these three varieties.
(See (Rusiecki1985) for a detailed description of the varioustypes of adjectival comparative.)
For work onthe syntax of CEs see (Bresnan 1973), (Pinkham1985) and (Ryan 1983).
Klein (1980), (1982)presents a formal semantics for adjectival CEswithout using degrees or extents.
It would be diffi-cult to apply his work computationally since thereis no easy way to determine the positive and neg-ative extensions of adjectives upon which his the-ory rests.
Hoeksema (1983) defines a set-theoretic2Scnt~mce (7) can perhaps be interpreted metaphori-cally (perhaps with humorotm intent), but it se~ns moredifficult to do so than it does with (6).
It is certainly hardto im~ what truth conditions (T) might have!170semantics for adjectival comparatives based onprimitive grading relations that order the domainwith respect o gradable adjectives.
HIS primaryconcern is the relationship of comparatives to co-ordination and quantification, and he pays littleattention to lexical ambiguities.
Cresswell's work(Cresswell 1976) handles both adjectivals and ad-nominals and is closer in spirit to our own (seeSection 3.1).
It contains analogs of our CodomainAgreement Principle, mappings and base orders.The main difference is that whereas Cressweli al-ways uses degrees, we also allow base orders to bedefined directly on the domain entities.Most of the work done on lexical ambiguityresolution (e.g.
(Hirst 1984) and (Wilks 1975))has focussed on homonymy (when words have asmall number of unrelated meanings) rather thanpolysemy (when words have many closely relatedmeanings) as occurs with CEs.
The techniquesdeveloped for homonymy depend on large seman-tic differences between meanings and thus are notas useful for CEs.Although comparatives are frequently used asexamples in the NLP literature (e.g.
(Hendrix,Sacerdoti, Sagalowicz, and Slocum 1978), (Mar-tin, Appelt, and Pereira 1983) and (Pereira1983)), no one has presented a detailed treatmentof the ambiguities in the selection of comparisonattributes.
Most NLP researchers provide neithera detailed explanation of how they treat compar-atives nor any characterization f the breadth oftheir treatment.
Two exceptions are the recentpapers of Ballard (1988) and Rayner and Banks(1988).
The former treats adjectival and adnomi-hal comparatives, and is primarily concerned withthe interpretation of expressions like "at least 20inches more than twice as long as".
The selectionof comparison attributes is not discussed in anydetail.
Rayner and Banks (1988) describe a logicprogramming approach to obtaining a parse andan initial logical formula for sentences containinga fairly broad range of CEs.
They do not dis-cuss lexical semantics and thus do not deal withcomparison attribute selection.This paper is an abbreviated version of a longerpaper (Olawsky 1989), to which the reader is re-ferred for a more detailed presentation.3 SOLUTION APPROACH.In ~his section we describe a rule-based semanticprocessor that follows Option 2.
To provide foruser-controlled comparison attribute selection weaugment the common lexical translation process(e.g.
(Bronnenberg, Bunt, Landsbergen, Scha,Schoenmakers, and van Utteren 1980) and (Ryan,Root, and Olawsky 1988)) with a Mapping Selec-tor that communicates with the user and returnsthe results to the rule-based translator.
The im-plementation of the approach described here is inprogress and is proceeding well.3.1  Semant ic  Descr ip t ion  o f  Com-parat ives .We base our approach on the semantic interpreta-tion of a comparative predicate as a set-theoreticrelation.
A comparison defined by the relation 7~is true if the denotations of the first and secondarguments of the comparative predicate (i.e.
itssubject and object 3) form an element pair of 7~.It is tempting to claim that comparatives shouldbe defined by orders rather than relations (we callthis the Compar i son  Order  Claim).
However,it can be shown (Olawsky 1989) that the compar-ison relation Lw for a bipredicational comparativelike longer than ...  wide is neither asymmetric norantisymmetric 4, and hence, Lw is not an order.
5Comparison relations are not defined directly inour semantic description.
Instead they are speci-fied in terms of three components: a base order,a sub ject  mapping,  and an ob ject  mapping.The base order is a set-theoretic order on some do-main (e.g.
the obvious order on physical engths).The subject mapping is a mapping from the do-main of the denotation of the subject of the CEto the domain of the base order (e.g.
the map-ping from a rectangle to its length).
The objectmapping is defined analogously.
Let comparisonrelation ~ be defined by the base order B, and thesubject and object mappings M, and Mo.
Then(a,b) E 7~ if and only if (M,(a),Mo(b)) E B. Itshould be noted here that comparison attributeselection is now recast as the selection of subjectand object mappings.3Our rea~ns for calling the first and second argumentsof a CE the subject and object are syntactic and beyondthe scope of this paper (see (Ryan 1983)).4It is ~ euy to show that Lt# is nontransitive.SKleln ((1980), p. 23) and Hoel~enm ((1983), pp.
410-411) both make clalms lmilar (but not identical) to theComparmon Order Claim.
It seems to us that bipred-icationak pose a problem for Hoeksema's analysis (see(Olawaky 1989)).
Klein appears to relax his assumptionsslightly when he deals with them.
Cresswell (1976) dearlyavoids the Comparison Order Claim.1'7'1By definition, the subject and object mappingsmust have the same codomain, and this codomainmust be the domain of the base order.
We call thisthe Codomain Agreement Principle, and it isthrough this principle that pairability constraintsare enforced.
For example, when interpreting theCE in sentence (5), we must find a subject map-ping for the width of Bob's car and an object map-ping for its weight, and these mappings must havethe same codomain.
However, this is impossiblesince all width mappings will have LENGTH asa codomain, and all weight mappings will haveWEIGHT as a codomain.
The Codomain Agree-ment Principle also helps explain the interpreta-tion of sentences (6) and (7).Before concluding this section we consider thesemantic description of CEs in TEAM ((Grosz,Haas, Hendrix, Hobbs, Martin, Moore, Robinson,and Rosenschein 1982) and (Martin, Appelt, andPereira 1983)), comparing it to ours.
Since com-parative xpressions were not the main focus inthese papers, we must piece together TEAM'streatment of CEs from the examples that aregiven.
In (Grosz, Haas, Hendrix, Hobbs, Mar-tin, Moore, Robinson, and Rosenschein 1982), theCE "children older than 15 years" is translatedto ((*MORE* OLD) child2 (YEAR 15)) where"*MORE* maps a predicate into a comparativealong the scale corresponding to the predicate" (p.11).
This implies that TEAM requires the samenmpping to be used for both the subject and ob-ject of the comparative.
That would not work wellfor bipredicational CEs, and could also lead toproblems for crose-claes comparisons.
In (Martin,Appelt, and Pereira 1983) the examples containpredicates (e.g.
salary.of and earn) which, on thesurface, are similar to mappings.
However, in con-trast to our approach, it does not appear that anyspecial significance is given to these predicates.There is nothing in either paper to indicate thatthe many types of CEs are consistently translatedto a base order, subject mapping and object map-ping as is done in our systerrL Furthermore, thereis nothing analogous to the Codomain AgreementPrinciple discussed in either paper."
Now, we moveon to a presentation f how the semantic descrip-tion presented above is applied in our system.3.2 Genera l  Comments .We use a multi-level semantic processor (see(Bates and Bobrow 1983), (Bronnenberg, Bunt,Landsbergen, Scha, Schoenmakers, and van Ut-teren 1980), (Grosz, Haas, Hendrix, Hobbs, Mar-tin, Moore, Robinson, and Rosenschein 1982),(Martin, Appelt, and Pereira 1983) and (Ryan,Root, and Olawsky 1988) for descriptions ofsimi-lar systems).
At each level queries are representedby logic-based formulas (see (Olawsky 1989) forexamples) with generalized quantifiers ((Barwiseand Cooper 1981), (Moore 1981) and (Pereira1983)) using predicates defined for that level.
Theinitial level is based on often ambiguous English-oriented predicates.
At the other end is a de-scription of the query in unambiguous database-oriented terms (i.e.
the relation and attributenames used in the database).
Between these lev-els we have a domain model evel where formulasrepresent the query in terms of the basic entities,attributes and relationships ofthe subject domaindescribed in a domain model.
These basic con-cepts are treated as unambiguous.
Linking theselevels are a series of translators, each of which isresponsible for handling a particular semantic in-terpretation task.In this paper we restrict our attention to thetranslation from the English-oriented level (EL)to the domain model level (DML) since this iswhere CEs are disambiguated bychoosing unam-biguous mappings and base orders from the do-main model.
To perform its task the EL-DMLtranslator uses three sources of information.
First,it has access to the domain model, a frame-basedrepresentation f the subject domain.
Second, ituses the semantic lexicon which tells how to mapeach EL predicate into a DML formula.
Finally,this translator will, when necessary, invoke theMapping Selector--a program that uses the se-mantic lexicon and the domain model to guidethe user in the selection of a comparison attributepair.For our semantic formulas we extend the usualontology of the predicate calculus with three newclasses: sets, mass aggregations, and bunches.Sets are required for count noun adnominal com-paratives (e.g.
"Has ACME built more ware-houses than ACE?")
where we compare set cardi-nalities rather than entity attribute values.
Givena class of mass entities (e.g.
oil), a mass aggre-gation is the new instance of that class result-ing from the combination of zero or more old in-stances.
For example, if John combines the oilfrom three cans into a large vat, the oil in thatvat is an aggregation of the oil in the cans.
It isnot necessary that the original instances be phys-ically combined; it is sufficient merely to consider172them together conceptually.
Mass aggregationsare needed for mass noun adnominal compara,tires.
Finally, we define the term bunch  to referambiguously both to  sets and to ma~ aggrega-tions.
Bunches are used in EL where mass aggre-gations and sets are not yet distinguished.
Sets,mass aggregations and hunches are described insemantic formulas by the *SET.OF ~, *MASS-OF*, and *BUNCH-OF* relations, respectively.These relations are unusual in that their secondarguments are unary predicates erving as char-acteristic functions defining the components ofthe first argnment---a set, aggregation or hunch.For example, (*MASS-OF* rn (Awl(wheat wJJ)) istrue in case m is the aggregation of all mass enti-ties ?
such that Awl(wheat w)/(e) is true (i.e.
e iswheat).3.3 Base Orders and Mappings.EL and DML formulas contain, for each CE, abase order and two mappings.
Two sample ELbase orders are more and less.
DML base ordersare typically defined on domains such as VOL-UME, and INTEGER, hut they can also be de-fined on domains that are not usually numeri-cally quantified such as BUILDING-QUALITY,or CLEVERNESS.
More and less are ambiguousbetween the more specific DML orders.Most EL mappings /~ correspond one-for-onewith an English adjective (or adverb).
They arebinary relations where the first argument is anentity ?
from the domain and the second is thedegree of ~-ness that e possesses.
For example,if bi~ is an EL mapping, then in (bi~ e b), b isthe degree of bigness for e. Of course, bif is sm-hignous.
In contrast o adjectival and adverbialCEs, all adnominais use the ambiguous EL map-ping *MUCH-MANY* which pairs a bunch withits size.In most cases, a DML mapping is a relationwhose first argument is an entity from some classin the core of the domain model and whose secondargument is from the domain of a base order.
Inthe mapping predication (DM_w-storage-rolumew v) the first argument is a warehouse, and thesecond is a volume.
DM.w-storage.volurne couldserve as the translation of big ~ when applied to awarehouse.
CEs based on count nouns generallyuse the *CARDINALITY* mapping which is likeother mappings except that its first argument isa set of entities from a domain model class ratherthan a member of the class.
The second argumentis always an integer.
Mass noun comparatives re-quire a slightly different approach.
Since we aredealing with a mass aggregation rather than a set,the *CARDINALITY* mapping is inapplicable.To measure the size of an aggregation we com-bine, according to some function, the attributevalues (e.g.
weight or volume) of the componentsof the aggregation, s Thus, the mappings used formass adnominal comparatives are based on theattributes of the appropriate class of mass enti-ties.3.4 EL-DML Translation Rules.As stated above, EL and DML are linked bya translator that uses rules defined in the se-mantic lexicon (see (Olawsky 1989) for samplerules).
These rules constitute definitions of theEL predicates in terms of DML formulas.
Oursystem employs three kinds of translation rules--Trans, MTrans, and BTrans.
Trans  rules havefour components: a template  to he matchedagainst an EL predication, an EL context  spec-if ication, a DML context  specif ication, andthe DML t r~r~lat lon of the EL predication.
~The context specifications are used to resolve am-higuities on the basis of other predications inthe EL formula and the (incomplete) DML for-mula.
A rule is applicable only if its contextspecifications are satisfied.
Although a predica-tion in an EL context specification must unif~with some predication in the context, subsuml>-tion relationships are used in matching DMLcontext specifications.
Thus, the DML contextspecification (DM.huilding b) will be satisfied by(DM_wareho~ae b) since DM_building subsumesDM.warehouse.
MTrans  rules are intended forthe translation of subject and object mappingpredications from EL to DML.
They have two ex-tra components that indicate the base order andthe mapping to he used in DML.
This additionalinformation is used to enforce the CodomainAgreement Principle and to help in the user inter-action described in Section 3.5.
Finally, BTranseAlthough the ~regat ion  function would likely beSUM for attributes uch as weight, volume, and value,othor functions are poesible.
For example, AVERAGEmight be used for & nutritional-quallty attribute of an agri-cultural commodity.
The aggregation function is not ex-plicltly reflected in our system until the database l vel7Trans rules are nearly identical to the lexical trans-lation rules used in the ATOZ system (Ryan, Root, andOlawsky 1988).
However, our rules do have some addi-tional features, one of which will be discussed below.173rules are used to translate *BUNCH-OF* predi-cations to DML.One noteworthy feature of our translation rulesis that they can look inside a functional A-argument o satisfy a context specification, s Wecall these A-context  speci f icat ions,  and theymay be used inside both EL and DML contextspecifications for rules of all three types.
How-ever, it is only in BTrans rules that they can occuras a top level specification.
Top level A-contextspecifications (e.g.
(Ab \[(DM.building b)\])) arematched to the functional argument of the rele-vant *BUNCH-OF* predication.
This match isperformed by treating the body of the A-contextspecification as a new, independent context spec-ification which must be satisfied by predicationsinside the body of the functional argument.
InTrans and MTrans rules, a A-context specifica-tion can occur only as an argument of somenormal predicational context specification.
Forexample, the specification (*MA$$-OF*b (Ac\[(DM_commodi~y c)\])) can be used in any DMLcontext specification.
It checks whether b is amass of some commodity.
Just as standard con-text specifications provide a way to examine theproperties of the arguments of a predication beingtranslated, A-context specifications provide a wayto determine the contents of a bunch by inspect-ing the definition of its characteristic function.Before continuing, we compare our contextmatching mechanism to the similar one usedin the PHLIQA1 system (Bronnenberg, Bunt,Landsbergen, Scha, Schoenmakers, and van Ut-teren 1980).
This system uses a typed seman-tic language, and context checking is based en-tirely on the type system.
As a result, PHLIQA1can duplicate the effect of context specificationslike (DM.building b) by requiring that b havetype DM_buildin~.
However, PHLIQA1 can-not handle more complex specifications such as((DM_building b) (DM.b-owner bACME)) sincethere is no semantic type in PHLIQA1 that wouldcorrespond to this subset of the buildings in thedomain.
9 The same comments apply to A-contextspecifications which can be declared in PHLIQA1$This is an extension to the rules used in ATOZ (Ryan,Root, and Olawsky 1988) which do not Allow functions Marguments and therefore never need this kind of contextchecking.9One could p~-haps modify the PHLIQA1 world modelto  contain such subclasses of buildings, but this wouldeventually lead to a very complex model It would alsobe difficult or impo~ible to keep such a model hierarchicalin structure.by specifying a functional semantic type.
Thatis, (Ab (DM_building b)) is written as the typeDM_buildin$ ---, truthvalue, a function from build-ings to truth values.
As with standard contextspecifications, (Ab (DM_building b) (DM_b-ownerb A CME)) cannot be expressed as a type re-striction.
Thus, the context specifications usedin PHLIQA1 offer less discrimination power thanthose used in our system.There is one other difference regarding A-context specifications that should be notedhere.
The context specification (Ab (DM_buddingb)) will be satisfied by the expression (A w(DM.warehouse w)).
However, in PHLIQA1 thetype DM_building --* truthvalue will not matchthe type DM~warehouse-* truthvalue.
From this,we see that PHLIQA1 does not use subsumptioninformation in matching A-context specifications,while our system does.3 .5  T rans la t ion  and  Mapp ing  Se-lec t ion .When translating an input sentence containing acomparative expression from EL to DML, the sys-tem first applies Trans and Btrans rules to trans-late the predications that do not represent map-pings or base orders.
Next, comparison attributesmust be selected.
The system recognizes compar-ison attribute ambiguity when there is more thanone applicable MTrans rule for a particular ELmapping predicate.
We define a cand idate  map-p ing as any DML mapping that, on the basis of anapplicable MTraus rule, can serve as the transla-tion of a mapping in an EL formula.
Assume thatfor an EL predication (big ~ w a) in a given contextthere are three applicable MTrans rules trans-lating big' to the three DML mappings DMow-storage-volume, DM.w-storage-area, and DM_b-total-area, respectively.
All three of these DMLmappings would then be candidates with eitherVOLUME or AREA as the corresponding baseorder.The system examines the semantic lexicon todetermine a list of candidate mappings for eachEL mapping.
A candidate is removed from oneof these lists if there is no compatible mapping inthe other list.
Compat ib le  mapp ings  are thosethat allow the Codomain Agreement Principle tobe satisfied, and they are easily identified by ex-amining the base order component of the MTransrules being used.
All of the remaining candidates174in one of the lists are presented to the user whomay select a candidate mapping.
Next, the se-mantic processor presents to the user those can-didates for the other EL mapping that are com-patible with her first choice.
She must select oneof these remaining candidates as the translationfor the second mapping.
Based on her choices,two MTraus rules (one for each EL mapping) areapplied, and in this way the EL mapping predica-tions are translated to DML formulas.
Once thisis completed, the processor can easily translatethe EL base order to the DML base order listed inboth of the MTraus rules it used (with any neces-sary adjustments in the direction of comparison).4 COMMENTS AND CONCLU-SIONS.We are currently examining some additional is-sues.
First, once candidate mappings are ob-tained, how should they be explained to the user?In the present design text is stored along withthe declaration of each mapping, and that text isused to describe the mapping to the user.
This ap-proach is somewhat limited, especially for adnom-inal comparatives given their flexibility and therelatively small information content of the *CAR-D INAL ITY  ~ mapping.
A more general techniquewould use natural language generation to explainthe semantic import of each mapping as appliedto its arguments.
Perhaps there are compromiseapproaches between these two extremes (e.g.
somekind a pseudo-English explanations).Second, it seems desirable that the system couldwork automatically without asking the user whichmappings to use.
Perhaps the system couldchoose a mapping, do the query, present he re-suits and then tell the user what interpretationwas assumed (and offer to try another interpreta-tion).
This works well as long as either (a) the sys-tem almost always selects the mapping intendedby the user, or (b) the cost of an incorrect choice(i.e.
the wasted query time) is small.
If the sys-tem frequently makes a poor choice and wastesa lot of time, this approach could be quite an-noying to a user.
Crucial to the success of thisautomatic approach is the ability to reliably pre-dict the resources required to perform a query sothat the risk of guessing can be weighed againstthe benefits.
A similar issue was pointed out byan anonymous reviewer.
We noted in Section 1that for sentence (3) (repeated here as (8))(8) Are more oranges than apples exported byMexico?the comparison could be based on quantity,weight, volume, or value.
If the answer is thesame regardless of the basis for comparison, a"friendly" system would realize this and not re-quire the user to choose comparison attributes.Unfortunately, this realization is based on exten-sional rather than intentional equivalence, andhence, the system must perform all four (in thiscase) queries and compare the answers.
The extracost could be prohibitive.
Again, the system mustpredict query performance r source requirementsto know whether this approach is worthwhile fora particular query.
See (Olawsky 1989) for moreinformation on further work.To summarize, we have examined a number ofissues associated with the semantic interpretationof comparative expressions and have developedtechniques for representing the semantics of CEsand for interacting with the user to resolve com-parison attribute ambiguities.
These techniqueswill work for adjectival, adverbial, and adnomi-hal comparatives and for both numerically andnon-numerieally based comparisons ( ee (Olawsky1989) for more on this).
We are presently com-pleting the implementation f our approach inCommon Lisp using the SunView x?
window sys-tem as a medium for user interaction.
Most pre-vious techniques for handling lexical ambiguitywork best with homonymy since they depend onlarge semantic differences between the possible in-terpretations of a lexieal item.
Our approach, onthe other hand, does not depend solely on thesesemantic differences and handles polysemy well.5 ACKNOWLEDGEMENTS.I wish to thank the University of Minnesota Grad-uate School for supporting this research throughthe Doctoral Dissertation Fellowship program.
Ialso want to thank Maria Gini, Michael Kac,Karen Ryan, Ron Zacharski, and John Carlis fordiscussions and suggestions regarding this work.Re ferencesBMlard, Bruce W. June 1988 A General Compu-tational Treatment of Comparatives for NaturalLanguage Question Answering.
In: ~6th AnnualX?SunView is a trademark of Sun Microsystenm, Inc.175Meeting of the Association for Computational Lin.guisticz.
Buffalo, NY.Barwise, Jan and Cooper, Robin.
1981 GeneralizedQuantifiers and Natural Language.
Linguisticsand Philosophy 4(2): 159-219.Bates, Madeleine and Bobrow, Robert J.
1983 Infor-mation Retrieval Using s Transportable NaturalLanguage Interfxce.
In: Research and Develop-ment in Information Retrieval: Proceedings of theSixth Annual International A CM SIGIR Confer-ence, Bethesda, Md.
New York: 81-86.Bresnan, Joa~n W. 1973 Synte~x of the ComparativeClause Construction i English.
Linguistic Inquiry4(3): 275-343.Bronnenberg, W. J. H. J.; Bunt, H. C.; Lxndsber-gen, S. P. J.; Schx, R. J. H.; Schoenmakers, W. J.;and van Utteren, E. P. C. 1980 The Question-Answering System PHLIQA1.
In: Bolc, L., Ed.,Natural Language Question Answering Systems.Macmillan.Cresswell, M. J.
1976 The Semantics of Degree.
In:Pxrtee, Barbara, Ed., Montague Grammar.
Aca-demic Press: 261-292.Grmz, Barbaxa; Haas, Norman; Hendrix, Gary;Hobbs, Jerry; Martin, Paul; Moore, Robert;Robinson, Jane; and Rosenschein, Stanley.November 1982 DIALOGIC: A Core Natural-Language Processing System.
Tech.
Note 270,Artificial Intelligence Center, SRI International,Menlo Park, California.Hale, Austin.
1970 Conditions on English compara-tive clause pairings.
In: Jacobs, R. A. and Rosen-bourn, P., Eds., Readings in English Transforma-tional Grammar.
Ginn & Co., Waltham, Mass.
:30-50.Hendrix, Gaxy G.; Sacerdoti, Earl D.; Sagalowicz,Daniel; and Slocum, Jonathan.
1978 Develop-ing a Natural Language Interface to ComplexDxt~.
A CM Transactions on Database Systems3(2): 105-147.Hirst, Graeme John.
May 1984 Semantic Interpreta-tion Against Ambiguity.
PhD thesis, ComputerScience Dept., Brown University.Hoeksema, Jack.
1983 Negative Polarity and theComparative.
Natural Language and LinguisticTheory 1: 403-434.Klein, Ewxn.
1980 A Semantics for Positive and Com-parative Adjectives.
Linguistics and Philosophy 4:1-46.Klein, Ewan.
1982 The Interpretation of AdjectivalComparatives.
Linguistics 18: 113-136.Martin, Paul; Appelt, Douglas; and Pereirx, Fer-nxndo.
1983 Transportability and Generality in aNatural-Language Interface System.
In: Proceed-ings of the Eighth International Joint Conferenceon Artificial Intelligence, Karisruhe, West Ger-many.
William Kaufmxnn, Inc., Los Altos: 573-581.Moore, Robert C. 1981 Problems in Logical Form.In: Proceedings of the 19th Annual ~\[eeting.
As-sociation for Computational Linguistics, Stanford,Ca/ifornia: 117-124.Olawsky, Duxne E. April 1989 The Lexical Seman-tics of Comparative Expressions in a Mull-LevelSemantic Processor.
Technical Report CSci TR89-19, Computer Science Dept., University of Min-nesota, Minneapolis, MN.Percirx, Fernxndo.
1983 Logic for Natural LanguageAnalysis.
Technical Note 275, Artificial Intelli-gence Center, Computer Science and TechnologyDivision, SRI International, Menlo Park, Califor-nlx.
Ph.D. dissertation, Department of ArtificialIntelligence, University of Edinburgh.Pink, ham, Jessie Elizabeth.
1985 The Formation ofComparative Clauses in French and English.
Gar-land Publishing Inc, New York.
Also availablefrom Indian~ University Linguistics Club, Bloom-ington, IN, August 1982.P~yner, Mxnny and Banks, Amelie.
June 1988 Pars-ing and Interpreting Comparatives.
In: ~6th An-nual Meeting of the Association for ComputationalLinguistic.
Buffalo, NY.Rusiecki, Jan. 1985 Adjectives and Comparison inEnglidt: A Semantic Study.
Longman Inc., NewYork.Ryem, Karen L.; Root, Rebecca; and Olawsky, Duxne.February 1988 Application-Specific Issues in NLIDevelopment for a Diagnostic Expert System.
In:Association for Computational Linguistics SecondCoherence on Applied Natural Language Process-ing.
Austin, Texas.Ryxn, Karen L. 1983 A Grammar of the EnglishComparative.
PhD thesis, University of Min-nesota.
Reproduced by Indiana University Lin-guistics Club, Bloomington Indiana, 1986.Wilks, Yorick.
1975 An Intelligent Analyzer and Un-derstander of English.
CACM 18(5): 264-274.176
