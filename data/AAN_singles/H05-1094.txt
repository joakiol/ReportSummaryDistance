Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural LanguageProcessing (HLT/EMNLP), pages 748?754, Vancouver, October 2005. c?2005 Association for Computational LinguisticsComposition of Conditional Random Fields for Transfer LearningCharles Sutton and Andrew McCallumDepartment of Computer ScienceUniversity of MassachusettsAmherst, MA 01003{sutton,mccallum}@cs.umass.eduAbstractMany learning tasks have subtasks for whichmuch training data exists.
Therefore, we wantto transfer learning from the old, general-purpose subtask to a more specific new task,for which there is often less data.
While workin transfer learning often considers how theold task should affect learning on the newtask, in this paper we show that it helps totake into account how the new task affects theold.
Specifically, we perform joint decoding ofseparately-trained sequence models, preserv-ing uncertainty between the tasks and allowinginformation from the new task to affect predic-tions on the old task.
On two standard text datasets, we show that joint decoding outperformscascaded decoding.1 IntroductionMany tasks in natural language processing are solved bychaining errorful subtasks.
Within information extrac-tion, for example, part-of-speech tagging and shallowparsing are often performed before the main extractiontask.
Commonly these subtasks have their own standardsets of labeled training data: for example, many largedata sets exist for learning to extract person names fromnewswire text; whereas the available training data for newapplications, such as extracting appointment informationfrom email, tends to be much smaller.
Thus, we need totransfer regularities learned from a well-studied subtask,such as finding person names in newswire text, to a new,related task, such as finding names of speakers in emailseminar announcements.In previous NLP systems, transfer is often accom-plished by training a model for the subtask, and using itsprediction as a feature for the new task.
For example, re-cent CoNLL shared tasks (Tjong Kim Sang & De Meul-der, 2003; Carreras & Marquez, 2004), which are stan-dard data sets for such common NLP tasks as clause iden-tification and named-entity recognition, include predic-tions from a part-of-phrase tagger and a shallow parser asfeatures.
But including only the single most likely sub-task prediction fails to exploit useful dependencies be-tween the tasks.
First, if the subtask prediction is wrong,the model for the new task may not be able to recover.
Of-ten, errors propagate upward through the chain of tasks,causing errors in the final output.
This problem can beameliorated by preserving uncertainty in the subtask pre-dictions, because even if the best subtask prediction iswrong, the distribution over predictions can still be some-what accurate.Second, information from the main task can inform thesubtask.
This is especially important for learning trans-fer, because the new domain often has different charac-teristics than the old domain, which is often a standardbenchmark data set.
For example, named-entity recog-nizers are usually trained on newswire text, which is morestructured and grammatical than email, so we expect anoff-the-shelf named-entity recognizer to perform some-what worse on email.
An email task, however, often hasdomain-specific features, such as PREVIOUS WORD ISSpeaker:), which were unavailable or uninformative tothe subtask on the old training set, but are very informa-tive to the subtask in the new domain.
While previouswork in transfer learning has considered how the old taskcan help the new task, in this paper we show how the newtask can help itself by improving predictions on the old.In this paper we address the issue of transfer by train-ing a cascade of models independently on the varioustraining sets, but at test time combining them into a singlemodel in which decoding is performed jointly.
For the in-dividual models, we use linear-chain conditional randomfields (CRFs), because the great freedom that they allowin feature engineering facilitates the learning of richer in-teractions between the subtasks.
We train a linear chainCRF on each subtask, using the prediction of the previoussubtask as a feature.
At test time, we combine the learnedweights from the original CRFs into a single grid-shapedfactorial CRF, which makes predictions for all the tasks748at once.
Viterbi decoding in this combined model im-plicitly considers all possible predictions for the subtaskwhen making decisions in the main task.We evaluate joint decoding for learning transfer on astandard email data set and a standard entity recognitiontask.
On the email data set, we show a significant gainin performance, including new state-of-the-art results.
Ofparticular interest for transfer learning, we also show thatusing joint decoding, we achieve equivalent results to cas-caded decoding with 25% less training data.2 Linear-chain CRFsConditional random fields (CRFs) (Lafferty et al, 2001)are undirected graphical models that are conditionallytrained.
In this section, we describe CRFs for the linear-chain case.
Linear-chain CRFs can be roughly under-stood as conditionally-trained finite state machines.
Alinear-chain CRF defines a distribution over state se-quences s = {s1, s2, .
.
.
, sT } given an input sequencex = {x1, x2, .
.
.
, xT } by making a first-order Markovassumption on states.
These Markov assumptions implythat the distribution over sequences factorizes in terms ofpairwise functions ?t(st?1, st,x) as:p(s|x) =?t ?t(st?1, st,x)Z(x), (1)The partition function Z(x) is defined to ensure that thedistribution is normalized:Z(x) =?s?
?t?t(s?t?1, s?t,x).
(2)The potential functions ?t(st?1, st,x) can be interpretedas the cost of making a transition from state st?1 to statest at time t, similar to a transition probability in an HMM.Computing the partition function Z(x) requires sum-ming over all of the exponentially many possible statesequences s?.
By exploiting Markov assumptions, how-ever, Z(x) (as well as the node marginals p(st|x) and theViterbi labeling) can be calculated efficiently by variantsof the standard dynamic programming algorithms usedfor HMMs.We assume the potentials factorize according to a setof features {fk}, which are given and fixed, so that?
(st?1, st,x) = exp(?k?kfk(st?1, st,x, t)).
(3)The model parameters are a set of real weights?
= {?k},one for each feature.Feature functions can be arbitrary.
For example, onefeature function could be a binary test fk(st?1, st,x, t)that has value 1 if and only if st?1 has the label SPEAK-ERNAME, st has the label OTHER, and the word xt be-gins with a capital letter.
The chief practical advantageof conditional models, in fact, is that we can include ar-bitrary highly-dependent features without needing to es-timate their distribution, as would be required to learn agenerative model.Given fully-labeled training instances {(sj ,xj)}Mj=1,CRF training is usually performed by maximizing the pe-nalized log likelihood`(?)
=?j?t?k?kfk(sj,t?1, sj,t,x, t)??jlogZ(xj)?
?k?2k2?2(4)where the final term is a zero-mean Gaussian prior placedon parameters to avoid overfitting.
Although this maxi-mization cannot be done in closed form, it can be op-timized numerically.
Particularly effective are gradient-based methods that use approximate second-order infor-mation, such as conjugate gradient and limited-memoryBFGS (Byrd et al, 1994).
For more information oncurrent training methods for CRFs, see Sha and Pereira(2003).3 Dynamic CRFsDynamic conditional random fields (Sutton et al, 2004)extend linear-chain CRFs in the same way that dynamicBayes nets (Dean & Kanazawa, 1989) extend HMMs.Rather than having a single monolithic state variable,DCRFs factorize the state at each time step by an undi-rected model.Formally, DCRFs are the class of conditionally-trainedundirected models that repeat structure and parametersover a sequence.
If we denote by ?c(yc,t,xt) the repe-tition of clique c at time step t, then a DCRF defines theprobability of a label sequence s given the input x as:p(s|x) =?t ?c(yc,t,xt)Z(x), (5)where as before, the clique templates are parameterizedin terms of input features as?c(yc,t,xt) = exp{?k?kfk(yc,t,xt)}.
(6)Exact inference in DCRFs can be performed byforward-backward in the cross product state space, if thecross-product space is not so large as to be infeasible.Otherwise, approximate methods must be used; in ourexperience, loopy belief propagation is often effectivein grid-shaped DCRFs.
Even if inference is performedmonolithically, however, a factorized state representationis still useful because it requires much fewer parame-ters than a fully-parameterized linear chain in the cross-product state space.749Sutton et al (2004) introduced the factorial CRF(FCRF), in which the factorized state structure is a grid(Figure 1).
FCRFs were originally applied to jointlyperforming interdependent language processing tasks, inparticular part-of-speech tagging and noun-phrase chunk-ing.
The previous work on FCRFs used joint training,which requires a single training set that is jointly labeledfor all tasks in the cascade.
For many tasks such datais not readily available, for example, labeling syntac-tic parse trees for every new Web extraction task wouldbe prohibitively expensive.
In this paper, we train thesubtasks separately, which allows us the freedom to uselarge, standard data sets for well-studied subtasks such asnamed-entity recognition.4 Alternatives for Learning TransferIn this section, we enumerate several classes of methodsfor learning transfer, based on the amount and type ofinteraction they allow between the tasks.
The principaldifferences between methods are whether the individualtasks are performed separately in a cascade or jointly;whether a single prediction from the lower task is used,or several; and what kind of confidence information isshared between the subtasks.The main types of transfer learning methods are:1.
Cascaded training and testing.
This is the traditionalapproach in NLP, in which the single best predictionfrom the old task is used in the new task at trainingand test time.
In this paper, we show that allowingricher interactions between the subtasks can benefitperformance.2.
Joint training and testing.
In this family of ap-proaches, a single model is trained to perform all thesubtasks at once.
For example, in Caruana?s workon multitask learning (Caruana, 1997), a neural net-work is trained to jointly performmultiple classifica-tion tasks, with hidden nodes that form a shared rep-resentation among the tasks.
Jointly trained meth-ods allow potentially the richest interaction betweentasks, but can be expensive in both computation timerequired for training and in human effort required tolabel the joint training data.Exact inference in a jointly-trained model, suchas forward-backward in an FCRF, implicitly con-siders all possible subtask predictions with confi-dence given by the model?s probability of the pre-diction.
However, for computational efficiency, wecan use inference methods such as particle filteringand sparse message-passing (Pal et al, 2005), whichcommunicate only a limited number of predictionsbetween sections of the model.Main TaskSubtask ASubtask BInputFigure 1: Graphical model for the jointly-decoded CRF.All of the pairwise cliques also have links to the observedinput, although we omit these edges in the diagram forclarity.3.
Joint testing with cascaded training.
Although ajoint model over all the subtasks can have better per-formance, it is often much more expensive to train.One approach for reducing training time is cascadedtraining, which provides both computational effi-ciency and the ability to reuse large, standard train-ing sets for the subtasks.
At test time, though, theseparately-trained models are combined into a sin-gle model, so that joint decoding can propagate in-formation between the tasks.Even with cascaded training, it is possible to pre-serve some uncertainty in the subtask?s predictions.Instead of using only a single subtask predictionfor training the main task, the subtask can pass up-wards a lattice of likely predictions, each of whichis weighted by the model?s confidence.
This has theadvantage of making the training procedure moresimilar to the joint testing procedure, in which allpossible subtask predictions are considered.In the next two sections, we describe and evaluatejoint testing with cascaded training for transfer learningin linear-chain CRFs.
At training time, only the bestsubtask prediction is used, without any confidence infor-mation.
Even though this is perhaps the simplest joint-testing/cascaded-training method, we show that it stillleads to a significant gain in accuracy.5 Composition of CRFsIn this section we briefly describe how we combineindividually-trained linear-chain CRFs using composi-tion.
For a series of N cascaded tasks, we train indi-vidual CRFs separately on each task, using the predictionof the previous CRF as a feature.
We index the CRFsby i, so that the state of CRF i at time t is denoted sit.Thus, the feature functions for CRF i are of the formf ik(sit?1, sit, si?1t ,x, t)?that is, they depend not only onthe observed input x and the transition (sit?1 ?
sit) but750wt = wwt matches [A-Z][a-z]+wt matches [A-Z][A-Z]+wt matches [A-Z]wt matches [A-Z]+wt matches [A-Z]+[a-z]+[A-Z]+[a-z]wt appears in list of first names,last names, honorifics, etc.wt appears to be part of a time followed by a dashwt appears to be part of a time preceded by a dashwt appears to be part of a dateTt = Tqk(x, t + ?)
for all k and ?
?
[?4, 4]Table 1: Input features qk(x, t) for the seminars data.
Inthe above wt is the word at position t, Tt is the POS tagat position t, w ranges over all words in the training data,and T ranges over all Penn Treebank part-of-speech tags.The ?appears to be?
features are based on hand-designedregular expressions that can span several tokens.also on the state si?1t of the previous transducer.We also add all conjunctions of the input features andthe previous transducer?s state, for example, a feature thatis 1 if the current state is SPEAKERNAME, the previ-ous transducer predicted PERSONNAME, and the previ-ous word is Host:.To perform joint decoding at test time, we form thecomposition of the individual CRFs, viewed as finite-state transducers.
That is, we define a new linear-chainCRF whose state space is the cross product of the statesof the individual CRFs, and whose transition costs are thesum of the transition costs of the individual CRFs.Formally, let S1, S2, .
.
.
SN be the state sets and?1,?2, .
.
.
?N the weights of the individual CRFs.
Thenthe state set of the combined CRF is S = S1?S2?
.
.
.
?SN .
We will denote weight k in an individual CRF i by?ik and a single feature by fik(sit?1, sit, si?1t ,x, t).
Thenfor s ?
S, the combined model is given by:p(s|x) =?t exp{?Ni=1?k ?ikfik(sit?1, sit, si?1t ,x, t)}Z(x).
(7)The graphical model for the combined model is the fac-torial CRF in Figure 1.6 Experiments6.1 Email Seminar AnnouncementsWe evaluate joint decoding on a collection of 485 e-mailmessages announcing seminars at Carnegie Mellon Uni-versity, gathered by Freitag (1998).
The messages areannotated with the seminar?s starting time, ending time,location, and speaker.
This data set has been the sub-ject of much previous work using a wide variety of learn-ing methods.
Despite all this work, however, the best50 100 150 200 2500.10.20.30.40.50.60.70.8Number of training instancesF1JointCascadedFigure 2: Learning curves for the seminars data set onthe speaker field, averaged over 10-fold cross validation.Joint training performs equivalently to cascaded decodingwith 25% more data.reported systems have precision and recall on speakernames of only about 70%?too low to use in a practicalsystem.
This task is so challenging because the messagesare written by many different people, who each have dif-ferent ways of presenting the announcement information.Because the task includes finding locations and per-son names, the output of a named-entity tagger is a use-ful feature.
It is not a perfectly indicative feature, how-ever, because many other kinds of person names appear inseminar announcements?for example, names of facultyhosts, departmental secretaries, and sponsors of lectureseries.
For example, the token Host: indicates stronglyboth that what follows is a person name, but that personis not the seminars?
speaker.Even so, named-entity predictions do improve per-formance on this task.
We use the predictions from aCRF named-entity tagger that we trained on the standardCoNLL 2003 English data set.
The CoNLL 2003 dataset consists of newswire articles from Reuters labeled aseither people, locations, organizations, or miscellaneousentities.
It is much larger than the seminar announce-ments data set.
While the named-entity data contains203,621 tokens for training, the seminar announcementsdata set contains only slightly over 60,000 training to-kens.Previous work on the seminars data has used a one-field-per-document evaluation.
That is, for each field, theCRF selects a single field value from its Viterbi path, andthis extraction is counted as correct if it exactly matchesany of the true field mentions in the document.
We com-pute precision and recall following this convention, andreport their harmonic mean F1.
As in the previous work,751System stime etime location speaker overallWHISK (Soderland, 1999) 92.6 86.1 66.6 18.3 65.9SRV (Freitag, 1998) 98.5 77.9 72.7 56.3 76.4HMM (Frietag & McCallum, 1999) 98.5 62.1 78.6 76.6 78.9RAPIER (Califf & Mooney, 1999) 95.9 94.6 73.4 53.1 79.3SNOW-IE (Roth & Wen-tau Yih, 2001) 99.6 96.3 75.2 73.8 86.2(LP)2 (Ciravegna, 2001) 99.0 95.5 75.0 77.6 86.8CRF (no transfer) This paper 99.1 97.3 81.0 73.7 87.8CRF (cascaded) This paper 99.2 96.0 84.3 74.2 88.4CRF (joint) This paper 99.1 96.0 85.3 76.3 89.2Table 2: Comparison of F1 performance on the seminars data.
Joint decoding performs significantly better thancascaded decoding.
The overall column is the mean of the other four.
(This table was adapted from Peshkin andPfeffer (2003).
)we use 10-fold cross validation with a 50/50 training/testsplit.
We use a spherical Gaussian prior on parameterswith variance ?2 = 0.5.We evaluate whether joint decoding with cascadedtraining performs better than cascaded training and de-coding.
Table 2 compares cascaded and joint decodingfor CRFs with other previous results from the literature.1The features we use are listed in Table 1.
Although previ-ous work has used very different feature sets, we includea no-transfer CRF baseline to assess the impact of transferfrom the CoNLL data set.
All the CRF runs used exactlythe same features.On the most challenging fields, location and speaker,cascaded transfer is more accurate than no transfer at all,and joint decoding is more accurate than cascaded decod-ing.
In particular, for speaker, we see an error reductionof 8% by using joint decoding over cascaded.
The differ-ence in F1 between cascaded and joint decoding is statis-tically significant for speaker (paired t-test; p = 0.017)but only marginally significant for location (p = 0.067).Our results are competitive with previous work; for ex-ample, on location, the CRF is more accurate than any ofthe existing systems.Examining the trained models, we can observe botherrors made by the general-purpose named entity tagger,and how they can be corrected by considering the sem-inars labels.
In newswire text, long runs of capitalizedwords are rare, often indicating the name of an entity.
Inemail announcements, runs of capitalized words are com-mon in formatted text blocks like:Location: Baker HallHost: Michael ErdmannIn this type of situation, the named entity tagger oftenmistakes Host: for the name of an entity, especially be-cause the word precedingHost is also capitalized.
On oneof the cross-validated testing sets, of 80 occurrences of1We omit one relevant paper (Peshkin & Pfeffer, 2003) be-cause its evaluation method differs from all the other previouswork.wt = wwt matches [A-Z][a-z]+wt matches [A-Z][A-Z]+wt matches [A-Z]wt matches [A-Z]+wt matches [A-Z]+[a-z]+[A-Z]+[a-z]wt is punctuationwt appears in list of first names, last names, honorifics, etc.qk(x, t + ?)
for all k and ?
?
[?2, 2]Conjunction qk(x, t) and qk?
(x, t) for all features k, k?Conjunction qk(x, t) and qk?
(x, t + 1) for all features k, k?Table 3: Input features qk(x, t) for the ACE named-entitydata.
In the above wt is the word at position t, and wranges over all words in the training data.the wordHost:, the named-entity tagger labels 52 as somekind of entity.
When joint decoding is used, however,only 20 occurrences are labeled as entities.
Recall thatthe joint model uses exactly the same weights as the cas-caded model; the only difference is that the joint modeltakes into account information about the seminar labelswhen choosing named-entity labels.
This is an exampleof how domain-specific information from the main taskcan improve performance on a more standard, general-purpose subtask.Figure 2 shows the difference in performance betweenjoint and cascaded decoding as a function of training setsize.
Cascaded decoding with the full training set of 242emails performs equivalently to joint decoding on only181 training instances, a 25% reduction in the trainingset.In summary, even with a simple cascaded trainingmethod on a well-studied data set, joint decoding per-forms better for transfer than cascaded decoding.6.2 Entity RecognitionIn this section we give results on joint decoding for trans-fer between two newswire data sets with similar but over-lapping label sets.
The Automatic Content Extraction(ACE) data set is another standard entity recognition data752Transfer Typenone cascaded jointPerson name 81.0 86.9 87.3Person nominal 34.9 36.1 42.4Organization name 53.9 62.6 61.1Organization nominal 33.7 35.3 40.8GPE name 78.5 84.0 84.0GPE nominal 51.2 54.1 59.2Table 4: Comparison of F1 performance between jointand cascaded training on the ACE entity recognition task.GPE means geopolitical entities, such as countries.
Jointdecoding helps most on the harder nominal (commonnoun) references.
These results were obtained using asmall subset of the training set.set, containing 422 stories from newspaper, newswire,and broadcast news.
Unlike the CoNLL entity recog-nition data set, in which only proper names of entitiesare annotated, the ACE data includes annotation both fornamed entities like United States, and also nominal men-tions of entities like the nation.
Thus, although the inputtext has similar distribution in the CoNLL NER and ACEdata set, the label distributions are very different.Current state-of-the-art systems for the ACE task (Flo-rian et al, 2004) use the predictions of other named-entityrecognizers as features, that is, they use cascaded trans-fer.
In this experiment, we test whether the transfer be-tween these datasets can be further improved using jointdecoding.
We train a CRF entity recognizer on the ACEdataset, with the output of a named-entity entity recog-nizer trained on the CoNLL 2003 English data set.
TheCoNLL recognizer is the same CRF as was used in theprevious experiment.
In these results, we use a subset of10% of the ACE training data.
Table 3 lists the featureswe use.
Table 4 compares the results on some represen-tative entity types.
Again, cascaded decoding for transferis better than no transfer at al, and joint decoding is betterthan cascaded decoding.
Interestingly, joint decoding hasmost impact on the harder nominal references, showingmarked improvement over the cascaded approach.7 Related WorkResearchers have begun to accumulate experimental ev-idence that joint training and decoding yields better per-formance than the cascaded approach.
As mentioned ear-lier, the original work on dynamic CRFs (Sutton et al,2004) demonstrated improvement due to joint training inthe domains of part-of-speech tagging and noun-phrasechunking.
Also, Carreras and Marquez (Carreras &Ma`rquez, 2004) have obtained increased performance inclause finding by training a cascade of perceptrons tominimize a single global error function.
Finally, Miller etal.
(Miller et al, 2000) have combined entity recognition,parsing, and relation extraction into a jointly-trained sin-gle statistical parsing model that achieves improved per-formance on all the subtasks.Part of the contribution of the current work is to sug-gest that joint decoding can be effective even when jointtraining is not possible because jointly-labeled data is un-available.
For example, Miller et al report that they orig-inally attempted to annotate newswire articles for all ofparsing, relations, and named entities, but they stoppedbecause the annotation was simply too expensive.
In-stead they hand-labeled relations only, assigning parsetrees to the training set using a standard statistical parser,which is potentially less flexible than the cascaded train-ing, because the model for main task is trained explicitlyto match the noisy subtask predictions, rather than beingfree to correct them.In the speech community, it is common to com-pose separately trained weighted finite-state transducers(Mohri et al, 2002) for joint decoding.
Our method ex-tends this work to conditional models.
Ordinarily, higher-level transducers depend only on the output of the previ-ous transducer: a transducer for the lexicon, for exam-ple, consumes only phonemes, not the original speechsignal.
In text, however, such an approach is not sensi-ble, because there is simply not enough information inthe named-entity labels, for example, to do extraction ifthe original words are discarded.
In a conditional model,weights in higher-level transducers are free to depend onarbitrary features of the original input without any addi-tional complexity in the finite-state structure.Finally, stacked sequential learning (Cohen & Car-valho, 2005) is another potential method for combiningthe results of the subtask transducers.
In this generalmeta-learning method for sequential classification, firsta base classifier predicts the label at each time step, andthen a higher-level classifier makes the final prediction,including as features a window of predictions from thebase classifier.
For transfer learning, this would corre-spond to having an independent base model for each sub-task (e.g., independent CRFs for named-entity and sem-inars), and then having a higher-level CRF that includesas a feature the predictions from the base models.8 ConclusionIn this paper we have shown that joint decoding improvestransfer between interdependent NLP tasks, even whenthe old task is named-entity recognition, for which highlyaccurate systems exist.
The rich features afforded by aconditional model allow the new task to influence the pre-753dictions of the old task, an effect that is only possible withjoint decoding.It is now common for researchers to publicly releasetrained models for standard tasks such as part-of-speechtagging, named-entity recognition, and parsing.
This pa-per has implications for how such standard tools are pack-aged.
Our results suggest that off-the-shelf NLP toolswill need not only to provide a single-best prediction, butalso to be engineered so that they can easily communicatedistributions over predictions to models for higher-leveltasks.AcknowledgmentsThis work was supported in part by the Center for Intelligent In-formation Retrieval, in part by The Central Intelligence Agency,the National Security Agency and National Science Foundationunder NSF grants #IIS-0326249 and #IIS-0427594, and in partby the Defense Advanced Research Projects Agency (DARPA),through the Department of the Interior, NBC, Acquisition Ser-vices Division, under contract number NBCHD030010.
Anyopinions, findings and conclusions or recommendations ex-pressed in this material are the author(s) and do not necessarilyreflect those of the sponsor.ReferencesByrd, R. H., Nocedal, J., & Schnabel, R. B.
(1994).
Repre-sentations of quasi-Newton matrices and their use in limitedmemory methods.
Math.
Program., 63, 129?156.Califf, M. E., & Mooney, R. J.
(1999).
Relational learningof pattern-match rules for information extraction.
Proceed-ings of the Sixteenth National Conference on Artificial Intel-ligence (AAAI-99) (pp.
328?334).Carreras, X., & Marquez, L. (2004).
Introduction to theCoNLL-2004 shared task: Semantic role labeling.
Proceed-ings of CoNLL-2004.Carreras, X., & Ma`rquez, L. (2004).
Online learning via globalfeedback for phrase recognition.
In S. Thrun, L. Saul andB.
Scho?lkopf (Eds.
), Advances in neural information pro-cessing systems 16.
Cambridge, MA: MIT Press.Caruana, R. (1997).
Multitask learning.
Machine Learning, 28,41?75.Ciravegna, F. (2001).
Adaptive information extraction from textby rule induction and generalisation.
Proceedings of 17th In-ternational Joint Conference on Artificial Intelligence (IJCAI2001).Cohen, W. W., & Carvalho, V. R. (2005).
Stacked sequentiallearning.
International Joint Conference on Artificial Intelli-gence (pp.
671?676).Dean, T., & Kanazawa, K. (1989).
A model for reasoning aboutpersistence and causation.
Computational Intelligence, 5(3),142?150.Florian, R., Hassan, H., Ittycheriah, A., Jing, H., Kambhatla,N., Luo, X., Nicolov, N., Roukos, S., & Zhang, T. (2004).
Astatistical model for multilingual entity detection and track-ing.
In HLT/NAACL 2004.Freitag, D. (1998).
Machine learning for information extractionin informal domains.
Doctoral dissertation, Carnegie MellonUniversity.Frietag, D., & McCallum, A.
(1999).
Information extractionwith HMMs and shrinkage.
AAAI Workshop on MachineLearning for Information Extraction.Lafferty, J., McCallum, A., & Pereira, F. (2001).
Conditionalrandom fields: Probabilistic models for segmenting and la-beling sequence data.
Proc.
18th International Conf.
on Ma-chine Learning.Miller, S., Fox, H., Ramshaw, L. A., & Weischedel, R. M.(2000).
A novel use of statistical parsing to extract infor-mation from text.
ANLP 2000 (pp.
226?233).Mohri, M., Pereira, F., & Riley, M. (2002).
Weighted finite-state transducers in speech recognition.
Computer Speechand Language, 16, 69?88.Pal, C., Sutton, C., & McCallum, A.
(2005).
Fast inferenceand learning with sparse belief propagation (Technical Re-port IR-433).
Center for Intelligent Information Retrieval,University of Massachusetts.Peshkin, L., & Pfeffer, A.
(2003).
Bayesian information extrac-tion network.
Proceedings of the International Joint Confer-ence on Artificial Intelligence (IJCAI).Roth, D., & Wen-tau Yih (2001).
Relational learning via propo-sitional algorithms: An information extraction case study.
In-ternational Joint Conference on Artificial Intelligence (pp.1257?1263).Sha, F., & Pereira, F. (2003).
Shallow parsing with conditionalrandom fields.
Proceedings of HLT-NAACL 2003.Soderland, S. (1999).
Learning information extraction rules forsemi-structured and free text.
Machine Learning, 233?272.Sutton, C., Rohanimanesh, K., & McCallum, A.
(2004).
Dy-namic conditional random fields: Factorized probabilisticmodels for labeling and segmenting sequence data.
Proceed-ings of the Twenty-First International Conference on Ma-chine Learning (ICML).Tjong Kim Sang, E. F., & De Meulder, F. (2003).
Introduc-tion to the CoNLL-2003 shared task: Language-independentnamed entity recognition.
Proceedings of CoNLL-2003 (pp.142?147).
Edmonton, Canada.754
